unint64_t sub_1DC538208()
{
  unint64_t result;

  result = qword_1F036BC40;
  if (!qword_1F036BC40)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC636B04, &type metadata for WebSubscriptionAuthenticationEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036BC40);
  }
  return result;
}

uint64_t WebSubscriptionAuthenticationEvent.Model.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t result;
  int *v17;
  int v18;
  char *v19;
  int v20;
  int *v21;
  char *v22;
  __int128 v23;
  __int128 v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  __int128 v28;
  char v29;
  char v30;
  char *v31;
  uint64_t v32;
  __int16 v33;
  char *v34;
  char *v35;
  __int128 v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  __int128 v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  uint64_t v50;
  char *v51;
  int *v52;
  _BYTE v53[32];
  __int128 v54;
  __int128 v55;
  int v56;
  int v57;
  char v58;

  v5 = sub_1DC62ABA8();
  v48 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v45 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC538AF0(0, &qword_1F036BC48, MEMORY[0x1E0DED048]);
  v47 = v8;
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v45 - v10;
  v52 = (int *)type metadata accessor for WebSubscriptionAuthenticationEvent.Model(0);
  MEMORY[0x1E0C80A78](v52);
  v51 = (char *)&v45 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = a1[3];
  v49 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v13);
  sub_1DC538208();
  sub_1DC62B5E0();
  if (v2)
  {
    v50 = v2;
    v15 = v51;
    result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v49);
    v17 = v52;
    v57 = 0;
    v18 = 0;
    goto LABEL_7;
  }
  v45 = a2;
  v46 = v9;
  v53[0] = 0;
  sub_1DC4B6788(&qword_1EDB0E278, MEMORY[0x1E0CF8688]);
  sub_1DC62B454();
  v14 = v5;
  v19 = v51;
  (*(void (**)(char *, char *, uint64_t))(v48 + 32))(v51, v7, v5);
  v58 = 1;
  sub_1DC4C18A0();
  sub_1DC62B400();
  v20 = v56;
  v21 = v52;
  v22 = &v19[v52[5]];
  v23 = *(_OWORD *)&v53[16];
  *(_OWORD *)v22 = *(_OWORD *)v53;
  *((_OWORD *)v22 + 1) = v23;
  v24 = v55;
  *((_OWORD *)v22 + 2) = v54;
  *((_OWORD *)v22 + 3) = v24;
  *((_DWORD *)v22 + 16) = v20;
  v58 = 2;
  sub_1DC4BEF94();
  sub_1DC62B454();
  v25 = *(_QWORD *)&v53[8];
  v26 = *(_QWORD *)&v53[16];
  v27 = &v19[v21[6]];
  *v27 = v53[0];
  *((_QWORD *)v27 + 1) = v25;
  *((_QWORD *)v27 + 2) = v26;
  v58 = 3;
  sub_1DC4C8E40();
  sub_1DC62B454();
  v28 = *(_OWORD *)&v53[16];
  v29 = v54;
  v30 = BYTE1(v54);
  v31 = &v19[v21[7]];
  *(_OWORD *)v31 = *(_OWORD *)v53;
  *((_OWORD *)v31 + 1) = v28;
  v31[32] = v29;
  v31[33] = v30;
  v58 = 4;
  sub_1DC4BEDAC();
  sub_1DC62B454();
  v32 = *(_QWORD *)&v53[8];
  v33 = *(_WORD *)&v53[16];
  v34 = &v19[v21[8]];
  *(_QWORD *)v34 = *(_QWORD *)v53;
  *((_QWORD *)v34 + 1) = v32;
  *((_WORD *)v34 + 8) = v33;
  v58 = 5;
  sub_1DC4C8FC0();
  sub_1DC62B400();
  v35 = &v19[v21[9]];
  v36 = *(_OWORD *)&v53[16];
  *(_OWORD *)v35 = *(_OWORD *)v53;
  *((_OWORD *)v35 + 1) = v36;
  *((_OWORD *)v35 + 2) = v54;
  v58 = 6;
  sub_1DC4FC710();
  sub_1DC62B454();
  v37 = *(_QWORD *)&v53[8];
  v38 = &v19[v21[10]];
  *(_QWORD *)v38 = *(_QWORD *)v53;
  *((_QWORD *)v38 + 1) = v37;
  v58 = 7;
  sub_1DC4FCA10();
  sub_1DC62B454();
  v19[v21[11]] = v53[0];
  v58 = 8;
  sub_1DC536E40();
  sub_1DC62B454();
  v57 = 1;
  v39 = &v19[v21[12]];
  *v39 = v53[0];
  *(_OWORD *)(v39 + 8) = *(_OWORD *)&v53[8];
  v58 = 9;
  sub_1DC51D598();
  sub_1DC62B400();
  v50 = 0;
  v51[v52[13]] = v53[0];
  v58 = 10;
  sub_1DC522304();
  v40 = v50;
  sub_1DC62B400();
  v50 = v40;
  if (v40)
  {
    (*(void (**)(char *, uint64_t))(v46 + 8))(v11, v47);
    v18 = 0;
  }
  else
  {
    *(_OWORD *)&v51[v52[14]] = *(_OWORD *)v53;
    v58 = 11;
    sub_1DC5371B0();
    v41 = v50;
    sub_1DC62B400();
    v50 = v41;
    if (!v41)
    {
      (*(void (**)(char *, uint64_t))(v46 + 8))(v11, v47);
      v42 = (uint64_t)v51;
      v43 = &v51[v52[15]];
      v44 = *(_OWORD *)&v53[16];
      *(_OWORD *)v43 = *(_OWORD *)v53;
      *((_OWORD *)v43 + 1) = v44;
      *((_OWORD *)v43 + 2) = v54;
      sub_1DC538B4C(v42, v45);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v49);
      return sub_1DC538B90(v42);
    }
    (*(void (**)(char *, uint64_t))(v46 + 8))(v11, v47);
    v18 = 1;
  }
  v15 = v51;
  v17 = v52;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v49);
  (*(void (**)(char *, uint64_t))(v48 + 8))(v15, v14);
  sub_1DC4D88E4(*(_QWORD *)&v15[v17[5]], *(_QWORD *)&v15[v17[5] + 8]);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1DC4CB1B4(*(_QWORD *)&v15[v17[9]], *(_QWORD *)&v15[v17[9] + 8], *(_QWORD *)&v15[v17[9] + 16]);
  result = swift_bridgeObjectRelease();
  if ((v57 & 1) == 0)
  {
LABEL_7:
    if (!v18)
      return result;
    return sub_1DC519178(*(_QWORD *)&v15[v17[14]], *(_QWORD *)&v15[v17[14] + 8]);
  }
  result = swift_bridgeObjectRelease();
  if ((v18 & 1) == 0)
    return result;
  return sub_1DC519178(*(_QWORD *)&v15[v17[14]], *(_QWORD *)&v15[v17[14] + 8]);
}

void sub_1DC538AF0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1DC538208();
    v7 = a3(a1, &type metadata for WebSubscriptionAuthenticationEvent.Model.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1DC538B4C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for WebSubscriptionAuthenticationEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DC538B90(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for WebSubscriptionAuthenticationEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1DC538BCC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return WebSubscriptionAuthenticationEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_1DC538BE0(_QWORD *a1)
{
  return WebSubscriptionAuthenticationEvent.Model.encode(to:)(a1);
}

uint64_t sub_1DC538BF4@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4B2C68(&qword_1F0369010, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1F036BBE0, a1);
}

uint64_t sub_1DC538C18@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4B2C68(&qword_1F0369018, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1F036BBF8, a1);
}

uint64_t sub_1DC538C3C@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v4 = *MEMORY[0x1E0CF8128];
  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 104))(a2, v4, v5);
  v6 = a2 + a1[5];
  v7 = *MEMORY[0x1E0CF8120];
  sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 104))(v6, v7, v8);
  v9 = a2 + a1[6];
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 104))(v9, v4, v10);
  v11 = a2 + a1[7];
  sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 104))(v11, v4, v12);
  v13 = a2 + a1[8];
  sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 104))(v13, v4, v14);
  v15 = a2 + a1[9];
  sub_1DC4B4B50(0, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 104))(v15, v7, v16);
  v17 = a2 + a1[10];
  sub_1DC4B4B50(0, &qword_1EDB0E7F8, (void (*)(void))sub_1DC4FC710, (void (*)(void))sub_1DC4FC754);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 104))(v17, v4, v18);
  v19 = a2 + a1[11];
  sub_1DC4B4B50(0, &qword_1EDB0E770, (void (*)(void))sub_1DC4FCA10, (void (*)(void))sub_1DC4FCA54);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 104))(v19, v4, v20);
  v21 = a2 + a1[12];
  sub_1DC4B4B50(0, &qword_1F036BC10, (void (*)(void))sub_1DC536E40, (void (*)(void))sub_1DC536E84);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 104))(v21, v4, v22);
  v23 = a2 + a1[13];
  sub_1DC4B4B50(0, &qword_1F036BC28, (void (*)(void))sub_1DC51D598, (void (*)(void))sub_1DC51D5E0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 104))(v23, v7, v24);
  v25 = a2 + a1[14];
  sub_1DC4B4B50(0, &qword_1F036BC30, (void (*)(void))sub_1DC522304, (void (*)(void))sub_1DC52234C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 104))(v25, v7, v26);
  v27 = a2 + a1[15];
  sub_1DC4B4B50(0, &qword_1EDB0E780, (void (*)(void))sub_1DC5371B0, (void (*)(void))sub_1DC5371F4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 104))(v27, v7, v28);
}

uint64_t *initializeBufferWithCopyOfBuffer for WebSubscriptionAuthenticationEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v52 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v52 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_1DC4B6600();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = a3[6];
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
    v16 = a3[7];
    v17 = (char *)a1 + v16;
    v18 = (char *)a2 + v16;
    sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
    v20 = a3[8];
    v21 = (char *)a1 + v20;
    v22 = (char *)a2 + v20;
    sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v21, v22, v23);
    v24 = a3[9];
    v25 = (char *)a1 + v24;
    v26 = (char *)a2 + v24;
    sub_1DC4B4B50(0, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v25, v26, v27);
    v28 = a3[10];
    v29 = (char *)a1 + v28;
    v30 = (char *)a2 + v28;
    sub_1DC4B4B50(0, &qword_1EDB0E7F8, (void (*)(void))sub_1DC4FC710, (void (*)(void))sub_1DC4FC754);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 16))(v29, v30, v31);
    v32 = a3[11];
    v33 = (char *)a1 + v32;
    v34 = (char *)a2 + v32;
    sub_1DC4B4B50(0, &qword_1EDB0E770, (void (*)(void))sub_1DC4FCA10, (void (*)(void))sub_1DC4FCA54);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 16))(v33, v34, v35);
    v36 = a3[12];
    v37 = (char *)a1 + v36;
    v38 = (char *)a2 + v36;
    sub_1DC4B4B50(0, &qword_1F036BC10, (void (*)(void))sub_1DC536E40, (void (*)(void))sub_1DC536E84);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 16))(v37, v38, v39);
    v40 = a3[13];
    v41 = (char *)a1 + v40;
    v42 = (char *)a2 + v40;
    sub_1DC4B4B50(0, &qword_1F036BC28, (void (*)(void))sub_1DC51D598, (void (*)(void))sub_1DC51D5E0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v43 - 8) + 16))(v41, v42, v43);
    v44 = a3[14];
    v45 = (char *)a1 + v44;
    v46 = (char *)a2 + v44;
    sub_1DC4B4B50(0, &qword_1F036BC30, (void (*)(void))sub_1DC522304, (void (*)(void))sub_1DC52234C);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v47 - 8) + 16))(v45, v46, v47);
    v48 = a3[15];
    v49 = (char *)a1 + v48;
    v50 = (char *)a2 + v48;
    sub_1DC4B4B50(0, &qword_1EDB0E780, (void (*)(void))sub_1DC5371B0, (void (*)(void))sub_1DC5371F4);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v51 - 8) + 16))(v49, v50, v51);
  }
  return a1;
}

uint64_t destroy for WebSubscriptionAuthenticationEvent(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + a2[5];
  sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = a1 + a2[6];
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  v9 = a1 + a2[7];
  sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  v11 = a1 + a2[8];
  sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
  v13 = a1 + a2[9];
  sub_1DC4B4B50(0, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v13, v14);
  v15 = a1 + a2[10];
  sub_1DC4B4B50(0, &qword_1EDB0E7F8, (void (*)(void))sub_1DC4FC710, (void (*)(void))sub_1DC4FC754);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v15, v16);
  v17 = a1 + a2[11];
  sub_1DC4B4B50(0, &qword_1EDB0E770, (void (*)(void))sub_1DC4FCA10, (void (*)(void))sub_1DC4FCA54);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(v17, v18);
  v19 = a1 + a2[12];
  sub_1DC4B4B50(0, &qword_1F036BC10, (void (*)(void))sub_1DC536E40, (void (*)(void))sub_1DC536E84);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 8))(v19, v20);
  v21 = a1 + a2[13];
  sub_1DC4B4B50(0, &qword_1F036BC28, (void (*)(void))sub_1DC51D598, (void (*)(void))sub_1DC51D5E0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 8))(v21, v22);
  v23 = a1 + a2[14];
  sub_1DC4B4B50(0, &qword_1F036BC30, (void (*)(void))sub_1DC522304, (void (*)(void))sub_1DC52234C);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 8))(v23, v24);
  v25 = a1 + a2[15];
  sub_1DC4B4B50(0, &qword_1EDB0E780, (void (*)(void))sub_1DC5371B0, (void (*)(void))sub_1DC5371F4);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 8))(v25, v26);
}

uint64_t initializeWithCopy for WebSubscriptionAuthenticationEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1DC4B4B50(0, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1DC4B4B50(0, &qword_1EDB0E7F8, (void (*)(void))sub_1DC4FC710, (void (*)(void))sub_1DC4FC754);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 16))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1DC4B4B50(0, &qword_1EDB0E770, (void (*)(void))sub_1DC4FCA10, (void (*)(void))sub_1DC4FCA54);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 16))(v32, v33, v34);
  v35 = a3[12];
  v36 = a1 + v35;
  v37 = a2 + v35;
  sub_1DC4B4B50(0, &qword_1F036BC10, (void (*)(void))sub_1DC536E40, (void (*)(void))sub_1DC536E84);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 16))(v36, v37, v38);
  v39 = a3[13];
  v40 = a1 + v39;
  v41 = a2 + v39;
  sub_1DC4B4B50(0, &qword_1F036BC28, (void (*)(void))sub_1DC51D598, (void (*)(void))sub_1DC51D5E0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 16))(v40, v41, v42);
  v43 = a3[14];
  v44 = a1 + v43;
  v45 = a2 + v43;
  sub_1DC4B4B50(0, &qword_1F036BC30, (void (*)(void))sub_1DC522304, (void (*)(void))sub_1DC52234C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 16))(v44, v45, v46);
  v47 = a3[15];
  v48 = a1 + v47;
  v49 = a2 + v47;
  sub_1DC4B4B50(0, &qword_1EDB0E780, (void (*)(void))sub_1DC5371B0, (void (*)(void))sub_1DC5371F4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 16))(v48, v49, v50);
  return a1;
}

uint64_t assignWithCopy for WebSubscriptionAuthenticationEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 24))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 24))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 24))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1DC4B4B50(0, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 24))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1DC4B4B50(0, &qword_1EDB0E7F8, (void (*)(void))sub_1DC4FC710, (void (*)(void))sub_1DC4FC754);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 24))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1DC4B4B50(0, &qword_1EDB0E770, (void (*)(void))sub_1DC4FCA10, (void (*)(void))sub_1DC4FCA54);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 24))(v32, v33, v34);
  v35 = a3[12];
  v36 = a1 + v35;
  v37 = a2 + v35;
  sub_1DC4B4B50(0, &qword_1F036BC10, (void (*)(void))sub_1DC536E40, (void (*)(void))sub_1DC536E84);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 24))(v36, v37, v38);
  v39 = a3[13];
  v40 = a1 + v39;
  v41 = a2 + v39;
  sub_1DC4B4B50(0, &qword_1F036BC28, (void (*)(void))sub_1DC51D598, (void (*)(void))sub_1DC51D5E0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 24))(v40, v41, v42);
  v43 = a3[14];
  v44 = a1 + v43;
  v45 = a2 + v43;
  sub_1DC4B4B50(0, &qword_1F036BC30, (void (*)(void))sub_1DC522304, (void (*)(void))sub_1DC52234C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 24))(v44, v45, v46);
  v47 = a3[15];
  v48 = a1 + v47;
  v49 = a2 + v47;
  sub_1DC4B4B50(0, &qword_1EDB0E780, (void (*)(void))sub_1DC5371B0, (void (*)(void))sub_1DC5371F4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 24))(v48, v49, v50);
  return a1;
}

uint64_t initializeWithTake for WebSubscriptionAuthenticationEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1DC4B4B50(0, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1DC4B4B50(0, &qword_1EDB0E7F8, (void (*)(void))sub_1DC4FC710, (void (*)(void))sub_1DC4FC754);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 32))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1DC4B4B50(0, &qword_1EDB0E770, (void (*)(void))sub_1DC4FCA10, (void (*)(void))sub_1DC4FCA54);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 32))(v32, v33, v34);
  v35 = a3[12];
  v36 = a1 + v35;
  v37 = a2 + v35;
  sub_1DC4B4B50(0, &qword_1F036BC10, (void (*)(void))sub_1DC536E40, (void (*)(void))sub_1DC536E84);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 32))(v36, v37, v38);
  v39 = a3[13];
  v40 = a1 + v39;
  v41 = a2 + v39;
  sub_1DC4B4B50(0, &qword_1F036BC28, (void (*)(void))sub_1DC51D598, (void (*)(void))sub_1DC51D5E0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 32))(v40, v41, v42);
  v43 = a3[14];
  v44 = a1 + v43;
  v45 = a2 + v43;
  sub_1DC4B4B50(0, &qword_1F036BC30, (void (*)(void))sub_1DC522304, (void (*)(void))sub_1DC52234C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 32))(v44, v45, v46);
  v47 = a3[15];
  v48 = a1 + v47;
  v49 = a2 + v47;
  sub_1DC4B4B50(0, &qword_1EDB0E780, (void (*)(void))sub_1DC5371B0, (void (*)(void))sub_1DC5371F4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 32))(v48, v49, v50);
  return a1;
}

uint64_t assignWithTake for WebSubscriptionAuthenticationEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 40))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 40))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 40))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1DC4B4B50(0, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 40))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1DC4B4B50(0, &qword_1EDB0E7F8, (void (*)(void))sub_1DC4FC710, (void (*)(void))sub_1DC4FC754);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 40))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1DC4B4B50(0, &qword_1EDB0E770, (void (*)(void))sub_1DC4FCA10, (void (*)(void))sub_1DC4FCA54);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 40))(v32, v33, v34);
  v35 = a3[12];
  v36 = a1 + v35;
  v37 = a2 + v35;
  sub_1DC4B4B50(0, &qword_1F036BC10, (void (*)(void))sub_1DC536E40, (void (*)(void))sub_1DC536E84);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 40))(v36, v37, v38);
  v39 = a3[13];
  v40 = a1 + v39;
  v41 = a2 + v39;
  sub_1DC4B4B50(0, &qword_1F036BC28, (void (*)(void))sub_1DC51D598, (void (*)(void))sub_1DC51D5E0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 40))(v40, v41, v42);
  v43 = a3[14];
  v44 = a1 + v43;
  v45 = a2 + v43;
  sub_1DC4B4B50(0, &qword_1F036BC30, (void (*)(void))sub_1DC522304, (void (*)(void))sub_1DC52234C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 40))(v44, v45, v46);
  v47 = a3[15];
  v48 = a1 + v47;
  v49 = a2 + v47;
  sub_1DC4B4B50(0, &qword_1EDB0E780, (void (*)(void))sub_1DC5371B0, (void (*)(void))sub_1DC5371F4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 40))(v48, v49, v50);
  return a1;
}

uint64_t getEnumTagSinglePayload for WebSubscriptionAuthenticationEvent()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC53A528(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  sub_1DC4B6600();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
    v12 = *(_QWORD *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
    {
      v8 = v11;
      v13 = a3[5];
    }
    else
    {
      sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
      v12 = *(_QWORD *)(v14 - 8);
      if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
      {
        v8 = v14;
        v13 = a3[6];
      }
      else
      {
        sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
        v12 = *(_QWORD *)(v15 - 8);
        if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
        {
          v8 = v15;
          v13 = a3[7];
        }
        else
        {
          sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
          v12 = *(_QWORD *)(v16 - 8);
          if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
          {
            v8 = v16;
            v13 = a3[8];
          }
          else
          {
            sub_1DC4B4B50(0, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
            v12 = *(_QWORD *)(v17 - 8);
            if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
            {
              v8 = v17;
              v13 = a3[9];
            }
            else
            {
              sub_1DC4B4B50(0, &qword_1EDB0E7F8, (void (*)(void))sub_1DC4FC710, (void (*)(void))sub_1DC4FC754);
              v12 = *(_QWORD *)(v18 - 8);
              if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
              {
                v8 = v18;
                v13 = a3[10];
              }
              else
              {
                sub_1DC4B4B50(0, &qword_1EDB0E770, (void (*)(void))sub_1DC4FCA10, (void (*)(void))sub_1DC4FCA54);
                v12 = *(_QWORD *)(v19 - 8);
                if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                {
                  v8 = v19;
                  v13 = a3[11];
                }
                else
                {
                  sub_1DC4B4B50(0, &qword_1F036BC10, (void (*)(void))sub_1DC536E40, (void (*)(void))sub_1DC536E84);
                  v12 = *(_QWORD *)(v20 - 8);
                  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                  {
                    v8 = v20;
                    v13 = a3[12];
                  }
                  else
                  {
                    sub_1DC4B4B50(0, &qword_1F036BC28, (void (*)(void))sub_1DC51D598, (void (*)(void))sub_1DC51D5E0);
                    v12 = *(_QWORD *)(v21 - 8);
                    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                    {
                      v8 = v21;
                      v13 = a3[13];
                    }
                    else
                    {
                      sub_1DC4B4B50(0, &qword_1F036BC30, (void (*)(void))sub_1DC522304, (void (*)(void))sub_1DC52234C);
                      v12 = *(_QWORD *)(v22 - 8);
                      if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                      {
                        v8 = v22;
                        v13 = a3[14];
                      }
                      else
                      {
                        sub_1DC4B4B50(0, &qword_1EDB0E780, (void (*)(void))sub_1DC5371B0, (void (*)(void))sub_1DC5371F4);
                        v8 = v23;
                        v12 = *(_QWORD *)(v23 - 8);
                        v13 = a3[15];
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t storeEnumTagSinglePayload for WebSubscriptionAuthenticationEvent()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC53A870(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  sub_1DC4B6600();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = a4[5];
    }
    else
    {
      sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
      v14 = *(_QWORD *)(v16 - 8);
      if (*(_DWORD *)(v14 + 84) == a3)
      {
        v10 = v16;
        v15 = a4[6];
      }
      else
      {
        sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
        v14 = *(_QWORD *)(v17 - 8);
        if (*(_DWORD *)(v14 + 84) == a3)
        {
          v10 = v17;
          v15 = a4[7];
        }
        else
        {
          sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
          v14 = *(_QWORD *)(v18 - 8);
          if (*(_DWORD *)(v14 + 84) == a3)
          {
            v10 = v18;
            v15 = a4[8];
          }
          else
          {
            sub_1DC4B4B50(0, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
            v14 = *(_QWORD *)(v19 - 8);
            if (*(_DWORD *)(v14 + 84) == a3)
            {
              v10 = v19;
              v15 = a4[9];
            }
            else
            {
              sub_1DC4B4B50(0, &qword_1EDB0E7F8, (void (*)(void))sub_1DC4FC710, (void (*)(void))sub_1DC4FC754);
              v14 = *(_QWORD *)(v20 - 8);
              if (*(_DWORD *)(v14 + 84) == a3)
              {
                v10 = v20;
                v15 = a4[10];
              }
              else
              {
                sub_1DC4B4B50(0, &qword_1EDB0E770, (void (*)(void))sub_1DC4FCA10, (void (*)(void))sub_1DC4FCA54);
                v14 = *(_QWORD *)(v21 - 8);
                if (*(_DWORD *)(v14 + 84) == a3)
                {
                  v10 = v21;
                  v15 = a4[11];
                }
                else
                {
                  sub_1DC4B4B50(0, &qword_1F036BC10, (void (*)(void))sub_1DC536E40, (void (*)(void))sub_1DC536E84);
                  v14 = *(_QWORD *)(v22 - 8);
                  if (*(_DWORD *)(v14 + 84) == a3)
                  {
                    v10 = v22;
                    v15 = a4[12];
                  }
                  else
                  {
                    sub_1DC4B4B50(0, &qword_1F036BC28, (void (*)(void))sub_1DC51D598, (void (*)(void))sub_1DC51D5E0);
                    v14 = *(_QWORD *)(v23 - 8);
                    if (*(_DWORD *)(v14 + 84) == a3)
                    {
                      v10 = v23;
                      v15 = a4[13];
                    }
                    else
                    {
                      sub_1DC4B4B50(0, &qword_1F036BC30, (void (*)(void))sub_1DC522304, (void (*)(void))sub_1DC52234C);
                      v14 = *(_QWORD *)(v24 - 8);
                      if (*(_DWORD *)(v14 + 84) == a3)
                      {
                        v10 = v24;
                        v15 = a4[14];
                      }
                      else
                      {
                        sub_1DC4B4B50(0, &qword_1EDB0E780, (void (*)(void))sub_1DC5371B0, (void (*)(void))sub_1DC5371F4);
                        v10 = v25;
                        v14 = *(_QWORD *)(v25 - 8);
                        v15 = a4[15];
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_1DC53ABB4()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;

  sub_1DC4B6600();
  if (v0 <= 0x3F)
  {
    sub_1DC4B4B50(319, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
    if (v1 <= 0x3F)
    {
      sub_1DC4B4B50(319, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
      if (v2 <= 0x3F)
      {
        sub_1DC4B4B50(319, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
        if (v3 <= 0x3F)
        {
          sub_1DC4B4B50(319, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
          if (v4 <= 0x3F)
          {
            sub_1DC4B4B50(319, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
            if (v5 <= 0x3F)
            {
              sub_1DC4B4B50(319, &qword_1EDB0E7F8, (void (*)(void))sub_1DC4FC710, (void (*)(void))sub_1DC4FC754);
              if (v6 <= 0x3F)
              {
                sub_1DC4B4B50(319, &qword_1EDB0E770, (void (*)(void))sub_1DC4FCA10, (void (*)(void))sub_1DC4FCA54);
                if (v7 <= 0x3F)
                {
                  sub_1DC4B4B50(319, &qword_1F036BC10, (void (*)(void))sub_1DC536E40, (void (*)(void))sub_1DC536E84);
                  if (v8 <= 0x3F)
                  {
                    sub_1DC4B4B50(319, &qword_1F036BC28, (void (*)(void))sub_1DC51D598, (void (*)(void))sub_1DC51D5E0);
                    if (v9 <= 0x3F)
                    {
                      sub_1DC4B4B50(319, &qword_1F036BC30, (void (*)(void))sub_1DC522304, (void (*)(void))sub_1DC52234C);
                      if (v10 <= 0x3F)
                      {
                        sub_1DC4B4B50(319, &qword_1EDB0E780, (void (*)(void))sub_1DC5371B0, (void (*)(void))sub_1DC5371F4);
                        if (v11 <= 0x3F)
                          swift_initStructMetadata();
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

_QWORD *initializeBufferWithCopyOfBuffer for WebSubscriptionAuthenticationEvent.Model(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  __int128 v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  _OWORD *v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  __int128 v55;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v13 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1DC62ABA8();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = *((_QWORD *)v10 + 1);
    if (v11)
    {
      *(_QWORD *)v9 = *(_QWORD *)v10;
      *((_QWORD *)v9 + 1) = v11;
      v12 = *((_QWORD *)v10 + 3);
      *((_QWORD *)v9 + 2) = *((_QWORD *)v10 + 2);
      *((_QWORD *)v9 + 3) = v12;
      v9[32] = v10[32];
      *((_QWORD *)v9 + 5) = *((_QWORD *)v10 + 5);
      v9[48] = v10[48];
      *((_QWORD *)v9 + 7) = *((_QWORD *)v10 + 7);
      *((_DWORD *)v9 + 16) = *((_DWORD *)v10 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v14 = *((_OWORD *)v10 + 3);
      *((_OWORD *)v9 + 2) = *((_OWORD *)v10 + 2);
      *((_OWORD *)v9 + 3) = v14;
      *((_DWORD *)v9 + 16) = *((_DWORD *)v10 + 16);
      v15 = *((_OWORD *)v10 + 1);
      *(_OWORD *)v9 = *(_OWORD *)v10;
      *((_OWORD *)v9 + 1) = v15;
    }
    v16 = a3[6];
    v17 = a3[7];
    v18 = (char *)a1 + v16;
    v19 = (char *)a2 + v16;
    *v18 = *v19;
    v20 = *((_QWORD *)v19 + 2);
    *((_QWORD *)v18 + 1) = *((_QWORD *)v19 + 1);
    *((_QWORD *)v18 + 2) = v20;
    v21 = (char *)a1 + v17;
    v22 = (char *)a2 + v17;
    v23 = *((_QWORD *)v22 + 1);
    *(_QWORD *)v21 = *(_QWORD *)v22;
    *((_QWORD *)v21 + 1) = v23;
    v24 = *((_QWORD *)v22 + 3);
    *((_QWORD *)v21 + 2) = *((_QWORD *)v22 + 2);
    *((_QWORD *)v21 + 3) = v24;
    v21[32] = v22[32];
    v21[33] = v22[33];
    v25 = a3[8];
    v26 = a3[9];
    v27 = (char *)a1 + v25;
    v28 = (char *)a2 + v25;
    v27[16] = v28[16];
    v29 = *((_QWORD *)v28 + 1);
    *(_QWORD *)v27 = *(_QWORD *)v28;
    *((_QWORD *)v27 + 1) = v29;
    v27[17] = v28[17];
    v30 = (char *)a1 + v26;
    v31 = (char *)a2 + v26;
    v32 = *(_QWORD *)((char *)a2 + v26 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v32)
    {
      *v30 = *v31;
      *((_QWORD *)v30 + 1) = *((_QWORD *)v31 + 1);
      *((_QWORD *)v30 + 2) = v32;
      *((_QWORD *)v30 + 3) = *((_QWORD *)v31 + 3);
      v33 = *((_QWORD *)v31 + 5);
      *((_QWORD *)v30 + 4) = *((_QWORD *)v31 + 4);
      *((_QWORD *)v30 + 5) = v33;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v34 = *((_OWORD *)v31 + 1);
      *(_OWORD *)v30 = *(_OWORD *)v31;
      *((_OWORD *)v30 + 1) = v34;
      *((_OWORD *)v30 + 2) = *((_OWORD *)v31 + 2);
    }
    v35 = a3[10];
    v36 = a3[11];
    v37 = (_QWORD *)((char *)a1 + v35);
    v38 = (_QWORD *)((char *)a2 + v35);
    v39 = v38[1];
    *v37 = *v38;
    v37[1] = v39;
    *((_BYTE *)a1 + v36) = *((_BYTE *)a2 + v36);
    v40 = a3[12];
    v41 = a3[13];
    v42 = (char *)a1 + v40;
    v43 = (char *)a2 + v40;
    *v42 = *v43;
    v44 = *((_QWORD *)v43 + 2);
    *((_QWORD *)v42 + 1) = *((_QWORD *)v43 + 1);
    *((_QWORD *)v42 + 2) = v44;
    *((_BYTE *)a1 + v41) = *((_BYTE *)a2 + v41);
    v45 = a3[14];
    v46 = (char *)a1 + v45;
    v47 = (_OWORD *)((char *)a2 + v45);
    v48 = *(_QWORD *)((char *)a2 + v45 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v48 == 1)
    {
      *(_OWORD *)v46 = *v47;
    }
    else
    {
      *(_QWORD *)v46 = *(_QWORD *)v47;
      *((_QWORD *)v46 + 1) = v48;
      swift_bridgeObjectRetain();
    }
    v49 = a3[15];
    v50 = (_QWORD *)((char *)a1 + v49);
    v51 = (_QWORD *)((char *)a2 + v49);
    v52 = v51[1];
    if (v52)
    {
      *v50 = *v51;
      v50[1] = v52;
      v53 = v51[3];
      v50[2] = v51[2];
      v50[3] = v53;
      v54 = v51[5];
      v50[4] = v51[4];
      v50[5] = v54;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v55 = *((_OWORD *)v51 + 1);
      *(_OWORD *)v50 = *(_OWORD *)v51;
      *((_OWORD *)v50 + 1) = v55;
      *((_OWORD *)v50 + 2) = *((_OWORD *)v51 + 2);
    }
  }
  return a1;
}

uint64_t destroy for WebSubscriptionAuthenticationEvent.Model(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t result;

  v4 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  if (*(_QWORD *)(a1 + a2[5] + 8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + a2[9] + 16))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + a2[14] + 8) != 1)
    swift_bridgeObjectRelease();
  result = *(_QWORD *)(a1 + a2[15] + 8);
  if (result)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for WebSubscriptionAuthenticationEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  __int128 v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _OWORD *v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  __int128 v53;

  v6 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = *(_QWORD *)(v9 + 8);
  if (v10)
  {
    *(_QWORD *)v8 = *(_QWORD *)v9;
    *(_QWORD *)(v8 + 8) = v10;
    v11 = *(_QWORD *)(v9 + 24);
    *(_QWORD *)(v8 + 16) = *(_QWORD *)(v9 + 16);
    *(_QWORD *)(v8 + 24) = v11;
    *(_BYTE *)(v8 + 32) = *(_BYTE *)(v9 + 32);
    *(_QWORD *)(v8 + 40) = *(_QWORD *)(v9 + 40);
    *(_BYTE *)(v8 + 48) = *(_BYTE *)(v9 + 48);
    *(_QWORD *)(v8 + 56) = *(_QWORD *)(v9 + 56);
    *(_DWORD *)(v8 + 64) = *(_DWORD *)(v9 + 64);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v12 = *(_OWORD *)(v9 + 48);
    *(_OWORD *)(v8 + 32) = *(_OWORD *)(v9 + 32);
    *(_OWORD *)(v8 + 48) = v12;
    *(_DWORD *)(v8 + 64) = *(_DWORD *)(v9 + 64);
    v13 = *(_OWORD *)(v9 + 16);
    *(_OWORD *)v8 = *(_OWORD *)v9;
    *(_OWORD *)(v8 + 16) = v13;
  }
  v14 = a3[6];
  v15 = a3[7];
  v16 = a1 + v14;
  v17 = a2 + v14;
  *(_BYTE *)v16 = *(_BYTE *)v17;
  v18 = *(_QWORD *)(v17 + 16);
  *(_QWORD *)(v16 + 8) = *(_QWORD *)(v17 + 8);
  *(_QWORD *)(v16 + 16) = v18;
  v19 = a1 + v15;
  v20 = a2 + v15;
  v21 = *(_QWORD *)(v20 + 8);
  *(_QWORD *)v19 = *(_QWORD *)v20;
  *(_QWORD *)(v19 + 8) = v21;
  v22 = *(_QWORD *)(v20 + 24);
  *(_QWORD *)(v19 + 16) = *(_QWORD *)(v20 + 16);
  *(_QWORD *)(v19 + 24) = v22;
  *(_BYTE *)(v19 + 32) = *(_BYTE *)(v20 + 32);
  *(_BYTE *)(v19 + 33) = *(_BYTE *)(v20 + 33);
  v23 = a3[8];
  v24 = a3[9];
  v25 = a1 + v23;
  v26 = a2 + v23;
  *(_BYTE *)(v25 + 16) = *(_BYTE *)(v26 + 16);
  v27 = *(_QWORD *)(v26 + 8);
  *(_QWORD *)v25 = *(_QWORD *)v26;
  *(_QWORD *)(v25 + 8) = v27;
  *(_BYTE *)(v25 + 17) = *(_BYTE *)(v26 + 17);
  v28 = a1 + v24;
  v29 = a2 + v24;
  v30 = *(_QWORD *)(a2 + v24 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v30)
  {
    *(_BYTE *)v28 = *(_BYTE *)v29;
    *(_QWORD *)(v28 + 8) = *(_QWORD *)(v29 + 8);
    *(_QWORD *)(v28 + 16) = v30;
    *(_QWORD *)(v28 + 24) = *(_QWORD *)(v29 + 24);
    v31 = *(_QWORD *)(v29 + 40);
    *(_QWORD *)(v28 + 32) = *(_QWORD *)(v29 + 32);
    *(_QWORD *)(v28 + 40) = v31;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v32 = *(_OWORD *)(v29 + 16);
    *(_OWORD *)v28 = *(_OWORD *)v29;
    *(_OWORD *)(v28 + 16) = v32;
    *(_OWORD *)(v28 + 32) = *(_OWORD *)(v29 + 32);
  }
  v33 = a3[10];
  v34 = a3[11];
  v35 = (_QWORD *)(a1 + v33);
  v36 = (_QWORD *)(a2 + v33);
  v37 = v36[1];
  *v35 = *v36;
  v35[1] = v37;
  *(_BYTE *)(a1 + v34) = *(_BYTE *)(a2 + v34);
  v38 = a3[12];
  v39 = a3[13];
  v40 = a1 + v38;
  v41 = a2 + v38;
  *(_BYTE *)v40 = *(_BYTE *)v41;
  v42 = *(_QWORD *)(v41 + 16);
  *(_QWORD *)(v40 + 8) = *(_QWORD *)(v41 + 8);
  *(_QWORD *)(v40 + 16) = v42;
  *(_BYTE *)(a1 + v39) = *(_BYTE *)(a2 + v39);
  v43 = a3[14];
  v44 = a1 + v43;
  v45 = (_OWORD *)(a2 + v43);
  v46 = *(_QWORD *)(a2 + v43 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v46 == 1)
  {
    *(_OWORD *)v44 = *v45;
  }
  else
  {
    *(_QWORD *)v44 = *(_QWORD *)v45;
    *(_QWORD *)(v44 + 8) = v46;
    swift_bridgeObjectRetain();
  }
  v47 = a3[15];
  v48 = (_QWORD *)(a1 + v47);
  v49 = (_QWORD *)(a2 + v47);
  v50 = v49[1];
  if (v50)
  {
    *v48 = *v49;
    v48[1] = v50;
    v51 = v49[3];
    v48[2] = v49[2];
    v48[3] = v51;
    v52 = v49[5];
    v48[4] = v49[4];
    v48[5] = v52;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v53 = *((_OWORD *)v49 + 1);
    *(_OWORD *)v48 = *(_OWORD *)v49;
    *((_OWORD *)v48 + 1) = v53;
    *((_OWORD *)v48 + 2) = *((_OWORD *)v49 + 2);
  }
  return a1;
}

uint64_t assignWithCopy for WebSubscriptionAuthenticationEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  __int128 *v31;
  uint64_t v32;
  uint64_t v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  uint64_t v38;
  _QWORD *v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;

  v6 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = *(_QWORD *)(a1 + v7 + 8);
  v11 = *(_QWORD *)(a2 + v7 + 8);
  if (v10)
  {
    if (v11)
    {
      *(_QWORD *)v8 = *(_QWORD *)v9;
      *(_QWORD *)(v8 + 8) = *(_QWORD *)(v9 + 8);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v8 + 16) = *(_QWORD *)(v9 + 16);
      *(_QWORD *)(v8 + 24) = *(_QWORD *)(v9 + 24);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_BYTE *)(v8 + 32) = *(_BYTE *)(v9 + 32);
      v12 = *(_QWORD *)(v9 + 40);
      *(_BYTE *)(v8 + 48) = *(_BYTE *)(v9 + 48);
      *(_QWORD *)(v8 + 40) = v12;
      *(_QWORD *)(v8 + 56) = *(_QWORD *)(v9 + 56);
      *(_BYTE *)(v8 + 64) = *(_BYTE *)(v9 + 64);
      *(_BYTE *)(v8 + 65) = *(_BYTE *)(v9 + 65);
      *(_BYTE *)(v8 + 66) = *(_BYTE *)(v9 + 66);
      *(_BYTE *)(v8 + 67) = *(_BYTE *)(v9 + 67);
    }
    else
    {
      sub_1DC5006BC(v8);
      *(_OWORD *)v8 = *(_OWORD *)v9;
      v15 = *(_OWORD *)(v9 + 32);
      v14 = *(_OWORD *)(v9 + 48);
      v16 = *(_OWORD *)(v9 + 16);
      *(_DWORD *)(v8 + 64) = *(_DWORD *)(v9 + 64);
      *(_OWORD *)(v8 + 32) = v15;
      *(_OWORD *)(v8 + 48) = v14;
      *(_OWORD *)(v8 + 16) = v16;
    }
  }
  else if (v11)
  {
    *(_QWORD *)v8 = *(_QWORD *)v9;
    *(_QWORD *)(v8 + 8) = *(_QWORD *)(v9 + 8);
    *(_QWORD *)(v8 + 16) = *(_QWORD *)(v9 + 16);
    *(_QWORD *)(v8 + 24) = *(_QWORD *)(v9 + 24);
    *(_BYTE *)(v8 + 32) = *(_BYTE *)(v9 + 32);
    v13 = *(_QWORD *)(v9 + 40);
    *(_BYTE *)(v8 + 48) = *(_BYTE *)(v9 + 48);
    *(_QWORD *)(v8 + 40) = v13;
    *(_QWORD *)(v8 + 56) = *(_QWORD *)(v9 + 56);
    *(_BYTE *)(v8 + 64) = *(_BYTE *)(v9 + 64);
    *(_BYTE *)(v8 + 65) = *(_BYTE *)(v9 + 65);
    *(_BYTE *)(v8 + 66) = *(_BYTE *)(v9 + 66);
    *(_BYTE *)(v8 + 67) = *(_BYTE *)(v9 + 67);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)v8 = *(_OWORD *)v9;
    v17 = *(_OWORD *)(v9 + 16);
    v18 = *(_OWORD *)(v9 + 32);
    v19 = *(_OWORD *)(v9 + 48);
    *(_DWORD *)(v8 + 64) = *(_DWORD *)(v9 + 64);
    *(_OWORD *)(v8 + 32) = v18;
    *(_OWORD *)(v8 + 48) = v19;
    *(_OWORD *)(v8 + 16) = v17;
  }
  v20 = a3[6];
  v21 = a1 + v20;
  v22 = a2 + v20;
  *(_BYTE *)v21 = *(_BYTE *)v22;
  *(_QWORD *)(v21 + 8) = *(_QWORD *)(v22 + 8);
  *(_QWORD *)(v21 + 16) = *(_QWORD *)(v22 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v23 = a3[7];
  v24 = a1 + v23;
  v25 = a2 + v23;
  *(_QWORD *)v24 = *(_QWORD *)(a2 + v23);
  *(_QWORD *)(v24 + 8) = *(_QWORD *)(a2 + v23 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v24 + 16) = *(_QWORD *)(v25 + 16);
  *(_QWORD *)(v24 + 24) = *(_QWORD *)(v25 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v24 + 32) = *(_BYTE *)(v25 + 32);
  *(_BYTE *)(v24 + 33) = *(_BYTE *)(v25 + 33);
  v26 = a3[8];
  v27 = a1 + v26;
  v28 = a2 + v26;
  *(_QWORD *)v27 = *(_QWORD *)(a2 + v26);
  *(_QWORD *)(v27 + 8) = *(_QWORD *)(a2 + v26 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v27 + 16) = *(_BYTE *)(v28 + 16);
  *(_BYTE *)(v27 + 17) = *(_BYTE *)(v28 + 17);
  v29 = a3[9];
  v30 = a1 + v29;
  v31 = (__int128 *)(a2 + v29);
  v32 = *(_QWORD *)(a1 + v29 + 16);
  v33 = *(_QWORD *)(a2 + v29 + 16);
  if (v32)
  {
    if (v33)
    {
      *(_BYTE *)v30 = *(_BYTE *)v31;
      *(_QWORD *)(v30 + 8) = *((_QWORD *)v31 + 1);
      *(_QWORD *)(v30 + 16) = *((_QWORD *)v31 + 2);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_DWORD *)(v30 + 24) = *((_DWORD *)v31 + 6);
      *(_DWORD *)(v30 + 28) = *((_DWORD *)v31 + 7);
      *(_QWORD *)(v30 + 32) = *((_QWORD *)v31 + 4);
      *(_QWORD *)(v30 + 40) = *((_QWORD *)v31 + 5);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1DC4CDAF4(v30);
      v35 = v31[1];
      v34 = v31[2];
      *(_OWORD *)v30 = *v31;
      *(_OWORD *)(v30 + 16) = v35;
      *(_OWORD *)(v30 + 32) = v34;
    }
  }
  else if (v33)
  {
    *(_BYTE *)v30 = *(_BYTE *)v31;
    *(_QWORD *)(v30 + 8) = *((_QWORD *)v31 + 1);
    *(_QWORD *)(v30 + 16) = *((_QWORD *)v31 + 2);
    *(_DWORD *)(v30 + 24) = *((_DWORD *)v31 + 6);
    *(_DWORD *)(v30 + 28) = *((_DWORD *)v31 + 7);
    *(_QWORD *)(v30 + 32) = *((_QWORD *)v31 + 4);
    *(_QWORD *)(v30 + 40) = *((_QWORD *)v31 + 5);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v36 = *v31;
    v37 = v31[2];
    *(_OWORD *)(v30 + 16) = v31[1];
    *(_OWORD *)(v30 + 32) = v37;
    *(_OWORD *)v30 = v36;
  }
  v38 = a3[10];
  v39 = (_QWORD *)(a1 + v38);
  v40 = (_QWORD *)(a2 + v38);
  *v39 = *v40;
  v39[1] = v40[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + a3[11]) = *(_BYTE *)(a2 + a3[11]);
  v41 = a3[12];
  v42 = a1 + v41;
  v43 = a2 + v41;
  *(_BYTE *)v42 = *(_BYTE *)v43;
  *(_QWORD *)(v42 + 8) = *(_QWORD *)(v43 + 8);
  *(_QWORD *)(v42 + 16) = *(_QWORD *)(v43 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + a3[13]) = *(_BYTE *)(a2 + a3[13]);
  v44 = a3[14];
  v45 = (_QWORD *)(a1 + v44);
  v46 = (_QWORD *)(a2 + v44);
  v47 = *(_QWORD *)(a1 + v44 + 8);
  v48 = *(_QWORD *)(a2 + v44 + 8);
  if (v47 == 1)
  {
    if (v48 != 1)
    {
      *v45 = *v46;
      v45[1] = v46[1];
      swift_bridgeObjectRetain();
      goto LABEL_22;
    }
    goto LABEL_20;
  }
  if (v48 == 1)
  {
    sub_1DC53BA54((uint64_t)v45);
LABEL_20:
    *(_OWORD *)v45 = *(_OWORD *)v46;
    goto LABEL_22;
  }
  *v45 = *v46;
  v45[1] = v46[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_22:
  v49 = a3[15];
  v50 = (_QWORD *)(a1 + v49);
  v51 = (_QWORD *)(a2 + v49);
  v52 = *(_QWORD *)(a1 + v49 + 8);
  v53 = v51[1];
  if (v52)
  {
    if (v53)
    {
      *v50 = *v51;
      v50[1] = v51[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v50[2] = v51[2];
      v50[3] = v51[3];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v50[4] = v51[4];
      v50[5] = v51[5];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1DC53BA88((uint64_t)v50);
      v55 = *((_OWORD *)v51 + 1);
      v54 = *((_OWORD *)v51 + 2);
      *(_OWORD *)v50 = *(_OWORD *)v51;
      *((_OWORD *)v50 + 1) = v55;
      *((_OWORD *)v50 + 2) = v54;
    }
  }
  else if (v53)
  {
    *v50 = *v51;
    v50[1] = v51[1];
    v50[2] = v51[2];
    v50[3] = v51[3];
    v50[4] = v51[4];
    v50[5] = v51[5];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v56 = *(_OWORD *)v51;
    v57 = *((_OWORD *)v51 + 2);
    *((_OWORD *)v50 + 1) = *((_OWORD *)v51 + 1);
    *((_OWORD *)v50 + 2) = v57;
    *(_OWORD *)v50 = v56;
  }
  return a1;
}

uint64_t sub_1DC53BA54(uint64_t a1)
{
  destroy for ViewData();
  return a1;
}

uint64_t sub_1DC53BA88(uint64_t a1)
{
  destroy for NonNewsArticleData();
  return a1;
}

uint64_t initializeWithTake for WebSubscriptionAuthenticationEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  __int128 *v21;
  __int128 v22;
  uint64_t v23;
  uint64_t v24;
  _OWORD *v25;
  _OWORD *v26;
  __int128 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _OWORD *v33;
  _OWORD *v34;
  __int128 v35;

  v6 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = a2 + v7;
  *(_DWORD *)(v9 + 64) = *(_DWORD *)(v10 + 64);
  v11 = *(_OWORD *)(v10 + 48);
  *(_OWORD *)(v9 + 32) = *(_OWORD *)(v10 + 32);
  *(_OWORD *)(v9 + 48) = v11;
  v12 = *(_OWORD *)(v10 + 16);
  *(_OWORD *)v9 = *(_OWORD *)v10;
  *(_OWORD *)(v9 + 16) = v12;
  v13 = a1 + v8;
  v14 = a2 + v8;
  *(_QWORD *)(v13 + 16) = *(_QWORD *)(v14 + 16);
  *(_OWORD *)v13 = *(_OWORD *)v14;
  v15 = a3[7];
  v16 = a3[8];
  v17 = a1 + v15;
  v18 = a2 + v15;
  *(_WORD *)(v17 + 32) = *(_WORD *)(v18 + 32);
  v19 = *(_OWORD *)(v18 + 16);
  *(_OWORD *)v17 = *(_OWORD *)v18;
  *(_OWORD *)(v17 + 16) = v19;
  v20 = a1 + v16;
  v21 = (__int128 *)(a2 + v16);
  v22 = *v21;
  *(_WORD *)(v20 + 16) = *((_WORD *)v21 + 8);
  *(_OWORD *)v20 = v22;
  v23 = a3[9];
  v24 = a3[10];
  v25 = (_OWORD *)(a1 + v23);
  v26 = (_OWORD *)(a2 + v23);
  v27 = v26[1];
  *v25 = *v26;
  v25[1] = v27;
  v25[2] = v26[2];
  *(_OWORD *)(a1 + v24) = *(_OWORD *)(a2 + v24);
  v28 = a3[12];
  *(_BYTE *)(a1 + a3[11]) = *(_BYTE *)(a2 + a3[11]);
  v29 = a1 + v28;
  v30 = a2 + v28;
  *(_OWORD *)v29 = *(_OWORD *)v30;
  *(_QWORD *)(v29 + 16) = *(_QWORD *)(v30 + 16);
  v31 = a3[14];
  *(_BYTE *)(a1 + a3[13]) = *(_BYTE *)(a2 + a3[13]);
  *(_OWORD *)(a1 + v31) = *(_OWORD *)(a2 + v31);
  v32 = a3[15];
  v33 = (_OWORD *)(a1 + v32);
  v34 = (_OWORD *)(a2 + v32);
  v35 = v34[1];
  *v33 = *v34;
  v33[1] = v35;
  v33[2] = v34[2];
  return a1;
}

uint64_t assignWithTake for WebSubscriptionAuthenticationEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  __int128 v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  __int128 v54;

  v6 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  if (*(_QWORD *)(a1 + v7 + 8))
  {
    v10 = *(_QWORD *)(v9 + 8);
    if (v10)
    {
      *(_QWORD *)v8 = *(_QWORD *)v9;
      *(_QWORD *)(v8 + 8) = v10;
      swift_bridgeObjectRelease();
      v11 = *(_QWORD *)(v9 + 24);
      *(_QWORD *)(v8 + 16) = *(_QWORD *)(v9 + 16);
      *(_QWORD *)(v8 + 24) = v11;
      swift_bridgeObjectRelease();
      *(_BYTE *)(v8 + 32) = *(_BYTE *)(v9 + 32);
      *(_QWORD *)(v8 + 40) = *(_QWORD *)(v9 + 40);
      *(_BYTE *)(v8 + 48) = *(_BYTE *)(v9 + 48);
      *(_QWORD *)(v8 + 56) = *(_QWORD *)(v9 + 56);
      *(_BYTE *)(v8 + 64) = *(_BYTE *)(v9 + 64);
      *(_BYTE *)(v8 + 65) = *(_BYTE *)(v9 + 65);
      *(_BYTE *)(v8 + 66) = *(_BYTE *)(v9 + 66);
      *(_BYTE *)(v8 + 67) = *(_BYTE *)(v9 + 67);
      goto LABEL_6;
    }
    sub_1DC5006BC(v8);
  }
  v12 = *(_OWORD *)(v9 + 48);
  *(_OWORD *)(v8 + 32) = *(_OWORD *)(v9 + 32);
  *(_OWORD *)(v8 + 48) = v12;
  *(_DWORD *)(v8 + 64) = *(_DWORD *)(v9 + 64);
  v13 = *(_OWORD *)(v9 + 16);
  *(_OWORD *)v8 = *(_OWORD *)v9;
  *(_OWORD *)(v8 + 16) = v13;
LABEL_6:
  v14 = a3[6];
  v15 = a1 + v14;
  v16 = a2 + v14;
  *(_BYTE *)v15 = *(_BYTE *)v16;
  v18 = *(_QWORD *)(v16 + 8);
  v17 = *(_QWORD *)(v16 + 16);
  *(_QWORD *)(v15 + 8) = v18;
  *(_QWORD *)(v15 + 16) = v17;
  swift_bridgeObjectRelease();
  v19 = a3[7];
  v20 = a1 + v19;
  v21 = a2 + v19;
  v22 = *(_QWORD *)(a2 + v19 + 8);
  *(_QWORD *)v20 = *(_QWORD *)(a2 + v19);
  *(_QWORD *)(v20 + 8) = v22;
  swift_bridgeObjectRelease();
  v23 = *(_QWORD *)(v21 + 24);
  *(_QWORD *)(v20 + 16) = *(_QWORD *)(v21 + 16);
  *(_QWORD *)(v20 + 24) = v23;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v20 + 32) = *(_BYTE *)(v21 + 32);
  *(_BYTE *)(v20 + 33) = *(_BYTE *)(v21 + 33);
  v24 = a3[8];
  v25 = a1 + v24;
  v26 = a2 + v24;
  v27 = *(_QWORD *)(a2 + v24 + 8);
  *(_QWORD *)v25 = *(_QWORD *)(a2 + v24);
  *(_QWORD *)(v25 + 8) = v27;
  swift_bridgeObjectRelease();
  *(_WORD *)(v25 + 16) = *(_WORD *)(v26 + 16);
  v28 = a3[9];
  v29 = a1 + v28;
  v30 = a2 + v28;
  if (*(_QWORD *)(a1 + v28 + 16))
  {
    v31 = *(_QWORD *)(v30 + 16);
    if (v31)
    {
      *(_BYTE *)v29 = *(_BYTE *)v30;
      *(_QWORD *)(v29 + 8) = *(_QWORD *)(v30 + 8);
      *(_QWORD *)(v29 + 16) = v31;
      swift_bridgeObjectRelease();
      *(_QWORD *)(v29 + 24) = *(_QWORD *)(v30 + 24);
      v32 = *(_QWORD *)(v30 + 40);
      *(_QWORD *)(v29 + 32) = *(_QWORD *)(v30 + 32);
      *(_QWORD *)(v29 + 40) = v32;
      swift_bridgeObjectRelease();
      goto LABEL_11;
    }
    sub_1DC4CDAF4(v29);
  }
  v33 = *(_OWORD *)(v30 + 16);
  *(_OWORD *)v29 = *(_OWORD *)v30;
  *(_OWORD *)(v29 + 16) = v33;
  *(_OWORD *)(v29 + 32) = *(_OWORD *)(v30 + 32);
LABEL_11:
  v34 = a3[10];
  v35 = (_QWORD *)(a1 + v34);
  v36 = (uint64_t *)(a2 + v34);
  v38 = *v36;
  v37 = v36[1];
  *v35 = v38;
  v35[1] = v37;
  swift_bridgeObjectRelease();
  v39 = a3[12];
  *(_BYTE *)(a1 + a3[11]) = *(_BYTE *)(a2 + a3[11]);
  v40 = a1 + v39;
  v41 = a2 + v39;
  *(_BYTE *)v40 = *(_BYTE *)v41;
  v43 = *(_QWORD *)(v41 + 8);
  v42 = *(_QWORD *)(v41 + 16);
  *(_QWORD *)(v40 + 8) = v43;
  *(_QWORD *)(v40 + 16) = v42;
  swift_bridgeObjectRelease();
  v44 = a3[14];
  *(_BYTE *)(a1 + a3[13]) = *(_BYTE *)(a2 + a3[13]);
  v45 = a1 + v44;
  v46 = a2 + v44;
  if (*(_QWORD *)(a1 + v44 + 8) == 1)
  {
LABEL_14:
    *(_OWORD *)v45 = *(_OWORD *)v46;
    goto LABEL_16;
  }
  v47 = *(_QWORD *)(v46 + 8);
  if (v47 == 1)
  {
    sub_1DC53BA54(a1 + v44);
    goto LABEL_14;
  }
  *(_QWORD *)v45 = *(_QWORD *)v46;
  *(_QWORD *)(v45 + 8) = v47;
  swift_bridgeObjectRelease();
LABEL_16:
  v48 = a3[15];
  v49 = a1 + v48;
  v50 = a2 + v48;
  if (!*(_QWORD *)(a1 + v48 + 8))
  {
LABEL_20:
    v54 = *(_OWORD *)(v50 + 16);
    *(_OWORD *)v49 = *(_OWORD *)v50;
    *(_OWORD *)(v49 + 16) = v54;
    *(_OWORD *)(v49 + 32) = *(_OWORD *)(v50 + 32);
    return a1;
  }
  v51 = *(_QWORD *)(v50 + 8);
  if (!v51)
  {
    sub_1DC53BA88(v49);
    goto LABEL_20;
  }
  *(_QWORD *)v49 = *(_QWORD *)v50;
  *(_QWORD *)(v49 + 8) = v51;
  swift_bridgeObjectRelease();
  v52 = *(_QWORD *)(v50 + 24);
  *(_QWORD *)(v49 + 16) = *(_QWORD *)(v50 + 16);
  *(_QWORD *)(v49 + 24) = v52;
  swift_bridgeObjectRelease();
  v53 = *(_QWORD *)(v50 + 40);
  *(_QWORD *)(v49 + 32) = *(_QWORD *)(v50 + 32);
  *(_QWORD *)(v49 + 40) = v53;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for WebSubscriptionAuthenticationEvent.Model()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC53BED4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_1DC62ABA8();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 24) + 16);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for WebSubscriptionAuthenticationEvent.Model()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC53BF60(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_1DC62ABA8();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 24) + 16) = (a2 - 1);
  return result;
}

uint64_t sub_1DC53BFDC()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1DC62ABA8();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for WebSubscriptionAuthenticationEvent.Model.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 11 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 11) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF5)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF4)
    return ((uint64_t (*)(void))((char *)&loc_1DC53C0F4 + 4 * byte_1DC6367D1[v4]))();
  *a1 = a2 + 11;
  return ((uint64_t (*)(void))((char *)sub_1DC53C128 + 4 * byte_1DC6367CC[v4]))();
}

uint64_t sub_1DC53C128(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC53C130(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DC53C138);
  return result;
}

uint64_t sub_1DC53C144(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DC53C14CLL);
  *(_BYTE *)result = a2 + 11;
  return result;
}

uint64_t sub_1DC53C150(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC53C158(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for WebSubscriptionAuthenticationEvent.Model.CodingKeys()
{
  return &type metadata for WebSubscriptionAuthenticationEvent.Model.CodingKeys;
}

unint64_t sub_1DC53C178()
{
  unint64_t result;

  result = qword_1F036BDC0;
  if (!qword_1F036BDC0)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC636ADC, &type metadata for WebSubscriptionAuthenticationEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036BDC0);
  }
  return result;
}

unint64_t sub_1DC53C1C0()
{
  unint64_t result;

  result = qword_1F036BDC8;
  if (!qword_1F036BDC8)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC636A4C, &type metadata for WebSubscriptionAuthenticationEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036BDC8);
  }
  return result;
}

unint64_t sub_1DC53C208()
{
  unint64_t result;

  result = qword_1F036BDD0;
  if (!qword_1F036BDD0)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC636A74, &type metadata for WebSubscriptionAuthenticationEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036BDD0);
  }
  return result;
}

uint64_t sub_1DC53C24C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x746144746E657665 && a2 == 0xE900000000000061;
  if (v2 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x697472417377656ELL && a2 == 0xEF61746144656C63 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6174614464656566 && a2 == 0xE800000000000000 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x446C656E6E616863 && a2 == 0xEB00000000617461 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6174614477656976 && a2 == 0xE800000000000000 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x74614470756F7267 && a2 == 0xE900000000000061 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001DC64C5D0 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x446C6C6177796170 && a2 == 0xEB00000000617461 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x6144746C75736572 && a2 == 0xEA00000000006174 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001DC64CB30 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0x7272656665526461 && a2 == 0xEE00617461446C61 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0x6E676961706D6163 && a2 == 0xEC00000061746144)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else
  {
    v6 = sub_1DC62B520();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 11;
    else
      return 12;
  }
}

uint64_t IssueData.issueID.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t IssueData.issueID.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*IssueData.issueID.modify())()
{
  return nullsub_1;
}

StocksAnalytics::IssueData __swiftcall IssueData.init(issueID:)(StocksAnalytics::IssueData issueID)
{
  StocksAnalytics::IssueData *v1;

  *v1 = issueID;
  return issueID;
}

uint64_t sub_1DC53C82C()
{
  return 0x44496575737369;
}

uint64_t sub_1DC53C844@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x44496575737369 && a2 == 0xE700000000000000)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_1DC62B520();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1DC53C8D8()
{
  sub_1DC53CA1C();
  return sub_1DC62B604();
}

uint64_t sub_1DC53C900()
{
  sub_1DC53CA1C();
  return sub_1DC62B610();
}

uint64_t IssueData.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  sub_1DC53CB84(0, &qword_1EDB0E550, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC53CA1C();
  sub_1DC62B5F8();
  sub_1DC62B4B4();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_1DC53CA1C()
{
  unint64_t result;

  result = qword_1EDB0E520;
  if (!qword_1EDB0E520)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC636CC4, &type metadata for IssueData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB0E520);
  }
  return result;
}

uint64_t IssueData.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  sub_1DC53CB84(0, &qword_1F036BDD8, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v14 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC53CA1C();
  sub_1DC62B5E0();
  if (!v2)
  {
    v10 = sub_1DC62B424();
    v12 = v11;
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *a2 = v10;
    a2[1] = v12;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1DC53CB84(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1DC53CA1C();
    v7 = a3(a1, &type metadata for IssueData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1DC53CBE8@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return IssueData.init(from:)(a1, a2);
}

uint64_t sub_1DC53CBFC(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  sub_1DC53CB84(0, &qword_1EDB0E550, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC53CA1C();
  sub_1DC62B5F8();
  sub_1DC62B4B4();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

ValueMetadata *type metadata accessor for IssueData()
{
  return &type metadata for IssueData;
}

uint64_t storeEnumTagSinglePayload for IssueData.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1DC53CD40 + 4 * byte_1DC636B54[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1DC53CD60 + 4 * byte_1DC636B59[v4]))();
}

_BYTE *sub_1DC53CD40(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1DC53CD60(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1DC53CD68(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1DC53CD70(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1DC53CD78(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1DC53CD80(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for IssueData.CodingKeys()
{
  return &type metadata for IssueData.CodingKeys;
}

unint64_t sub_1DC53CDA0()
{
  unint64_t result;

  result = qword_1F036BDE0;
  if (!qword_1F036BDE0)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC636C9C, &type metadata for IssueData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036BDE0);
  }
  return result;
}

unint64_t sub_1DC53CDE8()
{
  unint64_t result;

  result = qword_1EDB0E530;
  if (!qword_1EDB0E530)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC636C0C, &type metadata for IssueData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB0E530);
  }
  return result;
}

unint64_t sub_1DC53CE30()
{
  unint64_t result;

  result = qword_1EDB0E528;
  if (!qword_1EDB0E528)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC636C34, &type metadata for IssueData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB0E528);
  }
  return result;
}

void __swiftcall UserBundleSubscriptionContextData.init(bundleSubscriptionStatus:isBundlePurchaser:isAmplifyUser:bundleSubscriptionPurchaseID:sBundlePurchaseID:isPaidBundleViaOfferTrialist:)(StocksAnalytics::UserBundleSubscriptionContextData *__return_ptr retstr, StocksAnalytics::BundleSubscriptionStatus bundleSubscriptionStatus, Swift::Bool isBundlePurchaser, Swift::Bool isAmplifyUser, Swift::String_optional bundleSubscriptionPurchaseID, Swift::String_optional sBundlePurchaseID, Swift::Bool isPaidBundleViaOfferTrialist)
{
  retstr->bundleSubscriptionStatus = *(_BYTE *)bundleSubscriptionStatus;
  retstr->isBundlePurchaser = isBundlePurchaser;
  retstr->isAmplifyUser = isAmplifyUser;
  retstr->bundleSubscriptionPurchaseID = bundleSubscriptionPurchaseID;
  retstr->sBundlePurchaseID = sBundlePurchaseID;
  retstr->isPaidBundleViaOfferTrialist = isPaidBundleViaOfferTrialist;
}

void UserBundleSubscriptionContextData.bundleSubscriptionStatus.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

_BYTE *UserBundleSubscriptionContextData.bundleSubscriptionStatus.setter(_BYTE *result)
{
  _BYTE *v1;

  *v1 = *result;
  return result;
}

uint64_t (*UserBundleSubscriptionContextData.bundleSubscriptionStatus.modify())()
{
  return nullsub_1;
}

uint64_t UserBundleSubscriptionContextData.isBundlePurchaser.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 1);
}

uint64_t UserBundleSubscriptionContextData.isBundlePurchaser.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 1) = result;
  return result;
}

uint64_t (*UserBundleSubscriptionContextData.isBundlePurchaser.modify())()
{
  return nullsub_1;
}

uint64_t UserBundleSubscriptionContextData.isAmplifyUser.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 2);
}

uint64_t UserBundleSubscriptionContextData.isAmplifyUser.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 2) = result;
  return result;
}

uint64_t (*UserBundleSubscriptionContextData.isAmplifyUser.modify())()
{
  return nullsub_1;
}

uint64_t UserBundleSubscriptionContextData.bundleSubscriptionPurchaseID.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t UserBundleSubscriptionContextData.bundleSubscriptionPurchaseID.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 8) = a1;
  *(_QWORD *)(v2 + 16) = a2;
  return result;
}

uint64_t (*UserBundleSubscriptionContextData.bundleSubscriptionPurchaseID.modify())()
{
  return nullsub_1;
}

uint64_t UserBundleSubscriptionContextData.sBundlePurchaseID.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t UserBundleSubscriptionContextData.sBundlePurchaseID.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 24) = a1;
  *(_QWORD *)(v2 + 32) = a2;
  return result;
}

uint64_t (*UserBundleSubscriptionContextData.sBundlePurchaseID.modify())()
{
  return nullsub_1;
}

uint64_t UserBundleSubscriptionContextData.isPaidBundleViaOfferTrialist.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 40);
}

uint64_t UserBundleSubscriptionContextData.isPaidBundleViaOfferTrialist.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 40) = result;
  return result;
}

uint64_t (*UserBundleSubscriptionContextData.isPaidBundleViaOfferTrialist.modify())()
{
  return nullsub_1;
}

uint64_t sub_1DC53CFFC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1DC53D59C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DC53D020()
{
  sub_1DC4B9F5C();
  return sub_1DC62B604();
}

uint64_t sub_1DC53D048()
{
  sub_1DC4B9F5C();
  return sub_1DC62B610();
}

uint64_t UserBundleSubscriptionContextData.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int v10;
  int v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  int v23;
  int v24;
  char v25;
  char v26;
  char v27;
  char v28;
  char v29;
  char v30;
  unsigned __int8 v31;

  sub_1DC4B9F00(0, &qword_1EDB11988, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v20 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC4B9F5C();
  sub_1DC62B5E0();
  if (!v2)
  {
    v30 = 0;
    sub_1DC53D330();
    sub_1DC62B454();
    v10 = v31;
    v29 = 1;
    v11 = sub_1DC62B430();
    v28 = 2;
    v23 = sub_1DC62B430();
    v24 = v11;
    v27 = 3;
    v12 = sub_1DC62B3E8();
    v15 = v14;
    v21 = v12;
    v22 = v10;
    v26 = 4;
    swift_bridgeObjectRetain();
    v16 = sub_1DC62B3E8();
    v18 = v17;
    v20 = v16;
    v25 = 5;
    swift_bridgeObjectRetain();
    v19 = sub_1DC62B430();
    v23 &= 1u;
    v24 &= 1u;
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *(_BYTE *)a2 = v22;
    *(_BYTE *)(a2 + 1) = v24;
    *(_BYTE *)(a2 + 2) = v23;
    *(_QWORD *)(a2 + 8) = v21;
    *(_QWORD *)(a2 + 16) = v15;
    *(_QWORD *)(a2 + 24) = v20;
    *(_QWORD *)(a2 + 32) = v18;
    *(_BYTE *)(a2 + 40) = v19 & 1;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

unint64_t sub_1DC53D330()
{
  unint64_t result;

  result = qword_1EDB10BE8;
  if (!qword_1EDB10BE8)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for BundleSubscriptionStatus, &type metadata for BundleSubscriptionStatus);
    atomic_store(result, (unint64_t *)&qword_1EDB10BE8);
  }
  return result;
}

uint64_t sub_1DC53D374@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return UserBundleSubscriptionContextData.init(from:)(a1, a2);
}

uint64_t assignWithCopy for UserBundleSubscriptionContextData(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_BYTE *)(a1 + 1) = *(_BYTE *)(a2 + 1);
  *(_BYTE *)(a1 + 2) = *(_BYTE *)(a2 + 2);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  return a1;
}

uint64_t assignWithTake for UserBundleSubscriptionContextData(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_BYTE *)(a1 + 1) = *(_BYTE *)(a2 + 1);
  *(_BYTE *)(a1 + 2) = *(_BYTE *)(a2 + 2);
  v4 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v5;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  return a1;
}

uint64_t getEnumTagSinglePayload for UserBundleSubscriptionContextData(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 41))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 16);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for UserBundleSubscriptionContextData(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 40) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 41) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 41) = 0;
    if (a2)
      *(_QWORD *)(result + 16) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for UserBundleSubscriptionContextData()
{
  return &type metadata for UserBundleSubscriptionContextData;
}

ValueMetadata *type metadata accessor for UserBundleSubscriptionContextData.CodingKeys()
{
  return &type metadata for UserBundleSubscriptionContextData.CodingKeys;
}

unint64_t sub_1DC53D558()
{
  unint64_t result;

  result = qword_1F036BDE8;
  if (!qword_1F036BDE8)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC636EA0, &type metadata for UserBundleSubscriptionContextData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036BDE8);
  }
  return result;
}

uint64_t sub_1DC53D59C(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000018 && a2 == 0x80000001DC64CB50 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001DC64CB70 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x66696C706D417369 && a2 == 0xED00007265735579 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD00000000000001CLL && a2 == 0x80000001DC64CB90 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001DC64CBB0 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD00000000000001CLL && a2 == 0x80000001DC64CBD0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    v5 = sub_1DC62B520();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 5;
    else
      return 6;
  }
}

uint64_t SearchSelectionData.selectedResult.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SearchSelectionData.selectedResult.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*SearchSelectionData.selectedResult.modify())()
{
  return nullsub_1;
}

void SearchSelectionData.selectedResultActionType.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 16);
}

_BYTE *SearchSelectionData.selectedResultActionType.setter(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 16) = *result;
  return result;
}

uint64_t (*SearchSelectionData.selectedResultActionType.modify())()
{
  return nullsub_1;
}

StocksAnalytics::SearchSelectionData __swiftcall SearchSelectionData.init(selectedResult:selectedResultActionType:)(Swift::String selectedResult, StocksAnalytics::SelectedResultActionType selectedResultActionType)
{
  uint64_t v2;
  char v3;
  StocksAnalytics::SearchSelectionData result;

  v3 = *(_BYTE *)selectedResultActionType;
  *(Swift::String *)v2 = selectedResult;
  *(_BYTE *)(v2 + 16) = v3;
  result.selectedResult = selectedResult;
  result.selectedResultActionType = selectedResultActionType;
  return result;
}

uint64_t sub_1DC53D8B0()
{
  _BYTE *v0;

  if (*v0)
    return 0xD000000000000018;
  else
    return 0x64657463656C6573;
}

uint64_t sub_1DC53D8FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1DC53E0D0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DC53D920()
{
  sub_1DC53DAB8();
  return sub_1DC62B604();
}

uint64_t sub_1DC53D948()
{
  sub_1DC53DAB8();
  return sub_1DC62B610();
}

uint64_t SearchSelectionData.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v10[2];
  int v11;
  char v12;
  char v13;
  char v14;

  sub_1DC53DCE8(0, &qword_1F036BDF0, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)v10 - v6;
  v11 = *(unsigned __int8 *)(v1 + 16);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC53DAB8();
  sub_1DC62B5F8();
  v14 = 0;
  v8 = v10[1];
  sub_1DC62B4B4();
  if (!v8)
  {
    v13 = v11;
    v12 = 1;
    sub_1DC53DAFC();
    sub_1DC62B4E4();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_1DC53DAB8()
{
  unint64_t result;

  result = qword_1F036BDF8;
  if (!qword_1F036BDF8)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC6370A8, &type metadata for SearchSelectionData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036BDF8);
  }
  return result;
}

unint64_t sub_1DC53DAFC()
{
  unint64_t result;

  result = qword_1F036BE00;
  if (!qword_1F036BE00)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for SelectedResultActionType, &type metadata for SelectedResultActionType);
    atomic_store(result, (unint64_t *)&qword_1F036BE00);
  }
  return result;
}

uint64_t SearchSelectionData.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v15;
  char v16;
  char v17;
  char v18;

  sub_1DC53DCE8(0, &qword_1F036BE08, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v15 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC53DAB8();
  sub_1DC62B5E0();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v18 = 0;
  v10 = sub_1DC62B424();
  v12 = v11;
  v16 = 1;
  sub_1DC53DD44();
  swift_bridgeObjectRetain();
  sub_1DC62B454();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  v13 = v17;
  *(_QWORD *)a2 = v10;
  *(_QWORD *)(a2 + 8) = v12;
  *(_BYTE *)(a2 + 16) = v13;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return swift_bridgeObjectRelease();
}

void sub_1DC53DCE8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1DC53DAB8();
    v7 = a3(a1, &type metadata for SearchSelectionData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1DC53DD44()
{
  unint64_t result;

  result = qword_1F036BE10;
  if (!qword_1F036BE10)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for SelectedResultActionType, &type metadata for SelectedResultActionType);
    atomic_store(result, (unint64_t *)&qword_1F036BE10);
  }
  return result;
}

uint64_t sub_1DC53DD90@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return SearchSelectionData.init(from:)(a1, a2);
}

uint64_t sub_1DC53DDA4(_QWORD *a1)
{
  return SearchSelectionData.encode(to:)(a1);
}

uint64_t sub_1DC53DDBC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for SearchSelectionData(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  return a1;
}

__n128 __swift_memcpy17_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for SearchSelectionData(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  return a1;
}

uint64_t getEnumTagSinglePayload for SearchSelectionData(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 17))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SearchSelectionData(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 17) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for SearchSelectionData()
{
  return &type metadata for SearchSelectionData;
}

uint64_t storeEnumTagSinglePayload for SearchSelectionData.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1DC53DF78 + 4 * byte_1DC636F25[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1DC53DFAC + 4 * byte_1DC636F20[v4]))();
}

uint64_t sub_1DC53DFAC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC53DFB4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DC53DFBCLL);
  return result;
}

uint64_t sub_1DC53DFC8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DC53DFD0);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1DC53DFD4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC53DFDC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SearchSelectionData.CodingKeys()
{
  return &type metadata for SearchSelectionData.CodingKeys;
}

unint64_t sub_1DC53DFFC()
{
  unint64_t result;

  result = qword_1F036BE18;
  if (!qword_1F036BE18)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC637080, &type metadata for SearchSelectionData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036BE18);
  }
  return result;
}

unint64_t sub_1DC53E044()
{
  unint64_t result;

  result = qword_1F036BE20;
  if (!qword_1F036BE20)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC636FF0, &type metadata for SearchSelectionData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036BE20);
  }
  return result;
}

unint64_t sub_1DC53E08C()
{
  unint64_t result;

  result = qword_1F036BE28;
  if (!qword_1F036BE28)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC637018, &type metadata for SearchSelectionData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036BE28);
  }
  return result;
}

uint64_t sub_1DC53E0D0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x64657463656C6573 && a2 == 0xEE00746C75736552;
  if (v2 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x80000001DC64CBF0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1DC62B520();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

StocksAnalytics::ArticleSource_optional __swiftcall ArticleSource.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  StocksAnalytics::ArticleSource_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1DC62B3DC();
  result.value = swift_bridgeObjectRelease();
  v5 = 3;
  if (v3 < 3)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t ArticleSource.rawValue.getter()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x656C707061;
  if (*v0 != 1)
    v1 = 0x6F6F686179;
  if (*v0)
    return v1;
  else
    return 0x6E776F6E6B6E75;
}

uint64_t sub_1DC53E28C(char *a1, unsigned __int8 *a2)
{
  return sub_1DC5457F4(*a1, *a2);
}

unint64_t sub_1DC53E29C()
{
  unint64_t result;

  result = qword_1F036BE30;
  if (!qword_1F036BE30)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for ArticleSource, &type metadata for ArticleSource);
    atomic_store(result, (unint64_t *)&qword_1F036BE30);
  }
  return result;
}

uint64_t sub_1DC53E2E0()
{
  sub_1DC62B5B0();
  sub_1DC62B10C();
  swift_bridgeObjectRelease();
  return sub_1DC62B5C8();
}

uint64_t sub_1DC53E378()
{
  sub_1DC62B10C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DC53E3EC()
{
  sub_1DC62B5B0();
  sub_1DC62B10C();
  swift_bridgeObjectRelease();
  return sub_1DC62B5C8();
}

StocksAnalytics::ArticleSource_optional sub_1DC53E480(Swift::String *a1)
{
  return ArticleSource.init(rawValue:)(*a1);
}

void sub_1DC53E48C(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  int v2;
  unint64_t v3;
  uint64_t v4;
  BOOL v5;
  uint64_t v6;

  v2 = *v1;
  v3 = 0xE700000000000000;
  v4 = 0x656C707061;
  if (v2 != 1)
    v4 = 0x6F6F686179;
  v5 = v2 == 0;
  if (*v1)
    v6 = v4;
  else
    v6 = 0x6E776F6E6B6E75;
  if (!v5)
    v3 = 0xE500000000000000;
  *a1 = v6;
  a1[1] = v3;
}

uint64_t sub_1DC53E4E4()
{
  sub_1DC53E658();
  return sub_1DC62B13C();
}

uint64_t sub_1DC53E540()
{
  sub_1DC53E658();
  return sub_1DC62B130();
}

uint64_t storeEnumTagSinglePayload for ArticleSource(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1DC53E5D8 + 4 * byte_1DC6370FD[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1DC53E60C + 4 * byte_1DC6370F8[v4]))();
}

uint64_t sub_1DC53E60C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC53E614(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DC53E61CLL);
  return result;
}

uint64_t sub_1DC53E628(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DC53E630);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1DC53E634(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC53E63C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ArticleSource()
{
  return &type metadata for ArticleSource;
}

unint64_t sub_1DC53E658()
{
  unint64_t result;

  result = qword_1F036BE38;
  if (!qword_1F036BE38)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for ArticleSource, &type metadata for ArticleSource);
    atomic_store(result, (unint64_t *)&qword_1F036BE38);
  }
  return result;
}

uint64_t sub_1DC53E69C(uint64_t a1)
{
  return sub_1DC4BE784(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], qword_1F036BE40, MEMORY[0x1E0CF8078]);
}

uint64_t static WatchSymbolEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C2FE8(&qword_1F0369020, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1F036BE40, a1);
}

uint64_t sub_1DC53E6DC(uint64_t a1)
{
  return sub_1DC4BE784(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], qword_1F036BE58, MEMORY[0x1E0CF8380]);
}

uint64_t static WatchSymbolEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C2FE8(&qword_1F0369028, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1F036BE58, a1);
}

uint64_t WatchSymbolEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C37DC((uint64_t (*)(_QWORD))sub_1DC4B6600, a1);
}

uint64_t WatchSymbolEvent.eventData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  sub_1DC4B6600();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*WatchSymbolEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t WatchSymbolEvent.symbolData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for WatchSymbolEvent(0) + 20);
  sub_1DC4B4B50(0, &qword_1EDB0E750, (void (*)(void))sub_1DC4C3328, (void (*)(void))sub_1DC4C336C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t type metadata accessor for WatchSymbolEvent(uint64_t a1)
{
  return sub_1DC4B385C(a1, qword_1EDB0F8D8);
}

uint64_t WatchSymbolEvent.symbolData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for WatchSymbolEvent(0) + 20);
  sub_1DC4B4B50(0, &qword_1EDB0E750, (void (*)(void))sub_1DC4C3328, (void (*)(void))sub_1DC4C336C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*WatchSymbolEvent.symbolData.modify())()
{
  type metadata accessor for WatchSymbolEvent(0);
  return nullsub_1;
}

uint64_t WatchSymbolEvent.watchedSymbolListData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for WatchSymbolEvent(0) + 24);
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E810, (void (*)(void))sub_1DC4BF55C, (void (*)(void))sub_1DC4BF5A0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t WatchSymbolEvent.watchedSymbolListData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for WatchSymbolEvent(0) + 24);
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E810, (void (*)(void))sub_1DC4BF55C, (void (*)(void))sub_1DC4BF5A0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*WatchSymbolEvent.watchedSymbolListData.modify())()
{
  type metadata accessor for WatchSymbolEvent(0);
  return nullsub_1;
}

uint64_t WatchSymbolEvent.watchlistData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for WatchSymbolEvent(0) + 28);
  sub_1DC4B4B50(0, &qword_1EDB0E790, (void (*)(void))sub_1DC4C9930, (void (*)(void))sub_1DC4C9974);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t WatchSymbolEvent.watchlistData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for WatchSymbolEvent(0) + 28);
  sub_1DC4B4B50(0, &qword_1EDB0E790, (void (*)(void))sub_1DC4C9930, (void (*)(void))sub_1DC4C9974);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*WatchSymbolEvent.watchlistData.modify())()
{
  type metadata accessor for WatchSymbolEvent(0);
  return nullsub_1;
}

uint64_t WatchSymbolEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v2 = *MEMORY[0x1E0CF8128];
  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
  v4 = (int *)type metadata accessor for WatchSymbolEvent(0);
  v5 = a1 + v4[5];
  sub_1DC4B4B50(0, &qword_1EDB0E750, (void (*)(void))sub_1DC4C3328, (void (*)(void))sub_1DC4C336C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 104))(v5, v2, v6);
  v7 = a1 + v4[6];
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E810, (void (*)(void))sub_1DC4BF55C, (void (*)(void))sub_1DC4BF5A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 104))(v7, v2, v8);
  v9 = a1 + v4[7];
  sub_1DC4B4B50(0, &qword_1EDB0E790, (void (*)(void))sub_1DC4C9930, (void (*)(void))sub_1DC4C9974);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 104))(v9, v2, v10);
}

uint64_t WatchSymbolEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C37DC((uint64_t (*)(_QWORD))MEMORY[0x1E0CF8670], a1);
}

uint64_t WatchSymbolEvent.Model.symbolData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;

  v3 = v1 + *(int *)(type metadata accessor for WatchSymbolEvent.Model(0) + 20);
  v4 = *(_QWORD *)(v3 + 8);
  v5 = *(_BYTE *)(v3 + 16);
  v6 = *(_QWORD *)(v3 + 24);
  v7 = *(_QWORD *)(v3 + 32);
  *(_QWORD *)a1 = *(_QWORD *)v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t WatchSymbolEvent.Model.watchedSymbolListData.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for WatchSymbolEvent.Model(0) + 24));
  return swift_bridgeObjectRetain();
}

uint64_t WatchSymbolEvent.Model.watchlistData.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for WatchSymbolEvent.Model(0);
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 28));
  return result;
}

int *WatchSymbolEvent.Model.init(eventData:symbolData:watchedSymbolListData:watchlistData:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X2>, char *a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  int *result;
  uint64_t v16;

  v7 = *a2;
  v8 = a2[1];
  v9 = *((_BYTE *)a2 + 16);
  v10 = a2[3];
  v11 = a2[4];
  v12 = *a3;
  v13 = *a4;
  v14 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(a5, a1, v14);
  result = (int *)type metadata accessor for WatchSymbolEvent.Model(0);
  v16 = a5 + result[5];
  *(_QWORD *)v16 = v7;
  *(_QWORD *)(v16 + 8) = v8;
  *(_BYTE *)(v16 + 16) = v9;
  *(_QWORD *)(v16 + 24) = v10;
  *(_QWORD *)(v16 + 32) = v11;
  *(_QWORD *)(a5 + result[6]) = v12;
  *(_BYTE *)(a5 + result[7]) = v13;
  return result;
}

uint64_t sub_1DC53ECF4()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1DC53ED28 + 4 * byte_1DC637250[*v0]))(0x746144746E657665, 0xE900000000000061);
}

uint64_t sub_1DC53ED28()
{
  return 0x61446C6F626D7973;
}

unint64_t sub_1DC53ED44()
{
  return 0xD000000000000015;
}

uint64_t sub_1DC53ED60()
{
  return 0x73696C6863746177;
}

uint64_t sub_1DC53ED84()
{
  sub_1DC53EFDC();
  return sub_1DC62B604();
}

uint64_t sub_1DC53EDAC()
{
  sub_1DC53EFDC();
  return sub_1DC62B610();
}

uint64_t WatchSymbolEvent.Model.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int *v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;

  v3 = v1;
  sub_1DC53F3B0(0, &qword_1F036BE70, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v18 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC53EFDC();
  sub_1DC62B5F8();
  LOBYTE(v19) = 0;
  sub_1DC62ABA8();
  sub_1DC4B6788(&qword_1EDB0E8A8, MEMORY[0x1E0CF8680]);
  sub_1DC62B4E4();
  if (!v2)
  {
    v10 = (int *)type metadata accessor for WatchSymbolEvent.Model(0);
    v11 = (uint64_t *)(v3 + v10[5]);
    v12 = *v11;
    v13 = v11[1];
    v14 = *((_BYTE *)v11 + 16);
    v16 = v11[3];
    v15 = v11[4];
    v19 = v12;
    v20 = v13;
    v21 = v14;
    v22 = v16;
    v23 = v15;
    HIBYTE(v18) = 1;
    sub_1DC4C336C();
    sub_1DC62B4E4();
    v19 = *(_QWORD *)(v3 + v10[6]);
    HIBYTE(v18) = 2;
    sub_1DC4BF5A0();
    sub_1DC62B4E4();
    LOBYTE(v19) = *(_BYTE *)(v3 + v10[7]);
    HIBYTE(v18) = 3;
    sub_1DC4C9974();
    sub_1DC62B4E4();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1DC53EFDC()
{
  unint64_t result;

  result = qword_1F036BE78;
  if (!qword_1F036BE78)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC63743C, &type metadata for WatchSymbolEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036BE78);
  }
  return result;
}

uint64_t WatchSymbolEvent.Model.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  char v34;

  v23 = a2;
  v3 = sub_1DC62ABA8();
  v24 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v26 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC53F3B0(0, &qword_1F036BE80, MEMORY[0x1E0DED048]);
  v25 = v5;
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v22 - v7;
  v9 = (int *)type metadata accessor for WatchSymbolEvent.Model(0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC53EFDC();
  v27 = v8;
  v12 = (uint64_t)v28;
  sub_1DC62B5E0();
  if (v12)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v13 = v6;
  v28 = a1;
  v14 = v24;
  LOBYTE(v29) = 0;
  sub_1DC4B6788(&qword_1EDB0E278, MEMORY[0x1E0CF8688]);
  v15 = v25;
  sub_1DC62B454();
  (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v11, v26, v3);
  v34 = 1;
  sub_1DC4C3328();
  sub_1DC62B454();
  v16 = v30;
  v17 = v31;
  v18 = v32;
  v19 = v33;
  v20 = &v11[v9[5]];
  *(_QWORD *)v20 = v29;
  *((_QWORD *)v20 + 1) = v16;
  v20[16] = v17;
  *((_QWORD *)v20 + 3) = v18;
  *((_QWORD *)v20 + 4) = v19;
  v34 = 2;
  sub_1DC4BF55C();
  sub_1DC62B454();
  *(_QWORD *)&v11[v9[6]] = v29;
  v34 = 3;
  sub_1DC4C9930();
  sub_1DC62B454();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v27, v15);
  v11[v9[7]] = v29;
  sub_1DC53F40C((uint64_t)v11, v23);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v28);
  return sub_1DC53F450((uint64_t)v11);
}

void sub_1DC53F3B0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1DC53EFDC();
    v7 = a3(a1, &type metadata for WatchSymbolEvent.Model.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1DC53F40C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for WatchSymbolEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DC53F450(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for WatchSymbolEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1DC53F48C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return WatchSymbolEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_1DC53F4A0(_QWORD *a1)
{
  return WatchSymbolEvent.Model.encode(to:)(a1);
}

uint64_t sub_1DC53F4B4@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4B2C68(&qword_1F0369020, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1F036BE40, a1);
}

uint64_t sub_1DC53F4D8@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4B2C68(&qword_1F0369028, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1F036BE58, a1);
}

uint64_t getEnumTagSinglePayload for WatchSymbolEvent()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC53F508(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  sub_1DC4B6600();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    sub_1DC4B4B50(0, &qword_1EDB0E750, (void (*)(void))sub_1DC4C3328, (void (*)(void))sub_1DC4C336C);
    v12 = *(_QWORD *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
    {
      v8 = v11;
      v13 = a3[5];
    }
    else
    {
      sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E810, (void (*)(void))sub_1DC4BF55C, (void (*)(void))sub_1DC4BF5A0);
      v12 = *(_QWORD *)(v14 - 8);
      if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
      {
        v8 = v14;
        v13 = a3[6];
      }
      else
      {
        sub_1DC4B4B50(0, &qword_1EDB0E790, (void (*)(void))sub_1DC4C9930, (void (*)(void))sub_1DC4C9974);
        v8 = v15;
        v12 = *(_QWORD *)(v15 - 8);
        v13 = a3[7];
      }
    }
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t storeEnumTagSinglePayload for WatchSymbolEvent()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC53F630(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  sub_1DC4B6600();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    sub_1DC4B4B50(0, &qword_1EDB0E750, (void (*)(void))sub_1DC4C3328, (void (*)(void))sub_1DC4C336C);
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = a4[5];
    }
    else
    {
      sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E810, (void (*)(void))sub_1DC4BF55C, (void (*)(void))sub_1DC4BF5A0);
      v14 = *(_QWORD *)(v16 - 8);
      if (*(_DWORD *)(v14 + 84) == a3)
      {
        v10 = v16;
        v15 = a4[6];
      }
      else
      {
        sub_1DC4B4B50(0, &qword_1EDB0E790, (void (*)(void))sub_1DC4C9930, (void (*)(void))sub_1DC4C9974);
        v10 = v17;
        v14 = *(_QWORD *)(v17 - 8);
        v15 = a4[7];
      }
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

uint64_t getEnumTagSinglePayload for WatchSymbolEvent.Model()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC53F760(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_1DC62ABA8();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for WatchSymbolEvent.Model()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC53F7EC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_1DC62ABA8();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  return result;
}

uint64_t storeEnumTagSinglePayload for WatchSymbolEvent.Model.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1DC53F8B4 + 4 * byte_1DC637259[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1DC53F8E8 + 4 * byte_1DC637254[v4]))();
}

uint64_t sub_1DC53F8E8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC53F8F0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DC53F8F8);
  return result;
}

uint64_t sub_1DC53F904(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DC53F90CLL);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1DC53F910(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC53F918(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for WatchSymbolEvent.Model.CodingKeys()
{
  return &type metadata for WatchSymbolEvent.Model.CodingKeys;
}

unint64_t sub_1DC53F938()
{
  unint64_t result;

  result = qword_1F036BE88;
  if (!qword_1F036BE88)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC637414, &type metadata for WatchSymbolEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036BE88);
  }
  return result;
}

unint64_t sub_1DC53F980()
{
  unint64_t result;

  result = qword_1F036BE90;
  if (!qword_1F036BE90)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC637384, &type metadata for WatchSymbolEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036BE90);
  }
  return result;
}

unint64_t sub_1DC53F9C8()
{
  unint64_t result;

  result = qword_1F036BE98;
  if (!qword_1F036BE98)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC6373AC, &type metadata for WatchSymbolEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036BE98);
  }
  return result;
}

void SubscriptionResultData.resultType.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

_BYTE *SubscriptionResultData.resultType.setter(_BYTE *result)
{
  _BYTE *v1;

  *v1 = *result;
  return result;
}

uint64_t (*SubscriptionResultData.resultType.modify())()
{
  return nullsub_1;
}

StocksAnalytics::SubscriptionResultData __swiftcall SubscriptionResultData.init(resultType:)(StocksAnalytics::SubscriptionResultData resultType)
{
  _BYTE *v1;

  *v1 = *(_BYTE *)resultType.resultType;
  return resultType;
}

uint64_t sub_1DC53FA40()
{
  return 0x7954746C75736572;
}

uint64_t sub_1DC53FA5C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x7954746C75736572 && a2 == 0xEA00000000006570)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_1DC62B520();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1DC53FAFC()
{
  sub_1DC53FC50();
  return sub_1DC62B604();
}

uint64_t sub_1DC53FB24()
{
  sub_1DC53FC50();
  return sub_1DC62B610();
}

uint64_t SubscriptionResultData.encode(to:)(_QWORD *a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char v8;
  uint64_t v10;
  char v11;

  sub_1DC53FE10(0, &qword_1F036BEA0, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v10 - v6;
  v8 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC53FC50();
  sub_1DC62B5F8();
  v11 = v8;
  sub_1DC53FC94();
  sub_1DC62B4E4();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_1DC53FC50()
{
  unint64_t result;

  result = qword_1F036BEA8;
  if (!qword_1F036BEA8)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC63761C, &type metadata for SubscriptionResultData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036BEA8);
  }
  return result;
}

unint64_t sub_1DC53FC94()
{
  unint64_t result;

  result = qword_1F036BEB0;
  if (!qword_1F036BEB0)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for SubscriptionResultType, &type metadata for SubscriptionResultType);
    atomic_store(result, (unint64_t *)&qword_1F036BEB0);
  }
  return result;
}

uint64_t SubscriptionResultData.init(from:)@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v11;
  char v12;

  sub_1DC53FE10(0, &qword_1F036BEB8, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v11 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC53FC50();
  sub_1DC62B5E0();
  if (!v2)
  {
    sub_1DC53FE6C();
    sub_1DC62B454();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *a2 = v12;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1DC53FE10(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1DC53FC50();
    v7 = a3(a1, &type metadata for SubscriptionResultData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1DC53FE6C()
{
  unint64_t result;

  result = qword_1F036BEC0;
  if (!qword_1F036BEC0)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for SubscriptionResultType, &type metadata for SubscriptionResultType);
    atomic_store(result, (unint64_t *)&qword_1F036BEC0);
  }
  return result;
}

unint64_t sub_1DC53FEB4()
{
  unint64_t result;

  result = qword_1F036BEC8;
  if (!qword_1F036BEC8)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for SubscriptionResultData, &type metadata for SubscriptionResultData);
    atomic_store(result, (unint64_t *)&qword_1F036BEC8);
  }
  return result;
}

unint64_t sub_1DC53FEFC()
{
  unint64_t result;

  result = qword_1F036BED0;
  if (!qword_1F036BED0)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for SubscriptionResultData, &type metadata for SubscriptionResultData);
    atomic_store(result, (unint64_t *)&qword_1F036BED0);
  }
  return result;
}

uint64_t sub_1DC53FF40@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return SubscriptionResultData.init(from:)(a1, a2);
}

uint64_t sub_1DC53FF54(_QWORD *a1)
{
  return SubscriptionResultData.encode(to:)(a1);
}

uint64_t storeEnumTagSinglePayload for SubscriptionResultData(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1DC53FFB4 + 4 * byte_1DC637495[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1DC53FFE8 + 4 * byte_1DC637490[v4]))();
}

uint64_t sub_1DC53FFE8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC53FFF0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DC53FFF8);
  return result;
}

uint64_t sub_1DC540004(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DC54000CLL);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1DC540010(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC540018(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SubscriptionResultData()
{
  return &type metadata for SubscriptionResultData;
}

uint64_t storeEnumTagSinglePayload for SubscriptionResultData.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1DC540074 + 4 * byte_1DC63749A[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1DC540094 + 4 * byte_1DC63749F[v4]))();
}

_BYTE *sub_1DC540074(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1DC540094(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1DC54009C(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1DC5400A4(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1DC5400AC(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1DC5400B4(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for SubscriptionResultData.CodingKeys()
{
  return &type metadata for SubscriptionResultData.CodingKeys;
}

unint64_t sub_1DC5400D4()
{
  unint64_t result;

  result = qword_1F036BED8;
  if (!qword_1F036BED8)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC6375F4, &type metadata for SubscriptionResultData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036BED8);
  }
  return result;
}

unint64_t sub_1DC54011C()
{
  unint64_t result;

  result = qword_1F036BEE0;
  if (!qword_1F036BEE0)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC637564, &type metadata for SubscriptionResultData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036BEE0);
  }
  return result;
}

unint64_t sub_1DC540164()
{
  unint64_t result;

  result = qword_1F036BEE8;
  if (!qword_1F036BEE8)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC63758C, &type metadata for SubscriptionResultData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036BEE8);
  }
  return result;
}

uint64_t VideoAdLoadData.duration.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t VideoAdLoadData.duration.setter(uint64_t result)
{
  _QWORD *v1;

  *v1 = result;
  return result;
}

uint64_t (*VideoAdLoadData.duration.modify())()
{
  return nullsub_1;
}

void VideoAdLoadData.loadState.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 8);
}

_BYTE *VideoAdLoadData.loadState.setter(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 8) = *result;
  return result;
}

uint64_t (*VideoAdLoadData.loadState.modify())()
{
  return nullsub_1;
}

uint64_t VideoAdLoadData.init(duration:loadState:)@<X0>(uint64_t result@<X0>, char *a2@<X1>, uint64_t a3@<X8>)
{
  char v3;

  v3 = *a2;
  *(_QWORD *)a3 = result;
  *(_BYTE *)(a3 + 8) = v3;
  return result;
}

uint64_t sub_1DC540200()
{
  _BYTE *v0;

  if (*v0)
    return 0x7461745364616F6CLL;
  else
    return 0x6E6F697461727564;
}

uint64_t sub_1DC540240@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1DC540990(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DC540264()
{
  sub_1DC5403F4();
  return sub_1DC62B604();
}

uint64_t sub_1DC54028C()
{
  sub_1DC5403F4();
  return sub_1DC62B610();
}

uint64_t VideoAdLoadData.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v10;
  int v11;
  char v12;
  char v13;
  char v14;

  sub_1DC5405E8(0, &qword_1F036BEF0, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v10 - v7;
  v11 = *(unsigned __int8 *)(v1 + 8);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC5403F4();
  sub_1DC62B5F8();
  v14 = 0;
  sub_1DC62B4FC();
  if (!v2)
  {
    v13 = v11;
    v12 = 1;
    sub_1DC540438();
    sub_1DC62B4E4();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_1DC5403F4()
{
  unint64_t result;

  result = qword_1F036BEF8;
  if (!qword_1F036BEF8)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC6377E4, &type metadata for VideoAdLoadData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036BEF8);
  }
  return result;
}

unint64_t sub_1DC540438()
{
  unint64_t result;

  result = qword_1F036BF00;
  if (!qword_1F036BF00)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for VideoAdLoadState, &type metadata for VideoAdLoadState);
    atomic_store(result, (unint64_t *)&qword_1F036BF00);
  }
  return result;
}

uint64_t VideoAdLoadData.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char v12;
  uint64_t v13;
  char v14;
  char v15;
  char v16;

  sub_1DC5405E8(0, &qword_1F036BF08, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v13 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC5403F4();
  sub_1DC62B5E0();
  if (!v2)
  {
    v16 = 0;
    v10 = sub_1DC62B46C();
    v14 = 1;
    sub_1DC540644();
    sub_1DC62B454();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    v12 = v15;
    *(_QWORD *)a2 = v10;
    *(_BYTE *)(a2 + 8) = v12;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1DC5405E8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1DC5403F4();
    v7 = a3(a1, &type metadata for VideoAdLoadData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1DC540644()
{
  unint64_t result;

  result = qword_1F036BF10;
  if (!qword_1F036BF10)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for VideoAdLoadState, &type metadata for VideoAdLoadState);
    atomic_store(result, (unint64_t *)&qword_1F036BF10);
  }
  return result;
}

unint64_t sub_1DC54068C()
{
  unint64_t result;

  result = qword_1F036BF18;
  if (!qword_1F036BF18)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for VideoAdLoadData, &type metadata for VideoAdLoadData);
    atomic_store(result, (unint64_t *)&qword_1F036BF18);
  }
  return result;
}

unint64_t sub_1DC5406D4()
{
  unint64_t result;

  result = qword_1F036BF20;
  if (!qword_1F036BF20)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for VideoAdLoadData, &type metadata for VideoAdLoadData);
    atomic_store(result, (unint64_t *)&qword_1F036BF20);
  }
  return result;
}

uint64_t sub_1DC540718@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return VideoAdLoadData.init(from:)(a1, a2);
}

uint64_t sub_1DC54072C(_QWORD *a1)
{
  return VideoAdLoadData.encode(to:)(a1);
}

uint64_t __swift_memcpy9_8(uint64_t result, uint64_t *a2)
{
  uint64_t v2;

  v2 = *a2;
  *(_BYTE *)(result + 8) = *((_BYTE *)a2 + 8);
  *(_QWORD *)result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for VideoAdLoadData(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFB && *(_BYTE *)(a1 + 9))
    return (*(_DWORD *)a1 + 251);
  v3 = *(unsigned __int8 *)(a1 + 8);
  v4 = v3 >= 6;
  v5 = v3 - 6;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for VideoAdLoadData(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFA)
  {
    *(_BYTE *)(result + 8) = 0;
    *(_QWORD *)result = a2 - 251;
    if (a3 >= 0xFB)
      *(_BYTE *)(result + 9) = 1;
  }
  else
  {
    if (a3 >= 0xFB)
      *(_BYTE *)(result + 9) = 0;
    if (a2)
      *(_BYTE *)(result + 8) = a2 + 5;
  }
  return result;
}

ValueMetadata *type metadata accessor for VideoAdLoadData()
{
  return &type metadata for VideoAdLoadData;
}

uint64_t storeEnumTagSinglePayload for VideoAdLoadData.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1DC540838 + 4 * byte_1DC637671[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1DC54086C + 4 * byte_1DC63766C[v4]))();
}

uint64_t sub_1DC54086C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC540874(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DC54087CLL);
  return result;
}

uint64_t sub_1DC540888(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DC540890);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1DC540894(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC54089C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for VideoAdLoadData.CodingKeys()
{
  return &type metadata for VideoAdLoadData.CodingKeys;
}

unint64_t sub_1DC5408BC()
{
  unint64_t result;

  result = qword_1F036BF28;
  if (!qword_1F036BF28)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC6377BC, &type metadata for VideoAdLoadData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036BF28);
  }
  return result;
}

unint64_t sub_1DC540904()
{
  unint64_t result;

  result = qword_1F036BF30;
  if (!qword_1F036BF30)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC63772C, &type metadata for VideoAdLoadData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036BF30);
  }
  return result;
}

unint64_t sub_1DC54094C()
{
  unint64_t result;

  result = qword_1F036BF38;
  if (!qword_1F036BF38)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC637754, &type metadata for VideoAdLoadData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036BF38);
  }
  return result;
}

uint64_t sub_1DC540990(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6E6F697461727564 && a2 == 0xE800000000000000;
  if (v2 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7461745364616F6CLL && a2 == 0xE900000000000065)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1DC62B520();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t MediaEngagementCompletedData.mediaTimePlayed.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t MediaEngagementCompletedData.mediaTimePlayed.setter(uint64_t result)
{
  _QWORD *v1;

  *v1 = result;
  return result;
}

uint64_t (*MediaEngagementCompletedData.mediaTimePlayed.modify())()
{
  return nullsub_1;
}

uint64_t MediaEngagementCompletedData.init(mediaTimePlayed:)@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = result;
  return result;
}

uint64_t sub_1DC540AB4()
{
  return 0x6D6954616964656DLL;
}

uint64_t sub_1DC540AD8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x6D6954616964656DLL && a2 == 0xEF646579616C5065)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_1DC62B520();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1DC540B90()
{
  sub_1DC540CD0();
  return sub_1DC62B604();
}

uint64_t sub_1DC540BB8()
{
  sub_1DC540CD0();
  return sub_1DC62B610();
}

uint64_t MediaEngagementCompletedData.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  sub_1DC540E34(0, &qword_1F036BF40, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC540CD0();
  sub_1DC62B5F8();
  sub_1DC62B4FC();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_1DC540CD0()
{
  unint64_t result;

  result = qword_1F036BF48;
  if (!qword_1F036BF48)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC6379C0, &type metadata for MediaEngagementCompletedData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036BF48);
  }
  return result;
}

uint64_t MediaEngagementCompletedData.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v12;

  sub_1DC540E34(0, &qword_1F036BF50, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v12 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC540CD0();
  sub_1DC62B5E0();
  if (!v2)
  {
    v10 = sub_1DC62B46C();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *a2 = v10;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1DC540E34(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1DC540CD0();
    v7 = a3(a1, &type metadata for MediaEngagementCompletedData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1DC540E94()
{
  unint64_t result;

  result = qword_1EDB110F0;
  if (!qword_1EDB110F0)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for MediaEngagementCompletedData, &type metadata for MediaEngagementCompletedData);
    atomic_store(result, (unint64_t *)&qword_1EDB110F0);
  }
  return result;
}

unint64_t sub_1DC540EDC()
{
  unint64_t result;

  result = qword_1EDB110E8;
  if (!qword_1EDB110E8)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for MediaEngagementCompletedData, &type metadata for MediaEngagementCompletedData);
    atomic_store(result, (unint64_t *)&qword_1EDB110E8);
  }
  return result;
}

uint64_t sub_1DC540F20@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return MediaEngagementCompletedData.init(from:)(a1, a2);
}

uint64_t sub_1DC540F34(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  sub_1DC540E34(0, &qword_1F036BF40, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC540CD0();
  sub_1DC62B5F8();
  sub_1DC62B4FC();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

ValueMetadata *type metadata accessor for MediaEngagementCompletedData()
{
  return &type metadata for MediaEngagementCompletedData;
}

uint64_t storeEnumTagSinglePayload for MediaEngagementCompletedData.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1DC541074 + 4 * byte_1DC637840[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1DC541094 + 4 * byte_1DC637845[v4]))();
}

_BYTE *sub_1DC541074(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1DC541094(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1DC54109C(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1DC5410A4(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1DC5410AC(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1DC5410B4(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for MediaEngagementCompletedData.CodingKeys()
{
  return &type metadata for MediaEngagementCompletedData.CodingKeys;
}

unint64_t sub_1DC5410D4()
{
  unint64_t result;

  result = qword_1F036BF58;
  if (!qword_1F036BF58)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC637998, &type metadata for MediaEngagementCompletedData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036BF58);
  }
  return result;
}

unint64_t sub_1DC54111C()
{
  unint64_t result;

  result = qword_1F036BF60;
  if (!qword_1F036BF60)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC637908, &type metadata for MediaEngagementCompletedData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036BF60);
  }
  return result;
}

unint64_t sub_1DC541164()
{
  unint64_t result;

  result = qword_1F036BF68;
  if (!qword_1F036BF68)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC637930, &type metadata for MediaEngagementCompletedData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036BF68);
  }
  return result;
}

void sub_1DC5411A8(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1DC5411F8(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1DC54127C + 4 * byte_1DC637A15[a2]))(0x676E696B61657262);
}

uint64_t sub_1DC54127C(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x676E696B61657262 && v1 == 0xE800000000000000)
    v2 = 1;
  else
    v2 = sub_1DC62B520();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

void sub_1DC541348(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1DC541388(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1DC541424 + 4 * byte_1DC637A20[a2]))(7234932);
}

uint64_t sub_1DC541424(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 7234932 && v1 == 0xE300000000000000)
    v2 = 1;
  else
    v2 = sub_1DC62B520();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

void sub_1DC541510(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1DC541560(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1DC5415F0 + 4 * byte_1DC637A2D[a2]))(0x64657461727563);
}

uint64_t sub_1DC5415F0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char v3;

  if (a1 == 0x64657461727563 && v1 == v2)
    v3 = 1;
  else
    v3 = sub_1DC62B520();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

uint64_t sub_1DC5416E0(uint64_t a1, uint64_t a2)
{
  return sub_1DC54575C(a1, a2, EventPath.rawValue.getter);
}

void sub_1DC5416EC(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1DC54173C(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1DC5417D0 + 4 * byte_1DC637A39[a2]))(0x676B636142707061);
}

uint64_t sub_1DC5417D0(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x676B636142707061 && v1 == 0xED0000646E756F72)
    v2 = 1;
  else
    v2 = sub_1DC62B520();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

void sub_1DC5418AC(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1DC5418FC(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1DC541958 + 4 * byte_1DC637A42[a2]))(1701736302);
}

uint64_t sub_1DC541958(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 1701736302 && v1 == 0xE400000000000000)
    v2 = 1;
  else
    v2 = sub_1DC62B520();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_1DC5419F8(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2;
  uint64_t v3;
  unint64_t v4;
  int v5;
  uint64_t v6;
  unint64_t v7;
  char v8;

  v2 = a1;
  if (a1)
  {
    if (a1 == 1)
      v3 = 1684366694;
    else
      v3 = 0x656C6369747261;
    if (v2 == 1)
      v4 = 0xE400000000000000;
    else
      v4 = 0xE700000000000000;
    v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1)
        v6 = 1684366694;
      else
        v6 = 0x656C6369747261;
      if (v5 == 1)
        v7 = 0xE400000000000000;
      else
        v7 = 0xE700000000000000;
      if (v3 != v6)
        goto LABEL_21;
      goto LABEL_19;
    }
  }
  else
  {
    v4 = 0xE700000000000000;
    v3 = 0x6E776F6E6B6E75;
    v5 = a2;
    if (a2)
      goto LABEL_9;
  }
  v7 = 0xE700000000000000;
  if (v3 != 0x6E776F6E6B6E75)
  {
LABEL_21:
    v8 = sub_1DC62B520();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7)
    goto LABEL_21;
  v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1DC541B00(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2;
  uint64_t v3;
  unint64_t v4;
  int v5;
  uint64_t v6;
  unint64_t v7;
  char v8;

  v2 = a1;
  if (a1)
  {
    if (a1 == 1)
      v3 = 7824750;
    else
      v3 = 0x6E696E7275746572;
    if (v2 == 1)
      v4 = 0xE300000000000000;
    else
      v4 = 0xE900000000000067;
    v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1)
        v6 = 7824750;
      else
        v6 = 0x6E696E7275746572;
      if (v5 == 1)
        v7 = 0xE300000000000000;
      else
        v7 = 0xE900000000000067;
      if (v3 != v6)
        goto LABEL_21;
      goto LABEL_19;
    }
  }
  else
  {
    v4 = 0xE700000000000000;
    v3 = 0x6E776F6E6B6E75;
    v5 = a2;
    if (a2)
      goto LABEL_9;
  }
  v7 = 0xE700000000000000;
  if (v3 != 0x6E776F6E6B6E75)
  {
LABEL_21:
    v8 = sub_1DC62B520();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7)
    goto LABEL_21;
  v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1DC541C10(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0x72756F5361746164;
  else
    v3 = 0x6E776F6E6B6E75;
  if (v2)
    v4 = 0xE700000000000000;
  else
    v4 = 0xEA00000000006563;
  if ((a2 & 1) != 0)
    v5 = 0x72756F5361746164;
  else
    v5 = 0x6E776F6E6B6E75;
  if ((a2 & 1) != 0)
    v6 = 0xEA00000000006563;
  else
    v6 = 0xE700000000000000;
  if (v3 == v5 && v4 == v6)
    v7 = 1;
  else
    v7 = sub_1DC62B520();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

void sub_1DC541CB8(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1DC541D08(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1DC541D5C + 4 * byte_1DC637A4A[a2]))(0x6C6F626D7973);
}

uint64_t sub_1DC541D5C(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x6C6F626D7973 && v1 == 0xE600000000000000)
    v2 = 1;
  else
    v2 = sub_1DC62B520();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_1DC541DF4(char a1, char a2)
{
  BOOL v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0xD000000000000010;
  else
    v3 = 0x6E776F6E6B6E75;
  if (v2)
    v4 = 0xE700000000000000;
  else
    v4 = 0x80000001DC64B970;
  if ((a2 & 1) != 0)
    v5 = 0xD000000000000010;
  else
    v5 = 0x6E776F6E6B6E75;
  if ((a2 & 1) != 0)
    v6 = 0x80000001DC64B970;
  else
    v6 = 0xE700000000000000;
  if (v3 == v5 && v4 == v6)
    v7 = 1;
  else
    v7 = sub_1DC62B520();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

void sub_1DC541E9C(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1DC541EEC(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1DC541F4C + 4 * byte_1DC637A52[a2]))(0x676E69646E6570);
}

uint64_t sub_1DC541F4C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char v3;

  if (a1 == 0x676E69646E6570 && v1 == v2)
    v3 = 1;
  else
    v3 = sub_1DC62B520();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

void sub_1DC541FF0(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1DC542040(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1DC5420AC + 4 * byte_1DC637A5A[a2]))(0xD000000000000013);
}

uint64_t sub_1DC5420AC(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0xD000000000000013 && v1 == 0x80000001DC64B6F0)
    v2 = 1;
  else
    v2 = sub_1DC62B520();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_1DC54215C(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2;
  uint64_t v3;
  unint64_t v4;
  int v5;
  uint64_t v6;
  unint64_t v7;
  char v8;

  v2 = a1;
  if (a1)
  {
    if (a1 == 1)
      v3 = 0x656C6369747261;
    else
      v3 = 0x50676E69646E616CLL;
    if (v2 == 1)
      v4 = 0xE700000000000000;
    else
      v4 = 0xEB00000000656761;
    v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1)
        v6 = 0x656C6369747261;
      else
        v6 = 0x50676E69646E616CLL;
      if (v5 == 1)
        v7 = 0xE700000000000000;
      else
        v7 = 0xEB00000000656761;
      if (v3 != v6)
        goto LABEL_21;
      goto LABEL_19;
    }
  }
  else
  {
    v4 = 0xE700000000000000;
    v3 = 0x6E776F6E6B6E75;
    v5 = a2;
    if (a2)
      goto LABEL_9;
  }
  v7 = 0xE700000000000000;
  if (v3 != 0x6E776F6E6B6E75)
  {
LABEL_21:
    v8 = sub_1DC62B520();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7)
    goto LABEL_21;
  v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

void sub_1DC542284(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1DC5422D4(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1DC542338 + 4 * byte_1DC637A62[a2]))(0x7070417377656ELL);
}

uint64_t sub_1DC542338(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char v3;

  if (a1 == 0x7070417377656ELL && v1 == v2)
    v3 = 1;
  else
    v3 = sub_1DC62B520();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

void sub_1DC5423E0(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1DC542430(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1DC542480 + 4 * byte_1DC637A6A[a2]))(1701147238);
}

uint64_t sub_1DC542480(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 1701147238 && v1 == 0xE400000000000000)
    v2 = 1;
  else
    v2 = sub_1DC62B520();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_1DC542514(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2;
  uint64_t v3;
  unint64_t v4;
  int v5;
  uint64_t v6;
  unint64_t v7;
  char v8;

  v2 = a1;
  if (a1)
  {
    if (a1 == 1)
      v3 = 0x6E49646574706FLL;
    else
      v3 = 0x74754F646574706FLL;
    if (v2 == 1)
      v4 = 0xE700000000000000;
    else
      v4 = 0xE800000000000000;
    v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1)
        v6 = 0x6E49646574706FLL;
      else
        v6 = 0x74754F646574706FLL;
      if (v5 == 1)
        v7 = 0xE700000000000000;
      else
        v7 = 0xE800000000000000;
      if (v3 != v6)
        goto LABEL_21;
      goto LABEL_19;
    }
  }
  else
  {
    v4 = 0xE700000000000000;
    v3 = 0x6E776F6E6B6E75;
    v5 = a2;
    if (a2)
      goto LABEL_9;
  }
  v7 = 0xE700000000000000;
  if (v3 != 0x6E776F6E6B6E75)
  {
LABEL_21:
    v8 = sub_1DC62B520();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7)
    goto LABEL_21;
  v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

void sub_1DC54262C(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1DC54267C(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1DC5426EC + 4 * byte_1DC637A73[a2]))(1768319351);
}

uint64_t sub_1DC5426EC(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 1768319351 && v1 == 0xE400000000000000)
    v2 = 1;
  else
    v2 = sub_1DC62B520();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_1DC5427A4(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2;
  unint64_t v3;
  unint64_t v4;
  int v5;
  unint64_t v6;
  unint64_t v7;
  char v8;

  v2 = a1;
  if (a1)
  {
    if (a1 == 1)
      v3 = 0xD000000000000012;
    else
      v3 = 0x7245726576726573;
    if (v2 == 1)
      v4 = 0x80000001DC64BBD0;
    else
      v4 = 0xEB00000000726F72;
    v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1)
        v6 = 0xD000000000000012;
      else
        v6 = 0x7245726576726573;
      if (v5 == 1)
        v7 = 0x80000001DC64BBD0;
      else
        v7 = 0xEB00000000726F72;
      if (v3 != v6)
        goto LABEL_21;
      goto LABEL_19;
    }
  }
  else
  {
    v4 = 0xE700000000000000;
    v3 = 0x6E776F6E6B6E75;
    v5 = a2;
    if (a2)
      goto LABEL_9;
  }
  v7 = 0xE700000000000000;
  if (v3 != 0x6E776F6E6B6E75)
  {
LABEL_21:
    v8 = sub_1DC62B520();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7)
    goto LABEL_21;
  v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

void sub_1DC5428CC(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1DC54291C(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1DC5429A0 + 4 * byte_1DC637A7D[a2]))(0x6573616863727570);
}

uint64_t sub_1DC5429A0(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x6573616863727570 && v1 == 0xED00007465656853)
    v2 = 1;
  else
    v2 = sub_1DC62B520();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

void sub_1DC542A6C(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1DC542ABC(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1DC542B24 + 4 * byte_1DC637A86[a2]))(0x6863746177);
}

uint64_t sub_1DC542B24(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x6863746177 && v1 == 0xE500000000000000)
    v2 = 1;
  else
    v2 = sub_1DC62B520();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

void sub_1DC542BD0(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1DC542C20(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1DC542C90 + 4 * byte_1DC637A8E[a2]))(0x6C61697274);
}

uint64_t sub_1DC542C90(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x6C61697274 && v1 == 0xE500000000000000)
    v2 = 1;
  else
    v2 = sub_1DC62B520();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

void sub_1DC542D44(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1DC542D94(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1DC542DF4 + 4 * byte_1DC637A96[a2]))(0x656C6369747261);
}

uint64_t sub_1DC542DF4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char v3;

  if (a1 == 0x656C6369747261 && v1 == v2)
    v3 = 1;
  else
    v3 = sub_1DC62B520();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

void sub_1DC542E98(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1DC542EE8(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1DC542F58 + 4 * byte_1DC637A9F[a2]))(0x73736563637573);
}

uint64_t sub_1DC542F58(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char v3;

  if (a1 == 0x73736563637573 && v1 == v2)
    v3 = 1;
  else
    v3 = sub_1DC62B520();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

void sub_1DC543010(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1DC543060(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1DC5430C8 + 4 * byte_1DC637AA8[a2]))(0x6563697270);
}

uint64_t sub_1DC5430C8(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x6563697270 && v1 == 0xE500000000000000)
    v2 = 1;
  else
    v2 = sub_1DC62B520();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

void sub_1DC543174(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1DC5431C4(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1DC543250 + 4 * byte_1DC637AB1[a2]))(0x6C61697274);
}

uint64_t sub_1DC543250(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x6C61697274 && v1 == 0xE500000000000000)
    v2 = 1;
  else
    v2 = sub_1DC62B520();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_1DC543324(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2;
  uint64_t v3;
  unint64_t v4;
  int v5;
  uint64_t v6;
  unint64_t v7;
  char v8;

  v2 = a1;
  if (a1)
  {
    if (a1 == 1)
      v3 = 0x6269726373627573;
    else
      v3 = 0x6373627553746F6ELL;
    if (v2 == 1)
      v4 = 0xEA00000000006465;
    else
      v4 = 0xED00006465626972;
    v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1)
        v6 = 0x6269726373627573;
      else
        v6 = 0x6373627553746F6ELL;
      if (v5 == 1)
        v7 = 0xEA00000000006465;
      else
        v7 = 0xED00006465626972;
      if (v3 != v6)
        goto LABEL_21;
      goto LABEL_19;
    }
  }
  else
  {
    v4 = 0xE700000000000000;
    v3 = 0x6E776F6E6B6E75;
    v5 = a2;
    if (a2)
      goto LABEL_9;
  }
  v7 = 0xE700000000000000;
  if (v3 != 0x6E776F6E6B6E75)
  {
LABEL_21:
    v8 = sub_1DC62B520();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7)
    goto LABEL_21;
  v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

void sub_1DC54345C(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1DC54349C(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1DC54352C + 4 * byte_1DC637ABC[a2]))(0x6573756170);
}

uint64_t sub_1DC54352C(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x6573756170 && v1 == 0xE500000000000000)
    v2 = 1;
  else
    v2 = sub_1DC62B520();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_1DC54360C(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2;
  uint64_t v3;
  unint64_t v4;
  int v5;
  uint64_t v6;
  unint64_t v7;
  char v8;

  v2 = a1;
  if (a1)
  {
    if (a1 == 1)
      v3 = 0x64656761676E65;
    else
      v3 = 0x6761676E45746F6ELL;
    if (v2 == 1)
      v4 = 0xE700000000000000;
    else
      v4 = 0xEA00000000006465;
    v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1)
        v6 = 0x64656761676E65;
      else
        v6 = 0x6761676E45746F6ELL;
      if (v5 == 1)
        v7 = 0xE700000000000000;
      else
        v7 = 0xEA00000000006465;
      if (v3 != v6)
        goto LABEL_21;
      goto LABEL_19;
    }
  }
  else
  {
    v4 = 0xE700000000000000;
    v3 = 0x6E776F6E6B6E75;
    v5 = a2;
    if (a2)
      goto LABEL_9;
  }
  v7 = 0xE700000000000000;
  if (v3 != 0x6E776F6E6B6E75)
  {
LABEL_21:
    v8 = sub_1DC62B520();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7)
    goto LABEL_21;
  v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1DC54372C(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2;
  uint64_t v3;
  unint64_t v4;
  int v5;
  uint64_t v6;
  unint64_t v7;
  char v8;

  v2 = a1;
  if (a1)
  {
    if (a1 == 1)
      v3 = 0x656C6369747261;
    else
      v3 = 1684366694;
    if (v2 == 1)
      v4 = 0xE700000000000000;
    else
      v4 = 0xE400000000000000;
    v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1)
        v6 = 0x656C6369747261;
      else
        v6 = 1684366694;
      if (v5 == 1)
        v7 = 0xE700000000000000;
      else
        v7 = 0xE400000000000000;
      if (v3 != v6)
        goto LABEL_21;
      goto LABEL_19;
    }
  }
  else
  {
    v4 = 0xE700000000000000;
    v3 = 0x6E776F6E6B6E75;
    v5 = a2;
    if (a2)
      goto LABEL_9;
  }
  v7 = 0xE700000000000000;
  if (v3 != 0x6E776F6E6B6E75)
  {
LABEL_21:
    v8 = sub_1DC62B520();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7)
    goto LABEL_21;
  v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

void sub_1DC543834(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1DC543884(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1DC54397C + 4 * byte_1DC637ACD[a2]))(0x796144656E6FLL);
}

uint64_t sub_1DC54397C(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x796144656E6FLL && v1 == 0xE600000000000000)
    v2 = 1;
  else
    v2 = sub_1DC62B520();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_1DC543ADC(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2;
  unint64_t v3;
  unint64_t v4;
  int v5;
  unint64_t v6;
  unint64_t v7;
  char v8;

  v2 = a1;
  if (a1)
  {
    if (a1 == 1)
      v3 = 0xD000000000000011;
    else
      v3 = 0xD000000000000012;
    if (v2 == 1)
      v4 = 0x80000001DC64BB90;
    else
      v4 = 0x80000001DC64BBB0;
    v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1)
        v6 = 0xD000000000000011;
      else
        v6 = 0xD000000000000012;
      if (v5 == 1)
        v7 = 0x80000001DC64BB90;
      else
        v7 = 0x80000001DC64BBB0;
      if (v3 != v6)
        goto LABEL_21;
      goto LABEL_19;
    }
  }
  else
  {
    v4 = 0xE700000000000000;
    v3 = 0x6E776F6E6B6E75;
    v5 = a2;
    if (a2)
      goto LABEL_9;
  }
  v7 = 0xE700000000000000;
  if (v3 != 0x6E776F6E6B6E75)
  {
LABEL_21:
    v8 = sub_1DC62B520();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7)
    goto LABEL_21;
  v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

void sub_1DC543BDC(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1DC543C2C(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1DC543CC4 + 4 * byte_1DC637ADD[a2]))(0x7469617274726F70);
}

uint64_t sub_1DC543CC4(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x7469617274726F70 && v1 == 0xE800000000000000)
    v2 = 1;
  else
    v2 = sub_1DC62B520();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_1DC543DA4(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0x776F6C6C61;
  else
    v3 = 2037278052;
  if (v2)
    v4 = 0xE400000000000000;
  else
    v4 = 0xE500000000000000;
  if ((a2 & 1) != 0)
    v5 = 0x776F6C6C61;
  else
    v5 = 2037278052;
  if ((a2 & 1) != 0)
    v6 = 0xE500000000000000;
  else
    v6 = 0xE400000000000000;
  if (v3 == v5 && v4 == v6)
    v7 = 1;
  else
    v7 = sub_1DC62B520();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

void sub_1DC543E3C(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1DC543E8C(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1DC543F14 + 4 * byte_1DC637AE8[a2]))(0x64656C696166);
}

uint64_t sub_1DC543F14(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x64656C696166 && v1 == 0xE600000000000000)
    v2 = 1;
  else
    v2 = sub_1DC62B520();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

void sub_1DC543FD0(char a1)
{
  __asm { BR              X11 }
}

uint64_t sub_1DC54401C(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1DC544094 + 4 * byte_1DC637AF2[a2]))(0x6F5464656C696166);
}

uint64_t sub_1DC544094(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x6F5464656C696166 && v1 == 0xEE007265646E6552)
    v2 = 1;
  else
    v2 = sub_1DC62B520();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_1DC544150(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2;
  uint64_t v3;
  unint64_t v4;
  int v5;
  uint64_t v6;
  unint64_t v7;
  char v8;

  v2 = a1;
  if (a1)
  {
    if (a1 == 1)
      v3 = 0x6E49646567676F6CLL;
    else
      v3 = 0x754F646567676F6CLL;
    if (v2 == 1)
      v4 = 0xE800000000000000;
    else
      v4 = 0xE900000000000074;
    v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1)
        v6 = 0x6E49646567676F6CLL;
      else
        v6 = 0x754F646567676F6CLL;
      if (v5 == 1)
        v7 = 0xE800000000000000;
      else
        v7 = 0xE900000000000074;
      if (v3 != v6)
        goto LABEL_21;
      goto LABEL_19;
    }
  }
  else
  {
    v4 = 0xE700000000000000;
    v3 = 0x6E776F6E6B6E75;
    v5 = a2;
    if (a2)
      goto LABEL_9;
  }
  v7 = 0xE700000000000000;
  if (v3 != 0x6E776F6E6B6E75)
  {
LABEL_21:
    v8 = sub_1DC62B520();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7)
    goto LABEL_21;
  v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

void sub_1DC544270(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1DC5442C0(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1DC54430C + 4 * byte_1DC637AFA[a2]))(24945);
}

uint64_t sub_1DC54430C(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 24945 && v1 == 0xE200000000000000)
    v2 = 1;
  else
    v2 = sub_1DC62B520();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

void sub_1DC54439C(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1DC5443E4(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1DC544444 + 4 * byte_1DC637B02[a2]))(0x73736563637573);
}

uint64_t sub_1DC544444(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x73736563637573 && v1 == 0xE700000000000000)
    v2 = 1;
  else
    v2 = sub_1DC62B520();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

void sub_1DC5444E8(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1DC544538(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1DC54459C + 4 * byte_1DC637B0A[a2]))(0x6465646E61707865);
}

uint64_t sub_1DC54459C(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x6465646E61707865 && v1 == 0xE800000000000000)
    v2 = 1;
  else
    v2 = sub_1DC62B520();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

void sub_1DC544644(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1DC544694(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1DC544758 + 4 * byte_1DC637B15[a2]))(0x7469617274726F70);
}

uint64_t sub_1DC544758(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x7469617274726F70 && v1 == 0xE800000000000000)
    v2 = 1;
  else
    v2 = sub_1DC62B520();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_1DC544874(char a1, unsigned __int8 a2)
{
  uint64_t v2;
  unint64_t v3;
  int v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  if (a1)
  {
    if (a1 == 1)
      v2 = 1701147238;
    else
      v2 = 1684627824;
    v3 = 0xE400000000000000;
    v4 = a2;
    if (a2)
    {
LABEL_6:
      if (v4 == 1)
        v5 = 1701147238;
      else
        v5 = 1684627824;
      v6 = 0xE400000000000000;
      if (v2 != v5)
        goto LABEL_15;
      goto LABEL_13;
    }
  }
  else
  {
    v3 = 0xE700000000000000;
    v2 = 0x6E776F6E6B6E75;
    v4 = a2;
    if (a2)
      goto LABEL_6;
  }
  v6 = 0xE700000000000000;
  if (v2 != 0x6E776F6E6B6E75)
  {
LABEL_15:
    v7 = sub_1DC62B520();
    goto LABEL_16;
  }
LABEL_13:
  if (v3 != v6)
    goto LABEL_15;
  v7 = 1;
LABEL_16:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

void sub_1DC54496C(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1DC5449BC(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1DC544A68 + 4 * byte_1DC637B22[a2]))(0x6572676F72506E69);
}

uint64_t sub_1DC544A68(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x6572676F72506E69 && v1 == 0xEA00000000007373)
    v2 = 1;
  else
    v2 = sub_1DC62B520();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_1DC544B64(char a1, unsigned __int8 a2)
{
  uint64_t v2;
  unint64_t v3;
  int v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  if (a1)
  {
    if (a1 == 1)
      v2 = 0x6C616E7265746E69;
    else
      v2 = 0x6C616E7265747865;
    v3 = 0xE800000000000000;
    v4 = a2;
    if (a2)
    {
LABEL_6:
      if (v4 == 1)
        v5 = 0x6C616E7265746E69;
      else
        v5 = 0x6C616E7265747865;
      v6 = 0xE800000000000000;
      if (v2 != v5)
        goto LABEL_15;
      goto LABEL_13;
    }
  }
  else
  {
    v3 = 0xE700000000000000;
    v2 = 0x6E776F6E6B6E75;
    v4 = a2;
    if (a2)
      goto LABEL_6;
  }
  v6 = 0xE700000000000000;
  if (v2 != 0x6E776F6E6B6E75)
  {
LABEL_15:
    v7 = sub_1DC62B520();
    goto LABEL_16;
  }
LABEL_13:
  if (v3 != v6)
    goto LABEL_15;
  v7 = 1;
LABEL_16:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1DC544C54(uint64_t a1, uint64_t a2)
{
  return sub_1DC54575C(a1, a2, NetworkEventType.rawValue.getter);
}

uint64_t sub_1DC544C60(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2;
  uint64_t v3;
  unint64_t v4;
  int v5;
  uint64_t v6;
  unint64_t v7;
  char v8;

  v2 = a1;
  if (a1)
  {
    if (a1 == 1)
      v3 = 0x6574614C79616C70;
    else
      v3 = 0x7478654E79616C70;
    if (v2 == 1)
      v4 = 0xEF7377654E6E4972;
    else
      v4 = 0xEE007377654E6E49;
    v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1)
        v6 = 0x6574614C79616C70;
      else
        v6 = 0x7478654E79616C70;
      if (v5 == 1)
        v7 = 0xEF7377654E6E4972;
      else
        v7 = 0xEE007377654E6E49;
      if (v3 != v6)
        goto LABEL_21;
      goto LABEL_19;
    }
  }
  else
  {
    v4 = 0xE700000000000000;
    v3 = 0x6E776F6E6B6E75;
    v5 = a2;
    if (a2)
      goto LABEL_9;
  }
  v7 = 0xE700000000000000;
  if (v3 != 0x6E776F6E6B6E75)
  {
LABEL_21:
    v8 = sub_1DC62B520();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7)
    goto LABEL_21;
  v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

void sub_1DC544DA8(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1DC544DF8(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1DC544EE4 + 4 * byte_1DC637B30[a2]))(0x615472656E6E6162);
}

uint64_t sub_1DC544EE4(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x615472656E6E6162 && v1 == 0xE900000000000070)
    v2 = 1;
  else
    v2 = sub_1DC62B520();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

void sub_1DC545038(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1DC545088(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1DC545160 + 4 * byte_1DC637B41[a2]))(0x616C506F54706174);
}

uint64_t sub_1DC545160(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x616C506F54706174 && v1 == 0xE900000000000079)
    v2 = 1;
  else
    v2 = sub_1DC62B520();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_1DC545298(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2;
  uint64_t v3;
  unint64_t v4;
  int v5;
  uint64_t v6;
  unint64_t v7;
  char v8;

  v2 = a1;
  if (a1)
  {
    if (a1 == 1)
      v3 = 0x79616C706F747561;
    else
      v3 = 0x7474754279616C70;
    if (v2 == 1)
      v4 = 0xE800000000000000;
    else
      v4 = 0xEF73736572506E6FLL;
    v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1)
        v6 = 0x79616C706F747561;
      else
        v6 = 0x7474754279616C70;
      if (v5 == 1)
        v7 = 0xE800000000000000;
      else
        v7 = 0xEF73736572506E6FLL;
      if (v3 != v6)
        goto LABEL_21;
      goto LABEL_19;
    }
  }
  else
  {
    v4 = 0xE700000000000000;
    v3 = 0x6E776F6E6B6E75;
    v5 = a2;
    if (a2)
      goto LABEL_9;
  }
  v7 = 0xE700000000000000;
  if (v3 != 0x6E776F6E6B6E75)
  {
LABEL_21:
    v8 = sub_1DC62B520();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7)
    goto LABEL_21;
  v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

void sub_1DC5453C8(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1DC545418(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1DC545474 + 4 * byte_1DC637B4E[a2]))(0x7070416E69);
}

uint64_t sub_1DC545474(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x7070416E69 && v1 == 0xE500000000000000)
    v2 = 1;
  else
    v2 = sub_1DC62B520();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

void sub_1DC545514(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1DC545564(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1DC5455E8 + 4 * byte_1DC637B57[a2]))(0x72656E6E6162);
}

uint64_t sub_1DC5455E8(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x72656E6E6162 && v1 == 0xE600000000000000)
    v2 = 1;
  else
    v2 = sub_1DC62B520();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_1DC5456B0(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0x6D6F74737563;
  else
    v3 = 0x746C7561666564;
  if (v2)
    v4 = 0xE700000000000000;
  else
    v4 = 0xE600000000000000;
  if ((a2 & 1) != 0)
    v5 = 0x6D6F74737563;
  else
    v5 = 0x746C7561666564;
  if ((a2 & 1) != 0)
    v6 = 0xE600000000000000;
  else
    v6 = 0xE700000000000000;
  if (v3 == v5 && v4 == v6)
    v7 = 1;
  else
    v7 = sub_1DC62B520();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1DC545750(uint64_t a1, uint64_t a2)
{
  return sub_1DC54575C(a1, a2, StoreKitError.rawValue.getter);
}

uint64_t sub_1DC54575C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v9;

  v4 = a3();
  v6 = v5;
  if (v4 == a3() && v6 == v7)
    v9 = 1;
  else
    v9 = sub_1DC62B520();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v9 & 1;
}

uint64_t sub_1DC5457F4(char a1, unsigned __int8 a2)
{
  uint64_t v2;
  unint64_t v3;
  int v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  if (a1)
  {
    if (a1 == 1)
      v2 = 0x656C707061;
    else
      v2 = 0x6F6F686179;
    v3 = 0xE500000000000000;
    v4 = a2;
    if (a2)
    {
LABEL_6:
      if (v4 == 1)
        v5 = 0x656C707061;
      else
        v5 = 0x6F6F686179;
      v6 = 0xE500000000000000;
      if (v2 != v5)
        goto LABEL_15;
      goto LABEL_13;
    }
  }
  else
  {
    v3 = 0xE700000000000000;
    v2 = 0x6E776F6E6B6E75;
    v4 = a2;
    if (a2)
      goto LABEL_6;
  }
  v6 = 0xE700000000000000;
  if (v2 != 0x6E776F6E6B6E75)
  {
LABEL_15:
    v7 = sub_1DC62B520();
    goto LABEL_16;
  }
LABEL_13:
  if (v3 != v6)
    goto LABEL_15;
  v7 = 1;
LABEL_16:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

void sub_1DC5458FC(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1DC54594C(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1DC5459E4 + 4 * byte_1DC637B61[a2]))(0x626D79536E65706FLL);
}

uint64_t sub_1DC5459E4(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x626D79536E65706FLL && v1 == 0xEA00000000006C6FLL)
    v2 = 1;
  else
    v2 = sub_1DC62B520();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_1DC545AC4(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2;
  uint64_t v3;
  unint64_t v4;
  int v5;
  uint64_t v6;
  unint64_t v7;
  char v8;

  v2 = a1;
  if (a1)
  {
    if (a1 == 1)
      v3 = 0x656C706D6173;
    else
      v3 = 1819047270;
    if (v2 == 1)
      v4 = 0xE600000000000000;
    else
      v4 = 0xE400000000000000;
    v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1)
        v6 = 0x656C706D6173;
      else
        v6 = 1819047270;
      if (v5 == 1)
        v7 = 0xE600000000000000;
      else
        v7 = 0xE400000000000000;
      if (v3 != v6)
        goto LABEL_21;
      goto LABEL_19;
    }
  }
  else
  {
    v4 = 0xE700000000000000;
    v3 = 0x6E776F6E6B6E75;
    v5 = a2;
    if (a2)
      goto LABEL_9;
  }
  v7 = 0xE700000000000000;
  if (v3 != 0x6E776F6E6B6E75)
  {
LABEL_21:
    v8 = sub_1DC62B520();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7)
    goto LABEL_21;
  v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

void sub_1DC545BC4(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1DC545C14(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1DC545CB0 + 4 * byte_1DC637B6C[a2]))(0x6574726143616C61);
}

uint64_t sub_1DC545CB0(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x6574726143616C61 && v1 == 0xE800000000000000)
    v2 = 1;
  else
    v2 = sub_1DC62B520();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

void sub_1DC545D9C(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1DC545DEC(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1DC545E50 + 4 * byte_1DC637B76[a2]))(0x776F7272616873);
}

uint64_t sub_1DC545E50(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char v3;

  if (a1 == 0x776F7272616873 && v1 == v2)
    v3 = 1;
  else
    v3 = sub_1DC62B520();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

void sub_1DC545EF8(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1DC545F48(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1DC546054 + 4 * byte_1DC637B84[a2]))(0x6469577961646F74);
}

uint64_t sub_1DC546054(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x6469577961646F74 && v1 == 0xEB00000000746567)
    v2 = 1;
  else
    v2 = sub_1DC62B520();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_1DC546194(char a1, unsigned __int8 a2)
{
  uint64_t v2;
  unint64_t v3;
  int v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  if (a1)
  {
    if (a1 == 1)
      v2 = 1952870259;
    else
      v2 = 1685217640;
    v3 = 0xE400000000000000;
    v4 = a2;
    if (a2)
    {
LABEL_6:
      if (v4 == 1)
        v5 = 1952870259;
      else
        v5 = 1685217640;
      v6 = 0xE400000000000000;
      if (v2 != v5)
        goto LABEL_15;
      goto LABEL_13;
    }
  }
  else
  {
    v3 = 0xE700000000000000;
    v2 = 0x6E776F6E6B6E75;
    v4 = a2;
    if (a2)
      goto LABEL_6;
  }
  v6 = 0xE700000000000000;
  if (v2 != 0x6E776F6E6B6E75)
  {
LABEL_15:
    v7 = sub_1DC62B520();
    goto LABEL_16;
  }
LABEL_13:
  if (v3 != v6)
    goto LABEL_15;
  v7 = 1;
LABEL_16:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1DC54628C(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2;
  uint64_t v3;
  unint64_t v4;
  int v5;
  uint64_t v6;
  unint64_t v7;
  char v8;

  v2 = a1;
  if (a1)
  {
    if (a1 == 1)
      v3 = 0x636961736F6DLL;
    else
      v3 = 0x7069727473;
    if (v2 == 1)
      v4 = 0xE600000000000000;
    else
      v4 = 0xE500000000000000;
    v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1)
        v6 = 0x636961736F6DLL;
      else
        v6 = 0x7069727473;
      if (v5 == 1)
        v7 = 0xE600000000000000;
      else
        v7 = 0xE500000000000000;
      if (v3 != v6)
        goto LABEL_21;
      goto LABEL_19;
    }
  }
  else
  {
    v4 = 0xE700000000000000;
    v3 = 0x6E776F6E6B6E75;
    v5 = a2;
    if (a2)
      goto LABEL_9;
  }
  v7 = 0xE700000000000000;
  if (v3 != 0x6E776F6E6B6E75)
  {
LABEL_21:
    v8 = sub_1DC62B520();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7)
    goto LABEL_21;
  v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1DC546394(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2;
  uint64_t v3;
  unint64_t v4;
  int v5;
  uint64_t v6;
  unint64_t v7;
  char v8;

  v2 = a1;
  if (a1)
  {
    if (a1 == 1)
      v3 = 0x647261646E617473;
    else
      v3 = 0x6C65527373657270;
    if (v2 == 1)
      v4 = 0xEB00000000464E41;
    else
      v4 = 0xEC00000065736165;
    v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1)
        v6 = 0x647261646E617473;
      else
        v6 = 0x6C65527373657270;
      if (v5 == 1)
        v7 = 0xEB00000000464E41;
      else
        v7 = 0xEC00000065736165;
      if (v3 != v6)
        goto LABEL_21;
      goto LABEL_19;
    }
  }
  else
  {
    v4 = 0xE700000000000000;
    v3 = 0x6E776F6E6B6E75;
    v5 = a2;
    if (a2)
      goto LABEL_9;
  }
  v7 = 0xE700000000000000;
  if (v3 != 0x6E776F6E6B6E75)
  {
LABEL_21:
    v8 = sub_1DC62B520();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7)
    goto LABEL_21;
  v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

void sub_1DC5464CC(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1DC54651C(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1DC546610 + 4 * byte_1DC637B97[a2]))(0x636E75614C707061);
}

uint64_t sub_1DC546610(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x636E75614C707061 && v1 == 0xE900000000000068)
    v2 = 1;
  else
    v2 = sub_1DC62B520();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

void sub_1DC546738(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1DC546788(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1DC54685C + 4 * byte_1DC637BA8[a2]))(0x797469757165);
}

uint64_t sub_1DC54685C(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x797469757165 && v1 == 0xE600000000000000)
    v2 = 1;
  else
    v2 = sub_1DC62B520();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_1DC546990(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2;
  uint64_t v3;
  unint64_t v4;
  int v5;
  uint64_t v6;
  unint64_t v7;
  char v8;

  v2 = a1;
  if (a1)
  {
    if (a1 == 1)
      v3 = 0x73736563637573;
    else
      v3 = 1818845542;
    if (v2 == 1)
      v4 = 0xE700000000000000;
    else
      v4 = 0xE400000000000000;
    v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1)
        v6 = 0x73736563637573;
      else
        v6 = 1818845542;
      if (v5 == 1)
        v7 = 0xE700000000000000;
      else
        v7 = 0xE400000000000000;
      if (v3 != v6)
        goto LABEL_21;
      goto LABEL_19;
    }
  }
  else
  {
    v4 = 0xE700000000000000;
    v3 = 0x6E776F6E6B6E75;
    v5 = a2;
    if (a2)
      goto LABEL_9;
  }
  v7 = 0xE700000000000000;
  if (v3 != 0x6E776F6E6B6E75)
  {
LABEL_21:
    v8 = sub_1DC62B520();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7)
    goto LABEL_21;
  v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1DC546A98(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2;
  uint64_t v3;
  unint64_t v4;
  int v5;
  uint64_t v6;
  unint64_t v7;
  char v8;

  v2 = a1;
  if (a1)
  {
    if (a1 == 1)
      v3 = 7629160;
    else
      v3 = 1936943469;
    if (v2 == 1)
      v4 = 0xE300000000000000;
    else
      v4 = 0xE400000000000000;
    v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1)
        v6 = 7629160;
      else
        v6 = 1936943469;
      if (v5 == 1)
        v7 = 0xE300000000000000;
      else
        v7 = 0xE400000000000000;
      if (v3 != v6)
        goto LABEL_21;
      goto LABEL_19;
    }
  }
  else
  {
    v4 = 0xE700000000000000;
    v3 = 0x6E776F6E6B6E75;
    v5 = a2;
    if (a2)
      goto LABEL_9;
  }
  v7 = 0xE700000000000000;
  if (v3 != 0x6E776F6E6B6E75)
  {
LABEL_21:
    v8 = sub_1DC62B520();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7)
    goto LABEL_21;
  v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

void sub_1DC546B90(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1DC546BE0(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1DC546C4C + 4 * byte_1DC637BB4[a2]))(0x56656C6369747261);
}

uint64_t sub_1DC546C4C(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x56656C6369747261 && v1 == 0xEB00000000776569)
    v2 = 1;
  else
    v2 = sub_1DC62B520();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

void sub_1DC546CFC(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1DC546D4C(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1DC546DC8 + 4 * byte_1DC637BBE[a2]))(0x6F65646976);
}

uint64_t sub_1DC546DC8(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x6F65646976 && v1 == 0xE500000000000000)
    v2 = 1;
  else
    v2 = sub_1DC62B520();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

void sub_1DC546E94(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  int v26;
  void (*v27)(char *, uint64_t, uint64_t, uint64_t);
  void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  __int128 v35;
  __int128 v36;
  char *v37;
  uint64_t v38;
  char *v39;
  _DWORD v40[4];
  uint64_t v41;
  uint64_t v42;
  int v43;
  uint64_t v44;
  int v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  int v76;

  v59 = a5;
  v58 = a4;
  v64 = a3;
  v63 = a2;
  v65 = a6;
  v62 = sub_1DC62A1C4();
  v61 = *(_QWORD *)(v62 - 8);
  MEMORY[0x1E0C80A78](v62);
  v60 = (char *)v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1DC62A0C8();
  v68 = *(_QWORD *)(v9 - 8);
  v69 = v9;
  v10 = MEMORY[0x1E0C80A78](v9);
  v66 = (char *)v40 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v67 = (char *)v40 - v12;
  v70 = type metadata accessor for MediaEngageCompleteEvent.Model(0);
  MEMORY[0x1E0C80A78](v70);
  v71 = (char *)v40 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC547970();
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)v40 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_1DC62A77C();
  v18 = *(_QWORD *)(v17 - 8);
  MEMORY[0x1E0C80A78](v17);
  v20 = (char *)v40 - v19;
  sub_1DC5479C4();
  v22 = v21;
  v23 = *(_QWORD *)(v21 - 8);
  MEMORY[0x1E0C80A78](v21);
  v25 = (char *)v40 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v18 + 16))(v20, a1, v17);
  v26 = swift_dynamicCast();
  v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v23 + 56);
  if (v26)
  {
    v27(v16, 0, 1, v22);
    (*(void (**)(char *, char *, uint64_t))(v23 + 32))(v25, v16, v22);
    v28 = (void *)sub_1DC62A758();
    v29 = sub_1DC62AA7C();
    if (!v6)
    {
      v31 = v30;
      v32 = v29;

      sub_1DC62A050();
      swift_allocObject();
      sub_1DC62A044();
      sub_1DC4B6748(&qword_1F036BF78, type metadata accessor for MediaEngageCompleteEvent.Model, (uint64_t)&protocol conformance descriptor for MediaEngageCompleteEvent.Model);
      v33 = v70;
      sub_1DC62A038();
      v55 = v32;
      v56 = v31;
      swift_release();
      v34 = &v71[*(int *)(v33 + 20)];
      v76 = *((_DWORD *)v34 + 16);
      v35 = *((_OWORD *)v34 + 3);
      v74 = *((_OWORD *)v34 + 2);
      v75 = v35;
      v36 = *((_OWORD *)v34 + 1);
      v72 = *(_OWORD *)v34;
      v73 = v36;
      v54 = *(_QWORD *)v34;
      v53 = *((_QWORD *)v34 + 1);
      v52 = *((_QWORD *)v34 + 2);
      v51 = *((_QWORD *)v34 + 3);
      v50 = v34[32];
      v49 = *((_QWORD *)v34 + 5);
      v48 = v34[48];
      v47 = *((_QWORD *)v34 + 7);
      v44 = v34[64];
      v43 = v34[65];
      v46 = v34[66];
      v45 = v34[67];
      v37 = &v71[*(int *)(v33 + 32)];
      v38 = *v37;
      v42 = *((_QWORD *)v37 + 1);
      v41 = *((unsigned int *)v37 + 6);
      v40[3] = v37[28];
      v39 = (char *)sub_1DC547360 + 4 * byte_1DC637BC4[v38];
      v57 = v38;
      __asm { BR              X9 }
    }
    (*(void (**)(char *, uint64_t))(v23 + 8))(v25, v22);

  }
  else
  {
    v27(v16, 1, 1, v22);
    sub_1DC547A80((uint64_t)v16, (uint64_t (*)(_QWORD))sub_1DC547970);
    sub_1DC525A4C();
    swift_allocError();
    swift_willThrow();
  }
}

uint64_t sub_1DC547360()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v4 = sub_1DC62B520();
  sub_1DC547ABC(v3 - 208);
  swift_bridgeObjectRetain();
  v5 = swift_bridgeObjectRelease();
  if ((v4 & 1) != 0)
  {
    v7 = *(_QWORD *)(v3 - 256);
    sub_1DC62A0BC();
    (*(void (**)(_QWORD, uint64_t, _QWORD))(*(_QWORD *)(v3 - 248) + 16))(*(_QWORD *)(v3 - 264), v7, *(_QWORD *)(v3 - 240));
    v8 = sub_1DC525BA8(0, 1, 1, MEMORY[0x1E0DEE9D8]);
    v10 = *(_QWORD *)(v8 + 16);
    v9 = *(_QWORD *)(v8 + 24);
    if (v10 >= v9 >> 1)
      v8 = sub_1DC525BA8(v9 > 1, v10 + 1, 1, v8);
    *(_QWORD *)(v8 + 16) = v10 + 1;
    v12 = *(_QWORD *)(v3 - 248);
    v11 = *(_QWORD *)(v3 - 240);
    (*(void (**)(unint64_t, _QWORD, uint64_t))(v12 + 32))(v8+ ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80))+ *(_QWORD *)(v12 + 72) * v10, *(_QWORD *)(v3 - 264), v11);
    *(_QWORD *)(v3 - 72) = v8;
    v13 = *(_QWORD *)(v3 - 224) + *(int *)(*(_QWORD *)(v3 - 232) + 52);
    v14 = *(_OWORD *)(v13 + 16);
    *(_OWORD *)(v3 - 128) = *(_OWORD *)v13;
    *(_OWORD *)(v3 - 112) = v14;
    *(_WORD *)(v3 - 96) = *(_WORD *)(v13 + 32);
    sub_1DC547ABC(v3 - 128);
    v15 = sub_1DC547C7C((_QWORD *)(v3 - 208));
    sub_1DC547AF0(v3 - 128);
    sub_1DC5477D4(v15);
    *(_BYTE *)(v3 - 212) = *(_DWORD *)(v3 - 468);
    v16 = sub_1DC547FFC(*(_QWORD *)(v3 - 336));
    swift_bridgeObjectRelease();
    sub_1DC5477D4(v16);
    v17 = sub_1DC547B24();
    sub_1DC5477D4(v17);
    v18 = *(_QWORD *)(v3 - 312);
    sub_1DC62A1B8();
    v19 = sub_1DC62A1AC();
    v21 = v20;
    sub_1DC547A3C(*(_QWORD *)(v3 - 352), *(_QWORD *)(v3 - 344));
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v3 - 304) + 8))(v18, *(_QWORD *)(v3 - 296));
    (*(void (**)(_QWORD, uint64_t))(v12 + 8))(*(_QWORD *)(v3 - 256), v11);
    sub_1DC547A80(*(_QWORD *)(v3 - 224), type metadata accessor for MediaEngageCompleteEvent.Model);
    (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0, v1);
    v22 = 256;
    if (!*(_DWORD *)(v3 - 444))
      v22 = 0;
    v23 = v22 | *(_QWORD *)(v3 - 440);
    v24 = *(_QWORD **)(v3 - 272);
    v25 = *(_QWORD *)(v3 - 360);
    *v24 = *(_QWORD *)(v3 - 72);
    v24[1] = v25;
    v26 = v23 | (*(_QWORD *)(v3 - 424) << 16);
    v27 = 0x1000000;
    if (!*(_DWORD *)(v3 - 428))
      v27 = 0;
    v24[2] = *(_QWORD *)(v3 - 368);
    v28 = v26 | v27;
    v29 = *(_QWORD *)(v3 - 384);
    v24[3] = *(_QWORD *)(v3 - 376);
    v24[4] = v29;
    v30 = *(_QWORD *)(v3 - 400);
    v24[5] = *(_QWORD *)(v3 - 392);
    v24[6] = v30;
    v31 = *(_QWORD *)(v3 - 416);
    v24[7] = *(_QWORD *)(v3 - 408);
    v24[8] = v31;
    v24[9] = v28;
    v24[10] = 2;
    v32 = *(_QWORD *)(v3 - 280);
    v24[11] = *(_QWORD *)(v3 - 288);
    v24[12] = v32;
    v24[13] = v19;
    v24[14] = v21;
    swift_bridgeObjectRetain();
    JUMPOUT(0x1DC547160);
  }
  return ((uint64_t (*)(uint64_t))((char *)&loc_1DC547420
                                          + 4 * byte_1DC637BCA[*(_QWORD *)(v3 - 336)]))(v5);
}

uint64_t sub_1DC5477D4(uint64_t a1)
{
  unint64_t *v1;
  uint64_t v2;
  unint64_t v3;
  int64_t v4;
  int64_t v5;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;
  int64_t v23;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *v1;
  v4 = *(_QWORD *)(*v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= *(_QWORD *)(v3 + 24) >> 1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_5;
    goto LABEL_18;
  }
  if (v4 <= v5)
    v23 = v4 + v2;
  else
    v23 = v4;
  v3 = sub_1DC525BA8(isUniquelyReferenced_nonNull_native, v23, 1, v3);
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
LABEL_5:
  v8 = *(_QWORD *)(v3 + 16);
  v9 = (*(_QWORD *)(v3 + 24) >> 1) - v8;
  v10 = sub_1DC62A0C8();
  if (v9 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v11 = *(_QWORD *)(v10 - 8);
  v12 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v13 = *(_QWORD *)(v11 + 72);
  v14 = v3 + v12 + v13 * v8;
  v15 = a1 + v12;
  v16 = v13 * v2;
  v17 = v14 + v16;
  v18 = v15 + v16;
  if (v15 < v17 && v14 < v18)
    goto LABEL_24;
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    result = swift_bridgeObjectRelease();
    *v1 = v3;
    return result;
  }
  v20 = *(_QWORD *)(v3 + 16);
  v21 = __OFADD__(v20, v2);
  v22 = v20 + v2;
  if (!v21)
  {
    *(_QWORD *)(v3 + 16) = v22;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  result = sub_1DC62B3C4();
  __break(1u);
  return result;
}

uint64_t type metadata accessor for MediaEngageCompletedEventQueryItemsGenerator()
{
  return objc_opt_self();
}

void sub_1DC54795C(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  sub_1DC546E94(a1, a2, a3, a4, a5, a6);
}

void sub_1DC547970()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1F036BF70)
  {
    sub_1DC5479C4();
    v0 = sub_1DC62B25C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1F036BF70);
  }
}

void sub_1DC5479C4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EDB0E718)
  {
    type metadata accessor for MediaEngageCompleteEvent(255);
    sub_1DC4B6748(&qword_1EDB10CC8, type metadata accessor for MediaEngageCompleteEvent, (uint64_t)&protocol conformance descriptor for MediaEngageCompleteEvent);
    v0 = sub_1DC62A77C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EDB0E718);
  }
}

uint64_t sub_1DC547A3C(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_release();
  }
  return swift_release();
}

uint64_t sub_1DC547A80(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v3;

  v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1DC547ABC(uint64_t a1)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1DC547AF0(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

unint64_t sub_1DC547B24()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v11;

  v0 = sub_1DC62A0C8();
  v1 = *(_QWORD *)(v0 - 8);
  v2 = MEMORY[0x1E0C80A78](v0);
  v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v11 - v5;
  sub_1DC62A0BC();
  (*(void (**)(char *, char *, uint64_t))(v1 + 16))(v4, v6, v0);
  v7 = sub_1DC525BA8(0, 1, 1, MEMORY[0x1E0DEE9D8]);
  v9 = *(_QWORD *)(v7 + 16);
  v8 = *(_QWORD *)(v7 + 24);
  if (v9 >= v8 >> 1)
    v7 = sub_1DC525BA8(v8 > 1, v9 + 1, 1, v7);
  *(_QWORD *)(v7 + 16) = v9 + 1;
  (*(void (**)(unint64_t, char *, uint64_t))(v1 + 32))(v7+ ((*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80))+ *(_QWORD *)(v1 + 72) * v9, v4, v0);
  (*(void (**)(char *, uint64_t))(v1 + 8))(v6, v0);
  return v7;
}

unint64_t sub_1DC547C7C(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  void (*v21)(unint64_t, char *, uint64_t);
  char *v22;
  void (*v23)(char *, uint64_t);
  char *v24;
  unint64_t v25;
  unint64_t v26;
  int v27;
  char *v28;
  char *v29;
  unint64_t v30;
  unint64_t v31;
  char *v33;
  char *v34;
  _QWORD *v35;
  unint64_t v36;
  void (*v37)(char *, char *, uint64_t);
  char *v38;
  uint64_t v39;
  uint64_t v40;

  v2 = sub_1DC62A0C8();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x1E0C80A78](v2);
  v33 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = MEMORY[0x1E0C80A78](v4);
  v34 = (char *)&v33 - v7;
  v8 = MEMORY[0x1E0C80A78](v6);
  v38 = (char *)&v33 - v9;
  v10 = MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v33 - v11;
  MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v33 - v13;
  v15 = a1[1];
  v39 = *a1;
  v40 = v15;
  swift_bridgeObjectRetain();
  sub_1DC62B118();
  sub_1DC62B0F4();
  swift_bridgeObjectRelease();
  sub_1DC62A0BC();
  swift_bridgeObjectRelease();
  v37 = *(void (**)(char *, char *, uint64_t))(v3 + 16);
  v37(v12, v14, v2);
  v16 = sub_1DC525BA8(0, 1, 1, MEMORY[0x1E0DEE9D8]);
  v18 = *(_QWORD *)(v16 + 16);
  v17 = *(_QWORD *)(v16 + 24);
  v35 = a1;
  if (v18 >= v17 >> 1)
    v16 = sub_1DC525BA8(v17 > 1, v18 + 1, 1, v16);
  *(_QWORD *)(v16 + 16) = v18 + 1;
  v36 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v19 = *(_QWORD *)(v3 + 72);
  v20 = v16 + v36 + v19 * v18;
  v21 = *(void (**)(unint64_t, char *, uint64_t))(v3 + 32);
  v21(v20, v12, v2);
  v22 = v38;
  sub_1DC62A0BC();
  v23 = *(void (**)(char *, uint64_t))(v3 + 8);
  v23(v14, v2);
  v21((unint64_t)v14, v22, v2);
  v24 = v34;
  v37(v34, v14, v2);
  v26 = *(_QWORD *)(v16 + 16);
  v25 = *(_QWORD *)(v16 + 24);
  if (v26 >= v25 >> 1)
    v16 = sub_1DC525BA8(v25 > 1, v26 + 1, 1, v16);
  v27 = *((unsigned __int8 *)v35 + 64);
  *(_QWORD *)(v16 + 16) = v26 + 1;
  v21(v16 + v36 + v26 * v19, v24, v2);
  if (v27 == 1)
  {
    v28 = v38;
    sub_1DC62A0BC();
    v23(v14, v2);
    v21((unint64_t)v14, v28, v2);
    v29 = v33;
    v37(v33, v14, v2);
    v31 = *(_QWORD *)(v16 + 16);
    v30 = *(_QWORD *)(v16 + 24);
    if (v31 >= v30 >> 1)
      v16 = sub_1DC525BA8(v30 > 1, v31 + 1, 1, v16);
    *(_QWORD *)(v16 + 16) = v31 + 1;
    v21(v16 + v36 + v31 * v19, v29, v2);
  }
  v23(v14, v2);
  return v16;
}

unint64_t sub_1DC547FFC(unsigned __int8 a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  int v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v22;

  v2 = sub_1DC62A0C8();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x1E0C80A78](v4);
  v9 = (char *)&v22 - v8;
  v10 = MEMORY[0x1E0C80A78](v7);
  v12 = (char *)&v22 - v11;
  MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v22 - v13;
  v15 = a1;
  v16 = MEMORY[0x1E0DEE9D8];
  if (((1 << v15) & 0x2D) == 0)
  {
    if (v15 == 1)
    {
      sub_1DC62A0BC();
      (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v6, v9, v2);
      v16 = sub_1DC525BA8(0, 1, 1, MEMORY[0x1E0DEE9D8]);
      v18 = *(_QWORD *)(v16 + 16);
      v17 = *(_QWORD *)(v16 + 24);
      v19 = v18 + 1;
      if (v18 >= v17 >> 1)
        v16 = sub_1DC525BA8(v17 > 1, v18 + 1, 1, v16);
      v12 = v6;
      v14 = v9;
    }
    else
    {
      sub_1DC62A0BC();
      (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v12, v14, v2);
      v16 = sub_1DC525BA8(0, 1, 1, MEMORY[0x1E0DEE9D8]);
      v18 = *(_QWORD *)(v16 + 16);
      v20 = *(_QWORD *)(v16 + 24);
      v19 = v18 + 1;
      if (v18 >= v20 >> 1)
        v16 = sub_1DC525BA8(v20 > 1, v18 + 1, 1, v16);
    }
    *(_QWORD *)(v16 + 16) = v19;
    (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(v16+ ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80))+ *(_QWORD *)(v3 + 72) * v18, v12, v2);
    (*(void (**)(char *, uint64_t))(v3 + 8))(v14, v2);
  }
  return v16;
}

__n128 URLHandlerContext<A>.urlReferralData()@<Q0>(uint64_t a1@<X8>)
{
  void (*v1)(char *, uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  void (*v36)(char *, uint64_t);
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void (*v40)(char *, uint64_t);
  char v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  char *v48;
  char *v49;
  char *v50;
  uint64_t v51;
  void (*v52)(char *, uint64_t);
  char *v53;
  char *v54;
  uint64_t v55;
  char *v56;
  char *v57;
  char *v58;
  uint64_t v59;
  char *v60;
  char *v61;
  unint64_t v62;
  uint64_t v63;
  unint64_t v64;
  unint64_t v65;
  void (*v66)(char *, uint64_t);
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  char *v73;
  uint64_t v74;
  unint64_t v75;
  unint64_t v76;
  char *v77;
  char *v78;
  char *v79;
  unint64_t v80;
  __n128 result;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  char *v85;
  void (*v86)(char *, uint64_t);
  char *v87;
  char *v88;
  char *v89;
  char *v90;
  char *v91;
  __n128 v92;
  __int128 v93;
  uint64_t v94;
  char *v95;
  unint64_t v96;
  char *v97;
  uint64_t v98;
  void (*v99)(char *, uint64_t);
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  unint64_t v103;
  _OWORD v104[2];
  uint64_t v105;
  uint64_t v106;

  v94 = sub_1DC62AE54();
  *(_QWORD *)&v93 = *(_QWORD *)(v94 - 8);
  MEMORY[0x1E0C80A78](v94);
  v92.n128_u64[0] = (unint64_t)&v82 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v102 = sub_1DC62A140();
  v84 = *(_QWORD *)(v102 - 8);
  v4 = MEMORY[0x1E0C80A78](v102);
  v83 = (char *)&v82 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v97 = (char *)&v82 - v6;
  v7 = sub_1DC62ACEC();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x1E0C80A78](v7);
  v95 = (char *)&v82 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x1E0C80A78](v9);
  v90 = (char *)&v82 - v12;
  v13 = MEMORY[0x1E0C80A78](v11);
  v89 = (char *)&v82 - v14;
  v15 = MEMORY[0x1E0C80A78](v13);
  v87 = (char *)&v82 - v16;
  MEMORY[0x1E0C80A78](v15);
  v18 = (char *)&v82 - v17;
  v19 = sub_1DC62AD10();
  v20 = *(_QWORD *)(v19 - 8);
  v21 = MEMORY[0x1E0C80A78](v19);
  v91 = (char *)&v82 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = MEMORY[0x1E0C80A78](v21);
  v88 = (char *)&v82 - v24;
  v25 = MEMORY[0x1E0C80A78](v23);
  v85 = (char *)&v82 - v26;
  v27 = MEMORY[0x1E0C80A78](v25);
  v29 = (char *)&v82 - v28;
  v30 = MEMORY[0x1E0C80A78](v27);
  v32 = (char *)&v82 - v31;
  MEMORY[0x1E0C80A78](v30);
  v34 = (char *)&v82 - v33;
  sub_1DC548C08();
  v98 = v35;
  v86 = v1;
  sub_1DC62ADAC();
  sub_1DC62AD04();
  v36 = *(void (**)(char *, uint64_t))(v20 + 8);
  v100 = v19;
  v36(v34, v19);
  v37 = sub_1DC62ACF8();
  v39 = v38;
  v40 = *(void (**)(char *, uint64_t))(v8 + 8);
  v101 = v7;
  v99 = v40;
  v40(v18, v7);
  if (v39)
  {
    if (v37 == 0x746567646977 && v39 == 0xE600000000000000)
    {
      v96 = 0xD000000000000017;
      swift_bridgeObjectRelease();
LABEL_7:
      v42 = 0x80000001DC64BEE0;
      goto LABEL_9;
    }
    v41 = sub_1DC62B520();
    swift_bridgeObjectRelease();
    if ((v41 & 1) != 0)
    {
      v96 = 0xD000000000000017;
      goto LABEL_7;
    }
  }
  v96 = 0;
  v42 = 0xE000000000000000;
LABEL_9:
  v103 = v42;
  v43 = (uint64_t)v86;
  v44 = v84;
  v45 = v83;
  sub_1DC62ADAC();
  sub_1DC62ACE0();
  v46 = v32;
  v47 = v100;
  v36(v46, v100);
  sub_1DC62A110();
  v86 = *(void (**)(char *, uint64_t))(v44 + 8);
  v86(v45, v102);
  sub_1DC62ADAC();
  v48 = v87;
  sub_1DC62AD04();
  v36(v29, v47);
  v84 = sub_1DC62ACF8();
  v83 = v49;
  v50 = v48;
  v51 = v101;
  v52 = v99;
  v99(v50, v101);
  v53 = v85;
  sub_1DC62ADAC();
  v54 = v89;
  sub_1DC62AD04();
  v36(v53, v47);
  v55 = sub_1DC62ACF8();
  v85 = v56;
  v52(v54, v51);
  v57 = v88;
  sub_1DC62ADAC();
  v58 = v90;
  sub_1DC62AD04();
  v36(v57, v47);
  v59 = sub_1DC62ACF8();
  v61 = v60;
  v52(v58, v51);
  v62 = v92.n128_u64[0];
  sub_1DC62ADA0();
  v63 = sub_1DC62AE48();
  v65 = v64;
  (*(void (**)(unint64_t, uint64_t))(v93 + 8))(v62, v94);
  v87 = (char *)v55;
  v89 = (char *)v59;
  v88 = v61;
  v66 = v36;
  if (v65)
  {
    swift_bridgeObjectRelease();
    v96 = v63;
    v103 = v65;
  }
  v67 = v97;
  v94 = sub_1DC62A11C();
  v69 = v68;
  sub_1DC548950(v43, (uint64_t *)v104);
  v92 = (__n128)v104[1];
  v93 = v104[0];
  v70 = v105;
  v71 = v106;
  v72 = v91;
  sub_1DC62ADAC();
  v73 = v95;
  sub_1DC62AD04();
  v66(v72, v100);
  v74 = sub_1DC62ACF8();
  v76 = v75;
  v99(v73, v101);
  if (!v76)
    v74 = 0;
  if (v76 <= 1)
    v76 = 1;
  v86(v67, v102);
  v77 = v83;
  *(_QWORD *)a1 = v84;
  *(_QWORD *)(a1 + 8) = v77;
  v78 = v85;
  *(_QWORD *)(a1 + 16) = v87;
  *(_QWORD *)(a1 + 24) = v78;
  v79 = v88;
  *(_QWORD *)(a1 + 32) = v89;
  *(_QWORD *)(a1 + 40) = v79;
  v80 = v103;
  *(_QWORD *)(a1 + 48) = v96;
  *(_QWORD *)(a1 + 56) = v80;
  *(_QWORD *)(a1 + 64) = v94;
  *(_QWORD *)(a1 + 72) = v69;
  result = v92;
  *(_OWORD *)(a1 + 80) = v93;
  *(__n128 *)(a1 + 96) = result;
  *(_QWORD *)(a1 + 112) = v70;
  *(_QWORD *)(a1 + 120) = v71;
  *(_QWORD *)(a1 + 128) = v74;
  *(_QWORD *)(a1 + 136) = v76;
  return result;
}

uint64_t sub_1DC548950@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  void (*v21)(char *, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)(char *, uint64_t);
  uint64_t result;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;

  v4 = sub_1DC62ACEC();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](v4);
  v45 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x1E0C80A78](v6);
  v43 = (char *)&v39 - v9;
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v39 - v10;
  v12 = sub_1DC62AD10();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = MEMORY[0x1E0C80A78](v12);
  v42 = (char *)&v39 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = MEMORY[0x1E0C80A78](v14);
  v18 = (char *)&v39 - v17;
  MEMORY[0x1E0C80A78](v16);
  v20 = (char *)&v39 - v19;
  sub_1DC548C08();
  v44 = a1;
  sub_1DC62ADAC();
  sub_1DC62AD04();
  v21 = *(void (**)(char *, uint64_t))(v13 + 8);
  v21(v20, v12);
  v41 = sub_1DC62ACF8();
  v23 = v22;
  v24 = *(uint64_t (**)(char *, uint64_t))(v5 + 8);
  v46 = v4;
  result = v24(v11, v4);
  if (v23)
  {
    v40 = v23;
    sub_1DC62ADAC();
    v26 = v43;
    sub_1DC62AD04();
    v21(v18, v12);
    v39 = sub_1DC62ACF8();
    v28 = v27;
    v29 = v26;
    v30 = v46;
    v24(v29, v46);
    v31 = v42;
    sub_1DC62ADAC();
    v32 = v45;
    sub_1DC62AD04();
    v21(v31, v12);
    v33 = sub_1DC62ACF8();
    v35 = v34;
    v36 = v32;
    v23 = v40;
    result = v24(v36, v30);
    v37 = v39;
    v38 = v41;
  }
  else
  {
    v38 = 0;
    v37 = 0;
    v28 = 0;
    v33 = 0;
    v35 = 0;
  }
  *a2 = v38;
  a2[1] = v23;
  a2[2] = v37;
  a2[3] = v28;
  a2[4] = v33;
  a2[5] = v35;
  return result;
}

void sub_1DC548C08()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EDB0E8F0)
  {
    sub_1DC62AF2C();
    v0 = sub_1DC62ADB8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EDB0E8F0);
  }
}

StocksAnalytics::AdType_optional __swiftcall AdType.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  StocksAnalytics::AdType_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1DC62B3DC();
  result.value = swift_bridgeObjectRelease();
  v5 = 4;
  if (v3 < 4)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t AdType.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1DC548CE4 + 4 * byte_1DC637C10[*v0]))(0x6E776F6E6B6E75, 0xE700000000000000);
}

unint64_t sub_1DC548CE4()
{
  return 0xD000000000000013;
}

uint64_t sub_1DC548D00()
{
  return 0x72656C6C65736572;
}

uint64_t sub_1DC548D20()
{
  return 0x6573756F68;
}

void sub_1DC548D34(char *a1)
{
  sub_1DC541FF0(*a1);
}

unint64_t sub_1DC548D44()
{
  unint64_t result;

  result = qword_1F036BF80;
  if (!qword_1F036BF80)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for AdType, &type metadata for AdType);
    atomic_store(result, (unint64_t *)&qword_1F036BF80);
  }
  return result;
}

void sub_1DC548D88()
{
  char *v0;

  sub_1DC601ECC(*v0);
}

void sub_1DC548D90()
{
  __asm { BR              X10 }
}

uint64_t sub_1DC548DCC()
{
  sub_1DC62B10C();
  return swift_bridgeObjectRelease();
}

void sub_1DC548E30(uint64_t a1)
{
  char *v1;

  sub_1DC603B1C(a1, *v1);
}

StocksAnalytics::AdType_optional sub_1DC548E38(Swift::String *a1)
{
  return AdType.init(rawValue:)(*a1);
}

uint64_t sub_1DC548E44()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_1DC548E74 + 4 * byte_1DC637C18[*v0]))();
}

void sub_1DC548E74(_QWORD *a1@<X8>)
{
  *a1 = 0xD000000000000013;
  a1[1] = 0x80000001DC64B6F0;
}

void sub_1DC548E94(uint64_t a1@<X8>)
{
  strcpy((char *)a1, "resellerSold");
  *(_BYTE *)(a1 + 13) = 0;
  *(_WORD *)(a1 + 14) = -5120;
}

void sub_1DC548EB8(_QWORD *a1@<X8>)
{
  *a1 = 0x6573756F68;
  a1[1] = 0xE500000000000000;
}

uint64_t sub_1DC548ED0()
{
  sub_1DC549044();
  return sub_1DC62B13C();
}

uint64_t sub_1DC548F2C()
{
  sub_1DC549044();
  return sub_1DC62B130();
}

uint64_t storeEnumTagSinglePayload for AdType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1DC548FC4 + 4 * byte_1DC637C21[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1DC548FF8 + 4 * byte_1DC637C1C[v4]))();
}

uint64_t sub_1DC548FF8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC549000(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DC549008);
  return result;
}

uint64_t sub_1DC549014(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DC54901CLL);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1DC549020(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC549028(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AdType()
{
  return &type metadata for AdType;
}

unint64_t sub_1DC549044()
{
  unint64_t result;

  result = qword_1F036BF88;
  if (!qword_1F036BF88)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for AdType, &type metadata for AdType);
    atomic_store(result, (unint64_t *)&qword_1F036BF88);
  }
  return result;
}

uint64_t sub_1DC549088(uint64_t a1)
{
  return sub_1DC4BE784(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], qword_1F036BF90, MEMORY[0x1E0CF8078]);
}

uint64_t static NonNewsArticleViewResumeEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C2FE8(&qword_1F0369030, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1F036BF90, a1);
}

uint64_t sub_1DC5490C8(uint64_t a1)
{
  return sub_1DC4BE784(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], qword_1F036BFA8, MEMORY[0x1E0CF8380]);
}

uint64_t static NonNewsArticleViewResumeEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C2FE8(&qword_1F0369038, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1F036BFA8, a1);
}

uint64_t NonNewsArticleViewResumeEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C37DC((uint64_t (*)(_QWORD))sub_1DC4B6600, a1);
}

uint64_t NonNewsArticleViewResumeEvent.eventData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  sub_1DC4B6600();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*NonNewsArticleViewResumeEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t NonNewsArticleViewResumeEvent.viewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for NonNewsArticleViewResumeEvent(0) + 20);
  sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t type metadata accessor for NonNewsArticleViewResumeEvent(uint64_t a1)
{
  return sub_1DC4B385C(a1, qword_1F036C030);
}

uint64_t NonNewsArticleViewResumeEvent.viewData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for NonNewsArticleViewResumeEvent(0) + 20);
  sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*NonNewsArticleViewResumeEvent.viewData.modify())()
{
  type metadata accessor for NonNewsArticleViewResumeEvent(0);
  return nullsub_1;
}

uint64_t NonNewsArticleViewResumeEvent.nonNewsArticleData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for NonNewsArticleViewResumeEvent(0) + 24);
  sub_1DC4B4B50(0, &qword_1F036AF00, (void (*)(void))sub_1DC503FF0, (void (*)(void))sub_1DC504038);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t NonNewsArticleViewResumeEvent.nonNewsArticleData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for NonNewsArticleViewResumeEvent(0) + 24);
  sub_1DC4B4B50(0, &qword_1F036AF00, (void (*)(void))sub_1DC503FF0, (void (*)(void))sub_1DC504038);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*NonNewsArticleViewResumeEvent.nonNewsArticleData.modify())()
{
  type metadata accessor for NonNewsArticleViewResumeEvent(0);
  return nullsub_1;
}

uint64_t NonNewsArticleViewResumeEvent.orientationData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for NonNewsArticleViewResumeEvent(0) + 28);
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E7C0, (void (*)(void))sub_1DC4C0014, (void (*)(void))sub_1DC4C0058);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t NonNewsArticleViewResumeEvent.orientationData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for NonNewsArticleViewResumeEvent(0) + 28);
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E7C0, (void (*)(void))sub_1DC4C0014, (void (*)(void))sub_1DC4C0058);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*NonNewsArticleViewResumeEvent.orientationData.modify())()
{
  type metadata accessor for NonNewsArticleViewResumeEvent(0);
  return nullsub_1;
}

uint64_t NonNewsArticleViewResumeEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v2 = *MEMORY[0x1E0CF8128];
  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
  v4 = (int *)type metadata accessor for NonNewsArticleViewResumeEvent(0);
  v5 = a1 + v4[5];
  sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 104))(v5, v2, v6);
  v7 = a1 + v4[6];
  sub_1DC4B4B50(0, &qword_1F036AF00, (void (*)(void))sub_1DC503FF0, (void (*)(void))sub_1DC504038);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 104))(v7, v2, v8);
  v9 = a1 + v4[7];
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E7C0, (void (*)(void))sub_1DC4C0014, (void (*)(void))sub_1DC4C0058);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 104))(v9, v2, v10);
}

uint64_t NonNewsArticleViewResumeEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C37DC((uint64_t (*)(_QWORD))MEMORY[0x1E0CF8670], a1);
}

uint64_t NonNewsArticleViewResumeEvent.Model.viewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for NonNewsArticleViewResumeEvent.Model(0) + 20));
  v5 = *v3;
  v4 = v3[1];
  LOWORD(v3) = *((_WORD *)v3 + 8);
  *(_QWORD *)a1 = v5;
  *(_QWORD *)(a1 + 8) = v4;
  *(_WORD *)(a1 + 16) = (_WORD)v3;
  return swift_bridgeObjectRetain();
}

uint64_t type metadata accessor for NonNewsArticleViewResumeEvent.Model(uint64_t a1)
{
  return sub_1DC4B385C(a1, qword_1F036C0C8);
}

uint64_t NonNewsArticleViewResumeEvent.Model.nonNewsArticleData.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3 = (_QWORD *)(v1 + *(int *)(type metadata accessor for NonNewsArticleViewResumeEvent.Model(0) + 24));
  v4 = v3[1];
  v5 = v3[2];
  v6 = v3[3];
  v7 = v3[4];
  v8 = v3[5];
  *a1 = *v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  a1[4] = v7;
  a1[5] = v8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t NonNewsArticleViewResumeEvent.Model.orientationData.getter@<X0>(_WORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for NonNewsArticleViewResumeEvent.Model(0);
  *a1 = *(_WORD *)(v1 + *(int *)(result + 28));
  return result;
}

__n128 NonNewsArticleViewResumeEvent.Model.init(eventData:viewData:nonNewsArticleData:orientationData:)@<Q0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, __int128 *a3@<X2>, __int16 *a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  __int16 v9;
  uint64_t v10;
  uint64_t v11;
  __int16 v12;
  uint64_t v13;
  int *v14;
  uint64_t v15;
  uint64_t v16;
  __n128 result;
  __n128 v18;
  __int128 v19;

  v7 = *a2;
  v8 = a2[1];
  v9 = *((_WORD *)a2 + 8);
  v18 = (__n128)a3[1];
  v19 = *a3;
  v10 = *((_QWORD *)a3 + 4);
  v11 = *((_QWORD *)a3 + 5);
  v12 = *a4;
  v13 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(a5, a1, v13);
  v14 = (int *)type metadata accessor for NonNewsArticleViewResumeEvent.Model(0);
  v15 = a5 + v14[5];
  *(_QWORD *)v15 = v7;
  *(_QWORD *)(v15 + 8) = v8;
  *(_WORD *)(v15 + 16) = v9;
  v16 = a5 + v14[6];
  result = v18;
  *(_OWORD *)v16 = v19;
  *(__n128 *)(v16 + 16) = v18;
  *(_QWORD *)(v16 + 32) = v10;
  *(_QWORD *)(v16 + 40) = v11;
  *(_WORD *)(a5 + v14[7]) = v12;
  return result;
}

uint64_t sub_1DC549724()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1DC549758 + 4 * byte_1DC637D40[*v0]))(0x746144746E657665, 0xE900000000000061);
}

uint64_t sub_1DC549758()
{
  return 0x6174614477656976;
}

unint64_t sub_1DC549770()
{
  return 0xD000000000000012;
}

uint64_t sub_1DC54978C()
{
  return 0x7461746E6569726FLL;
}

uint64_t sub_1DC5497B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1DC54B318(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DC5497D4()
{
  sub_1DC549A34();
  return sub_1DC62B604();
}

uint64_t sub_1DC5497FC()
{
  sub_1DC549A34();
  return sub_1DC62B610();
}

uint64_t NonNewsArticleViewResumeEvent.Model.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int *v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  __int128 *v14;
  __int128 v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  __int128 v21;
  __int128 v22;
  uint64_t v23;
  uint64_t v24;
  char v25;

  v3 = v1;
  sub_1DC549E14(0, &qword_1F036BFC0, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v20 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC549A34();
  sub_1DC62B5F8();
  LOBYTE(v21) = 0;
  sub_1DC62ABA8();
  sub_1DC4B6788(&qword_1EDB0E8A8, MEMORY[0x1E0CF8680]);
  sub_1DC62B4E4();
  if (!v2)
  {
    v10 = (int *)type metadata accessor for NonNewsArticleViewResumeEvent.Model(0);
    v11 = (uint64_t *)(v3 + v10[5]);
    v12 = *v11;
    v13 = v11[1];
    LOWORD(v11) = *((_WORD *)v11 + 8);
    *(_QWORD *)&v21 = v12;
    *((_QWORD *)&v21 + 1) = v13;
    LOWORD(v22) = (_WORD)v11;
    v25 = 1;
    sub_1DC4BEDF0();
    sub_1DC62B4E4();
    v14 = (__int128 *)(v3 + v10[6]);
    v15 = *v14;
    v16 = v14[1];
    v18 = *((_QWORD *)v14 + 4);
    v17 = *((_QWORD *)v14 + 5);
    v21 = v15;
    v22 = v16;
    v23 = v18;
    v24 = v17;
    v25 = 2;
    sub_1DC504038();
    sub_1DC62B4E4();
    LOWORD(v21) = *(_WORD *)(v3 + v10[7]);
    v25 = 3;
    sub_1DC4C0058();
    sub_1DC62B4E4();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1DC549A34()
{
  unint64_t result;

  result = qword_1F036BFC8;
  if (!qword_1F036BFC8)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC637F54, &type metadata for NonNewsArticleViewResumeEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036BFC8);
  }
  return result;
}

uint64_t NonNewsArticleViewResumeEvent.Model.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int16 v17;
  char *v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  _QWORD *v29;
  __int128 v30;
  __int128 v31;
  uint64_t v32;
  uint64_t v33;
  char v34;

  v24 = a2;
  v3 = sub_1DC62ABA8();
  v25 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v28 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC549E14(0, &qword_1F036BFD0, MEMORY[0x1E0DED048]);
  v26 = v5;
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v24 - v7;
  v9 = (int *)type metadata accessor for NonNewsArticleViewResumeEvent.Model(0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC549A34();
  v27 = v8;
  v12 = (uint64_t)v29;
  sub_1DC62B5E0();
  if (v12)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v29 = a1;
  v13 = v11;
  v14 = v25;
  LOBYTE(v30) = 0;
  sub_1DC4B6788(&qword_1EDB0E278, MEMORY[0x1E0CF8688]);
  v15 = v26;
  sub_1DC62B454();
  (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v13, v28, v3);
  v34 = 1;
  sub_1DC4BEDAC();
  sub_1DC62B454();
  v16 = *((_QWORD *)&v30 + 1);
  v17 = v31;
  v18 = &v13[v9[5]];
  *(_QWORD *)v18 = v30;
  *((_QWORD *)v18 + 1) = v16;
  *((_WORD *)v18 + 8) = v17;
  v34 = 2;
  sub_1DC503FF0();
  sub_1DC62B454();
  v19 = v31;
  v20 = v32;
  v21 = v33;
  v22 = &v13[v9[6]];
  *(_OWORD *)v22 = v30;
  *((_OWORD *)v22 + 1) = v19;
  *((_QWORD *)v22 + 4) = v20;
  *((_QWORD *)v22 + 5) = v21;
  v34 = 3;
  sub_1DC4C0014();
  sub_1DC62B454();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v27, v15);
  *(_WORD *)v9[7] = v30;
  sub_1DC549E70(0, v24);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v29);
  return sub_1DC549EB4(0);
}

void sub_1DC549E14(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1DC549A34();
    v7 = a3(a1, &type metadata for NonNewsArticleViewResumeEvent.Model.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1DC549E70(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for NonNewsArticleViewResumeEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DC549EB4(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for NonNewsArticleViewResumeEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1DC549EF0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return NonNewsArticleViewResumeEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_1DC549F04(_QWORD *a1)
{
  return NonNewsArticleViewResumeEvent.Model.encode(to:)(a1);
}

uint64_t sub_1DC549F18@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4B2C68(&qword_1F0369030, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1F036BF90, a1);
}

uint64_t sub_1DC549F3C@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4B2C68(&qword_1F0369038, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1F036BFA8, a1);
}

uint64_t sub_1DC549F60@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v4 = *MEMORY[0x1E0CF8128];
  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 104))(a2, v4, v5);
  v6 = a2 + a1[5];
  sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 104))(v6, v4, v7);
  v8 = a2 + a1[6];
  sub_1DC4B4B50(0, &qword_1F036AF00, (void (*)(void))sub_1DC503FF0, (void (*)(void))sub_1DC504038);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 104))(v8, v4, v9);
  v10 = a2 + a1[7];
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E7C0, (void (*)(void))sub_1DC4C0014, (void (*)(void))sub_1DC4C0058);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 104))(v10, v4, v11);
}

uint64_t *initializeBufferWithCopyOfBuffer for NonNewsArticleViewResumeEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v20 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v20 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_1DC4B6600();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = a3[6];
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    sub_1DC4B4B50(0, &qword_1F036AF00, (void (*)(void))sub_1DC503FF0, (void (*)(void))sub_1DC504038);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
    v16 = a3[7];
    v17 = (char *)a1 + v16;
    v18 = (char *)a2 + v16;
    sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E7C0, (void (*)(void))sub_1DC4C0014, (void (*)(void))sub_1DC4C0058);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
  }
  return a1;
}

uint64_t destroy for NonNewsArticleViewResumeEvent(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + a2[5];
  sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = a1 + a2[6];
  sub_1DC4B4B50(0, &qword_1F036AF00, (void (*)(void))sub_1DC503FF0, (void (*)(void))sub_1DC504038);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  v9 = a1 + a2[7];
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E7C0, (void (*)(void))sub_1DC4C0014, (void (*)(void))sub_1DC4C0058);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
}

uint64_t initializeWithCopy for NonNewsArticleViewResumeEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1DC4B4B50(0, &qword_1F036AF00, (void (*)(void))sub_1DC503FF0, (void (*)(void))sub_1DC504038);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E7C0, (void (*)(void))sub_1DC4C0014, (void (*)(void))sub_1DC4C0058);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
  return a1;
}

uint64_t assignWithCopy for NonNewsArticleViewResumeEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1DC4B4B50(0, &qword_1F036AF00, (void (*)(void))sub_1DC503FF0, (void (*)(void))sub_1DC504038);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 24))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E7C0, (void (*)(void))sub_1DC4C0014, (void (*)(void))sub_1DC4C0058);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 24))(v16, v17, v18);
  return a1;
}

uint64_t initializeWithTake for NonNewsArticleViewResumeEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1DC4B4B50(0, &qword_1F036AF00, (void (*)(void))sub_1DC503FF0, (void (*)(void))sub_1DC504038);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E7C0, (void (*)(void))sub_1DC4C0014, (void (*)(void))sub_1DC4C0058);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
  return a1;
}

uint64_t assignWithTake for NonNewsArticleViewResumeEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1DC4B4B50(0, &qword_1F036AF00, (void (*)(void))sub_1DC503FF0, (void (*)(void))sub_1DC504038);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 40))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E7C0, (void (*)(void))sub_1DC4C0014, (void (*)(void))sub_1DC4C0058);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 40))(v16, v17, v18);
  return a1;
}

uint64_t getEnumTagSinglePayload for NonNewsArticleViewResumeEvent()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC54A7F8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  sub_1DC4B6600();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
    v12 = *(_QWORD *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
    {
      v8 = v11;
      v13 = a3[5];
    }
    else
    {
      sub_1DC4B4B50(0, &qword_1F036AF00, (void (*)(void))sub_1DC503FF0, (void (*)(void))sub_1DC504038);
      v12 = *(_QWORD *)(v14 - 8);
      if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
      {
        v8 = v14;
        v13 = a3[6];
      }
      else
      {
        sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E7C0, (void (*)(void))sub_1DC4C0014, (void (*)(void))sub_1DC4C0058);
        v8 = v15;
        v12 = *(_QWORD *)(v15 - 8);
        v13 = a3[7];
      }
    }
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t storeEnumTagSinglePayload for NonNewsArticleViewResumeEvent()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC54A920(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  sub_1DC4B6600();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = a4[5];
    }
    else
    {
      sub_1DC4B4B50(0, &qword_1F036AF00, (void (*)(void))sub_1DC503FF0, (void (*)(void))sub_1DC504038);
      v14 = *(_QWORD *)(v16 - 8);
      if (*(_DWORD *)(v14 + 84) == a3)
      {
        v10 = v16;
        v15 = a4[6];
      }
      else
      {
        sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E7C0, (void (*)(void))sub_1DC4C0014, (void (*)(void))sub_1DC4C0058);
        v10 = v17;
        v14 = *(_QWORD *)(v17 - 8);
        v15 = a4[7];
      }
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_1DC54AA44()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  sub_1DC4B6600();
  if (v0 <= 0x3F)
  {
    sub_1DC4B4B50(319, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
    if (v1 <= 0x3F)
    {
      sub_1DC4B4B50(319, &qword_1F036AF00, (void (*)(void))sub_1DC503FF0, (void (*)(void))sub_1DC504038);
      if (v2 <= 0x3F)
      {
        sub_1DC4B4B50(319, (unint64_t *)&qword_1EDB0E7C0, (void (*)(void))sub_1DC4C0014, (void (*)(void))sub_1DC4C0058);
        if (v3 <= 0x3F)
          swift_initStructMetadata();
      }
    }
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for NonNewsArticleViewResumeEvent.Model(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v18 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1DC62ABA8();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = a3[6];
    v10 = (char *)a1 + v8;
    v11 = (char *)a2 + v8;
    v12 = *((_QWORD *)v11 + 1);
    *(_QWORD *)v10 = *(_QWORD *)v11;
    *((_QWORD *)v10 + 1) = v12;
    *((_WORD *)v10 + 8) = *((_WORD *)v11 + 8);
    v13 = (uint64_t *)((char *)a1 + v9);
    v14 = (uint64_t *)((char *)a2 + v9);
    v15 = v14[1];
    *v13 = *v14;
    v13[1] = v15;
    v16 = v14[3];
    v13[2] = v14[2];
    v13[3] = v16;
    v17 = v14[5];
    v13[4] = v14[4];
    v13[5] = v17;
    *(_WORD *)((char *)a1 + a3[7]) = *(_WORD *)((char *)a2 + a3[7]);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for NonNewsArticleViewResumeEvent.Model(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for NonNewsArticleViewResumeEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v6 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = a2 + v7;
  v11 = *(_QWORD *)(v10 + 8);
  *(_QWORD *)v9 = *(_QWORD *)v10;
  *(_QWORD *)(v9 + 8) = v11;
  *(_WORD *)(v9 + 16) = *(_WORD *)(v10 + 16);
  v12 = (_QWORD *)(a1 + v8);
  v13 = (_QWORD *)(a2 + v8);
  v14 = v13[1];
  *v12 = *v13;
  v12[1] = v14;
  v15 = v13[3];
  v12[2] = v13[2];
  v12[3] = v15;
  v16 = v13[5];
  v12[4] = v13[4];
  v12[5] = v16;
  *(_WORD *)(a1 + a3[7]) = *(_WORD *)(a2 + a3[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for NonNewsArticleViewResumeEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  _BYTE *v14;
  _BYTE *v15;

  v6 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_QWORD *)v8 = *(_QWORD *)(a2 + v7);
  *(_QWORD *)(v8 + 8) = *(_QWORD *)(a2 + v7 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v8 + 16) = *(_BYTE *)(v9 + 16);
  *(_BYTE *)(v8 + 17) = *(_BYTE *)(v9 + 17);
  v10 = a3[6];
  v11 = (_QWORD *)(a1 + v10);
  v12 = (_QWORD *)(a2 + v10);
  *v11 = *(_QWORD *)(a2 + v10);
  v11[1] = *(_QWORD *)(a2 + v10 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v11[2] = v12[2];
  v11[3] = v12[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v11[4] = v12[4];
  v11[5] = v12[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v13 = a3[7];
  v14 = (_BYTE *)(a1 + v13);
  v15 = (_BYTE *)(a2 + v13);
  *v14 = *v15;
  v14[1] = v15[1];
  return a1;
}

uint64_t initializeWithTake for NonNewsArticleViewResumeEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 *v10;
  __int128 v11;
  _OWORD *v12;
  _OWORD *v13;
  __int128 v14;

  v6 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = (__int128 *)(a2 + v7);
  v11 = *v10;
  *(_WORD *)(v9 + 16) = *((_WORD *)v10 + 8);
  *(_OWORD *)v9 = v11;
  v12 = (_OWORD *)(a1 + v8);
  v13 = (_OWORD *)(a2 + v8);
  v14 = v13[1];
  *v12 = *v13;
  v12[1] = v14;
  v12[2] = v13[2];
  *(_WORD *)(a1 + a3[7]) = *(_WORD *)(a2 + a3[7]);
  return a1;
}

uint64_t assignWithTake for NonNewsArticleViewResumeEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v6 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = *(_QWORD *)(a2 + v7 + 8);
  *(_QWORD *)v8 = *(_QWORD *)(a2 + v7);
  *(_QWORD *)(v8 + 8) = v10;
  swift_bridgeObjectRelease();
  *(_WORD *)(v8 + 16) = *(_WORD *)(v9 + 16);
  v11 = a3[6];
  v12 = (_QWORD *)(a1 + v11);
  v13 = (_QWORD *)(a2 + v11);
  v14 = *(_QWORD *)(a2 + v11 + 8);
  *v12 = *(_QWORD *)(a2 + v11);
  v12[1] = v14;
  swift_bridgeObjectRelease();
  v15 = v13[3];
  v12[2] = v13[2];
  v12[3] = v15;
  swift_bridgeObjectRelease();
  v16 = v13[5];
  v12[4] = v13[4];
  v12[5] = v16;
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + a3[7]) = *(_WORD *)(a2 + a3[7]);
  return a1;
}

uint64_t getEnumTagSinglePayload for NonNewsArticleViewResumeEvent.Model()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC54AFE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_1DC62ABA8();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for NonNewsArticleViewResumeEvent.Model()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC54B074(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_1DC62ABA8();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  return result;
}

uint64_t sub_1DC54B0F0()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1DC62ABA8();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for NonNewsArticleViewResumeEvent.Model.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1DC54B1C0 + 4 * byte_1DC637D49[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1DC54B1F4 + 4 * byte_1DC637D44[v4]))();
}

uint64_t sub_1DC54B1F4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC54B1FC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DC54B204);
  return result;
}

uint64_t sub_1DC54B210(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DC54B218);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1DC54B21C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC54B224(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for NonNewsArticleViewResumeEvent.Model.CodingKeys()
{
  return &type metadata for NonNewsArticleViewResumeEvent.Model.CodingKeys;
}

unint64_t sub_1DC54B244()
{
  unint64_t result;

  result = qword_1F036C108;
  if (!qword_1F036C108)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC637F2C, &type metadata for NonNewsArticleViewResumeEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036C108);
  }
  return result;
}

unint64_t sub_1DC54B28C()
{
  unint64_t result;

  result = qword_1F036C110;
  if (!qword_1F036C110)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC637E9C, &type metadata for NonNewsArticleViewResumeEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036C110);
  }
  return result;
}

unint64_t sub_1DC54B2D4()
{
  unint64_t result;

  result = qword_1F036C118;
  if (!qword_1F036C118)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC637EC4, &type metadata for NonNewsArticleViewResumeEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036C118);
  }
  return result;
}

uint64_t sub_1DC54B318(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x746144746E657665 && a2 == 0xE900000000000061;
  if (v2 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6174614477656976 && a2 == 0xE800000000000000 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000001DC64C660 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x7461746E6569726FLL && a2 == 0xEF617461446E6F69)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_1DC62B520();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_1DC54B4F8(uint64_t a1)
{
  return sub_1DC4BE784(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], qword_1F036C120, MEMORY[0x1E0CF8078]);
}

uint64_t static SearchEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C2FE8(&qword_1F0369040, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1F036C120, a1);
}

uint64_t sub_1DC54B538(uint64_t a1)
{
  return sub_1DC4BE784(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], qword_1F036C138, MEMORY[0x1E0CF8380]);
}

uint64_t static SearchEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C2FE8(&qword_1F0369048, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1F036C138, a1);
}

uint64_t SearchEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C37DC((uint64_t (*)(_QWORD))sub_1DC4B6600, a1);
}

uint64_t SearchEvent.eventData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  sub_1DC4B6600();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*SearchEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t SearchEvent.searchData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SearchEvent(0) + 20);
  sub_1DC54B628();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t type metadata accessor for SearchEvent(uint64_t a1)
{
  return sub_1DC4B385C(a1, qword_1F036C1C0);
}

void sub_1DC54B628()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1F0369E88)
  {
    sub_1DC4DCFA8();
    sub_1DC4DCFEC();
    v0 = sub_1DC62A80C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1F0369E88);
  }
}

uint64_t SearchEvent.searchData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SearchEvent(0) + 20);
  sub_1DC54B628();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*SearchEvent.searchData.modify())()
{
  type metadata accessor for SearchEvent(0);
  return nullsub_1;
}

uint64_t SearchEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *MEMORY[0x1E0CF8128];
  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
  v4 = a1 + *(int *)(type metadata accessor for SearchEvent(0) + 20);
  sub_1DC54B628();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 104))(v4, v2, v5);
}

uint64_t SearchEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C37DC((uint64_t (*)(_QWORD))MEMORY[0x1E0CF8670], a1);
}

uint64_t SearchEvent.Model.searchData.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = (_QWORD *)(v1 + *(int *)(type metadata accessor for SearchEvent.Model(0) + 20));
  v4 = v3[1];
  *a1 = *v3;
  a1[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t type metadata accessor for SearchEvent.Model(uint64_t a1)
{
  return sub_1DC4B385C(a1, qword_1F036C250);
}

uint64_t SearchEvent.Model.init(eventData:searchData:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  _QWORD *v9;

  v5 = *a2;
  v6 = a2[1];
  v7 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a3, a1, v7);
  result = type metadata accessor for SearchEvent.Model(0);
  v9 = (_QWORD *)(a3 + *(int *)(result + 20));
  *v9 = v5;
  v9[1] = v6;
  return result;
}

uint64_t sub_1DC54B824()
{
  _BYTE *v0;

  if (*v0)
    return 0x6144686372616573;
  else
    return 0x746144746E657665;
}

uint64_t sub_1DC54B868@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1DC54C90C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DC54B88C()
{
  sub_1DC54BA48();
  return sub_1DC62B604();
}

uint64_t sub_1DC54B8B4()
{
  sub_1DC54BA48();
  return sub_1DC62B610();
}

uint64_t SearchEvent.Model.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE v14[16];
  uint64_t v15;
  uint64_t v16;

  v3 = v1;
  sub_1DC54BD18(0, &qword_1F036C150, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = &v14[-v8];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC54BA48();
  sub_1DC62B5F8();
  LOBYTE(v15) = 0;
  sub_1DC62ABA8();
  sub_1DC4B6788(&qword_1EDB0E8A8, MEMORY[0x1E0CF8680]);
  sub_1DC62B4E4();
  if (!v2)
  {
    v10 = (uint64_t *)(v3 + *(int *)(type metadata accessor for SearchEvent.Model(0) + 20));
    v12 = *v10;
    v11 = v10[1];
    v15 = v12;
    v16 = v11;
    v14[15] = 1;
    sub_1DC4DCFEC();
    sub_1DC62B4E4();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1DC54BA48()
{
  unint64_t result;

  result = qword_1F036C158;
  if (!qword_1F036C158)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC63814C, &type metadata for SearchEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036C158);
  }
  return result;
}

uint64_t SearchEvent.Model.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;

  v23 = a2;
  v27 = sub_1DC62ABA8();
  v24 = *(_QWORD *)(v27 - 8);
  MEMORY[0x1E0C80A78](v27);
  v25 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC54BD18(0, &qword_1F036C160, MEMORY[0x1E0DED048]);
  v26 = v5;
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v20 - v7;
  v9 = type metadata accessor for SearchEvent.Model(0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC54BA48();
  sub_1DC62B5E0();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v21 = a1;
  v22 = v6;
  v12 = (uint64_t)v11;
  v13 = v24;
  LOBYTE(v28) = 0;
  sub_1DC4B6788(&qword_1EDB0E278, MEMORY[0x1E0CF8688]);
  v15 = v25;
  v14 = v26;
  v16 = v27;
  sub_1DC62B454();
  (*(void (**)(uint64_t, char *, uint64_t))(v13 + 32))(v12, v15, v16);
  v30 = 1;
  sub_1DC4DCFA8();
  sub_1DC62B454();
  (*(void (**)(char *, uint64_t))(v22 + 8))(v8, v14);
  v17 = v29;
  v18 = (_QWORD *)(v12 + *(int *)(v9 + 20));
  *v18 = v28;
  v18[1] = v17;
  sub_1DC54BD74(v12, v23);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
  return sub_1DC54BDB8(v12);
}

void sub_1DC54BD18(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1DC54BA48();
    v7 = a3(a1, &type metadata for SearchEvent.Model.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1DC54BD74(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SearchEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DC54BDB8(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for SearchEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1DC54BDF4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return SearchEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_1DC54BE08(_QWORD *a1)
{
  return SearchEvent.Model.encode(to:)(a1);
}

uint64_t sub_1DC54BE1C@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4B2C68(&qword_1F0369040, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1F036C120, a1);
}

uint64_t sub_1DC54BE40@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4B2C68(&qword_1F0369048, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1F036C138, a1);
}

uint64_t sub_1DC54BE64@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *MEMORY[0x1E0CF8128];
  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 104))(a2, v4, v5);
  v6 = a2 + *(int *)(a1 + 20);
  sub_1DC54B628();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 104))(v6, v4, v7);
}

uint64_t *initializeBufferWithCopyOfBuffer for SearchEvent(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_1DC4B6600();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    sub_1DC54B628();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
  }
  return a1;
}

uint64_t destroy for SearchEvent(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + *(int *)(a2 + 20);
  sub_1DC54B628();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
}

uint64_t initializeWithCopy for SearchEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1DC54B628();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  return a1;
}

uint64_t assignWithCopy for SearchEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1DC54B628();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  return a1;
}

uint64_t initializeWithTake for SearchEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1DC54B628();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  return a1;
}

uint64_t assignWithTake for SearchEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1DC54B628();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for SearchEvent()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC54C1DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  sub_1DC4B6600();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    sub_1DC54B628();
    v8 = v11;
    v12 = *(_QWORD *)(v11 - 8);
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t storeEnumTagSinglePayload for SearchEvent()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC54C25C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  sub_1DC4B6600();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    sub_1DC54B628();
    v10 = v13;
    v14 = *(_QWORD *)(v13 - 8);
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_1DC54C2D8()
{
  unint64_t v0;
  unint64_t v1;

  sub_1DC4B6600();
  if (v0 <= 0x3F)
  {
    sub_1DC54B628();
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for SearchEvent.Model(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1DC62ABA8();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = (uint64_t *)((char *)a1 + v8);
    v10 = (uint64_t *)((char *)a2 + v8);
    v11 = v10[1];
    *v9 = *v10;
    v9[1] = v11;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for SearchEvent.Model(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for SearchEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;

  v6 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  v10 = v9[1];
  *v8 = *v9;
  v8[1] = v10;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for SearchEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;

  v6 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for SearchEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t assignWithTake for SearchEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;

  v6 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (uint64_t *)(a2 + v7);
  v11 = *v9;
  v10 = v9[1];
  *v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for SearchEvent.Model()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC54C5F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_1DC62ABA8();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for SearchEvent.Model()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC54C67C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_1DC62ABA8();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  return result;
}

uint64_t sub_1DC54C6F8()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1DC62ABA8();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for SearchEvent.Model.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1DC54C7B4 + 4 * byte_1DC637FAD[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1DC54C7E8 + 4 * byte_1DC637FA8[v4]))();
}

uint64_t sub_1DC54C7E8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC54C7F0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DC54C7F8);
  return result;
}

uint64_t sub_1DC54C804(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DC54C80CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1DC54C810(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC54C818(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SearchEvent.Model.CodingKeys()
{
  return &type metadata for SearchEvent.Model.CodingKeys;
}

unint64_t sub_1DC54C838()
{
  unint64_t result;

  result = qword_1F036C288;
  if (!qword_1F036C288)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC638124, &type metadata for SearchEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036C288);
  }
  return result;
}

unint64_t sub_1DC54C880()
{
  unint64_t result;

  result = qword_1F036C290;
  if (!qword_1F036C290)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC638094, &type metadata for SearchEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036C290);
  }
  return result;
}

unint64_t sub_1DC54C8C8()
{
  unint64_t result;

  result = qword_1F036C298;
  if (!qword_1F036C298)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC6380BC, &type metadata for SearchEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036C298);
  }
  return result;
}

uint64_t sub_1DC54C90C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x746144746E657665 && a2 == 0xE900000000000061;
  if (v2 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6144686372616573 && a2 == 0xEA00000000006174)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1DC62B520();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t WatchlistSummaryData.watchlistSummary.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t WatchlistSummaryData.watchlistSummary.setter(uint64_t a1)
{
  _QWORD *v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v1 = a1;
  return result;
}

uint64_t (*WatchlistSummaryData.watchlistSummary.modify())()
{
  return nullsub_1;
}

StocksAnalytics::WatchlistSummaryData __swiftcall WatchlistSummaryData.init(watchlistSummary:)(StocksAnalytics::WatchlistSummaryData watchlistSummary)
{
  StocksAnalytics::WatchlistSummaryData *v1;

  v1->watchlistSummary._rawValue = watchlistSummary.watchlistSummary._rawValue;
  return watchlistSummary;
}

uint64_t sub_1DC54CA5C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1DC54CC98(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1DC54CA84()
{
  sub_1DC4B4E0C();
  return sub_1DC62B604();
}

uint64_t sub_1DC54CAAC()
{
  sub_1DC4B4E0C();
  return sub_1DC62B610();
}

uint64_t WatchlistSummaryData.init(from:)@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  _QWORD v11[2];

  sub_1DC4B4CF8(0, &qword_1EDB11958, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)v11 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC4B4E0C();
  sub_1DC62B5E0();
  if (!v2)
  {
    sub_1DC4B4DB8();
    sub_1DC4B4D54(&qword_1EDB11868, (uint64_t (*)(void))sub_1DC501B7C, MEMORY[0x1E0DEAF40]);
    sub_1DC62B454();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *a2 = v11[1];
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1DC54CC2C@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return WatchlistSummaryData.init(from:)(a1, a2);
}

ValueMetadata *type metadata accessor for WatchlistSummaryData.CodingKeys()
{
  return &type metadata for WatchlistSummaryData.CodingKeys;
}

unint64_t sub_1DC54CC54()
{
  unint64_t result;

  result = qword_1F036C2A0;
  if (!qword_1F036C2A0)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC6382F0, &type metadata for WatchlistSummaryData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036C2A0);
  }
  return result;
}

uint64_t sub_1DC54CC98(uint64_t a1, uint64_t a2)
{
  char v2;
  char v3;

  if (a1 == 0xD000000000000010 && a2 == 0x80000001DC64CC80)
  {
    swift_bridgeObjectRelease();
    v2 = 0;
  }
  else
  {
    v3 = sub_1DC62B520();
    swift_bridgeObjectRelease();
    v2 = v3 ^ 1;
  }
  return v2 & 1;
}

StocksAnalytics::PaidSubscriberToSourceChannelType_optional __swiftcall PaidSubscriberToSourceChannelType.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  StocksAnalytics::PaidSubscriberToSourceChannelType_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1DC62B3DC();
  result.value = swift_bridgeObjectRelease();
  v5 = 4;
  if (v3 < 4)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t PaidSubscriberToSourceChannelType.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1DC54CDA4 + 4 * byte_1DC638370[*v0]))(0x6E776F6E6B6E75, 0xE700000000000000);
}

uint64_t sub_1DC54CDA4()
{
  return 1701147238;
}

uint64_t sub_1DC54CDB4()
{
  return 0x6C61697274;
}

uint64_t sub_1DC54CDC8()
{
  return 1684627824;
}

void sub_1DC54CDD8(char *a1)
{
  sub_1DC5423E0(*a1);
}

unint64_t sub_1DC54CDE8()
{
  unint64_t result;

  result = qword_1F036C2A8;
  if (!qword_1F036C2A8)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for PaidSubscriberToSourceChannelType, &type metadata for PaidSubscriberToSourceChannelType);
    atomic_store(result, (unint64_t *)&qword_1F036C2A8);
  }
  return result;
}

void sub_1DC54CE2C()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1DC62B5B0();
  __asm { BR              X9 }
}

uint64_t sub_1DC54CE78()
{
  sub_1DC62B10C();
  swift_bridgeObjectRelease();
  return sub_1DC62B5C8();
}

void sub_1DC54CED4()
{
  __asm { BR              X10 }
}

uint64_t sub_1DC54CF10()
{
  sub_1DC62B10C();
  return swift_bridgeObjectRelease();
}

void sub_1DC54CF58()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1DC62B5B0();
  __asm { BR              X9 }
}

uint64_t sub_1DC54CFA0()
{
  sub_1DC62B10C();
  swift_bridgeObjectRelease();
  return sub_1DC62B5C8();
}

StocksAnalytics::PaidSubscriberToSourceChannelType_optional sub_1DC54CFFC(Swift::String *a1)
{
  return PaidSubscriberToSourceChannelType.init(rawValue:)(*a1);
}

uint64_t sub_1DC54D008()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_1DC54D038 + 4 * byte_1DC638380[*v0]))();
}

void sub_1DC54D038(_QWORD *a1@<X8>)
{
  *a1 = 1701147238;
  a1[1] = 0xE400000000000000;
}

void sub_1DC54D04C(_QWORD *a1@<X8>)
{
  *a1 = 0x6C61697274;
  a1[1] = 0xE500000000000000;
}

void sub_1DC54D064(_QWORD *a1@<X8>)
{
  *a1 = 1684627824;
  a1[1] = 0xE400000000000000;
}

uint64_t sub_1DC54D078()
{
  sub_1DC54D1EC();
  return sub_1DC62B13C();
}

uint64_t sub_1DC54D0D4()
{
  sub_1DC54D1EC();
  return sub_1DC62B130();
}

uint64_t storeEnumTagSinglePayload for PaidSubscriberToSourceChannelType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1DC54D16C + 4 * byte_1DC638389[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1DC54D1A0 + 4 * byte_1DC638384[v4]))();
}

uint64_t sub_1DC54D1A0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC54D1A8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DC54D1B0);
  return result;
}

uint64_t sub_1DC54D1BC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DC54D1C4);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1DC54D1C8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC54D1D0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PaidSubscriberToSourceChannelType()
{
  return &type metadata for PaidSubscriberToSourceChannelType;
}

unint64_t sub_1DC54D1EC()
{
  unint64_t result;

  result = qword_1EDB11190;
  if (!qword_1EDB11190)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for PaidSubscriberToSourceChannelType, &type metadata for PaidSubscriberToSourceChannelType);
    atomic_store(result, (unint64_t *)&qword_1EDB11190);
  }
  return result;
}

void sub_1DC54D230(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  int v26;
  void (*v27)(char *, uint64_t, uint64_t, uint64_t);
  void *v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  unint64_t v32;
  int *v33;
  uint64_t v34;
  uint64_t v35;
  __int128 v36;
  __int128 v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  int v41;
  _OWORD *v42;
  _QWORD v43[19];
  int v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  int v66;

  v49 = a5;
  v48 = a4;
  v54 = a3;
  v53 = a2;
  v59 = a6;
  v52 = sub_1DC62A1C4();
  v51 = *(_QWORD *)(v52 - 8);
  MEMORY[0x1E0C80A78](v52);
  v50 = (char *)v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1DC62A0C8();
  v57 = *(_QWORD *)(v9 - 8);
  v58 = v9;
  v10 = MEMORY[0x1E0C80A78](v9);
  v55 = (char *)v43 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v56 = (char *)v43 - v12;
  v61 = type metadata accessor for MediaEngageEvent.Model(0);
  MEMORY[0x1E0C80A78](v61);
  v60 = (char *)v43 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC54DBD8();
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)v43 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_1DC62A77C();
  v18 = *(_QWORD *)(v17 - 8);
  MEMORY[0x1E0C80A78](v17);
  v20 = (char *)v43 - v19;
  sub_1DC54DC2C();
  v22 = v21;
  v23 = *(_QWORD *)(v21 - 8);
  MEMORY[0x1E0C80A78](v21);
  v25 = (char *)v43 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v18 + 16))(v20, a1, v17);
  v26 = swift_dynamicCast();
  v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v23 + 56);
  if (v26)
  {
    v27(v16, 0, 1, v22);
    (*(void (**)(char *, char *, uint64_t))(v23 + 32))(v25, v16, v22);
    v28 = (void *)sub_1DC62A758();
    v29 = sub_1DC62AA7C();
    if (v6)
    {
      (*(void (**)(char *, uint64_t))(v23 + 8))(v25, v22);

    }
    else
    {
      v31 = v29;
      v32 = v30;

      sub_1DC62A050();
      swift_allocObject();
      sub_1DC62A044();
      sub_1DC4B6748(&qword_1F036C2B8, type metadata accessor for MediaEngageEvent.Model, (uint64_t)&protocol conformance descriptor for MediaEngageEvent.Model);
      v34 = (uint64_t)v60;
      v33 = (int *)v61;
      sub_1DC62A038();
      v47 = v31;
      swift_release();
      v35 = v34 + v33[6];
      v66 = *(_DWORD *)(v35 + 64);
      v36 = *(_OWORD *)(v35 + 48);
      v64 = *(_OWORD *)(v35 + 32);
      v65 = v36;
      v37 = *(_OWORD *)(v35 + 16);
      v62 = *(_OWORD *)v35;
      v63 = v37;
      v38 = v33[10];
      v39 = *(unsigned __int8 *)(v34 + v38 + 8);
      v40 = *(unsigned int *)(v34 + v38 + 12);
      v41 = *(unsigned __int8 *)(v34 + v38 + 16);
      if (((1 << *(_BYTE *)(v34 + v33[9])) & 0x2D) == 0)
      {
        v45 = *(_QWORD *)v35;
        v43[18] = v40;
        v46 = v39;
        v44 = v41;
        __asm { BR              X9 }
      }
      sub_1DC547A3C(v47, v32);
      sub_1DC547A80(v34, type metadata accessor for MediaEngageEvent.Model);
      (*(void (**)(char *, uint64_t))(v23 + 8))(v25, v22);
      v42 = (_OWORD *)v59;
      *(_QWORD *)(v59 + 112) = 0;
      v42[5] = 0u;
      v42[6] = 0u;
      v42[3] = 0u;
      v42[4] = 0u;
      v42[1] = 0u;
      v42[2] = 0u;
      *v42 = 0u;
    }
  }
  else
  {
    v27(v16, 1, 1, v22);
    sub_1DC547A80((uint64_t)v16, (uint64_t (*)(_QWORD))sub_1DC54DBD8);
    sub_1DC525A4C();
    swift_allocError();
    swift_willThrow();
  }
}

uint64_t type metadata accessor for MediaEngageEventQueryItemsGenerator()
{
  return objc_opt_self();
}

void sub_1DC54DBC4(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  sub_1DC54D230(a1, a2, a3, a4, a5, a6);
}

void sub_1DC54DBD8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1F036C2B0)
  {
    sub_1DC54DC2C();
    v0 = sub_1DC62B25C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1F036C2B0);
  }
}

void sub_1DC54DC2C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EDB0E708)
  {
    type metadata accessor for MediaEngageEvent(255);
    sub_1DC4B6748(&qword_1EDB0F570, type metadata accessor for MediaEngageEvent, (uint64_t)&protocol conformance descriptor for MediaEngageEvent);
    v0 = sub_1DC62A77C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EDB0E708);
  }
}

void sub_1DC54DCA4(uint64_t a1, char a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v3 = sub_1DC62A0C8();
  v4 = MEMORY[0x1E0C80A78](v3);
  v5 = MEMORY[0x1E0C80A78](v4);
  v6 = MEMORY[0x1E0C80A78](v5);
  v7 = MEMORY[0x1E0C80A78](v6);
  v8 = MEMORY[0x1E0C80A78](v7);
  v9 = MEMORY[0x1E0C80A78](v8);
  v10 = MEMORY[0x1E0C80A78](v9);
  MEMORY[0x1E0C80A78](v10);
  __asm { BR              X10 }
}

unint64_t sub_1DC54DDE8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;

  sub_1DC62A0BC();
  v4 = *(_QWORD *)(v2 - 96);
  v3 = *(_QWORD *)(v2 - 88);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v0, v1, v3);
  v5 = sub_1DC525BA8(0, 1, 1, MEMORY[0x1E0DEE9D8]);
  v7 = *(_QWORD *)(v5 + 16);
  v6 = *(_QWORD *)(v5 + 24);
  v8 = v7 + 1;
  if (v7 >= v6 >> 1)
  {
    v9 = sub_1DC525BA8(v6 > 1, v7 + 1, 1, v5);
    v8 = v7 + 1;
    v5 = v9;
  }
  *(_QWORD *)(v5 + 16) = v8;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v4 + 32))(v5+ ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))+ *(_QWORD *)(v4 + 72) * v7, v0, v3);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v1, v3);
  return v5;
}

void __swiftcall ExternalAnalyticsData.init(externalAnalyticsEventType:externalAnalyticsID:externalAnalyticsEventUUID:)(StocksAnalytics::ExternalAnalyticsData *__return_ptr retstr, StocksAnalytics::ExternalAnalyticsEventType externalAnalyticsEventType, Swift::String externalAnalyticsID, Swift::String externalAnalyticsEventUUID)
{
  retstr->externalAnalyticsEventType = *(_BYTE *)externalAnalyticsEventType;
  retstr->externalAnalyticsID = externalAnalyticsID;
  retstr->externalAnalyticsEventUUID = externalAnalyticsEventUUID;
}

void ExternalAnalyticsData.externalAnalyticsEventType.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

_BYTE *ExternalAnalyticsData.externalAnalyticsEventType.setter(_BYTE *result)
{
  _BYTE *v1;

  *v1 = *result;
  return result;
}

uint64_t (*ExternalAnalyticsData.externalAnalyticsEventType.modify())()
{
  return nullsub_1;
}

uint64_t ExternalAnalyticsData.externalAnalyticsID.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ExternalAnalyticsData.externalAnalyticsID.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 8) = a1;
  *(_QWORD *)(v2 + 16) = a2;
  return result;
}

uint64_t (*ExternalAnalyticsData.externalAnalyticsID.modify())()
{
  return nullsub_1;
}

uint64_t ExternalAnalyticsData.externalAnalyticsEventUUID.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ExternalAnalyticsData.externalAnalyticsEventUUID.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 24) = a1;
  *(_QWORD *)(v2 + 32) = a2;
  return result;
}

uint64_t (*ExternalAnalyticsData.externalAnalyticsEventUUID.modify())()
{
  return nullsub_1;
}

unint64_t sub_1DC54E1F8(char a1)
{
  unint64_t result;

  result = 0xD00000000000001ALL;
  if (a1 == 1)
    return 0xD000000000000013;
  return result;
}

unint64_t sub_1DC54E254()
{
  char *v0;

  return sub_1DC54E1F8(*v0);
}

uint64_t sub_1DC54E25C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1DC54EB74(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DC54E280()
{
  sub_1DC54E450();
  return sub_1DC62B604();
}

uint64_t sub_1DC54E2A8()
{
  sub_1DC54E450();
  return sub_1DC62B610();
}

uint64_t ExternalAnalyticsData.encode(to:)(_QWORD *a1)
{
  char *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD v13[4];
  char v14;
  char v15;
  char v16;
  char v17;

  sub_1DC54E6D4(0, &qword_1F036C2C0, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)v13 - v7;
  v9 = *v1;
  v10 = *((_QWORD *)v1 + 1);
  v13[2] = *((_QWORD *)v1 + 2);
  v13[3] = v10;
  v11 = *((_QWORD *)v1 + 3);
  v13[0] = *((_QWORD *)v1 + 4);
  v13[1] = v11;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC54E450();
  sub_1DC62B5F8();
  v17 = v9;
  v16 = 0;
  sub_1DC54E494();
  sub_1DC62B4E4();
  if (!v2)
  {
    v15 = 1;
    sub_1DC62B4B4();
    v14 = 2;
    sub_1DC62B4B4();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_1DC54E450()
{
  unint64_t result;

  result = qword_1F036C2C8;
  if (!qword_1F036C2C8)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC6386BC, &type metadata for ExternalAnalyticsData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036C2C8);
  }
  return result;
}

unint64_t sub_1DC54E494()
{
  unint64_t result;

  result = qword_1F036C2D0;
  if (!qword_1F036C2D0)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for ExternalAnalyticsEventType, &type metadata for ExternalAnalyticsEventType);
    atomic_store(result, (unint64_t *)&qword_1F036C2D0);
  }
  return result;
}

uint64_t ExternalAnalyticsData.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  int v20;
  char v21;
  char v22;
  char v23;
  unsigned __int8 v24;

  sub_1DC54E6D4(0, &qword_1F036C2D8, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v18 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC54E450();
  sub_1DC62B5E0();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v23 = 0;
  sub_1DC54E730();
  sub_1DC62B454();
  v10 = v24;
  v22 = 1;
  v11 = sub_1DC62B424();
  v13 = v12;
  v19 = v11;
  v20 = v10;
  v21 = 2;
  swift_bridgeObjectRetain();
  v14 = sub_1DC62B424();
  v16 = v15;
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  *(_BYTE *)a2 = v20;
  *(_QWORD *)(a2 + 8) = v19;
  *(_QWORD *)(a2 + 16) = v13;
  *(_QWORD *)(a2 + 24) = v14;
  *(_QWORD *)(a2 + 32) = v16;
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void sub_1DC54E6D4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1DC54E450();
    v7 = a3(a1, &type metadata for ExternalAnalyticsData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1DC54E730()
{
  unint64_t result;

  result = qword_1F036C2E0;
  if (!qword_1F036C2E0)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for ExternalAnalyticsEventType, &type metadata for ExternalAnalyticsEventType);
    atomic_store(result, (unint64_t *)&qword_1F036C2E0);
  }
  return result;
}

unint64_t sub_1DC54E778()
{
  unint64_t result;

  result = qword_1F036C2E8;
  if (!qword_1F036C2E8)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for ExternalAnalyticsData, &type metadata for ExternalAnalyticsData);
    atomic_store(result, (unint64_t *)&qword_1F036C2E8);
  }
  return result;
}

unint64_t sub_1DC54E7C0()
{
  unint64_t result;

  result = qword_1F036C2F0;
  if (!qword_1F036C2F0)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for ExternalAnalyticsData, &type metadata for ExternalAnalyticsData);
    atomic_store(result, (unint64_t *)&qword_1F036C2F0);
  }
  return result;
}

uint64_t sub_1DC54E804@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return ExternalAnalyticsData.init(from:)(a1, a2);
}

uint64_t sub_1DC54E818(_QWORD *a1)
{
  return ExternalAnalyticsData.encode(to:)(a1);
}

uint64_t initializeWithCopy for ExternalAnalyticsData(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v3;
  v4 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ExternalAnalyticsData(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for ExternalAnalyticsData(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v4 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ExternalAnalyticsData(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 40))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ExternalAnalyticsData(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 16) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 40) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ExternalAnalyticsData()
{
  return &type metadata for ExternalAnalyticsData;
}

uint64_t storeEnumTagSinglePayload for ExternalAnalyticsData.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1DC54EA1C + 4 * byte_1DC638535[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1DC54EA50 + 4 * byte_1DC638530[v4]))();
}

uint64_t sub_1DC54EA50(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC54EA58(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DC54EA60);
  return result;
}

uint64_t sub_1DC54EA6C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DC54EA74);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1DC54EA78(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC54EA80(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ExternalAnalyticsData.CodingKeys()
{
  return &type metadata for ExternalAnalyticsData.CodingKeys;
}

unint64_t sub_1DC54EAA0()
{
  unint64_t result;

  result = qword_1F036C2F8;
  if (!qword_1F036C2F8)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC638694, &type metadata for ExternalAnalyticsData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036C2F8);
  }
  return result;
}

unint64_t sub_1DC54EAE8()
{
  unint64_t result;

  result = qword_1F036C300;
  if (!qword_1F036C300)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC638604, &type metadata for ExternalAnalyticsData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036C300);
  }
  return result;
}

unint64_t sub_1DC54EB30()
{
  unint64_t result;

  result = qword_1F036C308;
  if (!qword_1F036C308)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC63862C, &type metadata for ExternalAnalyticsData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036C308);
  }
  return result;
}

uint64_t sub_1DC54EB74(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD00000000000001ALL && a2 == 0x80000001DC64CCE0 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001DC64CD00 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x80000001DC64CD20)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v5 = sub_1DC62B520();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

StocksAnalytics::MediaPlayMethod_optional __swiftcall MediaPlayMethod.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  StocksAnalytics::MediaPlayMethod_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1DC62B3DC();
  result.value = swift_bridgeObjectRelease();
  v5 = 3;
  if (v3 < 3)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t MediaPlayMethod.rawValue.getter()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x79616C706F747561;
  if (*v0 != 1)
    v1 = 0x7474754279616C70;
  if (*v0)
    return v1;
  else
    return 0x6E776F6E6B6E75;
}

uint64_t sub_1DC54ED74(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1DC545298(*a1, *a2);
}

unint64_t sub_1DC54ED84()
{
  unint64_t result;

  result = qword_1F036C310;
  if (!qword_1F036C310)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for MediaPlayMethod, &type metadata for MediaPlayMethod);
    atomic_store(result, (unint64_t *)&qword_1F036C310);
  }
  return result;
}

uint64_t sub_1DC54EDC8()
{
  sub_1DC62B5B0();
  sub_1DC62B10C();
  swift_bridgeObjectRelease();
  return sub_1DC62B5C8();
}

uint64_t sub_1DC54EE74()
{
  sub_1DC62B10C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DC54EEFC()
{
  sub_1DC62B5B0();
  sub_1DC62B10C();
  swift_bridgeObjectRelease();
  return sub_1DC62B5C8();
}

StocksAnalytics::MediaPlayMethod_optional sub_1DC54EFA4(Swift::String *a1)
{
  return MediaPlayMethod.init(rawValue:)(*a1);
}

void sub_1DC54EFB0(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;

  v2 = *v1;
  v3 = 0xE700000000000000;
  v4 = 0xE800000000000000;
  v5 = 0x79616C706F747561;
  if (v2 != 1)
  {
    v5 = 0x7474754279616C70;
    v4 = 0xEF73736572506E6FLL;
  }
  v6 = v2 == 0;
  if (*v1)
    v7 = v5;
  else
    v7 = 0x6E776F6E6B6E75;
  if (!v6)
    v3 = v4;
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_1DC54F01C()
{
  sub_1DC54F190();
  return sub_1DC62B13C();
}

uint64_t sub_1DC54F078()
{
  sub_1DC54F190();
  return sub_1DC62B130();
}

uint64_t storeEnumTagSinglePayload for MediaPlayMethod(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1DC54F110 + 4 * byte_1DC638711[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1DC54F144 + 4 * byte_1DC63870C[v4]))();
}

uint64_t sub_1DC54F144(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC54F14C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DC54F154);
  return result;
}

uint64_t sub_1DC54F160(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DC54F168);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1DC54F16C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC54F174(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MediaPlayMethod()
{
  return &type metadata for MediaPlayMethod;
}

unint64_t sub_1DC54F190()
{
  unint64_t result;

  result = qword_1F036C318;
  if (!qword_1F036C318)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for MediaPlayMethod, &type metadata for MediaPlayMethod);
    atomic_store(result, (unint64_t *)&qword_1F036C318);
  }
  return result;
}

StocksAnalytics::GroupType_optional __swiftcall GroupType.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  StocksAnalytics::GroupType_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1DC62B3DC();
  result.value = swift_bridgeObjectRelease();
  v5 = 7;
  if (v3 < 7)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t GroupType.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1DC54F25C + 4 * byte_1DC638828[*v0]))(0x6E776F6E6B6E75, 0xE700000000000000);
}

uint64_t sub_1DC54F25C()
{
  return 0x64657461727563;
}

uint64_t sub_1DC54F2C4()
{
  return 25697;
}

void sub_1DC54F2D0(char *a1)
{
  sub_1DC541510(*a1);
}

unint64_t sub_1DC54F2E0()
{
  unint64_t result;

  result = qword_1F036C320;
  if (!qword_1F036C320)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for GroupType, &type metadata for GroupType);
    atomic_store(result, (unint64_t *)&qword_1F036C320);
  }
  return result;
}

void sub_1DC54F324()
{
  char *v0;

  sub_1DC603C94(0, *v0);
}

void sub_1DC54F330()
{
  __asm { BR              X10 }
}

uint64_t sub_1DC54F36C()
{
  sub_1DC62B10C();
  return swift_bridgeObjectRelease();
}

void sub_1DC54F3F4(uint64_t a1)
{
  char *v1;

  sub_1DC603C94(a1, *v1);
}

StocksAnalytics::GroupType_optional sub_1DC54F3FC(Swift::String *a1)
{
  return GroupType.init(rawValue:)(*a1);
}

uint64_t sub_1DC54F408()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_1DC54F438 + 4 * byte_1DC638836[*v0]))();
}

void sub_1DC54F438(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = 0x64657461727563;
  a1[1] = v1;
}

void sub_1DC54F450(_QWORD *a1@<X8>)
{
  *a1 = 0x69726F7453706F74;
  a1[1] = 0xEA00000000007365;
}

void sub_1DC54F470(_QWORD *a1@<X8>)
{
  *a1 = 0x6C6F626D7973;
  a1[1] = 0xE600000000000000;
}

void sub_1DC54F488(_QWORD *a1@<X8>)
{
  *a1 = 0x6D6F724665726F6DLL;
  a1[1] = 0xE800000000000000;
}

void sub_1DC54F4A4(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = 0x646574616C6572;
  a1[1] = v1;
}

void sub_1DC54F4BC(_QWORD *a1@<X8>)
{
  *a1 = 25697;
  a1[1] = 0xE200000000000000;
}

uint64_t sub_1DC54F4CC()
{
  sub_1DC54F640();
  return sub_1DC62B13C();
}

uint64_t sub_1DC54F528()
{
  sub_1DC54F640();
  return sub_1DC62B130();
}

uint64_t storeEnumTagSinglePayload for GroupType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 6 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 6) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_1DC54F5C0 + 4 * byte_1DC638842[v4]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_1DC54F5F4 + 4 * byte_1DC63883D[v4]))();
}

uint64_t sub_1DC54F5F4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC54F5FC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DC54F604);
  return result;
}

uint64_t sub_1DC54F610(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DC54F618);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_1DC54F61C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC54F624(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for GroupType()
{
  return &type metadata for GroupType;
}

unint64_t sub_1DC54F640()
{
  unint64_t result;

  result = qword_1EDB117B8;
  if (!qword_1EDB117B8)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for GroupType, &type metadata for GroupType);
    atomic_store(result, (unint64_t *)&qword_1EDB117B8);
  }
  return result;
}

uint64_t sub_1DC54F684(uint64_t a1)
{
  return sub_1DC4BE784(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], qword_1EDB0F760, MEMORY[0x1E0CF8078]);
}

uint64_t static TipExposureEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C2FE8(&qword_1EDB0F778, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1EDB0F760, a1);
}

uint64_t sub_1DC54F6C4(uint64_t a1)
{
  return sub_1DC4BE784(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], qword_1EDB0F780, MEMORY[0x1E0CF8380]);
}

uint64_t static TipExposureEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C2FE8(&qword_1EDB0F798, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1EDB0F780, a1);
}

uint64_t TipExposureEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C37DC((uint64_t (*)(_QWORD))sub_1DC4B6600, a1);
}

uint64_t TipExposureEvent.eventData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  sub_1DC4B6600();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*TipExposureEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t TipExposureEvent.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C382C(type metadata accessor for TipExposureEvent, (uint64_t (*)(_QWORD))sub_1DC4B66A4, a1);
}

uint64_t type metadata accessor for TipExposureEvent(uint64_t a1)
{
  return sub_1DC4B385C(a1, qword_1EDB0F7A0);
}

uint64_t TipExposureEvent.timedData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for TipExposureEvent(0) + 20);
  sub_1DC4B66A4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*TipExposureEvent.timedData.modify())()
{
  type metadata accessor for TipExposureEvent(0);
  return nullsub_1;
}

uint64_t TipExposureEvent.feedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for TipExposureEvent(0) + 24);
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t TipExposureEvent.feedData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for TipExposureEvent(0) + 24);
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*TipExposureEvent.feedData.modify())()
{
  type metadata accessor for TipExposureEvent(0);
  return nullsub_1;
}

uint64_t TipExposureEvent.viewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for TipExposureEvent(0) + 28);
  sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t TipExposureEvent.viewData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for TipExposureEvent(0) + 28);
  sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*TipExposureEvent.viewData.modify())()
{
  type metadata accessor for TipExposureEvent(0);
  return nullsub_1;
}

uint64_t TipExposureEvent.symbolData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for TipExposureEvent(0) + 32);
  sub_1DC4B4B50(0, &qword_1EDB0E750, (void (*)(void))sub_1DC4C3328, (void (*)(void))sub_1DC4C336C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t TipExposureEvent.symbolData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for TipExposureEvent(0) + 32);
  sub_1DC4B4B50(0, &qword_1EDB0E750, (void (*)(void))sub_1DC4C3328, (void (*)(void))sub_1DC4C336C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*TipExposureEvent.symbolData.modify())()
{
  type metadata accessor for TipExposureEvent(0);
  return nullsub_1;
}

uint64_t TipExposureEvent.tipData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for TipExposureEvent(0) + 36);
  sub_1DC4B4B50(0, &qword_1EDB0E840, (void (*)(void))sub_1DC54FB40, (void (*)(void))sub_1DC54FB84);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

unint64_t sub_1DC54FB40()
{
  unint64_t result;

  result = qword_1EDB11650;
  if (!qword_1EDB11650)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for TipData, &type metadata for TipData);
    atomic_store(result, (unint64_t *)&qword_1EDB11650);
  }
  return result;
}

unint64_t sub_1DC54FB84()
{
  unint64_t result;

  result = qword_1EDB11648;
  if (!qword_1EDB11648)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for TipData, &type metadata for TipData);
    atomic_store(result, (unint64_t *)&qword_1EDB11648);
  }
  return result;
}

uint64_t TipExposureEvent.tipData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for TipExposureEvent(0) + 36);
  sub_1DC4B4B50(0, &qword_1EDB0E840, (void (*)(void))sub_1DC54FB40, (void (*)(void))sub_1DC54FB84);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*TipExposureEvent.tipData.modify())()
{
  type metadata accessor for TipExposureEvent(0);
  return nullsub_1;
}

uint64_t TipExposureEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v2 = *MEMORY[0x1E0CF8128];
  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
  v4 = (int *)type metadata accessor for TipExposureEvent(0);
  v5 = a1 + v4[5];
  sub_1DC4B66A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 104))(v5, v2, v6);
  v7 = a1 + v4[6];
  v8 = *MEMORY[0x1E0CF8120];
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 104))(v7, v8, v9);
  v10 = a1 + v4[7];
  sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 104))(v10, v2, v11);
  v12 = a1 + v4[8];
  sub_1DC4B4B50(0, &qword_1EDB0E750, (void (*)(void))sub_1DC4C3328, (void (*)(void))sub_1DC4C336C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 104))(v12, v8, v13);
  v14 = a1 + v4[9];
  sub_1DC4B4B50(0, &qword_1EDB0E840, (void (*)(void))sub_1DC54FB40, (void (*)(void))sub_1DC54FB84);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 104))(v14, v2, v15);
}

uint64_t TipExposureEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C37DC((uint64_t (*)(_QWORD))MEMORY[0x1E0CF8670], a1);
}

uint64_t TipExposureEvent.Model.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C382C(type metadata accessor for TipExposureEvent.Model, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF86C0], a1);
}

uint64_t type metadata accessor for TipExposureEvent.Model(uint64_t a1)
{
  return sub_1DC4B385C(a1, qword_1F036C398);
}

uint64_t TipExposureEvent.Model.feedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for TipExposureEvent.Model(0) + 24);
  v4 = *(_QWORD *)(v3 + 16);
  *(_OWORD *)a1 = *(_OWORD *)v3;
  *(_QWORD *)(a1 + 16) = v4;
  return swift_bridgeObjectRetain();
}

uint64_t TipExposureEvent.Model.viewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for TipExposureEvent.Model(0) + 28));
  v5 = *v3;
  v4 = v3[1];
  LOWORD(v3) = *((_WORD *)v3 + 8);
  *(_QWORD *)a1 = v5;
  *(_QWORD *)(a1 + 8) = v4;
  *(_WORD *)(a1 + 16) = (_WORD)v3;
  return swift_bridgeObjectRetain();
}

uint64_t TipExposureEvent.Model.symbolData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for TipExposureEvent.Model(0) + 32));
  v4 = *v3;
  v5 = v3[1];
  v6 = v3[2];
  v7 = v3[3];
  v8 = v3[4];
  *a1 = *v3;
  a1[1] = v5;
  a1[2] = v6;
  a1[3] = v7;
  a1[4] = v8;
  return sub_1DC54FEFC(v4, v5);
}

uint64_t sub_1DC54FEFC(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t TipExposureEvent.Model.tipData.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for TipExposureEvent.Model(0);
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 36));
  return result;
}

__n128 TipExposureEvent.Model.init(eventData:timedData:feedData:viewData:symbolData:tipData:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, __int128 *a3@<X2>, uint64_t *a4@<X3>, __int128 *a5@<X4>, char *a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int16 v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  int *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __n128 result;
  __int128 v24;
  __n128 v25;
  __int128 v26;

  v10 = *((_QWORD *)a3 + 2);
  v11 = *a4;
  v12 = a4[1];
  v13 = *((_WORD *)a4 + 8);
  v26 = *a5;
  v24 = *a3;
  v25 = (__n128)a5[1];
  v14 = *((_QWORD *)a5 + 4);
  v15 = *a6;
  v16 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(a7, a1, v16);
  v17 = (int *)type metadata accessor for TipExposureEvent.Model(0);
  v18 = a7 + v17[5];
  v19 = sub_1DC62ABC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v18, a2, v19);
  v20 = a7 + v17[6];
  *(_OWORD *)v20 = v24;
  *(_QWORD *)(v20 + 16) = v10;
  v21 = a7 + v17[7];
  *(_QWORD *)v21 = v11;
  *(_QWORD *)(v21 + 8) = v12;
  *(_WORD *)(v21 + 16) = v13;
  v22 = a7 + v17[8];
  result = v25;
  *(_OWORD *)v22 = v26;
  *(__n128 *)(v22 + 16) = v25;
  *(_QWORD *)(v22 + 32) = v14;
  *(_BYTE *)(a7 + v17[9]) = v15;
  return result;
}

uint64_t sub_1DC550068()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1DC55009C + 4 * byte_1DC638970[*v0]))(0x746144746E657665, 0xE900000000000061);
}

uint64_t sub_1DC55009C()
{
  return 0x74614464656D6974;
}

uint64_t sub_1DC5500B0()
{
  return 0x6174614464656566;
}

uint64_t sub_1DC5500D8()
{
  return 0x61446C6F626D7973;
}

uint64_t sub_1DC5500F4()
{
  return 0x61746144706974;
}

uint64_t sub_1DC55010C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1DC552690(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DC550130()
{
  sub_1DC550444();
  return sub_1DC62B604();
}

uint64_t sub_1DC550158()
{
  sub_1DC550444();
  return sub_1DC62B610();
}

uint64_t TipExposureEvent.Model.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int *v10;
  __int128 *v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  __int128 *v16;
  uint64_t v17;
  __int128 v18;
  __int128 v20;
  __int128 v21;
  uint64_t v22;
  char v23;

  v3 = v1;
  sub_1DC5509B0(0, &qword_1F036C328, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v20 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC550444();
  sub_1DC62B5F8();
  LOBYTE(v20) = 0;
  sub_1DC62ABA8();
  sub_1DC4B6748(&qword_1EDB0E8A8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF8670], MEMORY[0x1E0CF8680]);
  sub_1DC62B4E4();
  if (!v2)
  {
    v10 = (int *)type metadata accessor for TipExposureEvent.Model(0);
    LOBYTE(v20) = 1;
    sub_1DC62ABC0();
    sub_1DC4B6748(&qword_1EDB0E8B8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF86C0], MEMORY[0x1E0CF86D0]);
    sub_1DC62B4E4();
    v11 = (__int128 *)(v3 + v10[6]);
    v12 = *((_QWORD *)v11 + 2);
    v20 = *v11;
    *(_QWORD *)&v21 = v12;
    v23 = 2;
    sub_1DC4BEFD8();
    sub_1DC62B490();
    v13 = (uint64_t *)(v3 + v10[7]);
    v14 = *v13;
    v15 = v13[1];
    LOWORD(v13) = *((_WORD *)v13 + 8);
    *(_QWORD *)&v20 = v14;
    *((_QWORD *)&v20 + 1) = v15;
    LOWORD(v21) = (_WORD)v13;
    v23 = 3;
    sub_1DC4BEDF0();
    sub_1DC62B4E4();
    v16 = (__int128 *)(v3 + v10[8]);
    v17 = *((_QWORD *)v16 + 4);
    v18 = v16[1];
    v20 = *v16;
    v21 = v18;
    v22 = v17;
    v23 = 4;
    sub_1DC4C336C();
    sub_1DC62B490();
    LOBYTE(v20) = *(_BYTE *)(v3 + v10[9]);
    v23 = 5;
    sub_1DC54FB84();
    sub_1DC62B4E4();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1DC550444()
{
  unint64_t result;

  result = qword_1F036C330;
  if (!qword_1F036C330)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC638BAC, &type metadata for TipExposureEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036C330);
  }
  return result;
}

uint64_t TipExposureEvent.Model.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  void (*v18)(char *, char *, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __int16 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  char *v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  __int128 v41;
  __int128 v42;
  uint64_t v43;
  char v44;

  v32 = a2;
  v34 = sub_1DC62ABC0();
  v36 = *(_QWORD *)(v34 - 8);
  MEMORY[0x1E0C80A78](v34);
  v33 = (char *)&v29 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = sub_1DC62ABA8();
  v4 = *(_QWORD *)(v35 - 8);
  MEMORY[0x1E0C80A78](v35);
  v37 = (char *)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC5509B0(0, &qword_1F036C338, MEMORY[0x1E0DED048]);
  v39 = v6;
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v29 - v8;
  v10 = (int *)type metadata accessor for TipExposureEvent.Model(0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC550444();
  v38 = v9;
  v13 = v40;
  sub_1DC62B5E0();
  if (v13)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v40 = v7;
  v30 = v4;
  v31 = a1;
  v14 = v36;
  v16 = v33;
  v15 = v34;
  LOBYTE(v41) = 0;
  sub_1DC4B6748(&qword_1EDB0E278, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF8670], MEMORY[0x1E0CF8688]);
  v17 = v35;
  sub_1DC62B454();
  v18 = *(void (**)(char *, char *, uint64_t))(v30 + 32);
  v29 = v12;
  v18(v12, v37, v17);
  LOBYTE(v41) = 1;
  sub_1DC4B6748(&qword_1EDB0E8C0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF86C0], MEMORY[0x1E0CF86D8]);
  sub_1DC62B454();
  v19 = (uint64_t)v29;
  (*(void (**)(char *, char *, uint64_t))(v14 + 32))(&v29[v10[5]], v16, v15);
  v44 = 2;
  sub_1DC4BEF94();
  sub_1DC62B400();
  v20 = v42;
  v21 = v19 + v10[6];
  *(_OWORD *)v21 = v41;
  *(_QWORD *)(v21 + 16) = v20;
  v44 = 3;
  sub_1DC4BEDAC();
  sub_1DC62B454();
  v22 = *((_QWORD *)&v41 + 1);
  v23 = v42;
  v24 = v19 + v10[7];
  *(_QWORD *)v24 = v41;
  *(_QWORD *)(v24 + 8) = v22;
  *(_WORD *)(v24 + 16) = v23;
  v44 = 4;
  sub_1DC4C3328();
  sub_1DC62B400();
  v25 = v43;
  v26 = v19 + v10[8];
  v27 = v42;
  *(_OWORD *)v26 = v41;
  *(_OWORD *)(v26 + 16) = v27;
  *(_QWORD *)(v26 + 32) = v25;
  v44 = 5;
  sub_1DC54FB40();
  sub_1DC62B454();
  (*(void (**)(char *, uint64_t))(v40 + 8))(v38, v39);
  *(_BYTE *)(v19 + v10[9]) = v41;
  sub_1DC550A3C(v19, v32);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v31);
  return sub_1DC550A80(v19);
}

void sub_1DC5509B0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1DC550444();
    v7 = a3(a1, &type metadata for TipExposureEvent.Model.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1DC550A0C(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1DC550A3C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for TipExposureEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DC550A80(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for TipExposureEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1DC550ABC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return TipExposureEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_1DC550AD0(_QWORD *a1)
{
  return TipExposureEvent.Model.encode(to:)(a1);
}

uint64_t sub_1DC550AE4@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4B2C68(&qword_1EDB0F778, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1EDB0F760, a1);
}

uint64_t sub_1DC550B08@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4B2C68(&qword_1EDB0F798, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1EDB0F780, a1);
}

uint64_t sub_1DC550B2C@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v4 = *MEMORY[0x1E0CF8128];
  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 104))(a2, v4, v5);
  v6 = a2 + a1[5];
  sub_1DC4B66A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 104))(v6, v4, v7);
  v8 = a2 + a1[6];
  v9 = *MEMORY[0x1E0CF8120];
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 104))(v8, v9, v10);
  v11 = a2 + a1[7];
  sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 104))(v11, v4, v12);
  v13 = a2 + a1[8];
  sub_1DC4B4B50(0, &qword_1EDB0E750, (void (*)(void))sub_1DC4C3328, (void (*)(void))sub_1DC4C336C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 104))(v13, v9, v14);
  v15 = a2 + a1[9];
  sub_1DC4B4B50(0, &qword_1EDB0E840, (void (*)(void))sub_1DC54FB40, (void (*)(void))sub_1DC54FB84);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 104))(v15, v4, v16);
}

uint64_t *initializeBufferWithCopyOfBuffer for TipExposureEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v28 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v28 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_1DC4B6600();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    sub_1DC4B66A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = a3[6];
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
    v16 = a3[7];
    v17 = (char *)a1 + v16;
    v18 = (char *)a2 + v16;
    sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
    v20 = a3[8];
    v21 = (char *)a1 + v20;
    v22 = (char *)a2 + v20;
    sub_1DC4B4B50(0, &qword_1EDB0E750, (void (*)(void))sub_1DC4C3328, (void (*)(void))sub_1DC4C336C);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v21, v22, v23);
    v24 = a3[9];
    v25 = (char *)a1 + v24;
    v26 = (char *)a2 + v24;
    sub_1DC4B4B50(0, &qword_1EDB0E840, (void (*)(void))sub_1DC54FB40, (void (*)(void))sub_1DC54FB84);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v25, v26, v27);
  }
  return a1;
}

uint64_t destroy for TipExposureEvent(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + a2[5];
  sub_1DC4B66A4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = a1 + a2[6];
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  v9 = a1 + a2[7];
  sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  v11 = a1 + a2[8];
  sub_1DC4B4B50(0, &qword_1EDB0E750, (void (*)(void))sub_1DC4C3328, (void (*)(void))sub_1DC4C336C);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
  v13 = a1 + a2[9];
  sub_1DC4B4B50(0, &qword_1EDB0E840, (void (*)(void))sub_1DC54FB40, (void (*)(void))sub_1DC54FB84);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v13, v14);
}

uint64_t initializeWithCopy for TipExposureEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1DC4B66A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1DC4B4B50(0, &qword_1EDB0E750, (void (*)(void))sub_1DC4C3328, (void (*)(void))sub_1DC4C336C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1DC4B4B50(0, &qword_1EDB0E840, (void (*)(void))sub_1DC54FB40, (void (*)(void))sub_1DC54FB84);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v24, v25, v26);
  return a1;
}

uint64_t assignWithCopy for TipExposureEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1DC4B66A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 24))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 24))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1DC4B4B50(0, &qword_1EDB0E750, (void (*)(void))sub_1DC4C3328, (void (*)(void))sub_1DC4C336C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 24))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1DC4B4B50(0, &qword_1EDB0E840, (void (*)(void))sub_1DC54FB40, (void (*)(void))sub_1DC54FB84);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 24))(v24, v25, v26);
  return a1;
}

uint64_t initializeWithTake for TipExposureEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1DC4B66A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1DC4B4B50(0, &qword_1EDB0E750, (void (*)(void))sub_1DC4C3328, (void (*)(void))sub_1DC4C336C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1DC4B4B50(0, &qword_1EDB0E840, (void (*)(void))sub_1DC54FB40, (void (*)(void))sub_1DC54FB84);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(v24, v25, v26);
  return a1;
}

uint64_t assignWithTake for TipExposureEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1DC4B66A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 40))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 40))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1DC4B4B50(0, &qword_1EDB0E750, (void (*)(void))sub_1DC4C3328, (void (*)(void))sub_1DC4C336C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 40))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1DC4B4B50(0, &qword_1EDB0E840, (void (*)(void))sub_1DC54FB40, (void (*)(void))sub_1DC54FB84);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 40))(v24, v25, v26);
  return a1;
}

uint64_t getEnumTagSinglePayload for TipExposureEvent()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC551708(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  sub_1DC4B6600();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    sub_1DC4B66A4();
    v12 = *(_QWORD *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
    {
      v8 = v11;
      v13 = a3[5];
    }
    else
    {
      sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
      v12 = *(_QWORD *)(v14 - 8);
      if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
      {
        v8 = v14;
        v13 = a3[6];
      }
      else
      {
        sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
        v12 = *(_QWORD *)(v15 - 8);
        if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
        {
          v8 = v15;
          v13 = a3[7];
        }
        else
        {
          sub_1DC4B4B50(0, &qword_1EDB0E750, (void (*)(void))sub_1DC4C3328, (void (*)(void))sub_1DC4C336C);
          v12 = *(_QWORD *)(v16 - 8);
          if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
          {
            v8 = v16;
            v13 = a3[8];
          }
          else
          {
            sub_1DC4B4B50(0, &qword_1EDB0E840, (void (*)(void))sub_1DC54FB40, (void (*)(void))sub_1DC54FB84);
            v8 = v17;
            v12 = *(_QWORD *)(v17 - 8);
            v13 = a3[9];
          }
        }
      }
    }
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t storeEnumTagSinglePayload for TipExposureEvent()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC551898(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  sub_1DC4B6600();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    sub_1DC4B66A4();
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = a4[5];
    }
    else
    {
      sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
      v14 = *(_QWORD *)(v16 - 8);
      if (*(_DWORD *)(v14 + 84) == a3)
      {
        v10 = v16;
        v15 = a4[6];
      }
      else
      {
        sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
        v14 = *(_QWORD *)(v17 - 8);
        if (*(_DWORD *)(v14 + 84) == a3)
        {
          v10 = v17;
          v15 = a4[7];
        }
        else
        {
          sub_1DC4B4B50(0, &qword_1EDB0E750, (void (*)(void))sub_1DC4C3328, (void (*)(void))sub_1DC4C336C);
          v14 = *(_QWORD *)(v18 - 8);
          if (*(_DWORD *)(v14 + 84) == a3)
          {
            v10 = v18;
            v15 = a4[8];
          }
          else
          {
            sub_1DC4B4B50(0, &qword_1EDB0E840, (void (*)(void))sub_1DC54FB40, (void (*)(void))sub_1DC54FB84);
            v10 = v19;
            v14 = *(_QWORD *)(v19 - 8);
            v15 = a4[9];
          }
        }
      }
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_1DC551A24()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;

  sub_1DC4B6600();
  if (v0 <= 0x3F)
  {
    sub_1DC4B66A4();
    if (v1 <= 0x3F)
    {
      sub_1DC4B4B50(319, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
      if (v2 <= 0x3F)
      {
        sub_1DC4B4B50(319, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
        if (v3 <= 0x3F)
        {
          sub_1DC4B4B50(319, &qword_1EDB0E750, (void (*)(void))sub_1DC4C3328, (void (*)(void))sub_1DC4C336C);
          if (v4 <= 0x3F)
          {
            sub_1DC4B4B50(319, &qword_1EDB0E840, (void (*)(void))sub_1DC54FB40, (void (*)(void))sub_1DC54FB84);
            if (v5 <= 0x3F)
              swift_initStructMetadata();
          }
        }
      }
    }
  }
}

_QWORD *initializeBufferWithCopyOfBuffer for TipExposureEvent.Model(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v26;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v25 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v25 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1DC62ABA8();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_1DC62ABC0();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = a3[6];
    v13 = a3[7];
    v14 = (char *)a1 + v12;
    v15 = (char *)a2 + v12;
    *v14 = *v15;
    v16 = *((_QWORD *)v15 + 2);
    *((_QWORD *)v14 + 1) = *((_QWORD *)v15 + 1);
    *((_QWORD *)v14 + 2) = v16;
    v17 = (char *)a1 + v13;
    v18 = (char *)a2 + v13;
    v19 = *((_QWORD *)v18 + 1);
    *(_QWORD *)v17 = *(_QWORD *)v18;
    *((_QWORD *)v17 + 1) = v19;
    *((_WORD *)v17 + 8) = *((_WORD *)v18 + 8);
    v20 = a3[8];
    v21 = (char *)a1 + v20;
    v22 = (char *)a2 + v20;
    v23 = *(_QWORD *)((char *)a2 + v20 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v23)
    {
      *(_QWORD *)v21 = *(_QWORD *)v22;
      *((_QWORD *)v21 + 1) = v23;
      v21[16] = v22[16];
      v24 = *((_QWORD *)v22 + 4);
      *((_QWORD *)v21 + 3) = *((_QWORD *)v22 + 3);
      *((_QWORD *)v21 + 4) = v24;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v26 = *((_OWORD *)v22 + 1);
      *(_OWORD *)v21 = *(_OWORD *)v22;
      *((_OWORD *)v21 + 1) = v26;
      *((_QWORD *)v21 + 4) = *((_QWORD *)v22 + 4);
    }
    *((_BYTE *)a1 + a3[9]) = *((_BYTE *)a2 + a3[9]);
  }
  return a1;
}

uint64_t destroy for TipExposureEvent.Model(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  v4 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + *(int *)(a2 + 20);
  v6 = sub_1DC62ABC0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  result = *(_QWORD *)(a1 + *(int *)(a2 + 32) + 8);
  if (result)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for TipExposureEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;

  v6 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1DC62ABC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = a3[6];
  v12 = a3[7];
  v13 = a1 + v11;
  v14 = a2 + v11;
  *(_BYTE *)v13 = *(_BYTE *)v14;
  v15 = *(_QWORD *)(v14 + 16);
  *(_QWORD *)(v13 + 8) = *(_QWORD *)(v14 + 8);
  *(_QWORD *)(v13 + 16) = v15;
  v16 = a1 + v12;
  v17 = a2 + v12;
  v18 = *(_QWORD *)(v17 + 8);
  *(_QWORD *)v16 = *(_QWORD *)v17;
  *(_QWORD *)(v16 + 8) = v18;
  *(_WORD *)(v16 + 16) = *(_WORD *)(v17 + 16);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  v22 = *(_QWORD *)(a2 + v19 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v22)
  {
    *(_QWORD *)v20 = *(_QWORD *)v21;
    *(_QWORD *)(v20 + 8) = v22;
    *(_BYTE *)(v20 + 16) = *(_BYTE *)(v21 + 16);
    v23 = *(_QWORD *)(v21 + 32);
    *(_QWORD *)(v20 + 24) = *(_QWORD *)(v21 + 24);
    *(_QWORD *)(v20 + 32) = v23;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v24 = *(_OWORD *)(v21 + 16);
    *(_OWORD *)v20 = *(_OWORD *)v21;
    *(_OWORD *)(v20 + 16) = v24;
    *(_QWORD *)(v20 + 32) = *(_QWORD *)(v21 + 32);
  }
  *(_BYTE *)(a1 + a3[9]) = *(_BYTE *)(a2 + a3[9]);
  return a1;
}

uint64_t assignWithCopy for TipExposureEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;

  v6 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1DC62ABC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  *(_BYTE *)v12 = *(_BYTE *)v13;
  *(_QWORD *)(v12 + 8) = *(_QWORD *)(v13 + 8);
  *(_QWORD *)(v12 + 16) = *(_QWORD *)(v13 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v14 = a3[7];
  v15 = a1 + v14;
  v16 = a2 + v14;
  *(_QWORD *)v15 = *(_QWORD *)(a2 + v14);
  *(_QWORD *)(v15 + 8) = *(_QWORD *)(a2 + v14 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v15 + 16) = *(_BYTE *)(v16 + 16);
  *(_BYTE *)(v15 + 17) = *(_BYTE *)(v16 + 17);
  v17 = a3[8];
  v18 = a1 + v17;
  v19 = (__int128 *)(a2 + v17);
  v20 = *(_QWORD *)(a1 + v17 + 8);
  v21 = *(_QWORD *)(a2 + v17 + 8);
  if (v20)
  {
    if (v21)
    {
      *(_QWORD *)v18 = *(_QWORD *)v19;
      *(_QWORD *)(v18 + 8) = *((_QWORD *)v19 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_BYTE *)(v18 + 16) = *((_BYTE *)v19 + 16);
      *(_QWORD *)(v18 + 24) = *((_QWORD *)v19 + 3);
      *(_QWORD *)(v18 + 32) = *((_QWORD *)v19 + 4);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1DC552090(v18);
      v22 = *((_QWORD *)v19 + 4);
      v23 = v19[1];
      *(_OWORD *)v18 = *v19;
      *(_OWORD *)(v18 + 16) = v23;
      *(_QWORD *)(v18 + 32) = v22;
    }
  }
  else if (v21)
  {
    *(_QWORD *)v18 = *(_QWORD *)v19;
    *(_QWORD *)(v18 + 8) = *((_QWORD *)v19 + 1);
    *(_BYTE *)(v18 + 16) = *((_BYTE *)v19 + 16);
    *(_QWORD *)(v18 + 24) = *((_QWORD *)v19 + 3);
    *(_QWORD *)(v18 + 32) = *((_QWORD *)v19 + 4);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v24 = *v19;
    v25 = v19[1];
    *(_QWORD *)(v18 + 32) = *((_QWORD *)v19 + 4);
    *(_OWORD *)v18 = v24;
    *(_OWORD *)(v18 + 16) = v25;
  }
  *(_BYTE *)(a1 + a3[9]) = *(_BYTE *)(a2 + a3[9]);
  return a1;
}

uint64_t sub_1DC552090(uint64_t a1)
{
  destroy for SymbolData();
  return a1;
}

uint64_t initializeWithTake for TipExposureEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int128 *v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;

  v6 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1DC62ABC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[6];
  v12 = a3[7];
  v13 = a1 + v11;
  v14 = (__int128 *)(a2 + v11);
  v15 = *v14;
  *(_QWORD *)(v13 + 16) = *((_QWORD *)v14 + 2);
  *(_OWORD *)v13 = v15;
  v16 = a1 + v12;
  v17 = a2 + v12;
  *(_OWORD *)v16 = *(_OWORD *)v17;
  *(_WORD *)(v16 + 16) = *(_WORD *)(v17 + 16);
  v18 = a3[8];
  v19 = a3[9];
  v20 = a1 + v18;
  v21 = a2 + v18;
  v22 = *(_OWORD *)(v21 + 16);
  *(_OWORD *)v20 = *(_OWORD *)v21;
  *(_OWORD *)(v20 + 16) = v22;
  *(_QWORD *)(v20 + 32) = *(_QWORD *)(v21 + 32);
  *(_BYTE *)(a1 + v19) = *(_BYTE *)(a2 + v19);
  return a1;
}

uint64_t assignWithTake for TipExposureEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v25;

  v6 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1DC62ABC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  *(_BYTE *)v12 = *(_BYTE *)v13;
  v15 = *(_QWORD *)(v13 + 8);
  v14 = *(_QWORD *)(v13 + 16);
  *(_QWORD *)(v12 + 8) = v15;
  *(_QWORD *)(v12 + 16) = v14;
  swift_bridgeObjectRelease();
  v16 = a3[7];
  v17 = a1 + v16;
  v18 = a2 + v16;
  v19 = *(_QWORD *)(a2 + v16 + 8);
  *(_QWORD *)v17 = *(_QWORD *)(a2 + v16);
  *(_QWORD *)(v17 + 8) = v19;
  swift_bridgeObjectRelease();
  *(_WORD *)(v17 + 16) = *(_WORD *)(v18 + 16);
  v20 = a3[8];
  v21 = a1 + v20;
  v22 = a2 + v20;
  if (!*(_QWORD *)(a1 + v20 + 8))
    goto LABEL_5;
  v23 = *(_QWORD *)(v22 + 8);
  if (!v23)
  {
    sub_1DC552090(v21);
LABEL_5:
    v25 = *(_OWORD *)(v22 + 16);
    *(_OWORD *)v21 = *(_OWORD *)v22;
    *(_OWORD *)(v21 + 16) = v25;
    *(_QWORD *)(v21 + 32) = *(_QWORD *)(v22 + 32);
    goto LABEL_6;
  }
  *(_QWORD *)v21 = *(_QWORD *)v22;
  *(_QWORD *)(v21 + 8) = v23;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v21 + 16) = *(_BYTE *)(v22 + 16);
  v24 = *(_QWORD *)(v22 + 32);
  *(_QWORD *)(v21 + 24) = *(_QWORD *)(v22 + 24);
  *(_QWORD *)(v21 + 32) = v24;
  swift_bridgeObjectRelease();
LABEL_6:
  *(_BYTE *)(a1 + a3[9]) = *(_BYTE *)(a2 + a3[9]);
  return a1;
}

uint64_t getEnumTagSinglePayload for TipExposureEvent.Model()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC5522E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v14;

  v6 = sub_1DC62ABA8();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  v11 = sub_1DC62ABC0();
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  v14 = *(_QWORD *)(a1 + *(int *)(a3 + 28) + 8);
  if (v14 >= 0xFFFFFFFF)
    LODWORD(v14) = -1;
  return (v14 + 1);
}

uint64_t storeEnumTagSinglePayload for TipExposureEvent.Model()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC552398(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t result;
  uint64_t v14;

  v8 = sub_1DC62ABA8();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
    return v11(v12, a2, a2, v10);
  }
  result = sub_1DC62ABC0();
  v14 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = result;
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    return v11(v12, a2, a2, v10);
  }
  *(_QWORD *)(a1 + *(int *)(a4 + 28) + 8) = (a2 - 1);
  return result;
}

uint64_t sub_1DC552440()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_1DC62ABA8();
  if (v1 <= 0x3F)
  {
    result = sub_1DC62ABC0();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for TipExposureEvent.Model.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_1DC552538 + 4 * byte_1DC63897B[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_1DC55256C + 4 * byte_1DC638976[v4]))();
}

uint64_t sub_1DC55256C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC552574(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DC55257CLL);
  return result;
}

uint64_t sub_1DC552588(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DC552590);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_1DC552594(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC55259C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for TipExposureEvent.Model.CodingKeys()
{
  return &type metadata for TipExposureEvent.Model.CodingKeys;
}

unint64_t sub_1DC5525BC()
{
  unint64_t result;

  result = qword_1F036C3E0;
  if (!qword_1F036C3E0)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC638B84, &type metadata for TipExposureEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036C3E0);
  }
  return result;
}

unint64_t sub_1DC552604()
{
  unint64_t result;

  result = qword_1F036C3E8;
  if (!qword_1F036C3E8)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC638AF4, &type metadata for TipExposureEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036C3E8);
  }
  return result;
}

unint64_t sub_1DC55264C()
{
  unint64_t result;

  result = qword_1F036C3F0;
  if (!qword_1F036C3F0)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC638B1C, &type metadata for TipExposureEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036C3F0);
  }
  return result;
}

uint64_t sub_1DC552690(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x746144746E657665 && a2 == 0xE900000000000061;
  if (v2 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x74614464656D6974 && a2 == 0xE900000000000061 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6174614464656566 && a2 == 0xE800000000000000 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6174614477656976 && a2 == 0xE800000000000000 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x61446C6F626D7973 && a2 == 0xEA00000000006174 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x61746144706974 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    v6 = sub_1DC62B520();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 5;
    else
      return 6;
  }
}

uint64_t sub_1DC552934(uint64_t a1)
{
  return sub_1DC4BE784(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], qword_1F036C3F8, MEMORY[0x1E0CF8078]);
}

uint64_t static NonNewsArticleExternalViewEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C2FE8(&qword_1F0369050, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1F036C3F8, a1);
}

uint64_t sub_1DC552974(uint64_t a1)
{
  return sub_1DC4BE784(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], qword_1F036C410, MEMORY[0x1E0CF8380]);
}

uint64_t static NonNewsArticleExternalViewEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C2FE8(&qword_1F0369058, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1F036C410, a1);
}

uint64_t NonNewsArticleExternalViewEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C37DC((uint64_t (*)(_QWORD))sub_1DC4B6600, a1);
}

uint64_t NonNewsArticleExternalViewEvent.eventData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  sub_1DC4B6600();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*NonNewsArticleExternalViewEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t NonNewsArticleExternalViewEvent.nonNewsArticleData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for NonNewsArticleExternalViewEvent(0) + 20);
  sub_1DC4B4B50(0, &qword_1F036AF00, (void (*)(void))sub_1DC503FF0, (void (*)(void))sub_1DC504038);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t type metadata accessor for NonNewsArticleExternalViewEvent(uint64_t a1)
{
  return sub_1DC4B385C(a1, qword_1F036C498);
}

uint64_t NonNewsArticleExternalViewEvent.nonNewsArticleData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for NonNewsArticleExternalViewEvent(0) + 20);
  sub_1DC4B4B50(0, &qword_1F036AF00, (void (*)(void))sub_1DC503FF0, (void (*)(void))sub_1DC504038);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*NonNewsArticleExternalViewEvent.nonNewsArticleData.modify())()
{
  type metadata accessor for NonNewsArticleExternalViewEvent(0);
  return nullsub_1;
}

uint64_t NonNewsArticleExternalViewEvent.feedPositionData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for NonNewsArticleExternalViewEvent(0) + 24);
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E7D0, (void (*)(void))sub_1DC510CA0, (void (*)(void))sub_1DC510CE4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t NonNewsArticleExternalViewEvent.feedPositionData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for NonNewsArticleExternalViewEvent(0) + 24);
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E7D0, (void (*)(void))sub_1DC510CA0, (void (*)(void))sub_1DC510CE4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*NonNewsArticleExternalViewEvent.feedPositionData.modify())()
{
  type metadata accessor for NonNewsArticleExternalViewEvent(0);
  return nullsub_1;
}

uint64_t NonNewsArticleExternalViewEvent.inGroupPositionData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for NonNewsArticleExternalViewEvent(0) + 28);
  sub_1DC4B4B50(0, &qword_1EDB0E7E8, (void (*)(void))sub_1DC510E20, (void (*)(void))sub_1DC510E64);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t NonNewsArticleExternalViewEvent.inGroupPositionData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for NonNewsArticleExternalViewEvent(0) + 28);
  sub_1DC4B4B50(0, &qword_1EDB0E7E8, (void (*)(void))sub_1DC510E20, (void (*)(void))sub_1DC510E64);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*NonNewsArticleExternalViewEvent.inGroupPositionData.modify())()
{
  type metadata accessor for NonNewsArticleExternalViewEvent(0);
  return nullsub_1;
}

uint64_t NonNewsArticleExternalViewEvent.feedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for NonNewsArticleExternalViewEvent(0) + 32);
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t NonNewsArticleExternalViewEvent.feedData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for NonNewsArticleExternalViewEvent(0) + 32);
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*NonNewsArticleExternalViewEvent.feedData.modify())()
{
  type metadata accessor for NonNewsArticleExternalViewEvent(0);
  return nullsub_1;
}

uint64_t NonNewsArticleExternalViewEvent.groupData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for NonNewsArticleExternalViewEvent(0) + 36);
  sub_1DC4B4B50(0, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t NonNewsArticleExternalViewEvent.groupData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for NonNewsArticleExternalViewEvent(0) + 36);
  sub_1DC4B4B50(0, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*NonNewsArticleExternalViewEvent.groupData.modify())()
{
  type metadata accessor for NonNewsArticleExternalViewEvent(0);
  return nullsub_1;
}

uint64_t NonNewsArticleExternalViewEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v2 = *MEMORY[0x1E0CF8128];
  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
  v4 = (int *)type metadata accessor for NonNewsArticleExternalViewEvent(0);
  v5 = a1 + v4[5];
  sub_1DC4B4B50(0, &qword_1F036AF00, (void (*)(void))sub_1DC503FF0, (void (*)(void))sub_1DC504038);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 104))(v5, v2, v6);
  v7 = a1 + v4[6];
  v8 = *MEMORY[0x1E0CF8120];
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E7D0, (void (*)(void))sub_1DC510CA0, (void (*)(void))sub_1DC510CE4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 104))(v7, v8, v9);
  v10 = a1 + v4[7];
  sub_1DC4B4B50(0, &qword_1EDB0E7E8, (void (*)(void))sub_1DC510E20, (void (*)(void))sub_1DC510E64);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 104))(v10, v8, v11);
  v12 = a1 + v4[8];
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 104))(v12, v8, v13);
  v14 = a1 + v4[9];
  sub_1DC4B4B50(0, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 104))(v14, v8, v15);
}

uint64_t NonNewsArticleExternalViewEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C37DC((uint64_t (*)(_QWORD))MEMORY[0x1E0CF8670], a1);
}

uint64_t NonNewsArticleExternalViewEvent.Model.nonNewsArticleData.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3 = (_QWORD *)(v1 + *(int *)(type metadata accessor for NonNewsArticleExternalViewEvent.Model(0) + 20));
  v4 = v3[1];
  v5 = v3[2];
  v6 = v3[3];
  v7 = v3[4];
  v8 = v3[5];
  *a1 = *v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  a1[4] = v7;
  a1[5] = v8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t type metadata accessor for NonNewsArticleExternalViewEvent.Model(uint64_t a1)
{
  return sub_1DC4B385C(a1, qword_1F036C538);
}

uint64_t NonNewsArticleExternalViewEvent.Model.feedPositionData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t result;
  int *v4;
  int v5;

  result = type metadata accessor for NonNewsArticleExternalViewEvent.Model(0);
  v4 = (int *)(v1 + *(int *)(result + 24));
  v5 = *v4;
  LOBYTE(v4) = *((_BYTE *)v4 + 4);
  *(_DWORD *)a1 = v5;
  *(_BYTE *)(a1 + 4) = (_BYTE)v4;
  return result;
}

uint64_t NonNewsArticleExternalViewEvent.Model.inGroupPositionData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t result;
  int *v4;
  int v5;

  result = type metadata accessor for NonNewsArticleExternalViewEvent.Model(0);
  v4 = (int *)(v1 + *(int *)(result + 28));
  v5 = *v4;
  LOBYTE(v4) = *((_BYTE *)v4 + 4);
  *(_DWORD *)a1 = v5;
  *(_BYTE *)(a1 + 4) = (_BYTE)v4;
  return result;
}

uint64_t NonNewsArticleExternalViewEvent.Model.feedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for NonNewsArticleExternalViewEvent.Model(0) + 32);
  v4 = *(_QWORD *)(v3 + 16);
  *(_OWORD *)a1 = *(_OWORD *)v3;
  *(_QWORD *)(a1 + 16) = v4;
  return swift_bridgeObjectRetain();
}

uint64_t NonNewsArticleExternalViewEvent.Model.groupData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for NonNewsArticleExternalViewEvent.Model(0) + 36));
  v4 = *v3;
  v5 = v3[1];
  v6 = v3[2];
  v7 = v3[3];
  v8 = v3[4];
  v9 = v3[5];
  *a1 = *v3;
  a1[1] = v5;
  a1[2] = v6;
  a1[3] = v7;
  a1[4] = v8;
  a1[5] = v9;
  return sub_1DC4C9EC0(v4, v5, v6);
}

__n128 NonNewsArticleExternalViewEvent.Model.init(eventData:nonNewsArticleData:feedPositionData:inGroupPositionData:feedData:groupData:)@<Q0>(uint64_t a1@<X0>, __int128 *a2@<X1>, int *a3@<X2>, int *a4@<X3>, __int128 *a5@<X4>, __int128 *a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  int v11;
  char v12;
  int v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __n128 result;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  uint64_t v28;
  __n128 v29;
  __int128 v30;

  v25 = a2[1];
  v26 = *a2;
  v9 = *((_QWORD *)a2 + 4);
  v10 = *((_QWORD *)a2 + 5);
  v11 = *a3;
  v12 = *((_BYTE *)a3 + 4);
  v13 = *a4;
  v14 = *((_BYTE *)a4 + 4);
  v27 = *a5;
  v15 = *((_QWORD *)a5 + 2);
  v29 = (__n128)a6[1];
  v30 = *a6;
  v16 = *((_QWORD *)a6 + 4);
  v28 = *((_QWORD *)a6 + 5);
  v17 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(a7, a1, v17);
  v18 = (int *)type metadata accessor for NonNewsArticleExternalViewEvent.Model(0);
  v19 = a7 + v18[5];
  *(_OWORD *)v19 = v26;
  *(_OWORD *)(v19 + 16) = v25;
  *(_QWORD *)(v19 + 32) = v9;
  *(_QWORD *)(v19 + 40) = v10;
  v20 = a7 + v18[6];
  *(_DWORD *)v20 = v11;
  *(_BYTE *)(v20 + 4) = v12;
  v21 = a7 + v18[7];
  *(_DWORD *)v21 = v13;
  *(_BYTE *)(v21 + 4) = v14;
  v22 = a7 + v18[8];
  *(_OWORD *)v22 = v27;
  *(_QWORD *)(v22 + 16) = v15;
  v23 = a7 + v18[9];
  result = v29;
  *(_OWORD *)v23 = v30;
  *(__n128 *)(v23 + 16) = v29;
  *(_QWORD *)(v23 + 32) = v16;
  *(_QWORD *)(v23 + 40) = v28;
  return result;
}

uint64_t sub_1DC55334C(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1DC553384 + 4 * byte_1DC638C00[a1]))(0x746144746E657665, 0xE900000000000061);
}

unint64_t sub_1DC553384()
{
  return 0xD000000000000012;
}

uint64_t sub_1DC5533D8()
{
  return 0x6174614464656566;
}

uint64_t sub_1DC5533F0()
{
  return 0x74614470756F7267;
}

uint64_t sub_1DC553404()
{
  unsigned __int8 *v0;

  return sub_1DC55334C(*v0);
}

uint64_t sub_1DC55340C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1DC555978(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DC553430()
{
  sub_1DC553738();
  return sub_1DC62B604();
}

uint64_t sub_1DC553458()
{
  sub_1DC553738();
  return sub_1DC62B610();
}

uint64_t NonNewsArticleExternalViewEvent.Model.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int *v10;
  __int128 *v11;
  __int128 v12;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;
  int *v16;
  int v17;
  int *v18;
  int v19;
  __int128 *v20;
  uint64_t v21;
  __int128 *v22;
  __int128 v23;
  uint64_t v25;
  char v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;

  v3 = v1;
  sub_1DC553BB0(0, &qword_1F036C428, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v25 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC553738();
  sub_1DC62B5F8();
  LOBYTE(v27) = 0;
  sub_1DC62ABA8();
  sub_1DC4B6788(&qword_1EDB0E8A8, MEMORY[0x1E0CF8680]);
  sub_1DC62B4E4();
  if (!v2)
  {
    v10 = (int *)type metadata accessor for NonNewsArticleExternalViewEvent.Model(0);
    v11 = (__int128 *)(v3 + v10[5]);
    v12 = *v11;
    v13 = v11[1];
    v15 = *((_QWORD *)v11 + 4);
    v14 = *((_QWORD *)v11 + 5);
    v27 = v12;
    v28 = v13;
    *(_QWORD *)&v29 = v15;
    *((_QWORD *)&v29 + 1) = v14;
    v26 = 1;
    sub_1DC504038();
    sub_1DC62B4E4();
    v16 = (int *)(v3 + v10[6]);
    v17 = *v16;
    LOBYTE(v16) = *((_BYTE *)v16 + 4);
    LODWORD(v27) = v17;
    BYTE4(v27) = (_BYTE)v16;
    v26 = 2;
    sub_1DC510CE4();
    sub_1DC62B490();
    v18 = (int *)(v3 + v10[7]);
    v19 = *v18;
    LOBYTE(v18) = *((_BYTE *)v18 + 4);
    LODWORD(v27) = v19;
    BYTE4(v27) = (_BYTE)v18;
    v26 = 3;
    sub_1DC510E64();
    sub_1DC62B490();
    v20 = (__int128 *)(v3 + v10[8]);
    v21 = *((_QWORD *)v20 + 2);
    v27 = *v20;
    *(_QWORD *)&v28 = v21;
    v26 = 4;
    sub_1DC4BEFD8();
    sub_1DC62B490();
    v22 = (__int128 *)(v3 + v10[9]);
    v23 = v22[1];
    v27 = *v22;
    v28 = v23;
    v29 = v22[2];
    v26 = 5;
    sub_1DC4C9004();
    sub_1DC62B490();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1DC553738()
{
  unint64_t result;

  result = qword_1F036C430;
  if (!qword_1F036C430)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC638E4C, &type metadata for NonNewsArticleExternalViewEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036C430);
  }
  return result;
}

uint64_t NonNewsArticleExternalViewEvent.Model.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  __int128 v16;
  char *v17;
  char v18;
  char *v19;
  char v20;
  char *v21;
  uint64_t v22;
  char *v23;
  char *v24;
  __int128 v25;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  char v36;

  v27 = a2;
  v3 = sub_1DC62ABA8();
  v28 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v29 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC553BB0(0, &qword_1F036C438, MEMORY[0x1E0DED048]);
  v31 = v5;
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v27 - v7;
  v9 = (int *)type metadata accessor for NonNewsArticleExternalViewEvent.Model(0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC553738();
  v30 = v8;
  v12 = v32;
  sub_1DC62B5E0();
  if (v12)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v13 = v6;
  v14 = v28;
  LOBYTE(v33) = 0;
  sub_1DC4B6788(&qword_1EDB0E278, MEMORY[0x1E0CF8688]);
  sub_1DC62B454();
  (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v11, v29, v3);
  v36 = 1;
  sub_1DC503FF0();
  sub_1DC62B454();
  v15 = v34;
  v16 = v35;
  v17 = &v11[v9[5]];
  *(_OWORD *)v17 = v33;
  *((_OWORD *)v17 + 1) = v15;
  *((_OWORD *)v17 + 2) = v16;
  v36 = 2;
  sub_1DC510CA0();
  sub_1DC62B400();
  v18 = BYTE4(v33);
  v19 = &v11[v9[6]];
  *(_DWORD *)v19 = v33;
  v19[4] = v18;
  v36 = 3;
  sub_1DC510E20();
  sub_1DC62B400();
  v20 = BYTE4(v33);
  v21 = &v11[v9[7]];
  *(_DWORD *)v21 = v33;
  v21[4] = v20;
  v36 = 4;
  sub_1DC4BEF94();
  sub_1DC62B400();
  v22 = v34;
  v23 = &v11[v9[8]];
  *(_OWORD *)v23 = v33;
  *((_QWORD *)v23 + 2) = v22;
  v36 = 5;
  sub_1DC4C8FC0();
  sub_1DC62B400();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v30, v31);
  v24 = &v11[v9[9]];
  v25 = v34;
  *(_OWORD *)v24 = v33;
  *((_OWORD *)v24 + 1) = v25;
  *((_OWORD *)v24 + 2) = v35;
  sub_1DC553C0C((uint64_t)v11, v27);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return sub_1DC553C50((uint64_t)v11);
}

void sub_1DC553BB0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1DC553738();
    v7 = a3(a1, &type metadata for NonNewsArticleExternalViewEvent.Model.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1DC553C0C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for NonNewsArticleExternalViewEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DC553C50(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for NonNewsArticleExternalViewEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1DC553C8C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return NonNewsArticleExternalViewEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_1DC553CA0(_QWORD *a1)
{
  return NonNewsArticleExternalViewEvent.Model.encode(to:)(a1);
}

uint64_t sub_1DC553CB4@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4B2C68(&qword_1F0369050, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1F036C3F8, a1);
}

uint64_t sub_1DC553CD8@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4B2C68(&qword_1F0369058, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1F036C410, a1);
}

uint64_t sub_1DC553CFC@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v4 = *MEMORY[0x1E0CF8128];
  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 104))(a2, v4, v5);
  v6 = a2 + a1[5];
  sub_1DC4B4B50(0, &qword_1F036AF00, (void (*)(void))sub_1DC503FF0, (void (*)(void))sub_1DC504038);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 104))(v6, v4, v7);
  v8 = a2 + a1[6];
  v9 = *MEMORY[0x1E0CF8120];
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E7D0, (void (*)(void))sub_1DC510CA0, (void (*)(void))sub_1DC510CE4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 104))(v8, v9, v10);
  v11 = a2 + a1[7];
  sub_1DC4B4B50(0, &qword_1EDB0E7E8, (void (*)(void))sub_1DC510E20, (void (*)(void))sub_1DC510E64);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 104))(v11, v9, v12);
  v13 = a2 + a1[8];
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 104))(v13, v9, v14);
  v15 = a2 + a1[9];
  sub_1DC4B4B50(0, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 104))(v15, v9, v16);
}

uint64_t *initializeBufferWithCopyOfBuffer for NonNewsArticleExternalViewEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v28 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v28 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_1DC4B6600();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    sub_1DC4B4B50(0, &qword_1F036AF00, (void (*)(void))sub_1DC503FF0, (void (*)(void))sub_1DC504038);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = a3[6];
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E7D0, (void (*)(void))sub_1DC510CA0, (void (*)(void))sub_1DC510CE4);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
    v16 = a3[7];
    v17 = (char *)a1 + v16;
    v18 = (char *)a2 + v16;
    sub_1DC4B4B50(0, &qword_1EDB0E7E8, (void (*)(void))sub_1DC510E20, (void (*)(void))sub_1DC510E64);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
    v20 = a3[8];
    v21 = (char *)a1 + v20;
    v22 = (char *)a2 + v20;
    sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v21, v22, v23);
    v24 = a3[9];
    v25 = (char *)a1 + v24;
    v26 = (char *)a2 + v24;
    sub_1DC4B4B50(0, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v25, v26, v27);
  }
  return a1;
}

uint64_t destroy for NonNewsArticleExternalViewEvent(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + a2[5];
  sub_1DC4B4B50(0, &qword_1F036AF00, (void (*)(void))sub_1DC503FF0, (void (*)(void))sub_1DC504038);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = a1 + a2[6];
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E7D0, (void (*)(void))sub_1DC510CA0, (void (*)(void))sub_1DC510CE4);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  v9 = a1 + a2[7];
  sub_1DC4B4B50(0, &qword_1EDB0E7E8, (void (*)(void))sub_1DC510E20, (void (*)(void))sub_1DC510E64);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  v11 = a1 + a2[8];
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
  v13 = a1 + a2[9];
  sub_1DC4B4B50(0, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v13, v14);
}

uint64_t initializeWithCopy for NonNewsArticleExternalViewEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1DC4B4B50(0, &qword_1F036AF00, (void (*)(void))sub_1DC503FF0, (void (*)(void))sub_1DC504038);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E7D0, (void (*)(void))sub_1DC510CA0, (void (*)(void))sub_1DC510CE4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1DC4B4B50(0, &qword_1EDB0E7E8, (void (*)(void))sub_1DC510E20, (void (*)(void))sub_1DC510E64);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1DC4B4B50(0, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v24, v25, v26);
  return a1;
}

uint64_t assignWithCopy for NonNewsArticleExternalViewEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1DC4B4B50(0, &qword_1F036AF00, (void (*)(void))sub_1DC503FF0, (void (*)(void))sub_1DC504038);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E7D0, (void (*)(void))sub_1DC510CA0, (void (*)(void))sub_1DC510CE4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 24))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1DC4B4B50(0, &qword_1EDB0E7E8, (void (*)(void))sub_1DC510E20, (void (*)(void))sub_1DC510E64);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 24))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 24))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1DC4B4B50(0, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 24))(v24, v25, v26);
  return a1;
}

uint64_t initializeWithTake for NonNewsArticleExternalViewEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1DC4B4B50(0, &qword_1F036AF00, (void (*)(void))sub_1DC503FF0, (void (*)(void))sub_1DC504038);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E7D0, (void (*)(void))sub_1DC510CA0, (void (*)(void))sub_1DC510CE4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1DC4B4B50(0, &qword_1EDB0E7E8, (void (*)(void))sub_1DC510E20, (void (*)(void))sub_1DC510E64);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1DC4B4B50(0, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(v24, v25, v26);
  return a1;
}

uint64_t assignWithTake for NonNewsArticleExternalViewEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1DC4B4B50(0, &qword_1F036AF00, (void (*)(void))sub_1DC503FF0, (void (*)(void))sub_1DC504038);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E7D0, (void (*)(void))sub_1DC510CA0, (void (*)(void))sub_1DC510CE4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 40))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1DC4B4B50(0, &qword_1EDB0E7E8, (void (*)(void))sub_1DC510E20, (void (*)(void))sub_1DC510E64);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 40))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 40))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1DC4B4B50(0, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 40))(v24, v25, v26);
  return a1;
}

uint64_t getEnumTagSinglePayload for NonNewsArticleExternalViewEvent()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC5549B0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  sub_1DC4B6600();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    sub_1DC4B4B50(0, &qword_1F036AF00, (void (*)(void))sub_1DC503FF0, (void (*)(void))sub_1DC504038);
    v12 = *(_QWORD *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
    {
      v8 = v11;
      v13 = a3[5];
    }
    else
    {
      sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E7D0, (void (*)(void))sub_1DC510CA0, (void (*)(void))sub_1DC510CE4);
      v12 = *(_QWORD *)(v14 - 8);
      if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
      {
        v8 = v14;
        v13 = a3[6];
      }
      else
      {
        sub_1DC4B4B50(0, &qword_1EDB0E7E8, (void (*)(void))sub_1DC510E20, (void (*)(void))sub_1DC510E64);
        v12 = *(_QWORD *)(v15 - 8);
        if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
        {
          v8 = v15;
          v13 = a3[7];
        }
        else
        {
          sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
          v12 = *(_QWORD *)(v16 - 8);
          if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
          {
            v8 = v16;
            v13 = a3[8];
          }
          else
          {
            sub_1DC4B4B50(0, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
            v8 = v17;
            v12 = *(_QWORD *)(v17 - 8);
            v13 = a3[9];
          }
        }
      }
    }
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t storeEnumTagSinglePayload for NonNewsArticleExternalViewEvent()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC554B60(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  sub_1DC4B6600();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    sub_1DC4B4B50(0, &qword_1F036AF00, (void (*)(void))sub_1DC503FF0, (void (*)(void))sub_1DC504038);
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = a4[5];
    }
    else
    {
      sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E7D0, (void (*)(void))sub_1DC510CA0, (void (*)(void))sub_1DC510CE4);
      v14 = *(_QWORD *)(v16 - 8);
      if (*(_DWORD *)(v14 + 84) == a3)
      {
        v10 = v16;
        v15 = a4[6];
      }
      else
      {
        sub_1DC4B4B50(0, &qword_1EDB0E7E8, (void (*)(void))sub_1DC510E20, (void (*)(void))sub_1DC510E64);
        v14 = *(_QWORD *)(v17 - 8);
        if (*(_DWORD *)(v14 + 84) == a3)
        {
          v10 = v17;
          v15 = a4[7];
        }
        else
        {
          sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
          v14 = *(_QWORD *)(v18 - 8);
          if (*(_DWORD *)(v14 + 84) == a3)
          {
            v10 = v18;
            v15 = a4[8];
          }
          else
          {
            sub_1DC4B4B50(0, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
            v10 = v19;
            v14 = *(_QWORD *)(v19 - 8);
            v15 = a4[9];
          }
        }
      }
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_1DC554D0C()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;

  sub_1DC4B6600();
  if (v0 <= 0x3F)
  {
    sub_1DC4B4B50(319, &qword_1F036AF00, (void (*)(void))sub_1DC503FF0, (void (*)(void))sub_1DC504038);
    if (v1 <= 0x3F)
    {
      sub_1DC4B4B50(319, (unint64_t *)&qword_1EDB0E7D0, (void (*)(void))sub_1DC510CA0, (void (*)(void))sub_1DC510CE4);
      if (v2 <= 0x3F)
      {
        sub_1DC4B4B50(319, &qword_1EDB0E7E8, (void (*)(void))sub_1DC510E20, (void (*)(void))sub_1DC510E64);
        if (v3 <= 0x3F)
        {
          sub_1DC4B4B50(319, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
          if (v4 <= 0x3F)
          {
            sub_1DC4B4B50(319, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
            if (v5 <= 0x3F)
              swift_initStructMetadata();
          }
        }
      }
    }
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for NonNewsArticleExternalViewEvent.Model(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  __int128 v31;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v30 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v30 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1DC62ABA8();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = a3[6];
    v10 = (uint64_t *)((char *)a1 + v8);
    v11 = (uint64_t *)((char *)a2 + v8);
    v12 = v11[1];
    *v10 = *v11;
    v10[1] = v12;
    v13 = v11[3];
    v10[2] = v11[2];
    v10[3] = v13;
    v14 = v11[5];
    v10[4] = v11[4];
    v10[5] = v14;
    v15 = (char *)a1 + v9;
    v16 = (char *)a2 + v9;
    *(_DWORD *)v15 = *(_DWORD *)v16;
    v15[4] = v16[4];
    v17 = a3[7];
    v18 = a3[8];
    v19 = (char *)a1 + v17;
    v20 = (char *)a2 + v17;
    *(_DWORD *)v19 = *(_DWORD *)v20;
    v19[4] = v20[4];
    v21 = (char *)a1 + v18;
    v22 = (char *)a2 + v18;
    *v21 = *v22;
    v23 = *((_QWORD *)v22 + 2);
    *((_QWORD *)v21 + 1) = *((_QWORD *)v22 + 1);
    *((_QWORD *)v21 + 2) = v23;
    v24 = a3[9];
    v25 = (char *)a1 + v24;
    v26 = (char *)a2 + v24;
    v27 = *(uint64_t *)((char *)a2 + v24 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v27)
    {
      *v25 = *v26;
      *((_QWORD *)v25 + 1) = *((_QWORD *)v26 + 1);
      *((_QWORD *)v25 + 2) = v27;
      *((_QWORD *)v25 + 3) = *((_QWORD *)v26 + 3);
      v28 = *((_QWORD *)v26 + 4);
      v29 = *((_QWORD *)v26 + 5);
      *((_QWORD *)v25 + 4) = v28;
      *((_QWORD *)v25 + 5) = v29;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v31 = *((_OWORD *)v26 + 1);
      *(_OWORD *)v25 = *(_OWORD *)v26;
      *((_OWORD *)v25 + 1) = v31;
      *((_OWORD *)v25 + 2) = *((_OWORD *)v26 + 2);
    }
  }
  return a1;
}

uint64_t destroy for NonNewsArticleExternalViewEvent.Model(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;

  v4 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  result = *(_QWORD *)(a1 + *(int *)(a2 + 36) + 16);
  if (result)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for NonNewsArticleExternalViewEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __int128 v29;

  v6 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = (_QWORD *)(a1 + v7);
  v10 = (_QWORD *)(a2 + v7);
  v11 = v10[1];
  *v9 = *v10;
  v9[1] = v11;
  v12 = v10[3];
  v9[2] = v10[2];
  v9[3] = v12;
  v13 = v10[5];
  v9[4] = v10[4];
  v9[5] = v13;
  v14 = a1 + v8;
  v15 = a2 + v8;
  *(_DWORD *)v14 = *(_DWORD *)v15;
  *(_BYTE *)(v14 + 4) = *(_BYTE *)(v15 + 4);
  v16 = a3[7];
  v17 = a3[8];
  v18 = a1 + v16;
  v19 = a2 + v16;
  *(_DWORD *)v18 = *(_DWORD *)v19;
  *(_BYTE *)(v18 + 4) = *(_BYTE *)(v19 + 4);
  v20 = a1 + v17;
  v21 = a2 + v17;
  *(_BYTE *)v20 = *(_BYTE *)v21;
  v22 = *(_QWORD *)(v21 + 16);
  *(_QWORD *)(v20 + 8) = *(_QWORD *)(v21 + 8);
  *(_QWORD *)(v20 + 16) = v22;
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  v26 = *(_QWORD *)(v25 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v26)
  {
    *(_BYTE *)v24 = *(_BYTE *)v25;
    *(_QWORD *)(v24 + 8) = *(_QWORD *)(v25 + 8);
    *(_QWORD *)(v24 + 16) = v26;
    *(_QWORD *)(v24 + 24) = *(_QWORD *)(v25 + 24);
    v27 = *(_QWORD *)(v25 + 32);
    v28 = *(_QWORD *)(v25 + 40);
    *(_QWORD *)(v24 + 32) = v27;
    *(_QWORD *)(v24 + 40) = v28;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v29 = *(_OWORD *)(v25 + 16);
    *(_OWORD *)v24 = *(_OWORD *)v25;
    *(_OWORD *)(v24 + 16) = v29;
    *(_OWORD *)(v24 + 32) = *(_OWORD *)(v25 + 32);
  }
  return a1;
}

uint64_t assignWithCopy for NonNewsArticleExternalViewEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  int *v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  int *v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __int128 *v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;

  v6 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *v8 = *(_QWORD *)(a2 + v7);
  v8[1] = *(_QWORD *)(a2 + v7 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v8[2] = v9[2];
  v8[3] = v9[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v8[4] = v9[4];
  v8[5] = v9[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v10 = a3[6];
  v11 = a1 + v10;
  v12 = (int *)(a2 + v10);
  v13 = *v12;
  *(_BYTE *)(v11 + 4) = *((_BYTE *)v12 + 4);
  *(_DWORD *)v11 = v13;
  v14 = a3[7];
  v15 = a1 + v14;
  v16 = (int *)(a2 + v14);
  v17 = *v16;
  *(_BYTE *)(v15 + 4) = *((_BYTE *)v16 + 4);
  *(_DWORD *)v15 = v17;
  v18 = a3[8];
  v19 = a1 + v18;
  v20 = a2 + v18;
  *(_BYTE *)v19 = *(_BYTE *)v20;
  *(_QWORD *)(v19 + 8) = *(_QWORD *)(v20 + 8);
  *(_QWORD *)(v19 + 16) = *(_QWORD *)(v20 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v21 = a3[9];
  v22 = a1 + v21;
  v23 = (__int128 *)(a2 + v21);
  v24 = *(_QWORD *)(a1 + v21 + 16);
  v25 = *((_QWORD *)v23 + 2);
  if (v24)
  {
    if (v25)
    {
      *(_BYTE *)v22 = *(_BYTE *)v23;
      *(_QWORD *)(v22 + 8) = *((_QWORD *)v23 + 1);
      *(_QWORD *)(v22 + 16) = *((_QWORD *)v23 + 2);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_DWORD *)(v22 + 24) = *((_DWORD *)v23 + 6);
      *(_DWORD *)(v22 + 28) = *((_DWORD *)v23 + 7);
      *(_QWORD *)(v22 + 32) = *((_QWORD *)v23 + 4);
      *(_QWORD *)(v22 + 40) = *((_QWORD *)v23 + 5);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1DC4CDAF4(v22);
      v27 = v23[1];
      v26 = v23[2];
      *(_OWORD *)v22 = *v23;
      *(_OWORD *)(v22 + 16) = v27;
      *(_OWORD *)(v22 + 32) = v26;
    }
  }
  else if (v25)
  {
    *(_BYTE *)v22 = *(_BYTE *)v23;
    *(_QWORD *)(v22 + 8) = *((_QWORD *)v23 + 1);
    *(_QWORD *)(v22 + 16) = *((_QWORD *)v23 + 2);
    *(_DWORD *)(v22 + 24) = *((_DWORD *)v23 + 6);
    *(_DWORD *)(v22 + 28) = *((_DWORD *)v23 + 7);
    *(_QWORD *)(v22 + 32) = *((_QWORD *)v23 + 4);
    *(_QWORD *)(v22 + 40) = *((_QWORD *)v23 + 5);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v28 = *v23;
    v29 = v23[2];
    *(_OWORD *)(v22 + 16) = v23[1];
    *(_OWORD *)(v22 + 32) = v29;
    *(_OWORD *)v22 = v28;
  }
  return a1;
}

uint64_t initializeWithTake for NonNewsArticleExternalViewEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _OWORD *v9;
  _OWORD *v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _OWORD *v21;
  __int128 *v22;
  __int128 v23;
  __int128 v24;

  v6 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = (_OWORD *)(a1 + v7);
  v10 = (_OWORD *)(a2 + v7);
  v11 = v10[1];
  *v9 = *v10;
  v9[1] = v11;
  v9[2] = v10[2];
  v12 = a1 + v8;
  v13 = a2 + v8;
  *(_DWORD *)v12 = *(_DWORD *)v13;
  *(_BYTE *)(v12 + 4) = *(_BYTE *)(v13 + 4);
  v14 = a3[7];
  v15 = a3[8];
  v16 = a1 + v14;
  v17 = a2 + v14;
  *(_DWORD *)v16 = *(_DWORD *)v17;
  *(_BYTE *)(v16 + 4) = *(_BYTE *)(v17 + 4);
  v18 = a1 + v15;
  v19 = a2 + v15;
  *(_OWORD *)v18 = *(_OWORD *)v19;
  *(_QWORD *)(v18 + 16) = *(_QWORD *)(v19 + 16);
  v20 = a3[9];
  v21 = (_OWORD *)(a1 + v20);
  v22 = (__int128 *)(a2 + v20);
  v23 = *v22;
  v24 = v22[2];
  v21[1] = v22[1];
  v21[2] = v24;
  *v21 = v23;
  return a1;
}

uint64_t assignWithTake for NonNewsArticleExternalViewEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __int128 v29;

  v6 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  v10 = *(_QWORD *)(a2 + v7 + 8);
  *v8 = *(_QWORD *)(a2 + v7);
  v8[1] = v10;
  swift_bridgeObjectRelease();
  v11 = v9[3];
  v8[2] = v9[2];
  v8[3] = v11;
  swift_bridgeObjectRelease();
  v12 = v9[5];
  v8[4] = v9[4];
  v8[5] = v12;
  swift_bridgeObjectRelease();
  v13 = a3[6];
  v14 = a3[7];
  v15 = a1 + v13;
  v16 = a2 + v13;
  *(_DWORD *)v15 = *(_DWORD *)v16;
  *(_BYTE *)(v15 + 4) = *(_BYTE *)(v16 + 4);
  v17 = a1 + v14;
  v18 = a2 + v14;
  *(_DWORD *)v17 = *(_DWORD *)v18;
  *(_BYTE *)(v17 + 4) = *(_BYTE *)(v18 + 4);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  *(_BYTE *)v20 = *(_BYTE *)v21;
  v23 = *(_QWORD *)(v21 + 8);
  v22 = *(_QWORD *)(v21 + 16);
  *(_QWORD *)(v20 + 8) = v23;
  *(_QWORD *)(v20 + 16) = v22;
  swift_bridgeObjectRelease();
  v24 = a3[9];
  v25 = a1 + v24;
  v26 = a2 + v24;
  if (!*(_QWORD *)(a1 + v24 + 16))
    goto LABEL_5;
  v27 = *(_QWORD *)(v26 + 16);
  if (!v27)
  {
    sub_1DC4CDAF4(v25);
LABEL_5:
    v29 = *(_OWORD *)(v26 + 16);
    *(_OWORD *)v25 = *(_OWORD *)v26;
    *(_OWORD *)(v25 + 16) = v29;
    *(_OWORD *)(v25 + 32) = *(_OWORD *)(v26 + 32);
    return a1;
  }
  *(_BYTE *)v25 = *(_BYTE *)v26;
  *(_QWORD *)(v25 + 8) = *(_QWORD *)(v26 + 8);
  *(_QWORD *)(v25 + 16) = v27;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v25 + 24) = *(_QWORD *)(v26 + 24);
  v28 = *(_QWORD *)(v26 + 40);
  *(_QWORD *)(v25 + 32) = *(_QWORD *)(v26 + 32);
  *(_QWORD *)(v25 + 40) = v28;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for NonNewsArticleExternalViewEvent.Model()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC55563C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_1DC62ABA8();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for NonNewsArticleExternalViewEvent.Model()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC5556C8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_1DC62ABA8();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  return result;
}

uint64_t sub_1DC555744()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1DC62ABA8();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for NonNewsArticleExternalViewEvent.Model.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_1DC555820 + 4 * byte_1DC638C0B[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_1DC555854 + 4 * byte_1DC638C06[v4]))();
}

uint64_t sub_1DC555854(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC55585C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DC555864);
  return result;
}

uint64_t sub_1DC555870(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DC555878);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_1DC55587C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC555884(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for NonNewsArticleExternalViewEvent.Model.CodingKeys()
{
  return &type metadata for NonNewsArticleExternalViewEvent.Model.CodingKeys;
}

unint64_t sub_1DC5558A4()
{
  unint64_t result;

  result = qword_1F036C580;
  if (!qword_1F036C580)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC638E24, &type metadata for NonNewsArticleExternalViewEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036C580);
  }
  return result;
}

unint64_t sub_1DC5558EC()
{
  unint64_t result;

  result = qword_1F036C588;
  if (!qword_1F036C588)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC638D94, &type metadata for NonNewsArticleExternalViewEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036C588);
  }
  return result;
}

unint64_t sub_1DC555934()
{
  unint64_t result;

  result = qword_1F036C590;
  if (!qword_1F036C590)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC638DBC, &type metadata for NonNewsArticleExternalViewEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036C590);
  }
  return result;
}

uint64_t sub_1DC555978(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x746144746E657665 && a2 == 0xE900000000000061;
  if (v2 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000001DC64C660 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001DC64C680 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001DC64C6A0 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6174614464656566 && a2 == 0xE800000000000000 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x74614470756F7267 && a2 == 0xE900000000000061)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    v6 = sub_1DC62B520();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 5;
    else
      return 6;
  }
}

uint64_t sub_1DC555BEC(uint64_t a1)
{
  return sub_1DC4BE784(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], qword_1F036C598, MEMORY[0x1E0CF8078]);
}

uint64_t static ANFComponentExposureEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C2FE8(&qword_1F0369060, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1F036C598, a1);
}

uint64_t sub_1DC555C2C(uint64_t a1)
{
  return sub_1DC4BE784(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], qword_1F036C5B0, MEMORY[0x1E0CF8380]);
}

uint64_t static ANFComponentExposureEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C2FE8(&qword_1F0369068, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1F036C5B0, a1);
}

uint64_t ANFComponentExposureEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C37DC((uint64_t (*)(_QWORD))sub_1DC4B6600, a1);
}

uint64_t ANFComponentExposureEvent.eventData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  sub_1DC4B6600();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*ANFComponentExposureEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t ANFComponentExposureEvent.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C382C(type metadata accessor for ANFComponentExposureEvent, (uint64_t (*)(_QWORD))sub_1DC4B66A4, a1);
}

uint64_t type metadata accessor for ANFComponentExposureEvent(uint64_t a1)
{
  return sub_1DC4B385C(a1, qword_1F036C638);
}

uint64_t ANFComponentExposureEvent.timedData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ANFComponentExposureEvent(0) + 20);
  sub_1DC4B66A4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*ANFComponentExposureEvent.timedData.modify())()
{
  type metadata accessor for ANFComponentExposureEvent(0);
  return nullsub_1;
}

uint64_t ANFComponentExposureEvent.newsArticleData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ANFComponentExposureEvent(0) + 24);
  sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t ANFComponentExposureEvent.newsArticleData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ANFComponentExposureEvent(0) + 24);
  sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*ANFComponentExposureEvent.newsArticleData.modify())()
{
  type metadata accessor for ANFComponentExposureEvent(0);
  return nullsub_1;
}

uint64_t ANFComponentExposureEvent.anfComponentData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ANFComponentExposureEvent(0) + 28);
  sub_1DC4B4B50(0, &qword_1EDB0E7C8, (void (*)(void))sub_1DC4E4AEC, (void (*)(void))sub_1DC4E4B34);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t ANFComponentExposureEvent.anfComponentData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ANFComponentExposureEvent(0) + 28);
  sub_1DC4B4B50(0, &qword_1EDB0E7C8, (void (*)(void))sub_1DC4E4AEC, (void (*)(void))sub_1DC4E4B34);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*ANFComponentExposureEvent.anfComponentData.modify())()
{
  type metadata accessor for ANFComponentExposureEvent(0);
  return nullsub_1;
}

uint64_t ANFComponentExposureEvent.channelData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ANFComponentExposureEvent(0) + 32);
  sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t ANFComponentExposureEvent.channelData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ANFComponentExposureEvent(0) + 32);
  sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*ANFComponentExposureEvent.channelData.modify())()
{
  type metadata accessor for ANFComponentExposureEvent(0);
  return nullsub_1;
}

uint64_t ANFComponentExposureEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v2 = *MEMORY[0x1E0CF8128];
  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
  v4 = (int *)type metadata accessor for ANFComponentExposureEvent(0);
  v5 = a1 + v4[5];
  sub_1DC4B66A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 104))(v5, v2, v6);
  v7 = a1 + v4[6];
  sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 104))(v7, v2, v8);
  v9 = a1 + v4[7];
  sub_1DC4B4B50(0, &qword_1EDB0E7C8, (void (*)(void))sub_1DC4E4AEC, (void (*)(void))sub_1DC4E4B34);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 104))(v9, v2, v10);
  v11 = a1 + v4[8];
  sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 104))(v11, v2, v12);
}

uint64_t ANFComponentExposureEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C37DC((uint64_t (*)(_QWORD))MEMORY[0x1E0CF8670], a1);
}

uint64_t ANFComponentExposureEvent.Model.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C382C(type metadata accessor for ANFComponentExposureEvent.Model, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF86C0], a1);
}

uint64_t type metadata accessor for ANFComponentExposureEvent.Model(uint64_t a1)
{
  return sub_1DC4B385C(a1, qword_1F036C6D8);
}

uint64_t ANFComponentExposureEvent.Model.newsArticleData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  char v12;
  char v13;
  char v14;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for ANFComponentExposureEvent.Model(0) + 24));
  v5 = *v3;
  v4 = v3[1];
  v6 = v3[2];
  v7 = v3[3];
  v8 = *((_BYTE *)v3 + 32);
  v9 = v3[5];
  v10 = *((_BYTE *)v3 + 48);
  v11 = v3[7];
  v12 = *((_BYTE *)v3 + 64);
  v13 = *((_BYTE *)v3 + 65);
  v14 = *((_BYTE *)v3 + 66);
  LOBYTE(v3) = *((_BYTE *)v3 + 67);
  *(_QWORD *)a1 = v5;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  *(_BYTE *)(a1 + 32) = v8;
  *(_QWORD *)(a1 + 40) = v9;
  *(_BYTE *)(a1 + 48) = v10;
  *(_QWORD *)(a1 + 56) = v11;
  *(_BYTE *)(a1 + 64) = v12;
  *(_BYTE *)(a1 + 65) = v13;
  *(_BYTE *)(a1 + 66) = v14;
  *(_BYTE *)(a1 + 67) = (_BYTE)v3;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t ANFComponentExposureEvent.Model.anfComponentData.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = (_QWORD *)(v1 + *(int *)(type metadata accessor for ANFComponentExposureEvent.Model(0) + 28));
  v4 = v3[1];
  *a1 = *v3;
  a1[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t ANFComponentExposureEvent.Model.channelData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for ANFComponentExposureEvent.Model(0) + 32));
  v5 = *v3;
  v4 = v3[1];
  v6 = v3[2];
  v7 = v3[3];
  v8 = *((_BYTE *)v3 + 32);
  LOBYTE(v3) = *((_BYTE *)v3 + 33);
  *(_QWORD *)a1 = v5;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  *(_BYTE *)(a1 + 32) = v8;
  *(_BYTE *)(a1 + 33) = (_BYTE)v3;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

__n128 ANFComponentExposureEvent.Model.init(eventData:timedData:newsArticleData:anfComponentData:channelData:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, __int128 *a3@<X2>, uint64_t *a4@<X3>, __n128 *a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  int *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  __n128 *v21;
  __n128 result;
  char v23;
  char v24;
  char v25;
  char v26;
  __int128 v27;
  uint64_t v28;
  uint64_t v29;
  unsigned __int8 v30;
  unsigned __int8 v31;
  unint64_t v32;
  unint64_t v33;
  __n128 v34;

  v27 = *a3;
  v9 = *((_QWORD *)a3 + 2);
  v10 = *((_QWORD *)a3 + 3);
  v11 = *((_BYTE *)a3 + 32);
  v12 = *((_QWORD *)a3 + 5);
  v13 = *((_BYTE *)a3 + 48);
  v14 = *((_QWORD *)a3 + 7);
  v25 = *((_BYTE *)a3 + 65);
  v26 = *((_BYTE *)a3 + 64);
  v23 = *((_BYTE *)a3 + 67);
  v24 = *((_BYTE *)a3 + 66);
  v28 = a4[1];
  v29 = *a4;
  v34 = *a5;
  v32 = a5[1].n128_u64[1];
  v33 = a5[1].n128_u64[0];
  v30 = a5[2].n128_u8[1];
  v31 = a5[2].n128_u8[0];
  v15 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(a6, a1, v15);
  v16 = (int *)type metadata accessor for ANFComponentExposureEvent.Model(0);
  v17 = a6 + v16[5];
  v18 = sub_1DC62ABC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v17, a2, v18);
  v19 = a6 + v16[6];
  *(_OWORD *)v19 = v27;
  *(_QWORD *)(v19 + 16) = v9;
  *(_QWORD *)(v19 + 24) = v10;
  *(_BYTE *)(v19 + 32) = v11;
  *(_QWORD *)(v19 + 40) = v12;
  *(_BYTE *)(v19 + 48) = v13;
  *(_QWORD *)(v19 + 56) = v14;
  *(_BYTE *)(v19 + 64) = v26;
  *(_BYTE *)(v19 + 65) = v25;
  *(_BYTE *)(v19 + 66) = v24;
  *(_BYTE *)(v19 + 67) = v23;
  v20 = (_QWORD *)(a6 + v16[7]);
  *v20 = v29;
  v20[1] = v28;
  v21 = (__n128 *)(a6 + v16[8]);
  result = v34;
  *v21 = v34;
  v21[1].n128_u64[0] = v33;
  v21[1].n128_u64[1] = v32;
  v21[2].n128_u8[0] = v31;
  v21[2].n128_u8[1] = v30;
  return result;
}

uint64_t sub_1DC55645C()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1DC556490 + 4 * byte_1DC638EA0[*v0]))(0x746144746E657665, 0xE900000000000061);
}

uint64_t sub_1DC556490()
{
  return 0x74614464656D6974;
}

uint64_t sub_1DC5564A4()
{
  return 0x697472417377656ELL;
}

unint64_t sub_1DC5564C8()
{
  return 0xD000000000000010;
}

uint64_t sub_1DC5564E4()
{
  return 0x446C656E6E616863;
}

uint64_t sub_1DC556504@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1DC5586E8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DC556528()
{
  sub_1DC55683C();
  return sub_1DC62B604();
}

uint64_t sub_1DC556550()
{
  sub_1DC55683C();
  return sub_1DC62B610();
}

uint64_t ANFComponentExposureEvent.Model.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int *v10;
  __int128 *v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  char v19;
  char v20;
  char v21;
  __int128 *v22;
  __int128 v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v28;
  char v29;
  __int128 v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  char v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  char v38;
  char v39;
  char v40;
  char v41;

  v3 = v1;
  sub_1DC556D94(0, &qword_1F036C5C8, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v28 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC55683C();
  sub_1DC62B5F8();
  LOBYTE(v30) = 0;
  sub_1DC62ABA8();
  sub_1DC4B6748(&qword_1EDB0E8A8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF8670], MEMORY[0x1E0CF8680]);
  sub_1DC62B4E4();
  if (!v2)
  {
    v10 = (int *)type metadata accessor for ANFComponentExposureEvent.Model(0);
    LOBYTE(v30) = 1;
    sub_1DC62ABC0();
    sub_1DC4B6748(&qword_1EDB0E8B8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF86C0], MEMORY[0x1E0CF86D0]);
    sub_1DC62B4E4();
    v11 = (__int128 *)(v3 + v10[6]);
    v12 = *v11;
    v13 = *((_QWORD *)v11 + 2);
    v14 = *((_QWORD *)v11 + 3);
    v15 = *((_BYTE *)v11 + 32);
    v16 = *((_QWORD *)v11 + 5);
    v17 = *((_BYTE *)v11 + 48);
    v18 = *((_QWORD *)v11 + 7);
    v19 = *((_BYTE *)v11 + 64);
    v20 = *((_BYTE *)v11 + 65);
    v21 = *((_BYTE *)v11 + 66);
    LOBYTE(v11) = *((_BYTE *)v11 + 67);
    v30 = v12;
    v31 = v13;
    v32 = v14;
    v33 = v15;
    v35 = v16;
    v36 = v17;
    v37 = v18;
    v38 = v19;
    v39 = v20;
    v40 = v21;
    v41 = (char)v11;
    v29 = 2;
    sub_1DC4C18E8();
    sub_1DC62B4E4();
    v30 = *(_OWORD *)(v3 + v10[7]);
    v29 = 3;
    sub_1DC4E4B34();
    sub_1DC62B4E4();
    v22 = (__int128 *)(v3 + v10[8]);
    v23 = *v22;
    v24 = *((_QWORD *)v22 + 2);
    v25 = *((_QWORD *)v22 + 3);
    v26 = *((_BYTE *)v22 + 32);
    LOBYTE(v22) = *((_BYTE *)v22 + 33);
    v30 = v23;
    v31 = v24;
    v32 = v25;
    v33 = v26;
    v34 = (char)v22;
    v29 = 4;
    sub_1DC4C8E84();
    sub_1DC62B4E4();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1DC55683C()
{
  unint64_t result;

  result = qword_1F036C5D0;
  if (!qword_1F036C5D0)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC6390BC, &type metadata for ANFComponentExposureEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036C5D0);
  }
  return result;
}

uint64_t ANFComponentExposureEvent.Model.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  char v25;
  char v26;
  char v27;
  char v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  char v33;
  char *v34;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  _QWORD *v47;
  __int128 v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  char v52;
  uint64_t v53;
  char v54;
  uint64_t v55;
  char v56;
  char v57;
  char v58;
  char v59;
  char v60;

  v39 = a2;
  v3 = sub_1DC62ABC0();
  v41 = *(_QWORD *)(v3 - 8);
  v42 = v3;
  MEMORY[0x1E0C80A78](v3);
  v40 = (char *)&v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = sub_1DC62ABA8();
  v5 = *(_QWORD *)(v44 - 8);
  MEMORY[0x1E0C80A78](v44);
  v45 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC556D94(0, &qword_1F036C5D8, MEMORY[0x1E0DED048]);
  v43 = v7;
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v36 - v9;
  v11 = (int *)type metadata accessor for ANFComponentExposureEvent.Model(0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC55683C();
  v46 = v10;
  v14 = (uint64_t)v47;
  sub_1DC62B5E0();
  if (v14)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v15 = v40;
  v16 = v41;
  v37 = v5;
  v38 = v8;
  v47 = a1;
  v17 = v42;
  LOBYTE(v48) = 0;
  sub_1DC4B6748(&qword_1EDB0E278, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF8670], MEMORY[0x1E0CF8688]);
  v18 = v44;
  sub_1DC62B454();
  (*(void (**)(char *, char *, uint64_t))(v37 + 32))(v13, v45, v18);
  LOBYTE(v48) = 1;
  sub_1DC4B6748(&qword_1EDB0E8C0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF86C0], MEMORY[0x1E0CF86D8]);
  sub_1DC62B454();
  (*(void (**)(char *, char *, uint64_t))(v16 + 32))(&v13[v11[5]], v15, v17);
  v60 = 2;
  sub_1DC4C18A0();
  v45 = 0;
  sub_1DC62B454();
  v19 = v49;
  v20 = v50;
  v21 = v51;
  v22 = v53;
  v23 = v54;
  v24 = v55;
  v25 = v56;
  v26 = v57;
  v27 = v58;
  v28 = v59;
  v29 = &v13[v11[6]];
  *(_OWORD *)v29 = v48;
  *((_QWORD *)v29 + 2) = v19;
  *((_QWORD *)v29 + 3) = v20;
  v29[32] = v21;
  *((_QWORD *)v29 + 5) = v22;
  v29[48] = v23;
  *((_QWORD *)v29 + 7) = v24;
  v29[64] = v25;
  v29[65] = v26;
  v29[66] = v27;
  v29[67] = v28;
  v60 = 3;
  sub_1DC4E4AEC();
  sub_1DC62B454();
  *(_OWORD *)&v13[v11[7]] = v48;
  v60 = 4;
  sub_1DC4C8E40();
  sub_1DC62B454();
  (*(void (**)(char *, uint64_t))(v38 + 8))(v46, v43);
  v30 = v49;
  v31 = v50;
  v32 = v51;
  v33 = v52;
  v34 = &v13[v11[8]];
  *(_OWORD *)v34 = v48;
  *((_QWORD *)v34 + 2) = v30;
  *((_QWORD *)v34 + 3) = v31;
  v34[32] = v32;
  v34[33] = v33;
  sub_1DC556DF0((uint64_t)v13, v39);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v47);
  return sub_1DC556E34((uint64_t)v13);
}

void sub_1DC556D94(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1DC55683C();
    v7 = a3(a1, &type metadata for ANFComponentExposureEvent.Model.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1DC556DF0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ANFComponentExposureEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DC556E34(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for ANFComponentExposureEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1DC556E70@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return ANFComponentExposureEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_1DC556E84(_QWORD *a1)
{
  return ANFComponentExposureEvent.Model.encode(to:)(a1);
}

uint64_t sub_1DC556E98@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4B2C68(&qword_1F0369060, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1F036C598, a1);
}

uint64_t sub_1DC556EBC@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4B2C68(&qword_1F0369068, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1F036C5B0, a1);
}

uint64_t sub_1DC556EE0@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v4 = *MEMORY[0x1E0CF8128];
  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 104))(a2, v4, v5);
  v6 = a2 + a1[5];
  sub_1DC4B66A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 104))(v6, v4, v7);
  v8 = a2 + a1[6];
  sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 104))(v8, v4, v9);
  v10 = a2 + a1[7];
  sub_1DC4B4B50(0, &qword_1EDB0E7C8, (void (*)(void))sub_1DC4E4AEC, (void (*)(void))sub_1DC4E4B34);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 104))(v10, v4, v11);
  v12 = a2 + a1[8];
  sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 104))(v12, v4, v13);
}

uint64_t *initializeBufferWithCopyOfBuffer for ANFComponentExposureEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v24 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v24 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_1DC4B6600();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    sub_1DC4B66A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = a3[6];
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
    v16 = a3[7];
    v17 = (char *)a1 + v16;
    v18 = (char *)a2 + v16;
    sub_1DC4B4B50(0, &qword_1EDB0E7C8, (void (*)(void))sub_1DC4E4AEC, (void (*)(void))sub_1DC4E4B34);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
    v20 = a3[8];
    v21 = (char *)a1 + v20;
    v22 = (char *)a2 + v20;
    sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v21, v22, v23);
  }
  return a1;
}

uint64_t destroy for ANFComponentExposureEvent(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + a2[5];
  sub_1DC4B66A4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = a1 + a2[6];
  sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  v9 = a1 + a2[7];
  sub_1DC4B4B50(0, &qword_1EDB0E7C8, (void (*)(void))sub_1DC4E4AEC, (void (*)(void))sub_1DC4E4B34);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  v11 = a1 + a2[8];
  sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
}

uint64_t initializeWithCopy for ANFComponentExposureEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1DC4B66A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1DC4B4B50(0, &qword_1EDB0E7C8, (void (*)(void))sub_1DC4E4AEC, (void (*)(void))sub_1DC4E4B34);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v20, v21, v22);
  return a1;
}

uint64_t assignWithCopy for ANFComponentExposureEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1DC4B66A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 24))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1DC4B4B50(0, &qword_1EDB0E7C8, (void (*)(void))sub_1DC4E4AEC, (void (*)(void))sub_1DC4E4B34);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 24))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 24))(v20, v21, v22);
  return a1;
}

uint64_t initializeWithTake for ANFComponentExposureEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1DC4B66A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1DC4B4B50(0, &qword_1EDB0E7C8, (void (*)(void))sub_1DC4E4AEC, (void (*)(void))sub_1DC4E4B34);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v20, v21, v22);
  return a1;
}

uint64_t assignWithTake for ANFComponentExposureEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1DC4B66A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 40))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1DC4B4B50(0, &qword_1EDB0E7C8, (void (*)(void))sub_1DC4E4AEC, (void (*)(void))sub_1DC4E4B34);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 40))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 40))(v20, v21, v22);
  return a1;
}

uint64_t getEnumTagSinglePayload for ANFComponentExposureEvent()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC5578A0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  sub_1DC4B6600();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    sub_1DC4B66A4();
    v12 = *(_QWORD *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
    {
      v8 = v11;
      v13 = a3[5];
    }
    else
    {
      sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
      v12 = *(_QWORD *)(v14 - 8);
      if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
      {
        v8 = v14;
        v13 = a3[6];
      }
      else
      {
        sub_1DC4B4B50(0, &qword_1EDB0E7C8, (void (*)(void))sub_1DC4E4AEC, (void (*)(void))sub_1DC4E4B34);
        v12 = *(_QWORD *)(v15 - 8);
        if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
        {
          v8 = v15;
          v13 = a3[7];
        }
        else
        {
          sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
          v8 = v16;
          v12 = *(_QWORD *)(v16 - 8);
          v13 = a3[8];
        }
      }
    }
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t storeEnumTagSinglePayload for ANFComponentExposureEvent()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC5579EC(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  sub_1DC4B6600();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    sub_1DC4B66A4();
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = a4[5];
    }
    else
    {
      sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
      v14 = *(_QWORD *)(v16 - 8);
      if (*(_DWORD *)(v14 + 84) == a3)
      {
        v10 = v16;
        v15 = a4[6];
      }
      else
      {
        sub_1DC4B4B50(0, &qword_1EDB0E7C8, (void (*)(void))sub_1DC4E4AEC, (void (*)(void))sub_1DC4E4B34);
        v14 = *(_QWORD *)(v17 - 8);
        if (*(_DWORD *)(v14 + 84) == a3)
        {
          v10 = v17;
          v15 = a4[7];
        }
        else
        {
          sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
          v10 = v18;
          v14 = *(_QWORD *)(v18 - 8);
          v15 = a4[8];
        }
      }
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_1DC557B34()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;

  sub_1DC4B6600();
  if (v0 <= 0x3F)
  {
    sub_1DC4B66A4();
    if (v1 <= 0x3F)
    {
      sub_1DC4B4B50(319, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
      if (v2 <= 0x3F)
      {
        sub_1DC4B4B50(319, &qword_1EDB0E7C8, (void (*)(void))sub_1DC4E4AEC, (void (*)(void))sub_1DC4E4B34);
        if (v3 <= 0x3F)
        {
          sub_1DC4B4B50(319, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
          if (v4 <= 0x3F)
            swift_initStructMetadata();
        }
      }
    }
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for ANFComponentExposureEvent.Model(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v26 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v26 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1DC62ABA8();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_1DC62ABC0();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = a3[6];
    v13 = a3[7];
    v14 = (char *)a1 + v12;
    v15 = (char *)a2 + v12;
    v16 = *((_QWORD *)v15 + 1);
    *(_QWORD *)v14 = *(_QWORD *)v15;
    *((_QWORD *)v14 + 1) = v16;
    v17 = *((_QWORD *)v15 + 3);
    *((_QWORD *)v14 + 2) = *((_QWORD *)v15 + 2);
    *((_QWORD *)v14 + 3) = v17;
    v14[32] = v15[32];
    *((_QWORD *)v14 + 5) = *((_QWORD *)v15 + 5);
    v14[48] = v15[48];
    *((_QWORD *)v14 + 7) = *((_QWORD *)v15 + 7);
    *((_DWORD *)v14 + 16) = *((_DWORD *)v15 + 16);
    v18 = (uint64_t *)((char *)a1 + v13);
    v19 = (uint64_t *)((char *)a2 + v13);
    v20 = v19[1];
    *v18 = *v19;
    v18[1] = v20;
    v21 = a3[8];
    v22 = (char *)a1 + v21;
    v23 = (char *)a2 + v21;
    v24 = *((_QWORD *)v23 + 1);
    *(_QWORD *)v22 = *(_QWORD *)v23;
    *((_QWORD *)v22 + 1) = v24;
    v25 = *((_QWORD *)v23 + 3);
    *((_QWORD *)v22 + 2) = *((_QWORD *)v23 + 2);
    *((_QWORD *)v22 + 3) = v25;
    v22[32] = v23[32];
    v22[33] = v23[33];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for ANFComponentExposureEvent.Model(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + *(int *)(a2 + 20);
  v6 = sub_1DC62ABC0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ANFComponentExposureEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v6 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1DC62ABC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = a3[6];
  v12 = a3[7];
  v13 = a1 + v11;
  v14 = a2 + v11;
  v15 = *(_QWORD *)(v14 + 8);
  *(_QWORD *)v13 = *(_QWORD *)v14;
  *(_QWORD *)(v13 + 8) = v15;
  v16 = *(_QWORD *)(v14 + 24);
  *(_QWORD *)(v13 + 16) = *(_QWORD *)(v14 + 16);
  *(_QWORD *)(v13 + 24) = v16;
  *(_BYTE *)(v13 + 32) = *(_BYTE *)(v14 + 32);
  *(_QWORD *)(v13 + 40) = *(_QWORD *)(v14 + 40);
  *(_BYTE *)(v13 + 48) = *(_BYTE *)(v14 + 48);
  *(_QWORD *)(v13 + 56) = *(_QWORD *)(v14 + 56);
  *(_DWORD *)(v13 + 64) = *(_DWORD *)(v14 + 64);
  v17 = (_QWORD *)(a1 + v12);
  v18 = (_QWORD *)(a2 + v12);
  v19 = v18[1];
  *v17 = *v18;
  v17[1] = v19;
  v20 = a3[8];
  v21 = a1 + v20;
  v22 = a2 + v20;
  v23 = *(_QWORD *)(v22 + 8);
  *(_QWORD *)v21 = *(_QWORD *)v22;
  *(_QWORD *)(v21 + 8) = v23;
  v24 = *(_QWORD *)(v22 + 24);
  *(_QWORD *)(v21 + 16) = *(_QWORD *)(v22 + 16);
  *(_QWORD *)(v21 + 24) = v24;
  *(_BYTE *)(v21 + 32) = *(_BYTE *)(v22 + 32);
  *(_BYTE *)(v21 + 33) = *(_BYTE *)(v22 + 33);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ANFComponentExposureEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v6 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1DC62ABC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  *(_QWORD *)v12 = *(_QWORD *)(a2 + v11);
  *(_QWORD *)(v12 + 8) = *(_QWORD *)(a2 + v11 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v12 + 16) = *(_QWORD *)(v13 + 16);
  *(_QWORD *)(v12 + 24) = *(_QWORD *)(v13 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v12 + 32) = *(_BYTE *)(v13 + 32);
  v14 = *(_QWORD *)(v13 + 40);
  *(_BYTE *)(v12 + 48) = *(_BYTE *)(v13 + 48);
  *(_QWORD *)(v12 + 40) = v14;
  *(_QWORD *)(v12 + 56) = *(_QWORD *)(v13 + 56);
  *(_BYTE *)(v12 + 64) = *(_BYTE *)(v13 + 64);
  *(_BYTE *)(v12 + 65) = *(_BYTE *)(v13 + 65);
  *(_BYTE *)(v12 + 66) = *(_BYTE *)(v13 + 66);
  *(_BYTE *)(v12 + 67) = *(_BYTE *)(v13 + 67);
  v15 = a3[7];
  v16 = (_QWORD *)(a1 + v15);
  v17 = (_QWORD *)(a2 + v15);
  *v16 = *v17;
  v16[1] = v17[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v18 = a3[8];
  v19 = a1 + v18;
  v20 = a2 + v18;
  *(_QWORD *)v19 = *(_QWORD *)(a2 + v18);
  *(_QWORD *)(v19 + 8) = *(_QWORD *)(a2 + v18 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v19 + 16) = *(_QWORD *)(v20 + 16);
  *(_QWORD *)(v19 + 24) = *(_QWORD *)(v20 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v19 + 32) = *(_BYTE *)(v20 + 32);
  *(_BYTE *)(v19 + 33) = *(_BYTE *)(v20 + 33);
  return a1;
}

uint64_t initializeWithTake for ANFComponentExposureEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;

  v6 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1DC62ABC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[6];
  v12 = a3[7];
  v13 = a1 + v11;
  v14 = a2 + v11;
  *(_DWORD *)(v13 + 64) = *(_DWORD *)(v14 + 64);
  v15 = *(_OWORD *)(v14 + 48);
  *(_OWORD *)(v13 + 32) = *(_OWORD *)(v14 + 32);
  *(_OWORD *)(v13 + 48) = v15;
  v16 = *(_OWORD *)(v14 + 16);
  *(_OWORD *)v13 = *(_OWORD *)v14;
  *(_OWORD *)(v13 + 16) = v16;
  *(_OWORD *)(a1 + v12) = *(_OWORD *)(a2 + v12);
  v17 = a3[8];
  v18 = a1 + v17;
  v19 = a2 + v17;
  *(_WORD *)(v18 + 32) = *(_WORD *)(v19 + 32);
  v20 = *(_OWORD *)(v19 + 16);
  *(_OWORD *)v18 = *(_OWORD *)v19;
  *(_OWORD *)(v18 + 16) = v20;
  return a1;
}

uint64_t assignWithTake for ANFComponentExposureEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v6 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1DC62ABC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  v14 = *(_QWORD *)(a2 + v11 + 8);
  *(_QWORD *)v12 = *(_QWORD *)(a2 + v11);
  *(_QWORD *)(v12 + 8) = v14;
  swift_bridgeObjectRelease();
  v15 = *(_QWORD *)(v13 + 24);
  *(_QWORD *)(v12 + 16) = *(_QWORD *)(v13 + 16);
  *(_QWORD *)(v12 + 24) = v15;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v12 + 32) = *(_BYTE *)(v13 + 32);
  *(_QWORD *)(v12 + 40) = *(_QWORD *)(v13 + 40);
  *(_BYTE *)(v12 + 48) = *(_BYTE *)(v13 + 48);
  *(_QWORD *)(v12 + 56) = *(_QWORD *)(v13 + 56);
  *(_BYTE *)(v12 + 64) = *(_BYTE *)(v13 + 64);
  *(_BYTE *)(v12 + 65) = *(_BYTE *)(v13 + 65);
  *(_BYTE *)(v12 + 66) = *(_BYTE *)(v13 + 66);
  *(_BYTE *)(v12 + 67) = *(_BYTE *)(v13 + 67);
  v16 = a3[7];
  v17 = (_QWORD *)(a1 + v16);
  v18 = (uint64_t *)(a2 + v16);
  v20 = *v18;
  v19 = v18[1];
  *v17 = v20;
  v17[1] = v19;
  swift_bridgeObjectRelease();
  v21 = a3[8];
  v22 = a1 + v21;
  v23 = a2 + v21;
  v24 = *(_QWORD *)(v23 + 8);
  *(_QWORD *)v22 = *(_QWORD *)v23;
  *(_QWORD *)(v22 + 8) = v24;
  swift_bridgeObjectRelease();
  v25 = *(_QWORD *)(v23 + 24);
  *(_QWORD *)(v22 + 16) = *(_QWORD *)(v23 + 16);
  *(_QWORD *)(v22 + 24) = v25;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v22 + 32) = *(_BYTE *)(v23 + 32);
  *(_BYTE *)(v22 + 33) = *(_BYTE *)(v23 + 33);
  return a1;
}

uint64_t getEnumTagSinglePayload for ANFComponentExposureEvent.Model()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC558344(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v14;

  v6 = sub_1DC62ABA8();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  v11 = sub_1DC62ABC0();
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  v14 = *(_QWORD *)(a1 + *(int *)(a3 + 24) + 8);
  if (v14 >= 0xFFFFFFFF)
    LODWORD(v14) = -1;
  return (v14 + 1);
}

uint64_t storeEnumTagSinglePayload for ANFComponentExposureEvent.Model()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC5583FC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t result;
  uint64_t v14;

  v8 = sub_1DC62ABA8();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
    return v11(v12, a2, a2, v10);
  }
  result = sub_1DC62ABC0();
  v14 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = result;
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    return v11(v12, a2, a2, v10);
  }
  *(_QWORD *)(a1 + *(int *)(a4 + 24) + 8) = (a2 - 1);
  return result;
}

uint64_t sub_1DC5584A4()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_1DC62ABA8();
  if (v1 <= 0x3F)
  {
    result = sub_1DC62ABC0();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for ANFComponentExposureEvent.Model.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1DC558590 + 4 * byte_1DC638EAA[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1DC5585C4 + 4 * byte_1DC638EA5[v4]))();
}

uint64_t sub_1DC5585C4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC5585CC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DC5585D4);
  return result;
}

uint64_t sub_1DC5585E0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DC5585E8);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1DC5585EC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC5585F4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ANFComponentExposureEvent.Model.CodingKeys()
{
  return &type metadata for ANFComponentExposureEvent.Model.CodingKeys;
}

unint64_t sub_1DC558614()
{
  unint64_t result;

  result = qword_1F036C720;
  if (!qword_1F036C720)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC639094, &type metadata for ANFComponentExposureEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036C720);
  }
  return result;
}

unint64_t sub_1DC55865C()
{
  unint64_t result;

  result = qword_1F036C728;
  if (!qword_1F036C728)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC639004, &type metadata for ANFComponentExposureEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036C728);
  }
  return result;
}

unint64_t sub_1DC5586A4()
{
  unint64_t result;

  result = qword_1F036C730;
  if (!qword_1F036C730)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC63902C, &type metadata for ANFComponentExposureEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036C730);
  }
  return result;
}

uint64_t sub_1DC5586E8(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x746144746E657665 && a2 == 0xE900000000000061;
  if (v2 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x74614464656D6974 && a2 == 0xE900000000000061 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x697472417377656ELL && a2 == 0xEF61746144656C63 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001DC64C770 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x446C656E6E616863 && a2 == 0xEB00000000617461)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    v6 = sub_1DC62B520();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 4;
    else
      return 5;
  }
}

StocksAnalytics::InterfaceOrientation_optional __swiftcall InterfaceOrientation.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  StocksAnalytics::InterfaceOrientation_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1DC62B3DC();
  result.value = swift_bridgeObjectRelease();
  v5 = 5;
  if (v3 < 5)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t InterfaceOrientation.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1DC5589D8 + 4 * byte_1DC639110[*v0]))(0x6E776F6E6B6E75, 0xE700000000000000);
}

uint64_t sub_1DC5589D8()
{
  return 0x7469617274726F70;
}

unint64_t sub_1DC5589F0()
{
  return 0xD000000000000012;
}

uint64_t sub_1DC558A0C()
{
  return 0x70616373646E616CLL;
}

void sub_1DC558A44(char *a1)
{
  sub_1DC543BDC(*a1);
}

unint64_t sub_1DC558A54()
{
  unint64_t result;

  result = qword_1F036C738;
  if (!qword_1F036C738)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for InterfaceOrientation, &type metadata for InterfaceOrientation);
    atomic_store(result, (unint64_t *)&qword_1F036C738);
  }
  return result;
}

void sub_1DC558A98()
{
  char *v0;

  sub_1DC601F94(*v0);
}

void sub_1DC558AA0()
{
  __asm { BR              X10 }
}

uint64_t sub_1DC558ADC()
{
  sub_1DC62B10C();
  return swift_bridgeObjectRelease();
}

void sub_1DC558B5C(uint64_t a1)
{
  char *v1;

  sub_1DC603714(a1, *v1);
}

StocksAnalytics::InterfaceOrientation_optional sub_1DC558B64(Swift::String *a1)
{
  return InterfaceOrientation.init(rawValue:)(*a1);
}

uint64_t sub_1DC558B70()
{
  sub_1DC4B6280();
  return sub_1DC62B13C();
}

uint64_t storeEnumTagSinglePayload for InterfaceOrientation(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1DC558C18 + 4 * byte_1DC639124[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1DC558C4C + 4 * byte_1DC63911F[v4]))();
}

uint64_t sub_1DC558C4C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC558C54(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DC558C5CLL);
  return result;
}

uint64_t sub_1DC558C68(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DC558C70);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1DC558C74(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC558C7C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for InterfaceOrientation()
{
  return &type metadata for InterfaceOrientation;
}

uint64_t sub_1DC558C98(uint64_t a1)
{
  return sub_1DC4BE784(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], qword_1F036C740, MEMORY[0x1E0CF8078]);
}

uint64_t static SearchExposureEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C2FE8(&qword_1F0369070, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1F036C740, a1);
}

uint64_t sub_1DC558CD8(uint64_t a1)
{
  return sub_1DC4BE784(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], qword_1F036C758, MEMORY[0x1E0CF8380]);
}

uint64_t static SearchExposureEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C2FE8(&qword_1F0369078, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1F036C758, a1);
}

uint64_t SearchExposureEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C37DC((uint64_t (*)(_QWORD))sub_1DC4B6600, a1);
}

uint64_t SearchExposureEvent.eventData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  sub_1DC4B6600();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*SearchExposureEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t SearchExposureEvent.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C382C(type metadata accessor for SearchExposureEvent, (uint64_t (*)(_QWORD))sub_1DC4B66A4, a1);
}

uint64_t type metadata accessor for SearchExposureEvent(uint64_t a1)
{
  return sub_1DC4B385C(a1, qword_1F036C7E0);
}

uint64_t SearchExposureEvent.timedData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SearchExposureEvent(0) + 20);
  sub_1DC4B66A4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*SearchExposureEvent.timedData.modify())()
{
  type metadata accessor for SearchExposureEvent(0);
  return nullsub_1;
}

uint64_t SearchExposureEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *MEMORY[0x1E0CF8128];
  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
  v4 = a1 + *(int *)(type metadata accessor for SearchExposureEvent(0) + 20);
  sub_1DC4B66A4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 104))(v4, v2, v5);
}

uint64_t SearchExposureEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C37DC((uint64_t (*)(_QWORD))MEMORY[0x1E0CF8670], a1);
}

uint64_t SearchExposureEvent.Model.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C382C(type metadata accessor for SearchExposureEvent.Model, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF86C0], a1);
}

uint64_t type metadata accessor for SearchExposureEvent.Model(uint64_t a1)
{
  return sub_1DC4B385C(a1, qword_1F036C870);
}

uint64_t SearchExposureEvent.Model.init(eventData:timedData:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a3, a1, v6);
  v7 = a3 + *(int *)(type metadata accessor for SearchExposureEvent.Model(0) + 20);
  v8 = sub_1DC62ABC0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(v7, a2, v8);
}

uint64_t sub_1DC558F24()
{
  _BYTE *v0;

  if (*v0)
    return 0x74614464656D6974;
  else
    return 0x746144746E657665;
}

uint64_t sub_1DC558F5C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1DC559E38(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DC558F80()
{
  sub_1DC55915C();
  return sub_1DC62B604();
}

uint64_t sub_1DC558FA8()
{
  sub_1DC55915C();
  return sub_1DC62B610();
}

uint64_t SearchExposureEvent.Model.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  _BYTE v9[16];

  sub_1DC55949C(0, &qword_1F036C770, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = &v9[-v6];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC55915C();
  sub_1DC62B5F8();
  v9[15] = 0;
  sub_1DC62ABA8();
  sub_1DC4B6748(&qword_1EDB0E8A8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF8670], MEMORY[0x1E0CF8680]);
  sub_1DC62B4E4();
  if (!v1)
  {
    type metadata accessor for SearchExposureEvent.Model(0);
    v9[14] = 1;
    sub_1DC62ABC0();
    sub_1DC4B6748(&qword_1EDB0E8B8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF86C0], MEMORY[0x1E0CF86D0]);
    sub_1DC62B4E4();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_1DC55915C()
{
  unint64_t result;

  result = qword_1F036C778;
  if (!qword_1F036C778)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC6393F0, &type metadata for SearchExposureEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036C778);
  }
  return result;
}

uint64_t SearchExposureEvent.Model.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  char v31;

  v23 = a2;
  v26 = sub_1DC62ABC0();
  v22 = *(_QWORD *)(v26 - 8);
  MEMORY[0x1E0C80A78](v26);
  v25 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = sub_1DC62ABA8();
  v24 = *(_QWORD *)(v28 - 8);
  MEMORY[0x1E0C80A78](v28);
  v27 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC55949C(0, &qword_1F036C780, MEMORY[0x1E0DED048]);
  v29 = v6;
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v18 - v8;
  v10 = type metadata accessor for SearchExposureEvent.Model(0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC55915C();
  sub_1DC62B5E0();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v19 = v10;
  v20 = a1;
  v21 = v7;
  v14 = v24;
  v13 = v25;
  v15 = v26;
  v31 = 0;
  sub_1DC4B6748(&qword_1EDB0E278, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF8670], MEMORY[0x1E0CF8688]);
  v16 = v27;
  sub_1DC62B454();
  (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v12, v16, v28);
  v30 = 1;
  sub_1DC4B6748(&qword_1EDB0E8C0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF86C0], MEMORY[0x1E0CF86D8]);
  sub_1DC62B454();
  (*(void (**)(char *, uint64_t))(v21 + 8))(v9, v29);
  (*(void (**)(char *, char *, uint64_t))(v22 + 32))(&v12[*(int *)(v19 + 20)], v13, v15);
  sub_1DC5594F8((uint64_t)v12, v23);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
  return sub_1DC55953C((uint64_t)v12);
}

void sub_1DC55949C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1DC55915C();
    v7 = a3(a1, &type metadata for SearchExposureEvent.Model.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1DC5594F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SearchExposureEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DC55953C(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for SearchExposureEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1DC559578@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return SearchExposureEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_1DC55958C(_QWORD *a1)
{
  return SearchExposureEvent.Model.encode(to:)(a1);
}

uint64_t sub_1DC5595A0@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4B2C68(&qword_1F0369070, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1F036C740, a1);
}

uint64_t sub_1DC5595C4@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4B2C68(&qword_1F0369078, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1F036C758, a1);
}

uint64_t sub_1DC5595E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *MEMORY[0x1E0CF8128];
  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 104))(a2, v4, v5);
  v6 = a2 + *(int *)(a1 + 20);
  sub_1DC4B66A4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 104))(v6, v4, v7);
}

uint64_t *initializeBufferWithCopyOfBuffer for SearchExposureEvent(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  return sub_1DC559740(a1, a2, a3, (uint64_t (*)(_QWORD))sub_1DC4B6600, (uint64_t (*)(_QWORD))sub_1DC4B66A4);
}

uint64_t destroy for SearchExposureEvent(uint64_t a1, uint64_t a2)
{
  return sub_1DC559800(a1, a2, (uint64_t (*)(_QWORD))sub_1DC4B6600, (uint64_t (*)(_QWORD))sub_1DC4B66A4);
}

uint64_t initializeWithCopy for SearchExposureEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1DC55987C(a1, a2, a3, (uint64_t (*)(_QWORD))sub_1DC4B6600, (uint64_t (*)(_QWORD))sub_1DC4B66A4);
}

uint64_t assignWithCopy for SearchExposureEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1DC559910(a1, a2, a3, (uint64_t (*)(_QWORD))sub_1DC4B6600, (uint64_t (*)(_QWORD))sub_1DC4B66A4);
}

uint64_t initializeWithTake for SearchExposureEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1DC5599A4(a1, a2, a3, (uint64_t (*)(_QWORD))sub_1DC4B6600, (uint64_t (*)(_QWORD))sub_1DC4B66A4);
}

uint64_t assignWithTake for SearchExposureEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1DC559A38(a1, a2, a3, (uint64_t (*)(_QWORD))sub_1DC4B6600, (uint64_t (*)(_QWORD))sub_1DC4B66A4);
}

uint64_t getEnumTagSinglePayload for SearchExposureEvent()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC5596E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return __swift_get_extra_inhabitant_indexTm_0(a1, a2, a3, (uint64_t (*)(_QWORD))sub_1DC4B6600, (uint64_t (*)(_QWORD))sub_1DC4B66A4);
}

uint64_t storeEnumTagSinglePayload for SearchExposureEvent()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC559704(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  return __swift_store_extra_inhabitant_indexTm_0(a1, a2, a3, a4, (uint64_t (*)(_QWORD))sub_1DC4B6600, (uint64_t (*)(_QWORD))sub_1DC4B66A4);
}

uint64_t sub_1DC559718(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1DC559C0C(a1, a2, a3, (uint64_t (*)(uint64_t))sub_1DC4B6600, (uint64_t (*)(uint64_t))sub_1DC4B66A4);
}

uint64_t *initializeBufferWithCopyOfBuffer for SearchExposureEvent.Model(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  return sub_1DC559740(a1, a2, a3, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8670], (uint64_t (*)(_QWORD))MEMORY[0x1E0CF86C0]);
}

uint64_t *sub_1DC559740(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t (*a4)(_QWORD), uint64_t (*a5)(_QWORD))
{
  int v7;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;

  v7 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v7 & 0x20000) != 0)
  {
    v15 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v15 + ((v7 + 16) & ~(unint64_t)v7));
    swift_retain();
  }
  else
  {
    v10 = a4(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(a1, a2, v10);
    v11 = *(int *)(a3 + 20);
    v12 = (char *)a1 + v11;
    v13 = (char *)a2 + v11;
    v14 = a5(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
  }
  return a1;
}

uint64_t destroy for SearchExposureEvent.Model(uint64_t a1, uint64_t a2)
{
  return sub_1DC559800(a1, a2, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8670], (uint64_t (*)(_QWORD))MEMORY[0x1E0CF86C0]);
}

uint64_t sub_1DC559800(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD), uint64_t (*a4)(_QWORD))
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v7 = a3(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(a1, v7);
  v8 = a1 + *(int *)(a2 + 20);
  v9 = a4(0);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
}

uint64_t initializeWithCopy for SearchExposureEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1DC55987C(a1, a2, a3, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8670], (uint64_t (*)(_QWORD))MEMORY[0x1E0CF86C0]);
}

uint64_t sub_1DC55987C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD), uint64_t (*a5)(_QWORD))
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v9 = a4(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(a1, a2, v9);
  v10 = *(int *)(a3 + 20);
  v11 = a1 + v10;
  v12 = a2 + v10;
  v13 = a5(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v11, v12, v13);
  return a1;
}

uint64_t assignWithCopy for SearchExposureEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1DC559910(a1, a2, a3, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8670], (uint64_t (*)(_QWORD))MEMORY[0x1E0CF86C0]);
}

uint64_t sub_1DC559910(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD), uint64_t (*a5)(_QWORD))
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v9 = a4(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(a1, a2, v9);
  v10 = *(int *)(a3 + 20);
  v11 = a1 + v10;
  v12 = a2 + v10;
  v13 = a5(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 24))(v11, v12, v13);
  return a1;
}

uint64_t initializeWithTake for SearchExposureEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1DC5599A4(a1, a2, a3, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8670], (uint64_t (*)(_QWORD))MEMORY[0x1E0CF86C0]);
}

uint64_t sub_1DC5599A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD), uint64_t (*a5)(_QWORD))
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v9 = a4(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(a1, a2, v9);
  v10 = *(int *)(a3 + 20);
  v11 = a1 + v10;
  v12 = a2 + v10;
  v13 = a5(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v11, v12, v13);
  return a1;
}

uint64_t assignWithTake for SearchExposureEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1DC559A38(a1, a2, a3, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8670], (uint64_t (*)(_QWORD))MEMORY[0x1E0CF86C0]);
}

uint64_t sub_1DC559A38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD), uint64_t (*a5)(_QWORD))
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v9 = a4(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 40))(a1, a2, v9);
  v10 = *(int *)(a3 + 20);
  v11 = a1 + v10;
  v12 = a2 + v10;
  v13 = a5(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 40))(v11, v12, v13);
  return a1;
}

uint64_t getEnumTagSinglePayload for SearchExposureEvent.Model()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC559AC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return __swift_get_extra_inhabitant_indexTm_0(a1, a2, a3, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8670], (uint64_t (*)(_QWORD))MEMORY[0x1E0CF86C0]);
}

uint64_t __swift_get_extra_inhabitant_indexTm_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD), uint64_t (*a5)(_QWORD))
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(uint64_t, uint64_t, uint64_t);
  uint64_t v13;

  v9 = a4(0);
  v10 = *(_QWORD *)(v9 - 8);
  if (*(_DWORD *)(v10 + 84) == (_DWORD)a2)
  {
    v11 = v9;
    v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
    v13 = a1;
  }
  else
  {
    v11 = a5(0);
    v13 = a1 + *(int *)(a3 + 20);
    v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 48);
  }
  return v12(v13, a2, v11);
}

uint64_t storeEnumTagSinglePayload for SearchExposureEvent.Model()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC559B5C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  return __swift_store_extra_inhabitant_indexTm_0(a1, a2, a3, a4, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8670], (uint64_t (*)(_QWORD))MEMORY[0x1E0CF86C0]);
}

uint64_t __swift_store_extra_inhabitant_indexTm_0(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t (*a5)(_QWORD), uint64_t (*a6)(_QWORD))
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v15;

  v11 = a5(0);
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a3)
  {
    v13 = v11;
    v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v12 + 56);
    v15 = a1;
  }
  else
  {
    v13 = a6(0);
    v15 = a1 + *(int *)(a4 + 20);
    v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56);
  }
  return v14(v15, a2, a2, v13);
}

uint64_t sub_1DC559BF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1DC559C0C(a1, a2, a3, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF8670], (uint64_t (*)(uint64_t))MEMORY[0x1E0CF86C0]);
}

uint64_t sub_1DC559C0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t), uint64_t (*a5)(uint64_t))
{
  uint64_t result;
  unint64_t v7;
  unint64_t v8;

  result = a4(319);
  if (v7 <= 0x3F)
  {
    result = a5(319);
    if (v8 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for SearchExposureEvent.Model.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1DC559CE0 + 4 * byte_1DC639255[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1DC559D14 + 4 * byte_1DC639250[v4]))();
}

uint64_t sub_1DC559D14(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC559D1C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DC559D24);
  return result;
}

uint64_t sub_1DC559D30(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DC559D38);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1DC559D3C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC559D44(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SearchExposureEvent.Model.CodingKeys()
{
  return &type metadata for SearchExposureEvent.Model.CodingKeys;
}

unint64_t sub_1DC559D64()
{
  unint64_t result;

  result = qword_1F036C8A8;
  if (!qword_1F036C8A8)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC6393C8, &type metadata for SearchExposureEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036C8A8);
  }
  return result;
}

unint64_t sub_1DC559DAC()
{
  unint64_t result;

  result = qword_1F036C8B0;
  if (!qword_1F036C8B0)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC639338, &type metadata for SearchExposureEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036C8B0);
  }
  return result;
}

unint64_t sub_1DC559DF4()
{
  unint64_t result;

  result = qword_1F036C8B8;
  if (!qword_1F036C8B8)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC639360, &type metadata for SearchExposureEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036C8B8);
  }
  return result;
}

uint64_t sub_1DC559E38(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x746144746E657665 && a2 == 0xE900000000000061;
  if (v2 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x74614464656D6974 && a2 == 0xE900000000000061)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1DC62B520();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

float ScrollStartData.scrollYPosition.getter()
{
  uint64_t v0;

  return *(float *)v0;
}

void ScrollStartData.scrollYPosition.setter(float a1)
{
  float *v1;

  *v1 = a1;
}

uint64_t (*ScrollStartData.scrollYPosition.modify())()
{
  return nullsub_1;
}

StocksAnalytics::ScrollStartData __swiftcall ScrollStartData.init(scrollYPosition:)(StocksAnalytics::ScrollStartData scrollYPosition)
{
  StocksAnalytics::ScrollStartData *v1;

  v1->scrollYPosition = scrollYPosition.scrollYPosition;
  return scrollYPosition;
}

uint64_t sub_1DC559F68()
{
  return 0x50596C6C6F726373;
}

uint64_t sub_1DC559F8C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x50596C6C6F726373 && a2 == 0xEF6E6F697469736FLL)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_1DC62B520();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1DC55A044()
{
  sub_1DC55A184();
  return sub_1DC62B604();
}

uint64_t sub_1DC55A06C()
{
  sub_1DC55A184();
  return sub_1DC62B610();
}

uint64_t ScrollStartData.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  sub_1DC55A2F0(0, &qword_1F036C8C0, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC55A184();
  sub_1DC62B5F8();
  sub_1DC62B4D8();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_1DC55A184()
{
  unint64_t result;

  result = qword_1F036C8C8;
  if (!qword_1F036C8C8)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC6395B4, &type metadata for ScrollStartData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036C8C8);
  }
  return result;
}

uint64_t ScrollStartData.init(from:)@<X0>(_QWORD *a1@<X0>, _DWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int v10;
  int v11;
  uint64_t v13;

  sub_1DC55A2F0(0, &qword_1F036C8D0, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v13 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC55A184();
  sub_1DC62B5E0();
  if (!v2)
  {
    sub_1DC62B448();
    v11 = v10;
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *a2 = v11;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1DC55A2F0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1DC55A184();
    v7 = a3(a1, &type metadata for ScrollStartData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1DC55A354@<X0>(_QWORD *a1@<X0>, _DWORD *a2@<X8>)
{
  return ScrollStartData.init(from:)(a1, a2);
}

uint64_t sub_1DC55A368(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  sub_1DC55A2F0(0, &qword_1F036C8C0, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC55A184();
  sub_1DC62B5F8();
  sub_1DC62B4D8();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

ValueMetadata *type metadata accessor for ScrollStartData()
{
  return &type metadata for ScrollStartData;
}

uint64_t storeEnumTagSinglePayload for ScrollStartData.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1DC55A4A8 + 4 * byte_1DC639440[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1DC55A4C8 + 4 * byte_1DC639445[v4]))();
}

_BYTE *sub_1DC55A4A8(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1DC55A4C8(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1DC55A4D0(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1DC55A4D8(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1DC55A4E0(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1DC55A4E8(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for ScrollStartData.CodingKeys()
{
  return &type metadata for ScrollStartData.CodingKeys;
}

unint64_t sub_1DC55A508()
{
  unint64_t result;

  result = qword_1F036C8D8;
  if (!qword_1F036C8D8)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC63958C, &type metadata for ScrollStartData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036C8D8);
  }
  return result;
}

unint64_t sub_1DC55A550()
{
  unint64_t result;

  result = qword_1F036C8E0;
  if (!qword_1F036C8E0)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC6394FC, &type metadata for ScrollStartData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036C8E0);
  }
  return result;
}

unint64_t sub_1DC55A598()
{
  unint64_t result;

  result = qword_1F036C8E8;
  if (!qword_1F036C8E8)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC639524, &type metadata for ScrollStartData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036C8E8);
  }
  return result;
}

uint64_t VideoAdData.duration.getter()
{
  unsigned int *v0;

  return *v0;
}

uint64_t VideoAdData.duration.setter(uint64_t result)
{
  _DWORD *v1;

  *v1 = result;
  return result;
}

uint64_t (*VideoAdData.duration.modify())()
{
  return nullsub_1;
}

uint64_t VideoAdData.prerollUrl.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t VideoAdData.prerollUrl.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 8) = a1;
  *(_QWORD *)(v2 + 16) = a2;
  return result;
}

uint64_t (*VideoAdData.prerollUrl.modify())()
{
  return nullsub_1;
}

uint64_t VideoAdData.init(duration:prerollUrl:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  *(_DWORD *)a4 = result;
  *(_QWORD *)(a4 + 8) = a2;
  *(_QWORD *)(a4 + 16) = a3;
  return result;
}

uint64_t sub_1DC55A678()
{
  _BYTE *v0;

  if (*v0)
    return 0x556C6C6F72657270;
  else
    return 0x6E6F697461727564;
}

uint64_t sub_1DC55A6B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1DC55AD78(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DC55A6DC()
{
  sub_1DC55A85C();
  return sub_1DC62B604();
}

uint64_t sub_1DC55A704()
{
  sub_1DC55A85C();
  return sub_1DC62B610();
}

uint64_t VideoAdData.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  _QWORD v11[2];
  char v12;
  char v13;

  sub_1DC55A9F8(0, &qword_1F036C8F0, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)v11 - v7;
  v9 = *(_QWORD *)(v1 + 8);
  v11[0] = *(_QWORD *)(v1 + 16);
  v11[1] = v9;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC55A85C();
  sub_1DC62B5F8();
  v13 = 0;
  sub_1DC62B4F0();
  if (!v2)
  {
    v12 = 1;
    sub_1DC62B4B4();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_1DC55A85C()
{
  unint64_t result;

  result = qword_1F036C8F8;
  if (!qword_1F036C8F8)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC639778, &type metadata for VideoAdData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036C8F8);
  }
  return result;
}

uint64_t VideoAdData.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  char v17;

  sub_1DC55A9F8(0, &qword_1F036C900, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v15 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC55A85C();
  sub_1DC62B5E0();
  if (!v2)
  {
    v17 = 0;
    v10 = sub_1DC62B460();
    v16 = 1;
    v12 = sub_1DC62B424();
    v14 = v13;
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *(_DWORD *)a2 = v10;
    *(_QWORD *)(a2 + 8) = v12;
    *(_QWORD *)(a2 + 16) = v14;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1DC55A9F8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1DC55A85C();
    v7 = a3(a1, &type metadata for VideoAdData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1DC55AA58()
{
  unint64_t result;

  result = qword_1F036C908;
  if (!qword_1F036C908)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for VideoAdData, &type metadata for VideoAdData);
    atomic_store(result, (unint64_t *)&qword_1F036C908);
  }
  return result;
}

unint64_t sub_1DC55AAA0()
{
  unint64_t result;

  result = qword_1F036C910;
  if (!qword_1F036C910)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for VideoAdData, &type metadata for VideoAdData);
    atomic_store(result, (unint64_t *)&qword_1F036C910);
  }
  return result;
}

uint64_t sub_1DC55AAE4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return VideoAdData.init(from:)(a1, a2);
}

uint64_t sub_1DC55AAF8(_QWORD *a1)
{
  return VideoAdData.encode(to:)(a1);
}

uint64_t sub_1DC55AB10(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  v3 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for VideoAdData(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for VideoAdData(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  v3 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v3;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for VideoAdData()
{
  return &type metadata for VideoAdData;
}

uint64_t storeEnumTagSinglePayload for VideoAdData.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1DC55AC20 + 4 * byte_1DC639609[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1DC55AC54 + 4 * byte_1DC639604[v4]))();
}

uint64_t sub_1DC55AC54(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC55AC5C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DC55AC64);
  return result;
}

uint64_t sub_1DC55AC70(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DC55AC78);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1DC55AC7C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC55AC84(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for VideoAdData.CodingKeys()
{
  return &type metadata for VideoAdData.CodingKeys;
}

unint64_t sub_1DC55ACA4()
{
  unint64_t result;

  result = qword_1F036C918;
  if (!qword_1F036C918)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC639750, &type metadata for VideoAdData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036C918);
  }
  return result;
}

unint64_t sub_1DC55ACEC()
{
  unint64_t result;

  result = qword_1F036C920;
  if (!qword_1F036C920)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC6396C0, &type metadata for VideoAdData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036C920);
  }
  return result;
}

unint64_t sub_1DC55AD34()
{
  unint64_t result;

  result = qword_1F036C928;
  if (!qword_1F036C928)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC6396E8, &type metadata for VideoAdData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036C928);
  }
  return result;
}

uint64_t sub_1DC55AD78(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6E6F697461727564 && a2 == 0xE800000000000000;
  if (v2 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x556C6C6F72657270 && a2 == 0xEA00000000006C72)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1DC62B520();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1DC55AE74(uint64_t a1)
{
  return sub_1DC4BE784(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], qword_1F036C930, MEMORY[0x1E0CF8078]);
}

uint64_t static HeartbeatEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C2FE8(&qword_1F0369080, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1F036C930, a1);
}

uint64_t sub_1DC55AEB4(uint64_t a1)
{
  return sub_1DC4BE784(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], qword_1F036C948, MEMORY[0x1E0CF8378]);
}

uint64_t static HeartbeatEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C2FE8(&qword_1F0369088, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1F036C948, a1);
}

uint64_t HeartbeatEvent.heartbeatData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  sub_1DC55AF2C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

void sub_1DC55AF2C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1F036C960)
  {
    type metadata accessor for HeartbeatData();
    sub_1DC55AFC0(&qword_1F036C968, (uint64_t)&protocol conformance descriptor for HeartbeatData);
    sub_1DC55AFC0(&qword_1EDB11F60, (uint64_t)&protocol conformance descriptor for HeartbeatData);
    v0 = sub_1DC62A80C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1F036C960);
  }
}

uint64_t sub_1DC55AFC0(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for HeartbeatData();
    result = MEMORY[0x1DF0CC744](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t HeartbeatEvent.heartbeatData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  sub_1DC55AF2C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*HeartbeatEvent.heartbeatData.modify())()
{
  return nullsub_1;
}

uint64_t HeartbeatEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *MEMORY[0x1E0CF8128];
  sub_1DC55AF2C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
}

uint64_t HeartbeatEvent.Model.heartbeatData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1DC55B098(v1, a1);
}

uint64_t sub_1DC55B098(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for HeartbeatData();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t HeartbeatEvent.Model.init(heartbeatData:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1DC55B5D0(a1, a2, (uint64_t (*)(_QWORD))type metadata accessor for HeartbeatData);
}

uint64_t sub_1DC55B0FC()
{
  return 0x6165627472616568;
}

uint64_t sub_1DC55B120@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x6165627472616568 && a2 == 0xED00006174614474)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_1DC62B520();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1DC55B1D8()
{
  sub_1DC55B338();
  return sub_1DC62B604();
}

uint64_t sub_1DC55B200()
{
  sub_1DC55B338();
  return sub_1DC62B610();
}

uint64_t HeartbeatEvent.Model.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  sub_1DC55B560(0, &qword_1EDB11FF0, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC55B338();
  sub_1DC62B5F8();
  type metadata accessor for HeartbeatData();
  sub_1DC55AFC0(&qword_1EDB11F60, (uint64_t)&protocol conformance descriptor for HeartbeatData);
  sub_1DC62B4E4();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_1DC55B338()
{
  unint64_t result;

  result = qword_1EDB11F78;
  if (!qword_1EDB11F78)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC639944, &type metadata for HeartbeatEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB11F78);
  }
  return result;
}

uint64_t HeartbeatEvent.Model.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  char *v19;

  v17 = a2;
  v4 = type metadata accessor for HeartbeatData();
  MEMORY[0x1E0C80A78](v4);
  v19 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC55B560(0, &qword_1F036C970, MEMORY[0x1E0DED048]);
  v18 = v6;
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v17 - v8;
  v10 = type metadata accessor for HeartbeatEvent.Model(0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC55B338();
  sub_1DC62B5E0();
  if (!v2)
  {
    v13 = (uint64_t)v12;
    sub_1DC55AFC0(&qword_1F036C968, (uint64_t)&protocol conformance descriptor for HeartbeatData);
    v14 = (uint64_t)v19;
    v15 = v18;
    sub_1DC62B454();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v15);
    sub_1DC55B5D0(v14, v13, (uint64_t (*)(_QWORD))type metadata accessor for HeartbeatData);
    sub_1DC55B5D0(v13, v17, type metadata accessor for HeartbeatEvent.Model);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1DC55B560(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1DC55B338();
    v7 = a3(a1, &type metadata for HeartbeatEvent.Model.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t type metadata accessor for HeartbeatEvent.Model(uint64_t a1)
{
  return sub_1DC4B385C(a1, (uint64_t *)&unk_1EDB11F98);
}

uint64_t sub_1DC55B5D0(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1DC55B614@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return HeartbeatEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_1DC55B628(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  sub_1DC55B560(0, &qword_1EDB11FF0, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC55B338();
  sub_1DC62B5F8();
  type metadata accessor for HeartbeatData();
  sub_1DC55AFC0(&qword_1EDB11F60, (uint64_t)&protocol conformance descriptor for HeartbeatData);
  sub_1DC62B4E4();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_1DC55B738@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4B2C68(&qword_1F0369080, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1F036C930, a1);
}

uint64_t sub_1DC55B75C@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4B2C68(&qword_1F0369088, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1F036C948, a1);
}

uint64_t sub_1DC55B780@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *MEMORY[0x1E0CF8128];
  sub_1DC55AF2C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
}

uint64_t initializeBufferWithCopyOfBuffer for HeartbeatEvent(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1DC55AF2C();
  return (**(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8))(a1, a2, v4);
}

uint64_t destroy for HeartbeatEvent(uint64_t a1)
{
  uint64_t v2;

  sub_1DC55AF2C();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

uint64_t initializeWithCopy for HeartbeatEvent(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1DC55AF2C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t assignWithCopy for HeartbeatEvent(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1DC55AF2C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t initializeWithTake for HeartbeatEvent(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1DC55AF2C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t assignWithTake for HeartbeatEvent(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1DC55AF2C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for HeartbeatEvent()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC55B950(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return __swift_get_extra_inhabitant_indexTm(a1, a2, a3, (uint64_t (*)(_QWORD))sub_1DC55AF2C);
}

uint64_t storeEnumTagSinglePayload for HeartbeatEvent()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC55B968(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_store_extra_inhabitant_indexTm(a1, a2, a3, a4, (uint64_t (*)(_QWORD))sub_1DC55AF2C);
}

uint64_t type metadata accessor for HeartbeatEvent(uint64_t a1)
{
  return sub_1DC4B385C(a1, qword_1F036C9D0);
}

uint64_t sub_1DC55B988(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1DC4D64FC(a1, a2, a3, (uint64_t (*)(uint64_t))sub_1DC55AF2C);
}

uint64_t *initializeBufferWithCopyOfBuffer for HeartbeatEvent.Model(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  int v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;

  v4 = type metadata accessor for HeartbeatData();
  v5 = *(_DWORD *)(*(_QWORD *)(v4 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v25 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v25 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v6 = (int *)v4;
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = *(int *)(v4 + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_1DC62A1A0();
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    v13 = v6[6];
    v14 = (uint64_t *)((char *)a1 + v13);
    v15 = (uint64_t *)((char *)a2 + v13);
    v16 = v15[1];
    *v14 = *v15;
    v14[1] = v16;
    v17 = v6[7];
    v18 = (uint64_t *)((char *)a1 + v17);
    v19 = (uint64_t *)((char *)a2 + v17);
    v20 = v19[1];
    *v18 = *v19;
    v18[1] = v20;
    v21 = v6[8];
    v22 = (uint64_t *)((char *)a1 + v21);
    v23 = (uint64_t *)((char *)a2 + v21);
    v24 = v23[1];
    *v22 = *v23;
    v22[1] = v24;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for HeartbeatEvent.Model(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  swift_bridgeObjectRelease();
  v2 = a1 + *(int *)(type metadata accessor for HeartbeatData() + 20);
  v3 = sub_1DC62A1A0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for HeartbeatEvent.Model(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  int *v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = (int *)type metadata accessor for HeartbeatData();
  v6 = v5[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1DC62A1A0();
  v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
  swift_bridgeObjectRetain();
  v10(v7, v8, v9);
  v11 = v5[6];
  v12 = (_QWORD *)((char *)a1 + v11);
  v13 = (_QWORD *)((char *)a2 + v11);
  v14 = v13[1];
  *v12 = *v13;
  v12[1] = v14;
  v15 = v5[7];
  v16 = (_QWORD *)((char *)a1 + v15);
  v17 = (_QWORD *)((char *)a2 + v15);
  v18 = v17[1];
  *v16 = *v17;
  v16[1] = v18;
  v19 = v5[8];
  v20 = (_QWORD *)((char *)a1 + v19);
  v21 = (_QWORD *)((char *)a2 + v19);
  v22 = v21[1];
  *v20 = *v21;
  v20[1] = v22;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for HeartbeatEvent.Model(_QWORD *a1, _QWORD *a2)
{
  int *v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = (int *)type metadata accessor for HeartbeatData();
  v5 = v4[5];
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  v8 = sub_1DC62A1A0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 24))(v6, v7, v8);
  v9 = v4[6];
  v10 = (_QWORD *)((char *)a1 + v9);
  v11 = (_QWORD *)((char *)a2 + v9);
  *v10 = *v11;
  v10[1] = v11[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v12 = v4[7];
  v13 = (_QWORD *)((char *)a1 + v12);
  v14 = (_QWORD *)((char *)a2 + v12);
  *v13 = *v14;
  v13[1] = v14[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v15 = v4[8];
  v16 = (_QWORD *)((char *)a1 + v15);
  v17 = (_QWORD *)((char *)a2 + v15);
  *v16 = *v17;
  v16[1] = v17[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *initializeWithTake for HeartbeatEvent.Model(_OWORD *a1, _OWORD *a2)
{
  int *v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;

  *a1 = *a2;
  v4 = (int *)type metadata accessor for HeartbeatData();
  v5 = v4[5];
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  v8 = sub_1DC62A1A0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(v6, v7, v8);
  *(_OWORD *)((char *)a1 + v4[6]) = *(_OWORD *)((char *)a2 + v4[6]);
  *(_OWORD *)((char *)a1 + v4[7]) = *(_OWORD *)((char *)a2 + v4[7]);
  *(_OWORD *)((char *)a1 + v4[8]) = *(_OWORD *)((char *)a2 + v4[8]);
  return a1;
}

_QWORD *assignWithTake for HeartbeatEvent.Model(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  int *v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  v5 = (int *)type metadata accessor for HeartbeatData();
  v6 = v5[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1DC62A1A0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 40))(v7, v8, v9);
  v10 = v5[6];
  v11 = (_QWORD *)((char *)a1 + v10);
  v12 = (_QWORD *)((char *)a2 + v10);
  v14 = *v12;
  v13 = v12[1];
  *v11 = v14;
  v11[1] = v13;
  swift_bridgeObjectRelease();
  v15 = v5[7];
  v16 = (_QWORD *)((char *)a1 + v15);
  v17 = (_QWORD *)((char *)a2 + v15);
  v19 = *v17;
  v18 = v17[1];
  *v16 = v19;
  v16[1] = v18;
  swift_bridgeObjectRelease();
  v20 = v5[8];
  v21 = (_QWORD *)((char *)a1 + v20);
  v22 = (_QWORD *)((char *)a2 + v20);
  v24 = *v22;
  v23 = v22[1];
  *v21 = v24;
  v21[1] = v23;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for HeartbeatEvent.Model()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC55BE7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return __swift_get_extra_inhabitant_indexTm(a1, a2, a3, (uint64_t (*)(_QWORD))type metadata accessor for HeartbeatData);
}

uint64_t storeEnumTagSinglePayload for HeartbeatEvent.Model()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC55BE94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_store_extra_inhabitant_indexTm(a1, a2, a3, a4, (uint64_t (*)(_QWORD))type metadata accessor for HeartbeatData);
}

uint64_t sub_1DC55BEA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1DC4D64FC(a1, a2, a3, (uint64_t (*)(uint64_t))type metadata accessor for HeartbeatData);
}

uint64_t storeEnumTagSinglePayload for HeartbeatEvent.Model.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1DC55BEEC + 4 * byte_1DC6397C8[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1DC55BF0C + 4 * byte_1DC6397CD[v4]))();
}

_BYTE *sub_1DC55BEEC(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1DC55BF0C(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1DC55BF14(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1DC55BF1C(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1DC55BF24(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1DC55BF2C(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for HeartbeatEvent.Model.CodingKeys()
{
  return &type metadata for HeartbeatEvent.Model.CodingKeys;
}

unint64_t sub_1DC55BF4C()
{
  unint64_t result;

  result = qword_1F036CA30;
  if (!qword_1F036CA30)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC63991C, &type metadata for HeartbeatEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036CA30);
  }
  return result;
}

unint64_t sub_1DC55BF94()
{
  unint64_t result;

  result = qword_1EDB11F88;
  if (!qword_1EDB11F88)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC63988C, &type metadata for HeartbeatEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB11F88);
  }
  return result;
}

unint64_t sub_1DC55BFDC()
{
  unint64_t result;

  result = qword_1EDB11F80;
  if (!qword_1EDB11F80)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC6398B4, &type metadata for HeartbeatEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB11F80);
  }
  return result;
}

uint64_t sub_1DC55C020()
{
  uint64_t v0;
  uint64_t v1;

  v0 = sub_1DC62A788();
  __swift_allocate_value_buffer(v0, qword_1F036CA38);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1F036CA38);
  *(_QWORD *)v1 = 0x7364612E6D6F63;
  *(_QWORD *)(v1 + 8) = 0xE700000000000000;
  *(_QWORD *)(v1 + 16) = 3;
  *(_BYTE *)(v1 + 24) = 0;
  return (*(uint64_t (**)(void))(*(_QWORD *)(v0 - 8) + 104))();
}

uint64_t static VideoAdImpressionEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C2FE8(&qword_1F0369090, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1F036CA38, a1);
}

uint64_t sub_1DC55C0C0()
{
  uint64_t v0;
  uint64_t v1;

  v0 = sub_1DC62A998();
  __swift_allocate_value_buffer(v0, qword_1F036CA50);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1F036CA50);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v0 - 8) + 104))(v1, *MEMORY[0x1E0CF8378], v0);
}

uint64_t static VideoAdImpressionEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C2FE8(&qword_1F0369098, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1F036CA50, a1);
}

uint64_t VideoAdImpressionEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C37DC((uint64_t (*)(_QWORD))sub_1DC4B6600, a1);
}

uint64_t VideoAdImpressionEvent.eventData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  sub_1DC4B6600();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*VideoAdImpressionEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t VideoAdImpressionEvent.adUserData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for VideoAdImpressionEvent(0) + 20);
  sub_1DC4B4B50(0, &qword_1EDB0E250, (void (*)(void))sub_1DC4C06CC, (void (*)(void))sub_1DC4C0710);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t type metadata accessor for VideoAdImpressionEvent(uint64_t a1)
{
  return sub_1DC4B385C(a1, qword_1F036CAE0);
}

uint64_t VideoAdImpressionEvent.adUserData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for VideoAdImpressionEvent(0) + 20);
  sub_1DC4B4B50(0, &qword_1EDB0E250, (void (*)(void))sub_1DC4C06CC, (void (*)(void))sub_1DC4C0710);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*VideoAdImpressionEvent.adUserData.modify())()
{
  type metadata accessor for VideoAdImpressionEvent(0);
  return nullsub_1;
}

uint64_t VideoAdImpressionEvent.channelData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for VideoAdImpressionEvent(0) + 24);
  sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t VideoAdImpressionEvent.channelData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for VideoAdImpressionEvent(0) + 24);
  sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*VideoAdImpressionEvent.channelData.modify())()
{
  type metadata accessor for VideoAdImpressionEvent(0);
  return nullsub_1;
}

uint64_t VideoAdImpressionEvent.videoAdData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for VideoAdImpressionEvent(0) + 28);
  sub_1DC4B4B50(0, &qword_1F036CA68, (void (*)(void))sub_1DC55AA58, (void (*)(void))sub_1DC55AAA0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t VideoAdImpressionEvent.videoAdData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for VideoAdImpressionEvent(0) + 28);
  sub_1DC4B4B50(0, &qword_1F036CA68, (void (*)(void))sub_1DC55AA58, (void (*)(void))sub_1DC55AAA0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*VideoAdImpressionEvent.videoAdData.modify())()
{
  type metadata accessor for VideoAdImpressionEvent(0);
  return nullsub_1;
}

uint64_t VideoAdImpressionEvent.adPlacementData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for VideoAdImpressionEvent(0) + 32);
  sub_1DC4B4B50(0, &qword_1EDB0E7B0, (void (*)(void))sub_1DC4D6C30, (void (*)(void))sub_1DC4D6C74);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t VideoAdImpressionEvent.adPlacementData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for VideoAdImpressionEvent(0) + 32);
  sub_1DC4B4B50(0, &qword_1EDB0E7B0, (void (*)(void))sub_1DC4D6C30, (void (*)(void))sub_1DC4D6C74);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*VideoAdImpressionEvent.adPlacementData.modify())()
{
  type metadata accessor for VideoAdImpressionEvent(0);
  return nullsub_1;
}

uint64_t VideoAdImpressionEvent.adFeedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for VideoAdImpressionEvent(0) + 36);
  sub_1DC4B4B50(0, &qword_1EDB0E740, (void (*)(void))sub_1DC4C076C, (void (*)(void))sub_1DC4C07B0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t VideoAdImpressionEvent.adFeedData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for VideoAdImpressionEvent(0) + 36);
  sub_1DC4B4B50(0, &qword_1EDB0E740, (void (*)(void))sub_1DC4C076C, (void (*)(void))sub_1DC4C07B0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*VideoAdImpressionEvent.adFeedData.modify())()
{
  type metadata accessor for VideoAdImpressionEvent(0);
  return nullsub_1;
}

uint64_t VideoAdImpressionEvent.adGroupData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for VideoAdImpressionEvent(0) + 40);
  sub_1DC4B4B50(0, &qword_1EDB0E758, (void (*)(void))sub_1DC4D7328, (void (*)(void))sub_1DC4D736C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t VideoAdImpressionEvent.adGroupData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for VideoAdImpressionEvent(0) + 40);
  sub_1DC4B4B50(0, &qword_1EDB0E758, (void (*)(void))sub_1DC4D7328, (void (*)(void))sub_1DC4D736C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*VideoAdImpressionEvent.adGroupData.modify())()
{
  type metadata accessor for VideoAdImpressionEvent(0);
  return nullsub_1;
}

uint64_t VideoAdImpressionEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v2 = *MEMORY[0x1E0CF8128];
  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
  v4 = (int *)type metadata accessor for VideoAdImpressionEvent(0);
  v5 = a1 + v4[5];
  sub_1DC4B4B50(0, &qword_1EDB0E250, (void (*)(void))sub_1DC4C06CC, (void (*)(void))sub_1DC4C0710);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 104))(v5, v2, v6);
  v7 = a1 + v4[6];
  sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 104))(v7, v2, v8);
  v9 = a1 + v4[7];
  sub_1DC4B4B50(0, &qword_1F036CA68, (void (*)(void))sub_1DC55AA58, (void (*)(void))sub_1DC55AAA0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 104))(v9, v2, v10);
  v11 = a1 + v4[8];
  sub_1DC4B4B50(0, &qword_1EDB0E7B0, (void (*)(void))sub_1DC4D6C30, (void (*)(void))sub_1DC4D6C74);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 104))(v11, v2, v12);
  v13 = a1 + v4[9];
  v14 = *MEMORY[0x1E0CF8120];
  sub_1DC4B4B50(0, &qword_1EDB0E740, (void (*)(void))sub_1DC4C076C, (void (*)(void))sub_1DC4C07B0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 104))(v13, v14, v15);
  v16 = a1 + v4[10];
  sub_1DC4B4B50(0, &qword_1EDB0E758, (void (*)(void))sub_1DC4D7328, (void (*)(void))sub_1DC4D736C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 104))(v16, v14, v17);
}

uint64_t VideoAdImpressionEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C37DC((uint64_t (*)(_QWORD))MEMORY[0x1E0CF8670], a1);
}

uint64_t VideoAdImpressionEvent.Model.adUserData.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = (_QWORD *)(v1 + *(int *)(type metadata accessor for VideoAdImpressionEvent.Model(0) + 20));
  v4 = v3[1];
  *a1 = *v3;
  a1[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t type metadata accessor for VideoAdImpressionEvent.Model(uint64_t a1)
{
  return sub_1DC4B385C(a1, qword_1F036CB88);
}

uint64_t VideoAdImpressionEvent.Model.channelData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for VideoAdImpressionEvent.Model(0) + 24));
  v5 = *v3;
  v4 = v3[1];
  v6 = v3[2];
  v7 = v3[3];
  v8 = *((_BYTE *)v3 + 32);
  LOBYTE(v3) = *((_BYTE *)v3 + 33);
  *(_QWORD *)a1 = v5;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  *(_BYTE *)(a1 + 32) = v8;
  *(_BYTE *)(a1 + 33) = (_BYTE)v3;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t VideoAdImpressionEvent.Model.videoAdData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = v1 + *(int *)(type metadata accessor for VideoAdImpressionEvent.Model(0) + 28);
  v5 = *(_QWORD *)(v3 + 8);
  v4 = *(_QWORD *)(v3 + 16);
  *(_DWORD *)a1 = *(_DWORD *)v3;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v4;
  return swift_bridgeObjectRetain();
}

uint64_t VideoAdImpressionEvent.Model.adPlacementData.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = (_QWORD *)(v1 + *(int *)(type metadata accessor for VideoAdImpressionEvent.Model(0) + 32));
  v4 = v3[1];
  *a1 = *v3;
  a1[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t VideoAdImpressionEvent.Model.adFeedData.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for VideoAdImpressionEvent.Model(0);
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 36));
  return result;
}

uint64_t VideoAdImpressionEvent.Model.adGroupData.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for VideoAdImpressionEvent.Model(0);
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 40));
  return result;
}

__n128 VideoAdImpressionEvent.Model.init(eventData:adUserData:channelData:videoAdData:adPlacementData:adFeedData:adGroupData:)@<Q0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, __n128 *a3@<X2>, int *a4@<X3>, uint64_t *a5@<X4>, char *a6@<X5>, char *a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unsigned __int8 v14;
  unsigned __int8 v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  int *v19;
  _QWORD *v20;
  __n128 *v21;
  __n128 result;
  uint64_t v23;
  _QWORD *v24;
  __n128 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  char v30;

  v10 = *a2;
  v11 = a2[1];
  v25 = *a3;
  v12 = a3[1].n128_u64[0];
  v13 = a3[1].n128_u64[1];
  v14 = a3[2].n128_u8[0];
  v15 = a3[2].n128_u8[1];
  v16 = *a4;
  v17 = *((_QWORD *)a4 + 1);
  v28 = *a5;
  v26 = *((_QWORD *)a4 + 2);
  v27 = a5[1];
  v29 = *a6;
  v30 = *a7;
  v18 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(a8, a1, v18);
  v19 = (int *)type metadata accessor for VideoAdImpressionEvent.Model(0);
  v20 = (_QWORD *)(a8 + v19[5]);
  *v20 = v10;
  v20[1] = v11;
  v21 = (__n128 *)(a8 + v19[6]);
  result = v25;
  *v21 = v25;
  v21[1].n128_u64[0] = v12;
  v21[1].n128_u64[1] = v13;
  v21[2].n128_u8[0] = v14;
  v21[2].n128_u8[1] = v15;
  v23 = a8 + v19[7];
  *(_DWORD *)v23 = v16;
  *(_QWORD *)(v23 + 8) = v17;
  *(_QWORD *)(v23 + 16) = v26;
  v24 = (_QWORD *)(a8 + v19[8]);
  *v24 = v28;
  v24[1] = v27;
  *(_BYTE *)(a8 + v19[9]) = v29;
  *(_BYTE *)(a8 + v19[10]) = v30;
  return result;
}

uint64_t sub_1DC55CC14()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1DC55CC48 + 4 * byte_1DC6399A0[*v0]))(0x746144746E657665, 0xE900000000000061);
}

uint64_t sub_1DC55CC48()
{
  return 0x6144726573556461;
}

uint64_t sub_1DC55CCE0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1DC55F43C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DC55CD04()
{
  sub_1DC55D044();
  return sub_1DC62B604();
}

uint64_t sub_1DC55CD2C()
{
  sub_1DC55D044();
  return sub_1DC62B610();
}

uint64_t VideoAdImpressionEvent.Model.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int *v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  __int128 *v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  int *v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  __int128 v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  char v32;
  char v33;

  v3 = v1;
  sub_1DC55D580(0, &qword_1F036CA70, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v27 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC55D044();
  sub_1DC62B5F8();
  LOBYTE(v28) = 0;
  sub_1DC62ABA8();
  sub_1DC4B6788(&qword_1EDB0E8A8, MEMORY[0x1E0CF8680]);
  sub_1DC62B4E4();
  if (!v2)
  {
    v10 = (int *)type metadata accessor for VideoAdImpressionEvent.Model(0);
    v11 = (uint64_t *)(v3 + v10[5]);
    v13 = *v11;
    v12 = v11[1];
    *(_QWORD *)&v28 = v13;
    *((_QWORD *)&v28 + 1) = v12;
    v33 = 1;
    sub_1DC4C0710();
    sub_1DC62B4E4();
    v14 = (__int128 *)(v3 + v10[6]);
    v15 = *v14;
    v16 = *((_QWORD *)v14 + 2);
    v17 = *((_QWORD *)v14 + 3);
    v18 = *((_BYTE *)v14 + 32);
    LOBYTE(v14) = *((_BYTE *)v14 + 33);
    v28 = v15;
    v29 = v16;
    v30 = v17;
    v31 = v18;
    v32 = (char)v14;
    v33 = 2;
    sub_1DC4C8E84();
    sub_1DC62B4E4();
    v19 = (int *)(v3 + v10[7]);
    v20 = *v19;
    v22 = *((_QWORD *)v19 + 1);
    v21 = *((_QWORD *)v19 + 2);
    LODWORD(v28) = v20;
    *((_QWORD *)&v28 + 1) = v22;
    v29 = v21;
    v33 = 3;
    sub_1DC55AAA0();
    sub_1DC62B4E4();
    v23 = (uint64_t *)(v3 + v10[8]);
    v25 = *v23;
    v24 = v23[1];
    *(_QWORD *)&v28 = v25;
    *((_QWORD *)&v28 + 1) = v24;
    v33 = 4;
    sub_1DC4D6C74();
    sub_1DC62B4E4();
    LOBYTE(v28) = *(_BYTE *)(v3 + v10[9]);
    v33 = 5;
    sub_1DC4C07B0();
    sub_1DC62B490();
    LOBYTE(v28) = *(_BYTE *)(v3 + v10[10]);
    v33 = 6;
    sub_1DC4D736C();
    sub_1DC62B490();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1DC55D044()
{
  unint64_t result;

  result = qword_1F036CA78;
  if (!qword_1F036CA78)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC639C0C, &type metadata for VideoAdImpressionEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036CA78);
  }
  return result;
}

uint64_t VideoAdImpressionEvent.Model.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  char v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  char *v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  _QWORD *v35;
  __int128 v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  char v40;
  char v41;

  v30 = a2;
  v3 = sub_1DC62ABA8();
  v31 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v33 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC55D580(0, &qword_1F036CA80, MEMORY[0x1E0DED048]);
  v32 = v5;
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v29 - v7;
  v9 = (int *)type metadata accessor for VideoAdImpressionEvent.Model(0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC55D044();
  v34 = v8;
  v12 = (uint64_t)v35;
  sub_1DC62B5E0();
  if (v12)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v13 = v6;
  v14 = v31;
  v35 = a1;
  LOBYTE(v36) = 0;
  sub_1DC4B6788(&qword_1EDB0E278, MEMORY[0x1E0CF8688]);
  v15 = v32;
  sub_1DC62B454();
  (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v11, v33, v3);
  v41 = 1;
  sub_1DC4C06CC();
  sub_1DC62B454();
  v16 = *((_QWORD *)&v36 + 1);
  v17 = &v11[v9[5]];
  *(_QWORD *)v17 = v36;
  *((_QWORD *)v17 + 1) = v16;
  v41 = 2;
  sub_1DC4C8E40();
  sub_1DC62B454();
  v18 = v37;
  v19 = v38;
  v20 = v39;
  v21 = v40;
  v22 = &v11[v9[6]];
  *(_OWORD *)v22 = v36;
  *((_QWORD *)v22 + 2) = v18;
  *((_QWORD *)v22 + 3) = v19;
  v22[32] = v20;
  v22[33] = v21;
  v41 = 3;
  sub_1DC55AA58();
  sub_1DC62B454();
  v23 = *((_QWORD *)&v36 + 1);
  v24 = v37;
  v25 = &v11[v9[7]];
  *(_DWORD *)v25 = v36;
  *((_QWORD *)v25 + 1) = v23;
  *((_QWORD *)v25 + 2) = v24;
  v41 = 4;
  sub_1DC4D6C30();
  sub_1DC62B454();
  v26 = *((_QWORD *)&v36 + 1);
  v27 = &v11[v9[8]];
  *(_QWORD *)v27 = v36;
  *((_QWORD *)v27 + 1) = v26;
  v41 = 5;
  sub_1DC4C076C();
  sub_1DC62B400();
  v11[v9[9]] = v36;
  v41 = 6;
  sub_1DC4D7328();
  sub_1DC62B400();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v34, v15);
  v11[v9[10]] = v36;
  sub_1DC55D5DC((uint64_t)v11, v30);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v35);
  return sub_1DC55D620((uint64_t)v11);
}

void sub_1DC55D580(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1DC55D044();
    v7 = a3(a1, &type metadata for VideoAdImpressionEvent.Model.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1DC55D5DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for VideoAdImpressionEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DC55D620(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for VideoAdImpressionEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1DC55D65C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return VideoAdImpressionEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_1DC55D670(_QWORD *a1)
{
  return VideoAdImpressionEvent.Model.encode(to:)(a1);
}

uint64_t sub_1DC55D684@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4B2C68(&qword_1F0369090, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1F036CA38, a1);
}

uint64_t sub_1DC55D6A8@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4B2C68(&qword_1F0369098, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1F036CA50, a1);
}

uint64_t sub_1DC55D6CC@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v4 = *MEMORY[0x1E0CF8128];
  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 104))(a2, v4, v5);
  v6 = a2 + a1[5];
  sub_1DC4B4B50(0, &qword_1EDB0E250, (void (*)(void))sub_1DC4C06CC, (void (*)(void))sub_1DC4C0710);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 104))(v6, v4, v7);
  v8 = a2 + a1[6];
  sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 104))(v8, v4, v9);
  v10 = a2 + a1[7];
  sub_1DC4B4B50(0, &qword_1F036CA68, (void (*)(void))sub_1DC55AA58, (void (*)(void))sub_1DC55AAA0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 104))(v10, v4, v11);
  v12 = a2 + a1[8];
  sub_1DC4B4B50(0, &qword_1EDB0E7B0, (void (*)(void))sub_1DC4D6C30, (void (*)(void))sub_1DC4D6C74);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 104))(v12, v4, v13);
  v14 = a2 + a1[9];
  v15 = *MEMORY[0x1E0CF8120];
  sub_1DC4B4B50(0, &qword_1EDB0E740, (void (*)(void))sub_1DC4C076C, (void (*)(void))sub_1DC4C07B0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 104))(v14, v15, v16);
  v17 = a2 + a1[10];
  sub_1DC4B4B50(0, &qword_1EDB0E758, (void (*)(void))sub_1DC4D7328, (void (*)(void))sub_1DC4D736C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 104))(v17, v15, v18);
}

uint64_t *initializeBufferWithCopyOfBuffer for VideoAdImpressionEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v32 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v32 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_1DC4B6600();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    sub_1DC4B4B50(0, &qword_1EDB0E250, (void (*)(void))sub_1DC4C06CC, (void (*)(void))sub_1DC4C0710);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = a3[6];
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
    v16 = a3[7];
    v17 = (char *)a1 + v16;
    v18 = (char *)a2 + v16;
    sub_1DC4B4B50(0, &qword_1F036CA68, (void (*)(void))sub_1DC55AA58, (void (*)(void))sub_1DC55AAA0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
    v20 = a3[8];
    v21 = (char *)a1 + v20;
    v22 = (char *)a2 + v20;
    sub_1DC4B4B50(0, &qword_1EDB0E7B0, (void (*)(void))sub_1DC4D6C30, (void (*)(void))sub_1DC4D6C74);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v21, v22, v23);
    v24 = a3[9];
    v25 = (char *)a1 + v24;
    v26 = (char *)a2 + v24;
    sub_1DC4B4B50(0, &qword_1EDB0E740, (void (*)(void))sub_1DC4C076C, (void (*)(void))sub_1DC4C07B0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v25, v26, v27);
    v28 = a3[10];
    v29 = (char *)a1 + v28;
    v30 = (char *)a2 + v28;
    sub_1DC4B4B50(0, &qword_1EDB0E758, (void (*)(void))sub_1DC4D7328, (void (*)(void))sub_1DC4D736C);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 16))(v29, v30, v31);
  }
  return a1;
}

uint64_t destroy for VideoAdImpressionEvent(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + a2[5];
  sub_1DC4B4B50(0, &qword_1EDB0E250, (void (*)(void))sub_1DC4C06CC, (void (*)(void))sub_1DC4C0710);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = a1 + a2[6];
  sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  v9 = a1 + a2[7];
  sub_1DC4B4B50(0, &qword_1F036CA68, (void (*)(void))sub_1DC55AA58, (void (*)(void))sub_1DC55AAA0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  v11 = a1 + a2[8];
  sub_1DC4B4B50(0, &qword_1EDB0E7B0, (void (*)(void))sub_1DC4D6C30, (void (*)(void))sub_1DC4D6C74);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
  v13 = a1 + a2[9];
  sub_1DC4B4B50(0, &qword_1EDB0E740, (void (*)(void))sub_1DC4C076C, (void (*)(void))sub_1DC4C07B0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v13, v14);
  v15 = a1 + a2[10];
  sub_1DC4B4B50(0, &qword_1EDB0E758, (void (*)(void))sub_1DC4D7328, (void (*)(void))sub_1DC4D736C);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v15, v16);
}

uint64_t initializeWithCopy for VideoAdImpressionEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1DC4B4B50(0, &qword_1EDB0E250, (void (*)(void))sub_1DC4C06CC, (void (*)(void))sub_1DC4C0710);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1DC4B4B50(0, &qword_1F036CA68, (void (*)(void))sub_1DC55AA58, (void (*)(void))sub_1DC55AAA0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1DC4B4B50(0, &qword_1EDB0E7B0, (void (*)(void))sub_1DC4D6C30, (void (*)(void))sub_1DC4D6C74);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1DC4B4B50(0, &qword_1EDB0E740, (void (*)(void))sub_1DC4C076C, (void (*)(void))sub_1DC4C07B0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1DC4B4B50(0, &qword_1EDB0E758, (void (*)(void))sub_1DC4D7328, (void (*)(void))sub_1DC4D736C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 16))(v28, v29, v30);
  return a1;
}

uint64_t assignWithCopy for VideoAdImpressionEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1DC4B4B50(0, &qword_1EDB0E250, (void (*)(void))sub_1DC4C06CC, (void (*)(void))sub_1DC4C0710);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 24))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1DC4B4B50(0, &qword_1F036CA68, (void (*)(void))sub_1DC55AA58, (void (*)(void))sub_1DC55AAA0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 24))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1DC4B4B50(0, &qword_1EDB0E7B0, (void (*)(void))sub_1DC4D6C30, (void (*)(void))sub_1DC4D6C74);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 24))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1DC4B4B50(0, &qword_1EDB0E740, (void (*)(void))sub_1DC4C076C, (void (*)(void))sub_1DC4C07B0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 24))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1DC4B4B50(0, &qword_1EDB0E758, (void (*)(void))sub_1DC4D7328, (void (*)(void))sub_1DC4D736C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 24))(v28, v29, v30);
  return a1;
}

uint64_t initializeWithTake for VideoAdImpressionEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1DC4B4B50(0, &qword_1EDB0E250, (void (*)(void))sub_1DC4C06CC, (void (*)(void))sub_1DC4C0710);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1DC4B4B50(0, &qword_1F036CA68, (void (*)(void))sub_1DC55AA58, (void (*)(void))sub_1DC55AAA0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1DC4B4B50(0, &qword_1EDB0E7B0, (void (*)(void))sub_1DC4D6C30, (void (*)(void))sub_1DC4D6C74);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1DC4B4B50(0, &qword_1EDB0E740, (void (*)(void))sub_1DC4C076C, (void (*)(void))sub_1DC4C07B0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1DC4B4B50(0, &qword_1EDB0E758, (void (*)(void))sub_1DC4D7328, (void (*)(void))sub_1DC4D736C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 32))(v28, v29, v30);
  return a1;
}

uint64_t assignWithTake for VideoAdImpressionEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1DC4B4B50(0, &qword_1EDB0E250, (void (*)(void))sub_1DC4C06CC, (void (*)(void))sub_1DC4C0710);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 40))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1DC4B4B50(0, &qword_1F036CA68, (void (*)(void))sub_1DC55AA58, (void (*)(void))sub_1DC55AAA0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 40))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1DC4B4B50(0, &qword_1EDB0E7B0, (void (*)(void))sub_1DC4D6C30, (void (*)(void))sub_1DC4D6C74);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 40))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1DC4B4B50(0, &qword_1EDB0E740, (void (*)(void))sub_1DC4C076C, (void (*)(void))sub_1DC4C07B0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 40))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1DC4B4B50(0, &qword_1EDB0E758, (void (*)(void))sub_1DC4D7328, (void (*)(void))sub_1DC4D736C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 40))(v28, v29, v30);
  return a1;
}

uint64_t getEnumTagSinglePayload for VideoAdImpressionEvent()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC55E588(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  sub_1DC4B6600();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    sub_1DC4B4B50(0, &qword_1EDB0E250, (void (*)(void))sub_1DC4C06CC, (void (*)(void))sub_1DC4C0710);
    v12 = *(_QWORD *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
    {
      v8 = v11;
      v13 = a3[5];
    }
    else
    {
      sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
      v12 = *(_QWORD *)(v14 - 8);
      if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
      {
        v8 = v14;
        v13 = a3[6];
      }
      else
      {
        sub_1DC4B4B50(0, &qword_1F036CA68, (void (*)(void))sub_1DC55AA58, (void (*)(void))sub_1DC55AAA0);
        v12 = *(_QWORD *)(v15 - 8);
        if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
        {
          v8 = v15;
          v13 = a3[7];
        }
        else
        {
          sub_1DC4B4B50(0, &qword_1EDB0E7B0, (void (*)(void))sub_1DC4D6C30, (void (*)(void))sub_1DC4D6C74);
          v12 = *(_QWORD *)(v16 - 8);
          if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
          {
            v8 = v16;
            v13 = a3[8];
          }
          else
          {
            sub_1DC4B4B50(0, &qword_1EDB0E740, (void (*)(void))sub_1DC4C076C, (void (*)(void))sub_1DC4C07B0);
            v12 = *(_QWORD *)(v17 - 8);
            if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
            {
              v8 = v17;
              v13 = a3[9];
            }
            else
            {
              sub_1DC4B4B50(0, &qword_1EDB0E758, (void (*)(void))sub_1DC4D7328, (void (*)(void))sub_1DC4D736C);
              v8 = v18;
              v12 = *(_QWORD *)(v18 - 8);
              v13 = a3[10];
            }
          }
        }
      }
    }
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t storeEnumTagSinglePayload for VideoAdImpressionEvent()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC55E77C(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  sub_1DC4B6600();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    sub_1DC4B4B50(0, &qword_1EDB0E250, (void (*)(void))sub_1DC4C06CC, (void (*)(void))sub_1DC4C0710);
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = a4[5];
    }
    else
    {
      sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
      v14 = *(_QWORD *)(v16 - 8);
      if (*(_DWORD *)(v14 + 84) == a3)
      {
        v10 = v16;
        v15 = a4[6];
      }
      else
      {
        sub_1DC4B4B50(0, &qword_1F036CA68, (void (*)(void))sub_1DC55AA58, (void (*)(void))sub_1DC55AAA0);
        v14 = *(_QWORD *)(v17 - 8);
        if (*(_DWORD *)(v14 + 84) == a3)
        {
          v10 = v17;
          v15 = a4[7];
        }
        else
        {
          sub_1DC4B4B50(0, &qword_1EDB0E7B0, (void (*)(void))sub_1DC4D6C30, (void (*)(void))sub_1DC4D6C74);
          v14 = *(_QWORD *)(v18 - 8);
          if (*(_DWORD *)(v14 + 84) == a3)
          {
            v10 = v18;
            v15 = a4[8];
          }
          else
          {
            sub_1DC4B4B50(0, &qword_1EDB0E740, (void (*)(void))sub_1DC4C076C, (void (*)(void))sub_1DC4C07B0);
            v14 = *(_QWORD *)(v19 - 8);
            if (*(_DWORD *)(v14 + 84) == a3)
            {
              v10 = v19;
              v15 = a4[9];
            }
            else
            {
              sub_1DC4B4B50(0, &qword_1EDB0E758, (void (*)(void))sub_1DC4D7328, (void (*)(void))sub_1DC4D736C);
              v10 = v20;
              v14 = *(_QWORD *)(v20 - 8);
              v15 = a4[10];
            }
          }
        }
      }
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_1DC55E96C()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;

  sub_1DC4B6600();
  if (v0 <= 0x3F)
  {
    sub_1DC4B4B50(319, &qword_1EDB0E250, (void (*)(void))sub_1DC4C06CC, (void (*)(void))sub_1DC4C0710);
    if (v1 <= 0x3F)
    {
      sub_1DC4B4B50(319, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
      if (v2 <= 0x3F)
      {
        sub_1DC4B4B50(319, &qword_1F036CA68, (void (*)(void))sub_1DC55AA58, (void (*)(void))sub_1DC55AAA0);
        if (v3 <= 0x3F)
        {
          sub_1DC4B4B50(319, &qword_1EDB0E7B0, (void (*)(void))sub_1DC4D6C30, (void (*)(void))sub_1DC4D6C74);
          if (v4 <= 0x3F)
          {
            sub_1DC4B4B50(319, &qword_1EDB0E740, (void (*)(void))sub_1DC4C076C, (void (*)(void))sub_1DC4C07B0);
            if (v5 <= 0x3F)
            {
              sub_1DC4B4B50(319, &qword_1EDB0E758, (void (*)(void))sub_1DC4D7328, (void (*)(void))sub_1DC4D736C);
              if (v6 <= 0x3F)
                swift_initStructMetadata();
            }
          }
        }
      }
    }
  }
}

_QWORD *initializeBufferWithCopyOfBuffer for VideoAdImpressionEvent.Model(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v26 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v26 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1DC62ABA8();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = a3[6];
    v10 = (_QWORD *)((char *)a1 + v8);
    v11 = (_QWORD *)((char *)a2 + v8);
    v12 = v11[1];
    *v10 = *v11;
    v10[1] = v12;
    v13 = (char *)a1 + v9;
    v14 = (char *)a2 + v9;
    v15 = *((_QWORD *)v14 + 1);
    *(_QWORD *)v13 = *(_QWORD *)v14;
    *((_QWORD *)v13 + 1) = v15;
    v16 = *((_QWORD *)v14 + 3);
    *((_QWORD *)v13 + 2) = *((_QWORD *)v14 + 2);
    *((_QWORD *)v13 + 3) = v16;
    *((_WORD *)v13 + 16) = *((_WORD *)v14 + 16);
    v17 = a3[7];
    v18 = a3[8];
    v19 = (char *)a1 + v17;
    v20 = (char *)a2 + v17;
    *(_DWORD *)v19 = *(_DWORD *)v20;
    v21 = *((_QWORD *)v20 + 2);
    *((_QWORD *)v19 + 1) = *((_QWORD *)v20 + 1);
    *((_QWORD *)v19 + 2) = v21;
    v22 = (_QWORD *)((char *)a1 + v18);
    v23 = (_QWORD *)((char *)a2 + v18);
    v24 = v23[1];
    *v22 = *v23;
    v22[1] = v24;
    v25 = a3[10];
    *((_BYTE *)a1 + a3[9]) = *((_BYTE *)a2 + a3[9]);
    *((_BYTE *)a1 + v25) = *((_BYTE *)a2 + v25);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for VideoAdImpressionEvent.Model(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for VideoAdImpressionEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;

  v6 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = (_QWORD *)(a1 + v7);
  v10 = (_QWORD *)(a2 + v7);
  v11 = v10[1];
  *v9 = *v10;
  v9[1] = v11;
  v12 = a1 + v8;
  v13 = a2 + v8;
  v14 = *(_QWORD *)(v13 + 8);
  *(_QWORD *)v12 = *(_QWORD *)v13;
  *(_QWORD *)(v12 + 8) = v14;
  v15 = *(_QWORD *)(v13 + 24);
  *(_QWORD *)(v12 + 16) = *(_QWORD *)(v13 + 16);
  *(_QWORD *)(v12 + 24) = v15;
  *(_WORD *)(v12 + 32) = *(_WORD *)(v13 + 32);
  v16 = a3[7];
  v17 = a3[8];
  v18 = a1 + v16;
  v19 = a2 + v16;
  *(_DWORD *)v18 = *(_DWORD *)v19;
  v20 = *(_QWORD *)(v19 + 16);
  *(_QWORD *)(v18 + 8) = *(_QWORD *)(v19 + 8);
  *(_QWORD *)(v18 + 16) = v20;
  v21 = (_QWORD *)(a1 + v17);
  v22 = (_QWORD *)(a2 + v17);
  v23 = v22[1];
  *v21 = *v22;
  v21[1] = v23;
  v24 = a3[10];
  *(_BYTE *)(a1 + a3[9]) = *(_BYTE *)(a2 + a3[9]);
  *(_BYTE *)(a1 + v24) = *(_BYTE *)(a2 + v24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for VideoAdImpressionEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;

  v6 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v10 = a3[6];
  v11 = a1 + v10;
  v12 = a2 + v10;
  *(_QWORD *)v11 = *(_QWORD *)(a2 + v10);
  *(_QWORD *)(v11 + 8) = *(_QWORD *)(a2 + v10 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v11 + 16) = *(_QWORD *)(v12 + 16);
  *(_QWORD *)(v11 + 24) = *(_QWORD *)(v12 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v11 + 32) = *(_BYTE *)(v12 + 32);
  *(_BYTE *)(v11 + 33) = *(_BYTE *)(v12 + 33);
  v13 = a3[7];
  v14 = a1 + v13;
  v15 = a2 + v13;
  *(_DWORD *)v14 = *(_DWORD *)v15;
  *(_QWORD *)(v14 + 8) = *(_QWORD *)(v15 + 8);
  *(_QWORD *)(v14 + 16) = *(_QWORD *)(v15 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v16 = a3[8];
  v17 = (_QWORD *)(a1 + v16);
  v18 = (_QWORD *)(a2 + v16);
  *v17 = *v18;
  v17[1] = v18[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + a3[9]) = *(_BYTE *)(a2 + a3[9]);
  *(_BYTE *)(a1 + a3[10]) = *(_BYTE *)(a2 + a3[10]);
  return a1;
}

uint64_t initializeWithTake for VideoAdImpressionEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int128 *v14;
  __int128 v15;
  uint64_t v16;

  v6 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = *(_OWORD *)(v9 + 16);
  *(_OWORD *)v8 = *(_OWORD *)v9;
  *(_OWORD *)(v8 + 16) = v10;
  *(_WORD *)(v8 + 32) = *(_WORD *)(v9 + 32);
  v11 = a3[7];
  v12 = a3[8];
  v13 = a1 + v11;
  v14 = (__int128 *)(a2 + v11);
  v15 = *v14;
  *(_QWORD *)(v13 + 16) = *((_QWORD *)v14 + 2);
  *(_OWORD *)v13 = v15;
  *(_OWORD *)(a1 + v12) = *(_OWORD *)(a2 + v12);
  v16 = a3[10];
  *(_BYTE *)(a1 + a3[9]) = *(_BYTE *)(a2 + a3[9]);
  *(_BYTE *)(a1 + v16) = *(_BYTE *)(a2 + v16);
  return a1;
}

uint64_t assignWithTake for VideoAdImpressionEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v6 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (uint64_t *)(a2 + v7);
  v11 = *v9;
  v10 = v9[1];
  *v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  v12 = a3[6];
  v13 = a1 + v12;
  v14 = a2 + v12;
  v15 = *(_QWORD *)(a2 + v12 + 8);
  *(_QWORD *)v13 = *(_QWORD *)(a2 + v12);
  *(_QWORD *)(v13 + 8) = v15;
  swift_bridgeObjectRelease();
  v16 = *(_QWORD *)(v14 + 24);
  *(_QWORD *)(v13 + 16) = *(_QWORD *)(v14 + 16);
  *(_QWORD *)(v13 + 24) = v16;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v13 + 32) = *(_BYTE *)(v14 + 32);
  *(_BYTE *)(v13 + 33) = *(_BYTE *)(v14 + 33);
  v17 = a3[7];
  v18 = a1 + v17;
  v19 = a2 + v17;
  *(_DWORD *)v18 = *(_DWORD *)v19;
  v21 = *(_QWORD *)(v19 + 8);
  v20 = *(_QWORD *)(v19 + 16);
  *(_QWORD *)(v18 + 8) = v21;
  *(_QWORD *)(v18 + 16) = v20;
  swift_bridgeObjectRelease();
  v22 = a3[8];
  v23 = (_QWORD *)(a1 + v22);
  v24 = (uint64_t *)(a2 + v22);
  v26 = *v24;
  v25 = v24[1];
  *v23 = v26;
  v23[1] = v25;
  swift_bridgeObjectRelease();
  v27 = a3[10];
  *(_BYTE *)(a1 + a3[9]) = *(_BYTE *)(a2 + a3[9]);
  *(_BYTE *)(a1 + v27) = *(_BYTE *)(a2 + v27);
  return a1;
}

uint64_t getEnumTagSinglePayload for VideoAdImpressionEvent.Model()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC55F0F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_1DC62ABA8();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for VideoAdImpressionEvent.Model()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC55F180(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_1DC62ABA8();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  return result;
}

uint64_t sub_1DC55F1FC()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1DC62ABA8();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for VideoAdImpressionEvent.Model.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 6 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 6) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_1DC55F2E4 + 4 * byte_1DC6399AC[v4]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_1DC55F318 + 4 * byte_1DC6399A7[v4]))();
}

uint64_t sub_1DC55F318(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC55F320(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DC55F328);
  return result;
}

uint64_t sub_1DC55F334(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DC55F33CLL);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_1DC55F340(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC55F348(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for VideoAdImpressionEvent.Model.CodingKeys()
{
  return &type metadata for VideoAdImpressionEvent.Model.CodingKeys;
}

unint64_t sub_1DC55F368()
{
  unint64_t result;

  result = qword_1F036CBD8;
  if (!qword_1F036CBD8)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC639BE4, &type metadata for VideoAdImpressionEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036CBD8);
  }
  return result;
}

unint64_t sub_1DC55F3B0()
{
  unint64_t result;

  result = qword_1F036CBE0;
  if (!qword_1F036CBE0)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC639B54, &type metadata for VideoAdImpressionEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036CBE0);
  }
  return result;
}

unint64_t sub_1DC55F3F8()
{
  unint64_t result;

  result = qword_1F036CBE8;
  if (!qword_1F036CBE8)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC639B7C, &type metadata for VideoAdImpressionEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036CBE8);
  }
  return result;
}

uint64_t sub_1DC55F43C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x746144746E657665 && a2 == 0xE900000000000061;
  if (v2 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6144726573556461 && a2 == 0xEA00000000006174 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x446C656E6E616863 && a2 == 0xEB00000000617461 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x4464416F65646976 && a2 == 0xEB00000000617461 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6D6563616C506461 && a2 == 0xEF61746144746E65 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6144646565466461 && a2 == 0xEA00000000006174 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x4470756F72476461 && a2 == 0xEB00000000617461)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else
  {
    v6 = sub_1DC62B520();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 6;
    else
      return 7;
  }
}

uint64_t PurchaseSessionData.purchaseSessionID.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PurchaseSessionData.purchaseSessionID.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*PurchaseSessionData.purchaseSessionID.modify())()
{
  return nullsub_1;
}

StocksAnalytics::PurchaseSessionData __swiftcall PurchaseSessionData.init(purchaseSessionID:)(StocksAnalytics::PurchaseSessionData purchaseSessionID)
{
  StocksAnalytics::PurchaseSessionData *v1;

  *v1 = purchaseSessionID;
  return purchaseSessionID;
}

unint64_t sub_1DC55F810()
{
  return 0xD000000000000011;
}

uint64_t sub_1DC55F82C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1DC55FDF0(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1DC55F854()
{
  sub_1DC55F998();
  return sub_1DC62B604();
}

uint64_t sub_1DC55F87C()
{
  sub_1DC55F998();
  return sub_1DC62B610();
}

uint64_t PurchaseSessionData.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  sub_1DC55FB00(0, &qword_1EDB11A78, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC55F998();
  sub_1DC62B5F8();
  sub_1DC62B4B4();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_1DC55F998()
{
  unint64_t result;

  result = qword_1EDB10080;
  if (!qword_1EDB10080)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC639DD8, &type metadata for PurchaseSessionData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB10080);
  }
  return result;
}

uint64_t PurchaseSessionData.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  sub_1DC55FB00(0, &qword_1F036CBF0, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v14 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC55F998();
  sub_1DC62B5E0();
  if (!v2)
  {
    v10 = sub_1DC62B424();
    v12 = v11;
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *a2 = v10;
    a2[1] = v12;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1DC55FB00(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1DC55F998();
    v7 = a3(a1, &type metadata for PurchaseSessionData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1DC55FB64@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return PurchaseSessionData.init(from:)(a1, a2);
}

uint64_t sub_1DC55FB78(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  sub_1DC55FB00(0, &qword_1EDB11A78, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC55F998();
  sub_1DC62B5F8();
  sub_1DC62B4B4();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

ValueMetadata *type metadata accessor for PurchaseSessionData()
{
  return &type metadata for PurchaseSessionData;
}

uint64_t storeEnumTagSinglePayload for PurchaseSessionData.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1DC55FCBC + 4 * byte_1DC639C60[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1DC55FCDC + 4 * byte_1DC639C65[v4]))();
}

_BYTE *sub_1DC55FCBC(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1DC55FCDC(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1DC55FCE4(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1DC55FCEC(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1DC55FCF4(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1DC55FCFC(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for PurchaseSessionData.CodingKeys()
{
  return &type metadata for PurchaseSessionData.CodingKeys;
}

unint64_t sub_1DC55FD1C()
{
  unint64_t result;

  result = qword_1F036CBF8;
  if (!qword_1F036CBF8)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC639DB0, &type metadata for PurchaseSessionData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036CBF8);
  }
  return result;
}

unint64_t sub_1DC55FD64()
{
  unint64_t result;

  result = qword_1EDB10090;
  if (!qword_1EDB10090)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC639D20, &type metadata for PurchaseSessionData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB10090);
  }
  return result;
}

unint64_t sub_1DC55FDAC()
{
  unint64_t result;

  result = qword_1EDB10088;
  if (!qword_1EDB10088)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC639D48, &type metadata for PurchaseSessionData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB10088);
  }
  return result;
}

uint64_t sub_1DC55FDF0(uint64_t a1, uint64_t a2)
{
  char v2;
  char v3;

  if (a1 == 0xD000000000000011 && a2 == 0x80000001DC64CD40)
  {
    swift_bridgeObjectRelease();
    v2 = 0;
  }
  else
  {
    v3 = sub_1DC62B520();
    swift_bridgeObjectRelease();
    v2 = v3 ^ 1;
  }
  return v2 & 1;
}

uint64_t sub_1DC55FE74()
{
  uint64_t result;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    sub_1DC4BACCC();
    return swift_release();
  }
  return result;
}

uint64_t sub_1DC55FED0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  v1 = v0 + OBJC_IVAR____TtC15StocksAnalytics25PrivacyValidationProvider_privacyValidation;
  v2 = sub_1DC62A908();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance();
}

uint64_t DenylistDescriptor.debugItem.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v5;

  v0 = sub_1DC62AF20();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (uint64_t *)((char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1DC62A914();
  *v3 = 0;
  v3[1] = 0;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E0DB6820], v0);
  return sub_1DC62AF5C();
}

uint64_t String.denylistDescriptorValueDebugItem.getter()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v5;

  v0 = sub_1DC62AF20();
  MEMORY[0x1E0C80A78](v0);
  v2 = (uint64_t *)((char *)&v5 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0));
  *v2 = 0;
  v2[1] = 0;
  (*(void (**)(_QWORD *, _QWORD))(v3 + 104))(v2, *MEMORY[0x1E0DB6820]);
  swift_bridgeObjectRetain();
  return sub_1DC62AF5C();
}

uint64_t sub_1DC560070()
{
  return type metadata accessor for PrivacyValidationProvider();
}

uint64_t sub_1DC560078(uint64_t a1, char *a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(_QWORD, _QWORD, _QWORD);
  uint64_t v19;
  void (*v20)(_QWORD, _QWORD, _QWORD);
  char v21;
  void (*v22)(char *, uint64_t);
  char isUniquelyReferenced_nonNull_native;
  char *v24;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;

  v3 = v2;
  v6 = sub_1DC62A92C();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *v2;
  sub_1DC4BB038(&qword_1EDB0E898, MEMORY[0x1E0CF82F0]);
  swift_bridgeObjectRetain();
  v30 = a2;
  v11 = sub_1DC62B0A0();
  v12 = -1 << *(_BYTE *)(v10 + 32);
  v13 = v11 & ~v12;
  v14 = v10;
  v15 = v10 + 56;
  if (((*(_QWORD *)(v10 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) != 0)
  {
    v26 = v2;
    v27 = a1;
    v28 = ~v12;
    v16 = v7;
    v17 = *(_QWORD *)(v7 + 72);
    v29 = v16;
    v18 = *(void (**)(_QWORD, _QWORD, _QWORD))(v16 + 16);
    while (1)
    {
      v19 = v14;
      v20 = v18;
      v18(v9, *(_QWORD *)(v14 + 48) + v17 * v13, v6);
      sub_1DC4BB038(&qword_1F036CC00, MEMORY[0x1E0CF82F8]);
      v21 = sub_1DC62B0D0();
      v22 = *(void (**)(char *, uint64_t))(v29 + 8);
      v22(v9, v6);
      if ((v21 & 1) != 0)
        break;
      v13 = (v13 + 1) & v28;
      v14 = v19;
      v18 = v20;
      if (((*(_QWORD *)(v15 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        v3 = v26;
        a1 = v27;
        v7 = v29;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    v22(v30, v6);
    v20(v27, *(_QWORD *)(*v26 + 48) + v17 * v13, v6);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    v18 = *(void (**)(_QWORD, _QWORD, _QWORD))(v7 + 16);
LABEL_7:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v24 = v30;
    v18(v9, v30, v6);
    v31 = *v3;
    *v3 = 0x8000000000000000;
    sub_1DC56062C((uint64_t)v9, v13, isUniquelyReferenced_nonNull_native);
    *v3 = v31;
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(a1, v24, v6);
    return 1;
  }
}

uint64_t sub_1DC5602CC()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  void (*v24)(char *, unint64_t, uint64_t);
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  char v28;
  unint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  int64_t v34;
  _QWORD *v35;
  uint64_t v36;

  v1 = v0;
  v2 = sub_1DC62A92C();
  v36 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v33 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *v0;
  sub_1DC560F54();
  v6 = sub_1DC62B2D4();
  v7 = v6;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 1 << *(_BYTE *)(v5 + 32);
    v9 = *(_QWORD *)(v5 + 56);
    v35 = (_QWORD *)(v5 + 56);
    if (v8 < 64)
      v10 = ~(-1 << v8);
    else
      v10 = -1;
    v11 = v10 & v9;
    v33 = v0;
    v34 = (unint64_t)(v8 + 63) >> 6;
    v12 = v6 + 56;
    result = swift_retain();
    v14 = 0;
    while (1)
    {
      if (v11)
      {
        v16 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        v17 = v16 | (v14 << 6);
      }
      else
      {
        v18 = v14 + 1;
        if (__OFADD__(v14, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v18 >= v34)
          goto LABEL_33;
        v19 = v35[v18];
        ++v14;
        if (!v19)
        {
          v14 = v18 + 1;
          if (v18 + 1 >= v34)
            goto LABEL_33;
          v19 = v35[v14];
          if (!v19)
          {
            v14 = v18 + 2;
            if (v18 + 2 >= v34)
              goto LABEL_33;
            v19 = v35[v14];
            if (!v19)
            {
              v20 = v18 + 3;
              if (v20 >= v34)
              {
LABEL_33:
                swift_release();
                v1 = v33;
                v32 = 1 << *(_BYTE *)(v5 + 32);
                if (v32 > 63)
                  bzero(v35, ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v35 = -1 << v32;
                *(_QWORD *)(v5 + 16) = 0;
                break;
              }
              v19 = v35[v20];
              if (!v19)
              {
                while (1)
                {
                  v14 = v20 + 1;
                  if (__OFADD__(v20, 1))
                    goto LABEL_39;
                  if (v14 >= v34)
                    goto LABEL_33;
                  v19 = v35[v14];
                  ++v20;
                  if (v19)
                    goto LABEL_23;
                }
              }
              v14 = v20;
            }
          }
        }
LABEL_23:
        v11 = (v19 - 1) & v19;
        v17 = __clz(__rbit64(v19)) + (v14 << 6);
      }
      v21 = v5;
      v22 = *(_QWORD *)(v36 + 72);
      v23 = *(_QWORD *)(v5 + 48) + v22 * v17;
      v24 = *(void (**)(char *, unint64_t, uint64_t))(v36 + 32);
      v24(v4, v23, v2);
      sub_1DC4BB038(&qword_1EDB0E898, MEMORY[0x1E0CF82F0]);
      result = sub_1DC62B0A0();
      v25 = -1 << *(_BYTE *)(v7 + 32);
      v26 = result & ~v25;
      v27 = v26 >> 6;
      if (((-1 << v26) & ~*(_QWORD *)(v12 + 8 * (v26 >> 6))) != 0)
      {
        v15 = __clz(__rbit64((-1 << v26) & ~*(_QWORD *)(v12 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v28 = 0;
        v29 = (unint64_t)(63 - v25) >> 6;
        do
        {
          if (++v27 == v29 && (v28 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v30 = v27 == v29;
          if (v27 == v29)
            v27 = 0;
          v28 |= v30;
          v31 = *(_QWORD *)(v12 + 8 * v27);
        }
        while (v31 == -1);
        v15 = __clz(__rbit64(~v31)) + (v27 << 6);
      }
      *(_QWORD *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
      result = ((uint64_t (*)(unint64_t, char *, uint64_t))v24)(*(_QWORD *)(v7 + 48) + v15 * v22, v4, v2);
      ++*(_QWORD *)(v7 + 16);
      v5 = v21;
    }
  }
  result = swift_release();
  *v1 = v7;
  return result;
}

uint64_t sub_1DC56062C(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(char *, unint64_t, uint64_t);
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t result;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;

  v26 = a1;
  v6 = sub_1DC62A92C();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(*v3 + 16);
  v11 = *(_QWORD *)(*v3 + 24);
  v25 = v3;
  if (v11 > v10 && (a3 & 1) != 0)
    goto LABEL_12;
  if ((a3 & 1) != 0)
  {
    sub_1DC5602CC();
  }
  else
  {
    if (v11 > v10)
    {
      sub_1DC560820();
      goto LABEL_12;
    }
    sub_1DC560A40();
  }
  v12 = *v3;
  sub_1DC4BB038(&qword_1EDB0E898, MEMORY[0x1E0CF82F0]);
  v13 = sub_1DC62B0A0();
  v14 = -1 << *(_BYTE *)(v12 + 32);
  a2 = v13 & ~v14;
  if (((*(_QWORD *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v15 = ~v14;
    v16 = *(_QWORD *)(v7 + 72);
    v17 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    do
    {
      v17(v9, *(_QWORD *)(v12 + 48) + v16 * a2, v6);
      sub_1DC4BB038(&qword_1F036CC00, MEMORY[0x1E0CF82F8]);
      v18 = sub_1DC62B0D0();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      if ((v18 & 1) != 0)
        goto LABEL_15;
      a2 = (a2 + 1) & v15;
    }
    while (((*(_QWORD *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  v19 = v26;
  v20 = *v25;
  *(_QWORD *)(*v25 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v7 + 32))(*(_QWORD *)(v20 + 48) + *(_QWORD *)(v7 + 72) * a2, v19, v6);
  v22 = *(_QWORD *)(v20 + 16);
  v23 = __OFADD__(v22, 1);
  v24 = v22 + 1;
  if (!v23)
  {
    *(_QWORD *)(v20 + 16) = v24;
    return result;
  }
  __break(1u);
LABEL_15:
  result = sub_1DC62B550();
  __break(1u);
  return result;
}

void *sub_1DC560820()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *result;
  uint64_t v10;
  unint64_t v11;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  uint64_t v24;
  uint64_t *v25;

  v1 = v0;
  v2 = sub_1DC62A92C();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC560F54();
  v6 = *v0;
  v7 = sub_1DC62B2C8();
  v8 = v7;
  if (!*(_QWORD *)(v6 + 16))
  {
    result = (void *)swift_release();
LABEL_30:
    *v1 = v8;
    return result;
  }
  v25 = v1;
  result = (void *)(v7 + 56);
  v10 = v6 + 56;
  v11 = (unint64_t)((1 << *(_BYTE *)(v8 + 32)) + 63) >> 6;
  if (v8 != v6 || (unint64_t)result >= v6 + 56 + 8 * v11)
    result = memmove(result, (const void *)(v6 + 56), 8 * v11);
  v13 = 0;
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(v6 + 16);
  v14 = 1 << *(_BYTE *)(v6 + 32);
  v15 = -1;
  if (v14 < 64)
    v15 = ~(-1 << v14);
  v16 = v15 & *(_QWORD *)(v6 + 56);
  v17 = (unint64_t)(v14 + 63) >> 6;
  while (1)
  {
    if (v16)
    {
      v18 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      v19 = v18 | (v13 << 6);
      goto LABEL_12;
    }
    v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
      __break(1u);
      goto LABEL_32;
    }
    if (v21 >= v17)
      goto LABEL_28;
    v22 = *(_QWORD *)(v10 + 8 * v21);
    ++v13;
    if (!v22)
    {
      v13 = v21 + 1;
      if (v21 + 1 >= v17)
        goto LABEL_28;
      v22 = *(_QWORD *)(v10 + 8 * v13);
      if (!v22)
      {
        v13 = v21 + 2;
        if (v21 + 2 >= v17)
          goto LABEL_28;
        v22 = *(_QWORD *)(v10 + 8 * v13);
        if (!v22)
          break;
      }
    }
LABEL_27:
    v16 = (v22 - 1) & v22;
    v19 = __clz(__rbit64(v22)) + (v13 << 6);
LABEL_12:
    v20 = *(_QWORD *)(v3 + 72) * v19;
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v5, *(_QWORD *)(v6 + 48) + v20, v2);
    result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32))(*(_QWORD *)(v8 + 48) + v20, v5, v2);
  }
  v23 = v21 + 3;
  if (v23 >= v17)
  {
LABEL_28:
    result = (void *)swift_release();
    v1 = v25;
    goto LABEL_30;
  }
  v22 = *(_QWORD *)(v10 + 8 * v23);
  if (v22)
  {
    v13 = v23;
    goto LABEL_27;
  }
  while (1)
  {
    v13 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v13 >= v17)
      goto LABEL_28;
    v22 = *(_QWORD *)(v10 + 8 * v13);
    ++v23;
    if (v22)
      goto LABEL_27;
  }
LABEL_32:
  __break(1u);
  return result;
}

uint64_t sub_1DC560A40()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t result;
  int64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  int64_t v33;

  v1 = v0;
  v2 = sub_1DC62A92C();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *v0;
  sub_1DC560F54();
  v7 = sub_1DC62B2D4();
  v8 = v7;
  if (!*(_QWORD *)(v6 + 16))
  {
    result = swift_release();
LABEL_35:
    *v1 = v8;
    return result;
  }
  v9 = 1 << *(_BYTE *)(v6 + 32);
  v10 = *(_QWORD *)(v6 + 56);
  v31 = v0;
  v32 = v6 + 56;
  if (v9 < 64)
    v11 = ~(-1 << v9);
  else
    v11 = -1;
  v12 = v11 & v10;
  v33 = (unint64_t)(v9 + 63) >> 6;
  v13 = v7 + 56;
  result = swift_retain();
  v15 = 0;
  while (1)
  {
    if (v12)
    {
      v17 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v18 = v17 | (v15 << 6);
      goto LABEL_24;
    }
    v19 = v15 + 1;
    if (__OFADD__(v15, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v19 >= v33)
      goto LABEL_33;
    v20 = *(_QWORD *)(v32 + 8 * v19);
    ++v15;
    if (!v20)
    {
      v15 = v19 + 1;
      if (v19 + 1 >= v33)
        goto LABEL_33;
      v20 = *(_QWORD *)(v32 + 8 * v15);
      if (!v20)
      {
        v15 = v19 + 2;
        if (v19 + 2 >= v33)
          goto LABEL_33;
        v20 = *(_QWORD *)(v32 + 8 * v15);
        if (!v20)
          break;
      }
    }
LABEL_23:
    v12 = (v20 - 1) & v20;
    v18 = __clz(__rbit64(v20)) + (v15 << 6);
LABEL_24:
    v22 = *(_QWORD *)(v3 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v5, *(_QWORD *)(v6 + 48) + v22 * v18, v2);
    sub_1DC4BB038(&qword_1EDB0E898, MEMORY[0x1E0CF82F0]);
    result = sub_1DC62B0A0();
    v23 = -1 << *(_BYTE *)(v8 + 32);
    v24 = result & ~v23;
    v25 = v24 >> 6;
    if (((-1 << v24) & ~*(_QWORD *)(v13 + 8 * (v24 >> 6))) != 0)
    {
      v16 = __clz(__rbit64((-1 << v24) & ~*(_QWORD *)(v13 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v26 = 0;
      v27 = (unint64_t)(63 - v23) >> 6;
      do
      {
        if (++v25 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v28 = v25 == v27;
        if (v25 == v27)
          v25 = 0;
        v26 |= v28;
        v29 = *(_QWORD *)(v13 + 8 * v25);
      }
      while (v29 == -1);
      v16 = __clz(__rbit64(~v29)) + (v25 << 6);
    }
    *(_QWORD *)(v13 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32))(*(_QWORD *)(v8 + 48) + v16 * v22, v5, v2);
    ++*(_QWORD *)(v8 + 16);
  }
  v21 = v19 + 3;
  if (v21 >= v33)
  {
LABEL_33:
    result = swift_release_n();
    v1 = v31;
    goto LABEL_35;
  }
  v20 = *(_QWORD *)(v32 + 8 * v21);
  if (v20)
  {
    v15 = v21;
    goto LABEL_23;
  }
  while (1)
  {
    v15 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v15 >= v33)
      goto LABEL_33;
    v20 = *(_QWORD *)(v32 + 8 * v15);
    ++v21;
    if (v20)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1DC560D5C(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1DC560D78(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_1DC560D78(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  _QWORD *v13;
  size_t v14;
  uint64_t v16;
  unint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  char *v21;
  unint64_t v22;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (!v9)
  {
    v13 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    goto LABEL_19;
  }
  sub_1DC560FC4();
  v10 = *(_QWORD *)(sub_1DC62A92C() - 8);
  v11 = *(_QWORD *)(v10 + 72);
  v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v13 = (_QWORD *)swift_allocObject();
  v14 = _swift_stdlib_malloc_size(v13);
  if (!v11)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v14 - v12 == 0x8000000000000000 && v11 == -1)
    goto LABEL_34;
  v13[2] = v8;
  v13[3] = 2 * ((uint64_t)(v14 - v12) / v11);
LABEL_19:
  v16 = *(_QWORD *)(sub_1DC62A92C() - 8);
  v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  v18 = (char *)v13 + v17;
  v19 = (char *)a4 + v17;
  if ((a1 & 1) != 0)
  {
    if (v13 < a4 || v18 >= &v19[*(_QWORD *)(v16 + 72) * v8])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  v20 = *(_QWORD *)(v16 + 72) * v8;
  v21 = &v18[v20];
  v22 = (unint64_t)&v19[v20];
  if (v19 >= v21 || (unint64_t)v18 >= v22)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v13;
  }
LABEL_36:
  result = sub_1DC62B3C4();
  __break(1u);
  return result;
}

void sub_1DC560F54()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1F036CC08)
  {
    sub_1DC62A92C();
    sub_1DC4BB038(&qword_1EDB0E898, MEMORY[0x1E0CF82F0]);
    v0 = sub_1DC62B2E0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1F036CC08);
  }
}

void sub_1DC560FC4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1F036CC10)
  {
    sub_1DC62A92C();
    v0 = sub_1DC62B514();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1F036CC10);
  }
}

void sub_1DC561018()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EDB0E498)
  {
    v0 = sub_1DC62B514();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EDB0E498);
  }
}

uint64_t sub_1DC56106C(uint64_t a1)
{
  return sub_1DC4BE784(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], qword_1F036CC18, MEMORY[0x1E0CF8078]);
}

uint64_t static SearchResultsReturnedEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C2FE8(&qword_1F03690A0, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1F036CC18, a1);
}

uint64_t sub_1DC5610AC(uint64_t a1)
{
  return sub_1DC4BE784(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], qword_1F036CC30, MEMORY[0x1E0CF8380]);
}

uint64_t static SearchResultsReturnedEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C2FE8(&qword_1F03690A8, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1F036CC30, a1);
}

uint64_t SearchResultsReturnedEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C37DC((uint64_t (*)(_QWORD))sub_1DC4B6600, a1);
}

uint64_t SearchResultsReturnedEvent.eventData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  sub_1DC4B6600();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*SearchResultsReturnedEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t SearchResultsReturnedEvent.searchData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SearchResultsReturnedEvent(0) + 20);
  sub_1DC4B4B50(0, (unint64_t *)&qword_1F0369E88, (void (*)(void))sub_1DC4DCFA8, (void (*)(void))sub_1DC4DCFEC);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t type metadata accessor for SearchResultsReturnedEvent(uint64_t a1)
{
  return sub_1DC4B385C(a1, qword_1F036CCB8);
}

uint64_t SearchResultsReturnedEvent.searchData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SearchResultsReturnedEvent(0) + 20);
  sub_1DC4B4B50(0, (unint64_t *)&qword_1F0369E88, (void (*)(void))sub_1DC4DCFA8, (void (*)(void))sub_1DC4DCFEC);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*SearchResultsReturnedEvent.searchData.modify())()
{
  type metadata accessor for SearchResultsReturnedEvent(0);
  return nullsub_1;
}

uint64_t SearchResultsReturnedEvent.searchResultsData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SearchResultsReturnedEvent(0) + 24);
  sub_1DC4B4B50(0, &qword_1F0369EB8, (void (*)(void))sub_1DC4DD2A8, (void (*)(void))sub_1DC4DD2EC);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t SearchResultsReturnedEvent.searchResultsData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SearchResultsReturnedEvent(0) + 24);
  sub_1DC4B4B50(0, &qword_1F0369EB8, (void (*)(void))sub_1DC4DD2A8, (void (*)(void))sub_1DC4DD2EC);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*SearchResultsReturnedEvent.searchResultsData.modify())()
{
  type metadata accessor for SearchResultsReturnedEvent(0);
  return nullsub_1;
}

uint64_t SearchResultsReturnedEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2 = *MEMORY[0x1E0CF8128];
  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
  v4 = type metadata accessor for SearchResultsReturnedEvent(0);
  v5 = a1 + *(int *)(v4 + 20);
  sub_1DC4B4B50(0, (unint64_t *)&qword_1F0369E88, (void (*)(void))sub_1DC4DCFA8, (void (*)(void))sub_1DC4DCFEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 104))(v5, v2, v6);
  v7 = a1 + *(int *)(v4 + 24);
  sub_1DC4B4B50(0, &qword_1F0369EB8, (void (*)(void))sub_1DC4DD2A8, (void (*)(void))sub_1DC4DD2EC);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 104))(v7, v2, v8);
}

uint64_t SearchResultsReturnedEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C37DC((uint64_t (*)(_QWORD))MEMORY[0x1E0CF8670], a1);
}

uint64_t SearchResultsReturnedEvent.Model.searchData.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = (_QWORD *)(v1 + *(int *)(type metadata accessor for SearchResultsReturnedEvent.Model(0) + 20));
  v4 = v3[1];
  *a1 = *v3;
  a1[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t type metadata accessor for SearchResultsReturnedEvent.Model(uint64_t a1)
{
  return sub_1DC4B385C(a1, qword_1F036CD50);
}

uint64_t SearchResultsReturnedEvent.Model.searchResultsData.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for SearchResultsReturnedEvent.Model(0) + 24));
  return swift_bridgeObjectRetain();
}

uint64_t SearchResultsReturnedEvent.Model.init(eventData:searchData:searchResultsData:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  _QWORD *v11;

  v6 = *a2;
  v7 = a2[1];
  v8 = *a3;
  v9 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(a4, a1, v9);
  result = type metadata accessor for SearchResultsReturnedEvent.Model(0);
  v11 = (_QWORD *)(a4 + *(int *)(result + 20));
  *v11 = v6;
  v11[1] = v7;
  *(_QWORD *)(a4 + *(int *)(result + 24)) = v8;
  return result;
}

uint64_t sub_1DC561524()
{
  _BYTE *v0;
  unint64_t v1;

  v1 = 0x6144686372616573;
  if (*v0 != 1)
    v1 = 0xD000000000000011;
  if (*v0)
    return v1;
  else
    return 0x746144746E657665;
}

uint64_t sub_1DC56158C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1DC562B8C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DC5615B0()
{
  sub_1DC5617B4();
  return sub_1DC62B604();
}

uint64_t sub_1DC5615D8()
{
  sub_1DC5617B4();
  return sub_1DC62B610();
}

uint64_t SearchResultsReturnedEvent.Model.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;

  v3 = v1;
  sub_1DC561AE8(0, &qword_1F036CC48, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v15 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC5617B4();
  sub_1DC62B5F8();
  LOBYTE(v17) = 0;
  sub_1DC62ABA8();
  sub_1DC4B6788(&qword_1EDB0E8A8, MEMORY[0x1E0CF8680]);
  sub_1DC62B4E4();
  if (!v2)
  {
    v10 = type metadata accessor for SearchResultsReturnedEvent.Model(0);
    v11 = (uint64_t *)(v3 + *(int *)(v10 + 20));
    v13 = *v11;
    v12 = v11[1];
    v17 = v13;
    v18 = v12;
    v16 = 1;
    sub_1DC4DCFEC();
    sub_1DC62B4E4();
    v17 = *(_QWORD *)(v3 + *(int *)(v10 + 24));
    v16 = 2;
    sub_1DC4DD2EC();
    sub_1DC62B4E4();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1DC5617B4()
{
  unint64_t result;

  result = qword_1F036CC50;
  if (!qword_1F036CC50)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC63A074, &type metadata for SearchResultsReturnedEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036CC50);
  }
  return result;
}

uint64_t SearchResultsReturnedEvent.Model.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;

  v18 = a2;
  v3 = sub_1DC62ABA8();
  v19 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v21 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC561AE8(0, &qword_1F036CC58, MEMORY[0x1E0DED048]);
  v22 = v5;
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v18 - v7;
  v9 = type metadata accessor for SearchResultsReturnedEvent.Model(0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC5617B4();
  v20 = v8;
  v12 = v23;
  sub_1DC62B5E0();
  if (v12)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v23 = v6;
  v13 = v19;
  LOBYTE(v24) = 0;
  sub_1DC4B6788(&qword_1EDB0E278, MEMORY[0x1E0CF8688]);
  v14 = v20;
  sub_1DC62B454();
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v11, v21, v3);
  v26 = 1;
  sub_1DC4DCFA8();
  sub_1DC62B454();
  v15 = v25;
  v16 = &v11[*(int *)(v9 + 20)];
  *(_QWORD *)v16 = v24;
  *((_QWORD *)v16 + 1) = v15;
  v26 = 2;
  sub_1DC4DD2A8();
  sub_1DC62B454();
  (*(void (**)(char *, uint64_t))(v23 + 8))(v14, v22);
  *(_QWORD *)&v11[*(int *)(v9 + 24)] = v24;
  sub_1DC561B44((uint64_t)v11, v18);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return sub_1DC561B88((uint64_t)v11);
}

void sub_1DC561AE8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1DC5617B4();
    v7 = a3(a1, &type metadata for SearchResultsReturnedEvent.Model.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1DC561B44(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SearchResultsReturnedEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DC561B88(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for SearchResultsReturnedEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1DC561BC4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return SearchResultsReturnedEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_1DC561BD8(_QWORD *a1)
{
  return SearchResultsReturnedEvent.Model.encode(to:)(a1);
}

uint64_t sub_1DC561BEC@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4B2C68(&qword_1F03690A0, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1F036CC18, a1);
}

uint64_t sub_1DC561C10@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4B2C68(&qword_1F03690A8, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1F036CC30, a1);
}

uint64_t sub_1DC561C34@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4 = *MEMORY[0x1E0CF8128];
  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 104))(a2, v4, v5);
  v6 = a2 + *(int *)(a1 + 20);
  sub_1DC4B4B50(0, (unint64_t *)&qword_1F0369E88, (void (*)(void))sub_1DC4DCFA8, (void (*)(void))sub_1DC4DCFEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 104))(v6, v4, v7);
  v8 = a2 + *(int *)(a1 + 24);
  sub_1DC4B4B50(0, &qword_1F0369EB8, (void (*)(void))sub_1DC4DD2A8, (void (*)(void))sub_1DC4DD2EC);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 104))(v8, v4, v9);
}

uint64_t *initializeBufferWithCopyOfBuffer for SearchResultsReturnedEvent(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v16 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_1DC4B6600();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    sub_1DC4B4B50(0, (unint64_t *)&qword_1F0369E88, (void (*)(void))sub_1DC4DCFA8, (void (*)(void))sub_1DC4DCFEC);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = *(int *)(a3 + 24);
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    sub_1DC4B4B50(0, &qword_1F0369EB8, (void (*)(void))sub_1DC4DD2A8, (void (*)(void))sub_1DC4DD2EC);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
  }
  return a1;
}

uint64_t destroy for SearchResultsReturnedEvent(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + *(int *)(a2 + 20);
  sub_1DC4B4B50(0, (unint64_t *)&qword_1F0369E88, (void (*)(void))sub_1DC4DCFA8, (void (*)(void))sub_1DC4DCFEC);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = a1 + *(int *)(a2 + 24);
  sub_1DC4B4B50(0, &qword_1F0369EB8, (void (*)(void))sub_1DC4DD2A8, (void (*)(void))sub_1DC4DD2EC);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
}

uint64_t initializeWithCopy for SearchResultsReturnedEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1DC4B4B50(0, (unint64_t *)&qword_1F0369E88, (void (*)(void))sub_1DC4DCFA8, (void (*)(void))sub_1DC4DCFEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = *(int *)(a3 + 24);
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1DC4B4B50(0, &qword_1F0369EB8, (void (*)(void))sub_1DC4DD2A8, (void (*)(void))sub_1DC4DD2EC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
  return a1;
}

uint64_t assignWithCopy for SearchResultsReturnedEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1DC4B4B50(0, (unint64_t *)&qword_1F0369E88, (void (*)(void))sub_1DC4DCFA8, (void (*)(void))sub_1DC4DCFEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = *(int *)(a3 + 24);
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1DC4B4B50(0, &qword_1F0369EB8, (void (*)(void))sub_1DC4DD2A8, (void (*)(void))sub_1DC4DD2EC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 24))(v12, v13, v14);
  return a1;
}

uint64_t initializeWithTake for SearchResultsReturnedEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1DC4B4B50(0, (unint64_t *)&qword_1F0369E88, (void (*)(void))sub_1DC4DCFA8, (void (*)(void))sub_1DC4DCFEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = *(int *)(a3 + 24);
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1DC4B4B50(0, &qword_1F0369EB8, (void (*)(void))sub_1DC4DD2A8, (void (*)(void))sub_1DC4DD2EC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
  return a1;
}

uint64_t assignWithTake for SearchResultsReturnedEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1DC4B4B50(0, (unint64_t *)&qword_1F0369E88, (void (*)(void))sub_1DC4DCFA8, (void (*)(void))sub_1DC4DCFEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = *(int *)(a3 + 24);
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1DC4B4B50(0, &qword_1F0369EB8, (void (*)(void))sub_1DC4DD2A8, (void (*)(void))sub_1DC4DD2EC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 40))(v12, v13, v14);
  return a1;
}

uint64_t getEnumTagSinglePayload for SearchResultsReturnedEvent()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC5622C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  sub_1DC4B6600();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    sub_1DC4B4B50(0, (unint64_t *)&qword_1F0369E88, (void (*)(void))sub_1DC4DCFA8, (void (*)(void))sub_1DC4DCFEC);
    v12 = *(_QWORD *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
    {
      v8 = v11;
      v13 = *(int *)(a3 + 20);
    }
    else
    {
      sub_1DC4B4B50(0, &qword_1F0369EB8, (void (*)(void))sub_1DC4DD2A8, (void (*)(void))sub_1DC4DD2EC);
      v8 = v14;
      v12 = *(_QWORD *)(v14 - 8);
      v13 = *(int *)(a3 + 24);
    }
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t storeEnumTagSinglePayload for SearchResultsReturnedEvent()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC5623A8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  sub_1DC4B6600();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    sub_1DC4B4B50(0, (unint64_t *)&qword_1F0369E88, (void (*)(void))sub_1DC4DCFA8, (void (*)(void))sub_1DC4DCFEC);
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = *(int *)(a4 + 20);
    }
    else
    {
      sub_1DC4B4B50(0, &qword_1F0369EB8, (void (*)(void))sub_1DC4DD2A8, (void (*)(void))sub_1DC4DD2EC);
      v10 = v16;
      v14 = *(_QWORD *)(v16 - 8);
      v15 = *(int *)(a4 + 24);
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_1DC562488()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  sub_1DC4B6600();
  if (v0 <= 0x3F)
  {
    sub_1DC4B4B50(319, (unint64_t *)&qword_1F0369E88, (void (*)(void))sub_1DC4DCFA8, (void (*)(void))sub_1DC4DCFEC);
    if (v1 <= 0x3F)
    {
      sub_1DC4B4B50(319, &qword_1F0369EB8, (void (*)(void))sub_1DC4DD2A8, (void (*)(void))sub_1DC4DD2EC);
      if (v2 <= 0x3F)
        swift_initStructMetadata();
    }
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for SearchResultsReturnedEvent.Model(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v13 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1DC62ABA8();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = *(int *)(a3 + 24);
    v10 = (uint64_t *)((char *)a1 + v8);
    v11 = (uint64_t *)((char *)a2 + v8);
    v12 = v11[1];
    *v10 = *v11;
    v10[1] = v12;
    *(uint64_t *)((char *)a1 + v9) = *(uint64_t *)((char *)a2 + v9);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for SearchResultsReturnedEvent.Model(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for SearchResultsReturnedEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;

  v6 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = *(int *)(a3 + 24);
  v9 = (_QWORD *)(a1 + v7);
  v10 = (_QWORD *)(a2 + v7);
  v11 = v10[1];
  *v9 = *v10;
  v9[1] = v11;
  *(_QWORD *)(a1 + v8) = *(_QWORD *)(a2 + v8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for SearchResultsReturnedEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;

  v6 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + *(int *)(a3 + 24)) = *(_QWORD *)(a2 + *(int *)(a3 + 24));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for SearchResultsReturnedEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 24);
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  return a1;
}

uint64_t assignWithTake for SearchResultsReturnedEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;

  v6 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (uint64_t *)(a2 + v7);
  v11 = *v9;
  v10 = v9[1];
  *v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + *(int *)(a3 + 24)) = *(_QWORD *)(a2 + *(int *)(a3 + 24));
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for SearchResultsReturnedEvent.Model()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC562860(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_1DC62ABA8();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for SearchResultsReturnedEvent.Model()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC5628EC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_1DC62ABA8();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  return result;
}

uint64_t sub_1DC562968()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1DC62ABA8();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for SearchResultsReturnedEvent.Model.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1DC562A34 + 4 * byte_1DC639EA5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1DC562A68 + 4 * byte_1DC639EA0[v4]))();
}

uint64_t sub_1DC562A68(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC562A70(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DC562A78);
  return result;
}

uint64_t sub_1DC562A84(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DC562A8CLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1DC562A90(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC562A98(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SearchResultsReturnedEvent.Model.CodingKeys()
{
  return &type metadata for SearchResultsReturnedEvent.Model.CodingKeys;
}

unint64_t sub_1DC562AB8()
{
  unint64_t result;

  result = qword_1F036CD90;
  if (!qword_1F036CD90)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC63A04C, &type metadata for SearchResultsReturnedEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036CD90);
  }
  return result;
}

unint64_t sub_1DC562B00()
{
  unint64_t result;

  result = qword_1F036CD98;
  if (!qword_1F036CD98)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC639FBC, &type metadata for SearchResultsReturnedEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036CD98);
  }
  return result;
}

unint64_t sub_1DC562B48()
{
  unint64_t result;

  result = qword_1F036CDA0;
  if (!qword_1F036CDA0)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC639FE4, &type metadata for SearchResultsReturnedEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036CDA0);
  }
  return result;
}

uint64_t sub_1DC562B8C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x746144746E657665 && a2 == 0xE900000000000061;
  if (v2 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6144686372616573 && a2 == 0xEA00000000006174 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001DC64C0B0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_1DC62B520();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_1DC562CF4(uint64_t a1, uint64_t a2)
{
  if (qword_1EDB0E5D0 != -1)
    swift_once();
  sub_1DC4BA75C(&qword_1EDB0F490, a2, (uint64_t (*)(uint64_t))type metadata accessor for TrackerAssembly, (uint64_t)&unk_1DC63A100);
  return sub_1DC62A578();
}

uint64_t sub_1DC562D80(_QWORD *a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  void *v8;
  uint64_t v9;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC62AB0C();
  result = sub_1DC62AC50();
  if (!result)
  {
    __break(1u);
    goto LABEL_11;
  }
  v3 = result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC4C0910();
  result = sub_1DC62AC50();
  if (!result)
  {
LABEL_11:
    __break(1u);
    return result;
  }
  v4 = result;
  sub_1DC62AA34();
  sub_1DC62AA1C();
  v6 = (void *)sub_1DC62AA10();
  if (qword_1EDB0E5C0 != -1)
    swift_once();
  sub_1DC4BA75C(&qword_1EDB0F490, v5, (uint64_t (*)(uint64_t))type metadata accessor for TrackerAssembly, (uint64_t)&unk_1DC63A100);
  sub_1DC62A578();
  v7 = (void *)sub_1DC62AA04();

  if (qword_1EDB0E648 != -1)
    swift_once();
  sub_1DC62A578();
  v8 = (void *)sub_1DC62A9EC();

  if (qword_1EDB0E600 != -1)
    swift_once();
  sub_1DC62A578();
  v9 = sub_1DC62A9F8();

  return MEMORY[0x1DF0CB7F0](v3, v4, 0, v9);
}

uint64_t sub_1DC562F9C(_QWORD *a1)
{
  uint64_t result;
  uint64_t v3;
  _QWORD *v4;
  _QWORD v5[5];
  _BYTE v6[24];
  uint64_t v7;
  _BYTE v8[24];
  uint64_t v9;
  _BYTE v10[24];
  uint64_t v11;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC4BA6C8(0, &qword_1EDB0E5A8);
  result = sub_1DC62AC5C();
  if (!v11)
  {
    __break(1u);
    goto LABEL_8;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC62AB84();
  result = sub_1DC62AC50();
  if (!result)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  v3 = result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC4BA6C8(0, &qword_1EDB0E678);
  result = sub_1DC62AC5C();
  if (!v9)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC4BA6C8(0, &qword_1EDB0EC20);
  result = sub_1DC62AC5C();
  if (!v7)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC4BA6C8(0, &qword_1EDB0EC18);
  result = sub_1DC62AC5C();
  if (v5[3])
  {
    type metadata accessor for ExternalAnalyticsEventProcessor();
    swift_allocObject();
    v4 = sub_1DC5B4044((uint64_t)v10, v3, (uint64_t)v8, (uint64_t)v6, (uint64_t)v5);
    swift_release();
    return (uint64_t)v4;
  }
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_1DC563184@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;

  v2 = sub_1DC62A62C();
  swift_allocObject();
  result = sub_1DC62A620();
  v4 = MEMORY[0x1E0CF7EE0];
  a1[3] = v2;
  a1[4] = v4;
  *a1 = result;
  return result;
}

uint64_t sub_1DC5631D8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = type metadata accessor for ExternalAnalyticsPanelIdProvider();
  result = swift_allocObject();
  a1[3] = v2;
  a1[4] = (uint64_t)&protocol witness table for ExternalAnalyticsPanelIdProvider;
  *a1 = result;
  return result;
}

uint64_t sub_1DC56321C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t started;
  uint64_t v4;
  uint64_t ItemsGenerator;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;

  sub_1DC5633EC();
  v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1DC63A0E0;
  started = type metadata accessor for AppSessionStartEventQueryItemsGenerator();
  v4 = swift_allocObject();
  *(_QWORD *)(v2 + 56) = started;
  *(_QWORD *)(v2 + 64) = &off_1EA4A11A0;
  *(_QWORD *)(v2 + 32) = v4;
  ItemsGenerator = type metadata accessor for ArticleViewEventQueryItemsGenerator();
  v6 = swift_allocObject();
  *(_QWORD *)(v2 + 96) = ItemsGenerator;
  *(_QWORD *)(v2 + 104) = &off_1EA4A5A30;
  *(_QWORD *)(v2 + 72) = v6;
  v7 = type metadata accessor for MediaEngageEventQueryItemsGenerator();
  v8 = swift_allocObject();
  *(_QWORD *)(v2 + 136) = v7;
  *(_QWORD *)(v2 + 144) = &off_1EA4A40F0;
  *(_QWORD *)(v2 + 112) = v8;
  v9 = type metadata accessor for MediaEngageCompletedEventQueryItemsGenerator();
  v10 = swift_allocObject();
  *(_QWORD *)(v2 + 176) = v9;
  *(_QWORD *)(v2 + 184) = &off_1EA4A3A78;
  *(_QWORD *)(v2 + 152) = v10;
  v11 = type metadata accessor for ExternalAnalyticsURLProvider();
  result = swift_allocObject();
  *(_QWORD *)(result + 16) = v2;
  a1[3] = v11;
  a1[4] = (uint64_t)&protocol witness table for ExternalAnalyticsURLProvider;
  *a1 = result;
  return result;
}

void sub_1DC563330(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  void *v3;

  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  type metadata accessor for SessionObserver();
  v2 = sub_1DC62AC50();
  if (v2)
  {
    v3 = (void *)v2;
    sub_1DC4BA75C(&qword_1EDB0E2D8, 255, (uint64_t (*)(uint64_t))type metadata accessor for SessionObserver, (uint64_t)&protocol conformance descriptor for SessionObserver);
    sub_1DC62ADC4();

  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1DC5633DC(uint64_t a1)
{
  uint64_t v1;

  return sub_1DC562CF4(a1, v1);
}

uint64_t sub_1DC5633E4(_QWORD *a1)
{
  return sub_1DC562D80(a1);
}

void sub_1DC5633EC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EDB11B78)
  {
    sub_1DC4BA6C8(255, &qword_1EDB0EC28);
    v0 = sub_1DC62B514();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EDB11B78);
  }
}

uint64_t sub_1DC563454()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1DC563478()
{
  return sub_1DC55FE74();
}

uint64_t sub_1DC563480(uint64_t a1)
{
  return sub_1DC4BE784(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], qword_1F036CDA8, MEMORY[0x1E0CF8078]);
}

uint64_t static CustomItemExposureEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C2FE8(&qword_1F03690B0, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1F036CDA8, a1);
}

uint64_t sub_1DC5634C0(uint64_t a1)
{
  return sub_1DC4BE784(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], qword_1F036CDC0, MEMORY[0x1E0CF8380]);
}

uint64_t static CustomItemExposureEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C2FE8(&qword_1F03690B8, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1F036CDC0, a1);
}

uint64_t CustomItemExposureEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C37DC((uint64_t (*)(_QWORD))sub_1DC4B6600, a1);
}

uint64_t CustomItemExposureEvent.eventData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  sub_1DC4B6600();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*CustomItemExposureEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t CustomItemExposureEvent.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C382C(type metadata accessor for CustomItemExposureEvent, (uint64_t (*)(_QWORD))sub_1DC4B66A4, a1);
}

uint64_t type metadata accessor for CustomItemExposureEvent(uint64_t a1)
{
  return sub_1DC4B385C(a1, qword_1F036CE60);
}

uint64_t CustomItemExposureEvent.timedData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for CustomItemExposureEvent(0) + 20);
  sub_1DC4B66A4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*CustomItemExposureEvent.timedData.modify())()
{
  type metadata accessor for CustomItemExposureEvent(0);
  return nullsub_1;
}

uint64_t CustomItemExposureEvent.viewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for CustomItemExposureEvent(0) + 24);
  sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t CustomItemExposureEvent.viewData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for CustomItemExposureEvent(0) + 24);
  sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*CustomItemExposureEvent.viewData.modify())()
{
  type metadata accessor for CustomItemExposureEvent(0);
  return nullsub_1;
}

uint64_t CustomItemExposureEvent.customItemData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for CustomItemExposureEvent(0) + 28);
  sub_1DC4B4B50(0, &qword_1F036CDD8, (void (*)(void))sub_1DC56374C, (void (*)(void))sub_1DC563790);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

unint64_t sub_1DC56374C()
{
  unint64_t result;

  result = qword_1F036CDE0;
  if (!qword_1F036CDE0)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for CustomItemData, &type metadata for CustomItemData);
    atomic_store(result, (unint64_t *)&qword_1F036CDE0);
  }
  return result;
}

unint64_t sub_1DC563790()
{
  unint64_t result;

  result = qword_1F036CDE8;
  if (!qword_1F036CDE8)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for CustomItemData, &type metadata for CustomItemData);
    atomic_store(result, (unint64_t *)&qword_1F036CDE8);
  }
  return result;
}

uint64_t CustomItemExposureEvent.customItemData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for CustomItemExposureEvent(0) + 28);
  sub_1DC4B4B50(0, &qword_1F036CDD8, (void (*)(void))sub_1DC56374C, (void (*)(void))sub_1DC563790);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*CustomItemExposureEvent.customItemData.modify())()
{
  type metadata accessor for CustomItemExposureEvent(0);
  return nullsub_1;
}

uint64_t CustomItemExposureEvent.feedPositionData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for CustomItemExposureEvent(0) + 32);
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E7D0, (void (*)(void))sub_1DC510CA0, (void (*)(void))sub_1DC510CE4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t CustomItemExposureEvent.feedPositionData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for CustomItemExposureEvent(0) + 32);
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E7D0, (void (*)(void))sub_1DC510CA0, (void (*)(void))sub_1DC510CE4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*CustomItemExposureEvent.feedPositionData.modify())()
{
  type metadata accessor for CustomItemExposureEvent(0);
  return nullsub_1;
}

uint64_t CustomItemExposureEvent.inGroupPositionData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for CustomItemExposureEvent(0) + 36);
  sub_1DC4B4B50(0, &qword_1EDB0E7E8, (void (*)(void))sub_1DC510E20, (void (*)(void))sub_1DC510E64);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t CustomItemExposureEvent.inGroupPositionData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for CustomItemExposureEvent(0) + 36);
  sub_1DC4B4B50(0, &qword_1EDB0E7E8, (void (*)(void))sub_1DC510E20, (void (*)(void))sub_1DC510E64);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*CustomItemExposureEvent.inGroupPositionData.modify())()
{
  type metadata accessor for CustomItemExposureEvent(0);
  return nullsub_1;
}

uint64_t CustomItemExposureEvent.feedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for CustomItemExposureEvent(0) + 40);
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t CustomItemExposureEvent.feedData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for CustomItemExposureEvent(0) + 40);
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*CustomItemExposureEvent.feedData.modify())()
{
  type metadata accessor for CustomItemExposureEvent(0);
  return nullsub_1;
}

uint64_t CustomItemExposureEvent.groupData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for CustomItemExposureEvent(0) + 44);
  sub_1DC4B4B50(0, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t CustomItemExposureEvent.groupData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for CustomItemExposureEvent(0) + 44);
  sub_1DC4B4B50(0, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*CustomItemExposureEvent.groupData.modify())()
{
  type metadata accessor for CustomItemExposureEvent(0);
  return nullsub_1;
}

uint64_t CustomItemExposureEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v2 = *MEMORY[0x1E0CF8128];
  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
  v4 = (int *)type metadata accessor for CustomItemExposureEvent(0);
  v5 = a1 + v4[5];
  sub_1DC4B66A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 104))(v5, v2, v6);
  v7 = a1 + v4[6];
  sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 104))(v7, v2, v8);
  v9 = a1 + v4[7];
  sub_1DC4B4B50(0, &qword_1F036CDD8, (void (*)(void))sub_1DC56374C, (void (*)(void))sub_1DC563790);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 104))(v9, v2, v10);
  v11 = a1 + v4[8];
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E7D0, (void (*)(void))sub_1DC510CA0, (void (*)(void))sub_1DC510CE4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 104))(v11, v2, v12);
  v13 = a1 + v4[9];
  v14 = *MEMORY[0x1E0CF8120];
  sub_1DC4B4B50(0, &qword_1EDB0E7E8, (void (*)(void))sub_1DC510E20, (void (*)(void))sub_1DC510E64);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 104))(v13, v14, v15);
  v16 = a1 + v4[10];
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 104))(v16, v2, v17);
  v18 = a1 + v4[11];
  sub_1DC4B4B50(0, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 104))(v18, v14, v19);
}

uint64_t CustomItemExposureEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C37DC((uint64_t (*)(_QWORD))MEMORY[0x1E0CF8670], a1);
}

uint64_t CustomItemExposureEvent.Model.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C382C(type metadata accessor for CustomItemExposureEvent.Model, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF86C0], a1);
}

uint64_t type metadata accessor for CustomItemExposureEvent.Model(uint64_t a1)
{
  return sub_1DC4B385C(a1, qword_1F036CF08);
}

uint64_t CustomItemExposureEvent.Model.viewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for CustomItemExposureEvent.Model(0) + 24));
  v5 = *v3;
  v4 = v3[1];
  LOWORD(v3) = *((_WORD *)v3 + 8);
  *(_QWORD *)a1 = v5;
  *(_QWORD *)(a1 + 8) = v4;
  *(_WORD *)(a1 + 16) = (_WORD)v3;
  return swift_bridgeObjectRetain();
}

uint64_t CustomItemExposureEvent.Model.customItemData.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = (_QWORD *)(v1 + *(int *)(type metadata accessor for CustomItemExposureEvent.Model(0) + 28));
  v4 = v3[1];
  v5 = v3[2];
  v6 = v3[3];
  *a1 = *v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t CustomItemExposureEvent.Model.feedPositionData.getter@<X0>(_DWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for CustomItemExposureEvent.Model(0);
  *a1 = *(_DWORD *)(v1 + *(int *)(result + 32));
  return result;
}

uint64_t CustomItemExposureEvent.Model.inGroupPositionData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t result;
  int *v4;
  int v5;

  result = type metadata accessor for CustomItemExposureEvent.Model(0);
  v4 = (int *)(v1 + *(int *)(result + 36));
  v5 = *v4;
  LOBYTE(v4) = *((_BYTE *)v4 + 4);
  *(_DWORD *)a1 = v5;
  *(_BYTE *)(a1 + 4) = (_BYTE)v4;
  return result;
}

uint64_t CustomItemExposureEvent.Model.feedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = v1 + *(int *)(type metadata accessor for CustomItemExposureEvent.Model(0) + 40);
  v5 = *(_QWORD *)(v3 + 8);
  v4 = *(_QWORD *)(v3 + 16);
  *(_BYTE *)a1 = *(_BYTE *)v3;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v4;
  return swift_bridgeObjectRetain();
}

uint64_t CustomItemExposureEvent.Model.groupData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for CustomItemExposureEvent.Model(0) + 44));
  v4 = *v3;
  v5 = v3[1];
  v6 = v3[2];
  v7 = v3[3];
  v8 = v3[4];
  v9 = v3[5];
  *a1 = *v3;
  a1[1] = v5;
  a1[2] = v6;
  a1[3] = v7;
  a1[4] = v8;
  a1[5] = v9;
  return sub_1DC4C9EC0(v4, v5, v6);
}

__n128 CustomItemExposureEvent.Model.init(eventData:timedData:viewData:customItemData:feedPositionData:inGroupPositionData:feedData:groupData:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, __int128 *a4@<X3>, int *a5@<X4>, int *a6@<X5>, char *a7@<X6>, __int128 *a8@<X7>, uint64_t a9@<X8>)
{
  uint64_t v12;
  uint64_t v13;
  __int16 v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  int *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __n128 result;
  __int128 v28;
  char v29;
  int v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  __n128 v36;
  __int128 v37;

  v13 = *a3;
  v12 = a3[1];
  v14 = *((_WORD *)a3 + 8);
  v28 = *a4;
  v15 = *((_QWORD *)a4 + 2);
  v16 = *((_QWORD *)a4 + 3);
  v17 = *a5;
  v29 = *((_BYTE *)a6 + 4);
  v30 = *a6;
  v33 = *a7;
  v31 = *((_QWORD *)a7 + 2);
  v32 = *((_QWORD *)a7 + 1);
  v36 = (__n128)a8[1];
  v37 = *a8;
  v34 = *((_QWORD *)a8 + 5);
  v35 = *((_QWORD *)a8 + 4);
  v18 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(a9, a1, v18);
  v19 = (int *)type metadata accessor for CustomItemExposureEvent.Model(0);
  v20 = a9 + v19[5];
  v21 = sub_1DC62ABC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(v20, a2, v21);
  v22 = a9 + v19[6];
  *(_QWORD *)v22 = v13;
  *(_QWORD *)(v22 + 8) = v12;
  *(_WORD *)(v22 + 16) = v14;
  v23 = a9 + v19[7];
  *(_OWORD *)v23 = v28;
  *(_QWORD *)(v23 + 16) = v15;
  *(_QWORD *)(v23 + 24) = v16;
  *(_DWORD *)(a9 + v19[8]) = v17;
  v24 = a9 + v19[9];
  *(_DWORD *)v24 = v30;
  *(_BYTE *)(v24 + 4) = v29;
  v25 = a9 + v19[10];
  *(_BYTE *)v25 = v33;
  *(_QWORD *)(v25 + 8) = v32;
  *(_QWORD *)(v25 + 16) = v31;
  v26 = a9 + v19[11];
  result = v36;
  *(_OWORD *)v26 = v37;
  *(__n128 *)(v26 + 16) = v36;
  *(_QWORD *)(v26 + 32) = v35;
  *(_QWORD *)(v26 + 40) = v34;
  return result;
}

uint64_t sub_1DC564198(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1DC5641D0 + 4 * byte_1DC63A170[a1]))(0x746144746E657665, 0xE900000000000061);
}

uint64_t sub_1DC5641D0()
{
  return 0x74614464656D6974;
}

uint64_t sub_1DC5641E4()
{
  return 0x6174614477656976;
}

uint64_t sub_1DC56426C()
{
  return 0x74614470756F7267;
}

uint64_t sub_1DC564280()
{
  unsigned __int8 *v0;

  return sub_1DC564198(*v0);
}

uint64_t sub_1DC564288@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1DC5670C4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DC5642AC()
{
  sub_1DC564660();
  return sub_1DC62B604();
}

uint64_t sub_1DC5642D4()
{
  sub_1DC564660();
  return sub_1DC62B610();
}

uint64_t CustomItemExposureEvent.Model.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int *v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  __int128 *v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  int *v18;
  int v19;
  char *v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  __int128 *v24;
  __int128 v25;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  char v30;

  v3 = v1;
  sub_1DC564CF0(0, &qword_1F036CDF0, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v27 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC564660();
  sub_1DC62B5F8();
  LOBYTE(v27) = 0;
  sub_1DC62ABA8();
  sub_1DC4B6748(&qword_1EDB0E8A8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF8670], MEMORY[0x1E0CF8680]);
  sub_1DC62B4E4();
  if (!v2)
  {
    v10 = (int *)type metadata accessor for CustomItemExposureEvent.Model(0);
    LOBYTE(v27) = 1;
    sub_1DC62ABC0();
    sub_1DC4B6748(&qword_1EDB0E8B8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF86C0], MEMORY[0x1E0CF86D0]);
    sub_1DC62B4E4();
    v11 = (uint64_t *)(v3 + v10[6]);
    v12 = *v11;
    v13 = v11[1];
    LOWORD(v11) = *((_WORD *)v11 + 8);
    *(_QWORD *)&v27 = v12;
    *((_QWORD *)&v27 + 1) = v13;
    LOWORD(v28) = (_WORD)v11;
    v30 = 2;
    sub_1DC4BEDF0();
    sub_1DC62B4E4();
    v14 = (__int128 *)(v3 + v10[7]);
    v15 = *v14;
    v17 = *((_QWORD *)v14 + 2);
    v16 = *((_QWORD *)v14 + 3);
    v27 = v15;
    *(_QWORD *)&v28 = v17;
    *((_QWORD *)&v28 + 1) = v16;
    v30 = 3;
    sub_1DC563790();
    sub_1DC62B4E4();
    LODWORD(v27) = *(_DWORD *)(v3 + v10[8]);
    v30 = 4;
    sub_1DC510CE4();
    sub_1DC62B4E4();
    v18 = (int *)(v3 + v10[9]);
    v19 = *v18;
    LOBYTE(v18) = *((_BYTE *)v18 + 4);
    LODWORD(v27) = v19;
    BYTE4(v27) = (_BYTE)v18;
    v30 = 5;
    sub_1DC510E64();
    sub_1DC62B490();
    v20 = (char *)(v3 + v10[10]);
    v21 = *v20;
    v23 = *((_QWORD *)v20 + 1);
    v22 = *((_QWORD *)v20 + 2);
    LOBYTE(v27) = v21;
    *((_QWORD *)&v27 + 1) = v23;
    *(_QWORD *)&v28 = v22;
    v30 = 6;
    sub_1DC4BEFD8();
    sub_1DC62B4E4();
    v24 = (__int128 *)(v3 + v10[11]);
    v25 = v24[1];
    v27 = *v24;
    v28 = v25;
    v29 = v24[2];
    v30 = 7;
    sub_1DC4C9004();
    sub_1DC62B490();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1DC564660()
{
  unint64_t result;

  result = qword_1F036CDF8;
  if (!qword_1F036CDF8)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC63A3EC, &type metadata for CustomItemExposureEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036CDF8);
  }
  return result;
}

uint64_t CustomItemExposureEvent.Model.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int *v20;
  uint64_t v21;
  __int16 v22;
  char *v23;
  __int128 v24;
  char *v25;
  uint64_t v26;
  char v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  __int128 v33;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  _QWORD *v43;
  uint64_t v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  char v48;

  v36 = a2;
  v3 = sub_1DC62ABC0();
  v38 = *(_QWORD *)(v3 - 8);
  v39 = v3;
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1DC62ABA8();
  v40 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC564CF0(0, &qword_1F036CE00, MEMORY[0x1E0DED048]);
  v37 = v9;
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v35 - v11;
  v41 = type metadata accessor for CustomItemExposureEvent.Model(0);
  MEMORY[0x1E0C80A78](v41);
  v14 = (char *)&v35 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = a1[3];
  v43 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v15);
  sub_1DC564660();
  v42 = v12;
  v16 = v44;
  sub_1DC62B5E0();
  if (v16)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v43);
  v17 = v10;
  LOBYTE(v45) = 0;
  sub_1DC4B6748(&qword_1EDB0E278, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF8670], MEMORY[0x1E0CF8688]);
  v18 = v37;
  sub_1DC62B454();
  (*(void (**)(char *, char *, uint64_t))(v40 + 32))(v14, v8, v6);
  LOBYTE(v45) = 1;
  sub_1DC4B6748(&qword_1EDB0E8C0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF86C0], MEMORY[0x1E0CF86D8]);
  v19 = v39;
  sub_1DC62B454();
  v20 = (int *)v41;
  (*(void (**)(char *, char *, uint64_t))(v38 + 32))(&v14[*(int *)(v41 + 20)], v5, v19);
  v48 = 2;
  sub_1DC4BEDAC();
  sub_1DC62B454();
  v21 = *((_QWORD *)&v45 + 1);
  v22 = v46;
  v23 = &v14[v20[6]];
  *(_QWORD *)v23 = v45;
  *((_QWORD *)v23 + 1) = v21;
  *((_WORD *)v23 + 8) = v22;
  v48 = 3;
  sub_1DC56374C();
  sub_1DC62B454();
  v24 = v46;
  v25 = &v14[v20[7]];
  *(_OWORD *)v25 = v45;
  *((_OWORD *)v25 + 1) = v24;
  v48 = 4;
  sub_1DC510CA0();
  sub_1DC62B454();
  v26 = (uint64_t)v43;
  *(_DWORD *)&v14[v20[8]] = v45;
  v48 = 5;
  sub_1DC510E20();
  sub_1DC62B400();
  v27 = BYTE4(v45);
  v28 = &v14[v20[9]];
  *(_DWORD *)v28 = v45;
  v28[4] = v27;
  v48 = 6;
  sub_1DC4BEF94();
  sub_1DC62B454();
  v29 = *((_QWORD *)&v45 + 1);
  v30 = v46;
  v31 = &v14[v20[10]];
  *v31 = v45;
  *((_QWORD *)v31 + 1) = v29;
  *((_QWORD *)v31 + 2) = v30;
  v48 = 7;
  sub_1DC4C8FC0();
  sub_1DC62B400();
  (*(void (**)(char *, uint64_t))(v17 + 8))(v42, v18);
  v32 = &v14[*(int *)(v41 + 44)];
  v33 = v46;
  *(_OWORD *)v32 = v45;
  *((_OWORD *)v32 + 1) = v33;
  *((_OWORD *)v32 + 2) = v47;
  sub_1DC564D4C((uint64_t)v14, v36);
  __swift_destroy_boxed_opaque_existential_1(v26);
  return sub_1DC564D90((uint64_t)v14);
}

void sub_1DC564CF0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1DC564660();
    v7 = a3(a1, &type metadata for CustomItemExposureEvent.Model.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1DC564D4C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for CustomItemExposureEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DC564D90(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for CustomItemExposureEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1DC564DCC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return CustomItemExposureEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_1DC564DE0(_QWORD *a1)
{
  return CustomItemExposureEvent.Model.encode(to:)(a1);
}

uint64_t sub_1DC564DF4@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4B2C68(&qword_1F03690B0, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1F036CDA8, a1);
}

uint64_t sub_1DC564E18@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4B2C68(&qword_1F03690B8, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1F036CDC0, a1);
}

uint64_t sub_1DC564E3C@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v4 = *MEMORY[0x1E0CF8128];
  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 104))(a2, v4, v5);
  v6 = a2 + a1[5];
  sub_1DC4B66A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 104))(v6, v4, v7);
  v8 = a2 + a1[6];
  sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 104))(v8, v4, v9);
  v10 = a2 + a1[7];
  sub_1DC4B4B50(0, &qword_1F036CDD8, (void (*)(void))sub_1DC56374C, (void (*)(void))sub_1DC563790);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 104))(v10, v4, v11);
  v12 = a2 + a1[8];
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E7D0, (void (*)(void))sub_1DC510CA0, (void (*)(void))sub_1DC510CE4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 104))(v12, v4, v13);
  v14 = a2 + a1[9];
  v15 = *MEMORY[0x1E0CF8120];
  sub_1DC4B4B50(0, &qword_1EDB0E7E8, (void (*)(void))sub_1DC510E20, (void (*)(void))sub_1DC510E64);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 104))(v14, v15, v16);
  v17 = a2 + a1[10];
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 104))(v17, v4, v18);
  v19 = a2 + a1[11];
  sub_1DC4B4B50(0, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 104))(v19, v15, v20);
}

uint64_t *initializeBufferWithCopyOfBuffer for CustomItemExposureEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v36 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v36 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_1DC4B6600();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    sub_1DC4B66A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = a3[6];
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
    v16 = a3[7];
    v17 = (char *)a1 + v16;
    v18 = (char *)a2 + v16;
    sub_1DC4B4B50(0, &qword_1F036CDD8, (void (*)(void))sub_1DC56374C, (void (*)(void))sub_1DC563790);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
    v20 = a3[8];
    v21 = (char *)a1 + v20;
    v22 = (char *)a2 + v20;
    sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E7D0, (void (*)(void))sub_1DC510CA0, (void (*)(void))sub_1DC510CE4);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v21, v22, v23);
    v24 = a3[9];
    v25 = (char *)a1 + v24;
    v26 = (char *)a2 + v24;
    sub_1DC4B4B50(0, &qword_1EDB0E7E8, (void (*)(void))sub_1DC510E20, (void (*)(void))sub_1DC510E64);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v25, v26, v27);
    v28 = a3[10];
    v29 = (char *)a1 + v28;
    v30 = (char *)a2 + v28;
    sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 16))(v29, v30, v31);
    v32 = a3[11];
    v33 = (char *)a1 + v32;
    v34 = (char *)a2 + v32;
    sub_1DC4B4B50(0, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 16))(v33, v34, v35);
  }
  return a1;
}

uint64_t destroy for CustomItemExposureEvent(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + a2[5];
  sub_1DC4B66A4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = a1 + a2[6];
  sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  v9 = a1 + a2[7];
  sub_1DC4B4B50(0, &qword_1F036CDD8, (void (*)(void))sub_1DC56374C, (void (*)(void))sub_1DC563790);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  v11 = a1 + a2[8];
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E7D0, (void (*)(void))sub_1DC510CA0, (void (*)(void))sub_1DC510CE4);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
  v13 = a1 + a2[9];
  sub_1DC4B4B50(0, &qword_1EDB0E7E8, (void (*)(void))sub_1DC510E20, (void (*)(void))sub_1DC510E64);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v13, v14);
  v15 = a1 + a2[10];
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v15, v16);
  v17 = a1 + a2[11];
  sub_1DC4B4B50(0, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(v17, v18);
}

uint64_t initializeWithCopy for CustomItemExposureEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1DC4B66A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1DC4B4B50(0, &qword_1F036CDD8, (void (*)(void))sub_1DC56374C, (void (*)(void))sub_1DC563790);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E7D0, (void (*)(void))sub_1DC510CA0, (void (*)(void))sub_1DC510CE4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1DC4B4B50(0, &qword_1EDB0E7E8, (void (*)(void))sub_1DC510E20, (void (*)(void))sub_1DC510E64);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 16))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1DC4B4B50(0, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 16))(v32, v33, v34);
  return a1;
}

uint64_t assignWithCopy for CustomItemExposureEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1DC4B66A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 24))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1DC4B4B50(0, &qword_1F036CDD8, (void (*)(void))sub_1DC56374C, (void (*)(void))sub_1DC563790);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 24))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E7D0, (void (*)(void))sub_1DC510CA0, (void (*)(void))sub_1DC510CE4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 24))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1DC4B4B50(0, &qword_1EDB0E7E8, (void (*)(void))sub_1DC510E20, (void (*)(void))sub_1DC510E64);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 24))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 24))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1DC4B4B50(0, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 24))(v32, v33, v34);
  return a1;
}

uint64_t initializeWithTake for CustomItemExposureEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1DC4B66A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1DC4B4B50(0, &qword_1F036CDD8, (void (*)(void))sub_1DC56374C, (void (*)(void))sub_1DC563790);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E7D0, (void (*)(void))sub_1DC510CA0, (void (*)(void))sub_1DC510CE4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1DC4B4B50(0, &qword_1EDB0E7E8, (void (*)(void))sub_1DC510E20, (void (*)(void))sub_1DC510E64);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 32))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1DC4B4B50(0, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 32))(v32, v33, v34);
  return a1;
}

uint64_t assignWithTake for CustomItemExposureEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1DC4B66A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 40))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1DC4B4B50(0, &qword_1F036CDD8, (void (*)(void))sub_1DC56374C, (void (*)(void))sub_1DC563790);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 40))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E7D0, (void (*)(void))sub_1DC510CA0, (void (*)(void))sub_1DC510CE4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 40))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1DC4B4B50(0, &qword_1EDB0E7E8, (void (*)(void))sub_1DC510E20, (void (*)(void))sub_1DC510E64);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 40))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 40))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1DC4B4B50(0, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 40))(v32, v33, v34);
  return a1;
}

uint64_t getEnumTagSinglePayload for CustomItemExposureEvent()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC565E28(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  sub_1DC4B6600();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    sub_1DC4B66A4();
    v12 = *(_QWORD *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
    {
      v8 = v11;
      v13 = a3[5];
    }
    else
    {
      sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
      v12 = *(_QWORD *)(v14 - 8);
      if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
      {
        v8 = v14;
        v13 = a3[6];
      }
      else
      {
        sub_1DC4B4B50(0, &qword_1F036CDD8, (void (*)(void))sub_1DC56374C, (void (*)(void))sub_1DC563790);
        v12 = *(_QWORD *)(v15 - 8);
        if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
        {
          v8 = v15;
          v13 = a3[7];
        }
        else
        {
          sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E7D0, (void (*)(void))sub_1DC510CA0, (void (*)(void))sub_1DC510CE4);
          v12 = *(_QWORD *)(v16 - 8);
          if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
          {
            v8 = v16;
            v13 = a3[8];
          }
          else
          {
            sub_1DC4B4B50(0, &qword_1EDB0E7E8, (void (*)(void))sub_1DC510E20, (void (*)(void))sub_1DC510E64);
            v12 = *(_QWORD *)(v17 - 8);
            if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
            {
              v8 = v17;
              v13 = a3[9];
            }
            else
            {
              sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
              v12 = *(_QWORD *)(v18 - 8);
              if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
              {
                v8 = v18;
                v13 = a3[10];
              }
              else
              {
                sub_1DC4B4B50(0, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
                v8 = v19;
                v12 = *(_QWORD *)(v19 - 8);
                v13 = a3[11];
              }
            }
          }
        }
      }
    }
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t storeEnumTagSinglePayload for CustomItemExposureEvent()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC566040(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  sub_1DC4B6600();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    sub_1DC4B66A4();
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = a4[5];
    }
    else
    {
      sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
      v14 = *(_QWORD *)(v16 - 8);
      if (*(_DWORD *)(v14 + 84) == a3)
      {
        v10 = v16;
        v15 = a4[6];
      }
      else
      {
        sub_1DC4B4B50(0, &qword_1F036CDD8, (void (*)(void))sub_1DC56374C, (void (*)(void))sub_1DC563790);
        v14 = *(_QWORD *)(v17 - 8);
        if (*(_DWORD *)(v14 + 84) == a3)
        {
          v10 = v17;
          v15 = a4[7];
        }
        else
        {
          sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E7D0, (void (*)(void))sub_1DC510CA0, (void (*)(void))sub_1DC510CE4);
          v14 = *(_QWORD *)(v18 - 8);
          if (*(_DWORD *)(v14 + 84) == a3)
          {
            v10 = v18;
            v15 = a4[8];
          }
          else
          {
            sub_1DC4B4B50(0, &qword_1EDB0E7E8, (void (*)(void))sub_1DC510E20, (void (*)(void))sub_1DC510E64);
            v14 = *(_QWORD *)(v19 - 8);
            if (*(_DWORD *)(v14 + 84) == a3)
            {
              v10 = v19;
              v15 = a4[9];
            }
            else
            {
              sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
              v14 = *(_QWORD *)(v20 - 8);
              if (*(_DWORD *)(v14 + 84) == a3)
              {
                v10 = v20;
                v15 = a4[10];
              }
              else
              {
                sub_1DC4B4B50(0, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
                v10 = v21;
                v14 = *(_QWORD *)(v21 - 8);
                v15 = a4[11];
              }
            }
          }
        }
      }
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_1DC566254()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;

  sub_1DC4B6600();
  if (v0 <= 0x3F)
  {
    sub_1DC4B66A4();
    if (v1 <= 0x3F)
    {
      sub_1DC4B4B50(319, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
      if (v2 <= 0x3F)
      {
        sub_1DC4B4B50(319, &qword_1F036CDD8, (void (*)(void))sub_1DC56374C, (void (*)(void))sub_1DC563790);
        if (v3 <= 0x3F)
        {
          sub_1DC4B4B50(319, (unint64_t *)&qword_1EDB0E7D0, (void (*)(void))sub_1DC510CA0, (void (*)(void))sub_1DC510CE4);
          if (v4 <= 0x3F)
          {
            sub_1DC4B4B50(319, &qword_1EDB0E7E8, (void (*)(void))sub_1DC510E20, (void (*)(void))sub_1DC510E64);
            if (v5 <= 0x3F)
            {
              sub_1DC4B4B50(319, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
              if (v6 <= 0x3F)
              {
                sub_1DC4B4B50(319, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
                if (v7 <= 0x3F)
                  swift_initStructMetadata();
              }
            }
          }
        }
      }
    }
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for CustomItemExposureEvent.Model(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  __int128 v34;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v33 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v33 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1DC62ABA8();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_1DC62ABC0();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = a3[6];
    v13 = a3[7];
    v14 = (char *)a1 + v12;
    v15 = (char *)a2 + v12;
    v16 = *((_QWORD *)v15 + 1);
    *(_QWORD *)v14 = *(_QWORD *)v15;
    *((_QWORD *)v14 + 1) = v16;
    *((_WORD *)v14 + 8) = *((_WORD *)v15 + 8);
    v17 = (uint64_t *)((char *)a1 + v13);
    v18 = (uint64_t *)((char *)a2 + v13);
    v19 = v18[1];
    *v17 = *v18;
    v17[1] = v19;
    v20 = v18[3];
    v17[2] = v18[2];
    v17[3] = v20;
    v21 = a3[9];
    *(_DWORD *)((char *)a1 + a3[8]) = *(_DWORD *)((char *)a2 + a3[8]);
    v22 = (char *)a1 + v21;
    v23 = (char *)a2 + v21;
    *(_DWORD *)v22 = *(_DWORD *)v23;
    v22[4] = v23[4];
    v24 = a3[10];
    v25 = a3[11];
    v26 = (char *)a1 + v24;
    v27 = (char *)a2 + v24;
    *v26 = *v27;
    v28 = *((_QWORD *)v27 + 2);
    *((_QWORD *)v26 + 1) = *((_QWORD *)v27 + 1);
    *((_QWORD *)v26 + 2) = v28;
    v29 = (char *)a1 + v25;
    v30 = (char *)a2 + v25;
    v31 = *(uint64_t *)((char *)a2 + v25 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v31)
    {
      *v29 = *v30;
      *((_QWORD *)v29 + 1) = *((_QWORD *)v30 + 1);
      *((_QWORD *)v29 + 2) = v31;
      *((_QWORD *)v29 + 3) = *((_QWORD *)v30 + 3);
      v32 = *((_QWORD *)v30 + 5);
      *((_QWORD *)v29 + 4) = *((_QWORD *)v30 + 4);
      *((_QWORD *)v29 + 5) = v32;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v34 = *((_OWORD *)v30 + 1);
      *(_OWORD *)v29 = *(_OWORD *)v30;
      *((_OWORD *)v29 + 1) = v34;
      *((_OWORD *)v29 + 2) = *((_OWORD *)v30 + 2);
    }
  }
  return a1;
}

uint64_t destroy for CustomItemExposureEvent.Model(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  v4 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + *(int *)(a2 + 20);
  v6 = sub_1DC62ABC0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  result = *(_QWORD *)(a1 + *(int *)(a2 + 44) + 16);
  if (result)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for CustomItemExposureEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  __int128 v32;

  v6 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1DC62ABC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = a3[6];
  v12 = a3[7];
  v13 = a1 + v11;
  v14 = a2 + v11;
  v15 = *(_QWORD *)(v14 + 8);
  *(_QWORD *)v13 = *(_QWORD *)v14;
  *(_QWORD *)(v13 + 8) = v15;
  *(_WORD *)(v13 + 16) = *(_WORD *)(v14 + 16);
  v16 = (_QWORD *)(a1 + v12);
  v17 = (_QWORD *)(a2 + v12);
  v18 = v17[1];
  *v16 = *v17;
  v16[1] = v18;
  v19 = v17[3];
  v16[2] = v17[2];
  v16[3] = v19;
  v20 = a3[9];
  *(_DWORD *)(a1 + a3[8]) = *(_DWORD *)(a2 + a3[8]);
  v21 = a1 + v20;
  v22 = a2 + v20;
  *(_DWORD *)v21 = *(_DWORD *)v22;
  *(_BYTE *)(v21 + 4) = *(_BYTE *)(v22 + 4);
  v23 = a3[10];
  v24 = a3[11];
  v25 = a1 + v23;
  v26 = a2 + v23;
  *(_BYTE *)v25 = *(_BYTE *)v26;
  v27 = *(_QWORD *)(v26 + 16);
  *(_QWORD *)(v25 + 8) = *(_QWORD *)(v26 + 8);
  *(_QWORD *)(v25 + 16) = v27;
  v28 = a1 + v24;
  v29 = a2 + v24;
  v30 = *(_QWORD *)(a2 + v24 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v30)
  {
    *(_BYTE *)v28 = *(_BYTE *)v29;
    *(_QWORD *)(v28 + 8) = *(_QWORD *)(v29 + 8);
    *(_QWORD *)(v28 + 16) = v30;
    *(_QWORD *)(v28 + 24) = *(_QWORD *)(v29 + 24);
    v31 = *(_QWORD *)(v29 + 40);
    *(_QWORD *)(v28 + 32) = *(_QWORD *)(v29 + 32);
    *(_QWORD *)(v28 + 40) = v31;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v32 = *(_OWORD *)(v29 + 16);
    *(_OWORD *)v28 = *(_OWORD *)v29;
    *(_OWORD *)(v28 + 16) = v32;
    *(_OWORD *)(v28 + 32) = *(_OWORD *)(v29 + 32);
  }
  return a1;
}

uint64_t assignWithCopy for CustomItemExposureEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __int128 *v26;
  uint64_t v27;
  uint64_t v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;

  v6 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1DC62ABC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  *(_QWORD *)v12 = *(_QWORD *)(a2 + v11);
  *(_QWORD *)(v12 + 8) = *(_QWORD *)(a2 + v11 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v12 + 16) = *(_BYTE *)(v13 + 16);
  *(_BYTE *)(v12 + 17) = *(_BYTE *)(v13 + 17);
  v14 = a3[7];
  v15 = (_QWORD *)(a1 + v14);
  v16 = a2 + v14;
  *v15 = *(_QWORD *)(a2 + v14);
  v15[1] = *(_QWORD *)(a2 + v14 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v15[2] = *(_QWORD *)(v16 + 16);
  v15[3] = *(_QWORD *)(v16 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + a3[8]) = *(_DWORD *)(a2 + a3[8]);
  v17 = a3[9];
  v18 = a1 + v17;
  v19 = a2 + v17;
  v20 = *(_BYTE *)(v19 + 4);
  *(_DWORD *)v18 = *(_DWORD *)v19;
  *(_BYTE *)(v18 + 4) = v20;
  v21 = a3[10];
  v22 = a1 + v21;
  v23 = a2 + v21;
  *(_BYTE *)v22 = *(_BYTE *)v23;
  *(_QWORD *)(v22 + 8) = *(_QWORD *)(v23 + 8);
  *(_QWORD *)(v22 + 16) = *(_QWORD *)(v23 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v24 = a3[11];
  v25 = a1 + v24;
  v26 = (__int128 *)(a2 + v24);
  v27 = *(_QWORD *)(a1 + v24 + 16);
  v28 = *((_QWORD *)v26 + 2);
  if (v27)
  {
    if (v28)
    {
      *(_BYTE *)v25 = *(_BYTE *)v26;
      *(_QWORD *)(v25 + 8) = *((_QWORD *)v26 + 1);
      *(_QWORD *)(v25 + 16) = *((_QWORD *)v26 + 2);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_DWORD *)(v25 + 24) = *((_DWORD *)v26 + 6);
      *(_DWORD *)(v25 + 28) = *((_DWORD *)v26 + 7);
      *(_QWORD *)(v25 + 32) = *((_QWORD *)v26 + 4);
      *(_QWORD *)(v25 + 40) = *((_QWORD *)v26 + 5);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1DC4CDAF4(v25);
      v30 = v26[1];
      v29 = v26[2];
      *(_OWORD *)v25 = *v26;
      *(_OWORD *)(v25 + 16) = v30;
      *(_OWORD *)(v25 + 32) = v29;
    }
  }
  else if (v28)
  {
    *(_BYTE *)v25 = *(_BYTE *)v26;
    *(_QWORD *)(v25 + 8) = *((_QWORD *)v26 + 1);
    *(_QWORD *)(v25 + 16) = *((_QWORD *)v26 + 2);
    *(_DWORD *)(v25 + 24) = *((_DWORD *)v26 + 6);
    *(_DWORD *)(v25 + 28) = *((_DWORD *)v26 + 7);
    *(_QWORD *)(v25 + 32) = *((_QWORD *)v26 + 4);
    *(_QWORD *)(v25 + 40) = *((_QWORD *)v26 + 5);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v31 = *v26;
    v32 = v26[2];
    *(_OWORD *)(v25 + 16) = v26[1];
    *(_OWORD *)(v25 + 32) = v32;
    *(_OWORD *)v25 = v31;
  }
  return a1;
}

uint64_t initializeWithTake for CustomItemExposureEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _OWORD *v15;
  _OWORD *v16;
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _OWORD *v25;
  _OWORD *v26;
  __int128 v27;

  v6 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1DC62ABC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[6];
  v12 = a3[7];
  v13 = a1 + v11;
  v14 = a2 + v11;
  *(_OWORD *)v13 = *(_OWORD *)v14;
  *(_WORD *)(v13 + 16) = *(_WORD *)(v14 + 16);
  v15 = (_OWORD *)(a1 + v12);
  v16 = (_OWORD *)(a2 + v12);
  v17 = v16[1];
  *v15 = *v16;
  v15[1] = v17;
  v18 = a3[9];
  *(_DWORD *)(a1 + a3[8]) = *(_DWORD *)(a2 + a3[8]);
  v19 = a1 + v18;
  v20 = a2 + v18;
  *(_DWORD *)v19 = *(_DWORD *)v20;
  *(_BYTE *)(v19 + 4) = *(_BYTE *)(v20 + 4);
  v21 = a3[10];
  v22 = a3[11];
  v23 = a1 + v21;
  v24 = a2 + v21;
  *(_OWORD *)v23 = *(_OWORD *)v24;
  *(_QWORD *)(v23 + 16) = *(_QWORD *)(v24 + 16);
  v25 = (_OWORD *)(a1 + v22);
  v26 = (_OWORD *)(a2 + v22);
  v27 = v26[1];
  *v25 = *v26;
  v25[1] = v27;
  v25[2] = v26[2];
  return a1;
}

uint64_t assignWithTake for CustomItemExposureEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  __int128 v33;

  v6 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1DC62ABC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  v14 = *(_QWORD *)(a2 + v11 + 8);
  *(_QWORD *)v12 = *(_QWORD *)(a2 + v11);
  *(_QWORD *)(v12 + 8) = v14;
  swift_bridgeObjectRelease();
  *(_WORD *)(v12 + 16) = *(_WORD *)(v13 + 16);
  v15 = a3[7];
  v16 = (_QWORD *)(a1 + v15);
  v17 = a2 + v15;
  v18 = *(_QWORD *)(a2 + v15 + 8);
  *v16 = *(_QWORD *)(a2 + v15);
  v16[1] = v18;
  swift_bridgeObjectRelease();
  v19 = *(_QWORD *)(v17 + 24);
  v16[2] = *(_QWORD *)(v17 + 16);
  v16[3] = v19;
  swift_bridgeObjectRelease();
  v20 = a3[9];
  *(_DWORD *)(a1 + a3[8]) = *(_DWORD *)(a2 + a3[8]);
  v21 = a1 + v20;
  v22 = a2 + v20;
  *(_DWORD *)v21 = *(_DWORD *)v22;
  *(_BYTE *)(v21 + 4) = *(_BYTE *)(v22 + 4);
  v23 = a3[10];
  v24 = a1 + v23;
  v25 = a2 + v23;
  *(_BYTE *)v24 = *(_BYTE *)v25;
  v27 = *(_QWORD *)(v25 + 8);
  v26 = *(_QWORD *)(v25 + 16);
  *(_QWORD *)(v24 + 8) = v27;
  *(_QWORD *)(v24 + 16) = v26;
  swift_bridgeObjectRelease();
  v28 = a3[11];
  v29 = a1 + v28;
  v30 = a2 + v28;
  if (!*(_QWORD *)(a1 + v28 + 16))
    goto LABEL_5;
  v31 = *(_QWORD *)(v30 + 16);
  if (!v31)
  {
    sub_1DC4CDAF4(v29);
LABEL_5:
    v33 = *(_OWORD *)(v30 + 16);
    *(_OWORD *)v29 = *(_OWORD *)v30;
    *(_OWORD *)(v29 + 16) = v33;
    *(_OWORD *)(v29 + 32) = *(_OWORD *)(v30 + 32);
    return a1;
  }
  *(_BYTE *)v29 = *(_BYTE *)v30;
  *(_QWORD *)(v29 + 8) = *(_QWORD *)(v30 + 8);
  *(_QWORD *)(v29 + 16) = v31;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v29 + 24) = *(_QWORD *)(v30 + 24);
  v32 = *(_QWORD *)(v30 + 40);
  *(_QWORD *)(v29 + 32) = *(_QWORD *)(v30 + 32);
  *(_QWORD *)(v29 + 40) = v32;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for CustomItemExposureEvent.Model()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC566CFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v14;

  v6 = sub_1DC62ABA8();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  v11 = sub_1DC62ABC0();
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  v14 = *(_QWORD *)(a1 + *(int *)(a3 + 24) + 8);
  if (v14 >= 0xFFFFFFFF)
    LODWORD(v14) = -1;
  return (v14 + 1);
}

uint64_t storeEnumTagSinglePayload for CustomItemExposureEvent.Model()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC566DB4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t result;
  uint64_t v14;

  v8 = sub_1DC62ABA8();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
    return v11(v12, a2, a2, v10);
  }
  result = sub_1DC62ABC0();
  v14 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = result;
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    return v11(v12, a2, a2, v10);
  }
  *(_QWORD *)(a1 + *(int *)(a4 + 24) + 8) = (a2 - 1);
  return result;
}

uint64_t sub_1DC566E5C()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_1DC62ABA8();
  if (v1 <= 0x3F)
  {
    result = sub_1DC62ABC0();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for CustomItemExposureEvent.Model.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 7 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 7) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF9)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF8)
    return ((uint64_t (*)(void))((char *)&loc_1DC566F6C + 4 * byte_1DC63A17D[v4]))();
  *a1 = a2 + 7;
  return ((uint64_t (*)(void))((char *)sub_1DC566FA0 + 4 * byte_1DC63A178[v4]))();
}

uint64_t sub_1DC566FA0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC566FA8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DC566FB0);
  return result;
}

uint64_t sub_1DC566FBC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DC566FC4);
  *(_BYTE *)result = a2 + 7;
  return result;
}

uint64_t sub_1DC566FC8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC566FD0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CustomItemExposureEvent.Model.CodingKeys()
{
  return &type metadata for CustomItemExposureEvent.Model.CodingKeys;
}

unint64_t sub_1DC566FF0()
{
  unint64_t result;

  result = qword_1F036CF58;
  if (!qword_1F036CF58)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC63A3C4, &type metadata for CustomItemExposureEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036CF58);
  }
  return result;
}

unint64_t sub_1DC567038()
{
  unint64_t result;

  result = qword_1F036CF60;
  if (!qword_1F036CF60)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC63A334, &type metadata for CustomItemExposureEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036CF60);
  }
  return result;
}

unint64_t sub_1DC567080()
{
  unint64_t result;

  result = qword_1F036CF68;
  if (!qword_1F036CF68)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC63A35C, &type metadata for CustomItemExposureEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036CF68);
  }
  return result;
}

uint64_t sub_1DC5670C4(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x746144746E657665 && a2 == 0xE900000000000061;
  if (v2 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x74614464656D6974 && a2 == 0xE900000000000061 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6174614477656976 && a2 == 0xE800000000000000 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x74496D6F74737563 && a2 == 0xEE00617461446D65 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001DC64C680 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001DC64C6A0 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x6174614464656566 && a2 == 0xE800000000000000 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x74614470756F7267 && a2 == 0xE900000000000061)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else
  {
    v6 = sub_1DC62B520();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 7;
    else
      return 8;
  }
}

void __swiftcall CampaignData.init(campaignID:campaignType:creativeID:)(StocksAnalytics::CampaignData *__return_ptr retstr, Swift::String campaignID, Swift::String_optional campaignType, Swift::String_optional creativeID)
{
  retstr->campaignID = campaignID;
  retstr->campaignType = campaignType;
  retstr->creativeID = creativeID;
}

uint64_t CampaignData.campaignID.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t CampaignData.campaignID.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*CampaignData.campaignID.modify())()
{
  return nullsub_1;
}

uint64_t CampaignData.campaignType.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t CampaignData.campaignType.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return result;
}

uint64_t (*CampaignData.campaignType.modify())()
{
  return nullsub_1;
}

uint64_t CampaignData.creativeID.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t CampaignData.creativeID.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 32) = a1;
  *(_QWORD *)(v2 + 40) = a2;
  return result;
}

uint64_t (*CampaignData.creativeID.modify())()
{
  return nullsub_1;
}

uint64_t sub_1DC567598()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x6576697461657263;
  if (*v0 == 1)
    v1 = 0x6E676961706D6163;
  if (*v0)
    return v1;
  else
    return 0x6E676961706D6163;
}

uint64_t sub_1DC5675EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1DC567C90(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DC567610()
{
  sub_1DC5677D0();
  return sub_1DC62B604();
}

uint64_t sub_1DC567638()
{
  sub_1DC5677D0();
  return sub_1DC62B610();
}

uint64_t CampaignData.encode(to:)(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v12[6];
  char v13;
  char v14;
  char v15;

  sub_1DC567A50(0, &qword_1F036CF70, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)v12 - v6;
  v8 = v1[2];
  v12[3] = v1[3];
  v12[4] = v8;
  v9 = v1[4];
  v12[1] = v1[5];
  v12[2] = v9;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC5677D0();
  sub_1DC62B5F8();
  v15 = 0;
  v10 = v12[5];
  sub_1DC62B4B4();
  if (!v10)
  {
    v14 = 1;
    sub_1DC62B478();
    v13 = 2;
    sub_1DC62B478();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_1DC5677D0()
{
  unint64_t result;

  result = qword_1F036CF78;
  if (!qword_1F036CF78)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC63A5B4, &type metadata for CampaignData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036CF78);
  }
  return result;
}

uint64_t CampaignData.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(char *, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  char v25;
  char v26;

  sub_1DC567A50(0, &qword_1F036CF80, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v22 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC5677D0();
  sub_1DC62B5E0();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    v26 = 0;
    v10 = sub_1DC62B424();
    v13 = v12;
    v23 = v10;
    v25 = 1;
    swift_bridgeObjectRetain();
    v14 = sub_1DC62B3E8();
    v16 = v15;
    v22 = v14;
    v24 = 2;
    swift_bridgeObjectRetain();
    v17 = sub_1DC62B3E8();
    v19 = v18;
    v20 = *(void (**)(char *, uint64_t))(v7 + 8);
    v21 = v17;
    v20(v9, v6);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *a2 = v23;
    a2[1] = v13;
    a2[2] = v22;
    a2[3] = v16;
    a2[4] = v21;
    a2[5] = v19;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void sub_1DC567A50(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1DC5677D0();
    v7 = a3(a1, &type metadata for CampaignData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1DC567AB4@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return CampaignData.init(from:)(a1, a2);
}

uint64_t sub_1DC567AC8(_QWORD *a1)
{
  return CampaignData.encode(to:)(a1);
}

ValueMetadata *type metadata accessor for CampaignData()
{
  return &type metadata for CampaignData;
}

uint64_t storeEnumTagSinglePayload for CampaignData.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1DC567B38 + 4 * byte_1DC63A441[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1DC567B6C + 4 * byte_1DC63A43C[v4]))();
}

uint64_t sub_1DC567B6C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC567B74(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DC567B7CLL);
  return result;
}

uint64_t sub_1DC567B88(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DC567B90);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1DC567B94(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC567B9C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CampaignData.CodingKeys()
{
  return &type metadata for CampaignData.CodingKeys;
}

unint64_t sub_1DC567BBC()
{
  unint64_t result;

  result = qword_1F036CF88;
  if (!qword_1F036CF88)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC63A58C, &type metadata for CampaignData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036CF88);
  }
  return result;
}

unint64_t sub_1DC567C04()
{
  unint64_t result;

  result = qword_1F036CF90;
  if (!qword_1F036CF90)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC63A4FC, &type metadata for CampaignData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036CF90);
  }
  return result;
}

unint64_t sub_1DC567C4C()
{
  unint64_t result;

  result = qword_1F036CF98;
  if (!qword_1F036CF98)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC63A524, &type metadata for CampaignData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036CF98);
  }
  return result;
}

uint64_t sub_1DC567C90(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6E676961706D6163 && a2 == 0xEA00000000004449;
  if (v2 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E676961706D6163 && a2 == 0xEC00000065707954 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6576697461657263 && a2 == 0xEA00000000004449)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_1DC62B520();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_1DC567E04(uint64_t a1)
{
  return sub_1DC4BE784(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], qword_1EDB10880, MEMORY[0x1E0CF8078]);
}

uint64_t static ArticleEngagementEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C2FE8(&qword_1EDB10898, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1EDB10880, a1);
}

uint64_t sub_1DC567E44(uint64_t a1)
{
  return sub_1DC4BE784(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], qword_1EDB108A0, MEMORY[0x1E0CF8380]);
}

uint64_t static ArticleEngagementEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C2FE8(&qword_1EDB0E340, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1EDB108A0, a1);
}

uint64_t ArticleEngagementEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C37DC((uint64_t (*)(_QWORD))sub_1DC4B6600, a1);
}

uint64_t ArticleEngagementEvent.eventData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  sub_1DC4B6600();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*ArticleEngagementEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t ArticleEngagementEvent.newsArticleData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleEngagementEvent(0) + 20);
  sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t type metadata accessor for ArticleEngagementEvent(uint64_t a1)
{
  return sub_1DC4B385C(a1, (uint64_t *)&unk_1EDB0E348);
}

uint64_t ArticleEngagementEvent.newsArticleData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleEngagementEvent(0) + 20);
  sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*ArticleEngagementEvent.newsArticleData.modify())()
{
  type metadata accessor for ArticleEngagementEvent(0);
  return nullsub_1;
}

uint64_t ArticleEngagementEvent.userArticleContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleEngagementEvent(0) + 24);
  sub_1DC4B4B50(0, &qword_1EDB0E820, (void (*)(void))sub_1DC4F4A54, (void (*)(void))sub_1DC4F4A98);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t ArticleEngagementEvent.userArticleContextData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleEngagementEvent(0) + 24);
  sub_1DC4B4B50(0, &qword_1EDB0E820, (void (*)(void))sub_1DC4F4A54, (void (*)(void))sub_1DC4F4A98);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*ArticleEngagementEvent.userArticleContextData.modify())()
{
  type metadata accessor for ArticleEngagementEvent(0);
  return nullsub_1;
}

uint64_t ArticleEngagementEvent.channelData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleEngagementEvent(0) + 28);
  sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t ArticleEngagementEvent.channelData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ArticleEngagementEvent(0) + 28);
  sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*ArticleEngagementEvent.channelData.modify())()
{
  type metadata accessor for ArticleEngagementEvent(0);
  return nullsub_1;
}

uint64_t ArticleEngagementEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v2 = *MEMORY[0x1E0CF8128];
  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
  v4 = (int *)type metadata accessor for ArticleEngagementEvent(0);
  v5 = a1 + v4[5];
  sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 104))(v5, v2, v6);
  v7 = a1 + v4[6];
  sub_1DC4B4B50(0, &qword_1EDB0E820, (void (*)(void))sub_1DC4F4A54, (void (*)(void))sub_1DC4F4A98);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 104))(v7, v2, v8);
  v9 = a1 + v4[7];
  sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 104))(v9, v2, v10);
}

uint64_t ArticleEngagementEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C37DC((uint64_t (*)(_QWORD))MEMORY[0x1E0CF8670], a1);
}

uint64_t ArticleEngagementEvent.Model.newsArticleData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  char v12;
  char v13;
  char v14;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for ArticleEngagementEvent.Model(0) + 20));
  v5 = *v3;
  v4 = v3[1];
  v6 = v3[2];
  v7 = v3[3];
  v8 = *((_BYTE *)v3 + 32);
  v9 = v3[5];
  v10 = *((_BYTE *)v3 + 48);
  v11 = v3[7];
  v12 = *((_BYTE *)v3 + 64);
  v13 = *((_BYTE *)v3 + 65);
  v14 = *((_BYTE *)v3 + 66);
  LOBYTE(v3) = *((_BYTE *)v3 + 67);
  *(_QWORD *)a1 = v5;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  *(_BYTE *)(a1 + 32) = v8;
  *(_QWORD *)(a1 + 40) = v9;
  *(_BYTE *)(a1 + 48) = v10;
  *(_QWORD *)(a1 + 56) = v11;
  *(_BYTE *)(a1 + 64) = v12;
  *(_BYTE *)(a1 + 65) = v13;
  *(_BYTE *)(a1 + 66) = v14;
  *(_BYTE *)(a1 + 67) = (_BYTE)v3;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t ArticleEngagementEvent.Model.userArticleContextData.getter@<X0>(_WORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for ArticleEngagementEvent.Model(0);
  *a1 = *(_WORD *)(v1 + *(int *)(result + 24));
  return result;
}

uint64_t ArticleEngagementEvent.Model.channelData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for ArticleEngagementEvent.Model(0) + 28));
  v5 = *v3;
  v4 = v3[1];
  v6 = v3[2];
  v7 = v3[3];
  v8 = *((_BYTE *)v3 + 32);
  LOBYTE(v3) = *((_BYTE *)v3 + 33);
  *(_QWORD *)a1 = v5;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  *(_BYTE *)(a1 + 32) = v8;
  *(_BYTE *)(a1 + 33) = (_BYTE)v3;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

__n128 ArticleEngagementEvent.Model.init(eventData:newsArticleData:userArticleContextData:channelData:)@<Q0>(uint64_t a1@<X0>, __int128 *a2@<X1>, __int16 *a3@<X2>, __n128 *a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  char v13;
  char v14;
  uint64_t v15;
  int *v16;
  uint64_t v17;
  __n128 *v18;
  __n128 result;
  char v20;
  char v21;
  __int128 v22;
  __int16 v23;
  unsigned __int8 v24;
  unsigned __int8 v25;
  unint64_t v26;
  unint64_t v27;
  __n128 v28;

  v22 = *a2;
  v7 = *((_QWORD *)a2 + 2);
  v8 = *((_QWORD *)a2 + 3);
  v9 = *((_BYTE *)a2 + 32);
  v10 = *((_QWORD *)a2 + 5);
  v11 = *((_BYTE *)a2 + 48);
  v12 = *((_QWORD *)a2 + 7);
  v13 = *((_BYTE *)a2 + 64);
  v14 = *((_BYTE *)a2 + 65);
  v20 = *((_BYTE *)a2 + 67);
  v21 = *((_BYTE *)a2 + 66);
  v28 = *a4;
  v26 = a4[1].n128_u64[1];
  v27 = a4[1].n128_u64[0];
  v25 = a4[2].n128_u8[0];
  v23 = *a3;
  v24 = a4[2].n128_u8[1];
  v15 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(a5, a1, v15);
  v16 = (int *)type metadata accessor for ArticleEngagementEvent.Model(0);
  v17 = a5 + v16[5];
  *(_OWORD *)v17 = v22;
  *(_QWORD *)(v17 + 16) = v7;
  *(_QWORD *)(v17 + 24) = v8;
  *(_BYTE *)(v17 + 32) = v9;
  *(_QWORD *)(v17 + 40) = v10;
  *(_BYTE *)(v17 + 48) = v11;
  *(_QWORD *)(v17 + 56) = v12;
  *(_BYTE *)(v17 + 64) = v13;
  *(_BYTE *)(v17 + 65) = v14;
  *(_BYTE *)(v17 + 66) = v21;
  *(_BYTE *)(v17 + 67) = v20;
  *(_WORD *)(a5 + v16[6]) = v23;
  v18 = (__n128 *)(a5 + v16[7]);
  result = v28;
  *v18 = v28;
  v18[1].n128_u64[0] = v27;
  v18[1].n128_u64[1] = v26;
  v18[2].n128_u8[0] = v25;
  v18[2].n128_u8[1] = v24;
  return result;
}

uint64_t sub_1DC568554()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1DC568588 + 4 * byte_1DC63A610[*v0]))(0x746144746E657665, 0xE900000000000061);
}

uint64_t sub_1DC568588()
{
  return 0x697472417377656ELL;
}

unint64_t sub_1DC5685AC()
{
  return 0xD000000000000016;
}

uint64_t sub_1DC5685C8()
{
  return 0x446C656E6E616863;
}

uint64_t sub_1DC5685E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1DC56A20C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DC56860C()
{
  sub_1DC5688B8();
  return sub_1DC62B604();
}

uint64_t sub_1DC568634()
{
  sub_1DC5688B8();
  return sub_1DC62B610();
}

uint64_t ArticleEngagementEvent.Model.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int *v10;
  __int128 *v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  char v19;
  char v20;
  char v21;
  __int128 *v22;
  __int128 v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v28;
  __int128 v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  char v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  char v37;
  char v38;
  char v39;
  char v40;

  v3 = v1;
  sub_1DC568CA8(0, &qword_1F036CFA0, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v28 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC5688B8();
  sub_1DC62B5F8();
  LOBYTE(v29) = 0;
  sub_1DC62ABA8();
  sub_1DC4B6788(&qword_1EDB0E8A8, MEMORY[0x1E0CF8680]);
  sub_1DC62B4E4();
  if (!v2)
  {
    v10 = (int *)type metadata accessor for ArticleEngagementEvent.Model(0);
    v11 = (__int128 *)(v3 + v10[5]);
    v12 = *v11;
    v13 = *((_QWORD *)v11 + 2);
    v14 = *((_QWORD *)v11 + 3);
    v15 = *((_BYTE *)v11 + 32);
    v16 = *((_QWORD *)v11 + 5);
    v17 = *((_BYTE *)v11 + 48);
    v18 = *((_QWORD *)v11 + 7);
    v19 = *((_BYTE *)v11 + 64);
    v20 = *((_BYTE *)v11 + 65);
    v21 = *((_BYTE *)v11 + 66);
    LOBYTE(v11) = *((_BYTE *)v11 + 67);
    v29 = v12;
    v30 = v13;
    v31 = v14;
    v32 = v15;
    v34 = v16;
    v35 = v17;
    v36 = v18;
    v37 = v19;
    v38 = v20;
    v39 = v21;
    v40 = (char)v11;
    HIBYTE(v28) = 1;
    sub_1DC4C18E8();
    sub_1DC62B4E4();
    LOWORD(v29) = *(_WORD *)(v3 + v10[6]);
    HIBYTE(v28) = 2;
    sub_1DC4F4A98();
    sub_1DC62B4E4();
    v22 = (__int128 *)(v3 + v10[7]);
    v23 = *v22;
    v24 = *((_QWORD *)v22 + 2);
    v25 = *((_QWORD *)v22 + 3);
    v26 = *((_BYTE *)v22 + 32);
    LOBYTE(v22) = *((_BYTE *)v22 + 33);
    v29 = v23;
    v30 = v24;
    v31 = v25;
    v32 = v26;
    v33 = (char)v22;
    HIBYTE(v28) = 3;
    sub_1DC4C8E84();
    sub_1DC62B4E4();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1DC5688B8()
{
  unint64_t result;

  result = qword_1EDB0E4D8;
  if (!qword_1EDB0E4D8)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC63A81C, &type metadata for ArticleEngagementEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB0E4D8);
  }
  return result;
}

uint64_t ArticleEngagementEvent.Model.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  char v22;
  char v23;
  char v24;
  char v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  char v30;
  uint64_t v31;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  _QWORD *v39;
  __int128 v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  char v44;
  uint64_t v45;
  char v46;
  uint64_t v47;
  char v48;
  char v49;
  char v50;
  char v51;
  char v52;

  v34 = a2;
  v3 = sub_1DC62ABA8();
  v35 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v38 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC568CA8(0, &qword_1EDB0E548, MEMORY[0x1E0DED048]);
  v36 = v5;
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v33 - v7;
  v9 = (int *)type metadata accessor for ArticleEngagementEvent.Model(0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC5688B8();
  v37 = v8;
  v12 = (uint64_t)v39;
  sub_1DC62B5E0();
  if (v12)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v39 = a1;
  v13 = v11;
  v14 = v35;
  LOBYTE(v40) = 0;
  sub_1DC4B6788(&qword_1EDB0E278, MEMORY[0x1E0CF8688]);
  v15 = v36;
  sub_1DC62B454();
  (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v13, v38, v3);
  v52 = 1;
  sub_1DC4C18A0();
  sub_1DC62B454();
  v16 = v41;
  v17 = v42;
  v18 = v43;
  v19 = v45;
  v20 = v46;
  v21 = v47;
  v22 = v48;
  v23 = v49;
  v24 = v50;
  v25 = v51;
  v26 = &v13[v9[5]];
  *(_OWORD *)v26 = v40;
  *((_QWORD *)v26 + 2) = v16;
  *((_QWORD *)v26 + 3) = v17;
  v26[32] = v18;
  *((_QWORD *)v26 + 5) = v19;
  v26[48] = v20;
  *((_QWORD *)v26 + 7) = v21;
  v26[64] = v22;
  v26[65] = v23;
  v26[66] = v24;
  v26[67] = v25;
  v52 = 2;
  sub_1DC4F4A54();
  sub_1DC62B454();
  *(_WORD *)&v13[v9[6]] = v40;
  v52 = 3;
  sub_1DC4C8E40();
  sub_1DC62B454();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v37, v15);
  v27 = v41;
  v28 = v42;
  v29 = v43;
  v30 = v44;
  v31 = v9[7];
  *(_OWORD *)v31 = v40;
  *(_QWORD *)(v31 + 16) = v27;
  *(_QWORD *)(v31 + 24) = v28;
  *(_BYTE *)(v31 + 32) = v29;
  *(_BYTE *)(v31 + 33) = v30;
  sub_1DC568D04(0, v34);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v39);
  return sub_1DC568D48(0);
}

void sub_1DC568CA8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1DC5688B8();
    v7 = a3(a1, &type metadata for ArticleEngagementEvent.Model.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1DC568D04(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ArticleEngagementEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DC568D48(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for ArticleEngagementEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1DC568D84@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return ArticleEngagementEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_1DC568D98(_QWORD *a1)
{
  return ArticleEngagementEvent.Model.encode(to:)(a1);
}

uint64_t sub_1DC568DAC@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4B2C68(&qword_1EDB10898, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1EDB10880, a1);
}

uint64_t sub_1DC568DD0@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4B2C68(&qword_1EDB0E340, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1EDB108A0, a1);
}

uint64_t sub_1DC568DF4@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v4 = *MEMORY[0x1E0CF8128];
  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 104))(a2, v4, v5);
  v6 = a2 + a1[5];
  sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 104))(v6, v4, v7);
  v8 = a2 + a1[6];
  sub_1DC4B4B50(0, &qword_1EDB0E820, (void (*)(void))sub_1DC4F4A54, (void (*)(void))sub_1DC4F4A98);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 104))(v8, v4, v9);
  v10 = a2 + a1[7];
  sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 104))(v10, v4, v11);
}

uint64_t *initializeBufferWithCopyOfBuffer for ArticleEngagementEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v20 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v20 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_1DC4B6600();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = a3[6];
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    sub_1DC4B4B50(0, &qword_1EDB0E820, (void (*)(void))sub_1DC4F4A54, (void (*)(void))sub_1DC4F4A98);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
    v16 = a3[7];
    v17 = (char *)a1 + v16;
    v18 = (char *)a2 + v16;
    sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
  }
  return a1;
}

uint64_t destroy for ArticleEngagementEvent(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + a2[5];
  sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = a1 + a2[6];
  sub_1DC4B4B50(0, &qword_1EDB0E820, (void (*)(void))sub_1DC4F4A54, (void (*)(void))sub_1DC4F4A98);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  v9 = a1 + a2[7];
  sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
}

uint64_t initializeWithCopy for ArticleEngagementEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1DC4B4B50(0, &qword_1EDB0E820, (void (*)(void))sub_1DC4F4A54, (void (*)(void))sub_1DC4F4A98);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
  return a1;
}

uint64_t assignWithCopy for ArticleEngagementEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1DC4B4B50(0, &qword_1EDB0E820, (void (*)(void))sub_1DC4F4A54, (void (*)(void))sub_1DC4F4A98);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 24))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 24))(v16, v17, v18);
  return a1;
}

uint64_t initializeWithTake for ArticleEngagementEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1DC4B4B50(0, &qword_1EDB0E820, (void (*)(void))sub_1DC4F4A54, (void (*)(void))sub_1DC4F4A98);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
  return a1;
}

uint64_t assignWithTake for ArticleEngagementEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1DC4B4B50(0, &qword_1EDB0E820, (void (*)(void))sub_1DC4F4A54, (void (*)(void))sub_1DC4F4A98);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 40))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 40))(v16, v17, v18);
  return a1;
}

uint64_t getEnumTagSinglePayload for ArticleEngagementEvent()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC56968C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  sub_1DC4B6600();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
    v12 = *(_QWORD *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
    {
      v8 = v11;
      v13 = a3[5];
    }
    else
    {
      sub_1DC4B4B50(0, &qword_1EDB0E820, (void (*)(void))sub_1DC4F4A54, (void (*)(void))sub_1DC4F4A98);
      v12 = *(_QWORD *)(v14 - 8);
      if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
      {
        v8 = v14;
        v13 = a3[6];
      }
      else
      {
        sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
        v8 = v15;
        v12 = *(_QWORD *)(v15 - 8);
        v13 = a3[7];
      }
    }
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t storeEnumTagSinglePayload for ArticleEngagementEvent()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC5697B4(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  sub_1DC4B6600();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = a4[5];
    }
    else
    {
      sub_1DC4B4B50(0, &qword_1EDB0E820, (void (*)(void))sub_1DC4F4A54, (void (*)(void))sub_1DC4F4A98);
      v14 = *(_QWORD *)(v16 - 8);
      if (*(_DWORD *)(v14 + 84) == a3)
      {
        v10 = v16;
        v15 = a4[6];
      }
      else
      {
        sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
        v10 = v17;
        v14 = *(_QWORD *)(v17 - 8);
        v15 = a4[7];
      }
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_1DC5698D8()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  sub_1DC4B6600();
  if (v0 <= 0x3F)
  {
    sub_1DC4B4B50(319, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
    if (v1 <= 0x3F)
    {
      sub_1DC4B4B50(319, &qword_1EDB0E820, (void (*)(void))sub_1DC4F4A54, (void (*)(void))sub_1DC4F4A98);
      if (v2 <= 0x3F)
      {
        sub_1DC4B4B50(319, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
        if (v3 <= 0x3F)
          swift_initStructMetadata();
      }
    }
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for ArticleEngagementEvent.Model(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v19 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v19 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1DC62ABA8();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = a3[6];
    v10 = (char *)a1 + v8;
    v11 = (char *)a2 + v8;
    v12 = *((_QWORD *)v11 + 1);
    *(_QWORD *)v10 = *(_QWORD *)v11;
    *((_QWORD *)v10 + 1) = v12;
    v10[32] = v11[32];
    *((_QWORD *)v10 + 5) = *((_QWORD *)v11 + 5);
    v10[48] = v11[48];
    *((_QWORD *)v10 + 7) = *((_QWORD *)v11 + 7);
    v13 = *((_QWORD *)v11 + 3);
    *((_QWORD *)v10 + 2) = *((_QWORD *)v11 + 2);
    *((_QWORD *)v10 + 3) = v13;
    *((_DWORD *)v10 + 16) = *((_DWORD *)v11 + 16);
    *(_WORD *)((char *)a1 + v9) = *(_WORD *)((char *)a2 + v9);
    v14 = a3[7];
    v15 = (char *)a1 + v14;
    v16 = (char *)a2 + v14;
    v17 = *((_QWORD *)v16 + 1);
    *(_QWORD *)v15 = *(_QWORD *)v16;
    *((_QWORD *)v15 + 1) = v17;
    v18 = *((_QWORD *)v16 + 3);
    *((_QWORD *)v15 + 2) = *((_QWORD *)v16 + 2);
    *((_QWORD *)v15 + 3) = v18;
    *((_WORD *)v15 + 16) = *((_WORD *)v16 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for ArticleEngagementEvent.Model(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ArticleEngagementEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v6 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = a2 + v7;
  v11 = *(_QWORD *)(v10 + 8);
  *(_QWORD *)v9 = *(_QWORD *)v10;
  *(_QWORD *)(v9 + 8) = v11;
  *(_BYTE *)(v9 + 32) = *(_BYTE *)(v10 + 32);
  *(_QWORD *)(v9 + 40) = *(_QWORD *)(v10 + 40);
  *(_BYTE *)(v9 + 48) = *(_BYTE *)(v10 + 48);
  *(_QWORD *)(v9 + 56) = *(_QWORD *)(v10 + 56);
  v12 = *(_QWORD *)(v10 + 24);
  *(_QWORD *)(v9 + 16) = *(_QWORD *)(v10 + 16);
  *(_QWORD *)(v9 + 24) = v12;
  *(_DWORD *)(v9 + 64) = *(_DWORD *)(v10 + 64);
  *(_WORD *)(a1 + v8) = *(_WORD *)(a2 + v8);
  v13 = a3[7];
  v14 = a1 + v13;
  v15 = a2 + v13;
  v16 = *(_QWORD *)(v15 + 8);
  *(_QWORD *)v14 = *(_QWORD *)v15;
  *(_QWORD *)(v14 + 8) = v16;
  v17 = *(_QWORD *)(v15 + 24);
  *(_QWORD *)(v14 + 16) = *(_QWORD *)(v15 + 16);
  *(_QWORD *)(v14 + 24) = v17;
  *(_WORD *)(v14 + 32) = *(_WORD *)(v15 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ArticleEngagementEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v6 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_QWORD *)v8 = *(_QWORD *)(a2 + v7);
  *(_QWORD *)(v8 + 8) = *(_QWORD *)(a2 + v7 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(v9 + 16);
  *(_QWORD *)(v8 + 24) = *(_QWORD *)(v9 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v8 + 32) = *(_BYTE *)(v9 + 32);
  v10 = *(_QWORD *)(v9 + 40);
  *(_BYTE *)(v8 + 48) = *(_BYTE *)(v9 + 48);
  *(_QWORD *)(v8 + 40) = v10;
  *(_QWORD *)(v8 + 56) = *(_QWORD *)(v9 + 56);
  *(_BYTE *)(v8 + 64) = *(_BYTE *)(v9 + 64);
  *(_BYTE *)(v8 + 65) = *(_BYTE *)(v9 + 65);
  *(_BYTE *)(v8 + 66) = *(_BYTE *)(v9 + 66);
  *(_BYTE *)(v8 + 67) = *(_BYTE *)(v9 + 67);
  v11 = a3[6];
  v12 = (_BYTE *)(a1 + v11);
  v13 = (_BYTE *)(a2 + v11);
  *v12 = *v13;
  v12[1] = v13[1];
  v14 = a3[7];
  v15 = a1 + v14;
  v16 = a2 + v14;
  *(_QWORD *)v15 = *(_QWORD *)(a2 + v14);
  *(_QWORD *)(v15 + 8) = *(_QWORD *)(a2 + v14 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v15 + 16) = *(_QWORD *)(v16 + 16);
  *(_QWORD *)(v15 + 24) = *(_QWORD *)(v16 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v15 + 32) = *(_BYTE *)(v16 + 32);
  *(_BYTE *)(v15 + 33) = *(_BYTE *)(v16 + 33);
  return a1;
}

uint64_t initializeWithTake for ArticleEngagementEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;

  v6 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = a2 + v7;
  *(_DWORD *)(v9 + 64) = *(_DWORD *)(v10 + 64);
  v11 = *(_OWORD *)(v10 + 48);
  *(_OWORD *)(v9 + 32) = *(_OWORD *)(v10 + 32);
  *(_OWORD *)(v9 + 48) = v11;
  v12 = *(_OWORD *)(v10 + 16);
  *(_OWORD *)v9 = *(_OWORD *)v10;
  *(_OWORD *)(v9 + 16) = v12;
  *(_WORD *)(a1 + v8) = *(_WORD *)(a2 + v8);
  v13 = a3[7];
  v14 = a1 + v13;
  v15 = a2 + v13;
  *(_WORD *)(v14 + 32) = *(_WORD *)(v15 + 32);
  v16 = *(_OWORD *)(v15 + 16);
  *(_OWORD *)v14 = *(_OWORD *)v15;
  *(_OWORD *)(v14 + 16) = v16;
  return a1;
}

uint64_t assignWithTake for ArticleEngagementEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v6 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = *(_QWORD *)(a2 + v7 + 8);
  *(_QWORD *)v8 = *(_QWORD *)(a2 + v7);
  *(_QWORD *)(v8 + 8) = v10;
  swift_bridgeObjectRelease();
  v11 = *(_QWORD *)(v9 + 24);
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(v9 + 16);
  *(_QWORD *)(v8 + 24) = v11;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v8 + 32) = *(_BYTE *)(v9 + 32);
  *(_QWORD *)(v8 + 40) = *(_QWORD *)(v9 + 40);
  *(_BYTE *)(v8 + 48) = *(_BYTE *)(v9 + 48);
  *(_QWORD *)(v8 + 56) = *(_QWORD *)(v9 + 56);
  *(_BYTE *)(v8 + 64) = *(_BYTE *)(v9 + 64);
  *(_BYTE *)(v8 + 65) = *(_BYTE *)(v9 + 65);
  *(_BYTE *)(v8 + 66) = *(_BYTE *)(v9 + 66);
  *(_BYTE *)(v8 + 67) = *(_BYTE *)(v9 + 67);
  v12 = a3[6];
  v13 = a3[7];
  v14 = (_BYTE *)(a1 + v12);
  v15 = (_BYTE *)(a2 + v12);
  *v14 = *v15;
  v14[1] = v15[1];
  v16 = a1 + v13;
  v17 = a2 + v13;
  v18 = *(_QWORD *)(v17 + 8);
  *(_QWORD *)v16 = *(_QWORD *)v17;
  *(_QWORD *)(v16 + 8) = v18;
  swift_bridgeObjectRelease();
  v19 = *(_QWORD *)(v17 + 24);
  *(_QWORD *)(v16 + 16) = *(_QWORD *)(v17 + 16);
  *(_QWORD *)(v16 + 24) = v19;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v16 + 32) = *(_BYTE *)(v17 + 32);
  *(_BYTE *)(v16 + 33) = *(_BYTE *)(v17 + 33);
  return a1;
}

uint64_t getEnumTagSinglePayload for ArticleEngagementEvent.Model()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC569F60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_1DC62ABA8();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for ArticleEngagementEvent.Model()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC569FEC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_1DC62ABA8();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  return result;
}

uint64_t storeEnumTagSinglePayload for ArticleEngagementEvent.Model.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1DC56A0B4 + 4 * byte_1DC63A619[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1DC56A0E8 + 4 * byte_1DC63A614[v4]))();
}

uint64_t sub_1DC56A0E8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC56A0F0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DC56A0F8);
  return result;
}

uint64_t sub_1DC56A104(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DC56A10CLL);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1DC56A110(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC56A118(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ArticleEngagementEvent.Model.CodingKeys()
{
  return &type metadata for ArticleEngagementEvent.Model.CodingKeys;
}

unint64_t sub_1DC56A138()
{
  unint64_t result;

  result = qword_1F036CFA8;
  if (!qword_1F036CFA8)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC63A7F4, &type metadata for ArticleEngagementEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036CFA8);
  }
  return result;
}

unint64_t sub_1DC56A180()
{
  unint64_t result;

  result = qword_1EDB0E4E8;
  if (!qword_1EDB0E4E8)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC63A764, &type metadata for ArticleEngagementEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB0E4E8);
  }
  return result;
}

unint64_t sub_1DC56A1C8()
{
  unint64_t result;

  result = qword_1EDB0E4E0;
  if (!qword_1EDB0E4E0)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC63A78C, &type metadata for ArticleEngagementEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB0E4E0);
  }
  return result;
}

uint64_t sub_1DC56A20C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x746144746E657665 && a2 == 0xE900000000000061;
  if (v2 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x697472417377656ELL && a2 == 0xEF61746144656C63 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000001DC64C4B0 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x446C656E6E616863 && a2 == 0xEB00000000617461)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_1DC62B520();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

void sub_1DC56A404(uint64_t a1@<X0>, unint64_t a2@<X1>, unint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, unint64_t *a6@<X8>)
{
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _BYTE *v25;
  int v26;
  void (*v27)(_BYTE *, uint64_t, uint64_t, uint64_t);
  void *v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  _BYTE *v34;
  _BYTE *v35;
  __int128 v36;
  __int128 v37;
  _BYTE *v38;
  unint64_t v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _BYTE *v44;
  __int128 v45;
  uint64_t v46;
  uint64_t v47;
  _BYTE *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t *v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  unint64_t v59;
  unint64_t v60;
  unint64_t v61;
  uint64_t v62;
  _BYTE v63[4];
  int v64;
  uint64_t v65;
  int v66;
  uint64_t v67;
  unint64_t v68;
  unint64_t v69;
  unint64_t v70;
  unint64_t v71;
  unint64_t v72;
  unint64_t v73;
  unint64_t v74;
  unint64_t v75;
  uint64_t v76;
  unint64_t v77;
  uint64_t v78;
  uint64_t v79;
  _BYTE *v80;
  uint64_t v81;
  uint64_t v82;
  unint64_t v83;
  unint64_t *v84;
  unint64_t v85;
  _BYTE *v86;
  _BYTE *v87;
  uint64_t v88;
  uint64_t v89;
  _BYTE *v90;
  uint64_t v91;
  _OWORD v92[4];
  int v93;
  _OWORD v94[2];
  __int16 v95;
  unint64_t v96;

  v79 = a5;
  v78 = a4;
  v85 = a3;
  v83 = a2;
  v84 = a6;
  v82 = sub_1DC62A1C4();
  v81 = *(_QWORD *)(v82 - 8);
  MEMORY[0x1E0C80A78](v82);
  v80 = &v63[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = sub_1DC62A0C8();
  v88 = *(_QWORD *)(v9 - 8);
  v89 = v9;
  v10 = MEMORY[0x1E0C80A78](v9);
  v86 = &v63[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v10);
  v87 = &v63[-v12];
  v91 = type metadata accessor for NewsArticleViewEvent.Model(0);
  MEMORY[0x1E0C80A78](v91);
  v90 = &v63[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1DC56AB10();
  MEMORY[0x1E0C80A78](v14);
  v16 = &v63[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v17 = sub_1DC62A77C();
  v18 = *(_QWORD *)(v17 - 8);
  MEMORY[0x1E0C80A78](v17);
  v20 = &v63[-v19];
  sub_1DC56AB64();
  v22 = v21;
  v23 = *(_QWORD *)(v21 - 8);
  MEMORY[0x1E0C80A78](v21);
  v25 = &v63[-((v24 + 15) & 0xFFFFFFFFFFFFFFF0)];
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v18 + 16))(v20, a1, v17);
  v26 = swift_dynamicCast();
  v27 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v23 + 56);
  if (v26)
  {
    v27(v16, 0, 1, v22);
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v23 + 32))(v25, v16, v22);
    v28 = (void *)sub_1DC62A758();
    v29 = sub_1DC62AA7C();
    if (v6)
    {
      (*(void (**)(_BYTE *, uint64_t))(v23 + 8))(v25, v22);

    }
    else
    {
      v31 = v29;
      v32 = v30;

      sub_1DC62A050();
      swift_allocObject();
      sub_1DC62A044();
      sub_1DC4B6748(&qword_1EDB12710, type metadata accessor for NewsArticleViewEvent.Model, (uint64_t)&protocol conformance descriptor for NewsArticleViewEvent.Model);
      v34 = v90;
      v33 = v91;
      sub_1DC62A038();
      v76 = v31;
      swift_release();
      v35 = &v34[*(int *)(v33 + 24)];
      v36 = *((_OWORD *)v35 + 1);
      v37 = *((_OWORD *)v35 + 3);
      v92[2] = *((_OWORD *)v35 + 2);
      v92[3] = v37;
      v93 = *((_DWORD *)v35 + 16);
      v92[0] = *(_OWORD *)v35;
      v92[1] = v36;
      v71 = *(_QWORD *)v35;
      v75 = *((_QWORD *)v35 + 1);
      v74 = *((_QWORD *)v35 + 2);
      v73 = *((_QWORD *)v35 + 3);
      v72 = v35[32];
      v69 = *((_QWORD *)v35 + 5);
      v70 = v35[48];
      v68 = *((_QWORD *)v35 + 7);
      v65 = v35[64];
      v64 = v35[65];
      v67 = v35[66];
      v66 = v35[67];
      sub_1DC547ABC((uint64_t)v92);
      v38 = v87;
      sub_1DC62A0BC();
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v88 + 16))(v86, v38, v89);
      v39 = sub_1DC525BA8(0, 1, 1, MEMORY[0x1E0DEE9D8]);
      v41 = *(_QWORD *)(v39 + 16);
      v40 = *(_QWORD *)(v39 + 24);
      v77 = v32;
      if (v41 >= v40 >> 1)
        v39 = sub_1DC525BA8(v40 > 1, v41 + 1, 1, v39);
      *(_QWORD *)(v39 + 16) = v41 + 1;
      v42 = v88;
      v43 = v89;
      (*(void (**)(unint64_t, _BYTE *, uint64_t))(v88 + 32))(v39+ ((*(unsigned __int8 *)(v42 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v42 + 80))+ *(_QWORD *)(v88 + 72) * v41, v86, v89);
      v96 = v39;
      v44 = &v34[*(int *)(v91 + 68)];
      v45 = *((_OWORD *)v44 + 1);
      v94[0] = *(_OWORD *)v44;
      v94[1] = v45;
      v95 = *((_WORD *)v44 + 16);
      sub_1DC547ABC((uint64_t)v94);
      v46 = sub_1DC547C78(v92, v94, v78, v79);
      sub_1DC547AF0((uint64_t)v94);
      sub_1DC5477D4(v46);
      v47 = (uint64_t)v34;
      v48 = v80;
      sub_1DC62A1B8();
      v49 = sub_1DC62A1AC();
      v91 = v50;
      sub_1DC547A3C(v76, v77);
      (*(void (**)(_BYTE *, uint64_t))(v81 + 8))(v48, v82);
      (*(void (**)(_BYTE *, uint64_t))(v42 + 8))(v87, v43);
      sub_1DC547A80(v47, type metadata accessor for NewsArticleViewEvent.Model);
      (*(void (**)(_BYTE *, uint64_t))(v23 + 8))(v25, v22);
      v51 = 256;
      if (!v64)
        v51 = 0;
      v52 = v51 | v65;
      v53 = v84;
      v54 = v71;
      *v84 = v96;
      v53[1] = v54;
      v55 = v52 | (v67 << 16);
      v56 = 0x1000000;
      if (!v66)
        v56 = 0;
      v53[2] = v75;
      v57 = v55 | v56;
      v58 = v73;
      v53[3] = v74;
      v53[4] = v58;
      v59 = v69;
      v53[5] = v72;
      v53[6] = v59;
      v60 = v68;
      v53[7] = v70;
      v53[8] = v60;
      v53[9] = v57;
      v53[10] = 1;
      v61 = v85;
      v53[11] = v83;
      v53[12] = v61;
      v62 = v91;
      v53[13] = v49;
      v53[14] = v62;
      swift_bridgeObjectRetain();
    }
  }
  else
  {
    v27(v16, 1, 1, v22);
    sub_1DC547A80((uint64_t)v16, (uint64_t (*)(_QWORD))sub_1DC56AB10);
    sub_1DC525A4C();
    swift_allocError();
    swift_willThrow();
  }
}

uint64_t type metadata accessor for ArticleViewEventQueryItemsGenerator()
{
  return objc_opt_self();
}

void sub_1DC56AAFC(uint64_t a1@<X0>, unint64_t a2@<X1>, unint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, unint64_t *a6@<X8>)
{
  sub_1DC56A404(a1, a2, a3, a4, a5, a6);
}

void sub_1DC56AB10()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EDB12708)
  {
    sub_1DC56AB64();
    v0 = sub_1DC62B25C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EDB12708);
  }
}

void sub_1DC56AB64()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EDB0E710)
  {
    type metadata accessor for NewsArticleViewEvent(255);
    sub_1DC4B6748(&qword_1EDB103C0, type metadata accessor for NewsArticleViewEvent, (uint64_t)&protocol conformance descriptor for NewsArticleViewEvent);
    v0 = sub_1DC62A77C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EDB0E710);
  }
}

void WatchlistData.watchlistType.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

_BYTE *WatchlistData.watchlistType.setter(_BYTE *result)
{
  _BYTE *v1;

  *v1 = *result;
  return result;
}

uint64_t (*WatchlistData.watchlistType.modify())()
{
  return nullsub_1;
}

StocksAnalytics::WatchlistData __swiftcall WatchlistData.init(watchlistType:)(StocksAnalytics::WatchlistData watchlistType)
{
  _BYTE *v1;

  *v1 = *(_BYTE *)watchlistType.watchlistType;
  return watchlistType;
}

uint64_t sub_1DC56AC10()
{
  return 0x73696C6863746177;
}

uint64_t sub_1DC56AC34@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x73696C6863746177 && a2 == 0xED00006570795474)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_1DC62B520();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1DC56ACEC()
{
  sub_1DC56AE40();
  return sub_1DC62B604();
}

uint64_t sub_1DC56AD14()
{
  sub_1DC56AE40();
  return sub_1DC62B610();
}

uint64_t WatchlistData.encode(to:)(_QWORD *a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char v8;
  uint64_t v10;
  char v11;

  sub_1DC56AFBC(0, &qword_1EDB11A08, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v10 - v6;
  v8 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC56AE40();
  sub_1DC62B5F8();
  v11 = v8;
  sub_1DC4B73E8();
  sub_1DC62B4E4();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_1DC56AE40()
{
  unint64_t result;

  result = qword_1EDB0F110;
  if (!qword_1EDB0F110)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC63AA20, &type metadata for WatchlistData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB0F110);
  }
  return result;
}

uint64_t WatchlistData.init(from:)@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v11;
  char v12;

  sub_1DC56AFBC(0, &qword_1EDB11930, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v11 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC56AE40();
  sub_1DC62B5E0();
  if (!v2)
  {
    sub_1DC501B34();
    sub_1DC62B454();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *a2 = v12;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1DC56AFBC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1DC56AE40();
    v7 = a3(a1, &type metadata for WatchlistData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1DC56B020@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return WatchlistData.init(from:)(a1, a2);
}

uint64_t sub_1DC56B034(_QWORD *a1)
{
  return WatchlistData.encode(to:)(a1);
}

uint64_t storeEnumTagSinglePayload for WatchlistData(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1DC56B094 + 4 * byte_1DC63A8A9[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1DC56B0C8 + 4 * byte_1DC63A8A4[v4]))();
}

uint64_t sub_1DC56B0C8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC56B0D0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DC56B0D8);
  return result;
}

uint64_t sub_1DC56B0E4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DC56B0ECLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1DC56B0F0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC56B0F8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for WatchlistData()
{
  return &type metadata for WatchlistData;
}

uint64_t storeEnumTagSinglePayload for WatchlistData.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1DC56B154 + 4 * byte_1DC63A8AE[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1DC56B174 + 4 * byte_1DC63A8B3[v4]))();
}

_BYTE *sub_1DC56B154(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1DC56B174(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1DC56B17C(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1DC56B184(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1DC56B18C(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1DC56B194(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for WatchlistData.CodingKeys()
{
  return &type metadata for WatchlistData.CodingKeys;
}

unint64_t sub_1DC56B1B4()
{
  unint64_t result;

  result = qword_1F036CFB0;
  if (!qword_1F036CFB0)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC63A9F8, &type metadata for WatchlistData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036CFB0);
  }
  return result;
}

unint64_t sub_1DC56B1FC()
{
  unint64_t result;

  result = qword_1EDB0F120;
  if (!qword_1EDB0F120)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC63A968, &type metadata for WatchlistData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB0F120);
  }
  return result;
}

unint64_t sub_1DC56B244()
{
  unint64_t result;

  result = qword_1EDB0F118;
  if (!qword_1EDB0F118)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC63A990, &type metadata for WatchlistData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB0F118);
  }
  return result;
}

void MediaData.mediaType.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

_BYTE *MediaData.mediaType.setter(_BYTE *result)
{
  _BYTE *v1;

  *v1 = *result;
  return result;
}

uint64_t (*MediaData.mediaType.modify())()
{
  return nullsub_1;
}

uint64_t MediaData.mediaID.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t MediaData.mediaID.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 8) = a1;
  *(_QWORD *)(v2 + 16) = a2;
  return result;
}

uint64_t (*MediaData.mediaID.modify())()
{
  return nullsub_1;
}

unint64_t MediaData.mediaDuration.getter()
{
  uint64_t v0;

  return *(unsigned int *)(v0 + 24) | ((unint64_t)*(unsigned __int8 *)(v0 + 28) << 32);
}

uint64_t MediaData.mediaDuration.setter(uint64_t result)
{
  uint64_t v1;

  *(_DWORD *)(v1 + 24) = result;
  *(_BYTE *)(v1 + 28) = BYTE4(result) & 1;
  return result;
}

uint64_t (*MediaData.mediaDuration.modify())()
{
  return nullsub_1;
}

_BYTE *MediaData.init(mediaType:mediaID:mediaDuration:)@<X0>(_BYTE *result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  *(_BYTE *)a5 = *result;
  *(_QWORD *)(a5 + 8) = a2;
  *(_QWORD *)(a5 + 16) = a3;
  *(_DWORD *)(a5 + 24) = a4;
  *(_BYTE *)(a5 + 28) = BYTE4(a4) & 1;
  return result;
}

uint64_t sub_1DC56B37C()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x4449616964656DLL;
  if (*v0 != 1)
    v1 = 0x727544616964656DLL;
  if (*v0)
    return v1;
  else
    return 0x707954616964656DLL;
}

uint64_t sub_1DC56B3E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1DC56BC74(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DC56B40C()
{
  sub_1DC56B5E8();
  return sub_1DC62B604();
}

uint64_t sub_1DC56B434()
{
  sub_1DC56B5E8();
  return sub_1DC62B610();
}

uint64_t MediaData.encode(to:)(_QWORD *a1)
{
  char *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char v9;
  uint64_t v10;
  char v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  char v18;
  char v19;
  char v20;
  char v21;

  sub_1DC56B858(0, &qword_1EDB11B20, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v13 - v7;
  v9 = *v1;
  v10 = *((_QWORD *)v1 + 1);
  v15 = *((_QWORD *)v1 + 2);
  v16 = v10;
  v14 = *((unsigned int *)v1 + 6);
  HIDWORD(v13) = v1[28];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC56B5E8();
  sub_1DC62B5F8();
  v21 = v9;
  v20 = 0;
  sub_1DC56B62C();
  sub_1DC62B4E4();
  if (!v2)
  {
    v11 = BYTE4(v13);
    v19 = 1;
    sub_1DC62B4B4();
    v18 = 2;
    v17 = v11;
    sub_1DC62B49C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_1DC56B5E8()
{
  unint64_t result;

  result = qword_1EDB117D0;
  if (!qword_1EDB117D0)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC63ABE8, &type metadata for MediaData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB117D0);
  }
  return result;
}

unint64_t sub_1DC56B62C()
{
  unint64_t result;

  result = qword_1EDB117F8;
  if (!qword_1EDB117F8)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for MediaType, &type metadata for MediaType);
    atomic_store(result, (unint64_t *)&qword_1EDB117F8);
  }
  return result;
}

uint64_t MediaData.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;
  int v18;
  char v19;
  char v20;
  char v21;
  unsigned __int8 v22;

  sub_1DC56B858(0, &qword_1F036CFB8, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v16 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC56B5E8();
  sub_1DC62B5E0();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v21 = 0;
  sub_1DC56B8B4();
  sub_1DC62B454();
  v10 = v22;
  v20 = 1;
  v11 = sub_1DC62B424();
  v13 = v12;
  v17 = v11;
  v18 = v10;
  v19 = 2;
  swift_bridgeObjectRetain();
  v14 = sub_1DC62B40C();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  *(_BYTE *)a2 = v18;
  *(_QWORD *)(a2 + 8) = v17;
  *(_QWORD *)(a2 + 16) = v13;
  *(_DWORD *)(a2 + 24) = v14;
  *(_BYTE *)(a2 + 28) = BYTE4(v14) & 1;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return swift_bridgeObjectRelease();
}

void sub_1DC56B858(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1DC56B5E8();
    v7 = a3(a1, &type metadata for MediaData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1DC56B8B4()
{
  unint64_t result;

  result = qword_1F036CFC0;
  if (!qword_1F036CFC0)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for MediaType, &type metadata for MediaType);
    atomic_store(result, (unint64_t *)&qword_1F036CFC0);
  }
  return result;
}

uint64_t sub_1DC56B900@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return MediaData.init(from:)(a1, a2);
}

uint64_t sub_1DC56B914(_QWORD *a1)
{
  return MediaData.encode(to:)(a1);
}

uint64_t initializeWithCopy for MediaData(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v3;
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 28) = *(_BYTE *)(a2 + 28);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for MediaData(uint64_t a1, uint64_t a2)
{
  int v4;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = *(_DWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 28) = *(_BYTE *)(a2 + 28);
  *(_DWORD *)(a1 + 24) = v4;
  return a1;
}

__n128 __swift_memcpy29_8(uint64_t a1, uint64_t a2)
{
  __n128 result;

  result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 13) = *(_OWORD *)(a2 + 13);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for MediaData(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v4 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v4;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 28) = *(_BYTE *)(a2 + 28);
  return a1;
}

uint64_t getEnumTagSinglePayload for MediaData(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 29))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MediaData(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_BYTE *)(result + 28) = 0;
    *(_DWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 29) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 16) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 29) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for MediaData()
{
  return &type metadata for MediaData;
}

uint64_t storeEnumTagSinglePayload for MediaData.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1DC56BB1C + 4 * byte_1DC63AA75[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1DC56BB50 + 4 * byte_1DC63AA70[v4]))();
}

uint64_t sub_1DC56BB50(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC56BB58(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DC56BB60);
  return result;
}

uint64_t sub_1DC56BB6C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DC56BB74);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1DC56BB78(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC56BB80(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MediaData.CodingKeys()
{
  return &type metadata for MediaData.CodingKeys;
}

unint64_t sub_1DC56BBA0()
{
  unint64_t result;

  result = qword_1F036CFC8;
  if (!qword_1F036CFC8)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC63ABC0, &type metadata for MediaData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036CFC8);
  }
  return result;
}

unint64_t sub_1DC56BBE8()
{
  unint64_t result;

  result = qword_1EDB117E0;
  if (!qword_1EDB117E0)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC63AB30, &type metadata for MediaData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB117E0);
  }
  return result;
}

unint64_t sub_1DC56BC30()
{
  unint64_t result;

  result = qword_1EDB117D8;
  if (!qword_1EDB117D8)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC63AB58, &type metadata for MediaData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB117D8);
  }
  return result;
}

uint64_t sub_1DC56BC74(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x707954616964656DLL && a2 == 0xE900000000000065;
  if (v2 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x4449616964656DLL && a2 == 0xE700000000000000 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x727544616964656DLL && a2 == 0xED00006E6F697461)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_1DC62B520();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t UserData.init(userID:userType:userStartDate:ageBracket:ageBracketConfidenceLevel:gender:genderConfidenceLevel:userStorefrontID:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, char *a3@<X2>, uint64_t a4@<X3>, int a5@<W4>, int a6@<W5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, float a10@<S0>, float a11@<S1>)
{
  char v11;

  v11 = *a3;
  *(_QWORD *)a9 = result;
  *(_QWORD *)(a9 + 8) = a2;
  *(_BYTE *)(a9 + 16) = v11;
  *(_QWORD *)(a9 + 24) = a4;
  *(_DWORD *)(a9 + 32) = a5;
  *(float *)(a9 + 36) = a10;
  *(_DWORD *)(a9 + 40) = a6;
  *(float *)(a9 + 44) = a11;
  *(_QWORD *)(a9 + 48) = a7;
  *(_QWORD *)(a9 + 56) = a8;
  return result;
}

uint64_t UserData.userID.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t UserData.userID.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*UserData.userID.modify())()
{
  return nullsub_1;
}

void UserData.userType.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 16);
}

_BYTE *UserData.userType.setter(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 16) = *result;
  return result;
}

uint64_t (*UserData.userType.modify())()
{
  return nullsub_1;
}

uint64_t UserData.userStartDate.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 24);
}

uint64_t UserData.userStartDate.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 24) = result;
  return result;
}

uint64_t (*UserData.userStartDate.modify())()
{
  return nullsub_1;
}

uint64_t UserData.ageBracket.getter()
{
  uint64_t v0;

  return *(unsigned int *)(v0 + 32);
}

uint64_t UserData.ageBracket.setter(uint64_t result)
{
  uint64_t v1;

  *(_DWORD *)(v1 + 32) = result;
  return result;
}

uint64_t (*UserData.ageBracket.modify())()
{
  return nullsub_1;
}

float UserData.ageBracketConfidenceLevel.getter()
{
  uint64_t v0;

  return *(float *)(v0 + 36);
}

void UserData.ageBracketConfidenceLevel.setter(float a1)
{
  uint64_t v1;

  *(float *)(v1 + 36) = a1;
}

uint64_t (*UserData.ageBracketConfidenceLevel.modify())()
{
  return nullsub_1;
}

uint64_t UserData.gender.getter()
{
  uint64_t v0;

  return *(unsigned int *)(v0 + 40);
}

uint64_t UserData.gender.setter(uint64_t result)
{
  uint64_t v1;

  *(_DWORD *)(v1 + 40) = result;
  return result;
}

uint64_t (*UserData.gender.modify())()
{
  return nullsub_1;
}

float UserData.genderConfidenceLevel.getter()
{
  uint64_t v0;

  return *(float *)(v0 + 44);
}

void UserData.genderConfidenceLevel.setter(float a1)
{
  uint64_t v1;

  *(float *)(v1 + 44) = a1;
}

uint64_t (*UserData.genderConfidenceLevel.modify())()
{
  return nullsub_1;
}

uint64_t UserData.userStorefrontID.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 48);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t UserData.userStorefrontID.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 48) = a1;
  *(_QWORD *)(v2 + 56) = a2;
  return result;
}

uint64_t (*UserData.userStorefrontID.modify())()
{
  return nullsub_1;
}

uint64_t sub_1DC56BFC8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1DC56C590(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DC56BFEC()
{
  sub_1DC4BB3A8();
  return sub_1DC62B604();
}

uint64_t sub_1DC56C014()
{
  sub_1DC4BB3A8();
  return sub_1DC62B610();
}

uint64_t UserData.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  int v14;
  int v15;
  int v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t);
  uint64_t v22;
  uint64_t v23;
  int v24;
  int v25;
  uint64_t v26;
  int v27;
  char v28;
  char v29;
  char v30;
  char v31;
  char v32;
  char v33;
  char v34;
  unsigned __int8 v35;
  char v36;

  sub_1DC4BB308(0, &qword_1EDB119A0, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v23 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC4BB3A8();
  sub_1DC62B5E0();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v36 = 0;
  v10 = sub_1DC62B424();
  v12 = v11;
  v34 = 1;
  sub_1DC56C328();
  swift_bridgeObjectRetain();
  sub_1DC62B454();
  v27 = v35;
  v33 = 2;
  v26 = sub_1DC62B46C();
  v32 = 3;
  v25 = sub_1DC62B460();
  v31 = 4;
  sub_1DC62B448();
  v14 = v13;
  v30 = 5;
  v24 = sub_1DC62B460();
  v29 = 6;
  sub_1DC62B448();
  v16 = v15;
  v28 = 7;
  v17 = sub_1DC62B424();
  v20 = v19;
  v21 = *(void (**)(char *, uint64_t))(v7 + 8);
  v22 = v17;
  v21(v9, v6);
  *(_QWORD *)a2 = v10;
  *(_QWORD *)(a2 + 8) = v12;
  *(_BYTE *)(a2 + 16) = v27;
  *(_QWORD *)(a2 + 24) = v26;
  *(_DWORD *)(a2 + 32) = v25;
  *(_DWORD *)(a2 + 36) = v14;
  *(_DWORD *)(a2 + 40) = v24;
  *(_DWORD *)(a2 + 44) = v16;
  *(_QWORD *)(a2 + 48) = v22;
  *(_QWORD *)(a2 + 56) = v20;
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

unint64_t sub_1DC56C328()
{
  unint64_t result;

  result = qword_1EDB0E478;
  if (!qword_1EDB0E478)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for UserType, &type metadata for UserType);
    atomic_store(result, (unint64_t *)&qword_1EDB0E478);
  }
  return result;
}

uint64_t sub_1DC56C36C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return UserData.init(from:)(a1, a2);
}

uint64_t assignWithCopy for UserData(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 36) = *(_DWORD *)(a2 + 36);
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  *(_DWORD *)(a1 + 44) = *(_DWORD *)(a2 + 44);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for UserData(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 36) = *(_DWORD *)(a2 + 36);
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  *(_DWORD *)(a1 + 44) = *(_DWORD *)(a2 + 44);
  v5 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for UserData(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 64))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for UserData(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 64) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 64) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for UserData()
{
  return &type metadata for UserData;
}

ValueMetadata *type metadata accessor for UserData.CodingKeys()
{
  return &type metadata for UserData.CodingKeys;
}

unint64_t sub_1DC56C54C()
{
  unint64_t result;

  result = qword_1F036CFD0;
  if (!qword_1F036CFD0)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC63ADA0, &type metadata for UserData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036CFD0);
  }
  return result;
}

uint64_t sub_1DC56C590(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x444972657375 && a2 == 0xE600000000000000;
  if (v2 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6570795472657375 && a2 == 0xE800000000000000 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x7261745372657375 && a2 == 0xED00006574614474 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6B63617242656761 && a2 == 0xEA00000000007465 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000019 && a2 == 0x80000001DC64CE70 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x7265646E6567 && a2 == 0xE600000000000000 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000001DC64CE90 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001DC64CEB0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else
  {
    v6 = sub_1DC62B520();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 7;
    else
      return 8;
  }
}

StocksAnalytics::WebSubscriptionStatus_optional __swiftcall WebSubscriptionStatus.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  StocksAnalytics::WebSubscriptionStatus_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1DC62B3DC();
  result.value = swift_bridgeObjectRelease();
  v5 = 3;
  if (v3 < 3)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t WebSubscriptionStatus.rawValue.getter()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x6269726373627573;
  if (*v0 != 1)
    v1 = 0x6373627553746F6ELL;
  if (*v0)
    return v1;
  else
    return 0x6E776F6E6B6E75;
}

uint64_t sub_1DC56C9A8(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1DC543324(*a1, *a2);
}

unint64_t sub_1DC56C9B8()
{
  unint64_t result;

  result = qword_1F036CFD8;
  if (!qword_1F036CFD8)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for WebSubscriptionStatus, &type metadata for WebSubscriptionStatus);
    atomic_store(result, (unint64_t *)&qword_1F036CFD8);
  }
  return result;
}

uint64_t sub_1DC56C9FC()
{
  sub_1DC62B5B0();
  sub_1DC62B10C();
  swift_bridgeObjectRelease();
  return sub_1DC62B5C8();
}

uint64_t sub_1DC56CAAC()
{
  sub_1DC62B10C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DC56CB38()
{
  sub_1DC62B5B0();
  sub_1DC62B10C();
  swift_bridgeObjectRelease();
  return sub_1DC62B5C8();
}

StocksAnalytics::WebSubscriptionStatus_optional sub_1DC56CBE4(Swift::String *a1)
{
  return WebSubscriptionStatus.init(rawValue:)(*a1);
}

uint64_t sub_1DC56CBF0()
{
  sub_1DC4B4498();
  return sub_1DC62B13C();
}

uint64_t storeEnumTagSinglePayload for WebSubscriptionStatus(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1DC56CC98 + 4 * byte_1DC63AE25[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1DC56CCCC + 4 * byte_1DC63AE20[v4]))();
}

uint64_t sub_1DC56CCCC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC56CCD4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DC56CCDCLL);
  return result;
}

uint64_t sub_1DC56CCE8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DC56CCF0);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1DC56CCF4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC56CCFC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for WebSubscriptionStatus()
{
  return &type metadata for WebSubscriptionStatus;
}

uint64_t TrackData.trackDuration.getter()
{
  unsigned int *v0;

  return *v0;
}

uint64_t TrackData.trackDuration.setter(uint64_t result)
{
  _DWORD *v1;

  *v1 = result;
  return result;
}

uint64_t (*TrackData.trackDuration.modify())()
{
  return nullsub_1;
}

void TrackData.trackVariant.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 4);
}

_BYTE *TrackData.trackVariant.setter(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 4) = *result;
  return result;
}

uint64_t (*TrackData.trackVariant.modify())()
{
  return nullsub_1;
}

uint64_t TrackData.init(trackDuration:trackVariant:)@<X0>(uint64_t result@<X0>, char *a2@<X1>, uint64_t a3@<X8>)
{
  char v3;

  v3 = *a2;
  *(_DWORD *)a3 = result;
  *(_BYTE *)(a3 + 4) = v3;
  return result;
}

uint64_t sub_1DC56CD70()
{
  _BYTE *v0;

  if (*v0)
    return 0x7261566B63617274;
  else
    return 0x7275446B63617274;
}

uint64_t sub_1DC56CDC0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1DC56D488(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DC56CDE4()
{
  sub_1DC56CF74();
  return sub_1DC62B604();
}

uint64_t sub_1DC56CE0C()
{
  sub_1DC56CF74();
  return sub_1DC62B610();
}

uint64_t TrackData.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v10;
  int v11;
  char v12;
  char v13;
  char v14;

  sub_1DC56D168(0, &qword_1F036CFE0, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v10 - v7;
  v11 = *(unsigned __int8 *)(v1 + 4);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC56CF74();
  sub_1DC62B5F8();
  v14 = 0;
  sub_1DC62B4F0();
  if (!v2)
  {
    v13 = v11;
    v12 = 1;
    sub_1DC56CFB8();
    sub_1DC62B4E4();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_1DC56CF74()
{
  unint64_t result;

  result = qword_1F036CFE8;
  if (!qword_1F036CFE8)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC63B0B8, &type metadata for TrackData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036CFE8);
  }
  return result;
}

unint64_t sub_1DC56CFB8()
{
  unint64_t result;

  result = qword_1F036CFF0;
  if (!qword_1F036CFF0)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for TrackVariant, &type metadata for TrackVariant);
    atomic_store(result, (unint64_t *)&qword_1F036CFF0);
  }
  return result;
}

uint64_t TrackData.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int v10;
  char v12;
  uint64_t v13;
  char v14;
  char v15;
  char v16;

  sub_1DC56D168(0, &qword_1F036CFF8, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v13 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC56CF74();
  sub_1DC62B5E0();
  if (!v2)
  {
    v16 = 0;
    v10 = sub_1DC62B460();
    v14 = 1;
    sub_1DC56D1C4();
    sub_1DC62B454();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    v12 = v15;
    *(_DWORD *)a2 = v10;
    *(_BYTE *)(a2 + 4) = v12;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1DC56D168(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1DC56CF74();
    v7 = a3(a1, &type metadata for TrackData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1DC56D1C4()
{
  unint64_t result;

  result = qword_1F036D000;
  if (!qword_1F036D000)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for TrackVariant, &type metadata for TrackVariant);
    atomic_store(result, (unint64_t *)&qword_1F036D000);
  }
  return result;
}

uint64_t sub_1DC56D210@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return TrackData.init(from:)(a1, a2);
}

uint64_t sub_1DC56D224(_QWORD *a1)
{
  return TrackData.encode(to:)(a1);
}

uint64_t __swift_memcpy5_4(uint64_t result, int *a2)
{
  int v2;

  v2 = *a2;
  *(_BYTE *)(result + 4) = *((_BYTE *)a2 + 4);
  *(_DWORD *)result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for TrackData(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFE && *(_BYTE *)(a1 + 5))
    return (*(_DWORD *)a1 + 254);
  v3 = *(unsigned __int8 *)(a1 + 4);
  v4 = v3 >= 3;
  v5 = v3 - 3;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for TrackData(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_BYTE *)(result + 4) = 0;
    *(_DWORD *)result = a2 - 254;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 5) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 5) = 0;
    if (a2)
      *(_BYTE *)(result + 4) = a2 + 2;
  }
  return result;
}

ValueMetadata *type metadata accessor for TrackData()
{
  return &type metadata for TrackData;
}

uint64_t storeEnumTagSinglePayload for TrackData.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1DC56D330 + 4 * byte_1DC63AF49[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1DC56D364 + 4 * byte_1DC63AF44[v4]))();
}

uint64_t sub_1DC56D364(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC56D36C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DC56D374);
  return result;
}

uint64_t sub_1DC56D380(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DC56D388);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1DC56D38C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC56D394(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for TrackData.CodingKeys()
{
  return &type metadata for TrackData.CodingKeys;
}

unint64_t sub_1DC56D3B4()
{
  unint64_t result;

  result = qword_1F036D008;
  if (!qword_1F036D008)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC63B090, &type metadata for TrackData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036D008);
  }
  return result;
}

unint64_t sub_1DC56D3FC()
{
  unint64_t result;

  result = qword_1F036D010;
  if (!qword_1F036D010)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC63B000, &type metadata for TrackData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036D010);
  }
  return result;
}

unint64_t sub_1DC56D444()
{
  unint64_t result;

  result = qword_1F036D018;
  if (!qword_1F036D018)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC63B028, &type metadata for TrackData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036D018);
  }
  return result;
}

uint64_t sub_1DC56D488(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x7275446B63617274 && a2 == 0xED00006E6F697461;
  if (v2 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7261566B63617274 && a2 == 0xEC000000746E6169)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1DC62B520();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t dispatch thunk of ExternalAnalyticsQueryItemsGeneratorType.generateQueryItems<A>(from:externalID:sessionID:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return (*(uint64_t (**)(uint64_t))(a9 + 8))(a1);
}

uint64_t storeEnumTagSinglePayload for QueryItemsGeneratorError(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1DC56D61C + 4 * byte_1DC63B110[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1DC56D63C + 4 * byte_1DC63B115[v4]))();
}

_BYTE *sub_1DC56D61C(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1DC56D63C(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1DC56D644(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1DC56D64C(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1DC56D654(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1DC56D65C(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for QueryItemsGeneratorError()
{
  return &type metadata for QueryItemsGeneratorError;
}

unint64_t sub_1DC56D67C()
{
  unint64_t result;

  result = qword_1F036D020;
  if (!qword_1F036D020)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC63B1AC, &type metadata for QueryItemsGeneratorError);
    atomic_store(result, (unint64_t *)&qword_1F036D020);
  }
  return result;
}

uint64_t sub_1DC56D6D0()
{
  _OWORD v1[2];

  sub_1DC56D97C();
  swift_bridgeObjectRetain();
  sub_1DC62A7B8();
  swift_bridgeObjectRelease();
  type metadata accessor for UserSegmentationTreatmentIDsChangeEvent(0);
  sub_1DC4B6748(&qword_1EDB113F0, type metadata accessor for UserSegmentationTreatmentIDsChangeEvent, (uint64_t)&protocol conformance descriptor for UserSegmentationTreatmentIDsChangeEvent);
  memset(v1, 0, sizeof(v1));
  sub_1DC62A7D0();
  return sub_1DC4B2B3C((uint64_t)v1);
}

uint64_t sub_1DC56D7AC()
{
  _OWORD v1[2];

  sub_1DC56D938();
  swift_bridgeObjectRetain();
  sub_1DC62A7B8();
  swift_bridgeObjectRelease();
  type metadata accessor for UserSegmentationSegmentSetIDsChangeEvent(0);
  sub_1DC4B6748(&qword_1EDB114C8, type metadata accessor for UserSegmentationSegmentSetIDsChangeEvent, (uint64_t)&protocol conformance descriptor for UserSegmentationSegmentSetIDsChangeEvent);
  memset(v1, 0, sizeof(v1));
  sub_1DC62A7D0();
  return sub_1DC4B2B3C((uint64_t)v1);
}

uint64_t sub_1DC56D888()
{
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_1DC56D8AC()
{
  swift_unownedRelease();
  return swift_deallocObject();
}

uint64_t sub_1DC56D8D0()
{
  swift_unownedRetainStrong();
  sub_1DC4B905C();
  return swift_release();
}

uint64_t sub_1DC56D904()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1DC56D928()
{
  return sub_1DC56D6D0();
}

uint64_t sub_1DC56D930()
{
  return sub_1DC56D7AC();
}

unint64_t sub_1DC56D938()
{
  unint64_t result;

  result = qword_1EDB11150;
  if (!qword_1EDB11150)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for UserSegmentationSegmentSetData, &type metadata for UserSegmentationSegmentSetData);
    atomic_store(result, (unint64_t *)&qword_1EDB11150);
  }
  return result;
}

unint64_t sub_1DC56D97C()
{
  unint64_t result;

  result = qword_1EDB11120;
  if (!qword_1EDB11120)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for UserSegmentationTreatmentData, &type metadata for UserSegmentationTreatmentData);
    atomic_store(result, (unint64_t *)&qword_1EDB11120);
  }
  return result;
}

StocksAnalytics::EventPath_optional __swiftcall EventPath.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  StocksAnalytics::EventPath_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1DC62B3DC();
  result.value = swift_bridgeObjectRelease();
  v5 = 16;
  if (v3 < 0x10)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t sub_1DC56DA1C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1DC5416E0(*a1, *a2);
}

unint64_t sub_1DC56DA2C()
{
  unint64_t result;

  result = qword_1F036D028;
  if (!qword_1F036D028)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for EventPath, &type metadata for EventPath);
    atomic_store(result, (unint64_t *)&qword_1F036D028);
  }
  return result;
}

uint64_t sub_1DC56DA70()
{
  sub_1DC62B5B0();
  EventPath.rawValue.getter();
  sub_1DC62B10C();
  swift_bridgeObjectRelease();
  return sub_1DC62B5C8();
}

uint64_t sub_1DC56DAD4()
{
  EventPath.rawValue.getter();
  sub_1DC62B10C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DC56DB24()
{
  sub_1DC62B5B0();
  EventPath.rawValue.getter();
  sub_1DC62B10C();
  swift_bridgeObjectRelease();
  return sub_1DC62B5C8();
}

StocksAnalytics::EventPath_optional sub_1DC56DB84(Swift::String *a1)
{
  return EventPath.init(rawValue:)(*a1);
}

uint64_t sub_1DC56DB90@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = EventPath.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1DC56DBB4()
{
  sub_1DC56DDA8();
  return sub_1DC62B13C();
}

uint64_t sub_1DC56DC10()
{
  sub_1DC56DDA8();
  return sub_1DC62B130();
}

uint64_t getEnumTagSinglePayload for EventPath(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF1)
    goto LABEL_17;
  if (a2 + 15 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 15) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 15;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 15;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 15;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0x10;
  v8 = v6 - 16;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for EventPath(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 15 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 15) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF1)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF0)
    return ((uint64_t (*)(void))((char *)&loc_1DC56DD38 + 4 * byte_1DC63B25D[v4]))();
  *a1 = a2 + 15;
  return ((uint64_t (*)(void))((char *)sub_1DC56DD6C + 4 * byte_1DC63B258[v4]))();
}

uint64_t sub_1DC56DD6C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC56DD74(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DC56DD7CLL);
  return result;
}

uint64_t sub_1DC56DD88(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DC56DD90);
  *(_BYTE *)result = a2 + 15;
  return result;
}

uint64_t sub_1DC56DD94(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC56DD9C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

unint64_t sub_1DC56DDA8()
{
  unint64_t result;

  result = qword_1F036D030;
  if (!qword_1F036D030)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for EventPath, &type metadata for EventPath);
    atomic_store(result, (unint64_t *)&qword_1F036D030);
  }
  return result;
}

StocksAnalytics::ArticleAccessType_optional __swiftcall ArticleAccessType.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  StocksAnalytics::ArticleAccessType_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1DC62B3DC();
  result.value = swift_bridgeObjectRelease();
  v5 = 3;
  if (v3 < 3)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t ArticleAccessType.rawValue.getter()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 1701147238;
  if (*v0 != 1)
    v1 = 1684627824;
  if (*v0)
    return v1;
  else
    return 0x6E776F6E6B6E75;
}

uint64_t sub_1DC56DE90(char *a1, unsigned __int8 *a2)
{
  return sub_1DC544874(*a1, *a2);
}

unint64_t sub_1DC56DEA0()
{
  unint64_t result;

  result = qword_1F036D038;
  if (!qword_1F036D038)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for ArticleAccessType, &type metadata for ArticleAccessType);
    atomic_store(result, (unint64_t *)&qword_1F036D038);
  }
  return result;
}

uint64_t sub_1DC56DEE4()
{
  sub_1DC62B5B0();
  sub_1DC62B10C();
  swift_bridgeObjectRelease();
  return sub_1DC62B5C8();
}

uint64_t sub_1DC56DF74()
{
  sub_1DC62B10C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DC56DFE0()
{
  sub_1DC62B5B0();
  sub_1DC62B10C();
  swift_bridgeObjectRelease();
  return sub_1DC62B5C8();
}

StocksAnalytics::ArticleAccessType_optional sub_1DC56E06C(Swift::String *a1)
{
  return ArticleAccessType.init(rawValue:)(*a1);
}

void sub_1DC56E078(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  int v2;
  unint64_t v3;
  uint64_t v4;
  BOOL v5;
  uint64_t v6;

  v2 = *v1;
  v3 = 0xE700000000000000;
  v4 = 1701147238;
  if (v2 != 1)
    v4 = 1684627824;
  v5 = v2 == 0;
  if (*v1)
    v6 = v4;
  else
    v6 = 0x6E776F6E6B6E75;
  if (!v5)
    v3 = 0xE400000000000000;
  *a1 = v6;
  a1[1] = v3;
}

uint64_t sub_1DC56E0C8()
{
  sub_1DC56E23C();
  return sub_1DC62B13C();
}

uint64_t sub_1DC56E124()
{
  sub_1DC56E23C();
  return sub_1DC62B130();
}

uint64_t storeEnumTagSinglePayload for ArticleAccessType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1DC56E1BC + 4 * byte_1DC63B3B5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1DC56E1F0 + 4 * byte_1DC63B3B0[v4]))();
}

uint64_t sub_1DC56E1F0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC56E1F8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DC56E200);
  return result;
}

uint64_t sub_1DC56E20C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DC56E214);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1DC56E218(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC56E220(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ArticleAccessType()
{
  return &type metadata for ArticleAccessType;
}

unint64_t sub_1DC56E23C()
{
  unint64_t result;

  result = qword_1EDB0F9A0;
  if (!qword_1EDB0F9A0)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for ArticleAccessType, &type metadata for ArticleAccessType);
    atomic_store(result, (unint64_t *)&qword_1EDB0F9A0);
  }
  return result;
}

StocksAnalytics::SubscribeButtonLocation_optional __swiftcall SubscribeButtonLocation.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  StocksAnalytics::SubscribeButtonLocation_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1DC62B3DC();
  result.value = swift_bridgeObjectRelease();
  v5 = 4;
  if (v3 < 4)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t SubscribeButtonLocation.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1DC56E308 + 4 * byte_1DC63B4D0[*v0]))(0x6E776F6E6B6E75, 0xE700000000000000);
}

uint64_t sub_1DC56E308()
{
  return 0x656C6369747261;
}

uint64_t sub_1DC56E31C()
{
  return 1684366694;
}

uint64_t sub_1DC56E32C()
{
  return 0x50676E69646E616CLL;
}

void sub_1DC56E34C(char *a1)
{
  sub_1DC542D44(*a1);
}

unint64_t sub_1DC56E35C()
{
  unint64_t result;

  result = qword_1F036D040;
  if (!qword_1F036D040)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for SubscribeButtonLocation, &type metadata for SubscribeButtonLocation);
    atomic_store(result, (unint64_t *)&qword_1F036D040);
  }
  return result;
}

void sub_1DC56E3A0()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1DC62B5B0();
  __asm { BR              X9 }
}

uint64_t sub_1DC56E3EC()
{
  sub_1DC62B10C();
  swift_bridgeObjectRelease();
  return sub_1DC62B5C8();
}

void sub_1DC56E458()
{
  __asm { BR              X10 }
}

uint64_t sub_1DC56E494()
{
  sub_1DC62B10C();
  return swift_bridgeObjectRelease();
}

void sub_1DC56E4EC()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1DC62B5B0();
  __asm { BR              X9 }
}

uint64_t sub_1DC56E534()
{
  sub_1DC62B10C();
  swift_bridgeObjectRelease();
  return sub_1DC62B5C8();
}

StocksAnalytics::SubscribeButtonLocation_optional sub_1DC56E5A0(Swift::String *a1)
{
  return SubscribeButtonLocation.init(rawValue:)(*a1);
}

uint64_t sub_1DC56E5AC()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_1DC56E5DC + 4 * byte_1DC63B4E0[*v0]))();
}

void sub_1DC56E5DC(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = 0x656C6369747261;
  a1[1] = v1;
}

void sub_1DC56E5F4(_QWORD *a1@<X8>)
{
  *a1 = 1684366694;
  a1[1] = 0xE400000000000000;
}

void sub_1DC56E608(_QWORD *a1@<X8>)
{
  *a1 = 0x50676E69646E616CLL;
  a1[1] = 0xEB00000000656761;
}

uint64_t sub_1DC56E62C()
{
  sub_1DC56E7A0();
  return sub_1DC62B13C();
}

uint64_t sub_1DC56E688()
{
  sub_1DC56E7A0();
  return sub_1DC62B130();
}

uint64_t storeEnumTagSinglePayload for SubscribeButtonLocation(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1DC56E720 + 4 * byte_1DC63B4E9[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1DC56E754 + 4 * byte_1DC63B4E4[v4]))();
}

uint64_t sub_1DC56E754(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC56E75C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DC56E764);
  return result;
}

uint64_t sub_1DC56E770(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DC56E778);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1DC56E77C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC56E784(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SubscribeButtonLocation()
{
  return &type metadata for SubscribeButtonLocation;
}

unint64_t sub_1DC56E7A0()
{
  unint64_t result;

  result = qword_1F036D048;
  if (!qword_1F036D048)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for SubscribeButtonLocation, &type metadata for SubscribeButtonLocation);
    atomic_store(result, (unint64_t *)&qword_1F036D048);
  }
  return result;
}

uint64_t ExternalAnalyticsURLProvider.__allocating_init(queryItemsGenerators:)(uint64_t a1)
{
  uint64_t result;

  result = swift_allocObject();
  *(_QWORD *)(result + 16) = a1;
  return result;
}

uint64_t ExternalAnalyticsURLProvider.init(queryItemsGenerators:)(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
  return v1;
}

uint64_t ExternalAnalyticsURLProvider.generateURL<A>(from:configuration:sessionID:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, char *a7@<X8>)
{
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void (*v42)(uint64_t);
  _BYTE *v43;
  _BYTE *v45;
  uint64_t v46;
  void (*v47)(char *, uint64_t, uint64_t);
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;

  v79 = a7;
  v13 = sub_1DC62A140();
  v77 = *(_QWORD *)(v13 - 8);
  v78 = v13;
  MEMORY[0x1E0C80A78](v13);
  v75 = (char *)&v59 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC570418(0, (unint64_t *)&qword_1EDB0E558, v15);
  v17 = MEMORY[0x1E0C80A78](v16);
  v19 = (char *)&v59 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17);
  v21 = (char *)&v59 - v20;
  v76 = a2;
  v22 = sub_1DC62A470();
  if (v23)
  {
    sub_1DC56EDA4(v95, a1, v22, v23, a3, a4, a5, a6, (uint64_t)&v80);
    swift_bridgeObjectRelease();
    v24 = v80;
    if (v80)
    {
      v25 = v81;
      v26 = v82;
      v71 = v81;
      v68 = v21;
      v27 = v83;
      v72 = v84;
      v73 = v85;
      v74 = v86;
      v28 = v88;
      v60 = v87;
      v67 = v19;
      v29 = v89;
      v65 = v90;
      v30 = v92;
      v64 = v91;
      v31 = v94;
      v62 = v93;
      swift_bridgeObjectRetain();
      v32 = v25;
      v33 = v60;
      sub_1DC4D7808(v32, v26);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRelease();
      v66 = v29;
      v34 = (uint64_t)v67;
      v69 = v26;
      v70 = v27;
      v35 = (uint64_t)v68;
      v36 = v33;
      v61 = v28;
      sub_1DC4D88E4(v71, v26);
      swift_bridgeObjectRelease();
      v63 = v30;
      swift_bridgeObjectRelease_n();
      v37 = v24;
      v38 = v24;
      v39 = v62;
      sub_1DC56EF28(v76, v38, v62, v31, v35);
      v95 = v31;
      swift_bridgeObjectRelease();
      sub_1DC56F868(v35, v34);
      v41 = v77;
      v40 = v78;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v77 + 48))(v34, 1, v78) == 1)
      {
        sub_1DC56F8BC(v37, v71, v69);
        v42 = (void (*)(uint64_t))MEMORY[0x1E0CAFFF8];
        sub_1DC570464(v34, (unint64_t *)&qword_1EDB0E558, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
        sub_1DC56ED60();
        swift_allocError();
        *v43 = 2;
        swift_willThrow();
        return sub_1DC570464(v35, (unint64_t *)&qword_1EDB0E558, v42);
      }
      else
      {
        sub_1DC570464(v35, (unint64_t *)&qword_1EDB0E558, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
        v47 = *(void (**)(char *, uint64_t, uint64_t))(v41 + 32);
        v48 = v36;
        v49 = v75;
        v47(v75, v34, v40);
        v50 = v79;
        v47(v79, (uint64_t)v49, v40);
        swift_bridgeObjectRelease();
        v51 = type metadata accessor for ExternalURLData();
        v52 = &v50[*(int *)(v51 + 20)];
        v53 = v69;
        *(_QWORD *)v52 = v71;
        *((_QWORD *)v52 + 1) = v53;
        v54 = v72;
        *((_QWORD *)v52 + 2) = v70;
        *((_QWORD *)v52 + 3) = v54;
        v55 = v74;
        *((_QWORD *)v52 + 4) = v73;
        *((_QWORD *)v52 + 5) = v55;
        v56 = v61;
        *((_QWORD *)v52 + 6) = v48;
        *((_QWORD *)v52 + 7) = v56;
        *((_DWORD *)v52 + 16) = v66;
        v52[72] = v65;
        v57 = v63;
        *((_QWORD *)v52 + 10) = v64;
        *((_QWORD *)v52 + 11) = v57;
        v58 = v95;
        *((_QWORD *)v52 + 12) = v39;
        *((_QWORD *)v52 + 13) = v58;
        return (*(uint64_t (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v51 - 8) + 56))(v50, 0, 1, v51);
      }
    }
    else
    {
      v46 = type metadata accessor for ExternalURLData();
      return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 56))(v79, 1, 1, v46);
    }
  }
  else
  {
    sub_1DC56ED60();
    swift_allocError();
    *v45 = 0;
    return swift_willThrow();
  }
}

unint64_t sub_1DC56ED60()
{
  unint64_t result;

  result = qword_1F036D050;
  if (!qword_1F036D050)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC63B74C, &type metadata for ExternalAnalyticsURLProvider.URLProviderError);
    atomic_store(result, (unint64_t *)&qword_1F036D050);
  }
  return result;
}

uint64_t sub_1DC56EDA4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  uint64_t result;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  _OWORD v28[7];
  uint64_t v29;
  _QWORD v30[3];
  uint64_t v31;
  uint64_t v32;

  result = *(_QWORD *)(a1 + 16);
  if (*(_QWORD *)(result + 16))
  {
    v14 = result + 32;
    swift_bridgeObjectRetain();
    sub_1DC4BAC88(v14, (uint64_t)v30);
    v15 = v31;
    v16 = v32;
    __swift_project_boxed_opaque_existential_1(v30, v31);
    (*(void (**)(_OWORD *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v16 + 8))(v28, a2, a3, a4, a5, a6, a7, a8, v15, v16);
    swift_bridgeObjectRelease();
    v17 = v29;
    v18 = v28[1];
    v19 = v28[2];
    v20 = v28[3];
    v21 = v28[4];
    v22 = v28[5];
    v23 = v28[6];
    *(_OWORD *)a9 = v28[0];
    *(_OWORD *)(a9 + 16) = v18;
    *(_OWORD *)(a9 + 32) = v19;
    *(_OWORD *)(a9 + 48) = v20;
    *(_OWORD *)(a9 + 64) = v21;
    *(_OWORD *)(a9 + 80) = v22;
    *(_OWORD *)(a9 + 96) = v23;
    *(_QWORD *)(a9 + 112) = v17;
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v30);
  }
  else
  {
    *(_QWORD *)(a9 + 112) = 0;
    *(_OWORD *)(a9 + 80) = 0u;
    *(_OWORD *)(a9 + 96) = 0u;
    *(_OWORD *)(a9 + 48) = 0u;
    *(_OWORD *)(a9 + 64) = 0u;
    *(_OWORD *)(a9 + 16) = 0u;
    *(_OWORD *)(a9 + 32) = 0u;
    *(_OWORD *)a9 = 0u;
  }
  return result;
}

uint64_t type metadata accessor for ExternalURLData()
{
  uint64_t result;

  result = qword_1EDB0F360;
  if (!qword_1EDB0F360)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1DC56EF28@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void (*v39)(char *, char *, uint64_t);
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  unint64_t v46;
  unint64_t v47;
  unsigned int (*v48)(uint64_t, uint64_t, uint64_t);
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  unint64_t v61;
  unint64_t v62;
  unint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  char *v67;
  char *v68;
  unint64_t v69;
  unint64_t v70;
  uint64_t v71;
  char *v72;
  unint64_t v73;
  unint64_t v74;
  uint64_t v75;
  _QWORD v76[3];
  char *v77;
  unsigned int (*v78)(char *, uint64_t, uint64_t);
  char *v79;
  char *v80;
  char *v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  char *v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  void (*v90)(char *, unint64_t, uint64_t);
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  unint64_t v100;
  uint64_t v101;
  unint64_t v102;

  v83 = a3;
  v84 = a4;
  sub_1DC570418(0, (unint64_t *)&qword_1EDB0E558, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
  MEMORY[0x1E0C80A78](v8);
  v88 = (char *)v76 - v9;
  v10 = sub_1DC62A140();
  v93 = *(_QWORD *)(v10 - 8);
  v94 = v10;
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)v76 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v99 = sub_1DC62A0C8();
  v13 = *(_QWORD *)(v99 - 8);
  v14 = MEMORY[0x1E0C80A78](v99);
  v97 = (char *)v76 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = MEMORY[0x1E0C80A78](v14);
  v96 = (char *)v76 - v17;
  v18 = MEMORY[0x1E0C80A78](v16);
  v82 = (char *)v76 - v19;
  v20 = MEMORY[0x1E0C80A78](v18);
  v81 = (char *)v76 - v21;
  v22 = MEMORY[0x1E0C80A78](v20);
  v86 = (char *)v76 - v23;
  MEMORY[0x1E0C80A78](v22);
  v85 = (char *)v76 - v24;
  v101 = sub_1DC62A4E8();
  v95 = *(_QWORD *)(v101 - 8);
  MEMORY[0x1E0C80A78](v101);
  v26 = (char *)v76 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC570418(0, &qword_1EDB12718, (void (*)(uint64_t))MEMORY[0x1E0CAE890]);
  v28 = MEMORY[0x1E0C80A78](v27);
  v98 = (uint64_t)v76 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v28);
  v31 = (char *)v76 - v30;
  v32 = sub_1DC62A0F8();
  v33 = *(_QWORD *)(v32 - 8);
  v34 = MEMORY[0x1E0C80A78](v32);
  v80 = (char *)v76 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v34);
  v79 = (char *)v76 - v36;
  sub_1DC62A494();
  if (!v37)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v93 + 56))(a5, 1, 1, v94);
  sub_1DC62A0EC();
  swift_bridgeObjectRelease();
  v78 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48);
  if (v78(v31, 1, v32) == 1)
  {
    sub_1DC570464((uint64_t)v31, &qword_1EDB12718, (void (*)(uint64_t))MEMORY[0x1E0CAE890]);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v93 + 56))(a5, 1, 1, v94);
  }
  v87 = v33;
  v39 = *(void (**)(char *, char *, uint64_t))(v33 + 32);
  v40 = v79;
  v89 = v32;
  v39(v79, v31, v32);
  v41 = *(_QWORD *)(sub_1DC62A4AC() + 16);
  swift_bridgeObjectRelease();
  if (v41)
  {
    v77 = v12;
    v92 = a1;
    v42 = sub_1DC62A4AC();
    v43 = *(_QWORD *)(v42 + 16);
    v44 = v87;
    if (v43)
    {
      v76[2] = a2;
      v76[1] = a5;
      v45 = (*(unsigned __int8 *)(v95 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v95 + 80);
      v76[0] = v42;
      v46 = v42 + v45;
      v91 = *(_QWORD *)(v95 + 72);
      v47 = MEMORY[0x1E0DEE9D8];
      v90 = *(void (**)(char *, unint64_t, uint64_t))(v95 + 16);
      v48 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v78;
      while (1)
      {
        v100 = v47;
        v90(v26, v46, v101);
        v50 = sub_1DC62A4B8();
        if (!v51)
          goto LABEL_31;
        v52 = v51;
        if (sub_1DC62A4D0() == v50 && v52 == v53)
        {
          swift_bridgeObjectRelease();
        }
        else
        {
          v54 = sub_1DC62B520();
          swift_bridgeObjectRelease();
          if ((v54 & 1) == 0)
          {
            swift_bridgeObjectRelease();
LABEL_31:
            sub_1DC62A4D0();
            sub_1DC62A4DC();
            v72 = v96;
            sub_1DC62A0BC();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v97, v72, v99);
            v47 = v100;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              v47 = sub_1DC525BA8(0, *(_QWORD *)(v47 + 16) + 1, 1, v47);
            v74 = *(_QWORD *)(v47 + 16);
            v73 = *(_QWORD *)(v47 + 24);
            if (v74 >= v73 >> 1)
              v47 = sub_1DC525BA8(v73 > 1, v74 + 1, 1, v47);
            *(_QWORD *)(v47 + 16) = v74 + 1;
            v75 = v99;
            (*(void (**)(unint64_t, char *, uint64_t))(v13 + 32))(v47+ ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80))+ *(_QWORD *)(v13 + 72) * v74, v97, v99);
            (*(void (**)(char *, uint64_t))(v13 + 8))(v96, v75);
            (*(void (**)(char *, uint64_t))(v95 + 8))(v26, v101);
            goto LABEL_11;
          }
        }
        sub_1DC62A4DC();
        v55 = v98;
        sub_1DC62A0EC();
        v56 = v55;
        swift_bridgeObjectRelease();
        v57 = v55;
        v58 = v89;
        if (!v48(v57, 1, v89))
        {
          v102 = MEMORY[0x1E0DEE9D8];
          v59 = swift_bridgeObjectRetain();
          sub_1DC5477D4(v59);
          v60 = v85;
          sub_1DC62A0BC();
          (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v86, v60, v99);
          v61 = v102;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v61 = sub_1DC525BA8(0, *(_QWORD *)(v61 + 16) + 1, 1, v61);
          v63 = *(_QWORD *)(v61 + 16);
          v62 = *(_QWORD *)(v61 + 24);
          if (v63 >= v62 >> 1)
            v61 = sub_1DC525BA8(v62 > 1, v63 + 1, 1, v61);
          *(_QWORD *)(v61 + 16) = v63 + 1;
          v64 = v99;
          (*(void (**)(unint64_t, char *, uint64_t))(v13 + 32))(v61+ ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80))+ *(_QWORD *)(v13 + 72) * v63, v86, v99);
          v102 = v61;
          (*(void (**)(char *, uint64_t))(v13 + 8))(v85, v64);
          v56 = v98;
          sub_1DC62A0D4();
          v58 = v89;
          v44 = v87;
        }
        if (v48(v56, 1, v58))
        {
          v49 = (uint64_t)v88;
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v93 + 56))(v88, 1, 1, v94);
        }
        else
        {
          v65 = v13;
          v66 = v80;
          (*(void (**)(char *, uint64_t, uint64_t))(v44 + 16))(v80, v56, v58);
          v49 = (uint64_t)v88;
          sub_1DC62A0E0();
          v67 = v66;
          v13 = v65;
          v48 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v78;
          v44 = v87;
          (*(void (**)(char *, uint64_t))(v87 + 8))(v67, v58);
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v93 + 48))(v49, 1, v94) != 1)
          {
            (*(void (**)(char *, uint64_t, uint64_t))(v93 + 32))(v77, v49, v94);
            sub_1DC62A11C();
            v68 = v81;
            sub_1DC62A0BC();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v82, v68, v99);
            v47 = v100;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              v47 = sub_1DC525BA8(0, *(_QWORD *)(v47 + 16) + 1, 1, v47);
            v70 = *(_QWORD *)(v47 + 16);
            v69 = *(_QWORD *)(v47 + 24);
            if (v70 >= v69 >> 1)
              v47 = sub_1DC525BA8(v69 > 1, v70 + 1, 1, v47);
            *(_QWORD *)(v47 + 16) = v70 + 1;
            v71 = v99;
            (*(void (**)(unint64_t, char *, uint64_t))(v13 + 32))(v47+ ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80))+ *(_QWORD *)(v13 + 72) * v70, v82, v99);
            (*(void (**)(char *, uint64_t))(v13 + 8))(v81, v71);
            (*(void (**)(char *, uint64_t))(v93 + 8))(v77, v94);
            (*(void (**)(char *, uint64_t))(v95 + 8))(v26, v101);
            goto LABEL_10;
          }
        }
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v95 + 8))(v26, v101);
        sub_1DC570464(v49, (unint64_t *)&qword_1EDB0E558, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
        v47 = v100;
LABEL_10:
        sub_1DC570464(v98, &qword_1EDB12718, (void (*)(uint64_t))MEMORY[0x1E0CAE890]);
LABEL_11:
        v46 += v91;
        if (!--v43)
        {
          swift_bridgeObjectRelease();
          v40 = v79;
          goto LABEL_39;
        }
      }
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1DC56F968();
    v44 = v87;
  }
LABEL_39:
  sub_1DC62A0D4();
  sub_1DC62A0E0();
  return (*(uint64_t (**)(char *, uint64_t))(v44 + 8))(v40, v89);
}

uint64_t sub_1DC56F868(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1DC570418(0, (unint64_t *)&qword_1EDB0E558, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DC56F8BC(uint64_t result, uint64_t a2, uint64_t a3)
{
  if (result)
  {
    swift_bridgeObjectRelease();
    sub_1DC4D88E4(a2, a3);
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t sub_1DC56F968()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v12;
  unint64_t v13;

  v0 = sub_1DC62A0C8();
  v1 = *(_QWORD *)(v0 - 8);
  v2 = MEMORY[0x1E0C80A78](v0);
  v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v12 - v5;
  v13 = MEMORY[0x1E0DEE9D8];
  v7 = swift_bridgeObjectRetain();
  sub_1DC5477D4(v7);
  sub_1DC62A0BC();
  (*(void (**)(char *, char *, uint64_t))(v1 + 16))(v4, v6, v0);
  v8 = v13;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v8 = sub_1DC525BA8(0, *(_QWORD *)(v8 + 16) + 1, 1, v8);
  v10 = *(_QWORD *)(v8 + 16);
  v9 = *(_QWORD *)(v8 + 24);
  if (v10 >= v9 >> 1)
    v8 = sub_1DC525BA8(v9 > 1, v10 + 1, 1, v8);
  *(_QWORD *)(v8 + 16) = v10 + 1;
  (*(void (**)(unint64_t, char *, uint64_t))(v1 + 32))(v8+ ((*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80))+ *(_QWORD *)(v1 + 72) * v10, v4, v0);
  v13 = v8;
  (*(void (**)(char *, uint64_t))(v1 + 8))(v6, v0);
  return v13;
}

uint64_t ExternalAnalyticsURLProvider.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return v0;
}

uint64_t ExternalAnalyticsURLProvider.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1DC56FB30@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, char *a7@<X8>)
{
  return ExternalAnalyticsURLProvider.generateURL<A>(from:configuration:sessionID:)(a1, a2, a3, a4, a5, a6, a7);
}

uint64_t *initializeBufferWithCopyOfBuffer for ExternalURLData(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v13 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1DC62A140();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = *(uint64_t *)((char *)a2 + v8 + 8);
    if (v11)
    {
      *(_QWORD *)v9 = *(_QWORD *)v10;
      *((_QWORD *)v9 + 1) = v11;
      v12 = *((_QWORD *)v10 + 3);
      *((_QWORD *)v9 + 2) = *((_QWORD *)v10 + 2);
      *((_QWORD *)v9 + 3) = v12;
      v9[32] = v10[32];
      *((_QWORD *)v9 + 5) = *((_QWORD *)v10 + 5);
      v9[48] = v10[48];
      *((_QWORD *)v9 + 7) = *((_QWORD *)v10 + 7);
      *((_DWORD *)v9 + 16) = *((_DWORD *)v10 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v14 = *((_OWORD *)v10 + 3);
      *((_OWORD *)v9 + 2) = *((_OWORD *)v10 + 2);
      *((_OWORD *)v9 + 3) = v14;
      *((_DWORD *)v9 + 16) = *((_DWORD *)v10 + 16);
      v15 = *((_OWORD *)v10 + 1);
      *(_OWORD *)v9 = *(_OWORD *)v10;
      *((_OWORD *)v9 + 1) = v15;
    }
    v9[72] = v10[72];
    v16 = *((_QWORD *)v10 + 11);
    *((_QWORD *)v9 + 10) = *((_QWORD *)v10 + 10);
    *((_QWORD *)v9 + 11) = v16;
    v17 = *((_QWORD *)v10 + 13);
    *((_QWORD *)v9 + 12) = *((_QWORD *)v10 + 12);
    *((_QWORD *)v9 + 13) = v17;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for ExternalURLData(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1DC62A140();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  if (*(_QWORD *)(a1 + *(int *)(a2 + 20) + 8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ExternalURLData(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;

  v6 = sub_1DC62A140();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = *(_QWORD *)(v9 + 8);
  if (v10)
  {
    *(_QWORD *)v8 = *(_QWORD *)v9;
    *(_QWORD *)(v8 + 8) = v10;
    v11 = *(_QWORD *)(v9 + 24);
    *(_QWORD *)(v8 + 16) = *(_QWORD *)(v9 + 16);
    *(_QWORD *)(v8 + 24) = v11;
    *(_BYTE *)(v8 + 32) = *(_BYTE *)(v9 + 32);
    *(_QWORD *)(v8 + 40) = *(_QWORD *)(v9 + 40);
    *(_BYTE *)(v8 + 48) = *(_BYTE *)(v9 + 48);
    *(_QWORD *)(v8 + 56) = *(_QWORD *)(v9 + 56);
    *(_DWORD *)(v8 + 64) = *(_DWORD *)(v9 + 64);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v12 = *(_OWORD *)(v9 + 48);
    *(_OWORD *)(v8 + 32) = *(_OWORD *)(v9 + 32);
    *(_OWORD *)(v8 + 48) = v12;
    *(_DWORD *)(v8 + 64) = *(_DWORD *)(v9 + 64);
    v13 = *(_OWORD *)(v9 + 16);
    *(_OWORD *)v8 = *(_OWORD *)v9;
    *(_OWORD *)(v8 + 16) = v13;
  }
  *(_BYTE *)(v8 + 72) = *(_BYTE *)(v9 + 72);
  v14 = *(_QWORD *)(v9 + 88);
  *(_QWORD *)(v8 + 80) = *(_QWORD *)(v9 + 80);
  *(_QWORD *)(v8 + 88) = v14;
  v15 = *(_QWORD *)(v9 + 104);
  *(_QWORD *)(v8 + 96) = *(_QWORD *)(v9 + 96);
  *(_QWORD *)(v8 + 104) = v15;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ExternalURLData(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;

  v6 = sub_1DC62A140();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = *(_QWORD *)(a1 + v7 + 8);
  v11 = *(_QWORD *)(v9 + 8);
  if (v10)
  {
    if (v11)
    {
      *(_QWORD *)v8 = *(_QWORD *)v9;
      *(_QWORD *)(v8 + 8) = *(_QWORD *)(v9 + 8);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v8 + 16) = *(_QWORD *)(v9 + 16);
      *(_QWORD *)(v8 + 24) = *(_QWORD *)(v9 + 24);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_BYTE *)(v8 + 32) = *(_BYTE *)(v9 + 32);
      v12 = *(_QWORD *)(v9 + 40);
      *(_BYTE *)(v8 + 48) = *(_BYTE *)(v9 + 48);
      *(_QWORD *)(v8 + 40) = v12;
      *(_QWORD *)(v8 + 56) = *(_QWORD *)(v9 + 56);
      *(_BYTE *)(v8 + 64) = *(_BYTE *)(v9 + 64);
      *(_BYTE *)(v8 + 65) = *(_BYTE *)(v9 + 65);
      *(_BYTE *)(v8 + 66) = *(_BYTE *)(v9 + 66);
      *(_BYTE *)(v8 + 67) = *(_BYTE *)(v9 + 67);
    }
    else
    {
      sub_1DC5006BC(v8);
      *(_OWORD *)v8 = *(_OWORD *)v9;
      v15 = *(_OWORD *)(v9 + 32);
      v14 = *(_OWORD *)(v9 + 48);
      v16 = *(_OWORD *)(v9 + 16);
      *(_DWORD *)(v8 + 64) = *(_DWORD *)(v9 + 64);
      *(_OWORD *)(v8 + 32) = v15;
      *(_OWORD *)(v8 + 48) = v14;
      *(_OWORD *)(v8 + 16) = v16;
    }
  }
  else if (v11)
  {
    *(_QWORD *)v8 = *(_QWORD *)v9;
    *(_QWORD *)(v8 + 8) = *(_QWORD *)(v9 + 8);
    *(_QWORD *)(v8 + 16) = *(_QWORD *)(v9 + 16);
    *(_QWORD *)(v8 + 24) = *(_QWORD *)(v9 + 24);
    *(_BYTE *)(v8 + 32) = *(_BYTE *)(v9 + 32);
    v13 = *(_QWORD *)(v9 + 40);
    *(_BYTE *)(v8 + 48) = *(_BYTE *)(v9 + 48);
    *(_QWORD *)(v8 + 40) = v13;
    *(_QWORD *)(v8 + 56) = *(_QWORD *)(v9 + 56);
    *(_BYTE *)(v8 + 64) = *(_BYTE *)(v9 + 64);
    *(_BYTE *)(v8 + 65) = *(_BYTE *)(v9 + 65);
    *(_BYTE *)(v8 + 66) = *(_BYTE *)(v9 + 66);
    *(_BYTE *)(v8 + 67) = *(_BYTE *)(v9 + 67);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)v8 = *(_OWORD *)v9;
    v17 = *(_OWORD *)(v9 + 16);
    v18 = *(_OWORD *)(v9 + 32);
    v19 = *(_OWORD *)(v9 + 48);
    *(_DWORD *)(v8 + 64) = *(_DWORD *)(v9 + 64);
    *(_OWORD *)(v8 + 32) = v18;
    *(_OWORD *)(v8 + 48) = v19;
    *(_OWORD *)(v8 + 16) = v17;
  }
  *(_BYTE *)(v8 + 72) = *(_BYTE *)(v9 + 72);
  *(_QWORD *)(v8 + 80) = *(_QWORD *)(v9 + 80);
  *(_QWORD *)(v8 + 88) = *(_QWORD *)(v9 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v8 + 96) = *(_QWORD *)(v9 + 96);
  *(_QWORD *)(v8 + 104) = *(_QWORD *)(v9 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for ExternalURLData(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _OWORD *v8;
  _OWORD *v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;

  v6 = sub_1DC62A140();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_OWORD *)(a1 + v7);
  v9 = (_OWORD *)(a2 + v7);
  v10 = v9[5];
  v8[4] = v9[4];
  v8[5] = v10;
  v8[6] = v9[6];
  v11 = v9[1];
  *v8 = *v9;
  v8[1] = v11;
  v12 = v9[3];
  v8[2] = v9[2];
  v8[3] = v12;
  return a1;
}

uint64_t assignWithTake for ExternalURLData(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;

  v6 = sub_1DC62A140();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  if (!*(_QWORD *)(a1 + v7 + 8))
    goto LABEL_5;
  v10 = *(_QWORD *)(v9 + 8);
  if (!v10)
  {
    sub_1DC5006BC(v8);
LABEL_5:
    v12 = *(_OWORD *)(v9 + 48);
    *(_OWORD *)(v8 + 32) = *(_OWORD *)(v9 + 32);
    *(_OWORD *)(v8 + 48) = v12;
    *(_DWORD *)(v8 + 64) = *(_DWORD *)(v9 + 64);
    v13 = *(_OWORD *)(v9 + 16);
    *(_OWORD *)v8 = *(_OWORD *)v9;
    *(_OWORD *)(v8 + 16) = v13;
    goto LABEL_6;
  }
  *(_QWORD *)v8 = *(_QWORD *)v9;
  *(_QWORD *)(v8 + 8) = v10;
  swift_bridgeObjectRelease();
  v11 = *(_QWORD *)(v9 + 24);
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(v9 + 16);
  *(_QWORD *)(v8 + 24) = v11;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v8 + 32) = *(_BYTE *)(v9 + 32);
  *(_QWORD *)(v8 + 40) = *(_QWORD *)(v9 + 40);
  *(_BYTE *)(v8 + 48) = *(_BYTE *)(v9 + 48);
  *(_QWORD *)(v8 + 56) = *(_QWORD *)(v9 + 56);
  *(_BYTE *)(v8 + 64) = *(_BYTE *)(v9 + 64);
  *(_BYTE *)(v8 + 65) = *(_BYTE *)(v9 + 65);
  *(_BYTE *)(v8 + 66) = *(_BYTE *)(v9 + 66);
  *(_BYTE *)(v8 + 67) = *(_BYTE *)(v9 + 67);
LABEL_6:
  *(_BYTE *)(v8 + 72) = *(_BYTE *)(v9 + 72);
  v14 = *(_QWORD *)(v9 + 88);
  *(_QWORD *)(v8 + 80) = *(_QWORD *)(v9 + 80);
  *(_QWORD *)(v8 + 88) = v14;
  swift_bridgeObjectRelease();
  v15 = *(_QWORD *)(v9 + 104);
  *(_QWORD *)(v8 + 96) = *(_QWORD *)(v9 + 96);
  *(_QWORD *)(v8 + 104) = v15;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ExternalURLData()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC570140(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_1DC62A140();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 88);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for ExternalURLData()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC5701CC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_1DC62A140();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20) + 88) = (a2 - 1);
  return result;
}

uint64_t sub_1DC570248()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1DC62A140();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t dispatch thunk of ExternalAnalyticsURLProviderType.generateURL<A>(from:configuration:sessionID:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return (*(uint64_t (**)(void))(a8 + 8))();
}

uint64_t type metadata accessor for ExternalAnalyticsURLProvider()
{
  return objc_opt_self();
}

uint64_t method lookup function for ExternalAnalyticsURLProvider()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ExternalAnalyticsURLProvider.__allocating_init(queryItemsGenerators:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t storeEnumTagSinglePayload for ExternalAnalyticsURLProvider.URLProviderError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1DC570350 + 4 * byte_1DC63B625[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1DC570384 + 4 * byte_1DC63B620[v4]))();
}

uint64_t sub_1DC570384(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC57038C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DC570394);
  return result;
}

uint64_t sub_1DC5703A0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DC5703A8);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1DC5703AC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC5703B4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ExternalAnalyticsURLProvider.URLProviderError()
{
  return &type metadata for ExternalAnalyticsURLProvider.URLProviderError;
}

unint64_t sub_1DC5703D4()
{
  unint64_t result;

  result = qword_1F036D058;
  if (!qword_1F036D058)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC63B724, &type metadata for ExternalAnalyticsURLProvider.URLProviderError);
    atomic_store(result, (unint64_t *)&qword_1F036D058);
  }
  return result;
}

void sub_1DC570418(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    a3(255);
    v4 = sub_1DC62B25C();
    if (!v5)
      atomic_store(v4, a2);
  }
}

uint64_t sub_1DC570464(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  uint64_t v4;

  sub_1DC570418(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_1DC5704A0(uint64_t a1)
{
  return sub_1DC4BE784(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], qword_1EDB11488, MEMORY[0x1E0CF8078]);
}

uint64_t static UserSegmentationSegmentSetIDsChangeEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C2FE8(&qword_1EDB114A0, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1EDB11488, a1);
}

uint64_t sub_1DC5704E0(uint64_t a1)
{
  return sub_1DC4BE784(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], qword_1EDB114A8, MEMORY[0x1E0CF8380]);
}

uint64_t static UserSegmentationSegmentSetIDsChangeEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C2FE8(&qword_1EDB114C0, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1EDB114A8, a1);
}

uint64_t UserSegmentationSegmentSetIDsChangeEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C37DC((uint64_t (*)(_QWORD))sub_1DC4B6600, a1);
}

uint64_t UserSegmentationSegmentSetIDsChangeEvent.eventData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  sub_1DC4B6600();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*UserSegmentationSegmentSetIDsChangeEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t UserSegmentationSegmentSetIDsChangeEvent.userSegmentationSegmentSetData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for UserSegmentationSegmentSetIDsChangeEvent(0) + 20);
  sub_1DC5705D0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t type metadata accessor for UserSegmentationSegmentSetIDsChangeEvent(uint64_t a1)
{
  return sub_1DC4B385C(a1, qword_1EDB114D0);
}

void sub_1DC5705D0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EDB0E838)
  {
    sub_1DC570634();
    sub_1DC570678();
    v0 = sub_1DC62A80C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EDB0E838);
  }
}

unint64_t sub_1DC570634()
{
  unint64_t result;

  result = qword_1EDB11160;
  if (!qword_1EDB11160)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for UserSegmentationSegmentSetData, &type metadata for UserSegmentationSegmentSetData);
    atomic_store(result, (unint64_t *)&qword_1EDB11160);
  }
  return result;
}

unint64_t sub_1DC570678()
{
  unint64_t result;

  result = qword_1EDB11158;
  if (!qword_1EDB11158)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for UserSegmentationSegmentSetData, &type metadata for UserSegmentationSegmentSetData);
    atomic_store(result, (unint64_t *)&qword_1EDB11158);
  }
  return result;
}

uint64_t UserSegmentationSegmentSetIDsChangeEvent.userSegmentationSegmentSetData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for UserSegmentationSegmentSetIDsChangeEvent(0) + 20);
  sub_1DC5705D0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*UserSegmentationSegmentSetIDsChangeEvent.userSegmentationSegmentSetData.modify())()
{
  type metadata accessor for UserSegmentationSegmentSetIDsChangeEvent(0);
  return nullsub_1;
}

uint64_t UserSegmentationSegmentSetIDsChangeEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *MEMORY[0x1E0CF8128];
  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
  v4 = a1 + *(int *)(type metadata accessor for UserSegmentationSegmentSetIDsChangeEvent(0) + 20);
  sub_1DC5705D0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 104))(v4, v2, v5);
}

uint64_t UserSegmentationSegmentSetIDsChangeEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C37DC((uint64_t (*)(_QWORD))MEMORY[0x1E0CF8670], a1);
}

uint64_t UserSegmentationSegmentSetIDsChangeEvent.Model.userSegmentationSegmentSetData.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for UserSegmentationSegmentSetIDsChangeEvent.Model(0) + 20));
  return swift_bridgeObjectRetain();
}

uint64_t type metadata accessor for UserSegmentationSegmentSetIDsChangeEvent.Model(uint64_t a1)
{
  return sub_1DC4B385C(a1, qword_1F036D0D0);
}

uint64_t UserSegmentationSegmentSetIDsChangeEvent.Model.init(eventData:userSegmentationSegmentSetData:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  v5 = *a2;
  v6 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a3, a1, v6);
  result = type metadata accessor for UserSegmentationSegmentSetIDsChangeEvent.Model(0);
  *(_QWORD *)(a3 + *(int *)(result + 20)) = v5;
  return result;
}

uint64_t sub_1DC57084C()
{
  _BYTE *v0;

  if (*v0)
    return 0xD00000000000001ELL;
  else
    return 0x746144746E657665;
}

uint64_t sub_1DC570890@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1DC57162C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DC5708B4()
{
  sub_1DC570A6C();
  return sub_1DC62B604();
}

uint64_t sub_1DC5708DC()
{
  sub_1DC570A6C();
  return sub_1DC62B610();
}

uint64_t UserSegmentationSegmentSetIDsChangeEvent.Model.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  _BYTE v11[16];
  uint64_t v12;
  char v13;

  v3 = v1;
  sub_1DC570D38(0, &qword_1F036D060, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = &v11[-v8];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC570A6C();
  sub_1DC62B5F8();
  v13 = 0;
  sub_1DC62ABA8();
  sub_1DC4B6788(&qword_1EDB0E8A8, MEMORY[0x1E0CF8680]);
  sub_1DC62B4E4();
  if (!v2)
  {
    v12 = *(_QWORD *)(v3 + *(int *)(type metadata accessor for UserSegmentationSegmentSetIDsChangeEvent.Model(0) + 20));
    v11[15] = 1;
    sub_1DC570678();
    sub_1DC62B4E4();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1DC570A6C()
{
  unint64_t result;

  result = qword_1F036D068;
  if (!qword_1F036D068)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC63B944, &type metadata for UserSegmentationSegmentSetIDsChangeEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036D068);
  }
  return result;
}

uint64_t UserSegmentationSegmentSetIDsChangeEvent.Model.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  char v27;

  v20 = a2;
  v24 = sub_1DC62ABA8();
  v21 = *(_QWORD *)(v24 - 8);
  MEMORY[0x1E0C80A78](v24);
  v22 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC570D38(0, &qword_1F036D070, MEMORY[0x1E0DED048]);
  v23 = v5;
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v18 - v7;
  v9 = type metadata accessor for UserSegmentationSegmentSetIDsChangeEvent.Model(0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC570A6C();
  sub_1DC62B5E0();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v18 = a1;
  v19 = v6;
  v12 = (uint64_t)v11;
  v13 = v21;
  v27 = 0;
  sub_1DC4B6788(&qword_1EDB0E278, MEMORY[0x1E0CF8688]);
  v15 = v22;
  v14 = v23;
  v16 = v24;
  sub_1DC62B454();
  (*(void (**)(uint64_t, char *, uint64_t))(v13 + 32))(v12, v15, v16);
  v26 = 1;
  sub_1DC570634();
  sub_1DC62B454();
  (*(void (**)(char *, uint64_t))(v19 + 8))(v8, v14);
  *(_QWORD *)(v12 + *(int *)(v9 + 20)) = v25;
  sub_1DC570D94(v12, v20);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v18);
  return sub_1DC570DD8(v12);
}

void sub_1DC570D38(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1DC570A6C();
    v7 = a3(a1, &type metadata for UserSegmentationSegmentSetIDsChangeEvent.Model.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1DC570D94(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for UserSegmentationSegmentSetIDsChangeEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DC570DD8(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for UserSegmentationSegmentSetIDsChangeEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1DC570E14@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return UserSegmentationSegmentSetIDsChangeEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_1DC570E28(_QWORD *a1)
{
  return UserSegmentationSegmentSetIDsChangeEvent.Model.encode(to:)(a1);
}

uint64_t sub_1DC570E3C@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4B2C68(&qword_1EDB114A0, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1EDB11488, a1);
}

uint64_t sub_1DC570E60@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4B2C68(&qword_1EDB114C0, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1EDB114A8, a1);
}

uint64_t sub_1DC570E84@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *MEMORY[0x1E0CF8128];
  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 104))(a2, v4, v5);
  v6 = a2 + *(int *)(a1 + 20);
  sub_1DC5705D0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 104))(v6, v4, v7);
}

uint64_t *initializeBufferWithCopyOfBuffer for UserSegmentationSegmentSetIDsChangeEvent(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_1DC4B6600();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    sub_1DC5705D0();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
  }
  return a1;
}

uint64_t destroy for UserSegmentationSegmentSetIDsChangeEvent(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + *(int *)(a2 + 20);
  sub_1DC5705D0();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
}

uint64_t initializeWithCopy for UserSegmentationSegmentSetIDsChangeEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1DC5705D0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  return a1;
}

uint64_t assignWithCopy for UserSegmentationSegmentSetIDsChangeEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1DC5705D0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  return a1;
}

uint64_t initializeWithTake for UserSegmentationSegmentSetIDsChangeEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1DC5705D0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  return a1;
}

uint64_t assignWithTake for UserSegmentationSegmentSetIDsChangeEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1DC5705D0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for UserSegmentationSegmentSetIDsChangeEvent()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC5711FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  sub_1DC4B6600();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    sub_1DC5705D0();
    v8 = v11;
    v12 = *(_QWORD *)(v11 - 8);
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t storeEnumTagSinglePayload for UserSegmentationSegmentSetIDsChangeEvent()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC57127C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  sub_1DC4B6600();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    sub_1DC5705D0();
    v10 = v13;
    v14 = *(_QWORD *)(v13 - 8);
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_1DC5712F8()
{
  unint64_t v0;
  unint64_t v1;

  sub_1DC4B6600();
  if (v0 <= 0x3F)
  {
    sub_1DC5705D0();
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

uint64_t getEnumTagSinglePayload for UserSegmentationSegmentSetIDsChangeEvent.Model()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC571388(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_1DC62ABA8();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for UserSegmentationSegmentSetIDsChangeEvent.Model()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC571410(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_1DC62ABA8();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  return result;
}

uint64_t storeEnumTagSinglePayload for UserSegmentationSegmentSetIDsChangeEvent.Model.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1DC5714D4 + 4 * byte_1DC63B795[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1DC571508 + 4 * byte_1DC63B790[v4]))();
}

uint64_t sub_1DC571508(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC571510(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DC571518);
  return result;
}

uint64_t sub_1DC571524(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DC57152CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1DC571530(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC571538(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for UserSegmentationSegmentSetIDsChangeEvent.Model.CodingKeys()
{
  return &type metadata for UserSegmentationSegmentSetIDsChangeEvent.Model.CodingKeys;
}

unint64_t sub_1DC571558()
{
  unint64_t result;

  result = qword_1F036D108;
  if (!qword_1F036D108)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC63B91C, &type metadata for UserSegmentationSegmentSetIDsChangeEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036D108);
  }
  return result;
}

unint64_t sub_1DC5715A0()
{
  unint64_t result;

  result = qword_1F036D110;
  if (!qword_1F036D110)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC63B88C, &type metadata for UserSegmentationSegmentSetIDsChangeEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036D110);
  }
  return result;
}

unint64_t sub_1DC5715E8()
{
  unint64_t result;

  result = qword_1F036D118;
  if (!qword_1F036D118)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC63B8B4, &type metadata for UserSegmentationSegmentSetIDsChangeEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036D118);
  }
  return result;
}

uint64_t sub_1DC57162C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x746144746E657665 && a2 == 0xE900000000000061;
  if (v2 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD00000000000001ELL && a2 == 0x80000001DC64D010)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1DC62B520();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1DC571724(uint64_t a1)
{
  return sub_1DC4BE784(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], qword_1F036D120, MEMORY[0x1E0CF8078]);
}

uint64_t static ExternalAnalyticsEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C2FE8(&qword_1F03690C0, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1F036D120, a1);
}

uint64_t sub_1DC571764(uint64_t a1)
{
  return sub_1DC4BE784(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], qword_1F036D138, MEMORY[0x1E0CF8380]);
}

uint64_t static ExternalAnalyticsEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C2FE8(&qword_1F03690C8, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1F036D138, a1);
}

uint64_t ExternalAnalyticsEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C37DC((uint64_t (*)(_QWORD))sub_1DC4B6600, a1);
}

uint64_t ExternalAnalyticsEvent.eventData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  sub_1DC4B6600();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*ExternalAnalyticsEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t ExternalAnalyticsEvent.externalAnalyticsData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ExternalAnalyticsEvent(0) + 20);
  sub_1DC4B4B50(0, &qword_1F036D150, (void (*)(void))sub_1DC54E778, (void (*)(void))sub_1DC54E7C0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t type metadata accessor for ExternalAnalyticsEvent(uint64_t a1)
{
  return sub_1DC4B385C(a1, qword_1F036D1C8);
}

uint64_t ExternalAnalyticsEvent.externalAnalyticsData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ExternalAnalyticsEvent(0) + 20);
  sub_1DC4B4B50(0, &qword_1F036D150, (void (*)(void))sub_1DC54E778, (void (*)(void))sub_1DC54E7C0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*ExternalAnalyticsEvent.externalAnalyticsData.modify())()
{
  type metadata accessor for ExternalAnalyticsEvent(0);
  return nullsub_1;
}

uint64_t ExternalAnalyticsEvent.resultData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ExternalAnalyticsEvent(0) + 24);
  sub_1DC4B4B50(0, &qword_1F036BC10, (void (*)(void))sub_1DC536E40, (void (*)(void))sub_1DC536E84);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t ExternalAnalyticsEvent.resultData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ExternalAnalyticsEvent(0) + 24);
  sub_1DC4B4B50(0, &qword_1F036BC10, (void (*)(void))sub_1DC536E40, (void (*)(void))sub_1DC536E84);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*ExternalAnalyticsEvent.resultData.modify())()
{
  type metadata accessor for ExternalAnalyticsEvent(0);
  return nullsub_1;
}

uint64_t ExternalAnalyticsEvent.newsArticleData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ExternalAnalyticsEvent(0) + 28);
  sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t ExternalAnalyticsEvent.newsArticleData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ExternalAnalyticsEvent(0) + 28);
  sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*ExternalAnalyticsEvent.newsArticleData.modify())()
{
  type metadata accessor for ExternalAnalyticsEvent(0);
  return nullsub_1;
}

uint64_t ExternalAnalyticsEvent.channelData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ExternalAnalyticsEvent(0) + 32);
  sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t ExternalAnalyticsEvent.channelData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ExternalAnalyticsEvent(0) + 32);
  sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*ExternalAnalyticsEvent.channelData.modify())()
{
  type metadata accessor for ExternalAnalyticsEvent(0);
  return nullsub_1;
}

uint64_t ExternalAnalyticsEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v2 = *MEMORY[0x1E0CF8128];
  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
  v4 = (int *)type metadata accessor for ExternalAnalyticsEvent(0);
  v5 = a1 + v4[5];
  sub_1DC4B4B50(0, &qword_1F036D150, (void (*)(void))sub_1DC54E778, (void (*)(void))sub_1DC54E7C0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 104))(v5, v2, v6);
  v7 = a1 + v4[6];
  sub_1DC4B4B50(0, &qword_1F036BC10, (void (*)(void))sub_1DC536E40, (void (*)(void))sub_1DC536E84);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 104))(v7, v2, v8);
  v9 = a1 + v4[7];
  v10 = *MEMORY[0x1E0CF8120];
  sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 104))(v9, v10, v11);
  v12 = a1 + v4[8];
  sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 104))(v12, v2, v13);
}

uint64_t ExternalAnalyticsEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C37DC((uint64_t (*)(_QWORD))MEMORY[0x1E0CF8670], a1);
}

uint64_t ExternalAnalyticsEvent.Model.externalAnalyticsData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = v1 + *(int *)(type metadata accessor for ExternalAnalyticsEvent.Model(0) + 20);
  v5 = *(_QWORD *)(v3 + 8);
  v4 = *(_QWORD *)(v3 + 16);
  v6 = *(_QWORD *)(v3 + 24);
  v7 = *(_QWORD *)(v3 + 32);
  *(_BYTE *)a1 = *(_BYTE *)v3;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t type metadata accessor for ExternalAnalyticsEvent.Model(uint64_t a1)
{
  return sub_1DC4B385C(a1, qword_1F036D268);
}

uint64_t ExternalAnalyticsEvent.Model.resultData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = v1 + *(int *)(type metadata accessor for ExternalAnalyticsEvent.Model(0) + 24);
  v5 = *(_QWORD *)(v3 + 8);
  v4 = *(_QWORD *)(v3 + 16);
  *(_BYTE *)a1 = *(_BYTE *)v3;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v4;
  return swift_bridgeObjectRetain();
}

uint64_t ExternalAnalyticsEvent.Model.newsArticleData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v3 = v1 + *(int *)(type metadata accessor for ExternalAnalyticsEvent.Model(0) + 28);
  v4 = *(_QWORD *)v3;
  v5 = *(_QWORD *)(v3 + 8);
  v6 = *(_QWORD *)(v3 + 16);
  v7 = *(_QWORD *)(v3 + 24);
  v8 = *(_QWORD *)(v3 + 32);
  v9 = *(_QWORD *)(v3 + 40);
  v10 = *(_QWORD *)(v3 + 48);
  v11 = *(_QWORD *)(v3 + 56);
  LODWORD(v3) = *(_DWORD *)(v3 + 64);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  *(_QWORD *)(a1 + 32) = v8;
  *(_QWORD *)(a1 + 40) = v9;
  *(_QWORD *)(a1 + 48) = v10;
  *(_QWORD *)(a1 + 56) = v11;
  *(_DWORD *)(a1 + 64) = v3;
  return sub_1DC4D7808(v4, v5);
}

uint64_t ExternalAnalyticsEvent.Model.channelData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for ExternalAnalyticsEvent.Model(0) + 32));
  v5 = *v3;
  v4 = v3[1];
  v6 = v3[2];
  v7 = v3[3];
  v8 = *((_BYTE *)v3 + 32);
  LOBYTE(v3) = *((_BYTE *)v3 + 33);
  *(_QWORD *)a1 = v5;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  *(_BYTE *)(a1 + 32) = v8;
  *(_BYTE *)(a1 + 33) = (_BYTE)v3;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

__n128 ExternalAnalyticsEvent.Model.init(eventData:externalAnalyticsData:resultData:newsArticleData:channelData:)@<Q0>(uint64_t a1@<X0>, char *a2@<X1>, char *a3@<X2>, __int128 *a4@<X3>, __n128 *a5@<X4>, uint64_t a6@<X8>)
{
  char v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __n128 *v21;
  __n128 result;
  __int128 v23;
  int v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  unsigned __int8 v28;
  unsigned __int8 v29;
  unint64_t v30;
  unint64_t v31;
  __n128 v32;

  v8 = *a2;
  v23 = *(_OWORD *)(a2 + 8);
  v9 = *((_QWORD *)a2 + 3);
  v10 = *((_QWORD *)a2 + 4);
  v11 = *a3;
  v12 = *((_QWORD *)a3 + 1);
  v13 = *((_QWORD *)a3 + 2);
  v26 = a4[1];
  v27 = *a4;
  v25 = a4[2];
  v14 = *((_QWORD *)a4 + 6);
  v15 = *((_QWORD *)a4 + 7);
  v24 = *((_DWORD *)a4 + 16);
  v32 = *a5;
  v30 = a5[1].n128_u64[1];
  v31 = a5[1].n128_u64[0];
  v28 = a5[2].n128_u8[1];
  v29 = a5[2].n128_u8[0];
  v16 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(a6, a1, v16);
  v17 = (int *)type metadata accessor for ExternalAnalyticsEvent.Model(0);
  v18 = a6 + v17[5];
  *(_BYTE *)v18 = v8;
  *(_OWORD *)(v18 + 8) = v23;
  *(_QWORD *)(v18 + 24) = v9;
  *(_QWORD *)(v18 + 32) = v10;
  v19 = a6 + v17[6];
  *(_BYTE *)v19 = v11;
  *(_QWORD *)(v19 + 8) = v12;
  *(_QWORD *)(v19 + 16) = v13;
  v20 = a6 + v17[7];
  *(_OWORD *)v20 = v27;
  *(_OWORD *)(v20 + 16) = v26;
  *(_OWORD *)(v20 + 32) = v25;
  *(_QWORD *)(v20 + 48) = v14;
  *(_QWORD *)(v20 + 56) = v15;
  *(_DWORD *)(v20 + 64) = v24;
  v21 = (__n128 *)(a6 + v17[8]);
  result = v32;
  *v21 = v32;
  v21[1].n128_u64[0] = v31;
  v21[1].n128_u64[1] = v30;
  v21[2].n128_u8[0] = v29;
  v21[2].n128_u8[1] = v28;
  return result;
}

uint64_t sub_1DC57201C()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1DC572050 + 4 * byte_1DC63B9A0[*v0]))(0x746144746E657665, 0xE900000000000061);
}

unint64_t sub_1DC572050()
{
  return 0xD000000000000015;
}

uint64_t sub_1DC57206C()
{
  return 0x6144746C75736572;
}

uint64_t sub_1DC572088()
{
  return 0x697472417377656ELL;
}

uint64_t sub_1DC5720AC()
{
  return 0x446C656E6E616863;
}

uint64_t sub_1DC5720CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1DC574474(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DC5720F0()
{
  sub_1DC5723C8();
  return sub_1DC62B604();
}

uint64_t sub_1DC572118()
{
  sub_1DC5723C8();
  return sub_1DC62B610();
}

uint64_t ExternalAnalyticsEvent.Model.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  int *v10;
  char *v11;
  char v12;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  __int128 v19;
  __int128 v20;
  __int128 *v21;
  __int128 v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  _BYTE v27[32];
  __int128 v28;
  __int128 v29;
  int v30;
  char v31;

  v3 = v1;
  sub_1DC5728A8(0, &qword_1F036D158, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = &v27[-v8];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC5723C8();
  sub_1DC62B5F8();
  v27[0] = 0;
  sub_1DC62ABA8();
  sub_1DC4B6788(&qword_1EDB0E8A8, MEMORY[0x1E0CF8680]);
  sub_1DC62B4E4();
  if (!v2)
  {
    v10 = (int *)type metadata accessor for ExternalAnalyticsEvent.Model(0);
    v11 = (char *)(v3 + v10[5]);
    v12 = *v11;
    v13 = *(_OWORD *)(v11 + 8);
    v15 = *((_QWORD *)v11 + 3);
    v14 = *((_QWORD *)v11 + 4);
    v27[0] = v12;
    *(_OWORD *)&v27[8] = v13;
    *(_QWORD *)&v27[24] = v15;
    *(_QWORD *)&v28 = v14;
    v31 = 1;
    sub_1DC54E7C0();
    sub_1DC62B4E4();
    v16 = v3 + v10[6];
    v27[0] = *(_BYTE *)v16;
    *(_OWORD *)&v27[8] = *(_OWORD *)(v16 + 8);
    v31 = 2;
    sub_1DC536E84();
    sub_1DC62B4E4();
    v17 = v3 + v10[7];
    v18 = *(_DWORD *)(v17 + 64);
    v19 = *(_OWORD *)(v17 + 16);
    *(_OWORD *)v27 = *(_OWORD *)v17;
    *(_OWORD *)&v27[16] = v19;
    v20 = *(_OWORD *)(v17 + 48);
    v28 = *(_OWORD *)(v17 + 32);
    v29 = v20;
    v30 = v18;
    v31 = 3;
    sub_1DC4C18E8();
    sub_1DC62B490();
    v21 = (__int128 *)(v3 + v10[8]);
    v22 = *v21;
    v23 = *((_QWORD *)v21 + 2);
    v24 = *((_QWORD *)v21 + 3);
    v25 = *((_BYTE *)v21 + 32);
    LOBYTE(v21) = *((_BYTE *)v21 + 33);
    *(_OWORD *)v27 = v22;
    *(_QWORD *)&v27[16] = v23;
    *(_QWORD *)&v27[24] = v24;
    LOBYTE(v28) = v25;
    BYTE1(v28) = (_BYTE)v21;
    v31 = 4;
    sub_1DC4C8E84();
    sub_1DC62B4E4();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1DC5723C8()
{
  unint64_t result;

  result = qword_1F036D160;
  if (!qword_1F036D160)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC63BBD4, &type metadata for ExternalAnalyticsEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036D160);
  }
  return result;
}

uint64_t ExternalAnalyticsEvent.Model.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  int v19;
  char *v20;
  __int128 v21;
  __int128 v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  char v26;
  char *v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  _QWORD *v36;
  _BYTE v37[32];
  __int128 v38;
  __int128 v39;
  int v40;
  char v41;

  v31 = a2;
  v3 = sub_1DC62ABA8();
  v32 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v34 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC5728A8(0, &qword_1F036D168, MEMORY[0x1E0DED048]);
  v33 = v5;
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v29 - v7;
  v9 = (int *)type metadata accessor for ExternalAnalyticsEvent.Model(0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC5723C8();
  v35 = v8;
  v12 = (uint64_t)v36;
  sub_1DC62B5E0();
  if (v12)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v30 = v6;
  v13 = v32;
  v36 = a1;
  v37[0] = 0;
  sub_1DC4B6788(&qword_1EDB0E278, MEMORY[0x1E0CF8688]);
  sub_1DC62B454();
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v11, v34, v3);
  v41 = 1;
  sub_1DC54E778();
  sub_1DC62B454();
  v14 = *(_OWORD *)&v37[8];
  v15 = *(_QWORD *)&v37[24];
  v16 = v38;
  v17 = &v11[v9[5]];
  *v17 = v37[0];
  *(_OWORD *)(v17 + 8) = v14;
  *((_QWORD *)v17 + 3) = v15;
  *((_QWORD *)v17 + 4) = v16;
  v41 = 2;
  sub_1DC536E40();
  sub_1DC62B454();
  v18 = &v11[v9[6]];
  *v18 = v37[0];
  *(_OWORD *)(v18 + 8) = *(_OWORD *)&v37[8];
  v41 = 3;
  sub_1DC4C18A0();
  sub_1DC62B400();
  v19 = v40;
  v20 = &v11[v9[7]];
  v21 = *(_OWORD *)&v37[16];
  *(_OWORD *)v20 = *(_OWORD *)v37;
  *((_OWORD *)v20 + 1) = v21;
  v22 = v39;
  *((_OWORD *)v20 + 2) = v38;
  *((_OWORD *)v20 + 3) = v22;
  *((_DWORD *)v20 + 16) = v19;
  v41 = 4;
  sub_1DC4C8E40();
  sub_1DC62B454();
  (*(void (**)(char *, uint64_t))(v30 + 8))(v35, v33);
  v23 = *(_QWORD *)&v37[16];
  v24 = *(_QWORD *)&v37[24];
  v25 = v38;
  v26 = BYTE1(v38);
  v27 = &v11[v9[8]];
  *(_OWORD *)v27 = *(_OWORD *)v37;
  *((_QWORD *)v27 + 2) = v23;
  *((_QWORD *)v27 + 3) = v24;
  v27[32] = v25;
  v27[33] = v26;
  sub_1DC572904((uint64_t)v11, v31);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v36);
  return sub_1DC572948((uint64_t)v11);
}

void sub_1DC5728A8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1DC5723C8();
    v7 = a3(a1, &type metadata for ExternalAnalyticsEvent.Model.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1DC572904(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ExternalAnalyticsEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DC572948(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for ExternalAnalyticsEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1DC572984@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return ExternalAnalyticsEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_1DC572998(_QWORD *a1)
{
  return ExternalAnalyticsEvent.Model.encode(to:)(a1);
}

uint64_t sub_1DC5729AC@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4B2C68(&qword_1F03690C0, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1F036D120, a1);
}

uint64_t sub_1DC5729D0@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4B2C68(&qword_1F03690C8, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1F036D138, a1);
}

uint64_t sub_1DC5729F4@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v4 = *MEMORY[0x1E0CF8128];
  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 104))(a2, v4, v5);
  v6 = a2 + a1[5];
  sub_1DC4B4B50(0, &qword_1F036D150, (void (*)(void))sub_1DC54E778, (void (*)(void))sub_1DC54E7C0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 104))(v6, v4, v7);
  v8 = a2 + a1[6];
  sub_1DC4B4B50(0, &qword_1F036BC10, (void (*)(void))sub_1DC536E40, (void (*)(void))sub_1DC536E84);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 104))(v8, v4, v9);
  v10 = a2 + a1[7];
  v11 = *MEMORY[0x1E0CF8120];
  sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 104))(v10, v11, v12);
  v13 = a2 + a1[8];
  sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 104))(v13, v4, v14);
}

uint64_t *initializeBufferWithCopyOfBuffer for ExternalAnalyticsEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v24 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v24 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_1DC4B6600();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    sub_1DC4B4B50(0, &qword_1F036D150, (void (*)(void))sub_1DC54E778, (void (*)(void))sub_1DC54E7C0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = a3[6];
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    sub_1DC4B4B50(0, &qword_1F036BC10, (void (*)(void))sub_1DC536E40, (void (*)(void))sub_1DC536E84);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
    v16 = a3[7];
    v17 = (char *)a1 + v16;
    v18 = (char *)a2 + v16;
    sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
    v20 = a3[8];
    v21 = (char *)a1 + v20;
    v22 = (char *)a2 + v20;
    sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v21, v22, v23);
  }
  return a1;
}

uint64_t destroy for ExternalAnalyticsEvent(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + a2[5];
  sub_1DC4B4B50(0, &qword_1F036D150, (void (*)(void))sub_1DC54E778, (void (*)(void))sub_1DC54E7C0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = a1 + a2[6];
  sub_1DC4B4B50(0, &qword_1F036BC10, (void (*)(void))sub_1DC536E40, (void (*)(void))sub_1DC536E84);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  v9 = a1 + a2[7];
  sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  v11 = a1 + a2[8];
  sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
}

uint64_t initializeWithCopy for ExternalAnalyticsEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1DC4B4B50(0, &qword_1F036D150, (void (*)(void))sub_1DC54E778, (void (*)(void))sub_1DC54E7C0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1DC4B4B50(0, &qword_1F036BC10, (void (*)(void))sub_1DC536E40, (void (*)(void))sub_1DC536E84);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v20, v21, v22);
  return a1;
}

uint64_t assignWithCopy for ExternalAnalyticsEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1DC4B4B50(0, &qword_1F036D150, (void (*)(void))sub_1DC54E778, (void (*)(void))sub_1DC54E7C0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1DC4B4B50(0, &qword_1F036BC10, (void (*)(void))sub_1DC536E40, (void (*)(void))sub_1DC536E84);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 24))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 24))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 24))(v20, v21, v22);
  return a1;
}

uint64_t initializeWithTake for ExternalAnalyticsEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1DC4B4B50(0, &qword_1F036D150, (void (*)(void))sub_1DC54E778, (void (*)(void))sub_1DC54E7C0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1DC4B4B50(0, &qword_1F036BC10, (void (*)(void))sub_1DC536E40, (void (*)(void))sub_1DC536E84);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v20, v21, v22);
  return a1;
}

uint64_t assignWithTake for ExternalAnalyticsEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1DC4B4B50(0, &qword_1F036D150, (void (*)(void))sub_1DC54E778, (void (*)(void))sub_1DC54E7C0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1DC4B4B50(0, &qword_1F036BC10, (void (*)(void))sub_1DC536E40, (void (*)(void))sub_1DC536E84);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 40))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 40))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 40))(v20, v21, v22);
  return a1;
}

uint64_t getEnumTagSinglePayload for ExternalAnalyticsEvent()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC5734A8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  sub_1DC4B6600();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    sub_1DC4B4B50(0, &qword_1F036D150, (void (*)(void))sub_1DC54E778, (void (*)(void))sub_1DC54E7C0);
    v12 = *(_QWORD *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
    {
      v8 = v11;
      v13 = a3[5];
    }
    else
    {
      sub_1DC4B4B50(0, &qword_1F036BC10, (void (*)(void))sub_1DC536E40, (void (*)(void))sub_1DC536E84);
      v12 = *(_QWORD *)(v14 - 8);
      if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
      {
        v8 = v14;
        v13 = a3[6];
      }
      else
      {
        sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
        v12 = *(_QWORD *)(v15 - 8);
        if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
        {
          v8 = v15;
          v13 = a3[7];
        }
        else
        {
          sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
          v8 = v16;
          v12 = *(_QWORD *)(v16 - 8);
          v13 = a3[8];
        }
      }
    }
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t storeEnumTagSinglePayload for ExternalAnalyticsEvent()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC573614(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  sub_1DC4B6600();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    sub_1DC4B4B50(0, &qword_1F036D150, (void (*)(void))sub_1DC54E778, (void (*)(void))sub_1DC54E7C0);
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = a4[5];
    }
    else
    {
      sub_1DC4B4B50(0, &qword_1F036BC10, (void (*)(void))sub_1DC536E40, (void (*)(void))sub_1DC536E84);
      v14 = *(_QWORD *)(v16 - 8);
      if (*(_DWORD *)(v14 + 84) == a3)
      {
        v10 = v16;
        v15 = a4[6];
      }
      else
      {
        sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
        v14 = *(_QWORD *)(v17 - 8);
        if (*(_DWORD *)(v14 + 84) == a3)
        {
          v10 = v17;
          v15 = a4[7];
        }
        else
        {
          sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
          v10 = v18;
          v14 = *(_QWORD *)(v18 - 8);
          v15 = a4[8];
        }
      }
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_1DC57377C()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;

  sub_1DC4B6600();
  if (v0 <= 0x3F)
  {
    sub_1DC4B4B50(319, &qword_1F036D150, (void (*)(void))sub_1DC54E778, (void (*)(void))sub_1DC54E7C0);
    if (v1 <= 0x3F)
    {
      sub_1DC4B4B50(319, &qword_1F036BC10, (void (*)(void))sub_1DC536E40, (void (*)(void))sub_1DC536E84);
      if (v2 <= 0x3F)
      {
        sub_1DC4B4B50(319, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
        if (v3 <= 0x3F)
        {
          sub_1DC4B4B50(319, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
          if (v4 <= 0x3F)
            swift_initStructMetadata();
        }
      }
    }
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for ExternalAnalyticsEvent.Model(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  __int128 v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v22 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v22 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1DC62ABA8();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = a3[6];
    v10 = (char *)a1 + v8;
    v11 = (char *)a2 + v8;
    *v10 = *v11;
    v12 = *((_QWORD *)v11 + 2);
    *((_QWORD *)v10 + 1) = *((_QWORD *)v11 + 1);
    *((_QWORD *)v10 + 2) = v12;
    v13 = *((_QWORD *)v11 + 4);
    *((_QWORD *)v10 + 3) = *((_QWORD *)v11 + 3);
    *((_QWORD *)v10 + 4) = v13;
    v14 = (char *)a1 + v9;
    v15 = (char *)a2 + v9;
    *v14 = *v15;
    v16 = *((_QWORD *)v15 + 2);
    *((_QWORD *)v14 + 1) = *((_QWORD *)v15 + 1);
    *((_QWORD *)v14 + 2) = v16;
    v17 = a3[7];
    v18 = (char *)a1 + v17;
    v19 = (char *)a2 + v17;
    v20 = *(uint64_t *)((char *)a2 + v17 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v20)
    {
      *(_QWORD *)v18 = *(_QWORD *)v19;
      *((_QWORD *)v18 + 1) = v20;
      v21 = *((_QWORD *)v19 + 3);
      *((_QWORD *)v18 + 2) = *((_QWORD *)v19 + 2);
      *((_QWORD *)v18 + 3) = v21;
      v18[32] = v19[32];
      *((_QWORD *)v18 + 5) = *((_QWORD *)v19 + 5);
      v18[48] = v19[48];
      *((_QWORD *)v18 + 7) = *((_QWORD *)v19 + 7);
      *((_DWORD *)v18 + 16) = *((_DWORD *)v19 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v23 = *((_OWORD *)v19 + 3);
      *((_OWORD *)v18 + 2) = *((_OWORD *)v19 + 2);
      *((_OWORD *)v18 + 3) = v23;
      *((_DWORD *)v18 + 16) = *((_DWORD *)v19 + 16);
      v24 = *((_OWORD *)v19 + 1);
      *(_OWORD *)v18 = *(_OWORD *)v19;
      *((_OWORD *)v18 + 1) = v24;
    }
    v25 = a3[8];
    v26 = (char *)a1 + v25;
    v27 = (char *)a2 + v25;
    v28 = *((_QWORD *)v27 + 1);
    *(_QWORD *)v26 = *(_QWORD *)v27;
    *((_QWORD *)v26 + 1) = v28;
    v29 = *((_QWORD *)v27 + 3);
    *((_QWORD *)v26 + 2) = *((_QWORD *)v27 + 2);
    *((_QWORD *)v26 + 3) = v29;
    *((_WORD *)v26 + 16) = *((_WORD *)v27 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for ExternalAnalyticsEvent.Model(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + *(int *)(a2 + 28) + 8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ExternalAnalyticsEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  __int128 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v6 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = a2 + v7;
  *(_BYTE *)v9 = *(_BYTE *)v10;
  v11 = *(_QWORD *)(v10 + 16);
  *(_QWORD *)(v9 + 8) = *(_QWORD *)(v10 + 8);
  *(_QWORD *)(v9 + 16) = v11;
  v12 = *(_QWORD *)(v10 + 32);
  *(_QWORD *)(v9 + 24) = *(_QWORD *)(v10 + 24);
  *(_QWORD *)(v9 + 32) = v12;
  v13 = a1 + v8;
  v14 = a2 + v8;
  *(_BYTE *)v13 = *(_BYTE *)v14;
  v15 = *(_QWORD *)(v14 + 16);
  *(_QWORD *)(v13 + 8) = *(_QWORD *)(v14 + 8);
  *(_QWORD *)(v13 + 16) = v15;
  v16 = a3[7];
  v17 = a1 + v16;
  v18 = a2 + v16;
  v19 = *(_QWORD *)(a2 + v16 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v19)
  {
    *(_QWORD *)v17 = *(_QWORD *)v18;
    *(_QWORD *)(v17 + 8) = v19;
    v20 = *(_QWORD *)(v18 + 24);
    *(_QWORD *)(v17 + 16) = *(_QWORD *)(v18 + 16);
    *(_QWORD *)(v17 + 24) = v20;
    *(_BYTE *)(v17 + 32) = *(_BYTE *)(v18 + 32);
    *(_QWORD *)(v17 + 40) = *(_QWORD *)(v18 + 40);
    *(_BYTE *)(v17 + 48) = *(_BYTE *)(v18 + 48);
    *(_QWORD *)(v17 + 56) = *(_QWORD *)(v18 + 56);
    *(_DWORD *)(v17 + 64) = *(_DWORD *)(v18 + 64);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v21 = *(_OWORD *)(v18 + 48);
    *(_OWORD *)(v17 + 32) = *(_OWORD *)(v18 + 32);
    *(_OWORD *)(v17 + 48) = v21;
    *(_DWORD *)(v17 + 64) = *(_DWORD *)(v18 + 64);
    v22 = *(_OWORD *)(v18 + 16);
    *(_OWORD *)v17 = *(_OWORD *)v18;
    *(_OWORD *)(v17 + 16) = v22;
  }
  v23 = a3[8];
  v24 = a1 + v23;
  v25 = a2 + v23;
  v26 = *(_QWORD *)(v25 + 8);
  *(_QWORD *)v24 = *(_QWORD *)v25;
  *(_QWORD *)(v24 + 8) = v26;
  v27 = *(_QWORD *)(v25 + 24);
  *(_QWORD *)(v24 + 16) = *(_QWORD *)(v25 + 16);
  *(_QWORD *)(v24 + 24) = v27;
  *(_WORD *)(v24 + 32) = *(_WORD *)(v25 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ExternalAnalyticsEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v6 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_BYTE *)v8 = *(_BYTE *)(a2 + v7);
  *(_QWORD *)(v8 + 8) = *(_QWORD *)(a2 + v7 + 8);
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(a2 + v7 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v8 + 24) = *(_QWORD *)(v9 + 24);
  *(_QWORD *)(v8 + 32) = *(_QWORD *)(v9 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v10 = a3[6];
  v11 = a1 + v10;
  v12 = a2 + v10;
  *(_BYTE *)v11 = *(_BYTE *)v12;
  *(_QWORD *)(v11 + 8) = *(_QWORD *)(v12 + 8);
  *(_QWORD *)(v11 + 16) = *(_QWORD *)(v12 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v13 = a3[7];
  v14 = a1 + v13;
  v15 = a2 + v13;
  v16 = *(_QWORD *)(a1 + v13 + 8);
  v17 = *(_QWORD *)(a2 + v13 + 8);
  if (v16)
  {
    if (v17)
    {
      *(_QWORD *)v14 = *(_QWORD *)v15;
      *(_QWORD *)(v14 + 8) = *(_QWORD *)(v15 + 8);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v14 + 16) = *(_QWORD *)(v15 + 16);
      *(_QWORD *)(v14 + 24) = *(_QWORD *)(v15 + 24);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_BYTE *)(v14 + 32) = *(_BYTE *)(v15 + 32);
      v18 = *(_QWORD *)(v15 + 40);
      *(_BYTE *)(v14 + 48) = *(_BYTE *)(v15 + 48);
      *(_QWORD *)(v14 + 40) = v18;
      *(_QWORD *)(v14 + 56) = *(_QWORD *)(v15 + 56);
      *(_BYTE *)(v14 + 64) = *(_BYTE *)(v15 + 64);
      *(_BYTE *)(v14 + 65) = *(_BYTE *)(v15 + 65);
      *(_BYTE *)(v14 + 66) = *(_BYTE *)(v15 + 66);
      *(_BYTE *)(v14 + 67) = *(_BYTE *)(v15 + 67);
    }
    else
    {
      sub_1DC5006BC(v14);
      *(_OWORD *)v14 = *(_OWORD *)v15;
      v21 = *(_OWORD *)(v15 + 32);
      v20 = *(_OWORD *)(v15 + 48);
      v22 = *(_OWORD *)(v15 + 16);
      *(_DWORD *)(v14 + 64) = *(_DWORD *)(v15 + 64);
      *(_OWORD *)(v14 + 32) = v21;
      *(_OWORD *)(v14 + 48) = v20;
      *(_OWORD *)(v14 + 16) = v22;
    }
  }
  else if (v17)
  {
    *(_QWORD *)v14 = *(_QWORD *)v15;
    *(_QWORD *)(v14 + 8) = *(_QWORD *)(v15 + 8);
    *(_QWORD *)(v14 + 16) = *(_QWORD *)(v15 + 16);
    *(_QWORD *)(v14 + 24) = *(_QWORD *)(v15 + 24);
    *(_BYTE *)(v14 + 32) = *(_BYTE *)(v15 + 32);
    v19 = *(_QWORD *)(v15 + 40);
    *(_BYTE *)(v14 + 48) = *(_BYTE *)(v15 + 48);
    *(_QWORD *)(v14 + 40) = v19;
    *(_QWORD *)(v14 + 56) = *(_QWORD *)(v15 + 56);
    *(_BYTE *)(v14 + 64) = *(_BYTE *)(v15 + 64);
    *(_BYTE *)(v14 + 65) = *(_BYTE *)(v15 + 65);
    *(_BYTE *)(v14 + 66) = *(_BYTE *)(v15 + 66);
    *(_BYTE *)(v14 + 67) = *(_BYTE *)(v15 + 67);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)v14 = *(_OWORD *)v15;
    v23 = *(_OWORD *)(v15 + 16);
    v24 = *(_OWORD *)(v15 + 32);
    v25 = *(_OWORD *)(v15 + 48);
    *(_DWORD *)(v14 + 64) = *(_DWORD *)(v15 + 64);
    *(_OWORD *)(v14 + 32) = v24;
    *(_OWORD *)(v14 + 48) = v25;
    *(_OWORD *)(v14 + 16) = v23;
  }
  v26 = a3[8];
  v27 = a1 + v26;
  v28 = a2 + v26;
  *(_QWORD *)v27 = *(_QWORD *)(a2 + v26);
  *(_QWORD *)(v27 + 8) = *(_QWORD *)(a2 + v26 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v27 + 16) = *(_QWORD *)(v28 + 16);
  *(_QWORD *)(v27 + 24) = *(_QWORD *)(v28 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v27 + 32) = *(_BYTE *)(v28 + 32);
  *(_BYTE *)(v27 + 33) = *(_BYTE *)(v28 + 33);
  return a1;
}

uint64_t initializeWithTake for ExternalAnalyticsEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;

  v6 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = a2 + v7;
  v11 = *(_OWORD *)(v10 + 16);
  *(_OWORD *)v9 = *(_OWORD *)v10;
  *(_OWORD *)(v9 + 16) = v11;
  *(_QWORD *)(v9 + 32) = *(_QWORD *)(v10 + 32);
  v12 = a1 + v8;
  v13 = a2 + v8;
  *(_OWORD *)v12 = *(_OWORD *)v13;
  *(_QWORD *)(v12 + 16) = *(_QWORD *)(v13 + 16);
  v14 = a3[7];
  v15 = a3[8];
  v16 = a1 + v14;
  v17 = a2 + v14;
  v18 = *(_OWORD *)(v17 + 48);
  *(_OWORD *)(v16 + 32) = *(_OWORD *)(v17 + 32);
  *(_OWORD *)(v16 + 48) = v18;
  *(_DWORD *)(v16 + 64) = *(_DWORD *)(v17 + 64);
  v19 = *(_OWORD *)(v17 + 16);
  *(_OWORD *)v16 = *(_OWORD *)v17;
  *(_OWORD *)(v16 + 16) = v19;
  v20 = a1 + v15;
  v21 = a2 + v15;
  *(_WORD *)(v20 + 32) = *(_WORD *)(v21 + 32);
  v22 = *(_OWORD *)(v21 + 16);
  *(_OWORD *)v20 = *(_OWORD *)v21;
  *(_OWORD *)(v20 + 16) = v22;
  return a1;
}

uint64_t assignWithTake for ExternalAnalyticsEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  __int128 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v6 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_BYTE *)v8 = *(_BYTE *)(a2 + v7);
  v10 = *(_QWORD *)(a2 + v7 + 16);
  *(_QWORD *)(v8 + 8) = *(_QWORD *)(a2 + v7 + 8);
  *(_QWORD *)(v8 + 16) = v10;
  swift_bridgeObjectRelease();
  v11 = *(_QWORD *)(v9 + 32);
  *(_QWORD *)(v8 + 24) = *(_QWORD *)(v9 + 24);
  *(_QWORD *)(v8 + 32) = v11;
  swift_bridgeObjectRelease();
  v12 = a3[6];
  v13 = a1 + v12;
  v14 = a2 + v12;
  *(_BYTE *)v13 = *(_BYTE *)v14;
  v16 = *(_QWORD *)(v14 + 8);
  v15 = *(_QWORD *)(v14 + 16);
  *(_QWORD *)(v13 + 8) = v16;
  *(_QWORD *)(v13 + 16) = v15;
  swift_bridgeObjectRelease();
  v17 = a3[7];
  v18 = a1 + v17;
  v19 = a2 + v17;
  if (!*(_QWORD *)(a1 + v17 + 8))
    goto LABEL_5;
  v20 = *(_QWORD *)(v19 + 8);
  if (!v20)
  {
    sub_1DC5006BC(v18);
LABEL_5:
    v22 = *(_OWORD *)(v19 + 48);
    *(_OWORD *)(v18 + 32) = *(_OWORD *)(v19 + 32);
    *(_OWORD *)(v18 + 48) = v22;
    *(_DWORD *)(v18 + 64) = *(_DWORD *)(v19 + 64);
    v23 = *(_OWORD *)(v19 + 16);
    *(_OWORD *)v18 = *(_OWORD *)v19;
    *(_OWORD *)(v18 + 16) = v23;
    goto LABEL_6;
  }
  *(_QWORD *)v18 = *(_QWORD *)v19;
  *(_QWORD *)(v18 + 8) = v20;
  swift_bridgeObjectRelease();
  v21 = *(_QWORD *)(v19 + 24);
  *(_QWORD *)(v18 + 16) = *(_QWORD *)(v19 + 16);
  *(_QWORD *)(v18 + 24) = v21;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v18 + 32) = *(_BYTE *)(v19 + 32);
  *(_QWORD *)(v18 + 40) = *(_QWORD *)(v19 + 40);
  *(_BYTE *)(v18 + 48) = *(_BYTE *)(v19 + 48);
  *(_QWORD *)(v18 + 56) = *(_QWORD *)(v19 + 56);
  *(_BYTE *)(v18 + 64) = *(_BYTE *)(v19 + 64);
  *(_BYTE *)(v18 + 65) = *(_BYTE *)(v19 + 65);
  *(_BYTE *)(v18 + 66) = *(_BYTE *)(v19 + 66);
  *(_BYTE *)(v18 + 67) = *(_BYTE *)(v19 + 67);
LABEL_6:
  v24 = a3[8];
  v25 = a1 + v24;
  v26 = a2 + v24;
  v27 = *(_QWORD *)(v26 + 8);
  *(_QWORD *)v25 = *(_QWORD *)v26;
  *(_QWORD *)(v25 + 8) = v27;
  swift_bridgeObjectRelease();
  v28 = *(_QWORD *)(v26 + 24);
  *(_QWORD *)(v25 + 16) = *(_QWORD *)(v26 + 16);
  *(_QWORD *)(v25 + 24) = v28;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v25 + 32) = *(_BYTE *)(v26 + 32);
  *(_BYTE *)(v25 + 33) = *(_BYTE *)(v26 + 33);
  return a1;
}

uint64_t getEnumTagSinglePayload for ExternalAnalyticsEvent.Model()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC574138(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_1DC62ABA8();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 16);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for ExternalAnalyticsEvent.Model()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC5741C4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_1DC62ABA8();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20) + 16) = (a2 - 1);
  return result;
}

uint64_t sub_1DC574240()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1DC62ABA8();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for ExternalAnalyticsEvent.Model.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1DC57431C + 4 * byte_1DC63B9AA[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1DC574350 + 4 * byte_1DC63B9A5[v4]))();
}

uint64_t sub_1DC574350(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC574358(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DC574360);
  return result;
}

uint64_t sub_1DC57436C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DC574374);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1DC574378(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC574380(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ExternalAnalyticsEvent.Model.CodingKeys()
{
  return &type metadata for ExternalAnalyticsEvent.Model.CodingKeys;
}

unint64_t sub_1DC5743A0()
{
  unint64_t result;

  result = qword_1F036D2B0;
  if (!qword_1F036D2B0)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC63BBAC, &type metadata for ExternalAnalyticsEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036D2B0);
  }
  return result;
}

unint64_t sub_1DC5743E8()
{
  unint64_t result;

  result = qword_1F036D2B8;
  if (!qword_1F036D2B8)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC63BB1C, &type metadata for ExternalAnalyticsEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036D2B8);
  }
  return result;
}

unint64_t sub_1DC574430()
{
  unint64_t result;

  result = qword_1F036D2C0;
  if (!qword_1F036D2C0)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC63BB44, &type metadata for ExternalAnalyticsEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036D2C0);
  }
  return result;
}

uint64_t sub_1DC574474(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x746144746E657665 && a2 == 0xE900000000000061;
  if (v2 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000001DC64D030 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6144746C75736572 && a2 == 0xEA00000000006174 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x697472417377656ELL && a2 == 0xEF61746144656C63 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x446C656E6E616863 && a2 == 0xEB00000000617461)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    v6 = sub_1DC62B520();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 4;
    else
      return 5;
  }
}

uint64_t sub_1DC5746DC(uint64_t a1)
{
  return sub_1DC4BE784(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], qword_1EDB10F68, MEMORY[0x1E0CF8078]);
}

uint64_t static NewsArticleViewResignEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C2FE8(&qword_1EDB10F80, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1EDB10F68, a1);
}

uint64_t sub_1DC57471C(uint64_t a1)
{
  return sub_1DC4BE784(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], qword_1EDB10F88, MEMORY[0x1E0CF8380]);
}

uint64_t static NewsArticleViewResignEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C2FE8(&qword_1EDB10FA0, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1EDB10F88, a1);
}

uint64_t NewsArticleViewResignEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C37DC((uint64_t (*)(_QWORD))sub_1DC4B6600, a1);
}

uint64_t NewsArticleViewResignEvent.eventData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  sub_1DC4B6600();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*NewsArticleViewResignEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t NewsArticleViewResignEvent.viewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for NewsArticleViewResignEvent(0) + 20);
  sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t type metadata accessor for NewsArticleViewResignEvent(uint64_t a1)
{
  return sub_1DC4B385C(a1, qword_1EDB10FA8);
}

uint64_t NewsArticleViewResignEvent.viewData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for NewsArticleViewResignEvent(0) + 20);
  sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*NewsArticleViewResignEvent.viewData.modify())()
{
  type metadata accessor for NewsArticleViewResignEvent(0);
  return nullsub_1;
}

uint64_t NewsArticleViewResignEvent.newsArticleData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for NewsArticleViewResignEvent(0) + 24);
  sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t NewsArticleViewResignEvent.newsArticleData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for NewsArticleViewResignEvent(0) + 24);
  sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*NewsArticleViewResignEvent.newsArticleData.modify())()
{
  type metadata accessor for NewsArticleViewResignEvent(0);
  return nullsub_1;
}

uint64_t NewsArticleViewResignEvent.orientationData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for NewsArticleViewResignEvent(0) + 28);
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E7C0, (void (*)(void))sub_1DC4C0014, (void (*)(void))sub_1DC4C0058);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t NewsArticleViewResignEvent.orientationData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for NewsArticleViewResignEvent(0) + 28);
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E7C0, (void (*)(void))sub_1DC4C0014, (void (*)(void))sub_1DC4C0058);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*NewsArticleViewResignEvent.orientationData.modify())()
{
  type metadata accessor for NewsArticleViewResignEvent(0);
  return nullsub_1;
}

uint64_t NewsArticleViewResignEvent.channelData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for NewsArticleViewResignEvent(0) + 32);
  sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t NewsArticleViewResignEvent.channelData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for NewsArticleViewResignEvent(0) + 32);
  sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*NewsArticleViewResignEvent.channelData.modify())()
{
  type metadata accessor for NewsArticleViewResignEvent(0);
  return nullsub_1;
}

uint64_t NewsArticleViewResignEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v2 = *MEMORY[0x1E0CF8128];
  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
  v4 = (int *)type metadata accessor for NewsArticleViewResignEvent(0);
  v5 = a1 + v4[5];
  sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 104))(v5, v2, v6);
  v7 = a1 + v4[6];
  sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 104))(v7, v2, v8);
  v9 = a1 + v4[7];
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E7C0, (void (*)(void))sub_1DC4C0014, (void (*)(void))sub_1DC4C0058);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 104))(v9, v2, v10);
  v11 = a1 + v4[8];
  sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 104))(v11, v2, v12);
}

uint64_t NewsArticleViewResignEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C37DC((uint64_t (*)(_QWORD))MEMORY[0x1E0CF8670], a1);
}

uint64_t NewsArticleViewResignEvent.Model.viewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for NewsArticleViewResignEvent.Model(0) + 20));
  v5 = *v3;
  v4 = v3[1];
  LOWORD(v3) = *((_WORD *)v3 + 8);
  *(_QWORD *)a1 = v5;
  *(_QWORD *)(a1 + 8) = v4;
  *(_WORD *)(a1 + 16) = (_WORD)v3;
  return swift_bridgeObjectRetain();
}

uint64_t type metadata accessor for NewsArticleViewResignEvent.Model(uint64_t a1)
{
  return sub_1DC4B385C(a1, qword_1EDB12778);
}

uint64_t NewsArticleViewResignEvent.Model.newsArticleData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  char v12;
  char v13;
  char v14;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for NewsArticleViewResignEvent.Model(0) + 24));
  v5 = *v3;
  v4 = v3[1];
  v6 = v3[2];
  v7 = v3[3];
  v8 = *((_BYTE *)v3 + 32);
  v9 = v3[5];
  v10 = *((_BYTE *)v3 + 48);
  v11 = v3[7];
  v12 = *((_BYTE *)v3 + 64);
  v13 = *((_BYTE *)v3 + 65);
  v14 = *((_BYTE *)v3 + 66);
  LOBYTE(v3) = *((_BYTE *)v3 + 67);
  *(_QWORD *)a1 = v5;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  *(_BYTE *)(a1 + 32) = v8;
  *(_QWORD *)(a1 + 40) = v9;
  *(_BYTE *)(a1 + 48) = v10;
  *(_QWORD *)(a1 + 56) = v11;
  *(_BYTE *)(a1 + 64) = v12;
  *(_BYTE *)(a1 + 65) = v13;
  *(_BYTE *)(a1 + 66) = v14;
  *(_BYTE *)(a1 + 67) = (_BYTE)v3;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t NewsArticleViewResignEvent.Model.orientationData.getter@<X0>(_WORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for NewsArticleViewResignEvent.Model(0);
  *a1 = *(_WORD *)(v1 + *(int *)(result + 28));
  return result;
}

uint64_t NewsArticleViewResignEvent.Model.channelData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for NewsArticleViewResignEvent.Model(0) + 32));
  v5 = *v3;
  v4 = v3[1];
  v6 = v3[2];
  v7 = v3[3];
  v8 = *((_BYTE *)v3 + 32);
  LOBYTE(v3) = *((_BYTE *)v3 + 33);
  *(_QWORD *)a1 = v5;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  *(_BYTE *)(a1 + 32) = v8;
  *(_BYTE *)(a1 + 33) = (_BYTE)v3;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

__n128 NewsArticleViewResignEvent.Model.init(eventData:viewData:newsArticleData:orientationData:channelData:)@<Q0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, __int128 *a3@<X2>, __int16 *a4@<X3>, __n128 *a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  __int16 v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  int *v17;
  uint64_t v18;
  uint64_t v19;
  __n128 *v20;
  __n128 result;
  char v22;
  char v23;
  char v24;
  char v25;
  uint64_t v26;
  __int128 v27;
  __int16 v28;
  unsigned __int8 v29;
  unsigned __int8 v30;
  unint64_t v31;
  unint64_t v32;
  __n128 v33;

  v8 = *a2;
  v9 = a2[1];
  v10 = *((_WORD *)a2 + 8);
  v27 = *a3;
  v11 = *((_QWORD *)a3 + 2);
  v12 = *((_QWORD *)a3 + 3);
  v13 = *((_BYTE *)a3 + 32);
  v14 = *((_QWORD *)a3 + 5);
  v15 = *((_BYTE *)a3 + 48);
  v26 = *((_QWORD *)a3 + 7);
  v24 = *((_BYTE *)a3 + 65);
  v25 = *((_BYTE *)a3 + 64);
  v22 = *((_BYTE *)a3 + 67);
  v23 = *((_BYTE *)a3 + 66);
  v33 = *a5;
  v31 = a5[1].n128_u64[1];
  v32 = a5[1].n128_u64[0];
  v30 = a5[2].n128_u8[0];
  v28 = *a4;
  v29 = a5[2].n128_u8[1];
  v16 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(a6, a1, v16);
  v17 = (int *)type metadata accessor for NewsArticleViewResignEvent.Model(0);
  v18 = a6 + v17[5];
  *(_QWORD *)v18 = v8;
  *(_QWORD *)(v18 + 8) = v9;
  *(_WORD *)(v18 + 16) = v10;
  v19 = a6 + v17[6];
  *(_OWORD *)v19 = v27;
  *(_QWORD *)(v19 + 16) = v11;
  *(_QWORD *)(v19 + 24) = v12;
  *(_BYTE *)(v19 + 32) = v13;
  *(_QWORD *)(v19 + 40) = v14;
  *(_BYTE *)(v19 + 48) = v15;
  *(_QWORD *)(v19 + 56) = v26;
  *(_BYTE *)(v19 + 64) = v25;
  *(_BYTE *)(v19 + 65) = v24;
  *(_BYTE *)(v19 + 66) = v23;
  *(_BYTE *)(v19 + 67) = v22;
  *(_WORD *)(a6 + v17[7]) = v28;
  v20 = (__n128 *)(a6 + v17[8]);
  result = v33;
  *v20 = v33;
  v20[1].n128_u64[0] = v32;
  v20[1].n128_u64[1] = v31;
  v20[2].n128_u8[0] = v30;
  v20[2].n128_u8[1] = v29;
  return result;
}

uint64_t sub_1DC574FE8()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1DC57501C + 4 * byte_1DC63BC30[*v0]))(0x746144746E657665, 0xE900000000000061);
}

uint64_t sub_1DC57501C()
{
  return 0x6174614477656976;
}

uint64_t sub_1DC575034()
{
  return 0x697472417377656ELL;
}

uint64_t sub_1DC575058()
{
  return 0x7461746E6569726FLL;
}

uint64_t sub_1DC57507C()
{
  return 0x446C656E6E616863;
}

uint64_t sub_1DC57509C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1DC5771E8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DC5750C0()
{
  sub_1DC5753BC();
  return sub_1DC62B604();
}

uint64_t sub_1DC5750E8()
{
  sub_1DC5753BC();
  return sub_1DC62B610();
}

uint64_t NewsArticleViewResignEvent.Model.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int *v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  __int128 *v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  char v22;
  char v23;
  char v24;
  __int128 *v25;
  __int128 v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v31;
  __int128 v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  char v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  char v40;
  char v41;
  char v42;
  char v43;
  char v44;

  v3 = v1;
  sub_1DC575840(0, &qword_1F036D2C8, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v31 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC5753BC();
  sub_1DC62B5F8();
  LOBYTE(v32) = 0;
  sub_1DC62ABA8();
  sub_1DC4B6788(&qword_1EDB0E8A8, MEMORY[0x1E0CF8680]);
  sub_1DC62B4E4();
  if (!v2)
  {
    v10 = (int *)type metadata accessor for NewsArticleViewResignEvent.Model(0);
    v11 = (uint64_t *)(v3 + v10[5]);
    v12 = *v11;
    v13 = v11[1];
    LOWORD(v11) = *((_WORD *)v11 + 8);
    *(_QWORD *)&v32 = v12;
    *((_QWORD *)&v32 + 1) = v13;
    LOWORD(v33) = (_WORD)v11;
    v44 = 1;
    sub_1DC4BEDF0();
    sub_1DC62B4E4();
    v14 = (__int128 *)(v3 + v10[6]);
    v15 = *v14;
    v16 = *((_QWORD *)v14 + 2);
    v17 = *((_QWORD *)v14 + 3);
    v18 = *((_BYTE *)v14 + 32);
    v19 = *((_QWORD *)v14 + 5);
    v20 = *((_BYTE *)v14 + 48);
    v21 = *((_QWORD *)v14 + 7);
    v22 = *((_BYTE *)v14 + 64);
    v23 = *((_BYTE *)v14 + 65);
    v24 = *((_BYTE *)v14 + 66);
    LOBYTE(v14) = *((_BYTE *)v14 + 67);
    v32 = v15;
    v33 = v16;
    v34 = v17;
    v35 = v18;
    v37 = v19;
    v38 = v20;
    v39 = v21;
    v40 = v22;
    v41 = v23;
    v42 = v24;
    v43 = (char)v14;
    v44 = 2;
    sub_1DC4C18E8();
    sub_1DC62B4E4();
    LOWORD(v32) = *(_WORD *)(v3 + v10[7]);
    v44 = 3;
    sub_1DC4C0058();
    sub_1DC62B4E4();
    v25 = (__int128 *)(v3 + v10[8]);
    v26 = *v25;
    v27 = *((_QWORD *)v25 + 2);
    v28 = *((_QWORD *)v25 + 3);
    v29 = *((_BYTE *)v25 + 32);
    LOBYTE(v25) = *((_BYTE *)v25 + 33);
    v32 = v26;
    v33 = v27;
    v34 = v28;
    v35 = v29;
    v36 = (char)v25;
    v44 = 4;
    sub_1DC4C8E84();
    sub_1DC62B4E4();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1DC5753BC()
{
  unint64_t result;

  result = qword_1F036D2D0;
  if (!qword_1F036D2D0)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC63BE6C, &type metadata for NewsArticleViewResignEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036D2D0);
  }
  return result;
}

uint64_t NewsArticleViewResignEvent.Model.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  int *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int16 v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  char v23;
  char v24;
  char v25;
  char v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  char v31;
  char *v32;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  _QWORD *v40;
  __int128 v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  char v45;
  uint64_t v46;
  char v47;
  uint64_t v48;
  char v49;
  char v50;
  char v51;
  char v52;
  char v53;

  v35 = a2;
  v3 = sub_1DC62ABA8();
  v36 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v38 = (char *)&v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC575840(0, &qword_1F036D2D8, MEMORY[0x1E0DED048]);
  v37 = v5;
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v34 - v6;
  v8 = (int *)type metadata accessor for NewsArticleViewResignEvent.Model(0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC5753BC();
  v39 = v7;
  v11 = (uint64_t)v40;
  sub_1DC62B5E0();
  if (v11)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v40 = a1;
  v12 = v36;
  LOBYTE(v41) = 0;
  sub_1DC4B6788(&qword_1EDB0E278, MEMORY[0x1E0CF8688]);
  v13 = v37;
  sub_1DC62B454();
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v10, v38, v3);
  v53 = 1;
  sub_1DC4BEDAC();
  sub_1DC62B454();
  v14 = *((_QWORD *)&v41 + 1);
  v15 = v42;
  v16 = &v10[v8[5]];
  *(_QWORD *)v16 = v41;
  *((_QWORD *)v16 + 1) = v14;
  *((_WORD *)v16 + 8) = v15;
  v53 = 2;
  sub_1DC4C18A0();
  sub_1DC62B454();
  v17 = v42;
  v18 = v43;
  v19 = v44;
  v20 = v46;
  v21 = v47;
  v22 = v48;
  v23 = v49;
  v24 = v50;
  v25 = v51;
  v26 = v52;
  v27 = &v10[v8[6]];
  *(_OWORD *)v27 = v41;
  *((_QWORD *)v27 + 2) = v17;
  *((_QWORD *)v27 + 3) = v18;
  v27[32] = v19;
  *((_QWORD *)v27 + 5) = v20;
  v27[48] = v21;
  *((_QWORD *)v27 + 7) = v22;
  v27[64] = v23;
  v27[65] = v24;
  v27[66] = v25;
  v27[67] = v26;
  v53 = 3;
  sub_1DC4C0014();
  sub_1DC62B454();
  *(_WORD *)&v10[v8[7]] = v41;
  v53 = 4;
  sub_1DC4C8E40();
  sub_1DC62B454();
  MEMORY[8](v39, v13);
  v28 = v42;
  v29 = v43;
  v30 = v44;
  v31 = v45;
  v32 = &v10[v8[8]];
  *(_OWORD *)v32 = v41;
  *((_QWORD *)v32 + 2) = v28;
  *((_QWORD *)v32 + 3) = v29;
  v32[32] = v30;
  v32[33] = v31;
  sub_1DC57589C((uint64_t)v10, v35);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v40);
  return sub_1DC5758E0((uint64_t)v10);
}

void sub_1DC575840(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1DC5753BC();
    v7 = a3(a1, &type metadata for NewsArticleViewResignEvent.Model.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1DC57589C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for NewsArticleViewResignEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DC5758E0(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for NewsArticleViewResignEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1DC57591C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return NewsArticleViewResignEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_1DC575930(_QWORD *a1)
{
  return NewsArticleViewResignEvent.Model.encode(to:)(a1);
}

uint64_t sub_1DC575944@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4B2C68(&qword_1EDB10F80, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1EDB10F68, a1);
}

uint64_t sub_1DC575968@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4B2C68(&qword_1EDB10FA0, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1EDB10F88, a1);
}

uint64_t sub_1DC57598C@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v4 = *MEMORY[0x1E0CF8128];
  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 104))(a2, v4, v5);
  v6 = a2 + a1[5];
  sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 104))(v6, v4, v7);
  v8 = a2 + a1[6];
  sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 104))(v8, v4, v9);
  v10 = a2 + a1[7];
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E7C0, (void (*)(void))sub_1DC4C0014, (void (*)(void))sub_1DC4C0058);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 104))(v10, v4, v11);
  v12 = a2 + a1[8];
  sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 104))(v12, v4, v13);
}

uint64_t *initializeBufferWithCopyOfBuffer for NewsArticleViewResignEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v24 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v24 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_1DC4B6600();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = a3[6];
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
    v16 = a3[7];
    v17 = (char *)a1 + v16;
    v18 = (char *)a2 + v16;
    sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E7C0, (void (*)(void))sub_1DC4C0014, (void (*)(void))sub_1DC4C0058);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
    v20 = a3[8];
    v21 = (char *)a1 + v20;
    v22 = (char *)a2 + v20;
    sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v21, v22, v23);
  }
  return a1;
}

uint64_t destroy for NewsArticleViewResignEvent(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + a2[5];
  sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = a1 + a2[6];
  sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  v9 = a1 + a2[7];
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E7C0, (void (*)(void))sub_1DC4C0014, (void (*)(void))sub_1DC4C0058);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  v11 = a1 + a2[8];
  sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
}

uint64_t initializeWithCopy for NewsArticleViewResignEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E7C0, (void (*)(void))sub_1DC4C0014, (void (*)(void))sub_1DC4C0058);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v20, v21, v22);
  return a1;
}

uint64_t assignWithCopy for NewsArticleViewResignEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 24))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E7C0, (void (*)(void))sub_1DC4C0014, (void (*)(void))sub_1DC4C0058);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 24))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 24))(v20, v21, v22);
  return a1;
}

uint64_t initializeWithTake for NewsArticleViewResignEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E7C0, (void (*)(void))sub_1DC4C0014, (void (*)(void))sub_1DC4C0058);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v20, v21, v22);
  return a1;
}

uint64_t assignWithTake for NewsArticleViewResignEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 40))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E7C0, (void (*)(void))sub_1DC4C0014, (void (*)(void))sub_1DC4C0058);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 40))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 40))(v20, v21, v22);
  return a1;
}

uint64_t getEnumTagSinglePayload for NewsArticleViewResignEvent()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC57642C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  sub_1DC4B6600();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
    v12 = *(_QWORD *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
    {
      v8 = v11;
      v13 = a3[5];
    }
    else
    {
      sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
      v12 = *(_QWORD *)(v14 - 8);
      if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
      {
        v8 = v14;
        v13 = a3[6];
      }
      else
      {
        sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E7C0, (void (*)(void))sub_1DC4C0014, (void (*)(void))sub_1DC4C0058);
        v12 = *(_QWORD *)(v15 - 8);
        if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
        {
          v8 = v15;
          v13 = a3[7];
        }
        else
        {
          sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
          v8 = v16;
          v12 = *(_QWORD *)(v16 - 8);
          v13 = a3[8];
        }
      }
    }
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t storeEnumTagSinglePayload for NewsArticleViewResignEvent()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC576598(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  sub_1DC4B6600();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = a4[5];
    }
    else
    {
      sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
      v14 = *(_QWORD *)(v16 - 8);
      if (*(_DWORD *)(v14 + 84) == a3)
      {
        v10 = v16;
        v15 = a4[6];
      }
      else
      {
        sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E7C0, (void (*)(void))sub_1DC4C0014, (void (*)(void))sub_1DC4C0058);
        v14 = *(_QWORD *)(v17 - 8);
        if (*(_DWORD *)(v14 + 84) == a3)
        {
          v10 = v17;
          v15 = a4[7];
        }
        else
        {
          sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
          v10 = v18;
          v14 = *(_QWORD *)(v18 - 8);
          v15 = a4[8];
        }
      }
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_1DC576700()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;

  sub_1DC4B6600();
  if (v0 <= 0x3F)
  {
    sub_1DC4B4B50(319, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
    if (v1 <= 0x3F)
    {
      sub_1DC4B4B50(319, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
      if (v2 <= 0x3F)
      {
        sub_1DC4B4B50(319, (unint64_t *)&qword_1EDB0E7C0, (void (*)(void))sub_1DC4C0014, (void (*)(void))sub_1DC4C0058);
        if (v3 <= 0x3F)
        {
          sub_1DC4B4B50(319, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
          if (v4 <= 0x3F)
            swift_initStructMetadata();
        }
      }
    }
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for NewsArticleViewResignEvent.Model(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v22 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v22 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1DC62ABA8();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = a3[6];
    v10 = (char *)a1 + v8;
    v11 = (char *)a2 + v8;
    v12 = *((_QWORD *)v11 + 1);
    *(_QWORD *)v10 = *(_QWORD *)v11;
    *((_QWORD *)v10 + 1) = v12;
    *((_WORD *)v10 + 8) = *((_WORD *)v11 + 8);
    v13 = (char *)a1 + v9;
    v14 = (char *)a2 + v9;
    v15 = *((_QWORD *)v14 + 1);
    *(_QWORD *)v13 = *(_QWORD *)v14;
    *((_QWORD *)v13 + 1) = v15;
    v16 = *((_QWORD *)v14 + 3);
    *((_QWORD *)v13 + 2) = *((_QWORD *)v14 + 2);
    *((_QWORD *)v13 + 3) = v16;
    v13[32] = v14[32];
    *((_QWORD *)v13 + 5) = *((_QWORD *)v14 + 5);
    v13[48] = v14[48];
    *((_QWORD *)v13 + 7) = *((_QWORD *)v14 + 7);
    *((_DWORD *)v13 + 16) = *((_DWORD *)v14 + 16);
    v17 = a3[8];
    *(_WORD *)((char *)a1 + a3[7]) = *(_WORD *)((char *)a2 + a3[7]);
    v18 = (char *)a1 + v17;
    v19 = (char *)a2 + v17;
    v20 = *((_QWORD *)v19 + 1);
    *(_QWORD *)v18 = *(_QWORD *)v19;
    *((_QWORD *)v18 + 1) = v20;
    v21 = *((_QWORD *)v19 + 3);
    *((_QWORD *)v18 + 2) = *((_QWORD *)v19 + 2);
    *((_QWORD *)v18 + 3) = v21;
    v18[32] = v19[32];
    v18[33] = v19[33];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for NewsArticleViewResignEvent.Model(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for NewsArticleViewResignEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v6 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = a2 + v7;
  v11 = *(_QWORD *)(v10 + 8);
  *(_QWORD *)v9 = *(_QWORD *)v10;
  *(_QWORD *)(v9 + 8) = v11;
  *(_WORD *)(v9 + 16) = *(_WORD *)(v10 + 16);
  v12 = a1 + v8;
  v13 = a2 + v8;
  v14 = *(_QWORD *)(v13 + 8);
  *(_QWORD *)v12 = *(_QWORD *)v13;
  *(_QWORD *)(v12 + 8) = v14;
  v15 = *(_QWORD *)(v13 + 24);
  *(_QWORD *)(v12 + 16) = *(_QWORD *)(v13 + 16);
  *(_QWORD *)(v12 + 24) = v15;
  *(_BYTE *)(v12 + 32) = *(_BYTE *)(v13 + 32);
  *(_QWORD *)(v12 + 40) = *(_QWORD *)(v13 + 40);
  *(_BYTE *)(v12 + 48) = *(_BYTE *)(v13 + 48);
  *(_QWORD *)(v12 + 56) = *(_QWORD *)(v13 + 56);
  *(_DWORD *)(v12 + 64) = *(_DWORD *)(v13 + 64);
  v16 = a3[8];
  *(_WORD *)(a1 + a3[7]) = *(_WORD *)(a2 + a3[7]);
  v17 = a1 + v16;
  v18 = a2 + v16;
  v19 = *(_QWORD *)(v18 + 8);
  *(_QWORD *)v17 = *(_QWORD *)v18;
  *(_QWORD *)(v17 + 8) = v19;
  v20 = *(_QWORD *)(v18 + 24);
  *(_QWORD *)(v17 + 16) = *(_QWORD *)(v18 + 16);
  *(_QWORD *)(v17 + 24) = v20;
  *(_BYTE *)(v17 + 32) = *(_BYTE *)(v18 + 32);
  *(_BYTE *)(v17 + 33) = *(_BYTE *)(v18 + 33);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for NewsArticleViewResignEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  _BYTE *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v6 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_QWORD *)v8 = *(_QWORD *)(a2 + v7);
  *(_QWORD *)(v8 + 8) = *(_QWORD *)(a2 + v7 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v8 + 16) = *(_BYTE *)(v9 + 16);
  *(_BYTE *)(v8 + 17) = *(_BYTE *)(v9 + 17);
  v10 = a3[6];
  v11 = a1 + v10;
  v12 = a2 + v10;
  *(_QWORD *)v11 = *(_QWORD *)(a2 + v10);
  *(_QWORD *)(v11 + 8) = *(_QWORD *)(a2 + v10 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v11 + 16) = *(_QWORD *)(v12 + 16);
  *(_QWORD *)(v11 + 24) = *(_QWORD *)(v12 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v11 + 32) = *(_BYTE *)(v12 + 32);
  v13 = *(_QWORD *)(v12 + 40);
  *(_BYTE *)(v11 + 48) = *(_BYTE *)(v12 + 48);
  *(_QWORD *)(v11 + 40) = v13;
  *(_QWORD *)(v11 + 56) = *(_QWORD *)(v12 + 56);
  *(_BYTE *)(v11 + 64) = *(_BYTE *)(v12 + 64);
  *(_BYTE *)(v11 + 65) = *(_BYTE *)(v12 + 65);
  *(_BYTE *)(v11 + 66) = *(_BYTE *)(v12 + 66);
  *(_BYTE *)(v11 + 67) = *(_BYTE *)(v12 + 67);
  v14 = a3[7];
  v15 = (_BYTE *)(a1 + v14);
  v16 = (_BYTE *)(a2 + v14);
  *v15 = *v16;
  v15[1] = v16[1];
  v17 = a3[8];
  v18 = a1 + v17;
  v19 = a2 + v17;
  *(_QWORD *)v18 = *(_QWORD *)(a2 + v17);
  *(_QWORD *)(v18 + 8) = *(_QWORD *)(a2 + v17 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v18 + 16) = *(_QWORD *)(v19 + 16);
  *(_QWORD *)(v18 + 24) = *(_QWORD *)(v19 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v18 + 32) = *(_BYTE *)(v19 + 32);
  *(_BYTE *)(v18 + 33) = *(_BYTE *)(v19 + 33);
  return a1;
}

uint64_t initializeWithTake for NewsArticleViewResignEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 *v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  __int16 v18;
  uint64_t v19;
  __int128 v20;

  v6 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = a2 + v7;
  *(_OWORD *)v9 = *(_OWORD *)v10;
  *(_WORD *)(v9 + 16) = *(_WORD *)(v10 + 16);
  v11 = a1 + v8;
  v12 = (__int128 *)(a2 + v8);
  *(_DWORD *)(v11 + 64) = *((_DWORD *)v12 + 16);
  v13 = v12[3];
  *(_OWORD *)(v11 + 32) = v12[2];
  *(_OWORD *)(v11 + 48) = v13;
  v14 = *v12;
  v15 = v12[1];
  v16 = a3[7];
  v17 = a3[8];
  v18 = *(_WORD *)(a2 + v16);
  *(_OWORD *)v11 = v14;
  *(_OWORD *)(v11 + 16) = v15;
  *(_WORD *)(a1 + v16) = v18;
  v19 = a1 + v17;
  v20 = *(_OWORD *)(a2 + v17 + 16);
  *(_OWORD *)v19 = *(_OWORD *)(a2 + v17);
  *(_OWORD *)(v19 + 16) = v20;
  *(_WORD *)(v19 + 32) = *(_WORD *)(a2 + v17 + 32);
  return a1;
}

uint64_t assignWithTake for NewsArticleViewResignEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v6 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = *(_QWORD *)(a2 + v7 + 8);
  *(_QWORD *)v8 = *(_QWORD *)(a2 + v7);
  *(_QWORD *)(v8 + 8) = v10;
  swift_bridgeObjectRelease();
  *(_WORD *)(v8 + 16) = *(_WORD *)(v9 + 16);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  v14 = *(_QWORD *)(a2 + v11 + 8);
  *(_QWORD *)v12 = *(_QWORD *)(a2 + v11);
  *(_QWORD *)(v12 + 8) = v14;
  swift_bridgeObjectRelease();
  v15 = *(_QWORD *)(v13 + 24);
  *(_QWORD *)(v12 + 16) = *(_QWORD *)(v13 + 16);
  *(_QWORD *)(v12 + 24) = v15;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v12 + 32) = *(_BYTE *)(v13 + 32);
  *(_QWORD *)(v12 + 40) = *(_QWORD *)(v13 + 40);
  *(_BYTE *)(v12 + 48) = *(_BYTE *)(v13 + 48);
  *(_QWORD *)(v12 + 56) = *(_QWORD *)(v13 + 56);
  *(_BYTE *)(v12 + 64) = *(_BYTE *)(v13 + 64);
  *(_BYTE *)(v12 + 65) = *(_BYTE *)(v13 + 65);
  *(_BYTE *)(v12 + 66) = *(_BYTE *)(v13 + 66);
  *(_BYTE *)(v12 + 67) = *(_BYTE *)(v13 + 67);
  v16 = a3[7];
  v17 = a3[8];
  v18 = (_BYTE *)(a1 + v16);
  v19 = (_BYTE *)(a2 + v16);
  *v18 = *v19;
  v18[1] = v19[1];
  v20 = a1 + v17;
  v21 = a2 + v17;
  v22 = *(_QWORD *)(v21 + 8);
  *(_QWORD *)v20 = *(_QWORD *)v21;
  *(_QWORD *)(v20 + 8) = v22;
  swift_bridgeObjectRelease();
  v23 = *(_QWORD *)(v21 + 24);
  *(_QWORD *)(v20 + 16) = *(_QWORD *)(v21 + 16);
  *(_QWORD *)(v20 + 24) = v23;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v20 + 32) = *(_BYTE *)(v21 + 32);
  *(_BYTE *)(v20 + 33) = *(_BYTE *)(v21 + 33);
  return a1;
}

uint64_t getEnumTagSinglePayload for NewsArticleViewResignEvent.Model()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC576EAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_1DC62ABA8();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for NewsArticleViewResignEvent.Model()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC576F38(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_1DC62ABA8();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  return result;
}

uint64_t sub_1DC576FB4()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1DC62ABA8();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for NewsArticleViewResignEvent.Model.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1DC577090 + 4 * byte_1DC63BC3A[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1DC5770C4 + 4 * byte_1DC63BC35[v4]))();
}

uint64_t sub_1DC5770C4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC5770CC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DC5770D4);
  return result;
}

uint64_t sub_1DC5770E0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DC5770E8);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1DC5770EC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC5770F4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for NewsArticleViewResignEvent.Model.CodingKeys()
{
  return &type metadata for NewsArticleViewResignEvent.Model.CodingKeys;
}

unint64_t sub_1DC577114()
{
  unint64_t result;

  result = qword_1F036D2E0;
  if (!qword_1F036D2E0)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC63BE44, &type metadata for NewsArticleViewResignEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036D2E0);
  }
  return result;
}

unint64_t sub_1DC57715C()
{
  unint64_t result;

  result = qword_1F036D2E8;
  if (!qword_1F036D2E8)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC63BDB4, &type metadata for NewsArticleViewResignEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036D2E8);
  }
  return result;
}

unint64_t sub_1DC5771A4()
{
  unint64_t result;

  result = qword_1F036D2F0;
  if (!qword_1F036D2F0)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC63BDDC, &type metadata for NewsArticleViewResignEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036D2F0);
  }
  return result;
}

uint64_t sub_1DC5771E8(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x746144746E657665 && a2 == 0xE900000000000061;
  if (v2 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6174614477656976 && a2 == 0xE800000000000000 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x697472417377656ELL && a2 == 0xEF61746144656C63 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x7461746E6569726FLL && a2 == 0xEF617461446E6F69 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x446C656E6E616863 && a2 == 0xEB00000000617461)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    v6 = sub_1DC62B520();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 4;
    else
      return 5;
  }
}

uint64_t sub_1DC577470(uint64_t a1)
{
  return sub_1DC4BE784(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], qword_1EDB0FD70, MEMORY[0x1E0CF8078]);
}

uint64_t static MediaExposureEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C2FE8(&qword_1EDB0FD88, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1EDB0FD70, a1);
}

uint64_t sub_1DC5774B0(uint64_t a1)
{
  return sub_1DC4BE784(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], qword_1EDB0FD90, MEMORY[0x1E0CF8380]);
}

uint64_t static MediaExposureEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C2FE8(&qword_1EDB0FDA8, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1EDB0FD90, a1);
}

uint64_t MediaExposureEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C37DC((uint64_t (*)(_QWORD))sub_1DC4B6600, a1);
}

uint64_t MediaExposureEvent.eventData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  sub_1DC4B6600();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*MediaExposureEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t MediaExposureEvent.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C382C(type metadata accessor for MediaExposureEvent, (uint64_t (*)(_QWORD))sub_1DC4B66A4, a1);
}

uint64_t type metadata accessor for MediaExposureEvent(uint64_t a1)
{
  return sub_1DC4B385C(a1, qword_1EDB0FDB0);
}

uint64_t MediaExposureEvent.timedData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for MediaExposureEvent(0) + 20);
  sub_1DC4B66A4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*MediaExposureEvent.timedData.modify())()
{
  type metadata accessor for MediaExposureEvent(0);
  return nullsub_1;
}

uint64_t MediaExposureEvent.newsArticleData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for MediaExposureEvent(0) + 24);
  sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t MediaExposureEvent.newsArticleData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for MediaExposureEvent(0) + 24);
  sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*MediaExposureEvent.newsArticleData.modify())()
{
  type metadata accessor for MediaExposureEvent(0);
  return nullsub_1;
}

uint64_t MediaExposureEvent.groupData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for MediaExposureEvent(0) + 28);
  sub_1DC4B4B50(0, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t MediaExposureEvent.groupData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for MediaExposureEvent(0) + 28);
  sub_1DC4B4B50(0, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*MediaExposureEvent.groupData.modify())()
{
  type metadata accessor for MediaExposureEvent(0);
  return nullsub_1;
}

uint64_t MediaExposureEvent.feedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for MediaExposureEvent(0) + 32);
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t MediaExposureEvent.feedData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for MediaExposureEvent(0) + 32);
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*MediaExposureEvent.feedData.modify())()
{
  type metadata accessor for MediaExposureEvent(0);
  return nullsub_1;
}

uint64_t MediaExposureEvent.mediaData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for MediaExposureEvent(0) + 36);
  sub_1DC4B4B50(0, &qword_1EDB0E870, (void (*)(void))sub_1DC51701C, (void (*)(void))sub_1DC517060);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t MediaExposureEvent.mediaData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for MediaExposureEvent(0) + 36);
  sub_1DC4B4B50(0, &qword_1EDB0E870, (void (*)(void))sub_1DC51701C, (void (*)(void))sub_1DC517060);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*MediaExposureEvent.mediaData.modify())()
{
  type metadata accessor for MediaExposureEvent(0);
  return nullsub_1;
}

uint64_t MediaExposureEvent.viewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for MediaExposureEvent(0) + 40);
  sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t MediaExposureEvent.viewData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for MediaExposureEvent(0) + 40);
  sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*MediaExposureEvent.viewData.modify())()
{
  type metadata accessor for MediaExposureEvent(0);
  return nullsub_1;
}

uint64_t MediaExposureEvent.anfComponentData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for MediaExposureEvent(0) + 44);
  sub_1DC4B4B50(0, &qword_1EDB0E7C8, (void (*)(void))sub_1DC4E4AEC, (void (*)(void))sub_1DC4E4B34);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t MediaExposureEvent.anfComponentData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for MediaExposureEvent(0) + 44);
  sub_1DC4B4B50(0, &qword_1EDB0E7C8, (void (*)(void))sub_1DC4E4AEC, (void (*)(void))sub_1DC4E4B34);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*MediaExposureEvent.anfComponentData.modify())()
{
  type metadata accessor for MediaExposureEvent(0);
  return nullsub_1;
}

uint64_t MediaExposureEvent.galleryData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for MediaExposureEvent(0) + 48);
  sub_1DC4B4B50(0, &qword_1EDB0E768, (void (*)(void))sub_1DC4EA390, (void (*)(void))sub_1DC4EA3D8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t MediaExposureEvent.galleryData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for MediaExposureEvent(0) + 48);
  sub_1DC4B4B50(0, &qword_1EDB0E768, (void (*)(void))sub_1DC4EA390, (void (*)(void))sub_1DC4EA3D8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*MediaExposureEvent.galleryData.modify())()
{
  type metadata accessor for MediaExposureEvent(0);
  return nullsub_1;
}

uint64_t MediaExposureEvent.issueData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for MediaExposureEvent(0) + 52);
  sub_1DC4B4B50(0, &qword_1EDB0E868, (void (*)(void))sub_1DC4C9630, (void (*)(void))sub_1DC4C9674);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t MediaExposureEvent.issueData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for MediaExposureEvent(0) + 52);
  sub_1DC4B4B50(0, &qword_1EDB0E868, (void (*)(void))sub_1DC4C9630, (void (*)(void))sub_1DC4C9674);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*MediaExposureEvent.issueData.modify())()
{
  type metadata accessor for MediaExposureEvent(0);
  return nullsub_1;
}

uint64_t MediaExposureEvent.channelData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for MediaExposureEvent(0) + 56);
  sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t MediaExposureEvent.channelData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for MediaExposureEvent(0) + 56);
  sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*MediaExposureEvent.channelData.modify())()
{
  type metadata accessor for MediaExposureEvent(0);
  return nullsub_1;
}

uint64_t MediaExposureEvent.activeWatchlistData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for MediaExposureEvent(0) + 60);
  sub_1DC4B4B50(0, &qword_1EDB0E790, (void (*)(void))sub_1DC4C9930, (void (*)(void))sub_1DC4C9974);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t MediaExposureEvent.activeWatchlistData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for MediaExposureEvent(0) + 60);
  sub_1DC4B4B50(0, &qword_1EDB0E790, (void (*)(void))sub_1DC4C9930, (void (*)(void))sub_1DC4C9974);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*MediaExposureEvent.activeWatchlistData.modify())()
{
  type metadata accessor for MediaExposureEvent(0);
  return nullsub_1;
}

uint64_t MediaExposureEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v2 = *MEMORY[0x1E0CF8128];
  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
  v4 = (int *)type metadata accessor for MediaExposureEvent(0);
  v5 = a1 + v4[5];
  sub_1DC4B66A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 104))(v5, v2, v6);
  v7 = a1 + v4[6];
  sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 104))(v7, v2, v8);
  v9 = a1 + v4[7];
  v10 = *MEMORY[0x1E0CF8120];
  sub_1DC4B4B50(0, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 104))(v9, v10, v11);
  v12 = a1 + v4[8];
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 104))(v12, v10, v13);
  v14 = a1 + v4[9];
  sub_1DC4B4B50(0, &qword_1EDB0E870, (void (*)(void))sub_1DC51701C, (void (*)(void))sub_1DC517060);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 104))(v14, v2, v15);
  v16 = a1 + v4[10];
  sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 104))(v16, v2, v17);
  v18 = a1 + v4[11];
  sub_1DC4B4B50(0, &qword_1EDB0E7C8, (void (*)(void))sub_1DC4E4AEC, (void (*)(void))sub_1DC4E4B34);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 104))(v18, v10, v19);
  v20 = a1 + v4[12];
  sub_1DC4B4B50(0, &qword_1EDB0E768, (void (*)(void))sub_1DC4EA390, (void (*)(void))sub_1DC4EA3D8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 104))(v20, v10, v21);
  v22 = a1 + v4[13];
  sub_1DC4B4B50(0, &qword_1EDB0E868, (void (*)(void))sub_1DC4C9630, (void (*)(void))sub_1DC4C9674);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 104))(v22, v10, v23);
  v24 = a1 + v4[14];
  sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 104))(v24, v2, v25);
  v26 = a1 + v4[15];
  sub_1DC4B4B50(0, &qword_1EDB0E790, (void (*)(void))sub_1DC4C9930, (void (*)(void))sub_1DC4C9974);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 104))(v26, v10, v27);
}

uint64_t MediaExposureEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C37DC((uint64_t (*)(_QWORD))MEMORY[0x1E0CF8670], a1);
}

uint64_t MediaExposureEvent.Model.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C382C(type metadata accessor for MediaExposureEvent.Model, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF86C0], a1);
}

uint64_t type metadata accessor for MediaExposureEvent.Model(uint64_t a1)
{
  return sub_1DC4B385C(a1, qword_1EDB12818);
}

uint64_t MediaExposureEvent.Model.newsArticleData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  char v12;
  char v13;
  char v14;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for MediaExposureEvent.Model(0) + 24));
  v5 = *v3;
  v4 = v3[1];
  v6 = v3[2];
  v7 = v3[3];
  v8 = *((_BYTE *)v3 + 32);
  v9 = v3[5];
  v10 = *((_BYTE *)v3 + 48);
  v11 = v3[7];
  v12 = *((_BYTE *)v3 + 64);
  v13 = *((_BYTE *)v3 + 65);
  v14 = *((_BYTE *)v3 + 66);
  LOBYTE(v3) = *((_BYTE *)v3 + 67);
  *(_QWORD *)a1 = v5;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  *(_BYTE *)(a1 + 32) = v8;
  *(_QWORD *)(a1 + 40) = v9;
  *(_BYTE *)(a1 + 48) = v10;
  *(_QWORD *)(a1 + 56) = v11;
  *(_BYTE *)(a1 + 64) = v12;
  *(_BYTE *)(a1 + 65) = v13;
  *(_BYTE *)(a1 + 66) = v14;
  *(_BYTE *)(a1 + 67) = (_BYTE)v3;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t MediaExposureEvent.Model.groupData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for MediaExposureEvent.Model(0) + 28));
  v4 = *v3;
  v5 = v3[1];
  v6 = v3[2];
  v7 = v3[3];
  v8 = v3[4];
  v9 = v3[5];
  *a1 = *v3;
  a1[1] = v5;
  a1[2] = v6;
  a1[3] = v7;
  a1[4] = v8;
  a1[5] = v9;
  return sub_1DC4C9EC0(v4, v5, v6);
}

uint64_t MediaExposureEvent.Model.feedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for MediaExposureEvent.Model(0) + 32);
  v4 = *(_QWORD *)(v3 + 16);
  *(_OWORD *)a1 = *(_OWORD *)v3;
  *(_QWORD *)(a1 + 16) = v4;
  return swift_bridgeObjectRetain();
}

uint64_t MediaExposureEvent.Model.mediaData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  char *v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  int v7;

  v3 = (char *)(v1 + *(int *)(type metadata accessor for MediaExposureEvent.Model(0) + 36));
  v4 = *v3;
  v6 = *((_QWORD *)v3 + 1);
  v5 = *((_QWORD *)v3 + 2);
  v7 = *((_DWORD *)v3 + 6);
  LOBYTE(v3) = v3[28];
  *(_BYTE *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v6;
  *(_QWORD *)(a1 + 16) = v5;
  *(_DWORD *)(a1 + 24) = v7;
  *(_BYTE *)(a1 + 28) = (_BYTE)v3;
  return swift_bridgeObjectRetain();
}

uint64_t MediaExposureEvent.Model.viewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for MediaExposureEvent.Model(0) + 40));
  v5 = *v3;
  v4 = v3[1];
  LOWORD(v3) = *((_WORD *)v3 + 8);
  *(_QWORD *)a1 = v5;
  *(_QWORD *)(a1 + 8) = v4;
  *(_WORD *)(a1 + 16) = (_WORD)v3;
  return swift_bridgeObjectRetain();
}

uint64_t MediaExposureEvent.Model.anfComponentData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for MediaExposureEvent.Model(0) + 44));
  v4 = *v3;
  v5 = v3[1];
  *a1 = *v3;
  a1[1] = v5;
  return sub_1DC517D30(v4, v5);
}

uint64_t MediaExposureEvent.Model.galleryData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  int v5;

  v3 = v1 + *(int *)(type metadata accessor for MediaExposureEvent.Model(0) + 48);
  v4 = *(_QWORD *)(v3 + 16);
  v5 = *(_DWORD *)(v3 + 24);
  *(_OWORD *)a1 = *(_OWORD *)v3;
  *(_QWORD *)(a1 + 16) = v4;
  *(_DWORD *)(a1 + 24) = v5;
  return swift_bridgeObjectRetain();
}

uint64_t MediaExposureEvent.Model.issueData.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = (_QWORD *)(v1 + *(int *)(type metadata accessor for MediaExposureEvent.Model(0) + 52));
  v4 = v3[1];
  *a1 = *v3;
  a1[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t MediaExposureEvent.Model.channelData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for MediaExposureEvent.Model(0) + 56));
  v5 = *v3;
  v4 = v3[1];
  v6 = v3[2];
  v7 = v3[3];
  v8 = *((_BYTE *)v3 + 32);
  LOBYTE(v3) = *((_BYTE *)v3 + 33);
  *(_QWORD *)a1 = v5;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  *(_BYTE *)(a1 + 32) = v8;
  *(_BYTE *)(a1 + 33) = (_BYTE)v3;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t MediaExposureEvent.Model.activeWatchlistData.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for MediaExposureEvent.Model(0);
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 60));
  return result;
}

__n128 MediaExposureEvent.Model.init(eventData:timedData:newsArticleData:groupData:feedData:mediaData:viewData:anfComponentData:galleryData:issueData:channelData:activeWatchlistData:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, __int128 *a3@<X2>, __int128 *a4@<X3>, __int128 *a5@<X4>, char *a6@<X5>, uint64_t *a7@<X6>, uint64_t *a8@<X7>, uint64_t a9@<X8>, __int128 *a10, uint64_t *a11, __n128 *a12, char *a13)
{
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  char v21;
  uint64_t v22;
  int *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  _QWORD *v33;
  __n128 *v34;
  __n128 result;
  char v36;
  char v37;
  char v38;
  __int128 v39;
  uint64_t v41;
  uint64_t v42;
  __int128 v43;
  __int128 v44;
  uint64_t v45;
  __int128 v46;
  char v47;
  int v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  __int16 v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  int v57;
  uint64_t v58;
  __int128 v59;
  uint64_t v60;
  uint64_t v61;
  unsigned __int8 v62;
  unsigned __int8 v63;
  unint64_t v64;
  unint64_t v65;
  __n128 v66;
  char v67;

  v39 = *a3;
  v15 = *((_QWORD *)a3 + 2);
  v16 = *((_QWORD *)a3 + 3);
  v17 = *((_BYTE *)a3 + 32);
  v18 = *((_QWORD *)a3 + 5);
  v38 = *((_BYTE *)a3 + 48);
  v19 = *((_QWORD *)a3 + 7);
  v20 = *((_BYTE *)a3 + 64);
  v21 = *((_BYTE *)a3 + 65);
  v37 = *((_BYTE *)a3 + 66);
  v36 = *((_BYTE *)a3 + 67);
  v43 = a4[1];
  v44 = *a4;
  v42 = *((_QWORD *)a4 + 4);
  v41 = *((_QWORD *)a4 + 5);
  v46 = *a5;
  v45 = *((_QWORD *)a5 + 2);
  v51 = *a6;
  v50 = *((_QWORD *)a6 + 1);
  v49 = *((_QWORD *)a6 + 2);
  v48 = *((_DWORD *)a6 + 6);
  v47 = a6[28];
  v54 = *a7;
  v53 = a7[1];
  v52 = *((_WORD *)a7 + 8);
  v56 = *a8;
  v55 = a8[1];
  v59 = *a10;
  v58 = *((_QWORD *)a10 + 2);
  v57 = *((_DWORD *)a10 + 6);
  v60 = a11[1];
  v61 = *a11;
  v66 = *a12;
  v64 = a12[1].n128_u64[1];
  v65 = a12[1].n128_u64[0];
  v62 = a12[2].n128_u8[1];
  v63 = a12[2].n128_u8[0];
  v67 = *a13;
  v22 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(a9, a1, v22);
  v23 = (int *)type metadata accessor for MediaExposureEvent.Model(0);
  v24 = a9 + v23[5];
  v25 = sub_1DC62ABC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 32))(v24, a2, v25);
  v26 = a9 + v23[6];
  *(_QWORD *)(v26 + 16) = v15;
  *(_QWORD *)(v26 + 24) = v16;
  *(_BYTE *)(v26 + 32) = v17;
  *(_QWORD *)(v26 + 40) = v18;
  *(_OWORD *)v26 = v39;
  *(_BYTE *)(v26 + 48) = v38;
  *(_QWORD *)(v26 + 56) = v19;
  *(_BYTE *)(v26 + 64) = v20;
  *(_BYTE *)(v26 + 65) = v21;
  *(_BYTE *)(v26 + 66) = v37;
  *(_BYTE *)(v26 + 67) = v36;
  v27 = a9 + v23[7];
  *(_OWORD *)v27 = v44;
  *(_OWORD *)(v27 + 16) = v43;
  *(_QWORD *)(v27 + 32) = v42;
  *(_QWORD *)(v27 + 40) = v41;
  v28 = a9 + v23[8];
  *(_OWORD *)v28 = v46;
  *(_QWORD *)(v28 + 16) = v45;
  v29 = a9 + v23[9];
  *(_BYTE *)v29 = v51;
  *(_QWORD *)(v29 + 8) = v50;
  *(_QWORD *)(v29 + 16) = v49;
  *(_DWORD *)(v29 + 24) = v48;
  *(_BYTE *)(v29 + 28) = v47;
  v30 = a9 + v23[10];
  *(_QWORD *)v30 = v54;
  *(_QWORD *)(v30 + 8) = v53;
  *(_WORD *)(v30 + 16) = v52;
  v31 = (_QWORD *)(a9 + v23[11]);
  *v31 = v56;
  v31[1] = v55;
  v32 = a9 + v23[12];
  *(_OWORD *)v32 = v59;
  *(_QWORD *)(v32 + 16) = v58;
  *(_DWORD *)(v32 + 24) = v57;
  v33 = (_QWORD *)(a9 + v23[13]);
  *v33 = v61;
  v33[1] = v60;
  v34 = (__n128 *)(a9 + v23[14]);
  result = v66;
  *v34 = v66;
  v34[1].n128_u64[0] = v65;
  v34[1].n128_u64[1] = v64;
  v34[2].n128_u8[0] = v63;
  v34[2].n128_u8[1] = v62;
  *(_BYTE *)(a9 + v23[15]) = v67;
  return result;
}

uint64_t sub_1DC5788C8(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1DC578900 + 4 * byte_1DC63BEC0[a1]))(0x746144746E657665, 0xE900000000000061);
}

uint64_t sub_1DC578900()
{
  return 0x74614464656D6974;
}

uint64_t sub_1DC578914()
{
  return 0x697472417377656ELL;
}

uint64_t sub_1DC578938()
{
  return 0x74614470756F7267;
}

uint64_t sub_1DC57894C()
{
  return 0x6174614464656566;
}

unint64_t sub_1DC578988()
{
  return 0xD000000000000010;
}

uint64_t sub_1DC5789A4()
{
  return 0x447972656C6C6167;
}

unint64_t sub_1DC5789EC()
{
  return 0xD000000000000013;
}

uint64_t sub_1DC578A0C()
{
  unsigned __int8 *v0;

  return sub_1DC5788C8(*v0);
}

uint64_t sub_1DC578A14@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1DC57CDD0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DC578A38()
{
  sub_1DC578F7C();
  return sub_1DC62B604();
}

uint64_t sub_1DC578A60()
{
  sub_1DC578F7C();
  return sub_1DC62B610();
}

uint64_t MediaExposureEvent.Model.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int *v10;
  __int128 *v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  char v19;
  char v20;
  char v21;
  __int128 *v22;
  __int128 v23;
  __int128 *v24;
  uint64_t v25;
  char *v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  int v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  __int128 *v34;
  uint64_t v35;
  int v36;
  __int128 *v37;
  __int128 v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  uint64_t v43;
  char v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  char v48;
  uint64_t v49;
  char v50;
  char v51;
  char v52;
  char v53;

  v3 = v1;
  sub_1DC57995C(0, &qword_1F036D2F8, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v43 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC578F7C();
  sub_1DC62B5F8();
  LOBYTE(v45) = 0;
  sub_1DC62ABA8();
  sub_1DC4B6748(&qword_1EDB0E8A8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF8670], MEMORY[0x1E0CF8680]);
  sub_1DC62B4E4();
  if (!v2)
  {
    v10 = (int *)type metadata accessor for MediaExposureEvent.Model(0);
    LOBYTE(v45) = 1;
    sub_1DC62ABC0();
    sub_1DC4B6748(&qword_1EDB0E8B8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF86C0], MEMORY[0x1E0CF86D0]);
    sub_1DC62B4E4();
    v11 = (__int128 *)(v3 + v10[6]);
    v12 = *v11;
    v13 = *((_QWORD *)v11 + 2);
    v14 = *((_QWORD *)v11 + 3);
    v15 = *((_BYTE *)v11 + 32);
    v16 = *((_QWORD *)v11 + 5);
    v17 = *((_BYTE *)v11 + 48);
    v18 = *((_QWORD *)v11 + 7);
    v19 = *((_BYTE *)v11 + 64);
    v20 = *((_BYTE *)v11 + 65);
    v21 = *((_BYTE *)v11 + 66);
    LOBYTE(v11) = *((_BYTE *)v11 + 67);
    v45 = v12;
    *(_QWORD *)&v46 = v13;
    *((_QWORD *)&v46 + 1) = v14;
    LOBYTE(v47) = v15;
    *((_QWORD *)&v47 + 1) = v16;
    v48 = v17;
    v49 = v18;
    v50 = v19;
    v51 = v20;
    v52 = v21;
    v53 = (char)v11;
    v44 = 2;
    sub_1DC4C18E8();
    sub_1DC62B4E4();
    v22 = (__int128 *)(v3 + v10[7]);
    v23 = v22[1];
    v45 = *v22;
    v46 = v23;
    v47 = v22[2];
    v44 = 3;
    sub_1DC4C9004();
    sub_1DC62B490();
    v24 = (__int128 *)(v3 + v10[8]);
    v25 = *((_QWORD *)v24 + 2);
    v45 = *v24;
    *(_QWORD *)&v46 = v25;
    v44 = 4;
    sub_1DC4BEFD8();
    sub_1DC62B490();
    v26 = (char *)(v3 + v10[9]);
    v27 = *v26;
    v28 = *((_QWORD *)v26 + 1);
    v29 = *((_QWORD *)v26 + 2);
    v30 = *((_DWORD *)v26 + 6);
    LOBYTE(v26) = v26[28];
    LOBYTE(v45) = v27;
    *((_QWORD *)&v45 + 1) = v28;
    *(_QWORD *)&v46 = v29;
    DWORD2(v46) = v30;
    BYTE12(v46) = (_BYTE)v26;
    v44 = 5;
    sub_1DC517060();
    sub_1DC62B4E4();
    v31 = (uint64_t *)(v3 + v10[10]);
    v32 = *v31;
    v33 = v31[1];
    LOWORD(v31) = *((_WORD *)v31 + 8);
    *(_QWORD *)&v45 = v32;
    *((_QWORD *)&v45 + 1) = v33;
    LOWORD(v46) = (_WORD)v31;
    v44 = 6;
    sub_1DC4BEDF0();
    sub_1DC62B4E4();
    v45 = *(_OWORD *)(v3 + v10[11]);
    v44 = 7;
    sub_1DC4E4B34();
    sub_1DC62B490();
    v34 = (__int128 *)(v3 + v10[12]);
    v35 = *((_QWORD *)v34 + 2);
    v36 = *((_DWORD *)v34 + 6);
    v45 = *v34;
    *(_QWORD *)&v46 = v35;
    DWORD2(v46) = v36;
    v44 = 8;
    sub_1DC4EA3D8();
    sub_1DC62B490();
    v45 = *(_OWORD *)(v3 + v10[13]);
    v44 = 9;
    sub_1DC4C9674();
    sub_1DC62B490();
    v37 = (__int128 *)(v3 + v10[14]);
    v38 = *v37;
    v39 = *((_QWORD *)v37 + 2);
    v40 = *((_QWORD *)v37 + 3);
    v41 = *((_BYTE *)v37 + 32);
    LOBYTE(v37) = *((_BYTE *)v37 + 33);
    v45 = v38;
    *(_QWORD *)&v46 = v39;
    *((_QWORD *)&v46 + 1) = v40;
    LOBYTE(v47) = v41;
    BYTE1(v47) = (_BYTE)v37;
    v44 = 10;
    sub_1DC4C8E84();
    sub_1DC62B4E4();
    LOBYTE(v45) = *(_BYTE *)(v3 + v10[15]);
    v44 = 11;
    sub_1DC4C9974();
    sub_1DC62B490();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1DC578F7C()
{
  unint64_t result;

  result = qword_1F036D300;
  if (!qword_1F036D300)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC63C1F4, &type metadata for MediaExposureEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036D300);
  }
  return result;
}

uint64_t MediaExposureEvent.Model.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t result;
  int v19;
  char *v20;
  uint64_t v21;
  int *v22;
  __int128 v23;
  char v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  char v28;
  char v29;
  char v30;
  char v31;
  char *v32;
  char *v33;
  __int128 v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  int v39;
  char v40;
  char *v41;
  uint64_t v42;
  __int16 v43;
  char *v44;
  uint64_t v45;
  int v46;
  char *v47;
  uint64_t v48;
  __int128 v49;
  char v50;
  char v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  int *v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  _QWORD *v64;
  uint64_t v65;
  char *v66;
  int *v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  char v71;
  uint64_t v72;
  char v73;
  char v74;
  char v75;
  char v76;
  int v77;
  char v78;

  v58 = a2;
  v4 = sub_1DC62ABC0();
  v60 = *(_QWORD *)(v4 - 8);
  v61 = v4;
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v58 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1DC62ABA8();
  v62 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v58 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC57995C(0, &qword_1F036D308, MEMORY[0x1E0DED048]);
  v63 = v10;
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v58 - v12;
  v67 = (int *)type metadata accessor for MediaExposureEvent.Model(0);
  MEMORY[0x1E0C80A78](v67);
  v66 = (char *)&v58 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = a1[3];
  v64 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v15);
  sub_1DC578F7C();
  v59 = v13;
  sub_1DC62B5E0();
  if (v2)
  {
    v65 = v2;
    result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v64);
    LODWORD(v63) = 0;
    v19 = 0;
    v77 = 0;
  }
  else
  {
    v16 = v11;
    LOBYTE(v68) = 0;
    sub_1DC4B6748(&qword_1EDB0E278, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF8670], MEMORY[0x1E0CF8688]);
    sub_1DC62B454();
    v17 = v7;
    v20 = v66;
    (*(void (**)(char *, char *, uint64_t))(v62 + 32))(v66, v9, v7);
    LOBYTE(v68) = 1;
    sub_1DC4B6748(&qword_1EDB0E8C0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF86C0], MEMORY[0x1E0CF86D8]);
    v21 = v61;
    sub_1DC62B454();
    v22 = v67;
    (*(void (**)(char *, char *, uint64_t))(v60 + 32))(&v20[v67[5]], v6, v21);
    v78 = 2;
    sub_1DC4C18A0();
    sub_1DC62B454();
    v23 = v69;
    v24 = v70;
    v25 = *((_QWORD *)&v70 + 1);
    v26 = v71;
    v27 = v72;
    v28 = v73;
    v29 = v74;
    v30 = v75;
    v31 = v76;
    v32 = &v20[v22[6]];
    *(_OWORD *)v32 = v68;
    *((_OWORD *)v32 + 1) = v23;
    v32[32] = v24;
    *((_QWORD *)v32 + 5) = v25;
    v32[48] = v26;
    *((_QWORD *)v32 + 7) = v27;
    v32[64] = v28;
    v32[65] = v29;
    v32[66] = v30;
    v32[67] = v31;
    v78 = 3;
    sub_1DC4C8FC0();
    sub_1DC62B400();
    v33 = &v20[v22[7]];
    v34 = v69;
    *(_OWORD *)v33 = v68;
    *((_OWORD *)v33 + 1) = v34;
    *((_OWORD *)v33 + 2) = v70;
    v78 = 4;
    sub_1DC4BEF94();
    sub_1DC62B400();
    v35 = v69;
    v36 = &v20[v22[8]];
    *(_OWORD *)v36 = v68;
    *((_QWORD *)v36 + 2) = v35;
    v78 = 5;
    sub_1DC51701C();
    sub_1DC62B454();
    v37 = *((_QWORD *)&v68 + 1);
    v38 = v69;
    v39 = DWORD2(v69);
    v40 = BYTE12(v69);
    v41 = &v20[v22[9]];
    *v41 = v68;
    *((_QWORD *)v41 + 1) = v37;
    *((_QWORD *)v41 + 2) = v38;
    *((_DWORD *)v41 + 6) = v39;
    v41[28] = v40;
    v78 = 6;
    sub_1DC4BEDAC();
    sub_1DC62B454();
    v42 = *((_QWORD *)&v68 + 1);
    v43 = v69;
    v44 = &v20[v22[10]];
    *(_QWORD *)v44 = v68;
    *((_QWORD *)v44 + 1) = v42;
    *((_WORD *)v44 + 8) = v43;
    v78 = 7;
    sub_1DC4E4AEC();
    sub_1DC62B400();
    *(_OWORD *)&v20[v22[11]] = v68;
    v78 = 8;
    sub_1DC4EA390();
    sub_1DC62B400();
    v77 = 1;
    v45 = v69;
    v46 = DWORD2(v69);
    v47 = &v20[v22[12]];
    *(_OWORD *)v47 = v68;
    *((_QWORD *)v47 + 2) = v45;
    *((_DWORD *)v47 + 6) = v46;
    v78 = 9;
    sub_1DC4C9630();
    sub_1DC62B400();
    v65 = 0;
    *(_OWORD *)&v66[v67[13]] = v68;
    v78 = 10;
    sub_1DC4C8E40();
    v48 = v65;
    sub_1DC62B454();
    v65 = v48;
    if (v48)
    {
      (*(void (**)(char *, uint64_t))(v16 + 8))(v59, v63);
      LODWORD(v63) = 0;
      v19 = 1;
    }
    else
    {
      v49 = v69;
      v50 = v70;
      v51 = BYTE1(v70);
      v52 = &v66[v67[14]];
      *(_OWORD *)v52 = v68;
      *((_OWORD *)v52 + 1) = v49;
      v52[32] = v50;
      v52[33] = v51;
      v78 = 11;
      sub_1DC4C9930();
      v53 = v65;
      sub_1DC62B400();
      v65 = v53;
      if (!v53)
      {
        (*(void (**)(char *, uint64_t))(v16 + 8))(v59, v63);
        v57 = (uint64_t)v66;
        v66[v67[15]] = v68;
        sub_1DC5799B8(v57, v58);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v64);
        return sub_1DC5799FC(v57);
      }
      (*(void (**)(char *, uint64_t))(v16 + 8))(v59, v63);
      v19 = 1;
      LODWORD(v63) = 1;
    }
    v54 = v61;
    v55 = v66;
    v56 = v67;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v64);
    (*(void (**)(char *, uint64_t))(v62 + 8))(v55, v17);
    (*(void (**)(char *, uint64_t))(v60 + 8))(&v55[v56[5]], v54);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1DC4CB1B4(*(_QWORD *)&v55[v56[7]], *(_QWORD *)&v55[v56[7] + 8], *(_QWORD *)&v55[v56[7] + 16]);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    result = sub_1DC519178(*(_QWORD *)&v55[v56[11]], *(_QWORD *)&v55[v56[11] + 8]);
    if ((v77 & 1) != 0)
    {
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
  }
  if (!v19)
  {
    if (!(_DWORD)v63)
      return result;
    goto LABEL_10;
  }
LABEL_6:
  result = swift_bridgeObjectRelease();
  if ((v63 & 1) == 0)
    return result;
LABEL_10:
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void sub_1DC57995C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1DC578F7C();
    v7 = a3(a1, &type metadata for MediaExposureEvent.Model.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1DC5799B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for MediaExposureEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DC5799FC(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for MediaExposureEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1DC579A38@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return MediaExposureEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_1DC579A4C(_QWORD *a1)
{
  return MediaExposureEvent.Model.encode(to:)(a1);
}

uint64_t sub_1DC579A60@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4B2C68(&qword_1EDB0FD88, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1EDB0FD70, a1);
}

uint64_t sub_1DC579A84@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4B2C68(&qword_1EDB0FDA8, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1EDB0FD90, a1);
}

uint64_t sub_1DC579AA8@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v4 = *MEMORY[0x1E0CF8128];
  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 104))(a2, v4, v5);
  v6 = a2 + a1[5];
  sub_1DC4B66A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 104))(v6, v4, v7);
  v8 = a2 + a1[6];
  sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 104))(v8, v4, v9);
  v10 = a2 + a1[7];
  v11 = *MEMORY[0x1E0CF8120];
  sub_1DC4B4B50(0, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 104))(v10, v11, v12);
  v13 = a2 + a1[8];
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 104))(v13, v11, v14);
  v15 = a2 + a1[9];
  sub_1DC4B4B50(0, &qword_1EDB0E870, (void (*)(void))sub_1DC51701C, (void (*)(void))sub_1DC517060);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 104))(v15, v4, v16);
  v17 = a2 + a1[10];
  sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 104))(v17, v4, v18);
  v19 = a2 + a1[11];
  sub_1DC4B4B50(0, &qword_1EDB0E7C8, (void (*)(void))sub_1DC4E4AEC, (void (*)(void))sub_1DC4E4B34);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 104))(v19, v11, v20);
  v21 = a2 + a1[12];
  sub_1DC4B4B50(0, &qword_1EDB0E768, (void (*)(void))sub_1DC4EA390, (void (*)(void))sub_1DC4EA3D8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 104))(v21, v11, v22);
  v23 = a2 + a1[13];
  sub_1DC4B4B50(0, &qword_1EDB0E868, (void (*)(void))sub_1DC4C9630, (void (*)(void))sub_1DC4C9674);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 104))(v23, v11, v24);
  v25 = a2 + a1[14];
  sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 104))(v25, v4, v26);
  v27 = a2 + a1[15];
  sub_1DC4B4B50(0, &qword_1EDB0E790, (void (*)(void))sub_1DC4C9930, (void (*)(void))sub_1DC4C9974);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 104))(v27, v11, v28);
}

uint64_t *initializeBufferWithCopyOfBuffer for MediaExposureEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v52 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v52 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_1DC4B6600();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    sub_1DC4B66A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = a3[6];
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
    v16 = a3[7];
    v17 = (char *)a1 + v16;
    v18 = (char *)a2 + v16;
    sub_1DC4B4B50(0, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
    v20 = a3[8];
    v21 = (char *)a1 + v20;
    v22 = (char *)a2 + v20;
    sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v21, v22, v23);
    v24 = a3[9];
    v25 = (char *)a1 + v24;
    v26 = (char *)a2 + v24;
    sub_1DC4B4B50(0, &qword_1EDB0E870, (void (*)(void))sub_1DC51701C, (void (*)(void))sub_1DC517060);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v25, v26, v27);
    v28 = a3[10];
    v29 = (char *)a1 + v28;
    v30 = (char *)a2 + v28;
    sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 16))(v29, v30, v31);
    v32 = a3[11];
    v33 = (char *)a1 + v32;
    v34 = (char *)a2 + v32;
    sub_1DC4B4B50(0, &qword_1EDB0E7C8, (void (*)(void))sub_1DC4E4AEC, (void (*)(void))sub_1DC4E4B34);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 16))(v33, v34, v35);
    v36 = a3[12];
    v37 = (char *)a1 + v36;
    v38 = (char *)a2 + v36;
    sub_1DC4B4B50(0, &qword_1EDB0E768, (void (*)(void))sub_1DC4EA390, (void (*)(void))sub_1DC4EA3D8);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 16))(v37, v38, v39);
    v40 = a3[13];
    v41 = (char *)a1 + v40;
    v42 = (char *)a2 + v40;
    sub_1DC4B4B50(0, &qword_1EDB0E868, (void (*)(void))sub_1DC4C9630, (void (*)(void))sub_1DC4C9674);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v43 - 8) + 16))(v41, v42, v43);
    v44 = a3[14];
    v45 = (char *)a1 + v44;
    v46 = (char *)a2 + v44;
    sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v47 - 8) + 16))(v45, v46, v47);
    v48 = a3[15];
    v49 = (char *)a1 + v48;
    v50 = (char *)a2 + v48;
    sub_1DC4B4B50(0, &qword_1EDB0E790, (void (*)(void))sub_1DC4C9930, (void (*)(void))sub_1DC4C9974);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v51 - 8) + 16))(v49, v50, v51);
  }
  return a1;
}

uint64_t destroy for MediaExposureEvent(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + a2[5];
  sub_1DC4B66A4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = a1 + a2[6];
  sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  v9 = a1 + a2[7];
  sub_1DC4B4B50(0, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  v11 = a1 + a2[8];
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
  v13 = a1 + a2[9];
  sub_1DC4B4B50(0, &qword_1EDB0E870, (void (*)(void))sub_1DC51701C, (void (*)(void))sub_1DC517060);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v13, v14);
  v15 = a1 + a2[10];
  sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v15, v16);
  v17 = a1 + a2[11];
  sub_1DC4B4B50(0, &qword_1EDB0E7C8, (void (*)(void))sub_1DC4E4AEC, (void (*)(void))sub_1DC4E4B34);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(v17, v18);
  v19 = a1 + a2[12];
  sub_1DC4B4B50(0, &qword_1EDB0E768, (void (*)(void))sub_1DC4EA390, (void (*)(void))sub_1DC4EA3D8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 8))(v19, v20);
  v21 = a1 + a2[13];
  sub_1DC4B4B50(0, &qword_1EDB0E868, (void (*)(void))sub_1DC4C9630, (void (*)(void))sub_1DC4C9674);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 8))(v21, v22);
  v23 = a1 + a2[14];
  sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 8))(v23, v24);
  v25 = a1 + a2[15];
  sub_1DC4B4B50(0, &qword_1EDB0E790, (void (*)(void))sub_1DC4C9930, (void (*)(void))sub_1DC4C9974);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 8))(v25, v26);
}

uint64_t initializeWithCopy for MediaExposureEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1DC4B66A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1DC4B4B50(0, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1DC4B4B50(0, &qword_1EDB0E870, (void (*)(void))sub_1DC51701C, (void (*)(void))sub_1DC517060);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 16))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1DC4B4B50(0, &qword_1EDB0E7C8, (void (*)(void))sub_1DC4E4AEC, (void (*)(void))sub_1DC4E4B34);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 16))(v32, v33, v34);
  v35 = a3[12];
  v36 = a1 + v35;
  v37 = a2 + v35;
  sub_1DC4B4B50(0, &qword_1EDB0E768, (void (*)(void))sub_1DC4EA390, (void (*)(void))sub_1DC4EA3D8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 16))(v36, v37, v38);
  v39 = a3[13];
  v40 = a1 + v39;
  v41 = a2 + v39;
  sub_1DC4B4B50(0, &qword_1EDB0E868, (void (*)(void))sub_1DC4C9630, (void (*)(void))sub_1DC4C9674);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 16))(v40, v41, v42);
  v43 = a3[14];
  v44 = a1 + v43;
  v45 = a2 + v43;
  sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 16))(v44, v45, v46);
  v47 = a3[15];
  v48 = a1 + v47;
  v49 = a2 + v47;
  sub_1DC4B4B50(0, &qword_1EDB0E790, (void (*)(void))sub_1DC4C9930, (void (*)(void))sub_1DC4C9974);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 16))(v48, v49, v50);
  return a1;
}

uint64_t assignWithCopy for MediaExposureEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1DC4B66A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 24))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1DC4B4B50(0, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 24))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 24))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1DC4B4B50(0, &qword_1EDB0E870, (void (*)(void))sub_1DC51701C, (void (*)(void))sub_1DC517060);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 24))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 24))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1DC4B4B50(0, &qword_1EDB0E7C8, (void (*)(void))sub_1DC4E4AEC, (void (*)(void))sub_1DC4E4B34);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 24))(v32, v33, v34);
  v35 = a3[12];
  v36 = a1 + v35;
  v37 = a2 + v35;
  sub_1DC4B4B50(0, &qword_1EDB0E768, (void (*)(void))sub_1DC4EA390, (void (*)(void))sub_1DC4EA3D8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 24))(v36, v37, v38);
  v39 = a3[13];
  v40 = a1 + v39;
  v41 = a2 + v39;
  sub_1DC4B4B50(0, &qword_1EDB0E868, (void (*)(void))sub_1DC4C9630, (void (*)(void))sub_1DC4C9674);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 24))(v40, v41, v42);
  v43 = a3[14];
  v44 = a1 + v43;
  v45 = a2 + v43;
  sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 24))(v44, v45, v46);
  v47 = a3[15];
  v48 = a1 + v47;
  v49 = a2 + v47;
  sub_1DC4B4B50(0, &qword_1EDB0E790, (void (*)(void))sub_1DC4C9930, (void (*)(void))sub_1DC4C9974);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 24))(v48, v49, v50);
  return a1;
}

uint64_t initializeWithTake for MediaExposureEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1DC4B66A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1DC4B4B50(0, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1DC4B4B50(0, &qword_1EDB0E870, (void (*)(void))sub_1DC51701C, (void (*)(void))sub_1DC517060);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 32))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1DC4B4B50(0, &qword_1EDB0E7C8, (void (*)(void))sub_1DC4E4AEC, (void (*)(void))sub_1DC4E4B34);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 32))(v32, v33, v34);
  v35 = a3[12];
  v36 = a1 + v35;
  v37 = a2 + v35;
  sub_1DC4B4B50(0, &qword_1EDB0E768, (void (*)(void))sub_1DC4EA390, (void (*)(void))sub_1DC4EA3D8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 32))(v36, v37, v38);
  v39 = a3[13];
  v40 = a1 + v39;
  v41 = a2 + v39;
  sub_1DC4B4B50(0, &qword_1EDB0E868, (void (*)(void))sub_1DC4C9630, (void (*)(void))sub_1DC4C9674);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 32))(v40, v41, v42);
  v43 = a3[14];
  v44 = a1 + v43;
  v45 = a2 + v43;
  sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 32))(v44, v45, v46);
  v47 = a3[15];
  v48 = a1 + v47;
  v49 = a2 + v47;
  sub_1DC4B4B50(0, &qword_1EDB0E790, (void (*)(void))sub_1DC4C9930, (void (*)(void))sub_1DC4C9974);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 32))(v48, v49, v50);
  return a1;
}

uint64_t assignWithTake for MediaExposureEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1DC4B66A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 40))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1DC4B4B50(0, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 40))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 40))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1DC4B4B50(0, &qword_1EDB0E870, (void (*)(void))sub_1DC51701C, (void (*)(void))sub_1DC517060);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 40))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 40))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1DC4B4B50(0, &qword_1EDB0E7C8, (void (*)(void))sub_1DC4E4AEC, (void (*)(void))sub_1DC4E4B34);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 40))(v32, v33, v34);
  v35 = a3[12];
  v36 = a1 + v35;
  v37 = a2 + v35;
  sub_1DC4B4B50(0, &qword_1EDB0E768, (void (*)(void))sub_1DC4EA390, (void (*)(void))sub_1DC4EA3D8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 40))(v36, v37, v38);
  v39 = a3[13];
  v40 = a1 + v39;
  v41 = a2 + v39;
  sub_1DC4B4B50(0, &qword_1EDB0E868, (void (*)(void))sub_1DC4C9630, (void (*)(void))sub_1DC4C9674);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 40))(v40, v41, v42);
  v43 = a3[14];
  v44 = a1 + v43;
  v45 = a2 + v43;
  sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 40))(v44, v45, v46);
  v47 = a3[15];
  v48 = a1 + v47;
  v49 = a2 + v47;
  sub_1DC4B4B50(0, &qword_1EDB0E790, (void (*)(void))sub_1DC4C9930, (void (*)(void))sub_1DC4C9974);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 40))(v48, v49, v50);
  return a1;
}

uint64_t getEnumTagSinglePayload for MediaExposureEvent()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC57B2B4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  sub_1DC4B6600();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    sub_1DC4B66A4();
    v12 = *(_QWORD *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
    {
      v8 = v11;
      v13 = a3[5];
    }
    else
    {
      sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
      v12 = *(_QWORD *)(v14 - 8);
      if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
      {
        v8 = v14;
        v13 = a3[6];
      }
      else
      {
        sub_1DC4B4B50(0, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
        v12 = *(_QWORD *)(v15 - 8);
        if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
        {
          v8 = v15;
          v13 = a3[7];
        }
        else
        {
          sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
          v12 = *(_QWORD *)(v16 - 8);
          if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
          {
            v8 = v16;
            v13 = a3[8];
          }
          else
          {
            sub_1DC4B4B50(0, &qword_1EDB0E870, (void (*)(void))sub_1DC51701C, (void (*)(void))sub_1DC517060);
            v12 = *(_QWORD *)(v17 - 8);
            if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
            {
              v8 = v17;
              v13 = a3[9];
            }
            else
            {
              sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
              v12 = *(_QWORD *)(v18 - 8);
              if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
              {
                v8 = v18;
                v13 = a3[10];
              }
              else
              {
                sub_1DC4B4B50(0, &qword_1EDB0E7C8, (void (*)(void))sub_1DC4E4AEC, (void (*)(void))sub_1DC4E4B34);
                v12 = *(_QWORD *)(v19 - 8);
                if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                {
                  v8 = v19;
                  v13 = a3[11];
                }
                else
                {
                  sub_1DC4B4B50(0, &qword_1EDB0E768, (void (*)(void))sub_1DC4EA390, (void (*)(void))sub_1DC4EA3D8);
                  v12 = *(_QWORD *)(v20 - 8);
                  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                  {
                    v8 = v20;
                    v13 = a3[12];
                  }
                  else
                  {
                    sub_1DC4B4B50(0, &qword_1EDB0E868, (void (*)(void))sub_1DC4C9630, (void (*)(void))sub_1DC4C9674);
                    v12 = *(_QWORD *)(v21 - 8);
                    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                    {
                      v8 = v21;
                      v13 = a3[13];
                    }
                    else
                    {
                      sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
                      v12 = *(_QWORD *)(v22 - 8);
                      if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                      {
                        v8 = v22;
                        v13 = a3[14];
                      }
                      else
                      {
                        sub_1DC4B4B50(0, &qword_1EDB0E790, (void (*)(void))sub_1DC4C9930, (void (*)(void))sub_1DC4C9974);
                        v8 = v23;
                        v12 = *(_QWORD *)(v23 - 8);
                        v13 = a3[15];
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t storeEnumTagSinglePayload for MediaExposureEvent()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC57B5DC(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  sub_1DC4B6600();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    sub_1DC4B66A4();
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = a4[5];
    }
    else
    {
      sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
      v14 = *(_QWORD *)(v16 - 8);
      if (*(_DWORD *)(v14 + 84) == a3)
      {
        v10 = v16;
        v15 = a4[6];
      }
      else
      {
        sub_1DC4B4B50(0, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
        v14 = *(_QWORD *)(v17 - 8);
        if (*(_DWORD *)(v14 + 84) == a3)
        {
          v10 = v17;
          v15 = a4[7];
        }
        else
        {
          sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
          v14 = *(_QWORD *)(v18 - 8);
          if (*(_DWORD *)(v14 + 84) == a3)
          {
            v10 = v18;
            v15 = a4[8];
          }
          else
          {
            sub_1DC4B4B50(0, &qword_1EDB0E870, (void (*)(void))sub_1DC51701C, (void (*)(void))sub_1DC517060);
            v14 = *(_QWORD *)(v19 - 8);
            if (*(_DWORD *)(v14 + 84) == a3)
            {
              v10 = v19;
              v15 = a4[9];
            }
            else
            {
              sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
              v14 = *(_QWORD *)(v20 - 8);
              if (*(_DWORD *)(v14 + 84) == a3)
              {
                v10 = v20;
                v15 = a4[10];
              }
              else
              {
                sub_1DC4B4B50(0, &qword_1EDB0E7C8, (void (*)(void))sub_1DC4E4AEC, (void (*)(void))sub_1DC4E4B34);
                v14 = *(_QWORD *)(v21 - 8);
                if (*(_DWORD *)(v14 + 84) == a3)
                {
                  v10 = v21;
                  v15 = a4[11];
                }
                else
                {
                  sub_1DC4B4B50(0, &qword_1EDB0E768, (void (*)(void))sub_1DC4EA390, (void (*)(void))sub_1DC4EA3D8);
                  v14 = *(_QWORD *)(v22 - 8);
                  if (*(_DWORD *)(v14 + 84) == a3)
                  {
                    v10 = v22;
                    v15 = a4[12];
                  }
                  else
                  {
                    sub_1DC4B4B50(0, &qword_1EDB0E868, (void (*)(void))sub_1DC4C9630, (void (*)(void))sub_1DC4C9674);
                    v14 = *(_QWORD *)(v23 - 8);
                    if (*(_DWORD *)(v14 + 84) == a3)
                    {
                      v10 = v23;
                      v15 = a4[13];
                    }
                    else
                    {
                      sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
                      v14 = *(_QWORD *)(v24 - 8);
                      if (*(_DWORD *)(v14 + 84) == a3)
                      {
                        v10 = v24;
                        v15 = a4[14];
                      }
                      else
                      {
                        sub_1DC4B4B50(0, &qword_1EDB0E790, (void (*)(void))sub_1DC4C9930, (void (*)(void))sub_1DC4C9974);
                        v10 = v25;
                        v14 = *(_QWORD *)(v25 - 8);
                        v15 = a4[15];
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_1DC57B900()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;

  sub_1DC4B6600();
  if (v0 <= 0x3F)
  {
    sub_1DC4B66A4();
    if (v1 <= 0x3F)
    {
      sub_1DC4B4B50(319, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
      if (v2 <= 0x3F)
      {
        sub_1DC4B4B50(319, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
        if (v3 <= 0x3F)
        {
          sub_1DC4B4B50(319, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
          if (v4 <= 0x3F)
          {
            sub_1DC4B4B50(319, &qword_1EDB0E870, (void (*)(void))sub_1DC51701C, (void (*)(void))sub_1DC517060);
            if (v5 <= 0x3F)
            {
              sub_1DC4B4B50(319, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
              if (v6 <= 0x3F)
              {
                sub_1DC4B4B50(319, &qword_1EDB0E7C8, (void (*)(void))sub_1DC4E4AEC, (void (*)(void))sub_1DC4E4B34);
                if (v7 <= 0x3F)
                {
                  sub_1DC4B4B50(319, &qword_1EDB0E768, (void (*)(void))sub_1DC4EA390, (void (*)(void))sub_1DC4EA3D8);
                  if (v8 <= 0x3F)
                  {
                    sub_1DC4B4B50(319, &qword_1EDB0E868, (void (*)(void))sub_1DC4C9630, (void (*)(void))sub_1DC4C9674);
                    if (v9 <= 0x3F)
                    {
                      sub_1DC4B4B50(319, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
                      if (v10 <= 0x3F)
                      {
                        sub_1DC4B4B50(319, &qword_1EDB0E790, (void (*)(void))sub_1DC4C9930, (void (*)(void))sub_1DC4C9974);
                        if (v11 <= 0x3F)
                          swift_initStructMetadata();
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

_QWORD *initializeBufferWithCopyOfBuffer for MediaExposureEvent.Model(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  char *v37;
  _OWORD *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  _QWORD *v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v22 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v22 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1DC62ABA8();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_1DC62ABC0();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = a3[6];
    v13 = a3[7];
    v14 = (char *)a1 + v12;
    v15 = (char *)a2 + v12;
    v16 = *((_QWORD *)v15 + 1);
    *(_QWORD *)v14 = *(_QWORD *)v15;
    *((_QWORD *)v14 + 1) = v16;
    v14[32] = v15[32];
    *((_QWORD *)v14 + 5) = *((_QWORD *)v15 + 5);
    v14[48] = v15[48];
    *((_QWORD *)v14 + 7) = *((_QWORD *)v15 + 7);
    v17 = *((_QWORD *)v15 + 3);
    *((_QWORD *)v14 + 2) = *((_QWORD *)v15 + 2);
    *((_QWORD *)v14 + 3) = v17;
    *((_DWORD *)v14 + 16) = *((_DWORD *)v15 + 16);
    v18 = (char *)a1 + v13;
    v19 = (char *)a2 + v13;
    v20 = *(_QWORD *)((char *)a2 + v13 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v20)
    {
      *v18 = *v19;
      *((_QWORD *)v18 + 1) = *((_QWORD *)v19 + 1);
      *((_QWORD *)v18 + 2) = v20;
      *((_QWORD *)v18 + 3) = *((_QWORD *)v19 + 3);
      v21 = *((_QWORD *)v19 + 5);
      *((_QWORD *)v18 + 4) = *((_QWORD *)v19 + 4);
      *((_QWORD *)v18 + 5) = v21;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v23 = *((_OWORD *)v19 + 1);
      *(_OWORD *)v18 = *(_OWORD *)v19;
      *((_OWORD *)v18 + 1) = v23;
      *((_OWORD *)v18 + 2) = *((_OWORD *)v19 + 2);
    }
    v24 = a3[8];
    v25 = a3[9];
    v26 = (char *)a1 + v24;
    v27 = (char *)a2 + v24;
    *v26 = *v27;
    v28 = *((_QWORD *)v27 + 2);
    *((_QWORD *)v26 + 1) = *((_QWORD *)v27 + 1);
    *((_QWORD *)v26 + 2) = v28;
    v29 = (char *)a1 + v25;
    v30 = (char *)a2 + v25;
    *v29 = *v30;
    v31 = *((_QWORD *)v30 + 2);
    *((_QWORD *)v29 + 1) = *((_QWORD *)v30 + 1);
    *((_QWORD *)v29 + 2) = v31;
    *((_DWORD *)v29 + 6) = *((_DWORD *)v30 + 6);
    v29[28] = v30[28];
    v32 = a3[10];
    v33 = a3[11];
    v34 = (char *)a1 + v32;
    v35 = (char *)a2 + v32;
    v34[16] = v35[16];
    v36 = *((_QWORD *)v35 + 1);
    *(_QWORD *)v34 = *(_QWORD *)v35;
    *((_QWORD *)v34 + 1) = v36;
    v34[17] = v35[17];
    v37 = (char *)a1 + v33;
    v38 = (_OWORD *)((char *)a2 + v33);
    v39 = *(_QWORD *)((char *)a2 + v33 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v39 == 1)
    {
      *(_OWORD *)v37 = *v38;
    }
    else
    {
      *(_QWORD *)v37 = *(_QWORD *)v38;
      *((_QWORD *)v37 + 1) = v39;
      swift_bridgeObjectRetain();
    }
    v40 = a3[12];
    v41 = a3[13];
    v42 = (char *)a1 + v40;
    v43 = (char *)a2 + v40;
    *v42 = *v43;
    v44 = *((_QWORD *)v43 + 2);
    *((_QWORD *)v42 + 1) = *((_QWORD *)v43 + 1);
    *((_QWORD *)v42 + 2) = v44;
    *((_DWORD *)v42 + 6) = *((_DWORD *)v43 + 6);
    v45 = (_QWORD *)((char *)a1 + v41);
    v46 = (_QWORD *)((char *)a2 + v41);
    v47 = v46[1];
    *v45 = *v46;
    v45[1] = v47;
    v48 = a3[14];
    v49 = a3[15];
    v50 = (char *)a1 + v48;
    v51 = (char *)a2 + v48;
    v52 = *((_QWORD *)v51 + 1);
    *(_QWORD *)v50 = *(_QWORD *)v51;
    *((_QWORD *)v50 + 1) = v52;
    v53 = *((_QWORD *)v51 + 3);
    *((_QWORD *)v50 + 2) = *((_QWORD *)v51 + 2);
    *((_QWORD *)v50 + 3) = v53;
    v50[32] = v51[32];
    v50[33] = v51[33];
    *((_BYTE *)a1 + v49) = *((_BYTE *)a2 + v49);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for MediaExposureEvent.Model(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + a2[5];
  v6 = sub_1DC62ABC0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + a2[7] + 16))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + a2[11] + 8) != 1)
    swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for MediaExposureEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _OWORD *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;

  v6 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1DC62ABC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = a3[6];
  v12 = a3[7];
  v13 = a1 + v11;
  v14 = a2 + v11;
  v15 = *(_QWORD *)(v14 + 8);
  *(_QWORD *)v13 = *(_QWORD *)v14;
  *(_QWORD *)(v13 + 8) = v15;
  *(_BYTE *)(v13 + 32) = *(_BYTE *)(v14 + 32);
  *(_QWORD *)(v13 + 40) = *(_QWORD *)(v14 + 40);
  *(_BYTE *)(v13 + 48) = *(_BYTE *)(v14 + 48);
  *(_QWORD *)(v13 + 56) = *(_QWORD *)(v14 + 56);
  v16 = *(_QWORD *)(v14 + 24);
  *(_QWORD *)(v13 + 16) = *(_QWORD *)(v14 + 16);
  *(_QWORD *)(v13 + 24) = v16;
  *(_DWORD *)(v13 + 64) = *(_DWORD *)(v14 + 64);
  v17 = a1 + v12;
  v18 = a2 + v12;
  v19 = *(_QWORD *)(a2 + v12 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v19)
  {
    *(_BYTE *)v17 = *(_BYTE *)v18;
    *(_QWORD *)(v17 + 8) = *(_QWORD *)(v18 + 8);
    *(_QWORD *)(v17 + 16) = v19;
    *(_QWORD *)(v17 + 24) = *(_QWORD *)(v18 + 24);
    v20 = *(_QWORD *)(v18 + 40);
    *(_QWORD *)(v17 + 32) = *(_QWORD *)(v18 + 32);
    *(_QWORD *)(v17 + 40) = v20;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v21 = *(_OWORD *)(v18 + 16);
    *(_OWORD *)v17 = *(_OWORD *)v18;
    *(_OWORD *)(v17 + 16) = v21;
    *(_OWORD *)(v17 + 32) = *(_OWORD *)(v18 + 32);
  }
  v22 = a3[8];
  v23 = a3[9];
  v24 = a1 + v22;
  v25 = a2 + v22;
  *(_BYTE *)v24 = *(_BYTE *)v25;
  v26 = *(_QWORD *)(v25 + 16);
  *(_QWORD *)(v24 + 8) = *(_QWORD *)(v25 + 8);
  *(_QWORD *)(v24 + 16) = v26;
  v27 = a1 + v23;
  v28 = a2 + v23;
  *(_BYTE *)v27 = *(_BYTE *)v28;
  v29 = *(_QWORD *)(v28 + 16);
  *(_QWORD *)(v27 + 8) = *(_QWORD *)(v28 + 8);
  *(_QWORD *)(v27 + 16) = v29;
  *(_DWORD *)(v27 + 24) = *(_DWORD *)(v28 + 24);
  *(_BYTE *)(v27 + 28) = *(_BYTE *)(v28 + 28);
  v30 = a3[10];
  v31 = a3[11];
  v32 = a1 + v30;
  v33 = a2 + v30;
  *(_BYTE *)(v32 + 16) = *(_BYTE *)(v33 + 16);
  v34 = *(_QWORD *)(v33 + 8);
  *(_QWORD *)v32 = *(_QWORD *)v33;
  *(_QWORD *)(v32 + 8) = v34;
  *(_BYTE *)(v32 + 17) = *(_BYTE *)(v33 + 17);
  v35 = a1 + v31;
  v36 = (_OWORD *)(a2 + v31);
  v37 = *(_QWORD *)(a2 + v31 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v37 == 1)
  {
    *(_OWORD *)v35 = *v36;
  }
  else
  {
    *(_QWORD *)v35 = *(_QWORD *)v36;
    *(_QWORD *)(v35 + 8) = v37;
    swift_bridgeObjectRetain();
  }
  v38 = a3[12];
  v39 = a3[13];
  v40 = a1 + v38;
  v41 = a2 + v38;
  *(_BYTE *)v40 = *(_BYTE *)v41;
  v42 = *(_QWORD *)(v41 + 16);
  *(_QWORD *)(v40 + 8) = *(_QWORD *)(v41 + 8);
  *(_QWORD *)(v40 + 16) = v42;
  *(_DWORD *)(v40 + 24) = *(_DWORD *)(v41 + 24);
  v43 = (_QWORD *)(a1 + v39);
  v44 = (_QWORD *)(a2 + v39);
  v45 = v44[1];
  *v43 = *v44;
  v43[1] = v45;
  v46 = a3[14];
  v47 = a3[15];
  v48 = a1 + v46;
  v49 = a2 + v46;
  v50 = *(_QWORD *)(v49 + 8);
  *(_QWORD *)v48 = *(_QWORD *)v49;
  *(_QWORD *)(v48 + 8) = v50;
  v51 = *(_QWORD *)(v49 + 24);
  *(_QWORD *)(v48 + 16) = *(_QWORD *)(v49 + 16);
  *(_QWORD *)(v48 + 24) = v51;
  *(_BYTE *)(v48 + 32) = *(_BYTE *)(v49 + 32);
  *(_BYTE *)(v48 + 33) = *(_BYTE *)(v49 + 33);
  *(_BYTE *)(a1 + v47) = *(_BYTE *)(a2 + v47);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for MediaExposureEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 *v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;

  v6 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1DC62ABC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  *(_QWORD *)v12 = *(_QWORD *)(a2 + v11);
  *(_QWORD *)(v12 + 8) = *(_QWORD *)(a2 + v11 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v12 + 16) = *(_QWORD *)(v13 + 16);
  *(_QWORD *)(v12 + 24) = *(_QWORD *)(v13 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v12 + 32) = *(_BYTE *)(v13 + 32);
  v14 = *(_QWORD *)(v13 + 40);
  *(_BYTE *)(v12 + 48) = *(_BYTE *)(v13 + 48);
  *(_QWORD *)(v12 + 40) = v14;
  *(_QWORD *)(v12 + 56) = *(_QWORD *)(v13 + 56);
  *(_BYTE *)(v12 + 64) = *(_BYTE *)(v13 + 64);
  *(_BYTE *)(v12 + 65) = *(_BYTE *)(v13 + 65);
  *(_BYTE *)(v12 + 66) = *(_BYTE *)(v13 + 66);
  *(_BYTE *)(v12 + 67) = *(_BYTE *)(v13 + 67);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = (__int128 *)(a2 + v15);
  v18 = *(_QWORD *)(a1 + v15 + 16);
  v19 = *(_QWORD *)(a2 + v15 + 16);
  if (v18)
  {
    if (v19)
    {
      *(_BYTE *)v16 = *(_BYTE *)v17;
      *(_QWORD *)(v16 + 8) = *((_QWORD *)v17 + 1);
      *(_QWORD *)(v16 + 16) = *((_QWORD *)v17 + 2);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_DWORD *)(v16 + 24) = *((_DWORD *)v17 + 6);
      *(_DWORD *)(v16 + 28) = *((_DWORD *)v17 + 7);
      *(_QWORD *)(v16 + 32) = *((_QWORD *)v17 + 4);
      *(_QWORD *)(v16 + 40) = *((_QWORD *)v17 + 5);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1DC4CDAF4(v16);
      v21 = v17[1];
      v20 = v17[2];
      *(_OWORD *)v16 = *v17;
      *(_OWORD *)(v16 + 16) = v21;
      *(_OWORD *)(v16 + 32) = v20;
    }
  }
  else if (v19)
  {
    *(_BYTE *)v16 = *(_BYTE *)v17;
    *(_QWORD *)(v16 + 8) = *((_QWORD *)v17 + 1);
    *(_QWORD *)(v16 + 16) = *((_QWORD *)v17 + 2);
    *(_DWORD *)(v16 + 24) = *((_DWORD *)v17 + 6);
    *(_DWORD *)(v16 + 28) = *((_DWORD *)v17 + 7);
    *(_QWORD *)(v16 + 32) = *((_QWORD *)v17 + 4);
    *(_QWORD *)(v16 + 40) = *((_QWORD *)v17 + 5);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v22 = *v17;
    v23 = v17[2];
    *(_OWORD *)(v16 + 16) = v17[1];
    *(_OWORD *)(v16 + 32) = v23;
    *(_OWORD *)v16 = v22;
  }
  v24 = a3[8];
  v25 = a1 + v24;
  v26 = a2 + v24;
  *(_BYTE *)v25 = *(_BYTE *)v26;
  *(_QWORD *)(v25 + 8) = *(_QWORD *)(v26 + 8);
  *(_QWORD *)(v25 + 16) = *(_QWORD *)(v26 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v27 = a3[9];
  v28 = a1 + v27;
  v29 = a2 + v27;
  *(_BYTE *)v28 = *(_BYTE *)(a2 + v27);
  *(_QWORD *)(v28 + 8) = *(_QWORD *)(a2 + v27 + 8);
  *(_QWORD *)(v28 + 16) = *(_QWORD *)(a2 + v27 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v30 = *(_DWORD *)(v29 + 24);
  *(_BYTE *)(v28 + 28) = *(_BYTE *)(v29 + 28);
  *(_DWORD *)(v28 + 24) = v30;
  v31 = a3[10];
  v32 = a1 + v31;
  v33 = a2 + v31;
  *(_QWORD *)v32 = *(_QWORD *)(a2 + v31);
  *(_QWORD *)(v32 + 8) = *(_QWORD *)(a2 + v31 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v32 + 16) = *(_BYTE *)(v33 + 16);
  *(_BYTE *)(v32 + 17) = *(_BYTE *)(v33 + 17);
  v34 = a3[11];
  v35 = (_QWORD *)(a1 + v34);
  v36 = (_QWORD *)(a2 + v34);
  v37 = *(_QWORD *)(a1 + v34 + 8);
  v38 = *(_QWORD *)(a2 + v34 + 8);
  if (v37 != 1)
  {
    if (v38 != 1)
    {
      *v35 = *v36;
      v35[1] = v36[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      goto LABEL_15;
    }
    sub_1DC51BD60((uint64_t)v35);
    goto LABEL_13;
  }
  if (v38 == 1)
  {
LABEL_13:
    *(_OWORD *)v35 = *(_OWORD *)v36;
    goto LABEL_15;
  }
  *v35 = *v36;
  v35[1] = v36[1];
  swift_bridgeObjectRetain();
LABEL_15:
  v39 = a3[12];
  v40 = a1 + v39;
  v41 = a2 + v39;
  *(_BYTE *)v40 = *(_BYTE *)(a2 + v39);
  *(_QWORD *)(v40 + 8) = *(_QWORD *)(a2 + v39 + 8);
  *(_QWORD *)(v40 + 16) = *(_QWORD *)(a2 + v39 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(v40 + 24) = *(_DWORD *)(v41 + 24);
  v42 = a3[13];
  v43 = (_QWORD *)(a1 + v42);
  v44 = (_QWORD *)(a2 + v42);
  *v43 = *v44;
  v43[1] = v44[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v45 = a3[14];
  v46 = a1 + v45;
  v47 = a2 + v45;
  *(_QWORD *)v46 = *(_QWORD *)(a2 + v45);
  *(_QWORD *)(v46 + 8) = *(_QWORD *)(a2 + v45 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v46 + 16) = *(_QWORD *)(v47 + 16);
  *(_QWORD *)(v46 + 24) = *(_QWORD *)(v47 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v46 + 32) = *(_BYTE *)(v47 + 32);
  *(_BYTE *)(v46 + 33) = *(_BYTE *)(v47 + 33);
  *(_BYTE *)(a1 + a3[15]) = *(_BYTE *)(a2 + a3[15]);
  return a1;
}

uint64_t initializeWithTake for MediaExposureEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  __int128 v16;
  _OWORD *v17;
  __int128 *v18;
  __int128 v19;
  __int128 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _OWORD *v25;
  __int128 *v26;
  __int128 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  __int128 v32;
  uint64_t v33;
  uint64_t v34;
  _OWORD *v35;
  _OWORD *v36;
  __int128 v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  __int128 v42;

  v6 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1DC62ABC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[6];
  v12 = a3[7];
  v13 = a1 + v11;
  v14 = a2 + v11;
  *(_DWORD *)(v13 + 64) = *(_DWORD *)(v14 + 64);
  v15 = *(_OWORD *)(v14 + 48);
  *(_OWORD *)(v13 + 32) = *(_OWORD *)(v14 + 32);
  *(_OWORD *)(v13 + 48) = v15;
  v16 = *(_OWORD *)(v14 + 16);
  *(_OWORD *)v13 = *(_OWORD *)v14;
  *(_OWORD *)(v13 + 16) = v16;
  v17 = (_OWORD *)(a1 + v12);
  v18 = (__int128 *)(a2 + v12);
  v19 = v18[2];
  v20 = *v18;
  v17[1] = v18[1];
  v17[2] = v19;
  *v17 = v20;
  v21 = a3[8];
  v22 = a3[9];
  v23 = a1 + v21;
  v24 = a2 + v21;
  *(_QWORD *)(v23 + 16) = *(_QWORD *)(v24 + 16);
  *(_OWORD *)v23 = *(_OWORD *)v24;
  v25 = (_OWORD *)(a1 + v22);
  v26 = (__int128 *)(a2 + v22);
  v27 = *v26;
  *(_OWORD *)((char *)v25 + 13) = *(__int128 *)((char *)v26 + 13);
  *v25 = v27;
  v28 = a3[10];
  v29 = a3[11];
  v30 = a1 + v28;
  v31 = a2 + v28;
  *(_OWORD *)v30 = *(_OWORD *)v31;
  v32 = *(_OWORD *)(a2 + v29);
  *(_WORD *)(v30 + 16) = *(_WORD *)(v31 + 16);
  *(_OWORD *)(a1 + v29) = v32;
  v33 = a3[12];
  v34 = a3[13];
  v35 = (_OWORD *)(a1 + v33);
  v36 = (_OWORD *)(a2 + v33);
  *v35 = *v36;
  v37 = *(_OWORD *)(a2 + v34);
  *(_OWORD *)((char *)v35 + 12) = *(_OWORD *)((char *)v36 + 12);
  *(_OWORD *)(a1 + v34) = v37;
  v38 = a3[14];
  v39 = a3[15];
  v40 = a1 + v38;
  v41 = a2 + v38;
  v42 = *(_OWORD *)(v41 + 16);
  *(_OWORD *)v40 = *(_OWORD *)v41;
  *(_OWORD *)(v40 + 16) = v42;
  *(_WORD *)(v40 + 32) = *(_WORD *)(v41 + 32);
  *(_BYTE *)(a1 + v39) = *(_BYTE *)(a2 + v39);
  return a1;
}

uint64_t assignWithTake for MediaExposureEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;

  v6 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1DC62ABC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  v14 = *(_QWORD *)(a2 + v11 + 8);
  *(_QWORD *)v12 = *(_QWORD *)(a2 + v11);
  *(_QWORD *)(v12 + 8) = v14;
  swift_bridgeObjectRelease();
  v15 = *(_QWORD *)(v13 + 24);
  *(_QWORD *)(v12 + 16) = *(_QWORD *)(v13 + 16);
  *(_QWORD *)(v12 + 24) = v15;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v12 + 32) = *(_BYTE *)(v13 + 32);
  *(_QWORD *)(v12 + 40) = *(_QWORD *)(v13 + 40);
  *(_BYTE *)(v12 + 48) = *(_BYTE *)(v13 + 48);
  *(_QWORD *)(v12 + 56) = *(_QWORD *)(v13 + 56);
  *(_BYTE *)(v12 + 64) = *(_BYTE *)(v13 + 64);
  *(_BYTE *)(v12 + 65) = *(_BYTE *)(v13 + 65);
  *(_BYTE *)(v12 + 66) = *(_BYTE *)(v13 + 66);
  *(_BYTE *)(v12 + 67) = *(_BYTE *)(v13 + 67);
  v16 = a3[7];
  v17 = a1 + v16;
  v18 = a2 + v16;
  if (*(_QWORD *)(a1 + v16 + 16))
  {
    v19 = *(_QWORD *)(v18 + 16);
    if (v19)
    {
      *(_BYTE *)v17 = *(_BYTE *)v18;
      *(_QWORD *)(v17 + 8) = *(_QWORD *)(v18 + 8);
      *(_QWORD *)(v17 + 16) = v19;
      swift_bridgeObjectRelease();
      *(_QWORD *)(v17 + 24) = *(_QWORD *)(v18 + 24);
      v20 = *(_QWORD *)(v18 + 40);
      *(_QWORD *)(v17 + 32) = *(_QWORD *)(v18 + 32);
      *(_QWORD *)(v17 + 40) = v20;
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    sub_1DC4CDAF4(v17);
  }
  v21 = *(_OWORD *)(v18 + 16);
  *(_OWORD *)v17 = *(_OWORD *)v18;
  *(_OWORD *)(v17 + 16) = v21;
  *(_OWORD *)(v17 + 32) = *(_OWORD *)(v18 + 32);
LABEL_6:
  v22 = a3[8];
  v23 = a1 + v22;
  v24 = a2 + v22;
  *(_BYTE *)v23 = *(_BYTE *)v24;
  v26 = *(_QWORD *)(v24 + 8);
  v25 = *(_QWORD *)(v24 + 16);
  *(_QWORD *)(v23 + 8) = v26;
  *(_QWORD *)(v23 + 16) = v25;
  swift_bridgeObjectRelease();
  v27 = a3[9];
  v28 = a1 + v27;
  v29 = a2 + v27;
  *(_BYTE *)v28 = *(_BYTE *)(a2 + v27);
  v30 = *(_QWORD *)(a2 + v27 + 16);
  *(_QWORD *)(v28 + 8) = *(_QWORD *)(a2 + v27 + 8);
  *(_QWORD *)(v28 + 16) = v30;
  swift_bridgeObjectRelease();
  *(_DWORD *)(v28 + 24) = *(_DWORD *)(v29 + 24);
  *(_BYTE *)(v28 + 28) = *(_BYTE *)(v29 + 28);
  v31 = a3[10];
  v32 = a1 + v31;
  v33 = a2 + v31;
  v34 = *(_QWORD *)(a2 + v31 + 8);
  *(_QWORD *)v32 = *(_QWORD *)(a2 + v31);
  *(_QWORD *)(v32 + 8) = v34;
  swift_bridgeObjectRelease();
  *(_WORD *)(v32 + 16) = *(_WORD *)(v33 + 16);
  v35 = a3[11];
  v36 = (_QWORD *)(a1 + v35);
  v37 = (_QWORD *)(a2 + v35);
  if (*(_QWORD *)(a1 + v35 + 8) != 1)
  {
    v38 = v37[1];
    if (v38 != 1)
    {
      *v36 = *v37;
      v36[1] = v38;
      swift_bridgeObjectRelease();
      goto LABEL_11;
    }
    sub_1DC51BD60((uint64_t)v36);
  }
  *(_OWORD *)v36 = *(_OWORD *)v37;
LABEL_11:
  v39 = a3[12];
  v40 = a1 + v39;
  v41 = a2 + v39;
  *(_BYTE *)v40 = *(_BYTE *)(a2 + v39);
  v42 = *(_QWORD *)(a2 + v39 + 16);
  *(_QWORD *)(v40 + 8) = *(_QWORD *)(a2 + v39 + 8);
  *(_QWORD *)(v40 + 16) = v42;
  swift_bridgeObjectRelease();
  *(_DWORD *)(v40 + 24) = *(_DWORD *)(v41 + 24);
  v43 = a3[13];
  v44 = (_QWORD *)(a1 + v43);
  v45 = (uint64_t *)(a2 + v43);
  v47 = *v45;
  v46 = v45[1];
  *v44 = v47;
  v44[1] = v46;
  swift_bridgeObjectRelease();
  v48 = a3[14];
  v49 = a1 + v48;
  v50 = a2 + v48;
  v51 = *(_QWORD *)(a2 + v48 + 8);
  *(_QWORD *)v49 = *(_QWORD *)(a2 + v48);
  *(_QWORD *)(v49 + 8) = v51;
  swift_bridgeObjectRelease();
  v52 = *(_QWORD *)(v50 + 24);
  *(_QWORD *)(v49 + 16) = *(_QWORD *)(v50 + 16);
  *(_QWORD *)(v49 + 24) = v52;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v49 + 32) = *(_BYTE *)(v50 + 32);
  *(_BYTE *)(v49 + 33) = *(_BYTE *)(v50 + 33);
  *(_BYTE *)(a1 + a3[15]) = *(_BYTE *)(a2 + a3[15]);
  return a1;
}

uint64_t getEnumTagSinglePayload for MediaExposureEvent.Model()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC57C9E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v14;

  v6 = sub_1DC62ABA8();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  v11 = sub_1DC62ABC0();
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  v14 = *(_QWORD *)(a1 + *(int *)(a3 + 24) + 8);
  if (v14 >= 0xFFFFFFFF)
    LODWORD(v14) = -1;
  return (v14 + 1);
}

uint64_t storeEnumTagSinglePayload for MediaExposureEvent.Model()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC57CA9C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t result;
  uint64_t v14;

  v8 = sub_1DC62ABA8();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
    return v11(v12, a2, a2, v10);
  }
  result = sub_1DC62ABC0();
  v14 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = result;
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    return v11(v12, a2, a2, v10);
  }
  *(_QWORD *)(a1 + *(int *)(a4 + 24) + 8) = (a2 - 1);
  return result;
}

uint64_t sub_1DC57CB44()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_1DC62ABA8();
  if (v1 <= 0x3F)
  {
    result = sub_1DC62ABC0();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for MediaExposureEvent.Model.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 11 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 11) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF5)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF4)
    return ((uint64_t (*)(void))((char *)&loc_1DC57CC78 + 4 * byte_1DC63BED1[v4]))();
  *a1 = a2 + 11;
  return ((uint64_t (*)(void))((char *)sub_1DC57CCAC + 4 * byte_1DC63BECC[v4]))();
}

uint64_t sub_1DC57CCAC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC57CCB4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DC57CCBCLL);
  return result;
}

uint64_t sub_1DC57CCC8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DC57CCD0);
  *(_BYTE *)result = a2 + 11;
  return result;
}

uint64_t sub_1DC57CCD4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC57CCDC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MediaExposureEvent.Model.CodingKeys()
{
  return &type metadata for MediaExposureEvent.Model.CodingKeys;
}

unint64_t sub_1DC57CCFC()
{
  unint64_t result;

  result = qword_1F036D310;
  if (!qword_1F036D310)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC63C1CC, &type metadata for MediaExposureEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036D310);
  }
  return result;
}

unint64_t sub_1DC57CD44()
{
  unint64_t result;

  result = qword_1F036D318;
  if (!qword_1F036D318)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC63C13C, &type metadata for MediaExposureEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036D318);
  }
  return result;
}

unint64_t sub_1DC57CD8C()
{
  unint64_t result;

  result = qword_1F036D320;
  if (!qword_1F036D320)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC63C164, &type metadata for MediaExposureEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036D320);
  }
  return result;
}

uint64_t sub_1DC57CDD0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x746144746E657665 && a2 == 0xE900000000000061;
  if (v2 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x74614464656D6974 && a2 == 0xE900000000000061 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x697472417377656ELL && a2 == 0xEF61746144656C63 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x74614470756F7267 && a2 == 0xE900000000000061 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6174614464656566 && a2 == 0xE800000000000000 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x746144616964656DLL && a2 == 0xE900000000000061 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x6174614477656976 && a2 == 0xE800000000000000 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001DC64C770 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x447972656C6C6167 && a2 == 0xEB00000000617461 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x7461446575737369 && a2 == 0xE900000000000061 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0x446C656E6E616863 && a2 == 0xEB00000000617461 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001DC64BFB0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else
  {
    v6 = sub_1DC62B520();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 11;
    else
      return 12;
  }
}

StocksAnalytics::ViewAction_optional __swiftcall ViewAction.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  StocksAnalytics::ViewAction_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1DC62B3DC();
  result.value = swift_bridgeObjectRelease();
  v5 = 9;
  if (v3 < 9)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t ViewAction.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1DC57D390 + 4 * byte_1DC63C244[*v0]))(0x6E776F6E6B6E75, 0xE700000000000000);
}

uint64_t sub_1DC57D390()
{
  return 0x636E75614C707061;
}

uint64_t sub_1DC57D3AC()
{
  return 0x6570697773;
}

uint64_t sub_1DC57D3C0()
{
  return 0x656E696C64616568;
}

uint64_t sub_1DC57D3E0()
{
  return 0x6B6E696C70656564;
}

uint64_t sub_1DC57D3F8()
{
  return 0x6E6164726F666661;
}

unint64_t sub_1DC57D41C()
{
  return 0xD000000000000011;
}

void sub_1DC57D468(char *a1)
{
  sub_1DC5464CC(*a1);
}

unint64_t sub_1DC57D478()
{
  unint64_t result;

  result = qword_1F036D328;
  if (!qword_1F036D328)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for ViewAction, &type metadata for ViewAction);
    atomic_store(result, (unint64_t *)&qword_1F036D328);
  }
  return result;
}

uint64_t sub_1DC57D4BC()
{
  char *v0;
  char v1;
  _BYTE v3[72];

  v1 = *v0;
  sub_1DC62B5B0();
  sub_1DC602C10((uint64_t)v3, v1);
  return sub_1DC62B5C8();
}

void sub_1DC57D500(uint64_t a1)
{
  char *v1;

  sub_1DC602C10(a1, *v1);
}

uint64_t sub_1DC57D508()
{
  char *v0;
  char v1;
  _BYTE v3[72];

  v1 = *v0;
  sub_1DC62B5B0();
  sub_1DC602C10((uint64_t)v3, v1);
  return sub_1DC62B5C8();
}

StocksAnalytics::ViewAction_optional sub_1DC57D548(Swift::String *a1)
{
  return ViewAction.init(rawValue:)(*a1);
}

uint64_t sub_1DC57D554@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = ViewAction.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1DC57D578()
{
  sub_1DC57D620();
  return sub_1DC62B13C();
}

uint64_t sub_1DC57D5D4()
{
  sub_1DC57D620();
  return sub_1DC62B130();
}

unint64_t sub_1DC57D620()
{
  unint64_t result;

  result = qword_1EDB0ED30;
  if (!qword_1EDB0ED30)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for ViewAction, &type metadata for ViewAction);
    atomic_store(result, (unint64_t *)&qword_1EDB0ED30);
  }
  return result;
}

void __swiftcall DeviceData.init(deviceModel:devicePlatform:osInstallVariant:osVersion:osBundleVersion:)(StocksAnalytics::DeviceData *__return_ptr retstr, Swift::String deviceModel, Swift::String devicePlatform, StocksAnalytics::OsInstallVariant osInstallVariant, Swift::String osVersion, Swift::String osBundleVersion)
{
  StocksAnalytics::OsInstallVariant v6;

  v6 = *(_BYTE *)osInstallVariant;
  retstr->deviceModel = deviceModel;
  retstr->devicePlatform = devicePlatform;
  retstr->osInstallVariant = v6;
  retstr->osVersion = osVersion;
  retstr->osBundleVersion = osBundleVersion;
}

uint64_t DeviceData.deviceModel.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t DeviceData.deviceModel.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*DeviceData.deviceModel.modify())()
{
  return nullsub_1;
}

uint64_t DeviceData.devicePlatform.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t DeviceData.devicePlatform.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return result;
}

uint64_t (*DeviceData.devicePlatform.modify())()
{
  return nullsub_1;
}

void DeviceData.osInstallVariant.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 32);
}

_BYTE *DeviceData.osInstallVariant.setter(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 32) = *result;
  return result;
}

uint64_t (*DeviceData.osInstallVariant.modify())()
{
  return nullsub_1;
}

uint64_t DeviceData.osVersion.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 40);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t DeviceData.osVersion.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 40) = a1;
  *(_QWORD *)(v2 + 48) = a2;
  return result;
}

uint64_t (*DeviceData.osVersion.modify())()
{
  return nullsub_1;
}

uint64_t DeviceData.osBundleVersion.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 56);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t DeviceData.osBundleVersion.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 56) = a1;
  *(_QWORD *)(v2 + 64) = a2;
  return result;
}

uint64_t (*DeviceData.osBundleVersion.modify())()
{
  return nullsub_1;
}

uint64_t sub_1DC57D86C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1DC57DEB8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DC57D890()
{
  sub_1DC4B98C4();
  return sub_1DC62B604();
}

uint64_t sub_1DC57D8B8()
{
  sub_1DC4B98C4();
  return sub_1DC62B610();
}

uint64_t DeviceData.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  char v34;
  char v35;
  unsigned __int8 v36;
  char v37;
  char v38;

  sub_1DC4B9824(0, &qword_1EDB11908, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v25 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC4B98C4();
  sub_1DC62B5E0();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v38 = 0;
  v10 = sub_1DC62B424();
  v12 = v11;
  v31 = v10;
  v37 = 1;
  swift_bridgeObjectRetain();
  v13 = sub_1DC62B424();
  v32 = v14;
  v29 = v13;
  v35 = 2;
  sub_1DC57DC40();
  swift_bridgeObjectRetain();
  v30 = 0;
  sub_1DC62B454();
  v15 = v36;
  v34 = 3;
  v26 = sub_1DC62B424();
  v27 = v15;
  v33 = 4;
  v28 = v17;
  swift_bridgeObjectRetain();
  v18 = sub_1DC62B424();
  v20 = v19;
  v21 = *(void (**)(char *, uint64_t))(v7 + 8);
  v22 = v18;
  v21(v9, v6);
  swift_bridgeObjectRetain();
  v23 = v32;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_QWORD *)a2 = v31;
  *(_QWORD *)(a2 + 8) = v12;
  v24 = v28;
  *(_QWORD *)(a2 + 16) = v29;
  *(_QWORD *)(a2 + 24) = v23;
  *(_BYTE *)(a2 + 32) = v27;
  *(_QWORD *)(a2 + 40) = v26;
  *(_QWORD *)(a2 + 48) = v24;
  *(_QWORD *)(a2 + 56) = v22;
  *(_QWORD *)(a2 + 64) = v20;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

unint64_t sub_1DC57DC40()
{
  unint64_t result;

  result = qword_1EDB0F758;
  if (!qword_1EDB0F758)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for OsInstallVariant, &type metadata for OsInstallVariant);
    atomic_store(result, (unint64_t *)&qword_1EDB0F758);
  }
  return result;
}

uint64_t sub_1DC57DC84@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return DeviceData.init(from:)(a1, a2);
}

uint64_t assignWithCopy for DeviceData(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for DeviceData(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v6 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v7;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for AdData(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 72))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AdData(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 72) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 72) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for DeviceData()
{
  return &type metadata for DeviceData;
}

ValueMetadata *type metadata accessor for DeviceData.CodingKeys()
{
  return &type metadata for DeviceData.CodingKeys;
}

unint64_t sub_1DC57DE74()
{
  unint64_t result;

  result = qword_1F036D330;
  if (!qword_1F036D330)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC63C4D8, &type metadata for DeviceData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036D330);
  }
  return result;
}

uint64_t sub_1DC57DEB8(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6F4D656369766564 && a2 == 0xEB000000006C6564;
  if (v2 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6C50656369766564 && a2 == 0xEE006D726F667461 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001DC64D050 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6F6973726556736FLL && a2 == 0xE90000000000006ELL || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x656C646E7542736FLL && a2 == 0xEF6E6F6973726556)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    v6 = sub_1DC62B520();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 4;
    else
      return 5;
  }
}

uint64_t sub_1DC57E138(uint64_t a1)
{
  return sub_1DC4BE784(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], qword_1EDB11048, MEMORY[0x1E0CF8078]);
}

uint64_t static NewsArticleViewResumeEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C2FE8(&qword_1EDB11060, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1EDB11048, a1);
}

uint64_t sub_1DC57E178(uint64_t a1)
{
  return sub_1DC4BE784(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], qword_1EDB11068, MEMORY[0x1E0CF8380]);
}

uint64_t static NewsArticleViewResumeEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C2FE8(&qword_1EDB11080, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1EDB11068, a1);
}

uint64_t NewsArticleViewResumeEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C37DC((uint64_t (*)(_QWORD))sub_1DC4B6600, a1);
}

uint64_t NewsArticleViewResumeEvent.eventData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  sub_1DC4B6600();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*NewsArticleViewResumeEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t NewsArticleViewResumeEvent.viewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for NewsArticleViewResumeEvent(0) + 20);
  sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t type metadata accessor for NewsArticleViewResumeEvent(uint64_t a1)
{
  return sub_1DC4B385C(a1, qword_1EDB0E380);
}

uint64_t NewsArticleViewResumeEvent.viewData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for NewsArticleViewResumeEvent(0) + 20);
  sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*NewsArticleViewResumeEvent.viewData.modify())()
{
  type metadata accessor for NewsArticleViewResumeEvent(0);
  return nullsub_1;
}

uint64_t NewsArticleViewResumeEvent.newsArticleData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for NewsArticleViewResumeEvent(0) + 24);
  sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t NewsArticleViewResumeEvent.newsArticleData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for NewsArticleViewResumeEvent(0) + 24);
  sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*NewsArticleViewResumeEvent.newsArticleData.modify())()
{
  type metadata accessor for NewsArticleViewResumeEvent(0);
  return nullsub_1;
}

uint64_t NewsArticleViewResumeEvent.orientationData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for NewsArticleViewResumeEvent(0) + 28);
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E7C0, (void (*)(void))sub_1DC4C0014, (void (*)(void))sub_1DC4C0058);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t NewsArticleViewResumeEvent.orientationData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for NewsArticleViewResumeEvent(0) + 28);
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E7C0, (void (*)(void))sub_1DC4C0014, (void (*)(void))sub_1DC4C0058);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*NewsArticleViewResumeEvent.orientationData.modify())()
{
  type metadata accessor for NewsArticleViewResumeEvent(0);
  return nullsub_1;
}

uint64_t NewsArticleViewResumeEvent.channelData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for NewsArticleViewResumeEvent(0) + 32);
  sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t NewsArticleViewResumeEvent.channelData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for NewsArticleViewResumeEvent(0) + 32);
  sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*NewsArticleViewResumeEvent.channelData.modify())()
{
  type metadata accessor for NewsArticleViewResumeEvent(0);
  return nullsub_1;
}

uint64_t NewsArticleViewResumeEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v2 = *MEMORY[0x1E0CF8128];
  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
  v4 = (int *)type metadata accessor for NewsArticleViewResumeEvent(0);
  v5 = a1 + v4[5];
  sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 104))(v5, v2, v6);
  v7 = a1 + v4[6];
  sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 104))(v7, v2, v8);
  v9 = a1 + v4[7];
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E7C0, (void (*)(void))sub_1DC4C0014, (void (*)(void))sub_1DC4C0058);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 104))(v9, v2, v10);
  v11 = a1 + v4[8];
  sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 104))(v11, v2, v12);
}

uint64_t NewsArticleViewResumeEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C37DC((uint64_t (*)(_QWORD))MEMORY[0x1E0CF8670], a1);
}

uint64_t NewsArticleViewResumeEvent.Model.viewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for NewsArticleViewResumeEvent.Model(0) + 20));
  v5 = *v3;
  v4 = v3[1];
  LOWORD(v3) = *((_WORD *)v3 + 8);
  *(_QWORD *)a1 = v5;
  *(_QWORD *)(a1 + 8) = v4;
  *(_WORD *)(a1 + 16) = (_WORD)v3;
  return swift_bridgeObjectRetain();
}

uint64_t type metadata accessor for NewsArticleViewResumeEvent.Model(uint64_t a1)
{
  return sub_1DC4B385C(a1, qword_1EDB128D0);
}

uint64_t NewsArticleViewResumeEvent.Model.newsArticleData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  char v12;
  char v13;
  char v14;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for NewsArticleViewResumeEvent.Model(0) + 24));
  v5 = *v3;
  v4 = v3[1];
  v6 = v3[2];
  v7 = v3[3];
  v8 = *((_BYTE *)v3 + 32);
  v9 = v3[5];
  v10 = *((_BYTE *)v3 + 48);
  v11 = v3[7];
  v12 = *((_BYTE *)v3 + 64);
  v13 = *((_BYTE *)v3 + 65);
  v14 = *((_BYTE *)v3 + 66);
  LOBYTE(v3) = *((_BYTE *)v3 + 67);
  *(_QWORD *)a1 = v5;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  *(_BYTE *)(a1 + 32) = v8;
  *(_QWORD *)(a1 + 40) = v9;
  *(_BYTE *)(a1 + 48) = v10;
  *(_QWORD *)(a1 + 56) = v11;
  *(_BYTE *)(a1 + 64) = v12;
  *(_BYTE *)(a1 + 65) = v13;
  *(_BYTE *)(a1 + 66) = v14;
  *(_BYTE *)(a1 + 67) = (_BYTE)v3;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t NewsArticleViewResumeEvent.Model.orientationData.getter@<X0>(_WORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for NewsArticleViewResumeEvent.Model(0);
  *a1 = *(_WORD *)(v1 + *(int *)(result + 28));
  return result;
}

uint64_t NewsArticleViewResumeEvent.Model.channelData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for NewsArticleViewResumeEvent.Model(0) + 32));
  v5 = *v3;
  v4 = v3[1];
  v6 = v3[2];
  v7 = v3[3];
  v8 = *((_BYTE *)v3 + 32);
  LOBYTE(v3) = *((_BYTE *)v3 + 33);
  *(_QWORD *)a1 = v5;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  *(_BYTE *)(a1 + 32) = v8;
  *(_BYTE *)(a1 + 33) = (_BYTE)v3;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

__n128 NewsArticleViewResumeEvent.Model.init(eventData:viewData:newsArticleData:orientationData:channelData:)@<Q0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, __int128 *a3@<X2>, __int16 *a4@<X3>, __n128 *a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  __int16 v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  int *v17;
  uint64_t v18;
  uint64_t v19;
  __n128 *v20;
  __n128 result;
  char v22;
  char v23;
  char v24;
  char v25;
  uint64_t v26;
  __int128 v27;
  __int16 v28;
  unsigned __int8 v29;
  unsigned __int8 v30;
  unint64_t v31;
  unint64_t v32;
  __n128 v33;

  v8 = *a2;
  v9 = a2[1];
  v10 = *((_WORD *)a2 + 8);
  v27 = *a3;
  v11 = *((_QWORD *)a3 + 2);
  v12 = *((_QWORD *)a3 + 3);
  v13 = *((_BYTE *)a3 + 32);
  v14 = *((_QWORD *)a3 + 5);
  v15 = *((_BYTE *)a3 + 48);
  v26 = *((_QWORD *)a3 + 7);
  v24 = *((_BYTE *)a3 + 65);
  v25 = *((_BYTE *)a3 + 64);
  v22 = *((_BYTE *)a3 + 67);
  v23 = *((_BYTE *)a3 + 66);
  v33 = *a5;
  v31 = a5[1].n128_u64[1];
  v32 = a5[1].n128_u64[0];
  v30 = a5[2].n128_u8[0];
  v28 = *a4;
  v29 = a5[2].n128_u8[1];
  v16 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(a6, a1, v16);
  v17 = (int *)type metadata accessor for NewsArticleViewResumeEvent.Model(0);
  v18 = a6 + v17[5];
  *(_QWORD *)v18 = v8;
  *(_QWORD *)(v18 + 8) = v9;
  *(_WORD *)(v18 + 16) = v10;
  v19 = a6 + v17[6];
  *(_OWORD *)v19 = v27;
  *(_QWORD *)(v19 + 16) = v11;
  *(_QWORD *)(v19 + 24) = v12;
  *(_BYTE *)(v19 + 32) = v13;
  *(_QWORD *)(v19 + 40) = v14;
  *(_BYTE *)(v19 + 48) = v15;
  *(_QWORD *)(v19 + 56) = v26;
  *(_BYTE *)(v19 + 64) = v25;
  *(_BYTE *)(v19 + 65) = v24;
  *(_BYTE *)(v19 + 66) = v23;
  *(_BYTE *)(v19 + 67) = v22;
  *(_WORD *)(a6 + v17[7]) = v28;
  v20 = (__n128 *)(a6 + v17[8]);
  result = v33;
  *v20 = v33;
  v20[1].n128_u64[0] = v32;
  v20[1].n128_u64[1] = v31;
  v20[2].n128_u8[0] = v30;
  v20[2].n128_u8[1] = v29;
  return result;
}

uint64_t sub_1DC57EA44()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1DC57EA78 + 4 * byte_1DC63C550[*v0]))(0x746144746E657665, 0xE900000000000061);
}

uint64_t sub_1DC57EA78()
{
  return 0x6174614477656976;
}

uint64_t sub_1DC57EA90()
{
  return 0x697472417377656ELL;
}

uint64_t sub_1DC57EAB4()
{
  return 0x7461746E6569726FLL;
}

uint64_t sub_1DC57EAD8()
{
  return 0x446C656E6E616863;
}

uint64_t sub_1DC57EAF8()
{
  sub_1DC57EDF4();
  return sub_1DC62B604();
}

uint64_t sub_1DC57EB20()
{
  sub_1DC57EDF4();
  return sub_1DC62B610();
}

uint64_t NewsArticleViewResumeEvent.Model.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int *v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  __int128 *v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  char v22;
  char v23;
  char v24;
  __int128 *v25;
  __int128 v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v31;
  __int128 v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  char v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  char v40;
  char v41;
  char v42;
  char v43;
  char v44;

  v3 = v1;
  sub_1DC57F278(0, &qword_1F036D338, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v31 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC57EDF4();
  sub_1DC62B5F8();
  LOBYTE(v32) = 0;
  sub_1DC62ABA8();
  sub_1DC4B6788(&qword_1EDB0E8A8, MEMORY[0x1E0CF8680]);
  sub_1DC62B4E4();
  if (!v2)
  {
    v10 = (int *)type metadata accessor for NewsArticleViewResumeEvent.Model(0);
    v11 = (uint64_t *)(v3 + v10[5]);
    v12 = *v11;
    v13 = v11[1];
    LOWORD(v11) = *((_WORD *)v11 + 8);
    *(_QWORD *)&v32 = v12;
    *((_QWORD *)&v32 + 1) = v13;
    LOWORD(v33) = (_WORD)v11;
    v44 = 1;
    sub_1DC4BEDF0();
    sub_1DC62B4E4();
    v14 = (__int128 *)(v3 + v10[6]);
    v15 = *v14;
    v16 = *((_QWORD *)v14 + 2);
    v17 = *((_QWORD *)v14 + 3);
    v18 = *((_BYTE *)v14 + 32);
    v19 = *((_QWORD *)v14 + 5);
    v20 = *((_BYTE *)v14 + 48);
    v21 = *((_QWORD *)v14 + 7);
    v22 = *((_BYTE *)v14 + 64);
    v23 = *((_BYTE *)v14 + 65);
    v24 = *((_BYTE *)v14 + 66);
    LOBYTE(v14) = *((_BYTE *)v14 + 67);
    v32 = v15;
    v33 = v16;
    v34 = v17;
    v35 = v18;
    v37 = v19;
    v38 = v20;
    v39 = v21;
    v40 = v22;
    v41 = v23;
    v42 = v24;
    v43 = (char)v14;
    v44 = 2;
    sub_1DC4C18E8();
    sub_1DC62B4E4();
    LOWORD(v32) = *(_WORD *)(v3 + v10[7]);
    v44 = 3;
    sub_1DC4C0058();
    sub_1DC62B4E4();
    v25 = (__int128 *)(v3 + v10[8]);
    v26 = *v25;
    v27 = *((_QWORD *)v25 + 2);
    v28 = *((_QWORD *)v25 + 3);
    v29 = *((_BYTE *)v25 + 32);
    LOBYTE(v25) = *((_BYTE *)v25 + 33);
    v32 = v26;
    v33 = v27;
    v34 = v28;
    v35 = v29;
    v36 = (char)v25;
    v44 = 4;
    sub_1DC4C8E84();
    sub_1DC62B4E4();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1DC57EDF4()
{
  unint64_t result;

  result = qword_1F036D340;
  if (!qword_1F036D340)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC63C78C, &type metadata for NewsArticleViewResumeEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036D340);
  }
  return result;
}

uint64_t NewsArticleViewResumeEvent.Model.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  int *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int16 v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  char v23;
  char v24;
  char v25;
  char v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  char v31;
  char *v32;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  _QWORD *v40;
  __int128 v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  char v45;
  uint64_t v46;
  char v47;
  uint64_t v48;
  char v49;
  char v50;
  char v51;
  char v52;
  char v53;

  v35 = a2;
  v3 = sub_1DC62ABA8();
  v36 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v38 = (char *)&v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC57F278(0, &qword_1F036D348, MEMORY[0x1E0DED048]);
  v37 = v5;
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v34 - v6;
  v8 = (int *)type metadata accessor for NewsArticleViewResumeEvent.Model(0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC57EDF4();
  v39 = v7;
  v11 = (uint64_t)v40;
  sub_1DC62B5E0();
  if (v11)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v40 = a1;
  v12 = v36;
  LOBYTE(v41) = 0;
  sub_1DC4B6788(&qword_1EDB0E278, MEMORY[0x1E0CF8688]);
  v13 = v37;
  sub_1DC62B454();
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v10, v38, v3);
  v53 = 1;
  sub_1DC4BEDAC();
  sub_1DC62B454();
  v14 = *((_QWORD *)&v41 + 1);
  v15 = v42;
  v16 = &v10[v8[5]];
  *(_QWORD *)v16 = v41;
  *((_QWORD *)v16 + 1) = v14;
  *((_WORD *)v16 + 8) = v15;
  v53 = 2;
  sub_1DC4C18A0();
  sub_1DC62B454();
  v17 = v42;
  v18 = v43;
  v19 = v44;
  v20 = v46;
  v21 = v47;
  v22 = v48;
  v23 = v49;
  v24 = v50;
  v25 = v51;
  v26 = v52;
  v27 = &v10[v8[6]];
  *(_OWORD *)v27 = v41;
  *((_QWORD *)v27 + 2) = v17;
  *((_QWORD *)v27 + 3) = v18;
  v27[32] = v19;
  *((_QWORD *)v27 + 5) = v20;
  v27[48] = v21;
  *((_QWORD *)v27 + 7) = v22;
  v27[64] = v23;
  v27[65] = v24;
  v27[66] = v25;
  v27[67] = v26;
  v53 = 3;
  sub_1DC4C0014();
  sub_1DC62B454();
  *(_WORD *)&v10[v8[7]] = v41;
  v53 = 4;
  sub_1DC4C8E40();
  sub_1DC62B454();
  MEMORY[8](v39, v13);
  v28 = v42;
  v29 = v43;
  v30 = v44;
  v31 = v45;
  v32 = &v10[v8[8]];
  *(_OWORD *)v32 = v41;
  *((_QWORD *)v32 + 2) = v28;
  *((_QWORD *)v32 + 3) = v29;
  v32[32] = v30;
  v32[33] = v31;
  sub_1DC57F2D4((uint64_t)v10, v35);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v40);
  return sub_1DC57F318((uint64_t)v10);
}

void sub_1DC57F278(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1DC57EDF4();
    v7 = a3(a1, &type metadata for NewsArticleViewResumeEvent.Model.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1DC57F2D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for NewsArticleViewResumeEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DC57F318(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for NewsArticleViewResumeEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1DC57F354@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return NewsArticleViewResumeEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_1DC57F368(_QWORD *a1)
{
  return NewsArticleViewResumeEvent.Model.encode(to:)(a1);
}

uint64_t sub_1DC57F37C@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4B2C68(&qword_1EDB11060, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1EDB11048, a1);
}

uint64_t sub_1DC57F3A0@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4B2C68(&qword_1EDB11080, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1EDB11068, a1);
}

uint64_t getEnumTagSinglePayload for NewsArticleViewResumeEvent()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC57F3D0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  sub_1DC4B6600();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
    v12 = *(_QWORD *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
    {
      v8 = v11;
      v13 = a3[5];
    }
    else
    {
      sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
      v12 = *(_QWORD *)(v14 - 8);
      if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
      {
        v8 = v14;
        v13 = a3[6];
      }
      else
      {
        sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E7C0, (void (*)(void))sub_1DC4C0014, (void (*)(void))sub_1DC4C0058);
        v12 = *(_QWORD *)(v15 - 8);
        if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
        {
          v8 = v15;
          v13 = a3[7];
        }
        else
        {
          sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
          v8 = v16;
          v12 = *(_QWORD *)(v16 - 8);
          v13 = a3[8];
        }
      }
    }
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t storeEnumTagSinglePayload for NewsArticleViewResumeEvent()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC57F53C(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  sub_1DC4B6600();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = a4[5];
    }
    else
    {
      sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
      v14 = *(_QWORD *)(v16 - 8);
      if (*(_DWORD *)(v14 + 84) == a3)
      {
        v10 = v16;
        v15 = a4[6];
      }
      else
      {
        sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E7C0, (void (*)(void))sub_1DC4C0014, (void (*)(void))sub_1DC4C0058);
        v14 = *(_QWORD *)(v17 - 8);
        if (*(_DWORD *)(v14 + 84) == a3)
        {
          v10 = v17;
          v15 = a4[7];
        }
        else
        {
          sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
          v10 = v18;
          v14 = *(_QWORD *)(v18 - 8);
          v15 = a4[8];
        }
      }
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

uint64_t getEnumTagSinglePayload for NewsArticleViewResumeEvent.Model()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC57F6B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_1DC62ABA8();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for NewsArticleViewResumeEvent.Model()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC57F73C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_1DC62ABA8();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  return result;
}

uint64_t sub_1DC57F7B8()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1DC62ABA8();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for NewsArticleViewResumeEvent.Model.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1DC57F894 + 4 * byte_1DC63C55A[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1DC57F8C8 + 4 * byte_1DC63C555[v4]))();
}

uint64_t sub_1DC57F8C8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC57F8D0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DC57F8D8);
  return result;
}

uint64_t sub_1DC57F8E4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DC57F8ECLL);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1DC57F8F0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC57F8F8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for NewsArticleViewResumeEvent.Model.CodingKeys()
{
  return &type metadata for NewsArticleViewResumeEvent.Model.CodingKeys;
}

unint64_t sub_1DC57F918()
{
  unint64_t result;

  result = qword_1F036D350;
  if (!qword_1F036D350)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC63C764, &type metadata for NewsArticleViewResumeEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036D350);
  }
  return result;
}

unint64_t sub_1DC57F960()
{
  unint64_t result;

  result = qword_1F036D358;
  if (!qword_1F036D358)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC63C6D4, &type metadata for NewsArticleViewResumeEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036D358);
  }
  return result;
}

unint64_t sub_1DC57F9A8()
{
  unint64_t result;

  result = qword_1F036D360;
  if (!qword_1F036D360)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC63C6FC, &type metadata for NewsArticleViewResumeEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036D360);
  }
  return result;
}

StocksAnalytics::GalleryType_optional __swiftcall GalleryType.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  StocksAnalytics::GalleryType_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1DC62B3DC();
  result.value = swift_bridgeObjectRelease();
  v5 = 3;
  if (v3 < 3)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t GalleryType.rawValue.getter()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x636961736F6DLL;
  if (*v0 != 1)
    v1 = 0x7069727473;
  if (*v0)
    return v1;
  else
    return 0x6E776F6E6B6E75;
}

uint64_t sub_1DC57FA98(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1DC54628C(*a1, *a2);
}

unint64_t sub_1DC57FAA8()
{
  unint64_t result;

  result = qword_1F036D368;
  if (!qword_1F036D368)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for GalleryType, &type metadata for GalleryType);
    atomic_store(result, (unint64_t *)&qword_1F036D368);
  }
  return result;
}

uint64_t sub_1DC57FAEC()
{
  sub_1DC62B5B0();
  sub_1DC62B10C();
  swift_bridgeObjectRelease();
  return sub_1DC62B5C8();
}

uint64_t sub_1DC57FB84()
{
  sub_1DC62B10C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DC57FBF8()
{
  sub_1DC62B5B0();
  sub_1DC62B10C();
  swift_bridgeObjectRelease();
  return sub_1DC62B5C8();
}

StocksAnalytics::GalleryType_optional sub_1DC57FC8C(Swift::String *a1)
{
  return GalleryType.init(rawValue:)(*a1);
}

void sub_1DC57FC98(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;

  v2 = *v1;
  v3 = 0xE700000000000000;
  v4 = 0xE600000000000000;
  v5 = 0x636961736F6DLL;
  if (v2 != 1)
  {
    v5 = 0x7069727473;
    v4 = 0xE500000000000000;
  }
  v6 = v2 == 0;
  if (*v1)
    v7 = v5;
  else
    v7 = 0x6E776F6E6B6E75;
  if (!v6)
    v3 = v4;
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_1DC57FCF0()
{
  sub_1DC57FE64();
  return sub_1DC62B13C();
}

uint64_t sub_1DC57FD4C()
{
  sub_1DC57FE64();
  return sub_1DC62B130();
}

uint64_t storeEnumTagSinglePayload for GalleryType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1DC57FDE4 + 4 * byte_1DC63C7E1[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1DC57FE18 + 4 * byte_1DC63C7DC[v4]))();
}

uint64_t sub_1DC57FE18(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC57FE20(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DC57FE28);
  return result;
}

uint64_t sub_1DC57FE34(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DC57FE3CLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1DC57FE40(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC57FE48(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for GalleryType()
{
  return &type metadata for GalleryType;
}

unint64_t sub_1DC57FE64()
{
  unint64_t result;

  result = qword_1F036D370;
  if (!qword_1F036D370)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for GalleryType, &type metadata for GalleryType);
    atomic_store(result, (unint64_t *)&qword_1F036D370);
  }
  return result;
}

uint64_t sub_1DC57FEA8(uint64_t a1)
{
  return sub_1DC4BE784(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], qword_1F036D378, MEMORY[0x1E0CF8078]);
}

uint64_t static OnboardingScreenViewEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C2FE8(&qword_1F03690D0, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1F036D378, a1);
}

uint64_t sub_1DC57FEE8(uint64_t a1)
{
  return sub_1DC4BE784(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], qword_1F036D390, MEMORY[0x1E0CF8380]);
}

uint64_t static OnboardingScreenViewEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C2FE8(&qword_1F03690D8, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1F036D390, a1);
}

uint64_t OnboardingScreenViewEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C37DC((uint64_t (*)(_QWORD))sub_1DC4B6600, a1);
}

uint64_t OnboardingScreenViewEvent.eventData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  sub_1DC4B6600();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*OnboardingScreenViewEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t OnboardingScreenViewEvent.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C382C(type metadata accessor for OnboardingScreenViewEvent, (uint64_t (*)(_QWORD))sub_1DC4B66A4, a1);
}

uint64_t type metadata accessor for OnboardingScreenViewEvent(uint64_t a1)
{
  return sub_1DC4B385C(a1, qword_1F036D418);
}

uint64_t OnboardingScreenViewEvent.timedData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for OnboardingScreenViewEvent(0) + 20);
  sub_1DC4B66A4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*OnboardingScreenViewEvent.timedData.modify())()
{
  type metadata accessor for OnboardingScreenViewEvent(0);
  return nullsub_1;
}

uint64_t OnboardingScreenViewEvent.onboardingScreenData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for OnboardingScreenViewEvent(0) + 24);
  sub_1DC51E178();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t OnboardingScreenViewEvent.onboardingScreenData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for OnboardingScreenViewEvent(0) + 24);
  sub_1DC51E178();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*OnboardingScreenViewEvent.onboardingScreenData.modify())()
{
  type metadata accessor for OnboardingScreenViewEvent(0);
  return nullsub_1;
}

uint64_t OnboardingScreenViewEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2 = *MEMORY[0x1E0CF8128];
  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
  v4 = type metadata accessor for OnboardingScreenViewEvent(0);
  v5 = a1 + *(int *)(v4 + 20);
  sub_1DC4B66A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 104))(v5, v2, v6);
  v7 = a1 + *(int *)(v4 + 24);
  sub_1DC51E178();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 104))(v7, v2, v8);
}

uint64_t OnboardingScreenViewEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C37DC((uint64_t (*)(_QWORD))MEMORY[0x1E0CF8670], a1);
}

uint64_t OnboardingScreenViewEvent.Model.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C382C(type metadata accessor for OnboardingScreenViewEvent.Model, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF86C0], a1);
}

uint64_t type metadata accessor for OnboardingScreenViewEvent.Model(uint64_t a1)
{
  return sub_1DC4B385C(a1, qword_1F036D4B0);
}

uint64_t OnboardingScreenViewEvent.Model.onboardingScreenData.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for OnboardingScreenViewEvent.Model(0);
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 24));
  return result;
}

uint64_t OnboardingScreenViewEvent.Model.init(eventData:timedData:onboardingScreenData:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X2>, uint64_t a4@<X8>)
{
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;

  v7 = *a3;
  v8 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a4, a1, v8);
  v9 = type metadata accessor for OnboardingScreenViewEvent.Model(0);
  v10 = a4 + *(int *)(v9 + 20);
  v11 = sub_1DC62ABC0();
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v10, a2, v11);
  *(_BYTE *)(a4 + *(int *)(v9 + 24)) = v7;
  return result;
}

uint64_t sub_1DC58026C()
{
  _BYTE *v0;
  unint64_t v1;

  v1 = 0x74614464656D6974;
  if (*v0 != 1)
    v1 = 0xD000000000000014;
  if (*v0)
    return v1;
  else
    return 0x746144746E657665;
}

uint64_t sub_1DC5802CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1DC5817B0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DC5802F0()
{
  sub_1DC580514();
  return sub_1DC62B604();
}

uint64_t sub_1DC580318()
{
  sub_1DC580514();
  return sub_1DC62B610();
}

uint64_t OnboardingScreenViewEvent.Model.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  _BYTE v12[16];

  v3 = v1;
  sub_1DC5808C8(0, &qword_1F036D3A8, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = &v12[-v8];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC580514();
  sub_1DC62B5F8();
  v12[15] = 0;
  sub_1DC62ABA8();
  sub_1DC4B6748(&qword_1EDB0E8A8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF8670], MEMORY[0x1E0CF8680]);
  sub_1DC62B4E4();
  if (!v2)
  {
    v10 = type metadata accessor for OnboardingScreenViewEvent.Model(0);
    v12[14] = 1;
    sub_1DC62ABC0();
    sub_1DC4B6748(&qword_1EDB0E8B8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF86C0], MEMORY[0x1E0CF86D0]);
    sub_1DC62B4E4();
    v12[13] = *(_BYTE *)(v3 + *(int *)(v10 + 24));
    v12[12] = 2;
    sub_1DC51E220();
    sub_1DC62B4E4();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1DC580514()
{
  unint64_t result;

  result = qword_1F036D3B0;
  if (!qword_1F036D3B0)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC63CACC, &type metadata for OnboardingScreenViewEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036D3B0);
  }
  return result;
}

uint64_t OnboardingScreenViewEvent.Model.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  _QWORD *v31;
  char v32;
  char v33;
  char v34;
  char v35;

  v23 = a2;
  v26 = sub_1DC62ABC0();
  v24 = *(_QWORD *)(v26 - 8);
  MEMORY[0x1E0C80A78](v26);
  v25 = (char *)&v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = sub_1DC62ABA8();
  v4 = *(_QWORD *)(v28 - 8);
  MEMORY[0x1E0C80A78](v28);
  v27 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC5808C8(0, &qword_1F036D3B8, MEMORY[0x1E0DED048]);
  v29 = v6;
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v20 - v8;
  v10 = type metadata accessor for OnboardingScreenViewEvent.Model(0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC580514();
  v30 = v9;
  v13 = (uint64_t)v31;
  sub_1DC62B5E0();
  if (v13)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v21 = v4;
  v22 = v7;
  v14 = (uint64_t)v12;
  v31 = a1;
  v16 = v25;
  v15 = v26;
  v35 = 0;
  sub_1DC4B6748(&qword_1EDB0E278, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF8670], MEMORY[0x1E0CF8688]);
  v17 = v27;
  v18 = v28;
  sub_1DC62B454();
  (*(void (**)(uint64_t, char *, uint64_t))(v21 + 32))(v14, v17, v18);
  v34 = 1;
  sub_1DC4B6748(&qword_1EDB0E8C0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF86C0], MEMORY[0x1E0CF86D8]);
  sub_1DC62B454();
  (*(void (**)(uint64_t, char *, uint64_t))(v24 + 32))(v14 + *(int *)(v10 + 20), v16, v15);
  v32 = 2;
  sub_1DC51E1DC();
  sub_1DC62B454();
  (*(void (**)(char *, uint64_t))(v22 + 8))(v30, v29);
  *(_BYTE *)(v14 + *(int *)(v10 + 24)) = v33;
  sub_1DC580924(v14, v23);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v31);
  return sub_1DC580968(v14);
}

void sub_1DC5808C8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1DC580514();
    v7 = a3(a1, &type metadata for OnboardingScreenViewEvent.Model.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1DC580924(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for OnboardingScreenViewEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DC580968(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for OnboardingScreenViewEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1DC5809A4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return OnboardingScreenViewEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_1DC5809B8(_QWORD *a1)
{
  return OnboardingScreenViewEvent.Model.encode(to:)(a1);
}

uint64_t sub_1DC5809CC@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4B2C68(&qword_1F03690D0, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1F036D378, a1);
}

uint64_t sub_1DC5809F0@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4B2C68(&qword_1F03690D8, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1F036D390, a1);
}

uint64_t sub_1DC580A14@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4 = *MEMORY[0x1E0CF8128];
  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 104))(a2, v4, v5);
  v6 = a2 + *(int *)(a1 + 20);
  sub_1DC4B66A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 104))(v6, v4, v7);
  v8 = a2 + *(int *)(a1 + 24);
  sub_1DC51E178();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 104))(v8, v4, v9);
}

uint64_t *initializeBufferWithCopyOfBuffer for OnboardingScreenViewEvent(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v16 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_1DC4B6600();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    sub_1DC4B66A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = *(int *)(a3 + 24);
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    sub_1DC51E178();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
  }
  return a1;
}

uint64_t destroy for OnboardingScreenViewEvent(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + *(int *)(a2 + 20);
  sub_1DC4B66A4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = a1 + *(int *)(a2 + 24);
  sub_1DC51E178();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
}

uint64_t initializeWithCopy for OnboardingScreenViewEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1DC4B66A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = *(int *)(a3 + 24);
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1DC51E178();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
  return a1;
}

uint64_t assignWithCopy for OnboardingScreenViewEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1DC4B66A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = *(int *)(a3 + 24);
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1DC51E178();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 24))(v12, v13, v14);
  return a1;
}

uint64_t initializeWithTake for OnboardingScreenViewEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1DC4B66A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = *(int *)(a3 + 24);
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1DC51E178();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
  return a1;
}

uint64_t assignWithTake for OnboardingScreenViewEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1DC4B66A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = *(int *)(a3 + 24);
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1DC51E178();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 40))(v12, v13, v14);
  return a1;
}

uint64_t getEnumTagSinglePayload for OnboardingScreenViewEvent()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC580EE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  sub_1DC4B6600();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    sub_1DC4B66A4();
    v12 = *(_QWORD *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
    {
      v8 = v11;
      v13 = *(int *)(a3 + 20);
    }
    else
    {
      sub_1DC51E178();
      v8 = v14;
      v12 = *(_QWORD *)(v14 - 8);
      v13 = *(int *)(a3 + 24);
    }
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t storeEnumTagSinglePayload for OnboardingScreenViewEvent()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC580F88(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  sub_1DC4B6600();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    sub_1DC4B66A4();
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = *(int *)(a4 + 20);
    }
    else
    {
      sub_1DC51E178();
      v10 = v16;
      v14 = *(_QWORD *)(v16 - 8);
      v15 = *(int *)(a4 + 24);
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_1DC581028()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  sub_1DC4B6600();
  if (v0 <= 0x3F)
  {
    sub_1DC4B66A4();
    if (v1 <= 0x3F)
    {
      sub_1DC51E178();
      if (v2 <= 0x3F)
        swift_initStructMetadata();
    }
  }
}

_QWORD *initializeBufferWithCopyOfBuffer for OnboardingScreenViewEvent.Model(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1DC62ABA8();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_1DC62ABC0();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    *((_BYTE *)a1 + *(int *)(a3 + 24)) = *((_BYTE *)a2 + *(int *)(a3 + 24));
  }
  return a1;
}

uint64_t destroy for OnboardingScreenViewEvent.Model(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + *(int *)(a2 + 20);
  v6 = sub_1DC62ABC0();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
}

uint64_t initializeWithCopy for OnboardingScreenViewEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1DC62ABC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  *(_BYTE *)(a1 + *(int *)(a3 + 24)) = *(_BYTE *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t assignWithCopy for OnboardingScreenViewEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1DC62ABC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  *(_BYTE *)(a1 + *(int *)(a3 + 24)) = *(_BYTE *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t initializeWithTake for OnboardingScreenViewEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1DC62ABC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  *(_BYTE *)(a1 + *(int *)(a3 + 24)) = *(_BYTE *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t assignWithTake for OnboardingScreenViewEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1DC62ABC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  *(_BYTE *)(a1 + *(int *)(a3 + 24)) = *(_BYTE *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t getEnumTagSinglePayload for OnboardingScreenViewEvent.Model()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC58142C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int v14;

  v6 = sub_1DC62ABA8();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  v11 = sub_1DC62ABC0();
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  v14 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 24));
  if (v14 >= 3)
    return v14 - 2;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for OnboardingScreenViewEvent.Model()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC5814DC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t result;
  uint64_t v14;

  v8 = sub_1DC62ABA8();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
    return v11(v12, a2, a2, v10);
  }
  result = sub_1DC62ABC0();
  v14 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = result;
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    return v11(v12, a2, a2, v10);
  }
  *(_BYTE *)(a1 + *(int *)(a4 + 24)) = a2 + 2;
  return result;
}

uint64_t sub_1DC581580()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_1DC62ABA8();
  if (v1 <= 0x3F)
  {
    result = sub_1DC62ABC0();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for OnboardingScreenViewEvent.Model.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1DC581658 + 4 * byte_1DC63C905[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1DC58168C + 4 * byte_1DC63C900[v4]))();
}

uint64_t sub_1DC58168C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC581694(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DC58169CLL);
  return result;
}

uint64_t sub_1DC5816A8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DC5816B0);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1DC5816B4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC5816BC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for OnboardingScreenViewEvent.Model.CodingKeys()
{
  return &type metadata for OnboardingScreenViewEvent.Model.CodingKeys;
}

unint64_t sub_1DC5816DC()
{
  unint64_t result;

  result = qword_1F036D4F0;
  if (!qword_1F036D4F0)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC63CAA4, &type metadata for OnboardingScreenViewEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036D4F0);
  }
  return result;
}

unint64_t sub_1DC581724()
{
  unint64_t result;

  result = qword_1F036D4F8;
  if (!qword_1F036D4F8)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC63CA14, &type metadata for OnboardingScreenViewEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036D4F8);
  }
  return result;
}

unint64_t sub_1DC58176C()
{
  unint64_t result;

  result = qword_1F036D500;
  if (!qword_1F036D500)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC63CA3C, &type metadata for OnboardingScreenViewEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036D500);
  }
  return result;
}

uint64_t sub_1DC5817B0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x746144746E657665 && a2 == 0xE900000000000061;
  if (v2 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x74614464656D6974 && a2 == 0xE900000000000061 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001DC64C790)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_1DC62B520();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

StocksAnalytics::BundleSubscriptionStatus_optional __swiftcall BundleSubscriptionStatus.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  StocksAnalytics::BundleSubscriptionStatus_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1DC62B3DC();
  result.value = swift_bridgeObjectRelease();
  v5 = 4;
  if (v3 < 4)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t BundleSubscriptionStatus.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1DC5819A0 + 4 * byte_1DC63CB20[*v0]))(0x6E776F6E6B6E75, 0xE700000000000000);
}

uint64_t sub_1DC5819A0()
{
  return 0x6C61697274;
}

uint64_t sub_1DC5819B4()
{
  return 0x6269726373627573;
}

uint64_t sub_1DC5819D0()
{
  return 0x6373627553746F6ELL;
}

void sub_1DC5819F4(char *a1)
{
  sub_1DC542BD0(*a1);
}

unint64_t sub_1DC581A04()
{
  unint64_t result;

  result = qword_1F036D508;
  if (!qword_1F036D508)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for BundleSubscriptionStatus, &type metadata for BundleSubscriptionStatus);
    atomic_store(result, (unint64_t *)&qword_1F036D508);
  }
  return result;
}

void sub_1DC581A48()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1DC62B5B0();
  __asm { BR              X9 }
}

uint64_t sub_1DC581A94()
{
  sub_1DC62B10C();
  swift_bridgeObjectRelease();
  return sub_1DC62B5C8();
}

void sub_1DC581B10()
{
  __asm { BR              X10 }
}

uint64_t sub_1DC581B4C()
{
  sub_1DC62B10C();
  return swift_bridgeObjectRelease();
}

void sub_1DC581BB4()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1DC62B5B0();
  __asm { BR              X9 }
}

uint64_t sub_1DC581BFC()
{
  sub_1DC62B10C();
  swift_bridgeObjectRelease();
  return sub_1DC62B5C8();
}

StocksAnalytics::BundleSubscriptionStatus_optional sub_1DC581C78(Swift::String *a1)
{
  return BundleSubscriptionStatus.init(rawValue:)(*a1);
}

uint64_t sub_1DC581C84()
{
  sub_1DC4B5168();
  return sub_1DC62B13C();
}

uint64_t storeEnumTagSinglePayload for BundleSubscriptionStatus(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1DC581D2C + 4 * byte_1DC63CB39[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1DC581D60 + 4 * byte_1DC63CB34[v4]))();
}

uint64_t sub_1DC581D60(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC581D68(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DC581D70);
  return result;
}

uint64_t sub_1DC581D7C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DC581D84);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1DC581D88(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC581D90(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for BundleSubscriptionStatus()
{
  return &type metadata for BundleSubscriptionStatus;
}

uint64_t Assembly.__allocating_init()()
{
  uint64_t v0;

  v0 = swift_allocObject();
  Assembly.init()();
  return v0;
}

uint64_t Assembly.assemblies.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t Assembly.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return v0;
}

uint64_t Assembly.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t method lookup function for Assembly()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of Assembly.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t AdPlacementData.placementID.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t AdPlacementData.placementID.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*AdPlacementData.placementID.modify())()
{
  return nullsub_1;
}

StocksAnalytics::AdPlacementData __swiftcall AdPlacementData.init(placementID:)(StocksAnalytics::AdPlacementData placementID)
{
  StocksAnalytics::AdPlacementData *v1;

  *v1 = placementID;
  return placementID;
}

uint64_t sub_1DC581EB4()
{
  return 0x6E656D6563616C70;
}

uint64_t sub_1DC581ED4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x6E656D6563616C70 && a2 == 0xEB00000000444974)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_1DC62B520();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1DC581F80()
{
  sub_1DC5820C4();
  return sub_1DC62B604();
}

uint64_t sub_1DC581FA8()
{
  sub_1DC5820C4();
  return sub_1DC62B610();
}

uint64_t AdPlacementData.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  sub_1DC58222C(0, &qword_1EDB11A20, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC5820C4();
  sub_1DC62B5F8();
  sub_1DC62B4B4();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_1DC5820C4()
{
  unint64_t result;

  result = qword_1EDB0F278;
  if (!qword_1EDB0F278)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC63CE3C, &type metadata for AdPlacementData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB0F278);
  }
  return result;
}

uint64_t AdPlacementData.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  sub_1DC58222C(0, &qword_1F036D510, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v14 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC5820C4();
  sub_1DC62B5E0();
  if (!v2)
  {
    v10 = sub_1DC62B424();
    v12 = v11;
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *a2 = v10;
    a2[1] = v12;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1DC58222C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1DC5820C4();
    v7 = a3(a1, &type metadata for AdPlacementData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1DC582290@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return AdPlacementData.init(from:)(a1, a2);
}

uint64_t sub_1DC5822A4(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  sub_1DC58222C(0, &qword_1EDB11A20, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC5820C4();
  sub_1DC62B5F8();
  sub_1DC62B4B4();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

ValueMetadata *type metadata accessor for AdPlacementData()
{
  return &type metadata for AdPlacementData;
}

uint64_t storeEnumTagSinglePayload for AdPlacementData.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1DC5823E8 + 4 * byte_1DC63CCC8[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1DC582408 + 4 * byte_1DC63CCCD[v4]))();
}

_BYTE *sub_1DC5823E8(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1DC582408(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1DC582410(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1DC582418(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1DC582420(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1DC582428(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for AdPlacementData.CodingKeys()
{
  return &type metadata for AdPlacementData.CodingKeys;
}

unint64_t sub_1DC582448()
{
  unint64_t result;

  result = qword_1F036D518;
  if (!qword_1F036D518)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC63CE14, &type metadata for AdPlacementData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036D518);
  }
  return result;
}

unint64_t sub_1DC582490()
{
  unint64_t result;

  result = qword_1EDB0F288;
  if (!qword_1EDB0F288)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC63CD84, &type metadata for AdPlacementData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB0F288);
  }
  return result;
}

unint64_t sub_1DC5824D8()
{
  unint64_t result;

  result = qword_1EDB0F280;
  if (!qword_1EDB0F280)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC63CDAC, &type metadata for AdPlacementData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB0F280);
  }
  return result;
}

void UserArticleContextData.paidSubscriberToSourceChannelType.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

_BYTE *UserArticleContextData.paidSubscriberToSourceChannelType.setter(_BYTE *result)
{
  _BYTE *v1;

  *v1 = *result;
  return result;
}

uint64_t (*UserArticleContextData.paidSubscriberToSourceChannelType.modify())()
{
  return nullsub_1;
}

void UserArticleContextData.paidSubscriberToSourceChannelMethod.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 1);
}

_BYTE *UserArticleContextData.paidSubscriberToSourceChannelMethod.setter(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 1) = *result;
  return result;
}

uint64_t (*UserArticleContextData.paidSubscriberToSourceChannelMethod.modify())()
{
  return nullsub_1;
}

StocksAnalytics::UserArticleContextData __swiftcall UserArticleContextData.init(paidSubscriberToSourceChannelType:paidSubscriberToSourceChannelMethod:)(StocksAnalytics::PaidSubscriberToSourceChannelType paidSubscriberToSourceChannelType, StocksAnalytics::PaidSubscriberToSourceChannelMethod_optional paidSubscriberToSourceChannelMethod)
{
  _BYTE *v2;
  char v3;
  StocksAnalytics::UserArticleContextData result;

  v3 = *(_BYTE *)paidSubscriberToSourceChannelMethod.value;
  *v2 = *(_BYTE *)paidSubscriberToSourceChannelType;
  v2[1] = v3;
  result.paidSubscriberToSourceChannelType = paidSubscriberToSourceChannelType;
  return result;
}

unint64_t sub_1DC582580()
{
  _BYTE *v0;

  if (*v0)
    return 0xD000000000000023;
  else
    return 0xD000000000000021;
}

uint64_t sub_1DC5825C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1DC582DF0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DC5825E4()
{
  sub_1DC582788();
  return sub_1DC62B604();
}

uint64_t sub_1DC58260C()
{
  sub_1DC582788();
  return sub_1DC62B610();
}

uint64_t UserArticleContextData.encode(to:)(_QWORD *a1)
{
  char *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char v9;
  uint64_t v11;
  int v12;
  char v13;
  char v14;
  char v15;
  char v16;

  sub_1DC5829D8(0, &qword_1EDB11AB8, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v11 - v7;
  v9 = *v1;
  v12 = v1[1];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC582788();
  sub_1DC62B5F8();
  v16 = v9;
  v15 = 0;
  sub_1DC5827CC();
  sub_1DC62B4E4();
  if (!v2)
  {
    v14 = v12;
    v13 = 1;
    sub_1DC582810();
    sub_1DC62B490();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_1DC582788()
{
  unint64_t result;

  result = qword_1EDB10AF8;
  if (!qword_1EDB10AF8)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC63D01C, &type metadata for UserArticleContextData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB10AF8);
  }
  return result;
}

unint64_t sub_1DC5827CC()
{
  unint64_t result;

  result = qword_1EDB11188;
  if (!qword_1EDB11188)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for PaidSubscriberToSourceChannelType, &type metadata for PaidSubscriberToSourceChannelType);
    atomic_store(result, (unint64_t *)&qword_1EDB11188);
  }
  return result;
}

unint64_t sub_1DC582810()
{
  unint64_t result;

  result = qword_1EDB11300;
  if (!qword_1EDB11300)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for PaidSubscriberToSourceChannelMethod, &type metadata for PaidSubscriberToSourceChannelMethod);
    atomic_store(result, (unint64_t *)&qword_1EDB11300);
  }
  return result;
}

uint64_t UserArticleContextData.init(from:)@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char v10;
  char v12;
  uint64_t v13;
  char v14;
  char v15;
  char v16;
  char v17;

  sub_1DC5829D8(0, &qword_1EDB11978, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v13 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC582788();
  sub_1DC62B5E0();
  if (!v2)
  {
    v16 = 0;
    sub_1DC582A34();
    sub_1DC62B454();
    v10 = v17;
    v14 = 1;
    sub_1DC582A78();
    sub_1DC62B400();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    v12 = v15;
    *a2 = v10;
    a2[1] = v12;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1DC5829D8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1DC582788();
    v7 = a3(a1, &type metadata for UserArticleContextData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1DC582A34()
{
  unint64_t result;

  result = qword_1EDB11198;
  if (!qword_1EDB11198)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for PaidSubscriberToSourceChannelType, &type metadata for PaidSubscriberToSourceChannelType);
    atomic_store(result, (unint64_t *)&qword_1EDB11198);
  }
  return result;
}

unint64_t sub_1DC582A78()
{
  unint64_t result;

  result = qword_1EDB11310;
  if (!qword_1EDB11310)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for PaidSubscriberToSourceChannelMethod, &type metadata for PaidSubscriberToSourceChannelMethod);
    atomic_store(result, (unint64_t *)&qword_1EDB11310);
  }
  return result;
}

uint64_t sub_1DC582AC4@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return UserArticleContextData.init(from:)(a1, a2);
}

uint64_t sub_1DC582AD8(_QWORD *a1)
{
  return UserArticleContextData.encode(to:)(a1);
}

uint64_t getEnumTagSinglePayload for UserArticleContextData(unsigned __int16 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFD)
    goto LABEL_17;
  if (a2 + 65283 <= 0xFFFEFFFF)
    v2 = 2;
  else
    v2 = 4;
  if (a2 + 65283 < 0xFF0000)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 16)) - 65283;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
      return (*a1 | (v4 << 16)) - 65283;
    }
    v4 = *((unsigned __int8 *)a1 + 2);
    if (*((_BYTE *)a1 + 2))
      return (*a1 | (v4 << 16)) - 65283;
  }
LABEL_17:
  v6 = *(unsigned __int8 *)a1;
  v7 = v6 >= 4;
  v8 = v6 - 4;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for UserArticleContextData(_WORD *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 65283 <= 0xFFFEFFFF)
    v3 = 2;
  else
    v3 = 4;
  if (a3 + 65283 < 0xFF0000)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1DC582BCC + 4 * byte_1DC63CE95[v4]))();
  *a1 = a2 - 253;
  return ((uint64_t (*)(void))((char *)sub_1DC582C00 + 4 * byte_1DC63CE90[v4]))();
}

uint64_t sub_1DC582C00(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 2) = v1;
  return result;
}

uint64_t sub_1DC582C08(uint64_t result, int a2)
{
  *(_WORD *)(result + 2) = 0;
  if (a2)
    JUMPOUT(0x1DC582C10);
  return result;
}

uint64_t sub_1DC582C1C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 2) = 0;
  if (!a2)
    JUMPOUT(0x1DC582C24);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1DC582C28(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 2) = v1;
  return result;
}

uint64_t sub_1DC582C30(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 2) = v1;
  return result;
}

ValueMetadata *type metadata accessor for UserArticleContextData()
{
  return &type metadata for UserArticleContextData;
}

uint64_t storeEnumTagSinglePayload for UserArticleContextData.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1DC582C98 + 4 * byte_1DC63CE9F[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1DC582CCC + 4 * byte_1DC63CE9A[v4]))();
}

uint64_t sub_1DC582CCC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC582CD4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DC582CDCLL);
  return result;
}

uint64_t sub_1DC582CE8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DC582CF0);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1DC582CF4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC582CFC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for UserArticleContextData.CodingKeys()
{
  return &type metadata for UserArticleContextData.CodingKeys;
}

unint64_t sub_1DC582D1C()
{
  unint64_t result;

  result = qword_1F036D520;
  if (!qword_1F036D520)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC63CFF4, &type metadata for UserArticleContextData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036D520);
  }
  return result;
}

unint64_t sub_1DC582D64()
{
  unint64_t result;

  result = qword_1EDB10B08;
  if (!qword_1EDB10B08)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC63CF64, &type metadata for UserArticleContextData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB10B08);
  }
  return result;
}

unint64_t sub_1DC582DAC()
{
  unint64_t result;

  result = qword_1EDB10B00;
  if (!qword_1EDB10B00)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC63CF8C, &type metadata for UserArticleContextData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB10B00);
  }
  return result;
}

uint64_t sub_1DC582DF0(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000021 && a2 == 0x80000001DC64D0A0 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000023 && a2 == 0x80000001DC64D0D0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v5 = sub_1DC62B520();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

StocksAnalytics::SubscriptionResultType_optional __swiftcall SubscriptionResultType.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  StocksAnalytics::SubscriptionResultType_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1DC62B3DC();
  result.value = swift_bridgeObjectRelease();
  v5 = 5;
  if (v3 < 5)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t SubscriptionResultType.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1DC582F60 + 4 * byte_1DC63D070[*v0]))(0x6E776F6E6B6E75, 0xE700000000000000);
}

uint64_t sub_1DC582F60()
{
  return 0x73736563637573;
}

uint64_t sub_1DC582F74()
{
  return 1818845542;
}

uint64_t sub_1DC582F84()
{
  return 0x6C65636E6163;
}

unint64_t sub_1DC582F98()
{
  return 0xD000000000000015;
}

void sub_1DC582FB4(char *a1)
{
  sub_1DC542E98(*a1);
}

unint64_t sub_1DC582FC4()
{
  unint64_t result;

  result = qword_1F036D528;
  if (!qword_1F036D528)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for SubscriptionResultType, &type metadata for SubscriptionResultType);
    atomic_store(result, (unint64_t *)&qword_1F036D528);
  }
  return result;
}

void sub_1DC583008()
{
  char *v0;

  sub_1DC602078(*v0);
}

void sub_1DC583010()
{
  __asm { BR              X10 }
}

uint64_t sub_1DC58304C()
{
  sub_1DC62B10C();
  return swift_bridgeObjectRelease();
}

void sub_1DC5830B4(uint64_t a1)
{
  char *v1;

  sub_1DC603A54(a1, *v1);
}

StocksAnalytics::SubscriptionResultType_optional sub_1DC5830BC(Swift::String *a1)
{
  return SubscriptionResultType.init(rawValue:)(*a1);
}

uint64_t sub_1DC5830C8()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_1DC5830F8 + 4 * byte_1DC63D07A[*v0]))();
}

void sub_1DC5830F8(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = 0x73736563637573;
  a1[1] = v1;
}

void sub_1DC583110(_QWORD *a1@<X8>)
{
  *a1 = 1818845542;
  a1[1] = 0xE400000000000000;
}

void sub_1DC583124(_QWORD *a1@<X8>)
{
  *a1 = 0x6C65636E6163;
  a1[1] = 0xE600000000000000;
}

void sub_1DC58313C(_QWORD *a1@<X8>)
{
  *a1 = 0xD000000000000015;
  a1[1] = 0x80000001DC64B920;
}

uint64_t sub_1DC58315C()
{
  sub_1DC5832D0();
  return sub_1DC62B13C();
}

uint64_t sub_1DC5831B8()
{
  sub_1DC5832D0();
  return sub_1DC62B130();
}

uint64_t storeEnumTagSinglePayload for SubscriptionResultType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1DC583250 + 4 * byte_1DC63D084[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1DC583284 + 4 * byte_1DC63D07F[v4]))();
}

uint64_t sub_1DC583284(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC58328C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DC583294);
  return result;
}

uint64_t sub_1DC5832A0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DC5832A8);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1DC5832AC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC5832B4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SubscriptionResultType()
{
  return &type metadata for SubscriptionResultType;
}

unint64_t sub_1DC5832D0()
{
  unint64_t result;

  result = qword_1F036D530;
  if (!qword_1F036D530)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for SubscriptionResultType, &type metadata for SubscriptionResultType);
    atomic_store(result, (unint64_t *)&qword_1F036D530);
  }
  return result;
}

uint64_t ReferringArticleData.articleID.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ReferringArticleData.articleID.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*ReferringArticleData.articleID.modify())()
{
  return nullsub_1;
}

uint64_t ReferringArticleData.publisherArticleVersion.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 16);
}

uint64_t ReferringArticleData.publisherArticleVersion.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = result;
  return result;
}

uint64_t (*ReferringArticleData.publisherArticleVersion.modify())()
{
  return nullsub_1;
}

void ReferringArticleData.role.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 24);
}

_BYTE *ReferringArticleData.role.setter(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 24) = *result;
  return result;
}

uint64_t (*ReferringArticleData.role.modify())()
{
  return nullsub_1;
}

uint64_t ReferringArticleData.init(articleID:publisherArticleVersion:role:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char *a4@<X3>, uint64_t a5@<X8>)
{
  char v5;

  v5 = *a4;
  *(_QWORD *)a5 = result;
  *(_QWORD *)(a5 + 8) = a2;
  *(_QWORD *)(a5 + 16) = a3;
  *(_BYTE *)(a5 + 24) = v5;
  return result;
}

uint64_t sub_1DC5833E0()
{
  _BYTE *v0;
  unint64_t v1;

  v1 = 0xD000000000000017;
  if (*v0 != 1)
    v1 = 1701605234;
  if (*v0)
    return v1;
  else
    return 0x49656C6369747261;
}

uint64_t sub_1DC58343C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1DC583C88(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DC583460()
{
  sub_1DC583628();
  return sub_1DC62B604();
}

uint64_t sub_1DC583488()
{
  sub_1DC583628();
  return sub_1DC62B610();
}

uint64_t ReferringArticleData.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char v9;
  _QWORD v11[2];
  int v12;
  char v13;
  char v14;
  char v15;
  char v16;

  sub_1DC583844(0, &qword_1F036D538, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)v11 - v6;
  v11[0] = *(_QWORD *)(v1 + 16);
  v12 = *(unsigned __int8 *)(v1 + 24);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC583628();
  sub_1DC62B5F8();
  v16 = 0;
  v8 = v11[1];
  sub_1DC62B4B4();
  if (!v8)
  {
    v9 = v12;
    v15 = 1;
    sub_1DC62B4FC();
    v14 = v9;
    v13 = 2;
    sub_1DC4C1314();
    sub_1DC62B4E4();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_1DC583628()
{
  unint64_t result;

  result = qword_1F036D540;
  if (!qword_1F036D540)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC63D338, &type metadata for ReferringArticleData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036D540);
  }
  return result;
}

uint64_t ReferringArticleData.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  char v18;
  char v19;
  char v20;

  sub_1DC583844(0, &qword_1F036D548, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v15 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC583628();
  sub_1DC62B5E0();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v20 = 0;
  v10 = sub_1DC62B424();
  v12 = v11;
  v19 = 1;
  swift_bridgeObjectRetain();
  v16 = sub_1DC62B46C();
  v17 = 2;
  sub_1DC4C1858();
  sub_1DC62B454();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  v14 = v18;
  *(_QWORD *)a2 = v10;
  *(_QWORD *)(a2 + 8) = v12;
  *(_QWORD *)(a2 + 16) = v16;
  *(_BYTE *)(a2 + 24) = v14;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return swift_bridgeObjectRelease();
}

void sub_1DC583844(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1DC583628();
    v7 = a3(a1, &type metadata for ReferringArticleData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1DC5838A4()
{
  unint64_t result;

  result = qword_1EDB105C8;
  if (!qword_1EDB105C8)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for ReferringArticleData, &type metadata for ReferringArticleData);
    atomic_store(result, (unint64_t *)&qword_1EDB105C8);
  }
  return result;
}

unint64_t sub_1DC5838EC()
{
  unint64_t result;

  result = qword_1EDB105C0;
  if (!qword_1EDB105C0)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for ReferringArticleData, &type metadata for ReferringArticleData);
    atomic_store(result, (unint64_t *)&qword_1EDB105C0);
  }
  return result;
}

uint64_t sub_1DC583930@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return ReferringArticleData.init(from:)(a1, a2);
}

uint64_t sub_1DC583944(_QWORD *a1)
{
  return ReferringArticleData.encode(to:)(a1);
}

uint64_t initializeWithCopy for ReferringArticleData(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ReferringArticleData(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  return a1;
}

__n128 __swift_memcpy25_8(uint64_t a1, uint64_t a2)
{
  __n128 result;

  result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for ReferringArticleData(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  return a1;
}

uint64_t getEnumTagSinglePayload for ReferringArticleData(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 25))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ReferringArticleData(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_BYTE *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 25) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 25) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ReferringArticleData()
{
  return &type metadata for ReferringArticleData;
}

uint64_t storeEnumTagSinglePayload for ReferringArticleData.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1DC583B30 + 4 * byte_1DC63D1B5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1DC583B64 + 4 * byte_1DC63D1B0[v4]))();
}

uint64_t sub_1DC583B64(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC583B6C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DC583B74);
  return result;
}

uint64_t sub_1DC583B80(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DC583B88);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1DC583B8C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC583B94(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ReferringArticleData.CodingKeys()
{
  return &type metadata for ReferringArticleData.CodingKeys;
}

unint64_t sub_1DC583BB4()
{
  unint64_t result;

  result = qword_1F036D550;
  if (!qword_1F036D550)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC63D310, &type metadata for ReferringArticleData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036D550);
  }
  return result;
}

unint64_t sub_1DC583BFC()
{
  unint64_t result;

  result = qword_1F036D558;
  if (!qword_1F036D558)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC63D280, &type metadata for ReferringArticleData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036D558);
  }
  return result;
}

unint64_t sub_1DC583C44()
{
  unint64_t result;

  result = qword_1F036D560;
  if (!qword_1F036D560)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC63D2A8, &type metadata for ReferringArticleData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036D560);
  }
  return result;
}

uint64_t sub_1DC583C88(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x49656C6369747261 && a2 == 0xE900000000000044;
  if (v2 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x80000001DC64BCE0 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1701605234 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_1DC62B520();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t AdPositionData.position.getter()
{
  unsigned int *v0;

  return *v0;
}

uint64_t AdPositionData.position.setter(uint64_t result)
{
  _DWORD *v1;

  *v1 = result;
  return result;
}

uint64_t (*AdPositionData.position.modify())()
{
  return nullsub_1;
}

uint64_t AdPositionData.init(position:)@<X0>(uint64_t result@<X0>, _DWORD *a2@<X8>)
{
  *a2 = result;
  return result;
}

uint64_t sub_1DC583DF8()
{
  sub_1DC583F38();
  return sub_1DC62B604();
}

uint64_t sub_1DC583E20()
{
  sub_1DC583F38();
  return sub_1DC62B610();
}

uint64_t AdPositionData.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  sub_1DC58409C(0, &qword_1EDB11C08, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC583F38();
  sub_1DC62B5F8();
  sub_1DC62B4F0();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_1DC583F38()
{
  unint64_t result;

  result = qword_1EDB11BE8;
  if (!qword_1EDB11BE8)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC63D4FC, &type metadata for AdPositionData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB11BE8);
  }
  return result;
}

uint64_t AdPositionData.init(from:)@<X0>(_QWORD *a1@<X0>, _DWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int v10;
  uint64_t v12;

  sub_1DC58409C(0, &qword_1F036D568, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v12 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC583F38();
  sub_1DC62B5E0();
  if (!v2)
  {
    v10 = sub_1DC62B460();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *a2 = v10;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1DC58409C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1DC583F38();
    v7 = a3(a1, &type metadata for AdPositionData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1DC584100@<X0>(_QWORD *a1@<X0>, _DWORD *a2@<X8>)
{
  return AdPositionData.init(from:)(a1, a2);
}

uint64_t sub_1DC584114(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  sub_1DC58409C(0, &qword_1EDB11C08, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC583F38();
  sub_1DC62B5F8();
  sub_1DC62B4F0();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

ValueMetadata *type metadata accessor for AdPositionData()
{
  return &type metadata for AdPositionData;
}

uint64_t storeEnumTagSinglePayload for AdPositionData.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1DC584254 + 4 * byte_1DC63D388[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1DC584274 + 4 * byte_1DC63D38D[v4]))();
}

_BYTE *sub_1DC584254(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1DC584274(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1DC58427C(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1DC584284(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1DC58428C(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1DC584294(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for AdPositionData.CodingKeys()
{
  return &type metadata for AdPositionData.CodingKeys;
}

unint64_t sub_1DC5842B4()
{
  unint64_t result;

  result = qword_1F036D570;
  if (!qword_1F036D570)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC63D4D4, &type metadata for AdPositionData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036D570);
  }
  return result;
}

unint64_t sub_1DC5842FC()
{
  unint64_t result;

  result = qword_1EDB11BF8;
  if (!qword_1EDB11BF8)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC63D444, &type metadata for AdPositionData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB11BF8);
  }
  return result;
}

unint64_t sub_1DC584344()
{
  unint64_t result;

  result = qword_1EDB11BF0;
  if (!qword_1EDB11BF0)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC63D46C, &type metadata for AdPositionData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB11BF0);
  }
  return result;
}

StocksAnalytics::SelectedResultActionType_optional __swiftcall SelectedResultActionType.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  StocksAnalytics::SelectedResultActionType_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1DC62B3DC();
  result.value = swift_bridgeObjectRelease();
  v5 = 4;
  if (v3 < 4)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t SelectedResultActionType.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1DC584410 + 4 * byte_1DC63D550[*v0]))(0x6E776F6E6B6E75, 0xE700000000000000);
}

uint64_t sub_1DC584410()
{
  return 0x6863746177;
}

uint64_t sub_1DC584424()
{
  return 0x68637461776E75;
}

uint64_t sub_1DC584438()
{
  return 0x626D795377656976;
}

void sub_1DC58445C(char *a1)
{
  sub_1DC542A6C(*a1);
}

unint64_t sub_1DC58446C()
{
  unint64_t result;

  result = qword_1F036D578;
  if (!qword_1F036D578)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for SelectedResultActionType, &type metadata for SelectedResultActionType);
    atomic_store(result, (unint64_t *)&qword_1F036D578);
  }
  return result;
}

void sub_1DC5844B0()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1DC62B5B0();
  __asm { BR              X9 }
}

uint64_t sub_1DC5844FC()
{
  sub_1DC62B10C();
  swift_bridgeObjectRelease();
  return sub_1DC62B5C8();
}

void sub_1DC584570()
{
  __asm { BR              X10 }
}

uint64_t sub_1DC5845AC()
{
  sub_1DC62B10C();
  return swift_bridgeObjectRelease();
}

void sub_1DC58460C()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1DC62B5B0();
  __asm { BR              X9 }
}

uint64_t sub_1DC584654()
{
  sub_1DC62B10C();
  swift_bridgeObjectRelease();
  return sub_1DC62B5C8();
}

StocksAnalytics::SelectedResultActionType_optional sub_1DC5846C8(Swift::String *a1)
{
  return SelectedResultActionType.init(rawValue:)(*a1);
}

uint64_t sub_1DC5846D4()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_1DC584704 + 4 * byte_1DC63D560[*v0]))();
}

void sub_1DC584704(_QWORD *a1@<X8>)
{
  *a1 = 0x6863746177;
  a1[1] = 0xE500000000000000;
}

void sub_1DC58471C(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = 0x68637461776E75;
  a1[1] = v1;
}

void sub_1DC584734(char *a1@<X8>)
{
  strcpy(a1, "viewSymbolFeed");
  a1[15] = -18;
}

uint64_t sub_1DC58475C()
{
  sub_1DC5848D0();
  return sub_1DC62B13C();
}

uint64_t sub_1DC5847B8()
{
  sub_1DC5848D0();
  return sub_1DC62B130();
}

uint64_t storeEnumTagSinglePayload for SelectedResultActionType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1DC584850 + 4 * byte_1DC63D569[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1DC584884 + 4 * byte_1DC63D564[v4]))();
}

uint64_t sub_1DC584884(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC58488C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DC584894);
  return result;
}

uint64_t sub_1DC5848A0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DC5848A8);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1DC5848AC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC5848B4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SelectedResultActionType()
{
  return &type metadata for SelectedResultActionType;
}

unint64_t sub_1DC5848D0()
{
  unint64_t result;

  result = qword_1F036D580;
  if (!qword_1F036D580)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for SelectedResultActionType, &type metadata for SelectedResultActionType);
    atomic_store(result, (unint64_t *)&qword_1F036D580);
  }
  return result;
}

uint64_t sub_1DC584914(uint64_t a1)
{
  return sub_1DC4BE784(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], qword_1F036D588, MEMORY[0x1E0CF8078]);
}

uint64_t static AdInterstitialEngagementEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C2FE8(&qword_1F03690E0, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1F036D588, a1);
}

uint64_t sub_1DC584954(uint64_t a1)
{
  return sub_1DC4BE784(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], qword_1F036D5A0, MEMORY[0x1E0CF8380]);
}

uint64_t static AdInterstitialEngagementEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C2FE8(&qword_1F03690E8, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1F036D5A0, a1);
}

uint64_t AdInterstitialEngagementEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C37DC((uint64_t (*)(_QWORD))sub_1DC4B6600, a1);
}

uint64_t AdInterstitialEngagementEvent.eventData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  sub_1DC4B6600();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*AdInterstitialEngagementEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t AdInterstitialEngagementEvent.adData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AdInterstitialEngagementEvent(0) + 20);
  sub_1DC4B4B50(0, &qword_1F036B380, (void (*)(void))sub_1DC51F738, (void (*)(void))sub_1DC51F77C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t type metadata accessor for AdInterstitialEngagementEvent(uint64_t a1)
{
  return sub_1DC4B385C(a1, qword_1F036D640);
}

uint64_t AdInterstitialEngagementEvent.adData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AdInterstitialEngagementEvent(0) + 20);
  sub_1DC4B4B50(0, &qword_1F036B380, (void (*)(void))sub_1DC51F738, (void (*)(void))sub_1DC51F77C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*AdInterstitialEngagementEvent.adData.modify())()
{
  type metadata accessor for AdInterstitialEngagementEvent(0);
  return nullsub_1;
}

uint64_t AdInterstitialEngagementEvent.adEngagementData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AdInterstitialEngagementEvent(0) + 24);
  sub_1DC4B4B50(0, &qword_1F036D5B8, (void (*)(void))sub_1DC584B5C, (void (*)(void))sub_1DC584BA0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

unint64_t sub_1DC584B5C()
{
  unint64_t result;

  result = qword_1F036D5C0;
  if (!qword_1F036D5C0)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for AdEngagementData, &type metadata for AdEngagementData);
    atomic_store(result, (unint64_t *)&qword_1F036D5C0);
  }
  return result;
}

unint64_t sub_1DC584BA0()
{
  unint64_t result;

  result = qword_1F036D5C8;
  if (!qword_1F036D5C8)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for AdEngagementData, &type metadata for AdEngagementData);
    atomic_store(result, (unint64_t *)&qword_1F036D5C8);
  }
  return result;
}

uint64_t AdInterstitialEngagementEvent.adEngagementData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AdInterstitialEngagementEvent(0) + 24);
  sub_1DC4B4B50(0, &qword_1F036D5B8, (void (*)(void))sub_1DC584B5C, (void (*)(void))sub_1DC584BA0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*AdInterstitialEngagementEvent.adEngagementData.modify())()
{
  type metadata accessor for AdInterstitialEngagementEvent(0);
  return nullsub_1;
}

uint64_t AdInterstitialEngagementEvent.feedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AdInterstitialEngagementEvent(0) + 28);
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t AdInterstitialEngagementEvent.feedData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AdInterstitialEngagementEvent(0) + 28);
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*AdInterstitialEngagementEvent.feedData.modify())()
{
  type metadata accessor for AdInterstitialEngagementEvent(0);
  return nullsub_1;
}

uint64_t AdInterstitialEngagementEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v2 = *MEMORY[0x1E0CF8128];
  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
  v4 = (int *)type metadata accessor for AdInterstitialEngagementEvent(0);
  v5 = a1 + v4[5];
  sub_1DC4B4B50(0, &qword_1F036B380, (void (*)(void))sub_1DC51F738, (void (*)(void))sub_1DC51F77C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 104))(v5, v2, v6);
  v7 = a1 + v4[6];
  sub_1DC4B4B50(0, &qword_1F036D5B8, (void (*)(void))sub_1DC584B5C, (void (*)(void))sub_1DC584BA0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 104))(v7, v2, v8);
  v9 = a1 + v4[7];
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 104))(v9, v2, v10);
}

uint64_t AdInterstitialEngagementEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C37DC((uint64_t (*)(_QWORD))MEMORY[0x1E0CF8670], a1);
}

uint64_t AdInterstitialEngagementEvent.Model.adData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  __int16 v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;

  v3 = v1 + *(int *)(type metadata accessor for AdInterstitialEngagementEvent.Model(0) + 20);
  v4 = *(_QWORD *)(v3 + 8);
  v5 = *(_WORD *)(v3 + 16);
  v6 = *(_QWORD *)(v3 + 24);
  v7 = *(_QWORD *)(v3 + 64);
  *(_QWORD *)a1 = *(_QWORD *)v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_WORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  v8 = *(_OWORD *)(v3 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(v3 + 32);
  *(_OWORD *)(a1 + 48) = v8;
  *(_QWORD *)(a1 + 64) = v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t type metadata accessor for AdInterstitialEngagementEvent.Model(uint64_t a1)
{
  return sub_1DC4B385C(a1, qword_1F036D6D8);
}

uint64_t AdInterstitialEngagementEvent.Model.adEngagementData.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for AdInterstitialEngagementEvent.Model(0);
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 24));
  return result;
}

uint64_t AdInterstitialEngagementEvent.Model.feedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = v1 + *(int *)(type metadata accessor for AdInterstitialEngagementEvent.Model(0) + 28);
  v5 = *(_QWORD *)(v3 + 8);
  v4 = *(_QWORD *)(v3 + 16);
  *(_BYTE *)a1 = *(_BYTE *)v3;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v4;
  return swift_bridgeObjectRetain();
}

__n128 AdInterstitialEngagementEvent.Model.init(eventData:adData:adEngagementData:feedData:)@<Q0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, char *a3@<X2>, char *a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  __int16 v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  int *v16;
  uint64_t v17;
  __n128 result;
  uint64_t v19;
  __n128 v20;
  __int128 v21;
  uint64_t v22;

  v7 = *a2;
  v8 = a2[1];
  v9 = *((_WORD *)a2 + 8);
  v20 = *(__n128 *)(a2 + 5);
  v21 = *(_OWORD *)(a2 + 3);
  v10 = a2[7];
  v11 = a2[8];
  v12 = *a3;
  v13 = *a4;
  v14 = *((_QWORD *)a4 + 1);
  v22 = *((_QWORD *)a4 + 2);
  v15 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(a5, a1, v15);
  v16 = (int *)type metadata accessor for AdInterstitialEngagementEvent.Model(0);
  v17 = a5 + v16[5];
  *(_QWORD *)v17 = v7;
  *(_QWORD *)(v17 + 8) = v8;
  *(_WORD *)(v17 + 16) = v9;
  *(_OWORD *)(v17 + 24) = v21;
  result = v20;
  *(__n128 *)(v17 + 40) = v20;
  *(_QWORD *)(v17 + 56) = v10;
  *(_QWORD *)(v17 + 64) = v11;
  *(_BYTE *)(a5 + v16[6]) = v12;
  v19 = a5 + v16[7];
  *(_BYTE *)v19 = v13;
  *(_QWORD *)(v19 + 8) = v14;
  *(_QWORD *)(v19 + 16) = v22;
  return result;
}

uint64_t sub_1DC58507C()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1DC5850B0 + 4 * byte_1DC63D6A0[*v0]))(0x746144746E657665, 0xE900000000000061);
}

uint64_t sub_1DC5850B0()
{
  return 0x617461446461;
}

unint64_t sub_1DC5850C4()
{
  return 0xD000000000000010;
}

uint64_t sub_1DC5850E0()
{
  return 0x6174614464656566;
}

uint64_t sub_1DC5850F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1DC586CD4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DC58511C()
{
  sub_1DC58538C();
  return sub_1DC62B604();
}

uint64_t sub_1DC585144()
{
  sub_1DC58538C();
  return sub_1DC62B610();
}

uint64_t AdInterstitialEngagementEvent.Model.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int *v10;
  uint64_t *v11;
  uint64_t v12;
  __int16 v13;
  __int128 v14;
  char *v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;

  v3 = v1;
  sub_1DC58575C(0, &qword_1F036D5D0, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v20 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC58538C();
  sub_1DC62B5F8();
  LOBYTE(v21) = 0;
  sub_1DC62ABA8();
  sub_1DC4B6788(&qword_1EDB0E8A8, MEMORY[0x1E0CF8680]);
  sub_1DC62B4E4();
  if (!v2)
  {
    v10 = (int *)type metadata accessor for AdInterstitialEngagementEvent.Model(0);
    v11 = (uint64_t *)(v3 + v10[5]);
    v12 = v11[1];
    v13 = *((_WORD *)v11 + 8);
    v21 = *v11;
    v22 = v12;
    LOWORD(v23) = v13;
    v14 = *(_OWORD *)(v11 + 5);
    v24 = *(_OWORD *)(v11 + 3);
    v25 = v14;
    v26 = *(_OWORD *)(v11 + 7);
    HIBYTE(v20) = 1;
    sub_1DC51F77C();
    sub_1DC62B4E4();
    LOBYTE(v21) = *(_BYTE *)(v3 + v10[6]);
    HIBYTE(v20) = 2;
    sub_1DC584BA0();
    sub_1DC62B4E4();
    v15 = (char *)(v3 + v10[7]);
    v16 = *v15;
    v18 = *((_QWORD *)v15 + 1);
    v17 = *((_QWORD *)v15 + 2);
    LOBYTE(v21) = v16;
    v22 = v18;
    v23 = v17;
    HIBYTE(v20) = 3;
    sub_1DC4BEFD8();
    sub_1DC62B4E4();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1DC58538C()
{
  unint64_t result;

  result = qword_1F036D5D8;
  if (!qword_1F036D5D8)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC63D8B4, &type metadata for AdInterstitialEngagementEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036D5D8);
  }
  return result;
}

uint64_t AdInterstitialEngagementEvent.Model.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int16 v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  char v36;

  v24 = a2;
  v3 = sub_1DC62ABA8();
  v25 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v28 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC58575C(0, &qword_1F036D5E0, MEMORY[0x1E0DED048]);
  v26 = v5;
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v23 - v7;
  v9 = (int *)type metadata accessor for AdInterstitialEngagementEvent.Model(0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC58538C();
  v27 = v8;
  v12 = (uint64_t)v29;
  sub_1DC62B5E0();
  if (v12)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v29 = a1;
  v13 = v11;
  v14 = v25;
  LOBYTE(v30) = 0;
  sub_1DC4B6788(&qword_1EDB0E278, MEMORY[0x1E0CF8688]);
  v15 = v26;
  sub_1DC62B454();
  (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v13, v28, v3);
  v36 = 1;
  sub_1DC51F738();
  sub_1DC62B454();
  v16 = v31;
  v17 = v32;
  v18 = &v13[v9[5]];
  *(_QWORD *)v18 = v30;
  *((_QWORD *)v18 + 1) = v16;
  *((_WORD *)v18 + 8) = v17;
  *(_OWORD *)(v18 + 24) = v33;
  *(_OWORD *)(v18 + 40) = v34;
  *(_OWORD *)(v18 + 56) = v35;
  v36 = 2;
  sub_1DC584B5C();
  sub_1DC62B454();
  v13[v9[6]] = v30;
  v36 = 3;
  sub_1DC4BEF94();
  sub_1DC62B454();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v27, v15);
  v19 = v31;
  v20 = v32;
  v21 = v9[7];
  *(_BYTE *)v21 = v30;
  *(_QWORD *)(v21 + 8) = v19;
  *(_QWORD *)(v21 + 16) = v20;
  sub_1DC5857B8(0, v24);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v29);
  return sub_1DC5857FC(0);
}

void sub_1DC58575C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1DC58538C();
    v7 = a3(a1, &type metadata for AdInterstitialEngagementEvent.Model.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1DC5857B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for AdInterstitialEngagementEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DC5857FC(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for AdInterstitialEngagementEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1DC585838@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return AdInterstitialEngagementEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_1DC58584C(_QWORD *a1)
{
  return AdInterstitialEngagementEvent.Model.encode(to:)(a1);
}

uint64_t sub_1DC585860@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4B2C68(&qword_1F03690E0, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1F036D588, a1);
}

uint64_t sub_1DC585884@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4B2C68(&qword_1F03690E8, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1F036D5A0, a1);
}

uint64_t sub_1DC5858A8@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v4 = *MEMORY[0x1E0CF8128];
  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 104))(a2, v4, v5);
  v6 = a2 + a1[5];
  sub_1DC4B4B50(0, &qword_1F036B380, (void (*)(void))sub_1DC51F738, (void (*)(void))sub_1DC51F77C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 104))(v6, v4, v7);
  v8 = a2 + a1[6];
  sub_1DC4B4B50(0, &qword_1F036D5B8, (void (*)(void))sub_1DC584B5C, (void (*)(void))sub_1DC584BA0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 104))(v8, v4, v9);
  v10 = a2 + a1[7];
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 104))(v10, v4, v11);
}

uint64_t *initializeBufferWithCopyOfBuffer for AdInterstitialEngagementEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v20 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v20 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_1DC4B6600();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    sub_1DC4B4B50(0, &qword_1F036B380, (void (*)(void))sub_1DC51F738, (void (*)(void))sub_1DC51F77C);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = a3[6];
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    sub_1DC4B4B50(0, &qword_1F036D5B8, (void (*)(void))sub_1DC584B5C, (void (*)(void))sub_1DC584BA0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
    v16 = a3[7];
    v17 = (char *)a1 + v16;
    v18 = (char *)a2 + v16;
    sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
  }
  return a1;
}

uint64_t destroy for AdInterstitialEngagementEvent(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + a2[5];
  sub_1DC4B4B50(0, &qword_1F036B380, (void (*)(void))sub_1DC51F738, (void (*)(void))sub_1DC51F77C);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = a1 + a2[6];
  sub_1DC4B4B50(0, &qword_1F036D5B8, (void (*)(void))sub_1DC584B5C, (void (*)(void))sub_1DC584BA0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  v9 = a1 + a2[7];
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
}

uint64_t initializeWithCopy for AdInterstitialEngagementEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1DC4B4B50(0, &qword_1F036B380, (void (*)(void))sub_1DC51F738, (void (*)(void))sub_1DC51F77C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1DC4B4B50(0, &qword_1F036D5B8, (void (*)(void))sub_1DC584B5C, (void (*)(void))sub_1DC584BA0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
  return a1;
}

uint64_t assignWithCopy for AdInterstitialEngagementEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1DC4B4B50(0, &qword_1F036B380, (void (*)(void))sub_1DC51F738, (void (*)(void))sub_1DC51F77C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1DC4B4B50(0, &qword_1F036D5B8, (void (*)(void))sub_1DC584B5C, (void (*)(void))sub_1DC584BA0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 24))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 24))(v16, v17, v18);
  return a1;
}

uint64_t initializeWithTake for AdInterstitialEngagementEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1DC4B4B50(0, &qword_1F036B380, (void (*)(void))sub_1DC51F738, (void (*)(void))sub_1DC51F77C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1DC4B4B50(0, &qword_1F036D5B8, (void (*)(void))sub_1DC584B5C, (void (*)(void))sub_1DC584BA0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
  return a1;
}

uint64_t assignWithTake for AdInterstitialEngagementEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1DC4B4B50(0, &qword_1F036B380, (void (*)(void))sub_1DC51F738, (void (*)(void))sub_1DC51F77C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1DC4B4B50(0, &qword_1F036D5B8, (void (*)(void))sub_1DC584B5C, (void (*)(void))sub_1DC584BA0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 40))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 40))(v16, v17, v18);
  return a1;
}

uint64_t getEnumTagSinglePayload for AdInterstitialEngagementEvent()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC586140(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  sub_1DC4B6600();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    sub_1DC4B4B50(0, &qword_1F036B380, (void (*)(void))sub_1DC51F738, (void (*)(void))sub_1DC51F77C);
    v12 = *(_QWORD *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
    {
      v8 = v11;
      v13 = a3[5];
    }
    else
    {
      sub_1DC4B4B50(0, &qword_1F036D5B8, (void (*)(void))sub_1DC584B5C, (void (*)(void))sub_1DC584BA0);
      v12 = *(_QWORD *)(v14 - 8);
      if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
      {
        v8 = v14;
        v13 = a3[6];
      }
      else
      {
        sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
        v8 = v15;
        v12 = *(_QWORD *)(v15 - 8);
        v13 = a3[7];
      }
    }
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t storeEnumTagSinglePayload for AdInterstitialEngagementEvent()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC586268(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  sub_1DC4B6600();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    sub_1DC4B4B50(0, &qword_1F036B380, (void (*)(void))sub_1DC51F738, (void (*)(void))sub_1DC51F77C);
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = a4[5];
    }
    else
    {
      sub_1DC4B4B50(0, &qword_1F036D5B8, (void (*)(void))sub_1DC584B5C, (void (*)(void))sub_1DC584BA0);
      v14 = *(_QWORD *)(v16 - 8);
      if (*(_DWORD *)(v14 + 84) == a3)
      {
        v10 = v16;
        v15 = a4[6];
      }
      else
      {
        sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
        v10 = v17;
        v14 = *(_QWORD *)(v17 - 8);
        v15 = a4[7];
      }
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_1DC58638C()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  sub_1DC4B6600();
  if (v0 <= 0x3F)
  {
    sub_1DC4B4B50(319, &qword_1F036B380, (void (*)(void))sub_1DC51F738, (void (*)(void))sub_1DC51F77C);
    if (v1 <= 0x3F)
    {
      sub_1DC4B4B50(319, &qword_1F036D5B8, (void (*)(void))sub_1DC584B5C, (void (*)(void))sub_1DC584BA0);
      if (v2 <= 0x3F)
      {
        sub_1DC4B4B50(319, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
        if (v3 <= 0x3F)
          swift_initStructMetadata();
      }
    }
  }
}

_QWORD *initializeBufferWithCopyOfBuffer for AdInterstitialEngagementEvent.Model(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v21 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v21 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1DC62ABA8();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = a3[6];
    v10 = (char *)a1 + v8;
    v11 = (char *)a2 + v8;
    v12 = *((_QWORD *)v11 + 1);
    *(_QWORD *)v10 = *(_QWORD *)v11;
    *((_QWORD *)v10 + 1) = v12;
    *((_WORD *)v10 + 8) = *((_WORD *)v11 + 8);
    v13 = *((_QWORD *)v11 + 4);
    *((_QWORD *)v10 + 3) = *((_QWORD *)v11 + 3);
    *((_QWORD *)v10 + 4) = v13;
    v14 = *((_QWORD *)v11 + 6);
    *((_QWORD *)v10 + 5) = *((_QWORD *)v11 + 5);
    *((_QWORD *)v10 + 6) = v14;
    v15 = *((_QWORD *)v11 + 7);
    v16 = *((_QWORD *)v11 + 8);
    LOBYTE(v11) = *((_BYTE *)a2 + v9);
    *((_QWORD *)v10 + 7) = v15;
    *((_QWORD *)v10 + 8) = v16;
    *((_BYTE *)a1 + v9) = (_BYTE)v11;
    v17 = a3[7];
    v18 = (char *)a1 + v17;
    v19 = (char *)a2 + v17;
    *v18 = *v19;
    v20 = *((_QWORD *)v19 + 2);
    *((_QWORD *)v18 + 1) = *((_QWORD *)v19 + 1);
    *((_QWORD *)v18 + 2) = v20;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for AdInterstitialEngagementEvent.Model(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for AdInterstitialEngagementEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v6 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = a2 + v7;
  v11 = *(_QWORD *)(v10 + 8);
  *(_QWORD *)v9 = *(_QWORD *)v10;
  *(_QWORD *)(v9 + 8) = v11;
  *(_WORD *)(v9 + 16) = *(_WORD *)(v10 + 16);
  v12 = *(_QWORD *)(v10 + 32);
  *(_QWORD *)(v9 + 24) = *(_QWORD *)(v10 + 24);
  *(_QWORD *)(v9 + 32) = v12;
  v13 = *(_QWORD *)(v10 + 48);
  *(_QWORD *)(v9 + 40) = *(_QWORD *)(v10 + 40);
  *(_QWORD *)(v9 + 48) = v13;
  v14 = *(_QWORD *)(v10 + 56);
  v15 = *(_QWORD *)(v10 + 64);
  LOBYTE(v10) = *(_BYTE *)(a2 + v8);
  *(_QWORD *)(v9 + 56) = v14;
  *(_QWORD *)(v9 + 64) = v15;
  *(_BYTE *)(a1 + v8) = v10;
  v16 = a3[7];
  v17 = a1 + v16;
  v18 = a2 + v16;
  *(_BYTE *)v17 = *(_BYTE *)v18;
  v19 = *(_QWORD *)(v18 + 16);
  *(_QWORD *)(v17 + 8) = *(_QWORD *)(v18 + 8);
  *(_QWORD *)(v17 + 16) = v19;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for AdInterstitialEngagementEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v6 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_QWORD *)v8 = *(_QWORD *)(a2 + v7);
  *(_QWORD *)(v8 + 8) = *(_QWORD *)(a2 + v7 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v8 + 16) = *(_BYTE *)(v9 + 16);
  *(_BYTE *)(v8 + 17) = *(_BYTE *)(v9 + 17);
  *(_QWORD *)(v8 + 24) = *(_QWORD *)(v9 + 24);
  *(_QWORD *)(v8 + 32) = *(_QWORD *)(v9 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v8 + 40) = *(_QWORD *)(v9 + 40);
  *(_QWORD *)(v8 + 48) = *(_QWORD *)(v9 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v8 + 56) = *(_QWORD *)(v9 + 56);
  *(_QWORD *)(v8 + 64) = *(_QWORD *)(v9 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + a3[6]) = *(_BYTE *)(a2 + a3[6]);
  v10 = a3[7];
  v11 = a1 + v10;
  v12 = a2 + v10;
  *(_BYTE *)v11 = *(_BYTE *)v12;
  *(_QWORD *)(v11 + 8) = *(_QWORD *)(v12 + 8);
  *(_QWORD *)(v11 + 16) = *(_QWORD *)(v12 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for AdInterstitialEngagementEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v6 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = a2 + v7;
  *(_QWORD *)(v9 + 64) = *(_QWORD *)(v10 + 64);
  v11 = *(_OWORD *)(v10 + 48);
  *(_OWORD *)(v9 + 32) = *(_OWORD *)(v10 + 32);
  *(_OWORD *)(v9 + 48) = v11;
  v12 = *(_OWORD *)(v10 + 16);
  *(_OWORD *)v9 = *(_OWORD *)v10;
  *(_OWORD *)(v9 + 16) = v12;
  *(_BYTE *)(a1 + v8) = *(_BYTE *)(a2 + v8);
  v13 = a3[7];
  v14 = a1 + v13;
  v15 = a2 + v13;
  *(_QWORD *)(v14 + 16) = *(_QWORD *)(v15 + 16);
  *(_OWORD *)v14 = *(_OWORD *)v15;
  return a1;
}

uint64_t assignWithTake for AdInterstitialEngagementEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v6 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = *(_QWORD *)(a2 + v7 + 8);
  *(_QWORD *)v8 = *(_QWORD *)(a2 + v7);
  *(_QWORD *)(v8 + 8) = v10;
  swift_bridgeObjectRelease();
  *(_WORD *)(v8 + 16) = *(_WORD *)(v9 + 16);
  v11 = *(_QWORD *)(v9 + 32);
  *(_QWORD *)(v8 + 24) = *(_QWORD *)(v9 + 24);
  *(_QWORD *)(v8 + 32) = v11;
  swift_bridgeObjectRelease();
  v12 = *(_QWORD *)(v9 + 48);
  *(_QWORD *)(v8 + 40) = *(_QWORD *)(v9 + 40);
  *(_QWORD *)(v8 + 48) = v12;
  swift_bridgeObjectRelease();
  v13 = *(_QWORD *)(v9 + 64);
  *(_QWORD *)(v8 + 56) = *(_QWORD *)(v9 + 56);
  *(_QWORD *)(v8 + 64) = v13;
  swift_bridgeObjectRelease();
  v14 = a3[7];
  *(_BYTE *)(a1 + a3[6]) = *(_BYTE *)(a2 + a3[6]);
  v15 = a1 + v14;
  v16 = a2 + v14;
  *(_BYTE *)v15 = *(_BYTE *)v16;
  v18 = *(_QWORD *)(v16 + 8);
  v17 = *(_QWORD *)(v16 + 16);
  *(_QWORD *)(v15 + 8) = v18;
  *(_QWORD *)(v15 + 16) = v17;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for AdInterstitialEngagementEvent.Model()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC5869A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_1DC62ABA8();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for AdInterstitialEngagementEvent.Model()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC586A30(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_1DC62ABA8();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  return result;
}

uint64_t sub_1DC586AAC()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1DC62ABA8();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for AdInterstitialEngagementEvent.Model.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1DC586B7C + 4 * byte_1DC63D6A9[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1DC586BB0 + 4 * byte_1DC63D6A4[v4]))();
}

uint64_t sub_1DC586BB0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC586BB8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DC586BC0);
  return result;
}

uint64_t sub_1DC586BCC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DC586BD4);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1DC586BD8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC586BE0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AdInterstitialEngagementEvent.Model.CodingKeys()
{
  return &type metadata for AdInterstitialEngagementEvent.Model.CodingKeys;
}

unint64_t sub_1DC586C00()
{
  unint64_t result;

  result = qword_1F036D718;
  if (!qword_1F036D718)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC63D88C, &type metadata for AdInterstitialEngagementEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036D718);
  }
  return result;
}

unint64_t sub_1DC586C48()
{
  unint64_t result;

  result = qword_1F036D720;
  if (!qword_1F036D720)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC63D7FC, &type metadata for AdInterstitialEngagementEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036D720);
  }
  return result;
}

unint64_t sub_1DC586C90()
{
  unint64_t result;

  result = qword_1F036D728;
  if (!qword_1F036D728)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC63D824, &type metadata for AdInterstitialEngagementEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036D728);
  }
  return result;
}

uint64_t sub_1DC586CD4(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x746144746E657665 && a2 == 0xE900000000000061;
  if (v2 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x617461446461 && a2 == 0xE600000000000000 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001DC64D100 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6174614464656566 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_1DC62B520();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_1DC586E88()
{
  uint64_t v0;
  uint64_t v1;

  v0 = sub_1DC62A788();
  __swift_allocate_value_buffer(v0, qword_1EDB0FF58);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1EDB0FF58);
  *(_QWORD *)v1 = 0x7364612E6D6F63;
  *(_QWORD *)(v1 + 8) = 0xE700000000000000;
  *(_QWORD *)(v1 + 16) = 3;
  *(_BYTE *)(v1 + 24) = 0;
  return (*(uint64_t (**)(void))(*(_QWORD *)(v0 - 8) + 104))();
}

uint64_t static AdJournalEntryEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C2FE8(&qword_1EDB0FF70, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1EDB0FF58, a1);
}

uint64_t sub_1DC586F28()
{
  uint64_t v0;
  uint64_t v1;

  v0 = sub_1DC62A998();
  __swift_allocate_value_buffer(v0, qword_1EDB0FF78);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1EDB0FF78);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v0 - 8) + 104))(v1, *MEMORY[0x1E0CF8378], v0);
}

uint64_t static AdJournalEntryEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C2FE8(&qword_1EDB0FF90, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1EDB0FF78, a1);
}

uint64_t AdJournalEntryEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C37DC((uint64_t (*)(_QWORD))sub_1DC4B6600, a1);
}

uint64_t AdJournalEntryEvent.eventData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  sub_1DC4B6600();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*AdJournalEntryEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t AdJournalEntryEvent.adUserData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AdJournalEntryEvent(0) + 20);
  sub_1DC4B4B50(0, &qword_1EDB0E250, (void (*)(void))sub_1DC4C06CC, (void (*)(void))sub_1DC4C0710);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t type metadata accessor for AdJournalEntryEvent(uint64_t a1)
{
  return sub_1DC4B385C(a1, qword_1EDB0FF98);
}

uint64_t AdJournalEntryEvent.adUserData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AdJournalEntryEvent(0) + 20);
  sub_1DC4B4B50(0, &qword_1EDB0E250, (void (*)(void))sub_1DC4C06CC, (void (*)(void))sub_1DC4C0710);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*AdJournalEntryEvent.adUserData.modify())()
{
  type metadata accessor for AdJournalEntryEvent(0);
  return nullsub_1;
}

uint64_t AdJournalEntryEvent.channelData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AdJournalEntryEvent(0) + 24);
  sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t AdJournalEntryEvent.channelData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AdJournalEntryEvent(0) + 24);
  sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*AdJournalEntryEvent.channelData.modify())()
{
  type metadata accessor for AdJournalEntryEvent(0);
  return nullsub_1;
}

uint64_t AdJournalEntryEvent.adCreativeData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AdJournalEntryEvent(0) + 28);
  sub_1DC4B4B50(0, &qword_1EDB0E798, (void (*)(void))sub_1DC5297C4, (void (*)(void))sub_1DC52980C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t AdJournalEntryEvent.adCreativeData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AdJournalEntryEvent(0) + 28);
  sub_1DC4B4B50(0, &qword_1EDB0E798, (void (*)(void))sub_1DC5297C4, (void (*)(void))sub_1DC52980C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*AdJournalEntryEvent.adCreativeData.modify())()
{
  type metadata accessor for AdJournalEntryEvent(0);
  return nullsub_1;
}

uint64_t AdJournalEntryEvent.adPlacementData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AdJournalEntryEvent(0) + 32);
  sub_1DC4B4B50(0, &qword_1EDB0E7B0, (void (*)(void))sub_1DC4D6C30, (void (*)(void))sub_1DC4D6C74);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t AdJournalEntryEvent.adPlacementData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AdJournalEntryEvent(0) + 32);
  sub_1DC4B4B50(0, &qword_1EDB0E7B0, (void (*)(void))sub_1DC4D6C30, (void (*)(void))sub_1DC4D6C74);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*AdJournalEntryEvent.adPlacementData.modify())()
{
  type metadata accessor for AdJournalEntryEvent(0);
  return nullsub_1;
}

uint64_t AdJournalEntryEvent.adJournalEntryData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AdJournalEntryEvent(0) + 36);
  sub_1DC4B4B50(0, &qword_1EDB0E7E0, (void (*)(void))sub_1DC587454, (void (*)(void))sub_1DC587498);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

unint64_t sub_1DC587454()
{
  unint64_t result;

  result = qword_1EDB0FA90;
  if (!qword_1EDB0FA90)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for AdJournalEntryData, &type metadata for AdJournalEntryData);
    atomic_store(result, (unint64_t *)&qword_1EDB0FA90);
  }
  return result;
}

unint64_t sub_1DC587498()
{
  unint64_t result;

  result = qword_1EDB0FA88;
  if (!qword_1EDB0FA88)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for AdJournalEntryData, &type metadata for AdJournalEntryData);
    atomic_store(result, (unint64_t *)&qword_1EDB0FA88);
  }
  return result;
}

uint64_t AdJournalEntryEvent.adJournalEntryData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AdJournalEntryEvent(0) + 36);
  sub_1DC4B4B50(0, &qword_1EDB0E7E0, (void (*)(void))sub_1DC587454, (void (*)(void))sub_1DC587498);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*AdJournalEntryEvent.adJournalEntryData.modify())()
{
  type metadata accessor for AdJournalEntryEvent(0);
  return nullsub_1;
}

uint64_t AdJournalEntryEvent.adSizeData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AdJournalEntryEvent(0) + 40);
  sub_1DC4B4B50(0, &qword_1EDB0E748, (void (*)(void))sub_1DC4D6DB0, (void (*)(void))sub_1DC4D6DF4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t AdJournalEntryEvent.adSizeData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AdJournalEntryEvent(0) + 40);
  sub_1DC4B4B50(0, &qword_1EDB0E748, (void (*)(void))sub_1DC4D6DB0, (void (*)(void))sub_1DC4D6DF4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*AdJournalEntryEvent.adSizeData.modify())()
{
  type metadata accessor for AdJournalEntryEvent(0);
  return nullsub_1;
}

uint64_t AdJournalEntryEvent.adPositionData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AdJournalEntryEvent(0) + 44);
  sub_1DC4B4B50(0, &qword_1EDB0E7A0, (void (*)(void))sub_1DC4D6F30, (void (*)(void))sub_1DC4D6F74);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t AdJournalEntryEvent.adPositionData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AdJournalEntryEvent(0) + 44);
  sub_1DC4B4B50(0, &qword_1EDB0E7A0, (void (*)(void))sub_1DC4D6F30, (void (*)(void))sub_1DC4D6F74);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*AdJournalEntryEvent.adPositionData.modify())()
{
  type metadata accessor for AdJournalEntryEvent(0);
  return nullsub_1;
}

uint64_t AdJournalEntryEvent.adFeedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AdJournalEntryEvent(0) + 48);
  sub_1DC4B4B50(0, &qword_1EDB0E740, (void (*)(void))sub_1DC4C076C, (void (*)(void))sub_1DC4C07B0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t AdJournalEntryEvent.adFeedData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AdJournalEntryEvent(0) + 48);
  sub_1DC4B4B50(0, &qword_1EDB0E740, (void (*)(void))sub_1DC4C076C, (void (*)(void))sub_1DC4C07B0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*AdJournalEntryEvent.adFeedData.modify())()
{
  type metadata accessor for AdJournalEntryEvent(0);
  return nullsub_1;
}

uint64_t AdJournalEntryEvent.adGroupData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AdJournalEntryEvent(0) + 52);
  sub_1DC4B4B50(0, &qword_1EDB0E758, (void (*)(void))sub_1DC4D7328, (void (*)(void))sub_1DC4D736C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t AdJournalEntryEvent.adGroupData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AdJournalEntryEvent(0) + 52);
  sub_1DC4B4B50(0, &qword_1EDB0E758, (void (*)(void))sub_1DC4D7328, (void (*)(void))sub_1DC4D736C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*AdJournalEntryEvent.adGroupData.modify())()
{
  type metadata accessor for AdJournalEntryEvent(0);
  return nullsub_1;
}

uint64_t AdJournalEntryEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v2 = *MEMORY[0x1E0CF8128];
  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
  v4 = (int *)type metadata accessor for AdJournalEntryEvent(0);
  v5 = a1 + v4[5];
  sub_1DC4B4B50(0, &qword_1EDB0E250, (void (*)(void))sub_1DC4C06CC, (void (*)(void))sub_1DC4C0710);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 104))(v5, v2, v6);
  v7 = a1 + v4[6];
  v8 = *MEMORY[0x1E0CF8120];
  sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 104))(v7, v8, v9);
  v10 = a1 + v4[7];
  sub_1DC4B4B50(0, &qword_1EDB0E798, (void (*)(void))sub_1DC5297C4, (void (*)(void))sub_1DC52980C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 104))(v10, v2, v11);
  v12 = a1 + v4[8];
  sub_1DC4B4B50(0, &qword_1EDB0E7B0, (void (*)(void))sub_1DC4D6C30, (void (*)(void))sub_1DC4D6C74);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 104))(v12, v2, v13);
  v14 = a1 + v4[9];
  sub_1DC4B4B50(0, &qword_1EDB0E7E0, (void (*)(void))sub_1DC587454, (void (*)(void))sub_1DC587498);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 104))(v14, v2, v15);
  v16 = a1 + v4[10];
  sub_1DC4B4B50(0, &qword_1EDB0E748, (void (*)(void))sub_1DC4D6DB0, (void (*)(void))sub_1DC4D6DF4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 104))(v16, v8, v17);
  v18 = a1 + v4[11];
  sub_1DC4B4B50(0, &qword_1EDB0E7A0, (void (*)(void))sub_1DC4D6F30, (void (*)(void))sub_1DC4D6F74);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 104))(v18, v8, v19);
  v20 = a1 + v4[12];
  sub_1DC4B4B50(0, &qword_1EDB0E740, (void (*)(void))sub_1DC4C076C, (void (*)(void))sub_1DC4C07B0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 104))(v20, v8, v21);
  v22 = a1 + v4[13];
  sub_1DC4B4B50(0, &qword_1EDB0E758, (void (*)(void))sub_1DC4D7328, (void (*)(void))sub_1DC4D736C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 104))(v22, v8, v23);
}

uint64_t AdJournalEntryEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C37DC((uint64_t (*)(_QWORD))MEMORY[0x1E0CF8670], a1);
}

uint64_t AdJournalEntryEvent.Model.adUserData.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = (_QWORD *)(v1 + *(int *)(type metadata accessor for AdJournalEntryEvent.Model(0) + 20));
  v4 = v3[1];
  *a1 = *v3;
  a1[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t type metadata accessor for AdJournalEntryEvent.Model(uint64_t a1)
{
  return sub_1DC4B385C(a1, qword_1F036D7A0);
}

uint64_t AdJournalEntryEvent.Model.channelData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = v1 + *(int *)(type metadata accessor for AdJournalEntryEvent.Model(0) + 24);
  v4 = *(_QWORD *)v3;
  v5 = *(_QWORD *)(v3 + 8);
  v6 = *(_QWORD *)(v3 + 16);
  v7 = *(_QWORD *)(v3 + 24);
  *(_QWORD *)a1 = *(_QWORD *)v3;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  *(_WORD *)(a1 + 32) = *(_WORD *)(v3 + 32);
  return sub_1DC4D7808(v4, v5);
}

uint64_t AdJournalEntryEvent.Model.adCreativeData.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for AdJournalEntryEvent.Model(0);
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 28));
  return result;
}

uint64_t AdJournalEntryEvent.Model.adPlacementData.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = (_QWORD *)(v1 + *(int *)(type metadata accessor for AdJournalEntryEvent.Model(0) + 32));
  v4 = v3[1];
  *a1 = *v3;
  a1[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t AdJournalEntryEvent.Model.adJournalEntryData.getter@<X0>(_WORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for AdJournalEntryEvent.Model(0);
  *a1 = *(_WORD *)(v1 + *(int *)(result + 36));
  return result;
}

uint64_t AdJournalEntryEvent.Model.adSizeData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t result;
  uint64_t *v4;
  uint64_t v5;

  result = type metadata accessor for AdJournalEntryEvent.Model(0);
  v4 = (uint64_t *)(v1 + *(int *)(result + 40));
  v5 = *v4;
  LOBYTE(v4) = *((_BYTE *)v4 + 8);
  *(_QWORD *)a1 = v5;
  *(_BYTE *)(a1 + 8) = (_BYTE)v4;
  return result;
}

uint64_t AdJournalEntryEvent.Model.adPositionData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t result;
  int *v4;
  int v5;

  result = type metadata accessor for AdJournalEntryEvent.Model(0);
  v4 = (int *)(v1 + *(int *)(result + 44));
  v5 = *v4;
  LOBYTE(v4) = *((_BYTE *)v4 + 4);
  *(_DWORD *)a1 = v5;
  *(_BYTE *)(a1 + 4) = (_BYTE)v4;
  return result;
}

uint64_t AdJournalEntryEvent.Model.adFeedData.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for AdJournalEntryEvent.Model(0);
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 48));
  return result;
}

uint64_t AdJournalEntryEvent.Model.adGroupData.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for AdJournalEntryEvent.Model(0);
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 52));
  return result;
}

__n128 AdJournalEntryEvent.Model.init(eventData:adUserData:channelData:adCreativeData:adPlacementData:adJournalEntryData:adSizeData:adPositionData:adFeedData:adGroupData:)@<Q0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, __n128 *a3@<X2>, char *a4@<X3>, uint64_t *a5@<X4>, __int16 *a6@<X5>, uint64_t *a7@<X6>, int *a8@<X7>, uint64_t a9@<X8>, char *a10, char *a11)
{
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unsigned __int16 v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int *v22;
  _QWORD *v23;
  __n128 *v24;
  __n128 result;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  __n128 v29;
  __int16 v30;
  char v31;
  uint64_t v32;
  char v33;
  int v34;
  char v35;
  char v36;

  v13 = *a2;
  v14 = a2[1];
  v29 = *a3;
  v15 = a3[1].n128_u64[0];
  v16 = a3[1].n128_u64[1];
  v17 = a3[2].n128_u16[0];
  v18 = *a4;
  v19 = *a5;
  v20 = a5[1];
  v32 = *a7;
  v30 = *a6;
  v31 = *((_BYTE *)a7 + 8);
  v33 = *((_BYTE *)a8 + 4);
  v34 = *a8;
  v35 = *a10;
  v36 = *a11;
  v21 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(a9, a1, v21);
  v22 = (int *)type metadata accessor for AdJournalEntryEvent.Model(0);
  v23 = (_QWORD *)(a9 + v22[5]);
  *v23 = v13;
  v23[1] = v14;
  v24 = (__n128 *)(a9 + v22[6]);
  result = v29;
  *v24 = v29;
  v24[1].n128_u64[0] = v15;
  v24[1].n128_u64[1] = v16;
  v24[2].n128_u16[0] = v17;
  *(_BYTE *)(a9 + v22[7]) = v18;
  v26 = (_QWORD *)(a9 + v22[8]);
  *v26 = v19;
  v26[1] = v20;
  *(_WORD *)(a9 + v22[9]) = v30;
  v27 = a9 + v22[10];
  *(_QWORD *)v27 = v32;
  *(_BYTE *)(v27 + 8) = v31;
  v28 = a9 + v22[11];
  *(_DWORD *)v28 = v34;
  *(_BYTE *)(v28 + 4) = v33;
  *(_BYTE *)(a9 + v22[12]) = v35;
  *(_BYTE *)(a9 + v22[13]) = v36;
  return result;
}

uint64_t sub_1DC587F8C(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1DC587FC4 + 4 * byte_1DC63D910[a1]))(0x746144746E657665, 0xE900000000000061);
}

uint64_t sub_1DC587FC4()
{
  return 0x6144726573556461;
}

uint64_t sub_1DC5880C0()
{
  unsigned __int8 *v0;

  return sub_1DC587F8C(*v0);
}

uint64_t sub_1DC5880C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1DC58B430(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DC5880EC()
{
  sub_1DC5884F4();
  return sub_1DC62B604();
}

uint64_t sub_1DC588114()
{
  sub_1DC5884F4();
  return sub_1DC62B610();
}

uint64_t AdJournalEntryEvent.Model.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int *v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int16 v15;
  __int128 v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  int *v22;
  int v23;
  _OWORD v25[2];
  __int16 v26;
  char v27;

  v3 = v1;
  sub_1DC588B58(0, &qword_1F036D730, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)v25 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC5884F4();
  sub_1DC62B5F8();
  LOBYTE(v25[0]) = 0;
  sub_1DC62ABA8();
  sub_1DC4B6788(&qword_1EDB0E8A8, MEMORY[0x1E0CF8680]);
  sub_1DC62B4E4();
  if (!v2)
  {
    v10 = (int *)type metadata accessor for AdJournalEntryEvent.Model(0);
    v11 = (uint64_t *)(v3 + v10[5]);
    v13 = *v11;
    v12 = v11[1];
    *(_QWORD *)&v25[0] = v13;
    *((_QWORD *)&v25[0] + 1) = v12;
    v27 = 1;
    sub_1DC4C0710();
    sub_1DC62B4E4();
    v14 = v3 + v10[6];
    v15 = *(_WORD *)(v14 + 32);
    v16 = *(_OWORD *)(v14 + 16);
    v25[0] = *(_OWORD *)v14;
    v25[1] = v16;
    v26 = v15;
    v27 = 2;
    sub_1DC4C8E84();
    sub_1DC62B490();
    LOBYTE(v25[0]) = *(_BYTE *)(v3 + v10[7]);
    v27 = 3;
    sub_1DC52980C();
    sub_1DC62B4E4();
    v17 = (uint64_t *)(v3 + v10[8]);
    v19 = *v17;
    v18 = v17[1];
    *(_QWORD *)&v25[0] = v19;
    *((_QWORD *)&v25[0] + 1) = v18;
    v27 = 4;
    sub_1DC4D6C74();
    sub_1DC62B4E4();
    LOWORD(v25[0]) = *(_WORD *)(v3 + v10[9]);
    v27 = 5;
    sub_1DC587498();
    sub_1DC62B4E4();
    v20 = (uint64_t *)(v3 + v10[10]);
    v21 = *v20;
    LOBYTE(v20) = *((_BYTE *)v20 + 8);
    *(_QWORD *)&v25[0] = v21;
    BYTE8(v25[0]) = (_BYTE)v20;
    v27 = 6;
    sub_1DC4D6DF4();
    sub_1DC62B490();
    v22 = (int *)(v3 + v10[11]);
    v23 = *v22;
    LOBYTE(v22) = *((_BYTE *)v22 + 4);
    LODWORD(v25[0]) = v23;
    BYTE4(v25[0]) = (_BYTE)v22;
    v27 = 7;
    sub_1DC4D6F74();
    sub_1DC62B490();
    LOBYTE(v25[0]) = *(_BYTE *)(v3 + v10[12]);
    v27 = 8;
    sub_1DC4C07B0();
    sub_1DC62B490();
    LOBYTE(v25[0]) = *(_BYTE *)(v3 + v10[13]);
    v27 = 9;
    sub_1DC4D736C();
    sub_1DC62B490();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1DC5884F4()
{
  unint64_t result;

  result = qword_1F036D738;
  if (!qword_1F036D738)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC63DBDC, &type metadata for AdJournalEntryEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036D738);
  }
  return result;
}

uint64_t AdJournalEntryEvent.Model.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  int *v16;
  char *v17;
  __int16 v18;
  char *v19;
  __int128 v20;
  uint64_t v21;
  char *v22;
  char v23;
  char *v24;
  char v25;
  char *v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  char *v36;
  __int128 v37;
  __int128 v38;
  __int16 v39;
  char v40;

  v5 = sub_1DC62ABA8();
  v33 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC588B58(0, &qword_1F036D740, MEMORY[0x1E0DED048]);
  v32 = v8;
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v29 - v10;
  v35 = type metadata accessor for AdJournalEntryEvent.Model(0);
  MEMORY[0x1E0C80A78](v35);
  v36 = (char *)&v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = a1[3];
  v34 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v13);
  sub_1DC5884F4();
  sub_1DC62B5E0();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v34);
  v30 = a2;
  v31 = v9;
  LOBYTE(v37) = 0;
  sub_1DC4B6788(&qword_1EDB0E278, MEMORY[0x1E0CF8688]);
  sub_1DC62B454();
  v14 = v36;
  (*(void (**)(char *, char *, uint64_t))(v33 + 32))(v36, v7, v5);
  v40 = 1;
  sub_1DC4C06CC();
  sub_1DC62B454();
  v15 = *((_QWORD *)&v37 + 1);
  v16 = (int *)v35;
  v17 = &v14[*(int *)(v35 + 20)];
  *(_QWORD *)v17 = v37;
  *((_QWORD *)v17 + 1) = v15;
  v40 = 2;
  sub_1DC4C8E40();
  sub_1DC62B400();
  v18 = v39;
  v19 = &v14[v16[6]];
  v20 = v38;
  *(_OWORD *)v19 = v37;
  *((_OWORD *)v19 + 1) = v20;
  *((_WORD *)v19 + 16) = v18;
  v40 = 3;
  sub_1DC5297C4();
  sub_1DC62B454();
  v14[v16[7]] = v37;
  v40 = 4;
  sub_1DC4D6C30();
  sub_1DC62B454();
  v21 = *((_QWORD *)&v37 + 1);
  v22 = &v14[v16[8]];
  *(_QWORD *)v22 = v37;
  *((_QWORD *)v22 + 1) = v21;
  v40 = 5;
  sub_1DC587454();
  sub_1DC62B454();
  *(_WORD *)&v14[v16[9]] = v37;
  v40 = 6;
  sub_1DC4D6DB0();
  sub_1DC62B400();
  v23 = BYTE8(v37);
  v24 = &v14[v16[10]];
  *(_QWORD *)v24 = v37;
  v24[8] = v23;
  v40 = 7;
  sub_1DC4D6F30();
  sub_1DC62B400();
  v25 = BYTE4(v37);
  v26 = &v14[v16[11]];
  *(_DWORD *)v26 = v37;
  v26[4] = v25;
  v40 = 8;
  sub_1DC4C076C();
  sub_1DC62B400();
  v14[v16[12]] = v37;
  v40 = 9;
  sub_1DC4D7328();
  sub_1DC62B400();
  (*(void (**)(char *, uint64_t))(v31 + 8))(v11, v32);
  v27 = (uint64_t)v36;
  v36[*(int *)(v35 + 52)] = v37;
  sub_1DC588BB4(v27, v30);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v34);
  return sub_1DC588BF8(v27);
}

void sub_1DC588B58(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1DC5884F4();
    v7 = a3(a1, &type metadata for AdJournalEntryEvent.Model.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1DC588BB4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for AdJournalEntryEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DC588BF8(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for AdJournalEntryEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1DC588C34@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return AdJournalEntryEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_1DC588C48(_QWORD *a1)
{
  return AdJournalEntryEvent.Model.encode(to:)(a1);
}

uint64_t sub_1DC588C5C@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4B2C68(&qword_1EDB0FF70, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1EDB0FF58, a1);
}

uint64_t sub_1DC588C80@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4B2C68(&qword_1EDB0FF90, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1EDB0FF78, a1);
}

uint64_t sub_1DC588CA4@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v4 = *MEMORY[0x1E0CF8128];
  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 104))(a2, v4, v5);
  v6 = a2 + a1[5];
  sub_1DC4B4B50(0, &qword_1EDB0E250, (void (*)(void))sub_1DC4C06CC, (void (*)(void))sub_1DC4C0710);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 104))(v6, v4, v7);
  v8 = a2 + a1[6];
  v9 = *MEMORY[0x1E0CF8120];
  sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 104))(v8, v9, v10);
  v11 = a2 + a1[7];
  sub_1DC4B4B50(0, &qword_1EDB0E798, (void (*)(void))sub_1DC5297C4, (void (*)(void))sub_1DC52980C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 104))(v11, v4, v12);
  v13 = a2 + a1[8];
  sub_1DC4B4B50(0, &qword_1EDB0E7B0, (void (*)(void))sub_1DC4D6C30, (void (*)(void))sub_1DC4D6C74);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 104))(v13, v4, v14);
  v15 = a2 + a1[9];
  sub_1DC4B4B50(0, &qword_1EDB0E7E0, (void (*)(void))sub_1DC587454, (void (*)(void))sub_1DC587498);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 104))(v15, v4, v16);
  v17 = a2 + a1[10];
  sub_1DC4B4B50(0, &qword_1EDB0E748, (void (*)(void))sub_1DC4D6DB0, (void (*)(void))sub_1DC4D6DF4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 104))(v17, v9, v18);
  v19 = a2 + a1[11];
  sub_1DC4B4B50(0, &qword_1EDB0E7A0, (void (*)(void))sub_1DC4D6F30, (void (*)(void))sub_1DC4D6F74);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 104))(v19, v9, v20);
  v21 = a2 + a1[12];
  sub_1DC4B4B50(0, &qword_1EDB0E740, (void (*)(void))sub_1DC4C076C, (void (*)(void))sub_1DC4C07B0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 104))(v21, v9, v22);
  v23 = a2 + a1[13];
  sub_1DC4B4B50(0, &qword_1EDB0E758, (void (*)(void))sub_1DC4D7328, (void (*)(void))sub_1DC4D736C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 104))(v23, v9, v24);
}

uint64_t *initializeBufferWithCopyOfBuffer for AdJournalEntryEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v44 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v44 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_1DC4B6600();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    sub_1DC4B4B50(0, &qword_1EDB0E250, (void (*)(void))sub_1DC4C06CC, (void (*)(void))sub_1DC4C0710);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = a3[6];
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
    v16 = a3[7];
    v17 = (char *)a1 + v16;
    v18 = (char *)a2 + v16;
    sub_1DC4B4B50(0, &qword_1EDB0E798, (void (*)(void))sub_1DC5297C4, (void (*)(void))sub_1DC52980C);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
    v20 = a3[8];
    v21 = (char *)a1 + v20;
    v22 = (char *)a2 + v20;
    sub_1DC4B4B50(0, &qword_1EDB0E7B0, (void (*)(void))sub_1DC4D6C30, (void (*)(void))sub_1DC4D6C74);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v21, v22, v23);
    v24 = a3[9];
    v25 = (char *)a1 + v24;
    v26 = (char *)a2 + v24;
    sub_1DC4B4B50(0, &qword_1EDB0E7E0, (void (*)(void))sub_1DC587454, (void (*)(void))sub_1DC587498);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v25, v26, v27);
    v28 = a3[10];
    v29 = (char *)a1 + v28;
    v30 = (char *)a2 + v28;
    sub_1DC4B4B50(0, &qword_1EDB0E748, (void (*)(void))sub_1DC4D6DB0, (void (*)(void))sub_1DC4D6DF4);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 16))(v29, v30, v31);
    v32 = a3[11];
    v33 = (char *)a1 + v32;
    v34 = (char *)a2 + v32;
    sub_1DC4B4B50(0, &qword_1EDB0E7A0, (void (*)(void))sub_1DC4D6F30, (void (*)(void))sub_1DC4D6F74);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 16))(v33, v34, v35);
    v36 = a3[12];
    v37 = (char *)a1 + v36;
    v38 = (char *)a2 + v36;
    sub_1DC4B4B50(0, &qword_1EDB0E740, (void (*)(void))sub_1DC4C076C, (void (*)(void))sub_1DC4C07B0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 16))(v37, v38, v39);
    v40 = a3[13];
    v41 = (char *)a1 + v40;
    v42 = (char *)a2 + v40;
    sub_1DC4B4B50(0, &qword_1EDB0E758, (void (*)(void))sub_1DC4D7328, (void (*)(void))sub_1DC4D736C);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v43 - 8) + 16))(v41, v42, v43);
  }
  return a1;
}

uint64_t destroy for AdJournalEntryEvent(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + a2[5];
  sub_1DC4B4B50(0, &qword_1EDB0E250, (void (*)(void))sub_1DC4C06CC, (void (*)(void))sub_1DC4C0710);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = a1 + a2[6];
  sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  v9 = a1 + a2[7];
  sub_1DC4B4B50(0, &qword_1EDB0E798, (void (*)(void))sub_1DC5297C4, (void (*)(void))sub_1DC52980C);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  v11 = a1 + a2[8];
  sub_1DC4B4B50(0, &qword_1EDB0E7B0, (void (*)(void))sub_1DC4D6C30, (void (*)(void))sub_1DC4D6C74);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
  v13 = a1 + a2[9];
  sub_1DC4B4B50(0, &qword_1EDB0E7E0, (void (*)(void))sub_1DC587454, (void (*)(void))sub_1DC587498);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v13, v14);
  v15 = a1 + a2[10];
  sub_1DC4B4B50(0, &qword_1EDB0E748, (void (*)(void))sub_1DC4D6DB0, (void (*)(void))sub_1DC4D6DF4);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v15, v16);
  v17 = a1 + a2[11];
  sub_1DC4B4B50(0, &qword_1EDB0E7A0, (void (*)(void))sub_1DC4D6F30, (void (*)(void))sub_1DC4D6F74);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(v17, v18);
  v19 = a1 + a2[12];
  sub_1DC4B4B50(0, &qword_1EDB0E740, (void (*)(void))sub_1DC4C076C, (void (*)(void))sub_1DC4C07B0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 8))(v19, v20);
  v21 = a1 + a2[13];
  sub_1DC4B4B50(0, &qword_1EDB0E758, (void (*)(void))sub_1DC4D7328, (void (*)(void))sub_1DC4D736C);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 8))(v21, v22);
}

uint64_t initializeWithCopy for AdJournalEntryEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1DC4B4B50(0, &qword_1EDB0E250, (void (*)(void))sub_1DC4C06CC, (void (*)(void))sub_1DC4C0710);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1DC4B4B50(0, &qword_1EDB0E798, (void (*)(void))sub_1DC5297C4, (void (*)(void))sub_1DC52980C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1DC4B4B50(0, &qword_1EDB0E7B0, (void (*)(void))sub_1DC4D6C30, (void (*)(void))sub_1DC4D6C74);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1DC4B4B50(0, &qword_1EDB0E7E0, (void (*)(void))sub_1DC587454, (void (*)(void))sub_1DC587498);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1DC4B4B50(0, &qword_1EDB0E748, (void (*)(void))sub_1DC4D6DB0, (void (*)(void))sub_1DC4D6DF4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 16))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1DC4B4B50(0, &qword_1EDB0E7A0, (void (*)(void))sub_1DC4D6F30, (void (*)(void))sub_1DC4D6F74);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 16))(v32, v33, v34);
  v35 = a3[12];
  v36 = a1 + v35;
  v37 = a2 + v35;
  sub_1DC4B4B50(0, &qword_1EDB0E740, (void (*)(void))sub_1DC4C076C, (void (*)(void))sub_1DC4C07B0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 16))(v36, v37, v38);
  v39 = a3[13];
  v40 = a1 + v39;
  v41 = a2 + v39;
  sub_1DC4B4B50(0, &qword_1EDB0E758, (void (*)(void))sub_1DC4D7328, (void (*)(void))sub_1DC4D736C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 16))(v40, v41, v42);
  return a1;
}

uint64_t assignWithCopy for AdJournalEntryEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1DC4B4B50(0, &qword_1EDB0E250, (void (*)(void))sub_1DC4C06CC, (void (*)(void))sub_1DC4C0710);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 24))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1DC4B4B50(0, &qword_1EDB0E798, (void (*)(void))sub_1DC5297C4, (void (*)(void))sub_1DC52980C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 24))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1DC4B4B50(0, &qword_1EDB0E7B0, (void (*)(void))sub_1DC4D6C30, (void (*)(void))sub_1DC4D6C74);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 24))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1DC4B4B50(0, &qword_1EDB0E7E0, (void (*)(void))sub_1DC587454, (void (*)(void))sub_1DC587498);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 24))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1DC4B4B50(0, &qword_1EDB0E748, (void (*)(void))sub_1DC4D6DB0, (void (*)(void))sub_1DC4D6DF4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 24))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1DC4B4B50(0, &qword_1EDB0E7A0, (void (*)(void))sub_1DC4D6F30, (void (*)(void))sub_1DC4D6F74);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 24))(v32, v33, v34);
  v35 = a3[12];
  v36 = a1 + v35;
  v37 = a2 + v35;
  sub_1DC4B4B50(0, &qword_1EDB0E740, (void (*)(void))sub_1DC4C076C, (void (*)(void))sub_1DC4C07B0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 24))(v36, v37, v38);
  v39 = a3[13];
  v40 = a1 + v39;
  v41 = a2 + v39;
  sub_1DC4B4B50(0, &qword_1EDB0E758, (void (*)(void))sub_1DC4D7328, (void (*)(void))sub_1DC4D736C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 24))(v40, v41, v42);
  return a1;
}

uint64_t initializeWithTake for AdJournalEntryEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1DC4B4B50(0, &qword_1EDB0E250, (void (*)(void))sub_1DC4C06CC, (void (*)(void))sub_1DC4C0710);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1DC4B4B50(0, &qword_1EDB0E798, (void (*)(void))sub_1DC5297C4, (void (*)(void))sub_1DC52980C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1DC4B4B50(0, &qword_1EDB0E7B0, (void (*)(void))sub_1DC4D6C30, (void (*)(void))sub_1DC4D6C74);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1DC4B4B50(0, &qword_1EDB0E7E0, (void (*)(void))sub_1DC587454, (void (*)(void))sub_1DC587498);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1DC4B4B50(0, &qword_1EDB0E748, (void (*)(void))sub_1DC4D6DB0, (void (*)(void))sub_1DC4D6DF4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 32))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1DC4B4B50(0, &qword_1EDB0E7A0, (void (*)(void))sub_1DC4D6F30, (void (*)(void))sub_1DC4D6F74);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 32))(v32, v33, v34);
  v35 = a3[12];
  v36 = a1 + v35;
  v37 = a2 + v35;
  sub_1DC4B4B50(0, &qword_1EDB0E740, (void (*)(void))sub_1DC4C076C, (void (*)(void))sub_1DC4C07B0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 32))(v36, v37, v38);
  v39 = a3[13];
  v40 = a1 + v39;
  v41 = a2 + v39;
  sub_1DC4B4B50(0, &qword_1EDB0E758, (void (*)(void))sub_1DC4D7328, (void (*)(void))sub_1DC4D736C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 32))(v40, v41, v42);
  return a1;
}

uint64_t assignWithTake for AdJournalEntryEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1DC4B4B50(0, &qword_1EDB0E250, (void (*)(void))sub_1DC4C06CC, (void (*)(void))sub_1DC4C0710);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 40))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1DC4B4B50(0, &qword_1EDB0E798, (void (*)(void))sub_1DC5297C4, (void (*)(void))sub_1DC52980C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 40))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1DC4B4B50(0, &qword_1EDB0E7B0, (void (*)(void))sub_1DC4D6C30, (void (*)(void))sub_1DC4D6C74);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 40))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1DC4B4B50(0, &qword_1EDB0E7E0, (void (*)(void))sub_1DC587454, (void (*)(void))sub_1DC587498);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 40))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1DC4B4B50(0, &qword_1EDB0E748, (void (*)(void))sub_1DC4D6DB0, (void (*)(void))sub_1DC4D6DF4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 40))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1DC4B4B50(0, &qword_1EDB0E7A0, (void (*)(void))sub_1DC4D6F30, (void (*)(void))sub_1DC4D6F74);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 40))(v32, v33, v34);
  v35 = a3[12];
  v36 = a1 + v35;
  v37 = a2 + v35;
  sub_1DC4B4B50(0, &qword_1EDB0E740, (void (*)(void))sub_1DC4C076C, (void (*)(void))sub_1DC4C07B0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 40))(v36, v37, v38);
  v39 = a3[13];
  v40 = a1 + v39;
  v41 = a2 + v39;
  sub_1DC4B4B50(0, &qword_1EDB0E758, (void (*)(void))sub_1DC4D7328, (void (*)(void))sub_1DC4D736C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 40))(v40, v41, v42);
  return a1;
}

uint64_t getEnumTagSinglePayload for AdJournalEntryEvent()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC58A180(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  sub_1DC4B6600();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    sub_1DC4B4B50(0, &qword_1EDB0E250, (void (*)(void))sub_1DC4C06CC, (void (*)(void))sub_1DC4C0710);
    v12 = *(_QWORD *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
    {
      v8 = v11;
      v13 = a3[5];
    }
    else
    {
      sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
      v12 = *(_QWORD *)(v14 - 8);
      if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
      {
        v8 = v14;
        v13 = a3[6];
      }
      else
      {
        sub_1DC4B4B50(0, &qword_1EDB0E798, (void (*)(void))sub_1DC5297C4, (void (*)(void))sub_1DC52980C);
        v12 = *(_QWORD *)(v15 - 8);
        if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
        {
          v8 = v15;
          v13 = a3[7];
        }
        else
        {
          sub_1DC4B4B50(0, &qword_1EDB0E7B0, (void (*)(void))sub_1DC4D6C30, (void (*)(void))sub_1DC4D6C74);
          v12 = *(_QWORD *)(v16 - 8);
          if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
          {
            v8 = v16;
            v13 = a3[8];
          }
          else
          {
            sub_1DC4B4B50(0, &qword_1EDB0E7E0, (void (*)(void))sub_1DC587454, (void (*)(void))sub_1DC587498);
            v12 = *(_QWORD *)(v17 - 8);
            if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
            {
              v8 = v17;
              v13 = a3[9];
            }
            else
            {
              sub_1DC4B4B50(0, &qword_1EDB0E748, (void (*)(void))sub_1DC4D6DB0, (void (*)(void))sub_1DC4D6DF4);
              v12 = *(_QWORD *)(v18 - 8);
              if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
              {
                v8 = v18;
                v13 = a3[10];
              }
              else
              {
                sub_1DC4B4B50(0, &qword_1EDB0E7A0, (void (*)(void))sub_1DC4D6F30, (void (*)(void))sub_1DC4D6F74);
                v12 = *(_QWORD *)(v19 - 8);
                if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                {
                  v8 = v19;
                  v13 = a3[11];
                }
                else
                {
                  sub_1DC4B4B50(0, &qword_1EDB0E740, (void (*)(void))sub_1DC4C076C, (void (*)(void))sub_1DC4C07B0);
                  v12 = *(_QWORD *)(v20 - 8);
                  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                  {
                    v8 = v20;
                    v13 = a3[12];
                  }
                  else
                  {
                    sub_1DC4B4B50(0, &qword_1EDB0E758, (void (*)(void))sub_1DC4D7328, (void (*)(void))sub_1DC4D736C);
                    v8 = v21;
                    v12 = *(_QWORD *)(v21 - 8);
                    v13 = a3[13];
                  }
                }
              }
            }
          }
        }
      }
    }
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t storeEnumTagSinglePayload for AdJournalEntryEvent()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC58A440(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  sub_1DC4B6600();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    sub_1DC4B4B50(0, &qword_1EDB0E250, (void (*)(void))sub_1DC4C06CC, (void (*)(void))sub_1DC4C0710);
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = a4[5];
    }
    else
    {
      sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
      v14 = *(_QWORD *)(v16 - 8);
      if (*(_DWORD *)(v14 + 84) == a3)
      {
        v10 = v16;
        v15 = a4[6];
      }
      else
      {
        sub_1DC4B4B50(0, &qword_1EDB0E798, (void (*)(void))sub_1DC5297C4, (void (*)(void))sub_1DC52980C);
        v14 = *(_QWORD *)(v17 - 8);
        if (*(_DWORD *)(v14 + 84) == a3)
        {
          v10 = v17;
          v15 = a4[7];
        }
        else
        {
          sub_1DC4B4B50(0, &qword_1EDB0E7B0, (void (*)(void))sub_1DC4D6C30, (void (*)(void))sub_1DC4D6C74);
          v14 = *(_QWORD *)(v18 - 8);
          if (*(_DWORD *)(v14 + 84) == a3)
          {
            v10 = v18;
            v15 = a4[8];
          }
          else
          {
            sub_1DC4B4B50(0, &qword_1EDB0E7E0, (void (*)(void))sub_1DC587454, (void (*)(void))sub_1DC587498);
            v14 = *(_QWORD *)(v19 - 8);
            if (*(_DWORD *)(v14 + 84) == a3)
            {
              v10 = v19;
              v15 = a4[9];
            }
            else
            {
              sub_1DC4B4B50(0, &qword_1EDB0E748, (void (*)(void))sub_1DC4D6DB0, (void (*)(void))sub_1DC4D6DF4);
              v14 = *(_QWORD *)(v20 - 8);
              if (*(_DWORD *)(v14 + 84) == a3)
              {
                v10 = v20;
                v15 = a4[10];
              }
              else
              {
                sub_1DC4B4B50(0, &qword_1EDB0E7A0, (void (*)(void))sub_1DC4D6F30, (void (*)(void))sub_1DC4D6F74);
                v14 = *(_QWORD *)(v21 - 8);
                if (*(_DWORD *)(v14 + 84) == a3)
                {
                  v10 = v21;
                  v15 = a4[11];
                }
                else
                {
                  sub_1DC4B4B50(0, &qword_1EDB0E740, (void (*)(void))sub_1DC4C076C, (void (*)(void))sub_1DC4C07B0);
                  v14 = *(_QWORD *)(v22 - 8);
                  if (*(_DWORD *)(v14 + 84) == a3)
                  {
                    v10 = v22;
                    v15 = a4[12];
                  }
                  else
                  {
                    sub_1DC4B4B50(0, &qword_1EDB0E758, (void (*)(void))sub_1DC4D7328, (void (*)(void))sub_1DC4D736C);
                    v10 = v23;
                    v14 = *(_QWORD *)(v23 - 8);
                    v15 = a4[13];
                  }
                }
              }
            }
          }
        }
      }
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_1DC58A6FC()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;

  sub_1DC4B6600();
  if (v0 <= 0x3F)
  {
    sub_1DC4B4B50(319, &qword_1EDB0E250, (void (*)(void))sub_1DC4C06CC, (void (*)(void))sub_1DC4C0710);
    if (v1 <= 0x3F)
    {
      sub_1DC4B4B50(319, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
      if (v2 <= 0x3F)
      {
        sub_1DC4B4B50(319, &qword_1EDB0E798, (void (*)(void))sub_1DC5297C4, (void (*)(void))sub_1DC52980C);
        if (v3 <= 0x3F)
        {
          sub_1DC4B4B50(319, &qword_1EDB0E7B0, (void (*)(void))sub_1DC4D6C30, (void (*)(void))sub_1DC4D6C74);
          if (v4 <= 0x3F)
          {
            sub_1DC4B4B50(319, &qword_1EDB0E7E0, (void (*)(void))sub_1DC587454, (void (*)(void))sub_1DC587498);
            if (v5 <= 0x3F)
            {
              sub_1DC4B4B50(319, &qword_1EDB0E748, (void (*)(void))sub_1DC4D6DB0, (void (*)(void))sub_1DC4D6DF4);
              if (v6 <= 0x3F)
              {
                sub_1DC4B4B50(319, &qword_1EDB0E7A0, (void (*)(void))sub_1DC4D6F30, (void (*)(void))sub_1DC4D6F74);
                if (v7 <= 0x3F)
                {
                  sub_1DC4B4B50(319, &qword_1EDB0E740, (void (*)(void))sub_1DC4C076C, (void (*)(void))sub_1DC4C07B0);
                  if (v8 <= 0x3F)
                  {
                    sub_1DC4B4B50(319, &qword_1EDB0E758, (void (*)(void))sub_1DC4D7328, (void (*)(void))sub_1DC4D736C);
                    if (v9 <= 0x3F)
                      swift_initStructMetadata();
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

_QWORD *initializeBufferWithCopyOfBuffer for AdJournalEntryEvent.Model(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v17 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1DC62ABA8();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = a3[6];
    v10 = (_QWORD *)((char *)a1 + v8);
    v11 = (_QWORD *)((char *)a2 + v8);
    v12 = v11[1];
    *v10 = *v11;
    v10[1] = v12;
    v13 = (char *)a1 + v9;
    v14 = (char *)a2 + v9;
    v15 = *(_QWORD *)((char *)a2 + v9 + 8);
    swift_bridgeObjectRetain();
    if (v15)
    {
      *(_QWORD *)v13 = *(_QWORD *)v14;
      *((_QWORD *)v13 + 1) = v15;
      v16 = *((_QWORD *)v14 + 3);
      *((_QWORD *)v13 + 2) = *((_QWORD *)v14 + 2);
      *((_QWORD *)v13 + 3) = v16;
      *((_WORD *)v13 + 16) = *((_WORD *)v14 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v18 = *((_OWORD *)v14 + 1);
      *(_OWORD *)v13 = *(_OWORD *)v14;
      *((_OWORD *)v13 + 1) = v18;
      *((_WORD *)v13 + 16) = *((_WORD *)v14 + 16);
    }
    v19 = a3[8];
    *((_BYTE *)a1 + a3[7]) = *((_BYTE *)a2 + a3[7]);
    v20 = (_QWORD *)((char *)a1 + v19);
    v21 = (_QWORD *)((char *)a2 + v19);
    v22 = v21[1];
    *v20 = *v21;
    v20[1] = v22;
    v23 = a3[10];
    *(_WORD *)((char *)a1 + a3[9]) = *(_WORD *)((char *)a2 + a3[9]);
    v24 = (char *)a1 + v23;
    v25 = (char *)a2 + v23;
    *(_QWORD *)v24 = *(_QWORD *)v25;
    v24[8] = v25[8];
    v26 = a3[11];
    v27 = a3[12];
    v28 = (char *)a1 + v26;
    v29 = (char *)a2 + v26;
    *(_DWORD *)v28 = *(_DWORD *)v29;
    v28[4] = v29[4];
    *((_BYTE *)a1 + v27) = *((_BYTE *)a2 + v27);
    *((_BYTE *)a1 + a3[13]) = *((_BYTE *)a2 + a3[13]);
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for AdJournalEntryEvent.Model(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + *(int *)(a2 + 24) + 8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for AdJournalEntryEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v6 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = (_QWORD *)(a1 + v7);
  v10 = (_QWORD *)(a2 + v7);
  v11 = v10[1];
  *v9 = *v10;
  v9[1] = v11;
  v12 = a1 + v8;
  v13 = a2 + v8;
  v14 = *(_QWORD *)(a2 + v8 + 8);
  swift_bridgeObjectRetain();
  if (v14)
  {
    *(_QWORD *)v12 = *(_QWORD *)v13;
    *(_QWORD *)(v12 + 8) = v14;
    v15 = *(_QWORD *)(v13 + 24);
    *(_QWORD *)(v12 + 16) = *(_QWORD *)(v13 + 16);
    *(_QWORD *)(v12 + 24) = v15;
    *(_WORD *)(v12 + 32) = *(_WORD *)(v13 + 32);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v16 = *(_OWORD *)(v13 + 16);
    *(_OWORD *)v12 = *(_OWORD *)v13;
    *(_OWORD *)(v12 + 16) = v16;
    *(_WORD *)(v12 + 32) = *(_WORD *)(v13 + 32);
  }
  v17 = a3[8];
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  v18 = (_QWORD *)(a1 + v17);
  v19 = (_QWORD *)(a2 + v17);
  v20 = v19[1];
  *v18 = *v19;
  v18[1] = v20;
  v21 = a3[10];
  *(_WORD *)(a1 + a3[9]) = *(_WORD *)(a2 + a3[9]);
  v22 = a1 + v21;
  v23 = a2 + v21;
  *(_QWORD *)v22 = *(_QWORD *)v23;
  *(_BYTE *)(v22 + 8) = *(_BYTE *)(v23 + 8);
  v24 = a3[11];
  v25 = a3[12];
  v26 = a1 + v24;
  v27 = a2 + v24;
  *(_DWORD *)v26 = *(_DWORD *)v27;
  *(_BYTE *)(v26 + 4) = *(_BYTE *)(v27 + 4);
  *(_BYTE *)(a1 + v25) = *(_BYTE *)(a2 + v25);
  *(_BYTE *)(a1 + a3[13]) = *(_BYTE *)(a2 + a3[13]);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for AdJournalEntryEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  __int128 *v12;
  uint64_t v13;
  uint64_t v14;
  __int16 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  _BYTE *v23;
  _BYTE *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v6 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v10 = a3[6];
  v11 = a1 + v10;
  v12 = (__int128 *)(a2 + v10);
  v13 = *(_QWORD *)(a1 + v10 + 8);
  v14 = *(_QWORD *)(a2 + v10 + 8);
  if (v13)
  {
    if (v14)
    {
      *(_QWORD *)v11 = *(_QWORD *)v12;
      *(_QWORD *)(v11 + 8) = *((_QWORD *)v12 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v11 + 16) = *((_QWORD *)v12 + 2);
      *(_QWORD *)(v11 + 24) = *((_QWORD *)v12 + 3);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_BYTE *)(v11 + 32) = *((_BYTE *)v12 + 32);
      *(_BYTE *)(v11 + 33) = *((_BYTE *)v12 + 33);
    }
    else
    {
      sub_1DC4DAE38(v11);
      v15 = *((_WORD *)v12 + 16);
      v16 = v12[1];
      *(_OWORD *)v11 = *v12;
      *(_OWORD *)(v11 + 16) = v16;
      *(_WORD *)(v11 + 32) = v15;
    }
  }
  else if (v14)
  {
    *(_QWORD *)v11 = *(_QWORD *)v12;
    *(_QWORD *)(v11 + 8) = *((_QWORD *)v12 + 1);
    *(_QWORD *)(v11 + 16) = *((_QWORD *)v12 + 2);
    *(_QWORD *)(v11 + 24) = *((_QWORD *)v12 + 3);
    *(_BYTE *)(v11 + 32) = *((_BYTE *)v12 + 32);
    *(_BYTE *)(v11 + 33) = *((_BYTE *)v12 + 33);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v17 = *v12;
    v18 = v12[1];
    *(_WORD *)(v11 + 32) = *((_WORD *)v12 + 16);
    *(_OWORD *)v11 = v17;
    *(_OWORD *)(v11 + 16) = v18;
  }
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  v19 = a3[8];
  v20 = (_QWORD *)(a1 + v19);
  v21 = (_QWORD *)(a2 + v19);
  *v20 = *v21;
  v20[1] = v21[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v22 = a3[9];
  v23 = (_BYTE *)(a1 + v22);
  v24 = (_BYTE *)(a2 + v22);
  *v23 = *v24;
  v23[1] = v24[1];
  v25 = a3[10];
  v26 = a1 + v25;
  v27 = (uint64_t *)(a2 + v25);
  v28 = *v27;
  *(_BYTE *)(v26 + 8) = *((_BYTE *)v27 + 8);
  *(_QWORD *)v26 = v28;
  v29 = a3[11];
  v30 = a1 + v29;
  v31 = a2 + v29;
  LODWORD(v28) = *(_DWORD *)v31;
  *(_BYTE *)(v30 + 4) = *(_BYTE *)(v31 + 4);
  *(_DWORD *)v30 = v28;
  *(_BYTE *)(a1 + a3[12]) = *(_BYTE *)(a2 + a3[12]);
  *(_BYTE *)(a1 + a3[13]) = *(_BYTE *)(a2 + a3[13]);
  return a1;
}

uint64_t initializeWithTake for AdJournalEntryEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v6 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_WORD *)(v8 + 32) = *(_WORD *)(v9 + 32);
  v10 = *(_OWORD *)(v9 + 16);
  *(_OWORD *)v8 = *(_OWORD *)v9;
  *(_OWORD *)(v8 + 16) = v10;
  v11 = a3[8];
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  *(_OWORD *)(a1 + v11) = *(_OWORD *)(a2 + v11);
  v12 = a3[10];
  *(_WORD *)(a1 + a3[9]) = *(_WORD *)(a2 + a3[9]);
  v13 = a1 + v12;
  v14 = a2 + v12;
  *(_QWORD *)v13 = *(_QWORD *)v14;
  *(_BYTE *)(v13 + 8) = *(_BYTE *)(v14 + 8);
  v15 = a3[11];
  v16 = a3[12];
  v17 = a1 + v15;
  v18 = a2 + v15;
  *(_DWORD *)v17 = *(_DWORD *)v18;
  *(_BYTE *)(v17 + 4) = *(_BYTE *)(v18 + 4);
  *(_BYTE *)(a1 + v16) = *(_BYTE *)(a2 + v16);
  *(_BYTE *)(a1 + a3[13]) = *(_BYTE *)(a2 + a3[13]);
  return a1;
}

uint64_t assignWithTake for AdJournalEntryEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v6 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (uint64_t *)(a2 + v7);
  v11 = *v9;
  v10 = v9[1];
  *v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  v12 = a3[6];
  v13 = a1 + v12;
  v14 = a2 + v12;
  if (!*(_QWORD *)(a1 + v12 + 8))
    goto LABEL_5;
  v15 = *(_QWORD *)(v14 + 8);
  if (!v15)
  {
    sub_1DC4DAE38(v13);
LABEL_5:
    v17 = *(_OWORD *)(v14 + 16);
    *(_OWORD *)v13 = *(_OWORD *)v14;
    *(_OWORD *)(v13 + 16) = v17;
    *(_WORD *)(v13 + 32) = *(_WORD *)(v14 + 32);
    goto LABEL_6;
  }
  *(_QWORD *)v13 = *(_QWORD *)v14;
  *(_QWORD *)(v13 + 8) = v15;
  swift_bridgeObjectRelease();
  v16 = *(_QWORD *)(v14 + 24);
  *(_QWORD *)(v13 + 16) = *(_QWORD *)(v14 + 16);
  *(_QWORD *)(v13 + 24) = v16;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v13 + 32) = *(_BYTE *)(v14 + 32);
  *(_BYTE *)(v13 + 33) = *(_BYTE *)(v14 + 33);
LABEL_6:
  v18 = a3[8];
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  v19 = (_QWORD *)(a1 + v18);
  v20 = (uint64_t *)(a2 + v18);
  v22 = *v20;
  v21 = v20[1];
  *v19 = v22;
  v19[1] = v21;
  swift_bridgeObjectRelease();
  v23 = a3[10];
  *(_WORD *)(a1 + a3[9]) = *(_WORD *)(a2 + a3[9]);
  v24 = a1 + v23;
  v25 = a2 + v23;
  *(_BYTE *)(v24 + 8) = *(_BYTE *)(v25 + 8);
  *(_QWORD *)v24 = *(_QWORD *)v25;
  v26 = a3[11];
  v27 = a3[12];
  v28 = a1 + v26;
  v29 = a2 + v26;
  *(_DWORD *)v28 = *(_DWORD *)v29;
  *(_BYTE *)(v28 + 4) = *(_BYTE *)(v29 + 4);
  *(_BYTE *)(a1 + v27) = *(_BYTE *)(a2 + v27);
  *(_BYTE *)(a1 + a3[13]) = *(_BYTE *)(a2 + a3[13]);
  return a1;
}

uint64_t getEnumTagSinglePayload for AdJournalEntryEvent.Model()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC58B0D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_1DC62ABA8();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for AdJournalEntryEvent.Model()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC58B160(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_1DC62ABA8();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  return result;
}

uint64_t sub_1DC58B1DC()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1DC62ABA8();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for AdJournalEntryEvent.Model.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 9 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 9) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF7)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF6)
    return ((uint64_t (*)(void))((char *)&loc_1DC58B2D8 + 4 * byte_1DC63D91F[v4]))();
  *a1 = a2 + 9;
  return ((uint64_t (*)(void))((char *)sub_1DC58B30C + 4 * byte_1DC63D91A[v4]))();
}

uint64_t sub_1DC58B30C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC58B314(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DC58B31CLL);
  return result;
}

uint64_t sub_1DC58B328(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DC58B330);
  *(_BYTE *)result = a2 + 9;
  return result;
}

uint64_t sub_1DC58B334(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC58B33C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AdJournalEntryEvent.Model.CodingKeys()
{
  return &type metadata for AdJournalEntryEvent.Model.CodingKeys;
}

unint64_t sub_1DC58B35C()
{
  unint64_t result;

  result = qword_1F036D7F8;
  if (!qword_1F036D7F8)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC63DBB4, &type metadata for AdJournalEntryEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036D7F8);
  }
  return result;
}

unint64_t sub_1DC58B3A4()
{
  unint64_t result;

  result = qword_1F036D800;
  if (!qword_1F036D800)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC63DB24, &type metadata for AdJournalEntryEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036D800);
  }
  return result;
}

unint64_t sub_1DC58B3EC()
{
  unint64_t result;

  result = qword_1F036D808;
  if (!qword_1F036D808)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC63DB4C, &type metadata for AdJournalEntryEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036D808);
  }
  return result;
}

uint64_t sub_1DC58B430(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x746144746E657665 && a2 == 0xE900000000000061;
  if (v2 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6144726573556461 && a2 == 0xEA00000000006174 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x446C656E6E616863 && a2 == 0xEB00000000617461 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6974616572436461 && a2 == 0xEE00617461446576 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6D6563616C506461 && a2 == 0xEF61746144746E65 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000001DC64D120 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x6144657A69536461 && a2 == 0xEA00000000006174 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x697469736F506461 && a2 == 0xEE00617461446E6FLL || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x6144646565466461 && a2 == 0xEA00000000006174 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x4470756F72476461 && a2 == 0xEB00000000617461)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else
  {
    v6 = sub_1DC62B520();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 9;
    else
      return 10;
  }
}

uint64_t sub_1DC58B8D0(uint64_t a1)
{
  return sub_1DC4BE784(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], qword_1EDB10BF0, MEMORY[0x1E0CF8078]);
}

uint64_t static EarningsBarExposureEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C2FE8(&qword_1EDB0E368, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1EDB10BF0, a1);
}

uint64_t sub_1DC58B910(uint64_t a1)
{
  return sub_1DC4BE784(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], qword_1EDB10C08, MEMORY[0x1E0CF8380]);
}

uint64_t static EarningsBarExposureEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C2FE8(&qword_1EDB10C20, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1EDB10C08, a1);
}

uint64_t EarningsBarExposureEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C37DC((uint64_t (*)(_QWORD))sub_1DC4B6600, a1);
}

uint64_t EarningsBarExposureEvent.eventData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  sub_1DC4B6600();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*EarningsBarExposureEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t EarningsBarExposureEvent.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C382C(type metadata accessor for EarningsBarExposureEvent, (uint64_t (*)(_QWORD))sub_1DC4B66A4, a1);
}

uint64_t type metadata accessor for EarningsBarExposureEvent(uint64_t a1)
{
  return sub_1DC4B385C(a1, qword_1EDB10C28);
}

uint64_t EarningsBarExposureEvent.timedData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for EarningsBarExposureEvent(0) + 20);
  sub_1DC4B66A4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*EarningsBarExposureEvent.timedData.modify())()
{
  type metadata accessor for EarningsBarExposureEvent(0);
  return nullsub_1;
}

uint64_t EarningsBarExposureEvent.feedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for EarningsBarExposureEvent(0) + 24);
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t EarningsBarExposureEvent.feedData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for EarningsBarExposureEvent(0) + 24);
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*EarningsBarExposureEvent.feedData.modify())()
{
  type metadata accessor for EarningsBarExposureEvent(0);
  return nullsub_1;
}

uint64_t EarningsBarExposureEvent.viewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for EarningsBarExposureEvent(0) + 28);
  sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t EarningsBarExposureEvent.viewData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for EarningsBarExposureEvent(0) + 28);
  sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*EarningsBarExposureEvent.viewData.modify())()
{
  type metadata accessor for EarningsBarExposureEvent(0);
  return nullsub_1;
}

uint64_t EarningsBarExposureEvent.symbolData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for EarningsBarExposureEvent(0) + 32);
  sub_1DC4B4B50(0, &qword_1EDB0E750, (void (*)(void))sub_1DC4C3328, (void (*)(void))sub_1DC4C336C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t EarningsBarExposureEvent.symbolData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for EarningsBarExposureEvent(0) + 32);
  sub_1DC4B4B50(0, &qword_1EDB0E750, (void (*)(void))sub_1DC4C3328, (void (*)(void))sub_1DC4C336C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*EarningsBarExposureEvent.symbolData.modify())()
{
  type metadata accessor for EarningsBarExposureEvent(0);
  return nullsub_1;
}

uint64_t EarningsBarExposureEvent.earningsData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for EarningsBarExposureEvent(0) + 36);
  sub_1DC4B4B50(0, &qword_1EDB0E788, (void (*)(void))sub_1DC58BD8C, (void (*)(void))sub_1DC58BDD0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

unint64_t sub_1DC58BD8C()
{
  unint64_t result;

  result = qword_1EDB0E2A8;
  if (!qword_1EDB0E2A8)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for EarningsData, &type metadata for EarningsData);
    atomic_store(result, (unint64_t *)&qword_1EDB0E2A8);
  }
  return result;
}

unint64_t sub_1DC58BDD0()
{
  unint64_t result;

  result = qword_1EDB0EE68;
  if (!qword_1EDB0EE68)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for EarningsData, &type metadata for EarningsData);
    atomic_store(result, (unint64_t *)&qword_1EDB0EE68);
  }
  return result;
}

uint64_t EarningsBarExposureEvent.earningsData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for EarningsBarExposureEvent(0) + 36);
  sub_1DC4B4B50(0, &qword_1EDB0E788, (void (*)(void))sub_1DC58BD8C, (void (*)(void))sub_1DC58BDD0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*EarningsBarExposureEvent.earningsData.modify())()
{
  type metadata accessor for EarningsBarExposureEvent(0);
  return nullsub_1;
}

uint64_t EarningsBarExposureEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v2 = *MEMORY[0x1E0CF8128];
  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
  v4 = (int *)type metadata accessor for EarningsBarExposureEvent(0);
  v5 = a1 + v4[5];
  sub_1DC4B66A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 104))(v5, v2, v6);
  v7 = a1 + v4[6];
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 104))(v7, v2, v8);
  v9 = a1 + v4[7];
  sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 104))(v9, v2, v10);
  v11 = a1 + v4[8];
  sub_1DC4B4B50(0, &qword_1EDB0E750, (void (*)(void))sub_1DC4C3328, (void (*)(void))sub_1DC4C336C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 104))(v11, v2, v12);
  v13 = a1 + v4[9];
  sub_1DC4B4B50(0, &qword_1EDB0E788, (void (*)(void))sub_1DC58BD8C, (void (*)(void))sub_1DC58BDD0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 104))(v13, v2, v14);
}

uint64_t EarningsBarExposureEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C37DC((uint64_t (*)(_QWORD))MEMORY[0x1E0CF8670], a1);
}

uint64_t EarningsBarExposureEvent.Model.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C382C(type metadata accessor for EarningsBarExposureEvent.Model, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF86C0], a1);
}

uint64_t type metadata accessor for EarningsBarExposureEvent.Model(uint64_t a1)
{
  return sub_1DC4B385C(a1, qword_1F036D880);
}

uint64_t EarningsBarExposureEvent.Model.feedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = v1 + *(int *)(type metadata accessor for EarningsBarExposureEvent.Model(0) + 24);
  v5 = *(_QWORD *)(v3 + 8);
  v4 = *(_QWORD *)(v3 + 16);
  *(_BYTE *)a1 = *(_BYTE *)v3;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v4;
  return swift_bridgeObjectRetain();
}

uint64_t EarningsBarExposureEvent.Model.viewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for EarningsBarExposureEvent.Model(0) + 28));
  v5 = *v3;
  v4 = v3[1];
  LOWORD(v3) = *((_WORD *)v3 + 8);
  *(_QWORD *)a1 = v5;
  *(_QWORD *)(a1 + 8) = v4;
  *(_WORD *)(a1 + 16) = (_WORD)v3;
  return swift_bridgeObjectRetain();
}

uint64_t EarningsBarExposureEvent.Model.symbolData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;

  v3 = v1 + *(int *)(type metadata accessor for EarningsBarExposureEvent.Model(0) + 32);
  v4 = *(_QWORD *)(v3 + 8);
  v5 = *(_BYTE *)(v3 + 16);
  v6 = *(_QWORD *)(v3 + 24);
  v7 = *(_QWORD *)(v3 + 32);
  *(_QWORD *)a1 = *(_QWORD *)v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t EarningsBarExposureEvent.Model.earningsData.getter@<X0>(_DWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for EarningsBarExposureEvent.Model(0);
  *a1 = *(_DWORD *)(v1 + *(int *)(result + 36));
  return result;
}

uint64_t EarningsBarExposureEvent.Model.init(eventData:timedData:feedData:viewData:symbolData:earningsData:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X2>, uint64_t *a4@<X3>, uint64_t *a5@<X4>, int *a6@<X5>, uint64_t a7@<X8>)
{
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int16 v15;
  uint64_t v16;
  int *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t result;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  int v29;

  v10 = *a3;
  v11 = *((_QWORD *)a3 + 1);
  v12 = *((_QWORD *)a3 + 2);
  v13 = *a4;
  v14 = a4[1];
  v15 = *((_WORD *)a4 + 8);
  v27 = a5[1];
  v28 = *a5;
  v26 = *((_BYTE *)a5 + 16);
  v24 = a5[4];
  v25 = a5[3];
  v29 = *a6;
  v16 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(a7, a1, v16);
  v17 = (int *)type metadata accessor for EarningsBarExposureEvent.Model(0);
  v18 = a7 + v17[5];
  v19 = sub_1DC62ABC0();
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v18, a2, v19);
  v21 = a7 + v17[6];
  *(_BYTE *)v21 = v10;
  *(_QWORD *)(v21 + 8) = v11;
  *(_QWORD *)(v21 + 16) = v12;
  v22 = a7 + v17[7];
  *(_QWORD *)v22 = v13;
  *(_QWORD *)(v22 + 8) = v14;
  *(_WORD *)(v22 + 16) = v15;
  v23 = a7 + v17[8];
  *(_QWORD *)v23 = v28;
  *(_QWORD *)(v23 + 8) = v27;
  *(_BYTE *)(v23 + 16) = v26;
  *(_QWORD *)(v23 + 24) = v25;
  *(_QWORD *)(v23 + 32) = v24;
  *(_DWORD *)(a7 + v17[9]) = v29;
  return result;
}

uint64_t sub_1DC58C298()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1DC58C2CC + 4 * byte_1DC63DC30[*v0]))(0x746144746E657665, 0xE900000000000061);
}

uint64_t sub_1DC58C2CC()
{
  return 0x74614464656D6974;
}

uint64_t sub_1DC58C2E0()
{
  return 0x6174614464656566;
}

uint64_t sub_1DC58C308()
{
  return 0x61446C6F626D7973;
}

uint64_t sub_1DC58C324()
{
  return 0x73676E696E726165;
}

uint64_t sub_1DC58C344@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1DC58E754(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DC58C368()
{
  sub_1DC58C684();
  return sub_1DC62B604();
}

uint64_t sub_1DC58C390()
{
  sub_1DC58C684();
  return sub_1DC62B610();
}

uint64_t EarningsBarExposureEvent.Model.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int *v10;
  char *v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;

  v3 = v1;
  sub_1DC58CBEC(0, &qword_1F036D810, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v25 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC58C684();
  sub_1DC62B5F8();
  LOBYTE(v25) = 0;
  sub_1DC62ABA8();
  sub_1DC4B6748(&qword_1EDB0E8A8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF8670], MEMORY[0x1E0CF8680]);
  sub_1DC62B4E4();
  if (!v2)
  {
    v10 = (int *)type metadata accessor for EarningsBarExposureEvent.Model(0);
    LOBYTE(v25) = 1;
    sub_1DC62ABC0();
    sub_1DC4B6748(&qword_1EDB0E8B8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF86C0], MEMORY[0x1E0CF86D0]);
    sub_1DC62B4E4();
    v11 = (char *)(v3 + v10[6]);
    v12 = *v11;
    v14 = *((_QWORD *)v11 + 1);
    v13 = *((_QWORD *)v11 + 2);
    LOBYTE(v25) = v12;
    v26 = v14;
    v27 = v13;
    v30 = 2;
    sub_1DC4BEFD8();
    sub_1DC62B4E4();
    v15 = (uint64_t *)(v3 + v10[7]);
    v16 = *v15;
    v17 = v15[1];
    LOWORD(v15) = *((_WORD *)v15 + 8);
    v25 = v16;
    v26 = v17;
    LOWORD(v27) = (_WORD)v15;
    v30 = 3;
    sub_1DC4BEDF0();
    sub_1DC62B4E4();
    v18 = (uint64_t *)(v3 + v10[8]);
    v19 = *v18;
    v20 = v18[1];
    v21 = *((_BYTE *)v18 + 16);
    v23 = v18[3];
    v22 = v18[4];
    v25 = v19;
    v26 = v20;
    LOBYTE(v27) = v21;
    v28 = v23;
    v29 = v22;
    v30 = 4;
    sub_1DC4C336C();
    sub_1DC62B4E4();
    LODWORD(v25) = *(_DWORD *)(v3 + v10[9]);
    v30 = 5;
    sub_1DC58BDD0();
    sub_1DC62B4E4();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1DC58C684()
{
  unint64_t result;

  result = qword_1F036D818;
  if (!qword_1F036D818)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC63DE5C, &type metadata for EarningsBarExposureEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036D818);
  }
  return result;
}

uint64_t EarningsBarExposureEvent.Model.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __int16 v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char v47;

  v33 = a2;
  v36 = sub_1DC62ABC0();
  v34 = *(_QWORD *)(v36 - 8);
  MEMORY[0x1E0C80A78](v36);
  v35 = (char *)&v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = sub_1DC62ABA8();
  v4 = *(_QWORD *)(v37 - 8);
  MEMORY[0x1E0C80A78](v37);
  v38 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC58CBEC(0, &qword_1F036D820, MEMORY[0x1E0DED048]);
  v40 = v6;
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v31 - v8;
  v10 = (int *)type metadata accessor for EarningsBarExposureEvent.Model(0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC58C684();
  v39 = v9;
  v13 = v41;
  sub_1DC62B5E0();
  if (v13)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v41 = v7;
  v31 = v4;
  v32 = a1;
  v15 = v35;
  v14 = v36;
  v16 = (uint64_t)v12;
  LOBYTE(v42) = 0;
  sub_1DC4B6748(&qword_1EDB0E278, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF8670], MEMORY[0x1E0CF8688]);
  v18 = v37;
  v17 = v38;
  sub_1DC62B454();
  (*(void (**)(uint64_t, char *, uint64_t))(v31 + 32))(v16, v17, v18);
  LOBYTE(v42) = 1;
  sub_1DC4B6748(&qword_1EDB0E8C0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF86C0], MEMORY[0x1E0CF86D8]);
  sub_1DC62B454();
  (*(void (**)(uint64_t, char *, uint64_t))(v34 + 32))(v16 + v10[5], v15, v14);
  v47 = 2;
  sub_1DC4BEF94();
  sub_1DC62B454();
  v19 = v43;
  v20 = v44;
  v21 = v16 + v10[6];
  *(_BYTE *)v21 = v42;
  *(_QWORD *)(v21 + 8) = v19;
  *(_QWORD *)(v21 + 16) = v20;
  v47 = 3;
  sub_1DC4BEDAC();
  sub_1DC62B454();
  v22 = v43;
  v23 = v44;
  v24 = v16 + v10[7];
  *(_QWORD *)v24 = v42;
  *(_QWORD *)(v24 + 8) = v22;
  *(_WORD *)(v24 + 16) = v23;
  v47 = 4;
  sub_1DC4C3328();
  sub_1DC62B454();
  v25 = v43;
  v26 = v44;
  v27 = v45;
  v28 = v46;
  v29 = v16 + v10[8];
  *(_QWORD *)v29 = v42;
  *(_QWORD *)(v29 + 8) = v25;
  *(_BYTE *)(v29 + 16) = v26;
  *(_QWORD *)(v29 + 24) = v27;
  *(_QWORD *)(v29 + 32) = v28;
  v47 = 5;
  sub_1DC58BD8C();
  sub_1DC62B454();
  (*(void (**)(char *, uint64_t))(v41 + 8))(v39, v40);
  *(_DWORD *)(v16 + v10[9]) = v42;
  sub_1DC58CC48(v16, v33);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v32);
  return sub_1DC58CC8C(v16);
}

void sub_1DC58CBEC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1DC58C684();
    v7 = a3(a1, &type metadata for EarningsBarExposureEvent.Model.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1DC58CC48(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for EarningsBarExposureEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DC58CC8C(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for EarningsBarExposureEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1DC58CCC8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return EarningsBarExposureEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_1DC58CCDC(_QWORD *a1)
{
  return EarningsBarExposureEvent.Model.encode(to:)(a1);
}

uint64_t sub_1DC58CCF0@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4B2C68(&qword_1EDB0E368, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1EDB10BF0, a1);
}

uint64_t sub_1DC58CD14@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4B2C68(&qword_1EDB10C20, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1EDB10C08, a1);
}

uint64_t sub_1DC58CD38@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v4 = *MEMORY[0x1E0CF8128];
  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 104))(a2, v4, v5);
  v6 = a2 + a1[5];
  sub_1DC4B66A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 104))(v6, v4, v7);
  v8 = a2 + a1[6];
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 104))(v8, v4, v9);
  v10 = a2 + a1[7];
  sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 104))(v10, v4, v11);
  v12 = a2 + a1[8];
  sub_1DC4B4B50(0, &qword_1EDB0E750, (void (*)(void))sub_1DC4C3328, (void (*)(void))sub_1DC4C336C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 104))(v12, v4, v13);
  v14 = a2 + a1[9];
  sub_1DC4B4B50(0, &qword_1EDB0E788, (void (*)(void))sub_1DC58BD8C, (void (*)(void))sub_1DC58BDD0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 104))(v14, v4, v15);
}

uint64_t *initializeBufferWithCopyOfBuffer for EarningsBarExposureEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v28 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v28 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_1DC4B6600();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    sub_1DC4B66A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = a3[6];
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
    v16 = a3[7];
    v17 = (char *)a1 + v16;
    v18 = (char *)a2 + v16;
    sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
    v20 = a3[8];
    v21 = (char *)a1 + v20;
    v22 = (char *)a2 + v20;
    sub_1DC4B4B50(0, &qword_1EDB0E750, (void (*)(void))sub_1DC4C3328, (void (*)(void))sub_1DC4C336C);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v21, v22, v23);
    v24 = a3[9];
    v25 = (char *)a1 + v24;
    v26 = (char *)a2 + v24;
    sub_1DC4B4B50(0, &qword_1EDB0E788, (void (*)(void))sub_1DC58BD8C, (void (*)(void))sub_1DC58BDD0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v25, v26, v27);
  }
  return a1;
}

uint64_t destroy for EarningsBarExposureEvent(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + a2[5];
  sub_1DC4B66A4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = a1 + a2[6];
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  v9 = a1 + a2[7];
  sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  v11 = a1 + a2[8];
  sub_1DC4B4B50(0, &qword_1EDB0E750, (void (*)(void))sub_1DC4C3328, (void (*)(void))sub_1DC4C336C);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
  v13 = a1 + a2[9];
  sub_1DC4B4B50(0, &qword_1EDB0E788, (void (*)(void))sub_1DC58BD8C, (void (*)(void))sub_1DC58BDD0);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v13, v14);
}

uint64_t initializeWithCopy for EarningsBarExposureEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1DC4B66A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1DC4B4B50(0, &qword_1EDB0E750, (void (*)(void))sub_1DC4C3328, (void (*)(void))sub_1DC4C336C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1DC4B4B50(0, &qword_1EDB0E788, (void (*)(void))sub_1DC58BD8C, (void (*)(void))sub_1DC58BDD0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v24, v25, v26);
  return a1;
}

uint64_t assignWithCopy for EarningsBarExposureEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1DC4B66A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 24))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 24))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1DC4B4B50(0, &qword_1EDB0E750, (void (*)(void))sub_1DC4C3328, (void (*)(void))sub_1DC4C336C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 24))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1DC4B4B50(0, &qword_1EDB0E788, (void (*)(void))sub_1DC58BD8C, (void (*)(void))sub_1DC58BDD0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 24))(v24, v25, v26);
  return a1;
}

uint64_t initializeWithTake for EarningsBarExposureEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1DC4B66A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1DC4B4B50(0, &qword_1EDB0E750, (void (*)(void))sub_1DC4C3328, (void (*)(void))sub_1DC4C336C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1DC4B4B50(0, &qword_1EDB0E788, (void (*)(void))sub_1DC58BD8C, (void (*)(void))sub_1DC58BDD0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(v24, v25, v26);
  return a1;
}

uint64_t assignWithTake for EarningsBarExposureEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1DC4B66A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 40))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 40))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1DC4B4B50(0, &qword_1EDB0E750, (void (*)(void))sub_1DC4C3328, (void (*)(void))sub_1DC4C336C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 40))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1DC4B4B50(0, &qword_1EDB0E788, (void (*)(void))sub_1DC58BD8C, (void (*)(void))sub_1DC58BDD0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 40))(v24, v25, v26);
  return a1;
}

uint64_t getEnumTagSinglePayload for EarningsBarExposureEvent()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC58D900(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  sub_1DC4B6600();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    sub_1DC4B66A4();
    v12 = *(_QWORD *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
    {
      v8 = v11;
      v13 = a3[5];
    }
    else
    {
      sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
      v12 = *(_QWORD *)(v14 - 8);
      if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
      {
        v8 = v14;
        v13 = a3[6];
      }
      else
      {
        sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
        v12 = *(_QWORD *)(v15 - 8);
        if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
        {
          v8 = v15;
          v13 = a3[7];
        }
        else
        {
          sub_1DC4B4B50(0, &qword_1EDB0E750, (void (*)(void))sub_1DC4C3328, (void (*)(void))sub_1DC4C336C);
          v12 = *(_QWORD *)(v16 - 8);
          if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
          {
            v8 = v16;
            v13 = a3[8];
          }
          else
          {
            sub_1DC4B4B50(0, &qword_1EDB0E788, (void (*)(void))sub_1DC58BD8C, (void (*)(void))sub_1DC58BDD0);
            v8 = v17;
            v12 = *(_QWORD *)(v17 - 8);
            v13 = a3[9];
          }
        }
      }
    }
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t storeEnumTagSinglePayload for EarningsBarExposureEvent()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC58DA90(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  sub_1DC4B6600();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    sub_1DC4B66A4();
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = a4[5];
    }
    else
    {
      sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
      v14 = *(_QWORD *)(v16 - 8);
      if (*(_DWORD *)(v14 + 84) == a3)
      {
        v10 = v16;
        v15 = a4[6];
      }
      else
      {
        sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
        v14 = *(_QWORD *)(v17 - 8);
        if (*(_DWORD *)(v14 + 84) == a3)
        {
          v10 = v17;
          v15 = a4[7];
        }
        else
        {
          sub_1DC4B4B50(0, &qword_1EDB0E750, (void (*)(void))sub_1DC4C3328, (void (*)(void))sub_1DC4C336C);
          v14 = *(_QWORD *)(v18 - 8);
          if (*(_DWORD *)(v14 + 84) == a3)
          {
            v10 = v18;
            v15 = a4[8];
          }
          else
          {
            sub_1DC4B4B50(0, &qword_1EDB0E788, (void (*)(void))sub_1DC58BD8C, (void (*)(void))sub_1DC58BDD0);
            v10 = v19;
            v14 = *(_QWORD *)(v19 - 8);
            v15 = a4[9];
          }
        }
      }
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_1DC58DC1C()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;

  sub_1DC4B6600();
  if (v0 <= 0x3F)
  {
    sub_1DC4B66A4();
    if (v1 <= 0x3F)
    {
      sub_1DC4B4B50(319, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
      if (v2 <= 0x3F)
      {
        sub_1DC4B4B50(319, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
        if (v3 <= 0x3F)
        {
          sub_1DC4B4B50(319, &qword_1EDB0E750, (void (*)(void))sub_1DC4C3328, (void (*)(void))sub_1DC4C336C);
          if (v4 <= 0x3F)
          {
            sub_1DC4B4B50(319, &qword_1EDB0E788, (void (*)(void))sub_1DC58BD8C, (void (*)(void))sub_1DC58BDD0);
            if (v5 <= 0x3F)
              swift_initStructMetadata();
          }
        }
      }
    }
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for EarningsBarExposureEvent.Model(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v26 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v26 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1DC62ABA8();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_1DC62ABC0();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = a3[6];
    v13 = a3[7];
    v14 = (char *)a1 + v12;
    v15 = (char *)a2 + v12;
    *v14 = *v15;
    v16 = *((_QWORD *)v15 + 2);
    *((_QWORD *)v14 + 1) = *((_QWORD *)v15 + 1);
    *((_QWORD *)v14 + 2) = v16;
    v17 = (char *)a1 + v13;
    v18 = (char *)a2 + v13;
    v19 = *((_QWORD *)v18 + 1);
    *(_QWORD *)v17 = *(_QWORD *)v18;
    *((_QWORD *)v17 + 1) = v19;
    *((_WORD *)v17 + 8) = *((_WORD *)v18 + 8);
    v20 = a3[8];
    v21 = a3[9];
    v22 = (char *)a1 + v20;
    v23 = (char *)a2 + v20;
    v24 = *((_QWORD *)v23 + 1);
    *(_QWORD *)v22 = *(_QWORD *)v23;
    *((_QWORD *)v22 + 1) = v24;
    v22[16] = v23[16];
    v25 = *((_QWORD *)v23 + 4);
    *((_QWORD *)v22 + 3) = *((_QWORD *)v23 + 3);
    *((_QWORD *)v22 + 4) = v25;
    *(_DWORD *)((char *)a1 + v21) = *(_DWORD *)((char *)a2 + v21);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for EarningsBarExposureEvent.Model(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + *(int *)(a2 + 20);
  v6 = sub_1DC62ABC0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for EarningsBarExposureEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v6 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1DC62ABC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = a3[6];
  v12 = a3[7];
  v13 = a1 + v11;
  v14 = a2 + v11;
  *(_BYTE *)v13 = *(_BYTE *)v14;
  v15 = *(_QWORD *)(v14 + 16);
  *(_QWORD *)(v13 + 8) = *(_QWORD *)(v14 + 8);
  *(_QWORD *)(v13 + 16) = v15;
  v16 = a1 + v12;
  v17 = a2 + v12;
  v18 = *(_QWORD *)(v17 + 8);
  *(_QWORD *)v16 = *(_QWORD *)v17;
  *(_QWORD *)(v16 + 8) = v18;
  *(_WORD *)(v16 + 16) = *(_WORD *)(v17 + 16);
  v19 = a3[8];
  v20 = a3[9];
  v21 = a1 + v19;
  v22 = a2 + v19;
  v23 = *(_QWORD *)(v22 + 8);
  *(_QWORD *)v21 = *(_QWORD *)v22;
  *(_QWORD *)(v21 + 8) = v23;
  *(_BYTE *)(v21 + 16) = *(_BYTE *)(v22 + 16);
  v24 = *(_QWORD *)(v22 + 32);
  *(_QWORD *)(v21 + 24) = *(_QWORD *)(v22 + 24);
  *(_QWORD *)(v21 + 32) = v24;
  *(_DWORD *)(a1 + v20) = *(_DWORD *)(a2 + v20);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for EarningsBarExposureEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v6 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1DC62ABC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  *(_BYTE *)v12 = *(_BYTE *)v13;
  *(_QWORD *)(v12 + 8) = *(_QWORD *)(v13 + 8);
  *(_QWORD *)(v12 + 16) = *(_QWORD *)(v13 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v14 = a3[7];
  v15 = a1 + v14;
  v16 = a2 + v14;
  *(_QWORD *)v15 = *(_QWORD *)(a2 + v14);
  *(_QWORD *)(v15 + 8) = *(_QWORD *)(a2 + v14 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v15 + 16) = *(_BYTE *)(v16 + 16);
  *(_BYTE *)(v15 + 17) = *(_BYTE *)(v16 + 17);
  v17 = a3[8];
  v18 = a1 + v17;
  v19 = a2 + v17;
  *(_QWORD *)v18 = *(_QWORD *)(a2 + v17);
  *(_QWORD *)(v18 + 8) = *(_QWORD *)(a2 + v17 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v18 + 16) = *(_BYTE *)(v19 + 16);
  *(_QWORD *)(v18 + 24) = *(_QWORD *)(v19 + 24);
  *(_QWORD *)(v18 + 32) = *(_QWORD *)(v19 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + a3[9]) = *(_DWORD *)(a2 + a3[9]);
  return a1;
}

uint64_t initializeWithTake for EarningsBarExposureEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int128 *v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;

  v6 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1DC62ABC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[6];
  v12 = a3[7];
  v13 = a1 + v11;
  v14 = (__int128 *)(a2 + v11);
  v15 = *v14;
  *(_QWORD *)(v13 + 16) = *((_QWORD *)v14 + 2);
  *(_OWORD *)v13 = v15;
  v16 = a1 + v12;
  v17 = a2 + v12;
  *(_OWORD *)v16 = *(_OWORD *)v17;
  *(_WORD *)(v16 + 16) = *(_WORD *)(v17 + 16);
  v18 = a3[8];
  v19 = a3[9];
  v20 = a1 + v18;
  v21 = a2 + v18;
  v22 = *(_OWORD *)(v21 + 16);
  *(_OWORD *)v20 = *(_OWORD *)v21;
  *(_OWORD *)(v20 + 16) = v22;
  *(_QWORD *)(v20 + 32) = *(_QWORD *)(v21 + 32);
  *(_DWORD *)(a1 + v19) = *(_DWORD *)(a2 + v19);
  return a1;
}

uint64_t assignWithTake for EarningsBarExposureEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v6 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1DC62ABC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  *(_BYTE *)v12 = *(_BYTE *)v13;
  v15 = *(_QWORD *)(v13 + 8);
  v14 = *(_QWORD *)(v13 + 16);
  *(_QWORD *)(v12 + 8) = v15;
  *(_QWORD *)(v12 + 16) = v14;
  swift_bridgeObjectRelease();
  v16 = a3[7];
  v17 = a1 + v16;
  v18 = a2 + v16;
  v19 = *(_QWORD *)(a2 + v16 + 8);
  *(_QWORD *)v17 = *(_QWORD *)(a2 + v16);
  *(_QWORD *)(v17 + 8) = v19;
  swift_bridgeObjectRelease();
  *(_WORD *)(v17 + 16) = *(_WORD *)(v18 + 16);
  v20 = a3[8];
  v21 = a1 + v20;
  v22 = a2 + v20;
  v23 = *(_QWORD *)(a2 + v20 + 8);
  *(_QWORD *)v21 = *(_QWORD *)(a2 + v20);
  *(_QWORD *)(v21 + 8) = v23;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v21 + 16) = *(_BYTE *)(v22 + 16);
  v24 = *(_QWORD *)(v22 + 32);
  *(_QWORD *)(v21 + 24) = *(_QWORD *)(v22 + 24);
  *(_QWORD *)(v21 + 32) = v24;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + a3[9]) = *(_DWORD *)(a2 + a3[9]);
  return a1;
}

uint64_t getEnumTagSinglePayload for EarningsBarExposureEvent.Model()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC58E3A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v14;

  v6 = sub_1DC62ABA8();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  v11 = sub_1DC62ABC0();
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  v14 = *(_QWORD *)(a1 + *(int *)(a3 + 24) + 16);
  if (v14 >= 0xFFFFFFFF)
    LODWORD(v14) = -1;
  return (v14 + 1);
}

uint64_t storeEnumTagSinglePayload for EarningsBarExposureEvent.Model()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC58E458(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t result;
  uint64_t v14;

  v8 = sub_1DC62ABA8();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
    return v11(v12, a2, a2, v10);
  }
  result = sub_1DC62ABC0();
  v14 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = result;
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    return v11(v12, a2, a2, v10);
  }
  *(_QWORD *)(a1 + *(int *)(a4 + 24) + 16) = (a2 - 1);
  return result;
}

uint64_t sub_1DC58E500()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_1DC62ABA8();
  if (v1 <= 0x3F)
  {
    result = sub_1DC62ABC0();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for EarningsBarExposureEvent.Model.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_1DC58E5FC + 4 * byte_1DC63DC3B[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_1DC58E630 + 4 * byte_1DC63DC36[v4]))();
}

uint64_t sub_1DC58E630(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC58E638(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DC58E640);
  return result;
}

uint64_t sub_1DC58E64C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DC58E654);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_1DC58E658(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC58E660(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for EarningsBarExposureEvent.Model.CodingKeys()
{
  return &type metadata for EarningsBarExposureEvent.Model.CodingKeys;
}

unint64_t sub_1DC58E680()
{
  unint64_t result;

  result = qword_1F036D8C8;
  if (!qword_1F036D8C8)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC63DE34, &type metadata for EarningsBarExposureEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036D8C8);
  }
  return result;
}

unint64_t sub_1DC58E6C8()
{
  unint64_t result;

  result = qword_1F036D8D0;
  if (!qword_1F036D8D0)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC63DDA4, &type metadata for EarningsBarExposureEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036D8D0);
  }
  return result;
}

unint64_t sub_1DC58E710()
{
  unint64_t result;

  result = qword_1F036D8D8;
  if (!qword_1F036D8D8)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC63DDCC, &type metadata for EarningsBarExposureEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036D8D8);
  }
  return result;
}

uint64_t sub_1DC58E754(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x746144746E657665 && a2 == 0xE900000000000061;
  if (v2 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x74614464656D6974 && a2 == 0xE900000000000061 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6174614464656566 && a2 == 0xE800000000000000 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6174614477656976 && a2 == 0xE800000000000000 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x61446C6F626D7973 && a2 == 0xEA00000000006174 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x73676E696E726165 && a2 == 0xEC00000061746144)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    v6 = sub_1DC62B520();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 5;
    else
      return 6;
  }
}

uint64_t sub_1DC58EA10()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  char v14;
  char *v15;
  uint64_t v16;
  void (*v17)(char *, uint64_t);
  uint64_t v18;
  uint64_t v19;
  char *v20;
  _QWORD v22[2];
  _BYTE v23[24];
  uint64_t v24;
  __int128 v25;
  __int128 v26;

  v1 = v0;
  v2 = sub_1DC62A3B0();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1DC62AE54();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC62ADA0();
  v10 = sub_1DC62AE48();
  v12 = v11;
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  if (v12)
  {
    *((_QWORD *)&v26 + 1) = MEMORY[0x1E0DEA968];
    *(_QWORD *)&v25 = v10;
    *((_QWORD *)&v25 + 1) = v12;
  }
  else
  {
    v25 = 0u;
    v26 = 0u;
  }
  sub_1DC4BE8E4((uint64_t)&v25, (uint64_t)v23);
  if (!v24)
  {
    sub_1DC4B2B3C((uint64_t)v23);
    goto LABEL_12;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_12:
    v14 = 2;
    goto LABEL_13;
  }
  if (v22[0] != 0xD000000000000017 || v22[1] != 0x80000001DC64BEE0)
  {
    v13 = sub_1DC62B520();
    swift_bridgeObjectRelease();
    if ((v13 & 1) != 0)
      goto LABEL_11;
    goto LABEL_12;
  }
  swift_bridgeObjectRelease();
LABEL_11:
  v14 = 1;
LABEL_13:
  sub_1DC4B2B3C((uint64_t)&v25);
  v15 = &v1[OBJC_IVAR____TtC15StocksAnalytics15SessionObserver_appConfigurationManager];
  __swift_project_boxed_opaque_existential_1(&v1[OBJC_IVAR____TtC15StocksAnalytics15SessionObserver_appConfigurationManager], *(_QWORD *)&v1[OBJC_IVAR____TtC15StocksAnalytics15SessionObserver_appConfigurationManager + 24]);
  sub_1DC62A464();
  v16 = sub_1DC62A314();
  v17 = *(void (**)(char *, uint64_t))(v3 + 8);
  v17(v5, v2);
  __swift_project_boxed_opaque_existential_1(v15, *((_QWORD *)v15 + 3));
  sub_1DC62A464();
  v18 = sub_1DC62A320();
  v17(v5, v2);
  v19 = swift_allocObject();
  *(_QWORD *)(v19 + 16) = v1;
  *(_BYTE *)(v19 + 24) = v14;
  *(_QWORD *)(v19 + 32) = v16;
  *(_QWORD *)(v19 + 40) = v18;
  *(_BYTE *)(v19 + 48) = 5;
  v20 = v1;
  sub_1DC62A854();
  return swift_release();
}

uint64_t _s15StocksAnalytics15SessionObserverC018sceneWillConnectToC011withOptionsy13TeaFoundation015SceneConnectionJ0V_tF_0()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t result;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(uint64_t *__return_ptr, char *, uint64_t, uint64_t);
  uint64_t v20;
  char *v21;
  uint64_t v22;
  void (*v23)(char *, uint64_t);
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  char *v28;
  int v29;
  int v30;
  uint64_t v31;

  v1 = v0;
  v2 = sub_1DC62A3B0();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC4BA670(0, &qword_1EDB11FC8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF0C40], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v27 - v7;
  v9 = sub_1DC62AEE4();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = sub_1DC62AE60();
  if (result)
  {
    v14 = (void *)result;
    sub_1DC62B220();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
    {
      sub_1DC58F400((uint64_t)v8);
      v29 = 2;
      v30 = 5;
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v8, v9);
      v28 = v0;
      v15 = v2;
      v16 = v3;
      v17 = *(_QWORD *)&v0[OBJC_IVAR____TtC15StocksAnalytics15SessionObserver_appIntentExecutionTypeProvider + 24];
      v18 = *(_QWORD *)&v0[OBJC_IVAR____TtC15StocksAnalytics15SessionObserver_appIntentExecutionTypeProvider + 32];
      __swift_project_boxed_opaque_existential_1(&v0[OBJC_IVAR____TtC15StocksAnalytics15SessionObserver_appIntentExecutionTypeProvider], v17);
      v19 = *(void (**)(uint64_t *__return_ptr, char *, uint64_t, uint64_t))(v18 + 8);
      v20 = v18;
      v3 = v16;
      v2 = v15;
      v1 = v28;
      v19(&v31, v12, v17, v20);
      (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
      v29 = 9;
      v30 = v31;
    }
    v21 = &v1[OBJC_IVAR____TtC15StocksAnalytics15SessionObserver_appConfigurationManager];
    __swift_project_boxed_opaque_existential_1(&v1[OBJC_IVAR____TtC15StocksAnalytics15SessionObserver_appConfigurationManager], *(_QWORD *)&v1[OBJC_IVAR____TtC15StocksAnalytics15SessionObserver_appConfigurationManager + 24]);
    sub_1DC62A464();
    v22 = sub_1DC62A314();
    v23 = *(void (**)(char *, uint64_t))(v3 + 8);
    v23(v5, v2);
    __swift_project_boxed_opaque_existential_1(v21, *((_QWORD *)v21 + 3));
    sub_1DC62A464();
    v24 = sub_1DC62A320();
    v23(v5, v2);
    v25 = swift_allocObject();
    *(_QWORD *)(v25 + 16) = v1;
    *(_BYTE *)(v25 + 24) = v29;
    *(_QWORD *)(v25 + 32) = v22;
    *(_QWORD *)(v25 + 40) = v24;
    *(_BYTE *)(v25 + 48) = v30;
    v26 = v1;
    sub_1DC62A854();

    return swift_release();
  }
  return result;
}

uint64_t sub_1DC58EF6C(uint64_t a1, uint64_t a2, unsigned __int8 a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v20;
  unsigned __int8 v21;
  unsigned __int8 v22;

  sub_1DC4C0964();
  v11 = v10;
  v12 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = a3;
  v21 = a6;
  sub_1DC58F0FC(&v22, a4, a5, &v21, (uint64_t)v14);
  sub_1DC4BA670(0, (unint64_t *)&qword_1EDB11B40, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF8178], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v15 = sub_1DC62A818();
  v16 = *(_QWORD *)(v15 - 8);
  v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  v18 = swift_allocObject();
  *(_OWORD *)(v18 + 16) = xmmword_1DC62C660;
  (*(void (**)(unint64_t, _QWORD, uint64_t))(v16 + 104))(v18 + v17, *MEMORY[0x1E0CF8168], v15);
  sub_1DC4C0364();
  sub_1DC62A980();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
}

uint64_t sub_1DC58F0FC@<X0>(unsigned __int8 *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, unsigned __int8 *a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  id v21;
  void *v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(char *, uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  char v35;
  id v36;
  unsigned __int8 v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  int v42;
  int v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  int v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  char v53;
  unint64_t v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char v58;
  unsigned __int8 v59;
  char v60;

  v44 = a3;
  v45 = a2;
  v46 = a5;
  v7 = sub_1DC62A1F4();
  v40 = *(_QWORD *)(v7 - 8);
  v41 = v7;
  v8 = MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v39 - v11;
  v13 = sub_1DC62A1A0();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v39 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_1DC62A218();
  v18 = *(_QWORD *)(v17 - 8);
  MEMORY[0x1E0C80A78](v17);
  v20 = (char *)&v39 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  LODWORD(v19) = *a4;
  v42 = *a1;
  v43 = v19;
  v21 = objc_msgSend((id)objc_opt_self(), sel_sharedConnection);
  if (v21)
  {
    v22 = v21;
    v23 = objc_msgSend(v21, sel_isDiagnosticSubmissionAllowed);

  }
  else
  {
    v23 = 0;
  }
  sub_1DC62A20C();
  sub_1DC62A194();
  v24 = sub_1DC62A200();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  result = (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v20, v17);
  if (v24 < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
    goto LABEL_14;
  }
  if (v24 > 0x7FFFFFFF)
  {
LABEL_14:
    __break(1u);
    return result;
  }
  sub_1DC62A1E8();
  v26 = sub_1DC62A1DC();
  v28 = v27;
  v29 = v41;
  v30 = *(void (**)(char *, uint64_t))(v40 + 8);
  v30(v12, v41);
  sub_1DC62A1E8();
  v31 = sub_1DC62A1D0();
  v33 = v32;
  v30(v10, v29);
  v34 = sub_1DC62A500();
  if (v23)
  {
    v35 = NFStoreDemoMode();
    v36 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D43808]), sel_init);
    v37 = objc_msgSend(v36, sel_personalizedAds);

  }
  else
  {
    v37 = 2;
    v35 = 2;
  }
  v47 = v24;
  if ((v34 & 1) != 0)
    v38 = 1;
  else
    v38 = 2;
  v48 = v26;
  v49 = v28;
  v50 = v31;
  v51 = v33;
  v52 = v38;
  v53 = v42;
  v54 = 0xD000000000000010;
  v55 = 0x80000001DC64D1B0;
  v56 = v45;
  v57 = v44;
  v58 = v35;
  v59 = v37;
  v60 = v43;
  sub_1DC4C0364();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return sub_1DC62A71C();
}

uint64_t sub_1DC58F400(uint64_t a1)
{
  uint64_t v2;

  sub_1DC4BA670(0, &qword_1EDB11FC8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF0C40], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t objectdestroyTm()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1DC58F48C(uint64_t a1)
{
  uint64_t v1;

  return sub_1DC58EF6C(a1, *(_QWORD *)(v1 + 16), *(_BYTE *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), *(_BYTE *)(v1 + 48));
}

uint64_t sub_1DC58F4A0()
{
  uint64_t v0;
  uint64_t v1;

  v0 = sub_1DC62A788();
  __swift_allocate_value_buffer(v0, qword_1F036D8E0);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1F036D8E0);
  *(_QWORD *)v1 = 0x7364612E6D6F63;
  *(_QWORD *)(v1 + 8) = 0xE700000000000000;
  *(_QWORD *)(v1 + 16) = 3;
  *(_BYTE *)(v1 + 24) = 0;
  return (*(uint64_t (**)(void))(*(_QWORD *)(v0 - 8) + 104))();
}

uint64_t static NativeAdImpressionEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C2FE8(&qword_1F03690F0, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1F036D8E0, a1);
}

uint64_t sub_1DC58F540()
{
  uint64_t v0;
  uint64_t v1;

  v0 = sub_1DC62A998();
  __swift_allocate_value_buffer(v0, qword_1F036D8F8);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1F036D8F8);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v0 - 8) + 104))(v1, *MEMORY[0x1E0CF8378], v0);
}

uint64_t static NativeAdImpressionEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C2FE8(&qword_1F03690F8, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1F036D8F8, a1);
}

uint64_t NativeAdImpressionEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C37DC((uint64_t (*)(_QWORD))sub_1DC4B6600, a1);
}

uint64_t NativeAdImpressionEvent.eventData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  sub_1DC4B6600();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*NativeAdImpressionEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t NativeAdImpressionEvent.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C382C(type metadata accessor for NativeAdImpressionEvent, (uint64_t (*)(_QWORD))sub_1DC4B66A4, a1);
}

uint64_t type metadata accessor for NativeAdImpressionEvent(uint64_t a1)
{
  return sub_1DC4B385C(a1, qword_1F036D980);
}

uint64_t NativeAdImpressionEvent.timedData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for NativeAdImpressionEvent(0) + 20);
  sub_1DC4B66A4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*NativeAdImpressionEvent.timedData.modify())()
{
  type metadata accessor for NativeAdImpressionEvent(0);
  return nullsub_1;
}

uint64_t NativeAdImpressionEvent.adUserData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for NativeAdImpressionEvent(0) + 24);
  sub_1DC4B4B50(0, &qword_1EDB0E250, (void (*)(void))sub_1DC4C06CC, (void (*)(void))sub_1DC4C0710);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t NativeAdImpressionEvent.adUserData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for NativeAdImpressionEvent(0) + 24);
  sub_1DC4B4B50(0, &qword_1EDB0E250, (void (*)(void))sub_1DC4C06CC, (void (*)(void))sub_1DC4C0710);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*NativeAdImpressionEvent.adUserData.modify())()
{
  type metadata accessor for NativeAdImpressionEvent(0);
  return nullsub_1;
}

uint64_t NativeAdImpressionEvent.channelData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for NativeAdImpressionEvent(0) + 28);
  sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t NativeAdImpressionEvent.channelData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for NativeAdImpressionEvent(0) + 28);
  sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*NativeAdImpressionEvent.channelData.modify())()
{
  type metadata accessor for NativeAdImpressionEvent(0);
  return nullsub_1;
}

uint64_t NativeAdImpressionEvent.adPlacementData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for NativeAdImpressionEvent(0) + 32);
  sub_1DC4B4B50(0, &qword_1EDB0E7B0, (void (*)(void))sub_1DC4D6C30, (void (*)(void))sub_1DC4D6C74);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t NativeAdImpressionEvent.adPlacementData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for NativeAdImpressionEvent(0) + 32);
  sub_1DC4B4B50(0, &qword_1EDB0E7B0, (void (*)(void))sub_1DC4D6C30, (void (*)(void))sub_1DC4D6C74);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*NativeAdImpressionEvent.adPlacementData.modify())()
{
  type metadata accessor for NativeAdImpressionEvent(0);
  return nullsub_1;
}

uint64_t NativeAdImpressionEvent.adPositionData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for NativeAdImpressionEvent(0) + 36);
  sub_1DC4B4B50(0, &qword_1EDB0E7A0, (void (*)(void))sub_1DC4D6F30, (void (*)(void))sub_1DC4D6F74);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t NativeAdImpressionEvent.adPositionData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for NativeAdImpressionEvent(0) + 36);
  sub_1DC4B4B50(0, &qword_1EDB0E7A0, (void (*)(void))sub_1DC4D6F30, (void (*)(void))sub_1DC4D6F74);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*NativeAdImpressionEvent.adPositionData.modify())()
{
  type metadata accessor for NativeAdImpressionEvent(0);
  return nullsub_1;
}

uint64_t NativeAdImpressionEvent.adFeedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for NativeAdImpressionEvent(0) + 40);
  sub_1DC4B4B50(0, &qword_1EDB0E740, (void (*)(void))sub_1DC4C076C, (void (*)(void))sub_1DC4C07B0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t NativeAdImpressionEvent.adFeedData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for NativeAdImpressionEvent(0) + 40);
  sub_1DC4B4B50(0, &qword_1EDB0E740, (void (*)(void))sub_1DC4C076C, (void (*)(void))sub_1DC4C07B0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*NativeAdImpressionEvent.adFeedData.modify())()
{
  type metadata accessor for NativeAdImpressionEvent(0);
  return nullsub_1;
}

uint64_t NativeAdImpressionEvent.adGroupData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for NativeAdImpressionEvent(0) + 44);
  sub_1DC4B4B50(0, &qword_1EDB0E758, (void (*)(void))sub_1DC4D7328, (void (*)(void))sub_1DC4D736C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t NativeAdImpressionEvent.adGroupData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for NativeAdImpressionEvent(0) + 44);
  sub_1DC4B4B50(0, &qword_1EDB0E758, (void (*)(void))sub_1DC4D7328, (void (*)(void))sub_1DC4D736C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*NativeAdImpressionEvent.adGroupData.modify())()
{
  type metadata accessor for NativeAdImpressionEvent(0);
  return nullsub_1;
}

uint64_t NativeAdImpressionEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v2 = *MEMORY[0x1E0CF8128];
  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
  v4 = (int *)type metadata accessor for NativeAdImpressionEvent(0);
  v5 = a1 + v4[5];
  sub_1DC4B66A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 104))(v5, v2, v6);
  v7 = a1 + v4[6];
  sub_1DC4B4B50(0, &qword_1EDB0E250, (void (*)(void))sub_1DC4C06CC, (void (*)(void))sub_1DC4C0710);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 104))(v7, v2, v8);
  v9 = a1 + v4[7];
  v10 = *MEMORY[0x1E0CF8120];
  sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 104))(v9, v10, v11);
  v12 = a1 + v4[8];
  sub_1DC4B4B50(0, &qword_1EDB0E7B0, (void (*)(void))sub_1DC4D6C30, (void (*)(void))sub_1DC4D6C74);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 104))(v12, v2, v13);
  v14 = a1 + v4[9];
  sub_1DC4B4B50(0, &qword_1EDB0E7A0, (void (*)(void))sub_1DC4D6F30, (void (*)(void))sub_1DC4D6F74);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 104))(v14, v10, v15);
  v16 = a1 + v4[10];
  sub_1DC4B4B50(0, &qword_1EDB0E740, (void (*)(void))sub_1DC4C076C, (void (*)(void))sub_1DC4C07B0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 104))(v16, v10, v17);
  v18 = a1 + v4[11];
  sub_1DC4B4B50(0, &qword_1EDB0E758, (void (*)(void))sub_1DC4D7328, (void (*)(void))sub_1DC4D736C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 104))(v18, v10, v19);
}

uint64_t NativeAdImpressionEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C37DC((uint64_t (*)(_QWORD))MEMORY[0x1E0CF8670], a1);
}

uint64_t NativeAdImpressionEvent.Model.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C382C(type metadata accessor for NativeAdImpressionEvent.Model, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF86C0], a1);
}

uint64_t type metadata accessor for NativeAdImpressionEvent.Model(uint64_t a1)
{
  return sub_1DC4B385C(a1, qword_1F036DA28);
}

uint64_t NativeAdImpressionEvent.Model.adUserData.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = (_QWORD *)(v1 + *(int *)(type metadata accessor for NativeAdImpressionEvent.Model(0) + 24));
  v4 = v3[1];
  *a1 = *v3;
  a1[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t NativeAdImpressionEvent.Model.channelData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = v1 + *(int *)(type metadata accessor for NativeAdImpressionEvent.Model(0) + 28);
  v4 = *(_QWORD *)v3;
  v5 = *(_QWORD *)(v3 + 8);
  v6 = *(_QWORD *)(v3 + 16);
  v7 = *(_QWORD *)(v3 + 24);
  *(_QWORD *)a1 = *(_QWORD *)v3;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  *(_WORD *)(a1 + 32) = *(_WORD *)(v3 + 32);
  return sub_1DC4D7808(v4, v5);
}

uint64_t NativeAdImpressionEvent.Model.adPlacementData.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = (_QWORD *)(v1 + *(int *)(type metadata accessor for NativeAdImpressionEvent.Model(0) + 32));
  v4 = v3[1];
  *a1 = *v3;
  a1[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t NativeAdImpressionEvent.Model.adPositionData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t result;
  int *v4;
  int v5;

  result = type metadata accessor for NativeAdImpressionEvent.Model(0);
  v4 = (int *)(v1 + *(int *)(result + 36));
  v5 = *v4;
  LOBYTE(v4) = *((_BYTE *)v4 + 4);
  *(_DWORD *)a1 = v5;
  *(_BYTE *)(a1 + 4) = (_BYTE)v4;
  return result;
}

uint64_t NativeAdImpressionEvent.Model.adFeedData.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for NativeAdImpressionEvent.Model(0);
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 40));
  return result;
}

uint64_t NativeAdImpressionEvent.Model.adGroupData.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for NativeAdImpressionEvent.Model(0);
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 44));
  return result;
}

__n128 NativeAdImpressionEvent.Model.init(eventData:timedData:adUserData:channelData:adPlacementData:adPositionData:adFeedData:adGroupData:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, __n128 *a4@<X3>, uint64_t *a5@<X4>, int *a6@<X5>, char *a7@<X6>, char *a8@<X7>, uint64_t a9@<X8>)
{
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unsigned __int16 v16;
  uint64_t v17;
  uint64_t v18;
  int *v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  __n128 *v23;
  __n128 result;
  _QWORD *v25;
  uint64_t v26;
  __n128 v27;
  uint64_t v28;
  char v29;
  int v30;
  char v31;
  char v32;

  v12 = *a3;
  v13 = a3[1];
  v27 = *a4;
  v14 = a4[1].n128_u64[0];
  v15 = a4[1].n128_u64[1];
  v16 = a4[2].n128_u16[0];
  v17 = *a5;
  v28 = a5[1];
  v29 = *((_BYTE *)a6 + 4);
  v30 = *a6;
  v31 = *a7;
  v32 = *a8;
  v18 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(a9, a1, v18);
  v19 = (int *)type metadata accessor for NativeAdImpressionEvent.Model(0);
  v20 = a9 + v19[5];
  v21 = sub_1DC62ABC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(v20, a2, v21);
  v22 = (_QWORD *)(a9 + v19[6]);
  *v22 = v12;
  v22[1] = v13;
  v23 = (__n128 *)(a9 + v19[7]);
  result = v27;
  *v23 = v27;
  v23[1].n128_u64[0] = v14;
  v23[1].n128_u64[1] = v15;
  v23[2].n128_u16[0] = v16;
  v25 = (_QWORD *)(a9 + v19[8]);
  *v25 = v17;
  v25[1] = v28;
  v26 = a9 + v19[9];
  *(_DWORD *)v26 = v30;
  *(_BYTE *)(v26 + 4) = v29;
  *(_BYTE *)(a9 + v19[10]) = v31;
  *(_BYTE *)(a9 + v19[11]) = v32;
  return result;
}

uint64_t sub_1DC590170()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1DC5901A4 + 4 * byte_1DC63DEB0[*v0]))(0x746144746E657665, 0xE900000000000061);
}

uint64_t sub_1DC5901A4()
{
  return 0x74614464656D6974;
}

uint64_t sub_1DC5901B8()
{
  return 0x6144726573556461;
}

uint64_t sub_1DC590260@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1DC592ED4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DC590284()
{
  sub_1DC59061C();
  return sub_1DC62B604();
}

uint64_t sub_1DC5902AC()
{
  sub_1DC59061C();
  return sub_1DC62B610();
}

uint64_t NativeAdImpressionEvent.Model.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int *v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int16 v15;
  __int128 v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  int *v20;
  int v21;
  _OWORD v23[2];
  __int16 v24;
  char v25;

  v3 = v1;
  sub_1DC590C6C(0, &qword_1F036D910, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)v23 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC59061C();
  sub_1DC62B5F8();
  LOBYTE(v23[0]) = 0;
  sub_1DC62ABA8();
  sub_1DC4B6748(&qword_1EDB0E8A8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF8670], MEMORY[0x1E0CF8680]);
  sub_1DC62B4E4();
  if (!v2)
  {
    v10 = (int *)type metadata accessor for NativeAdImpressionEvent.Model(0);
    LOBYTE(v23[0]) = 1;
    sub_1DC62ABC0();
    sub_1DC4B6748(&qword_1EDB0E8B8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF86C0], MEMORY[0x1E0CF86D0]);
    sub_1DC62B4E4();
    v11 = (uint64_t *)(v3 + v10[6]);
    v13 = *v11;
    v12 = v11[1];
    *(_QWORD *)&v23[0] = v13;
    *((_QWORD *)&v23[0] + 1) = v12;
    v25 = 2;
    sub_1DC4C0710();
    sub_1DC62B4E4();
    v14 = v3 + v10[7];
    v15 = *(_WORD *)(v14 + 32);
    v16 = *(_OWORD *)(v14 + 16);
    v23[0] = *(_OWORD *)v14;
    v23[1] = v16;
    v24 = v15;
    v25 = 3;
    sub_1DC4C8E84();
    sub_1DC62B490();
    v17 = (uint64_t *)(v3 + v10[8]);
    v19 = *v17;
    v18 = v17[1];
    *(_QWORD *)&v23[0] = v19;
    *((_QWORD *)&v23[0] + 1) = v18;
    v25 = 4;
    sub_1DC4D6C74();
    sub_1DC62B4E4();
    v20 = (int *)(v3 + v10[9]);
    v21 = *v20;
    LOBYTE(v20) = *((_BYTE *)v20 + 4);
    LODWORD(v23[0]) = v21;
    BYTE4(v23[0]) = (_BYTE)v20;
    v25 = 5;
    sub_1DC4D6F74();
    sub_1DC62B490();
    LOBYTE(v23[0]) = *(_BYTE *)(v3 + v10[10]);
    v25 = 6;
    sub_1DC4C07B0();
    sub_1DC62B490();
    LOBYTE(v23[0]) = *(_BYTE *)(v3 + v10[11]);
    v25 = 7;
    sub_1DC4D736C();
    sub_1DC62B490();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1DC59061C()
{
  unint64_t result;

  result = qword_1F036D918;
  if (!qword_1F036D918)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC63E12C, &type metadata for NativeAdImpressionEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036D918);
  }
  return result;
}

uint64_t NativeAdImpressionEvent.Model.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  int *v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  __int16 v28;
  uint64_t v29;
  __int128 v30;
  uint64_t v31;
  _QWORD *v32;
  char v33;
  uint64_t v34;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  __int128 v46;
  __int128 v47;
  __int16 v48;
  char v49;

  v36 = a2;
  v44 = sub_1DC62ABC0();
  v39 = *(_QWORD *)(v44 - 8);
  MEMORY[0x1E0C80A78](v44);
  v4 = (char *)&v36 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1DC62ABA8();
  v40 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC590C6C(0, &qword_1F036D920, MEMORY[0x1E0DED048]);
  v37 = v8;
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v36 - v10;
  v41 = type metadata accessor for NativeAdImpressionEvent.Model(0);
  MEMORY[0x1E0C80A78](v41);
  v13 = (char *)&v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = a1[3];
  v43 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v14);
  sub_1DC59061C();
  v42 = v11;
  v15 = v45;
  sub_1DC62B5E0();
  v38 = v5;
  if (v15)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v43);
  v16 = v9;
  v17 = v36;
  LOBYTE(v46) = 0;
  sub_1DC4B6748(&qword_1EDB0E278, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF8670], MEMORY[0x1E0CF8688]);
  v18 = v37;
  sub_1DC62B454();
  v19 = v5;
  v20 = (uint64_t)v13;
  (*(void (**)(char *, char *, uint64_t))(v40 + 32))(v13, v7, v19);
  LOBYTE(v46) = 1;
  sub_1DC4B6748(&qword_1EDB0E8C0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF86C0], MEMORY[0x1E0CF86D8]);
  v21 = v4;
  v22 = v44;
  sub_1DC62B454();
  v23 = (int *)v41;
  (*(void (**)(uint64_t, char *, uint64_t))(v39 + 32))(v20 + *(int *)(v41 + 20), v21, v22);
  v49 = 2;
  sub_1DC4C06CC();
  sub_1DC62B454();
  v24 = v16;
  v25 = *((_QWORD *)&v46 + 1);
  v26 = (_QWORD *)(v20 + v23[6]);
  *v26 = v46;
  v26[1] = v25;
  v49 = 3;
  sub_1DC4C8E40();
  sub_1DC62B400();
  v27 = (uint64_t)v43;
  v28 = v48;
  v29 = v20 + v23[7];
  v30 = v47;
  *(_OWORD *)v29 = v46;
  *(_OWORD *)(v29 + 16) = v30;
  *(_WORD *)(v29 + 32) = v28;
  v49 = 4;
  sub_1DC4D6C30();
  sub_1DC62B454();
  v31 = *((_QWORD *)&v46 + 1);
  v32 = (_QWORD *)(v20 + v23[8]);
  *v32 = v46;
  v32[1] = v31;
  v49 = 5;
  sub_1DC4D6F30();
  v45 = 0;
  sub_1DC62B400();
  v33 = BYTE4(v46);
  v34 = v20 + v23[9];
  *(_DWORD *)v34 = v46;
  *(_BYTE *)(v34 + 4) = v33;
  v49 = 6;
  sub_1DC4C076C();
  sub_1DC62B400();
  *(_BYTE *)(v20 + v23[10]) = v46;
  v49 = 7;
  sub_1DC4D7328();
  sub_1DC62B400();
  (*(void (**)(char *, uint64_t))(v24 + 8))(v42, v18);
  *(_BYTE *)(v20 + *(int *)(v41 + 44)) = v46;
  sub_1DC590CC8(v20, v17);
  __swift_destroy_boxed_opaque_existential_1(v27);
  return sub_1DC590D0C(v20);
}

void sub_1DC590C6C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1DC59061C();
    v7 = a3(a1, &type metadata for NativeAdImpressionEvent.Model.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1DC590CC8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for NativeAdImpressionEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DC590D0C(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for NativeAdImpressionEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1DC590D48@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return NativeAdImpressionEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_1DC590D5C(_QWORD *a1)
{
  return NativeAdImpressionEvent.Model.encode(to:)(a1);
}

uint64_t sub_1DC590D70@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4B2C68(&qword_1F03690F0, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1F036D8E0, a1);
}

uint64_t sub_1DC590D94@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4B2C68(&qword_1F03690F8, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1F036D8F8, a1);
}

uint64_t sub_1DC590DB8@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v4 = *MEMORY[0x1E0CF8128];
  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 104))(a2, v4, v5);
  v6 = a2 + a1[5];
  sub_1DC4B66A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 104))(v6, v4, v7);
  v8 = a2 + a1[6];
  sub_1DC4B4B50(0, &qword_1EDB0E250, (void (*)(void))sub_1DC4C06CC, (void (*)(void))sub_1DC4C0710);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 104))(v8, v4, v9);
  v10 = a2 + a1[7];
  v11 = *MEMORY[0x1E0CF8120];
  sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 104))(v10, v11, v12);
  v13 = a2 + a1[8];
  sub_1DC4B4B50(0, &qword_1EDB0E7B0, (void (*)(void))sub_1DC4D6C30, (void (*)(void))sub_1DC4D6C74);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 104))(v13, v4, v14);
  v15 = a2 + a1[9];
  sub_1DC4B4B50(0, &qword_1EDB0E7A0, (void (*)(void))sub_1DC4D6F30, (void (*)(void))sub_1DC4D6F74);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 104))(v15, v11, v16);
  v17 = a2 + a1[10];
  sub_1DC4B4B50(0, &qword_1EDB0E740, (void (*)(void))sub_1DC4C076C, (void (*)(void))sub_1DC4C07B0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 104))(v17, v11, v18);
  v19 = a2 + a1[11];
  sub_1DC4B4B50(0, &qword_1EDB0E758, (void (*)(void))sub_1DC4D7328, (void (*)(void))sub_1DC4D736C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 104))(v19, v11, v20);
}

uint64_t *initializeBufferWithCopyOfBuffer for NativeAdImpressionEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v36 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v36 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_1DC4B6600();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    sub_1DC4B66A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = a3[6];
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    sub_1DC4B4B50(0, &qword_1EDB0E250, (void (*)(void))sub_1DC4C06CC, (void (*)(void))sub_1DC4C0710);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
    v16 = a3[7];
    v17 = (char *)a1 + v16;
    v18 = (char *)a2 + v16;
    sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
    v20 = a3[8];
    v21 = (char *)a1 + v20;
    v22 = (char *)a2 + v20;
    sub_1DC4B4B50(0, &qword_1EDB0E7B0, (void (*)(void))sub_1DC4D6C30, (void (*)(void))sub_1DC4D6C74);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v21, v22, v23);
    v24 = a3[9];
    v25 = (char *)a1 + v24;
    v26 = (char *)a2 + v24;
    sub_1DC4B4B50(0, &qword_1EDB0E7A0, (void (*)(void))sub_1DC4D6F30, (void (*)(void))sub_1DC4D6F74);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v25, v26, v27);
    v28 = a3[10];
    v29 = (char *)a1 + v28;
    v30 = (char *)a2 + v28;
    sub_1DC4B4B50(0, &qword_1EDB0E740, (void (*)(void))sub_1DC4C076C, (void (*)(void))sub_1DC4C07B0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 16))(v29, v30, v31);
    v32 = a3[11];
    v33 = (char *)a1 + v32;
    v34 = (char *)a2 + v32;
    sub_1DC4B4B50(0, &qword_1EDB0E758, (void (*)(void))sub_1DC4D7328, (void (*)(void))sub_1DC4D736C);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 16))(v33, v34, v35);
  }
  return a1;
}

uint64_t destroy for NativeAdImpressionEvent(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + a2[5];
  sub_1DC4B66A4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = a1 + a2[6];
  sub_1DC4B4B50(0, &qword_1EDB0E250, (void (*)(void))sub_1DC4C06CC, (void (*)(void))sub_1DC4C0710);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  v9 = a1 + a2[7];
  sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  v11 = a1 + a2[8];
  sub_1DC4B4B50(0, &qword_1EDB0E7B0, (void (*)(void))sub_1DC4D6C30, (void (*)(void))sub_1DC4D6C74);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
  v13 = a1 + a2[9];
  sub_1DC4B4B50(0, &qword_1EDB0E7A0, (void (*)(void))sub_1DC4D6F30, (void (*)(void))sub_1DC4D6F74);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v13, v14);
  v15 = a1 + a2[10];
  sub_1DC4B4B50(0, &qword_1EDB0E740, (void (*)(void))sub_1DC4C076C, (void (*)(void))sub_1DC4C07B0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v15, v16);
  v17 = a1 + a2[11];
  sub_1DC4B4B50(0, &qword_1EDB0E758, (void (*)(void))sub_1DC4D7328, (void (*)(void))sub_1DC4D736C);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(v17, v18);
}

uint64_t initializeWithCopy for NativeAdImpressionEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1DC4B66A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1DC4B4B50(0, &qword_1EDB0E250, (void (*)(void))sub_1DC4C06CC, (void (*)(void))sub_1DC4C0710);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1DC4B4B50(0, &qword_1EDB0E7B0, (void (*)(void))sub_1DC4D6C30, (void (*)(void))sub_1DC4D6C74);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1DC4B4B50(0, &qword_1EDB0E7A0, (void (*)(void))sub_1DC4D6F30, (void (*)(void))sub_1DC4D6F74);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1DC4B4B50(0, &qword_1EDB0E740, (void (*)(void))sub_1DC4C076C, (void (*)(void))sub_1DC4C07B0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 16))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1DC4B4B50(0, &qword_1EDB0E758, (void (*)(void))sub_1DC4D7328, (void (*)(void))sub_1DC4D736C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 16))(v32, v33, v34);
  return a1;
}

uint64_t assignWithCopy for NativeAdImpressionEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1DC4B66A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1DC4B4B50(0, &qword_1EDB0E250, (void (*)(void))sub_1DC4C06CC, (void (*)(void))sub_1DC4C0710);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 24))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 24))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1DC4B4B50(0, &qword_1EDB0E7B0, (void (*)(void))sub_1DC4D6C30, (void (*)(void))sub_1DC4D6C74);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 24))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1DC4B4B50(0, &qword_1EDB0E7A0, (void (*)(void))sub_1DC4D6F30, (void (*)(void))sub_1DC4D6F74);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 24))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1DC4B4B50(0, &qword_1EDB0E740, (void (*)(void))sub_1DC4C076C, (void (*)(void))sub_1DC4C07B0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 24))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1DC4B4B50(0, &qword_1EDB0E758, (void (*)(void))sub_1DC4D7328, (void (*)(void))sub_1DC4D736C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 24))(v32, v33, v34);
  return a1;
}

uint64_t initializeWithTake for NativeAdImpressionEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1DC4B66A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1DC4B4B50(0, &qword_1EDB0E250, (void (*)(void))sub_1DC4C06CC, (void (*)(void))sub_1DC4C0710);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1DC4B4B50(0, &qword_1EDB0E7B0, (void (*)(void))sub_1DC4D6C30, (void (*)(void))sub_1DC4D6C74);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1DC4B4B50(0, &qword_1EDB0E7A0, (void (*)(void))sub_1DC4D6F30, (void (*)(void))sub_1DC4D6F74);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1DC4B4B50(0, &qword_1EDB0E740, (void (*)(void))sub_1DC4C076C, (void (*)(void))sub_1DC4C07B0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 32))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1DC4B4B50(0, &qword_1EDB0E758, (void (*)(void))sub_1DC4D7328, (void (*)(void))sub_1DC4D736C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 32))(v32, v33, v34);
  return a1;
}

uint64_t assignWithTake for NativeAdImpressionEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1DC4B66A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1DC4B4B50(0, &qword_1EDB0E250, (void (*)(void))sub_1DC4C06CC, (void (*)(void))sub_1DC4C0710);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 40))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 40))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1DC4B4B50(0, &qword_1EDB0E7B0, (void (*)(void))sub_1DC4D6C30, (void (*)(void))sub_1DC4D6C74);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 40))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1DC4B4B50(0, &qword_1EDB0E7A0, (void (*)(void))sub_1DC4D6F30, (void (*)(void))sub_1DC4D6F74);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 40))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1DC4B4B50(0, &qword_1EDB0E740, (void (*)(void))sub_1DC4C076C, (void (*)(void))sub_1DC4C07B0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 40))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1DC4B4B50(0, &qword_1EDB0E758, (void (*)(void))sub_1DC4D7328, (void (*)(void))sub_1DC4D736C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 40))(v32, v33, v34);
  return a1;
}

uint64_t getEnumTagSinglePayload for NativeAdImpressionEvent()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC591DA4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  sub_1DC4B6600();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    sub_1DC4B66A4();
    v12 = *(_QWORD *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
    {
      v8 = v11;
      v13 = a3[5];
    }
    else
    {
      sub_1DC4B4B50(0, &qword_1EDB0E250, (void (*)(void))sub_1DC4C06CC, (void (*)(void))sub_1DC4C0710);
      v12 = *(_QWORD *)(v14 - 8);
      if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
      {
        v8 = v14;
        v13 = a3[6];
      }
      else
      {
        sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
        v12 = *(_QWORD *)(v15 - 8);
        if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
        {
          v8 = v15;
          v13 = a3[7];
        }
        else
        {
          sub_1DC4B4B50(0, &qword_1EDB0E7B0, (void (*)(void))sub_1DC4D6C30, (void (*)(void))sub_1DC4D6C74);
          v12 = *(_QWORD *)(v16 - 8);
          if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
          {
            v8 = v16;
            v13 = a3[8];
          }
          else
          {
            sub_1DC4B4B50(0, &qword_1EDB0E7A0, (void (*)(void))sub_1DC4D6F30, (void (*)(void))sub_1DC4D6F74);
            v12 = *(_QWORD *)(v17 - 8);
            if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
            {
              v8 = v17;
              v13 = a3[9];
            }
            else
            {
              sub_1DC4B4B50(0, &qword_1EDB0E740, (void (*)(void))sub_1DC4C076C, (void (*)(void))sub_1DC4C07B0);
              v12 = *(_QWORD *)(v18 - 8);
              if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
              {
                v8 = v18;
                v13 = a3[10];
              }
              else
              {
                sub_1DC4B4B50(0, &qword_1EDB0E758, (void (*)(void))sub_1DC4D7328, (void (*)(void))sub_1DC4D736C);
                v8 = v19;
                v12 = *(_QWORD *)(v19 - 8);
                v13 = a3[11];
              }
            }
          }
        }
      }
    }
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t storeEnumTagSinglePayload for NativeAdImpressionEvent()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC591FBC(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  sub_1DC4B6600();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    sub_1DC4B66A4();
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = a4[5];
    }
    else
    {
      sub_1DC4B4B50(0, &qword_1EDB0E250, (void (*)(void))sub_1DC4C06CC, (void (*)(void))sub_1DC4C0710);
      v14 = *(_QWORD *)(v16 - 8);
      if (*(_DWORD *)(v14 + 84) == a3)
      {
        v10 = v16;
        v15 = a4[6];
      }
      else
      {
        sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
        v14 = *(_QWORD *)(v17 - 8);
        if (*(_DWORD *)(v14 + 84) == a3)
        {
          v10 = v17;
          v15 = a4[7];
        }
        else
        {
          sub_1DC4B4B50(0, &qword_1EDB0E7B0, (void (*)(void))sub_1DC4D6C30, (void (*)(void))sub_1DC4D6C74);
          v14 = *(_QWORD *)(v18 - 8);
          if (*(_DWORD *)(v14 + 84) == a3)
          {
            v10 = v18;
            v15 = a4[8];
          }
          else
          {
            sub_1DC4B4B50(0, &qword_1EDB0E7A0, (void (*)(void))sub_1DC4D6F30, (void (*)(void))sub_1DC4D6F74);
            v14 = *(_QWORD *)(v19 - 8);
            if (*(_DWORD *)(v14 + 84) == a3)
            {
              v10 = v19;
              v15 = a4[9];
            }
            else
            {
              sub_1DC4B4B50(0, &qword_1EDB0E740, (void (*)(void))sub_1DC4C076C, (void (*)(void))sub_1DC4C07B0);
              v14 = *(_QWORD *)(v20 - 8);
              if (*(_DWORD *)(v14 + 84) == a3)
              {
                v10 = v20;
                v15 = a4[10];
              }
              else
              {
                sub_1DC4B4B50(0, &qword_1EDB0E758, (void (*)(void))sub_1DC4D7328, (void (*)(void))sub_1DC4D736C);
                v10 = v21;
                v14 = *(_QWORD *)(v21 - 8);
                v15 = a4[11];
              }
            }
          }
        }
      }
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_1DC5921D0()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;

  sub_1DC4B6600();
  if (v0 <= 0x3F)
  {
    sub_1DC4B66A4();
    if (v1 <= 0x3F)
    {
      sub_1DC4B4B50(319, &qword_1EDB0E250, (void (*)(void))sub_1DC4C06CC, (void (*)(void))sub_1DC4C0710);
      if (v2 <= 0x3F)
      {
        sub_1DC4B4B50(319, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
        if (v3 <= 0x3F)
        {
          sub_1DC4B4B50(319, &qword_1EDB0E7B0, (void (*)(void))sub_1DC4D6C30, (void (*)(void))sub_1DC4D6C74);
          if (v4 <= 0x3F)
          {
            sub_1DC4B4B50(319, &qword_1EDB0E7A0, (void (*)(void))sub_1DC4D6F30, (void (*)(void))sub_1DC4D6F74);
            if (v5 <= 0x3F)
            {
              sub_1DC4B4B50(319, &qword_1EDB0E740, (void (*)(void))sub_1DC4C076C, (void (*)(void))sub_1DC4C07B0);
              if (v6 <= 0x3F)
              {
                sub_1DC4B4B50(319, &qword_1EDB0E758, (void (*)(void))sub_1DC4D7328, (void (*)(void))sub_1DC4D736C);
                if (v7 <= 0x3F)
                  swift_initStructMetadata();
              }
            }
          }
        }
      }
    }
  }
}

_QWORD *initializeBufferWithCopyOfBuffer for NativeAdImpressionEvent.Model(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v21 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v21 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1DC62ABA8();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_1DC62ABC0();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = a3[6];
    v13 = a3[7];
    v14 = (_QWORD *)((char *)a1 + v12);
    v15 = (_QWORD *)((char *)a2 + v12);
    v16 = v15[1];
    *v14 = *v15;
    v14[1] = v16;
    v17 = (char *)a1 + v13;
    v18 = (char *)a2 + v13;
    v19 = *(_QWORD *)((char *)a2 + v13 + 8);
    swift_bridgeObjectRetain();
    if (v19)
    {
      *(_QWORD *)v17 = *(_QWORD *)v18;
      *((_QWORD *)v17 + 1) = v19;
      v20 = *((_QWORD *)v18 + 3);
      *((_QWORD *)v17 + 2) = *((_QWORD *)v18 + 2);
      *((_QWORD *)v17 + 3) = v20;
      *((_WORD *)v17 + 16) = *((_WORD *)v18 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v22 = *((_OWORD *)v18 + 1);
      *(_OWORD *)v17 = *(_OWORD *)v18;
      *((_OWORD *)v17 + 1) = v22;
      *((_WORD *)v17 + 16) = *((_WORD *)v18 + 16);
    }
    v23 = a3[8];
    v24 = a3[9];
    v25 = (_QWORD *)((char *)a1 + v23);
    v26 = (_QWORD *)((char *)a2 + v23);
    v27 = v26[1];
    *v25 = *v26;
    v25[1] = v27;
    v28 = (char *)a1 + v24;
    v29 = (char *)a2 + v24;
    v28[4] = v29[4];
    *(_DWORD *)v28 = *(_DWORD *)v29;
    v30 = a3[11];
    *((_BYTE *)a1 + a3[10]) = *((_BYTE *)a2 + a3[10]);
    *((_BYTE *)a1 + v30) = *((_BYTE *)a2 + v30);
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for NativeAdImpressionEvent.Model(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + *(int *)(a2 + 20);
  v6 = sub_1DC62ABC0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + *(int *)(a2 + 28) + 8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for NativeAdImpressionEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v6 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1DC62ABC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = a3[6];
  v12 = a3[7];
  v13 = (_QWORD *)(a1 + v11);
  v14 = (_QWORD *)(a2 + v11);
  v15 = v14[1];
  *v13 = *v14;
  v13[1] = v15;
  v16 = a1 + v12;
  v17 = a2 + v12;
  v18 = *(_QWORD *)(a2 + v12 + 8);
  swift_bridgeObjectRetain();
  if (v18)
  {
    *(_QWORD *)v16 = *(_QWORD *)v17;
    *(_QWORD *)(v16 + 8) = v18;
    v19 = *(_QWORD *)(v17 + 24);
    *(_QWORD *)(v16 + 16) = *(_QWORD *)(v17 + 16);
    *(_QWORD *)(v16 + 24) = v19;
    *(_WORD *)(v16 + 32) = *(_WORD *)(v17 + 32);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v20 = *(_OWORD *)(v17 + 16);
    *(_OWORD *)v16 = *(_OWORD *)v17;
    *(_OWORD *)(v16 + 16) = v20;
    *(_WORD *)(v16 + 32) = *(_WORD *)(v17 + 32);
  }
  v21 = a3[8];
  v22 = a3[9];
  v23 = (_QWORD *)(a1 + v21);
  v24 = (_QWORD *)(a2 + v21);
  v25 = v24[1];
  *v23 = *v24;
  v23[1] = v25;
  v26 = a1 + v22;
  v27 = a2 + v22;
  *(_BYTE *)(v26 + 4) = *(_BYTE *)(v27 + 4);
  *(_DWORD *)v26 = *(_DWORD *)v27;
  v28 = a3[11];
  *(_BYTE *)(a1 + a3[10]) = *(_BYTE *)(a2 + a3[10]);
  *(_BYTE *)(a1 + v28) = *(_BYTE *)(a2 + v28);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for NativeAdImpressionEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  __int128 *v16;
  uint64_t v17;
  uint64_t v18;
  __int16 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  int *v28;
  int v29;

  v6 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1DC62ABC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = a3[6];
  v12 = (_QWORD *)(a1 + v11);
  v13 = (_QWORD *)(a2 + v11);
  *v12 = *v13;
  v12[1] = v13[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v14 = a3[7];
  v15 = a1 + v14;
  v16 = (__int128 *)(a2 + v14);
  v17 = *(_QWORD *)(a1 + v14 + 8);
  v18 = *(_QWORD *)(a2 + v14 + 8);
  if (v17)
  {
    if (v18)
    {
      *(_QWORD *)v15 = *(_QWORD *)v16;
      *(_QWORD *)(v15 + 8) = *((_QWORD *)v16 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v15 + 16) = *((_QWORD *)v16 + 2);
      *(_QWORD *)(v15 + 24) = *((_QWORD *)v16 + 3);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_BYTE *)(v15 + 32) = *((_BYTE *)v16 + 32);
      *(_BYTE *)(v15 + 33) = *((_BYTE *)v16 + 33);
    }
    else
    {
      sub_1DC4DAE38(v15);
      v19 = *((_WORD *)v16 + 16);
      v20 = v16[1];
      *(_OWORD *)v15 = *v16;
      *(_OWORD *)(v15 + 16) = v20;
      *(_WORD *)(v15 + 32) = v19;
    }
  }
  else if (v18)
  {
    *(_QWORD *)v15 = *(_QWORD *)v16;
    *(_QWORD *)(v15 + 8) = *((_QWORD *)v16 + 1);
    *(_QWORD *)(v15 + 16) = *((_QWORD *)v16 + 2);
    *(_QWORD *)(v15 + 24) = *((_QWORD *)v16 + 3);
    *(_BYTE *)(v15 + 32) = *((_BYTE *)v16 + 32);
    *(_BYTE *)(v15 + 33) = *((_BYTE *)v16 + 33);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v21 = *v16;
    v22 = v16[1];
    *(_WORD *)(v15 + 32) = *((_WORD *)v16 + 16);
    *(_OWORD *)v15 = v21;
    *(_OWORD *)(v15 + 16) = v22;
  }
  v23 = a3[8];
  v24 = (_QWORD *)(a1 + v23);
  v25 = (_QWORD *)(a2 + v23);
  *v24 = *v25;
  v24[1] = v25[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v26 = a3[9];
  v27 = a1 + v26;
  v28 = (int *)(a2 + v26);
  v29 = *v28;
  *(_BYTE *)(v27 + 4) = *((_BYTE *)v28 + 4);
  *(_DWORD *)v27 = v29;
  *(_BYTE *)(a1 + a3[10]) = *(_BYTE *)(a2 + a3[10]);
  *(_BYTE *)(a1 + a3[11]) = *(_BYTE *)(a2 + a3[11]);
  return a1;
}

uint64_t initializeWithTake for NativeAdImpressionEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v6 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1DC62ABC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[7];
  *(_OWORD *)(a1 + a3[6]) = *(_OWORD *)(a2 + a3[6]);
  v12 = a1 + v11;
  v13 = a2 + v11;
  *(_WORD *)(v12 + 32) = *(_WORD *)(v13 + 32);
  v14 = *(_OWORD *)(v13 + 16);
  *(_OWORD *)v12 = *(_OWORD *)v13;
  *(_OWORD *)(v12 + 16) = v14;
  v15 = a3[9];
  *(_OWORD *)(a1 + a3[8]) = *(_OWORD *)(a2 + a3[8]);
  v16 = a1 + v15;
  v17 = a2 + v15;
  *(_BYTE *)(v16 + 4) = *(_BYTE *)(v17 + 4);
  *(_DWORD *)v16 = *(_DWORD *)v17;
  v18 = a3[11];
  *(_BYTE *)(a1 + a3[10]) = *(_BYTE *)(a2 + a3[10]);
  *(_BYTE *)(a1 + v18) = *(_BYTE *)(a2 + v18);
  return a1;
}

uint64_t assignWithTake for NativeAdImpressionEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v6 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1DC62ABC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[6];
  v12 = (_QWORD *)(a1 + v11);
  v13 = (uint64_t *)(a2 + v11);
  v15 = *v13;
  v14 = v13[1];
  *v12 = v15;
  v12[1] = v14;
  swift_bridgeObjectRelease();
  v16 = a3[7];
  v17 = a1 + v16;
  v18 = a2 + v16;
  if (!*(_QWORD *)(a1 + v16 + 8))
    goto LABEL_5;
  v19 = *(_QWORD *)(v18 + 8);
  if (!v19)
  {
    sub_1DC4DAE38(v17);
LABEL_5:
    v21 = *(_OWORD *)(v18 + 16);
    *(_OWORD *)v17 = *(_OWORD *)v18;
    *(_OWORD *)(v17 + 16) = v21;
    *(_WORD *)(v17 + 32) = *(_WORD *)(v18 + 32);
    goto LABEL_6;
  }
  *(_QWORD *)v17 = *(_QWORD *)v18;
  *(_QWORD *)(v17 + 8) = v19;
  swift_bridgeObjectRelease();
  v20 = *(_QWORD *)(v18 + 24);
  *(_QWORD *)(v17 + 16) = *(_QWORD *)(v18 + 16);
  *(_QWORD *)(v17 + 24) = v20;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v17 + 32) = *(_BYTE *)(v18 + 32);
  *(_BYTE *)(v17 + 33) = *(_BYTE *)(v18 + 33);
LABEL_6:
  v22 = a3[8];
  v23 = (_QWORD *)(a1 + v22);
  v24 = (uint64_t *)(a2 + v22);
  v26 = *v24;
  v25 = v24[1];
  *v23 = v26;
  v23[1] = v25;
  swift_bridgeObjectRelease();
  v27 = a3[9];
  v28 = a3[10];
  v29 = a1 + v27;
  v30 = a2 + v27;
  *(_DWORD *)v29 = *(_DWORD *)v30;
  *(_BYTE *)(v29 + 4) = *(_BYTE *)(v30 + 4);
  *(_BYTE *)(a1 + v28) = *(_BYTE *)(a2 + v28);
  *(_BYTE *)(a1 + a3[11]) = *(_BYTE *)(a2 + a3[11]);
  return a1;
}

uint64_t getEnumTagSinglePayload for NativeAdImpressionEvent.Model()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC592B18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v14;

  v6 = sub_1DC62ABA8();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  v11 = sub_1DC62ABC0();
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  v14 = *(_QWORD *)(a1 + *(int *)(a3 + 24) + 8);
  if (v14 >= 0xFFFFFFFF)
    LODWORD(v14) = -1;
  return (v14 + 1);
}

uint64_t storeEnumTagSinglePayload for NativeAdImpressionEvent.Model()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC592BD0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t result;
  uint64_t v14;

  v8 = sub_1DC62ABA8();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
    return v11(v12, a2, a2, v10);
  }
  result = sub_1DC62ABC0();
  v14 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = result;
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    return v11(v12, a2, a2, v10);
  }
  *(_QWORD *)(a1 + *(int *)(a4 + 24) + 8) = (a2 - 1);
  return result;
}

uint64_t sub_1DC592C78()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_1DC62ABA8();
  if (v1 <= 0x3F)
  {
    result = sub_1DC62ABC0();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for NativeAdImpressionEvent.Model.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 7 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 7) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF9)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF8)
    return ((uint64_t (*)(void))((char *)&loc_1DC592D7C + 4 * byte_1DC63DEBD[v4]))();
  *a1 = a2 + 7;
  return ((uint64_t (*)(void))((char *)sub_1DC592DB0 + 4 * byte_1DC63DEB8[v4]))();
}

uint64_t sub_1DC592DB0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC592DB8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DC592DC0);
  return result;
}

uint64_t sub_1DC592DCC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DC592DD4);
  *(_BYTE *)result = a2 + 7;
  return result;
}

uint64_t sub_1DC592DD8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC592DE0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for NativeAdImpressionEvent.Model.CodingKeys()
{
  return &type metadata for NativeAdImpressionEvent.Model.CodingKeys;
}

unint64_t sub_1DC592E00()
{
  unint64_t result;

  result = qword_1F036DA78;
  if (!qword_1F036DA78)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC63E104, &type metadata for NativeAdImpressionEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036DA78);
  }
  return result;
}

unint64_t sub_1DC592E48()
{
  unint64_t result;

  result = qword_1F036DA80;
  if (!qword_1F036DA80)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC63E074, &type metadata for NativeAdImpressionEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036DA80);
  }
  return result;
}

unint64_t sub_1DC592E90()
{
  unint64_t result;

  result = qword_1F036DA88;
  if (!qword_1F036DA88)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC63E09C, &type metadata for NativeAdImpressionEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036DA88);
  }
  return result;
}

uint64_t sub_1DC592ED4(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x746144746E657665 && a2 == 0xE900000000000061;
  if (v2 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x74614464656D6974 && a2 == 0xE900000000000061 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6144726573556461 && a2 == 0xEA00000000006174 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x446C656E6E616863 && a2 == 0xEB00000000617461 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6D6563616C506461 && a2 == 0xEF61746144746E65 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x697469736F506461 && a2 == 0xEE00617461446E6FLL || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x6144646565466461 && a2 == 0xEA00000000006174 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x4470756F72476461 && a2 == 0xEB00000000617461)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else
  {
    v6 = sub_1DC62B520();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 7;
    else
      return 8;
  }
}

void AdFeedData.feedType.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

_BYTE *AdFeedData.feedType.setter(_BYTE *result)
{
  _BYTE *v1;

  *v1 = *result;
  return result;
}

uint64_t (*AdFeedData.feedType.modify())()
{
  return nullsub_1;
}

uint64_t sub_1DC5932D8()
{
  return 0x6570795464656566;
}

uint64_t sub_1DC5932F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x6570795464656566 && a2 == 0xE800000000000000)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_1DC62B520();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1DC593384()
{
  sub_1DC5934D8();
  return sub_1DC62B604();
}

uint64_t sub_1DC5933AC()
{
  sub_1DC5934D8();
  return sub_1DC62B610();
}

uint64_t AdFeedData.encode(to:)(_QWORD *a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char v8;
  uint64_t v10;
  char v11;

  sub_1DC593654(0, &qword_1EDB119B0, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v10 - v6;
  v8 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC5934D8();
  sub_1DC62B5F8();
  v11 = v8;
  sub_1DC4E4044();
  sub_1DC62B4E4();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_1DC5934D8()
{
  unint64_t result;

  result = qword_1EDB0EC58;
  if (!qword_1EDB0EC58)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC63E374, &type metadata for AdFeedData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB0EC58);
  }
  return result;
}

uint64_t AdFeedData.init(from:)@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v11;
  char v12;

  sub_1DC593654(0, &qword_1F036DA90, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v11 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC5934D8();
  sub_1DC62B5E0();
  if (!v2)
  {
    sub_1DC4E4254();
    sub_1DC62B454();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *a2 = v12;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1DC593654(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1DC5934D8();
    v7 = a3(a1, &type metadata for AdFeedData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1DC5936B0@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return AdFeedData.init(from:)(a1, a2);
}

uint64_t sub_1DC5936C4(_QWORD *a1)
{
  return AdFeedData.encode(to:)(a1);
}

uint64_t storeEnumTagSinglePayload for AdFeedData(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1DC593724 + 4 * byte_1DC63E201[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1DC593758 + 4 * byte_1DC63E1FC[v4]))();
}

uint64_t sub_1DC593758(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC593760(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DC593768);
  return result;
}

uint64_t sub_1DC593774(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DC59377CLL);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1DC593780(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC593788(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t storeEnumTagSinglePayload for AdFeedData.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1DC5937D4 + 4 * byte_1DC63E206[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1DC5937F4 + 4 * byte_1DC63E20B[v4]))();
}

_BYTE *sub_1DC5937D4(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1DC5937F4(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1DC5937FC(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1DC593804(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1DC59380C(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1DC593814(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for AdFeedData.CodingKeys()
{
  return &type metadata for AdFeedData.CodingKeys;
}

unint64_t sub_1DC593834()
{
  unint64_t result;

  result = qword_1F036DA98;
  if (!qword_1F036DA98)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC63E34C, &type metadata for AdFeedData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036DA98);
  }
  return result;
}

unint64_t sub_1DC59387C()
{
  unint64_t result;

  result = qword_1EDB0EC68;
  if (!qword_1EDB0EC68)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC63E2BC, &type metadata for AdFeedData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB0EC68);
  }
  return result;
}

unint64_t sub_1DC5938C4()
{
  unint64_t result;

  result = qword_1EDB0EC60;
  if (!qword_1EDB0EC60)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC63E2E4, &type metadata for AdFeedData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB0EC60);
  }
  return result;
}

StocksAnalytics::ContentEnvironment_optional __swiftcall ContentEnvironment.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  StocksAnalytics::ContentEnvironment_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1DC62B3DC();
  result.value = swift_bridgeObjectRelease();
  v5 = 4;
  if (v3 < 4)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t ContentEnvironment.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1DC593990 + 4 * byte_1DC63E3D0[*v0]))(0x6E776F6E6B6E75, 0xE700000000000000);
}

uint64_t sub_1DC593990()
{
  return 24945;
}

uint64_t sub_1DC59399C()
{
  return 0x676E6967617473;
}

uint64_t sub_1DC5939B0()
{
  return 1685025392;
}

void sub_1DC5939C0(char *a1)
{
  sub_1DC544270(*a1);
}

unint64_t sub_1DC5939D0()
{
  unint64_t result;

  result = qword_1F036DAA0;
  if (!qword_1F036DAA0)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for ContentEnvironment, &type metadata for ContentEnvironment);
    atomic_store(result, (unint64_t *)&qword_1F036DAA0);
  }
  return result;
}

void sub_1DC593A14()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1DC62B5B0();
  __asm { BR              X9 }
}

uint64_t sub_1DC593A60()
{
  sub_1DC62B10C();
  swift_bridgeObjectRelease();
  return sub_1DC62B5C8();
}

void sub_1DC593AB8()
{
  __asm { BR              X10 }
}

uint64_t sub_1DC593AF4()
{
  sub_1DC62B10C();
  return swift_bridgeObjectRelease();
}

void sub_1DC593B38()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1DC62B5B0();
  __asm { BR              X9 }
}

uint64_t sub_1DC593B80()
{
  sub_1DC62B10C();
  swift_bridgeObjectRelease();
  return sub_1DC62B5C8();
}

StocksAnalytics::ContentEnvironment_optional sub_1DC593BD8(Swift::String *a1)
{
  return ContentEnvironment.init(rawValue:)(*a1);
}

uint64_t sub_1DC593BE4()
{
  sub_1DC4B4E9C();
  return sub_1DC62B13C();
}

uint64_t storeEnumTagSinglePayload for ContentEnvironment(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1DC593C8C + 4 * byte_1DC63E3E9[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1DC593CC0 + 4 * byte_1DC63E3E4[v4]))();
}

uint64_t sub_1DC593CC0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC593CC8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DC593CD0);
  return result;
}

uint64_t sub_1DC593CDC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DC593CE4);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1DC593CE8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC593CF0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ContentEnvironment()
{
  return &type metadata for ContentEnvironment;
}

float ScrollEndData.scrollYPosition.getter()
{
  uint64_t v0;

  return *(float *)v0;
}

void ScrollEndData.scrollYPosition.setter(float a1)
{
  float *v1;

  *v1 = a1;
}

uint64_t (*ScrollEndData.scrollYPosition.modify())()
{
  return nullsub_1;
}

float ScrollEndData.scrollVelocity.getter()
{
  uint64_t v0;

  return *(float *)(v0 + 4);
}

void ScrollEndData.scrollVelocity.setter(float a1)
{
  uint64_t v1;

  *(float *)(v1 + 4) = a1;
}

uint64_t (*ScrollEndData.scrollVelocity.modify())()
{
  return nullsub_1;
}

StocksAnalytics::ScrollEndData __swiftcall ScrollEndData.init(scrollYPosition:scrollVelocity:)(Swift::Float scrollYPosition, Swift::Float scrollVelocity)
{
  Swift::Float *v2;
  StocksAnalytics::ScrollEndData result;

  *v2 = scrollYPosition;
  v2[1] = scrollVelocity;
  result.scrollVelocity = scrollVelocity;
  result.scrollYPosition = scrollYPosition;
  return result;
}

uint64_t sub_1DC593D54()
{
  _BYTE *v0;

  if (*v0)
    return 0x65566C6C6F726373;
  else
    return 0x50596C6C6F726373;
}

uint64_t sub_1DC593DA8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1DC59431C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DC593DCC()
{
  sub_1DC593F40();
  return sub_1DC62B604();
}

uint64_t sub_1DC593DF4()
{
  sub_1DC593F40();
  return sub_1DC62B610();
}

uint64_t ScrollEndData.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  _BYTE v9[16];

  sub_1DC5940DC(0, &qword_1F036DAA8, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = &v9[-v6];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC593F40();
  sub_1DC62B5F8();
  v9[15] = 0;
  sub_1DC62B4D8();
  if (!v1)
  {
    v9[14] = 1;
    sub_1DC62B4D8();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_1DC593F40()
{
  unint64_t result;

  result = qword_1F036DAB0;
  if (!qword_1F036DAB0)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC63E68C, &type metadata for ScrollEndData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036DAB0);
  }
  return result;
}

uint64_t ScrollEndData.init(from:)@<X0>(_QWORD *a1@<X0>, _DWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int v10;
  int v11;
  int v13;
  int v14;
  uint64_t v15;
  char v16;
  char v17;

  sub_1DC5940DC(0, &qword_1F036DAB8, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v15 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC593F40();
  sub_1DC62B5E0();
  if (!v2)
  {
    v17 = 0;
    sub_1DC62B448();
    v11 = v10;
    v16 = 1;
    sub_1DC62B448();
    v14 = v13;
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *a2 = v11;
    a2[1] = v14;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1DC5940DC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1DC593F40();
    v7 = a3(a1, &type metadata for ScrollEndData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1DC594140@<X0>(_QWORD *a1@<X0>, _DWORD *a2@<X8>)
{
  return ScrollEndData.init(from:)(a1, a2);
}

uint64_t sub_1DC594154(_QWORD *a1)
{
  return ScrollEndData.encode(to:)(a1);
}

ValueMetadata *type metadata accessor for ScrollEndData()
{
  return &type metadata for ScrollEndData;
}

uint64_t storeEnumTagSinglePayload for ScrollEndData.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1DC5941C4 + 4 * byte_1DC63E519[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1DC5941F8 + 4 * byte_1DC63E514[v4]))();
}

uint64_t sub_1DC5941F8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC594200(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DC594208);
  return result;
}

uint64_t sub_1DC594214(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DC59421CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1DC594220(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC594228(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ScrollEndData.CodingKeys()
{
  return &type metadata for ScrollEndData.CodingKeys;
}

unint64_t sub_1DC594248()
{
  unint64_t result;

  result = qword_1F036DAC0;
  if (!qword_1F036DAC0)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC63E664, &type metadata for ScrollEndData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036DAC0);
  }
  return result;
}

unint64_t sub_1DC594290()
{
  unint64_t result;

  result = qword_1F036DAC8;
  if (!qword_1F036DAC8)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC63E5D4, &type metadata for ScrollEndData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036DAC8);
  }
  return result;
}

unint64_t sub_1DC5942D8()
{
  unint64_t result;

  result = qword_1F036DAD0;
  if (!qword_1F036DAD0)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC63E5FC, &type metadata for ScrollEndData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036DAD0);
  }
  return result;
}

uint64_t sub_1DC59431C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x50596C6C6F726373 && a2 == 0xEF6E6F697469736FLL;
  if (v2 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x65566C6C6F726373 && a2 == 0xEE00797469636F6CLL)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1DC62B520();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1DC594454(uint64_t a1)
{
  return sub_1DC4BE784(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], qword_1F036DAD8, MEMORY[0x1E0CF8078]);
}

uint64_t static NewsArticleLoadFailureEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C2FE8(&qword_1F0369100, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1F036DAD8, a1);
}

uint64_t sub_1DC594494(uint64_t a1)
{
  return sub_1DC4BE784(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], qword_1F036DAF0, MEMORY[0x1E0CF8380]);
}

uint64_t static NewsArticleLoadFailureEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C2FE8(&qword_1F0369108, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1F036DAF0, a1);
}

uint64_t NewsArticleLoadFailureEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C37DC((uint64_t (*)(_QWORD))sub_1DC4B6600, a1);
}

uint64_t NewsArticleLoadFailureEvent.eventData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  sub_1DC4B6600();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*NewsArticleLoadFailureEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t NewsArticleLoadFailureEvent.newsArticleData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for NewsArticleLoadFailureEvent(0) + 20);
  sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t type metadata accessor for NewsArticleLoadFailureEvent(uint64_t a1)
{
  return sub_1DC4B385C(a1, qword_1F036DB78);
}

uint64_t NewsArticleLoadFailureEvent.newsArticleData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for NewsArticleLoadFailureEvent(0) + 20);
  sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*NewsArticleLoadFailureEvent.newsArticleData.modify())()
{
  type metadata accessor for NewsArticleLoadFailureEvent(0);
  return nullsub_1;
}

uint64_t NewsArticleLoadFailureEvent.feedPositionData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for NewsArticleLoadFailureEvent(0) + 24);
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E7D0, (void (*)(void))sub_1DC510CA0, (void (*)(void))sub_1DC510CE4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t NewsArticleLoadFailureEvent.feedPositionData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for NewsArticleLoadFailureEvent(0) + 24);
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E7D0, (void (*)(void))sub_1DC510CA0, (void (*)(void))sub_1DC510CE4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*NewsArticleLoadFailureEvent.feedPositionData.modify())()
{
  type metadata accessor for NewsArticleLoadFailureEvent(0);
  return nullsub_1;
}

uint64_t NewsArticleLoadFailureEvent.inGroupPositionData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for NewsArticleLoadFailureEvent(0) + 28);
  sub_1DC4B4B50(0, &qword_1EDB0E7E8, (void (*)(void))sub_1DC510E20, (void (*)(void))sub_1DC510E64);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t NewsArticleLoadFailureEvent.inGroupPositionData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for NewsArticleLoadFailureEvent(0) + 28);
  sub_1DC4B4B50(0, &qword_1EDB0E7E8, (void (*)(void))sub_1DC510E20, (void (*)(void))sub_1DC510E64);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*NewsArticleLoadFailureEvent.inGroupPositionData.modify())()
{
  type metadata accessor for NewsArticleLoadFailureEvent(0);
  return nullsub_1;
}

uint64_t NewsArticleLoadFailureEvent.feedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for NewsArticleLoadFailureEvent(0) + 32);
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t NewsArticleLoadFailureEvent.feedData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for NewsArticleLoadFailureEvent(0) + 32);
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*NewsArticleLoadFailureEvent.feedData.modify())()
{
  type metadata accessor for NewsArticleLoadFailureEvent(0);
  return nullsub_1;
}

uint64_t NewsArticleLoadFailureEvent.groupData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for NewsArticleLoadFailureEvent(0) + 36);
  sub_1DC4B4B50(0, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t NewsArticleLoadFailureEvent.groupData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for NewsArticleLoadFailureEvent(0) + 36);
  sub_1DC4B4B50(0, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*NewsArticleLoadFailureEvent.groupData.modify())()
{
  type metadata accessor for NewsArticleLoadFailureEvent(0);
  return nullsub_1;
}

uint64_t NewsArticleLoadFailureEvent.viewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for NewsArticleLoadFailureEvent(0) + 40);
  sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t NewsArticleLoadFailureEvent.viewData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for NewsArticleLoadFailureEvent(0) + 40);
  sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*NewsArticleLoadFailureEvent.viewData.modify())()
{
  type metadata accessor for NewsArticleLoadFailureEvent(0);
  return nullsub_1;
}

uint64_t NewsArticleLoadFailureEvent.articleScienceData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for NewsArticleLoadFailureEvent(0) + 44);
  sub_1DC4B4B50(0, &qword_1EDB0E270, (void (*)(void))sub_1DC4F48D4, (void (*)(void))sub_1DC4F4918);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t NewsArticleLoadFailureEvent.articleScienceData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for NewsArticleLoadFailureEvent(0) + 44);
  sub_1DC4B4B50(0, &qword_1EDB0E270, (void (*)(void))sub_1DC4F48D4, (void (*)(void))sub_1DC4F4918);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*NewsArticleLoadFailureEvent.articleScienceData.modify())()
{
  type metadata accessor for NewsArticleLoadFailureEvent(0);
  return nullsub_1;
}

uint64_t NewsArticleLoadFailureEvent.userArticleContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for NewsArticleLoadFailureEvent(0) + 48);
  sub_1DC4B4B50(0, &qword_1EDB0E820, (void (*)(void))sub_1DC4F4A54, (void (*)(void))sub_1DC4F4A98);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t NewsArticleLoadFailureEvent.userArticleContextData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for NewsArticleLoadFailureEvent(0) + 48);
  sub_1DC4B4B50(0, &qword_1EDB0E820, (void (*)(void))sub_1DC4F4A54, (void (*)(void))sub_1DC4F4A98);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*NewsArticleLoadFailureEvent.userArticleContextData.modify())()
{
  type metadata accessor for NewsArticleLoadFailureEvent(0);
  return nullsub_1;
}

uint64_t NewsArticleLoadFailureEvent.channelData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for NewsArticleLoadFailureEvent(0) + 52);
  sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t NewsArticleLoadFailureEvent.channelData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for NewsArticleLoadFailureEvent(0) + 52);
  sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*NewsArticleLoadFailureEvent.channelData.modify())()
{
  type metadata accessor for NewsArticleLoadFailureEvent(0);
  return nullsub_1;
}

uint64_t NewsArticleLoadFailureEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  int *FailureEvent;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v2 = *MEMORY[0x1E0CF8128];
  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
  FailureEvent = (int *)type metadata accessor for NewsArticleLoadFailureEvent(0);
  v5 = a1 + FailureEvent[5];
  sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 104))(v5, v2, v6);
  v7 = a1 + FailureEvent[6];
  v8 = *MEMORY[0x1E0CF8120];
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E7D0, (void (*)(void))sub_1DC510CA0, (void (*)(void))sub_1DC510CE4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 104))(v7, v8, v9);
  v10 = a1 + FailureEvent[7];
  sub_1DC4B4B50(0, &qword_1EDB0E7E8, (void (*)(void))sub_1DC510E20, (void (*)(void))sub_1DC510E64);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 104))(v10, v8, v11);
  v12 = a1 + FailureEvent[8];
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 104))(v12, v8, v13);
  v14 = a1 + FailureEvent[9];
  sub_1DC4B4B50(0, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 104))(v14, v8, v15);
  v16 = a1 + FailureEvent[10];
  sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 104))(v16, v8, v17);
  v18 = a1 + FailureEvent[11];
  sub_1DC4B4B50(0, &qword_1EDB0E270, (void (*)(void))sub_1DC4F48D4, (void (*)(void))sub_1DC4F4918);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 104))(v18, v8, v19);
  v20 = a1 + FailureEvent[12];
  sub_1DC4B4B50(0, &qword_1EDB0E820, (void (*)(void))sub_1DC4F4A54, (void (*)(void))sub_1DC4F4A98);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 104))(v20, v8, v21);
  v22 = a1 + FailureEvent[13];
  sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 104))(v22, v2, v23);
}

uint64_t NewsArticleLoadFailureEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C37DC((uint64_t (*)(_QWORD))MEMORY[0x1E0CF8670], a1);
}

uint64_t NewsArticleLoadFailureEvent.Model.newsArticleData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  char v12;
  char v13;
  char v14;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for NewsArticleLoadFailureEvent.Model(0) + 20));
  v5 = *v3;
  v4 = v3[1];
  v6 = v3[2];
  v7 = v3[3];
  v8 = *((_BYTE *)v3 + 32);
  v9 = v3[5];
  v10 = *((_BYTE *)v3 + 48);
  v11 = v3[7];
  v12 = *((_BYTE *)v3 + 64);
  v13 = *((_BYTE *)v3 + 65);
  v14 = *((_BYTE *)v3 + 66);
  LOBYTE(v3) = *((_BYTE *)v3 + 67);
  *(_QWORD *)a1 = v5;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  *(_BYTE *)(a1 + 32) = v8;
  *(_QWORD *)(a1 + 40) = v9;
  *(_BYTE *)(a1 + 48) = v10;
  *(_QWORD *)(a1 + 56) = v11;
  *(_BYTE *)(a1 + 64) = v12;
  *(_BYTE *)(a1 + 65) = v13;
  *(_BYTE *)(a1 + 66) = v14;
  *(_BYTE *)(a1 + 67) = (_BYTE)v3;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t type metadata accessor for NewsArticleLoadFailureEvent.Model(uint64_t a1)
{
  return sub_1DC4B385C(a1, qword_1F036DC28);
}

uint64_t NewsArticleLoadFailureEvent.Model.feedPositionData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t result;
  int *v4;
  int v5;

  result = type metadata accessor for NewsArticleLoadFailureEvent.Model(0);
  v4 = (int *)(v1 + *(int *)(result + 24));
  v5 = *v4;
  LOBYTE(v4) = *((_BYTE *)v4 + 4);
  *(_DWORD *)a1 = v5;
  *(_BYTE *)(a1 + 4) = (_BYTE)v4;
  return result;
}

uint64_t NewsArticleLoadFailureEvent.Model.inGroupPositionData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t result;
  int *v4;
  int v5;

  result = type metadata accessor for NewsArticleLoadFailureEvent.Model(0);
  v4 = (int *)(v1 + *(int *)(result + 28));
  v5 = *v4;
  LOBYTE(v4) = *((_BYTE *)v4 + 4);
  *(_DWORD *)a1 = v5;
  *(_BYTE *)(a1 + 4) = (_BYTE)v4;
  return result;
}

uint64_t NewsArticleLoadFailureEvent.Model.feedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for NewsArticleLoadFailureEvent.Model(0) + 32);
  v4 = *(_QWORD *)(v3 + 16);
  *(_OWORD *)a1 = *(_OWORD *)v3;
  *(_QWORD *)(a1 + 16) = v4;
  return swift_bridgeObjectRetain();
}

uint64_t NewsArticleLoadFailureEvent.Model.groupData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for NewsArticleLoadFailureEvent.Model(0) + 36));
  v4 = *v3;
  v5 = v3[1];
  v6 = v3[2];
  v7 = v3[3];
  v8 = v3[4];
  v9 = v3[5];
  *a1 = *v3;
  a1[1] = v5;
  a1[2] = v6;
  a1[3] = v7;
  a1[4] = v8;
  a1[5] = v9;
  return sub_1DC4C9EC0(v4, v5, v6);
}

uint64_t NewsArticleLoadFailureEvent.Model.viewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for NewsArticleLoadFailureEvent.Model(0) + 40));
  v5 = *v3;
  v4 = v3[1];
  LOWORD(v3) = *((_WORD *)v3 + 8);
  *(_QWORD *)a1 = v5;
  *(_QWORD *)(a1 + 8) = v4;
  *(_WORD *)(a1 + 16) = (_WORD)v3;
  return swift_bridgeObjectRetain();
}

uint64_t NewsArticleLoadFailureEvent.Model.articleScienceData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t Failure;
  _BYTE v5[200];

  Failure = type metadata accessor for NewsArticleLoadFailureEvent.Model(0);
  sub_1DC4F52E4(v1 + *(int *)(Failure + 44), (uint64_t)v5);
  sub_1DC4F52E4((uint64_t)v5, a1);
  return sub_1DC4F537C((uint64_t)v5);
}

uint64_t NewsArticleLoadFailureEvent.Model.userArticleContextData.getter@<X0>(_WORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for NewsArticleLoadFailureEvent.Model(0);
  *a1 = *(_WORD *)(v1 + *(int *)(result + 48));
  return result;
}

uint64_t NewsArticleLoadFailureEvent.Model.channelData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for NewsArticleLoadFailureEvent.Model(0) + 52));
  v5 = *v3;
  v4 = v3[1];
  v6 = v3[2];
  v7 = v3[3];
  v8 = *((_BYTE *)v3 + 32);
  LOBYTE(v3) = *((_BYTE *)v3 + 33);
  *(_QWORD *)a1 = v5;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  *(_BYTE *)(a1 + 32) = v8;
  *(_BYTE *)(a1 + 33) = (_BYTE)v3;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

__n128 NewsArticleLoadFailureEvent.Model.init(eventData:newsArticleData:feedPositionData:inGroupPositionData:feedData:groupData:viewData:articleScienceData:userArticleContextData:channelData:)@<Q0>(uint64_t a1@<X0>, __int128 *a2@<X1>, int *a3@<X2>, int *a4@<X3>, __int128 *a5@<X4>, __int128 *a6@<X5>, uint64_t *a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, __int16 *a10, __n128 *a11)
{
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  unint64_t v19;
  unsigned __int8 v20;
  uint64_t v21;
  int *Failure;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __n128 *v29;
  __n128 result;
  char v31;
  char v32;
  char v33;
  char v34;
  __int128 v35;
  char v36;
  int v37;
  char v38;
  int v39;
  uint64_t v40;
  __int128 v41;
  uint64_t v42;
  uint64_t v43;
  __int128 v44;
  __int128 v45;
  __int16 v46;
  uint64_t v47;
  uint64_t v48;
  __int16 v49;
  unsigned __int8 v50;
  unint64_t v51;
  __n128 v52;
  _BYTE v53[208];

  v35 = *a2;
  v13 = *((_QWORD *)a2 + 2);
  v14 = *((_QWORD *)a2 + 3);
  v15 = *((_BYTE *)a2 + 32);
  v16 = *((_QWORD *)a2 + 5);
  v17 = *((_BYTE *)a2 + 48);
  v18 = *((_QWORD *)a2 + 7);
  v33 = *((_BYTE *)a2 + 65);
  v34 = *((_BYTE *)a2 + 64);
  v31 = *((_BYTE *)a2 + 67);
  v32 = *((_BYTE *)a2 + 66);
  v36 = *((_BYTE *)a3 + 4);
  v37 = *a3;
  v38 = *((_BYTE *)a4 + 4);
  v39 = *a4;
  v41 = *a5;
  v40 = *((_QWORD *)a5 + 2);
  v44 = a6[1];
  v45 = *a6;
  v42 = *((_QWORD *)a6 + 5);
  v43 = *((_QWORD *)a6 + 4);
  v47 = a7[1];
  v48 = *a7;
  v46 = *((_WORD *)a7 + 8);
  sub_1DC4F52E4(a8, (uint64_t)v53);
  v52 = *a11;
  v19 = a11[1].n128_u64[0];
  v51 = a11[1].n128_u64[1];
  v49 = *a10;
  v50 = a11[2].n128_u8[0];
  v20 = a11[2].n128_u8[1];
  v21 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(a9, a1, v21);
  Failure = (int *)type metadata accessor for NewsArticleLoadFailureEvent.Model(0);
  v23 = a9 + Failure[5];
  *(_OWORD *)v23 = v35;
  *(_QWORD *)(v23 + 16) = v13;
  *(_QWORD *)(v23 + 24) = v14;
  *(_BYTE *)(v23 + 32) = v15;
  *(_QWORD *)(v23 + 40) = v16;
  *(_BYTE *)(v23 + 48) = v17;
  *(_QWORD *)(v23 + 56) = v18;
  *(_BYTE *)(v23 + 64) = v34;
  *(_BYTE *)(v23 + 65) = v33;
  *(_BYTE *)(v23 + 66) = v32;
  *(_BYTE *)(v23 + 67) = v31;
  v24 = a9 + Failure[6];
  *(_DWORD *)v24 = v37;
  *(_BYTE *)(v24 + 4) = v36;
  v25 = a9 + Failure[7];
  *(_DWORD *)v25 = v39;
  *(_BYTE *)(v25 + 4) = v38;
  v26 = a9 + Failure[8];
  *(_OWORD *)v26 = v41;
  *(_QWORD *)(v26 + 16) = v40;
  v27 = a9 + Failure[9];
  *(_OWORD *)v27 = v45;
  *(_OWORD *)(v27 + 16) = v44;
  *(_QWORD *)(v27 + 32) = v43;
  *(_QWORD *)(v27 + 40) = v42;
  v28 = a9 + Failure[10];
  *(_QWORD *)v28 = v48;
  *(_QWORD *)(v28 + 8) = v47;
  *(_WORD *)(v28 + 16) = v46;
  sub_1DC4F52E4((uint64_t)v53, a9 + Failure[11]);
  *(_WORD *)(a9 + Failure[12]) = v49;
  v29 = (__n128 *)(a9 + Failure[13]);
  result = v52;
  *v29 = v52;
  v29[1].n128_u64[0] = v19;
  v29[1].n128_u64[1] = v51;
  v29[2].n128_u8[0] = v50;
  v29[2].n128_u8[1] = v20;
  return result;
}

uint64_t sub_1DC5955C8(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1DC595600 + 4 * byte_1DC63E6E0[a1]))(0x746144746E657665, 0xE900000000000061);
}

uint64_t sub_1DC595600()
{
  return 0x697472417377656ELL;
}

unint64_t sub_1DC595624()
{
  return 0xD000000000000010;
}

unint64_t sub_1DC595640()
{
  return 0xD000000000000013;
}

uint64_t sub_1DC5956CC()
{
  return 0x446C656E6E616863;
}

uint64_t sub_1DC5956EC()
{
  unsigned __int8 *v0;

  return sub_1DC5955C8(*v0);
}

uint64_t sub_1DC5956F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1DC599168(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DC595718()
{
  sub_1DC595BB8();
  return sub_1DC62B604();
}

uint64_t sub_1DC595740()
{
  sub_1DC595BB8();
  return sub_1DC62B610();
}

uint64_t NewsArticleLoadFailureEvent.Model.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int *Failure;
  __int128 *v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  char v19;
  char v20;
  char v21;
  int *v22;
  int v23;
  int *v24;
  int v25;
  __int128 *v26;
  uint64_t v27;
  __int128 *v28;
  __int128 v29;
  __int128 *v30;
  __int16 v31;
  __int128 *v32;
  __int128 v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v38;
  __int128 v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  char v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  char v47;
  uint64_t v48;
  char v49;
  char v50;
  char v51;
  char v52;
  char v53;
  __int128 v54;
  __int16 v55;

  v3 = v1;
  sub_1DC596304(0, &qword_1F036DB08, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v38 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC595BB8();
  sub_1DC62B5F8();
  LOBYTE(v44) = 0;
  sub_1DC62ABA8();
  sub_1DC4B6788(&qword_1EDB0E8A8, MEMORY[0x1E0CF8680]);
  sub_1DC62B4E4();
  if (!v2)
  {
    Failure = (int *)type metadata accessor for NewsArticleLoadFailureEvent.Model(0);
    v11 = (__int128 *)(v3 + Failure[5]);
    v12 = *v11;
    v13 = *((_QWORD *)v11 + 2);
    v14 = *((_QWORD *)v11 + 3);
    v15 = *((_BYTE *)v11 + 32);
    v16 = *((_QWORD *)v11 + 5);
    v17 = *((_BYTE *)v11 + 48);
    v18 = *((_QWORD *)v11 + 7);
    v19 = *((_BYTE *)v11 + 64);
    v20 = *((_BYTE *)v11 + 65);
    v21 = *((_BYTE *)v11 + 66);
    LOBYTE(v11) = *((_BYTE *)v11 + 67);
    v44 = v12;
    *(_QWORD *)&v45 = v13;
    *((_QWORD *)&v45 + 1) = v14;
    LOBYTE(v46) = v15;
    *((_QWORD *)&v46 + 1) = v16;
    v47 = v17;
    v48 = v18;
    v49 = v19;
    v50 = v20;
    v51 = v21;
    v52 = (char)v11;
    LOBYTE(v39) = 1;
    sub_1DC4C18E8();
    sub_1DC62B4E4();
    v22 = (int *)(v3 + Failure[6]);
    v23 = *v22;
    LOBYTE(v22) = *((_BYTE *)v22 + 4);
    LODWORD(v44) = v23;
    BYTE4(v44) = (_BYTE)v22;
    LOBYTE(v39) = 2;
    sub_1DC510CE4();
    sub_1DC62B490();
    v24 = (int *)(v3 + Failure[7]);
    v25 = *v24;
    LOBYTE(v24) = *((_BYTE *)v24 + 4);
    LODWORD(v44) = v25;
    BYTE4(v44) = (_BYTE)v24;
    LOBYTE(v39) = 3;
    sub_1DC510E64();
    sub_1DC62B490();
    v26 = (__int128 *)(v3 + Failure[8]);
    v27 = *((_QWORD *)v26 + 2);
    v44 = *v26;
    *(_QWORD *)&v45 = v27;
    LOBYTE(v39) = 4;
    sub_1DC4BEFD8();
    sub_1DC62B490();
    v28 = (__int128 *)(v3 + Failure[9]);
    v29 = v28[1];
    v44 = *v28;
    v45 = v29;
    v46 = v28[2];
    LOBYTE(v39) = 5;
    sub_1DC4C9004();
    sub_1DC62B490();
    v30 = (__int128 *)(v3 + Failure[10]);
    v31 = *((_WORD *)v30 + 8);
    v54 = *v30;
    v55 = v31;
    v53 = 6;
    sub_1DC4BEDF0();
    sub_1DC62B490();
    sub_1DC4F52E4(v3 + Failure[11], (uint64_t)&v44);
    sub_1DC4F52E4((uint64_t)&v44, (uint64_t)&v39);
    HIBYTE(v38) = 7;
    sub_1DC4F4918();
    sub_1DC62B490();
    LOWORD(v39) = *(_WORD *)(v3 + Failure[12]);
    HIBYTE(v38) = 8;
    sub_1DC4F4A98();
    sub_1DC62B490();
    v32 = (__int128 *)(v3 + Failure[13]);
    v33 = *v32;
    v34 = *((_QWORD *)v32 + 2);
    v35 = *((_QWORD *)v32 + 3);
    v36 = *((_BYTE *)v32 + 32);
    LOBYTE(v32) = *((_BYTE *)v32 + 33);
    v39 = v33;
    v40 = v34;
    v41 = v35;
    v42 = v36;
    v43 = (char)v32;
    HIBYTE(v38) = 9;
    sub_1DC4C8E84();
    sub_1DC62B4E4();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1DC595BB8()
{
  unint64_t result;

  result = qword_1F036DB10;
  if (!qword_1F036DB10)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC63E9CC, &type metadata for NewsArticleLoadFailureEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036DB10);
  }
  return result;
}

uint64_t NewsArticleLoadFailureEvent.Model.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  __int128 v14;
  char v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  char v19;
  char v20;
  char v21;
  char v22;
  int *v23;
  char *v24;
  char v25;
  char *v26;
  char v27;
  char *v28;
  uint64_t v29;
  char *v30;
  char *v31;
  __int128 v32;
  __int16 v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  char v38;
  uint64_t v39;
  char *v40;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  int *Failure;
  __int128 v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  char v53;
  char v54;
  _BYTE v55[208];
  __int128 v56;
  __int128 v57;
  __int128 v58;
  char v59;
  uint64_t v60;
  char v61;
  char v62;
  char v63;
  char v64;
  char *v65;

  v43 = a2;
  v4 = sub_1DC62ABA8();
  v45 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC596304(0, &qword_1F036DB18, MEMORY[0x1E0DED048]);
  v46 = v7;
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v42 - v9;
  Failure = (int *)type metadata accessor for NewsArticleLoadFailureEvent.Model(0);
  MEMORY[0x1E0C80A78](Failure);
  v65 = (char *)&v42 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = a1[3];
  v47 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v12);
  sub_1DC595BB8();
  v44 = v10;
  sub_1DC62B5E0();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v47);
  LOBYTE(v56) = 0;
  sub_1DC4B6788(&qword_1EDB0E278, MEMORY[0x1E0CF8688]);
  sub_1DC62B454();
  v13 = v65;
  (*(void (**)(char *, char *, uint64_t))(v45 + 32))(v65, v6, v4);
  v55[0] = 1;
  sub_1DC4C18A0();
  sub_1DC62B454();
  v14 = v57;
  v15 = v58;
  v16 = *((_QWORD *)&v58 + 1);
  v17 = v59;
  v18 = v60;
  v19 = v61;
  v20 = v62;
  v21 = v63;
  v22 = v64;
  v23 = Failure;
  v24 = &v13[Failure[5]];
  *(_OWORD *)v24 = v56;
  *((_OWORD *)v24 + 1) = v14;
  v24[32] = v15;
  *((_QWORD *)v24 + 5) = v16;
  v24[48] = v17;
  *((_QWORD *)v24 + 7) = v18;
  v24[64] = v19;
  v24[65] = v20;
  v24[66] = v21;
  v24[67] = v22;
  v55[0] = 2;
  sub_1DC510CA0();
  sub_1DC62B400();
  v25 = BYTE4(v56);
  v26 = &v13[v23[6]];
  *(_DWORD *)v26 = v56;
  v26[4] = v25;
  v55[0] = 3;
  sub_1DC510E20();
  sub_1DC62B400();
  v27 = BYTE4(v56);
  v28 = &v13[v23[7]];
  *(_DWORD *)v28 = v56;
  v28[4] = v27;
  v55[0] = 4;
  sub_1DC4BEF94();
  sub_1DC62B400();
  v29 = v57;
  v30 = &v13[v23[8]];
  *(_OWORD *)v30 = v56;
  *((_QWORD *)v30 + 2) = v29;
  v55[0] = 5;
  sub_1DC4C8FC0();
  sub_1DC62B400();
  v42 = v4;
  v31 = &v13[v23[9]];
  v32 = v57;
  *(_OWORD *)v31 = v56;
  *((_OWORD *)v31 + 1) = v32;
  *((_OWORD *)v31 + 2) = v58;
  v55[0] = 6;
  sub_1DC4BEDAC();
  sub_1DC62B400();
  v33 = v57;
  v34 = &v13[v23[10]];
  *(_OWORD *)v34 = v56;
  *((_WORD *)v34 + 8) = v33;
  v55[207] = 7;
  sub_1DC4F48D4();
  sub_1DC62B400();
  sub_1DC4F52E4((uint64_t)&v56, (uint64_t)v55);
  sub_1DC4F52E4((uint64_t)v55, (uint64_t)&v65[Failure[11]]);
  v54 = 8;
  sub_1DC4F4A54();
  sub_1DC62B400();
  *(_WORD *)&v65[Failure[12]] = v49;
  v54 = 9;
  sub_1DC4C8E40();
  sub_1DC62B454();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v44, v46);
  v35 = v50;
  v36 = v51;
  v37 = v52;
  v38 = v53;
  v39 = (uint64_t)v65;
  v40 = &v65[Failure[13]];
  *(_OWORD *)v40 = v49;
  *((_QWORD *)v40 + 2) = v35;
  *((_QWORD *)v40 + 3) = v36;
  v40[32] = v37;
  v40[33] = v38;
  sub_1DC596360(v39, v43);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v47);
  return sub_1DC5963A4(v39);
}

void sub_1DC596304(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1DC595BB8();
    v7 = a3(a1, &type metadata for NewsArticleLoadFailureEvent.Model.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1DC596360(uint64_t a1, uint64_t a2)
{
  uint64_t Failure;

  Failure = type metadata accessor for NewsArticleLoadFailureEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(Failure - 8) + 16))(a2, a1, Failure);
  return a2;
}

uint64_t sub_1DC5963A4(uint64_t a1)
{
  uint64_t Failure;

  Failure = type metadata accessor for NewsArticleLoadFailureEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(Failure - 8) + 8))(a1, Failure);
  return a1;
}

uint64_t sub_1DC5963E0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return NewsArticleLoadFailureEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_1DC5963F4(_QWORD *a1)
{
  return NewsArticleLoadFailureEvent.Model.encode(to:)(a1);
}

uint64_t sub_1DC596408@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4B2C68(&qword_1F0369100, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1F036DAD8, a1);
}

uint64_t sub_1DC59642C@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4B2C68(&qword_1F0369108, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1F036DAF0, a1);
}

uint64_t sub_1DC596450@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v4 = *MEMORY[0x1E0CF8128];
  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 104))(a2, v4, v5);
  v6 = a2 + a1[5];
  sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 104))(v6, v4, v7);
  v8 = a2 + a1[6];
  v9 = *MEMORY[0x1E0CF8120];
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E7D0, (void (*)(void))sub_1DC510CA0, (void (*)(void))sub_1DC510CE4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 104))(v8, v9, v10);
  v11 = a2 + a1[7];
  sub_1DC4B4B50(0, &qword_1EDB0E7E8, (void (*)(void))sub_1DC510E20, (void (*)(void))sub_1DC510E64);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 104))(v11, v9, v12);
  v13 = a2 + a1[8];
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 104))(v13, v9, v14);
  v15 = a2 + a1[9];
  sub_1DC4B4B50(0, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 104))(v15, v9, v16);
  v17 = a2 + a1[10];
  sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 104))(v17, v9, v18);
  v19 = a2 + a1[11];
  sub_1DC4B4B50(0, &qword_1EDB0E270, (void (*)(void))sub_1DC4F48D4, (void (*)(void))sub_1DC4F4918);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 104))(v19, v9, v20);
  v21 = a2 + a1[12];
  sub_1DC4B4B50(0, &qword_1EDB0E820, (void (*)(void))sub_1DC4F4A54, (void (*)(void))sub_1DC4F4A98);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 104))(v21, v9, v22);
  v23 = a2 + a1[13];
  sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 104))(v23, v4, v24);
}

uint64_t *initializeBufferWithCopyOfBuffer for NewsArticleLoadFailureEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v44 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v44 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_1DC4B6600();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = a3[6];
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E7D0, (void (*)(void))sub_1DC510CA0, (void (*)(void))sub_1DC510CE4);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
    v16 = a3[7];
    v17 = (char *)a1 + v16;
    v18 = (char *)a2 + v16;
    sub_1DC4B4B50(0, &qword_1EDB0E7E8, (void (*)(void))sub_1DC510E20, (void (*)(void))sub_1DC510E64);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
    v20 = a3[8];
    v21 = (char *)a1 + v20;
    v22 = (char *)a2 + v20;
    sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v21, v22, v23);
    v24 = a3[9];
    v25 = (char *)a1 + v24;
    v26 = (char *)a2 + v24;
    sub_1DC4B4B50(0, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v25, v26, v27);
    v28 = a3[10];
    v29 = (char *)a1 + v28;
    v30 = (char *)a2 + v28;
    sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 16))(v29, v30, v31);
    v32 = a3[11];
    v33 = (char *)a1 + v32;
    v34 = (char *)a2 + v32;
    sub_1DC4B4B50(0, &qword_1EDB0E270, (void (*)(void))sub_1DC4F48D4, (void (*)(void))sub_1DC4F4918);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 16))(v33, v34, v35);
    v36 = a3[12];
    v37 = (char *)a1 + v36;
    v38 = (char *)a2 + v36;
    sub_1DC4B4B50(0, &qword_1EDB0E820, (void (*)(void))sub_1DC4F4A54, (void (*)(void))sub_1DC4F4A98);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 16))(v37, v38, v39);
    v40 = a3[13];
    v41 = (char *)a1 + v40;
    v42 = (char *)a2 + v40;
    sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v43 - 8) + 16))(v41, v42, v43);
  }
  return a1;
}

uint64_t destroy for NewsArticleLoadFailureEvent(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + a2[5];
  sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = a1 + a2[6];
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E7D0, (void (*)(void))sub_1DC510CA0, (void (*)(void))sub_1DC510CE4);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  v9 = a1 + a2[7];
  sub_1DC4B4B50(0, &qword_1EDB0E7E8, (void (*)(void))sub_1DC510E20, (void (*)(void))sub_1DC510E64);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  v11 = a1 + a2[8];
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
  v13 = a1 + a2[9];
  sub_1DC4B4B50(0, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v13, v14);
  v15 = a1 + a2[10];
  sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v15, v16);
  v17 = a1 + a2[11];
  sub_1DC4B4B50(0, &qword_1EDB0E270, (void (*)(void))sub_1DC4F48D4, (void (*)(void))sub_1DC4F4918);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(v17, v18);
  v19 = a1 + a2[12];
  sub_1DC4B4B50(0, &qword_1EDB0E820, (void (*)(void))sub_1DC4F4A54, (void (*)(void))sub_1DC4F4A98);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 8))(v19, v20);
  v21 = a1 + a2[13];
  sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 8))(v21, v22);
}

uint64_t initializeWithCopy for NewsArticleLoadFailureEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E7D0, (void (*)(void))sub_1DC510CA0, (void (*)(void))sub_1DC510CE4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1DC4B4B50(0, &qword_1EDB0E7E8, (void (*)(void))sub_1DC510E20, (void (*)(void))sub_1DC510E64);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1DC4B4B50(0, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 16))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1DC4B4B50(0, &qword_1EDB0E270, (void (*)(void))sub_1DC4F48D4, (void (*)(void))sub_1DC4F4918);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 16))(v32, v33, v34);
  v35 = a3[12];
  v36 = a1 + v35;
  v37 = a2 + v35;
  sub_1DC4B4B50(0, &qword_1EDB0E820, (void (*)(void))sub_1DC4F4A54, (void (*)(void))sub_1DC4F4A98);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 16))(v36, v37, v38);
  v39 = a3[13];
  v40 = a1 + v39;
  v41 = a2 + v39;
  sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 16))(v40, v41, v42);
  return a1;
}

uint64_t assignWithCopy for NewsArticleLoadFailureEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E7D0, (void (*)(void))sub_1DC510CA0, (void (*)(void))sub_1DC510CE4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 24))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1DC4B4B50(0, &qword_1EDB0E7E8, (void (*)(void))sub_1DC510E20, (void (*)(void))sub_1DC510E64);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 24))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 24))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1DC4B4B50(0, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 24))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 24))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1DC4B4B50(0, &qword_1EDB0E270, (void (*)(void))sub_1DC4F48D4, (void (*)(void))sub_1DC4F4918);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 24))(v32, v33, v34);
  v35 = a3[12];
  v36 = a1 + v35;
  v37 = a2 + v35;
  sub_1DC4B4B50(0, &qword_1EDB0E820, (void (*)(void))sub_1DC4F4A54, (void (*)(void))sub_1DC4F4A98);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 24))(v36, v37, v38);
  v39 = a3[13];
  v40 = a1 + v39;
  v41 = a2 + v39;
  sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 24))(v40, v41, v42);
  return a1;
}

uint64_t initializeWithTake for NewsArticleLoadFailureEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E7D0, (void (*)(void))sub_1DC510CA0, (void (*)(void))sub_1DC510CE4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1DC4B4B50(0, &qword_1EDB0E7E8, (void (*)(void))sub_1DC510E20, (void (*)(void))sub_1DC510E64);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1DC4B4B50(0, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 32))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1DC4B4B50(0, &qword_1EDB0E270, (void (*)(void))sub_1DC4F48D4, (void (*)(void))sub_1DC4F4918);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 32))(v32, v33, v34);
  v35 = a3[12];
  v36 = a1 + v35;
  v37 = a2 + v35;
  sub_1DC4B4B50(0, &qword_1EDB0E820, (void (*)(void))sub_1DC4F4A54, (void (*)(void))sub_1DC4F4A98);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 32))(v36, v37, v38);
  v39 = a3[13];
  v40 = a1 + v39;
  v41 = a2 + v39;
  sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 32))(v40, v41, v42);
  return a1;
}

uint64_t assignWithTake for NewsArticleLoadFailureEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E7D0, (void (*)(void))sub_1DC510CA0, (void (*)(void))sub_1DC510CE4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 40))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1DC4B4B50(0, &qword_1EDB0E7E8, (void (*)(void))sub_1DC510E20, (void (*)(void))sub_1DC510E64);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 40))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 40))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1DC4B4B50(0, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 40))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 40))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1DC4B4B50(0, &qword_1EDB0E270, (void (*)(void))sub_1DC4F48D4, (void (*)(void))sub_1DC4F4918);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 40))(v32, v33, v34);
  v35 = a3[12];
  v36 = a1 + v35;
  v37 = a2 + v35;
  sub_1DC4B4B50(0, &qword_1EDB0E820, (void (*)(void))sub_1DC4F4A54, (void (*)(void))sub_1DC4F4A98);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 40))(v36, v37, v38);
  v39 = a3[13];
  v40 = a1 + v39;
  v41 = a2 + v39;
  sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 40))(v40, v41, v42);
  return a1;
}

uint64_t getEnumTagSinglePayload for NewsArticleLoadFailureEvent()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC59792C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  sub_1DC4B6600();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
    v12 = *(_QWORD *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
    {
      v8 = v11;
      v13 = a3[5];
    }
    else
    {
      sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E7D0, (void (*)(void))sub_1DC510CA0, (void (*)(void))sub_1DC510CE4);
      v12 = *(_QWORD *)(v14 - 8);
      if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
      {
        v8 = v14;
        v13 = a3[6];
      }
      else
      {
        sub_1DC4B4B50(0, &qword_1EDB0E7E8, (void (*)(void))sub_1DC510E20, (void (*)(void))sub_1DC510E64);
        v12 = *(_QWORD *)(v15 - 8);
        if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
        {
          v8 = v15;
          v13 = a3[7];
        }
        else
        {
          sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
          v12 = *(_QWORD *)(v16 - 8);
          if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
          {
            v8 = v16;
            v13 = a3[8];
          }
          else
          {
            sub_1DC4B4B50(0, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
            v12 = *(_QWORD *)(v17 - 8);
            if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
            {
              v8 = v17;
              v13 = a3[9];
            }
            else
            {
              sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
              v12 = *(_QWORD *)(v18 - 8);
              if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
              {
                v8 = v18;
                v13 = a3[10];
              }
              else
              {
                sub_1DC4B4B50(0, &qword_1EDB0E270, (void (*)(void))sub_1DC4F48D4, (void (*)(void))sub_1DC4F4918);
                v12 = *(_QWORD *)(v19 - 8);
                if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                {
                  v8 = v19;
                  v13 = a3[11];
                }
                else
                {
                  sub_1DC4B4B50(0, &qword_1EDB0E820, (void (*)(void))sub_1DC4F4A54, (void (*)(void))sub_1DC4F4A98);
                  v12 = *(_QWORD *)(v20 - 8);
                  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                  {
                    v8 = v20;
                    v13 = a3[12];
                  }
                  else
                  {
                    sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
                    v8 = v21;
                    v12 = *(_QWORD *)(v21 - 8);
                    v13 = a3[13];
                  }
                }
              }
            }
          }
        }
      }
    }
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t storeEnumTagSinglePayload for NewsArticleLoadFailureEvent()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC597BEC(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  sub_1DC4B6600();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = a4[5];
    }
    else
    {
      sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E7D0, (void (*)(void))sub_1DC510CA0, (void (*)(void))sub_1DC510CE4);
      v14 = *(_QWORD *)(v16 - 8);
      if (*(_DWORD *)(v14 + 84) == a3)
      {
        v10 = v16;
        v15 = a4[6];
      }
      else
      {
        sub_1DC4B4B50(0, &qword_1EDB0E7E8, (void (*)(void))sub_1DC510E20, (void (*)(void))sub_1DC510E64);
        v14 = *(_QWORD *)(v17 - 8);
        if (*(_DWORD *)(v14 + 84) == a3)
        {
          v10 = v17;
          v15 = a4[7];
        }
        else
        {
          sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
          v14 = *(_QWORD *)(v18 - 8);
          if (*(_DWORD *)(v14 + 84) == a3)
          {
            v10 = v18;
            v15 = a4[8];
          }
          else
          {
            sub_1DC4B4B50(0, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
            v14 = *(_QWORD *)(v19 - 8);
            if (*(_DWORD *)(v14 + 84) == a3)
            {
              v10 = v19;
              v15 = a4[9];
            }
            else
            {
              sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
              v14 = *(_QWORD *)(v20 - 8);
              if (*(_DWORD *)(v14 + 84) == a3)
              {
                v10 = v20;
                v15 = a4[10];
              }
              else
              {
                sub_1DC4B4B50(0, &qword_1EDB0E270, (void (*)(void))sub_1DC4F48D4, (void (*)(void))sub_1DC4F4918);
                v14 = *(_QWORD *)(v21 - 8);
                if (*(_DWORD *)(v14 + 84) == a3)
                {
                  v10 = v21;
                  v15 = a4[11];
                }
                else
                {
                  sub_1DC4B4B50(0, &qword_1EDB0E820, (void (*)(void))sub_1DC4F4A54, (void (*)(void))sub_1DC4F4A98);
                  v14 = *(_QWORD *)(v22 - 8);
                  if (*(_DWORD *)(v14 + 84) == a3)
                  {
                    v10 = v22;
                    v15 = a4[12];
                  }
                  else
                  {
                    sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
                    v10 = v23;
                    v14 = *(_QWORD *)(v23 - 8);
                    v15 = a4[13];
                  }
                }
              }
            }
          }
        }
      }
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_1DC597EA8()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;

  sub_1DC4B6600();
  if (v0 <= 0x3F)
  {
    sub_1DC4B4B50(319, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
    if (v1 <= 0x3F)
    {
      sub_1DC4B4B50(319, (unint64_t *)&qword_1EDB0E7D0, (void (*)(void))sub_1DC510CA0, (void (*)(void))sub_1DC510CE4);
      if (v2 <= 0x3F)
      {
        sub_1DC4B4B50(319, &qword_1EDB0E7E8, (void (*)(void))sub_1DC510E20, (void (*)(void))sub_1DC510E64);
        if (v3 <= 0x3F)
        {
          sub_1DC4B4B50(319, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
          if (v4 <= 0x3F)
          {
            sub_1DC4B4B50(319, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
            if (v5 <= 0x3F)
            {
              sub_1DC4B4B50(319, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
              if (v6 <= 0x3F)
              {
                sub_1DC4B4B50(319, &qword_1EDB0E270, (void (*)(void))sub_1DC4F48D4, (void (*)(void))sub_1DC4F4918);
                if (v7 <= 0x3F)
                {
                  sub_1DC4B4B50(319, &qword_1EDB0E820, (void (*)(void))sub_1DC4F4A54, (void (*)(void))sub_1DC4F4A98);
                  if (v8 <= 0x3F)
                  {
                    sub_1DC4B4B50(319, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
                    if (v9 <= 0x3F)
                      swift_initStructMetadata();
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for NewsArticleLoadFailureEvent.Model(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __int128 v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  char *v35;
  char *v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v28 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v28 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1DC62ABA8();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = a3[6];
    v10 = (char *)a1 + v8;
    v11 = (char *)a2 + v8;
    v12 = *((_QWORD *)v11 + 1);
    *(_QWORD *)v10 = *(_QWORD *)v11;
    *((_QWORD *)v10 + 1) = v12;
    v13 = *((_QWORD *)v11 + 3);
    *((_QWORD *)v10 + 2) = *((_QWORD *)v11 + 2);
    *((_QWORD *)v10 + 3) = v13;
    v10[32] = v11[32];
    *((_QWORD *)v10 + 5) = *((_QWORD *)v11 + 5);
    v10[48] = v11[48];
    *((_QWORD *)v10 + 7) = *((_QWORD *)v11 + 7);
    *((_DWORD *)v10 + 16) = *((_DWORD *)v11 + 16);
    v14 = (char *)a1 + v9;
    v15 = (char *)a2 + v9;
    *(_DWORD *)v14 = *(_DWORD *)v15;
    v14[4] = v15[4];
    v16 = a3[7];
    v17 = a3[8];
    v18 = (char *)a1 + v16;
    v19 = (char *)a2 + v16;
    *(_DWORD *)v18 = *(_DWORD *)v19;
    v18[4] = v19[4];
    v20 = (char *)a1 + v17;
    v21 = (char *)a2 + v17;
    *v20 = *v21;
    v22 = *((_QWORD *)v21 + 2);
    *((_QWORD *)v20 + 1) = *((_QWORD *)v21 + 1);
    *((_QWORD *)v20 + 2) = v22;
    v23 = a3[9];
    v24 = (char *)a1 + v23;
    v25 = (char *)a2 + v23;
    v26 = *(uint64_t *)((char *)a2 + v23 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v26)
    {
      *v24 = *v25;
      *((_QWORD *)v24 + 1) = *((_QWORD *)v25 + 1);
      *((_QWORD *)v24 + 2) = v26;
      *((_QWORD *)v24 + 3) = *((_QWORD *)v25 + 3);
      v27 = *((_QWORD *)v25 + 5);
      *((_QWORD *)v24 + 4) = *((_QWORD *)v25 + 4);
      *((_QWORD *)v24 + 5) = v27;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v29 = *((_OWORD *)v25 + 1);
      *(_OWORD *)v24 = *(_OWORD *)v25;
      *((_OWORD *)v24 + 1) = v29;
      *((_OWORD *)v24 + 2) = *((_OWORD *)v25 + 2);
    }
    v30 = a3[10];
    v31 = a3[11];
    v32 = (char *)a1 + v30;
    v33 = (char *)a2 + v30;
    v34 = *((_QWORD *)v33 + 1);
    *(_QWORD *)v32 = *(_QWORD *)v33;
    *((_QWORD *)v32 + 1) = v34;
    *((_WORD *)v32 + 8) = *((_WORD *)v33 + 8);
    v35 = (char *)a1 + v31;
    v36 = (char *)a2 + v31;
    v37 = *((_OWORD *)v36 + 1);
    *(_OWORD *)v35 = *(_OWORD *)v36;
    *((_OWORD *)v35 + 1) = v37;
    v38 = *((_OWORD *)v36 + 3);
    *((_OWORD *)v35 + 2) = *((_OWORD *)v36 + 2);
    *((_OWORD *)v35 + 3) = v38;
    *((_OWORD *)v35 + 4) = *((_OWORD *)v36 + 4);
    *((_QWORD *)v35 + 10) = *((_QWORD *)v36 + 10);
    *(_OWORD *)(v35 + 88) = *(_OWORD *)(v36 + 88);
    *(_OWORD *)(v35 + 104) = *(_OWORD *)(v36 + 104);
    *((_DWORD *)v35 + 30) = *((_DWORD *)v36 + 30);
    *((_OWORD *)v35 + 8) = *((_OWORD *)v36 + 8);
    v35[144] = v36[144];
    *(_QWORD *)(v35 + 148) = *(_QWORD *)(v36 + 148);
    v39 = *((_OWORD *)v36 + 11);
    *((_OWORD *)v35 + 10) = *((_OWORD *)v36 + 10);
    *((_OWORD *)v35 + 11) = v39;
    *((_QWORD *)v35 + 24) = *((_QWORD *)v36 + 24);
    v40 = a3[13];
    *(_WORD *)((char *)a1 + a3[12]) = *(_WORD *)((char *)a2 + a3[12]);
    v41 = (char *)a1 + v40;
    v42 = (char *)a2 + v40;
    v43 = *((_QWORD *)v42 + 1);
    *(_QWORD *)v41 = *(_QWORD *)v42;
    *((_QWORD *)v41 + 1) = v43;
    v44 = *((_QWORD *)v42 + 3);
    *((_QWORD *)v41 + 2) = *((_QWORD *)v42 + 2);
    *((_QWORD *)v41 + 3) = v44;
    v41[32] = v42[32];
    v41[33] = v42[33];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for NewsArticleLoadFailureEvent.Model(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + *(int *)(a2 + 36) + 16))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for NewsArticleLoadFailureEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  v6 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = a2 + v7;
  v11 = *(_QWORD *)(v10 + 8);
  *(_QWORD *)v9 = *(_QWORD *)v10;
  *(_QWORD *)(v9 + 8) = v11;
  v12 = *(_QWORD *)(v10 + 24);
  *(_QWORD *)(v9 + 16) = *(_QWORD *)(v10 + 16);
  *(_QWORD *)(v9 + 24) = v12;
  *(_BYTE *)(v9 + 32) = *(_BYTE *)(v10 + 32);
  *(_QWORD *)(v9 + 40) = *(_QWORD *)(v10 + 40);
  *(_BYTE *)(v9 + 48) = *(_BYTE *)(v10 + 48);
  *(_QWORD *)(v9 + 56) = *(_QWORD *)(v10 + 56);
  *(_DWORD *)(v9 + 64) = *(_DWORD *)(v10 + 64);
  v13 = a1 + v8;
  v14 = a2 + v8;
  *(_DWORD *)v13 = *(_DWORD *)v14;
  *(_BYTE *)(v13 + 4) = *(_BYTE *)(v14 + 4);
  v15 = a3[7];
  v16 = a3[8];
  v17 = a1 + v15;
  v18 = a2 + v15;
  *(_DWORD *)v17 = *(_DWORD *)v18;
  *(_BYTE *)(v17 + 4) = *(_BYTE *)(v18 + 4);
  v19 = a1 + v16;
  v20 = a2 + v16;
  *(_BYTE *)v19 = *(_BYTE *)v20;
  v21 = *(_QWORD *)(v20 + 16);
  *(_QWORD *)(v19 + 8) = *(_QWORD *)(v20 + 8);
  *(_QWORD *)(v19 + 16) = v21;
  v22 = a3[9];
  v23 = a1 + v22;
  v24 = a2 + v22;
  v25 = *(_QWORD *)(a2 + v22 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v25)
  {
    *(_BYTE *)v23 = *(_BYTE *)v24;
    *(_QWORD *)(v23 + 8) = *(_QWORD *)(v24 + 8);
    *(_QWORD *)(v23 + 16) = v25;
    *(_QWORD *)(v23 + 24) = *(_QWORD *)(v24 + 24);
    v26 = *(_QWORD *)(v24 + 40);
    *(_QWORD *)(v23 + 32) = *(_QWORD *)(v24 + 32);
    *(_QWORD *)(v23 + 40) = v26;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v27 = *(_OWORD *)(v24 + 16);
    *(_OWORD *)v23 = *(_OWORD *)v24;
    *(_OWORD *)(v23 + 16) = v27;
    *(_OWORD *)(v23 + 32) = *(_OWORD *)(v24 + 32);
  }
  v28 = a3[10];
  v29 = a3[11];
  v30 = a1 + v28;
  v31 = a2 + v28;
  v32 = *(_QWORD *)(v31 + 8);
  *(_QWORD *)v30 = *(_QWORD *)v31;
  *(_QWORD *)(v30 + 8) = v32;
  *(_WORD *)(v30 + 16) = *(_WORD *)(v31 + 16);
  v33 = a1 + v29;
  v34 = a2 + v29;
  v35 = *(_OWORD *)(v34 + 16);
  *(_OWORD *)v33 = *(_OWORD *)v34;
  *(_OWORD *)(v33 + 16) = v35;
  v36 = *(_OWORD *)(v34 + 48);
  *(_OWORD *)(v33 + 32) = *(_OWORD *)(v34 + 32);
  *(_OWORD *)(v33 + 48) = v36;
  *(_OWORD *)(v33 + 64) = *(_OWORD *)(v34 + 64);
  *(_QWORD *)(v33 + 80) = *(_QWORD *)(v34 + 80);
  *(_OWORD *)(v33 + 88) = *(_OWORD *)(v34 + 88);
  *(_OWORD *)(v33 + 104) = *(_OWORD *)(v34 + 104);
  *(_DWORD *)(v33 + 120) = *(_DWORD *)(v34 + 120);
  *(_OWORD *)(v33 + 128) = *(_OWORD *)(v34 + 128);
  *(_BYTE *)(v33 + 144) = *(_BYTE *)(v34 + 144);
  *(_QWORD *)(v33 + 148) = *(_QWORD *)(v34 + 148);
  v37 = *(_OWORD *)(v34 + 176);
  *(_OWORD *)(v33 + 160) = *(_OWORD *)(v34 + 160);
  *(_OWORD *)(v33 + 176) = v37;
  *(_QWORD *)(v33 + 192) = *(_QWORD *)(v34 + 192);
  v38 = a3[13];
  *(_WORD *)(a1 + a3[12]) = *(_WORD *)(a2 + a3[12]);
  v39 = a1 + v38;
  v40 = a2 + v38;
  v41 = *(_QWORD *)(v40 + 8);
  *(_QWORD *)v39 = *(_QWORD *)v40;
  *(_QWORD *)(v39 + 8) = v41;
  v42 = *(_QWORD *)(v40 + 24);
  *(_QWORD *)(v39 + 16) = *(_QWORD *)(v40 + 16);
  *(_QWORD *)(v39 + 24) = v42;
  *(_BYTE *)(v39 + 32) = *(_BYTE *)(v40 + 32);
  *(_BYTE *)(v39 + 33) = *(_BYTE *)(v40 + 33);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for NewsArticleLoadFailureEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int *v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  int *v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __int128 *v24;
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v6 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_QWORD *)v8 = *(_QWORD *)(a2 + v7);
  *(_QWORD *)(v8 + 8) = *(_QWORD *)(a2 + v7 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(v9 + 16);
  *(_QWORD *)(v8 + 24) = *(_QWORD *)(v9 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v8 + 32) = *(_BYTE *)(v9 + 32);
  v10 = *(_QWORD *)(v9 + 40);
  *(_BYTE *)(v8 + 48) = *(_BYTE *)(v9 + 48);
  *(_QWORD *)(v8 + 40) = v10;
  *(_QWORD *)(v8 + 56) = *(_QWORD *)(v9 + 56);
  *(_BYTE *)(v8 + 64) = *(_BYTE *)(v9 + 64);
  *(_BYTE *)(v8 + 65) = *(_BYTE *)(v9 + 65);
  *(_BYTE *)(v8 + 66) = *(_BYTE *)(v9 + 66);
  *(_BYTE *)(v8 + 67) = *(_BYTE *)(v9 + 67);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = (int *)(a2 + v11);
  v14 = *v13;
  *(_BYTE *)(v12 + 4) = *((_BYTE *)v13 + 4);
  *(_DWORD *)v12 = v14;
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = (int *)(a2 + v15);
  v18 = *v17;
  *(_BYTE *)(v16 + 4) = *((_BYTE *)v17 + 4);
  *(_DWORD *)v16 = v18;
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  *(_BYTE *)v20 = *(_BYTE *)v21;
  *(_QWORD *)(v20 + 8) = *(_QWORD *)(v21 + 8);
  *(_QWORD *)(v20 + 16) = *(_QWORD *)(v21 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v22 = a3[9];
  v23 = a1 + v22;
  v24 = (__int128 *)(a2 + v22);
  v25 = *(_QWORD *)(a1 + v22 + 16);
  v26 = *(_QWORD *)(a2 + v22 + 16);
  if (v25)
  {
    if (v26)
    {
      *(_BYTE *)v23 = *(_BYTE *)v24;
      *(_QWORD *)(v23 + 8) = *((_QWORD *)v24 + 1);
      *(_QWORD *)(v23 + 16) = *((_QWORD *)v24 + 2);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_DWORD *)(v23 + 24) = *((_DWORD *)v24 + 6);
      *(_DWORD *)(v23 + 28) = *((_DWORD *)v24 + 7);
      *(_QWORD *)(v23 + 32) = *((_QWORD *)v24 + 4);
      *(_QWORD *)(v23 + 40) = *((_QWORD *)v24 + 5);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1DC4CDAF4(v23);
      v28 = v24[1];
      v27 = v24[2];
      *(_OWORD *)v23 = *v24;
      *(_OWORD *)(v23 + 16) = v28;
      *(_OWORD *)(v23 + 32) = v27;
    }
  }
  else if (v26)
  {
    *(_BYTE *)v23 = *(_BYTE *)v24;
    *(_QWORD *)(v23 + 8) = *((_QWORD *)v24 + 1);
    *(_QWORD *)(v23 + 16) = *((_QWORD *)v24 + 2);
    *(_DWORD *)(v23 + 24) = *((_DWORD *)v24 + 6);
    *(_DWORD *)(v23 + 28) = *((_DWORD *)v24 + 7);
    *(_QWORD *)(v23 + 32) = *((_QWORD *)v24 + 4);
    *(_QWORD *)(v23 + 40) = *((_QWORD *)v24 + 5);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v29 = *v24;
    v30 = v24[2];
    *(_OWORD *)(v23 + 16) = v24[1];
    *(_OWORD *)(v23 + 32) = v30;
    *(_OWORD *)v23 = v29;
  }
  v31 = a3[10];
  v32 = a1 + v31;
  v33 = a2 + v31;
  *(_QWORD *)v32 = *(_QWORD *)(a2 + v31);
  *(_QWORD *)(v32 + 8) = *(_QWORD *)(a2 + v31 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v32 + 16) = *(_BYTE *)(v33 + 16);
  *(_BYTE *)(v32 + 17) = *(_BYTE *)(v33 + 17);
  v34 = a3[11];
  v35 = a1 + v34;
  v36 = a2 + v34;
  *(_QWORD *)v35 = *(_QWORD *)(a2 + v34);
  *(_QWORD *)(v35 + 8) = *(_QWORD *)(a2 + v34 + 8);
  *(_QWORD *)(v35 + 16) = *(_QWORD *)(a2 + v34 + 16);
  *(_QWORD *)(v35 + 24) = *(_QWORD *)(a2 + v34 + 24);
  *(_QWORD *)(v35 + 32) = *(_QWORD *)(a2 + v34 + 32);
  *(_QWORD *)(v35 + 40) = *(_QWORD *)(a2 + v34 + 40);
  *(_QWORD *)(v35 + 48) = *(_QWORD *)(a2 + v34 + 48);
  *(_QWORD *)(v35 + 56) = *(_QWORD *)(a2 + v34 + 56);
  *(_QWORD *)(v35 + 64) = *(_QWORD *)(a2 + v34 + 64);
  *(_QWORD *)(v35 + 72) = *(_QWORD *)(a2 + v34 + 72);
  *(_QWORD *)(v35 + 80) = *(_QWORD *)(a2 + v34 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v35 + 88) = *(_QWORD *)(v36 + 88);
  *(_QWORD *)(v35 + 96) = *(_QWORD *)(v36 + 96);
  *(_QWORD *)(v35 + 104) = *(_QWORD *)(v36 + 104);
  *(_QWORD *)(v35 + 112) = *(_QWORD *)(v36 + 112);
  *(_DWORD *)(v35 + 120) = *(_DWORD *)(v36 + 120);
  *(_QWORD *)(v35 + 128) = *(_QWORD *)(v36 + 128);
  *(_QWORD *)(v35 + 136) = *(_QWORD *)(v36 + 136);
  *(_BYTE *)(v35 + 144) = *(_BYTE *)(v36 + 144);
  *(_DWORD *)(v35 + 148) = *(_DWORD *)(v36 + 148);
  *(_DWORD *)(v35 + 152) = *(_DWORD *)(v36 + 152);
  *(_QWORD *)(v35 + 160) = *(_QWORD *)(v36 + 160);
  *(_QWORD *)(v35 + 168) = *(_QWORD *)(v36 + 168);
  *(_QWORD *)(v35 + 176) = *(_QWORD *)(v36 + 176);
  *(_QWORD *)(v35 + 184) = *(_QWORD *)(v36 + 184);
  *(_QWORD *)(v35 + 192) = *(_QWORD *)(v36 + 192);
  *(_WORD *)(a1 + a3[12]) = *(_WORD *)(a2 + a3[12]);
  v37 = a3[13];
  v38 = a1 + v37;
  v39 = a2 + v37;
  *(_QWORD *)v38 = *(_QWORD *)(a2 + v37);
  *(_QWORD *)(v38 + 8) = *(_QWORD *)(a2 + v37 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v38 + 16) = *(_QWORD *)(v39 + 16);
  *(_QWORD *)(v38 + 24) = *(_QWORD *)(v39 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v38 + 32) = *(_BYTE *)(v39 + 32);
  *(_BYTE *)(v38 + 33) = *(_BYTE *)(v39 + 33);
  return a1;
}

uint64_t initializeWithTake for NewsArticleLoadFailureEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _OWORD *v23;
  _OWORD *v24;
  __int128 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  __int128 v41;

  v6 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = a2 + v7;
  *(_DWORD *)(v9 + 64) = *(_DWORD *)(v10 + 64);
  v11 = *(_OWORD *)(v10 + 48);
  *(_OWORD *)(v9 + 32) = *(_OWORD *)(v10 + 32);
  *(_OWORD *)(v9 + 48) = v11;
  v12 = *(_OWORD *)(v10 + 16);
  *(_OWORD *)v9 = *(_OWORD *)v10;
  *(_OWORD *)(v9 + 16) = v12;
  v13 = a1 + v8;
  v14 = a2 + v8;
  *(_BYTE *)(v13 + 4) = *(_BYTE *)(v14 + 4);
  *(_DWORD *)v13 = *(_DWORD *)v14;
  v15 = a3[7];
  v16 = a3[8];
  v17 = a1 + v15;
  v18 = a2 + v15;
  *(_BYTE *)(v17 + 4) = *(_BYTE *)(v18 + 4);
  *(_DWORD *)v17 = *(_DWORD *)v18;
  v19 = a1 + v16;
  v20 = a2 + v16;
  *(_OWORD *)v19 = *(_OWORD *)v20;
  *(_QWORD *)(v19 + 16) = *(_QWORD *)(v20 + 16);
  v21 = a3[9];
  v22 = a3[10];
  v23 = (_OWORD *)(a1 + v21);
  v24 = (_OWORD *)(a2 + v21);
  v25 = v24[1];
  *v23 = *v24;
  v23[1] = v25;
  v23[2] = v24[2];
  v26 = a1 + v22;
  v27 = a2 + v22;
  *(_OWORD *)v26 = *(_OWORD *)v27;
  *(_WORD *)(v26 + 16) = *(_WORD *)(v27 + 16);
  v28 = a3[11];
  v29 = a3[12];
  v30 = a1 + v28;
  v31 = a2 + v28;
  *(_QWORD *)(v30 + 192) = *(_QWORD *)(v31 + 192);
  v32 = *(_OWORD *)(v31 + 48);
  *(_OWORD *)(v30 + 32) = *(_OWORD *)(v31 + 32);
  *(_OWORD *)(v30 + 48) = v32;
  v33 = *(_OWORD *)(v31 + 16);
  *(_OWORD *)v30 = *(_OWORD *)v31;
  *(_OWORD *)(v30 + 16) = v33;
  v34 = *(_OWORD *)(v31 + 112);
  *(_OWORD *)(v30 + 96) = *(_OWORD *)(v31 + 96);
  *(_OWORD *)(v30 + 112) = v34;
  v35 = *(_OWORD *)(v31 + 80);
  *(_OWORD *)(v30 + 64) = *(_OWORD *)(v31 + 64);
  *(_OWORD *)(v30 + 80) = v35;
  v36 = *(_OWORD *)(v31 + 176);
  *(_OWORD *)(v30 + 160) = *(_OWORD *)(v31 + 160);
  *(_OWORD *)(v30 + 176) = v36;
  v37 = *(_OWORD *)(v31 + 144);
  *(_OWORD *)(v30 + 128) = *(_OWORD *)(v31 + 128);
  *(_OWORD *)(v30 + 144) = v37;
  *(_WORD *)(a1 + v29) = *(_WORD *)(a2 + v29);
  v38 = a3[13];
  v39 = a1 + v38;
  v40 = a2 + v38;
  v41 = *(_OWORD *)(v40 + 16);
  *(_OWORD *)v39 = *(_OWORD *)v40;
  *(_OWORD *)(v39 + 16) = v41;
  *(_WORD *)(v39 + 32) = *(_WORD *)(v40 + 32);
  return a1;
}

uint64_t assignWithTake for NewsArticleLoadFailureEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __int128 v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  v6 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = *(_QWORD *)(a2 + v7 + 8);
  *(_QWORD *)v8 = *(_QWORD *)(a2 + v7);
  *(_QWORD *)(v8 + 8) = v10;
  swift_bridgeObjectRelease();
  v11 = *(_QWORD *)(v9 + 24);
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(v9 + 16);
  *(_QWORD *)(v8 + 24) = v11;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v8 + 32) = *(_BYTE *)(v9 + 32);
  *(_QWORD *)(v8 + 40) = *(_QWORD *)(v9 + 40);
  *(_BYTE *)(v8 + 48) = *(_BYTE *)(v9 + 48);
  *(_QWORD *)(v8 + 56) = *(_QWORD *)(v9 + 56);
  *(_BYTE *)(v8 + 64) = *(_BYTE *)(v9 + 64);
  *(_BYTE *)(v8 + 65) = *(_BYTE *)(v9 + 65);
  *(_BYTE *)(v8 + 66) = *(_BYTE *)(v9 + 66);
  *(_BYTE *)(v8 + 67) = *(_BYTE *)(v9 + 67);
  v12 = a3[6];
  v13 = a3[7];
  v14 = a1 + v12;
  v15 = a2 + v12;
  *(_DWORD *)v14 = *(_DWORD *)v15;
  *(_BYTE *)(v14 + 4) = *(_BYTE *)(v15 + 4);
  v16 = a1 + v13;
  v17 = a2 + v13;
  *(_DWORD *)v16 = *(_DWORD *)v17;
  *(_BYTE *)(v16 + 4) = *(_BYTE *)(v17 + 4);
  v18 = a3[8];
  v19 = a1 + v18;
  v20 = a2 + v18;
  *(_BYTE *)v19 = *(_BYTE *)v20;
  v22 = *(_QWORD *)(v20 + 8);
  v21 = *(_QWORD *)(v20 + 16);
  *(_QWORD *)(v19 + 8) = v22;
  *(_QWORD *)(v19 + 16) = v21;
  swift_bridgeObjectRelease();
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  if (!*(_QWORD *)(a1 + v23 + 16))
    goto LABEL_5;
  v26 = *(_QWORD *)(v25 + 16);
  if (!v26)
  {
    sub_1DC4CDAF4(v24);
LABEL_5:
    v28 = *(_OWORD *)(v25 + 16);
    *(_OWORD *)v24 = *(_OWORD *)v25;
    *(_OWORD *)(v24 + 16) = v28;
    *(_OWORD *)(v24 + 32) = *(_OWORD *)(v25 + 32);
    goto LABEL_6;
  }
  *(_BYTE *)v24 = *(_BYTE *)v25;
  *(_QWORD *)(v24 + 8) = *(_QWORD *)(v25 + 8);
  *(_QWORD *)(v24 + 16) = v26;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v24 + 24) = *(_QWORD *)(v25 + 24);
  v27 = *(_QWORD *)(v25 + 40);
  *(_QWORD *)(v24 + 32) = *(_QWORD *)(v25 + 32);
  *(_QWORD *)(v24 + 40) = v27;
  swift_bridgeObjectRelease();
LABEL_6:
  v29 = a3[10];
  v30 = a1 + v29;
  v31 = a2 + v29;
  v32 = *(_QWORD *)(a2 + v29 + 8);
  *(_QWORD *)v30 = *(_QWORD *)(a2 + v29);
  *(_QWORD *)(v30 + 8) = v32;
  swift_bridgeObjectRelease();
  *(_WORD *)(v30 + 16) = *(_WORD *)(v31 + 16);
  v33 = a3[11];
  v34 = a1 + v33;
  v35 = a2 + v33;
  v36 = *(_OWORD *)(a2 + v33 + 16);
  *(_OWORD *)v34 = *(_OWORD *)(a2 + v33);
  *(_OWORD *)(v34 + 16) = v36;
  v37 = *(_OWORD *)(a2 + v33 + 48);
  *(_OWORD *)(v34 + 32) = *(_OWORD *)(a2 + v33 + 32);
  *(_OWORD *)(v34 + 48) = v37;
  *(_OWORD *)(v34 + 64) = *(_OWORD *)(a2 + v33 + 64);
  *(_QWORD *)(v34 + 80) = *(_QWORD *)(a2 + v33 + 80);
  swift_bridgeObjectRelease();
  *(_OWORD *)(v34 + 88) = *(_OWORD *)(v35 + 88);
  *(_OWORD *)(v34 + 104) = *(_OWORD *)(v35 + 104);
  *(_DWORD *)(v34 + 120) = *(_DWORD *)(v35 + 120);
  *(_OWORD *)(v34 + 128) = *(_OWORD *)(v35 + 128);
  *(_BYTE *)(v34 + 144) = *(_BYTE *)(v35 + 144);
  *(_QWORD *)(v34 + 148) = *(_QWORD *)(v35 + 148);
  v38 = *(_OWORD *)(v35 + 176);
  *(_OWORD *)(v34 + 160) = *(_OWORD *)(v35 + 160);
  *(_OWORD *)(v34 + 176) = v38;
  *(_QWORD *)(v34 + 192) = *(_QWORD *)(v35 + 192);
  v39 = a3[13];
  *(_WORD *)(a1 + a3[12]) = *(_WORD *)(a2 + a3[12]);
  v40 = a1 + v39;
  v41 = a2 + v39;
  v42 = *(_QWORD *)(v41 + 8);
  *(_QWORD *)v40 = *(_QWORD *)v41;
  *(_QWORD *)(v40 + 8) = v42;
  swift_bridgeObjectRelease();
  v43 = *(_QWORD *)(v41 + 24);
  *(_QWORD *)(v40 + 16) = *(_QWORD *)(v41 + 16);
  *(_QWORD *)(v40 + 24) = v43;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v40 + 32) = *(_BYTE *)(v41 + 32);
  *(_BYTE *)(v40 + 33) = *(_BYTE *)(v41 + 33);
  return a1;
}

uint64_t getEnumTagSinglePayload for NewsArticleLoadFailureEvent.Model()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC598E04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_1DC62ABA8();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for NewsArticleLoadFailureEvent.Model()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC598E90(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_1DC62ABA8();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  return result;
}

uint64_t sub_1DC598F0C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1DC62ABA8();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for NewsArticleLoadFailureEvent.Model.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 9 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 9) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF7)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF6)
    return ((uint64_t (*)(void))((char *)&loc_1DC599010 + 4 * byte_1DC63E6EF[v4]))();
  *a1 = a2 + 9;
  return ((uint64_t (*)(void))((char *)sub_1DC599044 + 4 * byte_1DC63E6EA[v4]))();
}

uint64_t sub_1DC599044(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC59904C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DC599054);
  return result;
}

uint64_t sub_1DC599060(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DC599068);
  *(_BYTE *)result = a2 + 9;
  return result;
}

uint64_t sub_1DC59906C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC599074(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for NewsArticleLoadFailureEvent.Model.CodingKeys()
{
  return &type metadata for NewsArticleLoadFailureEvent.Model.CodingKeys;
}

unint64_t sub_1DC599094()
{
  unint64_t result;

  result = qword_1F036DC80;
  if (!qword_1F036DC80)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC63E9A4, &type metadata for NewsArticleLoadFailureEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036DC80);
  }
  return result;
}

unint64_t sub_1DC5990DC()
{
  unint64_t result;

  result = qword_1F036DC88;
  if (!qword_1F036DC88)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC63E914, &type metadata for NewsArticleLoadFailureEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036DC88);
  }
  return result;
}

unint64_t sub_1DC599124()
{
  unint64_t result;

  result = qword_1F036DC90;
  if (!qword_1F036DC90)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC63E93C, &type metadata for NewsArticleLoadFailureEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036DC90);
  }
  return result;
}

uint64_t sub_1DC599168(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x746144746E657665 && a2 == 0xE900000000000061;
  if (v2 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x697472417377656ELL && a2 == 0xEF61746144656C63 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001DC64C680 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001DC64C6A0 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6174614464656566 && a2 == 0xE800000000000000 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x74614470756F7267 && a2 == 0xE900000000000061 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x6174614477656976 && a2 == 0xE800000000000000 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000001DC64C490 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000001DC64C4B0 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x446C656E6E616863 && a2 == 0xEB00000000617461)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else
  {
    v6 = sub_1DC62B520();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 9;
    else
      return 10;
  }
}

StocksAnalytics::TipType_optional __swiftcall TipType.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  uint64_t v3;
  StocksAnalytics::TipType_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1DC62B3DC();
  result.value = swift_bridgeObjectRelease();
  if (v3 == 1)
    v5 = 1;
  else
    v5 = 2;
  if (!v3)
    v5 = 0;
  *v2 = v5;
  return result;
}

uint64_t TipType.rawValue.getter()
{
  _BYTE *v0;

  if (*v0)
    return 0xD000000000000010;
  else
    return 0x6E776F6E6B6E75;
}

uint64_t sub_1DC599640(char *a1, char *a2)
{
  return sub_1DC541DF4(*a1, *a2);
}

unint64_t sub_1DC599650()
{
  unint64_t result;

  result = qword_1F036DC98;
  if (!qword_1F036DC98)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for TipType, &type metadata for TipType);
    atomic_store(result, (unint64_t *)&qword_1F036DC98);
  }
  return result;
}

uint64_t sub_1DC599694()
{
  sub_1DC62B5B0();
  sub_1DC62B10C();
  swift_bridgeObjectRelease();
  return sub_1DC62B5C8();
}

uint64_t sub_1DC599718()
{
  sub_1DC62B10C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DC599778()
{
  sub_1DC62B5B0();
  sub_1DC62B10C();
  swift_bridgeObjectRelease();
  return sub_1DC62B5C8();
}

StocksAnalytics::TipType_optional sub_1DC5997F8(Swift::String *a1)
{
  return TipType.init(rawValue:)(*a1);
}

void sub_1DC599804(unint64_t *a1@<X8>)
{
  _BYTE *v1;
  unint64_t v2;
  unint64_t v3;

  v2 = 0x6E776F6E6B6E75;
  if (*v1)
    v2 = 0xD000000000000010;
  v3 = 0x80000001DC64B970;
  if (!*v1)
    v3 = 0xE700000000000000;
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_1DC599848()
{
  sub_1DC5999BC();
  return sub_1DC62B13C();
}

uint64_t sub_1DC5998A4()
{
  sub_1DC5999BC();
  return sub_1DC62B130();
}

uint64_t storeEnumTagSinglePayload for TipType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1DC59993C + 4 * byte_1DC63EA21[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1DC599970 + 4 * byte_1DC63EA1C[v4]))();
}

uint64_t sub_1DC599970(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC599978(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DC599980);
  return result;
}

uint64_t sub_1DC59998C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DC599994);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1DC599998(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC5999A0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for TipType()
{
  return &type metadata for TipType;
}

unint64_t sub_1DC5999BC()
{
  unint64_t result;

  result = qword_1EDB11660;
  if (!qword_1EDB11660)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for TipType, &type metadata for TipType);
    atomic_store(result, (unint64_t *)&qword_1EDB11660);
  }
  return result;
}

uint64_t static AppSessionResumeEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C2FE8(&qword_1EDB10808, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1EDB107F0, a1);
}

uint64_t static AppSessionResumeEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C2FE8(&qword_1EDB10828, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1EDB10810, a1);
}

uint64_t sub_1DC599A4C()
{
  return 0;
}

uint64_t sub_1DC599A58@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *a1 = 1;
  return result;
}

uint64_t sub_1DC599A84()
{
  sub_1DC599BEC();
  return sub_1DC62B604();
}

uint64_t sub_1DC599AAC()
{
  sub_1DC599BEC();
  return sub_1DC62B610();
}

uint64_t AppSessionResumeEvent.Model.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  sub_1DC599B94();
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC599BEC();
  sub_1DC62B5F8();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

void sub_1DC599B94()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1F036DCA0)
  {
    sub_1DC599BEC();
    v0 = sub_1DC62B508();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1F036DCA0);
  }
}

unint64_t sub_1DC599BEC()
{
  unint64_t result;

  result = qword_1F036DCA8;
  if (!qword_1F036DCA8)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC63EC38, &type metadata for AppSessionResumeEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036DCA8);
  }
  return result;
}

uint64_t AppSessionResumeEvent.Model.init(from:)(uint64_t a1)
{
  return __swift_destroy_boxed_opaque_existential_1(a1);
}

uint64_t sub_1DC599C54(uint64_t a1)
{
  return __swift_destroy_boxed_opaque_existential_1(a1);
}

uint64_t sub_1DC599C78(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  sub_1DC599B94();
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC599BEC();
  sub_1DC62B5F8();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

ValueMetadata *type metadata accessor for AppSessionResumeEvent.Model()
{
  return &type metadata for AppSessionResumeEvent.Model;
}

ValueMetadata *type metadata accessor for AppSessionResumeEvent.Model.CodingKeys()
{
  return &type metadata for AppSessionResumeEvent.Model.CodingKeys;
}

unint64_t sub_1DC599D5C()
{
  unint64_t result;

  result = qword_1F036DCB0;
  if (!qword_1F036DCB0)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC63EBE8, &type metadata for AppSessionResumeEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036DCB0);
  }
  return result;
}

unint64_t sub_1DC599DA4()
{
  unint64_t result;

  result = qword_1F036DCB8;
  if (!qword_1F036DCB8)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC63EC10, &type metadata for AppSessionResumeEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036DCB8);
  }
  return result;
}

uint64_t backgroundTask(withName:work:)(uint64_t a1, uint64_t a2, void (*a3)(void (*)(), uint64_t))
{
  id v4;
  void *v5;
  id v6;
  uint64_t v7;

  v4 = objc_msgSend((id)objc_opt_self(), sel_sharedApplication);
  v5 = (void *)sub_1DC62B0DC();
  v6 = objc_msgSend(v4, sel_beginBackgroundTaskWithName_expirationHandler_, v5, 0);

  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 16) = v6;
  a3(sub_1DC599EB8, v7);
  return swift_release();
}

uint64_t sub_1DC599EA8()
{
  return swift_deallocObject();
}

void sub_1DC599EB8()
{
  uint64_t v0;

  sub_1DC59A1B4(*(_QWORD *)(v0 + 16));
}

uint64_t backgroundTask(withName:timeout:work:)(double a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  _BYTE *v14;
  id v15;
  void *v16;
  id v17;
  void (*v18)(_BYTE *, uint64_t);
  void *v19;
  void *v20;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;

  v8 = sub_1DC62B064();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x1E0C80A78](v8);
  v12 = &v22[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v10);
  v14 = &v22[-v13];
  v23 = a4;
  v24 = a5;
  sub_1DC4C0864();
  swift_allocObject();
  sub_1DC62AEB4();
  v15 = objc_msgSend((id)objc_opt_self(), sel_sharedApplication);
  v16 = (void *)sub_1DC62B0DC();
  v17 = objc_msgSend(v15, sel_beginBackgroundTaskWithName_expirationHandler_, v16, 0);

  sub_1DC62B058();
  MEMORY[0x1DF0CBE38](v12, a1);
  v18 = *(void (**)(_BYTE *, uint64_t))(v9 + 8);
  v18(v12, v8);
  v19 = (void *)sub_1DC62AE90();
  sub_1DC62AEA8();

  v18(v14, v8);
  sub_1DC59A178();
  v20 = (void *)sub_1DC62B1FC();
  *(_QWORD *)(swift_allocObject() + 16) = v17;
  sub_1DC62AE9C();
  swift_release();
  swift_release();
  swift_release();

  return swift_release();
}

uint64_t sub_1DC59A0DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t (*)(), uint64_t))
{
  uint64_t v8;
  uint64_t v9;

  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a1;
  *(_QWORD *)(v8 + 24) = a2;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = sub_1DC4BE8BC;
  *(_QWORD *)(v9 + 24) = v8;
  swift_retain();
  a5(sub_1DC4BE8C4, v9);
  return swift_release();
}

uint64_t sub_1DC59A170(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return sub_1DC59A0DC(a1, a2, a3, a4, *(void (**)(uint64_t (*)(), uint64_t))(v4 + 16));
}

unint64_t sub_1DC59A178()
{
  unint64_t result;

  result = qword_1EDB118E0;
  if (!qword_1EDB118E0)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EDB118E0);
  }
  return result;
}

void sub_1DC59A1B4(uint64_t a1)
{
  id v2;

  v2 = objc_msgSend((id)objc_opt_self(), sel_sharedApplication);
  objc_msgSend(v2, sel_endBackgroundTask_, a1);

}

uint64_t sub_1DC59A210()
{
  return swift_deallocObject();
}

uint64_t sub_1DC59A220()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t BannerAdData.init(traits:)@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int (*v15)(char *, uint64_t, uint64_t);
  char v16;
  char v17;
  uint64_t result;
  char v19;
  uint64_t v20;

  sub_1DC59A424();
  v5 = MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x1E0C80A78](v5);
  v10 = (char *)&v20 - v9;
  MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v20 - v11;
  sub_1DC59A478(a1, (uint64_t)&v20 - v11);
  v13 = sub_1DC62AFC8();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48);
  if (v15(v12, 1, v13) == 1)
  {
    sub_1DC59A4BC((uint64_t)v12);
    v16 = 0;
  }
  else
  {
    v16 = sub_1DC62AFB0();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v12, v13);
  }
  sub_1DC59A478(a1, (uint64_t)v10);
  if (v15(v10, 1, v13) == 1)
  {
    sub_1DC59A4BC((uint64_t)v10);
    v17 = 0;
  }
  else
  {
    v17 = sub_1DC62AFBC();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v10, v13);
  }
  sub_1DC59A478(a1, (uint64_t)v7);
  if (v15(v7, 1, v13) == 1)
  {
    sub_1DC59A4BC(a1);
    result = sub_1DC59A4BC((uint64_t)v7);
    v19 = 0;
  }
  else
  {
    v19 = sub_1DC62AFA4();
    sub_1DC59A4BC(a1);
    result = (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v7, v13);
  }
  *a2 = v19 & 1;
  a2[1] = v16 & 1;
  a2[2] = v17 & 1;
  return result;
}

void sub_1DC59A424()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EDB12178)
  {
    sub_1DC62AFC8();
    v0 = sub_1DC62B25C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EDB12178);
  }
}

uint64_t sub_1DC59A478(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1DC59A424();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DC59A4BC(uint64_t a1)
{
  uint64_t v2;

  sub_1DC59A424();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void CalendarAccessData.calendarAccessStatus.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

_BYTE *CalendarAccessData.calendarAccessStatus.setter(_BYTE *result)
{
  _BYTE *v1;

  *v1 = *result;
  return result;
}

uint64_t (*CalendarAccessData.calendarAccessStatus.modify())()
{
  return nullsub_1;
}

StocksAnalytics::CalendarAccessData __swiftcall CalendarAccessData.init(calendarAccessStatus:)(StocksAnalytics::CalendarAccessData calendarAccessStatus)
{
  _BYTE *v1;

  *v1 = *(_BYTE *)calendarAccessStatus.calendarAccessStatus;
  return calendarAccessStatus;
}

unint64_t sub_1DC59A52C()
{
  return 0xD000000000000014;
}

uint64_t sub_1DC59A548@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1DC59AC1C(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1DC59A570()
{
  sub_1DC59A6C4();
  return sub_1DC62B604();
}

uint64_t sub_1DC59A598()
{
  sub_1DC59A6C4();
  return sub_1DC62B610();
}

uint64_t CalendarAccessData.encode(to:)(_QWORD *a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char v8;
  uint64_t v10;
  char v11;

  sub_1DC59A884(0, &qword_1F036DCC0, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v10 - v6;
  v8 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC59A6C4();
  sub_1DC62B5F8();
  v11 = v8;
  sub_1DC59A708();
  sub_1DC62B4E4();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_1DC59A6C4()
{
  unint64_t result;

  result = qword_1F036DCC8;
  if (!qword_1F036DCC8)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC63EE18, &type metadata for CalendarAccessData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036DCC8);
  }
  return result;
}

unint64_t sub_1DC59A708()
{
  unint64_t result;

  result = qword_1F036DCD0;
  if (!qword_1F036DCD0)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for CalendarAccessStatus, &type metadata for CalendarAccessStatus);
    atomic_store(result, (unint64_t *)&qword_1F036DCD0);
  }
  return result;
}

uint64_t CalendarAccessData.init(from:)@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v11;
  char v12;

  sub_1DC59A884(0, &qword_1F036DCD8, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v11 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC59A6C4();
  sub_1DC62B5E0();
  if (!v2)
  {
    sub_1DC59A8E0();
    sub_1DC62B454();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *a2 = v12;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1DC59A884(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1DC59A6C4();
    v7 = a3(a1, &type metadata for CalendarAccessData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1DC59A8E0()
{
  unint64_t result;

  result = qword_1F036DCE0;
  if (!qword_1F036DCE0)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for CalendarAccessStatus, &type metadata for CalendarAccessStatus);
    atomic_store(result, (unint64_t *)&qword_1F036DCE0);
  }
  return result;
}

unint64_t sub_1DC59A928()
{
  unint64_t result;

  result = qword_1F036DCE8;
  if (!qword_1F036DCE8)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for CalendarAccessData, &type metadata for CalendarAccessData);
    atomic_store(result, (unint64_t *)&qword_1F036DCE8);
  }
  return result;
}

unint64_t sub_1DC59A970()
{
  unint64_t result;

  result = qword_1F036DCF0;
  if (!qword_1F036DCF0)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for CalendarAccessData, &type metadata for CalendarAccessData);
    atomic_store(result, (unint64_t *)&qword_1F036DCF0);
  }
  return result;
}

uint64_t sub_1DC59A9B4@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return CalendarAccessData.init(from:)(a1, a2);
}

uint64_t sub_1DC59A9C8(_QWORD *a1)
{
  return CalendarAccessData.encode(to:)(a1);
}

uint64_t storeEnumTagSinglePayload for CalendarAccessData(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1DC59AA28 + 4 * byte_1DC63EC95[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1DC59AA5C + 4 * byte_1DC63EC90[v4]))();
}

uint64_t sub_1DC59AA5C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC59AA64(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DC59AA6CLL);
  return result;
}

uint64_t sub_1DC59AA78(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DC59AA80);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1DC59AA84(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC59AA8C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CalendarAccessData()
{
  return &type metadata for CalendarAccessData;
}

uint64_t storeEnumTagSinglePayload for CalendarAccessData.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1DC59AAE8 + 4 * byte_1DC63EC9A[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1DC59AB08 + 4 * byte_1DC63EC9F[v4]))();
}

_BYTE *sub_1DC59AAE8(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1DC59AB08(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1DC59AB10(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1DC59AB18(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1DC59AB20(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1DC59AB28(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for CalendarAccessData.CodingKeys()
{
  return &type metadata for CalendarAccessData.CodingKeys;
}

unint64_t sub_1DC59AB48()
{
  unint64_t result;

  result = qword_1F036DCF8;
  if (!qword_1F036DCF8)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC63EDF0, &type metadata for CalendarAccessData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036DCF8);
  }
  return result;
}

unint64_t sub_1DC59AB90()
{
  unint64_t result;

  result = qword_1F036DD00;
  if (!qword_1F036DD00)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC63ED60, &type metadata for CalendarAccessData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036DD00);
  }
  return result;
}

unint64_t sub_1DC59ABD8()
{
  unint64_t result;

  result = qword_1F036DD08;
  if (!qword_1F036DD08)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC63ED88, &type metadata for CalendarAccessData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036DD08);
  }
  return result;
}

uint64_t sub_1DC59AC1C(uint64_t a1, uint64_t a2)
{
  char v2;
  char v3;

  if (a1 == 0xD000000000000014 && a2 == 0x80000001DC64D220)
  {
    swift_bridgeObjectRelease();
    v2 = 0;
  }
  else
  {
    v3 = sub_1DC62B520();
    swift_bridgeObjectRelease();
    v2 = v3 ^ 1;
  }
  return v2 & 1;
}

uint64_t CustomItemData.identifier.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t CustomItemData.identifier.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*CustomItemData.identifier.modify())()
{
  return nullsub_1;
}

uint64_t CustomItemData.name.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t CustomItemData.name.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return result;
}

uint64_t (*CustomItemData.name.modify())()
{
  return nullsub_1;
}

StocksAnalytics::CustomItemData __swiftcall CustomItemData.init(identifier:name:)(Swift::String identifier, Swift::String name)
{
  Swift::String *v2;
  StocksAnalytics::CustomItemData result;

  *v2 = identifier;
  v2[1] = name;
  result.name = name;
  result.identifier = identifier;
  return result;
}

uint64_t sub_1DC59AD8C()
{
  _BYTE *v0;

  if (*v0)
    return 1701667182;
  else
    return 0x696669746E656469;
}

uint64_t sub_1DC59ADC4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1DC59B4D0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DC59ADE8()
{
  sub_1DC59AF6C();
  return sub_1DC62B604();
}

uint64_t sub_1DC59AE10()
{
  sub_1DC59AF6C();
  return sub_1DC62B610();
}

uint64_t CustomItemData.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v11[4];
  char v12;
  char v13;

  sub_1DC59B158(0, &qword_1F036DD10, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)v11 - v6;
  v8 = *(_QWORD *)(v1 + 16);
  v11[1] = *(_QWORD *)(v1 + 24);
  v11[2] = v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC59AF6C();
  sub_1DC62B5F8();
  v13 = 0;
  v9 = v11[3];
  sub_1DC62B4B4();
  if (!v9)
  {
    v12 = 1;
    sub_1DC62B4B4();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_1DC59AF6C()
{
  unint64_t result;

  result = qword_1F036DD18;
  if (!qword_1F036DD18)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC63EFE0, &type metadata for CustomItemData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036DD18);
  }
  return result;
}

uint64_t CustomItemData.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(char *, uint64_t);
  uint64_t v17;
  uint64_t v19;
  char v20;
  char v21;

  sub_1DC59B158(0, &qword_1F036DD20, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v19 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC59AF6C();
  sub_1DC62B5E0();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v21 = 0;
  v10 = sub_1DC62B424();
  v12 = v11;
  v20 = 1;
  swift_bridgeObjectRetain();
  v13 = sub_1DC62B424();
  v15 = v14;
  v16 = *(void (**)(char *, uint64_t))(v7 + 8);
  v17 = v13;
  v16(v9, v6);
  *a2 = v10;
  a2[1] = v12;
  a2[2] = v17;
  a2[3] = v15;
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void sub_1DC59B158(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1DC59AF6C();
    v7 = a3(a1, &type metadata for CustomItemData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1DC59B1BC@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return CustomItemData.init(from:)(a1, a2);
}

uint64_t sub_1DC59B1D0(_QWORD *a1)
{
  return CustomItemData.encode(to:)(a1);
}

_QWORD *assignWithCopy for CustomItemData(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *assignWithTake for CustomItemData(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for CustomItemData(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 32))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CustomItemData(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 32) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for CustomItemData()
{
  return &type metadata for CustomItemData;
}

uint64_t storeEnumTagSinglePayload for CustomItemData.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1DC59B378 + 4 * byte_1DC63EE6D[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1DC59B3AC + 4 * byte_1DC63EE68[v4]))();
}

uint64_t sub_1DC59B3AC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC59B3B4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DC59B3BCLL);
  return result;
}

uint64_t sub_1DC59B3C8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DC59B3D0);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1DC59B3D4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC59B3DC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CustomItemData.CodingKeys()
{
  return &type metadata for CustomItemData.CodingKeys;
}

unint64_t sub_1DC59B3FC()
{
  unint64_t result;

  result = qword_1F036DD28;
  if (!qword_1F036DD28)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC63EFB8, &type metadata for CustomItemData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036DD28);
  }
  return result;
}

unint64_t sub_1DC59B444()
{
  unint64_t result;

  result = qword_1F036DD30;
  if (!qword_1F036DD30)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC63EF28, &type metadata for CustomItemData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036DD30);
  }
  return result;
}

unint64_t sub_1DC59B48C()
{
  unint64_t result;

  result = qword_1F036DD38;
  if (!qword_1F036DD38)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC63EF50, &type metadata for CustomItemData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036DD38);
  }
  return result;
}

uint64_t sub_1DC59B4D0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
  if (v2 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1701667182 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1DC62B520();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1DC59B5BC(uint64_t a1)
{
  return sub_1DC4BE784(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], qword_1EDB100A8, MEMORY[0x1E0CF8078]);
}

uint64_t static SymbolExposureEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C2FE8(&qword_1EDB100C0, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1EDB100A8, a1);
}

uint64_t sub_1DC59B5FC(uint64_t a1)
{
  return sub_1DC4BE784(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], qword_1EDB100C8, MEMORY[0x1E0CF8380]);
}

uint64_t static SymbolExposureEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C2FE8(&qword_1EDB100E0, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1EDB100C8, a1);
}

uint64_t SymbolExposureEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C37DC((uint64_t (*)(_QWORD))sub_1DC4B6600, a1);
}

uint64_t SymbolExposureEvent.eventData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  sub_1DC4B6600();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*SymbolExposureEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t SymbolExposureEvent.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C382C(type metadata accessor for SymbolExposureEvent, (uint64_t (*)(_QWORD))sub_1DC4B66A4, a1);
}

uint64_t type metadata accessor for SymbolExposureEvent(uint64_t a1)
{
  return sub_1DC4B385C(a1, qword_1EDB100E8);
}

uint64_t SymbolExposureEvent.timedData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SymbolExposureEvent(0) + 20);
  sub_1DC4B66A4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*SymbolExposureEvent.timedData.modify())()
{
  type metadata accessor for SymbolExposureEvent(0);
  return nullsub_1;
}

uint64_t SymbolExposureEvent.symbolPositionData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SymbolExposureEvent(0) + 24);
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E7D0, (void (*)(void))sub_1DC510CA0, (void (*)(void))sub_1DC510CE4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t SymbolExposureEvent.symbolPositionData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SymbolExposureEvent(0) + 24);
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E7D0, (void (*)(void))sub_1DC510CA0, (void (*)(void))sub_1DC510CE4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*SymbolExposureEvent.symbolPositionData.modify())()
{
  type metadata accessor for SymbolExposureEvent(0);
  return nullsub_1;
}

uint64_t SymbolExposureEvent.symbolData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SymbolExposureEvent(0) + 28);
  sub_1DC4B4B50(0, &qword_1EDB0E750, (void (*)(void))sub_1DC4C3328, (void (*)(void))sub_1DC4C336C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t SymbolExposureEvent.symbolData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SymbolExposureEvent(0) + 28);
  sub_1DC4B4B50(0, &qword_1EDB0E750, (void (*)(void))sub_1DC4C3328, (void (*)(void))sub_1DC4C336C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*SymbolExposureEvent.symbolData.modify())()
{
  type metadata accessor for SymbolExposureEvent(0);
  return nullsub_1;
}

uint64_t SymbolExposureEvent.activeWatchlistData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SymbolExposureEvent(0) + 32);
  sub_1DC4B4B50(0, &qword_1EDB0E790, (void (*)(void))sub_1DC4C9930, (void (*)(void))sub_1DC4C9974);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t SymbolExposureEvent.activeWatchlistData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SymbolExposureEvent(0) + 32);
  sub_1DC4B4B50(0, &qword_1EDB0E790, (void (*)(void))sub_1DC4C9930, (void (*)(void))sub_1DC4C9974);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*SymbolExposureEvent.activeWatchlistData.modify())()
{
  type metadata accessor for SymbolExposureEvent(0);
  return nullsub_1;
}

uint64_t SymbolExposureEvent.symbolPriceData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SymbolExposureEvent(0) + 36);
  sub_1DC4B4B50(0, &qword_1EDB0E268, (void (*)(void))sub_1DC59BA78, (void (*)(void))sub_1DC59BABC);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

unint64_t sub_1DC59BA78()
{
  unint64_t result;

  result = qword_1EDB0F488;
  if (!qword_1EDB0F488)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for SymbolPriceData, &type metadata for SymbolPriceData);
    atomic_store(result, (unint64_t *)&qword_1EDB0F488);
  }
  return result;
}

unint64_t sub_1DC59BABC()
{
  unint64_t result;

  result = qword_1EDB0F480;
  if (!qword_1EDB0F480)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for SymbolPriceData, &type metadata for SymbolPriceData);
    atomic_store(result, (unint64_t *)&qword_1EDB0F480);
  }
  return result;
}

uint64_t SymbolExposureEvent.symbolPriceData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SymbolExposureEvent(0) + 36);
  sub_1DC4B4B50(0, &qword_1EDB0E268, (void (*)(void))sub_1DC59BA78, (void (*)(void))sub_1DC59BABC);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*SymbolExposureEvent.symbolPriceData.modify())()
{
  type metadata accessor for SymbolExposureEvent(0);
  return nullsub_1;
}

uint64_t SymbolExposureEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v2 = *MEMORY[0x1E0CF8128];
  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
  v4 = (int *)type metadata accessor for SymbolExposureEvent(0);
  v5 = a1 + v4[5];
  sub_1DC4B66A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 104))(v5, v2, v6);
  v7 = a1 + v4[6];
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E7D0, (void (*)(void))sub_1DC510CA0, (void (*)(void))sub_1DC510CE4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 104))(v7, v2, v8);
  v9 = a1 + v4[7];
  sub_1DC4B4B50(0, &qword_1EDB0E750, (void (*)(void))sub_1DC4C3328, (void (*)(void))sub_1DC4C336C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 104))(v9, v2, v10);
  v11 = a1 + v4[8];
  sub_1DC4B4B50(0, &qword_1EDB0E790, (void (*)(void))sub_1DC4C9930, (void (*)(void))sub_1DC4C9974);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 104))(v11, v2, v12);
  v13 = a1 + v4[9];
  sub_1DC4B4B50(0, &qword_1EDB0E268, (void (*)(void))sub_1DC59BA78, (void (*)(void))sub_1DC59BABC);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 104))(v13, v2, v14);
}

uint64_t SymbolExposureEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C37DC((uint64_t (*)(_QWORD))MEMORY[0x1E0CF8670], a1);
}

uint64_t SymbolExposureEvent.Model.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C382C(type metadata accessor for SymbolExposureEvent.Model, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF86C0], a1);
}

uint64_t type metadata accessor for SymbolExposureEvent.Model(uint64_t a1)
{
  return sub_1DC4B385C(a1, qword_1F036DDB0);
}

uint64_t SymbolExposureEvent.Model.symbolPositionData.getter@<X0>(_DWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for SymbolExposureEvent.Model(0);
  *a1 = *(_DWORD *)(v1 + *(int *)(result + 24));
  return result;
}

uint64_t SymbolExposureEvent.Model.symbolData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;

  v3 = v1 + *(int *)(type metadata accessor for SymbolExposureEvent.Model(0) + 28);
  v4 = *(_QWORD *)(v3 + 8);
  v5 = *(_BYTE *)(v3 + 16);
  v6 = *(_QWORD *)(v3 + 24);
  v7 = *(_QWORD *)(v3 + 32);
  *(_QWORD *)a1 = *(_QWORD *)v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t SymbolExposureEvent.Model.activeWatchlistData.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for SymbolExposureEvent.Model(0);
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 32));
  return result;
}

double SymbolExposureEvent.Model.symbolPriceData.getter@<D0>(double *a1@<X8>)
{
  uint64_t v1;
  double result;

  result = *(double *)(v1 + *(int *)(type metadata accessor for SymbolExposureEvent.Model(0) + 36));
  *a1 = result;
  return result;
}

uint64_t SymbolExposureEvent.Model.init(eventData:timedData:symbolPositionData:symbolData:activeWatchlistData:symbolPriceData:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int *a3@<X2>, uint64_t *a4@<X3>, char *a5@<X4>, uint64_t *a6@<X5>, uint64_t a7@<X8>)
{
  int v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;
  uint64_t v23;
  char v24;

  v11 = *a3;
  v12 = *a4;
  v13 = a4[1];
  v14 = *((_BYTE *)a4 + 16);
  v15 = a4[3];
  v16 = a4[4];
  v24 = *a5;
  v17 = sub_1DC62ABA8();
  v18 = *a6;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(a7, a1, v17);
  v19 = (int *)type metadata accessor for SymbolExposureEvent.Model(0);
  v20 = a7 + v19[5];
  v21 = sub_1DC62ABC0();
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(v20, a2, v21);
  *(_DWORD *)(a7 + v19[6]) = v11;
  v23 = a7 + v19[7];
  *(_QWORD *)v23 = v12;
  *(_QWORD *)(v23 + 8) = v13;
  *(_BYTE *)(v23 + 16) = v14;
  *(_QWORD *)(v23 + 24) = v15;
  *(_QWORD *)(v23 + 32) = v16;
  *(_BYTE *)(a7 + v19[8]) = v24;
  *(_QWORD *)(a7 + v19[9]) = v18;
  return result;
}

uint64_t sub_1DC59BF38(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1DC59BF70 + 4 * byte_1DC63F030[a1]))(0x746144746E657665, 0xE900000000000061);
}

uint64_t sub_1DC59BF70()
{
  return 0x74614464656D6974;
}

unint64_t sub_1DC59BF84()
{
  return 0xD000000000000012;
}

uint64_t sub_1DC59BFA0()
{
  return 0x61446C6F626D7973;
}

unint64_t sub_1DC59BFBC()
{
  return 0xD000000000000013;
}

uint64_t sub_1DC59BFDC()
{
  return 0x72506C6F626D7973;
}

uint64_t sub_1DC59C000()
{
  unsigned __int8 *v0;

  return sub_1DC59BF38(*v0);
}

uint64_t sub_1DC59C008@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1DC59E280(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DC59C02C()
{
  sub_1DC59C330();
  return sub_1DC62B604();
}

uint64_t sub_1DC59C054()
{
  sub_1DC59C330();
  return sub_1DC62B610();
}

uint64_t SymbolExposureEvent.Model.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int *v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD v18[2];
  char v19;
  uint64_t v20;
  uint64_t v21;
  char v22;

  v3 = v1;
  sub_1DC59C838(0, &qword_1F036DD40, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)v18 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC59C330();
  sub_1DC62B5F8();
  LOBYTE(v18[0]) = 0;
  sub_1DC62ABA8();
  sub_1DC4B6748(&qword_1EDB0E8A8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF8670], MEMORY[0x1E0CF8680]);
  sub_1DC62B4E4();
  if (!v2)
  {
    v10 = (int *)type metadata accessor for SymbolExposureEvent.Model(0);
    LOBYTE(v18[0]) = 1;
    sub_1DC62ABC0();
    sub_1DC4B6748(&qword_1EDB0E8B8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF86C0], MEMORY[0x1E0CF86D0]);
    sub_1DC62B4E4();
    LODWORD(v18[0]) = *(_DWORD *)(v3 + v10[6]);
    v22 = 2;
    sub_1DC510CE4();
    sub_1DC62B4E4();
    v11 = (uint64_t *)(v3 + v10[7]);
    v12 = *v11;
    v13 = v11[1];
    v14 = *((_BYTE *)v11 + 16);
    v16 = v11[3];
    v15 = v11[4];
    v18[0] = v12;
    v18[1] = v13;
    v19 = v14;
    v20 = v16;
    v21 = v15;
    v22 = 3;
    sub_1DC4C336C();
    sub_1DC62B4E4();
    LOBYTE(v18[0]) = *(_BYTE *)(v3 + v10[8]);
    v22 = 4;
    sub_1DC4C9974();
    sub_1DC62B4E4();
    v18[0] = *(_QWORD *)(v3 + v10[9]);
    v22 = 5;
    sub_1DC59BABC();
    sub_1DC62B4E4();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1DC59C330()
{
  unint64_t result;

  result = qword_1F036DD48;
  if (!qword_1F036DD48)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC63F25C, &type metadata for SymbolExposureEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036DD48);
  }
  return result;
}

uint64_t SymbolExposureEvent.Model.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  int *v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  int *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  char v42;

  v28 = a2;
  v3 = sub_1DC62ABC0();
  v30 = *(_QWORD *)(v3 - 8);
  v31 = v3;
  MEMORY[0x1E0C80A78](v3);
  v29 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = sub_1DC62ABA8();
  v5 = *(_QWORD *)(v32 - 8);
  MEMORY[0x1E0C80A78](v32);
  v34 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC59C838(0, &qword_1F036DD50, MEMORY[0x1E0DED048]);
  v33 = v7;
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v26 - v9;
  v11 = type metadata accessor for SymbolExposureEvent.Model(0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC59C330();
  v35 = v10;
  v14 = (uint64_t)v36;
  sub_1DC62B5E0();
  if (v14)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v26 = (int *)v11;
  v27 = v8;
  v36 = a1;
  v15 = v30;
  v16 = v31;
  LOBYTE(v37) = 0;
  sub_1DC4B6748(&qword_1EDB0E278, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF8670], MEMORY[0x1E0CF8688]);
  v17 = v32;
  sub_1DC62B454();
  (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v13, v34, v17);
  LOBYTE(v37) = 1;
  sub_1DC4B6748(&qword_1EDB0E8C0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF86C0], MEMORY[0x1E0CF86D8]);
  v18 = v29;
  sub_1DC62B454();
  v19 = v26;
  (*(void (**)(char *, char *, uint64_t))(v15 + 32))(&v13[v26[5]], v18, v16);
  v42 = 2;
  sub_1DC510CA0();
  sub_1DC62B454();
  *(_DWORD *)&v13[v19[6]] = v37;
  v42 = 3;
  sub_1DC4C3328();
  sub_1DC62B454();
  v20 = v38;
  v21 = v39;
  v22 = v40;
  v23 = v41;
  v24 = &v13[v19[7]];
  *(_QWORD *)v24 = v37;
  *((_QWORD *)v24 + 1) = v20;
  v24[16] = v21;
  *((_QWORD *)v24 + 3) = v22;
  *((_QWORD *)v24 + 4) = v23;
  v42 = 4;
  sub_1DC4C9930();
  sub_1DC62B454();
  v13[v19[8]] = v37;
  v42 = 5;
  sub_1DC59BA78();
  sub_1DC62B454();
  (*(void (**)(char *, uint64_t))(v27 + 8))(v35, v33);
  *(_QWORD *)&v13[v19[9]] = v37;
  sub_1DC59C894((uint64_t)v13, v28);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v36);
  return sub_1DC59C8D8((uint64_t)v13);
}

void sub_1DC59C838(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1DC59C330();
    v7 = a3(a1, &type metadata for SymbolExposureEvent.Model.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1DC59C894(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SymbolExposureEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DC59C8D8(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for SymbolExposureEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1DC59C914@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return SymbolExposureEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_1DC59C928(_QWORD *a1)
{
  return SymbolExposureEvent.Model.encode(to:)(a1);
}

uint64_t sub_1DC59C93C@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4B2C68(&qword_1EDB100C0, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1EDB100A8, a1);
}

uint64_t sub_1DC59C960@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4B2C68(&qword_1EDB100E0, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1EDB100C8, a1);
}

uint64_t sub_1DC59C984@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v4 = *MEMORY[0x1E0CF8128];
  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 104))(a2, v4, v5);
  v6 = a2 + a1[5];
  sub_1DC4B66A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 104))(v6, v4, v7);
  v8 = a2 + a1[6];
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E7D0, (void (*)(void))sub_1DC510CA0, (void (*)(void))sub_1DC510CE4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 104))(v8, v4, v9);
  v10 = a2 + a1[7];
  sub_1DC4B4B50(0, &qword_1EDB0E750, (void (*)(void))sub_1DC4C3328, (void (*)(void))sub_1DC4C336C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 104))(v10, v4, v11);
  v12 = a2 + a1[8];
  sub_1DC4B4B50(0, &qword_1EDB0E790, (void (*)(void))sub_1DC4C9930, (void (*)(void))sub_1DC4C9974);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 104))(v12, v4, v13);
  v14 = a2 + a1[9];
  sub_1DC4B4B50(0, &qword_1EDB0E268, (void (*)(void))sub_1DC59BA78, (void (*)(void))sub_1DC59BABC);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 104))(v14, v4, v15);
}

uint64_t *initializeBufferWithCopyOfBuffer for SymbolExposureEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v28 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v28 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_1DC4B6600();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    sub_1DC4B66A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = a3[6];
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E7D0, (void (*)(void))sub_1DC510CA0, (void (*)(void))sub_1DC510CE4);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
    v16 = a3[7];
    v17 = (char *)a1 + v16;
    v18 = (char *)a2 + v16;
    sub_1DC4B4B50(0, &qword_1EDB0E750, (void (*)(void))sub_1DC4C3328, (void (*)(void))sub_1DC4C336C);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
    v20 = a3[8];
    v21 = (char *)a1 + v20;
    v22 = (char *)a2 + v20;
    sub_1DC4B4B50(0, &qword_1EDB0E790, (void (*)(void))sub_1DC4C9930, (void (*)(void))sub_1DC4C9974);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v21, v22, v23);
    v24 = a3[9];
    v25 = (char *)a1 + v24;
    v26 = (char *)a2 + v24;
    sub_1DC4B4B50(0, &qword_1EDB0E268, (void (*)(void))sub_1DC59BA78, (void (*)(void))sub_1DC59BABC);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v25, v26, v27);
  }
  return a1;
}

uint64_t destroy for SymbolExposureEvent(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + a2[5];
  sub_1DC4B66A4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = a1 + a2[6];
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E7D0, (void (*)(void))sub_1DC510CA0, (void (*)(void))sub_1DC510CE4);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  v9 = a1 + a2[7];
  sub_1DC4B4B50(0, &qword_1EDB0E750, (void (*)(void))sub_1DC4C3328, (void (*)(void))sub_1DC4C336C);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  v11 = a1 + a2[8];
  sub_1DC4B4B50(0, &qword_1EDB0E790, (void (*)(void))sub_1DC4C9930, (void (*)(void))sub_1DC4C9974);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
  v13 = a1 + a2[9];
  sub_1DC4B4B50(0, &qword_1EDB0E268, (void (*)(void))sub_1DC59BA78, (void (*)(void))sub_1DC59BABC);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v13, v14);
}

uint64_t initializeWithCopy for SymbolExposureEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1DC4B66A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E7D0, (void (*)(void))sub_1DC510CA0, (void (*)(void))sub_1DC510CE4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1DC4B4B50(0, &qword_1EDB0E750, (void (*)(void))sub_1DC4C3328, (void (*)(void))sub_1DC4C336C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1DC4B4B50(0, &qword_1EDB0E790, (void (*)(void))sub_1DC4C9930, (void (*)(void))sub_1DC4C9974);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1DC4B4B50(0, &qword_1EDB0E268, (void (*)(void))sub_1DC59BA78, (void (*)(void))sub_1DC59BABC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v24, v25, v26);
  return a1;
}

uint64_t assignWithCopy for SymbolExposureEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1DC4B66A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E7D0, (void (*)(void))sub_1DC510CA0, (void (*)(void))sub_1DC510CE4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 24))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1DC4B4B50(0, &qword_1EDB0E750, (void (*)(void))sub_1DC4C3328, (void (*)(void))sub_1DC4C336C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 24))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1DC4B4B50(0, &qword_1EDB0E790, (void (*)(void))sub_1DC4C9930, (void (*)(void))sub_1DC4C9974);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 24))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1DC4B4B50(0, &qword_1EDB0E268, (void (*)(void))sub_1DC59BA78, (void (*)(void))sub_1DC59BABC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 24))(v24, v25, v26);
  return a1;
}

uint64_t initializeWithTake for SymbolExposureEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1DC4B66A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E7D0, (void (*)(void))sub_1DC510CA0, (void (*)(void))sub_1DC510CE4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1DC4B4B50(0, &qword_1EDB0E750, (void (*)(void))sub_1DC4C3328, (void (*)(void))sub_1DC4C336C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1DC4B4B50(0, &qword_1EDB0E790, (void (*)(void))sub_1DC4C9930, (void (*)(void))sub_1DC4C9974);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1DC4B4B50(0, &qword_1EDB0E268, (void (*)(void))sub_1DC59BA78, (void (*)(void))sub_1DC59BABC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(v24, v25, v26);
  return a1;
}

uint64_t assignWithTake for SymbolExposureEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1DC4B66A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E7D0, (void (*)(void))sub_1DC510CA0, (void (*)(void))sub_1DC510CE4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 40))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1DC4B4B50(0, &qword_1EDB0E750, (void (*)(void))sub_1DC4C3328, (void (*)(void))sub_1DC4C336C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 40))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1DC4B4B50(0, &qword_1EDB0E790, (void (*)(void))sub_1DC4C9930, (void (*)(void))sub_1DC4C9974);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 40))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1DC4B4B50(0, &qword_1EDB0E268, (void (*)(void))sub_1DC59BA78, (void (*)(void))sub_1DC59BABC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 40))(v24, v25, v26);
  return a1;
}

uint64_t getEnumTagSinglePayload for SymbolExposureEvent()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC59D54C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  sub_1DC4B6600();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    sub_1DC4B66A4();
    v12 = *(_QWORD *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
    {
      v8 = v11;
      v13 = a3[5];
    }
    else
    {
      sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E7D0, (void (*)(void))sub_1DC510CA0, (void (*)(void))sub_1DC510CE4);
      v12 = *(_QWORD *)(v14 - 8);
      if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
      {
        v8 = v14;
        v13 = a3[6];
      }
      else
      {
        sub_1DC4B4B50(0, &qword_1EDB0E750, (void (*)(void))sub_1DC4C3328, (void (*)(void))sub_1DC4C336C);
        v12 = *(_QWORD *)(v15 - 8);
        if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
        {
          v8 = v15;
          v13 = a3[7];
        }
        else
        {
          sub_1DC4B4B50(0, &qword_1EDB0E790, (void (*)(void))sub_1DC4C9930, (void (*)(void))sub_1DC4C9974);
          v12 = *(_QWORD *)(v16 - 8);
          if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
          {
            v8 = v16;
            v13 = a3[8];
          }
          else
          {
            sub_1DC4B4B50(0, &qword_1EDB0E268, (void (*)(void))sub_1DC59BA78, (void (*)(void))sub_1DC59BABC);
            v8 = v17;
            v12 = *(_QWORD *)(v17 - 8);
            v13 = a3[9];
          }
        }
      }
    }
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t storeEnumTagSinglePayload for SymbolExposureEvent()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC59D6DC(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  sub_1DC4B6600();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    sub_1DC4B66A4();
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = a4[5];
    }
    else
    {
      sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E7D0, (void (*)(void))sub_1DC510CA0, (void (*)(void))sub_1DC510CE4);
      v14 = *(_QWORD *)(v16 - 8);
      if (*(_DWORD *)(v14 + 84) == a3)
      {
        v10 = v16;
        v15 = a4[6];
      }
      else
      {
        sub_1DC4B4B50(0, &qword_1EDB0E750, (void (*)(void))sub_1DC4C3328, (void (*)(void))sub_1DC4C336C);
        v14 = *(_QWORD *)(v17 - 8);
        if (*(_DWORD *)(v14 + 84) == a3)
        {
          v10 = v17;
          v15 = a4[7];
        }
        else
        {
          sub_1DC4B4B50(0, &qword_1EDB0E790, (void (*)(void))sub_1DC4C9930, (void (*)(void))sub_1DC4C9974);
          v14 = *(_QWORD *)(v18 - 8);
          if (*(_DWORD *)(v14 + 84) == a3)
          {
            v10 = v18;
            v15 = a4[8];
          }
          else
          {
            sub_1DC4B4B50(0, &qword_1EDB0E268, (void (*)(void))sub_1DC59BA78, (void (*)(void))sub_1DC59BABC);
            v10 = v19;
            v14 = *(_QWORD *)(v19 - 8);
            v15 = a4[9];
          }
        }
      }
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_1DC59D868()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;

  sub_1DC4B6600();
  if (v0 <= 0x3F)
  {
    sub_1DC4B66A4();
    if (v1 <= 0x3F)
    {
      sub_1DC4B4B50(319, (unint64_t *)&qword_1EDB0E7D0, (void (*)(void))sub_1DC510CA0, (void (*)(void))sub_1DC510CE4);
      if (v2 <= 0x3F)
      {
        sub_1DC4B4B50(319, &qword_1EDB0E750, (void (*)(void))sub_1DC4C3328, (void (*)(void))sub_1DC4C336C);
        if (v3 <= 0x3F)
        {
          sub_1DC4B4B50(319, &qword_1EDB0E790, (void (*)(void))sub_1DC4C9930, (void (*)(void))sub_1DC4C9974);
          if (v4 <= 0x3F)
          {
            sub_1DC4B4B50(319, &qword_1EDB0E268, (void (*)(void))sub_1DC59BA78, (void (*)(void))sub_1DC59BABC);
            if (v5 <= 0x3F)
              swift_initStructMetadata();
          }
        }
      }
    }
  }
}

_QWORD *initializeBufferWithCopyOfBuffer for SymbolExposureEvent.Model(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v18 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1DC62ABA8();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_1DC62ABC0();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = a3[7];
    *(_DWORD *)((char *)a1 + a3[6]) = *(_DWORD *)((char *)a2 + a3[6]);
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    v15 = *((_QWORD *)v14 + 1);
    *(_QWORD *)v13 = *(_QWORD *)v14;
    *((_QWORD *)v13 + 1) = v15;
    v13[16] = v14[16];
    v16 = *((_QWORD *)v14 + 4);
    *((_QWORD *)v13 + 3) = *((_QWORD *)v14 + 3);
    *((_QWORD *)v13 + 4) = v16;
    v17 = a3[9];
    *((_BYTE *)a1 + a3[8]) = *((_BYTE *)a2 + a3[8]);
    *(_QWORD *)((char *)a1 + v17) = *(_QWORD *)((char *)a2 + v17);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for SymbolExposureEvent.Model(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + *(int *)(a2 + 20);
  v6 = sub_1DC62ABC0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for SymbolExposureEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v6 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1DC62ABC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = a3[7];
  *(_DWORD *)(a1 + a3[6]) = *(_DWORD *)(a2 + a3[6]);
  v12 = a1 + v11;
  v13 = a2 + v11;
  v14 = *(_QWORD *)(v13 + 8);
  *(_QWORD *)v12 = *(_QWORD *)v13;
  *(_QWORD *)(v12 + 8) = v14;
  *(_BYTE *)(v12 + 16) = *(_BYTE *)(v13 + 16);
  v15 = *(_QWORD *)(v13 + 32);
  *(_QWORD *)(v12 + 24) = *(_QWORD *)(v13 + 24);
  *(_QWORD *)(v12 + 32) = v15;
  v16 = a3[9];
  *(_BYTE *)(a1 + a3[8]) = *(_BYTE *)(a2 + a3[8]);
  *(_QWORD *)(a1 + v16) = *(_QWORD *)(a2 + v16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for SymbolExposureEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _DWORD *v15;
  _DWORD *v16;

  v6 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1DC62ABC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  *(_DWORD *)(a1 + a3[6]) = *(_DWORD *)(a2 + a3[6]);
  v11 = a3[7];
  v12 = a1 + v11;
  v13 = a2 + v11;
  *(_QWORD *)v12 = *(_QWORD *)(a2 + v11);
  *(_QWORD *)(v12 + 8) = *(_QWORD *)(a2 + v11 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v12 + 16) = *(_BYTE *)(v13 + 16);
  *(_QWORD *)(v12 + 24) = *(_QWORD *)(v13 + 24);
  *(_QWORD *)(v12 + 32) = *(_QWORD *)(v13 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + a3[8]) = *(_BYTE *)(a2 + a3[8]);
  v14 = a3[9];
  v15 = (_DWORD *)(a1 + v14);
  v16 = (_DWORD *)(a2 + v14);
  *v15 = *v16;
  v15[1] = v16[1];
  return a1;
}

uint64_t initializeWithTake for SymbolExposureEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  uint64_t v15;

  v6 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1DC62ABC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[7];
  *(_DWORD *)(a1 + a3[6]) = *(_DWORD *)(a2 + a3[6]);
  v12 = a1 + v11;
  v13 = a2 + v11;
  v14 = *(_OWORD *)(v13 + 16);
  *(_OWORD *)v12 = *(_OWORD *)v13;
  *(_OWORD *)(v12 + 16) = v14;
  *(_QWORD *)(v12 + 32) = *(_QWORD *)(v13 + 32);
  v15 = a3[9];
  *(_BYTE *)(a1 + a3[8]) = *(_BYTE *)(a2 + a3[8]);
  *(_QWORD *)(a1 + v15) = *(_QWORD *)(a2 + v15);
  return a1;
}

uint64_t assignWithTake for SymbolExposureEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v6 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1DC62ABC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[7];
  *(_DWORD *)(a1 + a3[6]) = *(_DWORD *)(a2 + a3[6]);
  v12 = a1 + v11;
  v13 = a2 + v11;
  v14 = *(_QWORD *)(a2 + v11);
  v15 = *(_QWORD *)(a2 + v11 + 8);
  *(_QWORD *)v12 = v14;
  *(_QWORD *)(v12 + 8) = v15;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v12 + 16) = *(_BYTE *)(v13 + 16);
  v16 = *(_QWORD *)(v13 + 32);
  *(_QWORD *)(v12 + 24) = *(_QWORD *)(v13 + 24);
  *(_QWORD *)(v12 + 32) = v16;
  swift_bridgeObjectRelease();
  v17 = a3[9];
  *(_BYTE *)(a1 + a3[8]) = *(_BYTE *)(a2 + a3[8]);
  *(_QWORD *)(a1 + v17) = *(_QWORD *)(a2 + v17);
  return a1;
}

uint64_t getEnumTagSinglePayload for SymbolExposureEvent.Model()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC59DECC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v14;

  v6 = sub_1DC62ABA8();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  v11 = sub_1DC62ABC0();
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  v14 = *(_QWORD *)(a1 + *(int *)(a3 + 28) + 8);
  if (v14 >= 0xFFFFFFFF)
    LODWORD(v14) = -1;
  return (v14 + 1);
}

uint64_t storeEnumTagSinglePayload for SymbolExposureEvent.Model()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC59DF84(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t result;
  uint64_t v14;

  v8 = sub_1DC62ABA8();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
    return v11(v12, a2, a2, v10);
  }
  result = sub_1DC62ABC0();
  v14 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = result;
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    return v11(v12, a2, a2, v10);
  }
  *(_QWORD *)(a1 + *(int *)(a4 + 28) + 8) = (a2 - 1);
  return result;
}

uint64_t sub_1DC59E02C()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_1DC62ABA8();
  if (v1 <= 0x3F)
  {
    result = sub_1DC62ABC0();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for SymbolExposureEvent.Model.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_1DC59E128 + 4 * byte_1DC63F03B[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_1DC59E15C + 4 * byte_1DC63F036[v4]))();
}

uint64_t sub_1DC59E15C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC59E164(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DC59E16CLL);
  return result;
}

uint64_t sub_1DC59E178(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DC59E180);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_1DC59E184(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC59E18C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SymbolExposureEvent.Model.CodingKeys()
{
  return &type metadata for SymbolExposureEvent.Model.CodingKeys;
}

unint64_t sub_1DC59E1AC()
{
  unint64_t result;

  result = qword_1F036DDF8;
  if (!qword_1F036DDF8)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC63F234, &type metadata for SymbolExposureEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036DDF8);
  }
  return result;
}

unint64_t sub_1DC59E1F4()
{
  unint64_t result;

  result = qword_1F036DE00;
  if (!qword_1F036DE00)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC63F1A4, &type metadata for SymbolExposureEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036DE00);
  }
  return result;
}

unint64_t sub_1DC59E23C()
{
  unint64_t result;

  result = qword_1F036DE08;
  if (!qword_1F036DE08)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC63F1CC, &type metadata for SymbolExposureEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036DE08);
  }
  return result;
}

uint64_t sub_1DC59E280(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x746144746E657665 && a2 == 0xE900000000000061;
  if (v2 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x74614464656D6974 && a2 == 0xE900000000000061 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000001DC64D240 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x61446C6F626D7973 && a2 == 0xEA00000000006174 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001DC64BFB0 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x72506C6F626D7973 && a2 == 0xEF61746144656369)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    v6 = sub_1DC62B520();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 5;
    else
      return 6;
  }
}

uint64_t sub_1DC59E534(uint64_t a1)
{
  return sub_1DC4BE784(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], qword_1F036DE10, MEMORY[0x1E0CF8078]);
}

uint64_t static ChangeSymbolPerfMetricEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C2FE8(&qword_1F0369110, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1F036DE10, a1);
}

uint64_t sub_1DC59E574(uint64_t a1)
{
  return sub_1DC4BE784(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], qword_1F036DE28, MEMORY[0x1E0CF8380]);
}

uint64_t static ChangeSymbolPerfMetricEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C2FE8(&qword_1F0369118, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1F036DE28, a1);
}

uint64_t ChangeSymbolPerfMetricEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C37DC((uint64_t (*)(_QWORD))sub_1DC4B6600, a1);
}

uint64_t ChangeSymbolPerfMetricEvent.eventData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  sub_1DC4B6600();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*ChangeSymbolPerfMetricEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t ChangeSymbolPerfMetricEvent.symbolPerfData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ChangeSymbolPerfMetricEvent(0) + 20);
  sub_1DC59E664();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t type metadata accessor for ChangeSymbolPerfMetricEvent(uint64_t a1)
{
  return sub_1DC4B385C(a1, qword_1F036DEB0);
}

void sub_1DC59E664()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EDB0E7A8)
  {
    sub_1DC4C01A4();
    sub_1DC4C01E8();
    v0 = sub_1DC62A80C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EDB0E7A8);
  }
}

uint64_t ChangeSymbolPerfMetricEvent.symbolPerfData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ChangeSymbolPerfMetricEvent(0) + 20);
  sub_1DC59E664();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*ChangeSymbolPerfMetricEvent.symbolPerfData.modify())()
{
  type metadata accessor for ChangeSymbolPerfMetricEvent(0);
  return nullsub_1;
}

uint64_t ChangeSymbolPerfMetricEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *MEMORY[0x1E0CF8128];
  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
  v4 = a1 + *(int *)(type metadata accessor for ChangeSymbolPerfMetricEvent(0) + 20);
  sub_1DC59E664();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 104))(v4, v2, v5);
}

uint64_t ChangeSymbolPerfMetricEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C37DC((uint64_t (*)(_QWORD))MEMORY[0x1E0CF8670], a1);
}

uint64_t ChangeSymbolPerfMetricEvent.Model.symbolPerfData.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for ChangeSymbolPerfMetricEvent.Model(0);
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 20));
  return result;
}

uint64_t type metadata accessor for ChangeSymbolPerfMetricEvent.Model(uint64_t a1)
{
  return sub_1DC4B385C(a1, qword_1F036DF40);
}

uint64_t ChangeSymbolPerfMetricEvent.Model.init(eventData:symbolPerfData:)@<X0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X8>)
{
  char v5;
  uint64_t v6;
  uint64_t result;

  v5 = *a2;
  v6 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a3, a1, v6);
  result = type metadata accessor for ChangeSymbolPerfMetricEvent.Model(0);
  *(_BYTE *)(a3 + *(int *)(result + 20)) = v5;
  return result;
}

uint64_t sub_1DC59E858()
{
  _BYTE *v0;

  if (*v0)
    return 0x65506C6F626D7973;
  else
    return 0x746144746E657665;
}

uint64_t sub_1DC59E8A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1DC59F6AC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DC59E8C8()
{
  sub_1DC59EA80();
  return sub_1DC62B604();
}

uint64_t sub_1DC59E8F0()
{
  sub_1DC59EA80();
  return sub_1DC62B610();
}

uint64_t ChangeSymbolPerfMetricEvent.Model.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  _BYTE v11[16];

  v3 = v1;
  sub_1DC59ED4C(0, &qword_1F036DE40, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = &v11[-v8];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC59EA80();
  sub_1DC62B5F8();
  v11[15] = 0;
  sub_1DC62ABA8();
  sub_1DC4B6788(&qword_1EDB0E8A8, MEMORY[0x1E0CF8680]);
  sub_1DC62B4E4();
  if (!v2)
  {
    v11[14] = *(_BYTE *)(v3 + *(int *)(type metadata accessor for ChangeSymbolPerfMetricEvent.Model(0) + 20));
    v11[13] = 1;
    sub_1DC4C01E8();
    sub_1DC62B4E4();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1DC59EA80()
{
  unint64_t result;

  result = qword_1F036DE48;
  if (!qword_1F036DE48)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC63F474, &type metadata for ChangeSymbolPerfMetricEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036DE48);
  }
  return result;
}

uint64_t ChangeSymbolPerfMetricEvent.Model.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  char v27;
  char v28;

  v21 = a2;
  v25 = sub_1DC62ABA8();
  v22 = *(_QWORD *)(v25 - 8);
  MEMORY[0x1E0C80A78](v25);
  v23 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC59ED4C(0, &qword_1F036DE50, MEMORY[0x1E0DED048]);
  v24 = v5;
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v18 - v7;
  v9 = type metadata accessor for ChangeSymbolPerfMetricEvent.Model(0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC59EA80();
  sub_1DC62B5E0();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v19 = a1;
  v20 = v6;
  v12 = (uint64_t)v11;
  v13 = v22;
  v28 = 0;
  sub_1DC4B6788(&qword_1EDB0E278, MEMORY[0x1E0CF8688]);
  v15 = v23;
  v14 = v24;
  v16 = v25;
  sub_1DC62B454();
  (*(void (**)(uint64_t, char *, uint64_t))(v13 + 32))(v12, v15, v16);
  v26 = 1;
  sub_1DC4C01A4();
  sub_1DC62B454();
  (*(void (**)(char *, uint64_t))(v20 + 8))(v8, v14);
  *(_BYTE *)(v12 + *(int *)(v9 + 20)) = v27;
  sub_1DC59EDA8(v12, v21);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
  return sub_1DC59EDEC(v12);
}

void sub_1DC59ED4C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1DC59EA80();
    v7 = a3(a1, &type metadata for ChangeSymbolPerfMetricEvent.Model.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1DC59EDA8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ChangeSymbolPerfMetricEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DC59EDEC(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for ChangeSymbolPerfMetricEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1DC59EE28@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return ChangeSymbolPerfMetricEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_1DC59EE3C(_QWORD *a1)
{
  return ChangeSymbolPerfMetricEvent.Model.encode(to:)(a1);
}

uint64_t sub_1DC59EE50@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4B2C68(&qword_1F0369110, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1F036DE10, a1);
}

uint64_t sub_1DC59EE74@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4B2C68(&qword_1F0369118, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1F036DE28, a1);
}

uint64_t sub_1DC59EE98@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *MEMORY[0x1E0CF8128];
  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 104))(a2, v4, v5);
  v6 = a2 + *(int *)(a1 + 20);
  sub_1DC59E664();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 104))(v6, v4, v7);
}

uint64_t *initializeBufferWithCopyOfBuffer for ChangeSymbolPerfMetricEvent(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_1DC4B6600();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    sub_1DC59E664();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
  }
  return a1;
}

uint64_t destroy for ChangeSymbolPerfMetricEvent(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + *(int *)(a2 + 20);
  sub_1DC59E664();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
}

uint64_t initializeWithCopy for ChangeSymbolPerfMetricEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1DC59E664();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  return a1;
}

uint64_t assignWithCopy for ChangeSymbolPerfMetricEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1DC59E664();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  return a1;
}

uint64_t initializeWithTake for ChangeSymbolPerfMetricEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1DC59E664();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  return a1;
}

uint64_t assignWithTake for ChangeSymbolPerfMetricEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1DC59E664();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for ChangeSymbolPerfMetricEvent()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC59F210(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  sub_1DC4B6600();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    sub_1DC59E664();
    v8 = v11;
    v12 = *(_QWORD *)(v11 - 8);
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t storeEnumTagSinglePayload for ChangeSymbolPerfMetricEvent()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC59F290(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  sub_1DC4B6600();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    sub_1DC59E664();
    v10 = v13;
    v14 = *(_QWORD *)(v13 - 8);
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_1DC59F30C()
{
  unint64_t v0;
  unint64_t v1;

  sub_1DC4B6600();
  if (v0 <= 0x3F)
  {
    sub_1DC59E664();
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

uint64_t getEnumTagSinglePayload for ChangeSymbolPerfMetricEvent.Model()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC59F39C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unsigned int v9;

  v6 = sub_1DC62ABA8();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 4)
    return v9 - 3;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for ChangeSymbolPerfMetricEvent.Model()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC59F420(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_1DC62ABA8();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_BYTE *)(a1 + *(int *)(a4 + 20)) = a2 + 3;
  return result;
}

uint64_t sub_1DC59F498()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1DC62ABA8();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for ChangeSymbolPerfMetricEvent.Model.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1DC59F554 + 4 * byte_1DC63F2B5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1DC59F588 + 4 * byte_1DC63F2B0[v4]))();
}

uint64_t sub_1DC59F588(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC59F590(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DC59F598);
  return result;
}

uint64_t sub_1DC59F5A4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DC59F5ACLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1DC59F5B0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC59F5B8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ChangeSymbolPerfMetricEvent.Model.CodingKeys()
{
  return &type metadata for ChangeSymbolPerfMetricEvent.Model.CodingKeys;
}

unint64_t sub_1DC59F5D8()
{
  unint64_t result;

  result = qword_1F036DF78;
  if (!qword_1F036DF78)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC63F44C, &type metadata for ChangeSymbolPerfMetricEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036DF78);
  }
  return result;
}

unint64_t sub_1DC59F620()
{
  unint64_t result;

  result = qword_1F036DF80;
  if (!qword_1F036DF80)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC63F3BC, &type metadata for ChangeSymbolPerfMetricEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036DF80);
  }
  return result;
}

unint64_t sub_1DC59F668()
{
  unint64_t result;

  result = qword_1F036DF88;
  if (!qword_1F036DF88)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC63F3E4, &type metadata for ChangeSymbolPerfMetricEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036DF88);
  }
  return result;
}

uint64_t sub_1DC59F6AC(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x746144746E657665 && a2 == 0xE900000000000061;
  if (v2 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x65506C6F626D7973 && a2 == 0xEE00617461446672)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1DC62B520();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t WatchlistAgeData.averageQuoteAge.getter()
{
  unsigned int *v0;

  return *v0;
}

uint64_t WatchlistAgeData.averageQuoteAge.setter(uint64_t result)
{
  _DWORD *v1;

  *v1 = result;
  return result;
}

uint64_t (*WatchlistAgeData.averageQuoteAge.modify())()
{
  return nullsub_1;
}

uint64_t WatchlistAgeData.averageSparklineAge.getter()
{
  uint64_t v0;

  return *(unsigned int *)(v0 + 4);
}

uint64_t WatchlistAgeData.averageSparklineAge.setter(uint64_t result)
{
  uint64_t v1;

  *(_DWORD *)(v1 + 4) = result;
  return result;
}

uint64_t (*WatchlistAgeData.averageSparklineAge.modify())()
{
  return nullsub_1;
}

uint64_t WatchlistAgeData.minQuoteAge.getter()
{
  uint64_t v0;

  return *(unsigned int *)(v0 + 8);
}

uint64_t WatchlistAgeData.minQuoteAge.setter(uint64_t result)
{
  uint64_t v1;

  *(_DWORD *)(v1 + 8) = result;
  return result;
}

uint64_t (*WatchlistAgeData.minQuoteAge.modify())()
{
  return nullsub_1;
}

uint64_t WatchlistAgeData.maxQuoteAge.getter()
{
  uint64_t v0;

  return *(unsigned int *)(v0 + 12);
}

uint64_t WatchlistAgeData.maxQuoteAge.setter(uint64_t result)
{
  uint64_t v1;

  *(_DWORD *)(v1 + 12) = result;
  return result;
}

uint64_t (*WatchlistAgeData.maxQuoteAge.modify())()
{
  return nullsub_1;
}

uint64_t WatchlistAgeData.minSparklineAge.getter()
{
  uint64_t v0;

  return *(unsigned int *)(v0 + 16);
}

uint64_t WatchlistAgeData.minSparklineAge.setter(uint64_t result)
{
  uint64_t v1;

  *(_DWORD *)(v1 + 16) = result;
  return result;
}

uint64_t (*WatchlistAgeData.minSparklineAge.modify())()
{
  return nullsub_1;
}

uint64_t WatchlistAgeData.maxSparklineAge.getter()
{
  uint64_t v0;

  return *(unsigned int *)(v0 + 20);
}

uint64_t WatchlistAgeData.maxSparklineAge.setter(uint64_t result)
{
  uint64_t v1;

  *(_DWORD *)(v1 + 20) = result;
  return result;
}

uint64_t (*WatchlistAgeData.maxSparklineAge.modify())()
{
  return nullsub_1;
}

uint64_t WatchlistAgeData.init(averageQuoteAge:averageSparklineAge:minQuoteAge:maxQuoteAge:minSparklineAge:maxSparklineAge:)@<X0>(uint64_t result@<X0>, int a2@<W1>, int a3@<W2>, int a4@<W3>, int a5@<W4>, int a6@<W5>, _DWORD *a7@<X8>)
{
  *a7 = result;
  a7[1] = a2;
  a7[2] = a3;
  a7[3] = a4;
  a7[4] = a5;
  a7[5] = a6;
  return result;
}

uint64_t sub_1DC59F89C()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1DC59F8D8 + 4 * byte_1DC63F4D0[*v0]))(0x5165676172657661, 0xEF65674165746F75);
}

unint64_t sub_1DC59F8D8()
{
  return 0xD000000000000013;
}

uint64_t sub_1DC59F8F4()
{
  return 0x65746F75516E696DLL;
}

uint64_t sub_1DC59F920()
{
  return 0x6B726170536E696DLL;
}

uint64_t sub_1DC59F950@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1DC5A0098(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DC59F974()
{
  sub_1DC59FBAC();
  return sub_1DC62B604();
}

uint64_t sub_1DC59F99C()
{
  sub_1DC59FBAC();
  return sub_1DC62B610();
}

uint64_t WatchlistAgeData.encode(to:)(_QWORD *a1)
{
  _DWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int v9;
  int v10;
  _DWORD v12[8];
  char v13;
  char v14;
  char v15;
  char v16;
  char v17;
  char v18;

  sub_1DC59FDF8(0, &qword_1EDB11A50, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)v12 - v7;
  v9 = v1[1];
  v12[6] = v1[2];
  v12[7] = v9;
  v10 = v1[3];
  v12[4] = v1[4];
  v12[5] = v10;
  v12[3] = v1[5];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC59FBAC();
  sub_1DC62B5F8();
  v18 = 0;
  sub_1DC62B4F0();
  if (!v2)
  {
    v17 = 1;
    sub_1DC62B4F0();
    v16 = 2;
    sub_1DC62B4F0();
    v15 = 3;
    sub_1DC62B4F0();
    v14 = 4;
    sub_1DC62B4F0();
    v13 = 5;
    sub_1DC62B4F0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_1DC59FBAC()
{
  unint64_t result;

  result = qword_1EDB0F970;
  if (!qword_1EDB0F970)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC63F664, &type metadata for WatchlistAgeData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB0F970);
  }
  return result;
}

uint64_t WatchlistAgeData.init(from:)@<X0>(_QWORD *a1@<X0>, _DWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int v10;
  int v11;
  int v13;
  int v14;
  uint64_t v15;
  int v16;
  int v17;
  char v18;
  char v19;
  char v20;
  char v21;
  char v22;
  char v23;

  sub_1DC59FDF8(0, &qword_1F036DF90, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v15 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC59FBAC();
  sub_1DC62B5E0();
  if (!v2)
  {
    v23 = 0;
    v10 = sub_1DC62B460();
    v22 = 1;
    v11 = sub_1DC62B460();
    v21 = 2;
    v17 = sub_1DC62B460();
    v20 = 3;
    v16 = sub_1DC62B460();
    v19 = 4;
    HIDWORD(v15) = sub_1DC62B460();
    v18 = 5;
    v13 = sub_1DC62B460();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *a2 = v10;
    a2[1] = v11;
    v14 = v16;
    a2[2] = v17;
    a2[3] = v14;
    a2[4] = HIDWORD(v15);
    a2[5] = v13;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1DC59FDF8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1DC59FBAC();
    v7 = a3(a1, &type metadata for WatchlistAgeData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1DC59FE5C@<X0>(_QWORD *a1@<X0>, _DWORD *a2@<X8>)
{
  return WatchlistAgeData.init(from:)(a1, a2);
}

uint64_t sub_1DC59FE70(_QWORD *a1)
{
  return WatchlistAgeData.encode(to:)(a1);
}

__n128 __swift_memcpy24_4(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for WatchlistAgeData(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 24))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for WatchlistAgeData(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 24) = v3;
  return result;
}

ValueMetadata *type metadata accessor for WatchlistAgeData()
{
  return &type metadata for WatchlistAgeData;
}

uint64_t storeEnumTagSinglePayload for WatchlistAgeData.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_1DC59FF40 + 4 * byte_1DC63F4DB[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_1DC59FF74 + 4 * byte_1DC63F4D6[v4]))();
}

uint64_t sub_1DC59FF74(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC59FF7C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DC59FF84);
  return result;
}

uint64_t sub_1DC59FF90(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DC59FF98);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_1DC59FF9C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC59FFA4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for WatchlistAgeData.CodingKeys()
{
  return &type metadata for WatchlistAgeData.CodingKeys;
}

unint64_t sub_1DC59FFC4()
{
  unint64_t result;

  result = qword_1F036DF98;
  if (!qword_1F036DF98)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC63F63C, &type metadata for WatchlistAgeData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036DF98);
  }
  return result;
}

unint64_t sub_1DC5A000C()
{
  unint64_t result;

  result = qword_1EDB0F980;
  if (!qword_1EDB0F980)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC63F5AC, &type metadata for WatchlistAgeData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB0F980);
  }
  return result;
}

unint64_t sub_1DC5A0054()
{
  unint64_t result;

  result = qword_1EDB0F978;
  if (!qword_1EDB0F978)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC63F5D4, &type metadata for WatchlistAgeData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB0F978);
  }
  return result;
}

uint64_t sub_1DC5A0098(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x5165676172657661 && a2 == 0xEF65674165746F75;
  if (v2 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001DC64D260 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x65746F75516E696DLL && a2 == 0xEB00000000656741 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x65746F755178616DLL && a2 == 0xEB00000000656741 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6B726170536E696DLL && a2 == 0xEF656741656E696CLL || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6B7261705378616DLL && a2 == 0xEF656741656E696CLL)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    v6 = sub_1DC62B520();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 5;
    else
      return 6;
  }
}

uint64_t FractionalCohortMembershipDetails.symbol.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FractionalCohortMembershipDetails.symbol.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*FractionalCohortMembershipDetails.symbol.modify())()
{
  return nullsub_1;
}

double FractionalCohortMembershipDetails.score.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 16);
}

void FractionalCohortMembershipDetails.score.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 16) = a1;
}

uint64_t (*FractionalCohortMembershipDetails.score.modify())()
{
  return nullsub_1;
}

StocksAnalytics::FractionalCohortMembershipDetails __swiftcall FractionalCohortMembershipDetails.init(symbol:score:)(Swift::String symbol, Swift::Double score)
{
  uint64_t v2;
  StocksAnalytics::FractionalCohortMembershipDetails result;

  *(Swift::String *)v2 = symbol;
  *(Swift::Double *)(v2 + 16) = score;
  result.symbol = symbol;
  result.score = score;
  return result;
}

uint64_t sub_1DC5A0434()
{
  _BYTE *v0;

  if (*v0)
    return 0x65726F6373;
  else
    return 0x6C6F626D7973;
}

uint64_t sub_1DC5A0468@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1DC5A0C04(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DC5A048C()
{
  sub_1DC5A0610();
  return sub_1DC62B604();
}

uint64_t sub_1DC5A04B4()
{
  sub_1DC5A0610();
  return sub_1DC62B610();
}

uint64_t FractionalCohortMembershipDetails.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v9;
  char v10;
  char v11;

  sub_1DC5A07EC(0, &qword_1EDB11AD8, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v9 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC5A0610();
  sub_1DC62B5F8();
  v11 = 0;
  v7 = v9;
  sub_1DC62B4B4();
  if (!v7)
  {
    v10 = 1;
    sub_1DC62B4CC();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_1DC5A0610()
{
  unint64_t result;

  result = qword_1EDB11168;
  if (!qword_1EDB11168)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC63F858, &type metadata for FractionalCohortMembershipDetails.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB11168);
  }
  return result;
}

uint64_t FractionalCohortMembershipDetails.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE v16[16];

  sub_1DC5A07EC(0, &qword_1EDB12918, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = &v16[-v8];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC5A0610();
  sub_1DC62B5E0();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v16[15] = 0;
  v10 = sub_1DC62B424();
  v12 = v11;
  v16[14] = 1;
  swift_bridgeObjectRetain();
  sub_1DC62B43C();
  v14 = v13;
  (*(void (**)(_BYTE *, uint64_t))(v7 + 8))(v9, v6);
  *a2 = v10;
  a2[1] = v12;
  a2[2] = v14;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return swift_bridgeObjectRelease();
}

void sub_1DC5A07EC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1DC5A0610();
    v7 = a3(a1, &type metadata for FractionalCohortMembershipDetails.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1DC5A084C()
{
  unint64_t result;

  result = qword_1EDB12920;
  if (!qword_1EDB12920)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for FractionalCohortMembershipDetails, &type metadata for FractionalCohortMembershipDetails);
    atomic_store(result, (unint64_t *)&qword_1EDB12920);
  }
  return result;
}

unint64_t sub_1DC5A0894()
{
  unint64_t result;

  result = qword_1EDB11180;
  if (!qword_1EDB11180)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for FractionalCohortMembershipDetails, &type metadata for FractionalCohortMembershipDetails);
    atomic_store(result, (unint64_t *)&qword_1EDB11180);
  }
  return result;
}

uint64_t sub_1DC5A08D8@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return FractionalCohortMembershipDetails.init(from:)(a1, a2);
}

uint64_t sub_1DC5A08EC(_QWORD *a1)
{
  return FractionalCohortMembershipDetails.encode(to:)(a1);
}

_QWORD *sub_1DC5A0904(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for FractionalCohortMembershipDetails(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  return a1;
}

_QWORD *assignWithTake for FractionalCohortMembershipDetails(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  return a1;
}

uint64_t getEnumTagSinglePayload for FractionalCohortMembershipDetails(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 24))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for FractionalCohortMembershipDetails(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 24) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for FractionalCohortMembershipDetails()
{
  return &type metadata for FractionalCohortMembershipDetails;
}

uint64_t storeEnumTagSinglePayload for FractionalCohortMembershipDetails.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1DC5A0AAC + 4 * byte_1DC63F6C5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1DC5A0AE0 + 4 * byte_1DC63F6C0[v4]))();
}

uint64_t sub_1DC5A0AE0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC5A0AE8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DC5A0AF0);
  return result;
}

uint64_t sub_1DC5A0AFC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DC5A0B04);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1DC5A0B08(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC5A0B10(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FractionalCohortMembershipDetails.CodingKeys()
{
  return &type metadata for FractionalCohortMembershipDetails.CodingKeys;
}

unint64_t sub_1DC5A0B30()
{
  unint64_t result;

  result = qword_1F036DFA0;
  if (!qword_1F036DFA0)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC63F830, &type metadata for FractionalCohortMembershipDetails.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036DFA0);
  }
  return result;
}

unint64_t sub_1DC5A0B78()
{
  unint64_t result;

  result = qword_1EDB11178;
  if (!qword_1EDB11178)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC63F7A0, &type metadata for FractionalCohortMembershipDetails.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB11178);
  }
  return result;
}

unint64_t sub_1DC5A0BC0()
{
  unint64_t result;

  result = qword_1EDB11170;
  if (!qword_1EDB11170)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC63F7C8, &type metadata for FractionalCohortMembershipDetails.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB11170);
  }
  return result;
}

uint64_t sub_1DC5A0C04(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6C6F626D7973 && a2 == 0xE600000000000000;
  if (v2 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x65726F6373 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1DC62B520();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1DC5A0CE4(uint64_t a1)
{
  return sub_1DC4BE784(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], qword_1EDB0FC78, MEMORY[0x1E0CF8078]);
}

uint64_t static GroupExposureEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C2FE8(&qword_1EDB0FC90, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1EDB0FC78, a1);
}

uint64_t sub_1DC5A0D24(uint64_t a1)
{
  return sub_1DC4BE784(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], qword_1EDB0FC98, MEMORY[0x1E0CF8380]);
}

uint64_t static GroupExposureEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C2FE8(&qword_1EDB0FCB0, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1EDB0FC98, a1);
}

uint64_t GroupExposureEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C37DC((uint64_t (*)(_QWORD))sub_1DC4B6600, a1);
}

uint64_t GroupExposureEvent.eventData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  sub_1DC4B6600();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*GroupExposureEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t GroupExposureEvent.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C382C(type metadata accessor for GroupExposureEvent, (uint64_t (*)(_QWORD))sub_1DC4B66A4, a1);
}

uint64_t type metadata accessor for GroupExposureEvent(uint64_t a1)
{
  return sub_1DC4B385C(a1, qword_1EDB0FCB8);
}

uint64_t GroupExposureEvent.timedData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for GroupExposureEvent(0) + 20);
  sub_1DC4B66A4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*GroupExposureEvent.timedData.modify())()
{
  type metadata accessor for GroupExposureEvent(0);
  return nullsub_1;
}

uint64_t GroupExposureEvent.groupData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for GroupExposureEvent(0) + 24);
  sub_1DC4B4B50(0, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t GroupExposureEvent.groupData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for GroupExposureEvent(0) + 24);
  sub_1DC4B4B50(0, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*GroupExposureEvent.groupData.modify())()
{
  type metadata accessor for GroupExposureEvent(0);
  return nullsub_1;
}

uint64_t GroupExposureEvent.feedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for GroupExposureEvent(0) + 28);
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t GroupExposureEvent.feedData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for GroupExposureEvent(0) + 28);
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*GroupExposureEvent.feedData.modify())()
{
  type metadata accessor for GroupExposureEvent(0);
  return nullsub_1;
}

uint64_t GroupExposureEvent.viewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for GroupExposureEvent(0) + 32);
  sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t GroupExposureEvent.viewData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for GroupExposureEvent(0) + 32);
  sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*GroupExposureEvent.viewData.modify())()
{
  type metadata accessor for GroupExposureEvent(0);
  return nullsub_1;
}

uint64_t GroupExposureEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v2 = *MEMORY[0x1E0CF8128];
  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
  v4 = (int *)type metadata accessor for GroupExposureEvent(0);
  v5 = a1 + v4[5];
  sub_1DC4B66A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 104))(v5, v2, v6);
  v7 = a1 + v4[6];
  sub_1DC4B4B50(0, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 104))(v7, v2, v8);
  v9 = a1 + v4[7];
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 104))(v9, v2, v10);
  v11 = a1 + v4[8];
  sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 104))(v11, v2, v12);
}

uint64_t GroupExposureEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C37DC((uint64_t (*)(_QWORD))MEMORY[0x1E0CF8670], a1);
}

uint64_t GroupExposureEvent.Model.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C382C(type metadata accessor for GroupExposureEvent.Model, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF86C0], a1);
}

uint64_t type metadata accessor for GroupExposureEvent.Model(uint64_t a1)
{
  return sub_1DC4B385C(a1, qword_1F036E018);
}

uint64_t GroupExposureEvent.Model.groupData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = v1 + *(int *)(type metadata accessor for GroupExposureEvent.Model(0) + 24);
  v4 = *(_QWORD *)(v3 + 8);
  v5 = *(_QWORD *)(v3 + 16);
  v7 = *(_QWORD *)(v3 + 32);
  v6 = *(_QWORD *)(v3 + 40);
  *(_BYTE *)a1 = *(_BYTE *)v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(v3 + 24);
  *(_QWORD *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 40) = v6;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t GroupExposureEvent.Model.feedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = v1 + *(int *)(type metadata accessor for GroupExposureEvent.Model(0) + 28);
  v5 = *(_QWORD *)(v3 + 8);
  v4 = *(_QWORD *)(v3 + 16);
  *(_BYTE *)a1 = *(_BYTE *)v3;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v4;
  return swift_bridgeObjectRetain();
}

uint64_t GroupExposureEvent.Model.viewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for GroupExposureEvent.Model(0) + 32));
  v5 = *v3;
  v4 = v3[1];
  LOWORD(v3) = *((_WORD *)v3 + 8);
  *(_QWORD *)a1 = v5;
  *(_QWORD *)(a1 + 8) = v4;
  *(_WORD *)(a1 + 16) = (_WORD)v3;
  return swift_bridgeObjectRetain();
}

uint64_t GroupExposureEvent.Model.init(eventData:timedData:groupData:feedData:viewData:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X2>, char *a4@<X3>, uint64_t *a5@<X4>, uint64_t a6@<X8>)
{
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  int *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t result;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __int16 v27;
  uint64_t v28;
  uint64_t v29;

  v10 = *a3;
  v11 = *((_QWORD *)a3 + 1);
  v12 = *((_QWORD *)a3 + 2);
  v13 = *((_QWORD *)a3 + 4);
  v14 = *((_QWORD *)a3 + 5);
  v15 = *a4;
  v25 = *((_QWORD *)a4 + 2);
  v26 = *((_QWORD *)a4 + 1);
  v28 = a5[1];
  v29 = *a5;
  v27 = *((_WORD *)a5 + 8);
  v16 = sub_1DC62ABA8();
  v17 = *((_QWORD *)a3 + 3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(a6, a1, v16);
  v18 = (int *)type metadata accessor for GroupExposureEvent.Model(0);
  v19 = a6 + v18[5];
  v20 = sub_1DC62ABC0();
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(v19, a2, v20);
  v22 = a6 + v18[6];
  *(_BYTE *)v22 = v10;
  *(_QWORD *)(v22 + 8) = v11;
  *(_QWORD *)(v22 + 16) = v12;
  *(_QWORD *)(v22 + 24) = v17;
  *(_QWORD *)(v22 + 32) = v13;
  *(_QWORD *)(v22 + 40) = v14;
  v23 = a6 + v18[7];
  *(_BYTE *)v23 = v15;
  *(_QWORD *)(v23 + 8) = v26;
  *(_QWORD *)(v23 + 16) = v25;
  v24 = a6 + v18[8];
  *(_QWORD *)v24 = v29;
  *(_QWORD *)(v24 + 8) = v28;
  *(_WORD *)(v24 + 16) = v27;
  return result;
}

uint64_t sub_1DC5A14BC()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1DC5A14F0 + 4 * byte_1DC63F8B0[*v0]))(0x746144746E657665, 0xE900000000000061);
}

uint64_t sub_1DC5A14F0()
{
  return 0x74614464656D6974;
}

uint64_t sub_1DC5A1504()
{
  return 0x74614470756F7267;
}

uint64_t sub_1DC5A1518()
{
  return 0x6174614464656566;
}

uint64_t sub_1DC5A1530()
{
  return 0x6174614477656976;
}

uint64_t sub_1DC5A1548@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1DC5A3600(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DC5A156C()
{
  sub_1DC5A184C();
  return sub_1DC62B604();
}

uint64_t sub_1DC5A1594()
{
  sub_1DC5A184C();
  return sub_1DC62B610();
}

uint64_t GroupExposureEvent.Model.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __int128 v28;

  v3 = v1;
  sub_1DC5A1D6C(0, &qword_1F036DFA8, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v22 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC5A184C();
  sub_1DC62B5F8();
  LOBYTE(v24) = 0;
  sub_1DC62ABA8();
  sub_1DC4B6748(&qword_1EDB0E8A8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF8670], MEMORY[0x1E0CF8680]);
  sub_1DC62B4E4();
  if (!v2)
  {
    v10 = (int *)type metadata accessor for GroupExposureEvent.Model(0);
    LOBYTE(v24) = 1;
    sub_1DC62ABC0();
    sub_1DC4B6748(&qword_1EDB0E8B8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF86C0], MEMORY[0x1E0CF86D0]);
    sub_1DC62B4E4();
    v11 = v3 + v10[6];
    v12 = *(_QWORD *)(v11 + 8);
    v13 = *(_QWORD *)(v11 + 16);
    LOBYTE(v24) = *(_BYTE *)v11;
    v25 = v12;
    v26 = v13;
    v27 = *(_QWORD *)(v11 + 24);
    v28 = *(_OWORD *)(v11 + 32);
    v23 = 2;
    sub_1DC4C9004();
    sub_1DC62B4E4();
    v14 = (char *)(v3 + v10[7]);
    v15 = *v14;
    v17 = *((_QWORD *)v14 + 1);
    v16 = *((_QWORD *)v14 + 2);
    LOBYTE(v24) = v15;
    v25 = v17;
    v26 = v16;
    v23 = 3;
    sub_1DC4BEFD8();
    sub_1DC62B4E4();
    v18 = (uint64_t *)(v3 + v10[8]);
    v19 = *v18;
    v20 = v18[1];
    LOWORD(v18) = *((_WORD *)v18 + 8);
    v24 = v19;
    v25 = v20;
    LOWORD(v26) = (_WORD)v18;
    v23 = 4;
    sub_1DC4BEDF0();
    sub_1DC62B4E4();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1DC5A184C()
{
  unint64_t result;

  result = qword_1F036DFB0;
  if (!qword_1F036DFB0)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC63FACC, &type metadata for GroupExposureEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036DFB0);
  }
  return result;
}

uint64_t GroupExposureEvent.Model.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __int16 v27;
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  __int128 v46;
  char v47;

  v33 = a2;
  v36 = sub_1DC62ABC0();
  v34 = *(_QWORD *)(v36 - 8);
  MEMORY[0x1E0C80A78](v36);
  v35 = (char *)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = sub_1DC62ABA8();
  v4 = *(_QWORD *)(v39 - 8);
  MEMORY[0x1E0C80A78](v39);
  v37 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC5A1D6C(0, &qword_1F036DFB8, MEMORY[0x1E0DED048]);
  v38 = v6;
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v30 - v8;
  v10 = (int *)type metadata accessor for GroupExposureEvent.Model(0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC5A184C();
  v40 = v9;
  v13 = (uint64_t)v41;
  sub_1DC62B5E0();
  if (v13)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v31 = v4;
  v32 = v7;
  v41 = a1;
  v14 = (uint64_t)v12;
  v15 = v35;
  v16 = v36;
  LOBYTE(v42) = 0;
  sub_1DC4B6748(&qword_1EDB0E278, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF8670], MEMORY[0x1E0CF8688]);
  v17 = v37;
  v18 = v38;
  v19 = v39;
  sub_1DC62B454();
  (*(void (**)(uint64_t, char *, uint64_t))(v31 + 32))(v14, v17, v19);
  LOBYTE(v42) = 1;
  sub_1DC4B6748(&qword_1EDB0E8C0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF86C0], MEMORY[0x1E0CF86D8]);
  sub_1DC62B454();
  (*(void (**)(uint64_t, char *, uint64_t))(v34 + 32))(v14 + v10[5], v15, v16);
  v47 = 2;
  sub_1DC4C8FC0();
  sub_1DC62B454();
  v37 = 0;
  v20 = v43;
  v21 = v44;
  v22 = v14 + v10[6];
  *(_BYTE *)v22 = v42;
  *(_QWORD *)(v22 + 8) = v20;
  *(_QWORD *)(v22 + 16) = v21;
  *(_QWORD *)(v22 + 24) = v45;
  *(_OWORD *)(v22 + 32) = v46;
  v47 = 3;
  sub_1DC4BEF94();
  sub_1DC62B454();
  v23 = v43;
  v24 = v44;
  v25 = v14 + v10[7];
  *(_BYTE *)v25 = v42;
  *(_QWORD *)(v25 + 8) = v23;
  *(_QWORD *)(v25 + 16) = v24;
  v47 = 4;
  sub_1DC4BEDAC();
  sub_1DC62B454();
  (*(void (**)(char *, uint64_t))(v32 + 8))(v40, v18);
  v26 = v43;
  v27 = v44;
  v28 = v14 + v10[8];
  *(_QWORD *)v28 = v42;
  *(_QWORD *)(v28 + 8) = v26;
  *(_WORD *)(v28 + 16) = v27;
  sub_1DC5A1DC8(v14, v33);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v41);
  return sub_1DC5A1E0C(v14);
}

void sub_1DC5A1D6C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1DC5A184C();
    v7 = a3(a1, &type metadata for GroupExposureEvent.Model.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1DC5A1DC8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for GroupExposureEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DC5A1E0C(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for GroupExposureEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1DC5A1E48@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return GroupExposureEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_1DC5A1E5C(_QWORD *a1)
{
  return GroupExposureEvent.Model.encode(to:)(a1);
}

uint64_t sub_1DC5A1E70@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4B2C68(&qword_1EDB0FC90, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1EDB0FC78, a1);
}

uint64_t sub_1DC5A1E94@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4B2C68(&qword_1EDB0FCB0, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1EDB0FC98, a1);
}

uint64_t sub_1DC5A1EB8@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v4 = *MEMORY[0x1E0CF8128];
  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 104))(a2, v4, v5);
  v6 = a2 + a1[5];
  sub_1DC4B66A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 104))(v6, v4, v7);
  v8 = a2 + a1[6];
  sub_1DC4B4B50(0, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 104))(v8, v4, v9);
  v10 = a2 + a1[7];
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 104))(v10, v4, v11);
  v12 = a2 + a1[8];
  sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 104))(v12, v4, v13);
}

uint64_t *initializeBufferWithCopyOfBuffer for GroupExposureEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v24 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v24 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_1DC4B6600();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    sub_1DC4B66A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = a3[6];
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    sub_1DC4B4B50(0, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
    v16 = a3[7];
    v17 = (char *)a1 + v16;
    v18 = (char *)a2 + v16;
    sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
    v20 = a3[8];
    v21 = (char *)a1 + v20;
    v22 = (char *)a2 + v20;
    sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v21, v22, v23);
  }
  return a1;
}

uint64_t destroy for GroupExposureEvent(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + a2[5];
  sub_1DC4B66A4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = a1 + a2[6];
  sub_1DC4B4B50(0, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  v9 = a1 + a2[7];
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  v11 = a1 + a2[8];
  sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
}

uint64_t initializeWithCopy for GroupExposureEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1DC4B66A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1DC4B4B50(0, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v20, v21, v22);
  return a1;
}

uint64_t assignWithCopy for GroupExposureEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1DC4B66A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1DC4B4B50(0, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 24))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 24))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 24))(v20, v21, v22);
  return a1;
}

uint64_t initializeWithTake for GroupExposureEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1DC4B66A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1DC4B4B50(0, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v20, v21, v22);
  return a1;
}

uint64_t assignWithTake for GroupExposureEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1DC4B66A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1DC4B4B50(0, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 40))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 40))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 40))(v20, v21, v22);
  return a1;
}

uint64_t getEnumTagSinglePayload for GroupExposureEvent()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC5A2878(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  sub_1DC4B6600();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    sub_1DC4B66A4();
    v12 = *(_QWORD *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
    {
      v8 = v11;
      v13 = a3[5];
    }
    else
    {
      sub_1DC4B4B50(0, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
      v12 = *(_QWORD *)(v14 - 8);
      if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
      {
        v8 = v14;
        v13 = a3[6];
      }
      else
      {
        sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
        v12 = *(_QWORD *)(v15 - 8);
        if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
        {
          v8 = v15;
          v13 = a3[7];
        }
        else
        {
          sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
          v8 = v16;
          v12 = *(_QWORD *)(v16 - 8);
          v13 = a3[8];
        }
      }
    }
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t storeEnumTagSinglePayload for GroupExposureEvent()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC5A29C4(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  sub_1DC4B6600();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    sub_1DC4B66A4();
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = a4[5];
    }
    else
    {
      sub_1DC4B4B50(0, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
      v14 = *(_QWORD *)(v16 - 8);
      if (*(_DWORD *)(v14 + 84) == a3)
      {
        v10 = v16;
        v15 = a4[6];
      }
      else
      {
        sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
        v14 = *(_QWORD *)(v17 - 8);
        if (*(_DWORD *)(v14 + 84) == a3)
        {
          v10 = v17;
          v15 = a4[7];
        }
        else
        {
          sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
          v10 = v18;
          v14 = *(_QWORD *)(v18 - 8);
          v15 = a4[8];
        }
      }
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_1DC5A2B0C()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;

  sub_1DC4B6600();
  if (v0 <= 0x3F)
  {
    sub_1DC4B66A4();
    if (v1 <= 0x3F)
    {
      sub_1DC4B4B50(319, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
      if (v2 <= 0x3F)
      {
        sub_1DC4B4B50(319, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
        if (v3 <= 0x3F)
        {
          sub_1DC4B4B50(319, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
          if (v4 <= 0x3F)
            swift_initStructMetadata();
        }
      }
    }
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for GroupExposureEvent.Model(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v25 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v25 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1DC62ABA8();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_1DC62ABC0();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = a3[6];
    v13 = a3[7];
    v14 = (char *)a1 + v12;
    v15 = (char *)a2 + v12;
    *v14 = *v15;
    v16 = *((_QWORD *)v15 + 2);
    *((_QWORD *)v14 + 1) = *((_QWORD *)v15 + 1);
    *((_QWORD *)v14 + 2) = v16;
    *((_QWORD *)v14 + 3) = *((_QWORD *)v15 + 3);
    v17 = *((_QWORD *)v15 + 5);
    *((_QWORD *)v14 + 4) = *((_QWORD *)v15 + 4);
    *((_QWORD *)v14 + 5) = v17;
    v18 = (char *)a1 + v13;
    v19 = (char *)a2 + v13;
    *v18 = *v19;
    v20 = *((_QWORD *)v19 + 2);
    *((_QWORD *)v18 + 1) = *((_QWORD *)v19 + 1);
    *((_QWORD *)v18 + 2) = v20;
    v21 = a3[8];
    v22 = (char *)a1 + v21;
    v23 = (char *)a2 + v21;
    v24 = *((_QWORD *)v23 + 1);
    *(_QWORD *)v22 = *(_QWORD *)v23;
    *((_QWORD *)v22 + 1) = v24;
    v22[16] = v23[16];
    v22[17] = v23[17];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for GroupExposureEvent.Model(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + *(int *)(a2 + 20);
  v6 = sub_1DC62ABC0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for GroupExposureEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v6 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1DC62ABC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = a3[6];
  v12 = a3[7];
  v13 = a1 + v11;
  v14 = a2 + v11;
  *(_BYTE *)v13 = *(_BYTE *)v14;
  v15 = *(_QWORD *)(v14 + 16);
  *(_QWORD *)(v13 + 8) = *(_QWORD *)(v14 + 8);
  *(_QWORD *)(v13 + 16) = v15;
  *(_QWORD *)(v13 + 24) = *(_QWORD *)(v14 + 24);
  v16 = *(_QWORD *)(v14 + 40);
  *(_QWORD *)(v13 + 32) = *(_QWORD *)(v14 + 32);
  *(_QWORD *)(v13 + 40) = v16;
  v17 = a1 + v12;
  v18 = a2 + v12;
  *(_BYTE *)v17 = *(_BYTE *)v18;
  v19 = *(_QWORD *)(v18 + 16);
  *(_QWORD *)(v17 + 8) = *(_QWORD *)(v18 + 8);
  *(_QWORD *)(v17 + 16) = v19;
  v20 = a3[8];
  v21 = a1 + v20;
  v22 = a2 + v20;
  v23 = *(_QWORD *)(v22 + 8);
  *(_QWORD *)v21 = *(_QWORD *)v22;
  *(_QWORD *)(v21 + 8) = v23;
  *(_BYTE *)(v21 + 16) = *(_BYTE *)(v22 + 16);
  *(_BYTE *)(v21 + 17) = *(_BYTE *)(v22 + 17);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for GroupExposureEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v6 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1DC62ABC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  *(_BYTE *)v12 = *(_BYTE *)(a2 + v11);
  *(_QWORD *)(v12 + 8) = *(_QWORD *)(a2 + v11 + 8);
  *(_QWORD *)(v12 + 16) = *(_QWORD *)(a2 + v11 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(v12 + 24) = *(_DWORD *)(v13 + 24);
  *(_DWORD *)(v12 + 28) = *(_DWORD *)(v13 + 28);
  *(_QWORD *)(v12 + 32) = *(_QWORD *)(v13 + 32);
  *(_QWORD *)(v12 + 40) = *(_QWORD *)(v13 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v14 = a3[7];
  v15 = a1 + v14;
  v16 = a2 + v14;
  *(_BYTE *)v15 = *(_BYTE *)v16;
  *(_QWORD *)(v15 + 8) = *(_QWORD *)(v16 + 8);
  *(_QWORD *)(v15 + 16) = *(_QWORD *)(v16 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v17 = a3[8];
  v18 = a1 + v17;
  v19 = a2 + v17;
  *(_QWORD *)v18 = *(_QWORD *)(a2 + v17);
  *(_QWORD *)(v18 + 8) = *(_QWORD *)(a2 + v17 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v18 + 16) = *(_BYTE *)(v19 + 16);
  *(_BYTE *)(v18 + 17) = *(_BYTE *)(v19 + 17);
  return a1;
}

uint64_t initializeWithTake for GroupExposureEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _OWORD *v13;
  _OWORD *v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v6 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1DC62ABC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[6];
  v12 = a3[7];
  v13 = (_OWORD *)(a1 + v11);
  v14 = (_OWORD *)(a2 + v11);
  v15 = v14[1];
  *v13 = *v14;
  v13[1] = v15;
  v13[2] = v14[2];
  v16 = a1 + v12;
  v17 = a2 + v12;
  *(_OWORD *)v16 = *(_OWORD *)v17;
  *(_QWORD *)(v16 + 16) = *(_QWORD *)(v17 + 16);
  v18 = a3[8];
  v19 = a1 + v18;
  v20 = a2 + v18;
  *(_OWORD *)v19 = *(_OWORD *)v20;
  *(_WORD *)(v19 + 16) = *(_WORD *)(v20 + 16);
  return a1;
}

uint64_t assignWithTake for GroupExposureEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v6 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1DC62ABC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = (_QWORD *)(a2 + v11);
  *(_BYTE *)v12 = *(_BYTE *)(a2 + v11);
  v14 = *(_QWORD *)(a2 + v11 + 16);
  *(_QWORD *)(v12 + 8) = *(_QWORD *)(a2 + v11 + 8);
  *(_QWORD *)(v12 + 16) = v14;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v12 + 24) = v13[3];
  v15 = v13[5];
  *(_QWORD *)(v12 + 32) = v13[4];
  *(_QWORD *)(v12 + 40) = v15;
  swift_bridgeObjectRelease();
  v16 = a3[7];
  v17 = a1 + v16;
  v18 = a2 + v16;
  *(_BYTE *)v17 = *(_BYTE *)v18;
  v20 = *(_QWORD *)(v18 + 8);
  v19 = *(_QWORD *)(v18 + 16);
  *(_QWORD *)(v17 + 8) = v20;
  *(_QWORD *)(v17 + 16) = v19;
  swift_bridgeObjectRelease();
  v21 = a3[8];
  v22 = a1 + v21;
  v23 = a2 + v21;
  v24 = *(_QWORD *)(v23 + 8);
  *(_QWORD *)v22 = *(_QWORD *)v23;
  *(_QWORD *)(v22 + 8) = v24;
  swift_bridgeObjectRelease();
  *(_WORD *)(v22 + 16) = *(_WORD *)(v23 + 16);
  return a1;
}

uint64_t getEnumTagSinglePayload for GroupExposureEvent.Model()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC5A325C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v14;

  v6 = sub_1DC62ABA8();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  v11 = sub_1DC62ABC0();
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  v14 = *(_QWORD *)(a1 + *(int *)(a3 + 24) + 16);
  if (v14 >= 0xFFFFFFFF)
    LODWORD(v14) = -1;
  return (v14 + 1);
}

uint64_t storeEnumTagSinglePayload for GroupExposureEvent.Model()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC5A3314(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t result;
  uint64_t v14;

  v8 = sub_1DC62ABA8();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
    return v11(v12, a2, a2, v10);
  }
  result = sub_1DC62ABC0();
  v14 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = result;
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    return v11(v12, a2, a2, v10);
  }
  *(_QWORD *)(a1 + *(int *)(a4 + 24) + 16) = (a2 - 1);
  return result;
}

uint64_t sub_1DC5A33BC()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_1DC62ABA8();
  if (v1 <= 0x3F)
  {
    result = sub_1DC62ABC0();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for GroupExposureEvent.Model.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1DC5A34A8 + 4 * byte_1DC63F8BA[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1DC5A34DC + 4 * byte_1DC63F8B5[v4]))();
}

uint64_t sub_1DC5A34DC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC5A34E4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DC5A34ECLL);
  return result;
}

uint64_t sub_1DC5A34F8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DC5A3500);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1DC5A3504(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC5A350C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for GroupExposureEvent.Model.CodingKeys()
{
  return &type metadata for GroupExposureEvent.Model.CodingKeys;
}

unint64_t sub_1DC5A352C()
{
  unint64_t result;

  result = qword_1F036E060;
  if (!qword_1F036E060)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC63FAA4, &type metadata for GroupExposureEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036E060);
  }
  return result;
}

unint64_t sub_1DC5A3574()
{
  unint64_t result;

  result = qword_1F036E068;
  if (!qword_1F036E068)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC63FA14, &type metadata for GroupExposureEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036E068);
  }
  return result;
}

unint64_t sub_1DC5A35BC()
{
  unint64_t result;

  result = qword_1F036E070;
  if (!qword_1F036E070)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC63FA3C, &type metadata for GroupExposureEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036E070);
  }
  return result;
}

uint64_t sub_1DC5A3600(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x746144746E657665 && a2 == 0xE900000000000061;
  if (v2 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x74614464656D6974 && a2 == 0xE900000000000061 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x74614470756F7267 && a2 == 0xE900000000000061 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6174614464656566 && a2 == 0xE800000000000000 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6174614477656976 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    v6 = sub_1DC62B520();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 4;
    else
      return 5;
  }
}

uint64_t sub_1DC5A3838(uint64_t a1)
{
  return sub_1DC4BE784(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], qword_1F036E078, MEMORY[0x1E0CF8078]);
}

uint64_t static AudioEngagementBeginEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C2FE8(&qword_1F0369120, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1F036E078, a1);
}

uint64_t sub_1DC5A3878(uint64_t a1)
{
  return sub_1DC4BE784(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], qword_1F036E090, MEMORY[0x1E0CF8380]);
}

uint64_t static AudioEngagementBeginEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C2FE8(&qword_1F0369128, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1F036E090, a1);
}

uint64_t AudioEngagementBeginEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C37DC((uint64_t (*)(_QWORD))sub_1DC4B6600, a1);
}

uint64_t AudioEngagementBeginEvent.eventData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  sub_1DC4B6600();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*AudioEngagementBeginEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t AudioEngagementBeginEvent.newsArticleData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AudioEngagementBeginEvent(0) + 20);
  sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t type metadata accessor for AudioEngagementBeginEvent(uint64_t a1)
{
  return sub_1DC4B385C(a1, qword_1F036E118);
}

uint64_t AudioEngagementBeginEvent.newsArticleData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AudioEngagementBeginEvent(0) + 20);
  sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*AudioEngagementBeginEvent.newsArticleData.modify())()
{
  type metadata accessor for AudioEngagementBeginEvent(0);
  return nullsub_1;
}

uint64_t AudioEngagementBeginEvent.channelData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AudioEngagementBeginEvent(0) + 24);
  sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t AudioEngagementBeginEvent.channelData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AudioEngagementBeginEvent(0) + 24);
  sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*AudioEngagementBeginEvent.channelData.modify())()
{
  type metadata accessor for AudioEngagementBeginEvent(0);
  return nullsub_1;
}

uint64_t AudioEngagementBeginEvent.groupData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AudioEngagementBeginEvent(0) + 28);
  sub_1DC4B4B50(0, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t AudioEngagementBeginEvent.groupData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AudioEngagementBeginEvent(0) + 28);
  sub_1DC4B4B50(0, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*AudioEngagementBeginEvent.groupData.modify())()
{
  type metadata accessor for AudioEngagementBeginEvent(0);
  return nullsub_1;
}

uint64_t AudioEngagementBeginEvent.feedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AudioEngagementBeginEvent(0) + 32);
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t AudioEngagementBeginEvent.feedData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AudioEngagementBeginEvent(0) + 32);
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*AudioEngagementBeginEvent.feedData.modify())()
{
  type metadata accessor for AudioEngagementBeginEvent(0);
  return nullsub_1;
}

uint64_t AudioEngagementBeginEvent.trackData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AudioEngagementBeginEvent(0) + 36);
  sub_1DC4B4B50(0, &qword_1F0369510, (void (*)(void))sub_1DC4C9238, (void (*)(void))sub_1DC4C927C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t AudioEngagementBeginEvent.trackData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AudioEngagementBeginEvent(0) + 36);
  sub_1DC4B4B50(0, &qword_1F0369510, (void (*)(void))sub_1DC4C9238, (void (*)(void))sub_1DC4C927C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*AudioEngagementBeginEvent.trackData.modify())()
{
  type metadata accessor for AudioEngagementBeginEvent(0);
  return nullsub_1;
}

uint64_t AudioEngagementBeginEvent.audioEngagementData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AudioEngagementBeginEvent(0) + 40);
  sub_1DC4B4B50(0, &qword_1F0369528, (void (*)(void))sub_1DC4C94B0, (void (*)(void))sub_1DC4C94F4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t AudioEngagementBeginEvent.audioEngagementData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AudioEngagementBeginEvent(0) + 40);
  sub_1DC4B4B50(0, &qword_1F0369528, (void (*)(void))sub_1DC4C94B0, (void (*)(void))sub_1DC4C94F4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*AudioEngagementBeginEvent.audioEngagementData.modify())()
{
  type metadata accessor for AudioEngagementBeginEvent(0);
  return nullsub_1;
}

uint64_t AudioEngagementBeginEvent.viewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AudioEngagementBeginEvent(0) + 44);
  sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t AudioEngagementBeginEvent.viewData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AudioEngagementBeginEvent(0) + 44);
  sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*AudioEngagementBeginEvent.viewData.modify())()
{
  type metadata accessor for AudioEngagementBeginEvent(0);
  return nullsub_1;
}

uint64_t AudioEngagementBeginEvent.articleScienceData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AudioEngagementBeginEvent(0) + 48);
  sub_1DC4B4B50(0, &qword_1EDB0E270, (void (*)(void))sub_1DC4F48D4, (void (*)(void))sub_1DC4F4918);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t AudioEngagementBeginEvent.articleScienceData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AudioEngagementBeginEvent(0) + 48);
  sub_1DC4B4B50(0, &qword_1EDB0E270, (void (*)(void))sub_1DC4F48D4, (void (*)(void))sub_1DC4F4918);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*AudioEngagementBeginEvent.articleScienceData.modify())()
{
  type metadata accessor for AudioEngagementBeginEvent(0);
  return nullsub_1;
}

uint64_t AudioEngagementBeginEvent.issueData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AudioEngagementBeginEvent(0) + 52);
  sub_1DC4B4B50(0, &qword_1EDB0E868, (void (*)(void))sub_1DC4C9630, (void (*)(void))sub_1DC4C9674);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t AudioEngagementBeginEvent.issueData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AudioEngagementBeginEvent(0) + 52);
  sub_1DC4B4B50(0, &qword_1EDB0E868, (void (*)(void))sub_1DC4C9630, (void (*)(void))sub_1DC4C9674);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*AudioEngagementBeginEvent.issueData.modify())()
{
  type metadata accessor for AudioEngagementBeginEvent(0);
  return nullsub_1;
}

uint64_t AudioEngagementBeginEvent.playbackData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AudioEngagementBeginEvent(0) + 56);
  sub_1DC4B4B50(0, &qword_1F0369540, (void (*)(void))sub_1DC4C97B0, (void (*)(void))sub_1DC4C97F4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t AudioEngagementBeginEvent.playbackData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AudioEngagementBeginEvent(0) + 56);
  sub_1DC4B4B50(0, &qword_1F0369540, (void (*)(void))sub_1DC4C97B0, (void (*)(void))sub_1DC4C97F4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*AudioEngagementBeginEvent.playbackData.modify())()
{
  type metadata accessor for AudioEngagementBeginEvent(0);
  return nullsub_1;
}

uint64_t AudioEngagementBeginEvent.audioEngagementOriginationData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AudioEngagementBeginEvent(0) + 60);
  sub_1DC4B4B50(0, &qword_1F036AD08, (void (*)(void))sub_1DC50A54C, (void (*)(void))sub_1DC50A590);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t AudioEngagementBeginEvent.audioEngagementOriginationData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AudioEngagementBeginEvent(0) + 60);
  sub_1DC4B4B50(0, &qword_1F036AD08, (void (*)(void))sub_1DC50A54C, (void (*)(void))sub_1DC50A590);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*AudioEngagementBeginEvent.audioEngagementOriginationData.modify())()
{
  type metadata accessor for AudioEngagementBeginEvent(0);
  return nullsub_1;
}

uint64_t AudioEngagementBeginEvent.activeWatchlistData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AudioEngagementBeginEvent(0) + 64);
  sub_1DC4B4B50(0, &qword_1EDB0E790, (void (*)(void))sub_1DC4C9930, (void (*)(void))sub_1DC4C9974);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t AudioEngagementBeginEvent.activeWatchlistData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AudioEngagementBeginEvent(0) + 64);
  sub_1DC4B4B50(0, &qword_1EDB0E790, (void (*)(void))sub_1DC4C9930, (void (*)(void))sub_1DC4C9974);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*AudioEngagementBeginEvent.activeWatchlistData.modify())()
{
  type metadata accessor for AudioEngagementBeginEvent(0);
  return nullsub_1;
}

uint64_t AudioEngagementBeginEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v2 = *MEMORY[0x1E0CF8128];
  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
  v4 = (int *)type metadata accessor for AudioEngagementBeginEvent(0);
  v5 = a1 + v4[5];
  sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 104))(v5, v2, v6);
  v7 = a1 + v4[6];
  sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 104))(v7, v2, v8);
  v9 = a1 + v4[7];
  v10 = *MEMORY[0x1E0CF8120];
  sub_1DC4B4B50(0, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 104))(v9, v10, v11);
  v12 = a1 + v4[8];
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 104))(v12, v10, v13);
  v14 = a1 + v4[9];
  sub_1DC4B4B50(0, &qword_1F0369510, (void (*)(void))sub_1DC4C9238, (void (*)(void))sub_1DC4C927C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 104))(v14, v2, v15);
  v16 = a1 + v4[10];
  sub_1DC4B4B50(0, &qword_1F0369528, (void (*)(void))sub_1DC4C94B0, (void (*)(void))sub_1DC4C94F4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 104))(v16, v2, v17);
  v18 = a1 + v4[11];
  sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 104))(v18, v10, v19);
  v20 = a1 + v4[12];
  sub_1DC4B4B50(0, &qword_1EDB0E270, (void (*)(void))sub_1DC4F48D4, (void (*)(void))sub_1DC4F4918);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 104))(v20, v2, v21);
  v22 = a1 + v4[13];
  sub_1DC4B4B50(0, &qword_1EDB0E868, (void (*)(void))sub_1DC4C9630, (void (*)(void))sub_1DC4C9674);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 104))(v22, v10, v23);
  v24 = a1 + v4[14];
  sub_1DC4B4B50(0, &qword_1F0369540, (void (*)(void))sub_1DC4C97B0, (void (*)(void))sub_1DC4C97F4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 104))(v24, v2, v25);
  v26 = a1 + v4[15];
  sub_1DC4B4B50(0, &qword_1F036AD08, (void (*)(void))sub_1DC50A54C, (void (*)(void))sub_1DC50A590);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 104))(v26, v2, v27);
  v28 = a1 + v4[16];
  sub_1DC4B4B50(0, &qword_1EDB0E790, (void (*)(void))sub_1DC4C9930, (void (*)(void))sub_1DC4C9974);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 104))(v28, v10, v29);
}

uint64_t AudioEngagementBeginEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C37DC((uint64_t (*)(_QWORD))MEMORY[0x1E0CF8670], a1);
}

uint64_t AudioEngagementBeginEvent.Model.newsArticleData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  char v12;
  char v13;
  char v14;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for AudioEngagementBeginEvent.Model(0) + 20));
  v5 = *v3;
  v4 = v3[1];
  v6 = v3[2];
  v7 = v3[3];
  v8 = *((_BYTE *)v3 + 32);
  v9 = v3[5];
  v10 = *((_BYTE *)v3 + 48);
  v11 = v3[7];
  v12 = *((_BYTE *)v3 + 64);
  v13 = *((_BYTE *)v3 + 65);
  v14 = *((_BYTE *)v3 + 66);
  LOBYTE(v3) = *((_BYTE *)v3 + 67);
  *(_QWORD *)a1 = v5;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  *(_BYTE *)(a1 + 32) = v8;
  *(_QWORD *)(a1 + 40) = v9;
  *(_BYTE *)(a1 + 48) = v10;
  *(_QWORD *)(a1 + 56) = v11;
  *(_BYTE *)(a1 + 64) = v12;
  *(_BYTE *)(a1 + 65) = v13;
  *(_BYTE *)(a1 + 66) = v14;
  *(_BYTE *)(a1 + 67) = (_BYTE)v3;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t type metadata accessor for AudioEngagementBeginEvent.Model(uint64_t a1)
{
  return sub_1DC4B385C(a1, qword_1F036E1D8);
}

uint64_t AudioEngagementBeginEvent.Model.channelData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for AudioEngagementBeginEvent.Model(0) + 24));
  v5 = *v3;
  v4 = v3[1];
  v6 = v3[2];
  v7 = v3[3];
  v8 = *((_BYTE *)v3 + 32);
  LOBYTE(v3) = *((_BYTE *)v3 + 33);
  *(_QWORD *)a1 = v5;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  *(_BYTE *)(a1 + 32) = v8;
  *(_BYTE *)(a1 + 33) = (_BYTE)v3;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t AudioEngagementBeginEvent.Model.groupData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for AudioEngagementBeginEvent.Model(0) + 28));
  v4 = *v3;
  v5 = v3[1];
  v6 = v3[2];
  v7 = v3[3];
  v8 = v3[4];
  v9 = v3[5];
  *a1 = *v3;
  a1[1] = v5;
  a1[2] = v6;
  a1[3] = v7;
  a1[4] = v8;
  a1[5] = v9;
  return sub_1DC4C9EC0(v4, v5, v6);
}

uint64_t AudioEngagementBeginEvent.Model.feedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AudioEngagementBeginEvent.Model(0) + 32);
  v4 = *(_QWORD *)(v3 + 16);
  *(_OWORD *)a1 = *(_OWORD *)v3;
  *(_QWORD *)(a1 + 16) = v4;
  return swift_bridgeObjectRetain();
}

uint64_t AudioEngagementBeginEvent.Model.trackData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t result;
  int *v4;
  int v5;

  result = type metadata accessor for AudioEngagementBeginEvent.Model(0);
  v4 = (int *)(v1 + *(int *)(result + 36));
  v5 = *v4;
  LOBYTE(v4) = *((_BYTE *)v4 + 4);
  *(_DWORD *)a1 = v5;
  *(_BYTE *)(a1 + 4) = (_BYTE)v4;
  return result;
}

uint64_t AudioEngagementBeginEvent.Model.audioEngagementData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  char v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  __int16 v8;

  v3 = v1 + *(int *)(type metadata accessor for AudioEngagementBeginEvent.Model(0) + 40);
  v4 = *(_BYTE *)(v3 + 16);
  v5 = *(_DWORD *)(v3 + 20);
  v7 = *(_QWORD *)(v3 + 24);
  v6 = *(_QWORD *)(v3 + 32);
  v8 = *(_WORD *)(v3 + 40);
  *(_OWORD *)a1 = *(_OWORD *)v3;
  *(_BYTE *)(a1 + 16) = v4;
  *(_DWORD *)(a1 + 20) = v5;
  *(_QWORD *)(a1 + 24) = v7;
  *(_QWORD *)(a1 + 32) = v6;
  *(_WORD *)(a1 + 40) = v8;
  return swift_bridgeObjectRetain();
}

uint64_t AudioEngagementBeginEvent.Model.viewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for AudioEngagementBeginEvent.Model(0) + 44));
  v5 = *v3;
  v4 = v3[1];
  LOWORD(v3) = *((_WORD *)v3 + 8);
  *(_QWORD *)a1 = v5;
  *(_QWORD *)(a1 + 8) = v4;
  *(_WORD *)(a1 + 16) = (_WORD)v3;
  return swift_bridgeObjectRetain();
}

uint64_t AudioEngagementBeginEvent.Model.articleScienceData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  _OWORD v22[2];
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  uint64_t v33;

  v3 = v1 + *(int *)(type metadata accessor for AudioEngagementBeginEvent.Model(0) + 48);
  v4 = *(_OWORD *)(v3 + 144);
  v5 = *(_OWORD *)(v3 + 176);
  v31 = *(_OWORD *)(v3 + 160);
  v32 = v5;
  v6 = *(_OWORD *)(v3 + 80);
  v7 = *(_OWORD *)(v3 + 112);
  v27 = *(_OWORD *)(v3 + 96);
  v8 = v27;
  v28 = v7;
  v9 = *(_OWORD *)(v3 + 112);
  v10 = *(_OWORD *)(v3 + 144);
  v29 = *(_OWORD *)(v3 + 128);
  v11 = v29;
  v30 = v10;
  v12 = *(_OWORD *)(v3 + 48);
  v13 = *(_OWORD *)(v3 + 80);
  v25 = *(_OWORD *)(v3 + 64);
  v14 = v25;
  v26 = v13;
  v15 = *(_OWORD *)(v3 + 16);
  v16 = *(_OWORD *)(v3 + 48);
  v23 = *(_OWORD *)(v3 + 32);
  v17 = v23;
  v24 = v16;
  v18 = *(_OWORD *)(v3 + 16);
  v22[0] = *(_OWORD *)v3;
  v19 = v22[0];
  v22[1] = v18;
  v20 = *(_OWORD *)(v3 + 176);
  *(_OWORD *)(a1 + 160) = v31;
  *(_OWORD *)(a1 + 176) = v20;
  *(_OWORD *)(a1 + 96) = v8;
  *(_OWORD *)(a1 + 112) = v9;
  *(_OWORD *)(a1 + 128) = v11;
  *(_OWORD *)(a1 + 144) = v4;
  *(_OWORD *)(a1 + 32) = v17;
  *(_OWORD *)(a1 + 48) = v12;
  *(_OWORD *)(a1 + 64) = v14;
  *(_OWORD *)(a1 + 80) = v6;
  v33 = *(_QWORD *)(v3 + 192);
  *(_QWORD *)(a1 + 192) = *(_QWORD *)(v3 + 192);
  *(_OWORD *)a1 = v19;
  *(_OWORD *)(a1 + 16) = v15;
  return sub_1DC4F537C((uint64_t)v22);
}

uint64_t AudioEngagementBeginEvent.Model.issueData.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = (_QWORD *)(v1 + *(int *)(type metadata accessor for AudioEngagementBeginEvent.Model(0) + 52));
  v4 = v3[1];
  *a1 = *v3;
  a1[1] = v4;
  return swift_bridgeObjectRetain();
}

float AudioEngagementBeginEvent.Model.playbackData.getter@<S0>(float *a1@<X8>)
{
  uint64_t v1;
  float result;

  result = *(float *)(v1 + *(int *)(type metadata accessor for AudioEngagementBeginEvent.Model(0) + 56));
  *a1 = result;
  return result;
}

uint64_t AudioEngagementBeginEvent.Model.audioEngagementOriginationData.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for AudioEngagementBeginEvent.Model(0);
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 60));
  return result;
}

uint64_t AudioEngagementBeginEvent.Model.activeWatchlistData.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for AudioEngagementBeginEvent.Model(0);
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 64));
  return result;
}

__n128 AudioEngagementBeginEvent.Model.init(eventData:newsArticleData:channelData:groupData:feedData:trackData:audioEngagementData:viewData:articleScienceData:issueData:playbackData:audioEngagementOriginationData:activeWatchlistData:)@<Q0>(uint64_t a1@<X0>, __int128 *a2@<X1>, __int128 *a3@<X2>, __int128 *a4@<X3>, __int128 *a5@<X4>, int *a6@<X5>, uint64_t *a7@<X6>, uint64_t *a8@<X7>, uint64_t a9@<X8>, __int128 *a10, uint64_t *a11, int *a12, char *a13, char *a14)
{
  char v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  __int16 v24;
  uint64_t v25;
  int *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  __n128 result;
  _QWORD *v36;
  __int16 v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  char v41;
  char v42;
  char v43;
  uint64_t v44;
  __int128 v45;
  char v46;
  char v47;
  uint64_t v48;
  uint64_t v49;
  __int128 v50;
  uint64_t v51;
  uint64_t v52;
  __int128 v53;
  __int128 v54;
  uint64_t v55;
  __int128 v56;
  char v57;
  int v58;
  int v59;
  char v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char v65;
  char v66;
  __int128 v67;
  __n128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  uint64_t v79;

  v45 = *a2;
  v38 = *((_QWORD *)a2 + 3);
  v39 = *((_QWORD *)a2 + 2);
  v16 = *((_BYTE *)a2 + 32);
  v17 = *((_QWORD *)a2 + 5);
  v18 = *((_BYTE *)a2 + 48);
  v44 = *((_QWORD *)a2 + 7);
  v42 = *((_BYTE *)a2 + 65);
  v43 = *((_BYTE *)a2 + 64);
  v40 = *((_BYTE *)a2 + 67);
  v41 = *((_BYTE *)a2 + 66);
  v50 = *a3;
  v48 = *((_QWORD *)a3 + 3);
  v49 = *((_QWORD *)a3 + 2);
  v46 = *((_BYTE *)a3 + 33);
  v47 = *((_BYTE *)a3 + 32);
  v53 = a4[1];
  v54 = *a4;
  v51 = *((_QWORD *)a4 + 5);
  v52 = *((_QWORD *)a4 + 4);
  v56 = *a5;
  v55 = *((_QWORD *)a5 + 2);
  v57 = *((_BYTE *)a6 + 4);
  v58 = *a6;
  v61 = a7[1];
  v62 = *a7;
  v59 = *((_DWORD *)a7 + 5);
  v60 = *((_BYTE *)a7 + 16);
  v79 = *((_QWORD *)a10 + 24);
  v20 = a7[3];
  v19 = a7[4];
  v37 = *((_WORD *)a7 + 20);
  v77 = a10[10];
  v78 = a10[11];
  v73 = a10[6];
  v74 = a10[7];
  v75 = a10[8];
  v76 = a10[9];
  v69 = a10[2];
  v70 = a10[3];
  v71 = a10[4];
  v72 = a10[5];
  v67 = *a10;
  v68 = (__n128)a10[1];
  v21 = *a12;
  v23 = *a8;
  v22 = a8[1];
  v24 = *((_WORD *)a8 + 8);
  v63 = *a11;
  v64 = a11[1];
  v65 = *a13;
  v66 = *a14;
  v25 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 32))(a9, a1, v25);
  v26 = (int *)type metadata accessor for AudioEngagementBeginEvent.Model(0);
  v27 = a9 + v26[5];
  *(_QWORD *)(v27 + 16) = v39;
  *(_QWORD *)(v27 + 24) = v38;
  *(_BYTE *)(v27 + 32) = v16;
  *(_QWORD *)(v27 + 40) = v17;
  *(_BYTE *)(v27 + 48) = v18;
  *(_OWORD *)v27 = v45;
  *(_QWORD *)(v27 + 56) = v44;
  *(_BYTE *)(v27 + 64) = v43;
  *(_BYTE *)(v27 + 65) = v42;
  *(_BYTE *)(v27 + 66) = v41;
  *(_BYTE *)(v27 + 67) = v40;
  v28 = a9 + v26[6];
  *(_OWORD *)v28 = v50;
  *(_QWORD *)(v28 + 16) = v49;
  *(_QWORD *)(v28 + 24) = v48;
  *(_BYTE *)(v28 + 32) = v47;
  *(_BYTE *)(v28 + 33) = v46;
  v29 = a9 + v26[7];
  *(_OWORD *)v29 = v54;
  *(_OWORD *)(v29 + 16) = v53;
  *(_QWORD *)(v29 + 32) = v52;
  *(_QWORD *)(v29 + 40) = v51;
  v30 = a9 + v26[8];
  *(_OWORD *)v30 = v56;
  *(_QWORD *)(v30 + 16) = v55;
  v31 = a9 + v26[9];
  *(_DWORD *)v31 = v58;
  *(_BYTE *)(v31 + 4) = v57;
  v32 = a9 + v26[10];
  *(_QWORD *)v32 = v62;
  *(_QWORD *)(v32 + 8) = v61;
  *(_BYTE *)(v32 + 16) = v60;
  *(_DWORD *)(v32 + 20) = v59;
  *(_QWORD *)(v32 + 24) = v20;
  *(_QWORD *)(v32 + 32) = v19;
  *(_WORD *)(v32 + 40) = v37;
  v33 = a9 + v26[11];
  *(_QWORD *)v33 = v23;
  *(_QWORD *)(v33 + 8) = v22;
  *(_WORD *)(v33 + 16) = v24;
  v34 = a9 + v26[12];
  *(_QWORD *)(v34 + 192) = v79;
  *(_OWORD *)(v34 + 160) = v77;
  *(_OWORD *)(v34 + 176) = v78;
  *(_OWORD *)(v34 + 96) = v73;
  *(_OWORD *)(v34 + 112) = v74;
  *(_OWORD *)(v34 + 128) = v75;
  *(_OWORD *)(v34 + 144) = v76;
  *(_OWORD *)(v34 + 32) = v69;
  *(_OWORD *)(v34 + 48) = v70;
  *(_OWORD *)(v34 + 64) = v71;
  *(_OWORD *)(v34 + 80) = v72;
  result = v68;
  *(_OWORD *)v34 = v67;
  *(__n128 *)(v34 + 16) = v68;
  v36 = (_QWORD *)(a9 + v26[13]);
  *v36 = v63;
  v36[1] = v64;
  *(_DWORD *)(a9 + v26[14]) = v21;
  *(_BYTE *)(a9 + v26[15]) = v65;
  *(_BYTE *)(a9 + v26[16]) = v66;
  return result;
}

uint64_t sub_1DC5A4F64(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1DC5A4F9C + 4 * byte_1DC63FB20[a1]))(0x746144746E657665, 0xE900000000000061);
}

uint64_t sub_1DC5A4F9C()
{
  return 0x697472417377656ELL;
}

uint64_t sub_1DC5A4FC0()
{
  return 0x446C656E6E616863;
}

uint64_t sub_1DC5A4FE0()
{
  return 0x74614470756F7267;
}

uint64_t sub_1DC5A4FF4()
{
  return 0x6174614464656566;
}

unint64_t sub_1DC5A503C()
{
  return 0xD000000000000012;
}

uint64_t sub_1DC5A50C4()
{
  unsigned __int8 *v0;

  return sub_1DC5A4F64(*v0);
}

uint64_t sub_1DC5A50CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1DC5A9C10(a1, a2);
  *a3 = result;
  return result;
}

void sub_1DC5A50F0(_BYTE *a1@<X8>)
{
  *a1 = 13;
}

uint64_t sub_1DC5A50FC()
{
  sub_1DC5A5754();
  return sub_1DC62B604();
}

uint64_t sub_1DC5A5124()
{
  sub_1DC5A5754();
  return sub_1DC62B610();
}

uint64_t AudioEngagementBeginEvent.Model.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int *v10;
  __int128 *v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  char v19;
  char v20;
  char v21;
  __int128 *v22;
  __int128 v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  __int128 *v27;
  __int128 v28;
  __int128 *v29;
  uint64_t v30;
  int *v31;
  int v32;
  __int128 *v33;
  char v34;
  int v35;
  uint64_t v36;
  uint64_t v37;
  __int16 v38;
  __int128 *v39;
  __int16 v40;
  __int128 *v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  uint64_t v49;
  char v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  uint64_t v63;
  char v64;
  __int128 v65;
  __int16 v66;

  v3 = v1;
  sub_1DC5A62C0(0, &qword_1F036E0A8, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v49 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC5A5754();
  sub_1DC62B5F8();
  LOBYTE(v51) = 0;
  sub_1DC62ABA8();
  sub_1DC4B6788(&qword_1EDB0E8A8, MEMORY[0x1E0CF8680]);
  sub_1DC62B4E4();
  if (!v2)
  {
    v10 = (int *)type metadata accessor for AudioEngagementBeginEvent.Model(0);
    v11 = (__int128 *)(v3 + v10[5]);
    v12 = *v11;
    v13 = *((_QWORD *)v11 + 2);
    v14 = *((_QWORD *)v11 + 3);
    v15 = *((_BYTE *)v11 + 32);
    v16 = *((_QWORD *)v11 + 5);
    v17 = *((_BYTE *)v11 + 48);
    v18 = *((_QWORD *)v11 + 7);
    v19 = *((_BYTE *)v11 + 64);
    v20 = *((_BYTE *)v11 + 65);
    v21 = *((_BYTE *)v11 + 66);
    LOBYTE(v11) = *((_BYTE *)v11 + 67);
    v51 = v12;
    *(_QWORD *)&v52 = v13;
    *((_QWORD *)&v52 + 1) = v14;
    LOBYTE(v53) = v15;
    *((_QWORD *)&v53 + 1) = v16;
    LOBYTE(v54) = v17;
    *((_QWORD *)&v54 + 1) = v18;
    LOBYTE(v55) = v19;
    BYTE1(v55) = v20;
    BYTE2(v55) = v21;
    BYTE3(v55) = (_BYTE)v11;
    LOBYTE(v65) = 1;
    sub_1DC4C18E8();
    sub_1DC62B4E4();
    v22 = (__int128 *)(v3 + v10[6]);
    v23 = *v22;
    v24 = *((_QWORD *)v22 + 2);
    v25 = *((_QWORD *)v22 + 3);
    v26 = *((_BYTE *)v22 + 32);
    LOBYTE(v22) = *((_BYTE *)v22 + 33);
    v51 = v23;
    *(_QWORD *)&v52 = v24;
    *((_QWORD *)&v52 + 1) = v25;
    LOBYTE(v53) = v26;
    BYTE1(v53) = (_BYTE)v22;
    LOBYTE(v65) = 2;
    sub_1DC4C8E84();
    sub_1DC62B4E4();
    v27 = (__int128 *)(v3 + v10[7]);
    v28 = v27[1];
    v51 = *v27;
    v52 = v28;
    v53 = v27[2];
    LOBYTE(v65) = 3;
    sub_1DC4C9004();
    sub_1DC62B490();
    v29 = (__int128 *)(v3 + v10[8]);
    v30 = *((_QWORD *)v29 + 2);
    v51 = *v29;
    *(_QWORD *)&v52 = v30;
    LOBYTE(v65) = 4;
    sub_1DC4BEFD8();
    sub_1DC62B490();
    v31 = (int *)(v3 + v10[9]);
    v32 = *v31;
    LOBYTE(v31) = *((_BYTE *)v31 + 4);
    LODWORD(v51) = v32;
    BYTE4(v51) = (_BYTE)v31;
    LOBYTE(v65) = 5;
    sub_1DC4C927C();
    sub_1DC62B4E4();
    v33 = (__int128 *)(v3 + v10[10]);
    v34 = *((_BYTE *)v33 + 16);
    v35 = *((_DWORD *)v33 + 5);
    v36 = *((_QWORD *)v33 + 3);
    v37 = *((_QWORD *)v33 + 4);
    v38 = *((_WORD *)v33 + 20);
    v51 = *v33;
    LOBYTE(v52) = v34;
    DWORD1(v52) = v35;
    *((_QWORD *)&v52 + 1) = v36;
    *(_QWORD *)&v53 = v37;
    WORD4(v53) = v38;
    LOBYTE(v65) = 6;
    sub_1DC4C94F4();
    sub_1DC62B4E4();
    v39 = (__int128 *)(v3 + v10[11]);
    v40 = *((_WORD *)v39 + 8);
    v65 = *v39;
    v66 = v40;
    v64 = 7;
    sub_1DC4BEDF0();
    sub_1DC62B490();
    v41 = (__int128 *)(v3 + v10[12]);
    v42 = v41[11];
    v61 = v41[10];
    v62 = v42;
    v63 = *((_QWORD *)v41 + 24);
    v43 = v41[7];
    v57 = v41[6];
    v58 = v43;
    v44 = v41[9];
    v59 = v41[8];
    v60 = v44;
    v45 = v41[3];
    v53 = v41[2];
    v54 = v45;
    v46 = v41[5];
    v55 = v41[4];
    v56 = v46;
    v47 = *v41;
    v52 = v41[1];
    v51 = v47;
    v50 = 8;
    sub_1DC4F4918();
    sub_1DC62B4E4();
    v51 = *(_OWORD *)(v3 + v10[13]);
    v50 = 9;
    sub_1DC4C9674();
    sub_1DC62B490();
    LODWORD(v51) = *(_DWORD *)(v3 + v10[14]);
    v50 = 10;
    sub_1DC4C97F4();
    sub_1DC62B4E4();
    LOBYTE(v51) = *(_BYTE *)(v3 + v10[15]);
    v50 = 11;
    sub_1DC50A590();
    sub_1DC62B4E4();
    LOBYTE(v51) = *(_BYTE *)(v3 + v10[16]);
    v50 = 12;
    sub_1DC4C9974();
    sub_1DC62B490();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1DC5A5754()
{
  unint64_t result;

  result = qword_1F036E0B0;
  if (!qword_1F036E0B0)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC63FE64, &type metadata for AudioEngagementBeginEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036E0B0);
  }
  return result;
}

uint64_t AudioEngagementBeginEvent.Model.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  char *v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  char *v22;
  int *v23;
  __int128 v24;
  char v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  char v29;
  char v30;
  char v31;
  char v32;
  char *v33;
  __int128 v34;
  char v35;
  char v36;
  char *v37;
  char *v38;
  __int128 v39;
  uint64_t v40;
  char *v41;
  char v42;
  char *v43;
  char v44;
  int v45;
  uint64_t v46;
  uint64_t v47;
  __int16 v48;
  char *v49;
  __int16 v50;
  char *v51;
  char *v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  int *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  int v70;
  _QWORD *v71;
  uint64_t v72;
  char *v73;
  char v74;
  __int128 v75;
  char v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  __int128 v82;
  __int128 v83;
  __int128 v84;
  __int128 v85;
  __int128 v86;
  __int128 v87;
  __int128 v88;
  uint64_t v89;
  int *v90;

  v5 = sub_1DC62ABA8();
  v69 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v65 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC5A62C0(0, &qword_1F036E0B8, MEMORY[0x1E0DED048]);
  v67 = v8;
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v65 - v10;
  v90 = (int *)type metadata accessor for AudioEngagementBeginEvent.Model(0);
  MEMORY[0x1E0C80A78](v90);
  v73 = (char *)&v65 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = a1[3];
  v71 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v13);
  sub_1DC5A5754();
  sub_1DC62B5E0();
  v68 = v5;
  if (v2)
  {
    v72 = v2;
    result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v71);
    v70 = 0;
  }
  else
  {
    v66 = v9;
    v65 = a2;
    LOBYTE(v77) = 0;
    sub_1DC4B6788(&qword_1EDB0E278, MEMORY[0x1E0CF8688]);
    sub_1DC62B454();
    v22 = v73;
    (*(void (**)(char *, char *, uint64_t))(v69 + 32))(v73, v7, v5);
    LOBYTE(v75) = 1;
    sub_1DC4C18A0();
    sub_1DC62B454();
    v23 = v90;
    v24 = v78;
    v25 = v79;
    v26 = *((_QWORD *)&v79 + 1);
    v27 = v80;
    v28 = *((_QWORD *)&v80 + 1);
    v29 = v81;
    v30 = BYTE1(v81);
    v31 = BYTE2(v81);
    v32 = BYTE3(v81);
    v33 = &v22[v90[5]];
    *(_OWORD *)v33 = v77;
    *((_OWORD *)v33 + 1) = v24;
    v33[32] = v25;
    *((_QWORD *)v33 + 5) = v26;
    v33[48] = v27;
    *((_QWORD *)v33 + 7) = v28;
    v33[64] = v29;
    v33[65] = v30;
    v33[66] = v31;
    v33[67] = v32;
    LOBYTE(v75) = 2;
    sub_1DC4C8E40();
    sub_1DC62B454();
    v34 = v78;
    v35 = v79;
    v36 = BYTE1(v79);
    v37 = &v22[v23[6]];
    *(_OWORD *)v37 = v77;
    *((_OWORD *)v37 + 1) = v34;
    v37[32] = v35;
    v37[33] = v36;
    LOBYTE(v75) = 3;
    sub_1DC4C8FC0();
    sub_1DC62B400();
    v38 = &v22[v23[7]];
    v39 = v78;
    *(_OWORD *)v38 = v77;
    *((_OWORD *)v38 + 1) = v39;
    *((_OWORD *)v38 + 2) = v79;
    LOBYTE(v75) = 4;
    sub_1DC4BEF94();
    sub_1DC62B400();
    v40 = v78;
    v41 = &v22[v23[8]];
    *(_OWORD *)v41 = v77;
    *((_QWORD *)v41 + 2) = v40;
    LOBYTE(v75) = 5;
    sub_1DC4C9238();
    sub_1DC62B454();
    v42 = BYTE4(v77);
    v43 = &v22[v23[9]];
    *(_DWORD *)v43 = v77;
    v43[4] = v42;
    LOBYTE(v75) = 6;
    sub_1DC4C94B0();
    sub_1DC62B454();
    v44 = v78;
    v45 = DWORD1(v78);
    v46 = *((_QWORD *)&v78 + 1);
    v47 = v79;
    v48 = WORD4(v79);
    v49 = &v22[v23[10]];
    *(_OWORD *)v49 = v77;
    v49[16] = v44;
    *((_DWORD *)v49 + 5) = v45;
    *((_QWORD *)v49 + 3) = v46;
    *((_QWORD *)v49 + 4) = v47;
    *((_WORD *)v49 + 20) = v48;
    LOBYTE(v75) = 7;
    sub_1DC4BEDAC();
    sub_1DC62B400();
    v50 = v78;
    v51 = &v22[v23[11]];
    *(_OWORD *)v51 = v77;
    *((_WORD *)v51 + 8) = v50;
    v76 = 8;
    sub_1DC4F48D4();
    sub_1DC62B454();
    v52 = &v22[v23[12]];
    v53 = v88;
    *((_OWORD *)v52 + 10) = v87;
    *((_OWORD *)v52 + 11) = v53;
    *((_QWORD *)v52 + 24) = v89;
    v54 = v84;
    *((_OWORD *)v52 + 6) = v83;
    *((_OWORD *)v52 + 7) = v54;
    v55 = v86;
    *((_OWORD *)v52 + 8) = v85;
    *((_OWORD *)v52 + 9) = v55;
    v56 = v80;
    *((_OWORD *)v52 + 2) = v79;
    *((_OWORD *)v52 + 3) = v56;
    v57 = v82;
    *((_OWORD *)v52 + 4) = v81;
    *((_OWORD *)v52 + 5) = v57;
    v58 = v78;
    *(_OWORD *)v52 = v77;
    *((_OWORD *)v52 + 1) = v58;
    v74 = 9;
    sub_1DC4C9630();
    sub_1DC62B400();
    v70 = 1;
    v72 = 0;
    *(_OWORD *)&v73[v90[13]] = v75;
    v74 = 10;
    sub_1DC4C97B0();
    v59 = v72;
    sub_1DC62B454();
    v72 = v59;
    if (v59)
      goto LABEL_10;
    *(_DWORD *)&v73[v90[14]] = v75;
    v74 = 11;
    sub_1DC50A54C();
    v60 = v72;
    sub_1DC62B454();
    v72 = v60;
    if (v60 || (v73[v90[15]] = v75, v74 = 12, sub_1DC4C9930(), v61 = v72, sub_1DC62B400(), (v72 = v61) != 0))
    {
LABEL_10:
      (*(void (**)(char *, uint64_t))(v66 + 8))(v11, v67);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v71);
      v62 = v73;
      (*(void (**)(char *, uint64_t))(v69 + 8))(v73, v68);
      v63 = v90;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1DC4CB1B4(*(_QWORD *)&v62[v63[7]], *(_QWORD *)&v62[v63[7] + 8], *(_QWORD *)&v62[v63[7] + 16]);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v15 = &v62[v63[12]];
      v16 = *((_OWORD *)v15 + 11);
      v87 = *((_OWORD *)v15 + 10);
      v88 = v16;
      v89 = *((_QWORD *)v15 + 24);
      v17 = *((_OWORD *)v15 + 7);
      v83 = *((_OWORD *)v15 + 6);
      v84 = v17;
      v18 = *((_OWORD *)v15 + 9);
      v85 = *((_OWORD *)v15 + 8);
      v86 = v18;
      v19 = *((_OWORD *)v15 + 3);
      v79 = *((_OWORD *)v15 + 2);
      v20 = *((_OWORD *)v15 + 4);
      v82 = *((_OWORD *)v15 + 5);
      v80 = v19;
      v81 = v20;
      v21 = *(_OWORD *)v15;
      v78 = *((_OWORD *)v15 + 1);
      v77 = v21;
      result = sub_1DC4F6710((uint64_t)&v77);
      if ((v70 & 1) != 0)
        return swift_bridgeObjectRelease();
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v66 + 8))(v11, v67);
      v64 = (uint64_t)v73;
      v73[v90[16]] = v75;
      sub_1DC5A631C(v64, v65);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v71);
      return sub_1DC5A6360(v64);
    }
  }
  return result;
}

void sub_1DC5A62C0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1DC5A5754();
    v7 = a3(a1, &type metadata for AudioEngagementBeginEvent.Model.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1DC5A631C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for AudioEngagementBeginEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DC5A6360(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for AudioEngagementBeginEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1DC5A639C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return AudioEngagementBeginEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_1DC5A63B0(_QWORD *a1)
{
  return AudioEngagementBeginEvent.Model.encode(to:)(a1);
}

uint64_t sub_1DC5A63C4@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4B2C68(&qword_1F0369120, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1F036E078, a1);
}

uint64_t sub_1DC5A63E8@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4B2C68(&qword_1F0369128, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1F036E090, a1);
}

uint64_t sub_1DC5A640C@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v4 = *MEMORY[0x1E0CF8128];
  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 104))(a2, v4, v5);
  v6 = a2 + a1[5];
  sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 104))(v6, v4, v7);
  v8 = a2 + a1[6];
  sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 104))(v8, v4, v9);
  v10 = a2 + a1[7];
  v11 = *MEMORY[0x1E0CF8120];
  sub_1DC4B4B50(0, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 104))(v10, v11, v12);
  v13 = a2 + a1[8];
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 104))(v13, v11, v14);
  v15 = a2 + a1[9];
  sub_1DC4B4B50(0, &qword_1F0369510, (void (*)(void))sub_1DC4C9238, (void (*)(void))sub_1DC4C927C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 104))(v15, v4, v16);
  v17 = a2 + a1[10];
  sub_1DC4B4B50(0, &qword_1F0369528, (void (*)(void))sub_1DC4C94B0, (void (*)(void))sub_1DC4C94F4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 104))(v17, v4, v18);
  v19 = a2 + a1[11];
  sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 104))(v19, v11, v20);
  v21 = a2 + a1[12];
  sub_1DC4B4B50(0, &qword_1EDB0E270, (void (*)(void))sub_1DC4F48D4, (void (*)(void))sub_1DC4F4918);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 104))(v21, v4, v22);
  v23 = a2 + a1[13];
  sub_1DC4B4B50(0, &qword_1EDB0E868, (void (*)(void))sub_1DC4C9630, (void (*)(void))sub_1DC4C9674);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 104))(v23, v11, v24);
  v25 = a2 + a1[14];
  sub_1DC4B4B50(0, &qword_1F0369540, (void (*)(void))sub_1DC4C97B0, (void (*)(void))sub_1DC4C97F4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 104))(v25, v4, v26);
  v27 = a2 + a1[15];
  sub_1DC4B4B50(0, &qword_1F036AD08, (void (*)(void))sub_1DC50A54C, (void (*)(void))sub_1DC50A590);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 104))(v27, v4, v28);
  v29 = a2 + a1[16];
  sub_1DC4B4B50(0, &qword_1EDB0E790, (void (*)(void))sub_1DC4C9930, (void (*)(void))sub_1DC4C9974);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 104))(v29, v11, v30);
}

uint64_t *initializeBufferWithCopyOfBuffer for AudioEngagementBeginEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v56 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v56 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_1DC4B6600();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = a3[6];
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
    v16 = a3[7];
    v17 = (char *)a1 + v16;
    v18 = (char *)a2 + v16;
    sub_1DC4B4B50(0, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
    v20 = a3[8];
    v21 = (char *)a1 + v20;
    v22 = (char *)a2 + v20;
    sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v21, v22, v23);
    v24 = a3[9];
    v25 = (char *)a1 + v24;
    v26 = (char *)a2 + v24;
    sub_1DC4B4B50(0, &qword_1F0369510, (void (*)(void))sub_1DC4C9238, (void (*)(void))sub_1DC4C927C);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v25, v26, v27);
    v28 = a3[10];
    v29 = (char *)a1 + v28;
    v30 = (char *)a2 + v28;
    sub_1DC4B4B50(0, &qword_1F0369528, (void (*)(void))sub_1DC4C94B0, (void (*)(void))sub_1DC4C94F4);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 16))(v29, v30, v31);
    v32 = a3[11];
    v33 = (char *)a1 + v32;
    v34 = (char *)a2 + v32;
    sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 16))(v33, v34, v35);
    v36 = a3[12];
    v37 = (char *)a1 + v36;
    v38 = (char *)a2 + v36;
    sub_1DC4B4B50(0, &qword_1EDB0E270, (void (*)(void))sub_1DC4F48D4, (void (*)(void))sub_1DC4F4918);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 16))(v37, v38, v39);
    v40 = a3[13];
    v41 = (char *)a1 + v40;
    v42 = (char *)a2 + v40;
    sub_1DC4B4B50(0, &qword_1EDB0E868, (void (*)(void))sub_1DC4C9630, (void (*)(void))sub_1DC4C9674);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v43 - 8) + 16))(v41, v42, v43);
    v44 = a3[14];
    v45 = (char *)a1 + v44;
    v46 = (char *)a2 + v44;
    sub_1DC4B4B50(0, &qword_1F0369540, (void (*)(void))sub_1DC4C97B0, (void (*)(void))sub_1DC4C97F4);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v47 - 8) + 16))(v45, v46, v47);
    v48 = a3[15];
    v49 = (char *)a1 + v48;
    v50 = (char *)a2 + v48;
    sub_1DC4B4B50(0, &qword_1F036AD08, (void (*)(void))sub_1DC50A54C, (void (*)(void))sub_1DC50A590);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v51 - 8) + 16))(v49, v50, v51);
    v52 = a3[16];
    v53 = (char *)a1 + v52;
    v54 = (char *)a2 + v52;
    sub_1DC4B4B50(0, &qword_1EDB0E790, (void (*)(void))sub_1DC4C9930, (void (*)(void))sub_1DC4C9974);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v55 - 8) + 16))(v53, v54, v55);
  }
  return a1;
}

uint64_t destroy for AudioEngagementBeginEvent(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + a2[5];
  sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = a1 + a2[6];
  sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  v9 = a1 + a2[7];
  sub_1DC4B4B50(0, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  v11 = a1 + a2[8];
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
  v13 = a1 + a2[9];
  sub_1DC4B4B50(0, &qword_1F0369510, (void (*)(void))sub_1DC4C9238, (void (*)(void))sub_1DC4C927C);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v13, v14);
  v15 = a1 + a2[10];
  sub_1DC4B4B50(0, &qword_1F0369528, (void (*)(void))sub_1DC4C94B0, (void (*)(void))sub_1DC4C94F4);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v15, v16);
  v17 = a1 + a2[11];
  sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(v17, v18);
  v19 = a1 + a2[12];
  sub_1DC4B4B50(0, &qword_1EDB0E270, (void (*)(void))sub_1DC4F48D4, (void (*)(void))sub_1DC4F4918);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 8))(v19, v20);
  v21 = a1 + a2[13];
  sub_1DC4B4B50(0, &qword_1EDB0E868, (void (*)(void))sub_1DC4C9630, (void (*)(void))sub_1DC4C9674);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 8))(v21, v22);
  v23 = a1 + a2[14];
  sub_1DC4B4B50(0, &qword_1F0369540, (void (*)(void))sub_1DC4C97B0, (void (*)(void))sub_1DC4C97F4);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 8))(v23, v24);
  v25 = a1 + a2[15];
  sub_1DC4B4B50(0, &qword_1F036AD08, (void (*)(void))sub_1DC50A54C, (void (*)(void))sub_1DC50A590);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 8))(v25, v26);
  v27 = a1 + a2[16];
  sub_1DC4B4B50(0, &qword_1EDB0E790, (void (*)(void))sub_1DC4C9930, (void (*)(void))sub_1DC4C9974);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 8))(v27, v28);
}

uint64_t initializeWithCopy for AudioEngagementBeginEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1DC4B4B50(0, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1DC4B4B50(0, &qword_1F0369510, (void (*)(void))sub_1DC4C9238, (void (*)(void))sub_1DC4C927C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1DC4B4B50(0, &qword_1F0369528, (void (*)(void))sub_1DC4C94B0, (void (*)(void))sub_1DC4C94F4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 16))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 16))(v32, v33, v34);
  v35 = a3[12];
  v36 = a1 + v35;
  v37 = a2 + v35;
  sub_1DC4B4B50(0, &qword_1EDB0E270, (void (*)(void))sub_1DC4F48D4, (void (*)(void))sub_1DC4F4918);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 16))(v36, v37, v38);
  v39 = a3[13];
  v40 = a1 + v39;
  v41 = a2 + v39;
  sub_1DC4B4B50(0, &qword_1EDB0E868, (void (*)(void))sub_1DC4C9630, (void (*)(void))sub_1DC4C9674);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 16))(v40, v41, v42);
  v43 = a3[14];
  v44 = a1 + v43;
  v45 = a2 + v43;
  sub_1DC4B4B50(0, &qword_1F0369540, (void (*)(void))sub_1DC4C97B0, (void (*)(void))sub_1DC4C97F4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 16))(v44, v45, v46);
  v47 = a3[15];
  v48 = a1 + v47;
  v49 = a2 + v47;
  sub_1DC4B4B50(0, &qword_1F036AD08, (void (*)(void))sub_1DC50A54C, (void (*)(void))sub_1DC50A590);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 16))(v48, v49, v50);
  v51 = a3[16];
  v52 = a1 + v51;
  v53 = a2 + v51;
  sub_1DC4B4B50(0, &qword_1EDB0E790, (void (*)(void))sub_1DC4C9930, (void (*)(void))sub_1DC4C9974);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v54 - 8) + 16))(v52, v53, v54);
  return a1;
}

uint64_t assignWithCopy for AudioEngagementBeginEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 24))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1DC4B4B50(0, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 24))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 24))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1DC4B4B50(0, &qword_1F0369510, (void (*)(void))sub_1DC4C9238, (void (*)(void))sub_1DC4C927C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 24))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1DC4B4B50(0, &qword_1F0369528, (void (*)(void))sub_1DC4C94B0, (void (*)(void))sub_1DC4C94F4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 24))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 24))(v32, v33, v34);
  v35 = a3[12];
  v36 = a1 + v35;
  v37 = a2 + v35;
  sub_1DC4B4B50(0, &qword_1EDB0E270, (void (*)(void))sub_1DC4F48D4, (void (*)(void))sub_1DC4F4918);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 24))(v36, v37, v38);
  v39 = a3[13];
  v40 = a1 + v39;
  v41 = a2 + v39;
  sub_1DC4B4B50(0, &qword_1EDB0E868, (void (*)(void))sub_1DC4C9630, (void (*)(void))sub_1DC4C9674);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 24))(v40, v41, v42);
  v43 = a3[14];
  v44 = a1 + v43;
  v45 = a2 + v43;
  sub_1DC4B4B50(0, &qword_1F0369540, (void (*)(void))sub_1DC4C97B0, (void (*)(void))sub_1DC4C97F4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 24))(v44, v45, v46);
  v47 = a3[15];
  v48 = a1 + v47;
  v49 = a2 + v47;
  sub_1DC4B4B50(0, &qword_1F036AD08, (void (*)(void))sub_1DC50A54C, (void (*)(void))sub_1DC50A590);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 24))(v48, v49, v50);
  v51 = a3[16];
  v52 = a1 + v51;
  v53 = a2 + v51;
  sub_1DC4B4B50(0, &qword_1EDB0E790, (void (*)(void))sub_1DC4C9930, (void (*)(void))sub_1DC4C9974);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v54 - 8) + 24))(v52, v53, v54);
  return a1;
}

uint64_t initializeWithTake for AudioEngagementBeginEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1DC4B4B50(0, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1DC4B4B50(0, &qword_1F0369510, (void (*)(void))sub_1DC4C9238, (void (*)(void))sub_1DC4C927C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1DC4B4B50(0, &qword_1F0369528, (void (*)(void))sub_1DC4C94B0, (void (*)(void))sub_1DC4C94F4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 32))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 32))(v32, v33, v34);
  v35 = a3[12];
  v36 = a1 + v35;
  v37 = a2 + v35;
  sub_1DC4B4B50(0, &qword_1EDB0E270, (void (*)(void))sub_1DC4F48D4, (void (*)(void))sub_1DC4F4918);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 32))(v36, v37, v38);
  v39 = a3[13];
  v40 = a1 + v39;
  v41 = a2 + v39;
  sub_1DC4B4B50(0, &qword_1EDB0E868, (void (*)(void))sub_1DC4C9630, (void (*)(void))sub_1DC4C9674);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 32))(v40, v41, v42);
  v43 = a3[14];
  v44 = a1 + v43;
  v45 = a2 + v43;
  sub_1DC4B4B50(0, &qword_1F0369540, (void (*)(void))sub_1DC4C97B0, (void (*)(void))sub_1DC4C97F4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 32))(v44, v45, v46);
  v47 = a3[15];
  v48 = a1 + v47;
  v49 = a2 + v47;
  sub_1DC4B4B50(0, &qword_1F036AD08, (void (*)(void))sub_1DC50A54C, (void (*)(void))sub_1DC50A590);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 32))(v48, v49, v50);
  v51 = a3[16];
  v52 = a1 + v51;
  v53 = a2 + v51;
  sub_1DC4B4B50(0, &qword_1EDB0E790, (void (*)(void))sub_1DC4C9930, (void (*)(void))sub_1DC4C9974);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v54 - 8) + 32))(v52, v53, v54);
  return a1;
}

uint64_t assignWithTake for AudioEngagementBeginEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 40))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1DC4B4B50(0, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 40))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 40))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1DC4B4B50(0, &qword_1F0369510, (void (*)(void))sub_1DC4C9238, (void (*)(void))sub_1DC4C927C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 40))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1DC4B4B50(0, &qword_1F0369528, (void (*)(void))sub_1DC4C94B0, (void (*)(void))sub_1DC4C94F4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 40))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 40))(v32, v33, v34);
  v35 = a3[12];
  v36 = a1 + v35;
  v37 = a2 + v35;
  sub_1DC4B4B50(0, &qword_1EDB0E270, (void (*)(void))sub_1DC4F48D4, (void (*)(void))sub_1DC4F4918);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 40))(v36, v37, v38);
  v39 = a3[13];
  v40 = a1 + v39;
  v41 = a2 + v39;
  sub_1DC4B4B50(0, &qword_1EDB0E868, (void (*)(void))sub_1DC4C9630, (void (*)(void))sub_1DC4C9674);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 40))(v40, v41, v42);
  v43 = a3[14];
  v44 = a1 + v43;
  v45 = a2 + v43;
  sub_1DC4B4B50(0, &qword_1F0369540, (void (*)(void))sub_1DC4C97B0, (void (*)(void))sub_1DC4C97F4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 40))(v44, v45, v46);
  v47 = a3[15];
  v48 = a1 + v47;
  v49 = a2 + v47;
  sub_1DC4B4B50(0, &qword_1F036AD08, (void (*)(void))sub_1DC50A54C, (void (*)(void))sub_1DC50A590);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 40))(v48, v49, v50);
  v51 = a3[16];
  v52 = a1 + v51;
  v53 = a2 + v51;
  sub_1DC4B4B50(0, &qword_1EDB0E790, (void (*)(void))sub_1DC4C9930, (void (*)(void))sub_1DC4C9974);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v54 - 8) + 40))(v52, v53, v54);
  return a1;
}

uint64_t getEnumTagSinglePayload for AudioEngagementBeginEvent()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC5A7F00(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  sub_1DC4B6600();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
    v12 = *(_QWORD *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
    {
      v8 = v11;
      v13 = a3[5];
    }
    else
    {
      sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
      v12 = *(_QWORD *)(v14 - 8);
      if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
      {
        v8 = v14;
        v13 = a3[6];
      }
      else
      {
        sub_1DC4B4B50(0, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
        v12 = *(_QWORD *)(v15 - 8);
        if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
        {
          v8 = v15;
          v13 = a3[7];
        }
        else
        {
          sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
          v12 = *(_QWORD *)(v16 - 8);
          if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
          {
            v8 = v16;
            v13 = a3[8];
          }
          else
          {
            sub_1DC4B4B50(0, &qword_1F0369510, (void (*)(void))sub_1DC4C9238, (void (*)(void))sub_1DC4C927C);
            v12 = *(_QWORD *)(v17 - 8);
            if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
            {
              v8 = v17;
              v13 = a3[9];
            }
            else
            {
              sub_1DC4B4B50(0, &qword_1F0369528, (void (*)(void))sub_1DC4C94B0, (void (*)(void))sub_1DC4C94F4);
              v12 = *(_QWORD *)(v18 - 8);
              if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
              {
                v8 = v18;
                v13 = a3[10];
              }
              else
              {
                sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
                v12 = *(_QWORD *)(v19 - 8);
                if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                {
                  v8 = v19;
                  v13 = a3[11];
                }
                else
                {
                  sub_1DC4B4B50(0, &qword_1EDB0E270, (void (*)(void))sub_1DC4F48D4, (void (*)(void))sub_1DC4F4918);
                  v12 = *(_QWORD *)(v20 - 8);
                  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                  {
                    v8 = v20;
                    v13 = a3[12];
                  }
                  else
                  {
                    sub_1DC4B4B50(0, &qword_1EDB0E868, (void (*)(void))sub_1DC4C9630, (void (*)(void))sub_1DC4C9674);
                    v12 = *(_QWORD *)(v21 - 8);
                    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                    {
                      v8 = v21;
                      v13 = a3[13];
                    }
                    else
                    {
                      sub_1DC4B4B50(0, &qword_1F0369540, (void (*)(void))sub_1DC4C97B0, (void (*)(void))sub_1DC4C97F4);
                      v12 = *(_QWORD *)(v22 - 8);
                      if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                      {
                        v8 = v22;
                        v13 = a3[14];
                      }
                      else
                      {
                        sub_1DC4B4B50(0, &qword_1F036AD08, (void (*)(void))sub_1DC50A54C, (void (*)(void))sub_1DC50A590);
                        v12 = *(_QWORD *)(v23 - 8);
                        if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                        {
                          v8 = v23;
                          v13 = a3[15];
                        }
                        else
                        {
                          sub_1DC4B4B50(0, &qword_1EDB0E790, (void (*)(void))sub_1DC4C9930, (void (*)(void))sub_1DC4C9974);
                          v8 = v24;
                          v12 = *(_QWORD *)(v24 - 8);
                          v13 = a3[16];
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t storeEnumTagSinglePayload for AudioEngagementBeginEvent()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC5A828C(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  sub_1DC4B6600();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = a4[5];
    }
    else
    {
      sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
      v14 = *(_QWORD *)(v16 - 8);
      if (*(_DWORD *)(v14 + 84) == a3)
      {
        v10 = v16;
        v15 = a4[6];
      }
      else
      {
        sub_1DC4B4B50(0, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
        v14 = *(_QWORD *)(v17 - 8);
        if (*(_DWORD *)(v14 + 84) == a3)
        {
          v10 = v17;
          v15 = a4[7];
        }
        else
        {
          sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
          v14 = *(_QWORD *)(v18 - 8);
          if (*(_DWORD *)(v14 + 84) == a3)
          {
            v10 = v18;
            v15 = a4[8];
          }
          else
          {
            sub_1DC4B4B50(0, &qword_1F0369510, (void (*)(void))sub_1DC4C9238, (void (*)(void))sub_1DC4C927C);
            v14 = *(_QWORD *)(v19 - 8);
            if (*(_DWORD *)(v14 + 84) == a3)
            {
              v10 = v19;
              v15 = a4[9];
            }
            else
            {
              sub_1DC4B4B50(0, &qword_1F0369528, (void (*)(void))sub_1DC4C94B0, (void (*)(void))sub_1DC4C94F4);
              v14 = *(_QWORD *)(v20 - 8);
              if (*(_DWORD *)(v14 + 84) == a3)
              {
                v10 = v20;
                v15 = a4[10];
              }
              else
              {
                sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
                v14 = *(_QWORD *)(v21 - 8);
                if (*(_DWORD *)(v14 + 84) == a3)
                {
                  v10 = v21;
                  v15 = a4[11];
                }
                else
                {
                  sub_1DC4B4B50(0, &qword_1EDB0E270, (void (*)(void))sub_1DC4F48D4, (void (*)(void))sub_1DC4F4918);
                  v14 = *(_QWORD *)(v22 - 8);
                  if (*(_DWORD *)(v14 + 84) == a3)
                  {
                    v10 = v22;
                    v15 = a4[12];
                  }
                  else
                  {
                    sub_1DC4B4B50(0, &qword_1EDB0E868, (void (*)(void))sub_1DC4C9630, (void (*)(void))sub_1DC4C9674);
                    v14 = *(_QWORD *)(v23 - 8);
                    if (*(_DWORD *)(v14 + 84) == a3)
                    {
                      v10 = v23;
                      v15 = a4[13];
                    }
                    else
                    {
                      sub_1DC4B4B50(0, &qword_1F0369540, (void (*)(void))sub_1DC4C97B0, (void (*)(void))sub_1DC4C97F4);
                      v14 = *(_QWORD *)(v24 - 8);
                      if (*(_DWORD *)(v14 + 84) == a3)
                      {
                        v10 = v24;
                        v15 = a4[14];
                      }
                      else
                      {
                        sub_1DC4B4B50(0, &qword_1F036AD08, (void (*)(void))sub_1DC50A54C, (void (*)(void))sub_1DC50A590);
                        v14 = *(_QWORD *)(v25 - 8);
                        if (*(_DWORD *)(v14 + 84) == a3)
                        {
                          v10 = v25;
                          v15 = a4[15];
                        }
                        else
                        {
                          sub_1DC4B4B50(0, &qword_1EDB0E790, (void (*)(void))sub_1DC4C9930, (void (*)(void))sub_1DC4C9974);
                          v10 = v26;
                          v14 = *(_QWORD *)(v26 - 8);
                          v15 = a4[16];
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_1DC5A8614()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;

  sub_1DC4B6600();
  if (v0 <= 0x3F)
  {
    sub_1DC4B4B50(319, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
    if (v1 <= 0x3F)
    {
      sub_1DC4B4B50(319, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
      if (v2 <= 0x3F)
      {
        sub_1DC4B4B50(319, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
        if (v3 <= 0x3F)
        {
          sub_1DC4B4B50(319, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
          if (v4 <= 0x3F)
          {
            sub_1DC4B4B50(319, &qword_1F0369510, (void (*)(void))sub_1DC4C9238, (void (*)(void))sub_1DC4C927C);
            if (v5 <= 0x3F)
            {
              sub_1DC4B4B50(319, &qword_1F0369528, (void (*)(void))sub_1DC4C94B0, (void (*)(void))sub_1DC4C94F4);
              if (v6 <= 0x3F)
              {
                sub_1DC4B4B50(319, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
                if (v7 <= 0x3F)
                {
                  sub_1DC4B4B50(319, &qword_1EDB0E270, (void (*)(void))sub_1DC4F48D4, (void (*)(void))sub_1DC4F4918);
                  if (v8 <= 0x3F)
                  {
                    sub_1DC4B4B50(319, &qword_1EDB0E868, (void (*)(void))sub_1DC4C9630, (void (*)(void))sub_1DC4C9674);
                    if (v9 <= 0x3F)
                    {
                      sub_1DC4B4B50(319, &qword_1F0369540, (void (*)(void))sub_1DC4C97B0, (void (*)(void))sub_1DC4C97F4);
                      if (v10 <= 0x3F)
                      {
                        sub_1DC4B4B50(319, &qword_1F036AD08, (void (*)(void))sub_1DC50A54C, (void (*)(void))sub_1DC50A590);
                        if (v11 <= 0x3F)
                        {
                          sub_1DC4B4B50(319, &qword_1EDB0E790, (void (*)(void))sub_1DC4C9930, (void (*)(void))sub_1DC4C9974);
                          if (v12 <= 0x3F)
                            swift_initStructMetadata();
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

_QWORD *initializeBufferWithCopyOfBuffer for AudioEngagementBeginEvent.Model(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  _QWORD *v47;
  _QWORD *v48;
  uint64_t v49;
  uint64_t v50;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v23 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v23 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1DC62ABA8();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = a3[6];
    v10 = (char *)a1 + v8;
    v11 = (char *)a2 + v8;
    v12 = *((_QWORD *)v11 + 1);
    *(_QWORD *)v10 = *(_QWORD *)v11;
    *((_QWORD *)v10 + 1) = v12;
    v13 = *((_QWORD *)v11 + 3);
    *((_QWORD *)v10 + 2) = *((_QWORD *)v11 + 2);
    *((_QWORD *)v10 + 3) = v13;
    v10[32] = v11[32];
    *((_QWORD *)v10 + 5) = *((_QWORD *)v11 + 5);
    v10[48] = v11[48];
    *((_QWORD *)v10 + 7) = *((_QWORD *)v11 + 7);
    *((_DWORD *)v10 + 16) = *((_DWORD *)v11 + 16);
    v14 = (char *)a1 + v9;
    v15 = (char *)a2 + v9;
    v16 = *((_QWORD *)v15 + 1);
    *(_QWORD *)v14 = *(_QWORD *)v15;
    *((_QWORD *)v14 + 1) = v16;
    v17 = *((_QWORD *)v15 + 3);
    *((_QWORD *)v14 + 2) = *((_QWORD *)v15 + 2);
    *((_QWORD *)v14 + 3) = v17;
    *((_WORD *)v14 + 16) = *((_WORD *)v15 + 16);
    v18 = a3[7];
    v19 = (char *)a1 + v18;
    v20 = (char *)a2 + v18;
    v21 = *(_QWORD *)((char *)a2 + v18 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v21)
    {
      *v19 = *v20;
      *((_QWORD *)v19 + 1) = *((_QWORD *)v20 + 1);
      *((_QWORD *)v19 + 2) = v21;
      *((_QWORD *)v19 + 3) = *((_QWORD *)v20 + 3);
      v22 = *((_QWORD *)v20 + 5);
      *((_QWORD *)v19 + 4) = *((_QWORD *)v20 + 4);
      *((_QWORD *)v19 + 5) = v22;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v24 = *((_OWORD *)v20 + 1);
      *(_OWORD *)v19 = *(_OWORD *)v20;
      *((_OWORD *)v19 + 1) = v24;
      *((_OWORD *)v19 + 2) = *((_OWORD *)v20 + 2);
    }
    v25 = a3[8];
    v26 = a3[9];
    v27 = (char *)a1 + v25;
    v28 = (char *)a2 + v25;
    *v27 = *v28;
    v29 = *((_QWORD *)v28 + 2);
    *((_QWORD *)v27 + 1) = *((_QWORD *)v28 + 1);
    *((_QWORD *)v27 + 2) = v29;
    v30 = (char *)a1 + v26;
    v31 = (char *)a2 + v26;
    *(_DWORD *)v30 = *(_DWORD *)v31;
    v30[4] = v31[4];
    v32 = a3[10];
    v33 = a3[11];
    v34 = (char *)a1 + v32;
    v35 = (char *)a2 + v32;
    *(_OWORD *)v34 = *(_OWORD *)v35;
    v34[16] = v35[16];
    *((_DWORD *)v34 + 5) = *((_DWORD *)v35 + 5);
    v36 = *((_QWORD *)v35 + 4);
    *((_QWORD *)v34 + 3) = *((_QWORD *)v35 + 3);
    *((_QWORD *)v34 + 4) = v36;
    v34[40] = v35[40];
    v34[41] = v35[41];
    v37 = (char *)a1 + v33;
    v38 = (char *)a2 + v33;
    v39 = *((_QWORD *)v38 + 1);
    *(_QWORD *)v37 = *(_QWORD *)v38;
    *((_QWORD *)v37 + 1) = v39;
    v37[16] = v38[16];
    v37[17] = v38[17];
    v40 = a3[12];
    v41 = a3[13];
    v42 = (char *)a1 + v40;
    v43 = (char *)a2 + v40;
    v44 = *((_OWORD *)v43 + 1);
    *(_OWORD *)v42 = *(_OWORD *)v43;
    *((_OWORD *)v42 + 1) = v44;
    v45 = *((_OWORD *)v43 + 3);
    *((_OWORD *)v42 + 2) = *((_OWORD *)v43 + 2);
    *((_OWORD *)v42 + 3) = v45;
    *((_OWORD *)v42 + 4) = *((_OWORD *)v43 + 4);
    *((_QWORD *)v42 + 10) = *((_QWORD *)v43 + 10);
    *(_OWORD *)(v42 + 88) = *(_OWORD *)(v43 + 88);
    *(_OWORD *)(v42 + 104) = *(_OWORD *)(v43 + 104);
    *((_DWORD *)v42 + 30) = *((_DWORD *)v43 + 30);
    *((_OWORD *)v42 + 8) = *((_OWORD *)v43 + 8);
    v42[144] = v43[144];
    *(_QWORD *)(v42 + 148) = *(_QWORD *)(v43 + 148);
    v46 = *((_OWORD *)v43 + 11);
    *((_OWORD *)v42 + 10) = *((_OWORD *)v43 + 10);
    *((_OWORD *)v42 + 11) = v46;
    *((_QWORD *)v42 + 24) = *((_QWORD *)v43 + 24);
    v47 = (_QWORD *)((char *)a1 + v41);
    v48 = (_QWORD *)((char *)a2 + v41);
    v49 = v48[1];
    *v47 = *v48;
    v47[1] = v49;
    v50 = a3[15];
    *(_DWORD *)((char *)a1 + a3[14]) = *(_DWORD *)((char *)a2 + a3[14]);
    *((_BYTE *)a1 + v50) = *((_BYTE *)a2 + v50);
    *((_BYTE *)a1 + a3[16]) = *((_BYTE *)a2 + a3[16]);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for AudioEngagementBeginEvent.Model(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + *(int *)(a2 + 28) + 16))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for AudioEngagementBeginEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  _QWORD *v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;

  v6 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = a2 + v7;
  v11 = *(_QWORD *)(v10 + 8);
  *(_QWORD *)v9 = *(_QWORD *)v10;
  *(_QWORD *)(v9 + 8) = v11;
  v12 = *(_QWORD *)(v10 + 24);
  *(_QWORD *)(v9 + 16) = *(_QWORD *)(v10 + 16);
  *(_QWORD *)(v9 + 24) = v12;
  *(_BYTE *)(v9 + 32) = *(_BYTE *)(v10 + 32);
  *(_QWORD *)(v9 + 40) = *(_QWORD *)(v10 + 40);
  *(_BYTE *)(v9 + 48) = *(_BYTE *)(v10 + 48);
  *(_QWORD *)(v9 + 56) = *(_QWORD *)(v10 + 56);
  *(_DWORD *)(v9 + 64) = *(_DWORD *)(v10 + 64);
  v13 = a1 + v8;
  v14 = a2 + v8;
  v15 = *(_QWORD *)(v14 + 8);
  *(_QWORD *)v13 = *(_QWORD *)v14;
  *(_QWORD *)(v13 + 8) = v15;
  v16 = *(_QWORD *)(v14 + 24);
  *(_QWORD *)(v13 + 16) = *(_QWORD *)(v14 + 16);
  *(_QWORD *)(v13 + 24) = v16;
  *(_WORD *)(v13 + 32) = *(_WORD *)(v14 + 32);
  v17 = a3[7];
  v18 = a1 + v17;
  v19 = a2 + v17;
  v20 = *(_QWORD *)(a2 + v17 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v20)
  {
    *(_BYTE *)v18 = *(_BYTE *)v19;
    *(_QWORD *)(v18 + 8) = *(_QWORD *)(v19 + 8);
    *(_QWORD *)(v18 + 16) = v20;
    *(_QWORD *)(v18 + 24) = *(_QWORD *)(v19 + 24);
    v21 = *(_QWORD *)(v19 + 40);
    *(_QWORD *)(v18 + 32) = *(_QWORD *)(v19 + 32);
    *(_QWORD *)(v18 + 40) = v21;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v22 = *(_OWORD *)(v19 + 16);
    *(_OWORD *)v18 = *(_OWORD *)v19;
    *(_OWORD *)(v18 + 16) = v22;
    *(_OWORD *)(v18 + 32) = *(_OWORD *)(v19 + 32);
  }
  v23 = a3[8];
  v24 = a3[9];
  v25 = a1 + v23;
  v26 = a2 + v23;
  *(_BYTE *)v25 = *(_BYTE *)v26;
  v27 = *(_QWORD *)(v26 + 16);
  *(_QWORD *)(v25 + 8) = *(_QWORD *)(v26 + 8);
  *(_QWORD *)(v25 + 16) = v27;
  v28 = a1 + v24;
  v29 = a2 + v24;
  *(_DWORD *)v28 = *(_DWORD *)v29;
  *(_BYTE *)(v28 + 4) = *(_BYTE *)(v29 + 4);
  v30 = a3[10];
  v31 = a3[11];
  v32 = a1 + v30;
  v33 = a2 + v30;
  *(_OWORD *)v32 = *(_OWORD *)v33;
  *(_BYTE *)(v32 + 16) = *(_BYTE *)(v33 + 16);
  *(_DWORD *)(v32 + 20) = *(_DWORD *)(v33 + 20);
  v34 = *(_QWORD *)(v33 + 32);
  *(_QWORD *)(v32 + 24) = *(_QWORD *)(v33 + 24);
  *(_QWORD *)(v32 + 32) = v34;
  *(_BYTE *)(v32 + 40) = *(_BYTE *)(v33 + 40);
  *(_BYTE *)(v32 + 41) = *(_BYTE *)(v33 + 41);
  v35 = a1 + v31;
  v36 = a2 + v31;
  v37 = *(_QWORD *)(v36 + 8);
  *(_QWORD *)v35 = *(_QWORD *)v36;
  *(_QWORD *)(v35 + 8) = v37;
  *(_BYTE *)(v35 + 16) = *(_BYTE *)(v36 + 16);
  *(_BYTE *)(v35 + 17) = *(_BYTE *)(v36 + 17);
  v38 = a3[12];
  v39 = a3[13];
  v40 = a1 + v38;
  v41 = a2 + v38;
  v42 = *(_OWORD *)(v41 + 16);
  *(_OWORD *)v40 = *(_OWORD *)v41;
  *(_OWORD *)(v40 + 16) = v42;
  v43 = *(_OWORD *)(v41 + 48);
  *(_OWORD *)(v40 + 32) = *(_OWORD *)(v41 + 32);
  *(_OWORD *)(v40 + 48) = v43;
  *(_OWORD *)(v40 + 64) = *(_OWORD *)(v41 + 64);
  *(_QWORD *)(v40 + 80) = *(_QWORD *)(v41 + 80);
  *(_OWORD *)(v40 + 88) = *(_OWORD *)(v41 + 88);
  *(_OWORD *)(v40 + 104) = *(_OWORD *)(v41 + 104);
  *(_DWORD *)(v40 + 120) = *(_DWORD *)(v41 + 120);
  *(_OWORD *)(v40 + 128) = *(_OWORD *)(v41 + 128);
  *(_BYTE *)(v40 + 144) = *(_BYTE *)(v41 + 144);
  *(_QWORD *)(v40 + 148) = *(_QWORD *)(v41 + 148);
  v44 = *(_OWORD *)(v41 + 176);
  *(_OWORD *)(v40 + 160) = *(_OWORD *)(v41 + 160);
  *(_OWORD *)(v40 + 176) = v44;
  *(_QWORD *)(v40 + 192) = *(_QWORD *)(v41 + 192);
  v45 = (_QWORD *)(a1 + v39);
  v46 = (_QWORD *)(a2 + v39);
  v47 = v46[1];
  *v45 = *v46;
  v45[1] = v47;
  v48 = a3[15];
  *(_DWORD *)(a1 + a3[14]) = *(_DWORD *)(a2 + a3[14]);
  *(_BYTE *)(a1 + v48) = *(_BYTE *)(a2 + v48);
  *(_BYTE *)(a1 + a3[16]) = *(_BYTE *)(a2 + a3[16]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for AudioEngagementBeginEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int128 *v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  _QWORD *v40;

  v6 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_QWORD *)v8 = *(_QWORD *)(a2 + v7);
  *(_QWORD *)(v8 + 8) = *(_QWORD *)(a2 + v7 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(v9 + 16);
  *(_QWORD *)(v8 + 24) = *(_QWORD *)(v9 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v8 + 32) = *(_BYTE *)(v9 + 32);
  v10 = *(_QWORD *)(v9 + 40);
  *(_BYTE *)(v8 + 48) = *(_BYTE *)(v9 + 48);
  *(_QWORD *)(v8 + 40) = v10;
  *(_QWORD *)(v8 + 56) = *(_QWORD *)(v9 + 56);
  *(_BYTE *)(v8 + 64) = *(_BYTE *)(v9 + 64);
  *(_BYTE *)(v8 + 65) = *(_BYTE *)(v9 + 65);
  *(_BYTE *)(v8 + 66) = *(_BYTE *)(v9 + 66);
  *(_BYTE *)(v8 + 67) = *(_BYTE *)(v9 + 67);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  *(_QWORD *)v12 = *(_QWORD *)(a2 + v11);
  *(_QWORD *)(v12 + 8) = *(_QWORD *)(a2 + v11 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v12 + 16) = *(_QWORD *)(v13 + 16);
  *(_QWORD *)(v12 + 24) = *(_QWORD *)(v13 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v12 + 32) = *(_BYTE *)(v13 + 32);
  *(_BYTE *)(v12 + 33) = *(_BYTE *)(v13 + 33);
  v14 = a3[7];
  v15 = a1 + v14;
  v16 = (__int128 *)(a2 + v14);
  v17 = *(_QWORD *)(a1 + v14 + 16);
  v18 = *(_QWORD *)(a2 + v14 + 16);
  if (v17)
  {
    if (v18)
    {
      *(_BYTE *)v15 = *(_BYTE *)v16;
      *(_QWORD *)(v15 + 8) = *((_QWORD *)v16 + 1);
      *(_QWORD *)(v15 + 16) = *((_QWORD *)v16 + 2);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_DWORD *)(v15 + 24) = *((_DWORD *)v16 + 6);
      *(_DWORD *)(v15 + 28) = *((_DWORD *)v16 + 7);
      *(_QWORD *)(v15 + 32) = *((_QWORD *)v16 + 4);
      *(_QWORD *)(v15 + 40) = *((_QWORD *)v16 + 5);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1DC4CDAF4(v15);
      v20 = v16[1];
      v19 = v16[2];
      *(_OWORD *)v15 = *v16;
      *(_OWORD *)(v15 + 16) = v20;
      *(_OWORD *)(v15 + 32) = v19;
    }
  }
  else if (v18)
  {
    *(_BYTE *)v15 = *(_BYTE *)v16;
    *(_QWORD *)(v15 + 8) = *((_QWORD *)v16 + 1);
    *(_QWORD *)(v15 + 16) = *((_QWORD *)v16 + 2);
    *(_DWORD *)(v15 + 24) = *((_DWORD *)v16 + 6);
    *(_DWORD *)(v15 + 28) = *((_DWORD *)v16 + 7);
    *(_QWORD *)(v15 + 32) = *((_QWORD *)v16 + 4);
    *(_QWORD *)(v15 + 40) = *((_QWORD *)v16 + 5);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v21 = *v16;
    v22 = v16[2];
    *(_OWORD *)(v15 + 16) = v16[1];
    *(_OWORD *)(v15 + 32) = v22;
    *(_OWORD *)v15 = v21;
  }
  v23 = a3[8];
  v24 = a1 + v23;
  v25 = a2 + v23;
  *(_BYTE *)v24 = *(_BYTE *)v25;
  *(_QWORD *)(v24 + 8) = *(_QWORD *)(v25 + 8);
  *(_QWORD *)(v24 + 16) = *(_QWORD *)(v25 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v26 = a3[9];
  v27 = a1 + v26;
  v28 = a2 + v26;
  *(_DWORD *)v27 = *(_DWORD *)v28;
  *(_BYTE *)(v27 + 4) = *(_BYTE *)(v28 + 4);
  v29 = a3[10];
  v30 = a1 + v29;
  v31 = a2 + v29;
  *(_QWORD *)v30 = *(_QWORD *)(a2 + v29);
  *(_QWORD *)(v30 + 8) = *(_QWORD *)(a2 + v29 + 8);
  *(_BYTE *)(v30 + 16) = *(_BYTE *)(a2 + v29 + 16);
  *(_DWORD *)(v30 + 20) = *(_DWORD *)(a2 + v29 + 20);
  *(_QWORD *)(v30 + 24) = *(_QWORD *)(a2 + v29 + 24);
  *(_QWORD *)(v30 + 32) = *(_QWORD *)(a2 + v29 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v30 + 40) = *(_BYTE *)(v31 + 40);
  *(_BYTE *)(v30 + 41) = *(_BYTE *)(v31 + 41);
  v32 = a3[11];
  v33 = a1 + v32;
  v34 = a2 + v32;
  *(_QWORD *)v33 = *(_QWORD *)(a2 + v32);
  *(_QWORD *)(v33 + 8) = *(_QWORD *)(a2 + v32 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v33 + 16) = *(_BYTE *)(v34 + 16);
  *(_BYTE *)(v33 + 17) = *(_BYTE *)(v34 + 17);
  v35 = a3[12];
  v36 = a1 + v35;
  v37 = a2 + v35;
  *(_QWORD *)v36 = *(_QWORD *)(a2 + v35);
  *(_QWORD *)(v36 + 8) = *(_QWORD *)(a2 + v35 + 8);
  *(_QWORD *)(v36 + 16) = *(_QWORD *)(a2 + v35 + 16);
  *(_QWORD *)(v36 + 24) = *(_QWORD *)(a2 + v35 + 24);
  *(_QWORD *)(v36 + 32) = *(_QWORD *)(a2 + v35 + 32);
  *(_QWORD *)(v36 + 40) = *(_QWORD *)(a2 + v35 + 40);
  *(_QWORD *)(v36 + 48) = *(_QWORD *)(a2 + v35 + 48);
  *(_QWORD *)(v36 + 56) = *(_QWORD *)(a2 + v35 + 56);
  *(_QWORD *)(v36 + 64) = *(_QWORD *)(a2 + v35 + 64);
  *(_QWORD *)(v36 + 72) = *(_QWORD *)(a2 + v35 + 72);
  *(_QWORD *)(v36 + 80) = *(_QWORD *)(a2 + v35 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v36 + 88) = *(_QWORD *)(v37 + 88);
  *(_QWORD *)(v36 + 96) = *(_QWORD *)(v37 + 96);
  *(_QWORD *)(v36 + 104) = *(_QWORD *)(v37 + 104);
  *(_QWORD *)(v36 + 112) = *(_QWORD *)(v37 + 112);
  *(_DWORD *)(v36 + 120) = *(_DWORD *)(v37 + 120);
  *(_QWORD *)(v36 + 128) = *(_QWORD *)(v37 + 128);
  *(_QWORD *)(v36 + 136) = *(_QWORD *)(v37 + 136);
  *(_BYTE *)(v36 + 144) = *(_BYTE *)(v37 + 144);
  *(_DWORD *)(v36 + 148) = *(_DWORD *)(v37 + 148);
  *(_DWORD *)(v36 + 152) = *(_DWORD *)(v37 + 152);
  *(_QWORD *)(v36 + 160) = *(_QWORD *)(v37 + 160);
  *(_QWORD *)(v36 + 168) = *(_QWORD *)(v37 + 168);
  *(_QWORD *)(v36 + 176) = *(_QWORD *)(v37 + 176);
  *(_QWORD *)(v36 + 184) = *(_QWORD *)(v37 + 184);
  *(_QWORD *)(v36 + 192) = *(_QWORD *)(v37 + 192);
  v38 = a3[13];
  v39 = (_QWORD *)(a1 + v38);
  v40 = (_QWORD *)(a2 + v38);
  *v39 = *v40;
  v39[1] = v40[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + a3[14]) = *(_DWORD *)(a2 + a3[14]);
  *(_BYTE *)(a1 + a3[15]) = *(_BYTE *)(a2 + a3[15]);
  *(_BYTE *)(a1 + a3[16]) = *(_BYTE *)(a2 + a3[16]);
  return a1;
}

uint64_t initializeWithTake for AudioEngagementBeginEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  _OWORD *v18;
  __int128 *v19;
  __int128 v20;
  __int128 v21;
  uint64_t v22;
  __int128 *v23;
  __int128 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _OWORD *v29;
  _OWORD *v30;
  __int128 v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  uint64_t v44;
  uint64_t v45;

  v6 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = a2 + v7;
  *(_DWORD *)(v9 + 64) = *(_DWORD *)(v10 + 64);
  v11 = *(_OWORD *)(v10 + 48);
  *(_OWORD *)(v9 + 32) = *(_OWORD *)(v10 + 32);
  *(_OWORD *)(v9 + 48) = v11;
  v12 = *(_OWORD *)(v10 + 16);
  *(_OWORD *)v9 = *(_OWORD *)v10;
  *(_OWORD *)(v9 + 16) = v12;
  v13 = a1 + v8;
  v14 = a2 + v8;
  *(_WORD *)(v13 + 32) = *(_WORD *)(v14 + 32);
  v15 = *(_OWORD *)(v14 + 16);
  *(_OWORD *)v13 = *(_OWORD *)v14;
  *(_OWORD *)(v13 + 16) = v15;
  v16 = a3[7];
  v17 = a3[8];
  v18 = (_OWORD *)(a1 + v16);
  v19 = (__int128 *)(a2 + v16);
  v20 = v19[2];
  v21 = *v19;
  v18[1] = v19[1];
  v18[2] = v20;
  *v18 = v21;
  v22 = a1 + v17;
  v23 = (__int128 *)(a2 + v17);
  v24 = *v23;
  *(_QWORD *)(v22 + 16) = *((_QWORD *)v23 + 2);
  *(_OWORD *)v22 = v24;
  v25 = a3[9];
  v26 = a3[10];
  v27 = a1 + v25;
  v28 = a2 + v25;
  *(_DWORD *)v27 = *(_DWORD *)v28;
  *(_BYTE *)(v27 + 4) = *(_BYTE *)(v28 + 4);
  v29 = (_OWORD *)(a1 + v26);
  v30 = (_OWORD *)(a2 + v26);
  v31 = v30[1];
  *v29 = *v30;
  v29[1] = v31;
  *(_OWORD *)((char *)v29 + 26) = *(_OWORD *)((char *)v30 + 26);
  v32 = a3[11];
  v33 = a3[12];
  v34 = a1 + v32;
  v35 = a2 + v32;
  *(_OWORD *)v34 = *(_OWORD *)v35;
  *(_WORD *)(v34 + 16) = *(_WORD *)(v35 + 16);
  v36 = a1 + v33;
  v37 = a2 + v33;
  v38 = *(_OWORD *)(v37 + 48);
  *(_OWORD *)(v36 + 32) = *(_OWORD *)(v37 + 32);
  *(_OWORD *)(v36 + 48) = v38;
  v39 = *(_OWORD *)(v37 + 16);
  *(_OWORD *)v36 = *(_OWORD *)v37;
  *(_OWORD *)(v36 + 16) = v39;
  v40 = *(_OWORD *)(v37 + 112);
  *(_OWORD *)(v36 + 96) = *(_OWORD *)(v37 + 96);
  *(_OWORD *)(v36 + 112) = v40;
  v41 = *(_OWORD *)(v37 + 80);
  *(_OWORD *)(v36 + 64) = *(_OWORD *)(v37 + 64);
  *(_OWORD *)(v36 + 80) = v41;
  *(_QWORD *)(v36 + 192) = *(_QWORD *)(v37 + 192);
  v42 = *(_OWORD *)(v37 + 176);
  *(_OWORD *)(v36 + 160) = *(_OWORD *)(v37 + 160);
  *(_OWORD *)(v36 + 176) = v42;
  v43 = *(_OWORD *)(v37 + 144);
  *(_OWORD *)(v36 + 128) = *(_OWORD *)(v37 + 128);
  *(_OWORD *)(v36 + 144) = v43;
  v44 = a3[14];
  *(_OWORD *)(a1 + a3[13]) = *(_OWORD *)(a2 + a3[13]);
  *(_DWORD *)(a1 + v44) = *(_DWORD *)(a2 + v44);
  v45 = a3[16];
  *(_BYTE *)(a1 + a3[15]) = *(_BYTE *)(a2 + a3[15]);
  *(_BYTE *)(a1 + v45) = *(_BYTE *)(a2 + v45);
  return a1;
}

uint64_t assignWithTake for AudioEngagementBeginEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;

  v6 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = *(_QWORD *)(a2 + v7 + 8);
  *(_QWORD *)v8 = *(_QWORD *)(a2 + v7);
  *(_QWORD *)(v8 + 8) = v10;
  swift_bridgeObjectRelease();
  v11 = *(_QWORD *)(v9 + 24);
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(v9 + 16);
  *(_QWORD *)(v8 + 24) = v11;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v8 + 32) = *(_BYTE *)(v9 + 32);
  *(_QWORD *)(v8 + 40) = *(_QWORD *)(v9 + 40);
  *(_BYTE *)(v8 + 48) = *(_BYTE *)(v9 + 48);
  *(_QWORD *)(v8 + 56) = *(_QWORD *)(v9 + 56);
  *(_BYTE *)(v8 + 64) = *(_BYTE *)(v9 + 64);
  *(_BYTE *)(v8 + 65) = *(_BYTE *)(v9 + 65);
  *(_BYTE *)(v8 + 66) = *(_BYTE *)(v9 + 66);
  *(_BYTE *)(v8 + 67) = *(_BYTE *)(v9 + 67);
  v12 = a3[6];
  v13 = a1 + v12;
  v14 = a2 + v12;
  v15 = *(_QWORD *)(a2 + v12 + 8);
  *(_QWORD *)v13 = *(_QWORD *)(a2 + v12);
  *(_QWORD *)(v13 + 8) = v15;
  swift_bridgeObjectRelease();
  v16 = *(_QWORD *)(v14 + 24);
  *(_QWORD *)(v13 + 16) = *(_QWORD *)(v14 + 16);
  *(_QWORD *)(v13 + 24) = v16;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v13 + 32) = *(_BYTE *)(v14 + 32);
  *(_BYTE *)(v13 + 33) = *(_BYTE *)(v14 + 33);
  v17 = a3[7];
  v18 = a1 + v17;
  v19 = a2 + v17;
  if (!*(_QWORD *)(a1 + v17 + 16))
    goto LABEL_5;
  v20 = *(_QWORD *)(v19 + 16);
  if (!v20)
  {
    sub_1DC4CDAF4(v18);
LABEL_5:
    v22 = *(_OWORD *)(v19 + 16);
    *(_OWORD *)v18 = *(_OWORD *)v19;
    *(_OWORD *)(v18 + 16) = v22;
    *(_OWORD *)(v18 + 32) = *(_OWORD *)(v19 + 32);
    goto LABEL_6;
  }
  *(_BYTE *)v18 = *(_BYTE *)v19;
  *(_QWORD *)(v18 + 8) = *(_QWORD *)(v19 + 8);
  *(_QWORD *)(v18 + 16) = v20;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v18 + 24) = *(_QWORD *)(v19 + 24);
  v21 = *(_QWORD *)(v19 + 40);
  *(_QWORD *)(v18 + 32) = *(_QWORD *)(v19 + 32);
  *(_QWORD *)(v18 + 40) = v21;
  swift_bridgeObjectRelease();
LABEL_6:
  v23 = a3[8];
  v24 = a1 + v23;
  v25 = a2 + v23;
  *(_BYTE *)v24 = *(_BYTE *)v25;
  v27 = *(_QWORD *)(v25 + 8);
  v26 = *(_QWORD *)(v25 + 16);
  *(_QWORD *)(v24 + 8) = v27;
  *(_QWORD *)(v24 + 16) = v26;
  swift_bridgeObjectRelease();
  v28 = a3[9];
  v29 = a3[10];
  v30 = a1 + v28;
  v31 = a2 + v28;
  *(_DWORD *)v30 = *(_DWORD *)v31;
  *(_BYTE *)(v30 + 4) = *(_BYTE *)(v31 + 4);
  v32 = a1 + v29;
  v33 = a2 + v29;
  *(_OWORD *)v32 = *(_OWORD *)(a2 + v29);
  *(_BYTE *)(v32 + 16) = *(_BYTE *)(a2 + v29 + 16);
  *(_DWORD *)(v32 + 20) = *(_DWORD *)(a2 + v29 + 20);
  v34 = *(_QWORD *)(a2 + v29 + 24);
  v35 = *(_QWORD *)(a2 + v29 + 32);
  *(_QWORD *)(v32 + 24) = v34;
  *(_QWORD *)(v32 + 32) = v35;
  swift_bridgeObjectRelease();
  *(_WORD *)(v32 + 40) = *(_WORD *)(v33 + 40);
  v36 = a3[11];
  v37 = a1 + v36;
  v38 = a2 + v36;
  v39 = *(_QWORD *)(a2 + v36 + 8);
  *(_QWORD *)v37 = *(_QWORD *)(a2 + v36);
  *(_QWORD *)(v37 + 8) = v39;
  swift_bridgeObjectRelease();
  *(_WORD *)(v37 + 16) = *(_WORD *)(v38 + 16);
  v40 = a3[12];
  v41 = a1 + v40;
  v42 = a2 + v40;
  v43 = *(_OWORD *)(a2 + v40 + 16);
  *(_OWORD *)v41 = *(_OWORD *)(a2 + v40);
  *(_OWORD *)(v41 + 16) = v43;
  v44 = *(_OWORD *)(a2 + v40 + 48);
  *(_OWORD *)(v41 + 32) = *(_OWORD *)(a2 + v40 + 32);
  *(_OWORD *)(v41 + 48) = v44;
  *(_OWORD *)(v41 + 64) = *(_OWORD *)(a2 + v40 + 64);
  *(_QWORD *)(v41 + 80) = *(_QWORD *)(a2 + v40 + 80);
  swift_bridgeObjectRelease();
  *(_OWORD *)(v41 + 88) = *(_OWORD *)(v42 + 88);
  *(_OWORD *)(v41 + 104) = *(_OWORD *)(v42 + 104);
  *(_DWORD *)(v41 + 120) = *(_DWORD *)(v42 + 120);
  *(_OWORD *)(v41 + 128) = *(_OWORD *)(v42 + 128);
  *(_BYTE *)(v41 + 144) = *(_BYTE *)(v42 + 144);
  *(_QWORD *)(v41 + 148) = *(_QWORD *)(v42 + 148);
  v45 = *(_OWORD *)(v42 + 176);
  *(_OWORD *)(v41 + 160) = *(_OWORD *)(v42 + 160);
  *(_OWORD *)(v41 + 176) = v45;
  *(_QWORD *)(v41 + 192) = *(_QWORD *)(v42 + 192);
  v46 = a3[13];
  v47 = (_QWORD *)(a1 + v46);
  v48 = (uint64_t *)(a2 + v46);
  v50 = *v48;
  v49 = v48[1];
  *v47 = v50;
  v47[1] = v49;
  swift_bridgeObjectRelease();
  v51 = a3[15];
  *(_DWORD *)(a1 + a3[14]) = *(_DWORD *)(a2 + a3[14]);
  *(_BYTE *)(a1 + v51) = *(_BYTE *)(a2 + v51);
  *(_BYTE *)(a1 + a3[16]) = *(_BYTE *)(a2 + a3[16]);
  return a1;
}

uint64_t getEnumTagSinglePayload for AudioEngagementBeginEvent.Model()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC5A97F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_1DC62ABA8();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for AudioEngagementBeginEvent.Model()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC5A9884(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_1DC62ABA8();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  return result;
}

uint64_t sub_1DC5A9900()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1DC62ABA8();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for AudioEngagementBeginEvent.Model.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF4)
    goto LABEL_17;
  if (a2 + 12 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 12) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 12;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 12;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 12;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0xD;
  v8 = v6 - 13;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for AudioEngagementBeginEvent.Model.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 12 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 12) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF4)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF3)
    return ((uint64_t (*)(void))((char *)&loc_1DC5A9AB8 + 4 * byte_1DC63FB32[v4]))();
  *a1 = a2 + 12;
  return ((uint64_t (*)(void))((char *)sub_1DC5A9AEC + 4 * byte_1DC63FB2D[v4]))();
}

uint64_t sub_1DC5A9AEC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC5A9AF4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DC5A9AFCLL);
  return result;
}

uint64_t sub_1DC5A9B08(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DC5A9B10);
  *(_BYTE *)result = a2 + 12;
  return result;
}

uint64_t sub_1DC5A9B14(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC5A9B1C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AudioEngagementBeginEvent.Model.CodingKeys()
{
  return &type metadata for AudioEngagementBeginEvent.Model.CodingKeys;
}

unint64_t sub_1DC5A9B3C()
{
  unint64_t result;

  result = qword_1F036E240;
  if (!qword_1F036E240)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC63FE3C, &type metadata for AudioEngagementBeginEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036E240);
  }
  return result;
}

unint64_t sub_1DC5A9B84()
{
  unint64_t result;

  result = qword_1F036E248;
  if (!qword_1F036E248)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC63FDAC, &type metadata for AudioEngagementBeginEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036E248);
  }
  return result;
}

unint64_t sub_1DC5A9BCC()
{
  unint64_t result;

  result = qword_1F036E250;
  if (!qword_1F036E250)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC63FDD4, &type metadata for AudioEngagementBeginEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036E250);
  }
  return result;
}

uint64_t sub_1DC5A9C10(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x746144746E657665 && a2 == 0xE900000000000061;
  if (v2 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x697472417377656ELL && a2 == 0xEF61746144656C63 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x446C656E6E616863 && a2 == 0xEB00000000617461 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x74614470756F7267 && a2 == 0xE900000000000061 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6174614464656566 && a2 == 0xE800000000000000 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x7461446B63617274 && a2 == 0xE900000000000061 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001DC64BF90 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x6174614477656976 && a2 == 0xE800000000000000 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000001DC64C490 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x7461446575737369 && a2 == 0xE900000000000061 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0x6B63616279616C70 && a2 == 0xEC00000061746144 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0xD00000000000001ELL && a2 == 0x80000001DC64C640 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001DC64BFB0)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else
  {
    v6 = sub_1DC62B520();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 12;
    else
      return 13;
  }
}

void ViewEndData.endReason.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

_BYTE *ViewEndData.endReason.setter(_BYTE *result)
{
  _BYTE *v1;

  *v1 = *result;
  return result;
}

uint64_t (*ViewEndData.endReason.modify())()
{
  return nullsub_1;
}

StocksAnalytics::ViewEndData __swiftcall ViewEndData.init(endReason:)(StocksAnalytics::ViewEndData endReason)
{
  _BYTE *v1;

  *v1 = *(_BYTE *)endReason.endReason;
  return endReason;
}

uint64_t sub_1DC5AA1E0()
{
  return 0x6F73616552646E65;
}

uint64_t sub_1DC5AA1FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x6F73616552646E65 && a2 == 0xE90000000000006ELL)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_1DC62B520();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1DC5AA29C()
{
  sub_1DC5AA3F0();
  return sub_1DC62B604();
}

uint64_t sub_1DC5AA2C4()
{
  sub_1DC5AA3F0();
  return sub_1DC62B610();
}

uint64_t ViewEndData.encode(to:)(_QWORD *a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char v8;
  uint64_t v10;
  char v11;

  sub_1DC5AA5B0(0, &qword_1EDB119E8, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v10 - v6;
  v8 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC5AA3F0();
  sub_1DC62B5F8();
  v11 = v8;
  sub_1DC5AA434();
  sub_1DC62B4E4();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_1DC5AA3F0()
{
  unint64_t result;

  result = qword_1EDB0EE18;
  if (!qword_1EDB0EE18)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC64002C, &type metadata for ViewEndData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB0EE18);
  }
  return result;
}

unint64_t sub_1DC5AA434()
{
  unint64_t result;

  result = qword_1EDB11770;
  if (!qword_1EDB11770)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for EndReason, &type metadata for EndReason);
    atomic_store(result, (unint64_t *)&qword_1EDB11770);
  }
  return result;
}

uint64_t ViewEndData.init(from:)@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v11;
  char v12;

  sub_1DC5AA5B0(0, &qword_1EDB11920, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v11 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC5AA3F0();
  sub_1DC62B5E0();
  if (!v2)
  {
    sub_1DC5AA60C();
    sub_1DC62B454();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *a2 = v12;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1DC5AA5B0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1DC5AA3F0();
    v7 = a3(a1, &type metadata for ViewEndData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1DC5AA60C()
{
  unint64_t result;

  result = qword_1EDB11780;
  if (!qword_1EDB11780)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for EndReason, &type metadata for EndReason);
    atomic_store(result, (unint64_t *)&qword_1EDB11780);
  }
  return result;
}

uint64_t sub_1DC5AA658@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return ViewEndData.init(from:)(a1, a2);
}

uint64_t sub_1DC5AA66C(_QWORD *a1)
{
  return ViewEndData.encode(to:)(a1);
}

uint64_t storeEnumTagSinglePayload for ViewEndData(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1DC5AA6CC + 4 * byte_1DC63FEB9[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1DC5AA700 + 4 * byte_1DC63FEB4[v4]))();
}

uint64_t sub_1DC5AA700(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC5AA708(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DC5AA710);
  return result;
}

uint64_t sub_1DC5AA71C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DC5AA724);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1DC5AA728(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC5AA730(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ViewEndData()
{
  return &type metadata for ViewEndData;
}

uint64_t storeEnumTagSinglePayload for ViewEndData.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1DC5AA78C + 4 * byte_1DC63FEBE[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1DC5AA7AC + 4 * byte_1DC63FEC3[v4]))();
}

_BYTE *sub_1DC5AA78C(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1DC5AA7AC(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1DC5AA7B4(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1DC5AA7BC(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1DC5AA7C4(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1DC5AA7CC(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for ViewEndData.CodingKeys()
{
  return &type metadata for ViewEndData.CodingKeys;
}

unint64_t sub_1DC5AA7EC()
{
  unint64_t result;

  result = qword_1F036E258;
  if (!qword_1F036E258)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC640004, &type metadata for ViewEndData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036E258);
  }
  return result;
}

unint64_t sub_1DC5AA834()
{
  unint64_t result;

  result = qword_1EDB0EE28;
  if (!qword_1EDB0EE28)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC63FF74, &type metadata for ViewEndData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB0EE28);
  }
  return result;
}

unint64_t sub_1DC5AA87C()
{
  unint64_t result;

  result = qword_1EDB0EE20;
  if (!qword_1EDB0EE20)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC63FF9C, &type metadata for ViewEndData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB0EE20);
  }
  return result;
}

void TipData.tipType.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

_BYTE *TipData.tipType.setter(_BYTE *result)
{
  _BYTE *v1;

  *v1 = *result;
  return result;
}

uint64_t (*TipData.tipType.modify())()
{
  return nullsub_1;
}

StocksAnalytics::TipData __swiftcall TipData.init(tipType:)(StocksAnalytics::TipData tipType)
{
  _BYTE *v1;

  *v1 = *(_BYTE *)tipType.tipType;
  return tipType;
}

uint64_t sub_1DC5AA8F4()
{
  return 0x65707954706974;
}

uint64_t sub_1DC5AA90C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x65707954706974 && a2 == 0xE700000000000000)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_1DC62B520();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1DC5AA9A0()
{
  sub_1DC5AAAF4();
  return sub_1DC62B604();
}

uint64_t sub_1DC5AA9C8()
{
  sub_1DC5AAAF4();
  return sub_1DC62B610();
}

uint64_t TipData.encode(to:)(_QWORD *a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char v8;
  uint64_t v10;
  char v11;

  sub_1DC5AACB4(0, &qword_1EDB11AF0, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v10 - v6;
  v8 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC5AAAF4();
  sub_1DC62B5F8();
  v11 = v8;
  sub_1DC5AAB38();
  sub_1DC62B4E4();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_1DC5AAAF4()
{
  unint64_t result;

  result = qword_1EDB11630;
  if (!qword_1EDB11630)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC6401F0, &type metadata for TipData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB11630);
  }
  return result;
}

unint64_t sub_1DC5AAB38()
{
  unint64_t result;

  result = qword_1EDB11658;
  if (!qword_1EDB11658)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for TipType, &type metadata for TipType);
    atomic_store(result, (unint64_t *)&qword_1EDB11658);
  }
  return result;
}

uint64_t TipData.init(from:)@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v11;
  char v12;

  sub_1DC5AACB4(0, &qword_1F036E260, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v11 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC5AAAF4();
  sub_1DC62B5E0();
  if (!v2)
  {
    sub_1DC5AAD10();
    sub_1DC62B454();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *a2 = v12;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1DC5AACB4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1DC5AAAF4();
    v7 = a3(a1, &type metadata for TipData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1DC5AAD10()
{
  unint64_t result;

  result = qword_1F036E268;
  if (!qword_1F036E268)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for TipType, &type metadata for TipType);
    atomic_store(result, (unint64_t *)&qword_1F036E268);
  }
  return result;
}

uint64_t sub_1DC5AAD5C@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return TipData.init(from:)(a1, a2);
}

uint64_t sub_1DC5AAD70(_QWORD *a1)
{
  return TipData.encode(to:)(a1);
}

uint64_t storeEnumTagSinglePayload for TipData(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1DC5AADD0 + 4 * byte_1DC640081[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1DC5AAE04 + 4 * byte_1DC64007C[v4]))();
}

uint64_t sub_1DC5AAE04(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC5AAE0C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DC5AAE14);
  return result;
}

uint64_t sub_1DC5AAE20(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DC5AAE28);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1DC5AAE2C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC5AAE34(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for TipData()
{
  return &type metadata for TipData;
}

uint64_t storeEnumTagSinglePayload for TipData.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1DC5AAE90 + 4 * byte_1DC640086[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1DC5AAEB0 + 4 * byte_1DC64008B[v4]))();
}

_BYTE *sub_1DC5AAE90(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1DC5AAEB0(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1DC5AAEB8(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1DC5AAEC0(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1DC5AAEC8(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1DC5AAED0(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for TipData.CodingKeys()
{
  return &type metadata for TipData.CodingKeys;
}

unint64_t sub_1DC5AAEF0()
{
  unint64_t result;

  result = qword_1F036E270;
  if (!qword_1F036E270)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC6401C8, &type metadata for TipData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036E270);
  }
  return result;
}

unint64_t sub_1DC5AAF38()
{
  unint64_t result;

  result = qword_1EDB11640;
  if (!qword_1EDB11640)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC640138, &type metadata for TipData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB11640);
  }
  return result;
}

unint64_t sub_1DC5AAF80()
{
  unint64_t result;

  result = qword_1EDB11638;
  if (!qword_1EDB11638)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC640160, &type metadata for TipData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB11638);
  }
  return result;
}

uint64_t sub_1DC5AAFC4(uint64_t a1)
{
  return sub_1DC4BE784(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], qword_1EDB10DB8, MEMORY[0x1E0CF8078]);
}

uint64_t static NewsHeadlineExposureEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C2FE8(&qword_1EDB10DD0, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1EDB10DB8, a1);
}

uint64_t sub_1DC5AB004(uint64_t a1)
{
  return sub_1DC4BE784(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], qword_1EDB10DD8, MEMORY[0x1E0CF8380]);
}

uint64_t static NewsHeadlineExposureEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C2FE8(qword_1EDB10DF0, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1EDB10DD8, a1);
}

uint64_t NewsHeadlineExposureEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C37DC((uint64_t (*)(_QWORD))sub_1DC4B6600, a1);
}

uint64_t NewsHeadlineExposureEvent.eventData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  sub_1DC4B6600();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*NewsHeadlineExposureEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t NewsHeadlineExposureEvent.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C382C(type metadata accessor for NewsHeadlineExposureEvent, (uint64_t (*)(_QWORD))sub_1DC4B66A4, a1);
}

uint64_t type metadata accessor for NewsHeadlineExposureEvent(uint64_t a1)
{
  return sub_1DC4B385C(a1, (uint64_t *)&unk_1EDB0E370);
}

uint64_t NewsHeadlineExposureEvent.timedData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for NewsHeadlineExposureEvent(0) + 20);
  sub_1DC4B66A4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*NewsHeadlineExposureEvent.timedData.modify())()
{
  type metadata accessor for NewsHeadlineExposureEvent(0);
  return nullsub_1;
}

uint64_t NewsHeadlineExposureEvent.newsArticleData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for NewsHeadlineExposureEvent(0) + 24);
  sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t NewsHeadlineExposureEvent.newsArticleData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for NewsHeadlineExposureEvent(0) + 24);
  sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*NewsHeadlineExposureEvent.newsArticleData.modify())()
{
  type metadata accessor for NewsHeadlineExposureEvent(0);
  return nullsub_1;
}

uint64_t NewsHeadlineExposureEvent.feedPositionData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for NewsHeadlineExposureEvent(0) + 28);
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E7D0, (void (*)(void))sub_1DC510CA0, (void (*)(void))sub_1DC510CE4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t NewsHeadlineExposureEvent.feedPositionData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for NewsHeadlineExposureEvent(0) + 28);
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E7D0, (void (*)(void))sub_1DC510CA0, (void (*)(void))sub_1DC510CE4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*NewsHeadlineExposureEvent.feedPositionData.modify())()
{
  type metadata accessor for NewsHeadlineExposureEvent(0);
  return nullsub_1;
}

uint64_t NewsHeadlineExposureEvent.inGroupPositionData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for NewsHeadlineExposureEvent(0) + 32);
  sub_1DC4B4B50(0, &qword_1EDB0E7E8, (void (*)(void))sub_1DC510E20, (void (*)(void))sub_1DC510E64);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t NewsHeadlineExposureEvent.inGroupPositionData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for NewsHeadlineExposureEvent(0) + 32);
  sub_1DC4B4B50(0, &qword_1EDB0E7E8, (void (*)(void))sub_1DC510E20, (void (*)(void))sub_1DC510E64);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*NewsHeadlineExposureEvent.inGroupPositionData.modify())()
{
  type metadata accessor for NewsHeadlineExposureEvent(0);
  return nullsub_1;
}

uint64_t NewsHeadlineExposureEvent.feedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for NewsHeadlineExposureEvent(0) + 36);
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t NewsHeadlineExposureEvent.feedData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for NewsHeadlineExposureEvent(0) + 36);
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*NewsHeadlineExposureEvent.feedData.modify())()
{
  type metadata accessor for NewsHeadlineExposureEvent(0);
  return nullsub_1;
}

uint64_t NewsHeadlineExposureEvent.groupData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for NewsHeadlineExposureEvent(0) + 40);
  sub_1DC4B4B50(0, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t NewsHeadlineExposureEvent.groupData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for NewsHeadlineExposureEvent(0) + 40);
  sub_1DC4B4B50(0, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*NewsHeadlineExposureEvent.groupData.modify())()
{
  type metadata accessor for NewsHeadlineExposureEvent(0);
  return nullsub_1;
}

uint64_t NewsHeadlineExposureEvent.articleScienceData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for NewsHeadlineExposureEvent(0) + 44);
  sub_1DC4B4B50(0, &qword_1EDB0E270, (void (*)(void))sub_1DC4F48D4, (void (*)(void))sub_1DC4F4918);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t NewsHeadlineExposureEvent.articleScienceData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for NewsHeadlineExposureEvent(0) + 44);
  sub_1DC4B4B50(0, &qword_1EDB0E270, (void (*)(void))sub_1DC4F48D4, (void (*)(void))sub_1DC4F4918);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*NewsHeadlineExposureEvent.articleScienceData.modify())()
{
  type metadata accessor for NewsHeadlineExposureEvent(0);
  return nullsub_1;
}

uint64_t NewsHeadlineExposureEvent.userArticleContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for NewsHeadlineExposureEvent(0) + 48);
  sub_1DC4B4B50(0, &qword_1EDB0E820, (void (*)(void))sub_1DC4F4A54, (void (*)(void))sub_1DC4F4A98);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t NewsHeadlineExposureEvent.userArticleContextData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for NewsHeadlineExposureEvent(0) + 48);
  sub_1DC4B4B50(0, &qword_1EDB0E820, (void (*)(void))sub_1DC4F4A54, (void (*)(void))sub_1DC4F4A98);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*NewsHeadlineExposureEvent.userArticleContextData.modify())()
{
  type metadata accessor for NewsHeadlineExposureEvent(0);
  return nullsub_1;
}

uint64_t NewsHeadlineExposureEvent.issueData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for NewsHeadlineExposureEvent(0) + 52);
  sub_1DC4B4B50(0, &qword_1EDB0E868, (void (*)(void))sub_1DC4C9630, (void (*)(void))sub_1DC4C9674);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t NewsHeadlineExposureEvent.issueData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for NewsHeadlineExposureEvent(0) + 52);
  sub_1DC4B4B50(0, &qword_1EDB0E868, (void (*)(void))sub_1DC4C9630, (void (*)(void))sub_1DC4C9674);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*NewsHeadlineExposureEvent.issueData.modify())()
{
  type metadata accessor for NewsHeadlineExposureEvent(0);
  return nullsub_1;
}

uint64_t NewsHeadlineExposureEvent.badgeData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for NewsHeadlineExposureEvent(0) + 56);
  sub_1DC4B4B50(0, &qword_1EDB0E858, (void (*)(void))sub_1DC5AB958, (void (*)(void))sub_1DC5AB99C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

unint64_t sub_1DC5AB958()
{
  unint64_t result;

  result = qword_1EDB11740;
  if (!qword_1EDB11740)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for BadgeData, &type metadata for BadgeData);
    atomic_store(result, (unint64_t *)&qword_1EDB11740);
  }
  return result;
}

unint64_t sub_1DC5AB99C()
{
  unint64_t result;

  result = qword_1EDB11738;
  if (!qword_1EDB11738)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for BadgeData, &type metadata for BadgeData);
    atomic_store(result, (unint64_t *)&qword_1EDB11738);
  }
  return result;
}

uint64_t NewsHeadlineExposureEvent.badgeData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for NewsHeadlineExposureEvent(0) + 56);
  sub_1DC4B4B50(0, &qword_1EDB0E858, (void (*)(void))sub_1DC5AB958, (void (*)(void))sub_1DC5AB99C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*NewsHeadlineExposureEvent.badgeData.modify())()
{
  type metadata accessor for NewsHeadlineExposureEvent(0);
  return nullsub_1;
}

uint64_t NewsHeadlineExposureEvent.channelData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for NewsHeadlineExposureEvent(0) + 60);
  sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t NewsHeadlineExposureEvent.channelData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for NewsHeadlineExposureEvent(0) + 60);
  sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*NewsHeadlineExposureEvent.channelData.modify())()
{
  type metadata accessor for NewsHeadlineExposureEvent(0);
  return nullsub_1;
}

uint64_t NewsHeadlineExposureEvent.hostArticleViewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for NewsHeadlineExposureEvent(0) + 64);
  sub_1DC4B4B50(0, &qword_1EDB0E260, (void (*)(void))sub_1DC4E6528, (void (*)(void))sub_1DC4E656C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t NewsHeadlineExposureEvent.hostArticleViewData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for NewsHeadlineExposureEvent(0) + 64);
  sub_1DC4B4B50(0, &qword_1EDB0E260, (void (*)(void))sub_1DC4E6528, (void (*)(void))sub_1DC4E656C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*NewsHeadlineExposureEvent.hostArticleViewData.modify())()
{
  type metadata accessor for NewsHeadlineExposureEvent(0);
  return nullsub_1;
}

uint64_t NewsHeadlineExposureEvent.activeWatchlistData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for NewsHeadlineExposureEvent(0) + 68);
  sub_1DC4B4B50(0, &qword_1EDB0E790, (void (*)(void))sub_1DC4C9930, (void (*)(void))sub_1DC4C9974);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t NewsHeadlineExposureEvent.activeWatchlistData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for NewsHeadlineExposureEvent(0) + 68);
  sub_1DC4B4B50(0, &qword_1EDB0E790, (void (*)(void))sub_1DC4C9930, (void (*)(void))sub_1DC4C9974);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*NewsHeadlineExposureEvent.activeWatchlistData.modify())()
{
  type metadata accessor for NewsHeadlineExposureEvent(0);
  return nullsub_1;
}

uint64_t NewsHeadlineExposureEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v2 = *MEMORY[0x1E0CF8128];
  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
  v4 = (int *)type metadata accessor for NewsHeadlineExposureEvent(0);
  v5 = a1 + v4[5];
  sub_1DC4B66A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 104))(v5, v2, v6);
  v7 = a1 + v4[6];
  sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 104))(v7, v2, v8);
  v9 = a1 + v4[7];
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E7D0, (void (*)(void))sub_1DC510CA0, (void (*)(void))sub_1DC510CE4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 104))(v9, v2, v10);
  v11 = a1 + v4[8];
  v12 = *MEMORY[0x1E0CF8120];
  sub_1DC4B4B50(0, &qword_1EDB0E7E8, (void (*)(void))sub_1DC510E20, (void (*)(void))sub_1DC510E64);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 104))(v11, v12, v13);
  v14 = a1 + v4[9];
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 104))(v14, v2, v15);
  v16 = a1 + v4[10];
  sub_1DC4B4B50(0, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 104))(v16, v12, v17);
  v18 = a1 + v4[11];
  sub_1DC4B4B50(0, &qword_1EDB0E270, (void (*)(void))sub_1DC4F48D4, (void (*)(void))sub_1DC4F4918);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 104))(v18, v2, v19);
  v20 = a1 + v4[12];
  sub_1DC4B4B50(0, &qword_1EDB0E820, (void (*)(void))sub_1DC4F4A54, (void (*)(void))sub_1DC4F4A98);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 104))(v20, v2, v21);
  v22 = a1 + v4[13];
  sub_1DC4B4B50(0, &qword_1EDB0E868, (void (*)(void))sub_1DC4C9630, (void (*)(void))sub_1DC4C9674);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 104))(v22, v12, v23);
  v24 = a1 + v4[14];
  sub_1DC4B4B50(0, &qword_1EDB0E858, (void (*)(void))sub_1DC5AB958, (void (*)(void))sub_1DC5AB99C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 104))(v24, v12, v25);
  v26 = a1 + v4[15];
  sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 104))(v26, v2, v27);
  v28 = a1 + v4[16];
  sub_1DC4B4B50(0, &qword_1EDB0E260, (void (*)(void))sub_1DC4E6528, (void (*)(void))sub_1DC4E656C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 104))(v28, v12, v29);
  v30 = a1 + v4[17];
  sub_1DC4B4B50(0, &qword_1EDB0E790, (void (*)(void))sub_1DC4C9930, (void (*)(void))sub_1DC4C9974);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 104))(v30, v12, v31);
}

uint64_t NewsHeadlineExposureEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C37DC((uint64_t (*)(_QWORD))MEMORY[0x1E0CF8670], a1);
}

uint64_t NewsHeadlineExposureEvent.Model.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C382C(type metadata accessor for NewsHeadlineExposureEvent.Model, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF86C0], a1);
}

uint64_t type metadata accessor for NewsHeadlineExposureEvent.Model(uint64_t a1)
{
  return sub_1DC4B385C(a1, qword_1EDB12990);
}

uint64_t NewsHeadlineExposureEvent.Model.newsArticleData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  char v12;
  char v13;
  char v14;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for NewsHeadlineExposureEvent.Model(0) + 24));
  v5 = *v3;
  v4 = v3[1];
  v6 = v3[2];
  v7 = v3[3];
  v8 = *((_BYTE *)v3 + 32);
  v9 = v3[5];
  v10 = *((_BYTE *)v3 + 48);
  v11 = v3[7];
  v12 = *((_BYTE *)v3 + 64);
  v13 = *((_BYTE *)v3 + 65);
  v14 = *((_BYTE *)v3 + 66);
  LOBYTE(v3) = *((_BYTE *)v3 + 67);
  *(_QWORD *)a1 = v5;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  *(_BYTE *)(a1 + 32) = v8;
  *(_QWORD *)(a1 + 40) = v9;
  *(_BYTE *)(a1 + 48) = v10;
  *(_QWORD *)(a1 + 56) = v11;
  *(_BYTE *)(a1 + 64) = v12;
  *(_BYTE *)(a1 + 65) = v13;
  *(_BYTE *)(a1 + 66) = v14;
  *(_BYTE *)(a1 + 67) = (_BYTE)v3;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t NewsHeadlineExposureEvent.Model.feedPositionData.getter@<X0>(_DWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for NewsHeadlineExposureEvent.Model(0);
  *a1 = *(_DWORD *)(v1 + *(int *)(result + 28));
  return result;
}

uint64_t NewsHeadlineExposureEvent.Model.inGroupPositionData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t result;
  int *v4;
  int v5;

  result = type metadata accessor for NewsHeadlineExposureEvent.Model(0);
  v4 = (int *)(v1 + *(int *)(result + 32));
  v5 = *v4;
  LOBYTE(v4) = *((_BYTE *)v4 + 4);
  *(_DWORD *)a1 = v5;
  *(_BYTE *)(a1 + 4) = (_BYTE)v4;
  return result;
}

uint64_t NewsHeadlineExposureEvent.Model.feedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = v1 + *(int *)(type metadata accessor for NewsHeadlineExposureEvent.Model(0) + 36);
  v5 = *(_QWORD *)(v3 + 8);
  v4 = *(_QWORD *)(v3 + 16);
  *(_BYTE *)a1 = *(_BYTE *)v3;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v4;
  return swift_bridgeObjectRetain();
}

uint64_t NewsHeadlineExposureEvent.Model.groupData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for NewsHeadlineExposureEvent.Model(0) + 40));
  v4 = *v3;
  v5 = v3[1];
  v6 = v3[2];
  v7 = v3[3];
  v8 = v3[4];
  v9 = v3[5];
  *a1 = *v3;
  a1[1] = v5;
  a1[2] = v6;
  a1[3] = v7;
  a1[4] = v8;
  a1[5] = v9;
  return sub_1DC4C9EC0(v4, v5, v6);
}

uint64_t NewsHeadlineExposureEvent.Model.articleScienceData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  _OWORD v22[2];
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  uint64_t v33;

  v3 = v1 + *(int *)(type metadata accessor for NewsHeadlineExposureEvent.Model(0) + 44);
  v4 = *(_OWORD *)(v3 + 144);
  v5 = *(_OWORD *)(v3 + 176);
  v31 = *(_OWORD *)(v3 + 160);
  v32 = v5;
  v6 = *(_OWORD *)(v3 + 80);
  v7 = *(_OWORD *)(v3 + 112);
  v27 = *(_OWORD *)(v3 + 96);
  v8 = v27;
  v28 = v7;
  v9 = *(_OWORD *)(v3 + 112);
  v10 = *(_OWORD *)(v3 + 144);
  v29 = *(_OWORD *)(v3 + 128);
  v11 = v29;
  v30 = v10;
  v12 = *(_OWORD *)(v3 + 16);
  v13 = *(_OWORD *)(v3 + 48);
  v23 = *(_OWORD *)(v3 + 32);
  v14 = v23;
  v24 = v13;
  v15 = *(_OWORD *)(v3 + 48);
  v16 = *(_OWORD *)(v3 + 80);
  v25 = *(_OWORD *)(v3 + 64);
  v17 = v25;
  v26 = v16;
  v18 = *(_OWORD *)(v3 + 16);
  v22[0] = *(_OWORD *)v3;
  v19 = v22[0];
  v22[1] = v18;
  v20 = *(_OWORD *)(v3 + 176);
  *(_OWORD *)(a1 + 160) = v31;
  *(_OWORD *)(a1 + 176) = v20;
  *(_OWORD *)(a1 + 96) = v8;
  *(_OWORD *)(a1 + 112) = v9;
  *(_OWORD *)(a1 + 128) = v11;
  *(_OWORD *)(a1 + 144) = v4;
  *(_OWORD *)(a1 + 32) = v14;
  *(_OWORD *)(a1 + 48) = v15;
  *(_OWORD *)(a1 + 64) = v17;
  *(_OWORD *)(a1 + 80) = v6;
  v33 = *(_QWORD *)(v3 + 192);
  *(_QWORD *)(a1 + 192) = *(_QWORD *)(v3 + 192);
  *(_OWORD *)a1 = v19;
  *(_OWORD *)(a1 + 16) = v12;
  return sub_1DC4F537C((uint64_t)v22);
}

uint64_t NewsHeadlineExposureEvent.Model.userArticleContextData.getter@<X0>(_WORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for NewsHeadlineExposureEvent.Model(0);
  *a1 = *(_WORD *)(v1 + *(int *)(result + 48));
  return result;
}

uint64_t NewsHeadlineExposureEvent.Model.issueData.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = (_QWORD *)(v1 + *(int *)(type metadata accessor for NewsHeadlineExposureEvent.Model(0) + 52));
  v4 = v3[1];
  *a1 = *v3;
  a1[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t NewsHeadlineExposureEvent.Model.badgeData.getter@<X0>(_WORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for NewsHeadlineExposureEvent.Model(0);
  *a1 = *(_WORD *)(v1 + *(int *)(result + 56));
  return result;
}

uint64_t NewsHeadlineExposureEvent.Model.channelData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for NewsHeadlineExposureEvent.Model(0) + 60));
  v5 = *v3;
  v4 = v3[1];
  v6 = v3[2];
  v7 = v3[3];
  v8 = *((_BYTE *)v3 + 32);
  LOBYTE(v3) = *((_BYTE *)v3 + 33);
  *(_QWORD *)a1 = v5;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  *(_BYTE *)(a1 + 32) = v8;
  *(_BYTE *)(a1 + 33) = (_BYTE)v3;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t NewsHeadlineExposureEvent.Model.hostArticleViewData.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = (_QWORD *)(v1 + *(int *)(type metadata accessor for NewsHeadlineExposureEvent.Model(0) + 64));
  v4 = v3[1];
  *a1 = *v3;
  a1[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t NewsHeadlineExposureEvent.Model.activeWatchlistData.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for NewsHeadlineExposureEvent.Model(0);
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 68));
  return result;
}

__n128 NewsHeadlineExposureEvent.Model.init(eventData:timedData:newsArticleData:feedPositionData:inGroupPositionData:feedData:groupData:articleScienceData:userArticleContextData:issueData:badgeData:channelData:hostArticleViewData:activeWatchlistData:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, __int128 *a3@<X2>, int *a4@<X3>, int *a5@<X4>, char *a6@<X5>, __int128 *a7@<X6>, __int128 *a8@<X7>, uint64_t a9@<X8>, __int16 *a10, uint64_t *a11, __int16 *a12, __n128 *a13, uint64_t *a14, char *a15)
{
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  char v22;
  char v23;
  uint64_t v24;
  int *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  __n128 *v34;
  __n128 result;
  _QWORD *v36;
  char v37;
  char v38;
  char v39;
  __int128 v40;
  int v41;
  char v42;
  int v43;
  uint64_t v45;
  uint64_t v46;
  char v47;
  uint64_t v48;
  uint64_t v49;
  __int128 v50;
  __int128 v51;
  __int16 v52;
  uint64_t v53;
  uint64_t v54;
  __int16 v55;
  unsigned __int8 v56;
  unsigned __int8 v57;
  unint64_t v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char v62;
  __n128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  uint64_t v76;

  v40 = *a3;
  v17 = *((_QWORD *)a3 + 2);
  v18 = *((_QWORD *)a3 + 3);
  v19 = *((_QWORD *)a3 + 5);
  v20 = *((_BYTE *)a3 + 48);
  v21 = *((_QWORD *)a3 + 7);
  v22 = *((_BYTE *)a3 + 64);
  v38 = *((_BYTE *)a3 + 65);
  v39 = *((_BYTE *)a3 + 32);
  v23 = *((_BYTE *)a3 + 66);
  v37 = *((_BYTE *)a3 + 67);
  v43 = *a5;
  v41 = *a4;
  v42 = *((_BYTE *)a5 + 4);
  v47 = *a6;
  v45 = *((_QWORD *)a6 + 2);
  v46 = *((_QWORD *)a6 + 1);
  v50 = a7[1];
  v51 = *a7;
  v48 = *((_QWORD *)a7 + 5);
  v49 = *((_QWORD *)a7 + 4);
  v74 = a8[10];
  v75 = a8[11];
  v76 = *((_QWORD *)a8 + 24);
  v70 = a8[6];
  v71 = a8[7];
  v72 = a8[8];
  v73 = a8[9];
  v66 = a8[2];
  v67 = a8[3];
  v68 = a8[4];
  v69 = a8[5];
  v64 = *a8;
  v65 = a8[1];
  v52 = *a10;
  v53 = a11[1];
  v54 = *a11;
  v55 = *a12;
  v63 = *a13;
  v59 = a13[1].n128_u64[0];
  v58 = a13[1].n128_u64[1];
  v56 = a13[2].n128_u8[1];
  v57 = a13[2].n128_u8[0];
  v60 = a14[1];
  v61 = *a14;
  v62 = *a15;
  v24 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 32))(a9, a1, v24);
  v25 = (int *)type metadata accessor for NewsHeadlineExposureEvent.Model(0);
  v26 = a9 + v25[5];
  v27 = sub_1DC62ABC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 32))(v26, a2, v27);
  v28 = a9 + v25[6];
  *(_QWORD *)(v28 + 16) = v17;
  *(_QWORD *)(v28 + 24) = v18;
  *(_OWORD *)v28 = v40;
  *(_BYTE *)(v28 + 32) = v39;
  *(_QWORD *)(v28 + 40) = v19;
  *(_BYTE *)(v28 + 48) = v20;
  *(_QWORD *)(v28 + 56) = v21;
  *(_BYTE *)(v28 + 64) = v22;
  *(_BYTE *)(v28 + 65) = v38;
  *(_BYTE *)(v28 + 66) = v23;
  *(_BYTE *)(v28 + 67) = v37;
  *(_DWORD *)(a9 + v25[7]) = v41;
  v29 = a9 + v25[8];
  *(_DWORD *)v29 = v43;
  *(_BYTE *)(v29 + 4) = v42;
  v30 = a9 + v25[9];
  *(_BYTE *)v30 = v47;
  *(_QWORD *)(v30 + 8) = v46;
  *(_QWORD *)(v30 + 16) = v45;
  v31 = a9 + v25[10];
  *(_OWORD *)v31 = v51;
  *(_OWORD *)(v31 + 16) = v50;
  *(_QWORD *)(v31 + 32) = v49;
  *(_QWORD *)(v31 + 40) = v48;
  v32 = a9 + v25[11];
  *(_QWORD *)(v32 + 192) = v76;
  *(_OWORD *)(v32 + 160) = v74;
  *(_OWORD *)(v32 + 176) = v75;
  *(_OWORD *)(v32 + 96) = v70;
  *(_OWORD *)(v32 + 112) = v71;
  *(_OWORD *)(v32 + 128) = v72;
  *(_OWORD *)(v32 + 144) = v73;
  *(_OWORD *)(v32 + 32) = v66;
  *(_OWORD *)(v32 + 48) = v67;
  *(_OWORD *)(v32 + 64) = v68;
  *(_OWORD *)(v32 + 80) = v69;
  *(_OWORD *)v32 = v64;
  *(_OWORD *)(v32 + 16) = v65;
  *(_WORD *)(a9 + v25[12]) = v52;
  v33 = (_QWORD *)(a9 + v25[13]);
  *v33 = v54;
  v33[1] = v53;
  *(_WORD *)(a9 + v25[14]) = v55;
  v34 = (__n128 *)(a9 + v25[15]);
  v34[1].n128_u64[0] = v59;
  v34[1].n128_u64[1] = v58;
  v34[2].n128_u8[0] = v57;
  v34[2].n128_u8[1] = v56;
  result = v63;
  *v34 = v63;
  v36 = (_QWORD *)(a9 + v25[16]);
  *v36 = v61;
  v36[1] = v60;
  *(_BYTE *)(a9 + v25[17]) = v62;
  return result;
}

uint64_t sub_1DC5AC7EC(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1DC5AC824 + 4 * byte_1DC640240[a1]))(0x746144746E657665, 0xE900000000000061);
}

uint64_t sub_1DC5AC824()
{
  return 0x74614464656D6974;
}

uint64_t sub_1DC5AC838()
{
  return 0x697472417377656ELL;
}

unint64_t sub_1DC5AC85C()
{
  return 0xD000000000000010;
}

uint64_t sub_1DC5AC8E4()
{
  return 0x7461446575737369;
}

uint64_t sub_1DC5AC904()
{
  return 0x446C656E6E616863;
}

unint64_t sub_1DC5AC924()
{
  return 0xD000000000000013;
}

uint64_t sub_1DC5AC94C()
{
  unsigned __int8 *v0;

  return sub_1DC5AC7EC(*v0);
}

uint64_t sub_1DC5AC954@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1DC5B1400(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DC5AC978()
{
  sub_1DC5ACF58();
  return sub_1DC62B604();
}

uint64_t sub_1DC5AC9A0()
{
  sub_1DC5ACF58();
  return sub_1DC62B610();
}

uint64_t NewsHeadlineExposureEvent.Model.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int *v10;
  __int128 *v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  char v19;
  char v20;
  char v21;
  int *v22;
  int v23;
  char *v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  __int128 *v28;
  __int128 v29;
  __int128 *v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 *v37;
  __int128 v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  uint64_t v43;
  char v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  uint64_t v57;
  char v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;

  v3 = v1;
  sub_1DC5AD974(0, &qword_1F036E278, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v43 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC5ACF58();
  sub_1DC62B5F8();
  LOBYTE(v45) = 0;
  sub_1DC62ABA8();
  sub_1DC4B6748(&qword_1EDB0E8A8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF8670], MEMORY[0x1E0CF8680]);
  sub_1DC62B4E4();
  if (!v2)
  {
    v10 = (int *)type metadata accessor for NewsHeadlineExposureEvent.Model(0);
    LOBYTE(v45) = 1;
    sub_1DC62ABC0();
    sub_1DC4B6748(&qword_1EDB0E8B8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF86C0], MEMORY[0x1E0CF86D0]);
    sub_1DC62B4E4();
    v11 = (__int128 *)(v3 + v10[6]);
    v12 = *v11;
    v13 = *((_QWORD *)v11 + 2);
    v14 = *((_QWORD *)v11 + 3);
    v15 = *((_BYTE *)v11 + 32);
    v16 = *((_QWORD *)v11 + 5);
    v17 = *((_BYTE *)v11 + 48);
    v18 = *((_QWORD *)v11 + 7);
    v19 = *((_BYTE *)v11 + 64);
    v20 = *((_BYTE *)v11 + 65);
    v21 = *((_BYTE *)v11 + 66);
    LOBYTE(v11) = *((_BYTE *)v11 + 67);
    v45 = v12;
    *(_QWORD *)&v46 = v13;
    *((_QWORD *)&v46 + 1) = v14;
    LOBYTE(v47) = v15;
    *((_QWORD *)&v47 + 1) = v16;
    LOBYTE(v48) = v17;
    *((_QWORD *)&v48 + 1) = v18;
    LOBYTE(v49) = v19;
    BYTE1(v49) = v20;
    BYTE2(v49) = v21;
    BYTE3(v49) = (_BYTE)v11;
    LOBYTE(v59) = 2;
    sub_1DC4C18E8();
    sub_1DC62B4E4();
    LODWORD(v45) = *(_DWORD *)(v3 + v10[7]);
    LOBYTE(v59) = 3;
    sub_1DC510CE4();
    sub_1DC62B4E4();
    v22 = (int *)(v3 + v10[8]);
    v23 = *v22;
    LOBYTE(v22) = *((_BYTE *)v22 + 4);
    LODWORD(v45) = v23;
    BYTE4(v45) = (_BYTE)v22;
    LOBYTE(v59) = 4;
    sub_1DC510E64();
    sub_1DC62B490();
    v24 = (char *)(v3 + v10[9]);
    v25 = *v24;
    v27 = *((_QWORD *)v24 + 1);
    v26 = *((_QWORD *)v24 + 2);
    LOBYTE(v45) = v25;
    *((_QWORD *)&v45 + 1) = v27;
    *(_QWORD *)&v46 = v26;
    LOBYTE(v59) = 5;
    sub_1DC4BEFD8();
    sub_1DC62B4E4();
    v28 = (__int128 *)(v3 + v10[10]);
    v29 = v28[1];
    v59 = *v28;
    v60 = v29;
    v61 = v28[2];
    v58 = 6;
    sub_1DC4C9004();
    sub_1DC62B490();
    v30 = (__int128 *)(v3 + v10[11]);
    v31 = v30[11];
    v55 = v30[10];
    v56 = v31;
    v57 = *((_QWORD *)v30 + 24);
    v32 = v30[7];
    v51 = v30[6];
    v52 = v32;
    v33 = v30[9];
    v53 = v30[8];
    v54 = v33;
    v34 = v30[3];
    v47 = v30[2];
    v48 = v34;
    v35 = v30[5];
    v49 = v30[4];
    v50 = v35;
    v36 = v30[1];
    v45 = *v30;
    v46 = v36;
    v44 = 7;
    sub_1DC4F4918();
    sub_1DC62B4E4();
    LOWORD(v45) = *(_WORD *)(v3 + v10[12]);
    v44 = 8;
    sub_1DC4F4A98();
    sub_1DC62B4E4();
    v45 = *(_OWORD *)(v3 + v10[13]);
    v44 = 9;
    sub_1DC4C9674();
    sub_1DC62B490();
    LOWORD(v45) = *(_WORD *)(v3 + v10[14]);
    v44 = 10;
    sub_1DC5AB99C();
    sub_1DC62B490();
    v37 = (__int128 *)(v3 + v10[15]);
    v38 = *v37;
    v39 = *((_QWORD *)v37 + 2);
    v40 = *((_QWORD *)v37 + 3);
    v41 = *((_BYTE *)v37 + 32);
    LOBYTE(v37) = *((_BYTE *)v37 + 33);
    v45 = v38;
    *(_QWORD *)&v46 = v39;
    *((_QWORD *)&v46 + 1) = v40;
    LOBYTE(v47) = v41;
    BYTE1(v47) = (_BYTE)v37;
    v44 = 11;
    sub_1DC4C8E84();
    sub_1DC62B4E4();
    v45 = *(_OWORD *)(v3 + v10[16]);
    v44 = 12;
    sub_1DC4E656C();
    sub_1DC62B490();
    LOBYTE(v45) = *(_BYTE *)(v3 + v10[17]);
    v44 = 13;
    sub_1DC4C9974();
    sub_1DC62B490();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1DC5ACF58()
{
  unint64_t result;

  result = qword_1EDB12928;
  if (!qword_1EDB12928)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC640594, &type metadata for NewsHeadlineExposureEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB12928);
  }
  return result;
}

uint64_t NewsHeadlineExposureEvent.Model.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;
  int *v17;
  char *v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  int v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  int *v29;
  __int128 v30;
  char v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  char v35;
  char v36;
  char v37;
  char v38;
  char *v39;
  char v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  __int128 v46;
  char *v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  uint64_t v54;
  uint64_t v55;
  char v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  char v60;
  char v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  _QWORD *v74;
  uint64_t v75;
  char *v76;
  int *v77;
  __int128 v78;
  uint64_t v79;
  uint64_t v80;
  char v81;
  char v82;
  __int128 v83;
  __int128 v84;
  __int128 v85;
  __int128 v86;
  __int128 v87;
  __int128 v88;
  __int128 v89;
  __int128 v90;
  __int128 v91;
  __int128 v92;
  __int128 v93;
  __int128 v94;
  uint64_t v95;
  char v96;
  char v97;

  v67 = a2;
  v73 = sub_1DC62ABC0();
  v71 = *(_QWORD *)(v73 - 8);
  MEMORY[0x1E0C80A78](v73);
  v4 = (char *)&v66 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1DC62ABA8();
  v72 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v66 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC5AD974(0, &qword_1EDB12930, MEMORY[0x1E0DED048]);
  v69 = v8;
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v66 - v10;
  v77 = (int *)type metadata accessor for NewsHeadlineExposureEvent.Model(0);
  MEMORY[0x1E0C80A78](v77);
  v76 = (char *)&v66 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = a1[3];
  v74 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v13);
  sub_1DC5ACF58();
  v68 = v11;
  v14 = v75;
  sub_1DC62B5E0();
  v70 = v5;
  if (v14)
  {
    v75 = v14;
    result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v74);
    v25 = 0;
    goto LABEL_7;
  }
  v15 = v9;
  LOBYTE(v83) = 0;
  sub_1DC4B6748(&qword_1EDB0E278, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF8670], MEMORY[0x1E0CF8688]);
  sub_1DC62B454();
  v26 = v5;
  v27 = v76;
  (*(void (**)(char *, char *, uint64_t))(v72 + 32))(v76, v7, v26);
  LOBYTE(v83) = 1;
  sub_1DC4B6748(&qword_1EDB0E8C0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF86C0], MEMORY[0x1E0CF86D8]);
  v28 = v73;
  sub_1DC62B454();
  v29 = v77;
  (*(void (**)(char *, char *, uint64_t))(v71 + 32))(&v27[v77[5]], v4, v28);
  LOBYTE(v78) = 2;
  sub_1DC4C18A0();
  sub_1DC62B454();
  v30 = v84;
  v31 = v85;
  v32 = *((_QWORD *)&v85 + 1);
  v33 = v86;
  v34 = *((_QWORD *)&v86 + 1);
  v35 = v87;
  v36 = BYTE1(v87);
  v37 = BYTE2(v87);
  v38 = BYTE3(v87);
  v39 = &v27[v29[6]];
  *(_OWORD *)v39 = v83;
  *((_OWORD *)v39 + 1) = v30;
  v39[32] = v31;
  *((_QWORD *)v39 + 5) = v32;
  v39[48] = v33;
  *((_QWORD *)v39 + 7) = v34;
  v39[64] = v35;
  v39[65] = v36;
  v39[66] = v37;
  v39[67] = v38;
  LOBYTE(v78) = 3;
  sub_1DC510CA0();
  sub_1DC62B454();
  *(_DWORD *)&v27[v29[7]] = v83;
  LOBYTE(v78) = 4;
  sub_1DC510E20();
  sub_1DC62B400();
  v40 = BYTE4(v83);
  v41 = &v27[v29[8]];
  *(_DWORD *)v41 = v83;
  v41[4] = v40;
  LOBYTE(v78) = 5;
  sub_1DC4BEF94();
  sub_1DC62B454();
  v42 = *((_QWORD *)&v83 + 1);
  v43 = v84;
  v44 = &v27[v29[9]];
  *v44 = v83;
  *((_QWORD *)v44 + 1) = v42;
  *((_QWORD *)v44 + 2) = v43;
  LOBYTE(v78) = 6;
  sub_1DC4C8FC0();
  sub_1DC62B400();
  v45 = &v27[v29[10]];
  v46 = v84;
  *(_OWORD *)v45 = v83;
  *((_OWORD *)v45 + 1) = v46;
  *((_OWORD *)v45 + 2) = v85;
  v97 = 7;
  sub_1DC4F48D4();
  sub_1DC62B454();
  v47 = &v27[v29[11]];
  v48 = v94;
  *((_OWORD *)v47 + 10) = v93;
  *((_OWORD *)v47 + 11) = v48;
  *((_QWORD *)v47 + 24) = v95;
  v49 = v90;
  *((_OWORD *)v47 + 6) = v89;
  *((_OWORD *)v47 + 7) = v49;
  v50 = v92;
  *((_OWORD *)v47 + 8) = v91;
  *((_OWORD *)v47 + 9) = v50;
  v51 = v86;
  *((_OWORD *)v47 + 2) = v85;
  *((_OWORD *)v47 + 3) = v51;
  v52 = v88;
  *((_OWORD *)v47 + 4) = v87;
  *((_OWORD *)v47 + 5) = v52;
  v53 = v84;
  *(_OWORD *)v47 = v83;
  *((_OWORD *)v47 + 1) = v53;
  v96 = 8;
  sub_1DC4F4A54();
  sub_1DC62B454();
  *(_WORD *)&v27[v77[12]] = v78;
  v96 = 9;
  sub_1DC4C9630();
  sub_1DC62B400();
  v75 = 0;
  *(_OWORD *)&v76[v77[13]] = v78;
  v96 = 10;
  sub_1DC5AB958();
  v54 = v75;
  sub_1DC62B400();
  v75 = v54;
  if (v54 || (*(_WORD *)&v76[v77[14]] = v78, v96 = 11, sub_1DC4C8E40(), v55 = v75, sub_1DC62B454(), (v75 = v55) != 0))
  {
    (*(void (**)(char *, uint64_t))(v15 + 8))(v68, v69);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v74);
    v56 = 0;
    v25 = 0;
  }
  else
  {
    v58 = v79;
    v59 = v80;
    v60 = v81;
    v61 = v82;
    v62 = &v76[v77[15]];
    *(_OWORD *)v62 = v78;
    *((_QWORD *)v62 + 2) = v58;
    *((_QWORD *)v62 + 3) = v59;
    v62[32] = v60;
    v62[33] = v61;
    v96 = 12;
    sub_1DC4E6528();
    v63 = v75;
    sub_1DC62B400();
    v75 = v63;
    if (v63)
    {
      (*(void (**)(char *, uint64_t))(v15 + 8))(v68, v69);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v74);
      v25 = 0;
      v56 = 1;
    }
    else
    {
      *(_OWORD *)&v76[v77[16]] = v78;
      v96 = 13;
      sub_1DC4C9930();
      v64 = v75;
      sub_1DC62B400();
      v75 = v64;
      if (!v64)
      {
        (*(void (**)(char *, uint64_t))(v15 + 8))(v68, v69);
        v65 = (uint64_t)v76;
        v76[v77[17]] = v78;
        sub_1DC5AD9D0(v65, v67);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v74);
        return sub_1DC5ADA14(v65);
      }
      (*(void (**)(char *, uint64_t))(v15 + 8))(v68, v69);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v74);
      v56 = 1;
      v25 = 1;
    }
  }
  v57 = v76;
  (*(void (**)(char *, uint64_t))(v72 + 8))(v76, v70);
  (*(void (**)(char *, uint64_t))(v71 + 8))(&v57[v77[5]], v73);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v17 = v77;
  swift_bridgeObjectRelease();
  sub_1DC4CB1B4(*(_QWORD *)&v57[v17[10]], *(_QWORD *)&v57[v17[10] + 8], *(_QWORD *)&v57[v17[10] + 16]);
  v18 = &v57[v17[11]];
  v19 = *((_OWORD *)v18 + 11);
  v93 = *((_OWORD *)v18 + 10);
  v94 = v19;
  v95 = *((_QWORD *)v18 + 24);
  v20 = *((_OWORD *)v18 + 7);
  v89 = *((_OWORD *)v18 + 6);
  v90 = v20;
  v21 = *((_OWORD *)v18 + 9);
  v91 = *((_OWORD *)v18 + 8);
  v92 = v21;
  v22 = *((_OWORD *)v18 + 3);
  v85 = *((_OWORD *)v18 + 2);
  v86 = v22;
  v23 = *((_OWORD *)v18 + 5);
  v87 = *((_OWORD *)v18 + 4);
  v88 = v23;
  v24 = *((_OWORD *)v18 + 1);
  v83 = *(_OWORD *)v18;
  v84 = v24;
  sub_1DC4F6710((uint64_t)&v83);
  result = swift_bridgeObjectRelease();
  if ((v56 & 1) == 0)
  {
LABEL_7:
    if (!v25)
      return result;
    return swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  if ((v25 & 1) == 0)
    return result;
  return swift_bridgeObjectRelease();
}

void sub_1DC5AD974(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1DC5ACF58();
    v7 = a3(a1, &type metadata for NewsHeadlineExposureEvent.Model.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1DC5AD9D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for NewsHeadlineExposureEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DC5ADA14(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for NewsHeadlineExposureEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1DC5ADA50@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return NewsHeadlineExposureEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_1DC5ADA64(_QWORD *a1)
{
  return NewsHeadlineExposureEvent.Model.encode(to:)(a1);
}

uint64_t sub_1DC5ADA78@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4B2C68(&qword_1EDB10DD0, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1EDB10DB8, a1);
}

uint64_t sub_1DC5ADA9C@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4B2C68(qword_1EDB10DF0, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1EDB10DD8, a1);
}

uint64_t sub_1DC5ADAC0@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v4 = *MEMORY[0x1E0CF8128];
  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 104))(a2, v4, v5);
  v6 = a2 + a1[5];
  sub_1DC4B66A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 104))(v6, v4, v7);
  v8 = a2 + a1[6];
  sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 104))(v8, v4, v9);
  v10 = a2 + a1[7];
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E7D0, (void (*)(void))sub_1DC510CA0, (void (*)(void))sub_1DC510CE4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 104))(v10, v4, v11);
  v12 = a2 + a1[8];
  v13 = *MEMORY[0x1E0CF8120];
  sub_1DC4B4B50(0, &qword_1EDB0E7E8, (void (*)(void))sub_1DC510E20, (void (*)(void))sub_1DC510E64);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 104))(v12, v13, v14);
  v15 = a2 + a1[9];
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 104))(v15, v4, v16);
  v17 = a2 + a1[10];
  sub_1DC4B4B50(0, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 104))(v17, v13, v18);
  v19 = a2 + a1[11];
  sub_1DC4B4B50(0, &qword_1EDB0E270, (void (*)(void))sub_1DC4F48D4, (void (*)(void))sub_1DC4F4918);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 104))(v19, v4, v20);
  v21 = a2 + a1[12];
  sub_1DC4B4B50(0, &qword_1EDB0E820, (void (*)(void))sub_1DC4F4A54, (void (*)(void))sub_1DC4F4A98);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 104))(v21, v4, v22);
  v23 = a2 + a1[13];
  sub_1DC4B4B50(0, &qword_1EDB0E868, (void (*)(void))sub_1DC4C9630, (void (*)(void))sub_1DC4C9674);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 104))(v23, v13, v24);
  v25 = a2 + a1[14];
  sub_1DC4B4B50(0, &qword_1EDB0E858, (void (*)(void))sub_1DC5AB958, (void (*)(void))sub_1DC5AB99C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 104))(v25, v13, v26);
  v27 = a2 + a1[15];
  sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 104))(v27, v4, v28);
  v29 = a2 + a1[16];
  sub_1DC4B4B50(0, &qword_1EDB0E260, (void (*)(void))sub_1DC4E6528, (void (*)(void))sub_1DC4E656C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 104))(v29, v13, v30);
  v31 = a2 + a1[17];
  sub_1DC4B4B50(0, &qword_1EDB0E790, (void (*)(void))sub_1DC4C9930, (void (*)(void))sub_1DC4C9974);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 104))(v31, v13, v32);
}

uint64_t *initializeBufferWithCopyOfBuffer for NewsHeadlineExposureEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v60 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v60 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_1DC4B6600();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    sub_1DC4B66A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = a3[6];
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
    v16 = a3[7];
    v17 = (char *)a1 + v16;
    v18 = (char *)a2 + v16;
    sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E7D0, (void (*)(void))sub_1DC510CA0, (void (*)(void))sub_1DC510CE4);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
    v20 = a3[8];
    v21 = (char *)a1 + v20;
    v22 = (char *)a2 + v20;
    sub_1DC4B4B50(0, &qword_1EDB0E7E8, (void (*)(void))sub_1DC510E20, (void (*)(void))sub_1DC510E64);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v21, v22, v23);
    v24 = a3[9];
    v25 = (char *)a1 + v24;
    v26 = (char *)a2 + v24;
    sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v25, v26, v27);
    v28 = a3[10];
    v29 = (char *)a1 + v28;
    v30 = (char *)a2 + v28;
    sub_1DC4B4B50(0, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 16))(v29, v30, v31);
    v32 = a3[11];
    v33 = (char *)a1 + v32;
    v34 = (char *)a2 + v32;
    sub_1DC4B4B50(0, &qword_1EDB0E270, (void (*)(void))sub_1DC4F48D4, (void (*)(void))sub_1DC4F4918);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 16))(v33, v34, v35);
    v36 = a3[12];
    v37 = (char *)a1 + v36;
    v38 = (char *)a2 + v36;
    sub_1DC4B4B50(0, &qword_1EDB0E820, (void (*)(void))sub_1DC4F4A54, (void (*)(void))sub_1DC4F4A98);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 16))(v37, v38, v39);
    v40 = a3[13];
    v41 = (char *)a1 + v40;
    v42 = (char *)a2 + v40;
    sub_1DC4B4B50(0, &qword_1EDB0E868, (void (*)(void))sub_1DC4C9630, (void (*)(void))sub_1DC4C9674);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v43 - 8) + 16))(v41, v42, v43);
    v44 = a3[14];
    v45 = (char *)a1 + v44;
    v46 = (char *)a2 + v44;
    sub_1DC4B4B50(0, &qword_1EDB0E858, (void (*)(void))sub_1DC5AB958, (void (*)(void))sub_1DC5AB99C);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v47 - 8) + 16))(v45, v46, v47);
    v48 = a3[15];
    v49 = (char *)a1 + v48;
    v50 = (char *)a2 + v48;
    sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v51 - 8) + 16))(v49, v50, v51);
    v52 = a3[16];
    v53 = (char *)a1 + v52;
    v54 = (char *)a2 + v52;
    sub_1DC4B4B50(0, &qword_1EDB0E260, (void (*)(void))sub_1DC4E6528, (void (*)(void))sub_1DC4E656C);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v55 - 8) + 16))(v53, v54, v55);
    v56 = a3[17];
    v57 = (char *)a1 + v56;
    v58 = (char *)a2 + v56;
    sub_1DC4B4B50(0, &qword_1EDB0E790, (void (*)(void))sub_1DC4C9930, (void (*)(void))sub_1DC4C9974);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v59 - 8) + 16))(v57, v58, v59);
  }
  return a1;
}

uint64_t destroy for NewsHeadlineExposureEvent(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + a2[5];
  sub_1DC4B66A4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = a1 + a2[6];
  sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  v9 = a1 + a2[7];
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E7D0, (void (*)(void))sub_1DC510CA0, (void (*)(void))sub_1DC510CE4);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  v11 = a1 + a2[8];
  sub_1DC4B4B50(0, &qword_1EDB0E7E8, (void (*)(void))sub_1DC510E20, (void (*)(void))sub_1DC510E64);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
  v13 = a1 + a2[9];
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v13, v14);
  v15 = a1 + a2[10];
  sub_1DC4B4B50(0, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v15, v16);
  v17 = a1 + a2[11];
  sub_1DC4B4B50(0, &qword_1EDB0E270, (void (*)(void))sub_1DC4F48D4, (void (*)(void))sub_1DC4F4918);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(v17, v18);
  v19 = a1 + a2[12];
  sub_1DC4B4B50(0, &qword_1EDB0E820, (void (*)(void))sub_1DC4F4A54, (void (*)(void))sub_1DC4F4A98);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 8))(v19, v20);
  v21 = a1 + a2[13];
  sub_1DC4B4B50(0, &qword_1EDB0E868, (void (*)(void))sub_1DC4C9630, (void (*)(void))sub_1DC4C9674);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 8))(v21, v22);
  v23 = a1 + a2[14];
  sub_1DC4B4B50(0, &qword_1EDB0E858, (void (*)(void))sub_1DC5AB958, (void (*)(void))sub_1DC5AB99C);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 8))(v23, v24);
  v25 = a1 + a2[15];
  sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 8))(v25, v26);
  v27 = a1 + a2[16];
  sub_1DC4B4B50(0, &qword_1EDB0E260, (void (*)(void))sub_1DC4E6528, (void (*)(void))sub_1DC4E656C);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 8))(v27, v28);
  v29 = a1 + a2[17];
  sub_1DC4B4B50(0, &qword_1EDB0E790, (void (*)(void))sub_1DC4C9930, (void (*)(void))sub_1DC4C9974);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 8))(v29, v30);
}

uint64_t initializeWithCopy for NewsHeadlineExposureEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1DC4B66A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E7D0, (void (*)(void))sub_1DC510CA0, (void (*)(void))sub_1DC510CE4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1DC4B4B50(0, &qword_1EDB0E7E8, (void (*)(void))sub_1DC510E20, (void (*)(void))sub_1DC510E64);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1DC4B4B50(0, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 16))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1DC4B4B50(0, &qword_1EDB0E270, (void (*)(void))sub_1DC4F48D4, (void (*)(void))sub_1DC4F4918);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 16))(v32, v33, v34);
  v35 = a3[12];
  v36 = a1 + v35;
  v37 = a2 + v35;
  sub_1DC4B4B50(0, &qword_1EDB0E820, (void (*)(void))sub_1DC4F4A54, (void (*)(void))sub_1DC4F4A98);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 16))(v36, v37, v38);
  v39 = a3[13];
  v40 = a1 + v39;
  v41 = a2 + v39;
  sub_1DC4B4B50(0, &qword_1EDB0E868, (void (*)(void))sub_1DC4C9630, (void (*)(void))sub_1DC4C9674);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 16))(v40, v41, v42);
  v43 = a3[14];
  v44 = a1 + v43;
  v45 = a2 + v43;
  sub_1DC4B4B50(0, &qword_1EDB0E858, (void (*)(void))sub_1DC5AB958, (void (*)(void))sub_1DC5AB99C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 16))(v44, v45, v46);
  v47 = a3[15];
  v48 = a1 + v47;
  v49 = a2 + v47;
  sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 16))(v48, v49, v50);
  v51 = a3[16];
  v52 = a1 + v51;
  v53 = a2 + v51;
  sub_1DC4B4B50(0, &qword_1EDB0E260, (void (*)(void))sub_1DC4E6528, (void (*)(void))sub_1DC4E656C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v54 - 8) + 16))(v52, v53, v54);
  v55 = a3[17];
  v56 = a1 + v55;
  v57 = a2 + v55;
  sub_1DC4B4B50(0, &qword_1EDB0E790, (void (*)(void))sub_1DC4C9930, (void (*)(void))sub_1DC4C9974);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v58 - 8) + 16))(v56, v57, v58);
  return a1;
}

uint64_t assignWithCopy for NewsHeadlineExposureEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1DC4B66A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 24))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E7D0, (void (*)(void))sub_1DC510CA0, (void (*)(void))sub_1DC510CE4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 24))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1DC4B4B50(0, &qword_1EDB0E7E8, (void (*)(void))sub_1DC510E20, (void (*)(void))sub_1DC510E64);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 24))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 24))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1DC4B4B50(0, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 24))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1DC4B4B50(0, &qword_1EDB0E270, (void (*)(void))sub_1DC4F48D4, (void (*)(void))sub_1DC4F4918);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 24))(v32, v33, v34);
  v35 = a3[12];
  v36 = a1 + v35;
  v37 = a2 + v35;
  sub_1DC4B4B50(0, &qword_1EDB0E820, (void (*)(void))sub_1DC4F4A54, (void (*)(void))sub_1DC4F4A98);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 24))(v36, v37, v38);
  v39 = a3[13];
  v40 = a1 + v39;
  v41 = a2 + v39;
  sub_1DC4B4B50(0, &qword_1EDB0E868, (void (*)(void))sub_1DC4C9630, (void (*)(void))sub_1DC4C9674);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 24))(v40, v41, v42);
  v43 = a3[14];
  v44 = a1 + v43;
  v45 = a2 + v43;
  sub_1DC4B4B50(0, &qword_1EDB0E858, (void (*)(void))sub_1DC5AB958, (void (*)(void))sub_1DC5AB99C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 24))(v44, v45, v46);
  v47 = a3[15];
  v48 = a1 + v47;
  v49 = a2 + v47;
  sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 24))(v48, v49, v50);
  v51 = a3[16];
  v52 = a1 + v51;
  v53 = a2 + v51;
  sub_1DC4B4B50(0, &qword_1EDB0E260, (void (*)(void))sub_1DC4E6528, (void (*)(void))sub_1DC4E656C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v54 - 8) + 24))(v52, v53, v54);
  v55 = a3[17];
  v56 = a1 + v55;
  v57 = a2 + v55;
  sub_1DC4B4B50(0, &qword_1EDB0E790, (void (*)(void))sub_1DC4C9930, (void (*)(void))sub_1DC4C9974);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v58 - 8) + 24))(v56, v57, v58);
  return a1;
}

uint64_t initializeWithTake for NewsHeadlineExposureEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1DC4B66A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E7D0, (void (*)(void))sub_1DC510CA0, (void (*)(void))sub_1DC510CE4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1DC4B4B50(0, &qword_1EDB0E7E8, (void (*)(void))sub_1DC510E20, (void (*)(void))sub_1DC510E64);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1DC4B4B50(0, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 32))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1DC4B4B50(0, &qword_1EDB0E270, (void (*)(void))sub_1DC4F48D4, (void (*)(void))sub_1DC4F4918);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 32))(v32, v33, v34);
  v35 = a3[12];
  v36 = a1 + v35;
  v37 = a2 + v35;
  sub_1DC4B4B50(0, &qword_1EDB0E820, (void (*)(void))sub_1DC4F4A54, (void (*)(void))sub_1DC4F4A98);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 32))(v36, v37, v38);
  v39 = a3[13];
  v40 = a1 + v39;
  v41 = a2 + v39;
  sub_1DC4B4B50(0, &qword_1EDB0E868, (void (*)(void))sub_1DC4C9630, (void (*)(void))sub_1DC4C9674);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 32))(v40, v41, v42);
  v43 = a3[14];
  v44 = a1 + v43;
  v45 = a2 + v43;
  sub_1DC4B4B50(0, &qword_1EDB0E858, (void (*)(void))sub_1DC5AB958, (void (*)(void))sub_1DC5AB99C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 32))(v44, v45, v46);
  v47 = a3[15];
  v48 = a1 + v47;
  v49 = a2 + v47;
  sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 32))(v48, v49, v50);
  v51 = a3[16];
  v52 = a1 + v51;
  v53 = a2 + v51;
  sub_1DC4B4B50(0, &qword_1EDB0E260, (void (*)(void))sub_1DC4E6528, (void (*)(void))sub_1DC4E656C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v54 - 8) + 32))(v52, v53, v54);
  v55 = a3[17];
  v56 = a1 + v55;
  v57 = a2 + v55;
  sub_1DC4B4B50(0, &qword_1EDB0E790, (void (*)(void))sub_1DC4C9930, (void (*)(void))sub_1DC4C9974);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v58 - 8) + 32))(v56, v57, v58);
  return a1;
}

uint64_t assignWithTake for NewsHeadlineExposureEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1DC4B66A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 40))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E7D0, (void (*)(void))sub_1DC510CA0, (void (*)(void))sub_1DC510CE4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 40))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1DC4B4B50(0, &qword_1EDB0E7E8, (void (*)(void))sub_1DC510E20, (void (*)(void))sub_1DC510E64);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 40))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 40))(v24, v25, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  sub_1DC4B4B50(0, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 40))(v28, v29, v30);
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  sub_1DC4B4B50(0, &qword_1EDB0E270, (void (*)(void))sub_1DC4F48D4, (void (*)(void))sub_1DC4F4918);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 40))(v32, v33, v34);
  v35 = a3[12];
  v36 = a1 + v35;
  v37 = a2 + v35;
  sub_1DC4B4B50(0, &qword_1EDB0E820, (void (*)(void))sub_1DC4F4A54, (void (*)(void))sub_1DC4F4A98);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 40))(v36, v37, v38);
  v39 = a3[13];
  v40 = a1 + v39;
  v41 = a2 + v39;
  sub_1DC4B4B50(0, &qword_1EDB0E868, (void (*)(void))sub_1DC4C9630, (void (*)(void))sub_1DC4C9674);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 40))(v40, v41, v42);
  v43 = a3[14];
  v44 = a1 + v43;
  v45 = a2 + v43;
  sub_1DC4B4B50(0, &qword_1EDB0E858, (void (*)(void))sub_1DC5AB958, (void (*)(void))sub_1DC5AB99C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 40))(v44, v45, v46);
  v47 = a3[15];
  v48 = a1 + v47;
  v49 = a2 + v47;
  sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 40))(v48, v49, v50);
  v51 = a3[16];
  v52 = a1 + v51;
  v53 = a2 + v51;
  sub_1DC4B4B50(0, &qword_1EDB0E260, (void (*)(void))sub_1DC4E6528, (void (*)(void))sub_1DC4E656C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v54 - 8) + 40))(v52, v53, v54);
  v55 = a3[17];
  v56 = a1 + v55;
  v57 = a2 + v55;
  sub_1DC4B4B50(0, &qword_1EDB0E790, (void (*)(void))sub_1DC4C9930, (void (*)(void))sub_1DC4C9974);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v58 - 8) + 40))(v56, v57, v58);
  return a1;
}

uint64_t getEnumTagSinglePayload for NewsHeadlineExposureEvent()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC5AF6DC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  sub_1DC4B6600();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    sub_1DC4B66A4();
    v12 = *(_QWORD *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
    {
      v8 = v11;
      v13 = a3[5];
    }
    else
    {
      sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
      v12 = *(_QWORD *)(v14 - 8);
      if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
      {
        v8 = v14;
        v13 = a3[6];
      }
      else
      {
        sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E7D0, (void (*)(void))sub_1DC510CA0, (void (*)(void))sub_1DC510CE4);
        v12 = *(_QWORD *)(v15 - 8);
        if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
        {
          v8 = v15;
          v13 = a3[7];
        }
        else
        {
          sub_1DC4B4B50(0, &qword_1EDB0E7E8, (void (*)(void))sub_1DC510E20, (void (*)(void))sub_1DC510E64);
          v12 = *(_QWORD *)(v16 - 8);
          if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
          {
            v8 = v16;
            v13 = a3[8];
          }
          else
          {
            sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
            v12 = *(_QWORD *)(v17 - 8);
            if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
            {
              v8 = v17;
              v13 = a3[9];
            }
            else
            {
              sub_1DC4B4B50(0, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
              v12 = *(_QWORD *)(v18 - 8);
              if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
              {
                v8 = v18;
                v13 = a3[10];
              }
              else
              {
                sub_1DC4B4B50(0, &qword_1EDB0E270, (void (*)(void))sub_1DC4F48D4, (void (*)(void))sub_1DC4F4918);
                v12 = *(_QWORD *)(v19 - 8);
                if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                {
                  v8 = v19;
                  v13 = a3[11];
                }
                else
                {
                  sub_1DC4B4B50(0, &qword_1EDB0E820, (void (*)(void))sub_1DC4F4A54, (void (*)(void))sub_1DC4F4A98);
                  v12 = *(_QWORD *)(v20 - 8);
                  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                  {
                    v8 = v20;
                    v13 = a3[12];
                  }
                  else
                  {
                    sub_1DC4B4B50(0, &qword_1EDB0E868, (void (*)(void))sub_1DC4C9630, (void (*)(void))sub_1DC4C9674);
                    v12 = *(_QWORD *)(v21 - 8);
                    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                    {
                      v8 = v21;
                      v13 = a3[13];
                    }
                    else
                    {
                      sub_1DC4B4B50(0, &qword_1EDB0E858, (void (*)(void))sub_1DC5AB958, (void (*)(void))sub_1DC5AB99C);
                      v12 = *(_QWORD *)(v22 - 8);
                      if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                      {
                        v8 = v22;
                        v13 = a3[14];
                      }
                      else
                      {
                        sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
                        v12 = *(_QWORD *)(v23 - 8);
                        if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                        {
                          v8 = v23;
                          v13 = a3[15];
                        }
                        else
                        {
                          sub_1DC4B4B50(0, &qword_1EDB0E260, (void (*)(void))sub_1DC4E6528, (void (*)(void))sub_1DC4E656C);
                          v12 = *(_QWORD *)(v24 - 8);
                          if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
                          {
                            v8 = v24;
                            v13 = a3[16];
                          }
                          else
                          {
                            sub_1DC4B4B50(0, &qword_1EDB0E790, (void (*)(void))sub_1DC4C9930, (void (*)(void))sub_1DC4C9974);
                            v8 = v25;
                            v12 = *(_QWORD *)(v25 - 8);
                            v13 = a3[17];
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t storeEnumTagSinglePayload for NewsHeadlineExposureEvent()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC5AFA8C(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  sub_1DC4B6600();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    sub_1DC4B66A4();
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = a4[5];
    }
    else
    {
      sub_1DC4B4B50(0, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
      v14 = *(_QWORD *)(v16 - 8);
      if (*(_DWORD *)(v14 + 84) == a3)
      {
        v10 = v16;
        v15 = a4[6];
      }
      else
      {
        sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E7D0, (void (*)(void))sub_1DC510CA0, (void (*)(void))sub_1DC510CE4);
        v14 = *(_QWORD *)(v17 - 8);
        if (*(_DWORD *)(v14 + 84) == a3)
        {
          v10 = v17;
          v15 = a4[7];
        }
        else
        {
          sub_1DC4B4B50(0, &qword_1EDB0E7E8, (void (*)(void))sub_1DC510E20, (void (*)(void))sub_1DC510E64);
          v14 = *(_QWORD *)(v18 - 8);
          if (*(_DWORD *)(v14 + 84) == a3)
          {
            v10 = v18;
            v15 = a4[8];
          }
          else
          {
            sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
            v14 = *(_QWORD *)(v19 - 8);
            if (*(_DWORD *)(v14 + 84) == a3)
            {
              v10 = v19;
              v15 = a4[9];
            }
            else
            {
              sub_1DC4B4B50(0, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
              v14 = *(_QWORD *)(v20 - 8);
              if (*(_DWORD *)(v14 + 84) == a3)
              {
                v10 = v20;
                v15 = a4[10];
              }
              else
              {
                sub_1DC4B4B50(0, &qword_1EDB0E270, (void (*)(void))sub_1DC4F48D4, (void (*)(void))sub_1DC4F4918);
                v14 = *(_QWORD *)(v21 - 8);
                if (*(_DWORD *)(v14 + 84) == a3)
                {
                  v10 = v21;
                  v15 = a4[11];
                }
                else
                {
                  sub_1DC4B4B50(0, &qword_1EDB0E820, (void (*)(void))sub_1DC4F4A54, (void (*)(void))sub_1DC4F4A98);
                  v14 = *(_QWORD *)(v22 - 8);
                  if (*(_DWORD *)(v14 + 84) == a3)
                  {
                    v10 = v22;
                    v15 = a4[12];
                  }
                  else
                  {
                    sub_1DC4B4B50(0, &qword_1EDB0E868, (void (*)(void))sub_1DC4C9630, (void (*)(void))sub_1DC4C9674);
                    v14 = *(_QWORD *)(v23 - 8);
                    if (*(_DWORD *)(v14 + 84) == a3)
                    {
                      v10 = v23;
                      v15 = a4[13];
                    }
                    else
                    {
                      sub_1DC4B4B50(0, &qword_1EDB0E858, (void (*)(void))sub_1DC5AB958, (void (*)(void))sub_1DC5AB99C);
                      v14 = *(_QWORD *)(v24 - 8);
                      if (*(_DWORD *)(v14 + 84) == a3)
                      {
                        v10 = v24;
                        v15 = a4[14];
                      }
                      else
                      {
                        sub_1DC4B4B50(0, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
                        v14 = *(_QWORD *)(v25 - 8);
                        if (*(_DWORD *)(v14 + 84) == a3)
                        {
                          v10 = v25;
                          v15 = a4[15];
                        }
                        else
                        {
                          sub_1DC4B4B50(0, &qword_1EDB0E260, (void (*)(void))sub_1DC4E6528, (void (*)(void))sub_1DC4E656C);
                          v14 = *(_QWORD *)(v26 - 8);
                          if (*(_DWORD *)(v14 + 84) == a3)
                          {
                            v10 = v26;
                            v15 = a4[16];
                          }
                          else
                          {
                            sub_1DC4B4B50(0, &qword_1EDB0E790, (void (*)(void))sub_1DC4C9930, (void (*)(void))sub_1DC4C9974);
                            v10 = v27;
                            v14 = *(_QWORD *)(v27 - 8);
                            v15 = a4[17];
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_1DC5AFE38()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;

  sub_1DC4B6600();
  if (v0 <= 0x3F)
  {
    sub_1DC4B66A4();
    if (v1 <= 0x3F)
    {
      sub_1DC4B4B50(319, &qword_1EDB0E7B8, (void (*)(void))sub_1DC4C18A0, (void (*)(void))sub_1DC4C18E8);
      if (v2 <= 0x3F)
      {
        sub_1DC4B4B50(319, (unint64_t *)&qword_1EDB0E7D0, (void (*)(void))sub_1DC510CA0, (void (*)(void))sub_1DC510CE4);
        if (v3 <= 0x3F)
        {
          sub_1DC4B4B50(319, &qword_1EDB0E7E8, (void (*)(void))sub_1DC510E20, (void (*)(void))sub_1DC510E64);
          if (v4 <= 0x3F)
          {
            sub_1DC4B4B50(319, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
            if (v5 <= 0x3F)
            {
              sub_1DC4B4B50(319, &qword_1EDB0E860, (void (*)(void))sub_1DC4C8FC0, (void (*)(void))sub_1DC4C9004);
              if (v6 <= 0x3F)
              {
                sub_1DC4B4B50(319, &qword_1EDB0E270, (void (*)(void))sub_1DC4F48D4, (void (*)(void))sub_1DC4F4918);
                if (v7 <= 0x3F)
                {
                  sub_1DC4B4B50(319, &qword_1EDB0E820, (void (*)(void))sub_1DC4F4A54, (void (*)(void))sub_1DC4F4A98);
                  if (v8 <= 0x3F)
                  {
                    sub_1DC4B4B50(319, &qword_1EDB0E868, (void (*)(void))sub_1DC4C9630, (void (*)(void))sub_1DC4C9674);
                    if (v9 <= 0x3F)
                    {
                      sub_1DC4B4B50(319, &qword_1EDB0E858, (void (*)(void))sub_1DC5AB958, (void (*)(void))sub_1DC5AB99C);
                      if (v10 <= 0x3F)
                      {
                        sub_1DC4B4B50(319, &qword_1EDB0E760, (void (*)(void))sub_1DC4C8E40, (void (*)(void))sub_1DC4C8E84);
                        if (v11 <= 0x3F)
                        {
                          sub_1DC4B4B50(319, &qword_1EDB0E260, (void (*)(void))sub_1DC4E6528, (void (*)(void))sub_1DC4E656C);
                          if (v12 <= 0x3F)
                          {
                            sub_1DC4B4B50(319, &qword_1EDB0E790, (void (*)(void))sub_1DC4C9930, (void (*)(void))sub_1DC4C9974);
                            if (v13 <= 0x3F)
                              swift_initStructMetadata();
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

_QWORD *initializeBufferWithCopyOfBuffer for NewsHeadlineExposureEvent.Model(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  __int128 v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int16 v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  _QWORD *v53;
  uint64_t v54;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v30 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v30 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1DC62ABA8();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_1DC62ABC0();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = a3[6];
    v13 = a3[7];
    v14 = (char *)a1 + v12;
    v15 = (char *)a2 + v12;
    v16 = *((_QWORD *)v15 + 1);
    *(_QWORD *)v14 = *(_QWORD *)v15;
    *((_QWORD *)v14 + 1) = v16;
    v17 = *((_QWORD *)v15 + 3);
    *((_QWORD *)v14 + 2) = *((_QWORD *)v15 + 2);
    *((_QWORD *)v14 + 3) = v17;
    v14[32] = v15[32];
    *((_QWORD *)v14 + 5) = *((_QWORD *)v15 + 5);
    v14[48] = v15[48];
    *((_QWORD *)v14 + 7) = *((_QWORD *)v15 + 7);
    *((_DWORD *)v14 + 16) = *((_DWORD *)v15 + 16);
    *(_DWORD *)((char *)a1 + v13) = *(_DWORD *)((char *)a2 + v13);
    v18 = a3[8];
    v19 = a3[9];
    v20 = (char *)a1 + v18;
    v21 = (char *)a2 + v18;
    *(_DWORD *)v20 = *(_DWORD *)v21;
    v20[4] = v21[4];
    v22 = (char *)a1 + v19;
    v23 = (char *)a2 + v19;
    *v22 = *v23;
    v24 = *((_QWORD *)v23 + 2);
    *((_QWORD *)v22 + 1) = *((_QWORD *)v23 + 1);
    *((_QWORD *)v22 + 2) = v24;
    v25 = a3[10];
    v26 = (char *)a1 + v25;
    v27 = (char *)a2 + v25;
    v28 = *(_QWORD *)((char *)a2 + v25 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v28)
    {
      *v26 = *v27;
      *((_QWORD *)v26 + 1) = *((_QWORD *)v27 + 1);
      *((_QWORD *)v26 + 2) = v28;
      *((_QWORD *)v26 + 3) = *((_QWORD *)v27 + 3);
      v29 = *((_QWORD *)v27 + 5);
      *((_QWORD *)v26 + 4) = *((_QWORD *)v27 + 4);
      *((_QWORD *)v26 + 5) = v29;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v31 = *((_OWORD *)v27 + 1);
      *(_OWORD *)v26 = *(_OWORD *)v27;
      *((_OWORD *)v26 + 1) = v31;
      *((_OWORD *)v26 + 2) = *((_OWORD *)v27 + 2);
    }
    v32 = a3[11];
    v33 = a3[12];
    v34 = (char *)a1 + v32;
    v35 = (char *)a2 + v32;
    v36 = *((_OWORD *)v35 + 1);
    *(_OWORD *)v34 = *(_OWORD *)v35;
    *((_OWORD *)v34 + 1) = v36;
    v37 = *((_OWORD *)v35 + 3);
    *((_OWORD *)v34 + 2) = *((_OWORD *)v35 + 2);
    *((_OWORD *)v34 + 3) = v37;
    *((_OWORD *)v34 + 4) = *((_OWORD *)v35 + 4);
    *((_QWORD *)v34 + 10) = *((_QWORD *)v35 + 10);
    *(_OWORD *)(v34 + 88) = *(_OWORD *)(v35 + 88);
    *(_OWORD *)(v34 + 104) = *(_OWORD *)(v35 + 104);
    *((_DWORD *)v34 + 30) = *((_DWORD *)v35 + 30);
    *((_OWORD *)v34 + 8) = *((_OWORD *)v35 + 8);
    v34[144] = v35[144];
    *(_QWORD *)(v34 + 148) = *(_QWORD *)(v35 + 148);
    v38 = *((_OWORD *)v35 + 11);
    *((_OWORD *)v34 + 10) = *((_OWORD *)v35 + 10);
    *((_OWORD *)v34 + 11) = v38;
    v39 = *(_WORD *)((char *)a2 + v33);
    *((_QWORD *)v34 + 24) = *((_QWORD *)v35 + 24);
    *(_WORD *)((char *)a1 + v33) = v39;
    v40 = a3[13];
    v41 = a3[14];
    v42 = (_QWORD *)((char *)a1 + v40);
    v43 = (_QWORD *)((char *)a2 + v40);
    v44 = *v43;
    v45 = v43[1];
    LOWORD(v43) = *(_WORD *)((char *)a2 + v41);
    *v42 = v44;
    v42[1] = v45;
    *(_WORD *)((char *)a1 + v41) = (_WORD)v43;
    v46 = a3[15];
    v47 = a3[16];
    v48 = (char *)a1 + v46;
    v49 = (char *)a2 + v46;
    v50 = *((_QWORD *)v49 + 1);
    *(_QWORD *)v48 = *(_QWORD *)v49;
    *((_QWORD *)v48 + 1) = v50;
    v48[32] = v49[32];
    v51 = *((_QWORD *)v49 + 3);
    *((_QWORD *)v48 + 2) = *((_QWORD *)v49 + 2);
    *((_QWORD *)v48 + 3) = v51;
    v48[33] = v49[33];
    v52 = (_QWORD *)((char *)a1 + v47);
    v53 = (_QWORD *)((char *)a2 + v47);
    v54 = v53[1];
    *v52 = *v53;
    v52[1] = v54;
    *((_BYTE *)a1 + a3[17]) = *((_BYTE *)a2 + a3[17]);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for NewsHeadlineExposureEvent.Model(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + *(int *)(a2 + 20);
  v6 = sub_1DC62ABC0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + *(int *)(a2 + 40) + 16))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for NewsHeadlineExposureEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __int128 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int16 v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  _QWORD *v51;
  uint64_t v52;

  v6 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1DC62ABC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = a3[6];
  v12 = a3[7];
  v13 = a1 + v11;
  v14 = a2 + v11;
  v15 = *(_QWORD *)(v14 + 8);
  *(_QWORD *)v13 = *(_QWORD *)v14;
  *(_QWORD *)(v13 + 8) = v15;
  v16 = *(_QWORD *)(v14 + 24);
  *(_QWORD *)(v13 + 16) = *(_QWORD *)(v14 + 16);
  *(_QWORD *)(v13 + 24) = v16;
  *(_BYTE *)(v13 + 32) = *(_BYTE *)(v14 + 32);
  *(_QWORD *)(v13 + 40) = *(_QWORD *)(v14 + 40);
  *(_BYTE *)(v13 + 48) = *(_BYTE *)(v14 + 48);
  *(_QWORD *)(v13 + 56) = *(_QWORD *)(v14 + 56);
  *(_DWORD *)(v13 + 64) = *(_DWORD *)(v14 + 64);
  *(_DWORD *)(a1 + v12) = *(_DWORD *)(a2 + v12);
  v17 = a3[8];
  v18 = a3[9];
  v19 = a1 + v17;
  v20 = a2 + v17;
  *(_DWORD *)v19 = *(_DWORD *)v20;
  *(_BYTE *)(v19 + 4) = *(_BYTE *)(v20 + 4);
  v21 = a1 + v18;
  v22 = a2 + v18;
  *(_BYTE *)v21 = *(_BYTE *)v22;
  v23 = *(_QWORD *)(v22 + 16);
  *(_QWORD *)(v21 + 8) = *(_QWORD *)(v22 + 8);
  *(_QWORD *)(v21 + 16) = v23;
  v24 = a3[10];
  v25 = a1 + v24;
  v26 = a2 + v24;
  v27 = *(_QWORD *)(a2 + v24 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v27)
  {
    *(_BYTE *)v25 = *(_BYTE *)v26;
    *(_QWORD *)(v25 + 8) = *(_QWORD *)(v26 + 8);
    *(_QWORD *)(v25 + 16) = v27;
    *(_QWORD *)(v25 + 24) = *(_QWORD *)(v26 + 24);
    v28 = *(_QWORD *)(v26 + 40);
    *(_QWORD *)(v25 + 32) = *(_QWORD *)(v26 + 32);
    *(_QWORD *)(v25 + 40) = v28;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v29 = *(_OWORD *)(v26 + 16);
    *(_OWORD *)v25 = *(_OWORD *)v26;
    *(_OWORD *)(v25 + 16) = v29;
    *(_OWORD *)(v25 + 32) = *(_OWORD *)(v26 + 32);
  }
  v30 = a3[11];
  v31 = a3[12];
  v32 = a1 + v30;
  v33 = a2 + v30;
  v34 = *(_OWORD *)(v33 + 16);
  *(_OWORD *)v32 = *(_OWORD *)v33;
  *(_OWORD *)(v32 + 16) = v34;
  v35 = *(_OWORD *)(v33 + 48);
  *(_OWORD *)(v32 + 32) = *(_OWORD *)(v33 + 32);
  *(_OWORD *)(v32 + 48) = v35;
  *(_OWORD *)(v32 + 64) = *(_OWORD *)(v33 + 64);
  *(_QWORD *)(v32 + 80) = *(_QWORD *)(v33 + 80);
  *(_OWORD *)(v32 + 88) = *(_OWORD *)(v33 + 88);
  *(_OWORD *)(v32 + 104) = *(_OWORD *)(v33 + 104);
  *(_DWORD *)(v32 + 120) = *(_DWORD *)(v33 + 120);
  *(_OWORD *)(v32 + 128) = *(_OWORD *)(v33 + 128);
  *(_BYTE *)(v32 + 144) = *(_BYTE *)(v33 + 144);
  *(_QWORD *)(v32 + 148) = *(_QWORD *)(v33 + 148);
  v36 = *(_OWORD *)(v33 + 176);
  *(_OWORD *)(v32 + 160) = *(_OWORD *)(v33 + 160);
  *(_OWORD *)(v32 + 176) = v36;
  v37 = *(_WORD *)(a2 + v31);
  *(_QWORD *)(v32 + 192) = *(_QWORD *)(v33 + 192);
  *(_WORD *)(a1 + v31) = v37;
  v38 = a3[13];
  v39 = a3[14];
  v40 = (_QWORD *)(a1 + v38);
  v41 = (uint64_t *)(a2 + v38);
  v42 = *v41;
  v43 = v41[1];
  LOWORD(v41) = *(_WORD *)(a2 + v39);
  *v40 = v42;
  v40[1] = v43;
  *(_WORD *)(a1 + v39) = (_WORD)v41;
  v44 = a3[15];
  v45 = a3[16];
  v46 = a1 + v44;
  v47 = a2 + v44;
  v48 = *(_QWORD *)(v47 + 8);
  *(_QWORD *)v46 = *(_QWORD *)v47;
  *(_QWORD *)(v46 + 8) = v48;
  *(_BYTE *)(v46 + 32) = *(_BYTE *)(v47 + 32);
  v49 = *(_QWORD *)(v47 + 24);
  *(_QWORD *)(v46 + 16) = *(_QWORD *)(v47 + 16);
  *(_QWORD *)(v46 + 24) = v49;
  *(_BYTE *)(v46 + 33) = *(_BYTE *)(v47 + 33);
  v50 = (_QWORD *)(a1 + v45);
  v51 = (_QWORD *)(a2 + v45);
  v52 = v51[1];
  *v50 = *v51;
  v50[1] = v52;
  *(_BYTE *)(a1 + a3[17]) = *(_BYTE *)(a2 + a3[17]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for NewsHeadlineExposureEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int *v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __int128 *v24;
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _BYTE *v35;
  _BYTE *v36;
  uint64_t v37;
  _QWORD *v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  _QWORD *v45;

  v6 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1DC62ABC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  *(_QWORD *)v12 = *(_QWORD *)(a2 + v11);
  *(_QWORD *)(v12 + 8) = *(_QWORD *)(a2 + v11 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v12 + 16) = *(_QWORD *)(v13 + 16);
  *(_QWORD *)(v12 + 24) = *(_QWORD *)(v13 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v12 + 32) = *(_BYTE *)(v13 + 32);
  v14 = *(_QWORD *)(v13 + 40);
  *(_BYTE *)(v12 + 48) = *(_BYTE *)(v13 + 48);
  *(_QWORD *)(v12 + 40) = v14;
  *(_QWORD *)(v12 + 56) = *(_QWORD *)(v13 + 56);
  *(_BYTE *)(v12 + 64) = *(_BYTE *)(v13 + 64);
  *(_BYTE *)(v12 + 65) = *(_BYTE *)(v13 + 65);
  *(_BYTE *)(v12 + 66) = *(_BYTE *)(v13 + 66);
  *(_BYTE *)(v12 + 67) = *(_BYTE *)(v13 + 67);
  *(_DWORD *)(a1 + a3[7]) = *(_DWORD *)(a2 + a3[7]);
  v15 = a3[8];
  v16 = a1 + v15;
  v17 = (int *)(a2 + v15);
  v18 = *v17;
  *(_BYTE *)(v16 + 4) = *((_BYTE *)v17 + 4);
  *(_DWORD *)v16 = v18;
  v19 = a3[9];
  v20 = a1 + v19;
  v21 = a2 + v19;
  *(_BYTE *)v20 = *(_BYTE *)v21;
  *(_QWORD *)(v20 + 8) = *(_QWORD *)(v21 + 8);
  *(_QWORD *)(v20 + 16) = *(_QWORD *)(v21 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v22 = a3[10];
  v23 = a1 + v22;
  v24 = (__int128 *)(a2 + v22);
  v25 = *(_QWORD *)(a1 + v22 + 16);
  v26 = *(_QWORD *)(a2 + v22 + 16);
  if (v25)
  {
    if (v26)
    {
      *(_BYTE *)v23 = *(_BYTE *)v24;
      *(_QWORD *)(v23 + 8) = *((_QWORD *)v24 + 1);
      *(_QWORD *)(v23 + 16) = *((_QWORD *)v24 + 2);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_DWORD *)(v23 + 24) = *((_DWORD *)v24 + 6);
      *(_DWORD *)(v23 + 28) = *((_DWORD *)v24 + 7);
      *(_QWORD *)(v23 + 32) = *((_QWORD *)v24 + 4);
      *(_QWORD *)(v23 + 40) = *((_QWORD *)v24 + 5);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1DC4CDAF4(v23);
      v28 = v24[1];
      v27 = v24[2];
      *(_OWORD *)v23 = *v24;
      *(_OWORD *)(v23 + 16) = v28;
      *(_OWORD *)(v23 + 32) = v27;
    }
  }
  else if (v26)
  {
    *(_BYTE *)v23 = *(_BYTE *)v24;
    *(_QWORD *)(v23 + 8) = *((_QWORD *)v24 + 1);
    *(_QWORD *)(v23 + 16) = *((_QWORD *)v24 + 2);
    *(_DWORD *)(v23 + 24) = *((_DWORD *)v24 + 6);
    *(_DWORD *)(v23 + 28) = *((_DWORD *)v24 + 7);
    *(_QWORD *)(v23 + 32) = *((_QWORD *)v24 + 4);
    *(_QWORD *)(v23 + 40) = *((_QWORD *)v24 + 5);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v29 = *v24;
    v30 = v24[2];
    *(_OWORD *)(v23 + 16) = v24[1];
    *(_OWORD *)(v23 + 32) = v30;
    *(_OWORD *)v23 = v29;
  }
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  *(_QWORD *)v32 = *(_QWORD *)(a2 + v31);
  *(_QWORD *)(v32 + 8) = *(_QWORD *)(a2 + v31 + 8);
  *(_QWORD *)(v32 + 16) = *(_QWORD *)(a2 + v31 + 16);
  *(_QWORD *)(v32 + 24) = *(_QWORD *)(a2 + v31 + 24);
  *(_QWORD *)(v32 + 32) = *(_QWORD *)(a2 + v31 + 32);
  *(_QWORD *)(v32 + 40) = *(_QWORD *)(a2 + v31 + 40);
  *(_QWORD *)(v32 + 48) = *(_QWORD *)(a2 + v31 + 48);
  *(_QWORD *)(v32 + 56) = *(_QWORD *)(a2 + v31 + 56);
  *(_QWORD *)(v32 + 64) = *(_QWORD *)(a2 + v31 + 64);
  *(_QWORD *)(v32 + 72) = *(_QWORD *)(a2 + v31 + 72);
  *(_QWORD *)(v32 + 80) = *(_QWORD *)(a2 + v31 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v32 + 88) = *(_QWORD *)(v33 + 88);
  *(_QWORD *)(v32 + 96) = *(_QWORD *)(v33 + 96);
  *(_QWORD *)(v32 + 104) = *(_QWORD *)(v33 + 104);
  *(_QWORD *)(v32 + 112) = *(_QWORD *)(v33 + 112);
  *(_DWORD *)(v32 + 120) = *(_DWORD *)(v33 + 120);
  *(_QWORD *)(v32 + 128) = *(_QWORD *)(v33 + 128);
  *(_QWORD *)(v32 + 136) = *(_QWORD *)(v33 + 136);
  *(_BYTE *)(v32 + 144) = *(_BYTE *)(v33 + 144);
  *(_DWORD *)(v32 + 148) = *(_DWORD *)(v33 + 148);
  *(_DWORD *)(v32 + 152) = *(_DWORD *)(v33 + 152);
  *(_QWORD *)(v32 + 160) = *(_QWORD *)(v33 + 160);
  *(_QWORD *)(v32 + 168) = *(_QWORD *)(v33 + 168);
  *(_QWORD *)(v32 + 176) = *(_QWORD *)(v33 + 176);
  *(_QWORD *)(v32 + 184) = *(_QWORD *)(v33 + 184);
  *(_QWORD *)(v32 + 192) = *(_QWORD *)(v33 + 192);
  v34 = a3[12];
  v35 = (_BYTE *)(a1 + v34);
  v36 = (_BYTE *)(a2 + v34);
  *v35 = *v36;
  v35[1] = v36[1];
  v37 = a3[13];
  v38 = (_QWORD *)(a1 + v37);
  v39 = (_QWORD *)(a2 + v37);
  *v38 = *v39;
  v38[1] = v39[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + a3[14]) = *(_WORD *)(a2 + a3[14]);
  v40 = a3[15];
  v41 = a1 + v40;
  v42 = a2 + v40;
  *(_QWORD *)v41 = *(_QWORD *)(a2 + v40);
  *(_QWORD *)(v41 + 8) = *(_QWORD *)(a2 + v40 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v41 + 16) = *(_QWORD *)(v42 + 16);
  *(_QWORD *)(v41 + 24) = *(_QWORD *)(v42 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v41 + 32) = *(_BYTE *)(v42 + 32);
  *(_BYTE *)(v41 + 33) = *(_BYTE *)(v42 + 33);
  v43 = a3[16];
  v44 = (_QWORD *)(a1 + v43);
  v45 = (_QWORD *)(a2 + v43);
  *v44 = *v45;
  v44[1] = v45[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + a3[17]) = *(_BYTE *)(a2 + a3[17]);
  return a1;
}

uint64_t initializeWithTake for NewsHeadlineExposureEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _OWORD *v25;
  _OWORD *v26;
  __int128 v27;
  uint64_t v28;
  uint64_t v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  __int128 v40;
  uint64_t v41;

  v6 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1DC62ABC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[6];
  v12 = a3[7];
  v13 = a1 + v11;
  v14 = a2 + v11;
  v15 = *(_OWORD *)(v14 + 48);
  *(_OWORD *)(v13 + 32) = *(_OWORD *)(v14 + 32);
  *(_OWORD *)(v13 + 48) = v15;
  *(_DWORD *)(v13 + 64) = *(_DWORD *)(v14 + 64);
  v16 = *(_OWORD *)(v14 + 16);
  *(_OWORD *)v13 = *(_OWORD *)v14;
  *(_OWORD *)(v13 + 16) = v16;
  *(_DWORD *)(a1 + v12) = *(_DWORD *)(a2 + v12);
  v17 = a3[8];
  v18 = a3[9];
  v19 = a1 + v17;
  v20 = a2 + v17;
  *(_DWORD *)v19 = *(_DWORD *)v20;
  *(_BYTE *)(v19 + 4) = *(_BYTE *)(v20 + 4);
  v21 = a1 + v18;
  v22 = a2 + v18;
  *(_OWORD *)v21 = *(_OWORD *)v22;
  *(_QWORD *)(v21 + 16) = *(_QWORD *)(v22 + 16);
  v23 = a3[10];
  v24 = a3[11];
  v25 = (_OWORD *)(a1 + v23);
  v26 = (_OWORD *)(a2 + v23);
  v27 = v26[1];
  *v25 = *v26;
  v25[1] = v27;
  v25[2] = v26[2];
  v28 = a1 + v24;
  v29 = a2 + v24;
  v30 = *(_OWORD *)(v29 + 48);
  *(_OWORD *)(v28 + 32) = *(_OWORD *)(v29 + 32);
  *(_OWORD *)(v28 + 48) = v30;
  v31 = *(_OWORD *)(v29 + 16);
  *(_OWORD *)v28 = *(_OWORD *)v29;
  *(_OWORD *)(v28 + 16) = v31;
  v32 = *(_OWORD *)(v29 + 112);
  *(_OWORD *)(v28 + 96) = *(_OWORD *)(v29 + 96);
  *(_OWORD *)(v28 + 112) = v32;
  v33 = *(_OWORD *)(v29 + 80);
  *(_OWORD *)(v28 + 64) = *(_OWORD *)(v29 + 64);
  *(_OWORD *)(v28 + 80) = v33;
  *(_QWORD *)(v28 + 192) = *(_QWORD *)(v29 + 192);
  v34 = *(_OWORD *)(v29 + 176);
  *(_OWORD *)(v28 + 160) = *(_OWORD *)(v29 + 160);
  *(_OWORD *)(v28 + 176) = v34;
  v35 = *(_OWORD *)(v29 + 144);
  *(_OWORD *)(v28 + 128) = *(_OWORD *)(v29 + 128);
  *(_OWORD *)(v28 + 144) = v35;
  v36 = a3[13];
  *(_WORD *)(a1 + a3[12]) = *(_WORD *)(a2 + a3[12]);
  *(_OWORD *)(a1 + v36) = *(_OWORD *)(a2 + v36);
  v37 = a3[15];
  *(_WORD *)(a1 + a3[14]) = *(_WORD *)(a2 + a3[14]);
  v38 = a1 + v37;
  v39 = a2 + v37;
  v40 = *(_OWORD *)(v39 + 16);
  *(_OWORD *)v38 = *(_OWORD *)v39;
  *(_OWORD *)(v38 + 16) = v40;
  *(_WORD *)(v38 + 32) = *(_WORD *)(v39 + 32);
  v41 = a3[17];
  *(_OWORD *)(a1 + a3[16]) = *(_OWORD *)(a2 + a3[16]);
  *(_BYTE *)(a1 + v41) = *(_BYTE *)(a2 + v41);
  return a1;
}

uint64_t assignWithTake for NewsHeadlineExposureEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __int128 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  uint64_t v36;
  uint64_t v37;
  _BYTE *v38;
  _BYTE *v39;
  _QWORD *v40;
  uint64_t *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  uint64_t *v52;
  uint64_t v53;
  uint64_t v54;

  v6 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1DC62ABC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  v14 = *(_QWORD *)(a2 + v11 + 8);
  *(_QWORD *)v12 = *(_QWORD *)(a2 + v11);
  *(_QWORD *)(v12 + 8) = v14;
  swift_bridgeObjectRelease();
  v15 = *(_QWORD *)(v13 + 24);
  *(_QWORD *)(v12 + 16) = *(_QWORD *)(v13 + 16);
  *(_QWORD *)(v12 + 24) = v15;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v12 + 32) = *(_BYTE *)(v13 + 32);
  *(_QWORD *)(v12 + 40) = *(_QWORD *)(v13 + 40);
  *(_BYTE *)(v12 + 48) = *(_BYTE *)(v13 + 48);
  *(_QWORD *)(v12 + 56) = *(_QWORD *)(v13 + 56);
  *(_BYTE *)(v12 + 64) = *(_BYTE *)(v13 + 64);
  *(_BYTE *)(v12 + 65) = *(_BYTE *)(v13 + 65);
  *(_BYTE *)(v12 + 66) = *(_BYTE *)(v13 + 66);
  *(_BYTE *)(v12 + 67) = *(_BYTE *)(v13 + 67);
  v16 = a3[8];
  *(_DWORD *)(a1 + a3[7]) = *(_DWORD *)(a2 + a3[7]);
  v17 = a1 + v16;
  v18 = a2 + v16;
  *(_DWORD *)v17 = *(_DWORD *)v18;
  *(_BYTE *)(v17 + 4) = *(_BYTE *)(v18 + 4);
  v19 = a3[9];
  v20 = a1 + v19;
  v21 = a2 + v19;
  *(_BYTE *)v20 = *(_BYTE *)v21;
  v23 = *(_QWORD *)(v21 + 8);
  v22 = *(_QWORD *)(v21 + 16);
  *(_QWORD *)(v20 + 8) = v23;
  *(_QWORD *)(v20 + 16) = v22;
  swift_bridgeObjectRelease();
  v24 = a3[10];
  v25 = a1 + v24;
  v26 = a2 + v24;
  if (!*(_QWORD *)(a1 + v24 + 16))
    goto LABEL_5;
  v27 = *(_QWORD *)(v26 + 16);
  if (!v27)
  {
    sub_1DC4CDAF4(v25);
LABEL_5:
    v29 = *(_OWORD *)(v26 + 16);
    *(_OWORD *)v25 = *(_OWORD *)v26;
    *(_OWORD *)(v25 + 16) = v29;
    *(_OWORD *)(v25 + 32) = *(_OWORD *)(v26 + 32);
    goto LABEL_6;
  }
  *(_BYTE *)v25 = *(_BYTE *)v26;
  *(_QWORD *)(v25 + 8) = *(_QWORD *)(v26 + 8);
  *(_QWORD *)(v25 + 16) = v27;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v25 + 24) = *(_QWORD *)(v26 + 24);
  v28 = *(_QWORD *)(v26 + 40);
  *(_QWORD *)(v25 + 32) = *(_QWORD *)(v26 + 32);
  *(_QWORD *)(v25 + 40) = v28;
  swift_bridgeObjectRelease();
LABEL_6:
  v30 = a3[11];
  v31 = a1 + v30;
  v32 = a2 + v30;
  v33 = *(_OWORD *)(a2 + v30 + 16);
  *(_OWORD *)v31 = *(_OWORD *)(a2 + v30);
  *(_OWORD *)(v31 + 16) = v33;
  v34 = *(_OWORD *)(a2 + v30 + 48);
  *(_OWORD *)(v31 + 32) = *(_OWORD *)(a2 + v30 + 32);
  *(_OWORD *)(v31 + 48) = v34;
  *(_OWORD *)(v31 + 64) = *(_OWORD *)(a2 + v30 + 64);
  *(_QWORD *)(v31 + 80) = *(_QWORD *)(a2 + v30 + 80);
  swift_bridgeObjectRelease();
  *(_OWORD *)(v31 + 88) = *(_OWORD *)(v32 + 88);
  *(_OWORD *)(v31 + 104) = *(_OWORD *)(v32 + 104);
  *(_DWORD *)(v31 + 120) = *(_DWORD *)(v32 + 120);
  *(_OWORD *)(v31 + 128) = *(_OWORD *)(v32 + 128);
  *(_BYTE *)(v31 + 144) = *(_BYTE *)(v32 + 144);
  *(_QWORD *)(v31 + 148) = *(_QWORD *)(v32 + 148);
  v35 = *(_OWORD *)(v32 + 176);
  *(_OWORD *)(v31 + 160) = *(_OWORD *)(v32 + 160);
  *(_OWORD *)(v31 + 176) = v35;
  *(_QWORD *)(v31 + 192) = *(_QWORD *)(v32 + 192);
  v36 = a3[12];
  v37 = a3[13];
  v38 = (_BYTE *)(a1 + v36);
  v39 = (_BYTE *)(a2 + v36);
  *v38 = *v39;
  v38[1] = v39[1];
  v40 = (_QWORD *)(a1 + v37);
  v41 = (uint64_t *)(a2 + v37);
  v43 = *v41;
  v42 = v41[1];
  *v40 = v43;
  v40[1] = v42;
  swift_bridgeObjectRelease();
  v44 = a3[15];
  *(_WORD *)(a1 + a3[14]) = *(_WORD *)(a2 + a3[14]);
  v45 = a1 + v44;
  v46 = a2 + v44;
  v47 = *(_QWORD *)(a2 + v44);
  v48 = *(_QWORD *)(a2 + v44 + 8);
  *(_QWORD *)v45 = v47;
  *(_QWORD *)(v45 + 8) = v48;
  swift_bridgeObjectRelease();
  v49 = *(_QWORD *)(v46 + 24);
  *(_QWORD *)(v45 + 16) = *(_QWORD *)(v46 + 16);
  *(_QWORD *)(v45 + 24) = v49;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v45 + 32) = *(_BYTE *)(v46 + 32);
  *(_BYTE *)(v45 + 33) = *(_BYTE *)(v46 + 33);
  v50 = a3[16];
  v51 = (_QWORD *)(a1 + v50);
  v52 = (uint64_t *)(a2 + v50);
  v54 = *v52;
  v53 = v52[1];
  *v51 = v54;
  v51[1] = v53;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + a3[17]) = *(_BYTE *)(a2 + a3[17]);
  return a1;
}

uint64_t getEnumTagSinglePayload for NewsHeadlineExposureEvent.Model()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC5B1004(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v14;

  v6 = sub_1DC62ABA8();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  v11 = sub_1DC62ABC0();
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  v14 = *(_QWORD *)(a1 + *(int *)(a3 + 24) + 8);
  if (v14 >= 0xFFFFFFFF)
    LODWORD(v14) = -1;
  return (v14 + 1);
}

uint64_t storeEnumTagSinglePayload for NewsHeadlineExposureEvent.Model()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC5B10BC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t result;
  uint64_t v14;

  v8 = sub_1DC62ABA8();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
    return v11(v12, a2, a2, v10);
  }
  result = sub_1DC62ABC0();
  v14 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = result;
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    return v11(v12, a2, a2, v10);
  }
  *(_QWORD *)(a1 + *(int *)(a4 + 24) + 8) = (a2 - 1);
  return result;
}

uint64_t sub_1DC5B1164()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_1DC62ABA8();
  if (v1 <= 0x3F)
  {
    result = sub_1DC62ABC0();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for NewsHeadlineExposureEvent.Model.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 13 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 13) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF3)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF2)
    return ((uint64_t (*)(void))((char *)&loc_1DC5B12A8 + 4 * byte_1DC640253[v4]))();
  *a1 = a2 + 13;
  return ((uint64_t (*)(void))((char *)sub_1DC5B12DC + 4 * byte_1DC64024E[v4]))();
}

uint64_t sub_1DC5B12DC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC5B12E4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DC5B12ECLL);
  return result;
}

uint64_t sub_1DC5B12F8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DC5B1300);
  *(_BYTE *)result = a2 + 13;
  return result;
}

uint64_t sub_1DC5B1304(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC5B130C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for NewsHeadlineExposureEvent.Model.CodingKeys()
{
  return &type metadata for NewsHeadlineExposureEvent.Model.CodingKeys;
}

unint64_t sub_1DC5B132C()
{
  unint64_t result;

  result = qword_1F036E280;
  if (!qword_1F036E280)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC64056C, &type metadata for NewsHeadlineExposureEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036E280);
  }
  return result;
}

unint64_t sub_1DC5B1374()
{
  unint64_t result;

  result = qword_1EDB129F8;
  if (!qword_1EDB129F8)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC6404DC, &type metadata for NewsHeadlineExposureEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB129F8);
  }
  return result;
}

unint64_t sub_1DC5B13BC()
{
  unint64_t result;

  result = qword_1EDB12A00;
  if (!qword_1EDB12A00)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC640504, &type metadata for NewsHeadlineExposureEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB12A00);
  }
  return result;
}

uint64_t sub_1DC5B1400(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x746144746E657665 && a2 == 0xE900000000000061;
  if (v2 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x74614464656D6974 && a2 == 0xE900000000000061 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x697472417377656ELL && a2 == 0xEF61746144656C63 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001DC64C680 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001DC64C6A0 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6174614464656566 && a2 == 0xE800000000000000 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x74614470756F7267 && a2 == 0xE900000000000061 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000001DC64C490 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000001DC64C4B0 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x7461446575737369 && a2 == 0xE900000000000061 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0x7461446567646162 && a2 == 0xE900000000000061 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0x446C656E6E616863 && a2 == 0xEB00000000617461 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001DC64C120 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001DC64BFB0)
  {
    swift_bridgeObjectRelease();
    return 13;
  }
  else
  {
    v6 = sub_1DC62B520();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 13;
    else
      return 14;
  }
}

_QWORD *ExternalAnalyticsEventProcessor.__allocating_init(appConfigurationManager:tracker:uploader:panelIdProvider:urlProvider:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v10;

  swift_allocObject();
  v10 = sub_1DC5B4044(a1, a2, a3, a4, a5);
  swift_release();
  return v10;
}

unint64_t sub_1DC5B1A30(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t result;
  char v9;
  uint64_t *v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  sub_1DC5B4B80();
  v2 = (_QWORD *)sub_1DC62B3AC();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (uint64_t *)(a1 + 48);
  while (1)
  {
    v5 = *(v4 - 2);
    v6 = *(v4 - 1);
    v7 = *v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    result = sub_1DC5B3FD8(v5, v6, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1DC5B34E4);
    if ((v9 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v10 = (uint64_t *)(v2[6] + 16 * result);
    *v10 = v5;
    v10[1] = v6;
    *(_QWORD *)(v2[7] + 8 * result) = v7;
    v11 = v2[2];
    v12 = __OFADD__(v11, 1);
    v13 = v11 + 1;
    if (v12)
      goto LABEL_11;
    v2[2] = v13;
    v4 += 3;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1DC5B1B50(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t result;
  char v10;
  uint64_t *v11;
  _QWORD *v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  sub_1DC5B45F8();
  v2 = (_QWORD *)sub_1DC62B3AC();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (uint64_t *)(a1 + 56);
  while (1)
  {
    v5 = *(v4 - 3);
    v6 = *(v4 - 2);
    v7 = *(v4 - 1);
    v8 = *v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    result = sub_1DC5B3FD8(v5, v6, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1DC5B34E4);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v11 = (uint64_t *)(v2[6] + 16 * result);
    *v11 = v5;
    v11[1] = v6;
    v12 = (_QWORD *)(v2[7] + 16 * result);
    *v12 = v7;
    v12[1] = v8;
    v13 = v2[2];
    v14 = __OFADD__(v13, 1);
    v15 = v13 + 1;
    if (v14)
      goto LABEL_11;
    v4 += 4;
    v2[2] = v15;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

_QWORD *ExternalAnalyticsEventProcessor.init(appConfigurationManager:tracker:uploader:panelIdProvider:urlProvider:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;

  v5 = sub_1DC5B4044(a1, a2, a3, a4, a5);
  swift_release();
  return v5;
}

void sub_1DC5B1CB8()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  void *v3;
  void *v4;
  void *v5;
  _QWORD v6[6];

  v1 = v0;
  v2 = objc_msgSend((id)objc_opt_self(), sel_sharedManagerForAllUsers);
  if (v2)
  {
    v3 = v2;
    sub_1DC4FA56C(0, (unint64_t *)&qword_1EDB118E0);
    v4 = (void *)sub_1DC62B1FC();
    v6[4] = sub_1DC5B4B3C;
    v6[5] = v1;
    v6[0] = MEMORY[0x1E0C809B0];
    v6[1] = 1107296256;
    v6[2] = sub_1DC5B22F4;
    v6[3] = &block_descriptor_1;
    v5 = _Block_copy(v6);
    swift_retain();
    swift_release();
    objc_msgSend(v3, sel_loadConfigurationsWithCompletionQueue_handler_, v4, v5);
    _Block_release(v5);

  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1DC5B1DBC(uint64_t a1, void *a2, uint64_t a3)
{
  id v5;
  void *v6;
  uint64_t v7;
  uint64_t result;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  id v14;
  void *v15;
  id v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  _QWORD *v23;
  void *v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  if (a2)
  {
    sub_1DC4FA56C(0, (unint64_t *)&qword_1EDB118F8);
    v5 = a2;
    v6 = (void *)sub_1DC62B250();
    sub_1DC62B1CC();
    sub_1DC4B83E8();
    v7 = swift_allocObject();
    *(_OWORD *)(v7 + 16) = xmmword_1DC62C660;
    sub_1DC4BE928(0, (unint64_t *)&qword_1EDB11B90);
    sub_1DC62B364();
    *(_QWORD *)(v7 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v7 + 64) = sub_1DC4BEC64();
    *(_QWORD *)(v7 + 32) = 0;
    *(_QWORD *)(v7 + 40) = 0xE000000000000000;
    sub_1DC62AEF0();

    swift_bridgeObjectRelease();
    *(_QWORD *)(a3 + 192) = MEMORY[0x1E0DEE9D8];
    return swift_bridgeObjectRelease();
  }
  if (!a1 || (v9 = sub_1DC5B21DC(a1)) == 0)
  {
    sub_1DC4FA56C(0, (unint64_t *)&qword_1EDB118F8);
    v24 = (void *)sub_1DC62B250();
    sub_1DC62B1D8();
    v25 = MEMORY[0x1E0DEE9D8];
    sub_1DC62AEF0();

    *(_QWORD *)(a3 + 192) = v25;
    return swift_bridgeObjectRelease();
  }
  v10 = v9;
  v31 = a3;
  if (v9 >> 62)
  {
    swift_bridgeObjectRetain();
    result = sub_1DC62B388();
    v11 = result;
    if (result)
      goto LABEL_8;
LABEL_23:
    v13 = (_QWORD *)MEMORY[0x1E0DEE9D8];
LABEL_24:
    swift_bridgeObjectRelease_n();
    sub_1DC4FA56C(0, (unint64_t *)&qword_1EDB118F8);
    v26 = (void *)sub_1DC62B250();
    sub_1DC4B83E8();
    v27 = swift_allocObject();
    *(_OWORD *)(v27 + 16) = xmmword_1DC62C660;
    sub_1DC4B72F4();
    sub_1DC4B6748(&qword_1EDB11890, (uint64_t (*)(uint64_t))sub_1DC4B72F4, MEMORY[0x1E0DEAF20]);
    v28 = sub_1DC62B0AC();
    v30 = v29;
    *(_QWORD *)(v27 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v27 + 64) = sub_1DC4BEC64();
    *(_QWORD *)(v27 + 32) = v28;
    *(_QWORD *)(v27 + 40) = v30;
    sub_1DC62B1D8();
    sub_1DC62AEF0();

    swift_bridgeObjectRelease();
    *(_QWORD *)(v31 + 192) = v13;
    return swift_bridgeObjectRelease();
  }
  v11 = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
  result = swift_bridgeObjectRetain();
  if (!v11)
    goto LABEL_23;
LABEL_8:
  if (v11 >= 1)
  {
    v12 = 0;
    v13 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    do
    {
      if ((v10 & 0xC000000000000001) != 0)
        v14 = (id)MEMORY[0x1DF0CC0CC](v12, v10);
      else
        v14 = *(id *)(v10 + 8 * v12 + 32);
      v15 = v14;
      v16 = objc_msgSend(v14, sel_name, v31);
      if (v16)
      {
        v17 = v16;
        v18 = sub_1DC62B0E8();
        v20 = v19;

        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v13 = sub_1DC525A90(0, v13[2] + 1, 1, v13);
        v22 = v13[2];
        v21 = v13[3];
        if (v22 >= v21 >> 1)
          v13 = sub_1DC525A90((_QWORD *)(v21 > 1), v22 + 1, 1, v13);
        v13[2] = v22 + 1;
        v23 = &v13[2 * v22];
        v23[4] = v18;
        v23[5] = v20;
      }
      else
      {

      }
      ++v12;
    }
    while (v11 != v12);
    goto LABEL_24;
  }
  __break(1u);
  return result;
}

uint64_t sub_1DC5B21DC(uint64_t a1)
{
  uint64_t v2;
  uint64_t i;
  _BYTE v5[32];
  uint64_t v6;

  v6 = MEMORY[0x1E0DEE9D8];
  v2 = *(_QWORD *)(a1 + 16);
  sub_1DC62B340();
  if (!v2)
    return v6;
  for (i = a1 + 32; ; i += 32)
  {
    sub_1DC5B4B44(i, (uint64_t)v5);
    sub_1DC4FA56C(0, &qword_1EDB118D8);
    if (!swift_dynamicCast())
      break;
    sub_1DC62B328();
    sub_1DC62B34C();
    sub_1DC62B358();
    sub_1DC62B334();
    if (!--v2)
      return v6;
  }
  swift_release();

  return 0;
}

uint64_t sub_1DC5B22F4(uint64_t a1, uint64_t a2, void *a3)
{
  void (*v4)(uint64_t, void *);
  uint64_t v5;
  id v6;

  v4 = *(void (**)(uint64_t, void *))(a1 + 32);
  if (a2)
    v5 = sub_1DC62B154();
  else
    v5 = 0;
  swift_retain();
  v6 = a3;
  v4(v5, a3);
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t ExternalAnalyticsEventProcessor.process<A>(processEvent:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t result;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(char *, uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v4 = v3;
  v8 = sub_1DC62A4C4();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1DC62A3B0();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v27 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = sub_1DC5B40F8(a1);
  if ((result & 1) != 0)
  {
    v28 = a2;
    v29 = a3;
    v17 = v13;
    v18 = v4[6];
    v30 = v4[7];
    __swift_project_boxed_opaque_existential_1(v4 + 3, v18);
    v19 = v12;
    sub_1DC62A464();
    v20 = sub_1DC62A338();
    (*(void (**)(char *, uint64_t))(v17 + 8))(v15, v19);
    v21 = *(_QWORD *)(v20 + 16);
    if (v21)
    {
      v22 = *(unsigned __int8 *)(v9 + 80);
      v27 = v20;
      v23 = v20 + ((v22 + 32) & ~v22);
      v25 = v28;
      v24 = v29;
      v30 = *(_QWORD *)(v9 + 72);
      v26 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
      do
      {
        v26(v11, v23, v8);
        sub_1DC5B2524(a1, (uint64_t)v11, v25, v24);
        (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
        v23 += v30;
        --v21;
      }
      while (v21);
    }
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1DC5B2524(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t result;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;

  v5 = v4;
  v64 = a3;
  v65 = a4;
  v8 = sub_1DC62A77C();
  v60 = *(_QWORD *)(v8 - 8);
  v57 = *(_QWORD *)(v60 + 64);
  MEMORY[0x1E0C80A78](v8);
  v59 = (char *)&v49 - v9;
  v10 = sub_1DC62A140();
  v62 = *(_QWORD *)(v10 - 8);
  v63 = v10;
  MEMORY[0x1E0C80A78](v10);
  v61 = (char *)&v49 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for ExternalURLData();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v58 = (uint64_t)&v49 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC4BA670(0, &qword_1EDB0F398, v15, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v17 = MEMORY[0x1E0C80A78](v16);
  v18 = MEMORY[0x1E0C80A78](v17);
  v20 = (char *)&v49 - v19;
  result = MEMORY[0x1E0C80A78](v18);
  v25 = v5[24];
  if (v25)
  {
    v26 = v5[26];
    if (v26)
    {
      v52 = v24;
      v53 = v23;
      v55 = (uint64_t)&v49 - v22;
      v56 = a1;
      v54 = v5[25];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v27 = sub_1DC5B2E44(a2, v25);
      swift_bridgeObjectRelease();
      if ((v27 & 1) != 0)
      {
        v51 = v8;
        v29 = v5[21];
        v28 = v5[22];
        __swift_project_boxed_opaque_existential_1(v5 + 18, v29);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v28 + 8))(v56, a2, v54, v26, v64, v65, v29, v28);
        swift_bridgeObjectRelease();
        v35 = v55;
        sub_1DC5B4658(v55, (uint64_t)v20);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v20, 1, v12) == 1)
        {
          sub_1DC5B46B4(v35);
          v36 = (uint64_t)v20;
        }
        else
        {
          v37 = v58;
          sub_1DC5B4708((uint64_t)v20, v58);
          v38 = v5[12];
          v50 = v5[11];
          v54 = v38;
          v49 = __swift_project_boxed_opaque_existential_1(v5 + 8, v50);
          v39 = v61;
          (*(void (**)(char *, uint64_t, uint64_t))(v62 + 16))(v61, v37, v63);
          v41 = v59;
          v40 = v60;
          v42 = v51;
          (*(void (**)(char *, uint64_t, uint64_t))(v60 + 16))(v59, v56, v51);
          v43 = v53;
          sub_1DC5B4658(v35, v53);
          v44 = (*(unsigned __int8 *)(v40 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v40 + 80);
          v45 = (v57 + v44 + *(unsigned __int8 *)(v52 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v52 + 80);
          v46 = v35;
          v47 = swift_allocObject();
          v48 = v65;
          *(_QWORD *)(v47 + 16) = v64;
          *(_QWORD *)(v47 + 24) = v48;
          (*(void (**)(unint64_t, char *, uint64_t))(v40 + 32))(v47 + v44, v41, v42);
          sub_1DC5B486C(v43, v47 + v45);
          sub_1DC62A614();
          swift_release();
          (*(void (**)(char *, uint64_t))(v62 + 8))(v39, v63);
          sub_1DC5B4964(v37);
          v36 = v46;
        }
        return sub_1DC5B46B4(v36);
      }
      else
      {
        swift_bridgeObjectRelease();
        result = sub_1DC62A470();
        if (v30)
        {
          v31 = result;
          v32 = v30;
          sub_1DC4FA56C(0, (unint64_t *)&qword_1EDB118F8);
          v33 = (void *)sub_1DC62B250();
          sub_1DC4B83E8();
          v34 = swift_allocObject();
          *(_OWORD *)(v34 + 16) = xmmword_1DC62C660;
          *(_QWORD *)(v34 + 56) = MEMORY[0x1E0DEA968];
          *(_QWORD *)(v34 + 64) = sub_1DC4BEC64();
          *(_QWORD *)(v34 + 32) = v31;
          *(_QWORD *)(v34 + 40) = v32;
          sub_1DC62B1D8();
          sub_1DC62AEF0();

          return swift_bridgeObjectRelease();
        }
      }
    }
  }
  return result;
}

uint64_t ExternalAnalyticsEventProcessor.didStartSession(_:)()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  void (*v15)(_QWORD, _QWORD, _QWORD);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  _QWORD *v28;
  char isUniquelyReferenced_nonNull_native;
  _QWORD *v30;
  char v31;
  unint64_t v32;
  uint64_t v33;
  _BOOL8 v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  char v38;
  _QWORD *v39;
  uint64_t *v40;
  _QWORD *v41;
  uint64_t *v42;
  uint64_t v43;
  BOOL v44;
  uint64_t v45;
  uint64_t result;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  uint64_t v51;
  uint64_t v52;
  void (*v53)(_QWORD, _QWORD, _QWORD);
  _QWORD *v54;
  uint64_t v55;
  _QWORD *v56;

  v1 = v0;
  v55 = sub_1DC62A4C4();
  v2 = *(_QWORD *)(v55 - 8);
  MEMORY[0x1E0C80A78](v55);
  v4 = (char *)&v47 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1DC62A3B0();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v47 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v0[25] = sub_1DC62AB18();
  v0[26] = v9;
  swift_bridgeObjectRelease();
  v50 = v0 + 23;
  swift_beginAccess();
  v0[23] = MEMORY[0x1E0DEE9E0];
  swift_bridgeObjectRelease();
  __swift_project_boxed_opaque_existential_1(v1 + 3, v1[6]);
  sub_1DC62A464();
  v10 = sub_1DC62A338();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v11 = *(_QWORD *)(v10 + 16);
  if (!v11)
    return swift_bridgeObjectRelease();
  v12 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v47 = v10;
  v13 = v10 + v12;
  v14 = *(_QWORD *)(v2 + 72);
  v15 = *(void (**)(_QWORD, _QWORD, _QWORD))(v2 + 16);
  v16 = v55;
  v17 = v2;
  v51 = v14;
  v52 = v2;
  v53 = v15;
  v54 = v1 + 13;
  v15(v4, v10 + v12, v55);
  while (1)
  {
    if ((sub_1DC62A4A0() & 1) == 0)
    {
      (*(void (**)(char *, uint64_t))(v17 + 8))(v4, v16);
      goto LABEL_4;
    }
    v18 = v1[17];
    __swift_project_boxed_opaque_existential_1(v54, v1[16]);
    v19 = sub_1DC62A47C();
    v20 = (*(uint64_t (**)(uint64_t))(v18 + 8))(v19);
    v22 = v21;
    swift_bridgeObjectRelease();
    if (!v22)
    {
      v17 = v52;
      v16 = v55;
      (*(void (**)(char *, uint64_t))(v52 + 8))(v4, v55);
LABEL_15:
      v14 = v51;
      v15 = v53;
      goto LABEL_4;
    }
    v23 = sub_1DC62A470();
    if (!v24)
    {
      v17 = v52;
      v16 = v55;
      (*(void (**)(char *, uint64_t))(v52 + 8))(v4, v55);
      swift_bridgeObjectRelease();
      goto LABEL_15;
    }
    v25 = v23;
    v26 = v24;
    v49 = v20;
    v27 = v1;
    v28 = v50;
    swift_beginAccess();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v56 = (_QWORD *)*v28;
    v30 = v56;
    *v28 = 0x8000000000000000;
    v48 = v25;
    v32 = sub_1DC5B3FD8(v25, v26, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1DC5B34E4);
    v33 = v30[2];
    v34 = (v31 & 1) == 0;
    v35 = v33 + v34;
    if (__OFADD__(v33, v34))
      break;
    v36 = v31;
    if (v30[3] >= v35)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        sub_1DC5B3E24();
    }
    else
    {
      sub_1DC5B3970(v35, isUniquelyReferenced_nonNull_native);
      v37 = sub_1DC5B3FD8(v48, v26, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1DC5B34E4);
      if ((v36 & 1) != (v38 & 1))
        goto LABEL_26;
      v32 = v37;
    }
    v1 = v27;
    v39 = v56;
    v15 = v53;
    if ((v36 & 1) != 0)
    {
      v40 = (uint64_t *)(v56[7] + 16 * v32);
      swift_bridgeObjectRelease();
      *v40 = v49;
      v40[1] = v22;
    }
    else
    {
      v56[(v32 >> 6) + 8] |= 1 << v32;
      v41 = (_QWORD *)(v39[6] + 16 * v32);
      *v41 = v48;
      v41[1] = v26;
      v42 = (uint64_t *)(v39[7] + 16 * v32);
      *v42 = v49;
      v42[1] = v22;
      v43 = v39[2];
      v44 = __OFADD__(v43, 1);
      v45 = v43 + 1;
      if (v44)
        goto LABEL_25;
      v39[2] = v45;
      swift_bridgeObjectRetain();
    }
    *v50 = v39;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_endAccess();
    v17 = v52;
    v16 = v55;
    (*(void (**)(char *, uint64_t))(v52 + 8))(v4, v55);
    v14 = v51;
LABEL_4:
    v13 += v14;
    if (!--v11)
      return swift_bridgeObjectRelease();
    v15(v4, v13, v16);
  }
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  result = sub_1DC62B55C();
  __break(1u);
  return result;
}

uint64_t sub_1DC5B2E44(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v3 = *(_QWORD *)(sub_1DC62A488() + 16);
  swift_bridgeObjectRelease();
  if (!v3)
    return 1;
  result = sub_1DC62A488();
  v5 = result;
  v6 = *(_QWORD *)(result + 16);
  if (v6)
  {
    v7 = 0;
    v8 = *(_QWORD *)(a2 + 16);
    v9 = a2 + 40;
    v10 = v8;
    v11 = *(_QWORD *)(result + 16);
    while (1)
    {
      if (v7 >= *(_QWORD *)(v5 + 16))
      {
        __break(1u);
        return result;
      }
      if (v8)
        break;
LABEL_4:
      if (++v7 == v6)
        goto LABEL_13;
    }
    sub_1DC5B4A04();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    while (sub_1DC62B280())
    {
      v9 += 16;
      if (!--v8)
      {
        swift_bridgeObjectRelease();
        result = swift_bridgeObjectRelease();
        v8 = v10;
        v6 = v11;
        v9 = a2 + 40;
        goto LABEL_4;
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return 1;
  }
LABEL_13:
  swift_bridgeObjectRelease();
  return 0;
}

void sub_1DC5B2F90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id *v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  id v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;

  v40 = a3;
  v39 = sub_1DC62A140();
  v4 = *(_QWORD *)(v39 - 8);
  MEMORY[0x1E0C80A78](v39);
  v6 = (char *)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC4BA670(0, &qword_1EDB0F398, (uint64_t (*)(uint64_t))type metadata accessor for ExternalURLData, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v39 - v8;
  sub_1DC5B49A0();
  v11 = v10;
  v12 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v14 = (id *)((char *)&v39 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(id *, uint64_t, uint64_t))(v12 + 16))(v14, a1, v11);
  v15 = (*(uint64_t (**)(id *, uint64_t))(v12 + 88))(v14, v11);
  if (v15 == *MEMORY[0x1E0CF8190])
  {
    (*(void (**)(id *, uint64_t))(v12 + 96))(v14, v11);

    sub_1DC4B83E8();
    v16 = swift_allocObject();
    *(_OWORD *)(v16 + 16) = xmmword_1DC62C670;
    sub_1DC62A77C();
    v17 = sub_1DC62A770();
    v19 = v18;
    v20 = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v16 + 56) = MEMORY[0x1E0DEA968];
    v21 = sub_1DC4BEC64();
    *(_QWORD *)(v16 + 64) = v21;
    *(_QWORD *)(v16 + 32) = v17;
    *(_QWORD *)(v16 + 40) = v19;
    sub_1DC5B4658(v40, (uint64_t)v9);
    v22 = type metadata accessor for ExternalURLData();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 48))(v9, 1, v22) == 1)
    {
      sub_1DC5B46B4((uint64_t)v9);
      v23 = (uint64_t *)(v16 + 72);
      *(_QWORD *)(v16 + 96) = v20;
      *(_QWORD *)(v16 + 104) = v21;
    }
    else
    {
      v34 = v39;
      (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v6, v9, v39);
      sub_1DC5B4964((uint64_t)v9);
      v35 = sub_1DC62A11C();
      v37 = v36;
      (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v34);
      v23 = (uint64_t *)(v16 + 72);
      *(_QWORD *)(v16 + 96) = v20;
      *(_QWORD *)(v16 + 104) = v21;
      if (v37)
      {
        *v23 = v35;
LABEL_9:
        *(_QWORD *)(v16 + 80) = v37;
        sub_1DC4FA56C(0, (unint64_t *)&qword_1EDB118F8);
        v38 = (void *)sub_1DC62B238();
        sub_1DC62B1D8();
        sub_1DC62AEF0();
        swift_bridgeObjectRelease();

        return;
      }
    }
    *v23 = 0;
    v37 = 0xE000000000000000;
    goto LABEL_9;
  }
  if (v15 == *MEMORY[0x1E0CF8188])
  {
    (*(void (**)(id *, uint64_t))(v12 + 96))(v14, v11);
    v24 = *v14;
    sub_1DC4FA56C(0, (unint64_t *)&qword_1EDB118F8);
    v25 = (void *)sub_1DC62B238();
    sub_1DC62B1CC();
    sub_1DC4B83E8();
    v26 = swift_allocObject();
    *(_OWORD *)(v26 + 16) = xmmword_1DC62C670;
    sub_1DC62A77C();
    v27 = sub_1DC62A770();
    v29 = v28;
    v30 = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v26 + 56) = MEMORY[0x1E0DEA968];
    v31 = sub_1DC4BEC64();
    *(_QWORD *)(v26 + 64) = v31;
    *(_QWORD *)(v26 + 32) = v27;
    *(_QWORD *)(v26 + 40) = v29;
    swift_getErrorValue();
    v32 = sub_1DC62B568();
    *(_QWORD *)(v26 + 96) = v30;
    *(_QWORD *)(v26 + 104) = v31;
    *(_QWORD *)(v26 + 72) = v32;
    *(_QWORD *)(v26 + 80) = v33;
    sub_1DC62AEF0();

    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1DC62B37C();
    __break(1u);
  }
}

uint64_t ExternalAnalyticsEventProcessor.deinit()
{
  uint64_t v0;

  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 24);
  __swift_destroy_boxed_opaque_existential_1(v0 + 64);
  __swift_destroy_boxed_opaque_existential_1(v0 + 104);
  __swift_destroy_boxed_opaque_existential_1(v0 + 144);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t ExternalAnalyticsEventProcessor.__deallocating_deinit()
{
  uint64_t v0;

  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 24);
  __swift_destroy_boxed_opaque_existential_1(v0 + 64);
  __swift_destroy_boxed_opaque_existential_1(v0 + 104);
  __swift_destroy_boxed_opaque_existential_1(v0 + 144);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1DC5B3474()
{
  return sub_1DC62A944();
}

uint64_t sub_1DC5B347C()
{
  return sub_1DC62A950();
}

uint64_t sub_1DC5B3488()
{
  return sub_1DC62A968();
}

uint64_t sub_1DC5B3490()
{
  return sub_1DC62A95C();
}

uint64_t sub_1DC5B3498()
{
  return sub_1DC62A938();
}

uint64_t sub_1DC5B34A0()
{
  return sub_1DC62A974();
}

uint64_t sub_1DC5B34A8(uint64_t a1, uint64_t a2)
{
  return sub_1DC5B3FD8(a1, a2, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1DC5B34E4);
}

unint64_t sub_1DC5B34B4(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1DC62B2A4();
  return sub_1DC5B35C4(a1, v2);
}

unint64_t sub_1DC5B34E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v9;
  _QWORD *v10;
  BOOL v11;
  uint64_t v12;
  _QWORD *v13;
  BOOL v14;

  v4 = v3 + 64;
  v5 = -1 << *(_BYTE *)(v3 + 32);
  v6 = a3 & ~v5;
  if (((*(_QWORD *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0)
  {
    v9 = *(_QWORD *)(v3 + 48);
    v10 = (_QWORD *)(v9 + 16 * v6);
    v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_1DC62B520() & 1) == 0)
    {
      v12 = ~v5;
      do
      {
        v6 = (v6 + 1) & v12;
        if (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
          break;
        v13 = (_QWORD *)(v9 + 16 * v6);
        v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_1DC62B520() & 1) == 0);
    }
  }
  return v6;
}

unint64_t sub_1DC5B35C4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v6;
  char v7;
  _BYTE v9[40];

  v3 = -1 << *(_BYTE *)(v2 + 32);
  v4 = a2 & ~v3;
  if (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0)
  {
    v6 = ~v3;
    do
    {
      sub_1DC5B4588(*(_QWORD *)(v2 + 48) + 40 * v4, (uint64_t)v9);
      v7 = MEMORY[0x1DF0CC078](v9, a1);
      sub_1DC5B45C4((uint64_t)v9);
      if ((v7 & 1) != 0)
        break;
      v4 = (v4 + 1) & v6;
    }
    while (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  }
  return v4;
}

uint64_t sub_1DC5B3688(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  unint64_t v20;
  unint64_t v21;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  id v30;
  char v31;
  unint64_t v32;
  BOOL v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  char v38;

  v3 = v2;
  v5 = *v2;
  sub_1DC5B4AC8();
  v38 = a2;
  v6 = sub_1DC62B3A0();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_38;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v36 = v2;
  v37 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v11 = (unint64_t)(v8 + 63) >> 6;
  v12 = v6 + 64;
  result = swift_retain();
  v14 = 0;
  while (1)
  {
    if (v10)
    {
      v20 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v21 = v20 | (v14 << 6);
      goto LABEL_21;
    }
    if (__OFADD__(v14++, 1))
      goto LABEL_40;
    if (v14 >= v11)
      break;
    v23 = (_QWORD *)(v5 + 64);
    v24 = *(_QWORD *)(v37 + 8 * v14);
    if (!v24)
    {
      v25 = v14 + 1;
      if (v14 + 1 >= v11)
      {
LABEL_31:
        swift_release();
        v3 = v36;
        if ((v38 & 1) == 0)
          goto LABEL_38;
        goto LABEL_34;
      }
      v24 = *(_QWORD *)(v37 + 8 * v25);
      if (!v24)
      {
        while (1)
        {
          v14 = v25 + 1;
          if (__OFADD__(v25, 1))
            break;
          if (v14 >= v11)
            goto LABEL_31;
          v24 = *(_QWORD *)(v37 + 8 * v14);
          ++v25;
          if (v24)
            goto LABEL_20;
        }
LABEL_39:
        __break(1u);
LABEL_40:
        __break(1u);
        return result;
      }
      ++v14;
    }
LABEL_20:
    v10 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v14 << 6);
LABEL_21:
    v26 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v21);
    v28 = *v26;
    v27 = v26[1];
    v29 = *(void **)(*(_QWORD *)(v5 + 56) + 8 * v21);
    if ((v38 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      v30 = v29;
    }
    sub_1DC62B5B0();
    sub_1DC62B10C();
    result = sub_1DC62B5C8();
    v15 = -1 << *(_BYTE *)(v7 + 32);
    v16 = result & ~v15;
    v17 = v16 >> 6;
    if (((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v31 = 0;
      v32 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v32 && (v31 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        v33 = v17 == v32;
        if (v17 == v32)
          v17 = 0;
        v31 |= v33;
        v34 = *(_QWORD *)(v12 + 8 * v17);
      }
      while (v34 == -1);
      v18 = __clz(__rbit64(~v34)) + (v17 << 6);
    }
    *(_QWORD *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    v19 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v18);
    *v19 = v28;
    v19[1] = v27;
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v18) = v29;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v3 = v36;
  v23 = (_QWORD *)(v5 + 64);
  if ((v38 & 1) == 0)
    goto LABEL_38;
LABEL_34:
  v35 = 1 << *(_BYTE *)(v5 + 32);
  if (v35 >= 64)
    bzero(v23, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v35;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_38:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_1DC5B3970(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  unint64_t v21;
  unint64_t v22;
  int64_t v23;
  _QWORD *v24;
  unint64_t v25;
  int64_t v26;
  char v27;
  unint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  int64_t v40;
  uint64_t v41;
  char v42;

  v3 = v2;
  v5 = *v2;
  sub_1DC5B45F8();
  v42 = a2;
  v6 = sub_1DC62B3A0();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v41 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v39 = v2;
  v40 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  while (1)
  {
    if (v10)
    {
      v21 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v22 = v21 | (v13 << 6);
      goto LABEL_31;
    }
    v23 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v23 >= v40)
      break;
    v24 = (_QWORD *)(v5 + 64);
    v25 = *(_QWORD *)(v41 + 8 * v23);
    ++v13;
    if (!v25)
    {
      v13 = v23 + 1;
      if (v23 + 1 >= v40)
        goto LABEL_33;
      v25 = *(_QWORD *)(v41 + 8 * v13);
      if (!v25)
      {
        v26 = v23 + 2;
        if (v26 >= v40)
        {
LABEL_33:
          swift_release();
          v3 = v39;
          if ((v42 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v25 = *(_QWORD *)(v41 + 8 * v26);
        if (!v25)
        {
          while (1)
          {
            v13 = v26 + 1;
            if (__OFADD__(v26, 1))
              goto LABEL_42;
            if (v13 >= v40)
              goto LABEL_33;
            v25 = *(_QWORD *)(v41 + 8 * v13);
            ++v26;
            if (v25)
              goto LABEL_30;
          }
        }
        v13 = v26;
      }
    }
LABEL_30:
    v10 = (v25 - 1) & v25;
    v22 = __clz(__rbit64(v25)) + (v13 << 6);
LABEL_31:
    v31 = 16 * v22;
    v32 = (uint64_t *)(*(_QWORD *)(v5 + 48) + v31);
    v34 = *v32;
    v33 = v32[1];
    v35 = (uint64_t *)(*(_QWORD *)(v5 + 56) + v31);
    v36 = *v35;
    v37 = v35[1];
    if ((v42 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_1DC62B5B0();
    sub_1DC62B10C();
    result = sub_1DC62B5C8();
    v14 = -1 << *(_BYTE *)(v7 + 32);
    v15 = result & ~v14;
    v16 = v15 >> 6;
    if (((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v27 = 0;
      v28 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v29 = v16 == v28;
        if (v16 == v28)
          v16 = 0;
        v27 |= v29;
        v30 = *(_QWORD *)(v11 + 8 * v16);
      }
      while (v30 == -1);
      v17 = __clz(__rbit64(~v30)) + (v16 << 6);
    }
    *(_QWORD *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    v18 = 16 * v17;
    v19 = (_QWORD *)(*(_QWORD *)(v7 + 48) + v18);
    *v19 = v34;
    v19[1] = v33;
    v20 = (_QWORD *)(*(_QWORD *)(v7 + 56) + v18);
    *v20 = v36;
    v20[1] = v37;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v3 = v39;
  v24 = (_QWORD *)(v5 + 64);
  if ((v42 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v38 = 1 << *(_BYTE *)(v5 + 32);
  if (v38 >= 64)
    bzero(v24, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v24 = -1 << v38;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

id sub_1DC5B3C90()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  _QWORD *v21;
  unint64_t v23;
  int64_t v24;

  v1 = v0;
  sub_1DC5B4AC8();
  v2 = *v0;
  v3 = sub_1DC62B394();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_24:
    result = (id)swift_release();
    *v1 = v4;
    return result;
  }
  result = (id)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    if (__OFADD__(v9++, 1))
      goto LABEL_26;
    if (v9 >= v13)
      goto LABEL_24;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    if (!v23)
      break;
LABEL_23:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (_QWORD *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v18 = v17[1];
    v19 = 8 * v15;
    v20 = *(void **)(*(_QWORD *)(v2 + 56) + v19);
    v21 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v21 = *v17;
    v21[1] = v18;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v19) = v20;
    swift_bridgeObjectRetain();
    result = v20;
  }
  v24 = v9 + 1;
  if (v9 + 1 >= v13)
    goto LABEL_24;
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    ++v9;
    goto LABEL_23;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_24;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_23;
  }
  __break(1u);
LABEL_26:
  __break(1u);
  return result;
}

void *sub_1DC5B3E24()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  int64_t v25;
  unint64_t v26;
  int64_t v27;

  v1 = v0;
  sub_1DC5B45F8();
  v2 = *v0;
  v3 = sub_1DC62B394();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v25 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v25 >= v13)
      goto LABEL_26;
    v26 = *(_QWORD *)(v6 + 8 * v25);
    ++v9;
    if (!v26)
    {
      v9 = v25 + 1;
      if (v25 + 1 >= v13)
        goto LABEL_26;
      v26 = *(_QWORD *)(v6 + 8 * v9);
      if (!v26)
        break;
    }
LABEL_25:
    v12 = (v26 - 1) & v26;
    v15 = __clz(__rbit64(v26)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + v16);
    v19 = *v17;
    v18 = v17[1];
    v20 = (uint64_t *)(*(_QWORD *)(v2 + 56) + v16);
    v21 = *v20;
    v22 = v20[1];
    v23 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v23 = v19;
    v23[1] = v18;
    v24 = (_QWORD *)(*(_QWORD *)(v4 + 56) + v16);
    *v24 = v21;
    v24[1] = v22;
    swift_bridgeObjectRetain();
    result = (void *)swift_bridgeObjectRetain();
  }
  v27 = v25 + 2;
  if (v27 >= v13)
    goto LABEL_26;
  v26 = *(_QWORD *)(v6 + 8 * v27);
  if (v26)
  {
    v9 = v27;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v27 + 1;
    if (__OFADD__(v27, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v26 = *(_QWORD *)(v6 + 8 * v9);
    ++v27;
    if (v26)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_1DC5B3FD8(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v5;

  sub_1DC62B5B0();
  sub_1DC62B10C();
  v5 = sub_1DC62B5C8();
  return a3(a1, a2, v5);
}

_QWORD *sub_1DC5B4044(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;

  v5[23] = sub_1DC5B1B50(MEMORY[0x1E0DEE9D8]);
  v5[24] = 0;
  v5[25] = 0;
  v5[26] = 0;
  sub_1DC4BAC88(a1, (uint64_t)(v5 + 3));
  v5[2] = a2;
  sub_1DC4BAC88(a3, (uint64_t)(v5 + 8));
  sub_1DC4BAC88(a4, (uint64_t)(v5 + 13));
  sub_1DC4BAC88(a5, (uint64_t)(v5 + 18));
  swift_retain();
  sub_1DC5B1CB8();
  __swift_destroy_boxed_opaque_existential_1(a5);
  __swift_destroy_boxed_opaque_existential_1(a4);
  __swift_destroy_boxed_opaque_existential_1(a3);
  __swift_destroy_boxed_opaque_existential_1(a1);
  return v5;
}

uint64_t sub_1DC5B40F8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  void (*v29)(char *, uint64_t, uint64_t);
  uint64_t v30;
  uint64_t v31;
  void (*v32)(char *, char *, uint64_t);
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v37;
  char *v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  char *v55;

  sub_1DC5B4A48(0, (unint64_t *)&qword_1EDB0E730, type metadata accessor for AppSessionStartEvent, (unint64_t *)&qword_1EDB102C8, (uint64_t)&protocol conformance descriptor for AppSessionStartEvent);
  v47 = v2;
  v43 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v46 = (char *)&v42 - v3;
  sub_1DC5B4A48(0, (unint64_t *)&qword_1EDB0E718, type metadata accessor for MediaEngageCompleteEvent, &qword_1EDB10CC8, (uint64_t)&protocol conformance descriptor for MediaEngageCompleteEvent);
  v51 = v4;
  v45 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v50 = (char *)&v42 - v5;
  sub_1DC5B4A48(0, (unint64_t *)&qword_1EDB0E708, type metadata accessor for MediaEngageEvent, &qword_1EDB0F570, (uint64_t)&protocol conformance descriptor for MediaEngageEvent);
  v54 = v6;
  v49 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v53 = (char *)&v42 - v7;
  sub_1DC5B4A48(0, (unint64_t *)&qword_1EDB0E710, type metadata accessor for NewsArticleViewEvent, &qword_1EDB103C0, (uint64_t)&protocol conformance descriptor for NewsArticleViewEvent);
  v9 = v8;
  v52 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v42 - v10;
  v12 = sub_1DC62A77C();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = MEMORY[0x1E0C80A78](v12);
  v44 = (char *)&v42 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = MEMORY[0x1E0C80A78](v14);
  v55 = (char *)&v42 - v17;
  v18 = MEMORY[0x1E0C80A78](v16);
  v48 = (char *)&v42 - v19;
  v20 = MEMORY[0x1E0C80A78](v18);
  v22 = (char *)&v42 - v21;
  v23 = MEMORY[0x1E0C80A78](v20);
  v25 = (char *)&v42 - v24;
  v26 = MEMORY[0x1E0C80A78](v23);
  v28 = (char *)&v42 - v27;
  MEMORY[0x1E0C80A78](v26);
  v29 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 16);
  v29((char *)&v42 - v30, a1, v12);
  if (swift_dynamicCast())
  {
    (*(void (**)(char *, uint64_t))(v52 + 8))(v11, v9);
    v29(v28, a1, v12);
    (*(void (**)(char *, uint64_t))(v13 + 8))(v28, v12);
    v31 = a1;
LABEL_5:
    v29(v22, v31, v12);
    (*(void (**)(char *, uint64_t))(v13 + 8))(v22, v12);
LABEL_6:
    v35 = v55;
    v29(v55, v31, v12);
    (*(void (**)(char *, uint64_t))(v13 + 8))(v35, v12);
    return 1;
  }
  v29(v28, a1, v12);
  v32 = *(void (**)(char *, char *, uint64_t))(v13 + 32);
  v32(v25, v28, v12);
  v34 = v53;
  v33 = v54;
  v31 = a1;
  if (swift_dynamicCast())
  {
    (*(void (**)(char *, uint64_t))(v49 + 8))(v34, v33);
    goto LABEL_5;
  }
  v29(v22, a1, v12);
  v32(v48, v22, v12);
  v38 = v50;
  v37 = v51;
  if ((swift_dynamicCast() & 1) != 0)
  {
    (*(void (**)(char *, uint64_t))(v45 + 8))(v38, v37);
    goto LABEL_6;
  }
  v39 = v55;
  v29(v55, v31, v12);
  v32(v44, v39, v12);
  v40 = v46;
  v41 = v47;
  if ((swift_dynamicCast() & 1) == 0)
    return 0;
  (*(void (**)(char *, uint64_t))(v43 + 8))(v40, v41);
  return 1;
}

uint64_t method lookup function for ExternalAnalyticsEventProcessor()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ExternalAnalyticsEventProcessor.__allocating_init(appConfigurationManager:tracker:uploader:panelIdProvider:urlProvider:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 144))();
}

uint64_t sub_1DC5B4588(uint64_t a1, uint64_t a2)
{
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(MEMORY[0x1E0DEC198] - 8) + 16))(a2, a1);
  return a2;
}

uint64_t sub_1DC5B45C4(uint64_t a1)
{
  (*(void (**)(void))(*(_QWORD *)(MEMORY[0x1E0DEC198] - 8) + 8))();
  return a1;
}

void sub_1DC5B45F8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1F036E288)
  {
    v0 = sub_1DC62B3B8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1F036E288);
  }
}

uint64_t sub_1DC5B4658(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1DC4BA670(0, &qword_1EDB0F398, (uint64_t (*)(uint64_t))type metadata accessor for ExternalURLData, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DC5B46B4(uint64_t a1)
{
  uint64_t v2;

  sub_1DC4BA670(0, &qword_1EDB0F398, (uint64_t (*)(uint64_t))type metadata accessor for ExternalURLData, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1DC5B4708(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ExternalURLData();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DC5B474C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v1 = sub_1DC62A77C();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  sub_1DC4BA670(0, &qword_1EDB0F398, (uint64_t (*)(uint64_t))type metadata accessor for ExternalURLData, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v6 = *(unsigned __int8 *)(*(_QWORD *)(v5 - 8) + 80);
  v7 = (v3 + v4 + v6) & ~v6;
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  v8 = type metadata accessor for ExternalURLData();
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v0 + v7, 1, v8))
  {
    v9 = sub_1DC62A140();
    (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v0 + v7, v9);
    if (*(_QWORD *)(v0 + v7 + *(int *)(v8 + 20) + 8))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return swift_deallocObject();
}

uint64_t sub_1DC5B486C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1DC4BA670(0, &qword_1EDB0F398, (uint64_t (*)(uint64_t))type metadata accessor for ExternalURLData, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1DC5B48C8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = *(_QWORD *)(sub_1DC62A77C() - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = *(_QWORD *)(v3 + 64);
  sub_1DC4BA670(0, &qword_1EDB0F398, (uint64_t (*)(uint64_t))type metadata accessor for ExternalURLData, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v7 = *(unsigned __int8 *)(*(_QWORD *)(v6 - 8) + 80);
  sub_1DC5B2F90(a1, v1 + v4, v1 + ((v4 + v5 + v7) & ~v7));
}

uint64_t sub_1DC5B4964(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for ExternalURLData();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1DC5B49A0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EDB12A08)
  {
    sub_1DC4FA56C(255, &qword_1EDB12A10);
    v0 = sub_1DC62A824();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EDB12A08);
  }
}

unint64_t sub_1DC5B4A04()
{
  unint64_t result;

  result = qword_1EDB11810;
  if (!qword_1EDB11810)
  {
    result = MEMORY[0x1DF0CC744](MEMORY[0x1E0DEA9B8], MEMORY[0x1E0DEA968]);
    atomic_store(result, (unint64_t *)&qword_1EDB11810);
  }
  return result;
}

void sub_1DC5B4A48(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), unint64_t *a4, uint64_t a5)
{
  unint64_t v9;
  uint64_t v10;

  if (!*a2)
  {
    a3(255);
    sub_1DC4B6748(a4, a3, a5);
    v9 = sub_1DC62A77C();
    if (!v10)
      atomic_store(v9, a2);
  }
}

void sub_1DC5B4AC8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1F036E290)
  {
    sub_1DC4FA56C(255, &qword_1EDB0E488);
    v0 = sub_1DC62B3B8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1F036E290);
  }
}

uint64_t sub_1DC5B4B3C(uint64_t a1, void *a2)
{
  uint64_t v2;

  return sub_1DC5B1DBC(a1, a2, v2);
}

uint64_t sub_1DC5B4B44(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

void sub_1DC5B4B80()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1F036E298)
  {
    sub_1DC4BA670(255, &qword_1F036E2A0, MEMORY[0x1E0DB3FE8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    v0 = sub_1DC62B3B8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1F036E298);
  }
}

uint64_t sub_1DC5B4BFC(uint64_t a1)
{
  return sub_1DC4BE784(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], qword_1F036E2A8, MEMORY[0x1E0CF8078]);
}

uint64_t static AddEarningsToCalendarEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C2FE8(&qword_1F0369130, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1F036E2A8, a1);
}

uint64_t sub_1DC5B4C3C(uint64_t a1)
{
  return sub_1DC4BE784(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], qword_1F036E2C0, MEMORY[0x1E0CF8380]);
}

uint64_t static AddEarningsToCalendarEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C2FE8(&qword_1F0369138, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1F036E2C0, a1);
}

uint64_t AddEarningsToCalendarEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C37DC((uint64_t (*)(_QWORD))sub_1DC4B6600, a1);
}

uint64_t AddEarningsToCalendarEvent.eventData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  sub_1DC4B6600();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*AddEarningsToCalendarEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t AddEarningsToCalendarEvent.feedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AddEarningsToCalendarEvent(0) + 20);
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t type metadata accessor for AddEarningsToCalendarEvent(uint64_t a1)
{
  return sub_1DC4B385C(a1, qword_1F036E358);
}

uint64_t AddEarningsToCalendarEvent.feedData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AddEarningsToCalendarEvent(0) + 20);
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*AddEarningsToCalendarEvent.feedData.modify())()
{
  type metadata accessor for AddEarningsToCalendarEvent(0);
  return nullsub_1;
}

uint64_t AddEarningsToCalendarEvent.symbolData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AddEarningsToCalendarEvent(0) + 24);
  sub_1DC4B4B50(0, &qword_1EDB0E750, (void (*)(void))sub_1DC4C3328, (void (*)(void))sub_1DC4C336C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t AddEarningsToCalendarEvent.symbolData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AddEarningsToCalendarEvent(0) + 24);
  sub_1DC4B4B50(0, &qword_1EDB0E750, (void (*)(void))sub_1DC4C3328, (void (*)(void))sub_1DC4C336C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*AddEarningsToCalendarEvent.symbolData.modify())()
{
  type metadata accessor for AddEarningsToCalendarEvent(0);
  return nullsub_1;
}

uint64_t AddEarningsToCalendarEvent.viewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AddEarningsToCalendarEvent(0) + 28);
  sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t AddEarningsToCalendarEvent.viewData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AddEarningsToCalendarEvent(0) + 28);
  sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*AddEarningsToCalendarEvent.viewData.modify())()
{
  type metadata accessor for AddEarningsToCalendarEvent(0);
  return nullsub_1;
}

uint64_t AddEarningsToCalendarEvent.calendarAccessData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AddEarningsToCalendarEvent(0) + 32);
  sub_1DC4B4B50(0, &qword_1F036E2D8, (void (*)(void))sub_1DC59A928, (void (*)(void))sub_1DC59A970);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t AddEarningsToCalendarEvent.calendarAccessData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AddEarningsToCalendarEvent(0) + 32);
  sub_1DC4B4B50(0, &qword_1F036E2D8, (void (*)(void))sub_1DC59A928, (void (*)(void))sub_1DC59A970);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*AddEarningsToCalendarEvent.calendarAccessData.modify())()
{
  type metadata accessor for AddEarningsToCalendarEvent(0);
  return nullsub_1;
}

uint64_t AddEarningsToCalendarEvent.addToCalendarResultData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AddEarningsToCalendarEvent(0) + 36);
  sub_1DC4B4B50(0, &qword_1F036E2E0, (void (*)(void))sub_1DC530C98, (void (*)(void))sub_1DC530CE0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t AddEarningsToCalendarEvent.addToCalendarResultData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AddEarningsToCalendarEvent(0) + 36);
  sub_1DC4B4B50(0, &qword_1F036E2E0, (void (*)(void))sub_1DC530C98, (void (*)(void))sub_1DC530CE0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*AddEarningsToCalendarEvent.addToCalendarResultData.modify())()
{
  type metadata accessor for AddEarningsToCalendarEvent(0);
  return nullsub_1;
}

uint64_t AddEarningsToCalendarEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v2 = *MEMORY[0x1E0CF8128];
  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
  v4 = (int *)type metadata accessor for AddEarningsToCalendarEvent(0);
  v5 = a1 + v4[5];
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 104))(v5, v2, v6);
  v7 = a1 + v4[6];
  sub_1DC4B4B50(0, &qword_1EDB0E750, (void (*)(void))sub_1DC4C3328, (void (*)(void))sub_1DC4C336C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 104))(v7, v2, v8);
  v9 = a1 + v4[7];
  sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 104))(v9, v2, v10);
  v11 = a1 + v4[8];
  sub_1DC4B4B50(0, &qword_1F036E2D8, (void (*)(void))sub_1DC59A928, (void (*)(void))sub_1DC59A970);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 104))(v11, v2, v12);
  v13 = a1 + v4[9];
  sub_1DC4B4B50(0, &qword_1F036E2E0, (void (*)(void))sub_1DC530C98, (void (*)(void))sub_1DC530CE0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 104))(v13, v2, v14);
}

uint64_t AddEarningsToCalendarEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C37DC((uint64_t (*)(_QWORD))MEMORY[0x1E0CF8670], a1);
}

uint64_t AddEarningsToCalendarEvent.Model.feedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = v1 + *(int *)(type metadata accessor for AddEarningsToCalendarEvent.Model(0) + 20);
  v5 = *(_QWORD *)(v3 + 8);
  v4 = *(_QWORD *)(v3 + 16);
  *(_BYTE *)a1 = *(_BYTE *)v3;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v4;
  return swift_bridgeObjectRetain();
}

uint64_t type metadata accessor for AddEarningsToCalendarEvent.Model(uint64_t a1)
{
  return sub_1DC4B385C(a1, qword_1F036E3F8);
}

uint64_t AddEarningsToCalendarEvent.Model.symbolData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;

  v3 = v1 + *(int *)(type metadata accessor for AddEarningsToCalendarEvent.Model(0) + 24);
  v4 = *(_QWORD *)(v3 + 8);
  v5 = *(_BYTE *)(v3 + 16);
  v6 = *(_QWORD *)(v3 + 24);
  v7 = *(_QWORD *)(v3 + 32);
  *(_QWORD *)a1 = *(_QWORD *)v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t AddEarningsToCalendarEvent.Model.viewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for AddEarningsToCalendarEvent.Model(0) + 28));
  v5 = *v3;
  v4 = v3[1];
  LOWORD(v3) = *((_WORD *)v3 + 8);
  *(_QWORD *)a1 = v5;
  *(_QWORD *)(a1 + 8) = v4;
  *(_WORD *)(a1 + 16) = (_WORD)v3;
  return swift_bridgeObjectRetain();
}

uint64_t AddEarningsToCalendarEvent.Model.calendarAccessData.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for AddEarningsToCalendarEvent.Model(0);
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 32));
  return result;
}

uint64_t AddEarningsToCalendarEvent.Model.addToCalendarResultData.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for AddEarningsToCalendarEvent.Model(0);
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 36));
  return result;
}

int *AddEarningsToCalendarEvent.Model.init(eventData:feedData:symbolData:viewData:calendarAccessData:addToCalendarResultData:)@<X0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t *a3@<X2>, uint64_t *a4@<X3>, char *a5@<X4>, char *a6@<X5>, uint64_t a7@<X8>)
{
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int *result;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int16 v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  char v26;

  v9 = *a2;
  v10 = *((_QWORD *)a2 + 1);
  v11 = *((_QWORD *)a2 + 2);
  v12 = *a3;
  v13 = a3[1];
  v14 = *((_BYTE *)a3 + 16);
  v15 = a3[3];
  v16 = a3[4];
  v23 = a4[1];
  v24 = *a4;
  v22 = *((_WORD *)a4 + 8);
  v25 = *a5;
  v26 = *a6;
  v17 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(a7, a1, v17);
  result = (int *)type metadata accessor for AddEarningsToCalendarEvent.Model(0);
  v19 = a7 + result[5];
  *(_BYTE *)v19 = v9;
  *(_QWORD *)(v19 + 8) = v10;
  *(_QWORD *)(v19 + 16) = v11;
  v20 = a7 + result[6];
  *(_QWORD *)v20 = v12;
  *(_QWORD *)(v20 + 8) = v13;
  *(_BYTE *)(v20 + 16) = v14;
  *(_QWORD *)(v20 + 24) = v15;
  *(_QWORD *)(v20 + 32) = v16;
  v21 = a7 + result[7];
  *(_QWORD *)v21 = v24;
  *(_QWORD *)(v21 + 8) = v23;
  *(_WORD *)(v21 + 16) = v22;
  *(_BYTE *)(a7 + result[8]) = v25;
  *(_BYTE *)(a7 + result[9]) = v26;
  return result;
}

uint64_t sub_1DC5B55BC(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1DC5B55F4 + 4 * byte_1DC6406C0[a1]))(0x746144746E657665, 0xE900000000000061);
}

uint64_t sub_1DC5B55F4()
{
  return 0x6174614464656566;
}

unint64_t sub_1DC5B5638()
{
  return 0xD000000000000012;
}

unint64_t sub_1DC5B5654()
{
  return 0xD000000000000017;
}

uint64_t sub_1DC5B5678()
{
  unsigned __int8 *v0;

  return sub_1DC5B55BC(*v0);
}

uint64_t sub_1DC5B5680@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1DC5B79DC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DC5B56A4()
{
  sub_1DC5B599C();
  return sub_1DC62B604();
}

uint64_t sub_1DC5B56CC()
{
  sub_1DC5B599C();
  return sub_1DC62B610();
}

uint64_t AddEarningsToCalendarEvent.Model.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int *v10;
  char *v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;

  v3 = v1;
  sub_1DC5B5E64(0, &qword_1F036E2E8, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v25 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC5B599C();
  sub_1DC62B5F8();
  LOBYTE(v25) = 0;
  sub_1DC62ABA8();
  sub_1DC4B6788(&qword_1EDB0E8A8, MEMORY[0x1E0CF8680]);
  sub_1DC62B4E4();
  if (!v2)
  {
    v10 = (int *)type metadata accessor for AddEarningsToCalendarEvent.Model(0);
    v11 = (char *)(v3 + v10[5]);
    v12 = *v11;
    v14 = *((_QWORD *)v11 + 1);
    v13 = *((_QWORD *)v11 + 2);
    LOBYTE(v25) = v12;
    v26 = v14;
    v27 = v13;
    v30 = 1;
    sub_1DC4BEFD8();
    sub_1DC62B4E4();
    v15 = (uint64_t *)(v3 + v10[6]);
    v16 = *v15;
    v17 = v15[1];
    v18 = *((_BYTE *)v15 + 16);
    v20 = v15[3];
    v19 = v15[4];
    v25 = v16;
    v26 = v17;
    LOBYTE(v27) = v18;
    v28 = v20;
    v29 = v19;
    v30 = 2;
    sub_1DC4C336C();
    sub_1DC62B4E4();
    v21 = (uint64_t *)(v3 + v10[7]);
    v22 = *v21;
    v23 = v21[1];
    LOWORD(v21) = *((_WORD *)v21 + 8);
    v25 = v22;
    v26 = v23;
    LOWORD(v27) = (_WORD)v21;
    v30 = 3;
    sub_1DC4BEDF0();
    sub_1DC62B4E4();
    LOBYTE(v25) = *(_BYTE *)(v3 + v10[8]);
    v30 = 4;
    sub_1DC59A970();
    sub_1DC62B4E4();
    LOBYTE(v25) = *(_BYTE *)(v3 + v10[9]);
    v30 = 5;
    sub_1DC530CE0();
    sub_1DC62B4E4();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1DC5B599C()
{
  unint64_t result;

  result = qword_1F036E2F0;
  if (!qword_1F036E2F0)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC640924, &type metadata for AddEarningsToCalendarEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036E2F0);
  }
  return result;
}

uint64_t AddEarningsToCalendarEvent.Model.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  int *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  __int16 v23;
  char *v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;

  v27 = a2;
  v3 = sub_1DC62ABA8();
  v28 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v30 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC5B5E64(0, &qword_1F036E2F8, MEMORY[0x1E0DED048]);
  v29 = v5;
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v26 - v6;
  v8 = (int *)type metadata accessor for AddEarningsToCalendarEvent.Model(0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC5B599C();
  v31 = v7;
  v11 = (uint64_t)v32;
  sub_1DC62B5E0();
  if (v11)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v32 = a1;
  v12 = v28;
  LOBYTE(v33) = 0;
  sub_1DC4B6788(&qword_1EDB0E278, MEMORY[0x1E0CF8688]);
  v13 = v29;
  sub_1DC62B454();
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v10, v30, v3);
  v38 = 1;
  sub_1DC4BEF94();
  sub_1DC62B454();
  v14 = v34;
  v15 = v35;
  v16 = &v10[v8[5]];
  *v16 = v33;
  *((_QWORD *)v16 + 1) = v14;
  *((_QWORD *)v16 + 2) = v15;
  v38 = 2;
  sub_1DC4C3328();
  sub_1DC62B454();
  v17 = v34;
  v18 = v35;
  v19 = v36;
  v20 = v37;
  v21 = &v10[v8[6]];
  *(_QWORD *)v21 = v33;
  *((_QWORD *)v21 + 1) = v17;
  v21[16] = v18;
  *((_QWORD *)v21 + 3) = v19;
  *((_QWORD *)v21 + 4) = v20;
  v38 = 3;
  sub_1DC4BEDAC();
  sub_1DC62B454();
  v22 = v34;
  v23 = v35;
  v24 = &v10[v8[7]];
  *(_QWORD *)v24 = v33;
  *((_QWORD *)v24 + 1) = v22;
  *((_WORD *)v24 + 8) = v23;
  v38 = 4;
  sub_1DC59A928();
  sub_1DC62B454();
  v10[v8[8]] = v33;
  v38 = 5;
  sub_1DC530C98();
  sub_1DC62B454();
  MEMORY[8](v31, v13);
  v10[v8[9]] = v33;
  sub_1DC5B5EC0((uint64_t)v10, v27);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v32);
  return sub_1DC5B5F04((uint64_t)v10);
}

void sub_1DC5B5E64(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1DC5B599C();
    v7 = a3(a1, &type metadata for AddEarningsToCalendarEvent.Model.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1DC5B5EC0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for AddEarningsToCalendarEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DC5B5F04(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for AddEarningsToCalendarEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1DC5B5F40@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return AddEarningsToCalendarEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_1DC5B5F54(_QWORD *a1)
{
  return AddEarningsToCalendarEvent.Model.encode(to:)(a1);
}

uint64_t sub_1DC5B5F68@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4B2C68(&qword_1F0369130, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1F036E2A8, a1);
}

uint64_t sub_1DC5B5F8C@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4B2C68(&qword_1F0369138, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1F036E2C0, a1);
}

uint64_t sub_1DC5B5FB0@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v4 = *MEMORY[0x1E0CF8128];
  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 104))(a2, v4, v5);
  v6 = a2 + a1[5];
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 104))(v6, v4, v7);
  v8 = a2 + a1[6];
  sub_1DC4B4B50(0, &qword_1EDB0E750, (void (*)(void))sub_1DC4C3328, (void (*)(void))sub_1DC4C336C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 104))(v8, v4, v9);
  v10 = a2 + a1[7];
  sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 104))(v10, v4, v11);
  v12 = a2 + a1[8];
  sub_1DC4B4B50(0, &qword_1F036E2D8, (void (*)(void))sub_1DC59A928, (void (*)(void))sub_1DC59A970);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 104))(v12, v4, v13);
  v14 = a2 + a1[9];
  sub_1DC4B4B50(0, &qword_1F036E2E0, (void (*)(void))sub_1DC530C98, (void (*)(void))sub_1DC530CE0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 104))(v14, v4, v15);
}

uint64_t *initializeBufferWithCopyOfBuffer for AddEarningsToCalendarEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v28 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v28 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_1DC4B6600();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = a3[6];
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    sub_1DC4B4B50(0, &qword_1EDB0E750, (void (*)(void))sub_1DC4C3328, (void (*)(void))sub_1DC4C336C);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
    v16 = a3[7];
    v17 = (char *)a1 + v16;
    v18 = (char *)a2 + v16;
    sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
    v20 = a3[8];
    v21 = (char *)a1 + v20;
    v22 = (char *)a2 + v20;
    sub_1DC4B4B50(0, &qword_1F036E2D8, (void (*)(void))sub_1DC59A928, (void (*)(void))sub_1DC59A970);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v21, v22, v23);
    v24 = a3[9];
    v25 = (char *)a1 + v24;
    v26 = (char *)a2 + v24;
    sub_1DC4B4B50(0, &qword_1F036E2E0, (void (*)(void))sub_1DC530C98, (void (*)(void))sub_1DC530CE0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v25, v26, v27);
  }
  return a1;
}

uint64_t destroy for AddEarningsToCalendarEvent(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + a2[5];
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = a1 + a2[6];
  sub_1DC4B4B50(0, &qword_1EDB0E750, (void (*)(void))sub_1DC4C3328, (void (*)(void))sub_1DC4C336C);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  v9 = a1 + a2[7];
  sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  v11 = a1 + a2[8];
  sub_1DC4B4B50(0, &qword_1F036E2D8, (void (*)(void))sub_1DC59A928, (void (*)(void))sub_1DC59A970);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
  v13 = a1 + a2[9];
  sub_1DC4B4B50(0, &qword_1F036E2E0, (void (*)(void))sub_1DC530C98, (void (*)(void))sub_1DC530CE0);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v13, v14);
}

uint64_t initializeWithCopy for AddEarningsToCalendarEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1DC4B4B50(0, &qword_1EDB0E750, (void (*)(void))sub_1DC4C3328, (void (*)(void))sub_1DC4C336C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1DC4B4B50(0, &qword_1F036E2D8, (void (*)(void))sub_1DC59A928, (void (*)(void))sub_1DC59A970);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1DC4B4B50(0, &qword_1F036E2E0, (void (*)(void))sub_1DC530C98, (void (*)(void))sub_1DC530CE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v24, v25, v26);
  return a1;
}

uint64_t assignWithCopy for AddEarningsToCalendarEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1DC4B4B50(0, &qword_1EDB0E750, (void (*)(void))sub_1DC4C3328, (void (*)(void))sub_1DC4C336C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 24))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 24))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1DC4B4B50(0, &qword_1F036E2D8, (void (*)(void))sub_1DC59A928, (void (*)(void))sub_1DC59A970);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 24))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1DC4B4B50(0, &qword_1F036E2E0, (void (*)(void))sub_1DC530C98, (void (*)(void))sub_1DC530CE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 24))(v24, v25, v26);
  return a1;
}

uint64_t initializeWithTake for AddEarningsToCalendarEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1DC4B4B50(0, &qword_1EDB0E750, (void (*)(void))sub_1DC4C3328, (void (*)(void))sub_1DC4C336C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1DC4B4B50(0, &qword_1F036E2D8, (void (*)(void))sub_1DC59A928, (void (*)(void))sub_1DC59A970);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1DC4B4B50(0, &qword_1F036E2E0, (void (*)(void))sub_1DC530C98, (void (*)(void))sub_1DC530CE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(v24, v25, v26);
  return a1;
}

uint64_t assignWithTake for AddEarningsToCalendarEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  sub_1DC4B4B50(0, &qword_1EDB0E750, (void (*)(void))sub_1DC4C3328, (void (*)(void))sub_1DC4C336C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 40))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 40))(v16, v17, v18);
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  sub_1DC4B4B50(0, &qword_1F036E2D8, (void (*)(void))sub_1DC59A928, (void (*)(void))sub_1DC59A970);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 40))(v20, v21, v22);
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  sub_1DC4B4B50(0, &qword_1F036E2E0, (void (*)(void))sub_1DC530C98, (void (*)(void))sub_1DC530CE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 40))(v24, v25, v26);
  return a1;
}

uint64_t getEnumTagSinglePayload for AddEarningsToCalendarEvent()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC5B6C58(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  sub_1DC4B6600();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
    v12 = *(_QWORD *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
    {
      v8 = v11;
      v13 = a3[5];
    }
    else
    {
      sub_1DC4B4B50(0, &qword_1EDB0E750, (void (*)(void))sub_1DC4C3328, (void (*)(void))sub_1DC4C336C);
      v12 = *(_QWORD *)(v14 - 8);
      if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
      {
        v8 = v14;
        v13 = a3[6];
      }
      else
      {
        sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
        v12 = *(_QWORD *)(v15 - 8);
        if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
        {
          v8 = v15;
          v13 = a3[7];
        }
        else
        {
          sub_1DC4B4B50(0, &qword_1F036E2D8, (void (*)(void))sub_1DC59A928, (void (*)(void))sub_1DC59A970);
          v12 = *(_QWORD *)(v16 - 8);
          if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
          {
            v8 = v16;
            v13 = a3[8];
          }
          else
          {
            sub_1DC4B4B50(0, &qword_1F036E2E0, (void (*)(void))sub_1DC530C98, (void (*)(void))sub_1DC530CE0);
            v8 = v17;
            v12 = *(_QWORD *)(v17 - 8);
            v13 = a3[9];
          }
        }
      }
    }
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t storeEnumTagSinglePayload for AddEarningsToCalendarEvent()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC5B6E08(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  sub_1DC4B6600();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = a4[5];
    }
    else
    {
      sub_1DC4B4B50(0, &qword_1EDB0E750, (void (*)(void))sub_1DC4C3328, (void (*)(void))sub_1DC4C336C);
      v14 = *(_QWORD *)(v16 - 8);
      if (*(_DWORD *)(v14 + 84) == a3)
      {
        v10 = v16;
        v15 = a4[6];
      }
      else
      {
        sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
        v14 = *(_QWORD *)(v17 - 8);
        if (*(_DWORD *)(v14 + 84) == a3)
        {
          v10 = v17;
          v15 = a4[7];
        }
        else
        {
          sub_1DC4B4B50(0, &qword_1F036E2D8, (void (*)(void))sub_1DC59A928, (void (*)(void))sub_1DC59A970);
          v14 = *(_QWORD *)(v18 - 8);
          if (*(_DWORD *)(v14 + 84) == a3)
          {
            v10 = v18;
            v15 = a4[8];
          }
          else
          {
            sub_1DC4B4B50(0, &qword_1F036E2E0, (void (*)(void))sub_1DC530C98, (void (*)(void))sub_1DC530CE0);
            v10 = v19;
            v14 = *(_QWORD *)(v19 - 8);
            v15 = a4[9];
          }
        }
      }
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_1DC5B6FB4()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;

  sub_1DC4B6600();
  if (v0 <= 0x3F)
  {
    sub_1DC4B4B50(319, (unint64_t *)&qword_1EDB0E848, (void (*)(void))sub_1DC4BEF94, (void (*)(void))sub_1DC4BEFD8);
    if (v1 <= 0x3F)
    {
      sub_1DC4B4B50(319, &qword_1EDB0E750, (void (*)(void))sub_1DC4C3328, (void (*)(void))sub_1DC4C336C);
      if (v2 <= 0x3F)
      {
        sub_1DC4B4B50(319, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
        if (v3 <= 0x3F)
        {
          sub_1DC4B4B50(319, &qword_1F036E2D8, (void (*)(void))sub_1DC59A928, (void (*)(void))sub_1DC59A970);
          if (v4 <= 0x3F)
          {
            sub_1DC4B4B50(319, &qword_1F036E2E0, (void (*)(void))sub_1DC530C98, (void (*)(void))sub_1DC530CE0);
            if (v5 <= 0x3F)
              swift_initStructMetadata();
          }
        }
      }
    }
  }
}

_QWORD *initializeBufferWithCopyOfBuffer for AddEarningsToCalendarEvent.Model(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v22 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v22 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1DC62ABA8();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = a3[6];
    v10 = (char *)a1 + v8;
    v11 = (char *)a2 + v8;
    *v10 = *v11;
    v12 = *((_QWORD *)v11 + 2);
    *((_QWORD *)v10 + 1) = *((_QWORD *)v11 + 1);
    *((_QWORD *)v10 + 2) = v12;
    v13 = (char *)a1 + v9;
    v14 = (char *)a2 + v9;
    v15 = *((_QWORD *)v14 + 1);
    *(_QWORD *)v13 = *(_QWORD *)v14;
    *((_QWORD *)v13 + 1) = v15;
    v13[16] = v14[16];
    v16 = *((_QWORD *)v14 + 4);
    *((_QWORD *)v13 + 3) = *((_QWORD *)v14 + 3);
    *((_QWORD *)v13 + 4) = v16;
    v17 = a3[7];
    v18 = a3[8];
    v19 = (char *)a1 + v17;
    v20 = (char *)a2 + v17;
    v19[16] = v20[16];
    v21 = *((_QWORD *)v20 + 1);
    *(_QWORD *)v19 = *(_QWORD *)v20;
    *((_QWORD *)v19 + 1) = v21;
    v19[17] = v20[17];
    *((_BYTE *)a1 + v18) = *((_BYTE *)a2 + v18);
    *((_BYTE *)a1 + a3[9]) = *((_BYTE *)a2 + a3[9]);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for AddEarningsToCalendarEvent.Model(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for AddEarningsToCalendarEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v6 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = a2 + v7;
  *(_BYTE *)v9 = *(_BYTE *)v10;
  v11 = *(_QWORD *)(v10 + 16);
  *(_QWORD *)(v9 + 8) = *(_QWORD *)(v10 + 8);
  *(_QWORD *)(v9 + 16) = v11;
  v12 = a1 + v8;
  v13 = a2 + v8;
  v14 = *(_QWORD *)(v13 + 8);
  *(_QWORD *)v12 = *(_QWORD *)v13;
  *(_QWORD *)(v12 + 8) = v14;
  *(_BYTE *)(v12 + 16) = *(_BYTE *)(v13 + 16);
  v15 = *(_QWORD *)(v13 + 32);
  *(_QWORD *)(v12 + 24) = *(_QWORD *)(v13 + 24);
  *(_QWORD *)(v12 + 32) = v15;
  v16 = a3[7];
  v17 = a3[8];
  v18 = a1 + v16;
  v19 = a2 + v16;
  *(_BYTE *)(v18 + 16) = *(_BYTE *)(v19 + 16);
  v20 = *(_QWORD *)(v19 + 8);
  *(_QWORD *)v18 = *(_QWORD *)v19;
  *(_QWORD *)(v18 + 8) = v20;
  *(_BYTE *)(v18 + 17) = *(_BYTE *)(v19 + 17);
  *(_BYTE *)(a1 + v17) = *(_BYTE *)(a2 + v17);
  *(_BYTE *)(a1 + a3[9]) = *(_BYTE *)(a2 + a3[9]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for AddEarningsToCalendarEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v6 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_BYTE *)v8 = *(_BYTE *)v9;
  *(_QWORD *)(v8 + 8) = *(_QWORD *)(v9 + 8);
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(v9 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v10 = a3[6];
  v11 = a1 + v10;
  v12 = a2 + v10;
  *(_QWORD *)v11 = *(_QWORD *)(a2 + v10);
  *(_QWORD *)(v11 + 8) = *(_QWORD *)(a2 + v10 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v11 + 16) = *(_BYTE *)(v12 + 16);
  *(_QWORD *)(v11 + 24) = *(_QWORD *)(v12 + 24);
  *(_QWORD *)(v11 + 32) = *(_QWORD *)(v12 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v13 = a3[7];
  v14 = a1 + v13;
  v15 = a2 + v13;
  *(_QWORD *)v14 = *(_QWORD *)(a2 + v13);
  *(_QWORD *)(v14 + 8) = *(_QWORD *)(a2 + v13 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v14 + 16) = *(_BYTE *)(v15 + 16);
  *(_BYTE *)(v14 + 17) = *(_BYTE *)(v15 + 17);
  *(_BYTE *)(a1 + a3[8]) = *(_BYTE *)(a2 + a3[8]);
  *(_BYTE *)(a1 + a3[9]) = *(_BYTE *)(a2 + a3[9]);
  return a1;
}

uint64_t initializeWithTake for AddEarningsToCalendarEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 *v17;
  __int128 v18;

  v6 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = a2 + v7;
  *(_OWORD *)v9 = *(_OWORD *)v10;
  *(_QWORD *)(v9 + 16) = *(_QWORD *)(v10 + 16);
  v11 = a1 + v8;
  v12 = a2 + v8;
  v13 = *(_OWORD *)(v12 + 16);
  *(_OWORD *)v11 = *(_OWORD *)v12;
  *(_OWORD *)(v11 + 16) = v13;
  *(_QWORD *)(v11 + 32) = *(_QWORD *)(v12 + 32);
  v14 = a3[7];
  v15 = a3[8];
  v16 = a1 + v14;
  v17 = (__int128 *)(a2 + v14);
  v18 = *v17;
  *(_WORD *)(v16 + 16) = *((_WORD *)v17 + 8);
  *(_OWORD *)v16 = v18;
  *(_BYTE *)(a1 + v15) = *(_BYTE *)(a2 + v15);
  *(_BYTE *)(a1 + a3[9]) = *(_BYTE *)(a2 + a3[9]);
  return a1;
}

uint64_t assignWithTake for AddEarningsToCalendarEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v6 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_BYTE *)v8 = *(_BYTE *)v9;
  v11 = *(_QWORD *)(v9 + 8);
  v10 = *(_QWORD *)(v9 + 16);
  *(_QWORD *)(v8 + 8) = v11;
  *(_QWORD *)(v8 + 16) = v10;
  swift_bridgeObjectRelease();
  v12 = a3[6];
  v13 = a1 + v12;
  v14 = a2 + v12;
  v15 = *(_QWORD *)(a2 + v12 + 8);
  *(_QWORD *)v13 = *(_QWORD *)(a2 + v12);
  *(_QWORD *)(v13 + 8) = v15;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v13 + 16) = *(_BYTE *)(v14 + 16);
  v16 = *(_QWORD *)(v14 + 32);
  *(_QWORD *)(v13 + 24) = *(_QWORD *)(v14 + 24);
  *(_QWORD *)(v13 + 32) = v16;
  swift_bridgeObjectRelease();
  v17 = a3[7];
  v18 = a1 + v17;
  v19 = a2 + v17;
  v20 = *(_QWORD *)(a2 + v17 + 8);
  *(_QWORD *)v18 = *(_QWORD *)(a2 + v17);
  *(_QWORD *)(v18 + 8) = v20;
  swift_bridgeObjectRelease();
  *(_WORD *)(v18 + 16) = *(_WORD *)(v19 + 16);
  v21 = a3[9];
  *(_BYTE *)(a1 + a3[8]) = *(_BYTE *)(a2 + a3[8]);
  *(_BYTE *)(a1 + v21) = *(_BYTE *)(a2 + v21);
  return a1;
}

uint64_t getEnumTagSinglePayload for AddEarningsToCalendarEvent.Model()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC5B7698(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_1DC62ABA8();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 16);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for AddEarningsToCalendarEvent.Model()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC5B7724(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_1DC62ABA8();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20) + 16) = (a2 - 1);
  return result;
}

uint64_t sub_1DC5B77A0()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1DC62ABA8();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for AddEarningsToCalendarEvent.Model.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_1DC5B7884 + 4 * byte_1DC6406CB[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_1DC5B78B8 + 4 * byte_1DC6406C6[v4]))();
}

uint64_t sub_1DC5B78B8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC5B78C0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DC5B78C8);
  return result;
}

uint64_t sub_1DC5B78D4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DC5B78DCLL);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_1DC5B78E0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC5B78E8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AddEarningsToCalendarEvent.Model.CodingKeys()
{
  return &type metadata for AddEarningsToCalendarEvent.Model.CodingKeys;
}

unint64_t sub_1DC5B7908()
{
  unint64_t result;

  result = qword_1F036E440;
  if (!qword_1F036E440)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC6408FC, &type metadata for AddEarningsToCalendarEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036E440);
  }
  return result;
}

unint64_t sub_1DC5B7950()
{
  unint64_t result;

  result = qword_1F036E448;
  if (!qword_1F036E448)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC64086C, &type metadata for AddEarningsToCalendarEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036E448);
  }
  return result;
}

unint64_t sub_1DC5B7998()
{
  unint64_t result;

  result = qword_1F036E450;
  if (!qword_1F036E450)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC640894, &type metadata for AddEarningsToCalendarEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036E450);
  }
  return result;
}

uint64_t sub_1DC5B79DC(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x746144746E657665 && a2 == 0xE900000000000061;
  if (v2 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6174614464656566 && a2 == 0xE800000000000000 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x61446C6F626D7973 && a2 == 0xEA00000000006174 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6174614477656976 && a2 == 0xE800000000000000 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000001DC64D5F0 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x80000001DC64D610)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    v6 = sub_1DC62B520();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 5;
    else
      return 6;
  }
}

uint64_t sub_1DC5B7C68()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  return swift_deallocClassInstance();
}

uint64_t ArticleViewData.viewSessionID.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ArticleViewData.viewSessionID.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*ArticleViewData.viewSessionID.modify())()
{
  return nullsub_1;
}

StocksAnalytics::ArticleViewData __swiftcall ArticleViewData.init(viewSessionID:)(StocksAnalytics::ArticleViewData viewSessionID)
{
  StocksAnalytics::ArticleViewData *v1;

  *v1 = viewSessionID;
  return viewSessionID;
}

uint64_t sub_1DC5B7D04()
{
  return 0x7373655377656976;
}

uint64_t sub_1DC5B7D28@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x7373655377656976 && a2 == 0xED000044496E6F69)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_1DC62B520();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1DC5B7DE0()
{
  sub_1DC5B7F24();
  return sub_1DC62B604();
}

uint64_t sub_1DC5B7E08()
{
  sub_1DC5B7F24();
  return sub_1DC62B610();
}

uint64_t ArticleViewData.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  sub_1DC5B808C(0, &qword_1EDB11A28, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC5B7F24();
  sub_1DC62B5F8();
  sub_1DC62B4B4();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_1DC5B7F24()
{
  unint64_t result;

  result = qword_1EDB0F298;
  if (!qword_1EDB0F298)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC640B8C, &type metadata for ArticleViewData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB0F298);
  }
  return result;
}

uint64_t ArticleViewData.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  sub_1DC5B808C(0, &qword_1EDB12A18, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v14 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC5B7F24();
  sub_1DC62B5E0();
  if (!v2)
  {
    v10 = sub_1DC62B424();
    v12 = v11;
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *a2 = v10;
    a2[1] = v12;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1DC5B808C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1DC5B7F24();
    v7 = a3(a1, &type metadata for ArticleViewData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1DC5B80F0@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return ArticleViewData.init(from:)(a1, a2);
}

uint64_t sub_1DC5B8104(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  sub_1DC5B808C(0, &qword_1EDB11A28, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC5B7F24();
  sub_1DC62B5F8();
  sub_1DC62B4B4();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

ValueMetadata *type metadata accessor for ArticleViewData()
{
  return &type metadata for ArticleViewData;
}

uint64_t storeEnumTagSinglePayload for ArticleViewData.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1DC5B8248 + 4 * byte_1DC640A18[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1DC5B8268 + 4 * byte_1DC640A1D[v4]))();
}

_BYTE *sub_1DC5B8248(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1DC5B8268(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1DC5B8270(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1DC5B8278(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1DC5B8280(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1DC5B8288(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for ArticleViewData.CodingKeys()
{
  return &type metadata for ArticleViewData.CodingKeys;
}

unint64_t sub_1DC5B82A8()
{
  unint64_t result;

  result = qword_1F036E458;
  if (!qword_1F036E458)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC640B64, &type metadata for ArticleViewData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036E458);
  }
  return result;
}

unint64_t sub_1DC5B82F0()
{
  unint64_t result;

  result = qword_1EDB0F2A8;
  if (!qword_1EDB0F2A8)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC640AD4, &type metadata for ArticleViewData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB0F2A8);
  }
  return result;
}

unint64_t sub_1DC5B8338()
{
  unint64_t result;

  result = qword_1EDB0F2A0;
  if (!qword_1EDB0F2A0)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC640AFC, &type metadata for ArticleViewData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB0F2A0);
  }
  return result;
}

StocksAnalytics::AdJournalEntryData __swiftcall AdJournalEntryData.init(status:error:)(StocksAnalytics::AdJournalEntryStatus status, StocksAnalytics::AdJournalEntryError_optional error)
{
  _BYTE *v2;
  char v3;
  StocksAnalytics::AdJournalEntryData result;

  v3 = *(_BYTE *)error.value;
  *v2 = *(_BYTE *)status;
  v2[1] = v3;
  result.status = status;
  return result;
}

void AdJournalEntryData.status.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

_BYTE *AdJournalEntryData.status.setter(_BYTE *result)
{
  _BYTE *v1;

  *v1 = *result;
  return result;
}

uint64_t (*AdJournalEntryData.status.modify())()
{
  return nullsub_1;
}

void AdJournalEntryData.error.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 1);
}

_BYTE *AdJournalEntryData.error.setter(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 1) = *result;
  return result;
}

uint64_t (*AdJournalEntryData.error.modify())()
{
  return nullsub_1;
}

uint64_t sub_1DC5B83E0()
{
  _BYTE *v0;

  if (*v0)
    return 0x726F727265;
  else
    return 0x737574617473;
}

uint64_t sub_1DC5B8414@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1DC5B8C54(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DC5B8438()
{
  sub_1DC5B85DC();
  return sub_1DC62B604();
}

uint64_t sub_1DC5B8460()
{
  sub_1DC5B85DC();
  return sub_1DC62B610();
}

uint64_t AdJournalEntryData.encode(to:)(_QWORD *a1)
{
  char *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char v9;
  uint64_t v11;
  int v12;
  char v13;
  char v14;
  char v15;
  char v16;

  sub_1DC5B882C(0, &qword_1EDB11A58, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v11 - v7;
  v9 = *v1;
  v12 = v1[1];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC5B85DC();
  sub_1DC62B5F8();
  v16 = v9;
  v15 = 0;
  sub_1DC5B8620();
  sub_1DC62B4E4();
  if (!v2)
  {
    v14 = v12;
    v13 = 1;
    sub_1DC5B8664();
    sub_1DC62B490();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_1DC5B85DC()
{
  unint64_t result;

  result = qword_1EDB0FA70;
  if (!qword_1EDB0FA70)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC640D68, &type metadata for AdJournalEntryData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB0FA70);
  }
  return result;
}

unint64_t sub_1DC5B8620()
{
  unint64_t result;

  result = qword_1EDB0E2F8;
  if (!qword_1EDB0E2F8)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for AdJournalEntryStatus, &type metadata for AdJournalEntryStatus);
    atomic_store(result, (unint64_t *)&qword_1EDB0E2F8);
  }
  return result;
}

unint64_t sub_1DC5B8664()
{
  unint64_t result;

  result = qword_1EDB0FF48;
  if (!qword_1EDB0FF48)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for AdJournalEntryError, &type metadata for AdJournalEntryError);
    atomic_store(result, (unint64_t *)&qword_1EDB0FF48);
  }
  return result;
}

uint64_t AdJournalEntryData.init(from:)@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char v10;
  char v12;
  uint64_t v13;
  char v14;
  char v15;
  char v16;
  char v17;

  sub_1DC5B882C(0, &qword_1F036E460, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v13 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC5B85DC();
  sub_1DC62B5E0();
  if (!v2)
  {
    v16 = 0;
    sub_1DC5B8888();
    sub_1DC62B454();
    v10 = v17;
    v14 = 1;
    sub_1DC5B88CC();
    sub_1DC62B400();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    v12 = v15;
    *a2 = v10;
    a2[1] = v12;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1DC5B882C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1DC5B85DC();
    v7 = a3(a1, &type metadata for AdJournalEntryData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1DC5B8888()
{
  unint64_t result;

  result = qword_1F036E468;
  if (!qword_1F036E468)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for AdJournalEntryStatus, &type metadata for AdJournalEntryStatus);
    atomic_store(result, (unint64_t *)&qword_1F036E468);
  }
  return result;
}

unint64_t sub_1DC5B88CC()
{
  unint64_t result;

  result = qword_1F036E470;
  if (!qword_1F036E470)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for AdJournalEntryError, &type metadata for AdJournalEntryError);
    atomic_store(result, (unint64_t *)&qword_1F036E470);
  }
  return result;
}

uint64_t sub_1DC5B8918@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return AdJournalEntryData.init(from:)(a1, a2);
}

uint64_t sub_1DC5B892C(_QWORD *a1)
{
  return AdJournalEntryData.encode(to:)(a1);
}

uint64_t getEnumTagSinglePayload for AdJournalEntryData(unsigned __int16 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v6;
  int v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFC)
    goto LABEL_17;
  if (a2 + 65284 <= 0xFFFEFFFF)
    v2 = 2;
  else
    v2 = 4;
  if (a2 + 65284 < 0xFF0000)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 16)) - 65284;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
      return (*a1 | (v4 << 16)) - 65284;
    }
    v4 = *((unsigned __int8 *)a1 + 2);
    if (*((_BYTE *)a1 + 2))
      return (*a1 | (v4 << 16)) - 65284;
  }
LABEL_17:
  if (*((unsigned __int8 *)a1 + 1) <= 4u)
    v6 = 4;
  else
    v6 = *((unsigned __int8 *)a1 + 1);
  v7 = v6 - 5;
  if (*((unsigned __int8 *)a1 + 1) < 4u)
    v8 = -1;
  else
    v8 = v7;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for AdJournalEntryData(_WORD *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 65284 <= 0xFFFEFFFF)
    v3 = 2;
  else
    v3 = 4;
  if (a3 + 65284 < 0xFF0000)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1DC5B8A30 + 4 * byte_1DC640BE5[v4]))();
  *a1 = a2 - 252;
  return ((uint64_t (*)(void))((char *)sub_1DC5B8A64 + 4 * byte_1DC640BE0[v4]))();
}

uint64_t sub_1DC5B8A64(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 2) = v1;
  return result;
}

uint64_t sub_1DC5B8A6C(uint64_t result, int a2)
{
  *(_WORD *)(result + 2) = 0;
  if (a2)
    JUMPOUT(0x1DC5B8A74);
  return result;
}

uint64_t sub_1DC5B8A80(uint64_t result, int a2)
{
  *(_DWORD *)(result + 2) = 0;
  if (!a2)
    JUMPOUT(0x1DC5B8A88);
  *(_BYTE *)(result + 1) = a2 + 4;
  return result;
}

uint64_t sub_1DC5B8A8C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 2) = v1;
  return result;
}

uint64_t sub_1DC5B8A94(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 2) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AdJournalEntryData()
{
  return &type metadata for AdJournalEntryData;
}

uint64_t storeEnumTagSinglePayload for AdJournalEntryData.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1DC5B8AFC + 4 * byte_1DC640BEF[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1DC5B8B30 + 4 * byte_1DC640BEA[v4]))();
}

uint64_t sub_1DC5B8B30(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC5B8B38(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DC5B8B40);
  return result;
}

uint64_t sub_1DC5B8B4C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DC5B8B54);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1DC5B8B58(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC5B8B60(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AdJournalEntryData.CodingKeys()
{
  return &type metadata for AdJournalEntryData.CodingKeys;
}

unint64_t sub_1DC5B8B80()
{
  unint64_t result;

  result = qword_1F036E478;
  if (!qword_1F036E478)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC640D40, &type metadata for AdJournalEntryData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036E478);
  }
  return result;
}

unint64_t sub_1DC5B8BC8()
{
  unint64_t result;

  result = qword_1EDB0FA80;
  if (!qword_1EDB0FA80)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC640CB0, &type metadata for AdJournalEntryData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB0FA80);
  }
  return result;
}

unint64_t sub_1DC5B8C10()
{
  unint64_t result;

  result = qword_1EDB0FA78;
  if (!qword_1EDB0FA78)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC640CD8, &type metadata for AdJournalEntryData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB0FA78);
  }
  return result;
}

uint64_t sub_1DC5B8C54(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x737574617473 && a2 == 0xE600000000000000;
  if (v2 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x726F727265 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1DC62B520();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t AdData.impressionID.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t AdData.impressionID.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*AdData.impressionID.modify())()
{
  return nullsub_1;
}

void AdData.adType.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 16);
}

_BYTE *AdData.adType.setter(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 16) = *result;
  return result;
}

uint64_t (*AdData.adType.modify())()
{
  return nullsub_1;
}

void AdData.adCreativeType.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 17);
}

_BYTE *AdData.adCreativeType.setter(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 17) = *result;
  return result;
}

uint64_t (*AdData.adCreativeType.modify())()
{
  return nullsub_1;
}

uint64_t AdData.iadCampaign.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t AdData.iadCampaign.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 24) = a1;
  *(_QWORD *)(v2 + 32) = a2;
  return result;
}

uint64_t (*AdData.iadCampaign.modify())()
{
  return nullsub_1;
}

uint64_t AdData.iadLine.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 40);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t AdData.iadLine.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 40) = a1;
  *(_QWORD *)(v2 + 48) = a2;
  return result;
}

uint64_t (*AdData.iadLine.modify())()
{
  return nullsub_1;
}

uint64_t AdData.iadAd.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 56);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t AdData.iadAd.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 56) = a1;
  *(_QWORD *)(v2 + 64) = a2;
  return result;
}

uint64_t (*AdData.iadAd.modify())()
{
  return nullsub_1;
}

void __swiftcall AdData.init(impressionID:adType:adCreativeType:iadCampaign:iadLine:iadAd:)(StocksAnalytics::AdData *__return_ptr retstr, Swift::String impressionID, StocksAnalytics::AdType adType, StocksAnalytics::AdCreativeType adCreativeType, Swift::String_optional iadCampaign, Swift::String_optional iadLine, Swift::String_optional iadAd)
{
  StocksAnalytics::AdType v7;
  StocksAnalytics::AdCreativeType v8;

  v7 = *(_BYTE *)adType;
  v8 = *(_BYTE *)adCreativeType;
  retstr->impressionID = impressionID;
  retstr->adType = v7;
  retstr->adCreativeType = v8;
  retstr->iadCampaign = iadCampaign;
  retstr->iadLine = iadLine;
  retstr->iadAd = iadAd;
}

uint64_t sub_1DC5B8F6C()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1DC5B8FA4 + 4 * byte_1DC640DB8[*v0]))(0x6973736572706D69, 0xEC00000044496E6FLL);
}

uint64_t sub_1DC5B8FA4()
{
  return 0x657079546461;
}

uint64_t sub_1DC5B8FB8()
{
  return 0x6974616572436461;
}

uint64_t sub_1DC5B8FDC()
{
  return 0x61706D6143646169;
}

uint64_t sub_1DC5B8FFC()
{
  return 0x656E694C646169;
}

uint64_t sub_1DC5B9014()
{
  return 0x6441646169;
}

uint64_t sub_1DC5B9028@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1DC5B9B0C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DC5B904C()
{
  sub_1DC5B92D4();
  return sub_1DC62B604();
}

uint64_t sub_1DC5B9074()
{
  sub_1DC5B92D4();
  return sub_1DC62B610();
}

uint64_t AdData.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  _QWORD v18[7];
  int v19;
  int v20;
  char v21;
  char v22;
  char v23;
  char v24;
  char v25;
  char v26;
  char v27;
  char v28;

  sub_1DC5B96BC(0, &qword_1F036E480, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v18 - v6;
  v8 = *(unsigned __int8 *)(v1 + 16);
  v19 = *(unsigned __int8 *)(v1 + 17);
  v20 = v8;
  v9 = *(_QWORD *)(v1 + 24);
  v18[5] = *(_QWORD *)(v1 + 32);
  v18[6] = v9;
  v10 = *(_QWORD *)(v1 + 40);
  v18[3] = *(_QWORD *)(v1 + 48);
  v18[4] = v10;
  v11 = *(_QWORD *)(v1 + 56);
  v18[1] = *(_QWORD *)(v1 + 64);
  v18[2] = v11;
  v12 = a1[3];
  v13 = a1;
  v15 = v14;
  __swift_project_boxed_opaque_existential_1(v13, v12);
  sub_1DC5B92D4();
  sub_1DC62B5F8();
  v28 = 0;
  sub_1DC62B4B4();
  if (!v2)
  {
    v16 = v19;
    v27 = v20;
    v26 = 1;
    sub_1DC5B9318();
    sub_1DC62B4E4();
    v25 = v16;
    v24 = 2;
    sub_1DC5295A4();
    sub_1DC62B4E4();
    v23 = 3;
    sub_1DC62B478();
    v22 = 4;
    sub_1DC62B478();
    v21 = 5;
    sub_1DC62B478();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v15);
}

unint64_t sub_1DC5B92D4()
{
  unint64_t result;

  result = qword_1F036E488;
  if (!qword_1F036E488)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC640F3C, &type metadata for AdData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036E488);
  }
  return result;
}

unint64_t sub_1DC5B9318()
{
  unint64_t result;

  result = qword_1F036E490;
  if (!qword_1F036E490)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for AdType, &type metadata for AdType);
    atomic_store(result, (unint64_t *)&qword_1F036E490);
  }
  return result;
}

uint64_t AdData.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(char *, uint64_t);
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  int v29;
  uint64_t v30;
  int v31;
  char v32;
  char v33;
  char v34;
  char v35;
  unsigned __int8 v36;
  char v37;
  unsigned __int8 v38;
  char v39;

  sub_1DC5B96BC(0, &qword_1F036E498, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v26 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC5B92D4();
  sub_1DC62B5E0();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    v39 = 0;
    v11 = sub_1DC62B424();
    v13 = v12;
    v37 = 1;
    sub_1DC5B9718();
    swift_bridgeObjectRetain();
    sub_1DC62B454();
    v31 = v38;
    v35 = 2;
    sub_1DC52977C();
    sub_1DC62B454();
    v30 = v11;
    v29 = v36;
    v34 = 3;
    v14 = sub_1DC62B3E8();
    v16 = v15;
    v27 = v14;
    v28 = a2;
    v33 = 4;
    swift_bridgeObjectRetain();
    v17 = sub_1DC62B3E8();
    v19 = v18;
    v26 = v17;
    v32 = 5;
    swift_bridgeObjectRetain();
    v20 = sub_1DC62B3E8();
    v22 = v21;
    v23 = *(void (**)(char *, uint64_t))(v7 + 8);
    v24 = v20;
    v23(v9, v6);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v25 = v28;
    *v28 = v30;
    v25[1] = v13;
    *((_BYTE *)v25 + 16) = v31;
    *((_BYTE *)v25 + 17) = v29;
    v25[3] = v27;
    v25[4] = v16;
    v25[5] = v26;
    v25[6] = v19;
    v25[7] = v24;
    v25[8] = v22;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void sub_1DC5B96BC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1DC5B92D4();
    v7 = a3(a1, &type metadata for AdData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1DC5B9718()
{
  unint64_t result;

  result = qword_1F036E4A0;
  if (!qword_1F036E4A0)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for AdType, &type metadata for AdType);
    atomic_store(result, (unint64_t *)&qword_1F036E4A0);
  }
  return result;
}

uint64_t sub_1DC5B9764@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return AdData.init(from:)(a1, a2);
}

uint64_t sub_1DC5B9778(_QWORD *a1)
{
  return AdData.encode(to:)(a1);
}

uint64_t destroy for AdData()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for AdData(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  v4 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v4;
  v5 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v5;
  v6 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for AdData(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_BYTE *)(a1 + 17) = *(_BYTE *)(a2 + 17);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for AdData(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  v5 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v5;
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v7;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for AdData()
{
  return &type metadata for AdData;
}

uint64_t storeEnumTagSinglePayload for AdData.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_1DC5B99B4 + 4 * byte_1DC640DC3[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_1DC5B99E8 + 4 * byte_1DC640DBE[v4]))();
}

uint64_t sub_1DC5B99E8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC5B99F0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DC5B99F8);
  return result;
}

uint64_t sub_1DC5B9A04(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DC5B9A0CLL);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_1DC5B9A10(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC5B9A18(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AdData.CodingKeys()
{
  return &type metadata for AdData.CodingKeys;
}

unint64_t sub_1DC5B9A38()
{
  unint64_t result;

  result = qword_1F036E4A8;
  if (!qword_1F036E4A8)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC640F14, &type metadata for AdData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036E4A8);
  }
  return result;
}

unint64_t sub_1DC5B9A80()
{
  unint64_t result;

  result = qword_1F036E4B0;
  if (!qword_1F036E4B0)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC640E84, &type metadata for AdData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036E4B0);
  }
  return result;
}

unint64_t sub_1DC5B9AC8()
{
  unint64_t result;

  result = qword_1F036E4B8;
  if (!qword_1F036E4B8)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC640EAC, &type metadata for AdData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036E4B8);
  }
  return result;
}

uint64_t sub_1DC5B9B0C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6973736572706D69 && a2 == 0xEC00000044496E6FLL;
  if (v2 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x657079546461 && a2 == 0xE600000000000000 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6974616572436461 && a2 == 0xEE00657079546576 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x61706D6143646169 && a2 == 0xEB000000006E6769 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x656E694C646169 && a2 == 0xE700000000000000 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6441646169 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    v6 = sub_1DC62B520();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 5;
    else
      return 6;
  }
}

void VideoAdEngagementData.type.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

_BYTE *VideoAdEngagementData.type.setter(_BYTE *result)
{
  _BYTE *v1;

  *v1 = *result;
  return result;
}

uint64_t (*VideoAdEngagementData.type.modify())()
{
  return nullsub_1;
}

void VideoAdEngagementData.milestone.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 1);
}

_BYTE *VideoAdEngagementData.milestone.setter(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 1) = *result;
  return result;
}

uint64_t (*VideoAdEngagementData.milestone.modify())()
{
  return nullsub_1;
}

StocksAnalytics::VideoAdEngagementData __swiftcall VideoAdEngagementData.init(type:milestone:)(StocksAnalytics::VideoAdEngagementType type, StocksAnalytics::Milestone milestone)
{
  _BYTE *v2;
  char v3;
  StocksAnalytics::VideoAdEngagementData result;

  v3 = *(_BYTE *)milestone;
  *v2 = *(_BYTE *)type;
  v2[1] = v3;
  result.type = type;
  return result;
}

uint64_t sub_1DC5B9E34()
{
  _BYTE *v0;

  if (*v0)
    return 0x6E6F7473656C696DLL;
  else
    return 1701869940;
}

uint64_t sub_1DC5B9E6C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1DC5BA724(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DC5B9E90()
{
  sub_1DC5BA034();
  return sub_1DC62B604();
}

uint64_t sub_1DC5B9EB8()
{
  sub_1DC5BA034();
  return sub_1DC62B610();
}

uint64_t VideoAdEngagementData.encode(to:)(_QWORD *a1)
{
  char *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char v9;
  uint64_t v11;
  int v12;
  char v13;
  char v14;
  char v15;
  char v16;

  sub_1DC5BA284(0, &qword_1F036E4C0, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v11 - v7;
  v9 = *v1;
  v12 = v1[1];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC5BA034();
  sub_1DC62B5F8();
  v16 = v9;
  v15 = 0;
  sub_1DC5BA078();
  sub_1DC62B4E4();
  if (!v2)
  {
    v14 = v12;
    v13 = 1;
    sub_1DC5BA0BC();
    sub_1DC62B4E4();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_1DC5BA034()
{
  unint64_t result;

  result = qword_1F036E4C8;
  if (!qword_1F036E4C8)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC64111C, &type metadata for VideoAdEngagementData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036E4C8);
  }
  return result;
}

unint64_t sub_1DC5BA078()
{
  unint64_t result;

  result = qword_1F036E4D0;
  if (!qword_1F036E4D0)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for VideoAdEngagementType, &type metadata for VideoAdEngagementType);
    atomic_store(result, (unint64_t *)&qword_1F036E4D0);
  }
  return result;
}

unint64_t sub_1DC5BA0BC()
{
  unint64_t result;

  result = qword_1F036E4D8;
  if (!qword_1F036E4D8)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for Milestone, &type metadata for Milestone);
    atomic_store(result, (unint64_t *)&qword_1F036E4D8);
  }
  return result;
}

uint64_t VideoAdEngagementData.init(from:)@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char v10;
  char v12;
  uint64_t v13;
  char v14;
  char v15;
  char v16;
  char v17;

  sub_1DC5BA284(0, &qword_1F036E4E0, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v13 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC5BA034();
  sub_1DC62B5E0();
  if (!v2)
  {
    v16 = 0;
    sub_1DC5BA2E0();
    sub_1DC62B454();
    v10 = v17;
    v14 = 1;
    sub_1DC5BA324();
    sub_1DC62B454();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    v12 = v15;
    *a2 = v10;
    a2[1] = v12;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1DC5BA284(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1DC5BA034();
    v7 = a3(a1, &type metadata for VideoAdEngagementData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1DC5BA2E0()
{
  unint64_t result;

  result = qword_1F036E4E8;
  if (!qword_1F036E4E8)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for VideoAdEngagementType, &type metadata for VideoAdEngagementType);
    atomic_store(result, (unint64_t *)&qword_1F036E4E8);
  }
  return result;
}

unint64_t sub_1DC5BA324()
{
  unint64_t result;

  result = qword_1F036E4F0;
  if (!qword_1F036E4F0)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for Milestone, &type metadata for Milestone);
    atomic_store(result, (unint64_t *)&qword_1F036E4F0);
  }
  return result;
}

unint64_t sub_1DC5BA36C()
{
  unint64_t result;

  result = qword_1F036E4F8;
  if (!qword_1F036E4F8)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for VideoAdEngagementData, &type metadata for VideoAdEngagementData);
    atomic_store(result, (unint64_t *)&qword_1F036E4F8);
  }
  return result;
}

unint64_t sub_1DC5BA3B4()
{
  unint64_t result;

  result = qword_1F036E500;
  if (!qword_1F036E500)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for VideoAdEngagementData, &type metadata for VideoAdEngagementData);
    atomic_store(result, (unint64_t *)&qword_1F036E500);
  }
  return result;
}

uint64_t sub_1DC5BA3F8@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return VideoAdEngagementData.init(from:)(a1, a2);
}

uint64_t sub_1DC5BA40C(_QWORD *a1)
{
  return VideoAdEngagementData.encode(to:)(a1);
}

uint64_t getEnumTagSinglePayload for VideoAdEngagementData(unsigned __int16 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFB)
    goto LABEL_17;
  if (a2 + 65285 <= 0xFFFEFFFF)
    v2 = 2;
  else
    v2 = 4;
  if (a2 + 65285 < 0xFF0000)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 16)) - 65285;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
      return (*a1 | (v4 << 16)) - 65285;
    }
    v4 = *((unsigned __int8 *)a1 + 2);
    if (*((_BYTE *)a1 + 2))
      return (*a1 | (v4 << 16)) - 65285;
  }
LABEL_17:
  v6 = *(unsigned __int8 *)a1;
  v7 = v6 >= 6;
  v8 = v6 - 6;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for VideoAdEngagementData(_WORD *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 65285 <= 0xFFFEFFFF)
    v3 = 2;
  else
    v3 = 4;
  if (a3 + 65285 < 0xFF0000)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_1DC5BA500 + 4 * byte_1DC640F95[v4]))();
  *a1 = a2 - 251;
  return ((uint64_t (*)(void))((char *)sub_1DC5BA534 + 4 * byte_1DC640F90[v4]))();
}

uint64_t sub_1DC5BA534(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 2) = v1;
  return result;
}

uint64_t sub_1DC5BA53C(uint64_t result, int a2)
{
  *(_WORD *)(result + 2) = 0;
  if (a2)
    JUMPOUT(0x1DC5BA544);
  return result;
}

uint64_t sub_1DC5BA550(uint64_t result, int a2)
{
  *(_DWORD *)(result + 2) = 0;
  if (!a2)
    JUMPOUT(0x1DC5BA558);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_1DC5BA55C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 2) = v1;
  return result;
}

uint64_t sub_1DC5BA564(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 2) = v1;
  return result;
}

ValueMetadata *type metadata accessor for VideoAdEngagementData()
{
  return &type metadata for VideoAdEngagementData;
}

uint64_t storeEnumTagSinglePayload for VideoAdEngagementData.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1DC5BA5CC + 4 * byte_1DC640F9F[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1DC5BA600 + 4 * byte_1DC640F9A[v4]))();
}

uint64_t sub_1DC5BA600(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC5BA608(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DC5BA610);
  return result;
}

uint64_t sub_1DC5BA61C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DC5BA624);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1DC5BA628(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC5BA630(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for VideoAdEngagementData.CodingKeys()
{
  return &type metadata for VideoAdEngagementData.CodingKeys;
}

unint64_t sub_1DC5BA650()
{
  unint64_t result;

  result = qword_1F036E508;
  if (!qword_1F036E508)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC6410F4, &type metadata for VideoAdEngagementData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036E508);
  }
  return result;
}

unint64_t sub_1DC5BA698()
{
  unint64_t result;

  result = qword_1F036E510;
  if (!qword_1F036E510)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC641064, &type metadata for VideoAdEngagementData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036E510);
  }
  return result;
}

unint64_t sub_1DC5BA6E0()
{
  unint64_t result;

  result = qword_1F036E518;
  if (!qword_1F036E518)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC64108C, &type metadata for VideoAdEngagementData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036E518);
  }
  return result;
}

uint64_t sub_1DC5BA724(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 1701869940 && a2 == 0xE400000000000000;
  if (v2 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E6F7473656C696DLL && a2 == 0xE900000000000065)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1DC62B520();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1DC5BA810(uint64_t a1)
{
  return sub_1DC4BE784(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], qword_1EDB0F1D0, MEMORY[0x1E0CF8078]);
}

uint64_t static TelemetryEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C2FE8(&qword_1EDB0F1E8, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1EDB0F1D0, a1);
}

uint64_t sub_1DC5BA850(uint64_t a1)
{
  return sub_1DC4BE784(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], qword_1EDB0F1F0, MEMORY[0x1E0CF8380]);
}

uint64_t static TelemetryEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C2FE8(&qword_1EDB0E2C0, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1EDB0F1F0, a1);
}

uint64_t TelemetryEvent.networkEventData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  sub_1DC5BA8C8();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

void sub_1DC5BA8C8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EDB0E738)
  {
    type metadata accessor for NetworkEventData();
    sub_1DC5BA95C(&qword_1EDB0F658, (uint64_t)&protocol conformance descriptor for NetworkEventData);
    sub_1DC5BA95C(&qword_1EDB0F650, (uint64_t)&protocol conformance descriptor for NetworkEventData);
    v0 = sub_1DC62A80C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EDB0E738);
  }
}

uint64_t sub_1DC5BA95C(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for NetworkEventData();
    result = MEMORY[0x1DF0CC744](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t TelemetryEvent.networkEventData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  sub_1DC5BA8C8();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*TelemetryEvent.networkEventData.modify())()
{
  return nullsub_1;
}

uint64_t TelemetryEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *MEMORY[0x1E0CF8128];
  sub_1DC5BA8C8();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
}

uint64_t TelemetryEvent.Model.networkEventData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1DC4EC5B0(v1, a1);
}

uint64_t TelemetryEvent.Model.init(networkEventData:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1DC55B5D0(a1, a2, (uint64_t (*)(_QWORD))type metadata accessor for NetworkEventData);
}

unint64_t sub_1DC5BAA54()
{
  return 0xD000000000000010;
}

uint64_t sub_1DC5BAA70@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1DC5BBC30(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1DC5BAA98()
{
  sub_1DC5BABF8();
  return sub_1DC62B604();
}

uint64_t sub_1DC5BAAC0()
{
  sub_1DC5BABF8();
  return sub_1DC62B610();
}

uint64_t TelemetryEvent.Model.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  sub_1DC5BAE20(0, &qword_1F036E520, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC5BABF8();
  sub_1DC62B5F8();
  type metadata accessor for NetworkEventData();
  sub_1DC5BA95C(&qword_1EDB0F650, (uint64_t)&protocol conformance descriptor for NetworkEventData);
  sub_1DC62B4E4();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_1DC5BABF8()
{
  unint64_t result;

  result = qword_1F036E528;
  if (!qword_1F036E528)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC6412E8, &type metadata for TelemetryEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036E528);
  }
  return result;
}

uint64_t TelemetryEvent.Model.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  char *v19;

  v17 = a2;
  v4 = type metadata accessor for NetworkEventData();
  MEMORY[0x1E0C80A78](v4);
  v19 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC5BAE20(0, qword_1F036E530, MEMORY[0x1E0DED048]);
  v18 = v6;
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v17 - v8;
  v10 = type metadata accessor for TelemetryEvent.Model(0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC5BABF8();
  sub_1DC62B5E0();
  if (!v2)
  {
    v13 = (uint64_t)v12;
    sub_1DC5BA95C(&qword_1EDB0F658, (uint64_t)&protocol conformance descriptor for NetworkEventData);
    v14 = (uint64_t)v19;
    v15 = v18;
    sub_1DC62B454();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v15);
    sub_1DC55B5D0(v14, v13, (uint64_t (*)(_QWORD))type metadata accessor for NetworkEventData);
    sub_1DC55B5D0(v13, v17, type metadata accessor for TelemetryEvent.Model);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1DC5BAE20(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1DC5BABF8();
    v7 = a3(a1, &type metadata for TelemetryEvent.Model.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t type metadata accessor for TelemetryEvent.Model(uint64_t a1)
{
  return sub_1DC4B385C(a1, qword_1F036E5B8);
}

uint64_t sub_1DC5BAE90@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return TelemetryEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_1DC5BAEA4(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  sub_1DC5BAE20(0, &qword_1F036E520, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC5BABF8();
  sub_1DC62B5F8();
  type metadata accessor for NetworkEventData();
  sub_1DC5BA95C(&qword_1EDB0F650, (uint64_t)&protocol conformance descriptor for NetworkEventData);
  sub_1DC62B4E4();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_1DC5BAFB4@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4B2C68(&qword_1EDB0F1E8, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1EDB0F1D0, a1);
}

uint64_t sub_1DC5BAFD8@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4B2C68(&qword_1EDB0E2C0, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1EDB0F1F0, a1);
}

uint64_t sub_1DC5BAFFC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *MEMORY[0x1E0CF8128];
  sub_1DC5BA8C8();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
}

uint64_t initializeBufferWithCopyOfBuffer for TelemetryEvent(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1DC5BA8C8();
  return (**(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8))(a1, a2, v4);
}

uint64_t destroy for TelemetryEvent(uint64_t a1)
{
  uint64_t v2;

  sub_1DC5BA8C8();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

uint64_t initializeWithCopy for TelemetryEvent(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1DC5BA8C8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t assignWithCopy for TelemetryEvent(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1DC5BA8C8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t initializeWithTake for TelemetryEvent(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1DC5BA8C8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t assignWithTake for TelemetryEvent(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1DC5BA8C8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for TelemetryEvent()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC5BB1CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return __swift_get_extra_inhabitant_indexTm(a1, a2, a3, (uint64_t (*)(_QWORD))sub_1DC5BA8C8);
}

uint64_t storeEnumTagSinglePayload for TelemetryEvent()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC5BB1E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_store_extra_inhabitant_indexTm(a1, a2, a3, a4, (uint64_t (*)(_QWORD))sub_1DC5BA8C8);
}

uint64_t type metadata accessor for TelemetryEvent(uint64_t a1)
{
  return sub_1DC4B385C(a1, (uint64_t *)&unk_1EDB0F210);
}

uint64_t sub_1DC5BB204(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1DC4D64FC(a1, a2, a3, (uint64_t (*)(uint64_t))sub_1DC5BA8C8);
}

_QWORD *initializeBufferWithCopyOfBuffer for TelemetryEvent.Model(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  int v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;

  v4 = type metadata accessor for NetworkEventData();
  v5 = *(_DWORD *)(*(_QWORD *)(v4 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v25 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v25 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v6 = (int *)v4;
    v7 = sub_1DC62A1A0();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    *((_BYTE *)a1 + v6[5]) = *((_BYTE *)a2 + v6[5]);
    *(_QWORD *)((char *)a1 + v6[6]) = *(_QWORD *)((char *)a2 + v6[6]);
    *(_QWORD *)((char *)a1 + v6[7]) = *(_QWORD *)((char *)a2 + v6[7]);
    *(_QWORD *)((char *)a1 + v6[8]) = *(_QWORD *)((char *)a2 + v6[8]);
    *(_QWORD *)((char *)a1 + v6[9]) = *(_QWORD *)((char *)a2 + v6[9]);
    v8 = v6[10];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    *(_QWORD *)v9 = *(_QWORD *)v10;
    v9[8] = v10[8];
    *(_QWORD *)((char *)a1 + v6[11]) = *(_QWORD *)((char *)a2 + v6[11]);
    *(_QWORD *)((char *)a1 + v6[12]) = *(_QWORD *)((char *)a2 + v6[12]);
    *(_QWORD *)((char *)a1 + v6[13]) = *(_QWORD *)((char *)a2 + v6[13]);
    *((_BYTE *)a1 + v6[14]) = *((_BYTE *)a2 + v6[14]);
    *((_BYTE *)a1 + v6[15]) = *((_BYTE *)a2 + v6[15]);
    v11 = v6[16];
    v12 = (_QWORD *)((char *)a1 + v11);
    v13 = (_QWORD *)((char *)a2 + v11);
    v14 = v13[1];
    *v12 = *v13;
    v12[1] = v14;
    v15 = v6[17];
    v16 = (char *)a1 + v15;
    v17 = (char *)a2 + v15;
    *(_QWORD *)v16 = *(_QWORD *)v17;
    v16[8] = v17[8];
    v18 = v6[18];
    v19 = (char *)a1 + v18;
    v20 = (char *)a2 + v18;
    *(_QWORD *)v19 = *(_QWORD *)v20;
    v19[8] = v20[8];
    *(_QWORD *)((char *)a1 + v6[19]) = *(_QWORD *)((char *)a2 + v6[19]);
    *(_QWORD *)((char *)a1 + v6[20]) = *(_QWORD *)((char *)a2 + v6[20]);
    v21 = v6[21];
    v22 = (_QWORD *)((char *)a1 + v21);
    v23 = (_QWORD *)((char *)a2 + v21);
    v24 = v23[1];
    *v22 = *v23;
    v22[1] = v24;
    *((_BYTE *)a1 + v6[22]) = *((_BYTE *)a2 + v6[22]);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for TelemetryEvent.Model(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1DC62A1A0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  type metadata accessor for NetworkEventData();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for TelemetryEvent.Model(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;

  v4 = sub_1DC62A1A0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
  v5 = (int *)type metadata accessor for NetworkEventData();
  *(_BYTE *)(a1 + v5[5]) = *(_BYTE *)(a2 + v5[5]);
  *(_QWORD *)(a1 + v5[6]) = *(_QWORD *)(a2 + v5[6]);
  *(_QWORD *)(a1 + v5[7]) = *(_QWORD *)(a2 + v5[7]);
  *(_QWORD *)(a1 + v5[8]) = *(_QWORD *)(a2 + v5[8]);
  *(_QWORD *)(a1 + v5[9]) = *(_QWORD *)(a2 + v5[9]);
  v6 = v5[10];
  v7 = a1 + v6;
  v8 = a2 + v6;
  *(_QWORD *)v7 = *(_QWORD *)v8;
  *(_BYTE *)(v7 + 8) = *(_BYTE *)(v8 + 8);
  *(_QWORD *)(a1 + v5[11]) = *(_QWORD *)(a2 + v5[11]);
  *(_QWORD *)(a1 + v5[12]) = *(_QWORD *)(a2 + v5[12]);
  *(_QWORD *)(a1 + v5[13]) = *(_QWORD *)(a2 + v5[13]);
  *(_BYTE *)(a1 + v5[14]) = *(_BYTE *)(a2 + v5[14]);
  *(_BYTE *)(a1 + v5[15]) = *(_BYTE *)(a2 + v5[15]);
  v9 = v5[16];
  v10 = (_QWORD *)(a1 + v9);
  v11 = (uint64_t *)(a2 + v9);
  v13 = *v11;
  v12 = v11[1];
  *v10 = v13;
  v10[1] = v12;
  v14 = v5[17];
  v15 = a1 + v14;
  v16 = a2 + v14;
  *(_BYTE *)(v15 + 8) = *(_BYTE *)(v16 + 8);
  *(_QWORD *)v15 = *(_QWORD *)v16;
  v17 = v5[18];
  v18 = a1 + v17;
  v19 = a2 + v17;
  *(_QWORD *)v18 = *(_QWORD *)v19;
  *(_BYTE *)(v18 + 8) = *(_BYTE *)(v19 + 8);
  *(_QWORD *)(a1 + v5[19]) = *(_QWORD *)(a2 + v5[19]);
  *(_QWORD *)(a1 + v5[20]) = *(_QWORD *)(a2 + v5[20]);
  v20 = v5[21];
  v21 = (_QWORD *)(a1 + v20);
  v22 = (_QWORD *)(a2 + v20);
  v23 = v22[1];
  *v21 = *v22;
  v21[1] = v23;
  *(_BYTE *)(a1 + v5[22]) = *(_BYTE *)(a2 + v5[22]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for TelemetryEvent.Model(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;

  v4 = sub_1DC62A1A0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a1, a2, v4);
  v5 = (int *)type metadata accessor for NetworkEventData();
  *(_BYTE *)(a1 + v5[5]) = *(_BYTE *)(a2 + v5[5]);
  *(_QWORD *)(a1 + v5[6]) = *(_QWORD *)(a2 + v5[6]);
  *(_QWORD *)(a1 + v5[7]) = *(_QWORD *)(a2 + v5[7]);
  *(_QWORD *)(a1 + v5[8]) = *(_QWORD *)(a2 + v5[8]);
  *(_QWORD *)(a1 + v5[9]) = *(_QWORD *)(a2 + v5[9]);
  v6 = v5[10];
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = *(_BYTE *)(v8 + 8);
  *(_QWORD *)v7 = *(_QWORD *)v8;
  *(_BYTE *)(v7 + 8) = v9;
  *(_QWORD *)(a1 + v5[11]) = *(_QWORD *)(a2 + v5[11]);
  *(_QWORD *)(a1 + v5[12]) = *(_QWORD *)(a2 + v5[12]);
  *(_QWORD *)(a1 + v5[13]) = *(_QWORD *)(a2 + v5[13]);
  *(_BYTE *)(a1 + v5[14]) = *(_BYTE *)(a2 + v5[14]);
  *(_BYTE *)(a1 + v5[15]) = *(_BYTE *)(a2 + v5[15]);
  v10 = v5[16];
  v11 = (_QWORD *)(a1 + v10);
  v12 = (_QWORD *)(a2 + v10);
  *v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v13 = v5[17];
  v14 = a1 + v13;
  v15 = (uint64_t *)(a2 + v13);
  v16 = *v15;
  *(_BYTE *)(v14 + 8) = *((_BYTE *)v15 + 8);
  *(_QWORD *)v14 = v16;
  v17 = v5[18];
  v18 = a1 + v17;
  v19 = (uint64_t *)(a2 + v17);
  v20 = *v19;
  *(_BYTE *)(v18 + 8) = *((_BYTE *)v19 + 8);
  *(_QWORD *)v18 = v20;
  *(_QWORD *)(a1 + v5[19]) = *(_QWORD *)(a2 + v5[19]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + v5[20]) = *(_QWORD *)(a2 + v5[20]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v21 = v5[21];
  v22 = (_QWORD *)(a1 + v21);
  v23 = (_QWORD *)(a2 + v21);
  *v22 = *v23;
  v22[1] = v23[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + v5[22]) = *(_BYTE *)(a2 + v5[22]);
  return a1;
}

uint64_t initializeWithTake for TelemetryEvent.Model(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v4 = sub_1DC62A1A0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
  v5 = (int *)type metadata accessor for NetworkEventData();
  *(_BYTE *)(a1 + v5[5]) = *(_BYTE *)(a2 + v5[5]);
  *(_QWORD *)(a1 + v5[6]) = *(_QWORD *)(a2 + v5[6]);
  *(_QWORD *)(a1 + v5[7]) = *(_QWORD *)(a2 + v5[7]);
  *(_QWORD *)(a1 + v5[8]) = *(_QWORD *)(a2 + v5[8]);
  *(_QWORD *)(a1 + v5[9]) = *(_QWORD *)(a2 + v5[9]);
  v6 = v5[10];
  v7 = a1 + v6;
  v8 = a2 + v6;
  *(_QWORD *)v7 = *(_QWORD *)v8;
  *(_BYTE *)(v7 + 8) = *(_BYTE *)(v8 + 8);
  *(_QWORD *)(a1 + v5[11]) = *(_QWORD *)(a2 + v5[11]);
  *(_QWORD *)(a1 + v5[12]) = *(_QWORD *)(a2 + v5[12]);
  *(_QWORD *)(a1 + v5[13]) = *(_QWORD *)(a2 + v5[13]);
  *(_BYTE *)(a1 + v5[14]) = *(_BYTE *)(a2 + v5[14]);
  *(_BYTE *)(a1 + v5[15]) = *(_BYTE *)(a2 + v5[15]);
  *(_OWORD *)(a1 + v5[16]) = *(_OWORD *)(a2 + v5[16]);
  v9 = v5[17];
  v10 = a1 + v9;
  v11 = a2 + v9;
  *(_BYTE *)(v10 + 8) = *(_BYTE *)(v11 + 8);
  *(_QWORD *)v10 = *(_QWORD *)v11;
  v12 = v5[18];
  v13 = a1 + v12;
  v14 = a2 + v12;
  *(_QWORD *)v13 = *(_QWORD *)v14;
  *(_BYTE *)(v13 + 8) = *(_BYTE *)(v14 + 8);
  *(_QWORD *)(a1 + v5[19]) = *(_QWORD *)(a2 + v5[19]);
  *(_QWORD *)(a1 + v5[20]) = *(_QWORD *)(a2 + v5[20]);
  *(_OWORD *)(a1 + v5[21]) = *(_OWORD *)(a2 + v5[21]);
  *(_BYTE *)(a1 + v5[22]) = *(_BYTE *)(a2 + v5[22]);
  return a1;
}

uint64_t assignWithTake for TelemetryEvent.Model(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;

  v4 = sub_1DC62A1A0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a1, a2, v4);
  v5 = (int *)type metadata accessor for NetworkEventData();
  *(_BYTE *)(a1 + v5[5]) = *(_BYTE *)(a2 + v5[5]);
  *(_QWORD *)(a1 + v5[6]) = *(_QWORD *)(a2 + v5[6]);
  *(_QWORD *)(a1 + v5[7]) = *(_QWORD *)(a2 + v5[7]);
  *(_QWORD *)(a1 + v5[8]) = *(_QWORD *)(a2 + v5[8]);
  *(_QWORD *)(a1 + v5[9]) = *(_QWORD *)(a2 + v5[9]);
  v6 = v5[10];
  v7 = a1 + v6;
  v8 = a2 + v6;
  *(_QWORD *)v7 = *(_QWORD *)v8;
  *(_BYTE *)(v7 + 8) = *(_BYTE *)(v8 + 8);
  *(_QWORD *)(a1 + v5[11]) = *(_QWORD *)(a2 + v5[11]);
  *(_QWORD *)(a1 + v5[12]) = *(_QWORD *)(a2 + v5[12]);
  *(_QWORD *)(a1 + v5[13]) = *(_QWORD *)(a2 + v5[13]);
  *(_BYTE *)(a1 + v5[14]) = *(_BYTE *)(a2 + v5[14]);
  *(_BYTE *)(a1 + v5[15]) = *(_BYTE *)(a2 + v5[15]);
  v9 = v5[16];
  v10 = (_QWORD *)(a1 + v9);
  v11 = (uint64_t *)(a2 + v9);
  v13 = *v11;
  v12 = v11[1];
  *v10 = v13;
  v10[1] = v12;
  swift_bridgeObjectRelease();
  v14 = v5[17];
  v15 = a1 + v14;
  v16 = a2 + v14;
  *(_QWORD *)v15 = *(_QWORD *)v16;
  *(_BYTE *)(v15 + 8) = *(_BYTE *)(v16 + 8);
  v17 = v5[18];
  v18 = a1 + v17;
  v19 = a2 + v17;
  *(_BYTE *)(v18 + 8) = *(_BYTE *)(v19 + 8);
  *(_QWORD *)v18 = *(_QWORD *)v19;
  *(_QWORD *)(a1 + v5[19]) = *(_QWORD *)(a2 + v5[19]);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + v5[20]) = *(_QWORD *)(a2 + v5[20]);
  swift_bridgeObjectRelease();
  v20 = v5[21];
  v21 = (_QWORD *)(a1 + v20);
  v22 = (uint64_t *)(a2 + v20);
  v24 = *v22;
  v23 = v22[1];
  *v21 = v24;
  v21[1] = v23;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + v5[22]) = *(_BYTE *)(a2 + v5[22]);
  return a1;
}

uint64_t getEnumTagSinglePayload for TelemetryEvent.Model()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC5BBA8C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return __swift_get_extra_inhabitant_indexTm(a1, a2, a3, (uint64_t (*)(_QWORD))type metadata accessor for NetworkEventData);
}

uint64_t storeEnumTagSinglePayload for TelemetryEvent.Model()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC5BBAA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_store_extra_inhabitant_indexTm(a1, a2, a3, a4, (uint64_t (*)(_QWORD))type metadata accessor for NetworkEventData);
}

uint64_t sub_1DC5BBAB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1DC4D64FC(a1, a2, a3, (uint64_t (*)(uint64_t))type metadata accessor for NetworkEventData);
}

uint64_t storeEnumTagSinglePayload for TelemetryEvent.Model.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1DC5BBAFC + 4 * byte_1DC64116C[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1DC5BBB1C + 4 * byte_1DC641171[v4]))();
}

_BYTE *sub_1DC5BBAFC(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1DC5BBB1C(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1DC5BBB24(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1DC5BBB2C(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1DC5BBB34(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1DC5BBB3C(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for TelemetryEvent.Model.CodingKeys()
{
  return &type metadata for TelemetryEvent.Model.CodingKeys;
}

unint64_t sub_1DC5BBB5C()
{
  unint64_t result;

  result = qword_1F036E5F0;
  if (!qword_1F036E5F0)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC6412C0, &type metadata for TelemetryEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036E5F0);
  }
  return result;
}

unint64_t sub_1DC5BBBA4()
{
  unint64_t result;

  result = qword_1F036E5F8;
  if (!qword_1F036E5F8)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC641230, &type metadata for TelemetryEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036E5F8);
  }
  return result;
}

unint64_t sub_1DC5BBBEC()
{
  unint64_t result;

  result = qword_1F036E600;
  if (!qword_1F036E600)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC641258, &type metadata for TelemetryEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036E600);
  }
  return result;
}

uint64_t sub_1DC5BBC30(uint64_t a1, uint64_t a2)
{
  char v2;
  char v3;

  if (a1 == 0xD000000000000010 && a2 == 0x80000001DC64D660)
  {
    swift_bridgeObjectRelease();
    v2 = 0;
  }
  else
  {
    v3 = sub_1DC62B520();
    swift_bridgeObjectRelease();
    v2 = v3 ^ 1;
  }
  return v2 & 1;
}

uint64_t sub_1DC5BBCB4(uint64_t a1)
{
  return sub_1DC4BE784(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], qword_1EDB10740, MEMORY[0x1E0CF8078]);
}

uint64_t static AppSessionResignEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C2FE8(&qword_1EDB0E320, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1EDB10740, a1);
}

uint64_t sub_1DC5BBCF4(uint64_t a1)
{
  return sub_1DC4BE784(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], qword_1EDB10758, MEMORY[0x1E0CF8380]);
}

uint64_t static AppSessionResignEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C2FE8(&qword_1EDB0E328, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1EDB10758, a1);
}

uint64_t AppSessionResignEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C37DC((uint64_t (*)(_QWORD))sub_1DC4B6600, a1);
}

uint64_t AppSessionResignEvent.eventData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  sub_1DC4B6600();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*AppSessionResignEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t AppSessionResignEvent.orientationData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AppSessionResignEvent(0) + 20);
  sub_1DC5BBDE4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t type metadata accessor for AppSessionResignEvent(uint64_t a1)
{
  return sub_1DC4B385C(a1, (uint64_t *)&unk_1EDB0E330);
}

void sub_1DC5BBDE4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EDB0E7C0)
  {
    sub_1DC4C0014();
    sub_1DC4C0058();
    v0 = sub_1DC62A80C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EDB0E7C0);
  }
}

uint64_t AppSessionResignEvent.orientationData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AppSessionResignEvent(0) + 20);
  sub_1DC5BBDE4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*AppSessionResignEvent.orientationData.modify())()
{
  type metadata accessor for AppSessionResignEvent(0);
  return nullsub_1;
}

uint64_t AppSessionResignEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *MEMORY[0x1E0CF8128];
  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
  v4 = a1 + *(int *)(type metadata accessor for AppSessionResignEvent(0) + 20);
  sub_1DC5BBDE4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 104))(v4, v2, v5);
}

uint64_t AppSessionResignEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C37DC((uint64_t (*)(_QWORD))MEMORY[0x1E0CF8670], a1);
}

uint64_t AppSessionResignEvent.Model.orientationData.getter@<X0>(_WORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for AppSessionResignEvent.Model(0);
  *a1 = *(_WORD *)(v1 + *(int *)(result + 20));
  return result;
}

uint64_t type metadata accessor for AppSessionResignEvent.Model(uint64_t a1)
{
  return sub_1DC4B385C(a1, qword_1F036E678);
}

uint64_t AppSessionResignEvent.Model.init(eventData:orientationData:)@<X0>(uint64_t a1@<X0>, __int16 *a2@<X1>, uint64_t a3@<X8>)
{
  __int16 v5;
  uint64_t v6;
  uint64_t result;

  v5 = *a2;
  v6 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a3, a1, v6);
  result = type metadata accessor for AppSessionResignEvent.Model(0);
  *(_WORD *)(a3 + *(int *)(result + 20)) = v5;
  return result;
}

uint64_t sub_1DC5BBFD8()
{
  _BYTE *v0;

  if (*v0)
    return 0x7461746E6569726FLL;
  else
    return 0x746144746E657665;
}

uint64_t sub_1DC5BC024@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1DC5BD03C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DC5BC048()
{
  sub_1DC5BC200();
  return sub_1DC62B604();
}

uint64_t sub_1DC5BC070()
{
  sub_1DC5BC200();
  return sub_1DC62B610();
}

uint64_t AppSessionResignEvent.Model.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  _BYTE v11[13];
  __int16 v12;
  char v13;

  v3 = v1;
  sub_1DC5BC4CC(0, &qword_1F036E608, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = &v11[-v8];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC5BC200();
  sub_1DC62B5F8();
  v13 = 0;
  sub_1DC62ABA8();
  sub_1DC4B6788(&qword_1EDB0E8A8, MEMORY[0x1E0CF8680]);
  sub_1DC62B4E4();
  if (!v2)
  {
    v12 = *(_WORD *)(v3 + *(int *)(type metadata accessor for AppSessionResignEvent.Model(0) + 20));
    v11[12] = 1;
    sub_1DC4C0058();
    sub_1DC62B4E4();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1DC5BC200()
{
  unint64_t result;

  result = qword_1F036E610;
  if (!qword_1F036E610)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC6414FC, &type metadata for AppSessionResignEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036E610);
  }
  return result;
}

uint64_t AppSessionResignEvent.Model.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  __int16 v27;
  char v28;

  v21 = a2;
  v25 = sub_1DC62ABA8();
  v22 = *(_QWORD *)(v25 - 8);
  MEMORY[0x1E0C80A78](v25);
  v23 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC5BC4CC(0, &qword_1F036E618, MEMORY[0x1E0DED048]);
  v24 = v5;
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v18 - v7;
  v9 = type metadata accessor for AppSessionResignEvent.Model(0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC5BC200();
  sub_1DC62B5E0();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v19 = a1;
  v20 = v6;
  v12 = (uint64_t)v11;
  v13 = v22;
  v28 = 0;
  sub_1DC4B6788(&qword_1EDB0E278, MEMORY[0x1E0CF8688]);
  v15 = v23;
  v14 = v24;
  v16 = v25;
  sub_1DC62B454();
  (*(void (**)(uint64_t, char *, uint64_t))(v13 + 32))(v12, v15, v16);
  v26 = 1;
  sub_1DC4C0014();
  sub_1DC62B454();
  (*(void (**)(char *, uint64_t))(v20 + 8))(v8, v14);
  *(_WORD *)(v12 + *(int *)(v9 + 20)) = v27;
  sub_1DC5BC528(v12, v21);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
  return sub_1DC5BC56C(v12);
}

void sub_1DC5BC4CC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1DC5BC200();
    v7 = a3(a1, &type metadata for AppSessionResignEvent.Model.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1DC5BC528(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for AppSessionResignEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DC5BC56C(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for AppSessionResignEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1DC5BC5A8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return AppSessionResignEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_1DC5BC5BC(_QWORD *a1)
{
  return AppSessionResignEvent.Model.encode(to:)(a1);
}

uint64_t sub_1DC5BC5D0@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4B2C68(&qword_1EDB0E320, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1EDB10740, a1);
}

uint64_t sub_1DC5BC5F4@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4B2C68(&qword_1EDB0E328, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1EDB10758, a1);
}

uint64_t sub_1DC5BC618@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *MEMORY[0x1E0CF8128];
  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 104))(a2, v4, v5);
  v6 = a2 + *(int *)(a1 + 20);
  sub_1DC5BBDE4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 104))(v6, v4, v7);
}

uint64_t *initializeBufferWithCopyOfBuffer for AppSessionResignEvent(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_1DC4B6600();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    sub_1DC5BBDE4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
  }
  return a1;
}

uint64_t destroy for AppSessionResignEvent(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + *(int *)(a2 + 20);
  sub_1DC5BBDE4();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
}

uint64_t initializeWithCopy for AppSessionResignEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1DC5BBDE4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  return a1;
}

uint64_t assignWithCopy for AppSessionResignEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1DC5BBDE4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  return a1;
}

uint64_t initializeWithTake for AppSessionResignEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1DC5BBDE4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  return a1;
}

uint64_t assignWithTake for AppSessionResignEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1DC5BBDE4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for AppSessionResignEvent()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC5BC990(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  sub_1DC4B6600();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    sub_1DC5BBDE4();
    v8 = v11;
    v12 = *(_QWORD *)(v11 - 8);
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t storeEnumTagSinglePayload for AppSessionResignEvent()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC5BCA10(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  sub_1DC4B6600();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    sub_1DC5BBDE4();
    v10 = v13;
    v14 = *(_QWORD *)(v13 - 8);
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_1DC5BCA8C()
{
  unint64_t v0;
  unint64_t v1;

  sub_1DC4B6600();
  if (v0 <= 0x3F)
  {
    sub_1DC5BBDE4();
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for AppSessionResignEvent.Model(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1DC62ABA8();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    *(_WORD *)((char *)a1 + *(int *)(a3 + 20)) = *(_WORD *)((char *)a2 + *(int *)(a3 + 20));
  }
  return a1;
}

uint64_t initializeWithCopy for AppSessionResignEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  *(_WORD *)(a1 + *(int *)(a3 + 20)) = *(_WORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t assignWithCopy for AppSessionResignEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  _BYTE *v9;

  v6 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_BYTE *)(a1 + v7);
  v9 = (_BYTE *)(a2 + v7);
  *v8 = *v9;
  v8[1] = v9[1];
  return a1;
}

uint64_t initializeWithTake for AppSessionResignEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  *(_WORD *)(a1 + *(int *)(a3 + 20)) = *(_WORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t assignWithTake for AppSessionResignEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  *(_WORD *)(a1 + *(int *)(a3 + 20)) = *(_WORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t getEnumTagSinglePayload for AppSessionResignEvent.Model()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC5BCD24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unsigned int v9;

  v6 = sub_1DC62ABA8();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 20) + 1);
  if (v9 >= 5)
    return v9 - 4;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for AppSessionResignEvent.Model()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC5BCDAC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_1DC62ABA8();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_BYTE *)(a1 + *(int *)(a4 + 20) + 1) = a2 + 4;
  return result;
}

uint64_t sub_1DC5BCE28()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1DC62ABA8();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for AppSessionResignEvent.Model.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1DC5BCEE4 + 4 * byte_1DC641345[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1DC5BCF18 + 4 * byte_1DC641340[v4]))();
}

uint64_t sub_1DC5BCF18(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC5BCF20(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DC5BCF28);
  return result;
}

uint64_t sub_1DC5BCF34(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DC5BCF3CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1DC5BCF40(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC5BCF48(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AppSessionResignEvent.Model.CodingKeys()
{
  return &type metadata for AppSessionResignEvent.Model.CodingKeys;
}

unint64_t sub_1DC5BCF68()
{
  unint64_t result;

  result = qword_1F036E6B0;
  if (!qword_1F036E6B0)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC6414D4, &type metadata for AppSessionResignEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036E6B0);
  }
  return result;
}

unint64_t sub_1DC5BCFB0()
{
  unint64_t result;

  result = qword_1F036E6B8;
  if (!qword_1F036E6B8)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC641444, &type metadata for AppSessionResignEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036E6B8);
  }
  return result;
}

unint64_t sub_1DC5BCFF8()
{
  unint64_t result;

  result = qword_1F036E6C0;
  if (!qword_1F036E6C0)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC64146C, &type metadata for AppSessionResignEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036E6C0);
  }
  return result;
}

uint64_t sub_1DC5BD03C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x746144746E657665 && a2 == 0xE900000000000061;
  if (v2 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7461746E6569726FLL && a2 == 0xEF617461446E6F69)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1DC62B520();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

StocksAnalytics::PerformanceDisplayType_optional __swiftcall PerformanceDisplayType.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  StocksAnalytics::PerformanceDisplayType_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1DC62B3DC();
  result.value = swift_bridgeObjectRelease();
  v5 = 4;
  if (v3 < 4)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t PerformanceDisplayType.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1DC5BD1E4 + 4 * byte_1DC641550[*v0]))(0x6E776F6E6B6E75, 0xE700000000000000);
}

uint64_t sub_1DC5BD1E4()
{
  return 0x6563697270;
}

uint64_t sub_1DC5BD1F8()
{
  return 0x614374656B72616DLL;
}

uint64_t sub_1DC5BD214()
{
  return 0x61746E6563726570;
}

void sub_1DC5BD230(char *a1)
{
  sub_1DC543010(*a1);
}

unint64_t sub_1DC5BD240()
{
  unint64_t result;

  result = qword_1F036E6C8;
  if (!qword_1F036E6C8)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for PerformanceDisplayType, &type metadata for PerformanceDisplayType);
    atomic_store(result, (unint64_t *)&qword_1F036E6C8);
  }
  return result;
}

void sub_1DC5BD284()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1DC62B5B0();
  __asm { BR              X9 }
}

uint64_t sub_1DC5BD2D0()
{
  sub_1DC62B10C();
  swift_bridgeObjectRelease();
  return sub_1DC62B5C8();
}

void sub_1DC5BD344()
{
  __asm { BR              X10 }
}

uint64_t sub_1DC5BD380()
{
  sub_1DC62B10C();
  return swift_bridgeObjectRelease();
}

void sub_1DC5BD3E0()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1DC62B5B0();
  __asm { BR              X9 }
}

uint64_t sub_1DC5BD428()
{
  sub_1DC62B10C();
  swift_bridgeObjectRelease();
  return sub_1DC62B5C8();
}

StocksAnalytics::PerformanceDisplayType_optional sub_1DC5BD49C(Swift::String *a1)
{
  return PerformanceDisplayType.init(rawValue:)(*a1);
}

uint64_t sub_1DC5BD4A8()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_1DC5BD4D8 + 4 * byte_1DC641560[*v0]))();
}

void sub_1DC5BD4D8(_QWORD *a1@<X8>)
{
  *a1 = 0x6563697270;
  a1[1] = 0xE500000000000000;
}

void sub_1DC5BD4F0(_QWORD *a1@<X8>)
{
  *a1 = 0x614374656B72616DLL;
  a1[1] = 0xE900000000000070;
}

void sub_1DC5BD510(_QWORD *a1@<X8>)
{
  *a1 = 0x61746E6563726570;
  a1[1] = 0xEA00000000006567;
}

uint64_t sub_1DC5BD530()
{
  sub_1DC5BD694();
  return sub_1DC62B13C();
}

uint64_t sub_1DC5BD58C()
{
  sub_1DC5BD694();
  return sub_1DC62B130();
}

uint64_t storeEnumTagSinglePayload for PerformanceDisplayType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1DC5BD624 + 4 * byte_1DC641569[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1DC5BD658 + 4 * byte_1DC641564[v4]))();
}

uint64_t sub_1DC5BD658(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC5BD660(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DC5BD668);
  return result;
}

uint64_t sub_1DC5BD674(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DC5BD67CLL);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1DC5BD680(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC5BD688(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

unint64_t sub_1DC5BD694()
{
  unint64_t result;

  result = qword_1EDB10A48;
  if (!qword_1EDB10A48)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for PerformanceDisplayType, &type metadata for PerformanceDisplayType);
    atomic_store(result, (unint64_t *)&qword_1EDB10A48);
  }
  return result;
}

uint64_t sub_1DC5BD6D8(uint64_t a1)
{
  return sub_1DC4BE784(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], qword_1F036E6D0, MEMORY[0x1E0CF8078]);
}

uint64_t static NonNewsArticleViewResignEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C2FE8(&qword_1F0369140, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1F036E6D0, a1);
}

uint64_t sub_1DC5BD718(uint64_t a1)
{
  return sub_1DC4BE784(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], qword_1F036E6E8, MEMORY[0x1E0CF8380]);
}

uint64_t static NonNewsArticleViewResignEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C2FE8(&qword_1F0369148, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1F036E6E8, a1);
}

uint64_t NonNewsArticleViewResignEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C37DC((uint64_t (*)(_QWORD))sub_1DC4B6600, a1);
}

uint64_t NonNewsArticleViewResignEvent.eventData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  sub_1DC4B6600();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*NonNewsArticleViewResignEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t NonNewsArticleViewResignEvent.viewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for NonNewsArticleViewResignEvent(0) + 20);
  sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t type metadata accessor for NonNewsArticleViewResignEvent(uint64_t a1)
{
  return sub_1DC4B385C(a1, qword_1F036E770);
}

uint64_t NonNewsArticleViewResignEvent.viewData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for NonNewsArticleViewResignEvent(0) + 20);
  sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*NonNewsArticleViewResignEvent.viewData.modify())()
{
  type metadata accessor for NonNewsArticleViewResignEvent(0);
  return nullsub_1;
}

uint64_t NonNewsArticleViewResignEvent.nonNewsArticleData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for NonNewsArticleViewResignEvent(0) + 24);
  sub_1DC4B4B50(0, &qword_1F036AF00, (void (*)(void))sub_1DC503FF0, (void (*)(void))sub_1DC504038);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t NonNewsArticleViewResignEvent.nonNewsArticleData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for NonNewsArticleViewResignEvent(0) + 24);
  sub_1DC4B4B50(0, &qword_1F036AF00, (void (*)(void))sub_1DC503FF0, (void (*)(void))sub_1DC504038);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*NonNewsArticleViewResignEvent.nonNewsArticleData.modify())()
{
  type metadata accessor for NonNewsArticleViewResignEvent(0);
  return nullsub_1;
}

uint64_t NonNewsArticleViewResignEvent.orientationData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for NonNewsArticleViewResignEvent(0) + 28);
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E7C0, (void (*)(void))sub_1DC4C0014, (void (*)(void))sub_1DC4C0058);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t NonNewsArticleViewResignEvent.orientationData.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for NonNewsArticleViewResignEvent(0) + 28);
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E7C0, (void (*)(void))sub_1DC4C0014, (void (*)(void))sub_1DC4C0058);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*NonNewsArticleViewResignEvent.orientationData.modify())()
{
  type metadata accessor for NonNewsArticleViewResignEvent(0);
  return nullsub_1;
}

uint64_t NonNewsArticleViewResignEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v2 = *MEMORY[0x1E0CF8128];
  sub_1DC4B6600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
  v4 = (int *)type metadata accessor for NonNewsArticleViewResignEvent(0);
  v5 = a1 + v4[5];
  sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 104))(v5, v2, v6);
  v7 = a1 + v4[6];
  sub_1DC4B4B50(0, &qword_1F036AF00, (void (*)(void))sub_1DC503FF0, (void (*)(void))sub_1DC504038);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 104))(v7, v2, v8);
  v9 = a1 + v4[7];
  sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E7C0, (void (*)(void))sub_1DC4C0014, (void (*)(void))sub_1DC4C0058);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 104))(v9, v2, v10);
}

uint64_t NonNewsArticleViewResignEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4C37DC((uint64_t (*)(_QWORD))MEMORY[0x1E0CF8670], a1);
}

uint64_t NonNewsArticleViewResignEvent.Model.viewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for NonNewsArticleViewResignEvent.Model(0) + 20));
  v5 = *v3;
  v4 = v3[1];
  LOWORD(v3) = *((_WORD *)v3 + 8);
  *(_QWORD *)a1 = v5;
  *(_QWORD *)(a1 + 8) = v4;
  *(_WORD *)(a1 + 16) = (_WORD)v3;
  return swift_bridgeObjectRetain();
}

uint64_t type metadata accessor for NonNewsArticleViewResignEvent.Model(uint64_t a1)
{
  return sub_1DC4B385C(a1, qword_1F036E808);
}

uint64_t NonNewsArticleViewResignEvent.Model.nonNewsArticleData.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3 = (_QWORD *)(v1 + *(int *)(type metadata accessor for NonNewsArticleViewResignEvent.Model(0) + 24));
  v4 = v3[1];
  v5 = v3[2];
  v6 = v3[3];
  v7 = v3[4];
  v8 = v3[5];
  *a1 = *v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  a1[4] = v7;
  a1[5] = v8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t NonNewsArticleViewResignEvent.Model.orientationData.getter@<X0>(_WORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for NonNewsArticleViewResignEvent.Model(0);
  *a1 = *(_WORD *)(v1 + *(int *)(result + 28));
  return result;
}

__n128 NonNewsArticleViewResignEvent.Model.init(eventData:viewData:nonNewsArticleData:orientationData:)@<Q0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, __int128 *a3@<X2>, __int16 *a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  __int16 v9;
  uint64_t v10;
  uint64_t v11;
  __int16 v12;
  uint64_t v13;
  int *v14;
  uint64_t v15;
  uint64_t v16;
  __n128 result;
  __n128 v18;
  __int128 v19;

  v7 = *a2;
  v8 = a2[1];
  v9 = *((_WORD *)a2 + 8);
  v18 = (__n128)a3[1];
  v19 = *a3;
  v10 = *((_QWORD *)a3 + 4);
  v11 = *((_QWORD *)a3 + 5);
  v12 = *a4;
  v13 = sub_1DC62ABA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(a5, a1, v13);
  v14 = (int *)type metadata accessor for NonNewsArticleViewResignEvent.Model(0);
  v15 = a5 + v14[5];
  *(_QWORD *)v15 = v7;
  *(_QWORD *)(v15 + 8) = v8;
  *(_WORD *)(v15 + 16) = v9;
  v16 = a5 + v14[6];
  result = v18;
  *(_OWORD *)v16 = v19;
  *(__n128 *)(v16 + 16) = v18;
  *(_QWORD *)(v16 + 32) = v10;
  *(_QWORD *)(v16 + 40) = v11;
  *(_WORD *)(a5 + v14[7]) = v12;
  return result;
}

uint64_t sub_1DC5BDD74()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1DC5BDDA8 + 4 * byte_1DC6416A0[*v0]))(0x746144746E657665, 0xE900000000000061);
}

uint64_t sub_1DC5BDDA8()
{
  return 0x6174614477656976;
}

unint64_t sub_1DC5BDDC0()
{
  return 0xD000000000000012;
}

uint64_t sub_1DC5BDDDC()
{
  return 0x7461746E6569726FLL;
}

uint64_t sub_1DC5BDE00()
{
  sub_1DC5BE060();
  return sub_1DC62B604();
}

uint64_t sub_1DC5BDE28()
{
  sub_1DC5BE060();
  return sub_1DC62B610();
}

uint64_t NonNewsArticleViewResignEvent.Model.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int *v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  __int128 *v14;
  __int128 v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  __int128 v21;
  __int128 v22;
  uint64_t v23;
  uint64_t v24;
  char v25;

  v3 = v1;
  sub_1DC5BE440(0, &qword_1F036E700, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v20 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC5BE060();
  sub_1DC62B5F8();
  LOBYTE(v21) = 0;
  sub_1DC62ABA8();
  sub_1DC4B6788(&qword_1EDB0E8A8, MEMORY[0x1E0CF8680]);
  sub_1DC62B4E4();
  if (!v2)
  {
    v10 = (int *)type metadata accessor for NonNewsArticleViewResignEvent.Model(0);
    v11 = (uint64_t *)(v3 + v10[5]);
    v12 = *v11;
    v13 = v11[1];
    LOWORD(v11) = *((_WORD *)v11 + 8);
    *(_QWORD *)&v21 = v12;
    *((_QWORD *)&v21 + 1) = v13;
    LOWORD(v22) = (_WORD)v11;
    v25 = 1;
    sub_1DC4BEDF0();
    sub_1DC62B4E4();
    v14 = (__int128 *)(v3 + v10[6]);
    v15 = *v14;
    v16 = v14[1];
    v18 = *((_QWORD *)v14 + 4);
    v17 = *((_QWORD *)v14 + 5);
    v21 = v15;
    v22 = v16;
    v23 = v18;
    v24 = v17;
    v25 = 2;
    sub_1DC504038();
    sub_1DC62B4E4();
    LOWORD(v21) = *(_WORD *)(v3 + v10[7]);
    v25 = 3;
    sub_1DC4C0058();
    sub_1DC62B4E4();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1DC5BE060()
{
  unint64_t result;

  result = qword_1F036E708;
  if (!qword_1F036E708)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC6418B4, &type metadata for NonNewsArticleViewResignEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036E708);
  }
  return result;
}

uint64_t NonNewsArticleViewResignEvent.Model.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int16 v17;
  char *v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  _QWORD *v29;
  __int128 v30;
  __int128 v31;
  uint64_t v32;
  uint64_t v33;
  char v34;

  v24 = a2;
  v3 = sub_1DC62ABA8();
  v25 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v28 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DC5BE440(0, &qword_1F036E710, MEMORY[0x1E0DED048]);
  v26 = v5;
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v24 - v7;
  v9 = (int *)type metadata accessor for NonNewsArticleViewResignEvent.Model(0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC5BE060();
  v27 = v8;
  v12 = (uint64_t)v29;
  sub_1DC62B5E0();
  if (v12)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v29 = a1;
  v13 = v11;
  v14 = v25;
  LOBYTE(v30) = 0;
  sub_1DC4B6788(&qword_1EDB0E278, MEMORY[0x1E0CF8688]);
  v15 = v26;
  sub_1DC62B454();
  (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v13, v28, v3);
  v34 = 1;
  sub_1DC4BEDAC();
  sub_1DC62B454();
  v16 = *((_QWORD *)&v30 + 1);
  v17 = v31;
  v18 = &v13[v9[5]];
  *(_QWORD *)v18 = v30;
  *((_QWORD *)v18 + 1) = v16;
  *((_WORD *)v18 + 8) = v17;
  v34 = 2;
  sub_1DC503FF0();
  sub_1DC62B454();
  v19 = v31;
  v20 = v32;
  v21 = v33;
  v22 = &v13[v9[6]];
  *(_OWORD *)v22 = v30;
  *((_OWORD *)v22 + 1) = v19;
  *((_QWORD *)v22 + 4) = v20;
  *((_QWORD *)v22 + 5) = v21;
  v34 = 3;
  sub_1DC4C0014();
  sub_1DC62B454();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v27, v15);
  *(_WORD *)v9[7] = v30;
  sub_1DC5BE49C(0, v24);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v29);
  return sub_1DC5BE4E0(0);
}

void sub_1DC5BE440(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1DC5BE060();
    v7 = a3(a1, &type metadata for NonNewsArticleViewResignEvent.Model.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1DC5BE49C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for NonNewsArticleViewResignEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DC5BE4E0(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for NonNewsArticleViewResignEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1DC5BE51C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return NonNewsArticleViewResignEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_1DC5BE530(_QWORD *a1)
{
  return NonNewsArticleViewResignEvent.Model.encode(to:)(a1);
}

uint64_t sub_1DC5BE544@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4B2C68(&qword_1F0369140, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8080], (uint64_t)qword_1F036E6D0, a1);
}

uint64_t sub_1DC5BE568@<X0>(uint64_t a1@<X8>)
{
  return sub_1DC4B2C68(&qword_1F0369148, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF8398], (uint64_t)qword_1F036E6E8, a1);
}

uint64_t getEnumTagSinglePayload for NonNewsArticleViewResignEvent()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC5BE598(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  sub_1DC4B6600();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
    v12 = *(_QWORD *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
    {
      v8 = v11;
      v13 = a3[5];
    }
    else
    {
      sub_1DC4B4B50(0, &qword_1F036AF00, (void (*)(void))sub_1DC503FF0, (void (*)(void))sub_1DC504038);
      v12 = *(_QWORD *)(v14 - 8);
      if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
      {
        v8 = v14;
        v13 = a3[6];
      }
      else
      {
        sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E7C0, (void (*)(void))sub_1DC4C0014, (void (*)(void))sub_1DC4C0058);
        v8 = v15;
        v12 = *(_QWORD *)(v15 - 8);
        v13 = a3[7];
      }
    }
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t storeEnumTagSinglePayload for NonNewsArticleViewResignEvent()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC5BE6C0(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  sub_1DC4B6600();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    sub_1DC4B4B50(0, &qword_1EDB0E850, (void (*)(void))sub_1DC4BEDAC, (void (*)(void))sub_1DC4BEDF0);
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = a4[5];
    }
    else
    {
      sub_1DC4B4B50(0, &qword_1F036AF00, (void (*)(void))sub_1DC503FF0, (void (*)(void))sub_1DC504038);
      v14 = *(_QWORD *)(v16 - 8);
      if (*(_DWORD *)(v14 + 84) == a3)
      {
        v10 = v16;
        v15 = a4[6];
      }
      else
      {
        sub_1DC4B4B50(0, (unint64_t *)&qword_1EDB0E7C0, (void (*)(void))sub_1DC4C0014, (void (*)(void))sub_1DC4C0058);
        v10 = v17;
        v14 = *(_QWORD *)(v17 - 8);
        v15 = a4[7];
      }
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

uint64_t getEnumTagSinglePayload for NonNewsArticleViewResignEvent.Model()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC5BE7F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_1DC62ABA8();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for NonNewsArticleViewResignEvent.Model()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1DC5BE87C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_1DC62ABA8();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  return result;
}

uint64_t sub_1DC5BE8F8()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1DC62ABA8();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for NonNewsArticleViewResignEvent.Model.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1DC5BE9C8 + 4 * byte_1DC6416A9[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1DC5BE9FC + 4 * byte_1DC6416A4[v4]))();
}

uint64_t sub_1DC5BE9FC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC5BEA04(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DC5BEA0CLL);
  return result;
}

uint64_t sub_1DC5BEA18(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DC5BEA20);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1DC5BEA24(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC5BEA2C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for NonNewsArticleViewResignEvent.Model.CodingKeys()
{
  return &type metadata for NonNewsArticleViewResignEvent.Model.CodingKeys;
}

unint64_t sub_1DC5BEA4C()
{
  unint64_t result;

  result = qword_1F036E848;
  if (!qword_1F036E848)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC64188C, &type metadata for NonNewsArticleViewResignEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036E848);
  }
  return result;
}

unint64_t sub_1DC5BEA94()
{
  unint64_t result;

  result = qword_1F036E850;
  if (!qword_1F036E850)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC6417FC, &type metadata for NonNewsArticleViewResignEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036E850);
  }
  return result;
}

unint64_t sub_1DC5BEADC()
{
  unint64_t result;

  result = qword_1F036E858;
  if (!qword_1F036E858)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC641824, &type metadata for NonNewsArticleViewResignEvent.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036E858);
  }
  return result;
}

uint64_t PurchaseData.purchaseID.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PurchaseData.purchaseID.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*PurchaseData.purchaseID.modify())()
{
  return nullsub_1;
}

void PurchaseData.purchaseType.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 16);
}

_BYTE *PurchaseData.purchaseType.setter(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 16) = *result;
  return result;
}

uint64_t (*PurchaseData.purchaseType.modify())()
{
  return nullsub_1;
}

StocksAnalytics::PurchaseData __swiftcall PurchaseData.init(purchaseID:purchaseType:)(Swift::String purchaseID, StocksAnalytics::PurchaseType purchaseType)
{
  uint64_t v2;
  char v3;
  StocksAnalytics::PurchaseData result;

  v3 = *(_BYTE *)purchaseType;
  *(Swift::String *)v2 = purchaseID;
  *(_BYTE *)(v2 + 16) = v3;
  result.purchaseID = purchaseID;
  result.purchaseType = purchaseType;
  return result;
}

uint64_t sub_1DC5BEBC8()
{
  return 0x6573616863727570;
}

uint64_t sub_1DC5BEBFC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1DC5BF26C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DC5BEC20()
{
  sub_1DC5BEDB8();
  return sub_1DC62B604();
}

uint64_t sub_1DC5BEC48()
{
  sub_1DC5BEDB8();
  return sub_1DC62B610();
}

uint64_t PurchaseData.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v10[2];
  int v11;
  char v12;
  char v13;
  char v14;

  sub_1DC5BEFE8(0, &qword_1EDB119F8, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)v10 - v6;
  v11 = *(unsigned __int8 *)(v1 + 16);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC5BEDB8();
  sub_1DC62B5F8();
  v14 = 0;
  v8 = v10[1];
  sub_1DC62B4B4();
  if (!v8)
  {
    v13 = v11;
    v12 = 1;
    sub_1DC5BEDFC();
    sub_1DC62B4E4();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_1DC5BEDB8()
{
  unint64_t result;

  result = qword_1EDB0EE70;
  if (!qword_1EDB0EE70)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC641A78, &type metadata for PurchaseData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB0EE70);
  }
  return result;
}

unint64_t sub_1DC5BEDFC()
{
  unint64_t result;

  result = qword_1EDB0EE98;
  if (!qword_1EDB0EE98)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for PurchaseType, &type metadata for PurchaseType);
    atomic_store(result, (unint64_t *)&qword_1EDB0EE98);
  }
  return result;
}

uint64_t PurchaseData.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v15;
  char v16;
  char v17;
  char v18;

  sub_1DC5BEFE8(0, &qword_1F036E860, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v15 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC5BEDB8();
  sub_1DC62B5E0();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v18 = 0;
  v10 = sub_1DC62B424();
  v12 = v11;
  v16 = 1;
  sub_1DC5BF044();
  swift_bridgeObjectRetain();
  sub_1DC62B454();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  v13 = v17;
  *(_QWORD *)a2 = v10;
  *(_QWORD *)(a2 + 8) = v12;
  *(_BYTE *)(a2 + 16) = v13;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return swift_bridgeObjectRelease();
}

void sub_1DC5BEFE8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1DC5BEDB8();
    v7 = a3(a1, &type metadata for PurchaseData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1DC5BF044()
{
  unint64_t result;

  result = qword_1F036E868;
  if (!qword_1F036E868)
  {
    result = MEMORY[0x1DF0CC744](&protocol conformance descriptor for PurchaseType, &type metadata for PurchaseType);
    atomic_store(result, (unint64_t *)&qword_1F036E868);
  }
  return result;
}

uint64_t sub_1DC5BF090@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return PurchaseData.init(from:)(a1, a2);
}

uint64_t sub_1DC5BF0A4(_QWORD *a1)
{
  return PurchaseData.encode(to:)(a1);
}

ValueMetadata *type metadata accessor for PurchaseData()
{
  return &type metadata for PurchaseData;
}

uint64_t storeEnumTagSinglePayload for PurchaseData.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1DC5BF114 + 4 * byte_1DC641909[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1DC5BF148 + 4 * byte_1DC641904[v4]))();
}

uint64_t sub_1DC5BF148(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC5BF150(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DC5BF158);
  return result;
}

uint64_t sub_1DC5BF164(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DC5BF16CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1DC5BF170(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DC5BF178(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PurchaseData.CodingKeys()
{
  return &type metadata for PurchaseData.CodingKeys;
}

unint64_t sub_1DC5BF198()
{
  unint64_t result;

  result = qword_1F036E870;
  if (!qword_1F036E870)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC641A50, &type metadata for PurchaseData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036E870);
  }
  return result;
}

unint64_t sub_1DC5BF1E0()
{
  unint64_t result;

  result = qword_1EDB0EE80;
  if (!qword_1EDB0EE80)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC6419C0, &type metadata for PurchaseData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB0EE80);
  }
  return result;
}

unint64_t sub_1DC5BF228()
{
  unint64_t result;

  result = qword_1EDB0EE78;
  if (!qword_1EDB0EE78)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC6419E8, &type metadata for PurchaseData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB0EE78);
  }
  return result;
}

uint64_t sub_1DC5BF26C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6573616863727570 && a2 == 0xEA00000000004449;
  if (v2 || (sub_1DC62B520() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6573616863727570 && a2 == 0xEC00000065707954)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1DC62B520();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t FeedPositionData.position.getter()
{
  unsigned int *v0;

  return *v0;
}

uint64_t FeedPositionData.position.setter(uint64_t result)
{
  _DWORD *v1;

  *v1 = result;
  return result;
}

uint64_t (*FeedPositionData.position.modify())()
{
  return nullsub_1;
}

uint64_t FeedPositionData.init(position:)@<X0>(uint64_t result@<X0>, _DWORD *a2@<X8>)
{
  *a2 = result;
  return result;
}

uint64_t sub_1DC5BF3A0()
{
  sub_1DC5BF4E0();
  return sub_1DC62B604();
}

uint64_t sub_1DC5BF3C8()
{
  sub_1DC5BF4E0();
  return sub_1DC62B610();
}

uint64_t FeedPositionData.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  sub_1DC5BF644(0, &qword_1EDB11A40, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC5BF4E0();
  sub_1DC62B5F8();
  sub_1DC62B4F0();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_1DC5BF4E0()
{
  unint64_t result;

  result = qword_1EDB0F548;
  if (!qword_1EDB0F548)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC641C44, &type metadata for FeedPositionData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB0F548);
  }
  return result;
}

uint64_t FeedPositionData.init(from:)@<X0>(_QWORD *a1@<X0>, _DWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int v10;
  uint64_t v12;

  sub_1DC5BF644(0, &qword_1EDB12A20, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v12 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC5BF4E0();
  sub_1DC62B5E0();
  if (!v2)
  {
    v10 = sub_1DC62B460();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *a2 = v10;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1DC5BF644(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1DC5BF4E0();
    v7 = a3(a1, &type metadata for FeedPositionData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1DC5BF6A8@<X0>(_QWORD *a1@<X0>, _DWORD *a2@<X8>)
{
  return FeedPositionData.init(from:)(a1, a2);
}

uint64_t sub_1DC5BF6BC(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  sub_1DC5BF644(0, &qword_1EDB11A40, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC5BF4E0();
  sub_1DC62B5F8();
  sub_1DC62B4F0();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

ValueMetadata *type metadata accessor for FeedPositionData()
{
  return &type metadata for FeedPositionData;
}

uint64_t storeEnumTagSinglePayload for FeedPositionData.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1DC5BF7FC + 4 * byte_1DC641AD0[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1DC5BF81C + 4 * byte_1DC641AD5[v4]))();
}

_BYTE *sub_1DC5BF7FC(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1DC5BF81C(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1DC5BF824(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1DC5BF82C(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1DC5BF834(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1DC5BF83C(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for FeedPositionData.CodingKeys()
{
  return &type metadata for FeedPositionData.CodingKeys;
}

unint64_t sub_1DC5BF85C()
{
  unint64_t result;

  result = qword_1F036E878;
  if (!qword_1F036E878)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC641C1C, &type metadata for FeedPositionData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F036E878);
  }
  return result;
}

unint64_t sub_1DC5BF8A4()
{
  unint64_t result;

  result = qword_1EDB0F558;
  if (!qword_1EDB0F558)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC641B8C, &type metadata for FeedPositionData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB0F558);
  }
  return result;
}

unint64_t sub_1DC5BF8EC()
{
  unint64_t result;

  result = qword_1EDB0F550;
  if (!qword_1EDB0F550)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC641BB4, &type metadata for FeedPositionData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB0F550);
  }
  return result;
}

double ArticleScienceData.newsComputedGlobalScoreCoefficient.getter()
{
  uint64_t v0;

  return *(double *)v0;
}

void ArticleScienceData.newsComputedGlobalScoreCoefficient.setter(double a1)
{
  double *v1;

  *v1 = a1;
}

uint64_t (*ArticleScienceData.newsComputedGlobalScoreCoefficient.modify())()
{
  return nullsub_1;
}

double ArticleScienceData.newsUserFeedbackScore.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 8);
}

void ArticleScienceData.newsUserFeedbackScore.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 8) = a1;
}

uint64_t (*ArticleScienceData.newsUserFeedbackScore.modify())()
{
  return nullsub_1;
}

double ArticleScienceData.newsAgedPersonalizationScore.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 16);
}

void ArticleScienceData.newsAgedPersonalizationScore.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 16) = a1;
}

uint64_t (*ArticleScienceData.newsAgedPersonalizationScore.modify())()
{
  return nullsub_1;
}

double ArticleScienceData.newsDiversifiedPersonalizationScore.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 24);
}

void ArticleScienceData.newsDiversifiedPersonalizationScore.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 24) = a1;
}

uint64_t (*ArticleScienceData.newsDiversifiedPersonalizationScore.modify())()
{
  return nullsub_1;
}

double ArticleScienceData.newsFeatureCtr.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 32);
}

void ArticleScienceData.newsFeatureCtr.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 32) = a1;
}

uint64_t (*ArticleScienceData.newsFeatureCtr.modify())()
{
  return nullsub_1;
}

double ArticleScienceData.newsPersonalizationScore.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 40);
}

void ArticleScienceData.newsPersonalizationScore.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 40) = a1;
}

uint64_t (*ArticleScienceData.newsPersonalizationScore.modify())()
{
  return nullsub_1;
}

double ArticleScienceData.newsPaidNonPaidSubscriptionCtr.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 48);
}

void ArticleScienceData.newsPaidNonPaidSubscriptionCtr.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 48) = a1;
}

uint64_t (*ArticleScienceData.newsPaidNonPaidSubscriptionCtr.modify())()
{
  return nullsub_1;
}

double ArticleScienceData.newsSubscribedChannelCtr.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 56);
}

void ArticleScienceData.newsSubscribedChannelCtr.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 56) = a1;
}

uint64_t (*ArticleScienceData.newsSubscribedChannelCtr.modify())()
{
  return nullsub_1;
}

double ArticleScienceData.newsAutoSubscribeCtr.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 64);
}

void ArticleScienceData.newsAutoSubscribeCtr.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 64) = a1;
}

uint64_t (*ArticleScienceData.newsAutoSubscribeCtr.modify())()
{
  return nullsub_1;
}

double ArticleScienceData.newsFirstPassPersonalizationScore.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 72);
}

void ArticleScienceData.newsFirstPassPersonalizationScore.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 72) = a1;
}

uint64_t (*ArticleScienceData.newsFirstPassPersonalizationScore.modify())()
{
  return nullsub_1;
}

uint64_t ArticleScienceData.stocksFractionalCohortMembership.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t ArticleScienceData.stocksFractionalCohortMembership.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 80) = a1;
  return result;
}

uint64_t (*ArticleScienceData.stocksFractionalCohortMembership.modify())()
{
  return nullsub_1;
}

double ArticleScienceData.stocksNewsPersonalizationScore.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 88);
}

void ArticleScienceData.stocksNewsPersonalizationScore.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 88) = a1;
}

uint64_t (*ArticleScienceData.stocksNewsPersonalizationScore.modify())()
{
  return nullsub_1;
}

double ArticleScienceData.stocksGlobalScore.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 96);
}

void ArticleScienceData.stocksGlobalScore.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 96) = a1;
}

uint64_t (*ArticleScienceData.stocksGlobalScore.modify())()
{
  return nullsub_1;
}

double ArticleScienceData.stocksTabiScore.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 104);
}

void ArticleScienceData.stocksTabiScore.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 104) = a1;
}

uint64_t (*ArticleScienceData.stocksTabiScore.modify())()
{
  return nullsub_1;
}

double ArticleScienceData.stocksRealTimeUserFeedbackScore.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 112);
}

void ArticleScienceData.stocksRealTimeUserFeedbackScore.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 112) = a1;
}

uint64_t (*ArticleScienceData.stocksRealTimeUserFeedbackScore.modify())()
{
  return nullsub_1;
}

uint64_t ArticleScienceData.stocksSubscriptionCount.getter()
{
  uint64_t v0;

  return *(unsigned int *)(v0 + 120);
}

uint64_t ArticleScienceData.stocksSubscriptionCount.setter(uint64_t result)
{
  uint64_t v1;

  *(_DWORD *)(v1 + 120) = result;
  return result;
}

uint64_t (*ArticleScienceData.stocksSubscriptionCount.modify())()
{
  return nullsub_1;
}

double ArticleScienceData.stocksImportanceScore.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 128);
}

void ArticleScienceData.stocksImportanceScore.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 128) = a1;
}

uint64_t (*ArticleScienceData.stocksImportanceScore.modify())()
{
  return nullsub_1;
}

double ArticleScienceData.stocksPublisherPrior.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 136);
}

void ArticleScienceData.stocksPublisherPrior.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 136) = a1;
}

uint64_t (*ArticleScienceData.stocksPublisherPrior.modify())()
{
  return nullsub_1;
}

uint64_t ArticleScienceData.stocksHasBeenRead.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 144);
}

uint64_t ArticleScienceData.stocksHasBeenRead.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 144) = result;
  return result;
}

uint64_t (*ArticleScienceData.stocksHasBeenRead.modify())()
{
  return nullsub_1;
}

uint64_t ArticleScienceData.stocksChannelDiversityRank.getter()
{
  uint64_t v0;

  return *(unsigned int *)(v0 + 148);
}

uint64_t ArticleScienceData.stocksChannelDiversityRank.setter(uint64_t result)
{
  uint64_t v1;

  *(_DWORD *)(v1 + 148) = result;
  return result;
}

uint64_t (*ArticleScienceData.stocksChannelDiversityRank.modify())()
{
  return nullsub_1;
}

uint64_t ArticleScienceData.stocksImportanceScoreRank.getter()
{
  uint64_t v0;

  return *(unsigned int *)(v0 + 152);
}

uint64_t ArticleScienceData.stocksImportanceScoreRank.setter(uint64_t result)
{
  uint64_t v1;

  *(_DWORD *)(v1 + 152) = result;
  return result;
}

uint64_t (*ArticleScienceData.stocksImportanceScoreRank.modify())()
{
  return nullsub_1;
}

double ArticleScienceData.stocksPersonalizedScore.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 160);
}

void ArticleScienceData.stocksPersonalizedScore.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 160) = a1;
}

uint64_t (*ArticleScienceData.stocksPersonalizedScore.modify())()
{
  return nullsub_1;
}

double ArticleScienceData.stocksTimeDecayedScore.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 168);
}

void ArticleScienceData.stocksTimeDecayedScore.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 168) = a1;
}

uint64_t (*ArticleScienceData.stocksTimeDecayedScore.modify())()
{
  return nullsub_1;
}

double ArticleScienceData.stocksDiversifiedScore.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 176);
}

void ArticleScienceData.stocksDiversifiedScore.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 176) = a1;
}

uint64_t (*ArticleScienceData.stocksDiversifiedScore.modify())()
{
  return nullsub_1;
}

double ArticleScienceData.stocksArticleHalfLife.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 184);
}

void ArticleScienceData.stocksArticleHalfLife.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 184) = a1;
}

uint64_t (*ArticleScienceData.stocksArticleHalfLife.modify())()
{
  return nullsub_1;
}

double ArticleScienceData.stocksArticleAge.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 192);
}

void ArticleScienceData.stocksArticleAge.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 192) = a1;
}

uint64_t (*ArticleScienceData.stocksArticleAge.modify())()
{
  return nullsub_1;
}

uint64_t ArticleScienceData.init(newsComputedGlobalScoreCoefficient:newsUserFeedbackScore:newsAgedPersonalizationScore:newsDiversifiedPersonalizationScore:newsFeatureCtr:newsPersonalizationScore:newsPaidNonPaidSubscriptionCtr:newsSubscribedChannelCtr:newsAutoSubscribeCtr:newsFirstPassPersonalizationScore:stocksFractionalCohortMembership:stocksNewsPersonalizationScore:stocksGlobalScore:stocksTabiScore:stocksRealTimeUserFeedbackScore:stocksSubscriptionCount:stocksImportanceScore:stocksPublisherPrior:stocksHasBeenRead:stocksChannelDiversityRank:stocksImportanceScoreRank:stocksPersonalizedScore:stocksTimeDecayedScore:stocksDiversifiedScore:stocksArticleHalfLife:stocksArticleAge:)@<X0>(uint64_t result@<X0>, int a2@<W1>, char a3@<W2>, int a4@<W3>, int a5@<W4>, uint64_t a6@<X8>, double a7@<D0>, double a8@<D1>, double a9@<D2>, double a10@<D3>, double a11@<D4>, double a12@<D5>, double a13@<D6>, double a14@<D7>, uint64_t a15, uint64_t a16, __int128 a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,__int128 a22,__int128 a23,uint64_t a24)
{
  *(double *)a6 = a7;
  *(double *)(a6 + 8) = a8;
  *(double *)(a6 + 16) = a9;
  *(double *)(a6 + 24) = a10;
  *(double *)(a6 + 32) = a11;
  *(double *)(a6 + 40) = a12;
  *(double *)(a6 + 48) = a13;
  *(double *)(a6 + 56) = a14;
  *(_QWORD *)(a6 + 64) = a15;
  *(_QWORD *)(a6 + 72) = a16;
  *(_QWORD *)(a6 + 80) = result;
  *(_OWORD *)(a6 + 88) = a17;
  *(_QWORD *)(a6 + 104) = a18;
  *(_QWORD *)(a6 + 112) = a19;
  *(_DWORD *)(a6 + 120) = a2;
  *(_QWORD *)(a6 + 128) = a20;
  *(_QWORD *)(a6 + 136) = a21;
  *(_BYTE *)(a6 + 144) = a3;
  *(_DWORD *)(a6 + 148) = a4;
  *(_DWORD *)(a6 + 152) = a5;
  *(_OWORD *)(a6 + 160) = a22;
  *(_OWORD *)(a6 + 176) = a23;
  *(_QWORD *)(a6 + 192) = a24;
  return result;
}

uint64_t sub_1DC5BFCE4(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_1DC5BFD20 + 4 * byte_1DC641CA0[a1]))(0xD000000000000022, 0x80000001DC64D680);
}

unint64_t sub_1DC5BFD20()
{
  return 0xD000000000000015;
}

void sub_1DC5BFECC()
{
  JUMPOUT(0x1DC5BFED8);
}

uint64_t sub_1DC5BFEE4()
{
  unsigned __int8 *v0;

  return sub_1DC5BFCE4(*v0);
}

uint64_t sub_1DC5BFEEC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1DC5C148C(a1, a2);
  *a3 = result;
  return result;
}

void sub_1DC5BFF10(_BYTE *a1@<X8>)
{
  *a1 = 26;
}

uint64_t sub_1DC5BFF1C()
{
  sub_1DC5C056C();
  return sub_1DC62B604();
}

uint64_t sub_1DC5BFF44()
{
  sub_1DC5C056C();
  return sub_1DC62B610();
}

uint64_t ArticleScienceData.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  _DWORD v17[4];
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  uint64_t v35;

  sub_1DC5C0E38(0, &qword_1EDB11A68, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)v17 - v6;
  v8 = *(_QWORD *)(v1 + 8);
  v31 = *(_QWORD *)(v1 + 16);
  v32 = v8;
  v9 = *(_QWORD *)(v1 + 24);
  v27 = *(_QWORD *)(v1 + 32);
  v28 = v9;
  v10 = *(_QWORD *)(v1 + 40);
  v25 = *(_QWORD *)(v1 + 48);
  v26 = v10;
  v11 = *(_QWORD *)(v1 + 56);
  v23 = *(_QWORD *)(v1 + 64);
  v24 = v11;
  v22 = *(_QWORD *)(v1 + 72);
  v30 = *(_QWORD *)(v1 + 80);
  v21 = *(_QWORD *)(v1 + 88);
  v20 = *(_QWORD *)(v1 + 96);
  v19 = *(_QWORD *)(v1 + 104);
  v18 = *(_QWORD *)(v1 + 112);
  v29 = *(_DWORD *)(v1 + 120);
  v17[3] = *(unsigned __int8 *)(v1 + 144);
  v12 = *(_DWORD *)(v1 + 148);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC5C056C();
  sub_1DC62B5F8();
  LOBYTE(v35) = 0;
  v13 = v4;
  v14 = v33;
  sub_1DC62B4CC();
  if (v14)
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  v16 = v30;
  LODWORD(v33) = v12;
  LOBYTE(v35) = 1;
  sub_1DC62B4CC();
  LOBYTE(v35) = 2;
  sub_1DC62B4CC();
  LOBYTE(v35) = 3;
  sub_1DC62B4CC();
  LOBYTE(v35) = 4;
  sub_1DC62B4CC();
  LOBYTE(v35) = 5;
  sub_1DC62B4CC();
  LOBYTE(v35) = 6;
  sub_1DC62B4CC();
  LOBYTE(v35) = 7;
  sub_1DC62B4CC();
  LOBYTE(v35) = 8;
  sub_1DC62B4CC();
  LOBYTE(v35) = 9;
  sub_1DC62B4CC();
  v35 = v16;
  v34 = 10;
  sub_1DC5C05B0();
  sub_1DC5C0E94(&qword_1EDB11878, (uint64_t (*)(void))sub_1DC5A0894, MEMORY[0x1E0DEAF10]);
  sub_1DC62B4E4();
  LOBYTE(v35) = 11;
  sub_1DC62B4CC();
  LOBYTE(v35) = 12;
  sub_1DC62B4CC();
  LOBYTE(v35) = 13;
  sub_1DC62B4CC();
  LOBYTE(v35) = 14;
  sub_1DC62B4CC();
  LOBYTE(v35) = 15;
  sub_1DC62B4F0();
  LOBYTE(v35) = 16;
  sub_1DC62B4CC();
  LOBYTE(v35) = 17;
  sub_1DC62B4CC();
  LOBYTE(v35) = 18;
  sub_1DC62B4C0();
  LOBYTE(v35) = 19;
  sub_1DC62B4F0();
  LOBYTE(v35) = 20;
  sub_1DC62B4F0();
  LOBYTE(v35) = 21;
  sub_1DC62B4CC();
  LOBYTE(v35) = 22;
  sub_1DC62B4CC();
  LOBYTE(v35) = 23;
  sub_1DC62B4CC();
  LOBYTE(v35) = 24;
  sub_1DC62B4CC();
  LOBYTE(v35) = 25;
  sub_1DC62B4CC();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v13);
}

unint64_t sub_1DC5C056C()
{
  unint64_t result;

  result = qword_1EDB0FC38;
  if (!qword_1EDB0FC38)
  {
    result = MEMORY[0x1DF0CC744](&unk_1DC641E98, &type metadata for ArticleScienceData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB0FC38);
  }
  return result;
}

void sub_1DC5C05B0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EDB11870)
  {
    v0 = sub_1DC62B16C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EDB11870);
  }
}

uint64_t ArticleScienceData.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  int v47;
  int v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  int v57;
  int v58;
  int v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  __int16 v67;
  char v68;
  _QWORD v69[15];
  int v70;
  uint64_t v71;
  uint64_t v72;
  char v73;
  __int16 v74;
  char v75;
  int v76;
  int v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char v83;
  __int16 v84;
  char v85;
  uint64_t v86;

  sub_1DC5C0E38(0, &qword_1EDB12A28, MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v52 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DC5C056C();
  sub_1DC62B5E0();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  LOBYTE(v69[0]) = 0;
  sub_1DC62B43C();
  v11 = v10;
  LOBYTE(v69[0]) = 1;
  sub_1DC62B43C();
  v13 = v12;
  LOBYTE(v69[0]) = 2;
  sub_1DC62B43C();
  v15 = v14;
  LOBYTE(v69[0]) = 3;
  sub_1DC62B43C();
  v17 = v16;
  LOBYTE(v69[0]) = 4;
  sub_1DC62B43C();
  v19 = v18;
  LOBYTE(v69[0]) = 5;
  sub_1DC62B43C();
  v21 = v20;
  LOBYTE(v69[0]) = 6;
  sub_1DC62B43C();
  v23 = v22;
  LOBYTE(v69[0]) = 7;
  sub_1DC62B43C();
  v86 = v24;
  LOBYTE(v69[0]) = 8;
  sub_1DC62B43C();
  v26 = v25;
  LOBYTE(v69[0]) = 9;
  sub_1DC62B43C();
  v66 = v27;
  sub_1DC5C05B0();
  LOBYTE(v67) = 10;
  sub_1DC5C0E94(&qword_1EDB12A30, (uint64_t (*)(void))sub_1DC5A084C, MEMORY[0x1E0DEAF40]);
  sub_1DC62B454();
  v28 = v69[0];
  LOBYTE(v69[0]) = 11;
  swift_bridgeObjectRetain();
  sub_1DC62B43C();
  v65 = v29;
  LOBYTE(v69[0]) = 12;
  sub_1DC62B43C();
  v64 = v30;
  LOBYTE(v69[0]) = 13;
  sub_1DC62B43C();
  v63 = v31;
  LOBYTE(v69[0]) = 14;
  sub_1DC62B43C();
  v62 = v32;
  LOBYTE(v69[0]) = 15;
  v33 = sub_1DC62B460();
  LOBYTE(v69[0]) = 16;
  sub_1DC62B43C();
  v61 = v34;
  LOBYTE(v69[0]) = 17;
  sub_1DC62B43C();
  v60 = v35;
  LOBYTE(v69[0]) = 18;
  v59 = sub_1DC62B430();
  LOBYTE(v69[0]) = 19;
  v58 = sub_1DC62B460();
  LOBYTE(v69[0]) = 20;
  v57 = sub_1DC62B460();
  LOBYTE(v69[0]) = 21;
  sub_1DC62B43C();
  v56 = v36;
  LOBYTE(v69[0]) = 22;
  sub_1DC62B43C();
  v55 = v37;
  LOBYTE(v69[0]) = 23;
  sub_1DC62B43C();
  v54 = v38;
  LOBYTE(v69[0]) = 24;
  sub_1DC62B43C();
  v53 = v39;
  v83 = 25;
  sub_1DC62B43C();
  v52 = v40;
  v59 &= 1u;
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  *(_QWORD *)a2 = v11;
  *(_QWORD *)(a2 + 8) = v13;
  *(_QWORD *)(a2 + 16) = v15;
  *(_QWORD *)(a2 + 24) = v17;
  *(_QWORD *)(a2 + 32) = v19;
  *(_QWORD *)(a2 + 40) = v21;
  v41 = v86;
  *(_QWORD *)(a2 + 48) = v23;
  *(_QWORD *)(a2 + 56) = v41;
  v42 = v66;
  *(_QWORD *)(a2 + 64) = v26;
  *(_QWORD *)(a2 + 72) = v42;
  *(_QWORD *)(a2 + 80) = v28;
  v43 = v64;
  *(_QWORD *)(a2 + 88) = v65;
  *(_QWORD *)(a2 + 96) = v43;
  v44 = v62;
  *(_QWORD *)(a2 + 104) = v63;
  *(_QWORD *)(a2 + 112) = v44;
  *(_DWORD *)(a2 + 120) = v33;
  v45 = v60;
  *(_QWORD *)(a2 + 128) = v61;
  *(_QWORD *)(a2 + 136) = v45;
  v46 = v59;
  *(_BYTE *)(a2 + 144) = v59;
  *(_WORD *)(a2 + 145) = v67;
  *(_BYTE *)(a2 + 147) = v68;
  v47 = v58;
  v48 = v57;
  *(_DWORD *)(a2 + 148) = v58;
  *(_DWORD *)(a2 + 152) = v48;
  v49 = v55;
  *(_QWORD *)(a2 + 160) = v56;
  *(_QWORD *)(a2 + 168) = v49;
  v50 = v53;
  *(_QWORD *)(a2 + 176) = v54;
  *(_QWORD *)(a2 + 184) = v50;
  *(_QWORD *)(a2 + 192) = v52;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v69[0] = v11;
  v69[1] = v13;
  v69[2] = v15;
  v69[3] = v17;
  v69[4] = v19;
  v69[5] = v21;
  v69[6] = v23;
  v69[7] = v86;
  v69[8] = v26;
  v69[9] = v66;
  v69[10] = v28;
  v69[11] = v65;
  v69[12] = v64;
  v69[13] = v63;
  v69[14] = v62;
  v70 = v33;
  v71 = v61;
  v72 = v60;
  v73 = v46;
  v74 = v84;
  v75 = v85;
  v76 = v47;
  v77 = v48;
  v78 = v56;
  v79 = v55;
  v80 = v54;
  v81 = v53;
  v82 = v52;
  return sub_1DC4F6710((uint64_t)v69);
}

void sub_1DC5C0E38(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1DC5C056C();
    v7 = a3(a1, &type metadata for ArticleScienceData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1DC5C0E94(unint64_t *a1, uint64_t (*a2)(void), uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  result = *a1;
  if (!result)
  {
    sub_1DC5C05B0();
    v8 = v7;
    v9 = a2();
    result = MEMORY[0x1DF0CC744](a3, v8, &v9);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1DC5C0F00@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return ArticleScienceData.init(from:)(a1, a2);
}

uint64_t sub_1DC5C0F14(_QWORD *a1)
{
  return ArticleScienceData.encode(to:)(a1);
}

uint64_t destroy for ArticleScienceData()
{
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ArticleScienceData(uint64_t a1, uint64_t a2)
{
  __int128 v3;
  __int128 v4;
  __int128 v5;

  v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v3;
  v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(_DWORD *)(a1 + 120) = *(_DWORD *)(a2 + 120);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_BYTE *)(a1 + 144) = *(_BYTE *)(a2 + 144);
  *(_QWORD *)(a1 + 148) = *(_QWORD *)(a2 + 148);
  v5 = *(_OWORD *)(a2 + 176);
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
  *(_OWORD *)(a1 + 176) = v5;
  *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ArticleScienceData(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_DWORD *)(a1 + 120) = *(_DWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  *(_BYTE *)(a1 + 144) = *(_BYTE *)(a2 + 144);
  *(_DWORD *)(a1 + 148) = *(_DWORD *)(a2 + 148);
  *(_DWORD *)(a1 + 152) = *(_DWORD *)(a2 + 152);
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
  *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
  *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
  *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
  return a1;
}

__n128 __swift_memcpy200_8(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __n128 result;
  __int128 v9;
  __int128 v10;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v2 = *(_OWORD *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(_OWORD *)(a1 + 16) = v2;
  *(_OWORD *)(a1 + 32) = v3;
  v5 = *(_OWORD *)(a2 + 80);
  v6 = *(_OWORD *)(a2 + 96);
  v7 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 128) = v7;
  *(_OWORD *)(a1 + 80) = v5;
  *(_OWORD *)(a1 + 96) = v6;
  result = *(__n128 *)(a2 + 144);
  v9 = *(_OWORD *)(a2 + 160);
  v10 = *(_OWORD *)(a2 + 176);
  *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
  *(_OWORD *)(a1 + 160) = v9;
  *(_OWORD *)(a1 + 176) = v10;
  *(__n128 *)(a1 + 144) = result;
  return result;
}

uint64_t assignWithTake for ArticleScienceData(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  __int128 v5;
  __int128 v6;

  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  v5 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v5;
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(_DWORD *)(a1 + 120) = *(_DWORD *)(a2 + 120);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_BYTE *)(a1 + 144) = *(_BYTE *)(a2 + 144);
  *(_QWORD *)(a1 + 148) = *(_QWORD *)(a2 + 148);
  v6 = *(_OWORD *)(a2 + 176);
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
  *(_OWORD *)(a1 + 176) = v6;
  *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
  return a1;
}

uint64_t getEnumTagSinglePayload for ArticleScienceData(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 200))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 80);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ArticleScienceData(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 200) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 80) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 200) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ArticleScienceData()
{
  return &type metadata for ArticleScienceData;
}

uint64_t getEnumTagSinglePayload for ArticleScienceData.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xE7)
    goto LABEL_17;
  if (a2 + 25 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 25) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 25;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 25;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 25;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0x1A;
  v8 = v6 - 26;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

