uint64_t EventVirtualConferenceModelObject.source.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 64) = result;
  return result;
}

uint64_t (*EventVirtualConferenceModelObject.source.modify())()
{
  return nullsub_1;
}

uint64_t EventVirtualConferenceModelObject.firstPhoneNumber.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for EventVirtualConferenceModelObject(0);
  return sub_1B8ADE850(v1 + *(int *)(v3 + 40), a1, &qword_1ED1B3020);
}

uint64_t EventVirtualConferenceModelObject.firstPhoneNumber.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for EventVirtualConferenceModelObject(0) + 40);
  return sub_1B8AE3654(a1, v3);
}

uint64_t (*EventVirtualConferenceModelObject.firstPhoneNumber.modify())(_QWORD)
{
  type metadata accessor for EventVirtualConferenceModelObject(0);
  return nullsub_1;
}

uint64_t EventVirtualConferenceModelObject.urlWithAllowedScheme.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for EventVirtualConferenceModelObject(0);
  return sub_1B8ADE850(v1 + *(int *)(v3 + 44), a1, &qword_1ED1B3020);
}

uint64_t EventVirtualConferenceModelObject.urlWithAllowedScheme.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for EventVirtualConferenceModelObject(0) + 44);
  return sub_1B8AE3654(a1, v3);
}

uint64_t (*EventVirtualConferenceModelObject.urlWithAllowedScheme.modify())(_QWORD)
{
  type metadata accessor for EventVirtualConferenceModelObject(0);
  return nullsub_1;
}

uint64_t EventVirtualConferenceModelObject.init(_:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  _QWORD *v63;
  uint64_t v64;
  char *v65;
  void (*v66)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v67;
  uint64_t v68;
  char *v69;
  _QWORD v70[3];
  uint64_t v71;
  uint64_t v72;
  _BYTE v73[40];
  uint64_t v74;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1B3020);
  MEMORY[0x1E0C80A78](v4);
  v69 = (char *)&v60 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for EventVirtualConferenceJoinMethodModelObject(0);
  v68 = *(_QWORD *)(v6 - 8);
  v7 = MEMORY[0x1E0C80A78](v6);
  v9 = (uint64_t *)((char *)&v60 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v60 - v10;
  v12 = type metadata accessor for EventVirtualConferenceModelObject(0);
  v13 = MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v60 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  *((_QWORD *)v15 + 6) = 0;
  *((_OWORD *)v15 + 1) = 0u;
  *((_OWORD *)v15 + 2) = 0u;
  *(_OWORD *)v15 = 0u;
  v16 = (uint64_t)&v15[*(int *)(v13 + 40)];
  v17 = sub_1B8B9B054();
  v18 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56);
  v64 = v16;
  v18(v16, 1, 1, v17);
  v65 = &v15[*(int *)(v12 + 44)];
  v66 = v18;
  v67 = v17;
  ((void (*)(void))v18)();
  v19 = a1[3];
  v20 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v19);
  *(_QWORD *)v15 = (*(uint64_t (**)(uint64_t, uint64_t))(v20 + 24))(v19, v20);
  *((_QWORD *)v15 + 1) = v21;
  v22 = a1[3];
  v23 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v22);
  v24 = (*(uint64_t (**)(uint64_t, uint64_t))(v23 + 32))(v22, v23);
  if (v24)
  {
    v62 = a2;
    v63 = a1;
    swift_getAssociatedTypeWitness();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1BCA30);
    v25 = sub_1B8B9C6EC();
    swift_bridgeObjectRelease();
    v26 = *(_QWORD *)(v25 + 16);
    if (v26)
    {
      v61 = v15;
      v74 = MEMORY[0x1E0DEE9D8];
      sub_1B8B374A0(0, v26, 0);
      v60 = v25;
      v27 = v25 + 32;
      v28 = (uint64_t)v69;
      do
      {
        sub_1B8B0FC88(v27, (uint64_t)v73);
        sub_1B8B0FC88((uint64_t)v73, (uint64_t)v70);
        *v9 = 0;
        v9[1] = 0;
        v29 = (uint64_t)v9 + *(int *)(v6 + 20);
        v66(v29, 1, 1, v67);
        v30 = v71;
        v31 = v72;
        __swift_project_boxed_opaque_existential_1(v70, v71);
        *v9 = (*(uint64_t (**)(uint64_t, uint64_t))(v31 + 8))(v30, v31);
        v9[1] = v32;
        v33 = v71;
        v34 = v72;
        __swift_project_boxed_opaque_existential_1(v70, v71);
        (*(void (**)(uint64_t, uint64_t))(v34 + 16))(v33, v34);
        sub_1B8AE3654(v28, v29);
        v35 = v71;
        v36 = v72;
        __swift_project_boxed_opaque_existential_1(v70, v71);
        *((_BYTE *)v9 + *(int *)(v6 + 24)) = (*(uint64_t (**)(uint64_t, uint64_t))(v36 + 24))(v35, v36) & 1;
        sub_1B8AE7B90((uint64_t)v9, (uint64_t)v11, type metadata accessor for EventVirtualConferenceJoinMethodModelObject);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v70);
        sub_1B8AE7BD4((uint64_t)v9, type metadata accessor for EventVirtualConferenceJoinMethodModelObject);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v73);
        v24 = v74;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1B8B374A0(0, *(_QWORD *)(v24 + 16) + 1, 1);
          v24 = v74;
        }
        v38 = *(_QWORD *)(v24 + 16);
        v37 = *(_QWORD *)(v24 + 24);
        if (v38 >= v37 >> 1)
        {
          sub_1B8B374A0(v37 > 1, v38 + 1, 1);
          v24 = v74;
        }
        *(_QWORD *)(v24 + 16) = v38 + 1;
        sub_1B8B515F0((uint64_t)v11, v24+ ((*(unsigned __int8 *)(v68 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v68 + 80))+ *(_QWORD *)(v68 + 72) * v38);
        v27 += 40;
        --v26;
      }
      while (v26);
      swift_bridgeObjectRelease();
      a2 = v62;
      a1 = v63;
      v15 = v61;
    }
    else
    {
      swift_bridgeObjectRelease();
      v24 = MEMORY[0x1E0DEE9D8];
      a2 = v62;
      a1 = v63;
    }
  }
  swift_bridgeObjectRelease();
  *((_QWORD *)v15 + 2) = v24;
  v39 = (uint64_t)v15;
  v40 = a1[3];
  v41 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v40);
  v42 = (*(uint64_t (**)(uint64_t, uint64_t))(v41 + 40))(v40, v41);
  v44 = v43;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v39 + 24) = v42;
  *(_QWORD *)(v39 + 32) = v44;
  v45 = a1[3];
  v46 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v45);
  v47 = (*(uint64_t (**)(uint64_t, uint64_t))(v46 + 48))(v45, v46);
  v49 = v48;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v39 + 40) = v47;
  *(_QWORD *)(v39 + 48) = v49;
  v50 = a1[3];
  v51 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v50);
  *(_BYTE *)(v39 + 56) = (*(uint64_t (**)(uint64_t, uint64_t))(v51 + 56))(v50, v51) & 1;
  v52 = a1[3];
  v53 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v52);
  *(_QWORD *)(v39 + 64) = (*(uint64_t (**)(uint64_t, uint64_t))(v53 + 64))(v52, v53);
  v54 = a1[3];
  v55 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v54);
  v56 = (uint64_t)v69;
  (*(void (**)(uint64_t, uint64_t))(v55 + 72))(v54, v55);
  sub_1B8AE3654(v56, v64);
  v57 = a1[3];
  v58 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v57);
  (*(void (**)(uint64_t, uint64_t))(v58 + 80))(v57, v58);
  sub_1B8AE3654(v56, (uint64_t)v65);
  sub_1B8AE7B90(v39, a2, type metadata accessor for EventVirtualConferenceModelObject);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return sub_1B8AE7BD4(v39, type metadata accessor for EventVirtualConferenceModelObject);
}

uint64_t EventVirtualConferenceJoinMethodModelObject.init(_:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1B3020);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for EventVirtualConferenceJoinMethodModelObject(0);
  v8 = MEMORY[0x1E0C80A78](v7);
  v10 = (uint64_t *)((char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  *v10 = 0;
  v10[1] = 0;
  v11 = (uint64_t)v10 + *(int *)(v8 + 20);
  v12 = sub_1B8B9B054();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v11, 1, 1, v12);
  v13 = a1[3];
  v14 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v13);
  *v10 = (*(uint64_t (**)(uint64_t, uint64_t))(v14 + 8))(v13, v14);
  v10[1] = v15;
  v16 = a1[3];
  v17 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v16);
  (*(void (**)(uint64_t, uint64_t))(v17 + 16))(v16, v17);
  sub_1B8AE3654((uint64_t)v6, v11);
  v18 = a1[3];
  v19 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v18);
  *((_BYTE *)v10 + *(int *)(v7 + 24)) = (*(uint64_t (**)(uint64_t, uint64_t))(v19 + 24))(v18, v19) & 1;
  sub_1B8AE7B90((uint64_t)v10, a2, type metadata accessor for EventVirtualConferenceJoinMethodModelObject);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return sub_1B8AE7BD4((uint64_t)v10, type metadata accessor for EventVirtualConferenceJoinMethodModelObject);
}

uint64_t EventVirtualConferenceModelObject.hash(into:)(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int (*v15)(char *, uint64_t, uint64_t);
  uint64_t v17;

  v3 = sub_1B8B9B054();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1B3020);
  v8 = MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v17 - v11;
  if (v1[1])
  {
    sub_1B8B9C980();
    swift_bridgeObjectRetain();
    sub_1B8B9C1E8();
    swift_bridgeObjectRelease();
    v13 = v1[2];
    if (v13)
      goto LABEL_3;
  }
  else
  {
    sub_1B8B9C980();
    v13 = v1[2];
    if (v13)
    {
LABEL_3:
      sub_1B8B9C980();
      swift_bridgeObjectRetain();
      sub_1B8B51B00(a1, v13);
      swift_bridgeObjectRelease();
      if (v1[4])
        goto LABEL_4;
LABEL_8:
      sub_1B8B9C980();
      if (v1[6])
        goto LABEL_5;
      goto LABEL_9;
    }
  }
  sub_1B8B9C980();
  if (!v1[4])
    goto LABEL_8;
LABEL_4:
  sub_1B8B9C980();
  swift_bridgeObjectRetain();
  sub_1B8B9C1E8();
  swift_bridgeObjectRelease();
  if (v1[6])
  {
LABEL_5:
    sub_1B8B9C980();
    swift_bridgeObjectRetain();
    sub_1B8B9C1E8();
    swift_bridgeObjectRelease();
    goto LABEL_10;
  }
LABEL_9:
  sub_1B8B9C980();
LABEL_10:
  sub_1B8B9C980();
  sub_1B8B9C974();
  v14 = type metadata accessor for EventVirtualConferenceModelObject(0);
  sub_1B8ADE850((uint64_t)v1 + *(int *)(v14 + 40), (uint64_t)v12, &qword_1ED1B3020);
  v15 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48);
  if (v15(v12, 1, v3) == 1)
  {
    sub_1B8B9C980();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v6, v12, v3);
    sub_1B8B9C980();
    sub_1B8ADBDEC(&qword_1EF1BC010, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0018]);
    sub_1B8B9C0C8();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
  sub_1B8ADE850((uint64_t)v1 + *(int *)(v14 + 44), (uint64_t)v10, &qword_1ED1B3020);
  if (v15(v10, 1, v3) == 1)
    return sub_1B8B9C980();
  (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v6, v10, v3);
  sub_1B8B9C980();
  sub_1B8ADBDEC(&qword_1EF1BC010, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0018]);
  sub_1B8B9C0C8();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_1B8B503A0(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1B8B503D0
                                                            + 4 * asc_1B8BAC0C0[a1]))(0x656C746974, 0xE500000000000000);
}

uint64_t sub_1B8B503D0()
{
  return 0x6874654D6E696F6ALL;
}

unint64_t sub_1B8B503F0()
{
  return 0xD000000000000011;
}

uint64_t sub_1B8B5048C()
{
  unsigned __int8 *v0;

  return sub_1B8B503A0(*v0);
}

uint64_t sub_1B8B50494@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1B8B54270(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1B8B504B8()
{
  sub_1B8B52ABC();
  return sub_1B8B9C9E0();
}

uint64_t sub_1B8B504E0()
{
  sub_1B8B52ABC();
  return sub_1B8B9C9EC();
}

uint64_t EventVirtualConferenceModelObject.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v10;
  char v11;
  uint64_t v12;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1BD9C8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1B8B52ABC();
  sub_1B8B9C9C8();
  LOBYTE(v12) = 0;
  sub_1B8B9C848();
  if (!v2)
  {
    v12 = *(_QWORD *)(v3 + 16);
    v11 = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1BD9D8);
    sub_1B8B52B00(&qword_1EF1BD9E0, &qword_1EF1BD9E8, (uint64_t)&protocol conformance descriptor for EventVirtualConferenceJoinMethodModelObject, MEMORY[0x1E0DEAF10]);
    sub_1B8B9C860();
    LOBYTE(v12) = 2;
    sub_1B8B9C848();
    LOBYTE(v12) = 3;
    sub_1B8B9C848();
    LOBYTE(v12) = 4;
    sub_1B8B9C878();
    v12 = *(_QWORD *)(v3 + 64);
    v11 = 5;
    type metadata accessor for EKVirtualConferenceSource(0);
    sub_1B8ADBDEC(&qword_1EF1BD9F0, (uint64_t (*)(uint64_t))type metadata accessor for EKVirtualConferenceSource, (uint64_t)&protocol conformance descriptor for EKVirtualConferenceSource);
    sub_1B8B9C8A8();
    type metadata accessor for EventVirtualConferenceModelObject(0);
    LOBYTE(v12) = 6;
    sub_1B8B9B054();
    sub_1B8ADBDEC(&qword_1EF1BC028, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0010]);
    sub_1B8B9C860();
    LOBYTE(v12) = 7;
    sub_1B8B9C860();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t EventVirtualConferenceModelObject.hashValue.getter()
{
  return sub_1B8AE6D24((void (*)(_BYTE *))EventVirtualConferenceModelObject.hash(into:));
}

uint64_t EventVirtualConferenceModelObject.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(void);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  char v37;
  uint64_t v38;

  v29 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1B3020);
  v4 = MEMORY[0x1E0C80A78](v3);
  v30 = (uint64_t)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v31 = (uint64_t)&v28 - v6;
  v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1BD9F8);
  v32 = *(_QWORD *)(v34 - 8);
  MEMORY[0x1E0C80A78](v34);
  v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for EventVirtualConferenceModelObject(0);
  v10 = MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  *((_QWORD *)v12 + 6) = 0;
  *((_OWORD *)v12 + 1) = 0u;
  *((_OWORD *)v12 + 2) = 0u;
  *(_OWORD *)v12 = 0u;
  v13 = (uint64_t)&v12[*(int *)(v10 + 40)];
  v14 = sub_1B8B9B054();
  v15 = *(void (**)(void))(*(_QWORD *)(v14 - 8) + 56);
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v15)(v13, 1, 1, v14);
  v16 = (uint64_t)&v12[*(int *)(v9 + 44)];
  v15();
  v17 = a1[3];
  v35 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v17);
  sub_1B8B52ABC();
  v33 = v8;
  v18 = v36;
  sub_1B8B9C9B0();
  if (v18)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v35);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1B8ADE894(v13, &qword_1ED1B3020);
    return sub_1B8ADE894(v16, &qword_1ED1B3020);
  }
  else
  {
    LOBYTE(v38) = 0;
    v19 = v13;
    v20 = v16;
    *(_QWORD *)v12 = sub_1B8B9C7A0();
    *((_QWORD *)v12 + 1) = v21;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1BD9D8);
    v37 = 1;
    sub_1B8B52B00(&qword_1EF1BDA00, &qword_1EF1BDA08, (uint64_t)&protocol conformance descriptor for EventVirtualConferenceJoinMethodModelObject, MEMORY[0x1E0DEAF40]);
    sub_1B8B9C7D0();
    v22 = (uint64_t)v35;
    *((_QWORD *)v12 + 2) = v38;
    LOBYTE(v38) = 2;
    *((_QWORD *)v12 + 3) = sub_1B8B9C7A0();
    *((_QWORD *)v12 + 4) = v23;
    LOBYTE(v38) = 3;
    *((_QWORD *)v12 + 5) = sub_1B8B9C7A0();
    *((_QWORD *)v12 + 6) = v24;
    LOBYTE(v38) = 4;
    v12[56] = sub_1B8B9C7E8() & 1;
    type metadata accessor for EKVirtualConferenceSource(0);
    v37 = 5;
    sub_1B8ADBDEC(&qword_1EF1BDA10, (uint64_t (*)(uint64_t))type metadata accessor for EKVirtualConferenceSource, (uint64_t)&protocol conformance descriptor for EKVirtualConferenceSource);
    sub_1B8B9C818();
    *((_QWORD *)v12 + 8) = v38;
    LOBYTE(v38) = 6;
    sub_1B8ADBDEC(&qword_1EF1BC038, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0038]);
    sub_1B8B9C7D0();
    sub_1B8AE3654(v31, v19);
    LOBYTE(v38) = 7;
    v25 = v33;
    v26 = v34;
    sub_1B8B9C7D0();
    (*(void (**)(char *, uint64_t))(v32 + 8))(v25, v26);
    sub_1B8AE3654(v30, v20);
    sub_1B8AE7B90((uint64_t)v12, v29, type metadata accessor for EventVirtualConferenceModelObject);
    __swift_destroy_boxed_opaque_existential_1(v22);
    return sub_1B8AE7BD4((uint64_t)v12, type metadata accessor for EventVirtualConferenceModelObject);
  }
}

uint64_t sub_1B8B50C8C()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1B8B50C94()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 56);
}

uint64_t sub_1B8B50C9C()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 64);
}

uint64_t sub_1B8B50CA4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1B8ADE850(v2 + *(int *)(a1 + 40), a2, &qword_1ED1B3020);
}

uint64_t sub_1B8B50CCC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1B8ADE850(v2 + *(int *)(a1 + 44), a2, &qword_1ED1B3020);
}

uint64_t sub_1B8B50CF4(uint64_t a1, uint64_t a2)
{
  return sub_1B8AE7248(a1, a2, (void (*)(_BYTE *))EventVirtualConferenceModelObject.hash(into:));
}

uint64_t sub_1B8B50D04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B8AE7298(a1, a2, a3, (void (*)(_BYTE *))EventVirtualConferenceModelObject.hash(into:));
}

uint64_t sub_1B8B50D10@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return EventVirtualConferenceModelObject.init(from:)(a1, a2);
}

uint64_t sub_1B8B50D24(_QWORD *a1)
{
  return EventVirtualConferenceModelObject.encode(to:)(a1);
}

uint64_t (*EventVirtualConferenceJoinMethodModelObject.title.modify())()
{
  return nullsub_1;
}

uint64_t EventVirtualConferenceJoinMethodModelObject.url.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for EventVirtualConferenceJoinMethodModelObject(0);
  return sub_1B8ADE850(v1 + *(int *)(v3 + 20), a1, &qword_1ED1B3020);
}

uint64_t EventVirtualConferenceJoinMethodModelObject.url.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for EventVirtualConferenceJoinMethodModelObject(0) + 20);
  return sub_1B8AE3654(a1, v3);
}

uint64_t (*EventVirtualConferenceJoinMethodModelObject.url.modify())(_QWORD)
{
  type metadata accessor for EventVirtualConferenceJoinMethodModelObject(0);
  return nullsub_1;
}

uint64_t EventVirtualConferenceJoinMethodModelObject.isBroadcast.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0
                            + *(int *)(type metadata accessor for EventVirtualConferenceJoinMethodModelObject(0) + 24));
}

uint64_t EventVirtualConferenceJoinMethodModelObject.isBroadcast.setter(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for EventVirtualConferenceJoinMethodModelObject(0);
  *(_BYTE *)(v1 + *(int *)(result + 24)) = a1;
  return result;
}

uint64_t (*EventVirtualConferenceJoinMethodModelObject.isBroadcast.modify())(_QWORD)
{
  type metadata accessor for EventVirtualConferenceJoinMethodModelObject(0);
  return nullsub_1;
}

uint64_t EventVirtualConferenceJoinMethodModelObject.hash(into:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v10;

  v1 = sub_1B8B9B054();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1B3020);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_QWORD *)(v0 + 8))
  {
    sub_1B8B9C980();
    swift_bridgeObjectRetain();
    sub_1B8B9C1E8();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1B8B9C980();
  }
  v8 = type metadata accessor for EventVirtualConferenceJoinMethodModelObject(0);
  sub_1B8ADE850(v0 + *(int *)(v8 + 20), (uint64_t)v7, &qword_1ED1B3020);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48))(v7, 1, v1) == 1)
  {
    sub_1B8B9C980();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v4, v7, v1);
    sub_1B8B9C980();
    sub_1B8ADBDEC(&qword_1EF1BC010, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0018]);
    sub_1B8B9C0C8();
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  }
  return sub_1B8B9C980();
}

uint64_t sub_1B8B51014()
{
  sub_1B8B52B84();
  return sub_1B8B9C9E0();
}

uint64_t sub_1B8B5103C()
{
  sub_1B8B52B84();
  return sub_1B8B9C9EC();
}

uint64_t EventVirtualConferenceJoinMethodModelObject.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  _BYTE v8[16];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1BDA18);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1B8B52B84();
  sub_1B8B9C9C8();
  v8[15] = 0;
  sub_1B8B9C848();
  if (!v1)
  {
    type metadata accessor for EventVirtualConferenceJoinMethodModelObject(0);
    v8[14] = 1;
    sub_1B8B9B054();
    sub_1B8ADBDEC(&qword_1EF1BC028, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0010]);
    sub_1B8B9C860();
    v8[13] = 2;
    sub_1B8B9C878();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t EventVirtualConferenceJoinMethodModelObject.hashValue.getter()
{
  return sub_1B8AE6D24((void (*)(_BYTE *))EventVirtualConferenceJoinMethodModelObject.hash(into:));
}

uint64_t EventVirtualConferenceJoinMethodModelObject.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  char v29;
  char v30;

  v22 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1B3020);
  MEMORY[0x1E0C80A78](v3);
  v24 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1BDA28);
  v23 = *(_QWORD *)(v26 - 8);
  MEMORY[0x1E0C80A78](v26);
  v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for EventVirtualConferenceJoinMethodModelObject(0);
  v8 = MEMORY[0x1E0C80A78](v7);
  v10 = (uint64_t *)((char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  *v10 = 0;
  v10[1] = 0;
  v11 = (uint64_t)v10 + *(int *)(v8 + 20);
  v12 = sub_1B8B9B054();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v11, 1, 1, v12);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1B8B52B84();
  v25 = v6;
  v13 = v27;
  sub_1B8B9C9B0();
  if (v13)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    swift_bridgeObjectRelease();
    return sub_1B8ADE894(v11, &qword_1ED1B3020);
  }
  else
  {
    v27 = v7;
    v14 = v23;
    v15 = (uint64_t)v24;
    v30 = 0;
    v16 = v25;
    v17 = v26;
    *v10 = sub_1B8B9C7A0();
    v10[1] = v18;
    v29 = 1;
    sub_1B8ADBDEC(&qword_1EF1BC038, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0038]);
    sub_1B8B9C7D0();
    sub_1B8AE3654(v15, v11);
    v28 = 2;
    v19 = sub_1B8B9C7E8();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v17);
    v20 = v22;
    *((_BYTE *)v10 + *(int *)(v27 + 24)) = v19 & 1;
    sub_1B8AE7B90((uint64_t)v10, v20, type metadata accessor for EventVirtualConferenceJoinMethodModelObject);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    return sub_1B8AE7BD4((uint64_t)v10, type metadata accessor for EventVirtualConferenceJoinMethodModelObject);
  }
}

uint64_t sub_1B8B5149C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1B8ADE850(v2 + *(int *)(a1 + 20), a2, &qword_1ED1B3020);
}

uint64_t sub_1B8B514C4(uint64_t a1)
{
  uint64_t v1;

  return *(unsigned __int8 *)(v1 + *(int *)(a1 + 24));
}

uint64_t sub_1B8B514D0(uint64_t a1, uint64_t a2)
{
  return sub_1B8AE7248(a1, a2, (void (*)(_BYTE *))EventVirtualConferenceJoinMethodModelObject.hash(into:));
}

uint64_t sub_1B8B514E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B8AE7298(a1, a2, a3, (void (*)(_BYTE *))EventVirtualConferenceJoinMethodModelObject.hash(into:));
}

uint64_t sub_1B8B514EC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return EventVirtualConferenceJoinMethodModelObject.init(from:)(a1, a2);
}

uint64_t sub_1B8B51500(_QWORD *a1)
{
  return EventVirtualConferenceJoinMethodModelObject.encode(to:)(a1);
}

uint64_t sub_1B8B51518()
{
  sub_1B8ADBDEC(&qword_1EF1BDA80, (uint64_t (*)(uint64_t))type metadata accessor for EKVirtualConferenceSource, (uint64_t)&unk_1B8BA57B8);
  return sub_1B8B9C2CC();
}

uint64_t sub_1B8B5158C()
{
  sub_1B8ADBDEC(&qword_1EF1BDA80, (uint64_t (*)(uint64_t))type metadata accessor for EKVirtualConferenceSource, (uint64_t)&unk_1B8BA57B8);
  return sub_1B8B9C2B4();
}

uint64_t sub_1B8B515F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for EventVirtualConferenceJoinMethodModelObject(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1B8B51634(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t result;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;

  v3 = *(_QWORD *)(a2 + 16);
  result = sub_1B8B9C974();
  if (v3)
  {
    v5 = (uint64_t *)(a2 + 56);
    do
    {
      v6 = *v5;
      v7 = v5[2];
      if (*(v5 - 2))
      {
        sub_1B8B9C980();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
        sub_1B8B9C1E8();
        swift_bridgeObjectRelease();
        if (v6)
          goto LABEL_7;
      }
      else
      {
        sub_1B8B9C980();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v6)
        {
LABEL_7:
          sub_1B8B9C980();
          swift_bridgeObjectRetain();
          sub_1B8B9C1E8();
          swift_bridgeObjectRelease();
          if (!v7)
            goto LABEL_11;
          goto LABEL_3;
        }
      }
      sub_1B8B9C980();
      if (!v7)
      {
LABEL_11:
        sub_1B8B9C980();
        goto LABEL_4;
      }
LABEL_3:
      sub_1B8B9C980();
      swift_bridgeObjectRetain();
      sub_1B8B9C1E8();
      swift_bridgeObjectRelease();
LABEL_4:
      v5 += 10;
      swift_bridgeObjectRetain();
      sub_1B8B9C1E8();
      swift_bridgeObjectRelease();
      sub_1B8B9C980();
      sub_1B8B9C980();
      sub_1B8B9C974();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      result = swift_bridgeObjectRelease();
      --v3;
    }
    while (v3);
  }
  return result;
}

uint64_t sub_1B8B51810(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t result;
  uint64_t i;
  _OWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _OWORD v11[12];
  _BYTE v12[184];
  _BYTE v13[184];
  _BYTE v14[192];

  v3 = *(_QWORD *)(a2 + 16);
  result = sub_1B8B9C974();
  if (v3)
  {
    for (i = a2 + 32; ; i += 184)
    {
      sub_1B8B545A4(i, (uint64_t)v13);
      sub_1B8B545A4((uint64_t)v13, (uint64_t)v14);
      if (sub_1B8B545EC((uint64_t)v14) == 1)
        break;
      nullsub_1(v14);
      sub_1B8B545A4((uint64_t)v13, (uint64_t)v12);
      v6 = (_OWORD *)nullsub_1(v12);
      sub_1B8B9C974();
      v11[7] = v6[7];
      v11[8] = v6[8];
      v11[9] = v6[9];
      v11[10] = v6[10];
      v11[3] = v6[3];
      v11[4] = v6[4];
      v11[5] = v6[5];
      v11[6] = v6[6];
      v11[0] = *v6;
      v11[1] = v6[1];
      v11[2] = v6[2];
      result = EventLocationModelObject.hash(into:)();
LABEL_4:
      if (!--v3)
        return result;
    }
    nullsub_1(v14);
    sub_1B8B545A4((uint64_t)v13, (uint64_t)v12);
    v7 = (_QWORD *)nullsub_1(v12);
    v8 = v7[1];
    v9 = v7[3];
    v10 = v7[5];
    sub_1B8B9C974();
    sub_1B8B9C980();
    if (v8)
    {
      sub_1B8B5472C((uint64_t)v13, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1B8B545F4);
      swift_bridgeObjectRetain();
      sub_1B8B9C1E8();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1B8B545A4((uint64_t)v13, (uint64_t)v11);
      nullsub_1(v11);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    if (v9)
    {
      sub_1B8B9C980();
      swift_bridgeObjectRetain();
      sub_1B8B9C1E8();
      swift_bridgeObjectRelease();
      if (v10)
      {
LABEL_11:
        sub_1B8B9C980();
        swift_bridgeObjectRetain();
        sub_1B8B9C1E8();
        swift_bridgeObjectRelease();
LABEL_14:
        swift_bridgeObjectRetain();
        sub_1B8B9C1E8();
        swift_bridgeObjectRelease();
        sub_1B8B9C980();
        sub_1B8B9C980();
        sub_1B8B9C974();
        result = sub_1B8B5472C((uint64_t)v13, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1B8B54798);
        goto LABEL_4;
      }
    }
    else
    {
      sub_1B8B9C980();
      if (v10)
        goto LABEL_11;
    }
    sub_1B8B9C980();
    goto LABEL_14;
  }
  return result;
}

uint64_t sub_1B8B51B00(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;

  v3 = sub_1B8B9B054();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v20 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1B3020);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for EventVirtualConferenceJoinMethodModelObject(0);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *(_QWORD *)(a2 + 16);
  result = sub_1B8B9C974();
  if (v13)
  {
    v15 = a2 + ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80));
    v16 = *(_QWORD *)(v10 + 72);
    v21 = v8;
    v22 = v16;
    do
    {
      sub_1B8AE7B90(v15, (uint64_t)v12, type metadata accessor for EventVirtualConferenceJoinMethodModelObject);
      if (*((_QWORD *)v12 + 1))
      {
        sub_1B8B9C980();
        swift_bridgeObjectRetain();
        sub_1B8B9C1E8();
        swift_bridgeObjectRelease();
      }
      else
      {
        sub_1B8B9C980();
      }
      v18 = (uint64_t)v21;
      sub_1B8ADE850((uint64_t)&v12[*(int *)(v9 + 20)], (uint64_t)v21, &qword_1ED1B3020);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v18, 1, v3) == 1)
      {
        sub_1B8B9C980();
      }
      else
      {
        v17 = v20;
        (*(void (**)(char *, uint64_t, uint64_t))(v4 + 32))(v20, v18, v3);
        sub_1B8B9C980();
        sub_1B8ADBDEC(&qword_1EF1BC010, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0018]);
        sub_1B8B9C0C8();
        (*(void (**)(char *, uint64_t))(v4 + 8))(v17, v3);
      }
      sub_1B8B9C980();
      result = sub_1B8AE7BD4((uint64_t)v12, type metadata accessor for EventVirtualConferenceJoinMethodModelObject);
      v15 += v22;
      --v13;
    }
    while (v13);
  }
  return result;
}

uint64_t sub_1B8B51D7C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;

  v3 = sub_1B8B9B0F0();
  v20 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v18 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1B2D18);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for EventAlarmModelObject();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *(_QWORD *)(a2 + 16);
  result = sub_1B8B9C974();
  if (v12)
  {
    v14 = a2 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    v19 = *(_QWORD *)(v9 + 72);
    do
    {
      sub_1B8AE7B90(v14, (uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for EventAlarmModelObject);
      swift_bridgeObjectRetain();
      sub_1B8B9C1E8();
      swift_bridgeObjectRelease();
      sub_1B8B9C98C();
      sub_1B8ADE850((uint64_t)&v11[*(int *)(v8 + 24)], (uint64_t)v7, &qword_1ED1B2D18);
      v16 = v20;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v7, 1, v3) == 1)
      {
        sub_1B8B9C980();
      }
      else
      {
        v15 = v18;
        (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v18, v7, v3);
        sub_1B8B9C980();
        sub_1B8ADBDEC(&qword_1EF1B8F38, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08A8]);
        sub_1B8B9C0C8();
        (*(void (**)(char *, uint64_t))(v16 + 8))(v15, v3);
      }
      sub_1B8B9C980();
      result = sub_1B8AE7BD4((uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for EventAlarmModelObject);
      v14 += v19;
      --v12;
    }
    while (v12);
  }
  return result;
}

uint64_t _s13CalendarUIKit43EventVirtualConferenceJoinMethodModelObjectV2eeoiySbAC_ACtFZ_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unsigned int (*v28)(uint64_t, uint64_t, uint64_t);
  char *v30;
  char v31;
  void (*v32)(char *, uint64_t);
  char *v33;
  uint64_t v34;
  _QWORD *v35;
  _QWORD *v36;

  v4 = sub_1B8B9B054();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1BC208);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1B3020);
  v12 = MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x1E0C80A78](v12);
  v17 = (char *)&v33 - v16;
  MEMORY[0x1E0C80A78](v15);
  v19 = (char *)&v33 - v18;
  v20 = a1[1];
  v21 = a2[1];
  if (!v20)
  {
    if (v21)
      goto LABEL_14;
    goto LABEL_8;
  }
  if (!v21)
    goto LABEL_14;
  if (*a1 == *a2 && v20 == v21 || (v22 = sub_1B8B9C8D8(), v23 = 0, (v22 & 1) != 0))
  {
LABEL_8:
    v33 = v7;
    v24 = type metadata accessor for EventVirtualConferenceJoinMethodModelObject(0);
    v25 = *(int *)(v24 + 20);
    v35 = a1;
    sub_1B8ADE850((uint64_t)a1 + v25, (uint64_t)v19, &qword_1ED1B3020);
    v34 = v24;
    v26 = *(int *)(v24 + 20);
    v36 = a2;
    sub_1B8ADE850((uint64_t)a2 + v26, (uint64_t)v17, &qword_1ED1B3020);
    v27 = (uint64_t)&v10[*(int *)(v8 + 48)];
    sub_1B8ADE850((uint64_t)v19, (uint64_t)v10, &qword_1ED1B3020);
    sub_1B8ADE850((uint64_t)v17, v27, &qword_1ED1B3020);
    v28 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
    if (v28((uint64_t)v10, 1, v4) == 1)
    {
      sub_1B8ADE894((uint64_t)v17, &qword_1ED1B3020);
      sub_1B8ADE894((uint64_t)v19, &qword_1ED1B3020);
      if (v28(v27, 1, v4) == 1)
      {
        sub_1B8ADE894((uint64_t)v10, &qword_1ED1B3020);
LABEL_17:
        v23 = *((_BYTE *)v35 + *(int *)(v34 + 24)) ^ *((_BYTE *)v36 + *(int *)(v34 + 24)) ^ 1;
        return v23 & 1;
      }
      goto LABEL_13;
    }
    sub_1B8ADE850((uint64_t)v10, (uint64_t)v14, &qword_1ED1B3020);
    if (v28(v27, 1, v4) == 1)
    {
      sub_1B8ADE894((uint64_t)v17, &qword_1ED1B3020);
      sub_1B8ADE894((uint64_t)v19, &qword_1ED1B3020);
      (*(void (**)(char *, uint64_t))(v5 + 8))(v14, v4);
LABEL_13:
      sub_1B8ADE894((uint64_t)v10, &qword_1EF1BC208);
      goto LABEL_14;
    }
    v30 = v33;
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 32))(v33, v27, v4);
    sub_1B8ADBDEC(&qword_1EF1BC210, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0028]);
    v31 = sub_1B8B9C0EC();
    v32 = *(void (**)(char *, uint64_t))(v5 + 8);
    v32(v30, v4);
    sub_1B8ADE894((uint64_t)v17, &qword_1ED1B3020);
    sub_1B8ADE894((uint64_t)v19, &qword_1ED1B3020);
    v32(v14, v4);
    sub_1B8ADE894((uint64_t)v10, &qword_1ED1B3020);
    if ((v31 & 1) != 0)
      goto LABEL_17;
LABEL_14:
    v23 = 0;
  }
  return v23 & 1;
}

BOOL _s13CalendarUIKit33EventVirtualConferenceModelObjectV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  _BOOL8 result;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  char v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  unsigned int (*v60)(uint64_t, uint64_t, char *);
  char *v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  char v66;
  char v67;
  void (*v68)(char *, char *);
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  char v79;
  void (*v80)(char *, char *);
  uint64_t v81;
  unsigned int (*v82)(uint64_t, uint64_t, char *);
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;

  v4 = sub_1B8B9B054();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v81 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1BC208);
  v9 = MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v81 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v94 = (uint64_t)&v81 - v12;
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1B3020);
  v14 = MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v81 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x1E0C80A78](v14);
  v19 = (char *)&v81 - v18;
  v20 = MEMORY[0x1E0C80A78](v17);
  v22 = (char *)&v81 - v21;
  v23 = MEMORY[0x1E0C80A78](v20);
  v24 = MEMORY[0x1E0C80A78](v23);
  MEMORY[0x1E0C80A78](v24);
  v28 = *(_QWORD *)(a1 + 8);
  v29 = *(_QWORD *)(a2 + 8);
  if (!v28)
  {
    v92 = v27;
    v93 = (uint64_t)&v81 - v25;
    v90 = v26;
    v91 = v8;
    if (v29)
      return 0;
    goto LABEL_8;
  }
  if (!v29)
    return 0;
  v92 = v27;
  v93 = (uint64_t)&v81 - v25;
  v90 = v26;
  v91 = v8;
  if (*(_QWORD *)a1 == *(_QWORD *)a2 && v28 == v29 || (v30 = sub_1B8B9C8D8(), result = 0, (v30 & 1) != 0))
  {
LABEL_8:
    v88 = v19;
    v32 = *(_QWORD *)(a2 + 16);
    if (*(_QWORD *)(a1 + 16))
    {
      if (!v32)
        return 0;
      v89 = v22;
      v33 = v16;
      v34 = v7;
      v35 = v5;
      v36 = v11;
      v37 = v4;
      swift_bridgeObjectRetain();
      v38 = swift_bridgeObjectRetain();
      v39 = sub_1B8B88590(v38, v32);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v39 & 1) == 0)
        return 0;
    }
    else
    {
      v89 = v22;
      v33 = v16;
      v34 = v7;
      v35 = v5;
      v36 = v11;
      v37 = v4;
      if (v32)
        return 0;
    }
    v40 = *(_QWORD *)(a1 + 32);
    v41 = *(_QWORD *)(a2 + 32);
    if (v40)
    {
      if (!v41)
        return 0;
      v42 = v37;
      v43 = v36;
      v44 = v35;
      v45 = v34;
      v46 = v33;
      v47 = (uint64_t)v89;
      if (*(_QWORD *)(a1 + 24) != *(_QWORD *)(a2 + 24) || v40 != v41)
      {
        v48 = sub_1B8B9C8D8();
        result = 0;
        if ((v48 & 1) == 0)
          return result;
      }
    }
    else
    {
      v42 = v37;
      v43 = v36;
      v44 = v35;
      v45 = v34;
      v46 = v33;
      v47 = (uint64_t)v89;
      if (v41)
        return 0;
    }
    v49 = *(_QWORD *)(a1 + 48);
    v50 = *(_QWORD *)(a2 + 48);
    if (v49)
    {
      if (!v50)
        return 0;
      if (*(_QWORD *)(a1 + 40) != *(_QWORD *)(a2 + 40) || v49 != v50)
      {
        v51 = sub_1B8B9C8D8();
        result = 0;
        if ((v51 & 1) == 0)
          return result;
      }
    }
    else if (v50)
    {
      return 0;
    }
    if (*(unsigned __int8 *)(a1 + 56) != *(unsigned __int8 *)(a2 + 56) || *(_QWORD *)(a1 + 64) != *(_QWORD *)(a2 + 64))
      return 0;
    v84 = (uint64_t)v46;
    v86 = (uint64_t)v43;
    v52 = type metadata accessor for EventVirtualConferenceModelObject(0);
    v53 = v93;
    sub_1B8ADE850(a1 + *(int *)(v52 + 40), v93, &qword_1ED1B3020);
    v85 = v52;
    v54 = a2 + *(int *)(v52 + 40);
    v55 = v92;
    sub_1B8ADE850(v54, v92, &qword_1ED1B3020);
    v56 = v94;
    v57 = v94 + *(int *)(v91 + 48);
    v93 = v53;
    sub_1B8ADE850(v53, v94, &qword_1ED1B3020);
    v87 = v57;
    sub_1B8ADE850(v55, v57, &qword_1ED1B3020);
    v58 = (char *)v42;
    v59 = v56;
    v60 = *(unsigned int (**)(uint64_t, uint64_t, char *))(v44 + 48);
    v89 = v58;
    if (((unsigned int (*)(uint64_t, uint64_t))v60)(v59, 1) == 1)
    {
      v83 = v45;
      sub_1B8ADE894(v55, &qword_1ED1B3020);
      sub_1B8ADE894(v93, &qword_1ED1B3020);
      v61 = v89;
      if (((unsigned int (*)(uint64_t, uint64_t))v60)(v87, 1) == 1)
      {
        v87 = v44;
        sub_1B8ADE894(v59, &qword_1ED1B3020);
        v62 = v86;
LABEL_36:
        v69 = v47;
        v71 = v84;
        v70 = v85;
        sub_1B8ADE850(a1 + *(int *)(v85 + 44), v69, &qword_1ED1B3020);
        v72 = a2 + *(int *)(v70 + 44);
        v73 = (uint64_t)v88;
        sub_1B8ADE850(v72, (uint64_t)v88, &qword_1ED1B3020);
        v74 = v62 + *(int *)(v91 + 48);
        sub_1B8ADE850(v69, v62, &qword_1ED1B3020);
        sub_1B8ADE850(v73, v74, &qword_1ED1B3020);
        if (v60(v62, 1, v61) == 1)
        {
          sub_1B8ADE894(v73, &qword_1ED1B3020);
          sub_1B8ADE894(v69, &qword_1ED1B3020);
          if (v60(v74, 1, v61) == 1)
          {
            sub_1B8ADE894(v62, &qword_1ED1B3020);
            return 1;
          }
          goto LABEL_41;
        }
        v75 = v69;
        v76 = v71;
        sub_1B8ADE850(v62, v71, &qword_1ED1B3020);
        if (v60(v74, 1, v61) == 1)
        {
          sub_1B8ADE894((uint64_t)v88, &qword_1ED1B3020);
          sub_1B8ADE894(v75, &qword_1ED1B3020);
          (*(void (**)(uint64_t, char *))(v87 + 8))(v71, v61);
LABEL_41:
          v65 = v62;
          goto LABEL_42;
        }
        v77 = v87;
        v78 = v83;
        (*(void (**)(char *, uint64_t, char *))(v87 + 32))(v83, v74, v61);
        sub_1B8ADBDEC(&qword_1EF1BC210, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0028]);
        v79 = sub_1B8B9C0EC();
        v80 = *(void (**)(char *, char *))(v77 + 8);
        v80(v78, v61);
        sub_1B8ADE894((uint64_t)v88, &qword_1ED1B3020);
        sub_1B8ADE894(v75, &qword_1ED1B3020);
        v80((char *)v76, v61);
        sub_1B8ADE894(v62, &qword_1ED1B3020);
        return (v79 & 1) != 0;
      }
    }
    else
    {
      v63 = v90;
      sub_1B8ADE850(v59, v90, &qword_1ED1B3020);
      v64 = v89;
      v82 = v60;
      if (v60(v87, 1, v89) != 1)
      {
        (*(void (**)(char *, uint64_t, char *))(v44 + 32))(v45, v87, v64);
        sub_1B8ADBDEC(&qword_1EF1BC210, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0028]);
        v66 = sub_1B8B9C0EC();
        v61 = v89;
        v67 = v66;
        v87 = v44;
        v68 = *(void (**)(char *, char *))(v44 + 8);
        v83 = v45;
        v68(v45, v89);
        sub_1B8ADE894(v92, &qword_1ED1B3020);
        sub_1B8ADE894(v93, &qword_1ED1B3020);
        v68((char *)v63, v61);
        v62 = v86;
        sub_1B8ADE894(v94, &qword_1ED1B3020);
        v60 = v82;
        if ((v67 & 1) == 0)
          return 0;
        goto LABEL_36;
      }
      sub_1B8ADE894(v92, &qword_1ED1B3020);
      sub_1B8ADE894(v93, &qword_1ED1B3020);
      (*(void (**)(uint64_t, char *))(v44 + 8))(v63, v64);
    }
    v65 = v59;
LABEL_42:
    sub_1B8ADE894(v65, &qword_1EF1BC208);
    return 0;
  }
  return result;
}

unint64_t sub_1B8B52ABC()
{
  unint64_t result;

  result = qword_1EF1BD9D0;
  if (!qword_1EF1BD9D0)
  {
    result = MEMORY[0x1BCCB79D0](&unk_1B8BAC578, &type metadata for EventVirtualConferenceModelObject.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF1BD9D0);
  }
  return result;
}

uint64_t sub_1B8B52B00(unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;

  result = *a1;
  if (!result)
  {
    v9 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EF1BD9D8);
    v10 = sub_1B8ADBDEC(a2, type metadata accessor for EventVirtualConferenceJoinMethodModelObject, a3);
    result = MEMORY[0x1BCCB79D0](a4, v9, &v10);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1B8B52B84()
{
  unint64_t result;

  result = qword_1EF1BDA20;
  if (!qword_1EF1BDA20)
  {
    result = MEMORY[0x1BCCB79D0](&unk_1B8BAC528, &type metadata for EventVirtualConferenceJoinMethodModelObject.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF1BDA20);
  }
  return result;
}

_UNKNOWN **sub_1B8B52BC8()
{
  return &protocol witness table for EventVirtualConferenceJoinMethodModelObject;
}

uint64_t sub_1B8B52BD4()
{
  return sub_1B8ADBDEC(&qword_1EF1BDA30, type metadata accessor for EventVirtualConferenceModelObject, (uint64_t)&protocol conformance descriptor for EventVirtualConferenceModelObject);
}

uint64_t sub_1B8B52C00()
{
  return sub_1B8ADBDEC(&qword_1EF1BDA38, type metadata accessor for EventVirtualConferenceJoinMethodModelObject, (uint64_t)&protocol conformance descriptor for EventVirtualConferenceJoinMethodModelObject);
}

_QWORD *initializeBufferWithCopyOfBuffer for EventVirtualConferenceModelObject(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int (*v15)(char *, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  void *__dst;

  v4 = (_QWORD *)a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v17 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v7;
    v8 = a2[3];
    *(_QWORD *)(a1 + 16) = a2[2];
    *(_QWORD *)(a1 + 24) = v8;
    v9 = a2[5];
    *(_QWORD *)(a1 + 32) = a2[4];
    *(_QWORD *)(a1 + 40) = v9;
    v10 = a2[6];
    *(_BYTE *)(a1 + 56) = *((_BYTE *)a2 + 56);
    *(_QWORD *)(a1 + 64) = a2[8];
    v11 = *(int *)(a3 + 40);
    __dst = (void *)(a1 + v11);
    v12 = (char *)a2 + v11;
    *(_QWORD *)(a1 + 48) = v10;
    v13 = sub_1B8B9B054();
    v14 = *(_QWORD *)(v13 - 8);
    v15 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v15(v12, 1, v13))
    {
      v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1B3020);
      memcpy(__dst, v12, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v14 + 16))(__dst, v12, v13);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v14 + 56))(__dst, 0, 1, v13);
    }
    v18 = *(int *)(a3 + 44);
    v19 = (char *)v4 + v18;
    v20 = (char *)a2 + v18;
    if (v15(v20, 1, v13))
    {
      v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1B3020);
      memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v19, v20, v13);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v19, 0, 1, v13);
    }
  }
  return v4;
}

uint64_t destroy for EventVirtualConferenceModelObject(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t result;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 40);
  v5 = sub_1B8B9B054();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
  if (!v7(v4, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  v8 = a1 + *(int *)(a2 + 44);
  result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v7)(v8, 1, v5);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v8, v5);
  return result;
}

uint64_t initializeWithCopy for EventVirtualConferenceModelObject(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  const void *v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int (*v14)(const void *, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  void *v17;
  const void *v18;
  uint64_t v19;

  v5 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v5;
  v6 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v6;
  v7 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v7;
  v8 = *(_QWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  v9 = *(int *)(a3 + 40);
  v10 = (void *)(a1 + v9);
  v11 = (const void *)(a2 + v9);
  *(_QWORD *)(a1 + 48) = v8;
  v12 = sub_1B8B9B054();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v13 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v14(v11, 1, v12))
  {
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1B3020);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v13 + 16))(v10, v11, v12);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
  }
  v16 = *(int *)(a3 + 44);
  v17 = (void *)(a1 + v16);
  v18 = (const void *)(a2 + v16);
  if (v14(v18, 1, v12))
  {
    v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1B3020);
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v13 + 16))(v17, v18, v12);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v17, 0, 1, v12);
  }
  return a1;
}

uint64_t assignWithCopy for EventVirtualConferenceModelObject(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(void *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  void *v17;
  int v18;
  int v19;
  uint64_t v20;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  v6 = *(int *)(a3 + 40);
  v7 = (void *)(a1 + v6);
  v8 = (void *)(a2 + v6);
  v9 = sub_1B8B9B054();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(void *, void *, uint64_t))(v10 + 16))(v7, v8, v9);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(void *, uint64_t))(v10 + 8))(v7, v9);
LABEL_6:
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1B3020);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v10 + 24))(v7, v8, v9);
LABEL_7:
  v15 = *(int *)(a3 + 44);
  v16 = (void *)(a1 + v15);
  v17 = (void *)(a2 + v15);
  v18 = v11((void *)(a1 + v15), 1, v9);
  v19 = v11(v17, 1, v9);
  if (!v18)
  {
    if (!v19)
    {
      (*(void (**)(void *, void *, uint64_t))(v10 + 24))(v16, v17, v9);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v10 + 8))(v16, v9);
    goto LABEL_12;
  }
  if (v19)
  {
LABEL_12:
    v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1B3020);
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v10 + 16))(v16, v17, v9);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v16, 0, 1, v9);
  return a1;
}

uint64_t initializeWithTake for EventVirtualConferenceModelObject(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int (*v12)(const void *, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  void *v15;
  const void *v16;
  uint64_t v17;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  v6 = *(_OWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  v7 = *(int *)(a3 + 40);
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  *(_OWORD *)(a1 + 40) = v6;
  v10 = sub_1B8B9B054();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48);
  if (v12(v9, 1, v10))
  {
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1B3020);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 32))(v8, v9, v10);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  v14 = *(int *)(a3 + 44);
  v15 = (void *)(a1 + v14);
  v16 = (const void *)(a2 + v14);
  if (v12(v16, 1, v10))
  {
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1B3020);
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 32))(v15, v16, v10);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v15, 0, 1, v10);
  }
  return a1;
}

uint64_t assignWithTake for EventVirtualConferenceModelObject(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(void *, uint64_t, uint64_t);
  int v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  void *v20;
  int v21;
  int v22;
  uint64_t v23;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v7;
  swift_bridgeObjectRelease();
  v8 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v8;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  v9 = *(int *)(a3 + 40);
  v10 = (void *)(a1 + v9);
  v11 = (void *)(a2 + v9);
  v12 = sub_1B8B9B054();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v13 + 48);
  v15 = v14(v10, 1, v12);
  v16 = v14(v11, 1, v12);
  if (v15)
  {
    if (!v16)
    {
      (*(void (**)(void *, void *, uint64_t))(v13 + 32))(v10, v11, v12);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v16)
  {
    (*(void (**)(void *, uint64_t))(v13 + 8))(v10, v12);
LABEL_6:
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1B3020);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v13 + 40))(v10, v11, v12);
LABEL_7:
  v18 = *(int *)(a3 + 44);
  v19 = (void *)(a1 + v18);
  v20 = (void *)(a2 + v18);
  v21 = v14((void *)(a1 + v18), 1, v12);
  v22 = v14(v20, 1, v12);
  if (!v21)
  {
    if (!v22)
    {
      (*(void (**)(void *, void *, uint64_t))(v13 + 40))(v19, v20, v12);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v13 + 8))(v19, v12);
    goto LABEL_12;
  }
  if (v22)
  {
LABEL_12:
    v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1B3020);
    memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v13 + 32))(v19, v20, v12);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v19, 0, 1, v12);
  return a1;
}

uint64_t getEnumTagSinglePayload for EventVirtualConferenceModelObject()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1B8B53630(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  int v5;
  uint64_t v9;

  if ((_DWORD)a2 == 2147483646)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    v5 = v4 - 1;
    if (v5 < 0)
      v5 = -1;
    return (v5 + 1);
  }
  else
  {
    v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1B3020);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(a1 + *(int *)(a3 + 40), a2, v9);
  }
}

uint64_t storeEnumTagSinglePayload for EventVirtualConferenceModelObject()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1B8B536C8(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 2147483646)
  {
    *(_QWORD *)(result + 8) = a2;
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1B3020);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 40), a2, a2, v7);
  }
  return result;
}

void sub_1B8B53740()
{
  unint64_t v0;

  sub_1B8AE8FDC();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

_QWORD *initializeBufferWithCopyOfBuffer for EventVirtualConferenceJoinMethodModelObject(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(char *, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v15 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = *(int *)(a3 + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_1B8B9B054();
    v12 = *(_QWORD *)(v11 - 8);
    v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    swift_bridgeObjectRetain();
    if (v13(v10, 1, v11))
    {
      v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1B3020);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    *((_BYTE *)v4 + *(int *)(a3 + 24)) = *((_BYTE *)a2 + *(int *)(a3 + 24));
  }
  return v4;
}

uint64_t destroy for EventVirtualConferenceJoinMethodModelObject(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 20);
  v5 = sub_1B8B9B054();
  v6 = *(_QWORD *)(v5 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  return result;
}

_QWORD *initializeWithCopy for EventVirtualConferenceJoinMethodModelObject(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int (*v12)(char *, uint64_t, uint64_t);
  uint64_t v13;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = *(int *)(a3 + 20);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_1B8B9B054();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  swift_bridgeObjectRetain();
  if (v12(v9, 1, v10))
  {
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1B3020);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  *((_BYTE *)a1 + *(int *)(a3 + 24)) = *((_BYTE *)a2 + *(int *)(a3 + 24));
  return a1;
}

_QWORD *assignWithCopy for EventVirtualConferenceJoinMethodModelObject(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(char *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1B8B9B054();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1B3020);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_7:
  *((_BYTE *)a1 + *(int *)(a3 + 24)) = *((_BYTE *)a2 + *(int *)(a3 + 24));
  return a1;
}

_OWORD *initializeWithTake for EventVirtualConferenceJoinMethodModelObject(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1B8B9B054();
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1B3020);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  *((_BYTE *)a1 + *(int *)(a3 + 24)) = *((_BYTE *)a2 + *(int *)(a3 + 24));
  return a1;
}

_QWORD *assignWithTake for EventVirtualConferenceJoinMethodModelObject(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(char *, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = *(int *)(a3 + 20);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_1B8B9B054();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48);
  v13 = v12(v8, 1, v10);
  v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v8, v9, v10);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v11 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1B3020);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
LABEL_7:
  *((_BYTE *)a1 + *(int *)(a3 + 24)) = *((_BYTE *)a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t getEnumTagSinglePayload for EventVirtualConferenceJoinMethodModelObject()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1B8B53D9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  int v5;
  uint64_t v9;

  if ((_DWORD)a2 == 2147483646)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    v5 = v4 - 1;
    if (v5 < 0)
      v5 = -1;
    return (v5 + 1);
  }
  else
  {
    v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1B3020);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(a1 + *(int *)(a3 + 20), a2, v9);
  }
}

uint64_t storeEnumTagSinglePayload for EventVirtualConferenceJoinMethodModelObject()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1B8B53E34(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 2147483646)
  {
    *(_QWORD *)(result + 8) = a2;
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1B3020);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 20), a2, a2, v7);
  }
  return result;
}

void sub_1B8B53EAC()
{
  unint64_t v0;

  sub_1B8AE8FDC();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t storeEnumTagSinglePayload for EventVirtualConferenceJoinMethodModelObject.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1B8B53F74 + 4 * byte_1B8BAC0CD[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1B8B53FA8 + 4 * byte_1B8BAC0C8[v4]))();
}

uint64_t sub_1B8B53FA8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B8B53FB0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1B8B53FB8);
  return result;
}

uint64_t sub_1B8B53FC4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1B8B53FCCLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1B8B53FD0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B8B53FD8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for EventVirtualConferenceJoinMethodModelObject.CodingKeys()
{
  return &type metadata for EventVirtualConferenceJoinMethodModelObject.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for EventVirtualConferenceModelObject.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 7 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 7) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF9)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF8)
    return ((uint64_t (*)(void))((char *)&loc_1B8B54040 + 4 * byte_1B8BAC0D7[v4]))();
  *a1 = a2 + 7;
  return ((uint64_t (*)(void))((char *)sub_1B8B54074 + 4 * byte_1B8BAC0D2[v4]))();
}

uint64_t sub_1B8B54074(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B8B5407C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1B8B54084);
  return result;
}

uint64_t sub_1B8B54090(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1B8B54098);
  *(_BYTE *)result = a2 + 7;
  return result;
}

uint64_t sub_1B8B5409C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B8B540A4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for EventVirtualConferenceModelObject.CodingKeys()
{
  return &type metadata for EventVirtualConferenceModelObject.CodingKeys;
}

unint64_t sub_1B8B540C4()
{
  unint64_t result;

  result = qword_1EF1BDA50;
  if (!qword_1EF1BDA50)
  {
    result = MEMORY[0x1BCCB79D0](&unk_1B8BAC448, &type metadata for EventVirtualConferenceModelObject.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF1BDA50);
  }
  return result;
}

unint64_t sub_1B8B5410C()
{
  unint64_t result;

  result = qword_1EF1BDA58;
  if (!qword_1EF1BDA58)
  {
    result = MEMORY[0x1BCCB79D0](&unk_1B8BAC500, &type metadata for EventVirtualConferenceJoinMethodModelObject.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF1BDA58);
  }
  return result;
}

unint64_t sub_1B8B54154()
{
  unint64_t result;

  result = qword_1EF1BDA60;
  if (!qword_1EF1BDA60)
  {
    result = MEMORY[0x1BCCB79D0](&unk_1B8BAC470, &type metadata for EventVirtualConferenceJoinMethodModelObject.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF1BDA60);
  }
  return result;
}

unint64_t sub_1B8B5419C()
{
  unint64_t result;

  result = qword_1EF1BDA68;
  if (!qword_1EF1BDA68)
  {
    result = MEMORY[0x1BCCB79D0](&unk_1B8BAC498, &type metadata for EventVirtualConferenceJoinMethodModelObject.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF1BDA68);
  }
  return result;
}

unint64_t sub_1B8B541E4()
{
  unint64_t result;

  result = qword_1EF1BDA70;
  if (!qword_1EF1BDA70)
  {
    result = MEMORY[0x1BCCB79D0](&unk_1B8BAC3B8, &type metadata for EventVirtualConferenceModelObject.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF1BDA70);
  }
  return result;
}

unint64_t sub_1B8B5422C()
{
  unint64_t result;

  result = qword_1EF1BDA78;
  if (!qword_1EF1BDA78)
  {
    result = MEMORY[0x1BCCB79D0](&unk_1B8BAC3E0, &type metadata for EventVirtualConferenceModelObject.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF1BDA78);
  }
  return result;
}

uint64_t sub_1B8B54270(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x656C746974 && a2 == 0xE500000000000000;
  if (v2 || (sub_1B8B9C8D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6874654D6E696F6ALL && a2 == 0xEB0000000073646FLL || (sub_1B8B9C8D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001B8BB8920 || (sub_1B8B9C8D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x80000001B8BB8630 || (sub_1B8B9C8D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6261746972577369 && a2 == 0xEA0000000000656CLL || (sub_1B8B9C8D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x656372756F73 && a2 == 0xE600000000000000 || (sub_1B8B9C8D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001B8BB8650 || (sub_1B8B9C8D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001B8BB8670)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else
  {
    v6 = sub_1B8B9C8D8();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 7;
    else
      return 8;
  }
}

uint64_t sub_1B8B545A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1BDA88);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1B8B545EC(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 176);
}

uint64_t sub_1B8B545F4(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, unint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23)
{
  id v25;

  if ((a23 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  else
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v25 = a3;
    swift_bridgeObjectRetain();
    sub_1B8AF1CDC(a9, a10);
    return sub_1B8B2C120(a12, a13, a14);
  }
}

uint64_t sub_1B8B5472C(uint64_t a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))
{
  char v4;

  v4 = *(_BYTE *)(a1 + 176);
  a2(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_QWORD *)(a1 + 128), *(_QWORD *)(a1 + 136), *(_QWORD *)(a1 + 144),
    *(_QWORD *)(a1 + 152),
    *(_QWORD *)(a1 + 160),
    *(_QWORD *)(a1 + 168),
    v4);
  return a1;
}

uint64_t sub_1B8B54798(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, unint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23)
{
  if ((a23 & 1) != 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1B8ADDBD0(a9, a10);
    return sub_1B8B2C214(a12, a13, a14);
  }
}

BOOL EventSourceModel.isIntegrationSource.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))() == 6;
}

uint64_t dispatch thunk of EventSourceModel.id.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of EventSourceModel.appGroupID.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of EventSourceModel.sourceType.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of EventSourceModel.title.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t dispatch thunk of EventSourceModel.isDelegate.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t dispatch thunk of EventSourceModel.isManaged.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 64))();
}

uint64_t dispatch thunk of EventSourceModel.isWritable.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 72))();
}

uint64_t dispatch thunk of EventSourceModel.isPrimaryLocalSource.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 80))();
}

uint64_t dispatch thunk of EventSourceModel.ownerAddresses.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 88))();
}

uint64_t dispatch thunk of EventSourceModel.preferredEventPrivateValue.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 96))();
}

uint64_t dispatch thunk of EventSourceModel.defaultAlarmOffset.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 104))();
}

uint64_t dispatch thunk of EventSourceModel.defaultAllDayAlarmOffset.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 112))();
}

BOOL EventSourceConstraintsModel.supportsMultipleAlarms.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))() != 0;
}

uint64_t dispatch thunk of EventSourceConstraintsModel.maxAlarmsAllowed.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of EventSourceConstraintsModel.requiresOutgoingInvitationsInDefaultCalendar.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of EventSourceConstraintsModel.eventDurationConstrainedToRecurrenceInterval.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of EventSourceConstraintsModel.occurrencesMustOccurOnSeparateDays.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of EventSourceConstraintsModel.supportsPrivateEvents.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of EventSourceConstraintsModel.supportsAlarmTriggerDates.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t dispatch thunk of EventSourceConstraintsModel.supportsMultipleAlarms.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t dispatch thunk of EventSourceConstraintsModel.requiresOccurrencesConformToRecurrenceRule.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 64))();
}

uint64_t dispatch thunk of EventSourceConstraintsModel.supportsURLField.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 72))();
}

uint64_t dispatch thunk of EventSourceConstraintsModel.supportsFloatingTimeZone.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 80))();
}

uint64_t dispatch thunk of EventSourceConstraintsModel.prohibitsMultipleDaysInMonthlyRecurrence.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 88))();
}

uint64_t dispatch thunk of EventSourceConstraintsModel.prohibitsMultipleMonthsInYearlyRecurrence.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 96))();
}

uint64_t dispatch thunk of EventSourceConstraintsModel.prohibitsYearlyRecurrenceInterval.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 104))();
}

uint64_t dispatch thunk of EventSourceConstraintsModel.canSetAvailability.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 112))();
}

uint64_t dispatch thunk of EventSourceConstraintsModel.eventAvailabilityLimited.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 120))();
}

BOOL sub_1B8B54A2C()
{
  id *v0;

  return objc_msgSend(*v0, sel_maxAlarmsAllowed) != 0;
}

uint64_t EventRecurrenceRuleModelObject.init(recurrenceEnd:frequency:interval:firstDayOfTheWeek:daysOfTheWeek:daysOfTheMonth:daysOfTheYear:weeksOfTheYear:monthsOfTheYear:setPositions:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v14;
  int *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t result;

  v14 = type metadata accessor for EventRecurrenceEndModelObject(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(a9, 1, 1, v14);
  v15 = (int *)type metadata accessor for EventRecurrenceRuleModelObject(0);
  v16 = a9 + v15[7];
  *(_QWORD *)v16 = 0;
  *(_BYTE *)(v16 + 8) = 1;
  v17 = v15[8];
  *(_QWORD *)(a9 + v17) = 0;
  v18 = v15[9];
  *(_QWORD *)(a9 + v18) = 0;
  v19 = v15[10];
  *(_QWORD *)(a9 + v19) = 0;
  v20 = v15[11];
  *(_QWORD *)(a9 + v20) = 0;
  v21 = v15[12];
  *(_QWORD *)(a9 + v21) = 0;
  v22 = v15[13];
  *(_QWORD *)(a9 + v22) = 0;
  sub_1B8B3A864(a1, a9, &qword_1EF1BD3D0);
  *(_QWORD *)(a9 + v15[5]) = a2;
  *(_QWORD *)(a9 + v15[6]) = a3;
  *(_QWORD *)v16 = a4;
  *(_BYTE *)(v16 + 8) = a5 & 1;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a9 + v17) = a6;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a9 + v18) = a7;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a9 + v19) = a8;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a9 + v20) = a10;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a9 + v21) = a11;
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(a9 + v22) = a12;
  return result;
}

uint64_t type metadata accessor for EventRecurrenceEndModelObject(uint64_t a1)
{
  return sub_1B8AE85C4(a1, (uint64_t *)&unk_1EF1B9528);
}

uint64_t type metadata accessor for EventRecurrenceRuleModelObject(uint64_t a1)
{
  return sub_1B8AE85C4(a1, (uint64_t *)&unk_1EF1B9540);
}

uint64_t EventRecurrenceRuleModelObject.recurrenceEnd.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1B8ADE850(v1, a1, &qword_1EF1BD3D0);
}

uint64_t EventRecurrenceRuleModelObject.recurrenceEnd.setter(uint64_t a1)
{
  uint64_t v1;

  return sub_1B8B3A864(a1, v1, &qword_1EF1BD3D0);
}

uint64_t (*EventRecurrenceRuleModelObject.recurrenceEnd.modify())()
{
  return nullsub_1;
}

uint64_t EventRecurrenceRuleModelObject.frequency.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for EventRecurrenceRuleModelObject(0) + 20));
}

uint64_t EventRecurrenceRuleModelObject.frequency.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for EventRecurrenceRuleModelObject(0);
  *(_QWORD *)(v1 + *(int *)(result + 20)) = a1;
  return result;
}

uint64_t (*EventRecurrenceRuleModelObject.frequency.modify())(_QWORD)
{
  type metadata accessor for EventRecurrenceRuleModelObject(0);
  return nullsub_1;
}

uint64_t EventRecurrenceRuleModelObject.interval.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for EventRecurrenceRuleModelObject(0) + 24));
}

uint64_t EventRecurrenceRuleModelObject.interval.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for EventRecurrenceRuleModelObject(0);
  *(_QWORD *)(v1 + *(int *)(result + 24)) = a1;
  return result;
}

uint64_t (*EventRecurrenceRuleModelObject.interval.modify())(_QWORD)
{
  type metadata accessor for EventRecurrenceRuleModelObject(0);
  return nullsub_1;
}

uint64_t EventRecurrenceRuleModelObject.firstDayOfTheWeek.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for EventRecurrenceRuleModelObject(0) + 28));
}

uint64_t EventRecurrenceRuleModelObject.firstDayOfTheWeek.setter(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v6;

  result = type metadata accessor for EventRecurrenceRuleModelObject(0);
  v6 = v2 + *(int *)(result + 28);
  *(_QWORD *)v6 = a1;
  *(_BYTE *)(v6 + 8) = a2 & 1;
  return result;
}

uint64_t (*EventRecurrenceRuleModelObject.firstDayOfTheWeek.modify())(_QWORD)
{
  type metadata accessor for EventRecurrenceRuleModelObject(0);
  return nullsub_1;
}

uint64_t EventRecurrenceRuleModelObject.daysOfTheWeek.getter()
{
  type metadata accessor for EventRecurrenceRuleModelObject(0);
  return swift_bridgeObjectRetain();
}

uint64_t EventRecurrenceRuleModelObject.daysOfTheWeek.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;

  v3 = *(int *)(type metadata accessor for EventRecurrenceRuleModelObject(0) + 32);
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + v3) = a1;
  return result;
}

uint64_t (*EventRecurrenceRuleModelObject.daysOfTheWeek.modify())(_QWORD)
{
  type metadata accessor for EventRecurrenceRuleModelObject(0);
  return nullsub_1;
}

uint64_t EventRecurrenceRuleModelObject.daysOfTheMonth.getter()
{
  type metadata accessor for EventRecurrenceRuleModelObject(0);
  return swift_bridgeObjectRetain();
}

uint64_t EventRecurrenceRuleModelObject.daysOfTheMonth.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;

  v3 = *(int *)(type metadata accessor for EventRecurrenceRuleModelObject(0) + 36);
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + v3) = a1;
  return result;
}

uint64_t (*EventRecurrenceRuleModelObject.daysOfTheMonth.modify())(_QWORD)
{
  type metadata accessor for EventRecurrenceRuleModelObject(0);
  return nullsub_1;
}

uint64_t EventRecurrenceRuleModelObject.daysOfTheYear.getter()
{
  type metadata accessor for EventRecurrenceRuleModelObject(0);
  return swift_bridgeObjectRetain();
}

uint64_t EventRecurrenceRuleModelObject.daysOfTheYear.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;

  v3 = *(int *)(type metadata accessor for EventRecurrenceRuleModelObject(0) + 40);
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + v3) = a1;
  return result;
}

uint64_t (*EventRecurrenceRuleModelObject.daysOfTheYear.modify())(_QWORD)
{
  type metadata accessor for EventRecurrenceRuleModelObject(0);
  return nullsub_1;
}

uint64_t EventRecurrenceRuleModelObject.weeksOfTheYear.getter()
{
  type metadata accessor for EventRecurrenceRuleModelObject(0);
  return swift_bridgeObjectRetain();
}

uint64_t EventRecurrenceRuleModelObject.weeksOfTheYear.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;

  v3 = *(int *)(type metadata accessor for EventRecurrenceRuleModelObject(0) + 44);
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + v3) = a1;
  return result;
}

uint64_t (*EventRecurrenceRuleModelObject.weeksOfTheYear.modify())(_QWORD)
{
  type metadata accessor for EventRecurrenceRuleModelObject(0);
  return nullsub_1;
}

uint64_t EventRecurrenceRuleModelObject.monthsOfTheYear.getter()
{
  type metadata accessor for EventRecurrenceRuleModelObject(0);
  return swift_bridgeObjectRetain();
}

uint64_t EventRecurrenceRuleModelObject.monthsOfTheYear.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;

  v3 = *(int *)(type metadata accessor for EventRecurrenceRuleModelObject(0) + 48);
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + v3) = a1;
  return result;
}

uint64_t (*EventRecurrenceRuleModelObject.monthsOfTheYear.modify())(_QWORD)
{
  type metadata accessor for EventRecurrenceRuleModelObject(0);
  return nullsub_1;
}

uint64_t EventRecurrenceRuleModelObject.setPositions.getter()
{
  type metadata accessor for EventRecurrenceRuleModelObject(0);
  return swift_bridgeObjectRetain();
}

uint64_t EventRecurrenceRuleModelObject.setPositions.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;

  v3 = *(int *)(type metadata accessor for EventRecurrenceRuleModelObject(0) + 52);
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + v3) = a1;
  return result;
}

uint64_t (*EventRecurrenceRuleModelObject.setPositions.modify())(_QWORD)
{
  type metadata accessor for EventRecurrenceRuleModelObject(0);
  return nullsub_1;
}

uint64_t EventRecurrenceRuleModelObject.init(_:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  char *v12;
  void (*v13)(char *, uint64_t, uint64_t, uint64_t);
  char *v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t, uint64_t);
  uint64_t AssociatedTypeWitness;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t *v47;
  char v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  int64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v86;
  char *v87;
  char *v88;
  void (*v89)(char *, uint64_t, uint64_t, uint64_t);
  char *v90;
  uint64_t v91;
  uint64_t *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  _QWORD v101[3];
  uint64_t v102;
  uint64_t v103;
  _QWORD v104[5];
  __int128 v105;
  uint64_t v106;
  uint64_t v107;
  __int128 v108;
  __int128 v109;
  uint64_t AssociatedConformanceWitness;

  v100 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1B2D18);
  MEMORY[0x1E0C80A78](v3);
  v87 = (char *)&v86 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for EventRecurrenceEndModelObject(0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v88 = (char *)&v86 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1BD3D0);
  MEMORY[0x1E0C80A78](v8);
  v90 = (char *)&v86 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = (int *)type metadata accessor for EventRecurrenceRuleModelObject(0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v86 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v91 = v5;
  v89 = v13;
  v13(v12, 1, 1, v5);
  v14 = &v12[v10[7]];
  *(_QWORD *)v14 = 0;
  v92 = (uint64_t *)v14;
  v14[8] = 1;
  v94 = v10[8];
  *(_QWORD *)&v12[v94] = 0;
  v95 = v10[9];
  *(_QWORD *)&v12[v95] = 0;
  v96 = v10[10];
  *(_QWORD *)&v12[v96] = 0;
  v97 = v10[11];
  *(_QWORD *)&v12[v97] = 0;
  v98 = v10[12];
  *(_QWORD *)&v12[v98] = 0;
  v93 = (uint64_t)v10;
  v99 = v10[13];
  *(_QWORD *)&v12[v99] = 0;
  v16 = a1[3];
  v15 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v16);
  v17 = *(void (**)(uint64_t, uint64_t))(v15 + 40);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v19 = sub_1B8B9C50C();
  v20 = *(_QWORD *)(v19 - 8);
  MEMORY[0x1E0C80A78](v19);
  v22 = (char *)&v86 - v21;
  v17(v16, v15);
  v23 = *(_QWORD *)(AssociatedTypeWitness - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v22, 1, AssociatedTypeWitness) == 1)
  {
    (*(void (**)(char *, uint64_t))(v20 + 8))(v22, v19);
    AssociatedConformanceWitness = 0;
    v108 = 0u;
    v109 = 0u;
  }
  else
  {
    *((_QWORD *)&v109 + 1) = AssociatedTypeWitness;
    AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v108);
    (*(void (**)(uint64_t *, char *, uint64_t))(v23 + 32))(boxed_opaque_existential_1, v22, AssociatedTypeWitness);
  }
  sub_1B8ADE850((uint64_t)&v108, (uint64_t)&v105, &qword_1EF1BDB08);
  v25 = (uint64_t)v90;
  if (v106)
  {
    sub_1B8B0BBC8(&v105, (uint64_t)v104);
    sub_1B8B0FC88((uint64_t)v104, (uint64_t)v101);
    v26 = sub_1B8B9B0F0();
    v27 = (uint64_t)v88;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v88, 1, 1, v26);
    v28 = v102;
    v29 = v103;
    __swift_project_boxed_opaque_existential_1(v101, v102);
    v30 = (uint64_t)v87;
    (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v28, v29);
    sub_1B8B3A864(v30, v27, &qword_1ED1B2D18);
    v31 = v102;
    v32 = v103;
    __swift_project_boxed_opaque_existential_1(v101, v102);
    v33 = (*(uint64_t (**)(uint64_t, uint64_t))(v32 + 16))(v31, v32);
    v34 = v91;
    *(_QWORD *)(v27 + *(int *)(v91 + 20)) = v33;
    sub_1B8AE7B90(v27, v25, type metadata accessor for EventRecurrenceEndModelObject);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v101);
    sub_1B8AE7BD4(v27, type metadata accessor for EventRecurrenceEndModelObject);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v104);
    v35 = (char *)v25;
    v36 = 0;
    v37 = v34;
  }
  else
  {
    v35 = v90;
    v36 = 1;
    v37 = v91;
  }
  v89(v35, v36, 1, v37);
  sub_1B8ADE894((uint64_t)&v108, &qword_1EF1BDB08);
  sub_1B8B3A864(v25, (uint64_t)v12, &qword_1EF1BD3D0);
  v38 = a1[3];
  v39 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v38);
  v40 = (*(uint64_t (**)(uint64_t, uint64_t))(v39 + 48))(v38, v39);
  v41 = v93;
  *(_QWORD *)&v12[*(int *)(v93 + 20)] = v40;
  v42 = a1[3];
  v43 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v42);
  *(_QWORD *)&v12[*(int *)(v41 + 24)] = (*(uint64_t (**)(uint64_t, uint64_t))(v43 + 56))(v42, v43);
  v44 = a1[3];
  v45 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v44);
  v46 = (*(uint64_t (**)(uint64_t, uint64_t))(v45 + 64))(v44, v45);
  v47 = v92;
  *v92 = v46;
  *((_BYTE *)v47 + 8) = v48 & 1;
  v49 = a1[3];
  v50 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v49);
  if ((*(uint64_t (**)(uint64_t, uint64_t))(v50 + 72))(v49, v50))
  {
    swift_getAssociatedTypeWitness();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1BDB10);
    v51 = sub_1B8B9C6EC();
    swift_bridgeObjectRelease();
    v52 = *(_QWORD *)(v51 + 16);
    if (v52)
    {
      v104[0] = MEMORY[0x1E0DEE9D8];
      sub_1B8B3756C(0, v52, 0);
      v93 = v51;
      v53 = v51 + 32;
      v54 = v104[0];
      do
      {
        sub_1B8B0FC88(v53, (uint64_t)&v108);
        sub_1B8B0FC88((uint64_t)&v108, (uint64_t)&v105);
        v55 = v106;
        v56 = v107;
        __swift_project_boxed_opaque_existential_1(&v105, v106);
        v57 = (*(uint64_t (**)(uint64_t, uint64_t))(v56 + 8))(v55, v56);
        v58 = v106;
        v59 = v107;
        __swift_project_boxed_opaque_existential_1(&v105, v106);
        v60 = (*(uint64_t (**)(uint64_t, uint64_t))(v59 + 16))(v58, v59);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v105);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v108);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1B8B3756C(0, *(_QWORD *)(v54 + 16) + 1, 1);
          v54 = v104[0];
        }
        v62 = *(_QWORD *)(v54 + 16);
        v61 = *(_QWORD *)(v54 + 24);
        if (v62 >= v61 >> 1)
        {
          sub_1B8B3756C(v61 > 1, v62 + 1, 1);
          v54 = v104[0];
        }
        *(_QWORD *)(v54 + 16) = v62 + 1;
        v63 = v54 + 16 * v62;
        *(_QWORD *)(v63 + 32) = v57;
        *(_QWORD *)(v63 + 40) = v60;
        v53 += 40;
        --v52;
      }
      while (v52);
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      v54 = MEMORY[0x1E0DEE9D8];
    }
  }
  else
  {
    v54 = 0;
  }
  v64 = v94;
  swift_bridgeObjectRelease();
  *(_QWORD *)&v12[v64] = v54;
  v65 = a1[3];
  v66 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v65);
  v67 = (*(uint64_t (**)(uint64_t, uint64_t))(v66 + 80))(v65, v66);
  v68 = v95;
  swift_bridgeObjectRelease();
  *(_QWORD *)&v12[v68] = v67;
  v69 = a1[3];
  v70 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v69);
  v71 = (*(uint64_t (**)(uint64_t, uint64_t))(v70 + 88))(v69, v70);
  v72 = v96;
  swift_bridgeObjectRelease();
  *(_QWORD *)&v12[v72] = v71;
  v73 = a1[3];
  v74 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v73);
  v75 = (*(uint64_t (**)(uint64_t, uint64_t))(v74 + 96))(v73, v74);
  v76 = v97;
  swift_bridgeObjectRelease();
  *(_QWORD *)&v12[v76] = v75;
  v77 = a1[3];
  v78 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v77);
  v79 = (*(uint64_t (**)(uint64_t, uint64_t))(v78 + 104))(v77, v78);
  v80 = v98;
  swift_bridgeObjectRelease();
  *(_QWORD *)&v12[v80] = v79;
  v81 = a1[3];
  v82 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v81);
  v83 = (*(uint64_t (**)(uint64_t, uint64_t))(v82 + 112))(v81, v82);
  v84 = v99;
  swift_bridgeObjectRelease();
  *(_QWORD *)&v12[v84] = v83;
  sub_1B8AE7B90((uint64_t)v12, v100, type metadata accessor for EventRecurrenceRuleModelObject);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return sub_1B8AE7BD4((uint64_t)v12, type metadata accessor for EventRecurrenceRuleModelObject);
}

uint64_t EventRecurrenceEndModelObject.init(_:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1B2D18);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for EventRecurrenceEndModelObject(0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1B8B9B0F0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v9, 1, 1, v10);
  v11 = a1[3];
  v12 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v11);
  (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v11, v12);
  sub_1B8B3A864((uint64_t)v6, (uint64_t)v9, &qword_1ED1B2D18);
  v13 = a1[3];
  v14 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v13);
  *(_QWORD *)&v9[*(int *)(v7 + 20)] = (*(uint64_t (**)(uint64_t, uint64_t))(v14 + 16))(v13, v14);
  sub_1B8AE7B90((uint64_t)v9, a2, type metadata accessor for EventRecurrenceEndModelObject);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return sub_1B8AE7BD4((uint64_t)v9, type metadata accessor for EventRecurrenceEndModelObject);
}

uint64_t EventRecurrenceDayOfWeekModelObject.init(_:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4 = a1[3];
  v5 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v4);
  v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v4, v5);
  v7 = a1[3];
  v8 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v7);
  v9 = (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 16))(v7, v8);
  *a2 = v6;
  a2[1] = v9;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t EventRecurrenceRuleModelObject.hash(into:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  int *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t result;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;

  v1 = v0;
  v2 = sub_1B8B9B0F0();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v37 = (char *)&v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1B2D18);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for EventRecurrenceEndModelObject(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1BD3D0);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v36 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B8ADE850(v1, (uint64_t)v14, &qword_1EF1BD3D0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v14, 1, v8) == 1)
  {
    sub_1B8B9C980();
  }
  else
  {
    sub_1B8B585BC((uint64_t)v14, (uint64_t)v11);
    sub_1B8B9C980();
    sub_1B8ADE850((uint64_t)v11, (uint64_t)v7, &qword_1ED1B2D18);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v7, 1, v2) == 1)
    {
      sub_1B8B9C980();
    }
    else
    {
      v15 = v37;
      (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v37, v7, v2);
      sub_1B8B9C980();
      sub_1B8ADBDEC(&qword_1EF1B8F38, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08A8]);
      sub_1B8B9C0C8();
      (*(void (**)(char *, uint64_t))(v3 + 8))(v15, v2);
    }
    sub_1B8B9C974();
    sub_1B8AE7BD4((uint64_t)v11, type metadata accessor for EventRecurrenceEndModelObject);
  }
  v16 = (int *)type metadata accessor for EventRecurrenceRuleModelObject(0);
  sub_1B8B9C974();
  sub_1B8B9C974();
  if ((*(_BYTE *)(v1 + v16[7] + 8) & 1) != 0)
  {
    sub_1B8B9C980();
  }
  else
  {
    sub_1B8B9C980();
    sub_1B8B9C974();
  }
  v17 = *(_QWORD *)(v1 + v16[8]);
  if (v17)
  {
    sub_1B8B9C980();
    sub_1B8B9C974();
    v18 = *(_QWORD *)(v17 + 16);
    if (v18)
    {
      v19 = v17 + 40;
      do
      {
        sub_1B8B9C974();
        sub_1B8B9C974();
        v19 += 16;
        --v18;
      }
      while (v18);
    }
  }
  else
  {
    sub_1B8B9C980();
  }
  v20 = *(_QWORD *)(v1 + v16[9]);
  if (v20)
  {
    sub_1B8B9C980();
    sub_1B8B9C974();
    v21 = *(_QWORD *)(v20 + 16);
    if (v21)
    {
      v22 = v20 + 32;
      do
      {
        v22 += 8;
        sub_1B8B9C974();
        --v21;
      }
      while (v21);
    }
  }
  else
  {
    sub_1B8B9C980();
  }
  v23 = *(_QWORD *)(v1 + v16[10]);
  if (v23)
  {
    sub_1B8B9C980();
    sub_1B8B9C974();
    v24 = *(_QWORD *)(v23 + 16);
    if (v24)
    {
      v25 = v23 + 32;
      do
      {
        v25 += 8;
        sub_1B8B9C974();
        --v24;
      }
      while (v24);
    }
  }
  else
  {
    sub_1B8B9C980();
  }
  v26 = *(_QWORD *)(v1 + v16[11]);
  if (v26)
  {
    sub_1B8B9C980();
    sub_1B8B9C974();
    v27 = *(_QWORD *)(v26 + 16);
    if (v27)
    {
      v28 = v26 + 32;
      do
      {
        v28 += 8;
        sub_1B8B9C974();
        --v27;
      }
      while (v27);
    }
  }
  else
  {
    sub_1B8B9C980();
  }
  v29 = *(_QWORD *)(v1 + v16[12]);
  if (v29)
  {
    sub_1B8B9C980();
    sub_1B8B9C974();
    v30 = *(_QWORD *)(v29 + 16);
    if (v30)
    {
      v31 = v29 + 32;
      do
      {
        v31 += 8;
        sub_1B8B9C974();
        --v30;
      }
      while (v30);
    }
  }
  else
  {
    sub_1B8B9C980();
  }
  v32 = *(_QWORD *)(v1 + v16[13]);
  if (!v32)
    return sub_1B8B9C980();
  sub_1B8B9C980();
  result = sub_1B8B9C974();
  v34 = *(_QWORD *)(v32 + 16);
  if (v34)
  {
    v35 = v32 + 32;
    do
    {
      v35 += 8;
      result = sub_1B8B9C974();
      --v34;
    }
    while (v34);
  }
  return result;
}

uint64_t sub_1B8B55F94(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1B8B55FD4 + 4 * byte_1B8BAC630[a1]))(0x6E65727275636572, 0xED0000646E456563);
}

uint64_t sub_1B8B55FD4()
{
  return 0x636E657571657266;
}

uint64_t sub_1B8B55FF0()
{
  return 0x6C61767265746E69;
}

unint64_t sub_1B8B56008()
{
  return 0xD000000000000011;
}

uint64_t sub_1B8B56024()
{
  return 0x6854664F73796164;
}

uint64_t sub_1B8B5606C()
{
  return 0x54664F736B656577;
}

uint64_t sub_1B8B56090()
{
  return 0x664F7368746E6F6DLL;
}

uint64_t sub_1B8B560B4()
{
  return 0x7469736F50746573;
}

uint64_t sub_1B8B560D4()
{
  unsigned __int8 *v0;

  return sub_1B8B55F94(*v0);
}

uint64_t sub_1B8B560DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1B8B5A81C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1B8B56100()
{
  sub_1B8B58A18();
  return sub_1B8B9C9E0();
}

uint64_t sub_1B8B56128()
{
  sub_1B8B58A18();
  return sub_1B8B9C9EC();
}

uint64_t EventRecurrenceRuleModelObject.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int *v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v13;
  char v14;
  char v15;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1BDB18);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1B8B58A18();
  sub_1B8B9C9C8();
  LOBYTE(v13) = 0;
  type metadata accessor for EventRecurrenceEndModelObject(0);
  sub_1B8ADBDEC(&qword_1EF1BDB28, type metadata accessor for EventRecurrenceEndModelObject, (uint64_t)&protocol conformance descriptor for EventRecurrenceEndModelObject);
  sub_1B8B9C860();
  if (!v2)
  {
    v9 = (int *)type metadata accessor for EventRecurrenceRuleModelObject(0);
    v13 = *(_QWORD *)(v3 + v9[5]);
    v15 = 1;
    type metadata accessor for EKRecurrenceFrequency(0);
    sub_1B8ADBDEC(&qword_1EF1BDB30, (uint64_t (*)(uint64_t))type metadata accessor for EKRecurrenceFrequency, (uint64_t)&protocol conformance descriptor for EKRecurrenceFrequency);
    sub_1B8B9C8A8();
    LOBYTE(v13) = 2;
    sub_1B8B9C890();
    v10 = (uint64_t *)(v3 + v9[7]);
    v11 = *v10;
    LOBYTE(v10) = *((_BYTE *)v10 + 8);
    v13 = v11;
    v14 = (char)v10;
    v15 = 3;
    type metadata accessor for EKWeekday(0);
    sub_1B8ADBDEC(&qword_1EF1BDB38, (uint64_t (*)(uint64_t))type metadata accessor for EKWeekday, (uint64_t)&protocol conformance descriptor for EKWeekday);
    sub_1B8B9C860();
    v13 = *(_QWORD *)(v3 + v9[8]);
    v15 = 4;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1BDB40);
    sub_1B8B58AA0(&qword_1EF1BDB48, (uint64_t (*)(void))sub_1B8B58A5C, MEMORY[0x1E0DEAF10]);
    sub_1B8B9C860();
    v13 = *(_QWORD *)(v3 + v9[9]);
    v15 = 5;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1BDB58);
    sub_1B8B58B4C(&qword_1EF1BDB60, MEMORY[0x1E0DEB420], MEMORY[0x1E0DEAF10]);
    sub_1B8B9C860();
    v13 = *(_QWORD *)(v3 + v9[10]);
    v15 = 6;
    sub_1B8B9C860();
    v13 = *(_QWORD *)(v3 + v9[11]);
    v15 = 7;
    sub_1B8B9C860();
    v13 = *(_QWORD *)(v3 + v9[12]);
    v15 = 8;
    sub_1B8B9C860();
    v13 = *(_QWORD *)(v3 + v9[13]);
    v15 = 9;
    sub_1B8B9C860();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t EventRecurrenceRuleModelObject.hashValue.getter()
{
  sub_1B8B9C968();
  EventRecurrenceRuleModelObject.hash(into:)();
  return sub_1B8B9C998();
}

uint64_t EventRecurrenceRuleModelObject.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  int *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  _QWORD *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  char v49;

  v34 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1BD3D0);
  MEMORY[0x1E0C80A78](v3);
  v35 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1BDB68);
  v36 = *(_QWORD *)(v5 - 8);
  v37 = v5;
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = (int *)type metadata accessor for EventRecurrenceRuleModelObject(0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for EventRecurrenceEndModelObject(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v10, 1, 1, v11);
  v12 = &v10[v8[7]];
  *(_QWORD *)v12 = 0;
  v12[8] = 1;
  v46 = v8[8];
  *(_QWORD *)&v10[v46] = 0;
  v45 = v8[9];
  *(_QWORD *)&v10[v45] = 0;
  v42 = v8[10];
  *(_QWORD *)&v10[v42] = 0;
  v43 = v8[11];
  *(_QWORD *)&v10[v43] = 0;
  v44 = v8[12];
  *(_QWORD *)&v10[v44] = 0;
  v39 = v8[13];
  v40 = a1;
  *(_QWORD *)&v10[v39] = 0;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1B8B58A18();
  v38 = v7;
  v13 = v41;
  sub_1B8B9C9B0();
  if (v13)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v40);
    sub_1B8ADE894((uint64_t)v10, &qword_1EF1BD3D0);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    v41 = v12;
    LOBYTE(v47) = 0;
    sub_1B8ADBDEC(&qword_1EF1BDB70, type metadata accessor for EventRecurrenceEndModelObject, (uint64_t)&protocol conformance descriptor for EventRecurrenceEndModelObject);
    v14 = (uint64_t)v35;
    sub_1B8B9C7D0();
    v15 = v45;
    sub_1B8B3A864(v14, (uint64_t)v10, &qword_1EF1BD3D0);
    type metadata accessor for EKRecurrenceFrequency(0);
    v49 = 1;
    sub_1B8ADBDEC(&qword_1EF1BDB78, (uint64_t (*)(uint64_t))type metadata accessor for EKRecurrenceFrequency, (uint64_t)&protocol conformance descriptor for EKRecurrenceFrequency);
    sub_1B8B9C818();
    v17 = v42;
    v16 = v43;
    *(_QWORD *)&v10[v8[5]] = v47;
    LOBYTE(v47) = 2;
    *(_QWORD *)&v10[v8[6]] = sub_1B8B9C800();
    type metadata accessor for EKWeekday(0);
    v49 = 3;
    sub_1B8ADBDEC(&qword_1EF1BDB80, (uint64_t (*)(uint64_t))type metadata accessor for EKWeekday, (uint64_t)&protocol conformance descriptor for EKWeekday);
    sub_1B8B9C7D0();
    v19 = v48;
    v20 = v41;
    *(_QWORD *)v41 = v47;
    v20[8] = v19;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1BDB40);
    v49 = 4;
    sub_1B8B58AA0(&qword_1EF1BDB88, (uint64_t (*)(void))sub_1B8B58B08, MEMORY[0x1E0DEAF40]);
    sub_1B8B9C7D0();
    v22 = v46;
    v21 = v47;
    swift_bridgeObjectRelease();
    *(_QWORD *)&v10[v22] = v21;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1BDB58);
    v49 = 5;
    sub_1B8B58B4C(&qword_1EF1BDB98, MEMORY[0x1E0DEB448], MEMORY[0x1E0DEAF40]);
    sub_1B8B9C7D0();
    v23 = v47;
    swift_bridgeObjectRelease();
    *(_QWORD *)&v10[v15] = v23;
    v49 = 6;
    sub_1B8B9C7D0();
    v24 = v47;
    swift_bridgeObjectRelease();
    *(_QWORD *)&v10[v17] = v24;
    v49 = 7;
    sub_1B8B9C7D0();
    v25 = v47;
    swift_bridgeObjectRelease();
    *(_QWORD *)&v10[v16] = v25;
    v26 = v37;
    v49 = 8;
    sub_1B8B9C7D0();
    v27 = v26;
    v28 = v47;
    v29 = v44;
    swift_bridgeObjectRelease();
    *(_QWORD *)&v10[v29] = v28;
    v49 = 9;
    v30 = v38;
    sub_1B8B9C7D0();
    (*(void (**)(char *, uint64_t))(v36 + 8))(v30, v27);
    v31 = v47;
    v32 = v39;
    swift_bridgeObjectRelease();
    *(_QWORD *)&v10[v32] = v31;
    sub_1B8AE7B90((uint64_t)v10, v34, type metadata accessor for EventRecurrenceRuleModelObject);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v40);
    return sub_1B8AE7BD4((uint64_t)v10, type metadata accessor for EventRecurrenceRuleModelObject);
  }
}

uint64_t sub_1B8B56B9C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1B8ADE850(v1, a1, &qword_1EF1BD3D0);
}

uint64_t sub_1B8B56BC0(uint64_t a1)
{
  uint64_t v1;

  return *(_QWORD *)(v1 + *(int *)(a1 + 24));
}

uint64_t sub_1B8B56BCC(uint64_t a1)
{
  uint64_t v1;

  return *(_QWORD *)(v1 + *(int *)(a1 + 28));
}

uint64_t sub_1B8B56BE0()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1B8B56BEC()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1B8B56BF8()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1B8B56C04()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1B8B56C10()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1B8B56C1C()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1B8B56C28()
{
  sub_1B8B9C968();
  EventRecurrenceRuleModelObject.hash(into:)();
  return sub_1B8B9C998();
}

uint64_t sub_1B8B56C68()
{
  sub_1B8B9C968();
  EventRecurrenceRuleModelObject.hash(into:)();
  return sub_1B8B9C998();
}

uint64_t sub_1B8B56CA0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return EventRecurrenceRuleModelObject.init(from:)(a1, a2);
}

uint64_t sub_1B8B56CB4(_QWORD *a1)
{
  return EventRecurrenceRuleModelObject.encode(to:)(a1);
}

uint64_t sub_1B8B56CCC(uint64_t a1)
{
  return sub_1B8B56D10(a1, qword_1EF1BDA90, 0, 1);
}

uint64_t static EventRecurrenceRuleModelObject.daily.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1B8B56EA8(&qword_1EF1BB4F0, (uint64_t)qword_1EF1BDA90, a1);
}

uint64_t sub_1B8B56CFC(uint64_t a1)
{
  return sub_1B8B56D10(a1, qword_1EF1BDAA8, 1, 1);
}

uint64_t sub_1B8B56D10(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1BD3D0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for EventRecurrenceRuleModelObject(0);
  __swift_allocate_value_buffer(v10, a2);
  v11 = __swift_project_value_buffer(v10, (uint64_t)a2);
  v12 = type metadata accessor for EventRecurrenceEndModelObject(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v9, 1, 1, v12);
  return EventRecurrenceRuleModelObject.init(recurrenceEnd:frequency:interval:firstDayOfTheWeek:daysOfTheWeek:daysOfTheMonth:daysOfTheYear:weeksOfTheYear:monthsOfTheYear:setPositions:)((uint64_t)v9, a3, a4, 0, 1, 0, 0, 0, v11, 0, 0, 0);
}

uint64_t static EventRecurrenceRuleModelObject.weekly.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1B8B56EA8(&qword_1EF1BB4F8, (uint64_t)qword_1EF1BDAA8, a1);
}

uint64_t sub_1B8B56E18(uint64_t a1)
{
  return sub_1B8B56D10(a1, qword_1EF1BDAC0, 1, 2);
}

uint64_t static EventRecurrenceRuleModelObject.biweekly.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1B8B56EA8(&qword_1EF1BB500, (uint64_t)qword_1EF1BDAC0, a1);
}

uint64_t sub_1B8B56E48(uint64_t a1)
{
  return sub_1B8B56D10(a1, qword_1EF1BDAD8, 2, 1);
}

uint64_t static EventRecurrenceRuleModelObject.monthly.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1B8B56EA8(&qword_1EF1BB508, (uint64_t)qword_1EF1BDAD8, a1);
}

uint64_t sub_1B8B56E78(uint64_t a1)
{
  return sub_1B8B56D10(a1, qword_1EF1BDAF0, 3, 1);
}

uint64_t static EventRecurrenceRuleModelObject.yearly.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1B8B56EA8(&qword_1EF1BB510, (uint64_t)qword_1EF1BDAF0, a1);
}

uint64_t sub_1B8B56EA8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;

  if (*a1 != -1)
    swift_once();
  v5 = type metadata accessor for EventRecurrenceRuleModelObject(0);
  v6 = __swift_project_value_buffer(v5, a2);
  return sub_1B8AE7B90(v6, a3, type metadata accessor for EventRecurrenceRuleModelObject);
}

uint64_t EventRecurrenceRuleModelObject.isCustom.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  unint64_t v17;
  BOOL v18;
  uint64_t v19;

  v1 = type metadata accessor for EventRecurrenceRuleModelObject(0);
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1BD320);
  v5 = *(_QWORD *)(v2 + 72);
  v6 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1B8BACDA0;
  v8 = (uint64_t (*)(uint64_t))(v7 + v6);
  if (qword_1EF1BB4F0 != -1)
    goto LABEL_22;
  while (1)
  {
    v9 = __swift_project_value_buffer(v1, (uint64_t)qword_1EF1BDA90);
    sub_1B8AE7B90(v9, (uint64_t)v8, type metadata accessor for EventRecurrenceRuleModelObject);
    if (qword_1EF1BB4F8 != -1)
      swift_once();
    v10 = __swift_project_value_buffer(v1, (uint64_t)qword_1EF1BDAA8);
    sub_1B8AE7B90(v10, (uint64_t)v8 + v5, type metadata accessor for EventRecurrenceRuleModelObject);
    if (qword_1EF1BB500 != -1)
      swift_once();
    v11 = __swift_project_value_buffer(v1, (uint64_t)qword_1EF1BDAC0);
    sub_1B8AE7B90(v11, (uint64_t)v8 + 2 * v5, type metadata accessor for EventRecurrenceRuleModelObject);
    if (qword_1EF1BB508 != -1)
      swift_once();
    v12 = __swift_project_value_buffer(v1, (uint64_t)qword_1EF1BDAD8);
    sub_1B8AE7B90(v12, (uint64_t)v8 + 3 * v5, type metadata accessor for EventRecurrenceRuleModelObject);
    if (qword_1EF1BB510 != -1)
      swift_once();
    v13 = __swift_project_value_buffer(v1, (uint64_t)qword_1EF1BDAF0);
    sub_1B8AE7B90(v13, (uint64_t)v8 + 4 * v5, type metadata accessor for EventRecurrenceRuleModelObject);
    v14 = *(_QWORD *)(v7 + 16);
    if (!v14)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    sub_1B8AE7B90((uint64_t)v8, (uint64_t)v4, type metadata accessor for EventRecurrenceRuleModelObject);
    v15 = _s13CalendarUIKit30EventRecurrenceRuleModelObjectV2eeoiySbAC_ACtFZ_0((uint64_t)v4, v0);
    swift_bridgeObjectRetain();
    sub_1B8AE7BD4((uint64_t)v4, type metadata accessor for EventRecurrenceRuleModelObject);
    if (v15)
    {
LABEL_12:
      swift_bridgeObjectRelease_n();
      return 0;
    }
    if (v14 == 1)
      break;
    v1 = v7 + v5 + v6;
    v6 = 1;
    v8 = type metadata accessor for EventRecurrenceRuleModelObject;
    while (1)
    {
      sub_1B8AE7B90(v1, (uint64_t)v4, type metadata accessor for EventRecurrenceRuleModelObject);
      v17 = v6 + 1;
      if (__OFADD__(v6, 1))
        break;
      v18 = _s13CalendarUIKit30EventRecurrenceRuleModelObjectV2eeoiySbAC_ACtFZ_0((uint64_t)v4, v0);
      sub_1B8AE7BD4((uint64_t)v4, type metadata accessor for EventRecurrenceRuleModelObject);
      if (v18)
        goto LABEL_12;
      ++v6;
      v1 += v5;
      if (v17 == v14)
        goto LABEL_19;
    }
    __break(1u);
LABEL_22:
    swift_once();
  }
LABEL_19:
  swift_bridgeObjectRelease_n();
  return 1;
}

uint64_t EventRecurrenceDayOfWeekModelObject.dayOfTheWeek.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t EventRecurrenceDayOfWeekModelObject.dayOfTheWeek.setter(uint64_t result)
{
  _QWORD *v1;

  *v1 = result;
  return result;
}

uint64_t (*EventRecurrenceDayOfWeekModelObject.dayOfTheWeek.modify())()
{
  return nullsub_1;
}

uint64_t EventRecurrenceDayOfWeekModelObject.weekNumber.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 8);
}

uint64_t EventRecurrenceDayOfWeekModelObject.weekNumber.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 8) = result;
  return result;
}

uint64_t (*EventRecurrenceDayOfWeekModelObject.weekNumber.modify())()
{
  return nullsub_1;
}

uint64_t EventRecurrenceDayOfWeekModelObject.init(dayOfTheWeek:weekNumber:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  *a3 = result;
  a3[1] = a2;
  return result;
}

uint64_t EventRecurrenceDayOfWeekModelObject.hash(into:)()
{
  sub_1B8B9C974();
  return sub_1B8B9C974();
}

BOOL static EventRecurrenceDayOfWeekModelObject.== infix(_:_:)(_QWORD *a1, _QWORD *a2)
{
  return *a1 == *a2 && a1[1] == a2[1];
}

uint64_t sub_1B8B572B4()
{
  _BYTE *v0;

  if (*v0)
    return 0x626D754E6B656577;
  else
    return 0x656854664F796164;
}

uint64_t sub_1B8B572FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1B8B5AD08(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1B8B57320()
{
  sub_1B8B58BAC();
  return sub_1B8B9C9E0();
}

uint64_t sub_1B8B57348()
{
  sub_1B8B58BAC();
  return sub_1B8B9C9EC();
}

uint64_t EventRecurrenceDayOfWeekModelObject.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v10;
  char v11;
  char v12;
  uint64_t v13;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1BDBA0);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v1;
  v10 = v1[1];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1B8B58BAC();
  sub_1B8B9C9C8();
  v13 = v8;
  v12 = 0;
  type metadata accessor for EKWeekday(0);
  sub_1B8ADBDEC(&qword_1EF1BDB38, (uint64_t (*)(uint64_t))type metadata accessor for EKWeekday, (uint64_t)&protocol conformance descriptor for EKWeekday);
  sub_1B8B9C8A8();
  if (!v2)
  {
    v11 = 1;
    sub_1B8B9C890();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t EventRecurrenceDayOfWeekModelObject.hashValue.getter()
{
  sub_1B8B9C968();
  sub_1B8B9C974();
  sub_1B8B9C974();
  return sub_1B8B9C998();
}

uint64_t EventRecurrenceDayOfWeekModelObject.init(from:)@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE v12[16];
  uint64_t v13;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1BDBB0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = &v12[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1B8B58BAC();
  sub_1B8B9C9B0();
  if (!v2)
  {
    type metadata accessor for EKWeekday(0);
    v12[15] = 0;
    sub_1B8ADBDEC(&qword_1EF1BDB80, (uint64_t (*)(uint64_t))type metadata accessor for EKWeekday, (uint64_t)&protocol conformance descriptor for EKWeekday);
    sub_1B8B9C818();
    v9 = v13;
    v12[14] = 1;
    v10 = sub_1B8B9C800();
    (*(void (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v9;
    a2[1] = v10;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1B8B576A0()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 8);
}

uint64_t sub_1B8B576A8()
{
  sub_1B8B9C968();
  sub_1B8B9C974();
  sub_1B8B9C974();
  return sub_1B8B9C998();
}

uint64_t sub_1B8B57700()
{
  sub_1B8B9C974();
  return sub_1B8B9C974();
}

uint64_t sub_1B8B57738()
{
  sub_1B8B9C968();
  sub_1B8B9C974();
  sub_1B8B9C974();
  return sub_1B8B9C998();
}

uint64_t sub_1B8B5778C@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return EventRecurrenceDayOfWeekModelObject.init(from:)(a1, a2);
}

uint64_t sub_1B8B577A0(_QWORD *a1)
{
  return EventRecurrenceDayOfWeekModelObject.encode(to:)(a1);
}

BOOL sub_1B8B577B4(_QWORD *a1, _QWORD *a2)
{
  return *a1 == *a2 && a1[1] == a2[1];
}

uint64_t EventRecurrenceEndModelObject.endDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1B8ADE850(v1, a1, &qword_1ED1B2D18);
}

uint64_t EventRecurrenceEndModelObject.endDate.setter(uint64_t a1)
{
  uint64_t v1;

  return sub_1B8B3A864(a1, v1, &qword_1ED1B2D18);
}

uint64_t (*EventRecurrenceEndModelObject.endDate.modify())()
{
  return nullsub_1;
}

uint64_t EventRecurrenceEndModelObject.occurrenceCount.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for EventRecurrenceEndModelObject(0) + 20));
}

uint64_t EventRecurrenceEndModelObject.occurrenceCount.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for EventRecurrenceEndModelObject(0);
  *(_QWORD *)(v1 + *(int *)(result + 20)) = a1;
  return result;
}

uint64_t (*EventRecurrenceEndModelObject.occurrenceCount.modify())(_QWORD)
{
  type metadata accessor for EventRecurrenceEndModelObject(0);
  return nullsub_1;
}

uint64_t EventRecurrenceEndModelObject.init(endDate:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t result;

  v4 = sub_1B8B9B0F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a2, 1, 1, v4);
  sub_1B8B3A864(a1, a2, &qword_1ED1B2D18);
  result = type metadata accessor for EventRecurrenceEndModelObject(0);
  *(_QWORD *)(a2 + *(int *)(result + 20)) = 0;
  return result;
}

uint64_t EventRecurrenceEndModelObject.init(occurrenceCount:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t result;

  v4 = sub_1B8B9B0F0();
  v5 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56);
  v5(a2, 1, 1, v4);
  sub_1B8ADE894(a2, &qword_1ED1B2D18);
  v5(a2, 1, 1, v4);
  result = type metadata accessor for EventRecurrenceEndModelObject(0);
  *(_QWORD *)(a2 + *(int *)(result + 20)) = a1;
  return result;
}

uint64_t EventRecurrenceEndModelObject.hash(into:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v10;

  v1 = v0;
  v2 = sub_1B8B9B0F0();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1B2D18);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B8ADE850(v1, (uint64_t)v8, &qword_1ED1B2D18);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v8, 1, v2) == 1)
  {
    sub_1B8B9C980();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v8, v2);
    sub_1B8B9C980();
    sub_1B8ADBDEC(&qword_1EF1B8F38, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08A8]);
    sub_1B8B9C0C8();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  type metadata accessor for EventRecurrenceEndModelObject(0);
  return sub_1B8B9C974();
}

uint64_t sub_1B8B57AE8()
{
  _BYTE *v0;

  if (*v0)
    return 0x6E6572727563636FLL;
  else
    return 0x65746144646E65;
}

uint64_t sub_1B8B57B30@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1B8B5AE1C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1B8B57B54()
{
  sub_1B8B58F0C();
  return sub_1B8B9C9E0();
}

uint64_t sub_1B8B57B7C()
{
  sub_1B8B58F0C();
  return sub_1B8B9C9EC();
}

uint64_t EventRecurrenceEndModelObject.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  _BYTE v8[16];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1BDBB8);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1B8B58F0C();
  sub_1B8B9C9C8();
  v8[15] = 0;
  sub_1B8B9B0F0();
  sub_1B8ADBDEC(&qword_1EF1B8F30, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB0890]);
  sub_1B8B9C860();
  if (!v1)
  {
    type metadata accessor for EventRecurrenceEndModelObject(0);
    v8[14] = 1;
    sub_1B8B9C890();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t EventRecurrenceEndModelObject.hashValue.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v10;

  v1 = v0;
  v2 = sub_1B8B9B0F0();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1B2D18);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B8B9C968();
  sub_1B8ADE850(v1, (uint64_t)v8, &qword_1ED1B2D18);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v8, 1, v2) == 1)
  {
    sub_1B8B9C980();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v8, v2);
    sub_1B8B9C980();
    sub_1B8ADBDEC(&qword_1EF1B8F38, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08A8]);
    sub_1B8B9C0C8();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  type metadata accessor for EventRecurrenceEndModelObject(0);
  sub_1B8B9C974();
  return sub_1B8B9C998();
}

uint64_t EventRecurrenceEndModelObject.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  char v24;

  v20 = a2;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1B2D18);
  MEMORY[0x1E0C80A78](v4);
  v22 = (uint64_t)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1BDBC8);
  v19 = *(_QWORD *)(v21 - 8);
  MEMORY[0x1E0C80A78](v21);
  v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for EventRecurrenceEndModelObject(0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1B8B9B0F0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v10, 1, 1, v11);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1B8B58F0C();
  sub_1B8B9C9B0();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    return sub_1B8ADE894((uint64_t)v10, &qword_1ED1B2D18);
  }
  else
  {
    v18 = v8;
    v13 = v19;
    v12 = v20;
    v24 = 0;
    sub_1B8ADBDEC(&qword_1EF1BDBD0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08C0]);
    v14 = v21;
    sub_1B8B9C7D0();
    sub_1B8B3A864(v22, (uint64_t)v10, &qword_1ED1B2D18);
    v23 = 1;
    v15 = sub_1B8B9C800();
    (*(void (**)(char *, uint64_t))(v13 + 8))(v7, v14);
    *(_QWORD *)&v10[*(int *)(v18 + 20)] = v15;
    sub_1B8AE7B90((uint64_t)v10, v12, type metadata accessor for EventRecurrenceEndModelObject);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    return sub_1B8AE7BD4((uint64_t)v10, type metadata accessor for EventRecurrenceEndModelObject);
  }
}

uint64_t sub_1B8B580D8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1B8ADE850(v1, a1, &qword_1ED1B2D18);
}

uint64_t sub_1B8B580FC(uint64_t a1)
{
  uint64_t v1;

  return *(_QWORD *)(v1 + *(int *)(a1 + 20));
}

uint64_t sub_1B8B5810C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v10;

  v1 = v0;
  v2 = sub_1B8B9B0F0();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1B2D18);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B8ADE850(v1, (uint64_t)v8, &qword_1ED1B2D18);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v8, 1, v2) == 1)
  {
    sub_1B8B9C980();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v8, v2);
    sub_1B8B9C980();
    sub_1B8ADBDEC(&qword_1EF1B8F38, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08A8]);
    sub_1B8B9C0C8();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  return sub_1B8B9C974();
}

uint64_t sub_1B8B5826C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v10;

  v1 = v0;
  v2 = sub_1B8B9B0F0();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1B2D18);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B8B9C968();
  sub_1B8ADE850(v1, (uint64_t)v8, &qword_1ED1B2D18);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v8, 1, v2) == 1)
  {
    sub_1B8B9C980();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v8, v2);
    sub_1B8B9C980();
    sub_1B8ADBDEC(&qword_1EF1B8F38, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08A8]);
    sub_1B8B9C0C8();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  sub_1B8B9C974();
  return sub_1B8B9C998();
}

uint64_t sub_1B8B583E0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return EventRecurrenceEndModelObject.init(from:)(a1, a2);
}

uint64_t sub_1B8B583F4(_QWORD *a1)
{
  return EventRecurrenceEndModelObject.encode(to:)(a1);
}

uint64_t sub_1B8B5840C()
{
  sub_1B8ADBDEC(&qword_1EF1BDC40, (uint64_t (*)(uint64_t))type metadata accessor for EKWeekday, (uint64_t)&unk_1B8BA5860);
  return sub_1B8B9C2C0();
}

uint64_t sub_1B8B58480()
{
  sub_1B8ADBDEC(&qword_1EF1BDC40, (uint64_t (*)(uint64_t))type metadata accessor for EKWeekday, (uint64_t)&unk_1B8BA5860);
  return sub_1B8B9C2A8();
}

uint64_t sub_1B8B584E4()
{
  sub_1B8ADBDEC(&qword_1EF1BDC38, (uint64_t (*)(uint64_t))type metadata accessor for EKRecurrenceFrequency, (uint64_t)&unk_1B8BA5714);
  return sub_1B8B9C2C0();
}

uint64_t sub_1B8B58558()
{
  sub_1B8ADBDEC(&qword_1EF1BDC38, (uint64_t (*)(uint64_t))type metadata accessor for EKRecurrenceFrequency, (uint64_t)&unk_1B8BA5714);
  return sub_1B8B9C2A8();
}

uint64_t sub_1B8B585BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for EventRecurrenceEndModelObject(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

BOOL _s13CalendarUIKit30EventRecurrenceRuleModelObjectV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  unsigned int (*v20)(uint64_t, uint64_t, uint64_t);
  uint64_t v21;
  BOOL v22;
  int *v23;
  uint64_t v24;
  uint64_t v25;
  int *v26;
  uint64_t v27;
  _QWORD *v28;
  char v29;
  _QWORD *v30;
  int v31;
  uint64_t v32;
  int64x2_t *v33;
  int64x2_t *v34;
  uint64_t v35;
  _QWORD *v36;
  _QWORD *v37;
  uint64_t v38;
  _QWORD *v39;
  _QWORD *v40;
  uint64_t v41;
  _QWORD *v42;
  _QWORD *v43;
  uint64_t v44;
  _QWORD *v45;
  _QWORD *v46;
  uint64_t v47;
  _QWORD *v48;
  _QWORD *v49;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;

  v4 = type metadata accessor for EventRecurrenceEndModelObject(0);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v52 = (uint64_t)&v51 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1BDC50);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v51 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1BD3D0);
  v11 = MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v51 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x1E0C80A78](v11);
  v16 = (char *)&v51 - v15;
  MEMORY[0x1E0C80A78](v14);
  v18 = (char *)&v51 - v17;
  v53 = a1;
  sub_1B8ADE850(a1, (uint64_t)&v51 - v17, &qword_1EF1BD3D0);
  v54 = a2;
  sub_1B8ADE850(a2, (uint64_t)v16, &qword_1EF1BD3D0);
  v19 = (uint64_t)&v9[*(int *)(v7 + 48)];
  sub_1B8ADE850((uint64_t)v18, (uint64_t)v9, &qword_1EF1BD3D0);
  sub_1B8ADE850((uint64_t)v16, v19, &qword_1EF1BD3D0);
  v20 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (v20((uint64_t)v9, 1, v4) != 1)
  {
    sub_1B8ADE850((uint64_t)v9, (uint64_t)v13, &qword_1EF1BD3D0);
    if (v20(v19, 1, v4) != 1)
    {
      v21 = v52;
      sub_1B8B585BC(v19, v52);
      v22 = _s13CalendarUIKit29EventRecurrenceEndModelObjectV2eeoiySbAC_ACtFZ_0((uint64_t)v13, v21);
      sub_1B8AE7BD4(v21, type metadata accessor for EventRecurrenceEndModelObject);
      sub_1B8ADE894((uint64_t)v16, &qword_1EF1BD3D0);
      sub_1B8ADE894((uint64_t)v18, &qword_1EF1BD3D0);
      sub_1B8AE7BD4((uint64_t)v13, type metadata accessor for EventRecurrenceEndModelObject);
      sub_1B8ADE894((uint64_t)v9, &qword_1EF1BD3D0);
      if (!v22)
        return 0;
      goto LABEL_8;
    }
    sub_1B8ADE894((uint64_t)v16, &qword_1EF1BD3D0);
    sub_1B8ADE894((uint64_t)v18, &qword_1EF1BD3D0);
    sub_1B8AE7BD4((uint64_t)v13, type metadata accessor for EventRecurrenceEndModelObject);
LABEL_6:
    sub_1B8ADE894((uint64_t)v9, &qword_1EF1BDC50);
    return 0;
  }
  sub_1B8ADE894((uint64_t)v16, &qword_1EF1BD3D0);
  sub_1B8ADE894((uint64_t)v18, &qword_1EF1BD3D0);
  if (v20(v19, 1, v4) != 1)
    goto LABEL_6;
  sub_1B8ADE894((uint64_t)v9, &qword_1EF1BD3D0);
LABEL_8:
  v23 = (int *)type metadata accessor for EventRecurrenceRuleModelObject(0);
  v25 = v53;
  v24 = v54;
  if (*(_QWORD *)(v53 + v23[5]) != *(_QWORD *)(v54 + v23[5]))
    return 0;
  v26 = v23;
  if (*(_QWORD *)(v53 + v23[6]) != *(_QWORD *)(v54 + v23[6]))
    return 0;
  v27 = v23[7];
  v28 = (_QWORD *)(v53 + v27);
  v29 = *(_BYTE *)(v53 + v27 + 8);
  v30 = (_QWORD *)(v54 + v27);
  v31 = *(unsigned __int8 *)(v54 + v27 + 8);
  if ((v29 & 1) != 0)
  {
    if (!v31)
      return 0;
  }
  else
  {
    if (*v28 != *v30)
      LOBYTE(v31) = 1;
    if ((v31 & 1) != 0)
      return 0;
  }
  v32 = v23[8];
  v33 = *(int64x2_t **)(v53 + v32);
  v34 = *(int64x2_t **)(v54 + v32);
  if (v33)
  {
    if (!v34 || (sub_1B8B88980(v33, v34) & 1) == 0)
      return 0;
  }
  else if (v34)
  {
    return 0;
  }
  v35 = v26[9];
  v36 = *(_QWORD **)(v25 + v35);
  v37 = *(_QWORD **)(v24 + v35);
  if (v36)
  {
    if (!v37 || !sub_1B8B889F0(v36, v37))
      return 0;
  }
  else if (v37)
  {
    return 0;
  }
  v38 = v26[10];
  v39 = *(_QWORD **)(v25 + v38);
  v40 = *(_QWORD **)(v24 + v38);
  if (v39)
  {
    if (!v40 || !sub_1B8B889F0(v39, v40))
      return 0;
  }
  else if (v40)
  {
    return 0;
  }
  v41 = v26[11];
  v42 = *(_QWORD **)(v25 + v41);
  v43 = *(_QWORD **)(v24 + v41);
  if (v42)
  {
    if (!v43 || !sub_1B8B889F0(v42, v43))
      return 0;
  }
  else if (v43)
  {
    return 0;
  }
  v44 = v26[12];
  v45 = *(_QWORD **)(v25 + v44);
  v46 = *(_QWORD **)(v24 + v44);
  if (v45)
  {
    if (!v46 || !sub_1B8B889F0(v45, v46))
      return 0;
  }
  else if (v46)
  {
    return 0;
  }
  v47 = v26[13];
  v48 = *(_QWORD **)(v25 + v47);
  v49 = *(_QWORD **)(v24 + v47);
  if (v48)
    return v49 && sub_1B8B889F0(v48, v49);
  return !v49;
}

unint64_t sub_1B8B58A18()
{
  unint64_t result;

  result = qword_1EF1BDB20;
  if (!qword_1EF1BDB20)
  {
    result = MEMORY[0x1BCCB79D0](&unk_1B8BACD44, &type metadata for EventRecurrenceRuleModelObject.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF1BDB20);
  }
  return result;
}

unint64_t sub_1B8B58A5C()
{
  unint64_t result;

  result = qword_1EF1BDB50;
  if (!qword_1EF1BDB50)
  {
    result = MEMORY[0x1BCCB79D0](&protocol conformance descriptor for EventRecurrenceDayOfWeekModelObject, &type metadata for EventRecurrenceDayOfWeekModelObject);
    atomic_store(result, (unint64_t *)&qword_1EF1BDB50);
  }
  return result;
}

uint64_t sub_1B8B58AA0(unint64_t *a1, uint64_t (*a2)(void), uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    v7 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EF1BDB40);
    v8 = a2();
    result = MEMORY[0x1BCCB79D0](a3, v7, &v8);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1B8B58B08()
{
  unint64_t result;

  result = qword_1EF1BDB90;
  if (!qword_1EF1BDB90)
  {
    result = MEMORY[0x1BCCB79D0](&protocol conformance descriptor for EventRecurrenceDayOfWeekModelObject, &type metadata for EventRecurrenceDayOfWeekModelObject);
    atomic_store(result, (unint64_t *)&qword_1EF1BDB90);
  }
  return result;
}

uint64_t sub_1B8B58B4C(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    v7 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EF1BDB58);
    v8 = a2;
    result = MEMORY[0x1BCCB79D0](a3, v7, &v8);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1B8B58BAC()
{
  unint64_t result;

  result = qword_1EF1BDBA8;
  if (!qword_1EF1BDBA8)
  {
    result = MEMORY[0x1BCCB79D0](&unk_1B8BACCF4, &type metadata for EventRecurrenceDayOfWeekModelObject.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF1BDBA8);
  }
  return result;
}

BOOL _s13CalendarUIKit29EventRecurrenceEndModelObjectV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  unsigned int (*v20)(uint64_t, uint64_t, uint64_t);
  char *v21;
  char v22;
  void (*v23)(char *, uint64_t);
  uint64_t v24;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;

  v4 = sub_1B8B9B0F0();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v27 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1BDC48);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1B2D18);
  v11 = MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x1E0C80A78](v11);
  v16 = (char *)&v26 - v15;
  MEMORY[0x1E0C80A78](v14);
  v18 = (char *)&v26 - v17;
  v28 = a1;
  sub_1B8ADE850(a1, (uint64_t)&v26 - v17, &qword_1ED1B2D18);
  v29 = a2;
  sub_1B8ADE850(a2, (uint64_t)v16, &qword_1ED1B2D18);
  v19 = (uint64_t)&v9[*(int *)(v7 + 48)];
  sub_1B8ADE850((uint64_t)v18, (uint64_t)v9, &qword_1ED1B2D18);
  sub_1B8ADE850((uint64_t)v16, v19, &qword_1ED1B2D18);
  v20 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (v20((uint64_t)v9, 1, v4) == 1)
  {
    sub_1B8ADE894((uint64_t)v16, &qword_1ED1B2D18);
    sub_1B8ADE894((uint64_t)v18, &qword_1ED1B2D18);
    if (v20(v19, 1, v4) == 1)
    {
      sub_1B8ADE894((uint64_t)v9, &qword_1ED1B2D18);
LABEL_8:
      v24 = type metadata accessor for EventRecurrenceEndModelObject(0);
      return *(_QWORD *)(v28 + *(int *)(v24 + 20)) == *(_QWORD *)(v29 + *(int *)(v24 + 20));
    }
    goto LABEL_6;
  }
  sub_1B8ADE850((uint64_t)v9, (uint64_t)v13, &qword_1ED1B2D18);
  if (v20(v19, 1, v4) == 1)
  {
    sub_1B8ADE894((uint64_t)v16, &qword_1ED1B2D18);
    sub_1B8ADE894((uint64_t)v18, &qword_1ED1B2D18);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v13, v4);
LABEL_6:
    sub_1B8ADE894((uint64_t)v9, &qword_1EF1BDC48);
    return 0;
  }
  v21 = v27;
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 32))(v27, v19, v4);
  sub_1B8ADBDEC((unint64_t *)&qword_1EF1BC968, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08B8]);
  v22 = sub_1B8B9C0EC();
  v23 = *(void (**)(char *, uint64_t))(v5 + 8);
  v23(v21, v4);
  sub_1B8ADE894((uint64_t)v16, &qword_1ED1B2D18);
  sub_1B8ADE894((uint64_t)v18, &qword_1ED1B2D18);
  v23(v13, v4);
  sub_1B8ADE894((uint64_t)v9, &qword_1ED1B2D18);
  if ((v22 & 1) != 0)
    goto LABEL_8;
  return 0;
}

unint64_t sub_1B8B58F0C()
{
  unint64_t result;

  result = qword_1EF1BDBC0;
  if (!qword_1EF1BDBC0)
  {
    result = MEMORY[0x1BCCB79D0](&unk_1B8BACCA4, &type metadata for EventRecurrenceEndModelObject.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF1BDBC0);
  }
  return result;
}

_UNKNOWN **sub_1B8B58F50()
{
  return &protocol witness table for EventRecurrenceDayOfWeekModelObject;
}

_UNKNOWN **sub_1B8B58F5C()
{
  return &protocol witness table for EventRecurrenceEndModelObject;
}

uint64_t sub_1B8B58F68()
{
  return sub_1B8ADBDEC(&qword_1EF1BDBD8, type metadata accessor for EventRecurrenceRuleModelObject, (uint64_t)&protocol conformance descriptor for EventRecurrenceRuleModelObject);
}

unint64_t sub_1B8B58F98()
{
  unint64_t result;

  result = qword_1EF1BDBE0;
  if (!qword_1EF1BDBE0)
  {
    result = MEMORY[0x1BCCB79D0](&protocol conformance descriptor for EventRecurrenceDayOfWeekModelObject, &type metadata for EventRecurrenceDayOfWeekModelObject);
    atomic_store(result, (unint64_t *)&qword_1EF1BDBE0);
  }
  return result;
}

uint64_t sub_1B8B58FDC()
{
  return sub_1B8ADBDEC(&qword_1EF1BDBE8, type metadata accessor for EventRecurrenceEndModelObject, (uint64_t)&protocol conformance descriptor for EventRecurrenceEndModelObject);
}

uint64_t *initializeBufferWithCopyOfBuffer for EventRecurrenceRuleModelObject(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for EventRecurrenceEndModelObject(0);
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1BD3D0);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    else
    {
      v11 = sub_1B8B9B0F0();
      v12 = *(_QWORD *)(v11 - 8);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v12 + 48))(a2, 1, v11))
      {
        v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1B2D18);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
      }
      else
      {
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v12 + 16))(a1, a2, v11);
        (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v12 + 56))(a1, 0, 1, v11);
      }
      *(uint64_t *)((char *)a1 + *(int *)(v7 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(v7 + 20));
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    v14 = a3[6];
    *(uint64_t *)((char *)a1 + a3[5]) = *(uint64_t *)((char *)a2 + a3[5]);
    *(uint64_t *)((char *)a1 + v14) = *(uint64_t *)((char *)a2 + v14);
    v15 = a3[7];
    v16 = a3[8];
    v17 = (char *)a1 + v15;
    v18 = (char *)a2 + v15;
    *(_QWORD *)v17 = *(_QWORD *)v18;
    v17[8] = v18[8];
    *(uint64_t *)((char *)a1 + v16) = *(uint64_t *)((char *)a2 + v16);
    v19 = a3[10];
    *(uint64_t *)((char *)a1 + a3[9]) = *(uint64_t *)((char *)a2 + a3[9]);
    *(uint64_t *)((char *)a1 + v19) = *(uint64_t *)((char *)a2 + v19);
    v20 = a3[12];
    *(uint64_t *)((char *)a1 + a3[11]) = *(uint64_t *)((char *)a2 + a3[11]);
    *(uint64_t *)((char *)a1 + v20) = *(uint64_t *)((char *)a2 + v20);
    *(uint64_t *)((char *)a1 + a3[13]) = *(uint64_t *)((char *)a2 + a3[13]);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for EventRecurrenceRuleModelObject(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = type metadata accessor for EventRecurrenceEndModelObject(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 48))(a1, 1, v2))
  {
    v3 = sub_1B8B9B0F0();
    v4 = *(_QWORD *)(v3 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(a1, 1, v3))
      (*(void (**)(uint64_t, uint64_t))(v4 + 8))(a1, v3);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

char *initializeWithCopy for EventRecurrenceRuleModelObject(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;

  v6 = type metadata accessor for EventRecurrenceEndModelObject(0);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1BD3D0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    v9 = sub_1B8B9B0F0();
    v10 = *(_QWORD *)(v9 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(a2, 1, v9))
    {
      v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1B2D18);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(a1, a2, v9);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(a1, 0, 1, v9);
    }
    *(_QWORD *)&a1[*(int *)(v6 + 20)] = *(_QWORD *)&a2[*(int *)(v6 + 20)];
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v12 = a3[6];
  *(_QWORD *)&a1[a3[5]] = *(_QWORD *)&a2[a3[5]];
  *(_QWORD *)&a1[v12] = *(_QWORD *)&a2[v12];
  v13 = a3[7];
  v14 = a3[8];
  v15 = &a1[v13];
  v16 = &a2[v13];
  *(_QWORD *)v15 = *(_QWORD *)v16;
  v15[8] = v16[8];
  *(_QWORD *)&a1[v14] = *(_QWORD *)&a2[v14];
  v17 = a3[10];
  *(_QWORD *)&a1[a3[9]] = *(_QWORD *)&a2[a3[9]];
  *(_QWORD *)&a1[v17] = *(_QWORD *)&a2[v17];
  v18 = a3[12];
  *(_QWORD *)&a1[a3[11]] = *(_QWORD *)&a2[a3[11]];
  *(_QWORD *)&a1[v18] = *(_QWORD *)&a2[v18];
  *(_QWORD *)&a1[a3[13]] = *(_QWORD *)&a2[a3[13]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

char *assignWithCopy for EventRecurrenceRuleModelObject(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(char *, uint64_t, uint64_t);
  int v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;

  v6 = type metadata accessor for EventRecurrenceEndModelObject(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (v10)
    {
      sub_1B8AE7BD4((uint64_t)a1, type metadata accessor for EventRecurrenceEndModelObject);
      goto LABEL_7;
    }
    v15 = sub_1B8B9B0F0();
    v16 = *(_QWORD *)(v15 - 8);
    v17 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v16 + 48);
    v18 = v17(a1, 1, v15);
    v19 = v17(a2, 1, v15);
    if (v18)
    {
      if (!v19)
      {
        (*(void (**)(char *, char *, uint64_t))(v16 + 16))(a1, a2, v15);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(a1, 0, 1, v15);
LABEL_16:
        *(_QWORD *)&a1[*(int *)(v6 + 20)] = *(_QWORD *)&a2[*(int *)(v6 + 20)];
        goto LABEL_17;
      }
    }
    else
    {
      if (!v19)
      {
        (*(void (**)(char *, char *, uint64_t))(v16 + 24))(a1, a2, v15);
        goto LABEL_16;
      }
      (*(void (**)(char *, uint64_t))(v16 + 8))(a1, v15);
    }
    v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1B2D18);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    goto LABEL_16;
  }
  if (v10)
  {
LABEL_7:
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1BD3D0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_17;
  }
  v11 = sub_1B8B9B0F0();
  v12 = *(_QWORD *)(v11 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(a2, 1, v11))
  {
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1B2D18);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 16))(a1, a2, v11);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(a1, 0, 1, v11);
  }
  *(_QWORD *)&a1[*(int *)(v6 + 20)] = *(_QWORD *)&a2[*(int *)(v6 + 20)];
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_17:
  *(_QWORD *)&a1[a3[5]] = *(_QWORD *)&a2[a3[5]];
  *(_QWORD *)&a1[a3[6]] = *(_QWORD *)&a2[a3[6]];
  v21 = a3[7];
  v22 = &a1[v21];
  v23 = &a2[v21];
  v24 = *(_QWORD *)v23;
  v22[8] = v23[8];
  *(_QWORD *)v22 = v24;
  *(_QWORD *)&a1[a3[8]] = *(_QWORD *)&a2[a3[8]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)&a1[a3[9]] = *(_QWORD *)&a2[a3[9]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)&a1[a3[10]] = *(_QWORD *)&a2[a3[10]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)&a1[a3[11]] = *(_QWORD *)&a2[a3[11]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)&a1[a3[12]] = *(_QWORD *)&a2[a3[12]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)&a1[a3[13]] = *(_QWORD *)&a2[a3[13]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

char *initializeWithTake for EventRecurrenceRuleModelObject(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;

  v6 = type metadata accessor for EventRecurrenceEndModelObject(0);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1BD3D0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    v9 = sub_1B8B9B0F0();
    v10 = *(_QWORD *)(v9 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(a2, 1, v9))
    {
      v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1B2D18);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(a1, a2, v9);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(a1, 0, 1, v9);
    }
    *(_QWORD *)&a1[*(int *)(v6 + 20)] = *(_QWORD *)&a2[*(int *)(v6 + 20)];
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v12 = a3[6];
  *(_QWORD *)&a1[a3[5]] = *(_QWORD *)&a2[a3[5]];
  *(_QWORD *)&a1[v12] = *(_QWORD *)&a2[v12];
  v13 = a3[7];
  v14 = a3[8];
  v15 = &a1[v13];
  v16 = &a2[v13];
  *(_QWORD *)v15 = *(_QWORD *)v16;
  v15[8] = v16[8];
  *(_QWORD *)&a1[v14] = *(_QWORD *)&a2[v14];
  v17 = a3[10];
  *(_QWORD *)&a1[a3[9]] = *(_QWORD *)&a2[a3[9]];
  *(_QWORD *)&a1[v17] = *(_QWORD *)&a2[v17];
  v18 = a3[12];
  *(_QWORD *)&a1[a3[11]] = *(_QWORD *)&a2[a3[11]];
  *(_QWORD *)&a1[v18] = *(_QWORD *)&a2[v18];
  *(_QWORD *)&a1[a3[13]] = *(_QWORD *)&a2[a3[13]];
  return a1;
}

char *assignWithTake for EventRecurrenceRuleModelObject(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(char *, uint64_t, uint64_t);
  int v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;

  v6 = type metadata accessor for EventRecurrenceEndModelObject(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (v10)
    {
      sub_1B8AE7BD4((uint64_t)a1, type metadata accessor for EventRecurrenceEndModelObject);
      goto LABEL_7;
    }
    v15 = sub_1B8B9B0F0();
    v16 = *(_QWORD *)(v15 - 8);
    v17 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v16 + 48);
    v18 = v17(a1, 1, v15);
    v19 = v17(a2, 1, v15);
    if (v18)
    {
      if (!v19)
      {
        (*(void (**)(char *, char *, uint64_t))(v16 + 32))(a1, a2, v15);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(a1, 0, 1, v15);
LABEL_16:
        *(_QWORD *)&a1[*(int *)(v6 + 20)] = *(_QWORD *)&a2[*(int *)(v6 + 20)];
        goto LABEL_17;
      }
    }
    else
    {
      if (!v19)
      {
        (*(void (**)(char *, char *, uint64_t))(v16 + 40))(a1, a2, v15);
        goto LABEL_16;
      }
      (*(void (**)(char *, uint64_t))(v16 + 8))(a1, v15);
    }
    v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1B2D18);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    goto LABEL_16;
  }
  if (v10)
  {
LABEL_7:
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1BD3D0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_17;
  }
  v11 = sub_1B8B9B0F0();
  v12 = *(_QWORD *)(v11 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(a2, 1, v11))
  {
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1B2D18);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(a1, a2, v11);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(a1, 0, 1, v11);
  }
  *(_QWORD *)&a1[*(int *)(v6 + 20)] = *(_QWORD *)&a2[*(int *)(v6 + 20)];
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_17:
  v21 = a3[6];
  *(_QWORD *)&a1[a3[5]] = *(_QWORD *)&a2[a3[5]];
  *(_QWORD *)&a1[v21] = *(_QWORD *)&a2[v21];
  v22 = a3[7];
  v23 = a3[8];
  v24 = &a1[v22];
  v25 = &a2[v22];
  *(_QWORD *)v24 = *(_QWORD *)v25;
  v24[8] = v25[8];
  *(_QWORD *)&a1[v23] = *(_QWORD *)&a2[v23];
  swift_bridgeObjectRelease();
  *(_QWORD *)&a1[a3[9]] = *(_QWORD *)&a2[a3[9]];
  swift_bridgeObjectRelease();
  *(_QWORD *)&a1[a3[10]] = *(_QWORD *)&a2[a3[10]];
  swift_bridgeObjectRelease();
  *(_QWORD *)&a1[a3[11]] = *(_QWORD *)&a2[a3[11]];
  swift_bridgeObjectRelease();
  *(_QWORD *)&a1[a3[12]] = *(_QWORD *)&a2[a3[12]];
  swift_bridgeObjectRelease();
  *(_QWORD *)&a1[a3[13]] = *(_QWORD *)&a2[a3[13]];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for EventRecurrenceRuleModelObject()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1B8B59BDC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;
  int v10;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1BD3D0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 32));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  v10 = v9 - 1;
  if (v10 < 0)
    v10 = -1;
  return (v10 + 1);
}

uint64_t storeEnumTagSinglePayload for EventRecurrenceRuleModelObject()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1B8B59C74(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1BD3D0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 32)) = a2;
  return result;
}

void sub_1B8B59CF0()
{
  unint64_t v0;

  sub_1B8B5A39C(319, &qword_1EF1B9538, (void (*)(uint64_t))type metadata accessor for EventRecurrenceEndModelObject);
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

ValueMetadata *type metadata accessor for EventRecurrenceDayOfWeekModelObject()
{
  return &type metadata for EventRecurrenceDayOfWeekModelObject;
}

uint64_t *initializeBufferWithCopyOfBuffer for EventRecurrenceEndModelObject(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1B8B9B0F0();
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1B2D18);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
  }
  return a1;
}

uint64_t destroy for EventRecurrenceEndModelObject(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  v2 = sub_1B8B9B0F0();
  v3 = *(_QWORD *)(v2 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(a1, 1, v2);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
  return result;
}

char *initializeWithCopy for EventRecurrenceEndModelObject(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = sub_1B8B9B0F0();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1B2D18);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  *(_QWORD *)&a1[*(int *)(a3 + 20)] = *(_QWORD *)&a2[*(int *)(a3 + 20)];
  return a1;
}

char *assignWithCopy for EventRecurrenceEndModelObject(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;

  v6 = sub_1B8B9B0F0();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 24))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1B2D18);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  *(_QWORD *)&a1[*(int *)(a3 + 20)] = *(_QWORD *)&a2[*(int *)(a3 + 20)];
  return a1;
}

char *initializeWithTake for EventRecurrenceEndModelObject(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = sub_1B8B9B0F0();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1B2D18);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  *(_QWORD *)&a1[*(int *)(a3 + 20)] = *(_QWORD *)&a2[*(int *)(a3 + 20)];
  return a1;
}

char *assignWithTake for EventRecurrenceEndModelObject(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;

  v6 = sub_1B8B9B0F0();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 40))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1B2D18);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  *(_QWORD *)&a1[*(int *)(a3 + 20)] = *(_QWORD *)&a2[*(int *)(a3 + 20)];
  return a1;
}

uint64_t getEnumTagSinglePayload for EventRecurrenceEndModelObject()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1B8B5A288(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1B2D18);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for EventRecurrenceEndModelObject()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1B8B5A2D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1B2D18);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

void sub_1B8B5A318()
{
  unint64_t v0;

  sub_1B8B5A39C(319, (unint64_t *)&qword_1ED1B2D20, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

void sub_1B8B5A39C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    a3(255);
    v4 = sub_1B8B9C50C();
    if (!v5)
      atomic_store(v4, a2);
  }
}

ValueMetadata *type metadata accessor for EventRecurrenceEndModelObject.CodingKeys()
{
  return &type metadata for EventRecurrenceEndModelObject.CodingKeys;
}

uint64_t _s13CalendarUIKit29EventRecurrenceEndModelObjectV10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1B8B5A448 + 4 * byte_1B8BAC63F[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1B8B5A47C + 4 * byte_1B8BAC63A[v4]))();
}

uint64_t sub_1B8B5A47C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B8B5A484(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1B8B5A48CLL);
  return result;
}

uint64_t sub_1B8B5A498(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1B8B5A4A0);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1B8B5A4A4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B8B5A4AC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for EventRecurrenceDayOfWeekModelObject.CodingKeys()
{
  return &type metadata for EventRecurrenceDayOfWeekModelObject.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for EventRecurrenceRuleModelObject.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 9 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 9) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF7)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF6)
    return ((uint64_t (*)(void))((char *)&loc_1B8B5A514 + 4 * byte_1B8BAC649[v4]))();
  *a1 = a2 + 9;
  return ((uint64_t (*)(void))((char *)sub_1B8B5A548 + 4 * byte_1B8BAC644[v4]))();
}

uint64_t sub_1B8B5A548(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B8B5A550(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1B8B5A558);
  return result;
}

uint64_t sub_1B8B5A564(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1B8B5A56CLL);
  *(_BYTE *)result = a2 + 9;
  return result;
}

uint64_t sub_1B8B5A570(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B8B5A578(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for EventRecurrenceRuleModelObject.CodingKeys()
{
  return &type metadata for EventRecurrenceRuleModelObject.CodingKeys;
}

unint64_t sub_1B8B5A598()
{
  unint64_t result;

  result = qword_1EF1BDBF0;
  if (!qword_1EF1BDBF0)
  {
    result = MEMORY[0x1BCCB79D0](&unk_1B8BACB0C, &type metadata for EventRecurrenceRuleModelObject.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF1BDBF0);
  }
  return result;
}

unint64_t sub_1B8B5A5E0()
{
  unint64_t result;

  result = qword_1EF1BDBF8;
  if (!qword_1EF1BDBF8)
  {
    result = MEMORY[0x1BCCB79D0](&unk_1B8BACBC4, &type metadata for EventRecurrenceDayOfWeekModelObject.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF1BDBF8);
  }
  return result;
}

unint64_t sub_1B8B5A628()
{
  unint64_t result;

  result = qword_1EF1BDC00;
  if (!qword_1EF1BDC00)
  {
    result = MEMORY[0x1BCCB79D0](&unk_1B8BACC7C, &type metadata for EventRecurrenceEndModelObject.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF1BDC00);
  }
  return result;
}

unint64_t sub_1B8B5A670()
{
  unint64_t result;

  result = qword_1EF1BDC08;
  if (!qword_1EF1BDC08)
  {
    result = MEMORY[0x1BCCB79D0](&unk_1B8BACBEC, &type metadata for EventRecurrenceEndModelObject.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF1BDC08);
  }
  return result;
}

unint64_t sub_1B8B5A6B8()
{
  unint64_t result;

  result = qword_1EF1BDC10;
  if (!qword_1EF1BDC10)
  {
    result = MEMORY[0x1BCCB79D0](&unk_1B8BACC14, &type metadata for EventRecurrenceEndModelObject.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF1BDC10);
  }
  return result;
}

unint64_t sub_1B8B5A700()
{
  unint64_t result;

  result = qword_1EF1BDC18;
  if (!qword_1EF1BDC18)
  {
    result = MEMORY[0x1BCCB79D0](&unk_1B8BACB34, &type metadata for EventRecurrenceDayOfWeekModelObject.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF1BDC18);
  }
  return result;
}

unint64_t sub_1B8B5A748()
{
  unint64_t result;

  result = qword_1EF1BDC20;
  if (!qword_1EF1BDC20)
  {
    result = MEMORY[0x1BCCB79D0](&unk_1B8BACB5C, &type metadata for EventRecurrenceDayOfWeekModelObject.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF1BDC20);
  }
  return result;
}

unint64_t sub_1B8B5A790()
{
  unint64_t result;

  result = qword_1EF1BDC28;
  if (!qword_1EF1BDC28)
  {
    result = MEMORY[0x1BCCB79D0](&unk_1B8BACA7C, &type metadata for EventRecurrenceRuleModelObject.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF1BDC28);
  }
  return result;
}

unint64_t sub_1B8B5A7D8()
{
  unint64_t result;

  result = qword_1EF1BDC30;
  if (!qword_1EF1BDC30)
  {
    result = MEMORY[0x1BCCB79D0](&unk_1B8BACAA4, &type metadata for EventRecurrenceRuleModelObject.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF1BDC30);
  }
  return result;
}

uint64_t sub_1B8B5A81C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6E65727275636572 && a2 == 0xED0000646E456563;
  if (v2 || (sub_1B8B9C8D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x636E657571657266 && a2 == 0xE900000000000079 || (sub_1B8B9C8D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6C61767265746E69 && a2 == 0xE800000000000000 || (sub_1B8B9C8D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001B8BB8940 || (sub_1B8B9C8D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6854664F73796164 && a2 == 0xED00006B65655765 || (sub_1B8B9C8D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6854664F73796164 && a2 == 0xEE0068746E6F4D65 || (sub_1B8B9C8D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x6854664F73796164 && a2 == 0xED00007261655965 || (sub_1B8B9C8D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x54664F736B656577 && a2 == 0xEE00726165596568 || (sub_1B8B9C8D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x664F7368746E6F6DLL && a2 == 0xEF72616559656854 || (sub_1B8B9C8D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x7469736F50746573 && a2 == 0xEC000000736E6F69)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else
  {
    v6 = sub_1B8B9C8D8();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 9;
    else
      return 10;
  }
}

uint64_t sub_1B8B5AD08(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x656854664F796164 && a2 == 0xEC0000006B656557;
  if (v2 || (sub_1B8B9C8D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x626D754E6B656577 && a2 == 0xEA00000000007265)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1B8B9C8D8();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1B8B5AE1C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x65746144646E65 && a2 == 0xE700000000000000;
  if (v2 || (sub_1B8B9C8D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E6572727563636FLL && a2 == 0xEF746E756F436563)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1B8B9C8D8();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t EventSourceModelObject.init(_:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t (*v21)(uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t (*v35)(uint64_t, uint64_t);
  uint64_t v36;
  uint64_t v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  int v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void (*v45)(uint64_t, uint64_t);
  uint64_t AssociatedTypeWitness;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v53;
  char v54;
  char v55;
  char v56;
  char v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char v76;
  char v77;
  int v78;
  int v79;
  char v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  int v84;
  uint64_t v85;
  uint64_t v86;
  __int128 v87;
  __int128 v88;
  __int128 v89;
  __int128 v90;
  uint64_t v92;
  int v93;
  int v94;
  int v95;
  int v96;
  int v97;
  unint64_t v98;
  uint64_t v99;
  int v100;
  int v101;
  unint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  unsigned __int8 v116;
  char v117;
  char v118;
  char v119;
  char v120;
  char v121;
  char v122;
  char v123;
  unsigned __int8 v124;
  char v125;
  char v126;
  char v127;
  char v128;
  char v129;
  __int128 v130;
  __int128 v131;
  __int128 v132;
  __int128 v133;
  __int128 v134;
  __int128 v135;
  __int128 v136;
  _BYTE v137[22];
  _QWORD v138[7];
  char v139;
  char v140;
  char v141;
  char v142;
  char v143;
  __int16 v144;
  char v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  char v149;
  _BYTE v150[7];
  uint64_t v151;
  char v152;
  _BYTE v153[7];
  uint64_t v154;
  uint64_t v155;
  int v156;
  __int16 v157;
  __int128 v158;
  uint64_t v159;
  __int128 v160;
  __int128 v161;
  uint64_t AssociatedConformanceWitness;
  _BYTE v163[7];
  char v164;
  char v165;
  __int16 v166;
  char v167;

  v106 = a2;
  v3 = a1[3];
  v4 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v3);
  v114 = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 24))(v3, v4);
  v6 = v5;
  v7 = a1[3];
  v8 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v7);
  v9 = *(uint64_t (**)(uint64_t, uint64_t))(v8 + 32);
  v105 = v6;
  swift_bridgeObjectRetain();
  v113 = v9(v7, v8);
  v11 = v10;
  v12 = a1[3];
  v13 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v12);
  v14 = *(uint64_t (**)(uint64_t, uint64_t))(v13 + 40);
  v112 = v11;
  swift_bridgeObjectRetain();
  v111 = v14(v12, v13);
  v15 = a1[3];
  v16 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v15);
  v110 = (*(uint64_t (**)(uint64_t, uint64_t))(v16 + 48))(v15, v16);
  v18 = v17;
  v19 = a1[3];
  v20 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v19);
  v21 = *(uint64_t (**)(uint64_t, uint64_t))(v20 + 56);
  v104 = v18;
  swift_bridgeObjectRetain();
  LODWORD(v102) = v21(v19, v20);
  v22 = a1[3];
  v23 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v22);
  LODWORD(v99) = (*(uint64_t (**)(uint64_t, uint64_t))(v23 + 64))(v22, v23);
  v24 = a1[3];
  v25 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v24);
  LODWORD(v98) = (*(uint64_t (**)(uint64_t, uint64_t))(v25 + 72))(v24, v25);
  v26 = a1[3];
  v27 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v26);
  v97 = (*(uint64_t (**)(uint64_t, uint64_t))(v27 + 80))(v26, v27);
  v28 = a1[3];
  v29 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v28);
  v96 = EventSourceModel.isIntegrationSource.getter(v28, v29);
  v30 = a1[3];
  v31 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v30);
  v32 = (*(uint64_t (**)(uint64_t, uint64_t))(v31 + 88))(v30, v31);
  v33 = a1[3];
  v34 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v33);
  v35 = *(uint64_t (**)(uint64_t, uint64_t))(v34 + 96);
  v103 = v32;
  swift_bridgeObjectRetain();
  v109 = v35(v33, v34);
  v36 = a1[3];
  v37 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v36);
  v108 = (*(uint64_t (**)(uint64_t, uint64_t))(v37 + 104))(v36, v37);
  v101 = v38;
  v165 = v38 & 1;
  v39 = a1[3];
  v40 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v39);
  v107 = (*(uint64_t (**)(uint64_t, uint64_t))(v40 + 112))(v39, v40);
  v100 = v41;
  v164 = v41 & 1;
  v43 = a1[3];
  v42 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v43);
  v44 = *(_QWORD *)(v42 + 8);
  v45 = *(void (**)(uint64_t, uint64_t))(v44 + 24);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v47 = sub_1B8B9C50C();
  v48 = *(_QWORD *)(v47 - 8);
  MEMORY[0x1E0C80A78](v47);
  v50 = (char *)&v92 - v49;
  v45(v43, v44);
  v51 = *(_QWORD *)(AssociatedTypeWitness - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v51 + 48))(v50, 1, AssociatedTypeWitness) == 1)
  {
    (*(void (**)(char *, uint64_t))(v48 + 8))(v50, v47);
    AssociatedConformanceWitness = 0;
    v160 = 0u;
    v161 = 0u;
  }
  else
  {
    *((_QWORD *)&v161 + 1) = AssociatedTypeWitness;
    AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v160);
    (*(void (**)(uint64_t *, char *, uint64_t))(v51 + 32))(boxed_opaque_existential_1, v50, AssociatedTypeWitness);
  }
  v53 = v106;
  v54 = v99;
  v56 = v97;
  v55 = v98;
  v57 = v96;
  sub_1B8B5B6C0((uint64_t)&v160, (uint64_t)&v158);
  if (v159)
  {
    sub_1B8B0BBC8(&v158, (uint64_t)v138);
    sub_1B8B0FC88((uint64_t)v138, (uint64_t)&v130);
    EventSourceConstraintsModelObject.init(_:)(&v130, (uint64_t)&v115);
    v106 = v115;
    if (v117)
      v58 = 256;
    else
      v58 = 0;
    v59 = v58 | v116;
    if (v118)
      v60 = 0x10000;
    else
      v60 = 0;
    if (v119)
      v61 = 0x1000000;
    else
      v61 = 0;
    v62 = v59 | v60 | v61;
    if (v120)
      v63 = 0x100000000;
    else
      v63 = 0;
    if (v121)
      v64 = 0x10000000000;
    else
      v64 = 0;
    v65 = v63 | v64;
    v66 = 0x1000000000000;
    if (!v122)
      v66 = 0;
    v67 = v62 | v65 | v66;
    v68 = 0x100000000000000;
    if (!v123)
      v68 = 0;
    v99 = v67 | v68;
    if (v125)
      v69 = 256;
    else
      v69 = 0;
    v70 = v69 | v124;
    if (v126)
      v71 = 0x10000;
    else
      v71 = 0;
    if (v127)
      v72 = 0x1000000;
    else
      v72 = 0;
    v73 = v70 | v71 | v72;
    if (v128)
      v74 = 0x100000000;
    else
      v74 = 0;
    if (v129)
      v75 = 0x10000000000;
    else
      v75 = 0;
    v98 = v73 | v74 | v75;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v138);
  }
  else
  {
    v106 = 0;
    v98 = 0;
    v99 = 2;
  }
  v76 = v57 & 1;
  v77 = v56 & 1;
  v96 = v56 & 1;
  v97 = v57 & 1;
  v78 = v55 & 1;
  v79 = v54 & 1;
  v94 = v79;
  v95 = v78;
  v80 = v102 & 1;
  v93 = v102 & 1;
  sub_1B8B5B708((uint64_t)&v160);
  v81 = v104;
  v82 = v105;
  *(_QWORD *)&v130 = v114;
  *((_QWORD *)&v130 + 1) = v105;
  *(_QWORD *)&v131 = v113;
  *((_QWORD *)&v131 + 1) = v112;
  *(_QWORD *)&v132 = v111;
  *((_QWORD *)&v132 + 1) = v110;
  *(_QWORD *)&v133 = v104;
  BYTE8(v133) = v80;
  BYTE9(v133) = v79;
  BYTE10(v133) = v78;
  BYTE11(v133) = v77;
  BYTE12(v133) = v76;
  v83 = v103;
  *(_QWORD *)&v134 = v103;
  *((_QWORD *)&v134 + 1) = v109;
  *(_QWORD *)&v135 = v108;
  BYTE8(v135) = v101 & 1;
  *(_QWORD *)&v136 = v107;
  BYTE8(v136) = v100 & 1;
  v84 = v98;
  v85 = v99;
  *(_QWORD *)v137 = v106;
  *(_QWORD *)&v137[8] = v99;
  v102 = HIDWORD(v98);
  *(_WORD *)&v137[20] = WORD2(v98);
  *(_DWORD *)&v137[16] = v98;
  sub_1B8B15004((uint64_t)&v130);
  swift_bridgeObjectRelease();
  v86 = v112;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v87 = *(_OWORD *)v137;
  *(_OWORD *)(v53 + 96) = v136;
  *(_OWORD *)(v53 + 112) = v87;
  *(_QWORD *)(v53 + 126) = *(_QWORD *)&v137[14];
  v88 = v133;
  *(_OWORD *)(v53 + 32) = v132;
  *(_OWORD *)(v53 + 48) = v88;
  v89 = v135;
  *(_OWORD *)(v53 + 64) = v134;
  *(_OWORD *)(v53 + 80) = v89;
  v90 = v131;
  *(_OWORD *)v53 = v130;
  *(_OWORD *)(v53 + 16) = v90;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v138[0] = v114;
  v138[1] = v82;
  v138[2] = v113;
  v138[3] = v86;
  v138[4] = v111;
  v138[5] = v110;
  v138[6] = v81;
  v139 = v93;
  v140 = v94;
  v141 = v95;
  v142 = v96;
  v143 = v97;
  v144 = v166;
  v145 = v167;
  v146 = v83;
  v147 = v109;
  v148 = v108;
  v149 = v165;
  *(_DWORD *)&v150[3] = *(_DWORD *)((char *)&v115 + 3);
  *(_DWORD *)v150 = v115;
  v151 = v107;
  v152 = v164;
  *(_DWORD *)v153 = *(_DWORD *)v163;
  *(_DWORD *)&v153[3] = *(_DWORD *)&v163[3];
  v154 = v106;
  v155 = v85;
  v157 = v102;
  v156 = v84;
  return sub_1B8B15058((uint64_t)v138);
}

__n128 EventSourceModelObject.init(id:appGroupID:sourceType:title:isDelegate:isManaged:isWritable:isPrimaryLocalSource:isIntegrationSource:ownerAddresses:preferredEventPrivateValue:defaultAlarmOffset:defaultAllDayAlarmOffset:constraints:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, char a10, char a11, char a12, char a13, __int128 a14, uint64_t a15, char a16, uint64_t a17, char a18, __n128 *a19)
{
  unsigned __int32 v19;
  unsigned __int16 v20;
  __n128 result;

  v19 = a19[1].n128_u32[0];
  v20 = a19[1].n128_u16[2];
  *(_QWORD *)a9 = a1;
  *(_QWORD *)(a9 + 8) = a2;
  *(_QWORD *)(a9 + 16) = a3;
  *(_QWORD *)(a9 + 24) = a4;
  *(_QWORD *)(a9 + 32) = a5;
  *(_QWORD *)(a9 + 40) = a6;
  *(_QWORD *)(a9 + 48) = a7;
  *(_BYTE *)(a9 + 56) = a8;
  *(_BYTE *)(a9 + 57) = a10;
  *(_BYTE *)(a9 + 58) = a11;
  *(_BYTE *)(a9 + 59) = a12;
  *(_BYTE *)(a9 + 60) = a13;
  *(_OWORD *)(a9 + 64) = a14;
  *(_QWORD *)(a9 + 80) = a15;
  *(_BYTE *)(a9 + 88) = a16 & 1;
  *(_QWORD *)(a9 + 96) = a17;
  *(_BYTE *)(a9 + 104) = a18 & 1;
  result = *a19;
  *(__n128 *)(a9 + 112) = *a19;
  *(_WORD *)(a9 + 132) = v20;
  *(_DWORD *)(a9 + 128) = v19;
  return result;
}

uint64_t sub_1B8B5B6C0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1BDC58);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1B8B5B708(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1BDC58);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t EventSourceModelObject.id.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t EventSourceModelObject.id.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*EventSourceModelObject.id.modify())()
{
  return nullsub_1;
}

uint64_t EventSourceModelObject.appGroupID.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t EventSourceModelObject.appGroupID.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return result;
}

uint64_t (*EventSourceModelObject.appGroupID.modify())()
{
  return nullsub_1;
}

uint64_t EventSourceModelObject.sourceType.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 32);
}

uint64_t EventSourceModelObject.sourceType.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 32) = result;
  return result;
}

uint64_t (*EventSourceModelObject.sourceType.modify())()
{
  return nullsub_1;
}

uint64_t EventSourceModelObject.title.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 40);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t EventSourceModelObject.title.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 40) = a1;
  *(_QWORD *)(v2 + 48) = a2;
  return result;
}

uint64_t (*EventSourceModelObject.title.modify())()
{
  return nullsub_1;
}

uint64_t EventSourceModelObject.isDelegate.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 56);
}

uint64_t EventSourceModelObject.isDelegate.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 56) = result;
  return result;
}

uint64_t (*EventSourceModelObject.isDelegate.modify())()
{
  return nullsub_1;
}

uint64_t EventSourceModelObject.isManaged.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 57);
}

uint64_t EventSourceModelObject.isManaged.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 57) = result;
  return result;
}

uint64_t (*EventSourceModelObject.isManaged.modify())()
{
  return nullsub_1;
}

uint64_t EventSourceModelObject.isWritable.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 58);
}

uint64_t EventSourceModelObject.isWritable.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 58) = result;
  return result;
}

uint64_t (*EventSourceModelObject.isWritable.modify())()
{
  return nullsub_1;
}

uint64_t EventSourceModelObject.isPrimaryLocalSource.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 59);
}

uint64_t EventSourceModelObject.isPrimaryLocalSource.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 59) = result;
  return result;
}

uint64_t (*EventSourceModelObject.isPrimaryLocalSource.modify())()
{
  return nullsub_1;
}

uint64_t EventSourceModelObject.isIntegrationSource.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 60);
}

uint64_t EventSourceModelObject.isIntegrationSource.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 60) = result;
  return result;
}

uint64_t (*EventSourceModelObject.isIntegrationSource.modify())()
{
  return nullsub_1;
}

uint64_t EventSourceModelObject.ownerAddresses.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t EventSourceModelObject.ownerAddresses.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 64) = a1;
  return result;
}

uint64_t (*EventSourceModelObject.ownerAddresses.modify())()
{
  return nullsub_1;
}

uint64_t EventSourceModelObject.preferredEventPrivateValue.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 72);
}

uint64_t EventSourceModelObject.preferredEventPrivateValue.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 72) = result;
  return result;
}

uint64_t (*EventSourceModelObject.preferredEventPrivateValue.modify())()
{
  return nullsub_1;
}

uint64_t EventSourceModelObject.defaultAlarmOffset.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 80);
}

uint64_t EventSourceModelObject.defaultAlarmOffset.setter(uint64_t result, char a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 80) = result;
  *(_BYTE *)(v2 + 88) = a2 & 1;
  return result;
}

uint64_t (*EventSourceModelObject.defaultAlarmOffset.modify())()
{
  return nullsub_1;
}

uint64_t EventSourceModelObject.defaultAllDayAlarmOffset.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 96);
}

uint64_t EventSourceModelObject.defaultAllDayAlarmOffset.setter(uint64_t result, char a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 96) = result;
  *(_BYTE *)(v2 + 104) = a2 & 1;
  return result;
}

uint64_t (*EventSourceModelObject.defaultAllDayAlarmOffset.modify())()
{
  return nullsub_1;
}

__n128 EventSourceModelObject.constraints.getter@<Q0>(__n128 *a1@<X8>)
{
  __n128 *v1;
  unsigned __int32 v2;
  unsigned __int16 v3;
  __n128 result;

  v2 = v1[8].n128_u32[0];
  v3 = v1[8].n128_u16[2];
  result = v1[7];
  *a1 = result;
  a1[1].n128_u16[2] = v3;
  a1[1].n128_u32[0] = v2;
  return result;
}

__n128 EventSourceModelObject.constraints.setter(__n128 *a1)
{
  __n128 *v1;
  unsigned __int32 v2;
  unsigned __int16 v3;
  __n128 result;

  v2 = a1[1].n128_u32[0];
  v3 = a1[1].n128_u16[2];
  result = *a1;
  v1[7] = *a1;
  v1[8].n128_u16[2] = v3;
  v1[8].n128_u32[0] = v2;
  return result;
}

uint64_t (*EventSourceModelObject.constraints.modify())()
{
  return nullsub_1;
}

uint64_t EventSourceModelObject.hash(into:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v6;
  uint64_t v7;
  char v8;

  v1 = *(_QWORD *)(v0 + 24);
  v2 = *(_QWORD *)(v0 + 64);
  v8 = *(_BYTE *)(v0 + 88);
  v6 = *(unsigned __int8 *)(v0 + 104);
  v7 = *(_QWORD *)(v0 + 120);
  swift_bridgeObjectRetain();
  sub_1B8B9C1E8();
  swift_bridgeObjectRelease();
  sub_1B8B9C980();
  if (v1)
  {
    swift_bridgeObjectRetain();
    sub_1B8B9C1E8();
    swift_bridgeObjectRelease();
  }
  sub_1B8B9C974();
  swift_bridgeObjectRetain();
  sub_1B8B9C1E8();
  swift_bridgeObjectRelease();
  sub_1B8B9C980();
  sub_1B8B9C980();
  sub_1B8B9C980();
  sub_1B8B9C980();
  sub_1B8B9C980();
  sub_1B8B9C974();
  v3 = *(_QWORD *)(v2 + 16);
  if (v3)
  {
    swift_bridgeObjectRetain();
    v4 = v2 + 40;
    do
    {
      swift_bridgeObjectRetain();
      sub_1B8B9C1E8();
      swift_bridgeObjectRelease();
      v4 += 16;
      --v3;
    }
    while (v3);
    swift_bridgeObjectRelease();
  }
  sub_1B8B9C974();
  if ((v8 & 1) != 0)
  {
    sub_1B8B9C980();
    if (!v6)
    {
LABEL_9:
      sub_1B8B9C980();
      sub_1B8B9C98C();
      goto LABEL_12;
    }
  }
  else
  {
    sub_1B8B9C980();
    sub_1B8B9C98C();
    if (!v6)
      goto LABEL_9;
  }
  sub_1B8B9C980();
LABEL_12:
  if (v7 == 2)
    return sub_1B8B9C980();
  sub_1B8B9C980();
  return EventSourceConstraintsModelObject.hash(into:)();
}

uint64_t sub_1B8B5BD64(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1B8B5BD8C + 4 * byte_1B8BACDD0[a1]))(25705, 0xE200000000000000);
}

uint64_t sub_1B8B5BD8C()
{
  return 0x70756F7247707061;
}

uint64_t sub_1B8B5BDA8()
{
  return 0x7954656372756F73;
}

uint64_t sub_1B8B5BDC8()
{
  return 0x656C746974;
}

uint64_t sub_1B8B5BDDC()
{
  return 0x6167656C65447369;
}

uint64_t sub_1B8B5BDFC()
{
  return 0x6567616E614D7369;
}

uint64_t sub_1B8B5BE18()
{
  return 0x6261746972577369;
}

unint64_t sub_1B8B5BE34()
{
  return 0xD000000000000014;
}

uint64_t sub_1B8B5BEDC()
{
  return 0x69617274736E6F63;
}

uint64_t sub_1B8B5BEFC()
{
  unsigned __int8 *v0;

  return sub_1B8B5BD64(*v0);
}

uint64_t sub_1B8B5BF04@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1B8B5D8BC(a1, a2);
  *a3 = result;
  return result;
}

void sub_1B8B5BF28(_BYTE *a1@<X8>)
{
  *a1 = 14;
}

uint64_t sub_1B8B5BF34()
{
  sub_1B8B5D164();
  return sub_1B8B9C9E0();
}

uint64_t sub_1B8B5BF5C()
{
  sub_1B8B5D164();
  return sub_1B8B9C9EC();
}

uint64_t EventSourceModelObject.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  int v26;
  int v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int v37;
  __int16 v38;
  int v39;
  char v40;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1BDC60);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_QWORD *)(v1 + 16);
  v32 = *(_QWORD *)(v1 + 24);
  v33 = v7;
  v8 = *(_QWORD *)(v1 + 32);
  v30 = *(_QWORD *)(v1 + 40);
  v31 = v8;
  v29 = *(_QWORD *)(v1 + 48);
  v39 = *(unsigned __int8 *)(v1 + 56);
  LODWORD(v8) = *(unsigned __int8 *)(v1 + 57);
  v27 = *(unsigned __int8 *)(v1 + 58);
  v28 = v8;
  LODWORD(v8) = *(unsigned __int8 *)(v1 + 59);
  v25 = *(unsigned __int8 *)(v1 + 60);
  v26 = v8;
  v9 = *(_QWORD *)(v1 + 64);
  v23 = *(_QWORD *)(v1 + 72);
  v24 = v9;
  v21 = *(_QWORD *)(v1 + 80);
  v22 = *(unsigned __int8 *)(v1 + 88);
  v10 = *(_QWORD *)(v1 + 96);
  v20 = *(unsigned __int8 *)(v1 + 104);
  v11 = *(_QWORD *)(v1 + 112);
  v18 = *(_QWORD *)(v1 + 120);
  v19 = v10;
  v16 = *(unsigned __int16 *)(v1 + 132);
  v17 = v11;
  v15 = *(unsigned int *)(v1 + 128);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1B8B5D164();
  sub_1B8B9C9C8();
  LOBYTE(v35) = 0;
  v12 = v34;
  sub_1B8B9C86C();
  if (!v12)
  {
    v13 = v31;
    LOBYTE(v35) = 1;
    sub_1B8B9C848();
    v35 = v13;
    v40 = 2;
    type metadata accessor for EKSourceType(0);
    sub_1B8ADBDEC(&qword_1EF1BDC70, (uint64_t (*)(uint64_t))type metadata accessor for EKSourceType, (uint64_t)&protocol conformance descriptor for EKSourceType);
    sub_1B8B9C8A8();
    LOBYTE(v35) = 3;
    sub_1B8B9C86C();
    LOBYTE(v35) = 4;
    sub_1B8B9C878();
    LOBYTE(v35) = 5;
    sub_1B8B9C878();
    LOBYTE(v35) = 6;
    sub_1B8B9C878();
    LOBYTE(v35) = 7;
    sub_1B8B9C878();
    LOBYTE(v35) = 8;
    sub_1B8B9C878();
    v35 = v24;
    v40 = 9;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1BCA78);
    sub_1B8B132D8(&qword_1EF1BCA80, MEMORY[0x1E0DEA970], MEMORY[0x1E0DEAF10]);
    sub_1B8B9C8A8();
    v35 = v23;
    v40 = 10;
    type metadata accessor for EKPrivacyLevel(0);
    sub_1B8ADBDEC(&qword_1EF1BDC78, (uint64_t (*)(uint64_t))type metadata accessor for EKPrivacyLevel, (uint64_t)&protocol conformance descriptor for EKPrivacyLevel);
    sub_1B8B9C8A8();
    LOBYTE(v35) = 11;
    sub_1B8B9C854();
    LOBYTE(v35) = 12;
    sub_1B8B9C854();
    v35 = v17;
    v36 = v18;
    v37 = v15;
    v38 = (v15 | (unint64_t)(v16 << 32)) >> 32;
    v40 = 13;
    sub_1B8B5D1A8();
    sub_1B8B9C860();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t EventSourceModelObject.hashValue.getter()
{
  sub_1B8B9C968();
  EventSourceModelObject.hash(into:)();
  return sub_1B8B9C998();
}

uint64_t EventSourceModelObject.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  char v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v25;
  uint64_t v26;
  uint64_t v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  uint64_t v32;
  uint64_t v33;
  int v34;
  int v35;
  uint64_t v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  int v40;
  int v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  _BYTE v58[22];
  _QWORD v59[7];
  char v60;
  char v61;
  char v62;
  char v63;
  char v64;
  __int16 v65;
  char v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char v70;
  _BYTE v71[7];
  uint64_t v72;
  char v73;
  _BYTE v74[7];
  uint64_t v75;
  uint64_t v76;
  int v77;
  __int16 v78;
  char v79;
  uint64_t v80;
  uint64_t v81;
  unsigned int v82;
  unsigned __int16 v83;
  _BYTE v84[7];
  char v85;
  _BYTE v86[7];
  char v87;
  __int16 v88;
  char v89;
  uint64_t v90;

  v90 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1BDC88);
  v5 = *(_QWORD *)(v90 - 8);
  MEMORY[0x1E0C80A78](v90);
  v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v87 = 1;
  v85 = 1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1B8B5D164();
  sub_1B8B9C9B0();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    return swift_bridgeObjectRelease();
  }
  else
  {
    v49 = a2;
    v50 = a1;
    v8 = v5;
    LOBYTE(v59[0]) = 0;
    v9 = sub_1B8B9C7DC();
    v11 = v10;
    LOBYTE(v59[0]) = 1;
    swift_bridgeObjectRetain();
    v12 = sub_1B8B9C7A0();
    v14 = v13;
    v45 = v12;
    v46 = v9;
    type metadata accessor for EKSourceType(0);
    LOBYTE(v51) = 2;
    sub_1B8ADBDEC(&qword_1EF1BDC90, (uint64_t (*)(uint64_t))type metadata accessor for EKSourceType, (uint64_t)&protocol conformance descriptor for EKSourceType);
    swift_bridgeObjectRetain();
    sub_1B8B9C818();
    v48 = v14;
    v44 = v59[0];
    LOBYTE(v59[0]) = 3;
    v43 = sub_1B8B9C7DC();
    LOBYTE(v59[0]) = 4;
    v47 = v15;
    swift_bridgeObjectRetain();
    v42 = sub_1B8B9C7E8();
    LOBYTE(v59[0]) = 5;
    v41 = sub_1B8B9C7E8();
    LOBYTE(v59[0]) = 6;
    v40 = sub_1B8B9C7E8();
    LOBYTE(v59[0]) = 7;
    LODWORD(v39) = sub_1B8B9C7E8();
    LOBYTE(v59[0]) = 8;
    LODWORD(v38) = sub_1B8B9C7E8();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1BCA78);
    LOBYTE(v51) = 9;
    sub_1B8B132D8(&qword_1EF1BCAA8, MEMORY[0x1E0DEA9A0], MEMORY[0x1E0DEAF40]);
    sub_1B8B9C818();
    v16 = v59[0];
    type metadata accessor for EKPrivacyLevel(0);
    LOBYTE(v51) = 10;
    sub_1B8ADBDEC(&qword_1EF1BDC98, (uint64_t (*)(uint64_t))type metadata accessor for EKPrivacyLevel, (uint64_t)&protocol conformance descriptor for EKPrivacyLevel);
    swift_bridgeObjectRetain();
    sub_1B8B9C818();
    v17 = v59[0];
    LOBYTE(v59[0]) = 11;
    v18 = sub_1B8B9C7B8();
    v37 = v19;
    v20 = v18;
    v87 = v19 & 1;
    LOBYTE(v59[0]) = 12;
    v36 = sub_1B8B9C7B8();
    v35 = v21 & 1;
    v85 = v21 & 1;
    v79 = 13;
    sub_1B8B5D1EC();
    sub_1B8B9C7D0();
    v34 = v42 & 1;
    v41 &= 1u;
    v42 = v40 & 1;
    v40 = v39 & 1;
    v22 = v38 & 1;
    (*(void (**)(char *, uint64_t))(v8 + 8))(v7, v90);
    v90 = v80;
    v33 = v82;
    v38 = v83;
    v39 = v81;
    v23 = v47;
    *(_QWORD *)&v51 = v46;
    *((_QWORD *)&v51 + 1) = v11;
    v24 = v48;
    *(_QWORD *)&v52 = v45;
    *((_QWORD *)&v52 + 1) = v48;
    *(_QWORD *)&v53 = v44;
    *((_QWORD *)&v53 + 1) = v43;
    *(_QWORD *)&v54 = v47;
    BYTE8(v54) = v34;
    BYTE9(v54) = v41;
    BYTE10(v54) = v42;
    BYTE11(v54) = v40;
    BYTE12(v54) = v22;
    *(_QWORD *)&v55 = v16;
    *((_QWORD *)&v55 + 1) = v17;
    *(_QWORD *)&v56 = v20;
    BYTE8(v56) = v37 & 1;
    *(_QWORD *)&v57 = v36;
    BYTE8(v57) = v35;
    *(_QWORD *)v58 = v80;
    *(_QWORD *)&v58[8] = v81;
    *(_WORD *)&v58[20] = v83;
    *(_DWORD *)&v58[16] = v82;
    sub_1B8B15004((uint64_t)&v51);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v25 = *(_OWORD *)v58;
    v27 = v49;
    v26 = (uint64_t)v50;
    *(_OWORD *)(v49 + 96) = v57;
    *(_OWORD *)(v27 + 112) = v25;
    *(_QWORD *)(v27 + 126) = *(_QWORD *)&v58[14];
    v28 = v54;
    *(_OWORD *)(v27 + 32) = v53;
    *(_OWORD *)(v27 + 48) = v28;
    v29 = v56;
    *(_OWORD *)(v27 + 64) = v55;
    *(_OWORD *)(v27 + 80) = v29;
    v30 = v52;
    *(_OWORD *)v27 = v51;
    *(_OWORD *)(v27 + 16) = v30;
    __swift_destroy_boxed_opaque_existential_1(v26);
    v59[0] = v46;
    v59[1] = v11;
    v59[2] = v45;
    v59[3] = v24;
    v59[4] = v44;
    v59[5] = v43;
    v59[6] = v23;
    v60 = v34;
    v61 = v41;
    v62 = v42;
    v63 = v40;
    v64 = v22;
    v65 = v88;
    v66 = v89;
    v67 = v16;
    v68 = v17;
    v69 = v20;
    v70 = v87;
    *(_DWORD *)v71 = *(_DWORD *)v86;
    *(_DWORD *)&v71[3] = *(_DWORD *)&v86[3];
    v72 = v36;
    v73 = v85;
    *(_DWORD *)v74 = *(_DWORD *)v84;
    *(_DWORD *)&v74[3] = *(_DWORD *)&v84[3];
    v75 = v90;
    v76 = v39;
    v78 = v38;
    v77 = v33;
    return sub_1B8B15058((uint64_t)v59);
  }
}

uint64_t sub_1B8B5CBE0()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 32);
}

uint64_t sub_1B8B5CBE8()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 57);
}

uint64_t sub_1B8B5CBF0()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 58);
}

uint64_t sub_1B8B5CBF8()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 59);
}

uint64_t sub_1B8B5CC00()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1B8B5CC08()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 80);
}

uint64_t sub_1B8B5CC14()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 96);
}

uint64_t sub_1B8B5CC20()
{
  sub_1B8B9C968();
  EventSourceModelObject.hash(into:)();
  return sub_1B8B9C998();
}

uint64_t sub_1B8B5CC60()
{
  sub_1B8B9C968();
  EventSourceModelObject.hash(into:)();
  return sub_1B8B9C998();
}

uint64_t sub_1B8B5CC98@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return EventSourceModelObject.init(from:)(a1, a2);
}

uint64_t sub_1B8B5CCAC(_QWORD *a1)
{
  return EventSourceModelObject.encode(to:)(a1);
}

__n128 sub_1B8B5CCC0@<Q0>(__n128 *a1@<X8>)
{
  __n128 *v1;
  unsigned __int32 v2;
  unsigned __int16 v3;
  __n128 result;

  v2 = v1[8].n128_u32[0];
  v3 = v1[8].n128_u16[2];
  result = v1[7];
  *a1 = result;
  a1[1].n128_u16[2] = v3;
  a1[1].n128_u32[0] = v2;
  return result;
}

uint64_t sub_1B8B5CCE0()
{
  sub_1B8ADBDEC(&qword_1EF1BDCF0, (uint64_t (*)(uint64_t))type metadata accessor for EKSourceType, (uint64_t)&unk_1B8BA590C);
  return sub_1B8B9C2C0();
}

uint64_t sub_1B8B5CD54()
{
  sub_1B8ADBDEC(&qword_1EF1BDCF0, (uint64_t (*)(uint64_t))type metadata accessor for EKSourceType, (uint64_t)&unk_1B8BA590C);
  return sub_1B8B9C2A8();
}

uint64_t _s13CalendarUIKit22EventSourceModelObjectV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  double v8;
  double v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  int v16;
  double v17;
  double v18;
  int v19;
  int v20;
  int v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  char v32;
  uint64_t result;
  char v34;
  int v35;
  char v36;
  char v37;
  char v38;
  char v39;
  int v40;
  int v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  int v54;
  char v55;
  int v56;
  char v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD *v60;
  _QWORD *v61;
  int v62;
  int v63;
  int v64;
  int v65;
  int v66;
  _QWORD v67[2];
  int v68;
  __int16 v69;
  _QWORD v70[2];
  int v71;
  __int16 v72;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD *)(a1 + 24);
  v4 = *(_QWORD *)(a1 + 32);
  v5 = *(_QWORD *)(a1 + 40);
  v6 = *(_QWORD *)(a1 + 48);
  v65 = *(unsigned __int8 *)(a1 + 56);
  v66 = *(unsigned __int8 *)(a1 + 57);
  v7 = *(unsigned __int8 *)(a1 + 58);
  v63 = *(unsigned __int8 *)(a1 + 59);
  v62 = *(unsigned __int8 *)(a1 + 60);
  v61 = *(_QWORD **)(a1 + 64);
  v59 = *(_QWORD *)(a1 + 72);
  v8 = *(double *)(a1 + 80);
  v57 = *(_BYTE *)(a1 + 88);
  v9 = *(double *)(a1 + 96);
  v55 = *(_BYTE *)(a1 + 104);
  v48 = *(_QWORD *)(a1 + 112);
  v53 = *(_QWORD *)(a1 + 120);
  v46 = *(unsigned int *)(a1 + 128);
  v47 = *(unsigned __int16 *)(a1 + 132);
  v11 = *(_QWORD *)(a2 + 16);
  v10 = *(_QWORD *)(a2 + 24);
  v13 = *(_QWORD *)(a2 + 32);
  v12 = *(_QWORD *)(a2 + 40);
  v14 = *(_QWORD *)(a2 + 48);
  v64 = *(unsigned __int8 *)(a2 + 56);
  v15 = *(unsigned __int8 *)(a2 + 57);
  v16 = *(unsigned __int8 *)(a2 + 58);
  v17 = *(double *)(a2 + 80);
  v18 = *(double *)(a2 + 96);
  v19 = *(unsigned __int8 *)(a2 + 59);
  v20 = *(unsigned __int8 *)(a2 + 60);
  v60 = *(_QWORD **)(a2 + 64);
  v58 = *(_QWORD *)(a2 + 72);
  v56 = *(unsigned __int8 *)(a2 + 88);
  v54 = *(unsigned __int8 *)(a2 + 104);
  v51 = *(_QWORD *)(a2 + 112);
  v52 = *(_QWORD *)(a2 + 120);
  v49 = *(unsigned int *)(a2 + 128);
  v50 = *(unsigned __int16 *)(a2 + 132);
  if (*(_QWORD *)a1 == *(_QWORD *)a2 && *(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8))
    goto LABEL_4;
  v43 = *(_QWORD *)(a2 + 48);
  v44 = *(_QWORD *)(a1 + 32);
  v42 = *(_QWORD *)(a2 + 40);
  v40 = *(unsigned __int8 *)(a2 + 57);
  v41 = *(unsigned __int8 *)(a1 + 58);
  v21 = *(unsigned __int8 *)(a2 + 59);
  v22 = *(unsigned __int8 *)(a2 + 60);
  v23 = *(_QWORD *)(a1 + 48);
  v24 = *(_QWORD *)(a1 + 40);
  v25 = *(_QWORD *)(a2 + 32);
  v26 = *(_QWORD *)(a1 + 24);
  v27 = *(unsigned __int8 *)(a2 + 58);
  v28 = *(_QWORD *)(a1 + 16);
  v29 = *(_QWORD *)(a2 + 24);
  v30 = *(_QWORD *)(a2 + 16);
  v31 = sub_1B8B9C8D8();
  v11 = v30;
  v10 = v29;
  v2 = v28;
  v16 = v27;
  v3 = v26;
  v13 = v25;
  v5 = v24;
  v6 = v23;
  v20 = v22;
  v19 = v21;
  v15 = v40;
  v7 = v41;
  v12 = v42;
  v14 = v43;
  v4 = v44;
  v32 = v31;
  result = 0;
  if ((v32 & 1) != 0)
  {
LABEL_4:
    if (v3)
    {
      if (!v10)
        return 0;
      if (v2 == v11 && v3 == v10)
      {
        if (v4 != v13)
          return 0;
      }
      else
      {
        v45 = v5;
        v34 = sub_1B8B9C8D8();
        result = 0;
        if ((v34 & 1) == 0)
          return result;
        v5 = v45;
        if (v4 != v13)
          return result;
      }
    }
    else
    {
      result = 0;
      if (v10 || v4 != v13)
        return result;
    }
    v35 = v7 ^ v16;
    if (v5 == v12 && v6 == v14)
    {
      result = 0;
      if (((v65 ^ v64 | v66 ^ v15 | v35) & 1) != 0)
        return result;
    }
    else
    {
      v36 = sub_1B8B9C8D8();
      result = 0;
      if ((v65 ^ v64) & 1 | ((v36 & 1) == 0) | (v66 ^ v15 | v35) & 1)
        return result;
    }
    if (((v63 ^ v19) & 1) == 0 && ((v62 ^ v20) & 1) == 0)
    {
      v37 = sub_1B8B88A5C(v61, v60);
      result = 0;
      if ((v37 & 1) != 0 && v59 == v58)
      {
        if ((v57 & 1) != 0)
        {
          if (!v56)
            return 0;
        }
        else
        {
          v38 = v56;
          if (v8 != v17)
            v38 = 1;
          if ((v38 & 1) != 0)
            return 0;
        }
        if ((v55 & 1) != 0)
        {
          if (!v54)
            return 0;
        }
        else
        {
          v39 = v54;
          if (v9 != v18)
            v39 = 1;
          if ((v39 & 1) != 0)
            return 0;
        }
        v70[0] = v51;
        v70[1] = v52;
        v71 = v49;
        v72 = (v49 | (unint64_t)(v50 << 32)) >> 32;
        if (v53 == 2)
        {
          if (v52 != 2)
            return 0;
        }
        else
        {
          v67[0] = v48;
          v67[1] = v53;
          v68 = v46;
          v69 = (v46 | (unint64_t)(v47 << 32)) >> 32;
          if (v52 == 2
            || !_s13CalendarUIKit33EventSourceConstraintsModelObjectV2eeoiySbAC_ACtFZ_0((uint64_t)v67, (uint64_t)v70))
          {
            return 0;
          }
        }
        return 1;
      }
    }
  }
  return result;
}

unint64_t sub_1B8B5D164()
{
  unint64_t result;

  result = qword_1EF1BDC68;
  if (!qword_1EF1BDC68)
  {
    result = MEMORY[0x1BCCB79D0](&unk_1B8BAD07C, &type metadata for EventSourceModelObject.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF1BDC68);
  }
  return result;
}

unint64_t sub_1B8B5D1A8()
{
  unint64_t result;

  result = qword_1EF1BDC80;
  if (!qword_1EF1BDC80)
  {
    result = MEMORY[0x1BCCB79D0](&protocol conformance descriptor for EventSourceConstraintsModelObject, &type metadata for EventSourceConstraintsModelObject);
    atomic_store(result, (unint64_t *)&qword_1EF1BDC80);
  }
  return result;
}

unint64_t sub_1B8B5D1EC()
{
  unint64_t result;

  result = qword_1EF1BDCA0;
  if (!qword_1EF1BDCA0)
  {
    result = MEMORY[0x1BCCB79D0](&protocol conformance descriptor for EventSourceConstraintsModelObject, &type metadata for EventSourceConstraintsModelObject);
    atomic_store(result, (unint64_t *)&qword_1EF1BDCA0);
  }
  return result;
}

unint64_t sub_1B8B5D230(uint64_t a1)
{
  unint64_t result;

  result = sub_1B8B5D254();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1B8B5D254()
{
  unint64_t result;

  result = qword_1EF1BDCA8;
  if (!qword_1EF1BDCA8)
  {
    result = MEMORY[0x1BCCB79D0](&protocol conformance descriptor for EventSourceModelObject, &type metadata for EventSourceModelObject);
    atomic_store(result, (unint64_t *)&qword_1EF1BDCA8);
  }
  return result;
}

unint64_t sub_1B8B5D29C()
{
  unint64_t result;

  result = qword_1EF1BDCB0;
  if (!qword_1EF1BDCB0)
  {
    result = MEMORY[0x1BCCB79D0](&protocol conformance descriptor for EventSourceModelObject, &type metadata for EventSourceModelObject);
    atomic_store(result, (unint64_t *)&qword_1EF1BDCB0);
  }
  return result;
}

uint64_t destroy for EventSourceModelObject()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for EventSourceModelObject(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_DWORD *)(a1 + 56) = *(_DWORD *)(a2 + 56);
  *(_BYTE *)(a1 + 60) = *(_BYTE *)(a2 + 60);
  v5 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v5;
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_BYTE *)(a1 + 104) = *(_BYTE *)(a2 + 104);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 126) = *(_QWORD *)(a2 + 126);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for EventSourceModelObject(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  __int128 v6;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  *(_BYTE *)(a1 + 57) = *(_BYTE *)(a2 + 57);
  *(_BYTE *)(a1 + 58) = *(_BYTE *)(a2 + 58);
  *(_BYTE *)(a1 + 59) = *(_BYTE *)(a2 + 59);
  *(_BYTE *)(a1 + 60) = *(_BYTE *)(a2 + 60);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  v4 = *(_QWORD *)(a2 + 80);
  *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = v4;
  v5 = *(_QWORD *)(a2 + 96);
  *(_BYTE *)(a1 + 104) = *(_BYTE *)(a2 + 104);
  *(_QWORD *)(a1 + 96) = v5;
  v6 = *(_OWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 126) = *(_QWORD *)(a2 + 126);
  *(_OWORD *)(a1 + 112) = v6;
  return a1;
}

__n128 __swift_memcpy134_8(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __n128 result;
  __int128 v6;
  __int128 v7;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v2 = *(_OWORD *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(_OWORD *)(a1 + 16) = v2;
  *(_OWORD *)(a1 + 32) = v3;
  result = *(__n128 *)(a2 + 80);
  v6 = *(_OWORD *)(a2 + 96);
  v7 = *(_OWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 126) = *(_QWORD *)(a2 + 126);
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 112) = v7;
  *(__n128 *)(a1 + 80) = result;
  return result;
}

uint64_t assignWithTake for EventSourceModelObject(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  *(_BYTE *)(a1 + 57) = *(_BYTE *)(a2 + 57);
  *(_BYTE *)(a1 + 58) = *(_BYTE *)(a2 + 58);
  *(_BYTE *)(a1 + 59) = *(_BYTE *)(a2 + 59);
  *(_BYTE *)(a1 + 60) = *(_BYTE *)(a2 + 60);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = v6;
  *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_BYTE *)(a1 + 104) = *(_BYTE *)(a2 + 104);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 126) = *(_QWORD *)(a2 + 126);
  return a1;
}

uint64_t getEnumTagSinglePayload for EventSourceModelObject(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 134))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for EventSourceModelObject(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 120) = 0;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_WORD *)(result + 132) = 0;
    *(_DWORD *)(result + 128) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 134) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 134) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for EventSourceModelObject()
{
  return &type metadata for EventSourceModelObject;
}

uint64_t getEnumTagSinglePayload for EventSourceModelObject.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF3)
    goto LABEL_17;
  if (a2 + 13 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 13) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 13;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 13;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 13;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0xE;
  v8 = v6 - 14;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for EventSourceModelObject.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 13 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 13) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF3)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF2)
    return ((uint64_t (*)(void))((char *)&loc_1B8B5D764 + 4 * byte_1B8BACDE3[v4]))();
  *a1 = a2 + 13;
  return ((uint64_t (*)(void))((char *)sub_1B8B5D798 + 4 * byte_1B8BACDDE[v4]))();
}

uint64_t sub_1B8B5D798(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B8B5D7A0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1B8B5D7A8);
  return result;
}

uint64_t sub_1B8B5D7B4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1B8B5D7BCLL);
  *(_BYTE *)result = a2 + 13;
  return result;
}

uint64_t sub_1B8B5D7C0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B8B5D7C8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for EventSourceModelObject.CodingKeys()
{
  return &type metadata for EventSourceModelObject.CodingKeys;
}

unint64_t sub_1B8B5D7E8()
{
  unint64_t result;

  result = qword_1EF1BDCD8;
  if (!qword_1EF1BDCD8)
  {
    result = MEMORY[0x1BCCB79D0](&unk_1B8BAD054, &type metadata for EventSourceModelObject.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF1BDCD8);
  }
  return result;
}

unint64_t sub_1B8B5D830()
{
  unint64_t result;

  result = qword_1EF1BDCE0;
  if (!qword_1EF1BDCE0)
  {
    result = MEMORY[0x1BCCB79D0](&unk_1B8BACFC4, &type metadata for EventSourceModelObject.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF1BDCE0);
  }
  return result;
}

unint64_t sub_1B8B5D878()
{
  unint64_t result;

  result = qword_1EF1BDCE8;
  if (!qword_1EF1BDCE8)
  {
    result = MEMORY[0x1BCCB79D0](&unk_1B8BACFEC, &type metadata for EventSourceModelObject.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF1BDCE8);
  }
  return result;
}

uint64_t sub_1B8B5D8BC(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_1B8B9C8D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x70756F7247707061 && a2 == 0xEA00000000004449 || (sub_1B8B9C8D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x7954656372756F73 && a2 == 0xEA00000000006570 || (sub_1B8B9C8D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x656C746974 && a2 == 0xE500000000000000 || (sub_1B8B9C8D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6167656C65447369 && a2 == 0xEA00000000006574 || (sub_1B8B9C8D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6567616E614D7369 && a2 == 0xE900000000000064 || (sub_1B8B9C8D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x6261746972577369 && a2 == 0xEA0000000000656CLL || (sub_1B8B9C8D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001B8BB8590 || (sub_1B8B9C8D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001B8BB8960 || (sub_1B8B9C8D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x64644172656E776FLL && a2 == 0xEE00736573736572 || (sub_1B8B9C8D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x80000001B8BB8980 || (sub_1B8B9C8D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000001B8BB89A0 || (sub_1B8B9C8D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x80000001B8BB89C0 || (sub_1B8B9C8D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else if (a1 == 0x69617274736E6F63 && a2 == 0xEB0000000073746ELL)
  {
    swift_bridgeObjectRelease();
    return 13;
  }
  else
  {
    v6 = sub_1B8B9C8D8();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 13;
    else
      return 14;
  }
}

uint64_t EventAlarmModelObject.init(id:relativeOffset:absoluteDate:isDefaultAlarm:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X8>, double a6@<D0>)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;

  v12 = type metadata accessor for EventAlarmModelObject();
  v13 = a5 + *(int *)(v12 + 24);
  v14 = sub_1B8B9B0F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v13, 1, 1, v14);
  *(_QWORD *)a5 = a1;
  *(_QWORD *)(a5 + 8) = a2;
  *(double *)(a5 + 16) = a6;
  result = sub_1B8B5DF44(a3, v13);
  *(_BYTE *)(a5 + *(int *)(v12 + 28)) = a4;
  return result;
}

uint64_t type metadata accessor for EventAlarmModelObject()
{
  uint64_t result;

  result = qword_1EF1BDD20;
  if (!qword_1EF1BDD20)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1B8B5DF44(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1B2D18);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t EventAlarmModelObject.id.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t EventAlarmModelObject.id.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*EventAlarmModelObject.id.modify())()
{
  return nullsub_1;
}

double EventAlarmModelObject.relativeOffset.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 16);
}

void EventAlarmModelObject.relativeOffset.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 16) = a1;
}

uint64_t (*EventAlarmModelObject.relativeOffset.modify())()
{
  return nullsub_1;
}

uint64_t EventAlarmModelObject.absoluteDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for EventAlarmModelObject() + 24);
  return sub_1B8B5E04C(v3, a1);
}

uint64_t sub_1B8B5E04C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1B2D18);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t EventAlarmModelObject.absoluteDate.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for EventAlarmModelObject() + 24);
  return sub_1B8B5DF44(a1, v3);
}

uint64_t (*EventAlarmModelObject.absoluteDate.modify())(_QWORD)
{
  type metadata accessor for EventAlarmModelObject();
  return nullsub_1;
}

uint64_t EventAlarmModelObject.isDefaultAlarm.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for EventAlarmModelObject() + 28));
}

uint64_t EventAlarmModelObject.isDefaultAlarm.setter(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for EventAlarmModelObject();
  *(_BYTE *)(v1 + *(int *)(result + 28)) = a1;
  return result;
}

uint64_t (*EventAlarmModelObject.isDefaultAlarm.modify())(_QWORD)
{
  type metadata accessor for EventAlarmModelObject();
  return nullsub_1;
}

uint64_t EventAlarmModelObject.init(_:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1B2D18);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for EventAlarmModelObject();
  v8 = MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = (uint64_t)&v10[*(int *)(v8 + 24)];
  v12 = sub_1B8B9B0F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v11, 1, 1, v12);
  v13 = a1[3];
  v14 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v13);
  *(_QWORD *)v10 = (*(uint64_t (**)(uint64_t, uint64_t))(v14 + 16))(v13, v14);
  *((_QWORD *)v10 + 1) = v15;
  v16 = a1[3];
  v17 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v16);
  *((double *)v10 + 2) = (*(double (**)(uint64_t, uint64_t))(v17 + 24))(v16, v17);
  v18 = a1[3];
  v19 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v18);
  (*(void (**)(uint64_t, uint64_t))(v19 + 32))(v18, v19);
  sub_1B8B5DF44((uint64_t)v6, v11);
  v20 = a1[3];
  v21 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v20);
  v10[*(int *)(v7 + 28)] = (*(uint64_t (**)(uint64_t, uint64_t))(v21 + 40))(v20, v21) & 1;
  sub_1B8B5E310((uint64_t)v10, a2);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return sub_1B8B5E354((uint64_t)v10);
}

uint64_t sub_1B8B5E310(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for EventAlarmModelObject();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1B8B5E354(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for EventAlarmModelObject();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t EventAlarmModelObject.hash(into:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v10;

  v1 = sub_1B8B9B0F0();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1B2D18);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_bridgeObjectRetain();
  sub_1B8B9C1E8();
  swift_bridgeObjectRelease();
  sub_1B8B9C98C();
  v8 = type metadata accessor for EventAlarmModelObject();
  sub_1B8B5E04C(v0 + *(int *)(v8 + 24), (uint64_t)v7);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48))(v7, 1, v1) == 1)
  {
    sub_1B8B9C980();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v4, v7, v1);
    sub_1B8B9C980();
    sub_1B8ADBDEC(&qword_1EF1B8F38, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08A8]);
    sub_1B8B9C0C8();
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  }
  return sub_1B8B9C980();
}

uint64_t sub_1B8B5E534()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1B8B5E558 + 4 * byte_1B8BAD0D0[*v0]))(25705, 0xE200000000000000);
}

uint64_t sub_1B8B5E558()
{
  return 0x65766974616C6572;
}

uint64_t sub_1B8B5E57C()
{
  return 0x6574756C6F736261;
}

uint64_t sub_1B8B5E59C()
{
  return 0x6C75616665447369;
}

uint64_t sub_1B8B5E5C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1B8B5F940(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1B8B5E5E4()
{
  sub_1B8B5EF24();
  return sub_1B8B9C9E0();
}

uint64_t sub_1B8B5E60C()
{
  sub_1B8B5EF24();
  return sub_1B8B9C9EC();
}

uint64_t EventAlarmModelObject.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  _BYTE v8[16];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1BDCF8);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1B8B5EF24();
  sub_1B8B9C9C8();
  v8[15] = 0;
  sub_1B8B9C86C();
  if (!v1)
  {
    v8[14] = 1;
    sub_1B8B9C884();
    type metadata accessor for EventAlarmModelObject();
    v8[13] = 2;
    sub_1B8B9B0F0();
    sub_1B8ADBDEC(&qword_1EF1B8F30, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB0890]);
    sub_1B8B9C860();
    v8[12] = 3;
    sub_1B8B9C878();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t EventAlarmModelObject.hashValue.getter()
{
  sub_1B8B9C968();
  EventAlarmModelObject.hash(into:)();
  return sub_1B8B9C998();
}

uint64_t EventAlarmModelObject.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  char *v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  char v37;
  char v38;
  char v39;

  v29 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1B2D18);
  MEMORY[0x1E0C80A78](v3);
  v30 = (char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1BDD08);
  v5 = *(_QWORD *)(v31 - 8);
  MEMORY[0x1E0C80A78](v31);
  v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for EventAlarmModelObject();
  v9 = MEMORY[0x1E0C80A78](v8);
  v11 = (uint64_t *)((char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = (uint64_t)v11 + *(int *)(v9 + 24);
  v13 = sub_1B8B9B0F0();
  v14 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56);
  v34 = v12;
  v14(v12, 1, 1, v13);
  v15 = a1[3];
  v33 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v15);
  sub_1B8B5EF24();
  v32 = v7;
  v16 = v35;
  sub_1B8B9C9B0();
  if (v16)
  {
    v20 = v34;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v33);
    return sub_1B8ADE894(v20, &qword_1ED1B2D18);
  }
  else
  {
    v17 = (uint64_t)v30;
    v18 = v31;
    v19 = v5;
    v39 = 0;
    v21 = (uint64_t)v11;
    *v11 = sub_1B8B9C7DC();
    v11[1] = v22;
    v38 = 1;
    sub_1B8B9C7F4();
    v11[2] = v23;
    v37 = 2;
    sub_1B8ADBDEC(&qword_1EF1BDBD0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08C0]);
    sub_1B8B9C7D0();
    sub_1B8B5DF44(v17, v34);
    v36 = 3;
    v24 = v32;
    v25 = sub_1B8B9C7E8();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v24, v18);
    v26 = (uint64_t)v33;
    *(_BYTE *)(v21 + *(int *)(v8 + 28)) = v25 & 1;
    sub_1B8B5E310(v21, v29);
    __swift_destroy_boxed_opaque_existential_1(v26);
    return sub_1B8B5E354(v21);
  }
}

double sub_1B8B5EB14()
{
  uint64_t v0;

  return *(double *)(v0 + 16);
}

uint64_t sub_1B8B5EB1C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1B8B5E04C(v2 + *(int *)(a1 + 24), a2);
}

uint64_t sub_1B8B5EB2C(uint64_t a1)
{
  uint64_t v1;

  return *(unsigned __int8 *)(v1 + *(int *)(a1 + 28));
}

uint64_t sub_1B8B5EB38()
{
  sub_1B8B9C968();
  EventAlarmModelObject.hash(into:)();
  return sub_1B8B9C998();
}

uint64_t sub_1B8B5EB78()
{
  sub_1B8B9C968();
  EventAlarmModelObject.hash(into:)();
  return sub_1B8B9C998();
}

uint64_t sub_1B8B5EBB0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return EventAlarmModelObject.init(from:)(a1, a2);
}

uint64_t sub_1B8B5EBC4(_QWORD *a1)
{
  return EventAlarmModelObject.encode(to:)(a1);
}

uint64_t _s13CalendarUIKit21EventAlarmModelObjectV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  char v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  unsigned int (*v24)(uint64_t, uint64_t, uint64_t);
  char *v25;
  char v26;
  void (*v27)(char *, uint64_t);
  char *v29;
  uint64_t v30;

  v4 = sub_1B8B9B0F0();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1BDC48);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1B2D18);
  v12 = MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x1E0C80A78](v12);
  v17 = (char *)&v29 - v16;
  MEMORY[0x1E0C80A78](v15);
  v19 = (char *)&v29 - v18;
  if (*(_QWORD *)a1 == *(_QWORD *)a2 && *(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8)
    || (v20 = sub_1B8B9C8D8(), v21 = 0, (v20 & 1) != 0))
  {
    if (*(double *)(a1 + 16) == *(double *)(a2 + 16))
    {
      v29 = v7;
      v22 = type metadata accessor for EventAlarmModelObject();
      sub_1B8B5E04C(a1 + *(int *)(v22 + 24), (uint64_t)v19);
      v30 = v22;
      sub_1B8B5E04C(a2 + *(int *)(v22 + 24), (uint64_t)v17);
      v23 = (uint64_t)&v10[*(int *)(v8 + 48)];
      sub_1B8B5E04C((uint64_t)v19, (uint64_t)v10);
      sub_1B8B5E04C((uint64_t)v17, v23);
      v24 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
      if (v24((uint64_t)v10, 1, v4) == 1)
      {
        sub_1B8ADE894((uint64_t)v17, &qword_1ED1B2D18);
        sub_1B8ADE894((uint64_t)v19, &qword_1ED1B2D18);
        if (v24(v23, 1, v4) == 1)
        {
          sub_1B8ADE894((uint64_t)v10, &qword_1ED1B2D18);
LABEL_13:
          v21 = *(_BYTE *)(a1 + *(int *)(v30 + 28)) ^ *(_BYTE *)(a2 + *(int *)(v30 + 28)) ^ 1;
          return v21 & 1;
        }
      }
      else
      {
        sub_1B8B5E04C((uint64_t)v10, (uint64_t)v14);
        if (v24(v23, 1, v4) != 1)
        {
          v25 = v29;
          (*(void (**)(char *, uint64_t, uint64_t))(v5 + 32))(v29, v23, v4);
          sub_1B8ADBDEC((unint64_t *)&qword_1EF1BC968, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08B8]);
          v26 = sub_1B8B9C0EC();
          v27 = *(void (**)(char *, uint64_t))(v5 + 8);
          v27(v25, v4);
          sub_1B8ADE894((uint64_t)v17, &qword_1ED1B2D18);
          sub_1B8ADE894((uint64_t)v19, &qword_1ED1B2D18);
          v27(v14, v4);
          sub_1B8ADE894((uint64_t)v10, &qword_1ED1B2D18);
          if ((v26 & 1) != 0)
            goto LABEL_13;
          goto LABEL_11;
        }
        sub_1B8ADE894((uint64_t)v17, &qword_1ED1B2D18);
        sub_1B8ADE894((uint64_t)v19, &qword_1ED1B2D18);
        (*(void (**)(char *, uint64_t))(v5 + 8))(v14, v4);
      }
      sub_1B8ADE894((uint64_t)v10, &qword_1EF1BDC48);
    }
LABEL_11:
    v21 = 0;
  }
  return v21 & 1;
}

unint64_t sub_1B8B5EF24()
{
  unint64_t result;

  result = qword_1EF1BDD00;
  if (!qword_1EF1BDD00)
  {
    result = MEMORY[0x1BCCB79D0](&unk_1B8BAD31C, &type metadata for EventAlarmModelObject.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF1BDD00);
  }
  return result;
}

uint64_t sub_1B8B5EF68(uint64_t a1)
{
  uint64_t result;

  result = sub_1B8ADBDEC(&qword_1EF1BDD10, (uint64_t (*)(uint64_t))type metadata accessor for EventAlarmModelObject, (uint64_t)&protocol conformance descriptor for EventAlarmModelObject);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1B8B5EFA4()
{
  return sub_1B8ADBDEC(&qword_1EF1BDD18, (uint64_t (*)(uint64_t))type metadata accessor for EventAlarmModelObject, (uint64_t)&protocol conformance descriptor for EventAlarmModelObject);
}

_QWORD *initializeBufferWithCopyOfBuffer for EventAlarmModelObject(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(char *, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v15 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    a1[2] = a2[2];
    v8 = *(int *)(a3 + 24);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_1B8B9B0F0();
    v12 = *(_QWORD *)(v11 - 8);
    v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    swift_bridgeObjectRetain();
    if (v13(v10, 1, v11))
    {
      v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1B2D18);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    *((_BYTE *)v4 + *(int *)(a3 + 28)) = *((_BYTE *)a2 + *(int *)(a3 + 28));
  }
  return v4;
}

uint64_t destroy for EventAlarmModelObject(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 24);
  v5 = sub_1B8B9B0F0();
  v6 = *(_QWORD *)(v5 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  return result;
}

_QWORD *initializeWithCopy for EventAlarmModelObject(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int (*v12)(char *, uint64_t, uint64_t);
  uint64_t v13;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  a1[2] = a2[2];
  v7 = *(int *)(a3 + 24);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_1B8B9B0F0();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  swift_bridgeObjectRetain();
  if (v12(v9, 1, v10))
  {
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1B2D18);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  *((_BYTE *)a1 + *(int *)(a3 + 28)) = *((_BYTE *)a2 + *(int *)(a3 + 28));
  return a1;
}

_QWORD *assignWithCopy for EventAlarmModelObject(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(char *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  v6 = *(int *)(a3 + 24);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1B8B9B0F0();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1B2D18);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_7:
  *((_BYTE *)a1 + *(int *)(a3 + 28)) = *((_BYTE *)a2 + *(int *)(a3 + 28));
  return a1;
}

uint64_t initializeWithTake for EventAlarmModelObject(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void *v7;
  const void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v6 = *(int *)(a3 + 24);
  v7 = (void *)(a1 + v6);
  v8 = (const void *)(a2 + v6);
  v9 = sub_1B8B9B0F0();
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1B2D18);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  *(_BYTE *)(a1 + *(int *)(a3 + 28)) = *(_BYTE *)(a2 + *(int *)(a3 + 28));
  return a1;
}

_QWORD *assignWithTake for EventAlarmModelObject(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(char *, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  v7 = *(int *)(a3 + 24);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_1B8B9B0F0();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48);
  v13 = v12(v8, 1, v10);
  v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v8, v9, v10);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v11 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1B2D18);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
LABEL_7:
  *((_BYTE *)a1 + *(int *)(a3 + 28)) = *((_BYTE *)a2 + *(int *)(a3 + 28));
  return a1;
}

uint64_t getEnumTagSinglePayload for EventAlarmModelObject()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1B8B5F5BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1B2D18);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 24), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for EventAlarmModelObject()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1B8B5F648(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1B2D18);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 24), a2, a2, v7);
  }
  return result;
}

void sub_1B8B5F6C0()
{
  unint64_t v0;

  sub_1B8B5F748();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

void sub_1B8B5F748()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED1B2D20)
  {
    sub_1B8B9B0F0();
    v0 = sub_1B8B9C50C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED1B2D20);
  }
}

uint64_t storeEnumTagSinglePayload for EventAlarmModelObject.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1B8B5F7E8 + 4 * byte_1B8BAD0D9[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1B8B5F81C + 4 * byte_1B8BAD0D4[v4]))();
}

uint64_t sub_1B8B5F81C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B8B5F824(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1B8B5F82CLL);
  return result;
}

uint64_t sub_1B8B5F838(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1B8B5F840);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1B8B5F844(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B8B5F84C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for EventAlarmModelObject.CodingKeys()
{
  return &type metadata for EventAlarmModelObject.CodingKeys;
}

unint64_t sub_1B8B5F86C()
{
  unint64_t result;

  result = qword_1EF1BDD30;
  if (!qword_1EF1BDD30)
  {
    result = MEMORY[0x1BCCB79D0](&unk_1B8BAD2F4, &type metadata for EventAlarmModelObject.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF1BDD30);
  }
  return result;
}

unint64_t sub_1B8B5F8B4()
{
  unint64_t result;

  result = qword_1EF1BDD38;
  if (!qword_1EF1BDD38)
  {
    result = MEMORY[0x1BCCB79D0](&unk_1B8BAD264, &type metadata for EventAlarmModelObject.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF1BDD38);
  }
  return result;
}

unint64_t sub_1B8B5F8FC()
{
  unint64_t result;

  result = qword_1EF1BDD40;
  if (!qword_1EF1BDD40)
  {
    result = MEMORY[0x1BCCB79D0](&unk_1B8BAD28C, &type metadata for EventAlarmModelObject.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF1BDD40);
  }
  return result;
}

uint64_t sub_1B8B5F940(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_1B8B9C8D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x65766974616C6572 && a2 == 0xEE0074657366664FLL || (sub_1B8B9C8D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6574756C6F736261 && a2 == 0xEC00000065746144 || (sub_1B8B9C8D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6C75616665447369 && a2 == 0xEE006D72616C4174)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_1B8B9C8D8();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t static CodableViaNSSecureCoding.== infix(_:_:)(void **a1, void **a2)
{
  void *v2;
  void *v3;
  id v4;
  id v5;
  char v6;

  v2 = *a1;
  v3 = *a2;
  if (*a1)
  {
    if (v3)
    {
      v4 = v3;
      v5 = v2;
      v6 = sub_1B8B9C4D0();

      if ((v6 & 1) != 0)
        return 1;
    }
  }
  else if (!v3)
  {
    return 1;
  }
  return 0;
}

id CodableViaNSSecureCoding.wrappedValue.getter()
{
  id *v0;
  id v1;
  id v2;

  v1 = *v0;
  v2 = *v0;
  return v1;
}

void CodableViaNSSecureCoding.wrappedValue.setter(void *a1)
{
  id *v1;

  *v1 = a1;
}

uint64_t (*CodableViaNSSecureCoding.wrappedValue.modify())()
{
  return nullsub_1;
}

uint64_t CodableViaNSSecureCoding.init(wrappedValue:)@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = result;
  return result;
}

uint64_t CodableViaNSSecureCoding.init(from:)@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  id v5;
  id v6;
  id v7;
  uint64_t v9;
  unint64_t v10;
  _QWORD v11[4];

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1B8B9C9A4();
  if (!v2)
  {
    __swift_project_boxed_opaque_existential_1(v11, v11[3]);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1BDD50);
    sub_1B8B6013C(&qword_1EF1BDD58, (uint64_t (*)(void))sub_1B8B2E7F4, MEMORY[0x1E0DEE9A0]);
    sub_1B8B9C8E4();
    if (v10 >> 60 == 15)
    {
      v5 = 0;
    }
    else
    {
      v6 = objc_allocWithZone(MEMORY[0x1E0CB3710]);
      sub_1B8AF1CDC(v9, v10);
      v7 = sub_1B8B60080();
      sub_1B8ADDBD0(v9, v10);
      objc_msgSend(v7, sel_setRequiresSecureCoding_, 1);
      v5 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_initWithCoder_, v7);
      objc_msgSend(v7, sel_finishDecoding);

      sub_1B8ADDBD0(v9, v10);
    }
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v11);
    *a2 = v5;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t CodableViaNSSecureCoding.encode(to:)(_QWORD *a1)
{
  void **v1;
  void *v2;
  id v3;
  id v4;
  id v5;
  id v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  _BYTE v11[24];
  uint64_t v12;

  v2 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1B8B9C9BC();
  if (v2)
  {
    v3 = objc_allocWithZone(MEMORY[0x1E0CB36F8]);
    v4 = v2;
    v5 = objc_msgSend(v3, sel_initRequiringSecureCoding_, 1);
    objc_msgSend(v4, sel_encodeWithCoder_, v5);
    objc_msgSend(v5, sel_finishEncoding);
    v6 = objc_msgSend(v5, sel_encodedData);
    v7 = sub_1B8B9B084();
    v9 = v8;

  }
  else
  {
    v7 = 0;
    v9 = 0xF000000000000000;
  }
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v11, v12);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1BDD50);
  sub_1B8B6013C(&qword_1EF1BDD68, (uint64_t (*)(void))sub_1B8B2E728, MEMORY[0x1E0DEE988]);
  sub_1B8B9C8F0();
  sub_1B8ADDBD0(v7, v9);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v11);
}

uint64_t CodableViaNSSecureCoding.hash(into:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 16);
  sub_1B8B9C50C();
  MEMORY[0x1BCCB79D0](MEMORY[0x1E0DEFCF8], v2);
  return sub_1B8B9C518();
}

uint64_t CodableViaNSSecureCoding.hashValue.getter(uint64_t a1)
{
  _QWORD *v1;
  _QWORD v4[10];

  v4[9] = *v1;
  sub_1B8B9C968();
  CodableViaNSSecureCoding.hash(into:)((uint64_t)v4, a1);
  return sub_1B8B9C998();
}

uint64_t sub_1B8B60004@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return CodableViaNSSecureCoding.init(from:)(a1, a2);
}

uint64_t sub_1B8B6001C(_QWORD *a1)
{
  return CodableViaNSSecureCoding.encode(to:)(a1);
}

uint64_t sub_1B8B60038(uint64_t a1, uint64_t a2)
{
  _BYTE v4[72];

  sub_1B8B9C968();
  CodableViaNSSecureCoding.hash(into:)((uint64_t)v4, a2);
  return sub_1B8B9C998();
}

uint64_t sub_1B8B60078(void **a1, void **a2)
{
  return static CodableViaNSSecureCoding.== infix(_:_:)(a1, a2);
}

id sub_1B8B60080()
{
  void *v0;
  void *v1;
  id v2;
  id v3;
  id v4;
  id v6[2];

  v6[1] = *(id *)MEMORY[0x1E0C80C00];
  v1 = (void *)sub_1B8B9B078();
  v6[0] = 0;
  v2 = objc_msgSend(v0, sel_initForReadingFromData_error_, v1, v6);

  if (v2)
  {
    v3 = v6[0];
  }
  else
  {
    v4 = v6[0];
    sub_1B8B9B00C();

    swift_willThrow();
  }
  return v2;
}

uint64_t sub_1B8B6013C(unint64_t *a1, uint64_t (*a2)(void), uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    v7 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EF1BDD50);
    v8 = a2();
    result = MEMORY[0x1BCCB79D0](a3, v7, &v8);
    atomic_store(result, a1);
  }
  return result;
}

void sub_1B8B601A4()
{
  JUMPOUT(0x1BCCB79D0);
}

uint64_t sub_1B8B601B4()
{
  return swift_allocateGenericValueMetadata();
}

void **sub_1B8B601BC(void **a1, void **a2)
{
  void *v3;
  id v4;

  v3 = *a2;
  *a1 = *a2;
  v4 = v3;
  return a1;
}

void **sub_1B8B601E8(void **a1, void **a2)
{
  void *v3;
  void *v4;
  id v5;

  v3 = *a1;
  v4 = *a2;
  *a1 = *a2;
  v5 = v4;

  return a1;
}

void **sub_1B8B6021C(void **a1, void **a2)
{
  void *v3;

  v3 = *a1;
  *a1 = *a2;

  return a1;
}

uint64_t type metadata accessor for CodableViaNSSecureCoding(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for CodableViaNSSecureCoding);
}

uint64_t dispatch thunk of EventLocationPredictedLOIModel.type.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of EventLocationPredictedLOIModel.customLabel.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of EventLocationPredictedLOIModel.mapItemName.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of EventLocationPredictedLOIModel.addressCountryCode.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of EventLocationPredictedLOIModel.addressThoroughfare.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of EventLocationPredictedLOIModel.addressLocality.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t sub_1B8B6028C@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1;
  swift_getKeyPath();
  sub_1B8B60584();
  sub_1B8B9B2D0();
  result = swift_release();
  *a2 = *(_BYTE *)(v3 + 40);
  return result;
}

uint64_t sub_1B8B60300()
{
  swift_getKeyPath();
  sub_1B8B60584();
  sub_1B8B9B2C4();
  return swift_release();
}

uint64_t sub_1B8B60390()
{
  uint64_t v0;

  swift_getKeyPath();
  sub_1B8B60584();
  sub_1B8B9B2D0();
  swift_release();
  return *(unsigned __int8 *)(v0 + 40);
}

uint64_t sub_1B8B603FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_1B8ADDBD0(*(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
  v1 = v0 + OBJC_IVAR____TtC13CalendarUIKit16EKShareeWithData___observationRegistrar;
  v2 = sub_1B8B9B2E8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance();
}

uint64_t sub_1B8B6045C()
{
  return type metadata accessor for EKShareeWithData();
}

uint64_t type metadata accessor for EKShareeWithData()
{
  uint64_t result;

  result = qword_1EF1BDE00;
  if (!qword_1EF1BDE00)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1B8B604A0()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1B8B9B2E8();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_1B8B60530()
{
  return MEMORY[0x1E0DEA528];
}

uint64_t sub_1B8B6053C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  type metadata accessor for EKShareeWithData();
  result = sub_1B8B9C650();
  *a1 = result;
  return result;
}

unint64_t sub_1B8B60584()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF1BC2E8;
  if (!qword_1EF1BC2E8)
  {
    v1 = type metadata accessor for EKShareeWithData();
    result = MEMORY[0x1BCCB79D0](&unk_1B8BAD508, v1);
    atomic_store(result, (unint64_t *)&qword_1EF1BC2E8);
  }
  return result;
}

void sub_1B8B605CC()
{
  uint64_t v0;

  *(_BYTE *)(*(_QWORD *)(v0 + 16) + 40) = *(_BYTE *)(v0 + 24);
}

__n128 CUIKDateView.init(currentDate:styling:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  int *v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  __n128 result;
  __n128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  uint64_t v24;

  v21 = *(_OWORD *)(a2 + 160);
  v22 = *(_OWORD *)(a2 + 176);
  v23 = *(_OWORD *)(a2 + 192);
  v24 = *(_QWORD *)(a2 + 208);
  v17 = *(_OWORD *)(a2 + 96);
  v18 = *(_OWORD *)(a2 + 112);
  v19 = *(_OWORD *)(a2 + 128);
  v20 = *(_OWORD *)(a2 + 144);
  v13 = *(_OWORD *)(a2 + 32);
  v14 = *(_OWORD *)(a2 + 48);
  v15 = *(_OWORD *)(a2 + 64);
  v16 = *(_OWORD *)(a2 + 80);
  v11 = *(__n128 *)a2;
  v12 = *(_OWORD *)(a2 + 16);
  v5 = (int *)type metadata accessor for CUIKDateView();
  v6 = a3 + v5[6];
  strcpy((char *)v6, "EEEE, MMMM dd");
  *(_WORD *)(v6 + 14) = -4864;
  v7 = (uint64_t *)(a3 + v5[7]);
  *v7 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1B9028);
  swift_storeEnumTagMultiPayload();
  v8 = sub_1B8B9B0F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a3, a1, v8);
  v9 = a3 + v5[5];
  *(_OWORD *)(v9 + 160) = v21;
  *(_OWORD *)(v9 + 176) = v22;
  *(_OWORD *)(v9 + 192) = v23;
  *(_QWORD *)(v9 + 208) = v24;
  *(_OWORD *)(v9 + 96) = v17;
  *(_OWORD *)(v9 + 112) = v18;
  *(_OWORD *)(v9 + 128) = v19;
  *(_OWORD *)(v9 + 144) = v20;
  *(_OWORD *)(v9 + 32) = v13;
  *(_OWORD *)(v9 + 48) = v14;
  *(_OWORD *)(v9 + 64) = v15;
  *(_OWORD *)(v9 + 80) = v16;
  result = v11;
  *(__n128 *)v9 = v11;
  *(_OWORD *)(v9 + 16) = v12;
  return result;
}

uint64_t type metadata accessor for CUIKDateView()
{
  uint64_t result;

  result = qword_1EF1B8F08;
  if (!qword_1EF1B8F08)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1B8B60764(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  id v16;
  void *v17;
  void (*v18)(char *, uint64_t);
  void *v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  void *v23;
  void *v24;
  id v25;
  uint64_t v26;
  _QWORD v28[3];
  uint64_t v29;

  v28[1] = a1;
  v28[2] = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1B3018);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28[0] = sub_1B8B9B2B8();
  v6 = *(_QWORD *)(v28[0] - 8);
  MEMORY[0x1E0C80A78](v28[0]);
  v8 = (char *)v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1B8B9B288();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x1E0C80A78](v9);
  v13 = (char *)v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v15 = (char *)v28 - v14;
  v16 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB3578]), sel_init);
  type metadata accessor for CUIKDateView();
  v29 = v2;
  sub_1B8B1765C((uint64_t)v15);
  v17 = (void *)sub_1B8B9B1E0();
  v18 = *(void (**)(char *, uint64_t))(v10 + 8);
  v18(v15, v9);
  objc_msgSend(v16, sel_setCalendar_, v17);

  sub_1B8B1765C((uint64_t)v15);
  sub_1B8B9B258();
  v18(v15, v9);
  v19 = (void *)sub_1B8B9B2A0();
  (*(void (**)(char *, _QWORD))(v6 + 8))(v8, v28[0]);
  objc_msgSend(v16, sel_setTimeZone_, v19);

  sub_1B8B1765C((uint64_t)v13);
  sub_1B8B9B234();
  v18(v13, v9);
  v20 = sub_1B8B9B198();
  v21 = *(_QWORD *)(v20 - 8);
  v22 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v5, 1, v20) != 1)
  {
    v22 = (void *)sub_1B8B9B138();
    (*(void (**)(char *, uint64_t))(v21 + 8))(v5, v20);
  }
  objc_msgSend(v16, sel_setLocale_, v22);

  objc_msgSend(v16, sel_setFormattingContext_, 2);
  v23 = (void *)sub_1B8B9C14C();
  objc_msgSend(v16, sel_setLocalizedDateFormatFromTemplate_, v23);

  v24 = (void *)sub_1B8B9B0C0();
  v25 = objc_msgSend(v16, sel_stringFromDate_, v24);

  v26 = sub_1B8B9C17C();
  return v26;
}

id sub_1B8B60A44()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  id v13;
  void (*v14)(char *, uint64_t);
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  id result;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v28 = sub_1B8B9B270();
  v26 = *(_QWORD *)(v28 - 8);
  MEMORY[0x1E0C80A78](v28);
  v2 = (char *)&v25 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1B3018);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1B8B9B288();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v25 - v11;
  v13 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37F0]), sel_init);
  type metadata accessor for CUIKDateView();
  v27 = v0;
  sub_1B8B1765C((uint64_t)v12);
  sub_1B8B9B234();
  v14 = *(void (**)(char *, uint64_t))(v7 + 8);
  v14(v12, v6);
  v15 = sub_1B8B9B198();
  v16 = *(_QWORD *)(v15 - 8);
  v17 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v5, 1, v15) != 1)
  {
    v17 = (void *)sub_1B8B9B138();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v5, v15);
  }
  objc_msgSend(v13, sel_setLocale_, v17);

  sub_1B8B1765C((uint64_t)v10);
  v18 = v26;
  v19 = v28;
  (*(void (**)(char *, _QWORD, uint64_t))(v26 + 104))(v2, *MEMORY[0x1E0CB1130], v28);
  v20 = sub_1B8B9B27C();
  (*(void (**)(char *, uint64_t))(v18 + 8))(v2, v19);
  v14(v10, v6);
  v21 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithInteger_, v20);
  result = objc_msgSend(v13, sel_stringFromNumber_, v21);
  if (result)
  {
    v23 = result;
    v24 = sub_1B8B9C17C();

    return (id)v24;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_1B8B60CD0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  void *v18;
  void *v19;
  void *v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  void *v25;
  id v26;
  void (*v27)(char *, uint64_t);
  char *v28;
  uint64_t v29;

  v3 = sub_1B8B9B2B8();
  v29 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1B8B9B288();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1B8F68);
  v11 = MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x1E0C80A78](v11);
  v16 = (char *)&v27 - v15;
  MEMORY[0x1E0C80A78](v14);
  v28 = (char *)&v27 - v17;
  if (a2)
    v18 = (void *)sub_1B8B9C14C();
  else
    v18 = 0;
  v19 = (void *)objc_opt_self();
  type metadata accessor for CUIKDateView();
  sub_1B8B1765C((uint64_t)v9);
  sub_1B8B9B258();
  v27 = *(void (**)(char *, uint64_t))(v7 + 8);
  v27(v9, v6);
  v20 = (void *)sub_1B8B9B2A0();
  (*(void (**)(char *, uint64_t))(v29 + 8))(v5, v3);
  v21 = objc_msgSend(v19, sel_overlayCalendarForCalendarIdentifier_timezone_, v18, v20);

  if (v21)
  {
    sub_1B8B9B1F8();

    v22 = 0;
  }
  else
  {
    v22 = 1;
  }
  v23 = (uint64_t)v28;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v16, v22, 1, v6);
  sub_1B8B06074((uint64_t)v16, v23, &qword_1EF1B8F68);
  v24 = (void *)sub_1B8B9B0C0();
  sub_1B8ADE850(v23, (uint64_t)v13, &qword_1EF1B8F68);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v13, 1, v6) == 1)
  {
    v25 = 0;
  }
  else
  {
    v25 = (void *)sub_1B8B9B1E0();
    v27(v13, v6);
  }
  v26 = objc_msgSend((id)objc_opt_self(), sel_monthDayStringForDate_inCalendar_, v24, v25);

  if (v26)
  {
    sub_1B8B9C17C();

    sub_1B8ADE894(v23, &qword_1EF1B8F68);
  }
  else
  {
    __break(1u);
  }
}

BOOL static CUIKDateView.Styling.VerticalContent.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t CUIKDateView.Styling.VerticalContent.hash(into:)()
{
  return sub_1B8B9C974();
}

void CUIKDateView.Styling.firstLineContent.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

_BYTE *CUIKDateView.Styling.firstLineContent.setter(_BYTE *result)
{
  _BYTE *v1;

  *v1 = *result;
  return result;
}

uint64_t (*CUIKDateView.Styling.firstLineContent.modify())()
{
  return nullsub_1;
}

void CUIKDateView.Styling.verticalContent.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 1);
}

_BYTE *CUIKDateView.Styling.verticalContent.setter(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 1) = *result;
  return result;
}

uint64_t (*CUIKDateView.Styling.verticalContent.modify())()
{
  return nullsub_1;
}

void CUIKDateView.Styling.thirdLineContent.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 2);
}

_BYTE *CUIKDateView.Styling.thirdLineContent.setter(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 2) = *result;
  return result;
}

uint64_t (*CUIKDateView.Styling.thirdLineContent.modify())()
{
  return nullsub_1;
}

double CUIKDateView.Styling.firstLinePosition.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 8);
}

void CUIKDateView.Styling.firstLinePosition.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 8) = a1;
}

uint64_t (*CUIKDateView.Styling.firstLinePosition.modify())()
{
  return nullsub_1;
}

double CUIKDateView.Styling.secondLinePosition.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 16);
}

void CUIKDateView.Styling.secondLinePosition.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 16) = a1;
}

uint64_t (*CUIKDateView.Styling.secondLinePosition.modify())()
{
  return nullsub_1;
}

double CUIKDateView.Styling.secondLineXOffset.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 24);
}

void CUIKDateView.Styling.secondLineXOffset.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 24) = a1;
}

uint64_t (*CUIKDateView.Styling.secondLineXOffset.modify())()
{
  return nullsub_1;
}

double CUIKDateView.Styling.thirdLinePosition.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 32);
}

void CUIKDateView.Styling.thirdLinePosition.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 32) = a1;
}

uint64_t (*CUIKDateView.Styling.thirdLinePosition.modify())()
{
  return nullsub_1;
}

double CUIKDateView.Styling.horizontalSpacing.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 40);
}

void CUIKDateView.Styling.horizontalSpacing.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 40) = a1;
}

uint64_t (*CUIKDateView.Styling.horizontalSpacing.modify())()
{
  return nullsub_1;
}

double CUIKDateView.Styling.dayNumberFontSize.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 48);
}

void CUIKDateView.Styling.dayNumberFontSize.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 48) = a1;
}

uint64_t (*CUIKDateView.Styling.dayNumberFontSize.modify())()
{
  return nullsub_1;
}

uint64_t CUIKDateView.Styling.monthYearFormat.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 56);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t CUIKDateView.Styling.monthYearFormat.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 56) = a1;
  *(_QWORD *)(v2 + 64) = a2;
  return result;
}

uint64_t (*CUIKDateView.Styling.monthYearFormat.modify())()
{
  return nullsub_1;
}

double CUIKDateView.Styling.monthYearFontSize.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 72);
}

void CUIKDateView.Styling.monthYearFontSize.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 72) = a1;
}

uint64_t (*CUIKDateView.Styling.monthYearFontSize.modify())()
{
  return nullsub_1;
}

double CUIKDateView.Styling.monthYearFontWeight.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 80);
}

void CUIKDateView.Styling.monthYearFontWeight.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 80) = a1;
}

uint64_t (*CUIKDateView.Styling.monthYearFontWeight.modify())()
{
  return nullsub_1;
}

uint64_t CUIKDateView.Styling.monthYearContainsNumericText.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 88);
}

uint64_t CUIKDateView.Styling.monthYearContainsNumericText.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 88) = result;
  return result;
}

uint64_t (*CUIKDateView.Styling.monthYearContainsNumericText.modify())()
{
  return nullsub_1;
}

double CUIKDateView.Styling.monthYearTracking.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 96);
}

void CUIKDateView.Styling.monthYearTracking.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 96) = a1;
}

uint64_t (*CUIKDateView.Styling.monthYearTracking.modify())()
{
  return nullsub_1;
}

uint64_t CUIKDateView.Styling.weekdayFormat.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 104);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t CUIKDateView.Styling.weekdayFormat.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 104) = a1;
  *(_QWORD *)(v2 + 112) = a2;
  return result;
}

uint64_t (*CUIKDateView.Styling.weekdayFormat.modify())()
{
  return nullsub_1;
}

double CUIKDateView.Styling.weekdayFontSize.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 120);
}

void CUIKDateView.Styling.weekdayFontSize.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 120) = a1;
}

uint64_t (*CUIKDateView.Styling.weekdayFontSize.modify())()
{
  return nullsub_1;
}

double CUIKDateView.Styling.weekdayFontWeight.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 128);
}

void CUIKDateView.Styling.weekdayFontWeight.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 128) = a1;
}

uint64_t (*CUIKDateView.Styling.weekdayFontWeight.modify())()
{
  return nullsub_1;
}

double CUIKDateView.Styling.weekdayTracking.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 136);
}

void CUIKDateView.Styling.weekdayTracking.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 136) = a1;
}

uint64_t (*CUIKDateView.Styling.weekdayTracking.modify())()
{
  return nullsub_1;
}

double CUIKDateView.Styling.weekdayXOffset.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 144);
}

void CUIKDateView.Styling.weekdayXOffset.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 144) = a1;
}

uint64_t (*CUIKDateView.Styling.weekdayXOffset.modify())()
{
  return nullsub_1;
}

double CUIKDateView.Styling.weekdayYOffset.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 152);
}

void CUIKDateView.Styling.weekdayYOffset.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 152) = a1;
}

uint64_t (*CUIKDateView.Styling.weekdayYOffset.modify())()
{
  return nullsub_1;
}

uint64_t CUIKDateView.Styling.weekdayColor.getter()
{
  return swift_retain();
}

uint64_t CUIKDateView.Styling.weekdayColor.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_release();
  *(_QWORD *)(v1 + 160) = a1;
  return result;
}

uint64_t (*CUIKDateView.Styling.weekdayColor.modify())()
{
  return nullsub_1;
}

double CUIKDateView.Styling.altCalFontSize.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 168);
}

void CUIKDateView.Styling.altCalFontSize.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 168) = a1;
}

uint64_t (*CUIKDateView.Styling.altCalFontSize.modify())()
{
  return nullsub_1;
}

double CUIKDateView.Styling.altCalFontWeight.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 176);
}

void CUIKDateView.Styling.altCalFontWeight.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 176) = a1;
}

uint64_t (*CUIKDateView.Styling.altCalFontWeight.modify())()
{
  return nullsub_1;
}

uint64_t CUIKDateView.Styling.altCalColor.getter()
{
  return swift_retain();
}

uint64_t CUIKDateView.Styling.altCalColor.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_release();
  *(_QWORD *)(v1 + 184) = a1;
  return result;
}

uint64_t (*CUIKDateView.Styling.altCalColor.modify())()
{
  return nullsub_1;
}

double CUIKDateView.Styling.altCalTracking.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 192);
}

void CUIKDateView.Styling.altCalTracking.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 192) = a1;
}

uint64_t (*CUIKDateView.Styling.altCalTracking.modify())()
{
  return nullsub_1;
}

uint64_t CUIKDateView.Styling.overlayCalendarID.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 200);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t CUIKDateView.Styling.overlayCalendarID.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 200) = a1;
  *(_QWORD *)(v2 + 208) = a2;
  return result;
}

uint64_t (*CUIKDateView.Styling.overlayCalendarID.modify())()
{
  return nullsub_1;
}

_BYTE *CUIKDateView.Styling.init(firstLinePosition:firstLineContent:secondLinePosition:secondLineXOffset:verticalContent:horizontalSpacing:dayNumberFontSize:thirdLinePosition:thirdLineContent:monthYearFormat:monthYearFontSize:monthYearFontWeight:monthYearContainsNumericText:monthYearTracking:weekdayFormat:weekdayFontSize:weekdayFontWeight:weekdayTracking:weekdayXOffset:weekdayYOffset:weekdayColor:altCalFontSize:altCalFontWeight:altCalColor:altCalTracking:overlayCalendarID:)@<X0>(_BYTE *result@<X0>, char *a2@<X1>, char *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char a6@<W5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, double a10@<D0>, double a11@<D1>, double a12@<D2>, double a13@<D3>, double a14@<D4>, double a15@<D5>, double a16@<D6>, double a17@<D7>, uint64_t a18, __int128 a19, __int128 a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28)
{
  char v28;
  char v29;

  v28 = *a2;
  v29 = *a3;
  *(_BYTE *)a9 = *result;
  *(_BYTE *)(a9 + 1) = v28;
  *(_BYTE *)(a9 + 2) = v29;
  *(double *)(a9 + 8) = a10;
  *(double *)(a9 + 16) = a11;
  *(double *)(a9 + 24) = a12;
  *(double *)(a9 + 32) = a15;
  *(double *)(a9 + 40) = a13;
  *(double *)(a9 + 48) = a14;
  *(_QWORD *)(a9 + 56) = a4;
  *(_QWORD *)(a9 + 64) = a5;
  *(double *)(a9 + 72) = a16;
  *(double *)(a9 + 80) = a17;
  *(_BYTE *)(a9 + 88) = a6;
  *(_QWORD *)(a9 + 96) = a18;
  *(_QWORD *)(a9 + 104) = a7;
  *(_QWORD *)(a9 + 112) = a8;
  *(_OWORD *)(a9 + 120) = a19;
  *(_OWORD *)(a9 + 136) = a20;
  *(_QWORD *)(a9 + 152) = a21;
  *(_QWORD *)(a9 + 160) = a22;
  *(_QWORD *)(a9 + 168) = a23;
  *(_QWORD *)(a9 + 176) = a24;
  *(_QWORD *)(a9 + 184) = a25;
  *(_QWORD *)(a9 + 192) = a26;
  *(_QWORD *)(a9 + 200) = a27;
  *(_QWORD *)(a9 + 208) = a28;
  return result;
}

uint64_t sub_1B8B6151C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  CGFloat v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  char v21;
  uint64_t KeyPath;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  id v34;
  uint64_t v35;

  v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1B9348);
  MEMORY[0x1E0C80A78](v32);
  v5 = (uint64_t *)((char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = sub_1B8B9B5D0();
  v30 = *(_QWORD *)(v6 - 8);
  v31 = v6;
  MEMORY[0x1E0C80A78](v6);
  v33 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(double *)(a1 + 48);
  v34 = sub_1B8B60A44();
  v35 = v9;
  sub_1B8ADDBE4();
  v10 = sub_1B8B9BBAC();
  v12 = v11;
  v14 = v13 & 1;
  v15 = sub_1B8B9C14C();
  CTFontCreateWithNameAndOptions((CFStringRef)v15, v8, 0, 0x400uLL);

  sub_1B8B9BAE0();
  v16 = sub_1B8B9BB94();
  v18 = v17;
  LOBYTE(v15) = v19;
  v29 = v20;
  swift_release();
  v21 = v15 & 1;
  sub_1B8ADDA88(v10, v12, v14);
  swift_bridgeObjectRelease();
  KeyPath = swift_getKeyPath();
  v23 = v33;
  sub_1B8B9B5C4();
  v24 = swift_getKeyPath();
  v25 = v31;
  v26 = v30;
  (*(void (**)(char *, char *, uint64_t))(v30 + 16))((char *)v5 + *(int *)(v32 + 28), v23, v31);
  *v5 = v24;
  v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1B91B8);
  sub_1B8ADE850((uint64_t)v5, a2 + *(int *)(v27 + 36), &qword_1EF1B9348);
  *(_QWORD *)a2 = v16;
  *(_QWORD *)(a2 + 8) = v18;
  *(_BYTE *)(a2 + 16) = v21;
  *(_QWORD *)(a2 + 24) = v29;
  *(_QWORD *)(a2 + 32) = KeyPath;
  *(_QWORD *)(a2 + 40) = 1;
  *(_BYTE *)(a2 + 48) = 0;
  *(_WORD *)(a2 + 49) = 257;
  sub_1B8ADD7C0(v16, v18, v21);
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1B8ADE894((uint64_t)v5, &qword_1EF1B9348);
  (*(void (**)(char *, uint64_t))(v26 + 8))(v33, v25);
  sub_1B8ADDA88(v16, v18, v21);
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B8B617A0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t KeyPath;
  char *v46;
  char v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t *v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  int v87;
  char *v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  char v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  char v106;

  v99 = a2;
  v85 = sub_1B8B9B528();
  v84 = *(_QWORD *)(v85 - 8);
  v3 = MEMORY[0x1E0C80A78](v85);
  v81 = (char *)&v71 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v3);
  v82 = (char *)&v71 - v5;
  v78 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1BDF58);
  MEMORY[0x1E0C80A78](v78);
  v80 = (uint64_t)&v71 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v98 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1BDF48);
  v7 = MEMORY[0x1E0C80A78](v98);
  v79 = (uint64_t)&v71 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v83 = (uint64_t)&v71 - v9;
  v95 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1BDF68);
  MEMORY[0x1E0C80A78](v95);
  v97 = (uint64_t)&v71 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v76 = sub_1B8B9B5D0();
  v75 = *(_QWORD *)(v76 - 8);
  MEMORY[0x1E0C80A78](v76);
  v74 = (char *)&v71 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v96 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1BDF18);
  v12 = MEMORY[0x1E0C80A78](v96);
  v73 = (char *)&v71 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v77 = (uint64_t)&v71 - v14;
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1B9388);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v71 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1BDF70);
  v93 = *(_QWORD *)(v18 - 8);
  v94 = v18;
  MEMORY[0x1E0C80A78](v18);
  v89 = (char *)&v71 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v92 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1BDF38);
  MEMORY[0x1E0C80A78](v92);
  v21 = (char *)&v71 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v91 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1BDF28);
  MEMORY[0x1E0C80A78](v91);
  v88 = (char *)&v71 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = sub_1B8B9AE80();
  v24 = *(_QWORD *)(v23 - 8);
  MEMORY[0x1E0C80A78](v23);
  v26 = (char *)&v71 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = a1[7];
  v28 = a1[8];
  v86 = a1[10];
  v29 = sub_1B8B60764(v27, v28);
  v31 = v30;
  v100 = v29;
  v101 = v30;
  sub_1B8B9AE38();
  sub_1B8ADDBE4();
  sub_1B8B9C53C();
  v87 = v32;
  (*(void (**)(char *, uint64_t))(v24 + 8))(v26, v23);
  v72 = v29;
  v100 = v29;
  v101 = v31;
  v90 = v31;
  swift_bridgeObjectRetain();
  v33 = sub_1B8B9BBAC();
  v35 = v34;
  v37 = v36 & 1;
  v38 = sub_1B8B9BA44();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 56))(v17, 1, 1, v38);
  sub_1B8B9BA68();
  sub_1B8ADE894((uint64_t)v17, &qword_1EF1B9388);
  v39 = sub_1B8B9BB94();
  v41 = v40;
  LOBYTE(v31) = v42;
  v44 = v43;
  swift_release();
  LOBYTE(v31) = v31 & 1;
  sub_1B8ADDA88(v33, v35, v37);
  swift_bridgeObjectRelease();
  KeyPath = swift_getKeyPath();
  v100 = v39;
  v101 = v41;
  v102 = v31;
  v103 = v44;
  v104 = KeyPath;
  v105 = 1;
  v106 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1B9100);
  sub_1B8ADE77C();
  v46 = v89;
  sub_1B8B9BD20();
  v47 = v31;
  v48 = (uint64_t)v88;
  sub_1B8ADDA88(v39, v41, v47);
  swift_release();
  swift_bridgeObjectRelease();
  LODWORD(v44) = sub_1B8B9B8F4();
  v50 = v93;
  v49 = v94;
  (*(void (**)(char *, char *, uint64_t))(v93 + 16))(v21, v46, v94);
  *(_DWORD *)&v21[*(int *)(v92 + 36)] = v44;
  (*(void (**)(char *, uint64_t))(v50 + 8))(v46, v49);
  sub_1B8ADE850((uint64_t)v21, v48, &qword_1EF1BDF38);
  *(_WORD *)(v48 + *(int *)(v91 + 36)) = 257;
  sub_1B8ADE894((uint64_t)v21, &qword_1EF1BDF38);
  if ((v87 & 1) != 0)
  {
    v61 = v80;
    sub_1B8ADE850(v48, v80, &qword_1EF1BDF28);
    v62 = (uint64_t *)(v61 + *(int *)(v78 + 52));
    v63 = v90;
    *v62 = v72;
    v62[1] = v63;
    v64 = v82;
    sub_1B8B9B51C();
    v65 = v84;
    v66 = v85;
    (*(void (**)(char *, char *, uint64_t))(v84 + 16))(v81, v64, v85);
    sub_1B8ADBDEC(&qword_1EF1B9090, (uint64_t (*)(uint64_t))MEMORY[0x1E0CD9580], MEMORY[0x1E0CD9578]);
    v67 = sub_1B8B9B48C();
    v68 = v79;
    sub_1B8ADE850(v61, v79, &qword_1EF1BDF58);
    *(_QWORD *)(v68 + *(int *)(v98 + 36)) = v67;
    (*(void (**)(char *, uint64_t))(v65 + 8))(v64, v66);
    sub_1B8ADE894(v61, &qword_1EF1BDF58);
    v58 = &qword_1EF1BDF48;
    v69 = v83;
    sub_1B8B06074(v68, v83, &qword_1EF1BDF48);
    sub_1B8ADE850(v69, v97, &qword_1EF1BDF48);
    swift_storeEnumTagMultiPayload();
    sub_1B8B6745C();
    sub_1B8B67228(&qword_1EF1BDF40, &qword_1EF1BDF48, &qword_1EF1BDF50, &qword_1EF1BDF58);
    sub_1B8B9B870();
    v60 = v69;
  }
  else
  {
    swift_bridgeObjectRelease();
    v51 = v74;
    sub_1B8B9B5C4();
    v52 = swift_getKeyPath();
    v53 = (uint64_t)v73;
    v54 = (uint64_t *)&v73[*(int *)(v96 + 36)];
    v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1B9348);
    v56 = v75;
    v57 = v76;
    (*(void (**)(char *, char *, uint64_t))(v75 + 16))((char *)v54 + *(int *)(v55 + 28), v51, v76);
    *v54 = v52;
    sub_1B8ADE850(v48, v53, &qword_1EF1BDF28);
    (*(void (**)(char *, uint64_t))(v56 + 8))(v51, v57);
    v58 = &qword_1EF1BDF18;
    v59 = v77;
    sub_1B8B06074(v53, v77, &qword_1EF1BDF18);
    sub_1B8ADE850(v59, v97, &qword_1EF1BDF18);
    swift_storeEnumTagMultiPayload();
    sub_1B8B6745C();
    sub_1B8B67228(&qword_1EF1BDF40, &qword_1EF1BDF48, &qword_1EF1BDF50, &qword_1EF1BDF58);
    sub_1B8B9B870();
    v60 = v59;
  }
  sub_1B8ADE894(v60, v58);
  return sub_1B8ADE894(v48, &qword_1EF1BDF28);
}

uint64_t sub_1B8B62064@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  int v48;
  uint64_t KeyPath;
  char *v50;
  uint64_t v51;
  unint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t *v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t *v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  char *v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  int v95;
  char *v96;
  uint64_t v97;
  char *v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  char *v115;
  uint64_t v116;
  uint64_t v117;
  char v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  char v122;

  v114 = a2;
  v93 = sub_1B8B9B528();
  v92 = *(_QWORD *)(v93 - 8);
  v3 = MEMORY[0x1E0C80A78](v93);
  v89 = (char *)&v80 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v3);
  v90 = (char *)&v80 - v5;
  v86 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1B93D8);
  MEMORY[0x1E0C80A78](v86);
  v88 = (char *)&v80 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v113 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1B9158);
  v7 = MEMORY[0x1E0C80A78](v113);
  v87 = (uint64_t)&v80 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v91 = (uint64_t)&v80 - v9;
  v110 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1B9280);
  MEMORY[0x1E0C80A78](v110);
  v112 = (uint64_t)&v80 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v83 = sub_1B8B9B5D0();
  v82 = *(_QWORD *)(v83 - 8);
  MEMORY[0x1E0C80A78](v83);
  v81 = (char *)&v80 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v111 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1B9110);
  v12 = MEMORY[0x1E0C80A78](v111);
  v80 = (char *)&v80 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v84 = (uint64_t)&v80 - v14;
  v104 = sub_1B8B9BB58();
  v101 = *(_QWORD *)(v104 - 8);
  MEMORY[0x1E0C80A78](v104);
  v96 = (char *)&v80 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1B9388);
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v80 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v107 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1B93A8);
  v105 = *(_QWORD *)(v107 - 8);
  MEMORY[0x1E0C80A78](v107);
  v102 = (char *)&v80 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v106 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1B93B8);
  v103 = *(_QWORD *)(v106 - 8);
  MEMORY[0x1E0C80A78](v106);
  v99 = (char *)&v80 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v100 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1B9140);
  MEMORY[0x1E0C80A78](v100);
  v98 = (char *)&v80 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1B9398);
  v108 = *(_QWORD *)(v22 - 8);
  v109 = v22;
  MEMORY[0x1E0C80A78](v22);
  v115 = (char *)&v80 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v95 = *(unsigned __int8 *)(a1 + 1);
  v24 = *(_QWORD *)(a1 + 104);
  v25 = *(_QWORD *)(a1 + 112);
  v94 = *(_QWORD *)(a1 + 128);
  v26 = *(_QWORD *)(a1 + 160);
  v27 = sub_1B8B60764(v24, v25);
  v29 = v28;
  v85 = v27;
  v116 = v27;
  v117 = v28;
  sub_1B8ADDBE4();
  v97 = v29;
  swift_bridgeObjectRetain();
  v30 = sub_1B8B9BBAC();
  v32 = v31;
  v34 = v33 & 1;
  v116 = v26;
  swift_retain();
  v35 = sub_1B8B9BB70();
  v37 = v36;
  LOBYTE(a1) = v38 & 1;
  sub_1B8ADDA88(v30, v32, v34);
  swift_release();
  swift_bridgeObjectRelease();
  v39 = sub_1B8B9BA44();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 56))(v18, 1, 1, v39);
  sub_1B8B9BA68();
  sub_1B8ADE894((uint64_t)v18, &qword_1EF1B9388);
  v40 = sub_1B8B9BB94();
  v42 = v41;
  v44 = v43;
  v46 = v45;
  swift_release();
  v47 = v37;
  v48 = v95;
  sub_1B8ADDA88(v35, v47, a1);
  swift_bridgeObjectRelease();
  KeyPath = swift_getKeyPath();
  v116 = v40;
  v117 = v42;
  v118 = v44 & 1;
  v119 = v46;
  v120 = KeyPath;
  v121 = 1;
  v122 = 0;
  v50 = v96;
  if (v48)
    sub_1B8B9BB4C();
  else
    sub_1B8B9BB40();
  v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1B9100);
  v52 = sub_1B8ADE77C();
  v53 = v102;
  sub_1B8B9BC0C();
  (*(void (**)(char *, uint64_t))(v101 + 8))(v50, v104);
  sub_1B8ADDA88(v116, v117, v118);
  swift_bridgeObjectRelease();
  swift_release();
  v116 = v51;
  v117 = v52;
  swift_getOpaqueTypeConformance2();
  v54 = v99;
  v55 = v107;
  sub_1B8B9BD20();
  (*(void (**)(char *, uint64_t))(v105 + 8))(v53, v55);
  v56 = v103;
  v57 = (uint64_t)v98;
  v58 = v106;
  (*(void (**)(char *, char *, uint64_t))(v103 + 16))(v98, v54, v106);
  *(_WORD *)(v57 + *(int *)(v100 + 36)) = 257;
  (*(void (**)(char *, uint64_t))(v56 + 8))(v54, v58);
  sub_1B8B66F78();
  v59 = v115;
  sub_1B8B9BBB8();
  sub_1B8ADE894(v57, &qword_1EF1B9140);
  v61 = v108;
  v60 = v109;
  if (v48)
  {
    v62 = (uint64_t)v88;
    (*(void (**)(char *, char *, uint64_t))(v108 + 16))(v88, v59, v109);
    v63 = (uint64_t *)(v62 + *(int *)(v86 + 52));
    v64 = v97;
    *v63 = v85;
    v63[1] = v64;
    v65 = v90;
    sub_1B8B9B51C();
    v66 = v92;
    v67 = v93;
    (*(void (**)(char *, char *, uint64_t))(v92 + 16))(v89, v65, v93);
    sub_1B8ADBDEC(&qword_1EF1B9090, (uint64_t (*)(uint64_t))MEMORY[0x1E0CD9580], MEMORY[0x1E0CD9578]);
    v68 = sub_1B8B9B48C();
    v69 = v87;
    sub_1B8ADE850(v62, v87, &qword_1EF1B93D8);
    *(_QWORD *)(v69 + *(int *)(v113 + 36)) = v68;
    (*(void (**)(char *, uint64_t))(v66 + 8))(v65, v67);
    sub_1B8ADE894(v62, &qword_1EF1B93D8);
    v70 = &qword_1EF1B9158;
    v71 = v91;
    sub_1B8B06074(v69, v91, &qword_1EF1B9158);
    sub_1B8ADE850(v71, v112, &qword_1EF1B9158);
    swift_storeEnumTagMultiPayload();
    sub_1B8B6717C();
    sub_1B8B67228(&qword_1EF1B9150, &qword_1EF1B9158, &qword_1EF1B93D0, &qword_1EF1B93D8);
    v59 = v115;
  }
  else
  {
    swift_bridgeObjectRelease();
    v72 = v81;
    sub_1B8B9B5C4();
    v73 = swift_getKeyPath();
    v74 = (uint64_t)v80;
    v75 = (uint64_t *)&v80[*(int *)(v111 + 36)];
    v76 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1B9348);
    v77 = v82;
    v78 = v83;
    (*(void (**)(char *, char *, uint64_t))(v82 + 16))((char *)v75 + *(int *)(v76 + 28), v72, v83);
    *v75 = v73;
    (*(void (**)(uint64_t, char *, uint64_t))(v61 + 16))(v74, v59, v60);
    (*(void (**)(char *, uint64_t))(v77 + 8))(v72, v78);
    v70 = &qword_1EF1B9110;
    v71 = v84;
    sub_1B8B06074(v74, v84, &qword_1EF1B9110);
    sub_1B8ADE850(v71, v112, &qword_1EF1B9110);
    swift_storeEnumTagMultiPayload();
    sub_1B8B6717C();
    sub_1B8B67228(&qword_1EF1B9150, &qword_1EF1B9158, &qword_1EF1B93D0, &qword_1EF1B93D8);
  }
  sub_1B8B9B870();
  sub_1B8ADE894(v71, v70);
  return (*(uint64_t (**)(char *, uint64_t))(v61 + 8))(v59, v60);
}

uint64_t sub_1B8B62A5C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t KeyPath;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  char *v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  int v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  char v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char v80;

  v72 = a2;
  v69 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1BDE90);
  MEMORY[0x1E0C80A78](v69);
  v71 = (uint64_t)&v51 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v70 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1BDE98);
  MEMORY[0x1E0C80A78](v70);
  v52 = (uint64_t)&v51 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v56 = sub_1B8B9B5D0();
  v55 = *(_QWORD *)(v56 - 8);
  MEMORY[0x1E0C80A78](v56);
  v68 = (char *)&v51 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v63 = sub_1B8B9BB58();
  v60 = *(_QWORD *)(v63 - 8);
  MEMORY[0x1E0C80A78](v63);
  v73 = (char *)&v51 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1B9388);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v51 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1B93A8);
  v64 = *(_QWORD *)(v53 - 8);
  MEMORY[0x1E0C80A78](v53);
  v61 = (char *)&v51 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v65 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1B93B8);
  v62 = *(_QWORD *)(v65 - 8);
  MEMORY[0x1E0C80A78](v65);
  v59 = (char *)&v51 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1B9140);
  MEMORY[0x1E0C80A78](v58);
  v13 = (char *)&v51 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1BDEA0);
  MEMORY[0x1E0C80A78](v54);
  v67 = (char *)&v51 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v57 = *(unsigned __int8 *)(a1 + 1);
  v66 = *(_QWORD *)(a1 + 184);
  sub_1B8B60CD0(*(_QWORD *)(a1 + 200), *(_QWORD *)(a1 + 208));
  v74 = v15;
  v75 = v16;
  sub_1B8ADDBE4();
  v17 = sub_1B8B9BBAC();
  v19 = v18;
  v21 = v20 & 1;
  v22 = sub_1B8B9BA44();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v9, 1, 1, v22);
  sub_1B8B9BA68();
  sub_1B8ADE894((uint64_t)v9, &qword_1EF1B9388);
  v23 = sub_1B8B9BB94();
  v25 = v24;
  v27 = v26;
  v29 = v28;
  swift_release();
  sub_1B8ADDA88(v17, v19, v21);
  swift_bridgeObjectRelease();
  KeyPath = swift_getKeyPath();
  v74 = v23;
  v75 = v25;
  v76 = v27 & 1;
  v77 = v29;
  v78 = KeyPath;
  v79 = 1;
  v80 = 0;
  if (v57 == 1)
    sub_1B8B9BB40();
  else
    sub_1B8B9BB4C();
  v31 = v56;
  v32 = v55;
  v33 = v54;
  v34 = v53;
  v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1B9100);
  v36 = sub_1B8ADE77C();
  v37 = v61;
  v38 = v73;
  sub_1B8B9BC0C();
  (*(void (**)(char *, uint64_t))(v60 + 8))(v38, v63);
  sub_1B8ADDA88(v74, v75, v76);
  swift_bridgeObjectRelease();
  swift_release();
  v74 = v35;
  v75 = v36;
  swift_getOpaqueTypeConformance2();
  v39 = v59;
  sub_1B8B9BD20();
  (*(void (**)(char *, uint64_t))(v64 + 8))(v37, v34);
  v40 = v62;
  v41 = v65;
  (*(void (**)(char *, char *, uint64_t))(v62 + 16))(v13, v39, v65);
  *(_WORD *)&v13[*(int *)(v58 + 36)] = 257;
  (*(void (**)(char *, uint64_t))(v40 + 8))(v39, v41);
  v42 = v68;
  sub_1B8B9B5C4();
  v43 = swift_getKeyPath();
  v44 = (uint64_t)v67;
  v45 = (uint64_t *)&v67[*(int *)(v33 + 36)];
  v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1B9348);
  (*(void (**)(char *, char *, uint64_t))(v32 + 16))((char *)v45 + *(int *)(v46 + 28), v42, v31);
  *v45 = v43;
  sub_1B8ADE850((uint64_t)v13, v44, &qword_1EF1B9140);
  (*(void (**)(char *, uint64_t))(v32 + 8))(v42, v31);
  sub_1B8ADE894((uint64_t)v13, &qword_1EF1B9140);
  v47 = v66;
  if (v66)
  {
    v48 = v52;
    sub_1B8ADE850(v44, v52, &qword_1EF1BDEA0);
    v49 = v71;
    *(_QWORD *)(v48 + *(int *)(v70 + 36)) = v47;
    sub_1B8ADE850(v48, v49, &qword_1EF1BDE98);
    swift_storeEnumTagMultiPayload();
    sub_1B8B66E70();
    sub_1B8B66EF4();
    swift_retain();
    sub_1B8B9B870();
    sub_1B8ADE894(v48, &qword_1EF1BDE98);
  }
  else
  {
    sub_1B8ADE850(v44, v71, &qword_1EF1BDEA0);
    swift_storeEnumTagMultiPayload();
    sub_1B8B66E70();
    sub_1B8B66EF4();
    sub_1B8B9B870();
  }
  return sub_1B8ADE894(v44, &qword_1EF1BDEA0);
}

uint64_t CUIKDateView.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v2 = v1;
  v29 = a1;
  v26 = sub_1B8B9B90C();
  v3 = *(_QWORD *)(v26 - 8);
  MEMORY[0x1E0C80A78](v26);
  v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for CUIKDateView();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1BDE10);
  v28 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1BDE18);
  MEMORY[0x1E0C80A78](v27);
  v14 = (char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B8B6563C(v2, (uint64_t)v9);
  v15 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v16 = swift_allocObject();
  sub_1B8B6578C((uint64_t)v9, v16 + v15);
  v30 = (uint64_t)sub_1B8B657D0;
  v31 = v16;
  sub_1B8B9B900();
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1BDE20);
  v18 = sub_1B8ADE950(&qword_1EF1BDE28, &qword_1EF1BDE20, MEMORY[0x1E0CD9310]);
  sub_1B8B9BC9C();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v26);
  swift_release();
  v30 = sub_1B8B60764(*(_QWORD *)(v2 + *(int *)(v6 + 24)), *(_QWORD *)(v2 + *(int *)(v6 + 24) + 8));
  v31 = v19;
  sub_1B8ADDBE4();
  v20 = sub_1B8B9BBAC();
  v22 = v21;
  LOBYTE(v6) = v23 & 1;
  v30 = v17;
  v31 = v18;
  swift_getOpaqueTypeConformance2();
  sub_1B8B9BC78();
  sub_1B8ADDA88(v20, v22, v6);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v28 + 8))(v12, v10);
  sub_1B8B9B534();
  return sub_1B8ADE894((uint64_t)v14, &qword_1EF1BDE18);
}

uint64_t sub_1B8B633C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;

  *a3 = sub_1B8B9C014();
  a3[1] = v6;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1BDE50);
  return sub_1B8B6341C(a2, a1, (uint64_t)a3 + *(int *)(v7 + 44));
}

uint64_t sub_1B8B6341C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _BYTE *v28;
  uint64_t v29;
  unsigned __int8 v30;
  unsigned __int8 v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  double v45;
  double v46;
  double v47;
  double v48;
  double v49;
  uint64_t v50;
  double *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  double v66;
  double v67;
  double v68;
  double v69;
  uint64_t v70;
  double *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v81;
  uint64_t v82;
  uint64_t KeyPath;
  _BYTE *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  __int128 v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  void *v102;
  __int128 v103;
  uint64_t v104;
  __int128 v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  __int128 v109;
  char v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  __int128 v114;
  __int128 v115;
  uint64_t v116;
  uint64_t v117;
  __int128 v118;
  uint64_t v119;
  uint64_t v120;
  __int128 v121;

  v101 = a2;
  v92 = a1;
  v99 = a3;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1B92C0);
  MEMORY[0x1E0C80A78](v3);
  v82 = (uint64_t)&v81 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v95 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1B90A0);
  v94 = *(_QWORD *)(v95 - 8);
  MEMORY[0x1E0C80A78](v95);
  v81 = (uint64_t)&v81 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1B90A8);
  v7 = MEMORY[0x1E0C80A78](v6);
  v98 = (uint64_t)&v81 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  *(_QWORD *)&v97 = (char *)&v81 - v9;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1B93C8);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v81 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v90 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1B9148);
  v13 = MEMORY[0x1E0C80A78](v90);
  v96 = (uint64_t)&v81 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x1E0C80A78](v13);
  v89 = (uint64_t)&v81 - v16;
  MEMORY[0x1E0C80A78](v15);
  v93 = (char *)&v81 - v17;
  v87 = sub_1B8B9B4BC();
  v18 = *(_QWORD *)(v87 - 8);
  MEMORY[0x1E0C80A78](v87);
  v86 = v19;
  v20 = (char *)&v81 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v88 = type metadata accessor for CUIKDateView();
  v85 = *(_QWORD *)(v88 - 8);
  v21 = *(_QWORD *)(v85 + 64);
  MEMORY[0x1E0C80A78](v88);
  v22 = (char *)&v81 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1BDE58);
  v24 = MEMORY[0x1E0C80A78](v23);
  v91 = (uint64_t)&v81 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = MEMORY[0x1E0C80A78](v24);
  v28 = (char *)&v81 - v27;
  MEMORY[0x1E0C80A78](v26);
  v100 = (uint64_t)&v81 - v29;
  v30 = sub_1B8B9B9B4();
  v31 = sub_1B8B9B9CC();
  v32 = sub_1B8B9B9C0();
  sub_1B8B9B9C0();
  if (sub_1B8B9B9C0() != v30)
    v32 = sub_1B8B9B9C0();
  sub_1B8B9B9C0();
  if (sub_1B8B9B9C0() != v31)
    v32 = sub_1B8B9B9C0();
  *v28 = v32;
  v84 = &v28[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EF1BDE60) + 44)];
  v102 = &unk_1E6EB1258;
  KeyPath = swift_getKeyPath();
  v33 = v92;
  sub_1B8B6563C(v92, (uint64_t)&v81 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  v34 = v87;
  (*(void (**)(char *, uint64_t, uint64_t))(v18 + 16))(v20, v101, v87);
  v35 = (*(unsigned __int8 *)(v85 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v85 + 80);
  v36 = (v21 + *(unsigned __int8 *)(v18 + 80) + v35) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
  v37 = swift_allocObject();
  sub_1B8B6578C((uint64_t)v22, v37 + v35);
  (*(void (**)(unint64_t, char *, uint64_t))(v18 + 32))(v37 + v36, v20, v34);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1B9450);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1BDE68);
  sub_1B8ADE950(&qword_1EF1B9458, &qword_1EF1B9450, MEMORY[0x1E0DEAF48]);
  sub_1B8B66D00();
  v38 = v33;
  sub_1B8B9BF84();
  sub_1B8B06074((uint64_t)v28, v100, &qword_1EF1BDE58);
  v39 = v33 + *(int *)(v88 + 20);
  if (*(_BYTE *)(v39 + 1) == 1)
    v40 = 0;
  else
    v40 = *(_QWORD *)(v39 + 40);
  v41 = v97;
  v42 = v95;
  v43 = (uint64_t)v93;
  *(_QWORD *)v12 = sub_1B8B9B738();
  *((_QWORD *)v12 + 1) = v40;
  v12[16] = 0;
  v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1B9058);
  sub_1B8B647B4(v38, (uint64_t)&v12[*(int *)(v44 + 44)]);
  sub_1B8B9B4B0();
  v46 = *(double *)(v39 + 16);
  v47 = *(double *)(v39 + 24) + v45 * 0.5;
  sub_1B8B9B4B0();
  v49 = v46 * v48;
  v50 = v89;
  sub_1B8ADE850((uint64_t)v12, v89, &qword_1EF1B93C8);
  v51 = (double *)(v50 + *(int *)(v90 + 36));
  *v51 = v47;
  v51[1] = v49;
  sub_1B8ADE894((uint64_t)v12, &qword_1EF1B93C8);
  sub_1B8B06074(v50, v43, &qword_1EF1B9148);
  v52 = 1;
  if (*(_BYTE *)(v39 + 2) == 1)
  {
    v53 = *(_QWORD *)(v39 + 24);
    v54 = *(_QWORD *)(v39 + 48);
    v55 = *(_QWORD *)(v39 + 56);
    v56 = *(_QWORD *)(v39 + 64);
    v57 = *(_BYTE *)(v39 + 88);
    v58 = *(_QWORD *)(v39 + 96);
    v59 = *(_QWORD *)(v39 + 104);
    v60 = *(_QWORD *)(v39 + 112);
    v61 = *(_QWORD *)(v39 + 152);
    v62 = *(_QWORD *)(v39 + 160);
    v63 = *(_QWORD *)(v39 + 184);
    v64 = *(_QWORD *)(v39 + 192);
    LOWORD(v102) = *(_WORD *)v39;
    BYTE2(v102) = 1;
    v103 = *(_OWORD *)(v39 + 8);
    v104 = v53;
    v97 = *(_OWORD *)(v39 + 32);
    v105 = v97;
    v106 = v54;
    v107 = v55;
    v108 = v56;
    v109 = *(_OWORD *)(v39 + 72);
    v110 = v57;
    v111 = v58;
    v112 = v59;
    v113 = v60;
    v114 = *(_OWORD *)(v39 + 120);
    v115 = *(_OWORD *)(v39 + 136);
    v116 = v61;
    v118 = *(_OWORD *)(v39 + 168);
    v117 = v62;
    v119 = v63;
    v120 = v64;
    v121 = *(_OWORD *)(v39 + 200);
    v65 = v82;
    sub_1B8B62A5C((uint64_t)&v102, v82);
    sub_1B8B9B4B0();
    v67 = v66 * 0.5;
    sub_1B8B9B4B0();
    v69 = v68 * *(double *)&v97;
    v70 = v81;
    sub_1B8ADE850(v65, v81, &qword_1EF1B92C0);
    v71 = (double *)(v70 + *(int *)(v42 + 36));
    *v71 = v67;
    v71[1] = v69;
    sub_1B8ADE894(v65, &qword_1EF1B92C0);
    sub_1B8B06074(v70, v41, &qword_1EF1B90A0);
    v52 = 0;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v94 + 56))(v41, v52, 1, v42);
  v72 = v100;
  v73 = v91;
  sub_1B8ADE850(v100, v91, &qword_1EF1BDE58);
  v74 = v43;
  v75 = v43;
  v76 = v96;
  sub_1B8ADE850(v74, v96, &qword_1EF1B9148);
  v77 = v98;
  sub_1B8ADE850(v41, v98, &qword_1EF1B90A8);
  v78 = v99;
  sub_1B8ADE850(v73, v99, &qword_1EF1BDE58);
  v79 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1BDE88);
  sub_1B8ADE850(v76, v78 + *(int *)(v79 + 48), &qword_1EF1B9148);
  sub_1B8ADE850(v77, v78 + *(int *)(v79 + 64), &qword_1EF1B90A8);
  sub_1B8ADE894(v41, &qword_1EF1B90A8);
  sub_1B8ADE894(v75, &qword_1EF1B9148);
  sub_1B8ADE894(v72, &qword_1EF1BDE58);
  sub_1B8ADE894(v77, &qword_1EF1B90A8);
  sub_1B8ADE894(v76, &qword_1EF1B9148);
  return sub_1B8ADE894(v73, &qword_1EF1BDE58);
}

uint64_t sub_1B8B63CA0@<X0>(double *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  double *v8;
  double v9;
  uint64_t v10;
  uint64_t v11;
  double v12;
  uint64_t v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double *v19;
  uint64_t v21;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1BDE80);
  MEMORY[0x1E0C80A78](v6);
  v8 = (double *)((char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = *a1;
  v10 = sub_1B8B9B72C();
  v11 = a2 + *(int *)(type metadata accessor for CUIKDateView() + 20);
  v12 = v9 * *(double *)(v11 + 40);
  *(_QWORD *)v8 = v10;
  v8[1] = v12;
  *((_BYTE *)v8 + 16) = 0;
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1BDEC8);
  sub_1B8B63DC4(a2, (uint64_t)v8 + *(int *)(v13 + 44));
  sub_1B8B9B4B0();
  v15 = v14 * 0.5;
  v16 = *(double *)(v11 + 8);
  sub_1B8B9B4B0();
  v18 = v16 * v17;
  sub_1B8ADE850((uint64_t)v8, a3, &qword_1EF1BDE80);
  v19 = (double *)(a3 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EF1BDE68) + 36));
  *v19 = v15;
  v19[1] = v18;
  return sub_1B8ADE894((uint64_t)v8, &qword_1EF1BDE80);
}

uint64_t sub_1B8B63DC4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  __int16 v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  char v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  int v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  __int128 v93;
  __int128 v94;
  __int128 v95;
  uint64_t v96;
  uint64_t v97;
  __int128 v98;
  char v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  __int128 v103;
  __int128 v104;
  uint64_t v105;
  uint64_t v106;
  __int128 v107;
  uint64_t v108;
  uint64_t v109;
  __int128 v110;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1BDED0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v62 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v87 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1BDED8);
  MEMORY[0x1E0C80A78](v87);
  v91 = (uint64_t)&v62 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v90 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1BDEE0);
  MEMORY[0x1E0C80A78](v90);
  v9 = (char *)&v62 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1BDEE8);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v62 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1BDEF0);
  v14 = MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v62 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v89 = (uint64_t)&v62 - v17;
  v86 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1B92B8);
  v18 = MEMORY[0x1E0C80A78](v86);
  v20 = (char *)&v62 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v18);
  v88 = (uint64_t)&v62 - v21;
  v22 = a1 + *(int *)(type metadata accessor for CUIKDateView() + 20);
  if (*(_BYTE *)v22)
  {
    v23 = *(_WORD *)(v22 + 1);
    v24 = *(_QWORD *)(v22 + 56);
    v25 = *(_QWORD *)(v22 + 64);
    v26 = *(_BYTE *)(v22 + 88);
    v27 = *(_QWORD *)(v22 + 96);
    v28 = *(_QWORD *)(v22 + 104);
    v29 = *(_QWORD *)(v22 + 112);
    v30 = *(_QWORD *)(v22 + 152);
    v31 = *(_QWORD *)(v22 + 160);
    v32 = *(_QWORD *)(v22 + 184);
    v33 = *(_QWORD *)(v22 + 192);
    if (*(_BYTE *)v22 == 1)
    {
      LOBYTE(v92) = 1;
      *(_WORD *)((char *)&v92 + 1) = v23;
      v93 = *(_OWORD *)(v22 + 8);
      v94 = *(_OWORD *)(v22 + 24);
      v95 = *(_OWORD *)(v22 + 40);
      v96 = v24;
      v97 = v25;
      v98 = *(_OWORD *)(v22 + 72);
      v99 = v26;
      v100 = v27;
      v101 = v28;
      v102 = v29;
      v103 = *(_OWORD *)(v22 + 120);
      v104 = *(_OWORD *)(v22 + 136);
      v105 = v30;
      v107 = *(_OWORD *)(v22 + 168);
      v106 = v31;
      v108 = v32;
      v109 = v33;
      v110 = *(_OWORD *)(v22 + 200);
      v34 = v88;
      sub_1B8B62064((uint64_t)&v92, v88);
      sub_1B8ADE850(v34, v91, &qword_1EF1B92B8);
      swift_storeEnumTagMultiPayload();
      sub_1B8ADE950(&qword_1EF1BDF00, &qword_1EF1BDEE0, MEMORY[0x1E0CE0678]);
      sub_1B8B67344();
      sub_1B8B9B870();
      sub_1B8ADE850((uint64_t)v12, (uint64_t)v6, &qword_1EF1BDEE8);
      swift_storeEnumTagMultiPayload();
      sub_1B8B672C0();
      sub_1B8B673D0();
      sub_1B8B9B870();
      sub_1B8ADE894((uint64_t)v12, &qword_1EF1BDEE8);
      v35 = v34;
      v36 = &qword_1EF1B92B8;
    }
    else
    {
      LOBYTE(v92) = 2;
      *(_WORD *)((char *)&v92 + 1) = v23;
      v93 = *(_OWORD *)(v22 + 8);
      v94 = *(_OWORD *)(v22 + 24);
      v95 = *(_OWORD *)(v22 + 40);
      v96 = v24;
      v97 = v25;
      v98 = *(_OWORD *)(v22 + 72);
      v99 = v26;
      v100 = v27;
      v101 = v28;
      v102 = v29;
      v103 = *(_OWORD *)(v22 + 120);
      v104 = *(_OWORD *)(v22 + 136);
      v105 = v30;
      v107 = *(_OWORD *)(v22 + 168);
      v106 = v31;
      v108 = v32;
      v109 = v33;
      v110 = *(_OWORD *)(v22 + 200);
      v60 = v89;
      sub_1B8B617A0(&v92, v89);
      sub_1B8ADE850(v60, (uint64_t)v6, &qword_1EF1BDEF0);
      swift_storeEnumTagMultiPayload();
      sub_1B8B672C0();
      sub_1B8B673D0();
      sub_1B8B9B870();
      v35 = v60;
      v36 = &qword_1EF1BDEF0;
    }
  }
  else
  {
    v82 = v6;
    v37 = *(_BYTE *)(v22 + 1);
    v85 = a2;
    v38 = *(_BYTE *)(v22 + 2);
    v39 = *(_QWORD *)(v22 + 8);
    v40 = *(_QWORD *)(v22 + 16);
    v41 = *(_QWORD *)(v22 + 24);
    v42 = *(_QWORD *)(v22 + 32);
    v43 = *(_QWORD *)(v22 + 40);
    v44 = *(_QWORD *)(v22 + 48);
    v81 = v4;
    v46 = *(_QWORD *)(v22 + 56);
    v45 = *(_QWORD *)(v22 + 64);
    v84 = v10;
    v47 = *(_QWORD *)(v22 + 80);
    v79 = *(_QWORD *)(v22 + 72);
    v83 = v13;
    v78 = *(unsigned __int8 *)(v22 + 88);
    v77 = *(_QWORD *)(v22 + 96);
    v80 = v12;
    v48 = *(_QWORD *)(v22 + 112);
    v76 = *(_QWORD *)(v22 + 104);
    v75 = v48;
    v49 = *(_QWORD *)(v22 + 128);
    v74 = *(_QWORD *)(v22 + 120);
    v73 = v49;
    v50 = *(_QWORD *)(v22 + 144);
    v72 = *(_QWORD *)(v22 + 136);
    v71 = v50;
    v70 = *(_QWORD *)(v22 + 152);
    v69 = *(_QWORD *)(v22 + 160);
    v51 = *(_QWORD *)(v22 + 176);
    v68 = *(_QWORD *)(v22 + 168);
    v67 = v51;
    v66 = *(_QWORD *)(v22 + 184);
    v65 = *(_QWORD *)(v22 + 192);
    v52 = *(_QWORD *)(v22 + 200);
    v53 = *(_QWORD *)(v22 + 208);
    v64 = v52;
    v63 = v53;
    LOBYTE(v92) = 0;
    BYTE1(v92) = v37;
    v54 = v37;
    BYTE2(v92) = v38;
    *(_QWORD *)&v93 = v39;
    *((_QWORD *)&v93 + 1) = v40;
    *(_QWORD *)&v94 = v41;
    *((_QWORD *)&v94 + 1) = v42;
    *(_QWORD *)&v95 = v43;
    *((_QWORD *)&v95 + 1) = v44;
    v96 = v46;
    v97 = v45;
    v55 = v45;
    *(_QWORD *)&v98 = v79;
    *((_QWORD *)&v98 + 1) = v47;
    v99 = v78;
    v100 = v77;
    v101 = v76;
    v102 = v48;
    *(_QWORD *)&v103 = v74;
    *((_QWORD *)&v103 + 1) = v49;
    *(_QWORD *)&v104 = v72;
    *((_QWORD *)&v104 + 1) = v50;
    v105 = v70;
    v106 = v69;
    *(_QWORD *)&v107 = v68;
    *((_QWORD *)&v107 + 1) = v51;
    v108 = v66;
    v109 = v65;
    *(_QWORD *)&v110 = v52;
    *((_QWORD *)&v110 + 1) = v53;
    v56 = v88;
    sub_1B8B62064((uint64_t)&v92, v88);
    LOBYTE(v92) = 0;
    BYTE1(v92) = v54;
    BYTE2(v92) = v38;
    *(_QWORD *)&v93 = v39;
    *((_QWORD *)&v93 + 1) = v40;
    *(_QWORD *)&v94 = v41;
    *((_QWORD *)&v94 + 1) = v42;
    *(_QWORD *)&v95 = v43;
    *((_QWORD *)&v95 + 1) = v44;
    v96 = v46;
    v97 = v55;
    *(_QWORD *)&v98 = v79;
    *((_QWORD *)&v98 + 1) = v47;
    v99 = v78;
    v100 = v77;
    v101 = v76;
    v102 = v75;
    *(_QWORD *)&v103 = v74;
    *((_QWORD *)&v103 + 1) = v73;
    *(_QWORD *)&v104 = v72;
    *((_QWORD *)&v104 + 1) = v71;
    v105 = v70;
    v106 = v69;
    *(_QWORD *)&v107 = v68;
    *((_QWORD *)&v107 + 1) = v67;
    v108 = v66;
    v109 = v65;
    *(_QWORD *)&v110 = v64;
    *((_QWORD *)&v110 + 1) = v63;
    v57 = v89;
    sub_1B8B617A0(&v92, v89);
    sub_1B8ADE850(v56, (uint64_t)v20, &qword_1EF1B92B8);
    sub_1B8ADE850(v57, (uint64_t)v16, &qword_1EF1BDEF0);
    sub_1B8ADE850((uint64_t)v20, (uint64_t)v9, &qword_1EF1B92B8);
    v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1BDF60);
    sub_1B8ADE850((uint64_t)v16, (uint64_t)&v9[*(int *)(v58 + 48)], &qword_1EF1BDEF0);
    sub_1B8ADE894((uint64_t)v16, &qword_1EF1BDEF0);
    sub_1B8ADE894((uint64_t)v20, &qword_1EF1B92B8);
    sub_1B8ADE850((uint64_t)v9, v91, &qword_1EF1BDEE0);
    swift_storeEnumTagMultiPayload();
    sub_1B8ADE950(&qword_1EF1BDF00, &qword_1EF1BDEE0, MEMORY[0x1E0CE0678]);
    sub_1B8B67344();
    v59 = (uint64_t)v80;
    sub_1B8B9B870();
    sub_1B8ADE894((uint64_t)v9, &qword_1EF1BDEE0);
    sub_1B8ADE850(v59, (uint64_t)v82, &qword_1EF1BDEE8);
    swift_storeEnumTagMultiPayload();
    sub_1B8B672C0();
    sub_1B8B673D0();
    sub_1B8B9B870();
    sub_1B8ADE894(v59, &qword_1EF1BDEE8);
    sub_1B8ADE894(v57, &qword_1EF1BDEF0);
    v35 = v56;
    v36 = &qword_1EF1B92B8;
  }
  return sub_1B8ADE894(v35, v36);
}

uint64_t sub_1B8B647B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unsigned __int8 *v30;
  unsigned __int8 v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unsigned __int8 v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unsigned __int8 v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unsigned __int8 v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  unsigned __int8 v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  unsigned __int8 v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  unsigned __int8 v89;
  uint64_t v90;
  uint64_t v91;
  unsigned __int8 v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  char *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  char *v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  char v131;
  char v132;
  unsigned __int8 v133;
  __int128 v134;
  __int128 v135;
  __int128 v136;
  uint64_t v137;
  uint64_t v138;
  __int128 v139;
  unsigned __int8 v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  __int128 v144;
  __int128 v145;
  uint64_t v146;
  uint64_t v147;
  __int128 v148;
  uint64_t v149;
  uint64_t v150;
  __int128 v151;

  v129 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1B9418);
  MEMORY[0x1E0C80A78](v3);
  v122 = (uint64_t)&v101 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1B92C0);
  MEMORY[0x1E0C80A78](v5);
  v119 = (uint64_t)&v101 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v117 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1B90B0);
  v7 = MEMORY[0x1E0C80A78](v117);
  v9 = (char *)&v101 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v121 = (uint64_t)&v101 - v10;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1B92A8);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v101 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v124 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1B9298);
  MEMORY[0x1E0C80A78](v124);
  v126 = (uint64_t)&v101 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v125 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1B9408);
  MEMORY[0x1E0C80A78](v125);
  v120 = (uint64_t)&v101 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1B92F0);
  MEMORY[0x1E0C80A78](v16);
  v127 = (char *)&v101 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1B92B8);
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v101 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1B9098);
  v22 = MEMORY[0x1E0C80A78](v21);
  v24 = (char *)&v101 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v22);
  v118 = (uint64_t)&v101 - v25;
  v130 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1B91B8);
  v26 = MEMORY[0x1E0C80A78](v130);
  v123 = (uint64_t)&v101 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v26);
  v128 = (uint64_t)&v101 - v28;
  v29 = a1;
  v30 = (unsigned __int8 *)(a1 + *(int *)(type metadata accessor for CUIKDateView() + 20));
  if (v30[1])
  {
    if (v30[1] == 1)
    {
      LODWORD(v120) = *v30;
      v31 = v30[2];
      v32 = *((_QWORD *)v30 + 1);
      v33 = *((_QWORD *)v30 + 2);
      v34 = *((_QWORD *)v30 + 3);
      v35 = *((_QWORD *)v30 + 4);
      v36 = *((_QWORD *)v30 + 5);
      v118 = *((_QWORD *)v30 + 6);
      v38 = *((_QWORD *)v30 + 7);
      v37 = *((_QWORD *)v30 + 8);
      v39 = *((_QWORD *)v30 + 9);
      v111 = *((_QWORD *)v30 + 10);
      v114 = v13;
      v40 = v30[88];
      v110 = *((_QWORD *)v30 + 12);
      v42 = *((_QWORD *)v30 + 13);
      v41 = *((_QWORD *)v30 + 14);
      v115 = v11;
      v43 = *((_QWORD *)v30 + 16);
      v109 = *((_QWORD *)v30 + 15);
      v108 = v43;
      v44 = *((_QWORD *)v30 + 18);
      v107 = *((_QWORD *)v30 + 17);
      v45 = *((_QWORD *)v30 + 19);
      v113 = v3;
      v46 = *((_QWORD *)v30 + 20);
      v47 = *((_QWORD *)v30 + 22);
      v106 = *((_QWORD *)v30 + 21);
      v105 = v47;
      v116 = v16;
      v104 = *((_QWORD *)v30 + 23);
      v103 = *((_QWORD *)v30 + 24);
      v49 = *((_QWORD *)v30 + 25);
      v48 = *((_QWORD *)v30 + 26);
      v102 = v49;
      v101 = v48;
      v131 = v120;
      v132 = 1;
      v133 = v31;
      *(_QWORD *)&v134 = v32;
      *((_QWORD *)&v134 + 1) = v33;
      *(_QWORD *)&v135 = v34;
      *((_QWORD *)&v135 + 1) = v35;
      *(_QWORD *)&v136 = v36;
      *((_QWORD *)&v136 + 1) = v118;
      v137 = v38;
      v138 = v37;
      v50 = v37;
      *(_QWORD *)&v139 = v39;
      *((_QWORD *)&v139 + 1) = v111;
      v140 = v40;
      v51 = v40;
      v141 = v110;
      v142 = v42;
      v143 = v41;
      v52 = v41;
      *(_QWORD *)&v144 = v109;
      *((_QWORD *)&v144 + 1) = v43;
      *(_QWORD *)&v145 = v107;
      *((_QWORD *)&v145 + 1) = v44;
      v146 = v45;
      v147 = v46;
      *(_QWORD *)&v148 = v106;
      *((_QWORD *)&v148 + 1) = v47;
      v149 = v104;
      v150 = v103;
      *(_QWORD *)&v151 = v49;
      *((_QWORD *)&v151 + 1) = v48;
      v53 = v128;
      v112 = v29;
      sub_1B8B6151C((uint64_t)&v131, v128);
      v131 = v120;
      v132 = 1;
      v133 = v31;
      *(_QWORD *)&v134 = v32;
      *((_QWORD *)&v134 + 1) = v33;
      *(_QWORD *)&v135 = v34;
      *((_QWORD *)&v135 + 1) = v35;
      *(_QWORD *)&v136 = v36;
      *((_QWORD *)&v136 + 1) = v118;
      v137 = v38;
      v138 = v50;
      *(_QWORD *)&v139 = v39;
      *((_QWORD *)&v139 + 1) = v111;
      v140 = v51;
      v141 = v110;
      v142 = v42;
      v143 = v52;
      *(_QWORD *)&v144 = v109;
      *((_QWORD *)&v144 + 1) = v108;
      *(_QWORD *)&v145 = v107;
      *((_QWORD *)&v145 + 1) = v44;
      v146 = v45;
      v147 = v46;
      *(_QWORD *)&v148 = v106;
      *((_QWORD *)&v148 + 1) = v105;
      v149 = v104;
      v150 = v103;
      *(_QWORD *)&v151 = v102;
      *((_QWORD *)&v151 + 1) = v101;
      v54 = v119;
      sub_1B8B62A5C((uint64_t)&v131, v119);
      sub_1B8ADE850(v54, (uint64_t)v9, &qword_1EF1B92C0);
      v55 = &v9[*(int *)(v117 + 36)];
      *(_QWORD *)v55 = v44;
      *((_QWORD *)v55 + 1) = v45;
      sub_1B8ADE894(v54, &qword_1EF1B92C0);
      v56 = v121;
      sub_1B8B06074((uint64_t)v9, v121, &qword_1EF1B90B0);
      v57 = v123;
      sub_1B8ADE850(v53, v123, &qword_1EF1B91B8);
      sub_1B8ADE850(v56, (uint64_t)v9, &qword_1EF1B90B0);
      v58 = v122;
      sub_1B8ADE850(v57, v122, &qword_1EF1B91B8);
      v59 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1BDEB8);
      sub_1B8ADE850((uint64_t)v9, v58 + *(int *)(v59 + 48), &qword_1EF1B90B0);
      sub_1B8ADE894((uint64_t)v9, &qword_1EF1B90B0);
      sub_1B8ADE894(v57, &qword_1EF1B91B8);
      sub_1B8ADE850(v58, v126, &qword_1EF1B9418);
      swift_storeEnumTagMultiPayload();
      v60 = MEMORY[0x1E0CE0678];
      sub_1B8ADE950(&qword_1EF1B9400, &qword_1EF1B9408, MEMORY[0x1E0CE0678]);
      sub_1B8ADE950(&qword_1EF1B9410, &qword_1EF1B9418, v60);
      v61 = (uint64_t)v127;
      sub_1B8B9B870();
      sub_1B8ADE894(v58, &qword_1EF1B9418);
      sub_1B8ADE850(v61, (uint64_t)v114, &qword_1EF1B92F0);
      swift_storeEnumTagMultiPayload();
      sub_1B8B6703C();
      sub_1B8B670E0();
      sub_1B8B9B870();
      sub_1B8ADE894(v61, &qword_1EF1B92F0);
      sub_1B8ADE894(v56, &qword_1EF1B90B0);
    }
    else
    {
      v89 = v30[2];
      v90 = *((_QWORD *)v30 + 7);
      v91 = *((_QWORD *)v30 + 8);
      v92 = v30[88];
      v93 = *((_QWORD *)v30 + 12);
      v94 = *((_QWORD *)v30 + 13);
      v95 = *((_QWORD *)v30 + 14);
      v96 = *((_QWORD *)v30 + 19);
      v97 = *((_QWORD *)v30 + 20);
      v98 = *((_QWORD *)v30 + 23);
      v99 = *((_QWORD *)v30 + 24);
      v131 = *v30;
      v132 = 2;
      v133 = v89;
      v134 = *(_OWORD *)(v30 + 8);
      v135 = *(_OWORD *)(v30 + 24);
      v136 = *(_OWORD *)(v30 + 40);
      v137 = v90;
      v138 = v91;
      v139 = *(_OWORD *)(v30 + 72);
      v140 = v92;
      v141 = v93;
      v142 = v94;
      v143 = v95;
      v144 = *(_OWORD *)(v30 + 120);
      v145 = *(_OWORD *)(v30 + 136);
      v146 = v96;
      v148 = *(_OWORD *)(v30 + 168);
      v147 = v97;
      v149 = v98;
      v150 = v99;
      v151 = *(_OWORD *)(v30 + 200);
      v53 = v128;
      sub_1B8B6151C((uint64_t)&v131, v128);
      sub_1B8ADE850(v53, (uint64_t)v13, &qword_1EF1B91B8);
      swift_storeEnumTagMultiPayload();
      sub_1B8B6703C();
      sub_1B8B670E0();
      sub_1B8B9B870();
    }
  }
  else
  {
    LODWORD(v122) = *v30;
    v62 = v30[2];
    v63 = *((_QWORD *)v30 + 1);
    v64 = *((_QWORD *)v30 + 2);
    v65 = *((_QWORD *)v30 + 3);
    v66 = *((_QWORD *)v30 + 4);
    v67 = *((_QWORD *)v30 + 5);
    v121 = *((_QWORD *)v30 + 6);
    v115 = v11;
    v68 = *((_QWORD *)v30 + 7);
    v69 = *((_QWORD *)v30 + 8);
    v116 = v16;
    v70 = *((_QWORD *)v30 + 9);
    v119 = *((_QWORD *)v30 + 10);
    v113 = v3;
    v71 = v30[88];
    v117 = *((_QWORD *)v30 + 12);
    v73 = *((_QWORD *)v30 + 13);
    v72 = *((_QWORD *)v30 + 14);
    v114 = v13;
    v111 = v72;
    v74 = *((_QWORD *)v30 + 16);
    v110 = *((_QWORD *)v30 + 15);
    v109 = v74;
    v75 = *((_QWORD *)v30 + 18);
    v108 = *((_QWORD *)v30 + 17);
    v76 = *((_QWORD *)v30 + 19);
    v107 = *((_QWORD *)v30 + 20);
    v77 = *((_QWORD *)v30 + 22);
    v106 = *((_QWORD *)v30 + 21);
    v105 = v77;
    v104 = *((_QWORD *)v30 + 23);
    v103 = *((_QWORD *)v30 + 24);
    v79 = *((_QWORD *)v30 + 25);
    v78 = *((_QWORD *)v30 + 26);
    v102 = v79;
    v101 = v78;
    v131 = v122;
    v132 = 0;
    v133 = v62;
    *(_QWORD *)&v134 = v63;
    *((_QWORD *)&v134 + 1) = v64;
    *(_QWORD *)&v135 = v65;
    *((_QWORD *)&v135 + 1) = v66;
    *(_QWORD *)&v136 = v67;
    *((_QWORD *)&v136 + 1) = v121;
    v137 = v68;
    v80 = v68;
    v138 = v69;
    *(_QWORD *)&v139 = v70;
    *((_QWORD *)&v139 + 1) = v119;
    v140 = v71;
    v81 = v71;
    v141 = v117;
    v142 = v73;
    v143 = v72;
    *(_QWORD *)&v144 = v110;
    *((_QWORD *)&v144 + 1) = v74;
    *(_QWORD *)&v145 = v108;
    *((_QWORD *)&v145 + 1) = v75;
    v146 = v76;
    v147 = v107;
    *(_QWORD *)&v148 = v106;
    *((_QWORD *)&v148 + 1) = v77;
    v149 = v104;
    v150 = v103;
    *(_QWORD *)&v151 = v79;
    *((_QWORD *)&v151 + 1) = v78;
    v53 = v128;
    v112 = v29;
    sub_1B8B6151C((uint64_t)&v131, v128);
    v131 = v122;
    v132 = 0;
    v133 = v62;
    *(_QWORD *)&v134 = v63;
    *((_QWORD *)&v134 + 1) = v64;
    *(_QWORD *)&v135 = v65;
    *((_QWORD *)&v135 + 1) = v66;
    *(_QWORD *)&v136 = v67;
    *((_QWORD *)&v136 + 1) = v121;
    v137 = v80;
    v138 = v69;
    *(_QWORD *)&v139 = v70;
    *((_QWORD *)&v139 + 1) = v119;
    v140 = v81;
    v141 = v117;
    v142 = v73;
    v143 = v111;
    *(_QWORD *)&v144 = v110;
    *((_QWORD *)&v144 + 1) = v109;
    *(_QWORD *)&v145 = v108;
    *((_QWORD *)&v145 + 1) = v75;
    v146 = v76;
    v147 = v107;
    *(_QWORD *)&v148 = v106;
    *((_QWORD *)&v148 + 1) = v105;
    v149 = v104;
    v150 = v103;
    *(_QWORD *)&v151 = v102;
    *((_QWORD *)&v151 + 1) = v101;
    sub_1B8B62064((uint64_t)&v131, (uint64_t)v20);
    sub_1B8ADE850((uint64_t)v20, (uint64_t)v24, &qword_1EF1B92B8);
    v82 = &v24[*(int *)(v21 + 36)];
    *(_QWORD *)v82 = v75;
    *((_QWORD *)v82 + 1) = v76;
    sub_1B8ADE894((uint64_t)v20, &qword_1EF1B92B8);
    v83 = v118;
    sub_1B8B06074((uint64_t)v24, v118, &qword_1EF1B9098);
    v84 = v123;
    sub_1B8ADE850(v53, v123, &qword_1EF1B91B8);
    sub_1B8ADE850(v83, (uint64_t)v24, &qword_1EF1B9098);
    v85 = v120;
    sub_1B8ADE850(v84, v120, &qword_1EF1B91B8);
    v86 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1BDEC0);
    sub_1B8ADE850((uint64_t)v24, v85 + *(int *)(v86 + 48), &qword_1EF1B9098);
    sub_1B8ADE894((uint64_t)v24, &qword_1EF1B9098);
    sub_1B8ADE894(v84, &qword_1EF1B91B8);
    sub_1B8ADE850(v85, v126, &qword_1EF1B9408);
    swift_storeEnumTagMultiPayload();
    v87 = MEMORY[0x1E0CE0678];
    sub_1B8ADE950(&qword_1EF1B9400, &qword_1EF1B9408, MEMORY[0x1E0CE0678]);
    sub_1B8ADE950(&qword_1EF1B9410, &qword_1EF1B9418, v87);
    v88 = (uint64_t)v127;
    sub_1B8B9B870();
    sub_1B8ADE894(v85, &qword_1EF1B9408);
    sub_1B8ADE850(v88, (uint64_t)v114, &qword_1EF1B92F0);
    swift_storeEnumTagMultiPayload();
    sub_1B8B6703C();
    sub_1B8B670E0();
    sub_1B8B9B870();
    sub_1B8ADE894(v88, &qword_1EF1B92F0);
    sub_1B8ADE894(v83, &qword_1EF1B9098);
  }
  return sub_1B8ADE894(v53, &qword_1EF1B91B8);
}

uint64_t sub_1B8B6563C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for CUIKDateView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1B8B65680()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for CUIKDateView();
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  v3 = v0 + ((v2 + 16) & ~v2);
  v4 = sub_1B8B9B0F0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v5 = v3 + *(int *)(v1 + 28);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1B9028);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v6 = sub_1B8B9B288();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  }
  else
  {
    swift_release();
  }
  return swift_deallocObject();
}

uint64_t sub_1B8B6578C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for CUIKDateView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1B8B657D0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for CUIKDateView() - 8) + 80);
  return sub_1B8B633C8(a1, v2 + ((v5 + 16) & ~v5), a2);
}

unint64_t sub_1B8B65820()
{
  unint64_t result;

  result = qword_1EF1BDE30;
  if (!qword_1EF1BDE30)
  {
    result = MEMORY[0x1BCCB79D0](&protocol conformance descriptor for CUIKDateView.Styling.FirstLineContent, &type metadata for CUIKDateView.Styling.FirstLineContent);
    atomic_store(result, (unint64_t *)&qword_1EF1BDE30);
  }
  return result;
}

unint64_t sub_1B8B65868()
{
  unint64_t result;

  result = qword_1EF1BDE38;
  if (!qword_1EF1BDE38)
  {
    result = MEMORY[0x1BCCB79D0](&protocol conformance descriptor for CUIKDateView.Styling.VerticalContent, &type metadata for CUIKDateView.Styling.VerticalContent);
    atomic_store(result, (unint64_t *)&qword_1EF1BDE38);
  }
  return result;
}

unint64_t sub_1B8B658B0()
{
  unint64_t result;

  result = qword_1EF1BDE40;
  if (!qword_1EF1BDE40)
  {
    result = MEMORY[0x1BCCB79D0](&protocol conformance descriptor for CUIKDateView.Styling.ThirdLineContent, &type metadata for CUIKDateView.Styling.ThirdLineContent);
    atomic_store(result, (unint64_t *)&qword_1EF1BDE40);
  }
  return result;
}

uint64_t sub_1B8B658F4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t *initializeBufferWithCopyOfBuffer for CUIKDateView(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v22 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v22 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1B8B9B0F0();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = a3[6];
    v10 = (char *)a1 + v8;
    v11 = (char *)a2 + v8;
    *v10 = *v11;
    *(_WORD *)(v10 + 1) = *(_WORD *)(v11 + 1);
    *(_OWORD *)(v10 + 8) = *(_OWORD *)(v11 + 8);
    *(_OWORD *)(v10 + 24) = *(_OWORD *)(v11 + 24);
    *(_OWORD *)(v10 + 40) = *(_OWORD *)(v11 + 40);
    v12 = *((_QWORD *)v11 + 8);
    *((_QWORD *)v10 + 7) = *((_QWORD *)v11 + 7);
    *((_QWORD *)v10 + 8) = v12;
    *(_OWORD *)(v10 + 72) = *(_OWORD *)(v11 + 72);
    v10[88] = v11[88];
    *((_OWORD *)v10 + 6) = *((_OWORD *)v11 + 6);
    *((_QWORD *)v10 + 14) = *((_QWORD *)v11 + 14);
    *(_OWORD *)(v10 + 120) = *(_OWORD *)(v11 + 120);
    *(_OWORD *)(v10 + 136) = *(_OWORD *)(v11 + 136);
    v13 = *((_QWORD *)v11 + 20);
    *((_QWORD *)v10 + 19) = *((_QWORD *)v11 + 19);
    *((_QWORD *)v10 + 20) = v13;
    *(_OWORD *)(v10 + 168) = *(_OWORD *)(v11 + 168);
    *((_QWORD *)v10 + 23) = *((_QWORD *)v11 + 23);
    *((_OWORD *)v10 + 12) = *((_OWORD *)v11 + 12);
    *((_QWORD *)v10 + 26) = *((_QWORD *)v11 + 26);
    v14 = (uint64_t *)((char *)a1 + v9);
    v15 = (uint64_t *)((char *)a2 + v9);
    v16 = *v15;
    v17 = v15[1];
    v18 = a3[7];
    v19 = (uint64_t *)((char *)a2 + v18);
    v20 = (uint64_t *)((char *)a1 + v18);
    *v14 = v16;
    v14[1] = v17;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1B9028);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v21 = sub_1B8B9B288();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v20, v19, v21);
    }
    else
    {
      *v20 = *v19;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t destroy for CUIKDateView(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = sub_1B8B9B0F0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v5 = a1 + *(int *)(a2 + 28);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1B9028);
  if (swift_getEnumCaseMultiPayload() != 1)
    return swift_release();
  v6 = sub_1B8B9B288();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
}

uint64_t initializeWithCopy for CUIKDateView(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;

  v6 = sub_1B8B9B0F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = a2 + v7;
  *(_BYTE *)v9 = *(_BYTE *)v10;
  *(_WORD *)(v9 + 1) = *(_WORD *)(v10 + 1);
  *(_OWORD *)(v9 + 8) = *(_OWORD *)(v10 + 8);
  *(_OWORD *)(v9 + 24) = *(_OWORD *)(v10 + 24);
  *(_OWORD *)(v9 + 40) = *(_OWORD *)(v10 + 40);
  v11 = *(_QWORD *)(v10 + 64);
  *(_QWORD *)(v9 + 56) = *(_QWORD *)(v10 + 56);
  *(_QWORD *)(v9 + 64) = v11;
  *(_OWORD *)(v9 + 72) = *(_OWORD *)(v10 + 72);
  *(_BYTE *)(v9 + 88) = *(_BYTE *)(v10 + 88);
  *(_OWORD *)(v9 + 96) = *(_OWORD *)(v10 + 96);
  *(_QWORD *)(v9 + 112) = *(_QWORD *)(v10 + 112);
  *(_OWORD *)(v9 + 120) = *(_OWORD *)(v10 + 120);
  *(_OWORD *)(v9 + 136) = *(_OWORD *)(v10 + 136);
  v12 = *(_QWORD *)(v10 + 160);
  *(_QWORD *)(v9 + 152) = *(_QWORD *)(v10 + 152);
  *(_QWORD *)(v9 + 160) = v12;
  *(_OWORD *)(v9 + 168) = *(_OWORD *)(v10 + 168);
  *(_QWORD *)(v9 + 184) = *(_QWORD *)(v10 + 184);
  *(_OWORD *)(v9 + 192) = *(_OWORD *)(v10 + 192);
  *(_QWORD *)(v9 + 208) = *(_QWORD *)(v10 + 208);
  v13 = (_QWORD *)(a1 + v8);
  v14 = (uint64_t *)(a2 + v8);
  v15 = *v14;
  v16 = v14[1];
  v17 = a3[7];
  v18 = (_QWORD *)(a2 + v17);
  v19 = (_QWORD *)(a1 + v17);
  *v13 = v15;
  v13[1] = v16;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1B9028);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v20 = sub_1B8B9B288();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v19, v18, v20);
  }
  else
  {
    *v19 = *v18;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t assignWithCopy for CUIKDateView(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;

  v6 = sub_1B8B9B0F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_BYTE *)v8 = *(_BYTE *)(a2 + v7);
  *(_BYTE *)(v8 + 1) = *(_BYTE *)(a2 + v7 + 1);
  *(_BYTE *)(v8 + 2) = *(_BYTE *)(a2 + v7 + 2);
  *(_QWORD *)(v8 + 8) = *(_QWORD *)(a2 + v7 + 8);
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(a2 + v7 + 16);
  *(_QWORD *)(v8 + 24) = *(_QWORD *)(a2 + v7 + 24);
  *(_QWORD *)(v8 + 32) = *(_QWORD *)(a2 + v7 + 32);
  *(_QWORD *)(v8 + 40) = *(_QWORD *)(a2 + v7 + 40);
  *(_QWORD *)(v8 + 48) = *(_QWORD *)(a2 + v7 + 48);
  *(_QWORD *)(v8 + 56) = *(_QWORD *)(a2 + v7 + 56);
  *(_QWORD *)(v8 + 64) = *(_QWORD *)(a2 + v7 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v8 + 72) = *(_QWORD *)(v9 + 72);
  *(_QWORD *)(v8 + 80) = *(_QWORD *)(v9 + 80);
  *(_BYTE *)(v8 + 88) = *(_BYTE *)(v9 + 88);
  *(_QWORD *)(v8 + 96) = *(_QWORD *)(v9 + 96);
  *(_QWORD *)(v8 + 104) = *(_QWORD *)(v9 + 104);
  *(_QWORD *)(v8 + 112) = *(_QWORD *)(v9 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v8 + 120) = *(_QWORD *)(v9 + 120);
  *(_QWORD *)(v8 + 128) = *(_QWORD *)(v9 + 128);
  *(_QWORD *)(v8 + 136) = *(_QWORD *)(v9 + 136);
  *(_QWORD *)(v8 + 144) = *(_QWORD *)(v9 + 144);
  *(_QWORD *)(v8 + 152) = *(_QWORD *)(v9 + 152);
  *(_QWORD *)(v8 + 160) = *(_QWORD *)(v9 + 160);
  swift_retain();
  swift_release();
  *(_QWORD *)(v8 + 168) = *(_QWORD *)(v9 + 168);
  *(_QWORD *)(v8 + 176) = *(_QWORD *)(v9 + 176);
  *(_QWORD *)(v8 + 184) = *(_QWORD *)(v9 + 184);
  swift_retain();
  swift_release();
  *(_QWORD *)(v8 + 192) = *(_QWORD *)(v9 + 192);
  *(_QWORD *)(v8 + 200) = *(_QWORD *)(v9 + 200);
  *(_QWORD *)(v8 + 208) = *(_QWORD *)(v9 + 208);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v10 = a3[6];
  v11 = (_QWORD *)(a1 + v10);
  v12 = (_QWORD *)(a2 + v10);
  *v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    v13 = a3[7];
    v14 = (_QWORD *)(a1 + v13);
    v15 = (_QWORD *)(a2 + v13);
    sub_1B8ADE894(a1 + v13, &qword_1EF1B9028);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1B9028);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v16 = sub_1B8B9B288();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v14, v15, v16);
    }
    else
    {
      *v14 = *v15;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t initializeWithTake for CUIKDateView(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 *v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  uint64_t v19;
  void *v20;
  const void *v21;
  uint64_t v22;
  uint64_t v23;

  v6 = sub_1B8B9B0F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = (__int128 *)(a2 + v7);
  *(_QWORD *)(v9 + 208) = *((_QWORD *)v10 + 26);
  v11 = v10[5];
  *(_OWORD *)(v9 + 64) = v10[4];
  *(_OWORD *)(v9 + 80) = v11;
  v12 = v10[3];
  *(_OWORD *)(v9 + 32) = v10[2];
  *(_OWORD *)(v9 + 48) = v12;
  v13 = v10[9];
  *(_OWORD *)(v9 + 128) = v10[8];
  *(_OWORD *)(v9 + 144) = v13;
  v14 = v10[7];
  *(_OWORD *)(v9 + 96) = v10[6];
  *(_OWORD *)(v9 + 112) = v14;
  v15 = v10[12];
  v16 = v10[10];
  *(_OWORD *)(v9 + 176) = v10[11];
  *(_OWORD *)(v9 + 192) = v15;
  *(_OWORD *)(v9 + 160) = v16;
  v17 = *v10;
  v18 = v10[1];
  v19 = a3[7];
  v20 = (void *)(a1 + v19);
  v21 = (const void *)(a2 + v19);
  *(_OWORD *)v9 = v17;
  *(_OWORD *)(v9 + 16) = v18;
  *(_OWORD *)(a1 + v8) = *(_OWORD *)(a2 + v8);
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1B9028);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v23 = sub_1B8B9B288();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v23 - 8) + 32))(v20, v21, v23);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
  }
  return a1;
}

uint64_t assignWithTake for CUIKDateView(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  const void *v20;
  uint64_t v21;
  uint64_t v22;

  v6 = sub_1B8B9B0F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_BYTE *)v8 = *(_BYTE *)(a2 + v7);
  *(_WORD *)(v8 + 1) = *(_WORD *)(a2 + v7 + 1);
  *(_OWORD *)(v8 + 8) = *(_OWORD *)(a2 + v7 + 8);
  *(_OWORD *)(v8 + 24) = *(_OWORD *)(a2 + v7 + 24);
  *(_OWORD *)(v8 + 40) = *(_OWORD *)(a2 + v7 + 40);
  v10 = *(_QWORD *)(a2 + v7 + 64);
  *(_QWORD *)(v8 + 56) = *(_QWORD *)(a2 + v7 + 56);
  *(_QWORD *)(v8 + 64) = v10;
  swift_bridgeObjectRelease();
  *(_OWORD *)(v8 + 72) = *(_OWORD *)(v9 + 72);
  *(_BYTE *)(v8 + 88) = *(_BYTE *)(v9 + 88);
  *(_QWORD *)(v8 + 96) = *(_QWORD *)(v9 + 96);
  v11 = *(_QWORD *)(v9 + 112);
  *(_QWORD *)(v8 + 104) = *(_QWORD *)(v9 + 104);
  *(_QWORD *)(v8 + 112) = v11;
  swift_bridgeObjectRelease();
  *(_OWORD *)(v8 + 120) = *(_OWORD *)(v9 + 120);
  *(_OWORD *)(v8 + 136) = *(_OWORD *)(v9 + 136);
  *(_QWORD *)(v8 + 152) = *(_QWORD *)(v9 + 152);
  *(_QWORD *)(v8 + 160) = *(_QWORD *)(v9 + 160);
  swift_release();
  *(_OWORD *)(v8 + 168) = *(_OWORD *)(v9 + 168);
  *(_QWORD *)(v8 + 184) = *(_QWORD *)(v9 + 184);
  swift_release();
  *(_QWORD *)(v8 + 192) = *(_QWORD *)(v9 + 192);
  v12 = *(_QWORD *)(v9 + 208);
  *(_QWORD *)(v8 + 200) = *(_QWORD *)(v9 + 200);
  *(_QWORD *)(v8 + 208) = v12;
  swift_bridgeObjectRelease();
  v13 = a3[6];
  v14 = (_QWORD *)(a1 + v13);
  v15 = (uint64_t *)(a2 + v13);
  v17 = *v15;
  v16 = v15[1];
  *v14 = v17;
  v14[1] = v16;
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    v18 = a3[7];
    v19 = (void *)(a1 + v18);
    v20 = (const void *)(a2 + v18);
    sub_1B8ADE894(a1 + v18, &qword_1EF1B9028);
    v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1B9028);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v22 = sub_1B8B9B288();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v19, v20, v22);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    }
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for CUIKDateView()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1B8B662A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  unint64_t v11;

  v6 = sub_1B8B9B0F0();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  if ((_DWORD)a2 != 0x7FFFFFFF)
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1BC448);
    v10 = a1 + *(int *)(a3 + 28);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48);
    return v9(v10, a2, v8);
  }
  v11 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 64);
  if (v11 >= 0xFFFFFFFF)
    LODWORD(v11) = -1;
  return (v11 + 1);
}

uint64_t storeEnumTagSinglePayload for CUIKDateView()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1B8B66360(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  result = sub_1B8B9B0F0();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = result;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    if (a3 == 0x7FFFFFFF)
    {
      *(_QWORD *)(a1 + *(int *)(a4 + 20) + 64) = (a2 - 1);
      return result;
    }
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1BC448);
    v12 = a1 + *(int *)(a4 + 28);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_1B8B6640C()
{
  unint64_t v0;
  unint64_t v1;

  sub_1B8B9B0F0();
  if (v0 <= 0x3F)
  {
    sub_1B8B664A4();
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

void sub_1B8B664A4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF1B9030)
  {
    sub_1B8B9B288();
    v0 = sub_1B8B9B414();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF1B9030);
  }
}

uint64_t destroy for CUIKDateView.Styling()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for CUIKDateView.Styling(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_WORD *)(a1 + 1) = *(_WORD *)(a2 + 1);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  v3 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v3;
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  v4 = *(_QWORD *)(a2 + 160);
  *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
  *(_QWORD *)(a1 + 160) = v4;
  *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
  *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
  *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
  *(_QWORD *)(a1 + 208) = *(_QWORD *)(a2 + 208);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for CUIKDateView.Styling(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_BYTE *)(a1 + 1) = *(_BYTE *)(a2 + 1);
  *(_BYTE *)(a1 + 2) = *(_BYTE *)(a2 + 2);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
  *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
  *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
  *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
  *(_QWORD *)(a1 + 208) = *(_QWORD *)(a2 + 208);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy216_8(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __n128 result;
  __int128 v10;
  __int128 v11;

  v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  v6 = *(_OWORD *)(a2 + 96);
  v7 = *(_OWORD *)(a2 + 112);
  v8 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v8;
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 112) = v7;
  result = *(__n128 *)(a2 + 160);
  v10 = *(_OWORD *)(a2 + 176);
  v11 = *(_OWORD *)(a2 + 192);
  *(_QWORD *)(a1 + 208) = *(_QWORD *)(a2 + 208);
  *(_OWORD *)(a1 + 176) = v10;
  *(_OWORD *)(a1 + 192) = v11;
  *(__n128 *)(a1 + 160) = result;
  return result;
}

uint64_t assignWithTake for CUIKDateView.Styling(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_WORD *)(a1 + 1) = *(_WORD *)(a2 + 1);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  v4 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v4;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  v5 = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = v5;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  swift_release();
  *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
  *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
  swift_release();
  *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
  v6 = *(_QWORD *)(a2 + 208);
  *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
  *(_QWORD *)(a1 + 208) = v6;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for CUIKDateView.Styling(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 216))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 64);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CUIKDateView.Styling(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 216) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 64) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 216) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for CUIKDateView.Styling()
{
  return &type metadata for CUIKDateView.Styling;
}

ValueMetadata *type metadata accessor for CUIKDateView.Styling.FirstLineContent()
{
  return &type metadata for CUIKDateView.Styling.FirstLineContent;
}

ValueMetadata *type metadata accessor for CUIKDateView.Styling.VerticalContent()
{
  return &type metadata for CUIKDateView.Styling.VerticalContent;
}

uint64_t _s13CalendarUIKit12CUIKDateViewV7StylingV16FirstLineContentOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1B8B669D4 + 4 * byte_1B8BAD595[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1B8B66A08 + 4 * byte_1B8BAD590[v4]))();
}

uint64_t sub_1B8B66A08(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B8B66A10(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1B8B66A18);
  return result;
}

uint64_t sub_1B8B66A24(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1B8B66A2CLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1B8B66A30(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B8B66A38(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CUIKDateView.Styling.ThirdLineContent()
{
  return &type metadata for CUIKDateView.Styling.ThirdLineContent;
}

unint64_t sub_1B8B66A58()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[4];

  result = qword_1EF1BDE48;
  if (!qword_1EF1BDE48)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EF1BDE18);
    v2[2] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EF1BDE20);
    v2[3] = sub_1B8ADE950(&qword_1EF1BDE28, &qword_1EF1BDE20, MEMORY[0x1E0CD9310]);
    v2[0] = swift_getOpaqueTypeConformance2();
    v2[1] = sub_1B8ADBDEC(&qword_1EF1B9380, MEMORY[0x1E0CDCFC8], MEMORY[0x1E0CDCFC0]);
    result = MEMORY[0x1BCCB79D0](MEMORY[0x1E0CD9C18], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EF1BDE48);
  }
  return result;
}

uint64_t sub_1B8B66B24()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v1 = type metadata accessor for CUIKDateView();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v11 = *(_QWORD *)(v2 + 64);
  v4 = sub_1B8B9B4BC();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned __int8 *)(v5 + 80);
  v7 = sub_1B8B9B0F0();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v0 + v3, v7);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v8 = v0 + v3 + *(int *)(v1 + 28);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1B9028);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v9 = sub_1B8B9B288();
    (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
  }
  else
  {
    swift_release();
  }
  (*(void (**)(unint64_t, uint64_t))(v5 + 8))(v0 + ((v3 + v11 + v6) & ~v6), v4);
  return swift_deallocObject();
}

uint64_t sub_1B8B66C88@<X0>(double *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  unint64_t v6;

  v5 = type metadata accessor for CUIKDateView();
  v6 = (*(unsigned __int8 *)(*(_QWORD *)(v5 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v5 - 8) + 80);
  sub_1B8B9B4BC();
  return sub_1B8B63CA0(a1, v2 + v6, a2);
}

unint64_t sub_1B8B66D00()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1EF1BDE70;
  if (!qword_1EF1BDE70)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EF1BDE68);
    v2[0] = sub_1B8ADE950(&qword_1EF1BDE78, &qword_1EF1BDE80, MEMORY[0x1E0CDFB08]);
    v2[1] = sub_1B8B66D84();
    result = MEMORY[0x1BCCB79D0](MEMORY[0x1E0CD9C18], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EF1BDE70);
  }
  return result;
}

unint64_t sub_1B8B66D84()
{
  unint64_t result;

  result = qword_1EF1B9238;
  if (!qword_1EF1B9238)
  {
    result = MEMORY[0x1BCCB79D0](MEMORY[0x1E0CD9D90], MEMORY[0x1E0CD9DB8]);
    atomic_store(result, (unint64_t *)&qword_1EF1B9238);
  }
  return result;
}

uint64_t sub_1B8B66DC8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  v2 = sub_1B8B9B5D0();
  MEMORY[0x1E0C80A78](v2);
  (*(void (**)(char *, uint64_t))(v4 + 16))((char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
  return sub_1B8B9B630();
}

uint64_t sub_1B8B66E4C()
{
  return sub_1B8B9B624();
}

unint64_t sub_1B8B66E70()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1EF1BDEA8;
  if (!qword_1EF1BDEA8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EF1BDE98);
    v2[0] = sub_1B8B66EF4();
    v2[1] = sub_1B8ADE950(&qword_1EF1B9330, &qword_1EF1B9338, MEMORY[0x1E0CDC720]);
    result = MEMORY[0x1BCCB79D0](MEMORY[0x1E0CD9C18], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EF1BDEA8);
  }
  return result;
}

unint64_t sub_1B8B66EF4()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1EF1BDEB0;
  if (!qword_1EF1BDEB0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EF1BDEA0);
    v2[0] = sub_1B8B66F78();
    v2[1] = sub_1B8ADE950(&qword_1EF1B9340, &qword_1EF1B9348, MEMORY[0x1E0CDCF88]);
    result = MEMORY[0x1BCCB79D0](MEMORY[0x1E0CD9C18], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EF1BDEB0);
  }
  return result;
}

unint64_t sub_1B8B66F78()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[4];

  result = qword_1EF1B9138;
  if (!qword_1EF1B9138)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EF1B9140);
    v2 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EF1B93A8);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EF1B9100);
    sub_1B8ADE77C();
    v3[2] = v2;
    v3[3] = swift_getOpaqueTypeConformance2();
    v3[0] = swift_getOpaqueTypeConformance2();
    v3[1] = MEMORY[0x1E0CDA1E8];
    result = MEMORY[0x1BCCB79D0](MEMORY[0x1E0CD9C18], v1, v3);
    atomic_store(result, (unint64_t *)&qword_1EF1B9138);
  }
  return result;
}

unint64_t sub_1B8B6703C()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_1EF1B92E8;
  if (!qword_1EF1B92E8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EF1B92F0);
    v2 = MEMORY[0x1E0CE0678];
    v3[0] = sub_1B8ADE950(&qword_1EF1B9400, &qword_1EF1B9408, MEMORY[0x1E0CE0678]);
    v3[1] = sub_1B8ADE950(&qword_1EF1B9410, &qword_1EF1B9418, v2);
    result = MEMORY[0x1BCCB79D0](MEMORY[0x1E0CDB8A8], v1, v3);
    atomic_store(result, (unint64_t *)&qword_1EF1B92E8);
  }
  return result;
}

unint64_t sub_1B8B670E0()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1EF1B91B0;
  if (!qword_1EF1B91B0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EF1B91B8);
    v2[0] = sub_1B8B674F8(&qword_1EF1B9170, &qword_1EF1B9178, (uint64_t (*)(void))sub_1B8ADE77C);
    v2[1] = sub_1B8ADE950(&qword_1EF1B9340, &qword_1EF1B9348, MEMORY[0x1E0CDCF88]);
    result = MEMORY[0x1BCCB79D0](MEMORY[0x1E0CD9C18], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EF1B91B0);
  }
  return result;
}

unint64_t sub_1B8B6717C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[4];

  result = qword_1EF1B9108;
  if (!qword_1EF1B9108)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EF1B9110);
    v2[2] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EF1B9140);
    v2[3] = sub_1B8B66F78();
    v2[0] = swift_getOpaqueTypeConformance2();
    v2[1] = sub_1B8ADE950(&qword_1EF1B9340, &qword_1EF1B9348, MEMORY[0x1E0CDCF88]);
    result = MEMORY[0x1BCCB79D0](MEMORY[0x1E0CD9C18], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EF1B9108);
  }
  return result;
}

uint64_t sub_1B8B67228(unint64_t *a1, uint64_t *a2, unint64_t *a3, uint64_t *a4)
{
  uint64_t result;
  uint64_t v8;
  _QWORD v9[2];

  result = *a1;
  if (!result)
  {
    v8 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    v9[0] = sub_1B8ADE950(a3, a4, MEMORY[0x1E0CDFB38]);
    v9[1] = sub_1B8ADE950(&qword_1EF1B9310, &qword_1EF1B9318, MEMORY[0x1E0CDBEE8]);
    result = MEMORY[0x1BCCB79D0](MEMORY[0x1E0CD9C18], v8, v9);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1B8B672C0()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1EF1BDEF8;
  if (!qword_1EF1BDEF8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EF1BDEE8);
    v2[0] = sub_1B8ADE950(&qword_1EF1BDF00, &qword_1EF1BDEE0, MEMORY[0x1E0CE0678]);
    v2[1] = sub_1B8B67344();
    result = MEMORY[0x1BCCB79D0](MEMORY[0x1E0CDB8A8], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EF1BDEF8);
  }
  return result;
}

unint64_t sub_1B8B67344()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1EF1B92B0;
  if (!qword_1EF1B92B0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EF1B92B8);
    v2[0] = sub_1B8B6717C();
    v2[1] = sub_1B8B67228(&qword_1EF1B9150, &qword_1EF1B9158, &qword_1EF1B93D0, &qword_1EF1B93D8);
    result = MEMORY[0x1BCCB79D0](MEMORY[0x1E0CDB8A8], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EF1B92B0);
  }
  return result;
}

unint64_t sub_1B8B673D0()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1EF1BDF08;
  if (!qword_1EF1BDF08)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EF1BDEF0);
    v2[0] = sub_1B8B6745C();
    v2[1] = sub_1B8B67228(&qword_1EF1BDF40, &qword_1EF1BDF48, &qword_1EF1BDF50, &qword_1EF1BDF58);
    result = MEMORY[0x1BCCB79D0](MEMORY[0x1E0CDB8A8], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EF1BDF08);
  }
  return result;
}

unint64_t sub_1B8B6745C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1EF1BDF10;
  if (!qword_1EF1BDF10)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EF1BDF18);
    v2[0] = sub_1B8B674F8(&qword_1EF1BDF20, &qword_1EF1BDF28, (uint64_t (*)(void))sub_1B8B67564);
    v2[1] = sub_1B8ADE950(&qword_1EF1B9340, &qword_1EF1B9348, MEMORY[0x1E0CDCF88]);
    result = MEMORY[0x1BCCB79D0](MEMORY[0x1E0CD9C18], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EF1BDF10);
  }
  return result;
}

uint64_t sub_1B8B674F8(unint64_t *a1, uint64_t *a2, uint64_t (*a3)(void))
{
  uint64_t result;
  uint64_t v6;
  _QWORD v7[2];

  result = *a1;
  if (!result)
  {
    v6 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    v7[0] = a3();
    v7[1] = MEMORY[0x1E0CDA1E8];
    result = MEMORY[0x1BCCB79D0](MEMORY[0x1E0CD9C18], v6, v7);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1B8B67564()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[4];

  result = qword_1EF1BDF30;
  if (!qword_1EF1BDF30)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EF1BDF38);
    v2[2] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EF1B9100);
    v2[3] = sub_1B8ADE77C();
    v2[0] = swift_getOpaqueTypeConformance2();
    v2[1] = sub_1B8ADE950(&qword_1EF1B9320, &qword_1EF1B9328, MEMORY[0x1E0CDC720]);
    result = MEMORY[0x1BCCB79D0](MEMORY[0x1E0CD9C18], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EF1BDF30);
  }
  return result;
}

uint64_t sub_1B8B67620@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  int *v4;
  char *v5;
  char v6;
  _QWORD *v7;
  id v8;
  char *v9;
  uint64_t *v10;
  id v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v2 = sub_1B8B9B198();
  MEMORY[0x1E0C80A78](v2);
  v3 = sub_1B8B9C140();
  MEMORY[0x1E0C80A78](v3);
  *a1 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1BC250);
  swift_storeEnumTagMultiPayload();
  v4 = (int *)type metadata accessor for FamilyCalendarColorSelectionView();
  v5 = (char *)a1 + v4[5];
  type metadata accessor for CreateFamilyCalendarViewModel();
  sub_1B8ADBDEC(&qword_1EF1BC278, (uint64_t (*)(uint64_t))type metadata accessor for CreateFamilyCalendarViewModel, (uint64_t)&unk_1B8BA9160);
  *(_QWORD *)v5 = sub_1B8B9B420();
  v5[8] = v6 & 1;
  v7 = (uint64_t *)((char *)a1 + v4[6]);
  v8 = CUIKAppTintColor();
  MEMORY[0x1BCCB5F78](v8);
  sub_1B8B9BE7C();
  *v7 = v14;
  v7[1] = v15;
  v9 = (char *)a1 + v4[7];
  sub_1B8B9BE7C();
  *v9 = v14;
  *((_QWORD *)v9 + 1) = v15;
  v10 = (uint64_t *)((char *)a1 + v4[8]);
  sub_1B8B9C0F8();
  v11 = CUIKBundle();
  sub_1B8B9B15C();
  result = sub_1B8B9C1A0();
  *v10 = result;
  v10[1] = v13;
  return result;
}

uint64_t type metadata accessor for FamilyCalendarColorSelectionView()
{
  uint64_t result;

  result = qword_1EF1BDF78;
  if (!qword_1EF1BDF78)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t *sub_1B8B6784C(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1BC250);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v7 = sub_1B8B9B4A4();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v9 = a3[5];
    v10 = a3[6];
    v11 = (char *)a1 + v9;
    v12 = (char *)a2 + v9;
    v13 = *(_QWORD *)v12;
    LOBYTE(v12) = v12[8];
    *(_QWORD *)v11 = v13;
    v11[8] = (char)v12;
    v14 = (uint64_t *)((char *)a1 + v10);
    v15 = (uint64_t *)((char *)a2 + v10);
    v16 = v15[1];
    *v14 = *v15;
    v14[1] = v16;
    v17 = a3[7];
    v18 = a3[8];
    v19 = (char *)a1 + v17;
    v20 = (char *)a2 + v17;
    *v19 = *v20;
    *((_QWORD *)v19 + 1) = *((_QWORD *)v20 + 1);
    v21 = (uint64_t *)((char *)a1 + v18);
    v22 = (uint64_t *)((char *)a2 + v18);
    v23 = v22[1];
    *v21 = *v22;
    v21[1] = v23;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_1B8B6799C(uint64_t a1)
{
  uint64_t v2;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1BC250);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v2 = sub_1B8B9B4A4();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  }
  else
  {
    swift_release();
  }
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_bridgeObjectRelease();
}

_QWORD *sub_1B8B67A4C(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1BC250);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v6 = sub_1B8B9B4A4();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  v7 = a3[5];
  v8 = a3[6];
  v9 = (char *)a1 + v7;
  v10 = (char *)a2 + v7;
  v11 = *(_QWORD *)v10;
  LOBYTE(v10) = v10[8];
  *(_QWORD *)v9 = v11;
  v9[8] = (char)v10;
  v12 = (_QWORD *)((char *)a1 + v8);
  v13 = (_QWORD *)((char *)a2 + v8);
  v14 = v13[1];
  *v12 = *v13;
  v12[1] = v14;
  v15 = a3[7];
  v16 = a3[8];
  v17 = (char *)a1 + v15;
  v18 = (char *)a2 + v15;
  *v17 = *v18;
  *((_QWORD *)v17 + 1) = *((_QWORD *)v18 + 1);
  v19 = (_QWORD *)((char *)a1 + v16);
  v20 = (_QWORD *)((char *)a2 + v16);
  v21 = v20[1];
  *v19 = *v20;
  v19[1] = v21;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *sub_1B8B67B70(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;

  if (a1 != a2)
  {
    sub_1B8ADE894((uint64_t)a1, &qword_1EF1BC250);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1BC250);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v6 = sub_1B8B9B4A4();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  v7 = a3[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = *(_QWORD *)v9;
  LOBYTE(v9) = v9[8];
  *(_QWORD *)v8 = v10;
  v8[8] = (char)v9;
  swift_retain();
  swift_release();
  v11 = a3[6];
  v12 = (char *)a1 + v11;
  v13 = (char *)a2 + v11;
  *(_QWORD *)((char *)a1 + v11) = *(_QWORD *)((char *)a2 + v11);
  swift_retain();
  swift_release();
  *((_QWORD *)v12 + 1) = *((_QWORD *)v13 + 1);
  swift_retain();
  swift_release();
  v14 = a3[7];
  v15 = (char *)a1 + v14;
  v16 = (char *)a2 + v14;
  *v15 = *v16;
  *((_QWORD *)v15 + 1) = *((_QWORD *)v16 + 1);
  swift_retain();
  swift_release();
  v17 = a3[8];
  v18 = (_QWORD *)((char *)a1 + v17);
  v19 = (_QWORD *)((char *)a2 + v17);
  *v18 = *v19;
  v18[1] = v19[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

char *sub_1B8B67CF0(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1BC250);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v7 = sub_1B8B9B4A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  }
  v8 = a3[5];
  v9 = a3[6];
  v10 = &a1[v8];
  v11 = &a2[v8];
  *(_QWORD *)v10 = *(_QWORD *)v11;
  v10[8] = v11[8];
  *(_OWORD *)&a1[v9] = *(_OWORD *)&a2[v9];
  v12 = a3[8];
  *(_OWORD *)&a1[a3[7]] = *(_OWORD *)&a2[a3[7]];
  *(_OWORD *)&a1[v12] = *(_OWORD *)&a2[v12];
  return a1;
}

char *sub_1B8B67DC4(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;

  if (a1 != a2)
  {
    sub_1B8ADE894((uint64_t)a1, &qword_1EF1BC250);
    v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1BC250);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v7 = sub_1B8B9B4A4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
    }
  }
  v8 = a3[5];
  v9 = &a1[v8];
  v10 = &a2[v8];
  v11 = *(_QWORD *)v10;
  LOBYTE(v10) = v10[8];
  *(_QWORD *)v9 = v11;
  v9[8] = (char)v10;
  swift_release();
  v12 = a3[6];
  v13 = &a1[v12];
  v14 = &a2[v12];
  *(_QWORD *)&a1[v12] = *(_QWORD *)&a2[v12];
  swift_release();
  *((_QWORD *)v13 + 1) = *((_QWORD *)v14 + 1);
  swift_release();
  v15 = a3[7];
  v16 = &a1[v15];
  v17 = &a2[v15];
  *v16 = *v17;
  *((_QWORD *)v16 + 1) = *((_QWORD *)v17 + 1);
  swift_release();
  v18 = a3[8];
  v19 = &a1[v18];
  v20 = &a2[v18];
  v22 = *(_QWORD *)v20;
  v21 = *((_QWORD *)v20 + 1);
  *(_QWORD *)v19 = v22;
  *((_QWORD *)v19 + 1) = v21;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1B8B67F10()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1B8B67F1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1BC258);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 24));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_1B8B67F9C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1B8B67FA8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1BC258);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 24)) = (a2 - 1);
  return result;
}

void sub_1B8B68024()
{
  unint64_t v0;

  sub_1B8AEDBD8();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t sub_1B8B680AC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1B8B680BC@<X0>(uint64_t *a1@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  unint64_t v19;
  uint64_t v20;
  __int128 v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t *v47;
  uint64_t v48;
  char v49;
  uint64_t v50;
  _BYTE v51[16];
  __int128 v52;
  uint64_t v53;

  v4 = v3;
  v46 = a3;
  v41 = sub_1B8B9B8DC();
  v43 = *(_QWORD *)(v41 - 8);
  MEMORY[0x1E0C80A78](v41);
  v8 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for FamilyCalendarColorSelectionView();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  MEMORY[0x1E0C80A78](v9);
  v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1BE088);
  v40 = *(_QWORD *)(v39 - 8);
  MEMORY[0x1E0C80A78](v39);
  v13 = (char *)&v39 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1BE100);
  v44 = *(_QWORD *)(v14 - 8);
  v45 = v14;
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v39 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1BE080);
  MEMORY[0x1E0C80A78](v42);
  v18 = (char *)&v39 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v53 = *a1;
  v52 = *(_OWORD *)(a1 + 1);
  sub_1B8B06074((uint64_t)(a1 + 3), (uint64_t)v51, &qword_1EF1BC3D0);
  sub_1B8B6A5D8(v4, (uint64_t)&v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v19 = (*(unsigned __int8 *)(v10 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v20 = swift_allocObject();
  *(_BYTE *)(v20 + 16) = a2;
  v21 = *((_OWORD *)a1 + 1);
  *(_OWORD *)(v20 + 24) = *(_OWORD *)a1;
  *(_OWORD *)(v20 + 40) = v21;
  *(_QWORD *)(v20 + 56) = a1[4];
  sub_1B8B6A620((uint64_t)&v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), v20 + v19);
  v47 = a1;
  v48 = v4;
  v49 = a2;
  sub_1B8B183F0((uint64_t)&v53);
  sub_1B8B18418((uint64_t)&v52);
  sub_1B8B18418((uint64_t)v51);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1BE108);
  sub_1B8ADE950(&qword_1EF1BE110, &qword_1EF1BE108, (uint64_t)&unk_1B8BADC68);
  sub_1B8B9BEB8();
  sub_1B8B9B8D0();
  sub_1B8ADE950(&qword_1EF1BE090, &qword_1EF1BE088, MEMORY[0x1E0CDFA50]);
  sub_1B8ADBDEC(&qword_1EF1BC378, (uint64_t (*)(uint64_t))MEMORY[0x1E0CDBC98], MEMORY[0x1E0CDBC78]);
  v22 = v39;
  v23 = v41;
  sub_1B8B9BBF4();
  (*(void (**)(char *, uint64_t))(v43 + 8))(v8, v23);
  (*(void (**)(char *, uint64_t))(v40 + 8))(v13, v22);
  v24 = objc_msgSend((id)objc_opt_self(), sel_cuik_tertiaryGroupedBackgroundColor);
  v50 = MEMORY[0x1BCCB5F78](v24);
  swift_retain();
  v25 = sub_1B8B9BF30();
  v27 = v44;
  v26 = v45;
  (*(void (**)(char *, char *, uint64_t))(v44 + 16))(v18, v16, v45);
  swift_release();
  *(_QWORD *)&v18[*(int *)(v42 + 36)] = v25;
  (*(void (**)(char *, uint64_t))(v27 + 8))(v16, v26);
  LOBYTE(v19) = sub_1B8B9BA08();
  sub_1B8B9B3E4();
  v29 = v28;
  v31 = v30;
  v33 = v32;
  v35 = v34;
  v36 = v46;
  sub_1B8ADE850((uint64_t)v18, v46, &qword_1EF1BE080);
  v37 = v36 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EF1BE060) + 36);
  *(_BYTE *)v37 = v19;
  *(_QWORD *)(v37 + 8) = v29;
  *(_QWORD *)(v37 + 16) = v31;
  *(_QWORD *)(v37 + 24) = v33;
  *(_QWORD *)(v37 + 32) = v35;
  *(_BYTE *)(v37 + 40) = 0;
  return sub_1B8ADE894((uint64_t)v18, &qword_1EF1BE080);
}

uint64_t sub_1B8B684C4(char a1, uint64_t a2, uint64_t a3)
{
  char v5;
  uint64_t v6;
  uint64_t KeyPath;

  if ((a1 & 1) != 0)
    type metadata accessor for FamilyCalendarColorSelectionView();
  else
    swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  v5 = *(_BYTE *)(a3 + *(int *)(type metadata accessor for FamilyCalendarColorSelectionView() + 20) + 8);
  v6 = swift_retain();
  sub_1B8B17464(v6, v5);
  swift_release();
  KeyPath = swift_getKeyPath();
  MEMORY[0x1E0C80A78](KeyPath);
  sub_1B8ADBDEC(&qword_1EF1BC278, (uint64_t (*)(uint64_t))type metadata accessor for CreateFamilyCalendarViewModel, (uint64_t)&unk_1B8BA9160);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1B8B9B2C4();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  if ((a1 & 1) != 0)
  {
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1BC8F8);
    sub_1B8B9BE88();
    sub_1B8B9BE94();
    swift_release();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t sub_1B8B68700@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  __int128 v8;
  uint64_t v9;
  uint64_t result;
  _BYTE v11[16];
  __int128 v12;
  uint64_t v13;

  v13 = *a1;
  v12 = *(_OWORD *)(a1 + 1);
  sub_1B8B06074((uint64_t)(a1 + 3), (uint64_t)v11, &qword_1EF1BC3D0);
  v8 = *((_OWORD *)a1 + 1);
  *(_OWORD *)a4 = *(_OWORD *)a1;
  *(_OWORD *)(a4 + 16) = v8;
  *(_QWORD *)(a4 + 32) = a1[4];
  v9 = a4 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EF1BE108) + 40);
  sub_1B8B183F0((uint64_t)&v13);
  sub_1B8B18418((uint64_t)&v12);
  sub_1B8B18418((uint64_t)v11);
  sub_1B8B183F0((uint64_t)&v13);
  sub_1B8B18418((uint64_t)&v12);
  sub_1B8B18418((uint64_t)v11);
  sub_1B8B687EC(a2, a1, a3, v9);
  sub_1B8B18440((uint64_t)&v13);
  sub_1B8B18468((uint64_t)&v12);
  result = sub_1B8B18468((uint64_t)v11);
  *(_BYTE *)(a4 + 40) = 1;
  return result;
}

uint64_t sub_1B8B687EC@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v33;
  _QWORD v34[2];
  int v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v35 = a3;
  v36 = a4;
  v6 = type metadata accessor for FamilyCalendarColorSelectionView();
  v7 = MEMORY[0x1E0C80A78](v6);
  v9 = (char *)v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x1E0C80A78](v7);
  v12 = (char *)v34 - v11;
  v13 = *(int *)(v10 + 20);
  v37 = a1;
  v14 = *(_BYTE *)(a1 + v13 + 8);
  v15 = swift_retain();
  v16 = (_QWORD *)sub_1B8B17464(v15, v14);
  swift_release();
  swift_getKeyPath();
  v38 = (uint64_t)v16;
  v34[1] = sub_1B8ADBDEC(&qword_1EF1BC278, (uint64_t (*)(uint64_t))type metadata accessor for CreateFamilyCalendarViewModel, (uint64_t)&unk_1B8BA9160);
  sub_1B8B9B2D0();
  swift_release();
  v17 = v16[10];
  v19 = v16[11];
  v18 = v16[12];
  v20 = v16[13];
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_release();
  if ((sub_1B8B9BD5C() & 1) == 0)
    goto LABEL_15;
  v21 = v17 == a2[1] && v19 == a2[2];
  if (!v21 && (sub_1B8B9C8D8() & 1) == 0)
    goto LABEL_15;
  v22 = a2[4];
  if (!v20)
  {
    swift_bridgeObjectRelease();
    swift_release();
    v24 = v36;
    v26 = v37;
    if (!v22)
      goto LABEL_24;
    goto LABEL_16;
  }
  if (!v22)
  {
LABEL_15:
    swift_bridgeObjectRelease();
    v24 = v36;
    v26 = v37;
    swift_bridgeObjectRelease();
    swift_release();
    goto LABEL_16;
  }
  v23 = v18 == a2[3] && v20 == v22;
  v24 = v36;
  if (!v23)
  {
    v25 = sub_1B8B9C8D8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    v26 = v37;
    if ((v25 & 1) != 0)
      goto LABEL_24;
LABEL_16:
    sub_1B8B6A5D8(v26, (uint64_t)v12);
    sub_1B8B6A5D8((uint64_t)v12, (uint64_t)v9);
    if ((v35 & 1) != 0)
    {
      v27 = v9[*(int *)(v6 + 20) + 8];
      v28 = swift_retain();
      v29 = sub_1B8B17464(v28, v27);
      swift_release();
      swift_getKeyPath();
      v38 = v29;
      sub_1B8B9B2D0();
      swift_release();
      v30 = *(_BYTE *)(v29 + 64);
      swift_bridgeObjectRetain();
      swift_retain();
      swift_bridgeObjectRetain();
      swift_release();
      sub_1B8B6AE04((uint64_t)v9);
      sub_1B8B6AE04((uint64_t)v12);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      if ((v30 & 1) != 0)
        goto LABEL_25;
    }
    else
    {
      sub_1B8B6AE04((uint64_t)v9);
      sub_1B8B6AE04((uint64_t)v12);
    }
    v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1BE118);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(v24, 1, 1, v31);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  v26 = v37;
LABEL_24:
  sub_1B8B6A5D8(v26, (uint64_t)v12);
  sub_1B8B6AE04((uint64_t)v12);
LABEL_25:
  v38 = sub_1B8B9BE04();
  sub_1B8B9BCC0();
  swift_release();
  v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1BE118);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 56))(v24, 0, 1, v33);
}

uint64_t sub_1B8B68BC8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE v9[16];
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1BDF98);
  MEMORY[0x1E0C80A78](v2);
  v4 = &v9[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  *(_QWORD *)v4 = sub_1B8B9B7A4();
  *((_QWORD *)v4 + 1) = 0;
  v4[16] = 1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1BDFE0);
  sub_1B8B68D1C(a1, (uint64_t)&v4[*(int *)(v5 + 44)]);
  v10 = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1BDFA0);
  sub_1B8ADE950(&qword_1EF1BDFA8, &qword_1EF1BDF98, MEMORY[0x1E0CDFCB8]);
  v6 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EF1BDFB0);
  v7 = sub_1B8ADE950(&qword_1EF1BDFB8, &qword_1EF1BDFB0, MEMORY[0x1E0CD8910]);
  v11 = v6;
  v12 = v7;
  swift_getOpaqueTypeConformance2();
  sub_1B8B9BD08();
  return sub_1B8ADE894((uint64_t)v4, &qword_1EF1BDF98);
}

uint64_t sub_1B8B68D1C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v32;
  void (*v33)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(_BYTE *, uint64_t);
  _BYTE v39[4];
  int v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t KeyPath;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _BYTE *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;

  v46 = a1;
  v50 = sub_1B8B9B570();
  v52 = *(_QWORD *)(v50 - 8);
  MEMORY[0x1E0C80A78](v50);
  v4 = &v39[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1BDFF8);
  v48 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v7 = &v39[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1BE000);
  v53 = *(_QWORD *)(v51 - 8);
  MEMORY[0x1E0C80A78](v51);
  v9 = &v39[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1BE008);
  v49 = *(_QWORD *)(v10 - 8);
  v11 = MEMORY[0x1E0C80A78](v10);
  v13 = &v39[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v11);
  v47 = &v39[-v14];
  v15 = sub_1B8B9B198();
  MEMORY[0x1E0C80A78](v15);
  v16 = sub_1B8B9C140();
  MEMORY[0x1E0C80A78](v16);
  v45 = sub_1B8B9BE04();
  v44 = sub_1B8B9BA20();
  KeyPath = swift_getKeyPath();
  sub_1B8B9C0F8();
  v17 = CUIKBundle();
  sub_1B8B9B15C();
  v41 = sub_1B8B9C1A0();
  v42 = v18;
  v40 = sub_1B8B9B9F0();
  sub_1B8B9B3E4();
  v20 = v19;
  v22 = v21;
  v24 = v23;
  v26 = v25;
  v54 = v46;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1BE010);
  sub_1B8ADE950(&qword_1EF1BE018, &qword_1EF1BE010, MEMORY[0x1E0CE0678]);
  sub_1B8B9BAEC();
  sub_1B8B9C044();
  v27 = sub_1B8ADE950(&qword_1EF1BE020, &qword_1EF1BDFF8, MEMORY[0x1E0CDD8A0]);
  v28 = sub_1B8ADBDEC(&qword_1EF1BC390, (uint64_t (*)(uint64_t))MEMORY[0x1E0CD9E80], MEMORY[0x1E0CD9E70]);
  v29 = v50;
  sub_1B8B9BD38();
  (*(void (**)(_BYTE *, uint64_t))(v52 + 8))(v4, v29);
  (*(void (**)(_BYTE *, uint64_t))(v48 + 8))(v7, v5);
  v55 = v5;
  v56 = v29;
  v57 = v27;
  v58 = v28;
  swift_getOpaqueTypeConformance2();
  v30 = v51;
  sub_1B8B9BCB4();
  (*(void (**)(_BYTE *, uint64_t))(v53 + 8))(v9, v30);
  v31 = v49;
  v32 = v47;
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v49 + 32))(v47, v13, v10);
  v33 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(v31 + 16);
  v33(v13, v32, v10);
  v34 = KeyPath;
  *(_QWORD *)a2 = v45;
  *(_QWORD *)(a2 + 8) = v34;
  v35 = v41;
  *(_QWORD *)(a2 + 16) = v44;
  *(_QWORD *)(a2 + 24) = v35;
  *(_QWORD *)(a2 + 40) = 0;
  *(_QWORD *)(a2 + 48) = 0;
  *(_QWORD *)(a2 + 32) = v42;
  *(_BYTE *)(a2 + 56) = v40;
  *(_QWORD *)(a2 + 64) = v20;
  *(_QWORD *)(a2 + 72) = v22;
  *(_QWORD *)(a2 + 80) = v24;
  *(_QWORD *)(a2 + 88) = v26;
  *(_BYTE *)(a2 + 96) = 0;
  v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1BE028);
  v33((_BYTE *)(a2 + *(int *)(v36 + 48)), v13, v10);
  v37 = *(void (**)(_BYTE *, uint64_t))(v31 + 8);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  v37(v32, v10);
  v37(v13, v10);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_1B8B69210@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _OWORD *v42;
  __int128 v43;
  uint64_t v44;
  uint64_t *v45;
  char *v46;
  uint64_t v47;
  void (*v48)(char *, char *, uint64_t);
  char *v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  void (*v54)(char *, uint64_t);
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  uint64_t v72[6];

  v68 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1BE030);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v56 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v66 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1BE038);
  MEMORY[0x1E0C80A78](v66);
  v64 = (uint64_t)&v56 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1BE040);
  MEMORY[0x1E0C80A78](v7);
  v65 = (char *)&v56 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v60 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1BE048);
  v9 = MEMORY[0x1E0C80A78](v60);
  v67 = (uint64_t)&v56 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v59 = (uint64_t)&v56 - v11;
  v12 = sub_1B8B9B198();
  MEMORY[0x1E0C80A78](v12);
  v58 = (char *)&v56 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_1B8B9C140();
  MEMORY[0x1E0C80A78](v14);
  v15 = type metadata accessor for FamilyCalendarColorSelectionView();
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(_QWORD *)(v16 + 64);
  MEMORY[0x1E0C80A78](v15);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1BE050);
  v62 = *(_QWORD *)(v18 - 8);
  v63 = v18;
  v19 = MEMORY[0x1E0C80A78](v18);
  v61 = (char *)&v56 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v19);
  v57 = (char *)&v56 - v21;
  v22 = *(_BYTE *)(a1 + *(int *)(v15 + 20) + 8);
  v23 = swift_retain();
  v24 = sub_1B8B17464(v23, v22);
  swift_release();
  v25 = *(_QWORD *)(v24 + 56);
  swift_bridgeObjectRetain();
  swift_release();
  *(_QWORD *)&v69 = v25;
  sub_1B8B6A5D8(a1, (uint64_t)&v56 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  v26 = (*(unsigned __int8 *)(v16 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  v27 = swift_allocObject();
  sub_1B8B6A620((uint64_t)&v56 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0), v27 + v26);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1BE058);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1BE060);
  sub_1B8ADE950(&qword_1EF1BE068, &qword_1EF1BE058, MEMORY[0x1E0DEAF48]);
  sub_1B8B056B8(&qword_1EF1BE070, &qword_1EF1BE060, (uint64_t (*)(void))sub_1B8B6A8EC, MEMORY[0x1E0CD9750]);
  sub_1B8B6A9F4();
  sub_1B8B9BF90();
  v28 = (uint64_t *)(a1 + *(int *)(v15 + 24));
  v30 = *v28;
  v29 = v28[1];
  *(_QWORD *)&v69 = v30;
  *((_QWORD *)&v69 + 1) = v29;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1BDFD8);
  sub_1B8B9BE88();
  v31 = v72[0];
  v56 = v72[0];
  sub_1B8B9C0F8();
  v32 = CUIKBundle();
  sub_1B8B9B15C();
  v33 = sub_1B8B9C1A0();
  v72[0] = v31;
  v72[1] = v33;
  v72[3] = 0;
  v72[4] = 0;
  v72[2] = v34;
  v35 = v59;
  sub_1B8B680BC(v72, 1, v59);
  v36 = sub_1B8B9C014();
  v38 = v37;
  v39 = v35 + *(int *)(v60 + 36);
  *(_QWORD *)v5 = sub_1B8B9B738();
  *((_QWORD *)v5 + 1) = 0;
  v5[16] = 1;
  v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1BE0A0);
  sub_1B8B6982C(a1, &v5[*(int *)(v40 + 44)]);
  sub_1B8B9C014();
  sub_1B8B9B474();
  v41 = v64;
  sub_1B8ADE850((uint64_t)v5, v64, &qword_1EF1BE030);
  v42 = (_OWORD *)(v41 + *(int *)(v66 + 36));
  v43 = v70;
  *v42 = v69;
  v42[1] = v43;
  v42[2] = v71;
  sub_1B8ADE894((uint64_t)v5, &qword_1EF1BE030);
  sub_1B8B6AA38();
  v44 = (uint64_t)v65;
  sub_1B8B9BC84();
  sub_1B8ADE894(v41, &qword_1EF1BE038);
  sub_1B8B06074(v44, v39, &qword_1EF1BE040);
  v45 = (uint64_t *)(v39 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EF1BE0B8) + 36));
  *v45 = v36;
  v45[1] = v38;
  v46 = v61;
  v47 = v62;
  v48 = *(void (**)(char *, char *, uint64_t))(v62 + 16);
  v49 = v57;
  v50 = v63;
  v48(v61, v57, v63);
  v51 = v67;
  sub_1B8ADE850(v35, v67, &qword_1EF1BE048);
  v52 = v68;
  v48(v68, v46, v50);
  v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1BE0C0);
  sub_1B8ADE850(v51, (uint64_t)&v52[*(int *)(v53 + 48)], &qword_1EF1BE048);
  swift_bridgeObjectRelease();
  swift_release();
  sub_1B8ADE894(v35, &qword_1EF1BE048);
  v54 = *(void (**)(char *, uint64_t))(v47 + 8);
  v54(v49, v50);
  sub_1B8ADE894(v51, &qword_1EF1BE048);
  return ((uint64_t (*)(char *, uint64_t))v54)(v46, v50);
}

uint64_t sub_1B8B6982C@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  void (*v34)(char *, char *, uint64_t);
  char *v35;
  char *v36;
  uint64_t v37;
  char *v38;
  char *v39;
  void (*v40)(char *, uint64_t);
  uint64_t v42;
  uint64_t v43;
  __int128 v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  _OWORD v58[2];
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  _OWORD v64[2];
  uint64_t v65;
  char v66;
  uint64_t v67;
  char v68;
  uint64_t v69;
  uint64_t v70;
  char v71;
  char v72;
  char v73;
  _BYTE v74[32];
  __int128 v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  _OWORD v80[3];

  v46 = a1;
  v57 = a2;
  v3 = type metadata accessor for FamilyCalendarColorSelectionView();
  v4 = *(_QWORD *)(*(_QWORD *)(v3 - 8) + 64);
  v51 = *(_QWORD *)(v3 - 8);
  v52 = v4;
  MEMORY[0x1E0C80A78](v3);
  v50 = (uint64_t)&v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1BE0C8);
  v55 = *(_QWORD *)(v6 - 8);
  v56 = v6;
  v7 = MEMORY[0x1E0C80A78](v6);
  v54 = (char *)&v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v53 = (char *)&v42 - v9;
  v10 = (uint64_t *)(a1 + *(int *)(v3 + 24));
  v11 = *v10;
  v48 = v10[1];
  v49 = v11;
  *(_QWORD *)&v58[0] = v11;
  *((_QWORD *)&v58[0] + 1) = v48;
  v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1BDFD8);
  sub_1B8B9BEA0();
  v45 = *(_QWORD *)v74;
  v44 = *(_OWORD *)&v74[8];
  v12 = a1 + *(int *)(v3 + 28);
  v13 = *(_BYTE *)v12;
  v14 = *(_QWORD *)(v12 + 8);
  LOBYTE(v58[0]) = v13;
  *((_QWORD *)&v58[0] + 1) = v14;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1BC8F8);
  sub_1B8B9BEA0();
  v15 = *(_QWORD *)&v74[8];
  v43 = *(_QWORD *)v74;
  v16 = v74[16];
  sub_1B8B9C014();
  sub_1B8B9B474();
  v17 = v65;
  v18 = v66;
  v19 = v67;
  v20 = v68;
  v22 = v69;
  v21 = v70;
  v23 = sub_1B8B9B9FC();
  sub_1B8B9B3E4();
  v73 = v18;
  v72 = v20;
  v71 = 0;
  *(_QWORD *)&v58[0] = v45;
  *(_OWORD *)((char *)v58 + 8) = v44;
  *((_QWORD *)&v58[1] + 1) = v43;
  *(_QWORD *)&v59 = v15;
  BYTE8(v59) = v16;
  *(_QWORD *)&v60 = v17;
  BYTE8(v60) = v18;
  *(_QWORD *)&v61 = v19;
  BYTE8(v61) = v20;
  *(_QWORD *)&v62 = v22;
  *((_QWORD *)&v62 + 1) = v21;
  LOBYTE(v63) = v23;
  *((_QWORD *)&v63 + 1) = v24;
  *(_QWORD *)&v64[0] = v25;
  *((_QWORD *)&v64[0] + 1) = v26;
  *(_QWORD *)&v64[1] = v27;
  BYTE8(v64[1]) = 0;
  *(_QWORD *)v74 = v49;
  *(_QWORD *)&v74[8] = v48;
  sub_1B8B9BE88();
  v28 = v50;
  sub_1B8B6A5D8(v46, v50);
  v29 = (*(unsigned __int8 *)(v51 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v51 + 80);
  v30 = swift_allocObject();
  sub_1B8B6A620(v28, v30 + v29);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1BE0D0);
  sub_1B8B056B8(&qword_1EF1BE0D8, &qword_1EF1BE0D0, sub_1B8B6ABF8, MEMORY[0x1E0CD9750]);
  sub_1B8B6AC1C();
  v31 = v53;
  sub_1B8B9BD14();
  swift_release();
  swift_release();
  v79 = v63;
  v80[0] = v64[0];
  *(_OWORD *)((char *)v80 + 9) = *(_OWORD *)((char *)v64 + 9);
  v75 = v59;
  v76 = v60;
  v77 = v61;
  v78 = v62;
  *(_OWORD *)v74 = v58[0];
  *(_OWORD *)&v74[16] = v58[1];
  sub_1B8B6AC60((uint64_t)v74);
  v32 = v54;
  v33 = v55;
  v34 = *(void (**)(char *, char *, uint64_t))(v55 + 16);
  v35 = v31;
  v36 = v31;
  v37 = v56;
  v34(v54, v35, v56);
  v38 = v57;
  v34(v57, v32, v37);
  v39 = &v38[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EF1BE0F8) + 48)];
  *(_QWORD *)v39 = 0;
  v39[8] = 1;
  v40 = *(void (**)(char *, uint64_t))(v33 + 8);
  v40(v36, v37);
  return ((uint64_t (*)(char *, uint64_t))v40)(v32, v37);
}

uint64_t sub_1B8B69BD0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v3;
  uint64_t v4;
  char v5;
  uint64_t result;
  uint64_t v7;
  uint64_t KeyPath;

  v3 = *(_BYTE *)(a3 + *(int *)(type metadata accessor for FamilyCalendarColorSelectionView() + 20) + 8);
  v4 = swift_retain();
  sub_1B8B17464(v4, v3);
  swift_release();
  swift_getKeyPath();
  sub_1B8ADBDEC(&qword_1EF1BC278, (uint64_t (*)(uint64_t))type metadata accessor for CreateFamilyCalendarViewModel, (uint64_t)&unk_1B8BA9160);
  sub_1B8B9B2D0();
  swift_release();
  swift_retain();
  swift_release();
  v5 = sub_1B8B9BD5C();
  result = swift_release();
  if ((v5 & 1) == 0)
  {
    swift_retain();
    swift_bridgeObjectRetain();
    v7 = swift_retain();
    sub_1B8B17464(v7, v3);
    swift_release();
    KeyPath = swift_getKeyPath();
    MEMORY[0x1E0C80A78](KeyPath);
    swift_retain();
    swift_bridgeObjectRetain();
    sub_1B8B9B2C4();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease_n();
    return swift_release_n();
  }
  return result;
}

uint64_t sub_1B8B69DD0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  _BYTE v9[16];
  uint64_t v10;

  v2 = sub_1B8B9B8B8();
  MEMORY[0x1E0C80A78](v2);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1BDFB0);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = &v9[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1B8B9B8AC();
  v10 = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1BDFE8);
  sub_1B8B6A6E0();
  sub_1B8B9B438();
  v7 = sub_1B8ADE950(&qword_1EF1BDFB8, &qword_1EF1BDFB0, MEMORY[0x1E0CD8910]);
  MEMORY[0x1BCCB5A74](v6, v3, v7);
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_1B8B69F00@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  id v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t KeyPath;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v27 = a1;
  v30 = a2;
  v2 = sub_1B8B9B408();
  v28 = *(_QWORD *)(v2 - 8);
  v29 = v2;
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for FamilyCalendarColorSelectionView();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  MEMORY[0x1E0C80A78](v5);
  v8 = sub_1B8B9B198();
  MEMORY[0x1E0C80A78](v8);
  v9 = sub_1B8B9C140();
  MEMORY[0x1E0C80A78](v9);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1BC908);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B8B9C0F8();
  v14 = CUIKBundle();
  sub_1B8B9B15C();
  v31 = sub_1B8B9C1A0();
  v32 = v15;
  sub_1B8B6A5D8(v27, (uint64_t)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v16 = (*(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v17 = swift_allocObject();
  sub_1B8B6A620((uint64_t)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v17 + v16);
  sub_1B8ADDBE4();
  sub_1B8B9BED0();
  v19 = v28;
  v18 = v29;
  (*(void (**)(char *, _QWORD, uint64_t))(v28 + 104))(v4, *MEMORY[0x1E0CD8748], v29);
  KeyPath = swift_getKeyPath();
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1BDFE8);
  v22 = v30;
  v23 = (uint64_t *)(v30 + *(int *)(v21 + 36));
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1BBF60);
  (*(void (**)(char *, char *, uint64_t))(v19 + 16))((char *)v23 + *(int *)(v24 + 28), v4, v18);
  *v23 = KeyPath;
  (*(void (**)(uint64_t, char *, uint64_t))(v11 + 16))(v22, v13, v10);
  (*(void (**)(char *, uint64_t))(v19 + 8))(v4, v18);
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
}

uint64_t sub_1B8B6A1B8(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 40) = a1;
  sub_1B8B9C380();
  *(_QWORD *)(v1 + 48) = sub_1B8B9C374();
  sub_1B8B9C368();
  return swift_task_switch();
}

uint64_t sub_1B8B6A224()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;

  v1 = *(_QWORD *)(v0 + 40);
  swift_release();
  v2 = type metadata accessor for FamilyCalendarColorSelectionView();
  v3 = *(_BYTE *)(v1 + *(int *)(v2 + 20) + 8);
  v4 = swift_retain();
  v5 = sub_1B8B17464(v4, v3);
  swift_release();
  swift_getKeyPath();
  *(_QWORD *)(v0 + 16) = v5;
  sub_1B8ADBDEC(&qword_1EF1BC278, (uint64_t (*)(uint64_t))type metadata accessor for CreateFamilyCalendarViewModel, (uint64_t)&unk_1B8BA9160);
  sub_1B8B9B2D0();
  swift_release();
  v6 = *(_QWORD *)(v5 + 72);
  swift_retain();
  swift_release();
  v7 = (uint64_t *)(v1 + *(int *)(v2 + 24));
  v9 = *v7;
  v8 = v7[1];
  *(_QWORD *)(v0 + 16) = v9;
  *(_QWORD *)(v0 + 24) = v8;
  *(_QWORD *)(v0 + 32) = v6;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1BDFD8);
  sub_1B8B9BE94();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1B8B6A340@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t OpaqueTypeConformance2;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD v27[3];
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v31 = a2;
  v32 = sub_1B8B9C3A4();
  v30 = *(_QWORD *)(v32 - 8);
  v4 = MEMORY[0x1E0C80A78](v32);
  v6 = (char *)v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = *(_QWORD *)(a1 - 8);
  v7 = *(_QWORD *)(v28 + 64);
  MEMORY[0x1E0C80A78](v4);
  v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1BDF88);
  v8 = *(_QWORD *)(v29 - 8);
  MEMORY[0x1E0C80A78](v29);
  v10 = (char *)v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = v2;
  v27[1] = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1BDF90);
  v11 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EF1BDF98);
  v12 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EF1BDFA0);
  v13 = sub_1B8ADE950(&qword_1EF1BDFA8, &qword_1EF1BDF98, MEMORY[0x1E0CDFCB8]);
  v14 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EF1BDFB0);
  v15 = sub_1B8ADE950(&qword_1EF1BDFB8, &qword_1EF1BDFB0, MEMORY[0x1E0CD8910]);
  v34 = v14;
  v35 = v15;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  v34 = v11;
  v35 = v12;
  v36 = v13;
  v37 = OpaqueTypeConformance2;
  swift_getOpaqueTypeConformance2();
  sub_1B8B9B558();
  sub_1B8B6A5D8(v27[2], (uint64_t)v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v17 = (*(unsigned __int8 *)(v28 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80);
  v18 = swift_allocObject();
  sub_1B8B6A620((uint64_t)v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v18 + v17);
  sub_1B8B9C38C();
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1BDFD0);
  v20 = v31;
  v21 = (char *)(v31 + *(int *)(v19 + 36));
  v22 = sub_1B8B9B4C8();
  v23 = v30;
  v24 = v32;
  (*(void (**)(char *, char *, uint64_t))(v30 + 16))(&v21[*(int *)(v22 + 20)], v6, v32);
  *(_QWORD *)v21 = &unk_1EF1BDFC8;
  *((_QWORD *)v21 + 1) = v18;
  v25 = v29;
  (*(void (**)(uint64_t, char *, uint64_t))(v8 + 16))(v20, v10, v29);
  (*(void (**)(char *, uint64_t))(v23 + 8))(v6, v24);
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v25);
}

uint64_t sub_1B8B6A5D0()
{
  uint64_t v0;

  return sub_1B8B68BC8(*(_QWORD *)(v0 + 16));
}

uint64_t sub_1B8B6A5D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FamilyCalendarColorSelectionView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1B8B6A620(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FamilyCalendarColorSelectionView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1B8B6A664()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v2 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for FamilyCalendarColorSelectionView() - 8) + 80);
  v3 = v0 + ((v2 + 16) & ~v2);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v4;
  *v4 = v1;
  v4[1] = sub_1B8AF0528;
  return sub_1B8B6A1B8(v3);
}

uint64_t sub_1B8B6A6D0()
{
  uint64_t v0;

  return sub_1B8B69DD0(*(_QWORD *)(v0 + 16));
}

uint64_t sub_1B8B6A6D8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1B8B69F00(*(_QWORD *)(v1 + 16), a1);
}

unint64_t sub_1B8B6A6E0()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1EF1BDFF0;
  if (!qword_1EF1BDFF0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EF1BDFE8);
    v2[0] = sub_1B8ADE950(&qword_1EF1BCB68, &qword_1EF1BC908, MEMORY[0x1E0CDFA50]);
    v2[1] = sub_1B8ADE950(&qword_1EF1BBF80, &qword_1EF1BBF60, MEMORY[0x1E0CDCF88]);
    result = MEMORY[0x1BCCB79D0](MEMORY[0x1E0CD9C18], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EF1BDFF0);
  }
  return result;
}

uint64_t sub_1B8B6A780()
{
  type metadata accessor for FamilyCalendarColorSelectionView();
  return sub_1B8B4C788();
}

uint64_t sub_1B8B6A7AC()
{
  return sub_1B8B9B5E8();
}

uint64_t sub_1B8B6A7CC()
{
  return sub_1B8B9B5E8();
}

uint64_t sub_1B8B6A7EC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v7;

  v2 = sub_1B8B9B408();
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v5 + 16))(v4, a1);
  return MEMORY[0x1BCCB5780](v4);
}

uint64_t sub_1B8B6A874@<X0>(char *a1@<X8>)
{
  uint64_t v1;

  return sub_1B8B69210(*(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_1B8B6A880@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  __int128 v4;
  _OWORD v6[2];
  uint64_t v7;

  type metadata accessor for FamilyCalendarColorSelectionView();
  v4 = *(_OWORD *)(a1 + 16);
  v6[0] = *(_OWORD *)a1;
  v6[1] = v4;
  v7 = *(_QWORD *)(a1 + 32);
  return sub_1B8B680BC((uint64_t *)v6, 0, a2);
}

unint64_t sub_1B8B6A8EC()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t);
  _QWORD v5[6];

  result = qword_1EF1BE078;
  if (!qword_1EF1BE078)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EF1BE080);
    v2 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EF1BE088);
    v3 = sub_1B8B9B8DC();
    v4 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CDBC98];
    v5[2] = v2;
    v5[3] = v3;
    v5[4] = sub_1B8ADE950(&qword_1EF1BE090, &qword_1EF1BE088, MEMORY[0x1E0CDFA50]);
    v5[5] = sub_1B8ADBDEC(&qword_1EF1BC378, v4, MEMORY[0x1E0CDBC78]);
    v5[0] = swift_getOpaqueTypeConformance2();
    v5[1] = sub_1B8ADE950(&qword_1EF1BC368, &qword_1EF1BC370, MEMORY[0x1E0CDBEE8]);
    result = MEMORY[0x1BCCB79D0](MEMORY[0x1E0CD9C18], v1, v5);
    atomic_store(result, (unint64_t *)&qword_1EF1BE078);
  }
  return result;
}

unint64_t sub_1B8B6A9F4()
{
  unint64_t result;

  result = qword_1EF1BE098;
  if (!qword_1EF1BE098)
  {
    result = MEMORY[0x1BCCB79D0](&unk_1B8BA90E8, &type metadata for ColorWithName);
    atomic_store(result, (unint64_t *)&qword_1EF1BE098);
  }
  return result;
}

unint64_t sub_1B8B6AA38()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1EF1BE0A8;
  if (!qword_1EF1BE0A8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EF1BE038);
    v2[0] = sub_1B8ADE950(&qword_1EF1BE0B0, &qword_1EF1BE030, MEMORY[0x1E0CDFB08]);
    v2[1] = MEMORY[0x1E0CD8D78];
    result = MEMORY[0x1BCCB79D0](MEMORY[0x1E0CD9C18], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EF1BE0A8);
  }
  return result;
}

uint64_t objectdestroyTm_6()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(type metadata accessor for FamilyCalendarColorSelectionView() - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1BC250);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v3 = sub_1B8B9B4A4();
    (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v0 + v2, v3);
  }
  else
  {
    swift_release();
  }
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1B8B6ABAC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for FamilyCalendarColorSelectionView() - 8) + 80);
  return sub_1B8B69BD0(a1, a2, v2 + ((v5 + 16) & ~v5));
}

uint64_t sub_1B8B6ABF8()
{
  return sub_1B8B056B8(&qword_1EF1BE0E0, &qword_1EF1BE0E8, (uint64_t (*)(void))sub_1B8B07428, MEMORY[0x1E0CD8D78]);
}

unint64_t sub_1B8B6AC1C()
{
  unint64_t result;

  result = qword_1EF1BE0F0;
  if (!qword_1EF1BE0F0)
  {
    result = MEMORY[0x1BCCB79D0](MEMORY[0x1E0CDF5E0], MEMORY[0x1E0CDF5C8]);
    atomic_store(result, (unint64_t *)&qword_1EF1BE0F0);
  }
  return result;
}

uint64_t sub_1B8B6AC60(uint64_t a1)
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return a1;
}

uint64_t sub_1B8B6ACC0()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(type metadata accessor for FamilyCalendarColorSelectionView() - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1BC250);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v3 = sub_1B8B9B4A4();
    (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v0 + v2, v3);
  }
  else
  {
    swift_release();
  }
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1B8B6ADC4()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for FamilyCalendarColorSelectionView() - 8) + 80);
  return sub_1B8B684C4(*(_BYTE *)(v0 + 16), v0 + 24, v0 + ((v1 + 64) & ~v1));
}

uint64_t sub_1B8B6ADF8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1B8B68700(*(uint64_t **)(v1 + 16), *(_QWORD *)(v1 + 24), *(unsigned __int8 *)(v1 + 32), a1);
}

uint64_t sub_1B8B6AE04(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for FamilyCalendarColorSelectionView();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1B8B6AE44()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1EF1BE120;
  if (!qword_1EF1BE120)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EF1BDFD0);
    v2[0] = sub_1B8ADE950(&qword_1EF1BE128, &qword_1EF1BDF88, MEMORY[0x1E0CD9C68]);
    v2[1] = sub_1B8ADBDEC(&qword_1EF1BC2D0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CD9170], MEMORY[0x1E0CD9160]);
    result = MEMORY[0x1BCCB79D0](MEMORY[0x1E0CD9C18], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EF1BE120);
  }
  return result;
}

uint64_t sub_1B8B6AEE0()
{
  return sub_1B8B183D8();
}

id EKSourceConstraintsModelWrapper.canSetAvailability.getter()
{
  id *v0;

  return objc_msgSend(*v0, sel_canSetAvailability);
}

id EKSourceConstraintsModelWrapper.eventAvailabilityLimited.getter()
{
  id *v0;

  return objc_msgSend(*v0, sel_eventAvailabilityLimited);
}

id EKSourceConstraintsModelWrapper.ekConstraints.getter()
{
  id *v0;

  return *v0;
}

uint64_t EKSourceConstraintsModelWrapper.maxAlarmsAllowed.getter()
{
  id *v0;
  uint64_t result;

  LODWORD(result) = objc_msgSend(*v0, sel_maxAlarmsAllowed);
  if ((int)result < 0)
    return -1;
  else
    return result;
}

id EKSourceConstraintsModelWrapper.requiresOutgoingInvitationsInDefaultCalendar.getter()
{
  id *v0;

  return objc_msgSend(*v0, sel_requiresOutgoingInvitationsInDefaultCalendar);
}

id EKSourceConstraintsModelWrapper.eventDurationConstrainedToRecurrenceInterval.getter()
{
  id *v0;

  return objc_msgSend(*v0, sel_eventDurationConstrainedToRecurrenceInterval);
}

id EKSourceConstraintsModelWrapper.occurrencesMustOccurOnSeparateDays.getter()
{
  id *v0;

  return objc_msgSend(*v0, sel_occurrencesMustOccurOnSeparateDays);
}

id EKSourceConstraintsModelWrapper.supportsPrivateEvents.getter()
{
  id *v0;

  return objc_msgSend(*v0, sel_supportsPrivateEvents);
}

id EKSourceConstraintsModelWrapper.supportsAlarmTriggerDates.getter()
{
  id *v0;

  return objc_msgSend(*v0, sel_supportsAlarmTriggerDates);
}

id EKSourceConstraintsModelWrapper.requiresOccurrencesConformToRecurrenceRule.getter()
{
  id *v0;

  return objc_msgSend(*v0, sel_requiresOccurrencesConformToRecurrenceRule);
}

id EKSourceConstraintsModelWrapper.supportsURLField.getter()
{
  id *v0;

  return objc_msgSend(*v0, sel_supportsURLField);
}

id EKSourceConstraintsModelWrapper.supportsFloatingTimeZone.getter()
{
  id *v0;

  return objc_msgSend(*v0, sel_supportsFloatingTimeZone);
}

id EKSourceConstraintsModelWrapper.prohibitsMultipleDaysInMonthlyRecurrence.getter()
{
  id *v0;

  return objc_msgSend(*v0, sel_prohibitsMultipleDaysInMonthlyRecurrence);
}

id EKSourceConstraintsModelWrapper.prohibitsMultipleMonthsInYearlyRecurrence.getter()
{
  id *v0;

  return objc_msgSend(*v0, sel_prohibitsMultipleMonthsInYearlyRecurrence);
}

id EKSourceConstraintsModelWrapper.prohibitsYearlyRecurrenceInterval.getter()
{
  id *v0;

  return objc_msgSend(*v0, sel_prohibitsYearlyRecurrenceInterval);
}

uint64_t sub_1B8B6B0C8()
{
  id *v0;
  uint64_t result;

  LODWORD(result) = objc_msgSend(*v0, sel_maxAlarmsAllowed);
  if ((int)result < 0)
    return -1;
  else
    return result;
}

id sub_1B8B6B0F4()
{
  id *v0;

  return objc_msgSend(*v0, sel_requiresOutgoingInvitationsInDefaultCalendar);
}

id sub_1B8B6B114()
{
  id *v0;

  return objc_msgSend(*v0, sel_eventDurationConstrainedToRecurrenceInterval);
}

id sub_1B8B6B134()
{
  id *v0;

  return objc_msgSend(*v0, sel_occurrencesMustOccurOnSeparateDays);
}

id sub_1B8B6B154()
{
  id *v0;

  return objc_msgSend(*v0, sel_supportsPrivateEvents);
}

id sub_1B8B6B174()
{
  id *v0;

  return objc_msgSend(*v0, sel_supportsAlarmTriggerDates);
}

id sub_1B8B6B194()
{
  id *v0;

  return objc_msgSend(*v0, sel_requiresOccurrencesConformToRecurrenceRule);
}

id sub_1B8B6B1B4()
{
  id *v0;

  return objc_msgSend(*v0, sel_supportsURLField);
}

id sub_1B8B6B1D4()
{
  id *v0;

  return objc_msgSend(*v0, sel_supportsFloatingTimeZone);
}

id sub_1B8B6B1F4()
{
  id *v0;

  return objc_msgSend(*v0, sel_prohibitsMultipleDaysInMonthlyRecurrence);
}

id sub_1B8B6B214()
{
  id *v0;

  return objc_msgSend(*v0, sel_prohibitsMultipleMonthsInYearlyRecurrence);
}

id sub_1B8B6B234()
{
  id *v0;

  return objc_msgSend(*v0, sel_prohibitsYearlyRecurrenceInterval);
}

id sub_1B8B6B254()
{
  id *v0;

  return objc_msgSend(*v0, sel_canSetAvailability);
}

id sub_1B8B6B274()
{
  id *v0;

  return objc_msgSend(*v0, sel_eventAvailabilityLimited);
}

ValueMetadata *type metadata accessor for EKSourceConstraintsModelWrapper()
{
  return &type metadata for EKSourceConstraintsModelWrapper;
}

uint64_t sub_1B8B6B2A4@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  v3 = *a1;
  swift_getKeyPath();
  sub_1B8ADBDEC(&qword_1EF1BC278, (uint64_t (*)(uint64_t))type metadata accessor for CreateFamilyCalendarViewModel, (uint64_t)&unk_1B8BA9160);
  sub_1B8B9B2D0();
  swift_release();
  *a2 = *(_QWORD *)(v3 + 16);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1B8B6B334()
{
  swift_getKeyPath();
  sub_1B8ADBDEC(&qword_1EF1BC278, (uint64_t (*)(uint64_t))type metadata accessor for CreateFamilyCalendarViewModel, (uint64_t)&unk_1B8BA9160);
  swift_bridgeObjectRetain();
  sub_1B8B9B2C4();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B8B6B3EC@<X0>(uint64_t *a1@<X0>, uint64_t (**a2)(uint64_t a1)@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *a1;
  swift_getKeyPath();
  sub_1B8ADBDEC(&qword_1EF1BC278, (uint64_t (*)(uint64_t))type metadata accessor for CreateFamilyCalendarViewModel, (uint64_t)&unk_1B8BA9160);
  sub_1B8B9B2D0();
  swift_release();
  v5 = *(_QWORD *)(v3 + 128);
  v4 = *(_QWORD *)(v3 + 136);
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = v5;
  *(_QWORD *)(v6 + 24) = v4;
  *a2 = sub_1B8B6C900;
  a2[1] = (uint64_t (*)(uint64_t))v6;
  return swift_retain();
}

uint64_t sub_1B8B6B4A0(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *a1;
  v2 = a1[1];
  v3 = swift_allocObject();
  *(_QWORD *)(v3 + 16) = v1;
  *(_QWORD *)(v3 + 24) = v2;
  swift_getKeyPath();
  sub_1B8ADBDEC(&qword_1EF1BC278, (uint64_t (*)(uint64_t))type metadata accessor for CreateFamilyCalendarViewModel, (uint64_t)&unk_1B8BA9160);
  swift_retain();
  sub_1B8B9B2C4();
  swift_release();
  return swift_release();
}

uint64_t sub_1B8B6B58C()
{
  return sub_1B8B9B690();
}

uint64_t CreateFamilyCalendarFlow.init(completion:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t FamilyCalendarFlow;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  _BYTE v17[16];
  uint64_t v18;
  uint64_t (*v19)(uint64_t, char);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  FamilyCalendarFlow = type metadata accessor for CreateFamilyCalendarFlow();
  v7 = *(_QWORD *)(FamilyCalendarFlow - 8);
  v8 = *(_QWORD *)(v7 + 64);
  MEMORY[0x1E0C80A78](FamilyCalendarFlow);
  *a3 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1BC250);
  swift_storeEnumTagMultiPayload();
  v9 = (uint64_t *)((char *)a3 + *(int *)(FamilyCalendarFlow + 20));
  type metadata accessor for CreateFamilyCalendarViewModel();
  swift_allocObject();
  v21 = sub_1B8B1E718();
  sub_1B8B9BE7C();
  v10 = v22;
  v11 = v23;
  *v9 = v22;
  v9[1] = v11;
  v12 = (uint64_t *)((char *)a3 + *(int *)(FamilyCalendarFlow + 24));
  *v12 = a1;
  v12[1] = a2;
  v22 = v10;
  v23 = v11;
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1BE130);
  sub_1B8B9BE88();
  v13 = v21;
  sub_1B8B6B8C0((uint64_t)a3, (uint64_t)&v17[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)]);
  v14 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v15 = swift_allocObject();
  sub_1B8B6B9D4((uint64_t)&v17[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)], v15 + v14);
  swift_getKeyPath();
  v18 = v13;
  v19 = sub_1B8B6BA18;
  v20 = v15;
  v22 = v13;
  sub_1B8ADBDEC(&qword_1EF1BC278, (uint64_t (*)(uint64_t))type metadata accessor for CreateFamilyCalendarViewModel, (uint64_t)&unk_1B8BA9160);
  sub_1B8B9B2C4();
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t type metadata accessor for CreateFamilyCalendarFlow()
{
  uint64_t result;

  result = qword_1EF1BE1A0;
  if (!qword_1EF1BE1A0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1B8B6B7E4()
{
  return sub_1B8B9B690();
}

uint64_t sub_1B8B6B804(uint64_t a1, char a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t FamilyCalendarFlow;
  uint64_t v12;

  v5 = a2 & 1;
  v6 = sub_1B8B9B4A4();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  FamilyCalendarFlow = type metadata accessor for CreateFamilyCalendarFlow();
  (*(void (**)(uint64_t, uint64_t))(a3 + *(int *)(FamilyCalendarFlow + 24)))(a1, v5);
  sub_1B8B17628((uint64_t)v9);
  sub_1B8B9B498();
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_1B8B6B8C0(uint64_t a1, uint64_t a2)
{
  uint64_t FamilyCalendarFlow;

  FamilyCalendarFlow = type metadata accessor for CreateFamilyCalendarFlow();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(FamilyCalendarFlow - 8) + 16))(a2, a1, FamilyCalendarFlow);
  return a2;
}

uint64_t sub_1B8B6B904()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(type metadata accessor for CreateFamilyCalendarFlow() - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1BC250);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v3 = sub_1B8B9B4A4();
    (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v0 + v2, v3);
  }
  else
  {
    swift_release();
  }
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1B8B6B9D4(uint64_t a1, uint64_t a2)
{
  uint64_t FamilyCalendarFlow;

  FamilyCalendarFlow = type metadata accessor for CreateFamilyCalendarFlow();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(FamilyCalendarFlow - 8) + 32))(a2, a1, FamilyCalendarFlow);
  return a2;
}

uint64_t sub_1B8B6BA18(uint64_t a1, char a2)
{
  uint64_t v2;
  char v4;
  uint64_t v5;

  v4 = a2 & 1;
  v5 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for CreateFamilyCalendarFlow() - 8) + 80);
  return sub_1B8B6B804(a1, v4, v2 + ((v5 + 16) & ~v5));
}

uint64_t sub_1B8B6BA6C()
{
  uint64_t *v0;

  return sub_1B8B1E6E0(v0[2], v0[3], v0[4]);
}

uint64_t CreateFamilyCalendarFlow.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  ValueMetadata **v7;
  ValueMetadata *v8;
  ValueMetadata *v9;
  ValueMetadata *v10;
  uint64_t v11;
  uint64_t FamilyCalendarShareeView;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t KeyPath;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  _QWORD v24[3];
  ValueMetadata *v25;
  ValueMetadata *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  ValueMetadata *v31;
  ValueMetadata *v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  ValueMetadata *v37;
  __int128 v38;
  ValueMetadata *v39;
  __int128 v40;

  v30 = a1;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1BE138);
  v28 = *(_QWORD *)(v2 - 8);
  v29 = v2;
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1BE140);
  MEMORY[0x1E0C80A78](v27);
  v6 = (char *)v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = (ValueMetadata **)(v1 + *(int *)(type metadata accessor for CreateFamilyCalendarFlow() + 20));
  v8 = *v7;
  v25 = v7[1];
  v26 = v8;
  v39 = v8;
  *(_QWORD *)&v40 = v25;
  v24[2] = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1BE130);
  sub_1B8B9BEA0();
  v9 = v31;
  v10 = v32;
  v11 = v33;
  swift_getKeyPath();
  v31 = v9;
  v32 = v10;
  v33 = v11;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1BE148);
  sub_1B8B9BF54();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  v37 = v39;
  v38 = v40;
  v24[1] = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1BE150);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1BE158);
  sub_1B8ADE950(&qword_1EF1BE160, &qword_1EF1BE150, MEMORY[0x1E0DEAF28]);
  sub_1B8ADE950(&qword_1EF1BE168, &qword_1EF1BE150, MEMORY[0x1E0DEAF48]);
  sub_1B8ADE950(&qword_1EF1BE170, &qword_1EF1BE150, MEMORY[0x1E0DEAF58]);
  FamilyCalendarShareeView = type metadata accessor for CreateFamilyCalendarShareeView();
  v13 = sub_1B8B6BF58();
  v14 = sub_1B8B6BF9C();
  v15 = sub_1B8ADBDEC(&qword_1EF1BE188, (uint64_t (*)(uint64_t))type metadata accessor for CreateFamilyCalendarShareeView, (uint64_t)&unk_1B8BA76F8);
  v31 = &type metadata for CreateFamilyCalendarView;
  v32 = &type metadata for FamilyCalendarScreens;
  v33 = FamilyCalendarShareeView;
  v34 = v13;
  v35 = v14;
  v36 = v15;
  swift_getOpaqueTypeConformance2();
  sub_1B8B9B54C();
  v16 = CUIKAppTintColor();
  v17 = MEMORY[0x1BCCB5F78](v16);
  KeyPath = swift_getKeyPath();
  v31 = (ValueMetadata *)v17;
  swift_retain();
  v19 = sub_1B8B9B480();
  v21 = v28;
  v20 = v29;
  (*(void (**)(char *, char *, uint64_t))(v28 + 16))(v6, v4, v29);
  swift_release();
  v22 = (uint64_t *)&v6[*(int *)(v27 + 36)];
  *v22 = KeyPath;
  v22[1] = v19;
  (*(void (**)(char *, uint64_t))(v21 + 8))(v4, v20);
  v31 = v26;
  v32 = v25;
  sub_1B8B9BE88();
  type metadata accessor for CreateFamilyCalendarViewModel();
  sub_1B8B6C088();
  sub_1B8ADBDEC(&qword_1EF1BC278, (uint64_t (*)(uint64_t))type metadata accessor for CreateFamilyCalendarViewModel, (uint64_t)&unk_1B8BA9160);
  sub_1B8B9BC00();
  swift_release();
  return sub_1B8ADE894((uint64_t)v6, &qword_1EF1BE140);
}

uint64_t sub_1B8B6BE20()
{
  type metadata accessor for CreateFamilyCalendarViewModel();
  sub_1B8ADBDEC(&qword_1EF1BC278, (uint64_t (*)(uint64_t))type metadata accessor for CreateFamilyCalendarViewModel, (uint64_t)&unk_1B8BA9160);
  sub_1B8B9B420();
  sub_1B8B9BE7C();
  type metadata accessor for CreateFamilyCalendarShareeView();
  sub_1B8B6BF58();
  sub_1B8B6BF9C();
  sub_1B8ADBDEC(&qword_1EF1BE188, (uint64_t (*)(uint64_t))type metadata accessor for CreateFamilyCalendarShareeView, (uint64_t)&unk_1B8BA76F8);
  sub_1B8B9BCA8();
  swift_release();
  return swift_release();
}

unint64_t sub_1B8B6BF58()
{
  unint64_t result;

  result = qword_1EF1BE178;
  if (!qword_1EF1BE178)
  {
    result = MEMORY[0x1BCCB79D0](&unk_1B8BA88EC, &type metadata for CreateFamilyCalendarView);
    atomic_store(result, (unint64_t *)&qword_1EF1BE178);
  }
  return result;
}

unint64_t sub_1B8B6BF9C()
{
  unint64_t result;

  result = qword_1EF1BE180;
  if (!qword_1EF1BE180)
  {
    result = MEMORY[0x1BCCB79D0](&unk_1B8BA9120, &type metadata for FamilyCalendarScreens);
    atomic_store(result, (unint64_t *)&qword_1EF1BE180);
  }
  return result;
}

uint64_t sub_1B8B6BFE8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_1B8B9B678();
  *a1 = result;
  return result;
}

uint64_t sub_1B8B6C010@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_1B8B9B678();
  *a1 = result;
  return result;
}

uint64_t sub_1B8B6C038()
{
  swift_retain();
  return sub_1B8B9B684();
}

uint64_t sub_1B8B6C060()
{
  swift_retain();
  return sub_1B8B9B684();
}

unint64_t sub_1B8B6C088()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1EF1BE190;
  if (!qword_1EF1BE190)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EF1BE140);
    v2[0] = sub_1B8ADE950(&qword_1EF1BE198, &qword_1EF1BE138, MEMORY[0x1E0CD9C68]);
    v2[1] = sub_1B8ADE950(&qword_1EF1BD8F0, &qword_1EF1BD8F8, MEMORY[0x1E0CDCF88]);
    result = MEMORY[0x1BCCB79D0](MEMORY[0x1E0CD9C18], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EF1BE190);
  }
  return result;
}

uint64_t sub_1B8B6C124()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t *initializeBufferWithCopyOfBuffer for CreateFamilyCalendarFlow(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    v4 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1BC250);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v7 = sub_1B8B9B4A4();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v4, a2, v7);
    }
    else
    {
      *v4 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v9 = *(int *)(a3 + 20);
    v10 = *(int *)(a3 + 24);
    v11 = (uint64_t *)((char *)v4 + v9);
    v12 = (uint64_t *)((char *)a2 + v9);
    v13 = v12[1];
    *v11 = *v12;
    v11[1] = v13;
    v14 = (uint64_t *)((char *)v4 + v10);
    v15 = (uint64_t *)((char *)a2 + v10);
    v16 = v15[1];
    *v14 = *v15;
    v14[1] = v16;
    swift_retain();
    swift_retain();
  }
  swift_retain();
  return v4;
}

uint64_t destroy for CreateFamilyCalendarFlow(uint64_t a1)
{
  uint64_t v2;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1BC250);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v2 = sub_1B8B9B4A4();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  }
  else
  {
    swift_release();
  }
  swift_release();
  swift_release();
  return swift_release();
}

_QWORD *initializeWithCopy for CreateFamilyCalendarFlow(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1BC250);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v6 = sub_1B8B9B4A4();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  v7 = *(int *)(a3 + 20);
  v8 = *(int *)(a3 + 24);
  v9 = (_QWORD *)((char *)a1 + v7);
  v10 = (_QWORD *)((char *)a2 + v7);
  v11 = v10[1];
  *v9 = *v10;
  v9[1] = v11;
  v12 = (_QWORD *)((char *)a1 + v8);
  v13 = (_QWORD *)((char *)a2 + v8);
  v14 = v13[1];
  *v12 = *v13;
  v12[1] = v14;
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

_QWORD *assignWithCopy for CreateFamilyCalendarFlow(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;

  if (a1 != a2)
  {
    sub_1B8ADE894((uint64_t)a1, &qword_1EF1BC250);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1BC250);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v6 = sub_1B8B9B4A4();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  v7 = *(int *)(a3 + 20);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  *(_QWORD *)((char *)a1 + v7) = *(_QWORD *)((char *)a2 + v7);
  swift_retain();
  swift_release();
  *((_QWORD *)v8 + 1) = *((_QWORD *)v9 + 1);
  swift_retain();
  swift_release();
  v10 = *(int *)(a3 + 24);
  v11 = (_QWORD *)((char *)a1 + v10);
  v12 = (_QWORD *)((char *)a2 + v10);
  v13 = v12[1];
  *v11 = *v12;
  v11[1] = v13;
  swift_retain();
  swift_release();
  return a1;
}

char *initializeWithTake for CreateFamilyCalendarFlow(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1BC250);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v7 = sub_1B8B9B4A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  }
  v8 = *(int *)(a3 + 24);
  *(_OWORD *)&a1[*(int *)(a3 + 20)] = *(_OWORD *)&a2[*(int *)(a3 + 20)];
  *(_OWORD *)&a1[v8] = *(_OWORD *)&a2[v8];
  return a1;
}

char *assignWithTake for CreateFamilyCalendarFlow(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;

  if (a1 != a2)
  {
    sub_1B8ADE894((uint64_t)a1, &qword_1EF1BC250);
    v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1BC250);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v7 = sub_1B8B9B4A4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
    }
  }
  v8 = *(int *)(a3 + 20);
  v9 = &a1[v8];
  v10 = &a2[v8];
  *(_QWORD *)&a1[v8] = *(_QWORD *)&a2[v8];
  swift_release();
  *((_QWORD *)v9 + 1) = *((_QWORD *)v10 + 1);
  swift_release();
  *(_OWORD *)&a1[*(int *)(a3 + 24)] = *(_OWORD *)&a2[*(int *)(a3 + 24)];
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for CreateFamilyCalendarFlow()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1B8B6C67C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1BC258);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for CreateFamilyCalendarFlow()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1B8B6C708(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1BC258);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  return result;
}

void sub_1B8B6C784()
{
  unint64_t v0;

  sub_1B8AEDBD8();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t sub_1B8B6C804()
{
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EF1BE140);
  type metadata accessor for CreateFamilyCalendarViewModel();
  sub_1B8B6C088();
  sub_1B8ADBDEC(&qword_1EF1BC278, (uint64_t (*)(uint64_t))type metadata accessor for CreateFamilyCalendarViewModel, (uint64_t)&unk_1B8BA9160);
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1B8B6C88C()
{
  uint64_t v0;

  return sub_1B8B1E558(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_1B8B6C8A4()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1B8B6C8C8(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t *);
  uint64_t v5;
  char v6;

  v3 = *(uint64_t (**)(uint64_t *))(v2 + 16);
  v5 = a1;
  v6 = a2 & 1;
  return v3(&v5);
}

uint64_t sub_1B8B6C900(uint64_t a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD, _QWORD))(v1 + 16))(*(_QWORD *)a1, *(unsigned __int8 *)(a1 + 8));
}

uint64_t sub_1B8B6C930()
{
  return sub_1B8B6BA6C();
}

uint64_t sub_1B8B6C944()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1B8B6C9C4(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t, uint64_t, uint64_t);

  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  v7 = ((v6 + 41) & ~v6) + *(_QWORD *)(v5 + 64);
  v8 = *(_DWORD *)(v5 + 80) & 0x100000;
  v9 = *a2;
  *(_QWORD *)a1 = *a2;
  if (v6 > 7 || v8 != 0 || v7 > 0x18)
  {
    a1 = v9 + ((v6 & 0xF8 ^ 0x1F8) & (v6 + 16));
    swift_retain();
  }
  else
  {
    v12 = a2[2];
    *(_QWORD *)(a1 + 8) = a2[1];
    *(_QWORD *)(a1 + 16) = v12;
    v13 = a2[4];
    *(_QWORD *)(a1 + 24) = a2[3];
    *(_QWORD *)(a1 + 32) = v13;
    *(_BYTE *)(a1 + 40) = *((_BYTE *)a2 + 40);
    v14 = (a1 + v6 + 41) & ~v6;
    v15 = ((unint64_t)a2 + v6 + 41) & ~v6;
    v16 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v16(v14, v15, v4);
  }
  return a1;
}

uint64_t sub_1B8B6CAB0(uint64_t a1, uint64_t a2)
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 8))((a1 + *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 80) + 41) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 80));
}

uint64_t sub_1B8B6CB04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  v6 = *(_QWORD *)(a3 + 16);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = (v8 + 41 + a1) & ~v8;
  v10 = (v8 + 41 + a2) & ~v8;
  v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v11(v9, v10, v6);
  return a1;
}

uint64_t sub_1B8B6CBA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v6 + 24))((*(unsigned __int8 *)(v6 + 80) + 41 + a1) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80), (*(unsigned __int8 *)(v6 + 80) + 41 + a2) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
  return a1;
}

uint64_t sub_1B8B6CC5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v4;
  uint64_t v5;

  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v5 + 32))((*(unsigned __int8 *)(v5 + 80) + 41 + a1) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80), (*(unsigned __int8 *)(v5 + 80) + 41 + a2) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
  return a1;
}

uint64_t sub_1B8B6CCBC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_release();
  v6 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v7;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  v8 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v8 + 40))((*(unsigned __int8 *)(v8 + 80) + 41 + a1) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80), (*(unsigned __int8 *)(v8 + 80) + 41 + a2) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
  return a1;
}

uint64_t sub_1B8B6CD4C(_QWORD *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  char v10;
  int v11;
  unsigned int v13;
  int v14;
  uint64_t v15;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  if (v5 <= 0x7FFFFFFF)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v4 + 84);
  if (!a2)
    return 0;
  v7 = *(unsigned __int8 *)(v4 + 80);
  v8 = a2 - v6;
  if (a2 <= v6)
    goto LABEL_22;
  v9 = ((v7 + 41) & ~v7) + *(_QWORD *)(v4 + 64);
  v10 = 8 * v9;
  if (v9 <= 3)
  {
    v13 = ((v8 + ~(-1 << v10)) >> v10) + 1;
    if (HIWORD(v13))
    {
      v11 = *(_DWORD *)((char *)a1 + v9);
      if (!v11)
        goto LABEL_22;
      goto LABEL_15;
    }
    if (v13 > 0xFF)
    {
      v11 = *(unsigned __int16 *)((char *)a1 + v9);
      if (!*(_WORD *)((char *)a1 + v9))
        goto LABEL_22;
      goto LABEL_15;
    }
    if (v13 < 2)
    {
LABEL_22:
      if ((v5 & 0x80000000) != 0)
        return (*(uint64_t (**)(unint64_t))(v4 + 48))(((unint64_t)a1 + v7 + 41) & ~v7);
      v15 = *a1;
      if (*a1 >= 0xFFFFFFFFuLL)
        LODWORD(v15) = -1;
      return (v15 + 1);
    }
  }
  v11 = *((unsigned __int8 *)a1 + v9);
  if (!*((_BYTE *)a1 + v9))
    goto LABEL_22;
LABEL_15:
  v14 = (v11 - 1) << v10;
  if (v9 > 3)
    v14 = 0;
  if (!(_DWORD)v9)
    return v6 + v14 + 1;
  if (v9 > 3)
    LODWORD(v9) = 4;
  return ((uint64_t (*)(void))((char *)&loc_1B8B6CE20 + 4 * byte_1B8BADC08[(v9 - 1)]))();
}

void sub_1B8B6CE90(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  unsigned int v6;
  size_t v7;
  unsigned int v8;
  int v9;
  unsigned int v10;
  int v11;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v5 + 84) <= 0x7FFFFFFFu)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v5 + 84);
  v7 = ((*(unsigned __int8 *)(v5 + 80) + 41) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))
     + *(_QWORD *)(v5 + 64);
  if (a3 > v6)
  {
    if (v7 <= 3)
    {
      v10 = ((a3 - v6 + ~(-1 << (8 * v7))) >> (8 * v7)) + 1;
      if (HIWORD(v10))
      {
        v8 = 4u;
      }
      else if (v10 >= 0x100)
      {
        v8 = 2;
      }
      else
      {
        v8 = v10 > 1;
      }
    }
    else
    {
      v8 = 1u;
    }
  }
  else
  {
    v8 = 0u;
  }
  if (v6 < a2)
  {
    v9 = ~v6 + a2;
    if (v7 < 4)
    {
      if ((_DWORD)v7)
      {
        v11 = v9 & ~(-1 << (8 * v7));
        bzero(a1, v7);
        if ((_DWORD)v7 == 3)
        {
          *a1 = v11;
          *((_BYTE *)a1 + 2) = BYTE2(v11);
        }
        else if ((_DWORD)v7 == 2)
        {
          *a1 = v11;
        }
        else
        {
          *(_BYTE *)a1 = v11;
        }
      }
    }
    else
    {
      bzero(a1, v7);
      *(_DWORD *)a1 = v9;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X13 }
}

uint64_t type metadata accessor for ColorField(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ColorField);
}

uint64_t sub_1B8B6D09C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1B8B6D0D0(uint64_t *a1, unint64_t a2, uint64_t a3)
{
  uint64_t *v4;
  uint64_t *v5;
  uint64_t TupleTypeMetadata;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  unint64_t v11;
  __int128 *v12;
  _OWORD *v13;
  unint64_t v14;
  __int128 v15;
  unint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;

  v4 = a1;
  v5 = (uint64_t *)(a3 & 0xFFFFFFFFFFFFFFFELL);
  if (a2 == 1)
  {
    TupleTypeMetadata = *v5;
    MEMORY[0x1E0C80A78](a1);
    v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
LABEL_12:
    v22 = 32;
    v23 = a2;
    do
    {
      if (a2 == 1)
        v24 = 0;
      else
        v24 = *(_DWORD *)(TupleTypeMetadata + v22);
      v26 = *v5++;
      v25 = v26;
      v27 = *v4++;
      (*(void (**)(char *, uint64_t))(*(_QWORD *)(v25 - 8) + 16))(&v8[v24], v27);
      v22 += 16;
      --v23;
    }
    while (v23);
    return sub_1B8B9C074();
  }
  MEMORY[0x1E0C80A78](a1);
  v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    v11 = 0;
    if (a2 < 4)
      goto LABEL_9;
    if ((unint64_t)(v10 - (char *)v5) < 0x20)
      goto LABEL_9;
    v11 = a2 & 0xFFFFFFFFFFFFFFFCLL;
    v12 = (__int128 *)(v5 + 2);
    v13 = v10 + 16;
    v14 = a2 & 0xFFFFFFFFFFFFFFFCLL;
    do
    {
      v15 = *v12;
      *(v13 - 1) = *(v12 - 1);
      *v13 = v15;
      v12 += 2;
      v13 += 2;
      v14 -= 4;
    }
    while (v14);
    if (v11 != a2)
    {
LABEL_9:
      v16 = a2 - v11;
      v17 = v11;
      v18 = &v10[8 * v11];
      v19 = &v5[v17];
      do
      {
        v20 = *v19++;
        *(_QWORD *)v18 = v20;
        v18 += 8;
        --v16;
      }
      while (v16);
    }
  }
  TupleTypeMetadata = swift_getTupleTypeMetadata();
  MEMORY[0x1E0C80A78](TupleTypeMetadata);
  v8 = (char *)&v29 - v21;
  if (a2)
    goto LABEL_12;
  return sub_1B8B9C074();
}

uint64_t sub_1B8B6D284@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  void (*v16)(_BYTE *, uint64_t);
  _BYTE v18[16];
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v22 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EF1B90D0);
  v23 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EF1BCC00);
  v5 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EF1BE230);
  v6 = *(_QWORD *)(a1 + 16);
  v24 = v5;
  v25 = v6;
  swift_getTupleTypeMetadata();
  v7 = sub_1B8B9C068();
  MEMORY[0x1BCCB79D0](MEMORY[0x1E0CE0678], v7);
  v8 = sub_1B8B9BEE8();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x1E0C80A78](v8);
  v12 = &v18[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v10);
  v14 = &v18[-v13];
  v15 = *(_QWORD *)(a1 + 24);
  v19 = v6;
  v20 = v15;
  v21 = v2;
  sub_1B8B9B738();
  sub_1B8B9BEDC();
  MEMORY[0x1BCCB79D0](MEMORY[0x1E0CDFB08], v8);
  sub_1B8B06AE4((uint64_t)v12, v8, (uint64_t)v14);
  v16 = *(void (**)(_BYTE *, uint64_t))(v9 + 8);
  v16(v12, v8);
  sub_1B8AF2470((uint64_t)v14, v8, a2);
  return ((uint64_t (*)(_BYTE *, uint64_t))v16)(v14, v8);
}

uint64_t sub_1B8B6D424@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(uint64_t, uint64_t);
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  int v41;
  uint64_t v42;
  int v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  unint64_t v51;
  unint64_t v52;
  unint64_t v53;
  uint64_t v54;
  _QWORD v55[4];
  uint64_t v56;
  char v57;
  char v58;
  uint64_t v59;
  uint64_t v60;
  char v61;
  uint64_t v62;
  char v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char v68;
  uint64_t v69;
  __int16 v70;
  uint64_t v71;
  char v72;
  uint64_t v73;
  char v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77[6];
  unsigned __int8 v78;
  uint64_t v79;
  unsigned __int8 v80;
  uint64_t v81;
  uint64_t v82;

  v48 = a4;
  v49 = a3;
  v47 = *(_QWORD *)(a2 - 8);
  v6 = MEMORY[0x1E0C80A78](a1);
  v50 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(_QWORD *)MEMORY[0x1E0C80A78](v6);
  v45 = (uint64_t)&v37 - v9;
  v46 = v8;
  swift_retain();
  sub_1B8B9C014();
  sub_1B8B9B474();
  v44 = v77[5];
  v43 = v78;
  v42 = v79;
  v41 = v80;
  v39 = v82;
  v40 = v81;
  v10 = *(_QWORD *)(a1 + 16);
  v59 = *(_QWORD *)(a1 + 8);
  v60 = v10;
  sub_1B8ADDBE4();
  swift_bridgeObjectRetain();
  v11 = sub_1B8B9BBAC();
  v13 = v12;
  v15 = v14 & 1;
  v59 = sub_1B8B9BDC8();
  v16 = sub_1B8B9BB70();
  v37 = v17;
  v38 = v18;
  v20 = v19 & 1;
  sub_1B8ADDA88(v11, v13, v15);
  swift_release();
  swift_bridgeObjectRelease();
  LOBYTE(v11) = sub_1B8B9B9FC();
  sub_1B8B9B3E4();
  v22 = v21;
  v24 = v23;
  v26 = v25;
  v28 = v27;
  LOBYTE(v13) = *(_BYTE *)(a1 + 40);
  v30 = type metadata accessor for ColorField(0, a2, v49, v29);
  v31 = v45;
  sub_1B8B06AE4(a1 + *(int *)(v30 + 40), a2, v45);
  v69 = v46;
  v70 = 256;
  v71 = v44;
  v72 = v43;
  v73 = v42;
  v74 = v41;
  v75 = v40;
  v76 = v39;
  v32 = v37;
  v59 = v16;
  v60 = v37;
  v61 = v20;
  v62 = v38;
  v63 = v11;
  v64 = v22;
  v65 = v24;
  v66 = v26;
  v67 = v28;
  v68 = 0;
  v77[0] = (uint64_t)&v69;
  v77[1] = (uint64_t)&v59;
  v56 = 0;
  v57 = v13;
  v58 = v13 ^ 1;
  v77[2] = (uint64_t)&v56;
  v33 = v47;
  v34 = (uint64_t)v50;
  (*(void (**)(char *, uint64_t, uint64_t))(v47 + 16))(v50, v31, a2);
  v77[3] = v34;
  swift_retain();
  sub_1B8ADD7C0(v16, v32, v20);
  swift_bridgeObjectRetain();
  v55[0] = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1B90D0);
  v55[1] = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1BCC00);
  v55[2] = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1BE230);
  v55[3] = a2;
  v51 = sub_1B8B05AC8();
  v52 = sub_1B8B182E0();
  v53 = sub_1B8B6D7C0();
  v54 = v49;
  sub_1B8B6D0D0(v77, 4uLL, (uint64_t)v55);
  v35 = *(void (**)(uint64_t, uint64_t))(v33 + 8);
  v35(v31, a2);
  sub_1B8ADDA88(v16, v32, v20);
  swift_release();
  swift_bridgeObjectRelease();
  v35((uint64_t)v50, a2);
  sub_1B8ADDA88(v59, v60, v61);
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t sub_1B8B6D7B4@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;

  return sub_1B8B6D424(v1[4], v1[2], v1[3], a1);
}

unint64_t sub_1B8B6D7C0()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_1EF1BE238;
  if (!qword_1EF1BE238)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EF1BE230);
    v2 = MEMORY[0x1E0CDFBF0];
    result = MEMORY[0x1BCCB79D0](MEMORY[0x1E0CE07A0], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_1EF1BE238);
  }
  return result;
}

uint64_t sub_1B8B6D81C()
{
  uint64_t v0;
  uint64_t v1;

  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EF1B90D0);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EF1BCC00);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EF1BE230);
  swift_getTupleTypeMetadata();
  v0 = sub_1B8B9C068();
  MEMORY[0x1BCCB79D0](MEMORY[0x1E0CE0678], v0);
  v1 = sub_1B8B9BEE8();
  return MEMORY[0x1BCCB79D0](MEMORY[0x1E0CDFB08], v1);
}

uint64_t sub_1B8B6D8CC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v2 = sub_1B8B9B180();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1B3018);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1B8F00);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1B8B38D00((uint64_t)&unk_1E6EB2C98);
  swift_arrayDestroy();
  sub_1B8B6DAE8(a1, (uint64_t)v8);
  v13 = sub_1B8B9B198();
  v14 = *(_QWORD *)(v13 - 8);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48))(v8, 1, v13);
  if ((_DWORD)result == 1)
  {
    __break(1u);
  }
  else
  {
    sub_1B8B9B18C();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v8, v13);
    sub_1B8B9B174();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    v16 = sub_1B8B9B150();
    v17 = *(_QWORD *)(v16 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v11, 1, v16) == 1)
    {
      swift_bridgeObjectRelease();
      sub_1B8B6DB30((uint64_t)v11);
    }
    else
    {
      v18 = sub_1B8B9B144();
      v20 = v19;
      (*(void (**)(char *, uint64_t))(v17 + 8))(v11, v16);
      LOBYTE(v18) = sub_1B8AF2700(v18, v20, v12);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v18 & 1) != 0)
        return sub_1B8B9BDC8();
    }
    return sub_1B8B9BD68();
  }
  return result;
}

ValueMetadata *type metadata accessor for CUIKSwiftUIUtils()
{
  return &type metadata for CUIKSwiftUIUtils;
}

uint64_t sub_1B8B6DAE8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1B3018);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1B8B6DB30(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1B8F00);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

_QWORD *initializeBufferWithCopyOfBuffer for BigHeadsView(_QWORD *a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  id v5;

  v3 = *(void **)a2;
  v4 = *(_QWORD *)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  a1[1] = v4;
  v5 = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for BigHeadsView(id *a1)
{

  return swift_bridgeObjectRelease();
}

uint64_t assignWithCopy for BigHeadsView(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;

  v4 = *(void **)a1;
  v5 = *(void **)a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v5;

  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

id *assignWithTake for BigHeadsView(id *a1, _OWORD *a2)
{

  *(_OWORD *)a1 = *a2;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for BigHeadsView()
{
  return &type metadata for BigHeadsView;
}

uint64_t sub_1B8B6DC70()
{
  return swift_getOpaqueTypeConformance2();
}

void sub_1B8B6DC80()
{
  qword_1EF1BE240 = 0x4054000000000000;
}

uint64_t sub_1B8B6DC90(void *a1, uint64_t a2)
{
  uint64_t v2;
  id v3;
  id v4;

  v2 = a2;
  if (a1)
  {
    v3 = a1;
    swift_bridgeObjectRetain();
    v4 = v3;
    MEMORY[0x1BCCB6464]();
    if (*(_QWORD *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_1B8B9C314();
    sub_1B8B9C338();
    sub_1B8B9C2FC();

    return a2;
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  return v2;
}

uint64_t sub_1B8B6DD44@<X0>(void *a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  _OWORD v12[9];
  _OWORD v13[2];
  _OWORD v14[11];
  char v15;
  __int128 v16;
  char v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  _OWORD v27[2];
  uint64_t v28;

  if (a1)
  {
    v6 = a1;
    v7 = sub_1B8B9B738();
    sub_1B8B6DF70(a1, a2, v6, v12);
    *(_OWORD *)((char *)&v14[7] + 7) = v12[7];
    *(_OWORD *)((char *)&v14[8] + 7) = v12[8];
    *(_OWORD *)((char *)&v14[9] + 7) = v13[0];
    v14[10] = *(_OWORD *)((char *)v13 + 9);
    *(_OWORD *)((char *)&v14[3] + 7) = v12[3];
    *(_OWORD *)((char *)&v14[4] + 7) = v12[4];
    *(_OWORD *)((char *)&v14[5] + 7) = v12[5];
    *(_OWORD *)((char *)&v14[6] + 7) = v12[6];
    *(_OWORD *)((char *)v14 + 7) = v12[0];
    *(_OWORD *)((char *)&v14[1] + 7) = v12[1];
    v15 = 1;
    *(_OWORD *)((char *)&v14[2] + 7) = v12[2];
    *(_QWORD *)&v16 = sub_1B8B9BD98();
    v8 = sub_1B8B9BF30();
    v25 = v14[7];
    v26 = v14[8];
    v27[0] = v14[9];
    v27[1] = v14[10];
    v21 = v14[3];
    v22 = v14[4];
    v23 = v14[5];
    v24 = v14[6];
    v18 = v14[0];
    v16 = (unint64_t)v7;
    v17 = 1;
    v19 = v14[1];
    v20 = v14[2];
    v28 = v8;
    sub_1B8B9B444();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1BE258);
    sub_1B8B6E6B4();
    sub_1B8B9BC6C();

    sub_1B8B6E750((uint64_t)&v16);
    v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1BE250);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(a3, 0, 1, v9);
  }
  else
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1BE250);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(a3, 1, 1, v11);
  }
}

uint64_t sub_1B8B6DF70@<X0>(void *a1@<X0>, unint64_t a2@<X1>, void *a3@<X2>, _OWORD *a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  _QWORD *v16;
  id v17;
  void *v18;
  id v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  _QWORD *v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  _BYTE v32[144];
  _BYTE v33[144];
  __int128 v34;
  __int128 v35;
  _BYTE v36[32];
  __int128 v37;
  __int128 v38;
  __int128 v39;
  _BYTE v40[32];
  _BYTE v41[25];
  _QWORD *v42;
  uint64_t v43;
  char v44;
  __int128 v45;
  __int128 v46;
  char v47;
  __int128 v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  uint64_t v52;
  char v53;
  __int128 v54;
  _OWORD v55[6];
  __int128 v56;
  _OWORD v57[2];
  uint64_t v58;
  char v59;
  uint64_t v60;
  char v61;
  __int128 v62;

  if (a2 >> 62)
  {
    swift_bridgeObjectRetain();
    v8 = sub_1B8B9C728();
    swift_bridgeObjectRelease();
  }
  else
  {
    v8 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  if (v8 == 1)
  {
    v9 = sub_1B8B9B738();
    sub_1B8B6E48C(a3, a2, (uint64_t)&v34);
    v33[0] = 1;
    v32[0] = v35;
    LOBYTE(v58) = v36[0];
    v42 = (_QWORD *)v9;
    v43 = 0;
    v44 = 1;
    v45 = v34;
    LOBYTE(v46) = v35;
    *((_QWORD *)&v46 + 1) = *((_QWORD *)&v35 + 1);
    v47 = v36[0];
    v48 = *(_OWORD *)&v36[8];
    v49 = *(_QWORD *)&v36[24];
    v50 = v37;
    v51 = BYTE8(v37);
    v52 = v38;
    v53 = BYTE8(v38);
    v54 = v39;
    sub_1B8B6ED68((uint64_t)&v42);
    sub_1B8B06074((uint64_t)&v42, (uint64_t)&v34, &qword_1EF1BE280);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1BE288);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1BE290);
    sub_1B8ADE950(&qword_1EF1BE298, &qword_1EF1BE288, MEMORY[0x1E0CDFB08]);
    sub_1B8B6E948();
    sub_1B8B9B870();
    v39 = v56;
    *(_OWORD *)v40 = v57[0];
    v10 = *(_OWORD *)((char *)v57 + 9);
LABEL_28:
    *(_OWORD *)&v40[9] = v10;
    *(_OWORD *)v36 = v55[2];
    *(_OWORD *)&v36[16] = v55[3];
    v37 = v55[4];
    v38 = v55[5];
    v34 = v55[0];
    v35 = v55[1];
    nullsub_1(&v34);
    goto LABEL_29;
  }
  if (v8 < 2)
  {
    sub_1B8B6E83C((uint64_t)&v34);
LABEL_29:
    sub_1B8B06074((uint64_t)&v34, (uint64_t)v55, &qword_1EF1BE278);
    sub_1B8B06074((uint64_t)v55, (uint64_t)v32, &qword_1EF1BE278);
    sub_1B8B06074((uint64_t)v32, (uint64_t)v33, &qword_1EF1BE278);
    *(_QWORD *)&v34 = 0;
    BYTE8(v34) = 1;
    sub_1B8B06074((uint64_t)v33, (uint64_t)&v35, &qword_1EF1BE278);
    *(_QWORD *)&v41[16] = 0;
    v41[24] = 1;
    v27 = *(_OWORD *)v41;
    a4[8] = *(_OWORD *)&v40[16];
    a4[9] = v27;
    v28 = v38;
    a4[4] = v37;
    a4[5] = v28;
    v29 = *(_OWORD *)v40;
    a4[6] = v39;
    a4[7] = v29;
    v30 = v35;
    *a4 = v34;
    a4[1] = v30;
    v31 = *(_OWORD *)&v36[16];
    a4[2] = *(_OWORD *)v36;
    a4[3] = v31;
    *(_OWORD *)((char *)a4 + 153) = *(_OWORD *)&v41[9];
    sub_1B8B06074((uint64_t)v32, (uint64_t)&v42, &qword_1EF1BE278);
    sub_1B8B6E8D8((uint64_t)v33, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1B8B6E860);
    return sub_1B8B6E8D8((uint64_t)&v42, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1B8B6E7C4);
  }
  v11 = sub_1B8B6DC90(a1, a2);
  v12 = v11;
  if (!(v11 >> 62))
  {
    v13 = *(_QWORD *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
    if (v13)
      goto LABEL_8;
LABEL_24:
    v16 = (_QWORD *)MEMORY[0x1E0DEE9D8];
LABEL_25:
    swift_bridgeObjectRelease_n();
    if (qword_1EF1BB518 != -1)
      swift_once();
    sub_1B8B9C014();
    sub_1B8B9B474();
    v42 = v16;
    v43 = v58;
    v44 = v59;
    *(_QWORD *)&v45 = v60;
    BYTE8(v45) = v61;
    v46 = v62;
    sub_1B8B6E93C((uint64_t)&v42);
    sub_1B8B06074((uint64_t)&v42, (uint64_t)&v34, &qword_1EF1BE280);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1BE288);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1BE290);
    sub_1B8ADE950(&qword_1EF1BE298, &qword_1EF1BE288, MEMORY[0x1E0CDFB08]);
    sub_1B8B6E948();
    sub_1B8B9B870();
    v39 = v56;
    *(_OWORD *)v40 = v57[0];
    v10 = *(_OWORD *)((char *)v57 + 9);
    goto LABEL_28;
  }
  swift_bridgeObjectRetain();
  result = sub_1B8B9C728();
  v13 = result;
  if (!result)
    goto LABEL_24;
LABEL_8:
  if (v13 >= 1)
  {
    v15 = 0;
    v16 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    do
    {
      if ((v12 & 0xC000000000000001) != 0)
        v17 = (id)MEMORY[0x1BCCB6800](v15, v12);
      else
        v17 = *(id *)(v12 + 8 * v15 + 32);
      v18 = v17;
      v19 = objc_msgSend(v17, sel_emailAddress);
      if (v19)
      {
        v20 = v19;
        v21 = sub_1B8B9C17C();
        v23 = v22;

        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v16 = sub_1B8B860E4(0, v16[2] + 1, 1, v16);
        v25 = v16[2];
        v24 = v16[3];
        if (v25 >= v24 >> 1)
          v16 = sub_1B8B860E4((_QWORD *)(v24 > 1), v25 + 1, 1, v16);
        v16[2] = v25 + 1;
        v26 = &v16[2 * v25];
        v26[4] = v21;
        v26[5] = v23;
      }
      else
      {

      }
      ++v15;
    }
    while (v13 != v15);
    goto LABEL_25;
  }
  __break(1u);
  return result;
}

void sub_1B8B6E48C(void *a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v6;
  id v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  void *v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  char v30;
  __int128 v31;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1B94B8);
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1B8BA6070;
  v7 = objc_msgSend(a1, sel_emailAddress);
  if (!v7)
    goto LABEL_11;
  v8 = v7;
  v9 = sub_1B8B9C17C();
  v11 = v10;

  *(_QWORD *)(v6 + 32) = v9;
  *(_QWORD *)(v6 + 40) = v11;
  if (qword_1EF1BB518 != -1)
    swift_once();
  sub_1B8B9C014();
  sub_1B8B9B474();
  v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_1B8BA6070;
  if ((a2 & 0xC000000000000001) == 0)
  {
    if (*(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      v13 = *(id *)(a2 + 32);
      goto LABEL_7;
    }
    __break(1u);
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  v13 = (id)MEMORY[0x1BCCB6800](0, a2);
LABEL_7:
  v14 = v13;
  v15 = objc_msgSend(v13, sel_emailAddress, v25, v23);

  if (v15)
  {
    v16 = sub_1B8B9C17C();
    v18 = v17;

    *(_QWORD *)(v12 + 32) = v16;
    *(_QWORD *)(v12 + 40) = v18;
    sub_1B8B9C014();
    sub_1B8B9B474();
    *(_QWORD *)a3 = v6;
    *(_QWORD *)(a3 + 8) = v21;
    *(_BYTE *)(a3 + 16) = v22;
    *(_QWORD *)(a3 + 24) = v20;
    *(_BYTE *)(a3 + 32) = v24;
    *(_QWORD *)(a3 + 40) = v19;
    *(_QWORD *)(a3 + 48) = v26;
    *(_QWORD *)(a3 + 56) = v12;
    *(_QWORD *)(a3 + 64) = v27;
    *(_BYTE *)(a3 + 72) = v28;
    *(_QWORD *)(a3 + 80) = v29;
    *(_BYTE *)(a3 + 88) = v30;
    *(_OWORD *)(a3 + 96) = v31;
    return;
  }
LABEL_12:
  __break(1u);
}

uint64_t sub_1B8B6E6AC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1B8B6DD44(*(void **)v1, *(_QWORD *)(v1 + 8), a1);
}

unint64_t sub_1B8B6E6B4()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1EF1BE260;
  if (!qword_1EF1BE260)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EF1BE258);
    v2[0] = sub_1B8ADE950(&qword_1EF1BE268, &qword_1EF1BE270, MEMORY[0x1E0CDFB08]);
    v2[1] = sub_1B8ADE950(&qword_1EF1BC368, &qword_1EF1BC370, MEMORY[0x1E0CDBEE8]);
    result = MEMORY[0x1BCCB79D0](MEMORY[0x1E0CD9C18], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EF1BE260);
  }
  return result;
}

uint64_t sub_1B8B6E750(uint64_t a1)
{
  sub_1B8B6E7C4(*(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_QWORD *)(a1 + 128), *(_QWORD *)(a1 + 136), *(_QWORD *)(a1 + 144), *(_QWORD *)(a1 + 152), *(_QWORD *)(a1 + 160), *(_QWORD *)(a1 + 168), *(_BYTE *)(a1 + 176));
  swift_release();
  return a1;
}

uint64_t sub_1B8B6E7C4(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, unsigned __int8 a18)
{
  if (a18 != 255)
    return sub_1B8B6E808(result, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18 & 1);
  return result;
}

uint64_t sub_1B8B6E808(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, char a18)
{
  if ((a18 & 1) == 0)
    swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

double sub_1B8B6E83C(uint64_t a1)
{
  double result;

  *(_QWORD *)(a1 + 128) = 0;
  result = 0.0;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_BYTE *)(a1 + 136) = -1;
  return result;
}

uint64_t sub_1B8B6E860(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, unsigned __int8 a18)
{
  if (a18 != 255)
    return sub_1B8B6E8A4(result, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18 & 1);
  return result;
}

uint64_t sub_1B8B6E8A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, char a18)
{
  if ((a18 & 1) == 0)
    swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1B8B6E8D8(uint64_t a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))
{
  char v4;

  v4 = *(_BYTE *)(a1 + 136);
  a2(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_QWORD *)(a1 + 128), v4);
  return a1;
}

uint64_t sub_1B8B6E93C(uint64_t result)
{
  *(_BYTE *)(result + 136) = 1;
  return result;
}

unint64_t sub_1B8B6E948()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1EF1BE2A0;
  if (!qword_1EF1BE2A0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EF1BE290);
    v2[0] = sub_1B8B233D8();
    v2[1] = MEMORY[0x1E0CD8D78];
    result = MEMORY[0x1BCCB79D0](MEMORY[0x1E0CD9C18], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EF1BE2A0);
  }
  return result;
}

void sub_1B8B6E9B4()
{
  qword_1EF1BE248 = 0x4010000000000000;
}

double sub_1B8B6E9C4@<D0>(uint64_t a1@<X8>)
{
  double v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t KeyPath;
  double result;
  uint64_t v7;
  double v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;

  if (qword_1EF1BB520 != -1)
    swift_once();
  v2 = *(double *)&qword_1EF1BE248;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1BE2B8);
  v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_1B8BA4AB0;
  *(_QWORD *)(v3 + 32) = 0;
  *(double *)(v3 + 40) = v2 + v2;
  sub_1B8B9B42C();
  sub_1B8B9C014();
  sub_1B8B9B474();
  v4 = sub_1B8B9BDD4();
  KeyPath = swift_getKeyPath();
  result = v8;
  *(_QWORD *)a1 = v7;
  *(double *)(a1 + 8) = v8;
  *(_QWORD *)(a1 + 16) = v9;
  *(_QWORD *)(a1 + 24) = v10;
  *(_QWORD *)(a1 + 32) = v11;
  *(_QWORD *)(a1 + 40) = v12;
  *(_BYTE *)(a1 + 48) = v13;
  *(_QWORD *)(a1 + 56) = v14;
  *(_BYTE *)(a1 + 64) = v15;
  *(_QWORD *)(a1 + 72) = v16;
  *(_QWORD *)(a1 + 80) = v17;
  *(_QWORD *)(a1 + 88) = KeyPath;
  *(_QWORD *)(a1 + 96) = v4;
  return result;
}

double sub_1B8B6EB34@<D0>(uint64_t a1@<X8>, CGFloat a2@<D0>, CGFloat a3@<D1>, CGFloat a4@<D2>, CGFloat a5@<D3>)
{
  double result;
  __int128 v11;
  __int128 v12;
  char v13;
  CGRect v14;
  CGRect v15;
  CGRect v16;
  CGRect v17;

  sub_1B8B9BB28();
  v14.origin.x = a2;
  v14.origin.y = a3;
  v14.size.width = a4;
  v14.size.height = a5;
  CGRectGetMinX(v14);
  v15.origin.x = a2;
  v15.origin.y = a3;
  v15.size.width = a4;
  v15.size.height = a5;
  CGRectGetMidY(v15);
  sub_1B8B9BB10();
  v16.origin.x = a2;
  v16.origin.y = a3;
  v16.size.width = a4;
  v16.size.height = a5;
  CGRectGetMaxX(v16);
  v17.origin.x = a2;
  v17.origin.y = a3;
  v17.size.width = a4;
  v17.size.height = a5;
  CGRectGetMidY(v17);
  sub_1B8B9BB1C();
  result = *(double *)&v11;
  *(_OWORD *)a1 = v11;
  *(_OWORD *)(a1 + 16) = v12;
  *(_BYTE *)(a1 + 32) = v13;
  return result;
}

uint64_t sub_1B8B6EC18()
{
  return sub_1B8B9BE34();
}

void (*sub_1B8B6EC30(_QWORD *a1))(_QWORD *a1)
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1B8B9B39C();
  return sub_1B8B25BE0;
}

uint64_t sub_1B8B6EC90()
{
  sub_1B8B6F048();
  return sub_1B8B9BE70();
}

uint64_t sub_1B8B6ECE0()
{
  sub_1B8B6F048();
  return sub_1B8B9BE40();
}

uint64_t sub_1B8B6ED30()
{
  sub_1B8B6F048();
  return sub_1B8B9BE58();
}

uint64_t sub_1B8B6ED68(uint64_t result)
{
  *(_BYTE *)(result + 136) = 0;
  return result;
}

ValueMetadata *type metadata accessor for DottedLine()
{
  return &type metadata for DottedLine;
}

unint64_t sub_1B8B6ED84()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[3];

  result = qword_1EF1BE2A8;
  if (!qword_1EF1BE2A8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EF1BE2B0);
    v2[1] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EF1BE258);
    v2[2] = sub_1B8B6E6B4();
    v2[0] = swift_getOpaqueTypeConformance2();
    result = MEMORY[0x1BCCB79D0](MEMORY[0x1E0CE07A0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EF1BE2A8);
  }
  return result;
}

uint64_t sub_1B8B6EE10()
{
  return swift_getOpaqueTypeConformance2();
}

ValueMetadata *type metadata accessor for HorizontalLine()
{
  return &type metadata for HorizontalLine;
}

unint64_t sub_1B8B6EE3C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1EF1BE2C0;
  if (!qword_1EF1BE2C0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EF1BE2C8);
    v2[0] = sub_1B8B6EEC0();
    v2[1] = sub_1B8ADE950(&qword_1EF1B9360, &qword_1EF1B9368, MEMORY[0x1E0CDCF88]);
    result = MEMORY[0x1BCCB79D0](MEMORY[0x1E0CD9C18], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EF1BE2C0);
  }
  return result;
}

unint64_t sub_1B8B6EEC0()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1EF1BE2D0;
  if (!qword_1EF1BE2D0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EF1BE2D8);
    v2[0] = sub_1B8ADE950(&qword_1EF1BE2E0, &qword_1EF1BE2E8, MEMORY[0x1E0CD9148]);
    v2[1] = MEMORY[0x1E0CD8D78];
    result = MEMORY[0x1BCCB79D0](MEMORY[0x1E0CD9C18], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EF1BE2D0);
  }
  return result;
}

uint64_t sub_1B8B6EF44()
{
  return sub_1B8ADE950(&qword_1EF1BE2F0, &qword_1EF1BE2F8, MEMORY[0x1E0CD8670]);
}

unint64_t sub_1B8B6EF74()
{
  unint64_t result;

  result = qword_1EF1BE300;
  if (!qword_1EF1BE300)
  {
    result = MEMORY[0x1BCCB79D0](MEMORY[0x1E0CDB3C8], MEMORY[0x1E0CDB3E8]);
    atomic_store(result, (unint64_t *)&qword_1EF1BE300);
  }
  return result;
}

unint64_t sub_1B8B6EFBC()
{
  unint64_t result;

  result = qword_1EF1BE308;
  if (!qword_1EF1BE308)
  {
    result = MEMORY[0x1BCCB79D0](&unk_1B8BADE20, &type metadata for HorizontalLine);
    atomic_store(result, (unint64_t *)&qword_1EF1BE308);
  }
  return result;
}

unint64_t sub_1B8B6F004()
{
  unint64_t result;

  result = qword_1EF1BE310;
  if (!qword_1EF1BE310)
  {
    result = MEMORY[0x1BCCB79D0](&unk_1B8BADDD0, &type metadata for HorizontalLine);
    atomic_store(result, (unint64_t *)&qword_1EF1BE310);
  }
  return result;
}

unint64_t sub_1B8B6F048()
{
  unint64_t result;

  result = qword_1EF1BE318;
  if (!qword_1EF1BE318)
  {
    result = MEMORY[0x1BCCB79D0](&unk_1B8BADE70, &type metadata for HorizontalLine);
    atomic_store(result, (unint64_t *)&qword_1EF1BE318);
  }
  return result;
}

uint64_t EventSourceConstrained.maxAlarmsAllowed.getter(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t AssociatedConformanceWitness;
  uint64_t v13;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = sub_1B8B9C50C();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v13 - v7;
  (*(void (**)(uint64_t, uint64_t))(a2 + 24))(a1, a2);
  v9 = *(_QWORD *)(AssociatedTypeWitness - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v8, 1, AssociatedTypeWitness) == 1)
  {
    v10 = -1;
  }
  else
  {
    AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    v10 = (*(uint64_t (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 8))(AssociatedTypeWitness, AssociatedConformanceWitness);
    v6 = v9;
    v5 = AssociatedTypeWitness;
  }
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return v10;
}

uint64_t EventSourceConstrained.requiresOutgoingInvitationsInDefaultCalendar.getter(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char v10;
  uint64_t AssociatedConformanceWitness;
  uint64_t v13;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = sub_1B8B9C50C();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v13 - v7;
  (*(void (**)(uint64_t, uint64_t))(a2 + 24))(a1, a2);
  v9 = *(_QWORD *)(AssociatedTypeWitness - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v8, 1, AssociatedTypeWitness) == 1)
  {
    v10 = 0;
  }
  else
  {
    AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    v10 = (*(uint64_t (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 16))(AssociatedTypeWitness, AssociatedConformanceWitness);
    v6 = v9;
    v5 = AssociatedTypeWitness;
  }
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return v10 & 1;
}

uint64_t EventSourceConstrained.eventDurationConstrainedToRecurrenceInterval.getter(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char v10;
  uint64_t AssociatedConformanceWitness;
  uint64_t v13;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = sub_1B8B9C50C();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v13 - v7;
  (*(void (**)(uint64_t, uint64_t))(a2 + 24))(a1, a2);
  v9 = *(_QWORD *)(AssociatedTypeWitness - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v8, 1, AssociatedTypeWitness) == 1)
  {
    v10 = 0;
  }
  else
  {
    AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    v10 = (*(uint64_t (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 24))(AssociatedTypeWitness, AssociatedConformanceWitness);
    v6 = v9;
    v5 = AssociatedTypeWitness;
  }
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return v10 & 1;
}

uint64_t EventSourceConstrained.occurrencesMustOccurOnSeparateDays.getter(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char v10;
  uint64_t AssociatedConformanceWitness;
  uint64_t v13;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = sub_1B8B9C50C();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v13 - v7;
  (*(void (**)(uint64_t, uint64_t))(a2 + 24))(a1, a2);
  v9 = *(_QWORD *)(AssociatedTypeWitness - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v8, 1, AssociatedTypeWitness) == 1)
  {
    v10 = 0;
  }
  else
  {
    AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    v10 = (*(uint64_t (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 32))(AssociatedTypeWitness, AssociatedConformanceWitness);
    v6 = v9;
    v5 = AssociatedTypeWitness;
  }
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return v10 & 1;
}

uint64_t EventSourceConstrained.supportsPrivateEvents.getter(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char v10;
  uint64_t AssociatedConformanceWitness;
  uint64_t v13;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = sub_1B8B9C50C();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v13 - v7;
  (*(void (**)(uint64_t, uint64_t))(a2 + 24))(a1, a2);
  v9 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v10 = 1;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v8, 1, AssociatedTypeWitness) != 1)
  {
    AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    v10 = (*(uint64_t (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 40))(AssociatedTypeWitness, AssociatedConformanceWitness);
    v6 = v9;
    v5 = AssociatedTypeWitness;
  }
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return v10 & 1;
}

uint64_t EventSourceConstrained.supportsAlarmTriggerDates.getter(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char v10;
  uint64_t AssociatedConformanceWitness;
  uint64_t v13;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = sub_1B8B9C50C();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v13 - v7;
  (*(void (**)(uint64_t, uint64_t))(a2 + 24))(a1, a2);
  v9 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v10 = 1;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v8, 1, AssociatedTypeWitness) != 1)
  {
    AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    v10 = (*(uint64_t (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 48))(AssociatedTypeWitness, AssociatedConformanceWitness);
    v6 = v9;
    v5 = AssociatedTypeWitness;
  }
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return v10 & 1;
}

uint64_t EventSourceConstrained.supportsMultipleAlarms.getter(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char v10;
  uint64_t AssociatedConformanceWitness;
  uint64_t v13;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = sub_1B8B9C50C();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v13 - v7;
  (*(void (**)(uint64_t, uint64_t))(a2 + 24))(a1, a2);
  v9 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v10 = 1;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v8, 1, AssociatedTypeWitness) != 1)
  {
    AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    v10 = (*(uint64_t (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 56))(AssociatedTypeWitness, AssociatedConformanceWitness);
    v6 = v9;
    v5 = AssociatedTypeWitness;
  }
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return v10 & 1;
}

uint64_t EventSourceConstrained.requiresOccurrencesConformToRecurrenceRule.getter(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char v10;
  uint64_t AssociatedConformanceWitness;
  uint64_t v13;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = sub_1B8B9C50C();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v13 - v7;
  (*(void (**)(uint64_t, uint64_t))(a2 + 24))(a1, a2);
  v9 = *(_QWORD *)(AssociatedTypeWitness - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v8, 1, AssociatedTypeWitness) == 1)
  {
    v10 = 0;
  }
  else
  {
    AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    v10 = (*(uint64_t (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 64))(AssociatedTypeWitness, AssociatedConformanceWitness);
    v6 = v9;
    v5 = AssociatedTypeWitness;
  }
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return v10 & 1;
}

uint64_t EventSourceConstrained.supportsURLField.getter(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char v10;
  uint64_t AssociatedConformanceWitness;
  uint64_t v13;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = sub_1B8B9C50C();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v13 - v7;
  (*(void (**)(uint64_t, uint64_t))(a2 + 24))(a1, a2);
  v9 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v10 = 1;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v8, 1, AssociatedTypeWitness) != 1)
  {
    AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    v10 = (*(uint64_t (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 72))(AssociatedTypeWitness, AssociatedConformanceWitness);
    v6 = v9;
    v5 = AssociatedTypeWitness;
  }
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return v10 & 1;
}

uint64_t EventSourceConstrained.supportsFloatingTimeZone.getter(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char v10;
  uint64_t AssociatedConformanceWitness;
  uint64_t v13;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = sub_1B8B9C50C();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v13 - v7;
  (*(void (**)(uint64_t, uint64_t))(a2 + 24))(a1, a2);
  v9 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v10 = 1;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v8, 1, AssociatedTypeWitness) != 1)
  {
    AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    v10 = (*(uint64_t (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 80))(AssociatedTypeWitness, AssociatedConformanceWitness);
    v6 = v9;
    v5 = AssociatedTypeWitness;
  }
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return v10 & 1;
}

uint64_t EventSourceConstrained.prohibitsMultipleDaysInMonthlyRecurrence.getter(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char v10;
  uint64_t AssociatedConformanceWitness;
  uint64_t v13;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = sub_1B8B9C50C();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v13 - v7;
  (*(void (**)(uint64_t, uint64_t))(a2 + 24))(a1, a2);
  v9 = *(_QWORD *)(AssociatedTypeWitness - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v8, 1, AssociatedTypeWitness) == 1)
  {
    v10 = 0;
  }
  else
  {
    AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    v10 = (*(uint64_t (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 88))(AssociatedTypeWitness, AssociatedConformanceWitness);
    v6 = v9;
    v5 = AssociatedTypeWitness;
  }
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return v10 & 1;
}

uint64_t EventSourceConstrained.prohibitsMultipleMonthsInYearlyRecurrence.getter(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char v10;
  uint64_t AssociatedConformanceWitness;
  uint64_t v13;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = sub_1B8B9C50C();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v13 - v7;
  (*(void (**)(uint64_t, uint64_t))(a2 + 24))(a1, a2);
  v9 = *(_QWORD *)(AssociatedTypeWitness - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v8, 1, AssociatedTypeWitness) == 1)
  {
    v10 = 0;
  }
  else
  {
    AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    v10 = (*(uint64_t (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 96))(AssociatedTypeWitness, AssociatedConformanceWitness);
    v6 = v9;
    v5 = AssociatedTypeWitness;
  }
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return v10 & 1;
}

uint64_t EventSourceConstrained.prohibitsYearlyRecurrenceInterval.getter(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char v10;
  uint64_t AssociatedConformanceWitness;
  uint64_t v13;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = sub_1B8B9C50C();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v13 - v7;
  (*(void (**)(uint64_t, uint64_t))(a2 + 24))(a1, a2);
  v9 = *(_QWORD *)(AssociatedTypeWitness - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v8, 1, AssociatedTypeWitness) == 1)
  {
    v10 = 0;
  }
  else
  {
    AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    v10 = (*(uint64_t (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 104))(AssociatedTypeWitness, AssociatedConformanceWitness);
    v6 = v9;
    v5 = AssociatedTypeWitness;
  }
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return v10 & 1;
}

uint64_t EventSourceConstrained.canSetAvailability.getter(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char v10;
  uint64_t AssociatedConformanceWitness;
  uint64_t v13;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = sub_1B8B9C50C();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v13 - v7;
  (*(void (**)(uint64_t, uint64_t))(a2 + 24))(a1, a2);
  v9 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v10 = 1;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v8, 1, AssociatedTypeWitness) != 1)
  {
    AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    v10 = (*(uint64_t (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 112))(AssociatedTypeWitness, AssociatedConformanceWitness);
    v6 = v9;
    v5 = AssociatedTypeWitness;
  }
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return v10 & 1;
}

uint64_t EventSourceConstrained.eventAvailabilityLimited.getter(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char v10;
  uint64_t AssociatedConformanceWitness;
  uint64_t v13;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = sub_1B8B9C50C();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v13 - v7;
  (*(void (**)(uint64_t, uint64_t))(a2 + 24))(a1, a2);
  v9 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v10 = 1;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v8, 1, AssociatedTypeWitness) != 1)
  {
    AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    v10 = (*(uint64_t (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 120))(AssociatedTypeWitness, AssociatedConformanceWitness);
    v6 = v9;
    v5 = AssociatedTypeWitness;
  }
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return v10 & 1;
}

uint64_t dispatch thunk of EventSourceConstrained.constraints.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of EventDirectoryRecordModel.displayName.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of EventDirectoryRecordModel.firstName.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of EventDirectoryRecordModel.lastName.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of EventDirectoryRecordModel.preferredAddress.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t EventModelObject.init(id:uniqueID:title:startDate:endDate:isAllDay:isProposedTime:startTimeZone:endTimeZone:isFloating:virtualConference:location:locationWithoutPrediction:locationsWithoutPrediction:structuredLocation:structuredLocationWithoutPrediction:preferredLocation:travelTime:travelRoutingMode:calendar:privacyLevel:status:alarms:notes:availability:recurrenceDate:recurrenceRules:organizer:attendees:attendeesNotIncludingOrganizerOrLocationsOrResources:selfAttendee:urlString:hasAttachment:conferenceURLForDisplayCached:conferenceURLForDisplay:integration:isEditable:isNew:isSuggestedEvent:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, void (*a6)(_QWORD, _QWORD, _QWORD)@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, _QWORD *a9@<X8>, double a10@<D0>, unsigned __int8 a11, unsigned __int8 a12, uint64_t a13, uint64_t a14, unsigned __int8 a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,unsigned __int8 a41,unsigned __int8 a42,uint64_t a43,uint64_t *a44,char a45,unsigned __int8 a46,unsigned __int8 a47)
{
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  int *v70;
  uint64_t v71;
  uint64_t v72;
  void (*v73)(void);
  uint64_t v74;
  uint64_t v75;
  void (*v76)(uint64_t, uint64_t, uint64_t, uint64_t);
  _QWORD *v77;
  _QWORD *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  void (*v82)(uint64_t, uint64_t, uint64_t, uint64_t);
  _QWORD *v83;
  void (*v84)(void);
  uint64_t v85;
  uint64_t v86;
  void (*v87)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v88;
  uint64_t v89;
  void (*v90)(uint64_t, uint64_t, uint64_t, uint64_t);
  _QWORD *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  int v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t *v101;
  uint64_t *v102;
  uint64_t v103;
  uint64_t v104;
  void (*v105)(_QWORD, _QWORD, _QWORD);
  char *v106;
  _QWORD *v107;
  void (*v108)(_QWORD, _QWORD, _QWORD);
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  _QWORD *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  _QWORD *v119;
  uint64_t v120;
  uint64_t v121;
  char *v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  _QWORD *v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t *v140;
  void (*v141)(uint64_t, uint64_t);
  uint64_t v142;
  uint64_t result;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  _QWORD *v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  int v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  _QWORD *v163;
  uint64_t v164;
  _QWORD *v165;
  void (*v166)(void);
  uint64_t v167;
  uint64_t (*v168)(uint64_t, uint64_t, uint64_t);
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  int v174;
  uint64_t v175;
  int v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  void (*v182)(_QWORD, _QWORD, _QWORD);
  int v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  char *v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  char *v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t *v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  _QWORD *v217;
  uint64_t v218;
  _QWORD v219[22];
  _QWORD v220[22];
  _QWORD v221[22];
  _BYTE v222[176];
  _BYTE v223[176];
  _BYTE v224[176];
  _OWORD v225[11];

  v215 = a8;
  v216 = a7;
  v181 = a5;
  v182 = a6;
  v179 = a3;
  v180 = a4;
  v177 = a1;
  v178 = a2;
  v209 = a38;
  v205 = a35;
  v213 = a33;
  v197 = a32;
  v196 = a31;
  v195 = a30;
  v193 = a29;
  v191 = a28;
  v190 = a27;
  v211 = a26;
  v188 = a21;
  v187 = a20;
  v186 = a19;
  v185 = a18;
  v184 = a17;
  v210 = a16;
  v183 = a15;
  v212 = a14;
  v214 = a13;
  v176 = a12;
  v174 = a11;
  v208 = a43;
  v189 = a25;
  v218 = sub_1B8B9B0F0();
  v217 = *(_QWORD **)(v218 - 8);
  MEMORY[0x1E0C80A78](v218);
  v194 = (char *)&v146 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0);
  v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1B2D18);
  v51 = MEMORY[0x1E0C80A78](v50);
  v192 = (uint64_t)&v146 - ((v52 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v51);
  v198 = (char *)&v146 - v53;
  v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1B3020);
  v55 = MEMORY[0x1E0C80A78](v54);
  v200 = (uint64_t)&v146 - ((v56 + 15) & 0xFFFFFFFFFFFFFFF0);
  v57 = MEMORY[0x1E0C80A78](v55);
  v199 = (uint64_t)&v146 - v58;
  v59 = MEMORY[0x1E0C80A78](v57);
  v207 = (uint64_t)&v146 - v60;
  v61 = MEMORY[0x1E0C80A78](v59);
  v157 = (uint64_t)&v146 - v62;
  v63 = MEMORY[0x1E0C80A78](v61);
  v65 = (char *)&v146 - v64;
  MEMORY[0x1E0C80A78](v63);
  v67 = (char *)&v146 - v66;
  sub_1B8B06074(a22, (uint64_t)v222, &qword_1EF1BD390);
  sub_1B8B06074(a23, (uint64_t)v223, &qword_1EF1BD390);
  sub_1B8B06074(a24, (uint64_t)v224, &qword_1EF1BD390);
  v68 = *a44;
  v203 = a44[1];
  v204 = v68;
  v69 = a44[2];
  v201 = a44[3];
  v202 = v69;
  v70 = (int *)type metadata accessor for EventModelObject();
  v71 = (uint64_t)a9 + v70[11];
  v72 = sub_1B8B9B2B8();
  v73 = *(void (**)(void))(*(_QWORD *)(v72 - 8) + 56);
  v159 = v71;
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v73)(v71, 1, 1, v72);
  v153 = (uint64_t)a9 + v70[12];
  v73();
  v74 = (uint64_t)a9 + v70[14];
  v75 = type metadata accessor for EventVirtualConferenceModelObject(0);
  v76 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v75 - 8) + 56);
  v152 = v74;
  v76(v74, 1, 1, v75);
  v77 = (_QWORD *)((char *)a9 + v70[15]);
  *v77 = 0;
  v77[1] = 0;
  v78 = (_QWORD *)((char *)a9 + v70[16]);
  *v78 = 0;
  v78[1] = 0;
  v147 = v78;
  v151 = v70[17];
  *(_QWORD *)((char *)a9 + v151) = 0;
  v79 = (uint64_t)a9 + v70[18];
  sub_1B8B3A420(v225);
  v158 = v79;
  sub_1B8B06074((uint64_t)v225, v79, &qword_1EF1BD390);
  v160 = (uint64_t)a9 + v70[19];
  sub_1B8B06074((uint64_t)v225, v160, &qword_1EF1BD390);
  v162 = (uint64_t)a9 + v70[20];
  sub_1B8B06074((uint64_t)v225, v162, &qword_1EF1BD390);
  v80 = (uint64_t)a9 + v70[23];
  v81 = type metadata accessor for EventCalendarModelObject();
  v82 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v81 - 8) + 56);
  v164 = v80;
  v82(v80, 1, 1, v81);
  v161 = v70[26];
  *(_QWORD *)((char *)a9 + v161) = 0;
  v83 = (_QWORD *)((char *)a9 + v70[27]);
  *v83 = 0;
  v83[1] = 0;
  v163 = v83;
  v84 = (void (*)(void))v217[7];
  v172 = (uint64_t)a9 + v70[29];
  v166 = v84;
  v84();
  v171 = v70[30];
  *(_QWORD *)((char *)a9 + v171) = 0;
  v85 = (uint64_t)a9 + v70[31];
  v86 = type metadata accessor for EventOrganizerModelObject(0);
  v87 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v86 - 8) + 56);
  v173 = v85;
  v87(v85, 1, 1, v86);
  v167 = v70[32];
  *(_QWORD *)((char *)a9 + v167) = 0;
  v169 = v70[33];
  *(_QWORD *)((char *)a9 + v169) = 0;
  v88 = (uint64_t)a9 + v70[34];
  v89 = type metadata accessor for EventAttendeeModelObject(0);
  v90 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v89 - 8) + 56);
  v170 = v88;
  v90(v88, 1, 1, v89);
  v91 = (_QWORD *)((char *)a9 + v70[35]);
  v92 = sub_1B8B9B054();
  *v91 = 0;
  v91[1] = 0;
  v165 = v91;
  v93 = *(_QWORD *)(v92 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v93 + 56))(v67, 1, 1, v92);
  v206 = (uint64_t *)v67;
  sub_1B8ADE850((uint64_t)v67, (uint64_t)v65, &qword_1ED1B3020);
  v94 = (uint64_t)v65;
  v95 = (uint64_t)v65;
  v96 = v157;
  sub_1B8ADE850(v95, v157, &qword_1ED1B3020);
  v168 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v93 + 48);
  v97 = v168(v96, 1, v92);
  v175 = v92;
  v146 = v93;
  if (v97 == 1)
  {
    sub_1B8ADE894(v94, &qword_1ED1B3020);
    sub_1B8ADE894(v96, &qword_1ED1B3020);
    v98 = 0;
    v99 = 0;
  }
  else
  {
    v98 = sub_1B8B9B018();
    v99 = v100;
    sub_1B8ADE894(v94, &qword_1ED1B3020);
    (*(void (**)(uint64_t, uint64_t))(v93 + 8))(v96, v92);
  }
  LODWORD(v157) = a42;
  v156 = a41;
  v155 = a40;
  v154 = a39;
  v150 = a37;
  v149 = a36;
  v148 = a34;
  v101 = (_QWORD *)((char *)a9 + v70[38]);
  sub_1B8ADE894((uint64_t)v206, &qword_1ED1B3020);
  *v101 = v98;
  v101[1] = v99;
  v206 = v101;
  v102 = (_QWORD *)((char *)a9 + v70[39]);
  *(_OWORD *)v102 = xmmword_1B8BA8260;
  v102[2] = 0;
  v102[3] = 0;
  v103 = v178;
  *a9 = v177;
  a9[1] = v103;
  v104 = v180;
  a9[2] = v179;
  a9[3] = v104;
  v105 = v182;
  a9[4] = v181;
  a9[5] = v105;
  v106 = (char *)a9 + v70[7];
  v107 = v217;
  v108 = (void (*)(_QWORD, _QWORD, _QWORD))v217[2];
  v182 = v108;
  v109 = v216;
  v110 = v218;
  v108(v106, v216, v218);
  v108((char *)a9 + v70[8], v215, v110);
  *((_BYTE *)a9 + v70[9]) = v174 & 1;
  *((_BYTE *)a9 + v70[10]) = v176 & 1;
  sub_1B8B70DA8(v214, v159, &qword_1EF1B8F70);
  sub_1B8B70DA8(v212, v153, &qword_1EF1B8F70);
  *((_BYTE *)a9 + v70[13]) = v183 & 1;
  sub_1B8B70DA8(v210, v152, &qword_1EF1BD370);
  swift_bridgeObjectRelease();
  v111 = v185;
  *v77 = v184;
  v77[1] = v111;
  v112 = v147;
  swift_bridgeObjectRelease();
  v113 = v187;
  *v112 = v186;
  v112[1] = v113;
  v114 = v151;
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a9 + v114) = v188;
  v115 = v158;
  sub_1B8B06074(v158, (uint64_t)v219, &qword_1EF1BD390);
  sub_1B8B3A53C(v219, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1B8B3A5A0);
  sub_1B8B06074((uint64_t)v222, v115, &qword_1EF1BD390);
  v116 = v160;
  sub_1B8B06074(v160, (uint64_t)v220, &qword_1EF1BD390);
  sub_1B8B3A53C(v220, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1B8B3A5A0);
  sub_1B8B06074((uint64_t)v223, v116, &qword_1EF1BD390);
  v117 = v162;
  sub_1B8B06074(v162, (uint64_t)v221, &qword_1EF1BD390);
  sub_1B8B3A53C(v221, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1B8B3A5A0);
  sub_1B8B06074((uint64_t)v224, v117, &qword_1EF1BD390);
  *(double *)((char *)a9 + v70[21]) = a10;
  *(_QWORD *)((char *)a9 + v70[22]) = v189;
  sub_1B8B70DA8(v211, v164, &qword_1EF1BD368);
  *(_QWORD *)((char *)a9 + v70[24]) = v190;
  *(_QWORD *)((char *)a9 + v70[25]) = v191;
  v118 = v161;
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a9 + v118) = v193;
  v119 = v163;
  swift_bridgeObjectRelease();
  v120 = v196;
  *v119 = v195;
  v119[1] = v120;
  *(_QWORD *)((char *)a9 + v70[28]) = v197;
  v121 = v192;
  sub_1B8ADE850(v213, v192, &qword_1ED1B2D18);
  v122 = v194;
  v182(v194, v109, v110);
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v107[6])(v121, 1, v110) == 1)
  {
    v123 = (uint64_t)v198;
    ((void (*)(char *, char *, uint64_t))v107[4])(v198, v122, v110);
    sub_1B8ADE894(v121, &qword_1ED1B2D18);
  }
  else
  {
    ((void (*)(char *, uint64_t))v107[1])(v122, v110);
    v123 = (uint64_t)v198;
    ((void (*)(char *, uint64_t, uint64_t))v107[4])(v198, v121, v110);
  }
  LODWORD(v198) = a47;
  LODWORD(v197) = a46;
  ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v166)(v123, 0, 1, v110);
  sub_1B8B3A864(v123, v172, &qword_1ED1B2D18);
  v124 = v171;
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a9 + v124) = v148;
  v125 = v205;
  sub_1B8B70DA8(v205, v173, &qword_1EF1BD380);
  v126 = v167;
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a9 + v126) = v149;
  v127 = v169;
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a9 + v127) = v150;
  sub_1B8B70DA8(v209, v170, &qword_1EF1BD378);
  v128 = v165;
  swift_bridgeObjectRelease();
  v129 = v155;
  *v128 = v154;
  v128[1] = v129;
  *((_BYTE *)a9 + v70[36]) = v156 & 1;
  *((_BYTE *)a9 + v70[37]) = v157 & 1;
  v130 = v207;
  sub_1B8ADE850(v208, v207, &qword_1ED1B3020);
  swift_bridgeObjectRelease();
  v131 = v199;
  sub_1B8ADE850(v130, v199, &qword_1ED1B3020);
  v132 = v200;
  sub_1B8ADE850(v131, v200, &qword_1ED1B3020);
  v133 = v175;
  if (v168(v132, 1, v175) == 1)
  {
    sub_1B8ADE894(v131, &qword_1ED1B3020);
    sub_1B8ADE894(v132, &qword_1ED1B3020);
    v134 = 0;
    v135 = 0;
  }
  else
  {
    v134 = sub_1B8B9B018();
    v136 = v131;
    v137 = v132;
    v135 = v138;
    sub_1B8ADE894(v136, &qword_1ED1B3020);
    (*(void (**)(uint64_t, uint64_t))(v146 + 8))(v137, v133);
  }
  v140 = v206;
  v139 = v207;
  *v206 = v134;
  v140[1] = v135;
  sub_1B8ADE894(v139, &qword_1ED1B3020);
  sub_1B8ADE894(v208, &qword_1ED1B3020);
  sub_1B8ADE894(v209, &qword_1EF1BD378);
  sub_1B8ADE894(v125, &qword_1EF1BD380);
  sub_1B8ADE894(v213, &qword_1ED1B2D18);
  sub_1B8ADE894(v211, &qword_1EF1BD368);
  sub_1B8ADE894(v210, &qword_1EF1BD370);
  sub_1B8ADE894(v212, &qword_1EF1B8F70);
  sub_1B8ADE894(v214, &qword_1EF1B8F70);
  v141 = (void (*)(uint64_t, uint64_t))v217[1];
  v142 = v218;
  v141(v215, v218);
  v141(v216, v142);
  result = sub_1B8B70DEC(*v102, v102[1]);
  v144 = v203;
  *v102 = v204;
  v102[1] = v144;
  v145 = v201;
  v102[2] = v202;
  v102[3] = v145;
  *((_BYTE *)a9 + v70[40]) = a45 & 1;
  *((_BYTE *)a9 + v70[41]) = v197 & 1;
  *((_BYTE *)a9 + v70[42]) = v198 & 1;
  return result;
}

uint64_t type metadata accessor for EventModelObject()
{
  uint64_t result;

  result = qword_1EF1B94F0;
  if (!qword_1EF1B94F0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1B8B70DA8(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 24))(a2, a1, v5);
  return a2;
}

uint64_t sub_1B8B70DEC(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2 != 1)
  {
    swift_release();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t EventModelObject.id.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t EventModelObject.id.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*EventModelObject.id.modify())()
{
  return nullsub_1;
}

uint64_t EventModelObject.uniqueID.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t EventModelObject.uniqueID.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return result;
}

uint64_t (*EventModelObject.uniqueID.modify())()
{
  return nullsub_1;
}

uint64_t EventModelObject.title.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t EventModelObject.title.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 32) = a1;
  *(_QWORD *)(v2 + 40) = a2;
  return result;
}

uint64_t (*EventModelObject.title.modify())()
{
  return nullsub_1;
}

uint64_t EventModelObject.startDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for EventModelObject() + 28);
  v4 = sub_1B8B9B0F0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t EventModelObject.startDate.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for EventModelObject() + 28);
  v4 = sub_1B8B9B0F0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*EventModelObject.startDate.modify())(_QWORD)
{
  type metadata accessor for EventModelObject();
  return nullsub_1;
}

uint64_t EventModelObject.endDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for EventModelObject() + 32);
  v4 = sub_1B8B9B0F0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t EventModelObject.endDate.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for EventModelObject() + 32);
  v4 = sub_1B8B9B0F0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*EventModelObject.endDate.modify())(_QWORD)
{
  type metadata accessor for EventModelObject();
  return nullsub_1;
}

uint64_t EventModelObject.duration.getter()
{
  type metadata accessor for EventModelObject();
  return sub_1B8B9B0B4();
}

uint64_t EventModelObject.isAllDay.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for EventModelObject() + 36));
}

uint64_t EventModelObject.isAllDay.setter(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for EventModelObject();
  *(_BYTE *)(v1 + *(int *)(result + 36)) = a1;
  return result;
}

uint64_t (*EventModelObject.isAllDay.modify())(_QWORD)
{
  type metadata accessor for EventModelObject();
  return nullsub_1;
}

uint64_t EventModelObject.isProposedTime.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for EventModelObject() + 40));
}

uint64_t EventModelObject.isProposedTime.setter(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for EventModelObject();
  *(_BYTE *)(v1 + *(int *)(result + 40)) = a1;
  return result;
}

uint64_t (*EventModelObject.isProposedTime.modify())(_QWORD)
{
  type metadata accessor for EventModelObject();
  return nullsub_1;
}

uint64_t EventModelObject.startTimeZone.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for EventModelObject();
  return sub_1B8ADE850(v1 + *(int *)(v3 + 44), a1, &qword_1EF1B8F70);
}

uint64_t EventModelObject.startTimeZone.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for EventModelObject();
  return sub_1B8B3A864(a1, v1 + *(int *)(v3 + 44), &qword_1EF1B8F70);
}

uint64_t (*EventModelObject.startTimeZone.modify())(_QWORD)
{
  type metadata accessor for EventModelObject();
  return nullsub_1;
}

uint64_t EventModelObject.endTimeZone.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for EventModelObject();
  return sub_1B8ADE850(v1 + *(int *)(v3 + 48), a1, &qword_1EF1B8F70);
}

uint64_t EventModelObject.endTimeZone.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for EventModelObject();
  return sub_1B8B3A864(a1, v1 + *(int *)(v3 + 48), &qword_1EF1B8F70);
}

uint64_t (*EventModelObject.endTimeZone.modify())(_QWORD)
{
  type metadata accessor for EventModelObject();
  return nullsub_1;
}

uint64_t EventModelObject.isFloating.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for EventModelObject() + 52));
}

uint64_t EventModelObject.isFloating.setter(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for EventModelObject();
  *(_BYTE *)(v1 + *(int *)(result + 52)) = a1;
  return result;
}

uint64_t (*EventModelObject.isFloating.modify())(_QWORD)
{
  type metadata accessor for EventModelObject();
  return nullsub_1;
}

uint64_t EventModelObject.virtualConference.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for EventModelObject();
  return sub_1B8ADE850(v1 + *(int *)(v3 + 56), a1, &qword_1EF1BD370);
}

uint64_t EventModelObject.virtualConference.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for EventModelObject();
  return sub_1B8B3A864(a1, v1 + *(int *)(v3 + 56), &qword_1EF1BD370);
}

uint64_t (*EventModelObject.virtualConference.modify())(_QWORD)
{
  type metadata accessor for EventModelObject();
  return nullsub_1;
}

uint64_t EventModelObject.location.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for EventModelObject() + 60));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t EventModelObject.location.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for EventModelObject() + 60));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*EventModelObject.location.modify())(_QWORD)
{
  type metadata accessor for EventModelObject();
  return nullsub_1;
}

uint64_t EventModelObject.locationWithoutPrediction.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for EventModelObject() + 64));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t EventModelObject.locationWithoutPrediction.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for EventModelObject() + 64));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*EventModelObject.locationWithoutPrediction.modify())(_QWORD)
{
  type metadata accessor for EventModelObject();
  return nullsub_1;
}

uint64_t EventModelObject.locationsWithoutPrediction.getter()
{
  type metadata accessor for EventModelObject();
  return swift_bridgeObjectRetain();
}

uint64_t EventModelObject.locationsWithoutPrediction.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;

  v3 = *(int *)(type metadata accessor for EventModelObject() + 68);
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + v3) = a1;
  return result;
}

uint64_t (*EventModelObject.locationsWithoutPrediction.modify())(_QWORD)
{
  type metadata accessor for EventModelObject();
  return nullsub_1;
}

_QWORD *EventModelObject.structuredLocation.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  _QWORD v5[22];

  v3 = type metadata accessor for EventModelObject();
  sub_1B8B06074(v1 + *(int *)(v3 + 72), (uint64_t)v5, &qword_1EF1BD390);
  sub_1B8B06074((uint64_t)v5, a1, &qword_1EF1BD390);
  return sub_1B8B3A53C(v5, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1B8B3A448);
}

uint64_t EventModelObject.structuredLocation.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _BYTE v4[176];
  _QWORD v5[22];

  sub_1B8B06074(a1, (uint64_t)v4, &qword_1EF1BD390);
  v2 = v1 + *(int *)(type metadata accessor for EventModelObject() + 72);
  sub_1B8B06074(v2, (uint64_t)v5, &qword_1EF1BD390);
  sub_1B8B3A53C(v5, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1B8B3A5A0);
  return sub_1B8B06074((uint64_t)v4, v2, &qword_1EF1BD390);
}

uint64_t (*EventModelObject.structuredLocation.modify())(_QWORD)
{
  type metadata accessor for EventModelObject();
  return nullsub_1;
}

_QWORD *EventModelObject.structuredLocationWithoutPrediction.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  _QWORD v5[22];

  v3 = type metadata accessor for EventModelObject();
  sub_1B8B06074(v1 + *(int *)(v3 + 76), (uint64_t)v5, &qword_1EF1BD390);
  sub_1B8B06074((uint64_t)v5, a1, &qword_1EF1BD390);
  return sub_1B8B3A53C(v5, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1B8B3A448);
}

uint64_t EventModelObject.structuredLocationWithoutPrediction.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _BYTE v4[176];
  _QWORD v5[22];

  sub_1B8B06074(a1, (uint64_t)v4, &qword_1EF1BD390);
  v2 = v1 + *(int *)(type metadata accessor for EventModelObject() + 76);
  sub_1B8B06074(v2, (uint64_t)v5, &qword_1EF1BD390);
  sub_1B8B3A53C(v5, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1B8B3A5A0);
  return sub_1B8B06074((uint64_t)v4, v2, &qword_1EF1BD390);
}

uint64_t (*EventModelObject.structuredLocationWithoutPrediction.modify())(_QWORD)
{
  type metadata accessor for EventModelObject();
  return nullsub_1;
}

_QWORD *EventModelObject.preferredLocation.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  _QWORD v5[22];

  v3 = type metadata accessor for EventModelObject();
  sub_1B8B06074(v1 + *(int *)(v3 + 80), (uint64_t)v5, &qword_1EF1BD390);
  sub_1B8B06074((uint64_t)v5, a1, &qword_1EF1BD390);
  return sub_1B8B3A53C(v5, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1B8B3A448);
}

uint64_t EventModelObject.preferredLocation.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _BYTE v4[176];
  _QWORD v5[22];

  sub_1B8B06074(a1, (uint64_t)v4, &qword_1EF1BD390);
  v2 = v1 + *(int *)(type metadata accessor for EventModelObject() + 80);
  sub_1B8B06074(v2, (uint64_t)v5, &qword_1EF1BD390);
  sub_1B8B3A53C(v5, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1B8B3A5A0);
  return sub_1B8B06074((uint64_t)v4, v2, &qword_1EF1BD390);
}

uint64_t (*EventModelObject.preferredLocation.modify())(_QWORD)
{
  type metadata accessor for EventModelObject();
  return nullsub_1;
}

double EventModelObject.travelTime.getter()
{
  uint64_t v0;

  return *(double *)(v0 + *(int *)(type metadata accessor for EventModelObject() + 84));
}

uint64_t EventModelObject.travelTime.setter(double a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for EventModelObject();
  *(double *)(v1 + *(int *)(result + 84)) = a1;
  return result;
}

uint64_t (*EventModelObject.travelTime.modify())(_QWORD)
{
  type metadata accessor for EventModelObject();
  return nullsub_1;
}

uint64_t EventModelObject.travelRoutingMode.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for EventModelObject() + 88));
}

uint64_t EventModelObject.travelRoutingMode.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for EventModelObject();
  *(_QWORD *)(v1 + *(int *)(result + 88)) = a1;
  return result;
}

uint64_t (*EventModelObject.travelRoutingMode.modify())(_QWORD)
{
  type metadata accessor for EventModelObject();
  return nullsub_1;
}

uint64_t EventModelObject.calendar.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for EventModelObject();
  return sub_1B8ADE850(v1 + *(int *)(v3 + 92), a1, &qword_1EF1BD368);
}

uint64_t EventModelObject.calendar.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for EventModelObject();
  return sub_1B8B3A864(a1, v1 + *(int *)(v3 + 92), &qword_1EF1BD368);
}

uint64_t (*EventModelObject.calendar.modify())(_QWORD)
{
  type metadata accessor for EventModelObject();
  return nullsub_1;
}

uint64_t EventModelObject.privacyLevel.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for EventModelObject() + 96));
}

uint64_t EventModelObject.privacyLevel.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for EventModelObject();
  *(_QWORD *)(v1 + *(int *)(result + 96)) = a1;
  return result;
}

uint64_t (*EventModelObject.privacyLevel.modify())(_QWORD)
{
  type metadata accessor for EventModelObject();
  return nullsub_1;
}

BOOL EventModelObject.isPrivate.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for EventModelObject() + 96)) != 0;
}

uint64_t sub_1B8B71B6C(unsigned __int8 *a1, uint64_t a2)
{
  int v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE v9[136];
  _BYTE v10[136];

  v3 = *a1;
  result = type metadata accessor for EventModelObject();
  v5 = result;
  v6 = 0;
  if (v3 == 1)
  {
    v7 = a2 + *(int *)(result + 92);
    v8 = type metadata accessor for EventCalendarModelObject();
    result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v7, 1, v8);
    if ((_DWORD)result
      || (sub_1B8B06074(v7 + 96, (uint64_t)v9, &qword_1EF1BCA40),
          sub_1B8B06074((uint64_t)v9, (uint64_t)v10, &qword_1EF1BCA40),
          result = sub_1B8B1079C((uint64_t)v10),
          (_DWORD)result == 1))
    {
      v6 = 2;
    }
    else
    {
      v6 = *(_QWORD *)(v7 + 168);
    }
  }
  *(_QWORD *)(a2 + *(int *)(v5 + 96)) = v6;
  return result;
}

uint64_t EventModelObject.isPrivate.setter(char a1)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE v8[136];
  _BYTE v9[144];

  result = type metadata accessor for EventModelObject();
  v4 = result;
  v5 = 0;
  if ((a1 & 1) != 0)
  {
    v6 = v1 + *(int *)(result + 92);
    v7 = type metadata accessor for EventCalendarModelObject();
    result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v6, 1, v7);
    if ((_DWORD)result
      || (sub_1B8B06074(v6 + 96, (uint64_t)v8, &qword_1EF1BCA40),
          sub_1B8B06074((uint64_t)v8, (uint64_t)v9, &qword_1EF1BCA40),
          result = sub_1B8B1079C((uint64_t)v9),
          (_DWORD)result == 1))
    {
      v5 = 2;
    }
    else
    {
      v5 = *(_QWORD *)(v6 + 168);
    }
  }
  *(_QWORD *)(v1 + *(int *)(v4 + 96)) = v5;
  return result;
}

void (*EventModelObject.isPrivate.modify(_QWORD *a1))(uint64_t *a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = malloc(0x128uLL);
  *a1 = v3;
  v3[34] = v1;
  v4 = type metadata accessor for EventModelObject();
  v3[35] = v4;
  v5 = *(int *)(v4 + 96);
  *((_BYTE *)v3 + 134) = *(_QWORD *)(v1 + v5) != 0;
  *((_DWORD *)v3 + 72) = v5;
  return sub_1B8B71D54;
}

void sub_1B8B71D54(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *a1;
  v2 = *a1 + 136;
  if (*(_BYTE *)(*a1 + 134))
  {
    v3 = *(_QWORD *)(v1 + 272) + *(int *)(*(_QWORD *)(v1 + 280) + 92);
    v4 = type metadata accessor for EventCalendarModelObject();
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(v3, 1, v4)
      || (sub_1B8B06074(v3 + 96, v2, &qword_1EF1BCA40),
          sub_1B8B06074(v2, v1, &qword_1EF1BCA40),
          sub_1B8B1079C(v1) == 1))
    {
      v5 = 2;
    }
    else
    {
      v5 = *(_QWORD *)(v3 + 168);
    }
  }
  else
  {
    v5 = 0;
  }
  *(_QWORD *)(*(_QWORD *)(v1 + 272) + *(int *)(v1 + 288)) = v5;
  free((void *)v1);
}

uint64_t EventModelObject.status.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for EventModelObject() + 100));
}

uint64_t EventModelObject.status.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for EventModelObject();
  *(_QWORD *)(v1 + *(int *)(result + 100)) = a1;
  return result;
}

uint64_t (*EventModelObject.status.modify())(_QWORD)
{
  type metadata accessor for EventModelObject();
  return nullsub_1;
}

uint64_t EventModelObject.alarms.getter()
{
  type metadata accessor for EventModelObject();
  return swift_bridgeObjectRetain();
}

uint64_t EventModelObject.alarms.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;

  v3 = *(int *)(type metadata accessor for EventModelObject() + 104);
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + v3) = a1;
  return result;
}

uint64_t (*EventModelObject.alarms.modify())(_QWORD)
{
  type metadata accessor for EventModelObject();
  return nullsub_1;
}

uint64_t EventModelObject.notes.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for EventModelObject() + 108));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t EventModelObject.notes.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for EventModelObject() + 108));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*EventModelObject.notes.modify())(_QWORD)
{
  type metadata accessor for EventModelObject();
  return nullsub_1;
}

uint64_t EventModelObject.availability.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for EventModelObject() + 112));
}

uint64_t EventModelObject.availability.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for EventModelObject();
  *(_QWORD *)(v1 + *(int *)(result + 112)) = a1;
  return result;
}

uint64_t (*EventModelObject.availability.modify())(_QWORD)
{
  type metadata accessor for EventModelObject();
  return nullsub_1;
}

uint64_t EventModelObject.recurrenceDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for EventModelObject();
  return sub_1B8ADE850(v1 + *(int *)(v3 + 116), a1, &qword_1ED1B2D18);
}

uint64_t EventModelObject.recurrenceDate.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for EventModelObject();
  return sub_1B8B3A864(a1, v1 + *(int *)(v3 + 116), &qword_1ED1B2D18);
}

uint64_t (*EventModelObject.recurrenceDate.modify())(_QWORD)
{
  type metadata accessor for EventModelObject();
  return nullsub_1;
}

uint64_t EventModelObject.recurrenceRules.getter()
{
  type metadata accessor for EventModelObject();
  return swift_bridgeObjectRetain();
}

uint64_t EventModelObject.recurrenceRules.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;

  v3 = *(int *)(type metadata accessor for EventModelObject() + 120);
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + v3) = a1;
  return result;
}

uint64_t (*EventModelObject.recurrenceRules.modify())(_QWORD)
{
  type metadata accessor for EventModelObject();
  return nullsub_1;
}

uint64_t EventModelObject.singleRecurrenceRule.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v3 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for EventModelObject() + 120));
  if (v3)
  {
    v4 = *(_QWORD *)(v3 + 16);
    v5 = type metadata accessor for EventRecurrenceRuleModelObject(0);
    v6 = *(_QWORD *)(v5 - 8);
    if (v4)
    {
      sub_1B8AE7B90(v3 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80)), a1, type metadata accessor for EventRecurrenceRuleModelObject);
      v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56);
      v8 = a1;
      v9 = 0;
    }
    else
    {
      v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56);
      v8 = a1;
      v9 = 1;
    }
    v10 = v5;
  }
  else
  {
    v10 = type metadata accessor for EventRecurrenceRuleModelObject(0);
    v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
    v8 = a1;
    v9 = 1;
  }
  return v7(v8, v9, 1, v10);
}

uint64_t sub_1B8B72208@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v3 = *(_QWORD *)(a1 + *(int *)(type metadata accessor for EventModelObject() + 120));
  if (v3)
  {
    v4 = *(_QWORD *)(v3 + 16);
    v5 = type metadata accessor for EventRecurrenceRuleModelObject(0);
    v6 = *(_QWORD *)(v5 - 8);
    if (v4)
    {
      sub_1B8AE7B90(v3 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80)), a2, type metadata accessor for EventRecurrenceRuleModelObject);
      v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56);
      v8 = a2;
      v9 = 0;
    }
    else
    {
      v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56);
      v8 = a2;
      v9 = 1;
    }
    v10 = v5;
  }
  else
  {
    v10 = type metadata accessor for EventRecurrenceRuleModelObject(0);
    v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
    v8 = a2;
    v9 = 1;
  }
  return v7(v8, v9, 1, v10);
}

uint64_t EventModelObject.singleRecurrenceRule.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;

  v3 = type metadata accessor for EventRecurrenceRuleModelObject(0);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1BE320);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B8ADE850(a1, (uint64_t)v9, &qword_1EF1BE320);
  v10 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v4 + 48))(v9, 1, v3);
  v11 = 0;
  if (v10 != 1)
  {
    sub_1B8AFE0FC((uint64_t)v9, (uint64_t)v6, type metadata accessor for EventRecurrenceRuleModelObject);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1BD320);
    v12 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
    v11 = swift_allocObject();
    *(_OWORD *)(v11 + 16) = xmmword_1B8BA6070;
    sub_1B8AFE0FC((uint64_t)v6, v11 + v12, type metadata accessor for EventRecurrenceRuleModelObject);
  }
  sub_1B8ADE894(a1, &qword_1EF1BE320);
  v13 = *(int *)(type metadata accessor for EventModelObject() + 120);
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + v13) = v11;
  return result;
}

void (*EventModelObject.singleRecurrenceRule.modify(_QWORD *a1))(uint64_t **a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  size_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v3 = malloc(0x48uLL);
  *a1 = v3;
  *v3 = v1;
  v4 = type metadata accessor for EventRecurrenceRuleModelObject(0);
  v3[1] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[2] = v5;
  v3[3] = malloc(*(_QWORD *)(v5 + 64));
  v6 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EF1BE320) - 8) + 64);
  v3[4] = malloc(v6);
  v3[5] = malloc(v6);
  v3[6] = malloc(v6);
  v7 = malloc(v6);
  v3[7] = v7;
  v8 = *(int *)(type metadata accessor for EventModelObject() + 120);
  *((_DWORD *)v3 + 16) = v8;
  v9 = *(_QWORD *)(v1 + v8);
  if (v9 && *(_QWORD *)(v9 + 16))
  {
    sub_1B8AE7B90(v9 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80)), (uint64_t)v7, type metadata accessor for EventRecurrenceRuleModelObject);
    v10 = 0;
  }
  else
  {
    v10 = 1;
  }
  (*(void (**)(void *, uint64_t, uint64_t, uint64_t))(v5 + 56))(v7, v10, 1, v4);
  return sub_1B8B72548;
}

void sub_1B8B72548(uint64_t **a1, char a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v2 = *a1;
  v3 = (*a1)[7];
  if ((a2 & 1) != 0)
  {
    v5 = v2[4];
    v4 = v2[5];
    v6 = v2[1];
    v7 = v2[2];
    sub_1B8ADE850(v3, v4, &qword_1EF1BE320);
    sub_1B8ADE850(v4, v5, &qword_1EF1BE320);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
    {
      v8 = 0;
    }
    else
    {
      v13 = v2[3];
      v14 = v2[2];
      sub_1B8AFE0FC(v2[4], v13, type metadata accessor for EventRecurrenceRuleModelObject);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1BD320);
      v15 = (*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
      v8 = swift_allocObject();
      *(_OWORD *)(v8 + 16) = xmmword_1B8BA6070;
      sub_1B8AFE0FC(v13, v8 + v15, type metadata accessor for EventRecurrenceRuleModelObject);
    }
    v16 = *((int *)v2 + 16);
    v18 = (void *)v2[6];
    v17 = (void *)v2[7];
    v20 = (void *)v2[4];
    v19 = (void *)v2[5];
    v21 = (void *)v2[3];
    v22 = *v2;
    sub_1B8ADE894((uint64_t)v19, &qword_1EF1BE320);
    swift_bridgeObjectRelease();
    *(_QWORD *)(v22 + v16) = v8;
    sub_1B8ADE894((uint64_t)v17, &qword_1EF1BE320);
  }
  else
  {
    v9 = v2[6];
    v10 = v2[1];
    v11 = v2[2];
    sub_1B8ADE850(v3, v9, &qword_1EF1BE320);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
    {
      v12 = 0;
    }
    else
    {
      v24 = v2[2];
      v23 = v2[3];
      sub_1B8AFE0FC(v2[6], v23, type metadata accessor for EventRecurrenceRuleModelObject);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1BD320);
      v25 = (*(unsigned __int8 *)(v24 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80);
      v12 = swift_allocObject();
      *(_OWORD *)(v12 + 16) = xmmword_1B8BA6070;
      sub_1B8AFE0FC(v23, v12 + v25, type metadata accessor for EventRecurrenceRuleModelObject);
    }
    v26 = *((int *)v2 + 16);
    v18 = (void *)v2[6];
    v17 = (void *)v2[7];
    v20 = (void *)v2[4];
    v19 = (void *)v2[5];
    v21 = (void *)v2[3];
    v27 = *v2;
    sub_1B8ADE894((uint64_t)v17, &qword_1EF1BE320);
    swift_bridgeObjectRelease();
    *(_QWORD *)(v27 + v26) = v12;
  }
  free(v17);
  free(v18);
  free(v19);
  free(v20);
  free(v21);
  free(v2);
}

uint64_t EventModelObject.organizer.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for EventModelObject();
  return sub_1B8ADE850(v1 + *(int *)(v3 + 124), a1, &qword_1EF1BD380);
}

uint64_t EventModelObject.organizer.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for EventModelObject();
  return sub_1B8B3A864(a1, v1 + *(int *)(v3 + 124), &qword_1EF1BD380);
}

uint64_t (*EventModelObject.organizer.modify())(_QWORD)
{
  type metadata accessor for EventModelObject();
  return nullsub_1;
}

uint64_t EventModelObject.attendees.getter()
{
  type metadata accessor for EventModelObject();
  return swift_bridgeObjectRetain();
}

uint64_t EventModelObject.attendees.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;

  v3 = *(int *)(type metadata accessor for EventModelObject() + 128);
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + v3) = a1;
  return result;
}

uint64_t (*EventModelObject.attendees.modify())(_QWORD)
{
  type metadata accessor for EventModelObject();
  return nullsub_1;
}

uint64_t EventModelObject.attendeesNotIncludingOrganizerOrLocationsOrResources.getter()
{
  type metadata accessor for EventModelObject();
  return swift_bridgeObjectRetain();
}

uint64_t EventModelObject.attendeesNotIncludingOrganizerOrLocationsOrResources.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;

  v3 = *(int *)(type metadata accessor for EventModelObject() + 132);
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + v3) = a1;
  return result;
}

uint64_t (*EventModelObject.attendeesNotIncludingOrganizerOrLocationsOrResources.modify())(_QWORD)
{
  type metadata accessor for EventModelObject();
  return nullsub_1;
}

uint64_t EventModelObject.selfAttendee.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for EventModelObject();
  return sub_1B8ADE850(v1 + *(int *)(v3 + 136), a1, &qword_1EF1BD378);
}

uint64_t EventModelObject.selfAttendee.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for EventModelObject();
  return sub_1B8B3A864(a1, v1 + *(int *)(v3 + 136), &qword_1EF1BD378);
}

uint64_t (*EventModelObject.selfAttendee.modify())(_QWORD)
{
  type metadata accessor for EventModelObject();
  return nullsub_1;
}

uint64_t EventModelObject.urlString.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for EventModelObject() + 140));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t EventModelObject.urlString.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for EventModelObject() + 140));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*EventModelObject.urlString.modify())(_QWORD)
{
  type metadata accessor for EventModelObject();
  return nullsub_1;
}

uint64_t EventModelObject.hasAttachment.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for EventModelObject() + 144));
}

uint64_t EventModelObject.hasAttachment.setter(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for EventModelObject();
  *(_BYTE *)(v1 + *(int *)(result + 144)) = a1;
  return result;
}

uint64_t (*EventModelObject.hasAttachment.modify())(_QWORD)
{
  type metadata accessor for EventModelObject();
  return nullsub_1;
}

uint64_t EventModelObject.conferenceURLForDisplayCached.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for EventModelObject() + 148));
}

uint64_t EventModelObject.conferenceURLForDisplayCached.setter(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for EventModelObject();
  *(_BYTE *)(v1 + *(int *)(result + 148)) = a1;
  return result;
}

uint64_t (*EventModelObject.conferenceURLForDisplayCached.modify())(_QWORD)
{
  type metadata accessor for EventModelObject();
  return nullsub_1;
}

uint64_t EventModelObject.conferenceURLForDisplay.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  if (*(_QWORD *)(v1 + *(int *)(type metadata accessor for EventModelObject() + 152) + 8))
  {
    swift_bridgeObjectRetain();
    sub_1B8B9B048();
  }
  else
  {
    v3 = sub_1B8B9B054();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))(a1, 1, 1, v3);
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B8B72BE0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;

  if (*(_QWORD *)(a1 + *(int *)(type metadata accessor for EventModelObject() + 152) + 8))
  {
    swift_bridgeObjectRetain();
    sub_1B8B9B048();
  }
  else
  {
    v3 = sub_1B8B9B054();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))(a2, 1, 1, v3);
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B8B72C6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, uint64_t (*a6)(char *))
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v13;

  v9 = __swift_instantiateConcreteTypeFromMangledName(a5);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v13 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B8ADE850(a1, (uint64_t)v11, a5);
  return a6(v11);
}

uint64_t EventModelObject.conferenceURLForDisplay.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v18;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1B3020);
  v5 = MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v18 - v8;
  sub_1B8ADE850(a1, (uint64_t)&v18 - v8, &qword_1ED1B3020);
  v10 = *(int *)(type metadata accessor for EventModelObject() + 152);
  sub_1B8ADE850((uint64_t)v9, (uint64_t)v7, &qword_1ED1B3020);
  v11 = sub_1B8B9B054();
  v12 = *(_QWORD *)(v11 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v7, 1, v11) == 1)
  {
    sub_1B8ADE894((uint64_t)v9, &qword_1ED1B3020);
    sub_1B8ADE894((uint64_t)v7, &qword_1ED1B3020);
    v13 = 0;
    v14 = 0;
  }
  else
  {
    v13 = sub_1B8B9B018();
    v14 = v15;
    sub_1B8ADE894((uint64_t)v9, &qword_1ED1B3020);
    (*(void (**)(char *, uint64_t))(v12 + 8))(v7, v11);
  }
  v16 = (uint64_t *)(v2 + v10);
  swift_bridgeObjectRelease();
  *v16 = v13;
  v16[1] = v14;
  return sub_1B8ADE894(a1, &qword_1ED1B3020);
}

void (*EventModelObject.conferenceURLForDisplay.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  size_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  *v3 = v1;
  v4 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED1B3020) - 8) + 64);
  v3[1] = malloc(v4);
  v3[2] = malloc(v4);
  v3[3] = malloc(v4);
  v5 = malloc(v4);
  v3[4] = v5;
  v6 = *(int *)(type metadata accessor for EventModelObject() + 152);
  *((_DWORD *)v3 + 10) = v6;
  if (*(_QWORD *)(v1 + v6 + 8))
  {
    sub_1B8B9B048();
  }
  else
  {
    v7 = sub_1B8B9B054();
    (*(void (**)(void *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5, 1, 1, v7);
  }
  return sub_1B8B72F40;
}

void sub_1B8B72F40(uint64_t a1, char a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  void *v23;
  void *v24;
  void *v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t *v28;

  v2 = *(_QWORD **)a1;
  v3 = *(_QWORD *)(*(_QWORD *)a1 + 32);
  if ((a2 & 1) != 0)
  {
    v5 = v2[1];
    v4 = v2[2];
    sub_1B8ADE850(v3, v4, &qword_1ED1B3020);
    sub_1B8ADE850(v4, v5, &qword_1ED1B3020);
    v6 = sub_1B8B9B054();
    v7 = *(_QWORD *)(v6 - 8);
    v8 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6);
    v9 = v2[1];
    v10 = v2[2];
    if (v8 == 1)
    {
      sub_1B8ADE894(v2[2], &qword_1ED1B3020);
      sub_1B8ADE894(v9, &qword_1ED1B3020);
      v11 = 0;
      v12 = 0;
    }
    else
    {
      v11 = sub_1B8B9B018();
      v12 = v21;
      sub_1B8ADE894(v10, &qword_1ED1B3020);
      (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v9, v6);
    }
    v23 = (void *)v2[3];
    v22 = (void *)v2[4];
    v25 = (void *)v2[1];
    v24 = (void *)v2[2];
    v26 = (uint64_t *)(*v2 + *((int *)v2 + 10));
    swift_bridgeObjectRelease();
    *v26 = v11;
    v26[1] = v12;
    sub_1B8ADE894((uint64_t)v22, &qword_1ED1B3020);
  }
  else
  {
    v13 = v2[3];
    sub_1B8ADE850(v3, v13, &qword_1ED1B3020);
    v14 = sub_1B8B9B054();
    v15 = *(_QWORD *)(v14 - 8);
    v16 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14);
    v17 = v2[3];
    v18 = v2[4];
    if (v16 == 1)
    {
      sub_1B8ADE894(v2[4], &qword_1ED1B3020);
      sub_1B8ADE894(v17, &qword_1ED1B3020);
      v19 = 0;
      v20 = 0;
    }
    else
    {
      v19 = sub_1B8B9B018();
      v20 = v27;
      sub_1B8ADE894(v18, &qword_1ED1B3020);
      (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v17, v14);
    }
    v23 = (void *)v2[3];
    v22 = (void *)v2[4];
    v25 = (void *)v2[1];
    v24 = (void *)v2[2];
    v28 = (uint64_t *)(*v2 + *((int *)v2 + 10));
    swift_bridgeObjectRelease();
    *v28 = v19;
    v28[1] = v20;
  }
  free(v22);
  free(v23);
  free(v24);
  free(v25);
  free(v2);
}

uint64_t EventModelObject.integration.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for EventModelObject() + 156));
  v4 = *v3;
  v5 = v3[1];
  v6 = v3[2];
  v7 = v3[3];
  *a1 = *v3;
  a1[1] = v5;
  a1[2] = v6;
  a1[3] = v7;
  return sub_1B8B79AF4(v4, v5);
}

__n128 EventModelObject.integration.setter(__n128 *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  __n128 result;
  __n128 v6;

  v6 = *a1;
  v2 = a1[1].n128_i64[0];
  v3 = a1[1].n128_i64[1];
  v4 = (uint64_t *)(v1 + *(int *)(type metadata accessor for EventModelObject() + 156));
  sub_1B8B70DEC(*v4, v4[1]);
  result = v6;
  *(__n128 *)v4 = v6;
  v4[2] = v2;
  v4[3] = v3;
  return result;
}

uint64_t (*EventModelObject.integration.modify())(_QWORD)
{
  type metadata accessor for EventModelObject();
  return nullsub_1;
}

uint64_t EventModelObject.isEditable.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for EventModelObject() + 160));
}

uint64_t EventModelObject.isEditable.setter(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for EventModelObject();
  *(_BYTE *)(v1 + *(int *)(result + 160)) = a1;
  return result;
}

uint64_t (*EventModelObject.isEditable.modify())(_QWORD)
{
  type metadata accessor for EventModelObject();
  return nullsub_1;
}

uint64_t EventModelObject.isNew.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for EventModelObject() + 164));
}

uint64_t EventModelObject.isNew.setter(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for EventModelObject();
  *(_BYTE *)(v1 + *(int *)(result + 164)) = a1;
  return result;
}

uint64_t (*EventModelObject.isNew.modify())(_QWORD)
{
  type metadata accessor for EventModelObject();
  return nullsub_1;
}

uint64_t EventModelObject.isSuggestedEvent.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for EventModelObject() + 168));
}

uint64_t EventModelObject.isSuggestedEvent.setter(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for EventModelObject();
  *(_BYTE *)(v1 + *(int *)(result + 168)) = a1;
  return result;
}

uint64_t (*EventModelObject.isSuggestedEvent.modify())(_QWORD)
{
  type metadata accessor for EventModelObject();
  return nullsub_1;
}

uint64_t EventModelObject.constraints.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  int v9;
  unint64_t v10;
  int32x2_t v11;
  int64x2_t v12;
  _BYTE v13[136];
  _BYTE v14[112];
  int8x16_t v15;
  unsigned int v16;
  unsigned __int16 v17;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1BD368);
  MEMORY[0x1E0C80A78](v3);
  v5 = &v13[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = type metadata accessor for EventModelObject();
  sub_1B8ADE850(v1 + *(int *)(v6 + 92), (uint64_t)v5, &qword_1EF1BD368);
  v7 = type metadata accessor for EventCalendarModelObject();
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v5, 1, v7) == 1)
  {
    result = sub_1B8ADE894((uint64_t)v5, &qword_1EF1BD368);
    *(_OWORD *)a1 = xmmword_1B8BA8480;
    *(_WORD *)(a1 + 20) = 0;
    *(_DWORD *)(a1 + 16) = 0;
  }
  else
  {
    sub_1B8B06074((uint64_t)(v5 + 96), (uint64_t)v13, &qword_1EF1BCA40);
    sub_1B8B06074((uint64_t)v13, (uint64_t)v14, &qword_1EF1BCA40);
    v9 = sub_1B8B1079C((uint64_t)v14);
    v10 = v16 | ((unint64_t)v17 << 32);
    if (v9 == 1)
      v10 = 0;
    v11 = vdup_n_s32(v9 == 1);
    v12.i64[0] = v11.u32[0];
    v12.i64[1] = v11.u32[1];
    *(int8x16_t *)a1 = vbslq_s8((int8x16_t)vcltzq_s64(vshlq_n_s64(v12, 0x3FuLL)), (int8x16_t)xmmword_1B8BA8480, v15);
    *(_DWORD *)(a1 + 16) = v10;
    *(_WORD *)(a1 + 20) = WORD2(v10);
    return sub_1B8AE7BD4((uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for EventCalendarModelObject);
  }
  return result;
}

uint64_t EventModelObject.init(_:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  char *v43;
  int *v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  void (*v50)(void);
  uint64_t v51;
  uint64_t v52;
  void (*v53)(uint64_t, uint64_t, uint64_t, uint64_t);
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  void (*v59)(uint64_t, uint64_t, uint64_t, uint64_t);
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  void (*v65)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  int v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  _QWORD *v74;
  int *v75;
  uint64_t *v76;
  uint64_t *v77;
  _QWORD *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  void (*v105)(uint64_t, uint64_t);
  uint64_t AssociatedTypeWitness;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  char *v110;
  uint64_t v111;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  _QWORD *v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t *v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t *v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  _QWORD *v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  void (*v136)(uint64_t, uint64_t);
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  char *v141;
  uint64_t v142;
  uint64_t *v143;
  __int128 *v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  void (*v148)(uint64_t, uint64_t);
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  char *v153;
  uint64_t v154;
  uint64_t *v155;
  _OWORD *v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  void (*v160)(uint64_t, uint64_t);
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  char *v165;
  uint64_t v166;
  uint64_t *v167;
  _OWORD *v168;
  uint64_t v169;
  _QWORD *v170;
  uint64_t v171;
  uint64_t v172;
  double v173;
  _QWORD *v174;
  int *v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  void (*v180)(uint64_t, uint64_t);
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  char *v185;
  uint64_t v186;
  uint64_t *v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  _QWORD *v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  _QWORD *v197;
  int *v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  int64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  char v220;
  uint64_t v221;
  uint64_t v222;
  unint64_t v223;
  unint64_t v224;
  _QWORD *v225;
  uint64_t v226;
  _QWORD *v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t *v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  int64_t v248;
  uint64_t v249;
  unint64_t v250;
  unint64_t v251;
  _QWORD *v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  void (*v256)(uint64_t, uint64_t);
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  char *v261;
  uint64_t v262;
  uint64_t *v263;
  uint64_t v264;
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  uint64_t v268;
  uint64_t v269;
  uint64_t v270;
  uint64_t v271;
  uint64_t v272;
  int64_t v273;
  uint64_t v274;
  unint64_t v275;
  unint64_t v276;
  _QWORD *v277;
  uint64_t v278;
  uint64_t v279;
  uint64_t v280;
  uint64_t v281;
  uint64_t v282;
  int64_t v283;
  uint64_t v284;
  uint64_t v285;
  unint64_t v286;
  unint64_t v287;
  _QWORD *v288;
  uint64_t v289;
  uint64_t v290;
  uint64_t v291;
  void (*v292)(uint64_t, uint64_t);
  uint64_t v293;
  uint64_t v294;
  uint64_t v295;
  uint64_t v296;
  char *v297;
  uint64_t v298;
  uint64_t *v299;
  uint64_t v300;
  uint64_t v301;
  uint64_t v302;
  uint64_t v303;
  _QWORD *v304;
  uint64_t v305;
  uint64_t v306;
  uint64_t v307;
  uint64_t v308;
  uint64_t v309;
  uint64_t *v310;
  uint64_t v311;
  uint64_t v312;
  char v313;
  _QWORD *v314;
  int *v315;
  uint64_t v316;
  uint64_t v317;
  uint64_t v318;
  uint64_t v319;
  uint64_t v320;
  uint64_t *v321;
  uint64_t v322;
  uint64_t v323;
  uint64_t v324;
  uint64_t v325;
  uint64_t v326;
  uint64_t v327;
  uint64_t v328;
  void (*v329)(uint64_t, uint64_t);
  uint64_t v330;
  uint64_t v331;
  uint64_t v332;
  uint64_t v333;
  char *v334;
  uint64_t v335;
  uint64_t *v336;
  uint64_t v337;
  uint64_t v338;
  char v339;
  uint64_t v340;
  uint64_t v341;
  uint64_t v342;
  uint64_t v343;
  uint64_t v344;
  uint64_t v345;
  uint64_t v346;
  uint64_t v347;
  uint64_t v348;
  uint64_t *v349;
  _QWORD *v350;
  uint64_t v351;
  uint64_t v352;
  char v353;
  uint64_t v354;
  int *v355;
  uint64_t v356;
  uint64_t v357;
  uint64_t v358;
  uint64_t v359;
  uint64_t v361;
  char *v362;
  uint64_t v363;
  uint64_t v364;
  char *v365;
  char *v366;
  void (*v367)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v368;
  uint64_t v369;
  char *v370;
  char *v371;
  uint64_t v372;
  char *v373;
  uint64_t *v374;
  char *v375;
  char *v376;
  void (*v377)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v378;
  uint64_t v379;
  char *v380;
  uint64_t v381;
  char *v382;
  uint64_t v383;
  uint64_t v384;
  uint64_t v385;
  uint64_t v386;
  char *v387;
  void (*v388)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v389;
  uint64_t v390;
  uint64_t v391;
  uint64_t v392;
  char *v393;
  uint64_t v394;
  char *v395;
  void (*v396)(void);
  uint64_t v397;
  char *v398;
  uint64_t *v399;
  uint64_t (*v400)(char *, uint64_t, uint64_t);
  uint64_t v401;
  uint64_t *v402;
  uint64_t v403;
  uint64_t v404;
  char *v405;
  char *v406;
  uint64_t v407;
  char *v408;
  uint64_t v409;
  uint64_t v410;
  int *v411;
  _QWORD *v412;
  char *v413;
  char *v414;
  uint64_t v415;
  uint64_t v416;
  char *v417;
  void (*v418)(uint64_t, uint64_t, uint64_t);
  uint64_t v419;
  _QWORD *v420;
  __int128 v421;
  __int128 v422;
  __int128 v423;
  __int128 v424;
  __int128 v425;
  __int128 v426;
  __int128 v427;
  __int128 v428;
  __int128 v429;
  __int128 v430;
  __int128 v431;
  _QWORD v432[3];
  uint64_t v433;
  uint64_t v434;
  _QWORD v435[5];
  __int128 v436;
  uint64_t v437;
  __int128 v438;
  __int128 v439;
  uint64_t v440;
  _OWORD v441[11];
  __int128 v442;
  uint64_t v443;
  _OWORD v444[11];
  __int128 v445;
  __int128 v446;
  uint64_t v447;
  _OWORD v448[11];
  __int128 v449;
  uint64_t v450;
  _OWORD v451[11];
  __int128 v452;
  __int128 v453;
  uint64_t v454;
  __int128 v455;
  __int128 v456;
  __int128 v457;
  __int128 v458;
  __int128 v459;
  __int128 v460;
  __int128 v461;
  __int128 v462;
  __int128 v463;
  __int128 v464;
  __int128 v465;
  __int128 v466;
  uint64_t v467;
  __int128 v468;
  __int128 v469;
  uint64_t AssociatedConformanceWitness;
  __int128 v471;
  __int128 v472;
  uint64_t v473;
  _OWORD v474[11];

  v420 = a1;
  v407 = a2;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1BD378);
  MEMORY[0x1E0C80A78](v2);
  v406 = (char *)&v361 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for EventAttendeeModelObject(0);
  v409 = *(_QWORD *)(v4 - 8);
  v410 = v4;
  v5 = MEMORY[0x1E0C80A78](v4);
  v362 = (char *)&v361 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v395 = (char *)&v361 - v7;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1BD380);
  MEMORY[0x1E0C80A78](v8);
  v393 = (char *)&v361 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for EventRecurrenceRuleModelObject(0);
  v391 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v408 = (char *)&v361 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1B2D18);
  v13 = MEMORY[0x1E0C80A78](v12);
  v386 = (uint64_t)&v361 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x1E0C80A78](v13);
  v387 = (char *)&v361 - v16;
  MEMORY[0x1E0C80A78](v15);
  v417 = (char *)&v361 - v17;
  v18 = type metadata accessor for EventAlarmModelObject();
  v415 = *(_QWORD *)(v18 - 8);
  v416 = v18;
  v19 = MEMORY[0x1E0C80A78](v18);
  v414 = (char *)&v361 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v19);
  v22 = (char *)&v361 - v21;
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1BD368);
  MEMORY[0x1E0C80A78](v23);
  v380 = (char *)&v361 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1BD370);
  MEMORY[0x1E0C80A78](v25);
  v373 = (char *)&v361 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1B8F70);
  MEMORY[0x1E0C80A78](v27);
  v366 = (char *)&v361 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1B3020);
  v30 = MEMORY[0x1E0C80A78](v29);
  v404 = (uint64_t)&v361 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = MEMORY[0x1E0C80A78](v30);
  v403 = (uint64_t)&v361 - v33;
  v34 = MEMORY[0x1E0C80A78](v32);
  v405 = (char *)&v361 - v35;
  v36 = MEMORY[0x1E0C80A78](v34);
  v38 = (char *)&v361 - v37;
  v39 = MEMORY[0x1E0C80A78](v36);
  v41 = (char *)&v361 - v40;
  MEMORY[0x1E0C80A78](v39);
  v43 = (char *)&v361 - v42;
  v44 = (int *)type metadata accessor for EventModelObject();
  v45 = MEMORY[0x1E0C80A78](v44);
  v47 = (char *)&v361 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  v48 = (uint64_t)&v47[*(int *)(v45 + 44)];
  v49 = sub_1B8B9B2B8();
  v50 = *(void (**)(void))(*(_QWORD *)(v49 - 8) + 56);
  v364 = v48;
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v50)(v48, 1, 1, v49);
  v365 = &v47[v44[12]];
  v50();
  v51 = (uint64_t)&v47[v44[14]];
  v52 = type metadata accessor for EventVirtualConferenceModelObject(0);
  v53 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v52 - 8) + 56);
  v368 = v52;
  v369 = v51;
  v367 = v53;
  ((void (*)(uint64_t, uint64_t, uint64_t))v53)(v51, 1, 1);
  v54 = &v47[v44[15]];
  *(_QWORD *)v54 = 0;
  *((_QWORD *)v54 + 1) = 0;
  v370 = v54;
  v55 = &v47[v44[16]];
  *(_QWORD *)v55 = 0;
  *((_QWORD *)v55 + 1) = 0;
  v371 = v55;
  v372 = v44[17];
  *(_QWORD *)&v47[v372] = 0;
  v56 = (uint64_t)&v47[v44[18]];
  sub_1B8B3A420(v474);
  v374 = (uint64_t *)v56;
  sub_1B8B06074((uint64_t)v474, v56, &qword_1EF1BD390);
  v375 = &v47[v44[19]];
  sub_1B8B06074((uint64_t)v474, (uint64_t)v375, &qword_1EF1BD390);
  v376 = &v47[v44[20]];
  sub_1B8B06074((uint64_t)v474, (uint64_t)v376, &qword_1EF1BD390);
  v57 = (uint64_t)&v47[v44[23]];
  v58 = type metadata accessor for EventCalendarModelObject();
  v59 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v58 - 8) + 56);
  v378 = v58;
  v379 = v57;
  v377 = v59;
  ((void (*)(uint64_t, uint64_t, uint64_t))v59)(v57, 1, 1);
  v381 = v44[26];
  *(_QWORD *)&v47[v381] = 0;
  v60 = &v47[v44[27]];
  *(_QWORD *)v60 = 0;
  *((_QWORD *)v60 + 1) = 0;
  v382 = v60;
  v61 = (uint64_t)&v47[v44[29]];
  v62 = sub_1B8B9B0F0();
  v383 = *(_QWORD *)(v62 - 8);
  v384 = v61;
  v418 = *(void (**)(uint64_t, uint64_t, uint64_t))(v383 + 56);
  v419 = v62;
  v418(v61, 1, 1);
  v385 = v44[30];
  *(_QWORD *)&v47[v385] = 0;
  v63 = (uint64_t)&v47[v44[31]];
  v64 = type metadata accessor for EventOrganizerModelObject(0);
  v65 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v64 - 8) + 56);
  v389 = v64;
  v390 = v63;
  v388 = v65;
  ((void (*)(uint64_t, uint64_t, uint64_t))v65)(v63, 1, 1);
  v392 = v44[32];
  *(_QWORD *)&v47[v392] = 0;
  v394 = v44[33];
  *(_QWORD *)&v47[v394] = 0;
  v66 = (uint64_t)&v47[v44[34]];
  v396 = *(void (**)(void))(v409 + 56);
  v397 = v66;
  v396();
  v411 = v44;
  v412 = v47;
  v67 = &v47[v44[35]];
  v68 = sub_1B8B9B054();
  *(_QWORD *)v67 = 0;
  *((_QWORD *)v67 + 1) = 0;
  v398 = v67;
  v69 = *(_QWORD *)(v68 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v69 + 56))(v43, 1, 1, v68);
  sub_1B8ADE850((uint64_t)v43, (uint64_t)v41, &qword_1ED1B3020);
  sub_1B8ADE850((uint64_t)v41, (uint64_t)v38, &qword_1ED1B3020);
  v400 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v69 + 48);
  v70 = v400(v38, 1, v68);
  v401 = v68;
  v363 = v69;
  if (v70 == 1)
  {
    sub_1B8ADE894((uint64_t)v41, &qword_1ED1B3020);
    sub_1B8ADE894((uint64_t)v38, &qword_1ED1B3020);
    v71 = 0;
    v72 = 0;
  }
  else
  {
    v71 = sub_1B8B9B018();
    v72 = v73;
    sub_1B8ADE894((uint64_t)v41, &qword_1ED1B3020);
    (*(void (**)(char *, uint64_t))(v69 + 8))(v38, v68);
  }
  v75 = v411;
  v74 = v412;
  v76 = (_QWORD *)((char *)v412 + v411[38]);
  sub_1B8ADE894((uint64_t)v43, &qword_1ED1B3020);
  *v76 = v71;
  v76[1] = v72;
  v399 = v76;
  v77 = (_QWORD *)((char *)v74 + v75[39]);
  *(_OWORD *)v77 = xmmword_1B8BA8260;
  v77[2] = 0;
  v77[3] = 0;
  v402 = v77;
  v78 = v420;
  v79 = v420[3];
  v80 = v420[4];
  __swift_project_boxed_opaque_existential_1(v420, v79);
  *v74 = (*(uint64_t (**)(uint64_t, uint64_t))(v80 + 152))(v79, v80);
  v74[1] = v81;
  v82 = v78[3];
  v83 = v78[4];
  __swift_project_boxed_opaque_existential_1(v78, v82);
  v74[2] = (*(uint64_t (**)(uint64_t, uint64_t))(v83 + 168))(v82, v83);
  v74[3] = v84;
  v85 = v78[3];
  v86 = v78[4];
  __swift_project_boxed_opaque_existential_1(v78, v85);
  v74[4] = (*(uint64_t (**)(uint64_t, uint64_t))(v86 + 160))(v85, v86);
  v74[5] = v87;
  v88 = v78[3];
  v89 = v78[4];
  __swift_project_boxed_opaque_existential_1(v78, v88);
  (*(void (**)(uint64_t, uint64_t))(v89 + 176))(v88, v89);
  v90 = v78[3];
  v91 = v78[4];
  __swift_project_boxed_opaque_existential_1(v78, v90);
  (*(void (**)(uint64_t, uint64_t))(v91 + 184))(v90, v91);
  v92 = v78[3];
  v93 = v78[4];
  __swift_project_boxed_opaque_existential_1(v78, v92);
  *((_BYTE *)v74 + v75[9]) = (*(uint64_t (**)(uint64_t, uint64_t))(v93 + 200))(v92, v93) & 1;
  v94 = v78[3];
  v95 = v78[4];
  __swift_project_boxed_opaque_existential_1(v78, v94);
  *((_BYTE *)v74 + v75[10]) = (*(uint64_t (**)(uint64_t, uint64_t))(v95 + 208))(v94, v95) & 1;
  v96 = v78[3];
  v97 = v78[4];
  __swift_project_boxed_opaque_existential_1(v78, v96);
  v98 = (uint64_t)v366;
  (*(void (**)(uint64_t, uint64_t))(v97 + 216))(v96, v97);
  sub_1B8B3A864(v98, v364, &qword_1EF1B8F70);
  v99 = v78[3];
  v100 = v78[4];
  __swift_project_boxed_opaque_existential_1(v78, v99);
  (*(void (**)(uint64_t, uint64_t))(v100 + 224))(v99, v100);
  sub_1B8B3A864(v98, (uint64_t)v365, &qword_1EF1B8F70);
  v101 = v78[3];
  v102 = v78[4];
  __swift_project_boxed_opaque_existential_1(v78, v101);
  *((_BYTE *)v74 + v75[13]) = (*(uint64_t (**)(uint64_t, uint64_t))(v102 + 232))(v101, v102) & 1;
  v103 = v78[3];
  v104 = v78[4];
  __swift_project_boxed_opaque_existential_1(v78, v103);
  v105 = *(void (**)(uint64_t, uint64_t))(v104 + 240);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v107 = sub_1B8B9C50C();
  v366 = (char *)&v361;
  v108 = *(_QWORD *)(v107 - 8);
  MEMORY[0x1E0C80A78](v107);
  v110 = (char *)&v361 - v109;
  v105(v103, v104);
  v111 = *(_QWORD *)(AssociatedTypeWitness - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v111 + 48))(v110, 1, AssociatedTypeWitness) == 1)
  {
    (*(void (**)(char *, uint64_t))(v108 + 8))(v110, v107);
    AssociatedConformanceWitness = 0;
    v469 = 0u;
    v468 = 0u;
  }
  else
  {
    *((_QWORD *)&v469 + 1) = AssociatedTypeWitness;
    AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v468);
    (*(void (**)(uint64_t *, char *, uint64_t))(v111 + 32))(boxed_opaque_existential_1, v110, AssociatedTypeWitness);
  }
  v113 = (uint64_t)v373;
  sub_1B8ADE850((uint64_t)&v468, (uint64_t)&v455, &qword_1EF1BE328);
  if (*((_QWORD *)&v456 + 1))
  {
    sub_1B8B0BBC8(&v455, (uint64_t)v451);
    sub_1B8B0FC88((uint64_t)v451, (uint64_t)v448);
    EventVirtualConferenceModelObject.init(_:)(v448, v113);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v451);
    v114 = v113;
    v115 = 0;
  }
  else
  {
    v114 = v113;
    v115 = 1;
  }
  v367(v114, v115, 1, v368);
  sub_1B8ADE894((uint64_t)&v468, &qword_1EF1BE328);
  sub_1B8B3A864(v113, v369, &qword_1EF1BD370);
  v116 = v420;
  v117 = v420[3];
  v118 = v420[4];
  __swift_project_boxed_opaque_existential_1(v420, v117);
  v119 = (*(uint64_t (**)(uint64_t, uint64_t))(v118 + 248))(v117, v118);
  v121 = v120;
  v122 = (uint64_t *)v370;
  swift_bridgeObjectRelease();
  *v122 = v119;
  v122[1] = v121;
  v123 = v116[3];
  v124 = v116[4];
  __swift_project_boxed_opaque_existential_1(v116, v123);
  v125 = (*(uint64_t (**)(uint64_t, uint64_t))(v124 + 256))(v123, v124);
  v127 = v126;
  v128 = (uint64_t *)v371;
  swift_bridgeObjectRelease();
  *v128 = v125;
  v128[1] = v127;
  v129 = v116[3];
  v130 = v116[4];
  __swift_project_boxed_opaque_existential_1(v116, v129);
  v131 = (*(uint64_t (**)(uint64_t, uint64_t))(v130 + 264))(v129, v130);
  v132 = v412;
  v133 = v372;
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)v132 + v133) = v131;
  v134 = v116[3];
  v135 = v116[4];
  __swift_project_boxed_opaque_existential_1(v116, v134);
  v136 = *(void (**)(uint64_t, uint64_t))(v135 + 272);
  v137 = swift_getAssociatedTypeWitness();
  v138 = sub_1B8B9C50C();
  v373 = (char *)&v361;
  v139 = *(_QWORD *)(v138 - 8);
  MEMORY[0x1E0C80A78](v138);
  v141 = (char *)&v361 - v140;
  v136(v134, v135);
  v142 = *(_QWORD *)(v137 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v142 + 48))(v141, 1, v137) == 1)
  {
    (*(void (**)(char *, uint64_t))(v139 + 8))(v141, v138);
    v473 = 0;
    v472 = 0u;
    v471 = 0u;
  }
  else
  {
    *((_QWORD *)&v472 + 1) = v137;
    v473 = swift_getAssociatedConformanceWitness();
    v143 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v471);
    (*(void (**)(uint64_t *, char *, uint64_t))(v142 + 32))(v143, v141, v137);
  }
  sub_1B8ADE850((uint64_t)&v471, (uint64_t)&v466, &qword_1ED1B3038);
  if (v467)
  {
    sub_1B8B0BBC8(&v466, (uint64_t)&v468);
    sub_1B8B0FC88((uint64_t)&v468, (uint64_t)v448);
    EventLocationModelObject.init(_:)(v448, (uint64_t)v451);
    v463 = v451[8];
    v464 = v451[9];
    v465 = v451[10];
    v459 = v451[4];
    v460 = v451[5];
    v462 = v451[7];
    v461 = v451[6];
    v455 = v451[0];
    v456 = v451[1];
    v458 = v451[3];
    v457 = v451[2];
    nullsub_1(&v455);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v468);
    v144 = &v455;
  }
  else
  {
    v144 = v474;
  }
  sub_1B8B06074((uint64_t)v144, (uint64_t)&v468, &qword_1EF1BD390);
  sub_1B8ADE894((uint64_t)&v471, &qword_1ED1B3038);
  v145 = (uint64_t)v374;
  sub_1B8B06074((uint64_t)v374, (uint64_t)&v455, &qword_1EF1BD390);
  sub_1B8B3A53C(&v455, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1B8B3A5A0);
  sub_1B8B06074((uint64_t)&v468, v145, &qword_1EF1BD390);
  v146 = v420[3];
  v147 = v420[4];
  __swift_project_boxed_opaque_existential_1(v420, v146);
  v148 = *(void (**)(uint64_t, uint64_t))(v147 + 280);
  v149 = swift_getAssociatedTypeWitness();
  v150 = sub_1B8B9C50C();
  v374 = &v361;
  v151 = *(_QWORD *)(v150 - 8);
  MEMORY[0x1E0C80A78](v150);
  v153 = (char *)&v361 - v152;
  v148(v146, v147);
  v154 = *(_QWORD *)(v149 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v154 + 48))(v153, 1, v149) == 1)
  {
    (*(void (**)(char *, uint64_t))(v151 + 8))(v153, v150);
    v454 = 0;
    v453 = 0u;
    v452 = 0u;
  }
  else
  {
    *((_QWORD *)&v453 + 1) = v149;
    v454 = swift_getAssociatedConformanceWitness();
    v155 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v452);
    (*(void (**)(uint64_t *, char *, uint64_t))(v154 + 32))(v155, v153, v149);
  }
  sub_1B8ADE850((uint64_t)&v452, (uint64_t)&v449, &qword_1ED1B3038);
  if (v450)
  {
    sub_1B8B0BBC8(&v449, (uint64_t)v451);
    sub_1B8B0FC88((uint64_t)v451, (uint64_t)v441);
    EventLocationModelObject.init(_:)(v441, (uint64_t)v444);
    v448[8] = v444[8];
    v448[9] = v444[9];
    v448[10] = v444[10];
    v448[4] = v444[4];
    v448[5] = v444[5];
    v448[7] = v444[7];
    v448[6] = v444[6];
    v448[0] = v444[0];
    v448[1] = v444[1];
    v448[3] = v444[3];
    v448[2] = v444[2];
    nullsub_1(v448);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v451);
    v156 = v448;
  }
  else
  {
    v156 = v474;
  }
  sub_1B8B06074((uint64_t)v156, (uint64_t)v451, &qword_1EF1BD390);
  sub_1B8ADE894((uint64_t)&v452, &qword_1ED1B3038);
  v157 = (uint64_t)v375;
  sub_1B8B06074((uint64_t)v375, (uint64_t)v448, &qword_1EF1BD390);
  sub_1B8B3A53C(v448, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1B8B3A5A0);
  sub_1B8B06074((uint64_t)v451, v157, &qword_1EF1BD390);
  v158 = v420[3];
  v159 = v420[4];
  __swift_project_boxed_opaque_existential_1(v420, v158);
  v160 = *(void (**)(uint64_t, uint64_t))(v159 + 288);
  v161 = swift_getAssociatedTypeWitness();
  v162 = sub_1B8B9C50C();
  v375 = (char *)&v361;
  v163 = *(_QWORD *)(v162 - 8);
  MEMORY[0x1E0C80A78](v162);
  v165 = (char *)&v361 - v164;
  v160(v158, v159);
  v166 = *(_QWORD *)(v161 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v166 + 48))(v165, 1, v161) == 1)
  {
    (*(void (**)(char *, uint64_t))(v163 + 8))(v165, v162);
    v447 = 0;
    v446 = 0u;
    v445 = 0u;
  }
  else
  {
    *((_QWORD *)&v446 + 1) = v161;
    v447 = swift_getAssociatedConformanceWitness();
    v167 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v445);
    (*(void (**)(uint64_t *, char *, uint64_t))(v166 + 32))(v167, v165, v161);
  }
  sub_1B8ADE850((uint64_t)&v445, (uint64_t)&v442, &qword_1ED1B3038);
  if (v443)
  {
    sub_1B8B0BBC8(&v442, (uint64_t)v444);
    sub_1B8B0FC88((uint64_t)v444, (uint64_t)&v438);
    EventLocationModelObject.init(_:)(&v438, (uint64_t)&v421);
    v441[8] = v429;
    v441[9] = v430;
    v441[10] = v431;
    v441[4] = v425;
    v441[5] = v426;
    v441[6] = v427;
    v441[7] = v428;
    v441[0] = v421;
    v441[1] = v422;
    v441[2] = v423;
    v441[3] = v424;
    nullsub_1(v441);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v444);
    v168 = v441;
  }
  else
  {
    v168 = v474;
  }
  sub_1B8B06074((uint64_t)v168, (uint64_t)v444, &qword_1EF1BD390);
  sub_1B8ADE894((uint64_t)&v445, &qword_1ED1B3038);
  v169 = (uint64_t)v376;
  sub_1B8B06074((uint64_t)v376, (uint64_t)v441, &qword_1EF1BD390);
  sub_1B8B3A53C(v441, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1B8B3A5A0);
  sub_1B8B06074((uint64_t)v444, v169, &qword_1EF1BD390);
  v170 = v420;
  v171 = v420[3];
  v172 = v420[4];
  __swift_project_boxed_opaque_existential_1(v420, v171);
  v173 = (*(double (**)(uint64_t, uint64_t))(v172 + 296))(v171, v172);
  v175 = v411;
  v174 = v412;
  *(double *)((char *)v412 + v411[21]) = v173;
  v176 = v170[3];
  v177 = v170[4];
  __swift_project_boxed_opaque_existential_1(v170, v176);
  *(_QWORD *)((char *)v174 + v175[22]) = (*(uint64_t (**)(uint64_t, uint64_t))(v177 + 304))(v176, v177);
  v178 = v170[3];
  v179 = v170[4];
  __swift_project_boxed_opaque_existential_1(v170, v178);
  v180 = *(void (**)(uint64_t, uint64_t))(v179 + 312);
  v181 = swift_getAssociatedTypeWitness();
  v182 = sub_1B8B9C50C();
  v376 = (char *)&v361;
  v183 = *(_QWORD *)(v182 - 8);
  MEMORY[0x1E0C80A78](v182);
  v185 = (char *)&v361 - v184;
  v180(v178, v179);
  v186 = *(_QWORD *)(v181 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v186 + 48))(v185, 1, v181) == 1)
  {
    (*(void (**)(char *, uint64_t))(v183 + 8))(v185, v182);
    *(_QWORD *)&v423 = 0;
    v421 = 0u;
    v422 = 0u;
  }
  else
  {
    *((_QWORD *)&v422 + 1) = v181;
    *(_QWORD *)&v423 = swift_getAssociatedConformanceWitness();
    v187 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v421);
    (*(void (**)(uint64_t *, char *, uint64_t))(v186 + 32))(v187, v185, v181);
  }
  v188 = (uint64_t)v408;
  v189 = (uint64_t)v380;
  sub_1B8ADE850((uint64_t)&v421, (uint64_t)&v438, &qword_1EF1BE330);
  v190 = v419;
  if (*((_QWORD *)&v439 + 1))
  {
    sub_1B8B0BBC8(&v438, (uint64_t)&v436);
    sub_1B8B0FC88((uint64_t)&v436, (uint64_t)v435);
    EventCalendarModelObject.init(_:)(v435, v189);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v436);
    v191 = v189;
    v192 = 0;
  }
  else
  {
    v191 = v189;
    v192 = 1;
  }
  v377(v191, v192, 1, v378);
  sub_1B8ADE894((uint64_t)&v421, &qword_1EF1BE330);
  sub_1B8B3A864(v189, v379, &qword_1EF1BD368);
  v193 = v420;
  v194 = v420[3];
  v195 = v420[4];
  __swift_project_boxed_opaque_existential_1(v420, v194);
  v196 = (*(uint64_t (**)(uint64_t, uint64_t))(v195 + 320))(v194, v195);
  v198 = v411;
  v197 = v412;
  *(_QWORD *)((char *)v412 + v411[24]) = v196;
  v199 = v193[3];
  v200 = v193[4];
  __swift_project_boxed_opaque_existential_1(v193, v199);
  *(_QWORD *)((char *)v197 + v198[25]) = (*(uint64_t (**)(uint64_t, uint64_t))(v200 + 328))(v199, v200);
  v201 = v193[3];
  v202 = v193[4];
  __swift_project_boxed_opaque_existential_1(v193, v201);
  v203 = (*(uint64_t (**)(uint64_t, uint64_t))(v202 + 336))(v201, v202);
  if (v203)
  {
    swift_getAssociatedTypeWitness();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1BE358);
    v204 = sub_1B8B9C6EC();
    swift_bridgeObjectRelease();
    v205 = *(_QWORD *)(v204 + 16);
    if (v205)
    {
      *(_QWORD *)&v436 = MEMORY[0x1E0DEE9D8];
      sub_1B8B374CC(0, v205, 0);
      v380 = (char *)v204;
      v206 = v204 + 32;
      v413 = v22;
      v207 = (uint64_t)v414;
      do
      {
        sub_1B8B0FC88(v206, (uint64_t)&v421);
        sub_1B8B0FC88((uint64_t)&v421, (uint64_t)&v438);
        v208 = v416;
        v209 = v207 + *(int *)(v416 + 24);
        ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v418)(v209, 1, 1, v419);
        v210 = *((_QWORD *)&v439 + 1);
        v211 = v440;
        __swift_project_boxed_opaque_existential_1(&v438, *((uint64_t *)&v439 + 1));
        *(_QWORD *)v207 = (*(uint64_t (**)(uint64_t, uint64_t))(v211 + 16))(v210, v211);
        *(_QWORD *)(v207 + 8) = v212;
        v213 = *((_QWORD *)&v439 + 1);
        v214 = v440;
        __swift_project_boxed_opaque_existential_1(&v438, *((uint64_t *)&v439 + 1));
        *(double *)(v207 + 16) = (*(double (**)(uint64_t, uint64_t))(v214 + 24))(v213, v214);
        v215 = *((_QWORD *)&v439 + 1);
        v216 = v440;
        __swift_project_boxed_opaque_existential_1(&v438, *((uint64_t *)&v439 + 1));
        v217 = (uint64_t)v417;
        (*(void (**)(uint64_t, uint64_t))(v216 + 32))(v215, v216);
        sub_1B8B3A864(v217, v209, &qword_1ED1B2D18);
        v218 = *((_QWORD *)&v439 + 1);
        v219 = v440;
        __swift_project_boxed_opaque_existential_1(&v438, *((uint64_t *)&v439 + 1));
        v220 = (*(uint64_t (**)(uint64_t, uint64_t))(v219 + 40))(v218, v219);
        v221 = *(int *)(v208 + 28);
        v222 = (uint64_t)v413;
        *(_BYTE *)(v207 + v221) = v220 & 1;
        sub_1B8AE7B90(v207, v222, (uint64_t (*)(_QWORD))type metadata accessor for EventAlarmModelObject);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v438);
        sub_1B8AE7BD4(v207, (uint64_t (*)(_QWORD))type metadata accessor for EventAlarmModelObject);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v421);
        v203 = v436;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1B8B374CC(0, *(_QWORD *)(v203 + 16) + 1, 1);
          v203 = v436;
        }
        v224 = *(_QWORD *)(v203 + 16);
        v223 = *(_QWORD *)(v203 + 24);
        if (v224 >= v223 >> 1)
        {
          sub_1B8B374CC(v223 > 1, v224 + 1, 1);
          v203 = v436;
        }
        *(_QWORD *)(v203 + 16) = v224 + 1;
        sub_1B8AFE0FC(v222, v203+ ((*(unsigned __int8 *)(v415 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v415 + 80))+ *(_QWORD *)(v415 + 72) * v224, (uint64_t (*)(_QWORD))type metadata accessor for EventAlarmModelObject);
        v206 += 40;
        --v205;
      }
      while (v205);
      swift_bridgeObjectRelease();
      v188 = (uint64_t)v408;
      v190 = v419;
    }
    else
    {
      swift_bridgeObjectRelease();
      v203 = MEMORY[0x1E0DEE9D8];
      v188 = (uint64_t)v408;
    }
  }
  v225 = v412;
  v226 = v381;
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)v225 + v226) = v203;
  v227 = v420;
  v228 = v420[3];
  v229 = v420[4];
  __swift_project_boxed_opaque_existential_1(v420, v228);
  v230 = (*(uint64_t (**)(uint64_t, uint64_t))(v229 + 344))(v228, v229);
  v232 = v231;
  v233 = (uint64_t *)v382;
  swift_bridgeObjectRelease();
  *v233 = v230;
  v233[1] = v232;
  v234 = v227[3];
  v235 = v227[4];
  __swift_project_boxed_opaque_existential_1(v227, v234);
  v236 = (*(uint64_t (**)(uint64_t, uint64_t))(v235 + 352))(v234, v235);
  *(_QWORD *)((char *)v225 + v411[28]) = v236;
  v237 = v384;
  v238 = v386;
  sub_1B8ADE850(v384, v386, &qword_1ED1B2D18);
  sub_1B8B0FC88((uint64_t)v227, (uint64_t)&v421);
  v239 = v383;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v383 + 48))(v238, 1, v190) == 1)
  {
    v240 = *((_QWORD *)&v422 + 1);
    v241 = v423;
    __swift_project_boxed_opaque_existential_1(&v421, *((uint64_t *)&v422 + 1));
    v242 = (uint64_t)v387;
    (*(void (**)(uint64_t, uint64_t))(v241 + 176))(v240, v241);
    sub_1B8ADE894(v238, &qword_1ED1B2D18);
  }
  else
  {
    v242 = (uint64_t)v387;
    (*(void (**)(char *, uint64_t, uint64_t))(v239 + 32))(v387, v238, v190);
  }
  v243 = v391;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v421);
  ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v418)(v242, 0, 1, v190);
  sub_1B8B3A864(v242, v237, &qword_1ED1B2D18);
  v244 = v420[3];
  v245 = v420[4];
  __swift_project_boxed_opaque_existential_1(v420, v244);
  v246 = (*(uint64_t (**)(uint64_t, uint64_t))(v245 + 368))(v244, v245);
  if (v246)
  {
    swift_getAssociatedTypeWitness();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1BE350);
    v247 = sub_1B8B9C6EC();
    swift_bridgeObjectRelease();
    v248 = *(_QWORD *)(v247 + 16);
    if (v248)
    {
      v435[0] = MEMORY[0x1E0DEE9D8];
      sub_1B8B375FC(0, v248, 0);
      v249 = v247 + 32;
      v246 = v435[0];
      do
      {
        sub_1B8B0FC88(v249, (uint64_t)&v438);
        sub_1B8B0FC88((uint64_t)&v438, (uint64_t)&v436);
        EventRecurrenceRuleModelObject.init(_:)(&v436, v188);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v438);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1B8B375FC(0, *(_QWORD *)(v246 + 16) + 1, 1);
          v246 = v435[0];
        }
        v251 = *(_QWORD *)(v246 + 16);
        v250 = *(_QWORD *)(v246 + 24);
        if (v251 >= v250 >> 1)
        {
          sub_1B8B375FC(v250 > 1, v251 + 1, 1);
          v246 = v435[0];
        }
        *(_QWORD *)(v246 + 16) = v251 + 1;
        sub_1B8AFE0FC(v188, v246+ ((*(unsigned __int8 *)(v243 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v243 + 80))+ *(_QWORD *)(v243 + 72) * v251, type metadata accessor for EventRecurrenceRuleModelObject);
        v249 += 40;
        --v248;
      }
      while (v248);
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      v246 = MEMORY[0x1E0DEE9D8];
    }
  }
  v252 = v412;
  v253 = v385;
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)v252 + v253) = v246;
  v254 = v420[3];
  v255 = v420[4];
  __swift_project_boxed_opaque_existential_1(v420, v254);
  v256 = *(void (**)(uint64_t, uint64_t))(v255 + 384);
  v257 = swift_getAssociatedTypeWitness();
  v258 = sub_1B8B9C50C();
  v259 = *(_QWORD *)(v258 - 8);
  MEMORY[0x1E0C80A78](v258);
  v261 = (char *)&v361 - v260;
  v256(v254, v255);
  v262 = *(_QWORD *)(v257 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v262 + 48))(v261, 1, v257) == 1)
  {
    (*(void (**)(char *, uint64_t))(v259 + 8))(v261, v258);
    v440 = 0;
    v438 = 0u;
    v439 = 0u;
  }
  else
  {
    *((_QWORD *)&v439 + 1) = v257;
    v440 = swift_getAssociatedConformanceWitness();
    v263 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v438);
    (*(void (**)(uint64_t *, char *, uint64_t))(v262 + 32))(v263, v261, v257);
  }
  v264 = v409;
  v265 = (uint64_t)v395;
  v266 = (uint64_t)v393;
  sub_1B8ADE850((uint64_t)&v438, (uint64_t)&v436, &qword_1EF1BE338);
  if (v437)
  {
    sub_1B8B0BBC8(&v436, (uint64_t)v435);
    sub_1B8B0FC88((uint64_t)v435, (uint64_t)v432);
    EventOrganizerModelObject.init(_:)(v432, v266);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v435);
    v267 = v266;
    v268 = 0;
  }
  else
  {
    v267 = v266;
    v268 = 1;
  }
  v388(v267, v268, 1, v389);
  sub_1B8ADE894((uint64_t)&v438, &qword_1EF1BE338);
  sub_1B8B3A864(v266, v390, &qword_1EF1BD380);
  v269 = v420[3];
  v270 = v420[4];
  __swift_project_boxed_opaque_existential_1(v420, v269);
  v271 = (*(uint64_t (**)(uint64_t, uint64_t))(v270 + 392))(v269, v270);
  if (v271)
  {
    swift_getAssociatedTypeWitness();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1BCA00);
    v272 = sub_1B8B9C6EC();
    swift_bridgeObjectRelease();
    v273 = *(_QWORD *)(v272 + 16);
    if (v273)
    {
      v435[0] = MEMORY[0x1E0DEE9D8];
      sub_1B8B374F8(0, v273, 0);
      v274 = v272 + 32;
      v271 = v435[0];
      do
      {
        sub_1B8B0FC88(v274, (uint64_t)&v438);
        sub_1B8B0FC88((uint64_t)&v438, (uint64_t)&v436);
        EventAttendeeModelObject.init(_:)(&v436, v265);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v438);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1B8B374F8(0, *(_QWORD *)(v271 + 16) + 1, 1);
          v271 = v435[0];
        }
        v276 = *(_QWORD *)(v271 + 16);
        v275 = *(_QWORD *)(v271 + 24);
        if (v276 >= v275 >> 1)
        {
          sub_1B8B374F8(v275 > 1, v276 + 1, 1);
          v271 = v435[0];
        }
        *(_QWORD *)(v271 + 16) = v276 + 1;
        sub_1B8AFE0FC(v265, v271+ ((*(unsigned __int8 *)(v264 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v264 + 80))+ *(_QWORD *)(v264 + 72) * v276, type metadata accessor for EventAttendeeModelObject);
        v274 += 40;
        --v273;
      }
      while (v273);
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      v271 = MEMORY[0x1E0DEE9D8];
    }
  }
  v277 = v412;
  v278 = v392;
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)v277 + v278) = v271;
  v279 = v420[3];
  v280 = v420[4];
  __swift_project_boxed_opaque_existential_1(v420, v279);
  v281 = (*(uint64_t (**)(uint64_t, uint64_t))(v280 + 400))(v279, v280);
  if (v281)
  {
    swift_getAssociatedTypeWitness();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1BCA00);
    v282 = sub_1B8B9C6EC();
    swift_bridgeObjectRelease();
    v283 = *(_QWORD *)(v282 + 16);
    if (v283)
    {
      v435[0] = MEMORY[0x1E0DEE9D8];
      sub_1B8B374F8(0, v283, 0);
      v284 = v282 + 32;
      v281 = v435[0];
      v285 = (uint64_t)v362;
      do
      {
        sub_1B8B0FC88(v284, (uint64_t)&v438);
        sub_1B8B0FC88((uint64_t)&v438, (uint64_t)&v436);
        EventAttendeeModelObject.init(_:)(&v436, v285);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v438);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1B8B374F8(0, *(_QWORD *)(v281 + 16) + 1, 1);
          v281 = v435[0];
        }
        v287 = *(_QWORD *)(v281 + 16);
        v286 = *(_QWORD *)(v281 + 24);
        if (v287 >= v286 >> 1)
        {
          sub_1B8B374F8(v286 > 1, v287 + 1, 1);
          v281 = v435[0];
        }
        *(_QWORD *)(v281 + 16) = v287 + 1;
        sub_1B8AFE0FC(v285, v281+ ((*(unsigned __int8 *)(v264 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v264 + 80))+ *(_QWORD *)(v264 + 72) * v287, type metadata accessor for EventAttendeeModelObject);
        v284 += 40;
        --v283;
      }
      while (v283);
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      v281 = MEMORY[0x1E0DEE9D8];
    }
  }
  v288 = v412;
  v289 = v394;
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)v288 + v289) = v281;
  v290 = v420[3];
  v291 = v420[4];
  __swift_project_boxed_opaque_existential_1(v420, v290);
  v292 = *(void (**)(uint64_t, uint64_t))(v291 + 408);
  v293 = swift_getAssociatedTypeWitness();
  v294 = sub_1B8B9C50C();
  v295 = *(_QWORD *)(v294 - 8);
  MEMORY[0x1E0C80A78](v294);
  v297 = (char *)&v361 - v296;
  v292(v290, v291);
  v298 = *(_QWORD *)(v293 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v298 + 48))(v297, 1, v293) == 1)
  {
    (*(void (**)(char *, uint64_t))(v295 + 8))(v297, v294);
    v440 = 0;
    v438 = 0u;
    v439 = 0u;
  }
  else
  {
    *((_QWORD *)&v439 + 1) = v293;
    v440 = swift_getAssociatedConformanceWitness();
    v299 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v438);
    (*(void (**)(uint64_t *, char *, uint64_t))(v298 + 32))(v299, v297, v293);
  }
  v300 = (uint64_t)v406;
  v301 = v401;
  sub_1B8ADE850((uint64_t)&v438, (uint64_t)&v436, &qword_1EF1BE340);
  if (v437)
  {
    sub_1B8B0BBC8(&v436, (uint64_t)v435);
    sub_1B8B0FC88((uint64_t)v435, (uint64_t)v432);
    EventAttendeeModelObject.init(_:)(v432, v300);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v435);
    v302 = v300;
    v303 = 0;
  }
  else
  {
    v302 = v300;
    v303 = 1;
  }
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v396)(v302, v303, 1, v410);
  sub_1B8ADE894((uint64_t)&v438, &qword_1EF1BE340);
  sub_1B8B3A864(v300, v397, &qword_1EF1BD378);
  v304 = v420;
  v305 = v420[3];
  v306 = v420[4];
  __swift_project_boxed_opaque_existential_1(v420, v305);
  v307 = (*(uint64_t (**)(uint64_t, uint64_t))(v306 + 416))(v305, v306);
  v309 = v308;
  v310 = (uint64_t *)v398;
  swift_bridgeObjectRelease();
  *v310 = v307;
  v310[1] = v309;
  v311 = v304[3];
  v312 = v304[4];
  __swift_project_boxed_opaque_existential_1(v304, v311);
  v313 = (*(uint64_t (**)(uint64_t, uint64_t))(v312 + 424))(v311, v312);
  v315 = v411;
  v314 = v412;
  *((_BYTE *)v412 + v411[36]) = v313 & 1;
  v316 = v304[3];
  v317 = v304[4];
  __swift_project_boxed_opaque_existential_1(v304, v316);
  *((_BYTE *)v314 + v315[37]) = (*(uint64_t (**)(uint64_t, uint64_t))(v317 + 432))(v316, v317) & 1;
  v318 = v304[3];
  v319 = v304[4];
  __swift_project_boxed_opaque_existential_1(v304, v318);
  v320 = (uint64_t)v405;
  (*(void (**)(uint64_t, uint64_t))(v319 + 440))(v318, v319);
  v321 = v399;
  swift_bridgeObjectRelease();
  v322 = v403;
  sub_1B8ADE850(v320, v403, &qword_1ED1B3020);
  v323 = v404;
  sub_1B8ADE850(v322, v404, &qword_1ED1B3020);
  if (v400((char *)v323, 1, v301) == 1)
  {
    sub_1B8ADE894(v322, &qword_1ED1B3020);
    sub_1B8ADE894(v323, &qword_1ED1B3020);
    v324 = 0;
    v325 = 0;
  }
  else
  {
    v324 = sub_1B8B9B018();
    v325 = v326;
    sub_1B8ADE894(v322, &qword_1ED1B3020);
    (*(void (**)(uint64_t, uint64_t))(v363 + 8))(v323, v301);
  }
  *v321 = v324;
  v321[1] = v325;
  sub_1B8ADE894(v320, &qword_1ED1B3020);
  v327 = v420[3];
  v328 = v420[4];
  __swift_project_boxed_opaque_existential_1(v420, v327);
  v329 = *(void (**)(uint64_t, uint64_t))(v328 + 448);
  v330 = swift_getAssociatedTypeWitness();
  v331 = sub_1B8B9C50C();
  v332 = *(_QWORD *)(v331 - 8);
  MEMORY[0x1E0C80A78](v331);
  v334 = (char *)&v361 - v333;
  v329(v327, v328);
  v335 = *(_QWORD *)(v330 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v335 + 48))(v334, 1, v330) == 1)
  {
    (*(void (**)(char *, uint64_t))(v332 + 8))(v334, v331);
    v440 = 0;
    v438 = 0u;
    v439 = 0u;
  }
  else
  {
    *((_QWORD *)&v439 + 1) = v330;
    v440 = swift_getAssociatedConformanceWitness();
    v336 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v438);
    (*(void (**)(uint64_t *, char *, uint64_t))(v335 + 32))(v336, v334, v330);
  }
  sub_1B8ADE850((uint64_t)&v438, (uint64_t)&v436, &qword_1EF1BE348);
  if (v437)
  {
    sub_1B8B0BBC8(&v436, (uint64_t)v435);
    sub_1B8B0FC88((uint64_t)v435, (uint64_t)v432);
    v337 = v433;
    v338 = v434;
    __swift_project_boxed_opaque_existential_1(v432, v433);
    v339 = (*(uint64_t (**)(uint64_t, uint64_t))(v338 + 8))(v337, v338);
    v340 = v433;
    v341 = v434;
    __swift_project_boxed_opaque_existential_1(v432, v433);
    v342 = (*(uint64_t (**)(uint64_t, uint64_t))(v341 + 16))(v340, v341);
    v343 = v433;
    v344 = v434;
    __swift_project_boxed_opaque_existential_1(v432, v433);
    v345 = (*(uint64_t (**)(uint64_t, uint64_t))(v344 + 24))(v343, v344);
    v347 = v346;
    swift_bridgeObjectRetain();
    swift_retain();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v432);
    swift_bridgeObjectRelease();
    swift_release();
    v348 = v339 & 1;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v435);
  }
  else
  {
    v348 = 0;
    v345 = 0;
    v347 = 0;
    v342 = 1;
  }
  sub_1B8ADE894((uint64_t)&v438, &qword_1EF1BE348);
  v349 = v402;
  sub_1B8B70DEC(*v402, v402[1]);
  *v349 = v348;
  v349[1] = v342;
  v349[2] = v345;
  v349[3] = v347;
  v350 = v420;
  v351 = v420[3];
  v352 = v420[4];
  __swift_project_boxed_opaque_existential_1(v420, v351);
  v353 = (*(uint64_t (**)(uint64_t, uint64_t))(v352 + 456))(v351, v352);
  v355 = v411;
  v354 = (uint64_t)v412;
  *((_BYTE *)v412 + v411[40]) = v353 & 1;
  v356 = v350[3];
  v357 = v350[4];
  __swift_project_boxed_opaque_existential_1(v350, v356);
  *(_BYTE *)(v354 + v355[41]) = (*(uint64_t (**)(uint64_t, uint64_t))(v357 + 464))(v356, v357) & 1;
  v358 = v350[3];
  v359 = v350[4];
  __swift_project_boxed_opaque_existential_1(v350, v358);
  *(_BYTE *)(v354 + v355[42]) = (*(uint64_t (**)(uint64_t, uint64_t))(v359 + 472))(v358, v359) & 1;
  sub_1B8AE7B90(v354, v407, (uint64_t (*)(_QWORD))type metadata accessor for EventModelObject);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v350);
  return sub_1B8AE7BD4(v354, (uint64_t (*)(_QWORD))type metadata accessor for EventModelObject);
}

uint64_t EventModelObject.hash(into:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  int *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  int *v41;
  unsigned int (*v42)(_QWORD, _QWORD, _QWORD);
  void (*v43)(char *, char *, uint64_t);
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  unsigned int (*v87)(_QWORD, _QWORD, _QWORD);
  uint64_t v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  int *v113;
  uint64_t v114;
  __int128 v115;
  __int128 v116;
  __int128 v117;
  __int128 v118;
  __int128 v119;
  __int128 v120;
  __int128 v121;
  __int128 v122;
  __int128 v123;
  __int128 v124;
  __int128 v125;
  __int128 v126;
  __int128 v127;
  __int128 v128;
  __int128 v129;
  __int128 v130;
  __int128 v131;
  __int128 v132;
  __int128 v133;
  __int128 v134;
  __int128 v135;
  __int128 v136;
  _OWORD v137[11];
  _OWORD v138[11];
  _OWORD v139[11];
  _OWORD v140[11];
  _BYTE v141[176];
  _BYTE v142[184];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1BD378);
  MEMORY[0x1E0C80A78](v3);
  v111 = (uint64_t)&v87 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v110 = type metadata accessor for EventAttendeeModelObject(0);
  v114 = *(_QWORD *)(v110 - 8);
  v5 = MEMORY[0x1E0C80A78](v110);
  v95 = (uint64_t)&v87 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x1E0C80A78](v5);
  v89 = (char *)&v87 - v8;
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v87 - v9;
  v11 = type metadata accessor for EventOrganizerModelObject(0);
  v108 = *(_QWORD *)(v11 - 8);
  v109 = v11;
  MEMORY[0x1E0C80A78](v11);
  v94 = (uint64_t)&v87 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1BD380);
  MEMORY[0x1E0C80A78](v13);
  v107 = (uint64_t)&v87 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for EventRecurrenceRuleModelObject(0);
  v88 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v87 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_1B8B9B0F0();
  v112 = *(_QWORD *)(v18 - 8);
  MEMORY[0x1E0C80A78](v18);
  v93 = (char *)&v87 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1B2D18);
  MEMORY[0x1E0C80A78](v20);
  v106 = (uint64_t)&v87 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = type metadata accessor for EventCalendarModelObject();
  v101 = *(_QWORD *)(v22 - 8);
  v102 = v22;
  MEMORY[0x1E0C80A78](v22);
  v92 = (uint64_t)&v87 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1BD368);
  MEMORY[0x1E0C80A78](v24);
  v105 = (uint64_t)&v87 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = type metadata accessor for EventVirtualConferenceModelObject(0);
  v99 = *(_QWORD *)(v26 - 8);
  v100 = v26;
  MEMORY[0x1E0C80A78](v26);
  v90 = (uint64_t)&v87 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1BD370);
  MEMORY[0x1E0C80A78](v28);
  v98 = (char *)&v87 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v104 = sub_1B8B9B2B8();
  v113 = *(int **)(v104 - 8);
  MEMORY[0x1E0C80A78](v104);
  v97 = (char *)&v87 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1B8F70);
  v32 = MEMORY[0x1E0C80A78](v31);
  v96 = (uint64_t)&v87 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v32);
  v35 = (char *)&v87 - v34;
  swift_bridgeObjectRetain();
  sub_1B8B9C1E8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1B8B9C1E8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1B8B9C1E8();
  v36 = v1;
  swift_bridgeObjectRelease();
  v37 = (int *)type metadata accessor for EventModelObject();
  v38 = sub_1B8ADBDEC(&qword_1EF1B8F38, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08A8]);
  sub_1B8B9C0C8();
  v39 = v18;
  v40 = v104;
  v103 = v39;
  v91 = v38;
  sub_1B8B9C0C8();
  sub_1B8B9C980();
  sub_1B8B9C980();
  v41 = v113;
  sub_1B8ADE850(v36 + v37[11], (uint64_t)v35, &qword_1EF1B8F70);
  v42 = (unsigned int (*)(_QWORD, _QWORD, _QWORD))*((_QWORD *)v41 + 6);
  if (v42(v35, 1, v40) == 1)
  {
    sub_1B8B9C980();
  }
  else
  {
    v43 = (void (*)(char *, char *, uint64_t))*((_QWORD *)v41 + 4);
    v87 = v42;
    v44 = v97;
    v43(v97, v35, v40);
    sub_1B8B9C980();
    sub_1B8ADBDEC(&qword_1EF1BE360, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB1470], MEMORY[0x1E0CB1490]);
    sub_1B8B9C0C8();
    v45 = v44;
    v42 = v87;
    (*((void (**)(char *, uint64_t))v41 + 1))(v45, v40);
  }
  v46 = v96;
  sub_1B8ADE850(v36 + v37[12], v96, &qword_1EF1B8F70);
  if (v42(v46, 1, v40) == 1)
  {
    sub_1B8B9C980();
  }
  else
  {
    v47 = v46;
    v48 = v97;
    (*((void (**)(char *, uint64_t, uint64_t))v41 + 4))(v97, v47, v40);
    sub_1B8B9C980();
    sub_1B8ADBDEC(&qword_1EF1BE360, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB1470], MEMORY[0x1E0CB1490]);
    sub_1B8B9C0C8();
    (*((void (**)(char *, uint64_t))v41 + 1))(v48, v40);
  }
  v50 = v99;
  v49 = v100;
  v51 = (uint64_t)v98;
  sub_1B8B9C980();
  sub_1B8ADE850(v36 + v37[14], v51, &qword_1EF1BD370);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v50 + 48))(v51, 1, v49) == 1)
  {
    sub_1B8B9C980();
  }
  else
  {
    v52 = v90;
    sub_1B8AFE0FC(v51, v90, type metadata accessor for EventVirtualConferenceModelObject);
    sub_1B8B9C980();
    EventVirtualConferenceModelObject.hash(into:)(a1);
    sub_1B8AE7BD4(v52, type metadata accessor for EventVirtualConferenceModelObject);
  }
  if (*(_QWORD *)(v36 + v37[15] + 8))
  {
    sub_1B8B9C980();
    swift_bridgeObjectRetain();
    sub_1B8B9C1E8();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1B8B9C980();
  }
  if (*(_QWORD *)(v36 + v37[16] + 8))
  {
    sub_1B8B9C980();
    swift_bridgeObjectRetain();
    sub_1B8B9C1E8();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1B8B9C980();
  }
  v53 = *(_QWORD *)(v36 + v37[17]);
  v113 = v37;
  if (v53)
  {
    sub_1B8B9C980();
    sub_1B8B9C974();
    v54 = *(_QWORD *)(v53 + 16);
    if (v54)
    {
      swift_bridgeObjectRetain();
      v55 = v53 + 40;
      do
      {
        swift_bridgeObjectRetain();
        sub_1B8B9C1E8();
        swift_bridgeObjectRelease();
        v55 += 16;
        --v54;
      }
      while (v54);
      swift_bridgeObjectRelease();
      v37 = v113;
    }
  }
  else
  {
    sub_1B8B9C980();
  }
  sub_1B8B06074(v36 + v37[18], (uint64_t)v141, &qword_1EF1BD390);
  sub_1B8B06074((uint64_t)v141, (uint64_t)v142, &qword_1EF1BD390);
  if (sub_1B8B3A3FC((uint64_t)v142) == 1)
  {
    sub_1B8B9C980();
  }
  else
  {
    sub_1B8B06074((uint64_t)v141, (uint64_t)v140, &qword_1EF1BD390);
    v139[8] = v140[8];
    v139[9] = v140[9];
    v139[10] = v140[10];
    v139[4] = v140[4];
    v139[5] = v140[5];
    v139[7] = v140[7];
    v139[6] = v140[6];
    v139[0] = v140[0];
    v139[1] = v140[1];
    v139[2] = v140[2];
    v139[3] = v140[3];
    sub_1B8B9C980();
    EventLocationModelObject.hash(into:)();
  }
  v56 = v102;
  v57 = v103;
  v58 = v101;
  sub_1B8B06074(v36 + v37[19], (uint64_t)v139, &qword_1EF1BD390);
  sub_1B8B06074((uint64_t)v139, (uint64_t)v140, &qword_1EF1BD390);
  if (sub_1B8B3A3FC((uint64_t)v140) == 1)
  {
    sub_1B8B9C980();
  }
  else
  {
    sub_1B8B06074((uint64_t)v139, (uint64_t)v138, &qword_1EF1BD390);
    v137[8] = v138[8];
    v137[9] = v138[9];
    v137[10] = v138[10];
    v137[4] = v138[4];
    v137[5] = v138[5];
    v137[6] = v138[6];
    v137[7] = v138[7];
    v137[0] = v138[0];
    v137[1] = v138[1];
    v137[2] = v138[2];
    v137[3] = v138[3];
    sub_1B8B9C980();
    EventLocationModelObject.hash(into:)();
  }
  sub_1B8B06074(v36 + v37[20], (uint64_t)v137, &qword_1EF1BD390);
  sub_1B8B06074((uint64_t)v137, (uint64_t)v138, &qword_1EF1BD390);
  if (sub_1B8B3A3FC((uint64_t)v138) == 1)
  {
    sub_1B8B9C980();
  }
  else
  {
    sub_1B8B06074((uint64_t)v137, (uint64_t)&v126, &qword_1EF1BD390);
    v123 = v134;
    v124 = v135;
    v125 = v136;
    v119 = v130;
    v120 = v131;
    v121 = v132;
    v122 = v133;
    v115 = v126;
    v116 = v127;
    v117 = v128;
    v118 = v129;
    sub_1B8B9C980();
    EventLocationModelObject.hash(into:)();
  }
  sub_1B8B9C98C();
  sub_1B8B9C974();
  v59 = v105;
  sub_1B8ADE850(v36 + v37[23], v105, &qword_1EF1BD368);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v58 + 48))(v59, 1, v56) == 1)
  {
    sub_1B8B9C980();
  }
  else
  {
    v60 = v92;
    sub_1B8AFE0FC(v59, v92, (uint64_t (*)(_QWORD))type metadata accessor for EventCalendarModelObject);
    sub_1B8B9C980();
    EventCalendarModelObject.hash(into:)();
    sub_1B8AE7BD4(v60, (uint64_t (*)(_QWORD))type metadata accessor for EventCalendarModelObject);
  }
  sub_1B8B9C974();
  sub_1B8B9C974();
  v61 = *(_QWORD *)(v36 + v37[26]);
  sub_1B8B9C980();
  if (v61)
  {
    swift_bridgeObjectRetain();
    sub_1B8B51D7C(a1, v61);
    swift_bridgeObjectRelease();
  }
  if (*(_QWORD *)(v36 + v37[27] + 8))
  {
    sub_1B8B9C980();
    swift_bridgeObjectRetain();
    sub_1B8B9C1E8();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1B8B9C980();
  }
  sub_1B8B9C974();
  v62 = v106;
  sub_1B8ADE850(v36 + v37[29], v106, &qword_1ED1B2D18);
  v63 = v112;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v112 + 48))(v62, 1, v57) == 1)
  {
    sub_1B8B9C980();
  }
  else
  {
    v64 = v93;
    (*(void (**)(char *, uint64_t, uint64_t))(v63 + 32))(v93, v62, v57);
    sub_1B8B9C980();
    sub_1B8B9C0C8();
    (*(void (**)(char *, uint64_t))(v63 + 8))(v64, v57);
  }
  v65 = v37[30];
  v112 = v36;
  v66 = *(_QWORD *)(v36 + v65);
  if (v66)
  {
    sub_1B8B9C980();
    sub_1B8B9C974();
    v67 = *(_QWORD *)(v66 + 16);
    if (v67)
    {
      v68 = v66 + ((*(unsigned __int8 *)(v88 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v88 + 80));
      v69 = *(_QWORD *)(v88 + 72);
      swift_bridgeObjectRetain();
      do
      {
        sub_1B8AE7B90(v68, (uint64_t)v17, type metadata accessor for EventRecurrenceRuleModelObject);
        EventRecurrenceRuleModelObject.hash(into:)();
        sub_1B8AE7BD4((uint64_t)v17, type metadata accessor for EventRecurrenceRuleModelObject);
        v68 += v69;
        --v67;
      }
      while (v67);
      swift_bridgeObjectRelease();
      v37 = v113;
    }
  }
  else
  {
    sub_1B8B9C980();
  }
  v70 = v112;
  v71 = v107;
  sub_1B8ADE850(v112 + v37[31], v107, &qword_1EF1BD380);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v108 + 48))(v71, 1, v109) == 1)
  {
    sub_1B8B9C980();
  }
  else
  {
    v72 = v94;
    sub_1B8AFE0FC(v71, v94, type metadata accessor for EventOrganizerModelObject);
    sub_1B8B9C980();
    EventOrganizerModelObject.hash(into:)();
    sub_1B8AE7BD4(v72, type metadata accessor for EventOrganizerModelObject);
  }
  v73 = *(_QWORD *)(v70 + v37[32]);
  if (v73)
  {
    sub_1B8B9C980();
    sub_1B8B9C974();
    v74 = *(_QWORD *)(v73 + 16);
    if (v74)
    {
      v75 = v73 + ((*(unsigned __int8 *)(v114 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v114 + 80));
      v76 = *(_QWORD *)(v114 + 72);
      swift_bridgeObjectRetain();
      do
      {
        sub_1B8AE7B90(v75, (uint64_t)v10, type metadata accessor for EventAttendeeModelObject);
        EventAttendeeModelObject.hash(into:)();
        sub_1B8AE7BD4((uint64_t)v10, type metadata accessor for EventAttendeeModelObject);
        v75 += v76;
        --v74;
      }
      while (v74);
      swift_bridgeObjectRelease();
      v37 = v113;
    }
  }
  else
  {
    sub_1B8B9C980();
  }
  v77 = *(_QWORD *)(v70 + v37[33]);
  if (v77)
  {
    sub_1B8B9C980();
    sub_1B8B9C974();
    v78 = *(_QWORD *)(v77 + 16);
    if (v78)
    {
      v79 = v77 + ((*(unsigned __int8 *)(v114 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v114 + 80));
      v80 = *(_QWORD *)(v114 + 72);
      swift_bridgeObjectRetain();
      v81 = (uint64_t)v89;
      do
      {
        sub_1B8AE7B90(v79, v81, type metadata accessor for EventAttendeeModelObject);
        EventAttendeeModelObject.hash(into:)();
        sub_1B8AE7BD4(v81, type metadata accessor for EventAttendeeModelObject);
        v79 += v80;
        --v78;
      }
      while (v78);
      swift_bridgeObjectRelease();
      v37 = v113;
    }
  }
  else
  {
    sub_1B8B9C980();
  }
  v82 = v111;
  sub_1B8ADE850(v70 + v37[34], v111, &qword_1EF1BD378);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v114 + 48))(v82, 1, v110) == 1)
  {
    sub_1B8B9C980();
  }
  else
  {
    v83 = v95;
    sub_1B8AFE0FC(v82, v95, type metadata accessor for EventAttendeeModelObject);
    sub_1B8B9C980();
    EventAttendeeModelObject.hash(into:)();
    sub_1B8AE7BD4(v83, type metadata accessor for EventAttendeeModelObject);
  }
  if (*(_QWORD *)(v70 + v37[35] + 8))
  {
    sub_1B8B9C980();
    swift_bridgeObjectRetain();
    sub_1B8B9C1E8();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1B8B9C980();
  }
  sub_1B8B9C980();
  sub_1B8B9C980();
  if (*(_QWORD *)(v70 + v37[38] + 8))
  {
    sub_1B8B9C980();
    swift_bridgeObjectRetain();
    sub_1B8B9C1E8();
  }
  else
  {
    sub_1B8B9C980();
  }
  swift_bridgeObjectRelease();
  v84 = v70 + v37[39];
  v85 = *(_QWORD *)(v84 + 8);
  if (v85 == 1)
  {
    sub_1B8B9C980();
  }
  else
  {
    LOBYTE(v126) = *(_BYTE *)v84 & 1;
    *((_QWORD *)&v126 + 1) = v85;
    v127 = *(_OWORD *)(v84 + 16);
    sub_1B8B9C980();
    EventIntegrationModelObject.hash(into:)();
  }
  sub_1B8B9C980();
  sub_1B8B9C980();
  return sub_1B8B9C980();
}

uint64_t sub_1B8B76A34(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1B8B76A5C + 4 * byte_1B8BADF30[a1]))(25705, 0xE200000000000000);
}

uint64_t sub_1B8B76A5C()
{
  return 0x4449657571696E75;
}

uint64_t sub_1B8B76A74()
{
  return 0x656C746974;
}

uint64_t sub_1B8B76A88()
{
  return 0x7461447472617473;
}

uint64_t sub_1B8B76AA4()
{
  return 0x65746144646E65;
}

uint64_t sub_1B8B76ABC()
{
  return 0x7961446C6C417369;
}

uint64_t sub_1B8B76AD4()
{
  return 0x736F706F72507369;
}

uint64_t sub_1B8B76AF8()
{
  return 0x6D69547472617473;
}

uint64_t sub_1B8B76B1C()
{
  return 0x5A656D6954646E65;
}

uint64_t sub_1B8B76B3C()
{
  return 0x6974616F6C467369;
}

unint64_t sub_1B8B76B60()
{
  return 0xD000000000000011;
}

uint64_t sub_1B8B76C2C()
{
  return 0x7261646E656C6163;
}

uint64_t sub_1B8B76C44()
{
  return 0x4C79636176697270;
}

uint64_t sub_1B8B76C64()
{
  return 0x737574617473;
}

uint64_t sub_1B8B76C78()
{
  return 0x736D72616C61;
}

uint64_t sub_1B8B76C8C()
{
  return 0x7365746F6ELL;
}

uint64_t sub_1B8B76CA0()
{
  return 0x6962616C69617661;
}

uint64_t sub_1B8B76CC0()
{
  return 0x6E65727275636572;
}

uint64_t sub_1B8B76CF8()
{
  return 0x657A696E6167726FLL;
}

uint64_t sub_1B8B76D18()
{
  return 0x6565646E65747461;
}

unint64_t sub_1B8B76D38()
{
  return 0xD000000000000034;
}

uint64_t sub_1B8B76D50()
{
  return 0x65747441666C6573;
}

uint64_t sub_1B8B76D70()
{
  return 0x6E697274536C7275;
}

uint64_t sub_1B8B76D90()
{
  return 0x6361747441736168;
}

unint64_t sub_1B8B76DB4()
{
  return 0xD00000000000001DLL;
}

unint64_t sub_1B8B76DCC()
{
  return 0xD000000000000017;
}

uint64_t sub_1B8B76DE4()
{
  return 0x7461726765746E69;
}

uint64_t sub_1B8B76E04()
{
  return 0x6261746964457369;
}

uint64_t sub_1B8B76E20()
{
  return 0x77654E7369;
}

void sub_1B8B76E34()
{
  JUMPOUT(0x1B8B76E48);
}

uint64_t sub_1B8B76E54()
{
  unsigned __int8 *v0;

  return sub_1B8B76A34(*v0);
}

uint64_t sub_1B8B76E5C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1B8B83834(a1, a2);
  *a3 = result;
  return result;
}

void sub_1B8B76E80(_BYTE *a1@<X8>)
{
  *a1 = 39;
}

uint64_t sub_1B8B76E8C()
{
  sub_1B8B7BC50();
  return sub_1B8B9C9E0();
}

uint64_t sub_1B8B76EB4()
{
  sub_1B8B7BC50();
  return sub_1B8B9C9EC();
}

uint64_t EventModelObject.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  _OWORD *v10;
  __int128 v11;
  uint64_t v13;
  unint64_t v14;
  int *v15;
  char v16;
  _OWORD v17[11];
  _BYTE v18[184];
  uint64_t v19;
  _BYTE v20[184];
  uint64_t v21;
  _BYTE v22[192];
  uint64_t v23;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1BE368);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1B8B7BC50();
  sub_1B8B9C9C8();
  v22[0] = 0;
  sub_1B8B9C86C();
  if (!v2)
  {
    v22[0] = 1;
    sub_1B8B9C86C();
    v22[0] = 2;
    sub_1B8B9C86C();
    v15 = (int *)type metadata accessor for EventModelObject();
    v22[0] = 3;
    sub_1B8B9B0F0();
    sub_1B8ADBDEC(&qword_1EF1B8F30, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB0890]);
    sub_1B8B9C8A8();
    v22[0] = 4;
    sub_1B8B9C8A8();
    v22[0] = 5;
    sub_1B8B9C878();
    v22[0] = 6;
    sub_1B8B9C878();
    v14 = v3 + v15[11];
    v22[0] = 7;
    v9 = sub_1B8B9B2B8();
    v13 = sub_1B8ADBDEC(&qword_1EF1BE378, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB1470], MEMORY[0x1E0CB1488]);
    v14 = v9;
    sub_1B8B9C860();
    v22[0] = 8;
    sub_1B8B9C860();
    v22[0] = 9;
    sub_1B8B9C878();
    v14 = v3 + v15[14];
    v22[0] = 10;
    type metadata accessor for EventVirtualConferenceModelObject(0);
    sub_1B8ADBDEC(&qword_1EF1BE380, type metadata accessor for EventVirtualConferenceModelObject, (uint64_t)&protocol conformance descriptor for EventVirtualConferenceModelObject);
    sub_1B8B9C860();
    v22[0] = 11;
    sub_1B8B9C848();
    v22[0] = 12;
    sub_1B8B9C848();
    v23 = *(_QWORD *)(v3 + v15[17]);
    v22[183] = 13;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1BCA78);
    sub_1B8B132D8(&qword_1EF1BCA80, MEMORY[0x1E0DEA970], MEMORY[0x1E0DEAF10]);
    sub_1B8B9C860();
    sub_1B8B06074(v3 + v15[18], (uint64_t)v22, &qword_1EF1BD390);
    sub_1B8B06074((uint64_t)v22, (uint64_t)&v21, &qword_1EF1BD390);
    v20[183] = 14;
    v14 = sub_1B8B7BC94();
    sub_1B8B9C860();
    sub_1B8B06074(v3 + v15[19], (uint64_t)v20, &qword_1EF1BD390);
    sub_1B8B06074((uint64_t)v20, (uint64_t)&v19, &qword_1EF1BD390);
    v18[183] = 15;
    sub_1B8B9C860();
    sub_1B8B06074(v3 + v15[20], (uint64_t)v18, &qword_1EF1BD390);
    sub_1B8B06074((uint64_t)v18, (uint64_t)v17, &qword_1EF1BD390);
    v16 = 16;
    sub_1B8B9C860();
    LOBYTE(v17[0]) = 17;
    sub_1B8B9C884();
    *(_QWORD *)&v17[0] = *(_QWORD *)(v3 + v15[22]);
    v16 = 18;
    type metadata accessor for EKLocationRoutingMode(0);
    sub_1B8ADBDEC(&qword_1EF1BE390, (uint64_t (*)(uint64_t))type metadata accessor for EKLocationRoutingMode, (uint64_t)&protocol conformance descriptor for EKLocationRoutingMode);
    sub_1B8B9C8A8();
    v14 = v3 + v15[23];
    LOBYTE(v17[0]) = 19;
    type metadata accessor for EventCalendarModelObject();
    sub_1B8ADBDEC(&qword_1EF1BE398, (uint64_t (*)(uint64_t))type metadata accessor for EventCalendarModelObject, (uint64_t)&protocol conformance descriptor for EventCalendarModelObject);
    sub_1B8B9C860();
    *(_QWORD *)&v17[0] = *(_QWORD *)(v3 + v15[24]);
    v16 = 20;
    type metadata accessor for EKPrivacyLevel(0);
    sub_1B8ADBDEC(&qword_1EF1BDC78, (uint64_t (*)(uint64_t))type metadata accessor for EKPrivacyLevel, (uint64_t)&protocol conformance descriptor for EKPrivacyLevel);
    sub_1B8B9C8A8();
    *(_QWORD *)&v17[0] = *(_QWORD *)(v3 + v15[25]);
    v16 = 21;
    type metadata accessor for EKEventStatus(0);
    sub_1B8ADBDEC(&qword_1EF1BE3A0, (uint64_t (*)(uint64_t))type metadata accessor for EKEventStatus, (uint64_t)&protocol conformance descriptor for EKEventStatus);
    sub_1B8B9C8A8();
    *(_QWORD *)&v17[0] = *(_QWORD *)(v3 + v15[26]);
    v16 = 22;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1BE3A8);
    sub_1B8B7BCD8();
    sub_1B8B9C860();
    LOBYTE(v17[0]) = 23;
    sub_1B8B9C848();
    *(_QWORD *)&v17[0] = *(_QWORD *)(v3 + v15[28]);
    v16 = 24;
    type metadata accessor for EKEventAvailability(0);
    sub_1B8ADBDEC(&qword_1EF1BE3C0, (uint64_t (*)(uint64_t))type metadata accessor for EKEventAvailability, (uint64_t)&protocol conformance descriptor for EKEventAvailability);
    sub_1B8B9C8A8();
    LOBYTE(v17[0]) = 25;
    sub_1B8B9C860();
    *(_QWORD *)&v17[0] = *(_QWORD *)(v3 + v15[30]);
    v16 = 26;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1BE3C8);
    sub_1B8B7BD54();
    sub_1B8B9C860();
    LOBYTE(v17[0]) = 27;
    type metadata accessor for EventOrganizerModelObject(0);
    sub_1B8ADBDEC(&qword_1EF1BE3E0, type metadata accessor for EventOrganizerModelObject, (uint64_t)&protocol conformance descriptor for EventOrganizerModelObject);
    sub_1B8B9C860();
    *(_QWORD *)&v17[0] = *(_QWORD *)(v3 + v15[32]);
    v16 = 28;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1BE3E8);
    sub_1B8B7BDD0();
    sub_1B8B9C860();
    *(_QWORD *)&v17[0] = *(_QWORD *)(v3 + v15[33]);
    v16 = 29;
    sub_1B8B9C860();
    LOBYTE(v17[0]) = 30;
    type metadata accessor for EventAttendeeModelObject(0);
    sub_1B8ADBDEC(&qword_1EF1BE3F8, type metadata accessor for EventAttendeeModelObject, (uint64_t)&protocol conformance descriptor for EventAttendeeModelObject);
    sub_1B8B9C860();
    LOBYTE(v17[0]) = 31;
    sub_1B8B9C848();
    LOBYTE(v17[0]) = 32;
    sub_1B8B9C878();
    LOBYTE(v17[0]) = 33;
    sub_1B8B9C878();
    v17[0] = *(_OWORD *)(v3 + v15[38]);
    v16 = 34;
    sub_1B8B7BE4C();
    sub_1B8B9C8A8();
    v10 = (_OWORD *)(v3 + v15[39]);
    v11 = v10[1];
    v17[0] = *v10;
    v17[1] = v11;
    v16 = 35;
    sub_1B8B7BE90();
    sub_1B8B9C860();
    LOBYTE(v17[0]) = 36;
    sub_1B8B9C878();
    LOBYTE(v17[0]) = 37;
    sub_1B8B9C878();
    LOBYTE(v17[0]) = 38;
    sub_1B8B9C878();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t EventModelObject.hashValue.getter()
{
  _BYTE v1[72];

  sub_1B8B9C968();
  EventModelObject.hash(into:)((uint64_t)v1);
  return sub_1B8B9C998();
}

uint64_t EventModelObject.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  char *v30;
  int *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(void);
  uint64_t v38;
  uint64_t v39;
  void (*v40)(uint64_t, uint64_t, uint64_t);
  uint64_t *v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void (*v48)(uint64_t, uint64_t, uint64_t);
  uint64_t *v49;
  void (*v50)(void);
  uint64_t v51;
  uint64_t v52;
  void (*v53)(uint64_t, uint64_t, uint64_t);
  uint64_t v54;
  uint64_t v55;
  void (*v56)(uint64_t, uint64_t, uint64_t);
  uint64_t *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t *v63;
  uint64_t v64;
  int *v65;
  uint64_t *v66;
  _QWORD *v67;
  char *v68;
  uint64_t *v69;
  char v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  void (*v77)(char *, uint64_t);
  char *v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  char v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t *v127;
  uint64_t v128;
  char v129;
  __int128 v130;
  uint64_t *v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t *v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  char *v150;
  __int128 v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t *v154;
  uint64_t *v155;
  uint64_t *v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t *v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t *v170;
  uint64_t *v171;
  uint64_t v172;
  uint64_t v173;
  _QWORD *v174;
  int *v175;
  char *v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  __int128 v180;
  uint64_t v181;
  uint64_t v182;
  _BYTE v183[176];
  _QWORD v184[22];
  uint64_t v185;
  _BYTE v186[176];
  _QWORD v187[22];
  uint64_t v188;
  _QWORD v189[22];
  _QWORD v190[22];
  _QWORD v191[22];
  _OWORD v192[11];
  char v193;
  char v194;
  char v195;
  char v196;

  v174 = a1;
  v144 = a2;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1BD378);
  MEMORY[0x1E0C80A78](v2);
  v143 = (uint64_t)&v135 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1BD380);
  MEMORY[0x1E0C80A78](v4);
  v142 = (uint64_t)&v135 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1B2D18);
  MEMORY[0x1E0C80A78](v6);
  v141 = (uint64_t)&v135 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1BD368);
  MEMORY[0x1E0C80A78](v8);
  v138 = (uint64_t)&v135 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1BD370);
  MEMORY[0x1E0C80A78](v10);
  v146 = (uint64_t)&v135 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1B8F70);
  v13 = MEMORY[0x1E0C80A78](v12);
  v147 = (uint64_t)&v135 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v149 = (uint64_t)&v135 - v15;
  v16 = sub_1B8B9B0F0();
  v178 = *(_QWORD *)(v16 - 8);
  v179 = v16;
  v17 = MEMORY[0x1E0C80A78](v16);
  v150 = (char *)&v135 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17);
  *(_QWORD *)&v151 = (char *)&v135 - v19;
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1BE410);
  v152 = *(_QWORD *)(v20 - 8);
  v153 = v20;
  MEMORY[0x1E0C80A78](v20);
  v176 = (char *)&v135 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1B3020);
  v23 = MEMORY[0x1E0C80A78](v22);
  v25 = (char *)&v135 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = MEMORY[0x1E0C80A78](v23);
  v28 = (char *)&v135 - v27;
  MEMORY[0x1E0C80A78](v26);
  v30 = (char *)&v135 - v29;
  v31 = (int *)type metadata accessor for EventModelObject();
  v32 = MEMORY[0x1E0C80A78](v31);
  v34 = (uint64_t *)((char *)&v135 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0));
  v35 = (uint64_t)v34 + *(int *)(v32 + 44);
  v36 = sub_1B8B9B2B8();
  v37 = *(void (**)(void))(*(_QWORD *)(v36 - 8) + 56);
  v177 = v35;
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v37)(v35, 1, 1, v36);
  v173 = (uint64_t)v34 + v31[12];
  v148 = v36;
  v37();
  v38 = (uint64_t)v34 + v31[14];
  v39 = type metadata accessor for EventVirtualConferenceModelObject(0);
  v40 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 56);
  v172 = v38;
  v145 = v39;
  v40(v38, 1, 1);
  v41 = (uint64_t *)((char *)v34 + v31[15]);
  *v41 = 0;
  v41[1] = 0;
  v171 = v41;
  v42 = (uint64_t *)((char *)v34 + v31[16]);
  *v42 = 0;
  v42[1] = 0;
  v170 = v42;
  v169 = v31[17];
  *(uint64_t *)((char *)v34 + v169) = 0;
  v43 = (uint64_t)v34 + v31[18];
  sub_1B8B3A420(v192);
  v166 = v43;
  v44 = v43;
  v45 = (uint64_t)v30;
  sub_1B8B06074((uint64_t)v192, v44, &qword_1EF1BD390);
  v164 = (uint64_t)v34 + v31[19];
  sub_1B8B06074((uint64_t)v192, v164, &qword_1EF1BD390);
  v167 = (uint64_t)v34 + v31[20];
  sub_1B8B06074((uint64_t)v192, v167, &qword_1EF1BD390);
  v46 = (uint64_t)v34 + v31[23];
  v47 = type metadata accessor for EventCalendarModelObject();
  v48 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v47 - 8) + 56);
  v168 = v46;
  v137 = v47;
  v48(v46, 1, 1);
  v161 = v31[26];
  *(uint64_t *)((char *)v34 + v161) = 0;
  v49 = (uint64_t *)((char *)v34 + v31[27]);
  *v49 = 0;
  v49[1] = 0;
  v162 = v49;
  v50 = *(void (**)(void))(v178 + 56);
  v165 = (uint64_t)v34 + v31[29];
  v50();
  v160 = v31[30];
  *(uint64_t *)((char *)v34 + v160) = 0;
  v51 = (uint64_t)v34 + v31[31];
  v52 = type metadata accessor for EventOrganizerModelObject(0);
  v53 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v52 - 8) + 56);
  v163 = v51;
  v139 = v52;
  v53(v51, 1, 1);
  v157 = v31[32];
  *(uint64_t *)((char *)v34 + v157) = 0;
  v158 = v31[33];
  *(uint64_t *)((char *)v34 + v158) = 0;
  v54 = (uint64_t)v34 + v31[34];
  v55 = type metadata accessor for EventAttendeeModelObject(0);
  v56 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v55 - 8) + 56);
  v159 = v54;
  v140 = v55;
  v56(v54, 1, 1);
  v175 = v31;
  v57 = (uint64_t *)((char *)v34 + v31[35]);
  v58 = sub_1B8B9B054();
  *v57 = 0;
  v57[1] = 0;
  v156 = v57;
  v59 = *(_QWORD *)(v58 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v59 + 56))(v45, 1, 1, v58);
  sub_1B8ADE850(v45, (uint64_t)v28, &qword_1ED1B3020);
  sub_1B8ADE850((uint64_t)v28, (uint64_t)v25, &qword_1ED1B3020);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v59 + 48))(v25, 1, v58) == 1)
  {
    sub_1B8ADE894((uint64_t)v28, &qword_1ED1B3020);
    sub_1B8ADE894((uint64_t)v25, &qword_1ED1B3020);
    v60 = 0;
    v61 = 0;
  }
  else
  {
    v60 = sub_1B8B9B018();
    v61 = v62;
    sub_1B8ADE894((uint64_t)v28, &qword_1ED1B3020);
    (*(void (**)(char *, uint64_t))(v59 + 8))(v25, v58);
  }
  v63 = (uint64_t *)((char *)v34 + v175[38]);
  v64 = v45;
  v65 = v175;
  sub_1B8ADE894(v64, &qword_1ED1B3020);
  *v63 = v60;
  v63[1] = v61;
  v66 = (uint64_t *)((char *)v34 + v65[39]);
  *(_OWORD *)v66 = xmmword_1B8BA8260;
  v66[2] = 0;
  v66[3] = 0;
  v155 = v66;
  v67 = v174;
  __swift_project_boxed_opaque_existential_1(v174, v174[3]);
  sub_1B8B7BC50();
  v68 = v176;
  v69 = v154;
  sub_1B8B9C9B0();
  if (v69)
  {
    v70 = 0x80;
    v71 = v179;
    goto LABEL_7;
  }
  v154 = v63;
  LOBYTE(v191[0]) = 0;
  v72 = v153;
  v73 = sub_1B8B9C7DC();
  v71 = v179;
  *v34 = v73;
  v34[1] = v74;
  LOBYTE(v191[0]) = 1;
  v34[2] = sub_1B8B9C7DC();
  v34[3] = v75;
  LOBYTE(v191[0]) = 2;
  v34[4] = sub_1B8B9C7DC();
  v34[5] = v76;
  LOBYTE(v191[0]) = 3;
  v135 = sub_1B8ADBDEC(&qword_1EF1BDBD0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08C0]);
  sub_1B8B9C818();
  v79 = (char *)v34 + v65[7];
  v136 = 0;
  v80 = v151;
  *(_QWORD *)&v151 = *(_QWORD *)(v178 + 32);
  ((void (*)(char *, uint64_t, uint64_t))v151)(v79, v80, v71);
  LOBYTE(v191[0]) = 4;
  v81 = v150;
  v82 = v136;
  sub_1B8B9C818();
  v136 = v82;
  if (v82)
  {
    (*(void (**)(char *, uint64_t))(v152 + 8))(v68, v72);
    v70 = -113;
    goto LABEL_7;
  }
  ((void (*)(char *, char *, uint64_t))v151)((char *)v34 + v65[8], v81, v71);
  LOBYTE(v191[0]) = 5;
  v83 = v136;
  v84 = sub_1B8B9C7E8();
  if (v83)
    goto LABEL_23;
  *((_BYTE *)v34 + v65[9]) = v84 & 1;
  LOBYTE(v191[0]) = 6;
  *((_BYTE *)v34 + v65[10]) = sub_1B8B9C7E8() & 1;
  LOBYTE(v191[0]) = 7;
  *(_QWORD *)&v151 = sub_1B8ADBDEC(&qword_1EF1BE418, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB1470], MEMORY[0x1E0CB14A0]);
  sub_1B8B9C7D0();
  v136 = 0;
  sub_1B8B3A864(v149, v177, &qword_1EF1B8F70);
  LOBYTE(v191[0]) = 8;
  v85 = v136;
  sub_1B8B9C7D0();
  if (v85)
  {
LABEL_23:
    v70 = -97;
    (*(void (**)(char *, uint64_t))(v152 + 8))(v68, v72);
    goto LABEL_7;
  }
  sub_1B8B3A864(v147, v173, &qword_1EF1B8F70);
  LOBYTE(v191[0]) = 9;
  *((_BYTE *)v34 + v175[13]) = sub_1B8B9C7E8() & 1;
  LOBYTE(v191[0]) = 10;
  sub_1B8ADBDEC(&qword_1EF1BE420, type metadata accessor for EventVirtualConferenceModelObject, (uint64_t)&protocol conformance descriptor for EventVirtualConferenceModelObject);
  sub_1B8B9C7D0();
  sub_1B8B3A864(v146, v172, &qword_1EF1BD370);
  LOBYTE(v191[0]) = 11;
  v86 = sub_1B8B9C7A0();
  v136 = 0;
  v88 = v86;
  v89 = v87;
  v90 = v171;
  swift_bridgeObjectRelease();
  *v90 = v88;
  v90[1] = v89;
  LOBYTE(v191[0]) = 12;
  v91 = v136;
  v92 = sub_1B8B9C7A0();
  v136 = v91;
  if (v91)
    goto LABEL_29;
  v94 = v92;
  v95 = v93;
  v96 = v170;
  swift_bridgeObjectRelease();
  *v96 = v94;
  v96[1] = v95;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1BCA78);
  LOBYTE(v190[0]) = 13;
  sub_1B8B132D8(&qword_1EF1BCAA8, MEMORY[0x1E0DEA9A0], MEMORY[0x1E0DEAF40]);
  v97 = v136;
  sub_1B8B9C7D0();
  v136 = v97;
  if (v97)
    goto LABEL_29;
  v98 = v191[0];
  v99 = v169;
  swift_bridgeObjectRelease();
  *(uint64_t *)((char *)v34 + v99) = v98;
  v196 = 14;
  sub_1B8B7BED4();
  v100 = v136;
  sub_1B8B9C7D0();
  if (v100)
    goto LABEL_29;
  sub_1B8B06074((uint64_t)v191, (uint64_t)v189, &qword_1EF1BD390);
  v101 = v166;
  sub_1B8B06074(v166, (uint64_t)v190, &qword_1EF1BD390);
  sub_1B8B3A53C(v190, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1B8B3A5A0);
  sub_1B8B06074((uint64_t)v189, v101, &qword_1EF1BD390);
  v195 = 15;
  sub_1B8B9C7D0();
  sub_1B8B06074((uint64_t)&v188, (uint64_t)v186, &qword_1EF1BD390);
  v102 = v164;
  sub_1B8B06074(v164, (uint64_t)v187, &qword_1EF1BD390);
  sub_1B8B3A53C(v187, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1B8B3A5A0);
  sub_1B8B06074((uint64_t)v186, v102, &qword_1EF1BD390);
  v194 = 16;
  sub_1B8B9C7D0();
  v136 = 0;
  sub_1B8B06074((uint64_t)&v185, (uint64_t)v183, &qword_1EF1BD390);
  v103 = v167;
  sub_1B8B06074(v167, (uint64_t)v184, &qword_1EF1BD390);
  sub_1B8B3A53C(v184, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1B8B3A5A0);
  sub_1B8B06074((uint64_t)v183, v103, &qword_1EF1BD390);
  LOBYTE(v180) = 17;
  v104 = v136;
  sub_1B8B9C7F4();
  if (v104)
    goto LABEL_29;
  *(uint64_t *)((char *)v34 + v175[21]) = v105;
  type metadata accessor for EKLocationRoutingMode(0);
  v193 = 18;
  sub_1B8ADBDEC(&qword_1EF1BE430, (uint64_t (*)(uint64_t))type metadata accessor for EKLocationRoutingMode, (uint64_t)&protocol conformance descriptor for EKLocationRoutingMode);
  sub_1B8B9C818();
  *(uint64_t *)((char *)v34 + v175[22]) = v180;
  LOBYTE(v180) = 19;
  sub_1B8ADBDEC(&qword_1EF1BE438, (uint64_t (*)(uint64_t))type metadata accessor for EventCalendarModelObject, (uint64_t)&protocol conformance descriptor for EventCalendarModelObject);
  sub_1B8B9C7D0();
  sub_1B8B3A864(v138, v168, &qword_1EF1BD368);
  type metadata accessor for EKPrivacyLevel(0);
  v193 = 20;
  sub_1B8ADBDEC(&qword_1EF1BDC98, (uint64_t (*)(uint64_t))type metadata accessor for EKPrivacyLevel, (uint64_t)&protocol conformance descriptor for EKPrivacyLevel);
  sub_1B8B9C818();
  *(uint64_t *)((char *)v34 + v175[24]) = v180;
  type metadata accessor for EKEventStatus(0);
  v193 = 21;
  sub_1B8ADBDEC(&qword_1EF1BE440, (uint64_t (*)(uint64_t))type metadata accessor for EKEventStatus, (uint64_t)&protocol conformance descriptor for EKEventStatus);
  sub_1B8B9C818();
  *(uint64_t *)((char *)v34 + v175[25]) = v180;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1BE3A8);
  v193 = 22;
  sub_1B8B7BF18();
  sub_1B8B9C7D0();
  v136 = 0;
  v106 = v180;
  v107 = v161;
  swift_bridgeObjectRelease();
  *(uint64_t *)((char *)v34 + v107) = v106;
  LOBYTE(v180) = 23;
  v108 = v136;
  v109 = sub_1B8B9C7A0();
  v136 = v108;
  if (v108)
    goto LABEL_29;
  v111 = v109;
  v112 = v110;
  v113 = v162;
  swift_bridgeObjectRelease();
  *v113 = v111;
  v113[1] = v112;
  type metadata accessor for EKEventAvailability(0);
  v193 = 24;
  sub_1B8ADBDEC(&qword_1EF1BE458, (uint64_t (*)(uint64_t))type metadata accessor for EKEventAvailability, (uint64_t)&protocol conformance descriptor for EKEventAvailability);
  v114 = v136;
  sub_1B8B9C818();
  if (v114)
    goto LABEL_29;
  *(uint64_t *)((char *)v34 + v175[28]) = v180;
  LOBYTE(v180) = 25;
  sub_1B8B9C7D0();
  sub_1B8B3A864(v141, v165, &qword_1ED1B2D18);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1BE3C8);
  v193 = 26;
  sub_1B8B7BF94();
  sub_1B8B9C7D0();
  v136 = 0;
  v115 = v180;
  v116 = v160;
  swift_bridgeObjectRelease();
  *(uint64_t *)((char *)v34 + v116) = v115;
  LOBYTE(v180) = 27;
  sub_1B8ADBDEC(&qword_1EF1BE470, type metadata accessor for EventOrganizerModelObject, (uint64_t)&protocol conformance descriptor for EventOrganizerModelObject);
  v117 = v136;
  sub_1B8B9C7D0();
  if (v117)
    goto LABEL_29;
  sub_1B8B3A864(v142, v163, &qword_1EF1BD380);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1BE3E8);
  v193 = 28;
  sub_1B8B7C010();
  sub_1B8B9C7D0();
  v118 = v180;
  v119 = v157;
  swift_bridgeObjectRelease();
  *(uint64_t *)((char *)v34 + v119) = v118;
  v193 = 29;
  sub_1B8B9C7D0();
  v136 = 0;
  v120 = v180;
  v121 = v158;
  swift_bridgeObjectRelease();
  *(uint64_t *)((char *)v34 + v121) = v120;
  LOBYTE(v180) = 30;
  sub_1B8ADBDEC(&qword_1EF1BE480, type metadata accessor for EventAttendeeModelObject, (uint64_t)&protocol conformance descriptor for EventAttendeeModelObject);
  v122 = v136;
  sub_1B8B9C7D0();
  if (v122)
    goto LABEL_29;
  sub_1B8B3A864(v143, v159, &qword_1EF1BD378);
  LOBYTE(v180) = 31;
  v123 = sub_1B8B9C7A0();
  v136 = 0;
  v124 = v123;
  v126 = v125;
  v127 = v156;
  swift_bridgeObjectRelease();
  *v127 = v124;
  v127[1] = v126;
  LOBYTE(v180) = 32;
  v128 = v136;
  v129 = sub_1B8B9C7E8();
  if (v128)
  {
LABEL_29:
    v70 = -97;
    (*(void (**)(char *, uint64_t))(v152 + 8))(v176, v153);
    v71 = v179;
    v67 = v174;
    v65 = v175;
LABEL_7:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v67);
    if ((v70 & 1) != 0)
    {
      swift_bridgeObjectRelease();
      if ((v70 & 2) == 0)
      {
LABEL_9:
        if ((v70 & 4) == 0)
          goto LABEL_10;
        goto LABEL_15;
      }
    }
    else if ((v70 & 2) == 0)
    {
      goto LABEL_9;
    }
    swift_bridgeObjectRelease();
    if ((v70 & 4) == 0)
    {
LABEL_10:
      if ((v70 & 8) == 0)
        goto LABEL_11;
      goto LABEL_16;
    }
LABEL_15:
    swift_bridgeObjectRelease();
    if ((v70 & 8) == 0)
    {
LABEL_11:
      if ((v70 & 0x10) != 0)
        (*(void (**)(char *, uint64_t))(v178 + 8))((char *)v34 + v65[8], v71);
LABEL_18:
      sub_1B8ADE894(v177, &qword_1EF1B8F70);
      sub_1B8ADE894(v173, &qword_1EF1B8F70);
      sub_1B8ADE894(v172, &qword_1EF1BD370);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1B8B06074(v166, (uint64_t)v189, &qword_1EF1BD390);
      sub_1B8B3A53C(v189, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1B8B3A5A0);
      sub_1B8B06074(v164, (uint64_t)v190, &qword_1EF1BD390);
      sub_1B8B3A53C(v190, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1B8B3A5A0);
      sub_1B8B06074(v167, (uint64_t)v191, &qword_1EF1BD390);
      sub_1B8B3A53C(v191, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1B8B3A5A0);
      sub_1B8ADE894(v168, &qword_1EF1BD368);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1B8ADE894(v165, &qword_1ED1B2D18);
      swift_bridgeObjectRelease();
      sub_1B8ADE894(v163, &qword_1EF1BD380);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1B8ADE894(v159, &qword_1EF1BD378);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return sub_1B8B70DEC(*v155, v155[1]);
    }
LABEL_16:
    v77 = *(void (**)(char *, uint64_t))(v178 + 8);
    v77((char *)v34 + v65[7], v71);
    if ((v70 & 0x10) != 0)
      v77((char *)v34 + v65[8], v71);
    goto LABEL_18;
  }
  *((_BYTE *)v34 + v175[36]) = v129 & 1;
  LOBYTE(v180) = 33;
  *((_BYTE *)v34 + v175[37]) = sub_1B8B9C7E8() & 1;
  v193 = 34;
  sub_1B8B7C08C();
  sub_1B8B9C818();
  v130 = v180;
  v131 = v154;
  swift_bridgeObjectRelease();
  *(_OWORD *)v131 = v130;
  v193 = 35;
  sub_1B8B7C0D0();
  sub_1B8B9C7D0();
  v151 = v180;
  v132 = v181;
  v133 = v182;
  v134 = v155;
  sub_1B8B70DEC(*v155, v155[1]);
  *(_OWORD *)v134 = v151;
  v134[2] = v132;
  v134[3] = v133;
  LOBYTE(v180) = 36;
  *((_BYTE *)v34 + v175[40]) = sub_1B8B9C7E8() & 1;
  LOBYTE(v180) = 37;
  *((_BYTE *)v34 + v175[41]) = sub_1B8B9C7E8() & 1;
  LOBYTE(v180) = 38;
  LOBYTE(v132) = sub_1B8B9C7E8();
  (*(void (**)(char *, uint64_t))(v152 + 8))(v176, v153);
  *((_BYTE *)v34 + v175[42]) = v132 & 1;
  sub_1B8AE7B90((uint64_t)v34, v144, (uint64_t (*)(_QWORD))type metadata accessor for EventModelObject);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v174);
  return sub_1B8AE7BD4((uint64_t)v34, (uint64_t (*)(_QWORD))type metadata accessor for EventModelObject);
}

uint64_t sub_1B8B791CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a1 + 28);
  v5 = sub_1B8B9B0F0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, v4, v5);
}

uint64_t sub_1B8B7920C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a1 + 32);
  v5 = sub_1B8B9B0F0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, v4, v5);
}

uint64_t sub_1B8B7924C()
{
  return sub_1B8B9B0B4();
}

uint64_t sub_1B8B79278(uint64_t a1)
{
  uint64_t v1;

  return *(unsigned __int8 *)(v1 + *(int *)(a1 + 40));
}

uint64_t sub_1B8B79284@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1B8ADE850(v2 + *(int *)(a1 + 44), a2, &qword_1EF1B8F70);
}

uint64_t sub_1B8B792AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1B8ADE850(v2 + *(int *)(a1 + 48), a2, &qword_1EF1B8F70);
}

uint64_t sub_1B8B792D4(uint64_t a1)
{
  uint64_t v1;

  return *(unsigned __int8 *)(v1 + *(int *)(a1 + 52));
}

uint64_t sub_1B8B792E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1B8ADE850(v2 + *(int *)(a1 + 56), a2, &qword_1EF1BD370);
}

uint64_t sub_1B8B79308(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + *(int *)(a1 + 60));
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_1B8B7933C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + *(int *)(a1 + 64));
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_1B8B79370()
{
  return swift_bridgeObjectRetain();
}

_QWORD *sub_1B8B7937C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  _QWORD v5[22];

  sub_1B8B06074(v2 + *(int *)(a1 + 72), (uint64_t)v5, &qword_1EF1BD390);
  sub_1B8B06074((uint64_t)v5, a2, &qword_1EF1BD390);
  return sub_1B8B3A53C(v5, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1B8B3A448);
}

_QWORD *sub_1B8B793DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  _QWORD v5[22];

  sub_1B8B06074(v2 + *(int *)(a1 + 76), (uint64_t)v5, &qword_1EF1BD390);
  sub_1B8B06074((uint64_t)v5, a2, &qword_1EF1BD390);
  return sub_1B8B3A53C(v5, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1B8B3A448);
}

_QWORD *sub_1B8B7943C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  _QWORD v5[22];

  sub_1B8B06074(v2 + *(int *)(a1 + 80), (uint64_t)v5, &qword_1EF1BD390);
  sub_1B8B06074((uint64_t)v5, a2, &qword_1EF1BD390);
  return sub_1B8B3A53C(v5, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1B8B3A448);
}

double sub_1B8B7949C(uint64_t a1)
{
  uint64_t v1;

  return *(double *)(v1 + *(int *)(a1 + 84));
}

uint64_t sub_1B8B794A8(uint64_t a1)
{
  uint64_t v1;

  return *(_QWORD *)(v1 + *(int *)(a1 + 88));
}

uint64_t sub_1B8B794B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1B8ADE850(v2 + *(int *)(a1 + 92), a2, &qword_1EF1BD368);
}

uint64_t sub_1B8B794DC(uint64_t a1)
{
  uint64_t v1;

  return *(_QWORD *)(v1 + *(int *)(a1 + 96));
}

uint64_t sub_1B8B794E8(uint64_t a1)
{
  uint64_t v1;

  return *(_QWORD *)(v1 + *(int *)(a1 + 100));
}

uint64_t sub_1B8B794F4()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1B8B79500(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + *(int *)(a1 + 108));
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_1B8B79534(uint64_t a1)
{
  uint64_t v1;

  return *(_QWORD *)(v1 + *(int *)(a1 + 112));
}

uint64_t sub_1B8B79540@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1B8ADE850(v2 + *(int *)(a1 + 116), a2, &qword_1ED1B2D18);
}

uint64_t sub_1B8B79568()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1B8B79578@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1B8ADE850(v2 + *(int *)(a1 + 124), a2, &qword_1EF1BD380);
}

uint64_t sub_1B8B795A0()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1B8B795AC()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1B8B795B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1B8ADE850(v2 + *(int *)(a1 + 136), a2, &qword_1EF1BD378);
}

uint64_t sub_1B8B795E0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + *(int *)(a1 + 140));
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_1B8B79614(uint64_t a1)
{
  uint64_t v1;

  return *(unsigned __int8 *)(v1 + *(int *)(a1 + 144));
}

uint64_t sub_1B8B79620(uint64_t a1)
{
  uint64_t v1;

  return *(unsigned __int8 *)(v1 + *(int *)(a1 + 148));
}

uint64_t sub_1B8B7962C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;

  if (*(_QWORD *)(v2 + *(int *)(a1 + 152) + 8))
  {
    swift_bridgeObjectRetain();
    sub_1B8B9B048();
  }
  else
  {
    v4 = sub_1B8B9B054();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a2, 1, 1, v4);
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B8B796AC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = (uint64_t *)(v2 + *(int *)(a1 + 156));
  v4 = *v3;
  v5 = v3[1];
  v6 = v3[2];
  v7 = v3[3];
  *a2 = *v3;
  a2[1] = v5;
  a2[2] = v6;
  a2[3] = v7;
  return sub_1B8B79AF4(v4, v5);
}

uint64_t sub_1B8B796C8(uint64_t a1)
{
  uint64_t v1;

  return *(unsigned __int8 *)(v1 + *(int *)(a1 + 160));
}

uint64_t sub_1B8B796D4(uint64_t a1)
{
  uint64_t v1;

  return *(unsigned __int8 *)(v1 + *(int *)(a1 + 164));
}

uint64_t sub_1B8B796E0(uint64_t a1)
{
  uint64_t v1;

  return *(unsigned __int8 *)(v1 + *(int *)(a1 + 168));
}

uint64_t sub_1B8B796EC()
{
  _BYTE v1[72];

  sub_1B8B9C968();
  EventModelObject.hash(into:)((uint64_t)v1);
  return sub_1B8B9C998();
}

uint64_t sub_1B8B7972C()
{
  _BYTE v1[72];

  sub_1B8B9C968();
  EventModelObject.hash(into:)((uint64_t)v1);
  return sub_1B8B9C998();
}

uint64_t sub_1B8B79764@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return EventModelObject.init(from:)(a1, a2);
}

uint64_t sub_1B8B79778(_QWORD *a1)
{
  return EventModelObject.encode(to:)(a1);
}

uint64_t sub_1B8B79794()
{
  sub_1B8ADBDEC(&qword_1EF1BE528, (uint64_t (*)(uint64_t))type metadata accessor for EKPrivacyLevel, (uint64_t)&unk_1B8BA59B0);
  return sub_1B8B9C2C0();
}

uint64_t sub_1B8B79808()
{
  sub_1B8ADBDEC(&qword_1EF1BE528, (uint64_t (*)(uint64_t))type metadata accessor for EKPrivacyLevel, (uint64_t)&unk_1B8BA59B0);
  return sub_1B8B9C2A8();
}

uint64_t sub_1B8B7986C()
{
  sub_1B8ADBDEC(&qword_1EF1BE520, (uint64_t (*)(uint64_t))type metadata accessor for EKEventStatus, (uint64_t)&unk_1B8BA5AF8);
  return sub_1B8B9C2C0();
}

uint64_t sub_1B8B798E0()
{
  sub_1B8ADBDEC(&qword_1EF1BE520, (uint64_t (*)(uint64_t))type metadata accessor for EKEventStatus, (uint64_t)&unk_1B8BA5AF8);
  return sub_1B8B9C2A8();
}

uint64_t sub_1B8B79944()
{
  sub_1B8ADBDEC(&qword_1EF1BE518, (uint64_t (*)(uint64_t))type metadata accessor for EKEventAvailability, (uint64_t)&unk_1B8BA5BA4);
  return sub_1B8B9C2C0();
}

uint64_t sub_1B8B799B8()
{
  sub_1B8ADBDEC(&qword_1EF1BE518, (uint64_t (*)(uint64_t))type metadata accessor for EKEventAvailability, (uint64_t)&unk_1B8BA5BA4);
  return sub_1B8B9C2A8();
}

uint64_t sub_1B8B79A1C()
{
  sub_1B8ADBDEC(&qword_1EF1BE510, (uint64_t (*)(uint64_t))type metadata accessor for EKLocationRoutingMode, (uint64_t)&unk_1B8BA5A50);
  return sub_1B8B9C2C0();
}

uint64_t sub_1B8B79A90()
{
  sub_1B8ADBDEC(&qword_1EF1BE510, (uint64_t (*)(uint64_t))type metadata accessor for EKLocationRoutingMode, (uint64_t)&unk_1B8BA5A50);
  return sub_1B8B9C2A8();
}

uint64_t sub_1B8B79AF4(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2 != 1)
  {
    swift_bridgeObjectRetain();
    return swift_retain();
  }
  return result;
}

uint64_t _s13CalendarUIKit16EventModelObjectV2eeoiySbAC_ACtFZ_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _BYTE *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  _BYTE *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  _BYTE *v64;
  uint64_t v65;
  uint64_t v66;
  _BYTE *v67;
  uint64_t v68;
  _BYTE *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char v74;
  char v75;
  char v76;
  char v77;
  int *v78;
  _QWORD *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  unsigned int (*v83)(uint64_t, uint64_t, uint64_t);
  uint64_t *v84;
  _BYTE *v85;
  void (*v86)(_BYTE *, uint64_t, uint64_t);
  _BYTE *v87;
  void (*v88)(_BYTE *, uint64_t);
  _BYTE *v89;
  _QWORD *v90;
  int *v91;
  _BYTE *v92;
  _BYTE *v93;
  uint64_t v94;
  unsigned int v95;
  uint64_t v96;
  _BYTE *v97;
  uint64_t v99;
  _BYTE *v100;
  _BYTE *v101;
  int v102;
  void (*v103)(_BYTE *, uint64_t);
  _BYTE *v104;
  _QWORD *v105;
  _QWORD *v106;
  _BYTE *v107;
  int *v108;
  _BYTE *v109;
  uint64_t v110;
  uint64_t v111;
  unsigned int (*v112)(uint64_t, uint64_t, uint64_t);
  _BYTE *v113;
  _BYTE *v114;
  BOOL v115;
  int *v116;
  _QWORD *v117;
  uint64_t v118;
  _QWORD *v119;
  uint64_t v120;
  _QWORD *v121;
  uint64_t v122;
  char v123;
  uint64_t v124;
  _QWORD *v125;
  uint64_t v126;
  _QWORD *v127;
  uint64_t v128;
  char v129;
  uint64_t v130;
  _QWORD *v131;
  _QWORD *v132;
  int *v133;
  __int128 *v134;
  BOOL v135;
  int *v136;
  BOOL v137;
  int *v138;
  BOOL v139;
  int *v140;
  _BYTE *v141;
  _BYTE *v142;
  _BYTE *v143;
  uint64_t v144;
  unsigned int (*v145)(uint64_t, uint64_t, uint64_t);
  _BYTE *v146;
  _BYTE *v147;
  char v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  char v152;
  uint64_t v153;
  _QWORD *v154;
  uint64_t v155;
  _QWORD *v156;
  uint64_t v157;
  int *v158;
  _BYTE *v159;
  _BYTE *v160;
  _BYTE *v161;
  uint64_t v162;
  unsigned int (*v163)(uint64_t, uint64_t, uint64_t);
  uint64_t v164;
  _BYTE *v165;
  uint64_t v166;
  _BYTE *v167;
  char v168;
  void (*v169)(_BYTE *, uint64_t);
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  char v173;
  int *v174;
  _BYTE *v175;
  _BYTE *v176;
  _BYTE *v177;
  uint64_t v178;
  unsigned int (*v179)(uint64_t, uint64_t, uint64_t);
  _QWORD *v180;
  _QWORD *v181;
  BOOL v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  char v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  char v190;
  int *v191;
  _BYTE *v192;
  _BYTE *v193;
  _BYTE *v194;
  uint64_t v195;
  unsigned int (*v196)(uint64_t, uint64_t, uint64_t);
  _QWORD *v197;
  _QWORD *v198;
  char v199;
  uint64_t v200;
  _QWORD *v201;
  uint64_t v202;
  _QWORD *v203;
  uint64_t v204;
  uint64_t v205;
  _QWORD *v206;
  uint64_t v207;
  _QWORD *v208;
  uint64_t v209;
  uint64_t v210;
  _QWORD *v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t *v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  BOOL v221;
  _BYTE v222[12];
  int v223;
  unsigned int (*v224)(uint64_t, uint64_t, uint64_t);
  _QWORD *v225;
  int *v226;
  uint64_t v227;
  uint64_t v228;
  _BYTE *v229;
  _BYTE *v230;
  _BYTE *v231;
  _BYTE *v232;
  uint64_t v233;
  _BYTE *v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  _BYTE *v238;
  _BYTE *v239;
  _QWORD *v240;
  _BYTE *v241;
  _BYTE *v242;
  uint64_t v243;
  uint64_t v244;
  _BYTE *v245;
  _BYTE *v246;
  _QWORD *v247;
  _BYTE *v248;
  uint64_t v249;
  _BYTE *v250;
  _BYTE *v251;
  uint64_t v252;
  uint64_t v253;
  _BYTE *v254;
  uint64_t v255;
  _BYTE *v256;
  _BYTE *v257;
  _BYTE *v258;
  _BYTE *v259;
  _BYTE *v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t v263;
  _BYTE *v264;
  _BYTE *v265;
  _BYTE *v266;
  _BYTE *v267;
  _BYTE *v268;
  _BYTE *v269;
  _BYTE *v270;
  uint64_t v271;
  uint64_t v272;
  _QWORD *v273;
  _OWORD v274[11];
  _OWORD v275[11];
  _OWORD v276[11];
  __int128 v277;
  __int128 v278;
  __int128 v279;
  __int128 v280;
  __int128 v281;
  __int128 v282;
  __int128 v283;
  __int128 v284;
  __int128 v285;
  __int128 v286;
  __int128 v287;
  __int128 v288;
  __int128 v289;
  __int128 v290;
  __int128 v291;
  __int128 v292;
  __int128 v293;
  __int128 v294;
  __int128 v295;
  __int128 v296;
  __int128 v297;
  __int128 v298;
  _OWORD v299[11];
  __int128 v300;
  __int128 v301;
  __int128 v302;
  __int128 v303;
  __int128 v304;
  __int128 v305;
  __int128 v306;
  __int128 v307;
  __int128 v308;
  __int128 v309;
  __int128 v310;
  __int128 v311;
  __int128 v312;
  __int128 v313;
  __int128 v314;
  __int128 v315;
  __int128 v316;
  __int128 v317;
  __int128 v318;
  __int128 v319;
  __int128 v320;
  __int128 v321;
  _OWORD v322[11];
  _OWORD v323[11];
  __int128 v324;
  __int128 v325;
  __int128 v326;
  __int128 v327;
  __int128 v328;
  __int128 v329;
  __int128 v330;
  __int128 v331;
  __int128 v332;
  __int128 v333;
  __int128 v334;
  _QWORD v335[22];
  _BYTE v336[176];
  _QWORD v337[22];
  _BYTE v338[176];
  _BYTE v339[184];

  v249 = type metadata accessor for EventAttendeeModelObject(0);
  v244 = *(_QWORD *)(v249 - 8);
  MEMORY[0x1E0C80A78](v249);
  v248 = &v222[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v243 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1BE530);
  MEMORY[0x1E0C80A78](v243);
  v250 = &v222[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1BD378);
  v7 = MEMORY[0x1E0C80A78](v6);
  v247 = &v222[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = MEMORY[0x1E0C80A78](v7);
  v245 = &v222[-v10];
  MEMORY[0x1E0C80A78](v9);
  v246 = &v222[-v11];
  v12 = type metadata accessor for EventOrganizerModelObject(0);
  v237 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v241 = &v222[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v236 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1BE538);
  MEMORY[0x1E0C80A78](v236);
  v242 = &v222[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1BD380);
  v16 = MEMORY[0x1E0C80A78](v15);
  v240 = &v222[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v18 = MEMORY[0x1E0C80A78](v16);
  v238 = &v222[-v19];
  MEMORY[0x1E0C80A78](v18);
  v239 = &v222[-v20];
  v235 = sub_1B8B9B0F0();
  v233 = *(_QWORD *)(v235 - 8);
  MEMORY[0x1E0C80A78](v235);
  v232 = &v222[-((v21 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v228 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1BDC48);
  MEMORY[0x1E0C80A78](v228);
  v234 = &v222[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1B2D18);
  v24 = MEMORY[0x1E0C80A78](v23);
  v231 = &v222[-((v25 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v26 = MEMORY[0x1E0C80A78](v24);
  v229 = &v222[-v27];
  MEMORY[0x1E0C80A78](v26);
  v230 = &v222[-v28];
  v255 = type metadata accessor for EventCalendarModelObject();
  v253 = *(_QWORD *)(v255 - 8);
  MEMORY[0x1E0C80A78](v255);
  v251 = &v222[-((v29 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v252 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1BE540);
  MEMORY[0x1E0C80A78](v252);
  v258 = &v222[-((v30 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1BD368);
  v32 = MEMORY[0x1E0C80A78](v31);
  v254 = &v222[-((v33 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v34 = MEMORY[0x1E0C80A78](v32);
  v256 = &v222[-v35];
  MEMORY[0x1E0C80A78](v34);
  v257 = &v222[-v36];
  v37 = type metadata accessor for EventVirtualConferenceModelObject(0);
  v262 = *(_QWORD *)(v37 - 8);
  v263 = v37;
  MEMORY[0x1E0C80A78](v37);
  v259 = &v222[-((v38 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v261 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1BE548);
  MEMORY[0x1E0C80A78](v261);
  v264 = &v222[-((v39 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1BD370);
  v41 = MEMORY[0x1E0C80A78](v40);
  v260 = &v222[-((v42 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v43 = MEMORY[0x1E0C80A78](v41);
  v267 = &v222[-v44];
  MEMORY[0x1E0C80A78](v43);
  v265 = &v222[-v45];
  v46 = sub_1B8B9B2B8();
  v47 = *(_QWORD *)(v46 - 8);
  v271 = v46;
  v272 = v47;
  MEMORY[0x1E0C80A78](v46);
  v268 = &v222[-((v48 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1BE550);
  v50 = MEMORY[0x1E0C80A78](v49);
  v270 = &v222[-((v51 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v50);
  v53 = &v222[-v52];
  v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1B8F70);
  v55 = MEMORY[0x1E0C80A78](v54);
  v266 = &v222[-((v56 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v57 = MEMORY[0x1E0C80A78](v55);
  v59 = &v222[-v58];
  v60 = MEMORY[0x1E0C80A78](v57);
  v269 = &v222[-v61];
  v62 = MEMORY[0x1E0C80A78](v60);
  v64 = &v222[-v63];
  v65 = MEMORY[0x1E0C80A78](v62);
  v67 = &v222[-v66];
  MEMORY[0x1E0C80A78](v65);
  v69 = &v222[-v68];
  v70 = *a1;
  v71 = a1[1];
  v72 = *a2;
  v73 = a2[1];
  v273 = a2;
  if (v70 != v72 || v71 != v73)
  {
    v74 = sub_1B8B9C8D8();
    v75 = 0;
    if ((v74 & 1) == 0)
      return v75 & 1;
  }
  if (a1[2] != v273[2] || a1[3] != v273[3])
  {
    v76 = sub_1B8B9C8D8();
    v75 = 0;
    if ((v76 & 1) == 0)
      return v75 & 1;
  }
  if (a1[4] != v273[4] || a1[5] != v273[5])
  {
    v77 = sub_1B8B9C8D8();
    v75 = 0;
    if ((v77 & 1) == 0)
      return v75 & 1;
  }
  v227 = v12;
  v78 = (int *)type metadata accessor for EventModelObject();
  v79 = v273;
  if ((sub_1B8B9B0CC() & 1) == 0
    || (sub_1B8B9B0CC() & 1) == 0
    || *((unsigned __int8 *)a1 + v78[9]) != *((unsigned __int8 *)v79 + v78[9])
    || *((unsigned __int8 *)a1 + v78[10]) != *((unsigned __int8 *)v79 + v78[10]))
  {
    goto LABEL_28;
  }
  v80 = v78[11];
  v225 = a1;
  sub_1B8ADE850((uint64_t)a1 + v80, (uint64_t)v69, &qword_1EF1B8F70);
  v226 = v78;
  sub_1B8ADE850((uint64_t)v79 + v78[11], (uint64_t)v67, &qword_1EF1B8F70);
  v81 = (uint64_t)&v53[*(int *)(v49 + 48)];
  sub_1B8ADE850((uint64_t)v69, (uint64_t)v53, &qword_1EF1B8F70);
  sub_1B8ADE850((uint64_t)v67, v81, &qword_1EF1B8F70);
  v82 = v271;
  v83 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v272 + 48);
  if (v83((uint64_t)v53, 1, v271) == 1)
  {
    sub_1B8ADE894((uint64_t)v67, &qword_1EF1B8F70);
    sub_1B8ADE894((uint64_t)v69, &qword_1EF1B8F70);
    if (v83(v81, 1, v82) == 1)
    {
      sub_1B8ADE894((uint64_t)v53, &qword_1EF1B8F70);
      goto LABEL_21;
    }
LABEL_19:
    v84 = &qword_1EF1BE550;
    v85 = v53;
    goto LABEL_27;
  }
  sub_1B8ADE850((uint64_t)v53, (uint64_t)v64, &qword_1EF1B8F70);
  if (v83(v81, 1, v82) == 1)
  {
    sub_1B8ADE894((uint64_t)v67, &qword_1EF1B8F70);
    sub_1B8ADE894((uint64_t)v69, &qword_1EF1B8F70);
    (*(void (**)(_BYTE *, uint64_t))(v272 + 8))(v64, v82);
    goto LABEL_19;
  }
  v86 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v272 + 32);
  v224 = v83;
  v87 = v268;
  v86(v268, v81, v82);
  sub_1B8ADBDEC(&qword_1EF1BE558, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB1470], MEMORY[0x1E0CB1498]);
  v223 = sub_1B8B9C0EC();
  v88 = *(void (**)(_BYTE *, uint64_t))(v272 + 8);
  v89 = v87;
  v83 = v224;
  v88(v89, v82);
  sub_1B8ADE894((uint64_t)v67, &qword_1EF1B8F70);
  sub_1B8ADE894((uint64_t)v69, &qword_1EF1B8F70);
  v88(v64, v82);
  sub_1B8ADE894((uint64_t)v53, &qword_1EF1B8F70);
  if ((v223 & 1) == 0)
    goto LABEL_28;
LABEL_21:
  v90 = v225;
  v91 = v226;
  v92 = v269;
  sub_1B8ADE850((uint64_t)v225 + v226[12], (uint64_t)v269, &qword_1EF1B8F70);
  sub_1B8ADE850((uint64_t)v273 + v91[12], (uint64_t)v59, &qword_1EF1B8F70);
  v93 = v270;
  v94 = (uint64_t)&v270[*(int *)(v49 + 48)];
  sub_1B8ADE850((uint64_t)v92, (uint64_t)v270, &qword_1EF1B8F70);
  sub_1B8ADE850((uint64_t)v59, v94, &qword_1EF1B8F70);
  if (v83((uint64_t)v93, 1, v82) == 1)
  {
    sub_1B8ADE894((uint64_t)v59, &qword_1EF1B8F70);
    sub_1B8ADE894((uint64_t)v92, &qword_1EF1B8F70);
    v95 = v83(v94, 1, v82);
    v96 = (uint64_t)v267;
    if (v95 == 1)
    {
      sub_1B8ADE894((uint64_t)v93, &qword_1EF1B8F70);
      goto LABEL_31;
    }
LABEL_26:
    v84 = &qword_1EF1BE550;
    v85 = v93;
    goto LABEL_27;
  }
  v97 = v266;
  sub_1B8ADE850((uint64_t)v93, (uint64_t)v266, &qword_1EF1B8F70);
  if (v83(v94, 1, v82) == 1)
  {
    sub_1B8ADE894((uint64_t)v59, &qword_1EF1B8F70);
    sub_1B8ADE894((uint64_t)v92, &qword_1EF1B8F70);
    (*(void (**)(_BYTE *, uint64_t))(v272 + 8))(v97, v82);
    goto LABEL_26;
  }
  v99 = v272;
  v100 = v268;
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v272 + 32))(v268, v94, v82);
  sub_1B8ADBDEC(&qword_1EF1BE558, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB1470], MEMORY[0x1E0CB1498]);
  v101 = v97;
  v102 = sub_1B8B9C0EC();
  v90 = v225;
  LODWORD(v224) = v102;
  v103 = *(void (**)(_BYTE *, uint64_t))(v99 + 8);
  v104 = v100;
  v96 = (uint64_t)v267;
  v103(v104, v82);
  sub_1B8ADE894((uint64_t)v59, &qword_1EF1B8F70);
  sub_1B8ADE894((uint64_t)v92, &qword_1EF1B8F70);
  v103(v101, v82);
  sub_1B8ADE894((uint64_t)v93, &qword_1EF1B8F70);
  if ((v224 & 1) == 0)
    goto LABEL_28;
LABEL_31:
  if (*((unsigned __int8 *)v90 + v226[13]) != *((unsigned __int8 *)v273 + v226[13]))
    goto LABEL_28;
  v105 = v90;
  v106 = v273;
  v107 = v265;
  v108 = v226;
  sub_1B8ADE850((uint64_t)v105 + v226[14], (uint64_t)v265, &qword_1EF1BD370);
  sub_1B8ADE850((uint64_t)v106 + v108[14], v96, &qword_1EF1BD370);
  v109 = v264;
  v110 = (uint64_t)&v264[*(int *)(v261 + 48)];
  sub_1B8ADE850((uint64_t)v107, (uint64_t)v264, &qword_1EF1BD370);
  sub_1B8ADE850(v96, v110, &qword_1EF1BD370);
  v111 = v263;
  v112 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v262 + 48);
  if (v112((uint64_t)v109, 1, v263) == 1)
  {
    sub_1B8ADE894(v96, &qword_1EF1BD370);
    sub_1B8ADE894((uint64_t)v107, &qword_1EF1BD370);
    if (v112(v110, 1, v111) == 1)
    {
      sub_1B8ADE894((uint64_t)v109, &qword_1EF1BD370);
      goto LABEL_39;
    }
LABEL_37:
    v84 = &qword_1EF1BE548;
    v85 = v109;
    goto LABEL_27;
  }
  v113 = v260;
  sub_1B8ADE850((uint64_t)v109, (uint64_t)v260, &qword_1EF1BD370);
  if (v112(v110, 1, v111) == 1)
  {
    sub_1B8ADE894(v96, &qword_1EF1BD370);
    sub_1B8ADE894((uint64_t)v265, &qword_1EF1BD370);
    sub_1B8AE7BD4((uint64_t)v113, type metadata accessor for EventVirtualConferenceModelObject);
    goto LABEL_37;
  }
  v114 = v259;
  sub_1B8AFE0FC(v110, (uint64_t)v259, type metadata accessor for EventVirtualConferenceModelObject);
  v115 = _s13CalendarUIKit33EventVirtualConferenceModelObjectV2eeoiySbAC_ACtFZ_0((uint64_t)v113, (uint64_t)v114);
  sub_1B8AE7BD4((uint64_t)v114, type metadata accessor for EventVirtualConferenceModelObject);
  sub_1B8ADE894(v96, &qword_1EF1BD370);
  sub_1B8ADE894((uint64_t)v265, &qword_1EF1BD370);
  sub_1B8AE7BD4((uint64_t)v113, type metadata accessor for EventVirtualConferenceModelObject);
  sub_1B8ADE894((uint64_t)v109, &qword_1EF1BD370);
  if (!v115)
    goto LABEL_28;
LABEL_39:
  v117 = v225;
  v116 = v226;
  v118 = v226[15];
  v119 = (_QWORD *)((char *)v225 + v118);
  v120 = *(_QWORD *)((char *)v225 + v118 + 8);
  v121 = (_QWORD *)((char *)v273 + v118);
  v122 = v121[1];
  if (v120)
  {
    if (!v122)
      goto LABEL_28;
    if (*v119 != *v121 || v120 != v122)
    {
      v123 = sub_1B8B9C8D8();
      v116 = v226;
      v75 = 0;
      if ((v123 & 1) == 0)
        return v75 & 1;
    }
  }
  else if (v122)
  {
    goto LABEL_28;
  }
  v124 = v116[16];
  v125 = (_QWORD *)((char *)v117 + v124);
  v126 = *(_QWORD *)((char *)v117 + v124 + 8);
  v127 = (_QWORD *)((char *)v273 + v124);
  v128 = v127[1];
  if (!v126)
  {
    if (v128)
      goto LABEL_28;
    goto LABEL_53;
  }
  if (!v128)
    goto LABEL_28;
  if (*v125 == *v127 && v126 == v128 || (v129 = sub_1B8B9C8D8(), v116 = v226, v75 = 0, (v129 & 1) != 0))
  {
LABEL_53:
    v130 = v116[17];
    v131 = *(_QWORD **)((char *)v117 + v130);
    v132 = *(_QWORD **)((char *)v273 + v130);
    if (v131)
    {
      if (!v132 || (sub_1B8B88A5C(v131, v132) & 1) == 0)
        goto LABEL_28;
    }
    else if (v132)
    {
      goto LABEL_28;
    }
    v133 = v226;
    sub_1B8B06074((uint64_t)v225 + v226[18], (uint64_t)v337, &qword_1EF1BD390);
    sub_1B8B06074((uint64_t)v273 + v133[18], (uint64_t)v338, &qword_1EF1BD390);
    sub_1B8B06074((uint64_t)v337, (uint64_t)v339, &qword_1EF1BD390);
    if (sub_1B8B3A3FC((uint64_t)v339) == 1)
    {
      sub_1B8B06074((uint64_t)v338, (uint64_t)v335, &qword_1EF1BD390);
      if (sub_1B8B3A3FC((uint64_t)v335) == 1)
        goto LABEL_65;
    }
    else
    {
      sub_1B8B06074((uint64_t)v337, (uint64_t)&v324, &qword_1EF1BD390);
      sub_1B8B06074((uint64_t)v338, (uint64_t)v335, &qword_1EF1BD390);
      if (sub_1B8B3A3FC((uint64_t)v335) != 1)
      {
        sub_1B8B06074((uint64_t)v338, (uint64_t)&v311, &qword_1EF1BD390);
        v308 = v319;
        v309 = v320;
        v310 = v321;
        v304 = v315;
        v305 = v316;
        v307 = v318;
        v306 = v317;
        v300 = v311;
        v301 = v312;
        v303 = v314;
        v302 = v313;
        sub_1B8B06074((uint64_t)v337, (uint64_t)v322, &qword_1EF1BD390);
        sub_1B8B3A53C(v337, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1B8B3A448);
        sub_1B8B2C814(v322);
        v135 = _s13CalendarUIKit24EventLocationModelObjectV2eeoiySbAC_ACtFZ_0((uint64_t)&v324, (uint64_t)&v300);
        v323[8] = v332;
        v323[9] = v333;
        v323[10] = v334;
        v323[4] = v328;
        v323[5] = v329;
        v323[7] = v331;
        v323[6] = v330;
        v323[0] = v324;
        v323[1] = v325;
        v323[3] = v327;
        v323[2] = v326;
        sub_1B8B2C8E8(v323);
        sub_1B8B3A53C(v337, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1B8B3A5A0);
        if (!v135)
          goto LABEL_28;
LABEL_65:
        v136 = v226;
        sub_1B8B06074((uint64_t)v225 + v226[19], (uint64_t)v322, &qword_1EF1BD390);
        sub_1B8B06074((uint64_t)v273 + v136[19], (uint64_t)v323, &qword_1EF1BD390);
        sub_1B8B06074((uint64_t)v322, (uint64_t)&v324, &qword_1EF1BD390);
        if (sub_1B8B3A3FC((uint64_t)&v324) == 1)
        {
          sub_1B8B06074((uint64_t)v323, (uint64_t)v335, &qword_1EF1BD390);
          if (sub_1B8B3A3FC((uint64_t)v335) == 1)
          {
LABEL_72:
            v138 = v226;
            sub_1B8B06074((uint64_t)v225 + v226[20], (uint64_t)v299, &qword_1EF1BD390);
            sub_1B8B06074((uint64_t)v273 + v138[20], (uint64_t)&v300, &qword_1EF1BD390);
            sub_1B8B06074((uint64_t)v299, (uint64_t)&v311, &qword_1EF1BD390);
            if (sub_1B8B3A3FC((uint64_t)&v311) == 1)
            {
              sub_1B8B06074((uint64_t)&v300, (uint64_t)v335, &qword_1EF1BD390);
              if (sub_1B8B3A3FC((uint64_t)v335) == 1)
                goto LABEL_80;
            }
            else
            {
              sub_1B8B06074((uint64_t)v299, (uint64_t)&v288, &qword_1EF1BD390);
              sub_1B8B06074((uint64_t)&v300, (uint64_t)v335, &qword_1EF1BD390);
              if (sub_1B8B3A3FC((uint64_t)v335) != 1)
              {
                sub_1B8B06074((uint64_t)&v300, (uint64_t)v275, &qword_1EF1BD390);
                v274[8] = v275[8];
                v274[9] = v275[9];
                v274[10] = v275[10];
                v274[4] = v275[4];
                v274[5] = v275[5];
                v274[6] = v275[6];
                v274[7] = v275[7];
                v274[0] = v275[0];
                v274[1] = v275[1];
                v274[2] = v275[2];
                v274[3] = v275[3];
                sub_1B8B06074((uint64_t)v299, (uint64_t)v276, &qword_1EF1BD390);
                sub_1B8B3A53C(v299, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1B8B3A448);
                sub_1B8B2C814(v276);
                v139 = _s13CalendarUIKit24EventLocationModelObjectV2eeoiySbAC_ACtFZ_0((uint64_t)&v288, (uint64_t)v274);
                v285 = v296;
                v286 = v297;
                v287 = v298;
                v281 = v292;
                v282 = v293;
                v284 = v295;
                v283 = v294;
                v277 = v288;
                v278 = v289;
                v279 = v290;
                v280 = v291;
                sub_1B8B2C8E8(&v277);
                sub_1B8B3A53C(v299, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1B8B3A5A0);
                if (!v139)
                  goto LABEL_28;
LABEL_80:
                if (*(double *)((char *)v225 + v226[21]) != *(double *)((char *)v273 + v226[21])
                  || *(_QWORD *)((char *)v225 + v226[22]) != *(_QWORD *)((char *)v273 + v226[22]))
                {
                  goto LABEL_28;
                }
                v140 = v226;
                v141 = v257;
                sub_1B8ADE850((uint64_t)v225 + v226[23], (uint64_t)v257, &qword_1EF1BD368);
                v142 = v256;
                sub_1B8ADE850((uint64_t)v273 + v140[23], (uint64_t)v256, &qword_1EF1BD368);
                v143 = v258;
                v144 = (uint64_t)&v258[*(int *)(v252 + 48)];
                sub_1B8ADE850((uint64_t)v141, (uint64_t)v258, &qword_1EF1BD368);
                sub_1B8ADE850((uint64_t)v142, v144, &qword_1EF1BD368);
                v145 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v253 + 48);
                if (v145((uint64_t)v143, 1, v255) == 1)
                {
                  sub_1B8ADE894((uint64_t)v256, &qword_1EF1BD368);
                  sub_1B8ADE894((uint64_t)v257, &qword_1EF1BD368);
                  if (v145(v144, 1, v255) == 1)
                  {
                    sub_1B8ADE894((uint64_t)v258, &qword_1EF1BD368);
                    goto LABEL_89;
                  }
                }
                else
                {
                  sub_1B8ADE850((uint64_t)v258, (uint64_t)v254, &qword_1EF1BD368);
                  if (v145(v144, 1, v255) != 1)
                  {
                    v146 = v251;
                    sub_1B8AFE0FC(v144, (uint64_t)v251, (uint64_t (*)(_QWORD))type metadata accessor for EventCalendarModelObject);
                    v147 = v254;
                    v148 = static EventCalendarModelObject.== infix(_:_:)((uint64_t)v254, (uint64_t)v146);
                    sub_1B8AE7BD4((uint64_t)v146, (uint64_t (*)(_QWORD))type metadata accessor for EventCalendarModelObject);
                    sub_1B8ADE894((uint64_t)v256, &qword_1EF1BD368);
                    sub_1B8ADE894((uint64_t)v257, &qword_1EF1BD368);
                    sub_1B8AE7BD4((uint64_t)v147, (uint64_t (*)(_QWORD))type metadata accessor for EventCalendarModelObject);
                    sub_1B8ADE894((uint64_t)v258, &qword_1EF1BD368);
                    if ((v148 & 1) == 0)
                      goto LABEL_28;
LABEL_89:
                    if (*(_QWORD *)((char *)v225 + v226[24]) != *(_QWORD *)((char *)v273 + v226[24])
                      || *(_QWORD *)((char *)v225 + v226[25]) != *(_QWORD *)((char *)v273 + v226[25]))
                    {
                      goto LABEL_28;
                    }
                    v149 = v226[26];
                    v150 = *(_QWORD *)((char *)v273 + v149);
                    if (*(_QWORD *)((char *)v225 + v149))
                    {
                      if (!v150)
                        goto LABEL_28;
                      swift_bridgeObjectRetain();
                      v151 = swift_bridgeObjectRetain();
                      v152 = sub_1B8B88B20(v151, v150);
                      swift_bridgeObjectRelease();
                      swift_bridgeObjectRelease();
                      if ((v152 & 1) == 0)
                        goto LABEL_28;
                    }
                    else if (v150)
                    {
                      goto LABEL_28;
                    }
                    v153 = v226[27];
                    v154 = (_QWORD *)((char *)v225 + v153);
                    v155 = *(_QWORD *)((char *)v225 + v153 + 8);
                    v156 = (_QWORD *)((char *)v273 + v153);
                    v157 = v156[1];
                    if (v155)
                    {
                      if (!v157 || (*v154 != *v156 || v155 != v157) && (sub_1B8B9C8D8() & 1) == 0)
                        goto LABEL_28;
                    }
                    else if (v157)
                    {
                      goto LABEL_28;
                    }
                    if (*(_QWORD *)((char *)v225 + v226[28]) != *(_QWORD *)((char *)v273 + v226[28]))
                      goto LABEL_28;
                    v158 = v226;
                    v159 = v230;
                    sub_1B8ADE850((uint64_t)v225 + v226[29], (uint64_t)v230, &qword_1ED1B2D18);
                    v160 = v229;
                    sub_1B8ADE850((uint64_t)v273 + v158[29], (uint64_t)v229, &qword_1ED1B2D18);
                    v161 = v234;
                    v162 = (uint64_t)&v234[*(int *)(v228 + 48)];
                    sub_1B8ADE850((uint64_t)v159, (uint64_t)v234, &qword_1ED1B2D18);
                    sub_1B8ADE850((uint64_t)v160, v162, &qword_1ED1B2D18);
                    v163 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v233 + 48);
                    if (v163((uint64_t)v161, 1, v235) == 1)
                    {
                      sub_1B8ADE894((uint64_t)v229, &qword_1ED1B2D18);
                      sub_1B8ADE894((uint64_t)v230, &qword_1ED1B2D18);
                      if (v163(v162, 1, v235) == 1)
                      {
                        sub_1B8ADE894((uint64_t)v234, &qword_1ED1B2D18);
                        goto LABEL_111;
                      }
                    }
                    else
                    {
                      sub_1B8ADE850((uint64_t)v234, (uint64_t)v231, &qword_1ED1B2D18);
                      if (v163(v162, 1, v235) != 1)
                      {
                        v165 = v232;
                        v164 = v233;
                        v166 = v235;
                        (*(void (**)(_BYTE *, uint64_t, uint64_t))(v233 + 32))(v232, v162, v235);
                        sub_1B8ADBDEC((unint64_t *)&qword_1EF1BC968, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08B8]);
                        v167 = v231;
                        v168 = sub_1B8B9C0EC();
                        v169 = *(void (**)(_BYTE *, uint64_t))(v164 + 8);
                        v169(v165, v166);
                        sub_1B8ADE894((uint64_t)v229, &qword_1ED1B2D18);
                        sub_1B8ADE894((uint64_t)v230, &qword_1ED1B2D18);
                        v169(v167, v166);
                        sub_1B8ADE894((uint64_t)v234, &qword_1ED1B2D18);
                        if ((v168 & 1) == 0)
                          goto LABEL_28;
LABEL_111:
                        v170 = v226[30];
                        v171 = *(_QWORD *)((char *)v273 + v170);
                        if (*(_QWORD *)((char *)v225 + v170))
                        {
                          if (!v171)
                            goto LABEL_28;
                          swift_bridgeObjectRetain();
                          v172 = swift_bridgeObjectRetain();
                          v173 = sub_1B8B88EFC(v172, v171);
                          swift_bridgeObjectRelease();
                          swift_bridgeObjectRelease();
                          if ((v173 & 1) == 0)
                            goto LABEL_28;
                        }
                        else if (v171)
                        {
                          goto LABEL_28;
                        }
                        v174 = v226;
                        v175 = v239;
                        sub_1B8ADE850((uint64_t)v225 + v226[31], (uint64_t)v239, &qword_1EF1BD380);
                        v176 = v238;
                        sub_1B8ADE850((uint64_t)v273 + v174[31], (uint64_t)v238, &qword_1EF1BD380);
                        v177 = v242;
                        v178 = (uint64_t)&v242[*(int *)(v236 + 48)];
                        sub_1B8ADE850((uint64_t)v175, (uint64_t)v242, &qword_1EF1BD380);
                        sub_1B8ADE850((uint64_t)v176, v178, &qword_1EF1BD380);
                        v179 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v237 + 48);
                        if (v179((uint64_t)v177, 1, v227) == 1)
                        {
                          sub_1B8ADE894((uint64_t)v238, &qword_1EF1BD380);
                          sub_1B8ADE894((uint64_t)v239, &qword_1EF1BD380);
                          if (v179(v178, 1, v227) == 1)
                          {
                            sub_1B8ADE894((uint64_t)v242, &qword_1EF1BD380);
LABEL_123:
                            v183 = v226[32];
                            v184 = *(_QWORD *)((char *)v273 + v183);
                            if (*(_QWORD *)((char *)v225 + v183))
                            {
                              if (!v184)
                                goto LABEL_28;
                              swift_bridgeObjectRetain();
                              v185 = swift_bridgeObjectRetain();
                              v186 = sub_1B8B88F10(v185, v184);
                              swift_bridgeObjectRelease();
                              swift_bridgeObjectRelease();
                              if ((v186 & 1) == 0)
                                goto LABEL_28;
                            }
                            else if (v184)
                            {
                              goto LABEL_28;
                            }
                            v187 = v226[33];
                            v188 = *(_QWORD *)((char *)v273 + v187);
                            if (*(_QWORD *)((char *)v225 + v187))
                            {
                              if (!v188)
                                goto LABEL_28;
                              swift_bridgeObjectRetain();
                              v189 = swift_bridgeObjectRetain();
                              v190 = sub_1B8B88F10(v189, v188);
                              swift_bridgeObjectRelease();
                              swift_bridgeObjectRelease();
                              if ((v190 & 1) == 0)
                                goto LABEL_28;
                            }
                            else if (v188)
                            {
                              goto LABEL_28;
                            }
                            v191 = v226;
                            v192 = v246;
                            sub_1B8ADE850((uint64_t)v225 + v226[34], (uint64_t)v246, &qword_1EF1BD378);
                            v193 = v245;
                            sub_1B8ADE850((uint64_t)v273 + v191[34], (uint64_t)v245, &qword_1EF1BD378);
                            v194 = v250;
                            v195 = (uint64_t)&v250[*(int *)(v243 + 48)];
                            sub_1B8ADE850((uint64_t)v192, (uint64_t)v250, &qword_1EF1BD378);
                            sub_1B8ADE850((uint64_t)v193, v195, &qword_1EF1BD378);
                            v196 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v244 + 48);
                            if (v196((uint64_t)v194, 1, v249) == 1)
                            {
                              sub_1B8ADE894((uint64_t)v245, &qword_1EF1BD378);
                              sub_1B8ADE894((uint64_t)v246, &qword_1EF1BD378);
                              if (v196(v195, 1, v249) == 1)
                              {
                                sub_1B8ADE894((uint64_t)v250, &qword_1EF1BD378);
LABEL_140:
                                v200 = v226[35];
                                v201 = (_QWORD *)((char *)v225 + v200);
                                v202 = *(_QWORD *)((char *)v225 + v200 + 8);
                                v203 = (_QWORD *)((char *)v273 + v200);
                                v204 = v203[1];
                                if (v202)
                                {
                                  if (!v204 || (*v201 != *v203 || v202 != v204) && (sub_1B8B9C8D8() & 1) == 0)
                                    goto LABEL_28;
                                }
                                else if (v204)
                                {
                                  goto LABEL_28;
                                }
                                if (*((unsigned __int8 *)v225 + v226[36]) != *((unsigned __int8 *)v273 + v226[36])
                                  || *((unsigned __int8 *)v225 + v226[37]) != *((unsigned __int8 *)v273 + v226[37]))
                                {
                                  goto LABEL_28;
                                }
                                v205 = v226[38];
                                v206 = (_QWORD *)((char *)v225 + v205);
                                v207 = *(_QWORD *)((char *)v225 + v205 + 8);
                                v208 = (_QWORD *)((char *)v273 + v205);
                                v209 = v208[1];
                                if (v207)
                                {
                                  if (!v209 || (*v206 != *v208 || v207 != v209) && (sub_1B8B9C8D8() & 1) == 0)
                                    goto LABEL_28;
                                }
                                else if (v209)
                                {
                                  goto LABEL_28;
                                }
                                v210 = v226[39];
                                v211 = (_QWORD *)((char *)v225 + v210);
                                v213 = *(_QWORD *)((char *)v225 + v210);
                                v212 = *(_QWORD *)((char *)v225 + v210 + 8);
                                v215 = *(_QWORD *)((char *)v225 + v210 + 16);
                                v214 = *(_QWORD *)((char *)v225 + v210 + 24);
                                v216 = (_QWORD *)((char *)v273 + v210);
                                v218 = *v216;
                                v217 = v216[1];
                                v220 = v216[2];
                                v219 = v216[3];
                                if (v212 == 1)
                                {
                                  if (v217 == 1)
                                    goto LABEL_163;
                                  goto LABEL_161;
                                }
                                v335[0] = *v211;
                                v335[1] = v212;
                                v335[2] = v215;
                                v335[3] = v214;
                                if (v217 == 1)
                                {
                                  swift_retain();
                                  swift_bridgeObjectRetain();
LABEL_161:
                                  sub_1B8B79AF4(v218, v217);
                                  sub_1B8B70DEC(v213, v212);
                                  sub_1B8B70DEC(v218, v217);
                                  goto LABEL_28;
                                }
                                LOBYTE(v288) = v218 & 1;
                                *((_QWORD *)&v288 + 1) = v217;
                                *(_QWORD *)&v289 = v220;
                                *((_QWORD *)&v289 + 1) = v219;
                                sub_1B8B79AF4(v213, v212);
                                swift_bridgeObjectRetain();
                                swift_retain();
                                v221 = _s13CalendarUIKit27EventIntegrationModelObjectV2eeoiySbAC_ACtFZ_0(v335, &v288);
                                swift_release();
                                swift_bridgeObjectRelease();
                                sub_1B8B70DEC(v213, v212);
                                if (v221)
                                {
LABEL_163:
                                  if (*((unsigned __int8 *)v225 + v226[40]) == *((unsigned __int8 *)v273 + v226[40])
                                    && *((unsigned __int8 *)v225 + v226[41]) == *((unsigned __int8 *)v273 + v226[41]))
                                  {
                                    v75 = *((_BYTE *)v225 + v226[42]) ^ *((_BYTE *)v273 + v226[42]) ^ 1;
                                    return v75 & 1;
                                  }
                                }
LABEL_28:
                                v75 = 0;
                                return v75 & 1;
                              }
                            }
                            else
                            {
                              sub_1B8ADE850((uint64_t)v250, (uint64_t)v247, &qword_1EF1BD378);
                              if (v196(v195, 1, v249) != 1)
                              {
                                v197 = v248;
                                sub_1B8AFE0FC(v195, (uint64_t)v248, type metadata accessor for EventAttendeeModelObject);
                                v198 = v247;
                                v199 = _s13CalendarUIKit24EventAttendeeModelObjectV2eeoiySbAC_ACtFZ_0(v247, v197);
                                sub_1B8AE7BD4((uint64_t)v197, type metadata accessor for EventAttendeeModelObject);
                                sub_1B8ADE894((uint64_t)v245, &qword_1EF1BD378);
                                sub_1B8ADE894((uint64_t)v246, &qword_1EF1BD378);
                                sub_1B8AE7BD4((uint64_t)v198, type metadata accessor for EventAttendeeModelObject);
                                sub_1B8ADE894((uint64_t)v250, &qword_1EF1BD378);
                                if ((v199 & 1) == 0)
                                  goto LABEL_28;
                                goto LABEL_140;
                              }
                              sub_1B8ADE894((uint64_t)v245, &qword_1EF1BD378);
                              sub_1B8ADE894((uint64_t)v246, &qword_1EF1BD378);
                              sub_1B8AE7BD4((uint64_t)v247, type metadata accessor for EventAttendeeModelObject);
                            }
                            v84 = &qword_1EF1BE530;
                            v85 = v250;
LABEL_27:
                            sub_1B8ADE894((uint64_t)v85, v84);
                            goto LABEL_28;
                          }
                        }
                        else
                        {
                          sub_1B8ADE850((uint64_t)v242, (uint64_t)v240, &qword_1EF1BD380);
                          if (v179(v178, 1, v227) != 1)
                          {
                            v180 = v241;
                            sub_1B8AFE0FC(v178, (uint64_t)v241, type metadata accessor for EventOrganizerModelObject);
                            v181 = v240;
                            v182 = _s13CalendarUIKit25EventOrganizerModelObjectV2eeoiySbAC_ACtFZ_0(v240, v180);
                            sub_1B8AE7BD4((uint64_t)v180, type metadata accessor for EventOrganizerModelObject);
                            sub_1B8ADE894((uint64_t)v238, &qword_1EF1BD380);
                            sub_1B8ADE894((uint64_t)v239, &qword_1EF1BD380);
                            sub_1B8AE7BD4((uint64_t)v181, type metadata accessor for EventOrganizerModelObject);
                            sub_1B8ADE894((uint64_t)v242, &qword_1EF1BD380);
                            if (!v182)
                              goto LABEL_28;
                            goto LABEL_123;
                          }
                          sub_1B8ADE894((uint64_t)v238, &qword_1EF1BD380);
                          sub_1B8ADE894((uint64_t)v239, &qword_1EF1BD380);
                          sub_1B8AE7BD4((uint64_t)v240, type metadata accessor for EventOrganizerModelObject);
                        }
                        v84 = &qword_1EF1BE538;
                        v85 = v242;
                        goto LABEL_27;
                      }
                      sub_1B8ADE894((uint64_t)v229, &qword_1ED1B2D18);
                      sub_1B8ADE894((uint64_t)v230, &qword_1ED1B2D18);
                      (*(void (**)(_BYTE *, uint64_t))(v233 + 8))(v231, v235);
                    }
                    v84 = &qword_1EF1BDC48;
                    v85 = v234;
                    goto LABEL_27;
                  }
                  sub_1B8ADE894((uint64_t)v256, &qword_1EF1BD368);
                  sub_1B8ADE894((uint64_t)v257, &qword_1EF1BD368);
                  sub_1B8AE7BD4((uint64_t)v254, (uint64_t (*)(_QWORD))type metadata accessor for EventCalendarModelObject);
                }
                v84 = &qword_1EF1BE540;
                v85 = v258;
                goto LABEL_27;
              }
              v276[8] = v296;
              v276[9] = v297;
              v276[10] = v298;
              v276[4] = v292;
              v276[5] = v293;
              v276[6] = v294;
              v276[7] = v295;
              v276[0] = v288;
              v276[1] = v289;
              v276[2] = v290;
              v276[3] = v291;
              sub_1B8B06074((uint64_t)v299, (uint64_t)&v277, &qword_1EF1BD390);
              sub_1B8B2C814(&v277);
              sub_1B8B2C814(&v277);
              sub_1B8B2C8E8(v276);
            }
            sub_1B8B06074((uint64_t)v299, (uint64_t)v335, &qword_1EF1BD390);
            sub_1B8B06074((uint64_t)&v300, (uint64_t)v336, &qword_1EF1BD390);
            v134 = &v300;
LABEL_78:
            sub_1B8B3A53C(v134, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1B8B3A448);
            sub_1B8B84808((uint64_t)v335);
            goto LABEL_28;
          }
        }
        else
        {
          sub_1B8B06074((uint64_t)v322, (uint64_t)&v311, &qword_1EF1BD390);
          sub_1B8B06074((uint64_t)v323, (uint64_t)v335, &qword_1EF1BD390);
          if (sub_1B8B3A3FC((uint64_t)v335) != 1)
          {
            sub_1B8B06074((uint64_t)v323, (uint64_t)&v288, &qword_1EF1BD390);
            v285 = v296;
            v286 = v297;
            v287 = v298;
            v281 = v292;
            v282 = v293;
            v284 = v295;
            v283 = v294;
            v277 = v288;
            v278 = v289;
            v279 = v290;
            v280 = v291;
            sub_1B8B06074((uint64_t)v322, (uint64_t)v299, &qword_1EF1BD390);
            sub_1B8B3A53C(v322, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1B8B3A448);
            sub_1B8B2C814(v299);
            v137 = _s13CalendarUIKit24EventLocationModelObjectV2eeoiySbAC_ACtFZ_0((uint64_t)&v311, (uint64_t)&v277);
            v308 = v319;
            v309 = v320;
            v310 = v321;
            v304 = v315;
            v305 = v316;
            v307 = v318;
            v306 = v317;
            v300 = v311;
            v301 = v312;
            v303 = v314;
            v302 = v313;
            sub_1B8B2C8E8(&v300);
            sub_1B8B3A53C(v322, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1B8B3A5A0);
            if (!v137)
              goto LABEL_28;
            goto LABEL_72;
          }
          v299[8] = v319;
          v299[9] = v320;
          v299[10] = v321;
          v299[4] = v315;
          v299[5] = v316;
          v299[7] = v318;
          v299[6] = v317;
          v299[0] = v311;
          v299[1] = v312;
          v299[3] = v314;
          v299[2] = v313;
          sub_1B8B06074((uint64_t)v322, (uint64_t)&v300, &qword_1EF1BD390);
          sub_1B8B2C814(&v300);
          sub_1B8B2C814(&v300);
          sub_1B8B2C8E8(v299);
        }
        sub_1B8B06074((uint64_t)v322, (uint64_t)v335, &qword_1EF1BD390);
        sub_1B8B06074((uint64_t)v323, (uint64_t)v336, &qword_1EF1BD390);
        v134 = v323;
        goto LABEL_78;
      }
      v322[8] = v332;
      v322[9] = v333;
      v322[10] = v334;
      v322[4] = v328;
      v322[5] = v329;
      v322[7] = v331;
      v322[6] = v330;
      v322[0] = v324;
      v322[1] = v325;
      v322[3] = v327;
      v322[2] = v326;
      sub_1B8B06074((uint64_t)v337, (uint64_t)v323, &qword_1EF1BD390);
      sub_1B8B2C814(v323);
      sub_1B8B2C814(v323);
      sub_1B8B2C8E8(v322);
    }
    sub_1B8B06074((uint64_t)v337, (uint64_t)v335, &qword_1EF1BD390);
    sub_1B8B06074((uint64_t)v338, (uint64_t)v336, &qword_1EF1BD390);
    v134 = (__int128 *)v338;
    goto LABEL_78;
  }
  return v75 & 1;
}

unint64_t sub_1B8B7BC50()
{
  unint64_t result;

  result = qword_1EF1BE370;
  if (!qword_1EF1BE370)
  {
    result = MEMORY[0x1BCCB79D0](&unk_1B8BAE47C, &type metadata for EventModelObject.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF1BE370);
  }
  return result;
}

unint64_t sub_1B8B7BC94()
{
  unint64_t result;

  result = qword_1EF1BE388;
  if (!qword_1EF1BE388)
  {
    result = MEMORY[0x1BCCB79D0](&protocol conformance descriptor for EventLocationModelObject, &type metadata for EventLocationModelObject);
    atomic_store(result, (unint64_t *)&qword_1EF1BE388);
  }
  return result;
}

unint64_t sub_1B8B7BCD8()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_1EF1BE3B0;
  if (!qword_1EF1BE3B0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EF1BE3A8);
    v2 = sub_1B8ADBDEC(&qword_1EF1BE3B8, (uint64_t (*)(uint64_t))type metadata accessor for EventAlarmModelObject, (uint64_t)&protocol conformance descriptor for EventAlarmModelObject);
    result = MEMORY[0x1BCCB79D0](MEMORY[0x1E0DEAF10], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_1EF1BE3B0);
  }
  return result;
}

unint64_t sub_1B8B7BD54()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_1EF1BE3D0;
  if (!qword_1EF1BE3D0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EF1BE3C8);
    v2 = sub_1B8ADBDEC(&qword_1EF1BE3D8, type metadata accessor for EventRecurrenceRuleModelObject, (uint64_t)&protocol conformance descriptor for EventRecurrenceRuleModelObject);
    result = MEMORY[0x1BCCB79D0](MEMORY[0x1E0DEAF10], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_1EF1BE3D0);
  }
  return result;
}

unint64_t sub_1B8B7BDD0()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_1EF1BE3F0;
  if (!qword_1EF1BE3F0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EF1BE3E8);
    v2 = sub_1B8ADBDEC(&qword_1EF1BE3F8, type metadata accessor for EventAttendeeModelObject, (uint64_t)&protocol conformance descriptor for EventAttendeeModelObject);
    result = MEMORY[0x1BCCB79D0](MEMORY[0x1E0DEAF10], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_1EF1BE3F0);
  }
  return result;
}

unint64_t sub_1B8B7BE4C()
{
  unint64_t result;

  result = qword_1EF1BE400;
  if (!qword_1EF1BE400)
  {
    result = MEMORY[0x1BCCB79D0](&protocol conformance descriptor for StringBackedURL, &type metadata for StringBackedURL);
    atomic_store(result, (unint64_t *)&qword_1EF1BE400);
  }
  return result;
}

unint64_t sub_1B8B7BE90()
{
  unint64_t result;

  result = qword_1EF1BE408;
  if (!qword_1EF1BE408)
  {
    result = MEMORY[0x1BCCB79D0](&protocol conformance descriptor for EventIntegrationModelObject, &type metadata for EventIntegrationModelObject);
    atomic_store(result, (unint64_t *)&qword_1EF1BE408);
  }
  return result;
}

unint64_t sub_1B8B7BED4()
{
  unint64_t result;

  result = qword_1EF1BE428;
  if (!qword_1EF1BE428)
  {
    result = MEMORY[0x1BCCB79D0](&protocol conformance descriptor for EventLocationModelObject, &type metadata for EventLocationModelObject);
    atomic_store(result, (unint64_t *)&qword_1EF1BE428);
  }
  return result;
}

unint64_t sub_1B8B7BF18()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_1EF1BE448;
  if (!qword_1EF1BE448)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EF1BE3A8);
    v2 = sub_1B8ADBDEC(&qword_1EF1BE450, (uint64_t (*)(uint64_t))type metadata accessor for EventAlarmModelObject, (uint64_t)&protocol conformance descriptor for EventAlarmModelObject);
    result = MEMORY[0x1BCCB79D0](MEMORY[0x1E0DEAF40], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_1EF1BE448);
  }
  return result;
}

unint64_t sub_1B8B7BF94()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_1EF1BE460;
  if (!qword_1EF1BE460)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EF1BE3C8);
    v2 = sub_1B8ADBDEC(&qword_1EF1BE468, type metadata accessor for EventRecurrenceRuleModelObject, (uint64_t)&protocol conformance descriptor for EventRecurrenceRuleModelObject);
    result = MEMORY[0x1BCCB79D0](MEMORY[0x1E0DEAF40], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_1EF1BE460);
  }
  return result;
}

unint64_t sub_1B8B7C010()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_1EF1BE478;
  if (!qword_1EF1BE478)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EF1BE3E8);
    v2 = sub_1B8ADBDEC(&qword_1EF1BE480, type metadata accessor for EventAttendeeModelObject, (uint64_t)&protocol conformance descriptor for EventAttendeeModelObject);
    result = MEMORY[0x1BCCB79D0](MEMORY[0x1E0DEAF40], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_1EF1BE478);
  }
  return result;
}

unint64_t sub_1B8B7C08C()
{
  unint64_t result;

  result = qword_1EF1BE488;
  if (!qword_1EF1BE488)
  {
    result = MEMORY[0x1BCCB79D0](&protocol conformance descriptor for StringBackedURL, &type metadata for StringBackedURL);
    atomic_store(result, (unint64_t *)&qword_1EF1BE488);
  }
  return result;
}

unint64_t sub_1B8B7C0D0()
{
  unint64_t result;

  result = qword_1EF1BE490;
  if (!qword_1EF1BE490)
  {
    result = MEMORY[0x1BCCB79D0](&protocol conformance descriptor for EventIntegrationModelObject, &type metadata for EventIntegrationModelObject);
    atomic_store(result, (unint64_t *)&qword_1EF1BE490);
  }
  return result;
}

uint64_t sub_1B8B7C114()
{
  return sub_1B8ADBDEC(&qword_1EF1BE498, (uint64_t (*)(uint64_t))type metadata accessor for EventAlarmModelObject, (uint64_t)&protocol conformance descriptor for EventAlarmModelObject);
}

uint64_t sub_1B8B7C140()
{
  return sub_1B8ADBDEC(&qword_1EF1BE4A0, type metadata accessor for EventAttendeeModelObject, (uint64_t)&protocol conformance descriptor for EventAttendeeModelObject);
}

uint64_t sub_1B8B7C16C()
{
  return sub_1B8ADBDEC(&qword_1EF1BE4A8, (uint64_t (*)(uint64_t))type metadata accessor for EventCalendarModelObject, (uint64_t)&protocol conformance descriptor for EventCalendarModelObject);
}

_UNKNOWN **sub_1B8B7C198()
{
  return &protocol witness table for EventIntegrationModelObject;
}

_UNKNOWN **sub_1B8B7C1A4()
{
  return &protocol witness table for EventLocationModelObject;
}

uint64_t sub_1B8B7C1B0()
{
  return sub_1B8ADBDEC(&qword_1EF1BE4B0, type metadata accessor for EventOrganizerModelObject, (uint64_t)&protocol conformance descriptor for EventOrganizerModelObject);
}

_UNKNOWN **sub_1B8B7C1DC()
{
  return &protocol witness table for EventRecurrenceRuleModelObject;
}

_UNKNOWN **sub_1B8B7C1E8()
{
  return &protocol witness table for EventVirtualConferenceModelObject;
}

uint64_t sub_1B8B7C1F4(uint64_t a1)
{
  uint64_t result;

  result = sub_1B8ADBDEC(&qword_1EF1BE4B8, (uint64_t (*)(uint64_t))type metadata accessor for EventModelObject, (uint64_t)&protocol conformance descriptor for EventModelObject);
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

uint64_t sub_1B8B7C230()
{
  return sub_1B8ADBDEC(&qword_1EF1BE4C0, (uint64_t (*)(uint64_t))type metadata accessor for EventModelObject, (uint64_t)&protocol conformance descriptor for EventModelObject);
}

uint64_t sub_1B8B7C25C@<X0>(uint64_t a1@<X0>, BOOL *a2@<X8>)
{
  uint64_t result;

  result = type metadata accessor for EventModelObject();
  *a2 = *(_QWORD *)(a1 + *(int *)(result + 96)) != 0;
  return result;
}

uint64_t sub_1B8B7C2A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B8B72C6C(a1, a2, a3, a4, &qword_1EF1BE320, (uint64_t (*)(char *))EventModelObject.singleRecurrenceRule.setter);
}

uint64_t sub_1B8B7C2C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B8B72C6C(a1, a2, a3, a4, &qword_1ED1B3020, (uint64_t (*)(char *))EventModelObject.conferenceURLForDisplay.setter);
}

char *initializeBufferWithCopyOfBuffer for EventModelObject(char *a1, char *a2, int *a3)
{
  char *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  void (*v14)(char *, char *, uint64_t);
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  unsigned int (*v21)(char *, uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  unsigned int (**v32)(_QWORD *, uint64_t, uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unsigned int (*v39)(char *, uint64_t, uint64_t);
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  char *v51;
  uint64_t *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  void *v66;
  uint64_t v67;
  unint64_t v68;
  id v69;
  uint64_t v70;
  uint64_t v71;
  __int128 v72;
  __int128 v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  char *v84;
  uint64_t v85;
  __int128 v86;
  __int128 v87;
  __int128 v88;
  __int128 v89;
  __int128 v90;
  void *v91;
  uint64_t v92;
  uint64_t *v93;
  unint64_t v94;
  id v95;
  uint64_t v96;
  uint64_t v97;
  __int128 v98;
  __int128 v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  char *v110;
  uint64_t v111;
  __int128 v112;
  __int128 v113;
  __int128 v114;
  __int128 v115;
  __int128 v116;
  void *v117;
  uint64_t v118;
  uint64_t *v119;
  unint64_t v120;
  id v121;
  uint64_t v122;
  uint64_t v123;
  __int128 v124;
  __int128 v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  char *v136;
  char *v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  __int128 v147;
  __int128 v148;
  __int128 v149;
  __int128 v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  unsigned int (*v155)(char *, uint64_t, uint64_t);
  uint64_t v156;
  uint64_t v157;
  char *v158;
  char *v159;
  uint64_t v160;
  uint64_t v161;
  char *v162;
  char *v163;
  uint64_t v164;
  void (*v165)(char *, _QWORD, uint64_t, int *);
  uint64_t v166;
  uint64_t v167;
  char *v168;
  uint64_t *v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  char *v175;
  char *v176;
  unsigned int (*v177)(char *, uint64_t, uint64_t);
  uint64_t v178;
  uint64_t v179;
  char *v180;
  char *v181;
  int *v182;
  uint64_t v183;
  unsigned int (*v184)(char *, uint64_t, int *);
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  char *v193;
  char *v194;
  uint64_t v195;
  uint64_t v196;
  char *v197;
  char *v198;
  uint64_t v199;
  void (*v200)(char *, _QWORD, uint64_t, int *);
  uint64_t v201;
  uint64_t v202;
  char *v203;
  char *v204;
  int *v205;
  uint64_t v206;
  unsigned int (*v207)(char *, uint64_t, int *);
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  char *v216;
  char *v217;
  uint64_t v218;
  uint64_t v219;
  char *v220;
  char *v221;
  uint64_t v222;
  uint64_t v223;
  char *v224;
  char *v225;
  uint64_t v226;
  void (*v227)(char *, _QWORD, uint64_t, int *);
  uint64_t v228;
  uint64_t v229;
  char *v230;
  char *v231;
  uint64_t v232;
  uint64_t v233;
  char *v234;
  char *v235;
  uint64_t v236;
  uint64_t v237;
  char *v238;
  char *v239;
  uint64_t v240;
  __int128 v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v246;
  char *__dst;
  char *__dsta;
  char *v249;
  char *v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  void (**v254)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t *v255;
  int *v256;
  char *v257;
  char *v258;
  void (*v259)(char *, char *, uint64_t);
  unsigned int (*v260)(char *, uint64_t, uint64_t);
  uint64_t v261;
  uint64_t v262;
  char *v263;
  unsigned int (*v264)(char *, uint64_t, uint64_t);
  uint64_t v265;
  uint64_t v266;
  char *v267;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v23 = *(_QWORD *)a2;
    *(_QWORD *)v4 = *(_QWORD *)a2;
    v4 = (char *)(v23 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = *((_QWORD *)a2 + 1);
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *((_QWORD *)a1 + 1) = v7;
    v8 = *((_QWORD *)a2 + 3);
    *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
    *((_QWORD *)a1 + 3) = v8;
    v9 = *((_QWORD *)a2 + 5);
    v10 = a3[7];
    v11 = &a1[v10];
    v12 = &a2[v10];
    *((_QWORD *)a1 + 4) = *((_QWORD *)a2 + 4);
    *((_QWORD *)a1 + 5) = v9;
    v13 = sub_1B8B9B0F0();
    v265 = *(_QWORD *)(v13 - 8);
    v14 = *(void (**)(char *, char *, uint64_t))(v265 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v14(v11, v12, v13);
    v259 = v14;
    v262 = v13;
    v14(&v4[a3[8]], &a2[a3[8]], v13);
    v15 = a3[10];
    v4[a3[9]] = a2[a3[9]];
    v4[v15] = a2[v15];
    v16 = a3[11];
    v17 = &v4[v16];
    v18 = &a2[v16];
    v19 = sub_1B8B9B2B8();
    v20 = *(_QWORD *)(v19 - 8);
    v21 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48);
    if (v21(v18, 1, v19))
    {
      v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1B8F70);
      memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v17, v18, v19);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
    }
    v24 = a3[12];
    v25 = &v4[v24];
    v26 = &a2[v24];
    if (v21(&a2[v24], 1, v19))
    {
      v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1B8F70);
      memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v25, v26, v19);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v25, 0, 1, v19);
    }
    v28 = a3[14];
    v4[a3[13]] = a2[a3[13]];
    v29 = &v4[v28];
    v30 = &a2[v28];
    v31 = type metadata accessor for EventVirtualConferenceModelObject(0);
    v32 = *(unsigned int (***)(_QWORD *, uint64_t, uint64_t))(v31 - 8);
    if (((unsigned int (**)(char *, uint64_t, uint64_t))v32)[6](v30, 1, v31))
    {
      v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1BD370);
      memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
    }
    else
    {
      v254 = (void (**)(char *, _QWORD, uint64_t, uint64_t))v32;
      v34 = *((_QWORD *)v30 + 1);
      *(_QWORD *)v29 = *(_QWORD *)v30;
      *((_QWORD *)v29 + 1) = v34;
      v35 = *((_QWORD *)v30 + 3);
      *((_QWORD *)v29 + 2) = *((_QWORD *)v30 + 2);
      *((_QWORD *)v29 + 3) = v35;
      v36 = *((_QWORD *)v30 + 5);
      *((_QWORD *)v29 + 4) = *((_QWORD *)v30 + 4);
      *((_QWORD *)v29 + 5) = v36;
      *((_QWORD *)v29 + 6) = *((_QWORD *)v30 + 6);
      v29[56] = v30[56];
      *((_QWORD *)v29 + 8) = *((_QWORD *)v30 + 8);
      v37 = *(int *)(v31 + 40);
      __dst = &v29[v37];
      v249 = &v30[v37];
      v38 = sub_1B8B9B054();
      v246 = *(_QWORD *)(v38 - 8);
      v39 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v246 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v39(v249, 1, v38))
      {
        v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1B3020);
        memcpy(__dst, v249, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
        v41 = v246;
      }
      else
      {
        v41 = v246;
        (*(void (**)(char *, char *, uint64_t))(v246 + 16))(__dst, v249, v38);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v246 + 56))(__dst, 0, 1, v38);
      }
      v42 = *(int *)(v31 + 44);
      v43 = &v29[v42];
      v44 = &v30[v42];
      if (v39(v44, 1, v38))
      {
        v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1B3020);
        memcpy(v43, v44, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v41 + 16))(v43, v44, v38);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v41 + 56))(v43, 0, 1, v38);
      }
      v254[7](v29, 0, 1, v31);
    }
    v46 = a3[15];
    v47 = a3[16];
    v48 = &v4[v46];
    v49 = &a2[v46];
    v50 = *((_QWORD *)v49 + 1);
    *(_QWORD *)v48 = *(_QWORD *)v49;
    *((_QWORD *)v48 + 1) = v50;
    v51 = &v4[v47];
    v52 = (uint64_t *)&a2[v47];
    v53 = *v52;
    v54 = v52[1];
    v55 = a3[17];
    v56 = a3[18];
    v57 = *(_QWORD *)&a2[v55];
    *(_QWORD *)v51 = v53;
    *((_QWORD *)v51 + 1) = v54;
    *(_QWORD *)&v4[v55] = v57;
    v58 = &v4[v56];
    v59 = &a2[v56];
    v60 = *(_QWORD *)&a2[v56 + 8];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v60 == 1)
    {
      v61 = *((_OWORD *)v59 + 9);
      *((_OWORD *)v58 + 8) = *((_OWORD *)v59 + 8);
      *((_OWORD *)v58 + 9) = v61;
      *((_OWORD *)v58 + 10) = *((_OWORD *)v59 + 10);
      v62 = *((_OWORD *)v59 + 5);
      *((_OWORD *)v58 + 4) = *((_OWORD *)v59 + 4);
      *((_OWORD *)v58 + 5) = v62;
      v63 = *((_OWORD *)v59 + 7);
      *((_OWORD *)v58 + 6) = *((_OWORD *)v59 + 6);
      *((_OWORD *)v58 + 7) = v63;
      v64 = *((_OWORD *)v59 + 1);
      *(_OWORD *)v58 = *(_OWORD *)v59;
      *((_OWORD *)v58 + 1) = v64;
      v65 = *((_OWORD *)v59 + 3);
      *((_OWORD *)v58 + 2) = *((_OWORD *)v59 + 2);
      *((_OWORD *)v58 + 3) = v65;
    }
    else
    {
      *(_QWORD *)v58 = *(_QWORD *)v59;
      *((_QWORD *)v58 + 1) = v60;
      v66 = (void *)*((_QWORD *)v59 + 2);
      *((_QWORD *)v58 + 2) = v66;
      *(_OWORD *)(v58 + 24) = *(_OWORD *)(v59 + 24);
      v67 = *((_QWORD *)v59 + 6);
      *((_QWORD *)v58 + 5) = *((_QWORD *)v59 + 5);
      *((_QWORD *)v58 + 6) = v67;
      *((_QWORD *)v58 + 7) = *((_QWORD *)v59 + 7);
      v255 = (uint64_t *)(v59 + 64);
      v68 = *((_QWORD *)v59 + 9);
      swift_bridgeObjectRetain();
      v69 = v66;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v68 >> 60 == 15)
      {
        *((_OWORD *)v58 + 4) = *(_OWORD *)v255;
      }
      else
      {
        v70 = *v255;
        sub_1B8ADC5E4(*v255, v68);
        *((_QWORD *)v58 + 8) = v70;
        *((_QWORD *)v58 + 9) = v68;
      }
      v58[80] = v59[80];
      v71 = *((_QWORD *)v59 + 13);
      if (v71 == 1)
      {
        v72 = *(_OWORD *)(v59 + 136);
        *(_OWORD *)(v58 + 120) = *(_OWORD *)(v59 + 120);
        *(_OWORD *)(v58 + 136) = v72;
        *(_OWORD *)(v58 + 152) = *(_OWORD *)(v59 + 152);
        *((_QWORD *)v58 + 21) = *((_QWORD *)v59 + 21);
        v73 = *(_OWORD *)(v59 + 104);
        *(_OWORD *)(v58 + 88) = *(_OWORD *)(v59 + 88);
        *(_OWORD *)(v58 + 104) = v73;
      }
      else
      {
        *(_OWORD *)(v58 + 88) = *(_OWORD *)(v59 + 88);
        v74 = *((_QWORD *)v59 + 14);
        v75 = *((_QWORD *)v59 + 15);
        *((_QWORD *)v58 + 13) = v71;
        *((_QWORD *)v58 + 14) = v74;
        v76 = *((_QWORD *)v59 + 16);
        v77 = *((_QWORD *)v59 + 17);
        *((_QWORD *)v58 + 15) = v75;
        *((_QWORD *)v58 + 16) = v76;
        v78 = *((_QWORD *)v59 + 18);
        v79 = *((_QWORD *)v59 + 19);
        *((_QWORD *)v58 + 17) = v77;
        *((_QWORD *)v58 + 18) = v78;
        v80 = *((_QWORD *)v59 + 20);
        v81 = *((_QWORD *)v59 + 21);
        *((_QWORD *)v58 + 19) = v79;
        *((_QWORD *)v58 + 20) = v80;
        *((_QWORD *)v58 + 21) = v81;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
    }
    v82 = a3[19];
    v83 = &v4[v82];
    v84 = &a2[v82];
    v85 = *(_QWORD *)&a2[v82 + 8];
    if (v85 == 1)
    {
      v86 = *((_OWORD *)v84 + 9);
      *((_OWORD *)v83 + 8) = *((_OWORD *)v84 + 8);
      *((_OWORD *)v83 + 9) = v86;
      *((_OWORD *)v83 + 10) = *((_OWORD *)v84 + 10);
      v87 = *((_OWORD *)v84 + 5);
      *((_OWORD *)v83 + 4) = *((_OWORD *)v84 + 4);
      *((_OWORD *)v83 + 5) = v87;
      v88 = *((_OWORD *)v84 + 7);
      *((_OWORD *)v83 + 6) = *((_OWORD *)v84 + 6);
      *((_OWORD *)v83 + 7) = v88;
      v89 = *((_OWORD *)v84 + 1);
      *(_OWORD *)v83 = *(_OWORD *)v84;
      *((_OWORD *)v83 + 1) = v89;
      v90 = *((_OWORD *)v84 + 3);
      *((_OWORD *)v83 + 2) = *((_OWORD *)v84 + 2);
      *((_OWORD *)v83 + 3) = v90;
    }
    else
    {
      *(_QWORD *)v83 = *(_QWORD *)v84;
      *((_QWORD *)v83 + 1) = v85;
      v91 = (void *)*((_QWORD *)v84 + 2);
      *((_QWORD *)v83 + 2) = v91;
      *(_OWORD *)(v83 + 24) = *(_OWORD *)(v84 + 24);
      v92 = *((_QWORD *)v84 + 6);
      *((_QWORD *)v83 + 5) = *((_QWORD *)v84 + 5);
      *((_QWORD *)v83 + 6) = v92;
      *((_QWORD *)v83 + 7) = *((_QWORD *)v84 + 7);
      v93 = (uint64_t *)(v84 + 64);
      v94 = *((_QWORD *)v84 + 9);
      swift_bridgeObjectRetain();
      v95 = v91;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v94 >> 60 == 15)
      {
        *((_OWORD *)v83 + 4) = *(_OWORD *)v93;
      }
      else
      {
        v96 = *v93;
        sub_1B8ADC5E4(*v93, v94);
        *((_QWORD *)v83 + 8) = v96;
        *((_QWORD *)v83 + 9) = v94;
      }
      v83[80] = v84[80];
      v97 = *((_QWORD *)v84 + 13);
      if (v97 == 1)
      {
        v98 = *(_OWORD *)(v84 + 136);
        *(_OWORD *)(v83 + 120) = *(_OWORD *)(v84 + 120);
        *(_OWORD *)(v83 + 136) = v98;
        *(_OWORD *)(v83 + 152) = *(_OWORD *)(v84 + 152);
        *((_QWORD *)v83 + 21) = *((_QWORD *)v84 + 21);
        v99 = *(_OWORD *)(v84 + 104);
        *(_OWORD *)(v83 + 88) = *(_OWORD *)(v84 + 88);
        *(_OWORD *)(v83 + 104) = v99;
      }
      else
      {
        *(_OWORD *)(v83 + 88) = *(_OWORD *)(v84 + 88);
        v100 = *((_QWORD *)v84 + 14);
        v101 = *((_QWORD *)v84 + 15);
        *((_QWORD *)v83 + 13) = v97;
        *((_QWORD *)v83 + 14) = v100;
        v102 = *((_QWORD *)v84 + 16);
        v103 = *((_QWORD *)v84 + 17);
        *((_QWORD *)v83 + 15) = v101;
        *((_QWORD *)v83 + 16) = v102;
        v104 = *((_QWORD *)v84 + 18);
        v105 = *((_QWORD *)v84 + 19);
        *((_QWORD *)v83 + 17) = v103;
        *((_QWORD *)v83 + 18) = v104;
        v106 = *((_QWORD *)v84 + 20);
        v107 = *((_QWORD *)v84 + 21);
        *((_QWORD *)v83 + 19) = v105;
        *((_QWORD *)v83 + 20) = v106;
        *((_QWORD *)v83 + 21) = v107;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
    }
    v108 = a3[20];
    v109 = &v4[v108];
    v110 = &a2[v108];
    v111 = *(_QWORD *)&a2[v108 + 8];
    if (v111 == 1)
    {
      v112 = *((_OWORD *)v110 + 9);
      *((_OWORD *)v109 + 8) = *((_OWORD *)v110 + 8);
      *((_OWORD *)v109 + 9) = v112;
      *((_OWORD *)v109 + 10) = *((_OWORD *)v110 + 10);
      v113 = *((_OWORD *)v110 + 5);
      *((_OWORD *)v109 + 4) = *((_OWORD *)v110 + 4);
      *((_OWORD *)v109 + 5) = v113;
      v114 = *((_OWORD *)v110 + 7);
      *((_OWORD *)v109 + 6) = *((_OWORD *)v110 + 6);
      *((_OWORD *)v109 + 7) = v114;
      v115 = *((_OWORD *)v110 + 1);
      *(_OWORD *)v109 = *(_OWORD *)v110;
      *((_OWORD *)v109 + 1) = v115;
      v116 = *((_OWORD *)v110 + 3);
      *((_OWORD *)v109 + 2) = *((_OWORD *)v110 + 2);
      *((_OWORD *)v109 + 3) = v116;
    }
    else
    {
      *(_QWORD *)v109 = *(_QWORD *)v110;
      *((_QWORD *)v109 + 1) = v111;
      v117 = (void *)*((_QWORD *)v110 + 2);
      *((_QWORD *)v109 + 2) = v117;
      *(_OWORD *)(v109 + 24) = *(_OWORD *)(v110 + 24);
      v118 = *((_QWORD *)v110 + 6);
      *((_QWORD *)v109 + 5) = *((_QWORD *)v110 + 5);
      *((_QWORD *)v109 + 6) = v118;
      *((_QWORD *)v109 + 7) = *((_QWORD *)v110 + 7);
      v119 = (uint64_t *)(v110 + 64);
      v120 = *((_QWORD *)v110 + 9);
      swift_bridgeObjectRetain();
      v121 = v117;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v120 >> 60 == 15)
      {
        *((_OWORD *)v109 + 4) = *(_OWORD *)v119;
      }
      else
      {
        v122 = *v119;
        sub_1B8ADC5E4(*v119, v120);
        *((_QWORD *)v109 + 8) = v122;
        *((_QWORD *)v109 + 9) = v120;
      }
      v109[80] = v110[80];
      v123 = *((_QWORD *)v110 + 13);
      if (v123 == 1)
      {
        v124 = *(_OWORD *)(v110 + 136);
        *(_OWORD *)(v109 + 120) = *(_OWORD *)(v110 + 120);
        *(_OWORD *)(v109 + 136) = v124;
        *(_OWORD *)(v109 + 152) = *(_OWORD *)(v110 + 152);
        *((_QWORD *)v109 + 21) = *((_QWORD *)v110 + 21);
        v125 = *(_OWORD *)(v110 + 104);
        *(_OWORD *)(v109 + 88) = *(_OWORD *)(v110 + 88);
        *(_OWORD *)(v109 + 104) = v125;
      }
      else
      {
        *(_OWORD *)(v109 + 88) = *(_OWORD *)(v110 + 88);
        v126 = *((_QWORD *)v110 + 14);
        v127 = *((_QWORD *)v110 + 15);
        *((_QWORD *)v109 + 13) = v123;
        *((_QWORD *)v109 + 14) = v126;
        v128 = *((_QWORD *)v110 + 16);
        v129 = *((_QWORD *)v110 + 17);
        *((_QWORD *)v109 + 15) = v127;
        *((_QWORD *)v109 + 16) = v128;
        v130 = *((_QWORD *)v110 + 18);
        v131 = *((_QWORD *)v110 + 19);
        *((_QWORD *)v109 + 17) = v129;
        *((_QWORD *)v109 + 18) = v130;
        v132 = *((_QWORD *)v110 + 20);
        v133 = *((_QWORD *)v110 + 21);
        *((_QWORD *)v109 + 19) = v131;
        *((_QWORD *)v109 + 20) = v132;
        *((_QWORD *)v109 + 21) = v133;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
    }
    v134 = a3[22];
    *(_QWORD *)&v4[a3[21]] = *(_QWORD *)&a2[a3[21]];
    *(_QWORD *)&v4[v134] = *(_QWORD *)&a2[v134];
    v135 = a3[23];
    v136 = &v4[v135];
    v137 = &a2[v135];
    v138 = type metadata accessor for EventCalendarModelObject();
    v139 = *(_QWORD *)(v138 - 8);
    v140 = v265;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v139 + 48))(v137, 1, v138))
    {
      v141 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1BD368);
      memcpy(v136, v137, *(_QWORD *)(*(_QWORD *)(v141 - 8) + 64));
    }
    else
    {
      v251 = v139;
      v142 = *((_QWORD *)v137 + 1);
      *(_QWORD *)v136 = *(_QWORD *)v137;
      *((_QWORD *)v136 + 1) = v142;
      *((_OWORD *)v136 + 1) = *((_OWORD *)v137 + 1);
      v143 = *((_QWORD *)v137 + 5);
      *((_QWORD *)v136 + 4) = *((_QWORD *)v137 + 4);
      *((_QWORD *)v136 + 5) = v143;
      *((_QWORD *)v136 + 6) = *((_QWORD *)v137 + 6);
      *(_OWORD *)(v136 + 56) = *(_OWORD *)(v137 + 56);
      *((_QWORD *)v136 + 9) = *((_QWORD *)v137 + 9);
      v136[80] = v137[80];
      *((_QWORD *)v136 + 11) = *((_QWORD *)v137 + 11);
      v144 = *((_QWORD *)v137 + 13);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v144)
      {
        *((_QWORD *)v136 + 12) = *((_QWORD *)v137 + 12);
        *((_QWORD *)v136 + 13) = v144;
        v145 = *((_QWORD *)v137 + 15);
        *((_QWORD *)v136 + 14) = *((_QWORD *)v137 + 14);
        *((_QWORD *)v136 + 15) = v145;
        *((_OWORD *)v136 + 8) = *((_OWORD *)v137 + 8);
        *((_QWORD *)v136 + 18) = *((_QWORD *)v137 + 18);
        *((_DWORD *)v136 + 38) = *((_DWORD *)v137 + 38);
        v136[156] = v137[156];
        v146 = *((_QWORD *)v137 + 21);
        *((_QWORD *)v136 + 20) = *((_QWORD *)v137 + 20);
        *((_QWORD *)v136 + 21) = v146;
        *((_QWORD *)v136 + 22) = *((_QWORD *)v137 + 22);
        v136[184] = v137[184];
        *((_QWORD *)v136 + 24) = *((_QWORD *)v137 + 24);
        v136[200] = v137[200];
        *((_OWORD *)v136 + 13) = *((_OWORD *)v137 + 13);
        *(_QWORD *)(v136 + 222) = *(_QWORD *)(v137 + 222);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        v147 = *((_OWORD *)v137 + 13);
        *((_OWORD *)v136 + 12) = *((_OWORD *)v137 + 12);
        *((_OWORD *)v136 + 13) = v147;
        *(_QWORD *)(v136 + 222) = *(_QWORD *)(v137 + 222);
        v148 = *((_OWORD *)v137 + 9);
        *((_OWORD *)v136 + 8) = *((_OWORD *)v137 + 8);
        *((_OWORD *)v136 + 9) = v148;
        v149 = *((_OWORD *)v137 + 11);
        *((_OWORD *)v136 + 10) = *((_OWORD *)v137 + 10);
        *((_OWORD *)v136 + 11) = v149;
        v150 = *((_OWORD *)v137 + 7);
        *((_OWORD *)v136 + 6) = *((_OWORD *)v137 + 6);
        *((_OWORD *)v136 + 7) = v150;
      }
      *(_DWORD *)(v136 + 230) = *(_DWORD *)(v137 + 230);
      *((_WORD *)v136 + 117) = *((_WORD *)v137 + 117);
      v151 = *((_QWORD *)v137 + 31);
      *((_QWORD *)v136 + 30) = *((_QWORD *)v137 + 30);
      *((_QWORD *)v136 + 31) = v151;
      *((_QWORD *)v136 + 32) = *((_QWORD *)v137 + 32);
      v256 = (int *)v138;
      v152 = *(int *)(v138 + 84);
      __dsta = &v136[v152];
      v250 = &v137[v152];
      v153 = sub_1B8B9B054();
      v154 = *(_QWORD *)(v153 - 8);
      v155 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v154 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v155(v250, 1, v153))
      {
        v156 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1B3020);
        memcpy(__dsta, v250, *(_QWORD *)(*(_QWORD *)(v156 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v154 + 16))(__dsta, v250, v153);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v154 + 56))(__dsta, 0, 1, v153);
      }
      v140 = v265;
      v157 = v256[22];
      v158 = &v136[v157];
      v159 = &v137[v157];
      v160 = *((_QWORD *)v159 + 1);
      *(_QWORD *)v158 = *(_QWORD *)v159;
      *((_QWORD *)v158 + 1) = v160;
      v161 = v256[23];
      v162 = &v136[v161];
      v163 = &v137[v161];
      v164 = *((_QWORD *)v163 + 1);
      *(_QWORD *)v162 = *(_QWORD *)v163;
      *((_QWORD *)v162 + 1) = v164;
      v136[v256[24]] = v137[v256[24]];
      v165 = *(void (**)(char *, _QWORD, uint64_t, int *))(v251 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v165(v136, 0, 1, v256);
    }
    v166 = a3[25];
    *(_QWORD *)&v4[a3[24]] = *(_QWORD *)&a2[a3[24]];
    *(_QWORD *)&v4[v166] = *(_QWORD *)&a2[v166];
    v167 = a3[27];
    *(_QWORD *)&v4[a3[26]] = *(_QWORD *)&a2[a3[26]];
    v168 = &v4[v167];
    v169 = (uint64_t *)&a2[v167];
    v170 = *v169;
    v171 = v169[1];
    v172 = a3[28];
    v173 = a3[29];
    v174 = *(_QWORD *)&a2[v172];
    *(_QWORD *)v168 = v170;
    *((_QWORD *)v168 + 1) = v171;
    *(_QWORD *)&v4[v172] = v174;
    v175 = &v4[v173];
    v176 = &a2[v173];
    v177 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v140 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v177(v176, 1, v262))
    {
      v178 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1B2D18);
      memcpy(v175, v176, *(_QWORD *)(*(_QWORD *)(v178 - 8) + 64));
    }
    else
    {
      v259(v175, v176, v262);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v140 + 56))(v175, 0, 1, v262);
    }
    v179 = a3[31];
    *(_QWORD *)&v4[a3[30]] = *(_QWORD *)&a2[a3[30]];
    v180 = &v4[v179];
    v181 = &a2[v179];
    v182 = (int *)type metadata accessor for EventOrganizerModelObject(0);
    v183 = *((_QWORD *)v182 - 1);
    v184 = *(unsigned int (**)(char *, uint64_t, int *))(v183 + 48);
    swift_bridgeObjectRetain();
    if (v184(v181, 1, v182))
    {
      v185 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1BD380);
      memcpy(v180, v181, *(_QWORD *)(*(_QWORD *)(v185 - 8) + 64));
    }
    else
    {
      v186 = *((_QWORD *)v181 + 1);
      *(_QWORD *)v180 = *(_QWORD *)v181;
      *((_QWORD *)v180 + 1) = v186;
      v187 = *((_QWORD *)v181 + 3);
      *((_QWORD *)v180 + 2) = *((_QWORD *)v181 + 2);
      *((_QWORD *)v180 + 3) = v187;
      v188 = *((_QWORD *)v181 + 5);
      *((_QWORD *)v180 + 4) = *((_QWORD *)v181 + 4);
      *((_QWORD *)v180 + 5) = v188;
      v189 = v182[7];
      v257 = &v180[v189];
      v263 = &v181[v189];
      v266 = v183;
      v190 = sub_1B8B9B054();
      v252 = *(_QWORD *)(v190 - 8);
      v260 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v252 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v260(v263, 1, v190))
      {
        v191 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1B3020);
        memcpy(v257, v263, *(_QWORD *)(*(_QWORD *)(v191 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v252 + 16))(v257, v263, v190);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v252 + 56))(v257, 0, 1, v190);
      }
      v192 = v182[8];
      v193 = &v180[v192];
      v194 = &v181[v192];
      v195 = *((_QWORD *)v194 + 1);
      *(_QWORD *)v193 = *(_QWORD *)v194;
      *((_QWORD *)v193 + 1) = v195;
      v180[v182[9]] = v181[v182[9]];
      v196 = v182[10];
      v197 = &v180[v196];
      v198 = &v181[v196];
      v199 = *((_QWORD *)v198 + 1);
      *(_QWORD *)v197 = *(_QWORD *)v198;
      *((_QWORD *)v197 + 1) = v199;
      *(_QWORD *)&v180[v182[11]] = *(_QWORD *)&v181[v182[11]];
      v200 = *(void (**)(char *, _QWORD, uint64_t, int *))(v266 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v200(v180, 0, 1, v182);
    }
    v201 = a3[33];
    *(_QWORD *)&v4[a3[32]] = *(_QWORD *)&a2[a3[32]];
    *(_QWORD *)&v4[v201] = *(_QWORD *)&a2[v201];
    v202 = a3[34];
    v203 = &v4[v202];
    v204 = &a2[v202];
    v205 = (int *)type metadata accessor for EventAttendeeModelObject(0);
    v206 = *((_QWORD *)v205 - 1);
    v207 = *(unsigned int (**)(char *, uint64_t, int *))(v206 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v207(v204, 1, v205))
    {
      v208 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1BD378);
      memcpy(v203, v204, *(_QWORD *)(*(_QWORD *)(v208 - 8) + 64));
    }
    else
    {
      v261 = v206;
      v209 = *((_QWORD *)v204 + 1);
      *(_QWORD *)v203 = *(_QWORD *)v204;
      *((_QWORD *)v203 + 1) = v209;
      v210 = *((_QWORD *)v204 + 3);
      *((_QWORD *)v203 + 2) = *((_QWORD *)v204 + 2);
      *((_QWORD *)v203 + 3) = v210;
      v211 = *((_QWORD *)v204 + 5);
      *((_QWORD *)v203 + 4) = *((_QWORD *)v204 + 4);
      *((_QWORD *)v203 + 5) = v211;
      v212 = v205[7];
      v258 = &v203[v212];
      v267 = &v204[v212];
      v213 = sub_1B8B9B054();
      v253 = *(_QWORD *)(v213 - 8);
      v264 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v253 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v264(v267, 1, v213))
      {
        v214 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1B3020);
        memcpy(v258, v267, *(_QWORD *)(*(_QWORD *)(v214 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v253 + 16))(v258, v267, v213);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v253 + 56))(v258, 0, 1, v213);
      }
      v215 = v205[8];
      v216 = &v203[v215];
      v217 = &v204[v215];
      v218 = *((_QWORD *)v217 + 1);
      *(_QWORD *)v216 = *(_QWORD *)v217;
      *((_QWORD *)v216 + 1) = v218;
      v203[v205[9]] = v204[v205[9]];
      v219 = v205[10];
      v220 = &v203[v219];
      v221 = &v204[v219];
      v222 = *((_QWORD *)v221 + 1);
      *(_QWORD *)v220 = *(_QWORD *)v221;
      *((_QWORD *)v220 + 1) = v222;
      *(_QWORD *)&v203[v205[11]] = *(_QWORD *)&v204[v205[11]];
      *(_QWORD *)&v203[v205[12]] = *(_QWORD *)&v204[v205[12]];
      *(_QWORD *)&v203[v205[13]] = *(_QWORD *)&v204[v205[13]];
      v223 = v205[14];
      v224 = &v203[v223];
      v225 = &v204[v223];
      v226 = *((_QWORD *)v225 + 1);
      *(_QWORD *)v224 = *(_QWORD *)v225;
      *((_QWORD *)v224 + 1) = v226;
      v227 = *(void (**)(char *, _QWORD, uint64_t, int *))(v261 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v227(v203, 0, 1, v205);
    }
    v228 = a3[35];
    v229 = a3[36];
    v230 = &v4[v228];
    v231 = &a2[v228];
    v232 = *((_QWORD *)v231 + 1);
    *(_QWORD *)v230 = *(_QWORD *)v231;
    *((_QWORD *)v230 + 1) = v232;
    v4[v229] = a2[v229];
    v233 = a3[38];
    v4[a3[37]] = a2[a3[37]];
    v234 = &v4[v233];
    v235 = &a2[v233];
    v236 = *((_QWORD *)v235 + 1);
    *(_QWORD *)v234 = *(_QWORD *)v235;
    *((_QWORD *)v234 + 1) = v236;
    v237 = a3[39];
    v238 = &v4[v237];
    v239 = &a2[v237];
    v240 = *(_QWORD *)&a2[v237 + 8];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v240 == 1)
    {
      v241 = *((_OWORD *)v239 + 1);
      *(_OWORD *)v238 = *(_OWORD *)v239;
      *((_OWORD *)v238 + 1) = v241;
    }
    else
    {
      *v238 = *v239;
      v242 = *((_QWORD *)v239 + 2);
      v243 = *((_QWORD *)v239 + 3);
      *((_QWORD *)v238 + 1) = v240;
      *((_QWORD *)v238 + 2) = v242;
      *((_QWORD *)v238 + 3) = v243;
      swift_retain();
      swift_bridgeObjectRetain();
    }
    v244 = a3[41];
    v4[a3[40]] = a2[a3[40]];
    v4[v244] = a2[v244];
    v4[a3[42]] = a2[a3[42]];
  }
  return v4;
}

uint64_t destroy for EventModelObject(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int (*v11)(uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unsigned int (*v19)(uint64_t, uint64_t, uint64_t);
  uint64_t v20;
  unsigned int v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t result;
  void (*v46)(uint64_t, uint64_t);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + a2[7];
  v5 = sub_1B8B9B0F0();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
  v7(v4, v5);
  v7(a1 + a2[8], v5);
  v8 = a1 + a2[11];
  v9 = sub_1B8B9B2B8();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
  if (!v11(v8, 1, v9))
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
  v12 = a1 + a2[12];
  if (!v11(v12, 1, v9))
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v12, v9);
  v13 = a1 + a2[14];
  v14 = type metadata accessor for EventVirtualConferenceModelObject(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 48))(v13, 1, v14))
  {
    v46 = v7;
    v15 = v6;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v16 = v13 + *(int *)(v14 + 40);
    v17 = sub_1B8B9B054();
    v18 = *(_QWORD *)(v17 - 8);
    v19 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v18 + 48);
    if (!v19(v16, 1, v17))
      (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v16, v17);
    v20 = v13 + *(int *)(v14 + 44);
    v21 = v19(v20, 1, v17);
    v6 = v15;
    v7 = v46;
    if (!v21)
      (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v20, v17);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v22 = a1 + a2[18];
  if (*(_QWORD *)(v22 + 8) != 1)
  {
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v23 = *(_QWORD *)(v22 + 72);
    if (v23 >> 60 != 15)
      sub_1B8ADC698(*(_QWORD *)(v22 + 64), v23);
    if (*(_QWORD *)(v22 + 104) != 1)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
  }
  v24 = a1 + a2[19];
  if (*(_QWORD *)(v24 + 8) != 1)
  {
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v25 = *(_QWORD *)(v24 + 72);
    if (v25 >> 60 != 15)
      sub_1B8ADC698(*(_QWORD *)(v24 + 64), v25);
    if (*(_QWORD *)(v24 + 104) != 1)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
  }
  v26 = a1 + a2[20];
  if (*(_QWORD *)(v26 + 8) != 1)
  {
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v27 = *(_QWORD *)(v26 + 72);
    if (v27 >> 60 != 15)
      sub_1B8ADC698(*(_QWORD *)(v26 + 64), v27);
    if (*(_QWORD *)(v26 + 104) != 1)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
  }
  v28 = a1 + a2[23];
  v29 = type metadata accessor for EventCalendarModelObject();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 48))(v28, 1, v29))
  {
    v30 = v6;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*(_QWORD *)(v28 + 104))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v31 = v28 + *(int *)(v29 + 84);
    v32 = sub_1B8B9B054();
    v33 = *(_QWORD *)(v32 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v33 + 48))(v31, 1, v32))
      (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v31, v32);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v6 = v30;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v34 = a1 + a2[29];
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v34, 1, v5))
    v7(v34, v5);
  swift_bridgeObjectRelease();
  v35 = a1 + a2[31];
  v36 = type metadata accessor for EventOrganizerModelObject(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 48))(v35, 1, v36))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v37 = v35 + *(int *)(v36 + 28);
    v38 = sub_1B8B9B054();
    v39 = *(_QWORD *)(v38 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v39 + 48))(v37, 1, v38))
      (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v37, v38);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v40 = a1 + a2[34];
  v41 = type metadata accessor for EventAttendeeModelObject(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 48))(v40, 1, v41))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v42 = v40 + *(int *)(v41 + 28);
    v43 = sub_1B8B9B054();
    v44 = *(_QWORD *)(v43 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v44 + 48))(v42, 1, v43))
      (*(void (**)(uint64_t, uint64_t))(v44 + 8))(v42, v43);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  result = *(_QWORD *)(a1 + a2[39] + 8);
  if (result != 1)
  {
    swift_release();
    return swift_bridgeObjectRelease();
  }
  return result;
}

char *initializeWithCopy for EventModelObject(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  void (*v13)(char *, char *, uint64_t);
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  unsigned int (*v20)(char *, uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unsigned int (*v37)(char *, uint64_t, uint64_t);
  uint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  char *v49;
  uint64_t *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  void *v64;
  uint64_t v65;
  unint64_t v66;
  id v67;
  uint64_t v68;
  uint64_t v69;
  __int128 v70;
  __int128 v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  char *v82;
  uint64_t v83;
  __int128 v84;
  __int128 v85;
  __int128 v86;
  __int128 v87;
  __int128 v88;
  void *v89;
  uint64_t v90;
  uint64_t *v91;
  unint64_t v92;
  id v93;
  uint64_t v94;
  uint64_t v95;
  __int128 v96;
  __int128 v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  char *v108;
  uint64_t v109;
  __int128 v110;
  __int128 v111;
  __int128 v112;
  __int128 v113;
  __int128 v114;
  void *v115;
  uint64_t v116;
  uint64_t *v117;
  unint64_t v118;
  id v119;
  uint64_t v120;
  uint64_t v121;
  __int128 v122;
  __int128 v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  char *v134;
  char *v135;
  uint64_t v136;
  unsigned int (**v137)(_QWORD *, uint64_t, uint64_t);
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  __int128 v145;
  __int128 v146;
  __int128 v147;
  __int128 v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  unsigned int (*v153)(char *, uint64_t, uint64_t);
  uint64_t v154;
  uint64_t v155;
  char *v156;
  char *v157;
  uint64_t v158;
  uint64_t v159;
  char *v160;
  char *v161;
  uint64_t v162;
  void (*v163)(char *, _QWORD, uint64_t, int *);
  uint64_t v164;
  uint64_t v165;
  char *v166;
  uint64_t *v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  char *v173;
  char *v174;
  unsigned int (*v175)(char *, uint64_t, void *);
  uint64_t v176;
  uint64_t v177;
  char *v178;
  char *v179;
  int *v180;
  uint64_t v181;
  unsigned int (*v182)(char *, uint64_t, int *);
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  char *v191;
  char *v192;
  uint64_t v193;
  uint64_t v194;
  char *v195;
  char *v196;
  uint64_t v197;
  void (*v198)(char *, _QWORD, uint64_t, int *);
  uint64_t v199;
  uint64_t v200;
  char *v201;
  char *v202;
  int *v203;
  uint64_t v204;
  unsigned int (*v205)(char *, uint64_t, int *);
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  char *v214;
  char *v215;
  uint64_t v216;
  uint64_t v217;
  char *v218;
  char *v219;
  uint64_t v220;
  uint64_t v221;
  char *v222;
  char *v223;
  uint64_t v224;
  void (*v225)(char *, _QWORD, uint64_t, int *);
  uint64_t v226;
  uint64_t v227;
  char *v228;
  char *v229;
  uint64_t v230;
  uint64_t v231;
  char *v232;
  char *v233;
  uint64_t v234;
  uint64_t v235;
  char *v236;
  char *v237;
  uint64_t v238;
  __int128 v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  char *v244;
  char *v245;
  _QWORD *v246;
  char *v247;
  char *__dst;
  _QWORD *__dsta;
  _QWORD *__dstb;
  _QWORD *__dstc;
  uint64_t v252;
  uint64_t *v253;
  int *v254;
  unsigned int (*v255)(char *, uint64_t, uint64_t);
  unsigned int (*v256)(char *, uint64_t, uint64_t);
  void (*v257)(char *, char *, void *);
  char *v258;
  char *v259;
  void *v260;
  char *v261;
  char *v262;
  uint64_t v263;
  uint64_t v264;
  uint64_t v265;

  v6 = *((_QWORD *)a2 + 1);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *((_QWORD *)a1 + 1) = v6;
  v7 = *((_QWORD *)a2 + 3);
  *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
  *((_QWORD *)a1 + 3) = v7;
  v8 = *((_QWORD *)a2 + 5);
  v9 = a3[7];
  v10 = &a1[v9];
  v11 = &a2[v9];
  *((_QWORD *)a1 + 4) = *((_QWORD *)a2 + 4);
  *((_QWORD *)a1 + 5) = v8;
  v12 = sub_1B8B9B0F0();
  v263 = *(_QWORD *)(v12 - 8);
  v13 = *(void (**)(char *, char *, uint64_t))(v263 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v13(v10, v11, v12);
  v257 = (void (*)(char *, char *, void *))v13;
  v260 = (void *)v12;
  v13(&a1[a3[8]], &a2[a3[8]], v12);
  v14 = a3[10];
  a1[a3[9]] = a2[a3[9]];
  a1[v14] = a2[v14];
  v15 = a3[11];
  v16 = &a1[v15];
  v17 = &a2[v15];
  v18 = sub_1B8B9B2B8();
  v19 = *(_QWORD *)(v18 - 8);
  v20 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48);
  if (v20(v17, 1, v18))
  {
    v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1B8F70);
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v19 + 16))(v16, v17, v18);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
  }
  v22 = a3[12];
  v23 = &a1[v22];
  v24 = &a2[v22];
  if (v20(&a2[v22], 1, v18))
  {
    v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1B8F70);
    memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v19 + 16))(v23, v24, v18);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v23, 0, 1, v18);
  }
  v26 = a3[14];
  a1[a3[13]] = a2[a3[13]];
  v27 = &a1[v26];
  v28 = &a2[v26];
  v29 = type metadata accessor for EventVirtualConferenceModelObject(0);
  v30 = *(_QWORD *)(v29 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48))(v28, 1, v29))
  {
    v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1BD370);
    memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
  }
  else
  {
    v252 = v30;
    v32 = *((_QWORD *)v28 + 1);
    *(_QWORD *)v27 = *(_QWORD *)v28;
    *((_QWORD *)v27 + 1) = v32;
    v33 = *((_QWORD *)v28 + 3);
    *((_QWORD *)v27 + 2) = *((_QWORD *)v28 + 2);
    *((_QWORD *)v27 + 3) = v33;
    v34 = *((_QWORD *)v28 + 5);
    *((_QWORD *)v27 + 4) = *((_QWORD *)v28 + 4);
    *((_QWORD *)v27 + 5) = v34;
    *((_QWORD *)v27 + 6) = *((_QWORD *)v28 + 6);
    v27[56] = v28[56];
    *((_QWORD *)v27 + 8) = *((_QWORD *)v28 + 8);
    v35 = *(int *)(v29 + 40);
    __dst = &v27[v35];
    v244 = &v28[v35];
    v36 = sub_1B8B9B054();
    v246 = *(_QWORD **)(v36 - 8);
    v37 = (unsigned int (*)(char *, uint64_t, uint64_t))v246[6];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v37(v244, 1, v36))
    {
      v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1B3020);
      memcpy(__dst, v244, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
      v39 = v246;
    }
    else
    {
      v39 = v246;
      ((void (*)(char *, char *, uint64_t))v246[2])(__dst, v244, v36);
      ((void (*)(char *, _QWORD, uint64_t, uint64_t))v246[7])(__dst, 0, 1, v36);
    }
    v40 = *(int *)(v29 + 44);
    v41 = &v27[v40];
    v42 = &v28[v40];
    if (v37(v42, 1, v36))
    {
      v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1B3020);
      memcpy(v41, v42, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
    }
    else
    {
      ((void (*)(char *, char *, uint64_t))v39[2])(v41, v42, v36);
      ((void (*)(char *, _QWORD, uint64_t, uint64_t))v39[7])(v41, 0, 1, v36);
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v252 + 56))(v27, 0, 1, v29);
  }
  v44 = a3[15];
  v45 = a3[16];
  v46 = &a1[v44];
  v47 = &a2[v44];
  v48 = *((_QWORD *)v47 + 1);
  *(_QWORD *)v46 = *(_QWORD *)v47;
  *((_QWORD *)v46 + 1) = v48;
  v49 = &a1[v45];
  v50 = (uint64_t *)&a2[v45];
  v51 = *v50;
  v52 = v50[1];
  v53 = a3[17];
  v54 = a3[18];
  v55 = *(_QWORD *)&a2[v53];
  *(_QWORD *)v49 = v51;
  *((_QWORD *)v49 + 1) = v52;
  *(_QWORD *)&a1[v53] = v55;
  v56 = &a1[v54];
  v57 = &a2[v54];
  v58 = *(_QWORD *)&a2[v54 + 8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v58 == 1)
  {
    v59 = *((_OWORD *)v57 + 9);
    *((_OWORD *)v56 + 8) = *((_OWORD *)v57 + 8);
    *((_OWORD *)v56 + 9) = v59;
    *((_OWORD *)v56 + 10) = *((_OWORD *)v57 + 10);
    v60 = *((_OWORD *)v57 + 5);
    *((_OWORD *)v56 + 4) = *((_OWORD *)v57 + 4);
    *((_OWORD *)v56 + 5) = v60;
    v61 = *((_OWORD *)v57 + 7);
    *((_OWORD *)v56 + 6) = *((_OWORD *)v57 + 6);
    *((_OWORD *)v56 + 7) = v61;
    v62 = *((_OWORD *)v57 + 1);
    *(_OWORD *)v56 = *(_OWORD *)v57;
    *((_OWORD *)v56 + 1) = v62;
    v63 = *((_OWORD *)v57 + 3);
    *((_OWORD *)v56 + 2) = *((_OWORD *)v57 + 2);
    *((_OWORD *)v56 + 3) = v63;
  }
  else
  {
    *(_QWORD *)v56 = *(_QWORD *)v57;
    *((_QWORD *)v56 + 1) = v58;
    v64 = (void *)*((_QWORD *)v57 + 2);
    *((_QWORD *)v56 + 2) = v64;
    *(_OWORD *)(v56 + 24) = *(_OWORD *)(v57 + 24);
    v65 = *((_QWORD *)v57 + 6);
    *((_QWORD *)v56 + 5) = *((_QWORD *)v57 + 5);
    *((_QWORD *)v56 + 6) = v65;
    *((_QWORD *)v56 + 7) = *((_QWORD *)v57 + 7);
    v253 = (uint64_t *)(v57 + 64);
    v66 = *((_QWORD *)v57 + 9);
    swift_bridgeObjectRetain();
    v67 = v64;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v66 >> 60 == 15)
    {
      *((_OWORD *)v56 + 4) = *(_OWORD *)v253;
    }
    else
    {
      v68 = *v253;
      sub_1B8ADC5E4(*v253, v66);
      *((_QWORD *)v56 + 8) = v68;
      *((_QWORD *)v56 + 9) = v66;
    }
    v56[80] = v57[80];
    v69 = *((_QWORD *)v57 + 13);
    if (v69 == 1)
    {
      v70 = *(_OWORD *)(v57 + 136);
      *(_OWORD *)(v56 + 120) = *(_OWORD *)(v57 + 120);
      *(_OWORD *)(v56 + 136) = v70;
      *(_OWORD *)(v56 + 152) = *(_OWORD *)(v57 + 152);
      *((_QWORD *)v56 + 21) = *((_QWORD *)v57 + 21);
      v71 = *(_OWORD *)(v57 + 104);
      *(_OWORD *)(v56 + 88) = *(_OWORD *)(v57 + 88);
      *(_OWORD *)(v56 + 104) = v71;
    }
    else
    {
      *(_OWORD *)(v56 + 88) = *(_OWORD *)(v57 + 88);
      v72 = *((_QWORD *)v57 + 14);
      v73 = *((_QWORD *)v57 + 15);
      *((_QWORD *)v56 + 13) = v69;
      *((_QWORD *)v56 + 14) = v72;
      v74 = *((_QWORD *)v57 + 16);
      v75 = *((_QWORD *)v57 + 17);
      *((_QWORD *)v56 + 15) = v73;
      *((_QWORD *)v56 + 16) = v74;
      v76 = *((_QWORD *)v57 + 18);
      v77 = *((_QWORD *)v57 + 19);
      *((_QWORD *)v56 + 17) = v75;
      *((_QWORD *)v56 + 18) = v76;
      v78 = *((_QWORD *)v57 + 20);
      v79 = *((_QWORD *)v57 + 21);
      *((_QWORD *)v56 + 19) = v77;
      *((_QWORD *)v56 + 20) = v78;
      *((_QWORD *)v56 + 21) = v79;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
  }
  v80 = a3[19];
  v81 = &a1[v80];
  v82 = &a2[v80];
  v83 = *(_QWORD *)&a2[v80 + 8];
  if (v83 == 1)
  {
    v84 = *((_OWORD *)v82 + 9);
    *((_OWORD *)v81 + 8) = *((_OWORD *)v82 + 8);
    *((_OWORD *)v81 + 9) = v84;
    *((_OWORD *)v81 + 10) = *((_OWORD *)v82 + 10);
    v85 = *((_OWORD *)v82 + 5);
    *((_OWORD *)v81 + 4) = *((_OWORD *)v82 + 4);
    *((_OWORD *)v81 + 5) = v85;
    v86 = *((_OWORD *)v82 + 7);
    *((_OWORD *)v81 + 6) = *((_OWORD *)v82 + 6);
    *((_OWORD *)v81 + 7) = v86;
    v87 = *((_OWORD *)v82 + 1);
    *(_OWORD *)v81 = *(_OWORD *)v82;
    *((_OWORD *)v81 + 1) = v87;
    v88 = *((_OWORD *)v82 + 3);
    *((_OWORD *)v81 + 2) = *((_OWORD *)v82 + 2);
    *((_OWORD *)v81 + 3) = v88;
  }
  else
  {
    *(_QWORD *)v81 = *(_QWORD *)v82;
    *((_QWORD *)v81 + 1) = v83;
    v89 = (void *)*((_QWORD *)v82 + 2);
    *((_QWORD *)v81 + 2) = v89;
    *(_OWORD *)(v81 + 24) = *(_OWORD *)(v82 + 24);
    v90 = *((_QWORD *)v82 + 6);
    *((_QWORD *)v81 + 5) = *((_QWORD *)v82 + 5);
    *((_QWORD *)v81 + 6) = v90;
    *((_QWORD *)v81 + 7) = *((_QWORD *)v82 + 7);
    v91 = (uint64_t *)(v82 + 64);
    v92 = *((_QWORD *)v82 + 9);
    swift_bridgeObjectRetain();
    v93 = v89;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v92 >> 60 == 15)
    {
      *((_OWORD *)v81 + 4) = *(_OWORD *)v91;
    }
    else
    {
      v94 = *v91;
      sub_1B8ADC5E4(*v91, v92);
      *((_QWORD *)v81 + 8) = v94;
      *((_QWORD *)v81 + 9) = v92;
    }
    v81[80] = v82[80];
    v95 = *((_QWORD *)v82 + 13);
    if (v95 == 1)
    {
      v96 = *(_OWORD *)(v82 + 136);
      *(_OWORD *)(v81 + 120) = *(_OWORD *)(v82 + 120);
      *(_OWORD *)(v81 + 136) = v96;
      *(_OWORD *)(v81 + 152) = *(_OWORD *)(v82 + 152);
      *((_QWORD *)v81 + 21) = *((_QWORD *)v82 + 21);
      v97 = *(_OWORD *)(v82 + 104);
      *(_OWORD *)(v81 + 88) = *(_OWORD *)(v82 + 88);
      *(_OWORD *)(v81 + 104) = v97;
    }
    else
    {
      *(_OWORD *)(v81 + 88) = *(_OWORD *)(v82 + 88);
      v98 = *((_QWORD *)v82 + 14);
      v99 = *((_QWORD *)v82 + 15);
      *((_QWORD *)v81 + 13) = v95;
      *((_QWORD *)v81 + 14) = v98;
      v100 = *((_QWORD *)v82 + 16);
      v101 = *((_QWORD *)v82 + 17);
      *((_QWORD *)v81 + 15) = v99;
      *((_QWORD *)v81 + 16) = v100;
      v102 = *((_QWORD *)v82 + 18);
      v103 = *((_QWORD *)v82 + 19);
      *((_QWORD *)v81 + 17) = v101;
      *((_QWORD *)v81 + 18) = v102;
      v104 = *((_QWORD *)v82 + 20);
      v105 = *((_QWORD *)v82 + 21);
      *((_QWORD *)v81 + 19) = v103;
      *((_QWORD *)v81 + 20) = v104;
      *((_QWORD *)v81 + 21) = v105;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
  }
  v106 = a3[20];
  v107 = &a1[v106];
  v108 = &a2[v106];
  v109 = *(_QWORD *)&a2[v106 + 8];
  if (v109 == 1)
  {
    v110 = *((_OWORD *)v108 + 9);
    *((_OWORD *)v107 + 8) = *((_OWORD *)v108 + 8);
    *((_OWORD *)v107 + 9) = v110;
    *((_OWORD *)v107 + 10) = *((_OWORD *)v108 + 10);
    v111 = *((_OWORD *)v108 + 5);
    *((_OWORD *)v107 + 4) = *((_OWORD *)v108 + 4);
    *((_OWORD *)v107 + 5) = v111;
    v112 = *((_OWORD *)v108 + 7);
    *((_OWORD *)v107 + 6) = *((_OWORD *)v108 + 6);
    *((_OWORD *)v107 + 7) = v112;
    v113 = *((_OWORD *)v108 + 1);
    *(_OWORD *)v107 = *(_OWORD *)v108;
    *((_OWORD *)v107 + 1) = v113;
    v114 = *((_OWORD *)v108 + 3);
    *((_OWORD *)v107 + 2) = *((_OWORD *)v108 + 2);
    *((_OWORD *)v107 + 3) = v114;
  }
  else
  {
    *(_QWORD *)v107 = *(_QWORD *)v108;
    *((_QWORD *)v107 + 1) = v109;
    v115 = (void *)*((_QWORD *)v108 + 2);
    *((_QWORD *)v107 + 2) = v115;
    *(_OWORD *)(v107 + 24) = *(_OWORD *)(v108 + 24);
    v116 = *((_QWORD *)v108 + 6);
    *((_QWORD *)v107 + 5) = *((_QWORD *)v108 + 5);
    *((_QWORD *)v107 + 6) = v116;
    *((_QWORD *)v107 + 7) = *((_QWORD *)v108 + 7);
    v117 = (uint64_t *)(v108 + 64);
    v118 = *((_QWORD *)v108 + 9);
    swift_bridgeObjectRetain();
    v119 = v115;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v118 >> 60 == 15)
    {
      *((_OWORD *)v107 + 4) = *(_OWORD *)v117;
    }
    else
    {
      v120 = *v117;
      sub_1B8ADC5E4(*v117, v118);
      *((_QWORD *)v107 + 8) = v120;
      *((_QWORD *)v107 + 9) = v118;
    }
    v107[80] = v108[80];
    v121 = *((_QWORD *)v108 + 13);
    if (v121 == 1)
    {
      v122 = *(_OWORD *)(v108 + 136);
      *(_OWORD *)(v107 + 120) = *(_OWORD *)(v108 + 120);
      *(_OWORD *)(v107 + 136) = v122;
      *(_OWORD *)(v107 + 152) = *(_OWORD *)(v108 + 152);
      *((_QWORD *)v107 + 21) = *((_QWORD *)v108 + 21);
      v123 = *(_OWORD *)(v108 + 104);
      *(_OWORD *)(v107 + 88) = *(_OWORD *)(v108 + 88);
      *(_OWORD *)(v107 + 104) = v123;
    }
    else
    {
      *(_OWORD *)(v107 + 88) = *(_OWORD *)(v108 + 88);
      v124 = *((_QWORD *)v108 + 14);
      v125 = *((_QWORD *)v108 + 15);
      *((_QWORD *)v107 + 13) = v121;
      *((_QWORD *)v107 + 14) = v124;
      v126 = *((_QWORD *)v108 + 16);
      v127 = *((_QWORD *)v108 + 17);
      *((_QWORD *)v107 + 15) = v125;
      *((_QWORD *)v107 + 16) = v126;
      v128 = *((_QWORD *)v108 + 18);
      v129 = *((_QWORD *)v108 + 19);
      *((_QWORD *)v107 + 17) = v127;
      *((_QWORD *)v107 + 18) = v128;
      v130 = *((_QWORD *)v108 + 20);
      v131 = *((_QWORD *)v108 + 21);
      *((_QWORD *)v107 + 19) = v129;
      *((_QWORD *)v107 + 20) = v130;
      *((_QWORD *)v107 + 21) = v131;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
  }
  v132 = a3[22];
  *(_QWORD *)&a1[a3[21]] = *(_QWORD *)&a2[a3[21]];
  *(_QWORD *)&a1[v132] = *(_QWORD *)&a2[v132];
  v133 = a3[23];
  v134 = &a1[v133];
  v135 = &a2[v133];
  v136 = type metadata accessor for EventCalendarModelObject();
  v137 = *(unsigned int (***)(_QWORD *, uint64_t, uint64_t))(v136 - 8);
  v138 = v263;
  if (((unsigned int (**)(char *, uint64_t, uint64_t))v137)[6](v135, 1, v136))
  {
    v139 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1BD368);
    memcpy(v134, v135, *(_QWORD *)(*(_QWORD *)(v139 - 8) + 64));
  }
  else
  {
    __dsta = v137;
    v140 = *((_QWORD *)v135 + 1);
    *(_QWORD *)v134 = *(_QWORD *)v135;
    *((_QWORD *)v134 + 1) = v140;
    *((_OWORD *)v134 + 1) = *((_OWORD *)v135 + 1);
    v141 = *((_QWORD *)v135 + 5);
    *((_QWORD *)v134 + 4) = *((_QWORD *)v135 + 4);
    *((_QWORD *)v134 + 5) = v141;
    *((_QWORD *)v134 + 6) = *((_QWORD *)v135 + 6);
    *(_OWORD *)(v134 + 56) = *(_OWORD *)(v135 + 56);
    *((_QWORD *)v134 + 9) = *((_QWORD *)v135 + 9);
    v134[80] = v135[80];
    *((_QWORD *)v134 + 11) = *((_QWORD *)v135 + 11);
    v142 = *((_QWORD *)v135 + 13);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v142)
    {
      *((_QWORD *)v134 + 12) = *((_QWORD *)v135 + 12);
      *((_QWORD *)v134 + 13) = v142;
      v143 = *((_QWORD *)v135 + 15);
      *((_QWORD *)v134 + 14) = *((_QWORD *)v135 + 14);
      *((_QWORD *)v134 + 15) = v143;
      *((_OWORD *)v134 + 8) = *((_OWORD *)v135 + 8);
      *((_QWORD *)v134 + 18) = *((_QWORD *)v135 + 18);
      *((_DWORD *)v134 + 38) = *((_DWORD *)v135 + 38);
      v134[156] = v135[156];
      v144 = *((_QWORD *)v135 + 21);
      *((_QWORD *)v134 + 20) = *((_QWORD *)v135 + 20);
      *((_QWORD *)v134 + 21) = v144;
      *((_QWORD *)v134 + 22) = *((_QWORD *)v135 + 22);
      v134[184] = v135[184];
      *((_QWORD *)v134 + 24) = *((_QWORD *)v135 + 24);
      v134[200] = v135[200];
      *((_OWORD *)v134 + 13) = *((_OWORD *)v135 + 13);
      *(_QWORD *)(v134 + 222) = *(_QWORD *)(v135 + 222);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v145 = *((_OWORD *)v135 + 13);
      *((_OWORD *)v134 + 12) = *((_OWORD *)v135 + 12);
      *((_OWORD *)v134 + 13) = v145;
      *(_QWORD *)(v134 + 222) = *(_QWORD *)(v135 + 222);
      v146 = *((_OWORD *)v135 + 9);
      *((_OWORD *)v134 + 8) = *((_OWORD *)v135 + 8);
      *((_OWORD *)v134 + 9) = v146;
      v147 = *((_OWORD *)v135 + 11);
      *((_OWORD *)v134 + 10) = *((_OWORD *)v135 + 10);
      *((_OWORD *)v134 + 11) = v147;
      v148 = *((_OWORD *)v135 + 7);
      *((_OWORD *)v134 + 6) = *((_OWORD *)v135 + 6);
      *((_OWORD *)v134 + 7) = v148;
    }
    *(_DWORD *)(v134 + 230) = *(_DWORD *)(v135 + 230);
    *((_WORD *)v134 + 117) = *((_WORD *)v135 + 117);
    v149 = *((_QWORD *)v135 + 31);
    *((_QWORD *)v134 + 30) = *((_QWORD *)v135 + 30);
    *((_QWORD *)v134 + 31) = v149;
    *((_QWORD *)v134 + 32) = *((_QWORD *)v135 + 32);
    v254 = (int *)v136;
    v150 = *(int *)(v136 + 84);
    v245 = &v135[v150];
    v247 = &v134[v150];
    v151 = sub_1B8B9B054();
    v152 = *(_QWORD *)(v151 - 8);
    v153 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v152 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v153(v245, 1, v151))
    {
      v154 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1B3020);
      memcpy(v247, v245, *(_QWORD *)(*(_QWORD *)(v154 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v152 + 16))(v247, v245, v151);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v152 + 56))(v247, 0, 1, v151);
    }
    v138 = v263;
    v155 = v254[22];
    v156 = &v134[v155];
    v157 = &v135[v155];
    v158 = *((_QWORD *)v157 + 1);
    *(_QWORD *)v156 = *(_QWORD *)v157;
    *((_QWORD *)v156 + 1) = v158;
    v159 = v254[23];
    v160 = &v134[v159];
    v161 = &v135[v159];
    v162 = *((_QWORD *)v161 + 1);
    *(_QWORD *)v160 = *(_QWORD *)v161;
    *((_QWORD *)v160 + 1) = v162;
    v134[v254[24]] = v135[v254[24]];
    v163 = (void (*)(char *, _QWORD, uint64_t, int *))__dsta[7];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v163(v134, 0, 1, v254);
  }
  v164 = a3[25];
  *(_QWORD *)&a1[a3[24]] = *(_QWORD *)&a2[a3[24]];
  *(_QWORD *)&a1[v164] = *(_QWORD *)&a2[v164];
  v165 = a3[27];
  *(_QWORD *)&a1[a3[26]] = *(_QWORD *)&a2[a3[26]];
  v166 = &a1[v165];
  v167 = (uint64_t *)&a2[v165];
  v168 = *v167;
  v169 = v167[1];
  v170 = a3[28];
  v171 = a3[29];
  v172 = *(_QWORD *)&a2[v170];
  *(_QWORD *)v166 = v168;
  *((_QWORD *)v166 + 1) = v169;
  *(_QWORD *)&a1[v170] = v172;
  v173 = &a1[v171];
  v174 = &a2[v171];
  v175 = *(unsigned int (**)(char *, uint64_t, void *))(v138 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v175(v174, 1, v260))
  {
    v176 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1B2D18);
    memcpy(v173, v174, *(_QWORD *)(*(_QWORD *)(v176 - 8) + 64));
  }
  else
  {
    v257(v173, v174, v260);
    (*(void (**)(char *, _QWORD, uint64_t, void *))(v138 + 56))(v173, 0, 1, v260);
  }
  v177 = a3[31];
  *(_QWORD *)&a1[a3[30]] = *(_QWORD *)&a2[a3[30]];
  v178 = &a1[v177];
  v179 = &a2[v177];
  v180 = (int *)type metadata accessor for EventOrganizerModelObject(0);
  v181 = *((_QWORD *)v180 - 1);
  v182 = *(unsigned int (**)(char *, uint64_t, int *))(v181 + 48);
  swift_bridgeObjectRetain();
  if (v182(v179, 1, v180))
  {
    v183 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1BD380);
    memcpy(v178, v179, *(_QWORD *)(*(_QWORD *)(v183 - 8) + 64));
  }
  else
  {
    v184 = *((_QWORD *)v179 + 1);
    *(_QWORD *)v178 = *(_QWORD *)v179;
    *((_QWORD *)v178 + 1) = v184;
    v185 = *((_QWORD *)v179 + 3);
    *((_QWORD *)v178 + 2) = *((_QWORD *)v179 + 2);
    *((_QWORD *)v178 + 3) = v185;
    v186 = *((_QWORD *)v179 + 5);
    *((_QWORD *)v178 + 4) = *((_QWORD *)v179 + 4);
    *((_QWORD *)v178 + 5) = v186;
    v187 = v180[7];
    v261 = &v178[v187];
    v264 = v181;
    v258 = &v179[v187];
    v188 = sub_1B8B9B054();
    __dstb = *(_QWORD **)(v188 - 8);
    v255 = (unsigned int (*)(char *, uint64_t, uint64_t))__dstb[6];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v255(v258, 1, v188))
    {
      v189 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1B3020);
      memcpy(v261, v258, *(_QWORD *)(*(_QWORD *)(v189 - 8) + 64));
    }
    else
    {
      ((void (*)(char *, char *, uint64_t))__dstb[2])(v261, v258, v188);
      ((void (*)(char *, _QWORD, uint64_t, uint64_t))__dstb[7])(v261, 0, 1, v188);
    }
    v190 = v180[8];
    v191 = &v178[v190];
    v192 = &v179[v190];
    v193 = *((_QWORD *)v192 + 1);
    *(_QWORD *)v191 = *(_QWORD *)v192;
    *((_QWORD *)v191 + 1) = v193;
    v178[v180[9]] = v179[v180[9]];
    v194 = v180[10];
    v195 = &v178[v194];
    v196 = &v179[v194];
    v197 = *((_QWORD *)v196 + 1);
    *(_QWORD *)v195 = *(_QWORD *)v196;
    *((_QWORD *)v195 + 1) = v197;
    *(_QWORD *)&v178[v180[11]] = *(_QWORD *)&v179[v180[11]];
    v198 = *(void (**)(char *, _QWORD, uint64_t, int *))(v264 + 56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v198(v178, 0, 1, v180);
  }
  v199 = a3[33];
  *(_QWORD *)&a1[a3[32]] = *(_QWORD *)&a2[a3[32]];
  *(_QWORD *)&a1[v199] = *(_QWORD *)&a2[v199];
  v200 = a3[34];
  v201 = &a1[v200];
  v202 = &a2[v200];
  v203 = (int *)type metadata accessor for EventAttendeeModelObject(0);
  v204 = *((_QWORD *)v203 - 1);
  v205 = *(unsigned int (**)(char *, uint64_t, int *))(v204 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v205(v202, 1, v203))
  {
    v206 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1BD378);
    memcpy(v201, v202, *(_QWORD *)(*(_QWORD *)(v206 - 8) + 64));
  }
  else
  {
    v265 = v204;
    v207 = *((_QWORD *)v202 + 1);
    *(_QWORD *)v201 = *(_QWORD *)v202;
    *((_QWORD *)v201 + 1) = v207;
    v208 = *((_QWORD *)v202 + 3);
    *((_QWORD *)v201 + 2) = *((_QWORD *)v202 + 2);
    *((_QWORD *)v201 + 3) = v208;
    v209 = *((_QWORD *)v202 + 5);
    *((_QWORD *)v201 + 4) = *((_QWORD *)v202 + 4);
    *((_QWORD *)v201 + 5) = v209;
    v210 = v203[7];
    v259 = &v202[v210];
    v262 = &v201[v210];
    v211 = sub_1B8B9B054();
    __dstc = *(_QWORD **)(v211 - 8);
    v256 = (unsigned int (*)(char *, uint64_t, uint64_t))__dstc[6];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v256(v259, 1, v211))
    {
      v212 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1B3020);
      memcpy(v262, v259, *(_QWORD *)(*(_QWORD *)(v212 - 8) + 64));
    }
    else
    {
      ((void (*)(char *, char *, uint64_t))__dstc[2])(v262, v259, v211);
      ((void (*)(char *, _QWORD, uint64_t, uint64_t))__dstc[7])(v262, 0, 1, v211);
    }
    v213 = v203[8];
    v214 = &v201[v213];
    v215 = &v202[v213];
    v216 = *((_QWORD *)v215 + 1);
    *(_QWORD *)v214 = *(_QWORD *)v215;
    *((_QWORD *)v214 + 1) = v216;
    v201[v203[9]] = v202[v203[9]];
    v217 = v203[10];
    v218 = &v201[v217];
    v219 = &v202[v217];
    v220 = *((_QWORD *)v219 + 1);
    *(_QWORD *)v218 = *(_QWORD *)v219;
    *((_QWORD *)v218 + 1) = v220;
    *(_QWORD *)&v201[v203[11]] = *(_QWORD *)&v202[v203[11]];
    *(_QWORD *)&v201[v203[12]] = *(_QWORD *)&v202[v203[12]];
    *(_QWORD *)&v201[v203[13]] = *(_QWORD *)&v202[v203[13]];
    v221 = v203[14];
    v222 = &v201[v221];
    v223 = &v202[v221];
    v224 = *((_QWORD *)v223 + 1);
    *(_QWORD *)v222 = *(_QWORD *)v223;
    *((_QWORD *)v222 + 1) = v224;
    v225 = *(void (**)(char *, _QWORD, uint64_t, int *))(v265 + 56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v225(v201, 0, 1, v203);
  }
  v226 = a3[35];
  v227 = a3[36];
  v228 = &a1[v226];
  v229 = &a2[v226];
  v230 = *((_QWORD *)v229 + 1);
  *(_QWORD *)v228 = *(_QWORD *)v229;
  *((_QWORD *)v228 + 1) = v230;
  a1[v227] = a2[v227];
  v231 = a3[38];
  a1[a3[37]] = a2[a3[37]];
  v232 = &a1[v231];
  v233 = &a2[v231];
  v234 = *((_QWORD *)v233 + 1);
  *(_QWORD *)v232 = *(_QWORD *)v233;
  *((_QWORD *)v232 + 1) = v234;
  v235 = a3[39];
  v236 = &a1[v235];
  v237 = &a2[v235];
  v238 = *(_QWORD *)&a2[v235 + 8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v238 == 1)
  {
    v239 = *((_OWORD *)v237 + 1);
    *(_OWORD *)v236 = *(_OWORD *)v237;
    *((_OWORD *)v236 + 1) = v239;
  }
  else
  {
    *v236 = *v237;
    v240 = *((_QWORD *)v237 + 2);
    v241 = *((_QWORD *)v237 + 3);
    *((_QWORD *)v236 + 1) = v238;
    *((_QWORD *)v236 + 2) = v240;
    *((_QWORD *)v236 + 3) = v241;
    swift_retain();
    swift_bridgeObjectRetain();
  }
  v242 = a3[41];
  a1[a3[40]] = a2[a3[40]];
  a1[v242] = a2[v242];
  a1[a3[42]] = a2[a3[42]];
  return a1;
}

char *assignWithCopy for EventModelObject(char *a1, char *a2, int *a3)
{
  char *v4;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(char *, uint64_t, uint64_t);
  int v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  int v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t (*v31)(uint64_t, uint64_t, uint64_t);
  int v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  unsigned int (*v36)(char *, uint64_t, uint64_t);
  uint64_t v37;
  size_t v38;
  void *v39;
  char *v40;
  uint64_t v41;
  void *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t (*v46)(void *, uint64_t, uint64_t);
  int v47;
  int v48;
  uint64_t v49;
  void *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  void *v80;
  uint64_t *v81;
  unint64_t v82;
  id v83;
  void *v84;
  void *v85;
  id v86;
  uint64_t *v87;
  unint64_t v88;
  uint64_t v89;
  uint64_t v90;
  __int128 v91;
  __int128 v92;
  __int128 v93;
  __int128 v94;
  uint64_t v95;
  uint64_t v96;
  unint64_t v97;
  _OWORD *v98;
  _OWORD *v99;
  uint64_t v100;
  __int128 v101;
  __int128 v102;
  __int128 v103;
  __int128 v104;
  __int128 v105;
  __int128 v106;
  __int128 v107;
  __int128 v108;
  uint64_t v109;
  uint64_t v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  __int128 v114;
  __int128 v115;
  __int128 v116;
  __int128 v117;
  __int128 v118;
  __int128 v119;
  __int128 v120;
  __int128 v121;
  __int128 v122;
  __int128 v123;
  __int128 v124;
  __int128 v125;
  __int128 v126;
  __int128 v127;
  __int128 v128;
  __int128 v129;
  void *v130;
  uint64_t *v131;
  unint64_t v132;
  id v133;
  void *v134;
  void *v135;
  id v136;
  uint64_t *v137;
  unint64_t v138;
  uint64_t v139;
  uint64_t v140;
  __int128 v141;
  __int128 v142;
  __int128 v143;
  __int128 v144;
  uint64_t v145;
  uint64_t v146;
  unint64_t v147;
  _OWORD *v148;
  _OWORD *v149;
  uint64_t v150;
  __int128 v151;
  __int128 v152;
  __int128 v153;
  __int128 v154;
  __int128 v155;
  __int128 v156;
  __int128 v157;
  __int128 v158;
  uint64_t v159;
  uint64_t v160;
  char *v161;
  uint64_t v162;
  uint64_t v163;
  __int128 v164;
  __int128 v165;
  __int128 v166;
  __int128 v167;
  __int128 v168;
  __int128 v169;
  __int128 v170;
  __int128 v171;
  __int128 v172;
  __int128 v173;
  __int128 v174;
  __int128 v175;
  __int128 v176;
  __int128 v177;
  __int128 v178;
  __int128 v179;
  void *v180;
  uint64_t *v181;
  unint64_t v182;
  id v183;
  void *v184;
  void *v185;
  id v186;
  uint64_t *v187;
  unint64_t v188;
  uint64_t v189;
  uint64_t v190;
  __int128 v191;
  __int128 v192;
  __int128 v193;
  __int128 v194;
  uint64_t v195;
  uint64_t v196;
  unint64_t v197;
  _OWORD *v198;
  _OWORD *v199;
  uint64_t v200;
  __int128 v201;
  __int128 v202;
  __int128 v203;
  __int128 v204;
  __int128 v205;
  __int128 v206;
  __int128 v207;
  __int128 v208;
  uint64_t v209;
  char *v210;
  char *v211;
  int *v212;
  uint64_t v213;
  uint64_t (*v214)(char *, uint64_t, int *);
  int v215;
  int v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  __int128 v223;
  _OWORD *v224;
  _OWORD *v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  __int128 v229;
  __int128 v230;
  __int128 v231;
  __int128 v232;
  __int128 v233;
  __int128 v234;
  __int128 v235;
  uint64_t v236;
  char *v237;
  uint64_t v238;
  uint64_t v239;
  unsigned int (*v240)(char *, uint64_t, uint64_t);
  uint64_t v241;
  uint64_t v242;
  char *v243;
  char *v244;
  uint64_t v245;
  char *v246;
  char *v247;
  void (*v248)(char *, _QWORD, uint64_t, int *);
  uint64_t v249;
  char *v250;
  char *v251;
  uint64_t v252;
  char *v253;
  char *v254;
  uint64_t (*v255)(char *, uint64_t, uint64_t);
  int v256;
  int v257;
  uint64_t v258;
  uint64_t v259;
  char *v260;
  char *v261;
  int *v262;
  uint64_t v263;
  uint64_t (*v264)(char *, uint64_t, int *);
  int v265;
  int v266;
  uint64_t v267;
  uint64_t v268;
  uint64_t v269;
  uint64_t v270;
  uint64_t v271;
  uint64_t v272;
  char *v273;
  char *v274;
  uint64_t v275;
  uint64_t v276;
  uint64_t (*v277)(char *, uint64_t, uint64_t);
  int v278;
  int v279;
  uint64_t v280;
  char *v281;
  char *v282;
  uint64_t v283;
  char *v284;
  char *v285;
  void (*v286)(char *, _QWORD, uint64_t, int *);
  uint64_t v287;
  uint64_t v288;
  void *v289;
  char *v290;
  int v291;
  int v292;
  uint64_t v293;
  uint64_t v294;
  __int128 v295;
  uint64_t v296;
  uint64_t v297;
  char *v298;
  char *v299;
  uint64_t v300;
  char *v301;
  char *v302;
  uint64_t v303;
  char *v304;
  char *v305;
  int *v306;
  uint64_t v307;
  uint64_t (*v308)(char *, uint64_t, int *);
  int v309;
  int v310;
  uint64_t v311;
  uint64_t v312;
  uint64_t v313;
  uint64_t v314;
  uint64_t v315;
  uint64_t v316;
  char *v317;
  char *v318;
  uint64_t v319;
  uint64_t v320;
  uint64_t (*v321)(char *, uint64_t, uint64_t);
  int v322;
  int v323;
  uint64_t v324;
  char *v325;
  char *v326;
  uint64_t v327;
  char *v328;
  char *v329;
  uint64_t v330;
  char *v331;
  char *v332;
  void (*v333)(char *, _QWORD, uint64_t, int *);
  uint64_t v334;
  uint64_t v335;
  char *v336;
  char *v337;
  uint64_t v338;
  char *v339;
  char *v340;
  uint64_t v341;
  char *v342;
  char *v343;
  uint64_t v344;
  char *v345;
  char *v346;
  uint64_t v347;
  char *v348;
  char *v349;
  uint64_t v350;
  uint64_t v351;
  char *v352;
  uint64_t v353;
  uint64_t v354;
  __int128 v355;
  __int128 v356;
  __int128 v358;
  __int128 v359;
  __int128 v360;
  __int128 v361;
  __int128 v362;
  __int128 v363;
  __int128 v364;
  __int128 v365;
  __int128 v366;
  __int128 v367;
  __int128 v368;
  __int128 v369;
  uint64_t v370;
  char *v371;
  char *v372;
  uint64_t v373;
  uint64_t v374;
  uint64_t (*v375)(char *, uint64_t, uint64_t);
  int v376;
  int v377;
  uint64_t v378;
  uint64_t v379;
  char *v380;
  char *v381;
  uint64_t v382;
  char *v383;
  char *v384;
  char *v385;
  _QWORD *v386;
  char *v387;
  void *__dst;
  int *__dsta;
  void (*v390)(char *, char *, uint64_t);
  unsigned int (*v391)(char *, uint64_t, uint64_t);
  unsigned int (*v392)(char *, uint64_t, uint64_t);
  uint64_t v393;
  char *v394;
  char *v395;
  _QWORD *v396;
  char *v397;
  char *v398;
  int *v399;
  char *v400;

  v4 = a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *((_QWORD *)a1 + 1) = *((_QWORD *)a2 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((_QWORD *)a1 + 2) = *((_QWORD *)v4 + 2);
  *((_QWORD *)a1 + 3) = *((_QWORD *)v4 + 3);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((_QWORD *)a1 + 4) = *((_QWORD *)v4 + 4);
  *((_QWORD *)a1 + 5) = *((_QWORD *)v4 + 5);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = a3[7];
  v7 = &a1[v6];
  v8 = &v4[v6];
  v9 = sub_1B8B9B0F0();
  v396 = *(_QWORD **)(v9 - 8);
  v10 = (void (*)(char *, char *, uint64_t))v396[3];
  v10(v7, v8, v9);
  v390 = v10;
  v393 = v9;
  v10(&a1[a3[8]], &v4[a3[8]], v9);
  a1[a3[9]] = v4[a3[9]];
  a1[a3[10]] = v4[a3[10]];
  v11 = a3[11];
  v12 = &a1[v11];
  v13 = &v4[v11];
  v14 = sub_1B8B9B2B8();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v15 + 48);
  v17 = v16(v12, 1, v14);
  v18 = v16(v13, 1, v14);
  if (v17)
  {
    if (!v18)
    {
      (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v12, v13, v14);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v18)
  {
    (*(void (**)(char *, uint64_t))(v15 + 8))(v12, v14);
LABEL_6:
    v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1B8F70);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v15 + 24))(v12, v13, v14);
LABEL_7:
  v20 = a3[12];
  v21 = &a1[v20];
  v22 = &v4[v20];
  v23 = v16(&a1[v20], 1, v14);
  v24 = v16(v22, 1, v14);
  if (v23)
  {
    if (!v24)
    {
      (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v21, v22, v14);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v21, 0, 1, v14);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v24)
  {
    (*(void (**)(char *, uint64_t))(v15 + 8))(v21, v14);
LABEL_12:
    v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1B8F70);
    memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v15 + 24))(v21, v22, v14);
LABEL_13:
  a1[a3[13]] = v4[a3[13]];
  v26 = a3[14];
  v27 = (uint64_t)&a1[v26];
  v28 = &v4[v26];
  v29 = type metadata accessor for EventVirtualConferenceModelObject(0);
  v30 = *(_QWORD *)(v29 - 8);
  v31 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v30 + 48);
  v32 = v31(v27, 1, v29);
  v33 = v31((uint64_t)v28, 1, v29);
  v399 = a3;
  v400 = v4;
  if (!v32)
  {
    if (v33)
    {
      sub_1B8AE7BD4(v27, type metadata accessor for EventVirtualConferenceModelObject);
      goto LABEL_19;
    }
    *(_QWORD *)v27 = *(_QWORD *)v28;
    *(_QWORD *)(v27 + 8) = *((_QWORD *)v28 + 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v27 + 16) = *((_QWORD *)v28 + 2);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v27 + 24) = *((_QWORD *)v28 + 3);
    *(_QWORD *)(v27 + 32) = *((_QWORD *)v28 + 4);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v27 + 40) = *((_QWORD *)v28 + 5);
    *(_QWORD *)(v27 + 48) = *((_QWORD *)v28 + 6);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_BYTE *)(v27 + 56) = v28[56];
    *(_QWORD *)(v27 + 64) = *((_QWORD *)v28 + 8);
    v41 = *(int *)(v29 + 40);
    v42 = (void *)(v27 + v41);
    v43 = &v28[v41];
    v44 = sub_1B8B9B054();
    v45 = *(_QWORD *)(v44 - 8);
    v46 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v45 + 48);
    v47 = v46(v42, 1, v44);
    v48 = v46(v43, 1, v44);
    if (v47)
    {
      if (!v48)
      {
        (*(void (**)(void *, char *, uint64_t))(v45 + 16))(v42, v43, v44);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v45 + 56))(v42, 0, 1, v44);
LABEL_141:
        v288 = *(int *)(v29 + 44);
        v289 = (void *)(v27 + v288);
        v290 = &v28[v288];
        v291 = v46(v289, 1, v44);
        v292 = v46(v290, 1, v44);
        a3 = v399;
        v4 = v400;
        if (v291)
        {
          if (!v292)
          {
            (*(void (**)(void *, char *, uint64_t))(v45 + 16))(v289, v290, v44);
            (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v45 + 56))(v289, 0, 1, v44);
            goto LABEL_31;
          }
        }
        else
        {
          if (!v292)
          {
            (*(void (**)(void *, char *, uint64_t))(v45 + 24))(v289, v290, v44);
            goto LABEL_31;
          }
          (*(void (**)(void *, uint64_t))(v45 + 8))(v289, v44);
        }
        v38 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED1B3020) - 8) + 64);
        v39 = v289;
        v40 = v290;
LABEL_20:
        memcpy(v39, v40, v38);
        goto LABEL_31;
      }
    }
    else
    {
      if (!v48)
      {
        (*(void (**)(void *, char *, uint64_t))(v45 + 24))(v42, v43, v44);
        goto LABEL_141;
      }
      (*(void (**)(void *, uint64_t))(v45 + 8))(v42, v44);
    }
    v287 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1B3020);
    memcpy(v42, v43, *(_QWORD *)(*(_QWORD *)(v287 - 8) + 64));
    goto LABEL_141;
  }
  if (v33)
  {
LABEL_19:
    v38 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EF1BD370) - 8) + 64);
    v39 = (void *)v27;
    v40 = v28;
    goto LABEL_20;
  }
  *(_QWORD *)v27 = *(_QWORD *)v28;
  *(_QWORD *)(v27 + 8) = *((_QWORD *)v28 + 1);
  *(_QWORD *)(v27 + 16) = *((_QWORD *)v28 + 2);
  *(_QWORD *)(v27 + 24) = *((_QWORD *)v28 + 3);
  *(_QWORD *)(v27 + 32) = *((_QWORD *)v28 + 4);
  *(_QWORD *)(v27 + 40) = *((_QWORD *)v28 + 5);
  *(_QWORD *)(v27 + 48) = *((_QWORD *)v28 + 6);
  *(_BYTE *)(v27 + 56) = v28[56];
  *(_QWORD *)(v27 + 64) = *((_QWORD *)v28 + 8);
  v34 = *(int *)(v29 + 40);
  __dst = (void *)(v27 + v34);
  v385 = &v28[v34];
  v35 = sub_1B8B9B054();
  v386 = *(_QWORD **)(v35 - 8);
  v36 = (unsigned int (*)(char *, uint64_t, uint64_t))v386[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v36(v385, 1, v35))
  {
    v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1B3020);
    memcpy(__dst, v385, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
  }
  else
  {
    ((void (*)(void *, char *, uint64_t))v386[2])(__dst, v385, v35);
    ((void (*)(void *, _QWORD, uint64_t, uint64_t))v386[7])(__dst, 0, 1, v35);
  }
  v49 = *(int *)(v29 + 44);
  v50 = (void *)(v27 + v49);
  v51 = &v28[v49];
  if (v36(v51, 1, v35))
  {
    v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1B3020);
    memcpy(v50, v51, *(_QWORD *)(*(_QWORD *)(v52 - 8) + 64));
  }
  else
  {
    ((void (*)(void *, char *, uint64_t))v386[2])(v50, v51, v35);
    ((void (*)(void *, _QWORD, uint64_t, uint64_t))v386[7])(v50, 0, 1, v35);
  }
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v30 + 56))(v27, 0, 1, v29);
  v4 = v400;
LABEL_31:
  v53 = a3[15];
  v54 = &a1[v53];
  v55 = &v4[v53];
  *(_QWORD *)v54 = *(_QWORD *)v55;
  *((_QWORD *)v54 + 1) = *((_QWORD *)v55 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v56 = a3[16];
  v57 = &a1[v56];
  v58 = &v4[v56];
  *(_QWORD *)v57 = *(_QWORD *)v58;
  *((_QWORD *)v57 + 1) = *((_QWORD *)v58 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)&a1[a3[17]] = *(_QWORD *)&v4[a3[17]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v59 = a3[18];
  v60 = (uint64_t)&a1[v59];
  v61 = &v4[v59];
  v62 = *(_QWORD *)&a1[v59 + 8];
  v63 = *(_QWORD *)&v4[v59 + 8];
  if (v62 == 1)
  {
    if (v63 == 1)
    {
      v64 = *(_OWORD *)v61;
      v65 = *((_OWORD *)v61 + 2);
      *(_OWORD *)(v60 + 16) = *((_OWORD *)v61 + 1);
      *(_OWORD *)(v60 + 32) = v65;
      *(_OWORD *)v60 = v64;
      v66 = *((_OWORD *)v61 + 3);
      v67 = *((_OWORD *)v61 + 4);
      v68 = *((_OWORD *)v61 + 6);
      *(_OWORD *)(v60 + 80) = *((_OWORD *)v61 + 5);
      *(_OWORD *)(v60 + 96) = v68;
      *(_OWORD *)(v60 + 48) = v66;
      *(_OWORD *)(v60 + 64) = v67;
      v69 = *((_OWORD *)v61 + 7);
      v70 = *((_OWORD *)v61 + 8);
      v71 = *((_OWORD *)v61 + 10);
      *(_OWORD *)(v60 + 144) = *((_OWORD *)v61 + 9);
      *(_OWORD *)(v60 + 160) = v71;
      *(_OWORD *)(v60 + 112) = v69;
      *(_OWORD *)(v60 + 128) = v70;
      goto LABEL_55;
    }
    *(_QWORD *)v60 = *(_QWORD *)v61;
    *(_QWORD *)(v60 + 8) = *((_QWORD *)v61 + 1);
    v80 = (void *)*((_QWORD *)v61 + 2);
    *(_QWORD *)(v60 + 16) = v80;
    *(_QWORD *)(v60 + 24) = *((_QWORD *)v61 + 3);
    *(_QWORD *)(v60 + 32) = *((_QWORD *)v61 + 4);
    *(_QWORD *)(v60 + 40) = *((_QWORD *)v61 + 5);
    *(_QWORD *)(v60 + 48) = *((_QWORD *)v61 + 6);
    *(_QWORD *)(v60 + 56) = *((_QWORD *)v61 + 7);
    v81 = (uint64_t *)(v61 + 64);
    v82 = *((_QWORD *)v61 + 9);
    swift_bridgeObjectRetain();
    v83 = v80;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v82 >> 60 == 15)
    {
      *(_OWORD *)(v60 + 64) = *(_OWORD *)v81;
    }
    else
    {
      v90 = *v81;
      sub_1B8ADC5E4(*v81, v82);
      *(_QWORD *)(v60 + 64) = v90;
      *(_QWORD *)(v60 + 72) = v82;
    }
    *(_BYTE *)(v60 + 80) = v61[80];
    if (*((_QWORD *)v61 + 13) == 1)
    {
      v91 = *(_OWORD *)(v61 + 104);
      *(_OWORD *)(v60 + 88) = *(_OWORD *)(v61 + 88);
      *(_OWORD *)(v60 + 104) = v91;
      v92 = *(_OWORD *)(v61 + 120);
      v93 = *(_OWORD *)(v61 + 136);
      v94 = *(_OWORD *)(v61 + 152);
      *(_QWORD *)(v60 + 168) = *((_QWORD *)v61 + 21);
      *(_OWORD *)(v60 + 136) = v93;
      *(_OWORD *)(v60 + 152) = v94;
      *(_OWORD *)(v60 + 120) = v92;
      goto LABEL_55;
    }
LABEL_51:
    *(_QWORD *)(v60 + 88) = *((_QWORD *)v61 + 11);
    *(_QWORD *)(v60 + 96) = *((_QWORD *)v61 + 12);
    *(_QWORD *)(v60 + 104) = *((_QWORD *)v61 + 13);
    *(_QWORD *)(v60 + 112) = *((_QWORD *)v61 + 14);
    *(_QWORD *)(v60 + 120) = *((_QWORD *)v61 + 15);
    *(_QWORD *)(v60 + 128) = *((_QWORD *)v61 + 16);
    *(_QWORD *)(v60 + 136) = *((_QWORD *)v61 + 17);
    *(_QWORD *)(v60 + 144) = *((_QWORD *)v61 + 18);
    *(_QWORD *)(v60 + 152) = *((_QWORD *)v61 + 19);
    *(_QWORD *)(v60 + 160) = *((_QWORD *)v61 + 20);
    *(_QWORD *)(v60 + 168) = *((_QWORD *)v61 + 21);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    goto LABEL_55;
  }
  if (v63 == 1)
  {
    sub_1B8B80EB0(v60);
    v73 = *((_OWORD *)v61 + 1);
    v72 = *((_OWORD *)v61 + 2);
    *(_OWORD *)v60 = *(_OWORD *)v61;
    *(_OWORD *)(v60 + 16) = v73;
    *(_OWORD *)(v60 + 32) = v72;
    v74 = *((_OWORD *)v61 + 6);
    v76 = *((_OWORD *)v61 + 3);
    v75 = *((_OWORD *)v61 + 4);
    *(_OWORD *)(v60 + 80) = *((_OWORD *)v61 + 5);
    *(_OWORD *)(v60 + 96) = v74;
    *(_OWORD *)(v60 + 48) = v76;
    *(_OWORD *)(v60 + 64) = v75;
    v77 = *((_OWORD *)v61 + 10);
    v79 = *((_OWORD *)v61 + 7);
    v78 = *((_OWORD *)v61 + 8);
    *(_OWORD *)(v60 + 144) = *((_OWORD *)v61 + 9);
    *(_OWORD *)(v60 + 160) = v77;
    *(_OWORD *)(v60 + 112) = v79;
    *(_OWORD *)(v60 + 128) = v78;
    goto LABEL_55;
  }
  *(_QWORD *)v60 = *(_QWORD *)v61;
  *(_QWORD *)(v60 + 8) = *((_QWORD *)v61 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v84 = *(void **)(v60 + 16);
  v85 = (void *)*((_QWORD *)v61 + 2);
  *(_QWORD *)(v60 + 16) = v85;
  v86 = v85;

  *(_QWORD *)(v60 + 24) = *((_QWORD *)v61 + 3);
  *(_QWORD *)(v60 + 32) = *((_QWORD *)v61 + 4);
  *(_QWORD *)(v60 + 40) = *((_QWORD *)v61 + 5);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v60 + 48) = *((_QWORD *)v61 + 6);
  *(_QWORD *)(v60 + 56) = *((_QWORD *)v61 + 7);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v87 = (uint64_t *)(v61 + 64);
  v88 = *((_QWORD *)v61 + 9);
  if (*(_QWORD *)(v60 + 72) >> 60 == 15)
  {
    if (v88 >> 60 != 15)
    {
      v89 = *v87;
      sub_1B8ADC5E4(*v87, *((_QWORD *)v61 + 9));
      *(_QWORD *)(v60 + 64) = v89;
      *(_QWORD *)(v60 + 72) = v88;
      goto LABEL_48;
    }
    goto LABEL_46;
  }
  if (v88 >> 60 == 15)
  {
    sub_1B8B18778(v60 + 64);
LABEL_46:
    *(_OWORD *)(v60 + 64) = *(_OWORD *)v87;
    goto LABEL_48;
  }
  v95 = *v87;
  sub_1B8ADC5E4(*v87, *((_QWORD *)v61 + 9));
  v96 = *(_QWORD *)(v60 + 64);
  v97 = *(_QWORD *)(v60 + 72);
  *(_QWORD *)(v60 + 64) = v95;
  *(_QWORD *)(v60 + 72) = v88;
  sub_1B8ADC698(v96, v97);
LABEL_48:
  *(_BYTE *)(v60 + 80) = v61[80];
  v98 = (_OWORD *)(v60 + 88);
  v99 = v61 + 88;
  v100 = *((_QWORD *)v61 + 13);
  if (*(_QWORD *)(v60 + 104) == 1)
  {
    if (v100 == 1)
    {
      v101 = *(_OWORD *)(v61 + 104);
      *v98 = *v99;
      *(_OWORD *)(v60 + 104) = v101;
      v102 = *(_OWORD *)(v61 + 120);
      v103 = *(_OWORD *)(v61 + 136);
      v104 = *(_OWORD *)(v61 + 152);
      *(_QWORD *)(v60 + 168) = *((_QWORD *)v61 + 21);
      *(_OWORD *)(v60 + 136) = v103;
      *(_OWORD *)(v60 + 152) = v104;
      *(_OWORD *)(v60 + 120) = v102;
      goto LABEL_55;
    }
    goto LABEL_51;
  }
  if (v100 == 1)
  {
    sub_1B8B2EDB4(v60 + 88);
    v105 = *(_OWORD *)(v61 + 104);
    *v98 = *v99;
    *(_OWORD *)(v60 + 104) = v105;
    v107 = *(_OWORD *)(v61 + 136);
    v106 = *(_OWORD *)(v61 + 152);
    v108 = *(_OWORD *)(v61 + 120);
    *(_QWORD *)(v60 + 168) = *((_QWORD *)v61 + 21);
    *(_OWORD *)(v60 + 136) = v107;
    *(_OWORD *)(v60 + 152) = v106;
    *(_OWORD *)(v60 + 120) = v108;
  }
  else
  {
    *(_QWORD *)(v60 + 88) = *((_QWORD *)v61 + 11);
    *(_QWORD *)(v60 + 96) = *((_QWORD *)v61 + 12);
    *(_QWORD *)(v60 + 104) = *((_QWORD *)v61 + 13);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v60 + 112) = *((_QWORD *)v61 + 14);
    *(_QWORD *)(v60 + 120) = *((_QWORD *)v61 + 15);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v60 + 128) = *((_QWORD *)v61 + 16);
    *(_QWORD *)(v60 + 136) = *((_QWORD *)v61 + 17);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v60 + 144) = *((_QWORD *)v61 + 18);
    *(_QWORD *)(v60 + 152) = *((_QWORD *)v61 + 19);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v60 + 160) = *((_QWORD *)v61 + 20);
    *(_QWORD *)(v60 + 168) = *((_QWORD *)v61 + 21);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
LABEL_55:
  v109 = a3[19];
  v110 = (uint64_t)&a1[v109];
  v111 = &v4[v109];
  v112 = *(_QWORD *)&a1[v109 + 8];
  v113 = *(_QWORD *)&v4[v109 + 8];
  if (v112 == 1)
  {
    if (v113 == 1)
    {
      v114 = *(_OWORD *)v111;
      v115 = *((_OWORD *)v111 + 2);
      *(_OWORD *)(v110 + 16) = *((_OWORD *)v111 + 1);
      *(_OWORD *)(v110 + 32) = v115;
      *(_OWORD *)v110 = v114;
      v116 = *((_OWORD *)v111 + 3);
      v117 = *((_OWORD *)v111 + 4);
      v118 = *((_OWORD *)v111 + 6);
      *(_OWORD *)(v110 + 80) = *((_OWORD *)v111 + 5);
      *(_OWORD *)(v110 + 96) = v118;
      *(_OWORD *)(v110 + 48) = v116;
      *(_OWORD *)(v110 + 64) = v117;
      v119 = *((_OWORD *)v111 + 7);
      v120 = *((_OWORD *)v111 + 8);
      v121 = *((_OWORD *)v111 + 10);
      *(_OWORD *)(v110 + 144) = *((_OWORD *)v111 + 9);
      *(_OWORD *)(v110 + 160) = v121;
      *(_OWORD *)(v110 + 112) = v119;
      *(_OWORD *)(v110 + 128) = v120;
      goto LABEL_79;
    }
    *(_QWORD *)v110 = *(_QWORD *)v111;
    *(_QWORD *)(v110 + 8) = *((_QWORD *)v111 + 1);
    v130 = (void *)*((_QWORD *)v111 + 2);
    *(_QWORD *)(v110 + 16) = v130;
    *(_QWORD *)(v110 + 24) = *((_QWORD *)v111 + 3);
    *(_QWORD *)(v110 + 32) = *((_QWORD *)v111 + 4);
    *(_QWORD *)(v110 + 40) = *((_QWORD *)v111 + 5);
    *(_QWORD *)(v110 + 48) = *((_QWORD *)v111 + 6);
    *(_QWORD *)(v110 + 56) = *((_QWORD *)v111 + 7);
    v131 = (uint64_t *)(v111 + 64);
    v132 = *((_QWORD *)v111 + 9);
    swift_bridgeObjectRetain();
    v133 = v130;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v132 >> 60 == 15)
    {
      *(_OWORD *)(v110 + 64) = *(_OWORD *)v131;
    }
    else
    {
      v140 = *v131;
      sub_1B8ADC5E4(*v131, v132);
      *(_QWORD *)(v110 + 64) = v140;
      *(_QWORD *)(v110 + 72) = v132;
    }
    *(_BYTE *)(v110 + 80) = v111[80];
    if (*((_QWORD *)v111 + 13) == 1)
    {
      v141 = *(_OWORD *)(v111 + 104);
      *(_OWORD *)(v110 + 88) = *(_OWORD *)(v111 + 88);
      *(_OWORD *)(v110 + 104) = v141;
      v142 = *(_OWORD *)(v111 + 120);
      v143 = *(_OWORD *)(v111 + 136);
      v144 = *(_OWORD *)(v111 + 152);
      *(_QWORD *)(v110 + 168) = *((_QWORD *)v111 + 21);
      *(_OWORD *)(v110 + 136) = v143;
      *(_OWORD *)(v110 + 152) = v144;
      *(_OWORD *)(v110 + 120) = v142;
      goto LABEL_79;
    }
LABEL_75:
    *(_QWORD *)(v110 + 88) = *((_QWORD *)v111 + 11);
    *(_QWORD *)(v110 + 96) = *((_QWORD *)v111 + 12);
    *(_QWORD *)(v110 + 104) = *((_QWORD *)v111 + 13);
    *(_QWORD *)(v110 + 112) = *((_QWORD *)v111 + 14);
    *(_QWORD *)(v110 + 120) = *((_QWORD *)v111 + 15);
    *(_QWORD *)(v110 + 128) = *((_QWORD *)v111 + 16);
    *(_QWORD *)(v110 + 136) = *((_QWORD *)v111 + 17);
    *(_QWORD *)(v110 + 144) = *((_QWORD *)v111 + 18);
    *(_QWORD *)(v110 + 152) = *((_QWORD *)v111 + 19);
    *(_QWORD *)(v110 + 160) = *((_QWORD *)v111 + 20);
    *(_QWORD *)(v110 + 168) = *((_QWORD *)v111 + 21);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    goto LABEL_79;
  }
  if (v113 == 1)
  {
    sub_1B8B80EB0(v110);
    v123 = *((_OWORD *)v111 + 1);
    v122 = *((_OWORD *)v111 + 2);
    *(_OWORD *)v110 = *(_OWORD *)v111;
    *(_OWORD *)(v110 + 16) = v123;
    *(_OWORD *)(v110 + 32) = v122;
    v124 = *((_OWORD *)v111 + 6);
    v126 = *((_OWORD *)v111 + 3);
    v125 = *((_OWORD *)v111 + 4);
    *(_OWORD *)(v110 + 80) = *((_OWORD *)v111 + 5);
    *(_OWORD *)(v110 + 96) = v124;
    *(_OWORD *)(v110 + 48) = v126;
    *(_OWORD *)(v110 + 64) = v125;
    v127 = *((_OWORD *)v111 + 10);
    v129 = *((_OWORD *)v111 + 7);
    v128 = *((_OWORD *)v111 + 8);
    *(_OWORD *)(v110 + 144) = *((_OWORD *)v111 + 9);
    *(_OWORD *)(v110 + 160) = v127;
    *(_OWORD *)(v110 + 112) = v129;
    *(_OWORD *)(v110 + 128) = v128;
    goto LABEL_79;
  }
  *(_QWORD *)v110 = *(_QWORD *)v111;
  *(_QWORD *)(v110 + 8) = *((_QWORD *)v111 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v134 = *(void **)(v110 + 16);
  v135 = (void *)*((_QWORD *)v111 + 2);
  *(_QWORD *)(v110 + 16) = v135;
  v136 = v135;

  *(_QWORD *)(v110 + 24) = *((_QWORD *)v111 + 3);
  *(_QWORD *)(v110 + 32) = *((_QWORD *)v111 + 4);
  *(_QWORD *)(v110 + 40) = *((_QWORD *)v111 + 5);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v110 + 48) = *((_QWORD *)v111 + 6);
  *(_QWORD *)(v110 + 56) = *((_QWORD *)v111 + 7);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v137 = (uint64_t *)(v111 + 64);
  v138 = *((_QWORD *)v111 + 9);
  if (*(_QWORD *)(v110 + 72) >> 60 == 15)
  {
    if (v138 >> 60 != 15)
    {
      v139 = *v137;
      sub_1B8ADC5E4(*v137, *((_QWORD *)v111 + 9));
      *(_QWORD *)(v110 + 64) = v139;
      *(_QWORD *)(v110 + 72) = v138;
      goto LABEL_72;
    }
    goto LABEL_70;
  }
  if (v138 >> 60 == 15)
  {
    sub_1B8B18778(v110 + 64);
LABEL_70:
    *(_OWORD *)(v110 + 64) = *(_OWORD *)v137;
    goto LABEL_72;
  }
  v145 = *v137;
  sub_1B8ADC5E4(*v137, *((_QWORD *)v111 + 9));
  v146 = *(_QWORD *)(v110 + 64);
  v147 = *(_QWORD *)(v110 + 72);
  *(_QWORD *)(v110 + 64) = v145;
  *(_QWORD *)(v110 + 72) = v138;
  sub_1B8ADC698(v146, v147);
LABEL_72:
  *(_BYTE *)(v110 + 80) = v111[80];
  v148 = (_OWORD *)(v110 + 88);
  v149 = v111 + 88;
  v150 = *((_QWORD *)v111 + 13);
  if (*(_QWORD *)(v110 + 104) == 1)
  {
    if (v150 == 1)
    {
      v151 = *(_OWORD *)(v111 + 104);
      *v148 = *v149;
      *(_OWORD *)(v110 + 104) = v151;
      v152 = *(_OWORD *)(v111 + 120);
      v153 = *(_OWORD *)(v111 + 136);
      v154 = *(_OWORD *)(v111 + 152);
      *(_QWORD *)(v110 + 168) = *((_QWORD *)v111 + 21);
      *(_OWORD *)(v110 + 136) = v153;
      *(_OWORD *)(v110 + 152) = v154;
      *(_OWORD *)(v110 + 120) = v152;
      goto LABEL_79;
    }
    goto LABEL_75;
  }
  if (v150 == 1)
  {
    sub_1B8B2EDB4(v110 + 88);
    v155 = *(_OWORD *)(v111 + 104);
    *v148 = *v149;
    *(_OWORD *)(v110 + 104) = v155;
    v157 = *(_OWORD *)(v111 + 136);
    v156 = *(_OWORD *)(v111 + 152);
    v158 = *(_OWORD *)(v111 + 120);
    *(_QWORD *)(v110 + 168) = *((_QWORD *)v111 + 21);
    *(_OWORD *)(v110 + 136) = v157;
    *(_OWORD *)(v110 + 152) = v156;
    *(_OWORD *)(v110 + 120) = v158;
  }
  else
  {
    *(_QWORD *)(v110 + 88) = *((_QWORD *)v111 + 11);
    *(_QWORD *)(v110 + 96) = *((_QWORD *)v111 + 12);
    *(_QWORD *)(v110 + 104) = *((_QWORD *)v111 + 13);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v110 + 112) = *((_QWORD *)v111 + 14);
    *(_QWORD *)(v110 + 120) = *((_QWORD *)v111 + 15);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v110 + 128) = *((_QWORD *)v111 + 16);
    *(_QWORD *)(v110 + 136) = *((_QWORD *)v111 + 17);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v110 + 144) = *((_QWORD *)v111 + 18);
    *(_QWORD *)(v110 + 152) = *((_QWORD *)v111 + 19);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v110 + 160) = *((_QWORD *)v111 + 20);
    *(_QWORD *)(v110 + 168) = *((_QWORD *)v111 + 21);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
LABEL_79:
  v159 = a3[20];
  v160 = (uint64_t)&a1[v159];
  v161 = &v4[v159];
  v162 = *(_QWORD *)&a1[v159 + 8];
  v163 = *(_QWORD *)&v4[v159 + 8];
  if (v162 == 1)
  {
    if (v163 == 1)
    {
      v164 = *(_OWORD *)v161;
      v165 = *((_OWORD *)v161 + 2);
      *(_OWORD *)(v160 + 16) = *((_OWORD *)v161 + 1);
      *(_OWORD *)(v160 + 32) = v165;
      *(_OWORD *)v160 = v164;
      v166 = *((_OWORD *)v161 + 3);
      v167 = *((_OWORD *)v161 + 4);
      v168 = *((_OWORD *)v161 + 6);
      *(_OWORD *)(v160 + 80) = *((_OWORD *)v161 + 5);
      *(_OWORD *)(v160 + 96) = v168;
      *(_OWORD *)(v160 + 48) = v166;
      *(_OWORD *)(v160 + 64) = v167;
      v169 = *((_OWORD *)v161 + 7);
      v170 = *((_OWORD *)v161 + 8);
      v171 = *((_OWORD *)v161 + 10);
      *(_OWORD *)(v160 + 144) = *((_OWORD *)v161 + 9);
      *(_OWORD *)(v160 + 160) = v171;
      *(_OWORD *)(v160 + 112) = v169;
      *(_OWORD *)(v160 + 128) = v170;
      goto LABEL_103;
    }
    *(_QWORD *)v160 = *(_QWORD *)v161;
    *(_QWORD *)(v160 + 8) = *((_QWORD *)v161 + 1);
    v180 = (void *)*((_QWORD *)v161 + 2);
    *(_QWORD *)(v160 + 16) = v180;
    *(_QWORD *)(v160 + 24) = *((_QWORD *)v161 + 3);
    *(_QWORD *)(v160 + 32) = *((_QWORD *)v161 + 4);
    *(_QWORD *)(v160 + 40) = *((_QWORD *)v161 + 5);
    *(_QWORD *)(v160 + 48) = *((_QWORD *)v161 + 6);
    *(_QWORD *)(v160 + 56) = *((_QWORD *)v161 + 7);
    v181 = (uint64_t *)(v161 + 64);
    v182 = *((_QWORD *)v161 + 9);
    swift_bridgeObjectRetain();
    v183 = v180;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v182 >> 60 == 15)
    {
      *(_OWORD *)(v160 + 64) = *(_OWORD *)v181;
    }
    else
    {
      v190 = *v181;
      sub_1B8ADC5E4(*v181, v182);
      *(_QWORD *)(v160 + 64) = v190;
      *(_QWORD *)(v160 + 72) = v182;
    }
    *(_BYTE *)(v160 + 80) = v161[80];
    if (*((_QWORD *)v161 + 13) == 1)
    {
      v191 = *(_OWORD *)(v161 + 104);
      *(_OWORD *)(v160 + 88) = *(_OWORD *)(v161 + 88);
      *(_OWORD *)(v160 + 104) = v191;
      v192 = *(_OWORD *)(v161 + 120);
      v193 = *(_OWORD *)(v161 + 136);
      v194 = *(_OWORD *)(v161 + 152);
      *(_QWORD *)(v160 + 168) = *((_QWORD *)v161 + 21);
      *(_OWORD *)(v160 + 136) = v193;
      *(_OWORD *)(v160 + 152) = v194;
      *(_OWORD *)(v160 + 120) = v192;
      goto LABEL_103;
    }
LABEL_99:
    *(_QWORD *)(v160 + 88) = *((_QWORD *)v161 + 11);
    *(_QWORD *)(v160 + 96) = *((_QWORD *)v161 + 12);
    *(_QWORD *)(v160 + 104) = *((_QWORD *)v161 + 13);
    *(_QWORD *)(v160 + 112) = *((_QWORD *)v161 + 14);
    *(_QWORD *)(v160 + 120) = *((_QWORD *)v161 + 15);
    *(_QWORD *)(v160 + 128) = *((_QWORD *)v161 + 16);
    *(_QWORD *)(v160 + 136) = *((_QWORD *)v161 + 17);
    *(_QWORD *)(v160 + 144) = *((_QWORD *)v161 + 18);
    *(_QWORD *)(v160 + 152) = *((_QWORD *)v161 + 19);
    *(_QWORD *)(v160 + 160) = *((_QWORD *)v161 + 20);
    *(_QWORD *)(v160 + 168) = *((_QWORD *)v161 + 21);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    goto LABEL_103;
  }
  if (v163 == 1)
  {
    sub_1B8B80EB0(v160);
    v173 = *((_OWORD *)v161 + 1);
    v172 = *((_OWORD *)v161 + 2);
    *(_OWORD *)v160 = *(_OWORD *)v161;
    *(_OWORD *)(v160 + 16) = v173;
    *(_OWORD *)(v160 + 32) = v172;
    v174 = *((_OWORD *)v161 + 6);
    v176 = *((_OWORD *)v161 + 3);
    v175 = *((_OWORD *)v161 + 4);
    *(_OWORD *)(v160 + 80) = *((_OWORD *)v161 + 5);
    *(_OWORD *)(v160 + 96) = v174;
    *(_OWORD *)(v160 + 48) = v176;
    *(_OWORD *)(v160 + 64) = v175;
    v177 = *((_OWORD *)v161 + 10);
    v179 = *((_OWORD *)v161 + 7);
    v178 = *((_OWORD *)v161 + 8);
    *(_OWORD *)(v160 + 144) = *((_OWORD *)v161 + 9);
    *(_OWORD *)(v160 + 160) = v177;
    *(_OWORD *)(v160 + 112) = v179;
    *(_OWORD *)(v160 + 128) = v178;
    goto LABEL_103;
  }
  *(_QWORD *)v160 = *(_QWORD *)v161;
  *(_QWORD *)(v160 + 8) = *((_QWORD *)v161 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v184 = *(void **)(v160 + 16);
  v185 = (void *)*((_QWORD *)v161 + 2);
  *(_QWORD *)(v160 + 16) = v185;
  v186 = v185;

  *(_QWORD *)(v160 + 24) = *((_QWORD *)v161 + 3);
  *(_QWORD *)(v160 + 32) = *((_QWORD *)v161 + 4);
  *(_QWORD *)(v160 + 40) = *((_QWORD *)v161 + 5);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v160 + 48) = *((_QWORD *)v161 + 6);
  *(_QWORD *)(v160 + 56) = *((_QWORD *)v161 + 7);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v187 = (uint64_t *)(v161 + 64);
  v188 = *((_QWORD *)v161 + 9);
  if (*(_QWORD *)(v160 + 72) >> 60 == 15)
  {
    if (v188 >> 60 != 15)
    {
      v189 = *v187;
      sub_1B8ADC5E4(*v187, *((_QWORD *)v161 + 9));
      *(_QWORD *)(v160 + 64) = v189;
      *(_QWORD *)(v160 + 72) = v188;
      goto LABEL_96;
    }
    goto LABEL_94;
  }
  if (v188 >> 60 == 15)
  {
    sub_1B8B18778(v160 + 64);
LABEL_94:
    *(_OWORD *)(v160 + 64) = *(_OWORD *)v187;
    goto LABEL_96;
  }
  v195 = *v187;
  sub_1B8ADC5E4(*v187, *((_QWORD *)v161 + 9));
  v196 = *(_QWORD *)(v160 + 64);
  v197 = *(_QWORD *)(v160 + 72);
  *(_QWORD *)(v160 + 64) = v195;
  *(_QWORD *)(v160 + 72) = v188;
  sub_1B8ADC698(v196, v197);
LABEL_96:
  *(_BYTE *)(v160 + 80) = v161[80];
  v198 = (_OWORD *)(v160 + 88);
  v199 = v161 + 88;
  v200 = *((_QWORD *)v161 + 13);
  if (*(_QWORD *)(v160 + 104) == 1)
  {
    if (v200 == 1)
    {
      v201 = *(_OWORD *)(v161 + 104);
      *v198 = *v199;
      *(_OWORD *)(v160 + 104) = v201;
      v202 = *(_OWORD *)(v161 + 120);
      v203 = *(_OWORD *)(v161 + 136);
      v204 = *(_OWORD *)(v161 + 152);
      *(_QWORD *)(v160 + 168) = *((_QWORD *)v161 + 21);
      *(_OWORD *)(v160 + 136) = v203;
      *(_OWORD *)(v160 + 152) = v204;
      *(_OWORD *)(v160 + 120) = v202;
      goto LABEL_103;
    }
    goto LABEL_99;
  }
  if (v200 == 1)
  {
    sub_1B8B2EDB4(v160 + 88);
    v205 = *(_OWORD *)(v161 + 104);
    *v198 = *v199;
    *(_OWORD *)(v160 + 104) = v205;
    v207 = *(_OWORD *)(v161 + 136);
    v206 = *(_OWORD *)(v161 + 152);
    v208 = *(_OWORD *)(v161 + 120);
    *(_QWORD *)(v160 + 168) = *((_QWORD *)v161 + 21);
    *(_OWORD *)(v160 + 136) = v207;
    *(_OWORD *)(v160 + 152) = v206;
    *(_OWORD *)(v160 + 120) = v208;
  }
  else
  {
    *(_QWORD *)(v160 + 88) = *((_QWORD *)v161 + 11);
    *(_QWORD *)(v160 + 96) = *((_QWORD *)v161 + 12);
    *(_QWORD *)(v160 + 104) = *((_QWORD *)v161 + 13);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v160 + 112) = *((_QWORD *)v161 + 14);
    *(_QWORD *)(v160 + 120) = *((_QWORD *)v161 + 15);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v160 + 128) = *((_QWORD *)v161 + 16);
    *(_QWORD *)(v160 + 136) = *((_QWORD *)v161 + 17);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v160 + 144) = *((_QWORD *)v161 + 18);
    *(_QWORD *)(v160 + 152) = *((_QWORD *)v161 + 19);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v160 + 160) = *((_QWORD *)v161 + 20);
    *(_QWORD *)(v160 + 168) = *((_QWORD *)v161 + 21);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
LABEL_103:
  *(_QWORD *)&a1[a3[21]] = *(_QWORD *)&v4[a3[21]];
  *(_QWORD *)&a1[a3[22]] = *(_QWORD *)&v4[a3[22]];
  v209 = a3[23];
  v210 = &a1[v209];
  v211 = &v4[v209];
  v212 = (int *)type metadata accessor for EventCalendarModelObject();
  v213 = *((_QWORD *)v212 - 1);
  v214 = *(uint64_t (**)(char *, uint64_t, int *))(v213 + 48);
  v215 = v214(v210, 1, v212);
  v216 = v214(v211, 1, v212);
  if (!v215)
  {
    v218 = v393;
    if (v216)
    {
      sub_1B8AE7BD4((uint64_t)v210, (uint64_t (*)(_QWORD))type metadata accessor for EventCalendarModelObject);
      v219 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1BD368);
      memcpy(v210, v211, *(_QWORD *)(*(_QWORD *)(v219 - 8) + 64));
      goto LABEL_119;
    }
    *(_QWORD *)v210 = *(_QWORD *)v211;
    *((_QWORD *)v210 + 1) = *((_QWORD *)v211 + 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *((_QWORD *)v210 + 2) = *((_QWORD *)v211 + 2);
    *((_QWORD *)v210 + 3) = *((_QWORD *)v211 + 3);
    *((_QWORD *)v210 + 4) = *((_QWORD *)v211 + 4);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *((_QWORD *)v210 + 5) = *((_QWORD *)v211 + 5);
    *((_QWORD *)v210 + 6) = *((_QWORD *)v211 + 6);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *((_QWORD *)v210 + 7) = *((_QWORD *)v211 + 7);
    *((_QWORD *)v210 + 8) = *((_QWORD *)v211 + 8);
    *((_QWORD *)v210 + 9) = *((_QWORD *)v211 + 9);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v210[80] = v211[80];
    *((_QWORD *)v210 + 11) = *((_QWORD *)v211 + 11);
    v224 = v210 + 96;
    v225 = v211 + 96;
    v226 = *((_QWORD *)v211 + 13);
    if (*((_QWORD *)v210 + 13))
    {
      if (v226)
      {
        *((_QWORD *)v210 + 12) = *((_QWORD *)v211 + 12);
        *((_QWORD *)v210 + 13) = *((_QWORD *)v211 + 13);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        *((_QWORD *)v210 + 14) = *((_QWORD *)v211 + 14);
        *((_QWORD *)v210 + 15) = *((_QWORD *)v211 + 15);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        *((_QWORD *)v210 + 16) = *((_QWORD *)v211 + 16);
        *((_QWORD *)v210 + 17) = *((_QWORD *)v211 + 17);
        *((_QWORD *)v210 + 18) = *((_QWORD *)v211 + 18);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        v210[152] = v211[152];
        v210[153] = v211[153];
        v210[154] = v211[154];
        v210[155] = v211[155];
        v210[156] = v211[156];
        *((_QWORD *)v210 + 20) = *((_QWORD *)v211 + 20);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        *((_QWORD *)v210 + 21) = *((_QWORD *)v211 + 21);
        v227 = *((_QWORD *)v211 + 22);
        v210[184] = v211[184];
        *((_QWORD *)v210 + 22) = v227;
        v228 = *((_QWORD *)v211 + 24);
        v210[200] = v211[200];
        *((_QWORD *)v210 + 24) = v228;
        v229 = *((_OWORD *)v211 + 13);
        *(_QWORD *)(v210 + 222) = *(_QWORD *)(v211 + 222);
        *((_OWORD *)v210 + 13) = v229;
      }
      else
      {
        sub_1B8B13E54((uint64_t)(v210 + 96));
        *v224 = *v225;
        v358 = *((_OWORD *)v211 + 10);
        v360 = *((_OWORD *)v211 + 7);
        v359 = *((_OWORD *)v211 + 8);
        *((_OWORD *)v210 + 9) = *((_OWORD *)v211 + 9);
        *((_OWORD *)v210 + 10) = v358;
        *((_OWORD *)v210 + 7) = v360;
        *((_OWORD *)v210 + 8) = v359;
        v362 = *((_OWORD *)v211 + 12);
        v361 = *((_OWORD *)v211 + 13);
        v363 = *((_OWORD *)v211 + 11);
        *(_QWORD *)(v210 + 222) = *(_QWORD *)(v211 + 222);
        *((_OWORD *)v210 + 12) = v362;
        *((_OWORD *)v210 + 13) = v361;
        *((_OWORD *)v210 + 11) = v363;
      }
    }
    else if (v226)
    {
      *((_QWORD *)v210 + 12) = *((_QWORD *)v211 + 12);
      *((_QWORD *)v210 + 13) = *((_QWORD *)v211 + 13);
      *((_QWORD *)v210 + 14) = *((_QWORD *)v211 + 14);
      *((_QWORD *)v210 + 15) = *((_QWORD *)v211 + 15);
      *((_QWORD *)v210 + 16) = *((_QWORD *)v211 + 16);
      *((_QWORD *)v210 + 17) = *((_QWORD *)v211 + 17);
      *((_QWORD *)v210 + 18) = *((_QWORD *)v211 + 18);
      v210[152] = v211[152];
      v210[153] = v211[153];
      v210[154] = v211[154];
      v210[155] = v211[155];
      v210[156] = v211[156];
      *((_QWORD *)v210 + 20) = *((_QWORD *)v211 + 20);
      *((_QWORD *)v210 + 21) = *((_QWORD *)v211 + 21);
      v293 = *((_QWORD *)v211 + 22);
      v210[184] = v211[184];
      *((_QWORD *)v210 + 22) = v293;
      v294 = *((_QWORD *)v211 + 24);
      v210[200] = v211[200];
      *((_QWORD *)v210 + 24) = v294;
      v295 = *((_OWORD *)v211 + 13);
      *(_QWORD *)(v210 + 222) = *(_QWORD *)(v211 + 222);
      *((_OWORD *)v210 + 13) = v295;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      *v224 = *v225;
      v364 = *((_OWORD *)v211 + 7);
      v365 = *((_OWORD *)v211 + 8);
      v366 = *((_OWORD *)v211 + 10);
      *((_OWORD *)v210 + 9) = *((_OWORD *)v211 + 9);
      *((_OWORD *)v210 + 10) = v366;
      *((_OWORD *)v210 + 7) = v364;
      *((_OWORD *)v210 + 8) = v365;
      v367 = *((_OWORD *)v211 + 11);
      v368 = *((_OWORD *)v211 + 12);
      v369 = *((_OWORD *)v211 + 13);
      *(_QWORD *)(v210 + 222) = *(_QWORD *)(v211 + 222);
      *((_OWORD *)v210 + 12) = v368;
      *((_OWORD *)v210 + 13) = v369;
      *((_OWORD *)v210 + 11) = v367;
    }
    v210[230] = v211[230];
    v210[231] = v211[231];
    v210[232] = v211[232];
    v210[233] = v211[233];
    v210[234] = v211[234];
    v210[235] = v211[235];
    *((_QWORD *)v210 + 30) = *((_QWORD *)v211 + 30);
    *((_QWORD *)v210 + 31) = *((_QWORD *)v211 + 31);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *((_QWORD *)v210 + 32) = *((_QWORD *)v211 + 32);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    __dsta = v212;
    v370 = v212[21];
    v371 = &v210[v370];
    v372 = &v211[v370];
    v373 = sub_1B8B9B054();
    v374 = *(_QWORD *)(v373 - 8);
    v375 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v374 + 48);
    v376 = v375(v371, 1, v373);
    v377 = v375(v372, 1, v373);
    if (v376)
    {
      if (!v377)
      {
        (*(void (**)(char *, char *, uint64_t))(v374 + 16))(v371, v372, v373);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v374 + 56))(v371, 0, 1, v373);
LABEL_186:
        v379 = __dsta[22];
        v380 = &v210[v379];
        v381 = &v211[v379];
        *(_QWORD *)v380 = *(_QWORD *)v381;
        *((_QWORD *)v380 + 1) = *((_QWORD *)v381 + 1);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        v382 = __dsta[23];
        v383 = &v210[v382];
        v384 = &v211[v382];
        *(_QWORD *)v383 = *(_QWORD *)v384;
        *((_QWORD *)v383 + 1) = *((_QWORD *)v384 + 1);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        v210[__dsta[24]] = v211[__dsta[24]];
        a3 = v399;
        v4 = v400;
        goto LABEL_119;
      }
    }
    else
    {
      if (!v377)
      {
        (*(void (**)(char *, char *, uint64_t))(v374 + 24))(v371, v372, v373);
        goto LABEL_186;
      }
      (*(void (**)(char *, uint64_t))(v374 + 8))(v371, v373);
    }
    v378 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1B3020);
    memcpy(v371, v372, *(_QWORD *)(*(_QWORD *)(v378 - 8) + 64));
    goto LABEL_186;
  }
  if (v216)
  {
    v217 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1BD368);
    memcpy(v210, v211, *(_QWORD *)(*(_QWORD *)(v217 - 8) + 64));
  }
  else
  {
    *(_QWORD *)v210 = *(_QWORD *)v211;
    *((_QWORD *)v210 + 1) = *((_QWORD *)v211 + 1);
    *((_QWORD *)v210 + 2) = *((_QWORD *)v211 + 2);
    *((_QWORD *)v210 + 3) = *((_QWORD *)v211 + 3);
    *((_QWORD *)v210 + 4) = *((_QWORD *)v211 + 4);
    *((_QWORD *)v210 + 5) = *((_QWORD *)v211 + 5);
    *((_QWORD *)v210 + 6) = *((_QWORD *)v211 + 6);
    *((_QWORD *)v210 + 7) = *((_QWORD *)v211 + 7);
    *((_QWORD *)v210 + 8) = *((_QWORD *)v211 + 8);
    *((_QWORD *)v210 + 9) = *((_QWORD *)v211 + 9);
    v210[80] = v211[80];
    *((_QWORD *)v210 + 11) = *((_QWORD *)v211 + 11);
    v220 = *((_QWORD *)v211 + 13);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v220)
    {
      *((_QWORD *)v210 + 12) = *((_QWORD *)v211 + 12);
      *((_QWORD *)v210 + 13) = *((_QWORD *)v211 + 13);
      *((_QWORD *)v210 + 14) = *((_QWORD *)v211 + 14);
      *((_QWORD *)v210 + 15) = *((_QWORD *)v211 + 15);
      *((_QWORD *)v210 + 16) = *((_QWORD *)v211 + 16);
      *((_QWORD *)v210 + 17) = *((_QWORD *)v211 + 17);
      *((_QWORD *)v210 + 18) = *((_QWORD *)v211 + 18);
      v210[152] = v211[152];
      v210[153] = v211[153];
      v210[154] = v211[154];
      v210[155] = v211[155];
      v210[156] = v211[156];
      *((_QWORD *)v210 + 20) = *((_QWORD *)v211 + 20);
      *((_QWORD *)v210 + 21) = *((_QWORD *)v211 + 21);
      v221 = *((_QWORD *)v211 + 22);
      v210[184] = v211[184];
      *((_QWORD *)v210 + 22) = v221;
      v222 = *((_QWORD *)v211 + 24);
      v210[200] = v211[200];
      *((_QWORD *)v210 + 24) = v222;
      v223 = *((_OWORD *)v211 + 13);
      *(_QWORD *)(v210 + 222) = *(_QWORD *)(v211 + 222);
      *((_OWORD *)v210 + 13) = v223;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      *((_OWORD *)v210 + 6) = *((_OWORD *)v211 + 6);
      v230 = *((_OWORD *)v211 + 7);
      v231 = *((_OWORD *)v211 + 8);
      v232 = *((_OWORD *)v211 + 10);
      *((_OWORD *)v210 + 9) = *((_OWORD *)v211 + 9);
      *((_OWORD *)v210 + 10) = v232;
      *((_OWORD *)v210 + 7) = v230;
      *((_OWORD *)v210 + 8) = v231;
      v233 = *((_OWORD *)v211 + 11);
      v234 = *((_OWORD *)v211 + 12);
      v235 = *((_OWORD *)v211 + 13);
      *(_QWORD *)(v210 + 222) = *(_QWORD *)(v211 + 222);
      *((_OWORD *)v210 + 12) = v234;
      *((_OWORD *)v210 + 13) = v235;
      *((_OWORD *)v210 + 11) = v233;
    }
    v210[230] = v211[230];
    v210[231] = v211[231];
    v210[232] = v211[232];
    v210[233] = v211[233];
    v210[234] = v211[234];
    v210[235] = v211[235];
    *((_QWORD *)v210 + 30) = *((_QWORD *)v211 + 30);
    *((_QWORD *)v210 + 31) = *((_QWORD *)v211 + 31);
    *((_QWORD *)v210 + 32) = *((_QWORD *)v211 + 32);
    v236 = v212[21];
    v387 = &v210[v236];
    v237 = &v211[v236];
    v238 = sub_1B8B9B054();
    v239 = *(_QWORD *)(v238 - 8);
    v240 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v239 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v240(v237, 1, v238))
    {
      v241 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1B3020);
      memcpy(v387, v237, *(_QWORD *)(*(_QWORD *)(v241 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v239 + 16))(v387, v237, v238);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v239 + 56))(v387, 0, 1, v238);
    }
    a3 = v399;
    v242 = v212[22];
    v243 = &v210[v242];
    v244 = &v211[v242];
    *(_QWORD *)v243 = *(_QWORD *)v244;
    *((_QWORD *)v243 + 1) = *((_QWORD *)v244 + 1);
    v245 = v212[23];
    v246 = &v210[v245];
    v247 = &v211[v245];
    *(_QWORD *)v246 = *(_QWORD *)v247;
    *((_QWORD *)v246 + 1) = *((_QWORD *)v247 + 1);
    v210[v212[24]] = v211[v212[24]];
    v248 = *(void (**)(char *, _QWORD, uint64_t, int *))(v213 + 56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v248(v210, 0, 1, v212);
    v4 = v400;
  }
  v218 = v393;
LABEL_119:
  *(_QWORD *)&a1[a3[24]] = *(_QWORD *)&v4[a3[24]];
  *(_QWORD *)&a1[a3[25]] = *(_QWORD *)&v4[a3[25]];
  *(_QWORD *)&a1[a3[26]] = *(_QWORD *)&v4[a3[26]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v249 = a3[27];
  v250 = &a1[v249];
  v251 = &v4[v249];
  *(_QWORD *)v250 = *(_QWORD *)v251;
  *((_QWORD *)v250 + 1) = *((_QWORD *)v251 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)&a1[a3[28]] = *(_QWORD *)&v4[a3[28]];
  v252 = a3[29];
  v253 = &a1[v252];
  v254 = &v4[v252];
  v255 = (uint64_t (*)(char *, uint64_t, uint64_t))v396[6];
  v256 = v255(&a1[v252], 1, v218);
  v257 = v255(v254, 1, v218);
  if (v256)
  {
    if (!v257)
    {
      ((void (*)(char *, char *, uint64_t))v396[2])(v253, v254, v218);
      ((void (*)(char *, _QWORD, uint64_t, uint64_t))v396[7])(v253, 0, 1, v218);
      goto LABEL_125;
    }
    goto LABEL_124;
  }
  if (v257)
  {
    ((void (*)(char *, uint64_t))v396[1])(v253, v218);
LABEL_124:
    v258 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1B2D18);
    memcpy(v253, v254, *(_QWORD *)(*(_QWORD *)(v258 - 8) + 64));
    goto LABEL_125;
  }
  v390(v253, v254, v218);
LABEL_125:
  *(_QWORD *)&a1[a3[30]] = *(_QWORD *)&v4[a3[30]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v259 = a3[31];
  v260 = &a1[v259];
  v261 = &v4[v259];
  v262 = (int *)type metadata accessor for EventOrganizerModelObject(0);
  v263 = *((_QWORD *)v262 - 1);
  v264 = *(uint64_t (**)(char *, uint64_t, int *))(v263 + 48);
  v265 = v264(v260, 1, v262);
  v266 = v264(v261, 1, v262);
  if (!v265)
  {
    if (v266)
    {
      sub_1B8AE7BD4((uint64_t)v260, type metadata accessor for EventOrganizerModelObject);
      goto LABEL_131;
    }
    *(_QWORD *)v260 = *(_QWORD *)v261;
    *((_QWORD *)v260 + 1) = *((_QWORD *)v261 + 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *((_QWORD *)v260 + 2) = *((_QWORD *)v261 + 2);
    *((_QWORD *)v260 + 3) = *((_QWORD *)v261 + 3);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *((_QWORD *)v260 + 4) = *((_QWORD *)v261 + 4);
    *((_QWORD *)v260 + 5) = *((_QWORD *)v261 + 5);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v272 = v262[7];
    v273 = &v260[v272];
    v274 = &v261[v272];
    v275 = sub_1B8B9B054();
    v276 = *(_QWORD *)(v275 - 8);
    v277 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v276 + 48);
    v278 = v277(v273, 1, v275);
    v279 = v277(v274, 1, v275);
    if (v278)
    {
      if (!v279)
      {
        (*(void (**)(char *, char *, uint64_t))(v276 + 16))(v273, v274, v275);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v276 + 56))(v273, 0, 1, v275);
LABEL_149:
        a3 = v399;
        v297 = v262[8];
        v298 = &v260[v297];
        v299 = &v261[v297];
        *(_QWORD *)v298 = *(_QWORD *)v299;
        *((_QWORD *)v298 + 1) = *((_QWORD *)v299 + 1);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        v260[v262[9]] = v261[v262[9]];
        v300 = v262[10];
        v301 = &v260[v300];
        v302 = &v261[v300];
        *(_QWORD *)v301 = *(_QWORD *)v302;
        *((_QWORD *)v301 + 1) = *((_QWORD *)v302 + 1);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        *(_QWORD *)&v260[v262[11]] = *(_QWORD *)&v261[v262[11]];
        v4 = v400;
        goto LABEL_150;
      }
    }
    else
    {
      if (!v279)
      {
        (*(void (**)(char *, char *, uint64_t))(v276 + 24))(v273, v274, v275);
        goto LABEL_149;
      }
      (*(void (**)(char *, uint64_t))(v276 + 8))(v273, v275);
    }
    v296 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1B3020);
    memcpy(v273, v274, *(_QWORD *)(*(_QWORD *)(v296 - 8) + 64));
    goto LABEL_149;
  }
  if (v266)
  {
LABEL_131:
    v271 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1BD380);
    memcpy(v260, v261, *(_QWORD *)(*(_QWORD *)(v271 - 8) + 64));
    goto LABEL_150;
  }
  *(_QWORD *)v260 = *(_QWORD *)v261;
  *((_QWORD *)v260 + 1) = *((_QWORD *)v261 + 1);
  *((_QWORD *)v260 + 2) = *((_QWORD *)v261 + 2);
  *((_QWORD *)v260 + 3) = *((_QWORD *)v261 + 3);
  *((_QWORD *)v260 + 4) = *((_QWORD *)v261 + 4);
  *((_QWORD *)v260 + 5) = *((_QWORD *)v261 + 5);
  v267 = v262[7];
  v394 = &v261[v267];
  v397 = &v260[v267];
  v268 = sub_1B8B9B054();
  v269 = *(_QWORD *)(v268 - 8);
  v391 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v269 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v391(v394, 1, v268))
  {
    v270 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1B3020);
    memcpy(v397, v394, *(_QWORD *)(*(_QWORD *)(v270 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v269 + 16))(v397, v394, v268);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v269 + 56))(v397, 0, 1, v268);
  }
  a3 = v399;
  v4 = v400;
  v280 = v262[8];
  v281 = &v260[v280];
  v282 = &v261[v280];
  *(_QWORD *)v281 = *(_QWORD *)v282;
  *((_QWORD *)v281 + 1) = *((_QWORD *)v282 + 1);
  v260[v262[9]] = v261[v262[9]];
  v283 = v262[10];
  v284 = &v260[v283];
  v285 = &v261[v283];
  *(_QWORD *)v284 = *(_QWORD *)v285;
  *((_QWORD *)v284 + 1) = *((_QWORD *)v285 + 1);
  *(_QWORD *)&v260[v262[11]] = *(_QWORD *)&v261[v262[11]];
  v286 = *(void (**)(char *, _QWORD, uint64_t, int *))(v263 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v286(v260, 0, 1, v262);
LABEL_150:
  *(_QWORD *)&a1[a3[32]] = *(_QWORD *)&v4[a3[32]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)&a1[a3[33]] = *(_QWORD *)&v4[a3[33]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v303 = a3[34];
  v304 = &a1[v303];
  v305 = &v4[v303];
  v306 = (int *)type metadata accessor for EventAttendeeModelObject(0);
  v307 = *((_QWORD *)v306 - 1);
  v308 = *(uint64_t (**)(char *, uint64_t, int *))(v307 + 48);
  v309 = v308(v304, 1, v306);
  v310 = v308(v305, 1, v306);
  if (!v309)
  {
    if (v310)
    {
      sub_1B8AE7BD4((uint64_t)v304, type metadata accessor for EventAttendeeModelObject);
      goto LABEL_156;
    }
    *(_QWORD *)v304 = *(_QWORD *)v305;
    *((_QWORD *)v304 + 1) = *((_QWORD *)v305 + 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *((_QWORD *)v304 + 2) = *((_QWORD *)v305 + 2);
    *((_QWORD *)v304 + 3) = *((_QWORD *)v305 + 3);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *((_QWORD *)v304 + 4) = *((_QWORD *)v305 + 4);
    *((_QWORD *)v304 + 5) = *((_QWORD *)v305 + 5);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v316 = v306[7];
    v317 = &v304[v316];
    v318 = &v305[v316];
    v319 = sub_1B8B9B054();
    v320 = *(_QWORD *)(v319 - 8);
    v321 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v320 + 48);
    v322 = v321(v317, 1, v319);
    v323 = v321(v318, 1, v319);
    if (v322)
    {
      if (!v323)
      {
        (*(void (**)(char *, char *, uint64_t))(v320 + 16))(v317, v318, v319);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v320 + 56))(v317, 0, 1, v319);
LABEL_168:
        a3 = v399;
        v335 = v306[8];
        v336 = &v304[v335];
        v337 = &v305[v335];
        *(_QWORD *)v336 = *(_QWORD *)v337;
        *((_QWORD *)v336 + 1) = *((_QWORD *)v337 + 1);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        v304[v306[9]] = v305[v306[9]];
        v338 = v306[10];
        v339 = &v304[v338];
        v340 = &v305[v338];
        *(_QWORD *)v339 = *(_QWORD *)v340;
        *((_QWORD *)v339 + 1) = *((_QWORD *)v340 + 1);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        *(_QWORD *)&v304[v306[11]] = *(_QWORD *)&v305[v306[11]];
        *(_QWORD *)&v304[v306[12]] = *(_QWORD *)&v305[v306[12]];
        *(_QWORD *)&v304[v306[13]] = *(_QWORD *)&v305[v306[13]];
        v341 = v306[14];
        v342 = &v304[v341];
        v343 = &v305[v341];
        *(_QWORD *)v342 = *(_QWORD *)v343;
        *((_QWORD *)v342 + 1) = *((_QWORD *)v343 + 1);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        v4 = v400;
        goto LABEL_169;
      }
    }
    else
    {
      if (!v323)
      {
        (*(void (**)(char *, char *, uint64_t))(v320 + 24))(v317, v318, v319);
        goto LABEL_168;
      }
      (*(void (**)(char *, uint64_t))(v320 + 8))(v317, v319);
    }
    v334 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1B3020);
    memcpy(v317, v318, *(_QWORD *)(*(_QWORD *)(v334 - 8) + 64));
    goto LABEL_168;
  }
  if (v310)
  {
LABEL_156:
    v315 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1BD378);
    memcpy(v304, v305, *(_QWORD *)(*(_QWORD *)(v315 - 8) + 64));
    goto LABEL_169;
  }
  *(_QWORD *)v304 = *(_QWORD *)v305;
  *((_QWORD *)v304 + 1) = *((_QWORD *)v305 + 1);
  *((_QWORD *)v304 + 2) = *((_QWORD *)v305 + 2);
  *((_QWORD *)v304 + 3) = *((_QWORD *)v305 + 3);
  *((_QWORD *)v304 + 4) = *((_QWORD *)v305 + 4);
  *((_QWORD *)v304 + 5) = *((_QWORD *)v305 + 5);
  v311 = v306[7];
  v395 = &v305[v311];
  v398 = &v304[v311];
  v312 = sub_1B8B9B054();
  v313 = *(_QWORD *)(v312 - 8);
  v392 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v313 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v392(v395, 1, v312))
  {
    v314 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1B3020);
    memcpy(v398, v395, *(_QWORD *)(*(_QWORD *)(v314 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v313 + 16))(v398, v395, v312);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v313 + 56))(v398, 0, 1, v312);
  }
  a3 = v399;
  v4 = v400;
  v324 = v306[8];
  v325 = &v304[v324];
  v326 = &v305[v324];
  *(_QWORD *)v325 = *(_QWORD *)v326;
  *((_QWORD *)v325 + 1) = *((_QWORD *)v326 + 1);
  v304[v306[9]] = v305[v306[9]];
  v327 = v306[10];
  v328 = &v304[v327];
  v329 = &v305[v327];
  *(_QWORD *)v328 = *(_QWORD *)v329;
  *((_QWORD *)v328 + 1) = *((_QWORD *)v329 + 1);
  *(_QWORD *)&v304[v306[11]] = *(_QWORD *)&v305[v306[11]];
  *(_QWORD *)&v304[v306[12]] = *(_QWORD *)&v305[v306[12]];
  *(_QWORD *)&v304[v306[13]] = *(_QWORD *)&v305[v306[13]];
  v330 = v306[14];
  v331 = &v304[v330];
  v332 = &v305[v330];
  *(_QWORD *)v331 = *(_QWORD *)v332;
  *((_QWORD *)v331 + 1) = *((_QWORD *)v332 + 1);
  v333 = *(void (**)(char *, _QWORD, uint64_t, int *))(v307 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v333(v304, 0, 1, v306);
LABEL_169:
  v344 = a3[35];
  v345 = &a1[v344];
  v346 = &v4[v344];
  *(_QWORD *)v345 = *(_QWORD *)v346;
  *((_QWORD *)v345 + 1) = *((_QWORD *)v346 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[a3[36]] = v4[a3[36]];
  a1[a3[37]] = v4[a3[37]];
  v347 = a3[38];
  v348 = &a1[v347];
  v349 = &v4[v347];
  *(_QWORD *)v348 = *(_QWORD *)v349;
  *((_QWORD *)v348 + 1) = *((_QWORD *)v349 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v350 = a3[39];
  v351 = (uint64_t)&a1[v350];
  v352 = &v4[v350];
  v353 = *(_QWORD *)&a1[v350 + 8];
  v354 = *(_QWORD *)&v4[v350 + 8];
  if (v353 == 1)
  {
    if (v354 == 1)
    {
      v355 = *((_OWORD *)v352 + 1);
      *(_OWORD *)v351 = *(_OWORD *)v352;
      *(_OWORD *)(v351 + 16) = v355;
    }
    else
    {
      *(_BYTE *)v351 = *v352;
      *(_QWORD *)(v351 + 8) = *((_QWORD *)v352 + 1);
      *(_QWORD *)(v351 + 16) = *((_QWORD *)v352 + 2);
      *(_QWORD *)(v351 + 24) = *((_QWORD *)v352 + 3);
      swift_retain();
      swift_bridgeObjectRetain();
    }
  }
  else if (v354 == 1)
  {
    sub_1B8B80EE4(v351);
    v356 = *((_OWORD *)v352 + 1);
    *(_OWORD *)v351 = *(_OWORD *)v352;
    *(_OWORD *)(v351 + 16) = v356;
  }
  else
  {
    *(_BYTE *)v351 = *v352;
    *(_QWORD *)(v351 + 8) = *((_QWORD *)v352 + 1);
    swift_retain();
    swift_release();
    *(_QWORD *)(v351 + 16) = *((_QWORD *)v352 + 2);
    *(_QWORD *)(v351 + 24) = *((_QWORD *)v352 + 3);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  a1[a3[40]] = v4[a3[40]];
  a1[a3[41]] = v4[a3[41]];
  a1[a3[42]] = v4[a3[42]];
  return a1;
}

uint64_t sub_1B8B80EB0(uint64_t a1)
{
  destroy for EventLocationModelObject(a1);
  return a1;
}

uint64_t sub_1B8B80EE4(uint64_t a1)
{
  destroy for EventIntegrationModelObject();
  return a1;
}

char *initializeWithTake for EventModelObject(char *a1, char *a2, int *a3)
{
  __int128 v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  _QWORD *v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  unsigned int (*v19)(char *, uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  char *v60;
  char *v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  char *v71;
  int *v72;
  uint64_t v73;
  uint64_t v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  char *v95;
  int *v96;
  uint64_t v97;
  uint64_t v98;
  __int128 v99;
  uint64_t v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  char *v108;
  int *v109;
  uint64_t v110;
  uint64_t v111;
  __int128 v112;
  uint64_t v113;
  char *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  __int128 v122;
  __int128 v123;
  char *v124;
  uint64_t v125;
  uint64_t v127;
  unsigned int (*v128)(char *, uint64_t, uint64_t);
  char *__dst;
  char *__dsta;
  void (*v131)(char *, char *, uint64_t);
  uint64_t v132;
  uint64_t v133;
  _QWORD *v134;
  _QWORD *v135;
  char *v136;
  char *v137;

  v6 = *((_OWORD *)a2 + 1);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *((_OWORD *)a1 + 1) = v6;
  *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
  v7 = a3[7];
  v8 = &a1[v7];
  v9 = &a2[v7];
  v10 = sub_1B8B9B0F0();
  v11 = *(_QWORD **)(v10 - 8);
  v12 = (void (*)(char *, char *, uint64_t))v11[4];
  v12(v8, v9, v10);
  v131 = v12;
  v12(&a1[a3[8]], &a2[a3[8]], v10);
  v13 = a3[10];
  a1[a3[9]] = a2[a3[9]];
  a1[v13] = a2[v13];
  v14 = a3[11];
  v15 = &a1[v14];
  v16 = &a2[v14];
  v17 = sub_1B8B9B2B8();
  v18 = *(_QWORD *)(v17 - 8);
  v19 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48);
  if (v19(v16, 1, v17))
  {
    v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1B8F70);
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v15, v16, v17);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
  }
  v21 = a3[12];
  v22 = &a1[v21];
  v23 = &a2[v21];
  if (v19(&a2[v21], 1, v17))
  {
    v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1B8F70);
    memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v22, v23, v17);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v22, 0, 1, v17);
  }
  v25 = a3[14];
  a1[a3[13]] = a2[a3[13]];
  v26 = &a1[v25];
  v27 = &a2[v25];
  v28 = type metadata accessor for EventVirtualConferenceModelObject(0);
  v29 = *(_QWORD *)(v28 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v27, 1, v28))
  {
    v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1BD370);
    memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
  }
  else
  {
    v132 = v10;
    v134 = v11;
    *(_OWORD *)v26 = *(_OWORD *)v27;
    *((_QWORD *)v26 + 2) = *((_QWORD *)v27 + 2);
    *(_OWORD *)(v26 + 24) = *(_OWORD *)(v27 + 24);
    *(_OWORD *)(v26 + 40) = *(_OWORD *)(v27 + 40);
    v26[56] = v27[56];
    *((_QWORD *)v26 + 8) = *((_QWORD *)v27 + 8);
    v31 = *(int *)(v28 + 40);
    __dst = &v26[v31];
    v32 = &v27[v31];
    v33 = sub_1B8B9B054();
    v34 = *(_QWORD *)(v33 - 8);
    v128 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v34 + 48);
    v127 = v34;
    if (v128(v32, 1, v33))
    {
      v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1B3020);
      memcpy(__dst, v32, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v34 + 32))(__dst, v32, v33);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v34 + 56))(__dst, 0, 1, v33);
    }
    v36 = *(int *)(v28 + 44);
    v37 = &v26[v36];
    v38 = &v27[v36];
    v11 = v134;
    if (v128(v38, 1, v33))
    {
      v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1B3020);
      memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v127 + 32))(v37, v38, v33);
      v11 = v134;
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v127 + 56))(v37, 0, 1, v33);
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v29 + 56))(v26, 0, 1, v28);
    v10 = v132;
  }
  v40 = a3[16];
  *(_OWORD *)&a1[a3[15]] = *(_OWORD *)&a2[a3[15]];
  *(_OWORD *)&a1[v40] = *(_OWORD *)&a2[v40];
  v41 = a3[18];
  *(_QWORD *)&a1[a3[17]] = *(_QWORD *)&a2[a3[17]];
  v42 = &a1[v41];
  v43 = &a2[v41];
  v44 = *((_OWORD *)v43 + 1);
  *(_OWORD *)v42 = *(_OWORD *)v43;
  *((_OWORD *)v42 + 1) = v44;
  v45 = *((_OWORD *)v43 + 5);
  *((_OWORD *)v42 + 4) = *((_OWORD *)v43 + 4);
  *((_OWORD *)v42 + 5) = v45;
  v46 = *((_OWORD *)v43 + 3);
  *((_OWORD *)v42 + 2) = *((_OWORD *)v43 + 2);
  *((_OWORD *)v42 + 3) = v46;
  v47 = *((_OWORD *)v43 + 10);
  v48 = *((_OWORD *)v43 + 8);
  *((_OWORD *)v42 + 9) = *((_OWORD *)v43 + 9);
  *((_OWORD *)v42 + 10) = v47;
  v49 = *((_OWORD *)v43 + 7);
  *((_OWORD *)v42 + 6) = *((_OWORD *)v43 + 6);
  *((_OWORD *)v42 + 7) = v49;
  *((_OWORD *)v42 + 8) = v48;
  v50 = a3[19];
  v51 = a3[20];
  v52 = &a1[v50];
  v53 = &a2[v50];
  v54 = *((_OWORD *)v53 + 1);
  *(_OWORD *)v52 = *(_OWORD *)v53;
  *((_OWORD *)v52 + 1) = v54;
  v55 = *((_OWORD *)v53 + 5);
  *((_OWORD *)v52 + 4) = *((_OWORD *)v53 + 4);
  *((_OWORD *)v52 + 5) = v55;
  v56 = *((_OWORD *)v53 + 3);
  *((_OWORD *)v52 + 2) = *((_OWORD *)v53 + 2);
  *((_OWORD *)v52 + 3) = v56;
  v57 = *((_OWORD *)v53 + 10);
  v58 = *((_OWORD *)v53 + 8);
  *((_OWORD *)v52 + 9) = *((_OWORD *)v53 + 9);
  *((_OWORD *)v52 + 10) = v57;
  v59 = *((_OWORD *)v53 + 7);
  *((_OWORD *)v52 + 6) = *((_OWORD *)v53 + 6);
  *((_OWORD *)v52 + 7) = v59;
  *((_OWORD *)v52 + 8) = v58;
  v60 = &a1[v51];
  v61 = &a2[v51];
  v62 = *((_OWORD *)v61 + 1);
  *(_OWORD *)v60 = *(_OWORD *)v61;
  *((_OWORD *)v60 + 1) = v62;
  v63 = *((_OWORD *)v61 + 5);
  *((_OWORD *)v60 + 4) = *((_OWORD *)v61 + 4);
  *((_OWORD *)v60 + 5) = v63;
  v64 = *((_OWORD *)v61 + 3);
  *((_OWORD *)v60 + 2) = *((_OWORD *)v61 + 2);
  *((_OWORD *)v60 + 3) = v64;
  v65 = *((_OWORD *)v61 + 10);
  v66 = *((_OWORD *)v61 + 8);
  *((_OWORD *)v60 + 9) = *((_OWORD *)v61 + 9);
  *((_OWORD *)v60 + 10) = v65;
  v67 = *((_OWORD *)v61 + 7);
  *((_OWORD *)v60 + 6) = *((_OWORD *)v61 + 6);
  *((_OWORD *)v60 + 7) = v67;
  *((_OWORD *)v60 + 8) = v66;
  v68 = a3[22];
  *(_QWORD *)&a1[a3[21]] = *(_QWORD *)&a2[a3[21]];
  *(_QWORD *)&a1[v68] = *(_QWORD *)&a2[v68];
  v69 = a3[23];
  v70 = &a1[v69];
  v71 = &a2[v69];
  v72 = (int *)type metadata accessor for EventCalendarModelObject();
  v73 = *((_QWORD *)v72 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v73 + 48))(v71, 1, v72))
  {
    v74 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1BD368);
    memcpy(v70, v71, *(_QWORD *)(*(_QWORD *)(v74 - 8) + 64));
  }
  else
  {
    v133 = v10;
    v135 = v11;
    *(_OWORD *)v70 = *(_OWORD *)v71;
    *((_QWORD *)v70 + 2) = *((_QWORD *)v71 + 2);
    *(_OWORD *)(v70 + 24) = *(_OWORD *)(v71 + 24);
    *(_OWORD *)(v70 + 40) = *(_OWORD *)(v71 + 40);
    *((_QWORD *)v70 + 7) = *((_QWORD *)v71 + 7);
    *((_OWORD *)v70 + 4) = *((_OWORD *)v71 + 4);
    v70[80] = v71[80];
    *((_QWORD *)v70 + 11) = *((_QWORD *)v71 + 11);
    v75 = *((_OWORD *)v71 + 6);
    v76 = *((_OWORD *)v71 + 7);
    v77 = *((_OWORD *)v71 + 9);
    *((_OWORD *)v70 + 8) = *((_OWORD *)v71 + 8);
    *((_OWORD *)v70 + 9) = v77;
    *((_OWORD *)v70 + 6) = v75;
    *((_OWORD *)v70 + 7) = v76;
    v78 = *((_OWORD *)v71 + 10);
    v79 = *((_OWORD *)v71 + 11);
    v80 = *((_OWORD *)v71 + 12);
    v81 = *((_OWORD *)v71 + 13);
    *(_QWORD *)(v70 + 222) = *(_QWORD *)(v71 + 222);
    *((_OWORD *)v70 + 12) = v80;
    *((_OWORD *)v70 + 13) = v81;
    *((_OWORD *)v70 + 10) = v78;
    *((_OWORD *)v70 + 11) = v79;
    *(_DWORD *)(v70 + 230) = *(_DWORD *)(v71 + 230);
    *((_WORD *)v70 + 117) = *((_WORD *)v71 + 117);
    *((_OWORD *)v70 + 15) = *((_OWORD *)v71 + 15);
    *((_QWORD *)v70 + 32) = *((_QWORD *)v71 + 32);
    v82 = v72[21];
    __dsta = &v70[v82];
    v83 = &v71[v82];
    v84 = sub_1B8B9B054();
    v85 = *(_QWORD *)(v84 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v85 + 48))(v83, 1, v84))
    {
      v86 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1B3020);
      memcpy(__dsta, v83, *(_QWORD *)(*(_QWORD *)(v86 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v85 + 32))(__dsta, v83, v84);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v85 + 56))(__dsta, 0, 1, v84);
    }
    v11 = v135;
    *(_OWORD *)&v70[v72[22]] = *(_OWORD *)&v71[v72[22]];
    *(_OWORD *)&v70[v72[23]] = *(_OWORD *)&v71[v72[23]];
    v70[v72[24]] = v71[v72[24]];
    (*(void (**)(char *, _QWORD, uint64_t, int *))(v73 + 56))(v70, 0, 1, v72);
    v10 = v133;
  }
  v87 = a3[25];
  *(_QWORD *)&a1[a3[24]] = *(_QWORD *)&a2[a3[24]];
  *(_QWORD *)&a1[v87] = *(_QWORD *)&a2[v87];
  v88 = a3[27];
  *(_QWORD *)&a1[a3[26]] = *(_QWORD *)&a2[a3[26]];
  *(_OWORD *)&a1[v88] = *(_OWORD *)&a2[v88];
  v89 = a3[29];
  *(_QWORD *)&a1[a3[28]] = *(_QWORD *)&a2[a3[28]];
  v90 = &a1[v89];
  v91 = &a2[v89];
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v11[6])(&a2[v89], 1, v10))
  {
    v92 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1B2D18);
    memcpy(v90, v91, *(_QWORD *)(*(_QWORD *)(v92 - 8) + 64));
  }
  else
  {
    v131(v90, v91, v10);
    ((void (*)(char *, _QWORD, uint64_t, uint64_t))v11[7])(v90, 0, 1, v10);
  }
  v93 = a3[31];
  *(_QWORD *)&a1[a3[30]] = *(_QWORD *)&a2[a3[30]];
  v94 = &a1[v93];
  v95 = &a2[v93];
  v96 = (int *)type metadata accessor for EventOrganizerModelObject(0);
  v97 = *((_QWORD *)v96 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v97 + 48))(v95, 1, v96))
  {
    v98 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1BD380);
    memcpy(v94, v95, *(_QWORD *)(*(_QWORD *)(v98 - 8) + 64));
  }
  else
  {
    v99 = *((_OWORD *)v95 + 1);
    *(_OWORD *)v94 = *(_OWORD *)v95;
    *((_OWORD *)v94 + 1) = v99;
    *((_OWORD *)v94 + 2) = *((_OWORD *)v95 + 2);
    v100 = v96[7];
    v136 = &v94[v100];
    v101 = &v95[v100];
    v102 = sub_1B8B9B054();
    v103 = *(_QWORD *)(v102 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v103 + 48))(v101, 1, v102))
    {
      v104 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1B3020);
      memcpy(v136, v101, *(_QWORD *)(*(_QWORD *)(v104 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v103 + 32))(v136, v101, v102);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v103 + 56))(v136, 0, 1, v102);
    }
    *(_OWORD *)&v94[v96[8]] = *(_OWORD *)&v95[v96[8]];
    v94[v96[9]] = v95[v96[9]];
    *(_OWORD *)&v94[v96[10]] = *(_OWORD *)&v95[v96[10]];
    *(_QWORD *)&v94[v96[11]] = *(_QWORD *)&v95[v96[11]];
    (*(void (**)(char *, _QWORD, uint64_t, int *))(v97 + 56))(v94, 0, 1, v96);
  }
  v105 = a3[33];
  *(_QWORD *)&a1[a3[32]] = *(_QWORD *)&a2[a3[32]];
  *(_QWORD *)&a1[v105] = *(_QWORD *)&a2[v105];
  v106 = a3[34];
  v107 = &a1[v106];
  v108 = &a2[v106];
  v109 = (int *)type metadata accessor for EventAttendeeModelObject(0);
  v110 = *((_QWORD *)v109 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v110 + 48))(v108, 1, v109))
  {
    v111 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1BD378);
    memcpy(v107, v108, *(_QWORD *)(*(_QWORD *)(v111 - 8) + 64));
  }
  else
  {
    v112 = *((_OWORD *)v108 + 1);
    *(_OWORD *)v107 = *(_OWORD *)v108;
    *((_OWORD *)v107 + 1) = v112;
    *((_OWORD *)v107 + 2) = *((_OWORD *)v108 + 2);
    v113 = v109[7];
    v137 = &v107[v113];
    v114 = &v108[v113];
    v115 = sub_1B8B9B054();
    v116 = *(_QWORD *)(v115 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v116 + 48))(v114, 1, v115))
    {
      v117 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1B3020);
      memcpy(v137, v114, *(_QWORD *)(*(_QWORD *)(v117 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v116 + 32))(v137, v114, v115);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v116 + 56))(v137, 0, 1, v115);
    }
    *(_OWORD *)&v107[v109[8]] = *(_OWORD *)&v108[v109[8]];
    v107[v109[9]] = v108[v109[9]];
    *(_OWORD *)&v107[v109[10]] = *(_OWORD *)&v108[v109[10]];
    *(_QWORD *)&v107[v109[11]] = *(_QWORD *)&v108[v109[11]];
    *(_QWORD *)&v107[v109[12]] = *(_QWORD *)&v108[v109[12]];
    *(_QWORD *)&v107[v109[13]] = *(_QWORD *)&v108[v109[13]];
    *(_OWORD *)&v107[v109[14]] = *(_OWORD *)&v108[v109[14]];
    (*(void (**)(char *, _QWORD, uint64_t, int *))(v110 + 56))(v107, 0, 1, v109);
  }
  v118 = a3[36];
  *(_OWORD *)&a1[a3[35]] = *(_OWORD *)&a2[a3[35]];
  a1[v118] = a2[v118];
  v119 = a3[38];
  a1[a3[37]] = a2[a3[37]];
  *(_OWORD *)&a1[v119] = *(_OWORD *)&a2[v119];
  v120 = a3[39];
  v121 = a3[40];
  v122 = *(_OWORD *)&a2[v120];
  v123 = *(_OWORD *)&a2[v120 + 16];
  v124 = &a1[v120];
  *(_OWORD *)v124 = v122;
  *((_OWORD *)v124 + 1) = v123;
  a1[v121] = a2[v121];
  v125 = a3[42];
  a1[a3[41]] = a2[a3[41]];
  a1[v125] = a2[v125];
  return a1;
}

char *assignWithTake for EventModelObject(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  void (*v13)(char *, char *, uint64_t);
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t (*v20)(char *, uint64_t, uint64_t);
  int v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  int v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t (*v35)(uint64_t, uint64_t, uint64_t);
  int v36;
  int v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  size_t v43;
  void *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void *v50;
  char *v51;
  uint64_t v52;
  uint64_t (*v53)(void *, uint64_t, uint64_t);
  int v54;
  size_t v55;
  void *v56;
  uint64_t v57;
  void *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  __int128 v84;
  __int128 v85;
  __int128 v86;
  __int128 v87;
  __int128 v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  __int128 v93;
  __int128 v94;
  __int128 v95;
  __int128 v96;
  __int128 v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  int *v102;
  uint64_t v103;
  uint64_t (*v104)(uint64_t, uint64_t, int *);
  int v105;
  int v106;
  __int128 v107;
  __int128 v108;
  __int128 v109;
  __int128 v110;
  __int128 v111;
  __int128 v112;
  __int128 v113;
  uint64_t v114;
  char *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  void *v120;
  uint64_t v121;
  uint64_t v122;
  _OWORD *v123;
  unint64_t v124;
  unint64_t v125;
  void *v126;
  uint64_t v127;
  uint64_t v128;
  _OWORD *v129;
  unint64_t v130;
  unint64_t v131;
  void *v132;
  uint64_t v133;
  uint64_t v134;
  _OWORD *v135;
  unint64_t v136;
  unint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  __int128 v145;
  __int128 v146;
  uint64_t v147;
  uint64_t v148;
  __int128 v149;
  __int128 v150;
  uint64_t v151;
  uint64_t v152;
  __int128 v153;
  __int128 v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  __int128 v167;
  __int128 v168;
  __int128 v169;
  __int128 v170;
  uint64_t v171;
  uint64_t v172;
  void *v173;
  char *v174;
  uint64_t v175;
  uint64_t (*v176)(void *, uint64_t, uint64_t);
  int v177;
  size_t v178;
  void *v179;
  uint64_t v180;
  void *v181;
  char *v182;
  int v183;
  int v184;
  uint64_t v185;
  _QWORD *v186;
  char *v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  _QWORD *v191;
  char *v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  char *v197;
  uint64_t *v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  char *v202;
  char *v203;
  uint64_t (*v204)(char *, uint64_t, uint64_t);
  int v205;
  int v206;
  uint64_t v207;
  uint64_t v208;
  char *v209;
  char *v210;
  int *v211;
  uint64_t v212;
  uint64_t (*v213)(char *, uint64_t, int *);
  int v214;
  int v215;
  __int128 v216;
  uint64_t v217;
  char *v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  char *v227;
  char *v228;
  uint64_t v229;
  uint64_t (*v230)(char *, uint64_t, uint64_t);
  int v231;
  size_t v232;
  void *v233;
  uint64_t v234;
  char *v235;
  uint64_t *v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  char *v240;
  uint64_t *v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  char *v245;
  char *v246;
  int *v247;
  uint64_t v248;
  uint64_t (*v249)(char *, uint64_t, int *);
  int v250;
  int v251;
  __int128 v252;
  uint64_t v253;
  char *v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  char *v263;
  char *v264;
  uint64_t v265;
  uint64_t (*v266)(char *, uint64_t, uint64_t);
  int v267;
  size_t v268;
  void *v269;
  uint64_t v270;
  char *v271;
  uint64_t *v272;
  uint64_t v273;
  uint64_t v274;
  uint64_t v275;
  char *v276;
  uint64_t *v277;
  uint64_t v278;
  uint64_t v279;
  uint64_t v280;
  char *v281;
  uint64_t *v282;
  uint64_t v283;
  uint64_t v284;
  uint64_t v285;
  char *v286;
  uint64_t *v287;
  uint64_t v288;
  uint64_t v289;
  uint64_t v290;
  uint64_t v291;
  char *v292;
  uint64_t *v293;
  uint64_t v294;
  uint64_t v295;
  uint64_t v296;
  uint64_t v297;
  char *v298;
  uint64_t v299;
  __int128 v300;
  uint64_t v301;
  uint64_t v302;
  uint64_t v304;
  void *v305;
  uint64_t v306;
  unsigned int (*__src)(char *, uint64_t, uint64_t);
  void *__dst;
  _QWORD *__dsta;
  void *__dstb;
  void *__dstc;
  void (*v312)(char *, char *, uint64_t);
  uint64_t v313;
  uint64_t v314;
  void *v315;
  void *v316;
  void *v317;
  void *v318;
  _QWORD *v319;
  char *v320;
  void *v321;
  char *v322;
  void *v323;

  v6 = *((_QWORD *)a2 + 1);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *((_QWORD *)a1 + 1) = v6;
  swift_bridgeObjectRelease();
  v7 = *((_QWORD *)a2 + 3);
  *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
  *((_QWORD *)a1 + 3) = v7;
  swift_bridgeObjectRelease();
  v8 = *((_QWORD *)a2 + 5);
  *((_QWORD *)a1 + 4) = *((_QWORD *)a2 + 4);
  *((_QWORD *)a1 + 5) = v8;
  swift_bridgeObjectRelease();
  v9 = a3[7];
  v10 = &a1[v9];
  v11 = &a2[v9];
  v12 = sub_1B8B9B0F0();
  v319 = *(_QWORD **)(v12 - 8);
  v13 = (void (*)(char *, char *, uint64_t))v319[5];
  v13(v10, v11, v12);
  v312 = v13;
  v13(&a1[a3[8]], &a2[a3[8]], v12);
  v14 = a3[10];
  a1[a3[9]] = a2[a3[9]];
  a1[v14] = a2[v14];
  v15 = a3[11];
  v16 = &a1[v15];
  v17 = &a2[v15];
  v18 = sub_1B8B9B2B8();
  v19 = *(_QWORD *)(v18 - 8);
  v20 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v19 + 48);
  v21 = v20(v16, 1, v18);
  v22 = v20(v17, 1, v18);
  if (v21)
  {
    if (!v22)
    {
      (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v16, v17, v18);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v22)
  {
    (*(void (**)(char *, uint64_t))(v19 + 8))(v16, v18);
LABEL_6:
    v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1B8F70);
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v19 + 40))(v16, v17, v18);
LABEL_7:
  v24 = a3[12];
  v25 = &a1[v24];
  v26 = &a2[v24];
  v27 = v20(&a1[v24], 1, v18);
  v28 = v20(v26, 1, v18);
  if (v27)
  {
    if (!v28)
    {
      (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v25, v26, v18);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v25, 0, 1, v18);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v28)
  {
    (*(void (**)(char *, uint64_t))(v19 + 8))(v25, v18);
LABEL_12:
    v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1B8F70);
    memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v19 + 40))(v25, v26, v18);
LABEL_13:
  v30 = a3[14];
  a1[a3[13]] = a2[a3[13]];
  v31 = (uint64_t)&a1[v30];
  v32 = &a2[v30];
  v33 = type metadata accessor for EventVirtualConferenceModelObject(0);
  v34 = *(_QWORD *)(v33 - 8);
  v35 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v34 + 48);
  v36 = v35(v31, 1, v33);
  v37 = v35((uint64_t)v32, 1, v33);
  if (!v36)
  {
    if (v37)
    {
      sub_1B8AE7BD4(v31, type metadata accessor for EventVirtualConferenceModelObject);
      goto LABEL_19;
    }
    v316 = (void *)v12;
    v46 = *((_QWORD *)v32 + 1);
    *(_QWORD *)v31 = *(_QWORD *)v32;
    *(_QWORD *)(v31 + 8) = v46;
    swift_bridgeObjectRelease();
    *(_QWORD *)(v31 + 16) = *((_QWORD *)v32 + 2);
    swift_bridgeObjectRelease();
    v47 = *((_QWORD *)v32 + 4);
    *(_QWORD *)(v31 + 24) = *((_QWORD *)v32 + 3);
    *(_QWORD *)(v31 + 32) = v47;
    swift_bridgeObjectRelease();
    v48 = *((_QWORD *)v32 + 6);
    *(_QWORD *)(v31 + 40) = *((_QWORD *)v32 + 5);
    *(_QWORD *)(v31 + 48) = v48;
    swift_bridgeObjectRelease();
    *(_BYTE *)(v31 + 56) = v32[56];
    *(_QWORD *)(v31 + 64) = *((_QWORD *)v32 + 8);
    v49 = *(int *)(v33 + 40);
    v50 = (void *)(v31 + v49);
    v51 = &v32[v49];
    v52 = sub_1B8B9B054();
    __dsta = *(_QWORD **)(v52 - 8);
    v53 = (uint64_t (*)(void *, uint64_t, uint64_t))__dsta[6];
    v305 = v50;
    LODWORD(v50) = v53(v50, 1, v52);
    v54 = v53(v51, 1, v52);
    if ((_DWORD)v50)
    {
      if (!v54)
      {
        ((void (*)(void *, char *, uint64_t))__dsta[4])(v305, v51, v52);
        ((void (*)(void *, _QWORD, uint64_t, uint64_t))__dsta[7])(v305, 0, 1, v52);
        goto LABEL_99;
      }
      v55 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED1B3020) - 8) + 64);
      v56 = v305;
    }
    else
    {
      if (!v54)
      {
        ((void (*)(void *, char *, uint64_t))__dsta[5])(v305, v51, v52);
        goto LABEL_99;
      }
      ((void (*)(void *, uint64_t))__dsta[1])(v305, v52);
      v55 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED1B3020) - 8) + 64);
      v56 = v305;
    }
    memcpy(v56, v51, v55);
LABEL_99:
    v180 = *(int *)(v33 + 44);
    v181 = (void *)(v31 + v180);
    v182 = &v32[v180];
    v183 = v53(v181, 1, v52);
    v184 = v53(v182, 1, v52);
    if (v183)
    {
      v12 = (uint64_t)v316;
      if (!v184)
      {
        ((void (*)(void *, char *, uint64_t))__dsta[4])(v181, v182, v52);
        ((void (*)(void *, _QWORD, uint64_t, uint64_t))__dsta[7])(v181, 0, 1, v52);
        goto LABEL_31;
      }
    }
    else
    {
      v12 = (uint64_t)v316;
      if (!v184)
      {
        ((void (*)(void *, char *, uint64_t))__dsta[5])(v181, v182, v52);
        goto LABEL_31;
      }
      ((void (*)(void *, uint64_t))__dsta[1])(v181, v52);
    }
    v43 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED1B3020) - 8) + 64);
    v44 = v181;
    v45 = v182;
LABEL_20:
    memcpy(v44, v45, v43);
    goto LABEL_31;
  }
  if (v37)
  {
LABEL_19:
    v43 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EF1BD370) - 8) + 64);
    v44 = (void *)v31;
    v45 = v32;
    goto LABEL_20;
  }
  v315 = (void *)v12;
  *(_OWORD *)v31 = *(_OWORD *)v32;
  *(_QWORD *)(v31 + 16) = *((_QWORD *)v32 + 2);
  *(_OWORD *)(v31 + 24) = *(_OWORD *)(v32 + 24);
  *(_OWORD *)(v31 + 40) = *(_OWORD *)(v32 + 40);
  *(_BYTE *)(v31 + 56) = v32[56];
  *(_QWORD *)(v31 + 64) = *((_QWORD *)v32 + 8);
  v38 = *(int *)(v33 + 40);
  __dst = (void *)(v31 + v38);
  v39 = &v32[v38];
  v40 = sub_1B8B9B054();
  v41 = *(_QWORD *)(v40 - 8);
  __src = *(unsigned int (**)(char *, uint64_t, uint64_t))(v41 + 48);
  v304 = v41;
  if (__src(v39, 1, v40))
  {
    v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1B3020);
    memcpy(__dst, v39, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v41 + 32))(__dst, v39, v40);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v41 + 56))(__dst, 0, 1, v40);
  }
  v57 = *(int *)(v33 + 44);
  v58 = (void *)(v31 + v57);
  v59 = &v32[v57];
  v12 = (uint64_t)v315;
  if (__src(v59, 1, v40))
  {
    v60 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1B3020);
    memcpy(v58, v59, *(_QWORD *)(*(_QWORD *)(v60 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v304 + 32))(v58, v59, v40);
    v12 = (uint64_t)v315;
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v304 + 56))(v58, 0, 1, v40);
  }
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v34 + 56))(v31, 0, 1, v33);
LABEL_31:
  v61 = a3[15];
  v62 = &a1[v61];
  v63 = (uint64_t *)&a2[v61];
  v65 = *v63;
  v64 = v63[1];
  *(_QWORD *)v62 = v65;
  *((_QWORD *)v62 + 1) = v64;
  swift_bridgeObjectRelease();
  v66 = a3[16];
  v67 = &a1[v66];
  v68 = (uint64_t *)&a2[v66];
  v70 = *v68;
  v69 = v68[1];
  *(_QWORD *)v67 = v70;
  *((_QWORD *)v67 + 1) = v69;
  swift_bridgeObjectRelease();
  *(_QWORD *)&a1[a3[17]] = *(_QWORD *)&a2[a3[17]];
  swift_bridgeObjectRelease();
  v71 = a3[18];
  v72 = (uint64_t)&a1[v71];
  v73 = &a2[v71];
  if (*(_QWORD *)&a1[v71 + 8] == 1)
  {
LABEL_34:
    v75 = *((_OWORD *)v73 + 9);
    *(_OWORD *)(v72 + 128) = *((_OWORD *)v73 + 8);
    *(_OWORD *)(v72 + 144) = v75;
    *(_OWORD *)(v72 + 160) = *((_OWORD *)v73 + 10);
    v76 = *((_OWORD *)v73 + 5);
    *(_OWORD *)(v72 + 64) = *((_OWORD *)v73 + 4);
    *(_OWORD *)(v72 + 80) = v76;
    v77 = *((_OWORD *)v73 + 7);
    *(_OWORD *)(v72 + 96) = *((_OWORD *)v73 + 6);
    *(_OWORD *)(v72 + 112) = v77;
    v78 = *((_OWORD *)v73 + 1);
    *(_OWORD *)v72 = *(_OWORD *)v73;
    *(_OWORD *)(v72 + 16) = v78;
    v79 = *((_OWORD *)v73 + 3);
    *(_OWORD *)(v72 + 32) = *((_OWORD *)v73 + 2);
    *(_OWORD *)(v72 + 48) = v79;
    goto LABEL_35;
  }
  v74 = *((_QWORD *)v73 + 1);
  if (v74 == 1)
  {
    sub_1B8B80EB0(v72);
    goto LABEL_34;
  }
  *(_QWORD *)v72 = *(_QWORD *)v73;
  *(_QWORD *)(v72 + 8) = v74;
  swift_bridgeObjectRelease();
  v120 = *(void **)(v72 + 16);
  *(_QWORD *)(v72 + 16) = *((_QWORD *)v73 + 2);

  *(_QWORD *)(v72 + 24) = *((_QWORD *)v73 + 3);
  v121 = *((_QWORD *)v73 + 5);
  *(_QWORD *)(v72 + 32) = *((_QWORD *)v73 + 4);
  *(_QWORD *)(v72 + 40) = v121;
  swift_bridgeObjectRelease();
  v122 = *((_QWORD *)v73 + 7);
  *(_QWORD *)(v72 + 48) = *((_QWORD *)v73 + 6);
  *(_QWORD *)(v72 + 56) = v122;
  swift_bridgeObjectRelease();
  v123 = v73 + 64;
  v124 = *(_QWORD *)(v72 + 72);
  if (v124 >> 60 == 15)
    goto LABEL_53;
  v125 = *((_QWORD *)v73 + 9);
  if (v125 >> 60 == 15)
  {
    sub_1B8B18778(v72 + 64);
LABEL_53:
    *(_OWORD *)(v72 + 64) = *v123;
    goto LABEL_68;
  }
  v143 = *(_QWORD *)(v72 + 64);
  *(_QWORD *)(v72 + 64) = *(_QWORD *)v123;
  *(_QWORD *)(v72 + 72) = v125;
  sub_1B8ADC698(v143, v124);
LABEL_68:
  *(_BYTE *)(v72 + 80) = v73[80];
  if (*(_QWORD *)(v72 + 104) == 1)
  {
LABEL_71:
    v145 = *(_OWORD *)(v73 + 136);
    *(_OWORD *)(v72 + 120) = *(_OWORD *)(v73 + 120);
    *(_OWORD *)(v72 + 136) = v145;
    *(_OWORD *)(v72 + 152) = *(_OWORD *)(v73 + 152);
    *(_QWORD *)(v72 + 168) = *((_QWORD *)v73 + 21);
    v146 = *(_OWORD *)(v73 + 104);
    *(_OWORD *)(v72 + 88) = *(_OWORD *)(v73 + 88);
    *(_OWORD *)(v72 + 104) = v146;
    goto LABEL_35;
  }
  v144 = *((_QWORD *)v73 + 13);
  if (v144 == 1)
  {
    sub_1B8B2EDB4(v72 + 88);
    goto LABEL_71;
  }
  *(_OWORD *)(v72 + 88) = *(_OWORD *)(v73 + 88);
  *(_QWORD *)(v72 + 104) = v144;
  swift_bridgeObjectRelease();
  v155 = *((_QWORD *)v73 + 15);
  *(_QWORD *)(v72 + 112) = *((_QWORD *)v73 + 14);
  *(_QWORD *)(v72 + 120) = v155;
  swift_bridgeObjectRelease();
  v156 = *((_QWORD *)v73 + 17);
  *(_QWORD *)(v72 + 128) = *((_QWORD *)v73 + 16);
  *(_QWORD *)(v72 + 136) = v156;
  swift_bridgeObjectRelease();
  v157 = *((_QWORD *)v73 + 19);
  *(_QWORD *)(v72 + 144) = *((_QWORD *)v73 + 18);
  *(_QWORD *)(v72 + 152) = v157;
  swift_bridgeObjectRelease();
  v158 = *((_QWORD *)v73 + 21);
  *(_QWORD *)(v72 + 160) = *((_QWORD *)v73 + 20);
  *(_QWORD *)(v72 + 168) = v158;
  swift_bridgeObjectRelease();
LABEL_35:
  v80 = a3[19];
  v81 = (uint64_t)&a1[v80];
  v82 = &a2[v80];
  if (*(_QWORD *)&a1[v80 + 8] == 1)
  {
LABEL_38:
    v84 = *((_OWORD *)v82 + 9);
    *(_OWORD *)(v81 + 128) = *((_OWORD *)v82 + 8);
    *(_OWORD *)(v81 + 144) = v84;
    *(_OWORD *)(v81 + 160) = *((_OWORD *)v82 + 10);
    v85 = *((_OWORD *)v82 + 5);
    *(_OWORD *)(v81 + 64) = *((_OWORD *)v82 + 4);
    *(_OWORD *)(v81 + 80) = v85;
    v86 = *((_OWORD *)v82 + 7);
    *(_OWORD *)(v81 + 96) = *((_OWORD *)v82 + 6);
    *(_OWORD *)(v81 + 112) = v86;
    v87 = *((_OWORD *)v82 + 1);
    *(_OWORD *)v81 = *(_OWORD *)v82;
    *(_OWORD *)(v81 + 16) = v87;
    v88 = *((_OWORD *)v82 + 3);
    *(_OWORD *)(v81 + 32) = *((_OWORD *)v82 + 2);
    *(_OWORD *)(v81 + 48) = v88;
    goto LABEL_39;
  }
  v83 = *((_QWORD *)v82 + 1);
  if (v83 == 1)
  {
    sub_1B8B80EB0(v81);
    goto LABEL_38;
  }
  *(_QWORD *)v81 = *(_QWORD *)v82;
  *(_QWORD *)(v81 + 8) = v83;
  swift_bridgeObjectRelease();
  v126 = *(void **)(v81 + 16);
  *(_QWORD *)(v81 + 16) = *((_QWORD *)v82 + 2);

  *(_QWORD *)(v81 + 24) = *((_QWORD *)v82 + 3);
  v127 = *((_QWORD *)v82 + 5);
  *(_QWORD *)(v81 + 32) = *((_QWORD *)v82 + 4);
  *(_QWORD *)(v81 + 40) = v127;
  swift_bridgeObjectRelease();
  v128 = *((_QWORD *)v82 + 7);
  *(_QWORD *)(v81 + 48) = *((_QWORD *)v82 + 6);
  *(_QWORD *)(v81 + 56) = v128;
  swift_bridgeObjectRelease();
  v129 = v82 + 64;
  v130 = *(_QWORD *)(v81 + 72);
  if (v130 >> 60 == 15)
    goto LABEL_57;
  v131 = *((_QWORD *)v82 + 9);
  if (v131 >> 60 == 15)
  {
    sub_1B8B18778(v81 + 64);
LABEL_57:
    *(_OWORD *)(v81 + 64) = *v129;
    goto LABEL_73;
  }
  v147 = *(_QWORD *)(v81 + 64);
  *(_QWORD *)(v81 + 64) = *(_QWORD *)v129;
  *(_QWORD *)(v81 + 72) = v131;
  sub_1B8ADC698(v147, v130);
LABEL_73:
  *(_BYTE *)(v81 + 80) = v82[80];
  if (*(_QWORD *)(v81 + 104) == 1)
  {
LABEL_76:
    v149 = *(_OWORD *)(v82 + 136);
    *(_OWORD *)(v81 + 120) = *(_OWORD *)(v82 + 120);
    *(_OWORD *)(v81 + 136) = v149;
    *(_OWORD *)(v81 + 152) = *(_OWORD *)(v82 + 152);
    *(_QWORD *)(v81 + 168) = *((_QWORD *)v82 + 21);
    v150 = *(_OWORD *)(v82 + 104);
    *(_OWORD *)(v81 + 88) = *(_OWORD *)(v82 + 88);
    *(_OWORD *)(v81 + 104) = v150;
    goto LABEL_39;
  }
  v148 = *((_QWORD *)v82 + 13);
  if (v148 == 1)
  {
    sub_1B8B2EDB4(v81 + 88);
    goto LABEL_76;
  }
  *(_OWORD *)(v81 + 88) = *(_OWORD *)(v82 + 88);
  *(_QWORD *)(v81 + 104) = v148;
  swift_bridgeObjectRelease();
  v159 = *((_QWORD *)v82 + 15);
  *(_QWORD *)(v81 + 112) = *((_QWORD *)v82 + 14);
  *(_QWORD *)(v81 + 120) = v159;
  swift_bridgeObjectRelease();
  v160 = *((_QWORD *)v82 + 17);
  *(_QWORD *)(v81 + 128) = *((_QWORD *)v82 + 16);
  *(_QWORD *)(v81 + 136) = v160;
  swift_bridgeObjectRelease();
  v161 = *((_QWORD *)v82 + 19);
  *(_QWORD *)(v81 + 144) = *((_QWORD *)v82 + 18);
  *(_QWORD *)(v81 + 152) = v161;
  swift_bridgeObjectRelease();
  v162 = *((_QWORD *)v82 + 21);
  *(_QWORD *)(v81 + 160) = *((_QWORD *)v82 + 20);
  *(_QWORD *)(v81 + 168) = v162;
  swift_bridgeObjectRelease();
LABEL_39:
  v89 = a3[20];
  v90 = (uint64_t)&a1[v89];
  v91 = &a2[v89];
  if (*(_QWORD *)&a1[v89 + 8] == 1)
  {
LABEL_42:
    v93 = *((_OWORD *)v91 + 9);
    *(_OWORD *)(v90 + 128) = *((_OWORD *)v91 + 8);
    *(_OWORD *)(v90 + 144) = v93;
    *(_OWORD *)(v90 + 160) = *((_OWORD *)v91 + 10);
    v94 = *((_OWORD *)v91 + 5);
    *(_OWORD *)(v90 + 64) = *((_OWORD *)v91 + 4);
    *(_OWORD *)(v90 + 80) = v94;
    v95 = *((_OWORD *)v91 + 7);
    *(_OWORD *)(v90 + 96) = *((_OWORD *)v91 + 6);
    *(_OWORD *)(v90 + 112) = v95;
    v96 = *((_OWORD *)v91 + 1);
    *(_OWORD *)v90 = *(_OWORD *)v91;
    *(_OWORD *)(v90 + 16) = v96;
    v97 = *((_OWORD *)v91 + 3);
    *(_OWORD *)(v90 + 32) = *((_OWORD *)v91 + 2);
    *(_OWORD *)(v90 + 48) = v97;
    goto LABEL_43;
  }
  v92 = *((_QWORD *)v91 + 1);
  if (v92 == 1)
  {
    sub_1B8B80EB0(v90);
    goto LABEL_42;
  }
  *(_QWORD *)v90 = *(_QWORD *)v91;
  *(_QWORD *)(v90 + 8) = v92;
  swift_bridgeObjectRelease();
  v132 = *(void **)(v90 + 16);
  *(_QWORD *)(v90 + 16) = *((_QWORD *)v91 + 2);

  *(_QWORD *)(v90 + 24) = *((_QWORD *)v91 + 3);
  v133 = *((_QWORD *)v91 + 5);
  *(_QWORD *)(v90 + 32) = *((_QWORD *)v91 + 4);
  *(_QWORD *)(v90 + 40) = v133;
  swift_bridgeObjectRelease();
  v134 = *((_QWORD *)v91 + 7);
  *(_QWORD *)(v90 + 48) = *((_QWORD *)v91 + 6);
  *(_QWORD *)(v90 + 56) = v134;
  swift_bridgeObjectRelease();
  v135 = v91 + 64;
  v136 = *(_QWORD *)(v90 + 72);
  if (v136 >> 60 == 15)
    goto LABEL_61;
  v137 = *((_QWORD *)v91 + 9);
  if (v137 >> 60 == 15)
  {
    sub_1B8B18778(v90 + 64);
LABEL_61:
    *(_OWORD *)(v90 + 64) = *v135;
    goto LABEL_78;
  }
  v151 = *(_QWORD *)(v90 + 64);
  *(_QWORD *)(v90 + 64) = *(_QWORD *)v135;
  *(_QWORD *)(v90 + 72) = v137;
  sub_1B8ADC698(v151, v136);
LABEL_78:
  *(_BYTE *)(v90 + 80) = v91[80];
  if (*(_QWORD *)(v90 + 104) == 1)
  {
LABEL_81:
    v153 = *(_OWORD *)(v91 + 136);
    *(_OWORD *)(v90 + 120) = *(_OWORD *)(v91 + 120);
    *(_OWORD *)(v90 + 136) = v153;
    *(_OWORD *)(v90 + 152) = *(_OWORD *)(v91 + 152);
    *(_QWORD *)(v90 + 168) = *((_QWORD *)v91 + 21);
    v154 = *(_OWORD *)(v91 + 104);
    *(_OWORD *)(v90 + 88) = *(_OWORD *)(v91 + 88);
    *(_OWORD *)(v90 + 104) = v154;
    goto LABEL_43;
  }
  v152 = *((_QWORD *)v91 + 13);
  if (v152 == 1)
  {
    sub_1B8B2EDB4(v90 + 88);
    goto LABEL_81;
  }
  *(_OWORD *)(v90 + 88) = *(_OWORD *)(v91 + 88);
  *(_QWORD *)(v90 + 104) = v152;
  swift_bridgeObjectRelease();
  v163 = *((_QWORD *)v91 + 15);
  *(_QWORD *)(v90 + 112) = *((_QWORD *)v91 + 14);
  *(_QWORD *)(v90 + 120) = v163;
  swift_bridgeObjectRelease();
  v164 = *((_QWORD *)v91 + 17);
  *(_QWORD *)(v90 + 128) = *((_QWORD *)v91 + 16);
  *(_QWORD *)(v90 + 136) = v164;
  swift_bridgeObjectRelease();
  v165 = *((_QWORD *)v91 + 19);
  *(_QWORD *)(v90 + 144) = *((_QWORD *)v91 + 18);
  *(_QWORD *)(v90 + 152) = v165;
  swift_bridgeObjectRelease();
  v166 = *((_QWORD *)v91 + 21);
  *(_QWORD *)(v90 + 160) = *((_QWORD *)v91 + 20);
  *(_QWORD *)(v90 + 168) = v166;
  swift_bridgeObjectRelease();
LABEL_43:
  v98 = a3[22];
  *(_QWORD *)&a1[a3[21]] = *(_QWORD *)&a2[a3[21]];
  *(_QWORD *)&a1[v98] = *(_QWORD *)&a2[v98];
  v99 = a3[23];
  v100 = (uint64_t)&a1[v99];
  v101 = &a2[v99];
  v102 = (int *)type metadata accessor for EventCalendarModelObject();
  v103 = *((_QWORD *)v102 - 1);
  v104 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v103 + 48);
  v105 = v104(v100, 1, v102);
  v106 = v104((uint64_t)v101, 1, v102);
  if (!v105)
  {
    if (v106)
    {
      sub_1B8AE7BD4(v100, (uint64_t (*)(_QWORD))type metadata accessor for EventCalendarModelObject);
      goto LABEL_49;
    }
    v138 = *((_QWORD *)v101 + 1);
    *(_QWORD *)v100 = *(_QWORD *)v101;
    *(_QWORD *)(v100 + 8) = v138;
    swift_bridgeObjectRelease();
    *(_OWORD *)(v100 + 16) = *((_OWORD *)v101 + 1);
    *(_QWORD *)(v100 + 32) = *((_QWORD *)v101 + 4);
    swift_bridgeObjectRelease();
    v139 = *((_QWORD *)v101 + 6);
    *(_QWORD *)(v100 + 40) = *((_QWORD *)v101 + 5);
    *(_QWORD *)(v100 + 48) = v139;
    swift_bridgeObjectRelease();
    *(_OWORD *)(v100 + 56) = *(_OWORD *)(v101 + 56);
    *(_QWORD *)(v100 + 72) = *((_QWORD *)v101 + 9);
    swift_bridgeObjectRelease();
    *(_BYTE *)(v100 + 80) = v101[80];
    *(_QWORD *)(v100 + 88) = *((_QWORD *)v101 + 11);
    v318 = (void *)v12;
    if (*(_QWORD *)(v100 + 104))
    {
      v140 = *((_QWORD *)v101 + 13);
      if (v140)
      {
        *(_QWORD *)(v100 + 96) = *((_QWORD *)v101 + 12);
        *(_QWORD *)(v100 + 104) = v140;
        swift_bridgeObjectRelease();
        v141 = *((_QWORD *)v101 + 15);
        *(_QWORD *)(v100 + 112) = *((_QWORD *)v101 + 14);
        *(_QWORD *)(v100 + 120) = v141;
        swift_bridgeObjectRelease();
        *(_OWORD *)(v100 + 128) = *((_OWORD *)v101 + 8);
        *(_QWORD *)(v100 + 144) = *((_QWORD *)v101 + 18);
        swift_bridgeObjectRelease();
        *(_BYTE *)(v100 + 152) = v101[152];
        *(_BYTE *)(v100 + 153) = v101[153];
        *(_BYTE *)(v100 + 154) = v101[154];
        *(_BYTE *)(v100 + 155) = v101[155];
        *(_BYTE *)(v100 + 156) = v101[156];
        *(_QWORD *)(v100 + 160) = *((_QWORD *)v101 + 20);
        swift_bridgeObjectRelease();
        v142 = *((_QWORD *)v101 + 22);
        *(_QWORD *)(v100 + 168) = *((_QWORD *)v101 + 21);
        *(_QWORD *)(v100 + 176) = v142;
        *(_BYTE *)(v100 + 184) = v101[184];
        *(_QWORD *)(v100 + 192) = *((_QWORD *)v101 + 24);
        *(_BYTE *)(v100 + 200) = v101[200];
        *(_OWORD *)(v100 + 208) = *((_OWORD *)v101 + 13);
        *(_QWORD *)(v100 + 222) = *(_QWORD *)(v101 + 222);
        goto LABEL_91;
      }
      sub_1B8B13E54(v100 + 96);
    }
    v167 = *((_OWORD *)v101 + 13);
    *(_OWORD *)(v100 + 192) = *((_OWORD *)v101 + 12);
    *(_OWORD *)(v100 + 208) = v167;
    *(_QWORD *)(v100 + 222) = *(_QWORD *)(v101 + 222);
    v168 = *((_OWORD *)v101 + 9);
    *(_OWORD *)(v100 + 128) = *((_OWORD *)v101 + 8);
    *(_OWORD *)(v100 + 144) = v168;
    v169 = *((_OWORD *)v101 + 11);
    *(_OWORD *)(v100 + 160) = *((_OWORD *)v101 + 10);
    *(_OWORD *)(v100 + 176) = v169;
    v170 = *((_OWORD *)v101 + 7);
    *(_OWORD *)(v100 + 96) = *((_OWORD *)v101 + 6);
    *(_OWORD *)(v100 + 112) = v170;
LABEL_91:
    *(_BYTE *)(v100 + 230) = v101[230];
    *(_BYTE *)(v100 + 231) = v101[231];
    *(_BYTE *)(v100 + 232) = v101[232];
    *(_BYTE *)(v100 + 233) = v101[233];
    *(_BYTE *)(v100 + 234) = v101[234];
    *(_BYTE *)(v100 + 235) = v101[235];
    v171 = *((_QWORD *)v101 + 31);
    *(_QWORD *)(v100 + 240) = *((_QWORD *)v101 + 30);
    *(_QWORD *)(v100 + 248) = v171;
    swift_bridgeObjectRelease();
    *(_QWORD *)(v100 + 256) = *((_QWORD *)v101 + 32);
    swift_bridgeObjectRelease();
    v172 = v102[21];
    v173 = (void *)(v100 + v172);
    v174 = &v101[v172];
    v175 = sub_1B8B9B054();
    v306 = *(_QWORD *)(v175 - 8);
    v176 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v306 + 48);
    __dstc = v173;
    LODWORD(v173) = v176(v173, 1, v175);
    v177 = v176(v174, 1, v175);
    if ((_DWORD)v173)
    {
      if (!v177)
      {
        (*(void (**)(void *, char *, uint64_t))(v306 + 32))(__dstc, v174, v175);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v306 + 56))(__dstc, 0, 1, v175);
        goto LABEL_106;
      }
      v178 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED1B3020) - 8) + 64);
      v179 = __dstc;
    }
    else
    {
      if (!v177)
      {
        (*(void (**)(void *, char *, uint64_t))(v306 + 40))(__dstc, v174, v175);
        goto LABEL_106;
      }
      (*(void (**)(void *, uint64_t))(v306 + 8))(__dstc, v175);
      v178 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED1B3020) - 8) + 64);
      v179 = __dstc;
    }
    memcpy(v179, v174, v178);
LABEL_106:
    v12 = (uint64_t)v318;
    v185 = v102[22];
    v186 = (_QWORD *)(v100 + v185);
    v187 = &v101[v185];
    v189 = *(_QWORD *)v187;
    v188 = *((_QWORD *)v187 + 1);
    *v186 = v189;
    v186[1] = v188;
    swift_bridgeObjectRelease();
    v190 = v102[23];
    v191 = (_QWORD *)(v100 + v190);
    v192 = &v101[v190];
    v194 = *(_QWORD *)v192;
    v193 = *((_QWORD *)v192 + 1);
    *v191 = v194;
    v191[1] = v193;
    swift_bridgeObjectRelease();
    *(_BYTE *)(v100 + v102[24]) = v101[v102[24]];
    goto LABEL_107;
  }
  if (v106)
  {
LABEL_49:
    v119 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1BD368);
    memcpy((void *)v100, v101, *(_QWORD *)(*(_QWORD *)(v119 - 8) + 64));
    goto LABEL_107;
  }
  v317 = (void *)v12;
  *(_OWORD *)v100 = *(_OWORD *)v101;
  *(_QWORD *)(v100 + 16) = *((_QWORD *)v101 + 2);
  *(_OWORD *)(v100 + 24) = *(_OWORD *)(v101 + 24);
  *(_OWORD *)(v100 + 40) = *(_OWORD *)(v101 + 40);
  *(_QWORD *)(v100 + 56) = *((_QWORD *)v101 + 7);
  *(_OWORD *)(v100 + 64) = *((_OWORD *)v101 + 4);
  *(_BYTE *)(v100 + 80) = v101[80];
  *(_QWORD *)(v100 + 88) = *((_QWORD *)v101 + 11);
  v107 = *((_OWORD *)v101 + 6);
  v108 = *((_OWORD *)v101 + 7);
  v109 = *((_OWORD *)v101 + 9);
  *(_OWORD *)(v100 + 128) = *((_OWORD *)v101 + 8);
  *(_OWORD *)(v100 + 144) = v109;
  *(_OWORD *)(v100 + 96) = v107;
  *(_OWORD *)(v100 + 112) = v108;
  v110 = *((_OWORD *)v101 + 10);
  v111 = *((_OWORD *)v101 + 11);
  v112 = *((_OWORD *)v101 + 12);
  v113 = *((_OWORD *)v101 + 13);
  *(_QWORD *)(v100 + 222) = *(_QWORD *)(v101 + 222);
  *(_OWORD *)(v100 + 192) = v112;
  *(_OWORD *)(v100 + 208) = v113;
  *(_OWORD *)(v100 + 160) = v110;
  *(_OWORD *)(v100 + 176) = v111;
  *(_DWORD *)(v100 + 230) = *(_DWORD *)(v101 + 230);
  *(_WORD *)(v100 + 234) = *((_WORD *)v101 + 117);
  *(_OWORD *)(v100 + 240) = *((_OWORD *)v101 + 15);
  *(_QWORD *)(v100 + 256) = *((_QWORD *)v101 + 32);
  v114 = v102[21];
  __dstb = (void *)(v100 + v114);
  v115 = &v101[v114];
  v116 = sub_1B8B9B054();
  v117 = *(_QWORD *)(v116 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v117 + 48))(v115, 1, v116))
  {
    v118 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1B3020);
    memcpy(__dstb, v115, *(_QWORD *)(*(_QWORD *)(v118 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v117 + 32))(__dstb, v115, v116);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v117 + 56))(__dstb, 0, 1, v116);
  }
  v12 = (uint64_t)v317;
  *(_OWORD *)(v100 + v102[22]) = *(_OWORD *)&v101[v102[22]];
  *(_OWORD *)(v100 + v102[23]) = *(_OWORD *)&v101[v102[23]];
  *(_BYTE *)(v100 + v102[24]) = v101[v102[24]];
  (*(void (**)(uint64_t, _QWORD, uint64_t, int *))(v103 + 56))(v100, 0, 1, v102);
LABEL_107:
  v195 = a3[25];
  *(_QWORD *)&a1[a3[24]] = *(_QWORD *)&a2[a3[24]];
  *(_QWORD *)&a1[v195] = *(_QWORD *)&a2[v195];
  *(_QWORD *)&a1[a3[26]] = *(_QWORD *)&a2[a3[26]];
  swift_bridgeObjectRelease();
  v196 = a3[27];
  v197 = &a1[v196];
  v198 = (uint64_t *)&a2[v196];
  v200 = *v198;
  v199 = v198[1];
  *(_QWORD *)v197 = v200;
  *((_QWORD *)v197 + 1) = v199;
  swift_bridgeObjectRelease();
  v201 = a3[29];
  *(_QWORD *)&a1[a3[28]] = *(_QWORD *)&a2[a3[28]];
  v202 = &a1[v201];
  v203 = &a2[v201];
  v204 = (uint64_t (*)(char *, uint64_t, uint64_t))v319[6];
  v205 = v204(&a1[v201], 1, v12);
  v206 = v204(v203, 1, v12);
  if (v205)
  {
    if (!v206)
    {
      ((void (*)(char *, char *, uint64_t))v319[4])(v202, v203, v12);
      ((void (*)(char *, _QWORD, uint64_t, uint64_t))v319[7])(v202, 0, 1, v12);
      goto LABEL_113;
    }
    goto LABEL_112;
  }
  if (v206)
  {
    ((void (*)(char *, uint64_t))v319[1])(v202, v12);
LABEL_112:
    v207 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1B2D18);
    memcpy(v202, v203, *(_QWORD *)(*(_QWORD *)(v207 - 8) + 64));
    goto LABEL_113;
  }
  v312(v202, v203, v12);
LABEL_113:
  *(_QWORD *)&a1[a3[30]] = *(_QWORD *)&a2[a3[30]];
  swift_bridgeObjectRelease();
  v208 = a3[31];
  v209 = &a1[v208];
  v210 = &a2[v208];
  v211 = (int *)type metadata accessor for EventOrganizerModelObject(0);
  v212 = *((_QWORD *)v211 - 1);
  v213 = *(uint64_t (**)(_QWORD *, uint64_t, int *))(v212 + 48);
  v214 = v213(v209, 1, v211);
  v215 = v213(v210, 1, v211);
  if (!v214)
  {
    if (v215)
    {
      sub_1B8AE7BD4((uint64_t)v209, type metadata accessor for EventOrganizerModelObject);
      goto LABEL_119;
    }
    v223 = *((_QWORD *)v210 + 1);
    *(_QWORD *)v209 = *(_QWORD *)v210;
    *((_QWORD *)v209 + 1) = v223;
    swift_bridgeObjectRelease();
    v224 = *((_QWORD *)v210 + 3);
    *((_QWORD *)v209 + 2) = *((_QWORD *)v210 + 2);
    *((_QWORD *)v209 + 3) = v224;
    swift_bridgeObjectRelease();
    v225 = *((_QWORD *)v210 + 5);
    *((_QWORD *)v209 + 4) = *((_QWORD *)v210 + 4);
    *((_QWORD *)v209 + 5) = v225;
    swift_bridgeObjectRelease();
    v226 = v211[7];
    v227 = &v209[v226];
    v228 = &v210[v226];
    v229 = sub_1B8B9B054();
    v313 = *(_QWORD *)(v229 - 8);
    v230 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v313 + 48);
    v321 = v227;
    LODWORD(v227) = v230(v227, 1, v229);
    v231 = v230(v228, 1, v229);
    if ((_DWORD)v227)
    {
      if (!v231)
      {
        (*(void (**)(void *, char *, uint64_t))(v313 + 32))(v321, v228, v229);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v313 + 56))(v321, 0, 1, v229);
        goto LABEL_132;
      }
      v232 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED1B3020) - 8) + 64);
      v233 = v321;
    }
    else
    {
      if (!v231)
      {
        (*(void (**)(void *, char *, uint64_t))(v313 + 40))(v321, v228, v229);
        goto LABEL_132;
      }
      (*(void (**)(void *, uint64_t))(v313 + 8))(v321, v229);
      v232 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED1B3020) - 8) + 64);
      v233 = v321;
    }
    memcpy(v233, v228, v232);
LABEL_132:
    v234 = v211[8];
    v235 = &v209[v234];
    v236 = (uint64_t *)&v210[v234];
    v238 = *v236;
    v237 = v236[1];
    *(_QWORD *)v235 = v238;
    *((_QWORD *)v235 + 1) = v237;
    swift_bridgeObjectRelease();
    v209[v211[9]] = v210[v211[9]];
    v239 = v211[10];
    v240 = &v209[v239];
    v241 = (uint64_t *)&v210[v239];
    v243 = *v241;
    v242 = v241[1];
    *(_QWORD *)v240 = v243;
    *((_QWORD *)v240 + 1) = v242;
    swift_bridgeObjectRelease();
    *(_QWORD *)&v209[v211[11]] = *(_QWORD *)&v210[v211[11]];
    goto LABEL_133;
  }
  if (v215)
  {
LABEL_119:
    v222 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1BD380);
    memcpy(v209, v210, *(_QWORD *)(*(_QWORD *)(v222 - 8) + 64));
    goto LABEL_133;
  }
  v216 = *((_OWORD *)v210 + 1);
  *(_OWORD *)v209 = *(_OWORD *)v210;
  *((_OWORD *)v209 + 1) = v216;
  *((_OWORD *)v209 + 2) = *((_OWORD *)v210 + 2);
  v217 = v211[7];
  v320 = &v209[v217];
  v218 = &v210[v217];
  v219 = sub_1B8B9B054();
  v220 = *(_QWORD *)(v219 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v220 + 48))(v218, 1, v219))
  {
    v221 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1B3020);
    memcpy(v320, v218, *(_QWORD *)(*(_QWORD *)(v221 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v220 + 32))(v320, v218, v219);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v220 + 56))(v320, 0, 1, v219);
  }
  *(_OWORD *)&v209[v211[8]] = *(_OWORD *)&v210[v211[8]];
  v209[v211[9]] = v210[v211[9]];
  *(_OWORD *)&v209[v211[10]] = *(_OWORD *)&v210[v211[10]];
  *(_QWORD *)&v209[v211[11]] = *(_QWORD *)&v210[v211[11]];
  (*(void (**)(char *, _QWORD, uint64_t, int *))(v212 + 56))(v209, 0, 1, v211);
LABEL_133:
  *(_QWORD *)&a1[a3[32]] = *(_QWORD *)&a2[a3[32]];
  swift_bridgeObjectRelease();
  *(_QWORD *)&a1[a3[33]] = *(_QWORD *)&a2[a3[33]];
  swift_bridgeObjectRelease();
  v244 = a3[34];
  v245 = &a1[v244];
  v246 = &a2[v244];
  v247 = (int *)type metadata accessor for EventAttendeeModelObject(0);
  v248 = *((_QWORD *)v247 - 1);
  v249 = *(uint64_t (**)(_QWORD *, uint64_t, int *))(v248 + 48);
  v250 = v249(v245, 1, v247);
  v251 = v249(v246, 1, v247);
  if (!v250)
  {
    if (v251)
    {
      sub_1B8AE7BD4((uint64_t)v245, type metadata accessor for EventAttendeeModelObject);
      goto LABEL_139;
    }
    v259 = *((_QWORD *)v246 + 1);
    *(_QWORD *)v245 = *(_QWORD *)v246;
    *((_QWORD *)v245 + 1) = v259;
    swift_bridgeObjectRelease();
    v260 = *((_QWORD *)v246 + 3);
    *((_QWORD *)v245 + 2) = *((_QWORD *)v246 + 2);
    *((_QWORD *)v245 + 3) = v260;
    swift_bridgeObjectRelease();
    v261 = *((_QWORD *)v246 + 5);
    *((_QWORD *)v245 + 4) = *((_QWORD *)v246 + 4);
    *((_QWORD *)v245 + 5) = v261;
    swift_bridgeObjectRelease();
    v262 = v247[7];
    v263 = &v245[v262];
    v264 = &v246[v262];
    v265 = sub_1B8B9B054();
    v314 = *(_QWORD *)(v265 - 8);
    v266 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v314 + 48);
    v323 = v263;
    LODWORD(v263) = v266(v263, 1, v265);
    v267 = v266(v264, 1, v265);
    if ((_DWORD)v263)
    {
      if (!v267)
      {
        (*(void (**)(void *, char *, uint64_t))(v314 + 32))(v323, v264, v265);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v314 + 56))(v323, 0, 1, v265);
        goto LABEL_150;
      }
      v268 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED1B3020) - 8) + 64);
      v269 = v323;
    }
    else
    {
      if (!v267)
      {
        (*(void (**)(void *, char *, uint64_t))(v314 + 40))(v323, v264, v265);
        goto LABEL_150;
      }
      (*(void (**)(void *, uint64_t))(v314 + 8))(v323, v265);
      v268 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED1B3020) - 8) + 64);
      v269 = v323;
    }
    memcpy(v269, v264, v268);
LABEL_150:
    v270 = v247[8];
    v271 = &v245[v270];
    v272 = (uint64_t *)&v246[v270];
    v274 = *v272;
    v273 = v272[1];
    *(_QWORD *)v271 = v274;
    *((_QWORD *)v271 + 1) = v273;
    swift_bridgeObjectRelease();
    v245[v247[9]] = v246[v247[9]];
    v275 = v247[10];
    v276 = &v245[v275];
    v277 = (uint64_t *)&v246[v275];
    v279 = *v277;
    v278 = v277[1];
    *(_QWORD *)v276 = v279;
    *((_QWORD *)v276 + 1) = v278;
    swift_bridgeObjectRelease();
    *(_QWORD *)&v245[v247[11]] = *(_QWORD *)&v246[v247[11]];
    *(_QWORD *)&v245[v247[12]] = *(_QWORD *)&v246[v247[12]];
    *(_QWORD *)&v245[v247[13]] = *(_QWORD *)&v246[v247[13]];
    v280 = v247[14];
    v281 = &v245[v280];
    v282 = (uint64_t *)&v246[v280];
    v284 = *v282;
    v283 = v282[1];
    *(_QWORD *)v281 = v284;
    *((_QWORD *)v281 + 1) = v283;
    swift_bridgeObjectRelease();
    goto LABEL_151;
  }
  if (v251)
  {
LABEL_139:
    v258 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1BD378);
    memcpy(v245, v246, *(_QWORD *)(*(_QWORD *)(v258 - 8) + 64));
    goto LABEL_151;
  }
  v252 = *((_OWORD *)v246 + 1);
  *(_OWORD *)v245 = *(_OWORD *)v246;
  *((_OWORD *)v245 + 1) = v252;
  *((_OWORD *)v245 + 2) = *((_OWORD *)v246 + 2);
  v253 = v247[7];
  v322 = &v245[v253];
  v254 = &v246[v253];
  v255 = sub_1B8B9B054();
  v256 = *(_QWORD *)(v255 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v256 + 48))(v254, 1, v255))
  {
    v257 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1B3020);
    memcpy(v322, v254, *(_QWORD *)(*(_QWORD *)(v257 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v256 + 32))(v322, v254, v255);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v256 + 56))(v322, 0, 1, v255);
  }
  *(_OWORD *)&v245[v247[8]] = *(_OWORD *)&v246[v247[8]];
  v245[v247[9]] = v246[v247[9]];
  *(_OWORD *)&v245[v247[10]] = *(_OWORD *)&v246[v247[10]];
  *(_QWORD *)&v245[v247[11]] = *(_QWORD *)&v246[v247[11]];
  *(_QWORD *)&v245[v247[12]] = *(_QWORD *)&v246[v247[12]];
  *(_QWORD *)&v245[v247[13]] = *(_QWORD *)&v246[v247[13]];
  *(_OWORD *)&v245[v247[14]] = *(_OWORD *)&v246[v247[14]];
  (*(void (**)(char *, _QWORD, uint64_t, int *))(v248 + 56))(v245, 0, 1, v247);
LABEL_151:
  v285 = a3[35];
  v286 = &a1[v285];
  v287 = (uint64_t *)&a2[v285];
  v289 = *v287;
  v288 = v287[1];
  *(_QWORD *)v286 = v289;
  *((_QWORD *)v286 + 1) = v288;
  swift_bridgeObjectRelease();
  v290 = a3[37];
  a1[a3[36]] = a2[a3[36]];
  a1[v290] = a2[v290];
  v291 = a3[38];
  v292 = &a1[v291];
  v293 = (uint64_t *)&a2[v291];
  v295 = *v293;
  v294 = v293[1];
  *(_QWORD *)v292 = v295;
  *((_QWORD *)v292 + 1) = v294;
  swift_bridgeObjectRelease();
  v296 = a3[39];
  v297 = (uint64_t)&a1[v296];
  v298 = &a2[v296];
  if (*(_QWORD *)&a1[v296 + 8] != 1)
  {
    v299 = *((_QWORD *)v298 + 1);
    if (v299 != 1)
    {
      *(_BYTE *)v297 = *v298;
      *(_QWORD *)(v297 + 8) = v299;
      swift_release();
      v301 = *((_QWORD *)v298 + 3);
      *(_QWORD *)(v297 + 16) = *((_QWORD *)v298 + 2);
      *(_QWORD *)(v297 + 24) = v301;
      swift_bridgeObjectRelease();
      goto LABEL_156;
    }
    sub_1B8B80EE4(v297);
  }
  v300 = *((_OWORD *)v298 + 1);
  *(_OWORD *)v297 = *(_OWORD *)v298;
  *(_OWORD *)(v297 + 16) = v300;
LABEL_156:
  v302 = a3[41];
  a1[a3[40]] = a2[a3[40]];
  a1[v302] = a2[v302];
  a1[a3[42]] = a2[a3[42]];
  return a1;
}

uint64_t getEnumTagSinglePayload for EventModelObject()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1B8B83128(uint64_t a1, uint64_t a2, int *a3)
{
  unint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_1B8B9B0F0();
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = a3[7];
    }
    else
    {
      v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1B8F70);
      v9 = *(_QWORD *)(v12 - 8);
      if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
      {
        v10 = v12;
        v11 = a3[11];
      }
      else
      {
        v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1BD370);
        v9 = *(_QWORD *)(v13 - 8);
        if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
        {
          v10 = v13;
          v11 = a3[14];
        }
        else
        {
          v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1BD368);
          v9 = *(_QWORD *)(v14 - 8);
          if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
          {
            v10 = v14;
            v11 = a3[23];
          }
          else
          {
            v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1B2D18);
            v9 = *(_QWORD *)(v15 - 8);
            if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
            {
              v10 = v15;
              v11 = a3[29];
            }
            else
            {
              v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1BD380);
              v9 = *(_QWORD *)(v16 - 8);
              if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
              {
                v10 = v16;
                v11 = a3[31];
              }
              else
              {
                v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1BD378);
                v9 = *(_QWORD *)(v10 - 8);
                v11 = a3[34];
              }
            }
          }
        }
      }
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a1 + v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for EventModelObject()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1B8B832A0(uint64_t result, uint64_t a2, int a3, int *a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v8 = sub_1B8B9B0F0();
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = a4[7];
    }
    else
    {
      v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1B8F70);
      v9 = *(_QWORD *)(v12 - 8);
      if (*(_DWORD *)(v9 + 84) == a3)
      {
        v10 = v12;
        v11 = a4[11];
      }
      else
      {
        v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1BD370);
        v9 = *(_QWORD *)(v13 - 8);
        if (*(_DWORD *)(v9 + 84) == a3)
        {
          v10 = v13;
          v11 = a4[14];
        }
        else
        {
          v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1BD368);
          v9 = *(_QWORD *)(v14 - 8);
          if (*(_DWORD *)(v9 + 84) == a3)
          {
            v10 = v14;
            v11 = a4[23];
          }
          else
          {
            v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1B2D18);
            v9 = *(_QWORD *)(v15 - 8);
            if (*(_DWORD *)(v9 + 84) == a3)
            {
              v10 = v15;
              v11 = a4[29];
            }
            else
            {
              v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1BD380);
              v9 = *(_QWORD *)(v16 - 8);
              if (*(_DWORD *)(v9 + 84) == a3)
              {
                v10 = v16;
                v11 = a4[31];
              }
              else
              {
                v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1BD378);
                v9 = *(_QWORD *)(v10 - 8);
                v11 = a4[34];
              }
            }
          }
        }
      }
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5 + v11, a2, a2, v10);
  }
  return result;
}

void sub_1B8B83408()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;

  sub_1B8B9B0F0();
  if (v0 <= 0x3F)
  {
    sub_1B8B5A39C(319, &qword_1EF1B94E8, (void (*)(uint64_t))MEMORY[0x1E0CB1470]);
    if (v1 <= 0x3F)
    {
      sub_1B8B5A39C(319, &qword_1EF1B9560, (void (*)(uint64_t))type metadata accessor for EventVirtualConferenceModelObject);
      if (v2 <= 0x3F)
      {
        sub_1B8B5A39C(319, &qword_1EF1BE4E8, (void (*)(uint64_t))type metadata accessor for EventCalendarModelObject);
        if (v3 <= 0x3F)
        {
          sub_1B8B5A39C(319, (unint64_t *)&qword_1ED1B2D20, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
          if (v4 <= 0x3F)
          {
            sub_1B8B5A39C(319, &qword_1EF1BE4F0, (void (*)(uint64_t))type metadata accessor for EventOrganizerModelObject);
            if (v5 <= 0x3F)
            {
              sub_1B8B5A39C(319, &qword_1EF1B9510, (void (*)(uint64_t))type metadata accessor for EventAttendeeModelObject);
              if (v6 <= 0x3F)
                swift_initStructMetadata();
            }
          }
        }
      }
    }
  }
}

uint64_t getEnumTagSinglePayload for EventModelObject.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xDA)
    goto LABEL_17;
  if (a2 + 38 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 38) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 38;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 38;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 38;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0x27;
  v8 = v6 - 39;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for EventModelObject.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 38 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 38) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xDA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xD9)
    return ((uint64_t (*)(void))((char *)&loc_1B8B836DC + 4 * byte_1B8BADF5C[v4]))();
  *a1 = a2 + 38;
  return ((uint64_t (*)(void))((char *)sub_1B8B83710 + 4 * byte_1B8BADF57[v4]))();
}

uint64_t sub_1B8B83710(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B8B83718(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1B8B83720);
  return result;
}

uint64_t sub_1B8B8372C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1B8B83734);
  *(_BYTE *)result = a2 + 38;
  return result;
}

uint64_t sub_1B8B83738(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B8B83740(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for EventModelObject.CodingKeys()
{
  return &type metadata for EventModelObject.CodingKeys;
}

unint64_t sub_1B8B83760()
{
  unint64_t result;

  result = qword_1EF1BE4F8;
  if (!qword_1EF1BE4F8)
  {
    result = MEMORY[0x1BCCB79D0](&unk_1B8BAE454, &type metadata for EventModelObject.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF1BE4F8);
  }
  return result;
}

unint64_t sub_1B8B837A8()
{
  unint64_t result;

  result = qword_1EF1BE500;
  if (!qword_1EF1BE500)
  {
    result = MEMORY[0x1BCCB79D0](&unk_1B8BAE3C4, &type metadata for EventModelObject.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF1BE500);
  }
  return result;
}

unint64_t sub_1B8B837F0()
{
  unint64_t result;

  result = qword_1EF1BE508;
  if (!qword_1EF1BE508)
  {
    result = MEMORY[0x1BCCB79D0](&unk_1B8BAE3EC, &type metadata for EventModelObject.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF1BE508);
  }
  return result;
}

uint64_t sub_1B8B83834(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_1B8B9C8D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x4449657571696E75 && a2 == 0xE800000000000000 || (sub_1B8B9C8D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x656C746974 && a2 == 0xE500000000000000 || (sub_1B8B9C8D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x7461447472617473 && a2 == 0xE900000000000065 || (sub_1B8B9C8D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x65746144646E65 && a2 == 0xE700000000000000 || (sub_1B8B9C8D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x7961446C6C417369 && a2 == 0xE800000000000000 || (sub_1B8B9C8D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x736F706F72507369 && a2 == 0xEE00656D69546465 || (sub_1B8B9C8D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x6D69547472617473 && a2 == 0xED0000656E6F5A65 || (sub_1B8B9C8D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x5A656D6954646E65 && a2 == 0xEB00000000656E6FLL || (sub_1B8B9C8D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x6974616F6C467369 && a2 == 0xEA0000000000676ELL || (sub_1B8B9C8D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001B8BB85B0 || (sub_1B8B9C8D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0x6E6F697461636F6CLL && a2 == 0xE800000000000000 || (sub_1B8B9C8D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0xD000000000000019 && a2 == 0x80000001B8BB8B30 || (sub_1B8B9C8D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x80000001B8BB8B50 || (sub_1B8B9C8D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 13;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000001B8BB8B70 || (sub_1B8B9C8D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 14;
  }
  else if (a1 == 0xD000000000000023 && a2 == 0x80000001B8BB8B90 || (sub_1B8B9C8D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 15;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001B8BB8BC0 || (sub_1B8B9C8D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 16;
  }
  else if (a1 == 0x69546C6576617274 && a2 == 0xEA0000000000656DLL || (sub_1B8B9C8D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 17;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001B8BB8BE0 || (sub_1B8B9C8D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 18;
  }
  else if (a1 == 0x7261646E656C6163 && a2 == 0xE800000000000000 || (sub_1B8B9C8D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 19;
  }
  else if (a1 == 0x4C79636176697270 && a2 == 0xEC0000006C657665 || (sub_1B8B9C8D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 20;
  }
  else if (a1 == 0x737574617473 && a2 == 0xE600000000000000 || (sub_1B8B9C8D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 21;
  }
  else if (a1 == 0x736D72616C61 && a2 == 0xE600000000000000 || (sub_1B8B9C8D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 22;
  }
  else if (a1 == 0x7365746F6ELL && a2 == 0xE500000000000000 || (sub_1B8B9C8D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 23;
  }
  else if (a1 == 0x6962616C69617661 && a2 == 0xEC0000007974696CLL || (sub_1B8B9C8D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 24;
  }
  else if (a1 == 0x6E65727275636572 && a2 == 0xEE00657461446563 || (sub_1B8B9C8D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 25;
  }
  else if (a1 == 0x6E65727275636572 && a2 == 0xEF73656C75526563 || (sub_1B8B9C8D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 26;
  }
  else if (a1 == 0x657A696E6167726FLL && a2 == 0xE900000000000072 || (sub_1B8B9C8D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 27;
  }
  else if (a1 == 0x6565646E65747461 && a2 == 0xE900000000000073 || (sub_1B8B9C8D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 28;
  }
  else if (a1 == 0xD000000000000034 && a2 == 0x80000001B8BB8C00 || (sub_1B8B9C8D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 29;
  }
  else if (a1 == 0x65747441666C6573 && a2 == 0xEC0000006565646ELL || (sub_1B8B9C8D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 30;
  }
  else if (a1 == 0x6E697274536C7275 && a2 == 0xE900000000000067 || (sub_1B8B9C8D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 31;
  }
  else if (a1 == 0x6361747441736168 && a2 == 0xED0000746E656D68 || (sub_1B8B9C8D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 32;
  }
  else if (a1 == 0xD00000000000001DLL && a2 == 0x80000001B8BB85F0 || (sub_1B8B9C8D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 33;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x80000001B8BB8610 || (sub_1B8B9C8D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 34;
  }
  else if (a1 == 0x7461726765746E69 && a2 == 0xEB000000006E6F69 || (sub_1B8B9C8D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 35;
  }
  else if (a1 == 0x6261746964457369 && a2 == 0xEA0000000000656CLL || (sub_1B8B9C8D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 36;
  }
  else if (a1 == 0x77654E7369 && a2 == 0xE500000000000000 || (sub_1B8B9C8D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 37;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001B8BB8C40)
  {
    swift_bridgeObjectRelease();
    return 38;
  }
  else
  {
    v6 = sub_1B8B9C8D8();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 38;
    else
      return 39;
  }
}

uint64_t sub_1B8B84808(uint64_t a1)
{
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;

  v2 = *(_QWORD *)(a1 + 184);
  v13 = *(_QWORD *)(a1 + 176);
  v3 = *(void **)(a1 + 192);
  v4 = *(_QWORD *)(a1 + 200);
  v5 = *(_QWORD *)(a1 + 208);
  v6 = *(_QWORD *)(a1 + 216);
  v7 = *(_QWORD *)(a1 + 224);
  v8 = *(_QWORD *)(a1 + 232);
  v11 = *(_OWORD *)(a1 + 256);
  v12 = *(_OWORD *)(a1 + 240);
  v10 = *(_OWORD *)(a1 + 272);
  sub_1B8B3A5A0(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(void **)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104));
  sub_1B8B3A5A0(v13, v2, v3, v4, v5, v6, v7, v8, v12, *((unint64_t *)&v12 + 1), v11, *((uint64_t *)&v11 + 1), v10, *((uint64_t *)&v10 + 1));
  return a1;
}

CalendarUIKit::EKEventModelWrapper_optional __swiftcall EKEventModelWrapper.init(_:)(CalendarUIKit::EKEventModelWrapper_optional result)
{
  Class *v1;
  Class isa;
  Class *v3;
  objc_class *v4;
  objc_class *v5;
  objc_class *v6;

  isa = result.value.ekEvent.super.super.super.isa;
  v3 = v1;
  if (result.value.ekEvent.super.super.super.isa)
  {
    v4 = result.value.ekEvent.super.super.super.isa;
    v5 = (objc_class *)-[objc_class uniqueID](v4, sel_uniqueID);

    if (v5)
      v6 = v5;
    else
      v6 = v4;
    if (!v5)
      isa = 0;

  }
  *v3 = isa;
  return result;
}

id EKEventModelWrapper.ekEvent.getter()
{
  id *v0;

  return *v0;
}

void EKEventModelWrapper.ekEvent.setter(void *a1)
{
  id *v1;

  *v1 = a1;
}

uint64_t (*EKEventModelWrapper.ekEvent.modify())()
{
  return nullsub_1;
}

void EKEventModelWrapper.id.getter()
{
  id *v0;
  id v1;
  id v2;
  void *v3;
  id v4;
  id v5;
  id v6;
  void *v7;

  v1 = *v0;
  v2 = objc_msgSend(*v0, sel_recurrenceIdentifier);
  if (v2)
  {
    v3 = v2;
    v4 = objc_msgSend(v2, sel_identifierString);
    if (v4)
    {
      v5 = v4;
      sub_1B8B9C17C();

LABEL_7:
      return;
    }
    __break(1u);
    goto LABEL_9;
  }
  v6 = objc_msgSend(v1, sel_objectID);
  if (!v6)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  v7 = v6;
  v5 = objc_msgSend(v6, sel_stringRepresentation);

  if (v5)
  {
    sub_1B8B9C17C();
    goto LABEL_7;
  }
LABEL_10:
  __break(1u);
}

id EKEventModelWrapper.uniqueID.getter()
{
  return sub_1B8B84AB4((SEL *)&selRef_uniqueID);
}

id EKEventModelWrapper.title.getter()
{
  return sub_1B8B84AB4((SEL *)&selRef_title);
}

id sub_1B8B84AB4(SEL *a1)
{
  id *v1;
  id result;
  void *v3;
  uint64_t v4;

  result = objc_msgSend(*v1, *a1);
  if (result)
  {
    v3 = result;
    v4 = sub_1B8B9C17C();

    return (id)v4;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t EKEventModelWrapper.startDate.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1B8B84B28((SEL *)&selRef_startDate, a1);
}

uint64_t EKEventModelWrapper.endDate.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1B8B84B28((SEL *)&selRef_endDate, a1);
}

uint64_t sub_1B8B84B28@<X0>(SEL *a1@<X0>, uint64_t a2@<X8>)
{
  id *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  id v12;
  void *v13;
  void (*v14)(char *, char *, uint64_t);
  uint64_t result;
  uint64_t v16;

  v5 = sub_1B8B9B0F0();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1B2D18);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = objc_msgSend(*v2, *a1);
  if (v12)
  {
    v13 = v12;
    sub_1B8B9B0D8();

    v14 = *(void (**)(char *, char *, uint64_t))(v6 + 32);
    v14(v11, v8, v5);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v6 + 56))(v11, 0, 1, v5);
    result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 48))(v11, 1, v5);
    if ((_DWORD)result != 1)
      return ((uint64_t (*)(uint64_t, char *, uint64_t))v14)(a2, v11, v5);
  }
  else
  {
    result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v11, 1, 1, v5);
  }
  __break(1u);
  return result;
}

id EKEventModelWrapper.duration.getter()
{
  id *v0;

  return objc_msgSend(*v0, sel_duration);
}

id EKEventModelWrapper.isAllDay.getter()
{
  id *v0;

  return objc_msgSend(*v0, sel_isAllDay);
}

id EKEventModelWrapper.isProposedTime.getter()
{
  id *v0;

  return objc_msgSend(*v0, sel_isProposedTimeEvent);
}

uint64_t EKEventModelWrapper.startTimeZone.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1B8B85848((SEL *)&selRef_startTimeZone, (void (*)(void))MEMORY[0x1E0CB1458], MEMORY[0x1E0CB1470], a1);
}

uint64_t EKEventModelWrapper.endTimeZone.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1B8B85848((SEL *)&selRef_endTimeZone, (void (*)(void))MEMORY[0x1E0CB1458], MEMORY[0x1E0CB1470], a1);
}

id EKEventModelWrapper.isFloating.getter()
{
  id *v0;

  return objc_msgSend(*v0, sel_isFloating);
}

id EKEventModelWrapper.virtualConference.getter@<X0>(_QWORD *a1@<X8>)
{
  id *v1;
  id result;

  result = objc_msgSend(*v1, sel_virtualConference);
  *a1 = result;
  return result;
}

uint64_t EKEventModelWrapper.location.getter()
{
  return sub_1B8AED0FC((SEL *)&selRef_location);
}

uint64_t EKEventModelWrapper.locationWithoutPrediction.getter()
{
  return sub_1B8AED0FC((SEL *)&selRef_locationWithoutPrediction);
}

uint64_t EKEventModelWrapper.locationsWithoutPrediction.getter()
{
  id *v0;
  id v1;
  void *v2;
  uint64_t v3;

  v1 = objc_msgSend(*v0, sel_locationsWithoutPrediction);
  if (!v1)
    return 0;
  v2 = v1;
  v3 = sub_1B8B9C2F0();

  return v3;
}

id EKEventModelWrapper.structuredLocation.getter@<X0>(_QWORD *a1@<X8>)
{
  id *v1;
  id result;

  result = objc_msgSend(*v1, sel_structuredLocation);
  *a1 = result;
  return result;
}

id EKEventModelWrapper.structuredLocationWithoutPrediction.getter@<X0>(_QWORD *a1@<X8>)
{
  id *v1;
  id result;

  result = objc_msgSend(*v1, sel_structuredLocationWithoutPrediction);
  *a1 = result;
  return result;
}

id EKEventModelWrapper.preferredLocation.getter@<X0>(_QWORD *a1@<X8>)
{
  id *v1;
  id result;

  result = objc_msgSend(*v1, sel_preferredLocation);
  *a1 = result;
  return result;
}

id EKEventModelWrapper.travelTime.getter()
{
  id *v0;

  return objc_msgSend(*v0, sel_travelTime);
}

id EKEventModelWrapper.travelRoutingMode.getter()
{
  id *v0;

  return objc_msgSend(*v0, sel_travelRoutingMode);
}

id EKEventModelWrapper.calendar.getter@<X0>(_QWORD *a1@<X8>)
{
  id *v1;
  id result;

  result = objc_msgSend(*v1, sel_calendar);
  if (result)
    *a1 = result;
  else
    __break(1u);
  return result;
}

id EKEventModelWrapper.privacyLevel.getter()
{
  id *v0;

  return objc_msgSend(*v0, sel_privacyLevel);
}

id EKEventModelWrapper.status.getter()
{
  id *v0;

  return objc_msgSend(*v0, sel_status);
}

uint64_t EKEventModelWrapper.alarms.getter()
{
  return sub_1B8B84F68((SEL *)&selRef_alarms, &qword_1EF1B94D0, 0x1E0CA9FB8, (uint64_t (*)(BOOL, uint64_t, uint64_t))sub_1B8B37588);
}

uint64_t EKEventModelWrapper.notes.getter()
{
  return sub_1B8AED0FC((SEL *)&selRef_displayNotes);
}

id EKEventModelWrapper.availability.getter()
{
  id *v0;

  return objc_msgSend(*v0, sel_availability);
}

uint64_t EKEventModelWrapper.recurrenceDate.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1B8B85848((SEL *)&selRef_recurrenceDate, (void (*)(void))MEMORY[0x1E0CB07E8], MEMORY[0x1E0CB0870], a1);
}

uint64_t EKEventModelWrapper.recurrenceRules.getter()
{
  return sub_1B8B84F68((SEL *)&selRef_recurrenceRules, (unint64_t *)&unk_1EF1B94C0, 0x1E0CAA120, (uint64_t (*)(BOOL, uint64_t, uint64_t))sub_1B8B375B4);
}

uint64_t sub_1B8B84F68(SEL *a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(BOOL, uint64_t, uint64_t))
{
  id *v4;
  id v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  id v12;
  id v13;
  unint64_t v14;
  unint64_t v15;
  _QWORD *v16;

  v7 = objc_msgSend(*v4, *a1);
  if (!v7)
    return (uint64_t)v7;
  sub_1B8B05B9C(0, a2);
  v8 = sub_1B8B9C2F0();

  if (!(v8 >> 62))
  {
    v9 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v9)
      goto LABEL_4;
    goto LABEL_14;
  }
  swift_bridgeObjectRetain();
  v9 = sub_1B8B9C728();
  swift_bridgeObjectRelease();
  if (!v9)
  {
LABEL_14:
    swift_bridgeObjectRelease();
    return MEMORY[0x1E0DEE9D8];
  }
LABEL_4:
  v16 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  result = a4(0, v9 & ~(v9 >> 63), 0);
  if ((v9 & 0x8000000000000000) == 0)
  {
    v11 = 0;
    v7 = v16;
    do
    {
      if ((v8 & 0xC000000000000001) != 0)
        v12 = (id)MEMORY[0x1BCCB6800](v11, v8);
      else
        v12 = *(id *)(v8 + 8 * v11 + 32);
      v13 = v12;
      v15 = v16[2];
      v14 = v16[3];
      if (v15 >= v14 >> 1)
        a4(v14 > 1, v15 + 1, 1);
      ++v11;
      v16[2] = v15 + 1;
      v16[v15 + 4] = v13;
    }
    while (v9 != v11);
    swift_bridgeObjectRelease();
    return (uint64_t)v7;
  }
  __break(1u);
  return result;
}

id EKEventModelWrapper.singleRecurrenceRule.getter@<X0>(_QWORD *a1@<X8>)
{
  id *v1;
  id result;

  result = objc_msgSend(*v1, sel_singleRecurrenceRule);
  *a1 = result;
  return result;
}

void EKEventModelWrapper.organizer.getter(uint64_t a1@<X8>)
{
  id *v1;
  id v3;
  uint64_t v4;
  void *v5;
  id v6;
  id v7;
  id v8;

  v3 = objc_msgSend(*v1, sel_organizer);
  if (v3)
  {
    v8 = v3;
    objc_opt_self();
    v4 = swift_dynamicCastObjCClass();
    v5 = (void *)v4;
    if (v4)
    {
      *(_QWORD *)a1 = v4;
      *(_QWORD *)(a1 + 32) = &type metadata for EKParticipantModelWrapper;
      *(_QWORD *)(a1 + 40) = sub_1B8B4EACC();
      *(_QWORD *)(a1 + 8) = v5;
      v6 = v8;
    }
    else
    {
      *(_OWORD *)(a1 + 16) = 0u;
      *(_OWORD *)(a1 + 32) = 0u;
      *(_OWORD *)a1 = 0u;
    }
    v7 = v5;

  }
  else
  {
    *(_OWORD *)(a1 + 16) = 0u;
    *(_OWORD *)(a1 + 32) = 0u;
    *(_OWORD *)a1 = 0u;
  }
}

uint64_t EKEventModelWrapper.attendees.getter()
{
  id *v0;
  id v1;
  void *v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  _QWORD *v7;
  id v8;
  void *v9;
  void *v10;
  unint64_t v11;
  id v12;
  id v13;
  unint64_t v14;
  unint64_t v15;
  _OWORD *v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;

  v1 = objc_msgSend(*v0, sel_attendees);
  if (!v1)
    return 0;
  v2 = v1;
  sub_1B8B05B9C(0, (unint64_t *)&qword_1EF1B9580);
  v3 = sub_1B8B9C2F0();

  if (!(v3 >> 62))
  {
    v4 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
    if (v4)
      goto LABEL_4;
LABEL_22:
    v7 = (_QWORD *)MEMORY[0x1E0DEE9D8];
LABEL_23:
    swift_bridgeObjectRelease_n();
    return (uint64_t)v7;
  }
  swift_bridgeObjectRetain();
  result = sub_1B8B9C728();
  v4 = result;
  if (!result)
    goto LABEL_22;
LABEL_4:
  if (v4 >= 1)
  {
    v6 = 0;
    v7 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    do
    {
      if ((v3 & 0xC000000000000001) != 0)
        v8 = (id)MEMORY[0x1BCCB6800](v6, v3);
      else
        v8 = *(id *)(v3 + 8 * v6 + 32);
      v9 = v8;
      objc_opt_self();
      v10 = (void *)swift_dynamicCastObjCClass();
      if (v10)
      {
        v11 = sub_1B8B4EACC();
        *(_QWORD *)&v20 = v10;
        *((_QWORD *)&v20 + 1) = v10;
        *(_QWORD *)&v22 = &type metadata for EKParticipantModelWrapper;
        *((_QWORD *)&v22 + 1) = v11;
        v12 = v9;
      }
      else
      {
        v21 = 0u;
        v22 = 0u;
        v20 = 0u;
      }
      v13 = v10;

      if ((_QWORD)v20)
      {
        v17 = v20;
        v18 = v21;
        v19 = v22;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v7 = sub_1B8B862FC(0, v7[2] + 1, 1, v7);
        v15 = v7[2];
        v14 = v7[3];
        if (v15 >= v14 >> 1)
          v7 = sub_1B8B862FC((_QWORD *)(v14 > 1), v15 + 1, 1, v7);
        v7[2] = v15 + 1;
        v16 = &v7[6 * v15];
        v16[3] = v18;
        v16[4] = v19;
        v16[2] = v17;
      }
      else
      {
        sub_1B8ADE894((uint64_t)&v20, &qword_1EF1BE560);
      }
      ++v6;
    }
    while (v4 != v6);
    goto LABEL_23;
  }
  __break(1u);
  return result;
}

uint64_t EKEventModelWrapper.attendeesNotIncludingOrganizerOrLocationsOrResources.getter()
{
  id *v0;
  id v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  id v6;
  void *v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  id v11;
  _QWORD *v12;
  __int128 v13;
  _QWORD *v14;

  v1 = objc_msgSend(*v0, sel_attendeesNotIncludingOrganizerOrLocationsOrResources);
  if (!v1)
    return (uint64_t)v1;
  sub_1B8B05B9C(0, &qword_1EF1BE9E0);
  v2 = sub_1B8B9C2F0();

  if (!(v2 >> 62))
  {
    v3 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v3)
      goto LABEL_4;
    goto LABEL_14;
  }
  swift_bridgeObjectRetain();
  v3 = sub_1B8B9C728();
  swift_bridgeObjectRelease();
  if (!v3)
  {
LABEL_14:
    swift_bridgeObjectRelease();
    return MEMORY[0x1E0DEE9D8];
  }
LABEL_4:
  v14 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  result = sub_1B8B375E0(0, v3 & ~(v3 >> 63), 0);
  if ((v3 & 0x8000000000000000) == 0)
  {
    v5 = 0;
    v1 = v14;
    do
    {
      if ((v2 & 0xC000000000000001) != 0)
        v6 = (id)MEMORY[0x1BCCB6800](v5, v2);
      else
        v6 = *(id *)(v2 + 8 * v5 + 32);
      v7 = v6;
      v8 = sub_1B8B4EACC();
      v9 = v14[2];
      v10 = v14[3];
      v11 = v7;
      if (v9 >= v10 >> 1)
        sub_1B8B375E0(v10 > 1, v9 + 1, 1);
      ++v5;
      v14[2] = v9 + 1;
      v12 = &v14[6 * v9];
      v12[4] = v11;
      v12[5] = v11;
      *((_OWORD *)v12 + 3) = v13;
      v12[8] = &type metadata for EKParticipantModelWrapper;
      v12[9] = v8;
    }
    while (v3 != v5);
    swift_bridgeObjectRelease();
    return (uint64_t)v1;
  }
  __break(1u);
  return result;
}

id EKEventModelWrapper.selfAttendee.getter@<X0>(uint64_t a1@<X8>)
{
  id *v1;
  id v3;
  id v5;

  v3 = objc_msgSend(*v1, sel_selfAttendee);
  if (v3)
  {
    *(_QWORD *)a1 = v3;
    *(_QWORD *)(a1 + 32) = &type metadata for EKParticipantModelWrapper;
    v5 = v3;
    *(_QWORD *)(a1 + 40) = sub_1B8B4EACC();
    v3 = v5;
    *(_QWORD *)(a1 + 8) = v5;
  }
  else
  {
    *(_OWORD *)(a1 + 16) = 0u;
    *(_OWORD *)(a1 + 32) = 0u;
    *(_OWORD *)a1 = 0u;
  }
  return v3;
}

uint64_t EKEventModelWrapper.urlString.getter()
{
  id *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  id v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;

  v1 = sub_1B8B9B054();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1B3020);
  v6 = MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v16 - v9;
  v11 = objc_msgSend(*v0, "URL");
  if (v11)
  {
    v12 = v11;
    sub_1B8B9B030();

    v13 = 0;
  }
  else
  {
    v13 = 1;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v2 + 56))(v8, v13, 1, v1);
  sub_1B8B86760((uint64_t)v8, (uint64_t)v10);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48))(v10, 1, v1))
  {
    sub_1B8ADE894((uint64_t)v10, &qword_1ED1B3020);
    return 0;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v2 + 16))(v4, v10, v1);
    sub_1B8ADE894((uint64_t)v10, &qword_1ED1B3020);
    v14 = sub_1B8B9B018();
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  }
  return v14;
}

id EKEventModelWrapper.hasAttachment.getter()
{
  id *v0;

  return objc_msgSend(*v0, sel_hasAttachment);
}

id EKEventModelWrapper.conferenceURLForDisplayCached.getter()
{
  id *v0;

  return objc_msgSend(*v0, sel_conferenceURLForDisplayCached);
}

uint64_t EKEventModelWrapper.conferenceURLForDisplay.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1B8B85848((SEL *)&selRef_conferenceURLForDisplay, (void (*)(void))MEMORY[0x1E0CAFF00], MEMORY[0x1E0CAFFF8], a1);
}

uint64_t sub_1B8B85848@<X0>(SEL *a1@<X0>, void (*a2)(void)@<X1>, uint64_t (*a3)(void)@<X2>, uint64_t a4@<X8>)
{
  id *v4;
  id v8;
  void *v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;

  v8 = objc_msgSend(*v4, *a1);
  if (v8)
  {
    v9 = v8;
    a2();

    v10 = ((uint64_t (*)(_QWORD))a3)(0);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
    v12 = a4;
    v13 = 0;
  }
  else
  {
    v10 = a3();
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
    v12 = a4;
    v13 = 1;
  }
  return v11(v12, v13, 1, v10);
}

void EKEventModelWrapper.integration.getter(_QWORD *a1@<X8>)
{
  id *v1;
  id v3;

  v3 = *v1;
  if (!objc_msgSend(v3, sel_isIntegrationEvent))
  {

    v3 = 0;
  }
  *a1 = v3;
}

uint64_t EKEventModelWrapper.isEditable.getter()
{
  id *v0;
  id v1;
  uint64_t result;
  void *v3;
  unsigned __int8 v4;

  v1 = *v0;
  result = (uint64_t)objc_msgSend(*v0, sel_isEditable);
  if ((_DWORD)result)
  {
    result = (uint64_t)objc_msgSend(v1, sel_calendar);
    if (result)
    {
      v3 = (void *)result;
      v4 = objc_msgSend((id)result, sel_isSuggestedEventCalendar);

      if ((v4 & 1) != 0)
      {
        return 0;
      }
      else if (objc_msgSend(v1, sel_isReminderIntegrationEvent))
      {
        return (uint64_t)objc_msgSend(v1, sel_CUIK_reminderShouldBeEditable);
      }
      else
      {
        return 1;
      }
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

id EKEventModelWrapper.isNew.getter()
{
  id *v0;

  return objc_msgSend(*v0, sel_isNew);
}

BOOL EKEventModelWrapper.isSuggestedEvent.getter()
{
  id *v0;
  id v1;
  id v2;

  v1 = objc_msgSend(*v0, sel_suggestionInfo);
  v2 = v1;
  if (v1)

  return v2 != 0;
}

void EKEventModelWrapper.constraints.getter(_QWORD *a1@<X8>)
{
  id *v1;
  id v3;
  id v4;
  void *v5;
  id v6;
  id v7;
  void *v8;
  id v9;

  v3 = *v1;
  v4 = objc_msgSend(v3, sel_calendar);
  if (v4)
  {
    v5 = v4;

    v6 = v5;
    v7 = objc_msgSend(v6, sel_source);
    if (v7)
    {
      v8 = v7;

      v9 = objc_msgSend(v8, sel_constraints);
      *a1 = v9;
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

CalendarUIKit::EKEventModelWrapper_optional __swiftcall EKEventModelWrapper.init(_:)(EKEvent a1)
{
  Class *v1;
  Class isa;
  Class *v3;
  id v4;
  objc_class *v5;
  Swift::Bool v6;
  CalendarUIKit::EKEventModelWrapper_optional result;

  isa = a1.super.super.super.isa;
  v3 = v1;
  v4 = -[objc_class uniqueID](a1.super.super.super.isa, sel_uniqueID);
  if (v4)
  {

  }
  else
  {

    isa = 0;
  }
  *v3 = isa;
  result.value.ekEvent.super.super.super.isa = v5;
  result.is_nil = v6;
  return result;
}

id sub_1B8B85B24(uint64_t a1, uint64_t a2)
{
  return sub_1B8B85B3C(a1, a2, (SEL *)&selRef_title);
}

id sub_1B8B85B30(uint64_t a1, uint64_t a2)
{
  return sub_1B8B85B3C(a1, a2, (SEL *)&selRef_uniqueID);
}

id sub_1B8B85B3C(uint64_t a1, uint64_t a2, SEL *a3)
{
  id *v3;
  id result;
  void *v5;
  uint64_t v6;

  result = objc_msgSend(*v3, *a3);
  if (result)
  {
    v5 = result;
    v6 = sub_1B8B9C17C();

    return (id)v6;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_1B8B85B9C()
{
  id *v0;

  return objc_msgSend(*v0, sel_duration);
}

id sub_1B8B85BAC()
{
  id *v0;

  return objc_msgSend(*v0, sel_isAllDay);
}

id sub_1B8B85BCC()
{
  id *v0;

  return objc_msgSend(*v0, sel_isProposedTimeEvent);
}

uint64_t sub_1B8B85BEC@<X0>(uint64_t a1@<X8>)
{
  return sub_1B8B85F6C((SEL *)&selRef_startTimeZone, (void (*)(void))MEMORY[0x1E0CB1458], MEMORY[0x1E0CB1470], a1);
}

uint64_t sub_1B8B85C08@<X0>(uint64_t a1@<X8>)
{
  return sub_1B8B85F6C((SEL *)&selRef_endTimeZone, (void (*)(void))MEMORY[0x1E0CB1458], MEMORY[0x1E0CB1470], a1);
}

id sub_1B8B85C24()
{
  id *v0;

  return objc_msgSend(*v0, sel_isFloating);
}

id sub_1B8B85C44@<X0>(_QWORD *a1@<X8>)
{
  id *v1;
  id result;

  result = objc_msgSend(*v1, sel_virtualConference);
  *a1 = result;
  return result;
}

uint64_t sub_1B8B85C7C(uint64_t a1, uint64_t a2)
{
  return sub_1B8AED284(a1, a2, (SEL *)&selRef_location);
}

uint64_t sub_1B8B85C88(uint64_t a1, uint64_t a2)
{
  return sub_1B8AED284(a1, a2, (SEL *)&selRef_locationWithoutPrediction);
}

uint64_t sub_1B8B85C94()
{
  id *v0;
  id v1;
  void *v2;
  uint64_t v3;

  v1 = objc_msgSend(*v0, sel_locationsWithoutPrediction);
  if (!v1)
    return 0;
  v2 = v1;
  v3 = sub_1B8B9C2F0();

  return v3;
}

id sub_1B8B85CEC@<X0>(_QWORD *a1@<X8>)
{
  id *v1;
  id result;

  result = objc_msgSend(*v1, sel_structuredLocation);
  *a1 = result;
  return result;
}

id sub_1B8B85D24@<X0>(_QWORD *a1@<X8>)
{
  id *v1;
  id result;

  result = objc_msgSend(*v1, sel_structuredLocationWithoutPrediction);
  *a1 = result;
  return result;
}

id sub_1B8B85D5C@<X0>(_QWORD *a1@<X8>)
{
  id *v1;
  id result;

  result = objc_msgSend(*v1, sel_preferredLocation);
  *a1 = result;
  return result;
}

id sub_1B8B85D94()
{
  id *v0;

  return objc_msgSend(*v0, sel_travelTime);
}

id sub_1B8B85DA4()
{
  id *v0;

  return objc_msgSend(*v0, sel_travelRoutingMode);
}

id sub_1B8B85DB4@<X0>(_QWORD *a1@<X8>)
{
  id *v1;
  id result;

  result = objc_msgSend(*v1, sel_calendar);
  if (result)
    *a1 = result;
  else
    __break(1u);
  return result;
}

id sub_1B8B85DF4()
{
  id *v0;

  return objc_msgSend(*v0, sel_privacyLevel);
}

id sub_1B8B85E04()
{
  id *v0;

  return objc_msgSend(*v0, sel_status);
}

uint64_t sub_1B8B85E18(uint64_t a1, uint64_t a2)
{
  return sub_1B8AED284(a1, a2, (SEL *)&selRef_displayNotes);
}

id sub_1B8B85E24()
{
  id *v0;

  return objc_msgSend(*v0, sel_availability);
}

uint64_t sub_1B8B85E34@<X0>(uint64_t a1@<X8>)
{
  return sub_1B8B85F6C((SEL *)&selRef_recurrenceDate, (void (*)(void))MEMORY[0x1E0CB07E8], MEMORY[0x1E0CB0870], a1);
}

id sub_1B8B85E54@<X0>(_QWORD *a1@<X8>)
{
  id *v1;
  id result;

  result = objc_msgSend(*v1, sel_singleRecurrenceRule);
  *a1 = result;
  return result;
}

id sub_1B8B85E98@<X0>(uint64_t a1@<X8>)
{
  id *v1;
  id v3;
  id v5;

  v3 = objc_msgSend(*v1, sel_selfAttendee);
  if (v3)
  {
    *(_QWORD *)a1 = v3;
    *(_QWORD *)(a1 + 32) = &type metadata for EKParticipantModelWrapper;
    v5 = v3;
    *(_QWORD *)(a1 + 40) = sub_1B8B4EACC();
    v3 = v5;
    *(_QWORD *)(a1 + 8) = v5;
  }
  else
  {
    *(_OWORD *)(a1 + 16) = 0u;
    *(_OWORD *)(a1 + 32) = 0u;
    *(_OWORD *)a1 = 0u;
  }
  return v3;
}

id sub_1B8B85F10()
{
  id *v0;

  return objc_msgSend(*v0, sel_hasAttachment);
}

id sub_1B8B85F30()
{
  id *v0;

  return objc_msgSend(*v0, sel_conferenceURLForDisplayCached);
}

uint64_t sub_1B8B85F50@<X0>(uint64_t a1@<X8>)
{
  return sub_1B8B85F6C((SEL *)&selRef_conferenceURLForDisplay, (void (*)(void))MEMORY[0x1E0CAFF00], MEMORY[0x1E0CAFFF8], a1);
}

uint64_t sub_1B8B85F6C@<X0>(SEL *a1@<X2>, void (*a2)(void)@<X3>, uint64_t (*a3)(void)@<X4>, uint64_t a4@<X8>)
{
  id *v4;
  id v8;
  void *v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;

  v8 = objc_msgSend(*v4, *a1);
  if (v8)
  {
    v9 = v8;
    a2();

    v10 = ((uint64_t (*)(_QWORD))a3)(0);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
    v12 = a4;
    v13 = 0;
  }
  else
  {
    v10 = a3();
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
    v12 = a4;
    v13 = 1;
  }
  return v11(v12, v13, 1, v10);
}

void sub_1B8B85FFC(_QWORD *a1@<X8>)
{
  id *v1;
  id v3;

  v3 = *v1;
  if (!objc_msgSend(v3, sel_isIntegrationEvent))
  {

    v3 = 0;
  }
  *a1 = v3;
}

id sub_1B8B86044()
{
  id *v0;

  return objc_msgSend(*v0, sel_isNew);
}

BOOL sub_1B8B86064()
{
  id *v0;
  id v1;
  id v2;

  v1 = objc_msgSend(*v0, sel_suggestionInfo);
  v2 = v1;
  if (v1)

  return v2 != 0;
}

void sub_1B8B860A8(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  EKEventModelWrapper.id.getter();
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_1B8B860D0(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1B8B86554(a1, a2, a3, a4, (uint64_t *)&unk_1EF1BE5A0, type metadata accessor for WeekDayViewModel);
}

_QWORD *sub_1B8B860E4(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1B94B8);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 17;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v13 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4])
          memmove(v13, a4 + 4, 16 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1B8B86970(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1B8B861F0(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1B94B0);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 1;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 5);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v13 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 4])
          memmove(v13, a4 + 4, 32 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1B8B86A60(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1B8B862FC(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  _QWORD *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1B9588);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 48);
      v12 = v10 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[6 * v8 + 4])
          memmove(v12, a4 + 4, 48 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v12 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_1B8B86B50(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1B8B86420(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  _QWORD *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1BE598);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 40);
      v12 = v10 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[5 * v8 + 4])
          memmove(v12, a4 + 4, 40 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v12 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_1B8B86C44(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1B8B86540(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1B8B86554(a1, a2, a3, a4, &qword_1EF1BD328, type metadata accessor for EventAttendeeModelObject);
}

uint64_t sub_1B8B86554(char a1, int64_t a2, char a3, unint64_t a4, uint64_t *a5, uint64_t (*a6)(_QWORD))
{
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  size_t v17;
  BOOL v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v9 = *(_QWORD *)(a4 + 24);
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = *(_QWORD *)(a4 + 16);
  if (v10 <= v11)
    v12 = *(_QWORD *)(a4 + 16);
  else
    v12 = v10;
  if (!v12)
  {
    v16 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(a5);
  v13 = *(_QWORD *)(a6(0) - 8);
  v14 = *(_QWORD *)(v13 + 72);
  v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v16 = (_QWORD *)swift_allocObject();
  v17 = _swift_stdlib_malloc_size(v16);
  if (!v14 || (v17 - v15 == 0x8000000000000000 ? (v18 = v14 == -1) : (v18 = 0), v18))
  {
LABEL_29:
    result = sub_1B8B9C704();
    __break(1u);
    return result;
  }
  v16[2] = v11;
  v16[3] = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  v19 = *(_QWORD *)(a6(0) - 8);
  v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  v21 = (unint64_t)v16 + v20;
  if ((a1 & 1) != 0)
  {
    if ((unint64_t)v16 < a4 || v21 >= a4 + v20 + *(_QWORD *)(v19 + 72) * v11)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != (_QWORD *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_1B8B86D38(0, v11, v21, a4, a6);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v16;
}

uint64_t sub_1B8B86760(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1B3020);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_1B8B867AC()
{
  unint64_t result;

  result = qword_1EF1BE568;
  if (!qword_1EF1BE568)
  {
    result = MEMORY[0x1BCCB79D0](&protocol conformance descriptor for EKAlarmModelWrapper, &type metadata for EKAlarmModelWrapper);
    atomic_store(result, (unint64_t *)&qword_1EF1BE568);
  }
  return result;
}

unint64_t sub_1B8B867F4()
{
  unint64_t result;

  result = qword_1EF1B9570;
  if (!qword_1EF1B9570)
  {
    result = MEMORY[0x1BCCB79D0](&protocol conformance descriptor for EKAttendeeModelWrapper, &type metadata for EKAttendeeModelWrapper);
    atomic_store(result, (unint64_t *)&qword_1EF1B9570);
  }
  return result;
}

unint64_t sub_1B8B8683C()
{
  unint64_t result;

  result = qword_1ED1B2DC0;
  if (!qword_1ED1B2DC0)
  {
    result = MEMORY[0x1BCCB79D0](&protocol conformance descriptor for EKCalendarModelWrapper, &type metadata for EKCalendarModelWrapper);
    atomic_store(result, (unint64_t *)&qword_1ED1B2DC0);
  }
  return result;
}

_UNKNOWN **sub_1B8B86880()
{
  return &protocol witness table for EKEventIntegrationModelWrapper;
}

_UNKNOWN **sub_1B8B8688C()
{
  return &protocol witness table for EKLocationModelWrapper;
}

unint64_t sub_1B8B8689C()
{
  unint64_t result;

  result = qword_1EF1BE570;
  if (!qword_1EF1BE570)
  {
    result = MEMORY[0x1BCCB79D0](&protocol conformance descriptor for EKOrganizerModelWrapper, &type metadata for EKOrganizerModelWrapper);
    atomic_store(result, (unint64_t *)&qword_1EF1BE570);
  }
  return result;
}

_UNKNOWN **sub_1B8B868E0()
{
  return &protocol witness table for EKRecurrenceRuleModelWrapper;
}

_UNKNOWN **sub_1B8B868EC()
{
  return &protocol witness table for EKVirtualConferenceModelWrapper;
}

unint64_t sub_1B8B868F8(uint64_t a1)
{
  unint64_t result;

  result = sub_1B8B8691C();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1B8B8691C()
{
  unint64_t result;

  result = qword_1ED1B2DA0;
  if (!qword_1ED1B2DA0)
  {
    result = MEMORY[0x1BCCB79D0](&protocol conformance descriptor for EKEventModelWrapper, &type metadata for EKEventModelWrapper);
    atomic_store(result, (unint64_t *)&qword_1ED1B2DA0);
  }
  return result;
}

ValueMetadata *type metadata accessor for EKEventModelWrapper()
{
  return &type metadata for EKEventModelWrapper;
}

uint64_t sub_1B8B86970(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 16 * a1 + 32;
    v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1B8B9C764();
  __break(1u);
  return result;
}

uint64_t sub_1B8B86A60(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 32 * a1 + 32;
    v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1B8B9C764();
  __break(1u);
  return result;
}

uint64_t sub_1B8B86B50(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 48 * a1 + 32;
    v6 = a3 + 48 * v4;
    if (v5 >= v6 || v5 + 48 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1B8B9C764();
  __break(1u);
  return result;
}

uint64_t sub_1B8B86C44(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 40 * a1 + 32;
    v6 = a3 + 40 * v4;
    if (v5 >= v6 || v5 + 40 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1B8B9C764();
  __break(1u);
  return result;
}

uint64_t sub_1B8B86D38(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD))
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t result;

  v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    v9 = *(_QWORD *)(a5(0) - 8);
    v10 = *(unsigned __int8 *)(v9 + 80);
    v11 = *(_QWORD *)(v9 + 72);
    v12 = a4 + ((v10 + 32) & ~v10) + v11 * a1;
    v13 = v11 * v5;
    v14 = a3 + v13;
    v15 = v12 + v13;
    if (v12 >= v14 || v15 <= a3)
    {
      swift_arrayInitWithCopy();
      return v14;
    }
  }
  result = sub_1B8B9C764();
  __break(1u);
  return result;
}

_QWORD *initializeBufferWithCopyOfBuffer for EKShareeView(_QWORD *a1, uint64_t a2)
{
  void *v3;
  void *v4;
  id v5;
  id v6;

  v3 = *(void **)a2;
  v4 = *(void **)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  a1[1] = v4;
  v5 = v3;
  v6 = v4;
  return a1;
}

void destroy for EKShareeView(id *a1)
{

}

uint64_t assignWithCopy for EKShareeView(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  v7 = *(void **)(a2 + 8);
  v8 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v7;
  v9 = v7;

  return a1;
}

uint64_t assignWithTake for EKShareeView(uint64_t a1, _OWORD *a2)
{
  void *v4;

  v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *a2;

  return a1;
}

uint64_t getEnumTagSinglePayload for EKShareeView(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 16))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for EKShareeView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 16) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for EKShareeView()
{
  return &type metadata for EKShareeView;
}

id sub_1B8B86FD0(void *a1, void *a2)
{
  id v4;
  id v5;
  id v6;

  v4 = sub_1B8B8735C(a1, a2);
  if (v4)
  {
    v5 = objc_msgSend((id)objc_opt_self(), sel_viewControllerForContact_, v4);
    objc_msgSend(v5, sel_setContactStore_, a2);
    objc_msgSend(v5, sel_setShouldShowLinkedContacts_, 1);
    objc_msgSend(v5, sel_setAllowsEditing_, 0);

  }
  else
  {
    v6 = sub_1B8B87788(a1);
    v5 = objc_msgSend((id)objc_opt_self(), sel_viewControllerForUnknownContact_, v6);
    objc_msgSend(v5, sel_setContactStore_, a2);
    objc_msgSend(v5, sel_setShouldShowLinkedContacts_, 1);
    objc_msgSend(v5, sel_setAllowsEditing_, 0);

  }
  return v5;
}

id sub_1B8B8735C(void *a1, void *a2)
{
  id v4;
  id v5;
  id v6;
  id result;
  void *v8;
  id v9;
  void *v10;
  id v11;
  uint64_t v12;
  void *v13;
  id v14;
  id v15;
  unint64_t v16;
  id v17;
  id v18;
  id v19;
  id v20[2];

  v20[1] = *(id *)MEMORY[0x1E0C80C00];
  v4 = objc_msgSend(a1, sel_emailAddress);
  if (v4)
  {
    v5 = v4;
    v6 = objc_msgSend((id)objc_opt_self(), sel_predicateForContactsMatchingEmailAddress_, v4);
    goto LABEL_5;
  }
  result = objc_msgSend(a1, sel_phoneNumber);
  if (result)
  {
    v8 = result;
    sub_1B8B9C17C();

    v9 = objc_allocWithZone(MEMORY[0x1E0C97398]);
    v10 = (void *)sub_1B8B9C14C();
    swift_bridgeObjectRelease();
    v5 = objc_msgSend(v9, sel_initWithStringValue_, v10);

    v6 = objc_msgSend((id)objc_opt_self(), sel_predicateForContactsMatchingPhoneNumber_, v5);
LABEL_5:
    v11 = v6;

    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1BCFD0);
    v12 = swift_allocObject();
    *(_OWORD *)(v12 + 16) = xmmword_1B8BA9720;
    *(_QWORD *)(v12 + 32) = objc_msgSend((id)objc_opt_self(), sel_descriptorForRequiredKeys);
    sub_1B8B9C2FC();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1BCFD8);
    v13 = (void *)sub_1B8B9C2E4();
    swift_bridgeObjectRelease();
    v20[0] = 0;
    v14 = objc_msgSend(a2, sel_unifiedContactsMatchingPredicate_keysToFetch_error_, v11, v13, v20);

    v15 = v20[0];
    if (!v14)
    {
      v19 = v20[0];
      sub_1B8B9B00C();

      swift_willThrow();
      return v14;
    }
    sub_1B8B87BAC();
    v16 = sub_1B8B9C2F0();
    v17 = v15;

    if (v16 >> 62)
    {
      swift_bridgeObjectRetain();
      v14 = (id)sub_1B8B9C728();
      swift_bridgeObjectRelease();
      if (v14)
        goto LABEL_8;
    }
    else
    {
      v14 = *(id *)((v16 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (v14)
      {
LABEL_8:
        if ((v16 & 0xC000000000000001) != 0)
        {
          v18 = (id)MEMORY[0x1BCCB6800](0, v16);
        }
        else
        {
          if (!*(_QWORD *)((v16 & 0xFFFFFFFFFFFFF8) + 0x10))
            __break(1u);
          v18 = *(id *)(v16 + 32);
        }
        v14 = v18;
      }
    }
    swift_bridgeObjectRelease();

    return v14;
  }
  __break(1u);
  return result;
}

id sub_1B8B87634()
{
  void **v0;
  id v1;
  id v2;

  v1 = sub_1B8B86FD0(*v0, v0[1]);
  v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3A40]), sel_initWithRootViewController_, v1);

  return v2;
}

uint64_t sub_1B8B87680()
{
  sub_1B8B87744();
  return sub_1B8B9B984();
}

uint64_t sub_1B8B876D0()
{
  sub_1B8B87744();
  return sub_1B8B9B954();
}

void sub_1B8B87720()
{
  sub_1B8B87744();
  sub_1B8B9B978();
  __break(1u);
}

unint64_t sub_1B8B87744()
{
  unint64_t result;

  result = qword_1EF1BE5B8;
  if (!qword_1EF1BE5B8)
  {
    result = MEMORY[0x1BCCB79D0](&unk_1B8BAE564, &type metadata for EKShareeView);
    atomic_store(result, (unint64_t *)&qword_1EF1BE5B8);
  }
  return result;
}

id sub_1B8B87788(void *a1)
{
  id v2;
  id v3;
  void *v4;
  uint64_t v5;
  id v6;
  id v7;
  void *v8;
  id v9;
  void *v10;
  id v11;
  void *v12;
  id v13;
  void *v14;
  id v15;
  uint64_t v16;
  id v17;
  id v18;
  void *v19;
  id v20;
  void *v21;
  id v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  int v30;
  id result;
  void *v32;
  void *v33;
  void *v34;

  v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C97360]), sel_init);
  v3 = objc_msgSend(a1, sel_emailAddress);
  if (v3)
  {
    v4 = v3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1BCFD0);
    v5 = swift_allocObject();
    *(_OWORD *)(v5 + 16) = xmmword_1B8BA9720;
    sub_1B8B9C17C();
    v6 = objc_allocWithZone(MEMORY[0x1E0C97338]);
    v7 = v4;
    v8 = (void *)sub_1B8B9C14C();
    swift_bridgeObjectRelease();
    v9 = objc_msgSend(v6, (SEL)0x1F2E196B1, v8, v7);

    *(_QWORD *)(v5 + 32) = v9;
    sub_1B8B9C2FC();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1BE5D0);
    v10 = (void *)sub_1B8B9C2E4();
    swift_bridgeObjectRelease();
    objc_msgSend(v2, sel_setEmailAddresses_, v10);

  }
  v11 = objc_msgSend(a1, sel_phoneNumber);
  if (v11)
  {
    v12 = v11;
    sub_1B8B9C17C();

    v13 = objc_allocWithZone(MEMORY[0x1E0C97398]);
    v14 = (void *)sub_1B8B9C14C();
    swift_bridgeObjectRelease();
    v15 = objc_msgSend(v13, sel_initWithStringValue_, v14);

    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1BCFD0);
    v16 = swift_allocObject();
    *(_OWORD *)(v16 + 16) = xmmword_1B8BA9720;
    sub_1B8B9C17C();
    v17 = objc_allocWithZone(MEMORY[0x1E0C97338]);
    v18 = v15;
    v19 = (void *)sub_1B8B9C14C();
    swift_bridgeObjectRelease();
    v20 = objc_msgSend(v17, (SEL)0x1F2E196B1, v19, v18);

    *(_QWORD *)(v16 + 32) = v20;
    sub_1B8B9C2FC();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1BE5D0);
    v21 = (void *)sub_1B8B9C2E4();
    swift_bridgeObjectRelease();
    objc_msgSend(v2, sel_setPhoneNumbers_, v21);

  }
  v22 = objc_msgSend(a1, sel_firstName);
  if (v22)
  {
    v23 = v22;
    sub_1B8B9C17C();
    v25 = v24;

  }
  else
  {
    v25 = 0;
  }
  v26 = objc_msgSend(a1, sel_lastName);
  if (!v26)
  {
    if (!v25)
      goto LABEL_21;
    v29 = 0;
LABEL_14:
    result = objc_msgSend(a1, sel_firstName);
    if (!result)
    {
      __break(1u);
LABEL_25:
      __break(1u);
      goto LABEL_26;
    }
    v32 = result;
    objc_msgSend(v2, sel_setGivenName_, result);

    if (!v29)
      goto LABEL_20;
    v30 = 0;
LABEL_17:
    result = objc_msgSend(a1, sel_lastName);
    if (result)
    {
      v33 = result;
      objc_msgSend(v2, sel_setFamilyName_, result);

      if (v30)
      {
        swift_bridgeObjectRelease();
        return v2;
      }
LABEL_20:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v2;
    }
    goto LABEL_25;
  }
  v27 = v26;
  sub_1B8B9C17C();
  v29 = v28;

  if (v25)
    goto LABEL_14;
  if (v29)
  {
    v30 = 1;
    goto LABEL_17;
  }
LABEL_21:
  swift_bridgeObjectRelease();
  result = objc_msgSend(a1, sel_name);
  if (result)
  {
    v34 = result;
    objc_msgSend(v2, sel_setGivenName_, result);

    return v2;
  }
LABEL_26:
  __break(1u);
  return result;
}

unint64_t sub_1B8B87BAC()
{
  unint64_t result;

  result = qword_1EF1BCFE0;
  if (!qword_1EF1BCFE0)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EF1BCFE0);
  }
  return result;
}

BOOL sub_1B8B87BEC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _OWORD *v3;
  _OWORD *v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  BOOL v17;
  _OWORD v19[11];
  _OWORD v20[11];

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 == *(_QWORD *)(a2 + 16))
  {
    if (!v2 || a1 == a2)
    {
      return 1;
    }
    else
    {
      v3 = (_OWORD *)(a1 + 32);
      v4 = (_OWORD *)(a2 + 32);
      v5 = v2 - 1;
      do
      {
        v6 = v5;
        v7 = v3[9];
        v20[8] = v3[8];
        v20[9] = v7;
        v20[10] = v3[10];
        v8 = v3[5];
        v20[4] = v3[4];
        v20[5] = v8;
        v9 = v3[7];
        v20[6] = v3[6];
        v20[7] = v9;
        v10 = v3[1];
        v20[0] = *v3;
        v20[1] = v10;
        v11 = v3[3];
        v20[2] = v3[2];
        v20[3] = v11;
        v12 = v4[9];
        v19[8] = v4[8];
        v19[9] = v12;
        v19[10] = v4[10];
        v13 = v4[5];
        v19[4] = v4[4];
        v19[5] = v13;
        v14 = v4[7];
        v19[6] = v4[6];
        v19[7] = v14;
        v15 = v4[1];
        v19[0] = *v4;
        v19[1] = v15;
        v16 = v4[3];
        v19[2] = v4[2];
        v19[3] = v16;
        v17 = _s13CalendarUIKit24EventLocationModelObjectV2eeoiySbAC_ACtFZ_0((uint64_t)v20, (uint64_t)v19);
        if (!v17)
          break;
        v5 = v6 - 1;
        v4 += 11;
        v3 += 11;
      }
      while (v6);
    }
  }
  else
  {
    return 0;
  }
  return v17;
}

uint64_t sub_1B8B87CD4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t i;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  _OWORD *v27;
  _OWORD *v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  BOOL v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  int v63;
  int v64;
  int v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  _OWORD v70[11];
  _OWORD v71[12];
  _OWORD v72[11];
  _BYTE v73[184];
  uint64_t v74;
  _BYTE v75[184];
  _BYTE v76[184];
  _BYTE v77[184];
  _BYTE v78[192];

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != *(_QWORD *)(a2 + 16))
    return 0;
  if (v2 && a1 != a2)
  {
    v3 = a1 + 32;
    v4 = a2 + 32;
    for (i = v2 - 1; ; --i)
    {
      sub_1B8B545A4(v3, (uint64_t)v76);
      sub_1B8B545A4(v4, (uint64_t)v77);
      sub_1B8B545A4((uint64_t)v76, (uint64_t)v78);
      if (sub_1B8B545EC((uint64_t)v78) == 1)
      {
        nullsub_1(v78);
        sub_1B8B545A4((uint64_t)v76, (uint64_t)v75);
        v6 = nullsub_1(v75);
        sub_1B8B545A4((uint64_t)v77, (uint64_t)v73);
        if (sub_1B8B545EC((uint64_t)v73) != 1)
        {
          nullsub_1(v73);
          sub_1B8B5472C((uint64_t)v76, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1B8B545F4);
          sub_1B8B5472C((uint64_t)v76, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1B8B545F4);
          sub_1B8B5472C((uint64_t)v77, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1B8B545F4);
          sub_1B8B5472C((uint64_t)v76, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1B8B545F4);
          sub_1B8B5472C((uint64_t)v77, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1B8B545F4);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
LABEL_46:
          sub_1B8B545A4((uint64_t)v76, (uint64_t)v73);
          sub_1B8B545A4((uint64_t)v77, (uint64_t)&v74);
          sub_1B8B8AAD0((uint64_t)v73);
          sub_1B8B5472C((uint64_t)v77, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1B8B54798);
          sub_1B8B5472C((uint64_t)v76, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1B8B54798);
          return 0;
        }
        v58 = i;
        v59 = v4;
        v60 = v3;
        nullsub_1(v73);
        sub_1B8B545A4((uint64_t)v77, (uint64_t)v72);
        v7 = nullsub_1(v72);
        v8 = *(_QWORD *)(v7 + 8);
        v9 = *(_QWORD *)(v7 + 16);
        v11 = *(_QWORD *)(v7 + 24);
        v10 = *(_QWORD *)(v7 + 32);
        v13 = *(_QWORD *)(v7 + 40);
        v12 = *(_QWORD *)(v7 + 48);
        v14 = *(_QWORD *)(v7 + 56);
        v64 = *(unsigned __int8 *)(v7 + 65);
        v65 = *(unsigned __int8 *)(v7 + 64);
        v62 = *(_QWORD *)(v7 + 72);
        v15 = *(_QWORD *)(v6 + 16);
        v16 = *(_QWORD *)(v6 + 32);
        v68 = *(_QWORD *)(v6 + 8);
        v69 = *(_QWORD *)(v6 + 24);
        v17 = *(_QWORD *)(v6 + 48);
        v66 = *(_QWORD *)(v6 + 40);
        v67 = *(_QWORD *)(v6 + 56);
        v18 = *(unsigned __int8 *)(v6 + 64);
        v61 = *(_QWORD *)(v6 + 72);
        v63 = *(unsigned __int8 *)(v6 + 65);
        if (v68)
        {
          if (!v8)
            goto LABEL_47;
          if (*(_QWORD *)v6 != *(_QWORD *)v7 || v68 != v8)
          {
            v19 = *(_QWORD *)(v7 + 56);
            v20 = *(_QWORD *)(v7 + 40);
            v21 = v16;
            v22 = v17;
            v23 = *(_QWORD *)(v7 + 32);
            v24 = *(_QWORD *)(v7 + 48);
            v25 = *(_QWORD *)(v7 + 16);
            v26 = sub_1B8B9C8D8();
            v9 = v25;
            v12 = v24;
            v10 = v23;
            v17 = v22;
            v16 = v21;
            v13 = v20;
            v14 = v19;
            if ((v26 & 1) == 0)
            {
LABEL_47:
              sub_1B8B545A4((uint64_t)v76, (uint64_t)v71);
              nullsub_1(v71);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              return 0;
            }
          }
        }
        else if (v8)
        {
          goto LABEL_47;
        }
        if (v69)
        {
          if (!v11)
            goto LABEL_47;
          if (v15 != v9 || v69 != v11)
          {
            v43 = v14;
            v44 = v12;
            v45 = sub_1B8B9C8D8();
            v12 = v44;
            v14 = v43;
            if ((v45 & 1) == 0)
              goto LABEL_47;
          }
        }
        else if (v11)
        {
          goto LABEL_47;
        }
        if (v66)
        {
          if (!v13)
            goto LABEL_47;
          if (v16 != v10 || v66 != v13)
          {
            v46 = v14;
            v47 = v12;
            v48 = sub_1B8B9C8D8();
            v12 = v47;
            v14 = v46;
            if ((v48 & 1) == 0)
              goto LABEL_47;
          }
        }
        else if (v13)
        {
          goto LABEL_47;
        }
        if (v17 == v12 && v67 == v14)
        {
          if (v65 != v18 || ((v64 ^ v63) & 1) != 0)
            goto LABEL_47;
        }
        else if ((sub_1B8B9C8D8() & 1) == 0 || ((v65 ^ v18) & 1) != 0 || ((v64 ^ v63) & 1) != 0)
        {
          goto LABEL_47;
        }
        if (v61 != v62)
          goto LABEL_47;
        sub_1B8B545A4((uint64_t)v76, (uint64_t)v71);
        nullsub_1(v71);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v4 = v59;
        v3 = v60;
        i = v58;
        if (!v58)
          return 1;
      }
      else
      {
        nullsub_1(v78);
        sub_1B8B545A4((uint64_t)v76, (uint64_t)v75);
        v27 = (_OWORD *)nullsub_1(v75);
        sub_1B8B545A4((uint64_t)v77, (uint64_t)v73);
        if (sub_1B8B545EC((uint64_t)v73) == 1)
        {
          nullsub_1(v73);
          v51 = v27[1];
          v50 = v27[2];
          v72[0] = *v27;
          v72[1] = v51;
          v72[2] = v50;
          v52 = v27[6];
          v54 = v27[3];
          v53 = v27[4];
          v72[5] = v27[5];
          v72[6] = v52;
          v72[3] = v54;
          v72[4] = v53;
          v55 = v27[10];
          v57 = v27[7];
          v56 = v27[8];
          v72[9] = v27[9];
          v72[10] = v55;
          v72[7] = v57;
          v72[8] = v56;
          sub_1B8B5472C((uint64_t)v76, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1B8B545F4);
          sub_1B8B5472C((uint64_t)v76, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1B8B545F4);
          sub_1B8B5472C((uint64_t)v77, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1B8B545F4);
          sub_1B8B5472C((uint64_t)v76, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1B8B545F4);
          sub_1B8B5472C((uint64_t)v77, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1B8B545F4);
          sub_1B8B2C8E8(v72);
          goto LABEL_46;
        }
        nullsub_1(v73);
        sub_1B8B545A4((uint64_t)v77, (uint64_t)v72);
        v28 = (_OWORD *)nullsub_1(v72);
        v29 = v28[9];
        v70[8] = v28[8];
        v70[9] = v29;
        v70[10] = v28[10];
        v30 = v28[5];
        v70[4] = v28[4];
        v70[5] = v30;
        v31 = v28[7];
        v70[6] = v28[6];
        v70[7] = v31;
        v32 = v28[1];
        v70[0] = *v28;
        v70[1] = v32;
        v33 = v28[3];
        v70[2] = v28[2];
        v70[3] = v33;
        sub_1B8B5472C((uint64_t)v76, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1B8B545F4);
        sub_1B8B5472C((uint64_t)v76, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1B8B545F4);
        sub_1B8B5472C((uint64_t)v76, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1B8B545F4);
        sub_1B8B5472C((uint64_t)v77, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1B8B545F4);
        v34 = _s13CalendarUIKit24EventLocationModelObjectV2eeoiySbAC_ACtFZ_0((uint64_t)v27, (uint64_t)v70);
        v36 = v27[1];
        v35 = v27[2];
        v71[0] = *v27;
        v71[1] = v36;
        v71[2] = v35;
        v37 = v27[6];
        v39 = v27[3];
        v38 = v27[4];
        v71[5] = v27[5];
        v71[6] = v37;
        v71[3] = v39;
        v71[4] = v38;
        v40 = v27[10];
        v42 = v27[7];
        v41 = v27[8];
        v71[9] = v27[9];
        v71[10] = v40;
        v71[7] = v42;
        v71[8] = v41;
        sub_1B8B2C8E8(v71);
        sub_1B8B5472C((uint64_t)v76, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1B8B54798);
        sub_1B8B5472C((uint64_t)v77, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1B8B54798);
        sub_1B8B5472C((uint64_t)v76, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1B8B54798);
        if (!v34)
          return 0;
        if (!i)
          return 1;
      }
      v4 += 184;
      v3 += 184;
    }
  }
  return 1;
}

uint64_t sub_1B8B88344(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  char v32;
  uint64_t result;
  char v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v41;
  uint64_t v42;
  int v43;
  int v44;
  int v45;
  int v46;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != *(_QWORD *)(a2 + 16))
    return 0;
  if (v2)
  {
    v3 = a2;
    if (a1 != a2)
    {
      v4 = 0;
      v39 = a1;
      do
      {
        v5 = *(_QWORD *)(a1 + v4 + 40);
        v6 = *(_QWORD *)(a1 + v4 + 48);
        v8 = *(_QWORD *)(a1 + v4 + 56);
        v7 = *(_QWORD *)(a1 + v4 + 64);
        v9 = *(_QWORD *)(a1 + v4 + 72);
        v10 = *(_QWORD *)(a1 + v4 + 80);
        v11 = *(_QWORD *)(a1 + v4 + 88);
        v12 = v3 + v4;
        v13 = *(_QWORD *)(v12 + 40);
        v14 = *(_QWORD *)(v12 + 48);
        v16 = *(_QWORD *)(v12 + 56);
        v15 = *(_QWORD *)(v12 + 64);
        v18 = *(_QWORD *)(v12 + 72);
        v17 = *(_QWORD *)(v12 + 80);
        v19 = *(_QWORD *)(v12 + 88);
        v45 = *(unsigned __int8 *)(v12 + 96);
        v46 = *(unsigned __int8 *)(a1 + v4 + 96);
        v41 = *(_QWORD *)(a1 + v4 + 104);
        v42 = *(_QWORD *)(v12 + 104);
        v43 = *(unsigned __int8 *)(a1 + v4 + 97);
        v44 = *(unsigned __int8 *)(v12 + 97);
        if (v5)
        {
          if (!v13)
            return 0;
          if (*(_QWORD *)(a1 + v4 + 32) != *(_QWORD *)(v12 + 32) || v5 != v13)
          {
            v37 = *(_QWORD *)(v12 + 64);
            v38 = *(_QWORD *)(v12 + 88);
            v35 = *(_QWORD *)(v12 + 80);
            v36 = *(_QWORD *)(v12 + 72);
            v20 = *(_QWORD *)(a1 + v4 + 88);
            v21 = *(_QWORD *)(a1 + v4 + 72);
            v22 = *(_QWORD *)(a1 + v4 + 64);
            v23 = *(_QWORD *)(a1 + v4 + 48);
            v24 = *(_QWORD *)(v12 + 48);
            v25 = sub_1B8B9C8D8();
            v14 = v24;
            v6 = v23;
            v18 = v36;
            v15 = v37;
            v7 = v22;
            v9 = v21;
            v11 = v20;
            v17 = v35;
            v19 = v38;
            if ((v25 & 1) == 0)
              return 0;
          }
        }
        else if (v13)
        {
          return 0;
        }
        if (v8)
        {
          if (!v16)
            return 0;
          if (v6 != v14 || v8 != v16)
          {
            v26 = v15;
            v27 = v11;
            v28 = v9;
            v29 = v7;
            v30 = sub_1B8B9C8D8();
            v15 = v26;
            v7 = v29;
            v9 = v28;
            v11 = v27;
            if ((v30 & 1) == 0)
              return 0;
          }
        }
        else if (v16)
        {
          return 0;
        }
        if (v9)
        {
          if (!v18)
            return 0;
          if (v7 != v15 || v9 != v18)
          {
            v31 = v11;
            v32 = sub_1B8B9C8D8();
            v11 = v31;
            if ((v32 & 1) == 0)
              return 0;
          }
        }
        else if (v18)
        {
          return 0;
        }
        if (v10 == v17 && v11 == v19)
        {
          result = 0;
          if (v46 != v45)
            return result;
        }
        else
        {
          v34 = sub_1B8B9C8D8();
          result = 0;
          if ((v34 & 1) == 0 || ((v46 ^ v45) & 1) != 0)
            return result;
        }
        if (((v43 ^ v44) & 1) != 0 || v41 != v42)
          return result;
        v4 += 80;
        --v2;
        a1 = v39;
        v3 = a2;
      }
      while (v2);
    }
  }
  return 1;
}

uint64_t sub_1B8B88590(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  BOOL v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unsigned int (*v30)(char *, uint64_t, uint64_t);
  uint64_t v31;
  char *v32;
  uint64_t v33;
  char *v34;
  char v35;
  void (*v36)(char *, uint64_t);
  char v37;
  char v38;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;

  v4 = sub_1B8B9B054();
  v47 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v40 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1B3020);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1BC208);
  MEMORY[0x1E0C80A78](v43);
  v11 = (char *)&v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = type metadata accessor for EventVirtualConferenceJoinMethodModelObject(0);
  v12 = MEMORY[0x1E0C80A78](v42);
  v14 = (char **)((char *)&v40 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v12);
  v17 = (char **)((char *)&v40 - v16);
  v44 = a1;
  v45 = a2;
  v18 = *(_QWORD *)(a1 + 16);
  if (v18 != *(_QWORD *)(a2 + 16))
    goto LABEL_26;
  if (!v18 || v44 == v45)
  {
    v38 = 1;
    return v38 & 1;
  }
  v19 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  v20 = *(_QWORD *)(v15 + 72);
  v40 = v6;
  v41 = v20;
  v21 = v18 - 1;
  v22 = v42;
  while (1)
  {
    v23 = v21;
    sub_1B8AE7B90(v44 + v19, (uint64_t)v17, type metadata accessor for EventVirtualConferenceJoinMethodModelObject);
    sub_1B8AE7B90(v45 + v19, (uint64_t)v14, type metadata accessor for EventVirtualConferenceJoinMethodModelObject);
    v24 = v17[1];
    v25 = v14[1];
    if (v24)
    {
      if (!v25)
        goto LABEL_25;
      v26 = *v17 == *v14 && v24 == v25;
      if (!v26 && (sub_1B8B9C8D8() & 1) == 0)
        goto LABEL_25;
    }
    else if (v25)
    {
      goto LABEL_25;
    }
    v46 = v23;
    v27 = *(int *)(v22 + 20);
    v28 = (uint64_t)v14 + v27;
    v29 = (uint64_t)&v11[*(int *)(v43 + 48)];
    sub_1B8ADE850((uint64_t)v17 + v27, (uint64_t)v11, &qword_1ED1B3020);
    sub_1B8ADE850(v28, v29, &qword_1ED1B3020);
    v30 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v47 + 48);
    if (v30(v11, 1, v4) != 1)
      break;
    if (v30((char *)v29, 1, v4) != 1)
      goto LABEL_24;
    sub_1B8ADE894((uint64_t)v11, &qword_1ED1B3020);
    v31 = v46;
LABEL_19:
    v37 = *((_BYTE *)v17 + *(int *)(v22 + 24)) ^ *((_BYTE *)v14 + *(int *)(v22 + 24));
    sub_1B8AE7BD4((uint64_t)v14, type metadata accessor for EventVirtualConferenceJoinMethodModelObject);
    sub_1B8AE7BD4((uint64_t)v17, type metadata accessor for EventVirtualConferenceJoinMethodModelObject);
    if ((v37 & 1) == 0)
    {
      v21 = v31 - 1;
      v19 += v41;
      if (v31)
        continue;
    }
    v38 = v37 ^ 1;
    return v38 & 1;
  }
  sub_1B8ADE850((uint64_t)v11, (uint64_t)v9, &qword_1ED1B3020);
  if (v30((char *)v29, 1, v4) != 1)
  {
    v32 = v9;
    v33 = v47;
    v34 = v40;
    (*(void (**)(char *, uint64_t, uint64_t))(v47 + 32))(v40, v29, v4);
    sub_1B8ADBDEC(&qword_1EF1BC210, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0028]);
    v35 = sub_1B8B9C0EC();
    v36 = *(void (**)(char *, uint64_t))(v33 + 8);
    v9 = v32;
    v22 = v42;
    v36(v34, v4);
    v36(v9, v4);
    sub_1B8ADE894((uint64_t)v11, &qword_1ED1B3020);
    v31 = v46;
    if ((v35 & 1) == 0)
      goto LABEL_25;
    goto LABEL_19;
  }
  (*(void (**)(char *, uint64_t))(v47 + 8))(v9, v4);
LABEL_24:
  sub_1B8ADE894((uint64_t)v11, &qword_1EF1BC208);
LABEL_25:
  sub_1B8AE7BD4((uint64_t)v14, type metadata accessor for EventVirtualConferenceJoinMethodModelObject);
  sub_1B8AE7BD4((uint64_t)v17, type metadata accessor for EventVirtualConferenceJoinMethodModelObject);
LABEL_26:
  v38 = 0;
  return v38 & 1;
}

uint64_t sub_1B8B88980(int64x2_t *a1, int64x2_t *a2)
{
  uint64_t v2;
  int64x2_t *v3;
  int64x2_t *v4;
  uint64_t v5;
  int64x2_t v6;
  int64x2_t v7;
  int64x2_t v8;
  int32x2_t v9;
  BOOL v11;

  v2 = a1[1].i64[0];
  if (v2 != a2[1].i64[0])
    return 0;
  if (!v2 || a1 == a2)
    return 1;
  v3 = a1 + 2;
  v4 = a2 + 2;
  v5 = v2 - 1;
  do
  {
    v6 = *v3++;
    v7 = v6;
    v8 = *v4++;
    v9 = vmovn_s64(vceqq_s64(v7, v8));
    v11 = v5-- != 0;
  }
  while ((v9.i8[0] & v9.i8[4] & 1) != 0 && v11);
  return v9.i8[0] & v9.i8[4] & 1;
}

BOOL sub_1B8B889F0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v5;
  _BOOL8 result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v2 = a1[2];
  if (v2 != a2[2])
    return 0;
  if (!v2 || a1 == a2)
    return 1;
  if (a1[4] != a2[4])
    return 0;
  v3 = a1 + 5;
  v4 = a2 + 5;
  v5 = v2 - 1;
  do
  {
    result = v5 == 0;
    if (!v5)
      break;
    v8 = *v3++;
    v7 = v8;
    v9 = *v4++;
    --v5;
  }
  while (v7 == v9);
  return result;
}

uint64_t sub_1B8B88A5C(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  BOOL v5;
  char v6;
  uint64_t result;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *i;
  BOOL v11;

  v2 = a1[2];
  if (v2 != a2[2])
    return 0;
  if (!v2 || a1 == a2)
    return 1;
  v5 = a1[4] == a2[4] && a1[5] == a2[5];
  if (v5 || (v6 = sub_1B8B9C8D8(), result = 0, (v6 & 1) != 0))
  {
    v8 = v2 - 1;
    if (!v8)
      return 1;
    v9 = a1 + 7;
    for (i = a2 + 7; ; i += 2)
    {
      v11 = *(v9 - 1) == *(i - 1) && *v9 == *i;
      if (!v11 && (sub_1B8B9C8D8() & 1) == 0)
        break;
      v9 += 2;
      if (!--v8)
        return 1;
    }
    return 0;
  }
  return result;
}

uint64_t sub_1B8B88B20(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  BOOL v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unsigned int (*v30)(uint64_t, uint64_t, uint64_t);
  uint64_t v31;
  char *v32;
  char *v33;
  char v34;
  void (*v35)(char *, uint64_t);
  char *v36;
  char v37;
  char v38;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;

  v4 = sub_1B8B9B0F0();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1B2D18);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1BDC48);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v40 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for EventAlarmModelObject();
  v15 = MEMORY[0x1E0C80A78](v14);
  v17 = (char *)&v40 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x1E0C80A78](v15);
  v21 = (char *)&v40 - v20;
  v22 = *(_QWORD *)(a1 + 16);
  if (v22 != *(_QWORD *)(a2 + 16))
  {
LABEL_23:
    v38 = 0;
    return v38 & 1;
  }
  v44 = v11;
  if (v22 && a1 != a2)
  {
    v47 = v18;
    v45 = v5;
    v23 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
    v24 = *(_QWORD *)(v19 + 72);
    v40 = v7;
    v41 = v24;
    v25 = v22 - 1;
    v42 = a2;
    v43 = a1;
    while (1)
    {
      v46 = v25;
      sub_1B8AE7B90(a1 + v23, (uint64_t)v21, (uint64_t (*)(_QWORD))type metadata accessor for EventAlarmModelObject);
      sub_1B8AE7B90(a2 + v23, (uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for EventAlarmModelObject);
      v26 = *(_QWORD *)v21 == *(_QWORD *)v17 && *((_QWORD *)v21 + 1) == *((_QWORD *)v17 + 1);
      if (!v26 && (sub_1B8B9C8D8() & 1) == 0 || *((double *)v21 + 2) != *((double *)v17 + 2))
        break;
      v27 = *(int *)(v47 + 24);
      v28 = (uint64_t)&v17[v27];
      v29 = (uint64_t)&v13[*(int *)(v44 + 48)];
      sub_1B8ADE850((uint64_t)&v21[v27], (uint64_t)v13, &qword_1ED1B2D18);
      sub_1B8ADE850(v28, v29, &qword_1ED1B2D18);
      v30 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v45 + 48);
      if (v30((uint64_t)v13, 1, v4) == 1)
      {
        if (v30(v29, 1, v4) != 1)
          goto LABEL_21;
        sub_1B8ADE894((uint64_t)v13, &qword_1ED1B2D18);
        a2 = v42;
        a1 = v43;
      }
      else
      {
        sub_1B8ADE850((uint64_t)v13, (uint64_t)v10, &qword_1ED1B2D18);
        if (v30(v29, 1, v4) == 1)
        {
          (*(void (**)(char *, uint64_t))(v45 + 8))(v10, v4);
LABEL_21:
          sub_1B8ADE894((uint64_t)v13, &qword_1EF1BDC48);
          break;
        }
        v31 = v45;
        v32 = v10;
        v33 = v40;
        (*(void (**)(char *, uint64_t, uint64_t))(v45 + 32))(v40, v29, v4);
        sub_1B8ADBDEC((unint64_t *)&qword_1EF1BC968, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08B8]);
        v34 = sub_1B8B9C0EC();
        v35 = *(void (**)(char *, uint64_t))(v31 + 8);
        v36 = v33;
        v10 = v32;
        v35(v36, v4);
        v35(v32, v4);
        sub_1B8ADE894((uint64_t)v13, &qword_1ED1B2D18);
        a2 = v42;
        a1 = v43;
        if ((v34 & 1) == 0)
          break;
      }
      v37 = v21[*(int *)(v47 + 28)] ^ v17[*(int *)(v47 + 28)];
      sub_1B8AE7BD4((uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for EventAlarmModelObject);
      sub_1B8AE7BD4((uint64_t)v21, (uint64_t (*)(_QWORD))type metadata accessor for EventAlarmModelObject);
      if ((v37 & 1) == 0)
      {
        v25 = v46 - 1;
        v23 += v41;
        if (v46)
          continue;
      }
      v38 = v37 ^ 1;
      return v38 & 1;
    }
    sub_1B8AE7BD4((uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for EventAlarmModelObject);
    sub_1B8AE7BD4((uint64_t)v21, (uint64_t (*)(_QWORD))type metadata accessor for EventAlarmModelObject);
    goto LABEL_23;
  }
  v38 = 1;
  return v38 & 1;
}

uint64_t sub_1B8B88EFC(uint64_t a1, uint64_t a2)
{
  return sub_1B8B88F24(a1, a2, type metadata accessor for EventRecurrenceRuleModelObject, (uint64_t (*)(char *, char *))static EventRecurrenceRuleModelObject.== infix(_:_:));
}

uint64_t sub_1B8B88F10(uint64_t a1, uint64_t a2)
{
  return sub_1B8B88F24(a1, a2, type metadata accessor for EventAttendeeModelObject, (uint64_t (*)(char *, char *))static EventAttendeeModelObject.== infix(_:_:));
}

uint64_t sub_1B8B88F24(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD), uint64_t (*a4)(char *, char *))
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  BOOL v21;
  uint64_t v23;

  v8 = a3(0);
  v9 = MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v14 = (char *)&v23 - v13;
  v15 = *(_QWORD *)(a1 + 16);
  if (v15 == *(_QWORD *)(a2 + 16))
  {
    if (!v15 || a1 == a2)
    {
      v19 = 1;
    }
    else
    {
      v16 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
      v17 = *(_QWORD *)(v12 + 72);
      v18 = v15 - 1;
      do
      {
        sub_1B8AE7B90(a1 + v16, (uint64_t)v14, a3);
        sub_1B8AE7B90(a2 + v16, (uint64_t)v11, a3);
        v19 = a4(v14, v11);
        sub_1B8AE7BD4((uint64_t)v11, a3);
        sub_1B8AE7BD4((uint64_t)v14, a3);
        v21 = v18-- != 0;
        if ((v19 & 1) == 0)
          break;
        v16 += v17;
      }
      while (v21);
    }
  }
  else
  {
    v19 = 0;
  }
  return v19 & 1;
}

uint64_t EventLocationSearchResultsModelObject.contactsSearchResults.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t EventLocationSearchResultsModelObject.contactsSearchResults.setter(uint64_t a1)
{
  _QWORD *v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v1 = a1;
  return result;
}

uint64_t (*EventLocationSearchResultsModelObject.contactsSearchResults.modify())()
{
  return nullsub_1;
}

uint64_t EventLocationSearchResultsModelObject.recentsSearchResults.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t EventLocationSearchResultsModelObject.recentsSearchResults.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 8) = a1;
  return result;
}

uint64_t (*EventLocationSearchResultsModelObject.recentsSearchResults.modify())()
{
  return nullsub_1;
}

uint64_t EventLocationSearchResultsModelObject.frequentsSearchResults.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t EventLocationSearchResultsModelObject.frequentsSearchResults.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 16) = a1;
  return result;
}

uint64_t (*EventLocationSearchResultsModelObject.frequentsSearchResults.modify())()
{
  return nullsub_1;
}

uint64_t EventLocationSearchResultsModelObject.eventsSearchResults.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t EventLocationSearchResultsModelObject.eventsSearchResults.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 24) = a1;
  return result;
}

uint64_t (*EventLocationSearchResultsModelObject.eventsSearchResults.modify())()
{
  return nullsub_1;
}

uint64_t EventLocationSearchResultsModelObject.textualSearchResults.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t EventLocationSearchResultsModelObject.textualSearchResults.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 32) = a1;
  return result;
}

uint64_t (*EventLocationSearchResultsModelObject.textualSearchResults.modify())()
{
  return nullsub_1;
}

uint64_t EventLocationSearchResultsModelObject.conferenceRoomSearchResults.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t EventLocationSearchResultsModelObject.conferenceRoomSearchResults.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 40) = a1;
  return result;
}

uint64_t (*EventLocationSearchResultsModelObject.conferenceRoomSearchResults.modify())()
{
  return nullsub_1;
}

uint64_t EventLocationSearchResultsModelObject.init(contactsSearchResults:recentsSearchResults:frequentsSearchResults:eventsSearchResults:textualSearchResults:conferenceRoomSearchResults:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, _QWORD *a7@<X8>)
{
  *a7 = result;
  a7[1] = a2;
  a7[2] = a3;
  a7[3] = a4;
  a7[4] = a5;
  a7[5] = a6;
  return result;
}

uint64_t EventLocationSearchResultsModelObject.hash(into:)(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v4 = *v1;
  v3 = v1[1];
  v6 = v1[2];
  v5 = v1[3];
  v8 = v1[4];
  v7 = v1[5];
  if (*v1)
  {
    sub_1B8B9C980();
    v9 = *(_QWORD *)(v4 + 16);
    sub_1B8B9C974();
    if (v9)
    {
      swift_bridgeObjectRetain();
      EventLocationModelObject.hash(into:)();
      v10 = v9 - 1;
      if (v10)
      {
        v11 = v4 + 208;
        do
        {
          EventLocationModelObject.hash(into:)();
          v11 += 176;
          --v10;
        }
        while (v10);
      }
      swift_bridgeObjectRelease();
    }
    if (v3)
    {
LABEL_8:
      sub_1B8B9C980();
      swift_bridgeObjectRetain();
      sub_1B8B51810(a1, v3);
      swift_bridgeObjectRelease();
      if (v6)
        goto LABEL_9;
LABEL_30:
      sub_1B8B9C980();
      if (v5)
        goto LABEL_15;
LABEL_31:
      sub_1B8B9C980();
      if (v8)
        goto LABEL_21;
      goto LABEL_32;
    }
  }
  else
  {
    sub_1B8B9C980();
    if (v3)
      goto LABEL_8;
  }
  sub_1B8B9C980();
  if (!v6)
    goto LABEL_30;
LABEL_9:
  sub_1B8B9C980();
  v12 = *(_QWORD *)(v6 + 16);
  sub_1B8B9C974();
  if (v12)
  {
    swift_bridgeObjectRetain();
    EventLocationModelObject.hash(into:)();
    v13 = v12 - 1;
    if (v13)
    {
      v14 = v6 + 208;
      do
      {
        EventLocationModelObject.hash(into:)();
        v14 += 176;
        --v13;
      }
      while (v13);
    }
    swift_bridgeObjectRelease();
  }
  if (!v5)
    goto LABEL_31;
LABEL_15:
  sub_1B8B9C980();
  v15 = *(_QWORD *)(v5 + 16);
  sub_1B8B9C974();
  if (v15)
  {
    swift_bridgeObjectRetain();
    EventLocationModelObject.hash(into:)();
    v16 = v15 - 1;
    if (v16)
    {
      v17 = v5 + 208;
      do
      {
        EventLocationModelObject.hash(into:)();
        v17 += 176;
        --v16;
      }
      while (v16);
    }
    swift_bridgeObjectRelease();
  }
  if (v8)
  {
LABEL_21:
    sub_1B8B9C980();
    v18 = *(_QWORD *)(v8 + 16);
    sub_1B8B9C974();
    if (v18)
    {
      swift_bridgeObjectRetain();
      EventLocationModelObject.hash(into:)();
      v19 = v18 - 1;
      if (v19)
      {
        v20 = v8 + 208;
        do
        {
          EventLocationModelObject.hash(into:)();
          v20 += 176;
          --v19;
        }
        while (v19);
      }
      swift_bridgeObjectRelease();
    }
    if (v7)
      goto LABEL_27;
    return sub_1B8B9C980();
  }
LABEL_32:
  sub_1B8B9C980();
  if (v7)
  {
LABEL_27:
    sub_1B8B9C980();
    swift_bridgeObjectRetain();
    sub_1B8B51634(a1, v7);
    return swift_bridgeObjectRelease();
  }
  return sub_1B8B9C980();
}

uint64_t sub_1B8B89614(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_1B8B89650 + 4 * byte_1B8BAE630[a1]))(0xD000000000000015, 0x80000001B8BB8CE0);
}

unint64_t sub_1B8B89650()
{
  return 0xD000000000000014;
}

void sub_1B8B89698()
{
  JUMPOUT(0x1B8B896A4);
}

uint64_t sub_1B8B896B0()
{
  unsigned __int8 *v0;

  return sub_1B8B89614(*v0);
}

uint64_t sub_1B8B896B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1B8B8A890(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1B8B896DC()
{
  sub_1B8B8A218();
  return sub_1B8B9C9E0();
}

uint64_t sub_1B8B89704()
{
  sub_1B8B8A218();
  return sub_1B8B9C9EC();
}

uint64_t EventLocationSearchResultsModelObject.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1BE5D8);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *v1;
  v8 = v1[1];
  v16 = v1[2];
  v17 = v8;
  v10 = v1[3];
  v14 = v1[4];
  v15 = v10;
  v13 = v1[5];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1B8B8A218();
  sub_1B8B9C9C8();
  v19 = v9;
  v18 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1BE5E8);
  sub_1B8B46FB0(&qword_1EF1BE5F0, &qword_1EF1BE5E8, (uint64_t (*)(void))sub_1B8B7BC94, MEMORY[0x1E0DEAF10]);
  sub_1B8B9C860();
  if (!v2)
  {
    v11 = v16;
    v19 = v17;
    v18 = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1BE5F8);
    sub_1B8B8A25C(&qword_1EF1BE600, &qword_1EF1BE608, (uint64_t)&protocol conformance descriptor for <> EventRecentLocation<A, B>, MEMORY[0x1E0DEAF10]);
    sub_1B8B9C860();
    v19 = v11;
    v18 = 2;
    sub_1B8B9C860();
    v19 = v15;
    v18 = 3;
    sub_1B8B9C860();
    v19 = v14;
    v18 = 4;
    sub_1B8B9C860();
    v19 = v13;
    v18 = 5;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1BE620);
    sub_1B8B46FB0(&qword_1EF1BE628, &qword_1EF1BE620, (uint64_t (*)(void))sub_1B8B8A31C, MEMORY[0x1E0DEAF10]);
    sub_1B8B9C860();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t EventLocationSearchResultsModelObject.hashValue.getter()
{
  __int128 *v0;
  __int128 v1;
  _BYTE v3[72];
  __int128 v4;
  __int128 v5;
  __int128 v6;

  v1 = v0[1];
  v4 = *v0;
  v5 = v1;
  v6 = v0[2];
  sub_1B8B9C968();
  EventLocationSearchResultsModelObject.hash(into:)((uint64_t)v3);
  return sub_1B8B9C998();
}

uint64_t EventLocationSearchResultsModelObject.init(from:)@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  char v21;
  uint64_t v22;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1BE630);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1B8B8A218();
  sub_1B8B9C9B0();
  if (!v2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1BE5E8);
    v21 = 0;
    sub_1B8B46FB0(&qword_1EF1BE638, &qword_1EF1BE5E8, (uint64_t (*)(void))sub_1B8B7BED4, MEMORY[0x1E0DEAF40]);
    sub_1B8B9C7D0();
    v19 = a2;
    v10 = v22;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1BE5F8);
    v21 = 1;
    sub_1B8B8A25C(&qword_1EF1BE640, &qword_1EF1BE648, (uint64_t)"!11.", MEMORY[0x1E0DEAF40]);
    v20 = v10;
    swift_bridgeObjectRetain();
    sub_1B8B9C7D0();
    v11 = v22;
    v21 = 2;
    swift_bridgeObjectRetain();
    sub_1B8B9C7D0();
    v18 = v11;
    v12 = v22;
    v21 = 3;
    swift_bridgeObjectRetain();
    sub_1B8B9C7D0();
    v13 = v22;
    v21 = 4;
    swift_bridgeObjectRetain();
    sub_1B8B9C7D0();
    v14 = v22;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1BE620);
    v21 = 5;
    sub_1B8B46FB0(&qword_1EF1BE650, &qword_1EF1BE620, (uint64_t (*)(void))sub_1B8B8A2D8, MEMORY[0x1E0DEAF40]);
    swift_bridgeObjectRetain();
    sub_1B8B9C7D0();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    v15 = v22;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v16 = v19;
    v17 = v18;
    *v19 = v20;
    v16[1] = v17;
    v16[2] = v12;
    v16[3] = v13;
    v16[4] = v14;
    v16[5] = v15;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B8B89F2C()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1B8B89F34()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1B8B89F3C()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1B8B89F44()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1B8B89F4C()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1B8B89F54()
{
  __int128 *v0;
  __int128 v1;
  _BYTE v3[72];
  __int128 v4;
  __int128 v5;
  __int128 v6;

  v1 = v0[1];
  v4 = *v0;
  v5 = v1;
  v6 = v0[2];
  sub_1B8B9C968();
  EventLocationSearchResultsModelObject.hash(into:)((uint64_t)v3);
  return sub_1B8B9C998();
}

uint64_t sub_1B8B89FA8()
{
  __int128 *v0;
  __int128 v1;
  _BYTE v3[72];
  __int128 v4;
  __int128 v5;
  __int128 v6;

  v1 = v0[1];
  v4 = *v0;
  v5 = v1;
  v6 = v0[2];
  sub_1B8B9C968();
  EventLocationSearchResultsModelObject.hash(into:)((uint64_t)v3);
  return sub_1B8B9C998();
}

uint64_t sub_1B8B89FF4@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return EventLocationSearchResultsModelObject.init(from:)(a1, a2);
}

uint64_t sub_1B8B8A008(_QWORD *a1)
{
  return EventLocationSearchResultsModelObject.encode(to:)(a1);
}

uint64_t _s13CalendarUIKit37EventLocationSearchResultsModelObjectV2eeoiySbAC_ACtFZ_0(_QWORD *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  BOOL v17;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v2 = a1[1];
  v3 = a1[2];
  v4 = a1[5];
  v5 = *a2;
  v6 = a2[1];
  v8 = a2[2];
  v7 = a2[3];
  v9 = a2[5];
  if (*a1)
  {
    if (!v5)
      return 0;
    v24 = a1[4];
    v25 = a1[3];
    v23 = a2[4];
    swift_bridgeObjectRetain();
    v10 = swift_bridgeObjectRetain();
    v11 = sub_1B8B87BEC(v10, v5);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (!v11)
      return 0;
  }
  else
  {
    v24 = a1[4];
    v25 = a1[3];
    v23 = a2[4];
    if (v5)
      return 0;
  }
  if (v2)
  {
    if (!v6)
      return 0;
    swift_bridgeObjectRetain();
    v12 = swift_bridgeObjectRetain();
    v13 = sub_1B8B87CD4(v12, v6);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v13 & 1) == 0)
      return 0;
  }
  else if (v6)
  {
    return 0;
  }
  if (v3)
  {
    if (!v8)
      return 0;
    v14 = v4;
    v15 = v9;
    swift_bridgeObjectRetain();
    v16 = swift_bridgeObjectRetain();
    v17 = sub_1B8B87BEC(v16, v8);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (!v17)
      return 0;
  }
  else
  {
    v14 = v4;
    v15 = v9;
    if (v8)
      return 0;
  }
  if (v25)
  {
    if (!v7)
      return 0;
    swift_bridgeObjectRetain();
    v18 = swift_bridgeObjectRetain();
    v19 = sub_1B8B87BEC(v18, v7);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (!v19)
      return 0;
  }
  else if (v7)
  {
    return 0;
  }
  if (v24)
  {
    if (!v23)
      return 0;
    swift_bridgeObjectRetain();
    v20 = swift_bridgeObjectRetain();
    v21 = sub_1B8B87BEC(v20, v23);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (!v21)
      return 0;
  }
  else if (v23)
  {
    return 0;
  }
  if (v14)
  {
    if (v15 && (sub_1B8B88344(v14, v15) & 1) != 0)
      return 1;
  }
  else if (!v15)
  {
    return 1;
  }
  return 0;
}

unint64_t sub_1B8B8A218()
{
  unint64_t result;

  result = qword_1EF1BE5E0;
  if (!qword_1EF1BE5E0)
  {
    result = MEMORY[0x1BCCB79D0](&unk_1B8BAE81C, &type metadata for EventLocationSearchResultsModelObject.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF1BE5E0);
  }
  return result;
}

uint64_t sub_1B8B8A25C(unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;

  result = *a1;
  if (!result)
  {
    v9 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EF1BE5F8);
    v10 = sub_1B8B8A360(a2, a3);
    result = MEMORY[0x1BCCB79D0](a4, v9, &v10);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1B8B8A2D8()
{
  unint64_t result;

  result = qword_1EF1BE610;
  if (!qword_1EF1BE610)
  {
    result = MEMORY[0x1BCCB79D0](&protocol conformance descriptor for EventConferenceRoomModelObject, &type metadata for EventConferenceRoomModelObject);
    atomic_store(result, (unint64_t *)&qword_1EF1BE610);
  }
  return result;
}

unint64_t sub_1B8B8A31C()
{
  unint64_t result;

  result = qword_1EF1BE618;
  if (!qword_1EF1BE618)
  {
    result = MEMORY[0x1BCCB79D0](&protocol conformance descriptor for EventConferenceRoomModelObject, &type metadata for EventConferenceRoomModelObject);
    atomic_store(result, (unint64_t *)&qword_1EF1BE618);
  }
  return result;
}

uint64_t sub_1B8B8A360(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;
  _QWORD v6[4];

  result = *a1;
  if (!result)
  {
    v5 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EF1BDA88);
    v6[0] = sub_1B8B7BED4();
    v6[1] = sub_1B8B7BC94();
    v6[2] = sub_1B8B8A2D8();
    v6[3] = sub_1B8B8A31C();
    result = MEMORY[0x1BCCB79D0](a2, v5, v6);
    atomic_store(result, a1);
  }
  return result;
}

_UNKNOWN **sub_1B8B8A3E8()
{
  return &protocol witness table for EventConferenceRoomModelObject;
}

unint64_t sub_1B8B8A3F8()
{
  unint64_t result;

  result = qword_1EF1BE658;
  if (!qword_1EF1BE658)
  {
    result = MEMORY[0x1BCCB79D0](&protocol conformance descriptor for EventLocationSearchResultsModelObject, &type metadata for EventLocationSearchResultsModelObject);
    atomic_store(result, (unint64_t *)&qword_1EF1BE658);
  }
  return result;
}

uint64_t destroy for EventLocationSearchResultsModelObject()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for EventLocationSearchResultsModelObject(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for EventLocationSearchResultsModelObject(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *assignWithTake for EventLocationSearchResultsModelObject(_OWORD *a1, _OWORD *a2)
{
  swift_bridgeObjectRelease();
  *a1 = *a2;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for EventLocationSearchResultsModelObject(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *((_BYTE *)a1 + 48))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for EventLocationSearchResultsModelObject(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 48) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 48) = 0;
    if (a2)
      *(_QWORD *)result = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for EventLocationSearchResultsModelObject()
{
  return &type metadata for EventLocationSearchResultsModelObject;
}

uint64_t storeEnumTagSinglePayload for EventLocationSearchResultsModelObject.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_1B8B8A738 + 4 * byte_1B8BAE63B[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_1B8B8A76C + 4 * byte_1B8BAE636[v4]))();
}

uint64_t sub_1B8B8A76C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B8B8A774(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1B8B8A77CLL);
  return result;
}

uint64_t sub_1B8B8A788(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1B8B8A790);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_1B8B8A794(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B8B8A79C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for EventLocationSearchResultsModelObject.CodingKeys()
{
  return &type metadata for EventLocationSearchResultsModelObject.CodingKeys;
}

unint64_t sub_1B8B8A7BC()
{
  unint64_t result;

  result = qword_1EF1BE660;
  if (!qword_1EF1BE660)
  {
    result = MEMORY[0x1BCCB79D0](&unk_1B8BAE7F4, &type metadata for EventLocationSearchResultsModelObject.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF1BE660);
  }
  return result;
}

unint64_t sub_1B8B8A804()
{
  unint64_t result;

  result = qword_1EF1BE668;
  if (!qword_1EF1BE668)
  {
    result = MEMORY[0x1BCCB79D0](&unk_1B8BAE764, &type metadata for EventLocationSearchResultsModelObject.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF1BE668);
  }
  return result;
}

unint64_t sub_1B8B8A84C()
{
  unint64_t result;

  result = qword_1EF1BE670;
  if (!qword_1EF1BE670)
  {
    result = MEMORY[0x1BCCB79D0](&unk_1B8BAE78C, &type metadata for EventLocationSearchResultsModelObject.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF1BE670);
  }
  return result;
}

uint64_t sub_1B8B8A890(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000015 && a2 == 0x80000001B8BB8CE0 || (sub_1B8B9C8D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001B8BB8D00 || (sub_1B8B9C8D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000001B8BB8D20 || (sub_1B8B9C8D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001B8BB8D40 || (sub_1B8B9C8D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001B8BB8D60 || (sub_1B8B9C8D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD00000000000001BLL && a2 == 0x80000001B8BB8D80)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    v5 = sub_1B8B9C8D8();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 5;
    else
      return 6;
  }
}

uint64_t sub_1B8B8AAD0(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  uint64_t v18;
  uint64_t v19;

  v2 = *(void **)(a1 + 200);
  v18 = *(_QWORD *)(a1 + 192);
  v19 = *(_QWORD *)(a1 + 184);
  v3 = *(_QWORD *)(a1 + 208);
  v4 = *(_QWORD *)(a1 + 216);
  v5 = *(_QWORD *)(a1 + 224);
  v6 = *(_QWORD *)(a1 + 232);
  v7 = *(_QWORD *)(a1 + 240);
  v16 = *(_OWORD *)(a1 + 264);
  v17 = *(_OWORD *)(a1 + 248);
  v15 = *(_OWORD *)(a1 + 280);
  v13 = *(_OWORD *)(a1 + 312);
  v14 = *(_OWORD *)(a1 + 296);
  v12 = *(_OWORD *)(a1 + 328);
  v9 = *(_QWORD *)(a1 + 344);
  v8 = *(_QWORD *)(a1 + 352);
  v10 = *(_BYTE *)(a1 + 360);
  sub_1B8B54798(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(void **)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_QWORD *)(a1 + 128), *(_QWORD *)(a1 + 136), *(_QWORD *)(a1 + 144),
    *(_QWORD *)(a1 + 152),
    *(_QWORD *)(a1 + 160),
    *(_QWORD *)(a1 + 168),
    *(_BYTE *)(a1 + 176));
  sub_1B8B54798(v19, v18, v2, v3, v4, v5, v6, v7, v17, *((unint64_t *)&v17 + 1), v16, *((uint64_t *)&v16 + 1), v15, *((uint64_t *)&v15 + 1), v14, *((uint64_t *)&v14 + 1), v13, *((uint64_t *)&v13 + 1), v12,
    *((uint64_t *)&v12 + 1),
    v9,
    v8,
    v10);
  return a1;
}

uint64_t dispatch thunk of EventVirtualConferenceModel.title.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of EventVirtualConferenceModel.joinMethods.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of EventVirtualConferenceModel.conferenceDetails.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of EventVirtualConferenceModel.serializationBlockTitle.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t dispatch thunk of EventVirtualConferenceModel.isWritable.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t dispatch thunk of EventVirtualConferenceModel.source.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 64))();
}

uint64_t dispatch thunk of EventVirtualConferenceModel.firstPhoneNumber.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 72))();
}

uint64_t dispatch thunk of EventVirtualConferenceModel.urlWithAllowedScheme.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 80))();
}

uint64_t dispatch thunk of EventVirtualConferenceJoinMethodModel.title.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of EventVirtualConferenceJoinMethodModel.url.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of EventVirtualConferenceJoinMethodModel.isBroadcast.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t EventParticipantModel.nameUsingAddressAsBackup.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v23;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1B3020);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 24))(a1, a2);
  if (v8)
  {
    v9 = v7;
    v10 = HIBYTE(v8) & 0xF;
    if ((v8 & 0x2000000000000000) == 0)
      v10 = v7 & 0xFFFFFFFFFFFFLL;
    if (v10)
      return v9;
    swift_bridgeObjectRelease();
  }
  v11 = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 32))(a1, a2);
  if (v12)
  {
    v9 = v11;
    v13 = HIBYTE(v12) & 0xF;
    if ((v12 & 0x2000000000000000) == 0)
      v13 = v11 & 0xFFFFFFFFFFFFLL;
    if (v13)
      return v9;
    swift_bridgeObjectRelease();
  }
  v14 = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 40))(a1, a2);
  if (v15)
  {
    v9 = v14;
    v16 = HIBYTE(v15) & 0xF;
    if ((v15 & 0x2000000000000000) == 0)
      v16 = v14 & 0xFFFFFFFFFFFFLL;
    if (v16)
      return v9;
    swift_bridgeObjectRelease();
  }
  (*(void (**)(uint64_t, uint64_t))(a2 + 48))(a1, a2);
  v17 = sub_1B8B9B054();
  v18 = *(_QWORD *)(v17 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v6, 1, v17) == 1)
  {
    sub_1B8B23FD4((uint64_t)v6);
    return 0;
  }
  v9 = sub_1B8B9B018();
  v20 = v19;
  (*(void (**)(char *, uint64_t))(v18 + 8))(v6, v17);
  v21 = HIBYTE(v20) & 0xF;
  if ((v20 & 0x2000000000000000) == 0)
    v21 = v9 & 0xFFFFFFFFFFFFLL;
  if (!v21)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  return v9;
}

uint64_t sub_1B8B8ADFC()
{
  unsigned __int8 v1;

  sub_1B8AE1FCC();
  sub_1B8B9B6F0();
  return v1;
}

ValueMetadata *type metadata accessor for EditableKey()
{
  return &type metadata for EditableKey;
}

uint64_t sub_1B8B8AE44()
{
  sub_1B8B8AE94();
  return sub_1B8B9B4D4();
}

unint64_t sub_1B8B8AE94()
{
  unint64_t result;

  result = qword_1EF1BE678;
  if (!qword_1EF1BE678)
  {
    result = MEMORY[0x1BCCB79D0](&unk_1B8BAED70, &type metadata for EventEditorMutability);
    atomic_store(result, (unint64_t *)&qword_1EF1BE678);
  }
  return result;
}

id EKVirtualConferenceModelWrapper.ekVirtualConference.getter()
{
  id *v0;

  return *v0;
}

void EKVirtualConferenceModelWrapper.ekVirtualConference.setter(void *a1)
{
  id *v1;

  *v1 = a1;
}

uint64_t (*EKVirtualConferenceModelWrapper.ekVirtualConference.modify())()
{
  return nullsub_1;
}

uint64_t EKVirtualConferenceModelWrapper.title.getter()
{
  return sub_1B8AED0FC((SEL *)&selRef_title);
}

uint64_t EKVirtualConferenceModelWrapper.joinMethods.getter()
{
  id *v0;
  id v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  id v7;
  id v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;

  v1 = objc_msgSend(*v0, sel_joinMethods);
  sub_1B8B8B09C();
  v2 = sub_1B8B9C2F0();

  if (!(v2 >> 62))
  {
    v3 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v3)
      goto LABEL_3;
LABEL_13:
    swift_bridgeObjectRelease();
    return MEMORY[0x1E0DEE9D8];
  }
  swift_bridgeObjectRetain();
  v3 = sub_1B8B9C728();
  swift_bridgeObjectRelease();
  if (!v3)
    goto LABEL_13;
LABEL_3:
  v11 = MEMORY[0x1E0DEE9D8];
  result = sub_1B8B37358(0, v3 & ~(v3 >> 63), 0);
  if ((v3 & 0x8000000000000000) == 0)
  {
    v5 = 0;
    v6 = v11;
    do
    {
      if ((v2 & 0xC000000000000001) != 0)
        v7 = (id)MEMORY[0x1BCCB6800](v5, v2);
      else
        v7 = *(id *)(v2 + 8 * v5 + 32);
      v8 = v7;
      v10 = *(_QWORD *)(v11 + 16);
      v9 = *(_QWORD *)(v11 + 24);
      if (v10 >= v9 >> 1)
        sub_1B8B37358(v9 > 1, v10 + 1, 1);
      ++v5;
      *(_QWORD *)(v11 + 16) = v10 + 1;
      *(_QWORD *)(v11 + 8 * v10 + 32) = v8;
    }
    while (v3 != v5);
    swift_bridgeObjectRelease();
    return v6;
  }
  __break(1u);
  return result;
}

unint64_t sub_1B8B8B09C()
{
  unint64_t result;

  result = qword_1EF1BE680[0];
  if (!qword_1EF1BE680[0])
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, qword_1EF1BE680);
  }
  return result;
}

uint64_t EKVirtualConferenceModelWrapper.conferenceDetails.getter()
{
  return sub_1B8AED0FC((SEL *)&selRef_conferenceDetails);
}

uint64_t EKVirtualConferenceModelWrapper.serializationBlockTitle.getter()
{
  return sub_1B8AED0FC((SEL *)&selRef_serializationBlockTitle);
}

id EKVirtualConferenceModelWrapper.isWritable.getter()
{
  id *v0;

  return objc_msgSend(*v0, sel_isWritable);
}

id EKVirtualConferenceModelWrapper.source.getter()
{
  id *v0;

  return objc_msgSend(*v0, sel_source);
}

uint64_t EKVirtualConferenceModelWrapper.firstPhoneNumber.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1B8B8B138((SEL *)&selRef_firstPhoneNumber, a1);
}

uint64_t EKVirtualConferenceModelWrapper.urlWithAllowedScheme.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1B8B8B138((SEL *)&selRef_urlWithAllowedScheme, a1);
}

uint64_t sub_1B8B8B138@<X0>(SEL *a1@<X0>, uint64_t a2@<X8>)
{
  id *v2;
  id v4;
  void *v5;
  uint64_t v6;
  uint64_t (*v7)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;

  v4 = objc_msgSend(*v2, *a1);
  if (v4)
  {
    v5 = v4;
    sub_1B8B9B030();

    v6 = sub_1B8B9B054();
    v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56);
    v8 = a2;
    v9 = 0;
  }
  else
  {
    v6 = sub_1B8B9B054();
    v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56);
    v8 = a2;
    v9 = 1;
  }
  return v7(v8, v9, 1, v6);
}

uint64_t sub_1B8B8B1C0(uint64_t a1, uint64_t a2)
{
  return sub_1B8AED284(a1, a2, (SEL *)&selRef_conferenceDetails);
}

uint64_t sub_1B8B8B1CC(uint64_t a1, uint64_t a2)
{
  return sub_1B8AED284(a1, a2, (SEL *)&selRef_serializationBlockTitle);
}

id sub_1B8B8B1D8()
{
  id *v0;

  return objc_msgSend(*v0, sel_source);
}

uint64_t sub_1B8B8B1E8@<X0>(uint64_t a1@<X8>)
{
  return sub_1B8B8B200((SEL *)&selRef_firstPhoneNumber, a1);
}

uint64_t sub_1B8B8B1F4@<X0>(uint64_t a1@<X8>)
{
  return sub_1B8B8B200((SEL *)&selRef_urlWithAllowedScheme, a1);
}

uint64_t sub_1B8B8B200@<X0>(SEL *a1@<X2>, uint64_t a2@<X8>)
{
  id *v2;
  id v4;
  void *v5;
  uint64_t v6;
  uint64_t (*v7)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;

  v4 = objc_msgSend(*v2, *a1);
  if (v4)
  {
    v5 = v4;
    sub_1B8B9B030();

    v6 = sub_1B8B9B054();
    v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56);
    v8 = a2;
    v9 = 0;
  }
  else
  {
    v6 = sub_1B8B9B054();
    v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56);
    v8 = a2;
    v9 = 1;
  }
  return v7(v8, v9, 1, v6);
}

uint64_t (*EKVirtualConferenceJoinMethodModelWrapper.ekVirtualConferenceJoinMethod.modify())()
{
  return nullsub_1;
}

uint64_t EKVirtualConferenceJoinMethodModelWrapper.title.getter()
{
  return sub_1B8AED0FC((SEL *)&selRef_title);
}

uint64_t EKVirtualConferenceJoinMethodModelWrapper.url.getter@<X0>(uint64_t a1@<X8>)
{
  id *v1;
  id v3;
  uint64_t v4;

  v3 = objc_msgSend(*v1, "URL");
  sub_1B8B9B030();

  v4 = sub_1B8B9B054();
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, 0, 1, v4);
}

id EKVirtualConferenceJoinMethodModelWrapper.isBroadcast.getter()
{
  id *v0;

  return objc_msgSend(*v0, sel_isBroadcast);
}

id sub_1B8B8B320()
{
  id *v0;

  return objc_msgSend(*v0, sel_isBroadcast);
}

_UNKNOWN **sub_1B8B8B340()
{
  return &protocol witness table for EKVirtualConferenceJoinMethodModelWrapper;
}

ValueMetadata *type metadata accessor for EKVirtualConferenceModelWrapper()
{
  return &type metadata for EKVirtualConferenceModelWrapper;
}

ValueMetadata *type metadata accessor for EKVirtualConferenceJoinMethodModelWrapper()
{
  return &type metadata for EKVirtualConferenceJoinMethodModelWrapper;
}

uint64_t sub_1B8B8B374()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1B8B8B3F4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  _QWORD *v12;
  _QWORD *v13;

  v4 = a1;
  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0 || ((((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16 > 0x18)
  {
    v9 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
    swift_retain();
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    v10 = (_QWORD *)(((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    v11 = (_QWORD *)(((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    *v10 = *v11;
    v10[1] = v11[1];
    v12 = (_QWORD *)(((unint64_t)v10 + 23) & 0xFFFFFFFFFFFFFFF8);
    v13 = (_QWORD *)(((unint64_t)v11 + 23) & 0xFFFFFFFFFFFFFFF8);
    *v12 = *v13;
    v12[1] = v13[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_1B8B8B4E0(uint64_t a1, uint64_t a2)
{
  (*(void (**)(void))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 8))();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B8B8B530(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  _QWORD *v9;
  _QWORD *v10;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 16))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_QWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_QWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *v7 = *v8;
  v7[1] = v8[1];
  v9 = (_QWORD *)(((unint64_t)v7 + 23) & 0xFFFFFFFFFFFFFFF8);
  v10 = (_QWORD *)(((unint64_t)v8 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v9 = *v10;
  v9[1] = v10[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1B8B8B5C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  _QWORD *v9;
  _QWORD *v10;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 24))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_QWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_QWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *v7 = *v8;
  v7[1] = v8[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v9 = (_QWORD *)(((unint64_t)v7 + 23) & 0xFFFFFFFFFFFFFFF8);
  v10 = (_QWORD *)(((unint64_t)v8 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v9 = *v10;
  v9[1] = v10[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1B8B8B664(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _OWORD *v7;
  _OWORD *v8;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 32))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_OWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_OWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *v7 = *v8;
  *(_OWORD *)(((unint64_t)v7 + 23) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v8 + 23) & 0xFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_1B8B8B6D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  _QWORD *v9;
  _QWORD *v10;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 40))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_QWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_QWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *v7 = *v8;
  v7[1] = v8[1];
  swift_bridgeObjectRelease();
  v9 = (_QWORD *)(((unint64_t)v7 + 23) & 0xFFFFFFFFFFFFFFF8);
  v10 = (_QWORD *)(((unint64_t)v8 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v9 = *v10;
  v9[1] = v10[1];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1B8B8B764(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  unsigned int v8;
  unsigned int v9;
  uint64_t v10;
  unint64_t v12;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  if (v5 <= 0x7FFFFFFF)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v4 + 84);
  if (!a2)
    return 0;
  v7 = *(_QWORD *)(v4 + 64);
  if (v6 >= a2)
  {
    if (v5 < 0x7FFFFFFF)
    {
      v12 = *(_QWORD *)(((a1 + v7 + 7) & 0xFFFFFFFFFFFFF8) + 8);
      if (v12 >= 0xFFFFFFFF)
        LODWORD(v12) = -1;
      return (v12 + 1);
    }
    else
    {
      return (*(uint64_t (**)(void))(v4 + 48))();
    }
  }
  else
  {
    if (((((((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16) & 0xFFFFFFF8) != 0)
      v8 = 2;
    else
      v8 = a2 - v6 + 1;
    if (v8 >= 0x10000)
      v9 = 4;
    else
      v9 = 2;
    if (v8 < 0x100)
      v9 = 1;
    if (v8 >= 2)
      v10 = v9;
    else
      v10 = 0;
    return ((uint64_t (*)(void))((char *)&loc_1B8B8B7E8 + 4 * byte_1B8BAE9C0[v10]))();
  }
}

void sub_1B8B8B86C(unsigned int *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  unsigned int v6;
  unsigned int v7;
  int v8;
  int v9;
  unsigned int v10;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v5 + 84) <= 0x7FFFFFFFu)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v5 + 84);
  if (v6 >= a3)
  {
    v9 = 0u;
    if (a2 <= v6)
      goto LABEL_17;
  }
  else
  {
    if (((((*(_DWORD *)(v5 + 64) + 7) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) == 0xFFFFFFF0)
      v7 = a3 - v6 + 1;
    else
      v7 = 2;
    if (v7 >= 0x10000)
      v8 = 4;
    else
      v8 = 2;
    if (v7 < 0x100)
      v8 = 1;
    if (v7 >= 2)
      v9 = v8;
    else
      v9 = 0;
    if (a2 <= v6)
LABEL_17:
      __asm { BR              X12 }
  }
  if (((((*(_DWORD *)(v5 + 64) + 7) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) != 0xFFFFFFF0)
  {
    v10 = ~v6 + a2;
    bzero(a1, ((((*(_QWORD *)(v5 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16);
    *a1 = v10;
  }
  __asm { BR              X10 }
}

void sub_1B8B8B968()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
  JUMPOUT(0x1B8B8B9E0);
}

void sub_1B8B8B970(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_DWORD *)(v2 + v3) = 0;
  if (a2)
    JUMPOUT(0x1B8B8B978);
  JUMPOUT(0x1B8B8B9E0);
}

void sub_1B8B8B9BC()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
  JUMPOUT(0x1B8B8B9E0);
}

void sub_1B8B8B9C4()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  *(_DWORD *)(v0 + v1) = v2;
  JUMPOUT(0x1B8B8B9E0);
}

uint64_t sub_1B8B8B9CC(uint64_t a1, int a2, unsigned int a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_WORD *)(v6 + v7) = 0;
  if (!a2)
    goto LABEL_6;
  if (a3 < 0x7FFFFFFF)
  {
    if (a2 < 0)
      JUMPOUT(0x1B8B8B9D8);
    *(_QWORD *)(((v6 + v5 + 7) & 0xFFFFFFFFFFFFFFF8) + 8) = (a2 - 1);
LABEL_6:
    JUMPOUT(0x1B8B8B9E0);
  }
  return (*(uint64_t (**)(uint64_t))(v4 + 56))(v6);
}

uint64_t type metadata accessor for OnboardingHeaderView(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for OnboardingHeaderView);
}

uint64_t sub_1B8B8BA04()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1B8B8BA38@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(char *, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD v26[2];

  v22 = a2;
  v3 = *(_QWORD *)(a1 + 16);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EF1B9338);
  sub_1B8B9B540();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EF1BE708);
  sub_1B8B9B540();
  sub_1B8B9B540();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EF1BE710);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EF1BE718);
  swift_getTupleTypeMetadata3();
  v4 = sub_1B8B9C068();
  MEMORY[0x1BCCB79D0](MEMORY[0x1E0CE0678], v4);
  v5 = sub_1B8B9BF24();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v19 - v7;
  v9 = sub_1B8B9B540();
  v20 = *(_QWORD *)(v9 - 8);
  v10 = MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v19 - v13;
  v15 = *(_QWORD *)(a1 + 24);
  v23 = v3;
  v24 = v15;
  v25 = v21;
  sub_1B8B9B7A4();
  sub_1B8B9BF18();
  sub_1B8B9B9D8();
  v16 = MEMORY[0x1BCCB79D0](MEMORY[0x1E0CDFCB8], v5);
  sub_1B8B9BCFC();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v26[0] = v16;
  v26[1] = MEMORY[0x1E0CD9750];
  MEMORY[0x1BCCB79D0](MEMORY[0x1E0CD9C18], v9, v26);
  sub_1B8B06AE4((uint64_t)v12, v9, (uint64_t)v14);
  v17 = *(void (**)(char *, uint64_t))(v20 + 8);
  v17(v12, v9);
  sub_1B8AF2470((uint64_t)v14, v9, v22);
  return ((uint64_t (*)(char *, uint64_t))v17)(v14, v9);
}

uint64_t sub_1B8B8BCC8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  id v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)(char *, uint64_t);
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  int v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t KeyPath;
  uint64_t *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char v60;
  unsigned __int8 v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  int v69;
  uint64_t v70;
  char v71;
  uint64_t v72;
  char v73;
  uint64_t v74;
  uint64_t (*v75)(char *, uint64_t);
  uint64_t v77;
  uint64_t v78;
  int v79;
  int v80;
  int v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t (*v86)(char *, uint64_t);
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  unint64_t v104;
  _QWORD v105[3];
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  __int128 v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  __int16 v119;
  char v120;
  uint64_t v121;
  uint64_t v122;
  char v123;
  uint64_t v124;
  char v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  char v130;
  uint64_t v131;
  __int16 v132;
  char v133;
  uint64_t v134[6];
  _QWORD v135[2];
  _QWORD v136[2];
  _QWORD v137[3];
  char v138;
  uint64_t v139;
  char v140;
  __int128 v141;

  v98 = a1;
  v87 = a4;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EF1B9338);
  v96 = a2;
  v6 = sub_1B8B9B540();
  v97 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v92 = (uint64_t)&v77 - v7;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EF1BE708);
  v8 = sub_1B8B9B540();
  v99 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v95 = (uint64_t)&v77 - v9;
  v101 = sub_1B8B9B540();
  v93 = *(_QWORD *)(v101 - 8);
  v10 = MEMORY[0x1E0C80A78](v101);
  v12 = (char *)&v77 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v100 = (char *)&v77 - v13;
  v14 = CUIKAppTintColor();
  v106 = MEMORY[0x1BCCB5F78](v14);
  v91 = a3;
  sub_1B8B9BC60();
  swift_release();
  v15 = objc_msgSend((id)objc_opt_self(), sel_cuik_tertiaryGroupedBackgroundColor);
  v16 = MEMORY[0x1BCCB5F78](v15);
  sub_1B8B9C014();
  sub_1B8B9B474();
  v106 = v16;
  LOWORD(v107) = 256;
  v108 = v137[2];
  LOBYTE(v109) = v138;
  v110 = v139;
  LOBYTE(v111) = v140;
  v112 = v141;
  sub_1B8B9C014();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1B90D0);
  v17 = sub_1B8ADE950(&qword_1EF1B9330, &qword_1EF1B9338, MEMORY[0x1E0CDC720]);
  v137[0] = a3;
  v137[1] = v17;
  v18 = MEMORY[0x1BCCB79D0](MEMORY[0x1E0CD9C18], v6, v137);
  sub_1B8B05AC8();
  v19 = v95;
  v20 = v92;
  sub_1B8B9BBDC();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v97 + 8))(v20, v6);
  sub_1B8B9B9E4();
  v21 = sub_1B8ADE950(&qword_1EF1BE720, &qword_1EF1BE708, MEMORY[0x1E0CDB840]);
  v136[0] = v18;
  v136[1] = v21;
  v22 = MEMORY[0x1BCCB79D0](MEMORY[0x1E0CD9C18], v8, v136);
  sub_1B8B9BCFC();
  (*(void (**)(uint64_t, uint64_t))(v99 + 8))(v19, v8);
  v135[0] = v22;
  v135[1] = MEMORY[0x1E0CD9750];
  v23 = v101;
  v85 = MEMORY[0x1BCCB79D0](MEMORY[0x1E0CD9C18], v101, v135);
  sub_1B8B06AE4((uint64_t)v12, v23, (uint64_t)v100);
  v24 = *(uint64_t (**)(char *, uint64_t))(v93 + 8);
  v94 = v12;
  v86 = v24;
  v24(v12, v23);
  v97 = type metadata accessor for OnboardingHeaderView(0, v96, v91, v25);
  v26 = (uint64_t *)(v98 + *(int *)(v97 + 36));
  v27 = v26[1];
  v106 = *v26;
  v107 = v27;
  v28 = sub_1B8ADDBE4();
  swift_bridgeObjectRetain();
  v96 = v28;
  v29 = sub_1B8B9BBAC();
  v31 = v30;
  LOBYTE(v16) = v32 & 1;
  v106 = sub_1B8B9BDC8();
  v33 = sub_1B8B9BB70();
  v35 = v34;
  LOBYTE(v22) = v36 & 1;
  sub_1B8ADDA88(v29, v31, v16);
  swift_release();
  swift_bridgeObjectRelease();
  sub_1B8B9BA20();
  v37 = sub_1B8B9BB94();
  v39 = v38;
  LOBYTE(v16) = v40;
  swift_release();
  sub_1B8ADDA88(v33, v35, v22);
  swift_bridgeObjectRelease();
  v41 = sub_1B8B9BB88();
  v92 = v42;
  v81 = v43;
  v99 = v44;
  sub_1B8ADDA88(v37, v39, v16 & 1);
  swift_bridgeObjectRelease();
  v80 = sub_1B8B9B9E4();
  sub_1B8B9B3E4();
  v46 = v45;
  v48 = v47;
  v50 = v49;
  v52 = v51;
  KeyPath = swift_getKeyPath();
  v54 = (uint64_t *)(v98 + *(int *)(v97 + 40));
  v55 = v54[1];
  if (v55)
  {
    v106 = *v54;
    v107 = v55;
    swift_bridgeObjectRetain();
    v56 = sub_1B8B9BBAC();
    v58 = v57;
    v95 = v59;
    v91 = v60 & 1;
    v61 = sub_1B8B9B9E4();
    sub_1B8B9B3E4();
    v97 = v63;
    v98 = v62;
    v65 = v64;
    v67 = v66;
    v84 = sub_1B8B9BDC8();
    v83 = sub_1B8B9BA38();
    v82 = swift_getKeyPath();
    v96 = swift_getKeyPath();
    v68 = v61;
    v79 = 65537;
  }
  else
  {
    v56 = 0;
    v58 = 0;
    v91 = 0;
    v95 = 0;
    v96 = 0;
    v68 = 0;
    v97 = 0;
    v98 = 0;
    v65 = 0;
    v67 = 0;
    v83 = 0;
    v84 = 0;
    v82 = 0;
    v79 = 0;
  }
  v89 = v68;
  v69 = v81 & 1;
  v70 = (uint64_t)v94;
  (*(void (**)(void))(v93 + 16))();
  v121 = v41;
  v122 = v92;
  v123 = v69;
  v71 = v69;
  v81 = v69;
  v78 = v41;
  v124 = v99;
  v125 = v80;
  v126 = v46;
  v127 = v48;
  v128 = v50;
  v129 = v52;
  v130 = 0;
  v88 = KeyPath;
  v131 = KeyPath;
  v132 = 1;
  v133 = 1;
  v134[0] = v70;
  v134[1] = (uint64_t)&v121;
  v106 = v56;
  v107 = v58;
  v72 = v95;
  v108 = v91;
  v109 = v95;
  v110 = v68;
  v111 = v98;
  v77 = v65;
  *(_QWORD *)&v112 = v65;
  *((_QWORD *)&v112 + 1) = v67;
  v90 = v67;
  v113 = v97;
  v114 = 0;
  v115 = v84;
  v116 = v82;
  v117 = v83;
  v118 = v96;
  v120 = BYTE2(v79);
  v119 = v79;
  v134[2] = (uint64_t)&v106;
  sub_1B8ADD7C0(v41, v92, v71);
  swift_bridgeObjectRetain();
  swift_retain();
  v73 = v91;
  sub_1B8B8C590(v56, v58, v91, v72);
  v105[0] = v101;
  v105[1] = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1BE710);
  v105[2] = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1BE718);
  v102 = v85;
  v103 = sub_1B8B674F8(&qword_1EF1BE728, &qword_1EF1BE710, (uint64_t (*)(void))sub_1B8B8C5F8);
  v104 = sub_1B8B8C67C();
  sub_1B8B6D0D0(v134, 3uLL, (uint64_t)v105);
  sub_1B8B8C884(v56, v58, v73, v95);
  sub_1B8ADDA88(v78, v92, v81);
  swift_release();
  swift_bridgeObjectRelease();
  v74 = v101;
  v75 = v86;
  v86(v100, v101);
  sub_1B8B8C884(v106, v107, v108, v109);
  sub_1B8ADDA88(v121, v122, v123);
  swift_release();
  swift_bridgeObjectRelease();
  return v75(v94, v74);
}

uint64_t sub_1B8B8C538@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;

  return sub_1B8B8BCC8(v1[4], v1[2], v1[3], a1);
}

uint64_t sub_1B8B8C544@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1B8B9B648();
  *a1 = result;
  return result;
}

uint64_t sub_1B8B8C56C()
{
  return sub_1B8B9B654();
}

uint64_t sub_1B8B8C590(uint64_t result, uint64_t a2, char a3, uint64_t a4)
{
  if (a4)
  {
    sub_1B8ADD7C0(result, a2, a3 & 1);
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    return swift_retain();
  }
  return result;
}

unint64_t sub_1B8B8C5F8()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1EF1BE730;
  if (!qword_1EF1BE730)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EF1BE738);
    v2[0] = sub_1B8B182E0();
    v2[1] = sub_1B8ADE950(&qword_1EF1BE740, &qword_1EF1BE748, MEMORY[0x1E0CDCF88]);
    result = MEMORY[0x1BCCB79D0](MEMORY[0x1E0CD9C18], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EF1BE730);
  }
  return result;
}

unint64_t sub_1B8B8C67C()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_1EF1BE750;
  if (!qword_1EF1BE750)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EF1BE718);
    v2 = sub_1B8B674F8(&qword_1EF1BE758, &qword_1EF1BE760, (uint64_t (*)(void))sub_1B8B8C6F8);
    result = MEMORY[0x1BCCB79D0](MEMORY[0x1E0CE07A0], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_1EF1BE750);
  }
  return result;
}

unint64_t sub_1B8B8C6F8()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1EF1BE768;
  if (!qword_1EF1BE768)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EF1BE770);
    v2[0] = sub_1B8B8C77C();
    v2[1] = sub_1B8ADE950(&qword_1EF1BE740, &qword_1EF1BE748, MEMORY[0x1E0CDCF88]);
    result = MEMORY[0x1BCCB79D0](MEMORY[0x1E0CD9C18], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EF1BE768);
  }
  return result;
}

unint64_t sub_1B8B8C77C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1EF1BE778;
  if (!qword_1EF1BE778)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EF1BE780);
    v2[0] = sub_1B8B8C800();
    v2[1] = sub_1B8ADE950(&qword_1EF1B9350, &qword_1EF1B9358, MEMORY[0x1E0CDCF88]);
    result = MEMORY[0x1BCCB79D0](MEMORY[0x1E0CD9C18], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EF1BE778);
  }
  return result;
}

unint64_t sub_1B8B8C800()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1EF1BE788;
  if (!qword_1EF1BE788)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_1EF1BE790);
    v2[0] = sub_1B8B182E0();
    v2[1] = sub_1B8ADE950(&qword_1EF1B9330, &qword_1EF1B9338, MEMORY[0x1E0CDC720]);
    result = MEMORY[0x1BCCB79D0](MEMORY[0x1E0CD9C18], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EF1BE788);
  }
  return result;
}

uint64_t sub_1B8B8C884(uint64_t result, uint64_t a2, char a3, uint64_t a4)
{
  if (a4)
  {
    sub_1B8ADDA88(result, a2, a3 & 1);
    swift_release();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    return swift_release();
  }
  return result;
}

uint64_t sub_1B8B8C8F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD v4[2];

  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EF1B9338);
  sub_1B8B9B540();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EF1BE708);
  sub_1B8B9B540();
  sub_1B8B9B540();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EF1BE710);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EF1BE718);
  swift_getTupleTypeMetadata3();
  v0 = sub_1B8B9C068();
  MEMORY[0x1BCCB79D0](MEMORY[0x1E0CE0678], v0);
  v1 = sub_1B8B9BF24();
  v2 = sub_1B8B9B540();
  v4[0] = MEMORY[0x1BCCB79D0](MEMORY[0x1E0CDFCB8], v1);
  v4[1] = MEMORY[0x1E0CD9750];
  return MEMORY[0x1BCCB79D0](MEMORY[0x1E0CD9C18], v2, v4);
}

uint64_t sub_1B8B8CA28@<X0>(_QWORD *a1@<X8>)
{
  return sub_1B8B8CF54(a1);
}

uint64_t sub_1B8B8CA3C()
{
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  swift_retain();
  return sub_1B8B9B36C();
}

uint64_t sub_1B8B8CAB4@<X0>(_QWORD *a1@<X8>)
{
  return sub_1B8B8D2A4(a1);
}

uint64_t sub_1B8B8CAC8()
{
  return sub_1B8B8D330();
}

uint64_t sub_1B8B8CADC@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_1B8B9B360();
  swift_release();
  result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_1B8B8CB58(void **a1)
{
  void *v1;
  id v2;

  v1 = *a1;
  swift_getKeyPath();
  swift_getKeyPath();
  v2 = v1;
  swift_retain();
  return sub_1B8B9B36C();
}

uint64_t sub_1B8B8CBCC@<X0>(_BYTE *a1@<X8>)
{
  return sub_1B8B8D170(a1);
}

uint64_t sub_1B8B8CBE0()
{
  return sub_1B8B8D1FC();
}

uint64_t sub_1B8B8CBF4()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1B8B9B360();
  swift_release();
  return swift_release();
}

uint64_t sub_1B8B8CC5C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  void (*v9)(char *, uint64_t, uint64_t);
  uint64_t v11;

  v2 = sub_1B8B9B0F0();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v11 - v7;
  v9 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
  v9((char *)&v11 - v7, a1, v2);
  swift_getKeyPath();
  swift_getKeyPath();
  v9(v6, (uint64_t)v8, v2);
  swift_retain();
  sub_1B8B9B36C();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v8, v2);
}

double sub_1B8B8CD60@<D0>(double *a1@<X8>)
{
  double result;
  double v3;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_1B8B9B360();
  swift_release();
  swift_release();
  result = v3;
  *a1 = v3;
  return result;
}

uint64_t sub_1B8B8CDDC()
{
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  return sub_1B8B9B36C();
}

uint64_t sub_1B8B8CE54@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;
  char v3;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_1B8B9B360();
  swift_release();
  result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_1B8B8CED0()
{
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  return sub_1B8B9B36C();
}

uint64_t sub_1B8B8CF40@<X0>(_QWORD *a1@<X8>)
{
  return sub_1B8B8CF54(a1);
}

uint64_t sub_1B8B8CF54@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_1B8B9B360();
  swift_release();
  result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_1B8B8CFCC(void **a1)
{
  void *v1;
  id v2;

  v1 = *a1;
  swift_getKeyPath();
  swift_getKeyPath();
  v2 = v1;
  swift_retain();
  return sub_1B8B9B36C();
}

uint64_t sub_1B8B8D040@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_1B8B9B360();
  swift_release();
  result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_1B8B8D0BC()
{
  swift_getKeyPath();
  swift_getKeyPath();
  swift_bridgeObjectRetain();
  swift_retain();
  return sub_1B8B9B36C();
}

uint64_t sub_1B8B8D134@<X0>(_BYTE *a1@<X8>)
{
  return sub_1B8B8D170(a1);
}

uint64_t sub_1B8B8D148()
{
  return sub_1B8B8D1FC();
}

uint64_t sub_1B8B8D15C@<X0>(_BYTE *a1@<X8>)
{
  return sub_1B8B8D170(a1);
}

uint64_t sub_1B8B8D170@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;
  char v3;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_1B8B9B360();
  swift_release();
  result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_1B8B8D1E8()
{
  return sub_1B8B8D1FC();
}

uint64_t sub_1B8B8D1FC()
{
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  return sub_1B8B9B36C();
}

uint64_t sub_1B8B8D268@<X0>(_QWORD *a1@<X8>)
{
  return sub_1B8B8CF54(a1);
}

uint64_t sub_1B8B8D27C()
{
  return sub_1B8B903A0();
}

uint64_t sub_1B8B8D290@<X0>(_QWORD *a1@<X8>)
{
  return sub_1B8B8D2A4(a1);
}

uint64_t sub_1B8B8D2A4@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_1B8B9B360();
  swift_release();
  result = swift_release();
  *a1 = v3;
  a1[1] = v4;
  return result;
}

uint64_t sub_1B8B8D31C()
{
  return sub_1B8B8D330();
}

uint64_t sub_1B8B8D330()
{
  swift_getKeyPath();
  swift_getKeyPath();
  swift_bridgeObjectRetain();
  swift_retain();
  return sub_1B8B9B36C();
}

void sub_1B8B8D3AC(char a1)
{
  id v2;

  v2 = CUIKBundle();
  __asm { BR              X10 }
}

uint64_t sub_1B8B8D3F0()
{
  void *v0;
  uint64_t v1;

  v1 = sub_1B8B9AFD0();

  return v1;
}

uint64_t sub_1B8B8D6D8()
{
  return sub_1B8B8E078();
}

uint64_t sub_1B8B8D6EC()
{
  return sub_1B8B8E18C();
}

uint64_t sub_1B8B8D700(void *a1, uint64_t a2, uint64_t a3, char a4, char a5)
{
  uint64_t v5;
  uint64_t v6;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE *v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  id v29;
  _BYTE *v30;
  uint64_t v31;
  _BYTE v33[12];
  int v34;
  _BYTE *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  v6 = v5;
  v34 = a4 & 1;
  v10 = a5 & 1;
  v11 = sub_1B8B9C4A0();
  v12 = *(_QWORD *)(v11 - 8);
  v37 = v11;
  v38 = v12;
  MEMORY[0x1E0C80A78](v11);
  v35 = &v33[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1B2D18);
  MEMORY[0x1E0C80A78](v14);
  v16 = &v33[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1BC9F0);
  v18 = *(_QWORD *)(v17 - 8);
  MEMORY[0x1E0C80A78](v17);
  v20 = &v33[-((v19 + 15) & 0xFFFFFFFFFFFFFFF0)];
  *(_QWORD *)(v6 + 40) = MEMORY[0x1E0DEE9E8];
  v36 = v6 + 40;
  v21 = v6 + OBJC_IVAR____TtC13CalendarUIKit24CUIKEventEditorViewModel__pushAction;
  LOBYTE(v40) = 0;
  sub_1B8B9B348();
  (*(void (**)(uint64_t, _BYTE *, uint64_t))(v18 + 32))(v21, v20, v17);
  *(_QWORD *)(v6 + 24) = a2;
  *(_QWORD *)(v6 + 32) = a3;
  *(_QWORD *)(v6 + 16) = a1;
  *(_BYTE *)(v6 + 49) = v34;
  *(_BYTE *)(v6 + 48) = v10;
  swift_retain();
  v22 = a1;
  sub_1B8B90BBC(v22);
  *(_QWORD *)(v6 + 56) = v23;
  v24 = sub_1B8B9B0F0();
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v16, 1, 1, v24);
  v25 = v22;
  v26 = sub_1B8B9142C(v25, (uint64_t)v16, v10);

  swift_beginAccess();
  v39 = v26;
  type metadata accessor for EventChanges(0);
  sub_1B8B9B348();
  swift_endAccess();
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1B8B9B360();
  swift_release();
  swift_release();
  v27 = (_QWORD *)(v40 + OBJC_IVAR____TtC13CalendarUIKit12EventChanges_changeBlock);
  v28 = *(_QWORD *)(v40 + OBJC_IVAR____TtC13CalendarUIKit12EventChanges_changeBlock);
  *v27 = sub_1B8B927A8;
  v27[1] = v6;
  swift_retain();
  sub_1B8B05AB8(v28);
  swift_release();
  v29 = objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
  v30 = v35;
  sub_1B8B9C4AC();

  swift_allocObject();
  swift_weakInit();
  sub_1B8ADBDEC((unint64_t *)&qword_1EF1BEA40, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB1F30], MEMORY[0x1E0CB1F20]);
  v31 = v37;
  sub_1B8B9B390();
  swift_release();
  (*(void (**)(_BYTE *, uint64_t))(v38 + 8))(v30, v31);
  swift_beginAccess();
  sub_1B8B9B324();
  swift_endAccess();
  swift_release();

  swift_release();
  return v6;
}

uint64_t sub_1B8B8DA8C()
{
  uint64_t result;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    sub_1B8B8DAE0();
    return swift_release();
  }
  return result;
}

id sub_1B8B8DAE0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  void *v4;
  id result;
  uint64_t v6;
  uint64_t v7;
  int v8;
  id v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1B2D18);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = *(void **)(v0 + 16);
  result = objc_msgSend(v4, sel__refreshable);
  if ((_DWORD)result)
  {
    result = objc_msgSend(v4, sel_refresh);
    if ((_DWORD)result)
    {
      sub_1B8B90BBC(v4);
      *(_QWORD *)(v0 + 56) = v6;
      swift_bridgeObjectRelease();
      v7 = sub_1B8B9B0F0();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v3, 1, 1, v7);
      v8 = *(unsigned __int8 *)(v0 + 48);
      v9 = v4;
      v10 = sub_1B8B9142C(v9, (uint64_t)v3, v8);

      swift_getKeyPath();
      swift_getKeyPath();
      v14 = v10;
      swift_retain();
      sub_1B8B9B36C();
      swift_getKeyPath();
      swift_getKeyPath();
      sub_1B8B9B360();
      swift_release();
      swift_release();
      v11 = (_QWORD *)(v14 + OBJC_IVAR____TtC13CalendarUIKit12EventChanges_changeBlock);
      v12 = *(_QWORD *)(v14 + OBJC_IVAR____TtC13CalendarUIKit12EventChanges_changeBlock);
      *v11 = sub_1B8B925A4;
      v11[1] = v0;
      swift_retain();
      sub_1B8B05AB8(v12);
      return (id)swift_release();
    }
  }
  return result;
}

void sub_1B8B8DC90()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  void *v3;
  id v4;
  id v5;
  void *v6;
  id v7[2];

  v7[1] = *(id *)MEMORY[0x1E0C80C00];
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1B8B9B360();
  swift_release();
  swift_release();
  v1 = *(void **)(v0 + 16);
  sub_1B8B8EC00(v1, 1, 1);
  v2 = swift_release();
  v3 = (void *)(*(uint64_t (**)(uint64_t))(v0 + 24))(v2);
  if (v3)
  {
    v7[0] = 0;
    if (objc_msgSend(v3, sel_saveEvent_span_error_, v1, 1, v7))
    {
      v4 = v7[0];
      swift_unknownObjectRelease();
    }
    else
    {
      v5 = v7[0];
      v6 = (void *)sub_1B8B9B00C();

      swift_willThrow();
      swift_unknownObjectRelease();

    }
  }
}

uint64_t sub_1B8B8DDC0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v1 = v0 + OBJC_IVAR____TtC13CalendarUIKit24CUIKEventEditorViewModel__eventChanges;
  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF1BEA30);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  v3 = v0 + OBJC_IVAR____TtC13CalendarUIKit24CUIKEventEditorViewModel__pushAction;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1BC9F0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  return swift_deallocClassInstance();
}

uint64_t sub_1B8B8DE60@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  type metadata accessor for CUIKEventEditorViewModel(0);
  result = sub_1B8B9B330();
  *a1 = result;
  return result;
}

uint64_t sub_1B8B8DE9C()
{
  return sub_1B8B8E21C();
}

uint64_t sub_1B8B8DEB0()
{
  uint64_t v1;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_1B8B9B360();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_1B8B8DF20()
{
  unsigned __int8 v1;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_1B8B9B360();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_1B8B8DF90()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1B8B9B360();
  swift_release();
  return swift_release();
}

double sub_1B8B8DFF4()
{
  double v1;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_1B8B9B360();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_1B8B8E064()
{
  return sub_1B8B8E078();
}

uint64_t sub_1B8B8E078()
{
  uint64_t v1;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_1B8B9B360();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_1B8B8E0E0()
{
  return sub_1B8B8E078();
}

uint64_t sub_1B8B8E0F4()
{
  uint64_t v1;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_1B8B9B360();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_1B8B8E164()
{
  return sub_1B8B8E18C();
}

uint64_t sub_1B8B8E178()
{
  return sub_1B8B8E18C();
}

uint64_t sub_1B8B8E18C()
{
  unsigned __int8 v1;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_1B8B9B360();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_1B8B8E1F4()
{
  return sub_1B8B8E078();
}

uint64_t sub_1B8B8E208()
{
  return sub_1B8B8E21C();
}

uint64_t sub_1B8B8E21C()
{
  uint64_t v1;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_1B8B9B360();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_1B8B8E284(void *a1, void (*a2)(char *, uint64_t), void *a3, int a4, char *a5, void *a6, void *a7, void *a8, double a9, unsigned __int8 a10, unsigned __int8 a11, void *a12, void (*a13)(char *, uint64_t), void (*a14)(char *, uint64_t), unsigned __int8 a15)
{
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  _QWORD *v33;
  uint64_t v34;
  void *v35;
  void *v36;
  void *v37;
  void *v38;
  void (**v39)(char *, uint64_t);
  void (*v40)(char *, uint64_t);
  void *v41;
  id v42;
  id v43;
  char *v44;
  uint64_t v45;
  void (*v46)(uint64_t, uint64_t);
  id v47;
  uint64_t v48;
  id v49;
  char *v50;
  void (*v51)(char *, char *, uint64_t);
  char *v52;
  void (*v53)(char *, uint64_t);
  id v54;
  uint64_t v55;
  void (*v56)(char *, uint64_t, uint64_t, uint64_t);
  void *v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  void *v70;
  uint64_t v71;
  int v72;
  void *v73;
  void (*v74)(uint64_t, uint64_t, uint64_t);
  int v75;
  void (*v76)(char *, uint64_t);
  uint64_t v77;
  char *v78;
  char *v79;
  int v80;
  void *v81;
  void *v82;
  int v83;
  int v84;
  void *v85;
  void (*v86)(char *, uint64_t);
  char *v87;
  id v88;
  void (*v89)(char *, uint64_t);
  uint64_t v90;

  v16 = v15;
  v81 = a8;
  v82 = a7;
  v73 = a6;
  v87 = a5;
  v17 = a4;
  v72 = a4;
  v70 = a3;
  v76 = (void (*)(char *, uint64_t))a14;
  v85 = a12;
  v86 = a13;
  v83 = a10;
  v84 = a11;
  v80 = a15;
  v75 = a15 & 1;
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1BE9E8);
  MEMORY[0x1E0C80A78](v21);
  v64 = (char *)&v63 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v67 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1BE9F0);
  v66 = *(_QWORD *)(v67 - 8);
  MEMORY[0x1E0C80A78](v67);
  v65 = (char *)&v63 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = sub_1B8B9B0F0();
  v25 = *(_QWORD *)(v24 - 8);
  v68 = v24;
  v77 = v25;
  v26 = MEMORY[0x1E0C80A78](v24);
  v79 = (char *)&v63 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v26);
  v78 = (char *)&v63 - v28;
  v29 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF1BE990);
  v30 = *(_QWORD *)(v29 - 8);
  v69 = v29;
  MEMORY[0x1E0C80A78](v29);
  v32 = (char *)&v63 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)(v16 + OBJC_IVAR____TtC13CalendarUIKit12EventChanges_changeSink) = 0;
  v33 = (_QWORD *)(v16 + OBJC_IVAR____TtC13CalendarUIKit12EventChanges_changeBlock);
  *v33 = 0;
  v33[1] = 0;
  v34 = v16 + OBJC_IVAR____TtC13CalendarUIKit12EventChanges__location;
  v90 = 0;
  v71 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1BE8C8);
  sub_1B8B9B348();
  (*(void (**)(uint64_t, char *, uint64_t))(v30 + 32))(v34, v32, v29);
  *(_QWORD *)(v16 + 16) = a1;
  *(_QWORD *)(v16 + 24) = a2;
  v35 = a1;
  v36 = v70;
  *(_QWORD *)(v16 + 32) = v70;
  *(_BYTE *)(v16 + 40) = v17;
  v74 = *(void (**)(uint64_t, uint64_t, uint64_t))(v25 + 16);
  v74(v16 + OBJC_IVAR____TtC13CalendarUIKit12EventChanges_initialStartDate, (uint64_t)v87, v24);
  *(double *)(v16 + OBJC_IVAR____TtC13CalendarUIKit12EventChanges_initialEventDuration) = a9;
  v37 = v73;
  *(_QWORD *)(v16 + OBJC_IVAR____TtC13CalendarUIKit12EventChanges_initialCalendar) = v73;
  v38 = v81;
  *(_QWORD *)(v16 + OBJC_IVAR____TtC13CalendarUIKit12EventChanges_initialRepeatType) = v82;
  *(_QWORD *)(v16 + OBJC_IVAR____TtC13CalendarUIKit12EventChanges_initialAttendees) = v38;
  *(_BYTE *)(v16 + OBJC_IVAR____TtC13CalendarUIKit12EventChanges_initialAlertTrigger) = v83;
  *(_BYTE *)(v16 + OBJC_IVAR____TtC13CalendarUIKit12EventChanges_initialSecondAlertTrigger) = v84;
  *(_QWORD *)(v16 + OBJC_IVAR____TtC13CalendarUIKit12EventChanges_initialAvailability) = v85;
  v39 = (void (**)(char *, uint64_t))(v16 + OBJC_IVAR____TtC13CalendarUIKit12EventChanges_initialNotes);
  v40 = v76;
  *v39 = v86;
  v39[1] = v40;
  *(_BYTE *)(v16 + OBJC_IVAR____TtC13CalendarUIKit12EventChanges_changeSavePolicy) = v75;
  swift_beginAccess();
  v88 = v35;
  v89 = a2;
  v41 = v36;
  v42 = v36;
  v43 = v37;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v44 = v87;
  swift_bridgeObjectRetain();
  sub_1B8B9B348();
  swift_endAccess();
  v45 = v16 + OBJC_IVAR____TtC13CalendarUIKit12EventChanges__location;
  swift_beginAccess();
  v46 = *(void (**)(uint64_t, uint64_t))(v30 + 8);
  v47 = v42;
  v48 = v68;
  v49 = v47;
  v46(v45, v69);
  v88 = v41;
  sub_1B8B9B348();
  swift_endAccess();
  swift_beginAccess();
  LOBYTE(v88) = v72;
  sub_1B8B9B348();
  swift_endAccess();
  v50 = v78;
  v51 = (void (*)(char *, char *, uint64_t))v74;
  v74((uint64_t)v78, (uint64_t)v44, v48);
  swift_beginAccess();
  v52 = v50;
  v51(v79, v50, v48);
  sub_1B8B9B348();
  v53 = *(void (**)(char *, uint64_t))(v77 + 8);
  v53(v52, v48);
  swift_endAccess();
  swift_beginAccess();
  v88 = *(id *)&a9;
  sub_1B8B9B348();
  swift_endAccess();
  swift_beginAccess();
  v88 = v43;
  sub_1B8B05B9C(0, &qword_1EF1BE8F0);
  v54 = v43;
  sub_1B8B9B348();
  swift_endAccess();
  swift_beginAccess();
  v88 = v82;
  type metadata accessor for CUIKRepeatType(0);
  sub_1B8B9B348();
  swift_endAccess();
  swift_beginAccess();
  v88 = v81;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1BE908);
  sub_1B8B9B348();
  swift_endAccess();
  swift_beginAccess();
  LOBYTE(v88) = v83;
  sub_1B8B9B348();
  swift_endAccess();
  swift_beginAccess();
  LOBYTE(v88) = v84;
  sub_1B8B9B348();
  swift_endAccess();
  swift_beginAccess();
  v88 = v85;
  type metadata accessor for EKEventAvailability(0);
  sub_1B8B9B348();
  swift_endAccess();
  swift_beginAccess();
  v88 = v86;
  v89 = v40;
  sub_1B8B9B348();
  swift_endAccess();
  if ((v80 & 1) != 0)
  {

    v53(v87, v48);
  }
  else
  {
    type metadata accessor for EventChanges(0);
    sub_1B8ADBDEC(&qword_1EF1BE9F8, type metadata accessor for EventChanges, (uint64_t)&unk_1B8BAEED8);
    v90 = sub_1B8B9B330();
    v88 = objc_msgSend((id)objc_opt_self(), sel_mainRunLoop);
    v55 = sub_1B8B9C4F4();
    v56 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v55 - 8) + 56);
    v86 = v53;
    v57 = v54;
    v58 = (uint64_t)v64;
    v56(v64, 1, 1, v55);
    sub_1B8B9B33C();
    sub_1B8B05B9C(0, &qword_1EF1BEA00);
    sub_1B8B925A8(&qword_1EF1BEA08, &qword_1EF1BEA00, 0x1E0C99E58, MEMORY[0x1E0CB2358]);
    v59 = v65;
    sub_1B8B9B384();
    sub_1B8ADE894(v58, &qword_1EF1BE9E8);

    swift_release();
    swift_allocObject();
    swift_weakInit();
    sub_1B8ADE950((unint64_t *)&unk_1EF1BEA10, &qword_1EF1BE9F0, MEMORY[0x1E0C95CB8]);
    v60 = v67;
    v61 = sub_1B8B9B390();

    swift_release();
    v86(v87, v48);
    (*(void (**)(char *, uint64_t))(v66 + 8))(v59, v60);
    *(_QWORD *)(v16 + OBJC_IVAR____TtC13CalendarUIKit12EventChanges_changeSink) = v61;
    swift_release();
  }
  return v16;
}

uint64_t sub_1B8B8EB78()
{
  uint64_t result;
  void (*v1)(uint64_t);

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v1 = *(void (**)(uint64_t))(result + OBJC_IVAR____TtC13CalendarUIKit12EventChanges_changeBlock);
    sub_1B8B04FC8((uint64_t)v1);
    result = swift_release();
    if (v1)
    {
      v1(result);
      return sub_1B8B05AB8((uint64_t)v1);
    }
  }
  return result;
}

void sub_1B8B8EC00(void *a1, char a2, char a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  void *v11;
  void (*v12)(char *, char *, uint64_t);
  void (*v13)(char *, char *, uint64_t);
  void (*v14)(char *, char *, uint64_t);
  uint64_t v15;
  uint64_t v16;
  id v17;
  id v18;
  uint64_t v19;
  id v20;
  void *v21;
  unint64_t v22;
  char v23;
  void *v24;
  void (*v25)(char *, char *, uint64_t);
  uint64_t v26;
  char v27;
  uint64_t v28;
  char v29;
  id v30;
  void *v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  void *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  void (*v48)(char *, uint64_t);
  void *v49;
  void *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;

  v6 = sub_1B8B9B0F0();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x1E0C80A78](v6);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v51 - v9;
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1B8B9B360();
  swift_release();
  swift_release();
  v11 = (void *)sub_1B8B9C14C();
  swift_bridgeObjectRelease();
  objc_msgSend(a1, sel_setTitle_, v11);

  swift_getKeyPath();
  swift_getKeyPath();
  sub_1B8B9B360();
  swift_release();
  swift_release();
  v12 = (void (*)(char *, char *, uint64_t))v55;
  objc_msgSend(a1, sel_setStructuredLocation_, v55);

  swift_getKeyPath();
  swift_getKeyPath();
  sub_1B8B9B360();
  swift_release();
  swift_release();
  objc_msgSend(a1, sel_setAllDay_, v55);
  if ((a2 & 1) != 0)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    sub_1B8B9B360();
    swift_release();
    swift_release();
    v13 = 0;
    v14 = (void (*)(char *, char *, uint64_t))v55;
    if (v55 && v55 != 6)
    {
      v15 = CUIKRecurrenceFrequencyForRepeatType(v55);
      v16 = CUIKIntervalForRepeatType((uint64_t)v14);
      v17 = objc_msgSend((id)objc_opt_self(), sel_recurrenceRuleWithType_interval_end_, v15, v16, 0);
      if (!v17)
      {
LABEL_49:
        __break(1u);
LABEL_50:
        __break(1u);
        goto LABEL_51;
      }
      v18 = v17;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1BCFD0);
      v19 = swift_allocObject();
      *(_OWORD *)(v19 + 16) = xmmword_1B8BA9720;
      *(_QWORD *)(v19 + 32) = v18;
      v55 = v19;
      sub_1B8B9C2FC();
      v13 = (void (*)(char *, char *, uint64_t))v55;
    }
    v20 = objc_msgSend(a1, sel_recurrenceRules);
    if (v20)
    {
      v21 = v20;
      sub_1B8B05B9C(0, (unint64_t *)&unk_1EF1B94C0);
      v22 = sub_1B8B9C2F0();

    }
    else
    {
      v22 = 0;
    }
    v23 = sub_1B8B91BC0((unint64_t)v13, v22);
    swift_bridgeObjectRelease();
    if ((v23 & 1) != 0)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      if (v13)
      {
        sub_1B8B05B9C(0, (unint64_t *)&unk_1EF1B94C0);
        v24 = (void *)sub_1B8B9C2E4();
        swift_bridgeObjectRelease();
      }
      else
      {
        v24 = 0;
      }
      objc_msgSend(a1, sel_setRecurrenceRules_, v24);

    }
  }
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1B8B9B360();
  swift_release();
  swift_release();
  v25 = (void (*)(char *, char *, uint64_t))v55;
  objc_msgSend(a1, sel_setCalendar_, v55);

  swift_getKeyPath();
  swift_getKeyPath();
  sub_1B8B9B360();
  swift_release();
  swift_release();
  sub_1B8B91F7C((void (*)(char *, char *, uint64_t))v55, a1);
  swift_bridgeObjectRelease();
  if ((a3 & 1) == 0)
  {
LABEL_46:
    swift_getKeyPath();
    swift_getKeyPath();
    sub_1B8B9B360();
    swift_release();
    swift_release();
    objc_msgSend(a1, sel_setAvailability_, v55);
    swift_getKeyPath();
    swift_getKeyPath();
    sub_1B8B9B360();
    swift_release();
    swift_release();
    v47 = (void *)sub_1B8B9B0C0();
    v48 = *(void (**)(char *, uint64_t))(v7 + 8);
    v48(v10, v6);
    objc_msgSend(a1, sel_setStartDate_, v47);

    swift_getKeyPath();
    swift_getKeyPath();
    sub_1B8B9B360();
    swift_release();
    swift_release();
    swift_getKeyPath();
    swift_getKeyPath();
    sub_1B8B9B360();
    swift_release();
    swift_release();
    sub_1B8B9B0A8();
    v49 = (void *)sub_1B8B9B0C0();
    v48(v10, v6);
    objc_msgSend(a1, sel_setEndDate_, v49);

    swift_getKeyPath();
    swift_getKeyPath();
    sub_1B8B9B360();
    swift_release();
    swift_release();
    v50 = (void *)sub_1B8B9C14C();
    swift_bridgeObjectRelease();
    objc_msgSend(a1, sel_setNotes_, v50);

    return;
  }
  v55 = MEMORY[0x1E0DEE9D8];
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1B8B9B360();
  swift_release();
  swift_release();
  v26 = sub_1B8B8F62C(v54);
  if ((v27 & 1) == 0)
  {
    if (!objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CA9FB8]), sel_initWithRelativeOffset_, *(double *)&v26))
    {
      __break(1u);
LABEL_48:
      __break(1u);
      goto LABEL_49;
    }
    MEMORY[0x1BCCB6464]();
    if (*(_QWORD *)((v55 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v55 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_1B8B9C314();
    sub_1B8B9C338();
    sub_1B8B9C2FC();
  }
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1B8B9B360();
  swift_release();
  swift_release();
  v28 = sub_1B8B8F62C(v54);
  if ((v29 & 1) != 0)
    goto LABEL_26;
  if (!objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CA9FB8]), sel_initWithRelativeOffset_, *(double *)&v28))
    goto LABEL_48;
  MEMORY[0x1BCCB6464]();
  if (*(_QWORD *)((v55 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v55 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    sub_1B8B9C314();
  sub_1B8B9C338();
  sub_1B8B9C2FC();
LABEL_26:
  v30 = objc_msgSend(a1, sel_alarms);
  if (!v30)
  {
LABEL_44:
    sub_1B8B05B9C(0, &qword_1EF1B94D0);
    v43 = (void *)sub_1B8B9C2E4();
LABEL_45:
    swift_bridgeObjectRelease();
    objc_msgSend(a1, sel_setAlarms_, v43);

    goto LABEL_46;
  }
  v31 = v30;
  v52 = v7;
  v53 = v6;
  sub_1B8B05B9C(0, &qword_1EF1B94D0);
  v32 = sub_1B8B9C2F0();

  if (!(v32 >> 62))
  {
    v33 = *(_QWORD *)((v32 & 0xFFFFFFFFFFFFF8) + 0x10);
    if ((unint64_t)v33 > 2)
    {
      v51 = v55;
      goto LABEL_30;
    }
    goto LABEL_43;
  }
  swift_bridgeObjectRetain();
  v44 = sub_1B8B9C728();
  swift_bridgeObjectRelease();
  if (v44 < 3)
  {
LABEL_43:
    swift_bridgeObjectRelease();
    v7 = v52;
    v6 = v53;
    goto LABEL_44;
  }
  v51 = v55;
  swift_bridgeObjectRetain();
  v33 = sub_1B8B9C728();
  swift_bridgeObjectRelease();
  if (v33 < 2)
    goto LABEL_50;
  swift_bridgeObjectRetain();
  v45 = sub_1B8B9C728();
  swift_bridgeObjectRelease();
  if (v45 >= 2)
  {
    swift_bridgeObjectRetain();
    v46 = sub_1B8B9C728();
    swift_bridgeObjectRelease();
    if (v46 >= v33)
    {
LABEL_30:
      if ((v32 & 0xC000000000000001) != 0 && v33 != 2)
      {
        v34 = 2;
        do
        {
          v35 = v34 + 1;
          sub_1B8B9C65C();
          v34 = v35;
        }
        while (v33 != v35);
      }
      if (v32 >> 62)
      {
        swift_bridgeObjectRetain();
        v36 = sub_1B8B9C734();
        v37 = v40;
        v39 = v41;
        v38 = v42;
        swift_bridgeObjectRelease_n();
      }
      else
      {
        v36 = v32 & 0xFFFFFFFFFFFFFF8;
        v37 = (v32 & 0xFFFFFFFFFFFFFF8) + 32;
        v38 = (2 * v33) | 1;
        v39 = 2;
      }
      v54 = v51;
      sub_1B8B90714(v36, v37, v39, v38);
      v43 = (void *)sub_1B8B9C2E4();
      v7 = v52;
      v6 = v53;
      goto LABEL_45;
    }
    __break(1u);
    goto LABEL_43;
  }
LABEL_51:
  __break(1u);
}

uint64_t sub_1B8B8F62C(unsigned __int8 a1)
{
  return ((uint64_t (*)())((char *)sub_1B8B8F64C + 4 * byte_1B8BAEAE0[a1]))();
}

uint64_t sub_1B8B8F64C()
{
  return 0;
}

unint64_t sub_1B8B8F658()
{
  return 0xC072C00000000000;
}

unint64_t sub_1B8B8F668()
{
  return 0xC082C00000000000;
}

unint64_t sub_1B8B8F678()
{
  return 0xC08C200000000000;
}

unint64_t sub_1B8B8F688()
{
  return 0xC09C200000000000;
}

unint64_t sub_1B8B8F698()
{
  return 0xC0AC200000000000;
}

unint64_t sub_1B8B8F6A8()
{
  return 0xC0BC200000000000;
}

unint64_t sub_1B8B8F6B8()
{
  return 0xC105180000000000;
}

unint64_t sub_1B8B8F6C8()
{
  return 0xC12177E000000000;
}

unint64_t sub_1B8B8F6D8()
{
  return 0xC0F5180000000000;
}

uint64_t sub_1B8B8F6E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;

  swift_bridgeObjectRelease();

  v1 = v0 + OBJC_IVAR____TtC13CalendarUIKit12EventChanges_initialStartDate;
  v2 = sub_1B8B9B0F0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  sub_1B8B05AB8(*(_QWORD *)(v0 + OBJC_IVAR____TtC13CalendarUIKit12EventChanges_changeBlock));
  v3 = v0 + OBJC_IVAR____TtC13CalendarUIKit12EventChanges__title;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1BD9A0);
  v5 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v5(v3, v4);
  v6 = v0 + OBJC_IVAR____TtC13CalendarUIKit12EventChanges__location;
  v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF1BE990);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  v8 = v0 + OBJC_IVAR____TtC13CalendarUIKit12EventChanges__allDay;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1BD9B0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
  v10 = v0 + OBJC_IVAR____TtC13CalendarUIKit12EventChanges__startDate;
  v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF1BE9A0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
  v12 = v0 + OBJC_IVAR____TtC13CalendarUIKit12EventChanges__eventDuration;
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1BD9A8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v12, v13);
  v14 = v0 + OBJC_IVAR____TtC13CalendarUIKit12EventChanges__calendar;
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1BE9B0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(v14, v15);
  v16 = v0 + OBJC_IVAR____TtC13CalendarUIKit12EventChanges__repeatType;
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1BE9B8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 8))(v16, v17);
  v18 = v0 + OBJC_IVAR____TtC13CalendarUIKit12EventChanges__attendees;
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1BE9C0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 8))(v18, v19);
  v20 = v0 + OBJC_IVAR____TtC13CalendarUIKit12EventChanges__alertTrigger;
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1BE9C8);
  v22 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 8);
  v22(v20, v21);
  v22(v0 + OBJC_IVAR____TtC13CalendarUIKit12EventChanges__secondAlertTrigger, v21);
  v23 = v0 + OBJC_IVAR____TtC13CalendarUIKit12EventChanges__availability;
  v24 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF1BE9D0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 8))(v23, v24);
  v5(v0 + OBJC_IVAR____TtC13CalendarUIKit12EventChanges__notes, v4);
  return v0;
}

uint64_t sub_1B8B8F98C()
{
  sub_1B8B8F6E8();
  return swift_deallocClassInstance();
}

uint64_t sub_1B8B8F9B0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  type metadata accessor for EventChanges(0);
  result = sub_1B8B9B330();
  *a1 = result;
  return result;
}

void sub_1B8B8F9EC(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E6EB3170;
}

double sub_1B8B8F9FC@<D0>(double *a1@<X8>)
{
  char *v1;
  double result;

  result = dbl_1B8BAF438[*v1];
  *a1 = result;
  return result;
}

uint64_t sub_1B8B8FA14()
{
  sub_1B8B9C968();
  sub_1B8B9C974();
  return sub_1B8B9C998();
}

uint64_t sub_1B8B8FA58()
{
  return sub_1B8B9C974();
}

uint64_t sub_1B8B8FA84()
{
  sub_1B8B9C968();
  sub_1B8B9C974();
  return sub_1B8B9C998();
}

_QWORD *sub_1B8B8FAC4@<X0>(_QWORD *result@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;

  if ((unint64_t)(*result + 1) < 3)
    v2 = *result + 1;
  else
    LOBYTE(v2) = 3;
  *a2 = v2;
  return result;
}

void sub_1B8B8FAE0(_QWORD *a1@<X8>)
{
  unsigned __int8 *v1;

  *a1 = *v1 - 1;
}

uint64_t sub_1B8B8FAF4()
{
  return type metadata accessor for CUIKEventEditorViewModel(0);
}

uint64_t type metadata accessor for CUIKEventEditorViewModel(uint64_t a1)
{
  return sub_1B8AE85C4(a1, (uint64_t *)&unk_1EF1BE7B8);
}

void sub_1B8B8FB10()
{
  unint64_t v0;
  unint64_t v1;

  sub_1B8B8FE90(319, &qword_1EF1BE7C8, (void (*)(uint64_t))type metadata accessor for EventChanges);
  if (v0 <= 0x3F)
  {
    sub_1B8B4E2BC(319, (unint64_t *)&unk_1EF1BE7D0);
    if (v1 <= 0x3F)
      swift_updateClassMetadata2();
  }
}

uint64_t type metadata accessor for EventChanges(uint64_t a1)
{
  return sub_1B8AE85C4(a1, qword_1EF1BE8A8);
}

uint64_t sub_1B8B8FC00()
{
  return type metadata accessor for EventChanges(0);
}

void sub_1B8B8FC08()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;

  sub_1B8B9B0F0();
  if (v0 <= 0x3F)
  {
    sub_1B8B4E2BC(319, &qword_1EF1BD990);
    if (v1 <= 0x3F)
    {
      sub_1B8B8FF40(319, &qword_1EF1BE8C0, &qword_1EF1BE8C8);
      if (v2 <= 0x3F)
      {
        sub_1B8B4E2BC(319, (unint64_t *)&unk_1EF1BE8D0);
        if (v3 <= 0x3F)
        {
          sub_1B8B8FE90(319, (unint64_t *)&qword_1EF1BD998, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
          if (v4 <= 0x3F)
          {
            sub_1B8B4E2BC(319, &qword_1EF1BE8E0);
            if (v5 <= 0x3F)
            {
              sub_1B8B8FEDC();
              if (v6 <= 0x3F)
              {
                sub_1B8B8FE90(319, &qword_1EF1BE8F8, type metadata accessor for CUIKRepeatType);
                if (v7 <= 0x3F)
                {
                  sub_1B8B8FF40(319, &qword_1EF1BE900, &qword_1EF1BE908);
                  if (v8 <= 0x3F)
                  {
                    sub_1B8B4E2BC(319, &qword_1EF1BE910);
                    if (v9 <= 0x3F)
                    {
                      sub_1B8B8FE90(319, &qword_1EF1BE918, type metadata accessor for EKEventAvailability);
                      if (v10 <= 0x3F)
                        swift_updateClassMetadata2();
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

void sub_1B8B8FE90(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    a3(255);
    v4 = sub_1B8B9B378();
    if (!v5)
      atomic_store(v4, a2);
  }
}

void sub_1B8B8FEDC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF1BE8E8)
  {
    sub_1B8B05B9C(255, &qword_1EF1BE8F0);
    v0 = sub_1B8B9B378();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF1BE8E8);
  }
}

void sub_1B8B8FF40(uint64_t a1, unint64_t *a2, uint64_t *a3)
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a3);
    v4 = sub_1B8B9B378();
    if (!v5)
      atomic_store(v4, a2);
  }
}

uint64_t storeEnumTagSinglePayload for AlarmRelativeOffset(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 10 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 10) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF6)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF5)
    return ((uint64_t (*)(void))((char *)&loc_1B8B8FFD8 + 4 * byte_1B8BAEAF0[v4]))();
  *a1 = a2 + 10;
  return ((uint64_t (*)(void))((char *)sub_1B8B9000C + 4 * byte_1B8BAEAEB[v4]))();
}

uint64_t sub_1B8B9000C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B8B90014(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1B8B9001CLL);
  return result;
}

uint64_t sub_1B8B90028(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1B8B90030);
  *(_BYTE *)result = a2 + 10;
  return result;
}

uint64_t sub_1B8B90034(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B8B9003C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AlarmRelativeOffset()
{
  return &type metadata for AlarmRelativeOffset;
}

ValueMetadata *type metadata accessor for EventEditorChangeSavePolicy()
{
  return &type metadata for EventEditorChangeSavePolicy;
}

uint64_t _s13CalendarUIKit21EventEditorMutabilityOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1B8B900B8 + 4 * byte_1B8BAEAFA[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1B8B900EC + 4 * byte_1B8BAEAF5[v4]))();
}

uint64_t sub_1B8B900EC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B8B900F4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1B8B900FCLL);
  return result;
}

uint64_t sub_1B8B90108(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1B8B90110);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1B8B90114(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B8B9011C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for EventEditorMutability()
{
  return &type metadata for EventEditorMutability;
}

uint64_t storeEnumTagSinglePayload for EventEditorPushAction(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1B8B90184 + 4 * byte_1B8BAEB04[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1B8B901B8 + 4 * byte_1B8BAEAFF[v4]))();
}

uint64_t sub_1B8B901B8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B8B901C0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1B8B901C8);
  return result;
}

uint64_t sub_1B8B901D4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1B8B901DCLL);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1B8B901E0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B8B901E8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for EventEditorPushAction()
{
  return &type metadata for EventEditorPushAction;
}

unint64_t sub_1B8B90208()
{
  unint64_t result;

  result = qword_1EF1BE920;
  if (!qword_1EF1BE920)
  {
    result = MEMORY[0x1BCCB79D0](&unk_1B8BAED08, &type metadata for EventEditorPushAction);
    atomic_store(result, (unint64_t *)&qword_1EF1BE920);
  }
  return result;
}

unint64_t sub_1B8B90254()
{
  unint64_t result;

  result = qword_1EF1BE930;
  if (!qword_1EF1BE930)
  {
    result = MEMORY[0x1BCCB79D0](&unk_1B8BAEDD8, &type metadata for EventEditorChangeSavePolicy);
    atomic_store(result, (unint64_t *)&qword_1EF1BE930);
  }
  return result;
}

uint64_t sub_1B8B90298()
{
  return MEMORY[0x1E0DEB090];
}

uint64_t sub_1B8B902A4()
{
  return sub_1B8ADE950(&qword_1EF1BE938, &qword_1EF1BE940, MEMORY[0x1E0DEAF50]);
}

unint64_t sub_1B8B902D4()
{
  unint64_t result;

  result = qword_1EF1BE948;
  if (!qword_1EF1BE948)
  {
    result = MEMORY[0x1BCCB79D0](&unk_1B8BAEEB0, &type metadata for AlarmRelativeOffset);
    atomic_store(result, (unint64_t *)&qword_1EF1BE948);
  }
  return result;
}

uint64_t sub_1B8B90318@<X0>(_QWORD *a1@<X8>)
{
  return sub_1B8B8D2A4(a1);
}

uint64_t sub_1B8B9033C()
{
  return sub_1B8B8D330();
}

uint64_t sub_1B8B90370@<X0>(_QWORD *a1@<X8>)
{
  return sub_1B8B8CF54(a1);
}

uint64_t sub_1B8B903A0()
{
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  return sub_1B8B9B36C();
}

uint64_t sub_1B8B9040C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  unint64_t v9;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  int64_t v14;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD **)v1;
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_5;
    goto LABEL_18;
  }
  if (v4 <= v5)
    v14 = v4 + v2;
  else
    v14 = v4;
  v3 = sub_1B8B860E4(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
LABEL_5:
  v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v9 = (unint64_t)&v3[2 * v8 + 4];
  if (a1 + 32 < v9 + 16 * v2 && v9 < a1 + 32 + 16 * v2)
    goto LABEL_24;
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    result = swift_bridgeObjectRelease();
    *(_QWORD *)v1 = v3;
    return result;
  }
  v11 = v3[2];
  v12 = __OFADD__(v11, v2);
  v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  result = sub_1B8B9C764();
  __break(1u);
  return result;
}

uint64_t sub_1B8B9055C(unint64_t a1)
{
  unint64_t *v1;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;

  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v3 = sub_1B8B9C728();
    swift_bridgeObjectRelease();
  }
  else
  {
    v3 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v4 = *v1;
  if (*v1 >> 62)
  {
    swift_bridgeObjectRetain();
    v5 = sub_1B8B9C728();
    swift_bridgeObjectRelease();
    v6 = v5 + v3;
    if (!__OFADD__(v5, v3))
      goto LABEL_5;
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v5 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
  v6 = v5 + v3;
  if (__OFADD__(v5, v3))
    goto LABEL_23;
LABEL_5:
  v4 = *v1;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *v1 = v4;
  v5 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v4 & 0x8000000000000000) == 0 && (v4 & 0x4000000000000000) == 0)
  {
    v8 = v4 & 0xFFFFFFFFFFFFFF8;
    if (v6 <= *(_QWORD *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      goto LABEL_15;
    v5 = 1;
  }
  if (v4 >> 62)
    goto LABEL_25;
  v9 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    if (v9 <= v6)
      v9 = v6;
    swift_bridgeObjectRetain();
    v4 = MEMORY[0x1BCCB680C](v5, v9, 1, v4);
    swift_bridgeObjectRelease();
    *v1 = v4;
    v8 = v4 & 0xFFFFFFFFFFFFFF8;
LABEL_15:
    result = sub_1B8B909A0(v8 + 8 * *(_QWORD *)(v8 + 16) + 32, (*(_QWORD *)(v8 + 24) >> 1) - *(_QWORD *)(v8 + 16), a1);
    if (v11 >= v3)
      break;
LABEL_24:
    __break(1u);
LABEL_25:
    swift_bridgeObjectRetain();
    v9 = sub_1B8B9C728();
    swift_bridgeObjectRelease();
  }
  if (v11 < 1)
    goto LABEL_19;
  v12 = *(_QWORD *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v13 = __OFADD__(v12, v11);
  v14 = v12 + v11;
  if (!v13)
  {
    *(_QWORD *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10) = v14;
LABEL_19:
    swift_bridgeObjectRelease();
    return sub_1B8B9C2FC();
  }
  __break(1u);
  return result;
}

uint64_t sub_1B8B90714(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;
  uint64_t result;

  v8 = a4 >> 1;
  v9 = (a4 >> 1) - a3;
  if (__OFSUB__(a4 >> 1, a3))
    goto LABEL_11;
  v5 = a3;
  v6 = a2;
  v7 = *v4;
  if (*v4 >> 62)
    goto LABEL_12;
  v10 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
  v11 = v10 + v9;
  if (!__OFADD__(v10, v9))
    goto LABEL_4;
LABEL_14:
  __break(1u);
LABEL_15:
  v13 = 1;
LABEL_16:
  if (v7 >> 62)
  {
    swift_bridgeObjectRetain();
    v16 = sub_1B8B9C728();
    swift_bridgeObjectRelease();
  }
  else
  {
    v16 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  if (v16 <= v11)
    v16 = v11;
  swift_bridgeObjectRetain();
  v7 = MEMORY[0x1BCCB680C](v13, v16, 1, v7);
  swift_bridgeObjectRelease();
  *v4 = v7;
  v14 = v7 & 0xFFFFFFFFFFFFFF8;
  if (v8 == v5)
  {
    while (v9 > 0)
    {
      __break(1u);
LABEL_11:
      __break(1u);
LABEL_12:
      swift_bridgeObjectRetain();
      v15 = sub_1B8B9C728();
      swift_bridgeObjectRelease();
      v11 = v15 + v9;
      if (__OFADD__(v15, v9))
        goto LABEL_14;
LABEL_4:
      v7 = *v4;
      isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
      *v4 = v7;
      v13 = 0;
      if (!isUniquelyReferenced_nonNull_bridgeObject
        || (v7 & 0x8000000000000000) != 0
        || (v7 & 0x4000000000000000) != 0)
      {
        goto LABEL_16;
      }
      v14 = v7 & 0xFFFFFFFFFFFFFF8;
      if (v11 > *(_QWORD *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        goto LABEL_15;
      if (v8 != v5)
        goto LABEL_21;
    }
    goto LABEL_28;
  }
LABEL_21:
  v17 = *(_QWORD *)(v14 + 16);
  if ((*(_QWORD *)(v14 + 24) >> 1) - v17 < v9)
  {
    __break(1u);
  }
  else
  {
    if (v9 < 0)
      goto LABEL_32;
    v18 = v14 + 8 * v17 + 32;
    v19 = v6 + 8 * v5;
    if (v19 < v18 + 8 * v9 && v18 < v19 + 8 * v9)
      goto LABEL_32;
    sub_1B8B05B9C(0, &qword_1EF1B94D0);
    swift_arrayInitWithCopy();
    if (!v9)
    {
LABEL_28:
      swift_unknownObjectRelease();
      return sub_1B8B9C2FC();
    }
    v20 = *(_QWORD *)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v21 = __OFADD__(v20, v9);
    v22 = v20 + v9;
    if (!v21)
    {
      *(_QWORD *)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x10) = v22;
      goto LABEL_28;
    }
  }
  __break(1u);
LABEL_32:
  result = sub_1B8B9C764();
  __break(1u);
  return result;
}

uint64_t sub_1B8B909A0(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t i;
  void (*v12)(_QWORD *);
  id *v13;
  id v14;
  uint64_t result;
  void (*v16[4])(id *);

  v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    v7 = sub_1B8B9C728();
    swift_bridgeObjectRelease();
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_19;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    v10 = sub_1B8B9C728();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_1B8ADE950(&qword_1EF1BEA58, &qword_1EF1BEA50, MEMORY[0x1E0DEAF50]);
        swift_bridgeObjectRetain();
        for (i = 0; i != v7; ++i)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1BEA50);
          v12 = sub_1B8B25B8C(v16, i, a3);
          v14 = *v13;
          ((void (*)(void (**)(id *), _QWORD))v12)(v16, 0);
          *(_QWORD *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v9 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_1B8B05B9C(0, (unint64_t *)&qword_1EF1BD0C0);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  result = sub_1B8B9C764();
  __break(1u);
  return result;
}

void sub_1B8B90BBC(void *a1)
{
  id v2;
  void *v3;
  id v4;
  void *v5;
  id v6;
  unsigned int v7;
  id v8;
  void *v9;
  id v10;
  id v11;
  void *v12;
  id v13;
  void *v14;
  id v15;
  void *v16;
  id v17;
  uint64_t v18;

  v2 = objc_msgSend((id)objc_opt_self(), sel_cuik_systemBackgroundColor);
  if (objc_msgSend(a1, sel_hasAttendees))
  {
    v3 = (void *)objc_opt_self();
    goto LABEL_6;
  }
  v4 = objc_msgSend(a1, sel_calendar);
  if (!v4)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  v5 = v4;
  v6 = objc_msgSend(v4, sel_source);

  if (v6)
  {
    v7 = objc_msgSend(v6, sel_isDelegate);

    v3 = (void *)objc_opt_self();
    if (!v7)
    {
      v10 = 0;
      goto LABEL_9;
    }
LABEL_6:
    v8 = objc_msgSend(a1, sel_calendar);
    if (!v8)
    {
LABEL_14:
      __break(1u);
      goto LABEL_15;
    }
    v9 = v8;
    v10 = objc_msgSend(v8, sel_source);

LABEL_9:
    v11 = objc_msgSend(a1, sel_eventStore);
    if (v11)
    {
      v12 = v11;
      v13 = objc_msgSend(v3, sel_calendarsLimitedToSource_writability_onlyUnmanagedAccounts_forEvent_entityType_inEventStore_, v10, 2, 0, a1, 0, v11);

      sub_1B8B05B9C(0, &qword_1EF1BE8F0);
      sub_1B8B925A8(&qword_1EF1BEA20, &qword_1EF1BE8F0, 0x1E0CA9FF0, MEMORY[0x1E0DEFCF8]);
      sub_1B8B9C3C8();

      v14 = (void *)sub_1B8B9C3BC();
      swift_bridgeObjectRelease();
      v15 = objc_msgSend(a1, sel_eventStore);
      if (v15)
      {
        v16 = v15;
        LOBYTE(v18) = 0;
        v17 = objc_msgSend((id)objc_opt_self(), sel_generateGroupsForCalendars_eventStore_entityType_forMode_usingBackgroundColor_includingAccountsWithoutCalendars_filterByFocus_usingUnselectedCalendars_foundRefreshableCalendar_anyGroupsHiddenByFocus_numberOfCalendarsHiddenByFocus_, v14, v15, 0, 0, v2, 0, v18, 0, 0, 0, 0);

        sub_1B8B05B9C(0, &qword_1EF1BEA28);
        sub_1B8B9C2F0();

        return;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_14;
  }
LABEL_16:
  __break(1u);
}

uint64_t sub_1B8B90E70(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  id v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t, uint64_t, uint64_t);
  void *v25;
  void *v26;
  void *v27;
  void *v28;
  id v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  unsigned int (*v37)(char *, uint64_t, uint64_t);
  id v38;
  void *v39;
  uint64_t v40;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44[2];

  v44[1] = *MEMORY[0x1E0C80C00];
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1B8F70);
  v3 = MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v42 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = MEMORY[0x1E0C80A78](v3);
  v8 = (char *)&v42 - v7;
  v9 = MEMORY[0x1E0C80A78](v6);
  v11 = (char *)&v42 - v10;
  MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v42 - v12;
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1B2D18);
  v15 = MEMORY[0x1E0C80A78](v14);
  v17 = (char *)&v42 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v19 = (char *)&v42 - v18;
  v44[0] = 0;
  if (a1)
  {
    v20 = objc_msgSend(a1, sel_recurrenceRules);
    if (v20)
    {
      v21 = v20;
      sub_1B8B05B9C(0, (unint64_t *)&unk_1EF1B94C0);
      sub_1B8B9C2F0();

      v43 = sub_1B8B9C2E4();
      swift_bridgeObjectRelease();
    }
    else
    {
      v43 = 0;
    }
    v29 = objc_msgSend(a1, sel_recurrenceDate);
    if (v29)
    {
      v30 = v29;
      sub_1B8B9B0D8();

      v31 = sub_1B8B9B0F0();
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(v17, 0, 1, v31);
    }
    else
    {
      v31 = sub_1B8B9B0F0();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(v17, 1, 1, v31);
    }
    sub_1B8B06074((uint64_t)v17, (uint64_t)v19, &qword_1ED1B2D18);
    sub_1B8B9B0F0();
    v32 = *(_QWORD *)(v31 - 8);
    v27 = 0;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(v19, 1, v31) != 1)
    {
      v27 = (void *)sub_1B8B9B0C0();
      (*(void (**)(char *, uint64_t))(v32 + 8))(v19, v31);
    }
    v33 = objc_msgSend(a1, sel_timeZone);
    if (v33)
    {
      v34 = v33;
      sub_1B8B9B2AC();

      v35 = sub_1B8B9B2B8();
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 56))(v11, 0, 1, v35);
    }
    else
    {
      v35 = sub_1B8B9B2B8();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 56))(v11, 1, 1, v35);
    }
    sub_1B8B06074((uint64_t)v11, (uint64_t)v13, &qword_1EF1B8F70);
    sub_1B8B9B2B8();
    v36 = *(_QWORD *)(v35 - 8);
    v37 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v36 + 48);
    v25 = 0;
    if (v37(v13, 1, v35) != 1)
    {
      v25 = (void *)sub_1B8B9B2A0();
      (*(void (**)(char *, uint64_t))(v36 + 8))(v13, v35);
    }
    v38 = objc_msgSend(a1, sel_timeZone);
    if (v38)
    {
      v39 = v38;
      sub_1B8B9B2AC();

      v40 = 0;
    }
    else
    {
      v40 = 1;
    }
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v36 + 56))(v5, v40, 1, v35);
    sub_1B8B06074((uint64_t)v5, (uint64_t)v8, &qword_1EF1B8F70);
    if (v37(v8, 1, v35) == 1)
    {
      v28 = 0;
    }
    else
    {
      v28 = (void *)sub_1B8B9B2A0();
      (*(void (**)(char *, uint64_t))(v36 + 8))(v8, v35);
    }
    v26 = (void *)v43;
  }
  else
  {
    v22 = sub_1B8B9B0F0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v19, 1, 1, v22);
    v23 = sub_1B8B9B2B8();
    v24 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56);
    v24(v13, 1, 1, v23);
    v24(v8, 1, 1, v23);
    v25 = 0;
    v26 = 0;
    v27 = 0;
    v28 = 0;
  }
  CUIKGetTypeAndEndDateForRecurrenceRules(v26, v27, v25, (uint64_t)v28, v44, 0);

  return v44[0];
}

uint64_t sub_1B8B91314(uint64_t a1, char a2)
{
  int v3;
  unsigned int v4;

  if ((a2 & 1) != 0)
    return 0;
  if (*(double *)&a1 == 0.0)
    return 1;
  if (*(double *)&a1 == -300.0)
    return 2;
  if (*(double *)&a1 == -600.0)
    return 3;
  if (*(double *)&a1 == -900.0)
    return 4;
  if (*(double *)&a1 == -1800.0)
    return 5;
  if (*(double *)&a1 == -3600.0)
    return 6;
  if (*(double *)&a1 == -7200.0)
    return 7;
  if (*(double *)&a1 == -572400.0)
    v3 = 10;
  else
    v3 = 11;
  if (*(double *)&a1 == -172800.0)
    v4 = 9;
  else
    v4 = v3;
  if (*(double *)&a1 == -86400.0)
    return 8;
  else
    return v4;
}

uint64_t sub_1B8B9142C(void *a1, uint64_t a2, int a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char **v8;
  uint64_t v9;
  uint64_t v10;
  char **v11;
  uint64_t v12;
  char **v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char **v22;
  double v23;
  double v24;
  uint64_t (*v25)(char **, uint64_t, uint64_t);
  int v26;
  char **v27;
  id v28;
  void *v29;
  char **v30;
  id v31;
  void *v32;
  uint64_t result;
  void *v34;
  id v35;
  void *v36;
  unint64_t v37;
  uint64_t v38;
  char **v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  id v44;
  void *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  int v49;
  int v50;
  id v51;
  void *v52;
  unint64_t v53;
  id v54;
  void *v55;
  uint64_t v56;
  void (*v57)(char *, uint64_t);
  id v58;
  void (*v59)(char *, char **, uint64_t);
  id v60;
  void *v61;
  void *v62;
  void *v63;
  unsigned __int8 v64;
  id v65;
  id v66;
  void *v67;
  uint64_t v68;
  void (*v69)(char *, uint64_t);
  void (*v70)(char *, uint64_t);
  void (*v71)(char *, uint64_t);
  unsigned __int8 v72;
  uint64_t v73;
  uint64_t v74;
  void *v75;
  void *v76;
  uint64_t v77;
  void (*v78)(char *, uint64_t);
  int v79;
  int v80;
  uint64_t v81;
  int v82;
  char *v83;
  unint64_t v84;

  v82 = a3;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1B2D18);
  v6 = MEMORY[0x1E0C80A78](v5);
  v8 = (char **)((char *)&v74 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = MEMORY[0x1E0C80A78](v6);
  v11 = (char **)((char *)&v74 - v10);
  MEMORY[0x1E0C80A78](v9);
  v13 = (char **)((char *)&v74 - v12);
  v14 = sub_1B8B9B0F0();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = MEMORY[0x1E0C80A78](v14);
  v83 = (char *)&v74 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x1E0C80A78](v16);
  v20 = (char *)&v74 - v19;
  MEMORY[0x1E0C80A78](v18);
  v22 = (char **)((char *)&v74 - v21);
  objc_msgSend(a1, sel_duration);
  v24 = v23;
  sub_1B8B5E04C(a2, (uint64_t)v13);
  v25 = *(uint64_t (**)(char **, uint64_t, uint64_t))(v15 + 48);
  v26 = v25(v13, 1, v14);
  v84 = v15;
  if (v26 != 1)
  {
    (*(void (**)(char **, char **, uint64_t))(v15 + 32))(v22, v13, v14);
    v30 = v22;
    goto LABEL_11;
  }
  v81 = a2;
  v27 = v22;
  v28 = objc_msgSend(a1, sel_startDate);
  if (!v28)
  {
    v15 = *(_QWORD *)(v15 + 56);
    ((void (*)(char **, uint64_t, uint64_t, uint64_t))v15)(v11, 1, 1, v14);
    goto LABEL_7;
  }
  v29 = v28;
  sub_1B8B9B0D8();

  v22 = *(char ***)(v15 + 32);
  ((void (*)(char **, char *, uint64_t))v22)(v11, v20, v14);
  v15 = *(_QWORD *)(v15 + 56);
  ((void (*)(char **, _QWORD, uint64_t, uint64_t))v15)(v11, 0, 1, v14);
  if (v25(v11, 1, v14) == 1)
  {
LABEL_7:
    v31 = CUIKTodayDate();
    if (!v31)
    {
LABEL_57:
      result = ((uint64_t (*)(char **, uint64_t, uint64_t, uint64_t))v15)(v8, 1, 1, v14);
      goto LABEL_58;
    }
    v32 = v31;
    sub_1B8B9B0D8();

    v22 = *(char ***)(v84 + 32);
    ((void (*)(char **, char *, uint64_t))v22)(v8, v20, v14);
    ((void (*)(char **, _QWORD, uint64_t, uint64_t))v15)(v8, 0, 1, v14);
    result = v25(v8, 1, v14);
    if ((_DWORD)result == 1)
    {
LABEL_58:
      __break(1u);
      return result;
    }
    v30 = v27;
    ((void (*)(char **, char **, uint64_t))v22)(v27, v8, v14);
    sub_1B8ADE894((uint64_t)v11, &qword_1ED1B2D18);
    goto LABEL_10;
  }
  v30 = v27;
  ((void (*)(char **, char **, uint64_t))v22)(v27, v11, v14);
LABEL_10:
  v15 = v84;
  sub_1B8ADE894((uint64_t)v13, &qword_1ED1B2D18);
  a2 = v81;
LABEL_11:
  v8 = a1;
  v34 = (void *)sub_1B8B90E70(a1);
  v35 = objc_msgSend(v8, sel_alarms);
  if (!v35)
  {
    v79 = 0;
    LOBYTE(v22) = 0;
    goto LABEL_38;
  }
  v36 = v35;
  sub_1B8B05B9C(0, &qword_1EF1B94D0);
  v37 = sub_1B8B9C2F0();

  if (!(v37 >> 62))
  {
    v38 = *(_QWORD *)((v37 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v38 >= 1)
      goto LABEL_14;
LABEL_36:
    LOBYTE(v22) = 0;
    goto LABEL_37;
  }
  swift_bridgeObjectRetain();
  v38 = sub_1B8B9C728();
  swift_bridgeObjectRelease();
  if (v38 < 1)
    goto LABEL_36;
LABEL_14:
  v15 = v37 & 0xC000000000000001;
  if ((v37 & 0xC000000000000001) != 0)
  {
    v13 = v30;
    v39 = (char **)MEMORY[0x1BCCB6800](0, v37);
  }
  else
  {
    if (!*(_QWORD *)((v37 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_54;
    }
    v13 = v30;
    v39 = (char **)*(id *)(v37 + 32);
  }
  v22 = v39;
  v30 = &selRef_setLayoutDirectionOverride_;
  objc_msgSend(v39, sel_relativeOffset);
  if (sub_1B8B91314(v40, 0) == 11)
  {
    objc_msgSend(v22, sel_relativeOffset);
    v42 = v41;

    v43 = sub_1B8B91314(v42, 0);
    if (v43 == 11)
      LOBYTE(v22) = 0;
    else
      LOBYTE(v22) = v43;
    if ((unint64_t)v38 < 2)
      goto LABEL_22;
  }
  else
  {

    LOBYTE(v22) = 0;
    if ((unint64_t)v38 < 2)
    {
LABEL_22:
      v15 = v84;
      v30 = v13;
LABEL_37:
      swift_bridgeObjectRelease();
      v79 = 0;
      goto LABEL_38;
    }
  }
  if (!v15)
  {
    if (*(_QWORD *)((v37 & 0xFFFFFFFFFFFFF8) + 0x10) < 2uLL)
    {
      __break(1u);
LABEL_56:
      __break(1u);
      goto LABEL_57;
    }
    v44 = *(id *)(v37 + 40);
    goto LABEL_28;
  }
LABEL_54:
  v44 = (id)MEMORY[0x1BCCB6800](1, v37);
LABEL_28:
  v45 = v44;
  v15 = v84;
  swift_bridgeObjectRelease();
  objc_msgSend(v45, v30[189]);
  if (sub_1B8B91314(v46, 0) == 11)
  {
    objc_msgSend(v45, v30[189]);
    v48 = v47;

    v49 = sub_1B8B91314(v48, 0);
    if (v49 == 11)
      v50 = 0;
    else
      v50 = v49;
    v79 = v50;
  }
  else
  {

    v79 = 0;
  }
  v30 = v13;
LABEL_38:
  v51 = objc_msgSend(v8, sel_attendeesNotIncludingOrganizer);
  if (v51)
  {
    v52 = v51;
    sub_1B8B05B9C(0, &qword_1EF1BE9E0);
    v53 = sub_1B8B9C2F0();

  }
  else
  {
    v53 = MEMORY[0x1E0DEE9D8];
  }
  v54 = objc_msgSend(v8, sel_title);
  if (v54)
  {
    v55 = v54;
    v56 = sub_1B8B9C17C();
    v78 = v57;

  }
  else
  {
    v56 = 0;
    v78 = (void (*)(char *, uint64_t))0xE000000000000000;
  }
  v58 = objc_msgSend(v8, sel_preferredLocation);
  v80 = objc_msgSend(v8, sel_isAllDay);
  v59 = *(void (**)(char *, char **, uint64_t))(v15 + 16);
  v81 = (uint64_t)v30;
  v59(v83, v30, v14);
  v60 = objc_msgSend(v8, sel_calendar);
  if (!v60)
    goto LABEL_56;
  v61 = v60;
  v75 = v58;
  v76 = v34;
  v77 = v14;
  v62 = (void *)v56;
  if (v53 >> 62)
  {
    sub_1B8B05B9C(0, (unint64_t *)&qword_1EF1B9580);
    swift_bridgeObjectRetain();
    v63 = (void *)sub_1B8B9C71C();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_1B8B9C8FC();
    sub_1B8B05B9C(0, (unint64_t *)&qword_1EF1B9580);
    v63 = (void *)v53;
  }
  v64 = v22;
  swift_bridgeObjectRelease();
  v65 = objc_msgSend(v8, sel_availability);
  v66 = objc_msgSend(v8, sel_notes);
  if (v66)
  {
    v67 = v66;
    v68 = a2;
    v69 = (void (*)(char *, uint64_t))sub_1B8B9C17C();
    v71 = v70;

  }
  else
  {
    v68 = a2;
    v69 = 0;
    v71 = (void (*)(char *, uint64_t))0xE000000000000000;
  }
  v72 = v82 & 1;
  type metadata accessor for EventChanges(0);
  v73 = swift_allocObject();
  sub_1B8B8E284(v62, v78, v75, v80, v83, v61, v76, v63, v24, v64, v79, v65, v69, v71, v72);
  sub_1B8ADE894(v68, &qword_1ED1B2D18);
  (*(void (**)(uint64_t, uint64_t))(v84 + 8))(v81, v77);
  return v73;
}

uint64_t sub_1B8B91BC0(unint64_t a1, unint64_t a2)
{
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t result;
  id v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  BOOL v12;
  id v13;
  void *v14;
  unsigned __int8 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;

  if (!a1)
  {
    if (a2)
    {
      if (a2 >> 62)
      {
        swift_bridgeObjectRetain();
        v17 = sub_1B8B9C728();
        swift_bridgeObjectRelease();
      }
      else
      {
        v17 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
      }
      return v17 == 0;
    }
    else
    {
      return 1;
    }
  }
  v4 = a1 >> 62;
  if (!a2)
  {
    if (v4)
    {
      swift_bridgeObjectRetain();
      v18 = sub_1B8B9C728();
      swift_bridgeObjectRelease();
    }
    else
    {
      v18 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    return v18 == 0;
  }
  if (v4)
    goto LABEL_46;
  v5 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  v6 = a2 >> 62;
  if (!(a2 >> 62))
    goto LABEL_5;
  while (2)
  {
    swift_bridgeObjectRetain();
    v19 = sub_1B8B9C728();
    swift_bridgeObjectRelease();
    if (v5 != v19)
      return 0;
LABEL_6:
    if (!v4)
    {
      v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      result = swift_bridgeObjectRetain();
      if (v4)
        goto LABEL_8;
LABEL_38:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return 1;
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    result = sub_1B8B9C728();
    v4 = result;
    if (!result)
      goto LABEL_38;
LABEL_8:
    v21 = a1 & 0xC000000000000001;
    if ((a1 & 0xC000000000000001) != 0)
    {
      v8 = (id)MEMORY[0x1BCCB6800](0, a1);
      if (!v6)
        goto LABEL_11;
LABEL_52:
      swift_bridgeObjectRetain();
      v9 = sub_1B8B9C728();
      swift_bridgeObjectRelease();
      if (v9)
        goto LABEL_12;
LABEL_53:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      return 1;
    }
    if (!*(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return result;
    }
    v8 = *(id *)(a1 + 32);
    if (v6)
      goto LABEL_52;
LABEL_11:
    v9 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v9)
      goto LABEL_53;
LABEL_12:
    v10 = 0;
    v20 = a1 + 40;
    v11 = v4 - 1;
    v12 = 1;
    while (1)
    {
      if ((a2 & 0xC000000000000001) != 0)
      {
        v13 = (id)MEMORY[0x1BCCB6800](v10, a2);
      }
      else
      {
        if (v10 >= *(_QWORD *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10))
          goto LABEL_44;
        v13 = *(id *)(a2 + 32 + 8 * v10);
      }
      v14 = v13;
      v4 = v10 + 1;
      v15 = objc_msgSend(v8, sel_isEqualToRecurrenceRule_, v13, v20);

      if ((v15 & 1) == 0)
        break;
      if (v11 == v10)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return v12;
      }
      if (!v21)
        goto LABEL_25;
LABEL_20:
      v8 = (id)MEMORY[0x1BCCB6800](v10 + 1, a1);
      v16 = v9;
      if (__OFADD__(v4, 1))
        goto LABEL_43;
LABEL_27:
      if (v16 == ++v10)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        return v12;
      }
    }
    if (v11 == v10)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return 0;
    }
    v12 = 0;
    if (v21)
      goto LABEL_20;
LABEL_25:
    if (v4 >= *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_45;
    v16 = v9;
    v8 = *(id *)(v20 + 8 * v10);
    if (!__OFADD__(v4, 1))
      goto LABEL_27;
LABEL_43:
    __break(1u);
LABEL_44:
    __break(1u);
LABEL_45:
    __break(1u);
LABEL_46:
    swift_bridgeObjectRetain();
    v5 = sub_1B8B9C728();
    swift_bridgeObjectRelease();
    v6 = a2 >> 62;
    if (a2 >> 62)
      continue;
    break;
  }
LABEL_5:
  if (v5 == *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10))
    goto LABEL_6;
  return 0;
}

void sub_1B8B91F7C(void (*a1)(char *, char *, uint64_t), void *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  id v12;
  uint64_t v13;
  void *v14;
  char *v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t i;
  id v19;
  void *v20;
  uint64_t v21;
  char *v22;
  uint64_t j;
  void (*v24)(_QWORD *, _QWORD);
  char *v25;
  uint64_t v26;
  void *v27;
  int v28;
  id v29;
  char *v30;
  char **v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  void (*v36)(char *, uint64_t);
  void (*v37)(char *, char *, uint64_t);
  id v38;
  char *v39;
  _QWORD v40[5];

  v37 = a1;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1BE958);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1BE960);
  v8 = MEMORY[0x1E0C80A78](v7);
  v35 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v33 - v10;
  v12 = objc_msgSend(a2, sel_attendees);
  v13 = MEMORY[0x1E0DEE9D8];
  v38 = a2;
  v39 = v6;
  if (!v12)
    goto LABEL_16;
  v14 = v12;
  v36 = (void (*)(char *, uint64_t))v3;
  v15 = v11;
  sub_1B8B05B9C(0, (unint64_t *)&qword_1EF1B9580);
  v16 = sub_1B8B9C2F0();

  v40[0] = v13;
  if (v16 >> 62)
  {
    swift_bridgeObjectRetain();
    v17 = sub_1B8B9C728();
    swift_bridgeObjectRelease();
    if (v17)
      goto LABEL_4;
LABEL_15:
    swift_bridgeObjectRelease();
    v13 = MEMORY[0x1E0DEE9D8];
    v11 = v15;
    v3 = (uint64_t)v36;
    goto LABEL_16;
  }
  v17 = *(_QWORD *)((v16 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v17)
    goto LABEL_15;
LABEL_4:
  if (v17 < 1)
  {
    __break(1u);
    return;
  }
  v34 = v4;
  for (i = 0; i != v17; ++i)
  {
    if ((v16 & 0xC000000000000001) != 0)
      v19 = (id)MEMORY[0x1BCCB6800](i, v16);
    else
      v19 = *(id *)(v16 + 8 * i + 32);
    v20 = v19;
    if ((objc_msgSend(v19, sel_isCurrentUser) & 1) != 0)
    {

    }
    else
    {
      sub_1B8B9C6BC();
      sub_1B8B9C6D4();
      sub_1B8B9C6E0();
      sub_1B8B9C6C8();
    }
  }
  swift_bridgeObjectRelease();
  v6 = v39;
  v13 = v40[0];
  v11 = v15;
  v3 = (uint64_t)v36;
  v4 = v34;
LABEL_16:
  v40[0] = v37;
  v40[4] = v13;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1BE908);
  sub_1B8ADE950(&qword_1EF1BE968, &qword_1EF1BE908, MEMORY[0x1E0DEAF20]);
  sub_1B8B925A8((unint64_t *)&unk_1EF1BE970, (unint64_t *)&qword_1EF1B9580, 0x1E0CAA0E0, MEMORY[0x1E0DEFD00]);
  sub_1B8B9C0D4();
  swift_bridgeObjectRelease();
  v21 = (uint64_t)v35;
  v37 = *(void (**)(char *, char *, uint64_t))(v4 + 16);
  v37(v35, v6, v3);
  sub_1B8ADE950((unint64_t *)&unk_1EF1BE980, &qword_1EF1BE958, MEMORY[0x1E0DECE10]);
  sub_1B8B9C3F8();
  v36 = *(void (**)(char *, uint64_t))(v4 + 8);
  v36(v6, v3);
  *(_QWORD *)(v21 + *(int *)(v7 + 36)) = v40[0];
  sub_1B8B06074(v21, (uint64_t)v11, &qword_1EF1BE960);
  v22 = &v11[*(int *)(v7 + 36)];
  for (j = *(_QWORD *)v22; ; j = *(_QWORD *)v22)
  {
    sub_1B8B9C404();
    if (j == v40[0])
      break;
    v24 = (void (*)(_QWORD *, _QWORD))sub_1B8B9C434();
    v25 = v11;
    v27 = *(void **)(v26 + 8);
    v28 = *(unsigned __int8 *)(v26 + 25);
    v29 = v27;
    v24(v40, 0);
    v30 = v39;
    v37(v39, v25, v3);
    sub_1B8B9C410();
    v36(v30, v3);
    v31 = &selRef_removeAttendee_;
    if (!v28)
      v31 = &selRef_addAttendee_;
    objc_msgSend(v38, *v31, v27);
    v32 = v27;
    v11 = v25;

  }
  sub_1B8ADE894((uint64_t)v11, &qword_1EF1BE960);
}

uint64_t sub_1B8B923FC@<X0>(_QWORD *a1@<X8>)
{
  return sub_1B8B8CF54(a1);
}

uint64_t sub_1B8B92420()
{
  return sub_1B8B903A0();
}

uint64_t sub_1B8B92454@<X0>(_QWORD *a1@<X8>)
{
  return sub_1B8B8D2A4(a1);
}

uint64_t sub_1B8B92478()
{
  return sub_1B8B8D330();
}

uint64_t sub_1B8B9249C@<X0>(_BYTE *a1@<X8>)
{
  return sub_1B8B8D170(a1);
}

uint64_t sub_1B8B924C0()
{
  return sub_1B8B8D1FC();
}

uint64_t sub_1B8B924E4@<X0>(_BYTE *a1@<X8>)
{
  return sub_1B8B8D170(a1);
}

uint64_t sub_1B8B92508()
{
  return sub_1B8B8D1FC();
}

uint64_t sub_1B8B9252C@<X0>(_QWORD *a1@<X8>)
{
  return sub_1B8B8CF54(a1);
}

uint64_t sub_1B8B92550()
{
  return sub_1B8B903A0();
}

uint64_t sub_1B8B9257C@<X0>(_QWORD *a1@<X8>)
{
  return sub_1B8B8CF54(a1);
}

uint64_t sub_1B8B925A8(unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    v7 = sub_1B8B05B9C(255, a2);
    result = MEMORY[0x1BCCB79D0](a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1B8B925E8()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1B8B9260C()
{
  return sub_1B8B8EB78();
}

uint64_t sub_1B8B92614@<X0>(_BYTE *a1@<X8>)
{
  return sub_1B8B8D170(a1);
}

uint64_t sub_1B8B92638()
{
  return sub_1B8B8D1FC();
}

uint64_t sub_1B8B9265C()
{
  return sub_1B8B8DA8C();
}

uint64_t storeEnumTagSinglePayload for CUIKEventAvailability(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1B8B926B0 + 4 * byte_1B8BAEB0E[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1B8B926E4 + 4 * byte_1B8BAEB09[v4]))();
}

uint64_t sub_1B8B926E4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B8B926EC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1B8B926F4);
  return result;
}

uint64_t sub_1B8B92700(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1B8B92708);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1B8B9270C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B8B92714(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CUIKEventAvailability()
{
  return &type metadata for CUIKEventAvailability;
}

unint64_t sub_1B8B92734()
{
  unint64_t result;

  result = qword_1EF1BEA60;
  if (!qword_1EF1BEA60)
  {
    result = MEMORY[0x1BCCB79D0](&unk_1B8BAF3D0, &type metadata for CUIKEventAvailability);
    atomic_store(result, (unint64_t *)&qword_1EF1BEA60);
  }
  return result;
}

uint64_t sub_1B8B92778()
{
  return sub_1B8ADBDEC((unint64_t *)&qword_1EF1BBDF0, (uint64_t (*)(uint64_t))type metadata accessor for EKEventAvailability, (uint64_t)&unk_1B8BA5B34);
}

uint64_t EventRecurrenceRuleModel.humanReadableDescription(startDate:isConcise:)(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  void *v5;
  void *v6;
  void *v7;
  id v8;
  uint64_t v9;

  sub_1B8B92880(0, 0, a3, a4);
  v5 = (void *)objc_opt_self();
  v6 = (void *)sub_1B8B9B0C0();
  v7 = (void *)sub_1B8B9C14C();
  swift_bridgeObjectRelease();
  v8 = objc_msgSend(v5, sel_humanReadableDescriptionWithStartDate_ofRecurrenceRuleICSString_isConcise_, v6, v7, a2 & 1);

  if (!v8)
    return 0;
  v9 = sub_1B8B9C17C();

  return v9;
}

uint64_t sub_1B8B92880(uint64_t a1, int a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t AssociatedTypeWitness;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t (*v21)(uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  id v31;
  void *v32;
  uint64_t v33;
  char *v34;
  uint64_t AssociatedConformanceWitness;
  uint64_t v36;
  uint64_t v37;
  uint64_t (*v38)(uint64_t, uint64_t);
  void *v39;
  id v40;
  char *v41;
  uint64_t v42;
  char *v43;
  unsigned int (*v44)(uint64_t, uint64_t, uint64_t);
  uint64_t (*v45)(uint64_t, uint64_t);
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  id v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  unint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  unint64_t v82;
  uint64_t (*v83)(uint64_t, uint64_t);
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  char v89;
  uint64_t v90;
  uint64_t v91;
  unint64_t v92;
  uint64_t result;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  unint64_t v99;
  uint64_t v100;
  char v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t (*v108)(uint64_t, uint64_t);
  char *v109;
  uint64_t v110;
  uint64_t (*v111)(uint64_t, uint64_t);
  uint64_t v112;
  int v113;
  unsigned int (*v114)(uint64_t, uint64_t, uint64_t);
  char *v115;
  id v116;
  char *v117;
  int v118;
  uint64_t v119;
  char *v120;
  uint64_t v121;
  uint64_t (*v122)(uint64_t, uint64_t);
  char *v123;
  uint64_t v124;
  uint64_t v125;
  char *v126;
  uint64_t v127;
  uint64_t v128;
  unint64_t v129;
  uint64_t v130;
  unint64_t v131;

  v5 = v4;
  v7 = a3;
  v113 = a2;
  v118 = a1;
  v112 = *(_QWORD *)(a3 - 8);
  MEMORY[0x1E0C80A78](a1);
  v123 = (char *)&v107 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v10 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v107 = *(_QWORD *)(v10 + 64);
  MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v126 = (char *)&v107 - v11;
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1B2D18);
  v13 = MEMORY[0x1E0C80A78](v12);
  v110 = (uint64_t)&v107 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x1E0C80A78](v13);
  v109 = (char *)&v107 - v16;
  v17 = MEMORY[0x1E0C80A78](v15);
  v119 = (uint64_t)&v107 - v18;
  MEMORY[0x1E0C80A78](v17);
  v115 = (char *)&v107 - v19;
  v20 = sub_1B8B9B0F0();
  v21 = *(uint64_t (**)(uint64_t, uint64_t))(v20 - 8);
  v121 = v20;
  v122 = v21;
  MEMORY[0x1E0C80A78](v20);
  v117 = (char *)&v107 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = swift_getAssociatedTypeWitness();
  v114 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))sub_1B8B9C50C();
  v24 = *((_QWORD *)v114 - 1);
  v25 = MEMORY[0x1E0C80A78](v114);
  v27 = (char *)&v107 - v26;
  v125 = *(_QWORD *)(v23 - 8);
  MEMORY[0x1E0C80A78](v25);
  v120 = (char *)&v107 - v28;
  v130 = 0;
  v131 = 0xE000000000000000;
  v29 = (void *)objc_opt_self();
  v111 = *(uint64_t (**)(uint64_t, uint64_t))(a4 + 48);
  v30 = v111(v7, a4);
  v116 = v29;
  v31 = objc_msgSend(v29, sel_iCalendarValueFromRecurrenceType_, v30);
  v124 = v4;
  if (v31)
  {
    v32 = v31;
    sub_1B8B9C17C();

    v128 = 0x3D51455246;
    v129 = 0xE500000000000000;
    sub_1B8B9C218();
    v5 = v124;
    swift_bridgeObjectRelease();
    sub_1B8B9C218();
    swift_bridgeObjectRelease();
  }
  v128 = 0x41565245544E493BLL;
  v129 = 0xEA00000000003D4CLL;
  v108 = *(uint64_t (**)(uint64_t, uint64_t))(a4 + 56);
  v127 = v108(v7, a4);
  sub_1B8B9C8C0();
  sub_1B8B9C218();
  swift_bridgeObjectRelease();
  sub_1B8B9C218();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(a4 + 40))(v7, a4);
  v33 = v125;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v125 + 48))(v27, 1, v23) == 1)
  {
    (*(void (**)(char *, unsigned int (*)(uint64_t, uint64_t, uint64_t)))(v24 + 8))(v27, v114);
  }
  else
  {
    v34 = v120;
    (*(void (**)(char *, char *, uint64_t))(v33 + 32))(v120, v27, v23);
    AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    v36 = (uint64_t)v115;
    (*(void (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 8))(v23, AssociatedConformanceWitness);
    v37 = v121;
    v38 = v122;
    v114 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))*((_QWORD *)v122 + 6);
    if (v114(v36, 1, v121) == 1)
    {
      sub_1B8B93818(v36);
      v128 = 0x3D544E554F433BLL;
      v129 = 0xE700000000000000;
      v127 = (*(uint64_t (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 16))(v23, AssociatedConformanceWitness);
      sub_1B8B9C8C0();
      sub_1B8B9C218();
      swift_bridgeObjectRelease();
      sub_1B8B9C218();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v125 + 8))(v34, v23);
      v5 = v124;
    }
    else
    {
      (*((void (**)(char *, uint64_t, uint64_t))v38 + 4))(v117, v36, v37);
      v39 = (void *)sub_1B8B9B0C0();
      v40 = objc_msgSend(v116, sel_adjustDateIntoUTC_dateOnly_floating_, v39, v118 & 1, v113 & 1);

      if (v40)
      {
        v41 = v109;
        sub_1B8B9B0D8();

        v42 = 0;
        v43 = v120;
      }
      else
      {
        v42 = 1;
        v43 = v120;
        v41 = v109;
      }
      v44 = v114;
      v45 = v122;
      v46 = v41;
      v47 = (uint64_t)v41;
      v48 = v121;
      (*((void (**)(char *, uint64_t, uint64_t, uint64_t))v122 + 7))(v46, v42, 1, v121);
      v49 = v47;
      v50 = v119;
      sub_1B8B93858(v49, v119);
      v51 = v50;
      v52 = v110;
      sub_1B8B5E04C(v51, v110);
      if (v44(v52, 1, v48) == 1)
      {
        v53 = 0;
      }
      else
      {
        v54 = v43;
        v55 = v52;
        v53 = (void *)sub_1B8B9B0C0();
        v56 = v55;
        v43 = v54;
        (*((void (**)(uint64_t, uint64_t))v45 + 1))(v56, v48);
      }
      v5 = v124;
      v57 = objc_msgSend(v116, sel_iCalendarValueFromDate_isDateOnly_isFloating_, v53, v118 & 1, v113 & 1);

      if (v57)
      {
        sub_1B8B9C17C();

        v128 = 0x3D4C49544E553BLL;
        v129 = 0xE700000000000000;
        sub_1B8B9C218();
        v5 = v124;
        swift_bridgeObjectRelease();
        sub_1B8B9C218();
        v48 = v121;
        swift_bridgeObjectRelease();
      }
      sub_1B8B93818(v119);
      (*((void (**)(char *, uint64_t))v122 + 1))(v117, v48);
      (*(void (**)(char *, uint64_t))(v125 + 8))(v43, v23);
    }
  }
  v58 = (*(uint64_t (**)(uint64_t, uint64_t))(a4 + 104))(v7, a4);
  v125 = v7;
  v59 = v123;
  if (v58)
  {
    v60 = v58;
    v61 = *(_QWORD *)(v58 + 16);
    if (v61)
    {
      sub_1B8B9C218();
      v62 = 0;
      do
      {
        v63 = *(_QWORD *)(v60 + 8 * v62++ + 32);
        v127 = v63;
        v128 = sub_1B8B9C8C0();
        v129 = v64;
        sub_1B8B9C218();
        sub_1B8B9C218();
        swift_bridgeObjectRelease();
      }
      while (v61 != v62);
      swift_bridgeObjectRelease();
      sub_1B8B936C8();
      swift_bridgeObjectRelease();
      v5 = v124;
      v7 = v125;
      v59 = v123;
    }
    else
    {
      swift_bridgeObjectRelease();
    }
  }
  v65 = (*(uint64_t (**)(uint64_t, uint64_t))(a4 + 80))(v7, a4);
  if (v65)
  {
    v66 = v65;
    v67 = *(_QWORD *)(v65 + 16);
    if (v67)
    {
      sub_1B8B9C218();
      v68 = 0;
      do
      {
        v69 = *(_QWORD *)(v66 + 8 * v68++ + 32);
        v127 = v69;
        v128 = sub_1B8B9C8C0();
        v129 = v70;
        sub_1B8B9C218();
        sub_1B8B9C218();
        swift_bridgeObjectRelease();
      }
      while (v67 != v68);
      swift_bridgeObjectRelease();
      sub_1B8B936C8();
      swift_bridgeObjectRelease();
      v5 = v124;
      v7 = v125;
      v59 = v123;
    }
    else
    {
      swift_bridgeObjectRelease();
    }
  }
  v71 = (*(uint64_t (**)(uint64_t, uint64_t))(a4 + 88))(v7, a4);
  if (v71)
  {
    v72 = v71;
    v73 = *(_QWORD *)(v71 + 16);
    if (v73)
    {
      sub_1B8B9C218();
      v74 = 0;
      do
      {
        v75 = *(_QWORD *)(v72 + 8 * v74++ + 32);
        v127 = v75;
        v128 = sub_1B8B9C8C0();
        v129 = v76;
        sub_1B8B9C218();
        sub_1B8B9C218();
        swift_bridgeObjectRelease();
      }
      while (v73 != v74);
      swift_bridgeObjectRelease();
      sub_1B8B936C8();
      swift_bridgeObjectRelease();
      v5 = v124;
      v7 = v125;
      v59 = v123;
    }
    else
    {
      swift_bridgeObjectRelease();
    }
  }
  v77 = (*(uint64_t (**)(uint64_t, uint64_t))(a4 + 96))(v7, a4);
  if (v77)
  {
    v78 = v77;
    v79 = *(_QWORD *)(v77 + 16);
    if (v79)
    {
      sub_1B8B9C218();
      v80 = 0;
      do
      {
        v81 = *(_QWORD *)(v78 + 8 * v80++ + 32);
        v127 = v81;
        v128 = sub_1B8B9C8C0();
        v129 = v82;
        sub_1B8B9C218();
        sub_1B8B9C218();
        swift_bridgeObjectRelease();
      }
      while (v79 != v80);
      swift_bridgeObjectRelease();
      sub_1B8B936C8();
      swift_bridgeObjectRelease();
      v5 = v124;
      v7 = v125;
      v59 = v123;
    }
    else
    {
      swift_bridgeObjectRelease();
    }
  }
  v83 = *(uint64_t (**)(uint64_t, uint64_t))(a4 + 72);
  v84 = v83(v7, a4);
  if (!v84)
    goto LABEL_54;
  v85 = v84;
  v128 = v84;
  v86 = sub_1B8B9C35C();
  MEMORY[0x1BCCB79D0](MEMORY[0x1E0DEAF50], v86);
  if ((sub_1B8B9C428() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_54;
  }
  v122 = v83;
  sub_1B8B9C218();
  if (!MEMORY[0x1BCCB64DC](v85, AssociatedTypeWitness))
    goto LABEL_53;
  v87 = 0;
  v88 = v126;
  while (1)
  {
    v89 = sub_1B8B9C32C();
    sub_1B8B9C308();
    if ((v89 & 1) == 0)
      break;
    (*(void (**)(char *, unint64_t, uint64_t))(v10 + 16))(v126, v85+ ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80))+ *(_QWORD *)(v10 + 72) * v87, AssociatedTypeWitness);
    v90 = v87 + 1;
    if (__OFADD__(v87, 1))
      goto LABEL_52;
LABEL_47:
    v91 = swift_getAssociatedConformanceWitness();
    v128 = sub_1B8B9371C(AssociatedTypeWitness, v91);
    v129 = v92;
    sub_1B8B9C218();
    sub_1B8B9C218();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v88, AssociatedTypeWitness);
    ++v87;
    if (v90 == MEMORY[0x1BCCB64DC](v85, AssociatedTypeWitness))
      goto LABEL_53;
  }
  result = sub_1B8B9C668();
  if (v107 != 8)
    goto LABEL_72;
  v128 = result;
  (*(void (**)(char *, uint64_t *, uint64_t))(v10 + 16))(v126, &v128, AssociatedTypeWitness);
  swift_unknownObjectRelease();
  v90 = v87 + 1;
  if (!__OFADD__(v87, 1))
    goto LABEL_47;
LABEL_52:
  __break(1u);
LABEL_53:
  swift_bridgeObjectRelease();
  sub_1B8B936C8();
  swift_bridgeObjectRelease();
  v5 = v124;
  v7 = v125;
  v83 = v122;
  v59 = v123;
LABEL_54:
  v94 = (*(uint64_t (**)(uint64_t, uint64_t))(a4 + 112))(v7, a4);
  if (v94)
  {
    v95 = v94;
    v96 = *(_QWORD *)(v94 + 16);
    if (v96)
    {
      sub_1B8B9C218();
      v97 = 0;
      do
      {
        v98 = *(_QWORD *)(v95 + 8 * v97++ + 32);
        v127 = v98;
        v128 = sub_1B8B9C8C0();
        v129 = v99;
        sub_1B8B9C218();
        sub_1B8B9C218();
        swift_bridgeObjectRelease();
      }
      while (v96 != v97);
      swift_bridgeObjectRelease();
      sub_1B8B936C8();
      swift_bridgeObjectRelease();
      v5 = v124;
      v7 = v125;
      v59 = v123;
    }
    else
    {
      swift_bridgeObjectRelease();
    }
  }
  v100 = (*(uint64_t (**)(uint64_t, uint64_t))(a4 + 64))(v7, a4);
  if ((v101 & 1) != 0)
    return v130;
  v102 = v100;
  v103 = v111(v7, a4);
  v104 = v112;
  (*(void (**)(char *, uint64_t, uint64_t))(v112 + 16))(v59, v5, v7);
  if (v103 != 1)
  {
    (*(void (**)(char *, uint64_t))(v104 + 8))(v59, v7);
    return v130;
  }
  v105 = v108(v7, a4);
  (*(void (**)(char *, uint64_t))(v104 + 8))(v59, v7);
  if (v105 <= 1)
    return v130;
  if (!v83(v7, a4))
    return v130;
  v106 = MEMORY[0x1BCCB64D0]();
  result = swift_bridgeObjectRelease();
  if (v106 < 1)
    return v130;
  if (__OFSUB__(v102, 1))
  {
    __break(1u);
  }
  else if ((unint64_t)(v102 - 1) <= 6)
  {
    swift_bridgeObjectRetain();
    swift_arrayDestroy();
    v128 = 0x3D54534B573BLL;
    v129 = 0xE600000000000000;
    sub_1B8B9C218();
    swift_bridgeObjectRelease();
    sub_1B8B9C218();
    swift_bridgeObjectRelease();
    return v130;
  }
  __break(1u);
LABEL_72:
  __break(1u);
  return result;
}

uint64_t sub_1B8B936C8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t result;

  v1 = v0[1];
  if ((v1 & 0x2000000000000000) == 0)
  {
    if ((*v0 & 0xFFFFFFFFFFFFLL) != 0)
    {
LABEL_5:
      sub_1B8B9C200();
      return sub_1B8B9C224();
    }
    __break(1u);
  }
  if ((v1 & 0xF00000000000000) != 0)
    goto LABEL_5;
  __break(1u);
  return result;
}

uint64_t sub_1B8B9371C(uint64_t a1, uint64_t a2)
{
  void *v4;
  id v5;
  void *v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t);
  uint64_t v10;

  v4 = (void *)objc_opt_self();
  v5 = objc_msgSend(v4, sel_iCalendarValueFromDayOfTheWeek_, (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 8))(a1, a2));
  if (v5)
  {
    v6 = v5;
    v7 = sub_1B8B9C17C();

  }
  else
  {
    v7 = 0;
  }
  v8 = *(void (**)(uint64_t, uint64_t))(a2 + 16);
  if (((uint64_t (*)(uint64_t, uint64_t))v8)(a1, a2))
  {
    v8(a1, a2);
    v10 = sub_1B8B9C8C0();
    sub_1B8B9C218();
    swift_bridgeObjectRelease();
    return v10;
  }
  return v7;
}

uint64_t sub_1B8B93818(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1B2D18);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1B8B93858(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1B2D18);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

ValueMetadata *type metadata accessor for FamilyRowInsetAppearance()
{
  return &type metadata for FamilyRowInsetAppearance;
}

uint64_t sub_1B8B938B0()
{
  return swift_getOpaqueTypeConformance2();
}

double sub_1B8B938C0@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  double result;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1BEA68);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  v5 = a2 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EF1BEA70) + 36);
  result = 8.0;
  *(_OWORD *)v5 = xmmword_1B8BAF490;
  *(_OWORD *)(v5 + 16) = xmmword_1B8BAF4A0;
  *(_BYTE *)(v5 + 32) = 0;
  return result;
}

unint64_t sub_1B8B93934()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1EF1BEA78;
  if (!qword_1EF1BEA78)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EF1BEA70);
    v2[0] = sub_1B8ADE950((unint64_t *)&unk_1EF1BEA80, &qword_1EF1BEA68, MEMORY[0x1E0CDBF18]);
    v2[1] = sub_1B8ADE950(&qword_1EF1BCF28, &qword_1EF1BCF30, MEMORY[0x1E0CDBEE8]);
    result = MEMORY[0x1BCCB79D0](MEMORY[0x1E0CD9C18], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EF1BEA78);
  }
  return result;
}

uint64_t sub_1B8B939D0@<X0>(void (*a1)(char *, char *)@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X6>, uint64_t a6@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(char *, char *);
  uint64_t v28;

  v25 = a5;
  v26 = a2;
  v28 = a4;
  v27 = a1;
  v24 = a3;
  v9 = *(_QWORD *)(a3 - 8);
  v10 = ((uint64_t (*)(void))MEMORY[0x1E0C80A78])();
  v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *(_QWORD *)(v13 + 16);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = MEMORY[0x1E0C80A78](v10);
  v18 = (char *)&v24 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v20 = (char *)&v24 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v21 + 16))(v20, v6);
  v22 = 1;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v20, 1, v14) != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v18, v20, v14);
    v27(v18, v12);
    (*(void (**)(char *, uint64_t))(v15 + 8))(v18, v14);
    if (v7)
      return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v9 + 32))(v25, v12, v24);
    v22 = 0;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(a6, v22, 1);
}

uint64_t EventModel.dateInterval.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v11;

  v4 = sub_1B8B9B0F0();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x1E0C80A78](v6);
  MEMORY[0x1E0C80A78](v9);
  (*(void (**)(uint64_t, uint64_t))(a2 + 176))(a1, a2);
  (*(void (**)(uint64_t, uint64_t))(a2 + 184))(a1, a2);
  sub_1B8B9B0E4();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  return sub_1B8B9AE8C();
}

uint64_t EventModel.isHoliday.getter(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char v10;
  uint64_t AssociatedConformanceWitness;
  uint64_t v13;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = sub_1B8B9C50C();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v13 - v7;
  (*(void (**)(uint64_t, uint64_t))(a2 + 312))(a1, a2);
  v9 = *(_QWORD *)(AssociatedTypeWitness - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v8, 1, AssociatedTypeWitness) == 1)
  {
    v10 = 0;
  }
  else
  {
    AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    v10 = (*(uint64_t (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 120))(AssociatedTypeWitness, AssociatedConformanceWitness);
    v6 = v9;
    v5 = AssociatedTypeWitness;
  }
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return v10 & 1;
}

BOOL EventModel.isBirthday.getter(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t AssociatedConformanceWitness;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = sub_1B8B9C50C();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v19 - v7;
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v10 = swift_getAssociatedTypeWitness();
  v11 = sub_1B8B9C50C();
  v19 = *(_QWORD *)(v11 - 8);
  v20 = v11;
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v19 - v12;
  (*(void (**)(uint64_t, uint64_t))(a2 + 312))(a1, a2);
  v14 = *(_QWORD *)(AssociatedTypeWitness - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v8, 1, AssociatedTypeWitness) == 1)
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    return 0;
  }
  (*(void (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 104))(AssociatedTypeWitness, AssociatedConformanceWitness);
  (*(void (**)(char *, uint64_t))(v14 + 8))(v8, AssociatedTypeWitness);
  v15 = *(_QWORD *)(v10 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v10) == 1)
  {
    (*(void (**)(char *, uint64_t))(v19 + 8))(v13, v20);
    return 0;
  }
  v17 = swift_getAssociatedConformanceWitness();
  v18 = (*(uint64_t (**)(uint64_t, uint64_t))(v17 + 40))(v10, v17);
  (*(void (**)(char *, uint64_t))(v15 + 8))(v13, v10);
  return v18 == 5;
}

uint64_t EventModel.isIntegrationBirthdayEvent.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t AssociatedTypeWitness;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t AssociatedConformanceWitness;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  void (*v17)(uint64_t, uint64_t);
  uint64_t v18;
  unsigned int (*v19)(char *, uint64_t, uint64_t);
  uint64_t v20;
  void (*v21)(char *, uint64_t);
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void (*v45)(char *, uint64_t);
  uint64_t v46;
  void (*v47)(uint64_t, uint64_t);
  uint64_t v48;
  char *v49;
  unsigned int (*v50)(char *, uint64_t, uint64_t);
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;

  v54 = *(_QWORD *)(a1 - 8);
  MEMORY[0x1E0C80A78](a1);
  v53 = (char *)&v44 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v55 = sub_1B8B9C50C();
  v7 = *(_QWORD *)(v55 - 8);
  v8 = MEMORY[0x1E0C80A78](v55);
  v49 = (char *)&v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v44 - v10;
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v13 = swift_getAssociatedTypeWitness();
  v50 = (unsigned int (*)(char *, uint64_t, uint64_t))sub_1B8B9C50C();
  v14 = *((_QWORD *)v50 - 1);
  MEMORY[0x1E0C80A78](v50);
  v16 = (char *)&v44 - v15;
  v17 = *(void (**)(uint64_t, uint64_t))(a2 + 312);
  v51 = a1;
  v52 = v2;
  v47 = v17;
  v48 = a2;
  v17(a1, a2);
  v18 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v19 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48);
  if (v19(v11, 1, AssociatedTypeWitness) == 1)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v11, v55);
LABEL_5:
    v23 = v53;
    v24 = v51;
    sub_1B8B9C17C();
    v25 = v54;
    v26 = v52;
LABEL_6:
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t, uint64_t))(v25 + 16))(v23, v26, v24);
LABEL_7:
    (*(void (**)(char *, uint64_t))(v25 + 8))(v23, v24);
LABEL_8:
    v27 = 0;
    return v27 & 1;
  }
  v46 = v7;
  v20 = v55;
  (*(void (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 104))(AssociatedTypeWitness, AssociatedConformanceWitness);
  v21 = *(void (**)(char *, uint64_t))(v18 + 8);
  v21(v11, AssociatedTypeWitness);
  v22 = *(_QWORD *)(v13 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v16, 1, v13) == 1)
  {
    (*(void (**)(char *, unsigned int (*)(char *, uint64_t, uint64_t)))(v14 + 8))(v16, v50);
    goto LABEL_5;
  }
  v50 = v19;
  v29 = swift_getAssociatedConformanceWitness();
  v30 = (*(uint64_t (**)(uint64_t, uint64_t))(v29 + 32))(v13, v29);
  v32 = v31;
  (*(void (**)(char *, uint64_t))(v22 + 8))(v16, v13);
  v33 = sub_1B8B9C17C();
  if (!v32)
  {
    v23 = v53;
    v25 = v54;
    v24 = v51;
    v26 = v52;
    goto LABEL_6;
  }
  v45 = v21;
  if (v30 == v33 && v32 == v34)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v23 = v53;
    v25 = v54;
    v24 = v51;
    (*(void (**)(char *, uint64_t, uint64_t))(v54 + 16))(v53, v52, v51);
    v37 = v46;
  }
  else
  {
    v36 = sub_1B8B9C8D8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v23 = v53;
    v25 = v54;
    v24 = v51;
    (*(void (**)(char *, uint64_t, uint64_t))(v54 + 16))(v53, v52, v51);
    v37 = v46;
    if ((v36 & 1) == 0)
      goto LABEL_7;
  }
  v38 = v49;
  v47(v24, v48);
  if (v50(v38, 1, AssociatedTypeWitness) == 1)
  {
    (*(void (**)(char *, uint64_t))(v37 + 8))(v38, v20);
    sub_1B8B9C17C();
LABEL_25:
    (*(void (**)(char *, uint64_t))(v25 + 8))(v23, v24);
    swift_bridgeObjectRelease();
    goto LABEL_8;
  }
  v39 = (*(uint64_t (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 56))(AssociatedTypeWitness, AssociatedConformanceWitness);
  v41 = v40;
  v45(v38, AssociatedTypeWitness);
  v42 = sub_1B8B9C17C();
  if (!v41)
    goto LABEL_25;
  if (v39 == v42 && v41 == v43)
    v27 = 1;
  else
    v27 = sub_1B8B9C8D8();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v25 + 8))(v23, v24);
  swift_bridgeObjectRelease();
  return v27 & 1;
}

BOOL EventModel.isRecurring.getter(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  _BOOL8 v9;
  uint64_t v11;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = sub_1B8B9C50C();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v11 - v7;
  (*(void (**)(uint64_t, uint64_t))(a2 + 376))(a1, a2);
  v9 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 48))(v8, 1, AssociatedTypeWitness) != 1;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return v9;
}

uint64_t EventModel.hasAttendees.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  _QWORD v6[7];
  char v7;

  v6[6] = (*(uint64_t (**)(void))(a2 + 392))();
  v6[2] = a1;
  v6[3] = a2;
  swift_getAssociatedTypeWitness();
  sub_1B8B9C35C();
  sub_1B8B9C50C();
  sub_1B8B939D0((void (*)(char *, char *))sub_1B8B968A8, (uint64_t)v6, MEMORY[0x1E0DEDCE8], MEMORY[0x1E0DEAFA0], v4, (uint64_t)&v7);
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1B8B945BC@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  swift_getAssociatedTypeWitness();
  v2 = sub_1B8B9C35C();
  MEMORY[0x1BCCB79D0](MEMORY[0x1E0DEAF50], v2);
  result = sub_1B8B9C428();
  *a1 = (result & 1) == 0;
  return result;
}

uint64_t EventModel.isSelfOrganizedInvitation.getter(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char v10;
  uint64_t AssociatedConformanceWitness;
  uint64_t v13;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = sub_1B8B9C50C();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v13 - v7;
  (*(void (**)(uint64_t, uint64_t))(a2 + 384))(a1, a2);
  v9 = *(_QWORD *)(AssociatedTypeWitness - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v8, 1, AssociatedTypeWitness) == 1)
  {
    v10 = 0;
  }
  else
  {
    AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    v10 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(AssociatedConformanceWitness + 8) + 56))(AssociatedTypeWitness);
    v6 = v9;
    v5 = AssociatedTypeWitness;
  }
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return v10 & 1;
}

uint64_t EventModel.selfAttendeeStatus.getter(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t AssociatedConformanceWitness;
  uint64_t v13;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = sub_1B8B9C50C();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v13 - v7;
  (*(void (**)(uint64_t, uint64_t))(a2 + 408))(a1, a2);
  v9 = *(_QWORD *)(AssociatedTypeWitness - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v8, 1, AssociatedTypeWitness) == 1)
  {
    v10 = 0;
  }
  else
  {
    AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    v10 = (*(uint64_t (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 16))(AssociatedTypeWitness, AssociatedConformanceWitness);
    v6 = v9;
    v5 = AssociatedTypeWitness;
  }
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return v10;
}

uint64_t EventModel.isExternallyOrganizedInvitation.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char v10;
  char v11;
  uint64_t v13;

  v5 = *(_QWORD *)(a1 - 8);
  v6 = MEMORY[0x1E0C80A78](a1);
  v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = EventModel.hasAttendees.getter(v6, v9);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v8, v2, a1);
  if ((v10 & 1) != 0)
    v11 = EventModel.isSelfOrganizedInvitation.getter(a1, a2) ^ 1;
  else
    v11 = 0;
  (*(void (**)(char *, uint64_t))(v5 + 8))(v8, a1);
  return v11 & 1;
}

BOOL EventModel.isCurrentUserInvitedAttendee.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t AssociatedTypeWitness;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char v14;
  _BOOL8 v15;
  uint64_t v17;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v6 = sub_1B8B9C50C();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v17 - v9;
  v11 = *(_QWORD *)(a1 - 8);
  MEMORY[0x1E0C80A78](v8);
  v13 = (char *)&v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = EventModel.isExternallyOrganizedInvitation.getter(a1, a2);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, v2, a1);
  if ((v14 & 1) != 0)
  {
    (*(void (**)(uint64_t, uint64_t))(a2 + 408))(a1, a2);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, a1);
    v15 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 48))(v10, 1, AssociatedTypeWitness) != 1;
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, a1);
    return 0;
  }
  return v15;
}

uint64_t EventModel.currentUserMayActAsOrganizer.getter(uint64_t a1, uint64_t a2)
{
  void (*v2)(_QWORD, _QWORD, _QWORD);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t AssociatedTypeWitness;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  void (*v24)(uint64_t, uint64_t);
  char v25;
  uint64_t AssociatedConformanceWitness;
  char v27;
  char *v28;
  uint64_t v29;
  void (*v30)(_QWORD, _QWORD, _QWORD);
  void (*v31)(char *, char *, uint64_t);
  char v32;
  char *v33;
  char *v34;
  void (*v35)(char *, uint64_t);
  void (*v36)(char *, uint64_t);
  void (*v37)(char *, uint64_t);
  BOOL v38;
  char *v39;
  char *v40;
  char *v41;
  char *v42;
  void (*v43)(char *, uint64_t);
  void (*v44)(char *, uint64_t);
  char *v46;
  char *v47;
  char *v48;
  char *v49;
  uint64_t v50;
  char *v51;
  void (*v52)(_QWORD, _QWORD, _QWORD);
  char *v53;

  v50 = *(_QWORD *)(a1 - 8);
  v5 = MEMORY[0x1E0C80A78](a1);
  v48 = (char *)&v46 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x1E0C80A78](v5);
  v49 = (char *)&v46 - v8;
  MEMORY[0x1E0C80A78](v7);
  v51 = (char *)&v46 - v9;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v11 = sub_1B8B9C50C();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = MEMORY[0x1E0C80A78](v11);
  v15 = (char *)&v46 - v14;
  v16 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v17 = MEMORY[0x1E0C80A78](v13);
  v19 = (char *)&v46 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = MEMORY[0x1E0C80A78](v17);
  v53 = (char *)&v46 - v21;
  MEMORY[0x1E0C80A78](v20);
  v23 = (char *)&v46 - v22;
  v24 = *(void (**)(uint64_t, uint64_t))(a2 + 312);
  v52 = v2;
  v24(a1, a2);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v15, 1, AssociatedTypeWitness) == 1)
  {
    (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v11);
    v25 = EventModel.isSelfOrganizedInvitation.getter(a1, a2);
  }
  else
  {
    v47 = v19;
    (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v23, v15, AssociatedTypeWitness);
    AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    v27 = (*(uint64_t (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 88))(AssociatedTypeWitness, AssociatedConformanceWitness);
    v29 = v50;
    v28 = v51;
    v30 = v52;
    v52 = *(void (**)(_QWORD, _QWORD, _QWORD))(v50 + 16);
    v52(v51, v30, a1);
    v31 = *(void (**)(char *, char *, uint64_t))(v16 + 16);
    v31(v53, v23, AssociatedTypeWitness);
    if ((v27 & 1) != 0)
    {
      v46 = v23;
      v32 = EventModel.isSelfOrganizedInvitation.getter(a1, a2);
      v33 = v47;
      v31(v47, v53, AssociatedTypeWitness);
      v34 = v49;
      v52(v49, v28, a1);
      if ((v32 & 1) != 0)
      {
        v35 = *(void (**)(char *, uint64_t))(v29 + 8);
        v35(v34, a1);
        v36 = *(void (**)(char *, uint64_t))(v16 + 8);
        v36(v33, AssociatedTypeWitness);
        v36(v53, AssociatedTypeWitness);
        v35(v28, a1);
        v36(v46, AssociatedTypeWitness);
        v25 = 1;
      }
      else
      {
        v38 = EventCalendarModel.isSharedToMe.getter(AssociatedTypeWitness, AssociatedConformanceWitness);
        v39 = v48;
        v52(v48, v34, a1);
        v40 = v46;
        v41 = v53;
        if (v38)
          v25 = EventModel.isOrganizedBySharedCalendarOwner.getter(a1, a2);
        else
          v25 = 0;
        v42 = v39;
        v43 = *(void (**)(char *, uint64_t))(v29 + 8);
        v43(v42, a1);
        v43(v34, a1);
        v44 = *(void (**)(char *, uint64_t))(v16 + 8);
        v44(v47, AssociatedTypeWitness);
        v44(v41, AssociatedTypeWitness);
        v43(v51, a1);
        v44(v40, AssociatedTypeWitness);
      }
    }
    else
    {
      v37 = *(void (**)(char *, uint64_t))(v16 + 8);
      v37(v53, AssociatedTypeWitness);
      (*(void (**)(char *, uint64_t))(v29 + 8))(v28, a1);
      v37(v23, AssociatedTypeWitness);
      v25 = 0;
    }
  }
  return v25 & 1;
}

uint64_t EventModel.isOrganizedBySharedCalendarOwner.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t AssociatedConformanceWitness;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t *v45;
  uint64_t v46;
  uint64_t v47;
  BOOL v48;
  BOOL v49;
  BOOL v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t *v53;
  uint64_t AssociatedTypeWitness;
  __int128 v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v4 = sub_1B8B9C50C();
  v51 = *(_QWORD *)(v4 - 8);
  v52 = v4;
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v51 - v5;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1B3020);
  MEMORY[0x1E0C80A78](v7);
  v53 = (uint64_t *)((char *)&v51 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = swift_getAssociatedTypeWitness();
  v10 = sub_1B8B9C50C();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v51 - v13;
  v15 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v12);
  v17 = (char *)&v51 - v16;
  (*(void (**)(uint64_t, uint64_t))(a2 + 312))(a1, a2);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v14, 1, v9) == 1)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v10);
    return 0;
  }
  (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v17, v14, v9);
  (*(void (**)(uint64_t, uint64_t))(a2 + 384))(a1, a2);
  v18 = AssociatedTypeWitness;
  v19 = *(_QWORD *)(AssociatedTypeWitness - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v6, 1, AssociatedTypeWitness) == 1)
  {
    (*(void (**)(char *, uint64_t))(v51 + 8))(v6, v52);
LABEL_7:
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v9);
    return 0;
  }
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v21 = (uint64_t)v53;
  (*(void (**)(uint64_t))(*(_QWORD *)(AssociatedConformanceWitness + 8) + 48))(v18);
  (*(void (**)(char *, uint64_t))(v19 + 8))(v6, v18);
  v22 = sub_1B8B9B054();
  v23 = *(_QWORD *)(v22 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22) == 1)
  {
    sub_1B8ADE894(v21, &qword_1ED1B3020);
    goto LABEL_7;
  }
  AssociatedTypeWitness = a2;
  v26 = sub_1B8B9B018();
  v28 = v27;
  (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v21, v22);
  v55 = xmmword_1B8BA7860;
  v56 = v26;
  v57 = v28;
  swift_bridgeObjectRetain();
  v29 = (void *)sub_1B8B9C14C();
  v30 = objc_msgSend(v29, sel_stringRemovingMailto);

  if (v30)
  {
    v31 = sub_1B8B9C17C();
    v33 = v32;

  }
  else
  {
    v31 = 0;
    v33 = 0;
  }
  v53 = &v56;
  v58 = v31;
  v59 = v33;
  v34 = (void *)sub_1B8B9C14C();
  swift_bridgeObjectRelease();
  v35 = objc_msgSend(v34, sel_stringRemovingTel);

  if (v35)
  {
    v36 = sub_1B8B9C17C();
    v38 = v37;

  }
  else
  {
    v36 = 0;
    v38 = 0;
  }
  v60 = v36;
  v61 = v38;
  v39 = swift_getAssociatedConformanceWitness();
  v40 = v9;
  v41 = (*(uint64_t (**)(uint64_t, uint64_t))(v39 + 168))(v9, v39);
  v42 = *(_QWORD *)(v41 + 16);
  if (v42)
  {
    v43 = v56;
    v44 = v57;
    swift_bridgeObjectRetain();
    v45 = (uint64_t *)(v41 + 40);
    do
    {
      v46 = *(v45 - 1);
      v47 = *v45;
      if (v44 && (v43 == v46 ? (v48 = v44 == v47) : (v48 = 0), v48 || (sub_1B8B9C8D8() & 1) != 0)
        || v59 && (v58 == v46 ? (v49 = v59 == v47) : (v49 = 0), v49 || (sub_1B8B9C8D8() & 1) != 0)
        || v61 && (v60 == v46 ? (v50 = v61 == v47) : (v50 = 0), v50 || (sub_1B8B9C8D8() & 1) != 0))
      {
        v24 = 1;
        goto LABEL_40;
      }
      v45 += 2;
      --v42;
    }
    while (v42);
    v24 = 0;
LABEL_40:
    swift_bridgeObjectRelease();
  }
  else
  {
    v24 = 0;
  }
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v40);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF1BC3D0);
  swift_arrayDestroy();
  return v24;
}

BOOL EventModel.isPrivate.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 320))() != 0;
}

uint64_t EventModel.isDelegate.getter(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t AssociatedConformanceWitness;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = sub_1B8B9C50C();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v19 - v7;
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v10 = swift_getAssociatedTypeWitness();
  v11 = sub_1B8B9C50C();
  v19 = *(_QWORD *)(v11 - 8);
  v20 = v11;
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v19 - v12;
  (*(void (**)(uint64_t, uint64_t))(a2 + 312))(a1, a2);
  v14 = *(_QWORD *)(AssociatedTypeWitness - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v8, 1, AssociatedTypeWitness) == 1)
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 104))(AssociatedTypeWitness, AssociatedConformanceWitness);
    (*(void (**)(char *, uint64_t))(v14 + 8))(v8, AssociatedTypeWitness);
    v15 = *(_QWORD *)(v10 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v10) != 1)
    {
      v17 = swift_getAssociatedConformanceWitness();
      v16 = (*(uint64_t (**)(uint64_t, uint64_t))(v17 + 56))(v10, v17);
      (*(void (**)(char *, uint64_t))(v15 + 8))(v13, v10);
      return v16 & 1;
    }
    (*(void (**)(char *, uint64_t))(v19 + 8))(v13, v20);
  }
  v16 = 0;
  return v16 & 1;
}

BOOL EventModel.isSharedToMe.getter(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t AssociatedConformanceWitness;
  uint64_t v12;
  uint64_t v13;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = sub_1B8B9C50C();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v13 - v7;
  (*(void (**)(uint64_t, uint64_t))(a2 + 312))(a1, a2);
  v9 = *(_QWORD *)(AssociatedTypeWitness - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v8, 1, AssociatedTypeWitness) == 1)
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    return 0;
  }
  else
  {
    AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    v12 = (*(uint64_t (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 96))(AssociatedTypeWitness, AssociatedConformanceWitness);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v8, AssociatedTypeWitness);
    return v12 == 2;
  }
}

BOOL EventModel.isIntegrationEvent.getter(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  _BOOL8 v9;
  uint64_t v11;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = sub_1B8B9C50C();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v11 - v7;
  (*(void (**)(uint64_t, uint64_t))(a2 + 448))(a1, a2);
  v9 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 48))(v8, 1, AssociatedTypeWitness) != 1;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return v9;
}

uint64_t EventModel.displayColor.getter(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t AssociatedConformanceWitness;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v20 = sub_1B8B9C50C();
  v5 = *(_QWORD *)(v20 - 8);
  MEMORY[0x1E0C80A78](v20);
  v7 = (char *)&v19 - v6;
  v8 = swift_getAssociatedTypeWitness();
  v9 = sub_1B8B9C50C();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v19 - v11;
  if (EventModel.isIntegrationEvent.getter(a1, a2))
  {
    (*(void (**)(uint64_t, uint64_t))(a2 + 448))(a1, a2);
    v13 = *(_QWORD *)(v8 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v12, 1, v8) != 1)
    {
      AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
      v15 = (*(uint64_t (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 16))(v8, AssociatedConformanceWitness);
      (*(void (**)(char *, uint64_t))(v13 + 8))(v12, v8);
      return v15;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t))(a2 + 312))(a1, a2);
    v14 = *(_QWORD *)(AssociatedTypeWitness - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v7, 1, AssociatedTypeWitness) != 1)
    {
      v17 = swift_getAssociatedConformanceWitness();
      v15 = EventCalendarModel.displayColor.getter(AssociatedTypeWitness, v17);
      (*(void (**)(char *, uint64_t))(v14 + 8))(v7, AssociatedTypeWitness);
      return v15;
    }
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v20);
  }
  return 0;
}

uint64_t EventModel.hasAbsoluteAlarms.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  char v4;

  v2 = (*(uint64_t (**)(void))(a2 + 336))();
  if (v2)
  {
    MEMORY[0x1E0C80A78](v2);
    swift_getAssociatedTypeWitness();
    v3 = sub_1B8B9C35C();
    MEMORY[0x1BCCB79D0](MEMORY[0x1E0DEAF38], v3);
    v4 = sub_1B8B9C29C();
    swift_bridgeObjectRelease();
  }
  else
  {
    v4 = 0;
  }
  return v4 & 1;
}

BOOL sub_1B8B95A8C()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t AssociatedConformanceWitness;
  void (*v4)(uint64_t, uint64_t);
  uint64_t v5;
  uint64_t v6;
  _BOOL8 v7;
  uint64_t v9;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1B2D18);
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)&v9 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v4 = *(void (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 32);
  v5 = swift_checkMetadataState();
  v4(v5, AssociatedConformanceWitness);
  v6 = sub_1B8B9B0F0();
  v7 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 48))(v2, 1, v6) != 1;
  sub_1B8ADE894((uint64_t)v2, &qword_1ED1B2D18);
  return v7;
}

uint64_t EventModel.url.getter@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v5;

  (*(void (**)(void))(a1 + 416))();
  if (v3)
  {
    sub_1B8B9B048();
    return swift_bridgeObjectRelease();
  }
  else
  {
    v5 = sub_1B8B9B054();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(a2, 1, 1, v5);
  }
}

BOOL EventModel.hasURL.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  _BOOL8 v7;
  uint64_t v9;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1B3020);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  EventModel.url.getter(a2, (uint64_t)v5);
  v6 = sub_1B8B9B054();
  v7 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 48))(v5, 1, v6) != 1;
  sub_1B8ADE894((uint64_t)v5, &qword_1ED1B3020);
  return v7;
}

uint64_t EventModel.isDeletable.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t AssociatedTypeWitness;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  void (*v26)(char *, uint64_t, uint64_t);
  char v27;
  BOOL v28;
  uint64_t v29;
  void (*v30)(char *, uint64_t);
  void (*v31)(uint64_t, uint64_t);
  uint64_t v32;
  unsigned int (*v33)(char *, uint64_t, uint64_t);
  char v34;
  uint64_t v35;
  char *v36;
  char v37;
  char *v38;
  unsigned int (**v39)(char *, uint64_t, uint64_t);
  uint64_t v40;
  uint64_t (*v41)(uint64_t, uint64_t);
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  char v46;
  uint64_t v47;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  void (**v54)(char *, uint64_t);
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t AssociatedConformanceWitness;
  uint64_t v60;

  v3 = v2;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v56 = swift_getAssociatedTypeWitness();
  v7 = sub_1B8B9C50C();
  v50 = *(_QWORD *)(v7 - 8);
  v51 = v7;
  v8 = MEMORY[0x1E0C80A78](v7);
  v53 = (char *)&v49 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v52 = (char *)&v49 - v10;
  v11 = sub_1B8B9C50C();
  v57 = *(_QWORD *)(v11 - 8);
  v58 = v11;
  v12 = MEMORY[0x1E0C80A78](v11);
  v55 = (char *)&v49 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x1E0C80A78](v12);
  v54 = (void (**)(char *, uint64_t))((char *)&v49 - v15);
  v16 = MEMORY[0x1E0C80A78](v14);
  v18 = (char *)&v49 - v17;
  v19 = *(_QWORD *)(a1 - 8);
  v20 = MEMORY[0x1E0C80A78](v16);
  v22 = (char *)&v49 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v20);
  v24 = (char *)&v49 - v23;
  v25 = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 320))(a1, a2);
  v26 = *(void (**)(char *, uint64_t, uint64_t))(v19 + 16);
  v60 = v3;
  v26(v24, v3, a1);
  if (v25)
  {
    v27 = EventModel.isDelegate.getter(a1, a2);
    v26(v22, (uint64_t)v24, a1);
    v28 = (v27 & 1) != 0 || EventModel.isSharedToMe.getter(a1, a2);
    v29 = v56;
    v30 = *(void (**)(char *, uint64_t))(v19 + 8);
    v30(v22, a1);
    v30(v24, a1);
  }
  else
  {
    v28 = 0;
    v29 = v56;
    (*(void (**)(char *, uint64_t))(v19 + 8))(v24, a1);
  }
  v31 = *(void (**)(uint64_t, uint64_t))(a2 + 312);
  v31(a1, a2);
  v32 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v33 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48);
  if (v33(v18, 1, AssociatedTypeWitness) == 1)
  {
    (*(void (**)(char *, uint64_t))(v57 + 8))(v18, v58);
  }
  else
  {
    v34 = (*(uint64_t (**)(uint64_t))(AssociatedConformanceWitness + 88))(AssociatedTypeWitness);
    (*(void (**)(char *, uint64_t))(v32 + 8))(v18, AssociatedTypeWitness);
    if (!v28 && (v34 & 1) != 0)
    {
LABEL_26:
      v46 = 1;
      return v46 & 1;
    }
  }
  v35 = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 328))(a1, a2);
  v36 = (char *)v54;
  v31(a1, a2);
  if (v33(v36, 1, AssociatedTypeWitness) == 1)
  {
    (*(void (**)(char *, uint64_t))(v57 + 8))(v36, v58);
    v37 = 0;
  }
  else
  {
    v56 = v35;
    v38 = v52;
    (*(void (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 104))(AssociatedTypeWitness, AssociatedConformanceWitness);
    (*(void (**)(char *, uint64_t))(v32 + 8))(v36, AssociatedTypeWitness);
    v39 = *(unsigned int (***)(char *, uint64_t, uint64_t))(v29 - 8);
    if (v39[6](v38, 1, v29) == 1)
    {
      (*(void (**)(char *, uint64_t))(v50 + 8))(v38, v51);
      v37 = 0;
    }
    else
    {
      v40 = swift_getAssociatedConformanceWitness();
      v41 = *(uint64_t (**)(uint64_t, uint64_t))(v40 + 56);
      v54 = (void (**)(char *, uint64_t))v39;
      v37 = v41(v29, v40);
      v54[1](v38, v29);
    }
    v35 = v56;
  }
  v42 = a1;
  v43 = v55;
  v31(v42, a2);
  if (v33(v43, 1, AssociatedTypeWitness) == 1)
  {
    (*(void (**)(char *, uint64_t))(v57 + 8))(v43, v58);
    if ((v37 & 1) == 0)
      goto LABEL_25;
  }
  else
  {
    v44 = v53;
    (*(void (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 104))(AssociatedTypeWitness, AssociatedConformanceWitness);
    (*(void (**)(char *, uint64_t))(v32 + 8))(v43, AssociatedTypeWitness);
    v45 = *(_QWORD *)(v29 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v45 + 48))(v44, 1, v29) != 1)
    {
      v47 = swift_getAssociatedConformanceWitness();
      v46 = (*(uint64_t (**)(uint64_t, uint64_t))(v47 + 72))(v29, v47);
      (*(void (**)(char *, uint64_t))(v45 + 8))(v44, v29);
      if ((v37 & 1) != 0)
      {
        if (v35 == 3)
          return v46 & 1;
        goto LABEL_27;
      }
LABEL_25:
      if (v35 == 3)
        goto LABEL_26;
LABEL_27:
      v46 = 0;
      return v46 & 1;
    }
    (*(void (**)(char *, uint64_t))(v50 + 8))(v44, v51);
    if ((v37 & 1) == 0)
      goto LABEL_25;
  }
  v46 = 0;
  return v46 & 1;
}

uint64_t EventModel.externalURL.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t AssociatedTypeWitness;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t AssociatedConformanceWitness;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  void (*v20)(uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  double v36;
  double v37;
  uint64_t result;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;

  v52 = a3;
  v6 = sub_1B8B9B0F0();
  v42 = *(_QWORD *)(v6 - 8);
  v43 = v6;
  MEMORY[0x1E0C80A78](v6);
  v41 = (char *)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1B8B9AE80();
  v47 = *(_QWORD *)(v8 - 8);
  v48 = v8;
  MEMORY[0x1E0C80A78](v8);
  v51 = (char *)&v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v11 = sub_1B8B9C50C();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v40 - v13;
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v16 = swift_getAssociatedTypeWitness();
  v17 = sub_1B8B9C50C();
  v49 = *(_QWORD *)(v17 - 8);
  v50 = v17;
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)&v40 - v18;
  v20 = *(void (**)(uint64_t, uint64_t))(a2 + 312);
  v44 = a1;
  v45 = v3;
  v46 = a2;
  v20(a1, a2);
  v21 = *(_QWORD *)(AssociatedTypeWitness - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v14, 1, AssociatedTypeWitness) == 1)
  {
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
LABEL_12:
    v39 = sub_1B8B9B054();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 56))(v52, 1, 1, v39);
  }
  (*(void (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 104))(AssociatedTypeWitness, AssociatedConformanceWitness);
  (*(void (**)(char *, uint64_t))(v21 + 8))(v14, AssociatedTypeWitness);
  v22 = *(_QWORD *)(v16 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v19, 1, v16) == 1)
  {
    (*(void (**)(char *, uint64_t))(v49 + 8))(v19, v50);
    goto LABEL_12;
  }
  v23 = swift_getAssociatedConformanceWitness();
  v24 = (*(uint64_t (**)(uint64_t, uint64_t))(v23 + 24))(v16, v23);
  v26 = v25;
  (*(void (**)(char *, uint64_t))(v22 + 8))(v19, v16);
  v27 = v51;
  sub_1B8B9AE44();
  sub_1B8B9AE5C();
  v54 = v24;
  v55 = v26;
  sub_1B8ADDBE4();
  sub_1B8B9C560();
  v29 = v28;
  swift_bridgeObjectRelease();
  if (!v29)
  {
    (*(void (**)(char *, uint64_t))(v47 + 8))(v27, v48);
    goto LABEL_12;
  }
  v30 = v46;
  v31 = v44;
  v54 = (*(uint64_t (**)(uint64_t, uint64_t))(v46 + 168))(v44, v46);
  v55 = v32;
  sub_1B8B9C560();
  v34 = v33;
  swift_bridgeObjectRelease();
  if (!v34)
  {
    (*(void (**)(char *, uint64_t))(v47 + 8))(v27, v48);
    swift_bridgeObjectRelease();
    goto LABEL_12;
  }
  v54 = 0;
  v55 = 0xE000000000000000;
  sub_1B8B9C638();
  swift_bridgeObjectRelease();
  v54 = 0xD000000000000013;
  v55 = 0x80000001B8BB92B0;
  sub_1B8B9C218();
  swift_bridgeObjectRelease();
  sub_1B8B9C218();
  sub_1B8B9C218();
  swift_bridgeObjectRelease();
  sub_1B8B9C218();
  v35 = v41;
  (*(void (**)(uint64_t, uint64_t))(v30 + 176))(v31, v30);
  sub_1B8B9B09C();
  v37 = v36;
  result = (*(uint64_t (**)(char *, uint64_t))(v42 + 8))(v35, v43);
  if ((~*(_QWORD *)&v37 & 0x7FF0000000000000) != 0)
  {
    if (v37 > -9.22337204e18)
    {
      if (v37 < 9.22337204e18)
      {
        v53 = (uint64_t)v37;
        sub_1B8B9C8C0();
        sub_1B8B9C218();
        swift_bridgeObjectRelease();
        sub_1B8B9B048();
        swift_bridgeObjectRelease();
        return (*(uint64_t (**)(char *, uint64_t))(v47 + 8))(v27, v48);
      }
      goto LABEL_16;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
LABEL_16:
  __break(1u);
  return result;
}

uint64_t EventModel.uniqueIDWithoutRID.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t (*v7)(uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  char v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD v21[4];

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1B3018);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(uint64_t (**)(uint64_t, uint64_t))(a2 + 168);
  v21[2] = v7(a1, a2);
  v21[3] = v8;
  v21[0] = 0x3D4449522FLL;
  v21[1] = 0xE500000000000000;
  v9 = sub_1B8B9B198();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v6, 1, 1, v9);
  sub_1B8ADDBE4();
  sub_1B8B9C578();
  v11 = v10;
  sub_1B8ADE894((uint64_t)v6, &qword_1ED1B3018);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v11 & 1) != 0)
    return v7(a1, a2);
  v7(a1, a2);
  v12 = sub_1B8B9C290();
  v14 = v13;
  v16 = v15;
  v18 = v17;
  swift_bridgeObjectRelease();
  v19 = MEMORY[0x1BCCB635C](v12, v14, v16, v18);
  swift_bridgeObjectRelease();
  return v19;
}

uint64_t sub_1B8B968A8@<X0>(BOOL *a1@<X8>)
{
  return sub_1B8B945BC(a1);
}

BOOL sub_1B8B968C4()
{
  return sub_1B8B95A8C();
}

uint64_t dispatch thunk of EventModel.id.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 152))();
}

uint64_t dispatch thunk of EventModel.title.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 160))();
}

uint64_t dispatch thunk of EventModel.uniqueID.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 168))();
}

uint64_t dispatch thunk of EventModel.startDate.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 176))();
}

uint64_t dispatch thunk of EventModel.endDate.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 184))();
}

uint64_t dispatch thunk of EventModel.duration.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 192))();
}

uint64_t dispatch thunk of EventModel.isAllDay.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 200))();
}

uint64_t dispatch thunk of EventModel.isProposedTime.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 208))();
}

uint64_t dispatch thunk of EventModel.startTimeZone.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 216))();
}

uint64_t dispatch thunk of EventModel.endTimeZone.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 224))();
}

uint64_t dispatch thunk of EventModel.isFloating.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 232))();
}

uint64_t dispatch thunk of EventModel.virtualConference.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 240))();
}

uint64_t dispatch thunk of EventModel.location.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 248))();
}

uint64_t dispatch thunk of EventModel.locationWithoutPrediction.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 256))();
}

uint64_t dispatch thunk of EventModel.locationsWithoutPrediction.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 264))();
}

uint64_t dispatch thunk of EventModel.structuredLocation.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 272))();
}

uint64_t dispatch thunk of EventModel.structuredLocationWithoutPrediction.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 280))();
}

uint64_t dispatch thunk of EventModel.preferredLocation.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 288))();
}

uint64_t dispatch thunk of EventModel.travelTime.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 296))();
}

uint64_t dispatch thunk of EventModel.travelRoutingMode.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 304))();
}

uint64_t dispatch thunk of EventModel.calendar.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 312))();
}

uint64_t dispatch thunk of EventModel.privacyLevel.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 320))();
}

uint64_t dispatch thunk of EventModel.status.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 328))();
}

uint64_t dispatch thunk of EventModel.alarms.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 336))();
}

uint64_t dispatch thunk of EventModel.notes.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 344))();
}

uint64_t dispatch thunk of EventModel.availability.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 352))();
}

uint64_t dispatch thunk of EventModel.recurrenceDate.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 360))();
}

uint64_t dispatch thunk of EventModel.recurrenceRules.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 368))();
}

uint64_t dispatch thunk of EventModel.singleRecurrenceRule.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 376))();
}

uint64_t dispatch thunk of EventModel.organizer.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 384))();
}

uint64_t dispatch thunk of EventModel.attendees.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 392))();
}

uint64_t dispatch thunk of EventModel.attendeesNotIncludingOrganizerOrLocationsOrResources.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 400))();
}

uint64_t dispatch thunk of EventModel.selfAttendee.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 408))();
}

uint64_t dispatch thunk of EventModel.urlString.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 416))();
}

uint64_t dispatch thunk of EventModel.hasAttachment.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 424))();
}

uint64_t dispatch thunk of EventModel.conferenceURLForDisplayCached.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 432))();
}

uint64_t dispatch thunk of EventModel.conferenceURLForDisplay.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 440))();
}

uint64_t dispatch thunk of EventModel.integration.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 448))();
}

uint64_t dispatch thunk of EventModel.isEditable.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 456))();
}

uint64_t dispatch thunk of EventModel.isNew.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 464))();
}

uint64_t dispatch thunk of EventModel.isSuggestedEvent.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 472))();
}

uint64_t EKLocationPredictedLOIModelWrapper.init(_:)@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = result;
  return result;
}

{
  *a2 = result;
  return result;
}

id EKLocationPredictedLOIModelWrapper.ekPredictedLOI.getter()
{
  id *v0;

  return *v0;
}

void EKLocationPredictedLOIModelWrapper.ekPredictedLOI.setter(void *a1)
{
  id *v1;

  *v1 = a1;
}

uint64_t (*EKLocationPredictedLOIModelWrapper.ekPredictedLOI.modify())()
{
  return nullsub_1;
}

id EKLocationPredictedLOIModelWrapper.type.getter()
{
  id *v0;

  return objc_msgSend(*v0, sel_type);
}

uint64_t EKLocationPredictedLOIModelWrapper.customLabel.getter()
{
  return sub_1B8AED0FC((SEL *)&selRef_customLabel);
}

uint64_t EKLocationPredictedLOIModelWrapper.mapItemName.getter()
{
  return sub_1B8AED0FC((SEL *)&selRef_mapItemName);
}

uint64_t EKLocationPredictedLOIModelWrapper.addressCountryCode.getter()
{
  return sub_1B8AED0FC((SEL *)&selRef_addressCountryCode);
}

uint64_t EKLocationPredictedLOIModelWrapper.addressThoroughfare.getter()
{
  return sub_1B8AED0FC((SEL *)&selRef_addressThoroughfare);
}

uint64_t EKLocationPredictedLOIModelWrapper.addressLocality.getter()
{
  return sub_1B8AED0FC((SEL *)&selRef_addressLocality);
}

uint64_t sub_1B8B96AC4(uint64_t a1, uint64_t a2)
{
  return sub_1B8AED284(a1, a2, (SEL *)&selRef_customLabel);
}

uint64_t sub_1B8B96AD0(uint64_t a1, uint64_t a2)
{
  return sub_1B8AED284(a1, a2, (SEL *)&selRef_mapItemName);
}

uint64_t sub_1B8B96ADC(uint64_t a1, uint64_t a2)
{
  return sub_1B8AED284(a1, a2, (SEL *)&selRef_addressCountryCode);
}

uint64_t sub_1B8B96AE8(uint64_t a1, uint64_t a2)
{
  return sub_1B8AED284(a1, a2, (SEL *)&selRef_addressThoroughfare);
}

uint64_t sub_1B8B96AF4(uint64_t a1, uint64_t a2)
{
  return sub_1B8AED284(a1, a2, (SEL *)&selRef_addressLocality);
}

ValueMetadata *type metadata accessor for EKLocationPredictedLOIModelWrapper()
{
  return &type metadata for EKLocationPredictedLOIModelWrapper;
}

uint64_t sub_1B8B96B10()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ResourceBundleClass()
{
  return objc_opt_self();
}

void CUIKLaunchURLForEvent_cold_1()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  OUTLINED_FUNCTION_3_0();
  OUTLINED_FUNCTION_6(&dword_1B8A6A000, v0, v1, "Could not get launch url for event because event was nil (maybe deleted?)", v2, v3, v4, v5, v6);
  OUTLINED_FUNCTION_1_0();
}

void CUIKLaunchURLForEvent_cold_2()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  OUTLINED_FUNCTION_3_0();
  OUTLINED_FUNCTION_6(&dword_1B8A6A000, v0, v1, "Could not get launch url for event because unable to get event url", v2, v3, v4, v5, v6);
  OUTLINED_FUNCTION_1_0();
}

void CUIKLaunchURLForEventInvitation_cold_1()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  OUTLINED_FUNCTION_3_0();
  OUTLINED_FUNCTION_6(&dword_1B8A6A000, v0, v1, "Could not get launch url for event invitation because event was nil (maybe deleted?)", v2, v3, v4, v5, v6);
  OUTLINED_FUNCTION_1_0();
}

void CUIKLaunchURLForEventInvitation_cold_2()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  OUTLINED_FUNCTION_3_0();
  OUTLINED_FUNCTION_6(&dword_1B8A6A000, v0, v1, "Could not get launch url for event invitation because unable to get event url", v2, v3, v4, v5, v6);
  OUTLINED_FUNCTION_1_0();
}

uint64_t sub_1B8B9AE14()
{
  return MEMORY[0x1E0CAE070]();
}

uint64_t sub_1B8B9AE20()
{
  return MEMORY[0x1E0CAE0A8]();
}

uint64_t sub_1B8B9AE2C()
{
  return MEMORY[0x1E0CAE0B8]();
}

uint64_t sub_1B8B9AE38()
{
  return MEMORY[0x1E0CAE3B8]();
}

uint64_t sub_1B8B9AE44()
{
  return MEMORY[0x1E0CAE408]();
}

uint64_t sub_1B8B9AE50()
{
  return MEMORY[0x1E0CAE430]();
}

uint64_t sub_1B8B9AE5C()
{
  return MEMORY[0x1E0CAE468]();
}

uint64_t sub_1B8B9AE68()
{
  return MEMORY[0x1E0CAE488]();
}

uint64_t sub_1B8B9AE74()
{
  return MEMORY[0x1E0CAE498]();
}

uint64_t sub_1B8B9AE80()
{
  return MEMORY[0x1E0CAE4B8]();
}

uint64_t sub_1B8B9AE8C()
{
  return MEMORY[0x1E0CAE590]();
}

uint64_t sub_1B8B9AE98()
{
  return MEMORY[0x1E0CAE8D0]();
}

uint64_t sub_1B8B9AEA4()
{
  return MEMORY[0x1E0CAE8F0]();
}

uint64_t sub_1B8B9AEB0()
{
  return MEMORY[0x1E0CAE8F8]();
}

uint64_t sub_1B8B9AEBC()
{
  return MEMORY[0x1E0CAE958]();
}

uint64_t sub_1B8B9AEC8()
{
  return MEMORY[0x1E0CAE968]();
}

uint64_t sub_1B8B9AED4()
{
  return MEMORY[0x1E0CAE9C8]();
}

uint64_t sub_1B8B9AEE0()
{
  return MEMORY[0x1E0CAE9D0]();
}

uint64_t sub_1B8B9AEEC()
{
  return MEMORY[0x1E0CAE9D8]();
}

uint64_t sub_1B8B9AEF8()
{
  return MEMORY[0x1E0CAEA00]();
}

uint64_t sub_1B8B9AF04()
{
  return MEMORY[0x1E0CAEA10]();
}

uint64_t sub_1B8B9AF10()
{
  return MEMORY[0x1E0CAEA18]();
}

uint64_t sub_1B8B9AF1C()
{
  return MEMORY[0x1E0CAEA20]();
}

uint64_t sub_1B8B9AF28()
{
  return MEMORY[0x1E0CAEA28]();
}

uint64_t sub_1B8B9AF34()
{
  return MEMORY[0x1E0CAEA40]();
}

uint64_t sub_1B8B9AF40()
{
  return MEMORY[0x1E0CAEA80]();
}

uint64_t sub_1B8B9AF4C()
{
  return MEMORY[0x1E0CAEAB0]();
}

uint64_t sub_1B8B9AF58()
{
  return MEMORY[0x1E0CAEF60]();
}

uint64_t sub_1B8B9AF64()
{
  return MEMORY[0x1E0CAEF70]();
}

uint64_t sub_1B8B9AF70()
{
  return MEMORY[0x1E0CAEFA0]();
}

uint64_t sub_1B8B9AF7C()
{
  return MEMORY[0x1E0CAEFD0]();
}

uint64_t sub_1B8B9AF88()
{
  return MEMORY[0x1E0CAF1B0]();
}

uint64_t sub_1B8B9AF94()
{
  return MEMORY[0x1E0CAF240]();
}

uint64_t sub_1B8B9AFA0()
{
  return MEMORY[0x1E0CAF278]();
}

uint64_t sub_1B8B9AFAC()
{
  return MEMORY[0x1E0CAF2C0]();
}

uint64_t sub_1B8B9AFB8()
{
  return MEMORY[0x1E0CAF2C8]();
}

uint64_t sub_1B8B9AFC4()
{
  return MEMORY[0x1E0CAF2D8]();
}

uint64_t sub_1B8B9AFD0()
{
  return MEMORY[0x1E0CAF328]();
}

uint64_t sub_1B8B9AFDC()
{
  return MEMORY[0x1E0CAF458]();
}

uint64_t sub_1B8B9AFE8()
{
  return MEMORY[0x1E0CAF460]();
}

uint64_t sub_1B8B9AFF4()
{
  return MEMORY[0x1E0CAF5A8]();
}

uint64_t sub_1B8B9B000()
{
  return MEMORY[0x1E0CAF980]();
}

uint64_t sub_1B8B9B00C()
{
  return MEMORY[0x1E0CAF990]();
}

uint64_t sub_1B8B9B018()
{
  return MEMORY[0x1E0CAFDA0]();
}

uint64_t sub_1B8B9B024()
{
  return MEMORY[0x1E0CAFE38]();
}

uint64_t sub_1B8B9B030()
{
  return MEMORY[0x1E0CAFF00]();
}

uint64_t sub_1B8B9B03C()
{
  return MEMORY[0x1E0CAFF80]();
}

uint64_t sub_1B8B9B048()
{
  return MEMORY[0x1E0CAFF90]();
}

uint64_t sub_1B8B9B054()
{
  return MEMORY[0x1E0CAFFF8]();
}

uint64_t sub_1B8B9B060()
{
  return MEMORY[0x1E0CB00A0]();
}

uint64_t sub_1B8B9B06C()
{
  return MEMORY[0x1E0CB0110]();
}

uint64_t sub_1B8B9B078()
{
  return MEMORY[0x1E0CB01F0]();
}

uint64_t sub_1B8B9B084()
{
  return MEMORY[0x1E0CB0228]();
}

uint64_t sub_1B8B9B090()
{
  return MEMORY[0x1E0CB0240]();
}

uint64_t sub_1B8B9B09C()
{
  return MEMORY[0x1E0CB03C0]();
}

uint64_t sub_1B8B9B0A8()
{
  return MEMORY[0x1E0CB0598]();
}

uint64_t sub_1B8B9B0B4()
{
  return MEMORY[0x1E0CB05D8]();
}

uint64_t sub_1B8B9B0C0()
{
  return MEMORY[0x1E0CB06B8]();
}

uint64_t sub_1B8B9B0CC()
{
  return MEMORY[0x1E0CB07C8]();
}

uint64_t sub_1B8B9B0D8()
{
  return MEMORY[0x1E0CB07E8]();
}

uint64_t sub_1B8B9B0E4()
{
  return MEMORY[0x1E0CB0828]();
}

uint64_t sub_1B8B9B0F0()
{
  return MEMORY[0x1E0CB0870]();
}

uint64_t sub_1B8B9B0FC()
{
  return MEMORY[0x1E0CB0910]();
}

uint64_t sub_1B8B9B108()
{
  return MEMORY[0x1E0CB0988]();
}

uint64_t sub_1B8B9B114()
{
  return MEMORY[0x1E0CB0998]();
}

uint64_t sub_1B8B9B120()
{
  return MEMORY[0x1E0CB0AD8]();
}

uint64_t sub_1B8B9B12C()
{
  return MEMORY[0x1E0CB0AE8]();
}

uint64_t sub_1B8B9B138()
{
  return MEMORY[0x1E0CB0BE0]();
}

uint64_t sub_1B8B9B144()
{
  return MEMORY[0x1E0CB0C38]();
}

uint64_t sub_1B8B9B150()
{
  return MEMORY[0x1E0CB0C48]();
}

uint64_t sub_1B8B9B15C()
{
  return MEMORY[0x1E0CB0CC8]();
}

uint64_t sub_1B8B9B168()
{
  return MEMORY[0x1E0CB0D80]();
}

uint64_t sub_1B8B9B174()
{
  return MEMORY[0x1E0CB0DA8]();
}

uint64_t sub_1B8B9B180()
{
  return MEMORY[0x1E0CB0DB8]();
}

uint64_t sub_1B8B9B18C()
{
  return MEMORY[0x1E0CB0DF0]();
}

uint64_t sub_1B8B9B198()
{
  return MEMORY[0x1E0CB0E38]();
}

uint64_t sub_1B8B9B1A4()
{
  return MEMORY[0x1E0CB0F38]();
}

uint64_t sub_1B8B9B1B0()
{
  return MEMORY[0x1E0CB0F60]();
}

uint64_t sub_1B8B9B1BC()
{
  return MEMORY[0x1E0CB0F68]();
}

uint64_t sub_1B8B9B1C8()
{
  return MEMORY[0x1E0CB0FB8]();
}

uint64_t sub_1B8B9B1D4()
{
  return MEMORY[0x1E0CB0FF8]();
}

uint64_t sub_1B8B9B1E0()
{
  return MEMORY[0x1E0CB1028]();
}

uint64_t sub_1B8B9B1EC()
{
  return MEMORY[0x1E0CB1048]();
}

uint64_t sub_1B8B9B1F8()
{
  return MEMORY[0x1E0CB1050]();
}

uint64_t sub_1B8B9B204()
{
  return MEMORY[0x1E0CB1060]();
}

uint64_t sub_1B8B9B210()
{
  return MEMORY[0x1E0CB1070]();
}

uint64_t sub_1B8B9B21C()
{
  return MEMORY[0x1E0CB1090]();
}

uint64_t sub_1B8B9B228()
{
  return MEMORY[0x1E0CB1098]();
}

uint64_t sub_1B8B9B234()
{
  return MEMORY[0x1E0CB10A8]();
}

uint64_t sub_1B8B9B240()
{
  return MEMORY[0x1E0CB10B0]();
}

uint64_t sub_1B8B9B24C()
{
  return MEMORY[0x1E0CB10C8]();
}

uint64_t sub_1B8B9B258()
{
  return MEMORY[0x1E0CB10D8]();
}

uint64_t sub_1B8B9B264()
{
  return MEMORY[0x1E0CB10E0]();
}

uint64_t sub_1B8B9B270()
{
  return MEMORY[0x1E0CB11B8]();
}

uint64_t sub_1B8B9B27C()
{
  return MEMORY[0x1E0CB11E0]();
}

uint64_t sub_1B8B9B288()
{
  return MEMORY[0x1E0CB11F0]();
}

uint64_t sub_1B8B9B294()
{
  return MEMORY[0x1E0CB1400]();
}

uint64_t sub_1B8B9B2A0()
{
  return MEMORY[0x1E0CB1440]();
}

uint64_t sub_1B8B9B2AC()
{
  return MEMORY[0x1E0CB1458]();
}

uint64_t sub_1B8B9B2B8()
{
  return MEMORY[0x1E0CB1470]();
}

uint64_t sub_1B8B9B2C4()
{
  return MEMORY[0x1E0DEFD58]();
}

uint64_t sub_1B8B9B2D0()
{
  return MEMORY[0x1E0DEFD60]();
}

uint64_t sub_1B8B9B2DC()
{
  return MEMORY[0x1E0DEFD78]();
}

uint64_t sub_1B8B9B2E8()
{
  return MEMORY[0x1E0DEFD80]();
}

uint64_t sub_1B8B9B2F4()
{
  return MEMORY[0x1E0DF2080]();
}

uint64_t sub_1B8B9B300()
{
  return MEMORY[0x1E0DF2240]();
}

uint64_t sub_1B8B9B30C()
{
  return MEMORY[0x1E0DF2248]();
}

uint64_t sub_1B8B9B318()
{
  return MEMORY[0x1E0DF2258]();
}

uint64_t sub_1B8B9B324()
{
  return MEMORY[0x1E0C95DD8]();
}

uint64_t sub_1B8B9B330()
{
  return MEMORY[0x1E0C95ED8]();
}

uint64_t sub_1B8B9B33C()
{
  return MEMORY[0x1E0C96030]();
}

uint64_t sub_1B8B9B348()
{
  return MEMORY[0x1E0C96150]();
}

uint64_t sub_1B8B9B354()
{
  return MEMORY[0x1E0C96158]();
}

uint64_t sub_1B8B9B360()
{
  return MEMORY[0x1E0C96170]();
}

uint64_t sub_1B8B9B36C()
{
  return MEMORY[0x1E0C96178]();
}

uint64_t sub_1B8B9B378()
{
  return MEMORY[0x1E0C96198]();
}

uint64_t sub_1B8B9B384()
{
  return MEMORY[0x1E0C96378]();
}

uint64_t sub_1B8B9B390()
{
  return MEMORY[0x1E0C96410]();
}

uint64_t sub_1B8B9B39C()
{
  return MEMORY[0x1E0CD8270]();
}

uint64_t sub_1B8B9B3A8()
{
  return MEMORY[0x1E0CD8278]();
}

uint64_t sub_1B8B9B3B4()
{
  return MEMORY[0x1E0CD8310]();
}

uint64_t sub_1B8B9B3C0()
{
  return MEMORY[0x1E0CD8330]();
}

uint64_t sub_1B8B9B3CC()
{
  return MEMORY[0x1E0CD8358]();
}

uint64_t sub_1B8B9B3D8()
{
  return MEMORY[0x1E0CD8370]();
}

uint64_t sub_1B8B9B3E4()
{
  return MEMORY[0x1E0CD83B0]();
}

uint64_t sub_1B8B9B3F0()
{
  return MEMORY[0x1E0CD8488]();
}

uint64_t sub_1B8B9B3FC()
{
  return MEMORY[0x1E0CD86F0]();
}

uint64_t sub_1B8B9B408()
{
  return MEMORY[0x1E0CD8768]();
}

uint64_t sub_1B8B9B414()
{
  return MEMORY[0x1E0CD87C8]();
}

uint64_t sub_1B8B9B420()
{
  return MEMORY[0x1E0CD8810]();
}

uint64_t sub_1B8B9B42C()
{
  return MEMORY[0x1E0CD88B8]();
}

uint64_t sub_1B8B9B438()
{
  return MEMORY[0x1E0CD88E8]();
}

uint64_t sub_1B8B9B444()
{
  return MEMORY[0x1E0CD8C40]();
}

uint64_t sub_1B8B9B450()
{
  return MEMORY[0x1E0CD8C78]();
}

uint64_t sub_1B8B9B45C()
{
  return MEMORY[0x1E0CD8C88]();
}

uint64_t sub_1B8B9B468()
{
  return MEMORY[0x1E0CD8C98]();
}

uint64_t sub_1B8B9B474()
{
  return MEMORY[0x1E0CD8D68]();
}

uint64_t sub_1B8B9B480()
{
  return MEMORY[0x1E0CD8DF0]();
}

uint64_t sub_1B8B9B48C()
{
  return MEMORY[0x1E0CD8E60]();
}

uint64_t sub_1B8B9B498()
{
  return MEMORY[0x1E0CD8E70]();
}

uint64_t sub_1B8B9B4A4()
{
  return MEMORY[0x1E0CD8E88]();
}

uint64_t sub_1B8B9B4B0()
{
  return MEMORY[0x1E0CD8EE8]();
}

uint64_t sub_1B8B9B4BC()
{
  return MEMORY[0x1E0CD8F20]();
}

uint64_t sub_1B8B9B4C8()
{
  return MEMORY[0x1E0CD9170]();
}

uint64_t sub_1B8B9B4D4()
{
  return MEMORY[0x1E0CD9238]();
}

uint64_t sub_1B8B9B4E0()
{
  return MEMORY[0x1E0CD9410]();
}

uint64_t sub_1B8B9B4EC()
{
  return MEMORY[0x1E0CD9448]();
}

uint64_t sub_1B8B9B4F8()
{
  return MEMORY[0x1E0CD94E0]();
}

uint64_t sub_1B8B9B504()
{
  return MEMORY[0x1E0CD94F0]();
}

uint64_t sub_1B8B9B510()
{
  return MEMORY[0x1E0CD9508]();
}

uint64_t sub_1B8B9B51C()
{
  return MEMORY[0x1E0CD9570]();
}

uint64_t sub_1B8B9B528()
{
  return MEMORY[0x1E0CD9580]();
}

uint64_t sub_1B8B9B534()
{
  return MEMORY[0x1E0CD9BB0]();
}

uint64_t sub_1B8B9B540()
{
  return MEMORY[0x1E0CD9BF8]();
}

uint64_t sub_1B8B9B54C()
{
  return MEMORY[0x1E0CD9C30]();
}

uint64_t sub_1B8B9B558()
{
  return MEMORY[0x1E0CD9C48]();
}

uint64_t sub_1B8B9B564()
{
  return MEMORY[0x1E0CD9CA0]();
}

uint64_t sub_1B8B9B570()
{
  return MEMORY[0x1E0CD9E80]();
}

uint64_t sub_1B8B9B57C()
{
  return MEMORY[0x1E0CD9FD0]();
}

uint64_t sub_1B8B9B588()
{
  return MEMORY[0x1E0CDA000]();
}

uint64_t sub_1B8B9B594()
{
  return MEMORY[0x1E0CDA080]();
}

uint64_t sub_1B8B9B5A0()
{
  return MEMORY[0x1E0CDA1D0]();
}

uint64_t sub_1B8B9B5AC()
{
  return MEMORY[0x1E0CDA210]();
}

uint64_t sub_1B8B9B5B8()
{
  return MEMORY[0x1E0CDA260]();
}

uint64_t sub_1B8B9B5C4()
{
  return MEMORY[0x1E0CDA368]();
}

uint64_t sub_1B8B9B5D0()
{
  return MEMORY[0x1E0CDA3F8]();
}

uint64_t sub_1B8B9B5DC()
{
  return MEMORY[0x1E0CDA4D8]();
}

uint64_t sub_1B8B9B5E8()
{
  return MEMORY[0x1E0CDA500]();
}

uint64_t sub_1B8B9B5F4()
{
  return MEMORY[0x1E0CDA510]();
}

uint64_t sub_1B8B9B600()
{
  return MEMORY[0x1E0CDA628]();
}

uint64_t sub_1B8B9B60C()
{
  return MEMORY[0x1E0CDA638]();
}

uint64_t sub_1B8B9B618()
{
  return MEMORY[0x1E0CDA6A8]();
}

uint64_t sub_1B8B9B624()
{
  return MEMORY[0x1E0CDA6D8]();
}

uint64_t sub_1B8B9B630()
{
  return MEMORY[0x1E0CDA6E0]();
}

uint64_t sub_1B8B9B63C()
{
  return MEMORY[0x1E0CDA7E0]();
}

uint64_t sub_1B8B9B648()
{
  return MEMORY[0x1E0CDA800]();
}

uint64_t sub_1B8B9B654()
{
  return MEMORY[0x1E0CDA808]();
}

uint64_t sub_1B8B9B660()
{
  return MEMORY[0x1E0CDA8D0]();
}

uint64_t sub_1B8B9B66C()
{
  return MEMORY[0x1E0CDA8E8]();
}

uint64_t sub_1B8B9B678()
{
  return MEMORY[0x1E0CDA8F0]();
}

uint64_t sub_1B8B9B684()
{
  return MEMORY[0x1E0CDA900]();
}

uint64_t sub_1B8B9B690()
{
  return MEMORY[0x1E0CDA930]();
}

uint64_t sub_1B8B9B69C()
{
  return MEMORY[0x1E0CDA968]();
}

uint64_t sub_1B8B9B6A8()
{
  return MEMORY[0x1E0CDA998]();
}

uint64_t sub_1B8B9B6B4()
{
  return MEMORY[0x1E0CDA9A8]();
}

uint64_t sub_1B8B9B6C0()
{
  return MEMORY[0x1E0CDA9D8]();
}

uint64_t sub_1B8B9B6CC()
{
  return MEMORY[0x1E0CDA9E8]();
}

uint64_t sub_1B8B9B6D8()
{
  return MEMORY[0x1E0CDAA28]();
}

uint64_t sub_1B8B9B6E4()
{
  return MEMORY[0x1E0CDAA38]();
}

uint64_t sub_1B8B9B6F0()
{
  return MEMORY[0x1E0CDAA70]();
}

uint64_t sub_1B8B9B6FC()
{
  return MEMORY[0x1E0CDAA80]();
}

uint64_t sub_1B8B9B708()
{
  return MEMORY[0x1E0CDAC58]();
}

uint64_t sub_1B8B9B714()
{
  return MEMORY[0x1E0CDAC68]();
}

uint64_t sub_1B8B9B720()
{
  return MEMORY[0x1E0CDAC70]();
}

uint64_t sub_1B8B9B72C()
{
  return MEMORY[0x1E0CDAC90]();
}

uint64_t sub_1B8B9B738()
{
  return MEMORY[0x1E0CDACD0]();
}

uint64_t sub_1B8B9B744()
{
  return MEMORY[0x1E0CDAF88]();
}

uint64_t sub_1B8B9B750()
{
  return MEMORY[0x1E0CDAFB0]();
}

uint64_t sub_1B8B9B75C()
{
  return MEMORY[0x1E0CDAFC0]();
}

uint64_t sub_1B8B9B768()
{
  return MEMORY[0x1E0CDAFD8]();
}

uint64_t sub_1B8B9B774()
{
  return MEMORY[0x1E0CDAFE8]();
}

uint64_t sub_1B8B9B780()
{
  return MEMORY[0x1E0CDAFF0]();
}

uint64_t sub_1B8B9B78C()
{
  return MEMORY[0x1E0CDB008]();
}

uint64_t sub_1B8B9B798()
{
  return MEMORY[0x1E0CDB0F0]();
}

uint64_t sub_1B8B9B7A4()
{
  return MEMORY[0x1E0CDB418]();
}

uint64_t sub_1B8B9B7B0()
{
  return MEMORY[0x1E0CDB428]();
}

uint64_t sub_1B8B9B7BC()
{
  return MEMORY[0x1E0CDB4B8]();
}

uint64_t sub_1B8B9B7C8()
{
  return MEMORY[0x1E0CDB4C8]();
}

uint64_t sub_1B8B9B7D4()
{
  return MEMORY[0x1E0CDB600]();
}

uint64_t sub_1B8B9B7E0()
{
  return MEMORY[0x1E0CDB660]();
}

uint64_t sub_1B8B9B7EC()
{
  return MEMORY[0x1E0CDB670]();
}

uint64_t sub_1B8B9B7F8()
{
  return MEMORY[0x1E0CDB680]();
}

uint64_t sub_1B8B9B804()
{
  return MEMORY[0x1E0CDB690]();
}

uint64_t sub_1B8B9B810()
{
  return MEMORY[0x1E0CDB6A0]();
}

uint64_t sub_1B8B9B81C()
{
  return MEMORY[0x1E0CDB6B0]();
}

uint64_t sub_1B8B9B828()
{
  return MEMORY[0x1E0CDB6C0]();
}

uint64_t sub_1B8B9B834()
{
  return MEMORY[0x1E0CDB6C8]();
}

uint64_t sub_1B8B9B840()
{
  return MEMORY[0x1E0CDB6D8]();
}

uint64_t sub_1B8B9B84C()
{
  return MEMORY[0x1E0CDB6E8]();
}

uint64_t sub_1B8B9B858()
{
  return MEMORY[0x1E0CDB700]();
}

uint64_t sub_1B8B9B864()
{
  return MEMORY[0x1E0CDB710]();
}

uint64_t sub_1B8B9B870()
{
  return MEMORY[0x1E0CDB868]();
}

uint64_t sub_1B8B9B87C()
{
  return MEMORY[0x1E0CDB940]();
}

uint64_t sub_1B8B9B888()
{
  return MEMORY[0x1E0CDB950]();
}

uint64_t sub_1B8B9B894()
{
  return MEMORY[0x1E0CDB960]();
}

uint64_t sub_1B8B9B8A0()
{
  return MEMORY[0x1E0CDBAA8]();
}

uint64_t sub_1B8B9B8AC()
{
  return MEMORY[0x1E0CDBAB8]();
}

uint64_t sub_1B8B9B8B8()
{
  return MEMORY[0x1E0CDBB18]();
}

uint64_t sub_1B8B9B8C4()
{
  return MEMORY[0x1E0CDBC08]();
}

uint64_t sub_1B8B9B8D0()
{
  return MEMORY[0x1E0CDBC80]();
}

uint64_t sub_1B8B9B8DC()
{
  return MEMORY[0x1E0CDBC98]();
}

uint64_t sub_1B8B9B8E8()
{
  return MEMORY[0x1E0CDBE00]();
}

uint64_t sub_1B8B9B8F4()
{
  return MEMORY[0x1E0CDBFB0]();
}

uint64_t sub_1B8B9B900()
{
  return MEMORY[0x1E0CDC970]();
}

uint64_t sub_1B8B9B90C()
{
  return MEMORY[0x1E0CDC998]();
}

uint64_t sub_1B8B9B918()
{
  return MEMORY[0x1E0CDCDB8]();
}

uint64_t sub_1B8B9B924()
{
  return MEMORY[0x1E0CDCDC8]();
}

uint64_t sub_1B8B9B930()
{
  return MEMORY[0x1E0CDCE50]();
}

uint64_t sub_1B8B9B93C()
{
  return MEMORY[0x1E0CDCE58]();
}

uint64_t sub_1B8B9B948()
{
  return MEMORY[0x1E0CDCE70]();
}

uint64_t sub_1B8B9B954()
{
  return MEMORY[0x1E0CDCE80]();
}

uint64_t sub_1B8B9B960()
{
  return MEMORY[0x1E0CDCE88]();
}

uint64_t sub_1B8B9B96C()
{
  return MEMORY[0x1E0CDCE98]();
}

uint64_t sub_1B8B9B978()
{
  return MEMORY[0x1E0CDCEA8]();
}

uint64_t sub_1B8B9B984()
{
  return MEMORY[0x1E0CDCEC0]();
}

uint64_t sub_1B8B9B990()
{
  return MEMORY[0x1E0CDCED0]();
}

uint64_t sub_1B8B9B99C()
{
  return MEMORY[0x1E0CDD220]();
}

uint64_t sub_1B8B9B9A8()
{
  return MEMORY[0x1E0CDD2E0]();
}

uint64_t sub_1B8B9B9B4()
{
  return MEMORY[0x1E0CDD308]();
}

uint64_t sub_1B8B9B9C0()
{
  return MEMORY[0x1E0CDD318]();
}

uint64_t sub_1B8B9B9CC()
{
  return MEMORY[0x1E0CDD328]();
}

uint64_t sub_1B8B9B9D8()
{
  return MEMORY[0x1E0CDD350]();
}

uint64_t sub_1B8B9B9E4()
{
  return MEMORY[0x1E0CDD370]();
}

uint64_t sub_1B8B9B9F0()
{
  return MEMORY[0x1E0CDD378]();
}

uint64_t sub_1B8B9B9FC()
{
  return MEMORY[0x1E0CDD388]();
}

uint64_t sub_1B8B9BA08()
{
  return MEMORY[0x1E0CDD3B8]();
}

uint64_t sub_1B8B9BA14()
{
  return MEMORY[0x1E0CDD408]();
}

uint64_t sub_1B8B9BA20()
{
  return MEMORY[0x1E0CDD420]();
}

uint64_t sub_1B8B9BA2C()
{
  return MEMORY[0x1E0CDD430]();
}

uint64_t sub_1B8B9BA38()
{
  return MEMORY[0x1E0CDD4D0]();
}

uint64_t sub_1B8B9BA44()
{
  return MEMORY[0x1E0CDD558]();
}

uint64_t sub_1B8B9BA50()
{
  return MEMORY[0x1E0CDD588]();
}

uint64_t sub_1B8B9BA5C()
{
  return MEMORY[0x1E0CDD5F0]();
}

uint64_t sub_1B8B9BA68()
{
  return MEMORY[0x1E0CDD640]();
}

uint64_t sub_1B8B9BA74()
{
  return MEMORY[0x1E0CDD660]();
}

uint64_t sub_1B8B9BA80()
{
  return MEMORY[0x1E0CDD670]();
}

uint64_t sub_1B8B9BA8C()
{
  return MEMORY[0x1E0CDD680]();
}

uint64_t sub_1B8B9BA98()
{
  return MEMORY[0x1E0CDD6B8]();
}

uint64_t sub_1B8B9BAA4()
{
  return MEMORY[0x1E0CDD6F0]();
}

uint64_t sub_1B8B9BAB0()
{
  return MEMORY[0x1E0CDD730]();
}

uint64_t sub_1B8B9BABC()
{
  return MEMORY[0x1E0CDD748]();
}

uint64_t sub_1B8B9BAC8()
{
  return MEMORY[0x1E0CDD768]();
}

uint64_t sub_1B8B9BAD4()
{
  return MEMORY[0x1E0CDD7F8]();
}

uint64_t sub_1B8B9BAE0()
{
  return MEMORY[0x1E0CDD858]();
}

uint64_t sub_1B8B9BAEC()
{
  return MEMORY[0x1E0CDD870]();
}

uint64_t sub_1B8B9BAF8()
{
  return MEMORY[0x1E0CDD8E0]();
}

uint64_t sub_1B8B9BB04()
{
  return MEMORY[0x1E0CDD930]();
}

uint64_t sub_1B8B9BB10()
{
  return MEMORY[0x1E0CDD9F0]();
}

uint64_t sub_1B8B9BB1C()
{
  return MEMORY[0x1E0CDDA18]();
}

uint64_t sub_1B8B9BB28()
{
  return MEMORY[0x1E0CDDA48]();
}

uint64_t sub_1B8B9BB34()
{
  return MEMORY[0x1E0CDDA98]();
}

uint64_t sub_1B8B9BB40()
{
  return MEMORY[0x1E0CDDAB0]();
}

uint64_t sub_1B8B9BB4C()
{
  return MEMORY[0x1E0CDDAC8]();
}

uint64_t sub_1B8B9BB58()
{
  return MEMORY[0x1E0CDDAE0]();
}

uint64_t sub_1B8B9BB64()
{
  return MEMORY[0x1E0CDDB80]();
}

uint64_t sub_1B8B9BB70()
{
  return MEMORY[0x1E0CDDB90]();
}

uint64_t sub_1B8B9BB7C()
{
  return MEMORY[0x1E0CDDC10]();
}

uint64_t sub_1B8B9BB88()
{
  return MEMORY[0x1E0CDDC30]();
}

uint64_t sub_1B8B9BB94()
{
  return MEMORY[0x1E0CDDC50]();
}

uint64_t sub_1B8B9BBA0()
{
  return MEMORY[0x1E0CDDDA8]();
}

uint64_t sub_1B8B9BBAC()
{
  return MEMORY[0x1E0CDDDD8]();
}

uint64_t sub_1B8B9BBB8()
{
  return MEMORY[0x1E0CEFB00]();
}

uint64_t sub_1B8B9BBC4()
{
  return MEMORY[0x1E0CDDE50]();
}

uint64_t sub_1B8B9BBD0()
{
  return MEMORY[0x1E0CDDE60]();
}

uint64_t sub_1B8B9BBDC()
{
  return MEMORY[0x1E0CDDEB8]();
}

uint64_t sub_1B8B9BBE8()
{
  return MEMORY[0x1E0CDDF90]();
}

uint64_t sub_1B8B9BBF4()
{
  return MEMORY[0x1E0CDDFD8]();
}

uint64_t sub_1B8B9BC00()
{
  return MEMORY[0x1E0CDE030]();
}

uint64_t sub_1B8B9BC0C()
{
  return MEMORY[0x1E0CDE190]();
}

uint64_t sub_1B8B9BC18()
{
  return MEMORY[0x1E0CDE218]();
}

uint64_t sub_1B8B9BC24()
{
  return MEMORY[0x1E0CDE238]();
}

uint64_t sub_1B8B9BC30()
{
  return MEMORY[0x1E0CDE320]();
}

uint64_t sub_1B8B9BC3C()
{
  return MEMORY[0x1E0CDE378]();
}

uint64_t sub_1B8B9BC48()
{
  return MEMORY[0x1E0CDE420]();
}

uint64_t sub_1B8B9BC54()
{
  return MEMORY[0x1E0CDE458]();
}

uint64_t sub_1B8B9BC60()
{
  return MEMORY[0x1E0CDE4F0]();
}

uint64_t sub_1B8B9BC6C()
{
  return MEMORY[0x1E0CDE608]();
}

uint64_t sub_1B8B9BC78()
{
  return MEMORY[0x1E0CDE780]();
}

uint64_t sub_1B8B9BC84()
{
  return MEMORY[0x1E0CDE958]();
}

uint64_t sub_1B8B9BC90()
{
  return MEMORY[0x1E0CDEA10]();
}

uint64_t sub_1B8B9BC9C()
{
  return MEMORY[0x1E0CDEA80]();
}

uint64_t sub_1B8B9BCA8()
{
  return MEMORY[0x1E0CDEB58]();
}

uint64_t sub_1B8B9BCB4()
{
  return MEMORY[0x1E0CDEC50]();
}

uint64_t sub_1B8B9BCC0()
{
  return MEMORY[0x1E0CDEE30]();
}

uint64_t sub_1B8B9BCCC()
{
  return MEMORY[0x1E0CDEE70]();
}

uint64_t sub_1B8B9BCD8()
{
  return MEMORY[0x1E0CDEF50]();
}

uint64_t sub_1B8B9BCE4()
{
  return MEMORY[0x1E0CDEF70]();
}

uint64_t sub_1B8B9BCF0()
{
  return MEMORY[0x1E0CDF050]();
}

uint64_t sub_1B8B9BCFC()
{
  return MEMORY[0x1E0CDF080]();
}

uint64_t sub_1B8B9BD08()
{
  return MEMORY[0x1E0CDF0D0]();
}

uint64_t sub_1B8B9BD14()
{
  return MEMORY[0x1E0CDF140]();
}

uint64_t sub_1B8B9BD20()
{
  return MEMORY[0x1E0CDF1B8]();
}

uint64_t sub_1B8B9BD2C()
{
  return MEMORY[0x1E0CDF200]();
}

uint64_t sub_1B8B9BD38()
{
  return MEMORY[0x1E0CDF258]();
}

uint64_t sub_1B8B9BD44()
{
  return MEMORY[0x1E0CDF3A8]();
}

uint64_t sub_1B8B9BD50()
{
  return MEMORY[0x1E0CDF3F8]();
}

uint64_t sub_1B8B9BD5C()
{
  return MEMORY[0x1E0CDF418]();
}

uint64_t sub_1B8B9BD68()
{
  return MEMORY[0x1E0CDF430]();
}

uint64_t sub_1B8B9BD74()
{
  return MEMORY[0x1E0CDF460]();
}

uint64_t sub_1B8B9BD80()
{
  return MEMORY[0x1E0CDF468]();
}

uint64_t sub_1B8B9BD8C()
{
  return MEMORY[0x1E0CDF498]();
}

uint64_t sub_1B8B9BD98()
{
  return MEMORY[0x1E0CDF4B0]();
}

uint64_t sub_1B8B9BDA4()
{
  return MEMORY[0x1E0CDF4C0]();
}

uint64_t sub_1B8B9BDB0()
{
  return MEMORY[0x1E0CDF4C8]();
}

uint64_t sub_1B8B9BDBC()
{
  return MEMORY[0x1E0CDF4F0]();
}

uint64_t sub_1B8B9BDC8()
{
  return MEMORY[0x1E0CDF528]();
}

uint64_t sub_1B8B9BDD4()
{
  return MEMORY[0x1E0CDF590]();
}

uint64_t sub_1B8B9BDE0()
{
  return MEMORY[0x1E0CDF5F0]();
}

uint64_t sub_1B8B9BDEC()
{
  return MEMORY[0x1E0CDF630]();
}

uint64_t sub_1B8B9BDF8()
{
  return MEMORY[0x1E0CDF6A0]();
}

uint64_t sub_1B8B9BE04()
{
  return MEMORY[0x1E0CDF6D0]();
}

uint64_t sub_1B8B9BE10()
{
  return MEMORY[0x1E0CDF708]();
}

uint64_t sub_1B8B9BE1C()
{
  return MEMORY[0x1E0CDF808]();
}

uint64_t sub_1B8B9BE28()
{
  return MEMORY[0x1E0CDF870]();
}

uint64_t sub_1B8B9BE34()
{
  return MEMORY[0x1E0CDF8F8]();
}

uint64_t sub_1B8B9BE40()
{
  return MEMORY[0x1E0CDF910]();
}

uint64_t sub_1B8B9BE4C()
{
  return MEMORY[0x1E0CDF920]();
}

uint64_t sub_1B8B9BE58()
{
  return MEMORY[0x1E0CDF930]();
}

uint64_t sub_1B8B9BE64()
{
  return MEMORY[0x1E0CDF940]();
}

uint64_t sub_1B8B9BE70()
{
  return MEMORY[0x1E0CDF958]();
}

uint64_t sub_1B8B9BE7C()
{
  return MEMORY[0x1E0CDF960]();
}

uint64_t sub_1B8B9BE88()
{
  return MEMORY[0x1E0CDF978]();
}

uint64_t sub_1B8B9BE94()
{
  return MEMORY[0x1E0CDF980]();
}

uint64_t sub_1B8B9BEA0()
{
  return MEMORY[0x1E0CDF998]();
}

uint64_t sub_1B8B9BEAC()
{
  return MEMORY[0x1E0CDF9E0]();
}

uint64_t sub_1B8B9BEB8()
{
  return MEMORY[0x1E0CDF9F8]();
}

uint64_t sub_1B8B9BEC4()
{
  return MEMORY[0x1E0CDFA18]();
}

uint64_t sub_1B8B9BED0()
{
  return MEMORY[0x1E0CDFA30]();
}

uint64_t sub_1B8B9BEDC()
{
  return MEMORY[0x1E0CDFAD8]();
}

uint64_t sub_1B8B9BEE8()
{
  return MEMORY[0x1E0CDFAE8]();
}

uint64_t sub_1B8B9BEF4()
{
  return MEMORY[0x1E0CDFB88]();
}

uint64_t sub_1B8B9BF00()
{
  return MEMORY[0x1E0CDFC38]();
}

uint64_t sub_1B8B9BF0C()
{
  return MEMORY[0x1E0CDFC50]();
}

uint64_t sub_1B8B9BF18()
{
  return MEMORY[0x1E0CDFC90]();
}

uint64_t sub_1B8B9BF24()
{
  return MEMORY[0x1E0CDFC98]();
}

uint64_t sub_1B8B9BF30()
{
  return MEMORY[0x1E0CDFD28]();
}

uint64_t sub_1B8B9BF3C()
{
  return MEMORY[0x1E0CDFD40]();
}

uint64_t sub_1B8B9BF48()
{
  return MEMORY[0x1E0CDFD50]();
}

uint64_t sub_1B8B9BF54()
{
  return MEMORY[0x1E0CDFD60]();
}

uint64_t sub_1B8B9BF60()
{
  return MEMORY[0x1E0CDFD68]();
}

uint64_t sub_1B8B9BF6C()
{
  return MEMORY[0x1E0CDFE40]();
}

uint64_t sub_1B8B9BF78()
{
  return MEMORY[0x1E0CDFE50]();
}

uint64_t sub_1B8B9BF84()
{
  return MEMORY[0x1E0CDFEA0]();
}

uint64_t sub_1B8B9BF90()
{
  return MEMORY[0x1E0CDFEB0]();
}

uint64_t sub_1B8B9BF9C()
{
  return MEMORY[0x1E0CDFF38]();
}

uint64_t sub_1B8B9BFA8()
{
  return MEMORY[0x1E0CDFF50]();
}

uint64_t sub_1B8B9BFB4()
{
  return MEMORY[0x1E0CDFF68]();
}

uint64_t sub_1B8B9BFC0()
{
  return MEMORY[0x1E0CDFF70]();
}

uint64_t sub_1B8B9BFCC()
{
  return MEMORY[0x1E0CE0010]();
}

uint64_t sub_1B8B9BFD8()
{
  return MEMORY[0x1E0CE0028]();
}

uint64_t sub_1B8B9BFE4()
{
  return MEMORY[0x1E0CE0030]();
}

uint64_t sub_1B8B9BFF0()
{
  return MEMORY[0x1E0CE0040]();
}

uint64_t sub_1B8B9BFFC()
{
  return MEMORY[0x1E0CE01F8]();
}

uint64_t sub_1B8B9C008()
{
  return MEMORY[0x1E0CE0210]();
}

uint64_t sub_1B8B9C014()
{
  return MEMORY[0x1E0CE0218]();
}

uint64_t sub_1B8B9C020()
{
  return MEMORY[0x1E0CE0230]();
}

uint64_t sub_1B8B9C02C()
{
  return MEMORY[0x1E0CE0240]();
}

uint64_t sub_1B8B9C038()
{
  return MEMORY[0x1E0CE03E8]();
}

uint64_t sub_1B8B9C044()
{
  return MEMORY[0x1E0CE0450]();
}

uint64_t sub_1B8B9C050()
{
  return MEMORY[0x1E0CE05F0]();
}

uint64_t sub_1B8B9C05C()
{
  return MEMORY[0x1E0CE05F8]();
}

uint64_t sub_1B8B9C068()
{
  return MEMORY[0x1E0CE0650]();
}

uint64_t sub_1B8B9C074()
{
  return MEMORY[0x1E0CE0668]();
}

uint64_t sub_1B8B9C080()
{
  return MEMORY[0x1E0DEF4F8]();
}

uint64_t sub_1B8B9C08C()
{
  return MEMORY[0x1E0DEF560]();
}

uint64_t sub_1B8B9C098()
{
  return MEMORY[0x1E0DEF578]();
}

uint64_t sub_1B8B9C0A4()
{
  return MEMORY[0x1E0DEF5B0]();
}

uint64_t sub_1B8B9C0B0()
{
  return MEMORY[0x1E0CB17D8]();
}

uint64_t sub_1B8B9C0BC()
{
  return MEMORY[0x1E0DEA1B8]();
}

uint64_t sub_1B8B9C0C8()
{
  return MEMORY[0x1E0DEA1C0]();
}

uint64_t sub_1B8B9C0D4()
{
  return MEMORY[0x1E0DEA3A0]();
}

uint64_t sub_1B8B9C0E0()
{
  return MEMORY[0x1E0DEA3B0]();
}

uint64_t sub_1B8B9C0EC()
{
  return MEMORY[0x1E0DEA568]();
}

uint64_t sub_1B8B9C0F8()
{
  return MEMORY[0x1E0CB18A0]();
}

uint64_t sub_1B8B9C104()
{
  return MEMORY[0x1E0CB18C0]();
}

uint64_t sub_1B8B9C110()
{
  return MEMORY[0x1E0CB18D8]();
}

uint64_t sub_1B8B9C11C()
{
  return MEMORY[0x1E0CB18E0]();
}

uint64_t sub_1B8B9C128()
{
  return MEMORY[0x1E0CB18E8]();
}

uint64_t sub_1B8B9C134()
{
  return MEMORY[0x1E0CB18F0]();
}

uint64_t sub_1B8B9C140()
{
  return MEMORY[0x1E0CB18F8]();
}

uint64_t sub_1B8B9C14C()
{
  return MEMORY[0x1E0CB1940]();
}

uint64_t sub_1B8B9C158()
{
  return MEMORY[0x1E0CB1950]();
}

uint64_t sub_1B8B9C164()
{
  return MEMORY[0x1E0CB1960]();
}

uint64_t sub_1B8B9C170()
{
  return MEMORY[0x1E0CB1970]();
}

uint64_t sub_1B8B9C17C()
{
  return MEMORY[0x1E0CB1980]();
}

uint64_t sub_1B8B9C188()
{
  return MEMORY[0x1E0CB19C0]();
}

uint64_t sub_1B8B9C194()
{
  return MEMORY[0x1E0CB1A30]();
}

uint64_t sub_1B8B9C1A0()
{
  return MEMORY[0x1E0CB1A40]();
}

uint64_t sub_1B8B9C1AC()
{
  return MEMORY[0x1E0CB1A58]();
}

uint64_t sub_1B8B9C1B8()
{
  return MEMORY[0x1E0DEA5F8]();
}

uint64_t sub_1B8B9C1C4()
{
  return MEMORY[0x1E0DEA610]();
}

uint64_t sub_1B8B9C1D0()
{
  return MEMORY[0x1E0DEA658]();
}

uint64_t sub_1B8B9C1DC()
{
  return MEMORY[0x1E0DEA6F8]();
}

uint64_t sub_1B8B9C1E8()
{
  return MEMORY[0x1E0DEA758]();
}

uint64_t sub_1B8B9C1F4()
{
  return MEMORY[0x1E0DEA7B8]();
}

uint64_t sub_1B8B9C200()
{
  return MEMORY[0x1E0DEA7C8]();
}

uint64_t sub_1B8B9C20C()
{
  return MEMORY[0x1E0DEA7D8]();
}

uint64_t sub_1B8B9C218()
{
  return MEMORY[0x1E0DEA800]();
}

uint64_t sub_1B8B9C224()
{
  return MEMORY[0x1E0DEA820]();
}

uint64_t sub_1B8B9C230()
{
  return MEMORY[0x1E0DEA850]();
}

uint64_t sub_1B8B9C23C()
{
  return MEMORY[0x1E0DEA858]();
}

uint64_t sub_1B8B9C248()
{
  return MEMORY[0x1E0DEA870]();
}

uint64_t sub_1B8B9C254()
{
  return MEMORY[0x1E0DEA878]();
}

uint64_t sub_1B8B9C260()
{
  return MEMORY[0x1E0DEA880]();
}

uint64_t sub_1B8B9C26C()
{
  return MEMORY[0x1E0DEA908]();
}

uint64_t sub_1B8B9C278()
{
  return MEMORY[0x1E0DEA940]();
}

uint64_t sub_1B8B9C284()
{
  return MEMORY[0x1E0DEAA40]();
}

uint64_t sub_1B8B9C290()
{
  return MEMORY[0x1E0DEAA50]();
}

uint64_t sub_1B8B9C29C()
{
  return MEMORY[0x1E0DEAB48]();
}

uint64_t sub_1B8B9C2A8()
{
  return MEMORY[0x1E0DEACB8]();
}

uint64_t sub_1B8B9C2B4()
{
  return MEMORY[0x1E0DEACC0]();
}

uint64_t sub_1B8B9C2C0()
{
  return MEMORY[0x1E0DEAD30]();
}

uint64_t sub_1B8B9C2CC()
{
  return MEMORY[0x1E0DEAD38]();
}

uint64_t sub_1B8B9C2D8()
{
  return MEMORY[0x1E0DEADA0]();
}

uint64_t sub_1B8B9C2E4()
{
  return MEMORY[0x1E0CB1AC0]();
}

uint64_t sub_1B8B9C2F0()
{
  return MEMORY[0x1E0CB1AE8]();
}

uint64_t sub_1B8B9C2FC()
{
  return MEMORY[0x1E0DEADB8]();
}

uint64_t sub_1B8B9C308()
{
  return MEMORY[0x1E0DEADC8]();
}

uint64_t sub_1B8B9C314()
{
  return MEMORY[0x1E0DEADE8]();
}

uint64_t sub_1B8B9C320()
{
  return MEMORY[0x1E0DEAE28]();
}

uint64_t sub_1B8B9C32C()
{
  return MEMORY[0x1E0DEAE38]();
}

uint64_t sub_1B8B9C338()
{
  return MEMORY[0x1E0DEAE58]();
}

uint64_t sub_1B8B9C344()
{
  return MEMORY[0x1E0DEAE60]();
}

uint64_t sub_1B8B9C350()
{
  return MEMORY[0x1E0DEAE98]();
}

uint64_t sub_1B8B9C35C()
{
  return MEMORY[0x1E0DEAEC8]();
}

uint64_t sub_1B8B9C368()
{
  return MEMORY[0x1E0DF05B8]();
}

uint64_t sub_1B8B9C374()
{
  return MEMORY[0x1E0DF06D8]();
}

uint64_t sub_1B8B9C380()
{
  return MEMORY[0x1E0DF06E0]();
}

uint64_t sub_1B8B9C38C()
{
  return MEMORY[0x1E0DF0700]();
}

uint64_t sub_1B8B9C398()
{
  return MEMORY[0x1E0DF0748]();
}

uint64_t sub_1B8B9C3A4()
{
  return MEMORY[0x1E0DF0750]();
}

uint64_t sub_1B8B9C3B0()
{
  return MEMORY[0x1E0DEB030]();
}

uint64_t sub_1B8B9C3BC()
{
  return MEMORY[0x1E0CB1BB0]();
}

uint64_t sub_1B8B9C3C8()
{
  return MEMORY[0x1E0CB1BD8]();
}

uint64_t sub_1B8B9C3D4()
{
  return MEMORY[0x1E0DEB258]();
}

uint64_t sub_1B8B9C3E0()
{
  return MEMORY[0x1E0DEB310]();
}

uint64_t sub_1B8B9C3EC()
{
  return MEMORY[0x1E0CB1C20]();
}

uint64_t sub_1B8B9C3F8()
{
  return MEMORY[0x1E0DEB528]();
}

uint64_t sub_1B8B9C404()
{
  return MEMORY[0x1E0DEB5A8]();
}

uint64_t sub_1B8B9C410()
{
  return MEMORY[0x1E0DEB5B0]();
}

uint64_t sub_1B8B9C41C()
{
  return MEMORY[0x1E0DEB5C8]();
}

uint64_t sub_1B8B9C428()
{
  return MEMORY[0x1E0DEB660]();
}

uint64_t sub_1B8B9C434()
{
  return MEMORY[0x1E0DEB6D0]();
}

uint64_t sub_1B8B9C440()
{
  return MEMORY[0x1E0DF2270]();
}

uint64_t sub_1B8B9C44C()
{
  return MEMORY[0x1E0DF2280]();
}

uint64_t sub_1B8B9C458()
{
  return MEMORY[0x1E0DF2288]();
}

uint64_t sub_1B8B9C464()
{
  return MEMORY[0x1E0D20E70]();
}

uint64_t sub_1B8B9C470()
{
  return MEMORY[0x1E0DEF8E8]();
}

uint64_t sub_1B8B9C47C()
{
  return MEMORY[0x1E0DEF900]();
}

uint64_t sub_1B8B9C488()
{
  return MEMORY[0x1E0DEF920]();
}

uint64_t sub_1B8B9C494()
{
  return MEMORY[0x1E0CB1EC8]();
}

uint64_t sub_1B8B9C4A0()
{
  return MEMORY[0x1E0CB1F30]();
}

uint64_t sub_1B8B9C4AC()
{
  return MEMORY[0x1E0CB1F50]();
}

uint64_t sub_1B8B9C4B8()
{
  return MEMORY[0x1E0CE0760]();
}

uint64_t sub_1B8B9C4C4()
{
  return MEMORY[0x1E0DEFCD8]();
}

uint64_t sub_1B8B9C4D0()
{
  return MEMORY[0x1E0DEFCE0]();
}

uint64_t sub_1B8B9C4DC()
{
  return MEMORY[0x1E0DEFCE8]();
}

uint64_t sub_1B8B9C4E8()
{
  return MEMORY[0x1E0CB2190]();
}

uint64_t sub_1B8B9C4F4()
{
  return MEMORY[0x1E0CB22E8]();
}

uint64_t sub_1B8B9C500()
{
  return MEMORY[0x1E0DF22B8]();
}

uint64_t sub_1B8B9C50C()
{
  return MEMORY[0x1E0DEB940]();
}

uint64_t sub_1B8B9C518()
{
  return MEMORY[0x1E0DEB958]();
}

uint64_t sub_1B8B9C524()
{
  return MEMORY[0x1E0DEBC20]();
}

uint64_t sub_1B8B9C530()
{
  return MEMORY[0x1E0DEBC90]();
}

uint64_t sub_1B8B9C53C()
{
  return MEMORY[0x1E0CB2460]();
}

uint64_t sub_1B8B9C548()
{
  return MEMORY[0x1E0CB2478]();
}

uint64_t sub_1B8B9C554()
{
  return MEMORY[0x1E0CB2480]();
}

uint64_t sub_1B8B9C560()
{
  return MEMORY[0x1E0CB24B0]();
}

uint64_t sub_1B8B9C56C()
{
  return MEMORY[0x1E0CB24B8]();
}

uint64_t sub_1B8B9C578()
{
  return MEMORY[0x1E0CB2540]();
}

uint64_t sub_1B8B9C584()
{
  return MEMORY[0x1E0CB2588]();
}

uint64_t sub_1B8B9C590()
{
  return MEMORY[0x1E0DEBF30]();
}

uint64_t sub_1B8B9C59C()
{
  return MEMORY[0x1E0DEBF58]();
}

uint64_t sub_1B8B9C5A8()
{
  return MEMORY[0x1E0DEBFC0]();
}

uint64_t sub_1B8B9C5B4()
{
  return MEMORY[0x1E0DEC060]();
}

uint64_t sub_1B8B9C5C0()
{
  return MEMORY[0x1E0DEC078]();
}

uint64_t sub_1B8B9C5CC()
{
  return MEMORY[0x1E0DEC0B0]();
}

uint64_t sub_1B8B9C5D8()
{
  return MEMORY[0x1E0DEC0E0]();
}

uint64_t sub_1B8B9C5E4()
{
  return MEMORY[0x1E0DEC0F8]();
}

uint64_t sub_1B8B9C5F0()
{
  return MEMORY[0x1E0DEC110]();
}

uint64_t sub_1B8B9C5FC()
{
  return MEMORY[0x1E0DEC168]();
}

uint64_t sub_1B8B9C608()
{
  return MEMORY[0x1E0DEC248]();
}

uint64_t sub_1B8B9C614()
{
  return MEMORY[0x1E0DEC250]();
}

uint64_t sub_1B8B9C620()
{
  return MEMORY[0x1E0DEC258]();
}

uint64_t sub_1B8B9C62C()
{
  return MEMORY[0x1E0DEC260]();
}

uint64_t sub_1B8B9C638()
{
  return MEMORY[0x1E0DEC2A8]();
}

uint64_t sub_1B8B9C644()
{
  return MEMORY[0x1E0DEC2B0]();
}

uint64_t sub_1B8B9C650()
{
  return MEMORY[0x1E0DEC300]();
}

uint64_t sub_1B8B9C65C()
{
  return MEMORY[0x1E0DEC3D0]();
}

uint64_t sub_1B8B9C668()
{
  return MEMORY[0x1E0DEC3D8]();
}

uint64_t sub_1B8B9C674()
{
  return MEMORY[0x1E0DEC3E0]();
}

uint64_t sub_1B8B9C680()
{
  return MEMORY[0x1E0DEC3E8]();
}

uint64_t sub_1B8B9C68C()
{
  return MEMORY[0x1E0DEC430]();
}

uint64_t sub_1B8B9C698()
{
  return MEMORY[0x1E0DEC470]();
}

uint64_t sub_1B8B9C6A4()
{
  return MEMORY[0x1E0DEC498]();
}

uint64_t sub_1B8B9C6B0()
{
  return MEMORY[0x1E0DEC588]();
}

uint64_t sub_1B8B9C6BC()
{
  return MEMORY[0x1E0DEC660]();
}

uint64_t sub_1B8B9C6C8()
{
  return MEMORY[0x1E0DEC670]();
}

uint64_t sub_1B8B9C6D4()
{
  return MEMORY[0x1E0DEC6C0]();
}

uint64_t sub_1B8B9C6E0()
{
  return MEMORY[0x1E0DEC6C8]();
}

uint64_t sub_1B8B9C6EC()
{
  return MEMORY[0x1E0DEC8D8]();
}

uint64_t sub_1B8B9C6F8()
{
  return MEMORY[0x1E0DEC8E0]();
}

uint64_t sub_1B8B9C704()
{
  return MEMORY[0x1E0DECBE0]();
}

uint64_t sub_1B8B9C710()
{
  return MEMORY[0x1E0DECBE8]();
}

uint64_t sub_1B8B9C71C()
{
  return MEMORY[0x1E0DECBF8]();
}

uint64_t sub_1B8B9C728()
{
  return MEMORY[0x1E0DECD18]();
}

uint64_t sub_1B8B9C734()
{
  return MEMORY[0x1E0DECD20]();
}

uint64_t sub_1B8B9C740()
{
  return MEMORY[0x1E0DECD38]();
}

uint64_t sub_1B8B9C74C()
{
  return MEMORY[0x1E0DECD40]();
}

uint64_t sub_1B8B9C758()
{
  return MEMORY[0x1E0DECD50]();
}

uint64_t sub_1B8B9C764()
{
  return MEMORY[0x1E0DECD70]();
}

uint64_t sub_1B8B9C770()
{
  return MEMORY[0x1E0DECE70]();
}

uint64_t sub_1B8B9C77C()
{
  return MEMORY[0x1E0DECF28]();
}

uint64_t sub_1B8B9C788()
{
  return MEMORY[0x1E0DECF38]();
}

uint64_t sub_1B8B9C794()
{
  return MEMORY[0x1E0DECF40]();
}

uint64_t sub_1B8B9C7A0()
{
  return MEMORY[0x1E0DECF58]();
}

uint64_t sub_1B8B9C7AC()
{
  return MEMORY[0x1E0DECF60]();
}

uint64_t sub_1B8B9C7B8()
{
  return MEMORY[0x1E0DECF68]();
}

uint64_t sub_1B8B9C7C4()
{
  return MEMORY[0x1E0DECF78]();
}

uint64_t sub_1B8B9C7D0()
{
  return MEMORY[0x1E0DECF88]();
}

uint64_t sub_1B8B9C7DC()
{
  return MEMORY[0x1E0DECFC0]();
}

uint64_t sub_1B8B9C7E8()
{
  return MEMORY[0x1E0DECFC8]();
}

uint64_t sub_1B8B9C7F4()
{
  return MEMORY[0x1E0DECFD0]();
}

uint64_t sub_1B8B9C800()
{
  return MEMORY[0x1E0DECFE0]();
}

uint64_t sub_1B8B9C80C()
{
  return MEMORY[0x1E0DECFE8]();
}

uint64_t sub_1B8B9C818()
{
  return MEMORY[0x1E0DECFF0]();
}

uint64_t sub_1B8B9C824()
{
  return MEMORY[0x1E0DED038]();
}

uint64_t sub_1B8B9C830()
{
  return MEMORY[0x1E0DED048]();
}

uint64_t sub_1B8B9C83C()
{
  return MEMORY[0x1E0DED070]();
}

uint64_t sub_1B8B9C848()
{
  return MEMORY[0x1E0DED090]();
}

uint64_t sub_1B8B9C854()
{
  return MEMORY[0x1E0DED0A0]();
}

uint64_t sub_1B8B9C860()
{
  return MEMORY[0x1E0DED0C0]();
}

uint64_t sub_1B8B9C86C()
{
  return MEMORY[0x1E0DED0F0]();
}

uint64_t sub_1B8B9C878()
{
  return MEMORY[0x1E0DED0F8]();
}

uint64_t sub_1B8B9C884()
{
  return MEMORY[0x1E0DED100]();
}

uint64_t sub_1B8B9C890()
{
  return MEMORY[0x1E0DED110]();
}

uint64_t sub_1B8B9C89C()
{
  return MEMORY[0x1E0DED118]();
}

uint64_t sub_1B8B9C8A8()
{
  return MEMORY[0x1E0DED120]();
}

uint64_t sub_1B8B9C8B4()
{
  return MEMORY[0x1E0DED170]();
}

uint64_t sub_1B8B9C8C0()
{
  return MEMORY[0x1E0DED1D0]();
}

uint64_t sub_1B8B9C8CC()
{
  return MEMORY[0x1E0DED548]();
}

uint64_t sub_1B8B9C8D8()
{
  return MEMORY[0x1E0DED600]();
}

uint64_t sub_1B8B9C8E4()
{
  return MEMORY[0x1E0DED658]();
}

uint64_t sub_1B8B9C8F0()
{
  return MEMORY[0x1E0DED6F8]();
}

uint64_t sub_1B8B9C8FC()
{
  return MEMORY[0x1E0DED768]();
}

uint64_t sub_1B8B9C908()
{
  return MEMORY[0x1E0DED770]();
}

uint64_t sub_1B8B9C914()
{
  return MEMORY[0x1E0DED9C8]();
}

uint64_t sub_1B8B9C920()
{
  return MEMORY[0x1E0DEDAE0]();
}

uint64_t sub_1B8B9C92C()
{
  return MEMORY[0x1E0DEDAE8]();
}

uint64_t sub_1B8B9C938()
{
  return MEMORY[0x1E0DEDB10]();
}

uint64_t sub_1B8B9C944()
{
  return MEMORY[0x1E0DEDB18]();
}

uint64_t sub_1B8B9C950()
{
  return MEMORY[0x1E0DEDB20]();
}

uint64_t sub_1B8B9C95C()
{
  return MEMORY[0x1E0DEDB28]();
}

uint64_t sub_1B8B9C968()
{
  return MEMORY[0x1E0DEDEF8]();
}

uint64_t sub_1B8B9C974()
{
  return MEMORY[0x1E0DEDF10]();
}

uint64_t sub_1B8B9C980()
{
  return MEMORY[0x1E0DEDF18]();
}

uint64_t sub_1B8B9C98C()
{
  return MEMORY[0x1E0DEDF30]();
}

uint64_t sub_1B8B9C998()
{
  return MEMORY[0x1E0DEDF40]();
}

uint64_t sub_1B8B9C9A4()
{
  return MEMORY[0x1E0DEE230]();
}

uint64_t sub_1B8B9C9B0()
{
  return MEMORY[0x1E0DEE240]();
}

uint64_t sub_1B8B9C9BC()
{
  return MEMORY[0x1E0DEE260]();
}

uint64_t sub_1B8B9C9C8()
{
  return MEMORY[0x1E0DEE270]();
}

uint64_t sub_1B8B9C9D4()
{
  return MEMORY[0x1E0DEE700]();
}

uint64_t sub_1B8B9C9E0()
{
  return MEMORY[0x1E0DEE8E0]();
}

uint64_t sub_1B8B9C9EC()
{
  return MEMORY[0x1E0DEE8E8]();
}

CFAbsoluteTime CFAbsoluteTimeGetCurrent(void)
{
  CFAbsoluteTime result;

  MEMORY[0x1E0C97C58]();
  return result;
}

CFIndex CFArrayBSearchValues(CFArrayRef theArray, CFRange range, const void *value, CFComparatorFunction comparator, void *context)
{
  return MEMORY[0x1E0C97D08](theArray, range.location, range.length, value, comparator, context);
}

CFTypeRef CFAutorelease(CFTypeRef arg)
{
  return (CFTypeRef)MEMORY[0x1E0C97E90](arg);
}

Boolean CFBooleanGetValue(CFBooleanRef BOOLean)
{
  return MEMORY[0x1E0C97FE0](BOOLean);
}

CFCharacterSetRef CFCharacterSetCreateInvertedSet(CFAllocatorRef alloc, CFCharacterSetRef theSet)
{
  return (CFCharacterSetRef)MEMORY[0x1E0C982C0](alloc, theSet);
}

CFCharacterSetRef CFCharacterSetGetPredefined(CFCharacterSetPredefinedSet theSetIdentifier)
{
  return (CFCharacterSetRef)MEMORY[0x1E0C982F0](theSetIdentifier);
}

CFComparisonResult CFDateCompare(CFDateRef theDate, CFDateRef otherDate, void *context)
{
  return MEMORY[0x1E0C98440](theDate, otherDate, context);
}

CFTypeRef CFDateFormatterCopyProperty(CFDateFormatterRef formatter, CFDateFormatterKey key)
{
  return (CFTypeRef)MEMORY[0x1E0C98458](formatter, key);
}

CFDateFormatterRef CFDateFormatterCreate(CFAllocatorRef allocator, CFLocaleRef locale, CFDateFormatterStyle dateStyle, CFDateFormatterStyle timeStyle)
{
  return (CFDateFormatterRef)MEMORY[0x1E0C98460](allocator, locale, dateStyle, timeStyle);
}

CFStringRef CFDateFormatterCreateDateFormatFromTemplate(CFAllocatorRef allocator, CFStringRef tmplate, CFOptionFlags options, CFLocaleRef locale)
{
  return (CFStringRef)MEMORY[0x1E0C98468](allocator, tmplate, options, locale);
}

CFStringRef CFDateFormatterCreateStringWithAbsoluteTime(CFAllocatorRef allocator, CFDateFormatterRef formatter, CFAbsoluteTime at)
{
  return (CFStringRef)MEMORY[0x1E0C98488](allocator, formatter, at);
}

CFStringRef CFDateFormatterCreateStringWithDate(CFAllocatorRef allocator, CFDateFormatterRef formatter, CFDateRef date)
{
  return (CFStringRef)MEMORY[0x1E0C98490](allocator, formatter, date);
}

CFStringRef CFDateFormatterGetFormat(CFDateFormatterRef formatter)
{
  return (CFStringRef)MEMORY[0x1E0C984A8](formatter);
}

CFLocaleRef CFDateFormatterGetLocale(CFDateFormatterRef formatter)
{
  return (CFLocaleRef)MEMORY[0x1E0C984B0](formatter);
}

void CFDateFormatterSetFormat(CFDateFormatterRef formatter, CFStringRef formatString)
{
  MEMORY[0x1E0C984C0](formatter, formatString);
}

void CFDateFormatterSetProperty(CFDateFormatterRef formatter, CFStringRef key, CFTypeRef value)
{
  MEMORY[0x1E0C984C8](formatter, key, value);
}

CFAbsoluteTime CFDateGetAbsoluteTime(CFDateRef theDate)
{
  CFAbsoluteTime result;

  MEMORY[0x1E0C984D8](theDate);
  return result;
}

CFLocaleRef CFLocaleCopyCurrent(void)
{
  return (CFLocaleRef)MEMORY[0x1E0C98770]();
}

CFLocaleIdentifier CFLocaleGetIdentifier(CFLocaleRef locale)
{
  return (CFLocaleIdentifier)MEMORY[0x1E0C987D8](locale);
}

void CFNotificationCenterAddObserver(CFNotificationCenterRef center, const void *observer, CFNotificationCallback callBack, CFStringRef name, const void *object, CFNotificationSuspensionBehavior suspensionBehavior)
{
  MEMORY[0x1E0C988B0](center, observer, callBack, name, object, suspensionBehavior);
}

CFNotificationCenterRef CFNotificationCenterGetDarwinNotifyCenter(void)
{
  return (CFNotificationCenterRef)MEMORY[0x1E0C988B8]();
}

CFNotificationCenterRef CFNotificationCenterGetLocalCenter(void)
{
  return (CFNotificationCenterRef)MEMORY[0x1E0C988D0]();
}

void CFNotificationCenterPostNotification(CFNotificationCenterRef center, CFNotificationName name, const void *object, CFDictionaryRef userInfo, Boolean deliverImmediately)
{
  MEMORY[0x1E0C988E0](center, name, object, userInfo, deliverImmediately);
}

CFNumberRef CFNumberCreate(CFAllocatorRef allocator, CFNumberType theType, const void *valuePtr)
{
  return (CFNumberRef)MEMORY[0x1E0C98928](allocator, theType, valuePtr);
}

CFNumberFormatterRef CFNumberFormatterCreate(CFAllocatorRef allocator, CFLocaleRef locale, CFNumberFormatterStyle style)
{
  return (CFNumberFormatterRef)MEMORY[0x1E0C98938](allocator, locale, style);
}

CFStringRef CFNumberFormatterCreateStringWithNumber(CFAllocatorRef allocator, CFNumberFormatterRef formatter, CFNumberRef number)
{
  return (CFStringRef)MEMORY[0x1E0C98948](allocator, formatter, number);
}

uint64_t CFPhoneNumberCreate()
{
  return MEMORY[0x1E0D17838]();
}

uint64_t CFPhoneNumberCreateString()
{
  return MEMORY[0x1E0D17848]();
}

CFPropertyListRef CFPreferencesCopyValue(CFStringRef key, CFStringRef applicationID, CFStringRef userName, CFStringRef hostName)
{
  return (CFPropertyListRef)MEMORY[0x1E0C98A60](key, applicationID, userName, hostName);
}

void CFRelease(CFTypeRef cf)
{
  MEMORY[0x1E0C98BC0](cf);
}

CFTypeRef CFRetain(CFTypeRef cf)
{
  return (CFTypeRef)MEMORY[0x1E0C98BD0](cf);
}

CFRange CFStringFind(CFStringRef theString, CFStringRef stringToFind, CFStringCompareFlags compareOptions)
{
  CFIndex v3;
  CFIndex v4;
  CFRange result;

  v3 = MEMORY[0x1E0C99050](theString, stringToFind, compareOptions);
  result.length = v4;
  result.location = v3;
  return result;
}

Boolean CFStringFindCharacterFromSet(CFStringRef theString, CFCharacterSetRef theSet, CFRange rangeToSearch, CFStringCompareFlags searchOptions, CFRange *result)
{
  return MEMORY[0x1E0C99060](theString, theSet, rangeToSearch.location, rangeToSearch.length, searchOptions, result);
}

Boolean CFStringFindWithOptions(CFStringRef theString, CFStringRef stringToFind, CFRange rangeToSearch, CFStringCompareFlags searchOptions, CFRange *result)
{
  return MEMORY[0x1E0C99068](theString, stringToFind, rangeToSearch.location, rangeToSearch.length, searchOptions, result);
}

CFIndex CFStringGetLength(CFStringRef theString)
{
  return MEMORY[0x1E0C99100](theString);
}

Boolean CFStringHasPrefix(CFStringRef theString, CFStringRef prefix)
{
  return MEMORY[0x1E0C99180](theString, prefix);
}

Boolean CFStringHasSuffix(CFStringRef theString, CFStringRef suffix)
{
  return MEMORY[0x1E0C99190](theString, suffix);
}

CFTimeZoneRef CFTimeZoneCopySystem(void)
{
  return (CFTimeZoneRef)MEMORY[0x1E0C99280]();
}

CFTimeZoneRef CFTimeZoneCreateWithName(CFAllocatorRef allocator, CFStringRef name, Boolean tryAbbrev)
{
  return (CFTimeZoneRef)MEMORY[0x1E0C99288](allocator, name, tryAbbrev);
}

CFStringRef CFTimeZoneGetName(CFTimeZoneRef tz)
{
  return (CFStringRef)MEMORY[0x1E0C99298](tz);
}

CGContextRef CGBitmapContextCreate(void *data, size_t width, size_t height, size_t bitsPerComponent, size_t bytesPerRow, CGColorSpaceRef space, uint32_t bitmapInfo)
{
  return (CGContextRef)MEMORY[0x1E0C9BB10](data, width, height, bitsPerComponent, bytesPerRow, space, *(_QWORD *)&bitmapInfo);
}

CGImageRef CGBitmapContextCreateImage(CGContextRef context)
{
  return (CGImageRef)MEMORY[0x1E0C9BB20](context);
}

CGFloat CGColorGetAlpha(CGColorRef color)
{
  CGFloat result;

  MEMORY[0x1E0C9BCF8](color);
  return result;
}

CGColorRef CGColorRetain(CGColorRef color)
{
  return (CGColorRef)MEMORY[0x1E0C9BD68](color);
}

CGColorSpaceRef CGColorSpaceCreateWithName(CFStringRef name)
{
  return (CGColorSpaceRef)MEMORY[0x1E0C9BE50](name);
}

void CGContextAddPath(CGContextRef c, CGPathRef path)
{
  MEMORY[0x1E0C9BFD8](c, path);
}

void CGContextAddRect(CGContextRef c, CGRect rect)
{
  MEMORY[0x1E0C9BFE8](c, (__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
}

void CGContextBeginPath(CGContextRef c)
{
  MEMORY[0x1E0C9C000](c);
}

void CGContextClip(CGContextRef c)
{
  MEMORY[0x1E0C9C028](c);
}

void CGContextClosePath(CGContextRef c)
{
  MEMORY[0x1E0C9C048](c);
}

void CGContextDrawLinearGradient(CGContextRef c, CGGradientRef gradient, CGPoint startPoint, CGPoint endPoint, CGGradientDrawingOptions options)
{
  MEMORY[0x1E0C9C198](c, gradient, *(_QWORD *)&options, (__n128)startPoint, *(__n128 *)&startPoint.y, (__n128)endPoint, *(__n128 *)&endPoint.y);
}

void CGContextEOClip(CGContextRef c)
{
  MEMORY[0x1E0C9C1E8](c);
}

void CGContextFillEllipseInRect(CGContextRef c, CGRect rect)
{
  MEMORY[0x1E0C9C210](c, (__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
}

void CGContextFillPath(CGContextRef c)
{
  MEMORY[0x1E0C9C218](c);
}

void CGContextFillRect(CGContextRef c, CGRect rect)
{
  MEMORY[0x1E0C9C220](c, (__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
}

void CGContextFlush(CGContextRef c)
{
  MEMORY[0x1E0C9C230](c);
}

void CGContextRelease(CGContextRef c)
{
  MEMORY[0x1E0C9C340](c);
}

void CGContextResetClip(CGContextRef c)
{
  MEMORY[0x1E0C9C360](c);
}

void CGContextScaleCTM(CGContextRef c, CGFloat sx, CGFloat sy)
{
  MEMORY[0x1E0C9C390](c, sx, sy);
}

void CGContextSetFillColorWithColor(CGContextRef c, CGColorRef color)
{
  MEMORY[0x1E0C9C408](c, color);
}

void CGContextSetLineWidth(CGContextRef c, CGFloat width)
{
  MEMORY[0x1E0C9C480](c, width);
}

void CGContextSetShadow(CGContextRef c, CGSize offset, CGFloat blur)
{
  MEMORY[0x1E0C9C4B8](c, (__n128)offset, *(__n128 *)&offset.height, blur);
}

void CGContextSetShadowWithColor(CGContextRef c, CGSize offset, CGFloat blur, CGColorRef color)
{
  MEMORY[0x1E0C9C4C0](c, color, (__n128)offset, *(__n128 *)&offset.height, blur);
}

void CGContextSetStrokeColorWithColor(CGContextRef c, CGColorRef color)
{
  MEMORY[0x1E0C9C508](c, color);
}

void CGContextStrokeEllipseInRect(CGContextRef c, CGRect rect)
{
  MEMORY[0x1E0C9C560](c, (__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
}

void CGContextStrokeLineSegments(CGContextRef c, const CGPoint *points, size_t count)
{
  MEMORY[0x1E0C9C568](c, points, count);
}

void CGContextStrokePath(CGContextRef c)
{
  MEMORY[0x1E0C9C570](c);
}

void CGContextTranslateCTM(CGContextRef c, CGFloat tx, CGFloat ty)
{
  MEMORY[0x1E0C9C588](c, tx, ty);
}

CGGradientRef CGGradientCreateWithColors(CGColorSpaceRef space, CFArrayRef colors, const CGFloat *locations)
{
  return (CGGradientRef)MEMORY[0x1E0C9CA90](space, colors, locations);
}

void CGGradientRelease(CGGradientRef gradient)
{
  MEMORY[0x1E0C9CAC0](gradient);
}

CGPathRef CGPathCreateWithRoundedRect(CGRect rect, CGFloat cornerWidth, CGFloat cornerHeight, const CGAffineTransform *transform)
{
  return (CGPathRef)MEMORY[0x1E0C9D3D0](transform, (__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height, cornerWidth, cornerHeight);
}

void CGPathRelease(CGPathRef path)
{
  MEMORY[0x1E0C9D498](path);
}

BOOL CGRectEqualToRect(CGRect rect1, CGRect rect2)
{
  return MEMORY[0x1E0C9D570]((__n128)rect1.origin, *(__n128 *)&rect1.origin.y, (__n128)rect1.size, *(__n128 *)&rect1.size.height, (__n128)rect2.origin, *(__n128 *)&rect2.origin.y, (__n128)rect2.size, *(__n128 *)&rect2.size.height);
}

CGFloat CGRectGetHeight(CGRect rect)
{
  CGFloat result;

  MEMORY[0x1E0C9D580]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
  return result;
}

CGFloat CGRectGetMaxX(CGRect rect)
{
  CGFloat result;

  MEMORY[0x1E0C9D588]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
  return result;
}

CGFloat CGRectGetMaxY(CGRect rect)
{
  CGFloat result;

  MEMORY[0x1E0C9D5A0]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
  return result;
}

CGFloat CGRectGetMidY(CGRect rect)
{
  CGFloat result;

  MEMORY[0x1E0C9D5B0]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
  return result;
}

CGFloat CGRectGetMinX(CGRect rect)
{
  CGFloat result;

  MEMORY[0x1E0C9D5C0]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
  return result;
}

CGFloat CGRectGetMinY(CGRect rect)
{
  CGFloat result;

  MEMORY[0x1E0C9D5C8]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
  return result;
}

CGFloat CGRectGetWidth(CGRect rect)
{
  CGFloat result;

  MEMORY[0x1E0C9D5D0]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
  return result;
}

CGRect CGRectInset(CGRect rect, CGFloat dx, CGFloat dy)
{
  double v3;
  double v4;
  double v5;
  double v6;
  CGRect result;

  MEMORY[0x1E0C9D5E8]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height, dx, dy);
  result.size.height = v6;
  result.size.width = v5;
  result.origin.y = v4;
  result.origin.x = v3;
  return result;
}

BOOL CGRectIsNull(CGRect rect)
{
  return MEMORY[0x1E0C9D618]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
}

uint64_t CPDateFormatStringForFormatType()
{
  return MEMORY[0x1E0CFA260]();
}

CTFontDescriptorRef CTFontCopyFontDescriptor(CTFontRef font)
{
  return (CTFontDescriptorRef)MEMORY[0x1E0CA79B0](font);
}

uint64_t CTFontCopySystemUIFontExcessiveLineHeightCharacterSet()
{
  return MEMORY[0x1E0CA79F8]();
}

uint64_t CTFontCreateCopyOfSystemUIFontWithGrade()
{
  return MEMORY[0x1E0CA7A28]();
}

CTFontRef CTFontCreateWithNameAndOptions(CFStringRef name, CGFloat size, const CGAffineTransform *matrix, CTFontOptions options)
{
  return (CTFontRef)MEMORY[0x1E0CA7A90](name, matrix, options, size);
}

uint64_t CTFontGetLanguageAwareOutsets()
{
  return MEMORY[0x1E0CA7C10]();
}

CGFloat CTFontGetSize(CTFontRef font)
{
  CGFloat result;

  MEMORY[0x1E0CA7C50](font);
  return result;
}

CTFramesetterRef CTFramesetterCreateWithAttributedString(CFAttributedStringRef attrString)
{
  return (CTFramesetterRef)MEMORY[0x1E0CA7DE0](attrString);
}

CGSize CTFramesetterSuggestFrameSizeWithConstraints(CTFramesetterRef framesetter, CFRange stringRange, CFDictionaryRef frameAttributes, CGSize constraints, CFRange *fitRange)
{
  double v5;
  double v6;
  CGSize result;

  MEMORY[0x1E0CA7DF8](framesetter, stringRange.location, stringRange.length, frameAttributes, fitRange, (__n128)constraints, *(__n128 *)&constraints.height);
  result.height = v6;
  result.width = v5;
  return result;
}

uint64_t CalAbsoluteTimeAddGregorianUnits()
{
  return MEMORY[0x1E0D0BF50]();
}

uint64_t CalAbsoluteTimeGetGregorianDate()
{
  return MEMORY[0x1E0D0BF78]();
}

uint64_t CalAlarmCopyDefaultAllDayAlarmOffset()
{
  return MEMORY[0x1E0D0A170]();
}

uint64_t CalAlarmCopyDefaultTimedAlarmOffset()
{
  return MEMORY[0x1E0D0A180]();
}

uint64_t CalAlarmSetDefaultAllDayAlarmOffset()
{
  return MEMORY[0x1E0D0A1D8]();
}

uint64_t CalAlarmSetDefaultTimedAlarmOffset()
{
  return MEMORY[0x1E0D0A1E0]();
}

uint64_t CalCopyCalendar()
{
  return MEMORY[0x1E0D0BFF8]();
}

uint64_t CalCopySystemTimeZone()
{
  return MEMORY[0x1E0D0C008]();
}

uint64_t CalCopyTimeZone()
{
  return MEMORY[0x1E0D0C010]();
}

uint64_t CalDateTimeGetGregorianDate()
{
  return MEMORY[0x1E0D0C020]();
}

uint64_t CalEqualObjects()
{
  return MEMORY[0x1E0D0C0C0]();
}

uint64_t CalEqualStrings()
{
  return MEMORY[0x1E0D0C0C8]();
}

uint64_t CalEventOccurrenceCacheCopyBoundsForTimeZone()
{
  return MEMORY[0x1E0D0AB70]();
}

uint64_t CalGetRGBAFromString()
{
  return MEMORY[0x1E0D0C0E0]();
}

uint64_t CalGregorianDateGetAbsoluteTime()
{
  return MEMORY[0x1E0D0C0F8]();
}

uint64_t CalGregorianDateGetAbsoluteTimeWithFallbackToDefaultTimeZone()
{
  return MEMORY[0x1E0D0C100]();
}

uint64_t CalSetSystemTimeZone()
{
  return MEMORY[0x1E0D0C188]();
}

uint64_t CalTimeZoneCopyCFTimeZone()
{
  return MEMORY[0x1E0D0C198]();
}

uint64_t CurrentLocaleExpectsMultipleFamilyNames()
{
  return MEMORY[0x1E0D0C1A8]();
}

uint64_t CurrentLocaleExpectsSurnameFirst()
{
  return MEMORY[0x1E0D0C1B0]();
}

uint64_t EKDateComponentsGetDate()
{
  return MEMORY[0x1E0D0C1C8]();
}

uint64_t EKWeakLinkClass()
{
  return MEMORY[0x1E0D0C210]();
}

uint64_t EKWeakLinkStringConstant()
{
  return MEMORY[0x1E0D0C218]();
}

uint64_t EKWeakLinkSymbol()
{
  return MEMORY[0x1E0D0C220]();
}

uint64_t ICSRedactString()
{
  return MEMORY[0x1E0DDB780]();
}

MKCoordinateRegion MKCoordinateRegionMakeWithDistance(CLLocationCoordinate2D centerCoordinate, CLLocationDistance latitudinalMeters, CLLocationDistance longitudinalMeters)
{
  double v3;
  double v4;
  double v5;
  double v6;
  MKCoordinateRegion result;

  MEMORY[0x1E0CC1570]((__n128)centerCoordinate, *(__n128 *)&centerCoordinate.longitude, latitudinalMeters, longitudinalMeters);
  result.span.longitudeDelta = v6;
  result.span.latitudeDelta = v5;
  result.center.longitude = v4;
  result.center.latitude = v3;
  return result;
}

void NSLog(NSString *format, ...)
{
  MEMORY[0x1E0CB2D88](format);
}

uint64_t NSRequestConcreteImplementation()
{
  return MEMORY[0x1E0CB3158]();
}

SEL NSSelectorFromString(NSString *aSelectorName)
{
  return (SEL)MEMORY[0x1E0CB3190](aSelectorName);
}

NSString *__cdecl NSStringFromCGRect(CGRect rect)
{
  return (NSString *)MEMORY[0x1E0DC32E8]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
}

NSString *__cdecl NSStringFromClass(Class aClass)
{
  return (NSString *)MEMORY[0x1E0CB3200](aClass);
}

uint64_t PNCopyBestGuessCountryCodeForNumber()
{
  return MEMORY[0x1E0D17860]();
}

uint64_t PNCopyBestGuessNormalizedNumberForCountry()
{
  return MEMORY[0x1E0D17868]();
}

BOOL UIContentSizeCategoryIsAccessibilityCategory(UIContentSizeCategory category)
{
  return MEMORY[0x1E0DC4910](category);
}

CGContextRef UIGraphicsGetCurrentContext(void)
{
  return (CGContextRef)MEMORY[0x1E0DC4BE8]();
}

uint64_t UIRoundToViewScale()
{
  return MEMORY[0x1E0DC52F8]();
}

void *__cdecl _Block_copy(const void *aBlock)
{
  return (void *)MEMORY[0x1E0C80928](aBlock);
}

void _Block_object_dispose(const void *a1, const int a2)
{
  MEMORY[0x1E0C80948](a1, *(_QWORD *)&a2);
}

void _Block_release(const void *aBlock)
{
  MEMORY[0x1E0C80958](aBlock);
}

void _Unwind_Resume(_Unwind_Exception *exception_object)
{
  MEMORY[0x1E0C80A20](exception_object);
}

uint64_t _bitmaskContainsOption()
{
  return MEMORY[0x1E0CAA1C0]();
}

uint64_t _os_feature_enabled_impl()
{
  return MEMORY[0x1E0C81010]();
}

void _os_log_debug_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
  MEMORY[0x1E0C81020](dso, log, type, format, buf, *(_QWORD *)&size);
}

void _os_log_error_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
  MEMORY[0x1E0C81038](dso, log, type, format, buf, *(_QWORD *)&size);
}

void _os_log_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
  MEMORY[0x1E0C81048](dso, log, type, format, buf, *(_QWORD *)&size);
}

void _os_signpost_emit_with_name_impl(void *dso, os_log_t log, os_signpost_type_t type, os_signpost_id_t spid, const char *name, const char *format, uint8_t *buf, uint32_t size)
{
  MEMORY[0x1E0C810D0](dso, log, type, spid, name, format, buf, *(_QWORD *)&size);
}

uint64_t _sl_dlopen()
{
  return MEMORY[0x1E0DA88F0]();
}

uint64_t _swift_stdlib_bridgeErrorToNSError()
{
  return MEMORY[0x1E0DEEA28]();
}

uint64_t _swift_stdlib_reportUnimplementedInitializer()
{
  return MEMORY[0x1E0DEEA40]();
}

uint32_t arc4random_uniform(uint32_t __upper_bound)
{
  return MEMORY[0x1E0C81588](*(_QWORD *)&__upper_bound);
}

void bzero(void *a1, size_t a2)
{
  MEMORY[0x1E0C81758](a1, a2);
}

BOOL class_addProtocol(Class cls, Protocol *protocol)
{
  return MEMORY[0x1E0DE7A60](cls, protocol);
}

void dispatch_after(dispatch_time_t when, dispatch_queue_t queue, dispatch_block_t block)
{
  MEMORY[0x1E0C82BC8](when, queue, block);
}

void dispatch_assert_queue_V2(dispatch_queue_t queue)
{
  MEMORY[0x1E0C82BE8](queue);
}

void dispatch_async(dispatch_queue_t queue, dispatch_block_t block)
{
  MEMORY[0x1E0C82C00](queue, block);
}

dispatch_queue_global_t dispatch_get_global_queue(intptr_t identifier, uintptr_t flags)
{
  return (dispatch_queue_global_t)MEMORY[0x1E0C82D00](identifier, flags);
}

void dispatch_group_async(dispatch_group_t group, dispatch_queue_t queue, dispatch_block_t block)
{
  MEMORY[0x1E0C82D10](group, queue, block);
}

dispatch_group_t dispatch_group_create(void)
{
  return (dispatch_group_t)MEMORY[0x1E0C82D20]();
}

void dispatch_group_enter(dispatch_group_t group)
{
  MEMORY[0x1E0C82D28](group);
}

void dispatch_group_leave(dispatch_group_t group)
{
  MEMORY[0x1E0C82D30](group);
}

void dispatch_group_notify(dispatch_group_t group, dispatch_queue_t queue, dispatch_block_t block)
{
  MEMORY[0x1E0C82D38](group, queue, block);
}

intptr_t dispatch_group_wait(dispatch_group_t group, dispatch_time_t timeout)
{
  return MEMORY[0x1E0C82D48](group, timeout);
}

void dispatch_once(dispatch_once_t *predicate, dispatch_block_t block)
{
  MEMORY[0x1E0C82E08](predicate, block);
}

dispatch_queue_attr_t dispatch_queue_attr_make_with_autorelease_frequency(dispatch_queue_attr_t attr, dispatch_autorelease_frequency_t frequency)
{
  return (dispatch_queue_attr_t)MEMORY[0x1E0C82E28](attr, frequency);
}

dispatch_queue_attr_t dispatch_queue_attr_make_with_qos_class(dispatch_queue_attr_t attr, dispatch_qos_class_t qos_class, int relative_priority)
{
  return (dispatch_queue_attr_t)MEMORY[0x1E0C82E38](attr, *(_QWORD *)&qos_class, *(_QWORD *)&relative_priority);
}

dispatch_queue_t dispatch_queue_create(const char *label, dispatch_queue_attr_t attr)
{
  return (dispatch_queue_t)MEMORY[0x1E0C82E48](label, attr);
}

dispatch_semaphore_t dispatch_semaphore_create(intptr_t value)
{
  return (dispatch_semaphore_t)MEMORY[0x1E0C82EB8](value);
}

intptr_t dispatch_semaphore_signal(dispatch_semaphore_t dsema)
{
  return MEMORY[0x1E0C82EC8](dsema);
}

intptr_t dispatch_semaphore_wait(dispatch_semaphore_t dsema, dispatch_time_t timeout)
{
  return MEMORY[0x1E0C82ED8](dsema, timeout);
}

void dispatch_sync(dispatch_queue_t queue, dispatch_block_t block)
{
  MEMORY[0x1E0C82F90](queue, block);
}

dispatch_time_t dispatch_time(dispatch_time_t when, int64_t delta)
{
  return MEMORY[0x1E0C82FB8](when, delta);
}

void free(void *a1)
{
  MEMORY[0x1E0C834A8](a1);
}

void *__cdecl malloc(size_t __size)
{
  return (void *)MEMORY[0x1E0C83E68](__size);
}

size_t malloc_size(const void *ptr)
{
  return MEMORY[0x1E0C83EE0](ptr);
}

void *__cdecl malloc_type_malloc(size_t size, malloc_type_id_t type_id)
{
  return (void *)MEMORY[0x1E0C83F00](size, type_id);
}

int memcmp(const void *__s1, const void *__s2, size_t __n)
{
  return MEMORY[0x1E0C84078](__s1, __s2, __n);
}

void *__cdecl memcpy(void *__dst, const void *__src, size_t __n)
{
  return (void *)MEMORY[0x1E0C84088](__dst, __src, __n);
}

void *__cdecl memmove(void *__dst, const void *__src, size_t __len)
{
  return (void *)MEMORY[0x1E0C84098](__dst, __src, __len);
}

uint32_t notify_cancel(int token)
{
  return MEMORY[0x1E0C843D8](*(_QWORD *)&token);
}

uint32_t notify_check(int token, int *check)
{
  return MEMORY[0x1E0C843E0](*(_QWORD *)&token, check);
}

uint32_t notify_register_check(const char *name, int *out_token)
{
  return MEMORY[0x1E0C84400](name, out_token);
}

uint32_t notify_register_dispatch(const char *name, int *out_token, dispatch_queue_t queue, notify_handler_t handler)
{
  return MEMORY[0x1E0C84408](name, out_token, queue, handler);
}

id objc_alloc(Class a1)
{
  return (id)MEMORY[0x1E0DE7BA8](a1);
}

id objc_allocWithZone(Class a1)
{
  return (id)MEMORY[0x1E0DE7BB0](a1);
}

uint64_t objc_alloc_init()
{
  return MEMORY[0x1E0DE7BB8]();
}

id objc_autorelease(id a1)
{
  return (id)MEMORY[0x1E0DE7BD0](a1);
}

id objc_autoreleaseReturnValue(id a1)
{
  return (id)MEMORY[0x1E0DE7BE8](a1);
}

uint64_t objc_claimAutoreleasedReturnValue()
{
  return MEMORY[0x1E0DE7BF8]();
}

void objc_copyWeak(id *to, id *from)
{
  MEMORY[0x1E0DE7C38](to, from);
}

void objc_destroyWeak(id *location)
{
  MEMORY[0x1E0DE7C60](location);
}

void objc_enumerationMutation(id obj)
{
  MEMORY[0x1E0DE7C90](obj);
}

void objc_exception_throw(id exception)
{
  MEMORY[0x1E0DE7CA0](exception);
}

id objc_getAssociatedObject(id object, const void *key)
{
  return (id)MEMORY[0x1E0DE7CA8](object, key);
}

Class objc_getClass(const char *name)
{
  return (Class)MEMORY[0x1E0DE7CB0](name);
}

id objc_getProperty(id self, SEL _cmd, ptrdiff_t offset, BOOL atomic)
{
  return (id)MEMORY[0x1E0DE7CD0](self, _cmd, offset, atomic);
}

id objc_initWeak(id *location, id val)
{
  return (id)MEMORY[0x1E0DE7CE0](location, val);
}

id objc_loadWeakRetained(id *location)
{
  return (id)MEMORY[0x1E0DE7D08](location);
}

void objc_moveWeak(id *to, id *from)
{
  MEMORY[0x1E0DE7D18](to, from);
}

id objc_msgSend(id a1, SEL a2, ...)
{
  return (id)MEMORY[0x1E0DE7D20](a1, a2);
}

id objc_msgSendSuper2(objc_super *a1, SEL a2, ...)
{
  return (id)MEMORY[0x1E0DE7D30](a1, a2);
}

uint64_t objc_opt_class()
{
  return MEMORY[0x1E0DE7D38]();
}

uint64_t objc_opt_isKindOfClass()
{
  return MEMORY[0x1E0DE7D40]();
}

uint64_t objc_opt_new()
{
  return MEMORY[0x1E0DE7D48]();
}

uint64_t objc_opt_respondsToSelector()
{
  return MEMORY[0x1E0DE7D50]();
}

uint64_t objc_opt_self()
{
  return MEMORY[0x1E0DE7D58]();
}

void objc_release(id a1)
{
  MEMORY[0x1E0DE7D78](a1);
}

id objc_retain(id a1)
{
  return (id)MEMORY[0x1E0DE7E50](a1);
}

id objc_retainAutorelease(id a1)
{
  return (id)MEMORY[0x1E0DE7E58](a1);
}

id objc_retainAutoreleaseReturnValue(id a1)
{
  return (id)MEMORY[0x1E0DE7E60](a1);
}

id objc_retainAutoreleasedReturnValue(id a1)
{
  return (id)MEMORY[0x1E0DE7E68](a1);
}

id objc_retainBlock(id a1)
{
  return (id)MEMORY[0x1E0DE7E70](a1);
}

void objc_setAssociatedObject(id object, const void *key, id value, void *policy)
{
  MEMORY[0x1E0DE7F40](object, key, value, policy);
}

void objc_setProperty_atomic(id self, SEL _cmd, id newValue, ptrdiff_t offset)
{
  MEMORY[0x1E0DE7F88](self, _cmd, newValue, offset);
}

void objc_setProperty_atomic_copy(id self, SEL _cmd, id newValue, ptrdiff_t offset)
{
  MEMORY[0x1E0DE7F90](self, _cmd, newValue, offset);
}

void objc_setProperty_nonatomic(id self, SEL _cmd, id newValue, ptrdiff_t offset)
{
  MEMORY[0x1E0DE7F98](self, _cmd, newValue, offset);
}

void objc_setProperty_nonatomic_copy(id self, SEL _cmd, id newValue, ptrdiff_t offset)
{
  MEMORY[0x1E0DE7FA0](self, _cmd, newValue, offset);
}

void objc_storeStrong(id *location, id obj)
{
  MEMORY[0x1E0DE7FB0](location, obj);
}

id objc_storeWeak(id *location, id obj)
{
  return (id)MEMORY[0x1E0DE7FB8](location, obj);
}

int objc_sync_enter(id obj)
{
  return MEMORY[0x1E0DE7FC8](obj);
}

int objc_sync_exit(id obj)
{
  return MEMORY[0x1E0DE7FD0](obj);
}

id objc_unsafeClaimAutoreleasedReturnValue(id a1)
{
  return (id)MEMORY[0x1E0DE7FE0](a1);
}

os_log_t os_log_create(const char *subsystem, const char *category)
{
  return (os_log_t)MEMORY[0x1E0C84728](subsystem, category);
}

BOOL os_log_type_enabled(os_log_t oslog, os_log_type_t type)
{
  return MEMORY[0x1E0C84780](oslog, type);
}

BOOL os_signpost_enabled(os_log_t log)
{
  return MEMORY[0x1E0C84920](log);
}

void os_unfair_lock_assert_not_owner(const os_unfair_lock *lock)
{
  MEMORY[0x1E0C84988](lock);
}

void os_unfair_lock_assert_owner(const os_unfair_lock *lock)
{
  MEMORY[0x1E0C84990](lock);
}

void os_unfair_lock_lock(os_unfair_lock_t lock)
{
  MEMORY[0x1E0C84998](lock);
}

void os_unfair_lock_unlock(os_unfair_lock_t lock)
{
  MEMORY[0x1E0C849B0](lock);
}

int pthread_mutex_destroy(pthread_mutex_t *a1)
{
  return MEMORY[0x1E0C84E18](a1);
}

int pthread_mutex_init(pthread_mutex_t *a1, const pthread_mutexattr_t *a2)
{
  return MEMORY[0x1E0C84E20](a1, a2);
}

int pthread_mutex_lock(pthread_mutex_t *a1)
{
  return MEMORY[0x1E0C84E28](a1);
}

int pthread_mutex_unlock(pthread_mutex_t *a1)
{
  return MEMORY[0x1E0C84E38](a1);
}

size_t strlen(const char *__s)
{
  return MEMORY[0x1E0C85578](__s);
}

uint64_t swift_allocBox()
{
  return MEMORY[0x1E0DEEA98]();
}

uint64_t swift_allocError()
{
  return MEMORY[0x1E0DEEAA8]();
}

uint64_t swift_allocObject()
{
  return MEMORY[0x1E0DEEAB0]();
}

uint64_t swift_allocateGenericValueMetadata()
{
  return MEMORY[0x1E0DEEAC0]();
}

uint64_t swift_arrayDestroy()
{
  return MEMORY[0x1E0DEEAD8]();
}

uint64_t swift_arrayInitWithCopy()
{
  return MEMORY[0x1E0DEEAE0]();
}

uint64_t swift_arrayInitWithTakeBackToFront()
{
  return MEMORY[0x1E0DEEAE8]();
}

uint64_t swift_arrayInitWithTakeFrontToBack()
{
  return MEMORY[0x1E0DEEAF0]();
}

uint64_t swift_beginAccess()
{
  return MEMORY[0x1E0DEEAF8]();
}

uint64_t swift_bridgeObjectRelease()
{
  return MEMORY[0x1E0DEEB08]();
}

uint64_t swift_bridgeObjectRelease_n()
{
  return MEMORY[0x1E0DEEB10]();
}

uint64_t swift_bridgeObjectRetain()
{
  return MEMORY[0x1E0DEEB18]();
}

uint64_t swift_bridgeObjectRetain_n()
{
  return MEMORY[0x1E0DEEB20]();
}

uint64_t swift_checkMetadataState()
{
  return MEMORY[0x1E0DEEB28]();
}

uint64_t swift_continuation_await()
{
  return MEMORY[0x1E0DF0F88]();
}

uint64_t swift_continuation_init()
{
  return MEMORY[0x1E0DF0F90]();
}

uint64_t swift_continuation_throwingResume()
{
  return MEMORY[0x1E0DF0FA0]();
}

uint64_t swift_continuation_throwingResumeWithError()
{
  return MEMORY[0x1E0DF0FA8]();
}

uint64_t swift_deallocClassInstance()
{
  return MEMORY[0x1E0DEEB50]();
}

uint64_t swift_deallocObject()
{
  return MEMORY[0x1E0DEEB60]();
}

uint64_t swift_dynamicCast()
{
  return MEMORY[0x1E0DEEB80]();
}

uint64_t swift_dynamicCastClass()
{
  return MEMORY[0x1E0DEEB88]();
}

uint64_t swift_dynamicCastObjCClass()
{
  return MEMORY[0x1E0DEEBA8]();
}

uint64_t swift_dynamicCastTypeToObjCProtocolConditional()
{
  return MEMORY[0x1E0DEEBC8]();
}

uint64_t swift_endAccess()
{
  return MEMORY[0x1E0DEEBE0]();
}

uint64_t swift_errorRelease()
{
  return MEMORY[0x1E0DEEBF0]();
}

uint64_t swift_errorRetain()
{
  return MEMORY[0x1E0DEEBF8]();
}

uint64_t swift_getAssociatedConformanceWitness()
{
  return MEMORY[0x1E0DEEC00]();
}

uint64_t swift_getAssociatedTypeWitness()
{
  return MEMORY[0x1E0DEEC08]();
}

uint64_t swift_getAtKeyPath()
{
  return MEMORY[0x1E0DEEC18]();
}

uint64_t swift_getEnumCaseMultiPayload()
{
  return MEMORY[0x1E0DEEC40]();
}

uint64_t swift_getEnumTagSinglePayloadGeneric()
{
  return MEMORY[0x1E0DEEC48]();
}

uint64_t swift_getForeignTypeMetadata()
{
  return MEMORY[0x1E0DEEC78]();
}

uint64_t swift_getGenericMetadata()
{
  return MEMORY[0x1E0DEECB0]();
}

uint64_t swift_getKeyPath()
{
  return MEMORY[0x1E0DEECB8]();
}

uint64_t swift_getObjCClassFromMetadata()
{
  return MEMORY[0x1E0DEECC8]();
}

uint64_t swift_getObjCClassMetadata()
{
  return MEMORY[0x1E0DEECD8]();
}

uint64_t swift_getObjectType()
{
  return MEMORY[0x1E0DEECE0]();
}

uint64_t swift_getOpaqueTypeConformance2()
{
  return MEMORY[0x1E0DEECE8]();
}

uint64_t swift_getSingletonMetadata()
{
  return MEMORY[0x1E0DEECF8]();
}

uint64_t swift_getTupleTypeLayout()
{
  return MEMORY[0x1E0DEED00]();
}

uint64_t swift_getTupleTypeMetadata()
{
  return MEMORY[0x1E0DEED18]();
}

uint64_t swift_getTupleTypeMetadata2()
{
  return MEMORY[0x1E0DEED20]();
}

uint64_t swift_getTupleTypeMetadata3()
{
  return MEMORY[0x1E0DEED28]();
}

uint64_t swift_getTypeByMangledNameInContext2()
{
  return MEMORY[0x1E0DEED38]();
}

uint64_t swift_getTypeByMangledNameInContextInMetadataState2()
{
  return MEMORY[0x1E0DEED40]();
}

uint64_t swift_getWitnessTable()
{
  return MEMORY[0x1E0DEED50]();
}

uint64_t swift_initEnumMetadataMultiPayload()
{
  return MEMORY[0x1E0DEED60]();
}

uint64_t swift_initEnumMetadataSinglePayload()
{
  return MEMORY[0x1E0DEED70]();
}

uint64_t swift_initStackObject()
{
  return MEMORY[0x1E0DEED78]();
}

uint64_t swift_initStructMetadata()
{
  return MEMORY[0x1E0DEED88]();
}

uint64_t swift_isUniquelyReferenced_nonNull_bridgeObject()
{
  return MEMORY[0x1E0DEEDC8]();
}

uint64_t swift_isUniquelyReferenced_nonNull_native()
{
  return MEMORY[0x1E0DEEDD0]();
}

uint64_t swift_lookUpClassMethod()
{
  return MEMORY[0x1E0DEEDE0]();
}

uint64_t swift_makeBoxUnique()
{
  return MEMORY[0x1E0DEEDE8]();
}

uint64_t swift_once()
{
  return MEMORY[0x1E0DEEE00]();
}

uint64_t swift_projectBox()
{
  return MEMORY[0x1E0DEEE08]();
}

uint64_t swift_release()
{
  return MEMORY[0x1E0DEEE30]();
}

uint64_t swift_release_n()
{
  return MEMORY[0x1E0DEEE38]();
}

uint64_t swift_retain()
{
  return MEMORY[0x1E0DEEE48]();
}

uint64_t swift_retain_n()
{
  return MEMORY[0x1E0DEEE50]();
}

uint64_t swift_setDeallocating()
{
  return MEMORY[0x1E0DEEE70]();
}

uint64_t swift_slowAlloc()
{
  return MEMORY[0x1E0DEEE78]();
}

uint64_t swift_slowDealloc()
{
  return MEMORY[0x1E0DEEE80]();
}

uint64_t swift_storeEnumTagMultiPayload()
{
  return MEMORY[0x1E0DEEE98]();
}

uint64_t swift_storeEnumTagSinglePayloadGeneric()
{
  return MEMORY[0x1E0DEEEA0]();
}

uint64_t swift_task_alloc()
{
  return MEMORY[0x1E0DF1000]();
}

uint64_t swift_task_create()
{
  return MEMORY[0x1E0DF1008]();
}

uint64_t swift_task_dealloc()
{
  return MEMORY[0x1E0DF1010]();
}

uint64_t swift_task_switch()
{
  return MEMORY[0x1E0DF1050]();
}

uint64_t swift_unknownObjectRelease()
{
  return MEMORY[0x1E0DEEEC0]();
}

uint64_t swift_unknownObjectRetain()
{
  return MEMORY[0x1E0DEEED0]();
}

uint64_t swift_unknownObjectRetain_n()
{
  return MEMORY[0x1E0DEEED8]();
}

uint64_t swift_unknownObjectWeakAssign()
{
  return MEMORY[0x1E0DEEF20]();
}

uint64_t swift_unknownObjectWeakDestroy()
{
  return MEMORY[0x1E0DEEF38]();
}

uint64_t swift_unknownObjectWeakInit()
{
  return MEMORY[0x1E0DEEF40]();
}

uint64_t swift_unknownObjectWeakLoadStrong()
{
  return MEMORY[0x1E0DEEF48]();
}

uint64_t swift_updateClassMetadata2()
{
  return MEMORY[0x1E0DEEF78]();
}

uint64_t swift_weakDestroy()
{
  return MEMORY[0x1E0DEEF98]();
}

uint64_t swift_weakInit()
{
  return MEMORY[0x1E0DEEFA0]();
}

uint64_t swift_weakLoadStrong()
{
  return MEMORY[0x1E0DEEFA8]();
}

uint64_t swift_willThrow()
{
  return MEMORY[0x1E0DEEFC0]();
}

const char *__cdecl u_errorName(UErrorCode code)
{
  return (const char *)MEMORY[0x1E0DE5988](*(_QWORD *)&code);
}

uint64_t ubidi_close()
{
  return MEMORY[0x1E0DE5BD8]();
}

uint64_t ubidi_getParaLevel()
{
  return MEMORY[0x1E0DE5C10]();
}

uint64_t ubidi_openSized()
{
  return MEMORY[0x1E0DE5C40]();
}

uint64_t ubidi_setPara()
{
  return MEMORY[0x1E0DE5C60]();
}

uint64_t udat_getSymbols()
{
  return MEMORY[0x1E0DE6130]();
}

uint64_t udat_open()
{
  return MEMORY[0x1E0DE6140]();
}

