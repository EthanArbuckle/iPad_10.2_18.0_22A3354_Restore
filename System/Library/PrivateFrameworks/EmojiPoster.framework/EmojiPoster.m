void JCColor::JCColor(JCColor *this)
{
  *(_QWORD *)this = 0;
  *((_QWORD *)this + 1) = 0;
}

{
  *(_QWORD *)this = 0;
  *((_QWORD *)this + 1) = 0;
}

void JCColor::JCColor(JCColor *this, CGColorRef color)
{
  *(_QWORD *)this = 0;
  *((_QWORD *)this + 1) = 0;
  if (color)
    *(_QWORD *)this = CGColorCreateCopy(color);
}

{
  *(_QWORD *)this = 0;
  *((_QWORD *)this + 1) = 0;
  if (color)
    *(_QWORD *)this = CGColorCreateCopy(color);
}

void JCColor::~JCColor(CGColor **this)
{
  CGColor *v2;
  CGColor *v3;

  v2 = *this;
  if (v2)
  {
    CGColorRelease(v2);
    *this = 0;
  }
  v3 = this[1];
  if (v3)
  {
    CGColorRelease(v3);
    this[1] = 0;
  }
}

void __clang_call_terminate(void *a1)
{
  __cxa_begin_catch(a1);
  std::terminate();
}

void JCColor::JCColor(JCColor *this, CGColorRef *a2)
{
  CGColor *v4;

  *(_QWORD *)this = 0;
  *((_QWORD *)this + 1) = 0;
  if (*a2)
    *(_QWORD *)this = CGColorCreateCopy(*a2);
  v4 = a2[1];
  if (v4)
    *((_QWORD *)this + 1) = CGColorCreateCopy(v4);
}

void JCColor::JCColor(JCColor *this, CGColorRef *a2, CGFloat a3)
{
  CGColor *v6;

  *(_QWORD *)this = 0;
  *((_QWORD *)this + 1) = 0;
  CGColorRelease(0);
  *(_QWORD *)this = 0;
  CGColorRelease(*((CGColorRef *)this + 1));
  *((_QWORD *)this + 1) = 0;
  if (*a2)
    *(_QWORD *)this = CGColorCreateCopyWithAlpha(*a2, a3);
  v6 = a2[1];
  if (v6)
    *((_QWORD *)this + 1) = CGColorCreateCopyWithAlpha(v6, a3);
}

CGColorRef *JCColor::operator=(CGColorRef *a1, CGColorRef *a2)
{
  CGColor *v4;

  if (a1 != a2)
  {
    CGColorRelease(*a1);
    *a1 = 0;
    CGColorRelease(a1[1]);
    a1[1] = 0;
    if (*a2)
      *a1 = CGColorCreateCopy(*a2);
    v4 = a2[1];
    if (v4)
      a1[1] = CGColorCreateCopy(v4);
  }
  return a1;
}

BOOL JCColor::operator==(CGColorRef *a1, CGColorRef *a2)
{
  return CGColorEqualToColor(*a1, *a2);
}

void JCColor::JCColor(JCColor *this, CGFloat a2, CGFloat a3, CGFloat a4, CGFloat a5)
{
  CGColorSpace *DeviceRGB;
  CGFloat components[5];

  components[4] = *(CGFloat *)MEMORY[0x1E0C80C00];
  *(_QWORD *)this = 0;
  *((_QWORD *)this + 1) = 0;
  components[0] = a2;
  components[1] = a3;
  components[2] = a4;
  components[3] = a5;
  DeviceRGB = (CGColorSpace *)_rgbSpace;
  if (!_rgbSpace)
  {
    DeviceRGB = CGColorSpaceCreateDeviceRGB();
    _rgbSpace = (uint64_t)DeviceRGB;
  }
  *(_QWORD *)this = CGColorCreate(DeviceRGB, components);
}

CGColorSpaceRef GetRGBColorSpace(void)
{
  CGColorSpaceRef result;

  result = (CGColorSpaceRef)_rgbSpace;
  if (!_rgbSpace)
  {
    result = CGColorSpaceCreateDeviceRGB();
    _rgbSpace = (uint64_t)result;
  }
  return result;
}

void JCColor::JCColor(JCColor *this, CGFloat a2, CGFloat a3)
{
  CGColorSpace *DeviceGray;
  CGFloat components[3];

  components[2] = *(CGFloat *)MEMORY[0x1E0C80C00];
  *(_QWORD *)this = 0;
  *((_QWORD *)this + 1) = 0;
  components[0] = a2;
  components[1] = a3;
  DeviceGray = (CGColorSpace *)_graySpace;
  if (!_graySpace)
  {
    DeviceGray = CGColorSpaceCreateDeviceGray();
    _graySpace = (uint64_t)DeviceGray;
  }
  *(_QWORD *)this = CGColorCreate(DeviceGray, components);
}

CGColorSpaceRef GetGrayscaleColorSpace(void)
{
  CGColorSpaceRef result;

  result = (CGColorSpaceRef)_graySpace;
  if (!_graySpace)
  {
    result = CGColorSpaceCreateDeviceGray();
    _graySpace = (uint64_t)result;
  }
  return result;
}

void JCColor::JCColor(JCColor *this, double a2, double a3, double a4)
{
  CGColorSpace *DeviceRGB;
  CGFloat v6;
  CGFloat v7;
  CGFloat v8;
  CGFloat components[5];

  components[4] = *(CGFloat *)MEMORY[0x1E0C80C00];
  *(_QWORD *)this = 0;
  *((_QWORD *)this + 1) = 0;
  v7 = 0.0;
  v8 = 0.0;
  v6 = 0.0;
  _HSBToRGB(a2, a3, a4, &v8, &v7, &v6);
  components[0] = v8;
  components[1] = v7;
  components[2] = v6;
  components[3] = 1.0;
  DeviceRGB = (CGColorSpace *)_rgbSpace;
  if (!_rgbSpace)
  {
    DeviceRGB = CGColorSpaceCreateDeviceRGB();
    _rgbSpace = (uint64_t)DeviceRGB;
  }
  *(_QWORD *)this = CGColorCreate(DeviceRGB, components);
}

double _HSBToRGB(double a1, double a2, double a3, double *a4, double *a5, double *a6)
{
  double v6;
  BOOL v7;
  double v8;
  uint64_t v9;
  double v10;
  double result;
  double v12;
  double v13;

  v6 = a1 * 6.0;
  v7 = a1 == 1.0;
  v8 = 0.0;
  if (!v7)
    v8 = v6;
  v9 = (uint64_t)v8;
  v10 = v8 - (double)(uint64_t)v8;
  result = (1.0 - a2) * a3;
  v12 = (1.0 - a2 * v10) * a3;
  v13 = (1.0 - a2 * (1.0 - v10)) * a3;
  switch(v9)
  {
    case 0:
      if (a4)
        *a4 = a3;
      if (!a5)
        goto LABEL_29;
      *a5 = v13;
      if (a6)
        goto LABEL_30;
      return result;
    case 1:
      if (a4)
        *a4 = v12;
      if (!a5)
        goto LABEL_29;
      *a5 = a3;
      if (a6)
        goto LABEL_30;
      return result;
    case 2:
      if (a4)
        *a4 = result;
      if (a5)
        *a5 = a3;
      result = v13;
      if (a6)
        goto LABEL_30;
      return result;
    case 3:
      if (a4)
        *a4 = result;
      if (a5)
        *a5 = v12;
      goto LABEL_28;
    case 4:
      if (a4)
        *a4 = v13;
      if (a5)
        *a5 = result;
LABEL_28:
      result = a3;
LABEL_29:
      if (a6)
        goto LABEL_30;
      return result;
    case 5:
      if (a4)
        *a4 = a3;
      if (a5)
        *a5 = result;
      result = v12;
      if (!a6)
        return result;
LABEL_30:
      *a6 = result;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t JCColor::ColorModel(CGColorRef *this)
{
  CGColorSpace *ColorSpace;

  ColorSpace = CGColorGetColorSpace(*this);
  return CGColorSpaceGetModel(ColorSpace);
}

CGFloat JCColor::AlphaComponent(CGColorRef *this)
{
  return CGColorGetAlpha(*this);
}

CGFloat JCColor::WhiteComponent(CGColorRef *this)
{
  CGColorSpace *ColorSpace;
  CGFloat result;
  CGColorSpace *v4;
  CGColorSpaceModel Model;
  double v6;
  double v7;
  double v8;

  ColorSpace = CGColorGetColorSpace(*this);
  if (CGColorSpaceGetModel(ColorSpace) == kCGColorSpaceModelRGB)
  {
    v7 = 0.0;
    v8 = 0.0;
    v6 = 0.0;
    JCColor::GetRGB((JCColor *)this, &v8, &v7, &v6);
    return v7 * 0.589999974 + v8 * 0.300000012 + v6 * 0.109999999;
  }
  else
  {
    v4 = CGColorGetColorSpace(*this);
    Model = CGColorSpaceGetModel(v4);
    result = 0.0;
    if (Model == kCGColorSpaceModelMonochrome)
      return *CGColorGetComponents(*this);
  }
  return result;
}

void JCColor::GetRGB(CGColorRef *this, double *a2, double *a3, double *a4)
{
  CGColor *v8;
  CGColorSpace *ColorSpace;
  CGColorSpace *v10;
  const CGFloat *Components;
  double v12;

  v8 = *this;
  ColorSpace = CGColorGetColorSpace(*this);
  if (CGColorSpaceGetModel(ColorSpace))
  {
    v10 = CGColorGetColorSpace(*this);
    if (CGColorSpaceGetModel(v10) == kCGColorSpaceModelRGB)
    {
      Components = CGColorGetComponents(v8);
      if (a2)
        *a2 = *Components;
      if (a3)
        *a3 = Components[1];
      if (a4)
      {
        v12 = Components[2];
LABEL_14:
        *a4 = v12;
      }
    }
  }
  else
  {
    v12 = JCColor::WhiteComponent(this);
    if (a2)
      *a2 = v12;
    if (a3)
      *a3 = v12;
    if (a4)
      goto LABEL_14;
  }
}

double _RGBToWhite(double a1, double a2, double a3)
{
  return a2 * 0.589999974 + a1 * 0.300000012 + a3 * 0.109999999;
}

double JCColor::RedComponent(CGColorRef *this)
{
  double v2;

  v2 = 0.0;
  JCColor::GetRGB(this, &v2, 0, 0);
  return v2;
}

double JCColor::GreenComponent(CGColorRef *this)
{
  double v2;

  v2 = 0.0;
  JCColor::GetRGB(this, 0, &v2, 0);
  return v2;
}

double JCColor::BlueComponent(CGColorRef *this)
{
  double v2;

  v2 = 0.0;
  JCColor::GetRGB(this, 0, 0, &v2);
  return v2;
}

double *JCColor::GetHSB(CGColorRef *this, double *a2, double *a3, double *a4)
{
  double v8;
  double v9;
  double v10;

  v9 = 0.0;
  v10 = 0.0;
  v8 = 0.0;
  JCColor::GetRGB(this, &v10, &v9, &v8);
  return _RGBToHSB(v10, v9, v8, a2, a3, a4);
}

double *_RGBToHSB(double a1, double a2, double a3, double *result, double *a5, double *a6)
{
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  BOOL v15;
  double v16;

  if (a1 < a2 || a1 < a3)
  {
    if (a2 < a1 || a2 < a3)
    {
      if (a2 >= a1)
        v8 = a1;
      else
        v8 = a2;
      v9 = a3;
    }
    else
    {
      if (a1 >= a3)
        v8 = a3;
      else
        v8 = a1;
      v9 = a2;
    }
  }
  else
  {
    if (a2 >= a3)
      v8 = a3;
    else
      v8 = a2;
    v9 = a1;
  }
  v10 = 0.0;
  if (v9 <= 0.0)
  {
    v12 = 0.0;
  }
  else
  {
    v11 = v9 - v8;
    v12 = (v9 - v8) / v9;
    if (v12 != 0.0)
    {
      v13 = (v9 - a2) / v11;
      v14 = (v9 - a3) / v11;
      if (v9 == a1)
      {
        if (v8 == a2)
          v10 = v14 + 5.0;
        else
          v10 = 1.0 - v13;
      }
      else
      {
        v15 = v9 == a2;
        v16 = (v9 - a1) / v11;
        if (v15)
        {
          if (v8 == a3)
            v10 = v16 + 1.0;
          else
            v10 = 3.0 - v14;
        }
        else if (v8 == a1)
        {
          v10 = v13 + 3.0;
        }
        else
        {
          v10 = 5.0 - v16;
        }
      }
    }
  }
  if (result)
    *result = v10 / 6.0;
  if (a5)
    *a5 = v12;
  if (a6)
    *a6 = v9;
  return result;
}

double JCColor::HueComponent(CGColorRef *this)
{
  double v2;

  v2 = 0.0;
  JCColor::GetHSB(this, &v2, 0, 0);
  return v2;
}

double JCColor::SaturationComponent(CGColorRef *this)
{
  double v2;

  v2 = 0.0;
  JCColor::GetHSB(this, 0, &v2, 0);
  return v2;
}

double JCColor::BrightnessComponent(CGColorRef *this)
{
  double v2;

  v2 = 0.0;
  JCColor::GetHSB(this, 0, 0, &v2);
  return v2;
}

CGFloat JCColor::GetLAB(JCColor *this, double *a2, double *a3, double *a4)
{
  CGColor *v7;
  CGColorSpace *ColorSpace;
  CGFloat result;
  const CGFloat *Components;

  v7 = JCColor::LABColor(this);
  ColorSpace = CGColorGetColorSpace(v7);
  if (CGColorSpaceGetModel(ColorSpace) == kCGColorSpaceModelLab)
  {
    Components = CGColorGetComponents(v7);
    if (a2)
    {
      result = *Components / 100.0;
      *a2 = result;
    }
    if (a3)
    {
      result = Components[1] / 100.0;
      *a3 = result;
    }
    if (a4)
    {
      result = Components[2] / 100.0;
      *a4 = result;
    }
  }
  return result;
}

CGColorRef JCColor::LABColor(JCColor *this)
{
  CGColorRef result;
  double v3;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  CGColorSpace *LABColorSpace;
  double v11;
  double v12;
  double v13;
  CGFloat components[5];

  components[4] = *(CGFloat *)MEMORY[0x1E0C80C00];
  result = (CGColorRef)*((_QWORD *)this + 1);
  if (!result)
  {
    if (*(_QWORD *)this)
    {
      v12 = 0.0;
      v13 = 0.0;
      v11 = 0.0;
      JCColor::GetXYZ((CGColorRef *)this, &v13, &v12, &v11);
      v3 = v11;
      v4 = v13 / 95.0469971;
      v5 = v12 / 100.0;
      if (v13 / 95.0469971 <= 0.00885600038)
        v6 = v4 * 7.78700018 + 0.137931034;
      else
        v6 = pow(v4, 0.333333343);
      v7 = v3 / 108.883003;
      if (v5 <= 0.00885600038)
        v8 = v5 * 7.78700018 + 0.137931034;
      else
        v8 = pow(v5, 0.333333343);
      if (v7 <= 0.00885600038)
        v9 = v7 * 7.78700018 + 0.137931034;
      else
        v9 = pow(v7, 0.333333343);
      components[0] = v8 * 116.0 + -16.0;
      components[1] = (v6 - v8) * 500.0;
      components[2] = (v8 - v9) * 200.0;
      components[3] = CGColorGetAlpha(*(CGColorRef *)this);
      LABColorSpace = GetLABColorSpace();
      result = CGColorCreate(LABColorSpace, components);
      *((_QWORD *)this + 1) = result;
    }
    else
    {
      return 0;
    }
  }
  return result;
}

double JCColor::LightnessComponent(JCColor *this)
{
  double v2;

  v2 = 0.0;
  JCColor::GetLAB(this, &v2, 0, 0);
  return v2;
}

double JCColor::AComponent(JCColor *this)
{
  double v2;

  v2 = 0.0;
  JCColor::GetLAB(this, 0, &v2, 0);
  return v2;
}

double JCColor::BComponent(JCColor *this)
{
  double v2;

  v2 = 0.0;
  JCColor::GetLAB(this, 0, 0, &v2);
  return v2;
}

uint64_t JCColor::BlackColor(JCColor *this)
{
  if (JCColor::BlackColor(void)::onceToken != -1)
    dispatch_once(&JCColor::BlackColor(void)::onceToken, &__block_literal_global);
  return JCColor::BlackColor(void)::blackColor;
}

void ___ZN7JCColor10BlackColorEv_block_invoke()
{
  JCColor *v0;

  v0 = (JCColor *)operator new();
  JCColor::JCColor(v0, 0.0, 1.0);
  JCColor::BlackColor(void)::blackColor = (uint64_t)v0;
}

void sub_1DD2B0558(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1DF0D7BB4](v1, 0x20C40A4A59CD2);
  _Unwind_Resume(a1);
}

uint64_t JCColor::WhiteColor(JCColor *this)
{
  if (JCColor::WhiteColor(void)::onceToken != -1)
    dispatch_once(&JCColor::WhiteColor(void)::onceToken, &__block_literal_global_2);
  return JCColor::WhiteColor(void)::whiteColor;
}

void ___ZN7JCColor10WhiteColorEv_block_invoke()
{
  JCColor *v0;

  v0 = (JCColor *)operator new();
  JCColor::JCColor(v0, 1.0, 1.0);
  JCColor::WhiteColor(void)::whiteColor = (uint64_t)v0;
}

void sub_1DD2B0604(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1DF0D7BB4](v1, 0x20C40A4A59CD2);
  _Unwind_Resume(a1);
}

void JCColor::GetXYZ(CGColorRef *this, double *a2, double *a3, double *a4)
{
  double v7;
  double v8;
  double v9;

  v8 = 0.0;
  v9 = 0.0;
  v7 = 0.0;
  JCColor::GetRGB(this, &v9, &v8, &v7);
  _RGBToXYZ(v9, v8, v7, a2, a3, a4);
}

void _XYZToLab(double a1, double a2, double a3, double *a4, double *a5, double *a6)
{
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;

  v10 = a1 / 95.0469971;
  v11 = a2 / 100.0;
  if (v10 <= 0.00885600038)
    v12 = v10 * 7.78700018 + 0.137931034;
  else
    v12 = pow(v10, 0.333333343);
  v13 = a3 / 108.883003;
  if (v11 <= 0.00885600038)
    v14 = v11 * 7.78700018 + 0.137931034;
  else
    v14 = pow(v11, 0.333333343);
  if (v13 <= 0.00885600038)
  {
    v15 = v13 * 7.78700018 + 0.137931034;
    if (!a4)
      goto LABEL_12;
    goto LABEL_11;
  }
  v15 = pow(v13, 0.333333343);
  if (a4)
LABEL_11:
    *a4 = v14 * 116.0 + -16.0;
LABEL_12:
  if (a5)
    *a5 = (v12 - v14) * 500.0;
  if (a6)
    *a6 = (v14 - v15) * 200.0;
}

CGColorSpaceRef GetLABColorSpace(void)
{
  CGColorSpaceRef result;
  _OWORD v1[2];
  CGFloat blackPoint[3];
  CGFloat whitePoint[2];
  uint64_t v4;
  uint64_t v5;

  v5 = *MEMORY[0x1E0C80C00];
  result = (CGColorSpaceRef)_labSpace;
  if (!_labSpace)
  {
    *(_OWORD *)whitePoint = xmmword_1DD2FB3E0;
    v4 = 0x3FF16BD900000000;
    memset(blackPoint, 0, sizeof(blackPoint));
    v1[0] = xmmword_1DD2FB3F8;
    v1[1] = unk_1DD2FB408;
    result = CGColorSpaceCreateLab(whitePoint, blackPoint, (const CGFloat *)v1);
    _labSpace = (uint64_t)result;
  }
  return result;
}

void _RGBToXYZ(double a1, double a2, double a3, double *a4, double *a5, double *a6)
{
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;

  if (a1 <= 0.0404499993)
    v11 = a1 / 12.9200001;
  else
    v11 = pow((a1 + 0.0549999997) / 1.05499995, 2.4000001);
  if (a2 <= 0.0404499993)
    v12 = a2 / 12.9200001;
  else
    v12 = pow((a2 + 0.0549999997) / 1.05499995, 2.4000001);
  if (a3 <= 0.0404499993)
    v13 = a3 / 12.9200001;
  else
    v13 = pow((a3 + 0.0549999997) / 1.05499995, 2.4000001);
  v14 = v11 * 100.0;
  v15 = v12 * 100.0;
  v16 = v13 * 100.0;
  if (a4)
    *a4 = v15 * 0.357600003 + v14 * 0.412400007 + v16 * 0.180500001;
  if (a5)
    *a5 = v15 * 0.715200007 + v14 * 0.212599993 + v16 * 0.0722000003;
  if (a6)
    *a6 = v15 * 0.119199999 + v14 * 0.0193000007 + v16 * 0.950500011;
}

double JCColor::Luminance(CGColorRef *this)
{
  uint64_t i;
  double v2;
  double v3;
  double v5;
  double v6;
  double v7[2];

  v7[1] = *(double *)MEMORY[0x1E0C80C00];
  v5 = 0.0;
  v6 = 0.0;
  v7[0] = 0.0;
  JCColor::GetRGB(this, &v5, &v6, v7);
  for (i = 0; i != 24; i += 8)
  {
    v2 = *(double *)((char *)&v5 + i);
    if (v2 <= 0.0392800011)
      v3 = v2 / 12.9200001;
    else
      v3 = pow((v2 + 0.0549999997) / 1.05499995, 2.4000001);
    *(double *)((char *)&v5 + i) = v3;
  }
  return v6 * 0.715200007 + v5 * 0.212599993 + v7[0] * 0.0722000003;
}

BOOL JCColor::IsCloseToColor(CGColorRef *this, JCColor *a2)
{
  CGColorSpace *ColorSpace;
  CGColorSpace *v5;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;

  ColorSpace = CGColorGetColorSpace(*this);
  if (CGColorSpaceGetModel(ColorSpace) || (v5 = CGColorGetColorSpace(*(CGColorRef *)a2), CGColorSpaceGetModel(v5)))
  {
    v14 = 0.0;
    v15 = 0.0;
    v13 = 0.0;
    JCColor::GetLAB((JCColor *)this, &v15, &v14, &v13);
    v11 = 0.0;
    v12 = 0.0;
    v10 = 0.0;
    JCColor::GetLAB(a2, &v12, &v11, &v10);
    if (vabdd_f64(v15, v12) > 0.2)
      return 0;
    if (v15 < 0.200000003 && v12 < 0.200000003)
      return 1;
    v7 = sqrt((v15 - v12) * (v15 - v12) + (v14 - v11) * 0.5 * ((v14 - v11) * 0.5) + (v13 - v10)
                                                                                  * 0.5
                                                                                  * ((v13 - v10)
                                                                                   * 0.5));
    v8 = 0.09;
  }
  else
  {
    v9 = JCColor::WhiteComponent(this);
    v7 = vabdd_f64(v9, JCColor::WhiteComponent((CGColorRef *)a2));
    v8 = 0.2;
  }
  return v7 < v8;
}

BOOL JCColor::IsReallyCloseToColor(CGColorRef *this, JCColor *a2)
{
  CGColorSpace *ColorSpace;
  CGColorSpace *v5;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;

  ColorSpace = CGColorGetColorSpace(*this);
  if (CGColorSpaceGetModel(ColorSpace) || (v5 = CGColorGetColorSpace(*(CGColorRef *)a2), CGColorSpaceGetModel(v5)))
  {
    v14 = 0.0;
    v15 = 0.0;
    v13 = 0.0;
    JCColor::GetLAB((JCColor *)this, &v15, &v14, &v13);
    v11 = 0.0;
    v12 = 0.0;
    v10 = 0.0;
    JCColor::GetLAB(a2, &v12, &v11, &v10);
    if (vabdd_f64(v15, v12) > 0.1)
      return 0;
    if (v15 < 0.200000003 && v12 < 0.200000003)
      return 1;
    v7 = sqrt((v15 - v12) * (v15 - v12) + (v14 - v11) * 0.5 * ((v14 - v11) * 0.5) + (v13 - v10)
                                                                                  * 0.5
                                                                                  * ((v13 - v10)
                                                                                   * 0.5));
    v8 = 0.05;
  }
  else
  {
    v9 = JCColor::WhiteComponent(this);
    v7 = vabdd_f64(v9, JCColor::WhiteComponent((CGColorRef *)a2));
    v8 = 0.2;
  }
  return v7 < v8;
}

double JCColor::GetContrastWithColorLuminanceMethod(CGColorRef *this, CGColorRef *a2)
{
  double v3;
  double v4;
  double v5;

  v3 = JCColor::Luminance(this);
  v4 = JCColor::Luminance(a2);
  if (v3 <= v4)
    v5 = v4;
  else
    v5 = v3;
  if (v3 <= v4)
    v4 = v3;
  return (v5 + 0.0500000007) / (v4 + 0.0500000007);
}

BOOL JCColor::ContrastsWithColor(CGColorRef *this, CGColorRef *a2)
{
  const __CFNumber *v4;
  const __CFNumber *v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double valuePtr;

  v4 = (const __CFNumber *)CFPreferencesCopyAppValue(CFSTR("TextColorContrast"), (CFStringRef)*MEMORY[0x1E0C9B248]);
  if (v4)
  {
    v5 = v4;
    valuePtr = 0.0;
    if (CFNumberGetValue(v4, kCFNumberCGFloatType, &valuePtr))
      v6 = valuePtr;
    else
      v6 = 4.19999981;
    CFRelease(v5);
  }
  else
  {
    v6 = 4.19999981;
  }
  v7 = JCColor::Luminance(this);
  v8 = JCColor::Luminance(a2);
  if (v7 <= v8)
    v9 = v8;
  else
    v9 = v7;
  if (v7 <= v8)
    v8 = v7;
  return (v9 + 0.0500000007) / (v8 + 0.0500000007) > v6;
}

BOOL JCColor::ContrastsEnoughWithColor(CGColorRef *this, CGColorRef *a2)
{
  const __CFNumber *v4;
  const __CFNumber *v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double valuePtr;

  v4 = (const __CFNumber *)CFPreferencesCopyAppValue(CFSTR("SecondaryTextColorContrast"), (CFStringRef)*MEMORY[0x1E0C9B248]);
  if (v4)
  {
    v5 = v4;
    valuePtr = 0.0;
    if (CFNumberGetValue(v4, kCFNumberCGFloatType, &valuePtr))
      v6 = valuePtr;
    else
      v6 = 2.20000005;
    CFRelease(v5);
  }
  else
  {
    v6 = 2.20000005;
  }
  v7 = JCColor::Luminance(this);
  v8 = JCColor::Luminance(a2);
  if (v7 <= v8)
    v9 = v8;
  else
    v9 = v7;
  if (v7 <= v8)
    v8 = v7;
  return (v9 + 0.0500000007) / (v8 + 0.0500000007) > v6;
}

BOOL JCColor::IsSaturated(CGColorRef *this)
{
  double v2;
  double v3;

  v2 = 0.0;
  v3 = 0.0;
  JCColor::GetHSB(this, 0, &v3, &v2);
  return v2 > 0.449999988 && v3 > 0.800000012;
}

void JCColor::CreateBlendedColorWithFraction(CGColorRef *this@<X0>, double a2@<D0>, CGColorRef *a3@<X1>, JCColor *a4@<X8>)
{
  CGColorRef *v4;
  CGFloat v8;
  CGFloat v9;
  CGFloat v10;
  double Alpha;
  CGFloat v12;
  JCColor *v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;

  v4 = a3;
  if (a2 >= 1.0)
  {
    v13 = a4;
  }
  else
  {
    if (a2 > 0.0)
    {
      v18 = 0.0;
      v19 = 0.0;
      v17 = 0.0;
      JCColor::GetRGB(a3, &v19, &v18, &v17);
      v15 = 0.0;
      v16 = 0.0;
      v14 = 0.0;
      JCColor::GetRGB(this, &v16, &v15, &v14);
      v8 = (1.0 - a2) * v16 + v19 * a2;
      v9 = (1.0 - a2) * v15 + v18 * a2;
      v10 = (1.0 - a2) * v14 + v17 * a2;
      Alpha = CGColorGetAlpha(*v4);
      v12 = CGColorGetAlpha(*this);
      JCColor::JCColor(a4, v8, v9, v10, (1.0 - a2) * v12 + Alpha * a2);
      return;
    }
    v13 = a4;
    a3 = this;
  }
  JCColor::JCColor(v13, a3);
}

CGColorRef *JCColor::LightenColorByPercent(CGColorRef *this, double a2)
{
  CGColorRef *v3;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  CGFloat Alpha;
  CGColorSpace *DeviceRGB;
  CGFloat v15;
  CGFloat v16;
  CGFloat v17;
  double v18;
  double v19;
  double v20;
  CGFloat components[5];

  components[4] = *(CGFloat *)MEMORY[0x1E0C80C00];
  if (a2 != 0.0)
  {
    v3 = this;
    v19 = 0.0;
    v20 = 0.0;
    v18 = 0.0;
    JCColor::GetXYZ(this, &v20, &v19, &v18);
    v4 = v18;
    v5 = v20 / 95.0469971;
    v6 = v19 / 100.0;
    if (v20 / 95.0469971 <= 0.00885600038)
      v7 = v5 * 7.78700018 + 0.137931034;
    else
      v7 = pow(v5, 0.333333343);
    v8 = v4 / 108.883003;
    if (v6 <= 0.00885600038)
      v9 = v6 * 7.78700018 + 0.137931034;
    else
      v9 = pow(v6, 0.333333343);
    if (v8 <= 0.00885600038)
      v10 = v8 * 7.78700018 + 0.137931034;
    else
      v10 = pow(v8, 0.333333343);
    v11 = (v9 - v10) * 200.0;
    v12 = (a2 + 1.0) * (v9 * 116.0 + -16.0);
    if (v12 > 100.0)
      v12 = 100.0;
    if (v12 < 0.0)
      v12 = 0.0;
    _LabToXYZ(v12, (v7 - v9) * 500.0, v11, &v20, &v19, &v18);
    v16 = 0.0;
    v17 = 0.0;
    v15 = 0.0;
    _XYZToRGB(v20, v19, v18, &v17, &v16, &v15);
    Alpha = CGColorGetAlpha(*v3);
    CGColorRelease(*v3);
    *v3 = 0;
    CGColorRelease(v3[1]);
    v3[1] = 0;
    components[0] = v17;
    components[1] = v16;
    components[2] = v15;
    components[3] = Alpha;
    DeviceRGB = (CGColorSpace *)_rgbSpace;
    if (!_rgbSpace)
    {
      DeviceRGB = CGColorSpaceCreateDeviceRGB();
      _rgbSpace = (uint64_t)DeviceRGB;
    }
    this = (CGColorRef *)CGColorCreate(DeviceRGB, components);
    *v3 = (CGColorRef)this;
  }
  return this;
}

void _LabToXYZ(double a1, double a2, double a3, double *a4, double *a5, double *a6)
{
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;

  v9 = (a1 + 16.0) / 116.0;
  v10 = a2 / 500.0 + v9;
  v11 = a3 / -200.0;
  v12 = pow(v9, 3.0);
  if (v12 <= 0.00885600038)
    v12 = (v9 + -0.137931034) / 7.78700018;
  v13 = v9 + v11;
  v14 = pow(v10, 3.0);
  if (v14 <= 0.00885600038)
    v14 = (v10 + -0.137931034) / 7.78700018;
  v15 = pow(v13, 3.0);
  if (v15 <= 0.00885600038)
    v15 = (v13 + -0.137931034) / 7.78700018;
  if (a4)
    *a4 = v14 * 95.0469971;
  if (a5)
    *a5 = v12 * 100.0;
  if (a6)
    *a6 = v15 * 108.883003;
}

void _XYZToRGB(double a1, double a2, double a3, double *a4, double *a5, double *a6)
{
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;

  v9 = a1 / 100.0;
  v10 = a2 / 100.0;
  v11 = a3 / 100.0;
  v12 = v10 * -1.53719997 + a1 / 100.0 * 3.24060011 + a3 / 100.0 * -0.498600006;
  v13 = v10 * 1.87580001 + v9 * -0.968900025 + a3 / 100.0 * 0.0414999984;
  v14 = v10 * -0.203999996 + v9 * 0.0557000004;
  if (v12 <= 0.00313080009)
    v15 = v12 * 12.9200001;
  else
    v15 = pow(v12, 0.416666657) * 1.05499995 + -0.0549999997;
  v16 = v14 + v11 * 1.05700004;
  if (v13 <= 0.00313080009)
    v17 = v13 * 12.9200001;
  else
    v17 = pow(v13, 0.416666657) * 1.05499995 + -0.0549999997;
  if (v16 <= 0.00313080009)
  {
    v18 = v16 * 12.9200001;
    if (!a4)
      goto LABEL_12;
    goto LABEL_11;
  }
  v18 = pow(v16, 0.416666657) * 1.05499995 + -0.0549999997;
  if (a4)
LABEL_11:
    *a4 = v15;
LABEL_12:
  if (a5)
    *a5 = v17;
  if (a6)
    *a6 = v18;
}

CGColorRef *JCColor::EnsureContrastWithColor(CGColorRef *this, CGColorRef *a2)
{
  CGColorRef *result;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;

  result = (CGColorRef *)JCColor::ContrastsWithColor(this, a2);
  if ((result & 1) == 0)
  {
    v5 = JCColor::Luminance(this);
    v6 = JCColor::Luminance(a2);
    v7 = JCColor::Luminance(this);
    v8 = JCColor::Luminance(a2);
    if (v7 <= v8)
      v9 = v8;
    else
      v9 = v7;
    if (v7 <= v8)
      v8 = v7;
    v10 = (v9 + 0.0500000007) / (v8 + 0.0500000007) + (4.19999981 - (v9 + 0.0500000007) / (v8 + 0.0500000007)) * 0.5;
    v11 = v6 + 0.0500000007;
    if (v5 <= v6)
      v12 = v11 / v10 + -0.0500000007;
    else
      v12 = v10 * v11 + -0.0500000007;
    return JCColor::LightenColorByPercent(this, (v12 - v5) / v5);
  }
  return result;
}

uint64_t CGColorSpaceGetSRGB(void)
{
  uint64_t result;
  CGDataProvider *v1;

  result = CGColorSpaceGetSRGB(void)::space;
  if (!CGColorSpaceGetSRGB(void)::space)
  {
    v1 = CGDataProviderCreateWithData(0, &CGColorSpaceGetSRGB(void)::kSRGBProfile, 0xC48uLL, 0);
    CGColorSpaceGetSRGB(void)::space = (uint64_t)CGColorSpaceCreateICCBased(3uLL, 0, v1, 0);
    CGDataProviderRelease(v1);
    return CGColorSpaceGetSRGB(void)::space;
  }
  return result;
}

void sub_1DD2B19A0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  uint64_t v3;

  MEMORY[0x1DF0D7BB4](v3, 0x1020C40CC7EA6EELL);

  _Unwind_Resume(a1);
}

void sub_1DD2B1BF0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_1DD2B1CD4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  JCColor::~JCColor((JCColor *)&a9);
  _Unwind_Resume(a1);
}

void sub_1DD2B1DA8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *a16)
{
  void *v16;
  void *v17;

  _Unwind_Resume(a1);
}

void sub_1DD2B1E20(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1DD2B1EB4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11)
{
  void *v11;

  JCColor::~JCColor((JCColor *)&a9);
  JCColor::~JCColor((JCColor *)&a11);

  _Unwind_Resume(a1);
}

void sub_1DD2B1FAC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, char a13)
{
  void *v13;
  void *v14;

  JCColor::~JCColor((JCColor *)&a9);
  JCColor::~JCColor((JCColor *)&a11);
  JCColor::~JCColor((JCColor *)&a13);

  _Unwind_Resume(a1);
}

void sub_1DD2B20A8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_1DD2B21A8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

double CreateHSVColorFromInts(unsigned int a1)
{
  return (double)a1 / 359.0;
}

BOOL ColorIsGrayscale(uint64_t a1)
{
  double v1;
  double v3;
  double v4;

  v1 = *(double *)(a1 + 8);
  if (v1 < 0.0399999991)
    return 1;
  v3 = 1.0;
  if (v1 <= 1.0)
    v3 = *(double *)(a1 + 8);
  if (v1 >= 0.0)
    v4 = v3;
  else
    v4 = 0.0;
  return v4 * 0.100000001 + 0.0 + *(double *)(a1 + 16) < 0.200000003;
}

void JCImageAnalyzer::JCImageAnalyzer(JCImageAnalyzer *this)
{
  CGColorRef v2[2];

  JCColor::JCColor((JCImageAnalyzer *)((char *)this + 24), 0);
  JCColor::JCColor((JCImageAnalyzer *)((char *)this + 40), 0);
  JCColor::JCColor((JCImageAnalyzer *)((char *)this + 56), 0);
  JCColor::JCColor((JCImageAnalyzer *)((char *)this + 72), 0);
  JCColor::JCColor((JCImageAnalyzer *)((char *)this + 88), 0);
  JCColor::JCColor((JCImageAnalyzer *)((char *)this + 104));
  JCColor::JCColor((JCImageAnalyzer *)((char *)this + 120));
  *((_OWORD *)this + 449) = 0u;
  *((_OWORD *)this + 448) = 0u;
  *((_OWORD *)this + 447) = 0u;
  JCColor::JCColor((JCColor *)v2, 0);
  JCColor::operator=((CGColorRef *)this + 5, v2);
  JCColor::~JCColor((JCColor *)v2);
  *(_QWORD *)this = 0;
  bzero((char *)this + 136, 0x1340uLL);
  *((_OWORD *)this + 450) = 0u;
}

void sub_1DD2B2358(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9)
{
  JCColor *v9;
  JCColor *v10;
  JCColor *v11;
  JCColor *v12;
  uint64_t v13;
  JCColor *v14;
  JCColor *v15;
  JCColor *v16;

  JCColor::~JCColor((JCColor *)&a9);
  a9 = v13 + 7176;
  std::vector<sortColorEntry>::__destroy_vector::operator()[abi:ne180100]((void ***)&a9);
  a9 = v13 + 7152;
  std::vector<JCColor>::__destroy_vector::operator()[abi:ne180100]((void ***)&a9);
  JCColor::~JCColor(v16);
  JCColor::~JCColor(v15);
  JCColor::~JCColor(v14);
  JCColor::~JCColor(v12);
  JCColor::~JCColor(v11);
  JCColor::~JCColor(v10);
  JCColor::~JCColor(v9);
  _Unwind_Resume(a1);
}

void sub_1DD2B23EC()
{
  JUMPOUT(0x1DD2B23CCLL);
}

void sub_1DD2B23F4()
{
  JUMPOUT(0x1DD2B23D4);
}

void sub_1DD2B23FC()
{
  JUMPOUT(0x1DD2B23DCLL);
}

void JCImageAnalyzer::ClearMainHistograms(JCImageAnalyzer *this)
{
  bzero((char *)this + 136, 0x1340uLL);
}

void JCImageAnalyzer::~JCImageAnalyzer(void **this)
{
  void *v2;
  void **v3;

  v2 = *this;
  if (v2)
  {
    free(v2);
    *this = 0;
  }
  v3 = this + 897;
  std::vector<sortColorEntry>::__destroy_vector::operator()[abi:ne180100](&v3);
  v3 = this + 894;
  std::vector<JCColor>::__destroy_vector::operator()[abi:ne180100](&v3);
  JCColor::~JCColor((JCColor *)(this + 15));
  JCColor::~JCColor((JCColor *)(this + 13));
  JCColor::~JCColor((JCColor *)(this + 11));
  JCColor::~JCColor((JCColor *)(this + 9));
  JCColor::~JCColor((JCColor *)(this + 7));
  JCColor::~JCColor((JCColor *)(this + 5));
  JCColor::~JCColor((JCColor *)(this + 3));
}

void JCImageAnalyzer::ClearSaturationAndBrightnessHistograms(JCImageAnalyzer *this)
{
  bzero((char *)this + 5064, 0x800uLL);
}

double JCImageAnalyzer::GetBorderMarginInPercentage(JCImageAnalyzer *this)
{
  return *((double *)this + 901);
}

double JCImageAnalyzer::GetBorderMarginInPixels(JCImageAnalyzer *this)
{
  double v1;

  v1 = *((double *)this + 2);
  if (v1 <= *((double *)this + 1))
    v1 = *((double *)this + 1);
  return ceil(v1 * *((double *)this + 901));
}

uint64_t JCImageAnalyzer::GetPrefValue(JCImageAnalyzer *this, CFStringRef key, unsigned __int8 *a3)
{
  const __CFNumber *v4;
  const __CFNumber *v5;
  CFTypeID v6;
  unsigned __int8 v7;
  double v9;
  unsigned int valuePtr;

  valuePtr = 0;
  v4 = (const __CFNumber *)CFPreferencesCopyAppValue(key, (CFStringRef)*MEMORY[0x1E0C9B248]);
  if (!v4)
  {
    v7 = 0;
    if (!a3)
      return valuePtr;
    goto LABEL_11;
  }
  v5 = v4;
  v6 = CFGetTypeID(v4);
  if (v6 == CFNumberGetTypeID())
  {
    v9 = 0.0;
    if (CFNumberGetValue(v5, kCFNumberIntType, &valuePtr))
    {
LABEL_6:
      v7 = 1;
      goto LABEL_10;
    }
    if (CFNumberGetValue(v5, kCFNumberCGFloatType, &v9))
    {
      valuePtr = v9;
      goto LABEL_6;
    }
  }
  v7 = 0;
LABEL_10:
  CFRelease(v5);
  if (a3)
LABEL_11:
    *a3 = v7;
  return valuePtr;
}

uint64_t JCImageAnalyzer::Reset(JCImageAnalyzer *this)
{
  CGColorRef v2;
  JCImageAnalyzer *v3;
  JCImageAnalyzer *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  JCImageAnalyzer *PrefValue;
  int v9;
  JCImageAnalyzer *v10;
  int v11;
  JCImageAnalyzer *v12;
  int v13;
  JCImageAnalyzer *v14;
  int v15;
  JCImageAnalyzer *v16;
  int v17;
  JCImageAnalyzer *v18;
  int v19;
  JCImageAnalyzer *v20;
  int v21;
  JCImageAnalyzer *v22;
  int v23;
  uint64_t result;
  int v25;
  CGColorRef v26[2];

  v2 = *(CGColorRef *)this;
  if (v2)
  {
    free(v2);
    *(_QWORD *)this = 0;
  }
  *(_OWORD *)((char *)this + 8) = *MEMORY[0x1E0C9D820];
  JCColor::JCColor((JCColor *)v26, 0);
  JCColor::operator=((CGColorRef *)this + 3, v26);
  JCColor::~JCColor((JCColor *)v26);
  JCColor::JCColor((JCColor *)v26, 0);
  JCColor::operator=((CGColorRef *)this + 5, v26);
  JCColor::~JCColor((JCColor *)v26);
  JCColor::JCColor((JCColor *)v26, 0);
  JCColor::operator=((CGColorRef *)this + 7, v26);
  JCColor::~JCColor((JCColor *)v26);
  JCColor::JCColor((JCColor *)v26, 0);
  JCColor::operator=((CGColorRef *)this + 9, v26);
  JCColor::~JCColor((JCColor *)v26);
  JCColor::JCColor((JCColor *)v26, 0);
  JCColor::operator=((CGColorRef *)this + 11, v26);
  JCColor::~JCColor((JCColor *)v26);
  bzero((char *)this + 136, 0x1B40uLL);
  v3 = (JCImageAnalyzer *)*((_QWORD *)this + 895);
  v4 = (JCImageAnalyzer *)*((_QWORD *)this + 894);
  while (v3 != v4)
    JCColor::~JCColor((JCImageAnalyzer *)((char *)v3 - 16));
  *((_QWORD *)this + 895) = v4;
  v5 = *((_QWORD *)this + 898);
  v6 = *((_QWORD *)this + 897);
  if (v5 != v6)
  {
    do
    {
      v7 = v5 - 32;
      JCColor::~JCColor((JCColor *)(v5 - 16));
      v5 = v7;
    }
    while (v7 != v6);
  }
  *((_QWORD *)this + 898) = v6;
  *((_OWORD *)this + 450) = 0u;
  LOBYTE(v26[0]) = 0;
  PrefValue = (JCImageAnalyzer *)JCImageAnalyzer::GetPrefValue(v3, CFSTR("HueSpread"), (unsigned __int8 *)v26);
  if (LOBYTE(v26[0]))
    v9 = (int)PrefValue;
  else
    v9 = 7;
  *((_DWORD *)this + 1778) = v9;
  v10 = (JCImageAnalyzer *)JCImageAnalyzer::GetPrefValue(PrefValue, CFSTR("SaturationSpread"), (unsigned __int8 *)v26);
  if (LOBYTE(v26[0]))
    v11 = (int)v10;
  else
    v11 = 10;
  *((_DWORD *)this + 1779) = v11;
  v12 = (JCImageAnalyzer *)JCImageAnalyzer::GetPrefValue(v10, CFSTR("BrightnessSpread"), (unsigned __int8 *)v26);
  if (LOBYTE(v26[0]))
    v13 = (int)v12;
  else
    v13 = 10;
  *((_DWORD *)this + 1780) = v13;
  v14 = (JCImageAnalyzer *)JCImageAnalyzer::GetPrefValue(v12, CFSTR("GrayscaleSpread"), (unsigned __int8 *)v26);
  if (LOBYTE(v26[0]))
    v15 = (int)v14;
  else
    v15 = 15;
  *((_DWORD *)this + 1781) = v15;
  v16 = (JCImageAnalyzer *)JCImageAnalyzer::GetPrefValue(v14, CFSTR("BackgroundMultiplier-LeftTop"), (unsigned __int8 *)v26);
  if (LOBYTE(v26[0]))
    v17 = (int)v16;
  else
    v17 = 1;
  *((_DWORD *)this + 1782) = v17;
  v18 = (JCImageAnalyzer *)JCImageAnalyzer::GetPrefValue(v16, CFSTR("BackgroundMultiplier-LeftBottom"), (unsigned __int8 *)v26);
  if (LOBYTE(v26[0]))
    v19 = (int)v18;
  else
    v19 = 1;
  *((_DWORD *)this + 1783) = v19;
  v20 = (JCImageAnalyzer *)JCImageAnalyzer::GetPrefValue(v18, CFSTR("BackgroundMultiplier-Top"), (unsigned __int8 *)v26);
  if (LOBYTE(v26[0]))
    v21 = (int)v20;
  else
    v21 = 1;
  *((_DWORD *)this + 1784) = v21;
  v22 = (JCImageAnalyzer *)JCImageAnalyzer::GetPrefValue(v20, CFSTR("BackgroundMultiplier-Bottom"), (unsigned __int8 *)v26);
  if (LOBYTE(v26[0]))
    v23 = (int)v22;
  else
    v23 = 1;
  *((_DWORD *)this + 1785) = v23;
  result = JCImageAnalyzer::GetPrefValue(v22, CFSTR("BackgroundMultiplier-Right"), (unsigned __int8 *)v26);
  if (LOBYTE(v26[0]))
    v25 = result;
  else
    v25 = 1;
  *((_DWORD *)this + 1786) = v25;
  return result;
}

void sub_1DD2B2824(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  JCColor::~JCColor((JCColor *)&a9);
  _Unwind_Resume(a1);
}

uint64_t JCImageAnalyzer::AnalyzeImage(JCImageAnalyzer *this, CGImage *a2)
{
  CGContext *ContextForImage;

  JCImageAnalyzer::Reset(this);
  if (!a2)
    return 0;
  ContextForImage = JCImageAnalyzer::CreateContextForImage((CGFloat *)this, a2);
  JCImageAnalyzer::CreateHSVMap((uint64_t)this, ContextForImage);
  CGContextRelease(ContextForImage);
  if (!*(_QWORD *)this)
    return 0;
  JCImageAnalyzer::CalculateBackgroundColor(this);
  JCImageAnalyzer::PickTextColors((CGColorRef *)this);
  JCImageAnalyzer::DoPostImageAnalysis((CGColorRef *)this);
  return 1;
}

CGContext *JCImageAnalyzer::CreateContextForImage(CGFloat *this, CGImageRef image)
{
  size_t Width;
  size_t Height;
  size_t v6;
  size_t v7;
  CGColorSpace *SRGB;
  JCImageAnalyzer *CopyWithColorSpace;
  CGImage *v10;
  CGImage *v11;
  CGContext *RGBBitmapContext;
  CGContext *v13;
  CGFloat v14;
  CGRect v16;

  Width = CGImageGetWidth(image);
  Height = CGImageGetHeight(image);
  if (Width >= 0x80)
    v6 = 128;
  else
    v6 = Width;
  v7 = vcvtad_u64_f64((double)Width / (double)Height * (double)v6);
  SRGB = (CGColorSpace *)CGColorSpaceGetSRGB();
  CopyWithColorSpace = CGImageCreateCopyWithColorSpace(image, SRGB);
  v10 = CopyWithColorSpace;
  if (CopyWithColorSpace)
    v11 = CopyWithColorSpace;
  else
    v11 = image;
  RGBBitmapContext = JCImageAnalyzer::CreateRGBBitmapContext(CopyWithColorSpace, v11, v7, v6);
  v13 = RGBBitmapContext;
  if (RGBBitmapContext)
  {
    v14 = (double)CGBitmapContextGetWidth(RGBBitmapContext);
    v16.size.height = (double)CGBitmapContextGetHeight(v13);
    this[1] = v14;
    this[2] = v16.size.height;
    v16.origin.x = *(CGFloat *)MEMORY[0x1E0C9D538];
    v16.origin.y = *(CGFloat *)(MEMORY[0x1E0C9D538] + 8);
    v16.size.width = v14;
    CGContextDrawImage(v13, v16, v11);
  }
  CGImageRelease(v10);
  return v13;
}

uint64_t JCImageAnalyzer::CreateHSVMap(uint64_t this, CGContextRef context)
{
  uint64_t v3;
  uint64_t v4;
  __int128 v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  int v9;
  int v10;
  uint64_t v11;
  int v12;
  size_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  size_t BytesPerRow;
  uint64_t v19;
  uint64_t v20;
  unsigned int v21;
  __int128 v22;
  uint64_t v23;

  if (context)
  {
    v3 = this;
    BytesPerRow = CGBitmapContextGetBytesPerRow(context);
    this = (uint64_t)CGBitmapContextGetData(context);
    v17 = this;
    if (this)
    {
      v4 = *(double *)(v3 + 16);
      v21 = *(double *)(v3 + 8);
      this = (uint64_t)malloc_type_calloc(v21 * v4, 0x18uLL, 0x1000040504FFAC1uLL);
      *(_QWORD *)v3 = this;
      if (this)
      {
        this = CGBitmapContextGetBitmapInfo(context);
        v8 = v21;
        if ((_DWORD)v4)
        {
          v9 = 0;
          v20 = 0;
          v10 = this & 0x3000;
          if ((this & 0x3000) != 0)
            v11 = 0;
          else
            v11 = 3;
          v19 = v4;
          do
          {
            if (v8)
            {
              v12 = 0;
              v13 = v17 + BytesPerRow * v20;
              do
              {
                if (v10)
                  v14 = 2;
                else
                  v14 = 1;
                if (v10)
                  v15 = 1;
                else
                  v15 = 2;
                LOBYTE(v5) = *(_BYTE *)(v13 + v11);
                LOBYTE(v6) = *(_BYTE *)(v13 + v15);
                LOBYTE(v7) = *(_BYTE *)(v13 + v14);
                this = (uint64_t)_RGBToHSB((float)((float)v7 / 255.0), (float)((float)v6 / 255.0), (float)((float)v5 / 255.0), (double *)&v22, (double *)&v22 + 1, (double *)&v23);
                v8 = v21;
                v16 = *(_QWORD *)v3 + 24 * (v9 + v12);
                v5 = v22;
                *(_QWORD *)(v16 + 16) = v23;
                *(_OWORD *)v16 = v5;
                v13 += 4;
                ++v12;
              }
              while (v21 != v12);
            }
            v9 += v8;
            ++v20;
          }
          while (v20 != v19);
        }
      }
    }
  }
  return this;
}

void JCImageAnalyzer::CalculateBackgroundColor(JCImageAnalyzer *this)
{
  JCImageAnalyzer *v2;
  JCImageAnalyzer *v3;
  uint64_t v4;
  JCImageAnalyzer *v5;
  unsigned int v6;
  JCImageAnalyzer *v7;
  unsigned int v8;
  JCImageAnalyzer *v9;
  unsigned int v10;
  unsigned int v11;
  JCImageAnalyzer *v12;
  JCImageAnalyzer *v13;
  uint64_t v14;
  JCImageAnalyzer *v15;
  unsigned int v16;
  unsigned int v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  uint64_t i;
  __int128 v24;
  uint64x2_t v25;
  float64x2_t v26;
  float64x2_t v27;
  uint64_t j;
  __int128 v29;
  uint64x2_t v30;
  float64x2_t v31;
  float64x2_t v32;
  unsigned int v33;
  CGColorRef v34[2];
  CGColorRef v35[2];
  _BYTE v36[24];
  JCImageAnalyzer *v37;
  _BYTE v38[24];
  JCImageAnalyzer *v39;
  uint64_t v40;

  v40 = *MEMORY[0x1E0C80C00];
  v2 = (JCImageAnalyzer *)operator new(0x20uLL);
  *(_QWORD *)v2 = &unk_1EA711F28;
  *((_QWORD *)v2 + 1) = JCImageAnalyzer::pixelBlock_GenerateMainHueHistogram;
  *((_QWORD *)v2 + 2) = 0;
  *((_QWORD *)v2 + 3) = this;
  v39 = v2;
  JCImageAnalyzer::IterateOverPixels((uint64_t)this, (uint64_t)v38, 0);
  v3 = v39;
  if (v39 == (JCImageAnalyzer *)v38)
  {
    v4 = 4;
    v3 = (JCImageAnalyzer *)v38;
  }
  else
  {
    if (!v39)
      goto LABEL_6;
    v4 = 5;
  }
  v3 = (JCImageAnalyzer *)(*(uint64_t (**)(void))(*(_QWORD *)v3 + 8 * v4))();
LABEL_6:
  v5 = (JCImageAnalyzer *)JCImageAnalyzer::WeightHistogram(v3, (unsigned int *)this + 650, 0x168u, *((_DWORD *)this + 1778));
  v6 = v5;
  v7 = (JCImageAnalyzer *)JCImageAnalyzer::WeightHistogram(v5, (unsigned int *)this + 1010, 0x100u, *((_DWORD *)this + 1781));
  v8 = v7;
  v9 = (JCImageAnalyzer *)JCImageAnalyzer::WeightHistogram(v7, (unsigned int *)this + 34, 0x168u, *((_DWORD *)this + 1778));
  JCImageAnalyzer::WeightHistogram(v9, (unsigned int *)this + 394, 0x100u, *((_DWORD *)this + 1781));
  v10 = *((_DWORD *)this + v6 + 650);
  v11 = *((_DWORD *)this + v8 + 1010);
  JCColor::JCColor((JCColor *)v35, 0);
  if (v11 > v10)
  {
    JCColor::JCColor((JCColor *)v34, (double)v8 / 255.0, 1.0);
    JCColor::operator=(v35, v34);
    goto LABEL_14;
  }
  bzero((char *)this + 5064, 0x800uLL);
  v37 = 0;
  v12 = (JCImageAnalyzer *)operator new(0x20uLL);
  *(_QWORD *)v12 = &unk_1EA711F28;
  *((_QWORD *)v12 + 1) = JCImageAnalyzer::pixelBlock_GenerateSaturationAndBrightnessHistogramsForHueInBackground;
  *((_QWORD *)v12 + 2) = 0;
  *((_QWORD *)v12 + 3) = this;
  v37 = v12;
  JCImageAnalyzer::IterateOverPixels((uint64_t)this, (uint64_t)v36, v6);
  v13 = v37;
  if (v37 == (JCImageAnalyzer *)v36)
  {
    v14 = 4;
    v13 = (JCImageAnalyzer *)v36;
    goto LABEL_12;
  }
  if (v37)
  {
    v14 = 5;
LABEL_12:
    v13 = (JCImageAnalyzer *)(*(uint64_t (**)(void))(*(_QWORD *)v13 + 8 * v14))();
  }
  v15 = (JCImageAnalyzer *)JCImageAnalyzer::WeightHistogram(v13, (unsigned int *)this + 1266, 0x100u, *((_DWORD *)this + 1779));
  v16 = v15;
  v17 = JCImageAnalyzer::WeightHistogram(v15, (unsigned int *)this + 1522, 0x100u, *((_DWORD *)this + 1780));
  JCColor::JCColor((JCColor *)v34, (double)v6 / 359.0, (double)v16 / 255.0, (double)v17 / 255.0);
  JCColor::operator=(v35, v34);
LABEL_14:
  JCColor::~JCColor((JCColor *)v34);
  v18 = *((double *)this + 1);
  v19 = *((double *)this + 2);
  v20 = v18 / v19;
  v21 = v19 / v18;
  if (v20 >= 1.0)
    v21 = v20;
  if (v21 < 1.20000005)
  {
    v22 = 0.0;
    for (i = 136; i != 1576; i += 16)
    {
      v24 = *(_OWORD *)((char *)this + i);
      v25.i64[0] = DWORD2(v24);
      v25.i64[1] = HIDWORD(v24);
      v26 = vcvtq_f64_u64(v25);
      v25.i64[0] = v24;
      v25.i64[1] = DWORD1(v24);
      v27 = vcvtq_f64_u64(v25);
      v22 = v22 + v27.f64[0] + v27.f64[1] + v26.f64[0] + v26.f64[1];
    }
    for (j = 0; j != 1024; j += 16)
    {
      v29 = *(_OWORD *)((char *)this + j + 1576);
      v30.i64[0] = DWORD2(v29);
      v30.i64[1] = HIDWORD(v29);
      v31 = vcvtq_f64_u64(v30);
      v30.i64[0] = v29;
      v30.i64[1] = DWORD1(v29);
      v32 = vcvtq_f64_u64(v30);
      v22 = v22 + v32.f64[0] + v32.f64[1] + v31.f64[0] + v31.f64[1];
    }
    if (v11 <= v10)
      v33 = v10;
    else
      v33 = v11;
    *((double *)this + 900) = (double)v33 / v22;
  }
  JCImageAnalyzer::ValidateBackgroundColor(this, (JCColor *)v35, (JCColor *)v34);
  JCColor::operator=((CGColorRef *)this + 3, v34);
  JCColor::~JCColor((JCColor *)v34);
  JCColor::~JCColor((JCColor *)v35);
}

void sub_1DD2B2E7C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v3;
  va_list va;
  uint64_t v5;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v3 = va_arg(va1, _QWORD);
  v5 = va_arg(va1, _QWORD);
  JCColor::~JCColor((JCColor *)va);
  JCColor::~JCColor((JCColor *)va1);
  _Unwind_Resume(a1);
}

void JCImageAnalyzer::PickTextColors(CGColorRef *this)
{
  CGColorRef *v2;
  CGColorRef v3[2];

  v2 = this + 3;
  JCImageAnalyzer::GetTextColorForBackgroundColor((JCImageAnalyzer *)this, this + 3, (JCColor *)v3);
  JCColor::operator=(this + 5, v3);
  JCColor::~JCColor((JCColor *)v3);
  JCImageAnalyzer::GetSecondaryTextColorForBackgroundColor((JCImageAnalyzer *)this, v2, (JCColor *)v3);
  JCColor::operator=(this + 7, v3);
  JCColor::~JCColor((JCColor *)v3);
}

void sub_1DD2B2F98(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  JCColor::~JCColor((JCColor *)&a9);
  _Unwind_Resume(a1);
}

void JCImageAnalyzer::DoPostImageAnalysis(CGColorRef *this)
{
  CGColorRef v2[2];

  JCColor::JCColor((JCColor *)v2, (const JCColor *)(this + 5), 0.75);
  JCColor::operator=(this + 9, v2);
  JCColor::~JCColor((JCColor *)v2);
  JCColor::JCColor((JCColor *)v2, (const JCColor *)(this + 7), 0.75);
  JCColor::operator=(this + 11, v2);
  JCColor::~JCColor((JCColor *)v2);
}

void sub_1DD2B301C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  JCColor::~JCColor((JCColor *)&a9);
  _Unwind_Resume(a1);
}

CGContextRef JCImageAnalyzer::CreateRGBBitmapContext(JCImageAnalyzer *this, CGImage *a2, size_t a3, size_t a4)
{
  CGColorSpace *SRGB;

  if (a2 && (SRGB = (CGColorSpace *)CGColorSpaceGetSRGB()) != 0)
    return CGBitmapContextCreate(0, a3, a4, 8uLL, 4 * a3, SRGB, 2u);
  else
    return 0;
}

JCColor *JCImageAnalyzer::CalculateAlternateTextColorForColor@<X0>(JCColor *a1@<X1>, JCColor *a2@<X8>)
{
  return JCColor::JCColor(a2, a1, 0.75);
}

uint64_t JCImageAnalyzer::IterateOverPixels(uint64_t result, uint64_t a2, int a3)
{
  uint64_t v3;
  double v4;
  double v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v11;
  unsigned int v12;
  unsigned int v13;
  unsigned int v14;
  unsigned int v15;

  if (*(_QWORD *)(a2 + 24))
  {
    v3 = result;
    if (*(_QWORD *)result)
    {
      v4 = *(double *)(result + 8);
      v5 = *(double *)(result + 16);
      v6 = v5;
      if (v5 <= v4)
        v5 = *(double *)(result + 8);
      v7 = vcvtpd_u64_f64(*(double *)(result + 7208) * v5);
      v8 = v6 - 2 * v7;
      if (v8 > v7)
      {
        v11 = v4 - 2 * v7;
        v15 = v4 - 3 * v7;
        v12 = v7;
        do
        {
          if (v11 > v7)
          {
            v13 = v15;
            v14 = v7;
            do
            {
              result = std::function<void ()(CGPoint,JCHSVColor &,unsigned int)>::operator()(a2, *(_QWORD *)v3 + 24 * (v14 + v12 * *(double *)(v3 + 8)), a3, (double)v14 - (double)v7, (double)v12 - (double)v7);
              ++v14;
              --v13;
            }
            while (v13);
          }
          ++v12;
        }
        while (v12 != v8);
      }
    }
  }
  return result;
}

uint64_t JCImageAnalyzer::pixelBlock_GenerateMainHueHistogram(JCImageAnalyzer *this, double *a2, double a3, double a4)
{
  double v6;
  unsigned int v7;
  double v8;
  char *v9;
  double v10;
  double v11;
  _DWORD *v12;
  uint64_t result;
  double v14;
  double v15;
  double v16;
  _DWORD *v17;

  v6 = a2[1];
  v7 = vcvtad_u64_f64(*a2 * 359.0);
  v8 = a2[2];
  v9 = (char *)this + 4 * vcvtad_u64_f64(v8 * 255.0);
  if (v6 < 0.0399999991)
    goto LABEL_8;
  v10 = 1.0;
  if (v6 <= 1.0)
    v10 = a2[1];
  v11 = v6 >= 0.0 ? v10 : 0.0;
  if (v8 + v11 * 0.100000001 + 0.0 >= 0.200000003)
    v12 = (_DWORD *)((char *)this + 4 * v7 + 136);
  else
LABEL_8:
    v12 = v9 + 1576;
  ++*v12;
  result = JCImageAnalyzer::MultiplierForPointInBackground(this, *(CGPoint *)&a3);
  if ((_DWORD)result)
  {
    v14 = a2[1];
    if (v14 < 0.0399999991)
      goto LABEL_18;
    v15 = 1.0;
    if (v14 <= 1.0)
      v15 = a2[1];
    v16 = v14 >= 0.0 ? v15 : 0.0;
    if (v16 * 0.100000001 + 0.0 + a2[2] >= 0.200000003)
      v17 = (_DWORD *)((char *)this + 4 * v7 + 2600);
    else
LABEL_18:
      v17 = v9 + 4040;
    *v17 += result;
  }
  return result;
}

uint64_t JCImageAnalyzer::WeightHistogram(JCImageAnalyzer *this, unsigned int *a2, unsigned int a3, int a4)
{
  size_t v7;
  void *v8;
  double v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  unsigned int v13;
  int v14;
  double v15;
  int v16;
  char v17;
  int v18;
  BOOL v19;
  uint64_t v20;
  int v21;

  v7 = 4 * a3;
  v8 = malloc_type_malloc(v7, 0x100004052888210uLL);
  memcpy(v8, a2, v7);
  if (a3)
  {
    v10 = 0;
    v11 = 0;
    LODWORD(v12) = 0;
    do
    {
      v13 = *((_DWORD *)v8 + v10);
      if (a4 < 1)
        goto LABEL_26;
      v14 = 0;
      v15 = (double)v13;
      v16 = 1;
      v17 = 1;
      do
      {
        v18 = v10 + v14 - 1;
        v19 = v18 < 0 && a3 == 360;
        LODWORD(v20) = v10 + v14 + 359;
        if (v19)
          v20 = v20;
        else
          v20 = v18;
        if ((v20 & 0x80000000) == 0)
        {
          LODWORD(v9) = *((_DWORD *)v8 + v20);
          v9 = (double)*(unint64_t *)&v9;
          if (v15 >= v9)
          {
            v9 = ((double)v16 * -0.0500000007 + 1.0) * v9;
            v13 += vcvtad_u64_f64(v9);
            a2[v20] = 0;
          }
          else
          {
            v17 = 0;
          }
        }
        v21 = v10 + v16;
        if ((int)v10 + v16 > 360 && a3 == 360)
          v21 = v10 + v16 - 360;
        if (v21 < (int)a3)
        {
          LODWORD(v9) = *((_DWORD *)v8 + v21);
          v9 = (double)*(unint64_t *)&v9;
          if (v15 >= v9)
          {
            v9 = ((double)v16 * -0.0500000007 + 1.0) * v9;
            v13 += vcvtad_u64_f64(v9);
            a2[v21] = 0;
          }
          else
          {
            v17 = 0;
          }
        }
        ++v16;
        --v14;
      }
      while (-a4 != v14);
      if ((v17 & 1) != 0)
LABEL_26:
        a2[v10] = v13;
      else
        v13 = a2[v10];
      if (v13 <= v11)
        v12 = v12;
      else
        v12 = v10;
      if (v13 > v11)
        v11 = v13;
      ++v10;
    }
    while (v10 != a3);
  }
  else
  {
    v12 = 0;
  }
  free(v8);
  return v12;
}

double JCImageAnalyzer::pixelBlock_GenerateSaturationAndBrightnessHistogramsForHueInBackground(JCImageAnalyzer *a1, double *a2, int a3, double result, double a5)
{
  double v5;
  double v7;
  double v8;
  int v11;
  int v12;
  int v13;
  unsigned int v14;
  int v15;
  unsigned int v16;
  _DWORD *v17;

  v5 = a2[1];
  if (v5 >= 0.0399999991)
  {
    v7 = 1.0;
    if (v5 <= 1.0)
      v7 = a2[1];
    if (v5 >= 0.0)
      v8 = v7;
    else
      v8 = 0.0;
    if (v8 * 0.100000001 + 0.0 + a2[2] >= 0.200000003)
    {
      v11 = JCImageAnalyzer::MultiplierForPointInBackground(a1, *(CGPoint *)&result);
      if (v11)
      {
        result = *a2 * 359.0;
        v12 = vcvtad_u64_f64(result) - a3;
        if (v12 >= 0)
          v13 = v12;
        else
          v13 = -v12;
        if (v12 + 360 < 0)
          v14 = -360 - v12;
        else
          v14 = v12 + 360;
        if (v13 >= v14)
          v13 = v14;
        if (v12 >= -360)
          v15 = v12 + 360;
        else
          v15 = -360 - v12;
        if (v13 < v15)
          v15 = v13;
        if (v15 <= *((_DWORD *)a1 + 1778))
        {
          v16 = vcvtad_u64_f64(a2[2] * 255.0);
          result = a2[1] * 255.0;
          v17 = (_DWORD *)((char *)a1 + 4 * vcvtad_u64_f64(result));
          v17[1266] += v11;
          *((_DWORD *)a1 + v16 + 1522) += v11;
        }
      }
    }
  }
  return result;
}

void JCImageAnalyzer::ValidateBackgroundColor(JCImageAnalyzer *this@<X0>, JCColor *a2@<X1>, JCColor *a3@<X8>)
{
  double v6;
  double v7;
  double BorderLengthForColor;
  uint64_t *HistogramColorValues;
  uint64_t v10;
  uint64_t v11;
  int v12;
  double v13;
  uint64_t v14;
  double v15;
  double v16;
  int v17;
  int v18;
  unsigned int v19;
  int v20;
  BOOL IsReallyCloseToColor;
  double v22;
  double v23;
  uint64_t v24;
  double v25;
  _BOOL4 v26;
  _BOOL4 v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  char v31;
  uint64_t v32;
  unint64_t i;
  JCColor *v34;
  const JCColor *v35;
  _BOOL4 v36;
  BOOL v37;
  unint64_t v38;
  _BOOL8 IsSaturated;
  CGColorRef *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  CGColorRef v47[2];
  CGColorRef v48[2];
  CGColorRef v49[2];
  CGColorRef v50[2];

  JCColor::JCColor((JCColor *)v50, a2);
  if (*((double *)this + 900) <= 0.4)
    goto LABEL_6;
  v6 = *((double *)this + 1);
  v7 = v6 * 0.0500000007 * 3.0;
  if (*((double *)this + 2) > v6)
    v6 = *((double *)this + 2);
  if (ceil(*((double *)this + 901) * v6) >= v7
    || (BorderLengthForColor = JCImageAnalyzer::GetBorderLengthForColor(this, (CGColorRef *)a2),
        BorderLengthForColor <= 0.0))
  {
LABEL_6:
    HistogramColorValues = JCImageAnalyzer::GetHistogramColorValues(this);
    if (HistogramColorValues[1] == *HistogramColorValues)
    {
      JCColor::JCColor(a3, a2);
      goto LABEL_83;
    }
    JCColor::JCColor((JCColor *)v49, (const JCColor *)(*HistogramColorValues + 16));
    if (JCColor::IsCloseToColor(v50, (JCColor *)v49))
    {
      JCColor::operator=(v50, v49);
    }
    else
    {
      v10 = *HistogramColorValues;
      if ((int)((unint64_t)(HistogramColorValues[1] - *HistogramColorValues) >> 5) >= 1)
      {
        v11 = 0;
        v12 = -1;
        v13 = 0.0;
        v14 = 8;
        while (1)
        {
          JCColor::JCColor((JCColor *)v48, (const JCColor *)(v10 + v14 + 8));
          v15 = *(double *)(*HistogramColorValues + v14);
          if (v12 == -1)
          {
            if (JCColor::ColorModel(v48) && JCColor::ColorModel(v50))
            {
              v16 = JCColor::HueComponent(v48);
              v17 = (int)(v16 * 360.0) - (int)(JCColor::HueComponent(v50) * 360.0);
              if (v17 >= 0)
                v18 = v17;
              else
                v18 = -v17;
              if (v17 + 360 < 0)
                v19 = -360 - v17;
              else
                v19 = v17 + 360;
              if (v18 >= v19)
                v18 = v19;
              if (v17 >= -360)
                v20 = v17 + 360;
              else
                v20 = -360 - v17;
              if (v18 < v20)
                v20 = v18;
              if (v20 >= (uint64_t)*((unsigned int *)this + 1778))
                v12 = -1;
              else
                v12 = v11;
            }
            else
            {
              v12 = -1;
            }
          }
          IsReallyCloseToColor = JCColor::IsReallyCloseToColor(v48, (JCColor *)v50);
          JCColor::~JCColor((JCColor *)v48);
          if (IsReallyCloseToColor)
            goto LABEL_42;
          v13 = v13 + v15;
          ++v11;
          v10 = *HistogramColorValues;
          v14 += 32;
          if (v11 >= (int)((unint64_t)(HistogramColorValues[1] - *HistogramColorValues) >> 5))
          {
            if (v13 > 0.899999976 && *(double *)(v10 + 8) > 0.330000013)
            {
              v22 = JCColor::BrightnessComponent(v49);
              v23 = JCColor::BrightnessComponent(v50);
              v24 = *HistogramColorValues;
              if (*(double *)(*HistogramColorValues + 8) > 0.699999988
                && (unint64_t)(HistogramColorValues[1] - v24) > 0x20)
              {
                goto LABEL_86;
              }
              if (v12 != -1 && (unint64_t)(HistogramColorValues[1] - v24) >= 0x21)
              {
                JCColor::JCColor((JCColor *)v48, (const JCColor *)(v24 + 32 * v12 + 16));
                JCColor::operator=(v50, v48);
                JCColor::~JCColor((JCColor *)v48);
                goto LABEL_42;
              }
              if (v23 > 0.75 && v22 < v23)
LABEL_86:
                JCColor::operator=(v50, v49);
            }
            goto LABEL_42;
          }
        }
      }
    }
    v12 = -1;
LABEL_42:
    if (!JCColor::IsSaturated(v50))
      goto LABEL_80;
    v25 = *(double *)(*HistogramColorValues + 8);
    v26 = JCColor::operator==(v50, v49);
    v27 = v25 > 0.33 && v26;
    v28 = *HistogramColorValues;
    v29 = HistogramColorValues[1];
    if (v27 && v25 < 0.66)
    {
      v30 = (v29 - v28) >> 5;
      if (v30 >= 3)
        v30 = 3;
      if (v30 >= 2)
      {
        v31 = 0;
        v32 = 40;
        for (i = 1; i < v38; ++i)
        {
          if (*(double *)(v28 + v32) < 0.2)
            break;
          v34 = JCColor::JCColor((JCColor *)v48, (const JCColor *)(v28 + v32 + 8));
          v35 = (const JCColor *)JCColor::WhiteColor(v34);
          JCColor::JCColor((JCColor *)v47, v35);
          v36 = JCColor::IsReallyCloseToColor(v48, (JCColor *)v47);
          v37 = v36;
          if (v36)
          {
            JCColor::operator=(v50, v48);
            v31 = 1;
          }
          JCColor::~JCColor((JCColor *)v47);
          JCColor::~JCColor((JCColor *)v48);
          if (v37)
            break;
          v28 = *HistogramColorValues;
          v38 = (HistogramColorValues[1] - *HistogramColorValues) >> 5;
          if (v38 >= 3)
            v38 = 3;
          v32 += 32;
        }
        if ((v31 & 1) != 0)
          goto LABEL_80;
      }
      v28 = *HistogramColorValues;
      v29 = HistogramColorValues[1];
    }
    if ((unint64_t)(v29 - v28) < 0x41)
    {
LABEL_80:
      JCImageAnalyzer::GetSecondaryTextColorForBackgroundColor(this, v50, (JCColor *)v48);
      JCColor::EnsureContrastWithColor(v48, v50);
      if (JCColor::GetContrastWithColorLuminanceMethod(v48, v50) < 3.5)
        JCColor::EnsureContrastWithColor(v50, v48);
      JCColor::JCColor(a3, (const JCColor *)v50);
      JCColor::~JCColor((JCColor *)v48);
      JCColor::~JCColor((JCColor *)v49);
      goto LABEL_83;
    }
    JCColor::JCColor((JCColor *)v48, (const JCColor *)(v28 + 48));
    JCColor::JCColor((JCColor *)v47, (const JCColor *)(*HistogramColorValues + 80));
    if (v25 - *(double *)(*HistogramColorValues + 72) < 0.1
      && JCColor::IsSaturated(v48)
      && (IsSaturated = JCColor::IsSaturated(v47)))
    {
      v40 = (CGColorRef *)JCColor::WhiteColor((JCColor *)IsSaturated);
    }
    else
    {
      if (v12 == -1)
        goto LABEL_79;
      if (*(double *)(*HistogramColorValues + 32 * v12 + 8) >= 0.25 || v25 <= 0.25)
        goto LABEL_79;
      v40 = v49;
    }
    JCColor::operator=(v50, v40);
LABEL_79:
    JCColor::~JCColor((JCColor *)v47);
    JCColor::~JCColor((JCColor *)v48);
    goto LABEL_80;
  }
  *((double *)this + 901) = BorderLengthForColor + *((double *)this + 901);
  bzero((char *)this + 136, 0x1340uLL);
  v41 = *((_QWORD *)this + 895);
  v42 = *((_QWORD *)this + 894);
  while (v41 != v42)
    JCColor::~JCColor((JCColor *)(v41 - 16));
  *((_QWORD *)this + 895) = v42;
  v43 = *((_QWORD *)this + 898);
  v44 = *((_QWORD *)this + 897);
  if (v43 != v44)
  {
    do
    {
      v45 = v43 - 32;
      JCColor::~JCColor((JCColor *)(v43 - 16));
      v43 = v45;
    }
    while (v45 != v44);
  }
  *((_QWORD *)this + 898) = v44;
  JCImageAnalyzer::CalculateBackgroundColor(this);
  JCColor::JCColor(a3, (JCImageAnalyzer *)((char *)this + 24));
LABEL_83:
  JCColor::~JCColor((JCColor *)v50);
}

void sub_1DD2B3AF0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  uint64_t v4;
  va_list va;
  uint64_t v6;
  uint64_t v7;
  va_list va1;
  uint64_t v9;
  va_list va2;

  va_start(va2, a3);
  va_start(va1, a3);
  va_start(va, a3);
  v4 = va_arg(va1, _QWORD);
  v6 = va_arg(va1, _QWORD);
  va_copy(va2, va1);
  v7 = va_arg(va2, _QWORD);
  v9 = va_arg(va2, _QWORD);
  JCColor::~JCColor((JCColor *)va);
  JCColor::~JCColor((JCColor *)va1);
  JCColor::~JCColor((JCColor *)va2);
  _Unwind_Resume(a1);
}

BOOL JCImageAnalyzer::GetColorLuminanceTypeOfColor(CGColorRef *this, JCColor *a2)
{
  return JCColor::Luminance(this) <= 0.300000012;
}

void JCImageAnalyzer::GetTextColorForBackgroundColor(JCImageAnalyzer *this@<X0>, CGColorRef *a2@<X1>, JCColor *a3@<X8>)
{
  double v6;
  CGColorRef *v7;
  double v8;
  double v9;
  CGColorRef v10[2];
  CGColorRef v11[2];

  JCImageAnalyzer::SuggestedTextColorForBackground(this, a2, (JCColor *)v11);
  JCImageAnalyzer::SuggestedSecondaryTextColorForBackground(this, a2, (JCColor *)v10);
  if (JCColor::IsReallyCloseToColor(v11, (JCColor *)v10)
    || (v6 = JCColor::Luminance(v11),
        v7 = (CGColorRef *)((char *)this + 24),
        v8 = JCColor::Luminance(v7),
        v9 = JCColor::Luminance(v10),
        vabdd_f64(v9, JCColor::Luminance(v7)) <= fabs(v6 - v8)))
  {
    JCColor::JCColor(a3, (const JCColor *)v11);
  }
  else
  {
    JCColor::JCColor(a3, (const JCColor *)v10);
  }
  JCColor::~JCColor((JCColor *)v10);
  JCColor::~JCColor((JCColor *)v11);
}

void sub_1DD2B3C80(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11)
{
  JCColor::~JCColor((JCColor *)&a9);
  JCColor::~JCColor((JCColor *)&a11);
  _Unwind_Resume(a1);
}

void JCImageAnalyzer::GetSecondaryTextColorForBackgroundColor(JCImageAnalyzer *this@<X0>, CGColorRef *a2@<X1>, JCColor *a3@<X8>)
{
  double v6;
  CGColorRef *v7;
  double v8;
  double v9;
  CGColorRef v10[2];
  CGColorRef v11[2];

  JCImageAnalyzer::SuggestedTextColorForBackground(this, a2, (JCColor *)v11);
  JCImageAnalyzer::SuggestedSecondaryTextColorForBackground(this, a2, (JCColor *)v10);
  if (JCColor::IsReallyCloseToColor(v11, (JCColor *)v10)
    || (v6 = JCColor::Luminance(v11),
        v7 = (CGColorRef *)((char *)this + 24),
        v8 = JCColor::Luminance(v7),
        v9 = JCColor::Luminance(v10),
        vabdd_f64(v9, JCColor::Luminance(v7)) <= fabs(v6 - v8)))
  {
    JCColor::JCColor(a3, (const JCColor *)v10);
  }
  else
  {
    JCColor::JCColor(a3, (const JCColor *)v11);
  }
  JCColor::~JCColor((JCColor *)v10);
  JCColor::~JCColor((JCColor *)v11);
}

void sub_1DD2B3D88(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11)
{
  JCColor::~JCColor((JCColor *)&a9);
  JCColor::~JCColor((JCColor *)&a11);
  _Unwind_Resume(a1);
}

uint64_t JCImageAnalyzer::PrintHistogram(JCImageAnalyzer *this, unsigned int *a2, unsigned int a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  if (a3)
  {
    v4 = 0;
    v5 = a3;
    do
    {
      v6 = a2[v4];
      if ((_DWORD)v6)
        result = printf("%ld - %ld\n", v4, v6);
      ++v4;
    }
    while (v5 != v4);
  }
  return result;
}

uint64_t JCImageAnalyzer::MultiplierForPointInBackground(JCImageAnalyzer *this, CGPoint a2)
{
  CGFloat y;
  CGFloat x;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  uint64_t result;
  CGPoint v14;
  CGPoint v15;
  CGPoint v16;
  CGPoint v17;
  CGPoint v18;
  CGRect v19;
  CGRect v20;
  CGRect v21;
  CGRect v22;
  CGRect v23;
  CGRect v24;
  CGRect v25;

  y = a2.y;
  x = a2.x;
  v5 = *((double *)this + 1);
  v6 = *((double *)this + 2);
  if (v6 <= v5)
    v7 = *((double *)this + 1);
  else
    v7 = *((double *)this + 2);
  v8 = (double)(2 * vcvtpd_u64_f64(*((double *)this + 901) * v7));
  v9 = v5 - v8;
  v10 = v6 - v8;
  v11 = (v5 - v8) * 0.0500000007;
  v12 = (v6 - v8) * 0.5;
  v19.origin.x = 0.0;
  v19.origin.y = 0.0;
  v19.size.width = v11;
  v19.size.height = v12;
  v14.x = x;
  v14.y = y;
  if (CGRectContainsPoint(v19, v14))
    return *((unsigned int *)this + 1782);
  v20.size.height = v12 + v12;
  v20.origin.x = 0.0;
  v20.origin.y = 0.0;
  v20.size.width = v11;
  v15.x = x;
  v15.y = y;
  if (CGRectContainsPoint(v20, v15))
    return *((unsigned int *)this + 1783);
  v21.origin.x = 0.0;
  v21.origin.y = 0.0;
  v21.size.width = v9;
  v21.size.height = v10 * 0.0500000007;
  v16.x = x;
  v16.y = y;
  if (CGRectContainsPoint(v21, v16))
    return *((unsigned int *)this + 1784);
  v22.origin.x = 0.0;
  v22.origin.y = 0.0;
  v22.size.width = v9;
  v22.size.height = v10;
  v23.origin.y = CGRectGetMaxY(v22) - v10 * 0.0500000007;
  v23.origin.x = 0.0;
  v23.size.width = v9;
  v23.size.height = v10 * 0.0500000007;
  v17.x = x;
  v17.y = y;
  if (CGRectContainsPoint(v23, v17))
    return *((unsigned int *)this + 1785);
  v24.origin.x = 0.0;
  v24.origin.y = 0.0;
  v24.size.width = v9;
  v24.size.height = v10;
  v25.origin.x = CGRectGetMaxX(v24) - v11;
  v25.origin.y = 0.0;
  v25.size.width = v11;
  v25.size.height = v10;
  v18.x = x;
  v18.y = y;
  result = CGRectContainsPoint(v25, v18);
  if ((_DWORD)result)
    return *((unsigned int *)this + 1786);
  return result;
}

double JCImageAnalyzer::pixelBlock_GenerateSaturationAndBrightnessHistogramsForHue(uint64_t a1, double *a2, int a3)
{
  double result;
  double v4;
  double v5;
  int v6;
  int v7;
  unsigned int v8;
  int v9;
  uint64_t v10;
  uint64_t v11;

  result = a2[1];
  if (result >= 0.0399999991)
  {
    v4 = 1.0;
    if (result <= 1.0)
      v4 = a2[1];
    if (result < 0.0)
      v4 = 0.0;
    v5 = a2[2];
    if (v4 * 0.100000001 + 0.0 + v5 >= 0.200000003)
    {
      v6 = vcvtad_u64_f64(*a2 * 359.0) - a3;
      if (v6 >= 0)
        v7 = v6;
      else
        v7 = -v6;
      if (v6 + 360 < 0)
        v8 = -360 - v6;
      else
        v8 = v6 + 360;
      if (v7 >= v8)
        v7 = v8;
      if (v6 >= -360)
        v9 = v6 + 360;
      else
        v9 = -360 - v6;
      if (v7 < v9)
        v9 = v7;
      if (v9 <= *(_DWORD *)(a1 + 7112))
      {
        result = result * 255.0;
        v10 = a1 + 4 * vcvtad_u64_f64(result);
        ++*(_DWORD *)(v10 + 5064);
        v11 = a1 + 4 * vcvtad_u64_f64(v5 * 255.0);
        ++*(_DWORD *)(v11 + 6088);
      }
    }
  }
  return result;
}

uint64_t std::function<void ()(CGPoint,JCHSVColor &,unsigned int)>::operator()(uint64_t a1, uint64_t a2, int a3, double a4, double a5)
{
  uint64_t v5;
  int v7;
  _QWORD v8[2];

  *(double *)v8 = a4;
  *(double *)&v8[1] = a5;
  v7 = a3;
  v5 = *(_QWORD *)(a1 + 24);
  if (!v5)
    std::__throw_bad_function_call[abi:ne180100]();
  return (*(uint64_t (**)(uint64_t, _QWORD *, uint64_t, int *))(*(_QWORD *)v5 + 48))(v5, v8, a2, &v7);
}

double JCImageAnalyzer::GetBorderLengthForColor(JCImageAnalyzer *this, CGColorRef *a2)
{
  uint64_t v4;
  double v5;
  double v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;
  unsigned int v10;
  float v11;
  double v12;
  float v13;
  double v14;
  double v15;
  double v16;
  uint64_t v17;
  unsigned int v18;
  unsigned int v19;
  double v20;
  double *v21;
  BOOL IsCloseToColor;
  unsigned int v23;
  unsigned int v24;
  double v25;
  BOOL v26;
  unsigned int v27;
  uint64_t v28;
  double v29;
  uint64_t v30;
  unsigned int v31;
  unsigned int v32;
  double v33;
  BOOL v34;
  unsigned int v35;
  unsigned int v36;
  double v37;
  BOOL v38;
  unsigned int v39;
  uint64_t v40;
  unsigned int v41;
  unsigned int v42;
  unsigned int v43;
  unsigned int v44;
  unsigned int v45;
  unsigned int v46;
  unsigned int v47;
  unsigned int v48;
  unsigned int v49;
  unsigned int v50;
  unsigned int v51;
  unsigned int v52;
  unsigned int v53;
  unsigned int v54;
  unsigned int v55;
  BOOL v56;
  int v57;
  int v58;
  BOOL v59;
  int v60;
  BOOL v61;
  int v62;
  BOOL v63;
  int v64;
  unsigned int v65;
  double *v66;
  double v67;
  double v68;
  float v70;
  int v71;
  unsigned int v72;
  int v73;
  unsigned int v74;
  unsigned int v75;
  int v76;
  unsigned int v77;
  _BYTE v78[64];
  uint64_t v79;

  v79 = *MEMORY[0x1E0C80C00];
  if (!*(_QWORD *)this)
    return 0.0;
  v4 = 0;
  v6 = *((double *)this + 1);
  v5 = *((double *)this + 2);
  v7 = v5;
  if (v5 <= v6)
    v5 = *((double *)this + 1);
  v8 = vcvtpd_u64_f64(*((double *)this + 901) * v5);
  v71 = 2 * v8;
  v72 = v6;
  v9 = v6 - 2 * v8;
  v10 = v7 - 2 * v8;
  v70 = (float)v9;
  v11 = roundf((float)((float)v9 * 0.05) + (float)((float)v9 * 0.05));
  v12 = v11;
  v13 = roundf((float)((float)v10 * 0.05) + (float)((float)v10 * 0.05));
  v74 = v10;
  v75 = v8;
  v14 = (double)v10;
  v15 = (double)v8;
  v16 = v13;
  v76 = ~v8;
  do
  {
    v17 = v4 + 1;
    v18 = 0;
    if (v11 <= 0.0)
    {
      *(_DWORD *)&v78[4 * v4 + 52] = 0;
LABEL_18:
      v25 = 0.0;
      goto LABEL_19;
    }
    v19 = (v15 + (double)v17 * 0.25 * v14);
    v20 = 0.0;
    do
    {
      v21 = (double *)(*(_QWORD *)this + 24 * (v75 + v9 * v19 + v18));
      JCColor::JCColor((JCColor *)v78, *v21, v21[1], v21[2]);
      IsCloseToColor = JCColor::IsCloseToColor(a2, (JCColor *)v78);
      JCColor::~JCColor((JCColor *)v78);
      if (!IsCloseToColor)
        break;
      v20 = (double)++v18;
    }
    while ((double)v18 < v12);
    if (v20 >= v12)
      v23 = 0;
    else
      v23 = v18;
    *(_DWORD *)&v78[4 * v4 + 52] = v23;
    v18 = 0;
    if (v11 <= 0.0)
      goto LABEL_18;
    v24 = v9 + v9 * v19 + v76;
    v25 = 0.0;
    do
    {
      JCColor::JCColor((JCColor *)v78, *(double *)(*(_QWORD *)this + 24 * v24), *(double *)(*(_QWORD *)this + 24 * v24 + 8), *(double *)(*(_QWORD *)this + 24 * v24 + 16));
      v26 = JCColor::IsCloseToColor(a2, (JCColor *)v78);
      JCColor::~JCColor((JCColor *)v78);
      if (!v26)
        break;
      v25 = (double)++v18;
      --v24;
    }
    while ((double)v18 < v12);
LABEL_19:
    if (v25 >= v12)
      v27 = 0;
    else
      v27 = v18;
    *(_DWORD *)&v78[4 * v4++ + 28] = v27;
  }
  while (v17 != 3);
  v28 = 0;
  v29 = (double)v9;
  v73 = (v74 + v76) * v9;
  do
  {
    v30 = v28 + 1;
    v31 = 0;
    if (v13 <= 0.0)
    {
      *(_DWORD *)&v78[4 * v28 + 40] = 0;
LABEL_37:
      v37 = 0.0;
      goto LABEL_38;
    }
    v77 = (v15 + (double)v30 * 0.25 * v29);
    v32 = v75 * v9 + v77;
    v33 = 0.0;
    do
    {
      JCColor::JCColor((JCColor *)v78, *(double *)(*(_QWORD *)this + 24 * v32), *(double *)(*(_QWORD *)this + 24 * v32 + 8), *(double *)(*(_QWORD *)this + 24 * v32 + 16));
      v34 = JCColor::IsCloseToColor(a2, (JCColor *)v78);
      JCColor::~JCColor((JCColor *)v78);
      if (!v34)
        break;
      v33 = (double)++v31;
      v32 += v9;
    }
    while ((double)v31 < v16);
    if (v33 >= v16)
      v35 = 0;
    else
      v35 = v31;
    *(_DWORD *)&v78[4 * v28 + 40] = v35;
    v31 = 0;
    if (v13 <= 0.0)
      goto LABEL_37;
    v36 = v73 + v77;
    v37 = 0.0;
    do
    {
      JCColor::JCColor((JCColor *)v78, *(double *)(*(_QWORD *)this + 24 * v36), *(double *)(*(_QWORD *)this + 24 * v36 + 8), *(double *)(*(_QWORD *)this + 24 * v36 + 16));
      v38 = JCColor::IsCloseToColor(a2, (JCColor *)v78);
      JCColor::~JCColor((JCColor *)v78);
      if (!v38)
        break;
      v37 = (double)++v31;
      v36 += v71 - v72;
    }
    while ((double)v31 < v16);
LABEL_38:
    if (v37 >= v16)
      v39 = 0;
    else
      v39 = v31;
    *(_DWORD *)&v78[4 * v28++ + 16] = v39;
  }
  while (v30 != 3);
  v40 = 0;
  v41 = 0;
  v42 = 0;
  v43 = 0;
  v44 = 0;
  v45 = 0x40000000;
  v46 = 0x40000000;
  v47 = 0x40000000;
  v48 = 0x40000000;
  do
  {
    v49 = *(_DWORD *)&v78[v40 + 52];
    if (v44 <= v49)
      v44 = *(_DWORD *)&v78[v40 + 52];
    v50 = *(_DWORD *)&v78[v40 + 28];
    if (v43 <= v50)
      v43 = *(_DWORD *)&v78[v40 + 28];
    v51 = *(_DWORD *)&v78[v40 + 40];
    if (v42 <= v51)
      v42 = *(_DWORD *)&v78[v40 + 40];
    v52 = *(_DWORD *)&v78[v40 + 16];
    if (v41 <= v52)
      v41 = *(_DWORD *)&v78[v40 + 16];
    if (v48 >= v49)
      v48 = *(_DWORD *)&v78[v40 + 52];
    if (v47 >= v50)
      v47 = *(_DWORD *)&v78[v40 + 28];
    if (v46 >= v51)
      v46 = *(_DWORD *)&v78[v40 + 40];
    if (v45 >= v52)
      v45 = *(_DWORD *)&v78[v40 + 16];
    v40 += 4;
  }
  while (v40 != 12);
  v53 = vcvtps_u32_f32(v70 * 0.02);
  v54 = v42 - v46;
  v55 = v41 - v45;
  if (v43)
    v56 = v43 - v47 >= v53;
  else
    v56 = 1;
  v57 = !v56;
  if (v56)
    v58 = 1;
  else
    v58 = 2;
  if (v44)
    v59 = v44 - v48 >= v53;
  else
    v59 = 1;
  v60 = !v59;
  if (v59)
    v58 = v57;
  if (v42)
    v61 = v54 >= v53;
  else
    v61 = 1;
  v62 = !v61;
  if (!v61)
    ++v58;
  if (v41)
    v63 = v55 >= v53;
  else
    v63 = 1;
  v64 = !v63;
  if (v63)
    v65 = v58;
  else
    v65 = v58 + 1;
  if (v65 >= 3)
  {
    if (!v60)
      v44 = 0;
    if (v44 > v43)
      v43 = v44;
    if (!v57)
      v43 = v44;
    if (v43 > v42)
      v42 = v43;
    if (!v62)
      v42 = v43;
    if (v42 > v41)
      v41 = v42;
    if (!v64)
      v41 = v42;
    return (double)(v41 + 1) / v29;
  }
  else
  {
    v66 = (double *)(*(_QWORD *)this + 24 * (v9 + (float)((float)v75 + (float)(v70 * 0.25))));
    JCColor::JCColor((JCColor *)v78, *v66, v66[1], v66[2]);
    v67 = 0.0;
    if (!JCColor::IsCloseToColor(a2, (JCColor *)v78))
    {
      JCImageAnalyzer::GetBorderLengthForColor(this, (JCColor *)v78);
      v67 = v68;
    }
    JCColor::~JCColor((JCColor *)v78);
  }
  return v67;
}

void sub_1DD2B45E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  JCColor::~JCColor((JCColor *)va);
  _Unwind_Resume(a1);
}

uint64_t *JCImageAnalyzer::GetHistogramColorValues(JCImageAnalyzer *this)
{
  uint64_t *v1;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  char *v9;
  char *v10;
  char *v11;
  char *v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  _DWORD *v21;
  unsigned int v22;
  CGColorRef *v23;
  CGColorRef *v24;
  uint64_t v25;
  char *v26;
  CGColorRef *v27;
  CGColorRef *v28;
  unint64_t v29;
  uint64_t v30;
  double v31;
  unint64_t v32;
  unint64_t v33;
  unsigned int v34;
  uint64_t v35;
  uint64_t v36;
  CGColorRef *v37;
  int v38;
  double *v39;
  _OWORD *v40;
  _OWORD *v41;
  _OWORD *v42;
  int v43;
  unint64_t v44;
  uint64_t v45;
  CGColorRef *v46;
  CGColorRef v48[2];
  CGColorRef v49[2];
  __int128 v50;
  CGColorRef v51[2];
  uint64_t (*v52[2])(__int128 *, __int128 *);
  CGColorRef *v53;
  CGColorRef *v54;
  unint64_t v55;
  void *__p;
  char *v57;
  char *v58;

  v1 = (uint64_t *)((char *)this + 7176);
  if (*((_QWORD *)this + 898) == *((_QWORD *)this + 897))
  {
    v3 = 0;
    v4 = 0;
    __p = 0;
    v57 = 0;
    v58 = 0;
    do
    {
      v5 = *((unsigned int *)this + v4 + 34);
      if (v5 >= 0x65)
      {
        if (v3 >= v58)
        {
          v6 = (v3 - (_BYTE *)__p) >> 3;
          if ((unint64_t)(v6 + 1) >> 61)
            std::vector<sortHueEntry>::__throw_length_error[abi:ne180100]();
          v7 = (v58 - (_BYTE *)__p) >> 2;
          if (v7 <= v6 + 1)
            v7 = v6 + 1;
          if ((unint64_t)(v58 - (_BYTE *)__p) >= 0x7FFFFFFFFFFFFFF8)
            v8 = 0x1FFFFFFFFFFFFFFFLL;
          else
            v8 = v7;
          if (v8)
            v9 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<sortHueEntry>>((uint64_t)&v58, v8);
          else
            v9 = 0;
          v10 = &v9[8 * v6];
          *(_QWORD *)v10 = v4 | (v5 << 32);
          v3 = v10 + 8;
          v12 = (char *)__p;
          v11 = v57;
          if (v57 != __p)
          {
            do
            {
              v13 = *((_QWORD *)v11 - 1);
              v11 -= 8;
              *((_QWORD *)v10 - 1) = v13;
              v10 -= 8;
            }
            while (v11 != v12);
            v11 = (char *)__p;
          }
          __p = v10;
          v57 = v3;
          v58 = &v9[8 * v8];
          if (v11)
            operator delete(v11);
        }
        else
        {
          *(_QWORD *)v3 = v4 | (v5 << 32);
          v3 += 8;
        }
        v57 = v3;
      }
      ++v4;
    }
    while (v4 != 360);
    v14 = 126 - 2 * __clz((v3 - (_BYTE *)__p) >> 3);
    *(_QWORD *)&v50 = CompareHueEntry;
    if (v3 == __p)
      v15 = 0;
    else
      v15 = v14;
    std::__introsort<std::_ClassicAlgPolicy,BOOL (*&)(sortHueEntry,sortHueEntry),sortHueEntry*,false>((uint64_t)__p, (uint64_t *)v3, (uint64_t (**)(uint64_t, uint64_t))&v50, v15, 1);
    v53 = 0;
    v54 = 0;
    v55 = 0;
    v16 = (v57 - (_BYTE *)__p) >> 3;
    if (v16 >= 8)
      v16 = 8;
    if (v16)
    {
      v17 = 0;
      v18 = 8 * v16;
      do
      {
        v19 = *(unsigned int *)((char *)__p + v17);
        v20 = (char *)this + 4 * v19;
        v22 = *((_DWORD *)v20 + 34);
        v21 = v20 + 136;
        if (v22 >= 0x65)
        {
          JCImageAnalyzer::GetDominantColorForHue(this, v19, (JCColor *)v52);
          JCColor::JCColor((JCColor *)v51, 0);
          JCColor::JCColor((JCColor *)v49, (const JCColor *)v52);
          JCColor::operator=(v51, v49);
          JCColor::~JCColor((JCColor *)v49);
          LODWORD(v50) = *v21;
          v23 = v54;
          if ((unint64_t)v54 >= v55)
          {
            v24 = (CGColorRef *)std::vector<sortColorEntry>::__push_back_slow_path<sortColorEntry const&>((uint64_t *)&v53, &v50);
          }
          else
          {
            *(_OWORD *)v54 = v50;
            JCColor::JCColor((JCColor *)(v23 + 2), (const JCColor *)v51);
            v24 = v23 + 4;
          }
          v54 = v24;
          JCColor::~JCColor((JCColor *)v51);
          JCColor::~JCColor((JCColor *)v52);
        }
        v17 += 8;
      }
      while (v18 != v17);
    }
    v25 = 0;
    v26 = (char *)this + 1576;
    do
    {
      if (*(_DWORD *)&v26[4 * v25] >= 0x65u)
      {
        JCColor::JCColor((JCColor *)v52, (double)v25 / 255.0, 1.0);
        JCColor::JCColor((JCColor *)v51, 0);
        JCColor::JCColor((JCColor *)v48, (const JCColor *)v52);
        JCColor::operator=(v51, v48);
        JCColor::~JCColor((JCColor *)v48);
        LODWORD(v50) = *(_DWORD *)&v26[4 * v25];
        v27 = v54;
        if ((unint64_t)v54 >= v55)
        {
          v28 = (CGColorRef *)std::vector<sortColorEntry>::__push_back_slow_path<sortColorEntry const&>((uint64_t *)&v53, &v50);
        }
        else
        {
          *(_OWORD *)v54 = v50;
          JCColor::JCColor((JCColor *)(v27 + 2), (const JCColor *)v51);
          v28 = v27 + 4;
        }
        v54 = v28;
        JCColor::~JCColor((JCColor *)v51);
        JCColor::~JCColor((JCColor *)v52);
      }
      ++v25;
    }
    while (v25 != 256);
    v29 = 126 - 2 * __clz(((char *)v54 - (char *)v53) >> 5);
    v52[0] = (uint64_t (*)(__int128 *, __int128 *))CompareSortColor;
    if (v54 == v53)
      v30 = 0;
    else
      v30 = v29;
    std::__introsort<std::_ClassicAlgPolicy,BOOL (*&)(sortColorEntry,sortColorEntry),sortColorEntry*,false>(v53, v54, v52, v30, 1);
    v32 = (char *)v54 - (char *)v53;
    v33 = (unint64_t)((char *)v54 - (char *)v53) >> 5;
    if ((int)v33 >= 1)
    {
      v34 = 0;
      v35 = (v32 >> 5);
      v36 = v35;
      v37 = v53;
      do
      {
        v38 = *(_DWORD *)v37;
        v37 += 4;
        v34 += v38;
        --v36;
      }
      while (v36);
      v39 = (double *)(v53 + 1);
      do
      {
        LODWORD(v31) = *((_DWORD *)v39 - 2);
        v31 = (double)*(unint64_t *)&v31 / (double)v34;
        *v39 = v31;
        v39 += 4;
        --v35;
      }
      while (v35);
    }
    v40 = (_OWORD *)*((_QWORD *)this + 898);
    v41 = (_OWORD *)*((_QWORD *)this + 897);
    if (v40 != v41)
    {
      do
      {
        v42 = v40 - 2;
        JCColor::~JCColor((JCColor *)(v40 - 1));
        v40 = v42;
      }
      while (v42 != v41);
      v32 = (char *)v54 - (char *)v53;
      v33 = (unint64_t)((char *)v54 - (char *)v53) >> 5;
    }
    *((_QWORD *)this + 898) = v41;
    if (v32 >= 0x100)
      v43 = 8;
    else
      v43 = v33;
    if (v43 >= 1)
    {
      v44 = 0;
      v45 = 32 * v43;
      do
      {
        v46 = &v53[v44 / 8];
        if ((unint64_t)v41 >= *((_QWORD *)this + 899))
        {
          v41 = (_OWORD *)std::vector<sortColorEntry>::__push_back_slow_path<sortColorEntry const&>(v1, v46);
        }
        else
        {
          *v41 = *(_OWORD *)v46;
          JCColor::JCColor((JCColor *)(v41 + 1), (const JCColor *)(v46 + 2));
          v41 += 2;
          *((_QWORD *)this + 898) = v41;
        }
        *((_QWORD *)this + 898) = v41;
        v44 += 32;
      }
      while (v45 != v44);
    }
    *(_QWORD *)&v50 = &v53;
    std::vector<sortColorEntry>::__destroy_vector::operator()[abi:ne180100]((void ***)&v50);
    if (__p)
    {
      v57 = (char *)__p;
      operator delete(__p);
    }
  }
  return v1;
}

void sub_1DD2B4A84(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, char *a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, char a19, uint64_t a20,uint64_t a21,void *__p,uint64_t a23)
{
  a13 = &a19;
  std::vector<sortColorEntry>::__destroy_vector::operator()[abi:ne180100]((void ***)&a13);
  if (__p)
  {
    a23 = (uint64_t)__p;
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

JCColor *JCImageAnalyzer::GetDominantColorForHue@<X0>(JCImageAnalyzer *this@<X0>, unsigned int a2@<W1>, JCColor *a3@<X8>)
{
  unsigned int *v6;
  JCImageAnalyzer *v7;
  JCImageAnalyzer *v8;
  uint64_t v9;
  JCImageAnalyzer *v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t v13;
  unsigned int v14;
  _BYTE v16[24];
  JCImageAnalyzer *v17;
  uint64_t v18;

  v18 = *MEMORY[0x1E0C80C00];
  v6 = (unsigned int *)((char *)this + 5064);
  bzero((char *)this + 5064, 0x800uLL);
  v7 = (JCImageAnalyzer *)operator new(0x20uLL);
  *(_QWORD *)v7 = &unk_1EA711F28;
  *((_QWORD *)v7 + 1) = JCImageAnalyzer::pixelBlock_GenerateSaturationAndBrightnessHistogramsForHue;
  *((_QWORD *)v7 + 2) = 0;
  *((_QWORD *)v7 + 3) = this;
  v17 = v7;
  JCImageAnalyzer::IterateOverPixels((uint64_t)this, (uint64_t)v16, a2);
  v8 = v17;
  if (v17 == (JCImageAnalyzer *)v16)
  {
    v9 = 4;
    v8 = (JCImageAnalyzer *)v16;
    goto LABEL_5;
  }
  if (v17)
  {
    v9 = 5;
LABEL_5:
    v8 = (JCImageAnalyzer *)(*(uint64_t (**)(void))(*(_QWORD *)v8 + 8 * v9))();
  }
  v10 = (JCImageAnalyzer *)JCImageAnalyzer::WeightHistogram(v8, v6, 0x100u, *((_DWORD *)this + 1779));
  JCImageAnalyzer::WeightHistogram(v10, (unsigned int *)this + 1522, 0x100u, *((_DWORD *)this + 1780));
  v11 = 0;
  v12 = 0;
  do
  {
    if (*((_DWORD *)this + v11 + 1266) > *((_DWORD *)this + v12 + 1266))
      v12 = v11;
    ++v11;
  }
  while (v11 != 256);
  v13 = 0;
  v14 = 0;
  do
  {
    if (*((_DWORD *)this + v13 + 1522) > *((_DWORD *)this + v14 + 1522))
      v14 = v13;
    ++v13;
  }
  while (v13 != 256);
  return JCColor::JCColor(a3, (double)a2 / 359.0, (double)v12 / 255.0, (double)v14 / 255.0);
}

void sub_1DD2B4CC4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, char *a13)
{
  char *v13;
  char *v15;
  uint64_t v16;

  v15 = a13;
  if (a13 == v13)
  {
    v16 = 4;
    v15 = &a10;
  }
  else
  {
    if (!a13)
      goto LABEL_6;
    v16 = 5;
  }
  (*(void (**)(void))(*(_QWORD *)v15 + 8 * v16))();
LABEL_6:
  _Unwind_Resume(exception_object);
}

BOOL CompareHueEntry(uint64_t a1, uint64_t a2)
{
  return HIDWORD(a1) > HIDWORD(a2);
}

BOOL CompareSortColor(_DWORD *a1, _DWORD *a2)
{
  return *a1 > *a2;
}

uint64_t *JCImageAnalyzer::DominantColors(JCImageAnalyzer *this)
{
  uint64_t *v1;
  uint64_t *HistogramColorValues;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE v8[16];

  v1 = (uint64_t *)((char *)this + 7152);
  if (*((_QWORD *)this + 895) == *((_QWORD *)this + 894))
  {
    HistogramColorValues = JCImageAnalyzer::GetHistogramColorValues(this);
    v3 = *HistogramColorValues;
    if ((int)((unint64_t)(HistogramColorValues[1] - *HistogramColorValues) >> 5) >= 1)
    {
      v4 = HistogramColorValues;
      v5 = 0;
      v6 = 16;
      do
      {
        JCColor::JCColor((JCColor *)v8, (const JCColor *)(v3 + v6));
        std::vector<JCColor>::push_back[abi:ne180100](v1, (JCColor *)v8);
        JCColor::~JCColor((JCColor *)v8);
        ++v5;
        v3 = *v4;
        v6 += 32;
      }
      while (v5 < (int)((unint64_t)(v4[1] - *v4) >> 5));
    }
  }
  return v1;
}

void sub_1DD2B4DD0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  JCColor::~JCColor((JCColor *)&a9);
  _Unwind_Resume(a1);
}

JCColor *std::vector<JCColor>::push_back[abi:ne180100](uint64_t *a1, JCColor *a2)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  JCColor *result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char *v14;
  char *v15;
  JCColor *v16;
  char *v17;
  char *v18;
  uint64_t v19;

  v6 = a1[2];
  v4 = (uint64_t)(a1 + 2);
  v5 = v6;
  v7 = *(_QWORD *)(v4 - 8);
  if (v7 >= v6)
  {
    v10 = (uint64_t)(v7 - *a1) >> 4;
    if ((unint64_t)(v10 + 1) >> 60)
      std::vector<sortHueEntry>::__throw_length_error[abi:ne180100]();
    v11 = v5 - *a1;
    v12 = v11 >> 3;
    if (v11 >> 3 <= (unint64_t)(v10 + 1))
      v12 = v10 + 1;
    if ((unint64_t)v11 >= 0x7FFFFFFFFFFFFFF0)
      v13 = 0xFFFFFFFFFFFFFFFLL;
    else
      v13 = v12;
    v19 = v4;
    if (v13)
      v14 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<JCColor>>(v4, v13);
    else
      v14 = 0;
    v15 = v14;
    v16 = (JCColor *)&v14[16 * v10];
    v18 = &v14[16 * v13];
    JCColor::JCColor(v16, a2);
    v17 = (char *)v16 + 16;
    std::vector<JCColor>::__swap_out_circular_buffer(a1, &v15);
    v9 = a1[1];
    result = (JCColor *)std::__split_buffer<JCColor>::~__split_buffer((uint64_t)&v15);
  }
  else
  {
    result = JCColor::JCColor(*(JCColor **)(v4 - 8), a2);
    v9 = v7 + 16;
    a1[1] = v7 + 16;
  }
  a1[1] = v9;
  return result;
}

void sub_1DD2B4ED4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10)
{
  uint64_t v10;
  uint64_t v11;

  *(_QWORD *)(v10 + 8) = v11;
  _Unwind_Resume(exception_object);
}

void JCImageAnalyzer::SuggestedTextColorForBackground(JCImageAnalyzer *this@<X0>, CGColorRef *a2@<X1>, JCColor *a3@<X8>)
{
  uint64_t *v5;
  const JCColor *v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  JCColor *v12;
  CGColorRef *v13;
  CGColorRef v14[2];
  CGColorRef v15[2];

  v5 = JCImageAnalyzer::DominantColors(this);
  v6 = (const JCColor *)JCColor::BlackColor((JCColor *)v5);
  JCColor::JCColor((JCColor *)v15, v6);
  v7 = *v5;
  v8 = (v5[1] - *v5) >> 4;
  if (v8 >= 5)
    v8 = 5;
  if (v8)
  {
    v9 = 0;
    v10 = 0;
    while (1)
    {
      JCColor::JCColor((JCColor *)v14, (const JCColor *)(v7 + v10));
      if (JCColor::ContrastsWithColor(v14, a2))
        break;
      JCColor::~JCColor((JCColor *)v14);
      v7 = *v5;
      v11 = (v5[1] - *v5) >> 4;
      if (v11 >= 5)
        v11 = 5;
      v10 += 16;
      if (v11 <= ++v9)
        goto LABEL_9;
    }
    JCColor::operator=(v15, v14);
    JCColor::~JCColor((JCColor *)v14);
  }
  else
  {
LABEL_9:
    if (JCColor::Luminance(a2) <= 0.300000012)
      v13 = (CGColorRef *)JCColor::WhiteColor(v12);
    else
      v13 = (CGColorRef *)JCColor::BlackColor(v12);
    JCColor::operator=(v15, v13);
  }
  JCColor::JCColor(a3, (const JCColor *)v15, 0.899999976);
  JCColor::~JCColor((JCColor *)v15);
}

void sub_1DD2B501C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11)
{
  JCColor::~JCColor((JCColor *)&a9);
  JCColor::~JCColor((JCColor *)&a11);
  _Unwind_Resume(a1);
}

void JCImageAnalyzer::SuggestedSecondaryTextColorForBackground(JCImageAnalyzer *this@<X0>, CGColorRef *a2@<X1>, JCColor *a3@<X8>)
{
  uint64_t *v6;
  double v7;
  JCColor *v8;
  CGColorRef *v9;
  double v10;
  JCColor *v11;
  CGColorRef *v12;
  double v13;
  CGColorRef v14[2];
  CGColorRef v15[2];

  JCImageAnalyzer::SuggestedTextColorForBackground(this, a2, (JCColor *)v15);
  JCColor::JCColor((JCColor *)v14, 0);
  if ((JCImageAnalyzer::FindSecondaryTextColorCandidate(this, a2, v15, v14, 1) & 1) == 0)
  {
    v6 = JCImageAnalyzer::DominantColors(this);
    if ((unint64_t)(v6[1] - *v6) < 0x31)
    {
      v7 = JCColor::Luminance(v15);
      if (v7 - JCColor::Luminance(a2) <= 0.0)
        v9 = (CGColorRef *)JCColor::BlackColor(v8);
      else
        v9 = (CGColorRef *)JCColor::WhiteColor(v8);
      JCColor::operator=(v14, v9);
    }
    else if (!JCImageAnalyzer::FindSecondaryTextColorCandidate(this, a2, v15, v14, 0))
    {
      goto LABEL_12;
    }
  }
  if (!JCColor::ContrastsWithColor(v14, a2))
    JCColor::EnsureContrastWithColor(v14, a2);
  if (!JCColor::IsReallyCloseToColor(v14, (JCColor *)v15))
  {
    v13 = 0.899999976;
    goto LABEL_19;
  }
LABEL_12:
  if (JCColor::GetContrastWithColorLuminanceMethod(v15, a2) >= 5.5)
  {
    v12 = v15;
  }
  else
  {
    v10 = JCColor::Luminance(v15);
    if (v10 - JCColor::Luminance(a2) <= 0.0)
      v12 = (CGColorRef *)JCColor::BlackColor(v11);
    else
      v12 = (CGColorRef *)JCColor::WhiteColor(v11);
  }
  JCColor::operator=(v14, v12);
  v13 = 0.699999988;
LABEL_19:
  JCColor::JCColor(a3, (const JCColor *)v14, v13);
  JCColor::~JCColor((JCColor *)v14);
  JCColor::~JCColor((JCColor *)v15);
}

void sub_1DD2B51E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  JCColor::~JCColor((JCColor *)va);
  _Unwind_Resume(a1);
}

uint64_t JCImageAnalyzer::FindSecondaryTextColorCandidate(JCImageAnalyzer *this, CGColorRef *a2, CGColorRef *a3, CGColorRef *a4, int a5)
{
  uint64_t *v9;
  double v10;
  double v11;
  uint64_t v12;
  double v13;
  uint64_t v14;
  uint64_t v15;
  double v16;
  double v17;
  BOOL v18;
  double v19;
  BOOL v20;
  CGColorRef v22[2];

  v9 = JCImageAnalyzer::DominantColors(this);
  v10 = JCColor::Luminance(a3);
  v11 = JCColor::Luminance(a2);
  v12 = *v9;
  if ((int)((unint64_t)(v9[1] - *v9) >> 4) < 1)
    return 0;
  v13 = v11;
  v14 = 0;
  v15 = 0;
  v16 = v10 - v11;
  while (1)
  {
    JCColor::JCColor((JCColor *)v22, (const JCColor *)(v12 + v14));
    if (v22 != a3)
    {
      v17 = JCColor::Luminance(v22);
      v18 = v16 < 0.0;
      v19 = v17 - v13;
      if (v19 <= 0.0)
        v18 = 0;
      v20 = v19 >= 0.0 || v16 <= 0.0;
      if (v20
        && !v18
        && (!a5 || !JCColor::IsCloseToColor(v22, (JCColor *)a3))
        && JCColor::ContrastsEnoughWithColor(v22, a2))
      {
        break;
      }
    }
    JCColor::~JCColor((JCColor *)v22);
    ++v15;
    v12 = *v9;
    v14 += 16;
    if (v15 >= (int)((unint64_t)(v9[1] - *v9) >> 4))
      return 0;
  }
  JCColor::operator=(a4, v22);
  JCColor::~JCColor((JCColor *)v22);
  return 1;
}

void sub_1DD2B5348(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  JCColor::~JCColor((JCColor *)&a9);
  _Unwind_Resume(a1);
}

void JCImageAnalyzer::GetTextShadowColor(CGColorRef *a1@<X1>, CGColorRef *a2@<X2>, JCColor *a3@<X8>)
{
  double v7;
  JCColor *v8;
  CGColorRef *v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  CGColorRef *v15;
  double v16;
  double v17;
  double v18;
  CGColorRef v19[2];

  JCColor::JCColor((JCColor *)v19);
  v7 = JCColor::Luminance(a1);
  if (v7 >= JCColor::Luminance(a2))
  {
    v15 = (CGColorRef *)JCColor::BlackColor(v8);
    JCColor::operator=(v19, v15);
    v16 = JCColor::Luminance(v19);
    v17 = vabdd_f64(v16, JCColor::Luminance(a2));
    v18 = v17 + v17;
    v13 = 0.0;
    if (v18 >= 0.0)
    {
      v13 = v18;
      if (v18 > 1.0)
        v13 = 1.0;
    }
    v14 = -0.599999994;
  }
  else
  {
    v9 = (CGColorRef *)JCColor::WhiteColor(v8);
    JCColor::operator=(v19, v9);
    v10 = JCColor::Luminance(v19);
    v11 = vabdd_f64(v10, JCColor::Luminance(a2));
    v12 = v11 + v11;
    v13 = 0.0;
    if (v12 >= 0.0)
    {
      v13 = v12;
      if (v12 > 1.0)
        v13 = 1.0;
    }
    v14 = -0.699999988;
  }
  JCColor::JCColor(a3, (const JCColor *)v19, v13 * v14 + 1.0);
  JCColor::~JCColor((JCColor *)v19);
}

void sub_1DD2B548C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  JCColor::~JCColor((JCColor *)&a9);
  _Unwind_Resume(a1);
}

void std::vector<JCColor>::__destroy_vector::operator()[abi:ne180100](void ***a1)
{
  void **v1;
  char *v2;
  char *v4;
  void *v5;

  v1 = *a1;
  v2 = (char *)**a1;
  if (v2)
  {
    v4 = (char *)v1[1];
    v5 = v2;
    if (v4 != v2)
    {
      do
        JCColor::~JCColor((JCColor *)(v4 - 16));
      while (v4 != v2);
      v5 = **a1;
    }
    v1[1] = v2;
    operator delete(v5);
  }
}

void std::vector<sortColorEntry>::__destroy_vector::operator()[abi:ne180100](void ***a1)
{
  void **v1;
  char *v2;
  char *v4;
  void *v5;
  char *v6;

  v1 = *a1;
  v2 = (char *)**a1;
  if (v2)
  {
    v4 = (char *)v1[1];
    v5 = **a1;
    if (v4 != v2)
    {
      do
      {
        v6 = v4 - 32;
        JCColor::~JCColor((JCColor *)(v4 - 16));
        v4 = v6;
      }
      while (v6 != v2);
      v5 = **a1;
    }
    v1[1] = v2;
    operator delete(v5);
  }
}

void std::__throw_bad_array_new_length[abi:ne180100]()
{
  std::bad_array_new_length *exception;
  std::bad_array_new_length *v1;

  exception = (std::bad_array_new_length *)__cxa_allocate_exception(8uLL);
  v1 = std::bad_array_new_length::bad_array_new_length(exception);
  __cxa_throw(v1, MEMORY[0x1E0DE4E98], MEMORY[0x1E0DE4390]);
}

void std::__function::__func<std::__bind<void (JCImageAnalyzer::*)(CGPoint,JCHSVColor &,unsigned int),JCImageAnalyzer*,std::placeholders::__ph<1> const&,std::placeholders::__ph<2> const&,std::placeholders::__ph<3> const&>,std::allocator<std::__bind<void (JCImageAnalyzer::*)(CGPoint,JCHSVColor &,unsigned int),JCImageAnalyzer*,std::placeholders::__ph<1> const&,std::placeholders::__ph<2> const&,std::placeholders::__ph<3> const&>>,void ()(CGPoint,JCHSVColor &,unsigned int)>::~__func()
{
  JUMPOUT(0x1DF0D7BB4);
}

__n128 std::__function::__func<std::__bind<void (JCImageAnalyzer::*)(CGPoint,JCHSVColor &,unsigned int),JCImageAnalyzer*,std::placeholders::__ph<1> const&,std::placeholders::__ph<2> const&,std::placeholders::__ph<3> const&>,std::allocator<std::__bind<void (JCImageAnalyzer::*)(CGPoint,JCHSVColor &,unsigned int),JCImageAnalyzer*,std::placeholders::__ph<1> const&,std::placeholders::__ph<2> const&,std::placeholders::__ph<3> const&>>,void ()(CGPoint,JCHSVColor &,unsigned int)>::__clone(uint64_t a1)
{
  char *v2;
  __n128 result;

  v2 = (char *)operator new(0x20uLL);
  *(_QWORD *)v2 = &unk_1EA711F28;
  result = *(__n128 *)(a1 + 8);
  *(__n128 *)(v2 + 8) = result;
  *((_QWORD *)v2 + 3) = *(_QWORD *)(a1 + 24);
  return result;
}

__n128 std::__function::__func<std::__bind<void (JCImageAnalyzer::*)(CGPoint,JCHSVColor &,unsigned int),JCImageAnalyzer*,std::placeholders::__ph<1> const&,std::placeholders::__ph<2> const&,std::placeholders::__ph<3> const&>,std::allocator<std::__bind<void (JCImageAnalyzer::*)(CGPoint,JCHSVColor &,unsigned int),JCImageAnalyzer*,std::placeholders::__ph<1> const&,std::placeholders::__ph<2> const&,std::placeholders::__ph<3> const&>>,void ()(CGPoint,JCHSVColor &,unsigned int)>::__clone(uint64_t a1, uint64_t a2)
{
  __n128 result;

  *(_QWORD *)a2 = &unk_1EA711F28;
  result = *(__n128 *)(a1 + 8);
  *(_QWORD *)(a2 + 24) = *(_QWORD *)(a1 + 24);
  *(__n128 *)(a2 + 8) = result;
  return result;
}

uint64_t std::__function::__func<std::__bind<void (JCImageAnalyzer::*)(CGPoint,JCHSVColor &,unsigned int),JCImageAnalyzer*,std::placeholders::__ph<1> const&,std::placeholders::__ph<2> const&,std::placeholders::__ph<3> const&>,std::allocator<std::__bind<void (JCImageAnalyzer::*)(CGPoint,JCHSVColor &,unsigned int),JCImageAnalyzer*,std::placeholders::__ph<1> const&,std::placeholders::__ph<2> const&,std::placeholders::__ph<3> const&>>,void ()(CGPoint,JCHSVColor &,unsigned int)>::operator()(uint64_t a1, double *a2, uint64_t a3, unsigned int *a4)
{
  return std::__bind<void (JCImageAnalyzer::*)(CGPoint,JCHSVColor &,unsigned int),JCImageAnalyzer*,std::placeholders::__ph<1> const&,std::placeholders::__ph<2> const&,std::placeholders::__ph<3> const&>::operator()[abi:ne180100]<CGPoint,JCHSVColor &,unsigned int>(a1 + 8, a2, a3, a4);
}

uint64_t std::__function::__func<std::__bind<void (JCImageAnalyzer::*)(CGPoint,JCHSVColor &,unsigned int),JCImageAnalyzer*,std::placeholders::__ph<1> const&,std::placeholders::__ph<2> const&,std::placeholders::__ph<3> const&>,std::allocator<std::__bind<void (JCImageAnalyzer::*)(CGPoint,JCHSVColor &,unsigned int),JCImageAnalyzer*,std::placeholders::__ph<1> const&,std::placeholders::__ph<2> const&,std::placeholders::__ph<3> const&>>,void ()(CGPoint,JCHSVColor &,unsigned int)>::target(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

void *std::__function::__func<std::__bind<void (JCImageAnalyzer::*)(CGPoint,JCHSVColor &,unsigned int),JCImageAnalyzer*,std::placeholders::__ph<1> const&,std::placeholders::__ph<2> const&,std::placeholders::__ph<3> const&>,std::allocator<std::__bind<void (JCImageAnalyzer::*)(CGPoint,JCHSVColor &,unsigned int),JCImageAnalyzer*,std::placeholders::__ph<1> const&,std::placeholders::__ph<2> const&,std::placeholders::__ph<3> const&>>,void ()(CGPoint,JCHSVColor &,unsigned int)>::target_type()
{
}

uint64_t std::__bind<void (JCImageAnalyzer::*)(CGPoint,JCHSVColor &,unsigned int),JCImageAnalyzer*,std::placeholders::__ph<1> const&,std::placeholders::__ph<2> const&,std::placeholders::__ph<3> const&>::operator()[abi:ne180100]<CGPoint,JCHSVColor &,unsigned int>(uint64_t a1, double *a2, uint64_t a3, unsigned int *a4)
{
  uint64_t v4;
  uint64_t (*v5)(_QWORD *, uint64_t, _QWORD, double, double);
  _QWORD *v6;

  v4 = *(_QWORD *)(a1 + 8);
  v5 = *(uint64_t (**)(_QWORD *, uint64_t, _QWORD, double, double))a1;
  v6 = (_QWORD *)(*(_QWORD *)(a1 + 16) + (v4 >> 1));
  if ((v4 & 1) != 0)
    v5 = *(uint64_t (**)(_QWORD *, uint64_t, _QWORD, double, double))(*v6 + v5);
  return v5(v6, a3, *a4, *a2, a2[1]);
}

BOOL std::type_info::operator==[abi:ne180100](uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(a1 + 8);
  v3 = *(_QWORD *)(a2 + 8);
  if (v2 == v3)
    return 1;
  if ((v3 & v2) < 0 != __OFSUB__(v2, v3))
    return strcmp((const char *)(v2 & 0x7FFFFFFFFFFFFFFFLL), (const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL)) == 0;
  return 0;
}

void std::__throw_bad_function_call[abi:ne180100]()
{
  _QWORD *exception;

  exception = __cxa_allocate_exception(8uLL);
}

void std::bad_function_call::~bad_function_call(std::bad_function_call *this)
{
  std::exception::~exception(this);
  JUMPOUT(0x1DF0D7BB4);
}

void std::vector<sortHueEntry>::__throw_length_error[abi:ne180100]()
{
  std::__throw_length_error[abi:ne180100]("vector");
}

void std::__throw_length_error[abi:ne180100](const char *a1)
{
  std::logic_error *exception;

  exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
  std::length_error::length_error[abi:ne180100](exception, a1);
  __cxa_throw(exception, (struct type_info *)off_1EA7119D8, MEMORY[0x1E0DE42D0]);
}

void sub_1DD2B57A8(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

std::logic_error *std::length_error::length_error[abi:ne180100](std::logic_error *a1, const char *a2)
{
  std::logic_error *result;

  result = std::logic_error::logic_error(a1, a2);
  result->__vftable = (std::logic_error_vtbl *)(MEMORY[0x1E0DE5020] + 16);
  return result;
}

void *std::__allocate_at_least[abi:ne180100]<std::allocator<sortHueEntry>>(uint64_t a1, unint64_t a2)
{
  if (a2 >> 61)
    std::__throw_bad_array_new_length[abi:ne180100]();
  return operator new(8 * a2);
}

uint64_t std::__introsort<std::_ClassicAlgPolicy,BOOL (*&)(sortHueEntry,sortHueEntry),sortHueEntry*,false>(uint64_t result, uint64_t *a2, uint64_t (**a3)(uint64_t, uint64_t), uint64_t a4, char a5)
{
  uint64_t *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t *v17;
  char v18;
  BOOL v19;
  uint64_t v20;

  v8 = (uint64_t *)result;
LABEL_2:
  v9 = v8;
LABEL_3:
  v10 = 1 - a4;
  while (2)
  {
    v8 = v9;
    v11 = v10;
    v12 = (char *)a2 - (char *)v9;
    v13 = a2 - v9;
    switch(v13)
    {
      case 0uLL:
      case 1uLL:
        return result;
      case 2uLL:
        result = (*a3)(*(a2 - 1), *v9);
        if ((_DWORD)result)
        {
          v20 = *v9;
          *v9 = *(a2 - 1);
          *(a2 - 1) = v20;
        }
        return result;
      case 3uLL:
        return std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,BOOL (*&)(sortHueEntry,sortHueEntry),sortHueEntry*>(v9, v9 + 1, a2 - 1, (unsigned int (**)(_QWORD))a3);
      case 4uLL:
        return std::__sort4[abi:ne180100]<std::_ClassicAlgPolicy,BOOL (*&)(sortHueEntry,sortHueEntry),sortHueEntry*>(v9, v9 + 1, v9 + 2, a2 - 1, (unsigned int (**)(_QWORD))a3);
      case 5uLL:
        return std::__sort5[abi:ne180100]<std::_ClassicAlgPolicy,BOOL (*&)(sortHueEntry,sortHueEntry),sortHueEntry*>(v9, v9 + 1, v9 + 2, v9 + 3, a2 - 1, (unsigned int (**)(_QWORD))a3);
      default:
        if (v12 <= 191)
        {
          if ((a5 & 1) != 0)
            return std::__insertion_sort[abi:ne180100]<std::_ClassicAlgPolicy,BOOL (*&)(sortHueEntry,sortHueEntry),sortHueEntry*>((uint64_t)v9, a2, a3);
          else
            return std::__insertion_sort_unguarded[abi:ne180100]<std::_ClassicAlgPolicy,BOOL (*&)(sortHueEntry,sortHueEntry),sortHueEntry*>((uint64_t)v9, a2, a3);
        }
        if (v11 != 1)
        {
          v14 = v13 >> 1;
          v15 = &v9[v13 >> 1];
          if ((unint64_t)v12 < 0x401)
          {
            std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,BOOL (*&)(sortHueEntry,sortHueEntry),sortHueEntry*>(&v9[v13 >> 1], v9, a2 - 1, (unsigned int (**)(_QWORD))a3);
            if ((a5 & 1) != 0)
              goto LABEL_12;
          }
          else
          {
            std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,BOOL (*&)(sortHueEntry,sortHueEntry),sortHueEntry*>(v9, &v9[v13 >> 1], a2 - 1, (unsigned int (**)(_QWORD))a3);
            std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,BOOL (*&)(sortHueEntry,sortHueEntry),sortHueEntry*>(v9 + 1, v15 - 1, a2 - 2, (unsigned int (**)(_QWORD))a3);
            std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,BOOL (*&)(sortHueEntry,sortHueEntry),sortHueEntry*>(v9 + 2, &v9[v14 + 1], a2 - 3, (unsigned int (**)(_QWORD))a3);
            std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,BOOL (*&)(sortHueEntry,sortHueEntry),sortHueEntry*>(v15 - 1, v15, &v9[v14 + 1], (unsigned int (**)(_QWORD))a3);
            v16 = *v9;
            *v9 = *v15;
            *v15 = v16;
            if ((a5 & 1) != 0)
              goto LABEL_12;
          }
          if (((*a3)(*(v9 - 1), *v9) & 1) == 0)
          {
            result = (uint64_t)std::__partition_with_equals_on_left[abi:ne180100]<std::_ClassicAlgPolicy,sortHueEntry *,BOOL (*&)(sortHueEntry,sortHueEntry)>(v9, a2, a3);
            v9 = (uint64_t *)result;
            goto LABEL_17;
          }
LABEL_12:
          v17 = std::__partition_with_equals_on_right[abi:ne180100]<std::_ClassicAlgPolicy,sortHueEntry *,BOOL (*&)(sortHueEntry,sortHueEntry)>(v9, a2, a3);
          if ((v18 & 1) == 0)
            goto LABEL_15;
          v19 = std::__insertion_sort_incomplete[abi:ne180100]<std::_ClassicAlgPolicy,BOOL (*&)(sortHueEntry,sortHueEntry),sortHueEntry*>(v9, v17, (unsigned int (**)(_QWORD))a3);
          v9 = v17 + 1;
          result = std::__insertion_sort_incomplete[abi:ne180100]<std::_ClassicAlgPolicy,BOOL (*&)(sortHueEntry,sortHueEntry),sortHueEntry*>(v17 + 1, a2, (unsigned int (**)(_QWORD))a3);
          if (!(_DWORD)result)
          {
            v10 = v11 + 1;
            if (v19)
              continue;
LABEL_15:
            result = std::__introsort<std::_ClassicAlgPolicy,BOOL (*&)(sortHueEntry,sortHueEntry),sortHueEntry*,false>(v8, v17, a3, -v11, a5 & 1);
            v9 = v17 + 1;
LABEL_17:
            a5 = 0;
            a4 = -v11;
            goto LABEL_3;
          }
          a4 = -v11;
          a2 = v17;
          if (v19)
            return result;
          goto LABEL_2;
        }
        if (v9 != a2)
          return (uint64_t)std::__partial_sort_impl[abi:ne180100]<std::_ClassicAlgPolicy,BOOL (*&)(sortHueEntry,sortHueEntry),sortHueEntry*,sortHueEntry*>((char *)v9, (char *)a2, a2, a3);
        return result;
    }
  }
}

uint64_t std::__insertion_sort[abi:ne180100]<std::_ClassicAlgPolicy,BOOL (*&)(sortHueEntry,sortHueEntry),sortHueEntry*>(uint64_t result, uint64_t *a2, uint64_t (**a3)(uint64_t, uint64_t))
{
  _QWORD *v4;
  uint64_t *v5;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;

  if ((uint64_t *)result != a2)
  {
    v4 = (_QWORD *)result;
    v5 = (uint64_t *)(result + 8);
    if ((uint64_t *)(result + 8) != a2)
    {
      v7 = 0;
      v8 = (uint64_t *)result;
      do
      {
        v10 = *v8;
        v9 = v8[1];
        v8 = v5;
        result = (*a3)(v9, v10);
        if ((_DWORD)result)
        {
          v11 = *v8;
          v12 = v7;
          while (1)
          {
            *(_QWORD *)((char *)v4 + v12 + 8) = *(_QWORD *)((char *)v4 + v12);
            if (!v12)
              break;
            result = (*a3)(v11, *(_QWORD *)((char *)v4 + v12 - 8));
            v12 -= 8;
            if ((result & 1) == 0)
            {
              v13 = (_QWORD *)((char *)v4 + v12 + 8);
              goto LABEL_10;
            }
          }
          v13 = v4;
LABEL_10:
          *v13 = v11;
        }
        v5 = v8 + 1;
        v7 += 8;
      }
      while (v8 + 1 != a2);
    }
  }
  return result;
}

uint64_t std::__insertion_sort_unguarded[abi:ne180100]<std::_ClassicAlgPolicy,BOOL (*&)(sortHueEntry,sortHueEntry),sortHueEntry*>(uint64_t result, _QWORD *a2, uint64_t (**a3)(uint64_t, uint64_t))
{
  _QWORD *v4;
  _QWORD *i;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;

  if ((_QWORD *)result != a2)
  {
    v4 = (_QWORD *)result;
    for (i = (_QWORD *)(result + 8); v4 + 1 != a2; i = v4 + 1)
    {
      v8 = *v4;
      v7 = v4[1];
      v4 = i;
      result = (*a3)(v7, v8);
      if ((_DWORD)result)
      {
        v9 = *v4;
        v10 = v4;
        do
        {
          v11 = v10;
          v12 = *--v10;
          *v11 = v12;
          result = (*a3)(v9, *(v11 - 2));
        }
        while ((result & 1) != 0);
        *v10 = v9;
      }
    }
  }
  return result;
}

uint64_t std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,BOOL (*&)(sortHueEntry,sortHueEntry),sortHueEntry*>(_QWORD *a1, _QWORD *a2, _QWORD *a3, unsigned int (**a4)(_QWORD))
{
  char v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v8 = ((uint64_t (*)(_QWORD, _QWORD))*a4)(*a2, *a1);
  result = ((uint64_t (*)(_QWORD, _QWORD))*a4)(*a3, *a2);
  if ((v8 & 1) == 0)
  {
    if (!(_DWORD)result)
      return result;
    v11 = *a2;
    *a2 = *a3;
    *a3 = v11;
    if (!((unsigned int (*)(_QWORD, _QWORD))*a4)(*a2, *a1))
      return 1;
    v12 = *a1;
    *a1 = *a2;
    *a2 = v12;
    return 2;
  }
  v10 = *a1;
  if (!(_DWORD)result)
  {
    *a1 = *a2;
    *a2 = v10;
    if (!(*a4)(*a3))
      return 1;
    v13 = *a2;
    *a2 = *a3;
    *a3 = v13;
    return 2;
  }
  *a1 = *a3;
  *a3 = v10;
  return 1;
}

uint64_t *std::__partition_with_equals_on_left[abi:ne180100]<std::_ClassicAlgPolicy,sortHueEntry *,BOOL (*&)(sortHueEntry,sortHueEntry)>(uint64_t *a1, uint64_t *a2, uint64_t (**a3)(uint64_t, uint64_t))
{
  uint64_t *v4;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v4 = a2;
  v6 = *a1;
  if (((*a3)(*a1, *(a2 - 1)) & 1) != 0)
  {
    v7 = a1;
    do
    {
      v8 = v7[1];
      ++v7;
    }
    while (((*a3)(v6, v8) & 1) == 0);
  }
  else
  {
    v9 = a1 + 1;
    do
    {
      v7 = v9;
      if (v9 >= v4)
        break;
      ++v9;
    }
    while (!(*a3)(v6, *v7));
  }
  if (v7 < v4)
  {
    do
      v10 = *--v4;
    while (((*a3)(v6, v10) & 1) != 0);
  }
  while (v7 < v4)
  {
    v11 = *v7;
    *v7 = *v4;
    *v4 = v11;
    do
    {
      v12 = v7[1];
      ++v7;
    }
    while (!(*a3)(v6, v12));
    do
      v13 = *--v4;
    while (((*a3)(v6, v13) & 1) != 0);
  }
  if (v7 - 1 != a1)
    *a1 = *(v7 - 1);
  *(v7 - 1) = v6;
  return v7;
}

uint64_t *std::__partition_with_equals_on_right[abi:ne180100]<std::_ClassicAlgPolicy,sortHueEntry *,BOOL (*&)(sortHueEntry,sortHueEntry)>(uint64_t *a1, uint64_t *a2, uint64_t (**a3)(uint64_t, uint64_t))
{
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t *v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v6 = 0;
  v7 = *a1;
  do
    v8 = (*a3)(a1[++v6], v7);
  while ((v8 & 1) != 0);
  v9 = &a1[v6];
  v10 = &a1[v6 - 1];
  if (v6 == 1)
  {
    do
    {
      if (v9 >= a2)
        break;
      v12 = *--a2;
    }
    while (((*a3)(v12, v7) & 1) == 0);
  }
  else
  {
    do
      v11 = *--a2;
    while (!(*a3)(v11, v7));
  }
  if (v9 < a2)
  {
    v13 = &a1[v6];
    v14 = a2;
    do
    {
      v15 = *v13;
      *v13 = *v14;
      *v14 = v15;
      do
      {
        v16 = v13[1];
        ++v13;
      }
      while (((*a3)(v16, v7) & 1) != 0);
      do
        v17 = *--v14;
      while (!(*a3)(v17, v7));
    }
    while (v13 < v14);
    v10 = v13 - 1;
  }
  if (v10 != a1)
    *a1 = *v10;
  *v10 = v7;
  return v10;
}

BOOL std::__insertion_sort_incomplete[abi:ne180100]<std::_ClassicAlgPolicy,BOOL (*&)(sortHueEntry,sortHueEntry),sortHueEntry*>(_QWORD *a1, _QWORD *a2, unsigned int (**a3)(_QWORD))
{
  uint64_t v6;
  _BOOL8 result;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  _QWORD *v16;

  v6 = a2 - a1;
  result = 1;
  switch(v6)
  {
    case 0:
    case 1:
      return result;
    case 2:
      if (((unsigned int (*)(_QWORD, _QWORD))*a3)(*(a2 - 1), *a1))
      {
        v8 = *a1;
        *a1 = *(a2 - 1);
        *(a2 - 1) = v8;
      }
      return 1;
    case 3:
      std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,BOOL (*&)(sortHueEntry,sortHueEntry),sortHueEntry*>(a1, a1 + 1, a2 - 1, a3);
      return 1;
    case 4:
      std::__sort4[abi:ne180100]<std::_ClassicAlgPolicy,BOOL (*&)(sortHueEntry,sortHueEntry),sortHueEntry*>(a1, a1 + 1, a1 + 2, a2 - 1, a3);
      return 1;
    case 5:
      std::__sort5[abi:ne180100]<std::_ClassicAlgPolicy,BOOL (*&)(sortHueEntry,sortHueEntry),sortHueEntry*>(a1, a1 + 1, a1 + 2, a1 + 3, a2 - 1, a3);
      return 1;
    default:
      v9 = a1 + 2;
      std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,BOOL (*&)(sortHueEntry,sortHueEntry),sortHueEntry*>(a1, a1 + 1, a1 + 2, a3);
      v10 = a1 + 3;
      if (a1 + 3 == a2)
        return 1;
      v11 = 0;
      v12 = 0;
      break;
  }
  while (1)
  {
    if (((unsigned int (*)(_QWORD, _QWORD))*a3)(*v10, *v9))
    {
      v13 = *v10;
      v14 = v11;
      while (1)
      {
        v15 = (char *)a1 + v14;
        *(_QWORD *)((char *)a1 + v14 + 24) = *(_QWORD *)((char *)a1 + v14 + 16);
        if (v14 == -16)
          break;
        v14 -= 8;
        if ((((uint64_t (*)(uint64_t, _QWORD))*a3)(v13, *((_QWORD *)v15 + 1)) & 1) == 0)
        {
          v16 = (_QWORD *)((char *)a1 + v14 + 24);
          goto LABEL_12;
        }
      }
      v16 = a1;
LABEL_12:
      *v16 = v13;
      if (++v12 == 8)
        return v10 + 1 == a2;
    }
    v9 = v10;
    v11 += 8;
    if (++v10 == a2)
      return 1;
  }
}

uint64_t std::__sort4[abi:ne180100]<std::_ClassicAlgPolicy,BOOL (*&)(sortHueEntry,sortHueEntry),sortHueEntry*>(_QWORD *a1, _QWORD *a2, _QWORD *a3, _QWORD *a4, unsigned int (**a5)(_QWORD))
{
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,BOOL (*&)(sortHueEntry,sortHueEntry),sortHueEntry*>(a1, a2, a3, a5);
  result = ((uint64_t (*)(_QWORD, _QWORD))*a5)(*a4, *a3);
  if ((_DWORD)result)
  {
    v11 = *a3;
    *a3 = *a4;
    *a4 = v11;
    result = ((uint64_t (*)(_QWORD, _QWORD))*a5)(*a3, *a2);
    if ((_DWORD)result)
    {
      v12 = *a2;
      *a2 = *a3;
      *a3 = v12;
      result = ((uint64_t (*)(_QWORD, _QWORD))*a5)(*a2, *a1);
      if ((_DWORD)result)
      {
        v13 = *a1;
        *a1 = *a2;
        *a2 = v13;
      }
    }
  }
  return result;
}

uint64_t std::__sort5[abi:ne180100]<std::_ClassicAlgPolicy,BOOL (*&)(sortHueEntry,sortHueEntry),sortHueEntry*>(_QWORD *a1, _QWORD *a2, _QWORD *a3, _QWORD *a4, _QWORD *a5, unsigned int (**a6)(_QWORD))
{
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  std::__sort4[abi:ne180100]<std::_ClassicAlgPolicy,BOOL (*&)(sortHueEntry,sortHueEntry),sortHueEntry*>(a1, a2, a3, a4, a6);
  result = ((uint64_t (*)(_QWORD, _QWORD))*a6)(*a5, *a4);
  if ((_DWORD)result)
  {
    v13 = *a4;
    *a4 = *a5;
    *a5 = v13;
    result = ((uint64_t (*)(_QWORD, _QWORD))*a6)(*a4, *a3);
    if ((_DWORD)result)
    {
      v14 = *a3;
      *a3 = *a4;
      *a4 = v14;
      result = ((uint64_t (*)(_QWORD, _QWORD))*a6)(*a3, *a2);
      if ((_DWORD)result)
      {
        v15 = *a2;
        *a2 = *a3;
        *a3 = v15;
        result = ((uint64_t (*)(_QWORD, _QWORD))*a6)(*a2, *a1);
        if ((_DWORD)result)
        {
          v16 = *a1;
          *a1 = *a2;
          *a2 = v16;
        }
      }
    }
  }
  return result;
}

uint64_t *std::__partial_sort_impl[abi:ne180100]<std::_ClassicAlgPolicy,BOOL (*&)(sortHueEntry,sortHueEntry),sortHueEntry*,sortHueEntry*>(char *a1, char *a2, uint64_t *a3, uint64_t (**a4)(uint64_t, uint64_t))
{
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  char *v12;
  char *v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;

  if (a1 != a2)
  {
    v8 = a2 - a1;
    v9 = (a2 - a1) >> 3;
    if (a2 - a1 >= 9)
    {
      v10 = (unint64_t)(v9 - 2) >> 1;
      v11 = v10 + 1;
      v12 = &a1[8 * v10];
      do
      {
        std::__sift_down[abi:ne180100]<std::_ClassicAlgPolicy,BOOL (*&)(sortHueEntry,sortHueEntry),sortHueEntry*>((uint64_t)a1, (unsigned int (**)(_QWORD, _QWORD))a4, v9, v12);
        v12 -= 8;
        --v11;
      }
      while (v11);
    }
    v13 = a2;
    if (a2 != (char *)a3)
    {
      v14 = (uint64_t *)a2;
      do
      {
        if ((*a4)(*v14, *(_QWORD *)a1))
        {
          v15 = *v14;
          *v14 = *(_QWORD *)a1;
          *(_QWORD *)a1 = v15;
          std::__sift_down[abi:ne180100]<std::_ClassicAlgPolicy,BOOL (*&)(sortHueEntry,sortHueEntry),sortHueEntry*>((uint64_t)a1, (unsigned int (**)(_QWORD, _QWORD))a4, v9, a1);
        }
        ++v14;
      }
      while (v14 != a3);
      v13 = (char *)a3;
    }
    if (v8 >= 9)
    {
      v16 = (unint64_t)v8 >> 3;
      v17 = a2 - 8;
      do
      {
        v18 = *(_QWORD *)a1;
        v19 = (char *)std::__floyd_sift_down[abi:ne180100]<std::_ClassicAlgPolicy,BOOL (*&)(sortHueEntry,sortHueEntry),sortHueEntry*>(a1, (unsigned int (**)(_QWORD, _QWORD))a4, v16);
        if (v17 == v19)
        {
          *(_QWORD *)v19 = v18;
        }
        else
        {
          *(_QWORD *)v19 = *(_QWORD *)v17;
          *(_QWORD *)v17 = v18;
          std::__sift_up[abi:ne180100]<std::_ClassicAlgPolicy,BOOL (*&)(sortHueEntry,sortHueEntry),sortHueEntry*>((uint64_t)a1, (uint64_t)(v19 + 8), a4, (v19 + 8 - a1) >> 3);
        }
        v17 -= 8;
      }
      while (v16-- > 2);
    }
    return (uint64_t *)v13;
  }
  return a3;
}

uint64_t std::__sift_down[abi:ne180100]<std::_ClassicAlgPolicy,BOOL (*&)(sortHueEntry,sortHueEntry),sortHueEntry*>(uint64_t result, unsigned int (**a2)(_QWORD, _QWORD), uint64_t a3, _QWORD *a4)
{
  unint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  int64_t v7;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;

  v4 = a3 - 2;
  if (a3 >= 2)
  {
    v5 = a4;
    v6 = result;
    v7 = v4 >> 1;
    if ((uint64_t)(v4 >> 1) >= ((uint64_t)a4 - result) >> 3)
    {
      v10 = ((uint64_t)a4 - result) >> 2;
      v11 = v10 + 1;
      v12 = (_QWORD *)(result + 8 * (v10 + 1));
      v13 = v10 + 2;
      if (v10 + 2 < a3 && (*a2)(*v12, v12[1]))
      {
        ++v12;
        v11 = v13;
      }
      result = ((uint64_t (*)(_QWORD, _QWORD))*a2)(*v12, *v5);
      if ((result & 1) == 0)
      {
        v14 = *v5;
        do
        {
          v15 = v12;
          *v5 = *v12;
          if (v7 < v11)
            break;
          v16 = (2 * v11) | 1;
          v12 = (_QWORD *)(v6 + 8 * v16);
          if (2 * v11 + 2 < a3)
          {
            if ((*a2)(*v12, v12[1]))
            {
              ++v12;
              v16 = 2 * v11 + 2;
            }
          }
          result = ((uint64_t (*)(_QWORD, uint64_t))*a2)(*v12, v14);
          v5 = v15;
          v11 = v16;
        }
        while (!(_DWORD)result);
        *v15 = v14;
      }
    }
  }
  return result;
}

_QWORD *std::__floyd_sift_down[abi:ne180100]<std::_ClassicAlgPolicy,BOOL (*&)(sortHueEntry,sortHueEntry),sortHueEntry*>(_QWORD *a1, unsigned int (**a2)(_QWORD, _QWORD), uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;

  v6 = 0;
  v7 = a3 - 2;
  if (a3 < 2)
    v7 = a3 - 1;
  v8 = v7 >> 1;
  do
  {
    v9 = &a1[v6 + 1];
    v10 = (2 * v6) | 1;
    v11 = 2 * v6 + 2;
    if (v11 < a3 && (*a2)(a1[v6 + 1], a1[v6 + 2]))
    {
      ++v9;
      v10 = v11;
    }
    *a1 = *v9;
    a1 = v9;
    v6 = v10;
  }
  while (v10 <= v8);
  return v9;
}

uint64_t std::__sift_up[abi:ne180100]<std::_ClassicAlgPolicy,BOOL (*&)(sortHueEntry,sortHueEntry),sortHueEntry*>(uint64_t result, uint64_t a2, uint64_t (**a3)(uint64_t, uint64_t), uint64_t a4)
{
  unint64_t v4;
  uint64_t v6;
  unint64_t v7;
  uint64_t *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t *v11;

  v4 = a4 - 2;
  if (a4 >= 2)
  {
    v6 = result;
    v7 = v4 >> 1;
    v8 = (uint64_t *)(result + 8 * (v4 >> 1));
    v9 = (uint64_t *)(a2 - 8);
    result = (*a3)(*v8, *(_QWORD *)(a2 - 8));
    if ((_DWORD)result)
    {
      v10 = *v9;
      do
      {
        v11 = v8;
        *v9 = *v8;
        if (!v7)
          break;
        v7 = (v7 - 1) >> 1;
        v8 = (uint64_t *)(v6 + 8 * v7);
        result = (*a3)(*v8, v10);
        v9 = v11;
      }
      while ((result & 1) != 0);
      *v11 = v10;
    }
  }
  return result;
}

uint64_t std::vector<sortColorEntry>::__push_back_slow_path<sortColorEntry const&>(uint64_t *a1, _OWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[2];
  char *v15;
  char *v16;
  uint64_t *v17;

  v3 = *a1;
  v4 = (a1[1] - *a1) >> 5;
  v5 = v4 + 1;
  if ((unint64_t)(v4 + 1) >> 59)
    std::vector<sortHueEntry>::__throw_length_error[abi:ne180100]();
  v7 = (uint64_t)(a1 + 2);
  v8 = a1[2] - v3;
  if (v8 >> 4 > v5)
    v5 = v8 >> 4;
  if ((unint64_t)v8 >= 0x7FFFFFFFFFFFFFE0)
    v9 = 0x7FFFFFFFFFFFFFFLL;
  else
    v9 = v5;
  v17 = a1 + 2;
  if (v9)
    v10 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<sortColorEntry>>(v7, v9);
  else
    v10 = 0;
  v11 = &v10[32 * v4];
  v14[0] = v10;
  v14[1] = v11;
  v15 = v11;
  v16 = &v10[32 * v9];
  *(_OWORD *)v11 = *a2;
  JCColor::JCColor((JCColor *)(v11 + 16), (const JCColor *)(a2 + 1));
  v15 += 32;
  std::vector<sortColorEntry>::__swap_out_circular_buffer(a1, v14);
  v12 = a1[1];
  std::__split_buffer<sortColorEntry>::~__split_buffer((uint64_t)v14);
  return v12;
}

void sub_1DD2B6778(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  std::__split_buffer<sortColorEntry>::~__split_buffer((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t std::vector<sortColorEntry>::__swap_out_circular_buffer(uint64_t *a1, _QWORD *a2)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  result = std::__uninitialized_allocator_move_if_noexcept[abi:ne180100]<std::allocator<sortColorEntry>,std::reverse_iterator<sortColorEntry*>,std::reverse_iterator<sortColorEntry*>,std::reverse_iterator<sortColorEntry*>>((uint64_t)(a1 + 2), a1[1], a1[1], *a1, *a1, a2[1], a2[1]);
  a2[1] = v5;
  v6 = *a1;
  *a1 = v5;
  a2[1] = v6;
  v7 = a1[1];
  a1[1] = a2[2];
  a2[2] = v7;
  v8 = a1[2];
  a1[2] = a2[3];
  a2[3] = v8;
  *a2 = a2[1];
  return result;
}

void *std::__allocate_at_least[abi:ne180100]<std::allocator<sortColorEntry>>(uint64_t a1, unint64_t a2)
{
  if (a2 >> 59)
    std::__throw_bad_array_new_length[abi:ne180100]();
  return operator new(32 * a2);
}

uint64_t std::__uninitialized_allocator_move_if_noexcept[abi:ne180100]<std::allocator<sortColorEntry>,std::reverse_iterator<sortColorEntry*>,std::reverse_iterator<sortColorEntry*>,std::reverse_iterator<sortColorEntry*>>(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t i;
  uint64_t v12;
  JCColor *v13;

  for (i = 48; ; i -= 32)
  {
    v12 = a3 + i;
    if (a3 + i - 48 == a5)
      break;
    *(_OWORD *)(a7 + i - 80) = *(_OWORD *)(v12 - 80);
    v13 = (JCColor *)(a7 + i - 64);
    JCColor::JCColor(v13, (const JCColor *)(v12 - 64));
  }
  return a6;
}

uint64_t std::__split_buffer<sortColorEntry>::~__split_buffer(uint64_t a1)
{
  uint64_t i;
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 8);
  for (i = *(_QWORD *)(a1 + 16); i != v3; i = *(_QWORD *)(a1 + 16))
  {
    *(_QWORD *)(a1 + 16) = i - 32;
    JCColor::~JCColor((JCColor *)(i - 16));
  }
  if (*(_QWORD *)a1)
    operator delete(*(void **)a1);
  return a1;
}

void std::__introsort<std::_ClassicAlgPolicy,BOOL (*&)(sortColorEntry,sortColorEntry),sortColorEntry*,false>(CGColorRef *a1, CGColorRef *a2, uint64_t (**a3)(__int128 *, __int128 *), uint64_t a4, char a5)
{
  __int128 *v7;
  CGColorRef *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  __int128 *v13;
  CGColorRef *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(__int128 *, __int128 *);
  char v18;
  CGColorRef *v19;
  char v20;
  int v21;
  uint64_t (*v22)(__int128 *, __int128 *);
  __int128 v23;
  _BYTE v24[16];
  __int128 v25;
  _BYTE v26[24];
  CGColorRef *v27;
  __int128 v28;
  _BYTE v29[16];
  __int128 v30;
  _BYTE v31[24];
  CGColorRef *v32;
  CGColorRef *v33[2];

  v7 = (__int128 *)a2;
  v8 = a1;
  v32 = a2;
  v33[0] = a1;
  while (2)
  {
    v9 = 1 - a4;
LABEL_3:
    v10 = (char *)v7 - (char *)v8;
    v11 = ((char *)v7 - (char *)v8) >> 5;
    switch(v11)
    {
      case 0uLL:
      case 1uLL:
        return;
      case 2uLL:
        v22 = *a3;
        v32 = (CGColorRef *)(v7 - 2);
        v30 = *(v7 - 2);
        JCColor::JCColor((JCColor *)v31, (const JCColor *)(v7 - 1));
        v28 = *(_OWORD *)v33[0];
        JCColor::JCColor((JCColor *)v29, (const JCColor *)(v33[0] + 2));
        LODWORD(v22) = v22(&v30, &v28);
        JCColor::~JCColor((JCColor *)v29);
        JCColor::~JCColor((JCColor *)v31);
        if ((_DWORD)v22)
          std::_IterOps<std::_ClassicAlgPolicy>::iter_swap[abi:ne180100]<sortColorEntry *&,sortColorEntry *&>(v33, (uint64_t *)&v32);
        return;
      case 3uLL:
        v32 = (CGColorRef *)(v7 - 2);
        std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,BOOL (*&)(sortColorEntry,sortColorEntry),sortColorEntry*>(v8, v8 + 4, v7 - 2, a3);
        return;
      case 4uLL:
        v32 = (CGColorRef *)(v7 - 2);
        std::__sort4[abi:ne180100]<std::_ClassicAlgPolicy,BOOL (*&)(sortColorEntry,sortColorEntry),sortColorEntry*>(v8, v8 + 4, v8 + 8, v7 - 2, a3);
        return;
      case 5uLL:
        v32 = (CGColorRef *)(v7 - 2);
        std::__sort5[abi:ne180100]<std::_ClassicAlgPolicy,BOOL (*&)(sortColorEntry,sortColorEntry),sortColorEntry*>(v8, v8 + 4, v8 + 8, v8 + 12, v7 - 2, a3);
        return;
      default:
        if (v10 <= 767)
        {
          if ((a5 & 1) != 0)
            std::__insertion_sort[abi:ne180100]<std::_ClassicAlgPolicy,BOOL (*&)(sortColorEntry,sortColorEntry),sortColorEntry*>((__int128 *)v8, v7, a3);
          else
            std::__insertion_sort_unguarded[abi:ne180100]<std::_ClassicAlgPolicy,BOOL (*&)(sortColorEntry,sortColorEntry),sortColorEntry*>((__int128 *)v8, v7, a3);
          return;
        }
        if (v9 == 1)
        {
          if (v8 != (CGColorRef *)v7)
            std::__partial_sort_impl[abi:ne180100]<std::_ClassicAlgPolicy,BOOL (*&)(sortColorEntry,sortColorEntry),sortColorEntry*,sortColorEntry*>(v8, (CGColorRef *)v7, (CGColorRef *)v7, a3);
          return;
        }
        v12 = v11 >> 1;
        v13 = v7 - 2;
        if ((unint64_t)v10 <= 0x1000)
        {
          std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,BOOL (*&)(sortColorEntry,sortColorEntry),sortColorEntry*>(&v8[4 * (v11 >> 1)], v8, v13, a3);
          if ((a5 & 1) != 0)
          {
LABEL_11:
            v7 = (__int128 *)v32;
            goto LABEL_12;
          }
        }
        else
        {
          std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,BOOL (*&)(sortColorEntry,sortColorEntry),sortColorEntry*>(v8, &v8[4 * (v11 >> 1)], v13, a3);
          v14 = v32;
          v15 = 32 * v12 - 32;
          std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,BOOL (*&)(sortColorEntry,sortColorEntry),sortColorEntry*>(v33[0] + 4, (CGColorRef *)((char *)v33[0] + v15), (__int128 *)v32 - 4, a3);
          v16 = 32 * v12 + 32;
          std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,BOOL (*&)(sortColorEntry,sortColorEntry),sortColorEntry*>(v33[0] + 8, (CGColorRef *)((char *)v33[0] + v16), (__int128 *)v14 - 6, a3);
          std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,BOOL (*&)(sortColorEntry,sortColorEntry),sortColorEntry*>((CGColorRef *)((char *)v33[0] + v15), &v33[0][4 * v12], (__int128 *)((char *)v33[0] + v16), a3);
          v27 = &v33[0][4 * v12];
          std::_IterOps<std::_ClassicAlgPolicy>::iter_swap[abi:ne180100]<sortColorEntry *&,sortColorEntry *>(v33, (uint64_t *)&v27);
          if ((a5 & 1) != 0)
            goto LABEL_11;
        }
        v17 = *a3;
        v25 = *((_OWORD *)v33[0] - 2);
        JCColor::JCColor((JCColor *)v26, (const JCColor *)(v33[0] - 2));
        v23 = *(_OWORD *)v33[0];
        JCColor::JCColor((JCColor *)v24, (const JCColor *)(v33[0] + 2));
        v18 = v17(&v25, &v23);
        JCColor::~JCColor((JCColor *)v24);
        JCColor::~JCColor((JCColor *)v26);
        v7 = (__int128 *)v32;
        if ((v18 & 1) == 0)
        {
          v8 = std::__partition_with_equals_on_left[abi:ne180100]<std::_ClassicAlgPolicy,sortColorEntry *,BOOL (*&)(sortColorEntry,sortColorEntry)>(v33[0], v32, a3);
          goto LABEL_20;
        }
LABEL_12:
        v19 = std::__partition_with_equals_on_right[abi:ne180100]<std::_ClassicAlgPolicy,sortColorEntry *,BOOL (*&)(sortColorEntry,sortColorEntry)>(v33[0], (CGColorRef *)v7, a3);
        if ((v20 & 1) == 0)
          goto LABEL_19;
        v21 = std::__insertion_sort_incomplete[abi:ne180100]<std::_ClassicAlgPolicy,BOOL (*&)(sortColorEntry,sortColorEntry),sortColorEntry*>(v33[0], (uint64_t)v19, a3);
        v8 = v19 + 4;
        if (!std::__insertion_sort_incomplete[abi:ne180100]<std::_ClassicAlgPolicy,BOOL (*&)(sortColorEntry,sortColorEntry),sortColorEntry*>(v19 + 4, (uint64_t)v7, a3))
        {
          if (v21)
          {
            v33[0] = v19 + 4;
            goto LABEL_18;
          }
LABEL_19:
          std::__introsort<std::_ClassicAlgPolicy,BOOL (*&)(sortColorEntry,sortColorEntry),sortColorEntry*,false>(v33[0], v19, a3, -v9, a5 & 1);
          v8 = v19 + 4;
LABEL_20:
          a5 = 0;
          v33[0] = v8;
          a4 = -v9;
          continue;
        }
        if ((v21 & 1) == 0)
        {
          v32 = v19;
          v8 = v33[0];
          v7 = (__int128 *)v19;
LABEL_18:
          ++v9;
          goto LABEL_3;
        }
        return;
    }
  }
}

void sub_1DD2B6C90(_Unwind_Exception *a1)
{
  JCColor *v1;
  JCColor *v2;

  JCColor::~JCColor(v2);
  JCColor::~JCColor(v1);
  _Unwind_Resume(a1);
}

void std::_IterOps<std::_ClassicAlgPolicy>::iter_swap[abi:ne180100]<sortColorEntry *&,sortColorEntry *&>(CGColorRef **a1, uint64_t *a2)
{
  CGColorRef *v2;
  uint64_t v3;
  __int128 v4;
  CGColorRef v5[2];

  v2 = *a1;
  v3 = *a2;
  v4 = *(_OWORD *)*a1;
  JCColor::JCColor((JCColor *)v5, (const JCColor *)(*a1 + 2));
  *(_OWORD *)v2 = *(_OWORD *)v3;
  JCColor::operator=(v2 + 2, (CGColorRef *)(v3 + 16));
  *(_OWORD *)v3 = v4;
  JCColor::operator=((CGColorRef *)(v3 + 16), v5);
  JCColor::~JCColor((JCColor *)v5);
}

void sub_1DD2B6D40(_Unwind_Exception *a1)
{
  JCColor *v1;

  JCColor::~JCColor(v1);
  _Unwind_Resume(a1);
}

void std::__insertion_sort[abi:ne180100]<std::_ClassicAlgPolicy,BOOL (*&)(sortColorEntry,sortColorEntry),sortColorEntry*>(__int128 *a1, __int128 *a2, uint64_t (**a3)(__int128 *, __int128 *))
{
  __int128 *v4;
  uint64_t v6;
  __int128 *v7;
  __int128 *v8;
  uint64_t (*v9)(__int128 *, __int128 *);
  const JCColor *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t (*v14)(__int128 *, __int128 *);
  __int128 *v15;
  __int128 *v17;
  __int128 v18;
  _BYTE v19[16];
  __int128 v20;
  _BYTE v21[16];
  __int128 v22;
  CGColorRef v23[2];
  __int128 v24;
  _BYTE v25[16];
  __int128 v26;
  _BYTE v27[32];

  if (a1 != a2)
  {
    v4 = a1 + 2;
    if (a1 + 2 != a2)
    {
      v6 = 0;
      v7 = a1;
      do
      {
        v8 = v7;
        v9 = *a3;
        v17 = v4;
        v26 = *v4;
        v10 = (const JCColor *)(v7 + 3);
        JCColor::JCColor((JCColor *)v27, (const JCColor *)(v7 + 3));
        v24 = *v8;
        JCColor::JCColor((JCColor *)v25, (const JCColor *)(v8 + 1));
        LODWORD(v9) = v9(&v26, &v24);
        JCColor::~JCColor((JCColor *)v25);
        JCColor::~JCColor((JCColor *)v27);
        if ((_DWORD)v9)
        {
          v22 = *v17;
          JCColor::JCColor((JCColor *)v23, v10);
          v11 = v6;
          while (1)
          {
            v12 = v11;
            v13 = (char *)a1 + v11;
            *((_OWORD *)v13 + 2) = *(_OWORD *)v13;
            JCColor::operator=((CGColorRef *)v13 + 6, (CGColorRef *)v13 + 2);
            if (!v12)
              break;
            v14 = *a3;
            v20 = v22;
            JCColor::JCColor((JCColor *)v21, (const JCColor *)v23);
            v18 = *(__int128 *)((char *)a1 + v12 - 32);
            JCColor::JCColor((JCColor *)v19, (const JCColor *)((char *)a1 + v12 - 16));
            LOBYTE(v14) = v14(&v20, &v18);
            JCColor::~JCColor((JCColor *)v19);
            JCColor::~JCColor((JCColor *)v21);
            v11 = v12 - 32;
            if ((v14 & 1) == 0)
            {
              v15 = (__int128 *)((char *)a1 + v12);
              goto LABEL_10;
            }
          }
          v15 = a1;
LABEL_10:
          *v15 = v22;
          JCColor::operator=((CGColorRef *)((char *)a1 + v12 + 16), v23);
          JCColor::~JCColor((JCColor *)v23);
        }
        v7 = v17;
        v4 = v17 + 2;
        v6 += 32;
      }
      while (v17 + 2 != a2);
    }
  }
}

void sub_1DD2B6F24(_Unwind_Exception *a1)
{
  JCColor *v1;

  JCColor::~JCColor(v1);
  _Unwind_Resume(a1);
}

void std::__insertion_sort_unguarded[abi:ne180100]<std::_ClassicAlgPolicy,BOOL (*&)(sortColorEntry,sortColorEntry),sortColorEntry*>(__int128 *a1, __int128 *a2, uint64_t (**a3)(__int128 *, __int128 *))
{
  __int128 *v3;
  __int128 *v4;
  CGColorRef *v6;
  __int128 *v7;
  uint64_t (*v8)(__int128 *, __int128 *);
  CGColorRef *v9;
  uint64_t (*v10)(__int128 *, __int128 *);
  __int128 v12;
  _BYTE v13[16];
  __int128 v14;
  _BYTE v15[16];
  __int128 v16;
  CGColorRef v17[2];
  __int128 v18;
  _BYTE v19[16];
  __int128 v20;
  _BYTE v21[32];

  if (a1 != a2)
  {
    v3 = a1;
    v4 = a1 + 2;
    if (a1 + 2 != a2)
    {
      v6 = (CGColorRef *)(a1 + 1);
      do
      {
        v7 = v3;
        v3 = v4;
        v8 = *a3;
        v20 = *v4;
        JCColor::JCColor((JCColor *)v21, (const JCColor *)(v7 + 3));
        v18 = *v7;
        JCColor::JCColor((JCColor *)v19, (const JCColor *)(v7 + 1));
        LODWORD(v8) = v8(&v20, &v18);
        JCColor::~JCColor((JCColor *)v19);
        JCColor::~JCColor((JCColor *)v21);
        if ((_DWORD)v8)
        {
          v16 = *v3;
          JCColor::JCColor((JCColor *)v17, (const JCColor *)(v7 + 3));
          v9 = v6;
          do
          {
            *((_OWORD *)v9 + 1) = *((_OWORD *)v9 - 1);
            JCColor::operator=(v9 + 4, v9);
            v10 = *a3;
            v14 = v16;
            JCColor::JCColor((JCColor *)v15, (const JCColor *)v17);
            v12 = *((_OWORD *)v9 - 3);
            v9 -= 4;
            JCColor::JCColor((JCColor *)v13, (const JCColor *)v9);
            LOBYTE(v10) = v10(&v14, &v12);
            JCColor::~JCColor((JCColor *)v13);
            JCColor::~JCColor((JCColor *)v15);
          }
          while ((v10 & 1) != 0);
          *((_OWORD *)v9 + 1) = v16;
          JCColor::operator=(v9 + 4, v17);
          JCColor::~JCColor((JCColor *)v17);
        }
        v4 = v3 + 2;
        v6 += 4;
      }
      while (v3 + 2 != a2);
    }
  }
}

void sub_1DD2B7118(_Unwind_Exception *a1)
{
  JCColor *v1;

  JCColor::~JCColor(v1);
  _Unwind_Resume(a1);
}

uint64_t std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,BOOL (*&)(sortColorEntry,sortColorEntry),sortColorEntry*>(CGColorRef *a1, CGColorRef *a2, __int128 *a3, uint64_t (**a4)(__int128 *, __int128 *))
{
  CGColorRef *v6;
  uint64_t (*v7)(__int128 *, __int128 *);
  uint64_t (*v8)(__int128 *, __int128 *);
  const JCColor *v9;
  int v10;
  char v11;
  uint64_t (*v12)(__int128 *, __int128 *);
  CGColorRef **v13;
  uint64_t *v14;
  uint64_t (*v15)(__int128 *, __int128 *);
  __int128 v17;
  _BYTE v18[16];
  __int128 v19;
  _BYTE v20[16];
  __int128 v21;
  _BYTE v22[16];
  __int128 v23;
  _BYTE v24[16];
  __int128 v25;
  _BYTE v26[16];
  __int128 v27;
  _BYTE v28[16];
  __int128 v29;
  _BYTE v30[16];
  __int128 v31;
  _BYTE v32[16];
  __int128 v33;
  _BYTE v34[16];
  __int128 v35;
  _BYTE v36[24];
  __int128 *v37;
  CGColorRef *v38;
  CGColorRef *v39;

  v6 = a1;
  v38 = a2;
  v39 = a1;
  v37 = a3;
  v7 = *a4;
  v35 = *(_OWORD *)a2;
  JCColor::JCColor((JCColor *)v36, (const JCColor *)(a2 + 2));
  v33 = *(_OWORD *)v6;
  JCColor::JCColor((JCColor *)v34, (const JCColor *)(v6 + 2));
  LOBYTE(v6) = v7(&v35, &v33);
  JCColor::~JCColor((JCColor *)v34);
  JCColor::~JCColor((JCColor *)v36);
  v8 = *a4;
  v9 = (const JCColor *)(a3 + 1);
  if ((v6 & 1) != 0)
  {
    v23 = *a3;
    JCColor::JCColor((JCColor *)v24, v9);
    v21 = *(_OWORD *)v38;
    JCColor::JCColor((JCColor *)v22, (const JCColor *)(v38 + 2));
    v10 = v8(&v23, &v21);
    JCColor::~JCColor((JCColor *)v22);
    JCColor::~JCColor((JCColor *)v24);
    if (v10)
    {
      std::_IterOps<std::_ClassicAlgPolicy>::iter_swap[abi:ne180100]<sortColorEntry *&,sortColorEntry *&>(&v39, (uint64_t *)&v37);
      return 1;
    }
    std::_IterOps<std::_ClassicAlgPolicy>::iter_swap[abi:ne180100]<sortColorEntry *&,sortColorEntry *&>(&v39, (uint64_t *)&v38);
    v15 = *a4;
    v19 = *v37;
    JCColor::JCColor((JCColor *)v20, (const JCColor *)(v37 + 1));
    v17 = *(_OWORD *)v38;
    JCColor::JCColor((JCColor *)v18, (const JCColor *)(v38 + 2));
    LODWORD(v15) = v15(&v19, &v17);
    JCColor::~JCColor((JCColor *)v18);
    JCColor::~JCColor((JCColor *)v20);
    if (!(_DWORD)v15)
      return 1;
    v13 = &v38;
    v14 = (uint64_t *)&v37;
LABEL_9:
    std::_IterOps<std::_ClassicAlgPolicy>::iter_swap[abi:ne180100]<sortColorEntry *&,sortColorEntry *&>(v13, v14);
    return 2;
  }
  v31 = *a3;
  JCColor::JCColor((JCColor *)v32, v9);
  v29 = *(_OWORD *)v38;
  JCColor::JCColor((JCColor *)v30, (const JCColor *)(v38 + 2));
  v11 = v8(&v31, &v29);
  JCColor::~JCColor((JCColor *)v30);
  JCColor::~JCColor((JCColor *)v32);
  if ((v11 & 1) != 0)
  {
    std::_IterOps<std::_ClassicAlgPolicy>::iter_swap[abi:ne180100]<sortColorEntry *&,sortColorEntry *&>(&v38, (uint64_t *)&v37);
    v12 = *a4;
    v27 = *(_OWORD *)v38;
    JCColor::JCColor((JCColor *)v28, (const JCColor *)(v38 + 2));
    v25 = *(_OWORD *)v39;
    JCColor::JCColor((JCColor *)v26, (const JCColor *)(v39 + 2));
    LODWORD(v12) = v12(&v27, &v25);
    JCColor::~JCColor((JCColor *)v26);
    JCColor::~JCColor((JCColor *)v28);
    if (!(_DWORD)v12)
      return 1;
    v13 = &v39;
    v14 = (uint64_t *)&v38;
    goto LABEL_9;
  }
  return 0;
}

void sub_1DD2B73F4(_Unwind_Exception *a1)
{
  JCColor *v1;
  JCColor *v2;

  JCColor::~JCColor(v2);
  JCColor::~JCColor(v1);
  _Unwind_Resume(a1);
}

void std::_IterOps<std::_ClassicAlgPolicy>::iter_swap[abi:ne180100]<sortColorEntry *&,sortColorEntry *>(CGColorRef **a1, uint64_t *a2)
{
  CGColorRef *v2;
  uint64_t v3;
  __int128 v4;
  CGColorRef v5[2];

  v2 = *a1;
  v3 = *a2;
  v4 = *(_OWORD *)*a1;
  JCColor::JCColor((JCColor *)v5, (const JCColor *)(*a1 + 2));
  *(_OWORD *)v2 = *(_OWORD *)v3;
  JCColor::operator=(v2 + 2, (CGColorRef *)(v3 + 16));
  *(_OWORD *)v3 = v4;
  JCColor::operator=((CGColorRef *)(v3 + 16), v5);
  JCColor::~JCColor((JCColor *)v5);
}

void sub_1DD2B74C4(_Unwind_Exception *a1)
{
  JCColor *v1;

  JCColor::~JCColor(v1);
  _Unwind_Resume(a1);
}

CGColorRef *std::__partition_with_equals_on_left[abi:ne180100]<std::_ClassicAlgPolicy,sortColorEntry *,BOOL (*&)(sortColorEntry,sortColorEntry)>(CGColorRef *a1, CGColorRef *a2, uint64_t (**a3)(__int128 *, __int128 *))
{
  CGColorRef *v4;
  CGColorRef *v6;
  uint64_t (*v7)(__int128 *, __int128 *);
  CGColorRef *v8;
  uint64_t (*v9)(__int128 *, __int128 *);
  CGColorRef *v10;
  CGColorRef *v11;
  CGColorRef *v12;
  uint64_t (*v13)(__int128 *, __int128 *);
  CGColorRef *v14;
  uint64_t (*v15)(__int128 *, __int128 *);
  uint64_t (*v16)(__int128 *, __int128 *);
  uint64_t (*v17)(__int128 *, __int128 *);
  CGColorRef *v18;
  CGColorRef *v19;
  __int128 v21;
  _BYTE v22[16];
  __int128 v23;
  _BYTE v24[16];
  __int128 v25;
  _BYTE v26[16];
  __int128 v27;
  _BYTE v28[16];
  __int128 v29;
  _BYTE v30[16];
  __int128 v31;
  _BYTE v32[16];
  __int128 v33;
  _BYTE v34[16];
  __int128 v35;
  _BYTE v36[16];
  __int128 v37;
  _BYTE v38[16];
  __int128 v39;
  _BYTE v40[16];
  __int128 v41;
  _BYTE v42[16];
  __int128 v43;
  _BYTE v44[16];
  __int128 v45;
  CGColorRef v46[2];
  CGColorRef *v47;
  CGColorRef *v48;

  v4 = a2;
  v47 = a2;
  v48 = a1;
  v45 = *(_OWORD *)a1;
  v6 = a1 + 2;
  JCColor::JCColor((JCColor *)v46, (const JCColor *)(a1 + 2));
  v7 = *a3;
  v43 = v45;
  JCColor::JCColor((JCColor *)v44, (const JCColor *)v46);
  v41 = *((_OWORD *)v4 - 2);
  JCColor::JCColor((JCColor *)v42, (const JCColor *)(v4 - 2));
  LOBYTE(v7) = v7(&v43, &v41);
  JCColor::~JCColor((JCColor *)v42);
  JCColor::~JCColor((JCColor *)v44);
  if ((v7 & 1) != 0)
  {
    v8 = a1 + 4;
    do
    {
      v48 = v8;
      v9 = *a3;
      v39 = v45;
      JCColor::JCColor((JCColor *)v40, (const JCColor *)v46);
      v37 = *(_OWORD *)v8;
      JCColor::JCColor((JCColor *)v38, (const JCColor *)(v8 + 2));
      LOBYTE(v9) = v9(&v39, &v37);
      JCColor::~JCColor((JCColor *)v38);
      JCColor::~JCColor((JCColor *)v40);
      v8 += 4;
    }
    while ((v9 & 1) == 0);
    v10 = v47;
    v11 = v8 - 4;
    v4 = v47;
  }
  else
  {
    v12 = a1 + 4;
    do
    {
      v11 = v12;
      v48 = v12;
      if (v12 >= v4)
        break;
      v13 = *a3;
      v35 = v45;
      JCColor::JCColor((JCColor *)v36, (const JCColor *)v46);
      v33 = *(_OWORD *)v11;
      JCColor::JCColor((JCColor *)v34, (const JCColor *)(v11 + 2));
      LOBYTE(v13) = v13(&v35, &v33);
      JCColor::~JCColor((JCColor *)v34);
      JCColor::~JCColor((JCColor *)v36);
      v12 = v11 + 4;
    }
    while ((v13 & 1) == 0);
    v10 = v47;
  }
  if (v11 < v4)
  {
    v14 = v10 - 4;
    do
    {
      v47 = v14;
      v15 = *a3;
      v31 = v45;
      JCColor::JCColor((JCColor *)v32, (const JCColor *)v46);
      v29 = *(_OWORD *)v14;
      JCColor::JCColor((JCColor *)v30, (const JCColor *)(v14 + 2));
      LOBYTE(v15) = v15(&v31, &v29);
      JCColor::~JCColor((JCColor *)v30);
      JCColor::~JCColor((JCColor *)v32);
      v14 -= 4;
    }
    while ((v15 & 1) != 0);
    v10 = v47;
    v11 = v48;
  }
  if (v11 < v10)
  {
    do
    {
      std::_IterOps<std::_ClassicAlgPolicy>::iter_swap[abi:ne180100]<sortColorEntry *&,sortColorEntry *&>(&v48, (uint64_t *)&v47);
      do
      {
        v48 += 4;
        v16 = *a3;
        v27 = v45;
        JCColor::JCColor((JCColor *)v28, (const JCColor *)v46);
        v25 = *(_OWORD *)v48;
        JCColor::JCColor((JCColor *)v26, (const JCColor *)(v48 + 2));
        LODWORD(v16) = v16(&v27, &v25);
        JCColor::~JCColor((JCColor *)v26);
        JCColor::~JCColor((JCColor *)v28);
      }
      while (!(_DWORD)v16);
      do
      {
        v47 -= 4;
        v17 = *a3;
        v23 = v45;
        JCColor::JCColor((JCColor *)v24, (const JCColor *)v46);
        v21 = *(_OWORD *)v47;
        JCColor::JCColor((JCColor *)v22, (const JCColor *)(v47 + 2));
        LOBYTE(v17) = v17(&v23, &v21);
        JCColor::~JCColor((JCColor *)v22);
        JCColor::~JCColor((JCColor *)v24);
      }
      while ((v17 & 1) != 0);
      v11 = v48;
    }
    while (v48 < v47);
  }
  v18 = v11 - 4;
  if (v11 - 4 != a1)
  {
    *(_OWORD *)a1 = *(_OWORD *)v18;
    JCColor::operator=(v6, v11 - 2);
  }
  *(_OWORD *)v18 = v45;
  JCColor::operator=(v11 - 2, v46);
  v19 = v48;
  JCColor::~JCColor((JCColor *)v46);
  return v19;
}

void sub_1DD2B785C(_Unwind_Exception *a1)
{
  JCColor *v1;
  JCColor *v2;
  JCColor *v3;

  JCColor::~JCColor(v3);
  JCColor::~JCColor(v2);
  JCColor::~JCColor(v1);
  _Unwind_Resume(a1);
}

CGColorRef *std::__partition_with_equals_on_right[abi:ne180100]<std::_ClassicAlgPolicy,sortColorEntry *,BOOL (*&)(sortColorEntry,sortColorEntry)>(CGColorRef *a1, CGColorRef *a2, uint64_t (**a3)(__int128 *, __int128 *))
{
  CGColorRef *v5;
  uint64_t v6;
  uint64_t (*v7)(__int128 *, __int128 *);
  CGColorRef *v8;
  uint64_t (*v9)(__int128 *, __int128 *);
  CGColorRef *v10;
  CGColorRef *v11;
  uint64_t (*v12)(__int128 *, __int128 *);
  CGColorRef *v13;
  CGColorRef *v14;
  uint64_t (*v15)(__int128 *, __int128 *);
  CGColorRef *v16;
  uint64_t (*v17)(__int128 *, __int128 *);
  CGColorRef *v18;
  __int128 v20;
  _BYTE v21[16];
  __int128 v22;
  _BYTE v23[16];
  __int128 v24;
  _BYTE v25[16];
  __int128 v26;
  _BYTE v27[16];
  __int128 v28;
  _BYTE v29[16];
  __int128 v30;
  _BYTE v31[16];
  __int128 v32;
  _BYTE v33[16];
  __int128 v34;
  _BYTE v35[16];
  __int128 v36;
  _BYTE v37[16];
  __int128 v38;
  _BYTE v39[16];
  __int128 v40;
  CGColorRef v41[3];
  CGColorRef *v42;
  CGColorRef *v43;

  v42 = a2;
  v40 = *(_OWORD *)a1;
  v5 = a1 + 2;
  JCColor::JCColor((JCColor *)v41, (const JCColor *)(a1 + 2));
  v6 = 0;
  do
  {
    v43 = &a1[v6 + 4];
    v7 = *a3;
    v38 = *(_OWORD *)v43;
    JCColor::JCColor((JCColor *)v39, (const JCColor *)&a1[v6 + 6]);
    v36 = v40;
    JCColor::JCColor((JCColor *)v37, (const JCColor *)v41);
    LOBYTE(v7) = v7(&v38, &v36);
    JCColor::~JCColor((JCColor *)v37);
    JCColor::~JCColor((JCColor *)v39);
    v6 += 4;
  }
  while ((v7 & 1) != 0);
  if (v6 == 4)
  {
    v10 = a1 + 4;
    v11 = v42 - 4;
    do
    {
      if (v10 >= v11 + 4)
        break;
      v12 = *a3;
      v42 = v11;
      v34 = *(_OWORD *)v11;
      JCColor::JCColor((JCColor *)v35, (const JCColor *)(v11 + 2));
      v32 = v40;
      JCColor::JCColor((JCColor *)v33, (const JCColor *)v41);
      LOBYTE(v12) = v12(&v34, &v32);
      JCColor::~JCColor((JCColor *)v33);
      JCColor::~JCColor((JCColor *)v35);
      v11 -= 4;
    }
    while ((v12 & 1) == 0);
  }
  else
  {
    v8 = v42 - 4;
    do
    {
      v42 = v8;
      v9 = *a3;
      v30 = *(_OWORD *)v8;
      JCColor::JCColor((JCColor *)v31, (const JCColor *)(v8 + 2));
      v28 = v40;
      JCColor::JCColor((JCColor *)v29, (const JCColor *)v41);
      LOBYTE(v9) = v9(&v30, &v28);
      JCColor::~JCColor((JCColor *)v29);
      JCColor::~JCColor((JCColor *)v31);
      v8 -= 4;
    }
    while ((v9 & 1) == 0);
    v10 = v43;
  }
  v13 = v10;
  if (v10 < v42)
  {
    do
    {
      std::_IterOps<std::_ClassicAlgPolicy>::iter_swap[abi:ne180100]<sortColorEntry *&,sortColorEntry *&>(&v43, (uint64_t *)&v42);
      do
      {
        v14 = v43;
        v43 += 4;
        v15 = *a3;
        v26 = *(_OWORD *)v43;
        JCColor::JCColor((JCColor *)v27, (const JCColor *)(v14 + 6));
        v24 = v40;
        JCColor::JCColor((JCColor *)v25, (const JCColor *)v41);
        LOBYTE(v15) = v15(&v26, &v24);
        JCColor::~JCColor((JCColor *)v25);
        JCColor::~JCColor((JCColor *)v27);
      }
      while ((v15 & 1) != 0);
      do
      {
        v16 = v42;
        v42 -= 4;
        v17 = *a3;
        v22 = *(_OWORD *)v42;
        JCColor::JCColor((JCColor *)v23, (const JCColor *)(v16 - 2));
        v20 = v40;
        JCColor::JCColor((JCColor *)v21, (const JCColor *)v41);
        LODWORD(v17) = v17(&v22, &v20);
        JCColor::~JCColor((JCColor *)v21);
        JCColor::~JCColor((JCColor *)v23);
      }
      while (!(_DWORD)v17);
      v13 = v43;
    }
    while (v43 < v42);
  }
  v18 = v13 - 4;
  if (v13 - 4 != a1)
  {
    *(_OWORD *)a1 = *(_OWORD *)v18;
    JCColor::operator=(v5, v13 - 2);
  }
  *(_OWORD *)v18 = v40;
  JCColor::operator=(v13 - 2, v41);
  JCColor::~JCColor((JCColor *)v41);
  return v13 - 4;
}

void sub_1DD2B7C28(_Unwind_Exception *a1)
{
  JCColor *v1;

  JCColor::~JCColor(v1);
  _Unwind_Resume(a1);
}

uint64_t std::__insertion_sort_incomplete[abi:ne180100]<std::_ClassicAlgPolicy,BOOL (*&)(sortColorEntry,sortColorEntry),sortColorEntry*>(CGColorRef *a1, uint64_t a2, uint64_t (**a3)(__int128 *, __int128 *))
{
  _BOOL8 v6;
  uint64_t (*v7)(__int128 *, __int128 *);
  CGColorRef *v8;
  CGColorRef *v9;
  int v10;
  uint64_t (*v11)(__int128 *, __int128 *);
  CGColorRef *v12;
  uint64_t (*v13)(__int128 *, __int128 *);
  char v14;
  __int128 v16;
  _BYTE v17[16];
  __int128 v18;
  _BYTE v19[16];
  __int128 v20;
  CGColorRef v21[2];
  __int128 v22;
  _BYTE v23[16];
  __int128 v24;
  _BYTE v25[16];
  __int128 v26;
  _BYTE v27[16];
  __int128 v28;
  _BYTE v29[24];
  CGColorRef *v30;
  CGColorRef *v31;

  v30 = (CGColorRef *)a2;
  v31 = a1;
  v6 = 1;
  switch((a2 - (uint64_t)a1) >> 5)
  {
    case 0:
    case 1:
      return v6;
    case 2:
      v7 = *a3;
      v30 = (CGColorRef *)(a2 - 32);
      v28 = *(_OWORD *)(a2 - 32);
      JCColor::JCColor((JCColor *)v29, (const JCColor *)(a2 - 16));
      v26 = *(_OWORD *)a1;
      JCColor::JCColor((JCColor *)v27, (const JCColor *)(a1 + 2));
      LODWORD(v7) = v7(&v28, &v26);
      JCColor::~JCColor((JCColor *)v27);
      JCColor::~JCColor((JCColor *)v29);
      if ((_DWORD)v7)
        std::_IterOps<std::_ClassicAlgPolicy>::iter_swap[abi:ne180100]<sortColorEntry *&,sortColorEntry *&>(&v31, (uint64_t *)&v30);
      return 1;
    case 3:
      std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,BOOL (*&)(sortColorEntry,sortColorEntry),sortColorEntry*>(a1, a1 + 4, (__int128 *)(a2 - 32), a3);
      return v6;
    case 4:
      std::__sort4[abi:ne180100]<std::_ClassicAlgPolicy,BOOL (*&)(sortColorEntry,sortColorEntry),sortColorEntry*>(a1, a1 + 4, a1 + 8, (_OWORD *)(a2 - 32), a3);
      return v6;
    case 5:
      std::__sort5[abi:ne180100]<std::_ClassicAlgPolicy,BOOL (*&)(sortColorEntry,sortColorEntry),sortColorEntry*>(a1, a1 + 4, a1 + 8, a1 + 12, (_OWORD *)(a2 - 32), a3);
      return v6;
    default:
      v8 = a1 + 8;
      std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,BOOL (*&)(sortColorEntry,sortColorEntry),sortColorEntry*>(a1, a1 + 4, (__int128 *)a1 + 4, a3);
      v9 = a1 + 12;
      if (a1 + 12 == (CGColorRef *)a2)
        return 1;
      v10 = 0;
      break;
  }
  while (1)
  {
    v11 = *a3;
    v24 = *(_OWORD *)v9;
    JCColor::JCColor((JCColor *)v25, (const JCColor *)(v9 + 2));
    v22 = *(_OWORD *)v8;
    JCColor::JCColor((JCColor *)v23, (const JCColor *)(v8 + 2));
    LODWORD(v11) = v11(&v24, &v22);
    JCColor::~JCColor((JCColor *)v23);
    JCColor::~JCColor((JCColor *)v25);
    if ((_DWORD)v11)
      break;
LABEL_13:
    v8 = v9;
    v9 += 4;
    if (v9 == v30)
      return 1;
  }
  v20 = *(_OWORD *)v9;
  JCColor::JCColor((JCColor *)v21, (const JCColor *)(v9 + 2));
  do
  {
    v12 = v8;
    *((_OWORD *)v8 + 2) = *(_OWORD *)v8;
    JCColor::operator=(v8 + 6, v8 + 2);
    if (v8 == v31)
      break;
    v13 = *a3;
    v18 = v20;
    JCColor::JCColor((JCColor *)v19, (const JCColor *)v21);
    v16 = *((_OWORD *)v12 - 2);
    JCColor::JCColor((JCColor *)v17, (const JCColor *)(v12 - 2));
    v14 = v13(&v18, &v16);
    v8 = v12 - 4;
    JCColor::~JCColor((JCColor *)v17);
    JCColor::~JCColor((JCColor *)v19);
  }
  while ((v14 & 1) != 0);
  *(_OWORD *)v12 = v20;
  JCColor::operator=(v12 + 2, v21);
  if (++v10 != 8)
  {
    JCColor::~JCColor((JCColor *)v21);
    goto LABEL_13;
  }
  v6 = v9 + 4 == v30;
  JCColor::~JCColor((JCColor *)v21);
  return v6;
}

void sub_1DD2B7F90(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  JCColor *v10;
  JCColor *v11;

  JCColor::~JCColor(v11);
  JCColor::~JCColor(v10);
  _Unwind_Resume(a1);
}

void std::__sort4[abi:ne180100]<std::_ClassicAlgPolicy,BOOL (*&)(sortColorEntry,sortColorEntry),sortColorEntry*>(CGColorRef *a1, CGColorRef *a2, CGColorRef *a3, _OWORD *a4, uint64_t (**a5)(__int128 *, __int128 *))
{
  CGColorRef *v7;
  uint64_t (*v10)(__int128 *, __int128 *);
  uint64_t (*v11)(__int128 *, __int128 *);
  int v12;
  uint64_t (*v13)(__int128 *, __int128 *);
  int v14;
  __int128 v15;
  _BYTE v16[16];
  __int128 v17;
  _BYTE v18[16];
  __int128 v19;
  _BYTE v20[16];
  __int128 v21;
  _BYTE v22[16];
  __int128 v23;
  _BYTE v24[16];
  __int128 v25;
  _BYTE v26[16];
  _OWORD *v27;
  CGColorRef *v28;
  CGColorRef *v29;
  CGColorRef *v30;

  v7 = a3;
  v29 = a2;
  v30 = a1;
  v27 = a4;
  v28 = a3;
  std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,BOOL (*&)(sortColorEntry,sortColorEntry),sortColorEntry*>(a1, a2, (__int128 *)a3, a5);
  v10 = *a5;
  v25 = *a4;
  JCColor::JCColor((JCColor *)v26, (const JCColor *)(a4 + 1));
  v23 = *(_OWORD *)v7;
  JCColor::JCColor((JCColor *)v24, (const JCColor *)(v7 + 2));
  LODWORD(v7) = v10(&v25, &v23);
  JCColor::~JCColor((JCColor *)v24);
  JCColor::~JCColor((JCColor *)v26);
  if ((_DWORD)v7)
  {
    std::_IterOps<std::_ClassicAlgPolicy>::iter_swap[abi:ne180100]<sortColorEntry *&,sortColorEntry *&>(&v28, (uint64_t *)&v27);
    v11 = *a5;
    v21 = *(_OWORD *)v28;
    JCColor::JCColor((JCColor *)v22, (const JCColor *)(v28 + 2));
    v19 = *(_OWORD *)a2;
    JCColor::JCColor((JCColor *)v20, (const JCColor *)(a2 + 2));
    v12 = v11(&v21, &v19);
    JCColor::~JCColor((JCColor *)v20);
    JCColor::~JCColor((JCColor *)v22);
    if (v12)
    {
      std::_IterOps<std::_ClassicAlgPolicy>::iter_swap[abi:ne180100]<sortColorEntry *&,sortColorEntry *&>(&v29, (uint64_t *)&v28);
      v13 = *a5;
      v17 = *(_OWORD *)v29;
      JCColor::JCColor((JCColor *)v18, (const JCColor *)(v29 + 2));
      v15 = *(_OWORD *)a1;
      JCColor::JCColor((JCColor *)v16, (const JCColor *)(a1 + 2));
      v14 = v13(&v17, &v15);
      JCColor::~JCColor((JCColor *)v16);
      JCColor::~JCColor((JCColor *)v18);
      if (v14)
        std::_IterOps<std::_ClassicAlgPolicy>::iter_swap[abi:ne180100]<sortColorEntry *&,sortColorEntry *&>(&v30, (uint64_t *)&v29);
    }
  }
}

void sub_1DD2B81A8(_Unwind_Exception *a1)
{
  JCColor *v1;
  JCColor *v2;

  JCColor::~JCColor(v2);
  JCColor::~JCColor(v1);
  _Unwind_Resume(a1);
}

void std::__sort5[abi:ne180100]<std::_ClassicAlgPolicy,BOOL (*&)(sortColorEntry,sortColorEntry),sortColorEntry*>(CGColorRef *a1, CGColorRef *a2, CGColorRef *a3, CGColorRef *a4, _OWORD *a5, uint64_t (**a6)(__int128 *, __int128 *))
{
  CGColorRef *v8;
  uint64_t (*v12)(__int128 *, __int128 *);
  uint64_t (*v13)(__int128 *, __int128 *);
  int v14;
  uint64_t (*v15)(__int128 *, __int128 *);
  int v16;
  uint64_t (*v17)(__int128 *, __int128 *);
  int v18;
  __int128 v19;
  _BYTE v20[16];
  __int128 v21;
  _BYTE v22[16];
  __int128 v23;
  _BYTE v24[16];
  __int128 v25;
  _BYTE v26[16];
  __int128 v27;
  _BYTE v28[16];
  __int128 v29;
  _BYTE v30[16];
  __int128 v31;
  _BYTE v32[16];
  __int128 v33;
  _BYTE v34[24];
  _OWORD *v35;
  CGColorRef *v36;
  CGColorRef *v37;
  CGColorRef *v38;
  CGColorRef *v39;

  v8 = a4;
  v38 = a2;
  v39 = a1;
  v36 = a4;
  v37 = a3;
  v35 = a5;
  std::__sort4[abi:ne180100]<std::_ClassicAlgPolicy,BOOL (*&)(sortColorEntry,sortColorEntry),sortColorEntry*>(a1, a2, a3, a4, a6);
  v12 = *a6;
  v33 = *a5;
  JCColor::JCColor((JCColor *)v34, (const JCColor *)(a5 + 1));
  v31 = *(_OWORD *)v8;
  JCColor::JCColor((JCColor *)v32, (const JCColor *)(v8 + 2));
  LODWORD(v8) = v12(&v33, &v31);
  JCColor::~JCColor((JCColor *)v32);
  JCColor::~JCColor((JCColor *)v34);
  if ((_DWORD)v8)
  {
    std::_IterOps<std::_ClassicAlgPolicy>::iter_swap[abi:ne180100]<sortColorEntry *&,sortColorEntry *&>(&v36, (uint64_t *)&v35);
    v13 = *a6;
    v29 = *(_OWORD *)v36;
    JCColor::JCColor((JCColor *)v30, (const JCColor *)(v36 + 2));
    v27 = *(_OWORD *)a3;
    JCColor::JCColor((JCColor *)v28, (const JCColor *)(a3 + 2));
    v14 = v13(&v29, &v27);
    JCColor::~JCColor((JCColor *)v28);
    JCColor::~JCColor((JCColor *)v30);
    if (v14)
    {
      std::_IterOps<std::_ClassicAlgPolicy>::iter_swap[abi:ne180100]<sortColorEntry *&,sortColorEntry *&>(&v37, (uint64_t *)&v36);
      v15 = *a6;
      v25 = *(_OWORD *)v37;
      JCColor::JCColor((JCColor *)v26, (const JCColor *)(v37 + 2));
      v23 = *(_OWORD *)a2;
      JCColor::JCColor((JCColor *)v24, (const JCColor *)(a2 + 2));
      v16 = v15(&v25, &v23);
      JCColor::~JCColor((JCColor *)v24);
      JCColor::~JCColor((JCColor *)v26);
      if (v16)
      {
        std::_IterOps<std::_ClassicAlgPolicy>::iter_swap[abi:ne180100]<sortColorEntry *&,sortColorEntry *&>(&v38, (uint64_t *)&v37);
        v17 = *a6;
        v21 = *(_OWORD *)v38;
        JCColor::JCColor((JCColor *)v22, (const JCColor *)(v38 + 2));
        v19 = *(_OWORD *)a1;
        JCColor::JCColor((JCColor *)v20, (const JCColor *)(a1 + 2));
        v18 = v17(&v21, &v19);
        JCColor::~JCColor((JCColor *)v20);
        JCColor::~JCColor((JCColor *)v22);
        if (v18)
          std::_IterOps<std::_ClassicAlgPolicy>::iter_swap[abi:ne180100]<sortColorEntry *&,sortColorEntry *&>(&v39, (uint64_t *)&v38);
      }
    }
  }
}

void sub_1DD2B840C(_Unwind_Exception *a1)
{
  JCColor *v1;
  JCColor *v2;

  JCColor::~JCColor(v2);
  JCColor::~JCColor(v1);
  _Unwind_Resume(a1);
}

CGColorRef *std::__partial_sort_impl[abi:ne180100]<std::_ClassicAlgPolicy,BOOL (*&)(sortColorEntry,sortColorEntry),sortColorEntry*,sortColorEntry*>(CGColorRef *a1, CGColorRef *a2, CGColorRef *a3, uint64_t (**a4)(__int128 *, __int128 *))
{
  CGColorRef *v6;
  CGColorRef *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  CGColorRef *v12;
  CGColorRef *v13;
  uint64_t (*v14)(__int128 *, __int128 *);
  unint64_t v15;
  __int128 v18;
  _BYTE v19[16];
  __int128 v20;
  _BYTE v21[16];
  CGColorRef *v22;
  CGColorRef *v23;

  v23 = a1;
  if (a1 != a2)
  {
    v6 = a2;
    v7 = a1;
    v8 = (char *)a2 - (char *)a1;
    v9 = ((char *)a2 - (char *)a1) >> 5;
    if ((char *)a2 - (char *)a1 >= 33)
    {
      v10 = (unint64_t)(v9 - 2) >> 1;
      v11 = v10 + 1;
      v12 = &a1[4 * v10];
      do
      {
        std::__sift_down[abi:ne180100]<std::_ClassicAlgPolicy,BOOL (*&)(sortColorEntry,sortColorEntry),sortColorEntry*>((uint64_t)v7, a4, v9, v12);
        v12 -= 4;
        --v11;
      }
      while (v11);
    }
    v22 = v6;
    if (v6 == a3)
    {
      a3 = v6;
    }
    else
    {
      v13 = v6;
      do
      {
        v14 = *a4;
        v20 = *(_OWORD *)v13;
        JCColor::JCColor((JCColor *)v21, (const JCColor *)(v13 + 2));
        v18 = *(_OWORD *)v23;
        JCColor::JCColor((JCColor *)v19, (const JCColor *)(v23 + 2));
        LODWORD(v14) = v14(&v20, &v18);
        JCColor::~JCColor((JCColor *)v19);
        JCColor::~JCColor((JCColor *)v21);
        if ((_DWORD)v14)
        {
          std::_IterOps<std::_ClassicAlgPolicy>::iter_swap[abi:ne180100]<sortColorEntry *&,sortColorEntry *&>(&v22, (uint64_t *)&v23);
          std::__sift_down[abi:ne180100]<std::_ClassicAlgPolicy,BOOL (*&)(sortColorEntry,sortColorEntry),sortColorEntry*>((uint64_t)v23, a4, v9, v23);
        }
        v13 = v22 + 4;
        v22 = v13;
      }
      while (v13 != a3);
      v7 = v23;
      v8 = (char *)v6 - (char *)v23;
    }
    if (v8 >= 33)
    {
      v15 = (unint64_t)v8 >> 5;
      do
      {
        std::__pop_heap[abi:ne180100]<std::_ClassicAlgPolicy,BOOL (*)(sortColorEntry,sortColorEntry),sortColorEntry*>(v7, (uint64_t)v6, a4, v15);
        v6 -= 4;
      }
      while (v15-- > 2);
      return v22;
    }
  }
  return a3;
}

void sub_1DD2B85E0(_Unwind_Exception *a1)
{
  JCColor *v1;
  JCColor *v2;

  JCColor::~JCColor(v2);
  JCColor::~JCColor(v1);
  _Unwind_Resume(a1);
}

void std::__sift_down[abi:ne180100]<std::_ClassicAlgPolicy,BOOL (*&)(sortColorEntry,sortColorEntry),sortColorEntry*>(uint64_t a1, uint64_t (**a2)(__int128 *, __int128 *), uint64_t a3, CGColorRef *a4)
{
  unint64_t v4;
  CGColorRef *v5;
  uint64_t v8;
  uint64_t v9;
  CGColorRef *v10;
  uint64_t v11;
  uint64_t (*v12)(__int128 *, __int128 *);
  uint64_t (*v13)(__int128 *, __int128 *);
  char v14;
  CGColorRef *v15;
  CGColorRef *v16;
  uint64_t v17;
  uint64_t (*v18)(__int128 *, __int128 *);
  uint64_t (*v19)(__int128 *, __int128 *);
  uint64_t v20;
  uint64_t v21;
  __int128 v23;
  _BYTE v24[16];
  __int128 v25;
  _BYTE v26[16];
  __int128 v27;
  _BYTE v28[16];
  __int128 v29;
  _BYTE v30[16];
  __int128 v31;
  CGColorRef v32[2];
  __int128 v33;
  _BYTE v34[16];
  __int128 v35;
  _BYTE v36[16];
  __int128 v37;
  _BYTE v38[16];
  __int128 v39;
  _BYTE v40[32];

  v4 = a3 - 2;
  if (a3 >= 2)
  {
    v5 = a4;
    v21 = v4 >> 1;
    if ((uint64_t)(v4 >> 1) >= ((uint64_t)a4 - a1) >> 5)
    {
      v8 = ((uint64_t)a4 - a1) >> 4;
      v9 = v8 + 1;
      v10 = (CGColorRef *)(a1 + 32 * (v8 + 1));
      v11 = v8 + 2;
      if (v8 + 2 < a3)
      {
        v12 = *a2;
        v39 = *(_OWORD *)v10;
        JCColor::JCColor((JCColor *)v40, (const JCColor *)(v10 + 2));
        v37 = *((_OWORD *)v10 + 2);
        JCColor::JCColor((JCColor *)v38, (const JCColor *)(v10 + 6));
        LODWORD(v12) = v12(&v39, &v37);
        JCColor::~JCColor((JCColor *)v38);
        JCColor::~JCColor((JCColor *)v40);
        v10 += 4 * v12;
        if ((_DWORD)v12)
          v9 = v11;
      }
      v13 = *a2;
      v35 = *(_OWORD *)v10;
      JCColor::JCColor((JCColor *)v36, (const JCColor *)(v10 + 2));
      v33 = *(_OWORD *)v5;
      JCColor::JCColor((JCColor *)v34, (const JCColor *)(v5 + 2));
      v14 = v13(&v35, &v33);
      JCColor::~JCColor((JCColor *)v34);
      JCColor::~JCColor((JCColor *)v36);
      if ((v14 & 1) == 0)
      {
        v31 = *(_OWORD *)v5;
        v20 = a1;
        JCColor::JCColor((JCColor *)v32, (const JCColor *)(v5 + 2));
        do
        {
          v15 = v10;
          *(_OWORD *)v5 = *(_OWORD *)v10;
          v16 = v10 + 2;
          JCColor::operator=(v5 + 2, v10 + 2);
          if (v21 < v9)
            break;
          v17 = (2 * v9) | 1;
          v10 = (CGColorRef *)(v20 + 32 * v17);
          v9 = 2 * v9 + 2;
          if (v9 >= a3)
          {
            v9 = v17;
          }
          else
          {
            v18 = *a2;
            v29 = *(_OWORD *)v10;
            JCColor::JCColor((JCColor *)v30, (const JCColor *)(v10 + 2));
            v27 = *((_OWORD *)v10 + 2);
            JCColor::JCColor((JCColor *)v28, (const JCColor *)(v10 + 6));
            LODWORD(v18) = v18(&v29, &v27);
            JCColor::~JCColor((JCColor *)v28);
            JCColor::~JCColor((JCColor *)v30);
            v10 += 4 * v18;
            if (!(_DWORD)v18)
              v9 = v17;
          }
          v19 = *a2;
          v25 = *(_OWORD *)v10;
          JCColor::JCColor((JCColor *)v26, (const JCColor *)(v10 + 2));
          v23 = v31;
          JCColor::JCColor((JCColor *)v24, (const JCColor *)v32);
          LODWORD(v19) = v19(&v25, &v23);
          JCColor::~JCColor((JCColor *)v24);
          JCColor::~JCColor((JCColor *)v26);
          v5 = v15;
        }
        while (!(_DWORD)v19);
        *(_OWORD *)v15 = v31;
        JCColor::operator=(v16, v32);
        JCColor::~JCColor((JCColor *)v32);
      }
    }
  }
}

void sub_1DD2B88C0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, JCColor *a12)
{
  JCColor::~JCColor(a12);
  _Unwind_Resume(a1);
}

void std::__pop_heap[abi:ne180100]<std::_ClassicAlgPolicy,BOOL (*)(sortColorEntry,sortColorEntry),sortColorEntry*>(CGColorRef *a1, uint64_t a2, uint64_t (**a3)(__int128 *, __int128 *), uint64_t a4)
{
  CGColorRef *v8;
  _OWORD *v9;
  CGColorRef *v10;
  CGColorRef *v11;
  __int128 v12;
  CGColorRef v13[2];

  if (a4 >= 2)
  {
    v12 = *(_OWORD *)a1;
    JCColor::JCColor((JCColor *)v13, (const JCColor *)(a1 + 2));
    v8 = std::__floyd_sift_down[abi:ne180100]<std::_ClassicAlgPolicy,BOOL (*&)(sortColorEntry,sortColorEntry),sortColorEntry*>(a1, a3, a4);
    v9 = (_OWORD *)(a2 - 32);
    v10 = v8 + 2;
    if (v8 == (CGColorRef *)(a2 - 32))
    {
      *(_OWORD *)v8 = v12;
      JCColor::operator=(v10, v13);
    }
    else
    {
      *(_OWORD *)v8 = *v9;
      v11 = (CGColorRef *)(a2 - 16);
      JCColor::operator=(v10, v11);
      *v9 = v12;
      JCColor::operator=(v11, v13);
      std::__sift_up[abi:ne180100]<std::_ClassicAlgPolicy,BOOL (*&)(sortColorEntry,sortColorEntry),sortColorEntry*>((uint64_t)a1, (uint64_t)(v8 + 4), a3, ((char *)(v8 + 4) - (char *)a1) >> 5);
    }
    JCColor::~JCColor((JCColor *)v13);
  }
}

void sub_1DD2B8A24(_Unwind_Exception *a1)
{
  JCColor *v1;

  JCColor::~JCColor(v1);
  _Unwind_Resume(a1);
}

CGColorRef *std::__floyd_sift_down[abi:ne180100]<std::_ClassicAlgPolicy,BOOL (*&)(sortColorEntry,sortColorEntry),sortColorEntry*>(CGColorRef *a1, uint64_t (**a2)(__int128 *, __int128 *), uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  CGColorRef *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(__int128 *, __int128 *);
  __int128 v14;
  _BYTE v15[16];
  __int128 v16;
  _BYTE v17[16];

  v6 = 0;
  v7 = a3 - 2;
  if (a3 < 2)
    v7 = a3 - 1;
  v8 = v7 >> 1;
  do
  {
    v9 = &a1[4 * v6 + 4];
    v10 = (2 * v6) | 1;
    v11 = 2 * v6 + 2;
    if (v11 < a3)
    {
      v12 = *a2;
      v16 = *(_OWORD *)v9;
      JCColor::JCColor((JCColor *)v17, (const JCColor *)(v9 + 2));
      v14 = *((_OWORD *)v9 + 2);
      JCColor::JCColor((JCColor *)v15, (const JCColor *)(v9 + 6));
      LODWORD(v12) = v12(&v16, &v14);
      JCColor::~JCColor((JCColor *)v15);
      JCColor::~JCColor((JCColor *)v17);
      v9 += 4 * v12;
      if ((_DWORD)v12)
        v10 = v11;
    }
    *(_OWORD *)a1 = *(_OWORD *)v9;
    JCColor::operator=(a1 + 2, v9 + 2);
    a1 = v9;
    v6 = v10;
  }
  while (v10 <= v8);
  return v9;
}

void sub_1DD2B8B4C(_Unwind_Exception *a1)
{
  JCColor *v1;
  JCColor *v2;

  JCColor::~JCColor(v2);
  JCColor::~JCColor(v1);
  _Unwind_Resume(a1);
}

void std::__sift_up[abi:ne180100]<std::_ClassicAlgPolicy,BOOL (*&)(sortColorEntry,sortColorEntry),sortColorEntry*>(uint64_t a1, uint64_t a2, uint64_t (**a3)(__int128 *, __int128 *), uint64_t a4)
{
  unint64_t v4;
  unint64_t v7;
  CGColorRef *v8;
  uint64_t (*v9)(__int128 *, __int128 *);
  CGColorRef *v10;
  CGColorRef *v11;
  CGColorRef *v12;
  uint64_t (*v13)(__int128 *, __int128 *);
  __int128 v15;
  _BYTE v16[16];
  __int128 v17;
  _BYTE v18[16];
  __int128 v19;
  CGColorRef v20[2];
  __int128 v21;
  _BYTE v22[16];
  __int128 v23;
  _BYTE v24[32];

  v4 = a4 - 2;
  if (a4 >= 2)
  {
    v7 = v4 >> 1;
    v8 = (CGColorRef *)(a1 + 32 * (v4 >> 1));
    v9 = *a3;
    v23 = *(_OWORD *)v8;
    JCColor::JCColor((JCColor *)v24, (const JCColor *)(v8 + 2));
    v21 = *(_OWORD *)(a2 - 32);
    JCColor::JCColor((JCColor *)v22, (const JCColor *)(a2 - 16));
    LODWORD(v9) = v9(&v23, &v21);
    JCColor::~JCColor((JCColor *)v22);
    JCColor::~JCColor((JCColor *)v24);
    if ((_DWORD)v9)
    {
      v10 = (CGColorRef *)(a2 - 32);
      v19 = *(_OWORD *)(a2 - 32);
      JCColor::JCColor((JCColor *)v20, (const JCColor *)(a2 - 16));
      do
      {
        v11 = v8;
        *(_OWORD *)v10 = *(_OWORD *)v8;
        v12 = v8 + 2;
        JCColor::operator=(v10 + 2, v8 + 2);
        if (!v7)
          break;
        v7 = (v7 - 1) >> 1;
        v8 = (CGColorRef *)(a1 + 32 * v7);
        v13 = *a3;
        v17 = *(_OWORD *)v8;
        JCColor::JCColor((JCColor *)v18, (const JCColor *)(v8 + 2));
        v15 = v19;
        JCColor::JCColor((JCColor *)v16, (const JCColor *)v20);
        LOBYTE(v13) = v13(&v17, &v15);
        JCColor::~JCColor((JCColor *)v16);
        JCColor::~JCColor((JCColor *)v18);
        v10 = v11;
      }
      while ((v13 & 1) != 0);
      *(_OWORD *)v11 = v19;
      JCColor::operator=(v12, v20);
      JCColor::~JCColor((JCColor *)v20);
    }
  }
}

void sub_1DD2B8D04(_Unwind_Exception *a1)
{
  JCColor *v1;

  JCColor::~JCColor(v1);
  _Unwind_Resume(a1);
}

uint64_t std::vector<JCColor>::__swap_out_circular_buffer(uint64_t *a1, _QWORD *a2)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  result = std::__uninitialized_allocator_move_if_noexcept[abi:ne180100]<std::allocator<JCColor>,std::reverse_iterator<JCColor*>,std::reverse_iterator<JCColor*>,std::reverse_iterator<JCColor*>>((uint64_t)(a1 + 2), a1[1], a1[1], *a1, *a1, a2[1], a2[1]);
  a2[1] = v5;
  v6 = *a1;
  *a1 = v5;
  a2[1] = v6;
  v7 = a1[1];
  a1[1] = a2[2];
  a2[2] = v7;
  v8 = a1[2];
  a1[2] = a2[3];
  a2[3] = v8;
  *a2 = a2[1];
  return result;
}

void *std::__allocate_at_least[abi:ne180100]<std::allocator<JCColor>>(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60)
    std::__throw_bad_array_new_length[abi:ne180100]();
  return operator new(16 * a2);
}

uint64_t std::__uninitialized_allocator_move_if_noexcept[abi:ne180100]<std::allocator<JCColor>,std::reverse_iterator<JCColor*>,std::reverse_iterator<JCColor*>,std::reverse_iterator<JCColor*>>(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v10;
  uint64_t v11;
  JCColor *v12;

  v10 = 0;
  v11 = a7 - 16;
  while (a3 + v10 != a5)
  {
    v12 = (JCColor *)(v11 + v10);
    v10 -= 16;
    JCColor::JCColor(v12, (const JCColor *)(v10 + a3));
  }
  return a6;
}

uint64_t std::__split_buffer<JCColor>::~__split_buffer(uint64_t a1)
{
  uint64_t i;
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 8);
  for (i = *(_QWORD *)(a1 + 16); i != v3; i = *(_QWORD *)(a1 + 16))
  {
    *(_QWORD *)(a1 + 16) = i - 16;
    JCColor::~JCColor((JCColor *)(i - 16));
  }
  if (*(_QWORD *)a1)
    operator delete(*(void **)a1);
  return a1;
}

BOOL static EmojiPosterLayoutStyle.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t EmojiPosterLayoutStyle.hash(into:)()
{
  return sub_1DD2FA27C();
}

uint64_t sub_1DD2B8F8C()
{
  return 0;
}

uint64_t sub_1DD2B8F98()
{
  return 0;
}

void sub_1DD2B8FA4(_BYTE *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_1DD2B8FB0()
{
  sub_1DD2B953C();
  return sub_1DD2FA2DC();
}

uint64_t sub_1DD2B8FD8()
{
  sub_1DD2B953C();
  return sub_1DD2FA2E8();
}

BOOL sub_1DD2B9000(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t sub_1DD2B9018()
{
  return sub_1DD2FA27C();
}

uint64_t sub_1DD2B9044()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x72616C7563726963;
  if (*v0 != 1)
    v1 = 0x6C6172697073;
  if (*v0)
    return v1;
  else
    return 0x724774657366666FLL;
}

uint64_t sub_1DD2B90A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1DD2BEC28(a1, a2);
  *a3 = result;
  return result;
}

void sub_1DD2B90C4(_BYTE *a1@<X8>)
{
  *a1 = 3;
}

uint64_t sub_1DD2B90D0()
{
  sub_1DD2B94B4();
  return sub_1DD2FA2DC();
}

uint64_t sub_1DD2B90F8()
{
  sub_1DD2B94B4();
  return sub_1DD2FA2E8();
}

uint64_t sub_1DD2B9120()
{
  sub_1DD2B9580();
  return sub_1DD2FA2DC();
}

uint64_t sub_1DD2B9148()
{
  sub_1DD2B9580();
  return sub_1DD2FA2E8();
}

uint64_t sub_1DD2B9170@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *a1 = 1;
  return result;
}

uint64_t sub_1DD2B919C()
{
  sub_1DD2B94F8();
  return sub_1DD2FA2DC();
}

uint64_t sub_1DD2B91C4()
{
  sub_1DD2B94F8();
  return sub_1DD2FA2E8();
}

uint64_t EmojiPosterLayoutStyle.encode(to:)(_QWORD *a1)
{
  unsigned __int8 *v1;
  unsigned __int8 *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  int v15;
  char *v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  char v26;
  char v27;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDB61A40);
  v22 = *(_QWORD *)(v4 - 8);
  v23 = v4;
  MEMORY[0x1E0C80A78]();
  v21 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDB61A48);
  v19 = *(_QWORD *)(v6 - 8);
  v20 = v6;
  MEMORY[0x1E0C80A78]();
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDB61A50);
  v9 = *(_QWORD *)(v18 - 8);
  MEMORY[0x1E0C80A78]();
  v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDB61A38);
  v24 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78]();
  v14 = (char *)&v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *v2;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DD2B94B4();
  sub_1DD2FA2C4();
  if (v15)
  {
    if (v15 == 1)
    {
      v26 = 1;
      sub_1DD2B953C();
      sub_1DD2FA1B0();
      (*(void (**)(char *, uint64_t))(v19 + 8))(v8, v20);
    }
    else
    {
      v27 = 2;
      sub_1DD2B94F8();
      v16 = v21;
      sub_1DD2FA1B0();
      (*(void (**)(char *, uint64_t))(v22 + 8))(v16, v23);
    }
  }
  else
  {
    v25 = 0;
    sub_1DD2B9580();
    sub_1DD2FA1B0();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v18);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v24 + 8))(v14, v12);
}

uint64_t __swift_instantiateConcreteTypeFromMangledName(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = MEMORY[0x1DF0D8028]((char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

_QWORD *__swift_project_boxed_opaque_existential_1(_QWORD *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
    return (_QWORD *)(*result
                    + ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80)));
  return result;
}

unint64_t sub_1DD2B94B4()
{
  unint64_t result;

  result = qword_1EDB61000;
  if (!qword_1EDB61000)
  {
    result = MEMORY[0x1DF0D8040](&unk_1DD2FDD74, &type metadata for EmojiPosterLayoutStyle.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB61000);
  }
  return result;
}

unint64_t sub_1DD2B94F8()
{
  unint64_t result;

  result = qword_1EDB61700;
  if (!qword_1EDB61700)
  {
    result = MEMORY[0x1DF0D8040](&unk_1DD2FDD24, &type metadata for EmojiPosterLayoutStyle.SpiralCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB61700);
  }
  return result;
}

unint64_t sub_1DD2B953C()
{
  unint64_t result;

  result = qword_1EDB61708;
  if (!qword_1EDB61708)
  {
    result = MEMORY[0x1DF0D8040](&unk_1DD2FDCD4, &type metadata for EmojiPosterLayoutStyle.CircularCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB61708);
  }
  return result;
}

unint64_t sub_1DD2B9580()
{
  unint64_t result;

  result = qword_1EDB61038;
  if (!qword_1EDB61038)
  {
    result = MEMORY[0x1DF0D8040](&unk_1DD2FDC84, &type metadata for EmojiPosterLayoutStyle.OffsetGridCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB61038);
  }
  return result;
}

uint64_t EmojiPosterLayoutStyle.init(from:)@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  _QWORD *v13;
  char *v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  _BYTE *v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _BYTE *v38;
  char *v39;
  char *v40;
  _QWORD *v41;
  char v42;
  char v43;
  char v44;

  v38 = a2;
  v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDB61550);
  v34 = *(_QWORD *)(v37 - 8);
  MEMORY[0x1E0C80A78]();
  v40 = (char *)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDB61558);
  v35 = *(_QWORD *)(v4 - 8);
  v36 = v4;
  MEMORY[0x1E0C80A78]();
  v39 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDB61560);
  v6 = *(_QWORD *)(v33 - 8);
  MEMORY[0x1E0C80A78]();
  v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDB61548);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78]();
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DD2B94B4();
  v13 = v41;
  sub_1DD2FA2AC();
  if (v13)
    goto LABEL_7;
  v31 = v6;
  v32 = v10;
  v14 = v39;
  v15 = v40;
  v41 = a1;
  v16 = v12;
  v17 = sub_1DD2FA1A4();
  v18 = v9;
  if (*(_QWORD *)(v17 + 16) != 1)
  {
    v23 = sub_1DD2FA06C();
    swift_allocError();
    v25 = v24;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1F03D0C18);
    *v25 = &type metadata for EmojiPosterLayoutStyle;
    sub_1DD2FA150();
    sub_1DD2FA060();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v23 - 8) + 104))(v25, *MEMORY[0x1E0DEC450], v23);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v32 + 8))(v16, v9);
    a1 = v41;
LABEL_7:
    v26 = (uint64_t)a1;
    return __swift_destroy_boxed_opaque_existential_1(v26);
  }
  v19 = *(unsigned __int8 *)(v17 + 32);
  if (*(_BYTE *)(v17 + 32))
  {
    if (v19 == 1)
    {
      v43 = 1;
      sub_1DD2B953C();
      v20 = v9;
      sub_1DD2FA144();
      v21 = v38;
      v22 = v32;
      (*(void (**)(char *, uint64_t))(v35 + 8))(v14, v36);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v22 + 8))(v16, v20);
    }
    else
    {
      v44 = 2;
      sub_1DD2B94F8();
      v28 = v15;
      sub_1DD2FA144();
      v21 = v38;
      v29 = v32;
      (*(void (**)(char *, uint64_t))(v34 + 8))(v28, v37);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v29 + 8))(v16, v18);
    }
  }
  else
  {
    v42 = 0;
    sub_1DD2B9580();
    sub_1DD2FA144();
    (*(void (**)(char *, uint64_t))(v31 + 8))(v8, v33);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v32 + 8))(v16, v9);
    v21 = v38;
  }
  *v21 = v19;
  v26 = (uint64_t)v41;
  return __swift_destroy_boxed_opaque_existential_1(v26);
}

uint64_t __swift_destroy_boxed_opaque_existential_1(uint64_t a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)(a1 + 24) - 8);
  if ((*(_BYTE *)(v1 + 82) & 2) != 0)
    return swift_release();
  else
    return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_1DD2B9A2C@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return EmojiPosterLayoutStyle.init(from:)(a1, a2);
}

uint64_t sub_1DD2B9A40(_QWORD *a1)
{
  return EmojiPosterLayoutStyle.encode(to:)(a1);
}

uint64_t sub_1DD2B9A54()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x6D756964656DLL;
  if (*v0 != 1)
    v1 = 0x656772616CLL;
  if (*v0)
    return v1;
  else
    return 0x6C6C616D73;
}

uint64_t sub_1DD2B9AA4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1DD2BF110(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DD2B9AC8()
{
  sub_1DD2B9E6C();
  return sub_1DD2FA2DC();
}

uint64_t sub_1DD2B9AF0()
{
  sub_1DD2B9E6C();
  return sub_1DD2FA2E8();
}

uint64_t sub_1DD2B9B18()
{
  sub_1DD2B9EB0();
  return sub_1DD2FA2DC();
}

uint64_t sub_1DD2B9B40()
{
  sub_1DD2B9EB0();
  return sub_1DD2FA2E8();
}

uint64_t sub_1DD2B9B68()
{
  sub_1DD2B9EF4();
  return sub_1DD2FA2DC();
}

uint64_t sub_1DD2B9B90()
{
  sub_1DD2B9EF4();
  return sub_1DD2FA2E8();
}

uint64_t sub_1DD2B9BB8()
{
  sub_1DD2B9F38();
  return sub_1DD2FA2DC();
}

uint64_t sub_1DD2B9BE0()
{
  sub_1DD2B9F38();
  return sub_1DD2FA2E8();
}

uint64_t EmojiPosterSizeVariant.encode(to:)(_QWORD *a1)
{
  unsigned __int8 *v1;
  unsigned __int8 *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  int v15;
  char *v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  char v26;
  char v27;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDB61A60);
  v22 = *(_QWORD *)(v4 - 8);
  v23 = v4;
  MEMORY[0x1E0C80A78]();
  v21 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDB61A70);
  v19 = *(_QWORD *)(v6 - 8);
  v20 = v6;
  MEMORY[0x1E0C80A78]();
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDB61A68);
  v9 = *(_QWORD *)(v18 - 8);
  MEMORY[0x1E0C80A78]();
  v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDB61A58);
  v24 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78]();
  v14 = (char *)&v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *v2;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DD2B9E6C();
  sub_1DD2FA2C4();
  if (v15)
  {
    if (v15 == 1)
    {
      v26 = 1;
      sub_1DD2B9EF4();
      sub_1DD2FA1B0();
      (*(void (**)(char *, uint64_t))(v19 + 8))(v8, v20);
    }
    else
    {
      v27 = 2;
      sub_1DD2B9EB0();
      v16 = v21;
      sub_1DD2FA1B0();
      (*(void (**)(char *, uint64_t))(v22 + 8))(v16, v23);
    }
  }
  else
  {
    v25 = 0;
    sub_1DD2B9F38();
    sub_1DD2FA1B0();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v18);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v24 + 8))(v14, v12);
}

unint64_t sub_1DD2B9E6C()
{
  unint64_t result;

  result = qword_1EDB61058;
  if (!qword_1EDB61058)
  {
    result = MEMORY[0x1DF0D8040](&unk_1DD2FDC34, &type metadata for EmojiPosterSizeVariant.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB61058);
  }
  return result;
}

unint64_t sub_1DD2B9EB0()
{
  unint64_t result;

  result = qword_1EDB616A0;
  if (!qword_1EDB616A0)
  {
    result = MEMORY[0x1DF0D8040](&unk_1DD2FDBE4, &type metadata for EmojiPosterSizeVariant.LargeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB616A0);
  }
  return result;
}

unint64_t sub_1DD2B9EF4()
{
  unint64_t result;

  result = qword_1EDB61718;
  if (!qword_1EDB61718)
  {
    result = MEMORY[0x1DF0D8040]("UfA\rhY", &type metadata for EmojiPosterSizeVariant.MediumCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB61718);
  }
  return result;
}

unint64_t sub_1DD2B9F38()
{
  unint64_t result;

  result = qword_1EDB61080;
  if (!qword_1EDB61080)
  {
    result = MEMORY[0x1DF0D8040](&unk_1DD2FDB44, &type metadata for EmojiPosterSizeVariant.SmallCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB61080);
  }
  return result;
}

uint64_t EmojiPosterSizeVariant.init(from:)@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  _QWORD *v13;
  char *v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  _BYTE *v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _BYTE *v38;
  char *v39;
  char *v40;
  _QWORD *v41;
  char v42;
  char v43;
  char v44;

  v38 = a2;
  v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDB61570);
  v34 = *(_QWORD *)(v37 - 8);
  MEMORY[0x1E0C80A78]();
  v40 = (char *)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDB61580);
  v35 = *(_QWORD *)(v4 - 8);
  v36 = v4;
  MEMORY[0x1E0C80A78]();
  v39 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDB61578);
  v6 = *(_QWORD *)(v33 - 8);
  MEMORY[0x1E0C80A78]();
  v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDB61568);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78]();
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DD2B9E6C();
  v13 = v41;
  sub_1DD2FA2AC();
  if (v13)
    goto LABEL_7;
  v31 = v6;
  v32 = v10;
  v14 = v39;
  v15 = v40;
  v41 = a1;
  v16 = v12;
  v17 = sub_1DD2FA1A4();
  v18 = v9;
  if (*(_QWORD *)(v17 + 16) != 1)
  {
    v23 = sub_1DD2FA06C();
    swift_allocError();
    v25 = v24;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1F03D0C18);
    *v25 = &type metadata for EmojiPosterSizeVariant;
    sub_1DD2FA150();
    sub_1DD2FA060();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v23 - 8) + 104))(v25, *MEMORY[0x1E0DEC450], v23);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v32 + 8))(v16, v9);
    a1 = v41;
LABEL_7:
    v26 = (uint64_t)a1;
    return __swift_destroy_boxed_opaque_existential_1(v26);
  }
  v19 = *(unsigned __int8 *)(v17 + 32);
  if (*(_BYTE *)(v17 + 32))
  {
    if (v19 == 1)
    {
      v43 = 1;
      sub_1DD2B9EF4();
      v20 = v9;
      sub_1DD2FA144();
      v21 = v38;
      v22 = v32;
      (*(void (**)(char *, uint64_t))(v35 + 8))(v14, v36);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v22 + 8))(v16, v20);
    }
    else
    {
      v44 = 2;
      sub_1DD2B9EB0();
      v28 = v15;
      sub_1DD2FA144();
      v21 = v38;
      v29 = v32;
      (*(void (**)(char *, uint64_t))(v34 + 8))(v28, v37);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v29 + 8))(v16, v18);
    }
  }
  else
  {
    v42 = 0;
    sub_1DD2B9F38();
    sub_1DD2FA144();
    (*(void (**)(char *, uint64_t))(v31 + 8))(v8, v33);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v32 + 8))(v16, v9);
    v21 = v38;
  }
  *v21 = v19;
  v26 = (uint64_t)v41;
  return __swift_destroy_boxed_opaque_existential_1(v26);
}

uint64_t sub_1DD2BA3C4@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return EmojiPosterSizeVariant.init(from:)(a1, a2);
}

uint64_t sub_1DD2BA3D8(_QWORD *a1)
{
  return EmojiPosterSizeVariant.encode(to:)(a1);
}

uint64_t sub_1DD2BA3EC()
{
  sub_1DD2BAAAC();
  return sub_1DD2FA2DC();
}

uint64_t sub_1DD2BA414()
{
  sub_1DD2BAAAC();
  return sub_1DD2FA2E8();
}

uint64_t sub_1DD2BA43C()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1DD2BA468 + 4 * byte_1DD2FC4F0[*v0]))(0x64696C6F73, 0xE500000000000000);
}

uint64_t sub_1DD2BA468()
{
  return 0x72477261656E696CLL;
}

uint64_t sub_1DD2BA49C()
{
  return 0x6172476D6F6F6C62;
}

uint64_t sub_1DD2BA4C0()
{
  return 0x657474656E676976;
}

uint64_t sub_1DD2BA4DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1DD2BF24C(a1, a2);
  *a3 = result;
  return result;
}

void sub_1DD2BA500(_BYTE *a1@<X8>)
{
  *a1 = 5;
}

uint64_t sub_1DD2BA50C()
{
  sub_1DD2BAA24();
  return sub_1DD2FA2DC();
}

uint64_t sub_1DD2BA534()
{
  sub_1DD2BAA24();
  return sub_1DD2FA2E8();
}

uint64_t sub_1DD2BA55C()
{
  sub_1DD2BAB34();
  return sub_1DD2FA2DC();
}

uint64_t sub_1DD2BA584()
{
  sub_1DD2BAB34();
  return sub_1DD2FA2E8();
}

uint64_t sub_1DD2BA5AC()
{
  sub_1DD2BAAF0();
  return sub_1DD2FA2DC();
}

uint64_t sub_1DD2BA5D4()
{
  sub_1DD2BAAF0();
  return sub_1DD2FA2E8();
}

uint64_t sub_1DD2BA5FC()
{
  sub_1DD2BAB78();
  return sub_1DD2FA2DC();
}

uint64_t sub_1DD2BA624()
{
  sub_1DD2BAB78();
  return sub_1DD2FA2E8();
}

uint64_t sub_1DD2BA64C()
{
  sub_1DD2BAA68();
  return sub_1DD2FA2DC();
}

uint64_t sub_1DD2BA674()
{
  sub_1DD2BAA68();
  return sub_1DD2FA2E8();
}

void EmojiPosterBackgroundStyle.encode(to:)(_QWORD *a1)
{
  unsigned __int8 *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v13[16];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDB61A98);
  v13[11] = *(_QWORD *)(v3 - 8);
  v13[12] = v3;
  MEMORY[0x1E0C80A78]();
  v13[10] = (char *)v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDB61AA0);
  v13[8] = *(_QWORD *)(v5 - 8);
  v13[9] = v5;
  MEMORY[0x1E0C80A78]();
  v13[7] = (char *)v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDB61AB0);
  v13[5] = *(_QWORD *)(v7 - 8);
  v13[6] = v7;
  MEMORY[0x1E0C80A78]();
  v13[4] = (char *)v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDB61AA8);
  v13[2] = *(_QWORD *)(v9 - 8);
  v13[3] = v9;
  MEMORY[0x1E0C80A78]();
  v13[1] = (char *)v13 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDB61A90);
  MEMORY[0x1E0C80A78]();
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDB61A88);
  v13[14] = *(_QWORD *)(v11 - 8);
  v13[15] = v11;
  MEMORY[0x1E0C80A78]();
  v12 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DD2BAA24();
  sub_1DD2FA2C4();
  __asm { BR              X9 }
}

uint64_t sub_1DD2BA890()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_BYTE *)(v4 - 69) = 0;
  sub_1DD2BAB78();
  v5 = *(_QWORD *)(v4 - 88);
  sub_1DD2FA1B0();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v3, v0);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 96) + 8))(v1, v5);
}

unint64_t sub_1DD2BAA24()
{
  unint64_t result;

  result = qword_1EDB610E8;
  if (!qword_1EDB610E8)
  {
    result = MEMORY[0x1DF0D8040](&unk_1DD2FDAF4, &type metadata for EmojiPosterBackgroundStyle.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB610E8);
  }
  return result;
}

unint64_t sub_1DD2BAA68()
{
  unint64_t result;

  result = qword_1F03D0C20;
  if (!qword_1F03D0C20)
  {
    result = MEMORY[0x1DF0D8040](&unk_1DD2FDAA4, &type metadata for EmojiPosterBackgroundStyle.VignettedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F03D0C20);
  }
  return result;
}

unint64_t sub_1DD2BAAAC()
{
  unint64_t result;

  result = qword_1EDB61730;
  if (!qword_1EDB61730)
  {
    result = MEMORY[0x1DF0D8040](&unk_1DD2FDA54, &type metadata for EmojiPosterBackgroundStyle.BloomGradientCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB61730);
  }
  return result;
}

unint64_t sub_1DD2BAAF0()
{
  unint64_t result;

  result = qword_1F03D0C28;
  if (!qword_1F03D0C28)
  {
    result = MEMORY[0x1DF0D8040](&unk_1DD2FDA04, &type metadata for EmojiPosterBackgroundStyle.RadialGradientCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F03D0C28);
  }
  return result;
}

unint64_t sub_1DD2BAB34()
{
  unint64_t result;

  result = qword_1F03D0C30;
  if (!qword_1F03D0C30)
  {
    result = MEMORY[0x1DF0D8040]("5hA\rpZ", &type metadata for EmojiPosterBackgroundStyle.LinearGradientCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F03D0C30);
  }
  return result;
}

unint64_t sub_1DD2BAB78()
{
  unint64_t result;

  result = qword_1EDB61100;
  if (!qword_1EDB61100)
  {
    result = MEMORY[0x1DF0D8040](&unk_1DD2FD964, &type metadata for EmojiPosterBackgroundStyle.SolidCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB61100);
  }
  return result;
}

uint64_t _s11EmojiPoster0aB11LayoutStyleO9hashValueSivg_0()
{
  sub_1DD2FA270();
  sub_1DD2FA27C();
  return sub_1DD2FA294();
}

uint64_t EmojiPosterBackgroundStyle.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  char *v24;
  uint64_t v25;
  _QWORD v27[4];
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;

  v42 = a2;
  v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDB615A8);
  v34 = *(_QWORD *)(v41 - 8);
  MEMORY[0x1E0C80A78]();
  v40 = (char *)v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDB615B0);
  v35 = *(_QWORD *)(v4 - 8);
  v36 = v4;
  MEMORY[0x1E0C80A78]();
  v39 = (char *)v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDB615C0);
  v32 = *(_QWORD *)(v6 - 8);
  v33 = v6;
  MEMORY[0x1E0C80A78]();
  v38 = (char *)v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDB615B8);
  v30 = *(_QWORD *)(v8 - 8);
  v31 = v8;
  MEMORY[0x1E0C80A78]();
  v37 = (char *)v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDB615A0);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78]();
  v13 = (char *)v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDB61598);
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78]();
  v17 = (char *)v27 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = a1[3];
  v43 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v18);
  sub_1DD2BAA24();
  v19 = v44;
  sub_1DD2FA2AC();
  if (!v19)
  {
    v27[2] = v10;
    v27[3] = v13;
    v27[1] = v11;
    v44 = v15;
    v28 = v17;
    v29 = v14;
    v20 = sub_1DD2FA1A4();
    if (*(_QWORD *)(v20 + 16) == 1)
      __asm { BR              X9 }
    v21 = sub_1DD2FA06C();
    swift_allocError();
    v23 = v22;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1F03D0C18);
    *v23 = &type metadata for EmojiPosterBackgroundStyle;
    v24 = v28;
    v25 = v29;
    sub_1DD2FA150();
    sub_1DD2FA060();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v21 - 8) + 104))(v23, *MEMORY[0x1E0DEC450], v21);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v44 + 8))(v24, v25);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v43);
}

uint64_t sub_1DD2BB0FC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return EmojiPosterBackgroundStyle.init(from:)(a1, a2);
}

void sub_1DD2BB110(_QWORD *a1)
{
  EmojiPosterBackgroundStyle.encode(to:)(a1);
}

void static EmojiPosterBackgroundColor.white(withAlpha:)(uint64_t a1@<X8>, double a2@<D0>)
{
  __asm { FMOV            V1.2D, #1.0 }
  *(_OWORD *)a1 = _Q1;
  *(_QWORD *)(a1 + 16) = 0x3FF0000000000000;
  *(double *)(a1 + 24) = a2;
}

EmojiPoster::EmojiPosterBackgroundColor __swiftcall EmojiPosterBackgroundColor.init(red:green:blue:alpha:)(Swift::Double red, Swift::Double green, Swift::Double blue, Swift::Double alpha)
{
  Swift::Double *v4;
  EmojiPoster::EmojiPosterBackgroundColor result;

  *v4 = red;
  v4[1] = green;
  v4[2] = blue;
  v4[3] = alpha;
  result.alpha = alpha;
  result.blue = blue;
  result.green = green;
  result.red = red;
  return result;
}

void static EmojiPosterBackgroundColor.black(withAlpha:)(uint64_t a1@<X8>, double a2@<D0>)
{
  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 0;
  *(_QWORD *)(a1 + 16) = 0;
  *(double *)(a1 + 24) = a2;
}

double static EmojiPosterBackgroundColor.clear()@<D0>(_OWORD *a1@<X8>)
{
  double result;

  result = 1.0;
  __asm { FMOV            V1.2D, #1.0 }
  *a1 = _Q1;
  a1[1] = xmmword_1DD2FDFB0;
  return result;
}

EmojiPoster::EmojiPosterBackgroundColor __swiftcall EmojiPosterBackgroundColor.init(_:)(UIColor a1)
{
  uint64_t v1;
  uint64_t v3;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  _QWORD v11[2];
  EmojiPoster::EmojiPosterBackgroundColor result;

  v3 = v1;
  v11[1] = *MEMORY[0x1E0C80C00];
  v10 = 0.0;
  v11[0] = 0;
  v8 = 0.0;
  v9 = 0.0;
  -[objc_class getRed:green:blue:alpha:](a1.super.isa, sel_getRed_green_blue_alpha_, v11, &v10, &v9, &v8);

  v5 = v10;
  v4 = *(double *)v11;
  v7 = v8;
  v6 = v9;
  *(_QWORD *)v3 = v11[0];
  *(double *)(v3 + 8) = v5;
  *(double *)(v3 + 16) = v6;
  *(double *)(v3 + 24) = v7;
  result.alpha = v7;
  result.blue = v6;
  result.green = v5;
  result.red = v4;
  return result;
}

uint64_t sub_1DD2BB1F8()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v1 = *v0;
  v2 = v0[1];
  v3 = v0[2];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDB61B08);
  v4 = swift_allocObject();
  v5 = MEMORY[0x1E0DEB070];
  *(_OWORD *)(v4 + 16) = xmmword_1DD2FDFC0;
  v6 = MEMORY[0x1E0DEB100];
  *(_QWORD *)(v4 + 56) = v5;
  *(_QWORD *)(v4 + 64) = v6;
  *(_QWORD *)(v4 + 32) = v1;
  v7 = sub_1DD2F9DF0();
  v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1DD2FDFC0;
  *(_QWORD *)(v8 + 56) = v5;
  *(_QWORD *)(v8 + 64) = v6;
  *(_QWORD *)(v8 + 32) = v2;
  sub_1DD2F9DF0();
  v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1DD2FDFC0;
  *(_QWORD *)(v9 + 56) = v5;
  *(_QWORD *)(v9 + 64) = v6;
  *(_QWORD *)(v9 + 32) = v3;
  sub_1DD2F9DF0();
  sub_1DD2F9E74();
  sub_1DD2F9E74();
  swift_bridgeObjectRelease();
  sub_1DD2F9E74();
  sub_1DD2F9E74();
  swift_bridgeObjectRelease();
  return v7;
}

UIColor __swiftcall EmojiPosterBackgroundColor.uiColor()()
{
  double *v0;

  return (UIColor)objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3658]), sel_initWithRed_green_blue_alpha_, *v0, v0[1], v0[2], v0[3]);
}

BOOL static EmojiPosterBackgroundColor.== infix(_:_:)(double *a1, double *a2)
{
  return *a1 == *a2 && a1[1] == a2[1] && a1[2] == a2[2] && a1[3] == a2[3];
}

uint64_t sub_1DD2BB400()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1DD2BB428 + 4 * byte_1DD2FC4FF[*v0]))(6579570, 0xE300000000000000);
}

uint64_t sub_1DD2BB428()
{
  return 0x6E65657267;
}

uint64_t sub_1DD2BB43C()
{
  return 1702194274;
}

uint64_t sub_1DD2BB44C()
{
  return 0x6168706C61;
}

uint64_t sub_1DD2BB460@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1DD2BF4D0(a1, a2);
  *a3 = result;
  return result;
}

void sub_1DD2BB484(_BYTE *a1@<X8>)
{
  *a1 = 4;
}

uint64_t sub_1DD2BB490()
{
  sub_1DD2BB658();
  return sub_1DD2FA2DC();
}

uint64_t sub_1DD2BB4B8()
{
  sub_1DD2BB658();
  return sub_1DD2FA2E8();
}

uint64_t EmojiPosterBackgroundColor.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  _BYTE v8[16];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDB61A80);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78]();
  v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DD2BB658();
  sub_1DD2FA2C4();
  v8[15] = 0;
  sub_1DD2FA1E0();
  if (!v1)
  {
    v8[14] = 1;
    sub_1DD2FA1E0();
    v8[13] = 2;
    sub_1DD2FA1E0();
    v8[12] = 3;
    sub_1DD2FA1E0();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_1DD2BB658()
{
  unint64_t result;

  result = qword_1EDB610C8;
  if (!qword_1EDB610C8)
  {
    result = MEMORY[0x1DF0D8040](&unk_1DD2FD914, &type metadata for EmojiPosterBackgroundColor.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB610C8);
  }
  return result;
}

uint64_t EmojiPosterBackgroundColor.init(from:)@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  char v20;
  char v21;
  char v22;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDB61590);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78]();
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DD2BB658();
  sub_1DD2FA2AC();
  if (!v2)
  {
    v22 = 0;
    sub_1DD2FA180();
    v10 = v9;
    v21 = 1;
    sub_1DD2FA180();
    v12 = v11;
    v20 = 2;
    sub_1DD2FA180();
    v15 = v14;
    v19 = 3;
    sub_1DD2FA180();
    v17 = v16;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v10;
    a2[1] = v12;
    a2[2] = v15;
    a2[3] = v17;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1DD2BB848@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return EmojiPosterBackgroundColor.init(from:)(a1, a2);
}

uint64_t sub_1DD2BB85C(_QWORD *a1)
{
  return EmojiPosterBackgroundColor.encode(to:)(a1);
}

BOOL sub_1DD2BB870(double *a1, double *a2)
{
  return *a1 == *a2 && a1[1] == a2[1] && a1[2] == a2[2] && a1[3] == a2[3];
}

uint64_t static EmojiPosterConfiguration.localizedString(forStyle:sizeVariant:)()
{
  uint64_t ObjCClassFromMetadata;
  id v1;
  uint64_t v2;

  _s11EmojiPoster0aB13ConfigurationV21layoutLocalizationKey8forStyle11sizeVariantSSAA0ab6LayoutH0O_AA0ab4SizeJ0OtFZ_0();
  type metadata accessor for BackgroundViewController();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v1 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  v2 = sub_1DD2F9C34();
  swift_bridgeObjectRelease();

  return v2;
}

uint64_t EmojiPosterConfiguration.customIdentifier.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t EmojiPosterConfiguration.backgroundConfiguration.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  char v9;

  v2 = *(_QWORD *)(v1 + 56);
  v3 = *(_QWORD *)(v1 + 64);
  v4 = *(_QWORD *)(v1 + 72);
  v5 = *(_QWORD *)(v1 + 80);
  v6 = *(_QWORD *)(v1 + 88);
  v7 = *(_QWORD *)(v1 + 96);
  v8 = *(_BYTE *)(v1 + 104);
  v9 = *(_BYTE *)(v1 + 105);
  *(_BYTE *)a1 = *(_BYTE *)(v1 + 16);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(v1 + 24);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(v1 + 40);
  *(_QWORD *)(a1 + 40) = v2;
  *(_QWORD *)(a1 + 48) = v3;
  *(_QWORD *)(a1 + 56) = v4;
  *(_QWORD *)(a1 + 64) = v5;
  *(_QWORD *)(a1 + 72) = v6;
  *(_QWORD *)(a1 + 80) = v7;
  *(_BYTE *)(a1 + 88) = v8;
  *(_BYTE *)(a1 + 89) = v9;
  return sub_1DD2BF7A4(v2, v3, v4, v5, v6);
}

void EmojiPosterConfiguration.layoutStyle.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 106);
}

void EmojiPosterConfiguration.sizeVariant.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 107);
}

uint64_t EmojiPosterConfiguration.emoji.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t EmojiPosterConfiguration.usesParalax.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 120);
}

uint64_t EmojiPosterConfiguration.localizedLayoutName.getter()
{
  return _s11EmojiPoster0aB13ConfigurationV21layoutLocalizationKey8forStyle11sizeVariantSSAA0ab6LayoutH0O_AA0ab4SizeJ0OtFZ_0();
}

double EmojiPosterConfiguration.init(backgroundConfiguration:layoutStyle:sizeVariant:emoji:usesParalax:)@<D0>(uint64_t a1@<X0>, char *a2@<X1>, char *a3@<X2>, unint64_t a4@<X3>, uint64_t a5@<X4>, _OWORD *a6@<X8>)
{
  char v7;
  char v8;
  char v9;
  char v10;
  __int128 v11;
  __int128 v12;
  double result;
  __int128 v14;
  char v15;
  char v16;
  char v17[8];
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  char v23;
  char v24;
  _OWORD v25[2];
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  _OWORD v30[2];

  v7 = *(_BYTE *)(a1 + 88);
  v8 = *(_BYTE *)(a1 + 89);
  v9 = *a2;
  v10 = *a3;
  v17[0] = *(_BYTE *)a1;
  v18 = *(_OWORD *)(a1 + 8);
  v19 = *(_OWORD *)(a1 + 24);
  v20 = *(_OWORD *)(a1 + 40);
  v21 = *(_OWORD *)(a1 + 56);
  v22 = *(_OWORD *)(a1 + 72);
  v23 = v7;
  v24 = v8;
  v16 = v9;
  v15 = v10;
  EmojiPosterConfiguration.init(identifier:backgroundConfiguration:layoutStyle:sizeVariant:emoji:usesParalax:)(0, 0, v17, &v16, &v15, a4, a5, (uint64_t)v25);
  v11 = v29;
  a6[4] = v28;
  a6[5] = v11;
  a6[6] = v30[0];
  *(_OWORD *)((char *)a6 + 105) = *(_OWORD *)((char *)v30 + 9);
  v12 = v25[1];
  *a6 = v25[0];
  a6[1] = v12;
  result = *(double *)&v26;
  v14 = v27;
  a6[2] = v26;
  a6[3] = v14;
  return result;
}

uint64_t EmojiPosterConfiguration.init(identifier:backgroundConfiguration:layoutStyle:sizeVariant:emoji:usesParalax:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, char *a3@<X2>, char *a4@<X3>, char *a5@<X4>, unint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  char v17;
  int v18;
  char v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  char v24;
  char v25;
  unint64_t v26;
  id v27;
  void *v28;
  uint64_t v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD v36[2];

  v36[1] = *MEMORY[0x1E0C80C00];
  v9 = *a3;
  v10 = *((_QWORD *)a3 + 1);
  v11 = *((_QWORD *)a3 + 2);
  v12 = *((_QWORD *)a3 + 3);
  v13 = *((_QWORD *)a3 + 4);
  v14 = *(_OWORD *)(a3 + 40);
  v15 = *(_OWORD *)(a3 + 56);
  v16 = *(_OWORD *)(a3 + 72);
  v17 = a3[88];
  v18 = a3[89];
  v19 = *a4;
  v20 = *a5;
  if (v18 == 1)
  {
    v29 = result;
    v21 = a7;
    v22 = a2;
    v31 = *(_OWORD *)(a3 + 56);
    v32 = *(_OWORD *)(a3 + 40);
    v30 = *(_OWORD *)(a3 + 72);
    v23 = *a3;
    v24 = *a4;
    v25 = *a5;
    v26 = a6;
    v27 = _sSo7UIColorC11EmojiPosterE021emp_suggestedColorForB0yABSgSaySSGFZ_0(a6);
    a6 = v26;
    v20 = v25;
    v19 = v24;
    v9 = v23;
    v16 = v30;
    v15 = v31;
    v14 = v32;
    a2 = v22;
    LOBYTE(a7) = v21;
    v28 = v27;
    result = v29;
    if (v28)
    {
      v35 = 0;
      v36[0] = 0;
      v33 = 0;
      v34 = 0;
      objc_msgSend(v28, sel_getRed_green_blue_alpha_, v36, &v35, &v34, &v33, v21, *(double *)&v32, *(double *)&v31, *(double *)&v30);

      a6 = v26;
      v20 = v25;
      v19 = v24;
      v9 = v23;
      v16 = v30;
      v15 = v31;
      v14 = v32;
      result = v29;
      a2 = v22;
      LOBYTE(a7) = v21;
      v11 = v35;
      v10 = v36[0];
      v13 = v33;
      v12 = v34;
      v17 = 1;
    }
  }
  *(_QWORD *)a8 = result;
  *(_QWORD *)(a8 + 8) = a2;
  *(_BYTE *)(a8 + 16) = v9;
  *(_QWORD *)(a8 + 24) = v10;
  *(_QWORD *)(a8 + 32) = v11;
  *(_QWORD *)(a8 + 40) = v12;
  *(_QWORD *)(a8 + 48) = v13;
  *(_OWORD *)(a8 + 56) = v14;
  *(_OWORD *)(a8 + 72) = v15;
  *(_OWORD *)(a8 + 88) = v16;
  *(_BYTE *)(a8 + 104) = v17;
  *(_BYTE *)(a8 + 105) = v18;
  *(_BYTE *)(a8 + 106) = v19;
  *(_BYTE *)(a8 + 107) = v20;
  *(_QWORD *)(a8 + 112) = a6;
  *(_BYTE *)(a8 + 120) = a7 & 1;
  return result;
}

uint64_t EmojiPosterBackgroundConfiguration.shouldRecalculateSuggestedColor.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 89);
}

__n128 EmojiPosterBackgroundConfiguration.init(backgroundStyle:backgroundColor:gradientProperties:isSuggestedColor:shouldRecalculateSuggestedColor:)@<Q0>(_BYTE *a1@<X0>, _OWORD *a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, char a5@<W4>, uint64_t a6@<X8>)
{
  __int128 v6;
  __int128 v7;
  __n128 result;

  v6 = a2[1];
  *(_OWORD *)(a6 + 8) = *a2;
  *(_OWORD *)(a6 + 24) = v6;
  v7 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)(a6 + 40) = *(_OWORD *)a3;
  *(_BYTE *)a6 = *a1;
  *(_OWORD *)(a6 + 56) = v7;
  result = *(__n128 *)(a3 + 32);
  *(__n128 *)(a6 + 72) = result;
  *(_BYTE *)(a6 + 88) = a4 | a5;
  *(_BYTE *)(a6 + 89) = a5;
  return result;
}

Swift::String __swiftcall EmojiPosterConfiguration.identifier()()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  int v3;
  uint64_t v4;
  unint64_t v5;
  BOOL v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  void *v10;
  Swift::String result;
  uint64_t v12;

  if (*(_QWORD *)(v0 + 8))
  {
    v1 = *(_QWORD *)v0;
    v2 = *(void **)(v0 + 8);
  }
  else
  {
    v3 = *(unsigned __int8 *)(v0 + 106);
    v4 = 0x72616C7563726963;
    v5 = 0xE600000000000000;
    if (v3 == 1)
      v5 = 0xE800000000000000;
    else
      v4 = 0x6C6172697073;
    v6 = v3 == 0;
    if (*(_BYTE *)(v0 + 106))
      v7 = v4;
    else
      v7 = 0x724774657366666FLL;
    if (v6)
      v8 = 0xEA00000000006469;
    else
      v8 = v5;
    v12 = v7;
    swift_bridgeObjectRetain();
    sub_1DD2F9E74();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_1DD2F9E74();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EDB61500);
    sub_1DD2BFCE8((unint64_t *)&qword_1EDB616A8, &qword_1EDB61500, MEMORY[0x1E0DEAF20]);
    sub_1DD2F9D90();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_1DD2F9E74();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_1DD2F9E74();
    swift_bridgeObjectRelease();
    EmojiPosterBackgroundConfiguration.identifier()();
    swift_bridgeObjectRetain();
    sub_1DD2F9E74();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v1 = v12;
    v2 = (void *)v8;
  }
  swift_bridgeObjectRetain();
  v9 = v1;
  v10 = v2;
  result._object = v10;
  result._countAndFlagsBits = v9;
  return result;
}

Swift::String __swiftcall EmojiPosterBackgroundConfiguration.identifier()()
{
  unsigned __int8 *v0;
  uint64_t v1;
  Swift::String result;

  v1 = *v0;
  if (*((_QWORD *)v0 + 9))
    sub_1DD2BCC30();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDB615E8);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1DD2FDFD0;
  __asm { BR              X11 }
  return result;
}

uint64_t sub_1DD2BC060()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  strcpy((char *)(v0 + 32), "linearGradient");
  *(_BYTE *)(v0 + 47) = -18;
  *(_QWORD *)(v0 + 48) = sub_1DD2BB1F8();
  *(_QWORD *)(v0 + 56) = v4;
  *(_QWORD *)(v0 + 64) = v2;
  *(_QWORD *)(v0 + 72) = v1;
  v5 = 0x677553746F4E7369;
  if (v3)
    v5 = 0x7365676775537369;
  v6 = 0xEE00646574736567;
  if (v3)
    v6 = 0xEB00000000646574;
  *(_QWORD *)(v0 + 80) = v5;
  *(_QWORD *)(v0 + 88) = v6;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDB61500);
  sub_1DD2BFCE8((unint64_t *)&qword_1EDB616A8, &qword_1EDB61500, MEMORY[0x1E0DEAF20]);
  v7 = sub_1DD2F9D90();
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t sub_1DD2BC1BC(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_1DD2BC1F4 + 4 * byte_1DD2FC508[a1]))(0xD000000000000010, 0x80000001DD300380);
}

uint64_t sub_1DD2BC1F4(uint64_t a1)
{
  return a1 + 7;
}

uint64_t sub_1DD2BC20C()
{
  return 0x745374756F79616CLL;
}

uint64_t sub_1DD2BC22C()
{
  return 0x69726156657A6973;
}

uint64_t sub_1DD2BC24C()
{
  return 0x696A6F6D65;
}

uint64_t sub_1DD2BC260()
{
  return 0x6172615073657375;
}

uint64_t sub_1DD2BC280()
{
  unsigned __int8 *v0;

  return sub_1DD2BC1BC(*v0);
}

uint64_t sub_1DD2BC288@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1DD2C22C8(a1, a2);
  *a3 = result;
  return result;
}

void sub_1DD2BC2AC(_BYTE *a1@<X8>)
{
  *a1 = 6;
}

uint64_t sub_1DD2BC2B8()
{
  sub_1DD2BF818();
  return sub_1DD2FA2DC();
}

uint64_t sub_1DD2BC2E0()
{
  sub_1DD2BF818();
  return sub_1DD2FA2E8();
}

uint64_t EmojiPosterConfiguration.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  char v15;
  uint64_t v16;
  _DWORD v18[2];
  uint64_t v19;
  int v20;
  int v21;
  int v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  char v43;
  int v44;
  char v45;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDB61A78);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78]();
  v6 = (char *)v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = *(unsigned __int8 *)(v1 + 16);
  v7 = *(_QWORD *)(v1 + 24);
  v8 = *(_QWORD *)(v1 + 32);
  v9 = *(_QWORD *)(v1 + 40);
  v10 = *(_QWORD *)(v1 + 48);
  v11 = *(_QWORD *)(v1 + 56);
  v28 = *(_QWORD *)(v1 + 64);
  v29 = v11;
  v12 = *(_QWORD *)(v1 + 72);
  v26 = *(_QWORD *)(v1 + 80);
  v27 = v12;
  v25 = *(_QWORD *)(v1 + 88);
  v24 = *(_QWORD *)(v1 + 96);
  v23 = *(unsigned __int8 *)(v1 + 104);
  v22 = *(unsigned __int8 *)(v1 + 105);
  v21 = *(unsigned __int8 *)(v1 + 106);
  v20 = *(unsigned __int8 *)(v1 + 107);
  v19 = *(_QWORD *)(v1 + 112);
  v18[1] = *(unsigned __int8 *)(v1 + 120);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DD2BF818();
  sub_1DD2FA2C4();
  LOBYTE(v31) = 0;
  v13 = v30;
  sub_1DD2FA1BC();
  if (!v13)
  {
    v14 = v21;
    v15 = v20;
    v16 = v19;
    LOBYTE(v31) = v44;
    v32 = v7;
    v33 = v8;
    v34 = v9;
    v35 = v10;
    v36 = v29;
    v37 = v28;
    v38 = v27;
    v39 = v26;
    v40 = v25;
    v41 = v24;
    v42 = v23;
    v43 = v22;
    v45 = 1;
    sub_1DD2BF85C();
    sub_1DD2FA1F8();
    LOBYTE(v31) = v14;
    v45 = 2;
    sub_1DD2BF8A0();
    sub_1DD2FA1F8();
    LOBYTE(v31) = v15;
    v45 = 3;
    sub_1DD2BF8E4();
    sub_1DD2FA1F8();
    v31 = v16;
    v45 = 4;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EDB61500);
    sub_1DD2BFF28(&qword_1EDB61A18, &qword_1EDB61500, MEMORY[0x1E0DEA970], MEMORY[0x1E0DEAF10]);
    sub_1DD2FA1F8();
    LOBYTE(v31) = 5;
    sub_1DD2FA1D4();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

_QWORD *EmojiPosterConfiguration.init(from:)@<X0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  __int128 v31;
  _OWORD *v32;
  __int128 v33;
  __int128 v34;
  uint64_t v36;
  int v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  int v42;
  int v43;
  __int128 v44;
  uint64_t v45;
  uint64_t v46;
  _OWORD *v47;
  uint64_t v48;
  _QWORD *v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  _OWORD v56[2];
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char v70;
  char v71;
  char v72;
  char v73;
  uint64_t v74;
  char v75;
  int v76;
  char v77;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDB61588);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78]();
  v8 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[3];
  v49 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v9);
  sub_1DD2BF818();
  sub_1DD2FA2AC();
  if (v2)
    return (_QWORD *)__swift_destroy_boxed_opaque_existential_1((uint64_t)v49);
  v47 = a2;
  v48 = v6;
  LOBYTE(v57) = 0;
  v10 = v5;
  v11 = sub_1DD2FA15C();
  v13 = v12;
  LOBYTE(v50) = 1;
  sub_1DD2BF958();
  swift_bridgeObjectRetain();
  sub_1DD2FA198();
  *(_QWORD *)&v44 = v11;
  *((_QWORD *)&v44 + 1) = v13;
  v43 = v57;
  v14 = v58;
  v15 = v59;
  v16 = v60;
  v17 = v61;
  v19 = v64;
  v18 = v65;
  v76 = v68;
  v42 = BYTE1(v68);
  LOBYTE(v50) = 2;
  v20 = v62;
  v21 = v63;
  v45 = v67;
  v46 = v66;
  sub_1DD2BF7A4(v62, v63, v64, v65, v66);
  sub_1DD2BF99C();
  sub_1DD2FA198();
  v40 = v18;
  v41 = v19;
  v22 = v21;
  LODWORD(v21) = v57;
  LOBYTE(v50) = 3;
  sub_1DD2BF9E0();
  sub_1DD2FA198();
  v38 = v57;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDB61500);
  LOBYTE(v50) = 4;
  sub_1DD2BFF28(&qword_1EDB61508, &qword_1EDB61500, MEMORY[0x1E0DEA9A0], MEMORY[0x1E0DEAF40]);
  sub_1DD2FA198();
  v37 = v21;
  v77 = 5;
  v39 = v57;
  swift_bridgeObjectRetain();
  v23 = sub_1DD2FA174();
  (*(void (**)(char *, uint64_t))(v48 + 8))(v8, v10);
  LODWORD(v48) = v23 & 1;
  v24 = v45;
  v50 = v44;
  LOBYTE(v51) = v43;
  *((_QWORD *)&v51 + 1) = v14;
  *(_QWORD *)&v52 = v15;
  *((_QWORD *)&v52 + 1) = v16;
  *(_QWORD *)&v53 = v17;
  *((_QWORD *)&v53 + 1) = v20;
  *(_QWORD *)&v54 = v22;
  v36 = v20;
  v25 = v22;
  v26 = v41;
  v27 = v40;
  *((_QWORD *)&v54 + 1) = v41;
  *(_QWORD *)&v55 = v40;
  v28 = v46;
  *((_QWORD *)&v55 + 1) = v46;
  *(_QWORD *)&v56[0] = v45;
  BYTE8(v56[0]) = v76;
  BYTE9(v56[0]) = v42;
  BYTE10(v56[0]) = v37;
  BYTE11(v56[0]) = v38;
  *(_QWORD *)&v56[1] = v39;
  BYTE8(v56[1]) = v23 & 1;
  sub_1DD2BFA24(&v50);
  swift_bridgeObjectRelease();
  v29 = v26;
  sub_1DD2BF928(v20, v25, v26, v27, v28);
  v30 = *((_QWORD *)&v44 + 1);
  swift_bridgeObjectRelease();
  v31 = v55;
  v32 = v47;
  v47[4] = v54;
  v32[5] = v31;
  v32[6] = v56[0];
  *(_OWORD *)((char *)v32 + 105) = *(_OWORD *)((char *)v56 + 9);
  v33 = v51;
  *v32 = v50;
  v32[1] = v33;
  v34 = v53;
  v32[2] = v52;
  v32[3] = v34;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v49);
  v57 = v44;
  v58 = v30;
  LOBYTE(v59) = v43;
  v60 = v14;
  v61 = v15;
  v62 = v16;
  v63 = v17;
  v64 = v36;
  v65 = v25;
  v66 = v29;
  v67 = v27;
  v68 = v28;
  v69 = v24;
  v70 = v76;
  v71 = v42;
  v72 = v37;
  v73 = v38;
  v74 = v39;
  v75 = v48;
  return sub_1DD2BFA98(&v57);
}

_QWORD *sub_1DD2BCBC4@<X0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  return EmojiPosterConfiguration.init(from:)(a1, a2);
}

uint64_t sub_1DD2BCBD8(_QWORD *a1)
{
  return EmojiPosterConfiguration.encode(to:)(a1);
}

void EmojiPosterBackgroundConfiguration.backgroundStyle.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

__n128 EmojiPosterBackgroundConfiguration.backgroundColor.getter@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  __n128 result;
  __int128 v3;

  result = *(__n128 *)(v1 + 8);
  v3 = *(_OWORD *)(v1 + 24);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t EmojiPosterBackgroundConfiguration.gradientProperties.getter@<X0>(uint64_t *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = v1[5];
  v3 = v1[6];
  v4 = v1[7];
  v5 = v1[8];
  v6 = v1[9];
  v7 = v1[10];
  *a1 = v2;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  a1[4] = v6;
  a1[5] = v7;
  return sub_1DD2BF7A4(v2, v3, v4, v5, v6);
}

uint64_t EmojiPosterBackgroundConfiguration.isSuggestedColor.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 88);
}

uint64_t sub_1DD2BCC30()
{
  _QWORD *v0;
  int v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v1 = *(unsigned __int8 *)v0;
  v2 = v0[1];
  v3 = v0[2];
  v4 = v0[3];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDB61B08);
  v5 = swift_allocObject();
  v6 = MEMORY[0x1E0DEB070];
  *(_OWORD *)(v5 + 16) = xmmword_1DD2FDFC0;
  v7 = MEMORY[0x1E0DEB100];
  *(_QWORD *)(v5 + 56) = v6;
  *(_QWORD *)(v5 + 64) = v7;
  *(_QWORD *)(v5 + 32) = v2;
  v8 = sub_1DD2F9DF0();
  v10 = v9;
  v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_1DD2FDFC0;
  *(_QWORD *)(v11 + 56) = v6;
  *(_QWORD *)(v11 + 64) = v7;
  *(_QWORD *)(v11 + 32) = v3;
  v12 = sub_1DD2F9DF0();
  v14 = v13;
  v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_1DD2FDFC0;
  *(_QWORD *)(v15 + 56) = v6;
  *(_QWORD *)(v15 + 64) = v7;
  *(_QWORD *)(v15 + 32) = v4;
  v16 = sub_1DD2F9DF0();
  v18 = v17;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDB615E8);
  v19 = swift_allocObject();
  v20 = (_QWORD *)v19;
  *(_OWORD *)(v19 + 16) = xmmword_1DD2FDFE0;
  v21 = 0x7261656E696CLL;
  if (v1)
    v21 = 0x6C6169646172;
  *(_QWORD *)(v19 + 32) = v21;
  *(_QWORD *)(v19 + 40) = 0xE600000000000000;
  *(_QWORD *)(v19 + 48) = v8;
  *(_QWORD *)(v19 + 56) = v10;
  *(_QWORD *)(v19 + 64) = v12;
  *(_QWORD *)(v19 + 72) = v14;
  *(_QWORD *)(v19 + 80) = v16;
  *(_QWORD *)(v19 + 88) = v18;
  *(_QWORD *)(v19 + 96) = sub_1DD2BDD48();
  v20[13] = v22;
  v20[14] = sub_1DD2BDFE4();
  v20[15] = v23;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDB61500);
  sub_1DD2BFCE8((unint64_t *)&qword_1EDB616A8, &qword_1EDB61500, MEMORY[0x1E0DEAF20]);
  v24 = sub_1DD2F9D90();
  swift_bridgeObjectRelease();
  return v24;
}

uint64_t sub_1DD2BCE5C(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1DD2BCE9C + 4 * byte_1DD2FC50E[a1]))(0x756F72676B636162, 0xEF656C797453646ELL);
}

unint64_t sub_1DD2BCEB0()
{
  return 0xD000000000000012;
}

uint64_t sub_1DD2BCF04()
{
  unsigned __int8 *v0;

  return sub_1DD2BCE5C(*v0);
}

uint64_t sub_1DD2BCF0C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1DD2C2580(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DD2BCF30()
{
  sub_1DD2BFB0C();
  return sub_1DD2FA2DC();
}

uint64_t sub_1DD2BCF58()
{
  sub_1DD2BFB0C();
  return sub_1DD2FA2E8();
}

uint64_t EmojiPosterBackgroundConfiguration.encode(to:)(_QWORD *a1)
{
  char *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int v35;
  char v36;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDB61AB8);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78]();
  v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v1;
  v9 = *((_QWORD *)v1 + 1);
  v10 = *((_QWORD *)v1 + 2);
  v11 = *((_QWORD *)v1 + 3);
  v12 = *((_QWORD *)v1 + 4);
  v13 = *((_QWORD *)v1 + 5);
  v27 = *((_QWORD *)v1 + 6);
  v28 = v13;
  v14 = *((_QWORD *)v1 + 7);
  v25 = *((_QWORD *)v1 + 8);
  v26 = v14;
  v15 = *((_QWORD *)v1 + 9);
  v23 = *((_QWORD *)v1 + 10);
  v24 = v15;
  v35 = v1[88];
  v22 = v1[89];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DD2BFB0C();
  sub_1DD2FA2C4();
  LOBYTE(v29) = v8;
  v36 = 0;
  sub_1DD2BFB50();
  sub_1DD2FA1F8();
  if (!v2)
  {
    v17 = v25;
    v16 = v26;
    v19 = v27;
    v18 = v28;
    v29 = v9;
    v30 = v10;
    v31 = v11;
    v32 = v12;
    v36 = 1;
    sub_1DD2BFB94();
    sub_1DD2FA1F8();
    v29 = v18;
    v30 = v19;
    v31 = v16;
    v32 = v17;
    v33 = v24;
    v34 = v23;
    v36 = 2;
    sub_1DD2BFBD8();
    sub_1DD2FA1C8();
    LOBYTE(v29) = v35;
    v36 = 3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EDB61238);
    sub_1DD2BFF28(&qword_1F03D0C38, &qword_1EDB61238, MEMORY[0x1E0DEAFA8], (uint64_t)&unk_1DD2FE7C8);
    sub_1DD2FA1F8();
    LOBYTE(v29) = v22;
    v36 = 4;
    sub_1DD2FA1F8();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t EmojiPosterBackgroundConfiguration.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  int v40;
  unsigned __int8 v41;

  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDB615C8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78]();
  v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DD2BFB0C();
  sub_1DD2FA2AC();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v41 = 0;
  sub_1DD2BFC1C();
  sub_1DD2FA198();
  v9 = v34;
  v41 = 1;
  sub_1DD2BFC60();
  sub_1DD2FA198();
  v10 = v34;
  v11 = v35;
  v12 = v36;
  v13 = v37;
  v41 = 2;
  sub_1DD2BFCA4();
  sub_1DD2FA168();
  v40 = v9;
  v32 = v35;
  v33 = v34;
  v14 = v37;
  v31 = v36;
  v15 = v39;
  v28 = v38;
  LOBYTE(v34) = 3;
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDB61238);
  v29 = v15;
  v30 = v14;
  v17 = v14;
  v18 = v28;
  sub_1DD2BF7A4(v33, v32, v31, v17, v28);
  sub_1DD2BFCE8(&qword_1EDB61230, &qword_1EDB61238, (uint64_t)&unk_1DD2FE7A0);
  v27 = v16;
  sub_1DD2FA168();
  HIDWORD(v26) = v41;
  LOBYTE(v34) = 4;
  sub_1DD2FA168();
  v20 = BYTE4(v26) & 1;
  HIDWORD(v26) = v41 & 1;
  LODWORD(v27) = v20;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  *(_BYTE *)a2 = v40;
  *(_QWORD *)(a2 + 8) = v10;
  *(_QWORD *)(a2 + 16) = v11;
  *(_QWORD *)(a2 + 24) = v12;
  *(_QWORD *)(a2 + 32) = v13;
  v22 = v32;
  v21 = v33;
  *(_QWORD *)(a2 + 40) = v33;
  *(_QWORD *)(a2 + 48) = v22;
  v24 = v30;
  v23 = v31;
  *(_QWORD *)(a2 + 56) = v31;
  *(_QWORD *)(a2 + 64) = v24;
  v25 = v29;
  *(_QWORD *)(a2 + 72) = v18;
  *(_QWORD *)(a2 + 80) = v25;
  *(_BYTE *)(a2 + 88) = v27;
  *(_BYTE *)(a2 + 89) = BYTE4(v26);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return sub_1DD2BF928(v21, v22, v23, v24, v18);
}

uint64_t sub_1DD2BD588@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return EmojiPosterBackgroundConfiguration.init(from:)(a1, a2);
}

uint64_t sub_1DD2BD59C(_QWORD *a1)
{
  return EmojiPosterBackgroundConfiguration.encode(to:)(a1);
}

BOOL static GradientType.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t GradientType.hash(into:)()
{
  return sub_1DD2FA27C();
}

BOOL sub_1DD2BD5F4(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t sub_1DD2BD60C()
{
  _BYTE *v0;

  if (*v0)
    return 0x6C6169646172;
  else
    return 0x7261656E696CLL;
}

uint64_t sub_1DD2BD638@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1DD2C27BC(a1, a2);
  *a3 = result;
  return result;
}

void sub_1DD2BD65C(_BYTE *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_1DD2BD668()
{
  sub_1DD2BFD28();
  return sub_1DD2FA2DC();
}

uint64_t sub_1DD2BD690()
{
  sub_1DD2BFD28();
  return sub_1DD2FA2E8();
}

uint64_t sub_1DD2BD6B8()
{
  sub_1DD2BFDB0();
  return sub_1DD2FA2DC();
}

uint64_t sub_1DD2BD6E0()
{
  sub_1DD2BFDB0();
  return sub_1DD2FA2E8();
}

uint64_t sub_1DD2BD708()
{
  sub_1DD2BFD6C();
  return sub_1DD2FA2DC();
}

uint64_t sub_1DD2BD730()
{
  sub_1DD2BFD6C();
  return sub_1DD2FA2E8();
}

uint64_t GradientType.encode(to:)(_QWORD *a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  char v20;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDB61AD0);
  v16 = *(_QWORD *)(v3 - 8);
  v17 = v3;
  MEMORY[0x1E0C80A78]();
  v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDB61AC8);
  v14 = *(_QWORD *)(v6 - 8);
  v15 = v6;
  MEMORY[0x1E0C80A78]();
  v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDB61AC0);
  v18 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78]();
  v11 = (char *)&v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DD2BFD28();
  sub_1DD2FA2C4();
  if ((v12 & 1) != 0)
  {
    v20 = 1;
    sub_1DD2BFD6C();
    sub_1DD2FA1B0();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v5, v17);
  }
  else
  {
    v19 = 0;
    sub_1DD2BFDB0();
    sub_1DD2FA1B0();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v8, v15);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v11, v9);
}

uint64_t GradientType.hashValue.getter()
{
  sub_1DD2FA270();
  sub_1DD2FA27C();
  return sub_1DD2FA294();
}

uint64_t GradientType.init(from:)@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  _BYTE *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  char v35;

  v30 = a2;
  v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F03D0C48);
  v32 = *(_QWORD *)(v29 - 8);
  MEMORY[0x1E0C80A78]();
  v31 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F03D0C50);
  v4 = *(_QWORD *)(v28 - 8);
  MEMORY[0x1E0C80A78]();
  v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F03D0C58);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78]();
  v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DD2BFD28();
  v11 = v33;
  sub_1DD2FA2AC();
  if (v11)
    goto LABEL_7;
  v26 = v4;
  v27 = a1;
  v12 = v31;
  v13 = v32;
  v33 = v8;
  v14 = sub_1DD2FA1A4();
  v15 = v7;
  if (*(_QWORD *)(v14 + 16) != 1)
  {
    v19 = sub_1DD2FA06C();
    swift_allocError();
    v21 = v20;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1F03D0C18);
    *v21 = &type metadata for GradientType;
    sub_1DD2FA150();
    sub_1DD2FA060();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v19 - 8) + 104))(v21, *MEMORY[0x1E0DEC450], v19);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v33 + 8))(v10, v15);
    a1 = v27;
LABEL_7:
    v24 = (uint64_t)a1;
    return __swift_destroy_boxed_opaque_existential_1(v24);
  }
  v16 = *(_BYTE *)(v14 + 32);
  if ((v16 & 1) != 0)
  {
    LODWORD(v28) = *(unsigned __int8 *)(v14 + 32);
    v35 = 1;
    sub_1DD2BFD6C();
    sub_1DD2FA144();
    v17 = v33;
    v18 = v30;
    (*(void (**)(char *, uint64_t))(v13 + 8))(v12, v29);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v17 + 8))(v10, v15);
    v16 = v28;
  }
  else
  {
    v34 = 0;
    sub_1DD2BFDB0();
    v22 = v6;
    sub_1DD2FA144();
    v23 = v33;
    v18 = v30;
    (*(void (**)(char *, uint64_t))(v26 + 8))(v22, v28);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v23 + 8))(v10, v15);
  }
  *v18 = v16;
  v24 = (uint64_t)v27;
  return __swift_destroy_boxed_opaque_existential_1(v24);
}

uint64_t sub_1DD2BDCC8()
{
  sub_1DD2FA270();
  sub_1DD2FA27C();
  return sub_1DD2FA294();
}

uint64_t sub_1DD2BDD08@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return GradientType.init(from:)(a1, a2);
}

uint64_t sub_1DD2BDD1C(_QWORD *a1)
{
  return GradientType.encode(to:)(a1);
}

void __swiftcall GradientProperties.init(type:angle:leftColorValue:rightColorValue:colors:locations:)(EmojiPoster::GradientProperties *__return_ptr retstr, EmojiPoster::GradientType type, Swift::Double angle, Swift::Double leftColorValue, Swift::Double rightColorValue, Swift::OpaquePointer colors, Swift::OpaquePointer locations)
{
  retstr->type = *(_BYTE *)type;
  retstr->angle = angle;
  retstr->leftColorValue = leftColorValue;
  retstr->rightColorValue = rightColorValue;
  retstr->colors = colors;
  retstr->locations = locations;
}

uint64_t sub_1DD2BDD48()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  _QWORD *v17;
  uint64_t v18;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 32) + 16);
  if (v1)
  {
    v2 = (uint64_t *)(swift_bridgeObjectRetain() + 48);
    v3 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    do
    {
      v4 = *(v2 - 2);
      v5 = *(v2 - 1);
      v6 = *v2;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EDB61B08);
      v7 = swift_allocObject();
      *(_OWORD *)(v7 + 16) = xmmword_1DD2FDFC0;
      v8 = MEMORY[0x1E0DEB070];
      *(_QWORD *)(v7 + 56) = MEMORY[0x1E0DEB070];
      v9 = MEMORY[0x1E0DEB100];
      *(_QWORD *)(v7 + 64) = MEMORY[0x1E0DEB100];
      *(_QWORD *)(v7 + 32) = v4;
      v10 = sub_1DD2F9DF0();
      v12 = v11;
      v13 = swift_allocObject();
      *(_OWORD *)(v13 + 16) = xmmword_1DD2FDFC0;
      *(_QWORD *)(v13 + 56) = v8;
      *(_QWORD *)(v13 + 64) = v9;
      *(_QWORD *)(v13 + 32) = v5;
      sub_1DD2F9DF0();
      v14 = swift_allocObject();
      *(_OWORD *)(v14 + 16) = xmmword_1DD2FDFC0;
      *(_QWORD *)(v14 + 56) = v8;
      *(_QWORD *)(v14 + 64) = v9;
      *(_QWORD *)(v14 + 32) = v6;
      sub_1DD2F9DF0();
      sub_1DD2F9E74();
      sub_1DD2F9E74();
      swift_bridgeObjectRelease();
      sub_1DD2F9E74();
      sub_1DD2F9E74();
      swift_bridgeObjectRelease();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v3 = sub_1DD2DDAC4(0, v3[2] + 1, 1, v3);
      v16 = v3[2];
      v15 = v3[3];
      if (v16 >= v15 >> 1)
        v3 = sub_1DD2DDAC4((_QWORD *)(v15 > 1), v16 + 1, 1, v3);
      v3[2] = v16 + 1;
      v17 = &v3[2 * v16];
      v17[4] = v10;
      v17[5] = v12;
      v2 += 4;
      --v1;
    }
    while (v1);
    swift_bridgeObjectRelease();
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDB61500);
  sub_1DD2BFCE8((unint64_t *)&qword_1EDB616A8, &qword_1EDB61500, MEMORY[0x1E0DEAF20]);
  v18 = sub_1DD2F9D90();
  swift_bridgeObjectRelease();
  return v18;
}

uint64_t sub_1DD2BDFE4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  unint64_t v4;
  unint64_t v5;
  _QWORD *v6;
  uint64_t v7;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 40) + 16);
  if (v1)
  {
    swift_bridgeObjectRetain();
    v2 = 0;
    v3 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    do
    {
      sub_1DD2F9F1C();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v3 = sub_1DD2DDAC4(0, v3[2] + 1, 1, v3);
      v5 = v3[2];
      v4 = v3[3];
      if (v5 >= v4 >> 1)
        v3 = sub_1DD2DDAC4((_QWORD *)(v4 > 1), v5 + 1, 1, v3);
      ++v2;
      v3[2] = v5 + 1;
      v6 = &v3[2 * v5];
      v6[4] = 0;
      v6[5] = 0xE000000000000000;
    }
    while (v1 != v2);
    swift_bridgeObjectRelease();
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDB61500);
  sub_1DD2BFCE8((unint64_t *)&qword_1EDB616A8, &qword_1EDB61500, MEMORY[0x1E0DEAF20]);
  v7 = sub_1DD2F9D90();
  swift_bridgeObjectRelease();
  return v7;
}

void static GradientProperties.bloomProperties()(uint64_t a1@<X8>)
{
  *(_BYTE *)a1 = 1;
  *(_QWORD *)(a1 + 8) = 0;
  *(_QWORD *)(a1 + 16) = 0;
  *(_QWORD *)(a1 + 24) = 0x3FF0000000000000;
  *(_QWORD *)(a1 + 32) = &unk_1EA712000;
  *(_QWORD *)(a1 + 40) = &unk_1EA712060;
}

void static GradientProperties.vignetteProperties()(uint64_t a1@<X8>)
{
  *(_BYTE *)a1 = 1;
  *(_QWORD *)(a1 + 8) = 0;
  *(_QWORD *)(a1 + 16) = 0;
  *(_QWORD *)(a1 + 24) = 0x3FF0000000000000;
  *(_QWORD *)(a1 + 32) = &unk_1EA712090;
  *(_QWORD *)(a1 + 40) = &unk_1EA712110;
}

uint64_t sub_1DD2BE1C0()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1DD2BE1E8 + 4 * byte_1DD2FC513[*v0]))(1701869940, 0xE400000000000000);
}

uint64_t sub_1DD2BE1E8()
{
  return 0x656C676E61;
}

uint64_t sub_1DD2BE1FC()
{
  return 0x6F6C6F437466656CLL;
}

uint64_t sub_1DD2BE220()
{
  return 0x6C6F437468676972;
}

uint64_t sub_1DD2BE244()
{
  return 0x73726F6C6F63;
}

uint64_t sub_1DD2BE258()
{
  return 0x6E6F697461636F6CLL;
}

uint64_t sub_1DD2BE274@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1DD2C289C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DD2BE298()
{
  sub_1DD2BFDF4();
  return sub_1DD2FA2DC();
}

uint64_t sub_1DD2BE2C0()
{
  sub_1DD2BFDF4();
  return sub_1DD2FA2E8();
}

uint64_t GradientProperties.encode(to:)(_QWORD *a1)
{
  char *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDB61AD8);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78]();
  v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v1;
  v9 = *((_QWORD *)v1 + 4);
  v14 = *((_QWORD *)v1 + 5);
  v15 = v9;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DD2BFDF4();
  v10 = v4;
  sub_1DD2FA2C4();
  LOBYTE(v16) = v8;
  v17 = 0;
  sub_1DD2BFE38();
  sub_1DD2FA1F8();
  if (!v2)
  {
    v11 = v14;
    v12 = v15;
    LOBYTE(v16) = 1;
    sub_1DD2FA1E0();
    LOBYTE(v16) = 2;
    sub_1DD2FA1E0();
    LOBYTE(v16) = 3;
    sub_1DD2FA1E0();
    v16 = v12;
    v17 = 4;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EDB61A08);
    sub_1DD2BFEC0(&qword_1EDB61A10, (uint64_t (*)(void))sub_1DD2BFB94, MEMORY[0x1E0DEAF10]);
    sub_1DD2FA1F8();
    v16 = v11;
    v17 = 5;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EDB61A20);
    sub_1DD2BFF28(&qword_1EDB61A28, &qword_1EDB61A20, MEMORY[0x1E0DEB080], MEMORY[0x1E0DEAF10]);
    sub_1DD2FA1F8();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v10);
}

uint64_t GradientProperties.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F03D0C60);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78]();
  v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DD2BFDF4();
  sub_1DD2FA2AC();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v23 = 0;
  sub_1DD2BFE7C();
  sub_1DD2FA198();
  v9 = v22;
  LOBYTE(v22) = 1;
  sub_1DD2FA180();
  v11 = v10;
  LOBYTE(v22) = 2;
  sub_1DD2FA180();
  v13 = v12;
  LOBYTE(v22) = 3;
  sub_1DD2FA180();
  v15 = v14;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDB61A08);
  v23 = 4;
  sub_1DD2BFEC0(&qword_1F03D0C70, (uint64_t (*)(void))sub_1DD2BFC60, MEMORY[0x1E0DEAF40]);
  sub_1DD2FA198();
  v16 = v22;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDB61A20);
  v23 = 5;
  sub_1DD2BFF28(&qword_1EDB61EF8, &qword_1EDB61A20, MEMORY[0x1E0DEB0A8], MEMORY[0x1E0DEAF40]);
  v21 = v16;
  swift_bridgeObjectRetain();
  sub_1DD2FA198();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v18 = v21;
  v17 = v22;
  *(_BYTE *)a2 = v9;
  *(_QWORD *)(a2 + 8) = v11;
  *(_QWORD *)(a2 + 16) = v13;
  *(_QWORD *)(a2 + 24) = v15;
  *(_QWORD *)(a2 + 32) = v18;
  *(_QWORD *)(a2 + 40) = v17;
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DD2BE848@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return GradientProperties.init(from:)(a1, a2);
}

uint64_t sub_1DD2BE85C(_QWORD *a1)
{
  return GradientProperties.encode(to:)(a1);
}

uint64_t sub_1DD2BE874(uint64_t a1, uint64_t a2)
{
  return sub_1DD2BE9BC(a1, a2, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB1940]);
}

uint64_t sub_1DD2BE880(uint64_t a1, id *a2)
{
  uint64_t result;

  result = sub_1DD2F9DCC();
  *a2 = 0;
  return result;
}

uint64_t sub_1DD2BE8F4(uint64_t a1, id *a2)
{
  char v3;

  v3 = sub_1DD2F9DD8();
  *a2 = 0;
  return v3 & 1;
}

uint64_t sub_1DD2BE970@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  sub_1DD2F9DE4();
  v2 = sub_1DD2F9DB4();
  result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_1DD2BE9B0(uint64_t a1, uint64_t a2)
{
  return sub_1DD2BE9BC(a1, a2, MEMORY[0x1E0DEA950]);
}

uint64_t sub_1DD2BE9BC(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v4;
  uint64_t v5;

  v4 = sub_1DD2F9DE4();
  v5 = a3(v4);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_1DD2BE9F8()
{
  sub_1DD2F9DE4();
  sub_1DD2F9E44();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DD2BEA38()
{
  uint64_t v0;

  sub_1DD2F9DE4();
  sub_1DD2FA270();
  sub_1DD2F9E44();
  v0 = sub_1DD2FA294();
  swift_bridgeObjectRelease();
  return v0;
}

void sub_1DD2BEAA8(_QWORD *a1@<X8>)
{
  _QWORD *v1;

  *a1 = *v1;
}

void sub_1DD2BEAB4(_QWORD *a1@<X8>)
{
  *a1 = 0;
}

uint64_t sub_1DD2BEABC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;

  v0 = sub_1DD2F9DE4();
  v2 = v1;
  if (v0 == sub_1DD2F9DE4() && v2 == v3)
    v5 = 1;
  else
    v5 = sub_1DD2FA210();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

_QWORD *sub_1DD2BEB44@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *result;
  return result;
}

uint64_t sub_1DD2BEB50@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_1DD2F9DB4();
  result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_1DD2BEB94@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_1DD2F9DE4();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1DD2BEBBC()
{
  sub_1DD2C2C2C((unint64_t *)&qword_1EDB61518, (uint64_t)&unk_1DD2FDF50);
  sub_1DD2C2C2C(&qword_1F03D0D78, (uint64_t)&unk_1DD2FDEA4);
  return sub_1DD2FA138();
}

uint64_t sub_1DD2BEC28(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x724774657366666FLL && a2 == 0xEA00000000006469;
  if (v2 || (sub_1DD2FA210() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x72616C7563726963 && a2 == 0xE800000000000000 || (sub_1DD2FA210() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6C6172697073 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_1DD2FA210();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

BOOL _s11EmojiPoster18GradientPropertiesV2eeoiySbAC_ACtFZ_0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  BOOL v2;
  BOOL v3;
  uint64_t v4;
  uint64_t v5;

  if (((*a1 ^ *a2) & 1) == 0
    && (*((double *)a1 + 1) == *((double *)a2 + 1) ? (v2 = *((double *)a1 + 2) == *((double *)a2 + 2)) : (v2 = 0),
        v2 ? (v3 = *((double *)a1 + 3) == *((double *)a2 + 3)) : (v3 = 0),
        v3
     && (v4 = *((_QWORD *)a2 + 5),
         v5 = *((_QWORD *)a1 + 5),
         (sub_1DD2C65A4(*((_QWORD *)a1 + 4), *((_QWORD *)a2 + 4)) & 1) != 0)))
  {
    return sub_1DD2C6628(v5, v4);
  }
  else
  {
    return 0;
  }
}

uint64_t _s11EmojiPoster0aB23BackgroundConfigurationV2eeoiySbAC_ACtFZ_0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  int v19;
  int v20;
  int v21;
  BOOL v22;
  int v23;
  uint64_t v24;
  int v25;
  unsigned __int8 v26[8];
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD v32[6];

  result = 0;
  if ((vminv_u16((uint16x4_t)vcltz_s16(vshl_n_s16(vmovn_s32(vuzp1q_s32((int32x4_t)vceqq_f64(*(float64x2_t *)(a1 + 8), *(float64x2_t *)(a2 + 8)), (int32x4_t)vceqq_f64(*(float64x2_t *)(a1 + 24), *(float64x2_t *)(a2 + 24)))), 0xFuLL))) & 1) != 0&& *a1 == *a2)
  {
    v4 = *((_QWORD *)a1 + 5);
    v5 = *((_QWORD *)a1 + 6);
    v7 = *((_QWORD *)a1 + 7);
    v6 = *((_QWORD *)a1 + 8);
    v9 = *((_QWORD *)a1 + 9);
    v8 = *((_QWORD *)a1 + 10);
    v10 = a1[88];
    v11 = a1[89];
    v13 = *((_QWORD *)a2 + 5);
    v12 = *((_QWORD *)a2 + 6);
    v15 = *((_QWORD *)a2 + 7);
    v14 = *((_QWORD *)a2 + 8);
    v17 = *((_QWORD *)a2 + 9);
    v16 = *((_QWORD *)a2 + 10);
    v18 = a2[88];
    v19 = a2[89];
    if (v9)
    {
      v32[0] = v4;
      v32[1] = v5;
      v32[2] = v7;
      v32[3] = v6;
      v32[4] = v9;
      v32[5] = v8;
      if (v17)
      {
        v20 = v18;
        v25 = v19;
        v21 = v10;
        v23 = v11;
        v26[0] = v13 & 1;
        v27 = v12;
        v28 = v15;
        v29 = v14;
        v30 = v17;
        v31 = v16;
        v22 = _s11EmojiPoster18GradientPropertiesV2eeoiySbAC_ACtFZ_0((unsigned __int8 *)v32, v26);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        result = 0;
        if (!v22)
          return result;
        v11 = v23;
        v19 = v25;
        if (((v21 ^ v20) & 1) != 0)
          return result;
        return v11 ^ v19 ^ 1u;
      }
      v24 = v6;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v24 = v6;
      if (!v17)
      {
        if (v10 == v18)
          return v11 ^ v19 ^ 1u;
        return 0;
      }
    }
    sub_1DD2BF7A4(v13, v12, v15, v14, v17);
    sub_1DD2BF928(v4, v5, v7, v24, v9);
    sub_1DD2BF928(v13, v12, v15, v14, v17);
    return 0;
  }
  return result;
}

uint64_t _s11EmojiPoster0aB13ConfigurationV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  char v2;
  unsigned __int8 v3;
  char v4;
  char v5;
  unsigned __int8 v6;
  char v7;
  char v8;
  int v9;
  int v10;
  char v11;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  unsigned __int8 v23[8];
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  char v29;
  char v30;
  unsigned __int8 v31[8];
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  char v37;
  char v38;

  v2 = 0;
  if (*(unsigned __int8 *)(a1 + 106) == *(unsigned __int8 *)(a2 + 106)
    && *(unsigned __int8 *)(a1 + 107) == *(unsigned __int8 *)(a2 + 107))
  {
    v3 = *(_BYTE *)(a1 + 16);
    v21 = *(_OWORD *)(a1 + 40);
    v22 = *(_OWORD *)(a1 + 24);
    v19 = *(_OWORD *)(a1 + 72);
    v20 = *(_OWORD *)(a1 + 56);
    v4 = *(_BYTE *)(a1 + 104);
    v5 = *(_BYTE *)(a1 + 105);
    v6 = *(_BYTE *)(a2 + 16);
    v17 = *(_OWORD *)(a2 + 24);
    v18 = *(_OWORD *)(a1 + 88);
    v15 = *(_OWORD *)(a2 + 56);
    v16 = *(_OWORD *)(a2 + 40);
    v13 = *(_OWORD *)(a2 + 88);
    v14 = *(_OWORD *)(a2 + 72);
    v7 = *(_BYTE *)(a2 + 104);
    v8 = *(_BYTE *)(a2 + 105);
    v9 = *(unsigned __int8 *)(a2 + 120);
    v10 = *(unsigned __int8 *)(a1 + 120);
    v11 = sub_1DD2C6694(*(_QWORD **)(a1 + 112), *(_QWORD **)(a2 + 112));
    v2 = 0;
    if ((v11 & 1) != 0 && ((v9 ^ v10) & 1) == 0)
    {
      v31[0] = v3;
      v32 = v22;
      v33 = v21;
      v34 = v20;
      v35 = v19;
      v36 = v18;
      v37 = v4;
      v38 = v5;
      v23[0] = v6;
      v24 = v17;
      v25 = v16;
      v26 = v15;
      v27 = v14;
      v28 = v13;
      v29 = v7;
      v30 = v8;
      v2 = _s11EmojiPoster0aB23BackgroundConfigurationV2eeoiySbAC_ACtFZ_0(v31, v23);
    }
  }
  return v2 & 1;
}

uint64_t sub_1DD2BF110(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6C6C616D73 && a2 == 0xE500000000000000;
  if (v2 || (sub_1DD2FA210() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6D756964656DLL && a2 == 0xE600000000000000 || (sub_1DD2FA210() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x656772616CLL && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_1DD2FA210();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_1DD2BF24C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x64696C6F73 && a2 == 0xE500000000000000;
  if (v2 || (sub_1DD2FA210() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x72477261656E696CLL && a2 == 0xEE00746E65696461 || (sub_1DD2FA210() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x72476C6169646172 && a2 == 0xEE00746E65696461 || (sub_1DD2FA210() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6172476D6F6F6C62 && a2 == 0xED0000746E656964 || (sub_1DD2FA210() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x657474656E676976 && a2 == 0xE900000000000064)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    v6 = sub_1DD2FA210();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 4;
    else
      return 5;
  }
}

uint64_t sub_1DD2BF4D0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 6579570 && a2 == 0xE300000000000000;
  if (v2 || (sub_1DD2FA210() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E65657267 && a2 == 0xE500000000000000 || (sub_1DD2FA210() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1702194274 && a2 == 0xE400000000000000 || (sub_1DD2FA210() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6168706C61 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_1DD2FA210();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t _s11EmojiPoster0aB13ConfigurationV21layoutLocalizationKey8forStyle11sizeVariantSSAA0ab6LayoutH0O_AA0ab4SizeJ0OtFZ_0()
{
  _QWORD v1[2];

  sub_1DD2FA024();
  swift_bridgeObjectRelease();
  strcpy((char *)v1, "LAYOUT_STYLE_");
  sub_1DD2F9E74();
  swift_bridgeObjectRelease();
  sub_1DD2F9E74();
  sub_1DD2F9E74();
  swift_bridgeObjectRelease();
  return v1[0];
}

uint64_t sub_1DD2BF7A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t result;

  if (a5)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t __swift_instantiateConcreteTypeFromMangledNameAbstract(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = MEMORY[0x1DF0D8034](255, (char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

unint64_t sub_1DD2BF818()
{
  unint64_t result;

  result = qword_1EDB610B0;
  if (!qword_1EDB610B0)
  {
    result = MEMORY[0x1DF0D8040](&unk_1DD2FD8C4, &type metadata for EmojiPosterConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB610B0);
  }
  return result;
}

unint64_t sub_1DD2BF85C()
{
  unint64_t result;

  result = qword_1EDB61740;
  if (!qword_1EDB61740)
  {
    result = MEMORY[0x1DF0D8040](&protocol conformance descriptor for EmojiPosterBackgroundConfiguration, &type metadata for EmojiPosterBackgroundConfiguration);
    atomic_store(result, (unint64_t *)&qword_1EDB61740);
  }
  return result;
}

unint64_t sub_1DD2BF8A0()
{
  unint64_t result;

  result = qword_1EDB61710;
  if (!qword_1EDB61710)
  {
    result = MEMORY[0x1DF0D8040](&protocol conformance descriptor for EmojiPosterLayoutStyle, &type metadata for EmojiPosterLayoutStyle);
    atomic_store(result, (unint64_t *)&qword_1EDB61710);
  }
  return result;
}

unint64_t sub_1DD2BF8E4()
{
  unint64_t result;

  result = qword_1EDB61720;
  if (!qword_1EDB61720)
  {
    result = MEMORY[0x1DF0D8040](&protocol conformance descriptor for EmojiPosterSizeVariant, &type metadata for EmojiPosterSizeVariant);
    atomic_store(result, (unint64_t *)&qword_1EDB61720);
  }
  return result;
}

uint64_t sub_1DD2BF928(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t result;

  if (a5)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t sub_1DD2BF958()
{
  unint64_t result;

  result = qword_1EDB61178;
  if (!qword_1EDB61178)
  {
    result = MEMORY[0x1DF0D8040]("EyA\r4i", &type metadata for EmojiPosterBackgroundConfiguration);
    atomic_store(result, (unint64_t *)&qword_1EDB61178);
  }
  return result;
}

unint64_t sub_1DD2BF99C()
{
  unint64_t result;

  result = qword_1EDB61050;
  if (!qword_1EDB61050)
  {
    result = MEMORY[0x1DF0D8040](&protocol conformance descriptor for EmojiPosterLayoutStyle, &type metadata for EmojiPosterLayoutStyle);
    atomic_store(result, (unint64_t *)&qword_1EDB61050);
  }
  return result;
}

unint64_t sub_1DD2BF9E0()
{
  unint64_t result;

  result = qword_1EDB610A8;
  if (!qword_1EDB610A8)
  {
    result = MEMORY[0x1DF0D8040](&protocol conformance descriptor for EmojiPosterSizeVariant, &type metadata for EmojiPosterSizeVariant);
    atomic_store(result, (unint64_t *)&qword_1EDB610A8);
  }
  return result;
}

_QWORD *sub_1DD2BFA24(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = a1[7];
  v3 = a1[8];
  v4 = a1[9];
  v5 = a1[10];
  v6 = a1[11];
  swift_bridgeObjectRetain();
  sub_1DD2BF7A4(v2, v3, v4, v5, v6);
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *sub_1DD2BFA98(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = a1[7];
  v3 = a1[8];
  v4 = a1[9];
  v5 = a1[10];
  v6 = a1[11];
  swift_bridgeObjectRelease();
  sub_1DD2BF928(v2, v3, v4, v5, v6);
  swift_bridgeObjectRelease();
  return a1;
}

unint64_t sub_1DD2BFB0C()
{
  unint64_t result;

  result = qword_1EDB61160;
  if (!qword_1EDB61160)
  {
    result = MEMORY[0x1DF0D8040](&unk_1DD2FD874, &type metadata for EmojiPosterBackgroundConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB61160);
  }
  return result;
}

unint64_t sub_1DD2BFB50()
{
  unint64_t result;

  result = qword_1EDB61738;
  if (!qword_1EDB61738)
  {
    result = MEMORY[0x1DF0D8040](&protocol conformance descriptor for EmojiPosterBackgroundStyle, &type metadata for EmojiPosterBackgroundStyle);
    atomic_store(result, (unint64_t *)&qword_1EDB61738);
  }
  return result;
}

unint64_t sub_1DD2BFB94()
{
  unint64_t result;

  result = qword_1EDB61728;
  if (!qword_1EDB61728)
  {
    result = MEMORY[0x1DF0D8040](&protocol conformance descriptor for EmojiPosterBackgroundColor, &type metadata for EmojiPosterBackgroundColor);
    atomic_store(result, (unint64_t *)&qword_1EDB61728);
  }
  return result;
}

unint64_t sub_1DD2BFBD8()
{
  unint64_t result;

  result = qword_1EDB617A8;
  if (!qword_1EDB617A8)
  {
    result = MEMORY[0x1DF0D8040](&protocol conformance descriptor for GradientProperties, &type metadata for GradientProperties);
    atomic_store(result, (unint64_t *)&qword_1EDB617A8);
  }
  return result;
}

unint64_t sub_1DD2BFC1C()
{
  unint64_t result;

  result = qword_1EDB61158;
  if (!qword_1EDB61158)
  {
    result = MEMORY[0x1DF0D8040](&protocol conformance descriptor for EmojiPosterBackgroundStyle, &type metadata for EmojiPosterBackgroundStyle);
    atomic_store(result, (unint64_t *)&qword_1EDB61158);
  }
  return result;
}

unint64_t sub_1DD2BFC60()
{
  unint64_t result;

  result = qword_1EDB610E0;
  if (!qword_1EDB610E0)
  {
    result = MEMORY[0x1DF0D8040](&protocol conformance descriptor for EmojiPosterBackgroundColor, &type metadata for EmojiPosterBackgroundColor);
    atomic_store(result, (unint64_t *)&qword_1EDB610E0);
  }
  return result;
}

unint64_t sub_1DD2BFCA4()
{
  unint64_t result;

  result = qword_1EDB61240;
  if (!qword_1EDB61240)
  {
    result = MEMORY[0x1DF0D8040](&protocol conformance descriptor for GradientProperties, &type metadata for GradientProperties);
    atomic_store(result, (unint64_t *)&qword_1EDB61240);
  }
  return result;
}

uint64_t sub_1DD2BFCE8(unint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    result = MEMORY[0x1DF0D8040](a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1DD2BFD28()
{
  unint64_t result;

  result = qword_1EDB61748;
  if (!qword_1EDB61748)
  {
    result = MEMORY[0x1DF0D8040](&unk_1DD2FD824, &type metadata for GradientType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB61748);
  }
  return result;
}

unint64_t sub_1DD2BFD6C()
{
  unint64_t result;

  result = qword_1EDB61770;
  if (!qword_1EDB61770)
  {
    result = MEMORY[0x1DF0D8040](&unk_1DD2FD7D4, &type metadata for GradientType.RadialCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB61770);
  }
  return result;
}

unint64_t sub_1DD2BFDB0()
{
  unint64_t result;

  result = qword_1F03D0C40;
  if (!qword_1F03D0C40)
  {
    result = MEMORY[0x1DF0D8040](&unk_1DD2FD784, &type metadata for GradientType.LinearCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F03D0C40);
  }
  return result;
}

unint64_t sub_1DD2BFDF4()
{
  unint64_t result;

  result = qword_1EDB61790;
  if (!qword_1EDB61790)
  {
    result = MEMORY[0x1DF0D8040](&unk_1DD2FD734, &type metadata for GradientProperties.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB61790);
  }
  return result;
}

unint64_t sub_1DD2BFE38()
{
  unint64_t result;

  result = qword_1EDB61788;
  if (!qword_1EDB61788)
  {
    result = MEMORY[0x1DF0D8040]("MxA\rHh", &type metadata for GradientType);
    atomic_store(result, (unint64_t *)&qword_1EDB61788);
  }
  return result;
}

unint64_t sub_1DD2BFE7C()
{
  unint64_t result;

  result = qword_1F03D0C68;
  if (!qword_1F03D0C68)
  {
    result = MEMORY[0x1DF0D8040]("exA\rph", &type metadata for GradientType);
    atomic_store(result, (unint64_t *)&qword_1F03D0C68);
  }
  return result;
}

uint64_t sub_1DD2BFEC0(unint64_t *a1, uint64_t (*a2)(void), uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    v7 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EDB61A08);
    v8 = a2();
    result = MEMORY[0x1DF0D8040](a3, v7, &v8);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1DD2BFF28(unint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v8;
  uint64_t v9;

  result = *a1;
  if (!result)
  {
    v8 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    v9 = a3;
    result = MEMORY[0x1DF0D8040](a4, v8, &v9);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1DD2BFF88()
{
  unint64_t result;

  result = qword_1F03D0C78;
  if (!qword_1F03D0C78)
  {
    result = MEMORY[0x1DF0D8040](&protocol conformance descriptor for EmojiPosterLayoutStyle, &type metadata for EmojiPosterLayoutStyle);
    atomic_store(result, (unint64_t *)&qword_1F03D0C78);
  }
  return result;
}

unint64_t sub_1DD2BFFD0()
{
  unint64_t result;

  result = qword_1F03D0C80;
  if (!qword_1F03D0C80)
  {
    result = MEMORY[0x1DF0D8040]("m{A\r$k", &type metadata for EmojiPosterSizeVariant);
    atomic_store(result, (unint64_t *)&qword_1F03D0C80);
  }
  return result;
}

unint64_t sub_1DD2C0018()
{
  unint64_t result;

  result = qword_1F03D0C88;
  if (!qword_1F03D0C88)
  {
    result = MEMORY[0x1DF0D8040](&protocol conformance descriptor for EmojiPosterBackgroundStyle, &type metadata for EmojiPosterBackgroundStyle);
    atomic_store(result, (unint64_t *)&qword_1F03D0C88);
  }
  return result;
}

unint64_t sub_1DD2C0060()
{
  unint64_t result;

  result = qword_1F03D0C90;
  if (!qword_1F03D0C90)
  {
    result = MEMORY[0x1DF0D8040](&protocol conformance descriptor for GradientType, &type metadata for GradientType);
    atomic_store(result, (unint64_t *)&qword_1F03D0C90);
  }
  return result;
}

_BYTE *__swift_memcpy1_1(_BYTE *result, _BYTE *a2)
{
  *result = *a2;
  return result;
}

ValueMetadata *type metadata accessor for EmojiPosterLayoutStyle()
{
  return &type metadata for EmojiPosterLayoutStyle;
}

ValueMetadata *type metadata accessor for EmojiPosterSizeVariant()
{
  return &type metadata for EmojiPosterSizeVariant;
}

ValueMetadata *type metadata accessor for EmojiPosterBackgroundStyle()
{
  return &type metadata for EmojiPosterBackgroundStyle;
}

__n128 __swift_memcpy32_8(_OWORD *a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

uint64_t getEnumTagSinglePayload for EmojiPosterBackgroundColor(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 32))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for EmojiPosterBackgroundColor(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = (a2 - 1);
    *(_QWORD *)(result + 8) = 0;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 32) = v3;
  return result;
}

ValueMetadata *type metadata accessor for EmojiPosterBackgroundColor()
{
  return &type metadata for EmojiPosterBackgroundColor;
}

uint64_t initializeBufferWithCopyOfBuffer for EmojiPosterConfiguration(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a2;
  *a1 = *a2;
  v3 = v2 + 16;
  swift_retain();
  return v3;
}

uint64_t destroy for EmojiPosterConfiguration(uint64_t a1)
{
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 88))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for EmojiPosterConfiguration(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  __int128 v6;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  v5 = *(_QWORD *)(a2 + 88);
  swift_bridgeObjectRetain();
  if (v5)
  {
    *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
    *(_QWORD *)(a1 + 88) = v5;
    *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v6 = *(_OWORD *)(a2 + 72);
    *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
    *(_OWORD *)(a1 + 72) = v6;
    *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  }
  *(_DWORD *)(a1 + 104) = *(_DWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_BYTE *)(a1 + 120) = *(_BYTE *)(a2 + 120);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for EmojiPosterConfiguration(uint64_t a1, uint64_t a2)
{
  _OWORD *v4;
  _OWORD *v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  v4 = (_OWORD *)(a1 + 56);
  v5 = (_OWORD *)(a2 + 56);
  v6 = *(_QWORD *)(a2 + 88);
  if (*(_QWORD *)(a1 + 88))
  {
    if (v6)
    {
      *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
      *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
      *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
      *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
      *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1DD2C0420(a1 + 56);
      v8 = *(_OWORD *)(a2 + 72);
      v7 = *(_OWORD *)(a2 + 88);
      *v4 = *v5;
      *(_OWORD *)(a1 + 72) = v8;
      *(_OWORD *)(a1 + 88) = v7;
    }
  }
  else if (v6)
  {
    *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
    *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
    *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
    *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
    *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
    *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v9 = *v5;
    v10 = *(_OWORD *)(a2 + 88);
    *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
    *(_OWORD *)(a1 + 88) = v10;
    *v4 = v9;
  }
  *(_BYTE *)(a1 + 104) = *(_BYTE *)(a2 + 104);
  *(_BYTE *)(a1 + 105) = *(_BYTE *)(a2 + 105);
  *(_BYTE *)(a1 + 106) = *(_BYTE *)(a2 + 106);
  *(_BYTE *)(a1 + 107) = *(_BYTE *)(a2 + 107);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 120) = *(_BYTE *)(a2 + 120);
  return a1;
}

uint64_t sub_1DD2C0420(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy121_8(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __n128 result;
  __int128 v6;
  __int128 v7;

  v2 = *a2;
  v3 = a2[1];
  v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  result = (__n128)a2[4];
  v6 = a2[5];
  v7 = a2[6];
  *(_OWORD *)(a1 + 105) = *(__int128 *)((char *)a2 + 105);
  *(_OWORD *)(a1 + 80) = v6;
  *(_OWORD *)(a1 + 96) = v7;
  *(__n128 *)(a1 + 64) = result;
  return result;
}

uint64_t assignWithTake for EmojiPosterConfiguration(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  __int128 v6;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  if (!*(_QWORD *)(a1 + 88))
    goto LABEL_5;
  v5 = *(_QWORD *)(a2 + 88);
  if (!v5)
  {
    sub_1DD2C0420(a1 + 56);
LABEL_5:
    v6 = *(_OWORD *)(a2 + 72);
    *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
    *(_OWORD *)(a1 + 72) = v6;
    *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
    goto LABEL_6;
  }
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = v5;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  swift_bridgeObjectRelease();
LABEL_6:
  *(_BYTE *)(a1 + 104) = *(_BYTE *)(a2 + 104);
  *(_BYTE *)(a1 + 105) = *(_BYTE *)(a2 + 105);
  *(_WORD *)(a1 + 106) = *(_WORD *)(a2 + 106);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 120) = *(_BYTE *)(a2 + 120);
  return a1;
}

uint64_t getEnumTagSinglePayload for EmojiPosterConfiguration(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 121))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 112);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for EmojiPosterConfiguration(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 120) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 121) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 112) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 121) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for EmojiPosterConfiguration()
{
  return &type metadata for EmojiPosterConfiguration;
}

uint64_t destroy for EmojiPosterBackgroundConfiguration(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 72);
  if (result)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for EmojiPosterBackgroundConfiguration(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __int128 v5;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  v4 = *(_QWORD *)(a2 + 72);
  if (v4)
  {
    *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
    *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
    *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
    *(_QWORD *)(a1 + 72) = v4;
    *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v5 = *(_OWORD *)(a2 + 56);
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
    *(_OWORD *)(a1 + 56) = v5;
    *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  }
  *(_WORD *)(a1 + 88) = *(_WORD *)(a2 + 88);
  return a1;
}

uint64_t assignWithCopy for EmojiPosterBackgroundConfiguration(uint64_t a1, uint64_t a2)
{
  _OWORD *v4;
  _OWORD *v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  v4 = (_OWORD *)(a1 + 40);
  v5 = (_OWORD *)(a2 + 40);
  v6 = *(_QWORD *)(a2 + 72);
  if (*(_QWORD *)(a1 + 72))
  {
    if (v6)
    {
      *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
      *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
      *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
      *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
      *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1DD2C0420(a1 + 40);
      v8 = v5[1];
      v7 = v5[2];
      *v4 = *v5;
      v4[1] = v8;
      v4[2] = v7;
    }
  }
  else if (v6)
  {
    *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
    *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
    *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
    *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
    *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
    *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v9 = *v5;
    v10 = *(_OWORD *)(a2 + 72);
    *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
    *(_OWORD *)(a1 + 72) = v10;
    *v4 = v9;
  }
  *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
  *(_BYTE *)(a1 + 89) = *(_BYTE *)(a2 + 89);
  return a1;
}

__n128 __swift_memcpy90_8(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __n128 result;
  __int128 v4;
  __int128 v5;

  v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  result = *(__n128 *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  v5 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 74) = *(_OWORD *)(a2 + 74);
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  *(__n128 *)(a1 + 32) = result;
  return result;
}

uint64_t assignWithTake for EmojiPosterBackgroundConfiguration(uint64_t a1, uint64_t a2)
{
  _OWORD *v4;
  _OWORD *v5;
  uint64_t v6;
  __int128 v7;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  v4 = (_OWORD *)(a1 + 40);
  v5 = (_OWORD *)(a2 + 40);
  if (!*(_QWORD *)(a1 + 72))
    goto LABEL_5;
  v6 = *(_QWORD *)(a2 + 72);
  if (!v6)
  {
    sub_1DD2C0420((uint64_t)v4);
LABEL_5:
    v7 = v5[1];
    *v4 = *v5;
    v4[1] = v7;
    v4[2] = v5[2];
    goto LABEL_6;
  }
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v6;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_bridgeObjectRelease();
LABEL_6:
  *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
  *(_BYTE *)(a1 + 89) = *(_BYTE *)(a2 + 89);
  return a1;
}

uint64_t getEnumTagSinglePayload for EmojiPosterBackgroundConfiguration(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 90))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 72);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for EmojiPosterBackgroundConfiguration(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_WORD *)(result + 88) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 90) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 90) = 0;
    if (a2)
      *(_QWORD *)(result + 72) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for EmojiPosterBackgroundConfiguration()
{
  return &type metadata for EmojiPosterBackgroundConfiguration;
}

ValueMetadata *type metadata accessor for GradientType()
{
  return &type metadata for GradientType;
}

uint64_t destroy for GradientProperties()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for GradientProperties(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  v3 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v3;
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for GradientProperties(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy48_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for GradientProperties(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for GradientProperties(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 48))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 32);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for GradientProperties(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 48) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 32) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 48) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for GradientProperties()
{
  return &type metadata for GradientProperties;
}

void type metadata accessor for CGFont(uint64_t a1)
{
  sub_1DD2C2BA0(a1, &qword_1F03D0CF8);
}

void type metadata accessor for CTFont(uint64_t a1)
{
  sub_1DD2C2BA0(a1, &qword_1EDB61F20);
}

__n128 __swift_memcpy16_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  *a1 = *a2;
  return result;
}

void type metadata accessor for CGPoint(uint64_t a1)
{
  sub_1DD2C2BA0(a1, &qword_1F03D0D00);
}

void type metadata accessor for UIInterfaceOrientation(uint64_t a1)
{
  sub_1DD2C2BA0(a1, &qword_1F03D0D08);
}

void type metadata accessor for ATXPosterDescriptorFocus(uint64_t a1)
{
  sub_1DD2C2BA0(a1, &qword_1EDB616B0);
}

uint64_t sub_1DD2C0C6C(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_1DD2C0C8C(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)result = (a2 - 1);
    *(_QWORD *)(result + 8) = 0;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 16) = v3;
  return result;
}

void type metadata accessor for CGSize(uint64_t a1)
{
  sub_1DD2C2BA0(a1, &qword_1F03D0D10);
}

ValueMetadata *type metadata accessor for GradientProperties.CodingKeys()
{
  return &type metadata for GradientProperties.CodingKeys;
}

uint64_t getEnumTagSinglePayload for GridLayoutEmojiSize(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFF)
    goto LABEL_17;
  if (a2 + 1 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 1;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 1;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 1;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 2;
  v8 = v6 - 2;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t _s11EmojiPoster12GradientTypeOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1DD2C0DBC + 4 * byte_1DD2FC51E[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1DD2C0DF0 + 4 * byte_1DD2FC519[v4]))();
}

uint64_t sub_1DD2C0DF0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DD2C0DF8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DD2C0E00);
  return result;
}

uint64_t sub_1DD2C0E0C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DD2C0E14);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1DD2C0E18(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DD2C0E20(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DD2C0E2C(unsigned __int8 *a1)
{
  return *a1;
}

_BYTE *sub_1DD2C0E34(_BYTE *result, char a2)
{
  *result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for GradientType.CodingKeys()
{
  return &type metadata for GradientType.CodingKeys;
}

ValueMetadata *type metadata accessor for GradientType.LinearCodingKeys()
{
  return &type metadata for GradientType.LinearCodingKeys;
}

ValueMetadata *type metadata accessor for GradientType.RadialCodingKeys()
{
  return &type metadata for GradientType.RadialCodingKeys;
}

ValueMetadata *type metadata accessor for EmojiPosterBackgroundConfiguration.CodingKeys()
{
  return &type metadata for EmojiPosterBackgroundConfiguration.CodingKeys;
}

uint64_t _s11EmojiPoster18GradientPropertiesV10CodingKeysOwet_0(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFB)
    goto LABEL_17;
  if (a2 + 5 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 5) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 5;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 5;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 5;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 6;
  v8 = v6 - 6;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t _s11EmojiPoster18GradientPropertiesV10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_1DD2C0F5C + 4 * byte_1DD2FC528[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_1DD2C0F90 + 4 * byte_1DD2FC523[v4]))();
}

uint64_t sub_1DD2C0F90(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DD2C0F98(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DD2C0FA0);
  return result;
}

uint64_t sub_1DD2C0FAC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DD2C0FB4);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_1DD2C0FB8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DD2C0FC0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for EmojiPosterConfiguration.CodingKeys()
{
  return &type metadata for EmojiPosterConfiguration.CodingKeys;
}

uint64_t getEnumTagSinglePayload for EmojiPosterBackgroundColor.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFD)
    goto LABEL_17;
  if (a2 + 3 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 3) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 3;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 3;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 3;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 4;
  v8 = v6 - 4;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for EmojiPosterBackgroundColor.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1DD2C10B8 + 4 * byte_1DD2FC532[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1DD2C10EC + 4 * byte_1DD2FC52D[v4]))();
}

uint64_t sub_1DD2C10EC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DD2C10F4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DD2C10FCLL);
  return result;
}

uint64_t sub_1DD2C1108(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DD2C1110);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1DD2C1114(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DD2C111C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for EmojiPosterBackgroundColor.CodingKeys()
{
  return &type metadata for EmojiPosterBackgroundColor.CodingKeys;
}

uint64_t _s11EmojiPoster26EmojiPosterBackgroundStyleOwet_0(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFC)
    goto LABEL_17;
  if (a2 + 4 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 4) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 4;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 4;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 4;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 5;
  v8 = v6 - 5;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t _s11EmojiPoster26EmojiPosterBackgroundStyleOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1DD2C1214 + 4 * byte_1DD2FC53C[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1DD2C1248 + 4 * byte_1DD2FC537[v4]))();
}

uint64_t sub_1DD2C1248(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DD2C1250(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DD2C1258);
  return result;
}

uint64_t sub_1DD2C1264(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DD2C126CLL);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1DD2C1270(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DD2C1278(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for EmojiPosterBackgroundStyle.CodingKeys()
{
  return &type metadata for EmojiPosterBackgroundStyle.CodingKeys;
}

ValueMetadata *type metadata accessor for EmojiPosterBackgroundStyle.SolidCodingKeys()
{
  return &type metadata for EmojiPosterBackgroundStyle.SolidCodingKeys;
}

ValueMetadata *type metadata accessor for EmojiPosterBackgroundStyle.LinearGradientCodingKeys()
{
  return &type metadata for EmojiPosterBackgroundStyle.LinearGradientCodingKeys;
}

ValueMetadata *type metadata accessor for EmojiPosterBackgroundStyle.RadialGradientCodingKeys()
{
  return &type metadata for EmojiPosterBackgroundStyle.RadialGradientCodingKeys;
}

ValueMetadata *type metadata accessor for EmojiPosterBackgroundStyle.BloomGradientCodingKeys()
{
  return &type metadata for EmojiPosterBackgroundStyle.BloomGradientCodingKeys;
}

ValueMetadata *type metadata accessor for EmojiPosterBackgroundStyle.VignettedCodingKeys()
{
  return &type metadata for EmojiPosterBackgroundStyle.VignettedCodingKeys;
}

ValueMetadata *type metadata accessor for EmojiPosterSizeVariant.CodingKeys()
{
  return &type metadata for EmojiPosterSizeVariant.CodingKeys;
}

ValueMetadata *type metadata accessor for EmojiPosterSizeVariant.SmallCodingKeys()
{
  return &type metadata for EmojiPosterSizeVariant.SmallCodingKeys;
}

ValueMetadata *type metadata accessor for EmojiPosterSizeVariant.MediumCodingKeys()
{
  return &type metadata for EmojiPosterSizeVariant.MediumCodingKeys;
}

ValueMetadata *type metadata accessor for EmojiPosterSizeVariant.LargeCodingKeys()
{
  return &type metadata for EmojiPosterSizeVariant.LargeCodingKeys;
}

uint64_t _s11EmojiPoster22EmojiPosterLayoutStyleOwet_0(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFE)
    goto LABEL_17;
  if (a2 + 2 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 2) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 2;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 2;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 2;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 3;
  v8 = v6 - 3;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t _s11EmojiPoster22EmojiPosterLayoutStyleOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1DD2C1400 + 4 * byte_1DD2FC546[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1DD2C1434 + 4 * byte_1DD2FC541[v4]))();
}

uint64_t sub_1DD2C1434(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DD2C143C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DD2C1444);
  return result;
}

uint64_t sub_1DD2C1450(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DD2C1458);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1DD2C145C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DD2C1464(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

_BYTE *sub_1DD2C1470(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

ValueMetadata *type metadata accessor for EmojiPosterLayoutStyle.CodingKeys()
{
  return &type metadata for EmojiPosterLayoutStyle.CodingKeys;
}

ValueMetadata *type metadata accessor for EmojiPosterLayoutStyle.OffsetGridCodingKeys()
{
  return &type metadata for EmojiPosterLayoutStyle.OffsetGridCodingKeys;
}

ValueMetadata *type metadata accessor for EmojiPosterLayoutStyle.CircularCodingKeys()
{
  return &type metadata for EmojiPosterLayoutStyle.CircularCodingKeys;
}

ValueMetadata *type metadata accessor for EmojiPosterLayoutStyle.SpiralCodingKeys()
{
  return &type metadata for EmojiPosterLayoutStyle.SpiralCodingKeys;
}

unint64_t sub_1DD2C14BC()
{
  unint64_t result;

  result = qword_1F03D0D18;
  if (!qword_1F03D0D18)
  {
    result = MEMORY[0x1DF0D8040](&unk_1DD2FCEE4, &type metadata for EmojiPosterLayoutStyle.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F03D0D18);
  }
  return result;
}

unint64_t sub_1DD2C1504()
{
  unint64_t result;

  result = qword_1F03D0D20;
  if (!qword_1F03D0D20)
  {
    result = MEMORY[0x1DF0D8040](&unk_1DD2FD08C, &type metadata for EmojiPosterSizeVariant.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F03D0D20);
  }
  return result;
}

unint64_t sub_1DD2C154C()
{
  unint64_t result;

  result = qword_1F03D0D28;
  if (!qword_1F03D0D28)
  {
    result = MEMORY[0x1DF0D8040](&unk_1DD2FD2D4, &type metadata for EmojiPosterBackgroundStyle.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F03D0D28);
  }
  return result;
}

unint64_t sub_1DD2C1594()
{
  unint64_t result;

  result = qword_1F03D0D30;
  if (!qword_1F03D0D30)
  {
    result = MEMORY[0x1DF0D8040](&unk_1DD2FD38C, &type metadata for EmojiPosterBackgroundColor.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F03D0D30);
  }
  return result;
}

unint64_t sub_1DD2C15DC()
{
  unint64_t result;

  result = qword_1F03D0D38;
  if (!qword_1F03D0D38)
  {
    result = MEMORY[0x1DF0D8040]("-mA\rP_", &type metadata for EmojiPosterConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F03D0D38);
  }
  return result;
}

unint64_t sub_1DD2C1624()
{
  unint64_t result;

  result = qword_1F03D0D40;
  if (!qword_1F03D0D40)
  {
    result = MEMORY[0x1DF0D8040]("ulA\rt^", &type metadata for EmojiPosterBackgroundConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F03D0D40);
  }
  return result;
}

unint64_t sub_1DD2C166C()
{
  unint64_t result;

  result = qword_1F03D0D48;
  if (!qword_1F03D0D48)
  {
    result = MEMORY[0x1DF0D8040](&unk_1DD2FD654, &type metadata for GradientType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F03D0D48);
  }
  return result;
}

unint64_t sub_1DD2C16B4()
{
  unint64_t result;

  result = qword_1F03D0D50;
  if (!qword_1F03D0D50)
  {
    result = MEMORY[0x1DF0D8040](&unk_1DD2FD70C, &type metadata for GradientProperties.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F03D0D50);
  }
  return result;
}

unint64_t sub_1DD2C16FC()
{
  unint64_t result;

  result = qword_1EDB617A0;
  if (!qword_1EDB617A0)
  {
    result = MEMORY[0x1DF0D8040]("MkA\rd\\", &type metadata for GradientProperties.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB617A0);
  }
  return result;
}

unint64_t sub_1DD2C1744()
{
  unint64_t result;

  result = qword_1EDB61798;
  if (!qword_1EDB61798)
  {
    result = MEMORY[0x1DF0D8040]("5kA\r<\\", &type metadata for GradientProperties.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB61798);
  }
  return result;
}

unint64_t sub_1DD2C178C()
{
  unint64_t result;

  result = qword_1EDB61768;
  if (!qword_1EDB61768)
  {
    result = MEMORY[0x1DF0D8040](&unk_1DD2FD574, &type metadata for GradientType.LinearCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB61768);
  }
  return result;
}

unint64_t sub_1DD2C17D4()
{
  unint64_t result;

  result = qword_1EDB61760;
  if (!qword_1EDB61760)
  {
    result = MEMORY[0x1DF0D8040](&unk_1DD2FD59C, &type metadata for GradientType.LinearCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB61760);
  }
  return result;
}

unint64_t sub_1DD2C181C()
{
  unint64_t result;

  result = qword_1EDB61780;
  if (!qword_1EDB61780)
  {
    result = MEMORY[0x1DF0D8040](&unk_1DD2FD524, &type metadata for GradientType.RadialCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB61780);
  }
  return result;
}

unint64_t sub_1DD2C1864()
{
  unint64_t result;

  result = qword_1EDB61778;
  if (!qword_1EDB61778)
  {
    result = MEMORY[0x1DF0D8040](&unk_1DD2FD54C, &type metadata for GradientType.RadialCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB61778);
  }
  return result;
}

unint64_t sub_1DD2C18AC()
{
  unint64_t result;

  result = qword_1EDB61758;
  if (!qword_1EDB61758)
  {
    result = MEMORY[0x1DF0D8040](&unk_1DD2FD5C4, &type metadata for GradientType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB61758);
  }
  return result;
}

unint64_t sub_1DD2C18F4()
{
  unint64_t result;

  result = qword_1EDB61750;
  if (!qword_1EDB61750)
  {
    result = MEMORY[0x1DF0D8040](&unk_1DD2FD5EC, &type metadata for GradientType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB61750);
  }
  return result;
}

unint64_t sub_1DD2C193C()
{
  unint64_t result;

  result = qword_1EDB61170;
  if (!qword_1EDB61170)
  {
    result = MEMORY[0x1DF0D8040](&unk_1DD2FD46C, &type metadata for EmojiPosterBackgroundConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB61170);
  }
  return result;
}

unint64_t sub_1DD2C1984()
{
  unint64_t result;

  result = qword_1EDB61168;
  if (!qword_1EDB61168)
  {
    result = MEMORY[0x1DF0D8040](&unk_1DD2FD494, &type metadata for EmojiPosterBackgroundConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB61168);
  }
  return result;
}

unint64_t sub_1DD2C19CC()
{
  unint64_t result;

  result = qword_1EDB610C0;
  if (!qword_1EDB610C0)
  {
    result = MEMORY[0x1DF0D8040](&unk_1DD2FD3B4, &type metadata for EmojiPosterConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB610C0);
  }
  return result;
}

unint64_t sub_1DD2C1A14()
{
  unint64_t result;

  result = qword_1EDB610B8;
  if (!qword_1EDB610B8)
  {
    result = MEMORY[0x1DF0D8040](&unk_1DD2FD3DC, &type metadata for EmojiPosterConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB610B8);
  }
  return result;
}

unint64_t sub_1DD2C1A5C()
{
  unint64_t result;

  result = qword_1EDB610D8;
  if (!qword_1EDB610D8)
  {
    result = MEMORY[0x1DF0D8040](&unk_1DD2FD2FC, &type metadata for EmojiPosterBackgroundColor.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB610D8);
  }
  return result;
}

unint64_t sub_1DD2C1AA4()
{
  unint64_t result;

  result = qword_1EDB610D0;
  if (!qword_1EDB610D0)
  {
    result = MEMORY[0x1DF0D8040](&unk_1DD2FD324, &type metadata for EmojiPosterBackgroundColor.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB610D0);
  }
  return result;
}

unint64_t sub_1DD2C1AEC()
{
  unint64_t result;

  result = qword_1EDB61110;
  if (!qword_1EDB61110)
  {
    result = MEMORY[0x1DF0D8040](&unk_1DD2FD1F4, &type metadata for EmojiPosterBackgroundStyle.SolidCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB61110);
  }
  return result;
}

unint64_t sub_1DD2C1B34()
{
  unint64_t result;

  result = qword_1EDB61108;
  if (!qword_1EDB61108)
  {
    result = MEMORY[0x1DF0D8040](&unk_1DD2FD21C, &type metadata for EmojiPosterBackgroundStyle.SolidCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB61108);
  }
  return result;
}

unint64_t sub_1DD2C1B7C()
{
  unint64_t result;

  result = qword_1EDB61140;
  if (!qword_1EDB61140)
  {
    result = MEMORY[0x1DF0D8040](&unk_1DD2FD1A4, &type metadata for EmojiPosterBackgroundStyle.LinearGradientCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB61140);
  }
  return result;
}

unint64_t sub_1DD2C1BC4()
{
  unint64_t result;

  result = qword_1EDB61138;
  if (!qword_1EDB61138)
  {
    result = MEMORY[0x1DF0D8040]("\rpA\rXb", &type metadata for EmojiPosterBackgroundStyle.LinearGradientCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB61138);
  }
  return result;
}

unint64_t sub_1DD2C1C0C()
{
  unint64_t result;

  result = qword_1EDB61150;
  if (!qword_1EDB61150)
  {
    result = MEMORY[0x1DF0D8040](&unk_1DD2FD154, &type metadata for EmojiPosterBackgroundStyle.RadialGradientCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB61150);
  }
  return result;
}

unint64_t sub_1DD2C1C54()
{
  unint64_t result;

  result = qword_1EDB61148;
  if (!qword_1EDB61148)
  {
    result = MEMORY[0x1DF0D8040](&unk_1DD2FD17C, &type metadata for EmojiPosterBackgroundStyle.RadialGradientCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB61148);
  }
  return result;
}

unint64_t sub_1DD2C1C9C()
{
  unint64_t result;

  result = qword_1EDB61130;
  if (!qword_1EDB61130)
  {
    result = MEMORY[0x1DF0D8040](&unk_1DD2FD104, &type metadata for EmojiPosterBackgroundStyle.BloomGradientCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB61130);
  }
  return result;
}

unint64_t sub_1DD2C1CE4()
{
  unint64_t result;

  result = qword_1EDB61128;
  if (!qword_1EDB61128)
  {
    result = MEMORY[0x1DF0D8040](&unk_1DD2FD12C, &type metadata for EmojiPosterBackgroundStyle.BloomGradientCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB61128);
  }
  return result;
}

unint64_t sub_1DD2C1D2C()
{
  unint64_t result;

  result = qword_1EDB61120;
  if (!qword_1EDB61120)
  {
    result = MEMORY[0x1DF0D8040](&unk_1DD2FD0B4, &type metadata for EmojiPosterBackgroundStyle.VignettedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB61120);
  }
  return result;
}

unint64_t sub_1DD2C1D74()
{
  unint64_t result;

  result = qword_1EDB61118;
  if (!qword_1EDB61118)
  {
    result = MEMORY[0x1DF0D8040](&unk_1DD2FD0DC, &type metadata for EmojiPosterBackgroundStyle.VignettedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB61118);
  }
  return result;
}

unint64_t sub_1DD2C1DBC()
{
  unint64_t result;

  result = qword_1EDB610F8;
  if (!qword_1EDB610F8)
  {
    result = MEMORY[0x1DF0D8040](&unk_1DD2FD244, &type metadata for EmojiPosterBackgroundStyle.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB610F8);
  }
  return result;
}

unint64_t sub_1DD2C1E04()
{
  unint64_t result;

  result = qword_1EDB610F0;
  if (!qword_1EDB610F0)
  {
    result = MEMORY[0x1DF0D8040]("moA\rpa", &type metadata for EmojiPosterBackgroundStyle.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB610F0);
  }
  return result;
}

unint64_t sub_1DD2C1E4C()
{
  unint64_t result;

  result = qword_1EDB61090;
  if (!qword_1EDB61090)
  {
    result = MEMORY[0x1DF0D8040](&unk_1DD2FCFAC, &type metadata for EmojiPosterSizeVariant.SmallCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB61090);
  }
  return result;
}

unint64_t sub_1DD2C1E94()
{
  unint64_t result;

  result = qword_1EDB61088;
  if (!qword_1EDB61088)
  {
    result = MEMORY[0x1DF0D8040](&unk_1DD2FCFD4, &type metadata for EmojiPosterSizeVariant.SmallCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB61088);
  }
  return result;
}

unint64_t sub_1DD2C1EDC()
{
  unint64_t result;

  result = qword_1EDB610A0;
  if (!qword_1EDB610A0)
  {
    result = MEMORY[0x1DF0D8040](&unk_1DD2FCF5C, &type metadata for EmojiPosterSizeVariant.MediumCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB610A0);
  }
  return result;
}

unint64_t sub_1DD2C1F24()
{
  unint64_t result;

  result = qword_1EDB61098;
  if (!qword_1EDB61098)
  {
    result = MEMORY[0x1DF0D8040]("UrA\rxe", &type metadata for EmojiPosterSizeVariant.MediumCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB61098);
  }
  return result;
}

unint64_t sub_1DD2C1F6C()
{
  unint64_t result;

  result = qword_1EDB61078;
  if (!qword_1EDB61078)
  {
    result = MEMORY[0x1DF0D8040](&unk_1DD2FCF0C, &type metadata for EmojiPosterSizeVariant.LargeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB61078);
  }
  return result;
}

unint64_t sub_1DD2C1FB4()
{
  unint64_t result;

  result = qword_1EDB61070;
  if (!qword_1EDB61070)
  {
    result = MEMORY[0x1DF0D8040](&unk_1DD2FCF34, &type metadata for EmojiPosterSizeVariant.LargeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB61070);
  }
  return result;
}

unint64_t sub_1DD2C1FFC()
{
  unint64_t result;

  result = qword_1EDB61068;
  if (!qword_1EDB61068)
  {
    result = MEMORY[0x1DF0D8040](&unk_1DD2FCFFC, &type metadata for EmojiPosterSizeVariant.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB61068);
  }
  return result;
}

unint64_t sub_1DD2C2044()
{
  unint64_t result;

  result = qword_1EDB61060;
  if (!qword_1EDB61060)
  {
    result = MEMORY[0x1DF0D8040](&unk_1DD2FD024, &type metadata for EmojiPosterSizeVariant.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB61060);
  }
  return result;
}

unint64_t sub_1DD2C208C()
{
  unint64_t result;

  result = qword_1EDB61048;
  if (!qword_1EDB61048)
  {
    result = MEMORY[0x1DF0D8040](&unk_1DD2FCE04, &type metadata for EmojiPosterLayoutStyle.OffsetGridCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB61048);
  }
  return result;
}

unint64_t sub_1DD2C20D4()
{
  unint64_t result;

  result = qword_1EDB61040;
  if (!qword_1EDB61040)
  {
    result = MEMORY[0x1DF0D8040](&unk_1DD2FCE2C, &type metadata for EmojiPosterLayoutStyle.OffsetGridCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB61040);
  }
  return result;
}

unint64_t sub_1DD2C211C()
{
  unint64_t result;

  result = qword_1EDB61030;
  if (!qword_1EDB61030)
  {
    result = MEMORY[0x1DF0D8040](&unk_1DD2FCDB4, &type metadata for EmojiPosterLayoutStyle.CircularCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB61030);
  }
  return result;
}

unint64_t sub_1DD2C2164()
{
  unint64_t result;

  result = qword_1EDB61028;
  if (!qword_1EDB61028)
  {
    result = MEMORY[0x1DF0D8040](&unk_1DD2FCDDC, &type metadata for EmojiPosterLayoutStyle.CircularCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB61028);
  }
  return result;
}

unint64_t sub_1DD2C21AC()
{
  unint64_t result;

  result = qword_1EDB61020;
  if (!qword_1EDB61020)
  {
    result = MEMORY[0x1DF0D8040]("etA\rLh", &type metadata for EmojiPosterLayoutStyle.SpiralCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB61020);
  }
  return result;
}

unint64_t sub_1DD2C21F4()
{
  unint64_t result;

  result = qword_1EDB61018;
  if (!qword_1EDB61018)
  {
    result = MEMORY[0x1DF0D8040]("MtA\r$h", &type metadata for EmojiPosterLayoutStyle.SpiralCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB61018);
  }
  return result;
}

unint64_t sub_1DD2C223C()
{
  unint64_t result;

  result = qword_1EDB61010;
  if (!qword_1EDB61010)
  {
    result = MEMORY[0x1DF0D8040](&unk_1DD2FCE54, &type metadata for EmojiPosterLayoutStyle.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB61010);
  }
  return result;
}

unint64_t sub_1DD2C2284()
{
  unint64_t result;

  result = qword_1EDB61008;
  if (!qword_1EDB61008)
  {
    result = MEMORY[0x1DF0D8040](&unk_1DD2FCE7C, &type metadata for EmojiPosterLayoutStyle.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB61008);
  }
  return result;
}

uint64_t sub_1DD2C22C8(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000010 && a2 == 0x80000001DD300380 || (sub_1DD2FA210() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x80000001DD3003A0 || (sub_1DD2FA210() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x745374756F79616CLL && a2 == 0xEB00000000656C79 || (sub_1DD2FA210() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x69726156657A6973 && a2 == 0xEB00000000746E61 || (sub_1DD2FA210() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x696A6F6D65 && a2 == 0xE500000000000000 || (sub_1DD2FA210() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6172615073657375 && a2 == 0xEB0000000078616CLL)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    v5 = sub_1DD2FA210();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 5;
    else
      return 6;
  }
}

uint64_t sub_1DD2C2580(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x756F72676B636162 && a2 == 0xEF656C797453646ELL;
  if (v2 || (sub_1DD2FA210() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x756F72676B636162 && a2 == 0xEF726F6C6F43646ELL || (sub_1DD2FA210() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000001DD3003C0 || (sub_1DD2FA210() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001DD3003E0 || (sub_1DD2FA210() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000020 && a2 == 0x80000001DD300400)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    v6 = sub_1DD2FA210();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 4;
    else
      return 5;
  }
}

uint64_t sub_1DD2C27BC(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x7261656E696CLL && a2 == 0xE600000000000000;
  if (v2 || (sub_1DD2FA210() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6C6169646172 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1DD2FA210();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1DD2C289C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 1701869940 && a2 == 0xE400000000000000;
  if (v2 || (sub_1DD2FA210() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x656C676E61 && a2 == 0xE500000000000000 || (sub_1DD2FA210() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6F6C6F437466656CLL && a2 == 0xEE0065756C615672 || (sub_1DD2FA210() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6C6F437468676972 && a2 == 0xEF65756C6156726FLL || (sub_1DD2FA210() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x73726F6C6F63 && a2 == 0xE600000000000000 || (sub_1DD2FA210() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6E6F697461636F6CLL && a2 == 0xE900000000000073)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    v6 = sub_1DD2FA210();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 5;
    else
      return 6;
  }
}

void type metadata accessor for CGRect(uint64_t a1)
{
  sub_1DD2C2BA0(a1, &qword_1F03D0D58);
}

void type metadata accessor for CGColor(uint64_t a1)
{
  sub_1DD2C2BA0(a1, &qword_1F03D0D60);
}

void type metadata accessor for CTRun(uint64_t a1)
{
  sub_1DD2C2BA0(a1, &qword_1EDB61F18);
}

void type metadata accessor for Key(uint64_t a1)
{
  sub_1DD2C2BA0(a1, &qword_1EDB61528);
}

void sub_1DD2C2BA0(uint64_t a1, unint64_t *a2)
{
  unint64_t ForeignTypeMetadata;
  uint64_t v4;

  if (!*a2)
  {
    ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v4)
      atomic_store(ForeignTypeMetadata, a2);
  }
}

uint64_t sub_1DD2C2BE4()
{
  return sub_1DD2C2C2C(&qword_1F03D0D68, (uint64_t)&unk_1DD2FDE68);
}

uint64_t sub_1DD2C2C08()
{
  return sub_1DD2C2C2C(&qword_1F03D0D70, (uint64_t)&unk_1DD2FDE3C);
}

uint64_t sub_1DD2C2C2C(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    type metadata accessor for Key(255);
    result = MEMORY[0x1DF0D8040](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1DD2C2C6C()
{
  return sub_1DD2C2C2C(&qword_1EDB61520, (uint64_t)&unk_1DD2FDED8);
}

void sub_1DD2C2CCC(uint64_t a1, char a2)
{
  char *v2;
  CGFloat v3;
  char *v4;
  uint64_t i;
  uint64_t v6;
  id v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  char *v13;
  char isEscapingClosureAtFileLocation;
  CGAffineTransform aBlock;

  v3 = 0.0;
  if ((unint64_t)(a1 - 2) <= 2)
    v3 = dbl_1DD2FE0E0[a1 - 2];
  if ((a2 & 1) == 0)
  {
    v9 = (void *)objc_opt_self();
    v10 = swift_allocObject();
    *(_QWORD *)(v10 + 16) = v2;
    *(CGFloat *)(v10 + 24) = v3;
    v11 = swift_allocObject();
    *(_QWORD *)(v11 + 16) = sub_1DD2C3094;
    *(_QWORD *)(v11 + 24) = v10;
    *(_QWORD *)&aBlock.tx = sub_1DD2C30D0;
    *(_QWORD *)&aBlock.ty = v11;
    *(_QWORD *)&aBlock.a = MEMORY[0x1E0C809B0];
    *(_QWORD *)&aBlock.b = 1107296256;
    *(_QWORD *)&aBlock.c = sub_1DD2C30F0;
    *(_QWORD *)&aBlock.d = &block_descriptor;
    v12 = _Block_copy(&aBlock);
    v13 = v2;
    swift_retain();
    swift_release();
    objc_msgSend(v9, sel_performWithoutAnimation_, v12);
    _Block_release(v12);
    isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
    swift_release();
    swift_release();
    if ((isEscapingClosureAtFileLocation & 1) != 0)
      goto LABEL_17;
    return;
  }
  v4 = &v2[OBJC_IVAR____TtC11EmojiPoster39EmojiForegroundGridLayersViewController_emojiImageViews];
  swift_beginAccess();
  for (i = 0; ; ++i)
  {
    if (*(_QWORD *)v4 >> 62)
    {
      swift_bridgeObjectRetain();
      v8 = sub_1DD2FA0F0();
      swift_bridgeObjectRelease();
      if (i >= v8)
        return;
    }
    else if (i >= *(_QWORD *)((*(_QWORD *)v4 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      return;
    }
    v6 = *(_QWORD *)v4;
    if ((*(_QWORD *)v4 & 0xC000000000000001) == 0)
      break;
    swift_bridgeObjectRetain();
    v7 = (id)MEMORY[0x1DF0D75E4](i, v6);
    swift_bridgeObjectRelease();
LABEL_10:
    CGAffineTransformMakeRotation(&aBlock, v3);
    objc_msgSend(v7, sel_setTransform_, &aBlock);

  }
  if ((unint64_t)i < *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v7 = *(id *)(v6 + 8 * i + 32);
    goto LABEL_10;
  }
  __break(1u);
LABEL_17:
  __break(1u);
}

void sub_1DD2C2F30(uint64_t a1, CGFloat a2)
{
  uint64_t *v3;
  uint64_t i;
  uint64_t v5;
  id v6;
  uint64_t v7;
  CGAffineTransform v8;

  v3 = (uint64_t *)(a1 + OBJC_IVAR____TtC11EmojiPoster39EmojiForegroundGridLayersViewController_emojiImageViews);
  swift_beginAccess();
  for (i = 0; ; ++i)
  {
    if ((unint64_t)*v3 >> 62)
    {
      swift_bridgeObjectRetain();
      v7 = sub_1DD2FA0F0();
      swift_bridgeObjectRelease();
      if (i >= v7)
        return;
    }
    else if (i >= *(_QWORD *)((*v3 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      return;
    }
    v5 = *v3;
    if ((*v3 & 0xC000000000000001) == 0)
      break;
    swift_bridgeObjectRetain();
    v6 = (id)MEMORY[0x1DF0D75E4](i, v5);
    swift_bridgeObjectRelease();
LABEL_7:
    CGAffineTransformMakeRotation(&v8, a2);
    objc_msgSend(v6, sel_setTransform_, &v8);

  }
  if ((unint64_t)i < *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v6 = *(id *)(v5 + 8 * i + 32);
    goto LABEL_7;
  }
  __break(1u);
}

uint64_t sub_1DD2C3070()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_1DD2C3094()
{
  uint64_t v0;

  sub_1DD2C2F30(*(_QWORD *)(v0 + 16), *(CGFloat *)(v0 + 24));
}

uint64_t sub_1DD2C30A0(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_1DD2C30C0()
{
  return swift_deallocObject();
}

uint64_t sub_1DD2C30D0()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_1DD2C30F0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(a1 + 32))();
}

uint64_t block_copy_helper(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper()
{
  return swift_release();
}

uint64_t sub_1DD2C3128@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  _BYTE v5[128];

  v3 = *a1 + OBJC_IVAR____TtC11EmojiPoster39EmojiForegroundGridLayersViewController_configuration;
  swift_beginAccess();
  sub_1DD2C37E8(v3, (uint64_t)v5);
  sub_1DD2C37E8((uint64_t)v5, a2);
  return sub_1DD2C3968((uint64_t)v5, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1DD2C3830);
}

uint64_t sub_1DD2C3198(uint64_t a1, _QWORD *a2)
{
  uint64_t v3;
  _BYTE v5[128];
  _BYTE v6[128];
  _BYTE v7[128];
  _BYTE v8[128];

  sub_1DD2C37E8(a1, (uint64_t)v6);
  v3 = *a2 + OBJC_IVAR____TtC11EmojiPoster39EmojiForegroundGridLayersViewController_configuration;
  swift_beginAccess();
  sub_1DD2C37E8(v3, (uint64_t)v7);
  sub_1DD2C37E8(v3, (uint64_t)v8);
  sub_1DD2C37E8((uint64_t)v6, v3);
  sub_1DD2C3968((uint64_t)v6, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1DD2C3830);
  sub_1DD2C3968((uint64_t)v7, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1DD2C3830);
  sub_1DD2C3968((uint64_t)v8, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1DD2C39CC);
  sub_1DD2C37E8((uint64_t)v7, (uint64_t)v5);
  sub_1DD2C3268((uint64_t)v5);
  return sub_1DD2C3968((uint64_t)v7, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1DD2C39CC);
}

void sub_1DD2C3268(uint64_t a1)
{
  char *v1;
  char *v2;
  uint64_t v3;
  char v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  int v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  id v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30[16];
  _QWORD v31[16];
  _QWORD v32[16];
  _BYTE v33[107];
  char v34;
  _BYTE v35[128];
  _BYTE v36[128];
  _BYTE v37[107];
  char v38;
  _QWORD *v39;

  v2 = v1;
  sub_1DD2C37E8(a1, (uint64_t)v35);
  v3 = (uint64_t)&v1[OBJC_IVAR____TtC11EmojiPoster39EmojiForegroundGridLayersViewController_configuration];
  swift_beginAccess();
  sub_1DD2C37E8(v3, (uint64_t)v36);
  sub_1DD2C37E8((uint64_t)v36, (uint64_t)v37);
  if (sub_1DD2C61E4((uint64_t)v37) != 1)
  {
    sub_1DD2C37E8((uint64_t)v35, (uint64_t)v33);
    if (sub_1DD2C61E4((uint64_t)v33) == 1)
    {
      v4 = v38;
    }
    else
    {
      v5 = v34;
      v4 = v38;
      if (v34 == v38)
      {
        sub_1DD2C37E8((uint64_t)v35, (uint64_t)v31);
        v6 = v31[14];
        sub_1DD2C37E8((uint64_t)v36, (uint64_t)v32);
        sub_1DD2BFA24(v32);
        v7 = *(_QWORD *)(v6 + 16);
        v8 = v39;
        v9 = v39[2];
        if (v7 == v9)
        {
          v10 = 0;
          goto LABEL_23;
        }
        v4 = v5;
        goto LABEL_15;
      }
    }
    sub_1DD2C37E8((uint64_t)v36, (uint64_t)v31);
    sub_1DD2C37E8((uint64_t)v36, (uint64_t)v32);
    sub_1DD2C3968((uint64_t)v36, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1DD2C3830);
    sub_1DD2BFA24(v32);
    sub_1DD2BFA24(v31);
    v11 = sub_1DD2F9CD0();
    v12 = sub_1DD2F9F34();
    if (os_log_type_enabled(v11, v12))
    {
      v13 = (uint8_t *)swift_slowAlloc();
      v14 = swift_slowAlloc();
      v30[0] = v14;
      *(_DWORD *)v13 = 136315138;
      v29 = sub_1DD2EF110(qword_1DD2FE0F8[v4], 0xE100000000000000, v30);
      sub_1DD2F9FC4();
      swift_bridgeObjectRelease();
      sub_1DD2C3968((uint64_t)v36, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1DD2C39CC);
      sub_1DD2C3968((uint64_t)v36, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1DD2C39CC);
      _os_log_impl(&dword_1DD2AD000, v11, v12, "Size variant did change to %s, will update layout", v13, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1DF0D80DC](v14, -1, -1);
      MEMORY[0x1DF0D80DC](v13, -1, -1);

    }
    else
    {

      sub_1DD2C3968((uint64_t)v36, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1DD2C39CC);
      sub_1DD2C3968((uint64_t)v36, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1DD2C39CC);
    }
    sub_1DD2C37E8((uint64_t)v35, (uint64_t)v30);
    if (sub_1DD2C61E4((uint64_t)v30) == 1)
    {
      v8 = v39;
      v9 = v39[2];
    }
    else
    {
      v15 = *(_QWORD *)(v30[14] + 16);
      v8 = v39;
      v9 = v39[2];
      if (v15 == v9)
      {
LABEL_19:
        v19 = objc_msgSend(v2, sel_view, v29);
        if (!v19)
        {
          __break(1u);
          return;
        }
        v20 = v19;
        if (v15 <= 1)
          v15 = 1;
        objc_msgSend(v19, sel_bounds);
        v22 = v21;
        v24 = v23;

        sub_1DD2D733C((char *)v32);
        v25 = v32[0];
        type metadata accessor for GridLayoutProvider();
        v26 = swift_allocObject();
        *(_QWORD *)(v26 + 56) = 0;
        *(_QWORD *)(v26 + 64) = 0x3FEBB67AE8584CAALL;
        *(_QWORD *)(v26 + 16) = v22;
        *(_QWORD *)(v26 + 24) = v24;
        *(_BYTE *)(v26 + 32) = v4;
        *(_QWORD *)(v26 + 40) = v15;
        *(_BYTE *)(v26 + 48) = v25;
        sub_1DD2F2CEC();
        *(_QWORD *)(v26 + 56) = v27;
        swift_bridgeObjectRelease();
        *(_QWORD *)&v2[OBJC_IVAR____TtC11EmojiPoster39EmojiForegroundGridLayersViewController_layoutProvider] = v26;
        swift_release();
        v10 = 1;
LABEL_23:
        if (!objc_msgSend(v2, sel_isViewLoaded))
        {
          sub_1DD2C3968((uint64_t)v36, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1DD2C39CC);
          return;
        }
        sub_1DD2C37E8((uint64_t)v35, (uint64_t)v32);
        if (sub_1DD2C61E4((uint64_t)v32) == 1)
        {
          sub_1DD2C3968((uint64_t)v36, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1DD2C39CC);
        }
        else
        {
          v28 = sub_1DD2C6694((_QWORD *)v32[14], v8);
          sub_1DD2C3968((uint64_t)v36, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1DD2C39CC);
          if ((v28 & 1) != 0)
          {
            if (!v10)
              return;
            sub_1DD2C4FF4();
            sub_1DD2C56E0();
            goto LABEL_31;
          }
        }
        sub_1DD2C58C0();
LABEL_31:
        sub_1DD2C4D70();
        return;
      }
    }
LABEL_15:
    sub_1DD2C37E8((uint64_t)v36, (uint64_t)v32);
    sub_1DD2BFA24(v32);
    v16 = sub_1DD2F9CD0();
    v17 = sub_1DD2F9F34();
    if (os_log_type_enabled(v16, v17))
    {
      v18 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v18 = 134217984;
      v31[0] = v9;
      sub_1DD2F9FC4();
      sub_1DD2C3968((uint64_t)v36, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1DD2C39CC);
      _os_log_impl(&dword_1DD2AD000, v16, v17, "Emoji count did change to %ld, will update layout", v18, 0xCu);
      MEMORY[0x1DF0D80DC](v18, -1, -1);

    }
    else
    {

      sub_1DD2C3968((uint64_t)v36, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1DD2C39CC);
    }
    v15 = v9;
    goto LABEL_19;
  }
}

uint64_t sub_1DD2C377C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  _BYTE v5[128];

  v3 = v1 + OBJC_IVAR____TtC11EmojiPoster39EmojiForegroundGridLayersViewController_configuration;
  swift_beginAccess();
  sub_1DD2C37E8(v3, (uint64_t)v5);
  sub_1DD2C37E8((uint64_t)v5, a1);
  return sub_1DD2C3968((uint64_t)v5, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1DD2C3830);
}

uint64_t sub_1DD2C37E8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F03D0D80);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DD2C3830(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  uint64_t result;

  if (a15)
  {
    swift_bridgeObjectRetain();
    sub_1DD2BF7A4(a8, a9, a10, a11, a12);
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1DD2C38B8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _BYTE v4[128];
  _BYTE v5[128];
  _BYTE v6[128];
  _BYTE v7[136];

  sub_1DD2C37E8(a1, (uint64_t)v5);
  v2 = v1 + OBJC_IVAR____TtC11EmojiPoster39EmojiForegroundGridLayersViewController_configuration;
  swift_beginAccess();
  sub_1DD2C37E8(v2, (uint64_t)v6);
  sub_1DD2C37E8(v2, (uint64_t)v7);
  sub_1DD2C37E8((uint64_t)v5, v2);
  sub_1DD2C3968((uint64_t)v6, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1DD2C3830);
  sub_1DD2C3968((uint64_t)v7, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1DD2C39CC);
  sub_1DD2C37E8((uint64_t)v6, (uint64_t)v4);
  sub_1DD2C3268((uint64_t)v4);
  return sub_1DD2C3968((uint64_t)v6, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1DD2C39CC);
}

uint64_t sub_1DD2C3968(uint64_t a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))
{
  char v4;

  v4 = *(_BYTE *)(a1 + 120);
  a2(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), v4);
  return a1;
}

uint64_t sub_1DD2C39CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  uint64_t result;

  if (a15)
  {
    swift_bridgeObjectRelease();
    sub_1DD2BF928(a8, a9, a10, a11, a12);
    return swift_bridgeObjectRelease();
  }
  return result;
}

void (*sub_1DD2C3A54(_QWORD *a1))(_QWORD **a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = malloc(0x3A8uLL);
  *a1 = v3;
  v3[115] = v1;
  v4 = OBJC_IVAR____TtC11EmojiPoster39EmojiForegroundGridLayersViewController_configuration;
  v3[116] = OBJC_IVAR____TtC11EmojiPoster39EmojiForegroundGridLayersViewController_configuration;
  v5 = v1 + v4;
  swift_beginAccess();
  sub_1DD2C37E8(v5, (uint64_t)v3);
  sub_1DD2C37E8((uint64_t)v3, (uint64_t)(v3 + 16));
  sub_1DD2C3968((uint64_t)v3, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1DD2C3830);
  return sub_1DD2C3AE8;
}

void sub_1DD2C3AE8(_QWORD **a1, char a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v2 = *a1;
  v3 = (uint64_t)(*a1 + 16);
  v4 = (uint64_t)(*a1 + 32);
  v5 = (uint64_t)(*a1 + 48);
  v6 = (uint64_t)(*a1 + 64);
  v7 = (uint64_t)(*a1 + 80);
  if ((a2 & 1) != 0)
  {
    v8 = v2[115] + v2[116];
    sub_1DD2C37E8((uint64_t)(*a1 + 16), v7);
    sub_1DD2C37E8(v8, v6);
    sub_1DD2C37E8(v8, v5);
    sub_1DD2C37E8(v7, v8);
    sub_1DD2C3968(v7, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1DD2C3830);
    sub_1DD2C3968(v6, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1DD2C3830);
    sub_1DD2C3968(v5, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1DD2C39CC);
    sub_1DD2C37E8(v6, (uint64_t)(v2 + 96));
    sub_1DD2C3268((uint64_t)(v2 + 96));
    sub_1DD2C3968(v6, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1DD2C39CC);
    sub_1DD2C37E8(v3, v4);
    v6 = v4;
  }
  else
  {
    v9 = v2[115] + v2[116];
    sub_1DD2C37E8((uint64_t)(*a1 + 16), v7);
    sub_1DD2C37E8(v9, v6);
    sub_1DD2C37E8(v9, v5);
    sub_1DD2C37E8(v7, v9);
    sub_1DD2C3968(v6, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1DD2C3830);
    sub_1DD2C3968(v5, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1DD2C39CC);
    sub_1DD2C37E8(v6, v4);
    sub_1DD2C3268(v4);
  }
  sub_1DD2C3968(v6, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1DD2C39CC);
  free(v2);
}

double sub_1DD2C3C68()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + OBJC_IVAR____TtC11EmojiPoster39EmojiForegroundGridLayersViewController_wakeProgress;
  swift_beginAccess();
  return *(double *)v1;
}

void sub_1DD2C3CAC(double a1)
{
  sub_1DD2C3D54(&OBJC_IVAR____TtC11EmojiPoster39EmojiForegroundGridLayersViewController_wakeProgress, a1);
}

uint64_t (*sub_1DD2C3CB8(uint64_t a1))()
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1DD2C3D00;
}

double sub_1DD2C3D04()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + OBJC_IVAR____TtC11EmojiPoster39EmojiForegroundGridLayersViewController_unlockProgress;
  swift_beginAccess();
  return *(double *)v1;
}

void sub_1DD2C3D48(double a1)
{
  sub_1DD2C3D54(&OBJC_IVAR____TtC11EmojiPoster39EmojiForegroundGridLayersViewController_unlockProgress, a1);
}

void sub_1DD2C3D54(_QWORD *a1, double a2)
{
  uint64_t v2;
  double *v4;

  v4 = (double *)(v2 + *a1);
  swift_beginAccess();
  *v4 = a2;
  sub_1DD2C4D70();
}

uint64_t (*sub_1DD2C3DA4(uint64_t a1))()
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1DD2C3D00;
}

void sub_1DD2C3DEC(uint64_t a1, char a2)
{
  swift_endAccess();
  if ((a2 & 1) == 0)
    sub_1DD2C4D70();
}

uint64_t sub_1DD2C3E1C()
{
  return 1;
}

id EmojiForegroundGridLayersViewController.__allocating_init(emojiRenderer:)(uint64_t a1)
{
  objc_class *v1;
  id v3;
  id v4;

  v3 = objc_allocWithZone(v1);
  v4 = sub_1DD2C6030(a1);
  swift_release();
  return v4;
}

id EmojiForegroundGridLayersViewController.init(emojiRenderer:)(uint64_t a1)
{
  id v1;

  v1 = sub_1DD2C6030(a1);
  swift_release();
  return v1;
}

id EmojiForegroundGridLayersViewController.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

id EmojiForegroundGridLayersViewController.init(coder:)(void *a1)
{
  void *v1;
  char *v3;
  char *v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  id v11;
  objc_super v13;
  _OWORD v14[8];

  v3 = v1;
  sub_1DD2F9CDC();
  v4 = &v3[OBJC_IVAR____TtC11EmojiPoster39EmojiForegroundGridLayersViewController_configuredSize];
  *(_QWORD *)v4 = 0;
  *((_QWORD *)v4 + 1) = 0;
  v4[16] = 1;
  v5 = (uint64_t)&v3[OBJC_IVAR____TtC11EmojiPoster39EmojiForegroundGridLayersViewController_configuration];
  sub_1DD2C618C(v14);
  sub_1DD2C37E8((uint64_t)v14, v5);
  *(_QWORD *)&v3[OBJC_IVAR____TtC11EmojiPoster39EmojiForegroundGridLayersViewController_layoutProvider] = 0;
  v6 = &v3[OBJC_IVAR____TtC11EmojiPoster39EmojiForegroundGridLayersViewController_numberOfRows];
  *(_QWORD *)v6 = 0;
  v6[8] = 1;
  v7 = &v3[OBJC_IVAR____TtC11EmojiPoster39EmojiForegroundGridLayersViewController_numberOfItemsInRow];
  *(_QWORD *)v7 = 0;
  v7[8] = 1;
  v8 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)&v3[OBJC_IVAR____TtC11EmojiPoster39EmojiForegroundGridLayersViewController_emojiImageViews] = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)&v3[OBJC_IVAR____TtC11EmojiPoster39EmojiForegroundGridLayersViewController_emojiImages] = v8;
  *(_QWORD *)&v3[OBJC_IVAR____TtC11EmojiPoster39EmojiForegroundGridLayersViewController_wakeProgress] = 0x3FF0000000000000;
  *(_QWORD *)&v3[OBJC_IVAR____TtC11EmojiPoster39EmojiForegroundGridLayersViewController_unlockProgress] = 0;
  type metadata accessor for EmojiRenderer();
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = 10;
  v10 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C99D38]), sel_init);
  *(_QWORD *)(v9 + 24) = v10;
  objc_msgSend(v10, sel_setCountLimit_, 10);
  *(_QWORD *)&v3[OBJC_IVAR____TtC11EmojiPoster39EmojiForegroundGridLayersViewController_emojiRenderer] = v9;

  v13.receiver = v3;
  v13.super_class = (Class)type metadata accessor for EmojiForegroundGridLayersViewController();
  v11 = objc_msgSendSuper2(&v13, sel_initWithCoder_, a1);

  return v11;
}

void sub_1DD2C40A8()
{
  char *v0;
  char *v1;
  id v2;
  void *v3;
  id v4;
  void *v5;
  id v6;
  uint64_t v7;
  unint64_t v8;
  id v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  _QWORD v20[16];
  _BYTE v21[128];
  _BYTE v22[112];
  uint64_t v23;
  objc_super v24;

  v1 = v0;
  v24.receiver = v0;
  v24.super_class = (Class)type metadata accessor for EmojiForegroundGridLayersViewController();
  objc_msgSendSuper2(&v24, sel_viewDidLoad);
  v2 = objc_msgSend(v0, sel_view);
  if (!v2)
  {
    __break(1u);
    goto LABEL_10;
  }
  v3 = v2;
  objc_msgSend(v2, sel_setClipsToBounds_, 0);

  v4 = objc_msgSend(v1, sel_view);
  if (!v4)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  v5 = v4;
  v6 = objc_msgSend((id)objc_opt_self(), sel_clearColor);
  objc_msgSend(v5, sel_setBackgroundColor_, v6);

  v7 = (uint64_t)&v1[OBJC_IVAR____TtC11EmojiPoster39EmojiForegroundGridLayersViewController_configuration];
  swift_beginAccess();
  sub_1DD2C37E8(v7, (uint64_t)v21);
  sub_1DD2C37E8((uint64_t)v21, (uint64_t)v22);
  if (sub_1DD2C61E4((uint64_t)v22) == 1)
    return;
  v8 = *(_QWORD *)(v23 + 16);
  sub_1DD2C37E8((uint64_t)v21, (uint64_t)v20);
  sub_1DD2BFA24(v20);
  v9 = objc_msgSend(v1, sel_view);
  if (!v9)
  {
LABEL_11:
    __break(1u);
    return;
  }
  v10 = v9;
  if (v8 <= 1)
    v8 = 1;
  objc_msgSend(v9, sel_bounds);
  v12 = v11;
  v14 = v13;

  v15 = v22[107];
  sub_1DD2D733C(&v19);
  v16 = v19;
  type metadata accessor for GridLayoutProvider();
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 56) = 0;
  *(_QWORD *)(v17 + 64) = 0x3FEBB67AE8584CAALL;
  *(_QWORD *)(v17 + 16) = v12;
  *(_QWORD *)(v17 + 24) = v14;
  *(_BYTE *)(v17 + 32) = v15;
  *(_QWORD *)(v17 + 40) = v8;
  *(_BYTE *)(v17 + 48) = v16;
  sub_1DD2F2CEC();
  *(_QWORD *)(v17 + 56) = v18;
  swift_bridgeObjectRelease();
  sub_1DD2C3968((uint64_t)v21, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1DD2C39CC);
  *(_QWORD *)&v1[OBJC_IVAR____TtC11EmojiPoster39EmojiForegroundGridLayersViewController_layoutProvider] = v17;
  swift_release();
  sub_1DD2C465C();
  sub_1DD2C4A1C();
}

void sub_1DD2C4304()
{
  char *v0;
  double *v1;
  CGFloat v2;
  CGFloat v3;
  id v4;
  void *v5;
  double v6;
  CGFloat v7;
  double v8;
  CGFloat v9;
  id v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  objc_super v16;
  CGSize v17;
  CGSize v18;

  v16.receiver = v0;
  v16.super_class = (Class)type metadata accessor for EmojiForegroundGridLayersViewController();
  objc_msgSendSuper2(&v16, sel_viewDidLayoutSubviews);
  v1 = (double *)&v0[OBJC_IVAR____TtC11EmojiPoster39EmojiForegroundGridLayersViewController_configuredSize];
  if ((v0[OBJC_IVAR____TtC11EmojiPoster39EmojiForegroundGridLayersViewController_configuredSize + 16] & 1) == 0)
  {
    v3 = *v1;
    v2 = v1[1];
    v4 = objc_msgSend(v0, sel_view);
    if (!v4)
      goto LABEL_7;
    v5 = v4;
    objc_msgSend(v4, sel_bounds);
    v7 = v6;
    v9 = v8;

    v17.width = v3;
    v17.height = v2;
    v18.width = v7;
    v18.height = v9;
    CGSizeEqualToSize(v17, v18);
  }
  sub_1DD2C443C();
  v10 = objc_msgSend(v0, sel_view);
  if (v10)
  {
    v11 = v10;
    objc_msgSend(v10, sel_bounds);
    v13 = v12;
    v15 = v14;

    *(_QWORD *)v1 = v13;
    *((_QWORD *)v1 + 1) = v15;
    *((_BYTE *)v1 + 16) = 0;
    return;
  }
  __break(1u);
LABEL_7:
  __break(1u);
}

void sub_1DD2C443C()
{
  char *v0;
  char *v1;
  uint64_t v2;
  unint64_t v3;
  id v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  _QWORD v15[16];
  _BYTE v16[128];
  _BYTE v17[112];
  uint64_t v18;

  v1 = v0;
  v2 = (uint64_t)&v0[OBJC_IVAR____TtC11EmojiPoster39EmojiForegroundGridLayersViewController_configuration];
  swift_beginAccess();
  sub_1DD2C37E8(v2, (uint64_t)v16);
  sub_1DD2C37E8((uint64_t)v16, (uint64_t)v17);
  if (sub_1DD2C61E4((uint64_t)v17) != 1)
  {
    v3 = *(_QWORD *)(v18 + 16);
    sub_1DD2C37E8((uint64_t)v16, (uint64_t)v15);
    sub_1DD2BFA24(v15);
    v4 = objc_msgSend(v1, sel_view);
    if (v4)
    {
      v5 = v4;
      if (v3 <= 1)
        v3 = 1;
      objc_msgSend(v4, sel_bounds);
      v7 = v6;
      v9 = v8;

      v10 = v17[107];
      sub_1DD2D733C(&v14);
      v11 = v14;
      type metadata accessor for GridLayoutProvider();
      v12 = swift_allocObject();
      *(_QWORD *)(v12 + 56) = 0;
      *(_QWORD *)(v12 + 64) = 0x3FEBB67AE8584CAALL;
      *(_QWORD *)(v12 + 16) = v7;
      *(_QWORD *)(v12 + 24) = v9;
      *(_BYTE *)(v12 + 32) = v10;
      *(_QWORD *)(v12 + 40) = v3;
      *(_BYTE *)(v12 + 48) = v11;
      sub_1DD2F2CEC();
      *(_QWORD *)(v12 + 56) = v13;
      swift_bridgeObjectRelease();
      sub_1DD2C3968((uint64_t)v16, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1DD2C39CC);
      *(_QWORD *)&v1[OBJC_IVAR____TtC11EmojiPoster39EmojiForegroundGridLayersViewController_layoutProvider] = v12;
      swift_release();
      sub_1DD2C4D70();
    }
    else
    {
      __break(1u);
    }
  }
}

id sub_1DD2C45AC(uint64_t a1)
{
  void *v1;
  objc_super v4;

  sub_1DD2C443C();
  v4.receiver = v1;
  v4.super_class = (Class)type metadata accessor for EmojiForegroundGridLayersViewController();
  return objc_msgSendSuper2(&v4, sel_didMoveToParentViewController_, a1);
}

uint64_t sub_1DD2C465C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  _QWORD *v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  void *v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  void *v20;
  id v21;
  void *v22;
  id v23;
  id v24;
  uint64_t v25;
  int64x2_t v26;
  void *v27;
  id v28;
  _QWORD *v29;
  uint64_t v30;
  _QWORD aBlock[6];
  _BYTE v32[128];
  _BYTE v33[112];
  uint64_t v34;

  v1 = v0;
  v2 = v0 + OBJC_IVAR____TtC11EmojiPoster39EmojiForegroundGridLayersViewController_configuration;
  swift_beginAccess();
  sub_1DD2C37E8(v2, (uint64_t)v32);
  sub_1DD2C37E8((uint64_t)v32, (uint64_t)v33);
  result = sub_1DD2C61E4((uint64_t)v33);
  if ((_DWORD)result != 1)
  {
    result = v34;
    v4 = *(_QWORD *)(v34 + 16);
    if (v4)
    {
      v30 = OBJC_IVAR____TtC11EmojiPoster39EmojiForegroundGridLayersViewController_emojiRenderer;
      v5 = (_QWORD *)(v1 + OBJC_IVAR____TtC11EmojiPoster39EmojiForegroundGridLayersViewController_emojiImages);
      v6 = (uint64_t *)(swift_bridgeObjectRetain() + 40);
      v26 = vdupq_n_s64(0x4069000000000000uLL);
      v25 = v1;
      v29 = v5;
      while (1)
      {
        v7 = *(v6 - 1);
        v8 = *v6;
        v9 = *(_QWORD *)(v1 + v30);
        v10 = objc_allocWithZone(MEMORY[0x1E0CB3940]);
        swift_bridgeObjectRetain_n();
        swift_retain();
        v11 = (void *)sub_1DD2F9DB4();
        swift_bridgeObjectRelease();
        v12 = objc_msgSend(v10, sel_initWithString_, v11);

        v13 = objc_msgSend(*(id *)(v9 + 24), sel_objectForKey_, v12);
        if (v13)
        {
          v14 = v13;
          swift_release();
          swift_bridgeObjectRelease();
        }
        else
        {
          v28 = v12;
          v15 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3830]), sel_init);
          objc_msgSend(v15, sel_setOpaque_, 0);
          v27 = v15;
          v16 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3828]), sel_initWithSize_format_, v15, 200.0, 200.0);
          v17 = swift_allocObject();
          *(_QWORD *)(v17 + 16) = v7;
          *(_QWORD *)(v17 + 24) = v8;
          *(int64x2_t *)(v17 + 32) = v26;
          v18 = swift_allocObject();
          *(_QWORD *)(v18 + 16) = sub_1DD2C6578;
          *(_QWORD *)(v18 + 24) = v17;
          aBlock[4] = sub_1DD2C6594;
          aBlock[5] = v18;
          aBlock[0] = MEMORY[0x1E0C809B0];
          aBlock[1] = 1107296256;
          aBlock[2] = sub_1DD2CB738;
          aBlock[3] = &block_descriptor_16;
          v19 = _Block_copy(aBlock);
          swift_bridgeObjectRetain();
          swift_retain();
          swift_release();
          v20 = v16;
          v21 = objc_msgSend(v16, sel_imageWithActions_, v19);
          _Block_release(v19);
          LOBYTE(v19) = swift_isEscapingClosureAtFileLocation();
          result = swift_release();
          if ((v19 & 1) != 0)
          {
            __break(1u);
            return result;
          }
          v22 = *(void **)(v9 + 24);
          v14 = v21;
          v23 = v22;
          v12 = v28;
          objc_msgSend(v23, sel_setObject_forKey_, v14, v28);
          swift_release();
          swift_bridgeObjectRelease();
          swift_release();

          v1 = v25;
        }

        swift_beginAccess();
        v24 = v14;
        MEMORY[0x1DF0D7458]();
        if (*(_QWORD *)((*v29 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*v29 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_1DD2F9F04();
        v6 += 2;
        sub_1DD2F9F10();
        sub_1DD2F9EF8();
        swift_endAccess();

        if (!--v4)
          return swift_bridgeObjectRelease();
      }
    }
  }
  return result;
}

void sub_1DD2C4A1C()
{
  void *v0;
  uint64_t v1;
  char *v2;
  NSObject *v3;
  char *v4;
  uint64_t v5;
  uint8_t *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  id v15;
  id v16;
  void *v17;
  uint8_t *v18;
  _BYTE v19[128];
  _BYTE v20[136];

  v1 = (uint64_t)v0 + OBJC_IVAR____TtC11EmojiPoster39EmojiForegroundGridLayersViewController_configuration;
  swift_beginAccess();
  sub_1DD2C37E8(v1, (uint64_t)v19);
  sub_1DD2C37E8((uint64_t)v19, (uint64_t)v20);
  if (sub_1DD2C61E4((uint64_t)v20) != 1)
  {
    v2 = v0;
    v3 = sub_1DD2F9CD0();
    LOBYTE(v4) = sub_1DD2F9F40();
    v5 = (uint64_t)&unk_1EDB64000;
    if (os_log_type_enabled(v3, (os_log_type_t)v4))
    {
      v6 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v6 = 134217984;
      v7 = &v2[OBJC_IVAR____TtC11EmojiPoster39EmojiForegroundGridLayersViewController_emojiImageViews];
      swift_beginAccess();
      if (*(_QWORD *)v7 >> 62)
      {
LABEL_23:
        swift_bridgeObjectRetain();
        sub_1DD2FA0F0();
        swift_bridgeObjectRelease();
      }
      sub_1DD2F9FC4();

      _os_log_impl(&dword_1DD2AD000, v3, (os_log_type_t)v4, "[createEmojiViews] created %ld emoji views", v6, 0xCu);
      MEMORY[0x1DF0D80DC](v6, -1, -1);
    }
    else
    {

    }
    v8 = OBJC_IVAR____TtC11EmojiPoster39EmojiForegroundGridLayersViewController_layoutProvider;
    v4 = &v2[OBJC_IVAR____TtC11EmojiPoster39EmojiForegroundGridLayersViewController_emojiImages];
    v9 = *(_QWORD *)(v5 + 2984);
    swift_beginAccess();
    v10 = *(_QWORD *)&v2[v8];
    if (v10)
    {
      v3 = &v2[v9];
      v5 = -1;
      v11 = 72;
      while (1)
      {
        v12 = *(_QWORD *)(v10 + 56);
        if (!v12)
          break;
        if ((unint64_t)++v5 >= *(_QWORD *)(v12 + 16))
          return;
        v13 = *(_QWORD *)(v12 + v11);
        v6 = (uint8_t *)objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3890]), sel_init);
        v14 = *(_QWORD *)v4;
        if ((*(_QWORD *)v4 & 0xC000000000000001) != 0)
        {
          swift_bridgeObjectRetain();
          v15 = (id)MEMORY[0x1DF0D75E4](v13, v14);
          swift_bridgeObjectRelease();
        }
        else
        {
          if ((v13 & 0x8000000000000000) != 0)
          {
            __break(1u);
LABEL_22:
            __break(1u);
            goto LABEL_23;
          }
          if (v13 >= *(_QWORD *)((v14 & 0xFFFFFFFFFFFFF8) + 0x10))
            goto LABEL_22;
          v15 = *(id *)(v14 + 8 * v13 + 32);
        }
        -[uint8_t setImage:](v6, sel_setImage_, v15);

        -[uint8_t setContentMode:](v6, sel_setContentMode_, 1);
        v16 = objc_msgSend(v2, sel_view);
        if (!v16)
          goto LABEL_25;
        v17 = v16;
        objc_msgSend(v16, sel_addSubview_, v6);

        swift_beginAccess();
        v18 = v6;
        MEMORY[0x1DF0D7458]();
        if (*(_QWORD *)(((uint64_t)v3->isa & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)(((uint64_t)v3->isa & 0xFFFFFFFFFFFFFF8)
                                                                                       + 0x18) >> 1)
          sub_1DD2F9F04();
        v11 += 48;
        sub_1DD2F9F10();
        sub_1DD2F9EF8();
        swift_endAccess();

        v10 = *(_QWORD *)&v2[v8];
        if (!v10)
          goto LABEL_26;
      }
      __break(1u);
LABEL_25:
      __break(1u);
    }
LABEL_26:
    __break(1u);
  }
}

void sub_1DD2C4D70()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  BOOL v9;
  unint64_t v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  id v16;
  double v17;
  uint64_t v18;
  uint64_t v19;
  double v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  unint64_t v24;

  v1 = &v0[OBJC_IVAR____TtC11EmojiPoster39EmojiForegroundGridLayersViewController_emojiImageViews];
  swift_beginAccess();
  v2 = *(_QWORD *)v1;
  if (!(*(_QWORD *)v1 >> 62))
  {
    v3 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v3)
      goto LABEL_3;
LABEL_21:
    swift_bridgeObjectRelease();
    return;
  }
LABEL_20:
  swift_bridgeObjectRetain();
  v3 = sub_1DD2FA0F0();
  if (!v3)
    goto LABEL_21;
LABEL_3:
  v4 = OBJC_IVAR____TtC11EmojiPoster39EmojiForegroundGridLayersViewController_layoutProvider;
  v5 = &v0[OBJC_IVAR____TtC11EmojiPoster39EmojiForegroundGridLayersViewController_unlockProgress];
  v24 = v2 & 0xC000000000000001;
  swift_beginAccess();
  v23 = v5;
  swift_beginAccess();
  v6 = 0;
  v7 = 4;
  while (1)
  {
    v10 = v7 - 4;
    if (v24)
    {
      v11 = (id)MEMORY[0x1DF0D75E4](v7 - 4, v2);
      v12 = v7 - 3;
      if (__OFADD__(v10, 1))
        goto LABEL_19;
    }
    else
    {
      v11 = *(id *)(v2 + 8 * v7);
      v12 = v7 - 3;
      if (__OFADD__(v10, 1))
      {
LABEL_19:
        __break(1u);
        goto LABEL_20;
      }
    }
    v13 = v2;
    v14 = v3;
    v15 = v11;
    v16 = objc_msgSend(v0, sel_viewIfLoaded);

    v17 = 0.0;
    if (v16)
    {
      v18 = *(_QWORD *)&v0[v4];
      if (!v18)
        goto LABEL_24;
      v19 = *(_QWORD *)(v18 + 56);
      if (!v19)
        goto LABEL_25;
      v20 = 0.0;
      if (v10 < *(_QWORD *)(v19 + 16))
      {
        v21 = v19 + v6;
        v17 = *(double *)(v21 + 48);
        v20 = *(double *)(v21 + 56);
      }
    }
    else
    {
      v20 = 0.0;
    }
    objc_msgSend(v15, sel_setCenter_, v17, v20, v23);

    v22 = *(_QWORD *)&v0[v4];
    if (!v22)
      break;
    if (!*(_QWORD *)(v22 + 56))
      goto LABEL_23;
    v8 = v15;
    objc_msgSend(v8, sel_bounds);
    objc_msgSend(v8, sel_setBounds_);

    v6 += 48;
    ++v7;
    v3 = v14;
    v9 = v12 == v14;
    v2 = v13;
    if (v9)
      goto LABEL_21;
  }
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  __break(1u);
LABEL_25:
  __break(1u);
}

void sub_1DD2C4FF4()
{
  char *v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  id v14;
  void *v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  NSObject *v27;
  os_log_type_t v28;
  uint8_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  BOOL v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  void **v40;
  void *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;

  v2 = *(_QWORD *)&v0[OBJC_IVAR____TtC11EmojiPoster39EmojiForegroundGridLayersViewController_layoutProvider];
  if (!v2)
    goto LABEL_80;
  v3 = *(_QWORD *)(v2 + 56);
  if (!v3)
  {
LABEL_81:
    __break(1u);
    return;
  }
  v4 = v0;
  v5 = *(_QWORD *)(v3 + 16);
  v6 = (uint64_t *)&v0[OBJC_IVAR____TtC11EmojiPoster39EmojiForegroundGridLayersViewController_emojiImageViews];
  swift_beginAccess();
  if ((unint64_t)*v6 >> 62)
  {
    swift_bridgeObjectRetain();
    v7 = sub_1DD2FA0F0();
    swift_bridgeObjectRelease();
  }
  else
  {
    v7 = *(_QWORD *)((*v6 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v8 = *v6;
  v9 = (unint64_t)*v6 >> 62;
  if (v7 >= v5)
  {
    if (!v9)
    {
      if (v5 >= *(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10))
        return;
      goto LABEL_17;
    }
LABEL_58:
    swift_bridgeObjectRetain();
    v46 = sub_1DD2FA0F0();
    swift_bridgeObjectRelease();
    if (v5 >= v46)
      return;
LABEL_17:
    if ((unint64_t)*v6 >> 62)
    {
      swift_bridgeObjectRetain();
      v47 = sub_1DD2FA0F0();
      swift_bridgeObjectRelease();
      v18 = v47 - v5;
      if (!__OFSUB__(v47, v5))
      {
LABEL_19:
        v19 = sub_1DD2F9CD0();
        v20 = sub_1DD2F9F40();
        if (os_log_type_enabled(v19, v20))
        {
          v5 = 12;
          v21 = (uint8_t *)swift_slowAlloc();
          *(_DWORD *)v21 = 134217984;
          sub_1DD2F9FC4();
          _os_log_impl(&dword_1DD2AD000, v19, v20, "[updateEmojiViews] removing %ld emoji views", v21, 0xCu);
          MEMORY[0x1DF0D80DC](v21, -1, -1);
        }

        if (!((unint64_t)*v6 >> 62))
        {
          v22 = *(_QWORD *)((*v6 & 0xFFFFFFFFFFFFF8) + 0x10);
          v23 = v22 - v18;
          if (!__OFSUB__(v22, v18))
            goto LABEL_23;
          goto LABEL_65;
        }
LABEL_63:
        swift_bridgeObjectRetain();
        v48 = sub_1DD2FA0F0();
        swift_bridgeObjectRelease();
        v23 = v48 - v18;
        if (!__OFSUB__(v48, v18))
        {
LABEL_23:
          if (!((unint64_t)*v6 >> 62))
          {
            v24 = *(_QWORD *)((*v6 & 0xFFFFFFFFFFFFF8) + 0x10);
            if (v24 >= v23)
              goto LABEL_25;
            goto LABEL_67;
          }
LABEL_66:
          swift_bridgeObjectRetain();
          v24 = sub_1DD2FA0F0();
          swift_bridgeObjectRelease();
          if (v24 >= v23)
          {
LABEL_25:
            v5 = *v6;
            v1 = (unint64_t)*v6 >> 62;
            if (!v1)
            {
              v25 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
              swift_bridgeObjectRetain();
              if (v25 >= v23)
                goto LABEL_27;
              goto LABEL_69;
            }
LABEL_68:
            swift_bridgeObjectRetain_n();
            v49 = sub_1DD2FA0F0();
            swift_bridgeObjectRelease();
            if (v49 >= v23)
            {
LABEL_27:
              if ((v23 & 0x8000000000000000) == 0)
              {
                if (v1)
                {
                  swift_bridgeObjectRetain();
                  v26 = sub_1DD2FA0F0();
                  swift_bridgeObjectRelease();
                }
                else
                {
                  v26 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
                }
                if (v26 >= v24)
                {
                  if ((v5 & 0xC000000000000001) != 0 && v23 != v24)
                  {
                    if (v23 >= (unint64_t)v24)
                    {
LABEL_77:
                      __break(1u);
                      goto LABEL_78;
                    }
                    sub_1DD2C6518();
                    v30 = v23;
                    do
                    {
                      v31 = v30 + 1;
                      sub_1DD2FA03C();
                      v30 = v31;
                    }
                    while (v24 != v31);
                  }
                  if (v1)
                  {
                    swift_bridgeObjectRetain();
                    sub_1DD2FA0FC();
                    v32 = v36;
                    v23 = v37;
                    v39 = v38;
                    swift_bridgeObjectRelease_n();
                    v39 >>= 1;
                    v33 = __OFSUB__(v39, v23);
                    v35 = v39 - v23;
                    v34 = (v35 < 0) ^ v33 | (v35 == 0);
                    if (!v35)
                      goto LABEL_48;
                  }
                  else
                  {
                    v32 = (v5 & 0xFFFFFFFFFFFFFF8) + 32;
                    v33 = __OFSUB__(v24, v23);
                    v35 = v24 - v23;
                    v34 = (v35 < 0) ^ v33 | (v35 == 0);
                    if (!v35)
                      goto LABEL_48;
                  }
                  if (v34)
                  {
LABEL_78:
                    __break(1u);
LABEL_79:
                    __break(1u);
LABEL_80:
                    __break(1u);
                    goto LABEL_81;
                  }
                  swift_unknownObjectRetain();
                  v40 = (void **)(v32 + 8 * v23);
                  do
                  {
                    v41 = *v40++;
                    objc_msgSend(v41, sel_removeFromSuperview);
                    --v35;
                  }
                  while (v35);
                  swift_unknownObjectRelease();
LABEL_48:
                  if (!((unint64_t)*v6 >> 62))
                  {
                    v42 = *(_QWORD *)((*v6 & 0xFFFFFFFFFFFFF8) + 0x10);
                    v43 = v42 - v18;
                    if (!__OFSUB__(v42, v18))
                      goto LABEL_50;
                    goto LABEL_74;
                  }
LABEL_72:
                  swift_bridgeObjectRetain();
                  v50 = sub_1DD2FA0F0();
                  swift_bridgeObjectRelease();
                  v43 = v50 - v18;
                  if (!__OFSUB__(v50, v18))
                  {
LABEL_50:
                    if (!((unint64_t)*v6 >> 62))
                    {
                      v44 = *(_QWORD *)((*v6 & 0xFFFFFFFFFFFFF8) + 0x10);
                      if (v44 >= v43)
                      {
LABEL_52:
                        swift_beginAccess();
                        sub_1DD2D35F0(v43, v44);
                        swift_endAccess();
                        swift_unknownObjectRelease();
                        return;
                      }
                      goto LABEL_76;
                    }
LABEL_75:
                    swift_bridgeObjectRetain();
                    v44 = sub_1DD2FA0F0();
                    swift_bridgeObjectRelease();
                    if (v44 >= v43)
                      goto LABEL_52;
LABEL_76:
                    __break(1u);
                    goto LABEL_77;
                  }
LABEL_74:
                  __break(1u);
                  goto LABEL_75;
                }
LABEL_71:
                __break(1u);
                goto LABEL_72;
              }
LABEL_70:
              __break(1u);
              goto LABEL_71;
            }
LABEL_69:
            __break(1u);
            goto LABEL_70;
          }
LABEL_67:
          __break(1u);
          goto LABEL_68;
        }
LABEL_65:
        __break(1u);
        goto LABEL_66;
      }
    }
    else
    {
      v17 = *(_QWORD *)((*v6 & 0xFFFFFFFFFFFFF8) + 0x10);
      v18 = v17 - v5;
      if (!__OFSUB__(v17, v5))
        goto LABEL_19;
    }
    __break(1u);
    goto LABEL_63;
  }
  if (v9)
  {
    swift_bridgeObjectRetain();
    v45 = sub_1DD2FA0F0();
    swift_bridgeObjectRelease();
    v11 = v5 - v45;
    if (!__OFSUB__(v5, v45))
      goto LABEL_8;
    goto LABEL_57;
  }
  v10 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10);
  v11 = v5 - v10;
  if (__OFSUB__(v5, v10))
  {
LABEL_57:
    __break(1u);
    goto LABEL_58;
  }
LABEL_8:
  if (v11 >= 1)
  {
    v12 = v11;
    do
    {
      v13 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3890]), sel_init);
      objc_msgSend(v13, sel_setContentMode_, 1);
      v14 = objc_msgSend(v4, sel_view);
      if (!v14)
        goto LABEL_79;
      v15 = v14;
      objc_msgSend(v14, sel_addSubview_, v13);

      swift_beginAccess();
      v16 = v13;
      MEMORY[0x1DF0D7458]();
      if (*(_QWORD *)((*v6 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*v6 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        sub_1DD2F9F04();
      sub_1DD2F9F10();
      sub_1DD2F9EF8();
      swift_endAccess();

    }
    while (--v12);
  }
  v27 = sub_1DD2F9CD0();
  v28 = sub_1DD2F9F40();
  if (os_log_type_enabled(v27, v28))
  {
    v29 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v29 = 134217984;
    sub_1DD2F9FC4();
    _os_log_impl(&dword_1DD2AD000, v27, v28, "[updateEmojiViews] creating %ld new emoji views", v29, 0xCu);
    MEMORY[0x1DF0D80DC](v29, -1, -1);
  }

}

void sub_1DD2C56E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  id v13;
  _BYTE v14[128];
  _BYTE v15[136];

  v1 = v0 + OBJC_IVAR____TtC11EmojiPoster39EmojiForegroundGridLayersViewController_configuration;
  swift_beginAccess();
  sub_1DD2C37E8(v1, (uint64_t)v14);
  sub_1DD2C37E8((uint64_t)v14, (uint64_t)v15);
  if (sub_1DD2C61E4((uint64_t)v15) != 1)
  {
    v2 = OBJC_IVAR____TtC11EmojiPoster39EmojiForegroundGridLayersViewController_layoutProvider;
    v3 = (uint64_t *)(v0 + OBJC_IVAR____TtC11EmojiPoster39EmojiForegroundGridLayersViewController_emojiImageViews);
    v4 = (uint64_t *)(v0 + OBJC_IVAR____TtC11EmojiPoster39EmojiForegroundGridLayersViewController_emojiImages);
    swift_beginAccess();
    swift_beginAccess();
    v5 = *(_QWORD *)(v0 + v2);
    if (v5)
    {
      v6 = 0;
      v7 = 72;
      while (1)
      {
        v8 = *(_QWORD *)(v5 + 56);
        if (!v8)
          break;
        if (v6 >= *(_QWORD *)(v8 + 16))
          return;
        v9 = *(_QWORD *)(v8 + v7);
        v10 = *v3;
        if ((*v3 & 0xC000000000000001) != 0)
        {
          swift_bridgeObjectRetain();
          v11 = (id)MEMORY[0x1DF0D75E4](v6, v10);
          swift_bridgeObjectRelease();
        }
        else
        {
          if (v6 >= *(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10))
          {
            __break(1u);
LABEL_19:
            __break(1u);
LABEL_20:
            __break(1u);
            break;
          }
          v11 = *(id *)(v10 + 8 * v6 + 32);
        }
        v12 = *v4;
        if ((*v4 & 0xC000000000000001) != 0)
        {
          swift_bridgeObjectRetain();
          v13 = (id)MEMORY[0x1DF0D75E4](v9, v12);
          swift_bridgeObjectRelease();
        }
        else
        {
          if ((v9 & 0x8000000000000000) != 0)
            goto LABEL_19;
          if (v9 >= *(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10))
            goto LABEL_20;
          v13 = *(id *)(v12 + 8 * v9 + 32);
        }
        objc_msgSend(v11, sel_setImage_, v13);

        ++v6;
        v5 = *(_QWORD *)(v0 + v2);
        v7 += 48;
        if (!v5)
          goto LABEL_22;
      }
      __break(1u);
    }
LABEL_22:
    __break(1u);
  }
}

void sub_1DD2C58C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  _QWORD *v10;
  uint64_t v11[3];
  _QWORD v12[16];
  _QWORD v13[16];
  _BYTE v14[128];
  _BYTE v15[112];

  v1 = v0;
  v2 = v0 + OBJC_IVAR____TtC11EmojiPoster39EmojiForegroundGridLayersViewController_configuration;
  swift_beginAccess();
  sub_1DD2C37E8(v2, (uint64_t)v14);
  sub_1DD2C37E8((uint64_t)v14, (uint64_t)v15);
  if (sub_1DD2C61E4((uint64_t)v15) != 1)
  {
    sub_1DD2C37E8((uint64_t)v14, (uint64_t)v12);
    sub_1DD2C37E8((uint64_t)v14, (uint64_t)v13);
    sub_1DD2BFA24(v13);
    sub_1DD2BFA24(v12);
    v3 = sub_1DD2F9CD0();
    v4 = sub_1DD2F9F40();
    if (os_log_type_enabled(v3, v4))
    {
      v5 = (uint8_t *)swift_slowAlloc();
      v6 = swift_slowAlloc();
      *(_DWORD *)v5 = 136315138;
      v11[0] = v6;
      swift_bridgeObjectRetain();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EDB61500);
      sub_1DD2C64CC();
      v7 = sub_1DD2F9D90();
      v9 = v8;
      swift_bridgeObjectRelease();
      sub_1DD2EF110(v7, v9, v11);
      sub_1DD2F9FC4();
      swift_bridgeObjectRelease();
      sub_1DD2C3968((uint64_t)v14, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1DD2C39CC);
      sub_1DD2C3968((uint64_t)v14, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1DD2C39CC);
      _os_log_impl(&dword_1DD2AD000, v3, v4, "Updating for changed emoji: %s", v5, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1DF0D80DC](v6, -1, -1);
      MEMORY[0x1DF0D80DC](v5, -1, -1);

    }
    else
    {

      sub_1DD2C3968((uint64_t)v14, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1DD2C39CC);
      sub_1DD2C3968((uint64_t)v14, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1DD2C39CC);
    }
    v10 = (_QWORD *)(v1 + OBJC_IVAR____TtC11EmojiPoster39EmojiForegroundGridLayersViewController_emojiImages);
    swift_beginAccess();
    *v10 = MEMORY[0x1E0DEE9D8];
    swift_bridgeObjectRelease();
    sub_1DD2C465C();
    sub_1DD2C4FF4();
    sub_1DD2C56E0();
  }
}

id EmojiForegroundGridLayersViewController.__allocating_init(nibName:bundle:)(uint64_t a1, uint64_t a2, void *a3)
{
  objc_class *v3;
  objc_class *v4;
  void *v6;
  id v7;

  v4 = v3;
  if (a2)
  {
    v6 = (void *)sub_1DD2F9DB4();
    swift_bridgeObjectRelease();
  }
  else
  {
    v6 = 0;
  }
  v7 = objc_msgSend(objc_allocWithZone(v4), sel_initWithNibName_bundle_, v6, a3);

  return v7;
}

void EmojiForegroundGridLayersViewController.init(nibName:bundle:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id EmojiForegroundGridLayersViewController.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for EmojiForegroundGridLayersViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1DD2C5CF8@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  _BYTE v5[128];

  v3 = *v1 + OBJC_IVAR____TtC11EmojiPoster39EmojiForegroundGridLayersViewController_configuration;
  swift_beginAccess();
  sub_1DD2C37E8(v3, (uint64_t)v5);
  sub_1DD2C37E8((uint64_t)v5, a1);
  return sub_1DD2C3968((uint64_t)v5, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1DD2C3830);
}

uint64_t sub_1DD2C5D68(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE v5[128];
  _BYTE v6[128];
  _BYTE v7[128];
  _BYTE v8[128];

  v2 = *v1;
  sub_1DD2C37E8(a1, (uint64_t)v6);
  v3 = v2 + OBJC_IVAR____TtC11EmojiPoster39EmojiForegroundGridLayersViewController_configuration;
  swift_beginAccess();
  sub_1DD2C37E8(v3, (uint64_t)v7);
  sub_1DD2C37E8(v3, (uint64_t)v8);
  sub_1DD2C37E8((uint64_t)v6, v3);
  sub_1DD2C3968((uint64_t)v7, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1DD2C3830);
  sub_1DD2C3968((uint64_t)v8, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1DD2C39CC);
  sub_1DD2C37E8((uint64_t)v7, (uint64_t)v5);
  sub_1DD2C3268((uint64_t)v5);
  return sub_1DD2C3968((uint64_t)v7, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1DD2C39CC);
}

void (*sub_1DD2C5E24(_QWORD *a1))(_QWORD *a1)
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1DD2C3A54(v2);
  return sub_1DD2C5E6C;
}

void sub_1DD2C5E6C(_QWORD *a1)
{
  void *v1;

  v1 = (void *)*a1;
  (*(void (**)(_QWORD))(*a1 + 32))(*a1);
  free(v1);
}

double sub_1DD2C5E98()
{
  _QWORD *v0;
  uint64_t v1;

  v1 = *v0 + OBJC_IVAR____TtC11EmojiPoster39EmojiForegroundGridLayersViewController_wakeProgress;
  swift_beginAccess();
  return *(double *)v1;
}

void sub_1DD2C5EE0(uint64_t a1, uint64_t a2, double a3)
{
  sub_1DD2C5F8C(a3, a1, a2, &OBJC_IVAR____TtC11EmojiPoster39EmojiForegroundGridLayersViewController_wakeProgress);
}

uint64_t (*sub_1DD2C5EEC(uint64_t a1))()
{
  _QWORD *v1;

  *(_QWORD *)(a1 + 24) = *v1;
  swift_beginAccess();
  return sub_1DD2C3D00;
}

double sub_1DD2C5F38()
{
  _QWORD *v0;
  uint64_t v1;

  v1 = *v0 + OBJC_IVAR____TtC11EmojiPoster39EmojiForegroundGridLayersViewController_unlockProgress;
  swift_beginAccess();
  return *(double *)v1;
}

void sub_1DD2C5F80(uint64_t a1, uint64_t a2, double a3)
{
  sub_1DD2C5F8C(a3, a1, a2, &OBJC_IVAR____TtC11EmojiPoster39EmojiForegroundGridLayersViewController_unlockProgress);
}

void sub_1DD2C5F8C(double a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  _QWORD *v4;
  double *v6;

  v6 = (double *)(*v4 + *a4);
  swift_beginAccess();
  *v6 = a1;
  sub_1DD2C4D70();
}

uint64_t (*sub_1DD2C5FE0(uint64_t a1))()
{
  _QWORD *v1;

  *(_QWORD *)(a1 + 24) = *v1;
  swift_beginAccess();
  return sub_1DD2C3D00;
}

id sub_1DD2C6030(uint64_t a1)
{
  void *v1;
  char *v3;
  char *v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  objc_super v10;
  _OWORD v11[8];

  v3 = v1;
  sub_1DD2F9CDC();
  v4 = &v3[OBJC_IVAR____TtC11EmojiPoster39EmojiForegroundGridLayersViewController_configuredSize];
  *(_QWORD *)v4 = 0;
  *((_QWORD *)v4 + 1) = 0;
  v4[16] = 1;
  v5 = (uint64_t)&v3[OBJC_IVAR____TtC11EmojiPoster39EmojiForegroundGridLayersViewController_configuration];
  sub_1DD2C618C(v11);
  sub_1DD2C37E8((uint64_t)v11, v5);
  *(_QWORD *)&v3[OBJC_IVAR____TtC11EmojiPoster39EmojiForegroundGridLayersViewController_layoutProvider] = 0;
  v6 = &v3[OBJC_IVAR____TtC11EmojiPoster39EmojiForegroundGridLayersViewController_numberOfRows];
  *(_QWORD *)v6 = 0;
  v6[8] = 1;
  v7 = &v3[OBJC_IVAR____TtC11EmojiPoster39EmojiForegroundGridLayersViewController_numberOfItemsInRow];
  *(_QWORD *)v7 = 0;
  v7[8] = 1;
  v8 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)&v3[OBJC_IVAR____TtC11EmojiPoster39EmojiForegroundGridLayersViewController_emojiImageViews] = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)&v3[OBJC_IVAR____TtC11EmojiPoster39EmojiForegroundGridLayersViewController_emojiImages] = v8;
  *(_QWORD *)&v3[OBJC_IVAR____TtC11EmojiPoster39EmojiForegroundGridLayersViewController_wakeProgress] = 0x3FF0000000000000;
  *(_QWORD *)&v3[OBJC_IVAR____TtC11EmojiPoster39EmojiForegroundGridLayersViewController_unlockProgress] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC11EmojiPoster39EmojiForegroundGridLayersViewController_emojiRenderer] = a1;
  swift_retain();

  v10.receiver = v3;
  v10.super_class = (Class)type metadata accessor for EmojiForegroundGridLayersViewController();
  return objc_msgSendSuper2(&v10, sel_initWithNibName_bundle_, 0, 0);
}

double sub_1DD2C618C(_OWORD *a1)
{
  double result;

  result = 0.0;
  *(_OWORD *)((char *)a1 + 105) = 0u;
  a1[5] = 0u;
  a1[6] = 0u;
  a1[3] = 0u;
  a1[4] = 0u;
  a1[1] = 0u;
  a1[2] = 0u;
  *a1 = 0u;
  return result;
}

uint64_t type metadata accessor for EmojiForegroundGridLayersViewController()
{
  uint64_t result;

  result = qword_1EDB60F20;
  if (!qword_1EDB60F20)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1DD2C61E4(uint64_t a1)
{
  unint64_t v1;

  v1 = *(_QWORD *)(a1 + 112);
  if (v1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  return (v1 + 1);
}

double sub_1DD2C6204@<D0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return keypath_get_4Tm(a1, &OBJC_IVAR____TtC11EmojiPoster39EmojiForegroundGridLayersViewController_wakeProgress, a2);
}

void sub_1DD2C6210(uint64_t *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  keypath_set_5Tm(a1, a2, a3, a4, &OBJC_IVAR____TtC11EmojiPoster39EmojiForegroundGridLayersViewController_wakeProgress);
}

double sub_1DD2C621C@<D0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return keypath_get_4Tm(a1, &OBJC_IVAR____TtC11EmojiPoster39EmojiForegroundGridLayersViewController_unlockProgress, a2);
}

double keypath_get_4Tm@<D0>(_QWORD *a1@<X0>, _QWORD *a2@<X3>, _QWORD *a3@<X8>)
{
  double *v4;
  double result;

  v4 = (double *)(*a1 + *a2);
  swift_beginAccess();
  result = *v4;
  *a3 = *(_QWORD *)v4;
  return result;
}

void sub_1DD2C6274(uint64_t *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  keypath_set_5Tm(a1, a2, a3, a4, &OBJC_IVAR____TtC11EmojiPoster39EmojiForegroundGridLayersViewController_unlockProgress);
}

void keypath_set_5Tm(uint64_t *a1, _QWORD *a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  uint64_t v5;
  _QWORD *v6;

  v5 = *a1;
  v6 = (_QWORD *)(*a2 + *a5);
  swift_beginAccess();
  *v6 = v5;
  sub_1DD2C4D70();
}

uint64_t sub_1DD2C62D4()
{
  return type metadata accessor for EmojiForegroundGridLayersViewController();
}

uint64_t sub_1DD2C62DC()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1DD2F9CE8();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for EmojiForegroundGridLayersViewController()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of EmojiForegroundGridLayersViewController.setDeviceInterfaceOrientation(_:animated:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xD8))();
}

uint64_t dispatch thunk of EmojiForegroundGridLayersViewController.configuration.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xE0))();
}

uint64_t dispatch thunk of EmojiForegroundGridLayersViewController.configuration.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xE8))();
}

uint64_t dispatch thunk of EmojiForegroundGridLayersViewController.configuration.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xF0))();
}

uint64_t dispatch thunk of EmojiForegroundGridLayersViewController.wakeProgress.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x170))();
}

uint64_t dispatch thunk of EmojiForegroundGridLayersViewController.wakeProgress.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x178))();
}

uint64_t dispatch thunk of EmojiForegroundGridLayersViewController.wakeProgress.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x180))();
}

uint64_t dispatch thunk of EmojiForegroundGridLayersViewController.unlockProgress.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x188))();
}

uint64_t dispatch thunk of EmojiForegroundGridLayersViewController.unlockProgress.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x190))();
}

uint64_t dispatch thunk of EmojiForegroundGridLayersViewController.unlockProgress.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x198))();
}

uint64_t dispatch thunk of EmojiForegroundGridLayersViewController.__allocating_init(emojiRenderer:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 416))();
}

unint64_t sub_1DD2C64CC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EDB616A8;
  if (!qword_1EDB616A8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EDB61500);
    result = MEMORY[0x1DF0D8040](MEMORY[0x1E0DEAF20], v1);
    atomic_store(result, (unint64_t *)&qword_1EDB616A8);
  }
  return result;
}

unint64_t sub_1DD2C6518()
{
  unint64_t result;

  result = qword_1EDB61A30;
  if (!qword_1EDB61A30)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EDB61A30);
  }
  return result;
}

uint64_t sub_1DD2C6554()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_1DD2C6578()
{
  uint64_t v0;

  sub_1DD2CB540(*(double *)(v0 + 32), *(double *)(v0 + 40));
}

uint64_t sub_1DD2C6584()
{
  return swift_deallocObject();
}

uint64_t sub_1DD2C6594(uint64_t a1)
{
  uint64_t v1;

  return sub_1DD2CB708(a1, *(uint64_t (**)(void))(v1 + 16));
}

uint64_t sub_1DD2C65A4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  float64x2_t *v3;
  float64x2_t *v4;
  uint64_t v5;
  char v6;
  BOOL v8;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != *(_QWORD *)(a2 + 16))
    return 0;
  if (!v2 || a1 == a2)
    return 1;
  v3 = (float64x2_t *)(a1 + 32);
  v4 = (float64x2_t *)(a2 + 32);
  v5 = v2 - 1;
  do
  {
    v6 = vminv_u16((uint16x4_t)vcltz_s16(vshl_n_s16(vmovn_s32(vuzp1q_s32((int32x4_t)vceqq_f64(*v3, *v4), (int32x4_t)vceqq_f64(v3[1], v4[1]))), 0xFuLL)));
    v8 = v5-- != 0;
    if ((v6 & 1) == 0)
      break;
    v3 += 2;
    v4 += 2;
  }
  while (v8);
  return v6 & 1;
}

BOOL sub_1DD2C6628(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  double *v3;
  double *v4;
  uint64_t v5;
  _BOOL8 result;
  double v7;
  double v8;
  double v9;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != *(_QWORD *)(a2 + 16))
    return 0;
  if (!v2 || a1 == a2)
    return 1;
  if (*(double *)(a1 + 32) != *(double *)(a2 + 32))
    return 0;
  v3 = (double *)(a1 + 40);
  v4 = (double *)(a2 + 40);
  v5 = v2 - 1;
  do
  {
    result = v5 == 0;
    if (!v5)
      break;
    v7 = *v3++;
    v8 = v7;
    v9 = *v4++;
    --v5;
  }
  while (v8 == v9);
  return result;
}

uint64_t sub_1DD2C6694(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  BOOL v5;
  char v6;
  uint64_t result;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *i;
  BOOL v11;

  v2 = a1[2];
  if (v2 != a2[2])
    return 0;
  if (!v2 || a1 == a2)
    return 1;
  v5 = a1[4] == a2[4] && a1[5] == a2[5];
  if (v5 || (v6 = sub_1DD2FA210(), result = 0, (v6 & 1) != 0))
  {
    v8 = v2 - 1;
    if (!v8)
      return 1;
    v9 = a1 + 7;
    for (i = a2 + 7; ; i += 2)
    {
      v11 = *(v9 - 1) == *(i - 1) && *v9 == *i;
      if (!v11 && (sub_1DD2FA210() & 1) == 0)
        break;
      v9 += 2;
      if (!--v8)
        return 1;
    }
    return 0;
  }
  return result;
}

void sub_1DD2C6758(uint64_t a1, char a2)
{
  char *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  char *v7;
  char isEscapingClosureAtFileLocation;
  _QWORD v9[6];

  *(_QWORD *)&v2[OBJC_IVAR____TtC11EmojiPoster43EmojiForegroundCircularLayersViewController_deviceOrientation] = a1;
  if ((a2 & 1) != 0)
  {
    sub_1DD2C7B3C();
  }
  else
  {
    v3 = (void *)objc_opt_self();
    v4 = swift_allocObject();
    *(_QWORD *)(v4 + 16) = v2;
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = sub_1DD2C68D8;
    *(_QWORD *)(v5 + 24) = v4;
    v9[4] = sub_1DD2C6908;
    v9[5] = v5;
    v9[0] = MEMORY[0x1E0C809B0];
    v9[1] = 1107296256;
    v9[2] = sub_1DD2C30F0;
    v9[3] = &block_descriptor_0;
    v6 = _Block_copy(v9);
    v7 = v2;
    swift_retain();
    swift_release();
    objc_msgSend(v3, sel_performWithoutAnimation_, v6);
    _Block_release(v6);
    isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
    swift_release();
    swift_release();
    if ((isEscapingClosureAtFileLocation & 1) != 0)
      __break(1u);
  }
}

uint64_t sub_1DD2C68B4()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_1DD2C68D8()
{
  sub_1DD2C7B3C();
}

uint64_t sub_1DD2C68F8()
{
  return swift_deallocObject();
}

uint64_t sub_1DD2C6908()
{
  uint64_t v0;

  return sub_1DD2C30A0(*(uint64_t (**)(void))(v0 + 16));
}

uint64_t block_copy_helper_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_0()
{
  return swift_release();
}

uint64_t sub_1DD2C6928@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  _BYTE v5[128];

  v3 = *a1 + OBJC_IVAR____TtC11EmojiPoster43EmojiForegroundCircularLayersViewController_configuration;
  swift_beginAccess();
  sub_1DD2C37E8(v3, (uint64_t)v5);
  sub_1DD2C37E8((uint64_t)v5, a2);
  return sub_1DD2C3968((uint64_t)v5, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1DD2C3830);
}

uint64_t sub_1DD2C6998(uint64_t a1)
{
  _BYTE v2[128];
  _BYTE v3[128];

  sub_1DD2C37E8(a1, (uint64_t)v3);
  sub_1DD2C37E8((uint64_t)v3, (uint64_t)v2);
  sub_1DD2C3968((uint64_t)v3, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1DD2C3830);
  return sub_1DD2C6A60((uint64_t)v2);
}

uint64_t sub_1DD2C69F4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  _BYTE v5[128];

  v3 = v1 + OBJC_IVAR____TtC11EmojiPoster43EmojiForegroundCircularLayersViewController_configuration;
  swift_beginAccess();
  sub_1DD2C37E8(v3, (uint64_t)v5);
  sub_1DD2C37E8((uint64_t)v5, a1);
  return sub_1DD2C3968((uint64_t)v5, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1DD2C3830);
}

uint64_t sub_1DD2C6A60(uint64_t a1)
{
  void *v1;
  uint64_t v2;
  char v3;
  _QWORD *v5[16];
  _QWORD v6[16];
  _BYTE v7[128];
  _BYTE v8[128];
  _BYTE v9[128];
  _BYTE v10[128];
  _BYTE v11[112];
  _QWORD *v12;

  sub_1DD2C37E8(a1, (uint64_t)v7);
  v2 = (uint64_t)v1 + OBJC_IVAR____TtC11EmojiPoster43EmojiForegroundCircularLayersViewController_configuration;
  swift_beginAccess();
  sub_1DD2C37E8(v2, (uint64_t)v8);
  sub_1DD2C37E8(v2, (uint64_t)v9);
  sub_1DD2C37E8((uint64_t)v7, v2);
  sub_1DD2C3968((uint64_t)v8, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1DD2C3830);
  sub_1DD2C3968((uint64_t)v9, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1DD2C39CC);
  sub_1DD2C37E8(v2, (uint64_t)v10);
  sub_1DD2C37E8((uint64_t)v10, (uint64_t)v11);
  if (sub_1DD2C61E4((uint64_t)v11) != 1)
  {
    sub_1DD2C37E8((uint64_t)v10, (uint64_t)v6);
    sub_1DD2BFA24(v6);
    if ((objc_msgSend(v1, sel_isViewLoaded) & 1) != 0)
    {
      sub_1DD2C37E8((uint64_t)v8, (uint64_t)v5);
      if (sub_1DD2C61E4((uint64_t)v5) == 1)
      {
        sub_1DD2C3968((uint64_t)v10, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1DD2C39CC);
LABEL_7:
        sub_1DD2C8660();
        sub_1DD2C7B3C();
        return sub_1DD2C3968((uint64_t)v8, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1DD2C39CC);
      }
      v3 = sub_1DD2C6694(v5[14], v12);
      sub_1DD2C3968((uint64_t)v10, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1DD2C39CC);
      if ((v3 & 1) == 0)
        goto LABEL_7;
    }
    else
    {
      sub_1DD2C3968((uint64_t)v10, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1DD2C39CC);
    }
  }
  return sub_1DD2C3968((uint64_t)v8, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1DD2C39CC);
}

void (*sub_1DD2C6BC8(_QWORD *a1))(void **a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = malloc(0x2A0uLL);
  *a1 = v3;
  v3[83] = v1;
  v4 = v1 + OBJC_IVAR____TtC11EmojiPoster43EmojiForegroundCircularLayersViewController_configuration;
  swift_beginAccess();
  sub_1DD2C37E8(v4, (uint64_t)v3);
  sub_1DD2C37E8((uint64_t)v3, (uint64_t)(v3 + 16));
  sub_1DD2C3968((uint64_t)v3, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1DD2C3830);
  return sub_1DD2C6C58;
}

void sub_1DD2C6C58(void **a1, char a2)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *a1;
  v3 = (uint64_t)*a1 + 128;
  v4 = (uint64_t)*a1 + 256;
  v5 = (uint64_t)*a1 + 384;
  if ((a2 & 1) != 0)
  {
    sub_1DD2C37E8((uint64_t)*a1 + 128, v5);
    sub_1DD2C37E8(v5, (uint64_t)v2 + 512);
    sub_1DD2C3968(v5, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1DD2C3830);
    sub_1DD2C6A60((uint64_t)v2 + 512);
    sub_1DD2C37E8(v3, v4);
    sub_1DD2C3968(v4, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1DD2C39CC);
  }
  else
  {
    sub_1DD2C37E8((uint64_t)*a1 + 128, v5);
    sub_1DD2C37E8(v5, v4);
    sub_1DD2C6A60(v4);
  }
  free(v2);
}

double sub_1DD2C6D14()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + OBJC_IVAR____TtC11EmojiPoster43EmojiForegroundCircularLayersViewController_wakeProgress;
  swift_beginAccess();
  return *(double *)v1;
}

void sub_1DD2C6D58(double a1)
{
  sub_1DD2C6E00(&OBJC_IVAR____TtC11EmojiPoster43EmojiForegroundCircularLayersViewController_wakeProgress, a1);
}

uint64_t (*sub_1DD2C6D64(uint64_t a1))()
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1DD2C6DAC;
}

double sub_1DD2C6DB0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + OBJC_IVAR____TtC11EmojiPoster43EmojiForegroundCircularLayersViewController_unlockProgress;
  swift_beginAccess();
  return *(double *)v1;
}

void sub_1DD2C6DF4(double a1)
{
  sub_1DD2C6E00(&OBJC_IVAR____TtC11EmojiPoster43EmojiForegroundCircularLayersViewController_unlockProgress, a1);
}

void sub_1DD2C6E00(_QWORD *a1, double a2)
{
  uint64_t v2;
  double *v4;

  v4 = (double *)(v2 + *a1);
  swift_beginAccess();
  *v4 = a2;
  sub_1DD2C7B3C();
}

uint64_t (*sub_1DD2C6E50(uint64_t a1))()
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1DD2C6DAC;
}

void sub_1DD2C6E98(uint64_t a1, char a2)
{
  swift_endAccess();
  if ((a2 & 1) == 0)
    sub_1DD2C7B3C();
}

id EmojiForegroundCircularLayersViewController.__allocating_init(emojiRenderer:)(uint64_t a1)
{
  objc_class *v1;
  id v3;
  id v4;

  v3 = objc_allocWithZone(v1);
  v4 = sub_1DD2C911C(a1);
  swift_release();
  return v4;
}

id EmojiForegroundCircularLayersViewController.init(emojiRenderer:)(uint64_t a1)
{
  id v1;

  v1 = sub_1DD2C911C(a1);
  swift_release();
  return v1;
}

id EmojiForegroundCircularLayersViewController.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

id EmojiForegroundCircularLayersViewController.init(coder:)(void *a1)
{
  void *v1;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  id v8;
  objc_super v10;
  _OWORD v11[8];

  v3 = v1;
  sub_1DD2F9CDC();
  *(_QWORD *)&v3[OBJC_IVAR____TtC11EmojiPoster43EmojiForegroundCircularLayersViewController_deviceOrientation] = 1;
  v3[OBJC_IVAR____TtC11EmojiPoster43EmojiForegroundCircularLayersViewController_shouldRotateEmojiWithDevice] = 0;
  v3[OBJC_IVAR____TtC11EmojiPoster43EmojiForegroundCircularLayersViewController_shouldRotateCenterEmojiWithDevice] = 1;
  v4 = (uint64_t)&v3[OBJC_IVAR____TtC11EmojiPoster43EmojiForegroundCircularLayersViewController_configuration];
  sub_1DD2C618C(v11);
  sub_1DD2C37E8((uint64_t)v11, v4);
  *(_QWORD *)&v3[OBJC_IVAR____TtC11EmojiPoster43EmojiForegroundCircularLayersViewController__layoutProvider] = 0;
  *(int64x2_t *)&v3[OBJC_IVAR____TtC11EmojiPoster43EmojiForegroundCircularLayersViewController_emojiSize] = vdupq_n_s64(0x4064000000000000uLL);
  v5 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)&v3[OBJC_IVAR____TtC11EmojiPoster43EmojiForegroundCircularLayersViewController_emojiImageViews] = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)&v3[OBJC_IVAR____TtC11EmojiPoster43EmojiForegroundCircularLayersViewController_emojiImages] = v5;
  *(_QWORD *)&v3[OBJC_IVAR____TtC11EmojiPoster43EmojiForegroundCircularLayersViewController_wakeProgress] = 0x3FF0000000000000;
  *(_QWORD *)&v3[OBJC_IVAR____TtC11EmojiPoster43EmojiForegroundCircularLayersViewController_unlockProgress] = 0;
  type metadata accessor for EmojiRenderer();
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = 10;
  v7 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C99D38]), sel_init);
  *(_QWORD *)(v6 + 24) = v7;
  objc_msgSend(v7, sel_setCountLimit_, 10);
  *(_QWORD *)&v3[OBJC_IVAR____TtC11EmojiPoster43EmojiForegroundCircularLayersViewController_emojiRenderer] = v6;

  v10.receiver = v3;
  v10.super_class = (Class)type metadata accessor for EmojiForegroundCircularLayersViewController();
  v8 = objc_msgSendSuper2(&v10, sel_initWithCoder_, a1);

  return v8;
}

id sub_1DD2C7150()
{
  void *v0;
  id result;
  void *v2;
  void *v3;
  id v4;
  objc_super v5;

  v5.receiver = v0;
  v5.super_class = (Class)type metadata accessor for EmojiForegroundCircularLayersViewController();
  objc_msgSendSuper2(&v5, sel_viewDidLoad);
  result = objc_msgSend(v0, sel_view);
  if (result)
  {
    v2 = result;
    objc_msgSend(result, sel_setClipsToBounds_, 1);

    result = objc_msgSend(v0, sel_view);
    if (result)
    {
      v3 = result;
      v4 = objc_msgSend((id)objc_opt_self(), sel_clearColor);
      objc_msgSend(v3, sel_setBackgroundColor_, v4);

      return (id)sub_1DD2C73A0();
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

void sub_1DD2C7264(char a1)
{
  void *v1;
  objc_super v3;

  v3.receiver = v1;
  v3.super_class = (Class)type metadata accessor for EmojiForegroundCircularLayersViewController();
  objc_msgSendSuper2(&v3, sel_viewIsAppearing_, a1 & 1);
  sub_1DD2C7760();
}

void sub_1DD2C7310()
{
  void *v0;
  objc_super v1;

  v1.receiver = v0;
  v1.super_class = (Class)type metadata accessor for EmojiForegroundCircularLayersViewController();
  objc_msgSendSuper2(&v1, sel_viewDidLayoutSubviews);
  sub_1DD2C7B3C();
}

uint64_t sub_1DD2C73A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  _QWORD *v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  void *v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  void *v20;
  id v21;
  void *v22;
  id v23;
  id v24;
  uint64_t v25;
  int64x2_t v26;
  void *v27;
  id v28;
  _QWORD *v29;
  uint64_t v30;
  _QWORD aBlock[6];
  _BYTE v32[128];
  _BYTE v33[112];
  uint64_t v34;

  v1 = v0;
  v2 = v0 + OBJC_IVAR____TtC11EmojiPoster43EmojiForegroundCircularLayersViewController_configuration;
  swift_beginAccess();
  sub_1DD2C37E8(v2, (uint64_t)v32);
  sub_1DD2C37E8((uint64_t)v32, (uint64_t)v33);
  result = sub_1DD2C61E4((uint64_t)v33);
  if ((_DWORD)result != 1)
  {
    result = v34;
    v4 = *(_QWORD *)(v34 + 16);
    if (v4)
    {
      v30 = OBJC_IVAR____TtC11EmojiPoster43EmojiForegroundCircularLayersViewController_emojiRenderer;
      v5 = (_QWORD *)(v1 + OBJC_IVAR____TtC11EmojiPoster43EmojiForegroundCircularLayersViewController_emojiImages);
      v6 = (uint64_t *)(swift_bridgeObjectRetain() + 40);
      v26 = vdupq_n_s64(0x4069000000000000uLL);
      v25 = v1;
      v29 = v5;
      while (1)
      {
        v7 = *(v6 - 1);
        v8 = *v6;
        v9 = *(_QWORD *)(v1 + v30);
        v10 = objc_allocWithZone(MEMORY[0x1E0CB3940]);
        swift_bridgeObjectRetain_n();
        swift_retain();
        v11 = (void *)sub_1DD2F9DB4();
        swift_bridgeObjectRelease();
        v12 = objc_msgSend(v10, sel_initWithString_, v11);

        v13 = objc_msgSend(*(id *)(v9 + 24), sel_objectForKey_, v12);
        if (v13)
        {
          v14 = v13;
          swift_release();
          swift_bridgeObjectRelease();
        }
        else
        {
          v28 = v12;
          v15 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3830]), sel_init);
          objc_msgSend(v15, sel_setOpaque_, 0);
          v27 = v15;
          v16 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3828]), sel_initWithSize_format_, v15, 200.0, 200.0);
          v17 = swift_allocObject();
          *(_QWORD *)(v17 + 16) = v7;
          *(_QWORD *)(v17 + 24) = v8;
          *(int64x2_t *)(v17 + 32) = v26;
          v18 = swift_allocObject();
          *(_QWORD *)(v18 + 16) = sub_1DD2C6578;
          *(_QWORD *)(v18 + 24) = v17;
          aBlock[4] = sub_1DD2C6594;
          aBlock[5] = v18;
          aBlock[0] = MEMORY[0x1E0C809B0];
          aBlock[1] = 1107296256;
          aBlock[2] = sub_1DD2CB738;
          aBlock[3] = &block_descriptor_16_0;
          v19 = _Block_copy(aBlock);
          swift_bridgeObjectRetain();
          swift_retain();
          swift_release();
          v20 = v16;
          v21 = objc_msgSend(v16, sel_imageWithActions_, v19);
          _Block_release(v19);
          LOBYTE(v19) = swift_isEscapingClosureAtFileLocation();
          result = swift_release();
          if ((v19 & 1) != 0)
          {
            __break(1u);
            return result;
          }
          v22 = *(void **)(v9 + 24);
          v14 = v21;
          v23 = v22;
          v12 = v28;
          objc_msgSend(v23, sel_setObject_forKey_, v14, v28);
          swift_release();
          swift_bridgeObjectRelease();
          swift_release();

          v1 = v25;
        }

        swift_beginAccess();
        v24 = v14;
        MEMORY[0x1DF0D7458]();
        if (*(_QWORD *)((*v29 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*v29 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_1DD2F9F04();
        v6 += 2;
        sub_1DD2F9F10();
        sub_1DD2F9EF8();
        swift_endAccess();

        if (!--v4)
          return swift_bridgeObjectRelease();
      }
    }
  }
  return result;
}

void sub_1DD2C7760()
{
  char *v0;
  char *v1;
  uint64_t v2;
  id v3;
  void *v4;
  unint64_t v5;
  uint64_t v6;
  char *v7;
  NSObject *v8;
  uint64_t v9;
  NSObject *v10;
  uint64_t v11;
  id v12;
  id v13;
  void *v14;
  NSObject *v15;
  double *v18;
  _QWORD v19[16];
  _BYTE v20[128];
  _BYTE v21[112];
  uint64_t v22;

  v1 = v0;
  v2 = (uint64_t)&v0[OBJC_IVAR____TtC11EmojiPoster43EmojiForegroundCircularLayersViewController_configuration];
  swift_beginAccess();
  sub_1DD2C37E8(v2, (uint64_t)v20);
  sub_1DD2C37E8((uint64_t)v20, (uint64_t)v21);
  if (sub_1DD2C61E4((uint64_t)v21) != 1)
  {
    sub_1DD2C37E8((uint64_t)v20, (uint64_t)v19);
    sub_1DD2BFA24(v19);
    v18 = sub_1DD2C8F14();
    swift_retain();
    v3 = objc_msgSend(v0, sel_view);
    if (v3)
    {
      v4 = v3;
      objc_msgSend(v3, sel_bounds);

      v5 = 0;
      v6 = 0;
      v7 = &v1[OBJC_IVAR____TtC11EmojiPoster43EmojiForegroundCircularLayersViewController_emojiImages];
      v8 = &v1[OBJC_IVAR____TtC11EmojiPoster43EmojiForegroundCircularLayersViewController_emojiImageViews];
      do
      {
        swift_beginAccess();
        v9 = 1;
        do
        {
          v10 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3890]), sel_init);
          v11 = *(_QWORD *)v7;
          if ((*(_QWORD *)v7 & 0xC000000000000001) != 0)
          {
            swift_bridgeObjectRetain();
            v12 = (id)MEMORY[0x1DF0D75E4](v5, v11);
            swift_bridgeObjectRelease();
          }
          else
          {
            if ((v5 & 0x8000000000000000) != 0)
            {
              __break(1u);
LABEL_27:
              __break(1u);
              goto LABEL_28;
            }
            if (v5 >= *(_QWORD *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10))
              goto LABEL_27;
            v12 = *(id *)(v11 + 8 * v5 + 32);
          }
          -[NSObject setImage:](v10, sel_setImage_, v12, v18);

          -[NSObject setContentMode:](v10, sel_setContentMode_, 1);
          v13 = objc_msgSend(v1, sel_view);
          if (!v13)
            goto LABEL_33;
          v14 = v13;
          objc_msgSend(v13, sel_insertSubview_atIndex_, v10, 0);

          swift_beginAccess();
          v15 = v10;
          MEMORY[0x1DF0D7458]();
          if (*(_QWORD *)(((uint64_t)v8->isa & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)(((uint64_t)v8->isa & 0xFFFFFFFFFFFFFF8)
                                                                                         + 0x18) >> 1)
            sub_1DD2F9F04();
          v10 = v8;
          sub_1DD2F9F10();
          sub_1DD2F9EF8();
          swift_endAccess();

          if (!v6)
            break;
        }
        while (6 * v6 > v9++);
        if (__OFADD__(v6++, 1))
        {
          __break(1u);
LABEL_32:
          __break(1u);
LABEL_33:
          __break(1u);
          goto LABEL_34;
        }
        if (__OFADD__(v5, 1))
          goto LABEL_32;
        if (v5 + 1 == *(_QWORD *)(v22 + 16))
          v5 = 0;
        else
          ++v5;
      }
      while (v6 < 9);
      sub_1DD2C3968((uint64_t)v20, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1DD2C39CC);
      v1 = v1;
      v10 = sub_1DD2F9CD0();
      LOBYTE(v7) = sub_1DD2F9F40();
      if (os_log_type_enabled(v10, (os_log_type_t)v7))
      {
        v5 = swift_slowAlloc();
        *(_DWORD *)v5 = 134217984;
        swift_beginAccess();
        if (!((unint64_t)v8->isa >> 62))
        {
LABEL_25:
          sub_1DD2F9FC4();

          _os_log_impl(&dword_1DD2AD000, v10, (os_log_type_t)v7, "[createEmojiViews] created %ld emoji views", (uint8_t *)v5, 0xCu);
          MEMORY[0x1DF0D80DC](v5, -1, -1);
          goto LABEL_29;
        }
LABEL_34:
        swift_bridgeObjectRetain();
        sub_1DD2FA0F0();
        swift_bridgeObjectRelease();
        goto LABEL_25;
      }
LABEL_28:

LABEL_29:
      swift_release();

    }
    else
    {
      __break(1u);
    }
  }
}

void sub_1DD2C7B3C()
{
  uint64_t v0;
  unint64_t *v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  id v11;
  void *v12;
  BOOL v13;
  unint64_t v14;
  double v15;
  unint64_t v16;
  CGFloat b;
  CGFloat a;
  CGFloat c;
  CGFloat d;
  CGFloat tx;
  CGFloat ty;
  double v23;
  id v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  unint64_t v28;
  uint64_t v29;
  unint64_t v30;
  double v31;
  CGAffineTransform v32;
  CGAffineTransform t2;
  CGAffineTransform t1;

  sub_1DD2C8F14();
  v1 = (unint64_t *)(v0
                          + OBJC_IVAR____TtC11EmojiPoster43EmojiForegroundCircularLayersViewController_emojiImageViews);
  swift_beginAccess();
  v2 = *v1;
  v30 = v2;
  if (!(v2 >> 62))
  {
    v3 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_retain();
    swift_bridgeObjectRetain();
    if (v3)
      goto LABEL_3;
LABEL_29:
    swift_release();
    swift_bridgeObjectRelease();
    return;
  }
LABEL_28:
  swift_retain();
  swift_bridgeObjectRetain();
  v3 = sub_1DD2FA0F0();
  if (!v3)
    goto LABEL_29;
LABEL_3:
  v29 = OBJC_IVAR____TtC11EmojiPoster43EmojiForegroundCircularLayersViewController_deviceOrientation;
  swift_beginAccess();
  swift_beginAccess();
  v4 = 0;
  v5 = 0;
  v6 = v30 + 32;
  v7 = 1;
  v8 = v3;
  while (1)
  {
    v9 = 0;
    v31 = 360.0 / (double)(6 * v4);
    v28 = v6 + 8 * v5;
    while (1)
    {
      v10 = v5 + v9;
      if ((v30 & 0xC000000000000001) != 0)
      {
        v11 = (id)MEMORY[0x1DF0D75E4](v5 + v9, v30);
      }
      else
      {
        if (v10 >= *(_QWORD *)((v30 & 0xFFFFFFFFFFFFFF8) + 0x10))
          goto LABEL_27;
        v11 = *(id *)(v28 + 8 * v9);
      }
      v12 = v11;
      v13 = __OFADD__(v10, 1);
      v14 = v10 + 1;
      if (v13)
      {
        __break(1u);
LABEL_26:
        __break(1u);
LABEL_27:
        __break(1u);
        goto LABEL_28;
      }
      v15 = 0.0;
      if (!(v4 | v9))
      {
        v16 = *(_QWORD *)(v0 + v29) - 2;
        if (v16 <= 2)
          v15 = dbl_1DD2FE208[v16];
      }
      CGAffineTransformMakeRotation(&t1, v15);
      a = t1.a;
      b = t1.b;
      c = t1.c;
      d = t1.d;
      tx = t1.tx;
      ty = t1.ty;
      v23 = 0.0;
      if (v4)
        v23 = v31 * (double)v9;
      objc_msgSend(v12, sel_setCenter_, sub_1DD2C8FE4(v4, v15 + v23));
      sub_1DD2C8F14();
      v24 = v12;
      objc_msgSend(v24, sel_bounds);
      objc_msgSend(v24, sel_setBounds_);

      if (v4)
      {
        CGAffineTransformMakeRotation(&t1, (360.0 - v31 * (double)v9) * -0.0174532925);
        v25 = *(_OWORD *)&t1.a;
        v26 = *(_OWORD *)&t1.c;
        v27 = *(_OWORD *)&t1.tx;
      }
      else
      {
        v27 = 0uLL;
        v25 = xmmword_1DD2FDFB0;
        v26 = xmmword_1DD2FE120;
      }
      *(_OWORD *)&t1.a = v25;
      *(_OWORD *)&t1.c = v26;
      *(_OWORD *)&t1.tx = v27;
      t2.a = a;
      t2.b = b;
      t2.c = c;
      t2.d = d;
      t2.tx = tx;
      t2.ty = ty;
      CGAffineTransformConcat(&v32, &t1, &t2);
      t1 = v32;
      objc_msgSend(v24, sel_setTransform_, &t1);

      if (__OFADD__(v9, 1))
        goto LABEL_26;
      if (v9 + 1 == v7)
        break;
      ++v9;
      if (v14 == v8)
        goto LABEL_29;
    }
    ++v4;
    v7 = 6 * v4;
    if ((unsigned __int128)(v4 * (__int128)6) >> 64 != (6 * v4) >> 63)
      break;
    if (v14 == v8)
      goto LABEL_29;
    v5 = v14;
    v6 = v30 + 32;
  }
  __break(1u);
}

void sub_1DD2C7F40()
{
  uint64_t v0;
  char *v1;
  uint64_t v2;
  char *v3;
  id v4;
  void *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  id v13;
  void *v14;
  id v15;
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  NSObject *v27;
  os_log_type_t v28;
  uint8_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  BOOL v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  void **v39;
  void *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v3 = v1;
  sub_1DD2C8F14();
  swift_retain();
  v4 = objc_msgSend(v1, sel_view);
  if (!v4)
    goto LABEL_79;
  v5 = v4;
  objc_msgSend(v4, sel_bounds);

  v6 = &v3[OBJC_IVAR____TtC11EmojiPoster43EmojiForegroundCircularLayersViewController_emojiImageViews];
  swift_beginAccess();
  if (*(_QWORD *)v6 >> 62)
  {
    swift_bridgeObjectRetain();
    v7 = sub_1DD2FA0F0();
    swift_bridgeObjectRelease();
  }
  else
  {
    v7 = *(_QWORD *)((*(_QWORD *)v6 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v8 = *(_QWORD *)v6;
  v9 = *(_QWORD *)v6 >> 62;
  if (v7 > 216)
  {
    if (!v9)
    {
      if (*(uint64_t *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10) < 218)
      {
LABEL_58:
        swift_release();
        return;
      }
LABEL_18:
      if (*(_QWORD *)v6 >> 62)
      {
        swift_bridgeObjectRetain();
        v45 = sub_1DD2FA0F0();
        swift_bridgeObjectRelease();
        v18 = v45 - 217;
        if (!__OFSUB__(v45, 217))
        {
LABEL_20:
          v19 = sub_1DD2F9CD0();
          v20 = sub_1DD2F9F40();
          if (os_log_type_enabled(v19, v20))
          {
            v0 = 12;
            v21 = (uint8_t *)swift_slowAlloc();
            *(_DWORD *)v21 = 134217984;
            sub_1DD2F9FC4();
            _os_log_impl(&dword_1DD2AD000, v19, v20, "[updateEmojiViews] removing %ld emoji views", v21, 0xCu);
            MEMORY[0x1DF0D80DC](v21, -1, -1);
          }

          if (!(*(_QWORD *)v6 >> 62))
          {
            v22 = *(_QWORD *)((*(_QWORD *)v6 & 0xFFFFFFFFFFFFF8) + 0x10);
            v23 = v22 - v18;
            if (!__OFSUB__(v22, v18))
              goto LABEL_24;
            goto LABEL_64;
          }
LABEL_62:
          swift_bridgeObjectRetain();
          v46 = sub_1DD2FA0F0();
          swift_bridgeObjectRelease();
          v23 = v46 - v18;
          if (!__OFSUB__(v46, v18))
          {
LABEL_24:
            if (!(*(_QWORD *)v6 >> 62))
            {
              v24 = *(_QWORD *)((*(_QWORD *)v6 & 0xFFFFFFFFFFFFF8) + 0x10);
              if (v24 >= v23)
                goto LABEL_26;
              goto LABEL_66;
            }
LABEL_65:
            swift_bridgeObjectRetain();
            v24 = sub_1DD2FA0F0();
            swift_bridgeObjectRelease();
            if (v24 >= v23)
            {
LABEL_26:
              v2 = *(_QWORD *)v6;
              v0 = *(_QWORD *)v6 >> 62;
              if (!v0)
              {
                v25 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
                swift_bridgeObjectRetain();
                if (v25 >= v23)
                  goto LABEL_28;
                goto LABEL_68;
              }
LABEL_67:
              swift_bridgeObjectRetain_n();
              v47 = sub_1DD2FA0F0();
              swift_bridgeObjectRelease();
              if (v47 >= v23)
              {
LABEL_28:
                if ((v23 & 0x8000000000000000) == 0)
                {
                  if (v0)
                  {
                    swift_bridgeObjectRetain();
                    v26 = sub_1DD2FA0F0();
                    swift_bridgeObjectRelease();
                  }
                  else
                  {
                    v26 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
                  }
                  if (v26 >= v24)
                  {
                    if ((v2 & 0xC000000000000001) != 0 && v23 != v24)
                    {
                      if (v23 >= (unint64_t)v24)
                      {
LABEL_76:
                        __break(1u);
                        goto LABEL_77;
                      }
                      sub_1DD2C6518();
                      v30 = v23;
                      do
                      {
                        v31 = v30 + 1;
                        sub_1DD2FA03C();
                        v30 = v31;
                      }
                      while (v24 != v31);
                    }
                    if (v0)
                    {
                      swift_bridgeObjectRetain();
                      sub_1DD2FA0FC();
                      v32 = v35;
                      v23 = v36;
                      v38 = v37;
                      swift_bridgeObjectRelease_n();
                      v38 >>= 1;
                      v34 = v38 - v23;
                      v33 = (uint64_t)v38 <= v23;
                      if (v38 == v23)
                        goto LABEL_49;
                    }
                    else
                    {
                      v32 = (v2 & 0xFFFFFFFFFFFFFF8) + 32;
                      v34 = v24 - v23;
                      v33 = v24 <= v23;
                      if (v24 == v23)
                        goto LABEL_49;
                    }
                    if (v33)
                    {
LABEL_77:
                      __break(1u);
LABEL_78:
                      __break(1u);
LABEL_79:
                      __break(1u);
                      return;
                    }
                    swift_unknownObjectRetain();
                    v39 = (void **)(v32 + 8 * v23);
                    do
                    {
                      v40 = *v39++;
                      objc_msgSend(v40, sel_removeFromSuperview);
                      --v34;
                    }
                    while (v34);
                    swift_unknownObjectRelease();
LABEL_49:
                    if (!(*(_QWORD *)v6 >> 62))
                    {
                      v41 = *(_QWORD *)((*(_QWORD *)v6 & 0xFFFFFFFFFFFFF8) + 0x10);
                      v42 = v41 - v18;
                      if (!__OFSUB__(v41, v18))
                        goto LABEL_51;
                      goto LABEL_73;
                    }
LABEL_71:
                    swift_bridgeObjectRetain();
                    v48 = sub_1DD2FA0F0();
                    swift_bridgeObjectRelease();
                    v42 = v48 - v18;
                    if (!__OFSUB__(v48, v18))
                    {
LABEL_51:
                      if (!(*(_QWORD *)v6 >> 62))
                      {
                        v43 = *(_QWORD *)((*(_QWORD *)v6 & 0xFFFFFFFFFFFFF8) + 0x10);
                        if (v43 >= v42)
                        {
LABEL_53:
                          swift_beginAccess();
                          sub_1DD2D35F0(v42, v43);
                          swift_endAccess();
                          swift_release();
                          swift_unknownObjectRelease();
                          return;
                        }
                        goto LABEL_75;
                      }
LABEL_74:
                      swift_bridgeObjectRetain();
                      v43 = sub_1DD2FA0F0();
                      swift_bridgeObjectRelease();
                      if (v43 >= v42)
                        goto LABEL_53;
LABEL_75:
                      __break(1u);
                      goto LABEL_76;
                    }
LABEL_73:
                    __break(1u);
                    goto LABEL_74;
                  }
LABEL_70:
                  __break(1u);
                  goto LABEL_71;
                }
LABEL_69:
                __break(1u);
                goto LABEL_70;
              }
LABEL_68:
              __break(1u);
              goto LABEL_69;
            }
LABEL_66:
            __break(1u);
            goto LABEL_67;
          }
LABEL_64:
          __break(1u);
          goto LABEL_65;
        }
      }
      else
      {
        v17 = *(_QWORD *)((*(_QWORD *)v6 & 0xFFFFFFFFFFFFF8) + 0x10);
        v18 = v17 - 217;
        if (!__OFSUB__(v17, 217))
          goto LABEL_20;
      }
      __break(1u);
      goto LABEL_62;
    }
LABEL_57:
    swift_bridgeObjectRetain();
    v44 = sub_1DD2FA0F0();
    swift_bridgeObjectRelease();
    if (v44 < 218)
      goto LABEL_58;
    goto LABEL_18;
  }
  if (v9)
  {
    swift_bridgeObjectRetain();
    v10 = sub_1DD2FA0F0();
    swift_bridgeObjectRelease();
  }
  else
  {
    v10 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  if (__OFSUB__(217, v10))
  {
    __break(1u);
    goto LABEL_57;
  }
  if (217 - v10 >= 1)
  {
    v11 = v10 - 217;
    do
    {
      v12 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3890]), sel_init);
      objc_msgSend(v12, sel_setContentMode_, 1);
      v13 = objc_msgSend(v3, sel_view);
      if (!v13)
        goto LABEL_78;
      v14 = v13;
      objc_msgSend(v13, sel_addSubview_, v12);

      swift_beginAccess();
      v15 = v12;
      MEMORY[0x1DF0D7458]();
      if (*(_QWORD *)((*(_QWORD *)v6 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*(_QWORD *)v6 & 0xFFFFFFFFFFFFFF8)
                                                                                  + 0x18) >> 1)
        sub_1DD2F9F04();
      sub_1DD2F9F10();
      sub_1DD2F9EF8();
      swift_endAccess();

    }
    while (!__CFADD__(v11++, 1));
  }
  v27 = sub_1DD2F9CD0();
  v28 = sub_1DD2F9F40();
  if (os_log_type_enabled(v27, v28))
  {
    v29 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v29 = 134217984;
    sub_1DD2F9FC4();
    _os_log_impl(&dword_1DD2AD000, v27, v28, "[updateEmojiViews] creating %ld new emoji views", v29, 0xCu);
    MEMORY[0x1DF0D80DC](v29, -1, -1);
  }
  swift_release();

}

void sub_1DD2C8660()
{
  char *v0;
  char *v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  char *v10;
  id v11;
  void *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  id v21;
  double *v24;
  uint64_t v25;
  _QWORD v26[16];
  _QWORD v27[16];
  uint64_t v28[16];
  _QWORD v29[16];
  _QWORD v30[16];
  _BYTE v31[128];
  _BYTE v32[112];

  v1 = v0;
  v2 = (uint64_t)&v0[OBJC_IVAR____TtC11EmojiPoster43EmojiForegroundCircularLayersViewController_configuration];
  swift_beginAccess();
  sub_1DD2C37E8(v2, (uint64_t)v31);
  sub_1DD2C37E8((uint64_t)v31, (uint64_t)v32);
  if (sub_1DD2C61E4((uint64_t)v32) == 1)
    return;
  sub_1DD2C37E8((uint64_t)v31, (uint64_t)v29);
  sub_1DD2C37E8((uint64_t)v31, (uint64_t)v30);
  sub_1DD2BFA24(v30);
  sub_1DD2BFA24(v29);
  v3 = sub_1DD2F9CD0();
  v4 = sub_1DD2F9F40();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc();
    v6 = swift_slowAlloc();
    v28[0] = v6;
    *(_DWORD *)v5 = 136315138;
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EDB61500);
    sub_1DD2C64CC();
    v7 = sub_1DD2F9D90();
    v9 = v8;
    swift_bridgeObjectRelease();
    v27[0] = sub_1DD2EF110(v7, v9, v28);
    sub_1DD2F9FC4();
    swift_bridgeObjectRelease();
    sub_1DD2C3968((uint64_t)v31, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1DD2C39CC);
    sub_1DD2C3968((uint64_t)v31, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1DD2C39CC);
    _os_log_impl(&dword_1DD2AD000, v3, v4, "Updating for changed emoji: %s", v5, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1DF0D80DC](v6, -1, -1);
    MEMORY[0x1DF0D80DC](v5, -1, -1);

  }
  else
  {

    sub_1DD2C3968((uint64_t)v31, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1DD2C39CC);
    sub_1DD2C3968((uint64_t)v31, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1DD2C39CC);
  }
  v10 = &v1[OBJC_IVAR____TtC11EmojiPoster43EmojiForegroundCircularLayersViewController_emojiImages];
  swift_beginAccess();
  *(_QWORD *)v10 = MEMORY[0x1E0DEE9D8];
  swift_bridgeObjectRelease();
  sub_1DD2C73A0();
  sub_1DD2C7F40();
  sub_1DD2C37E8(v2, (uint64_t)v27);
  sub_1DD2C37E8((uint64_t)v27, (uint64_t)v28);
  if (sub_1DD2C61E4((uint64_t)v28) == 1)
    return;
  sub_1DD2C37E8((uint64_t)v27, (uint64_t)v26);
  sub_1DD2BFA24(v26);
  v24 = sub_1DD2C8F14();
  swift_retain();
  v11 = objc_msgSend(v1, sel_view);
  if (!v11)
    goto LABEL_39;
  v12 = v11;
  objc_msgSend(v11, sel_bounds);

  v13 = 0;
  v14 = 0;
  v15 = 0;
  v16 = &v1[OBJC_IVAR____TtC11EmojiPoster43EmojiForegroundCircularLayersViewController_emojiImageViews];
  v25 = *(_QWORD *)(v28[14] + 16);
LABEL_8:
  swift_beginAccess();
  v17 = 1;
  while (1)
  {
    v18 = *(_QWORD *)v16;
    if ((*(_QWORD *)v16 & 0xC000000000000001) == 0)
      break;
    swift_bridgeObjectRetain();
    v19 = (id)MEMORY[0x1DF0D75E4](v14, v18);
    swift_bridgeObjectRelease();
LABEL_13:
    v20 = *(_QWORD *)v10;
    if ((*(_QWORD *)v10 & 0xC000000000000001) != 0)
    {
      swift_bridgeObjectRetain();
      v21 = (id)MEMORY[0x1DF0D75E4](v13, v20);
      swift_bridgeObjectRelease();
    }
    else
    {
      if ((v13 & 0x8000000000000000) != 0)
        goto LABEL_34;
      if (v13 >= *(_QWORD *)((v20 & 0xFFFFFFFFFFFFF8) + 0x10))
        goto LABEL_36;
      v21 = *(id *)(v20 + 8 * v13 + 32);
    }
    objc_msgSend(v19, sel_setImage_, v21, v24);

    if (v14 == 0x7FFFFFFFFFFFFFFFLL)
      goto LABEL_35;
    ++v14;
    if (v15)
    {
      if (6 * v15 > v17++)
        continue;
    }
    if (__OFADD__(v15++, 1))
      goto LABEL_37;
    if (__OFADD__(v13, 1))
      goto LABEL_38;
    if (v13 + 1 == v25)
      v13 = 0;
    else
      ++v13;
    if (v15 >= 9)
    {
      sub_1DD2C3968((uint64_t)v27, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1DD2C39CC);
      swift_release();
      return;
    }
    goto LABEL_8;
  }
  if ((v14 & 0x8000000000000000) == 0)
  {
    if (v14 >= *(_QWORD *)((v18 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_33;
    v19 = *(id *)(v18 + 8 * v14 + 32);
    goto LABEL_13;
  }
  __break(1u);
LABEL_33:
  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
LABEL_39:
  __break(1u);
}

id EmojiForegroundCircularLayersViewController.__allocating_init(nibName:bundle:)(uint64_t a1, uint64_t a2, void *a3)
{
  objc_class *v3;
  objc_class *v4;
  void *v6;
  id v7;

  v4 = v3;
  if (a2)
  {
    v6 = (void *)sub_1DD2F9DB4();
    swift_bridgeObjectRelease();
  }
  else
  {
    v6 = 0;
  }
  v7 = objc_msgSend(objc_allocWithZone(v4), sel_initWithNibName_bundle_, v6, a3);

  return v7;
}

void EmojiForegroundCircularLayersViewController.init(nibName:bundle:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id EmojiForegroundCircularLayersViewController.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for EmojiForegroundCircularLayersViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1DD2C8CA4@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  _BYTE v5[128];

  v3 = *v1 + OBJC_IVAR____TtC11EmojiPoster43EmojiForegroundCircularLayersViewController_configuration;
  swift_beginAccess();
  sub_1DD2C37E8(v3, (uint64_t)v5);
  sub_1DD2C37E8((uint64_t)v5, a1);
  return sub_1DD2C3968((uint64_t)v5, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1DD2C3830);
}

uint64_t sub_1DD2C8D14(uint64_t a1)
{
  return sub_1DD2C6A60(a1);
}

void (*sub_1DD2C8D34(_QWORD *a1))(_QWORD *a1)
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1DD2C6BC8(v2);
  return sub_1DD2C5E6C;
}

double sub_1DD2C8D7C()
{
  _QWORD *v0;
  uint64_t v1;

  v1 = *v0 + OBJC_IVAR____TtC11EmojiPoster43EmojiForegroundCircularLayersViewController_wakeProgress;
  swift_beginAccess();
  return *(double *)v1;
}

void sub_1DD2C8DC4(uint64_t a1, uint64_t a2, double a3)
{
  sub_1DD2C8E70(a3, a1, a2, &OBJC_IVAR____TtC11EmojiPoster43EmojiForegroundCircularLayersViewController_wakeProgress);
}

uint64_t (*sub_1DD2C8DD0(uint64_t a1))()
{
  _QWORD *v1;

  *(_QWORD *)(a1 + 24) = *v1;
  swift_beginAccess();
  return sub_1DD2C6DAC;
}

double sub_1DD2C8E1C()
{
  _QWORD *v0;
  uint64_t v1;

  v1 = *v0 + OBJC_IVAR____TtC11EmojiPoster43EmojiForegroundCircularLayersViewController_unlockProgress;
  swift_beginAccess();
  return *(double *)v1;
}

void sub_1DD2C8E64(uint64_t a1, uint64_t a2, double a3)
{
  sub_1DD2C8E70(a3, a1, a2, &OBJC_IVAR____TtC11EmojiPoster43EmojiForegroundCircularLayersViewController_unlockProgress);
}

void sub_1DD2C8E70(double a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  _QWORD *v4;
  double *v6;

  v6 = (double *)(*v4 + *a4);
  swift_beginAccess();
  *v6 = a1;
  sub_1DD2C7B3C();
}

uint64_t (*sub_1DD2C8EC4(uint64_t a1))()
{
  _QWORD *v1;

  *(_QWORD *)(a1 + 24) = *v1;
  swift_beginAccess();
  return sub_1DD2C6DAC;
}

double *sub_1DD2C8F14()
{
  char *v0;
  double *result;
  double *v2;
  double v3;
  double v4;
  double v5;
  double v6;
  uint64_t v7;
  BOOL v8;
  uint64_t v9;

  result = (double *)objc_msgSend(v0, sel_view);
  if (!result)
  {
    __break(1u);
LABEL_11:
    __break(1u);
    return result;
  }
  v2 = result;
  objc_msgSend(result, sel_bounds);
  v4 = v3;
  v6 = v5;

  v7 = OBJC_IVAR____TtC11EmojiPoster43EmojiForegroundCircularLayersViewController__layoutProvider;
  result = *(double **)&v0[OBJC_IVAR____TtC11EmojiPoster43EmojiForegroundCircularLayersViewController__layoutProvider];
  if (!result
    || (result[3] == v4 ? (v8 = result[4] == v6) : (v8 = 0),
        !v8
     && (*(_QWORD *)&v0[OBJC_IVAR____TtC11EmojiPoster43EmojiForegroundCircularLayersViewController__layoutProvider] = 0,
         swift_release(),
         (result = *(double **)&v0[v7]) == 0)))
  {
    type metadata accessor for CircularLayoutProvider();
    v9 = swift_allocObject();
    sub_1DD2D733C((char *)(v9 + 16));
    *(double *)(v9 + 24) = v4;
    *(double *)(v9 + 32) = v6;
    *(_QWORD *)&v0[v7] = v9;
    swift_release();
    result = *(double **)&v0[v7];
    if (!result)
      goto LABEL_11;
  }
  return result;
}

double sub_1DD2C8FE4(uint64_t a1, double a2)
{
  void *v2;
  id v5;
  void *v6;
  double v7;
  double MidX;
  double v9;
  double v10;
  double MidY;
  long double v12;
  double v13;
  long double v14;
  CGRect v16;
  CGRect v17;
  CGRect v18;
  CGRect v19;

  v5 = objc_msgSend(v2, sel_view);
  if (!v5)
    return 0.0;
  v6 = v5;
  sub_1DD2C8F14();
  v7 = sub_1DD2F9AC4(a1);
  swift_retain();
  objc_msgSend(v6, sel_bounds);
  MidX = CGRectGetMidX(v16);
  objc_msgSend(v6, sel_bounds);
  v9 = CGRectGetMidY(v17) - v7;
  objc_msgSend(v6, sel_bounds);
  v10 = CGRectGetMidX(v18);
  objc_msgSend(v6, sel_bounds);
  MidY = CGRectGetMidY(v19);
  swift_release();

  if (a2 > 0.0)
  {
    v12 = v9 - MidY;
    v13 = sqrt((MidX - v10) * (MidX - v10) + v12 * v12);
    v14 = atan2(v12, MidX - v10);
    return v10 + v13 * __sincos_stret(a2 * 0.0174532925 + v14).__cosval;
  }
  return MidX;
}

id sub_1DD2C911C(uint64_t a1)
{
  void *v1;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  objc_super v7;
  _OWORD v8[8];

  v3 = v1;
  sub_1DD2F9CDC();
  *(_QWORD *)&v3[OBJC_IVAR____TtC11EmojiPoster43EmojiForegroundCircularLayersViewController_deviceOrientation] = 1;
  v3[OBJC_IVAR____TtC11EmojiPoster43EmojiForegroundCircularLayersViewController_shouldRotateEmojiWithDevice] = 0;
  v3[OBJC_IVAR____TtC11EmojiPoster43EmojiForegroundCircularLayersViewController_shouldRotateCenterEmojiWithDevice] = 1;
  v4 = (uint64_t)&v3[OBJC_IVAR____TtC11EmojiPoster43EmojiForegroundCircularLayersViewController_configuration];
  sub_1DD2C618C(v8);
  sub_1DD2C37E8((uint64_t)v8, v4);
  *(_QWORD *)&v3[OBJC_IVAR____TtC11EmojiPoster43EmojiForegroundCircularLayersViewController__layoutProvider] = 0;
  *(int64x2_t *)&v3[OBJC_IVAR____TtC11EmojiPoster43EmojiForegroundCircularLayersViewController_emojiSize] = vdupq_n_s64(0x4064000000000000uLL);
  v5 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)&v3[OBJC_IVAR____TtC11EmojiPoster43EmojiForegroundCircularLayersViewController_emojiImageViews] = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)&v3[OBJC_IVAR____TtC11EmojiPoster43EmojiForegroundCircularLayersViewController_emojiImages] = v5;
  *(_QWORD *)&v3[OBJC_IVAR____TtC11EmojiPoster43EmojiForegroundCircularLayersViewController_wakeProgress] = 0x3FF0000000000000;
  *(_QWORD *)&v3[OBJC_IVAR____TtC11EmojiPoster43EmojiForegroundCircularLayersViewController_unlockProgress] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC11EmojiPoster43EmojiForegroundCircularLayersViewController_emojiRenderer] = a1;
  swift_retain();

  v7.receiver = v3;
  v7.super_class = (Class)type metadata accessor for EmojiForegroundCircularLayersViewController();
  return objc_msgSendSuper2(&v7, sel_initWithNibName_bundle_, 0, 0);
}

uint64_t type metadata accessor for EmojiForegroundCircularLayersViewController()
{
  uint64_t result;

  result = qword_1EDB616F0;
  if (!qword_1EDB616F0)
    return swift_getSingletonMetadata();
  return result;
}

double sub_1DD2C92C0@<D0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return keypath_get_4Tm(a1, &OBJC_IVAR____TtC11EmojiPoster43EmojiForegroundCircularLayersViewController_wakeProgress, a2);
}

void sub_1DD2C92CC(uint64_t *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  keypath_set_5Tm_0(a1, a2, a3, a4, &OBJC_IVAR____TtC11EmojiPoster43EmojiForegroundCircularLayersViewController_wakeProgress);
}

double sub_1DD2C92D8@<D0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return keypath_get_4Tm(a1, &OBJC_IVAR____TtC11EmojiPoster43EmojiForegroundCircularLayersViewController_unlockProgress, a2);
}

void sub_1DD2C92E4(uint64_t *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  keypath_set_5Tm_0(a1, a2, a3, a4, &OBJC_IVAR____TtC11EmojiPoster43EmojiForegroundCircularLayersViewController_unlockProgress);
}

void keypath_set_5Tm_0(uint64_t *a1, _QWORD *a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  uint64_t v5;
  _QWORD *v6;

  v5 = *a1;
  v6 = (_QWORD *)(*a2 + *a5);
  swift_beginAccess();
  *v6 = v5;
  sub_1DD2C7B3C();
}

uint64_t sub_1DD2C9344()
{
  return type metadata accessor for EmojiForegroundCircularLayersViewController();
}

uint64_t sub_1DD2C934C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1DD2F9CE8();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for EmojiForegroundCircularLayersViewController()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of EmojiForegroundCircularLayersViewController.setDeviceInterfaceOrientation(_:animated:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xE0))();
}

uint64_t dispatch thunk of EmojiForegroundCircularLayersViewController.configuration.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xE8))();
}

uint64_t dispatch thunk of EmojiForegroundCircularLayersViewController.configuration.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xF0))();
}

uint64_t dispatch thunk of EmojiForegroundCircularLayersViewController.configuration.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xF8))();
}

uint64_t dispatch thunk of EmojiForegroundCircularLayersViewController.wakeProgress.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x150))();
}

uint64_t dispatch thunk of EmojiForegroundCircularLayersViewController.wakeProgress.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x158))();
}

uint64_t dispatch thunk of EmojiForegroundCircularLayersViewController.wakeProgress.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x160))();
}

uint64_t dispatch thunk of EmojiForegroundCircularLayersViewController.unlockProgress.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x168))();
}

uint64_t dispatch thunk of EmojiForegroundCircularLayersViewController.unlockProgress.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x170))();
}

uint64_t dispatch thunk of EmojiForegroundCircularLayersViewController.unlockProgress.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x178))();
}

uint64_t dispatch thunk of EmojiForegroundCircularLayersViewController.__allocating_init(emojiRenderer:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 384))();
}

uint64_t sub_1DD2C953C()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1DD2C9560()
{
  return swift_deallocObject();
}

uint64_t dispatch thunk of EmojiConfigurationHandling.configuration.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of EmojiConfigurationHandling.configuration.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of EmojiConfigurationHandling.configuration.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of EmojiConfigurationHandling.wakeProgress.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of EmojiConfigurationHandling.wakeProgress.setter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of EmojiConfigurationHandling.wakeProgress.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 48))();
}

uint64_t dispatch thunk of EmojiConfigurationHandling.unlockProgress.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t dispatch thunk of EmojiConfigurationHandling.unlockProgress.setter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 64))();
}

uint64_t dispatch thunk of EmojiConfigurationHandling.unlockProgress.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 72))();
}

void sub_1DD2C95C0(char *a1)
{
  uint64_t v1;
  char v2;
  _BYTE *v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v2 = *a1;
  v3 = (_BYTE *)(v1 + OBJC_IVAR____TtC11EmojiPoster13CircularScene_sizeVariant);
  swift_beginAccess();
  *v3 = v2;
  v4 = objc_msgSend((id)objc_opt_self(), sel_mainScreen);
  objc_msgSend(v4, sel_bounds);
  v6 = v5;
  v8 = v7;

  type metadata accessor for CircularLayoutProvider();
  v9 = swift_allocObject();
  sub_1DD2D733C((char *)(v9 + 16));
  *(_QWORD *)(v9 + 24) = v6;
  *(_QWORD *)(v9 + 32) = v8;
  *(_QWORD *)(v1 + OBJC_IVAR____TtC11EmojiPoster13CircularScene_layoutProvider) = v9;
  swift_release();
  sub_1DD2CA81C();
}

void (*sub_1DD2C9690(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1DD2C96D8;
}

void sub_1DD2C96D8(uint64_t a1, char a2)
{
  uint64_t v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  swift_endAccess();
  if ((a2 & 1) == 0)
  {
    v4 = *(_QWORD *)(a1 + 24);
    v5 = objc_msgSend((id)objc_opt_self(), sel_mainScreen);
    objc_msgSend(v5, sel_bounds);
    v7 = v6;
    v9 = v8;

    type metadata accessor for CircularLayoutProvider();
    v10 = swift_allocObject();
    sub_1DD2D733C((char *)(v10 + 16));
    *(_QWORD *)(v10 + 24) = v7;
    *(_QWORD *)(v10 + 32) = v9;
    *(_QWORD *)(v4 + OBJC_IVAR____TtC11EmojiPoster13CircularScene_layoutProvider) = v10;
    swift_release();
    sub_1DD2CA81C();
  }
}

void sub_1DD2C9784(uint64_t a1)
{
  char *v1;
  char *v3;
  char *v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  id v10;
  id v11;
  void *v12;

  v3 = &v1[OBJC_IVAR____TtC11EmojiPoster13CircularScene_emoji];
  swift_beginAccess();
  *(_QWORD *)v3 = a1;
  swift_bridgeObjectRelease();
  objc_msgSend(v1, sel_removeAllChildren);
  v4 = &v1[OBJC_IVAR____TtC11EmojiPoster13CircularScene_emojiTextures];
  swift_beginAccess();
  *(_QWORD *)v4 = MEMORY[0x1E0DEE9D8];
  swift_bridgeObjectRelease();
  if (!*(_QWORD *)(*(_QWORD *)v3 + 16))
    return;
  sub_1DD2CA474();
  objc_msgSend(v1, sel_size);
  v5 = 0;
  v6 = 0;
LABEL_3:
  v7 = 1;
  while (1)
  {
    v8 = *(_QWORD *)v4;
    if ((*(_QWORD *)v4 & 0xC000000000000001) == 0)
      break;
    swift_bridgeObjectRetain();
    v9 = (id)MEMORY[0x1DF0D75E4](v5, v8);
    swift_bridgeObjectRelease();
LABEL_8:
    v10 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CD7FE8]), sel_initWithTexture_, v9);

    v11 = v10;
    v12 = (void *)sub_1DD2F9DB4();
    objc_msgSend(v11, sel_setName_, v12);

    objc_msgSend(v1, sel_addChild_, v11);
    if (v6)
    {
      if (6 * v6 > v7++)
        continue;
    }
    if (__OFADD__(v6++, 1))
      goto LABEL_23;
    if (__OFADD__(v5, 1))
      goto LABEL_24;
    if (v5 + 1 == *(_QWORD *)(*(_QWORD *)v3 + 16))
      v5 = 0;
    else
      ++v5;
    if (v6 >= 9)
    {
      sub_1DD2CA81C();
      return;
    }
    goto LABEL_3;
  }
  if ((v5 & 0x8000000000000000) == 0)
  {
    if (v5 >= *(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_22;
    v9 = *(id *)(v8 + 8 * v5 + 32);
    goto LABEL_8;
  }
  __break(1u);
LABEL_22:
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  __break(1u);
}

void (*sub_1DD2C9994(_QWORD *a1))(_QWORD **a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC11EmojiPoster13CircularScene_emoji;
  v3[3] = v1;
  v3[4] = v4;
  swift_beginAccess();
  return sub_1DD2C99EC;
}

void sub_1DD2C99EC(_QWORD **a1, char a2)
{
  _QWORD *v3;
  char *v4;
  uint64_t v5;
  char *v6;
  void *v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  id v12;
  void *v13;
  id v14;
  id v15;
  void *v16;

  v3 = *a1;
  swift_endAccess();
  if ((a2 & 1) != 0
    || (v4 = (char *)v3[3],
        v5 = v3[4],
        objc_msgSend(v4, sel_removeAllChildren),
        v6 = &v4[OBJC_IVAR____TtC11EmojiPoster13CircularScene_emojiTextures],
        swift_beginAccess(),
        *(_QWORD *)v6 = MEMORY[0x1E0DEE9D8],
        swift_bridgeObjectRelease(),
        !*(_QWORD *)(*(_QWORD *)&v4[v5] + 16)))
  {
LABEL_19:
    free(v3);
    return;
  }
  v7 = (void *)v3[3];
  sub_1DD2CA474();
  objc_msgSend(v7, sel_size);
  v8 = 0;
  v9 = 0;
LABEL_4:
  v10 = 1;
  while (1)
  {
    v11 = *(_QWORD *)v6;
    if ((*(_QWORD *)v6 & 0xC000000000000001) == 0)
      break;
    swift_bridgeObjectRetain();
    v12 = (id)MEMORY[0x1DF0D75E4](v8, v11);
    swift_bridgeObjectRelease();
LABEL_9:
    v13 = (void *)v3[3];
    v14 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CD7FE8]), sel_initWithTexture_, v12);

    v15 = v14;
    v16 = (void *)sub_1DD2F9DB4();
    objc_msgSend(v15, sel_setName_, v16);

    objc_msgSend(v13, sel_addChild_, v15);
    if (v9)
    {
      if (6 * v9 > v10++)
        continue;
    }
    if (__OFADD__(v8, 1))
      goto LABEL_22;
    ++v9;
    if (v8 + 1 == *(_QWORD *)(*(_QWORD *)(v3[3] + v3[4]) + 16))
      v8 = 0;
    else
      ++v8;
    if (v9 == 9)
    {
      sub_1DD2CA81C();
      goto LABEL_19;
    }
    goto LABEL_4;
  }
  if ((v8 & 0x8000000000000000) == 0)
  {
    if (v8 >= *(_QWORD *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_21;
    v12 = *(id *)(v11 + 8 * v8 + 32);
    goto LABEL_9;
  }
  __break(1u);
LABEL_21:
  __break(1u);
LABEL_22:
  __break(1u);
}

id sub_1DD2C9BDC(void *a1)
{
  _BYTE *v1;
  uint64_t v3;
  uint64_t v4;
  id v5;
  char *v6;
  id v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  void *v16;
  id v17;
  id v18;
  objc_super v20;

  v1[OBJC_IVAR____TtC11EmojiPoster13CircularScene_sizeVariant] = 1;
  *(_QWORD *)&v1[OBJC_IVAR____TtC11EmojiPoster13CircularScene_emoji] = &unk_1EA712148;
  v3 = OBJC_IVAR____TtC11EmojiPoster13CircularScene_emojiRenderer;
  type metadata accessor for EmojiRenderer();
  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = 10;
  v5 = objc_allocWithZone(MEMORY[0x1E0C99D38]);
  v6 = v1;
  v7 = objc_msgSend(v5, sel_init);
  *(_QWORD *)(v4 + 24) = v7;
  objc_msgSend(v7, sel_setCountLimit_, 10);
  *(_QWORD *)&v1[v3] = v4;
  *(_QWORD *)&v6[OBJC_IVAR____TtC11EmojiPoster13CircularScene_emojiTextures] = MEMORY[0x1E0DEE9D8];
  v8 = OBJC_IVAR____TtC11EmojiPoster13CircularScene_layoutProvider;
  v9 = objc_msgSend((id)objc_opt_self(), sel_mainScreen);
  objc_msgSend(v9, sel_bounds);
  v11 = v10;
  v13 = v12;

  type metadata accessor for CircularLayoutProvider();
  v14 = swift_allocObject();
  sub_1DD2D733C((char *)(v14 + 16));
  *(_QWORD *)(v14 + 24) = v11;
  *(_QWORD *)(v14 + 32) = v13;
  *(_QWORD *)&v6[v8] = v14;
  *(_QWORD *)&v6[OBJC_IVAR____TtC11EmojiPoster13CircularScene_wakeProgress] = 0x3FF0000000000000;
  *(_QWORD *)&v6[OBJC_IVAR____TtC11EmojiPoster13CircularScene_unlockProgress] = 0x3FF0000000000000;

  v20.receiver = v6;
  v20.super_class = (Class)type metadata accessor for CircularScene();
  v15 = objc_msgSendSuper2(&v20, sel_initWithCoder_, a1);
  if (v15)
  {
    v16 = (void *)objc_opt_self();
    v17 = v15;
    v18 = objc_msgSend(v16, sel_clearColor);
    objc_msgSend(v17, sel_setBackgroundColor_, v18);

  }
  return v15;
}

id sub_1DD2C9DEC(double a1, double a2)
{
  _BYTE *v2;
  uint64_t v5;
  uint64_t v6;
  id v7;
  char *v8;
  id v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  void *v18;
  id v19;
  id v20;
  objc_super v22;

  v2[OBJC_IVAR____TtC11EmojiPoster13CircularScene_sizeVariant] = 1;
  *(_QWORD *)&v2[OBJC_IVAR____TtC11EmojiPoster13CircularScene_emoji] = &unk_1EA712178;
  v5 = OBJC_IVAR____TtC11EmojiPoster13CircularScene_emojiRenderer;
  type metadata accessor for EmojiRenderer();
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = 10;
  v7 = objc_allocWithZone(MEMORY[0x1E0C99D38]);
  v8 = v2;
  v9 = objc_msgSend(v7, sel_init);
  *(_QWORD *)(v6 + 24) = v9;
  objc_msgSend(v9, sel_setCountLimit_, 10);
  *(_QWORD *)&v2[v5] = v6;
  *(_QWORD *)&v8[OBJC_IVAR____TtC11EmojiPoster13CircularScene_emojiTextures] = MEMORY[0x1E0DEE9D8];
  v10 = OBJC_IVAR____TtC11EmojiPoster13CircularScene_layoutProvider;
  v11 = objc_msgSend((id)objc_opt_self(), sel_mainScreen);
  objc_msgSend(v11, sel_bounds);
  v13 = v12;
  v15 = v14;

  type metadata accessor for CircularLayoutProvider();
  v16 = swift_allocObject();
  sub_1DD2D733C((char *)(v16 + 16));
  *(_QWORD *)(v16 + 24) = v13;
  *(_QWORD *)(v16 + 32) = v15;
  *(_QWORD *)&v8[v10] = v16;
  *(_QWORD *)&v8[OBJC_IVAR____TtC11EmojiPoster13CircularScene_wakeProgress] = 0x3FF0000000000000;
  *(_QWORD *)&v8[OBJC_IVAR____TtC11EmojiPoster13CircularScene_unlockProgress] = 0x3FF0000000000000;

  v22.receiver = v8;
  v22.super_class = (Class)type metadata accessor for CircularScene();
  v17 = objc_msgSendSuper2(&v22, sel_initWithSize_, a1, a2);
  v18 = (void *)objc_opt_self();
  v19 = v17;
  v20 = objc_msgSend(v18, sel_clearColor);
  objc_msgSend(v19, sel_setBackgroundColor_, v20);

  return v19;
}

void sub_1DD2C9FF8(uint64_t a1)
{
  char *v1;
  char *v3;
  char *v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  id v10;
  id v11;
  void *v12;
  objc_super v15;

  objc_msgSend(v1, sel_removeAllChildren);
  v3 = &v1[OBJC_IVAR____TtC11EmojiPoster13CircularScene_emojiTextures];
  swift_beginAccess();
  *(_QWORD *)v3 = MEMORY[0x1E0DEE9D8];
  swift_bridgeObjectRelease();
  v4 = &v1[OBJC_IVAR____TtC11EmojiPoster13CircularScene_emoji];
  swift_beginAccess();
  if (!*(_QWORD *)(*(_QWORD *)v4 + 16))
  {
LABEL_20:
    v15.receiver = v1;
    v15.super_class = (Class)type metadata accessor for CircularScene();
    objc_msgSendSuper2(&v15, sel_didMoveToView_, a1);
    return;
  }
  sub_1DD2CA474();
  objc_msgSend(v1, sel_size);
  v5 = 0;
  v6 = 0;
LABEL_3:
  v7 = 1;
  while (1)
  {
    v8 = *(_QWORD *)v3;
    if ((*(_QWORD *)v3 & 0xC000000000000001) == 0)
      break;
    swift_bridgeObjectRetain();
    v9 = (id)MEMORY[0x1DF0D75E4](v5, v8);
    swift_bridgeObjectRelease();
LABEL_8:
    v10 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CD7FE8]), sel_initWithTexture_, v9);

    v11 = v10;
    v12 = (void *)sub_1DD2F9DB4();
    objc_msgSend(v11, sel_setName_, v12);

    objc_msgSend(v1, sel_addChild_, v11);
    if (v6)
    {
      if (6 * v6 > v7++)
        continue;
    }
    if (__OFADD__(v6++, 1))
      goto LABEL_23;
    if (__OFADD__(v5, 1))
      goto LABEL_24;
    if (v5 + 1 == *(_QWORD *)(*(_QWORD *)v4 + 16))
      v5 = 0;
    else
      ++v5;
    if (v6 >= 9)
    {
      sub_1DD2CA81C();
      goto LABEL_20;
    }
    goto LABEL_3;
  }
  if ((v5 & 0x8000000000000000) == 0)
  {
    if (v5 >= *(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_22;
    v9 = *(id *)(v8 + 8 * v5 + 32);
    goto LABEL_8;
  }
  __break(1u);
LABEL_22:
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  __break(1u);
}

void sub_1DD2CA274()
{
  char *v0;
  char *v1;
  char *v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  id v8;
  id v9;
  void *v10;

  objc_msgSend(v0, sel_removeAllChildren);
  v1 = &v0[OBJC_IVAR____TtC11EmojiPoster13CircularScene_emojiTextures];
  swift_beginAccess();
  *(_QWORD *)v1 = MEMORY[0x1E0DEE9D8];
  swift_bridgeObjectRelease();
  v2 = &v0[OBJC_IVAR____TtC11EmojiPoster13CircularScene_emoji];
  swift_beginAccess();
  if (!*(_QWORD *)(*(_QWORD *)v2 + 16))
    return;
  sub_1DD2CA474();
  objc_msgSend(v0, sel_size);
  v3 = 0;
  v4 = 0;
LABEL_3:
  v5 = 1;
  while (1)
  {
    v6 = *(_QWORD *)v1;
    if ((*(_QWORD *)v1 & 0xC000000000000001) == 0)
      break;
    swift_bridgeObjectRetain();
    v7 = (id)MEMORY[0x1DF0D75E4](v3, v6);
    swift_bridgeObjectRelease();
LABEL_8:
    v8 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CD7FE8]), sel_initWithTexture_, v7);

    v9 = v8;
    v10 = (void *)sub_1DD2F9DB4();
    objc_msgSend(v9, sel_setName_, v10);

    objc_msgSend(v0, sel_addChild_, v9);
    if (v4)
    {
      if (6 * v4 > v5++)
        continue;
    }
    if (__OFADD__(v4++, 1))
      goto LABEL_23;
    if (__OFADD__(v3, 1))
      goto LABEL_24;
    if (v3 + 1 == *(_QWORD *)(*(_QWORD *)v2 + 16))
      v3 = 0;
    else
      ++v3;
    if (v4 >= 9)
    {
      sub_1DD2CA81C();
      return;
    }
    goto LABEL_3;
  }
  if ((v3 & 0x8000000000000000) == 0)
  {
    if (v3 >= *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_22;
    v7 = *(id *)(v6 + 8 * v3 + 32);
    goto LABEL_8;
  }
  __break(1u);
LABEL_22:
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  __break(1u);
}

uint64_t sub_1DD2CA474()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  _QWORD *v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  void *v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  id v21;
  void *v22;
  id v23;
  id v24;
  id v25;
  void *v26;
  int64x2_t v27;
  _QWORD *v28;
  uint64_t v29;
  _QWORD aBlock[6];

  v1 = v0;
  v2 = (uint64_t *)(v0 + OBJC_IVAR____TtC11EmojiPoster13CircularScene_emoji);
  result = swift_beginAccess();
  v4 = *v2;
  v5 = *(_QWORD *)(*v2 + 16);
  if (v5)
  {
    v6 = (void *)objc_opt_self();
    v7 = (_QWORD *)(v1 + OBJC_IVAR____TtC11EmojiPoster13CircularScene_emojiTextures);
    v29 = *(_QWORD *)(v1 + OBJC_IVAR____TtC11EmojiPoster13CircularScene_emojiRenderer);
    swift_bridgeObjectRetain();
    v8 = (uint64_t *)(v4 + 40);
    v27 = vdupq_n_s64(0x4069000000000000uLL);
    v26 = v6;
    v28 = v7;
    while (1)
    {
      v9 = *(v8 - 1);
      v10 = *v8;
      v11 = objc_allocWithZone(MEMORY[0x1E0CB3940]);
      swift_bridgeObjectRetain_n();
      v12 = (void *)sub_1DD2F9DB4();
      swift_bridgeObjectRelease();
      v13 = objc_msgSend(v11, sel_initWithString_, v12);

      v14 = objc_msgSend(*(id *)(v29 + 24), sel_objectForKey_, v13);
      if (v14)
      {
        v15 = v14;
        swift_bridgeObjectRelease();
      }
      else
      {
        v16 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3830]), sel_init);
        objc_msgSend(v16, sel_setOpaque_, 0);
        v17 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3828]), sel_initWithSize_format_, v16, 200.0, 200.0);
        v18 = swift_allocObject();
        *(_QWORD *)(v18 + 16) = v9;
        *(_QWORD *)(v18 + 24) = v10;
        *(int64x2_t *)(v18 + 32) = v27;
        v19 = swift_allocObject();
        *(_QWORD *)(v19 + 16) = sub_1DD2C6578;
        *(_QWORD *)(v19 + 24) = v18;
        aBlock[4] = sub_1DD2C6594;
        aBlock[5] = v19;
        aBlock[0] = MEMORY[0x1E0C809B0];
        aBlock[1] = 1107296256;
        aBlock[2] = sub_1DD2CB738;
        aBlock[3] = &block_descriptor_14;
        v20 = _Block_copy(aBlock);
        swift_bridgeObjectRetain();
        swift_retain();
        swift_release();
        v21 = objc_msgSend(v17, sel_imageWithActions_, v20);
        _Block_release(v20);
        LOBYTE(v20) = swift_isEscapingClosureAtFileLocation();
        result = swift_release();
        if ((v20 & 1) != 0)
        {
          __break(1u);
          return result;
        }
        v22 = *(void **)(v29 + 24);
        v15 = v21;
        v23 = v22;
        objc_msgSend(v23, sel_setObject_forKey_, v15, v13);
        swift_bridgeObjectRelease();
        swift_release();

        v6 = v26;
      }

      v24 = objc_msgSend(v6, sel_textureWithImage_, v15);
      swift_beginAccess();
      v25 = v24;
      MEMORY[0x1DF0D7458]();
      if (*(_QWORD *)((*v28 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*v28 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        sub_1DD2F9F04();
      v8 += 2;
      sub_1DD2F9F10();
      sub_1DD2F9EF8();
      swift_endAccess();

      if (!--v5)
        return swift_bridgeObjectRelease();
    }
  }
  return result;
}

void sub_1DD2CA81C()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  _QWORD *v5;
  void *v6;
  id v7;
  _QWORD v8[6];

  v1 = swift_allocObject();
  *(_QWORD *)(v1 + 16) = 0;
  v2 = swift_allocObject();
  *(_QWORD *)(v2 + 16) = 0;
  v3 = swift_allocObject();
  *(_QWORD *)(v3 + 16) = 1;
  v4 = (void *)sub_1DD2F9DB4();
  v5 = (_QWORD *)swift_allocObject();
  v5[2] = v0;
  v5[3] = v2;
  v5[4] = v1;
  v5[5] = v3;
  v8[4] = sub_1DD2CB054;
  v8[5] = v5;
  v8[0] = MEMORY[0x1E0C809B0];
  v8[1] = 1107296256;
  v8[2] = sub_1DD2F5D4C;
  v8[3] = &block_descriptor_1;
  v6 = _Block_copy(v8);
  v7 = v0;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_release();
  objc_msgSend(v7, sel_enumerateChildNodesWithName_usingBlock_, v4, v6);
  _Block_release(v6);
  swift_release();
  swift_release();
  swift_release();

}

uint64_t sub_1DD2CA988(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t result;
  void *v11;
  uint64_t *v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  double v16;
  id v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;

  objc_opt_self();
  result = swift_dynamicCastObjCClass();
  if (!result)
    return result;
  v11 = (void *)result;
  v12 = (uint64_t *)(a4 + 16);
  v13 = (uint64_t *)(a5 + 16);
  swift_beginAccess();
  v14 = *v12;
  result = swift_beginAccess();
  v15 = *v13;
  if (*v13 < 1)
  {
    v16 = 0.0;
  }
  else
  {
    if ((unsigned __int128)(v15 * (__int128)6) >> 64 != (6 * v15) >> 63)
    {
LABEL_16:
      __break(1u);
LABEL_17:
      __break(1u);
      goto LABEL_18;
    }
    v16 = 360.0 / (double)(6 * v15) * (double)v14;
  }
  v17 = a1;
  objc_msgSend(v11, sel_setPosition_, sub_1DD2CB078(v15, v16));
  objc_msgSend(v11, sel_scaleToSize_, sub_1DD2CB1A8());

  result = swift_beginAccess();
  v18 = *v12 + 1;
  if (__OFADD__(*v12, 1))
  {
    __break(1u);
    goto LABEL_16;
  }
  v19 = (uint64_t *)(a6 + 16);
  swift_beginAccess();
  if (v18 == *(_QWORD *)(a6 + 16))
  {
    result = swift_beginAccess();
    if (!__OFADD__(*v13, 1))
    {
      ++*v13;
      v20 = 1;
      swift_beginAccess();
      *v12 = 0;
      result = swift_beginAccess();
      v21 = *v13;
      if (*v13 < 1 || (v20 = 6 * v21, (unsigned __int128)(v21 * (__int128)6) >> 64 == (6 * v21) >> 63))
      {
        result = swift_beginAccess();
        *v19 = v20;
        return result;
      }
      goto LABEL_19;
    }
    goto LABEL_17;
  }
  result = swift_beginAccess();
  if (__OFADD__(*v12, 1))
  {
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    return result;
  }
  ++*v12;
  return result;
}

id sub_1DD2CABF4()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CircularScene();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for CircularScene()
{
  return objc_opt_self();
}

uint64_t sub_1DD2CAC9C()
{
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

void sub_1DD2CACE8(uint64_t a1)
{
  sub_1DD2C9784(a1);
}

void (*sub_1DD2CAD08(_QWORD *a1))(_QWORD *)
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1DD2C9994(v2);
  return sub_1DD2CAD50;
}

uint64_t sub_1DD2CAD54@<X0>(_BYTE *a1@<X8>)
{
  _QWORD *v1;
  _BYTE *v3;
  uint64_t result;

  v3 = (_BYTE *)(*v1 + OBJC_IVAR____TtC11EmojiPoster13CircularScene_sizeVariant);
  result = swift_beginAccess();
  *a1 = *v3;
  return result;
}

void sub_1DD2CADA4(char *a1)
{
  char v1;

  v1 = *a1;
  sub_1DD2C95C0(&v1);
}

void (*sub_1DD2CADD8(_QWORD *a1))(_QWORD *)
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1DD2C9690((uint64_t)v2);
  return sub_1DD2CAD50;
}

double sub_1DD2CAE20()
{
  _QWORD *v0;
  uint64_t v1;

  v1 = *v0 + OBJC_IVAR____TtC11EmojiPoster13CircularScene_wakeProgress;
  swift_beginAccess();
  return *(double *)v1;
}

void sub_1DD2CAE68(uint64_t a1, uint64_t a2, double a3)
{
  sub_1DD2CAF18(a3, a1, a2, &OBJC_IVAR____TtC11EmojiPoster13CircularScene_wakeProgress);
}

uint64_t (*sub_1DD2CAE74(uint64_t a1))()
{
  _QWORD *v1;

  *(_QWORD *)(a1 + 24) = *v1;
  swift_beginAccess();
  return sub_1DD2CAEC0;
}

double sub_1DD2CAEC4()
{
  _QWORD *v0;
  uint64_t v1;

  v1 = *v0 + OBJC_IVAR____TtC11EmojiPoster13CircularScene_unlockProgress;
  swift_beginAccess();
  return *(double *)v1;
}

void sub_1DD2CAF0C(uint64_t a1, uint64_t a2, double a3)
{
  sub_1DD2CAF18(a3, a1, a2, &OBJC_IVAR____TtC11EmojiPoster13CircularScene_unlockProgress);
}

void sub_1DD2CAF18(double a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  _QWORD *v4;
  double *v6;

  v6 = (double *)(*v4 + *a4);
  swift_beginAccess();
  *v6 = a1;
  sub_1DD2CA81C();
}

uint64_t (*sub_1DD2CAF6C(uint64_t a1))()
{
  _QWORD *v1;

  *(_QWORD *)(a1 + 24) = *v1;
  swift_beginAccess();
  return sub_1DD2CAEC0;
}

void sub_1DD2CAFB8(uint64_t a1, char a2)
{
  swift_endAccess();
  if ((a2 & 1) == 0)
    sub_1DD2CA81C();
}

void sub_1DD2CAFE8()
{
  sub_1DD2CA274();
}

uint64_t sub_1DD2CB008()
{
  return swift_deallocObject();
}

uint64_t sub_1DD2CB018()
{
  uint64_t v0;

  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1DD2CB054(void *a1, uint64_t a2)
{
  uint64_t *v2;

  return sub_1DD2CA988(a1, a2, v2[2], v2[3], v2[4], v2[5]);
}

uint64_t block_copy_helper_1(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_1()
{
  return swift_release();
}

double sub_1DD2CB078(uint64_t a1, double a2)
{
  void *v2;
  id v5;
  void *v6;
  double v7;
  double MidX;
  double v9;
  double v10;
  double MidY;
  long double v12;
  double v13;
  long double v14;
  CGRect v16;
  CGRect v17;
  CGRect v18;
  CGRect v19;

  v5 = objc_msgSend(v2, sel_view);
  if (!v5)
    return 0.0;
  v6 = v5;
  v7 = sub_1DD2F9AC4(a1);
  objc_msgSend(v6, sel_bounds);
  MidX = CGRectGetMidX(v16);
  objc_msgSend(v6, sel_bounds);
  v9 = v7 + CGRectGetMidY(v17);
  objc_msgSend(v6, sel_bounds);
  v10 = CGRectGetMidX(v18);
  objc_msgSend(v6, sel_bounds);
  MidY = CGRectGetMidY(v19);

  if (a2 > 0.0)
  {
    v12 = v9 - MidY;
    v13 = sqrt((MidX - v10) * (MidX - v10) + v12 * v12);
    v14 = atan2(v12, MidX - v10);
    return v10 + v13 * __sincos_stret(a2 * 0.0174532925 + v14).__cosval;
  }
  return MidX;
}

double sub_1DD2CB1A8()
{
  uint64_t v0;

  return dbl_1DD2FE2E0[*(char *)(*(_QWORD *)(v0 + OBJC_IVAR____TtC11EmojiPoster13CircularScene_layoutProvider) + 16)]
       / dbl_1DD2FE300[*(char *)(*(_QWORD *)(v0 + OBJC_IVAR____TtC11EmojiPoster13CircularScene_layoutProvider) + 16)]
       * (*(double *)(*(_QWORD *)(v0 + OBJC_IVAR____TtC11EmojiPoster13CircularScene_layoutProvider) + 24)
        / dbl_1DD2FE320[*(char *)(*(_QWORD *)(v0 + OBJC_IVAR____TtC11EmojiPoster13CircularScene_layoutProvider) + 16)]);
}

uint64_t sub_1DD2CB1F8()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1DD2CB21C()
{
  return swift_deallocObject();
}

uint64_t EmojiRenderer.__allocating_init()()
{
  uint64_t v0;
  id v1;

  v0 = swift_allocObject();
  *(_QWORD *)(v0 + 16) = 10;
  v1 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C99D38]), sel_init);
  *(_QWORD *)(v0 + 24) = v1;
  objc_msgSend(v1, sel_setCountLimit_, 10);
  return v0;
}

uint64_t EmojiRenderer.init()()
{
  uint64_t v0;
  id v1;

  *(_QWORD *)(v0 + 16) = 10;
  v1 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C99D38]), sel_init);
  *(_QWORD *)(v0 + 24) = v1;
  objc_msgSend(v1, sel_setCountLimit_, 10);
  return v0;
}

uint64_t sub_1DD2CB2E0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  id v5;
  void *v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  int64x2_t *v12;
  uint64_t v13;
  void *v14;
  id v15;
  uint64_t result;
  void *v17;
  id v18;
  _QWORD v19[6];

  v5 = objc_allocWithZone(MEMORY[0x1E0CB3940]);
  swift_bridgeObjectRetain();
  v6 = (void *)sub_1DD2F9DB4();
  swift_bridgeObjectRelease();
  v7 = objc_msgSend(v5, sel_initWithString_, v6);

  v8 = objc_msgSend(*(id *)(v2 + 24), sel_objectForKey_, v7);
  if (v8)
  {
    v9 = v8;
LABEL_5:

    return (uint64_t)v9;
  }
  v10 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3830]), sel_init);
  objc_msgSend(v10, sel_setOpaque_, 0);
  v11 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3828]), sel_initWithSize_format_, v10, 200.0, 200.0);
  v12 = (int64x2_t *)swift_allocObject();
  v12[1].i64[0] = a1;
  v12[1].i64[1] = a2;
  v12[2] = vdupq_n_s64(0x4069000000000000uLL);
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = sub_1DD2C6578;
  *(_QWORD *)(v13 + 24) = v12;
  v19[4] = sub_1DD2C30D0;
  v19[5] = v13;
  v19[0] = MEMORY[0x1E0C809B0];
  v19[1] = 1107296256;
  v19[2] = sub_1DD2CB738;
  v19[3] = &block_descriptor_2;
  v14 = _Block_copy(v19);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_release();
  v15 = objc_msgSend(v11, sel_imageWithActions_, v14);
  _Block_release(v14);
  LOBYTE(v14) = swift_isEscapingClosureAtFileLocation();
  result = swift_release();
  if ((v14 & 1) == 0)
  {
    v17 = *(void **)(v2 + 24);
    v9 = v15;
    v18 = v17;
    objc_msgSend(v18, sel_setObject_forKey_, v9, v7);
    swift_release();

    goto LABEL_5;
  }
  __break(1u);
  return result;
}

void sub_1DD2CB540(double a1, double a2)
{
  uint64_t inited;
  void *v5;
  void *v6;
  id v7;
  id v8;
  id v9;
  void *v10;
  void *v11;
  id v12;
  double v13;
  double v14;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDB615F0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1DD2FDFC0;
  v5 = (void *)*MEMORY[0x1E0DC1138];
  *(_QWORD *)(inited + 32) = *MEMORY[0x1E0DC1138];
  v6 = (void *)objc_opt_self();
  swift_bridgeObjectRetain();
  v7 = v5;
  v8 = objc_msgSend(v6, sel_systemFontOfSize_, 200.0);
  *(_QWORD *)(inited + 64) = sub_1DD2CB820();
  *(_QWORD *)(inited + 40) = v8;
  sub_1DD2DEA78(inited);
  v9 = objc_allocWithZone(MEMORY[0x1E0CB3498]);
  v10 = (void *)sub_1DD2F9DB4();
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  sub_1DD2CB85C();
  v11 = (void *)sub_1DD2F9D78();
  swift_bridgeObjectRelease();
  v12 = objc_msgSend(v9, sel_initWithString_attributes_, v10, v11);

  objc_msgSend(v12, sel_size);
  objc_msgSend(v12, sel_drawInRect_, a1 * 0.5 - v13 * 0.5, a2 * 0.5 - v14 * 0.5);

}

uint64_t sub_1DD2CB6E4()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1DD2CB708(uint64_t a1, uint64_t (*a2)(void))
{
  return a2();
}

uint64_t sub_1DD2CB728()
{
  return swift_deallocObject();
}

void sub_1DD2CB738(uint64_t a1, void *a2)
{
  void (*v2)(void);
  id v3;

  v2 = *(void (**)(void))(a1 + 32);
  v3 = a2;
  v2();

}

uint64_t block_copy_helper_2(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_2()
{
  return swift_release();
}

id sub_1DD2CB784()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 24), sel_removeAllObjects);
}

uint64_t EmojiRenderer.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t EmojiRenderer.__deallocating_deinit()
{
  uint64_t v0;

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for EmojiRenderer()
{
  return objc_opt_self();
}

uint64_t method lookup function for EmojiRenderer()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of EmojiRenderer.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t dispatch thunk of EmojiRenderer.renderEmoji(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 128))();
}

uint64_t dispatch thunk of EmojiRenderer.clearCache()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 136))();
}

unint64_t sub_1DD2CB820()
{
  unint64_t result;

  result = qword_1EDB61538;
  if (!qword_1EDB61538)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EDB61538);
  }
  return result;
}

unint64_t sub_1DD2CB85C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EDB61518;
  if (!qword_1EDB61518)
  {
    type metadata accessor for Key(255);
    result = MEMORY[0x1DF0D8040](&unk_1DD2FDF50, v1);
    atomic_store(result, (unint64_t *)&qword_1EDB61518);
  }
  return result;
}

uint64_t sub_1DD2CB8A4(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;
  _QWORD *v3;

  v2 = *a1;
  v3 = (_QWORD *)(*a2 + OBJC_IVAR____TtC11EmojiPoster35EmojiForegroundLayersViewController_emojiRenderer);
  swift_beginAccess();
  *v3 = v2;
  swift_retain();
  return swift_release();
}

uint64_t sub_1DD2CB90C()
{
  swift_beginAccess();
  return swift_retain();
}

uint64_t sub_1DD2CB954(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)(v1 + OBJC_IVAR____TtC11EmojiPoster35EmojiForegroundLayersViewController_emojiRenderer);
  swift_beginAccess();
  *v3 = a1;
  return swift_release();
}

uint64_t (*sub_1DD2CB9A4())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

void sub_1DD2CB9EC(uint64_t a1, char a2)
{
  uint64_t v2;
  void *v3;
  uint64_t v6;
  uint64_t ObjectType;
  void (*v8)(uint64_t, _QWORD, uint64_t, uint64_t);
  id v9;

  v3 = *(void **)(v2 + OBJC_IVAR____TtC11EmojiPoster35EmojiForegroundLayersViewController_implementationVC);
  if (v3)
  {
    v6 = *(_QWORD *)(v2 + OBJC_IVAR____TtC11EmojiPoster35EmojiForegroundLayersViewController_implementationVC + 8);
    ObjectType = swift_getObjectType();
    v8 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v6 + 8);
    v9 = v3;
    v8(a1, a2 & 1, ObjectType, v6);

  }
}

uint64_t sub_1DD2CBA98@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  _BYTE v5[128];

  v3 = *a1 + OBJC_IVAR____TtC11EmojiPoster35EmojiForegroundLayersViewController_configuration;
  swift_beginAccess();
  sub_1DD2C37E8(v3, (uint64_t)v5);
  sub_1DD2C37E8((uint64_t)v5, a2);
  return sub_1DD2C3968((uint64_t)v5, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1DD2C3830);
}

uint64_t sub_1DD2CBB08(uint64_t a1, _QWORD *a2)
{
  uint64_t v3;
  _BYTE v5[128];
  _BYTE v6[128];
  _BYTE v7[128];
  _BYTE v8[128];

  sub_1DD2C37E8(a1, (uint64_t)v6);
  v3 = *a2 + OBJC_IVAR____TtC11EmojiPoster35EmojiForegroundLayersViewController_configuration;
  swift_beginAccess();
  sub_1DD2C37E8(v3, (uint64_t)v7);
  sub_1DD2C37E8(v3, (uint64_t)v8);
  sub_1DD2C37E8((uint64_t)v6, v3);
  sub_1DD2C3968((uint64_t)v6, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1DD2C3830);
  sub_1DD2C3968((uint64_t)v7, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1DD2C3830);
  sub_1DD2C3968((uint64_t)v8, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1DD2C39CC);
  sub_1DD2C37E8((uint64_t)v7, (uint64_t)v5);
  sub_1DD2CBBD8((uint64_t)v5);
  return sub_1DD2C3968((uint64_t)v7, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1DD2C39CC);
}

void sub_1DD2CBBD8(uint64_t a1)
{
  char *v1;
  char *v2;
  uint64_t v3;
  int v4;
  int v5;
  unsigned __int8 v6;
  void *v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(_BYTE *, uint64_t, uint64_t);
  id v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  char *v17;
  void *v18;
  id v19;
  id v20;
  id v21;
  void *v22;
  id v23;
  id v24;
  void *v25;
  id v26;
  char v27;
  id v28;
  id v29;
  void *v30;
  id v31;
  void *v32;
  id v33;
  void *v34;
  void *v35;
  id v36;
  uint64_t v37;
  id v38;
  id v39;
  void *v40;
  double v41;
  double v42;
  double v43;
  double v44;
  double v45;
  double v46;
  double v47;
  double v48;
  void *v49;
  void *v50;
  id v51;
  id v52;
  id v53;
  void *v54;
  uint64_t v55;
  id v56;
  void *v57;
  id v58;
  id v59;
  void *v60;
  id v61;
  id v62;
  id v63;
  void *v64;
  id v65;
  id v66;
  void *v67;
  id v68;
  id v69;
  id v70;
  void *v71;
  id v72;
  id v73;
  void *v74;
  id v75;
  id v76;
  id v77;
  void *v78;
  id v79;
  id v80;
  void *v81;
  id v82;
  id v83;
  id v84;
  void *v85;
  id v86;
  id v87;
  id v88;
  id v89;
  void *v90;
  id v91;
  id v92;
  id v93;
  id v94;
  void *v95;
  id v96;
  id v97;
  id v98;
  id v99;
  void *v100;
  void *v101;
  id v102;
  id v103;
  id v104;
  void *v105;
  id v106;
  void *v107;
  _BYTE v108[128];
  _QWORD v109[16];
  __int128 v110;
  __int128 v111;
  uint64_t v112;
  _BYTE v113[24];
  uint64_t v114;
  uint64_t v115;
  _BYTE v116[128];
  _BYTE v117[128];
  _BYTE v118[128];
  _BYTE v119[136];

  v2 = v1;
  sub_1DD2C37E8(a1, (uint64_t)v117);
  v3 = (uint64_t)&v1[OBJC_IVAR____TtC11EmojiPoster35EmojiForegroundLayersViewController_configuration];
  swift_beginAccess();
  sub_1DD2C37E8(v3, (uint64_t)v118);
  sub_1DD2C37E8((uint64_t)v118, (uint64_t)v119);
  v4 = 3;
  if (sub_1DD2C61E4((uint64_t)v119) != 1)
    v4 = *(unsigned __int8 *)(v3 + 106);
  sub_1DD2C37E8((uint64_t)v117, (uint64_t)v116);
  v5 = sub_1DD2C61E4((uint64_t)v116);
  v6 = v116[106];
  if (v5 == 1)
    v6 = 3;
  if (v4 == 3)
  {
    if (v6 != 3)
      goto LABEL_14;
  }
  else if (v6 == 3 || v4 != v6)
  {
LABEL_14:
    v13 = sub_1DD2CD0F0();
    if (!v13)
      return;
    v15 = v13;
    v16 = v14;
    v17 = &v2[OBJC_IVAR____TtC11EmojiPoster35EmojiForegroundLayersViewController_implementationVC];
    v18 = *(void **)&v2[OBJC_IVAR____TtC11EmojiPoster35EmojiForegroundLayersViewController_implementationVC];
    if (!v18)
    {
      v28 = v13;
      goto LABEL_30;
    }
    v19 = v13;
    v20 = v18;
    v21 = objc_msgSend(v20, sel_viewIfLoaded);
    if (!v21)
    {

      goto LABEL_30;
    }
    v22 = v21;
    v23 = objc_msgSend(v21, sel_superview);
    v24 = objc_msgSend(v2, sel_view);
    v25 = v24;
    if (v23)
    {
      if (!v24)
      {

LABEL_30:
        v29 = objc_msgSend(v15, sel_view);
        if (v29)
        {
          v30 = v29;
          objc_msgSend(v29, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);

          objc_msgSend(v2, sel_addChildViewController_, v15);
          v31 = objc_msgSend(v2, sel_view);
          if (v31)
          {
            v32 = v31;
            v33 = objc_msgSend(v15, sel_view);
            if (v33)
            {
              v34 = v33;
              objc_msgSend(v32, sel_addSubview_, v33);

              objc_msgSend(v15, sel_didMoveToParentViewController_, v2);
              v35 = *(void **)v17;
              *(_QWORD *)v17 = v15;
              *((_QWORD *)v17 + 1) = v16;
              v36 = v15;

              v37 = OBJC_IVAR____TtC11EmojiPoster35EmojiForegroundLayersViewController_dimmingView;
              v38 = *(id *)&v2[OBJC_IVAR____TtC11EmojiPoster35EmojiForegroundLayersViewController_dimmingView];
              v39 = objc_msgSend(v2, sel_view);
              if (v39)
              {
                v40 = v39;
                objc_msgSend(v39, sel_bounds);
                v42 = v41;
                v44 = v43;
                v46 = v45;
                v48 = v47;

                objc_msgSend(v38, sel_setFrame_, v42, v44, v46, v48);
                objc_msgSend(*(id *)&v2[v37], sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
                v49 = *(void **)&v2[v37];
                v50 = (void *)objc_opt_self();
                v51 = v49;
                v52 = objc_msgSend(v50, sel_blackColor);
                objc_msgSend(v51, sel_setBackgroundColor_, v52);

                objc_msgSend(*(id *)&v2[v37], sel_setAlpha_, 0.0);
                v53 = objc_msgSend(v2, sel_view);
                if (v53)
                {
                  v54 = v53;
                  objc_msgSend(v53, sel_addSubview_, *(_QWORD *)&v2[v37]);

                  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDB61620);
                  v55 = swift_allocObject();
                  *(_OWORD *)(v55 + 16) = xmmword_1DD2FE380;
                  v56 = objc_msgSend(v2, (SEL)&BackgroundSuggestionsProvider.ivar_base_size);
                  if (v56)
                  {
                    v57 = v56;
                    v58 = objc_msgSend(v56, sel_leadingAnchor);

                    v59 = objc_msgSend(v36, (SEL)&BackgroundSuggestionsProvider.ivar_base_size);
                    if (v59)
                    {
                      v60 = v59;
                      v61 = objc_msgSend(v59, sel_leadingAnchor);

                      v62 = objc_msgSend(v58, sel_constraintEqualToAnchor_, v61);
                      *(_QWORD *)(v55 + 32) = v62;
                      v63 = objc_msgSend(v2, (SEL)&BackgroundSuggestionsProvider.ivar_base_size);
                      if (v63)
                      {
                        v64 = v63;
                        v65 = objc_msgSend(v63, sel_trailingAnchor);

                        v66 = objc_msgSend(v36, (SEL)&BackgroundSuggestionsProvider.ivar_base_size);
                        if (v66)
                        {
                          v67 = v66;
                          v68 = objc_msgSend(v66, sel_trailingAnchor);

                          v69 = objc_msgSend(v65, sel_constraintEqualToAnchor_, v68);
                          *(_QWORD *)(v55 + 40) = v69;
                          v70 = objc_msgSend(v2, (SEL)&BackgroundSuggestionsProvider.ivar_base_size);
                          if (v70)
                          {
                            v71 = v70;
                            v72 = objc_msgSend(v70, sel_topAnchor);

                            v73 = objc_msgSend(v36, (SEL)&BackgroundSuggestionsProvider.ivar_base_size);
                            if (v73)
                            {
                              v74 = v73;
                              v75 = objc_msgSend(v73, sel_topAnchor);

                              v76 = objc_msgSend(v72, sel_constraintEqualToAnchor_, v75);
                              *(_QWORD *)(v55 + 48) = v76;
                              v77 = objc_msgSend(v2, (SEL)&BackgroundSuggestionsProvider.ivar_base_size);
                              if (v77)
                              {
                                v78 = v77;
                                v79 = objc_msgSend(v77, sel_bottomAnchor);

                                v80 = objc_msgSend(v36, (SEL)&BackgroundSuggestionsProvider.ivar_base_size);
                                if (v80)
                                {
                                  v81 = v80;
                                  v82 = objc_msgSend(v80, sel_bottomAnchor);

                                  v83 = objc_msgSend(v79, sel_constraintEqualToAnchor_, v82);
                                  *(_QWORD *)(v55 + 56) = v83;
                                  v84 = objc_msgSend(v2, (SEL)&BackgroundSuggestionsProvider.ivar_base_size);
                                  if (v84)
                                  {
                                    v85 = v84;
                                    v86 = objc_msgSend(v84, sel_leadingAnchor);

                                    v87 = objc_msgSend(*(id *)&v2[v37], sel_leadingAnchor);
                                    v88 = objc_msgSend(v86, sel_constraintEqualToAnchor_, v87);

                                    *(_QWORD *)(v55 + 64) = v88;
                                    v89 = objc_msgSend(v2, (SEL)&BackgroundSuggestionsProvider.ivar_base_size);
                                    if (v89)
                                    {
                                      v90 = v89;
                                      v91 = objc_msgSend(v89, sel_trailingAnchor);

                                      v92 = objc_msgSend(*(id *)&v2[v37], sel_trailingAnchor);
                                      v93 = objc_msgSend(v91, sel_constraintEqualToAnchor_, v92);

                                      *(_QWORD *)(v55 + 72) = v93;
                                      v94 = objc_msgSend(v2, (SEL)&BackgroundSuggestionsProvider.ivar_base_size);
                                      if (v94)
                                      {
                                        v95 = v94;
                                        v96 = objc_msgSend(v94, sel_topAnchor);

                                        v97 = objc_msgSend(*(id *)&v2[v37], sel_topAnchor);
                                        v98 = objc_msgSend(v96, sel_constraintEqualToAnchor_, v97);

                                        *(_QWORD *)(v55 + 80) = v98;
                                        v99 = objc_msgSend(v2, (SEL)&BackgroundSuggestionsProvider.ivar_base_size);
                                        if (v99)
                                        {
                                          v100 = v99;
                                          v101 = (void *)objc_opt_self();
                                          v102 = objc_msgSend(v100, sel_bottomAnchor);

                                          v103 = objc_msgSend(*(id *)&v2[v37], sel_bottomAnchor);
                                          v104 = objc_msgSend(v102, (SEL)&selRef_preferredFontDescriptorWithTextStyle_ + 6, v103);

                                          *(_QWORD *)(v55 + 88) = v104;
                                          v109[0] = v55;
                                          sub_1DD2F9EF8();
                                          sub_1DD2CDA0C(0, &qword_1EDB61510);
                                          v105 = (void *)sub_1DD2F9EC8();
                                          swift_bridgeObjectRelease();
                                          objc_msgSend(v101, sel_activateConstraints_, v105);

                                          v106 = objc_msgSend(v2, (SEL)&BackgroundSuggestionsProvider.ivar_base_size);
                                          if (v106)
                                          {
                                            v107 = v106;
                                            objc_msgSend(v106, sel_layoutIfNeeded);

                                            return;
                                          }
LABEL_67:
                                          __break(1u);
                                          return;
                                        }
LABEL_66:
                                        __break(1u);
                                        goto LABEL_67;
                                      }
LABEL_65:
                                      __break(1u);
                                      goto LABEL_66;
                                    }
LABEL_64:
                                    __break(1u);
                                    goto LABEL_65;
                                  }
LABEL_63:
                                  __break(1u);
                                  goto LABEL_64;
                                }
LABEL_62:
                                __break(1u);
                                goto LABEL_63;
                              }
LABEL_61:
                              __break(1u);
                              goto LABEL_62;
                            }
LABEL_60:
                            __break(1u);
                            goto LABEL_61;
                          }
LABEL_59:
                          __break(1u);
                          goto LABEL_60;
                        }
LABEL_58:
                        __break(1u);
                        goto LABEL_59;
                      }
LABEL_57:
                      __break(1u);
                      goto LABEL_58;
                    }
LABEL_56:
                    __break(1u);
                    goto LABEL_57;
                  }
LABEL_55:
                  __break(1u);
                  goto LABEL_56;
                }
LABEL_54:
                __break(1u);
                goto LABEL_55;
              }
LABEL_53:
              __break(1u);
              goto LABEL_54;
            }
LABEL_52:
            __break(1u);
            goto LABEL_53;
          }
        }
        else
        {
          __break(1u);
        }
        __break(1u);
        goto LABEL_52;
      }
      sub_1DD2CDA0C(0, &qword_1F03D0E28);
      v26 = v23;
      v27 = sub_1DD2F9FA0();

      if ((v27 & 1) == 0)
      {
LABEL_28:

        goto LABEL_30;
      }
    }
    else if (v24)
    {

      goto LABEL_30;
    }
    objc_msgSend(v20, sel_willMoveToParentViewController_, 0);
    objc_msgSend(v22, sel_removeFromSuperview);
    objc_msgSend(v20, sel_removeFromParentViewController);
    goto LABEL_28;
  }
  v7 = *(void **)&v2[OBJC_IVAR____TtC11EmojiPoster35EmojiForegroundLayersViewController_implementationVC];
  if (v7
    && (v8 = *(_QWORD *)&v2[OBJC_IVAR____TtC11EmojiPoster35EmojiForegroundLayersViewController_implementationVC + 8],
        v109[0] = *(_QWORD *)&v2[OBJC_IVAR____TtC11EmojiPoster35EmojiForegroundLayersViewController_implementationVC],
        v109[1] = v8,
        v9 = v7,
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EDB60F18),
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EDB60F10),
        (swift_dynamicCast() & 1) != 0))
  {
    if (*((_QWORD *)&v111 + 1))
    {
      sub_1DD2CD9CC(&v110, (uint64_t)v113);
      sub_1DD2C37E8(v3, (uint64_t)v109);
      v10 = v114;
      v11 = v115;
      __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v113, v114);
      sub_1DD2C37E8((uint64_t)v109, (uint64_t)v108);
      v12 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v11 + 16);
      sub_1DD2C3968((uint64_t)v109, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1DD2C3830);
      v12(v108, v10, v11);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v113);
      return;
    }
  }
  else
  {
    v112 = 0;
    v110 = 0u;
    v111 = 0u;
  }
  sub_1DD2CD98C((uint64_t)&v110);
}

uint64_t sub_1DD2CC624@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  _BYTE v5[128];

  v3 = v1 + OBJC_IVAR____TtC11EmojiPoster35EmojiForegroundLayersViewController_configuration;
  swift_beginAccess();
  sub_1DD2C37E8(v3, (uint64_t)v5);
  sub_1DD2C37E8((uint64_t)v5, a1);
  return sub_1DD2C3968((uint64_t)v5, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1DD2C3830);
}

uint64_t sub_1DD2CC690(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _BYTE v4[128];
  _BYTE v5[128];
  _BYTE v6[128];
  _BYTE v7[136];

  sub_1DD2C37E8(a1, (uint64_t)v5);
  v2 = v1 + OBJC_IVAR____TtC11EmojiPoster35EmojiForegroundLayersViewController_configuration;
  swift_beginAccess();
  sub_1DD2C37E8(v2, (uint64_t)v6);
  sub_1DD2C37E8(v2, (uint64_t)v7);
  sub_1DD2C37E8((uint64_t)v5, v2);
  sub_1DD2C3968((uint64_t)v6, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1DD2C3830);
  sub_1DD2C3968((uint64_t)v7, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1DD2C39CC);
  sub_1DD2C37E8((uint64_t)v6, (uint64_t)v4);
  sub_1DD2CBBD8((uint64_t)v4);
  return sub_1DD2C3968((uint64_t)v6, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1DD2C39CC);
}

void (*sub_1DD2CC740(_QWORD *a1))(_QWORD **a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = malloc(0x3A8uLL);
  *a1 = v3;
  v3[115] = v1;
  v4 = OBJC_IVAR____TtC11EmojiPoster35EmojiForegroundLayersViewController_configuration;
  v3[116] = OBJC_IVAR____TtC11EmojiPoster35EmojiForegroundLayersViewController_configuration;
  v5 = v1 + v4;
  swift_beginAccess();
  sub_1DD2C37E8(v5, (uint64_t)v3);
  sub_1DD2C37E8((uint64_t)v3, (uint64_t)(v3 + 16));
  sub_1DD2C3968((uint64_t)v3, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1DD2C3830);
  return sub_1DD2CC7D4;
}

void sub_1DD2CC7D4(_QWORD **a1, char a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v2 = *a1;
  v3 = (uint64_t)(*a1 + 16);
  v4 = (uint64_t)(*a1 + 32);
  v5 = (uint64_t)(*a1 + 48);
  v6 = (uint64_t)(*a1 + 64);
  v7 = (uint64_t)(*a1 + 80);
  if ((a2 & 1) != 0)
  {
    v8 = v2[115] + v2[116];
    sub_1DD2C37E8((uint64_t)(*a1 + 16), v7);
    sub_1DD2C37E8(v8, v6);
    sub_1DD2C37E8(v8, v5);
    sub_1DD2C37E8(v7, v8);
    sub_1DD2C3968(v7, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1DD2C3830);
    sub_1DD2C3968(v6, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1DD2C3830);
    sub_1DD2C3968(v5, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1DD2C39CC);
    sub_1DD2C37E8(v6, (uint64_t)(v2 + 96));
    sub_1DD2CBBD8((uint64_t)(v2 + 96));
    sub_1DD2C3968(v6, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1DD2C39CC);
    sub_1DD2C37E8(v3, v4);
    v6 = v4;
  }
  else
  {
    v9 = v2[115] + v2[116];
    sub_1DD2C37E8((uint64_t)(*a1 + 16), v7);
    sub_1DD2C37E8(v9, v6);
    sub_1DD2C37E8(v9, v5);
    sub_1DD2C37E8(v7, v9);
    sub_1DD2C3968(v6, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1DD2C3830);
    sub_1DD2C3968(v5, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1DD2C39CC);
    sub_1DD2C37E8(v6, v4);
    sub_1DD2CBBD8(v4);
  }
  sub_1DD2C3968(v6, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1DD2C39CC);
  free(v2);
}

id EmojiForegroundLayersViewController.__allocating_init(emojiRenderer:)(uint64_t a1)
{
  objc_class *v1;
  id v3;
  id v4;

  v3 = objc_allocWithZone(v1);
  v4 = sub_1DD2CD5F0(a1);
  swift_release();
  return v4;
}

id EmojiForegroundLayersViewController.init(emojiRenderer:)(uint64_t a1)
{
  id v1;

  v1 = sub_1DD2CD5F0(a1);
  swift_release();
  return v1;
}

id EmojiForegroundLayersViewController.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

id EmojiForegroundLayersViewController.init(coder:)(void *a1)
{
  char *v1;
  char *v3;
  uint64_t v4;
  id v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  id v10;
  objc_super v12;
  _OWORD v13[8];

  v3 = &v1[OBJC_IVAR____TtC11EmojiPoster35EmojiForegroundLayersViewController_implementationVC];
  *(_QWORD *)v3 = 0;
  *((_QWORD *)v3 + 1) = 0;
  v4 = OBJC_IVAR____TtC11EmojiPoster35EmojiForegroundLayersViewController_dimmingView;
  v5 = objc_allocWithZone(MEMORY[0x1E0DC3F10]);
  v6 = v1;
  *(_QWORD *)&v1[v4] = objc_msgSend(v5, sel_init);
  *(_QWORD *)&v6[OBJC_IVAR____TtC11EmojiPoster35EmojiForegroundLayersViewController_deviceOrientation] = 1;
  v7 = (uint64_t)&v6[OBJC_IVAR____TtC11EmojiPoster35EmojiForegroundLayersViewController_configuration];
  sub_1DD2C618C(v13);
  sub_1DD2C37E8((uint64_t)v13, v7);
  *(_QWORD *)&v6[OBJC_IVAR____TtC11EmojiPoster35EmojiForegroundLayersViewController_wakeProgress] = 0x3FF0000000000000;
  *(_QWORD *)&v6[OBJC_IVAR____TtC11EmojiPoster35EmojiForegroundLayersViewController_unlockProgress] = 0;
  type metadata accessor for EmojiRenderer();
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = 10;
  v9 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C99D38]), sel_init);
  *(_QWORD *)(v8 + 24) = v9;
  objc_msgSend(v9, sel_setCountLimit_, 10);
  *(_QWORD *)&v6[OBJC_IVAR____TtC11EmojiPoster35EmojiForegroundLayersViewController_emojiRenderer] = v8;

  v12.receiver = v6;
  v12.super_class = (Class)type metadata accessor for EmojiForegroundLayersViewController();
  v10 = objc_msgSendSuper2(&v12, sel_initWithCoder_, a1);

  return v10;
}

void sub_1DD2CCB6C()
{
  void *v0;
  id v1;
  void *v2;
  objc_super v3;

  v3.receiver = v0;
  v3.super_class = (Class)type metadata accessor for EmojiForegroundLayersViewController();
  objc_msgSendSuper2(&v3, sel_viewDidLoad);
  v1 = objc_msgSend(v0, sel_view);
  if (v1)
  {
    v2 = v1;
    objc_msgSend(v1, sel_setClipsToBounds_, 0);

  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1DD2CCC60()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  double *v5;
  double v6;
  uint64_t v7;
  uint64_t v8;
  double *v9;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  _QWORD v14[3];
  uint64_t v15;
  uint64_t v16;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC11EmojiPoster35EmojiForegroundLayersViewController_implementationVC);
  if (!v1
    || (v2 = v0,
        v3 = *(_QWORD *)(v0 + OBJC_IVAR____TtC11EmojiPoster35EmojiForegroundLayersViewController_implementationVC + 8),
        v14[0] = *(_QWORD *)(v0 + OBJC_IVAR____TtC11EmojiPoster35EmojiForegroundLayersViewController_implementationVC),
        v14[1] = v3,
        v4 = v1,
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EDB60F18),
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EDB60F10),
        (swift_dynamicCast() & 1) == 0))
  {
    v13 = 0;
    v11 = 0u;
    v12 = 0u;
    return sub_1DD2CD98C((uint64_t)&v11);
  }
  if (!*((_QWORD *)&v12 + 1))
    return sub_1DD2CD98C((uint64_t)&v11);
  sub_1DD2CD9CC(&v11, (uint64_t)v14);
  if (!UIAccessibilityIsReduceMotionEnabled())
  {
    v5 = (double *)(v0 + OBJC_IVAR____TtC11EmojiPoster35EmojiForegroundLayersViewController_wakeProgress);
    swift_beginAccess();
    v6 = *v5;
    v7 = v15;
    v8 = v16;
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v14, v15);
    (*(void (**)(uint64_t, uint64_t, double))(v8 + 40))(v7, v8, v6);
  }
  v9 = (double *)(v2 + OBJC_IVAR____TtC11EmojiPoster35EmojiForegroundLayersViewController_wakeProgress);
  swift_beginAccess();
  objc_msgSend(*(id *)(v2 + OBJC_IVAR____TtC11EmojiPoster35EmojiForegroundLayersViewController_dimmingView), sel_setAlpha_, (1.0 - *v9) * 0.75 + 0.0);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v14);
}

double sub_1DD2CCDCC()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + OBJC_IVAR____TtC11EmojiPoster35EmojiForegroundLayersViewController_wakeProgress;
  swift_beginAccess();
  return *(double *)v1;
}

uint64_t sub_1DD2CCE10(double a1)
{
  return sub_1DD2CCFFC(&OBJC_IVAR____TtC11EmojiPoster35EmojiForegroundLayersViewController_wakeProgress, (uint64_t (*)(uint64_t))sub_1DD2CCC60, a1);
}

uint64_t (*sub_1DD2CCE24(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1DD2CCE6C;
}

uint64_t sub_1DD2CCE6C(uint64_t a1, char a2)
{
  return sub_1DD2CD0AC(a1, a2, (uint64_t (*)(uint64_t))sub_1DD2CCC60);
}

uint64_t sub_1DD2CCE78()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;
  double *v4;
  double v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  _QWORD v12[3];
  uint64_t v13;
  uint64_t v14;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC11EmojiPoster35EmojiForegroundLayersViewController_implementationVC);
  if (!v1
    || (v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtC11EmojiPoster35EmojiForegroundLayersViewController_implementationVC + 8),
        v12[0] = *(_QWORD *)(v0 + OBJC_IVAR____TtC11EmojiPoster35EmojiForegroundLayersViewController_implementationVC),
        v12[1] = v2,
        v3 = v1,
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EDB60F18),
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EDB60F10),
        (swift_dynamicCast() & 1) == 0))
  {
    v11 = 0;
    v9 = 0u;
    v10 = 0u;
    return sub_1DD2CD98C((uint64_t)&v9);
  }
  if (!*((_QWORD *)&v10 + 1))
    return sub_1DD2CD98C((uint64_t)&v9);
  sub_1DD2CD9CC(&v9, (uint64_t)v12);
  if (!UIAccessibilityIsReduceMotionEnabled()
    && (objc_msgSend((id)objc_opt_self(), sel_shouldSkipUnlockAnimationForCurrentDevice) & 1) == 0)
  {
    v4 = (double *)(v0 + OBJC_IVAR____TtC11EmojiPoster35EmojiForegroundLayersViewController_unlockProgress);
    swift_beginAccess();
    v5 = *v4;
    v6 = v13;
    v7 = v14;
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v12, v13);
    (*(void (**)(uint64_t, uint64_t, double))(v7 + 64))(v6, v7, v5);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
}

double sub_1DD2CCFA4()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + OBJC_IVAR____TtC11EmojiPoster35EmojiForegroundLayersViewController_unlockProgress;
  swift_beginAccess();
  return *(double *)v1;
}

uint64_t sub_1DD2CCFE8(double a1)
{
  return sub_1DD2CCFFC(&OBJC_IVAR____TtC11EmojiPoster35EmojiForegroundLayersViewController_unlockProgress, (uint64_t (*)(uint64_t))sub_1DD2CCE78, a1);
}

uint64_t sub_1DD2CCFFC(_QWORD *a1, uint64_t (*a2)(uint64_t), double a3)
{
  uint64_t v3;
  double *v6;
  uint64_t v7;

  v6 = (double *)(v3 + *a1);
  v7 = swift_beginAccess();
  *v6 = a3;
  return a2(v7);
}

uint64_t (*sub_1DD2CD058(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1DD2CD0A0;
}

uint64_t sub_1DD2CD0A0(uint64_t a1, char a2)
{
  return sub_1DD2CD0AC(a1, a2, (uint64_t (*)(uint64_t))sub_1DD2CCE78);
}

uint64_t sub_1DD2CD0AC(uint64_t a1, char a2, uint64_t (*a3)(uint64_t))
{
  uint64_t result;

  result = swift_endAccess();
  if ((a2 & 1) == 0)
    return a3(result);
  return result;
}

id sub_1DD2CD0F0()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  id v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  _BYTE v11[128];
  _OWORD v12[6];
  _OWORD v13[2];
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  _OWORD v20[2];
  _QWORD v21[16];
  _BYTE v22[128];
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  _BYTE v29[25];

  v1 = v0 + OBJC_IVAR____TtC11EmojiPoster35EmojiForegroundLayersViewController_configuration;
  swift_beginAccess();
  sub_1DD2C37E8(v1, (uint64_t)v22);
  sub_1DD2C37E8((uint64_t)v22, (uint64_t)&v23);
  v2 = 0;
  if (sub_1DD2C61E4((uint64_t)&v23) != 1)
  {
    if (v29[10])
    {
      if (v29[10] == 1)
      {
        swift_beginAccess();
        v3 = objc_allocWithZone((Class)type metadata accessor for EmojiForegroundCircularLayersViewController());
        sub_1DD2C3968((uint64_t)v22, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1DD2C3830);
        v4 = swift_retain();
        v2 = sub_1DD2C911C(v4);
        swift_release();
        v18 = v27;
        v19 = v28;
        v20[0] = *(_OWORD *)v29;
        *(_OWORD *)((char *)v20 + 9) = *(_OWORD *)&v29[9];
        v14 = v23;
        v15 = v24;
        v16 = v25;
        v17 = v26;
        nullsub_1(&v14);
        sub_1DD2C37E8((uint64_t)&v14, (uint64_t)v12);
        sub_1DD2C37E8((uint64_t)v22, (uint64_t)v21);
        sub_1DD2BFA24(v21);
        sub_1DD2C6A60((uint64_t)v12);
      }
      else
      {
        swift_beginAccess();
        v8 = objc_allocWithZone((Class)type metadata accessor for EmojiForegroundSpiralLayersViewController());
        sub_1DD2C3968((uint64_t)v22, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1DD2C3830);
        v9 = swift_retain();
        v2 = sub_1DD2D38BC(v9);
        swift_release();
        v18 = v27;
        v19 = v28;
        v20[0] = *(_OWORD *)v29;
        *(_OWORD *)((char *)v20 + 9) = *(_OWORD *)&v29[9];
        v14 = v23;
        v15 = v24;
        v16 = v25;
        v17 = v26;
        nullsub_1(&v14);
        sub_1DD2C37E8((uint64_t)&v14, (uint64_t)v12);
        sub_1DD2C37E8((uint64_t)v22, (uint64_t)v21);
        sub_1DD2BFA24(v21);
        sub_1DD2D11D0((uint64_t)v12);
      }
      sub_1DD2C3968((uint64_t)v22, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1DD2C39CC);
    }
    else
    {
      swift_beginAccess();
      v5 = objc_allocWithZone((Class)type metadata accessor for EmojiForegroundGridLayersViewController());
      sub_1DD2C3968((uint64_t)v22, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1DD2C3830);
      v6 = swift_retain();
      v2 = sub_1DD2C6030(v6);
      swift_release();
      v12[4] = v27;
      v12[5] = v28;
      v13[0] = *(_OWORD *)v29;
      *(_OWORD *)((char *)v13 + 9) = *(_OWORD *)&v29[9];
      v12[0] = v23;
      v12[1] = v24;
      v12[2] = v25;
      v12[3] = v26;
      nullsub_1(v12);
      v7 = (uint64_t)v2 + OBJC_IVAR____TtC11EmojiPoster39EmojiForegroundGridLayersViewController_configuration;
      swift_beginAccess();
      sub_1DD2C37E8(v7, (uint64_t)&v14);
      sub_1DD2C37E8(v7, (uint64_t)v21);
      sub_1DD2C37E8((uint64_t)v12, v7);
      sub_1DD2C3968((uint64_t)v22, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1DD2C3830);
      sub_1DD2C3968((uint64_t)&v14, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1DD2C3830);
      sub_1DD2C3968((uint64_t)v21, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1DD2C39CC);
      sub_1DD2C37E8((uint64_t)&v14, (uint64_t)v11);
      sub_1DD2C3268((uint64_t)v11);
      sub_1DD2C3968((uint64_t)&v14, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1DD2C39CC);
      sub_1DD2C3968((uint64_t)v22, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1DD2C39CC);
    }
  }
  return v2;
}

id EmojiForegroundLayersViewController.__allocating_init(nibName:bundle:)(uint64_t a1, uint64_t a2, void *a3)
{
  objc_class *v3;
  objc_class *v4;
  void *v6;
  id v7;

  v4 = v3;
  if (a2)
  {
    v6 = (void *)sub_1DD2F9DB4();
    swift_bridgeObjectRelease();
  }
  else
  {
    v6 = 0;
  }
  v7 = objc_msgSend(objc_allocWithZone(v4), sel_initWithNibName_bundle_, v6, a3);

  return v7;
}

void EmojiForegroundLayersViewController.init(nibName:bundle:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id EmojiForegroundLayersViewController.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for EmojiForegroundLayersViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id sub_1DD2CD5F0(uint64_t a1)
{
  char *v1;
  char *v3;
  uint64_t v4;
  id v5;
  char *v6;
  uint64_t v7;
  objc_super v9;
  _OWORD v10[8];

  v3 = &v1[OBJC_IVAR____TtC11EmojiPoster35EmojiForegroundLayersViewController_implementationVC];
  *(_QWORD *)v3 = 0;
  *((_QWORD *)v3 + 1) = 0;
  v4 = OBJC_IVAR____TtC11EmojiPoster35EmojiForegroundLayersViewController_dimmingView;
  v5 = objc_allocWithZone(MEMORY[0x1E0DC3F10]);
  v6 = v1;
  *(_QWORD *)&v1[v4] = objc_msgSend(v5, sel_init);
  *(_QWORD *)&v6[OBJC_IVAR____TtC11EmojiPoster35EmojiForegroundLayersViewController_deviceOrientation] = 1;
  v7 = (uint64_t)&v6[OBJC_IVAR____TtC11EmojiPoster35EmojiForegroundLayersViewController_configuration];
  sub_1DD2C618C(v10);
  sub_1DD2C37E8((uint64_t)v10, v7);
  *(_QWORD *)&v6[OBJC_IVAR____TtC11EmojiPoster35EmojiForegroundLayersViewController_wakeProgress] = 0x3FF0000000000000;
  *(_QWORD *)&v6[OBJC_IVAR____TtC11EmojiPoster35EmojiForegroundLayersViewController_unlockProgress] = 0;
  *(_QWORD *)&v6[OBJC_IVAR____TtC11EmojiPoster35EmojiForegroundLayersViewController_emojiRenderer] = a1;
  swift_retain();

  v9.receiver = v6;
  v9.super_class = (Class)type metadata accessor for EmojiForegroundLayersViewController();
  return objc_msgSendSuper2(&v9, sel_initWithNibName_bundle_, 0, 0);
}

uint64_t type metadata accessor for EmojiForegroundLayersViewController()
{
  return objc_opt_self();
}

uint64_t sub_1DD2CD70C@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v3;

  v3 = (_QWORD *)(*a1 + OBJC_IVAR____TtC11EmojiPoster35EmojiForegroundLayersViewController_emojiRenderer);
  swift_beginAccess();
  *a2 = *v3;
  return swift_retain();
}

double sub_1DD2CD76C@<D0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return keypath_get_4Tm(a1, &OBJC_IVAR____TtC11EmojiPoster35EmojiForegroundLayersViewController_wakeProgress, a2);
}

uint64_t sub_1DD2CD778(uint64_t *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_4Tm(a1, a2, a3, a4, &OBJC_IVAR____TtC11EmojiPoster35EmojiForegroundLayersViewController_wakeProgress, (uint64_t (*)(uint64_t))sub_1DD2CCC60);
}

double sub_1DD2CD78C@<D0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return keypath_get_4Tm(a1, &OBJC_IVAR____TtC11EmojiPoster35EmojiForegroundLayersViewController_unlockProgress, a2);
}

uint64_t sub_1DD2CD798(uint64_t *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_4Tm(a1, a2, a3, a4, &OBJC_IVAR____TtC11EmojiPoster35EmojiForegroundLayersViewController_unlockProgress, (uint64_t (*)(uint64_t))sub_1DD2CCE78);
}

uint64_t keypath_set_4Tm(uint64_t *a1, _QWORD *a2, uint64_t a3, uint64_t a4, _QWORD *a5, uint64_t (*a6)(uint64_t))
{
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;

  v7 = *a1;
  v8 = (_QWORD *)(*a2 + *a5);
  v9 = swift_beginAccess();
  *v8 = v7;
  return a6(v9);
}

uint64_t method lookup function for EmojiForegroundLayersViewController()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of EmojiForegroundLayersViewController.emojiRenderer.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x88))();
}

uint64_t dispatch thunk of EmojiForegroundLayersViewController.emojiRenderer.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x90))();
}

uint64_t dispatch thunk of EmojiForegroundLayersViewController.emojiRenderer.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x98))();
}

uint64_t dispatch thunk of EmojiForegroundLayersViewController.setDeviceInterfaceOrientation(_:animated:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xE8))();
}

uint64_t dispatch thunk of EmojiForegroundLayersViewController.configuration.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xF0))();
}

uint64_t dispatch thunk of EmojiForegroundLayersViewController.configuration.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xF8))();
}

uint64_t dispatch thunk of EmojiForegroundLayersViewController.configuration.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x100))();
}

uint64_t dispatch thunk of EmojiForegroundLayersViewController.__allocating_init(emojiRenderer:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 264))();
}

uint64_t dispatch thunk of EmojiForegroundLayersViewController.wakeProgress.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x118))();
}

uint64_t dispatch thunk of EmojiForegroundLayersViewController.wakeProgress.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x120))();
}

uint64_t dispatch thunk of EmojiForegroundLayersViewController.wakeProgress.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x128))();
}

uint64_t dispatch thunk of EmojiForegroundLayersViewController.unlockProgress.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x130))();
}

uint64_t dispatch thunk of EmojiForegroundLayersViewController.unlockProgress.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x138))();
}

uint64_t dispatch thunk of EmojiForegroundLayersViewController.unlockProgress.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x140))();
}

uint64_t sub_1DD2CD98C(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F03D0E20);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1DD2CD9CC(__int128 *a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;

  v2 = *a1;
  v3 = a1[1];
  *(_QWORD *)(a2 + 32) = *((_QWORD *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

uint64_t __swift_mutable_project_boxed_opaque_existential_1(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
  {
    swift_makeBoxUnique();
    return v2;
  }
  return result;
}

uint64_t sub_1DD2CDA0C(uint64_t a1, unint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

double sub_1DD2CDABC()
{
  void *v0;
  id v1;
  void *v2;
  double v3;
  double v4;

  v1 = objc_msgSend(v0, sel_collectionView);
  if (!v1)
    return 0.0;
  v2 = v1;
  objc_msgSend(v1, sel_bounds);
  v4 = v3;

  return v4;
}

void sub_1DD2CDB28()
{
  char *v0;
  id v1;
  void *v2;
  double v3;
  double v4;

  v1 = objc_msgSend(v0, sel_collectionView);
  if (v1)
  {
    v2 = v1;
    objc_msgSend(v1, sel_bounds);
    v4 = v3;

    *(double *)&v0[OBJC_IVAR____TtC11EmojiPoster17EmojiSpiralLayout_radius] = (v4 + 40.0) * 0.5;
  }
}

id sub_1DD2CDC24()
{
  char *v0;
  id v1;
  void *v2;
  void *v3;
  id v4;
  double MidX;
  double MidY;
  double v7;
  uint64_t v8;
  id v9;
  double v10;
  uint64_t v11;
  double v12;
  double v13;
  uint64_t v14;
  long double v15;
  double v16;
  double v17;
  uint64_t v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  long double v25;
  double v26;
  long double v27;
  __double2 v28;
  CGRect v30;
  CGRect v31;
  CGRect v32;
  CGRect v33;

  v1 = objc_msgSend(v0, sel_collectionView);
  if (!v1)
    return 0;
  v2 = v1;
  v3 = (void *)sub_1DD2F9C7C();
  v4 = objc_msgSend((id)objc_opt_self(), sel_layoutAttributesForCellWithIndexPath_, v3);

  objc_msgSend(v2, sel_bounds);
  MidX = CGRectGetMidX(v30);
  objc_msgSend(v2, sel_bounds);
  MidY = CGRectGetMidY(v31);
  v7 = 195.0 / (double)(uint64_t)objc_msgSend(v2, sel_numberOfItemsInSection_, sub_1DD2F9CAC());
  v8 = sub_1DD2F9CA0();
  objc_msgSend(v4, sel_setSize_, v7 * ((double)v8 + 1.0), v7 * ((double)v8 + 1.0));
  v9 = objc_msgSend(v2, sel_numberOfItemsInSection_, sub_1DD2F9CAC());
  if ((double)(uint64_t)v9 > 1.0)
    v10 = (double)(uint64_t)v9;
  else
    v10 = 1.0;
  v11 = OBJC_IVAR____TtC11EmojiPoster17EmojiSpiralLayout_radius;
  v12 = *(double *)&v0[OBJC_IVAR____TtC11EmojiPoster17EmojiSpiralLayout_radius];
  v13 = v12 * (double)sub_1DD2F9CA0() / v10;
  v14 = sub_1DD2F9CA0();
  v15 = v13 * cos((double)v14 * -3.14159265 / v10);
  v16 = *(double *)&v0[v11];
  v17 = v16 * (double)sub_1DD2F9CA0() / v10;
  v18 = sub_1DD2F9CA0();
  v19 = MidX + v15;
  v20 = MidY + v17 * sin((double)v18 * -3.14159265 / v10);
  objc_msgSend(v2, sel_bounds);
  v21 = CGRectGetMidX(v32);
  objc_msgSend(v2, sel_bounds);
  v22 = CGRectGetMidY(v33);
  v23 = 360.0 / (double)(uint64_t)objc_msgSend(v2, sel_numberOfSections);
  v24 = v23 * (double)sub_1DD2F9CAC() + *(double *)&v0[OBJC_IVAR____TtC11EmojiPoster17EmojiSpiralLayout_startingAngle];
  if (v24 > 0.0)
  {
    v25 = v20 - v22;
    v26 = sqrt((v19 - v21) * (v19 - v21) + v25 * v25);
    v27 = atan2(v25, v19 - v21);
    v28 = __sincos_stret(v24 * 0.0174532925 + v27);
    v19 = v21 + v26 * v28.__cosval;
    v20 = v22 + v26 * v28.__sinval;
  }
  objc_msgSend(v4, sel_setCenter_, v19, v20);

  return v4;
}

id sub_1DD2CDFAC(double a1, double a2, CGFloat a3, CGFloat a4)
{
  void *v4;
  id result;
  void *v8;
  CGFloat v9;
  CGFloat v10;
  _BOOL4 v11;
  CGSize v12;
  CGSize v13;

  result = objc_msgSend(v4, sel_collectionView);
  if (result)
  {
    v8 = result;
    objc_msgSend(result, sel_bounds);
    v12.width = v9;
    v12.height = v10;
    v13.width = a3;
    v13.height = a4;
    v11 = CGSizeEqualToSize(v12, v13);

    return (id)!v11;
  }
  return result;
}

id EmojiSpiralLayout.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

id EmojiSpiralLayout.init()()
{
  char *v0;
  objc_super v2;

  *(_QWORD *)&v0[OBJC_IVAR____TtC11EmojiPoster17EmojiSpiralLayout_radius] = 0x3FF0000000000000;
  *(_QWORD *)&v0[OBJC_IVAR____TtC11EmojiPoster17EmojiSpiralLayout_startingAngle] = 0;
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for EmojiSpiralLayout();
  return objc_msgSendSuper2(&v2, sel_init);
}

id EmojiSpiralLayout.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

id EmojiSpiralLayout.init(coder:)(void *a1)
{
  char *v1;
  id v3;
  objc_super v5;

  *(_QWORD *)&v1[OBJC_IVAR____TtC11EmojiPoster17EmojiSpiralLayout_radius] = 0x3FF0000000000000;
  *(_QWORD *)&v1[OBJC_IVAR____TtC11EmojiPoster17EmojiSpiralLayout_startingAngle] = 0;
  v5.receiver = v1;
  v5.super_class = (Class)type metadata accessor for EmojiSpiralLayout();
  v3 = objc_msgSendSuper2(&v5, sel_initWithCoder_, a1);

  return v3;
}

id EmojiSpiralLayout.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for EmojiSpiralLayout();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

char *sub_1DD2CE2AC()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  char *result;
  id v7;
  char *v8;
  char *v9;
  char *v10;
  void *v11;
  id v12;
  id v13;
  BOOL v14;
  uint64_t v15;
  char *v16;
  id v17;
  uint64_t v18;

  v1 = v0;
  v2 = sub_1DD2F9CB8();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = (char *)objc_msgSend(v0, sel_collectionView);
  if (result)
  {
    v7 = result;
    v18 = MEMORY[0x1E0DEE9D8];
    if ((uint64_t)objc_msgSend(result, sel_numberOfSections) < 1)
    {

      swift_bridgeObjectRelease();
      return 0;
    }
    else
    {
      result = (char *)objc_msgSend(v7, sel_numberOfSections);
      if (__OFSUB__(result, 1))
        goto LABEL_27;
      if (((unint64_t)(result - 1) & 0x8000000000000000) == 0)
      {
        v8 = 0;
        v16 = result - 1;
        v17 = v7;
        while (1)
        {
          if ((uint64_t)objc_msgSend(v7, sel_numberOfItemsInSection_, v8) >= 1)
          {
            result = (char *)objc_msgSend(v17, sel_numberOfItemsInSection_, v8);
            v9 = result - 1;
            if (__OFSUB__(result, 1))
            {
LABEL_25:
              __break(1u);
LABEL_26:
              __break(1u);
LABEL_27:
              __break(1u);
              break;
            }
            if (((unint64_t)v9 & 0x8000000000000000) != 0)
              goto LABEL_26;
            v10 = 0;
            while (1)
            {
              MEMORY[0x1DF0D7230](v10, v8);
              v11 = (void *)sub_1DD2F9C7C();
              v12 = objc_msgSend(v1, sel_layoutAttributesForItemAtIndexPath_, v11);

              if (v12)
              {
                v13 = v12;
                MEMORY[0x1DF0D7458]();
                if (*(_QWORD *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
                  sub_1DD2F9F04();
                sub_1DD2F9F10();
                sub_1DD2F9EF8();

              }
              result = (char *)(*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
              if (v9 == v10)
                break;
              v14 = __OFADD__(v10++, 1);
              if (v14)
              {
                __break(1u);
                goto LABEL_25;
              }
            }
          }
          if (v8 == v16)
            goto LABEL_22;
          v14 = __OFADD__(v8++, 1);
          v7 = v17;
          if (v14)
          {
            __break(1u);
LABEL_22:

            return (char *)v18;
          }
        }
      }
      __break(1u);
    }
  }
  return result;
}

uint64_t type metadata accessor for EmojiSpiralLayout()
{
  return objc_opt_self();
}

uint64_t method lookup function for EmojiSpiralLayout()
{
  return swift_lookUpClassMethod();
}

unint64_t sub_1DD2CE504()
{
  unint64_t result;

  result = qword_1F03D0E68;
  if (!qword_1F03D0E68)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1F03D0E68);
  }
  return result;
}

uint64_t sub_1DD2CE540(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t sub_1DD2CE548(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t sub_1DD2CE550(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t sub_1DD2CE558(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

id sub_1DD2CE560(double a1, double a2, double a3, double a4)
{
  void *v4;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  objc_super v15;

  v15.receiver = v4;
  v15.super_class = (Class)type metadata accessor for ColorWellView();
  v9 = objc_msgSendSuper2(&v15, sel_initWithFrame_, a1, a2, a3, a4);
  v10 = objc_msgSend(v9, sel_layer);
  objc_msgSend(v10, sel_setBorderWidth_, 6.0);

  v11 = objc_msgSend(v9, sel_layer);
  v12 = objc_msgSend((id)objc_opt_self(), sel_whiteColor);
  v13 = objc_msgSend(v12, sel_CGColor);

  objc_msgSend(v11, sel_setBorderColor_, v13);
  return v9;
}

id sub_1DD2CE6A0(void *a1)
{
  void *v1;
  id v3;
  id v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  objc_super v11;

  v11.receiver = v1;
  v11.super_class = (Class)type metadata accessor for ColorWellView();
  v3 = objc_msgSendSuper2(&v11, sel_initWithCoder_, a1);
  v4 = v3;
  if (v3)
  {
    v5 = v3;
    v6 = objc_msgSend(v5, sel_layer);
    objc_msgSend(v6, sel_setBorderWidth_, 6.0);

    v7 = objc_msgSend(v5, sel_layer);
    v8 = objc_msgSend((id)objc_opt_self(), sel_whiteColor);
    v9 = objc_msgSend(v8, sel_CGColor);

    objc_msgSend(v7, sel_setBorderColor_, v9);
    a1 = v9;
  }

  return v4;
}

id sub_1DD2CE844()
{
  return sub_1DD2CF81C(type metadata accessor for ColorWellView);
}

uint64_t type metadata accessor for ColorWellView()
{
  return objc_opt_self();
}

void sub_1DD2CE874()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  id v9;

  v1 = OBJC_IVAR____TtC11EmojiPoster19GradientColorSlider_leftColor;
  objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC11EmojiPoster19GradientColorSlider_leftColorView), sel_setBackgroundColor_, *(_QWORD *)(v0 + OBJC_IVAR____TtC11EmojiPoster19GradientColorSlider_leftColor));
  v2 = OBJC_IVAR____TtC11EmojiPoster19GradientColorSlider_rightColor;
  objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC11EmojiPoster19GradientColorSlider_rightColorView), sel_setBackgroundColor_, *(_QWORD *)(v0 + OBJC_IVAR____TtC11EmojiPoster19GradientColorSlider_rightColor));
  v3 = *(void **)(v0 + OBJC_IVAR____TtC11EmojiPoster19GradientColorSlider_gradientLayer);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F03D0F30);
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1DD2FE420;
  v5 = objc_msgSend(*(id *)(v0 + v1), sel_CGColor);
  type metadata accessor for CGColor(0);
  v7 = v6;
  *(_QWORD *)(v4 + 56) = v6;
  *(_QWORD *)(v4 + 32) = v5;
  v8 = objc_msgSend(*(id *)(v0 + v2), sel_CGColor);
  *(_QWORD *)(v4 + 88) = v7;
  *(_QWORD *)(v4 + 64) = v8;
  v9 = (id)sub_1DD2F9EC8();
  swift_bridgeObjectRelease();
  objc_msgSend(v3, sel_setColors_, v9);

}

id sub_1DD2CE9A8(double a1, double a2, double a3, double a4)
{
  char *v4;
  uint64_t v9;
  void *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  objc_class *ObjCClassFromMetadata;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  objc_super v23;

  *(_QWORD *)&v4[OBJC_IVAR____TtC11EmojiPoster19GradientColorSlider_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  v9 = OBJC_IVAR____TtC11EmojiPoster19GradientColorSlider_leftColor;
  v10 = (void *)objc_opt_self();
  v11 = v4;
  *(_QWORD *)&v4[v9] = objc_msgSend(v10, sel_whiteColor);
  v12 = OBJC_IVAR____TtC11EmojiPoster19GradientColorSlider_rightColor;
  *(_QWORD *)&v11[v12] = objc_msgSend(v10, sel_blackColor);
  *(_QWORD *)&v11[OBJC_IVAR____TtC11EmojiPoster19GradientColorSlider_leftColorOffset] = 0;
  *(_QWORD *)&v11[OBJC_IVAR____TtC11EmojiPoster19GradientColorSlider_rightColorOffset] = 0x3FF0000000000000;
  v13 = OBJC_IVAR____TtC11EmojiPoster19GradientColorSlider_gradientLayer;
  *(_QWORD *)&v11[v13] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CD2790]), sel_init);
  v14 = OBJC_IVAR____TtC11EmojiPoster19GradientColorSlider_leftColorView;
  type metadata accessor for ColorWellView();
  ObjCClassFromMetadata = (objc_class *)swift_getObjCClassFromMetadata();
  *(_QWORD *)&v11[v14] = objc_msgSend(objc_allocWithZone(ObjCClassFromMetadata), sel_init);
  v16 = OBJC_IVAR____TtC11EmojiPoster19GradientColorSlider_rightColorView;
  *(_QWORD *)&v11[v16] = objc_msgSend(objc_allocWithZone(ObjCClassFromMetadata), sel_init);
  v17 = OBJC_IVAR____TtC11EmojiPoster19GradientColorSlider_leftColorTapGesture;
  *(_QWORD *)&v11[v17] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3D80]), sel_init);
  v18 = OBJC_IVAR____TtC11EmojiPoster19GradientColorSlider_rightColorTapGesture;
  *(_QWORD *)&v11[v18] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3D80]), sel_init);
  v19 = OBJC_IVAR____TtC11EmojiPoster19GradientColorSlider_leftColorPanGesture;
  *(_QWORD *)&v11[v19] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3AA0]), sel_init);
  v20 = OBJC_IVAR____TtC11EmojiPoster19GradientColorSlider_rightColorPanGesture;
  *(_QWORD *)&v11[v20] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3AA0]), sel_init);
  *(_QWORD *)&v11[OBJC_IVAR____TtC11EmojiPoster19GradientColorSlider_startLeftColorOffset] = 0;
  *(_QWORD *)&v11[OBJC_IVAR____TtC11EmojiPoster19GradientColorSlider_startRightColorOffset] = 0;

  v23.receiver = v11;
  v23.super_class = (Class)type metadata accessor for GradientColorSlider();
  v21 = objc_msgSendSuper2(&v23, sel_initWithFrame_, a1, a2, a3, a4);
  sub_1DD2CEDF8();

  return v21;
}

id sub_1DD2CEBD8(void *a1)
{
  char *v1;
  uint64_t v3;
  void *v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  objc_class *ObjCClassFromMetadata;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  id v16;
  id v17;
  objc_super v19;

  *(_QWORD *)&v1[OBJC_IVAR____TtC11EmojiPoster19GradientColorSlider_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  v3 = OBJC_IVAR____TtC11EmojiPoster19GradientColorSlider_leftColor;
  v4 = (void *)objc_opt_self();
  v5 = v1;
  *(_QWORD *)&v1[v3] = objc_msgSend(v4, sel_whiteColor);
  v6 = OBJC_IVAR____TtC11EmojiPoster19GradientColorSlider_rightColor;
  *(_QWORD *)&v5[v6] = objc_msgSend(v4, sel_blackColor);
  *(_QWORD *)&v5[OBJC_IVAR____TtC11EmojiPoster19GradientColorSlider_leftColorOffset] = 0;
  *(_QWORD *)&v5[OBJC_IVAR____TtC11EmojiPoster19GradientColorSlider_rightColorOffset] = 0x3FF0000000000000;
  v7 = OBJC_IVAR____TtC11EmojiPoster19GradientColorSlider_gradientLayer;
  *(_QWORD *)&v5[v7] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CD2790]), sel_init);
  v8 = OBJC_IVAR____TtC11EmojiPoster19GradientColorSlider_leftColorView;
  type metadata accessor for ColorWellView();
  ObjCClassFromMetadata = (objc_class *)swift_getObjCClassFromMetadata();
  *(_QWORD *)&v5[v8] = objc_msgSend(objc_allocWithZone(ObjCClassFromMetadata), sel_init);
  v10 = OBJC_IVAR____TtC11EmojiPoster19GradientColorSlider_rightColorView;
  *(_QWORD *)&v5[v10] = objc_msgSend(objc_allocWithZone(ObjCClassFromMetadata), sel_init);
  v11 = OBJC_IVAR____TtC11EmojiPoster19GradientColorSlider_leftColorTapGesture;
  *(_QWORD *)&v5[v11] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3D80]), sel_init);
  v12 = OBJC_IVAR____TtC11EmojiPoster19GradientColorSlider_rightColorTapGesture;
  *(_QWORD *)&v5[v12] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3D80]), sel_init);
  v13 = OBJC_IVAR____TtC11EmojiPoster19GradientColorSlider_leftColorPanGesture;
  *(_QWORD *)&v5[v13] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3AA0]), sel_init);
  v14 = OBJC_IVAR____TtC11EmojiPoster19GradientColorSlider_rightColorPanGesture;
  *(_QWORD *)&v5[v14] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3AA0]), sel_init);
  *(_QWORD *)&v5[OBJC_IVAR____TtC11EmojiPoster19GradientColorSlider_startLeftColorOffset] = 0;
  *(_QWORD *)&v5[OBJC_IVAR____TtC11EmojiPoster19GradientColorSlider_startRightColorOffset] = 0;

  v19.receiver = v5;
  v19.super_class = (Class)type metadata accessor for GradientColorSlider();
  v15 = objc_msgSendSuper2(&v19, sel_initWithCoder_, a1);
  v16 = v15;
  if (v15)
  {
    v17 = v15;
    sub_1DD2CEDF8();

  }
  return v16;
}

id sub_1DD2CEDF8()
{
  char *v0;
  void *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  void *v10;
  void *v11;
  void *v12;
  id v13;

  v1 = *(void **)&v0[OBJC_IVAR____TtC11EmojiPoster19GradientColorSlider_gradientLayer];
  objc_msgSend(v1, sel_setCornerCurve_, *MEMORY[0x1E0CD2A68]);
  v2 = (void *)objc_opt_self();
  objc_msgSend(v2, sel_begin);
  objc_msgSend(v2, sel_setDisableActions_, 1);
  objc_msgSend(v1, sel_setStartPoint_, *(double *)&v0[OBJC_IVAR____TtC11EmojiPoster19GradientColorSlider_leftColorOffset], 0.5);
  objc_msgSend(v1, sel_setEndPoint_, *(double *)&v0[OBJC_IVAR____TtC11EmojiPoster19GradientColorSlider_rightColorOffset], 0.5);
  objc_msgSend(v2, sel_commit);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F03D0F30);
  v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_1DD2FE420;
  v4 = OBJC_IVAR____TtC11EmojiPoster19GradientColorSlider_leftColor;
  v5 = objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC11EmojiPoster19GradientColorSlider_leftColor], sel_CGColor);
  type metadata accessor for CGColor(0);
  v7 = v6;
  *(_QWORD *)(v3 + 56) = v6;
  *(_QWORD *)(v3 + 32) = v5;
  v8 = OBJC_IVAR____TtC11EmojiPoster19GradientColorSlider_rightColor;
  v9 = objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC11EmojiPoster19GradientColorSlider_rightColor], sel_CGColor);
  *(_QWORD *)(v3 + 88) = v7;
  *(_QWORD *)(v3 + 64) = v9;
  v10 = (void *)sub_1DD2F9EC8();
  swift_bridgeObjectRelease();
  objc_msgSend(v1, sel_setColors_, v10);

  v11 = *(void **)&v0[OBJC_IVAR____TtC11EmojiPoster19GradientColorSlider_leftColorView];
  objc_msgSend(v11, sel_setBackgroundColor_, *(_QWORD *)&v0[v4]);
  v12 = *(void **)&v0[OBJC_IVAR____TtC11EmojiPoster19GradientColorSlider_rightColorView];
  objc_msgSend(v12, sel_setBackgroundColor_, *(_QWORD *)&v0[v8]);
  sub_1DD2CF01C();
  v13 = objc_msgSend(v0, sel_layer);
  objc_msgSend(v13, sel_addSublayer_, v1);

  objc_msgSend(v0, sel_addSubview_, v11);
  return objc_msgSend(v0, sel_addSubview_, v12);
}

id sub_1DD2CF01C()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC11EmojiPoster19GradientColorSlider_leftColorPanGesture);
  objc_msgSend(v1, sel_addTarget_action_, v0, sel_leftColorDidPanWithGr_);
  v2 = *(void **)(v0 + OBJC_IVAR____TtC11EmojiPoster19GradientColorSlider_leftColorTapGesture);
  objc_msgSend(v2, sel_addTarget_action_, v0, sel_leftColorWasTappedWithGr_);
  v3 = *(void **)(v0 + OBJC_IVAR____TtC11EmojiPoster19GradientColorSlider_leftColorView);
  objc_msgSend(v3, sel_addGestureRecognizer_, v1);
  objc_msgSend(v3, sel_addGestureRecognizer_, v2);
  v4 = *(void **)(v0 + OBJC_IVAR____TtC11EmojiPoster19GradientColorSlider_rightColorPanGesture);
  objc_msgSend(v4, sel_addTarget_action_, v0, sel_rightColorDidPanWithGr_);
  v5 = *(void **)(v0 + OBJC_IVAR____TtC11EmojiPoster19GradientColorSlider_rightColorTapGesture);
  objc_msgSend(v5, sel_addTarget_action_, v0, sel_rightColorWasTappedWithGr_);
  v6 = *(void **)(v0 + OBJC_IVAR____TtC11EmojiPoster19GradientColorSlider_rightColorView);
  objc_msgSend(v6, sel_addGestureRecognizer_, v4);
  return objc_msgSend(v6, sel_addGestureRecognizer_, v5);
}

id sub_1DD2CF130()
{
  char *v0;
  void *v1;
  double v2;
  double v3;
  double v4;
  double v5;
  double v6;

  v1 = *(void **)&v0[OBJC_IVAR____TtC11EmojiPoster19GradientColorSlider_gradientLayer];
  objc_msgSend(v0, sel_bounds);
  objc_msgSend(v1, sel_setFrame_);
  objc_msgSend(v1, sel_frame);
  objc_msgSend(v1, sel_setCornerRadius_, v2 * 0.5);
  objc_msgSend(v0, sel_bounds);
  v4 = v3;
  objc_msgSend(v0, sel_bounds);
  v6 = v5 - v4;
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC11EmojiPoster19GradientColorSlider_leftColorView], sel_setFrame_, (v5 - v4) * *(double *)&v0[OBJC_IVAR____TtC11EmojiPoster19GradientColorSlider_leftColorOffset] + 0.0, 0.0, v4, v4);
  return objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC11EmojiPoster19GradientColorSlider_rightColorView], sel_setFrame_, v6 * *(double *)&v0[OBJC_IVAR____TtC11EmojiPoster19GradientColorSlider_rightColorOffset], 0.0, v4, v4);
}

id sub_1DD2CF260(void *a1)
{
  char *v1;
  id result;
  void *v4;
  uint64_t v5;
  double v6;
  double v7;
  void *v8;
  double MidX;
  double v10;
  double Width;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  uint64_t v19;
  void *v20;
  void *v21;
  CGRect v22;
  CGRect v23;
  CGRect v24;

  result = objc_msgSend(a1, sel_state);
  if (result == (id)2)
  {
    objc_msgSend(a1, sel_translationInView_, v1);
    v7 = v6 + *(double *)&v1[OBJC_IVAR____TtC11EmojiPoster19GradientColorSlider_startLeftColorOffset];
    v8 = *(void **)&v1[OBJC_IVAR____TtC11EmojiPoster19GradientColorSlider_leftColorView];
    objc_msgSend(v8, sel_bounds);
    MidX = CGRectGetMidX(v22);
    if (v7 > MidX)
      v10 = v7;
    else
      v10 = MidX;
    objc_msgSend(v1, sel_bounds);
    Width = CGRectGetWidth(v23);
    objc_msgSend(v8, sel_bounds);
    v12 = Width - CGRectGetMidX(v24);
    if (v12 >= v10)
      v13 = v10;
    else
      v13 = v12;
    objc_msgSend(v8, sel_center);
    objc_msgSend(v8, sel_setCenter_, v13);
    objc_msgSend(v8, sel_frame);
    v15 = v14;
    objc_msgSend(v1, sel_bounds);
    v17 = v16;
    objc_msgSend(v8, sel_bounds);
    v19 = OBJC_IVAR____TtC11EmojiPoster19GradientColorSlider_leftColorOffset;
    *(double *)&v1[OBJC_IVAR____TtC11EmojiPoster19GradientColorSlider_leftColorOffset] = v15 / (v17 - v18);
    v20 = (void *)objc_opt_self();
    objc_msgSend(v20, sel_begin);
    objc_msgSend(v20, sel_setDisableActions_, 1);
    v21 = *(void **)&v1[OBJC_IVAR____TtC11EmojiPoster19GradientColorSlider_gradientLayer];
    objc_msgSend(v21, sel_setStartPoint_, *(double *)&v1[v19], 0.5);
    objc_msgSend(v21, sel_setEndPoint_, *(double *)&v1[OBJC_IVAR____TtC11EmojiPoster19GradientColorSlider_rightColorOffset], 0.5);
    objc_msgSend(v20, sel_commit);
    result = (id)MEMORY[0x1DF0D8130](&v1[OBJC_IVAR____TtC11EmojiPoster19GradientColorSlider_delegate]);
    if (result)
    {
      sub_1DD2D7038(*(double *)&v1[v19]);
      return (id)swift_unknownObjectRelease();
    }
  }
  else if (result == (id)1)
  {
    v4 = *(void **)&v1[OBJC_IVAR____TtC11EmojiPoster19GradientColorSlider_leftColorView];
    objc_msgSend(v4, sel_center);
    *(_QWORD *)&v1[OBJC_IVAR____TtC11EmojiPoster19GradientColorSlider_startLeftColorOffset] = v5;
    return objc_msgSend(v1, sel_bringSubviewToFront_, v4);
  }
  return result;
}

id sub_1DD2CF4EC(void *a1)
{
  char *v1;
  id result;
  void *v4;
  uint64_t v5;
  double v6;
  double v7;
  void *v8;
  double MidX;
  double v10;
  double Width;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  uint64_t v19;
  void *v20;
  void *v21;
  CGRect v22;
  CGRect v23;
  CGRect v24;

  result = objc_msgSend(a1, sel_state);
  if (result == (id)2)
  {
    objc_msgSend(a1, sel_translationInView_, v1);
    v7 = v6 + *(double *)&v1[OBJC_IVAR____TtC11EmojiPoster19GradientColorSlider_startRightColorOffset];
    v8 = *(void **)&v1[OBJC_IVAR____TtC11EmojiPoster19GradientColorSlider_rightColorView];
    objc_msgSend(v8, sel_bounds);
    MidX = CGRectGetMidX(v22);
    if (v7 > MidX)
      v10 = v7;
    else
      v10 = MidX;
    objc_msgSend(v1, sel_bounds);
    Width = CGRectGetWidth(v23);
    objc_msgSend(v8, sel_bounds);
    v12 = Width - CGRectGetMidX(v24);
    if (v12 >= v10)
      v13 = v10;
    else
      v13 = v12;
    objc_msgSend(v8, sel_center);
    objc_msgSend(v8, sel_setCenter_, v13);
    objc_msgSend(v8, sel_frame);
    v15 = v14;
    objc_msgSend(v1, sel_bounds);
    v17 = v16;
    objc_msgSend(v8, sel_bounds);
    v19 = OBJC_IVAR____TtC11EmojiPoster19GradientColorSlider_rightColorOffset;
    *(double *)&v1[OBJC_IVAR____TtC11EmojiPoster19GradientColorSlider_rightColorOffset] = v15 / (v17 - v18);
    v20 = (void *)objc_opt_self();
    objc_msgSend(v20, sel_begin);
    objc_msgSend(v20, sel_setDisableActions_, 1);
    v21 = *(void **)&v1[OBJC_IVAR____TtC11EmojiPoster19GradientColorSlider_gradientLayer];
    objc_msgSend(v21, sel_setStartPoint_, *(double *)&v1[OBJC_IVAR____TtC11EmojiPoster19GradientColorSlider_leftColorOffset], 0.5);
    objc_msgSend(v21, sel_setEndPoint_, *(double *)&v1[v19], 0.5);
    objc_msgSend(v20, sel_commit);
    result = (id)MEMORY[0x1DF0D8130](&v1[OBJC_IVAR____TtC11EmojiPoster19GradientColorSlider_delegate]);
    if (result)
    {
      sub_1DD2D71B8(*(double *)&v1[v19]);
      return (id)swift_unknownObjectRelease();
    }
  }
  else if (result == (id)1)
  {
    v4 = *(void **)&v1[OBJC_IVAR____TtC11EmojiPoster19GradientColorSlider_rightColorView];
    objc_msgSend(v4, sel_center);
    *(_QWORD *)&v1[OBJC_IVAR____TtC11EmojiPoster19GradientColorSlider_startRightColorOffset] = v5;
    return objc_msgSend(v1, sel_bringSubviewToFront_, v4);
  }
  return result;
}

id sub_1DD2CF810()
{
  return sub_1DD2CF81C(type metadata accessor for GradientColorSlider);
}

id sub_1DD2CF81C(uint64_t (*a1)(void))
{
  void *v1;
  objc_super v3;

  v3.receiver = v1;
  v3.super_class = (Class)a1();
  return objc_msgSendSuper2(&v3, sel_dealloc);
}

uint64_t type metadata accessor for GradientColorSlider()
{
  return objc_opt_self();
}

void sub_1DD2CF924()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  void (*v11)(void *);
  void (**v12)(void *);
  uint64_t v13;
  uint64_t ObjectType;
  id v15;

  v1 = MEMORY[0x1DF0D8130](v0 + OBJC_IVAR____TtC11EmojiPoster19GradientColorSlider_delegate);
  if (v1)
  {
    v2 = v1;
    v3 = v1 + OBJC_IVAR____TtC11EmojiPoster31GradientConfigurationController_delegate;
    swift_beginAccess();
    v4 = MEMORY[0x1DF0D8130](v3);
    if (v4)
    {
      v5 = v4;
      v6 = *(_QWORD *)(v3 + 8);
      v7 = sub_1DD2D5254();
      v8 = v2 + OBJC_IVAR____TtC11EmojiPoster31GradientConfigurationController_gradientProperties;
      swift_beginAccess();
      v9 = *(_QWORD *)(v8 + 32);
      if (*(_QWORD *)(v9 + 16))
      {
        v10 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3658]), sel_initWithRed_green_blue_alpha_, *(double *)(v9 + 32), *(double *)(v9 + 40), *(double *)(v9 + 48), *(double *)(v9 + 56));
        objc_msgSend(v7, sel_setSelectedColor_, v10);

        v11 = (void (*)(void *))swift_allocObject();
        *((_QWORD *)v11 + 2) = v2;
        *((_QWORD *)v11 + 3) = v5;
        *((_QWORD *)v11 + 4) = v6;
        v12 = (void (**)(void *))(v2
                                           + OBJC_IVAR____TtC11EmojiPoster31GradientConfigurationController_colorUpdater);
        v13 = *(_QWORD *)(v2 + OBJC_IVAR____TtC11EmojiPoster31GradientConfigurationController_colorUpdater);
        *v12 = sub_1DD2CFD10;
        v12[1] = v11;
        swift_unknownObjectRetain();
        swift_unknownObjectRetain();
        sub_1DD2CFCD0(v13);
        ObjectType = swift_getObjectType();
        v15 = sub_1DD2D5254();
        (*(void (**)(uint64_t, id, uint64_t, uint64_t))(v6 + 8))(v2, v15, ObjectType, v6);
        swift_unknownObjectRelease();
        swift_unknownObjectRelease();

      }
      else
      {
        __break(1u);
      }
    }
    else
    {
      swift_unknownObjectRelease();
    }
  }
}

void sub_1DD2CFAF0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t ObjectType;
  id v15;

  v1 = MEMORY[0x1DF0D8130](v0 + OBJC_IVAR____TtC11EmojiPoster19GradientColorSlider_delegate);
  if (v1)
  {
    v2 = v1;
    v3 = v1 + OBJC_IVAR____TtC11EmojiPoster31GradientConfigurationController_delegate;
    swift_beginAccess();
    v4 = MEMORY[0x1DF0D8130](v3);
    if (v4)
    {
      v5 = v4;
      v6 = *(_QWORD *)(v3 + 8);
      v7 = sub_1DD2D5254();
      v8 = v2 + OBJC_IVAR____TtC11EmojiPoster31GradientConfigurationController_gradientProperties;
      swift_beginAccess();
      v9 = *(_QWORD *)(v8 + 32);
      if (*(_QWORD *)(v9 + 16) < 2uLL)
      {
        __break(1u);
      }
      else
      {
        v10 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3658]), sel_initWithRed_green_blue_alpha_, *(double *)(v9 + 64), *(double *)(v9 + 72), *(double *)(v9 + 80), *(double *)(v9 + 88));
        objc_msgSend(v7, sel_setSelectedColor_, v10);

        v11 = (_QWORD *)swift_allocObject();
        v11[2] = v2;
        v11[3] = v5;
        v11[4] = v6;
        v12 = (_QWORD *)(v2 + OBJC_IVAR____TtC11EmojiPoster31GradientConfigurationController_colorUpdater);
        v13 = *(_QWORD *)(v2 + OBJC_IVAR____TtC11EmojiPoster31GradientConfigurationController_colorUpdater);
        *v12 = sub_1DD2CFCC4;
        v12[1] = v11;
        swift_unknownObjectRetain();
        swift_unknownObjectRetain();
        sub_1DD2CFCD0(v13);
        ObjectType = swift_getObjectType();
        v15 = sub_1DD2D5254();
        (*(void (**)(uint64_t, id, uint64_t, uint64_t))(v6 + 8))(v2, v15, ObjectType, v6);
        swift_unknownObjectRelease();
        swift_unknownObjectRelease();

      }
    }
    else
    {
      swift_unknownObjectRelease();
    }
  }
}

_OWORD *sub_1DD2CFCC4(void *a1)
{
  uint64_t *v1;

  return sub_1DD2D6608(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_1DD2CFCD0(uint64_t result)
{
  if (result)
    return swift_release();
  return result;
}

uint64_t objectdestroyTm()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  return swift_deallocObject();
}

void sub_1DD2CFD10(void *a1)
{
  uint64_t *v1;

  sub_1DD2D64BC(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_1DD2CFD1C(uint64_t a1)
{
  swift_unknownObjectWeakDestroy();
  return a1;
}

void sub_1DD2CFD40()
{
  char *v0;
  id v1;
  void *v2;
  id v3;
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;
  void *v10;
  id v11;
  void *v12;
  id v13;
  void *v14;
  void *v15;
  id v16;
  void *v17;
  id v18;
  objc_super v19;

  v19.receiver = v0;
  v19.super_class = (Class)type metadata accessor for EmojiForegroundReplicatorViewController();
  objc_msgSendSuper2(&v19, sel_viewDidLoad);
  v1 = objc_msgSend(v0, sel_view);
  if (!v1)
  {
    __break(1u);
    goto LABEL_6;
  }
  v2 = v1;
  v3 = objc_msgSend((id)objc_opt_self(), sel_clearColor);
  objc_msgSend(v2, sel_setBackgroundColor_, v3);

  v4 = (void *)sub_1DD2D0618();
  v5 = *(void **)&v0[OBJC_IVAR____TtC11EmojiPoster39EmojiForegroundReplicatorViewController_emojiLayer];
  v6 = objc_msgSend(v4, sel_CGImage);
  objc_msgSend(v5, sel_setContents_, v6);

  objc_msgSend(v4, sel_size);
  objc_msgSend(v5, sel_frame);
  objc_msgSend(v5, sel_setFrame_);
  v7 = *(void **)&v0[OBJC_IVAR____TtC11EmojiPoster39EmojiForegroundReplicatorViewController_horizontalReplicatorLayer];
  objc_msgSend(v7, sel_addSublayer_, v5);
  v8 = *(void **)&v0[OBJC_IVAR____TtC11EmojiPoster39EmojiForegroundReplicatorViewController_verticalReplicatorLayer];
  objc_msgSend(v8, sel_addSublayer_, v7);
  v9 = objc_msgSend(v0, sel_view);
  if (!v9)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  v10 = v9;
  v11 = objc_msgSend(v9, sel_layer);

  objc_msgSend(v11, sel_addSublayer_, v8);
  v12 = *(void **)&v0[OBJC_IVAR____TtC11EmojiPoster39EmojiForegroundReplicatorViewController_secondaryEmojiLayer];
  v13 = objc_msgSend(v4, sel_CGImage);
  objc_msgSend(v12, sel_setContents_, v13);

  objc_msgSend(v4, sel_size);
  objc_msgSend(v12, sel_frame);
  objc_msgSend(v12, sel_setFrame_);
  v14 = *(void **)&v0[OBJC_IVAR____TtC11EmojiPoster39EmojiForegroundReplicatorViewController_offsetHorizontalReplicatorLayer];
  objc_msgSend(v14, sel_addSublayer_, v12);
  v15 = *(void **)&v0[OBJC_IVAR____TtC11EmojiPoster39EmojiForegroundReplicatorViewController_offsetVerticalReplicatorLayer];
  objc_msgSend(v15, sel_addSublayer_, v14);
  v16 = objc_msgSend(v0, sel_view);
  if (v16)
  {
    v17 = v16;
    v18 = objc_msgSend(v16, sel_layer);

    objc_msgSend(v18, sel_addSublayer_, v15);
    sub_1DD2D006C();

    return;
  }
LABEL_7:
  __break(1u);
}

uint64_t type metadata accessor for EmojiForegroundReplicatorViewController()
{
  return objc_opt_self();
}

void sub_1DD2D006C()
{
  char *v0;
  double v1;
  void *v2;
  void *v3;
  void *v4;
  id v5;
  void *v6;
  double v7;
  double v8;
  double v9;
  uint64_t v10;
  BOOL v11;
  id v12;
  void *v13;
  double v14;
  double v15;
  double v16;
  uint64_t v17;
  id v18;
  void *v19;
  uint64_t v20;
  double v21;
  double v22;
  id v23;
  void *v24;
  double v25;
  double v26;
  double v27;
  double v28;
  double v29;
  double v30;
  double v31;
  double v32;
  double v33;
  void *v34;
  void *v35;
  id v36;
  void *v37;
  double v38;
  double v39;
  double v40;
  double v41;
  double v42;
  double v43;
  double v44;
  id v45;
  void *v46;
  double v47;
  double v48;
  double v49;
  double v50;
  double v51;
  double v52;
  double v53;
  double v54;
  double v55;
  double v56;
  void *v57;
  void *v58;
  double v59;
  double v60;
  double v61;
  id v62;
  CATransform3D v63;

  v1 = *(double *)&v0[OBJC_IVAR____TtC11EmojiPoster39EmojiForegroundReplicatorViewController_scale] * 100.0;
  v2 = (void *)objc_opt_self();
  objc_msgSend(v2, sel_begin);
  objc_msgSend(v2, sel_setDisableActions_, 1);
  v3 = *(void **)&v0[OBJC_IVAR____TtC11EmojiPoster39EmojiForegroundReplicatorViewController_emojiLayer];
  objc_msgSend(v3, sel_frame);
  objc_msgSend(v3, sel_setFrame_);
  v4 = *(void **)&v0[OBJC_IVAR____TtC11EmojiPoster39EmojiForegroundReplicatorViewController_secondaryEmojiLayer];
  objc_msgSend(v4, sel_frame);
  objc_msgSend(v4, sel_setFrame_);
  v5 = objc_msgSend(v0, sel_view);
  if (!v5)
    goto LABEL_30;
  v6 = v5;
  objc_msgSend(v5, sel_bounds);
  v8 = v7;

  v9 = ceil(v8 / v1);
  if ((~*(_QWORD *)&v9 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_22;
  }
  if (v9 <= -9.22337204e18)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  if (v9 >= 9.22337204e18)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v10 = (uint64_t)v9 + 1;
  if (__OFADD__((uint64_t)v9, 1))
  {
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  if ((v10 & 1) == 0)
  {
    v11 = __OFADD__(v10, 1);
    v10 = (uint64_t)v9 + 2;
    if (v11)
      goto LABEL_29;
  }
  v12 = objc_msgSend(v0, sel_view);
  if (!v12)
  {
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  v13 = v12;
  objc_msgSend(v12, sel_bounds);
  v15 = v14;

  v16 = ceil(v15 / v1);
  if ((~*(_QWORD *)&v16 & 0x7FF0000000000000) == 0)
    goto LABEL_25;
  if (v16 <= -9.22337204e18)
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  if (v16 >= 9.22337204e18)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  v17 = (uint64_t)v16 + 1;
  if (__OFADD__((uint64_t)v16, 1))
  {
LABEL_28:
    __break(1u);
LABEL_29:
    __break(1u);
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  v18 = objc_msgSend(v0, sel_view);
  if (!v18)
  {
LABEL_32:
    __break(1u);
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  v19 = v18;
  v62 = v2;
  if (v10 >= 0)
    v20 = v10;
  else
    v20 = v10 + 1;
  objc_msgSend(v18, sel_bounds);
  v22 = v21;

  v23 = objc_msgSend(v0, sel_view);
  if (!v23)
    goto LABEL_33;
  v24 = v23;
  v25 = v22 * 0.5 - (v1 * (double)((v20 >> 1) + 1) - v1 * 0.5 + (v1 * 1.8 - v1) * ((double)((v20 >> 1) + 1) + -1.0));
  objc_msgSend(v23, sel_bounds);
  v27 = v26;
  v29 = v28;
  v31 = v30;
  v33 = v32;

  v61 = v25;
  v34 = *(void **)&v0[OBJC_IVAR____TtC11EmojiPoster39EmojiForegroundReplicatorViewController_verticalReplicatorLayer];
  objc_msgSend(v34, sel_setFrame_, v25 + v27, v29, v31 - v25, v33);
  v35 = *(void **)&v0[OBJC_IVAR____TtC11EmojiPoster39EmojiForegroundReplicatorViewController_horizontalReplicatorLayer];
  objc_msgSend(v35, sel_setFrame_, 0.0, 0.0, v1 * (((double)v10 + -1.0) * 1.8 + (double)v10), v1);
  objc_msgSend(v35, sel_setInstanceCount_, v10);
  CATransform3DMakeTranslation(&v63, v1 * 1.8, 0.0, 0.0);
  objc_msgSend(v35, sel_setInstanceTransform_, &v63);
  objc_msgSend(v34, sel_setInstanceCount_, v17);
  CATransform3DMakeTranslation(&v63, 0.0, v1 * 1.8, 0.0);
  objc_msgSend(v34, sel_setInstanceTransform_, &v63);
  v36 = objc_msgSend(v0, sel_view);
  if (!v36)
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  v37 = v36;
  v60 = v1 * 1.8;
  objc_msgSend(v36, sel_bounds);
  v59 = v38;
  v40 = v39;
  v42 = v41;
  v44 = v43;

  v45 = objc_msgSend(v0, sel_view);
  if (v45)
  {
    v46 = v45;
    v47 = v1 * 0.9;
    v48 = v44 - v1 * 0.9;
    objc_msgSend(v45, sel_bounds);
    v50 = v49;
    v52 = v51;
    v54 = v53;
    v56 = v55;

    v57 = *(void **)&v0[OBJC_IVAR____TtC11EmojiPoster39EmojiForegroundReplicatorViewController_offsetHorizontalReplicatorLayer];
    objc_msgSend(v57, sel_setFrame_, v61 + v50 - v47, v52, v47 + v54 - v61, v56);
    v58 = *(void **)&v0[OBJC_IVAR____TtC11EmojiPoster39EmojiForegroundReplicatorViewController_offsetVerticalReplicatorLayer];
    objc_msgSend(v58, sel_setFrame_, v59, v47 + v40, v42, v48);
    objc_msgSend(v57, sel_setInstanceCount_, v10);
    CATransform3DMakeTranslation(&v63, v60, 0.0, 0.0);
    objc_msgSend(v57, sel_setInstanceTransform_, &v63);
    objc_msgSend(v58, sel_setInstanceCount_, v17);
    CATransform3DMakeTranslation(&v63, 0.0, v60, 0.0);
    objc_msgSend(v58, sel_setInstanceTransform_, &v63);
    objc_msgSend(v62, sel_commit);
    return;
  }
LABEL_35:
  __break(1u);
}

uint64_t sub_1DD2D0618()
{
  void *v0;
  id v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  id v6;
  id v7;
  uint64_t result;
  _QWORD v9[6];

  v1 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3830]), sel_init);
  objc_msgSend(v1, sel_setOpaque_, 0);
  v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3828]), sel_initWithSize_format_, v1, 100.0, 100.0);
  v3 = swift_allocObject();
  *(_QWORD *)(v3 + 16) = v0;
  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = sub_1DD2D0FF8;
  *(_QWORD *)(v4 + 24) = v3;
  v9[4] = sub_1DD2C6594;
  v9[5] = v4;
  v9[0] = MEMORY[0x1E0C809B0];
  v9[1] = 1107296256;
  v9[2] = sub_1DD2CB738;
  v9[3] = &block_descriptor_3;
  v5 = _Block_copy(v9);
  v6 = v0;
  swift_retain();
  swift_release();
  v7 = objc_msgSend(v2, sel_imageWithActions_, v5);

  _Block_release(v5);
  LOBYTE(v1) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  result = swift_release();
  if ((v1 & 1) == 0)
    return (uint64_t)v7;
  __break(1u);
  return result;
}

void sub_1DD2D07B4()
{
  uint64_t inited;
  void *v1;
  void *v2;
  id v3;
  id v4;
  id v5;
  void *v6;
  void *v7;
  id v8;
  double v9;
  double v10;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDB615F0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1DD2FDFC0;
  v1 = (void *)*MEMORY[0x1E0DC1138];
  *(_QWORD *)(inited + 32) = *MEMORY[0x1E0DC1138];
  v2 = (void *)objc_opt_self();
  swift_bridgeObjectRetain();
  v3 = v1;
  v4 = objc_msgSend(v2, sel_systemFontOfSize_, 100.0);
  *(_QWORD *)(inited + 64) = sub_1DD2CB820();
  *(_QWORD *)(inited + 40) = v4;
  sub_1DD2DEA78(inited);
  v5 = objc_allocWithZone(MEMORY[0x1E0CB3498]);
  v6 = (void *)sub_1DD2F9DB4();
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  sub_1DD2CB85C();
  v7 = (void *)sub_1DD2F9D78();
  swift_bridgeObjectRelease();
  v8 = objc_msgSend(v5, sel_initWithString_attributes_, v6, v7);

  objc_msgSend(v8, sel_size);
  objc_msgSend(v8, sel_drawInRect_, 50.0 - v9 * 0.5, 50.0 - v10 * 0.5, v9);

}

void sub_1DD2D0950(void *a1)
{
  uint64_t v1;
  uint64_t v3;

  switch((unint64_t)objc_msgSend(a1, sel_state))
  {
    case 1uLL:
    case 2uLL:
      objc_msgSend(a1, sel_scale);
      *(_QWORD *)(v1 + OBJC_IVAR____TtC11EmojiPoster39EmojiForegroundReplicatorViewController_scale) = v3;
      sub_1DD2D006C();
      break;
    default:
      *(_QWORD *)(v1 + OBJC_IVAR____TtC11EmojiPoster39EmojiForegroundReplicatorViewController_scaleDelta) = 0x3FF0000000000000;
      break;
  }
}

void sub_1DD2D0A28(double a1)
{
  uint64_t v1;

  *(double *)(v1 + OBJC_IVAR____TtC11EmojiPoster39EmojiForegroundReplicatorViewController_scale) = a1;
  sub_1DD2D006C();
}

id EmojiForegroundReplicatorViewController.__allocating_init(nibName:bundle:)(uint64_t a1, uint64_t a2, void *a3)
{
  objc_class *v3;
  objc_class *v4;
  void *v6;
  id v7;

  v4 = v3;
  if (a2)
  {
    v6 = (void *)sub_1DD2F9DB4();
    swift_bridgeObjectRelease();
  }
  else
  {
    v6 = 0;
  }
  v7 = objc_msgSend(objc_allocWithZone(v4), sel_initWithNibName_bundle_, v6, a3);

  return v7;
}

id EmojiForegroundReplicatorViewController.init(nibName:bundle:)(uint64_t a1, uint64_t a2, void *a3)
{
  char *v3;
  char *v6;
  uint64_t v7;
  id v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  id v16;
  objc_super v18;

  v6 = &v3[OBJC_IVAR____TtC11EmojiPoster39EmojiForegroundReplicatorViewController_emoji];
  *(_QWORD *)v6 = 3113983984;
  *((_QWORD *)v6 + 1) = 0xA400000000000000;
  *(int64x2_t *)&v3[OBJC_IVAR____TtC11EmojiPoster39EmojiForegroundReplicatorViewController_emojiSize] = vdupq_n_s64(0x4059000000000000uLL);
  *(_QWORD *)&v3[OBJC_IVAR____TtC11EmojiPoster39EmojiForegroundReplicatorViewController_spacingFactor] = 0x3FFCCCCCCCCCCCCDLL;
  *(_QWORD *)&v3[OBJC_IVAR____TtC11EmojiPoster39EmojiForegroundReplicatorViewController_scale] = 0x3FF0000000000000;
  *(_QWORD *)&v3[OBJC_IVAR____TtC11EmojiPoster39EmojiForegroundReplicatorViewController_scaleDelta] = 0x3FF0000000000000;
  v7 = OBJC_IVAR____TtC11EmojiPoster39EmojiForegroundReplicatorViewController_emojiLayer;
  v8 = objc_allocWithZone(MEMORY[0x1E0CD27A8]);
  v9 = v3;
  *(_QWORD *)&v3[v7] = objc_msgSend(v8, sel_init);
  v10 = OBJC_IVAR____TtC11EmojiPoster39EmojiForegroundReplicatorViewController_secondaryEmojiLayer;
  *(_QWORD *)&v9[v10] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CD27A8]), sel_init);
  v11 = OBJC_IVAR____TtC11EmojiPoster39EmojiForegroundReplicatorViewController_horizontalReplicatorLayer;
  *(_QWORD *)&v9[v11] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CD2828]), sel_init);
  v12 = OBJC_IVAR____TtC11EmojiPoster39EmojiForegroundReplicatorViewController_offsetHorizontalReplicatorLayer;
  *(_QWORD *)&v9[v12] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CD2828]), sel_init);
  v13 = OBJC_IVAR____TtC11EmojiPoster39EmojiForegroundReplicatorViewController_verticalReplicatorLayer;
  *(_QWORD *)&v9[v13] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CD2828]), sel_init);
  v14 = OBJC_IVAR____TtC11EmojiPoster39EmojiForegroundReplicatorViewController_offsetVerticalReplicatorLayer;
  *(_QWORD *)&v9[v14] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CD2828]), sel_init);
  *(_QWORD *)&v9[OBJC_IVAR____TtC11EmojiPoster39EmojiForegroundReplicatorViewController_pinchGestureRecognizer] = 0;

  if (a2)
  {
    v15 = (void *)sub_1DD2F9DB4();
    swift_bridgeObjectRelease();
  }
  else
  {
    v15 = 0;
  }
  v18.receiver = v9;
  v18.super_class = (Class)type metadata accessor for EmojiForegroundReplicatorViewController();
  v16 = objc_msgSendSuper2(&v18, sel_initWithNibName_bundle_, v15, a3);

  return v16;
}

id EmojiForegroundReplicatorViewController.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

id EmojiForegroundReplicatorViewController.init(coder:)(void *a1)
{
  char *v1;
  char *v3;
  uint64_t v4;
  id v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  objc_super v14;

  v3 = &v1[OBJC_IVAR____TtC11EmojiPoster39EmojiForegroundReplicatorViewController_emoji];
  *(_QWORD *)v3 = 3113983984;
  *((_QWORD *)v3 + 1) = 0xA400000000000000;
  *(int64x2_t *)&v1[OBJC_IVAR____TtC11EmojiPoster39EmojiForegroundReplicatorViewController_emojiSize] = vdupq_n_s64(0x4059000000000000uLL);
  *(_QWORD *)&v1[OBJC_IVAR____TtC11EmojiPoster39EmojiForegroundReplicatorViewController_spacingFactor] = 0x3FFCCCCCCCCCCCCDLL;
  *(_QWORD *)&v1[OBJC_IVAR____TtC11EmojiPoster39EmojiForegroundReplicatorViewController_scale] = 0x3FF0000000000000;
  *(_QWORD *)&v1[OBJC_IVAR____TtC11EmojiPoster39EmojiForegroundReplicatorViewController_scaleDelta] = 0x3FF0000000000000;
  v4 = OBJC_IVAR____TtC11EmojiPoster39EmojiForegroundReplicatorViewController_emojiLayer;
  v5 = objc_allocWithZone(MEMORY[0x1E0CD27A8]);
  v6 = v1;
  *(_QWORD *)&v1[v4] = objc_msgSend(v5, sel_init);
  v7 = OBJC_IVAR____TtC11EmojiPoster39EmojiForegroundReplicatorViewController_secondaryEmojiLayer;
  *(_QWORD *)&v6[v7] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CD27A8]), sel_init);
  v8 = OBJC_IVAR____TtC11EmojiPoster39EmojiForegroundReplicatorViewController_horizontalReplicatorLayer;
  *(_QWORD *)&v6[v8] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CD2828]), sel_init);
  v9 = OBJC_IVAR____TtC11EmojiPoster39EmojiForegroundReplicatorViewController_offsetHorizontalReplicatorLayer;
  *(_QWORD *)&v6[v9] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CD2828]), sel_init);
  v10 = OBJC_IVAR____TtC11EmojiPoster39EmojiForegroundReplicatorViewController_verticalReplicatorLayer;
  *(_QWORD *)&v6[v10] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CD2828]), sel_init);
  v11 = OBJC_IVAR____TtC11EmojiPoster39EmojiForegroundReplicatorViewController_offsetVerticalReplicatorLayer;
  *(_QWORD *)&v6[v11] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CD2828]), sel_init);
  *(_QWORD *)&v6[OBJC_IVAR____TtC11EmojiPoster39EmojiForegroundReplicatorViewController_pinchGestureRecognizer] = 0;

  v14.receiver = v6;
  v14.super_class = (Class)type metadata accessor for EmojiForegroundReplicatorViewController();
  v12 = objc_msgSendSuper2(&v14, sel_initWithCoder_, a1);

  return v12;
}

id EmojiForegroundReplicatorViewController.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for EmojiForegroundReplicatorViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t method lookup function for EmojiForegroundReplicatorViewController()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of EmojiForegroundReplicatorViewController.updateScale(with:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x110))();
}

uint64_t sub_1DD2D0FD4()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_1DD2D0FF8()
{
  sub_1DD2D07B4();
}

uint64_t sub_1DD2D1000()
{
  return swift_deallocObject();
}

uint64_t block_copy_helper_3(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_3()
{
  return swift_release();
}

uint64_t sub_1DD2D1028()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for LegacyCircularLayoutProvider()
{
  return objc_opt_self();
}

id EmojiForegroundSpiralLayersViewController.__allocating_init(emojiRenderer:)(uint64_t a1)
{
  objc_class *v1;
  id v3;
  id v4;

  v3 = objc_allocWithZone(v1);
  v4 = sub_1DD2D38BC(a1);
  swift_release();
  return v4;
}

uint64_t sub_1DD2D1098@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  _BYTE v5[128];

  v3 = *a1 + OBJC_IVAR____TtC11EmojiPoster41EmojiForegroundSpiralLayersViewController_configuration;
  swift_beginAccess();
  sub_1DD2C37E8(v3, (uint64_t)v5);
  sub_1DD2C37E8((uint64_t)v5, a2);
  return sub_1DD2C3968((uint64_t)v5, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1DD2C3830);
}

uint64_t sub_1DD2D1108(uint64_t a1)
{
  _BYTE v2[128];
  _BYTE v3[128];

  sub_1DD2C37E8(a1, (uint64_t)v3);
  sub_1DD2C37E8((uint64_t)v3, (uint64_t)v2);
  sub_1DD2C3968((uint64_t)v3, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1DD2C3830);
  return sub_1DD2D11D0((uint64_t)v2);
}

uint64_t sub_1DD2D1164@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  _BYTE v5[128];

  v3 = v1 + OBJC_IVAR____TtC11EmojiPoster41EmojiForegroundSpiralLayersViewController_configuration;
  swift_beginAccess();
  sub_1DD2C37E8(v3, (uint64_t)v5);
  sub_1DD2C37E8((uint64_t)v5, a1);
  return sub_1DD2C3968((uint64_t)v5, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1DD2C3830);
}

uint64_t sub_1DD2D11D0(uint64_t a1)
{
  void *v1;
  uint64_t v2;
  char v3;
  _QWORD *v5[16];
  _QWORD v6[16];
  _BYTE v7[128];
  _BYTE v8[128];
  _BYTE v9[128];
  _BYTE v10[128];
  _BYTE v11[112];
  _QWORD *v12;

  sub_1DD2C37E8(a1, (uint64_t)v7);
  v2 = (uint64_t)v1 + OBJC_IVAR____TtC11EmojiPoster41EmojiForegroundSpiralLayersViewController_configuration;
  swift_beginAccess();
  sub_1DD2C37E8(v2, (uint64_t)v8);
  sub_1DD2C37E8(v2, (uint64_t)v9);
  sub_1DD2C37E8((uint64_t)v7, v2);
  sub_1DD2C3968((uint64_t)v8, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1DD2C3830);
  sub_1DD2C3968((uint64_t)v9, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1DD2C39CC);
  sub_1DD2C37E8(v2, (uint64_t)v10);
  sub_1DD2C37E8((uint64_t)v10, (uint64_t)v11);
  if (sub_1DD2C61E4((uint64_t)v11) != 1)
  {
    sub_1DD2C37E8((uint64_t)v10, (uint64_t)v6);
    sub_1DD2BFA24(v6);
    if ((objc_msgSend(v1, sel_isViewLoaded) & 1) != 0)
    {
      sub_1DD2C37E8((uint64_t)v8, (uint64_t)v5);
      if (sub_1DD2C61E4((uint64_t)v5) == 1)
      {
        sub_1DD2C3968((uint64_t)v10, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1DD2C39CC);
LABEL_7:
        sub_1DD2D2DE8();
        sub_1DD2D23E4();
        return sub_1DD2C3968((uint64_t)v8, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1DD2C39CC);
      }
      v3 = sub_1DD2C6694(v5[14], v12);
      sub_1DD2C3968((uint64_t)v10, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1DD2C39CC);
      if ((v3 & 1) == 0)
        goto LABEL_7;
    }
    else
    {
      sub_1DD2C3968((uint64_t)v10, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1DD2C39CC);
    }
  }
  return sub_1DD2C3968((uint64_t)v8, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1DD2C39CC);
}

void (*sub_1DD2D1338(_QWORD *a1))(void **a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = malloc(0x2A0uLL);
  *a1 = v3;
  v3[83] = v1;
  v4 = v1 + OBJC_IVAR____TtC11EmojiPoster41EmojiForegroundSpiralLayersViewController_configuration;
  swift_beginAccess();
  sub_1DD2C37E8(v4, (uint64_t)v3);
  sub_1DD2C37E8((uint64_t)v3, (uint64_t)(v3 + 16));
  sub_1DD2C3968((uint64_t)v3, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1DD2C3830);
  return sub_1DD2D13C8;
}

void sub_1DD2D13C8(void **a1, char a2)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *a1;
  v3 = (uint64_t)*a1 + 128;
  v4 = (uint64_t)*a1 + 256;
  v5 = (uint64_t)*a1 + 384;
  if ((a2 & 1) != 0)
  {
    sub_1DD2C37E8((uint64_t)*a1 + 128, v5);
    sub_1DD2C37E8(v5, (uint64_t)v2 + 512);
    sub_1DD2C3968(v5, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1DD2C3830);
    sub_1DD2D11D0((uint64_t)v2 + 512);
    sub_1DD2C37E8(v3, v4);
    sub_1DD2C3968(v4, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1DD2C39CC);
  }
  else
  {
    sub_1DD2C37E8((uint64_t)*a1 + 128, v5);
    sub_1DD2C37E8(v5, v4);
    sub_1DD2D11D0(v4);
  }
  free(v2);
}

double sub_1DD2D1484()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + OBJC_IVAR____TtC11EmojiPoster41EmojiForegroundSpiralLayersViewController_wakeProgress;
  swift_beginAccess();
  return *(double *)v1;
}

uint64_t sub_1DD2D14C8(double a1)
{
  return sub_1DD2D1570(&OBJC_IVAR____TtC11EmojiPoster41EmojiForegroundSpiralLayersViewController_wakeProgress, a1);
}

uint64_t (*sub_1DD2D14D4(uint64_t a1))()
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1DD2D151C;
}

double sub_1DD2D1520()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + OBJC_IVAR____TtC11EmojiPoster41EmojiForegroundSpiralLayersViewController_unlockProgress;
  swift_beginAccess();
  return *(double *)v1;
}

uint64_t sub_1DD2D1564(double a1)
{
  return sub_1DD2D1570(&OBJC_IVAR____TtC11EmojiPoster41EmojiForegroundSpiralLayersViewController_unlockProgress, a1);
}

uint64_t sub_1DD2D1570(_QWORD *a1, double a2)
{
  uint64_t v2;
  double *v4;

  v4 = (double *)(v2 + *a1);
  swift_beginAccess();
  *v4 = a2;
  return sub_1DD2D23E4();
}

uint64_t (*sub_1DD2D15C0(uint64_t a1))()
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1DD2D151C;
}

uint64_t sub_1DD2D1608(uint64_t a1, char a2)
{
  uint64_t result;

  result = swift_endAccess();
  if ((a2 & 1) == 0)
    return sub_1DD2D23E4();
  return result;
}

id EmojiForegroundSpiralLayersViewController.init(emojiRenderer:)(uint64_t a1)
{
  id v1;

  v1 = sub_1DD2D38BC(a1);
  swift_release();
  return v1;
}

id EmojiForegroundSpiralLayersViewController.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

id EmojiForegroundSpiralLayersViewController.init(coder:)(void *a1)
{
  void *v1;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  id v8;
  objc_super v10;
  _OWORD v11[8];

  v3 = v1;
  sub_1DD2F9CDC();
  v3[OBJC_IVAR____TtC11EmojiPoster41EmojiForegroundSpiralLayersViewController_shouldRotateEmojiWithDevice] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC11EmojiPoster41EmojiForegroundSpiralLayersViewController_deviceOrientation] = 1;
  v4 = (uint64_t)&v3[OBJC_IVAR____TtC11EmojiPoster41EmojiForegroundSpiralLayersViewController_configuration];
  sub_1DD2C618C(v11);
  sub_1DD2C37E8((uint64_t)v11, v4);
  *(_QWORD *)&v3[OBJC_IVAR____TtC11EmojiPoster41EmojiForegroundSpiralLayersViewController__layoutProvider] = 0;
  *(int64x2_t *)&v3[OBJC_IVAR____TtC11EmojiPoster41EmojiForegroundSpiralLayersViewController_emojiSize] = vdupq_n_s64(0x4064000000000000uLL);
  v5 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)&v3[OBJC_IVAR____TtC11EmojiPoster41EmojiForegroundSpiralLayersViewController_emojiImageViews] = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)&v3[OBJC_IVAR____TtC11EmojiPoster41EmojiForegroundSpiralLayersViewController_emojiImages] = v5;
  *(_QWORD *)&v3[OBJC_IVAR____TtC11EmojiPoster41EmojiForegroundSpiralLayersViewController_wakeProgress] = 0x3FF0000000000000;
  *(_QWORD *)&v3[OBJC_IVAR____TtC11EmojiPoster41EmojiForegroundSpiralLayersViewController_unlockProgress] = 0;
  type metadata accessor for EmojiRenderer();
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = 10;
  v7 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C99D38]), sel_init);
  *(_QWORD *)(v6 + 24) = v7;
  objc_msgSend(v7, sel_setCountLimit_, 10);
  *(_QWORD *)&v3[OBJC_IVAR____TtC11EmojiPoster41EmojiForegroundSpiralLayersViewController_emojiRenderer] = v6;

  v10.receiver = v3;
  v10.super_class = (Class)type metadata accessor for EmojiForegroundSpiralLayersViewController();
  v8 = objc_msgSendSuper2(&v10, sel_initWithCoder_, a1);

  return v8;
}

id sub_1DD2D1870()
{
  void *v0;
  id result;
  void *v2;
  void *v3;
  id v4;
  objc_super v5;

  v5.receiver = v0;
  v5.super_class = (Class)type metadata accessor for EmojiForegroundSpiralLayersViewController();
  objc_msgSendSuper2(&v5, sel_viewDidLoad);
  result = objc_msgSend(v0, sel_view);
  if (result)
  {
    v2 = result;
    objc_msgSend(result, sel_setClipsToBounds_, 1);

    result = objc_msgSend(v0, sel_view);
    if (result)
    {
      v3 = result;
      v4 = objc_msgSend((id)objc_opt_self(), sel_clearColor);
      objc_msgSend(v3, sel_setBackgroundColor_, v4);

      return (id)sub_1DD2D1AC0();
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

void sub_1DD2D1984(char a1)
{
  void *v1;
  objc_super v3;

  v3.receiver = v1;
  v3.super_class = (Class)type metadata accessor for EmojiForegroundSpiralLayersViewController();
  objc_msgSendSuper2(&v3, sel_viewIsAppearing_, a1 & 1);
  sub_1DD2D1E80();
}

uint64_t sub_1DD2D1A30()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for EmojiForegroundSpiralLayersViewController();
  objc_msgSendSuper2(&v2, sel_viewDidLayoutSubviews);
  return sub_1DD2D23E4();
}

uint64_t sub_1DD2D1AC0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  _QWORD *v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  void *v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  void *v20;
  id v21;
  void *v22;
  id v23;
  id v24;
  uint64_t v25;
  int64x2_t v26;
  void *v27;
  id v28;
  _QWORD *v29;
  uint64_t v30;
  _QWORD aBlock[6];
  _BYTE v32[128];
  _BYTE v33[112];
  uint64_t v34;

  v1 = v0;
  v2 = v0 + OBJC_IVAR____TtC11EmojiPoster41EmojiForegroundSpiralLayersViewController_configuration;
  swift_beginAccess();
  sub_1DD2C37E8(v2, (uint64_t)v32);
  sub_1DD2C37E8((uint64_t)v32, (uint64_t)v33);
  result = sub_1DD2C61E4((uint64_t)v33);
  if ((_DWORD)result != 1)
  {
    result = v34;
    v4 = *(_QWORD *)(v34 + 16);
    if (v4)
    {
      v30 = OBJC_IVAR____TtC11EmojiPoster41EmojiForegroundSpiralLayersViewController_emojiRenderer;
      v5 = (_QWORD *)(v1 + OBJC_IVAR____TtC11EmojiPoster41EmojiForegroundSpiralLayersViewController_emojiImages);
      v6 = (uint64_t *)(swift_bridgeObjectRetain() + 40);
      v26 = vdupq_n_s64(0x4069000000000000uLL);
      v25 = v1;
      v29 = v5;
      while (1)
      {
        v7 = *(v6 - 1);
        v8 = *v6;
        v9 = *(_QWORD *)(v1 + v30);
        v10 = objc_allocWithZone(MEMORY[0x1E0CB3940]);
        swift_bridgeObjectRetain_n();
        swift_retain();
        v11 = (void *)sub_1DD2F9DB4();
        swift_bridgeObjectRelease();
        v12 = objc_msgSend(v10, sel_initWithString_, v11);

        v13 = objc_msgSend(*(id *)(v9 + 24), sel_objectForKey_, v12);
        if (v13)
        {
          v14 = v13;
          swift_release();
          swift_bridgeObjectRelease();
        }
        else
        {
          v28 = v12;
          v15 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3830]), sel_init);
          objc_msgSend(v15, sel_setOpaque_, 0);
          v27 = v15;
          v16 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3828]), sel_initWithSize_format_, v15, 200.0, 200.0);
          v17 = swift_allocObject();
          *(_QWORD *)(v17 + 16) = v7;
          *(_QWORD *)(v17 + 24) = v8;
          *(int64x2_t *)(v17 + 32) = v26;
          v18 = swift_allocObject();
          *(_QWORD *)(v18 + 16) = sub_1DD2C6578;
          *(_QWORD *)(v18 + 24) = v17;
          aBlock[4] = sub_1DD2C6594;
          aBlock[5] = v18;
          aBlock[0] = MEMORY[0x1E0C809B0];
          aBlock[1] = 1107296256;
          aBlock[2] = sub_1DD2CB738;
          aBlock[3] = &block_descriptor_4;
          v19 = _Block_copy(aBlock);
          swift_bridgeObjectRetain();
          swift_retain();
          swift_release();
          v20 = v16;
          v21 = objc_msgSend(v16, sel_imageWithActions_, v19);
          _Block_release(v19);
          LOBYTE(v19) = swift_isEscapingClosureAtFileLocation();
          result = swift_release();
          if ((v19 & 1) != 0)
          {
            __break(1u);
            return result;
          }
          v22 = *(void **)(v9 + 24);
          v14 = v21;
          v23 = v22;
          v12 = v28;
          objc_msgSend(v23, sel_setObject_forKey_, v14, v28);
          swift_release();
          swift_bridgeObjectRelease();
          swift_release();

          v1 = v25;
        }

        swift_beginAccess();
        v24 = v14;
        MEMORY[0x1DF0D7458]();
        if (*(_QWORD *)((*v29 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*v29 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_1DD2F9F04();
        v6 += 2;
        sub_1DD2F9F10();
        sub_1DD2F9EF8();
        swift_endAccess();

        if (!--v4)
          return swift_bridgeObjectRelease();
      }
    }
  }
  return result;
}

void sub_1DD2D1E80()
{
  NSObject *v0;
  NSObject *v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  uint64_t v5;
  id v6;
  id v7;
  unint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  double v11;
  double v12;
  double v13;
  double v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;
  id v18;
  id v19;
  id v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  char v26;
  id v27;
  Class isa;
  id v29;
  id v30;
  void *v31;
  id v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  _QWORD v38[16];
  _BYTE v39[128];
  _BYTE v40[112];
  uint64_t v41;

  v1 = v0;
  v2 = (uint64_t)v0 + OBJC_IVAR____TtC11EmojiPoster41EmojiForegroundSpiralLayersViewController_configuration;
  swift_beginAccess();
  sub_1DD2C37E8(v2, (uint64_t)v39);
  sub_1DD2C37E8((uint64_t)v39, (uint64_t)v40);
  if (sub_1DD2C61E4((uint64_t)v40) != 1)
  {
    v3 = OBJC_IVAR____TtC11EmojiPoster41EmojiForegroundSpiralLayersViewController__layoutProvider;
    v4 = ((char *)v1 + OBJC_IVAR____TtC11EmojiPoster41EmojiForegroundSpiralLayersViewController_emojiImages);
    v5 = OBJC_IVAR____TtC11EmojiPoster41EmojiForegroundSpiralLayersViewController_emojiImageViews;
    sub_1DD2C37E8((uint64_t)v39, (uint64_t)v38);
    sub_1DD2BFA24(v38);
    swift_beginAccess();
    v6 = -[NSObject view](v1, sel_view);
    if (v6)
    {
      v7 = v6;
      v8 = 0;
      v9 = (Class *)((char *)&v1->isa + v5);
      v10 = 401;
      v37 = xmmword_1DD2FE550;
      v36 = xmmword_1DD2FE560;
      v35 = xmmword_1DD2FE570;
      v34 = xmmword_1DD2FE580;
      v33 = xmmword_1DD2FE590;
      while (1)
      {
        objc_msgSend(v7, sel_bounds, v33, v34, v35, v36, v37);
        v12 = v11;
        v14 = v13;

        v15 = *(uint64_t *)((char *)&v1->isa + v3);
        if (!v15
          || (*(double *)(v15 + 16) == v12 ? (v16 = *(double *)(v15 + 24) == v14) : (v16 = 0),
              !v16 && (*(Class *)((char *)&v1->isa + v3) = 0, swift_release(), !*(Class *)((char *)&v1->isa + v3))))
        {
          type metadata accessor for NewSpiralLayoutProvider();
          v17 = swift_allocObject();
          v18 = objc_msgSend((id)objc_opt_self(), sel_currentDevice);
          v19 = objc_msgSend(v18, sel_userInterfaceIdiom);

          if (v19)
          {
            v20 = objc_msgSend((id)objc_opt_self(), sel_mainScreen);
            objc_msgSend(v20, sel_bounds);
            v22 = v21;
            v24 = v23;

            v25 = v24 >= v22 ? v22 : v24;
            if (v25 >= 768.0)
              v26 = v25 <= 820.0 ? 2 : 3;
            else
              v26 = 1;
          }
          else
          {
            v26 = 0;
          }
          *(_BYTE *)(v17 + 32) = v26;
          *(_QWORD *)(v17 + 40) = 0x4075E00000000000;
          *(_OWORD *)(v17 + 48) = v37;
          *(_BYTE *)(v17 + 64) = 1;
          *(_OWORD *)(v17 + 72) = v36;
          *(_OWORD *)(v17 + 88) = v35;
          *(_OWORD *)(v17 + 104) = v34;
          *(_OWORD *)(v17 + 120) = v33;
          *(double *)(v17 + 16) = v12;
          *(double *)(v17 + 24) = v14;
          *(Class *)((char *)&v1->isa + v3) = (Class)v17;
          swift_release();
          if (!*(Class *)((char *)&v1->isa + v3))
            goto LABEL_48;
        }
        if (!--v10)
          break;
        v27 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3890]), sel_init);
        isa = v4->isa;
        if (((unint64_t)v4->isa & 0xC000000000000001) != 0)
        {
          swift_bridgeObjectRetain();
          v29 = (id)MEMORY[0x1DF0D75E4](v8, isa);
          swift_bridgeObjectRelease();
        }
        else
        {
          if ((v8 & 0x8000000000000000) != 0)
          {
            __break(1u);
LABEL_43:
            __break(1u);
LABEL_44:
            __break(1u);
LABEL_45:
            swift_bridgeObjectRetain();
            sub_1DD2FA0F0();
            swift_bridgeObjectRelease();
LABEL_38:
            sub_1DD2F9FC4();

            _os_log_impl(&dword_1DD2AD000, v1, (os_log_type_t)v27, "[createEmojiViews] created %ld emoji views", (uint8_t *)v8, 0xCu);
            MEMORY[0x1DF0D80DC](v8, -1, -1);
            goto LABEL_40;
          }
          if (v8 >= *(_QWORD *)(((unint64_t)isa & 0xFFFFFFFFFFFFF8) + 0x10))
            goto LABEL_43;
          v29 = *((id *)isa + v8 + 4);
        }
        objc_msgSend(v27, sel_setImage_, v29);

        objc_msgSend(v27, sel_setContentMode_, 1);
        v30 = -[NSObject view](v1, sel_view);
        if (!v30)
          goto LABEL_47;
        v31 = v30;
        objc_msgSend(v30, sel_addSubview_, v27);

        swift_beginAccess();
        v32 = v27;
        MEMORY[0x1DF0D7458]();
        if (*(_QWORD *)((*v9 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*v9 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_1DD2F9F04();
        LOBYTE(v27) = (_BYTE)v9;
        sub_1DD2F9F10();
        sub_1DD2F9EF8();
        swift_endAccess();

        if (__OFADD__(v8, 1))
          goto LABEL_44;
        if (v8 + 1 == *(_QWORD *)(v41 + 16))
          v8 = 0;
        else
          ++v8;
        v7 = -[NSObject view](v1, sel_view);
        if (!v7)
          goto LABEL_46;
      }
      sub_1DD2C3968((uint64_t)v39, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1DD2C39CC);
      v4 = v1;
      v1 = sub_1DD2F9CD0();
      LOBYTE(v27) = sub_1DD2F9F40();
      if (os_log_type_enabled(v1, (os_log_type_t)v27))
      {
        v8 = swift_slowAlloc();
        *(_DWORD *)v8 = 134217984;
        swift_beginAccess();
        if (*v9 >> 62)
          goto LABEL_45;
        goto LABEL_38;
      }

LABEL_40:
      return;
    }
LABEL_46:
    __break(1u);
LABEL_47:
    __break(1u);
LABEL_48:
    __break(1u);
  }
}

uint64_t sub_1DD2D23E4()
{
  uint64_t v0;
  unint64_t v1;
  CGFloat v2;
  CGFloat tx;
  CGFloat ty;
  unint64_t *v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t result;
  double *v9;
  double *v10;
  uint64_t v11;
  id v12;
  void *v13;
  uint64_t v14;
  double v15;
  double v16;
  id v17;
  double v18;
  double v19;
  id v20;
  CGFloat d;
  CGFloat c;
  CGFloat b;
  CGFloat a;
  CGAffineTransform v25;
  CGAffineTransform t2;
  CGAffineTransform t1;

  sub_1DD2D3CCC();
  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC11EmojiPoster41EmojiForegroundSpiralLayersViewController_deviceOrientation)
     - 2;
  v2 = 0.0;
  if (v1 <= 2)
    v2 = dbl_1DD2FE678[v1];
  CGAffineTransformMakeRotation(&t1, v2);
  b = t1.b;
  a = t1.a;
  tx = t1.tx;
  d = t1.d;
  c = t1.c;
  ty = t1.ty;
  v5 = (unint64_t *)(v0 + OBJC_IVAR____TtC11EmojiPoster41EmojiForegroundSpiralLayersViewController_emojiImageViews);
  swift_beginAccess();
  v6 = *v5;
  if (!(v6 >> 62))
  {
    v7 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_retain();
    result = swift_bridgeObjectRetain();
    if (v7)
      goto LABEL_5;
LABEL_12:
    swift_release();
    return swift_bridgeObjectRelease();
  }
  swift_retain();
  swift_bridgeObjectRetain();
  result = sub_1DD2FA0F0();
  v7 = result;
  if (!result)
    goto LABEL_12;
LABEL_5:
  if (v7 >= 1)
  {
    v9 = (double *)(v0 + OBJC_IVAR____TtC11EmojiPoster41EmojiForegroundSpiralLayersViewController_unlockProgress);
    v10 = (double *)(v0 + OBJC_IVAR____TtC11EmojiPoster41EmojiForegroundSpiralLayersViewController_wakeProgress);
    swift_beginAccess();
    swift_beginAccess();
    v11 = 0;
    do
    {
      if ((v6 & 0xC000000000000001) != 0)
        v12 = (id)MEMORY[0x1DF0D75E4](v11, v6);
      else
        v12 = *(id *)(v6 + 8 * v11 + 32);
      v13 = v12;
      v14 = v11 + 1;
      CGAffineTransformMakeRotation(&t1, ((double)v11 * -29.135 + 180.0 + (double)v11 * 0.000192159 + 106.479) * -0.0174532925);
      t2.a = a;
      t2.b = b;
      t2.c = c;
      t2.d = d;
      t2.tx = tx;
      t2.ty = ty;
      CGAffineTransformConcat(&v25, &t1, &t2);
      t1 = v25;
      objc_msgSend(v13, sel_setTransform_, &t1);
      v15 = *v9;
      v16 = *v10;
      v17 = v13;
      sub_1DD2EFE04(v11, v15, v16);
      objc_msgSend(v17, sel_setCenter_);

      sub_1DD2EFF60(v11);
      v19 = v18;
      v20 = v17;
      objc_msgSend(v20, sel_bounds);
      objc_msgSend(v20, sel_setBounds_);

      objc_msgSend(v20, sel_setHidden_, v19 <= 1.0);
      v11 = v14;
    }
    while (v7 != v14);
    goto LABEL_12;
  }
  __break(1u);
  return result;
}

char *sub_1DD2D26F8()
{
  uint64_t v0;
  char *v1;
  uint64_t v2;
  void *v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  id v13;
  char *result;
  char *v15;
  id v16;
  uint64_t v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  void **v36;
  void *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;

  v3 = v1;
  sub_1DD2D3CCC();
  v4 = &v1[OBJC_IVAR____TtC11EmojiPoster41EmojiForegroundSpiralLayersViewController_emojiImageViews];
  swift_beginAccess();
  if (*(_QWORD *)v4 >> 62)
  {
    swift_retain();
    swift_bridgeObjectRetain();
    v5 = sub_1DD2FA0F0();
    swift_bridgeObjectRelease();
  }
  else
  {
    v5 = *(_QWORD *)((*(_QWORD *)v4 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_retain();
  }
  v6 = *(_QWORD *)v4;
  v7 = *(_QWORD *)v4 >> 62;
  if (v5 <= 399)
  {
    if (v7)
    {
      swift_bridgeObjectRetain();
      v8 = sub_1DD2FA0F0();
      swift_bridgeObjectRelease();
    }
    else
    {
      v8 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    v0 = 400 - v8;
    if (!__OFSUB__(400, v8))
    {
      v9 = sub_1DD2F9CD0();
      v10 = sub_1DD2F9F40();
      if (os_log_type_enabled(v9, v10))
      {
        v11 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)v11 = 134217984;
        sub_1DD2F9FC4();
        _os_log_impl(&dword_1DD2AD000, v9, v10, "[updateEmojiViews] creating %ld new emoji views", v11, 0xCu);
        MEMORY[0x1DF0D80DC](v11, -1, -1);
      }

      if (v0 >= 1)
      {
        v12 = v8 - 400;
        while (1)
        {
          v13 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3890]), sel_init);
          objc_msgSend(v13, sel_setContentMode_, 1);
          result = (char *)objc_msgSend(v3, sel_view);
          if (!result)
            break;
          v15 = result;
          objc_msgSend(result, sel_addSubview_, v13);

          swift_beginAccess();
          v16 = v13;
          MEMORY[0x1DF0D7458]();
          if (*(_QWORD *)((*(_QWORD *)v4 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*(_QWORD *)v4 & 0xFFFFFFFFFFFFFF8)
                                                                                      + 0x18) >> 1)
            sub_1DD2F9F04();
          sub_1DD2F9F10();
          sub_1DD2F9EF8();
          swift_endAccess();

          if (__CFADD__(v12++, 1))
            return (char *)swift_release();
        }
        goto LABEL_76;
      }
      return (char *)swift_release();
    }
    __break(1u);
    goto LABEL_55;
  }
  if (v7)
  {
LABEL_55:
    swift_bridgeObjectRetain();
    v41 = sub_1DD2FA0F0();
    swift_bridgeObjectRelease();
    if (v41 < 401)
      return (char *)swift_release();
    goto LABEL_19;
  }
  if (*(uint64_t *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10) < 401)
    return (char *)swift_release();
LABEL_19:
  if (!(*(_QWORD *)v4 >> 62))
  {
    v18 = *(_QWORD *)((*(_QWORD *)v4 & 0xFFFFFFFFFFFFF8) + 0x10);
    v19 = v18 - 400;
    if (!__OFSUB__(v18, 400))
      goto LABEL_21;
LABEL_59:
    __break(1u);
    goto LABEL_60;
  }
  swift_bridgeObjectRetain();
  v42 = sub_1DD2FA0F0();
  swift_bridgeObjectRelease();
  v19 = v42 - 400;
  if (__OFSUB__(v42, 400))
    goto LABEL_59;
LABEL_21:
  v20 = sub_1DD2F9CD0();
  v21 = sub_1DD2F9F40();
  if (os_log_type_enabled(v20, v21))
  {
    v0 = 12;
    v22 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v22 = 134217984;
    sub_1DD2F9FC4();
    _os_log_impl(&dword_1DD2AD000, v20, v21, "[updateEmojiViews] removing %ld emoji views", v22, 0xCu);
    MEMORY[0x1DF0D80DC](v22, -1, -1);
  }

  if (!(*(_QWORD *)v4 >> 62))
  {
    v23 = *(_QWORD *)((*(_QWORD *)v4 & 0xFFFFFFFFFFFFF8) + 0x10);
    v24 = v23 - v19;
    if (!__OFSUB__(v23, v19))
      goto LABEL_25;
LABEL_62:
    __break(1u);
    goto LABEL_63;
  }
LABEL_60:
  swift_bridgeObjectRetain();
  v43 = sub_1DD2FA0F0();
  swift_bridgeObjectRelease();
  v24 = v43 - v19;
  if (__OFSUB__(v43, v19))
    goto LABEL_62;
LABEL_25:
  if (!(*(_QWORD *)v4 >> 62))
  {
    v25 = *(_QWORD *)((*(_QWORD *)v4 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v25 >= v24)
      goto LABEL_27;
LABEL_64:
    __break(1u);
    goto LABEL_65;
  }
LABEL_63:
  swift_bridgeObjectRetain();
  v25 = sub_1DD2FA0F0();
  swift_bridgeObjectRelease();
  if (v25 < v24)
    goto LABEL_64;
LABEL_27:
  v2 = *(_QWORD *)v4;
  v0 = *(_QWORD *)v4 >> 62;
  if (!v0)
  {
    v26 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = (char *)swift_bridgeObjectRetain();
    if (v26 >= v24)
      goto LABEL_29;
LABEL_66:
    __break(1u);
    goto LABEL_67;
  }
LABEL_65:
  swift_bridgeObjectRetain_n();
  v44 = sub_1DD2FA0F0();
  result = (char *)swift_bridgeObjectRelease();
  if (v44 < v24)
    goto LABEL_66;
LABEL_29:
  if (v24 < 0)
  {
LABEL_67:
    __break(1u);
LABEL_68:
    __break(1u);
    goto LABEL_69;
  }
  if (v0)
  {
    swift_bridgeObjectRetain();
    v27 = sub_1DD2FA0F0();
    result = (char *)swift_bridgeObjectRelease();
  }
  else
  {
    v27 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  if (v27 < v25)
    goto LABEL_68;
  if ((v2 & 0xC000000000000001) != 0 && v24 != v25)
  {
    if (v24 >= (unint64_t)v25)
    {
LABEL_74:
      __break(1u);
      goto LABEL_75;
    }
    sub_1DD2C6518();
    result = (char *)v24;
    do
    {
      v28 = result + 1;
      sub_1DD2FA03C();
      result = v28;
    }
    while ((char *)v25 != v28);
  }
  if (v0)
  {
    swift_bridgeObjectRetain();
    sub_1DD2FA0FC();
    v29 = v32;
    v24 = v33;
    v35 = v34;
    result = (char *)swift_bridgeObjectRelease_n();
    v35 >>= 1;
    v31 = v35 - v24;
    v30 = (uint64_t)v35 <= v24;
    if (v35 == v24)
      goto LABEL_47;
  }
  else
  {
    v29 = (v2 & 0xFFFFFFFFFFFFFF8) + 32;
    v31 = v25 - v24;
    v30 = v25 <= v24;
    if (v25 == v24)
      goto LABEL_47;
  }
  if (!v30)
  {
    swift_unknownObjectRetain();
    v36 = (void **)(v29 + 8 * v24);
    do
    {
      v37 = *v36++;
      objc_msgSend(v37, sel_removeFromSuperview);
      --v31;
    }
    while (v31);
    result = (char *)swift_unknownObjectRelease();
LABEL_47:
    if (!(*(_QWORD *)v4 >> 62))
    {
      v38 = *(_QWORD *)((*(_QWORD *)v4 & 0xFFFFFFFFFFFFF8) + 0x10);
      v39 = v38 - v19;
      if (!__OFSUB__(v38, v19))
        goto LABEL_49;
      goto LABEL_71;
    }
LABEL_69:
    swift_bridgeObjectRetain();
    v45 = sub_1DD2FA0F0();
    result = (char *)swift_bridgeObjectRelease();
    v39 = v45 - v19;
    if (!__OFSUB__(v45, v19))
    {
LABEL_49:
      if (!(*(_QWORD *)v4 >> 62))
      {
        v40 = *(_QWORD *)((*(_QWORD *)v4 & 0xFFFFFFFFFFFFF8) + 0x10);
        if (v40 >= v39)
        {
LABEL_51:
          swift_beginAccess();
          sub_1DD2D35F0(v39, v40);
          swift_endAccess();
          swift_release();
          return (char *)swift_unknownObjectRelease();
        }
        goto LABEL_73;
      }
LABEL_72:
      swift_bridgeObjectRetain();
      v40 = sub_1DD2FA0F0();
      result = (char *)swift_bridgeObjectRelease();
      if (v40 >= v39)
        goto LABEL_51;
LABEL_73:
      __break(1u);
      goto LABEL_74;
    }
LABEL_71:
    __break(1u);
    goto LABEL_72;
  }
LABEL_75:
  __break(1u);
LABEL_76:
  __break(1u);
  return result;
}

void sub_1DD2D2DE8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t *v10;
  uint64_t *v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  id v18;
  uint64_t v20[3];
  _QWORD v21[16];
  _BYTE v22[128];
  _BYTE v23[112];
  uint64_t v24;

  v1 = v0;
  v2 = v0 + OBJC_IVAR____TtC11EmojiPoster41EmojiForegroundSpiralLayersViewController_configuration;
  swift_beginAccess();
  sub_1DD2C37E8(v2, (uint64_t)v22);
  sub_1DD2C37E8((uint64_t)v22, (uint64_t)v23);
  if (sub_1DD2C61E4((uint64_t)v23) == 1)
    return;
  sub_1DD2C3968((uint64_t)v22, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1DD2C3830);
  sub_1DD2D3CCC();
  sub_1DD2C37E8((uint64_t)v22, (uint64_t)v21);
  sub_1DD2BFA24(v21);
  sub_1DD2C3968((uint64_t)v22, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1DD2C3830);
  swift_retain();
  v3 = sub_1DD2F9CD0();
  v4 = sub_1DD2F9F40();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc();
    v6 = swift_slowAlloc();
    v20[0] = v6;
    *(_DWORD *)v5 = 136315138;
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EDB61500);
    sub_1DD2C64CC();
    v7 = sub_1DD2F9D90();
    v9 = v8;
    swift_bridgeObjectRelease();
    sub_1DD2EF110(v7, v9, v20);
    sub_1DD2F9FC4();
    swift_bridgeObjectRelease();
    sub_1DD2C3968((uint64_t)v22, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1DD2C39CC);
    sub_1DD2C3968((uint64_t)v22, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1DD2C39CC);
    _os_log_impl(&dword_1DD2AD000, v3, v4, "Updating for changed emoji: %s", v5, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1DF0D80DC](v6, -1, -1);
    MEMORY[0x1DF0D80DC](v5, -1, -1);

  }
  else
  {

    sub_1DD2C3968((uint64_t)v22, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1DD2C39CC);
    sub_1DD2C3968((uint64_t)v22, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1DD2C39CC);
  }
  v10 = (uint64_t *)(v1 + OBJC_IVAR____TtC11EmojiPoster41EmojiForegroundSpiralLayersViewController_emojiImages);
  swift_beginAccess();
  *v10 = MEMORY[0x1E0DEE9D8];
  swift_bridgeObjectRelease();
  sub_1DD2D1AC0();
  sub_1DD2D26F8();
  v11 = (uint64_t *)(v1 + OBJC_IVAR____TtC11EmojiPoster41EmojiForegroundSpiralLayersViewController_emojiImageViews);
  v12 = *(_QWORD *)(v24 + 16);
  swift_beginAccess();
  v13 = 0;
  v14 = 0;
  while (1)
  {
    v15 = *v11;
    if ((*v11 & 0xC000000000000001) == 0)
      break;
    swift_bridgeObjectRetain();
    v16 = (id)MEMORY[0x1DF0D75E4](v14, v15);
    swift_bridgeObjectRelease();
LABEL_9:
    v17 = *v10;
    if ((*v10 & 0xC000000000000001) != 0)
    {
      swift_bridgeObjectRetain();
      v18 = (id)MEMORY[0x1DF0D75E4](v13, v17);
      swift_bridgeObjectRelease();
    }
    else
    {
      if ((v13 & 0x8000000000000000) != 0)
        goto LABEL_24;
      if (v13 >= *(_QWORD *)((v17 & 0xFFFFFFFFFFFFF8) + 0x10))
        goto LABEL_25;
      v18 = *(id *)(v17 + 8 * v13 + 32);
    }
    objc_msgSend(v16, sel_setImage_, v18);

    if (__OFADD__(v13, 1))
      goto LABEL_26;
    if (v13 + 1 == v12)
      v13 = 0;
    else
      ++v13;
    if (v14++ >= 0x18F)
    {
      sub_1DD2C3968((uint64_t)v22, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1DD2C39CC);
      swift_release();
      return;
    }
  }
  if (v14 < *(_QWORD *)((v15 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v16 = *(id *)(v15 + 8 * v14 + 32);
    goto LABEL_9;
  }
  __break(1u);
LABEL_24:
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
}

id EmojiForegroundSpiralLayersViewController.__allocating_init(nibName:bundle:)(uint64_t a1, uint64_t a2, void *a3)
{
  objc_class *v3;
  objc_class *v4;
  void *v6;
  id v7;

  v4 = v3;
  if (a2)
  {
    v6 = (void *)sub_1DD2F9DB4();
    swift_bridgeObjectRelease();
  }
  else
  {
    v6 = 0;
  }
  v7 = objc_msgSend(objc_allocWithZone(v4), sel_initWithNibName_bundle_, v6, a3);

  return v7;
}

void EmojiForegroundSpiralLayersViewController.init(nibName:bundle:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id EmojiForegroundSpiralLayersViewController.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for EmojiForegroundSpiralLayersViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1DD2D3384@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  _BYTE v5[128];

  v3 = *v1 + OBJC_IVAR____TtC11EmojiPoster41EmojiForegroundSpiralLayersViewController_configuration;
  swift_beginAccess();
  sub_1DD2C37E8(v3, (uint64_t)v5);
  sub_1DD2C37E8((uint64_t)v5, a1);
  return sub_1DD2C3968((uint64_t)v5, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1DD2C3830);
}

uint64_t sub_1DD2D33F4(uint64_t a1)
{
  return sub_1DD2D11D0(a1);
}

void (*sub_1DD2D3414(_QWORD *a1))(_QWORD *a1)
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1DD2D1338(v2);
  return sub_1DD2C5E6C;
}

double sub_1DD2D345C()
{
  _QWORD *v0;
  uint64_t v1;

  v1 = *v0 + OBJC_IVAR____TtC11EmojiPoster41EmojiForegroundSpiralLayersViewController_wakeProgress;
  swift_beginAccess();
  return *(double *)v1;
}

uint64_t sub_1DD2D34A4(uint64_t a1, uint64_t a2, double a3)
{
  return sub_1DD2D3550(a3, a1, a2, &OBJC_IVAR____TtC11EmojiPoster41EmojiForegroundSpiralLayersViewController_wakeProgress);
}

uint64_t (*sub_1DD2D34B0(uint64_t a1))()
{
  _QWORD *v1;

  *(_QWORD *)(a1 + 24) = *v1;
  swift_beginAccess();
  return sub_1DD2D151C;
}

double sub_1DD2D34FC()
{
  _QWORD *v0;
  uint64_t v1;

  v1 = *v0 + OBJC_IVAR____TtC11EmojiPoster41EmojiForegroundSpiralLayersViewController_unlockProgress;
  swift_beginAccess();
  return *(double *)v1;
}

uint64_t sub_1DD2D3544(uint64_t a1, uint64_t a2, double a3)
{
  return sub_1DD2D3550(a3, a1, a2, &OBJC_IVAR____TtC11EmojiPoster41EmojiForegroundSpiralLayersViewController_unlockProgress);
}

uint64_t sub_1DD2D3550(double a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  _QWORD *v4;
  double *v6;

  v6 = (double *)(*v4 + *a4);
  swift_beginAccess();
  *v6 = a1;
  return sub_1DD2D23E4();
}

uint64_t (*sub_1DD2D35A4(uint64_t a1))()
{
  _QWORD *v1;

  *(_QWORD *)(a1 + 24) = *v1;
  swift_beginAccess();
  return sub_1DD2D151C;
}

uint64_t sub_1DD2D35F0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t *v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  const void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t result;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    v2 = a2;
    v4 = a1;
    v5 = *v3;
    if (!(*v3 >> 62))
    {
      if (*(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10) >= a2)
        goto LABEL_4;
LABEL_31:
      __break(1u);
      goto LABEL_32;
    }
  }
  swift_bridgeObjectRetain();
  v19 = sub_1DD2FA0F0();
  swift_bridgeObjectRelease();
  if (v19 < v2)
    goto LABEL_31;
LABEL_4:
  v7 = v2 - v4;
  if (__OFSUB__(v2, v4))
  {
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  v6 = v4 - v2;
  if (__OFSUB__(0, v7))
  {
LABEL_33:
    __break(1u);
LABEL_34:
    swift_bridgeObjectRetain();
    v8 = sub_1DD2FA0F0();
    swift_bridgeObjectRelease();
    v9 = v8 + v6;
    if (!__OFADD__(v8, v6))
      goto LABEL_8;
LABEL_36:
    __break(1u);
LABEL_37:
    swift_bridgeObjectRetain();
    v12 = sub_1DD2FA0F0();
    swift_bridgeObjectRelease();
    goto LABEL_15;
  }
  v5 = *v3;
  if (*v3 >> 62)
    goto LABEL_34;
  v8 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
  v9 = v8 - v7;
  if (__OFADD__(v8, v6))
    goto LABEL_36;
LABEL_8:
  v5 = *v3;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *v3 = v5;
  v8 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v5 & 0x8000000000000000) == 0 && (v5 & 0x4000000000000000) == 0)
  {
    v11 = v5 & 0xFFFFFFFFFFFFFF8;
    if (v9 <= *(_QWORD *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      goto LABEL_18;
    v8 = 1;
  }
  if (v5 >> 62)
    goto LABEL_37;
  v12 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
LABEL_15:
  if (v12 <= v9)
    v12 = v9;
  swift_bridgeObjectRetain();
  v5 = MEMORY[0x1DF0D75F0](v8, v12, 1, v5);
  swift_bridgeObjectRelease();
  *v3 = v5;
  v11 = v5 & 0xFFFFFFFFFFFFFF8;
LABEL_18:
  sub_1DD2C6518();
  swift_arrayDestroy();
  if (!v6)
    return sub_1DD2F9EF8();
  if (!(v5 >> 62))
  {
    v13 = *(_QWORD *)(v11 + 16);
    v14 = v13 - v2;
    if (!__OFSUB__(v13, v2))
      goto LABEL_21;
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  swift_bridgeObjectRetain();
  v20 = sub_1DD2FA0F0();
  swift_bridgeObjectRelease();
  v14 = v20 - v2;
  if (__OFSUB__(v20, v2))
    goto LABEL_40;
LABEL_21:
  if ((v14 & 0x8000000000000000) == 0)
  {
    v15 = (const void *)(v11 + 32 + 8 * v2);
    if (v4 != v2 || v11 + 32 + 8 * v4 >= (unint64_t)v15 + 8 * v14)
      memmove((void *)(v11 + 32 + 8 * v4), v15, 8 * v14);
    if (!(v5 >> 62))
    {
      v16 = *(_QWORD *)(v11 + 16);
      v17 = v16 + v6;
      if (!__OFADD__(v16, v6))
      {
LABEL_27:
        *(_QWORD *)(v11 + 16) = v17;
        return sub_1DD2F9EF8();
      }
      goto LABEL_43;
    }
LABEL_41:
    swift_bridgeObjectRetain();
    v21 = sub_1DD2FA0F0();
    swift_bridgeObjectRelease();
    v17 = v21 + v6;
    if (!__OFADD__(v21, v6))
      goto LABEL_27;
LABEL_43:
    __break(1u);
  }
  result = sub_1DD2FA12C();
  __break(1u);
  return result;
}

id sub_1DD2D38BC(uint64_t a1)
{
  void *v1;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  objc_super v7;
  _OWORD v8[8];

  v3 = v1;
  sub_1DD2F9CDC();
  v3[OBJC_IVAR____TtC11EmojiPoster41EmojiForegroundSpiralLayersViewController_shouldRotateEmojiWithDevice] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC11EmojiPoster41EmojiForegroundSpiralLayersViewController_deviceOrientation] = 1;
  v4 = (uint64_t)&v3[OBJC_IVAR____TtC11EmojiPoster41EmojiForegroundSpiralLayersViewController_configuration];
  sub_1DD2C618C(v8);
  sub_1DD2C37E8((uint64_t)v8, v4);
  *(_QWORD *)&v3[OBJC_IVAR____TtC11EmojiPoster41EmojiForegroundSpiralLayersViewController__layoutProvider] = 0;
  *(int64x2_t *)&v3[OBJC_IVAR____TtC11EmojiPoster41EmojiForegroundSpiralLayersViewController_emojiSize] = vdupq_n_s64(0x4064000000000000uLL);
  v5 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)&v3[OBJC_IVAR____TtC11EmojiPoster41EmojiForegroundSpiralLayersViewController_emojiImageViews] = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)&v3[OBJC_IVAR____TtC11EmojiPoster41EmojiForegroundSpiralLayersViewController_emojiImages] = v5;
  *(_QWORD *)&v3[OBJC_IVAR____TtC11EmojiPoster41EmojiForegroundSpiralLayersViewController_wakeProgress] = 0x3FF0000000000000;
  *(_QWORD *)&v3[OBJC_IVAR____TtC11EmojiPoster41EmojiForegroundSpiralLayersViewController_unlockProgress] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC11EmojiPoster41EmojiForegroundSpiralLayersViewController_emojiRenderer] = a1;
  swift_retain();

  v7.receiver = v3;
  v7.super_class = (Class)type metadata accessor for EmojiForegroundSpiralLayersViewController();
  return objc_msgSendSuper2(&v7, sel_initWithNibName_bundle_, 0, 0);
}

uint64_t type metadata accessor for EmojiForegroundSpiralLayersViewController()
{
  uint64_t result;

  result = qword_1EDB616E0;
  if (!qword_1EDB616E0)
    return swift_getSingletonMetadata();
  return result;
}

double sub_1DD2D3A50@<D0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return keypath_get_4Tm(a1, &OBJC_IVAR____TtC11EmojiPoster41EmojiForegroundSpiralLayersViewController_wakeProgress, a2);
}

uint64_t sub_1DD2D3A5C(uint64_t *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_2Tm(a1, a2, a3, a4, &OBJC_IVAR____TtC11EmojiPoster41EmojiForegroundSpiralLayersViewController_wakeProgress);
}

double sub_1DD2D3A68@<D0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return keypath_get_4Tm(a1, &OBJC_IVAR____TtC11EmojiPoster41EmojiForegroundSpiralLayersViewController_unlockProgress, a2);
}

uint64_t sub_1DD2D3A74(uint64_t *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_2Tm(a1, a2, a3, a4, &OBJC_IVAR____TtC11EmojiPoster41EmojiForegroundSpiralLayersViewController_unlockProgress);
}

uint64_t keypath_set_2Tm(uint64_t *a1, _QWORD *a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  uint64_t v5;
  _QWORD *v6;

  v5 = *a1;
  v6 = (_QWORD *)(*a2 + *a5);
  swift_beginAccess();
  *v6 = v5;
  return sub_1DD2D23E4();
}

uint64_t sub_1DD2D3AD4()
{
  return type metadata accessor for EmojiForegroundSpiralLayersViewController();
}

uint64_t sub_1DD2D3ADC()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1DD2F9CE8();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for EmojiForegroundSpiralLayersViewController()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of EmojiForegroundSpiralLayersViewController.setDeviceInterfaceOrientation(_:animated:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xD8))();
}

uint64_t dispatch thunk of EmojiForegroundSpiralLayersViewController.configuration.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xE0))();
}

uint64_t dispatch thunk of EmojiForegroundSpiralLayersViewController.configuration.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xE8))();
}

uint64_t dispatch thunk of EmojiForegroundSpiralLayersViewController.configuration.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xF0))();
}

uint64_t dispatch thunk of EmojiForegroundSpiralLayersViewController.wakeProgress.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x148))();
}

uint64_t dispatch thunk of EmojiForegroundSpiralLayersViewController.wakeProgress.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x150))();
}

uint64_t dispatch thunk of EmojiForegroundSpiralLayersViewController.wakeProgress.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x158))();
}

uint64_t dispatch thunk of EmojiForegroundSpiralLayersViewController.unlockProgress.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x160))();
}

uint64_t dispatch thunk of EmojiForegroundSpiralLayersViewController.unlockProgress.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x168))();
}

uint64_t dispatch thunk of EmojiForegroundSpiralLayersViewController.unlockProgress.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x170))();
}

uint64_t dispatch thunk of EmojiForegroundSpiralLayersViewController.__allocating_init(emojiRenderer:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 376))();
}

double *sub_1DD2D3CCC()
{
  char *v0;
  char *v1;
  double *result;
  double *v3;
  double v4;
  double v5;
  double v6;
  double v7;
  uint64_t v8;
  BOOL v9;

  v1 = v0;
  result = (double *)objc_msgSend(v0, sel_view);
  if (!result)
  {
    __break(1u);
LABEL_11:
    __break(1u);
    return result;
  }
  v3 = result;
  objc_msgSend(result, sel_bounds);
  v5 = v4;
  v7 = v6;

  v8 = OBJC_IVAR____TtC11EmojiPoster41EmojiForegroundSpiralLayersViewController__layoutProvider;
  result = *(double **)&v1[OBJC_IVAR____TtC11EmojiPoster41EmojiForegroundSpiralLayersViewController__layoutProvider];
  if (!result
    || (result[2] == v5 ? (v9 = result[3] == v7) : (v9 = 0),
        !v9
     && (*(_QWORD *)&v1[OBJC_IVAR____TtC11EmojiPoster41EmojiForegroundSpiralLayersViewController__layoutProvider] = 0,
         swift_release(),
         (result = *(double **)&v1[v8]) == 0)))
  {
    type metadata accessor for NewSpiralLayoutProvider();
    swift_allocObject();
    *(_QWORD *)&v1[v8] = sub_1DD2EFD3C(v5, v7);
    swift_release();
    result = *(double **)&v1[v8];
    if (!result)
      goto LABEL_11;
  }
  return result;
}

uint64_t sub_1DD2D3DA4()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1DD2D3DC8()
{
  return swift_deallocObject();
}

uint64_t block_copy_helper_4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_4()
{
  return swift_release();
}

uint64_t sub_1DD2D3DF0(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

ValueMetadata *type metadata accessor for DecodableDefault.Sources()
{
  return &type metadata for DecodableDefault.Sources;
}

ValueMetadata *type metadata accessor for DecodableDefault.Sources.False()
{
  return &type metadata for DecodableDefault.Sources.False;
}

ValueMetadata *type metadata accessor for DecodableDefault()
{
  return &type metadata for DecodableDefault;
}

uint64_t sub_1DD2D3E28()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_1DD2D3E30()
{
  uint64_t result;
  unint64_t v1;

  result = swift_getAssociatedTypeWitness();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1DD2D3EAC(uint64_t *a1, uint64_t *a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  uint64_t v9;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if (v6 <= 7 && *(_QWORD *)(v5 + 64) <= 0x18uLL && (*(_DWORD *)(v5 + 80) & 0x100000) == 0)
  {
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
  }
  else
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v6 + 16) & ~v6));
    swift_retain();
  }
  return a1;
}

uint64_t sub_1DD2D3F40(uint64_t a1)
{
  uint64_t AssociatedTypeWitness;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 8))(a1, AssociatedTypeWitness);
}

uint64_t sub_1DD2D3F8C(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 16))(a1, a2, AssociatedTypeWitness);
  return a1;
}

uint64_t sub_1DD2D3FE4(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 24))(a1, a2, AssociatedTypeWitness);
  return a1;
}

uint64_t sub_1DD2D403C(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 32))(a1, a2, AssociatedTypeWitness);
  return a1;
}

uint64_t sub_1DD2D4094(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 40))(a1, a2, AssociatedTypeWitness);
  return a1;
}

uint64_t sub_1DD2D40EC(uint64_t a1, unsigned int a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  int v9;
  unsigned int v10;
  int v11;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  if (!a2)
    return 0;
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v6 = *(unsigned int *)(v5 + 84);
  if (a2 <= v6)
    goto LABEL_18;
  v7 = *(_QWORD *)(v5 + 64);
  v8 = 8 * v7;
  if (v7 <= 3)
  {
    v10 = ((a2 - v6 + ~(-1 << v8)) >> v8) + 1;
    if (HIWORD(v10))
    {
      v9 = *(_DWORD *)(a1 + v7);
      if (!v9)
        goto LABEL_18;
      goto LABEL_11;
    }
    if (v10 > 0xFF)
    {
      v9 = *(unsigned __int16 *)(a1 + v7);
      if (!*(_WORD *)(a1 + v7))
        goto LABEL_18;
      goto LABEL_11;
    }
    if (v10 < 2)
    {
LABEL_18:
      if ((_DWORD)v6)
        return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(a1, v6, AssociatedTypeWitness);
      return 0;
    }
  }
  v9 = *(unsigned __int8 *)(a1 + v7);
  if (!*(_BYTE *)(a1 + v7))
    goto LABEL_18;
LABEL_11:
  v11 = (v9 - 1) << v8;
  if (v7 > 3)
    v11 = 0;
  if ((_DWORD)v7)
  {
    if (v7 > 3)
      LODWORD(v7) = 4;
    __asm { BR              X11 }
  }
  return (v6 + v11 + 1);
}

void sub_1DD2D422C(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  uint64_t v6;
  unsigned int v7;
  size_t v8;
  unsigned int v9;
  unsigned int v10;
  unsigned int v11;
  int v12;

  v6 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v7 = *(_DWORD *)(v6 + 84);
  v8 = *(_QWORD *)(v6 + 64);
  if (a3 <= v7)
  {
    v9 = 0u;
  }
  else if (v8 <= 3)
  {
    v11 = ((a3 - v7 + ~(-1 << (8 * v8))) >> (8 * v8)) + 1;
    if (HIWORD(v11))
    {
      v9 = 4u;
    }
    else if (v11 >= 0x100)
    {
      v9 = 2;
    }
    else
    {
      v9 = v11 > 1;
    }
  }
  else
  {
    v9 = 1u;
  }
  if (v7 < a2)
  {
    v10 = ~v7 + a2;
    if (v8 < 4)
    {
      if ((_DWORD)v8)
      {
        v12 = v10 & ~(-1 << (8 * v8));
        bzero(a1, v8);
        if ((_DWORD)v8 == 3)
        {
          *(_WORD *)a1 = v12;
          a1[2] = BYTE2(v12);
        }
        else if ((_DWORD)v8 == 2)
        {
          *(_WORD *)a1 = v12;
        }
        else
        {
          *a1 = v12;
        }
      }
    }
    else
    {
      bzero(a1, v8);
      *(_DWORD *)a1 = v10;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X11 }
}

uint64_t type metadata accessor for DecodableDefault.Wrapper(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for DecodableDefault.Wrapper);
}

uint64_t sub_1DD2D440C()
{
  return MEMORY[0x1E0DEAFC0];
}

uint64_t sub_1DD2D4418@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t AssociatedTypeWitness;
  uint64_t v22;
  _QWORD v23[4];
  uint64_t v24;

  v19 = a4;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v8 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v20 = (char *)&v18 - v9;
  v24 = type metadata accessor for DecodableDefault.Wrapper(0, a2, a3, v10);
  v22 = *(_QWORD *)(v24 - 8);
  MEMORY[0x1E0C80A78](v24);
  v12 = (char *)&v18 - v11;
  (*(void (**)(uint64_t, uint64_t))(a3 + 24))(a2, a3);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DD2FA2A0();
  if (v4)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    return (*(uint64_t (**)(char *, uint64_t))(v22 + 8))(v12, v24);
  }
  else
  {
    __swift_project_boxed_opaque_existential_1(v23, v23[3]);
    v13 = AssociatedTypeWitness;
    swift_getAssociatedConformanceWitness();
    v14 = v20;
    sub_1DD2FA21C();
    (*(void (**)(char *, char *, uint64_t))(v8 + 40))(v12, v14, v13);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v23);
    v15 = v22;
    v16 = v24;
    (*(void (**)(uint64_t, char *, uint64_t))(v22 + 16))(v19, v12, v24);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v12, v16);
  }
}

uint64_t sub_1DD2D4620@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_1DD2D4418(a1, *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24), a3);
}

void sub_1DD2D463C(_BYTE *a1@<X8>)
{
  *a1 = 0;
}

uint64_t sub_1DD2D4644(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 - 8) + 8);
  return MEMORY[0x1DF0D8040](&unk_1DD2FE76C, a1, &v4);
}

uint64_t sub_1DD2D467C()
{
  swift_getAssociatedTypeWitness();
  return sub_1DD2F9D9C() & 1;
}

uint64_t sub_1DD2D46E4()
{
  swift_getAssociatedTypeWitness();
  return sub_1DD2F9D84();
}

uint64_t sub_1DD2D4738()
{
  sub_1DD2FA270();
  swift_getAssociatedTypeWitness();
  sub_1DD2F9D84();
  return sub_1DD2FA294();
}

uint64_t sub_1DD2D47A8()
{
  return sub_1DD2D467C();
}

uint64_t sub_1DD2D47B8()
{
  return sub_1DD2D4738();
}

uint64_t sub_1DD2D47C0()
{
  return sub_1DD2D46E4();
}

uint64_t sub_1DD2D47C8()
{
  sub_1DD2FA270();
  sub_1DD2D46E4();
  return sub_1DD2FA294();
}

uint64_t sub_1DD2D4818(_QWORD *a1)
{
  _BYTE v2[24];
  uint64_t v3;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DD2FA2B8();
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v2, v3);
  swift_getAssociatedTypeWitness();
  sub_1DD2FA228();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v2);
}

uint64_t sub_1DD2D48DC(_QWORD *a1)
{
  return sub_1DD2D4818(a1);
}

uint64_t __swift_instantiateGenericMetadata(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD v6[3];

  v6[0] = a2;
  v6[1] = a3;
  v6[2] = a4;
  return MEMORY[0x1DF0D7FEC](a1, v6, a5);
}

BOOL static GradientStyle.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t GradientStyle.hash(into:)()
{
  return sub_1DD2FA27C();
}

uint64_t GradientStyle.hashValue.getter()
{
  sub_1DD2FA270();
  sub_1DD2FA27C();
  return sub_1DD2FA294();
}

void sub_1DD2D49A4()
{
  void *v0;
  id v1;
  id v2;
  id v3;
  id v4;
  id v5;
  double v6;
  objc_super v7;

  v7.receiver = v0;
  v7.super_class = (Class)type metadata accessor for ColorButton();
  objc_msgSendSuper2(&v7, sel_layoutSubviews);
  v1 = objc_msgSend(v0, sel_layer);
  v2 = objc_msgSend((id)objc_opt_self(), sel_whiteColor);
  v3 = objc_msgSend(v2, sel_CGColor);

  objc_msgSend(v1, sel_setBorderColor_, v3);
  v4 = objc_msgSend(v0, sel_layer);
  objc_msgSend(v4, sel_setBorderWidth_, 10.0);

  v5 = objc_msgSend(v0, sel_layer);
  objc_msgSend(v0, sel_bounds);
  objc_msgSend(v5, sel_setCornerRadius_, v6 * 0.5);

}

uint64_t type metadata accessor for ColorButton()
{
  return objc_opt_self();
}

id ColorButton.__allocating_init(frame:)(double a1, double a2, double a3, double a4)
{
  objc_class *v4;

  return objc_msgSend(objc_allocWithZone(v4), sel_initWithFrame_, a1, a2, a3, a4);
}

id ColorButton.init(frame:)(double a1, double a2, double a3, double a4)
{
  void *v4;
  objc_super v10;

  v10.receiver = v4;
  v10.super_class = (Class)type metadata accessor for ColorButton();
  return objc_msgSendSuper2(&v10, sel_initWithFrame_, a1, a2, a3, a4);
}

id ColorButton.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

id ColorButton.init(coder:)(void *a1)
{
  void *v1;
  id v3;
  objc_super v5;

  v5.receiver = v1;
  v5.super_class = (Class)type metadata accessor for ColorButton();
  v3 = objc_msgSendSuper2(&v5, sel_initWithCoder_, a1);

  return v3;
}

id ColorButton.__deallocating_deinit()
{
  return sub_1DD2CF81C(type metadata accessor for ColorButton);
}

uint64_t sub_1DD2D4D20@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  _BYTE *v3;
  uint64_t result;

  v3 = (_BYTE *)(v1 + OBJC_IVAR____TtC11EmojiPoster31GradientConfigurationController_type);
  result = swift_beginAccess();
  *a1 = *v3;
  return result;
}

uint64_t sub_1DD2D4D6C(char *a1)
{
  uint64_t v1;
  char v2;
  _BYTE *v3;
  uint64_t result;

  v2 = *a1;
  v3 = (_BYTE *)(v1 + OBJC_IVAR____TtC11EmojiPoster31GradientConfigurationController_type);
  result = swift_beginAccess();
  *v3 = v2;
  return result;
}

uint64_t (*sub_1DD2D4DBC())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t sub_1DD2D4E00@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *a1 + OBJC_IVAR____TtC11EmojiPoster31GradientConfigurationController_gradientProperties;
  swift_beginAccess();
  v4 = *(_QWORD *)(v3 + 24);
  v5 = *(_QWORD *)(v3 + 32);
  v6 = *(_QWORD *)(v3 + 40);
  *(_BYTE *)a2 = *(_BYTE *)v3;
  *(_OWORD *)(a2 + 8) = *(_OWORD *)(v3 + 8);
  *(_QWORD *)(a2 + 24) = v4;
  *(_QWORD *)(a2 + 32) = v5;
  *(_QWORD *)(a2 + 40) = v6;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

void sub_1DD2D4E7C(char *a1, _QWORD *a2)
{
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;

  v2 = *a1;
  v7 = *(_OWORD *)(a1 + 8);
  v3 = *((_QWORD *)a1 + 3);
  v4 = *((_QWORD *)a1 + 4);
  v5 = *((_QWORD *)a1 + 5);
  v6 = *a2 + OBJC_IVAR____TtC11EmojiPoster31GradientConfigurationController_gradientProperties;
  swift_beginAccess();
  *(_BYTE *)v6 = v2;
  *(_OWORD *)(v6 + 8) = v7;
  *(_QWORD *)(v6 + 24) = v3;
  *(_QWORD *)(v6 + 32) = v4;
  *(_QWORD *)(v6 + 40) = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1DD2D625C();
}

uint64_t sub_1DD2D4F30@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = v1 + OBJC_IVAR____TtC11EmojiPoster31GradientConfigurationController_gradientProperties;
  swift_beginAccess();
  v4 = *(_QWORD *)(v3 + 24);
  v5 = *(_QWORD *)(v3 + 32);
  v6 = *(_QWORD *)(v3 + 40);
  *(_BYTE *)a1 = *(_BYTE *)v3;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(v3 + 8);
  *(_QWORD *)(a1 + 24) = v4;
  *(_QWORD *)(a1 + 32) = v5;
  *(_QWORD *)(a1 + 40) = v6;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

void sub_1DD2D4FA8(char *a1)
{
  uint64_t v1;
  char v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;

  v3 = *a1;
  v6 = *(_OWORD *)(a1 + 8);
  v4 = *((_QWORD *)a1 + 3);
  v5 = v1 + OBJC_IVAR____TtC11EmojiPoster31GradientConfigurationController_gradientProperties;
  swift_beginAccess();
  *(_BYTE *)v5 = v3;
  *(_OWORD *)(v5 + 8) = v6;
  *(_QWORD *)(v5 + 24) = v4;
  *(_OWORD *)(v5 + 32) = *((_OWORD *)a1 + 2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1DD2D625C();
}

void (*sub_1DD2D5040(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1DD2D5088;
}

void sub_1DD2D5088(uint64_t a1, char a2)
{
  swift_endAccess();
  if ((a2 & 1) == 0)
    sub_1DD2D625C();
}

uint64_t sub_1DD2D50B8()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + OBJC_IVAR____TtC11EmojiPoster31GradientConfigurationController_delegate;
  swift_beginAccess();
  return MEMORY[0x1DF0D8130](v1);
}

uint64_t sub_1DD2D5104(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;

  v4 = v2 + OBJC_IVAR____TtC11EmojiPoster31GradientConfigurationController_delegate;
  swift_beginAccess();
  *(_QWORD *)(v4 + 8) = a2;
  swift_unknownObjectWeakAssign();
  return swift_unknownObjectRelease();
}

void (*sub_1DD2D516C(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC11EmojiPoster31GradientConfigurationController_delegate;
  v3[5] = v1;
  v3[6] = v4;
  v5 = v1 + v4;
  swift_beginAccess();
  v6 = MEMORY[0x1DF0D8130](v5);
  v7 = *(_QWORD *)(v5 + 8);
  v3[3] = v6;
  v3[4] = v7;
  return sub_1DD2D51E0;
}

void sub_1DD2D51E0(uint64_t a1, char a2)
{
  void *v3;

  v3 = *(void **)a1;
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)a1 + 40) + *(_QWORD *)(*(_QWORD *)a1 + 48) + 8) = *(_QWORD *)(*(_QWORD *)a1 + 32);
  swift_unknownObjectWeakAssign();
  if ((a2 & 1) != 0)
  {
    swift_unknownObjectRelease();
    swift_endAccess();
  }
  else
  {
    swift_endAccess();
    swift_unknownObjectRelease();
  }
  free(v3);
}

id sub_1DD2D5254()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC11EmojiPoster31GradientConfigurationController____lazy_storage___colorPicker;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC11EmojiPoster31GradientConfigurationController____lazy_storage___colorPicker);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC11EmojiPoster31GradientConfigurationController____lazy_storage___colorPicker);
  }
  else
  {
    v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3668]), sel_init);
    objc_msgSend(v4, sel_setDelegate_, v0);
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

char *GradientConfigurationController.__allocating_init(gradientProperties:)(char *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_allocWithZone(v1);
  return GradientConfigurationController.init(gradientProperties:)(a1);
}

char *GradientConfigurationController.init(gradientProperties:)(char *a1)
{
  _BYTE *v1;
  char v3;
  uint64_t v4;
  _OWORD *v5;
  _OWORD *v6;
  uint64_t v7;
  id v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v26;
  char *v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  __int128 v36;
  objc_super v37;

  v3 = *a1;
  v36 = *(_OWORD *)(a1 + 8);
  v1[OBJC_IVAR____TtC11EmojiPoster31GradientConfigurationController_type] = 0;
  v4 = *((_QWORD *)a1 + 3);
  v5 = &v1[OBJC_IVAR____TtC11EmojiPoster31GradientConfigurationController_editingLinearGradientProperties];
  *v5 = 0u;
  v5[1] = 0u;
  v5[2] = 0u;
  v6 = &v1[OBJC_IVAR____TtC11EmojiPoster31GradientConfigurationController_editingRadialGradientProperties];
  *v6 = 0u;
  v6[1] = 0u;
  v6[2] = 0u;
  *(_QWORD *)&v1[OBJC_IVAR____TtC11EmojiPoster31GradientConfigurationController_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  v7 = OBJC_IVAR____TtC11EmojiPoster31GradientConfigurationController_verticalStackView;
  v8 = objc_allocWithZone(MEMORY[0x1E0DC3CA8]);
  v9 = v1;
  *(_QWORD *)&v1[v7] = objc_msgSend(v8, sel_init);
  v10 = OBJC_IVAR____TtC11EmojiPoster31GradientConfigurationController_styleSegmentedControl;
  *(_QWORD *)&v9[v10] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3C58]), sel_init);
  v11 = OBJC_IVAR____TtC11EmojiPoster31GradientConfigurationController_colorSlider;
  type metadata accessor for GradientColorSlider();
  *(_QWORD *)&v9[v11] = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  v12 = OBJC_IVAR____TtC11EmojiPoster31GradientConfigurationController_attributeSlider;
  *(_QWORD *)&v9[v12] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3C80]), sel_init);
  *(_QWORD *)&v9[OBJC_IVAR____TtC11EmojiPoster31GradientConfigurationController____lazy_storage___colorPicker] = 0;
  v13 = &v9[OBJC_IVAR____TtC11EmojiPoster31GradientConfigurationController_colorUpdater];
  *(_QWORD *)v13 = 0;
  *((_QWORD *)v13 + 1) = 0;
  v14 = &v9[OBJC_IVAR____TtC11EmojiPoster31GradientConfigurationController_gradientProperties];
  *v14 = v3;
  *(_OWORD *)(v14 + 8) = v36;
  *((_QWORD *)v14 + 3) = v4;
  *((_OWORD *)v14 + 2) = *((_OWORD *)a1 + 2);

  v37.receiver = v9;
  v37.super_class = (Class)type metadata accessor for GradientConfigurationController();
  v15 = (char *)objc_msgSendSuper2(&v37, sel_initWithNibName_bundle_, 0, 0);
  v16 = &v15[OBJC_IVAR____TtC11EmojiPoster31GradientConfigurationController_gradientProperties];
  swift_beginAccess();
  v17 = *((_QWORD *)v16 + 3);
  v18 = *((_QWORD *)v16 + 4);
  v19 = *((_QWORD *)v16 + 5);
  v20 = &v15[OBJC_IVAR____TtC11EmojiPoster31GradientConfigurationController_editingLinearGradientProperties];
  v21 = *(_QWORD *)&v15[OBJC_IVAR____TtC11EmojiPoster31GradientConfigurationController_editingLinearGradientProperties];
  v22 = *(_QWORD *)&v15[OBJC_IVAR____TtC11EmojiPoster31GradientConfigurationController_editingLinearGradientProperties
                      + 8];
  v23 = *(_QWORD *)&v15[OBJC_IVAR____TtC11EmojiPoster31GradientConfigurationController_editingLinearGradientProperties
                      + 16];
  v24 = *(_QWORD *)&v15[OBJC_IVAR____TtC11EmojiPoster31GradientConfigurationController_editingLinearGradientProperties
                      + 24];
  v25 = *(_QWORD *)&v15[OBJC_IVAR____TtC11EmojiPoster31GradientConfigurationController_editingLinearGradientProperties
                      + 32];
  v26 = *(_OWORD *)(v16 + 8);
  *(_QWORD *)v20 = *v16;
  *(_OWORD *)(v20 + 8) = v26;
  *((_QWORD *)v20 + 3) = v17;
  *((_QWORD *)v20 + 4) = v18;
  *((_QWORD *)v20 + 5) = v19;
  v27 = v15;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1DD2BF928(v21, v22, v23, v24, v25);
  v28 = *((_QWORD *)v16 + 4);
  v29 = &v27[OBJC_IVAR____TtC11EmojiPoster31GradientConfigurationController_editingRadialGradientProperties];
  v30 = *(_QWORD *)&v27[OBJC_IVAR____TtC11EmojiPoster31GradientConfigurationController_editingRadialGradientProperties];
  v31 = *(_QWORD *)&v27[OBJC_IVAR____TtC11EmojiPoster31GradientConfigurationController_editingRadialGradientProperties
                      + 8];
  v32 = *(_QWORD *)&v27[OBJC_IVAR____TtC11EmojiPoster31GradientConfigurationController_editingRadialGradientProperties
                      + 16];
  v33 = *(_QWORD *)&v27[OBJC_IVAR____TtC11EmojiPoster31GradientConfigurationController_editingRadialGradientProperties
                      + 24];
  v34 = *(_QWORD *)&v27[OBJC_IVAR____TtC11EmojiPoster31GradientConfigurationController_editingRadialGradientProperties
                      + 32];
  *(_QWORD *)v29 = 1;
  *((_QWORD *)v29 + 1) = 0;
  *((_QWORD *)v29 + 2) = 0;
  *((_QWORD *)v29 + 3) = 0x3FF0000000000000;
  *((_QWORD *)v29 + 4) = v28;
  *((_QWORD *)v29 + 5) = &unk_1EA7121D8;
  swift_bridgeObjectRetain();
  sub_1DD2BF928(v30, v31, v32, v33, v34);

  return v27;
}

char *GradientConfigurationController.init(coder:)(void *a1)
{
  _BYTE *v1;
  _OWORD *v3;
  _OWORD *v4;
  uint64_t v5;
  id v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  char *v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v25;
  char *v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void *v36;
  objc_super v37;

  v1[OBJC_IVAR____TtC11EmojiPoster31GradientConfigurationController_type] = 0;
  v3 = &v1[OBJC_IVAR____TtC11EmojiPoster31GradientConfigurationController_editingLinearGradientProperties];
  *v3 = 0u;
  v3[1] = 0u;
  v3[2] = 0u;
  v4 = &v1[OBJC_IVAR____TtC11EmojiPoster31GradientConfigurationController_editingRadialGradientProperties];
  v4[1] = 0u;
  v4[2] = 0u;
  *v4 = 0u;
  *(_QWORD *)&v1[OBJC_IVAR____TtC11EmojiPoster31GradientConfigurationController_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  v5 = OBJC_IVAR____TtC11EmojiPoster31GradientConfigurationController_verticalStackView;
  v6 = objc_allocWithZone(MEMORY[0x1E0DC3CA8]);
  v7 = v1;
  *(_QWORD *)&v1[v5] = objc_msgSend(v6, sel_init);
  v8 = OBJC_IVAR____TtC11EmojiPoster31GradientConfigurationController_styleSegmentedControl;
  *(_QWORD *)&v7[v8] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3C58]), sel_init);
  v9 = OBJC_IVAR____TtC11EmojiPoster31GradientConfigurationController_colorSlider;
  type metadata accessor for GradientColorSlider();
  *(_QWORD *)&v7[v9] = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  v10 = OBJC_IVAR____TtC11EmojiPoster31GradientConfigurationController_attributeSlider;
  *(_QWORD *)&v7[v10] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3C80]), sel_init);
  *(_QWORD *)&v7[OBJC_IVAR____TtC11EmojiPoster31GradientConfigurationController____lazy_storage___colorPicker] = 0;
  v11 = &v7[OBJC_IVAR____TtC11EmojiPoster31GradientConfigurationController_colorUpdater];
  *(_QWORD *)v11 = 0;
  *((_QWORD *)v11 + 1) = 0;
  v12 = &v7[OBJC_IVAR____TtC11EmojiPoster31GradientConfigurationController_gradientProperties];
  *v12 = 0;
  *((_QWORD *)v12 + 1) = 0;
  *((_QWORD *)v12 + 2) = 0;
  *((_QWORD *)v12 + 3) = 0x3FF0000000000000;
  *((_QWORD *)v12 + 4) = &unk_1EA712208;
  *((_QWORD *)v12 + 5) = &unk_1EA712268;

  v37.receiver = v7;
  v37.super_class = (Class)type metadata accessor for GradientConfigurationController();
  v13 = (char *)objc_msgSendSuper2(&v37, sel_initWithCoder_, a1);
  v14 = v13;
  if (v13)
  {
    v15 = &v13[OBJC_IVAR____TtC11EmojiPoster31GradientConfigurationController_gradientProperties];
    swift_beginAccess();
    v16 = *((_QWORD *)v15 + 3);
    v17 = *((_QWORD *)v15 + 4);
    v18 = *((_QWORD *)v15 + 5);
    v19 = &v14[OBJC_IVAR____TtC11EmojiPoster31GradientConfigurationController_editingLinearGradientProperties];
    v36 = a1;
    v20 = *(_QWORD *)&v14[OBJC_IVAR____TtC11EmojiPoster31GradientConfigurationController_editingLinearGradientProperties];
    v21 = *(_QWORD *)&v14[OBJC_IVAR____TtC11EmojiPoster31GradientConfigurationController_editingLinearGradientProperties
                        + 8];
    v22 = *(_QWORD *)&v14[OBJC_IVAR____TtC11EmojiPoster31GradientConfigurationController_editingLinearGradientProperties
                        + 16];
    v23 = *(_QWORD *)&v14[OBJC_IVAR____TtC11EmojiPoster31GradientConfigurationController_editingLinearGradientProperties
                        + 24];
    v24 = *(_QWORD *)&v14[OBJC_IVAR____TtC11EmojiPoster31GradientConfigurationController_editingLinearGradientProperties
                        + 32];
    v25 = *(_OWORD *)(v15 + 8);
    *(_QWORD *)v19 = *v15;
    *(_OWORD *)(v19 + 8) = v25;
    *((_QWORD *)v19 + 3) = v16;
    *((_QWORD *)v19 + 4) = v17;
    *((_QWORD *)v19 + 5) = v18;
    v26 = v14;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1DD2BF928(v20, v21, v22, v23, v24);
    v27 = *((_QWORD *)v15 + 4);
    v28 = &v26[OBJC_IVAR____TtC11EmojiPoster31GradientConfigurationController_editingRadialGradientProperties];
    v29 = *(_QWORD *)&v26[OBJC_IVAR____TtC11EmojiPoster31GradientConfigurationController_editingRadialGradientProperties];
    v30 = *(_QWORD *)&v26[OBJC_IVAR____TtC11EmojiPoster31GradientConfigurationController_editingRadialGradientProperties
                        + 8];
    v31 = *(_QWORD *)&v26[OBJC_IVAR____TtC11EmojiPoster31GradientConfigurationController_editingRadialGradientProperties
                        + 16];
    v32 = *(_QWORD *)&v26[OBJC_IVAR____TtC11EmojiPoster31GradientConfigurationController_editingRadialGradientProperties
                        + 24];
    v33 = *(_QWORD *)&v26[OBJC_IVAR____TtC11EmojiPoster31GradientConfigurationController_editingRadialGradientProperties
                        + 32];
    *(_QWORD *)v28 = 1;
    *((_QWORD *)v28 + 1) = 0;
    *((_QWORD *)v28 + 2) = 0;
    *((_QWORD *)v28 + 3) = 0x3FF0000000000000;
    *((_QWORD *)v28 + 4) = v27;
    *((_QWORD *)v28 + 5) = &unk_1EA7121D8;
    swift_bridgeObjectRetain();
    v34 = v33;
    a1 = v36;
    sub_1DD2BF928(v29, v30, v31, v32, v34);

  }
  return v14;
}

void sub_1DD2D5850()
{
  void *v0;
  uint64_t ObjCClassFromMetadata;
  void *v2;
  id v3;
  uint64_t v4;
  char *v5;
  void *v6;
  void *v7;
  id v8;
  uint64_t v9;
  char *v10;
  void *v11;
  char *v12;
  void *v13;
  void *v14;
  uint64_t v15;
  id v16;
  void *v17;
  id v18;
  id v19;
  id v20;
  id v21;
  void *v22;
  id v23;
  id v24;
  id v25;
  id v26;
  void *v27;
  id v28;
  id v29;
  id v30;
  id v31;
  void *v32;
  void *v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  void *v39;
  uint64_t v40;
  objc_super v41;

  v41.receiver = v0;
  v41.super_class = (Class)type metadata accessor for GradientConfigurationController();
  objc_msgSendSuper2(&v41, sel_viewDidLoad);
  sub_1DD2D5EB8();
  sub_1DD2CDA0C(0, &qword_1F03D10F8);
  type metadata accessor for BackgroundViewController();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v2 = (void *)objc_opt_self();
  v3 = objc_msgSend(v2, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1DD2F9C34();

  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = v0;
  v5 = v0;
  v40 = v4;
  v6 = (void *)sub_1DD2F9FAC();
  v7 = *(void **)&v5[OBJC_IVAR____TtC11EmojiPoster31GradientConfigurationController_styleSegmentedControl];
  objc_msgSend(v7, sel_insertSegmentWithAction_atIndex_animated_, v6, 0, 0, 0, 0, 0, sub_1DD2D64AC, v40);
  v8 = objc_msgSend(v2, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1DD2F9C34();

  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v5;
  v10 = v5;
  v11 = (void *)sub_1DD2F9FAC();
  objc_msgSend(v7, sel_insertSegmentWithAction_atIndex_animated_, v11, 1, 0, 0, 0, 0, sub_1DD2D64B4, v9);
  objc_msgSend(v7, sel_sizeToFit);
  objc_msgSend(v7, sel_setSelectedSegmentIndex_, 0);

  v12 = *(char **)&v10[OBJC_IVAR____TtC11EmojiPoster31GradientConfigurationController_colorSlider];
  *(_QWORD *)&v12[OBJC_IVAR____TtC11EmojiPoster19GradientColorSlider_delegate + 8] = &off_1EA714B18;
  swift_unknownObjectWeakAssign();
  v13 = *(void **)&v10[OBJC_IVAR____TtC11EmojiPoster31GradientConfigurationController_attributeSlider];
  objc_msgSend(v13, sel_addTarget_action_forControlEvents_, v10, sel_attributeSliderValueChangedWithSlider_, 4096);
  sub_1DD2D625C();
  v14 = *(void **)&v10[OBJC_IVAR____TtC11EmojiPoster31GradientConfigurationController_verticalStackView];
  objc_msgSend(v14, sel_addArrangedSubview_, v7);
  objc_msgSend(v14, sel_addArrangedSubview_, v12);
  objc_msgSend(v14, sel_addArrangedSubview_, v13);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDB61620);
  v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_1DD2FE800;
  v16 = objc_msgSend(v10, sel_view);
  if (!v16)
  {
    __break(1u);
    goto LABEL_7;
  }
  v17 = v16;
  v18 = objc_msgSend(v16, sel_leadingAnchor);

  v19 = objc_msgSend(v14, sel_leadingAnchor);
  v20 = objc_msgSend(v18, sel_constraintEqualToAnchor_, v19);

  *(_QWORD *)(v15 + 32) = v20;
  v21 = objc_msgSend(v10, sel_view);
  if (!v21)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  v22 = v21;
  v23 = objc_msgSend(v21, sel_trailingAnchor);

  v24 = objc_msgSend(v14, sel_trailingAnchor);
  v25 = objc_msgSend(v23, sel_constraintEqualToAnchor_, v24);

  *(_QWORD *)(v15 + 40) = v25;
  v26 = objc_msgSend(v10, sel_view);
  if (!v26)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  v27 = v26;
  v28 = objc_msgSend(v26, sel_topAnchor);

  v29 = objc_msgSend(v14, sel_topAnchor);
  v30 = objc_msgSend(v28, sel_constraintEqualToAnchor_, v29);

  *(_QWORD *)(v15 + 48) = v30;
  v31 = objc_msgSend(v10, sel_view);
  if (v31)
  {
    v32 = v31;
    v33 = (void *)objc_opt_self();
    v34 = objc_msgSend(v32, sel_bottomAnchor);

    v35 = objc_msgSend(v14, sel_bottomAnchor);
    v36 = objc_msgSend(v34, sel_constraintEqualToAnchor_, v35);

    *(_QWORD *)(v15 + 56) = v36;
    v37 = objc_msgSend(v12, sel_heightAnchor);
    v38 = objc_msgSend(v37, sel_constraintEqualToConstant_, 44.0);

    *(_QWORD *)(v15 + 64) = v38;
    sub_1DD2F9EF8();
    sub_1DD2CDA0C(0, &qword_1EDB61510);
    v39 = (void *)sub_1DD2F9EC8();
    swift_bridgeObjectRelease();
    objc_msgSend(v33, sel_activateConstraints_, v39);

    return;
  }
LABEL_9:
  __break(1u);
}

void sub_1DD2D5EB8()
{
  char *v0;
  void *v1;
  id v2;
  id v3;

  v1 = *(void **)&v0[OBJC_IVAR____TtC11EmojiPoster31GradientConfigurationController_verticalStackView];
  objc_msgSend(v1, sel_setAxis_, 1);
  objc_msgSend(v1, sel_setDistribution_, 2);
  objc_msgSend(v1, sel_setLayoutMarginsRelativeArrangement_, 1);
  objc_msgSend(v1, sel_setSpacing_, 10.0);
  objc_msgSend(v1, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  v2 = objc_msgSend(v0, sel_view);
  if (v2)
  {
    v3 = v2;
    objc_msgSend(v2, sel_addSubview_, v1);

  }
  else
  {
    __break(1u);
  }
}

_OWORD *sub_1DD2D5F80(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  _OWORD *result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _OWORD *v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;
  uint64_t ObjectType;
  char v17[8];
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _OWORD *v21;
  uint64_t v22;

  v3 = a2 + OBJC_IVAR____TtC11EmojiPoster31GradientConfigurationController_delegate;
  swift_beginAccess();
  result = (_OWORD *)MEMORY[0x1DF0D8130](v3);
  if (result)
  {
    v5 = *(_QWORD *)(v3 + 8);
    v6 = a2 + OBJC_IVAR____TtC11EmojiPoster31GradientConfigurationController_gradientProperties;
    swift_beginAccess();
    v7 = *(_QWORD *)(v6 + 8);
    v8 = *(_QWORD *)(v6 + 16);
    v9 = *(_QWORD *)(v6 + 24);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EDB61AF8);
    result = (_OWORD *)swift_allocObject();
    result[1] = xmmword_1DD2FE420;
    v10 = *(_QWORD *)(v6 + 32);
    v11 = *(_QWORD *)(v10 + 16);
    if (v11)
    {
      v12 = result;
      v13 = *(_OWORD *)(v10 + 48);
      result[2] = *(_OWORD *)(v10 + 32);
      result[3] = v13;
      if (v11 != 1)
      {
        v14 = *(_OWORD *)(v10 + 80);
        result[4] = *(_OWORD *)(v10 + 64);
        result[5] = v14;
        v15 = *(_QWORD *)(v6 + 40);
        *(_BYTE *)v6 = 0;
        *(_QWORD *)(v6 + 32) = result;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        sub_1DD2D625C();
        ObjectType = swift_getObjectType();
        v17[0] = 0;
        v18 = v7;
        v19 = v8;
        v20 = v9;
        v21 = v12;
        v22 = v15;
        (*(void (**)(uint64_t, char *, uint64_t, uint64_t))(v5 + 16))(a2, v17, ObjectType, v5);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return (_OWORD *)swift_unknownObjectRelease();
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
  }
  return result;
}

_OWORD *sub_1DD2D60F0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  _OWORD *result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _OWORD *v11;
  __int128 v12;
  __int128 v13;
  uint64_t v14;
  uint64_t ObjectType;
  char v16[8];
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _OWORD *v20;
  uint64_t v21;

  v3 = a2 + OBJC_IVAR____TtC11EmojiPoster31GradientConfigurationController_delegate;
  swift_beginAccess();
  result = (_OWORD *)MEMORY[0x1DF0D8130](v3);
  if (result)
  {
    v5 = *(_QWORD *)(v3 + 8);
    v6 = a2 + OBJC_IVAR____TtC11EmojiPoster31GradientConfigurationController_gradientProperties;
    swift_beginAccess();
    v7 = *(_QWORD *)(v6 + 16);
    v8 = *(_QWORD *)(v6 + 24);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EDB61AF8);
    result = (_OWORD *)swift_allocObject();
    result[1] = xmmword_1DD2FE420;
    v9 = *(_QWORD *)(v6 + 32);
    v10 = *(_QWORD *)(v9 + 16);
    if (v10)
    {
      v11 = result;
      v12 = *(_OWORD *)(v9 + 48);
      result[2] = *(_OWORD *)(v9 + 32);
      result[3] = v12;
      if (v10 != 1)
      {
        v13 = *(_OWORD *)(v9 + 80);
        result[4] = *(_OWORD *)(v9 + 64);
        result[5] = v13;
        v14 = *(_QWORD *)(v6 + 40);
        *(_BYTE *)v6 = 1;
        *(_QWORD *)(v6 + 8) = 0;
        *(_QWORD *)(v6 + 32) = result;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        sub_1DD2D625C();
        ObjectType = swift_getObjectType();
        v16[0] = 1;
        v17 = 0;
        v18 = v7;
        v19 = v8;
        v20 = v11;
        v21 = v14;
        (*(void (**)(uint64_t, char *, uint64_t, uint64_t))(v5 + 16))(a2, v16, ObjectType, v5);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return (_OWORD *)swift_unknownObjectRelease();
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
  }
  return result;
}

void sub_1DD2D625C()
{
  char *v0;
  char *v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  id v5;
  void *v6;
  id v7;
  uint64_t v8;
  id v9;
  void *v10;
  id v11;
  double v12;
  void *v13;
  double v14;
  id v15;
  void *v16;
  double v17;
  double v18;
  double v19;
  char **v20;

  v1 = v0;
  v2 = *(_QWORD *)&v0[OBJC_IVAR____TtC11EmojiPoster31GradientConfigurationController_colorSlider];
  v3 = &v1[OBJC_IVAR____TtC11EmojiPoster31GradientConfigurationController_gradientProperties];
  swift_beginAccess();
  v4 = *((_QWORD *)v3 + 4);
  if (!*(_QWORD *)(v4 + 16))
  {
    __break(1u);
    goto LABEL_9;
  }
  v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3658]), sel_initWithRed_green_blue_alpha_, *(double *)(v4 + 32), *(double *)(v4 + 40), *(double *)(v4 + 48), *(double *)(v4 + 56));
  v6 = *(void **)(v2 + OBJC_IVAR____TtC11EmojiPoster19GradientColorSlider_leftColor);
  *(_QWORD *)(v2 + OBJC_IVAR____TtC11EmojiPoster19GradientColorSlider_leftColor) = v5;
  v7 = v5;

  sub_1DD2CE870();
  v8 = *((_QWORD *)v3 + 4);
  if (*(_QWORD *)(v8 + 16) < 2uLL)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  v9 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3658]), sel_initWithRed_green_blue_alpha_, *(double *)(v8 + 64), *(double *)(v8 + 72), *(double *)(v8 + 80), *(double *)(v8 + 88));
  v10 = *(void **)(v2 + OBJC_IVAR____TtC11EmojiPoster19GradientColorSlider_rightColor);
  *(_QWORD *)(v2 + OBJC_IVAR____TtC11EmojiPoster19GradientColorSlider_rightColor) = v9;
  v11 = v9;

  sub_1DD2CE870();
  *(_QWORD *)(v2 + OBJC_IVAR____TtC11EmojiPoster19GradientColorSlider_leftColorOffset) = *((_QWORD *)v3 + 2);
  v12 = *((double *)v3 + 3);
  *(double *)(v2 + OBJC_IVAR____TtC11EmojiPoster19GradientColorSlider_rightColorOffset) = v12;
  LOBYTE(v11) = *v3;
  v13 = *(void **)&v1[OBJC_IVAR____TtC11EmojiPoster31GradientConfigurationController_attributeSlider];
  LODWORD(v12) = 0;
  objc_msgSend(v13, sel_setMinimumValue_, v12);
  if ((v11 & 1) == 0)
  {
    LODWORD(v14) = 1135869952;
    objc_msgSend(v13, sel_setMaximumValue_, v14);
    v18 = *((double *)v3 + 1);
    v20 = &selRef_setValue_;
    goto LABEL_7;
  }
  v15 = objc_msgSend(v1, sel_view);
  if (v15)
  {
    v16 = v15;
    objc_msgSend(v15, sel_bounds);
    v18 = v17;

    v20 = &selRef_setMaximumValue_;
LABEL_7:
    *(float *)&v19 = v18;
    objc_msgSend(v13, *v20, v19);
    return;
  }
LABEL_10:
  __break(1u);
}

uint64_t type metadata accessor for GradientConfigurationController()
{
  return objc_opt_self();
}

uint64_t sub_1DD2D6488()
{
  uint64_t v0;

  return swift_deallocObject();
}

_OWORD *sub_1DD2D64AC(uint64_t a1)
{
  uint64_t v1;

  return sub_1DD2D5F80(a1, *(_QWORD *)(v1 + 16));
}

_OWORD *sub_1DD2D64B4(uint64_t a1)
{
  uint64_t v1;

  return sub_1DD2D60F0(a1, *(_QWORD *)(v1 + 16));
}

void sub_1DD2D64BC(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char *v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _OWORD *v12;
  uint64_t v13;
  __int128 v14;
  uint64_t v15;
  uint64_t ObjectType;
  _BYTE v17[8];
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _OWORD *v21;
  uint64_t v22;

  v7 = (char *)(a2 + OBJC_IVAR____TtC11EmojiPoster31GradientConfigurationController_gradientProperties);
  swift_beginAccess();
  v8 = *v7;
  v9 = *((_QWORD *)v7 + 1);
  v10 = *((_QWORD *)v7 + 2);
  v11 = *((_QWORD *)v7 + 3);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDB61AF8);
  v12 = (_OWORD *)swift_allocObject();
  v12[1] = xmmword_1DD2FE420;
  EmojiPosterBackgroundColor.init(_:)((UIColor)a1);
  v13 = *((_QWORD *)v7 + 4);
  if (*(_QWORD *)(v13 + 16) < 2uLL)
  {
    __break(1u);
  }
  else
  {
    v14 = *(_OWORD *)(v13 + 80);
    v12[4] = *(_OWORD *)(v13 + 64);
    v12[5] = v14;
    v15 = *((_QWORD *)v7 + 5);
    *v7 = v8;
    *((_QWORD *)v7 + 1) = v9;
    *((_QWORD *)v7 + 2) = v10;
    *((_QWORD *)v7 + 3) = v11;
    *((_QWORD *)v7 + 4) = v12;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    sub_1DD2D625C();
    ObjectType = swift_getObjectType();
    v17[0] = v8;
    v18 = v9;
    v19 = v10;
    v20 = v11;
    v21 = v12;
    v22 = v15;
    (*(void (**)(uint64_t, _BYTE *, uint64_t, uint64_t))(a4 + 16))(a2, v17, ObjectType, a4);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
}

_OWORD *sub_1DD2D6608(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char *v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _OWORD *result;
  uint64_t v13;
  _OWORD *v14;
  __int128 v15;
  uint64_t v16;
  uint64_t ObjectType;
  char v18[8];
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _OWORD *v22;
  uint64_t v23;

  v7 = (char *)(a2 + OBJC_IVAR____TtC11EmojiPoster31GradientConfigurationController_gradientProperties);
  swift_beginAccess();
  v8 = *v7;
  v9 = *((_QWORD *)v7 + 1);
  v10 = *((_QWORD *)v7 + 2);
  v11 = *((_QWORD *)v7 + 3);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDB61AF8);
  result = (_OWORD *)swift_allocObject();
  result[1] = xmmword_1DD2FE420;
  v13 = *((_QWORD *)v7 + 4);
  if (*(_QWORD *)(v13 + 16))
  {
    v14 = result;
    v15 = *(_OWORD *)(v13 + 48);
    result[2] = *(_OWORD *)(v13 + 32);
    result[3] = v15;
    EmojiPosterBackgroundColor.init(_:)((UIColor)a1);
    v16 = *((_QWORD *)v7 + 5);
    *v7 = v8;
    *((_QWORD *)v7 + 1) = v9;
    *((_QWORD *)v7 + 2) = v10;
    *((_QWORD *)v7 + 3) = v11;
    *((_QWORD *)v7 + 4) = v14;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    sub_1DD2D625C();
    ObjectType = swift_getObjectType();
    v18[0] = v8;
    v19 = v9;
    v20 = v10;
    v21 = v11;
    v22 = v14;
    v23 = v16;
    (*(void (**)(uint64_t, char *, uint64_t, uint64_t))(a4 + 16))(a2, v18, ObjectType, a4);
    swift_bridgeObjectRelease();
    return (_OWORD *)swift_bridgeObjectRelease();
  }
  else
  {
    __break(1u);
  }
  return result;
}

_OWORD *sub_1DD2D6750(void *a1)
{
  uint64_t v1;
  _BYTE *v3;
  _OWORD *result;
  char *v5;
  char v6;
  float v7;
  float v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _OWORD *v13;
  __int128 v14;
  double v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t ObjectType;
  char v21[8];
  double v22;
  uint64_t v23;
  uint64_t v24;
  _OWORD *v25;
  uint64_t v26;

  v3 = (_BYTE *)(v1 + OBJC_IVAR____TtC11EmojiPoster31GradientConfigurationController_type);
  result = (_OWORD *)swift_beginAccess();
  if ((*v3 & 1) == 0)
  {
    v5 = (char *)(v1 + OBJC_IVAR____TtC11EmojiPoster31GradientConfigurationController_gradientProperties);
    swift_beginAccess();
    v6 = *v5;
    objc_msgSend(a1, sel_value);
    v8 = v7;
    v9 = *((_QWORD *)v5 + 2);
    v10 = *((_QWORD *)v5 + 3);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EDB61AF8);
    result = (_OWORD *)swift_allocObject();
    result[1] = xmmword_1DD2FE420;
    v11 = *((_QWORD *)v5 + 4);
    v12 = *(_QWORD *)(v11 + 16);
    if (v12)
    {
      v13 = result;
      v14 = *(_OWORD *)(v11 + 48);
      result[2] = *(_OWORD *)(v11 + 32);
      result[3] = v14;
      if (v12 != 1)
      {
        v15 = v8;
        v16 = *(_OWORD *)(v11 + 80);
        result[4] = *(_OWORD *)(v11 + 64);
        result[5] = v16;
        v17 = *((_QWORD *)v5 + 5);
        *v5 = v6;
        *((double *)v5 + 1) = v15;
        *((_QWORD *)v5 + 4) = result;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        sub_1DD2D625C();
        v18 = v1 + OBJC_IVAR____TtC11EmojiPoster31GradientConfigurationController_delegate;
        swift_beginAccess();
        if (MEMORY[0x1DF0D8130](v18))
        {
          v19 = *(_QWORD *)(v18 + 8);
          ObjectType = swift_getObjectType();
          v21[0] = v6;
          v22 = v15;
          v23 = v9;
          v24 = v10;
          v25 = v13;
          v26 = v17;
          (*(void (**)(uint64_t, char *, uint64_t, uint64_t))(v19 + 16))(v1, v21, ObjectType, v19);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          return (_OWORD *)swift_unknownObjectRelease();
        }
        else
        {
          swift_bridgeObjectRelease();
          return (_OWORD *)swift_bridgeObjectRelease();
        }
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_1DD2D6960(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  void (*v3)(uint64_t);
  uint64_t result;

  v3 = *(void (**)(uint64_t))(v2 + OBJC_IVAR____TtC11EmojiPoster31GradientConfigurationController_colorUpdater);
  if (v3)
  {
    swift_retain();
    v3(a2);
    return sub_1DD2CFCD0((uint64_t)v3);
  }
  return result;
}

uint64_t sub_1DD2D6A74()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  v1 = (_QWORD *)(v0 + OBJC_IVAR____TtC11EmojiPoster31GradientConfigurationController_colorUpdater);
  v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtC11EmojiPoster31GradientConfigurationController_colorUpdater);
  *v1 = 0;
  v1[1] = 0;
  return sub_1DD2CFCD0(v2);
}

id GradientConfigurationController.__allocating_init(nibName:bundle:)(uint64_t a1, uint64_t a2, void *a3)
{
  objc_class *v3;
  objc_class *v4;
  void *v6;
  id v7;

  v4 = v3;
  if (a2)
  {
    v6 = (void *)sub_1DD2F9DB4();
    swift_bridgeObjectRelease();
  }
  else
  {
    v6 = 0;
  }
  v7 = objc_msgSend(objc_allocWithZone(v4), sel_initWithNibName_bundle_, v6, a3);

  return v7;
}

void GradientConfigurationController.init(nibName:bundle:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id GradientConfigurationController.__deallocating_deinit()
{
  return sub_1DD2CF81C(type metadata accessor for GradientConfigurationController);
}

unint64_t sub_1DD2D6B84()
{
  unint64_t result;

  result = qword_1F03D1100;
  if (!qword_1F03D1100)
  {
    result = MEMORY[0x1DF0D8040](&protocol conformance descriptor for GradientStyle, &type metadata for GradientStyle);
    atomic_store(result, (unint64_t *)&qword_1F03D1100);
  }
  return result;
}

uint64_t sub_1DD2D6BC8@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  _BYTE *v3;
  uint64_t result;

  v3 = (_BYTE *)(*a1 + OBJC_IVAR____TtC11EmojiPoster31GradientConfigurationController_type);
  result = swift_beginAccess();
  *a2 = *v3;
  return result;
}

uint64_t sub_1DD2D6C18(char *a1, _QWORD *a2)
{
  char v2;
  _BYTE *v3;
  uint64_t result;

  v2 = *a1;
  v3 = (_BYTE *)(*a2 + OBJC_IVAR____TtC11EmojiPoster31GradientConfigurationController_type);
  result = swift_beginAccess();
  *v3 = v2;
  return result;
}

uint64_t sub_1DD2D6C6C@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v5;

  v3 = *a1 + OBJC_IVAR____TtC11EmojiPoster31GradientConfigurationController_delegate;
  swift_beginAccess();
  result = MEMORY[0x1DF0D8130](v3);
  v5 = *(_QWORD *)(v3 + 8);
  *a2 = result;
  a2[1] = v5;
  return result;
}

uint64_t sub_1DD2D6CC4(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(a1 + 8);
  v3 = *a2 + OBJC_IVAR____TtC11EmojiPoster31GradientConfigurationController_delegate;
  swift_beginAccess();
  *(_QWORD *)(v3 + 8) = v2;
  return swift_unknownObjectWeakAssign();
}

uint64_t storeEnumTagSinglePayload for GradientStyle(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1DD2D6D70 + 4 * byte_1DD2FE815[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1DD2D6DA4 + 4 * byte_1DD2FE810[v4]))();
}

uint64_t sub_1DD2D6DA4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DD2D6DAC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DD2D6DB4);
  return result;
}

uint64_t sub_1DD2D6DC0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DD2D6DC8);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1DD2D6DCC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DD2D6DD4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for GradientStyle()
{
  return &type metadata for GradientStyle;
}

uint64_t dispatch thunk of GradientConfigurationControllerDelegate.gradientConfigurationController(_:presentColorPicker:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t dispatch thunk of GradientConfigurationControllerDelegate.gradientConfigurationController(_:didUpdateGradientProperties:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

uint64_t method lookup function for GradientConfigurationController()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of GradientConfigurationController.type.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xA8))();
}

uint64_t dispatch thunk of GradientConfigurationController.type.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xB0))();
}

uint64_t dispatch thunk of GradientConfigurationController.type.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xB8))();
}

uint64_t dispatch thunk of GradientConfigurationController.gradientProperties.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xC0))();
}

uint64_t dispatch thunk of GradientConfigurationController.gradientProperties.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xC8))();
}

uint64_t dispatch thunk of GradientConfigurationController.gradientProperties.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xD0))();
}

uint64_t dispatch thunk of GradientConfigurationController.delegate.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x108))();
}

uint64_t dispatch thunk of GradientConfigurationController.delegate.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x110))();
}

uint64_t dispatch thunk of GradientConfigurationController.delegate.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x118))();
}

uint64_t dispatch thunk of GradientConfigurationController.__allocating_init(gradientProperties:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 336))();
}

uint64_t dispatch thunk of GradientConfigurationController.colorPickerViewController(_:didSelect:continuously:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x1B0))();
}

uint64_t dispatch thunk of GradientConfigurationController.colorPickerViewControllerDidFinish(_:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x1B8))();
}

uint64_t sub_1DD2D7028(uint64_t result)
{
  if (result)
    return swift_retain();
  return result;
}

_OWORD *sub_1DD2D7038(double a1)
{
  uint64_t v1;
  char *v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  _OWORD *result;
  uint64_t v8;
  uint64_t v9;
  _OWORD *v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t ObjectType;
  char v17[8];
  uint64_t v18;
  double v19;
  uint64_t v20;
  _OWORD *v21;
  uint64_t v22;

  v3 = (char *)(v1 + OBJC_IVAR____TtC11EmojiPoster31GradientConfigurationController_gradientProperties);
  swift_beginAccess();
  v4 = *v3;
  v5 = *((_QWORD *)v3 + 1);
  v6 = *((_QWORD *)v3 + 3);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDB61AF8);
  result = (_OWORD *)swift_allocObject();
  result[1] = xmmword_1DD2FE420;
  v8 = *((_QWORD *)v3 + 4);
  v9 = *(_QWORD *)(v8 + 16);
  if (!v9)
  {
    __break(1u);
    goto LABEL_7;
  }
  v10 = result;
  v11 = *(_OWORD *)(v8 + 48);
  result[2] = *(_OWORD *)(v8 + 32);
  result[3] = v11;
  if (v9 == 1)
  {
LABEL_7:
    __break(1u);
    return result;
  }
  v12 = *(_OWORD *)(v8 + 80);
  result[4] = *(_OWORD *)(v8 + 64);
  result[5] = v12;
  v13 = *((_QWORD *)v3 + 5);
  *v3 = v4;
  *((double *)v3 + 2) = a1;
  *((_QWORD *)v3 + 4) = result;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  sub_1DD2D625C();
  v14 = v1 + OBJC_IVAR____TtC11EmojiPoster31GradientConfigurationController_delegate;
  swift_beginAccess();
  if (MEMORY[0x1DF0D8130](v14))
  {
    v15 = *(_QWORD *)(v14 + 8);
    ObjectType = swift_getObjectType();
    v17[0] = v4;
    v18 = v5;
    v19 = a1;
    v20 = v6;
    v21 = v10;
    v22 = v13;
    (*(void (**)(uint64_t, char *, uint64_t, uint64_t))(v15 + 16))(v1, v17, ObjectType, v15);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return (_OWORD *)swift_unknownObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    return (_OWORD *)swift_bridgeObjectRelease();
  }
}

_OWORD *sub_1DD2D71B8(double a1)
{
  uint64_t v1;
  char *v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  _OWORD *result;
  uint64_t v8;
  uint64_t v9;
  _OWORD *v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t ObjectType;
  char v17[8];
  uint64_t v18;
  uint64_t v19;
  double v20;
  _OWORD *v21;
  uint64_t v22;

  v3 = (char *)(v1 + OBJC_IVAR____TtC11EmojiPoster31GradientConfigurationController_gradientProperties);
  swift_beginAccess();
  v4 = *v3;
  v5 = *((_QWORD *)v3 + 1);
  v6 = *((_QWORD *)v3 + 2);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDB61AF8);
  result = (_OWORD *)swift_allocObject();
  result[1] = xmmword_1DD2FE420;
  v8 = *((_QWORD *)v3 + 4);
  v9 = *(_QWORD *)(v8 + 16);
  if (!v9)
  {
    __break(1u);
    goto LABEL_7;
  }
  v10 = result;
  v11 = *(_OWORD *)(v8 + 48);
  result[2] = *(_OWORD *)(v8 + 32);
  result[3] = v11;
  if (v9 == 1)
  {
LABEL_7:
    __break(1u);
    return result;
  }
  v12 = *(_OWORD *)(v8 + 80);
  result[4] = *(_OWORD *)(v8 + 64);
  result[5] = v12;
  v13 = *((_QWORD *)v3 + 5);
  *v3 = v4;
  *((double *)v3 + 3) = a1;
  *((_QWORD *)v3 + 4) = result;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  sub_1DD2D625C();
  v14 = v1 + OBJC_IVAR____TtC11EmojiPoster31GradientConfigurationController_delegate;
  swift_beginAccess();
  if (MEMORY[0x1DF0D8130](v14))
  {
    v15 = *(_QWORD *)(v14 + 8);
    ObjectType = swift_getObjectType();
    v17[0] = v4;
    v18 = v5;
    v19 = v6;
    v20 = a1;
    v21 = v10;
    v22 = v13;
    (*(void (**)(uint64_t, char *, uint64_t, uint64_t))(v15 + 16))(v1, v17, ObjectType, v15);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return (_OWORD *)swift_unknownObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    return (_OWORD *)swift_bridgeObjectRelease();
  }
}

void sub_1DD2D733C(char *a1@<X8>)
{
  id v2;
  id v3;
  id v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  char v10;

  v2 = objc_msgSend((id)objc_opt_self(), sel_currentDevice);
  v3 = objc_msgSend(v2, sel_userInterfaceIdiom);

  if (v3)
  {
    v4 = objc_msgSend((id)objc_opt_self(), sel_mainScreen);
    objc_msgSend(v4, sel_bounds);
    v6 = v5;
    v8 = v7;

    if (v8 >= v6)
      v9 = v6;
    else
      v9 = v8;
    if (v9 >= 768.0)
    {
      if (v9 <= 820.0)
        v10 = 2;
      else
        v10 = 3;
    }
    else
    {
      v10 = 1;
    }
  }
  else
  {
    v10 = 0;
  }
  *a1 = v10;
}

EmojiPoster::DeviceType_optional __swiftcall DeviceType.init(rawValue:)(Swift::Int rawValue)
{
  char *v1;
  char v2;

  v2 = 4;
  if ((unint64_t)rawValue < 4)
    v2 = rawValue;
  *v1 = v2;
  return (EmojiPoster::DeviceType_optional)rawValue;
}

uint64_t DeviceType.rawValue.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

unint64_t sub_1DD2D7448()
{
  unint64_t result;

  result = qword_1F03D1220;
  if (!qword_1F03D1220)
  {
    result = MEMORY[0x1DF0D8040](&protocol conformance descriptor for DeviceType, &type metadata for DeviceType);
    atomic_store(result, (unint64_t *)&qword_1F03D1220);
  }
  return result;
}

EmojiPoster::DeviceType_optional sub_1DD2D748C(Swift::Int *a1)
{
  return DeviceType.init(rawValue:)(*a1);
}

void sub_1DD2D7494(_QWORD *a1@<X8>)
{
  unsigned __int8 *v1;

  *a1 = *v1;
}

uint64_t storeEnumTagSinglePayload for DeviceType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1DD2D74EC + 4 * byte_1DD2FE945[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1DD2D7520 + 4 * byte_1DD2FE940[v4]))();
}

uint64_t sub_1DD2D7520(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DD2D7528(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DD2D7530);
  return result;
}

uint64_t sub_1DD2D753C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DD2D7544);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1DD2D7548(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DD2D7550(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DeviceType()
{
  return &type metadata for DeviceType;
}

uint64_t maximumNumberOfEmoji.getter()
{
  return 6;
}

unint64_t logSubsystem.getter()
{
  return 0xD000000000000015;
}

void sub_1DD2D7590(char *a1)
{
  uint64_t v1;
  char v2;
  _BYTE *v3;
  uint64_t v4;
  double *v5;
  double v6;
  double *v7;

  v2 = *a1;
  v3 = (_BYTE *)(v1 + OBJC_IVAR____TtC11EmojiPoster20ExpandingSpiralScene_sizeVariant);
  swift_beginAccess();
  *v3 = v2;
  type metadata accessor for SpiralLayoutProvider();
  v4 = swift_allocObject();
  *(_BYTE *)(v4 + 16) = v2;
  *(_QWORD *)(v1 + OBJC_IVAR____TtC11EmojiPoster20ExpandingSpiralScene_layoutProvider) = v4;
  swift_release();
  v5 = (double *)(v1 + OBJC_IVAR____TtC11EmojiPoster20ExpandingSpiralScene_wakeProgress);
  swift_beginAccess();
  v6 = *v5;
  v7 = (double *)(v1 + OBJC_IVAR____TtC11EmojiPoster20ExpandingSpiralScene_unlockProgress);
  swift_beginAccess();
  sub_1DD2D84B4(v6, *v7);
}

void (*sub_1DD2D7668(_QWORD *a1))(_QWORD **a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = malloc(0x40uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC11EmojiPoster20ExpandingSpiralScene_sizeVariant;
  v3[6] = v1;
  v3[7] = v4;
  swift_beginAccess();
  return sub_1DD2D76C0;
}

void sub_1DD2D76C0(_QWORD **a1, char a2)
{
  _QWORD *v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  double *v7;
  double v8;
  double *v9;

  v3 = *a1;
  swift_endAccess();
  if ((a2 & 1) == 0)
  {
    v4 = v3[6];
    v5 = *(_BYTE *)(v4 + v3[7]);
    type metadata accessor for SpiralLayoutProvider();
    v6 = swift_allocObject();
    *(_BYTE *)(v6 + 16) = v5;
    *(_QWORD *)(v4 + OBJC_IVAR____TtC11EmojiPoster20ExpandingSpiralScene_layoutProvider) = v6;
    swift_release();
    v7 = (double *)(v4 + OBJC_IVAR____TtC11EmojiPoster20ExpandingSpiralScene_wakeProgress);
    swift_beginAccess();
    v8 = *v7;
    v9 = (double *)(v4 + OBJC_IVAR____TtC11EmojiPoster20ExpandingSpiralScene_unlockProgress);
    swift_beginAccess();
    sub_1DD2D84B4(v8, *v9);
  }
  free(v3);
}

void sub_1DD2D778C()
{
  void *v0;
  void *v1;
  uint64_t v2;
  void *v3;
  id v4;
  id v5;
  id v6;
  id v7;
  void *v8;
  _QWORD v9[6];

  v1 = (void *)objc_opt_self();
  v2 = swift_allocObject();
  *(_QWORD *)(v2 + 16) = v0;
  v9[4] = sub_1DD2D932C;
  v9[5] = v2;
  v9[0] = MEMORY[0x1E0C809B0];
  v9[1] = 1107296256;
  v9[2] = sub_1DD2D7944;
  v9[3] = &block_descriptor_5;
  v3 = _Block_copy(v9);
  v4 = v0;
  swift_release();
  v5 = objc_msgSend(v1, sel_customActionWithDuration_actionBlock_, v3, 1.0);
  _Block_release(v3);
  v6 = v5;
  objc_msgSend(v6, sel_setTimingMode_, 2);
  v7 = objc_msgSend(v4, sel_scene);
  if (v7)
  {
    v8 = v7;
    objc_msgSend(v7, sel_runAction_, v6);

  }
}

void sub_1DD2D78B4(double a1, uint64_t a2, uint64_t a3)
{
  double *v5;
  double *v6;

  v5 = (double *)(a3 + OBJC_IVAR____TtC11EmojiPoster20ExpandingSpiralScene_wakeProgress);
  swift_beginAccess();
  if (*v5 != 1.0)
    a1 = 1.0 - a1;
  v6 = (double *)(a3 + OBJC_IVAR____TtC11EmojiPoster20ExpandingSpiralScene_unlockProgress);
  swift_beginAccess();
  sub_1DD2D84B4(a1, *v6);
}

void sub_1DD2D7944(uint64_t a1, void *a2, double a3)
{
  void (*v5)(double);
  id v6;

  v5 = *(void (**)(double))(a1 + 32);
  swift_retain();
  v6 = a2;
  v5(a3);
  swift_release();

}

id sub_1DD2D79A4(void *a1)
{
  _BYTE *v1;
  uint64_t v3;
  uint64_t v4;
  id v5;
  char *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  void *v11;
  id v12;
  id v13;
  objc_super v15;

  v1[OBJC_IVAR____TtC11EmojiPoster20ExpandingSpiralScene_sizeVariant] = 1;
  *(_QWORD *)&v1[OBJC_IVAR____TtC11EmojiPoster20ExpandingSpiralScene_emoji] = &unk_1EA712298;
  v3 = OBJC_IVAR____TtC11EmojiPoster20ExpandingSpiralScene_emojiRenderer;
  type metadata accessor for EmojiRenderer();
  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = 10;
  v5 = objc_allocWithZone(MEMORY[0x1E0C99D38]);
  v6 = v1;
  v7 = objc_msgSend(v5, sel_init);
  *(_QWORD *)(v4 + 24) = v7;
  objc_msgSend(v7, sel_setCountLimit_, 10);
  *(_QWORD *)&v1[v3] = v4;
  *(_QWORD *)&v6[OBJC_IVAR____TtC11EmojiPoster20ExpandingSpiralScene_emojiTextures] = MEMORY[0x1E0DEE9D8];
  v8 = OBJC_IVAR____TtC11EmojiPoster20ExpandingSpiralScene_layoutProvider;
  type metadata accessor for SpiralLayoutProvider();
  v9 = swift_allocObject();
  *(_BYTE *)(v9 + 16) = 1;
  *(_QWORD *)&v6[v8] = v9;
  *(_QWORD *)&v6[OBJC_IVAR____TtC11EmojiPoster20ExpandingSpiralScene_itemPositions] = 0;
  *(_QWORD *)&v6[OBJC_IVAR____TtC11EmojiPoster20ExpandingSpiralScene_startingRadius] = 0x4024000000000000;
  *(_QWORD *)&v6[OBJC_IVAR____TtC11EmojiPoster20ExpandingSpiralScene_radius] = 0;
  *(_QWORD *)&v6[OBJC_IVAR____TtC11EmojiPoster20ExpandingSpiralScene_minRadius] = 0;
  *(_QWORD *)&v6[OBJC_IVAR____TtC11EmojiPoster20ExpandingSpiralScene_wakeProgress] = 0x3FF0000000000000;
  *(_QWORD *)&v6[OBJC_IVAR____TtC11EmojiPoster20ExpandingSpiralScene_unlockProgress] = 0x3FF0000000000000;

  v15.receiver = v6;
  v15.super_class = (Class)type metadata accessor for ExpandingSpiralScene();
  v10 = objc_msgSendSuper2(&v15, sel_initWithCoder_, a1);
  if (v10)
  {
    v11 = (void *)objc_opt_self();
    v12 = v10;
    v13 = objc_msgSend(v11, sel_clearColor);
    objc_msgSend(v12, sel_setBackgroundColor_, v13);

  }
  return v10;
}

id sub_1DD2D7BA0(double a1, double a2)
{
  _BYTE *v2;
  uint64_t v5;
  uint64_t v6;
  id v7;
  char *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  void *v13;
  id v14;
  id v15;
  objc_super v17;

  v2[OBJC_IVAR____TtC11EmojiPoster20ExpandingSpiralScene_sizeVariant] = 1;
  *(_QWORD *)&v2[OBJC_IVAR____TtC11EmojiPoster20ExpandingSpiralScene_emoji] = &unk_1EA7122C8;
  v5 = OBJC_IVAR____TtC11EmojiPoster20ExpandingSpiralScene_emojiRenderer;
  type metadata accessor for EmojiRenderer();
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = 10;
  v7 = objc_allocWithZone(MEMORY[0x1E0C99D38]);
  v8 = v2;
  v9 = objc_msgSend(v7, sel_init);
  *(_QWORD *)(v6 + 24) = v9;
  objc_msgSend(v9, sel_setCountLimit_, 10);
  *(_QWORD *)&v2[v5] = v6;
  *(_QWORD *)&v8[OBJC_IVAR____TtC11EmojiPoster20ExpandingSpiralScene_emojiTextures] = MEMORY[0x1E0DEE9D8];
  v10 = OBJC_IVAR____TtC11EmojiPoster20ExpandingSpiralScene_layoutProvider;
  type metadata accessor for SpiralLayoutProvider();
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = 1;
  *(_QWORD *)&v8[v10] = v11;
  *(_QWORD *)&v8[OBJC_IVAR____TtC11EmojiPoster20ExpandingSpiralScene_itemPositions] = 0;
  *(_QWORD *)&v8[OBJC_IVAR____TtC11EmojiPoster20ExpandingSpiralScene_startingRadius] = 0x4024000000000000;
  *(_QWORD *)&v8[OBJC_IVAR____TtC11EmojiPoster20ExpandingSpiralScene_radius] = 0;
  *(_QWORD *)&v8[OBJC_IVAR____TtC11EmojiPoster20ExpandingSpiralScene_minRadius] = 0;
  *(_QWORD *)&v8[OBJC_IVAR____TtC11EmojiPoster20ExpandingSpiralScene_wakeProgress] = 0x3FF0000000000000;
  *(_QWORD *)&v8[OBJC_IVAR____TtC11EmojiPoster20ExpandingSpiralScene_unlockProgress] = 0x3FF0000000000000;

  v17.receiver = v8;
  v17.super_class = (Class)type metadata accessor for ExpandingSpiralScene();
  v12 = objc_msgSendSuper2(&v17, sel_initWithSize_, a1, a2);
  v13 = (void *)objc_opt_self();
  v14 = v12;
  v15 = objc_msgSend(v13, sel_clearColor);
  objc_msgSend(v14, sel_setBackgroundColor_, v15);

  return v14;
}

void sub_1DD2D7DF4()
{
  char *v0;
  id v1;
  void *v2;
  double v3;
  double v4;
  double v5;
  char *v6;
  char *v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  char *v11;
  BOOL v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  id v16;
  id v17;
  void *v18;
  double *v19;
  double v20;
  double *v21;
  char *v22;
  unint64_t v23;

  v1 = objc_msgSend(v0, sel_view);
  if (v1)
  {
    v2 = v1;
    objc_msgSend(v1, sel_bounds);
    v4 = v3;

    v5 = v4 * 0.5;
  }
  else
  {
    v5 = 100.0;
  }
  *(double *)&v0[OBJC_IVAR____TtC11EmojiPoster20ExpandingSpiralScene_minRadius] = v5;
  *(double *)&v0[OBJC_IVAR____TtC11EmojiPoster20ExpandingSpiralScene_radius] = v5;
  objc_msgSend(v0, sel_removeAllChildren);
  v6 = &v0[OBJC_IVAR____TtC11EmojiPoster20ExpandingSpiralScene_emojiTextures];
  swift_beginAccess();
  *(_QWORD *)v6 = MEMORY[0x1E0DEE9D8];
  swift_bridgeObjectRelease();
  v7 = &v0[OBJC_IVAR____TtC11EmojiPoster20ExpandingSpiralScene_emoji];
  swift_beginAccess();
  v22 = v7;
  if (!*(_QWORD *)(*(_QWORD *)v7 + 16))
    return;
  sub_1DD2D810C();
  v8 = 0;
  v9 = 0;
  v10 = OBJC_IVAR____TtC11EmojiPoster20ExpandingSpiralScene_layoutProvider;
  v11 = &v0[OBJC_IVAR____TtC11EmojiPoster20ExpandingSpiralScene_sizeVariant];
LABEL_10:
  v23 = v8;
  swift_beginAccess();
  v13 = 0;
  while (1)
  {
    if (v13 >= qword_1DD2FEA80[*(char *)(*(_QWORD *)&v0[v10] + 16)])
    {
      if (*v11 != 2)
      {
        if (__OFADD__(v9, 1))
          goto LABEL_32;
        if (v9 + 1 == *(_QWORD *)(*(_QWORD *)v22 + 16))
          v9 = 0;
        else
          ++v9;
      }
      v12 = *(unsigned __int8 *)(*(_QWORD *)&v0[v10] + 16) > 1u || v23 >= 0xB;
      v8 = v23 + 1;
      if (v12)
      {
        v19 = (double *)&v0[OBJC_IVAR____TtC11EmojiPoster20ExpandingSpiralScene_wakeProgress];
        swift_beginAccess();
        v20 = *v19;
        v21 = (double *)&v0[OBJC_IVAR____TtC11EmojiPoster20ExpandingSpiralScene_unlockProgress];
        swift_beginAccess();
        sub_1DD2D84B4(v20, *v21);
        return;
      }
      goto LABEL_10;
    }
    v14 = *(_QWORD *)v6;
    if ((*(_QWORD *)v6 & 0xC000000000000001) != 0)
    {
      swift_bridgeObjectRetain();
      v15 = (id)MEMORY[0x1DF0D75E4](v9, v14);
      swift_bridgeObjectRelease();
      goto LABEL_16;
    }
    if ((v9 & 0x8000000000000000) != 0)
      break;
    if (v9 >= *(_QWORD *)((v14 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_30;
    v15 = *(id *)(v14 + 8 * v9 + 32);
LABEL_16:
    ++v13;
    v16 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CD7FE8]), sel_initWithTexture_, v15);

    v17 = v16;
    v18 = (void *)sub_1DD2F9DB4();
    objc_msgSend(v17, sel_setName_, v18);

    objc_msgSend(v0, sel_addChild_, v17);
    if (*v11 == 2)
    {
      if (__OFADD__(v9, 1))
        goto LABEL_31;
      if (v9 + 1 == *(_QWORD *)(*(_QWORD *)v22 + 16))
        v9 = 0;
      else
        ++v9;
    }
  }
  __break(1u);
LABEL_30:
  __break(1u);
LABEL_31:
  __break(1u);
LABEL_32:
  __break(1u);
}

uint64_t sub_1DD2D810C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  _QWORD *v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  void *v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  id v21;
  void *v22;
  id v23;
  id v24;
  id v25;
  void *v26;
  int64x2_t v27;
  _QWORD *v28;
  uint64_t v29;
  _QWORD aBlock[6];

  v1 = v0;
  v2 = (uint64_t *)(v0 + OBJC_IVAR____TtC11EmojiPoster20ExpandingSpiralScene_emoji);
  result = swift_beginAccess();
  v4 = *v2;
  v5 = *(_QWORD *)(*v2 + 16);
  if (v5)
  {
    v6 = (void *)objc_opt_self();
    v7 = (_QWORD *)(v1 + OBJC_IVAR____TtC11EmojiPoster20ExpandingSpiralScene_emojiTextures);
    v29 = *(_QWORD *)(v1 + OBJC_IVAR____TtC11EmojiPoster20ExpandingSpiralScene_emojiRenderer);
    swift_bridgeObjectRetain();
    v8 = (uint64_t *)(v4 + 40);
    v27 = vdupq_n_s64(0x4069000000000000uLL);
    v26 = v6;
    v28 = v7;
    while (1)
    {
      v9 = *(v8 - 1);
      v10 = *v8;
      v11 = objc_allocWithZone(MEMORY[0x1E0CB3940]);
      swift_bridgeObjectRetain_n();
      v12 = (void *)sub_1DD2F9DB4();
      swift_bridgeObjectRelease();
      v13 = objc_msgSend(v11, sel_initWithString_, v12);

      v14 = objc_msgSend(*(id *)(v29 + 24), sel_objectForKey_, v13);
      if (v14)
      {
        v15 = v14;
        swift_bridgeObjectRelease();
      }
      else
      {
        v16 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3830]), sel_init);
        objc_msgSend(v16, sel_setOpaque_, 0);
        v17 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3828]), sel_initWithSize_format_, v16, 200.0, 200.0);
        v18 = swift_allocObject();
        *(_QWORD *)(v18 + 16) = v9;
        *(_QWORD *)(v18 + 24) = v10;
        *(int64x2_t *)(v18 + 32) = v27;
        v19 = swift_allocObject();
        *(_QWORD *)(v19 + 16) = sub_1DD2C6578;
        *(_QWORD *)(v19 + 24) = v18;
        aBlock[4] = sub_1DD2C6594;
        aBlock[5] = v19;
        aBlock[0] = MEMORY[0x1E0C809B0];
        aBlock[1] = 1107296256;
        aBlock[2] = sub_1DD2CB738;
        aBlock[3] = &block_descriptor_19;
        v20 = _Block_copy(aBlock);
        swift_bridgeObjectRetain();
        swift_retain();
        swift_release();
        v21 = objc_msgSend(v17, sel_imageWithActions_, v20);
        _Block_release(v20);
        LOBYTE(v20) = swift_isEscapingClosureAtFileLocation();
        result = swift_release();
        if ((v20 & 1) != 0)
        {
          __break(1u);
          return result;
        }
        v22 = *(void **)(v29 + 24);
        v15 = v21;
        v23 = v22;
        objc_msgSend(v23, sel_setObject_forKey_, v15, v13);
        swift_bridgeObjectRelease();
        swift_release();

        v6 = v26;
      }

      v24 = objc_msgSend(v6, sel_textureWithImage_, v15);
      swift_beginAccess();
      v25 = v24;
      MEMORY[0x1DF0D7458]();
      if (*(_QWORD *)((*v28 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*v28 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        sub_1DD2F9F04();
      v8 += 2;
      sub_1DD2F9F10();
      sub_1DD2F9EF8();
      swift_endAccess();

      if (!--v5)
        return swift_bridgeObjectRelease();
    }
  }
  return result;
}

void sub_1DD2D84B4(double a1, double a2)
{
  char *v2;
  void *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  _QWORD *v10;
  void *v11;
  id v12;
  _QWORD v13[6];

  v3 = v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F03D0F30);
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1DD2FDFC0;
  sub_1DD2FA024();
  sub_1DD2F9E74();
  sub_1DD2F9F1C();
  sub_1DD2F9E74();
  sub_1DD2F9F1C();
  *(_QWORD *)(v6 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v6 + 32) = 0;
  *(_QWORD *)(v6 + 40) = 0xE000000000000000;
  sub_1DD2FA258();
  swift_bridgeObjectRelease();
  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 16) = 0;
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = 0;
  *(_QWORD *)&v2[OBJC_IVAR____TtC11EmojiPoster20ExpandingSpiralScene_itemPositions] = sub_1DD2D89CC(a1, a2);
  swift_bridgeObjectRelease();
  v9 = (void *)sub_1DD2F9DB4();
  v10 = (_QWORD *)swift_allocObject();
  v10[2] = v3;
  v10[3] = v8;
  v10[4] = v7;
  v13[4] = sub_1DD2DA52C;
  v13[5] = v10;
  v13[0] = MEMORY[0x1E0C809B0];
  v13[1] = 1107296256;
  v13[2] = sub_1DD2F5D4C;
  v13[3] = &block_descriptor_10;
  v11 = _Block_copy(v13);
  v12 = v3;
  swift_retain();
  swift_retain();
  swift_release();
  objc_msgSend(v12, sel_enumerateChildNodesWithName_usingBlock_, v9, v11);
  _Block_release(v11);
  swift_release();
  swift_release();

}

unint64_t sub_1DD2D870C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  unint64_t result;
  void *v10;
  uint64_t *v11;
  uint64_t *v12;
  unint64_t v13;
  uint64_t v14;
  double v15;
  double v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  double v21;
  double v22;
  double v23;
  double v24;
  uint64_t v25;
  uint64_t v26;
  double v27;
  uint64_t v28;

  objc_opt_self();
  result = swift_dynamicCastObjCClass();
  if (result)
  {
    v10 = (void *)result;
    v11 = (uint64_t *)(a4 + 16);
    v12 = (uint64_t *)(a5 + 16);
    swift_beginAccess();
    v13 = *v11;
    swift_beginAccess();
    v14 = *(_QWORD *)(a3 + OBJC_IVAR____TtC11EmojiPoster20ExpandingSpiralScene_itemPositions);
    v15 = 0.0;
    if (v14 && *(_QWORD *)(v14 + 16))
    {
      result = sub_1DD2E22C4(*v12);
      v16 = 0.0;
      if ((v17 & 1) != 0)
      {
        if ((v13 & 0x8000000000000000) != 0)
        {
LABEL_21:
          __break(1u);
          goto LABEL_22;
        }
        v18 = *(_QWORD *)(*(_QWORD *)(v14 + 56) + 8 * result);
        if (v13 >= *(_QWORD *)(v18 + 16))
        {
LABEL_22:
          __break(1u);
          return result;
        }
        v19 = v18 + 16 * v13;
        v15 = *(double *)(v19 + 32);
        v16 = *(double *)(v19 + 40);
      }
    }
    else
    {
      v16 = 0.0;
    }
    v20 = a1;
    objc_msgSend(v10, sel_setPosition_, v15, v16);
    swift_beginAccess();
    sub_1DD2DA538(*v11);
    v22 = v21;
    v24 = v23;
    swift_beginAccess();
    v25 = *v11;
    swift_beginAccess();
    v26 = OBJC_IVAR____TtC11EmojiPoster20ExpandingSpiralScene_layoutProvider;
    v27 = 1.0;
    if (*(unsigned __int8 *)(*(_QWORD *)(a3 + OBJC_IVAR____TtC11EmojiPoster20ExpandingSpiralScene_layoutProvider) + 16) < 2u)
      v27 = 12.0;
    objc_msgSend(v10, sel_setZRotation_, (double)(((double)v25 * 15.0 + fmod((double)*v12 / v27 * 360.0 + 90.0, 360.0)) * 0.0174532925));
    objc_msgSend(v10, sel_scaleToSize_, v22, v24);

    result = swift_beginAccess();
    if (__OFADD__(*v11, 1))
    {
      __break(1u);
    }
    else
    {
      if (*v11 + 1 != qword_1DD2FEA80[*(char *)(*(_QWORD *)(a3 + v26) + 16)])
      {
        result = swift_beginAccess();
        v28 = *v11 + 1;
        if (!__OFADD__(*v11, 1))
          goto LABEL_16;
        goto LABEL_20;
      }
      result = swift_beginAccess();
      if (!__OFADD__(*v12, 1))
      {
        ++*v12;
        result = swift_beginAccess();
        v28 = 0;
LABEL_16:
        *v11 = v28;
        return result;
      }
    }
    __break(1u);
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  return result;
}

uint64_t sub_1DD2D89CC(double a1, double a2)
{
  char *v2;
  char *v3;
  id v6;
  void *v7;
  uint64_t v8;
  unsigned int v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  unint64_t v20;
  double v21;
  _QWORD *v22;
  unint64_t v23;
  uint64_t v24;
  double v25;
  double v26;
  __double2 v27;
  unint64_t v28;
  unint64_t v29;
  double *v30;
  char isUniquelyReferenced_nonNull_native;
  char v32;
  unint64_t v33;
  uint64_t v34;
  _BOOL8 v35;
  uint64_t v36;
  char v37;
  unint64_t v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  BOOL v42;
  uint64_t v43;
  uint64_t result;
  double v45;
  double v46;
  double v47;
  uint64_t v48;
  double v49;
  uint64_t v50;
  double MidY;
  double MidX;
  CGRect v53;
  CGRect v54;

  v3 = v2;
  v6 = objc_msgSend(v2, sel_view);
  if (!v6)
    return 0;
  v7 = v6;
  v8 = 0;
  v50 = OBJC_IVAR____TtC11EmojiPoster20ExpandingSpiralScene_radius;
  v48 = OBJC_IVAR____TtC11EmojiPoster20ExpandingSpiralScene_layoutProvider;
  v9 = *(unsigned __int8 *)(*(_QWORD *)&v2[OBJC_IVAR____TtC11EmojiPoster20ExpandingSpiralScene_layoutProvider] + 16);
  if (v9 >= 2)
    v10 = 1;
  else
    v10 = 12;
  v47 = a1 * 10.0;
  v45 = a1 * 10.0 + 25.3 - a2 * 8.0;
  v46 = a2 * 8.0;
  v11 = (_QWORD *)MEMORY[0x1E0DEE9E0];
  v49 = (1.0 - a1) * 30.0 + (1.0 - a2) * 20.0;
  while (1)
  {
    swift_retain();
    objc_msgSend(v7, sel_bounds);
    MidX = CGRectGetMidX(v53);
    objc_msgSend(v7, sel_bounds);
    MidY = CGRectGetMidY(v54);
    v13 = 1.02;
    v14 = 30.0;
    if (v9)
    {
      if (v9 != 1)
      {
        v19 = 360.0 / (double)v10 * (double)v8;
        v13 = 0.15;
        v18 = 0.671951762;
        v15 = v45;
        v20 = 35;
        goto LABEL_20;
      }
      v13 = 1.09;
      v14 = 15.8;
    }
    v15 = v47 + v14 - v46;
    v16 = v13 * log(*(double *)&v3[v50] / v15);
    v17 = 8.0;
    if (!v9)
      v17 = 30.0;
    v18 = v16 / v17;
    v19 = 360.0 / (double)v10 * (double)v8;
    v20 = v9 ? 8 : 30;
LABEL_20:
    v21 = (v19 - v49) * 0.0174532925;
    v22 = sub_1DD2DDF0C(0, 1, 1, MEMORY[0x1E0DEE9D8]);
    v23 = v22[2];
    v24 = 2 * v23;
    v25 = 0.0;
    do
    {
      v26 = exp(v13 * v25);
      v27 = __sincos_stret(v21 + v25);
      v28 = v22[3];
      v29 = v23 + 1;
      if (v23 >= v28 >> 1)
        v22 = sub_1DD2DDF0C((_QWORD *)(v28 > 1), v23 + 1, 1, v22);
      v22[2] = v29;
      v30 = (double *)&v22[v24];
      v30[4] = MidX + v27.__cosval * (v15 * v26);
      v30[5] = MidY + v27.__sinval * (v15 * v26);
      v25 = v18 + v25;
      v24 += 2;
      ++v23;
    }
    while (v29 < v20);
    swift_release();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v33 = sub_1DD2E22C4(v8);
    v34 = v11[2];
    v35 = (v32 & 1) == 0;
    v36 = v34 + v35;
    if (__OFADD__(v34, v35))
      break;
    v37 = v32;
    if (v11[3] >= v36)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      {
        if ((v32 & 1) != 0)
          goto LABEL_6;
      }
      else
      {
        sub_1DD2DA348();
        if ((v37 & 1) != 0)
          goto LABEL_6;
      }
    }
    else
    {
      sub_1DD2D9BB4(v36, isUniquelyReferenced_nonNull_native);
      v38 = sub_1DD2E22C4(v8);
      if ((v37 & 1) != (v39 & 1))
        goto LABEL_40;
      v33 = v38;
      if ((v37 & 1) != 0)
      {
LABEL_6:
        v12 = v11[7];
        swift_bridgeObjectRelease();
        *(_QWORD *)(v12 + 8 * v33) = v22;
        goto LABEL_7;
      }
    }
    v11[(v33 >> 6) + 8] |= 1 << v33;
    v40 = 8 * v33;
    *(_QWORD *)(v11[6] + v40) = v8;
    *(_QWORD *)(v11[7] + v40) = v22;
    v41 = v11[2];
    v42 = __OFADD__(v41, 1);
    v43 = v41 + 1;
    if (v42)
      goto LABEL_39;
    v11[2] = v43;
LABEL_7:
    swift_bridgeObjectRelease();
    ++v8;
    v9 = *(unsigned __int8 *)(*(_QWORD *)&v3[v48] + 16);
    if (v9 >= 2)
      v10 = 1;
    else
      v10 = 12;
    if (v8 >= (unint64_t)v10)
    {

      return (uint64_t)v11;
    }
  }
  __break(1u);
LABEL_39:
  __break(1u);
LABEL_40:
  result = sub_1DD2FA24C();
  __break(1u);
  return result;
}

id sub_1DD2D8E3C()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ExpandingSpiralScene();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for ExpandingSpiralScene()
{
  return objc_opt_self();
}

uint64_t sub_1DD2D8EF4()
{
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

void sub_1DD2D8F40(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v3;

  v3 = (_QWORD *)(*v1 + OBJC_IVAR____TtC11EmojiPoster20ExpandingSpiralScene_emoji);
  swift_beginAccess();
  *v3 = a1;
  swift_bridgeObjectRelease();
  sub_1DD2D7DF4();
}

void (*sub_1DD2D8FA0(uint64_t a1))(uint64_t a1, char a2)
{
  _QWORD *v1;

  *(_QWORD *)(a1 + 24) = *v1;
  swift_beginAccess();
  return sub_1DD2D8FEC;
}

void sub_1DD2D8FEC(uint64_t a1, char a2)
{
  swift_endAccess();
  if ((a2 & 1) == 0)
    sub_1DD2D7DF4();
}

uint64_t sub_1DD2D901C@<X0>(_BYTE *a1@<X8>)
{
  _QWORD *v1;
  _BYTE *v3;
  uint64_t result;

  v3 = (_BYTE *)(*v1 + OBJC_IVAR____TtC11EmojiPoster20ExpandingSpiralScene_sizeVariant);
  result = swift_beginAccess();
  *a1 = *v3;
  return result;
}

void sub_1DD2D906C(char *a1)
{
  char v1;

  v1 = *a1;
  sub_1DD2D7590(&v1);
}

void (*sub_1DD2D90A0(_QWORD *a1))(_QWORD *a1)
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1DD2D7668(v2);
  return sub_1DD2C5E6C;
}

double sub_1DD2D90E8()
{
  _QWORD *v0;
  uint64_t v1;

  v1 = *v0 + OBJC_IVAR____TtC11EmojiPoster20ExpandingSpiralScene_wakeProgress;
  swift_beginAccess();
  return *(double *)v1;
}

void sub_1DD2D9130(double a1)
{
  _QWORD *v1;
  double *v3;

  v3 = (double *)(*v1 + OBJC_IVAR____TtC11EmojiPoster20ExpandingSpiralScene_wakeProgress);
  swift_beginAccess();
  *v3 = a1;
  sub_1DD2D778C();
}

void (*sub_1DD2D9188(uint64_t a1))(uint64_t a1, char a2)
{
  _QWORD *v1;

  *(_QWORD *)(a1 + 24) = *v1;
  swift_beginAccess();
  return sub_1DD2D91D4;
}

void sub_1DD2D91D4(uint64_t a1, char a2)
{
  swift_endAccess();
  if ((a2 & 1) == 0)
    sub_1DD2D778C();
}

double sub_1DD2D9204()
{
  _QWORD *v0;
  uint64_t v1;

  v1 = *v0 + OBJC_IVAR____TtC11EmojiPoster20ExpandingSpiralScene_unlockProgress;
  swift_beginAccess();
  return *(double *)v1;
}

uint64_t sub_1DD2D924C(double a1)
{
  _QWORD *v1;
  double *v3;
  uint64_t result;

  v3 = (double *)(*v1 + OBJC_IVAR____TtC11EmojiPoster20ExpandingSpiralScene_unlockProgress);
  result = swift_beginAccess();
  *v3 = a1;
  return result;
}

uint64_t (*sub_1DD2D92A0())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

void sub_1DD2D92E8()
{
  sub_1DD2D7DF4();
}

uint64_t sub_1DD2D9308()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_1DD2D932C(uint64_t a1, double a2)
{
  uint64_t v2;

  sub_1DD2D78B4(a2, a1, *(_QWORD *)(v2 + 16));
}

uint64_t block_copy_helper_5(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_5()
{
  return swift_release();
}

uint64_t sub_1DD2D934C(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  _QWORD *v22;
  unint64_t v23;
  int64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int64_t v34;
  uint64_t v35;
  char v36;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDB61F40);
  v36 = a2;
  v6 = sub_1DD2FA114();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v35 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v34 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  while (1)
  {
    if (v10)
    {
      v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v34)
      break;
    v22 = (_QWORD *)(v5 + 64);
    v23 = *(_QWORD *)(v35 + 8 * v21);
    ++v13;
    if (!v23)
    {
      v13 = v21 + 1;
      if (v21 + 1 >= v34)
        goto LABEL_33;
      v23 = *(_QWORD *)(v35 + 8 * v13);
      if (!v23)
      {
        v24 = v21 + 2;
        if (v24 >= v34)
        {
LABEL_33:
          swift_release();
          if ((v36 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v23 = *(_QWORD *)(v35 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            v13 = v24 + 1;
            if (__OFADD__(v24, 1))
              goto LABEL_42;
            if (v13 >= v34)
              goto LABEL_33;
            v23 = *(_QWORD *)(v35 + 8 * v13);
            ++v24;
            if (v23)
              goto LABEL_30;
          }
        }
        v13 = v24;
      }
    }
LABEL_30:
    v10 = (v23 - 1) & v23;
    v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    v29 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v20);
    v31 = *v29;
    v30 = v29[1];
    v32 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v20);
    if ((v36 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_1DD2FA270();
    sub_1DD2F9E44();
    result = sub_1DD2FA294();
    v14 = -1 << *(_BYTE *)(v7 + 32);
    v15 = result & ~v14;
    v16 = v15 >> 6;
    if (((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v27 = v16 == v26;
        if (v16 == v26)
          v16 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(_QWORD *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    v18 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v17);
    *v18 = v31;
    v18[1] = v30;
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v17) = v32;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v22 = (_QWORD *)(v5 + 64);
  if ((v36 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v33 = 1 << *(_BYTE *)(v5 + 32);
  if (v33 >= 64)
    bzero(v22, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v22 = -1 << v33;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_1DD2D9660(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  int64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  int64_t v35;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDB61F48);
  result = sub_1DD2FA114();
  v7 = result;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 0;
    v9 = (uint64_t *)(v5 + 64);
    v10 = 1 << *(_BYTE *)(v5 + 32);
    v32 = -1 << v10;
    if (v10 < 64)
      v11 = ~(-1 << v10);
    else
      v11 = -1;
    v12 = v11 & *(_QWORD *)(v5 + 64);
    v33 = 1 << *(_BYTE *)(v5 + 32);
    v34 = v3;
    v35 = (unint64_t)(v10 + 63) >> 6;
    v13 = result + 64;
    while (1)
    {
      if (v12)
      {
        v19 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        v20 = v19 | (v8 << 6);
      }
      else
      {
        v21 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        if (v21 >= v35)
          goto LABEL_33;
        v22 = v9[v21];
        ++v8;
        if (!v22)
        {
          v8 = v21 + 1;
          if (v21 + 1 >= v35)
            goto LABEL_33;
          v22 = v9[v8];
          if (!v22)
          {
            v23 = v21 + 2;
            if (v23 >= v35)
            {
LABEL_33:
              if ((a2 & 1) == 0)
              {
                result = swift_release();
                v3 = v34;
                goto LABEL_40;
              }
              if (v33 >= 64)
                bzero((void *)(v5 + 64), 8 * v35);
              else
                *v9 = v32;
              v3 = v34;
              *(_QWORD *)(v5 + 16) = 0;
              break;
            }
            v22 = v9[v23];
            if (!v22)
            {
              while (1)
              {
                v8 = v23 + 1;
                if (__OFADD__(v23, 1))
                  goto LABEL_42;
                if (v8 >= v35)
                  goto LABEL_33;
                v22 = v9[v8];
                ++v23;
                if (v22)
                  goto LABEL_30;
              }
            }
            v8 = v23;
          }
        }
LABEL_30:
        v12 = (v22 - 1) & v22;
        v20 = __clz(__rbit64(v22)) + (v8 << 6);
      }
      v28 = 8 * v20;
      v29 = *(_QWORD *)(*(_QWORD *)(v5 + 48) + v28);
      v30 = *(void **)(*(_QWORD *)(v5 + 56) + v28);
      if ((a2 & 1) == 0)
        v31 = v30;
      result = sub_1DD2FA264();
      v14 = -1 << *(_BYTE *)(v7 + 32);
      v15 = result & ~v14;
      v16 = v15 >> 6;
      if (((-1 << v15) & ~*(_QWORD *)(v13 + 8 * (v15 >> 6))) != 0)
      {
        v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v13 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v24 = 0;
        v25 = (unint64_t)(63 - v14) >> 6;
        do
        {
          if (++v16 == v25 && (v24 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          v26 = v16 == v25;
          if (v16 == v25)
            v16 = 0;
          v24 |= v26;
          v27 = *(_QWORD *)(v13 + 8 * v16);
        }
        while (v27 == -1);
        v17 = __clz(__rbit64(~v27)) + (v16 << 6);
      }
      *(_QWORD *)(v13 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      v18 = 8 * v17;
      *(_QWORD *)(*(_QWORD *)(v7 + 48) + v18) = v29;
      *(_QWORD *)(*(_QWORD *)(v7 + 56) + v18) = v30;
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
LABEL_40:
  *v3 = v7;
  return result;
}

uint64_t sub_1DD2D9910(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  int64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  char v28;
  unint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  char v35;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDB61F38);
  result = sub_1DD2FA114();
  v7 = result;
  if (*(_QWORD *)(v5 + 16))
  {
    v35 = a2;
    v34 = v3;
    v8 = 0;
    v9 = (uint64_t *)(v5 + 64);
    v10 = 1 << *(_BYTE *)(v5 + 32);
    v32 = -1 << v10;
    v33 = v10;
    if (v10 < 64)
      v11 = ~(-1 << v10);
    else
      v11 = -1;
    v12 = v11 & *(_QWORD *)(v5 + 64);
    v13 = (unint64_t)(v10 + 63) >> 6;
    v14 = result + 64;
    while (1)
    {
      if (v12)
      {
        v17 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        v18 = v17 | (v8 << 6);
      }
      else
      {
        v19 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v19 >= v13)
          goto LABEL_31;
        v20 = v9[v19];
        ++v8;
        if (!v20)
        {
          v8 = v19 + 1;
          if (v19 + 1 >= v13)
            goto LABEL_31;
          v20 = v9[v8];
          if (!v20)
          {
            v21 = v19 + 2;
            if (v21 >= v13)
            {
LABEL_31:
              if ((v35 & 1) == 0)
              {
                result = swift_release();
                v3 = v34;
                goto LABEL_38;
              }
              if (v33 >= 64)
                bzero((void *)(v5 + 64), 8 * v13);
              else
                *v9 = v32;
              v3 = v34;
              *(_QWORD *)(v5 + 16) = 0;
              break;
            }
            v20 = v9[v21];
            if (!v20)
            {
              while (1)
              {
                v8 = v21 + 1;
                if (__OFADD__(v21, 1))
                  goto LABEL_40;
                if (v8 >= v13)
                  goto LABEL_31;
                v20 = v9[v8];
                ++v21;
                if (v20)
                  goto LABEL_21;
              }
            }
            v8 = v21;
          }
        }
LABEL_21:
        v12 = (v20 - 1) & v20;
        v18 = __clz(__rbit64(v20)) + (v8 << 6);
      }
      v22 = 8 * v18;
      v23 = *(_QWORD *)(*(_QWORD *)(v5 + 48) + v22);
      v24 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + v22);
      result = sub_1DD2FA264();
      v25 = -1 << *(_BYTE *)(v7 + 32);
      v26 = result & ~v25;
      v27 = v26 >> 6;
      if (((-1 << v26) & ~*(_QWORD *)(v14 + 8 * (v26 >> 6))) != 0)
      {
        v15 = __clz(__rbit64((-1 << v26) & ~*(_QWORD *)(v14 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v28 = 0;
        v29 = (unint64_t)(63 - v25) >> 6;
        do
        {
          if (++v27 == v29 && (v28 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          v30 = v27 == v29;
          if (v27 == v29)
            v27 = 0;
          v28 |= v30;
          v31 = *(_QWORD *)(v14 + 8 * v27);
        }
        while (v31 == -1);
        v15 = __clz(__rbit64(~v31)) + (v27 << 6);
      }
      *(_QWORD *)(v14 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
      v16 = 8 * v15;
      *(_QWORD *)(*(_QWORD *)(v7 + 48) + v16) = v23;
      *(_QWORD *)(*(_QWORD *)(v7 + 56) + v16) = v24;
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
LABEL_38:
  *v3 = v7;
  return result;
}

uint64_t sub_1DD2D9BB4(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  int64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int64_t v33;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F03D12A8);
  result = sub_1DD2FA114();
  v7 = result;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 0;
    v9 = (uint64_t *)(v5 + 64);
    v10 = 1 << *(_BYTE *)(v5 + 32);
    v31 = -1 << v10;
    v32 = v10;
    if (v10 < 64)
      v11 = ~(-1 << v10);
    else
      v11 = -1;
    v12 = v11 & *(_QWORD *)(v5 + 64);
    v33 = (unint64_t)(v10 + 63) >> 6;
    v13 = result + 64;
    while (1)
    {
      if (v12)
      {
        v19 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        v20 = v19 | (v8 << 6);
      }
      else
      {
        v21 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v21 >= v33)
          goto LABEL_33;
        v22 = v9[v21];
        ++v8;
        if (!v22)
        {
          v8 = v21 + 1;
          if (v21 + 1 >= v33)
            goto LABEL_33;
          v22 = v9[v8];
          if (!v22)
          {
            v23 = v21 + 2;
            if (v23 >= v33)
            {
LABEL_33:
              if ((a2 & 1) != 0)
              {
                if (v32 >= 64)
                  bzero((void *)(v5 + 64), 8 * v33);
                else
                  *v9 = v31;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v22 = v9[v23];
            if (!v22)
            {
              while (1)
              {
                v8 = v23 + 1;
                if (__OFADD__(v23, 1))
                  goto LABEL_41;
                if (v8 >= v33)
                  goto LABEL_33;
                v22 = v9[v8];
                ++v23;
                if (v22)
                  goto LABEL_30;
              }
            }
            v8 = v23;
          }
        }
LABEL_30:
        v12 = (v22 - 1) & v22;
        v20 = __clz(__rbit64(v22)) + (v8 << 6);
      }
      v28 = 8 * v20;
      v29 = *(_QWORD *)(*(_QWORD *)(v5 + 48) + v28);
      v30 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + v28);
      if ((a2 & 1) == 0)
        swift_bridgeObjectRetain();
      result = sub_1DD2FA264();
      v14 = -1 << *(_BYTE *)(v7 + 32);
      v15 = result & ~v14;
      v16 = v15 >> 6;
      if (((-1 << v15) & ~*(_QWORD *)(v13 + 8 * (v15 >> 6))) != 0)
      {
        v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v13 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v24 = 0;
        v25 = (unint64_t)(63 - v14) >> 6;
        do
        {
          if (++v16 == v25 && (v24 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          v26 = v16 == v25;
          if (v16 == v25)
            v16 = 0;
          v24 |= v26;
          v27 = *(_QWORD *)(v13 + 8 * v16);
        }
        while (v27 == -1);
        v17 = __clz(__rbit64(~v27)) + (v16 << 6);
      }
      *(_QWORD *)(v13 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      v18 = 8 * v17;
      *(_QWORD *)(*(_QWORD *)(v7 + 48) + v18) = v29;
      *(_QWORD *)(*(_QWORD *)(v7 + 56) + v18) = v30;
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
  *v3 = v7;
  return result;
}

void *sub_1DD2D9E68()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDB61F40);
  v2 = *v0;
  v3 = sub_1DD2FA108();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_26;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
        break;
    }
LABEL_25:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (_QWORD *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v18 = v17[1];
    v19 = 8 * v15;
    v20 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + v19);
    v21 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v21 = *v17;
    v21[1] = v18;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v19) = v20;
    swift_bridgeObjectRetain();
    result = (void *)swift_bridgeObjectRetain();
  }
  v24 = v22 + 2;
  if (v24 >= v13)
    goto LABEL_26;
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_1DD2DA01C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  void *v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDB61F48);
  v2 = *v0;
  v3 = sub_1DD2FA108();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (id)swift_release();
    *v1 = v4;
    return result;
  }
  result = (id)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v18 >= v13)
      goto LABEL_26;
    v19 = *(_QWORD *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      v9 = v18 + 1;
      if (v18 + 1 >= v13)
        goto LABEL_26;
      v19 = *(_QWORD *)(v6 + 8 * v9);
      if (!v19)
        break;
    }
LABEL_25:
    v12 = (v19 - 1) & v19;
    v15 = __clz(__rbit64(v19)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(void **)(*(_QWORD *)(v2 + 56) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = *(_QWORD *)(*(_QWORD *)(v2 + 48) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v16) = v17;
    result = v17;
  }
  v20 = v18 + 2;
  if (v20 >= v13)
    goto LABEL_26;
  v19 = *(_QWORD *)(v6 + 8 * v20);
  if (v19)
  {
    v9 = v20;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v19 = *(_QWORD *)(v6 + 8 * v9);
    ++v20;
    if (v19)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1DD2DA1BC()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  unint64_t v21;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDB61F38);
  v2 = *v0;
  v3 = sub_1DD2FA108();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v18 >= v13)
      goto LABEL_26;
    v19 = *(_QWORD *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      v9 = v18 + 1;
      if (v18 + 1 >= v13)
        goto LABEL_26;
      v19 = *(_QWORD *)(v6 + 8 * v9);
      if (!v19)
        break;
    }
LABEL_25:
    v21 = __clz(__rbit64(v19));
    v12 = (v19 - 1) & v19;
    v15 = v21 + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = *(_QWORD *)(*(_QWORD *)(v2 + 48) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v16) = v17;
  }
  v20 = v18 + 2;
  if (v20 >= v13)
    goto LABEL_26;
  v19 = *(_QWORD *)(v6 + 8 * v20);
  if (v19)
  {
    v9 = v20;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v19 = *(_QWORD *)(v6 + 8 * v9);
    ++v20;
    if (v19)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1DD2DA348()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F03D12A8);
  v2 = *v0;
  v3 = sub_1DD2FA108();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v18 >= v13)
      goto LABEL_26;
    v19 = *(_QWORD *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      v9 = v18 + 1;
      if (v18 + 1 >= v13)
        goto LABEL_26;
      v19 = *(_QWORD *)(v6 + 8 * v9);
      if (!v19)
        break;
    }
LABEL_25:
    v12 = (v19 - 1) & v19;
    v15 = __clz(__rbit64(v19)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = *(_QWORD *)(*(_QWORD *)(v2 + 48) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v16) = v17;
    result = (void *)swift_bridgeObjectRetain();
  }
  v20 = v18 + 2;
  if (v20 >= v13)
    goto LABEL_26;
  v19 = *(_QWORD *)(v6 + 8 * v20);
  if (v19)
  {
    v9 = v20;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v19 = *(_QWORD *)(v6 + 8 * v9);
    ++v20;
    if (v19)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_1DD2DA4E8()
{
  return swift_deallocObject();
}

uint64_t sub_1DD2DA4F8()
{
  uint64_t v0;

  swift_release();
  swift_release();
  return swift_deallocObject();
}

unint64_t sub_1DD2DA52C(void *a1, uint64_t a2)
{
  uint64_t *v2;

  return sub_1DD2D870C(a1, a2, v2[2], v2[3], v2[4]);
}

void sub_1DD2DA538(uint64_t a1)
{
  char *v1;
  char *v3;
  id v4;
  void *v5;
  id v6;
  void *v7;

  v3 = &v1[OBJC_IVAR____TtC11EmojiPoster20ExpandingSpiralScene_sizeVariant];
  swift_beginAccess();
  if (*v3 == 1)
  {
    sub_1DD2F4344(a1);
  }
  else
  {
    v4 = objc_msgSend(v1, sel_view);
    if (v4)
    {
      v5 = v4;
      objc_msgSend(v4, sel_bounds);

    }
    v6 = objc_msgSend(v1, sel_view);
    if (v6)
    {
      v7 = v6;
      objc_msgSend(v6, sel_bounds);

    }
  }
}

uint64_t sub_1DD2DA734()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1DD2DA758()
{
  return swift_deallocObject();
}

uint64_t dispatch thunk of EmojiDeviceOrientationHandling.setDeviceInterfaceOrientation(_:animated:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t sub_1DD2DA780(uint64_t a1, uint64_t a2, char *a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  void *v23;
  void *v24;
  id v25;
  void (*v26)(char *, char *, uint64_t);
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t *v33;
  BOOL v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  unint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  unint64_t v49;
  uint64_t v50;
  void (*v51)(unint64_t, char *, uint64_t);
  uint64_t v52;
  unint64_t v53;
  unint64_t v54;
  uint64_t *v55;
  uint64_t v56;
  unint64_t v57;
  unint64_t v58;
  uint64_t v59;
  unint64_t **v60;
  unint64_t *v61;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v63;
  unint64_t v64;
  unint64_t *v65;
  uint64_t v66;
  char v68;
  uint64_t v69;
  unint64_t **v70;
  char v71;
  unint64_t v72;
  unint64_t v73;
  unint64_t *v74;
  id v75;
  unint64_t v76;
  unint64_t v77;
  unint64_t v78;
  unint64_t v79;
  NSObject *v80;
  void *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  unint64_t **v85;
  uint64_t result;
  uint64_t v87;
  int v88;
  _QWORD v89[2];
  char *v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  char *v94;
  _QWORD *v95;
  unint64_t **v96;
  uint64_t v97;
  uint64_t *v98;
  char *v99;
  char *v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t *v105;
  unint64_t v106;
  uint64_t v107;
  uint64_t v108;
  unint64_t v109;
  uint64_t v110;
  unint64_t v111;
  uint64_t v112;
  uint64_t v113;
  unint64_t v114;
  unint64_t v115;

  v4 = v3;
  v6 = sub_1DD2F9C28();
  v103 = *(_QWORD *)(v6 - 8);
  v104 = v6;
  v7 = ((uint64_t (*)(void))MEMORY[0x1E0C80A78])();
  v101 = (char *)v89 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x1E0C80A78](v7);
  v100 = (char *)v89 - v10;
  v102 = v11;
  MEMORY[0x1E0C80A78](v9);
  v99 = (char *)v89 - v12;
  v13 = sub_1DD2F9E08();
  MEMORY[0x1E0C80A78](v13);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDB60DB0);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)v89 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_1DD2F9C58();
  v18 = *(_QWORD *)(v17 - 8);
  v19 = MEMORY[0x1E0C80A78](v17);
  v21 = (char *)v89 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v19);
  v94 = (char *)v89 - v22;
  v93 = (char *)v3 + OBJC_IVAR____TtC11EmojiPoster18EmojiPatternParser_logger;
  sub_1DD2F9CDC();
  v97 = OBJC_IVAR____TtC11EmojiPoster18EmojiPatternParser_numberOfRows;
  *(_QWORD *)((char *)v3 + OBJC_IVAR____TtC11EmojiPoster18EmojiPatternParser_numberOfRows) = 0;
  v96 = (unint64_t **)((char *)v3 + OBJC_IVAR____TtC11EmojiPoster18EmojiPatternParser_patterns);
  *v96 = (unint64_t *)MEMORY[0x1E0DEE9D8];
  v105 = (_QWORD *)((char *)v3 + OBJC_IVAR____TtC11EmojiPoster18EmojiPatternParser_evenRowSymbolCount);
  *v105 = 0;
  v98 = (_QWORD *)((char *)v3 + OBJC_IVAR____TtC11EmojiPoster18EmojiPatternParser_oddRowSymbolCount);
  *v98 = 0;
  v23 = (void *)sub_1DD2F9DB4();
  swift_bridgeObjectRelease();
  v24 = (void *)sub_1DD2F9DB4();
  v25 = objc_msgSend(a3, sel_URLForResource_withExtension_, v23, v24);

  if (!v25)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v18 + 56))(v16, 1, 1, v17);
    goto LABEL_34;
  }
  sub_1DD2F9C4C();

  v26 = *(void (**)(char *, char *, uint64_t))(v18 + 32);
  v26(v16, v21, v17);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v16, 0, 1, v17);
  v92 = v18;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17) == 1)
  {
LABEL_34:

    sub_1DD2DB990((uint64_t)v16);
    return (uint64_t)v4;
  }
  v91 = v17;
  v26(v94, v16, v17);
  sub_1DD2F9DFC();
  v27 = 0;
  v28 = sub_1DD2F9DA8();
  v30 = v29;
  v110 = 10;
  v111 = 0xE100000000000000;
  MEMORY[0x1E0C80A78](v28);
  v87 = (uint64_t)&v110;
  swift_bridgeObjectRetain();
  v31 = sub_1DD2DB374(1000, 0, sub_1DD2DB9D0, (uint64_t)&v89[-4], v28, v30);
  swift_bridgeObjectRelease();
  v114 = 0;
  v115 = 0xE000000000000000;
  v32 = *(_QWORD *)(v31 + 16);
  if (v32)
  {
    v90 = a3;
    v95 = v4;
    a3 = 0;
    v89[1] = v31;
    v4 = (_QWORD *)(v31 + 56);
    while (1)
    {
      v35 = *(v4 - 3);
      v36 = *(v4 - 2);
      v38 = *(v4 - 1);
      v37 = *v4;
      swift_bridgeObjectRetain();
      if ((v36 ^ v35) >= 0x4000)
      {
        if (sub_1DD2F9FB8() == 35 && v66 == 0xE100000000000000)
        {
          swift_bridgeObjectRelease();
LABEL_32:
          swift_bridgeObjectRelease();
          goto LABEL_6;
        }
        v68 = sub_1DD2FA210();
        swift_bridgeObjectRelease();
        if ((v68 & 1) != 0)
          goto LABEL_32;
      }
      v108 = v32;
      v110 = v35;
      v111 = v36;
      v112 = v38;
      v113 = v37;
      v39 = v99;
      sub_1DD2F9C1C();
      sub_1DD2DBA24();
      v40 = sub_1DD2F9FDC();
      v106 = v41;
      v107 = v40;
      v42 = a3;
      v43 = v103;
      v44 = v104;
      v45 = *(_QWORD *)(v103 + 8);
      ((void (*)(char *, uint64_t))v45)(v39, v104);
      swift_bridgeObjectRelease();
      sub_1DD2F9BF8();
      v46 = v27;
      v47 = v100;
      sub_1DD2F9C10();
      ((void (*)(char *, uint64_t))v45)(v39, v44);
      v48 = v101;
      (*(void (**)(char *, char *, uint64_t))(v43 + 16))(v101, v47, v44);
      v49 = (*(unsigned __int8 *)(v43 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v43 + 80);
      v50 = swift_allocObject();
      v51 = *(void (**)(unint64_t, char *, uint64_t))(v43 + 32);
      a3 = v42;
      v51(v50 + v49, v48, v44);
      ((void (*)(char *, uint64_t))v45)(v47, v44);
      v27 = v46;
      v52 = sub_1DD2DBB0C(v107, v106, (uint64_t (*)(uint64_t))sub_1DD2DBAC8, v50);
      v54 = v53;
      swift_release();
      v55 = v105;
      if (v42)
      {
        if (v42 != (char *)1)
          goto LABEL_12;
        v55 = v98;
      }
      *v55 = sub_1DD2F9E50();
LABEL_12:
      v56 = HIBYTE(v54) & 0xF;
      if ((v54 & 0x2000000000000000) == 0)
        v56 = v52 & 0xFFFFFFFFFFFFLL;
      if (v56)
      {
        v33 = &v114;
        sub_1DD2F9E74();
        swift_bridgeObjectRelease();
        v34 = __OFADD__(v42, 1);
        a3 = v42 + 1;
        v32 = v108;
        if (v34)
        {
          __break(1u);
LABEL_53:
          v33 = sub_1DD2DDAC4(0, v33[2] + 1, 1, v33);
          *v96 = v33;
LABEL_41:
          v73 = v33[2];
          v72 = v33[3];
          if (v73 >= v72 >> 1)
          {
            v33 = sub_1DD2DDAC4((_QWORD *)(v72 > 1), v73 + 1, 1, v33);
            *v96 = v33;
          }
          v33[2] = v73 + 1;
          v74 = &v33[2 * v73];
          v74[4] = v45;
          v74[5] = v54;
          swift_endAccess();
          goto LABEL_45;
        }
      }
      else
      {
        swift_bridgeObjectRelease();
        v57 = v114;
        v58 = v115;
        v59 = HIBYTE(v115) & 0xF;
        if ((v115 & 0x2000000000000000) == 0)
          v59 = v114 & 0xFFFFFFFFFFFFLL;
        v32 = v108;
        if (v59)
        {
          if (!*(_QWORD *)((char *)v95 + v97))
            *(_QWORD *)((char *)v95 + v97) = a3;
          v60 = v96;
          swift_beginAccess();
          v61 = *v60;
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          *v60 = v61;
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          {
            v61 = sub_1DD2DDAC4(0, v61[2] + 1, 1, v61);
            *v96 = v61;
          }
          v64 = v61[2];
          v63 = v61[3];
          if (v64 >= v63 >> 1)
          {
            v61 = sub_1DD2DDAC4((_QWORD *)(v63 > 1), v64 + 1, 1, v61);
            *v96 = v61;
          }
          v61[2] = v64 + 1;
          v65 = &v61[2 * v64];
          v65[4] = v57;
          v65[5] = v58;
          swift_endAccess();
          v114 = 0;
          v115 = 0xE000000000000000;
        }
      }
LABEL_6:
      v4 += 4;
      if (!--v32)
      {
        swift_bridgeObjectRelease();
        v45 = v114;
        v54 = v115;
        v4 = v95;
        a3 = v90;
        goto LABEL_37;
      }
    }
  }
  swift_bridgeObjectRelease();
  v45 = 0;
  v54 = 0xE000000000000000;
LABEL_37:
  v69 = HIBYTE(v54) & 0xF;
  if ((v54 & 0x2000000000000000) == 0)
    v69 = v45 & 0xFFFFFFFFFFFFLL;
  v32 = v91;
  if (v69)
  {
    v70 = v96;
    swift_beginAccess();
    v33 = *v70;
    v71 = swift_isUniquelyReferenced_nonNull_native();
    *v70 = v33;
    if ((v71 & 1) == 0)
      goto LABEL_53;
    goto LABEL_41;
  }
  swift_bridgeObjectRelease();
LABEL_45:
  v75 = objc_msgSend((id)objc_opt_self(), sel_mainScreen);
  objc_msgSend(v75, sel_bounds);
  v77 = v76;
  v79 = v78;

  swift_retain();
  v80 = sub_1DD2F9CD0();
  v81 = (void *)sub_1DD2F9F58();
  if (!os_log_type_enabled(v80, (os_log_type_t)v81))
  {

    swift_release();
    goto LABEL_50;
  }
  v82 = swift_slowAlloc();
  *(_DWORD *)v82 = 134219520;
  v83 = *v98;
  v84 = *v105;
  if (*v98 == *v105 || (v34 = __OFADD__(v83, v84), v83 += v84, !v34))
  {
    v110 = v83;
    sub_1DD2F9FC4();
    *(_WORD *)(v82 + 12) = 2048;
    v110 = *v105;
    sub_1DD2F9FC4();
    *(_WORD *)(v82 + 22) = 2048;
    v110 = *v98;
    sub_1DD2F9FC4();
    *(_WORD *)(v82 + 32) = 2048;
    v110 = *(_QWORD *)((char *)v4 + v97);
    sub_1DD2F9FC4();
    *(_WORD *)(v82 + 42) = 2048;
    v85 = v96;
    swift_beginAccess();
    v109 = (*v85)[2];
    sub_1DD2F9FC4();
    swift_release();
    *(_WORD *)(v82 + 52) = 2048;
    v109 = v77;
    sub_1DD2F9FC4();
    *(_WORD *)(v82 + 62) = 2048;
    v109 = v79;
    sub_1DD2F9FC4();
    _os_log_impl(&dword_1DD2AD000, v80, (os_log_type_t)v81, "Pattern parser: numloc: %ld, evenCount: %ld, oddCount: %ld, numRows: %ld,   numPatterns: %ld, screenSize: %f, %f", (uint8_t *)v82, 0x48u);
    MEMORY[0x1DF0D80DC](v82, -1, -1);

    v32 = v91;
LABEL_50:
    (*(void (**)(char *, uint64_t))(v92 + 8))(v94, v32);
    return (uint64_t)v4;
  }
  __break(1u);

  v88 = 0;
  v87 = 81;
  result = sub_1DD2FA0E4();
  __break(1u);
  return result;
}

uint64_t sub_1DD2DB244()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC11EmojiPoster18EmojiPatternParser_logger;
  v2 = sub_1DD2F9CE8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1DD2DB2A4()
{
  return type metadata accessor for EmojiPatternParser();
}

uint64_t type metadata accessor for EmojiPatternParser()
{
  uint64_t result;

  result = qword_1EDB60DC0;
  if (!qword_1EDB60DC0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1DD2DB2E8()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1DD2F9CE8();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_1DD2DB374(uint64_t a1, char a2, uint64_t (*a3)(_QWORD *), uint64_t a4, uint64_t a5, unint64_t a6)
{
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  char v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  _QWORD *v40;
  uint64_t result;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v47;
  unint64_t v48;
  _QWORD v50[4];

  v50[3] = a4;
  if (a1 < 0)
    goto LABEL_42;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = MEMORY[0x1E0DEE9D8];
  v47 = swift_allocObject();
  *(_QWORD *)(v47 + 16) = 15;
  v11 = HIBYTE(a6) & 0xF;
  if (!a1 || ((a6 & 0x2000000000000000) != 0 ? (v12 = HIBYTE(a6) & 0xF) : (v12 = a5 & 0xFFFFFFFFFFFFLL), !v12))
  {
    if ((a6 & 0x2000000000000000) == 0)
      v11 = a5 & 0xFFFFFFFFFFFFLL;
    v30 = 7;
    if (((a6 >> 60) & ((a5 & 0x800000000000000) == 0)) != 0)
      v30 = 11;
    sub_1DD2DB810(v30 | (v11 << 16), v47, a2 & 1, v10);
    swift_bridgeObjectRelease();
    v13 = *(_QWORD **)(v10 + 16);
    swift_bridgeObjectRetain();
    swift_release();
LABEL_39:
    swift_release();
    return (uint64_t)v13;
  }
  v42 = a1;
  v43 = v10;
  v48 = 4 * v12;
  v13 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  v14 = 15;
  v15 = 15;
  v16 = 15;
  while (1)
  {
    v50[0] = sub_1DD2F9E98();
    v50[1] = v17;
    v18 = a3(v50);
    if (v6)
    {
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return (uint64_t)v13;
    }
    v19 = v18;
    swift_bridgeObjectRelease();
    if ((v19 & 1) != 0)
      break;
    v14 = sub_1DD2F9E5C();
LABEL_9:
    if (v48 == v14 >> 14)
      goto LABEL_29;
  }
  if (v15 >> 14 == v14 >> 14 && (a2 & 1) != 0)
  {
    v14 = sub_1DD2F9E5C();
    *(_QWORD *)(v47 + 16) = v14;
    v15 = v14;
    v16 = v14;
    goto LABEL_9;
  }
  if (v14 >> 14 < v15 >> 14)
    goto LABEL_41;
  v20 = sub_1DD2F9EB0();
  v44 = v21;
  v45 = v20;
  v23 = v22;
  v25 = v24;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v13 = sub_1DD2DDBD0(0, v13[2] + 1, 1, v13);
  v27 = v13[2];
  v26 = v13[3];
  if (v27 >= v26 >> 1)
    v13 = sub_1DD2DDBD0((_QWORD *)(v26 > 1), v27 + 1, 1, v13);
  v13[2] = v27 + 1;
  v28 = &v13[4 * v27];
  v28[4] = v45;
  v28[5] = v23;
  v28[6] = v25;
  v28[7] = v44;
  *(_QWORD *)(v43 + 16) = v13;
  v29 = sub_1DD2F9E5C();
  v14 = v29;
  *(_QWORD *)(v47 + 16) = v29;
  if (v13[2] != v42)
  {
    v15 = v29;
    v16 = v29;
    goto LABEL_9;
  }
  v16 = v29;
  v15 = v29;
LABEL_29:
  if (v48 == v15 >> 14 && (a2 & 1) != 0)
  {
    swift_bridgeObjectRelease();
LABEL_38:
    swift_bridgeObjectRetain();
    swift_release();
    goto LABEL_39;
  }
  if (v48 >= v16 >> 14)
  {
    v31 = sub_1DD2F9EB0();
    v33 = v32;
    v35 = v34;
    v37 = v36;
    swift_bridgeObjectRelease();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v13 = sub_1DD2DDBD0(0, v13[2] + 1, 1, v13);
    v39 = v13[2];
    v38 = v13[3];
    if (v39 >= v38 >> 1)
      v13 = sub_1DD2DDBD0((_QWORD *)(v38 > 1), v39 + 1, 1, v13);
    v13[2] = v39 + 1;
    v40 = &v13[4 * v39];
    v40[4] = v31;
    v40[5] = v33;
    v40[6] = v35;
    v40[7] = v37;
    *(_QWORD *)(v43 + 16) = v13;
    goto LABEL_38;
  }
LABEL_41:
  sub_1DD2FA0D8();
  __break(1u);
LABEL_42:
  result = sub_1DD2FA0D8();
  __break(1u);
  return result;
}

uint64_t sub_1DD2DB810(unint64_t a1, uint64_t a2, unsigned __int8 a3, uint64_t a4)
{
  unint64_t v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  uint64_t result;

  v4 = *(_QWORD *)(a2 + 16) >> 14;
  v5 = (v4 == a1 >> 14) & a3;
  if (v5 == 1)
    return v5 ^ 1u;
  if (a1 >> 14 >= v4)
  {
    v7 = sub_1DD2F9EB0();
    v9 = v8;
    v11 = v10;
    v13 = v12;
    v14 = *(_QWORD **)(a4 + 16);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)(a4 + 16) = v14;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v14 = sub_1DD2DDBD0(0, v14[2] + 1, 1, v14);
      *(_QWORD *)(a4 + 16) = v14;
    }
    v17 = v14[2];
    v16 = v14[3];
    if (v17 >= v16 >> 1)
    {
      v14 = sub_1DD2DDBD0((_QWORD *)(v16 > 1), v17 + 1, 1, v14);
      *(_QWORD *)(a4 + 16) = v14;
    }
    v14[2] = v17 + 1;
    v18 = &v14[4 * v17];
    v18[4] = v7;
    v18[5] = v9;
    v18[6] = v11;
    v18[7] = v13;
    return v5 ^ 1u;
  }
  result = sub_1DD2FA0D8();
  __break(1u);
  return result;
}

uint64_t sub_1DD2DB968@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = a1();
  *a2 = result;
  return result;
}

uint64_t sub_1DD2DB990(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDB60DB0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1DD2DB9D0(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v2;

  v2 = *(_QWORD **)(v1 + 16);
  if (*a1 == *v2 && a1[1] == v2[1])
    return 1;
  else
    return sub_1DD2FA210() & 1;
}

unint64_t sub_1DD2DBA24()
{
  unint64_t result;

  result = qword_1EDB614F8;
  if (!qword_1EDB614F8)
  {
    result = MEMORY[0x1DF0D8040](MEMORY[0x1E0DEBB28], MEMORY[0x1E0DEBAF0]);
    atomic_store(result, (unint64_t *)&qword_1EDB614F8);
  }
  return result;
}

uint64_t sub_1DD2DBA68()
{
  uint64_t v0;
  uint64_t v1;

  v1 = sub_1DD2F9C28();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

uint64_t sub_1DD2DBAC8()
{
  sub_1DD2F9C28();
  return sub_1DD2F9C04() & 1;
}

uint64_t sub_1DD2DBB0C(uint64_t a1, unint64_t a2, uint64_t (*a3)(uint64_t), uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v16;
  uint64_t v17;
  _QWORD v18[2];
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;

  v21 = a4;
  v19 = 0;
  v20 = 0xE000000000000000;
  if ((a2 & 0x2000000000000000) != 0)
    v6 = HIBYTE(a2) & 0xF;
  else
    v6 = a1 & 0xFFFFFFFFFFFFLL;
  if (v6)
  {
    v9 = 0;
    v16 = (a2 & 0xFFFFFFFFFFFFFFFLL) + 32;
    v17 = a2 & 0xFFFFFFFFFFFFFFLL;
    do
    {
      if ((a2 & 0x1000000000000000) != 0)
      {
        v11 = sub_1DD2FA018();
        v13 = v12;
      }
      else
      {
        if ((a2 & 0x2000000000000000) != 0)
        {
          v18[0] = a1;
          v18[1] = v17;
          v11 = *((unsigned __int8 *)v18 + v9);
          if (*((char *)v18 + v9) < 0)
            __asm { BR              X9 }
        }
        else
        {
          v10 = v16;
          if ((a1 & 0x1000000000000000) == 0)
            v10 = sub_1DD2FA078();
          v11 = *(unsigned __int8 *)(v10 + v9);
          if (*(char *)(v10 + v9) < 0)
            __asm { BR              X9 }
        }
        v13 = 1;
      }
      v14 = a3(v11);
      if (v4)
      {
        swift_bridgeObjectRelease();
        return swift_bridgeObjectRelease();
      }
      if ((v14 & 1) != 0)
        sub_1DD2F9E2C();
      v9 += v13;
    }
    while (v9 < v6);
    swift_bridgeObjectRelease();
    return v19;
  }
  else
  {
    swift_bridgeObjectRelease();
    return 0;
  }
}

uint64_t sub_1DD2DBD4C()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1DD2DBD70()
{
  return swift_deallocObject();
}

id sub_1DD2DBD80(void *a1)
{
  char *v1;
  uint64_t v3;
  id v4;
  char *v5;
  id v6;
  id v7;
  id v8;
  objc_super v10;

  v3 = OBJC_IVAR____TtC11EmojiPoster23EmojiCollectionViewCell_emojiView;
  v4 = objc_allocWithZone(MEMORY[0x1E0DC3990]);
  v5 = v1;
  *(_QWORD *)&v1[v3] = objc_msgSend(v4, sel_init);

  v10.receiver = v5;
  v10.super_class = (Class)type metadata accessor for EmojiCollectionViewCell();
  v6 = objc_msgSendSuper2(&v10, sel_initWithCoder_, a1);
  v7 = v6;
  if (v6)
  {
    v8 = v6;
    sub_1DD2DBF0C();

  }
  return v7;
}

void sub_1DD2DBF0C()
{
  char *v0;
  void *v1;
  void *v2;
  id v3;
  void *v4;
  uint64_t v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;

  v1 = v0;
  v2 = *(void **)&v0[OBJC_IVAR____TtC11EmojiPoster23EmojiCollectionViewCell_emojiView];
  objc_msgSend(v2, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  v3 = objc_msgSend(v1, sel_contentView);
  objc_msgSend(v3, sel_addSubview_, v2);

  v4 = (void *)objc_opt_self();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDB61620);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1DD2FEB50;
  v6 = objc_msgSend(v1, sel_contentView);
  v7 = objc_msgSend(v6, sel_leadingAnchor);

  v8 = objc_msgSend(v2, sel_leadingAnchor);
  v9 = objc_msgSend(v7, sel_constraintEqualToAnchor_, v8);

  *(_QWORD *)(v5 + 32) = v9;
  v10 = objc_msgSend(v1, sel_contentView);
  v11 = objc_msgSend(v10, sel_trailingAnchor);

  v12 = objc_msgSend(v2, sel_trailingAnchor);
  v13 = objc_msgSend(v11, sel_constraintEqualToAnchor_, v12);

  *(_QWORD *)(v5 + 40) = v13;
  v14 = objc_msgSend(v1, sel_contentView);
  v15 = objc_msgSend(v14, sel_topAnchor);

  v16 = objc_msgSend(v2, sel_topAnchor);
  v17 = objc_msgSend(v15, sel_constraintEqualToAnchor_, v16);

  *(_QWORD *)(v5 + 48) = v17;
  v18 = objc_msgSend(v1, sel_contentView);
  v19 = objc_msgSend(v18, sel_bottomAnchor);

  v20 = objc_msgSend(v2, sel_bottomAnchor);
  v21 = objc_msgSend(v19, sel_constraintEqualToAnchor_, v20);

  *(_QWORD *)(v5 + 56) = v21;
  sub_1DD2F9EF8();
  sub_1DD2CDA0C(0, &qword_1EDB61510);
  v22 = (id)sub_1DD2F9EC8();
  swift_bridgeObjectRelease();
  objc_msgSend(v4, sel_activateConstraints_, v22);

}

id sub_1DD2DC204()
{
  return sub_1DD2CF81C(type metadata accessor for EmojiCollectionViewCell);
}

id EmojiCollectionViewController.__allocating_init(configuration:)(_OWORD *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_allocWithZone(v1);
  return EmojiCollectionViewController.init(configuration:)(a1);
}

id EmojiCollectionViewController.init(configuration:)(_OWORD *a1)
{
  _BYTE *v1;
  uint64_t v3;
  id v4;
  char *v5;
  char *v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  id v11;
  id v12;
  objc_super v14;

  *(_QWORD *)&v1[OBJC_IVAR____TtC11EmojiPoster29EmojiCollectionViewController_diffableDataSource] = 0;
  v1[OBJC_IVAR____TtC11EmojiPoster29EmojiCollectionViewController_isSpinning] = 0;
  v3 = OBJC_IVAR____TtC11EmojiPoster29EmojiCollectionViewController_hiddenEmojiField;
  v4 = objc_allocWithZone(MEMORY[0x1E0DC3DB8]);
  v5 = v1;
  *(_QWORD *)&v1[v3] = objc_msgSend(v4, sel_init);
  v6 = &v5[OBJC_IVAR____TtC11EmojiPoster29EmojiCollectionViewController_configuration];
  v7 = a1[3];
  *((_OWORD *)v6 + 2) = a1[2];
  *((_OWORD *)v6 + 3) = v7;
  v8 = a1[1];
  *(_OWORD *)v6 = *a1;
  *((_OWORD *)v6 + 1) = v8;
  *(_OWORD *)(v6 + 105) = *(_OWORD *)((char *)a1 + 105);
  v9 = a1[6];
  v10 = a1[4];
  *((_OWORD *)v6 + 5) = a1[5];
  *((_OWORD *)v6 + 6) = v9;
  *((_OWORD *)v6 + 4) = v10;

  v11 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for EmojiSpiralLayout()), sel_init);
  v14.receiver = v5;
  v14.super_class = (Class)type metadata accessor for EmojiCollectionViewController();
  v12 = objc_msgSendSuper2(&v14, sel_initWithCollectionViewLayout_, v11);

  return v12;
}

uint64_t type metadata accessor for EmojiCollectionViewController()
{
  return objc_opt_self();
}

id EmojiCollectionViewController.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

id EmojiCollectionViewController.init(coder:)(void *a1)
{
  _BYTE *v1;
  uint64_t v3;
  id v4;
  char *v5;
  char *v6;
  id v12;
  objc_super v14;

  *(_QWORD *)&v1[OBJC_IVAR____TtC11EmojiPoster29EmojiCollectionViewController_diffableDataSource] = 0;
  v1[OBJC_IVAR____TtC11EmojiPoster29EmojiCollectionViewController_isSpinning] = 0;
  v3 = OBJC_IVAR____TtC11EmojiPoster29EmojiCollectionViewController_hiddenEmojiField;
  v4 = objc_allocWithZone(MEMORY[0x1E0DC3DB8]);
  v5 = v1;
  *(_QWORD *)&v1[v3] = objc_msgSend(v4, sel_init);
  v6 = &v5[OBJC_IVAR____TtC11EmojiPoster29EmojiCollectionViewController_configuration];
  *(_QWORD *)v6 = 0;
  *((_QWORD *)v6 + 1) = 0;
  v6[16] = 0;
  __asm { FMOV            V0.2D, #1.0 }
  *(_OWORD *)(v6 + 24) = _Q0;
  *(_OWORD *)(v6 + 40) = _Q0;
  *((_DWORD *)v6 + 26) = 16908288;
  *(_OWORD *)(v6 + 88) = 0u;
  *(_OWORD *)(v6 + 72) = 0u;
  *(_OWORD *)(v6 + 56) = 0u;
  *((_QWORD *)v6 + 14) = &unk_1EA7122F8;
  v6[120] = 0;

  v14.receiver = v5;
  v14.super_class = (Class)type metadata accessor for EmojiCollectionViewController();
  v12 = objc_msgSendSuper2(&v14, sel_initWithCoder_, a1);

  return v12;
}

id sub_1DD2DC4C0()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  objc_class *v10;
  id result;
  void *v12;
  void *v13;
  id v14;
  void *v15;
  id v16;
  void *v17;
  void *v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  void *v29;
  void *v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  char v37;
  objc_super v38;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F03D12D0);
  v32 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v32 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F03D12D8);
  v33 = *(_QWORD *)(v5 - 8);
  v34 = v5;
  v6 = *(_QWORD *)(v33 + 64);
  v7 = MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v35 = (char *)&v32 - v9;
  v10 = (objc_class *)type metadata accessor for EmojiCollectionViewController();
  v38.receiver = v1;
  v38.super_class = v10;
  objc_msgSendSuper2(&v38, sel_viewDidLoad);
  result = objc_msgSend(v1, sel_view);
  if (!result)
  {
    __break(1u);
    goto LABEL_9;
  }
  v12 = result;
  v13 = (void *)objc_opt_self();
  v14 = objc_msgSend(v13, sel_clearColor);
  objc_msgSend(v12, sel_setBackgroundColor_, v14);

  result = objc_msgSend(v1, sel_collectionView);
  if (!result)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  v15 = result;
  v16 = objc_msgSend(v13, sel_clearColor);
  objc_msgSend(v15, sel_setBackgroundColor_, v16);

  v17 = *(void **)&v1[OBJC_IVAR____TtC11EmojiPoster29EmojiCollectionViewController_hiddenEmojiField];
  objc_msgSend(v17, sel_setDelegate_, v1);
  objc_msgSend(v17, sel_setHidden_, 1);
  objc_msgSend(v17, sel_setKeyboardType_, 124);
  result = objc_msgSend(v1, sel_view);
  if (!result)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  v18 = result;
  objc_msgSend(result, sel_addSubview_, v17);

  *(_QWORD *)(swift_allocObject() + 16) = v1;
  type metadata accessor for EmojiCollectionViewCell();
  v19 = v1;
  v20 = v35;
  sub_1DD2F9F64();
  result = objc_msgSend(v19, sel_collectionView);
  if (!result)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  v22 = v33;
  v21 = v34;
  (*(void (**)(char *, char *, uint64_t))(v33 + 16))(v8, v20, v34);
  v23 = (*(unsigned __int8 *)(v22 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80);
  v24 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v22 + 32))(v24 + v23, v8, v21);
  v25 = objc_allocWithZone((Class)__swift_instantiateConcreteTypeFromMangledName(&qword_1F03D12E0));
  v26 = sub_1DD2F9D18();
  v27 = OBJC_IVAR____TtC11EmojiPoster29EmojiCollectionViewController_diffableDataSource;
  v28 = *(void **)&v19[OBJC_IVAR____TtC11EmojiPoster29EmojiCollectionViewController_diffableDataSource];
  *(_QWORD *)&v19[OBJC_IVAR____TtC11EmojiPoster29EmojiCollectionViewController_diffableDataSource] = v26;

  result = objc_msgSend(v19, sel_collectionView);
  if (!result)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  v29 = result;
  objc_msgSend(result, sel_setDataSource_, *(_QWORD *)&v19[v27]);

  sub_1DD2F9D0C();
  sub_1DD2F9D00();
  v36 = 0;
  v37 = 0;
  sub_1DD2F9CF4();
  v36 = 1;
  v37 = 0;
  sub_1DD2F9CF4();
  v36 = 2;
  v37 = 0;
  sub_1DD2F9CF4();
  v36 = 3;
  v37 = 0;
  sub_1DD2F9CF4();
  v36 = 4;
  v37 = 0;
  sub_1DD2F9CF4();
  v36 = 5;
  v37 = 0;
  result = (id)sub_1DD2F9CF4();
  v30 = *(void **)&v19[v27];
  if (v30)
  {
    v31 = v30;
    sub_1DD2F9D24();

    (*(void (**)(char *, uint64_t))(v32 + 8))(v4, v2);
    return (id)(*(uint64_t (**)(char *, uint64_t))(v22 + 8))(v35, v21);
  }
LABEL_13:
  __break(1u);
  return result;
}

void sub_1DD2DC960(uint64_t a1, uint64_t a2, uint64_t a3, char *a4)
{
  char *v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  void *v11;
  id v12;
  void *v13;
  id v14;
  double v15;
  id v16;

  v5 = &a4[OBJC_IVAR____TtC11EmojiPoster29EmojiCollectionViewController_configuration];
  v6 = *(_QWORD *)&a4[OBJC_IVAR____TtC11EmojiPoster29EmojiCollectionViewController_configuration + 112];
  v7 = *(void **)(a1 + OBJC_IVAR____TtC11EmojiPoster23EmojiCollectionViewCell_emojiView);
  if (*(_QWORD *)(v6 + 16))
  {
    swift_bridgeObjectRetain();
    v8 = sub_1DD2F9CA0();
    v9 = *(_QWORD *)(*((_QWORD *)v5 + 14) + 16);
    if (v9)
    {
      v10 = v8 % v9;
      if ((v10 & 0x8000000000000000) == 0)
      {
        if (v10 < *(_QWORD *)(v6 + 16))
        {
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          v11 = (void *)sub_1DD2F9DB4();
          swift_bridgeObjectRelease();
          objc_msgSend(v7, sel_setText_, v11);

          goto LABEL_7;
        }
LABEL_11:
        __break(1u);
        goto LABEL_12;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_11;
  }
  objc_msgSend(*(id *)(a1 + OBJC_IVAR____TtC11EmojiPoster23EmojiCollectionViewCell_emojiView), sel_setText_, 0);
LABEL_7:
  v12 = objc_msgSend(a4, sel_collectionView);
  if (v12)
  {
    v13 = v12;
    v14 = objc_msgSend(v12, sel_numberOfItemsInSection_, sub_1DD2F9CAC());

    v15 = 167.0 / (double)(uint64_t)v14 * ((double)sub_1DD2F9CA0() + 1.0);
    v16 = objc_msgSend((id)objc_opt_self(), sel_systemFontOfSize_, v15);
    objc_msgSend(v7, sel_setFont_, v16);

    return;
  }
LABEL_12:
  __break(1u);
}

uint64_t sub_1DD2DCB0C()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_1DD2DCB30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  sub_1DD2DC960(a1, a2, a3, *(char **)(v3 + 16));
}

uint64_t type metadata accessor for EmojiCollectionViewCell()
{
  return objc_opt_self();
}

uint64_t sub_1DD2DCB58()
{
  sub_1DD2F9CA0();
  type metadata accessor for EmojiCollectionViewCell();
  return sub_1DD2F9F70();
}

uint64_t sub_1DD2DCBBC()
{
  uint64_t v0;
  uint64_t v1;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F03D12D8);
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

uint64_t sub_1DD2DCC20()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F03D12D8);
  return sub_1DD2DCB58();
}

void sub_1DD2DCCAC()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  id v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(char *, uint64_t);
  uint64_t v20;
  void *v21;
  id v22;
  id v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  _QWORD aBlock[6];

  v1 = v0;
  v2 = sub_1DD2F9D30();
  v29 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1DD2F9D48();
  v27 = *(_QWORD *)(v5 - 8);
  v28 = v5;
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1DD2F9D60();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v25 - v13;
  v15 = objc_msgSend(v1, sel_collectionView);
  if (v15)
  {
    v16 = v15;
    v30 = objc_msgSend(v15, sel_collectionViewLayout);

    type metadata accessor for EmojiSpiralLayout();
    v17 = swift_dynamicCastClass();
    if (v17 && *((_BYTE *)v1 + OBJC_IVAR____TtC11EmojiPoster29EmojiCollectionViewController_isSpinning) == 1)
    {
      v18 = v17;
      sub_1DD2F9D54();
      MEMORY[0x1DF0D7308](v12, 0.001);
      v19 = *(void (**)(char *, uint64_t))(v9 + 8);
      v19(v12, v8);
      sub_1DD2CDA0C(0, (unint64_t *)&unk_1F03D13C0);
      v26 = sub_1DD2F9F88();
      v20 = swift_allocObject();
      *(_QWORD *)(v20 + 16) = v18;
      *(_QWORD *)(v20 + 24) = v1;
      aBlock[4] = sub_1DD2DE978;
      aBlock[5] = v20;
      aBlock[0] = MEMORY[0x1E0C809B0];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_1DD2EC198;
      aBlock[3] = &block_descriptor_13;
      v21 = _Block_copy(aBlock);
      v22 = v30;
      v23 = v1;
      swift_release();
      sub_1DD2F9D3C();
      aBlock[0] = MEMORY[0x1E0DEE9D8];
      sub_1DD2DE9DC();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1F03D13D0);
      sub_1DD2DEA24();
      sub_1DD2F9FF4();
      v24 = (void *)v26;
      MEMORY[0x1DF0D7518](v14, v7, v4, v21);
      _Block_release(v21);

      (*(void (**)(char *, uint64_t))(v29 + 8))(v4, v2);
      (*(void (**)(char *, uint64_t))(v27 + 8))(v7, v28);
      v19(v14, v8);
    }
    else
    {

    }
  }
  else
  {
    __break(1u);
  }
}

id sub_1DD2DCFBC()
{
  uint64_t v0;
  void *v1;
  unsigned int v2;
  char **v3;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC11EmojiPoster29EmojiCollectionViewController_hiddenEmojiField);
  v2 = objc_msgSend(v1, sel_isFirstResponder);
  v3 = &selRef_resignFirstResponder;
  if (!v2)
    v3 = &selRef_becomeFirstResponder;
  return objc_msgSend(v1, *v3);
}

void sub_1DD2DD010()
{
  uint64_t v0;

  if (*(_BYTE *)(v0 + OBJC_IVAR____TtC11EmojiPoster29EmojiCollectionViewController_isSpinning) == 1)
  {
    *(_BYTE *)(v0 + OBJC_IVAR____TtC11EmojiPoster29EmojiCollectionViewController_isSpinning) = 0;
  }
  else
  {
    *(_BYTE *)(v0 + OBJC_IVAR____TtC11EmojiPoster29EmojiCollectionViewController_isSpinning) = 1;
    sub_1DD2DCCAC();
  }
}

id sub_1DD2DD038(void *a1, uint64_t a2, uint64_t a3)
{
  id v6;
  void *v7;
  id v8;
  void *v9;
  id v10;
  void *v11;
  id v12;
  id v13;
  void *v14;
  id v15;
  uint64_t v16;
  id v17;
  void *v18;
  uint64_t v19;
  unint64_t v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  unsigned int v35;
  uint64_t v36;
  uint64_t v37;
  unsigned int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  _QWORD *v44;
  int v45;
  int v46;
  int v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  id result;
  void *v58;
  void *v59;
  char v60;
  char v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char v68;
  __int128 *v69;
  _BYTE *v70;
  char v71;
  char v72;
  _OWORD v73[6];
  _OWORD v74[2];
  __int128 aBlock;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  _OWORD v81[2];

  v6 = objc_msgSend(a1, sel_text);
  if (v6)
  {
    v7 = v6;
    sub_1DD2F9DE4();

  }
  v8 = objc_allocWithZone(MEMORY[0x1E0CB3940]);
  v9 = (void *)sub_1DD2F9DB4();
  swift_bridgeObjectRelease();
  v10 = objc_msgSend(v8, sel_initWithString_, v9);

  v11 = (void *)sub_1DD2F9DB4();
  v59 = v10;
  v12 = objc_msgSend(v10, sel_stringByReplacingCharactersInRange_withString_, a2, a3, v11);

  sub_1DD2F9DE4();
  sub_1DD2F9EA4();
  v13 = objc_allocWithZone(MEMORY[0x1E0CB3940]);
  v14 = (void *)sub_1DD2F9DB4();
  v15 = objc_msgSend(v13, sel_initWithString_, v14);

  v16 = swift_allocObject();
  *(_QWORD *)(v16 + 16) = 0;
  *(_QWORD *)(v16 + 24) = 0xE000000000000000;
  v17 = v15;
  objc_msgSend(v17, sel_length);
  *(_QWORD *)&v77 = sub_1DD2DD938;
  *((_QWORD *)&v77 + 1) = v16;
  *(_QWORD *)&aBlock = MEMORY[0x1E0C809B0];
  *((_QWORD *)&aBlock + 1) = 1107296256;
  *(_QWORD *)&v76 = sub_1DD2DD940;
  *((_QWORD *)&v76 + 1) = &block_descriptor_6;
  v18 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  CEMEnumerateEmojiTokensInStringWithBlock();

  _Block_release(v18);
  swift_beginAccess();
  v19 = *(_QWORD *)(v16 + 16);
  v20 = *(_QWORD *)(v16 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_release();
  v21 = (void *)sub_1DD2F9DB4();
  objc_msgSend(a1, sel_setText_, v21);

  v68 = v70[OBJC_IVAR____TtC11EmojiPoster29EmojiCollectionViewController_configuration + 16];
  v22 = *(_QWORD *)&v70[OBJC_IVAR____TtC11EmojiPoster29EmojiCollectionViewController_configuration + 24];
  v23 = *(_QWORD *)&v70[OBJC_IVAR____TtC11EmojiPoster29EmojiCollectionViewController_configuration + 32];
  v24 = *(_QWORD *)&v70[OBJC_IVAR____TtC11EmojiPoster29EmojiCollectionViewController_configuration + 40];
  v25 = *(_QWORD *)&v70[OBJC_IVAR____TtC11EmojiPoster29EmojiCollectionViewController_configuration + 48];
  v26 = *(_QWORD *)&v70[OBJC_IVAR____TtC11EmojiPoster29EmojiCollectionViewController_configuration + 56];
  v27 = *(_QWORD *)&v70[OBJC_IVAR____TtC11EmojiPoster29EmojiCollectionViewController_configuration + 64];
  v28 = *(_QWORD *)&v70[OBJC_IVAR____TtC11EmojiPoster29EmojiCollectionViewController_configuration + 72];
  v29 = *(_QWORD *)&v70[OBJC_IVAR____TtC11EmojiPoster29EmojiCollectionViewController_configuration + 80];
  v30 = *(_QWORD *)&v70[OBJC_IVAR____TtC11EmojiPoster29EmojiCollectionViewController_configuration + 88];
  v69 = (__int128 *)&v70[OBJC_IVAR____TtC11EmojiPoster29EmojiCollectionViewController_configuration];
  v60 = v70[OBJC_IVAR____TtC11EmojiPoster29EmojiCollectionViewController_configuration + 105];
  v61 = v70[OBJC_IVAR____TtC11EmojiPoster29EmojiCollectionViewController_configuration + 104];
  if ((v20 & 0x2000000000000000) != 0)
    v31 = HIBYTE(v20) & 0xF;
  else
    v31 = v19 & 0xFFFFFFFFFFFFLL;
  v66 = *(_QWORD *)&v70[OBJC_IVAR____TtC11EmojiPoster29EmojiCollectionViewController_configuration + 64];
  v67 = *(_QWORD *)&v70[OBJC_IVAR____TtC11EmojiPoster29EmojiCollectionViewController_configuration + 56];
  v64 = *(_QWORD *)&v70[OBJC_IVAR____TtC11EmojiPoster29EmojiCollectionViewController_configuration + 80];
  v65 = *(_QWORD *)&v70[OBJC_IVAR____TtC11EmojiPoster29EmojiCollectionViewController_configuration + 72];
  v62 = *(_QWORD *)&v70[OBJC_IVAR____TtC11EmojiPoster29EmojiCollectionViewController_configuration + 96];
  v63 = *(_QWORD *)&v70[OBJC_IVAR____TtC11EmojiPoster29EmojiCollectionViewController_configuration + 88];
  if (v31)
  {
    v32 = v19;
    sub_1DD2BF7A4(v26, v27, v28, v29, v30);
    v33 = 0;
    v34 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    do
    {
      if ((v20 & 0x1000000000000000) != 0)
      {
        v35 = sub_1DD2FA018();
      }
      else
      {
        if ((v20 & 0x2000000000000000) != 0)
        {
          *(_QWORD *)&aBlock = v32;
          *((_QWORD *)&aBlock + 1) = v20 & 0xFFFFFFFFFFFFFFLL;
        }
        else if ((v32 & 0x1000000000000000) == 0)
        {
          sub_1DD2FA078();
        }
        v35 = sub_1DD2FA084();
      }
      v37 = v36;
      if (v35 > 0x7F)
      {
        v45 = (v35 & 0x3F) << 8;
        if (v35 >= 0x800)
        {
          v46 = (v45 | (v35 >> 6) & 0x3F) << 8;
          v47 = (((v46 | (v35 >> 12) & 0x3F) << 8) | (v35 >> 18)) - 2122219023;
          v38 = (v46 | (v35 >> 12)) + 8487393;
          if (HIWORD(v35))
            v38 = v47;
        }
        else
        {
          v38 = (v45 | (v35 >> 6)) + 33217;
        }
      }
      else
      {
        v38 = v35 + 1;
      }
      *(_QWORD *)&aBlock = (v38 + 0xFEFEFEFEFEFEFFLL) & ~(-1 << (8 * (4 - (__clz(v38) >> 3))));
      v39 = MEMORY[0x1DF0D73D4](&aBlock);
      v41 = v40;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v34 = sub_1DD2DDAC4(0, v34[2] + 1, 1, v34);
      v43 = v34[2];
      v42 = v34[3];
      if (v43 >= v42 >> 1)
        v34 = sub_1DD2DDAC4((_QWORD *)(v42 > 1), v43 + 1, 1, v34);
      v33 += v37;
      v34[2] = v43 + 1;
      v44 = &v34[2 * v43];
      v44[4] = v39;
      v44[5] = v41;
    }
    while (v33 < v31);
  }
  else
  {
    sub_1DD2BF7A4(v26, v27, v28, v29, v30);
    v34 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  swift_bridgeObjectRelease();
  LOBYTE(aBlock) = v68;
  *((_QWORD *)&aBlock + 1) = v22;
  *(_QWORD *)&v76 = v23;
  *((_QWORD *)&v76 + 1) = v24;
  *(_QWORD *)&v77 = v25;
  *((_QWORD *)&v77 + 1) = v67;
  *(_QWORD *)&v78 = v66;
  *((_QWORD *)&v78 + 1) = v65;
  *(_QWORD *)&v79 = v64;
  *((_QWORD *)&v79 + 1) = v63;
  *(_QWORD *)&v80 = v62;
  BYTE8(v80) = v61;
  BYTE9(v80) = v60;
  v72 = 2;
  v71 = 1;
  swift_bridgeObjectRetain();
  EmojiPosterConfiguration.init(identifier:backgroundConfiguration:layoutStyle:sizeVariant:emoji:usesParalax:)(0, 0, (char *)&aBlock, &v72, &v71, (unint64_t)v34, 0, (uint64_t)v73);
  v48 = v69[5];
  v79 = v69[4];
  v80 = v48;
  v81[0] = v69[6];
  *(_OWORD *)((char *)v81 + 9) = *(__int128 *)((char *)v69 + 105);
  v49 = v69[1];
  aBlock = *v69;
  v76 = v49;
  v50 = v69[3];
  v77 = v69[2];
  v78 = v50;
  v51 = v73[0];
  v52 = v73[1];
  v53 = v73[3];
  v69[2] = v73[2];
  v69[3] = v53;
  *v69 = v51;
  v69[1] = v52;
  v54 = v73[4];
  v55 = v73[5];
  v56 = v74[0];
  *(__int128 *)((char *)v69 + 105) = *(_OWORD *)((char *)v74 + 9);
  v69[5] = v55;
  v69[6] = v56;
  v69[4] = v54;
  sub_1DD2BFA98(&aBlock);
  result = objc_msgSend(v70, sel_collectionView);
  if (result)
  {
    v58 = result;
    swift_bridgeObjectRelease();
    objc_msgSend(v58, sel_reloadData);

    return 0;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1DD2DD63C()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1DD2DD6E8()
{
  uint64_t v0;

  objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC11EmojiPoster29EmojiCollectionViewController_hiddenEmojiField), sel_resignFirstResponder);
  return 0;
}

id EmojiCollectionViewController.__allocating_init(collectionViewLayout:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCollectionViewLayout_, a1);

  return v3;
}

void EmojiCollectionViewController.init(collectionViewLayout:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id EmojiCollectionViewController.__allocating_init(nibName:bundle:)(uint64_t a1, uint64_t a2, void *a3)
{
  objc_class *v3;
  objc_class *v4;
  void *v6;
  id v7;

  v4 = v3;
  if (a2)
  {
    v6 = (void *)sub_1DD2F9DB4();
    swift_bridgeObjectRelease();
  }
  else
  {
    v6 = 0;
  }
  v7 = objc_msgSend(objc_allocWithZone(v4), sel_initWithNibName_bundle_, v6, a3);

  return v7;
}

void EmojiCollectionViewController.init(nibName:bundle:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id EmojiCollectionViewController.__deallocating_deinit()
{
  return sub_1DD2CF81C(type metadata accessor for EmojiCollectionViewController);
}

void *sub_1DD2DD938()
{
  return sub_1DD2F417C();
}

uint64_t sub_1DD2DD940(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void (*v9)(uint64_t, uint64_t, uint64_t, uint64_t);

  v9 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a1 + 32);
  swift_retain();
  v9(a2, a3, a4, a5);
  return swift_release();
}

uint64_t block_copy_helper_6(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_6()
{
  return swift_release();
}

_QWORD *sub_1DD2DD9B8(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EDB61F68);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 25;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 3);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v13 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[v8 + 4])
          memmove(v13, a4 + 4, 8 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1DD2DE2C8(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1DD2DDAC4(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EDB615E8);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 17;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v13 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4])
          memmove(v13, a4 + 4, 16 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1DD2DE3B0(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1DD2DDBD0(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDB61600);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 1;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 5);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v13 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 4])
          memmove(v13, a4 + 4, 32 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1DD2DE4A0(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1DD2DDCDC(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EDB615D8);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 17;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v13 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4])
          memmove(v13, a4 + 4, 16 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1DD2DE594(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1DD2DDDE8(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  _QWORD *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EDB615E0);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 48);
      v12 = v10 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[6 * v8 + 4])
          memmove(v12, a4 + 4, 48 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v12 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_1DD2DE67C(0, v8, (char *)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1DD2DDF0C(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1F03D13A0);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 17;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v13 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4])
          memmove(v13, a4 + 4, 16 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1DD2DE594(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1DD2DE018(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  _QWORD *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1F03D13B0);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 96);
      v12 = v10 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[12 * v8 + 4])
          memmove(v12, a4 + 4, 96 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v12 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_1DD2DE858(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1DD2DE138(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EDB61AE8);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 + 95;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 7);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v13 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[16 * v8 + 4])
          memmove(v13, a4 + 4, v8 << 7);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1DD2DE768(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t method lookup function for EmojiCollectionViewController()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of EmojiCollectionViewController.__allocating_init(configuration:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 184))();
}

uint64_t dispatch thunk of EmojiCollectionViewController.toggleEditEmoji()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xD0))();
}

uint64_t dispatch thunk of EmojiCollectionViewController.toggleSpinning()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xD8))();
}

uint64_t dispatch thunk of EmojiCollectionViewController.textField(_:shouldChangeCharactersIn:replacementString:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xF0))();
}

uint64_t dispatch thunk of EmojiCollectionViewController.textFieldShouldReturn(_:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xF8))();
}

char *sub_1DD2DE2C8(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4;
  char *v5;
  size_t v6;
  char *v7;
  char *result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = (char *)(a4 + 8 * a1 + 32);
    v6 = 8 * v4;
    v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  result = (char *)sub_1DD2FA12C();
  __break(1u);
  return result;
}

uint64_t sub_1DD2DE3B0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 16 * a1 + 32;
    v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1DD2FA12C();
  __break(1u);
  return result;
}

uint64_t sub_1DD2DE4A0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 32 * a1 + 32;
    v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1DD2FA12C();
  __break(1u);
  return result;
}

char *sub_1DD2DE594(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4;
  char *v5;
  size_t v6;
  char *v7;
  char *result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = (char *)(a4 + 16 * a1 + 32);
    v6 = 16 * v4;
    v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  result = (char *)sub_1DD2FA12C();
  __break(1u);
  return result;
}

char *sub_1DD2DE67C(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4;
  char *v5;
  size_t v6;
  char *v7;
  char *result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = (char *)(a4 + 48 * a1 + 32);
    v6 = 48 * v4;
    v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  result = (char *)sub_1DD2FA12C();
  __break(1u);
  return result;
}

uint64_t sub_1DD2DE768(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + (a1 << 7) + 32;
    v6 = a3 + (v4 << 7);
    if (v5 >= v6 || v5 + (v4 << 7) <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1DD2FA12C();
  __break(1u);
  return result;
}

uint64_t sub_1DD2DE858(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 96 * a1 + 32;
    v6 = a3 + 96 * v4;
    if (v5 >= v6 || v5 + 96 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1DD2FA12C();
  __break(1u);
  return result;
}

uint64_t sub_1DD2DE94C()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_1DD2DE978()
{
  uint64_t v0;
  char *v1;
  double v2;
  double v3;
  BOOL v4;
  double v5;

  v1 = *(char **)(v0 + 16);
  v2 = *(double *)&v1[OBJC_IVAR____TtC11EmojiPoster17EmojiSpiralLayout_startingAngle];
  v3 = v2 + 0.1;
  v4 = v2 < 359.0;
  v5 = 0.0;
  if (v4)
    v5 = v3;
  *(double *)&v1[OBJC_IVAR____TtC11EmojiPoster17EmojiSpiralLayout_startingAngle] = v5;
  return sub_1DD2DCCAC(objc_msgSend(v1, sel_invalidateLayout));
}

unint64_t sub_1DD2DE9DC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1F03D1560;
  if (!qword_1F03D1560)
  {
    v1 = sub_1DD2F9D30();
    result = MEMORY[0x1DF0D8040](MEMORY[0x1E0DEF510], v1);
    atomic_store(result, (unint64_t *)&qword_1F03D1560);
  }
  return result;
}

unint64_t sub_1DD2DEA24()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1F03D1570;
  if (!qword_1F03D1570)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1F03D13D0);
    result = MEMORY[0x1DF0D8040](MEMORY[0x1E0DEAF38], v1);
    atomic_store(result, (unint64_t *)&qword_1F03D1570);
  }
  return result;
}

unint64_t sub_1DD2DEA78(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t result;
  char v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDB61540);
  v2 = sub_1DD2FA120();
  v3 = (_QWORD *)v2;
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  v5 = v2 + 64;
  v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_1DD2E33E0(v6, (uint64_t)&v13);
    v7 = v13;
    result = sub_1DD2E2244(v13);
    if ((v9 & 1) != 0)
      break;
    *(_QWORD *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(_QWORD *)(v3[6] + 8 * result) = v7;
    result = (unint64_t)sub_1DD2E3428(&v14, (_OWORD *)(v3[7] + 32 * result));
    v10 = v3[2];
    v11 = __OFADD__(v10, 1);
    v12 = v10 + 1;
    if (v11)
      goto LABEL_11;
    v3[2] = v12;
    v6 += 40;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1DD2DEB90(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  void **v4;
  void *v5;
  id v6;
  id v7;
  unint64_t result;
  char v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDB61F50);
  v2 = (_QWORD *)sub_1DD2FA120();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (void **)(a1 + 40);
  while (1)
  {
    v5 = *v4;
    v6 = *(v4 - 1);
    v7 = v5;
    result = sub_1DD2E2244((uint64_t)v6);
    if ((v9 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v10 = 8 * result;
    *(_QWORD *)(v2[6] + v10) = v6;
    *(_QWORD *)(v2[7] + v10) = v7;
    v11 = v2[2];
    v12 = __OFADD__(v11, 1);
    v13 = v11 + 1;
    if (v12)
      goto LABEL_11;
    v2[2] = v13;
    v4 += 2;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1DD2DEC98(uint64_t a1)
{
  return sub_1DD2DECA4(a1, &qword_1F03D13F0);
}

unint64_t sub_1DD2DECA4(uint64_t a1, uint64_t *a2)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t result;
  char v10;
  uint64_t *v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(a2);
  v3 = (_QWORD *)sub_1DD2FA120();
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  swift_retain();
  v5 = (uint64_t *)(a1 + 48);
  while (1)
  {
    v6 = *(v5 - 2);
    v7 = *(v5 - 1);
    v8 = *v5;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    result = sub_1DD2E21E0(v6, v7);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v11 = (uint64_t *)(v3[6] + 16 * result);
    *v11 = v6;
    v11[1] = v7;
    *(_QWORD *)(v3[7] + 8 * result) = v8;
    v12 = v3[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_11;
    v3[2] = v14;
    v5 += 3;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_1DD2DEDB8()
{
  sub_1DD2FA288();
  sub_1DD2FA288();
  sub_1DD2FA288();
  return sub_1DD2FA288();
}

uint64_t sub_1DD2DEE30(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;
  char v9;
  char v10;
  char v11;
  char v12;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F03D13E8);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DD2E339C();
  sub_1DD2FA2C4();
  v12 = 0;
  sub_1DD2FA1E0();
  if (!v1)
  {
    v11 = 1;
    sub_1DD2FA1E0();
    v10 = 2;
    sub_1DD2FA1E0();
    v9 = 3;
    sub_1DD2FA1E0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_1DD2DEFAC(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;

  v15 = a3;
  v16 = a5;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F03D1420);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v14 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DD2E3C78();
  sub_1DD2FA2C4();
  v18 = a2;
  v17 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDB61ED8);
  sub_1DD2E3D40(&qword_1F03D1428, &qword_1EDB61A28, MEMORY[0x1E0DEB080], MEMORY[0x1E0DEAF10]);
  sub_1DD2FA1F8();
  if (!v5)
  {
    v18 = v15;
    v17 = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EDB61D40);
    sub_1DD2E3DC8();
    sub_1DD2FA1F8();
    v18 = a4;
    v17 = 2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EDB61EC0);
    sub_1DD2E3ED4(&qword_1F03D1448, MEMORY[0x1E0DEA970], MEMORY[0x1E0DEB420], MEMORY[0x1E0DEA0B8]);
    sub_1DD2FA1F8();
    LOBYTE(v18) = 3;
    sub_1DD2FA1EC();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
}

uint64_t sub_1DD2DF1C4()
{
  char *v0;

  return qword_1DD2FEF40[*v0];
}

uint64_t sub_1DD2DF1DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1DD2E309C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DD2DF200()
{
  sub_1DD2E339C();
  return sub_1DD2FA2DC();
}

uint64_t sub_1DD2DF228()
{
  sub_1DD2E339C();
  return sub_1DD2FA2E8();
}

void sub_1DD2DF250(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  double v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = sub_1DD2E31E8(a1);
  if (!v2)
  {
    *(double *)a2 = v4;
    *(_QWORD *)(a2 + 8) = v5;
    *(_QWORD *)(a2 + 16) = v6;
    *(_QWORD *)(a2 + 24) = v7;
  }
}

uint64_t sub_1DD2DF27C(_QWORD *a1)
{
  return sub_1DD2DEE30(a1);
}

uint64_t sub_1DD2DF298()
{
  sub_1DD2FA270();
  sub_1DD2DEDB8();
  return sub_1DD2FA294();
}

uint64_t sub_1DD2DF2FC()
{
  return sub_1DD2DEDB8();
}

uint64_t sub_1DD2DF308()
{
  sub_1DD2FA270();
  sub_1DD2DEDB8();
  return sub_1DD2FA294();
}

uint64_t sub_1DD2DF368()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1DD2DF394 + 4 * byte_1DD2FEBD0[*v0]))(0x73726F6C6F63, 0xE600000000000000);
}

uint64_t sub_1DD2DF394()
{
  return 0x6C6F63696A6F6D65;
}

uint64_t sub_1DD2DF3B4()
{
  return 0x70616D7865646E69;
}

uint64_t sub_1DD2DF3CC()
{
  return 0x6E6F6973726576;
}

uint64_t sub_1DD2DF3E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1DD2E3794(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DD2DF408()
{
  sub_1DD2E3C78();
  return sub_1DD2FA2DC();
}

uint64_t sub_1DD2DF430()
{
  sub_1DD2E3C78();
  return sub_1DD2FA2E8();
}

uint64_t sub_1DD2DF458@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  result = sub_1DD2E395C(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
    a2[2] = v6;
    a2[3] = v7;
  }
  return result;
}

uint64_t sub_1DD2DF484(_QWORD *a1)
{
  uint64_t *v1;

  return sub_1DD2DEFAC(a1, *v1, v1[1], v1[2], v1[3]);
}

uint64_t sub_1DD2DF4A0(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  CFDataRef v10;
  CFDataRef v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  uint64_t result;
  uint64_t v19;
  int64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  int64_t v34;
  unint64_t v35;
  unint64_t i;
  int64_t v37;
  unint64_t v38;
  int64_t v39;
  unint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v48;
  char v49;
  uint64_t v50;
  char v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  const __CTFont *font;
  uint64_t v57;
  int64_t v58;
  uint64_t *v59;
  uint64_t *v60;
  uint64_t *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;

  sub_1DD2F9CDC();
  v3 = OBJC_IVAR____TtC11EmojiPoster15EmojiBackground_glyphNamesCache;
  v4 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v1 + v3) = sub_1DD2DECA4(MEMORY[0x1E0DEE9D8], &qword_1F03D1400);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC11EmojiPoster15EmojiBackground_colors) = v4;
  v5 = OBJC_IVAR____TtC11EmojiPoster15EmojiBackground_dominantColors;
  *(_QWORD *)(v1 + v5) = sub_1DD2DECA4(v4, &qword_1EDB61F40);
  v6 = OBJC_IVAR____TtC11EmojiPoster15EmojiBackground_accentColors;
  *(_QWORD *)(v1 + v6) = sub_1DD2DECA4(v4, &qword_1EDB61F40);
  v7 = OBJC_IVAR____TtC11EmojiPoster15EmojiBackground_contextualColors;
  *(_QWORD *)(v1 + v7) = sub_1DD2DECA4(v4, &qword_1EDB61F40);
  v8 = v1;
  *(_QWORD *)(v1 + OBJC_IVAR____TtC11EmojiPoster15EmojiBackground_ctFont) = a1;
  font = a1;
  *(_QWORD *)(v1 + OBJC_IVAR____TtC11EmojiPoster15EmojiBackground_cgFont) = CTFontCopyGraphicsFont(font, 0);
  v9 = sub_1DD2E2BC4(1818453858, 0xE400000000000000);
  if ((v9 & 0x100000000) != 0 || (v10 = CTFontCopyTable(font, v9, 0)) == 0)
  {
    v15 = sub_1DD2F9CD0();
    v16 = sub_1DD2F9F4C();
    if (os_log_type_enabled(v15, v16))
    {
      v17 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v17 = 0;
      _os_log_impl(&dword_1DD2AD000, v15, v16, "No background table data in font", v17, 2u);
      MEMORY[0x1DF0D80DC](v17, -1, -1);
    }

    return v8;
  }
  else
  {
    v11 = v10;
    v12 = sub_1DD2F9C70();
    v14 = v13;

    sub_1DD2F9BEC();
    swift_allocObject();
    sub_1DD2F9BE0();
    sub_1DD2E3438();
    v54 = v12;
    v55 = v14;
    sub_1DD2F9BD4();
    swift_release();
    v19 = v68;
    v20 = *(_QWORD *)(v65 + 16);
    v21 = MEMORY[0x1E0DEE9D8];
    v52 = v8;
    v53 = v65;
    if (!v20)
    {
LABEL_17:
      *(_QWORD *)(v8 + OBJC_IVAR____TtC11EmojiPoster15EmojiBackground_colors) = v21;
      swift_bridgeObjectRelease();
      v57 = v19 + 64;
      v31 = 1 << *(_BYTE *)(v19 + 32);
      v32 = -1;
      if (v31 < 64)
        v32 = ~(-1 << v31);
      v33 = v32 & *(_QWORD *)(v19 + 64);
      v61 = (uint64_t *)(v8 + OBJC_IVAR____TtC11EmojiPoster15EmojiBackground_dominantColors);
      v60 = (uint64_t *)(v8 + OBJC_IVAR____TtC11EmojiPoster15EmojiBackground_accentColors);
      v59 = (uint64_t *)(v8 + OBJC_IVAR____TtC11EmojiPoster15EmojiBackground_contextualColors);
      v58 = (unint64_t)(v31 + 63) >> 6;
      result = swift_bridgeObjectRetain();
      v34 = 0;
      if (!v33)
        goto LABEL_21;
LABEL_20:
      v35 = __clz(__rbit64(v33));
      v33 &= v33 - 1;
      for (i = v35 | (v34 << 6); ; i = __clz(__rbit64(v38)) + (v34 << 6))
      {
        v40 = *(_QWORD *)(*(_QWORD *)(v19 + 56) + 8 * i);
        if ((v40 & 0x8000000000000000) != 0)
        {
          __break(1u);
LABEL_44:
          __break(1u);
LABEL_45:
          __break(1u);
LABEL_46:
          __break(1u);
LABEL_47:
          __break(1u);
          goto LABEL_48;
        }
        if (v40 >= *(_QWORD *)(v67 + 16))
          goto LABEL_44;
        v41 = *(_QWORD **)(v67 + 32 + 8 * v40);
        if (!v41[2])
          goto LABEL_45;
        v42 = v19;
        v43 = (uint64_t *)(*(_QWORD *)(v19 + 48) + 16 * i);
        v44 = *v43;
        v45 = v43[1];
        v46 = v41[4];
        swift_beginAccess();
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v62 = *v61;
        *v61 = 0x8000000000000000;
        sub_1DD2E25E4(v46, v44, v45, isUniquelyReferenced_nonNull_native);
        *v61 = v62;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        result = swift_endAccess();
        if (v41[2] < 2uLL)
          goto LABEL_46;
        v48 = v41[5];
        swift_beginAccess();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v49 = swift_isUniquelyReferenced_nonNull_native();
        v63 = *v60;
        *v60 = 0x8000000000000000;
        sub_1DD2E25E4(v48, v44, v45, v49);
        *v60 = v63;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        result = swift_endAccess();
        if (v41[2] < 3uLL)
          goto LABEL_47;
        v50 = v41[6];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        swift_beginAccess();
        v51 = swift_isUniquelyReferenced_nonNull_native();
        v64 = *v59;
        *v59 = 0x8000000000000000;
        sub_1DD2E25E4(v50, v44, v45, v51);
        *v59 = v64;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        result = swift_endAccess();
        v19 = v42;
        if (v33)
          goto LABEL_20;
LABEL_21:
        v37 = v34 + 1;
        if (__OFADD__(v34, 1))
          goto LABEL_51;
        if (v37 >= v58)
        {
LABEL_42:
          sub_1DD2E347C(v54, v55);
          swift_bridgeObjectRelease();

          swift_bridgeObjectRelease();
          swift_release();
          swift_bridgeObjectRelease();
          return v52;
        }
        v38 = *(_QWORD *)(v57 + 8 * v37);
        ++v34;
        if (!v38)
        {
          v34 = v37 + 1;
          if (v37 + 1 >= v58)
            goto LABEL_42;
          v38 = *(_QWORD *)(v57 + 8 * v34);
          if (!v38)
          {
            v34 = v37 + 2;
            if (v37 + 2 >= v58)
              goto LABEL_42;
            v38 = *(_QWORD *)(v57 + 8 * v34);
            if (!v38)
            {
              v39 = v37 + 3;
              if (v39 >= v58)
                goto LABEL_42;
              v38 = *(_QWORD *)(v57 + 8 * v39);
              if (!v38)
              {
                while (1)
                {
                  v34 = v39 + 1;
                  if (__OFADD__(v39, 1))
                    goto LABEL_52;
                  if (v34 >= v58)
                    goto LABEL_42;
                  v38 = *(_QWORD *)(v57 + 8 * v34);
                  ++v39;
                  if (v38)
                    goto LABEL_34;
                }
              }
              v34 = v39;
            }
          }
        }
LABEL_34:
        v33 = (v38 - 1) & v38;
      }
    }
    v66 = MEMORY[0x1E0DEE9D8];
    swift_bridgeObjectRetain();
    sub_1DD2E2740(0, v20, 0);
    result = v53;
    v22 = 0;
    v21 = v66;
    while (1)
    {
      v23 = *(_QWORD **)(result + 8 * v22 + 32);
      v24 = v23[2];
      if (!v24)
        break;
      if (v24 == 1)
        goto LABEL_49;
      if (v24 < 3)
        goto LABEL_50;
      v25 = v23[4];
      v26 = v23[5];
      v27 = v23[6];
      v29 = *(_QWORD *)(v66 + 16);
      v28 = *(_QWORD *)(v66 + 24);
      if (v29 >= v28 >> 1)
      {
        sub_1DD2E2740(v28 > 1, v29 + 1, 1);
        result = v53;
      }
      ++v22;
      *(_QWORD *)(v66 + 16) = v29 + 1;
      v30 = (_QWORD *)(v66 + 32 * v29);
      v30[4] = v25;
      v30[5] = v26;
      v30[6] = v27;
      v30[7] = 0x406FE00000000000;
      if (v20 == v22)
      {
        swift_bridgeObjectRelease();
        v19 = v68;
        goto LABEL_17;
      }
    }
LABEL_48:
    __break(1u);
LABEL_49:
    __break(1u);
LABEL_50:
    __break(1u);
LABEL_51:
    __break(1u);
LABEL_52:
    __break(1u);
  }
  return result;
}

uint64_t sub_1DD2DFC18()
{
  uint64_t v0;
  uint64_t inited;
  void *v2;
  void *v3;
  uint64_t v4;
  id v5;
  id v6;
  id v7;
  void *v8;
  void *v9;
  const __CFAttributedString *v10;
  const __CTLine *v11;
  uint64_t result;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDB615F0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1DD2FDFC0;
  v2 = (void *)*MEMORY[0x1E0DC1138];
  *(_QWORD *)(inited + 32) = *MEMORY[0x1E0DC1138];
  v3 = *(void **)(v0 + OBJC_IVAR____TtC11EmojiPoster15EmojiBackground_ctFont);
  type metadata accessor for CTFont(0);
  *(_QWORD *)(inited + 64) = v4;
  *(_QWORD *)(inited + 40) = v3;
  v5 = v2;
  v6 = v3;
  sub_1DD2DEA78(inited);
  v7 = objc_allocWithZone(MEMORY[0x1E0CB3498]);
  swift_bridgeObjectRetain();
  v8 = (void *)sub_1DD2F9DB4();
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  sub_1DD2CB85C();
  v9 = (void *)sub_1DD2F9D78();
  swift_bridgeObjectRelease();
  v10 = (const __CFAttributedString *)objc_msgSend(v7, sel_initWithString_attributes_, v8, v9);

  v11 = CTLineCreateWithAttributedString(v10);
  CTLineGetGlyphRuns(v11);
  type metadata accessor for CTRun(0);
  result = sub_1DD2F9ED4();
  __break(1u);
  return result;
}

void sub_1DD2DFF5C(uint64_t a1, uint64_t a2, char a3)
{
  sub_1DD2DFC18();
  __asm { BR              X10 }
}

uint64_t sub_1DD2DFFBC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  double v7;
  unint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  double *v19;
  double v20;
  double v22[24];

  v2 = (uint64_t *)(v0 + OBJC_IVAR____TtC11EmojiPoster15EmojiBackground_dominantColors);
  swift_beginAccess();
  v3 = *v2;
  swift_bridgeObjectRetain();
  v4 = sub_1DD2E2D64(v1);
  v6 = v5;
  swift_bridgeObjectRelease();
  v7 = MEMORY[0x1E0DEE9D8];
  if (*(_QWORD *)(v3 + 16))
  {
    v8 = sub_1DD2E21E0(v4, v6);
    if ((v9 & 1) != 0)
    {
      v10 = *(_QWORD *)(*(_QWORD *)(v3 + 56) + 8 * v8);
      swift_bridgeObjectRetain();
    }
    else
    {
      v10 = MEMORY[0x1E0DEE9D8];
    }
  }
  else
  {
    v10 = MEMORY[0x1E0DEE9D8];
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v11 = *(_QWORD *)(v10 + 16);
  if (v11)
  {
    v12 = OBJC_IVAR____TtC11EmojiPoster15EmojiBackground_colors;
    v13 = (unint64_t *)(v10 + 32);
    do
    {
      v15 = *v13++;
      v14 = v15;
      if ((v15 & 0x8000000000000000) != 0)
      {
        __break(1u);
LABEL_18:
        __break(1u);
        JUMPOUT(0x1DD2E01DCLL);
      }
      v16 = *(_QWORD *)(v0 + v12);
      if (v14 >= *(_QWORD *)(v16 + 16))
        goto LABEL_18;
      sub_1DD2E0470(v22, *(double *)(v16 + 32 * v14 + 32), *(double *)(v16 + 32 * v14 + 40), *(double *)(v16 + 32 * v14 + 48), *(double *)(v16 + 32 * v14 + 56));
      --v11;
    }
    while (v11);
  }
  swift_bridgeObjectRelease();
  v17 = sub_1DD2F2058(*(uint64_t *)&v22[7]);
  swift_bridgeObjectRelease();
  v18 = *(_QWORD *)(v17 + 16);
  if (v18)
  {
    v22[0] = v7;
    sub_1DD2FA0A8();
    v19 = (double *)(v17 + 56);
    do
    {
      objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3658]), sel_initWithRed_green_blue_alpha_, *(v19 - 3) / 255.0, *(v19 - 2) / 255.0, *(v19 - 1) / 255.0, *v19 / 255.0);
      sub_1DD2FA090();
      sub_1DD2FA0B4();
      sub_1DD2FA0C0();
      sub_1DD2FA09C();
      v19 += 4;
      --v18;
    }
    while (v18);
    v20 = v22[0];
    swift_release();
  }
  else
  {
    swift_release();
    v20 = MEMORY[0x1E0DEE9D8];
  }
  return *(_QWORD *)&v20;
}

uint64_t sub_1DD2E01EC()
{
  __CFString *v0;
  CTFontRef v1;
  uint64_t v2;
  uint64_t result;

  v0 = (__CFString *)sub_1DD2F9DB4();
  v1 = CTFontCreateWithName(v0, 0.0, 0);

  type metadata accessor for EmojiBackground();
  v2 = swift_allocObject();
  result = sub_1DD2DF4A0(v1);
  qword_1EDB64C40 = v2;
  return result;
}

uint64_t sub_1DD2E026C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC11EmojiPoster15EmojiBackground_logger;
  v2 = sub_1DD2F9CE8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1DD2E0320()
{
  sub_1DD2E026C();
  return swift_deallocClassInstance();
}

uint64_t sub_1DD2E0344()
{
  return type metadata accessor for EmojiBackground();
}

uint64_t type metadata accessor for EmojiBackground()
{
  uint64_t result;

  result = qword_1EDB61D10;
  if (!qword_1EDB61D10)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1DD2E0388()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1DD2F9CE8();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for EmojiBackground.BackgroundColor()
{
  return &type metadata for EmojiBackground.BackgroundColor;
}

unint64_t sub_1DD2E042C()
{
  unint64_t result;

  result = qword_1EDB61E50;
  if (!qword_1EDB61E50)
  {
    result = MEMORY[0x1DF0D8040](&unk_1DD2FEC0C, &type metadata for EmojiBackground.BackgroundColor);
    atomic_store(result, (unint64_t *)&qword_1EDB61E50);
  }
  return result;
}

uint64_t sub_1DD2E0470(double *a1, double a2, double a3, double a4, double a5)
{
  uint64_t *v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  float64x2_t v12;
  float64x2_t v13;
  char isUniquelyReferenced_nonNull_native;
  double v15;
  double v16;
  double v17;
  double v18;
  uint64_t result;
  double *v20;
  uint64_t v25;

  v7 = *v5;
  sub_1DD2FA270();
  sub_1DD2DEDB8();
  v8 = sub_1DD2FA294();
  v9 = -1 << *(_BYTE *)(v7 + 32);
  v10 = v8 & ~v9;
  if (((*(_QWORD *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0)
  {
    v11 = ~v9;
    v12.f64[0] = a4;
    v12.f64[1] = a5;
    v13.f64[0] = a2;
    v13.f64[1] = a3;
    while ((vminv_u16((uint16x4_t)vcltz_s16(vshl_n_s16(vmovn_s32(vuzp1q_s32((int32x4_t)vceqq_f64(*(float64x2_t *)(*(_QWORD *)(v7 + 48) + 32 * v10), v13), (int32x4_t)vceqq_f64(*(float64x2_t *)(*(_QWORD *)(v7 + 48) + 32 * v10 + 16), v12))), 0xFuLL))) & 1) == 0)
    {
      v10 = (v10 + 1) & v11;
      if (((*(_QWORD *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) == 0)
        goto LABEL_5;
    }
    result = 0;
    v20 = (double *)(*(_QWORD *)(*v5 + 48) + 32 * v10);
    v16 = *v20;
    v15 = v20[1];
    v18 = v20[2];
    v17 = v20[3];
  }
  else
  {
LABEL_5:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v25 = *v5;
    *v5 = 0x8000000000000000;
    sub_1DD2E10D8(v10, isUniquelyReferenced_nonNull_native, a2, a3, a4, a5);
    *v5 = v25;
    swift_bridgeObjectRelease();
    v16 = a2;
    v15 = a3;
    v18 = a4;
    v17 = a5;
    result = 1;
  }
  *a1 = v16;
  a1[1] = v15;
  a1[2] = v18;
  a1[3] = v17;
  return result;
}

uint64_t sub_1DD2E05D0(uint64_t *a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v14;

  v3 = v2;
  v6 = *v2;
  v7 = sub_1DD2FA264();
  v8 = -1 << *(_BYTE *)(v6 + 32);
  v9 = v7 & ~v8;
  if (((*(_QWORD *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
  {
LABEL_7:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v14 = *v3;
    *v3 = 0x8000000000000000;
    sub_1DD2E1264(a2, v9, isUniquelyReferenced_nonNull_native);
    *v3 = v14;
    swift_bridgeObjectRelease();
    result = 1;
    goto LABEL_8;
  }
  v10 = *(_QWORD *)(v6 + 48);
  if (*(_QWORD *)(v10 + 8 * v9) != a2)
  {
    v11 = ~v8;
    do
    {
      v9 = (v9 + 1) & v11;
      if (((*(_QWORD *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
        goto LABEL_7;
    }
    while (*(_QWORD *)(v10 + 8 * v9) != a2);
  }
  result = 0;
LABEL_8:
  *a1 = a2;
  return result;
}

uint64_t sub_1DD2E06C8(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  BOOL v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v17;
  _QWORD *v18;
  BOOL v19;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v21;

  v7 = *v3;
  sub_1DD2FA270();
  swift_bridgeObjectRetain();
  sub_1DD2F9E44();
  v8 = sub_1DD2FA294();
  v9 = -1 << *(_BYTE *)(v7 + 32);
  v10 = v8 & ~v9;
  if (((*(_QWORD *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0)
  {
    v11 = *(_QWORD *)(v7 + 48);
    v12 = (_QWORD *)(v11 + 16 * v10);
    v13 = *v12 == a2 && v12[1] == a3;
    if (v13 || (sub_1DD2FA210() & 1) != 0)
    {
LABEL_7:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v14 = (uint64_t *)(*(_QWORD *)(*v3 + 48) + 16 * v10);
      v15 = v14[1];
      *a1 = *v14;
      a1[1] = v15;
      swift_bridgeObjectRetain();
      return 0;
    }
    v17 = ~v9;
    while (1)
    {
      v10 = (v10 + 1) & v17;
      if (((*(_QWORD *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) == 0)
        break;
      v18 = (_QWORD *)(v11 + 16 * v10);
      v19 = *v18 == a2 && v18[1] == a3;
      if (v19 || (sub_1DD2FA210() & 1) != 0)
        goto LABEL_7;
    }
  }
  swift_bridgeObjectRelease();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v21 = *v3;
  *v3 = 0x8000000000000000;
  swift_bridgeObjectRetain();
  sub_1DD2E1384(a2, a3, v10, isUniquelyReferenced_nonNull_native);
  *v3 = v21;
  swift_bridgeObjectRelease();
  *a1 = a2;
  a1[1] = a3;
  return 1;
}

uint64_t sub_1DD2E0874()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  int64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  unint64_t v12;
  _QWORD *v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  char v27;
  unint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDB61F28);
  result = sub_1DD2FA00C();
  v4 = result;
  if (*(_QWORD *)(v2 + 16))
  {
    v5 = 0;
    v6 = (_QWORD *)(v2 + 56);
    v7 = 1 << *(_BYTE *)(v2 + 32);
    if (v7 < 64)
      v8 = ~(-1 << v7);
    else
      v8 = -1;
    v9 = v8 & *(_QWORD *)(v2 + 56);
    v10 = (unint64_t)(v7 + 63) >> 6;
    v11 = result + 56;
    while (1)
    {
      if (v9)
      {
        v14 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
        v15 = v14 | (v5 << 6);
      }
      else
      {
        v16 = v5 + 1;
        if (__OFADD__(v5, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v10)
          goto LABEL_33;
        v17 = v6[v16];
        ++v5;
        if (!v17)
        {
          v5 = v16 + 1;
          if (v16 + 1 >= v10)
            goto LABEL_33;
          v17 = v6[v5];
          if (!v17)
          {
            v5 = v16 + 2;
            if (v16 + 2 >= v10)
              goto LABEL_33;
            v17 = v6[v5];
            if (!v17)
            {
              v18 = v16 + 3;
              if (v18 >= v10)
              {
LABEL_33:
                v31 = 1 << *(_BYTE *)(v2 + 32);
                if (v31 > 63)
                  bzero((void *)(v2 + 56), ((unint64_t)(v31 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v6 = -1 << v31;
                v1 = v0;
                *(_QWORD *)(v2 + 16) = 0;
                break;
              }
              v17 = v6[v18];
              if (!v17)
              {
                while (1)
                {
                  v5 = v18 + 1;
                  if (__OFADD__(v18, 1))
                    goto LABEL_39;
                  if (v5 >= v10)
                    goto LABEL_33;
                  v17 = v6[v5];
                  ++v18;
                  if (v17)
                    goto LABEL_23;
                }
              }
              v5 = v18;
            }
          }
        }
LABEL_23:
        v9 = (v17 - 1) & v17;
        v15 = __clz(__rbit64(v17)) + (v5 << 6);
      }
      v19 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 32 * v15);
      v20 = *v19;
      v21 = v19[1];
      v22 = v19[2];
      v23 = v19[3];
      sub_1DD2FA270();
      sub_1DD2FA288();
      sub_1DD2FA288();
      sub_1DD2FA288();
      sub_1DD2FA288();
      result = sub_1DD2FA294();
      v24 = -1 << *(_BYTE *)(v4 + 32);
      v25 = result & ~v24;
      v26 = v25 >> 6;
      if (((-1 << v25) & ~*(_QWORD *)(v11 + 8 * (v25 >> 6))) != 0)
      {
        v12 = __clz(__rbit64((-1 << v25) & ~*(_QWORD *)(v11 + 8 * (v25 >> 6)))) | v25 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v27 = 0;
        v28 = (unint64_t)(63 - v24) >> 6;
        do
        {
          if (++v26 == v28 && (v27 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v29 = v26 == v28;
          if (v26 == v28)
            v26 = 0;
          v27 |= v29;
          v30 = *(_QWORD *)(v11 + 8 * v26);
        }
        while (v30 == -1);
        v12 = __clz(__rbit64(~v30)) + (v26 << 6);
      }
      *(_QWORD *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      v13 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 32 * v12);
      *v13 = v20;
      v13[1] = v21;
      v13[2] = v22;
      v13[3] = v23;
      ++*(_QWORD *)(v4 + 16);
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

uint64_t sub_1DD2E0B7C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  int64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  char v22;
  unint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDB61F30);
  result = sub_1DD2FA00C();
  v4 = result;
  if (*(_QWORD *)(v2 + 16))
  {
    v5 = 0;
    v6 = (uint64_t *)(v2 + 56);
    v7 = 1 << *(_BYTE *)(v2 + 32);
    v26 = -1 << v7;
    v27 = v1;
    if (v7 < 64)
      v8 = ~(-1 << v7);
    else
      v8 = -1;
    v9 = v8 & *(_QWORD *)(v2 + 56);
    v28 = 1 << *(_BYTE *)(v2 + 32);
    v10 = (unint64_t)(v7 + 63) >> 6;
    v11 = result + 56;
    while (1)
    {
      if (v9)
      {
        v13 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
        v14 = v13 | (v5 << 6);
      }
      else
      {
        v15 = v5 + 1;
        if (__OFADD__(v5, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v15 >= v10)
          goto LABEL_33;
        v16 = v6[v15];
        ++v5;
        if (!v16)
        {
          v5 = v15 + 1;
          if (v15 + 1 >= v10)
            goto LABEL_33;
          v16 = v6[v5];
          if (!v16)
          {
            v5 = v15 + 2;
            if (v15 + 2 >= v10)
              goto LABEL_33;
            v16 = v6[v5];
            if (!v16)
            {
              v17 = v15 + 3;
              if (v17 >= v10)
              {
LABEL_33:
                if (v28 >= 64)
                  bzero((void *)(v2 + 56), 8 * v10);
                else
                  *v6 = v26;
                v1 = v27;
                *(_QWORD *)(v2 + 16) = 0;
                break;
              }
              v16 = v6[v17];
              if (!v16)
              {
                while (1)
                {
                  v5 = v17 + 1;
                  if (__OFADD__(v17, 1))
                    goto LABEL_39;
                  if (v5 >= v10)
                    goto LABEL_33;
                  v16 = v6[v5];
                  ++v17;
                  if (v16)
                    goto LABEL_23;
                }
              }
              v5 = v17;
            }
          }
        }
LABEL_23:
        v9 = (v16 - 1) & v16;
        v14 = __clz(__rbit64(v16)) + (v5 << 6);
      }
      v18 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v14);
      result = sub_1DD2FA264();
      v19 = -1 << *(_BYTE *)(v4 + 32);
      v20 = result & ~v19;
      v21 = v20 >> 6;
      if (((-1 << v20) & ~*(_QWORD *)(v11 + 8 * (v20 >> 6))) != 0)
      {
        v12 = __clz(__rbit64((-1 << v20) & ~*(_QWORD *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v22 = 0;
        v23 = (unint64_t)(63 - v19) >> 6;
        do
        {
          if (++v21 == v23 && (v22 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v24 = v21 == v23;
          if (v21 == v23)
            v21 = 0;
          v22 |= v24;
          v25 = *(_QWORD *)(v11 + 8 * v21);
        }
        while (v25 == -1);
        v12 = __clz(__rbit64(~v25)) + (v21 << 6);
      }
      *(_QWORD *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v12) = v18;
      ++*(_QWORD *)(v4 + 16);
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

uint64_t sub_1DD2E0DFC()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t result;
  int64_t v11;
  unint64_t v12;
  _QWORD *v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F03D13F8);
  v3 = sub_1DD2FA00C();
  v4 = v3;
  if (*(_QWORD *)(v2 + 16))
  {
    v5 = 1 << *(_BYTE *)(v2 + 32);
    v30 = (_QWORD *)(v2 + 56);
    if (v5 < 64)
      v6 = ~(-1 << v5);
    else
      v6 = -1;
    v7 = v6 & *(_QWORD *)(v2 + 56);
    v8 = (unint64_t)(v5 + 63) >> 6;
    v9 = v3 + 56;
    result = swift_retain();
    v11 = 0;
    while (1)
    {
      if (v7)
      {
        v14 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        v15 = v14 | (v11 << 6);
      }
      else
      {
        v16 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v8)
          goto LABEL_33;
        v17 = v30[v16];
        ++v11;
        if (!v17)
        {
          v11 = v16 + 1;
          if (v16 + 1 >= v8)
            goto LABEL_33;
          v17 = v30[v11];
          if (!v17)
          {
            v11 = v16 + 2;
            if (v16 + 2 >= v8)
              goto LABEL_33;
            v17 = v30[v11];
            if (!v17)
            {
              v18 = v16 + 3;
              if (v18 >= v8)
              {
LABEL_33:
                swift_release();
                v1 = v0;
                v29 = 1 << *(_BYTE *)(v2 + 32);
                if (v29 > 63)
                  bzero(v30, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v30 = -1 << v29;
                *(_QWORD *)(v2 + 16) = 0;
                break;
              }
              v17 = v30[v18];
              if (!v17)
              {
                while (1)
                {
                  v11 = v18 + 1;
                  if (__OFADD__(v18, 1))
                    goto LABEL_39;
                  if (v11 >= v8)
                    goto LABEL_33;
                  v17 = v30[v11];
                  ++v18;
                  if (v17)
                    goto LABEL_23;
                }
              }
              v11 = v18;
            }
          }
        }
LABEL_23:
        v7 = (v17 - 1) & v17;
        v15 = __clz(__rbit64(v17)) + (v11 << 6);
      }
      v19 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
      v20 = *v19;
      v21 = v19[1];
      sub_1DD2FA270();
      sub_1DD2F9E44();
      result = sub_1DD2FA294();
      v22 = -1 << *(_BYTE *)(v4 + 32);
      v23 = result & ~v22;
      v24 = v23 >> 6;
      if (((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6))) != 0)
      {
        v12 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v25 = 0;
        v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v27 = v24 == v26;
          if (v24 == v26)
            v24 = 0;
          v25 |= v27;
          v28 = *(_QWORD *)(v9 + 8 * v24);
        }
        while (v28 == -1);
        v12 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(_QWORD *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      v13 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 16 * v12);
      *v13 = v20;
      v13[1] = v21;
      ++*(_QWORD *)(v4 + 16);
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

uint64_t sub_1DD2E10D8(uint64_t result, char a2, double a3, double a4, double a5, double a6)
{
  uint64_t *v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  float64x2_t v13;
  float64x2_t v14;
  uint64_t v15;
  double *v16;
  uint64_t v17;
  BOOL v18;
  uint64_t v19;
  double v20;
  double v21;
  double v22;
  double v23;

  v7 = result;
  v8 = *(_QWORD *)(*v6 + 16);
  v9 = *(_QWORD *)(*v6 + 24);
  if (v9 > v8 && (a2 & 1) != 0)
    goto LABEL_14;
  v22 = a5;
  v23 = a6;
  v20 = a3;
  v21 = a4;
  if ((a2 & 1) != 0)
  {
    sub_1DD2E0874();
    goto LABEL_8;
  }
  if (v9 <= v8)
  {
    sub_1DD2E19FC();
LABEL_8:
    v10 = *v6;
    sub_1DD2FA270();
    sub_1DD2DEDB8();
    result = sub_1DD2FA294();
    v11 = -1 << *(_BYTE *)(v10 + 32);
    v7 = result & ~v11;
    if (((*(_QWORD *)(v10 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFF8)) >> v7) & 1) != 0)
    {
      v12 = ~v11;
      a5 = v22;
      a6 = v23;
      v13.f64[0] = v22;
      v13.f64[1] = v23;
      a3 = v20;
      a4 = v21;
      v14.f64[0] = v20;
      v14.f64[1] = v21;
      while ((vminv_u16((uint16x4_t)vcltz_s16(vshl_n_s16(vmovn_s32(vuzp1q_s32((int32x4_t)vceqq_f64(*(float64x2_t *)(*(_QWORD *)(v10 + 48) + 32 * v7), v14), (int32x4_t)vceqq_f64(*(float64x2_t *)(*(_QWORD *)(v10 + 48) + 32 * v7 + 16), v13))), 0xFuLL))) & 1) == 0)
      {
        v7 = (v7 + 1) & v12;
        if (((*(_QWORD *)(v10 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFF8)) >> v7) & 1) == 0)
          goto LABEL_14;
      }
      goto LABEL_17;
    }
    goto LABEL_13;
  }
  result = (uint64_t)sub_1DD2E151C();
LABEL_13:
  a5 = v22;
  a6 = v23;
  a3 = v20;
  a4 = v21;
LABEL_14:
  v15 = *v6;
  *(_QWORD *)(*v6 + 8 * (v7 >> 6) + 56) |= 1 << v7;
  v16 = (double *)(*(_QWORD *)(v15 + 48) + 32 * v7);
  *v16 = a3;
  v16[1] = a4;
  v16[2] = a5;
  v16[3] = a6;
  v17 = *(_QWORD *)(v15 + 16);
  v18 = __OFADD__(v17, 1);
  v19 = v17 + 1;
  if (!v18)
  {
    *(_QWORD *)(v15 + 16) = v19;
    return result;
  }
  __break(1u);
LABEL_17:
  result = sub_1DD2FA240();
  __break(1u);
  return result;
}

uint64_t sub_1DD2E1264(uint64_t result, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  v5 = result;
  v6 = *(_QWORD *)(*v3 + 16);
  v7 = *(_QWORD *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0)
    goto LABEL_14;
  if ((a3 & 1) != 0)
  {
    sub_1DD2E0B7C();
  }
  else
  {
    if (v7 > v6)
    {
      result = (uint64_t)sub_1DD2E16B8();
      goto LABEL_14;
    }
    sub_1DD2E1CD4();
  }
  v8 = *v3;
  result = sub_1DD2FA264();
  v9 = -1 << *(_BYTE *)(v8 + 32);
  a2 = result & ~v9;
  if (((*(_QWORD *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v10 = *(_QWORD *)(v8 + 48);
    if (*(_QWORD *)(v10 + 8 * a2) == v5)
    {
LABEL_13:
      result = sub_1DD2FA240();
      __break(1u);
    }
    else
    {
      v11 = ~v9;
      while (1)
      {
        a2 = (a2 + 1) & v11;
        if (((*(_QWORD *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
          break;
        if (*(_QWORD *)(v10 + 8 * a2) == v5)
          goto LABEL_13;
      }
    }
  }
LABEL_14:
  v12 = *v3;
  *(_QWORD *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_QWORD *)(*(_QWORD *)(v12 + 48) + 8 * a2) = v5;
  v13 = *(_QWORD *)(v12 + 16);
  v14 = __OFADD__(v13, 1);
  v15 = v13 + 1;
  if (v14)
    __break(1u);
  else
    *(_QWORD *)(v12 + 16) = v15;
  return result;
}

uint64_t sub_1DD2E1384(uint64_t result, uint64_t a2, unint64_t a3, char a4)
{
  uint64_t *v4;
  uint64_t *v5;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  BOOL v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;

  v5 = v4;
  v8 = result;
  v9 = *(_QWORD *)(*v4 + 16);
  v10 = *(_QWORD *)(*v4 + 24);
  if (v10 > v9 && (a4 & 1) != 0)
    goto LABEL_22;
  if ((a4 & 1) != 0)
  {
    sub_1DD2E0DFC();
  }
  else
  {
    if (v10 > v9)
    {
      result = (uint64_t)sub_1DD2E184C();
      goto LABEL_22;
    }
    sub_1DD2E1F34();
  }
  v11 = *v4;
  sub_1DD2FA270();
  sub_1DD2F9E44();
  result = sub_1DD2FA294();
  v12 = -1 << *(_BYTE *)(v11 + 32);
  a3 = result & ~v12;
  v13 = v11 + 56;
  if (((*(_QWORD *)(v11 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8)) >> a3) & 1) != 0)
  {
    v14 = *(_QWORD *)(v11 + 48);
    v15 = (_QWORD *)(v14 + 16 * a3);
    v16 = *v15 == v8 && v15[1] == a2;
    if (v16 || (result = sub_1DD2FA210(), (result & 1) != 0))
    {
LABEL_21:
      result = sub_1DD2FA240();
      __break(1u);
    }
    else
    {
      v17 = ~v12;
      while (1)
      {
        a3 = (a3 + 1) & v17;
        if (((*(_QWORD *)(v13 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8)) >> a3) & 1) == 0)
          break;
        v18 = (_QWORD *)(v14 + 16 * a3);
        if (*v18 != v8 || v18[1] != a2)
        {
          result = sub_1DD2FA210();
          if ((result & 1) == 0)
            continue;
        }
        goto LABEL_21;
      }
    }
  }
LABEL_22:
  v20 = *v5;
  *(_QWORD *)(*v5 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  v21 = (uint64_t *)(*(_QWORD *)(v20 + 48) + 16 * a3);
  *v21 = v8;
  v21[1] = a2;
  v22 = *(_QWORD *)(v20 + 16);
  v23 = __OFADD__(v22, 1);
  v24 = v22 + 1;
  if (v23)
    __break(1u);
  else
    *(_QWORD *)(v20 + 16) = v24;
  return result;
}

void *sub_1DD2E151C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _OWORD *v17;
  _OWORD *v18;
  __int128 v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDB61F28);
  v2 = *v0;
  v3 = sub_1DD2FA000();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v20 >= v13)
      goto LABEL_28;
    v21 = *(_QWORD *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      v9 = v20 + 1;
      if (v20 + 1 >= v13)
        goto LABEL_28;
      v21 = *(_QWORD *)(v6 + 8 * v9);
      if (!v21)
      {
        v9 = v20 + 2;
        if (v20 + 2 >= v13)
          goto LABEL_28;
        v21 = *(_QWORD *)(v6 + 8 * v9);
        if (!v21)
          break;
      }
    }
LABEL_27:
    v12 = (v21 - 1) & v21;
    v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    v16 = 32 * v15;
    v17 = (_OWORD *)(*(_QWORD *)(v2 + 48) + v16);
    v18 = (_OWORD *)(*(_QWORD *)(v4 + 48) + v16);
    v19 = v17[1];
    *v18 = *v17;
    v18[1] = v19;
  }
  v22 = v20 + 3;
  if (v22 >= v13)
    goto LABEL_28;
  v21 = *(_QWORD *)(v6 + 8 * v22);
  if (v21)
  {
    v9 = v22;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v21 = *(_QWORD *)(v6 + 8 * v9);
    ++v22;
    if (v21)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1DD2E16B8()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDB61F30);
  v2 = *v0;
  v3 = sub_1DD2FA000();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13)
      goto LABEL_28;
    v17 = *(_QWORD *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      v9 = v16 + 1;
      if (v16 + 1 >= v13)
        goto LABEL_28;
      v17 = *(_QWORD *)(v6 + 8 * v9);
      if (!v17)
      {
        v9 = v16 + 2;
        if (v16 + 2 >= v13)
          goto LABEL_28;
        v17 = *(_QWORD *)(v6 + 8 * v9);
        if (!v17)
          break;
      }
    }
LABEL_27:
    v12 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_12:
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v15) = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v15);
  }
  v18 = v16 + 3;
  if (v18 >= v13)
    goto LABEL_28;
  v17 = *(_QWORD *)(v6 + 8 * v18);
  if (v17)
  {
    v9 = v18;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v17 = *(_QWORD *)(v6 + 8 * v9);
    ++v18;
    if (v17)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1DD2E184C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  _QWORD *v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F03D13F8);
  v2 = *v0;
  v3 = sub_1DD2FA000();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v20 >= v13)
      goto LABEL_28;
    v21 = *(_QWORD *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      v9 = v20 + 1;
      if (v20 + 1 >= v13)
        goto LABEL_28;
      v21 = *(_QWORD *)(v6 + 8 * v9);
      if (!v21)
      {
        v9 = v20 + 2;
        if (v20 + 2 >= v13)
          goto LABEL_28;
        v21 = *(_QWORD *)(v6 + 8 * v9);
        if (!v21)
          break;
      }
    }
LABEL_27:
    v12 = (v21 - 1) & v21;
    v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (_QWORD *)(*(_QWORD *)(v2 + 48) + v16);
    v18 = v17[1];
    v19 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v19 = *v17;
    v19[1] = v18;
    result = (void *)swift_bridgeObjectRetain();
  }
  v22 = v20 + 3;
  if (v22 >= v13)
    goto LABEL_28;
  v21 = *(_QWORD *)(v6 + 8 * v22);
  if (v21)
  {
    v9 = v22;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v21 = *(_QWORD *)(v6 + 8 * v9);
    ++v22;
    if (v21)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_1DD2E19FC()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  unint64_t v12;
  _QWORD *v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  char v27;
  unint64_t v28;
  BOOL v29;
  uint64_t v30;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDB61F28);
  result = sub_1DD2FA00C();
  v4 = result;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_35:
    *v1 = v4;
    return result;
  }
  v5 = 0;
  v6 = v2 + 56;
  v7 = 1 << *(_BYTE *)(v2 + 32);
  if (v7 < 64)
    v8 = ~(-1 << v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(v2 + 56);
  v10 = (unint64_t)(v7 + 63) >> 6;
  v11 = result + 56;
  while (1)
  {
    if (v9)
    {
      v14 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v15 = v14 | (v5 << 6);
      goto LABEL_24;
    }
    v16 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v10)
      goto LABEL_33;
    v17 = *(_QWORD *)(v6 + 8 * v16);
    ++v5;
    if (!v17)
    {
      v5 = v16 + 1;
      if (v16 + 1 >= v10)
        goto LABEL_33;
      v17 = *(_QWORD *)(v6 + 8 * v5);
      if (!v17)
      {
        v5 = v16 + 2;
        if (v16 + 2 >= v10)
          goto LABEL_33;
        v17 = *(_QWORD *)(v6 + 8 * v5);
        if (!v17)
          break;
      }
    }
LABEL_23:
    v9 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v5 << 6);
LABEL_24:
    v19 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 32 * v15);
    v20 = *v19;
    v21 = v19[1];
    v22 = v19[2];
    v23 = v19[3];
    sub_1DD2FA270();
    sub_1DD2FA288();
    sub_1DD2FA288();
    sub_1DD2FA288();
    sub_1DD2FA288();
    result = sub_1DD2FA294();
    v24 = -1 << *(_BYTE *)(v4 + 32);
    v25 = result & ~v24;
    v26 = v25 >> 6;
    if (((-1 << v25) & ~*(_QWORD *)(v11 + 8 * (v25 >> 6))) != 0)
    {
      v12 = __clz(__rbit64((-1 << v25) & ~*(_QWORD *)(v11 + 8 * (v25 >> 6)))) | v25 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v27 = 0;
      v28 = (unint64_t)(63 - v24) >> 6;
      do
      {
        if (++v26 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v29 = v26 == v28;
        if (v26 == v28)
          v26 = 0;
        v27 |= v29;
        v30 = *(_QWORD *)(v11 + 8 * v26);
      }
      while (v30 == -1);
      v12 = __clz(__rbit64(~v30)) + (v26 << 6);
    }
    *(_QWORD *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    v13 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 32 * v12);
    *v13 = v20;
    v13[1] = v21;
    v13[2] = v22;
    v13[3] = v23;
    ++*(_QWORD *)(v4 + 16);
  }
  v18 = v16 + 3;
  if (v18 >= v10)
  {
LABEL_33:
    result = swift_release();
    v1 = v0;
    goto LABEL_35;
  }
  v17 = *(_QWORD *)(v6 + 8 * v18);
  if (v17)
  {
    v5 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    v5 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v5 >= v10)
      goto LABEL_33;
    v17 = *(_QWORD *)(v6 + 8 * v5);
    ++v18;
    if (v17)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1DD2E1CD4()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  char v22;
  unint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t *v26;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDB61F30);
  result = sub_1DD2FA00C();
  v4 = result;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_35:
    *v1 = v4;
    return result;
  }
  v26 = v1;
  v5 = 0;
  v6 = v2 + 56;
  v7 = 1 << *(_BYTE *)(v2 + 32);
  if (v7 < 64)
    v8 = ~(-1 << v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(v2 + 56);
  v10 = (unint64_t)(v7 + 63) >> 6;
  v11 = result + 56;
  while (1)
  {
    if (v9)
    {
      v13 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v14 = v13 | (v5 << 6);
      goto LABEL_24;
    }
    v15 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v15 >= v10)
      goto LABEL_33;
    v16 = *(_QWORD *)(v6 + 8 * v15);
    ++v5;
    if (!v16)
    {
      v5 = v15 + 1;
      if (v15 + 1 >= v10)
        goto LABEL_33;
      v16 = *(_QWORD *)(v6 + 8 * v5);
      if (!v16)
      {
        v5 = v15 + 2;
        if (v15 + 2 >= v10)
          goto LABEL_33;
        v16 = *(_QWORD *)(v6 + 8 * v5);
        if (!v16)
          break;
      }
    }
LABEL_23:
    v9 = (v16 - 1) & v16;
    v14 = __clz(__rbit64(v16)) + (v5 << 6);
LABEL_24:
    v18 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v14);
    result = sub_1DD2FA264();
    v19 = -1 << *(_BYTE *)(v4 + 32);
    v20 = result & ~v19;
    v21 = v20 >> 6;
    if (((-1 << v20) & ~*(_QWORD *)(v11 + 8 * (v20 >> 6))) != 0)
    {
      v12 = __clz(__rbit64((-1 << v20) & ~*(_QWORD *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v22 = 0;
      v23 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v23 && (v22 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v24 = v21 == v23;
        if (v21 == v23)
          v21 = 0;
        v22 |= v24;
        v25 = *(_QWORD *)(v11 + 8 * v21);
      }
      while (v25 == -1);
      v12 = __clz(__rbit64(~v25)) + (v21 << 6);
    }
    *(_QWORD *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v12) = v18;
    ++*(_QWORD *)(v4 + 16);
  }
  v17 = v15 + 3;
  if (v17 >= v10)
  {
LABEL_33:
    result = swift_release();
    v1 = v26;
    goto LABEL_35;
  }
  v16 = *(_QWORD *)(v6 + 8 * v17);
  if (v16)
  {
    v5 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    v5 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v5 >= v10)
      goto LABEL_33;
    v16 = *(_QWORD *)(v6 + 8 * v5);
    ++v17;
    if (v16)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1DD2E1F34()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t result;
  int64_t v11;
  unint64_t v12;
  _QWORD *v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  int64_t v29;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F03D13F8);
  v3 = sub_1DD2FA00C();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_35:
    *v1 = v4;
    return result;
  }
  v5 = 1 << *(_BYTE *)(v2 + 32);
  v6 = v2 + 56;
  if (v5 < 64)
    v7 = ~(-1 << v5);
  else
    v7 = -1;
  v8 = v7 & *(_QWORD *)(v2 + 56);
  v29 = (unint64_t)(v5 + 63) >> 6;
  v9 = v3 + 56;
  result = swift_retain();
  v11 = 0;
  while (1)
  {
    if (v8)
    {
      v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v15 = v14 | (v11 << 6);
      goto LABEL_24;
    }
    v16 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v29)
      goto LABEL_33;
    v17 = *(_QWORD *)(v6 + 8 * v16);
    ++v11;
    if (!v17)
    {
      v11 = v16 + 1;
      if (v16 + 1 >= v29)
        goto LABEL_33;
      v17 = *(_QWORD *)(v6 + 8 * v11);
      if (!v17)
      {
        v11 = v16 + 2;
        if (v16 + 2 >= v29)
          goto LABEL_33;
        v17 = *(_QWORD *)(v6 + 8 * v11);
        if (!v17)
          break;
      }
    }
LABEL_23:
    v8 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v11 << 6);
LABEL_24:
    v19 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v20 = *v19;
    v21 = v19[1];
    sub_1DD2FA270();
    swift_bridgeObjectRetain();
    sub_1DD2F9E44();
    result = sub_1DD2FA294();
    v22 = -1 << *(_BYTE *)(v4 + 32);
    v23 = result & ~v22;
    v24 = v23 >> 6;
    if (((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6))) != 0)
    {
      v12 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v27 = v24 == v26;
        if (v24 == v26)
          v24 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v9 + 8 * v24);
      }
      while (v28 == -1);
      v12 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(_QWORD *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    v13 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 16 * v12);
    *v13 = v20;
    v13[1] = v21;
    ++*(_QWORD *)(v4 + 16);
  }
  v18 = v16 + 3;
  if (v18 >= v29)
  {
LABEL_33:
    result = swift_release_n();
    v1 = v0;
    goto LABEL_35;
  }
  v17 = *(_QWORD *)(v6 + 8 * v18);
  if (v17)
  {
    v11 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    v11 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v11 >= v29)
      goto LABEL_33;
    v17 = *(_QWORD *)(v6 + 8 * v11);
    ++v18;
    if (v17)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

unint64_t sub_1DD2E21E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1DD2FA270();
  sub_1DD2F9E44();
  v4 = sub_1DD2FA294();
  return sub_1DD2E22F4(a1, a2, v4);
}

unint64_t sub_1DD2E2244(uint64_t a1)
{
  uint64_t v2;

  sub_1DD2F9DE4();
  sub_1DD2FA270();
  sub_1DD2F9E44();
  v2 = sub_1DD2FA294();
  swift_bridgeObjectRelease();
  return sub_1DD2E23D4(a1, v2);
}

unint64_t sub_1DD2E22C4(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1DD2FA264();
  return sub_1DD2E2548(a1, v2);
}

unint64_t sub_1DD2E22F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v9;
  _QWORD *v10;
  BOOL v11;
  uint64_t v12;
  _QWORD *v13;
  BOOL v14;

  v4 = v3 + 64;
  v5 = -1 << *(_BYTE *)(v3 + 32);
  v6 = a3 & ~v5;
  if (((*(_QWORD *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0)
  {
    v9 = *(_QWORD *)(v3 + 48);
    v10 = (_QWORD *)(v9 + 16 * v6);
    v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_1DD2FA210() & 1) == 0)
    {
      v12 = ~v5;
      do
      {
        v6 = (v6 + 1) & v12;
        if (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
          break;
        v13 = (_QWORD *)(v9 + 16 * v6);
        v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_1DD2FA210() & 1) == 0);
    }
  }
  return v6;
}

unint64_t sub_1DD2E23D4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v18;

  v3 = v2 + 64;
  v4 = -1 << *(_BYTE *)(v2 + 32);
  v5 = a2 & ~v4;
  if (((*(_QWORD *)(v2 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
  {
    v6 = sub_1DD2F9DE4();
    v8 = v7;
    if (v6 == sub_1DD2F9DE4() && v8 == v9)
    {
LABEL_16:
      swift_bridgeObjectRelease_n();
      return v5;
    }
    v11 = sub_1DD2FA210();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v11 & 1) == 0)
    {
      v12 = ~v4;
      v5 = (v5 + 1) & v12;
      if (((*(_QWORD *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
      {
        while (1)
        {
          v13 = sub_1DD2F9DE4();
          v15 = v14;
          if (v13 == sub_1DD2F9DE4() && v15 == v16)
            break;
          v18 = sub_1DD2FA210();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v18 & 1) == 0)
          {
            v5 = (v5 + 1) & v12;
            if (((*(_QWORD *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
              continue;
          }
          return v5;
        }
        goto LABEL_16;
      }
    }
  }
  return v5;
}

unint64_t sub_1DD2E2548(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t result;
  uint64_t v7;
  uint64_t v8;

  v4 = v2 + 64;
  v5 = -1 << *(_BYTE *)(v2 + 32);
  result = a2 & ~v5;
  if (((*(_QWORD *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0)
  {
    v7 = *(_QWORD *)(v2 + 48);
    if (*(_QWORD *)(v7 + 8 * result) != a1)
    {
      v8 = ~v5;
      for (result = (result + 1) & v8;
            ((*(_QWORD *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            result = (result + 1) & v8)
      {
        if (*(_QWORD *)(v7 + 8 * result) == a1)
          break;
      }
    }
  }
  return result;
}

uint64_t sub_1DD2E25E4(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t result;
  unint64_t v21;
  char v22;
  uint64_t *v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;

  v5 = v4;
  v10 = *v4;
  v12 = sub_1DD2E21E0(a2, a3);
  v13 = *(_QWORD *)(v10 + 16);
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v16 = v11;
  v17 = *(_QWORD *)(v10 + 24);
  if (v17 >= v15 && (a4 & 1) != 0)
    goto LABEL_7;
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_1DD2D9E68();
LABEL_7:
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
    {
LABEL_8:
      v19 = v18[7];
      result = swift_bridgeObjectRelease();
      *(_QWORD *)(v19 + 8 * v12) = a1;
      return result;
    }
LABEL_11:
    v18[(v12 >> 6) + 8] |= 1 << v12;
    v23 = (uint64_t *)(v18[6] + 16 * v12);
    *v23 = a2;
    v23[1] = a3;
    *(_QWORD *)(v18[7] + 8 * v12) = a1;
    v24 = v18[2];
    v25 = __OFADD__(v24, 1);
    v26 = v24 + 1;
    if (!v25)
    {
      v18[2] = v26;
      return swift_bridgeObjectRetain();
    }
    goto LABEL_14;
  }
  sub_1DD2D934C(v15, a4 & 1);
  v21 = sub_1DD2E21E0(a2, a3);
  if ((v16 & 1) == (v22 & 1))
  {
    v12 = v21;
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  result = sub_1DD2FA24C();
  __break(1u);
  return result;
}

uint64_t sub_1DD2E2740(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1DD2E2794(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1DD2E275C(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1DD2E28F0(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1DD2E2778(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1DD2E2A58(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1DD2E2794(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EDB61D28);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 1;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[32 * v8])
      memmove(v13, v14, 32 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[32 * v8] || v13 >= &v14[32 * v8])
  {
    memcpy(v13, v14, 32 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_1DD2FA12C();
  __break(1u);
  return result;
}

uint64_t sub_1DD2E28F0(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EDB615E8);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8])
      memmove(v13, v14, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_1DD2FA12C();
  __break(1u);
  return result;
}

uint64_t sub_1DD2E2A58(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1F03D0F30);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 1;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[32 * v8])
      memmove(v13, v14, 32 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[32 * v8] || v13 >= &v14[32 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_1DD2FA12C();
  __break(1u);
  return result;
}

uint64_t sub_1DD2E2BC4(uint64_t a1, unint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;
  unsigned int i;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  unsigned __int16 v13;
  uint64_t result;
  int v15;
  uint64_t v16;

  v4 = sub_1DD2F9E50();
  if (v4 == 4)
  {
    v6 = (a2 & 0x2000000000000000) != 0 ? HIBYTE(a2) & 0xF : a1 & 0xFFFFFFFFFFFFLL;
    if (v6)
    {
      if ((a2 & 0x1000000000000000) != 0)
      {
        swift_bridgeObjectRetain_n();
        v7 = 0;
        v8 = 0;
        goto LABEL_21;
      }
      if ((a2 & 0x2000000000000000) != 0)
      {
        swift_bridgeObjectRetain_n();
        v7 = 0;
        v8 = 0;
      }
      else
      {
        swift_bridgeObjectRetain_n();
        v7 = 0;
        v8 = 0;
        if ((a1 & 0x1000000000000000) == 0)
LABEL_10:
          sub_1DD2FA078();
      }
LABEL_13:
      for (i = sub_1DD2FA084(); ; i = sub_1DD2FA018())
      {
        v11 = v10;
        if (i >= 0x10000)
        {
          v16 = v4;
          v13 = sub_1DD2FA2D0();
          result = sub_1DD2FA2D0();
          if (__CFADD__(v8 << 8, (unsigned __int16)result))
          {
            __break(1u);
            return result;
          }
          v15 = ((v8 << 8) + (unsigned __int16)result) << 8;
          v12 = __CFADD__(v15, v13);
          v8 = v15 + v13;
          v4 = v16;
          if (v12)
          {
            __break(1u);
LABEL_27:
            __break(1u);
LABEL_28:
            swift_bridgeObjectRelease_n();
            v5 = v8;
            return v5 | ((unint64_t)(v4 != 4) << 32);
          }
        }
        else
        {
          v12 = __CFADD__(i, v8 << 8);
          v8 = i + (v8 << 8);
          if (v12)
            goto LABEL_27;
        }
        v7 += v11;
        if (v7 >= v6)
          goto LABEL_28;
        if ((a2 & 0x1000000000000000) == 0)
        {
          if ((a2 & 0x2000000000000000) == 0 && (a1 & 0x1000000000000000) == 0)
            goto LABEL_10;
          goto LABEL_13;
        }
LABEL_21:
        ;
      }
    }
  }
  v5 = 0;
  return v5 | ((unint64_t)(v4 != 4) << 32);
}

uint64_t sub_1DD2E2D64(uint64_t result)
{
  uint64_t v1;
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v1 = result;
  v2 = *(_QWORD *)(result + 16);
  if (v2 == 1)
    return sub_1DD2FA204();
  if (v2)
  {
    v11 = MEMORY[0x1E0DEE9D8];
    sub_1DD2E275C(0, v2, 0);
    v3 = v1 + 32;
    do
    {
      v3 += 8;
      v4 = sub_1DD2FA204();
      v6 = v5;
      v8 = *(_QWORD *)(v11 + 16);
      v7 = *(_QWORD *)(v11 + 24);
      if (v8 >= v7 >> 1)
        sub_1DD2E275C(v7 > 1, v8 + 1, 1);
      *(_QWORD *)(v11 + 16) = v8 + 1;
      v9 = v11 + 16 * v8;
      *(_QWORD *)(v9 + 32) = v4;
      *(_QWORD *)(v9 + 40) = v6;
      --v2;
    }
    while (v2);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EDB61500);
    sub_1DD2C64CC();
    v10 = sub_1DD2F9D90();
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

unint64_t sub_1DD2E2ED4(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  unint64_t result;
  char v7;
  void **v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  void **v13;
  void *v14;
  id v15;
  char v16;
  id v17;

  v1 = a1[2];
  if (!v1)
    return MEMORY[0x1E0DEE9E0];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDB61F48);
  v3 = (_QWORD *)sub_1DD2FA120();
  v4 = a1[4];
  v5 = (void *)a1[5];
  result = sub_1DD2E22C4(v4);
  if ((v7 & 1) != 0)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    v17 = v5;
    return (unint64_t)v3;
  }
  v8 = (void **)(a1 + 7);
  while (1)
  {
    *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v9 = 8 * result;
    *(_QWORD *)(v3[6] + v9) = v4;
    *(_QWORD *)(v3[7] + v9) = v5;
    v10 = v3[2];
    v11 = __OFADD__(v10, 1);
    v12 = v10 + 1;
    if (v11)
      break;
    v3[2] = v12;
    if (!--v1)
      goto LABEL_8;
    v13 = v8 + 2;
    v4 = (uint64_t)*(v8 - 1);
    v14 = *v8;
    v15 = v5;
    result = sub_1DD2E22C4(v4);
    v8 = v13;
    v5 = v14;
    if ((v16 & 1) != 0)
      goto LABEL_7;
  }
  __break(1u);
  return result;
}

unint64_t sub_1DD2E2FC8(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t *i;
  uint64_t v5;
  uint64_t v6;
  unint64_t result;
  char v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EDB61F38);
    v3 = (_QWORD *)sub_1DD2FA120();
    for (i = (uint64_t *)(a1 + 40); ; i += 2)
    {
      v5 = *(i - 1);
      v6 = *i;
      result = sub_1DD2E22C4(v5);
      if ((v8 & 1) != 0)
        break;
      *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      v9 = 8 * result;
      *(_QWORD *)(v3[6] + v9) = v5;
      *(_QWORD *)(v3[7] + v9) = v6;
      v10 = v3[2];
      v11 = __OFADD__(v10, 1);
      v12 = v10 + 1;
      if (v11)
        goto LABEL_10;
      v3[2] = v12;
      if (!--v1)
        return (unint64_t)v3;
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return MEMORY[0x1E0DEE9E0];
  }
  return result;
}

uint64_t sub_1DD2E309C(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 114 && a2 == 0xE100000000000000 || (sub_1DD2FA210() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 103 && a2 == 0xE100000000000000 || (sub_1DD2FA210() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 98 && a2 == 0xE100000000000000 || (sub_1DD2FA210() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 97 && a2 == 0xE100000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v5 = sub_1DD2FA210();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

double sub_1DD2E31E8(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  double v6;
  double v7;
  _BYTE v9[16];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F03D13D8);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = &v9[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DD2E339C();
  sub_1DD2FA2AC();
  v9[15] = 0;
  sub_1DD2FA180();
  v7 = v6;
  v9[14] = 1;
  sub_1DD2FA180();
  v9[13] = 2;
  sub_1DD2FA180();
  v9[12] = 3;
  sub_1DD2FA180();
  (*(void (**)(_BYTE *, uint64_t))(v3 + 8))(v5, v2);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v7;
}

unint64_t sub_1DD2E339C()
{
  unint64_t result;

  result = qword_1F03D13E0;
  if (!qword_1F03D13E0)
  {
    result = MEMORY[0x1DF0D8040]("\reA\rHZ", &type metadata for EmojiBackground.BackgroundColor.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F03D13E0);
  }
  return result;
}

uint64_t sub_1DD2E33E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDB61530);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

_OWORD *sub_1DD2E3428(_OWORD *a1, _OWORD *a2)
{
  __int128 v2;

  v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

unint64_t sub_1DD2E3438()
{
  unint64_t result;

  result = qword_1EDB61EA0;
  if (!qword_1EDB61EA0)
  {
    result = MEMORY[0x1DF0D8040](&unk_1DD2FEDBC, &type metadata for EmojiBackground.BgclTable);
    atomic_store(result, (unint64_t *)&qword_1EDB61EA0);
  }
  return result;
}

uint64_t sub_1DD2E347C(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_release();
  }
  return swift_release();
}

uint64_t destroy for EmojiBackground.BgclTable()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for EmojiBackground.BgclTable(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for EmojiBackground.BgclTable(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  return a1;
}

uint64_t assignWithTake for EmojiBackground.BgclTable(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  return a1;
}

uint64_t getEnumTagSinglePayload for EmojiBackground.BgclTable(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 32))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for EmojiBackground.BgclTable(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 32) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for EmojiBackground.BgclTable()
{
  return &type metadata for EmojiBackground.BgclTable;
}

ValueMetadata *type metadata accessor for EmojiBackground.BackgroundColor.CodingKeys()
{
  return &type metadata for EmojiBackground.BackgroundColor.CodingKeys;
}

unint64_t sub_1DD2E36C0()
{
  unint64_t result;

  result = qword_1F03D1408;
  if (!qword_1F03D1408)
  {
    result = MEMORY[0x1DF0D8040](&unk_1DD2FED6C, &type metadata for EmojiBackground.BackgroundColor.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F03D1408);
  }
  return result;
}

unint64_t sub_1DD2E3708()
{
  unint64_t result;

  result = qword_1F03D1410;
  if (!qword_1F03D1410)
  {
    result = MEMORY[0x1DF0D8040](&unk_1DD2FECDC, &type metadata for EmojiBackground.BackgroundColor.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F03D1410);
  }
  return result;
}

unint64_t sub_1DD2E3750()
{
  unint64_t result;

  result = qword_1F03D1418;
  if (!qword_1F03D1418)
  {
    result = MEMORY[0x1DF0D8040](&unk_1DD2FED04, &type metadata for EmojiBackground.BackgroundColor.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F03D1418);
  }
  return result;
}

uint64_t sub_1DD2E3794(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x73726F6C6F63 && a2 == 0xE600000000000000;
  if (v2 || (sub_1DD2FA210() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6C6F63696A6F6D65 && a2 == 0xEB0000000073726FLL || (sub_1DD2FA210() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x70616D7865646E69 && a2 == 0xE800000000000000 || (sub_1DD2FA210() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6E6F6973726576 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_1DD2FA210();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_1DD2E395C(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v9;
  char v10;
  uint64_t v11;

  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDB61F58);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = a1[3];
  __swift_project_boxed_opaque_existential_1(a1, v7);
  sub_1DD2E3C78();
  sub_1DD2FA2AC();
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EDB61ED8);
    v10 = 0;
    sub_1DD2E3D40(&qword_1EDB61EE0, &qword_1EDB61EF8, MEMORY[0x1E0DEB0A8], MEMORY[0x1E0DEAF40]);
    sub_1DD2FA198();
    v7 = v11;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EDB61D40);
    v10 = 1;
    sub_1DD2E3CBC();
    swift_bridgeObjectRetain();
    sub_1DD2FA198();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EDB61EC0);
    v10 = 2;
    sub_1DD2E3ED4(&qword_1EDB61EC8, MEMORY[0x1E0DEA9A0], MEMORY[0x1E0DEB448], MEMORY[0x1E0DEA0D8]);
    swift_bridgeObjectRetain();
    sub_1DD2FA198();
    LOBYTE(v11) = 3;
    swift_bridgeObjectRetain();
    sub_1DD2FA18C();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v7;
}

unint64_t sub_1DD2E3C78()
{
  unint64_t result;

  result = qword_1EDB61E88;
  if (!qword_1EDB61E88)
  {
    result = MEMORY[0x1DF0D8040](&unk_1DD2FEEEC, &type metadata for EmojiBackground.BgclTable.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB61E88);
  }
  return result;
}

unint64_t sub_1DD2E3CBC()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  result = qword_1EDB61ED0;
  if (!qword_1EDB61ED0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EDB61D40);
    v2 = MEMORY[0x1E0DEAF40];
    v3 = sub_1DD2E3E4C(&qword_1EDB61EF0, &qword_1EDB61F08, MEMORY[0x1E0DEB448], MEMORY[0x1E0DEAF40]);
    result = MEMORY[0x1DF0D8040](v2, v1, &v3);
    atomic_store(result, (unint64_t *)&qword_1EDB61ED0);
  }
  return result;
}

uint64_t sub_1DD2E3D40(unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;

  result = *a1;
  if (!result)
  {
    v9 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EDB61ED8);
    v10 = sub_1DD2BFF28(a2, &qword_1EDB61A20, a3, a4);
    result = MEMORY[0x1DF0D8040](a4, v9, &v10);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1DD2E3DC8()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  result = qword_1F03D1430;
  if (!qword_1F03D1430)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EDB61D40);
    v2 = MEMORY[0x1E0DEAF10];
    v3 = sub_1DD2E3E4C(&qword_1F03D1438, &qword_1F03D1440, MEMORY[0x1E0DEB420], MEMORY[0x1E0DEAF10]);
    result = MEMORY[0x1DF0D8040](v2, v1, &v3);
    atomic_store(result, (unint64_t *)&qword_1F03D1430);
  }
  return result;
}

uint64_t sub_1DD2E3E4C(unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;

  result = *a1;
  if (!result)
  {
    v9 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EDB61EE8);
    v10 = sub_1DD2BFF28(a2, &qword_1EDB61F00, a3, a4);
    result = MEMORY[0x1DF0D8040](a4, v9, &v10);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1DD2E3ED4(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  _QWORD v10[2];

  result = *a1;
  if (!result)
  {
    v9 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EDB61EC0);
    v10[0] = a2;
    v10[1] = a3;
    result = MEMORY[0x1DF0D8040](a4, v9, v10);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t _s11EmojiPoster15EmojiBackgroundC15BackgroundColorV10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1DD2E3F84 + 4 * byte_1DD2FEBD9[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1DD2E3FB8 + 4 * byte_1DD2FEBD4[v4]))();
}

uint64_t sub_1DD2E3FB8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DD2E3FC0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DD2E3FC8);
  return result;
}

uint64_t sub_1DD2E3FD4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DD2E3FDCLL);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1DD2E3FE0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DD2E3FE8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for EmojiBackground.BgclTable.CodingKeys()
{
  return &type metadata for EmojiBackground.BgclTable.CodingKeys;
}

unint64_t sub_1DD2E4008()
{
  unint64_t result;

  result = qword_1F03D1450;
  if (!qword_1F03D1450)
  {
    result = MEMORY[0x1DF0D8040](&unk_1DD2FEEC4, &type metadata for EmojiBackground.BgclTable.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1F03D1450);
  }
  return result;
}

unint64_t sub_1DD2E4050()
{
  unint64_t result;

  result = qword_1EDB61E98;
  if (!qword_1EDB61E98)
  {
    result = MEMORY[0x1DF0D8040](&unk_1DD2FEE34, &type metadata for EmojiBackground.BgclTable.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB61E98);
  }
  return result;
}

unint64_t sub_1DD2E4098()
{
  unint64_t result;

  result = qword_1EDB61E90;
  if (!qword_1EDB61E90)
  {
    result = MEMORY[0x1DF0D8040](&unk_1DD2FEE5C, &type metadata for EmojiBackground.BgclTable.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDB61E90);
  }
  return result;
}

uint64_t sub_1DD2E40DC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  _BYTE v5[128];

  v3 = *a1 + OBJC_IVAR____TtC11EmojiPoster24EmojiSceneViewController_configuration;
  swift_beginAccess();
  sub_1DD2E60AC(v3, (uint64_t)v5, &qword_1F03D0D80);
  sub_1DD2E60AC((uint64_t)v5, a2, &qword_1F03D0D80);
  return sub_1DD2C3968((uint64_t)v5, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1DD2C3830);
}

void sub_1DD2E4164(uint64_t a1, _QWORD *a2)
{
  uint64_t v3;
  _BYTE v4[128];
  _BYTE v5[128];

  sub_1DD2E60AC(a1, (uint64_t)v4, &qword_1F03D0D80);
  v3 = *a2 + OBJC_IVAR____TtC11EmojiPoster24EmojiSceneViewController_configuration;
  swift_beginAccess();
  sub_1DD2E60AC(v3, (uint64_t)v5, &qword_1F03D0D80);
  sub_1DD2E60AC((uint64_t)v4, v3, &qword_1F03D0D80);
  sub_1DD2C3968((uint64_t)v4, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1DD2C3830);
  sub_1DD2C3968((uint64_t)v5, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1DD2C39CC);
  sub_1DD2E4CE0();
}

uint64_t sub_1DD2E420C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  _BYTE v5[128];

  v3 = v1 + OBJC_IVAR____TtC11EmojiPoster24EmojiSceneViewController_configuration;
  swift_beginAccess();
  sub_1DD2E60AC(v3, (uint64_t)v5, &qword_1F03D0D80);
  sub_1DD2E60AC((uint64_t)v5, a1, &qword_1F03D0D80);
  return sub_1DD2C3968((uint64_t)v5, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1DD2C3830);
}

void sub_1DD2E4290(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _BYTE v3[128];
  _BYTE v4[128];

  sub_1DD2E60AC(a1, (uint64_t)v3, &qword_1F03D0D80);
  v2 = v1 + OBJC_IVAR____TtC11EmojiPoster24EmojiSceneViewController_configuration;
  swift_beginAccess();
  sub_1DD2E60AC(v2, (uint64_t)v4, &qword_1F03D0D80);
  sub_1DD2E60AC((uint64_t)v3, v2, &qword_1F03D0D80);
  sub_1DD2C3968((uint64_t)v4, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1DD2C39CC);
  sub_1DD2E4CE0();
}

void (*sub_1DD2E4320(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1DD2E4368;
}

void sub_1DD2E4368(uint64_t a1, char a2)
{
  swift_endAccess();
  if ((a2 & 1) == 0)
    sub_1DD2E4CE0();
}

double sub_1DD2E4398()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + OBJC_IVAR____TtC11EmojiPoster24EmojiSceneViewController_wakeProgress;
  swift_beginAccess();
  return *(double *)v1;
}

uint64_t sub_1DD2E43DC(double a1)
{
  uint64_t v1;
  double *v3;
  double v4;
  uint64_t v5;
  uint64_t (*v6)();
  uint64_t v7;
  double v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE v12[32];

  v3 = (double *)(v1 + OBJC_IVAR____TtC11EmojiPoster24EmojiSceneViewController_wakeProgress);
  swift_beginAccess();
  *v3 = a1;
  v4 = (1.0 - a1) * 0.5 + 0.0;
  *(float *)&v4 = v4;
  objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC11EmojiPoster24EmojiSceneViewController_overlayLayer), sel_setOpacity_, v4);
  v6 = sub_1DD2E48E4();
  if (*(_QWORD *)(v5 + 24))
  {
    v7 = v5;
    swift_beginAccess();
    v8 = *v3;
    v9 = *(_QWORD *)(v7 + 24);
    v10 = *(_QWORD *)(v7 + 32);
    __swift_mutable_project_boxed_opaque_existential_1(v7, v9);
    (*(void (**)(uint64_t, uint64_t, double))(v10 + 64))(v9, v10, v8);
  }
  return ((uint64_t (*)(_BYTE *, _QWORD))v6)(v12, 0);
}

void (*sub_1DD2E44CC(_QWORD *a1))(_QWORD **a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = malloc(0x48uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC11EmojiPoster24EmojiSceneViewController_wakeProgress;
  v3[7] = v1;
  v3[8] = v4;
  swift_beginAccess();
  return sub_1DD2E4524;
}

void sub_1DD2E4524(_QWORD **a1, char a2)
{
  _QWORD *v3;
  uint64_t v4;
  double v5;
  uint64_t v6;
  uint64_t (*v7)();
  uint64_t v8;
  double *v9;
  double v10;
  uint64_t v11;
  uint64_t v12;

  v3 = *a1;
  swift_endAccess();
  if ((a2 & 1) == 0)
  {
    v4 = v3[7];
    v5 = (1.0 - *(double *)(v4 + v3[8])) * 0.5 + 0.0;
    *(float *)&v5 = v5;
    objc_msgSend(*(id *)(v4 + OBJC_IVAR____TtC11EmojiPoster24EmojiSceneViewController_overlayLayer), sel_setOpacity_, v5);
    v7 = sub_1DD2E48E4();
    if (*(_QWORD *)(v6 + 24))
    {
      v8 = v6;
      v9 = (double *)(v3[7] + v3[8]);
      swift_beginAccess();
      v10 = *v9;
      v11 = *(_QWORD *)(v8 + 24);
      v12 = *(_QWORD *)(v8 + 32);
      __swift_mutable_project_boxed_opaque_existential_1(v8, v11);
      (*(void (**)(uint64_t, uint64_t, double))(v12 + 64))(v11, v12, v10);
    }
    ((void (*)(_QWORD *, _QWORD))v7)(v3, 0);
  }
  free(v3);
}

uint64_t sub_1DD2E4614(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;
  double *v3;
  uint64_t v4;
  uint64_t (*v5)();
  uint64_t v6;
  double v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE v11[32];

  v2 = *a1;
  v3 = (double *)(*a2 + OBJC_IVAR____TtC11EmojiPoster24EmojiSceneViewController_unlockProgress);
  swift_beginAccess();
  *(_QWORD *)v3 = v2;
  v5 = sub_1DD2E48E4();
  if (*(_QWORD *)(v4 + 24))
  {
    v6 = v4;
    swift_beginAccess();
    v7 = *v3;
    v8 = *(_QWORD *)(v6 + 24);
    v9 = *(_QWORD *)(v6 + 32);
    __swift_mutable_project_boxed_opaque_existential_1(v6, v8);
    (*(void (**)(uint64_t, uint64_t, double))(v9 + 88))(v8, v9, v7);
  }
  return ((uint64_t (*)(_BYTE *, _QWORD))v5)(v11, 0);
}

double sub_1DD2E46D4()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + OBJC_IVAR____TtC11EmojiPoster24EmojiSceneViewController_unlockProgress;
  swift_beginAccess();
  return *(double *)v1;
}

uint64_t sub_1DD2E4718(double a1)
{
  uint64_t v1;
  double *v3;
  uint64_t v4;
  uint64_t (*v5)();
  uint64_t v6;
  double v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE v11[32];

  v3 = (double *)(v1 + OBJC_IVAR____TtC11EmojiPoster24EmojiSceneViewController_unlockProgress);
  swift_beginAccess();
  *v3 = a1;
  v5 = sub_1DD2E48E4();
  if (*(_QWORD *)(v4 + 24))
  {
    v6 = v4;
    swift_beginAccess();
    v7 = *v3;
    v8 = *(_QWORD *)(v6 + 24);
    v9 = *(_QWORD *)(v6 + 32);
    __swift_mutable_project_boxed_opaque_existential_1(v6, v8);
    (*(void (**)(uint64_t, uint64_t, double))(v9 + 88))(v8, v9, v7);
  }
  return ((uint64_t (*)(_BYTE *, _QWORD))v5)(v11, 0);
}

void (*sub_1DD2E47D4(_QWORD *a1))(_QWORD **a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = malloc(0x48uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC11EmojiPoster24EmojiSceneViewController_unlockProgress;
  v3[7] = v1;
  v3[8] = v4;
  swift_beginAccess();
  return sub_1DD2E482C;
}

void sub_1DD2E482C(_QWORD **a1, char a2)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t (*v5)();
  uint64_t v6;
  double *v7;
  double v8;
  uint64_t v9;
  uint64_t v10;

  v3 = *a1;
  swift_endAccess();
  if ((a2 & 1) == 0)
  {
    v5 = sub_1DD2E48E4();
    if (*(_QWORD *)(v4 + 24))
    {
      v6 = v4;
      v7 = (double *)(v3[7] + v3[8]);
      swift_beginAccess();
      v8 = *v7;
      v9 = *(_QWORD *)(v6 + 24);
      v10 = *(_QWORD *)(v6 + 32);
      __swift_mutable_project_boxed_opaque_existential_1(v6, v9);
      (*(void (**)(uint64_t, uint64_t, double))(v10 + 88))(v9, v10, v8);
    }
    ((void (*)(_QWORD *, _QWORD))v5)(v3, 0);
  }
  free(v3);
}

uint64_t (*sub_1DD2E48E4())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

void sub_1DD2E4928()
{
  char *v0;
  void *v1;
  id v2;
  double v3;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  id v11;
  void *v12;
  id v13;
  id v14;
  void *v15;
  id v16;
  id v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  id v26;
  id v27;
  void *v28;
  void *v29;
  id v30;
  id v31;
  id v32;
  void *v33;
  double v34;
  double v35;
  double v36;
  double v37;
  double v38;
  double v39;
  double v40;
  double v41;
  double v42;
  id v43;
  void *v44;
  id v45;

  v1 = (void *)objc_opt_self();
  v2 = objc_msgSend(v1, sel_mainScreen);
  objc_msgSend(v2, sel_bounds);
  v4 = v3;
  v6 = v5;
  v8 = v7;
  v10 = v9;

  v11 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CD7FF8]), sel_initWithFrame_, v4, v6, v8, v10);
  v12 = (void *)objc_opt_self();
  v13 = v11;
  v14 = objc_msgSend(v12, sel_clearColor);
  objc_msgSend(v13, sel_setBackgroundColor_, v14);

  v15 = *(void **)&v0[OBJC_IVAR____TtC11EmojiPoster24EmojiSceneViewController_sceneView];
  *(_QWORD *)&v0[OBJC_IVAR____TtC11EmojiPoster24EmojiSceneViewController_sceneView] = v13;
  v16 = v13;

  v17 = objc_msgSend(v1, sel_mainScreen);
  objc_msgSend(v17, sel_bounds);
  v19 = v18;
  v21 = v20;
  v23 = v22;
  v25 = v24;

  v26 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3F10]), sel_initWithFrame_, v19, v21, v23, v25);
  objc_msgSend(v0, sel_setView_, v26);
  v27 = objc_msgSend(v0, sel_view);
  if (!v27)
  {
    __break(1u);
    goto LABEL_6;
  }
  v28 = v27;
  objc_msgSend(v27, sel_addSubview_, v16);

  v29 = *(void **)&v0[OBJC_IVAR____TtC11EmojiPoster24EmojiSceneViewController_overlayLayer];
  v30 = objc_msgSend(v12, sel_blackColor);
  v31 = objc_msgSend(v30, sel_CGColor);

  objc_msgSend(v29, sel_setBackgroundColor_, v31);
  v32 = objc_msgSend(v0, sel_view);
  if (!v32)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  v33 = v32;
  objc_msgSend(v32, sel_bounds);
  v35 = v34;
  v37 = v36;
  v39 = v38;
  v41 = v40;

  objc_msgSend(v29, sel_setFrame_, v35, v37, v39, v41);
  LODWORD(v42) = 0;
  objc_msgSend(v29, sel_setOpacity_, v42);
  v43 = objc_msgSend(v0, sel_view);
  if (v43)
  {
    v44 = v43;
    v45 = objc_msgSend(v43, sel_layer);

    objc_msgSend(v45, sel_addSublayer_, v29);
    return;
  }
LABEL_7:
  __break(1u);
}

void sub_1DD2E4C58()
{
  void *v0;
  objc_super v1;

  v1.receiver = v0;
  v1.super_class = (Class)type metadata accessor for EmojiSceneViewController();
  objc_msgSendSuper2(&v1, sel_viewDidLoad);
  sub_1DD2E4CE0();
}

void sub_1DD2E4CE0()
{
  _BYTE *v0;
  _BYTE *v1;
  uint64_t v2;
  id v3;
  void *v4;
  void *v5;
  id v6;
  void *v7;
  uint64_t v8;
  int v9;
  BOOL v10;
  int v11;
  double v12;
  double v13;
  double v14;
  double v15;
  objc_class *v16;
  id v17;
  _UNKNOWN **v18;
  id v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  double v27;
  int v28;
  unsigned __int8 v29;
  uint64_t v30;
  _UNKNOWN **v31;
  _QWORD *v32;
  uint64_t v33;
  _UNKNOWN **v34;
  _QWORD *v35;
  uint64_t v36;
  _UNKNOWN **v37;
  void (*v38)(uint64_t, uint64_t, _UNKNOWN **);
  uint64_t v39;
  id v40;
  id v41[5];
  _QWORD v42[3];
  objc_class *v43;
  _UNKNOWN **v44;
  _BYTE v45[40];
  _BYTE v46[128];
  _BYTE v47[106];
  unsigned __int8 v48;
  unsigned __int8 v49;
  _QWORD *v50;

  v1 = v0;
  if (!objc_msgSend(v0, sel_isViewLoaded))
    return;
  v2 = (uint64_t)&v0[OBJC_IVAR____TtC11EmojiPoster24EmojiSceneViewController_configuration];
  swift_beginAccess();
  sub_1DD2E60AC(v2, (uint64_t)v46, &qword_1F03D0D80);
  sub_1DD2E60AC((uint64_t)v46, (uint64_t)v47, &qword_1F03D0D80);
  if (sub_1DD2C61E4((uint64_t)v47) != 1)
  {
    v7 = *(void **)&v1[OBJC_IVAR____TtC11EmojiPoster24EmojiSceneViewController_sceneView];
    if (!v7)
    {
LABEL_38:
      v1[OBJC_IVAR____TtC11EmojiPoster24EmojiSceneViewController_currentLayoutStyle] = v48;
      return;
    }
    v8 = (uint64_t)&v1[OBJC_IVAR____TtC11EmojiPoster24EmojiSceneViewController_scene];
    swift_beginAccess();
    sub_1DD2E5E7C(v8, (uint64_t)v45);
    v9 = v1[OBJC_IVAR____TtC11EmojiPoster24EmojiSceneViewController_currentLayoutStyle];
    v10 = v9 != 3 && v9 == v48;
    v11 = !v10;
    if (v10)
    {
      sub_1DD2C3968((uint64_t)v46, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1DD2C3830);
      v19 = v7;
    }
    else
    {
      if (v48 == 1)
      {
        sub_1DD2C3968((uint64_t)v46, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1DD2C3830);
        objc_msgSend(v7, sel_bounds);
        v21 = v20;
        v23 = v22;
        v16 = (objc_class *)type metadata accessor for CircularScene();
        v17 = objc_msgSend(objc_allocWithZone(v16), sel_initWithSize_, v21, v23);
        v18 = &off_1EA7145B8;
      }
      else if (v48 == 2)
      {
        sub_1DD2C3968((uint64_t)v46, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1DD2C3830);
        objc_msgSend(v7, sel_bounds);
        v13 = v12;
        v15 = v14;
        v16 = (objc_class *)type metadata accessor for ExpandingSpiralScene();
        v17 = objc_msgSend(objc_allocWithZone(v16), sel_initWithSize_, v13, v15);
        v18 = &off_1EA714D28;
      }
      else
      {
        sub_1DD2C3968((uint64_t)v46, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1DD2C3830);
        objc_msgSend(v7, sel_bounds);
        v25 = v24;
        v27 = v26;
        v16 = (objc_class *)type metadata accessor for OffsetGridScene();
        v17 = objc_msgSend(objc_allocWithZone(v16), sel_initWithSize_, v25, v27);
        v18 = &off_1EA715990;
      }
      v43 = v16;
      v44 = v18;
      v42[0] = v17;
      sub_1DD2E5EC4((uint64_t)v45);
      sub_1DD2E60AC((uint64_t)v42, (uint64_t)v45, &qword_1F03D1488);
    }
    sub_1DD2E5E7C((uint64_t)v45, (uint64_t)v41);
    if (v41[3])
    {
      sub_1DD2CD9CC((__int128 *)v41, (uint64_t)v42);
      v28 = v1[OBJC_IVAR____TtC11EmojiPoster24EmojiSceneViewController_currentSizeVariant];
      v29 = v49;
      if (v28 == 3 || v28 != v49)
      {
        v30 = (uint64_t)v43;
        v31 = v44;
        __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v42, (uint64_t)v43);
        LOBYTE(v41[0]) = v29;
        ((void (*)(id *, uint64_t, _UNKNOWN **))v31[5])(v41, v30, v31);
      }
      v32 = v50;
      v33 = (uint64_t)v43;
      v34 = v44;
      __swift_project_boxed_opaque_existential_1(v42, (uint64_t)v43);
      v35 = (_QWORD *)((uint64_t (*)(uint64_t, _UNKNOWN **))v34[1])(v33, v34);
      LOBYTE(v33) = sub_1DD2C6694(v32, v35);
      swift_bridgeObjectRelease();
      if ((v33 & 1) == 0)
      {
        v36 = (uint64_t)v43;
        v37 = v44;
        __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v42, (uint64_t)v43);
        v38 = (void (*)(uint64_t, uint64_t, _UNKNOWN **))v37[2];
        v39 = swift_bridgeObjectRetain();
        v38(v39, v36, v37);
      }
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v42);
      if (v11)
        goto LABEL_29;
    }
    else
    {
      sub_1DD2E5EC4((uint64_t)v41);
      if (v11)
      {
LABEL_29:
        sub_1DD2E5E7C((uint64_t)v45, (uint64_t)v42);
        swift_beginAccess();
        sub_1DD2E60F0((uint64_t)v42, v8);
        swift_endAccess();
        sub_1DD2E5E7C((uint64_t)v45, (uint64_t)v42);
        if (v43)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_1F03D14C8);
          sub_1DD2E6070();
          if ((swift_dynamicCast() & 1) != 0)
          {
            v40 = v41[0];
            objc_msgSend(v41[0], sel_setScaleMode_, 1);
            objc_msgSend(v7, sel_presentScene_, v40);

          }
          else
          {

          }
        }
        else
        {

          sub_1DD2E5EC4((uint64_t)v42);
        }
        sub_1DD2E5EC4((uint64_t)v45);
        goto LABEL_37;
      }
    }
    sub_1DD2E5EC4((uint64_t)v45);

LABEL_37:
    sub_1DD2C3968((uint64_t)v46, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1DD2C39CC);
    goto LABEL_38;
  }
  v3 = objc_msgSend(v1, sel_view);
  if (v3)
  {
    v4 = v3;
    objc_opt_self();
    v5 = (void *)swift_dynamicCastObjCClassUnconditional();
    v6 = objc_msgSend(v5, sel_scene);

    if (v6)
      objc_msgSend(v5, sel_presentScene_, 0);

  }
}

uint64_t type metadata accessor for EmojiSceneViewController()
{
  return objc_opt_self();
}

id sub_1DD2E51B8(void *a1, double a2, double a3)
{
  void *v3;
  uint64_t v7;
  void *v8;
  id v9;
  objc_super v11;
  _QWORD aBlock[6];

  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 16) = v3;
  *(double *)(v7 + 24) = a2;
  *(double *)(v7 + 32) = a3;
  aBlock[4] = sub_1DD2E5394;
  aBlock[5] = v7;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1DD2E53A0;
  aBlock[3] = &block_descriptor_7;
  v8 = _Block_copy(aBlock);
  v9 = v3;
  swift_release();
  objc_msgSend(a1, sel_animateAlongsideTransition_completion_, v8, 0);
  _Block_release(v8);
  v11.receiver = v9;
  v11.super_class = (Class)type metadata accessor for EmojiSceneViewController();
  return objc_msgSendSuper2(&v11, sel_viewWillTransitionToSize_withTransitionCoordinator_, a1, a2, a3);
}

void sub_1DD2E52AC(double a1, double a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  id v7;
  _BYTE v8[24];
  uint64_t v9;

  v6 = a4 + OBJC_IVAR____TtC11EmojiPoster24EmojiSceneViewController_scene;
  swift_beginAccess();
  sub_1DD2E5E7C(v6, (uint64_t)v8);
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1F03D14C8);
    sub_1DD2E6070();
    if ((swift_dynamicCast() & 1) != 0)
    {
      objc_msgSend(v7, sel_setSize_, a1, a2);

    }
  }
  else
  {
    sub_1DD2E5EC4((uint64_t)v8);
  }
}

uint64_t sub_1DD2E5370()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_1DD2E5394(uint64_t a1)
{
  uint64_t v1;

  sub_1DD2E52AC(*(double *)(v1 + 24), *(double *)(v1 + 32), a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_1DD2E53A0(uint64_t a1)
{
  void (*v1)(uint64_t);
  uint64_t v2;

  v1 = *(void (**)(uint64_t))(a1 + 32);
  swift_retain();
  v2 = swift_unknownObjectRetain();
  v1(v2);
  swift_release();
  return swift_unknownObjectRelease();
}

uint64_t block_copy_helper_7(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_7()
{
  return swift_release();
}

uint64_t sub_1DD2E5598()
{
  id v0;
  id v1;

  v0 = objc_msgSend((id)objc_opt_self(), sel_currentDevice);
  v1 = objc_msgSend(v0, sel_userInterfaceIdiom);

  if (v1)
    return 30;
  else
    return 26;
}

uint64_t sub_1DD2E5600(double a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v7;
  uint64_t v8;
  _BYTE v9[24];
  uint64_t v10;
  uint64_t v11;

  v3 = v1 + OBJC_IVAR____TtC11EmojiPoster24EmojiSceneViewController_scene;
  swift_beginAccess();
  sub_1DD2E5E7C(v3, (uint64_t)&v7);
  if (!v8)
    return sub_1DD2E5EC4((uint64_t)&v7);
  sub_1DD2CD9CC(&v7, (uint64_t)v9);
  v4 = v10;
  v5 = v11;
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v9, v10);
  (*(void (**)(uint64_t, uint64_t, double))(v5 + 88))(v4, v5, a1);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v9);
}

id EmojiSceneViewController.__allocating_init(nibName:bundle:)(uint64_t a1, uint64_t a2, void *a3)
{
  objc_class *v3;
  objc_class *v4;
  void *v6;
  id v7;

  v4 = v3;
  if (a2)
  {
    v6 = (void *)sub_1DD2F9DB4();
    swift_bridgeObjectRelease();
  }
  else
  {
    v6 = 0;
  }
  v7 = objc_msgSend(objc_allocWithZone(v4), sel_initWithNibName_bundle_, v6, a3);

  return v7;
}

id EmojiSceneViewController.init(nibName:bundle:)(uint64_t a1, uint64_t a2, void *a3)
{
  _BYTE *v3;
  uint64_t v6;
  uint64_t v7;
  id v8;
  char *v9;
  char *v10;
  void *v11;
  id v12;
  objc_super v14;
  _OWORD v15[8];

  v6 = (uint64_t)&v3[OBJC_IVAR____TtC11EmojiPoster24EmojiSceneViewController_configuration];
  sub_1DD2C618C(v15);
  sub_1DD2E60AC((uint64_t)v15, v6, &qword_1F03D0D80);
  v3[OBJC_IVAR____TtC11EmojiPoster24EmojiSceneViewController_currentLayoutStyle] = 3;
  v3[OBJC_IVAR____TtC11EmojiPoster24EmojiSceneViewController_currentSizeVariant] = 3;
  v7 = OBJC_IVAR____TtC11EmojiPoster24EmojiSceneViewController_overlayLayer;
  v8 = objc_allocWithZone(MEMORY[0x1E0CD27A8]);
  v9 = v3;
  *(_QWORD *)&v3[v7] = objc_msgSend(v8, sel_init);
  *(_QWORD *)&v9[OBJC_IVAR____TtC11EmojiPoster24EmojiSceneViewController_sceneView] = 0;
  *(_QWORD *)&v9[OBJC_IVAR____TtC11EmojiPoster24EmojiSceneViewController_wakeProgress] = 0x3FF0000000000000;
  *(_QWORD *)&v9[OBJC_IVAR____TtC11EmojiPoster24EmojiSceneViewController_unlockProgress] = 0x3FF0000000000000;
  v10 = &v9[OBJC_IVAR____TtC11EmojiPoster24EmojiSceneViewController_scene];
  *((_QWORD *)v10 + 4) = 0;
  *(_OWORD *)v10 = 0u;
  *((_OWORD *)v10 + 1) = 0u;

  if (a2)
  {
    v11 = (void *)sub_1DD2F9DB4();
    swift_bridgeObjectRelease();
  }
  else
  {
    v11 = 0;
  }
  v14.receiver = v9;
  v14.super_class = (Class)type metadata accessor for EmojiSceneViewController();
  v12 = objc_msgSendSuper2(&v14, sel_initWithNibName_bundle_, v11, a3);

  return v12;
}

id EmojiSceneViewController.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

id EmojiSceneViewController.init(coder:)(void *a1)
{
  _BYTE *v1;
  uint64_t v3;
  uint64_t v4;
  id v5;
  char *v6;
  char *v7;
  id v8;
  objc_super v10;
  _OWORD v11[8];

  v3 = (uint64_t)&v1[OBJC_IVAR____TtC11EmojiPoster24EmojiSceneViewController_configuration];
  sub_1DD2C618C(v11);
  sub_1DD2E60AC((uint64_t)v11, v3, &qword_1F03D0D80);
  v1[OBJC_IVAR____TtC11EmojiPoster24EmojiSceneViewController_currentLayoutStyle] = 3;
  v1[OBJC_IVAR____TtC11EmojiPoster24EmojiSceneViewController_currentSizeVariant] = 3;
  v4 = OBJC_IVAR____TtC11EmojiPoster24EmojiSceneViewController_overlayLayer;
  v5 = objc_allocWithZone(MEMORY[0x1E0CD27A8]);
  v6 = v1;
  *(_QWORD *)&v1[v4] = objc_msgSend(v5, sel_init);
  *(_QWORD *)&v6[OBJC_IVAR____TtC11EmojiPoster24EmojiSceneViewController_sceneView] = 0;
  *(_QWORD *)&v6[OBJC_IVAR____TtC11EmojiPoster24EmojiSceneViewController_wakeProgress] = 0x3FF0000000000000;
  *(_QWORD *)&v6[OBJC_IVAR____TtC11EmojiPoster24EmojiSceneViewController_unlockProgress] = 0x3FF0000000000000;
  v7 = &v6[OBJC_IVAR____TtC11EmojiPoster24EmojiSceneViewController_scene];
  *((_QWORD *)v7 + 4) = 0;
  *(_OWORD *)v7 = 0u;
  *((_OWORD *)v7 + 1) = 0u;

  v10.receiver = v6;
  v10.super_class = (Class)type metadata accessor for EmojiSceneViewController();
  v8 = objc_msgSendSuper2(&v10, sel_initWithCoder_, a1);

  return v8;
}

id EmojiSceneViewController.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for EmojiSceneViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1DD2E5B00@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  _BYTE v5[128];

  v3 = *v1 + OBJC_IVAR____TtC11EmojiPoster24EmojiSceneViewController_configuration;
  swift_beginAccess();
  sub_1DD2E60AC(v3, (uint64_t)v5, &qword_1F03D0D80);
  sub_1DD2E60AC((uint64_t)v5, a1, &qword_1F03D0D80);
  return sub_1DD2C3968((uint64_t)v5, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1DD2C3830);
}

void sub_1DD2E5B88(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE v4[128];
  _BYTE v5[128];

  v2 = *v1;
  sub_1DD2E60AC(a1, (uint64_t)v4, &qword_1F03D0D80);
  v3 = v2 + OBJC_IVAR____TtC11EmojiPoster24EmojiSceneViewController_configuration;
  swift_beginAccess();
  sub_1DD2E60AC(v3, (uint64_t)v5, &qword_1F03D0D80);
  sub_1DD2E60AC((uint64_t)v4, v3, &qword_1F03D0D80);
  sub_1DD2C3968((uint64_t)v5, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1DD2C39CC);
  sub_1DD2E4CE0();
}

void (*sub_1DD2E5C1C(uint64_t a1))(uint64_t a1, char a2)
{
  _QWORD *v1;

  *(_QWORD *)(a1 + 24) = *v1;
  swift_beginAccess();
  return sub_1DD2E4368;
}

double sub_1DD2E5C68()
{
  _QWORD *v0;
  uint64_t v1;

  v1 = *v0 + OBJC_IVAR____TtC11EmojiPoster24EmojiSceneViewController_wakeProgress;
  swift_beginAccess();
  return *(double *)v1;
}

uint64_t sub_1DD2E5CB0(double a1)
{
  return sub_1DD2E43DC(a1);
}

void (*sub_1DD2E5CD0(_QWORD *a1))(_QWORD *a1)
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1DD2E44CC(v2);
  return sub_1DD2C5E6C;
}

double sub_1DD2E5D18()
{
  _QWORD *v0;
  uint64_t v1;

  v1 = *v0 + OBJC_IVAR____TtC11EmojiPoster24EmojiSceneViewController_unlockProgress;
  swift_beginAccess();
  return *(double *)v1;
}

uint64_t sub_1DD2E5D60(double a1)
{
  _QWORD *v1;
  double *v3;
  uint64_t v4;
  uint64_t (*v5)();
  uint64_t v6;
  double v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE v11[32];

  v3 = (double *)(*v1 + OBJC_IVAR____TtC11EmojiPoster24EmojiSceneViewController_unlockProgress);
  swift_beginAccess();
  *v3 = a1;
  v5 = sub_1DD2E48E4();
  if (*(_QWORD *)(v4 + 24))
  {
    v6 = v4;
    swift_beginAccess();
    v7 = *v3;
    v8 = *(_QWORD *)(v6 + 24);
    v9 = *(_QWORD *)(v6 + 32);
    __swift_mutable_project_boxed_opaque_existential_1(v6, v8);
    (*(void (**)(uint64_t, uint64_t, double))(v9 + 88))(v8, v9, v7);
  }
  return ((uint64_t (*)(_BYTE *, _QWORD))v5)(v11, 0);
}

void (*sub_1DD2E5E20(_QWORD *a1))(_QWORD **a1, char a2)
{
  _QWORD *v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = malloc(0x48uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC11EmojiPoster24EmojiSceneViewController_unlockProgress;
  v3[7] = *v1;
  v3[8] = v4;
  swift_beginAccess();
  return sub_1DD2E482C;
}

uint64_t sub_1DD2E5E7C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F03D1488);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DD2E5EC4(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F03D1488);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

double sub_1DD2E5F0C@<D0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return keypath_get_4Tm(a1, &OBJC_IVAR____TtC11EmojiPoster24EmojiSceneViewController_wakeProgress, a2);
}

uint64_t sub_1DD2E5F18(double *a1)
{
  return sub_1DD2E43DC(*a1);
}

double sub_1DD2E5F3C@<D0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return keypath_get_4Tm(a1, &OBJC_IVAR____TtC11EmojiPoster24EmojiSceneViewController_unlockProgress, a2);
}

uint64_t method lookup function for EmojiSceneViewController()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of EmojiSceneViewController.configuration.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x90))();
}

uint64_t dispatch thunk of EmojiSceneViewController.configuration.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x98))();
}

uint64_t dispatch thunk of EmojiSceneViewController.configuration.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xA0))();
}

uint64_t dispatch thunk of EmojiSceneViewController.wakeProgress.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xF0))();
}

uint64_t dispatch thunk of EmojiSceneViewController.wakeProgress.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xF8))();
}

uint64_t dispatch thunk of EmojiSceneViewController.wakeProgress.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x100))();
}

uint64_t dispatch thunk of EmojiSceneViewController.unlockProgress.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x108))();
}

uint64_t dispatch thunk of EmojiSceneViewController.unlockProgress.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x110))();
}

uint64_t dispatch thunk of EmojiSceneViewController.unlockProgress.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x118))();
}

uint64_t dispatch thunk of EmojiSceneViewController.setUnlockTransitionProgress(_:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x140))();
}

unint64_t sub_1DD2E6070()
{
  unint64_t result;

  result = qword_1F03D14D0;
  if (!qword_1F03D14D0)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1F03D14D0);
  }
  return result;
}

uint64_t sub_1DD2E60AC(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1DD2E60F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1F03D1488);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DD2E6148()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + OBJC_IVAR____TtC11EmojiPoster33BackgroundConfigurationController_delegate;
  swift_beginAccess();
  return MEMORY[0x1DF0D8130](v1);
}

uint64_t sub_1DD2E6194(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;

  v4 = v2 + OBJC_IVAR____TtC11EmojiPoster33BackgroundConfigurationController_delegate;
  swift_beginAccess();
  *(_QWORD *)(v4 + 8) = a2;
  swift_unknownObjectWeakAssign();
  return swift_unknownObjectRelease();
}

void (*sub_1DD2E61FC(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC11EmojiPoster33BackgroundConfigurationController_delegate;
  v3[5] = v1;
  v3[6] = v4;
  v5 = v1 + v4;
  swift_beginAccess();
  v6 = MEMORY[0x1DF0D8130](v5);
  v7 = *(_QWORD *)(v5 + 8);
  v3[3] = v6;
  v3[4] = v7;
  return sub_1DD2D51E0;
}

uint64_t sub_1DD2E6270@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  char v11;

  v3 = *a1 + OBJC_IVAR____TtC11EmojiPoster33BackgroundConfigurationController_backgroundConfiguration;
  swift_beginAccess();
  v4 = *(_QWORD *)(v3 + 40);
  v5 = *(_QWORD *)(v3 + 48);
  v6 = *(_QWORD *)(v3 + 56);
  v7 = *(_QWORD *)(v3 + 64);
  v8 = *(_QWORD *)(v3 + 72);
  v9 = *(_QWORD *)(v3 + 80);
  v10 = *(_BYTE *)(v3 + 88);
  v11 = *(_BYTE *)(v3 + 89);
  *(_BYTE *)a2 = *(_BYTE *)v3;
  *(_OWORD *)(a2 + 8) = *(_OWORD *)(v3 + 8);
  *(_OWORD *)(a2 + 24) = *(_OWORD *)(v3 + 24);
  *(_QWORD *)(a2 + 40) = v4;
  *(_QWORD *)(a2 + 48) = v5;
  *(_QWORD *)(a2 + 56) = v6;
  *(_QWORD *)(a2 + 64) = v7;
  *(_QWORD *)(a2 + 72) = v8;
  *(_QWORD *)(a2 + 80) = v9;
  *(_BYTE *)(a2 + 88) = v10;
  *(_BYTE *)(a2 + 89) = v11;
  return sub_1DD2BF7A4(v4, v5, v6, v7, v8);
}

void sub_1DD2E62FC(char *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  char v17;
  __int128 v18;
  char v19;

  v19 = *a1;
  v18 = *(_OWORD *)(a1 + 8);
  v2 = *((_QWORD *)a1 + 3);
  v3 = *((_QWORD *)a1 + 4);
  v4 = *((_QWORD *)a1 + 5);
  v5 = *((_QWORD *)a1 + 6);
  v6 = *((_QWORD *)a1 + 7);
  v7 = *((_QWORD *)a1 + 8);
  v8 = *((_QWORD *)a1 + 9);
  v9 = *((_QWORD *)a1 + 10);
  v10 = *a2 + OBJC_IVAR____TtC11EmojiPoster33BackgroundConfigurationController_backgroundConfiguration;
  v16 = a1[89];
  v17 = a1[88];
  swift_beginAccess();
  v11 = *(_QWORD *)(v10 + 40);
  v12 = *(_QWORD *)(v10 + 48);
  v14 = *(_QWORD *)(v10 + 64);
  v15 = *(_QWORD *)(v10 + 56);
  v13 = *(_QWORD *)(v10 + 72);
  *(_BYTE *)v10 = v19;
  *(_OWORD *)(v10 + 8) = v18;
  *(_QWORD *)(v10 + 24) = v2;
  *(_QWORD *)(v10 + 32) = v3;
  *(_QWORD *)(v10 + 40) = v4;
  *(_QWORD *)(v10 + 48) = v5;
  *(_QWORD *)(v10 + 56) = v6;
  *(_QWORD *)(v10 + 64) = v7;
  *(_QWORD *)(v10 + 72) = v8;
  *(_QWORD *)(v10 + 80) = v9;
  *(_BYTE *)(v10 + 88) = v17;
  *(_BYTE *)(v10 + 89) = v16;
  sub_1DD2BF7A4(v4, v5, v6, v7, v8);
  sub_1DD2BF928(v11, v12, v15, v14, v13);
  sub_1DD2E82FC();
}

uint64_t sub_1DD2E6414@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  char v11;

  v3 = v1 + OBJC_IVAR____TtC11EmojiPoster33BackgroundConfigurationController_backgroundConfiguration;
  swift_beginAccess();
  v4 = *(_QWORD *)(v3 + 40);
  v5 = *(_QWORD *)(v3 + 48);
  v6 = *(_QWORD *)(v3 + 56);
  v7 = *(_QWORD *)(v3 + 64);
  v8 = *(_QWORD *)(v3 + 72);
  v9 = *(_QWORD *)(v3 + 80);
  v10 = *(_BYTE *)(v3 + 88);
  v11 = *(_BYTE *)(v3 + 89);
  *(_BYTE *)a1 = *(_BYTE *)v3;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(v3 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(v3 + 24);
  *(_QWORD *)(a1 + 40) = v4;
  *(_QWORD *)(a1 + 48) = v5;
  *(_QWORD *)(a1 + 56) = v6;
  *(_QWORD *)(a1 + 64) = v7;
  *(_QWORD *)(a1 + 72) = v8;
  *(_QWORD *)(a1 + 80) = v9;
  *(_BYTE *)(a1 + 88) = v10;
  *(_BYTE *)(a1 + 89) = v11;
  return sub_1DD2BF7A4(v4, v5, v6, v7, v8);
}

void sub_1DD2E649C(char *a1)
{
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;

  v2 = *a1;
  v3 = *((_QWORD *)a1 + 3);
  v4 = *((_QWORD *)a1 + 4);
  v16 = *(_OWORD *)(a1 + 40);
  v17 = *(_OWORD *)(a1 + 8);
  v5 = *((_QWORD *)a1 + 7);
  v15 = *((_OWORD *)a1 + 4);
  v6 = *((_QWORD *)a1 + 10);
  v7 = a1[88];
  v8 = a1[89];
  v9 = v1 + OBJC_IVAR____TtC11EmojiPoster33BackgroundConfigurationController_backgroundConfiguration;
  swift_beginAccess();
  v10 = *(_QWORD *)(v9 + 40);
  v11 = *(_QWORD *)(v9 + 48);
  v12 = *(_QWORD *)(v9 + 56);
  v13 = *(_QWORD *)(v9 + 64);
  v14 = *(_QWORD *)(v9 + 72);
  *(_BYTE *)v9 = v2;
  *(_OWORD *)(v9 + 8) = v17;
  *(_QWORD *)(v9 + 24) = v3;
  *(_QWORD *)(v9 + 32) = v4;
  *(_OWORD *)(v9 + 40) = v16;
  *(_QWORD *)(v9 + 56) = v5;
  *(_OWORD *)(v9 + 64) = v15;
  *(_QWORD *)(v9 + 80) = v6;
  *(_BYTE *)(v9 + 88) = v7;
  *(_BYTE *)(v9 + 89) = v8;
  sub_1DD2BF928(v10, v11, v12, v13, v14);
  sub_1DD2E82FC();
}

void (*sub_1DD2E656C(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1DD2E65B4;
}

void sub_1DD2E65B4(uint64_t a1, char a2)
{
  swift_endAccess();
  if ((a2 & 1) == 0)
    sub_1DD2E82FC();
}

id BackgroundConfigurationController.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

id BackgroundConfigurationController.init()()
{
  char *v0;
  uint64_t v1;
  void *v2;
  char *v3;
  id v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  void *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  objc_super v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD v22[2];
  EmojiPoster::EmojiPosterBackgroundColor v23;
  EmojiPoster::EmojiPosterBackgroundColor v24;

  v22[1] = *MEMORY[0x1E0C80C00];
  *(_QWORD *)&v0[OBJC_IVAR____TtC11EmojiPoster33BackgroundConfigurationController_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  v1 = OBJC_IVAR____TtC11EmojiPoster33BackgroundConfigurationController_effectView;
  v2 = (void *)objc_opt_self();
  v3 = v0;
  v4 = objc_msgSend(v2, sel_effectWithStyle_, 4);
  v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3F58]), sel_initWithEffect_, v4);

  *(_QWORD *)&v0[v1] = v5;
  v6 = OBJC_IVAR____TtC11EmojiPoster33BackgroundConfigurationController_verticalStackView;
  *(_QWORD *)&v3[v6] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3CA8]), sel_init);
  v7 = OBJC_IVAR____TtC11EmojiPoster33BackgroundConfigurationController_styleSegmentedControl;
  *(_QWORD *)&v3[v7] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3C58]), sel_init);
  v8 = &v3[OBJC_IVAR____TtC11EmojiPoster33BackgroundConfigurationController_editingGradientProperties];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDB61AF8);
  v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1DD2FE420;
  v10 = (void *)objc_opt_self();
  v23 = EmojiPosterBackgroundColor.init(_:)((UIColor)objc_msgSend(v10, sel_lightGrayColor));
  v24 = EmojiPosterBackgroundColor.init(_:)((UIColor)objc_msgSend(v10, sel_blackColor, v23.red, v23.green, v23.blue, v23.alpha));
  *v8 = 0;
  *((_QWORD *)v8 + 1) = 0;
  *((_QWORD *)v8 + 2) = 0;
  *((_QWORD *)v8 + 3) = 0x3FF0000000000000;
  *((_QWORD *)v8 + 4) = v9;
  *((_QWORD *)v8 + 5) = &unk_1EA712718;
  *(_QWORD *)&v3[OBJC_IVAR____TtC11EmojiPoster33BackgroundConfigurationController_gradientController] = 0;
  v11 = objc_msgSend(v10, sel_whiteColor, v24.red, v24.green, v24.blue, v24.alpha);
  v21 = 0;
  v22[0] = 0;
  v19 = 0;
  v20 = 0;
  objc_msgSend(v11, sel_getRed_green_blue_alpha_, v22, &v21, &v20, &v19);

  v13 = v21;
  v12 = v22[0];
  v15 = v19;
  v14 = v20;
  v16 = &v3[OBJC_IVAR____TtC11EmojiPoster33BackgroundConfigurationController_backgroundConfiguration];
  *v16 = 0;
  *((_QWORD *)v16 + 1) = v12;
  *((_QWORD *)v16 + 2) = v13;
  *((_QWORD *)v16 + 3) = v14;
  *((_QWORD *)v16 + 4) = v15;
  *(_OWORD *)(v16 + 40) = 0u;
  *(_OWORD *)(v16 + 56) = 0u;
  *(_OWORD *)(v16 + 72) = 0u;
  *((_WORD *)v16 + 44) = 0;

  v18.receiver = v3;
  v18.super_class = (Class)type metadata accessor for BackgroundConfigurationController();
  return objc_msgSendSuper2(&v18, sel_initWithNibName_bundle_, 0, 0);
}

id BackgroundConfigurationController.__allocating_init(backgroundConfiguration:)(char *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_allocWithZone(v1);
  return BackgroundConfigurationController.init(backgroundConfiguration:)(a1);
}

id BackgroundConfigurationController.init(backgroundConfiguration:)(char *a1)
{
  char *v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;
  uint64_t v9;
  void *v10;
  char *v11;
  id v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  void *v18;
  char *v19;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  objc_super v24;
  EmojiPoster::EmojiPosterBackgroundColor v25;

  v2 = *a1;
  v3 = *((_QWORD *)a1 + 3);
  v4 = *((_QWORD *)a1 + 4);
  v22 = *(_OWORD *)(a1 + 40);
  v23 = *(_OWORD *)(a1 + 8);
  v21 = *(_OWORD *)(a1 + 56);
  v5 = *((_QWORD *)a1 + 9);
  v6 = *((_QWORD *)a1 + 10);
  v7 = a1[88];
  v8 = a1[89];
  *(_QWORD *)&v1[OBJC_IVAR____TtC11EmojiPoster33BackgroundConfigurationController_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  v9 = OBJC_IVAR____TtC11EmojiPoster33BackgroundConfigurationController_effectView;
  v10 = (void *)objc_opt_self();
  v11 = v1;
  v12 = objc_msgSend(v10, sel_effectWithStyle_, 4);
  v13 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3F58]), sel_initWithEffect_, v12);

  *(_QWORD *)&v1[v9] = v13;
  v14 = OBJC_IVAR____TtC11EmojiPoster33BackgroundConfigurationController_verticalStackView;
  *(_QWORD *)&v11[v14] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3CA8]), sel_init);
  v15 = OBJC_IVAR____TtC11EmojiPoster33BackgroundConfigurationController_styleSegmentedControl;
  *(_QWORD *)&v11[v15] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3C58]), sel_init);
  v16 = &v11[OBJC_IVAR____TtC11EmojiPoster33BackgroundConfigurationController_editingGradientProperties];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDB61AF8);
  v17 = swift_allocObject();
  *(_OWORD *)(v17 + 16) = xmmword_1DD2FE420;
  v18 = (void *)objc_opt_self();
  v25 = EmojiPosterBackgroundColor.init(_:)((UIColor)objc_msgSend(v18, sel_lightGrayColor));
  EmojiPosterBackgroundColor.init(_:)((UIColor)objc_msgSend(v18, sel_blackColor, v25.red, v25.green, v25.blue, v25.alpha));
  *v16 = 0;
  *((_QWORD *)v16 + 1) = 0;
  *((_QWORD *)v16 + 2) = 0;
  *((_QWORD *)v16 + 3) = 0x3FF0000000000000;
  *((_QWORD *)v16 + 4) = v17;
  *((_QWORD *)v16 + 5) = &unk_1EA712748;
  *(_QWORD *)&v11[OBJC_IVAR____TtC11EmojiPoster33BackgroundConfigurationController_gradientController] = 0;
  v19 = &v11[OBJC_IVAR____TtC11EmojiPoster33BackgroundConfigurationController_backgroundConfiguration];
  *v19 = v2;
  *(_OWORD *)(v19 + 8) = v23;
  *((_QWORD *)v19 + 3) = v3;
  *((_QWORD *)v19 + 4) = v4;
  *(_OWORD *)(v19 + 40) = v22;
  *(_OWORD *)(v19 + 56) = v21;
  *((_QWORD *)v19 + 9) = v5;
  *((_QWORD *)v19 + 10) = v6;
  v19[88] = v7;
  v19[89] = v8;

  v24.receiver = v11;
  v24.super_class = (Class)type metadata accessor for BackgroundConfigurationController();
  return objc_msgSendSuper2(&v24, sel_initWithNibName_bundle_, 0, 0);
}

id sub_1DD2E6B00(void *a1)
{
  char *v1;
  uint64_t v3;
  void *v4;
  char *v5;
  id v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  void *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  id v19;
  objc_super v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD v25[2];
  EmojiPoster::EmojiPosterBackgroundColor v26;
  EmojiPoster::EmojiPosterBackgroundColor v27;

  v25[1] = *MEMORY[0x1E0C80C00];
  *(_QWORD *)&v1[OBJC_IVAR____TtC11EmojiPoster33BackgroundConfigurationController_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  v3 = OBJC_IVAR____TtC11EmojiPoster33BackgroundConfigurationController_effectView;
  v4 = (void *)objc_opt_self();
  v5 = v1;
  v6 = objc_msgSend(v4, sel_effectWithStyle_, 4);
  v7 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3F58]), sel_initWithEffect_, v6);

  *(_QWORD *)&v1[v3] = v7;
  v8 = OBJC_IVAR____TtC11EmojiPoster33BackgroundConfigurationController_verticalStackView;
  *(_QWORD *)&v5[v8] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3CA8]), sel_init);
  v9 = OBJC_IVAR____TtC11EmojiPoster33BackgroundConfigurationController_styleSegmentedControl;
  *(_QWORD *)&v5[v9] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3C58]), sel_init);
  v10 = &v5[OBJC_IVAR____TtC11EmojiPoster33BackgroundConfigurationController_editingGradientProperties];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDB61AF8);
  v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_1DD2FE420;
  v12 = (void *)objc_opt_self();
  v26 = EmojiPosterBackgroundColor.init(_:)((UIColor)objc_msgSend(v12, sel_lightGrayColor));
  v27 = EmojiPosterBackgroundColor.init(_:)((UIColor)objc_msgSend(v12, sel_blackColor, v26.red, v26.green, v26.blue, v26.alpha));
  *v10 = 0;
  *((_QWORD *)v10 + 1) = 0;
  *((_QWORD *)v10 + 2) = 0;
  *((_QWORD *)v10 + 3) = 0x3FF0000000000000;
  *((_QWORD *)v10 + 4) = v11;
  *((_QWORD *)v10 + 5) = &unk_1EA712778;
  *(_QWORD *)&v5[OBJC_IVAR____TtC11EmojiPoster33BackgroundConfigurationController_gradientController] = 0;
  v13 = objc_msgSend(v12, sel_whiteColor, v27.red, v27.green, v27.blue, v27.alpha);
  v24 = 0;
  v25[0] = 0;
  v22 = 0;
  v23 = 0;
  objc_msgSend(v13, sel_getRed_green_blue_alpha_, v25, &v24, &v23, &v22);

  v15 = v24;
  v14 = v25[0];
  v17 = v22;
  v16 = v23;
  v18 = &v5[OBJC_IVAR____TtC11EmojiPoster33BackgroundConfigurationController_backgroundConfiguration];
  *v18 = 0;
  *((_QWORD *)v18 + 1) = v14;
  *((_QWORD *)v18 + 2) = v15;
  *((_QWORD *)v18 + 3) = v16;
  *((_QWORD *)v18 + 4) = v17;
  *(_OWORD *)(v18 + 40) = 0u;
  *(_OWORD *)(v18 + 56) = 0u;
  *(_OWORD *)(v18 + 72) = 0u;
  *((_WORD *)v18 + 44) = 0;

  v21.receiver = v5;
  v21.super_class = (Class)type metadata accessor for BackgroundConfigurationController();
  v19 = objc_msgSendSuper2(&v21, sel_initWithCoder_, a1);

  return v19;
}

void sub_1DD2E6D9C()
{
  char *v0;
  id v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  char *v6;
  id v7;
  void *v8;
  uint64_t v9;
  id v10;
  void *v11;
  id v12;
  id v13;
  id v14;
  id v15;
  void *v16;
  id v17;
  id v18;
  id v19;
  id v20;
  void *v21;
  id v22;
  id v23;
  id v24;
  id v25;
  void *v26;
  id v27;
  id v28;
  id v29;
  id v30;
  void *v31;
  id v32;
  id v33;
  id v34;
  id v35;
  void *v36;
  id v37;
  id v38;
  id v39;
  id v40;
  void *v41;
  id v42;
  id v43;
  id v44;
  id v45;
  void *v46;
  void *v47;
  id v48;
  id v49;
  id v50;
  id v51;
  id v52;
  void *v53;
  objc_super v54;

  v54.receiver = v0;
  v54.super_class = (Class)type metadata accessor for BackgroundConfigurationController();
  objc_msgSendSuper2(&v54, sel_viewDidLoad);
  v1 = objc_msgSend(v0, sel_view);
  if (!v1)
  {
    __break(1u);
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  v2 = v1;
  v3 = *(void **)&v0[OBJC_IVAR____TtC11EmojiPoster33BackgroundConfigurationController_effectView];
  objc_msgSend(v1, sel_addSubview_, v3);

  objc_msgSend(v3, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  sub_1DD2E74A0();
  sub_1DD2E73D8();
  v4 = *(void **)&v0[OBJC_IVAR____TtC11EmojiPoster33BackgroundConfigurationController_verticalStackView];
  v5 = *(void **)&v0[OBJC_IVAR____TtC11EmojiPoster33BackgroundConfigurationController_styleSegmentedControl];
  objc_msgSend(v4, sel_addArrangedSubview_, v5);
  v6 = &v0[OBJC_IVAR____TtC11EmojiPoster33BackgroundConfigurationController_backgroundConfiguration];
  swift_beginAccess();
  if (*((_QWORD *)v6 + 9))
    sub_1DD2E812C();
  v7 = objc_msgSend(v0, sel_view);
  if (!v7)
    goto LABEL_15;
  v8 = v7;
  objc_msgSend(v7, sel_addSubview_, v4);

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDB61620);
  v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1DD2FEFB0;
  v10 = objc_msgSend(v0, sel_view);
  if (!v10)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v11 = v10;
  v12 = objc_msgSend(v10, sel_leadingAnchor);

  v13 = objc_msgSend(v4, sel_leadingAnchor);
  v14 = objc_msgSend(v12, sel_constraintEqualToAnchor_constant_, v13, -20.0);

  *(_QWORD *)(v9 + 32) = v14;
  v15 = objc_msgSend(v0, sel_view);
  if (!v15)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  v16 = v15;
  v17 = objc_msgSend(v15, sel_trailingAnchor);

  v18 = objc_msgSend(v4, sel_trailingAnchor);
  v19 = objc_msgSend(v17, sel_constraintEqualToAnchor_constant_, v18, 20.0);

  *(_QWORD *)(v9 + 40) = v19;
  v20 = objc_msgSend(v0, sel_view);
  if (!v20)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  v21 = v20;
  v22 = objc_msgSend(v20, sel_topAnchor);

  v23 = objc_msgSend(v4, sel_topAnchor);
  v24 = objc_msgSend(v22, sel_constraintEqualToAnchor_, v23);

  *(_QWORD *)(v9 + 48) = v24;
  v25 = objc_msgSend(v0, sel_view);
  if (!v25)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v26 = v25;
  v27 = objc_msgSend(v25, sel_bottomAnchor);

  v28 = objc_msgSend(v4, sel_bottomAnchor);
  v29 = objc_msgSend(v27, sel_constraintEqualToAnchor_, v28);

  *(_QWORD *)(v9 + 56) = v29;
  v30 = objc_msgSend(v0, sel_view);
  if (!v30)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  v31 = v30;
  v32 = objc_msgSend(v30, sel_leadingAnchor);

  v33 = objc_msgSend(v3, sel_leadingAnchor);
  v34 = objc_msgSend(v32, sel_constraintEqualToAnchor_, v33);

  *(_QWORD *)(v9 + 64) = v34;
  v35 = objc_msgSend(v0, sel_view);
  if (!v35)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v36 = v35;
  v37 = objc_msgSend(v35, sel_trailingAnchor);

  v38 = objc_msgSend(v3, sel_trailingAnchor);
  v39 = objc_msgSend(v37, sel_constraintEqualToAnchor_, v38);

  *(_QWORD *)(v9 + 72) = v39;
  v40 = objc_msgSend(v0, sel_view);
  if (!v40)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v41 = v40;
  v42 = objc_msgSend(v40, sel_topAnchor);

  v43 = objc_msgSend(v3, sel_topAnchor);
  v44 = objc_msgSend(v42, sel_constraintEqualToAnchor_, v43);

  *(_QWORD *)(v9 + 80) = v44;
  v45 = objc_msgSend(v0, sel_view);
  if (v45)
  {
    v46 = v45;
    v47 = (void *)objc_opt_self();
    v48 = objc_msgSend(v46, sel_bottomAnchor);

    v49 = objc_msgSend(v3, sel_bottomAnchor);
    v50 = objc_msgSend(v48, sel_constraintEqualToAnchor_, v49);

    *(_QWORD *)(v9 + 88) = v50;
    v51 = objc_msgSend(v5, sel_heightAnchor);
    v52 = objc_msgSend(v51, sel_constraintGreaterThanOrEqualToConstant_, 35.0);

    *(_QWORD *)(v9 + 96) = v52;
    sub_1DD2F9EF8();
    sub_1DD2CDA0C(0, &qword_1EDB61510);
    v53 = (void *)sub_1DD2F9EC8();
    swift_bridgeObjectRelease();
    objc_msgSend(v47, sel_activateConstraints_, v53);

    return;
  }
LABEL_23:
  __break(1u);
}

void sub_1DD2E73D8()
{
  char *v0;
  void *v1;
  id v2;
  id v3;

  v1 = *(void **)&v0[OBJC_IVAR____TtC11EmojiPoster33BackgroundConfigurationController_verticalStackView];
  objc_msgSend(v1, sel_setAxis_, 1);
  objc_msgSend(v1, sel_setDistribution_, 2);
  objc_msgSend(v1, sel_setLayoutMarginsRelativeArrangement_, 1);
  objc_msgSend(v1, sel_setSpacing_, 10.0);
  objc_msgSend(v1, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  v2 = objc_msgSend(v0, sel_view);
  if (v2)
  {
    v3 = v2;
    objc_msgSend(v2, sel_addSubview_, v1);

  }
  else
  {
    __break(1u);
  }
}

void sub_1DD2E74A0()
{
  uint64_t v0;
  uint64_t ObjCClassFromMetadata;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;
  void *v7;
  id v8;
  void *v9;
  void *v10;
  uint64_t v11;
  id v12;

  v0 = swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_1DD2CDA0C(0, &qword_1F03D10F8);
  type metadata accessor for BackgroundViewController();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v2 = (void *)objc_opt_self();
  v3 = objc_msgSend(v2, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1DD2F9C34();

  swift_retain();
  v10 = (void *)sub_1DD2F9FAC();
  v4 = objc_msgSend(v2, sel_bundleForClass_, ObjCClassFromMetadata, 0, 0, 1, sub_1DD2E8A7C, v0);
  sub_1DD2F9C34();

  swift_retain();
  v5 = (void *)sub_1DD2F9FAC();
  v6 = objc_msgSend(v2, sel_bundleForClass_, ObjCClassFromMetadata, 0, 0, 0, sub_1DD2E8A84, v0);
  sub_1DD2F9C34();

  swift_retain();
  v7 = (void *)sub_1DD2F9FAC();
  v8 = objc_msgSend(v2, sel_bundleForClass_, ObjCClassFromMetadata, 0, 0, 0, sub_1DD2E8A8C, v0);
  sub_1DD2F9C34();

  swift_retain();
  v12 = (id)sub_1DD2F9FAC();
  v9 = *(void **)(v11 + OBJC_IVAR____TtC11EmojiPoster33BackgroundConfigurationController_styleSegmentedControl);
  objc_msgSend(v9, sel_insertSegmentWithAction_atIndex_animated_, v10, 0, 0, 0, 0, 0, sub_1DD2E8A94, v0);
  objc_msgSend(v9, sel_insertSegmentWithAction_atIndex_animated_, v5, 1, 0);
  objc_msgSend(v9, sel_insertSegmentWithAction_atIndex_animated_, v7, 2, 0);
  objc_msgSend(v9, sel_insertSegmentWithAction_atIndex_animated_, v12, 3, 0);
  objc_msgSend(v9, sel_sizeToFit);
  objc_msgSend(v9, sel_setSelectedSegmentIndex_, 0);
  objc_msgSend(v9, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  swift_release();

}

void sub_1DD2E7918(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  id v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  char v23;
  void (*v24)(char *, char *, uint64_t, uint64_t);
  uint64_t ObjectType;
  char v26[8];
  __int128 v27;
  __int128 v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  char v36;

  v2 = a2 + 16;
  swift_beginAccess();
  v3 = MEMORY[0x1DF0D8130](v2);
  if (v3)
  {
    v4 = (char *)v3;
    v5 = v3 + OBJC_IVAR____TtC11EmojiPoster33BackgroundConfigurationController_delegate;
    swift_beginAccess();
    if (MEMORY[0x1DF0D8130](v5))
    {
      v6 = *(_QWORD *)(v5 + 8);
      v7 = &v4[OBJC_IVAR____TtC11EmojiPoster33BackgroundConfigurationController_backgroundConfiguration];
      swift_beginAccess();
      v8 = *((_QWORD *)v7 + 5);
      v9 = *((_QWORD *)v7 + 6);
      v10 = *((_QWORD *)v7 + 7);
      v11 = *((_QWORD *)v7 + 8);
      v12 = *((_QWORD *)v7 + 9);
      *v7 = 0;
      *((_WORD *)v7 + 44) = 0;
      *(_OWORD *)(v7 + 40) = 0u;
      *(_OWORD *)(v7 + 56) = 0u;
      *(_OWORD *)(v7 + 72) = 0u;
      sub_1DD2BF928(v8, v9, v10, v11, v12);
      sub_1DD2E82FC();
      v13 = *(void **)&v4[OBJC_IVAR____TtC11EmojiPoster33BackgroundConfigurationController_gradientController];
      if (!v13)
      {
LABEL_6:
        ObjectType = swift_getObjectType();
        v16 = *((_QWORD *)v7 + 5);
        v17 = *((_QWORD *)v7 + 6);
        v18 = *((_QWORD *)v7 + 7);
        v19 = *((_QWORD *)v7 + 8);
        v20 = *((_QWORD *)v7 + 9);
        v21 = *((_QWORD *)v7 + 10);
        v22 = v7[88];
        v23 = v7[89];
        v26[0] = *v7;
        v27 = *(_OWORD *)(v7 + 8);
        v28 = *(_OWORD *)(v7 + 24);
        v29 = v16;
        v30 = v17;
        v31 = v18;
        v32 = v19;
        v33 = v20;
        v34 = v21;
        v35 = v22;
        v36 = v23;
        v24 = *(void (**)(char *, char *, uint64_t, uint64_t))(v6 + 16);
        sub_1DD2BF7A4(v16, v17, v18, v19, v20);
        v24(v4, v26, ObjectType, v6);
        swift_unknownObjectRelease();

        sub_1DD2BF928(v16, v17, v18, v19, v20);
        return;
      }
      v14 = objc_msgSend(v13, sel_view);
      if (v14)
      {
        v15 = v14;
        objc_msgSend(v14, sel_setHidden_, 1);

        goto LABEL_6;
      }
      __break(1u);
    }
    else
    {

    }
  }
}

void sub_1DD2E7AFC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  void *v17;
  id v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  char v27;
  void (*v28)(char *, char *, uint64_t, uint64_t);
  uint64_t ObjectType;
  uint64_t v30;
  char v31[8];
  __int128 v32;
  __int128 v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  char v41;

  v2 = a2 + 16;
  swift_beginAccess();
  v3 = MEMORY[0x1DF0D8130](v2);
  if (v3)
  {
    v4 = (char *)v3;
    v5 = v3 + OBJC_IVAR____TtC11EmojiPoster33BackgroundConfigurationController_delegate;
    swift_beginAccess();
    if (MEMORY[0x1DF0D8130](v5))
    {
      v30 = *(_QWORD *)(v5 + 8);
      sub_1DD2E812C();
      v6 = &v4[OBJC_IVAR____TtC11EmojiPoster33BackgroundConfigurationController_backgroundConfiguration];
      swift_beginAccess();
      v7 = v4[OBJC_IVAR____TtC11EmojiPoster33BackgroundConfigurationController_editingGradientProperties];
      v9 = *(_QWORD *)&v4[OBJC_IVAR____TtC11EmojiPoster33BackgroundConfigurationController_editingGradientProperties
                        + 24];
      v8 = *(_QWORD *)&v4[OBJC_IVAR____TtC11EmojiPoster33BackgroundConfigurationController_editingGradientProperties
                        + 32];
      v10 = *(_QWORD *)&v4[OBJC_IVAR____TtC11EmojiPoster33BackgroundConfigurationController_editingGradientProperties
                         + 40];
      v11 = *((_QWORD *)v6 + 5);
      v12 = *((_QWORD *)v6 + 6);
      v13 = *((_QWORD *)v6 + 7);
      v14 = *((_QWORD *)v6 + 8);
      v15 = *((_QWORD *)v6 + 9);
      v16 = *(_OWORD *)&v4[OBJC_IVAR____TtC11EmojiPoster33BackgroundConfigurationController_editingGradientProperties
                         + 8];
      *v6 = 1;
      *((_QWORD *)v6 + 5) = v7;
      *((_OWORD *)v6 + 3) = v16;
      *((_QWORD *)v6 + 8) = v9;
      *((_QWORD *)v6 + 9) = v8;
      *((_QWORD *)v6 + 10) = v10;
      *((_WORD *)v6 + 44) = 0;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1DD2BF928(v11, v12, v13, v14, v15);
      sub_1DD2E82FC();
      v17 = *(void **)&v4[OBJC_IVAR____TtC11EmojiPoster33BackgroundConfigurationController_gradientController];
      if (!v17)
      {
LABEL_6:
        ObjectType = swift_getObjectType();
        v20 = *((_QWORD *)v6 + 5);
        v21 = *((_QWORD *)v6 + 6);
        v22 = *((_QWORD *)v6 + 7);
        v23 = *((_QWORD *)v6 + 8);
        v25 = *((_QWORD *)v6 + 9);
        v24 = *((_QWORD *)v6 + 10);
        v26 = v6[88];
        v27 = v6[89];
        v31[0] = *v6;
        v32 = *(_OWORD *)(v6 + 8);
        v33 = *(_OWORD *)(v6 + 24);
        v34 = v20;
        v35 = v21;
        v36 = v22;
        v37 = v23;
        v38 = v25;
        v39 = v24;
        v40 = v26;
        v41 = v27;
        v28 = *(void (**)(char *, char *, uint64_t, uint64_t))(v30 + 16);
        sub_1DD2BF7A4(v20, v21, v22, v23, v25);
        v28(v4, v31, ObjectType, v30);
        swift_unknownObjectRelease();

        sub_1DD2BF928(v20, v21, v22, v23, v25);
        return;
      }
      v18 = objc_msgSend(v17, sel_view);
      if (v18)
      {
        v19 = v18;
        objc_msgSend(v18, sel_setHidden_, 0);

        goto LABEL_6;
      }
      __break(1u);
    }
    else
    {

    }
  }
}

void sub_1DD2E7D34(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  id v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  char v23;
  void (*v24)(char *, char *, uint64_t, uint64_t);
  uint64_t ObjectType;
  char v26[8];
  __int128 v27;
  __int128 v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  char v36;

  v2 = a2 + 16;
  swift_beginAccess();
  v3 = MEMORY[0x1DF0D8130](v2);
  if (v3)
  {
    v4 = (char *)v3;
    v5 = v3 + OBJC_IVAR____TtC11EmojiPoster33BackgroundConfigurationController_delegate;
    swift_beginAccess();
    if (MEMORY[0x1DF0D8130](v5))
    {
      v6 = *(_QWORD *)(v5 + 8);
      v7 = &v4[OBJC_IVAR____TtC11EmojiPoster33BackgroundConfigurationController_backgroundConfiguration];
      swift_beginAccess();
      v8 = *((_QWORD *)v7 + 5);
      v9 = *((_QWORD *)v7 + 6);
      v10 = *((_QWORD *)v7 + 7);
      v11 = *((_QWORD *)v7 + 8);
      v12 = *((_QWORD *)v7 + 9);
      *v7 = 3;
      *((_QWORD *)v7 + 5) = 1;
      *((_QWORD *)v7 + 6) = 0;
      *((_QWORD *)v7 + 7) = 0;
      *((_QWORD *)v7 + 8) = 0x3FF0000000000000;
      *((_QWORD *)v7 + 9) = &unk_1EA7127A8;
      *((_QWORD *)v7 + 10) = &unk_1EA712808;
      *((_WORD *)v7 + 44) = 0;
      sub_1DD2BF928(v8, v9, v10, v11, v12);
      sub_1DD2E82FC();
      v13 = *(void **)&v4[OBJC_IVAR____TtC11EmojiPoster33BackgroundConfigurationController_gradientController];
      if (!v13)
      {
LABEL_6:
        ObjectType = swift_getObjectType();
        v16 = *((_QWORD *)v7 + 5);
        v17 = *((_QWORD *)v7 + 6);
        v18 = *((_QWORD *)v7 + 7);
        v19 = *((_QWORD *)v7 + 8);
        v20 = *((_QWORD *)v7 + 9);
        v21 = *((_QWORD *)v7 + 10);
        v22 = v7[88];
        v23 = v7[89];
        v26[0] = *v7;
        v27 = *(_OWORD *)(v7 + 8);
        v28 = *(_OWORD *)(v7 + 24);
        v29 = v16;
        v30 = v17;
        v31 = v18;
        v32 = v19;
        v33 = v20;
        v34 = v21;
        v35 = v22;
        v36 = v23;
        v24 = *(void (**)(char *, char *, uint64_t, uint64_t))(v6 + 16);
        sub_1DD2BF7A4(v16, v17, v18, v19, v20);
        v24(v4, v26, ObjectType, v6);
        swift_unknownObjectRelease();

        sub_1DD2BF928(v16, v17, v18, v19, v20);
        return;
      }
      v14 = objc_msgSend(v13, sel_view);
      if (v14)
      {
        v15 = v14;
        objc_msgSend(v14, sel_setHidden_, 1);

        goto LABEL_6;
      }
      __break(1u);
    }
    else
    {

    }
  }
}

void sub_1DD2E7F30(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  id v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  char v23;
  void (*v24)(char *, char *, uint64_t, uint64_t);
  uint64_t ObjectType;
  char v26[8];
  __int128 v27;
  __int128 v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  char v36;

  v2 = a2 + 16;
  swift_beginAccess();
  v3 = MEMORY[0x1DF0D8130](v2);
  if (v3)
  {
    v4 = (char *)v3;
    v5 = v3 + OBJC_IVAR____TtC11EmojiPoster33BackgroundConfigurationController_delegate;
    swift_beginAccess();
    if (MEMORY[0x1DF0D8130](v5))
    {
      v6 = *(_QWORD *)(v5 + 8);
      v7 = &v4[OBJC_IVAR____TtC11EmojiPoster33BackgroundConfigurationController_backgroundConfiguration];
      swift_beginAccess();
      v8 = *((_QWORD *)v7 + 5);
      v9 = *((_QWORD *)v7 + 6);
      v10 = *((_QWORD *)v7 + 7);
      v11 = *((_QWORD *)v7 + 8);
      v12 = *((_QWORD *)v7 + 9);
      *v7 = 4;
      *((_QWORD *)v7 + 5) = 1;
      *((_QWORD *)v7 + 6) = 0;
      *((_QWORD *)v7 + 7) = 0;
      *((_QWORD *)v7 + 8) = 0x3FF0000000000000;
      *((_QWORD *)v7 + 9) = &unk_1EA712838;
      *((_QWORD *)v7 + 10) = &unk_1EA7128B8;
      *((_WORD *)v7 + 44) = 0;
      sub_1DD2BF928(v8, v9, v10, v11, v12);
      sub_1DD2E82FC();
      v13 = *(void **)&v4[OBJC_IVAR____TtC11EmojiPoster33BackgroundConfigurationController_gradientController];
      if (!v13)
      {
LABEL_6:
        ObjectType = swift_getObjectType();
        v16 = *((_QWORD *)v7 + 5);
        v17 = *((_QWORD *)v7 + 6);
        v18 = *((_QWORD *)v7 + 7);
        v19 = *((_QWORD *)v7 + 8);
        v20 = *((_QWORD *)v7 + 9);
        v21 = *((_QWORD *)v7 + 10);
        v22 = v7[88];
        v23 = v7[89];
        v26[0] = *v7;
        v27 = *(_OWORD *)(v7 + 8);
        v28 = *(_OWORD *)(v7 + 24);
        v29 = v16;
        v30 = v17;
        v31 = v18;
        v32 = v19;
        v33 = v20;
        v34 = v21;
        v35 = v22;
        v36 = v23;
        v24 = *(void (**)(char *, char *, uint64_t, uint64_t))(v6 + 16);
        sub_1DD2BF7A4(v16, v17, v18, v19, v20);
        v24(v4, v26, ObjectType, v6);
        swift_unknownObjectRelease();

        sub_1DD2BF928(v16, v17, v18, v19, v20);
        return;
      }
      v14 = objc_msgSend(v13, sel_view);
      if (v14)
      {
        v15 = v14;
        objc_msgSend(v14, sel_setHidden_, 1);

        goto LABEL_6;
      }
      __break(1u);
    }
    else
    {

    }
  }
}

void sub_1DD2E812C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  void *v10;
  char *v11;
  void *v12;
  id v13;
  void *v14;
  uint64_t v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v1 = OBJC_IVAR____TtC11EmojiPoster33BackgroundConfigurationController_gradientController;
  if (!*(_QWORD *)(v0 + OBJC_IVAR____TtC11EmojiPoster33BackgroundConfigurationController_gradientController))
  {
    v2 = v0;
    v3 = v0 + OBJC_IVAR____TtC11EmojiPoster33BackgroundConfigurationController_editingGradientProperties;
    v4 = *(_BYTE *)(v0 + OBJC_IVAR____TtC11EmojiPoster33BackgroundConfigurationController_editingGradientProperties);
    v5 = *(_QWORD *)(v0 + OBJC_IVAR____TtC11EmojiPoster33BackgroundConfigurationController_editingGradientProperties + 24);
    v6 = *(_QWORD *)(v0 + OBJC_IVAR____TtC11EmojiPoster33BackgroundConfigurationController_editingGradientProperties + 32);
    v7 = *(_QWORD *)(v3 + 40);
    LOBYTE(v15) = v4;
    v16 = *(_OWORD *)(v3 + 8);
    v17 = v5;
    v18 = v6;
    v19 = v7;
    objc_allocWithZone((Class)type metadata accessor for GradientConfigurationController());
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v8 = GradientConfigurationController.init(gradientProperties:)((char *)&v15);
    v9 = &v8[OBJC_IVAR____TtC11EmojiPoster31GradientConfigurationController_delegate];
    swift_beginAccess();
    *((_QWORD *)v9 + 1) = &protocol witness table for BackgroundConfigurationController;
    swift_unknownObjectWeakAssign();
    v10 = *(void **)(v2 + v1);
    *(_QWORD *)(v2 + v1) = v8;
    v11 = v8;

    v12 = *(void **)(v2 + OBJC_IVAR____TtC11EmojiPoster33BackgroundConfigurationController_verticalStackView);
    v13 = objc_msgSend(v11, sel_view, v15, v16, v17, v18, v19);
    if (v13)
    {
      v14 = v13;
      objc_msgSend(v12, sel_insertArrangedSubview_atIndex_, v13, 0);

    }
    else
    {
      __break(1u);
    }
  }
}

uint64_t sub_1DD2E826C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t ObjectType;

  v4 = v2 + OBJC_IVAR____TtC11EmojiPoster33BackgroundConfigurationController_delegate;
  swift_beginAccess();
  result = MEMORY[0x1DF0D8130](v4);
  if (result)
  {
    v6 = *(_QWORD *)(v4 + 8);
    ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 8))(v2, a2, ObjectType, v6);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_1DD2E82F4(uint64_t a1, unsigned __int8 *a2)
{
  return sub_1DD2E8678(a2);
}

void sub_1DD2E82FC()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + OBJC_IVAR____TtC11EmojiPoster33BackgroundConfigurationController_backgroundConfiguration;
  swift_beginAccess();
  __asm { BR              X10 }
}

void sub_1DD2E8348()
{
  uint64_t v0;
  void *v1;
  id v2;
  void *v3;

  objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC11EmojiPoster33BackgroundConfigurationController_styleSegmentedControl), sel_setSelectedSegmentIndex_, 1);
  v1 = *(void **)(v0 + OBJC_IVAR____TtC11EmojiPoster33BackgroundConfigurationController_gradientController);
  if (v1)
  {
    v2 = objc_msgSend(v1, sel_view);
    if (!v2)
    {
      __break(1u);
      JUMPOUT(0x1DD2E84A0);
    }
    v3 = v2;
    objc_msgSend(v2, sel_setHidden_, 0);

  }
}

uint64_t type metadata accessor for BackgroundConfigurationController()
{
  return objc_opt_self();
}

id BackgroundConfigurationController.__allocating_init(nibName:bundle:)(uint64_t a1, uint64_t a2, void *a3)
{
  objc_class *v3;
  objc_class *v4;
  void *v6;
  id v7;

  v4 = v3;
  if (a2)
  {
    v6 = (void *)sub_1DD2F9DB4();
    swift_bridgeObjectRelease();
  }
  else
  {
    v6 = 0;
  }
  v7 = objc_msgSend(objc_allocWithZone(v4), sel_initWithNibName_bundle_, v6, a3);

  return v7;
}

void BackgroundConfigurationController.init(nibName:bundle:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id BackgroundConfigurationController.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for BackgroundConfigurationController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1DD2E8678(unsigned __int8 *a1)
{
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t result;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  char v27;
  __int128 v28;
  void (*v29)(uint64_t, _BYTE *, uint64_t, uint64_t);
  uint64_t v30;
  __int128 v31;
  char v32;
  uint64_t ObjectType;
  _BYTE v34[8];
  __int128 v35;
  __int128 v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  char v44;

  v2 = *a1;
  v30 = *a1;
  v3 = *((_QWORD *)a1 + 1);
  v4 = *((_QWORD *)a1 + 2);
  v5 = *((_QWORD *)a1 + 3);
  v7 = *((_QWORD *)a1 + 4);
  v6 = *((_QWORD *)a1 + 5);
  v8 = (char *)(v1 + OBJC_IVAR____TtC11EmojiPoster33BackgroundConfigurationController_backgroundConfiguration);
  swift_beginAccess();
  v32 = *v8;
  v31 = *(_OWORD *)(v8 + 8);
  v9 = *((_QWORD *)v8 + 3);
  v10 = *((_QWORD *)v8 + 4);
  v11 = v1 + OBJC_IVAR____TtC11EmojiPoster33BackgroundConfigurationController_editingGradientProperties;
  *(_BYTE *)v11 = v2;
  *(_QWORD *)(v11 + 8) = v3;
  *(_QWORD *)(v11 + 16) = v4;
  *(_QWORD *)(v11 + 24) = v5;
  *(_QWORD *)(v11 + 32) = v7;
  *(_QWORD *)(v11 + 40) = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v12 = *((_QWORD *)v8 + 5);
  v13 = *((_QWORD *)v8 + 6);
  v14 = *((_QWORD *)v8 + 7);
  v15 = *((_QWORD *)v8 + 8);
  v16 = *((_QWORD *)v8 + 9);
  *v8 = v32;
  *(_OWORD *)(v8 + 8) = v31;
  *((_QWORD *)v8 + 3) = v9;
  *((_QWORD *)v8 + 4) = v10;
  *((_QWORD *)v8 + 5) = v30;
  *((_QWORD *)v8 + 6) = v3;
  *((_QWORD *)v8 + 7) = v4;
  *((_QWORD *)v8 + 8) = v5;
  *((_QWORD *)v8 + 9) = v7;
  *((_QWORD *)v8 + 10) = v6;
  *((_WORD *)v8 + 44) = 0;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1DD2BF928(v12, v13, v14, v15, v16);
  sub_1DD2E82FC();
  v17 = v1 + OBJC_IVAR____TtC11EmojiPoster33BackgroundConfigurationController_delegate;
  swift_beginAccess();
  result = MEMORY[0x1DF0D8130](v17);
  if (result)
  {
    v19 = *(_QWORD *)(v17 + 8);
    ObjectType = swift_getObjectType();
    v20 = *((_QWORD *)v8 + 5);
    v21 = *((_QWORD *)v8 + 6);
    v22 = *((_QWORD *)v8 + 7);
    v23 = *((_QWORD *)v8 + 8);
    v25 = *((_QWORD *)v8 + 9);
    v24 = *((_QWORD *)v8 + 10);
    v26 = v8[88];
    v27 = v8[89];
    v34[0] = *v8;
    v28 = *(_OWORD *)(v8 + 24);
    v35 = *(_OWORD *)(v8 + 8);
    v36 = v28;
    v37 = v20;
    v38 = v21;
    v39 = v22;
    v40 = v23;
    v41 = v25;
    v42 = v24;
    v43 = v26;
    v44 = v27;
    v29 = *(void (**)(uint64_t, _BYTE *, uint64_t, uint64_t))(v19 + 16);
    sub_1DD2BF7A4(v20, v21, v22, v23, v25);
    v29(v1, v34, ObjectType, v19);
    swift_unknownObjectRelease();
    return sub_1DD2BF928(v20, v21, v22, v23, v25);
  }
  return result;
}

uint64_t sub_1DD2E8894@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v5;

  v3 = *a1 + OBJC_IVAR____TtC11EmojiPoster33BackgroundConfigurationController_delegate;
  swift_beginAccess();
  result = MEMORY[0x1DF0D8130](v3);
  v5 = *(_QWORD *)(v3 + 8);
  *a2 = result;
  a2[1] = v5;
  return result;
}

uint64_t sub_1DD2E88EC(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(a1 + 8);
  v3 = *a2 + OBJC_IVAR____TtC11EmojiPoster33BackgroundConfigurationController_delegate;
  swift_beginAccess();
  *(_QWORD *)(v3 + 8) = v2;
  return swift_unknownObjectWeakAssign();
}

uint64_t dispatch thunk of BackgroundConfigurationControllerDelegate.backgroundConfigurationController(_:presentColorPicker:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t dispatch thunk of BackgroundConfigurationControllerDelegate.backgroundConfigurationController(_:didUpdateWithConfiguration:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

uint64_t method lookup function for BackgroundConfigurationController()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of BackgroundConfigurationController.delegate.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x88))();
}

uint64_t dispatch thunk of BackgroundConfigurationController.delegate.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x90))();
}

uint64_t dispatch thunk of BackgroundConfigurationController.delegate.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x98))();
}

uint64_t dispatch thunk of BackgroundConfigurationController.backgroundConfiguration.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xA0))();
}

uint64_t dispatch thunk of BackgroundConfigurationController.backgroundConfiguration.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xA8))();
}

uint64_t dispatch thunk of BackgroundConfigurationController.backgroundConfiguration.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xB0))();
}

uint64_t dispatch thunk of BackgroundConfigurationController.__allocating_init(backgroundConfiguration:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 232))();
}

uint64_t dispatch thunk of BackgroundConfigurationController.gradientConfigurationController(_:presentColorPicker:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x108))();
}

uint64_t dispatch thunk of BackgroundConfigurationController.gradientConfigurationController(_:didUpdateGradientProperties:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x110))();
}

uint64_t sub_1DD2E8A58()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void sub_1DD2E8A7C(uint64_t a1)
{
  uint64_t v1;

  sub_1DD2E7918(a1, v1);
}

void sub_1DD2E8A84(uint64_t a1)
{
  uint64_t v1;

  sub_1DD2E7AFC(a1, v1);
}

void sub_1DD2E8A8C(uint64_t a1)
{
  uint64_t v1;

  sub_1DD2E7D34(a1, v1);
}

void sub_1DD2E8A94(uint64_t a1)
{
  uint64_t v1;

  sub_1DD2E7F30(a1, v1);
}

uint64_t sub_1DD2E8AA0(uint64_t a1)
{
  uint64_t result;
  int v3;
  char v4;
  uint64_t v5;

  result = sub_1DD2E9D60(a1);
  if ((v4 & 1) != 0)
    goto LABEL_8;
  if (*(_DWORD *)(a1 + 36) != v3)
  {
    __break(1u);
LABEL_8:
    __break(1u);
    return result;
  }
  if (result == 1 << *(_BYTE *)(a1 + 32))
    return 0;
  v5 = sub_1DD2E9E94(result, v3, 0, a1);
  swift_bridgeObjectRetain();
  return v5;
}

id sub_1DD2E8B1C()
{
  id result;

  result = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3658]), sel_initWithRed_green_blue_alpha_, 0.811764706, 0.768627451, 0.721568627, 1.0);
  qword_1F03D1538 = (uint64_t)result;
  return result;
}

uint64_t sub_1DD2E8B68(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t result;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  int64_t v14;
  void *v15;
  void *v16;
  id v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  int64_t v28;
  uint64_t v29;
  int64_t v30;
  _OWORD v31[4];
  _OWORD v32[2];
  _OWORD v33[3];

  if (*(_QWORD *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EDB61540);
    v2 = sub_1DD2FA120();
  }
  else
  {
    v2 = MEMORY[0x1E0DEE9E0];
  }
  v29 = a1 + 64;
  v3 = -1 << *(_BYTE *)(a1 + 32);
  if (-v3 < 64)
    v4 = ~(-1 << -(char)v3);
  else
    v4 = -1;
  v5 = v4 & *(_QWORD *)(a1 + 64);
  v28 = (unint64_t)(63 - v3) >> 6;
  v6 = v2 + 64;
  swift_bridgeObjectRetain();
  result = swift_retain();
  v30 = 0;
  while (1)
  {
    if (v5)
    {
      v9 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      v10 = v9 | (v30 << 6);
      goto LABEL_28;
    }
    v11 = v30 + 1;
    if (__OFADD__(v30, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v11 >= v28)
      goto LABEL_37;
    v12 = *(_QWORD *)(v29 + 8 * v11);
    v13 = v30 + 1;
    if (!v12)
    {
      v13 = v30 + 2;
      if (v30 + 2 >= v28)
        goto LABEL_37;
      v12 = *(_QWORD *)(v29 + 8 * v13);
      if (!v12)
      {
        v13 = v30 + 3;
        if (v30 + 3 >= v28)
          goto LABEL_37;
        v12 = *(_QWORD *)(v29 + 8 * v13);
        if (!v12)
        {
          v13 = v30 + 4;
          if (v30 + 4 >= v28)
            goto LABEL_37;
          v12 = *(_QWORD *)(v29 + 8 * v13);
          if (!v12)
            break;
        }
      }
    }
LABEL_27:
    v5 = (v12 - 1) & v12;
    v10 = __clz(__rbit64(v12)) + (v13 << 6);
    v30 = v13;
LABEL_28:
    v16 = *(void **)(*(_QWORD *)(a1 + 56) + 8 * v10);
    *(_QWORD *)&v33[0] = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8 * v10);
    v15 = *(void **)&v33[0];
    *(_QWORD *)&v32[0] = v16;
    sub_1DD2CDA0C(0, (unint64_t *)&qword_1EDB61538);
    v17 = v15;
    v18 = v16;
    swift_dynamicCast();
    v19 = *(_QWORD *)&v33[0];
    sub_1DD2E3428((_OWORD *)((char *)v33 + 8), v31);
    sub_1DD2E3428(v31, v33);
    sub_1DD2E3428(v33, v32);
    sub_1DD2F9DE4();
    sub_1DD2FA270();
    sub_1DD2F9E44();
    v20 = sub_1DD2FA294();
    result = swift_bridgeObjectRelease();
    v21 = -1 << *(_BYTE *)(v2 + 32);
    v22 = v20 & ~v21;
    v23 = v22 >> 6;
    if (((-1 << v22) & ~*(_QWORD *)(v6 + 8 * (v22 >> 6))) != 0)
    {
      v8 = __clz(__rbit64((-1 << v22) & ~*(_QWORD *)(v6 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v24 = 0;
      v25 = (unint64_t)(63 - v21) >> 6;
      do
      {
        if (++v23 == v25 && (v24 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        v26 = v23 == v25;
        if (v23 == v25)
          v23 = 0;
        v24 |= v26;
        v27 = *(_QWORD *)(v6 + 8 * v23);
      }
      while (v27 == -1);
      v8 = __clz(__rbit64(~v27)) + (v23 << 6);
    }
    *(_QWORD *)(v6 + ((v8 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v8;
    *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v8) = v19;
    result = (uint64_t)sub_1DD2E3428(v32, (_OWORD *)(*(_QWORD *)(v2 + 56) + 32 * v8));
    ++*(_QWORD *)(v2 + 16);
  }
  v14 = v30 + 5;
  if (v30 + 5 >= v28)
  {
LABEL_37:
    swift_release();
    sub_1DD2EC17C();
    return v2;
  }
  v12 = *(_QWORD *)(v29 + 8 * v14);
  if (v12)
  {
    v13 = v30 + 5;
    goto LABEL_27;
  }
  while (1)
  {
    v13 = v14 + 1;
    if (__OFADD__(v14, 1))
      break;
    if (v13 >= v28)
      goto LABEL_37;
    v12 = *(_QWORD *)(v29 + 8 * v13);
    ++v14;
    if (v12)
      goto LABEL_27;
  }
LABEL_39:
  __break(1u);
  return result;
}

void sub_1DD2E8F18(void *a1, double a2, double a3, double a4, double a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  id v14;
  void *v15;
  id v16;

  v14 = objc_msgSend((id)objc_opt_self(), sel_whiteColor);
  objc_msgSend(v14, sel_set);

  objc_msgSend(a1, sel_fillRect_, a2, a3, a4, a5);
  v15 = (void *)sub_1DD2F9DB4();
  sub_1DD2E8B68(a8);
  type metadata accessor for Key(0);
  sub_1DD2CB85C();
  v16 = (id)sub_1DD2F9D78();
  swift_bridgeObjectRelease();
  objc_msgSend(v15, sel_drawInRect_withAttributes_, v16, a2, a3, a4, a5);

}

uint64_t sub_1DD2E904C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  double v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  id v13;
  uint64_t result;
  _QWORD v15[6];
  _QWORD v16[2];

  v6 = *(_QWORD *)(a1 + 16);
  v7 = (unsigned __int128)(v6 * (__int128)66) >> 64;
  v8 = 66 * v6;
  if (v7 == v8 >> 63)
  {
    v1 = a1;
    v5 = (double)v8;
    v16[0] = 0;
    v16[1] = 0;
    v3 = 0x4049000000000000;
    v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3828]), sel_initWithSize_, (double)v8, 50.0);
    if (qword_1EDB61D08 == -1)
      goto LABEL_3;
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  v9 = qword_1EDB64C40;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = 0;
  *(_QWORD *)(v10 + 24) = 0;
  *(double *)(v10 + 32) = v5;
  *(_QWORD *)(v10 + 40) = v3;
  *(_QWORD *)(v10 + 48) = v1;
  *(_QWORD *)(v10 + 56) = v2;
  *(_QWORD *)(v10 + 64) = v16;
  *(_QWORD *)(v10 + 72) = v9;
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = sub_1DD2EBE9C;
  *(_QWORD *)(v11 + 24) = v10;
  v15[4] = sub_1DD2C6594;
  v15[5] = v11;
  v15[0] = MEMORY[0x1E0C809B0];
  v15[1] = 1107296256;
  v15[2] = sub_1DD2CB738;
  v15[3] = &block_descriptor_6;
  v12 = _Block_copy(v15);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_release();
  v13 = objc_msgSend(v4, sel_imageWithActions_, v12);

  _Block_release(v12);
  LOBYTE(v12) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  result = swift_release();
  if ((v12 & 1) == 0)
    return (uint64_t)v13;
  __break(1u);
  return result;
}

id sub_1DD2E9238(void *a1, uint64_t a2, double a3, double a4, double a5, double a6, uint64_t a7, double *a8, uint64_t a9)
{
  id v17;
  id result;
  uint64_t *v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t *v22;
  uint64_t v23;
  double v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  double v34;
  char v35;
  uint64_t v36;
  unint64_t *v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  double *v43;
  double v44;
  double *v45;
  id v46;
  void *v47;
  double v48;
  double v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  double v57;
  char v58;
  uint64_t v59;
  unint64_t *v60;
  unint64_t v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  double *v66;
  double v67;
  double *v68;
  id v69;
  void *v70;
  double v71;
  double v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  unint64_t v79;
  double v80;
  char v81;
  uint64_t v82;
  unint64_t *v83;
  unint64_t v84;
  unint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  double *v89;
  double v90;
  id v91;
  void *v92;
  double v93;
  double v94;
  uint64_t v95;
  uint64_t *v96;
  uint64_t *v97;
  uint64_t v98;
  uint64_t *v99;
  uint64_t v100;
  id v101;
  void *v102;
  uint64_t v103;
  double *v104;
  double v105[4];
  uint64_t v106;

  v17 = objc_msgSend((id)objc_opt_self(), sel_whiteColor);
  objc_msgSend(v17, sel_set);

  v101 = a1;
  result = objc_msgSend(a1, sel_fillRect_, a3, a4, a5, a6);
  v98 = *(_QWORD *)(a2 + 16);
  if (!v98)
    return result;
  v100 = a2 + 32;
  v19 = (uint64_t *)(a9 + OBJC_IVAR____TtC11EmojiPoster15EmojiBackground_dominantColors);
  v20 = OBJC_IVAR____TtC11EmojiPoster15EmojiBackground_colors;
  v21 = (uint64_t *)(a9 + OBJC_IVAR____TtC11EmojiPoster15EmojiBackground_contextualColors);
  v22 = (uint64_t *)(a9 + OBJC_IVAR____TtC11EmojiPoster15EmojiBackground_accentColors);
  swift_bridgeObjectRetain();
  v99 = v19;
  swift_beginAccess();
  v97 = v21;
  swift_beginAccess();
  v96 = v22;
  swift_beginAccess();
  v23 = 0;
  v24 = MEMORY[0x1E0DEE9D8];
  v104 = a8;
  while (1)
  {
    v103 = v23;
    v25 = (uint64_t *)(v100 + 16 * v23);
    v26 = *v25;
    v27 = v25[1];
    swift_bridgeObjectRetain();
    v102 = (void *)sub_1DD2EBEC0(v26, v27);
    objc_msgSend(v102, sel_drawAtPoint_, *a8, a8[1]);
    *a8 = *a8 + 50.0;
    v28 = sub_1DD2DFC18();
    v106 = MEMORY[0x1E0DEE9E8];
    v29 = *v99;
    swift_bridgeObjectRetain();
    v30 = sub_1DD2E2D64(v28);
    v32 = v31;
    swift_bridgeObjectRelease();
    if (*(_QWORD *)(v29 + 16))
    {
      v33 = sub_1DD2E21E0(v30, v32);
      v34 = v24;
      if ((v35 & 1) != 0)
      {
        v34 = *(double *)(*(_QWORD *)(v29 + 56) + 8 * v33);
        swift_bridgeObjectRetain();
      }
    }
    else
    {
      v34 = v24;
    }
    swift_bridgeObjectRelease();
    result = (id)swift_bridgeObjectRelease();
    v36 = *(_QWORD *)(*(_QWORD *)&v34 + 16);
    if (v36)
      break;
LABEL_14:
    swift_bridgeObjectRelease();
    v41 = sub_1DD2F2058(v106);
    swift_bridgeObjectRelease();
    v42 = *(_QWORD *)(v41 + 16);
    if (v42)
    {
      v105[0] = v24;
      sub_1DD2FA0A8();
      v43 = (double *)(v41 + 56);
      do
      {
        objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3658]), sel_initWithRed_green_blue_alpha_, *(v43 - 3) / 255.0, *(v43 - 2) / 255.0, *(v43 - 1) / 255.0, *v43 / 255.0);
        sub_1DD2FA090();
        sub_1DD2FA0B4();
        sub_1DD2FA0C0();
        sub_1DD2FA09C();
        v43 += 4;
        --v42;
      }
      while (v42);
      v44 = v105[0];
      result = (id)swift_release();
      v45 = v104;
      v24 = MEMORY[0x1E0DEE9D8];
      if (!(*(_QWORD *)&v44 >> 62))
      {
LABEL_18:
        if (!*(_QWORD *)((*(_QWORD *)&v44 & 0xFFFFFFFFFFFFF8) + 0x10))
          goto LABEL_25;
        goto LABEL_19;
      }
    }
    else
    {
      result = (id)swift_release();
      v44 = v24;
      v45 = v104;
      if (!(*(_QWORD *)&v24 >> 62))
        goto LABEL_18;
    }
    swift_bridgeObjectRetain();
    v50 = sub_1DD2FA0F0();
    result = (id)swift_bridgeObjectRelease();
    if (!v50)
    {
LABEL_25:
      swift_bridgeObjectRelease();
      goto LABEL_26;
    }
LABEL_19:
    if ((*(_QWORD *)&v44 & 0xC000000000000001) != 0)
    {
      v46 = (id)MEMORY[0x1DF0D75E4](0, *(_QWORD *)&v44);
    }
    else
    {
      if (!*(_QWORD *)((*(_QWORD *)&v44 & 0xFFFFFFFFFFFFF8) + 0x10))
        goto LABEL_80;
      v46 = *(id *)(*(_QWORD *)&v44 + 32);
    }
    v47 = v46;
    swift_bridgeObjectRelease();
    v48 = *v45;
    v49 = v45[1];
    objc_msgSend(v47, sel_set);
    objc_msgSend(v101, sel_fillRect_, v48, v49, 8.0, 40.0);

LABEL_26:
    *v45 = *v45 + 8.0;
    v51 = sub_1DD2DFC18();
    v106 = MEMORY[0x1E0DEE9E8];
    v52 = *v97;
    swift_bridgeObjectRetain();
    v53 = sub_1DD2E2D64(v51);
    v55 = v54;
    swift_bridgeObjectRelease();
    if (*(_QWORD *)(v52 + 16))
    {
      v56 = sub_1DD2E21E0(v53, v55);
      v57 = v24;
      if ((v58 & 1) != 0)
      {
        v57 = *(double *)(*(_QWORD *)(v52 + 56) + 8 * v56);
        swift_bridgeObjectRetain();
      }
    }
    else
    {
      v57 = v24;
    }
    swift_bridgeObjectRelease();
    result = (id)swift_bridgeObjectRelease();
    v59 = *(_QWORD *)(*(_QWORD *)&v57 + 16);
    if (v59)
    {
      v60 = (unint64_t *)(*(_QWORD *)&v57 + 32);
      do
      {
        v62 = *v60++;
        v61 = v62;
        if ((v62 & 0x8000000000000000) != 0)
          goto LABEL_76;
        v63 = *(_QWORD *)(a9 + v20);
        if (v61 >= *(_QWORD *)(v63 + 16))
          goto LABEL_77;
        result = (id)sub_1DD2E0470(v105, *(double *)(v63 + 32 * v61 + 32), *(double *)(v63 + 32 * v61 + 40), *(double *)(v63 + 32 * v61 + 48), *(double *)(v63 + 32 * v61 + 56));
      }
      while (--v59);
    }
    swift_bridgeObjectRelease();
    v64 = sub_1DD2F2058(v106);
    swift_bridgeObjectRelease();
    v65 = *(_QWORD *)(v64 + 16);
    if (v65)
    {
      v105[0] = v24;
      sub_1DD2FA0A8();
      v66 = (double *)(v64 + 56);
      do
      {
        objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3658]), sel_initWithRed_green_blue_alpha_, *(v66 - 3) / 255.0, *(v66 - 2) / 255.0, *(v66 - 1) / 255.0, *v66 / 255.0);
        sub_1DD2FA090();
        sub_1DD2FA0B4();
        sub_1DD2FA0C0();
        sub_1DD2FA09C();
        v66 += 4;
        --v65;
      }
      while (v65);
      v67 = v105[0];
      result = (id)swift_release();
      v68 = v104;
      v24 = MEMORY[0x1E0DEE9D8];
      if (!(*(_QWORD *)&v67 >> 62))
      {
LABEL_39:
        if (!*(_QWORD *)((*(_QWORD *)&v67 & 0xFFFFFFFFFFFFF8) + 0x10))
          goto LABEL_46;
        goto LABEL_40;
      }
    }
    else
    {
      result = (id)swift_release();
      v67 = v24;
      v68 = v104;
      if (!(*(_QWORD *)&v24 >> 62))
        goto LABEL_39;
    }
    swift_bridgeObjectRetain();
    v73 = sub_1DD2FA0F0();
    result = (id)swift_bridgeObjectRelease();
    if (!v73)
    {
LABEL_46:
      swift_bridgeObjectRelease();
      goto LABEL_47;
    }
LABEL_40:
    if ((*(_QWORD *)&v67 & 0xC000000000000001) != 0)
    {
      v69 = (id)MEMORY[0x1DF0D75E4](0, *(_QWORD *)&v67);
    }
    else
    {
      if (!*(_QWORD *)((*(_QWORD *)&v67 & 0xFFFFFFFFFFFFF8) + 0x10))
        goto LABEL_81;
      v69 = *(id *)(*(_QWORD *)&v67 + 32);
    }
    v70 = v69;
    swift_bridgeObjectRelease();
    v71 = *v68;
    v72 = v68[1];
    objc_msgSend(v70, sel_set);
    objc_msgSend(v101, sel_fillRect_, v71, v72, 4.0, 40.0);

LABEL_47:
    *v68 = *v68 + 4.0;
    v74 = sub_1DD2DFC18();
    v106 = MEMORY[0x1E0DEE9E8];
    v75 = *v96;
    swift_bridgeObjectRetain();
    v76 = sub_1DD2E2D64(v74);
    v78 = v77;
    swift_bridgeObjectRelease();
    if (*(_QWORD *)(v75 + 16))
    {
      v79 = sub_1DD2E21E0(v76, v78);
      v80 = v24;
      if ((v81 & 1) != 0)
      {
        v80 = *(double *)(*(_QWORD *)(v75 + 56) + 8 * v79);
        swift_bridgeObjectRetain();
      }
    }
    else
    {
      v80 = v24;
    }
    swift_bridgeObjectRelease();
    result = (id)swift_bridgeObjectRelease();
    v82 = *(_QWORD *)(*(_QWORD *)&v80 + 16);
    if (v82)
    {
      v83 = (unint64_t *)(*(_QWORD *)&v80 + 32);
      do
      {
        v85 = *v83++;
        v84 = v85;
        if ((v85 & 0x8000000000000000) != 0)
          goto LABEL_78;
        v86 = *(_QWORD *)(a9 + v20);
        if (v84 >= *(_QWORD *)(v86 + 16))
          goto LABEL_79;
        result = (id)sub_1DD2E0470(v105, *(double *)(v86 + 32 * v84 + 32), *(double *)(v86 + 32 * v84 + 40), *(double *)(v86 + 32 * v84 + 48), *(double *)(v86 + 32 * v84 + 56));
      }
      while (--v82);
    }
    swift_bridgeObjectRelease();
    v87 = sub_1DD2F2058(v106);
    swift_bridgeObjectRelease();
    v88 = *(_QWORD *)(v87 + 16);
    if (v88)
    {
      v105[0] = v24;
      sub_1DD2FA0A8();
      v89 = (double *)(v87 + 56);
      do
      {
        objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3658]), sel_initWithRed_green_blue_alpha_, *(v89 - 3) / 255.0, *(v89 - 2) / 255.0, *(v89 - 1) / 255.0, *v89 / 255.0);
        sub_1DD2FA090();
        sub_1DD2FA0B4();
        sub_1DD2FA0C0();
        sub_1DD2FA09C();
        v89 += 4;
        --v88;
      }
      while (v88);
      v90 = v105[0];
      result = (id)swift_release();
      v24 = MEMORY[0x1E0DEE9D8];
    }
    else
    {
      result = (id)swift_release();
      v90 = v24;
    }
    a8 = v104;
    if (*(_QWORD *)&v90 >> 62)
    {
      swift_bridgeObjectRetain();
      v95 = sub_1DD2FA0F0();
      result = (id)swift_bridgeObjectRelease();
      if (!v95)
      {
LABEL_3:

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_4;
      }
    }
    else if (!*(_QWORD *)((*(_QWORD *)&v90 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      goto LABEL_3;
    }
    if ((*(_QWORD *)&v90 & 0xC000000000000001) != 0)
    {
      v91 = (id)MEMORY[0x1DF0D75E4](0, *(_QWORD *)&v90);
    }
    else
    {
      if (!*(_QWORD *)((*(_QWORD *)&v90 & 0xFFFFFFFFFFFFF8) + 0x10))
        goto LABEL_82;
      v91 = *(id *)(*(_QWORD *)&v90 + 32);
    }
    v92 = v91;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v93 = *v104;
    v94 = v104[1];
    objc_msgSend(v92, sel_set);
    objc_msgSend(v101, sel_fillRect_, v93, v94, 4.0, 40.0);

LABEL_4:
    v23 = v103 + 1;
    *v104 = *v104 + 4.0;
    if (v103 + 1 == v98)
      return (id)swift_bridgeObjectRelease();
  }
  v37 = (unint64_t *)(*(_QWORD *)&v34 + 32);
  while (1)
  {
    v39 = *v37++;
    v38 = v39;
    if ((v39 & 0x8000000000000000) != 0)
      break;
    v40 = *(_QWORD *)(a9 + v20);
    if (v38 >= *(_QWORD *)(v40 + 16))
      goto LABEL_75;
    result = (id)sub_1DD2E0470(v105, *(double *)(v40 + 32 * v38 + 32), *(double *)(v40 + 32 * v38 + 40), *(double *)(v40 + 32 * v38 + 48), *(double *)(v40 + 32 * v38 + 56));
    if (!--v36)
      goto LABEL_14;
  }
  __break(1u);
LABEL_75:
  __break(1u);
LABEL_76:
  __break(1u);
LABEL_77:
  __break(1u);
LABEL_78:
  __break(1u);
LABEL_79:
  __break(1u);
LABEL_80:
  __break(1u);
LABEL_81:
  __break(1u);
LABEL_82:
  __break(1u);
  return result;
}

uint64_t sub_1DD2E9C48()
{
  return swift_deallocClassInstance();
}

uint64_t sub_1DD2E9C58(void *a1)
{
  BOOL v1;
  _BOOL4 v3;
  double v5;
  double v6;
  double v7[2];

  v7[1] = *(double *)MEMORY[0x1E0C80C00];
  v6 = 0.0;
  v7[0] = 0.0;
  v5 = 0.0;
  if (!objc_msgSend(a1, sel_getRed_green_blue_alpha_, v7, &v6, &v5, 0))
    return 1;
  v1 = v7[0] <= 0.95 || v6 <= 0.95;
  if (!v1 && v5 > 0.95)
    return 1;
  v3 = v7[0] < 0.05;
  if (v6 >= 0.05)
    v3 = 0;
  return v5 < 0.05 && v3;
}

uint64_t sub_1DD2E9D10(uint64_t a1, void *a2)
{
  uint64_t (*v3)(void);
  id v4;

  v3 = *(uint64_t (**)(void))(a1 + 32);
  swift_retain();
  v4 = a2;
  LOBYTE(v3) = v3();
  swift_release();

  return v3 & 1;
}

uint64_t sub_1DD2E9D60(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t *v9;
  unint64_t v10;

  v1 = *(_QWORD *)(a1 + 56);
  if (v1)
  {
    v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  v5 = *(_BYTE *)(a1 + 32);
  v6 = v5 & 0x3F;
  v3 = 1 << v5;
  if (v6 < 7)
    return v3;
  v1 = *(_QWORD *)(a1 + 64);
  if (v1)
  {
    v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  if (v6 < 8)
    return v3;
  v1 = *(_QWORD *)(a1 + 72);
  if (v1)
  {
    v2 = 128;
    return __clz(__rbit64(v1)) + v2;
  }
  v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 3)
    v7 = 3;
  v8 = v7 - 3;
  v9 = (unint64_t *)(a1 + 80);
  v2 = 128;
  while (v8)
  {
    v10 = *v9++;
    v1 = v10;
    --v8;
    v2 += 64;
    if (v10)
      return __clz(__rbit64(v1)) + v2;
  }
  return v3;
}

uint64_t sub_1DD2E9E00(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2 = *(_QWORD *)(a1 + 16);
  result = sub_1DD2F9F28();
  v8 = result;
  if (v2)
  {
    v4 = (uint64_t *)(a1 + 40);
    do
    {
      v5 = *(v4 - 1);
      v6 = *v4;
      swift_bridgeObjectRetain();
      sub_1DD2E06C8(&v7, v5, v6);
      swift_bridgeObjectRelease();
      v4 += 2;
      --v2;
    }
    while (v2);
    return v8;
  }
  return result;
}

uint64_t sub_1DD2E9E94(uint64_t result, int a2, uint64_t a3, uint64_t a4)
{
  if (result < 0 || 1 << *(_BYTE *)(a4 + 32) <= result)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (((*(_QWORD *)(a4 + (((unint64_t)result >> 3) & 0xFFFFFFFFFFFFF8) + 56) >> result) & 1) == 0)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  if (*(_DWORD *)(a4 + 36) == a2)
    return *(_QWORD *)(*(_QWORD *)(a4 + 48) + 16 * result);
LABEL_8:
  __break(1u);
  return result;
}

uint64_t sub_1DD2E9EEC(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  unint64_t v5;
  id v6;
  id v7;
  unint64_t v8;
  uint64_t result;
  id v10;

  if (qword_1EDB61D08 != -1)
    swift_once();
  sub_1DD2DFF5C(a1, a2, 2);
  v5 = v4;
  if (v4 >> 62)
  {
    if (sub_1DD2FA0F0())
      goto LABEL_5;
  }
  else if (*(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_5:
    if ((v5 & 0xC000000000000001) != 0)
    {
      v6 = (id)MEMORY[0x1DF0D75E4](0, v5);
      goto LABEL_8;
    }
    if (*(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      v6 = *(id *)(v5 + 32);
LABEL_8:
      v7 = v6;
LABEL_16:
      swift_bridgeObjectRelease();
      return (uint64_t)v7;
    }
    __break(1u);
LABEL_20:
    result = sub_1DD2FA0F0();
    if (!result)
      goto LABEL_21;
    goto LABEL_12;
  }
  swift_bridgeObjectRelease();
  sub_1DD2DFF5C(a1, a2, 0);
  a2 = v8;
  if (v8 >> 62)
    goto LABEL_20;
  result = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!result)
  {
LABEL_21:
    swift_bridgeObjectRelease();
    return 0;
  }
LABEL_12:
  if ((a2 & 0xC000000000000001) != 0)
  {
    v10 = (id)MEMORY[0x1DF0D75E4](0, a2);
    goto LABEL_15;
  }
  if (*(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v10 = *(id *)(a2 + 32);
LABEL_15:
    v7 = v10;
    goto LABEL_16;
  }
  __break(1u);
  return result;
}

uint64_t sub_1DD2EA050(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  char v15;
  unint64_t *v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  double *v22;
  double v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  unint64_t *v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  double *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  char v47;
  uint64_t v48;
  unint64_t *v49;
  unint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  double *v55;
  double v56;
  uint64_t result;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t *v63;
  uint64_t v64;
  double v65[4];
  uint64_t v66;

  if (qword_1EDB61D08 != -1)
    goto LABEL_77;
LABEL_2:
  v62 = *(_QWORD *)(a1 + 16);
  if (!v62)
    return 0;
  v2 = qword_1EDB64C40;
  v3 = qword_1EDB64C40 + OBJC_IVAR____TtC11EmojiPoster15EmojiBackground_contextualColors;
  v4 = OBJC_IVAR____TtC11EmojiPoster15EmojiBackground_colors;
  v5 = (uint64_t *)(qword_1EDB64C40 + OBJC_IVAR____TtC11EmojiPoster15EmojiBackground_dominantColors);
  v6 = (uint64_t *)(qword_1EDB64C40 + OBJC_IVAR____TtC11EmojiPoster15EmojiBackground_accentColors);
  swift_bridgeObjectRetain();
  v63 = (uint64_t *)v3;
  swift_beginAccess();
  swift_beginAccess();
  swift_beginAccess();
  v7 = 0;
  while (1)
  {
    swift_bridgeObjectRetain();
    v8 = sub_1DD2DFC18();
    v66 = MEMORY[0x1E0DEE9E8];
    v9 = *v63;
    swift_bridgeObjectRetain();
    v10 = sub_1DD2E2D64(v8);
    v12 = v11;
    swift_bridgeObjectRelease();
    v64 = v7;
    if (*(_QWORD *)(v9 + 16))
    {
      v13 = sub_1DD2E21E0(v10, v12);
      v14 = MEMORY[0x1E0DEE9D8];
      if ((v15 & 1) != 0)
      {
        v14 = *(_QWORD *)(*(_QWORD *)(v9 + 56) + 8 * v13);
        swift_bridgeObjectRetain();
      }
    }
    else
    {
      v14 = MEMORY[0x1E0DEE9D8];
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    a1 = *(_QWORD *)(v14 + 16);
    if (a1)
    {
      v16 = (unint64_t *)(v14 + 32);
      while (1)
      {
        v18 = *v16++;
        v17 = v18;
        if ((v18 & 0x8000000000000000) != 0)
          break;
        v19 = *(_QWORD *)(v2 + v4);
        if (v17 >= *(_QWORD *)(v19 + 16))
          goto LABEL_72;
        sub_1DD2E0470(v65, *(double *)(v19 + 32 * v17 + 32), *(double *)(v19 + 32 * v17 + 40), *(double *)(v19 + 32 * v17 + 48), *(double *)(v19 + 32 * v17 + 56));
        if (!--a1)
          goto LABEL_13;
      }
      __break(1u);
LABEL_72:
      __break(1u);
LABEL_73:
      __break(1u);
LABEL_74:
      __break(1u);
LABEL_75:
      __break(1u);
LABEL_76:
      __break(1u);
LABEL_77:
      swift_once();
      goto LABEL_2;
    }
LABEL_13:
    swift_bridgeObjectRelease();
    v20 = sub_1DD2F2058(v66);
    swift_bridgeObjectRelease();
    v21 = *(_QWORD *)(v20 + 16);
    if (v21)
    {
      *(_QWORD *)&v65[0] = MEMORY[0x1E0DEE9D8];
      sub_1DD2FA0A8();
      v22 = (double *)(v20 + 56);
      do
      {
        objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3658]), sel_initWithRed_green_blue_alpha_, *(v22 - 3) / 255.0, *(v22 - 2) / 255.0, *(v22 - 1) / 255.0, *v22 / 255.0);
        sub_1DD2FA090();
        sub_1DD2FA0B4();
        sub_1DD2FA0C0();
        sub_1DD2FA09C();
        v22 += 4;
        --v21;
      }
      while (v21);
      v23 = v65[0];
      swift_release();
      if (!(*(_QWORD *)&v23 >> 62))
        goto LABEL_17;
LABEL_22:
      swift_bridgeObjectRetain();
      v32 = sub_1DD2FA0F0();
      swift_bridgeObjectRelease();
      if (!v32)
        goto LABEL_18;
LABEL_63:
      if ((*(_QWORD *)&v23 & 0xC000000000000001) == 0)
      {
        v59 = *(_QWORD *)((*(_QWORD *)&v23 & 0xFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v59)
          return 1;
        __break(1u);
LABEL_66:
        if ((*(_QWORD *)&v23 & 0xC000000000000001) == 0)
        {
          v60 = *(_QWORD *)((*(_QWORD *)&v23 & 0xFFFFFFFFFFFFF8) + 0x10);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          result = swift_bridgeObjectRelease();
          if (!v60)
            goto LABEL_81;
          return 1;
        }
      }
      MEMORY[0x1DF0D75E4](0, *(_QWORD *)&v23);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
LABEL_61:
      v61 = 1;
      goto LABEL_69;
    }
    swift_release();
    v23 = MEMORY[0x1E0DEE9D8];
    if (MEMORY[0x1E0DEE9D8] >> 62)
      goto LABEL_22;
LABEL_17:
    if (*(_QWORD *)((*(_QWORD *)&v23 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_63;
LABEL_18:
    swift_bridgeObjectRelease();
    v24 = sub_1DD2DFC18();
    v66 = MEMORY[0x1E0DEE9E8];
    v25 = *v5;
    swift_bridgeObjectRetain();
    v26 = sub_1DD2E2D64(v24);
    v28 = v27;
    swift_bridgeObjectRelease();
    if (*(_QWORD *)(v25 + 16))
    {
      v29 = sub_1DD2E21E0(v26, v28);
      v30 = MEMORY[0x1E0DEE9D8];
      if ((v31 & 1) != 0)
      {
        v30 = *(_QWORD *)(*(_QWORD *)(v25 + 56) + 8 * v29);
        swift_bridgeObjectRetain();
      }
    }
    else
    {
      v30 = MEMORY[0x1E0DEE9D8];
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    a1 = *(_QWORD *)(v30 + 16);
    if (a1)
    {
      v33 = (unint64_t *)(v30 + 32);
      do
      {
        v35 = *v33++;
        v34 = v35;
        if ((v35 & 0x8000000000000000) != 0)
          goto LABEL_73;
        v36 = *(_QWORD *)(v2 + v4);
        if (v34 >= *(_QWORD *)(v36 + 16))
          goto LABEL_74;
        sub_1DD2E0470(v65, *(double *)(v36 + 32 * v34 + 32), *(double *)(v36 + 32 * v34 + 40), *(double *)(v36 + 32 * v34 + 48), *(double *)(v36 + 32 * v34 + 56));
      }
      while (--a1);
    }
    swift_bridgeObjectRelease();
    v37 = sub_1DD2F2058(v66);
    swift_bridgeObjectRelease();
    v38 = *(_QWORD *)(v37 + 16);
    if (v38)
    {
      *(_QWORD *)&v65[0] = MEMORY[0x1E0DEE9D8];
      sub_1DD2FA0A8();
      v39 = (double *)(v37 + 56);
      do
      {
        objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3658]), sel_initWithRed_green_blue_alpha_, *(v39 - 3) / 255.0, *(v39 - 2) / 255.0, *(v39 - 1) / 255.0, *v39 / 255.0);
        sub_1DD2FA090();
        sub_1DD2FA0B4();
        sub_1DD2FA0C0();
        sub_1DD2FA09C();
        v39 += 4;
        --v38;
      }
      while (v38);
      v23 = v65[0];
      swift_release();
      if (!(*(_QWORD *)&v23 >> 62))
      {
LABEL_34:
        if (*(_QWORD *)((*(_QWORD *)&v23 & 0xFFFFFFFFFFFFF8) + 0x10))
          goto LABEL_66;
        goto LABEL_35;
      }
    }
    else
    {
      swift_release();
      v23 = MEMORY[0x1E0DEE9D8];
      if (!(MEMORY[0x1E0DEE9D8] >> 62))
        goto LABEL_34;
    }
    swift_bridgeObjectRetain();
    v48 = sub_1DD2FA0F0();
    swift_bridgeObjectRelease();
    if (v48)
      goto LABEL_66;
LABEL_35:
    swift_bridgeObjectRelease();
    v40 = sub_1DD2DFC18();
    v66 = MEMORY[0x1E0DEE9E8];
    v41 = *v6;
    swift_bridgeObjectRetain();
    v42 = sub_1DD2E2D64(v40);
    v44 = v43;
    swift_bridgeObjectRelease();
    if (*(_QWORD *)(v41 + 16))
    {
      v45 = sub_1DD2E21E0(v42, v44);
      v46 = MEMORY[0x1E0DEE9D8];
      if ((v47 & 1) != 0)
      {
        v46 = *(_QWORD *)(*(_QWORD *)(v41 + 56) + 8 * v45);
        swift_bridgeObjectRetain();
      }
    }
    else
    {
      v46 = MEMORY[0x1E0DEE9D8];
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    a1 = *(_QWORD *)(v46 + 16);
    if (a1)
    {
      v49 = (unint64_t *)(v46 + 32);
      do
      {
        v51 = *v49++;
        v50 = v51;
        if ((v51 & 0x8000000000000000) != 0)
          goto LABEL_75;
        v52 = *(_QWORD *)(v2 + v4);
        if (v50 >= *(_QWORD *)(v52 + 16))
          goto LABEL_76;
        sub_1DD2E0470(v65, *(double *)(v52 + 32 * v50 + 32), *(double *)(v52 + 32 * v50 + 40), *(double *)(v52 + 32 * v50 + 48), *(double *)(v52 + 32 * v50 + 56));
      }
      while (--a1);
    }
    swift_bridgeObjectRelease();
    v53 = sub_1DD2F2058(v66);
    swift_bridgeObjectRelease();
    v54 = *(_QWORD *)(v53 + 16);
    if (v54)
    {
      *(_QWORD *)&v65[0] = MEMORY[0x1E0DEE9D8];
      sub_1DD2FA0A8();
      v55 = (double *)(v53 + 56);
      do
      {
        objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3658]), sel_initWithRed_green_blue_alpha_, *(v55 - 3) / 255.0, *(v55 - 2) / 255.0, *(v55 - 1) / 255.0, *v55 / 255.0);
        sub_1DD2FA090();
        sub_1DD2FA0B4();
        sub_1DD2FA0C0();
        sub_1DD2FA09C();
        v55 += 4;
        --v54;
      }
      while (v54);
      v56 = v65[0];
      result = swift_release();
    }
    else
    {
      result = swift_release();
      v56 = MEMORY[0x1E0DEE9D8];
    }
    if (!(*(_QWORD *)&v56 >> 62))
    {
      if (*(_QWORD *)((*(_QWORD *)&v56 & 0xFFFFFFFFFFFFF8) + 0x10))
        break;
      goto LABEL_54;
    }
    swift_bridgeObjectRetain();
    v58 = sub_1DD2FA0F0();
    result = swift_bridgeObjectRelease();
    if (v58)
      break;
LABEL_54:
    v7 = v64 + 1;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v64 + 1 == v62)
    {
      v61 = 0;
LABEL_69:
      swift_bridgeObjectRelease();
      return v61;
    }
  }
  if ((*(_QWORD *)&v56 & 0xC000000000000001) != 0)
  {
    MEMORY[0x1DF0D75E4](0, *(_QWORD *)&v56);
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
LABEL_60:
    swift_bridgeObjectRelease();
    goto LABEL_61;
  }
  if (*(_QWORD *)((*(_QWORD *)&v56 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    swift_bridgeObjectRelease();
    goto LABEL_60;
  }
  __break(1u);
LABEL_81:
  __break(1u);
  return result;
}

uint64_t sub_1DD2EA910(unint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t *v8;
  uint64_t v9;
  unint64_t v10;
  uint32_t *p_ivar_base_size;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  char v18;
  uint64_t v19;
  unint64_t *v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  double *v26;
  double v27;
  id v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  char v36;
  uint64_t v37;
  unint64_t *v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  double *v44;
  double v45;
  id v46;
  void *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  char v54;
  uint64_t v55;
  unint64_t *v56;
  unint64_t v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  double *v62;
  double v63;
  id v64;
  id v65;
  id v66;
  id v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  id v71;
  BOOL v72;
  double v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  unint64_t v78;
  uint64_t v79;
  uint64_t v80;
  double v81;
  uint64_t v82;
  uint64_t v83;
  id v84;
  void *v85;
  uint64_t v86;
  double v87;
  uint64_t v88;
  char v89;
  uint64_t v90;
  unint64_t v91;
  char v92;
  id v93;
  char v94;
  unint64_t v95;
  unint64_t v96;
  uint64_t v97;
  _BOOL8 v98;
  uint64_t v99;
  unint64_t v100;
  char v101;
  double v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  char v107;
  char v108;
  uint64_t v109;
  _BOOL8 v110;
  uint64_t v111;
  char v112;
  unint64_t v113;
  char v114;
  double v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  char isUniquelyReferenced_nonNull_native;
  char v121;
  uint64_t v122;
  _BOOL8 v123;
  uint64_t v124;
  char v125;
  unint64_t v126;
  char v127;
  double v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t result;
  uint64_t *v133;
  uint64_t *v134;
  uint64_t *v135;
  uint64_t v136;
  void *v137;
  uint64_t v138;
  uint64_t v139;
  double v140;
  unint64_t v141;
  uint64_t v142;
  uint64_t v143;
  double v144;
  double v145;
  double v146;
  double v147;
  double v148[4];
  uint64_t v149;
  uint64_t v150;

  v150 = *MEMORY[0x1E0C80C00];
  if (qword_1EDB61D08 != -1)
    goto LABEL_196;
LABEL_2:
  v2 = qword_1EDB64C40;
  v3 = MEMORY[0x1E0DEE9D8];
  *(double *)&v4 = COERCE_DOUBLE(sub_1DD2E2ED4(MEMORY[0x1E0DEE9D8]));
  v144 = COERCE_DOUBLE(sub_1DD2E2FC8(v3));
  v139 = *(_QWORD *)(a1 + 16);
  if (!v139)
    goto LABEL_168;
  v143 = v4;
  v5 = (uint64_t *)(v2 + OBJC_IVAR____TtC11EmojiPoster15EmojiBackground_contextualColors);
  v6 = OBJC_IVAR____TtC11EmojiPoster15EmojiBackground_colors;
  v7 = (uint64_t *)(v2 + OBJC_IVAR____TtC11EmojiPoster15EmojiBackground_dominantColors);
  v8 = (uint64_t *)(v2 + OBJC_IVAR____TtC11EmojiPoster15EmojiBackground_accentColors);
  swift_bridgeObjectRetain();
  v135 = v5;
  swift_beginAccess();
  v134 = v7;
  swift_beginAccess();
  v133 = v8;
  swift_beginAccess();
  v9 = 0;
  v10 = 0x1E0DC3000uLL;
  p_ivar_base_size = (_DWORD *)(&SpiralLayoutProvider + 8);
  v138 = v2;
  v142 = v6;
  do
  {
    v136 = v9;
    swift_bridgeObjectRetain();
    v12 = sub_1DD2DFC18();
    v149 = MEMORY[0x1E0DEE9E8];
    v13 = *v135;
    swift_bridgeObjectRetain();
    v14 = sub_1DD2E2D64(v12);
    v16 = v15;
    swift_bridgeObjectRelease();
    if (*(_QWORD *)(v13 + 16))
    {
      v17 = sub_1DD2E21E0(v14, v16);
      a1 = MEMORY[0x1E0DEE9D8];
      if ((v18 & 1) != 0)
      {
        a1 = *(_QWORD *)(*(_QWORD *)(v13 + 56) + 8 * v17);
        swift_bridgeObjectRetain();
      }
    }
    else
    {
      a1 = MEMORY[0x1E0DEE9D8];
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v19 = *(_QWORD *)(a1 + 16);
    if (v19)
    {
      v20 = (unint64_t *)(a1 + 32);
      while (1)
      {
        v22 = *v20++;
        v21 = v22;
        if ((v22 & 0x8000000000000000) != 0)
          break;
        v23 = *(_QWORD *)(v2 + v6);
        if (v21 >= *(_QWORD *)(v23 + 16))
          goto LABEL_171;
        sub_1DD2E0470(v148, *(double *)(v23 + 32 * v21 + 32), *(double *)(v23 + 32 * v21 + 40), *(double *)(v23 + 32 * v21 + 48), *(double *)(v23 + 32 * v21 + 56));
        if (!--v19)
          goto LABEL_14;
      }
      __break(1u);
LABEL_171:
      __break(1u);
LABEL_172:
      __break(1u);
LABEL_173:
      __break(1u);
LABEL_174:
      __break(1u);
LABEL_175:
      __break(1u);
LABEL_176:
      __break(1u);
LABEL_177:
      __break(1u);
LABEL_178:
      __break(1u);
LABEL_179:
      __break(1u);
      goto LABEL_180;
    }
LABEL_14:
    swift_bridgeObjectRelease();
    v24 = sub_1DD2F2058(v149);
    swift_bridgeObjectRelease();
    v25 = *(_QWORD *)(v24 + 16);
    if (v25)
    {
      *(_QWORD *)&v148[0] = MEMORY[0x1E0DEE9D8];
      sub_1DD2FA0A8();
      v26 = (double *)(v24 + 56);
      do
      {
        objc_msgSend(objc_allocWithZone(*(Class *)(v10 + 1624)), *((SEL *)p_ivar_base_size + 320), *(v26 - 3) / 255.0, *(v26 - 2) / 255.0, *(v26 - 1) / 255.0, *v26 / 255.0);
        sub_1DD2FA090();
        sub_1DD2FA0B4();
        sub_1DD2FA0C0();
        sub_1DD2FA09C();
        v26 += 4;
        --v25;
      }
      while (v25);
      v27 = v148[0];
      swift_release();
      v6 = v142;
      if (!(*(_QWORD *)&v27 >> 62))
      {
LABEL_18:
        a1 = *(_QWORD *)((*(_QWORD *)&v27 & 0xFFFFFFFFFFFFF8) + 0x10);
        if (!a1)
          goto LABEL_25;
        goto LABEL_19;
      }
    }
    else
    {
      swift_release();
      v27 = MEMORY[0x1E0DEE9D8];
      if (!(MEMORY[0x1E0DEE9D8] >> 62))
        goto LABEL_18;
    }
    swift_bridgeObjectRetain();
    a1 = sub_1DD2FA0F0();
    swift_bridgeObjectRelease();
    if (!a1)
    {
LABEL_25:
      swift_bridgeObjectRelease();
      v29 = 0;
      goto LABEL_26;
    }
LABEL_19:
    if ((*(_QWORD *)&v27 & 0xC000000000000001) != 0)
    {
      v28 = (id)MEMORY[0x1DF0D75E4](0, *(_QWORD *)&v27);
    }
    else
    {
      if (!*(_QWORD *)((*(_QWORD *)&v27 & 0xFFFFFFFFFFFFF8) + 0x10))
        goto LABEL_193;
      v28 = *(id *)(*(_QWORD *)&v27 + 32);
    }
    v29 = v28;
    swift_bridgeObjectRelease();
LABEL_26:
    v30 = sub_1DD2DFC18();
    v149 = MEMORY[0x1E0DEE9E8];
    v31 = *v134;
    swift_bridgeObjectRetain();
    v32 = sub_1DD2E2D64(v30);
    v34 = v33;
    swift_bridgeObjectRelease();
    v137 = v29;
    if (*(_QWORD *)(v31 + 16))
    {
      v35 = sub_1DD2E21E0(v32, v34);
      a1 = MEMORY[0x1E0DEE9D8];
      if ((v36 & 1) != 0)
      {
        a1 = *(_QWORD *)(*(_QWORD *)(v31 + 56) + 8 * v35);
        swift_bridgeObjectRetain();
      }
    }
    else
    {
      a1 = MEMORY[0x1E0DEE9D8];
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v37 = *(_QWORD *)(a1 + 16);
    if (v37)
    {
      v38 = (unint64_t *)(a1 + 32);
      do
      {
        v40 = *v38++;
        v39 = v40;
        if ((v40 & 0x8000000000000000) != 0)
          goto LABEL_172;
        v41 = *(_QWORD *)(v2 + v6);
        if (v39 >= *(_QWORD *)(v41 + 16))
          goto LABEL_173;
        sub_1DD2E0470(v148, *(double *)(v41 + 32 * v39 + 32), *(double *)(v41 + 32 * v39 + 40), *(double *)(v41 + 32 * v39 + 48), *(double *)(v41 + 32 * v39 + 56));
      }
      while (--v37);
    }
    swift_bridgeObjectRelease();
    v42 = sub_1DD2F2058(v149);
    swift_bridgeObjectRelease();
    v43 = *(_QWORD *)(v42 + 16);
    if (v43)
    {
      *(_QWORD *)&v148[0] = MEMORY[0x1E0DEE9D8];
      sub_1DD2FA0A8();
      v44 = (double *)(v42 + 56);
      do
      {
        objc_msgSend(objc_allocWithZone(*(Class *)(v10 + 1624)), *((SEL *)p_ivar_base_size + 320), *(v44 - 3) / 255.0, *(v44 - 2) / 255.0, *(v44 - 1) / 255.0, *v44 / 255.0);
        sub_1DD2FA090();
        sub_1DD2FA0B4();
        sub_1DD2FA0C0();
        sub_1DD2FA09C();
        v44 += 4;
        --v43;
      }
      while (v43);
      v45 = v148[0];
      swift_release();
      v6 = v142;
      if (!(*(_QWORD *)&v45 >> 62))
      {
LABEL_39:
        a1 = *(_QWORD *)((*(_QWORD *)&v45 & 0xFFFFFFFFFFFFF8) + 0x10);
        if (!a1)
          goto LABEL_46;
        goto LABEL_40;
      }
    }
    else
    {
      swift_release();
      v45 = MEMORY[0x1E0DEE9D8];
      if (!(MEMORY[0x1E0DEE9D8] >> 62))
        goto LABEL_39;
    }
    swift_bridgeObjectRetain();
    a1 = sub_1DD2FA0F0();
    swift_bridgeObjectRelease();
    if (!a1)
    {
LABEL_46:
      swift_bridgeObjectRelease();
      v47 = 0;
      goto LABEL_47;
    }
LABEL_40:
    if ((*(_QWORD *)&v45 & 0xC000000000000001) != 0)
    {
      v46 = (id)MEMORY[0x1DF0D75E4](0, *(_QWORD *)&v45);
    }
    else
    {
      if (!*(_QWORD *)((*(_QWORD *)&v45 & 0xFFFFFFFFFFFFF8) + 0x10))
        goto LABEL_194;
      v46 = *(id *)(*(_QWORD *)&v45 + 32);
    }
    v47 = v46;
    swift_bridgeObjectRelease();
LABEL_47:
    v48 = sub_1DD2DFC18();
    v149 = MEMORY[0x1E0DEE9E8];
    v49 = *v133;
    swift_bridgeObjectRetain();
    v50 = sub_1DD2E2D64(v48);
    v52 = v51;
    swift_bridgeObjectRelease();
    if (*(_QWORD *)(v49 + 16))
    {
      v53 = sub_1DD2E21E0(v50, v52);
      a1 = MEMORY[0x1E0DEE9D8];
      if ((v54 & 1) != 0)
      {
        a1 = *(_QWORD *)(*(_QWORD *)(v49 + 56) + 8 * v53);
        swift_bridgeObjectRetain();
      }
    }
    else
    {
      a1 = MEMORY[0x1E0DEE9D8];
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v55 = *(_QWORD *)(a1 + 16);
    if (v55)
    {
      v56 = (unint64_t *)(a1 + 32);
      do
      {
        v58 = *v56++;
        v57 = v58;
        if ((v58 & 0x8000000000000000) != 0)
          goto LABEL_174;
        v59 = *(_QWORD *)(v2 + v6);
        if (v57 >= *(_QWORD *)(v59 + 16))
          goto LABEL_175;
        sub_1DD2E0470(v148, *(double *)(v59 + 32 * v57 + 32), *(double *)(v59 + 32 * v57 + 40), *(double *)(v59 + 32 * v57 + 48), *(double *)(v59 + 32 * v57 + 56));
      }
      while (--v55);
    }
    swift_bridgeObjectRelease();
    v60 = sub_1DD2F2058(v149);
    swift_bridgeObjectRelease();
    v61 = *(_QWORD *)(v60 + 16);
    if (v61)
    {
      *(_QWORD *)&v148[0] = MEMORY[0x1E0DEE9D8];
      sub_1DD2FA0A8();
      v62 = (double *)(v60 + 56);
      do
      {
        objc_msgSend(objc_allocWithZone(*(Class *)(v10 + 1624)), sel_initWithRed_green_blue_alpha_, *(v62 - 3) / 255.0, *(v62 - 2) / 255.0, *(v62 - 1) / 255.0, *v62 / 255.0);
        sub_1DD2FA090();
        sub_1DD2FA0B4();
        sub_1DD2FA0C0();
        sub_1DD2FA09C();
        v62 += 4;
        --v61;
      }
      while (v61);
      v63 = v148[0];
      swift_release();
      v6 = v142;
    }
    else
    {
      swift_release();
      v63 = MEMORY[0x1E0DEE9D8];
    }
    if (*(_QWORD *)&v63 >> 62)
    {
      swift_bridgeObjectRetain();
      a1 = sub_1DD2FA0F0();
      swift_bridgeObjectRelease();
      if (!a1)
        goto LABEL_67;
    }
    else
    {
      a1 = *(_QWORD *)((*(_QWORD *)&v63 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (!a1)
        goto LABEL_67;
    }
    if ((*(_QWORD *)&v63 & 0xC000000000000001) != 0)
    {
      v64 = (id)MEMORY[0x1DF0D75E4](0, *(_QWORD *)&v63);
    }
    else
    {
      if (!*(_QWORD *)((*(_QWORD *)&v63 & 0xFFFFFFFFFFFFF8) + 0x10))
        goto LABEL_195;
      v64 = *(id *)(*(_QWORD *)&v63 + 32);
    }
    a1 = (unint64_t)v64;
LABEL_67:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *(_QWORD *)&v148[0] = MEMORY[0x1E0DEE9D8];
    if (v137)
    {
      v65 = v137;
      MEMORY[0x1DF0D7458]();
      if (*(_QWORD *)((*(_QWORD *)&v148[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*(_QWORD *)&v148[0] & 0xFFFFFFFFFFFFFF8)
                                                                                        + 0x18) >> 1)
        sub_1DD2F9F04();
      sub_1DD2F9F10();
      sub_1DD2F9EF8();
    }
    if (v47)
    {
      v66 = v47;
      MEMORY[0x1DF0D7458]();
      if (*(_QWORD *)((*(_QWORD *)&v148[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*(_QWORD *)&v148[0] & 0xFFFFFFFFFFFFFF8)
                                                                                        + 0x18) >> 1)
        sub_1DD2F9F04();
      sub_1DD2F9F10();
      sub_1DD2F9EF8();
    }
    if (a1)
    {
      v67 = (id)a1;
      MEMORY[0x1DF0D7458]();
      if (*(_QWORD *)((*(_QWORD *)&v148[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*(_QWORD *)&v148[0] & 0xFFFFFFFFFFFFFF8)
                                                                                        + 0x18) >> 1)
        sub_1DD2F9F04();
      sub_1DD2F9F10();
      sub_1DD2F9EF8();
    }
    v68 = *(_QWORD *)&v148[0];

    *(_QWORD *)&v148[0] = MEMORY[0x1E0DEE9D8];
    v149 = MEMORY[0x1E0DEE9E8];
    if ((unint64_t)v68 >> 62)
    {
      if (v68 < 0)
        a1 = v68;
      else
        a1 = v68 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain();
      v69 = sub_1DD2FA0F0();
      swift_bridgeObjectRelease();
      if (!v69)
        goto LABEL_108;
LABEL_81:
      v70 = 0;
      while (1)
      {
        if ((v68 & 0xC000000000000001) != 0)
        {
          v71 = (id)MEMORY[0x1DF0D75E4](v70, v68);
        }
        else
        {
          if (v70 >= *(_QWORD *)((v68 & 0xFFFFFFFFFFFFFF8) + 0x10))
            goto LABEL_186;
          v71 = *(id *)(v68 + 32 + 8 * v70);
        }
        a1 = (unint64_t)v71;
        v72 = __OFADD__(v70++, 1);
        if (v72)
          goto LABEL_176;
        v146 = 0.0;
        v147 = 0.0;
        v145 = 0.0;
        objc_msgSend(v71, sel_getHue_saturation_brightness_alpha_, &v147, &v145, &v146, 0);
        v73 = round(v147 * 100.0) + round(v146 * 100.0) * 100.0 + round(v145 * 100.0) * 10000.0;
        if ((~*(_QWORD *)&v73 & 0x7FF0000000000000) == 0)
          goto LABEL_177;
        if (v73 <= -9.22337204e18)
          goto LABEL_178;
        if (v73 >= 9.22337204e18)
          goto LABEL_179;
        v74 = (uint64_t)v73;
        v75 = v149;
        if (!*(_QWORD *)(v149 + 16))
          goto LABEL_82;
        v76 = sub_1DD2FA264();
        v77 = -1 << *(_BYTE *)(v75 + 32);
        v78 = v76 & ~v77;
        if (((*(_QWORD *)(v75 + 56 + ((v78 >> 3) & 0xFFFFFFFFFFFFF8)) >> v78) & 1) == 0)
          goto LABEL_82;
        v79 = *(_QWORD *)(v75 + 48);
        if (*(_QWORD *)(v79 + 8 * v78) != v74)
          break;
LABEL_85:

        v10 = 0x1E0DC3000;
        if (v70 == v69)
        {
          swift_bridgeObjectRelease();
          v81 = v148[0];
          v6 = v142;
          goto LABEL_109;
        }
      }
      v80 = ~v77;
      while (1)
      {
        v78 = (v78 + 1) & v80;
        if (((*(_QWORD *)(v75 + 56 + ((v78 >> 3) & 0xFFFFFFFFFFFFF8)) >> v78) & 1) == 0)
          break;
        if (*(_QWORD *)(v79 + 8 * v78) == v74)
          goto LABEL_85;
      }
LABEL_82:
      a1 = (unint64_t)(id)a1;
      MEMORY[0x1DF0D7458]();
      if (*(_QWORD *)((*(_QWORD *)&v148[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*(_QWORD *)&v148[0] & 0xFFFFFFFFFFFFFF8)
                                                                                        + 0x18) >> 1)
        sub_1DD2F9F04();
      sub_1DD2F9F10();
      sub_1DD2F9EF8();
      sub_1DD2E05D0((uint64_t *)&v147, v74);
      goto LABEL_85;
    }
    v69 = *(_QWORD *)((v68 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v69)
      goto LABEL_81;
LABEL_108:
    swift_bridgeObjectRelease();
    v81 = MEMORY[0x1E0DEE9D8];
LABEL_109:
    swift_bridgeObjectRelease();
    if (*(_QWORD *)&v81 >> 62)
    {
      swift_bridgeObjectRetain();
      v82 = sub_1DD2FA0F0();
      swift_bridgeObjectRelease();
      if (!v82)
        goto LABEL_4;
LABEL_111:
      v140 = v81;
      v141 = *(_QWORD *)&v81 & 0xC000000000000001;
      v83 = 4;
      while (1)
      {
        a1 = v83 - 4;
        v84 = v141 ? (id)MEMORY[0x1DF0D75E4](v83 - 4, *(_QWORD *)&v81) : *(id *)(*(_QWORD *)&v81 + 8 * v83);
        v85 = v84;
        v86 = v83 - 3;
        if (__OFADD__(a1, 1))
          break;
        v146 = 0.0;
        v147 = 0.0;
        v145 = 0.0;
        objc_msgSend(v84, sel_getHue_saturation_brightness_alpha_, &v147, &v145, &v146, 0);
        v87 = round(v147 * 100.0) + round(v146 * 100.0) * 100.0 + round(v145 * 100.0) * 10000.0;
        if ((~*(_QWORD *)&v87 & 0x7FF0000000000000) == 0)
          goto LABEL_181;
        if (v87 <= -9.22337204e18)
          goto LABEL_182;
        if (v87 >= 9.22337204e18)
          goto LABEL_183;
        v88 = (uint64_t)v87;
        if (*(_QWORD *)(v143 + 16) && (sub_1DD2E22C4((uint64_t)v87), (v89 & 1) != 0))
        {
          v90 = *(_QWORD *)(*(_QWORD *)&v144 + 16);
          if (v90)
          {
            a1 = *(_QWORD *)&v144;
            v91 = sub_1DD2E22C4(v88);
            if ((v92 & 1) != 0)
              v90 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)&v144 + 56) + 8 * v91);
            else
              v90 = 0;
          }
          v119 = v90 + 1;
          if (__OFADD__(v90, 1))
            goto LABEL_189;
          if (v90 + 0x4000000000000001 < 0)
            goto LABEL_190;
          if (v139 <= 2 * v119)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            return (uint64_t)v85;
          }
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          v147 = v144;
          a1 = sub_1DD2E22C4(v88);
          v122 = *(_QWORD *)(*(_QWORD *)&v144 + 16);
          v123 = (v121 & 1) == 0;
          v124 = v122 + v123;
          if (__OFADD__(v122, v123))
            goto LABEL_191;
          v125 = v121;
          if (*(_QWORD *)(*(_QWORD *)&v144 + 24) >= v124)
          {
            if ((isUniquelyReferenced_nonNull_native & 1) == 0)
              sub_1DD2DA1BC();
          }
          else
          {
            sub_1DD2D9910(v124, isUniquelyReferenced_nonNull_native);
            v126 = sub_1DD2E22C4(v88);
            if ((v125 & 1) != (v127 & 1))
            {
LABEL_197:
              result = sub_1DD2FA24C();
              __break(1u);
              return result;
            }
            a1 = v126;
          }
          v6 = v142;
          v128 = v147;
          v144 = v147;
          if ((v125 & 1) != 0)
          {
            *(_QWORD *)(*(_QWORD *)(*(_QWORD *)&v147 + 56) + 8 * a1) = v119;
          }
          else
          {
            *(_QWORD *)(*(_QWORD *)&v147 + 8 * (a1 >> 6) + 64) |= 1 << a1;
            v129 = 8 * a1;
            *(_QWORD *)(*(_QWORD *)(*(_QWORD *)&v128 + 48) + v129) = v88;
            *(_QWORD *)(*(_QWORD *)(*(_QWORD *)&v128 + 56) + v129) = v119;
            v130 = *(_QWORD *)(*(_QWORD *)&v128 + 16);
            v72 = __OFADD__(v130, 1);
            v131 = v130 + 1;
            if (v72)
              goto LABEL_192;
            *(_QWORD *)(*(_QWORD *)&v128 + 16) = v131;
          }

          swift_bridgeObjectRelease();
          v2 = v138;
        }
        else
        {
          v93 = v85;
          v94 = swift_isUniquelyReferenced_nonNull_native();
          v147 = *(double *)&v143;
          v96 = sub_1DD2E22C4(v88);
          v97 = *(_QWORD *)(v143 + 16);
          v98 = (v95 & 1) == 0;
          v99 = v97 + v98;
          if (__OFADD__(v97, v98))
            goto LABEL_184;
          a1 = v95;
          if (*(_QWORD *)(v143 + 24) >= v99)
          {
            if ((v94 & 1) == 0)
              sub_1DD2DA01C();
          }
          else
          {
            sub_1DD2D9660(v99, v94);
            v100 = sub_1DD2E22C4(v88);
            if ((a1 & 1) != (v101 & 1))
              goto LABEL_197;
            v96 = v100;
          }
          v102 = v147;
          *(double *)&v143 = v147;
          if ((a1 & 1) != 0)
          {
            v103 = *(_QWORD *)(*(_QWORD *)&v147 + 56);

            *(_QWORD *)(v103 + 8 * v96) = v93;
          }
          else
          {
            *(_QWORD *)(*(_QWORD *)&v147 + 8 * (v96 >> 6) + 64) |= 1 << v96;
            v104 = 8 * v96;
            *(_QWORD *)(*(_QWORD *)(*(_QWORD *)&v102 + 48) + v104) = v88;
            *(_QWORD *)(*(_QWORD *)(*(_QWORD *)&v102 + 56) + v104) = v93;
            v105 = *(_QWORD *)(*(_QWORD *)&v102 + 16);
            v72 = __OFADD__(v105, 1);
            v106 = v105 + 1;
            if (v72)
              goto LABEL_187;
            *(_QWORD *)(*(_QWORD *)&v102 + 16) = v106;
          }
          swift_bridgeObjectRelease();
          v107 = swift_isUniquelyReferenced_nonNull_native();
          v147 = v144;
          a1 = sub_1DD2E22C4(v88);
          v109 = *(_QWORD *)(*(_QWORD *)&v144 + 16);
          v110 = (v108 & 1) == 0;
          v111 = v109 + v110;
          if (__OFADD__(v109, v110))
            goto LABEL_185;
          v112 = v108;
          if (*(_QWORD *)(*(_QWORD *)&v144 + 24) >= v111)
          {
            if ((v107 & 1) == 0)
              sub_1DD2DA1BC();
          }
          else
          {
            sub_1DD2D9910(v111, v107);
            v113 = sub_1DD2E22C4(v88);
            if ((v112 & 1) != (v114 & 1))
              goto LABEL_197;
            a1 = v113;
          }
          v6 = v142;
          v115 = v147;
          v144 = v147;
          if ((v112 & 1) != 0)
          {
            *(_QWORD *)(*(_QWORD *)(*(_QWORD *)&v147 + 56) + 8 * a1) = 1;
          }
          else
          {
            *(_QWORD *)(*(_QWORD *)&v147 + 8 * (a1 >> 6) + 64) |= 1 << a1;
            v116 = 8 * a1;
            *(_QWORD *)(*(_QWORD *)(*(_QWORD *)&v115 + 48) + v116) = v88;
            *(_QWORD *)(*(_QWORD *)(*(_QWORD *)&v115 + 56) + v116) = 1;
            v117 = *(_QWORD *)(*(_QWORD *)&v115 + 16);
            v72 = __OFADD__(v117, 1);
            v118 = v117 + 1;
            if (v72)
              goto LABEL_188;
            *(_QWORD *)(*(_QWORD *)&v115 + 16) = v118;
          }

          swift_bridgeObjectRelease();
        }
        v81 = v140;
        ++v83;
        v10 = 0x1E0DC3000;
        if (v86 == v82)
          goto LABEL_4;
      }
LABEL_180:
      __break(1u);
LABEL_181:
      __break(1u);
LABEL_182:
      __break(1u);
LABEL_183:
      __break(1u);
LABEL_184:
      __break(1u);
LABEL_185:
      __break(1u);
LABEL_186:
      __break(1u);
LABEL_187:
      __break(1u);
LABEL_188:
      __break(1u);
LABEL_189:
      __break(1u);
LABEL_190:
      __break(1u);
LABEL_191:
      __break(1u);
LABEL_192:
      __break(1u);
LABEL_193:
      __break(1u);
LABEL_194:
      __break(1u);
LABEL_195:
      __break(1u);
LABEL_196:
      swift_once();
      goto LABEL_2;
    }
    v82 = *(_QWORD *)((*(_QWORD *)&v81 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v82)
      goto LABEL_111;
LABEL_4:
    v9 = v136 + 1;
    swift_bridgeObjectRelease();
    p_ivar_base_size = &SpiralLayoutProvider.ivar_base_size;
  }
  while (v136 + 1 != v139);
  swift_bridgeObjectRelease();
LABEL_168:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return 0;
}

id _sSo7UIColorC11EmojiPosterE021emp_suggestedColorForB0yABSgSaySSGFZ_0(unint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  void *v9;
  id v10;
  void *v11;
  id v12;
  id v13;
  id v14;
  void *v16;
  _OWORD v17[2];
  _QWORD aBlock[3];
  void *v19;
  uint64_t (*v20)(void *);
  uint64_t v21;

  if (!*(_QWORD *)(a1 + 16))
    return 0;
  if (qword_1EDB61D08 != -1)
    swift_once();
  v2 = qword_1EDB64C40 + OBJC_IVAR____TtC11EmojiPoster15EmojiBackground_dominantColors;
  swift_beginAccess();
  if (!*(_QWORD *)(*(_QWORD *)v2 + 16))
  {
LABEL_13:
    type metadata accessor for ImageUtil();
    v9 = (void *)sub_1DD2E904C(a1);
    v10 = objc_msgSend(objc_allocWithZone((Class)EMP_TSDImageColorAnalyzer), sel_initWithImage_, v9);
    v20 = sub_1DD2E9C58;
    v21 = 0;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1DD2E9D10;
    v19 = &block_descriptor_8;
    v11 = _Block_copy(aBlock);
    objc_msgSend(v10, sel_filterInterestingColorsUsingBlock_, v11);
    _Block_release(v11);
    v12 = objc_msgSend(v10, sel_interestingColors);
    v13 = objc_msgSend(v12, sel_firstObject);

    if (v13)
    {
      sub_1DD2F9FE8();
      swift_unknownObjectRelease();
    }
    else
    {
      memset(v17, 0, sizeof(v17));
    }
    sub_1DD2EBDE8((uint64_t)v17, (uint64_t)aBlock);
    if (v19)
    {
      sub_1DD2CDA0C(0, &qword_1EDB61F10);
      if ((swift_dynamicCast() & 1) != 0)
      {
        v8 = v16;
LABEL_26:

        return v8;
      }
    }
    else
    {
      sub_1DD2EBE30((uint64_t)aBlock);
    }
    if (qword_1F03D0C10 != -1)
      swift_once();
    v8 = (id)qword_1F03D1538;
    goto LABEL_26;
  }
  v3 = swift_bridgeObjectRetain();
  v4 = sub_1DD2E9E00(v3);
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v4 + 16) == 1)
  {
    v5 = sub_1DD2E8AA0(v4);
    v7 = v6;
    swift_bridgeObjectRelease();
    if (v7)
    {
      v8 = (id)sub_1DD2E9EEC(v5, v7);
      swift_bridgeObjectRelease();
      if (v8)
        return v8;
      goto LABEL_15;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  if ((sub_1DD2EA050(a1) & 1) != 0)
  {
    v8 = (id)sub_1DD2EA910(a1);
    if (v8)
      return v8;
    goto LABEL_13;
  }
LABEL_15:
  if (qword_1F03D0C10 != -1)
    swift_once();
  v8 = (id)qword_1F03D1538;
  v14 = (id)qword_1F03D1538;
  return v8;
}

uint64_t type metadata accessor for ImageUtil()
{
  return objc_opt_self();
}

uint64_t block_copy_helper_8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_8()
{
  return swift_release();
}

uint64_t sub_1DD2EBDE8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDB61F70);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DD2EBE30(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDB61F70);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1DD2EBE70()
{
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

id sub_1DD2EBE9C(void *a1)
{
  uint64_t v1;

  return sub_1DD2E9238(a1, *(_QWORD *)(v1 + 48), *(double *)(v1 + 16), *(double *)(v1 + 24), *(double *)(v1 + 32), *(double *)(v1 + 40), *(_QWORD *)(v1 + 56), *(double **)(v1 + 64), *(_QWORD *)(v1 + 72));
}

uint64_t sub_1DD2EBEB0()
{
  return swift_deallocObject();
}

uint64_t sub_1DD2EBEC0(uint64_t a1, uint64_t a2)
{
  uint64_t inited;
  void *v5;
  void *v6;
  id v7;
  unint64_t v8;
  void *v9;
  void *v10;
  double v11;
  double v12;
  double v13;
  double v14;
  id v15;
  double *v16;
  uint64_t v17;
  void *v18;
  id v19;
  uint64_t result;
  _QWORD v21[6];

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDB61D30);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1DD2FDFC0;
  v5 = (void *)*MEMORY[0x1E0DC1138];
  *(_QWORD *)(inited + 32) = *MEMORY[0x1E0DC1138];
  v6 = (void *)objc_opt_self();
  v7 = v5;
  *(_QWORD *)(inited + 40) = objc_msgSend(v6, sel_systemFontOfSize_, 40.0);
  v8 = sub_1DD2DEB90(inited);
  v9 = (void *)sub_1DD2F9DB4();
  sub_1DD2E8B68(v8);
  type metadata accessor for Key(0);
  sub_1DD2CB85C();
  v10 = (void *)sub_1DD2F9D78();
  swift_bridgeObjectRelease();
  objc_msgSend(v9, sel_sizeWithAttributes_, v10);
  v12 = v11;
  v14 = v13;

  v15 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3828]), sel_initWithSize_, v12, v14);
  v16 = (double *)swift_allocObject();
  v16[2] = 0.0;
  v16[3] = 0.0;
  v16[4] = v12;
  v16[5] = v14;
  *((_QWORD *)v16 + 6) = a1;
  *((_QWORD *)v16 + 7) = a2;
  *((_QWORD *)v16 + 8) = v8;
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = sub_1DD2EC158;
  *(_QWORD *)(v17 + 24) = v16;
  v21[4] = sub_1DD2EC194;
  v21[5] = v17;
  v21[0] = MEMORY[0x1E0C809B0];
  v21[1] = 1107296256;
  v21[2] = sub_1DD2CB738;
  v21[3] = &block_descriptor_16_1;
  v18 = _Block_copy(v21);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_release();
  v19 = objc_msgSend(v15, sel_imageWithActions_, v18);

  _Block_release(v18);
  LOBYTE(v18) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  result = swift_release();
  if ((v18 & 1) == 0)
    return (uint64_t)v19;
  __break(1u);
  return result;
}

uint64_t sub_1DD2EC12C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_1DD2EC158(void *a1)
{
  uint64_t v1;

  sub_1DD2E8F18(a1, *(double *)(v1 + 16), *(double *)(v1 + 24), *(double *)(v1 + 32), *(double *)(v1 + 40), *(_QWORD *)(v1 + 48), *(_QWORD *)(v1 + 56), *(_QWORD *)(v1 + 64));
}

uint64_t sub_1DD2EC16C()
{
  return swift_deallocObject();
}

uint64_t sub_1DD2EC17C()
{
  return swift_release();
}

uint64_t sub_1DD2EC198(uint64_t a1)
{
  void (*v1)(uint64_t);
  uint64_t v2;

  v1 = *(void (**)(uint64_t))(a1 + 32);
  v2 = swift_retain();
  v1(v2);
  return swift_release();
}

id sub_1DD2EC3CC(uint64_t a1)
{
  return sub_1DD2EEEE8(a1, type metadata accessor for NoKeyboardTextField);
}

uint64_t sub_1DD2EC3D8()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + OBJC_IVAR____TtC11EmojiPoster31EmojiEditingInputViewController_delegate;
  swift_beginAccess();
  return MEMORY[0x1DF0D8130](v1);
}

uint64_t sub_1DD2EC424(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;

  v4 = v2 + OBJC_IVAR____TtC11EmojiPoster31EmojiEditingInputViewController_delegate;
  swift_beginAccess();
  *(_QWORD *)(v4 + 8) = a2;
  swift_unknownObjectWeakAssign();
  return swift_unknownObjectRelease();
}

void (*sub_1DD2EC48C(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC11EmojiPoster31EmojiEditingInputViewController_delegate;
  v3[5] = v1;
  v3[6] = v4;
  v5 = v1 + v4;
  swift_beginAccess();
  v6 = MEMORY[0x1DF0D8130](v5);
  v7 = *(_QWORD *)(v5 + 8);
  v3[3] = v6;
  v3[4] = v7;
  return sub_1DD2D51E0;
}

id EmojiEditingInputViewController.__allocating_init(emoji:)(uint64_t a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_allocWithZone(v1);
  return EmojiEditingInputViewController.init(emoji:)(a1);
}

id EmojiEditingInputViewController.init(emoji:)(uint64_t a1)
{
  char *v1;
  uint64_t v3;
  id v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  objc_super v10;

  v3 = OBJC_IVAR____TtC11EmojiPoster31EmojiEditingInputViewController_navBar;
  v4 = objc_allocWithZone(MEMORY[0x1E0DC3A28]);
  v5 = v1;
  *(_QWORD *)&v1[v3] = objc_msgSend(v4, sel_init);
  sub_1DD2F9CDC();
  v6 = OBJC_IVAR____TtC11EmojiPoster31EmojiEditingInputViewController_textField;
  type metadata accessor for NoKeyboardTextField();
  *(_QWORD *)&v5[v6] = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  v7 = OBJC_IVAR____TtC11EmojiPoster31EmojiEditingInputViewController_emojiCountLabel;
  *(_QWORD *)&v5[v7] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_init);
  v8 = OBJC_IVAR____TtC11EmojiPoster31EmojiEditingInputViewController_keyboardVC;
  *(_QWORD *)&v5[v8] = objc_msgSend((id)objc_opt_self(), sel_createKeyboardViewController);
  *(_QWORD *)&v5[OBJC_IVAR____TtC11EmojiPoster31EmojiEditingInputViewController_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  *(_QWORD *)&v5[OBJC_IVAR____TtC11EmojiPoster31EmojiEditingInputViewController_emoji] = a1;

  v10.receiver = v5;
  v10.super_class = (Class)type metadata accessor for EmojiEditingInputViewController();
  return objc_msgSendSuper2(&v10, sel_initWithNibName_bundle_, 0, 0);
}

uint64_t type metadata accessor for NoKeyboardTextField()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for EmojiEditingInputViewController()
{
  uint64_t result;

  result = qword_1F03D15C8;
  if (!qword_1F03D15C8)
    return swift_getSingletonMetadata();
  return result;
}

id sub_1DD2EC714()
{
  void *v0;

  v0 = (void *)objc_opt_self();
  objc_msgSend(v0, sel_releaseSharedInstance);
  return objc_msgSend(v0, sel_purgeImageCache);
}

double sub_1DD2EC754(uint64_t a1)
{
  void *v1;
  id v3;
  id v4;
  double v5;

  v3 = objc_msgSend(v1, sel_traitCollection);
  v4 = objc_msgSend(v3, sel_userInterfaceIdiom);

  if (v4 == (id)1)
    a1 = 4;
  objc_msgSend((id)objc_opt_self(), sel_keyboardSizeForOrientation_, a1);
  return v5 + 44.0 + 22.0;
}

void sub_1DD2EC7E4()
{
  char *v0;
  char *v1;
  id v2;
  id v3;
  id v4;
  void *v5;
  id v6;
  void *v7;
  id v8;
  uint64_t v9;
  id v10;
  id v11;
  void *v12;
  id v13;
  id v14;
  char *v15;
  id v16;
  id v17;
  id v18;
  void *v19;
  void *v20;
  uint64_t v21;
  void *v22;
  id v23;
  void *v24;
  void *v25;
  uint64_t v26;
  void *v27;
  id v28;
  id v29;
  id v30;
  void *v31;
  id v32;
  void *v33;
  void *v34;
  id v35;
  void *v36;
  id v37;
  void *v38;
  id v39;
  void *v40;
  id v41;
  void *v42;
  double v43;
  double v44;
  unint64_t v45;
  id v46;
  void *v47;
  id v48;
  id v49;
  id v50;
  id v51;
  void *v52;
  id v53;
  id v54;
  id v55;
  id v56;
  void *v57;
  id v58;
  id v59;
  id v60;
  id v61;
  void *v62;
  id v63;
  id v64;
  id v65;
  id v66;
  void *v67;
  id v68;
  id v69;
  id v70;
  id v71;
  id v72;
  id v73;
  id v74;
  id v75;
  void *v76;
  id v77;
  id v78;
  id v79;
  id v80;
  id v81;
  void *v82;
  id v83;
  id v84;
  id v85;
  id v86;
  void *v87;
  id v88;
  id v89;
  id v90;
  id v91;
  id v92;
  void *v93;
  id v94;
  id v95;
  void *v96;
  id v97;
  id v98;
  id v99;
  void *v100;
  id v101;
  id v102;
  void *v103;
  id v104;
  id v105;
  id v106;
  id v107;
  void *v108;
  id v109;
  id v110;
  id v111;
  id v112;
  void *v113;
  id v114;
  id v115;
  id v116;
  void *v117;
  id v118;
  id v119;
  void *v120;
  id v121;
  id v122;
  id v123;
  void *v124;
  uint32_t *p_ivar_base_size;
  id v126;
  id v127;
  id v128;
  uint64_t v129;
  id v130;
  id v131;
  id v132;
  id v133;
  void *v134;
  void *v135;
  id v136;
  void *v137;
  id v138;
  void *v139;
  char *v140;
  uint64_t v141;
  id v142;
  id v143;
  uint64_t v144;
  uint64_t ObjectType;
  double v146;
  id v147;
  id v148;
  id v149;
  void *v150;
  unint64_t v151;
  uint64_t v152;
  objc_super v153;

  v1 = v0;
  v153.receiver = v0;
  v153.super_class = (Class)type metadata accessor for EmojiEditingInputViewController();
  objc_msgSendSuper2(&v153, sel_viewDidLoad);
  v2 = objc_msgSend((id)objc_opt_self(), sel_effectWithStyle_, 9);
  v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3F58]), sel_initWithEffect_, v2);

  objc_msgSend(v3, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  v4 = objc_msgSend(v1, sel_view);
  if (!v4)
  {
    __break(1u);
LABEL_57:
    __break(1u);
    goto LABEL_58;
  }
  v5 = v4;
  v150 = v3;
  objc_msgSend(v4, sel_addSubview_, v3);

  v6 = objc_msgSend(v1, sel_navigationItem);
  objc_msgSend(v6, sel_em_setBackgroundHidden_, 1);
  v7 = *(void **)&v1[OBJC_IVAR____TtC11EmojiPoster31EmojiEditingInputViewController_emojiCountLabel];
  objc_msgSend(v7, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  v149 = v7;
  v8 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC34F0]), sel_initWithCustomView_, v7);
  objc_msgSend(v6, sel_setLeftBarButtonItem_, v8);

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDB61620);
  v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1DD2FF080;
  *(_QWORD *)(v9 + 32) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC34F0]), sel_initWithBarButtonSystemItem_target_action_, 24, v1, sel_didTapCloseButton);
  sub_1DD2F9EF8();
  v152 = v9;
  v10 = objc_msgSend(v1, sel_traitCollection);
  v11 = objc_msgSend(v10, sel_userInterfaceIdiom);

  v148 = v11;
  if (v11 == (id)1)
  {
    v12 = (void *)sub_1DD2F9DB4();
    v13 = objc_msgSend((id)objc_opt_self(), sel_systemImageNamed_, v12);

    v14 = objc_allocWithZone(MEMORY[0x1E0DC34F0]);
    v15 = v1;
    v16 = objc_msgSend(v14, sel_initWithImage_style_target_action_, v13, 0, v15, sel_didTapDeleteButton);

    v17 = objc_msgSend((id)objc_opt_self(), sel_labelColor);
    objc_msgSend(v16, sel_setTintColor_, v17);

    v18 = v16;
    MEMORY[0x1DF0D7458]();
    if (*(_QWORD *)((v152 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v152 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_1DD2F9F04();
    sub_1DD2F9F10();
    sub_1DD2F9EF8();

  }
  sub_1DD2CDA0C(0, &qword_1F03D1550);
  swift_bridgeObjectRetain();
  v19 = (void *)sub_1DD2F9EC8();
  swift_bridgeObjectRelease();
  objc_msgSend(v6, sel_setRightBarButtonItems_, v19);

  v20 = *(void **)&v1[OBJC_IVAR____TtC11EmojiPoster31EmojiEditingInputViewController_navBar];
  objc_msgSend(v20, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  v21 = swift_allocObject();
  *(_OWORD *)(v21 + 16) = xmmword_1DD2FF080;
  *(_QWORD *)(v21 + 32) = v6;
  sub_1DD2F9EF8();
  sub_1DD2CDA0C(0, &qword_1F03D1558);
  v147 = v6;
  v22 = (void *)sub_1DD2F9EC8();
  swift_bridgeObjectRelease();
  objc_msgSend(v20, sel_setItems_animated_, v22, 0);

  v23 = objc_msgSend(v1, sel_view);
  if (!v23)
    goto LABEL_57;
  v24 = v23;
  objc_msgSend(v23, sel_addSubview_, v20);

  v25 = *(void **)&v1[OBJC_IVAR____TtC11EmojiPoster31EmojiEditingInputViewController_textField];
  v26 = OBJC_IVAR____TtC11EmojiPoster31EmojiEditingInputViewController_emoji;
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDB61500);
  sub_1DD2BFCE8((unint64_t *)&qword_1EDB616A8, &qword_1EDB61500, MEMORY[0x1E0DEAF20]);
  sub_1DD2F9D90();
  swift_bridgeObjectRelease();
  v27 = (void *)sub_1DD2F9DB4();
  swift_bridgeObjectRelease();
  objc_msgSend(v25, sel_setText_, v27);

  v28 = objc_msgSend((id)objc_opt_self(), sel_preferredFontDescriptorWithTextStyle_, *MEMORY[0x1E0DC4A88]);
  v29 = objc_msgSend((id)objc_opt_self(), sel_fontWithDescriptor_size_, v28, 32.0);

  objc_msgSend(v25, sel_setFont_, v29);
  objc_msgSend(v25, sel_setTextAlignment_, 1);
  objc_msgSend(v25, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  objc_msgSend(v25, sel_setKeyboardType_, 124);
  objc_msgSend(v25, sel_setDelegate_, v1);
  v30 = objc_msgSend(v1, sel_view);
  if (!v30)
  {
LABEL_58:
    __break(1u);
    goto LABEL_59;
  }
  v31 = v30;
  objc_msgSend(v30, sel_addSubview_, v25);

  v32 = objc_msgSend(v1, sel_view);
  if (!v32)
  {
LABEL_59:
    __break(1u);
    goto LABEL_60;
  }
  v33 = v32;
  v34 = *(void **)&v1[OBJC_IVAR____TtC11EmojiPoster31EmojiEditingInputViewController_keyboardVC];
  v35 = objc_msgSend(v34, sel_view);
  if (!v35)
  {
LABEL_60:
    __break(1u);
    goto LABEL_61;
  }
  v36 = v35;
  objc_msgSend(v33, sel_addSubview_, v35);

  objc_msgSend(v1, sel_addChildViewController_, v34);
  v37 = objc_msgSend(v34, sel_view);
  if (!v37)
  {
LABEL_61:
    __break(1u);
    goto LABEL_62;
  }
  v38 = v37;
  objc_msgSend(v37, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);

  objc_msgSend(v34, sel_didMoveToParentViewController_, v1);
  objc_msgSend(v34, sel_setTextInputView_, v25);
  v39 = objc_msgSend(v34, sel_view);
  if (!v39)
  {
LABEL_62:
    __break(1u);
LABEL_63:
    __break(1u);
    goto LABEL_64;
  }
  v40 = v39;
  objc_msgSend(v39, sel_sizeToFit);

  sub_1DD2EE0B8(*(_QWORD *)(*(_QWORD *)&v1[v26] + 16));
  v41 = objc_msgSend(v25, sel_font);
  if (v41)
  {
    v42 = v41;
    objc_msgSend(v41, sel_lineHeight);
    v44 = v43;

  }
  else
  {
    v44 = 36.0;
  }
  v45 = swift_allocObject();
  *(_OWORD *)(v45 + 16) = xmmword_1DD2FF090;
  v46 = objc_msgSend(v1, sel_view);
  if (!v46)
    goto LABEL_63;
  v47 = v46;
  v48 = objc_msgSend(v46, sel_leadingAnchor);

  v49 = objc_msgSend(v150, sel_leadingAnchor);
  v50 = objc_msgSend(v48, sel_constraintEqualToAnchor_, v49);

  *(_QWORD *)(v45 + 32) = v50;
  v51 = objc_msgSend(v1, sel_view);
  if (!v51)
  {
LABEL_64:
    __break(1u);
    goto LABEL_65;
  }
  v52 = v51;
  v53 = objc_msgSend(v51, sel_trailingAnchor);

  v54 = objc_msgSend(v150, sel_trailingAnchor);
  v55 = objc_msgSend(v53, sel_constraintEqualToAnchor_, v54);

  *(_QWORD *)(v45 + 40) = v55;
  v56 = objc_msgSend(v1, sel_view);
  if (!v56)
  {
LABEL_65:
    __break(1u);
    goto LABEL_66;
  }
  v57 = v56;
  v58 = objc_msgSend(v56, sel_topAnchor);

  v59 = objc_msgSend(v150, sel_topAnchor);
  v60 = objc_msgSend(v58, sel_constraintEqualToAnchor_, v59);

  *(_QWORD *)(v45 + 48) = v60;
  v61 = objc_msgSend(v1, sel_view);
  if (!v61)
  {
LABEL_66:
    __break(1u);
    goto LABEL_67;
  }
  v62 = v61;
  v63 = objc_msgSend(v61, sel_bottomAnchor);

  v64 = objc_msgSend(v150, sel_bottomAnchor);
  v65 = objc_msgSend(v63, sel_constraintEqualToAnchor_, v64);

  *(_QWORD *)(v45 + 56) = v65;
  v66 = objc_msgSend(v1, sel_view);
  if (!v66)
  {
LABEL_67:
    __break(1u);
    goto LABEL_68;
  }
  v67 = v66;
  v68 = objc_msgSend(v66, sel_topAnchor);

  v69 = objc_msgSend(v20, sel_topAnchor);
  v70 = objc_msgSend(v68, sel_constraintEqualToAnchor_, v69);

  *(_QWORD *)(v45 + 64) = v70;
  v71 = objc_msgSend(v20, sel_heightAnchor);
  v72 = objc_msgSend(v71, sel_constraintEqualToConstant_, 44.0);

  *(_QWORD *)(v45 + 72) = v72;
  v73 = objc_msgSend(v25, sel_heightAnchor);
  v74 = objc_msgSend(v73, sel_constraintGreaterThanOrEqualToConstant_, v44 + 8.0);

  *(_QWORD *)(v45 + 80) = v74;
  v75 = objc_msgSend(v34, sel_view);
  if (!v75)
  {
LABEL_68:
    __break(1u);
    goto LABEL_69;
  }
  v76 = v75;
  v77 = objc_msgSend(v75, sel_topAnchor);

  v78 = objc_msgSend(v25, sel_firstBaselineAnchor);
  v79 = objc_msgSend(v77, sel_constraintEqualToAnchor_constant_, v78, 24.0);

  *(_QWORD *)(v45 + 88) = v79;
  v80 = objc_msgSend(v20, sel_leadingAnchor);
  v81 = objc_msgSend(v1, sel_view);
  if (!v81)
  {
LABEL_69:
    __break(1u);
    goto LABEL_70;
  }
  v82 = v81;
  v83 = objc_msgSend(v81, sel_leadingAnchor);

  v84 = objc_msgSend(v80, sel_constraintEqualToAnchor_, v83);
  *(_QWORD *)(v45 + 96) = v84;
  v85 = objc_msgSend(v20, sel_trailingAnchor);
  v86 = objc_msgSend(v1, sel_view);
  if (!v86)
  {
LABEL_70:
    __break(1u);
    goto LABEL_71;
  }
  v87 = v86;
  v88 = objc_msgSend(v86, sel_trailingAnchor);

  v89 = objc_msgSend(v85, sel_constraintEqualToAnchor_, v88);
  *(_QWORD *)(v45 + 104) = v89;
  v90 = objc_msgSend(v149, sel_widthAnchor);
  v91 = objc_msgSend(v90, sel_constraintEqualToConstant_, 40.0);

  *(_QWORD *)(v45 + 112) = v91;
  v92 = objc_msgSend(v1, sel_view);
  if (!v92)
  {
LABEL_71:
    __break(1u);
    goto LABEL_72;
  }
  v93 = v92;
  v94 = objc_msgSend(v92, sel_leadingAnchor);

  v95 = objc_msgSend(v34, (SEL)&BackgroundSuggestionsProvider.ivar_base_size);
  if (!v95)
  {
LABEL_72:
    __break(1u);
    goto LABEL_73;
  }
  v96 = v95;
  v97 = objc_msgSend(v95, sel_leadingAnchor);

  v98 = objc_msgSend(v94, sel_constraintEqualToAnchor_, v97);
  *(_QWORD *)(v45 + 120) = v98;
  v99 = objc_msgSend(v1, (SEL)&BackgroundSuggestionsProvider.ivar_base_size);
  if (!v99)
  {
LABEL_73:
    __break(1u);
    goto LABEL_74;
  }
  v100 = v99;
  v101 = objc_msgSend(v99, sel_trailingAnchor);

  v102 = objc_msgSend(v34, (SEL)&BackgroundSuggestionsProvider.ivar_base_size);
  if (!v102)
  {
LABEL_74:
    __break(1u);
    goto LABEL_75;
  }
  v103 = v102;
  v104 = objc_msgSend(v102, sel_trailingAnchor);

  v105 = objc_msgSend(v101, sel_constraintEqualToAnchor_, v104);
  *(_QWORD *)(v45 + 128) = v105;
  v106 = objc_msgSend(v25, sel_leadingAnchor);
  v107 = objc_msgSend(v1, (SEL)&BackgroundSuggestionsProvider.ivar_base_size);
  if (!v107)
  {
LABEL_75:
    __break(1u);
    goto LABEL_76;
  }
  v108 = v107;
  v109 = objc_msgSend(v107, sel_leadingAnchor);

  v110 = objc_msgSend(v106, sel_constraintEqualToAnchor_constant_, v109, 60.0);
  *(_QWORD *)(v45 + 136) = v110;
  v111 = objc_msgSend(v25, sel_trailingAnchor);
  v112 = objc_msgSend(v1, (SEL)&BackgroundSuggestionsProvider.ivar_base_size);
  if (!v112)
  {
LABEL_76:
    __break(1u);
    goto LABEL_77;
  }
  v113 = v112;
  v114 = objc_msgSend(v112, sel_trailingAnchor);

  v115 = objc_msgSend(v111, sel_constraintEqualToAnchor_constant_, v114, -60.0);
  *(_QWORD *)(v45 + 144) = v115;
  sub_1DD2F9EF8();
  v151 = v45;
  v116 = objc_msgSend(v1, (SEL)&BackgroundSuggestionsProvider.ivar_base_size);
  v117 = v116;
  if (v148 != (id)1)
  {
    p_ivar_base_size = (uint32_t *)v150;
    if (!v116)
    {
LABEL_82:
      __break(1u);
      return;
    }
    v131 = objc_msgSend(v116, sel_topAnchor);

    v132 = objc_msgSend(v25, sel_topAnchor);
    v133 = objc_msgSend(v131, sel_constraintEqualToAnchor_constant_, v132, -10.0);

    v122 = v133;
    MEMORY[0x1DF0D7458]();
    if (*(_QWORD *)((v151 & 0xFFFFFFFFFFFFFF8) + 0x10) < *(_QWORD *)((v151 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      goto LABEL_43;
    goto LABEL_55;
  }
  if (!v116)
  {
LABEL_79:
    __break(1u);
    goto LABEL_80;
  }
  v118 = objc_msgSend(v116, sel_bottomAnchor);

  v119 = objc_msgSend(v34, (SEL)&BackgroundSuggestionsProvider.ivar_base_size);
  if (!v119)
  {
LABEL_80:
    __break(1u);
    goto LABEL_81;
  }
  v120 = v119;
  v121 = objc_msgSend(v119, sel_bottomAnchor);

  v122 = objc_msgSend(v118, sel_constraintEqualToAnchor_constant_, v121, 20.0);
  v123 = objc_msgSend(v1, (SEL)&BackgroundSuggestionsProvider.ivar_base_size);
  if (!v123)
  {
LABEL_81:
    __break(1u);
    goto LABEL_82;
  }
  v124 = v123;
  p_ivar_base_size = &SpiralLayoutProvider.ivar_base_size;
  v126 = objc_msgSend(v123, sel_topAnchor);

  v127 = objc_msgSend(v25, sel_topAnchor);
  v128 = objc_msgSend(v126, sel_constraintEqualToAnchor_constant_, v127, -35.0);

  if (v45 >> 62)
  {
    swift_bridgeObjectRetain();
    v129 = sub_1DD2FA0F0();
    swift_bridgeObjectRelease();
  }
  else
  {
    v129 = *(_QWORD *)((v45 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  if (__OFADD__(v129, 2))
  {
    __break(1u);
LABEL_55:
    sub_1DD2F9F04();
LABEL_43:
    sub_1DD2F9F10();
    sub_1DD2F9EF8();
    goto LABEL_44;
  }
  sub_1DD2EF750(v129 + 2, 1);
  sub_1DD2F9EF8();
  v130 = v122;
  MEMORY[0x1DF0D7458]();
  if (*(_QWORD *)((v45 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v45 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    sub_1DD2F9F04();
  sub_1DD2F9F10();
  sub_1DD2F9EF8();
  v122 = v128;
  MEMORY[0x1DF0D7458]();
  if (*(_QWORD *)((v45 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v45 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    sub_1DD2F9F04();
  sub_1DD2F9F10();
  sub_1DD2F9EF8();

  p_ivar_base_size = (uint32_t *)v150;
LABEL_44:

  v134 = (void *)objc_opt_self();
  sub_1DD2CDA0C(0, &qword_1EDB61510);
  swift_bridgeObjectRetain();
  v135 = (void *)sub_1DD2F9EC8();
  swift_bridgeObjectRelease();
  objc_msgSend(v134, sel_activateConstraints_, v135);

  v136 = objc_msgSend(v1, (SEL)&BackgroundSuggestionsProvider.ivar_base_size);
  if (!v136)
  {
LABEL_77:
    __break(1u);
    goto LABEL_78;
  }
  v137 = v136;
  v138 = objc_msgSend(v34, (SEL)&BackgroundSuggestionsProvider.ivar_base_size);
  if (!v138)
  {
LABEL_78:
    __break(1u);
    goto LABEL_79;
  }
  v139 = v138;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  objc_msgSend(v137, sel_bringSubviewToFront_, v139);

  v140 = &v1[OBJC_IVAR____TtC11EmojiPoster31EmojiEditingInputViewController_delegate];
  swift_beginAccess();
  if (MEMORY[0x1DF0D8130](v140))
  {
    v141 = *((_QWORD *)v140 + 1);
    v142 = objc_msgSend(v1, sel_traitCollection);
    v143 = objc_msgSend(v142, sel_userInterfaceIdiom);

    if (v143 == (id)1)
      v144 = 4;
    else
      v144 = 1;
    ObjectType = swift_getObjectType();
    objc_msgSend((id)objc_opt_self(), sel_keyboardSizeForOrientation_, v144);
    (*(void (**)(uint64_t, uint64_t, double))(v141 + 8))(ObjectType, v141, v146 + 44.0 + 22.0);

    swift_unknownObjectRelease();
  }
  else
  {

  }
}

uint64_t sub_1DD2EDBB4(char a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  objc_class *v11;
  void *v12;
  uint64_t v13;
  void *v14;
  id v15;
  uint64_t v17;
  uint64_t v18;
  _QWORD aBlock[6];
  objc_super v20;

  v2 = v1;
  v4 = sub_1DD2F9D30();
  v18 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1DD2F9D48();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = (objc_class *)type metadata accessor for EmojiEditingInputViewController();
  v20.receiver = v2;
  v20.super_class = v11;
  objc_msgSendSuper2(&v20, sel_viewWillAppear_, a1 & 1);
  sub_1DD2CDA0C(0, (unint64_t *)&unk_1F03D13C0);
  v12 = (void *)sub_1DD2F9F88();
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = v2;
  aBlock[4] = sub_1DD2EF830;
  aBlock[5] = v13;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1DD2EC198;
  aBlock[3] = &block_descriptor_9;
  v14 = _Block_copy(aBlock);
  v15 = v2;
  swift_release();
  sub_1DD2F9D3C();
  aBlock[0] = MEMORY[0x1E0DEE9D8];
  sub_1DD2DE9DC();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F03D13D0);
  sub_1DD2BFCE8((unint64_t *)&qword_1F03D1570, &qword_1F03D13D0, MEMORY[0x1E0DEAF38]);
  sub_1DD2F9FF4();
  MEMORY[0x1DF0D7530](0, v10, v6, v14);
  _Block_release(v14);

  (*(void (**)(char *, uint64_t))(v18 + 8))(v6, v4);
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t sub_1DD2EDDD0(char *a1)
{
  char *v2;
  uint64_t result;
  uint64_t v4;
  id v5;
  id v6;
  uint64_t v7;
  uint64_t ObjectType;
  double v9;

  v2 = &a1[OBJC_IVAR____TtC11EmojiPoster31EmojiEditingInputViewController_delegate];
  swift_beginAccess();
  result = MEMORY[0x1DF0D8130](v2);
  if (result)
  {
    v4 = *((_QWORD *)v2 + 1);
    v5 = objc_msgSend(a1, sel_traitCollection);
    v6 = objc_msgSend(v5, sel_userInterfaceIdiom);

    if (v6 == (id)1)
      v7 = 4;
    else
      v7 = 1;
    ObjectType = swift_getObjectType();
    objc_msgSend((id)objc_opt_self(), sel_keyboardSizeForOrientation_, v7);
    (*(void (**)(uint64_t, uint64_t, double))(v4 + 8))(ObjectType, v4, v9 + 44.0 + 22.0);
    return swift_unknownObjectRelease();
  }
  return result;
}

id sub_1DD2EDF00(char a1)
{
  char *v1;
  objc_super v4;

  v4.receiver = v1;
  v4.super_class = (Class)type metadata accessor for EmojiEditingInputViewController();
  objc_msgSendSuper2(&v4, sel_viewIsAppearing_, a1 & 1);
  return objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC11EmojiPoster31EmojiEditingInputViewController_textField], sel_becomeFirstResponder);
}

void sub_1DD2EDFD4(uint64_t a1)
{
  uint64_t v1;
  void *v2;
  void *v3;

  *(_QWORD *)(v1 + OBJC_IVAR____TtC11EmojiPoster31EmojiEditingInputViewController_emoji) = a1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v2 = *(void **)(v1 + OBJC_IVAR____TtC11EmojiPoster31EmojiEditingInputViewController_textField);
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDB61500);
  sub_1DD2BFCE8((unint64_t *)&qword_1EDB616A8, &qword_1EDB61500, MEMORY[0x1E0DEAF20]);
  sub_1DD2F9D90();
  swift_bridgeObjectRelease();
  v3 = (void *)sub_1DD2F9DB4();
  swift_bridgeObjectRelease();
  objc_msgSend(v2, sel_setText_, v3);

}

void sub_1DD2EE0B8(uint64_t a1)
{
  uint64_t v1;
  uint64_t ObjCClassFromMetadata;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  void *v9;
  uint64_t v10;
  void *v11;
  id v12;
  id v13;
  id v14;

  type metadata accessor for BackgroundViewController();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v4 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1DD2F9C34();

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDB61B08);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1DD2FE420;
  v6 = MEMORY[0x1E0DEB418];
  v7 = MEMORY[0x1E0DEB490];
  *(_QWORD *)(v5 + 56) = MEMORY[0x1E0DEB418];
  *(_QWORD *)(v5 + 64) = v7;
  *(_QWORD *)(v5 + 32) = a1;
  *(_QWORD *)(v5 + 96) = v6;
  *(_QWORD *)(v5 + 104) = v7;
  *(_QWORD *)(v5 + 72) = 6;
  sub_1DD2F9DC0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v8 = objc_allocWithZone(MEMORY[0x1E0CB3778]);
  v9 = (void *)sub_1DD2F9DB4();
  swift_bridgeObjectRelease();
  v14 = objc_msgSend(v8, sel_initWithString_, v9, 0x80000001DD301B20);

  v10 = *MEMORY[0x1E0DC1140];
  v11 = (void *)objc_opt_self();
  v12 = objc_msgSend(v11, sel_labelColor);
  objc_msgSend(v14, sel_addAttribute_value_range_, v10, v12, 0, 1);

  v13 = objc_msgSend(v11, sel_grayColor);
  objc_msgSend(v14, sel_addAttribute_value_range_, v10, v13, 1, 2);

  objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC11EmojiPoster31EmojiEditingInputViewController_emojiCountLabel), sel_setAttributedText_, v14);
}

BOOL sub_1DD2EE2F8(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  id v6;
  void *v7;
  id v8;
  void *v9;
  id v10;
  void *v11;
  id v12;
  id v13;
  void *v14;
  id v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  void *v19;
  id v20;
  void *v21;
  id v22;
  uint64_t v23;
  id v24;
  void *v25;
  uint64_t v26;
  unint64_t v27;
  NSObject *v28;
  os_log_type_t v29;
  uint8_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  NSObject *v36;
  os_log_type_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t ObjectType;
  void *v49;
  uint64_t v50;
  uint64_t v51[3];
  uint64_t aBlock;
  uint64_t v53;
  uint64_t (*v54)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  void *v55;
  void *v56;
  uint64_t v57;

  v6 = objc_msgSend(a1, sel_text);
  v50 = v3;
  if (v6)
  {
    v7 = v6;
    sub_1DD2F9DE4();

  }
  v8 = objc_allocWithZone(MEMORY[0x1E0CB3940]);
  v9 = (void *)sub_1DD2F9DB4();
  swift_bridgeObjectRelease();
  v10 = objc_msgSend(v8, sel_initWithString_, v9);

  v11 = (void *)sub_1DD2F9DB4();
  v49 = v10;
  v12 = objc_msgSend(v10, sel_stringByReplacingCharactersInRange_withString_, a2, a3, v11);

  sub_1DD2F9DE4();
  sub_1DD2F9EA4();
  v13 = objc_allocWithZone(MEMORY[0x1E0CB3940]);
  v14 = (void *)sub_1DD2F9DB4();
  v15 = objc_msgSend(v13, (SEL)&stru_1EA7195C8, v14);

  v16 = swift_allocObject();
  *(_QWORD *)(v16 + 16) = 0;
  *(_QWORD *)(v16 + 24) = 0xE000000000000000;
  v17 = v15;
  objc_msgSend(v17, sel_length);
  v56 = sub_1DD2DD938;
  v57 = v16;
  v18 = MEMORY[0x1E0C809B0];
  aBlock = MEMORY[0x1E0C809B0];
  v53 = 1107296256;
  v54 = sub_1DD2DD940;
  v55 = &block_descriptor_6_0;
  v19 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  CEMEnumerateEmojiTokensInStringWithBlock();

  _Block_release(v19);
  swift_beginAccess();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_release();
  v20 = objc_allocWithZone(MEMORY[0x1E0CB3940]);
  swift_bridgeObjectRetain();
  v21 = (void *)sub_1DD2F9DB4();
  swift_bridgeObjectRelease();
  v22 = objc_msgSend(v20, sel_initWithString_, v21);

  v23 = swift_allocObject();
  *(_QWORD *)(v23 + 16) = MEMORY[0x1E0DEE9D8];
  v24 = v22;
  objc_msgSend(v24, sel_length);
  v56 = sub_1DD2EF898;
  v57 = v23;
  aBlock = v18;
  v53 = 1107296256;
  v54 = sub_1DD2DD940;
  v55 = &block_descriptor_12;
  v25 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  CEMEnumerateEmojiTokensInStringWithBlock();

  _Block_release(v25);
  swift_beginAccess();
  v26 = *(_QWORD *)(v23 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_release();
  v27 = *(_QWORD *)(v26 + 16);
  swift_bridgeObjectRetain();
  if (v27 > 6)
  {
    v36 = sub_1DD2F9CD0();
    v37 = sub_1DD2F9F40();
    if (os_log_type_enabled(v36, v37))
    {
      v38 = swift_slowAlloc();
      v39 = swift_slowAlloc();
      v51[0] = v39;
      *(_DWORD *)v38 = 136315394;
      v40 = swift_bridgeObjectRetain();
      v41 = MEMORY[0x1DF0D7488](v40, MEMORY[0x1E0DEA968]);
      v43 = v42;
      swift_bridgeObjectRelease();
      sub_1DD2EF110(v41, v43, v51);
      sub_1DD2F9FC4();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v38 + 12) = 2048;
      sub_1DD2F9FC4();
      _os_log_impl(&dword_1DD2AD000, v36, v37, "emojiArray %s has greater than %ld emoji, not updating input", (uint8_t *)v38, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1DF0D80DC](v39, -1, -1);
      MEMORY[0x1DF0D80DC](v38, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

  }
  else
  {
    swift_bridgeObjectRetain();
    v28 = sub_1DD2F9CD0();
    v29 = sub_1DD2F9F40();
    if (os_log_type_enabled(v28, v29))
    {
      v30 = (uint8_t *)swift_slowAlloc();
      v31 = swift_slowAlloc();
      v51[0] = v31;
      *(_DWORD *)v30 = 136315138;
      v32 = swift_bridgeObjectRetain();
      v33 = MEMORY[0x1DF0D7488](v32, MEMORY[0x1E0DEA968]);
      v35 = v34;
      swift_bridgeObjectRelease();
      sub_1DD2EF110(v33, v35, v51);
      sub_1DD2F9FC4();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1DD2AD000, v28, v29, "Updating input with emojiArray %s", v30, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1DF0D80DC](v31, -1, -1);
      MEMORY[0x1DF0D80DC](v30, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    v44 = OBJC_IVAR____TtC11EmojiPoster31EmojiEditingInputViewController_emoji;
    *(_QWORD *)(v50 + OBJC_IVAR____TtC11EmojiPoster31EmojiEditingInputViewController_emoji) = v26;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    sub_1DD2EE0B8(v27);
    v45 = v50 + OBJC_IVAR____TtC11EmojiPoster31EmojiEditingInputViewController_delegate;
    swift_beginAccess();
    if (MEMORY[0x1DF0D8130](v45))
    {
      if (*(_QWORD *)(*(_QWORD *)(v50 + v44) + 16))
      {
        v46 = *(_QWORD *)(v45 + 8);
        ObjectType = swift_getObjectType();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v46 + 16))(v26, ObjectType, v46);
      }
      swift_unknownObjectRelease();
    }
    swift_bridgeObjectRelease();
  }

  return v27 < 7;
}

id sub_1DD2EEB1C()
{
  uint64_t v0;
  void *v1;
  id result;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  id v12;
  void *v13;
  id v14;
  uint64_t v15;
  id v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t ObjectType;
  _QWORD aBlock[6];

  v1 = *(void **)(v0 + OBJC_IVAR____TtC11EmojiPoster31EmojiEditingInputViewController_textField);
  result = objc_msgSend(v1, sel_text);
  if (result)
  {
    v3 = result;
    sub_1DD2F9DE4();

    v4 = sub_1DD2EFC30(1);
    v6 = v5;
    v8 = v7;
    v10 = v9;
    swift_bridgeObjectRelease();
    MEMORY[0x1DF0D73BC](v4, v6, v8, v10);
    swift_bridgeObjectRelease();
    v11 = (void *)sub_1DD2F9DB4();
    objc_msgSend(v1, sel_setText_, v11);

    v12 = objc_allocWithZone(MEMORY[0x1E0CB3940]);
    swift_bridgeObjectRetain();
    v13 = (void *)sub_1DD2F9DB4();
    swift_bridgeObjectRelease();
    v14 = objc_msgSend(v12, sel_initWithString_, v13);

    v15 = swift_allocObject();
    *(_QWORD *)(v15 + 16) = MEMORY[0x1E0DEE9D8];
    v16 = v14;
    objc_msgSend(v16, sel_length);
    aBlock[4] = sub_1DD2EF898;
    aBlock[5] = v15;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1DD2DD940;
    aBlock[3] = &block_descriptor_18;
    v17 = _Block_copy(aBlock);
    swift_retain();
    swift_release();
    CEMEnumerateEmojiTokensInStringWithBlock();

    _Block_release(v17);
    swift_beginAccess();
    v18 = *(_QWORD *)(v15 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_release();
    v19 = OBJC_IVAR____TtC11EmojiPoster31EmojiEditingInputViewController_emoji;
    *(_QWORD *)(v0 + OBJC_IVAR____TtC11EmojiPoster31EmojiEditingInputViewController_emoji) = v18;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    sub_1DD2EE0B8(*(_QWORD *)(v18 + 16));
    v20 = v0 + OBJC_IVAR____TtC11EmojiPoster31EmojiEditingInputViewController_delegate;
    swift_beginAccess();
    if (MEMORY[0x1DF0D8130](v20))
    {
      if (*(_QWORD *)(*(_QWORD *)(v0 + v19) + 16))
      {
        v21 = *(_QWORD *)(v20 + 8);
        ObjectType = swift_getObjectType();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v21 + 16))(v18, ObjectType, v21);
      }
      swift_unknownObjectRelease();
    }
    return (id)swift_bridgeObjectRelease();
  }
  return result;
}

id EmojiEditingInputViewController.__allocating_init(nibName:bundle:)(uint64_t a1, uint64_t a2, void *a3)
{
  objc_class *v3;
  objc_class *v4;
  void *v6;
  id v7;

  v4 = v3;
  if (a2)
  {
    v6 = (void *)sub_1DD2F9DB4();
    swift_bridgeObjectRelease();
  }
  else
  {
    v6 = 0;
  }
  v7 = objc_msgSend(objc_allocWithZone(v4), sel_initWithNibName_bundle_, v6, a3);

  return v7;
}

void EmojiEditingInputViewController.init(nibName:bundle:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id EmojiEditingInputViewController.__deallocating_deinit()
{
  return sub_1DD2EEEE8(0, type metadata accessor for EmojiEditingInputViewController);
}

id sub_1DD2EEEE8(uint64_t a1, uint64_t (*a2)(void))
{
  void *v2;
  objc_super v4;

  v4.receiver = v2;
  v4.super_class = (Class)a2();
  return objc_msgSendSuper2(&v4, sel_dealloc);
}

uint64_t sub_1DD2EEFB8(uint64_t result, _BYTE **a2)
{
  _BYTE *v2;

  v2 = *a2;
  *v2 = result;
  *a2 = v2 + 1;
  return result;
}

uint64_t sub_1DD2EEFC8(uint64_t (**a1)(uint64_t, uint64_t, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*a1)(a2, a3, a4);
}

void *sub_1DD2EEFFC(void *__src, uint64_t a2, void *__dst, uint64_t a4)
{
  uint64_t v4;

  if (__src)
    v4 = a2 - (_QWORD)__src;
  else
    v4 = 0;
  if (!__dst)
  {
    if (v4 <= 0)
      return __src;
LABEL_10:
    __src = (void *)sub_1DD2FA12C();
    __break(1u);
    return __src;
  }
  if (a4 - (uint64_t)__dst < v4)
    goto LABEL_10;
  if (__src)
    return memmove(__dst, __src, a2 - (_QWORD)__src);
  return __src;
}

_BYTE **sub_1DD2EF090(_BYTE **result, uint64_t a2, uint64_t a3, char a4)
{
  _BYTE *v4;

  v4 = *result;
  *v4 = a4;
  *result = v4 + 1;
  return result;
}

uint64_t sub_1DD2EF0A0(uint64_t *a1, uint64_t a2, uint64_t *a3, uint64_t (*a4)(void))
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t result;

  v6 = a4();
  sub_1DD2EF110(v6, v7, a3);
  v8 = *a1 + 8;
  sub_1DD2F9FC4();
  result = swift_bridgeObjectRelease();
  *a1 = v8;
  return result;
}

uint64_t sub_1DD2EF110(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12[3];
  uint64_t ObjectType;

  v6 = sub_1DD2EF1E0(v12, 0, 0, 1, a1, a2);
  v7 = v12[0];
  if (v6)
  {
    v8 = v6;
    ObjectType = swift_getObjectType();
    v12[0] = v8;
    v9 = *a3;
    if (*a3)
    {
      sub_1DD2EFCE8((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    ObjectType = MEMORY[0x1E0DEC2B8];
    v12[0] = a1;
    v12[1] = a2;
    v10 = *a3;
    if (*a3)
    {
      sub_1DD2EFCE8((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
  return v7;
}

uint64_t sub_1DD2EF1E0(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  uint64_t v8;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  _QWORD __src[2];

  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (_QWORD *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            sub_1DD2F9FD0();
            result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    result = sub_1DD2EF398(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0)
    goto LABEL_13;
  if ((a5 & 0x1000000000000000) != 0)
  {
    v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  v8 = sub_1DD2FA078();
  if (!v8)
  {
    sub_1DD2FA0D8();
    __break(1u);
LABEL_17:
    result = sub_1DD2FA12C();
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0)
    return 0;
  else
    return swift_unknownObjectRetain();
}

uint64_t sub_1DD2EF398(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v2 = sub_1DD2EF42C(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_1DD2EF604(0, *(_QWORD *)(v2 + 16) + 1, 1, (char *)v2);
  v4 = *(_QWORD *)(v2 + 16);
  v3 = *(_QWORD *)(v2 + 24);
  if (v4 >= v3 >> 1)
    v2 = sub_1DD2EF604(v3 > 1, v4 + 1, 1, (char *)v2);
  *(_QWORD *)(v2 + 16) = v4 + 1;
  *(_BYTE *)(v2 + 32 + v4) = 0;
  return v2;
}

uint64_t sub_1DD2EF42C(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  char v6;
  uint64_t result;

  if ((a2 & 0x1000000000000000) != 0)
    goto LABEL_10;
  if ((a2 & 0x2000000000000000) != 0)
    v2 = HIBYTE(a2) & 0xF;
  else
    v2 = a1 & 0xFFFFFFFFFFFFLL;
  if (v2)
  {
    while (1)
    {
      v3 = sub_1DD2EF5A0(v2, 0);
      if (v2 < 0)
        break;
      v4 = v3;
      v5 = sub_1DD2FA030();
      if ((v6 & 1) != 0)
        goto LABEL_14;
      if (v5 == v2)
        return (uint64_t)v4;
      sub_1DD2FA0D8();
      __break(1u);
LABEL_10:
      v2 = sub_1DD2F9E8C();
      if (!v2)
        return MEMORY[0x1E0DEE9D8];
    }
    sub_1DD2FA12C();
    __break(1u);
LABEL_14:
    result = sub_1DD2FA0D8();
    __break(1u);
  }
  else
  {
    return MEMORY[0x1E0DEE9D8];
  }
  return result;
}

_QWORD *sub_1DD2EF5A0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v4;
  size_t v5;

  if (a2 <= a1)
    v2 = a1;
  else
    v2 = a2;
  if (!v2)
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDB61610);
  v4 = (_QWORD *)swift_allocObject();
  v5 = _swift_stdlib_malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

uint64_t sub_1DD2EF604(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDB61610);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[v8])
      memmove(v12, v13, v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_1DD2FA12C();
  __break(1u);
  return result;
}

uint64_t sub_1DD2EF750(uint64_t a1, char a2)
{
  uint64_t *v2;
  unint64_t v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5 = *v2;
  result = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *v2 = v5;
  v7 = 0;
  if ((result & 1) != 0 && (v5 & 0x8000000000000000) == 0 && (v5 & 0x4000000000000000) == 0)
  {
    if (a1 <= *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x18) >> 1)
      return result;
    v7 = 1;
  }
  if (v5 >> 62)
  {
    swift_bridgeObjectRetain();
    v8 = sub_1DD2FA0F0();
    swift_bridgeObjectRelease();
  }
  else
  {
    v8 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  if (v8 <= a1)
    v9 = a1;
  else
    v9 = v8;
  result = MEMORY[0x1DF0D75F0](v7, v9, a2 & 1, v5);
  *v2 = result;
  return result;
}

uint64_t sub_1DD2EF80C()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_1DD2EF830()
{
  uint64_t v0;

  return sub_1DD2EDDD0(*(char **)(v0 + 16));
}

uint64_t block_copy_helper_9(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_9()
{
  return swift_release();
}

uint64_t sub_1DD2EF850()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1DD2EF874()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_1DD2EF898(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  sub_1DD2F4240(a1, a2, a3, a4, v4);
}

uint64_t sub_1DD2EF8A0@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v5;

  v3 = *a1 + OBJC_IVAR____TtC11EmojiPoster31EmojiEditingInputViewController_delegate;
  swift_beginAccess();
  result = MEMORY[0x1DF0D8130](v3);
  v5 = *(_QWORD *)(v3 + 8);
  *a2 = result;
  a2[1] = v5;
  return result;
}

uint64_t sub_1DD2EF8F8(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(a1 + 8);
  v3 = *a2 + OBJC_IVAR____TtC11EmojiPoster31EmojiEditingInputViewController_delegate;
  swift_beginAccess();
  *(_QWORD *)(v3 + 8) = v2;
  return swift_unknownObjectWeakAssign();
}

uint64_t dispatch thunk of EmojiEditingInputViewControllerDelegate.didUpdateDesiredHeight(_:)(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of EmojiEditingInputViewControllerDelegate.didUpdateWithEmoji(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of EmojiEditingInputViewControllerDelegate.didTapCloseButton(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t sub_1DD2EF970()
{
  return type metadata accessor for EmojiEditingInputViewController();
}

uint64_t sub_1DD2EF978()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1DD2F9CE8();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for EmojiEditingInputViewController()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of EmojiEditingInputViewController.delegate.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xA0))();
}

uint64_t dispatch thunk of EmojiEditingInputViewController.delegate.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xA8))();
}

uint64_t dispatch thunk of EmojiEditingInputViewController.delegate.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xB0))();
}

uint64_t dispatch thunk of EmojiEditingInputViewController.__allocating_init(emoji:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 184))();
}

uint64_t dispatch thunk of EmojiEditingInputViewController.cleanupKeyboardResources()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xC0))();
}

uint64_t dispatch thunk of EmojiEditingInputViewController.height(forOrientation:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xC8))();
}

uint64_t dispatch thunk of EmojiEditingInputViewController.updateForEditingEmoji(_:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xD0))();
}

uint64_t dispatch thunk of EmojiEditingInputViewController.textField(_:shouldChangeCharactersIn:replacementString:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xE0))();
}

void sub_1DD2EFAF0()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = OBJC_IVAR____TtC11EmojiPoster31EmojiEditingInputViewController_navBar;
  *(_QWORD *)&v0[v1] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3A28]), sel_init);
  sub_1DD2F9CDC();
  v2 = OBJC_IVAR____TtC11EmojiPoster31EmojiEditingInputViewController_textField;
  type metadata accessor for NoKeyboardTextField();
  *(_QWORD *)&v0[v2] = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  v3 = OBJC_IVAR____TtC11EmojiPoster31EmojiEditingInputViewController_emojiCountLabel;
  *(_QWORD *)&v0[v3] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_init);
  v4 = OBJC_IVAR____TtC11EmojiPoster31EmojiEditingInputViewController_keyboardVC;
  *(_QWORD *)&v0[v4] = objc_msgSend((id)objc_opt_self(), sel_createKeyboardViewController);
  *(_QWORD *)&v0[OBJC_IVAR____TtC11EmojiPoster31EmojiEditingInputViewController_delegate + 8] = 0;
  swift_unknownObjectWeakInit();

  sub_1DD2FA0E4();
  __break(1u);
}

uint64_t sub_1DD2EFC30(uint64_t result)
{
  uint64_t v1;

  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    v1 = result;
    result = sub_1DD2F9E50();
    if (!__OFSUB__(result, v1))
    {
      sub_1DD2F9E68();
      return sub_1DD2F9EB0();
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1DD2EFCE8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_1DD2EFD3C(double a1, double a2)
{
  uint64_t v2;

  sub_1DD2D733C((char *)(v2 + 32));
  *(_QWORD *)(v2 + 40) = 0x4075E00000000000;
  *(_OWORD *)(v2 + 48) = xmmword_1DD2FE550;
  *(_BYTE *)(v2 + 64) = 1;
  *(_OWORD *)(v2 + 72) = xmmword_1DD2FE560;
  *(_OWORD *)(v2 + 88) = xmmword_1DD2FE570;
  *(_OWORD *)(v2 + 104) = xmmword_1DD2FE580;
  *(_OWORD *)(v2 + 120) = xmmword_1DD2FE590;
  *(double *)(v2 + 16) = a1;
  *(double *)(v2 + 24) = a2;
  return v2;
}

double sub_1DD2EFDBC()
{
  uint64_t v0;
  double result;
  char v2;

  if ((*(_BYTE *)(v0 + 64) & 1) == 0)
    return *(double *)(v0 + 56);
  sub_1DD2D733C(&v2);
  result = dbl_1DD2FF260[v2];
  *(double *)(v0 + 56) = result;
  *(_BYTE *)(v0 + 64) = 0;
  return result;
}

void sub_1DD2EFE04(uint64_t a1, double a2, double a3)
{
  uint64_t v3;
  double v6;
  double v7;
  uint64_t v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  long double v15;

  v6 = (double)a1;
  v7 = (double)a1 / 399.0 * sub_1DD2EFDBC() + 0.0;
  sub_1DD2F0138(-0.29);
  sub_1DD2F0278(v8, v7, 0.0, *(double *)(v3 + 56));
  v10 = v9;
  swift_bridgeObjectRelease();
  v11 = (v6 / 400.0 * 60.0 + 0.0) * a3 + (1.0 - a2) * (v6 / 400.0 * 30.0 + 0.0) + v10 + 0.0;
  v12 = 2.0;
  if (!*(_BYTE *)(v3 + 32))
    v12 = 3.0;
  v13 = *(double *)(v3 + 16) * 0.5;
  v14 = v13 + v11 / v12;
  if (v6 * -29.135 != 0.0)
  {
    v15 = atan2(*(double *)(v3 + 24) * 0.5 - *(double *)(v3 + 24) * 0.5, v14 - v13);
    __sincos_stret(fabs(v6 * -29.135) * 0.0174532925 + v15);
  }
}

uint64_t sub_1DD2EFF60(uint64_t a1)
{
  double v2;
  uint64_t v3;
  uint64_t result;

  v2 = (double)a1 / 399.0 * 0.83 + -0.07;
  sub_1DD2F0138(-0.15);
  sub_1DD2F0278(v3, v2, 0.0, 0.76);
  result = swift_bridgeObjectRelease();
  if (__OFSUB__(399, a1))
    __break(1u);
  return result;
}

uint64_t sub_1DD2F0108()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for NewSpiralLayoutProvider()
{
  return objc_opt_self();
}

float sub_1DD2F0138(double a1)
{
  double v1;
  BOOL v2;
  double v3;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  uint64_t v12;
  float v13;
  float v14;

  if (a1 != 0.0)
  {
    v1 = 1.0 / (a1 + a1);
    if (a1 > 1.0)
      v1 = 0.5;
    v2 = a1 > -1.0;
    v3 = -0.5;
    if (v2)
      v3 = v1;
    v4 = v3 + 0.5;
    v5 = 0.5 - v3;
    v6 = 0.0 - (0.5 - v3);
    v7 = 1.0 - (v3 + 0.5);
    v8 = 1.0 - (0.5 - v3);
    v9 = (0.0 - v4) * (0.0 - v4) + v6 * v6;
    v10 = v6 * v8 + (0.0 - v4) * v7 + v9;
    v11 = (sqrt((v9 + v9) * v10) - v10) * 4.0 / 3.0 / ((0.0 - v4) * v8 - v6 * v7);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EDB61B00);
    v12 = swift_allocObject();
    *(_OWORD *)(v12 + 16) = xmmword_1DD2FDFD0;
    *(float *)&a1 = v4 + 0.0 - v4 - v6 * v11;
    v13 = v5 + v6 + (0.0 - v4) * v11;
    *(_DWORD *)(v12 + 32) = LODWORD(a1);
    *(float *)(v12 + 36) = v13;
    *(float *)&a1 = v4 + v7 + v8 * v11;
    v14 = v5 + v8 - v7 * v11;
    *(_DWORD *)(v12 + 40) = LODWORD(a1);
    *(float *)(v12 + 44) = v14;
  }
  return *(float *)&a1;
}

void sub_1DD2F0278(uint64_t a1, double a2, double a3, double a4)
{
  unint64_t v4;
  int v5;
  int v6;
  double v7;
  int v8;
  int v9;
  id v10;
  double v11;
  double v12;
  double v13;
  double v14;
  id v15;
  double v16;

  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (v4 == 1)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  if (v4 < 3)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  if (v4 != 3)
  {
    v5 = *(_DWORD *)(a1 + 32);
    v6 = *(_DWORD *)(a1 + 36);
    v7 = (a2 - a3) / (a4 - a3) + 0.0;
    v8 = *(_DWORD *)(a1 + 40);
    v9 = *(_DWORD *)(a1 + 44);
    v10 = objc_allocWithZone(MEMORY[0x1E0CD27D0]);
    LODWORD(v11) = v5;
    LODWORD(v12) = v6;
    LODWORD(v13) = v8;
    LODWORD(v14) = v9;
    v15 = objc_msgSend(v10, sel_initWithControlPoints__::, v11, v12, v13, v14);
    *(float *)&v16 = v7;
    objc_msgSend(v15, sel__solveForInput_, v16);

    return;
  }
LABEL_9:
  __break(1u);
}

uint64_t sub_1DD2F034C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  unint64_t v9;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  int64_t v14;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD **)v1;
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_5;
    goto LABEL_18;
  }
  if (v4 <= v5)
    v14 = v4 + v2;
  else
    v14 = v4;
  v3 = sub_1DD2DE138(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
LABEL_5:
  v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v9 = (unint64_t)&v3[16 * v8 + 4];
  if (a1 + 32 < v9 + (v2 << 7) && v9 < a1 + 32 + (v2 << 7))
    goto LABEL_24;
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    result = swift_bridgeObjectRelease();
    *(_QWORD *)v1 = v3;
    return result;
  }
  v11 = v3[2];
  v12 = __OFADD__(v11, v2);
  v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  result = sub_1DD2FA12C();
  __break(1u);
  return result;
}

uint64_t sub_1DD2F049C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  if (*(_QWORD *)(v0 + 16))
  {
    v1 = *(_QWORD *)(v0 + 16);
  }
  else
  {
    v2 = v0;
    type metadata accessor for BackgroundSuggestionsProvider();
    swift_allocObject();
    v1 = sub_1DD2F533C();
    *(_QWORD *)(v2 + 16) = v1;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v1;
}

uint64_t ConfigurationProvider.__allocating_init()()
{
  uint64_t result;

  result = swift_allocObject();
  *(_QWORD *)(result + 16) = 0;
  *(_QWORD *)(result + 24) = 0;
  return result;
}

uint64_t ConfigurationProvider.init()()
{
  uint64_t v0;
  uint64_t result;

  result = v0;
  *(_QWORD *)(v0 + 16) = 0;
  *(_QWORD *)(v0 + 24) = 0;
  return result;
}

void sub_1DD2F053C(char *a1@<X0>, char *a2@<X1>, uint64_t a3@<X8>)
{
  char v4;
  char v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v14[2];

  v14[1] = *MEMORY[0x1E0C80C00];
  v4 = *a1;
  v5 = *a2;
  v6 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3658]), sel_initWithRed_green_blue_alpha_, 0.501960784, 0.776470588, 0.631372549, 1.0);
  v13 = 0;
  v14[0] = 0;
  v11 = 0;
  v12 = 0;
  objc_msgSend(v6, sel_getRed_green_blue_alpha_, v14, &v13, &v12, &v11);
  v8 = v13;
  v7 = v14[0];
  v10 = v11;
  v9 = v12;

  *(_QWORD *)a3 = 0;
  *(_QWORD *)(a3 + 8) = 0;
  *(_BYTE *)(a3 + 16) = 0;
  *(_QWORD *)(a3 + 24) = v7;
  *(_QWORD *)(a3 + 32) = v8;
  *(_QWORD *)(a3 + 40) = v9;
  *(_QWORD *)(a3 + 48) = v10;
  *(_OWORD *)(a3 + 56) = 0u;
  *(_OWORD *)(a3 + 72) = 0u;
  *(_OWORD *)(a3 + 88) = 0u;
  *(_WORD *)(a3 + 104) = 0;
  *(_BYTE *)(a3 + 106) = v4;
  *(_BYTE *)(a3 + 107) = v5;
  *(_QWORD *)(a3 + 112) = &unk_1EA7128F0;
  *(_BYTE *)(a3 + 120) = 0;
}

double sub_1DD2F0654@<D0>(_OWORD *a1@<X8>)
{
  __int128 v2;
  __int128 v3;
  double result;
  __int128 v5;
  __int16 v6;
  char v7[8];
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int16 v13;
  _OWORD v14[2];
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  _OWORD v19[2];

  v7[0] = 0;
  v8 = 0u;
  v9 = 0u;
  v10 = 0u;
  v11 = 0u;
  v12 = 0u;
  v13 = 257;
  v6 = 0;
  EmojiPosterConfiguration.init(identifier:backgroundConfiguration:layoutStyle:sizeVariant:emoji:usesParalax:)(0, 0, v7, (char *)&v6 + 1, (char *)&v6, (unint64_t)&unk_1EA712940, 0, (uint64_t)v14);
  v2 = v18;
  a1[4] = v17;
  a1[5] = v2;
  a1[6] = v19[0];
  *(_OWORD *)((char *)a1 + 105) = *(_OWORD *)((char *)v19 + 9);
  v3 = v14[1];
  *a1 = v14[0];
  a1[1] = v3;
  result = *(double *)&v15;
  v5 = v16;
  a1[2] = v15;
  a1[3] = v5;
  return result;
}

uint64_t sub_1DD2F06FC()
{
  uint64_t v0;
  id v1;
  void *v2;
  void *v3;
  id v4;
  uint64_t v5;
  id v6;
  void *v7;
  id v8;
  uint64_t v9;
  id v10;
  void *v11;
  id v12;
  uint64_t v13;
  id v14;
  void *v15;
  id v16;
  uint64_t v17;
  id v18;
  void *v19;
  id v20;
  uint64_t v21;
  id v22;
  void *v23;
  id v24;
  uint64_t v25;
  id v26;
  void *v27;
  id v28;
  uint64_t v29;
  id v30;
  void *v31;
  id v32;
  uint64_t v33;
  id v34;
  void *v35;
  id v36;
  uint64_t v37;
  id v38;
  void *v39;
  id v40;
  uint64_t v41;
  id v42;
  void *v43;
  id v44;
  uint64_t v45;
  id v46;
  void *v47;
  id v48;
  uint64_t v49;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int16 v62;
  uint64_t v63;

  v63 = *MEMORY[0x1E0C80C00];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDB61AE8);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1DD2FF2B0;
  if (qword_1EDB61D20 != -1)
    swift_once();
  v1 = (id)qword_1EDB64C48;
  v2 = (void *)sub_1DD2F9DB4();
  v3 = (void *)objc_opt_self();
  v4 = objc_msgSend(v3, sel_colorNamed_inBundle_compatibleWithTraitCollection_, v2, v1, 0);

  if (!v4)
  {
    __break(1u);
    goto LABEL_17;
  }
  v53 = 0;
  v54 = 0;
  v51 = 0;
  v52 = 0;
  objc_msgSend(v4, sel_getRed_green_blue_alpha_, &v54, &v53, &v52, &v51);

  v5 = v54;
  LOBYTE(v54) = 0;
  v55 = v5;
  v56 = v53;
  v57 = v52;
  v58 = v51;
  v59 = 0u;
  v60 = 0u;
  v61 = 0u;
  v62 = 257;
  LOBYTE(v53) = 0;
  LOBYTE(v52) = 0;
  EmojiPosterConfiguration.init(identifier:backgroundConfiguration:layoutStyle:sizeVariant:emoji:usesParalax:)(0x6F6C436568546E69, 0xEB00000000736475, (char *)&v54, (char *)&v53, (char *)&v52, (unint64_t)&unk_1EA712970, 0, v0 + 32);
  v6 = (id)qword_1EDB64C48;
  v7 = (void *)sub_1DD2F9DB4();
  v8 = objc_msgSend(v3, sel_colorNamed_inBundle_compatibleWithTraitCollection_, v7, v6, 0);

  if (!v8)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  v53 = 0;
  v54 = 0;
  v51 = 0;
  v52 = 0;
  objc_msgSend(v8, sel_getRed_green_blue_alpha_, &v54, &v53, &v52, &v51);

  v9 = v54;
  LOBYTE(v54) = 0;
  v55 = v9;
  v56 = v53;
  v57 = v52;
  v58 = v51;
  v59 = 0u;
  v60 = 0u;
  v61 = 0u;
  v62 = 257;
  LOBYTE(v53) = 0;
  LOBYTE(v52) = 2;
  EmojiPosterConfiguration.init(identifier:backgroundConfiguration:layoutStyle:sizeVariant:emoji:usesParalax:)(0x6568547265646E75, 0xEB00000000616553, (char *)&v54, (char *)&v53, (char *)&v52, (unint64_t)&unk_1EA7129F0, 0, v0 + 160);
  v10 = (id)qword_1EDB64C48;
  v11 = (void *)sub_1DD2F9DB4();
  v12 = objc_msgSend(v3, sel_colorNamed_inBundle_compatibleWithTraitCollection_, v11, v10, 0);

  if (!v12)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  v53 = 0;
  v54 = 0;
  v51 = 0;
  v52 = 0;
  objc_msgSend(v12, sel_getRed_green_blue_alpha_, &v54, &v53, &v52, &v51);

  v13 = v54;
  LOBYTE(v54) = 0;
  v55 = v13;
  v56 = v53;
  v57 = v52;
  v58 = v51;
  v59 = 0u;
  v60 = 0u;
  v61 = 0u;
  v62 = 257;
  LOBYTE(v53) = 0;
  LOBYTE(v52) = 0;
  EmojiPosterConfiguration.init(identifier:backgroundConfiguration:layoutStyle:sizeVariant:emoji:usesParalax:)(0x737265776F6C66, 0xE700000000000000, (char *)&v54, (char *)&v53, (char *)&v52, (unint64_t)&unk_1EA712A60, 0, v0 + 288);
  v14 = (id)qword_1EDB64C48;
  v15 = (void *)sub_1DD2F9DB4();
  v16 = objc_msgSend(v3, sel_colorNamed_inBundle_compatibleWithTraitCollection_, v15, v14, 0);

  if (!v16)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v53 = 0;
  v54 = 0;
  v51 = 0;
  v52 = 0;
  objc_msgSend(v16, sel_getRed_green_blue_alpha_, &v54, &v53, &v52, &v51);

  v17 = v54;
  LOBYTE(v54) = 0;
  v55 = v17;
  v56 = v53;
  v57 = v52;
  v58 = v51;
  v59 = 0u;
  v60 = 0u;
  v61 = 0u;
  v62 = 257;
  LOBYTE(v53) = 0;
  LOBYTE(v52) = 2;
  EmojiPosterConfiguration.init(identifier:backgroundConfiguration:layoutStyle:sizeVariant:emoji:usesParalax:)(0x7963697073, 0xE500000000000000, (char *)&v54, (char *)&v53, (char *)&v52, (unint64_t)&unk_1EA712AB0, 0, v0 + 416);
  v18 = (id)qword_1EDB64C48;
  v19 = (void *)sub_1DD2F9DB4();
  v20 = objc_msgSend(v3, sel_colorNamed_inBundle_compatibleWithTraitCollection_, v19, v18, 0);

  if (!v20)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  v53 = 0;
  v54 = 0;
  v51 = 0;
  v52 = 0;
  objc_msgSend(v20, sel_getRed_green_blue_alpha_, &v54, &v53, &v52, &v51);

  v21 = v54;
  LOBYTE(v54) = 0;
  v55 = v21;
  v56 = v53;
  v57 = v52;
  v58 = v51;
  v59 = 0u;
  v60 = 0u;
  v61 = 0u;
  v62 = 257;
  LOBYTE(v53) = 2;
  LOBYTE(v52) = 1;
  EmojiPosterConfiguration.init(identifier:backgroundConfiguration:layoutStyle:sizeVariant:emoji:usesParalax:)(0x7379656C696D73, 0xE700000000000000, (char *)&v54, (char *)&v53, (char *)&v52, (unint64_t)&unk_1EA712B00, 0, v0 + 544);
  v22 = (id)qword_1EDB64C48;
  v23 = (void *)sub_1DD2F9DB4();
  v24 = objc_msgSend(v3, sel_colorNamed_inBundle_compatibleWithTraitCollection_, v23, v22, 0);

  if (!v24)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v53 = 0;
  v54 = 0;
  v51 = 0;
  v52 = 0;
  objc_msgSend(v24, sel_getRed_green_blue_alpha_, &v54, &v53, &v52, &v51);

  v25 = v54;
  LOBYTE(v54) = 0;
  v55 = v25;
  v56 = v53;
  v57 = v52;
  v58 = v51;
  v59 = 0u;
  v60 = 0u;
  v61 = 0u;
  v62 = 257;
  LOBYTE(v53) = 0;
  LOBYTE(v52) = 2;
  EmojiPosterConfiguration.init(identifier:backgroundConfiguration:layoutStyle:sizeVariant:emoji:usesParalax:)(0xD000000000000010, 0x80000001DD301C30, (char *)&v54, (char *)&v53, (char *)&v52, (unint64_t)&unk_1EA712B40, 0, v0 + 672);
  v26 = (id)qword_1EDB64C48;
  v27 = (void *)sub_1DD2F9DB4();
  v28 = objc_msgSend(v3, sel_colorNamed_inBundle_compatibleWithTraitCollection_, v27, v26, 0);

  if (!v28)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v53 = 0;
  v54 = 0;
  v51 = 0;
  v52 = 0;
  objc_msgSend(v28, sel_getRed_green_blue_alpha_, &v54, &v53, &v52, &v51);

  v29 = v54;
  LOBYTE(v54) = 0;
  v55 = v29;
  v56 = v53;
  v57 = v52;
  v58 = v51;
  v59 = 0u;
  v60 = 0u;
  v61 = 0u;
  v62 = 257;
  LOBYTE(v53) = 0;
  LOBYTE(v52) = 2;
  EmojiPosterConfiguration.init(identifier:backgroundConfiguration:layoutStyle:sizeVariant:emoji:usesParalax:)(0x65727574616ELL, 0xE600000000000000, (char *)&v54, (char *)&v53, (char *)&v52, (unint64_t)&unk_1EA712BC0, 0, v0 + 800);
  v30 = (id)qword_1EDB64C48;
  v31 = (void *)sub_1DD2F9DB4();
  v32 = objc_msgSend(v3, sel_colorNamed_inBundle_compatibleWithTraitCollection_, v31, v30, 0);

  if (!v32)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v53 = 0;
  v54 = 0;
  v51 = 0;
  v52 = 0;
  objc_msgSend(v32, sel_getRed_green_blue_alpha_, &v54, &v53, &v52, &v51);

  v33 = v54;
  LOBYTE(v54) = 0;
  v55 = v33;
  v56 = v53;
  v57 = v52;
  v58 = v51;
  v59 = 0u;
  v60 = 0u;
  v61 = 0u;
  v62 = 257;
  LOBYTE(v53) = 0;
  LOBYTE(v52) = 2;
  EmojiPosterConfiguration.init(identifier:backgroundConfiguration:layoutStyle:sizeVariant:emoji:usesParalax:)(1685024614, 0xE400000000000000, (char *)&v54, (char *)&v53, (char *)&v52, (unint64_t)&unk_1EA712C20, 0, v0 + 928);
  v34 = (id)qword_1EDB64C48;
  v35 = (void *)sub_1DD2F9DB4();
  v36 = objc_msgSend(v3, sel_colorNamed_inBundle_compatibleWithTraitCollection_, v35, v34, 0);

  if (!v36)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v53 = 0;
  v54 = 0;
  v51 = 0;
  v52 = 0;
  objc_msgSend(v36, sel_getRed_green_blue_alpha_, &v54, &v53, &v52, &v51);

  v37 = v54;
  LOBYTE(v54) = 0;
  v55 = v37;
  v56 = v53;
  v57 = v52;
  v58 = v51;
  v59 = 0u;
  v60 = 0u;
  v61 = 0u;
  v62 = 257;
  LOBYTE(v53) = 0;
  LOBYTE(v52) = 2;
  EmojiPosterConfiguration.init(identifier:backgroundConfiguration:layoutStyle:sizeVariant:emoji:usesParalax:)(0x6D696E616D726166, 0xEB00000000736C61, (char *)&v54, (char *)&v53, (char *)&v52, (unint64_t)&unk_1EA712C70, 0, v0 + 1056);
  v38 = (id)qword_1EDB64C48;
  v39 = (void *)sub_1DD2F9DB4();
  v40 = objc_msgSend(v3, sel_colorNamed_inBundle_compatibleWithTraitCollection_, v39, v38, 0);

  if (!v40)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v53 = 0;
  v54 = 0;
  v51 = 0;
  v52 = 0;
  objc_msgSend(v40, sel_getRed_green_blue_alpha_, &v54, &v53, &v52, &v51);

  v41 = v54;
  LOBYTE(v54) = 0;
  v55 = v41;
  v56 = v53;
  v57 = v52;
  v58 = v51;
  v59 = 0u;
  v60 = 0u;
  v61 = 0u;
  v62 = 257;
  LOBYTE(v53) = 0;
  LOBYTE(v52) = 2;
  EmojiPosterConfiguration.init(identifier:backgroundConfiguration:layoutStyle:sizeVariant:emoji:usesParalax:)(0x755365636966666FLL, 0xEE007365696C7070, (char *)&v54, (char *)&v53, (char *)&v52, (unint64_t)&unk_1EA712CC0, 0, v0 + 1184);
  v42 = (id)qword_1EDB64C48;
  v43 = (void *)sub_1DD2F9DB4();
  v44 = objc_msgSend(v3, sel_colorNamed_inBundle_compatibleWithTraitCollection_, v43, v42, 0);

  if (!v44)
  {
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
  }
  v53 = 0;
  v54 = 0;
  v51 = 0;
  v52 = 0;
  objc_msgSend(v44, sel_getRed_green_blue_alpha_, &v54, &v53, &v52, &v51);

  v45 = v54;
  LOBYTE(v54) = 0;
  v55 = v45;
  v56 = v53;
  v57 = v52;
  v58 = v51;
  v59 = 0u;
  v60 = 0u;
  v61 = 0u;
  v62 = 257;
  LOBYTE(v53) = 0;
  LOBYTE(v52) = 1;
  EmojiPosterConfiguration.init(identifier:backgroundConfiguration:layoutStyle:sizeVariant:emoji:usesParalax:)(0x63696E616863656DLL, 0xE800000000000000, (char *)&v54, (char *)&v53, (char *)&v52, (unint64_t)&unk_1EA712D20, 0, v0 + 1312);
  v46 = (id)qword_1EDB64C48;
  v47 = (void *)sub_1DD2F9DB4();
  v48 = objc_msgSend(v3, sel_colorNamed_inBundle_compatibleWithTraitCollection_, v47, v46, 0);

  if (!v48)
    goto LABEL_27;
  v53 = 0;
  v54 = 0;
  v51 = 0;
  v52 = 0;
  objc_msgSend(v48, sel_getRed_green_blue_alpha_, &v54, &v53, &v52, &v51);

  v49 = v54;
  LOBYTE(v54) = 0;
  v55 = v49;
  v56 = v53;
  v57 = v52;
  v58 = v51;
  v59 = 0u;
  v60 = 0u;
  v61 = 0u;
  v62 = 257;
  LOBYTE(v53) = 0;
  LOBYTE(v52) = 0;
  EmojiPosterConfiguration.init(identifier:backgroundConfiguration:layoutStyle:sizeVariant:emoji:usesParalax:)(0x6563617073, 0xE500000000000000, (char *)&v54, (char *)&v53, (char *)&v52, (unint64_t)&unk_1EA712D70, 0, v0 + 1440);
  return v0;
}

double sub_1DD2F1318()
{
  uint64_t v0;
  double result;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDB61AF0);
  v0 = swift_allocObject();
  result = 0.0;
  *(_OWORD *)(v0 + 16) = xmmword_1DD2FF2C0;
  *(_OWORD *)(v0 + 32) = 0u;
  *(_BYTE *)(v0 + 48) = 0;
  *(_OWORD *)(v0 + 56) = xmmword_1DD2FF2D0;
  *(_OWORD *)(v0 + 72) = xmmword_1DD2FF2E0;
  *(_OWORD *)(v0 + 88) = 0u;
  *(_OWORD *)(v0 + 104) = 0u;
  *(_OWORD *)(v0 + 120) = 0u;
  *(_DWORD *)(v0 + 136) = 0;
  *(_QWORD *)(v0 + 144) = &unk_1EA712DD0;
  *(_BYTE *)(v0 + 152) = 0;
  *(_QWORD *)(v0 + 160) = 5;
  *(_OWORD *)(v0 + 168) = 0u;
  *(_BYTE *)(v0 + 184) = 0;
  *(_OWORD *)(v0 + 192) = xmmword_1DD2FF2F0;
  *(_OWORD *)(v0 + 208) = xmmword_1DD2FF300;
  *(_OWORD *)(v0 + 224) = 0u;
  *(_OWORD *)(v0 + 240) = 0u;
  *(_OWORD *)(v0 + 256) = 0u;
  *(_DWORD *)(v0 + 272) = 0;
  *(_QWORD *)(v0 + 280) = &unk_1EA712E40;
  *(_BYTE *)(v0 + 288) = 0;
  *(_QWORD *)(v0 + 296) = 7;
  *(_OWORD *)(v0 + 304) = 0u;
  *(_BYTE *)(v0 + 320) = 0;
  *(_QWORD *)(v0 + 328) = 0x3FBE1E1E1E1E1E1ELL;
  *(_OWORD *)(v0 + 336) = xmmword_1DD2FF310;
  *(_QWORD *)(v0 + 352) = 0x3FF0000000000000;
  *(_OWORD *)(v0 + 360) = 0u;
  *(_OWORD *)(v0 + 376) = 0u;
  *(_OWORD *)(v0 + 392) = 0u;
  *(_DWORD *)(v0 + 408) = 0;
  *(_QWORD *)(v0 + 416) = &unk_1EA712EA0;
  *(_BYTE *)(v0 + 424) = 0;
  *(_QWORD *)(v0 + 432) = 2;
  *(_OWORD *)(v0 + 440) = 0u;
  *(_BYTE *)(v0 + 456) = 0;
  *(_OWORD *)(v0 + 464) = xmmword_1DD2FF320;
  *(_OWORD *)(v0 + 480) = xmmword_1DD2FF330;
  *(_DWORD *)(v0 + 544) = 0;
  *(_OWORD *)(v0 + 512) = 0u;
  *(_OWORD *)(v0 + 528) = 0u;
  *(_OWORD *)(v0 + 496) = 0u;
  *(_QWORD *)(v0 + 552) = &unk_1EA712EE0;
  *(_BYTE *)(v0 + 560) = 0;
  *(_QWORD *)(v0 + 568) = 4;
  *(_BYTE *)(v0 + 592) = 0;
  *(_OWORD *)(v0 + 576) = 0u;
  *(_QWORD *)(v0 + 600) = 0x3FEE5E5E5E5E5E5ELL;
  *(_OWORD *)(v0 + 608) = xmmword_1DD2FF340;
  *(_QWORD *)(v0 + 624) = 0x3FF0000000000000;
  *(_OWORD *)(v0 + 632) = 0u;
  *(_OWORD *)(v0 + 648) = 0u;
  *(_OWORD *)(v0 + 664) = 0u;
  *(_DWORD *)(v0 + 680) = 0;
  *(_QWORD *)(v0 + 688) = &unk_1EA712F30;
  *(_BYTE *)(v0 + 696) = 0;
  *(_QWORD *)(v0 + 704) = 6;
  *(_BYTE *)(v0 + 728) = 0;
  *(_OWORD *)(v0 + 712) = 0u;
  *(int64x2_t *)(v0 + 736) = vdupq_n_s64(0x3FEB5B5B5B5B5B5BuLL);
  *(_OWORD *)(v0 + 752) = xmmword_1DD2FF350;
  *(_DWORD *)(v0 + 815) = 0;
  *(_OWORD *)(v0 + 784) = 0u;
  *(_OWORD *)(v0 + 800) = 0u;
  *(_OWORD *)(v0 + 768) = 0u;
  *(_BYTE *)(v0 + 819) = 2;
  *(_QWORD *)(v0 + 824) = &unk_1EA712F80;
  *(_BYTE *)(v0 + 832) = 0;
  *(_QWORD *)(v0 + 840) = 8;
  *(_BYTE *)(v0 + 864) = 0;
  *(_OWORD *)(v0 + 848) = 0u;
  *(_QWORD *)(v0 + 872) = 0x3FE9393939393939;
  *(_OWORD *)(v0 + 880) = xmmword_1DD2FF360;
  *(_QWORD *)(v0 + 896) = 0x3FF0000000000000;
  *(_DWORD *)(v0 + 952) = 0;
  *(_OWORD *)(v0 + 920) = 0u;
  *(_OWORD *)(v0 + 936) = 0u;
  *(_OWORD *)(v0 + 904) = 0u;
  *(_QWORD *)(v0 + 960) = &unk_1EA712FD0;
  *(_BYTE *)(v0 + 968) = 0;
  *(_QWORD *)(v0 + 976) = 9;
  *(_BYTE *)(v0 + 1000) = 0;
  *(_OWORD *)(v0 + 984) = 0u;
  *(int64x2_t *)(v0 + 1008) = vdupq_n_s64(0x3FCA9A9A9A9A9A9BuLL);
  *(_OWORD *)(v0 + 1024) = xmmword_1DD2FF370;
  *(_DWORD *)(v0 + 1087) = 0;
  *(_OWORD *)(v0 + 1072) = 0u;
  *(_OWORD *)(v0 + 1056) = 0u;
  *(_OWORD *)(v0 + 1040) = 0u;
  *(_BYTE *)(v0 + 1091) = 2;
  *(_QWORD *)(v0 + 1096) = &unk_1EA713020;
  *(_BYTE *)(v0 + 1104) = 0;
  *(_QWORD *)(v0 + 1112) = 3;
  return result;
}

_QWORD *sub_1DD2F15CC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _OWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  int v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  id v31;
  void *v32;
  _QWORD *v33;
  unint64_t v34;
  unint64_t v35;
  _QWORD *v36;
  int v37;
  unint64_t v38;
  id v39;
  void *v40;
  unint64_t v41;
  unint64_t v42;
  _QWORD *v43;
  int v44;
  id v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  unint64_t v52;
  _QWORD *v53;
  int v54;
  uint64_t v55;
  unint64_t v56;
  unint64_t v57;
  _QWORD *v58;
  int v59;
  uint64_t i;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  _QWORD *v65;
  uint64_t v66;
  uint64_t v67;
  char v68;
  uint64_t v69;
  char v70;
  int v71;
  uint64_t v72;
  __int128 v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  _BYTE v78[7];
  uint64_t v79;

  v79 = *MEMORY[0x1E0C80C00];
  sub_1DD2F049C();
  v67 = a1;
  sub_1DD2F55A0(a1, a2);
  v5 = v4;
  swift_release();
  v6 = *(_QWORD *)(v5 + 16);
  v7 = &unk_1DD2FD000;
  v62 = a2;
  if (!v6)
  {
    swift_bridgeObjectRelease();
    v33 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    if (*(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16))
      return v33;
    goto LABEL_20;
  }
  v8 = 0;
  v65 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  v66 = v6 - 1;
  for (i = v5; ; v5 = i)
  {
    v63 = v8;
    v70 = *(_BYTE *)(v5 + v8 + 32);
    v9 = *(_QWORD *)(v5 + v8 + 40);
    v10 = *(_QWORD *)(v5 + v8 + 48);
    v11 = *(_QWORD *)(v5 + v8 + 56);
    v12 = *(_QWORD *)(v5 + v8 + 64);
    v14 = *(_QWORD *)(v5 + v8 + 72);
    v13 = *(_QWORD *)(v5 + v8 + 80);
    v15 = *(_QWORD *)(v5 + v8 + 88);
    v16 = *(_QWORD *)(v5 + v8 + 96);
    v18 = *(_QWORD *)(v5 + v8 + 104);
    v17 = *(_QWORD *)(v5 + v8 + 112);
    v19 = *(_BYTE *)(v5 + v8 + 120);
    v20 = *(unsigned __int8 *)(v5 + v8 + 121);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EDB615E8);
    v21 = swift_allocObject();
    *(_OWORD *)(v21 + 16) = xmmword_1DD2FDFC0;
    *(_QWORD *)(v21 + 32) = v67;
    *(_QWORD *)(v21 + 40) = a2;
    sub_1DD2BF7A4(v14, v13, v15, v16, v18);
    v64 = v14;
    v22 = v14;
    v23 = v13;
    v69 = v16;
    v24 = v16;
    v25 = v18;
    v72 = v17;
    sub_1DD2BF7A4(v22, v13, v15, v24, v18);
    swift_bridgeObjectRetain();
    v26 = v9;
    v27 = v10;
    v28 = v11;
    v29 = v12;
    v68 = v19;
    v30 = v19;
    v71 = v20;
    if (v20 == 1)
    {
      v31 = _sSo7UIColorC11EmojiPosterE021emp_suggestedColorForB0yABSgSaySSGFZ_0(v21);
      v26 = v9;
      v27 = v10;
      v28 = v11;
      v29 = v12;
      v30 = v19;
      if (v31)
      {
        v32 = v31;
        v76 = 0;
        v77 = 0;
        v74 = 0;
        v75 = 0;
        objc_msgSend(v31, sel_getRed_green_blue_alpha_, &v77, &v76, &v75, &v74);

        v27 = v76;
        v26 = v77;
        v29 = v74;
        v28 = v75;
        v30 = 1;
      }
    }
    v33 = v65;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v33 = sub_1DD2DE138(0, v65[2] + 1, 1, v65);
    v35 = v33[2];
    v34 = v33[3];
    if (v35 >= v34 >> 1)
      v33 = sub_1DD2DE138((_QWORD *)(v34 > 1), v35 + 1, 1, v33);
    v33[2] = v35 + 1;
    v36 = &v33[16 * v35];
    v36[4] = 0;
    v36[5] = 0;
    *((_BYTE *)v36 + 48) = v70;
    v37 = *(_DWORD *)v78;
    *((_DWORD *)v36 + 13) = *(_DWORD *)&v78[3];
    *(_DWORD *)((char *)v36 + 49) = v37;
    v36[7] = v26;
    v36[8] = v27;
    v36[9] = v28;
    v36[10] = v29;
    v36[11] = v64;
    v36[12] = v23;
    v36[13] = v15;
    v36[14] = v69;
    v36[15] = v25;
    v36[16] = v72;
    *((_BYTE *)v36 + 136) = v30;
    *((_BYTE *)v36 + 137) = v71;
    *((_WORD *)v36 + 69) = 258;
    v36[18] = v21;
    *((_BYTE *)v36 + 152) = 0;
    v38 = swift_allocObject();
    *(_OWORD *)(v38 + 16) = xmmword_1DD2FDFC0;
    a2 = v62;
    *(_QWORD *)(v38 + 32) = v67;
    *(_QWORD *)(v38 + 40) = v62;
    swift_bridgeObjectRetain();
    if (v71)
    {
      v39 = _sSo7UIColorC11EmojiPosterE021emp_suggestedColorForB0yABSgSaySSGFZ_0(v38);
      if (v39)
      {
        v40 = v39;
        v76 = 0;
        v77 = 0;
        v74 = 0;
        v75 = 0;
        objc_msgSend(v39, sel_getRed_green_blue_alpha_, &v77, &v76, &v75, &v74);

        v10 = v76;
        v9 = v77;
        v12 = v74;
        v11 = v75;
        v68 = 1;
      }
    }
    v42 = v33[2];
    v41 = v33[3];
    if (v42 >= v41 >> 1)
      v33 = sub_1DD2DE138((_QWORD *)(v41 > 1), v42 + 1, 1, v33);
    v33[2] = v42 + 1;
    v43 = &v33[16 * v42];
    v43[4] = 0;
    v43[5] = 0;
    *((_BYTE *)v43 + 48) = v70;
    v44 = v77;
    *((_DWORD *)v43 + 13) = *(_DWORD *)((char *)&v77 + 3);
    *(_DWORD *)((char *)v43 + 49) = v44;
    v43[7] = v9;
    v43[8] = v10;
    v43[9] = v11;
    v43[10] = v12;
    v43[11] = v64;
    v43[12] = v23;
    v43[13] = v15;
    v43[14] = v69;
    v43[15] = v25;
    v43[16] = v72;
    *((_BYTE *)v43 + 136) = v68;
    *((_BYTE *)v43 + 137) = v71;
    *((_WORD *)v43 + 69) = 256;
    v43[18] = v38;
    *((_BYTE *)v43 + 152) = 0;
    if (!v66)
      break;
    v65 = v33;
    --v66;
    v8 = v63 + 96;
  }
  swift_bridgeObjectRelease();
  v7 = (_OWORD *)&unk_1DD2FD000;
  if (!v33[2])
  {
LABEL_20:
    v45 = objc_msgSend((id)objc_opt_self(), sel_grayColor);
    v76 = 0;
    v77 = 0;
    v74 = 0;
    v75 = 0;
    objc_msgSend(v45, sel_getRed_green_blue_alpha_, &v77, &v76, &v75, &v74);
    v47 = v76;
    v46 = v77;
    v49 = v74;
    v48 = v75;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EDB615E8);
    v50 = swift_allocObject();
    v73 = v7[252];
    *(_OWORD *)(v50 + 16) = v73;
    *(_QWORD *)(v50 + 32) = v67;
    *(_QWORD *)(v50 + 40) = a2;
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v33 = sub_1DD2DE138(0, v33[2] + 1, 1, v33);
    v52 = v33[2];
    v51 = v33[3];
    if (v52 >= v51 >> 1)
      v33 = sub_1DD2DE138((_QWORD *)(v51 > 1), v52 + 1, 1, v33);
    v33[2] = v52 + 1;
    v53 = &v33[16 * v52];
    v53[4] = 0;
    v53[5] = 0;
    *((_BYTE *)v53 + 48) = 0;
    v54 = *(_DWORD *)((char *)&v77 + 3);
    *(_DWORD *)((char *)v53 + 49) = v77;
    *((_DWORD *)v53 + 13) = v54;
    v53[7] = v46;
    v53[8] = v47;
    v53[9] = v48;
    v53[10] = v49;
    *(_OWORD *)(v53 + 11) = 0u;
    *(_OWORD *)(v53 + 13) = 0u;
    *(_OWORD *)(v53 + 15) = 0u;
    *((_WORD *)v53 + 68) = 0;
    *((_WORD *)v53 + 69) = 258;
    v53[18] = v50;
    *((_BYTE *)v53 + 152) = 0;
    v55 = swift_allocObject();
    *(_OWORD *)(v55 + 16) = v73;
    *(_QWORD *)(v55 + 32) = v67;
    *(_QWORD *)(v55 + 40) = v62;
    v56 = v33[2];
    v57 = v33[3];
    swift_bridgeObjectRetain();
    if (v56 >= v57 >> 1)
      v33 = sub_1DD2DE138((_QWORD *)(v57 > 1), v56 + 1, 1, v33);
    v33[2] = v56 + 1;
    v58 = &v33[16 * v56];
    v58[4] = 0;
    v58[5] = 0;
    *((_BYTE *)v58 + 48) = 0;
    v59 = *(_DWORD *)((char *)&v76 + 3);
    *(_DWORD *)((char *)v58 + 49) = v76;
    *((_DWORD *)v58 + 13) = v59;
    v58[7] = v46;
    v58[8] = v47;
    v58[9] = v48;
    v58[10] = v49;
    *(_OWORD *)(v58 + 11) = 0u;
    *(_OWORD *)(v58 + 13) = 0u;
    *(_OWORD *)(v58 + 15) = 0u;
    *(_DWORD *)((char *)v58 + 135) = 0;
    *((_BYTE *)v58 + 139) = 1;
    v58[18] = v55;
    *((_BYTE *)v58 + 152) = 0;

  }
  return v33;
}

uint64_t sub_1DD2F1BE0()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  void *v6;
  id v7;
  void *v8;
  id v9;
  id v10;
  uint64_t v11;
  unint64_t i;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t j;
  id v23;
  void *v24;
  id v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t result;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  uint64_t v36;

  v3 = v0;
  v4 = *(void **)(v0 + 24);
  if (v4)
    goto LABEL_3;
  sub_1DD2F9DE4();
  v5 = objc_allocWithZone(MEMORY[0x1E0D1F248]);
  v6 = (void *)sub_1DD2F9DB4();
  swift_bridgeObjectRelease();
  v7 = objc_msgSend(v5, sel_initWithMachName_, v6);

  v8 = *(void **)(v3 + 24);
  *(_QWORD *)(v3 + 24) = v7;

  v4 = *(void **)(v3 + 24);
  if (!v4)
    return MEMORY[0x1E0DEE9D8];
LABEL_3:
  v36 = MEMORY[0x1E0DEE9D8];
  v9 = v4;
  objc_msgSend(v9, sel_readEmojiDefaults);
  v10 = objc_msgSend(v9, sel_recentEmojis);
  v11 = sub_1DD2F2454();
  i = sub_1DD2F9EE0();

  if (i >> 62)
  {
    swift_bridgeObjectRetain();
    v1 = sub_1DD2FA0F0();
    swift_bridgeObjectRelease();
    if (v1 > 15)
      goto LABEL_23;
    swift_bridgeObjectRetain();
    v1 = sub_1DD2FA0F0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    v32 = sub_1DD2FA0F0();
    result = swift_bridgeObjectRelease();
    if (v32 < 0)
    {
      __break(1u);
      return result;
    }
    if (v1 >= 15)
      v33 = 15;
    else
      v33 = v1;
    if (v1 >= 0)
      v2 = v33;
    else
      v2 = 15;
    swift_bridgeObjectRetain();
    v34 = sub_1DD2FA0F0();
    swift_bridgeObjectRelease();
    if (v34 < (uint64_t)v2)
    {
      __break(1u);
      goto LABEL_44;
    }
  }
  else
  {
    v2 = *(_QWORD *)((i & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v2 > 0xF)
      goto LABEL_23;
  }
  if ((i & 0xC000000000000001) != 0 && v2 != 0)
  {
    v14 = 0;
    do
    {
      v15 = v14 + 1;
      sub_1DD2FA03C();
      v14 = v15;
    }
    while (v2 != v15);
  }
  if (i >> 62)
  {
    swift_bridgeObjectRetain();
    v11 = sub_1DD2FA0FC();
    v1 = v17;
    v16 = v18;
    v2 = v19;
    swift_bridgeObjectRelease_n();
    if ((v2 & 1) == 0)
      goto LABEL_15;
  }
  else
  {
    v16 = 0;
    v11 = i & 0xFFFFFFFFFFFFFF8;
    v1 = (i & 0xFFFFFFFFFFFFFF8) + 32;
    v2 = (2 * v2) | 1;
    if ((v2 & 1) == 0)
      goto LABEL_15;
  }
  sub_1DD2FA234();
  swift_unknownObjectRetain_n();
  v20 = swift_dynamicCastClass();
  if (!v20)
  {
    swift_unknownObjectRelease();
    v20 = MEMORY[0x1E0DEE9D8];
  }
  v21 = *(_QWORD *)(v20 + 16);
  swift_release();
  if (__OFSUB__(v2 >> 1, v16))
    goto LABEL_52;
  if (v21 != (v2 >> 1) - v16)
    goto LABEL_53;
  i = swift_dynamicCastClass();
  swift_unknownObjectRelease();
  if (i)
    goto LABEL_23;
  for (i = MEMORY[0x1E0DEE9D8]; ; i = sub_1DD2F213C(v11, v1, v16, v2))
  {
    swift_unknownObjectRelease();
LABEL_23:
    if (i >> 62)
    {
LABEL_44:
      if ((i & 0x8000000000000000) != 0)
        v11 = i;
      else
        v11 = i & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain();
      v16 = sub_1DD2FA0F0();
      swift_bridgeObjectRelease();
      if (!v16)
      {
LABEL_48:

        swift_bridgeObjectRelease();
        return MEMORY[0x1E0DEE9D8];
      }
    }
    else
    {
      v16 = *(_QWORD *)((i & 0xFFFFFFFFFFFFF8) + 0x10);
      if (!v16)
        goto LABEL_48;
    }
    if (v16 >= 1)
      break;
    __break(1u);
LABEL_52:
    __break(1u);
LABEL_53:
    swift_unknownObjectRelease();
LABEL_15:
    ;
  }
  v35 = v9;
  for (j = 0; j != v16; ++j)
  {
    if ((i & 0xC000000000000001) != 0)
      v23 = (id)MEMORY[0x1DF0D75E4](j, i);
    else
      v23 = *(id *)(i + 8 * j + 32);
    v24 = v23;
    v25 = objc_msgSend(v23, sel_string, v35);
    if (v25)
    {
      v26 = v25;
      v27 = sub_1DD2F9DE4();
      v29 = v28;

      v30 = sub_1DD2F15CC(v27, v29);
      swift_bridgeObjectRelease();
      sub_1DD2F034C((uint64_t)v30);
    }

  }
  swift_bridgeObjectRelease();
  return v36;
}

uint64_t ConfigurationProvider.deinit()
{
  uint64_t v0;

  swift_release();

  return v0;
}

uint64_t ConfigurationProvider.__deallocating_deinit()
{
  uint64_t v0;

  swift_release();

  return swift_deallocClassInstance();
}

uint64_t sub_1DD2F2058(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  int64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v8;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return MEMORY[0x1E0DEE9D8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDB61D28);
  v3 = swift_allocObject();
  v4 = _swift_stdlib_malloc_size((const void *)v3);
  v5 = v4 - 32;
  if (v4 < 32)
    v5 = v4 - 1;
  *(_QWORD *)(v3 + 16) = v1;
  *(_QWORD *)(v3 + 24) = 2 * (v5 >> 5);
  v6 = sub_1DD2F22BC(&v8, (_OWORD *)(v3 + 32), v1, a1);
  swift_bridgeObjectRetain();
  sub_1DD2EC17C();
  if (v6 != (_QWORD *)v1)
  {
    __break(1u);
    return MEMORY[0x1E0DEE9D8];
  }
  return v3;
}

uint64_t sub_1DD2F213C(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t v8;
  _QWORD *v9;
  int64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t result;

  v4 = a4 >> 1;
  v5 = (a4 >> 1) - a3;
  if (!__OFSUB__(a4 >> 1, a3))
  {
    if (!v5)
      return MEMORY[0x1E0DEE9D8];
    v8 = v5;
    if (v5 <= 0)
    {
      v9 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      if (v4 != a3)
      {
LABEL_7:
        if (v5 < 0)
          goto LABEL_19;
        v12 = a2 + 8 * a3;
        if (v12 < (unint64_t)&v9[v8 + 4] && (unint64_t)(v9 + 4) < v12 + v8 * 8)
          goto LABEL_19;
        sub_1DD2F2454();
        swift_arrayInitWithCopy();
        return (uint64_t)v9;
      }
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EDB61620);
      v9 = (_QWORD *)swift_allocObject();
      v10 = _swift_stdlib_malloc_size(v9);
      v11 = v10 - 32;
      if (v10 < 32)
        v11 = v10 - 25;
      v9[2] = v5;
      v9[3] = (2 * (v11 >> 3)) | 1;
      if (v4 != a3)
        goto LABEL_7;
    }
    __break(1u);
  }
  __break(1u);
LABEL_19:
  result = sub_1DD2FA12C();
  __break(1u);
  return result;
}

_QWORD *sub_1DD2F22BC(_QWORD *result, _OWORD *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  uint64_t v9;
  int64_t v10;
  unint64_t v11;
  unint64_t v12;
  _OWORD *v13;
  __int128 v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;

  v4 = a4 + 56;
  v5 = -1;
  v6 = -1 << *(_BYTE *)(a4 + 32);
  if (-v6 < 64)
    v5 = ~(-1 << -(char)v6);
  v7 = v5 & *(_QWORD *)(a4 + 56);
  if (!a2)
  {
    v8 = 0;
    a3 = 0;
LABEL_35:
    *result = a4;
    result[1] = v4;
    result[2] = ~v6;
    result[3] = v8;
    result[4] = v7;
    return (_QWORD *)a3;
  }
  if (!a3)
  {
    v8 = 0;
    goto LABEL_35;
  }
  if (a3 < 0)
  {
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  v8 = 0;
  v9 = 0;
  v10 = (unint64_t)(63 - v6) >> 6;
  while (v7)
  {
    v11 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    v12 = v11 | (v8 << 6);
LABEL_8:
    ++v9;
    v13 = (_OWORD *)(*(_QWORD *)(a4 + 48) + 32 * v12);
    v14 = v13[1];
    *a2 = *v13;
    a2[1] = v14;
    a2 += 2;
    if (v9 == a3)
      goto LABEL_35;
  }
  v15 = v8 + 1;
  if (__OFADD__(v8, 1))
  {
    __break(1u);
    goto LABEL_37;
  }
  if (v15 >= v10)
    goto LABEL_30;
  v16 = *(_QWORD *)(v4 + 8 * v15);
  if (v16)
    goto LABEL_19;
  v8 += 2;
  if (v15 + 1 >= v10)
  {
    v7 = 0;
    v8 = v15;
    goto LABEL_34;
  }
  v16 = *(_QWORD *)(v4 + 8 * v8);
  if (v16)
  {
LABEL_15:
    v15 = v8;
LABEL_19:
    v18 = __clz(__rbit64(v16));
    v7 = (v16 - 1) & v16;
    v12 = v18 + (v15 << 6);
    v8 = v15;
    goto LABEL_8;
  }
  v17 = v15 + 2;
  if (v15 + 2 >= v10)
    goto LABEL_30;
  v16 = *(_QWORD *)(v4 + 8 * v17);
  if (v16)
  {
LABEL_18:
    v15 = v17;
    goto LABEL_19;
  }
  v8 = v15 + 3;
  if (v15 + 3 >= v10)
  {
    v7 = 0;
    v8 = v15 + 2;
    goto LABEL_34;
  }
  v16 = *(_QWORD *)(v4 + 8 * v8);
  if (v16)
    goto LABEL_15;
  v17 = v15 + 4;
  if (v15 + 4 >= v10)
  {
LABEL_30:
    v7 = 0;
LABEL_34:
    a3 = v9;
    goto LABEL_35;
  }
  v16 = *(_QWORD *)(v4 + 8 * v17);
  if (v16)
    goto LABEL_18;
  while (1)
  {
    v15 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v15 >= v10)
    {
      v7 = 0;
      v8 = v10 - 1;
      goto LABEL_34;
    }
    v16 = *(_QWORD *)(v4 + 8 * v15);
    ++v17;
    if (v16)
      goto LABEL_19;
  }
LABEL_38:
  __break(1u);
  return result;
}

unint64_t sub_1DD2F2454()
{
  unint64_t result;

  result = qword_1F03D15D8;
  if (!qword_1F03D15D8)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1F03D15D8);
  }
  return result;
}

uint64_t type metadata accessor for ConfigurationProvider()
{
  return objc_opt_self();
}

uint64_t method lookup function for ConfigurationProvider()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ConfigurationProvider.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 144))();
}

uint64_t dispatch thunk of ConfigurationProvider.testSpecConfiguration(withStyle:sizeVariant:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 152))();
}

uint64_t dispatch thunk of ConfigurationProvider.heroConfiguration()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 160))();
}

uint64_t dispatch thunk of ConfigurationProvider.stockConfigurations()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 168))();
}

uint64_t dispatch thunk of ConfigurationProvider.configurationsForFocus()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 176))();
}

uint64_t dispatch thunk of ConfigurationProvider.configurationsForEmoji(emoji:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 184))();
}

uint64_t dispatch thunk of ConfigurationProvider.configurationsFromEmojiPreferences()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 192))();
}

uint64_t sub_1DD2F250C()
{
  sub_1DD2FA024();
  sub_1DD2F9E74();
  sub_1DD2FA204();
  sub_1DD2F9E74();
  swift_bridgeObjectRelease();
  sub_1DD2F9E74();
  sub_1DD2FA0CC();
  return 0;
}

uint64_t sub_1DD2F25EC()
{
  return sub_1DD2F250C();
}

uint64_t sub_1DD2F25F8()
{
  sub_1DD2FA024();
  sub_1DD2F9E74();
  type metadata accessor for CGSize(0);
  sub_1DD2FA0CC();
  sub_1DD2F9E74();
  type metadata accessor for CGPoint(0);
  sub_1DD2FA0CC();
  sub_1DD2F9E74();
  sub_1DD2FA0CC();
  return 0;
}

id sub_1DD2F2724()
{
  uint64_t ObjCClassFromMetadata;
  id result;

  type metadata accessor for GridLayoutProvider();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  result = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  qword_1EDB614E8 = (uint64_t)result;
  return result;
}

uint64_t sub_1DD2F2774(uint64_t a1)
{
  return sub_1DD2F27E0(a1, 0xD000000000000013, 0x80000001DD301D90, &qword_1EDB61180);
}

uint64_t sub_1DD2F2798(uint64_t a1)
{
  return sub_1DD2F27E0(a1, 0xD000000000000014, 0x80000001DD301DB0, &qword_1EDB61EB8);
}

uint64_t sub_1DD2F27BC(uint64_t a1)
{
  return sub_1DD2F27E0(a1, 0xD000000000000013, 0x80000001DD301DD0, &qword_1EDB61EA8);
}

uint64_t sub_1DD2F27E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  void *v7;
  uint64_t result;

  if (qword_1EDB614F0 != -1)
    swift_once();
  v7 = (void *)qword_1EDB614E8;
  type metadata accessor for EmojiPatternParser();
  swift_allocObject();
  result = sub_1DD2DA780(a2, a3, (char *)v7);
  *a4 = result;
  return result;
}

double sub_1DD2F2878()
{
  uint64_t v0;

  return *((double *)*(&off_1EA715890 + *(char *)(v0 + 32)) + *(char *)(v0 + 48));
}

void sub_1DD2F2894()
{
  uint64_t v0;

  sub_1DD2F2878();
  if (*(_BYTE *)(v0 + 32))
  {
    if (*(_BYTE *)(v0 + 32) == 1)
    {
      if (qword_1EDB61D38 == -1)
        return;
    }
    else if (qword_1EDB61EB0 == -1)
    {
      return;
    }
LABEL_8:
    swift_once();
    return;
  }
  if (qword_1EDB61188 != -1)
    goto LABEL_8;
}

void sub_1DD2F29C4()
{
  uint64_t v0;

  sub_1DD2F2878();
  if (*(_BYTE *)(v0 + 32))
  {
    if (*(_BYTE *)(v0 + 32) == 1)
    {
      if (qword_1EDB61D38 == -1)
        return;
    }
    else if (qword_1EDB61EB0 == -1)
    {
      return;
    }
LABEL_8:
    swift_once();
    return;
  }
  if (qword_1EDB61188 != -1)
    goto LABEL_8;
}

void sub_1DD2F2B0C(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  uint64_t *v13;
  uint64_t v14;

  sub_1DD2F2894();
  v4 = v3;
  sub_1DD2F29C4();
  v6 = v5;
  v7 = *(unsigned __int8 *)(v1 + 32);
  if (!v7)
  {
    if (qword_1EDB61188 != -1)
      swift_once();
    v8 = &qword_1EDB61180;
    goto LABEL_11;
  }
  if (v7 != 1)
  {
    if (qword_1EDB61EB0 != -1)
      swift_once();
    v8 = &qword_1EDB61EA8;
    goto LABEL_11;
  }
  if (qword_1EDB61D38 != -1)
    goto LABEL_26;
  while (1)
  {
    v8 = &qword_1EDB61EB8;
LABEL_11:
    v9 = *v8;
    v10 = *(_QWORD *)(v9 + OBJC_IVAR____TtC11EmojiPoster18EmojiPatternParser_oddRowSymbolCount);
    v11 = *(_QWORD *)(v9 + OBJC_IVAR____TtC11EmojiPoster18EmojiPatternParser_evenRowSymbolCount);
    if (v10 == v11)
      break;
    v12 = __OFADD__(v10, v11);
    v10 += v11;
    if (!v12)
      break;
    __break(1u);
LABEL_26:
    swift_once();
  }
  if (v7)
  {
    if (v7 == 1)
    {
      if (qword_1EDB61D38 != -1)
        swift_once();
      v13 = &qword_1EDB61EB8;
    }
    else
    {
      if (qword_1EDB61EB0 != -1)
        swift_once();
      v13 = &qword_1EDB61EA8;
    }
  }
  else
  {
    if (qword_1EDB61188 != -1)
      swift_once();
    v13 = &qword_1EDB61180;
  }
  v14 = *(_QWORD *)(*v13 + OBJC_IVAR____TtC11EmojiPoster18EmojiPatternParser_numberOfRows);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v6;
  *(_QWORD *)(a1 + 16) = v10;
  *(_QWORD *)(a1 + 24) = v14;
  *(_BYTE *)(a1 + 32) = 0;
}

void sub_1DD2F2CEC()
{
  int v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  BOOL v4;
  unint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  sub_1DD2F2B0C((uint64_t)&v12);
  if (__OFSUB__(v13, v13 & 1))
  {
    __break(1u);
  }
  else if (!__OFSUB__(v14, v14 & 1))
  {
    v0 = *(unsigned __int8 *)(v11 + 32);
    if (!*(_BYTE *)(v11 + 32))
    {
      if (qword_1EDB61188 != -1)
        swift_once();
      v1 = &qword_1EDB61180;
      goto LABEL_13;
    }
    if (v0 != 1)
    {
      if (qword_1EDB61EB0 != -1)
        swift_once();
      v1 = &qword_1EDB61EA8;
      goto LABEL_13;
    }
    if (qword_1EDB61D38 != -1)
      goto LABEL_61;
    while (1)
    {
      v1 = &qword_1EDB61EB8;
LABEL_13:
      v2 = *v1 + OBJC_IVAR____TtC11EmojiPoster18EmojiPatternParser_patterns;
      swift_beginAccess();
      v3 = *(_QWORD *)(v11 + 40);
      v4 = __OFSUB__(v3, 1);
      v5 = v3 - 1;
      if (v4)
        break;
      if ((v5 & 0x8000000000000000) != 0)
        goto LABEL_57;
      if (v5 >= *(_QWORD *)(*(_QWORD *)v2 + 16))
        goto LABEL_58;
      swift_bridgeObjectRetain();
      v10 = sub_1DD2F376C();
      swift_bridgeObjectRelease();
      if (v0)
      {
        if (v0 == 1)
        {
          if (qword_1EDB61D38 != -1)
            swift_once();
          v6 = &qword_1EDB61EB8;
        }
        else
        {
          if (qword_1EDB61EB0 != -1)
            swift_once();
          v6 = &qword_1EDB61EA8;
        }
      }
      else
      {
        if (qword_1EDB61188 != -1)
          swift_once();
        v6 = &qword_1EDB61180;
      }
      v7 = *(_QWORD *)(*v6 + OBJC_IVAR____TtC11EmojiPoster18EmojiPatternParser_numberOfRows);
      if (!__OFSUB__(v7, 1))
      {
        if (((v7 - 1) & 0x8000000000000000) == 0)
        {
          if (v0)
          {
            if (v0 == 1)
            {
              v8 = &qword_1EDB61EB8;
              if (qword_1EDB61D38 != -1)
              {
                swift_once();
                v8 = &qword_1EDB61EB8;
              }
            }
            else
            {
              v8 = &qword_1EDB61EA8;
              if (qword_1EDB61EB0 != -1)
              {
                swift_once();
                v8 = &qword_1EDB61EA8;
              }
            }
          }
          else
          {
            v8 = &qword_1EDB61180;
            if (qword_1EDB61188 != -1)
            {
              swift_once();
              v8 = &qword_1EDB61180;
            }
          }
          v9 = *(_QWORD *)(*v8 + OBJC_IVAR____TtC11EmojiPoster18EmojiPatternParser_evenRowSymbolCount);
          if (__OFSUB__(v9, 1))
          {
            __break(1u);
          }
          else if (((v9 - 1) & 0x8000000000000000) == 0)
          {
            if (v10[2])
            {
              if ((v10[4] & 1) != 0)
              {
                if (v0)
                {
                  if (v0 == 1)
                    __asm { BR              X9 }
                  __asm { BR              X9 }
                }
                __asm { BR              X9 }
              }
              if (v0)
              {
                if (v0 == 1)
                  __asm { BR              X9 }
                __asm { BR              X9 }
              }
              __asm { BR              X9 }
            }
            __break(1u);
            JUMPOUT(0x1DD2F3564);
          }
          __break(1u);
          JUMPOUT(0x1DD2F3574);
        }
        goto LABEL_60;
      }
LABEL_59:
      __break(1u);
LABEL_60:
      __break(1u);
LABEL_61:
      swift_once();
    }
LABEL_56:
    __break(1u);
LABEL_57:
    __break(1u);
LABEL_58:
    __break(1u);
    goto LABEL_59;
  }
  __break(1u);
  goto LABEL_56;
}

uint64_t sub_1DD2F3684()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for GridLayoutProvider()
{
  return objc_opt_self();
}

uint64_t getEnumTagSinglePayload for GridLayoutItemAttributes(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 48))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 32);
  v4 = v3 >= 2;
  v5 = v3 - 2;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for GridLayoutItemAttributes(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 48) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 48) = 0;
    if (a2)
      *(_BYTE *)(result + 32) = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for GridLayoutItemAttributes()
{
  return &type metadata for GridLayoutItemAttributes;
}

_QWORD *sub_1DD2F376C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  char v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  _QWORD *v9;
  uint64_t v10;

  swift_bridgeObjectRetain();
  v0 = sub_1DD2F9E80();
  if (v1)
  {
    v2 = v0;
    v3 = v1;
    v4 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    do
    {
      if (v2 == 97 && v3 == 0xE100000000000000 || (sub_1DD2FA210() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        v5 = 0;
        v6 = 0;
      }
      else if (v2 == 65 && v3 == 0xE100000000000000 || (sub_1DD2FA210() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        v6 = 0;
        v5 = 1;
      }
      else if (v2 == 98 && v3 == 0xE100000000000000 || (sub_1DD2FA210() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        v5 = 0;
        v6 = 1;
      }
      else if (v2 == 66 && v3 == 0xE100000000000000)
      {
        swift_bridgeObjectRelease();
        v5 = 1;
        v6 = 1;
      }
      else if ((sub_1DD2FA210() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        v6 = 1;
        v5 = 1;
      }
      else if (v2 == 99 && v3 == 0xE100000000000000 || (sub_1DD2FA210() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        v5 = 0;
        v6 = 2;
      }
      else if (v2 == 67 && v3 == 0xE100000000000000 || (sub_1DD2FA210() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        v5 = 1;
        v6 = 2;
      }
      else if (v2 == 100 && v3 == 0xE100000000000000 || (sub_1DD2FA210() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        v5 = 0;
        v6 = 3;
      }
      else if (v2 == 68 && v3 == 0xE100000000000000 || (sub_1DD2FA210() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        v5 = 1;
        v6 = 3;
      }
      else if (v2 == 101 && v3 == 0xE100000000000000 || (sub_1DD2FA210() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        v5 = 0;
        v6 = 4;
      }
      else if (v2 == 69 && v3 == 0xE100000000000000 || (sub_1DD2FA210() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        v5 = 1;
        v6 = 4;
      }
      else if (v2 == 102 && v3 == 0xE100000000000000 || (sub_1DD2FA210() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        v5 = 0;
        v6 = 5;
      }
      else if (v2 == 70 && v3 == 0xE100000000000000)
      {
        swift_bridgeObjectRelease();
        v5 = 1;
        v6 = 5;
      }
      else
      {
        v5 = sub_1DD2FA210();
        swift_bridgeObjectRelease();
        if ((v5 & 1) != 0)
          v6 = 5;
        else
          v6 = 0;
      }
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v4 = sub_1DD2DDCDC(0, v4[2] + 1, 1, v4);
      v8 = v4[2];
      v7 = v4[3];
      if (v8 >= v7 >> 1)
        v4 = sub_1DD2DDCDC((_QWORD *)(v7 > 1), v8 + 1, 1, v4);
      v4[2] = v8 + 1;
      v9 = &v4[2 * v8];
      *((_BYTE *)v9 + 32) = v5 & 1;
      v9[5] = v6;
      v2 = sub_1DD2F9E80();
      v3 = v10;
    }
    while (v10);
  }
  else
  {
    v4 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t getEnumTagSinglePayload for GridLayoutEmojiProperties(unsigned __int8 *a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && a1[16])
    return (*(_DWORD *)a1 + 255);
  v3 = *a1;
  v4 = v3 >= 2;
  v5 = v3 - 2;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for GridLayoutEmojiProperties(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_QWORD *)result = a2 - 255;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
      *(_BYTE *)result = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for GridLayoutEmojiProperties()
{
  return &type metadata for GridLayoutEmojiProperties;
}

uint64_t storeEnumTagSinglePayload for GridLayoutEmojiSize(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1DD2F3C88 + 4 * byte_1DD2FF3D5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1DD2F3CBC + 4 * byte_1DD2FF3D0[v4]))();
}

uint64_t sub_1DD2F3CBC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DD2F3CC4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1DD2F3CCCLL);
  return result;
}

uint64_t sub_1DD2F3CD8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1DD2F3CE0);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1DD2F3CE4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1DD2F3CEC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for GridLayoutEmojiSize()
{
  return &type metadata for GridLayoutEmojiSize;
}

unint64_t sub_1DD2F3D0C()
{
  unint64_t result;

  result = qword_1F03D15E0;
  if (!qword_1F03D15E0)
  {
    result = MEMORY[0x1DF0D8040](&unk_1DD2FF534, &type metadata for GridLayoutEmojiSize);
    atomic_store(result, (unint64_t *)&qword_1F03D15E0);
  }
  return result;
}

double UIColor.luminance.getter()
{
  void *v0;
  double v2;
  double v3;
  _QWORD v4[2];

  v4[1] = *MEMORY[0x1E0C80C00];
  v3 = 0.0;
  v4[0] = 0;
  v2 = 0.0;
  objc_msgSend(v0, sel_getHue_saturation_brightness_alpha_, v4, &v3, &v2, 0);
  return v2 + v2 * v3 * -0.5;
}

Swift::Double __swiftcall Double.normalize(min:max:outMin:outMax:)(Swift::Double min, Swift::Double max, Swift::Double outMin, Swift::Double outMax)
{
  double v4;

  return (outMax - outMin) * ((v4 - min) / (max - min)) + outMin;
}

Swift::String __swiftcall String.emojiString()()
{
  id v0;
  void *v1;
  id v2;
  uint64_t v3;
  id v4;
  void *v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  void *v9;
  Swift::String result;
  _QWORD v11[6];

  v0 = objc_allocWithZone(MEMORY[0x1E0CB3940]);
  swift_bridgeObjectRetain();
  v1 = (void *)sub_1DD2F9DB4();
  swift_bridgeObjectRelease();
  v2 = objc_msgSend(v0, sel_initWithString_, v1);

  v3 = swift_allocObject();
  *(_QWORD *)(v3 + 16) = 0;
  *(_QWORD *)(v3 + 24) = 0xE000000000000000;
  v4 = v2;
  objc_msgSend(v4, sel_length);
  v11[4] = sub_1DD2DD938;
  v11[5] = v3;
  v11[0] = MEMORY[0x1E0C809B0];
  v11[1] = 1107296256;
  v11[2] = sub_1DD2DD940;
  v11[3] = &block_descriptor_10;
  v5 = _Block_copy(v11);
  swift_retain();
  swift_release();
  CEMEnumerateEmojiTokensInStringWithBlock();

  _Block_release(v5);
  swift_beginAccess();
  v6 = *(_QWORD *)(v3 + 16);
  v7 = *(void **)(v3 + 24);
  swift_bridgeObjectRetain();
  swift_release();
  v8 = v6;
  v9 = v7;
  result._object = v9;
  result._countAndFlagsBits = v8;
  return result;
}

uint64_t sub_1DD2F3F60()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t String.emojiArray()()
{
  id v0;
  void *v1;
  id v2;
  uint64_t v3;
  id v4;
  void *v5;
  uint64_t v6;
  _QWORD v8[6];

  v0 = objc_allocWithZone(MEMORY[0x1E0CB3940]);
  swift_bridgeObjectRetain();
  v1 = (void *)sub_1DD2F9DB4();
  swift_bridgeObjectRelease();
  v2 = objc_msgSend(v0, sel_initWithString_, v1);

  v3 = swift_allocObject();
  *(_QWORD *)(v3 + 16) = MEMORY[0x1E0DEE9D8];
  v4 = v2;
  objc_msgSend(v4, sel_length);
  v8[4] = sub_1DD2EF898;
  v8[5] = v3;
  v8[0] = MEMORY[0x1E0C809B0];
  v8[1] = 1107296256;
  v8[2] = sub_1DD2DD940;
  v8[3] = &block_descriptor_6_1;
  v5 = _Block_copy(v8);
  swift_retain();
  swift_release();
  CEMEnumerateEmojiTokensInStringWithBlock();

  _Block_release(v5);
  swift_beginAccess();
  v6 = *(_QWORD *)(v3 + 16);
  swift_bridgeObjectRetain();
  swift_release();
  return v6;
}

Swift::Bool __swiftcall String.isSingleEmoji()()
{
  id v0;
  void *v1;
  id v2;

  v0 = objc_allocWithZone(MEMORY[0x1E0CB3940]);
  swift_bridgeObjectRetain();
  v1 = (void *)sub_1DD2F9DB4();
  swift_bridgeObjectRelease();
  v2 = objc_msgSend(v0, sel_initWithString_, v1);

  LODWORD(v1) = CEMStringIsSingleEmoji();
  return (_DWORD)v1 != 0;
}

void *sub_1DD2F417C()
{
  void *result;
  id v1;

  result = (void *)CEMEmojiTokenGetString();
  if (result)
  {
    v1 = result;
    sub_1DD2F9E14();
    swift_beginAccess();
    sub_1DD2F9E74();
    swift_endAccess();

    return (void *)swift_bridgeObjectRelease();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t block_copy_helper_10(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_10()
{
  return swift_release();
}

uint64_t sub_1DD2F421C()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_1DD2F4240(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void *String;
  _QWORD **v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v14;
  unint64_t v15;
  _QWORD *v16;

  String = (void *)CEMEmojiTokenGetString();
  if (String)
  {
    v7 = (_QWORD **)(a5 + 16);
    v8 = String;
    v9 = sub_1DD2F9E14();
    v11 = v10;
    swift_beginAccess();
    v12 = *v7;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *v7 = v12;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v12 = sub_1DD2DDAC4(0, v12[2] + 1, 1, v12);
      *v7 = v12;
    }
    v15 = v12[2];
    v14 = v12[3];
    if (v15 >= v14 >> 1)
    {
      v12 = sub_1DD2DDAC4((_QWORD *)(v14 > 1), v15 + 1, 1, v12);
      *v7 = v12;
    }
    v12[2] = v15 + 1;
    v16 = &v12[2 * v15];
    v16[4] = v9;
    v16[5] = v11;
    swift_endAccess();

  }
  else
  {
    __break(1u);
  }
}

void sub_1DD2F4344(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  long double v3;

  if (*(_BYTE *)(v1 + 16) && *(_BYTE *)(v1 + 16) == 1)
  {
    v2 = a1 + 1;
    if (__OFADD__(a1, 1))
    {
      __break(1u);
    }
    else
    {
      v3 = (double)v2;
      pow((double)v2, 3.0);
      pow(v3, 4.0);
      pow(v3, 5.0);
    }
  }
}

uint64_t type metadata accessor for SpiralLayoutProvider()
{
  return objc_opt_self();
}

id sub_1DD2F4464()
{
  uint64_t ObjCClassFromMetadata;
  id result;

  type metadata accessor for EmojiColorPalette();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  result = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  qword_1EDB64C48 = (uint64_t)result;
  return result;
}

id static EmojiColorPalette.backgroundPalette(suggestedColor:)(uint64_t a1)
{
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  void *v6;
  unint64_t v7;
  id v8;
  id v9;
  void *v10;
  id v11;
  uint64_t v13;
  unint64_t v14;

  v2 = sub_1DD2F4BA8(1);
  if (!(v2 >> 62))
  {
    v3 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v3)
      goto LABEL_3;
LABEL_12:
    swift_bridgeObjectRelease();
    v7 = MEMORY[0x1E0DEE9D8];
    v14 = MEMORY[0x1E0DEE9D8];
    if (a1)
      goto LABEL_15;
    goto LABEL_13;
  }
  v3 = sub_1DD2FA0F0();
  if (!v3)
    goto LABEL_12;
LABEL_3:
  v14 = MEMORY[0x1E0DEE9D8];
  sub_1DD2FA0A8();
  if (v3 < 0)
  {
    __break(1u);
    goto LABEL_21;
  }
  v4 = 0;
  do
  {
    if ((v2 & 0xC000000000000001) != 0)
      v5 = (id)MEMORY[0x1DF0D75E4](v4, v2);
    else
      v5 = *(id *)(v2 + 8 * v4 + 32);
    v6 = v5;
    ++v4;
    objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D7FAC0]), sel_initWithColor_, v5);

    sub_1DD2FA090();
    sub_1DD2FA0B4();
    sub_1DD2FA0C0();
    sub_1DD2FA09C();
  }
  while (v3 != v4);
  v7 = v14;
  swift_bridgeObjectRelease();
  if (!a1)
  {
LABEL_13:
    v8 = objc_msgSend((id)objc_opt_self(), sel_whiteColor);
    objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D7FAC0]), sel_initWithColor_, v8);

    MEMORY[0x1DF0D7458]();
    if (*(_QWORD *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10) < *(_QWORD *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    {
LABEL_14:
      sub_1DD2F9F10();
      sub_1DD2F9EF8();
      v7 = v14;
      goto LABEL_15;
    }
LABEL_21:
    sub_1DD2F9F04();
    goto LABEL_14;
  }
LABEL_15:
  if (v7 >> 62)
  {
    swift_bridgeObjectRetain();
    v13 = sub_1DD2FA0F0();
    swift_bridgeObjectRelease();
    if (v13 >= 1)
      goto LABEL_17;
  }
  else if (*(uint64_t *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10) >= 1)
  {
LABEL_17:
    sub_1DD2F47A8(v7);
    swift_bridgeObjectRelease();
    v9 = objc_allocWithZone(MEMORY[0x1E0D7FA50]);
    v10 = (void *)sub_1DD2F9EC8();
    swift_bridgeObjectRelease();
    v11 = objc_msgSend(v9, sel_initWithColors_localizedName_showsColorWell_, v10, 0, 0);

    return v11;
  }
  swift_bridgeObjectRelease();
  return objc_msgSend((id)objc_opt_self(), sel_extendedPalette);
}

uint64_t sub_1DD2F47A8(unint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t i;
  unint64_t v6;
  unint64_t v7;
  id *v8;
  id v9;
  unint64_t v10;
  unint64_t v11;
  _OWORD v12[2];
  uint64_t v13;

  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v2 = sub_1DD2FA0F0();
    swift_bridgeObjectRelease();
  }
  else
  {
    v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v3 = MEMORY[0x1E0DEE9D8];
  if (!v2)
    return v3;
  v13 = MEMORY[0x1E0DEE9D8];
  result = sub_1DD2E2778(0, v2 & ~(v2 >> 63), 0);
  if ((v2 & 0x8000000000000000) == 0)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      for (i = 0; i != v2; ++i)
      {
        MEMORY[0x1DF0D75E4](i, a1);
        sub_1DD2F5300();
        swift_dynamicCast();
        v3 = v13;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1DD2E2778(0, *(_QWORD *)(v3 + 16) + 1, 1);
          v3 = v13;
        }
        v7 = *(_QWORD *)(v3 + 16);
        v6 = *(_QWORD *)(v3 + 24);
        if (v7 >= v6 >> 1)
        {
          sub_1DD2E2778(v6 > 1, v7 + 1, 1);
          v3 = v13;
        }
        *(_QWORD *)(v3 + 16) = v7 + 1;
        sub_1DD2E3428(v12, (_OWORD *)(v3 + 32 * v7 + 32));
      }
    }
    else
    {
      v8 = (id *)(a1 + 32);
      sub_1DD2F5300();
      do
      {
        v9 = *v8;
        swift_dynamicCast();
        v3 = v13;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1DD2E2778(0, *(_QWORD *)(v3 + 16) + 1, 1);
          v3 = v13;
        }
        v11 = *(_QWORD *)(v3 + 16);
        v10 = *(_QWORD *)(v3 + 24);
        if (v11 >= v10 >> 1)
        {
          sub_1DD2E2778(v10 > 1, v11 + 1, 1);
          v3 = v13;
        }
        *(_QWORD *)(v3 + 16) = v11 + 1;
        sub_1DD2E3428(v12, (_OWORD *)(v3 + 32 * v11 + 32));
        ++v8;
        --v2;
      }
      while (v2);
    }
    return v3;
  }
  __break(1u);
  return result;
}

uint64_t static EmojiColorPalette.titlePalette()()
{
  unint64_t v0;
  uint64_t v1;
  uint64_t result;
  uint64_t v3;
  id v4;
  void *v5;
  unint64_t v6;
  id v7;
  void *v8;
  id v9;
  unint64_t v10;

  v0 = sub_1DD2F4BA8(0);
  if (!(v0 >> 62))
  {
    v1 = *(_QWORD *)((v0 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v1)
      goto LABEL_3;
LABEL_11:
    swift_bridgeObjectRelease();
    v6 = MEMORY[0x1E0DEE9D8];
LABEL_12:
    sub_1DD2F47A8(v6);
    swift_bridgeObjectRelease();
    v7 = objc_allocWithZone(MEMORY[0x1E0D7FA50]);
    v8 = (void *)sub_1DD2F9EC8();
    swift_bridgeObjectRelease();
    v9 = objc_msgSend(v7, sel_initWithColors_localizedName_showsColorWell_, v8, 0, 0);

    return (uint64_t)v9;
  }
  v1 = sub_1DD2FA0F0();
  if (!v1)
    goto LABEL_11;
LABEL_3:
  v10 = MEMORY[0x1E0DEE9D8];
  result = sub_1DD2FA0A8();
  if ((v1 & 0x8000000000000000) == 0)
  {
    v3 = 0;
    do
    {
      if ((v0 & 0xC000000000000001) != 0)
        v4 = (id)MEMORY[0x1DF0D75E4](v3, v0);
      else
        v4 = *(id *)(v0 + 8 * v3 + 32);
      v5 = v4;
      ++v3;
      objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D7FAC0]), sel_initWithColor_, v4);

      sub_1DD2FA090();
      sub_1DD2FA0B4();
      sub_1DD2FA0C0();
      sub_1DD2FA09C();
    }
    while (v1 != v3);
    v6 = v10;
    swift_bridgeObjectRelease();
    goto LABEL_12;
  }
  __break(1u);
  return result;
}

uint64_t EmojiColorPalette.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t EmojiColorPalette.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t sub_1DD2F4BA8(char a1)
{
  uint64_t v2;
  id v3;
  void *v4;
  void *v5;
  id v6;
  id v7;
  void *v8;
  id v9;
  id v10;
  void *v11;
  id v12;
  id v13;
  void *v14;
  id v15;
  id v16;
  void *v17;
  id v18;
  id v19;
  void *v20;
  id v21;
  id v22;
  void *v23;
  id v24;
  id v25;
  void *v26;
  id v27;
  id v28;
  void *v29;
  id v30;
  id v31;
  void *v32;
  id v33;
  id v34;
  void *v35;
  id v36;
  id v37;
  void *v38;
  id v39;
  id v40;
  void *v41;
  id v42;
  id v43;
  void *v44;
  id v45;
  id v46;
  void *v47;
  id v48;
  uint64_t v49;
  id v50;
  void *v51;
  id v52;
  uint64_t v53;
  uint64_t i;
  void *v55;
  id v56;
  uint64_t v57;
  uint64_t v59;
  uint64_t v60;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1F03D1708);
  v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1DD2FF660;
  if (qword_1EDB61D20 != -1)
    swift_once();
  v3 = (id)qword_1EDB64C48;
  v4 = (void *)sub_1DD2F9DB4();
  v5 = (void *)objc_opt_self();
  v6 = objc_msgSend(v5, sel_colorNamed_inBundle_compatibleWithTraitCollection_, v4, v3, 0);

  *(_QWORD *)(v2 + 32) = v6;
  v7 = (id)qword_1EDB64C48;
  v8 = (void *)sub_1DD2F9DB4();
  v9 = objc_msgSend(v5, sel_colorNamed_inBundle_compatibleWithTraitCollection_, v8, v7, 0);

  *(_QWORD *)(v2 + 40) = v9;
  v10 = (id)qword_1EDB64C48;
  v11 = (void *)sub_1DD2F9DB4();
  v12 = objc_msgSend(v5, sel_colorNamed_inBundle_compatibleWithTraitCollection_, v11, v10, 0);

  *(_QWORD *)(v2 + 48) = v12;
  v13 = (id)qword_1EDB64C48;
  v14 = (void *)sub_1DD2F9DB4();
  v15 = objc_msgSend(v5, sel_colorNamed_inBundle_compatibleWithTraitCollection_, v14, v13, 0);

  *(_QWORD *)(v2 + 56) = v15;
  v16 = (id)qword_1EDB64C48;
  v17 = (void *)sub_1DD2F9DB4();
  v18 = objc_msgSend(v5, sel_colorNamed_inBundle_compatibleWithTraitCollection_, v17, v16, 0);

  *(_QWORD *)(v2 + 64) = v18;
  v19 = (id)qword_1EDB64C48;
  v20 = (void *)sub_1DD2F9DB4();
  v21 = objc_msgSend(v5, sel_colorNamed_inBundle_compatibleWithTraitCollection_, v20, v19, 0);

  *(_QWORD *)(v2 + 72) = v21;
  v22 = (id)qword_1EDB64C48;
  v23 = (void *)sub_1DD2F9DB4();
  v24 = objc_msgSend(v5, sel_colorNamed_inBundle_compatibleWithTraitCollection_, v23, v22, 0);

  *(_QWORD *)(v2 + 80) = v24;
  v25 = (id)qword_1EDB64C48;
  v26 = (void *)sub_1DD2F9DB4();
  v27 = objc_msgSend(v5, sel_colorNamed_inBundle_compatibleWithTraitCollection_, v26, v25, 0);

  *(_QWORD *)(v2 + 88) = v27;
  v28 = (id)qword_1EDB64C48;
  v29 = (void *)sub_1DD2F9DB4();
  v30 = objc_msgSend(v5, sel_colorNamed_inBundle_compatibleWithTraitCollection_, v29, v28, 0);

  *(_QWORD *)(v2 + 96) = v30;
  v31 = (id)qword_1EDB64C48;
  v32 = (void *)sub_1DD2F9DB4();
  v33 = objc_msgSend(v5, sel_colorNamed_inBundle_compatibleWithTraitCollection_, v32, v31, 0);

  *(_QWORD *)(v2 + 104) = v33;
  v34 = (id)qword_1EDB64C48;
  v35 = (void *)sub_1DD2F9DB4();
  v36 = objc_msgSend(v5, sel_colorNamed_inBundle_compatibleWithTraitCollection_, v35, v34, 0);

  *(_QWORD *)(v2 + 112) = v36;
  v37 = (id)qword_1EDB64C48;
  v38 = (void *)sub_1DD2F9DB4();
  v39 = objc_msgSend(v5, sel_colorNamed_inBundle_compatibleWithTraitCollection_, v38, v37, 0);

  *(_QWORD *)(v2 + 120) = v39;
  v40 = (id)qword_1EDB64C48;
  v41 = (void *)sub_1DD2F9DB4();
  v42 = objc_msgSend(v5, sel_colorNamed_inBundle_compatibleWithTraitCollection_, v41, v40, 0);

  *(_QWORD *)(v2 + 128) = v42;
  v43 = (id)qword_1EDB64C48;
  v44 = (void *)sub_1DD2F9DB4();
  v45 = objc_msgSend(v5, sel_colorNamed_inBundle_compatibleWithTraitCollection_, v44, v43, 0);

  *(_QWORD *)(v2 + 136) = v45;
  v46 = (id)qword_1EDB64C48;
  v47 = (void *)sub_1DD2F9DB4();
  v48 = objc_msgSend(v5, sel_colorNamed_inBundle_compatibleWithTraitCollection_, v47, v46, 0);

  *(_QWORD *)(v2 + 144) = v48;
  v60 = v2;
  sub_1DD2F9EF8();
  v49 = v2;
  if ((a1 & 1) != 0)
  {
    v50 = (id)qword_1EDB64C48;
    v51 = (void *)sub_1DD2F9DB4();
    v52 = objc_msgSend(v5, sel_colorNamed_inBundle_compatibleWithTraitCollection_, v51, v50, 0);

    MEMORY[0x1DF0D7458]();
    if (*(_QWORD *)(v60 + 16) >= *(_QWORD *)(v60 + 24) >> 1)
      sub_1DD2F9F04();
    sub_1DD2F9F10();
    sub_1DD2F9EF8();
    v49 = v60;
  }
  v59 = MEMORY[0x1E0DEE9D8];
  v53 = *(_QWORD *)(v49 + 16);
  if (v53)
  {
    swift_bridgeObjectRetain_n();
    for (i = 0; i != v53; ++i)
    {
      v55 = *(void **)(v49 + 8 * i + 32);
      if (v55)
      {
        v56 = v55;
        MEMORY[0x1DF0D7458]();
        if (*(_QWORD *)((v59 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v59 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_1DD2F9F04();
        sub_1DD2F9F10();
        sub_1DD2F9EF8();
      }
    }
    swift_bridgeObjectRelease();
    v57 = v59;
  }
  else
  {
    swift_bridgeObjectRetain();
    v57 = MEMORY[0x1E0DEE9D8];
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v57;
}

uint64_t type metadata accessor for EmojiColorPalette()
{
  return objc_opt_self();
}

uint64_t method lookup function for EmojiColorPalette()
{
  return swift_lookUpClassMethod();
}

unint64_t sub_1DD2F5300()
{
  unint64_t result;

  result = qword_1F03D1700;
  if (!qword_1F03D1700)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1F03D1700);
  }
  return result;
}

uint64_t sub_1DD2F533C()
{
  uint64_t v0;
  uint64_t ObjCClassFromMetadata;
  id v2;
  void *v3;
  void *v4;
  id v5;
  id v6;
  id v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  void *v11;
  void *v12;
  id v13;
  id v14;
  void *v16;
  void *v17;
  unint64_t v18;
  id v19[6];

  v19[5] = *(id *)MEMORY[0x1E0C80C00];
  type metadata accessor for BackgroundSuggestionsProvider();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v2 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  v3 = (void *)sub_1DD2F9DB4();
  v4 = (void *)sub_1DD2F9DB4();
  v5 = objc_msgSend(v2, sel_pathForResource_ofType_, v3, v4);

  if (v5
    && (v6 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB3620]), sel_init),
        v7 = objc_msgSend(v6, sel_contentsAtPath_, v5),
        v6,
        v5,
        v7))
  {
    v8 = sub_1DD2F9C70();
    v10 = v9;

    v11 = (void *)objc_opt_self();
    v12 = (void *)sub_1DD2F9C64();
    v19[0] = 0;
    v13 = objc_msgSend(v11, sel_propertyListWithData_options_format_error_, v12, 0, 0, v19);

    v14 = v19[0];
    if (v13)
    {
      sub_1DD2F9FE8();
      sub_1DD2E347C(v8, v10);
      swift_unknownObjectRelease();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1F03D17E8);
      swift_dynamicCast();
      *(id *)(v0 + 16) = v19[0];
    }
    else
    {
      v16 = v14;
      v17 = (void *)sub_1DD2F9C40();

      swift_willThrow();
      v18 = sub_1DD2DEC98(MEMORY[0x1E0DEE9D8]);
      sub_1DD2E347C(v8, v10);

      *(_QWORD *)(v0 + 16) = v18;
    }
  }
  else
  {
    *(_QWORD *)(v0 + 16) = sub_1DD2DEC98(MEMORY[0x1E0DEE9D8]);
  }
  return v0;
}

void sub_1DD2F55A0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  uint64_t v15;
  unint64_t v16;
  char v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  id v23;
  void *v24;
  double v25;
  double v26;
  id v27;
  void *v28;
  double v29;
  double v30;
  id v31;
  void *v32;
  double v33;
  double v34;
  double v35;
  double v36;
  double v37;
  double v38;
  char v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  _QWORD *v43;
  char v44;
  void *v45;
  uint64_t v46;
  void *v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;

  v3 = *(_QWORD *)(v2 + 16);
  if (!*(_QWORD *)(v3 + 16))
    return;
  swift_bridgeObjectRetain();
  v6 = sub_1DD2E21E0(a1, a2);
  if ((v7 & 1) == 0
    || (v8 = *(_QWORD *)(*(_QWORD *)(v3 + 56) + 8 * v6),
        swift_bridgeObjectRetain(),
        swift_bridgeObjectRelease(),
        (v9 = *(_QWORD *)(v8 + 16)) == 0))
  {
    swift_bridgeObjectRelease();
    return;
  }
  v10 = 0;
  v11 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  while (1)
  {
    v12 = *(_QWORD *)(v8 + 8 * v10 + 32);
    if (!*(_QWORD *)(v12 + 16))
      goto LABEL_7;
    swift_bridgeObjectRetain();
    v13 = sub_1DD2E21E0(0x656C797473, 0xE500000000000000);
    if ((v14 & 1) != 0)
    {
      v50 = *(_QWORD *)(*(_QWORD *)(v12 + 56) + 8 * v13);
      swift_unknownObjectRetain();
      if ((swift_dynamicCast() & 1) != 0)
        break;
    }
LABEL_6:
    swift_bridgeObjectRelease();
LABEL_7:
    if (v9 == ++v10)
    {
      swift_bridgeObjectRelease();
      return;
    }
  }
  if (!*(_QWORD *)(v12 + 16) || (v15 = v48, v16 = sub_1DD2E21E0(0x726F6C6F63, 0xE500000000000000), (v17 & 1) == 0))
  {
    swift_bridgeObjectRelease();
    goto LABEL_6;
  }
  v18 = *(_QWORD *)(*(_QWORD *)(v12 + 56) + 8 * v16);
  swift_unknownObjectRetain();
  swift_bridgeObjectRelease();
  v48 = v18;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1F03D17E0);
  if ((swift_dynamicCast() & 1) == 0)
    goto LABEL_6;
  if (v15 == 0x64696C6F73 && v49 == 0xE500000000000000 || (sub_1DD2FA210() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_20;
  }
  if (v15 == 0x72477261656E696CLL && v49 == 0xEE00746E65696461 || (sub_1DD2FA210() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    v20 = 0x3FF0000000000000;
    v46 = 0;
    v47 = &unk_1EA713060;
    v45 = &unk_1EA7130C0;
    v19 = 1;
  }
  else
  {
    if (v15 == 0x72476C6169646172 && v49 == 0xEE00746E65696461 || (sub_1DD2FA210() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      v20 = 0x3FF0000000000000;
      v47 = &unk_1EA7130F0;
      v45 = &unk_1EA713150;
      v19 = 2;
    }
    else if (v15 == 0x6D6F6F6C62 && v49 == 0xE500000000000000 || (sub_1DD2FA210() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      v20 = 0x3FF0000000000000;
      v47 = &unk_1EA713180;
      v45 = &unk_1EA7131E0;
      v19 = 3;
    }
    else
    {
      if (v15 == 0x657474656E676976 && v49 == 0xE800000000000000)
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        v39 = sub_1DD2FA210();
        swift_bridgeObjectRelease();
        if ((v39 & 1) == 0)
        {
LABEL_20:
          v19 = 0;
          v20 = 0;
          v46 = 0;
          v47 = 0;
          v45 = 0;
          goto LABEL_21;
        }
      }
      v20 = 0x3FF0000000000000;
      v47 = &unk_1EA713210;
      v45 = &unk_1EA713290;
      v19 = 4;
    }
    v46 = 1;
  }
LABEL_21:
  if (!(v50 >> 62))
  {
    if (*(_QWORD *)((v50 & 0xFFFFFFFFFFFFF8) + 0x10) == 3)
      goto LABEL_23;
LABEL_55:
    swift_bridgeObjectRelease();
    v37 = 0.0;
    v33 = 1.0;
    v34 = 1.0;
    v38 = 1.0;
LABEL_56:
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v11 = sub_1DD2DE018(0, v11[2] + 1, 1, v11);
    v42 = v11[2];
    v41 = v11[3];
    if (v42 >= v41 >> 1)
      v11 = sub_1DD2DE018((_QWORD *)(v41 > 1), v42 + 1, 1, v11);
    v11[2] = v42 + 1;
    v43 = &v11[12 * v42];
    *((_BYTE *)v43 + 32) = v19;
    *((double *)v43 + 5) = v33;
    *((double *)v43 + 6) = v34;
    *((double *)v43 + 7) = v38;
    *((double *)v43 + 8) = v37;
    v43[9] = v46;
    v43[10] = 0;
    v43[11] = 0;
    v43[12] = v20;
    v43[13] = v47;
    v43[14] = v45;
    *((_WORD *)v43 + 60) = 0;
    goto LABEL_7;
  }
  swift_bridgeObjectRetain();
  v40 = sub_1DD2FA0F0();
  swift_bridgeObjectRelease();
  if (v40 != 3)
    goto LABEL_55;
LABEL_23:
  v44 = v19;
  v21 = v20;
  v22 = v50 & 0xC000000000000001;
  if ((v50 & 0xC000000000000001) != 0)
  {
    v23 = (id)MEMORY[0x1DF0D75E4](0, v50);
    goto LABEL_26;
  }
  if (*(_QWORD *)((v50 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v23 = *(id *)(v50 + 32);
LABEL_26:
    v24 = v23;
    objc_msgSend(v23, sel_doubleValue);
    v26 = v25;

    if (v22)
    {
      v27 = (id)MEMORY[0x1DF0D75E4](1, v50);
    }
    else
    {
      if (*(_QWORD *)((v50 & 0xFFFFFFFFFFFFF8) + 0x10) < 2uLL)
        goto LABEL_67;
      v27 = *(id *)(v50 + 40);
    }
    v28 = v27;
    objc_msgSend(v27, sel_doubleValue);
    v30 = v29;

    if (v22)
    {
      v31 = (id)MEMORY[0x1DF0D75E4](2, v50);
    }
    else
    {
      if (*(_QWORD *)((v50 & 0xFFFFFFFFFFFFF8) + 0x10) < 3uLL)
        goto LABEL_68;
      v31 = *(id *)(v50 + 48);
    }
    v32 = v31;
    v20 = v21;
    v33 = v26 / 255.0;
    v34 = v30 / 255.0;
    objc_msgSend(v31, sel_doubleValue);
    v36 = v35;
    swift_bridgeObjectRelease();

    v37 = 1.0;
    v38 = v36 / 255.0;
    v19 = v44;
    goto LABEL_56;
  }
  __break(1u);
LABEL_67:
  __break(1u);
LABEL_68:
  __break(1u);
}

uint64_t sub_1DD2F5C40(unsigned __int8 *a1)
{
  return ((uint64_t (*)(void))((char *)sub_1DD2F5C5C + 4 * byte_1DD2FF6B0[*a1]))();
}

double sub_1DD2F5C5C@<D0>(_OWORD *a1@<X8>)
{
  double result;

  result = 0.0;
  a1[1] = 0u;
  a1[2] = 0u;
  *a1 = 0u;
  return result;
}

void sub_1DD2F5C6C(_QWORD *a1@<X8>)
{
  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0;
  a1[3] = 0x3FF0000000000000;
  a1[4] = &unk_1EA713060;
  a1[5] = &unk_1EA7130C0;
}

void sub_1DD2F5C90(_QWORD *a1@<X8>)
{
  *a1 = 1;
  a1[1] = 0;
  a1[2] = 0;
  a1[3] = 0x3FF0000000000000;
  a1[4] = &unk_1EA7130F0;
  a1[5] = &unk_1EA713150;
}

void sub_1DD2F5CB8(_QWORD *a1@<X8>)
{
  *a1 = 1;
  a1[1] = 0;
  a1[2] = 0;
  a1[3] = 0x3FF0000000000000;
  a1[4] = &unk_1EA713180;
  a1[5] = &unk_1EA7131E0;
}

void sub_1DD2F5CE0(_QWORD *a1@<X8>)
{
  *a1 = 1;
  a1[1] = 0;
  a1[2] = 0;
  a1[3] = 0x3FF0000000000000;
  a1[4] = &unk_1EA713210;
  a1[5] = &unk_1EA713290;
}

uint64_t sub_1DD2F5D08()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for BackgroundSuggestionsProvider()
{
  return objc_opt_self();
}

void sub_1DD2F5D4C(uint64_t a1, void *a2)
{
  void (*v3)(void);
  id v4;

  v3 = *(void (**)(void))(a1 + 32);
  swift_retain();
  v4 = a2;
  v3();
  swift_release();

}

double sub_1DD2F5DA8()
{
  uint64_t v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  double result;

  v1 = (char *)(v0 + OBJC_IVAR____TtC11EmojiPoster15OffsetGridScene_sizeVariant);
  swift_beginAccess();
  v2 = 8 * *v1;
  v3 = *(_QWORD *)((char *)&unk_1DD2FF720 + v2);
  v4 = *(_QWORD *)((char *)&unk_1DD2FF738 + v2);
  *(_QWORD *)(v0 + OBJC_IVAR____TtC11EmojiPoster15OffsetGridScene_itemSize) = v3;
  *(_QWORD *)(v0 + OBJC_IVAR____TtC11EmojiPoster15OffsetGridScene_minItemSize) = v3;
  *(_QWORD *)(v0 + OBJC_IVAR____TtC11EmojiPoster15OffsetGridScene_maxItemSize) = v4;
  sub_1DD2F69E8(1);
  return result;
}

id sub_1DD2F5E34(void *a1)
{
  _BYTE *v1;
  uint64_t v3;
  uint64_t v4;
  id v5;
  char *v6;
  id v7;
  char *v8;
  char *v9;
  id v10;
  void *v11;
  id v12;
  id v13;
  objc_super v15;

  *(_QWORD *)&v1[OBJC_IVAR____TtC11EmojiPoster15OffsetGridScene_emoji] = &unk_1EA7132C8;
  *(_QWORD *)&v1[OBJC_IVAR____TtC11EmojiPoster15OffsetGridScene_emojiTextures] = MEMORY[0x1E0DEE9D8];
  v1[OBJC_IVAR____TtC11EmojiPoster15OffsetGridScene_reverseTransition] = 0;
  v1[OBJC_IVAR____TtC11EmojiPoster15OffsetGridScene_sizeVariant] = 1;
  v3 = OBJC_IVAR____TtC11EmojiPoster15OffsetGridScene_emojiRenderer;
  type metadata accessor for EmojiRenderer();
  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = 10;
  v5 = objc_allocWithZone(MEMORY[0x1E0C99D38]);
  v6 = v1;
  v7 = objc_msgSend(v5, sel_init);
  *(_QWORD *)(v4 + 24) = v7;
  objc_msgSend(v7, sel_setCountLimit_, 10);
  *(_QWORD *)&v1[v3] = v4;
  *(_QWORD *)&v6[OBJC_IVAR____TtC11EmojiPoster15OffsetGridScene_itemSize] = 0x4054000000000000;
  *(_QWORD *)&v6[OBJC_IVAR____TtC11EmojiPoster15OffsetGridScene_minItemSize] = 0x4054000000000000;
  *(_QWORD *)&v6[OBJC_IVAR____TtC11EmojiPoster15OffsetGridScene_maxItemSize] = 0x4059000000000000;
  *(_QWORD *)&v6[OBJC_IVAR____TtC11EmojiPoster15OffsetGridScene_spacingFactor] = 0x3FD3333333333333;
  *(_QWORD *)&v6[OBJC_IVAR____TtC11EmojiPoster15OffsetGridScene_minSpacingFactor] = 0x3FD3333333333333;
  *(_QWORD *)&v6[OBJC_IVAR____TtC11EmojiPoster15OffsetGridScene_maxSpacingFactor] = 0x3FD999999999999ALL;
  v8 = &v6[OBJC_IVAR____TtC11EmojiPoster15OffsetGridScene_numberOfRows];
  *(_QWORD *)v8 = 0;
  v8[8] = 1;
  v9 = &v6[OBJC_IVAR____TtC11EmojiPoster15OffsetGridScene_numberOfItemsInRow];
  *(_QWORD *)v9 = 0;
  v9[8] = 1;
  *(_QWORD *)&v6[OBJC_IVAR____TtC11EmojiPoster15OffsetGridScene_wakeProgress] = 0x3FF0000000000000;
  *(_QWORD *)&v6[OBJC_IVAR____TtC11EmojiPoster15OffsetGridScene_unlockProgress] = 0x3FF0000000000000;

  v15.receiver = v6;
  v15.super_class = (Class)type metadata accessor for OffsetGridScene();
  v10 = objc_msgSendSuper2(&v15, sel_initWithCoder_, a1);
  if (v10)
  {
    v11 = (void *)objc_opt_self();
    v12 = v10;
    v13 = objc_msgSend(v11, sel_clearColor);
    objc_msgSend(v12, sel_setBackgroundColor_, v13);

  }
  return v10;
}

id sub_1DD2F6070(double a1, double a2)
{
  _BYTE *v2;
  uint64_t v5;
  uint64_t v6;
  id v7;
  char *v8;
  id v9;
  char *v10;
  char *v11;
  id v12;
  void *v13;
  id v14;
  id v15;
  objc_super v17;

  *(_QWORD *)&v2[OBJC_IVAR____TtC11EmojiPoster15OffsetGridScene_emoji] = &unk_1EA7132F8;
  *(_QWORD *)&v2[OBJC_IVAR____TtC11EmojiPoster15OffsetGridScene_emojiTextures] = MEMORY[0x1E0DEE9D8];
  v2[OBJC_IVAR____TtC11EmojiPoster15OffsetGridScene_reverseTransition] = 0;
  v2[OBJC_IVAR____TtC11EmojiPoster15OffsetGridScene_sizeVariant] = 1;
  v5 = OBJC_IVAR____TtC11EmojiPoster15OffsetGridScene_emojiRenderer;
  type metadata accessor for EmojiRenderer();
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = 10;
  v7 = objc_allocWithZone(MEMORY[0x1E0C99D38]);
  v8 = v2;
  v9 = objc_msgSend(v7, sel_init);
  *(_QWORD *)(v6 + 24) = v9;
  objc_msgSend(v9, sel_setCountLimit_, 10);
  *(_QWORD *)&v2[v5] = v6;
  *(_QWORD *)&v8[OBJC_IVAR____TtC11EmojiPoster15OffsetGridScene_itemSize] = 0x4054000000000000;
  *(_QWORD *)&v8[OBJC_IVAR____TtC11EmojiPoster15OffsetGridScene_minItemSize] = 0x4054000000000000;
  *(_QWORD *)&v8[OBJC_IVAR____TtC11EmojiPoster15OffsetGridScene_maxItemSize] = 0x4059000000000000;
  *(_QWORD *)&v8[OBJC_IVAR____TtC11EmojiPoster15OffsetGridScene_spacingFactor] = 0x3FD3333333333333;
  *(_QWORD *)&v8[OBJC_IVAR____TtC11EmojiPoster15OffsetGridScene_minSpacingFactor] = 0x3FD3333333333333;
  *(_QWORD *)&v8[OBJC_IVAR____TtC11EmojiPoster15OffsetGridScene_maxSpacingFactor] = 0x3FD999999999999ALL;
  v10 = &v8[OBJC_IVAR____TtC11EmojiPoster15OffsetGridScene_numberOfRows];
  *(_QWORD *)v10 = 0;
  v10[8] = 1;
  v11 = &v8[OBJC_IVAR____TtC11EmojiPoster15OffsetGridScene_numberOfItemsInRow];
  *(_QWORD *)v11 = 0;
  v11[8] = 1;
  *(_QWORD *)&v8[OBJC_IVAR____TtC11EmojiPoster15OffsetGridScene_wakeProgress] = 0x3FF0000000000000;
  *(_QWORD *)&v8[OBJC_IVAR____TtC11EmojiPoster15OffsetGridScene_unlockProgress] = 0x3FF0000000000000;

  v17.receiver = v8;
  v17.super_class = (Class)type metadata accessor for OffsetGridScene();
  v12 = objc_msgSendSuper2(&v17, sel_initWithSize_, a1, a2);
  v13 = (void *)objc_opt_self();
  v14 = v12;
  v15 = objc_msgSend(v13, sel_clearColor);
  objc_msgSend(v14, sel_setBackgroundColor_, v15);

  return v14;
}

void sub_1DD2F6304()
{
  char *v0;
  char *v1;
  char *v2;
  id v3;
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  id v13;
  id v14;
  id v15;
  void *v16;
  void *v17;
  char *v18;
  uint64_t v19;

  objc_msgSend(v0, sel_removeAllChildren);
  v1 = &v0[OBJC_IVAR____TtC11EmojiPoster15OffsetGridScene_emojiTextures];
  swift_beginAccess();
  *(_QWORD *)v1 = MEMORY[0x1E0DEE9D8];
  swift_bridgeObjectRelease();
  v2 = &v0[OBJC_IVAR____TtC11EmojiPoster15OffsetGridScene_emoji];
  swift_beginAccess();
  if (*(_QWORD *)(*(_QWORD *)v2 + 16))
  {
    sub_1DD2F655C();
    v3 = objc_msgSend(v0, sel_view);
    if (v3)
    {
      v17 = v3;
      sub_1DD2F6910();
      v4 = &v0[OBJC_IVAR____TtC11EmojiPoster15OffsetGridScene_numberOfRows];
      *(_QWORD *)v4 = v5;
      v4[8] = 0;
      sub_1DD2F6904();
      v6 = &v0[OBJC_IVAR____TtC11EmojiPoster15OffsetGridScene_numberOfItemsInRow];
      *(_QWORD *)v6 = v7;
      v6[8] = 0;
      if ((v4[8] & 1) != 0)
      {
LABEL_22:
        __break(1u);
        return;
      }
      v8 = 0;
      v18 = v4;
      while (v8 < *(_QWORD *)v4)
      {
        v19 = v8;
        v9 = 0;
        while (v9 < *(_QWORD *)v6)
        {
          v10 = *(_QWORD *)(*(_QWORD *)v2 + 16);
          if (!v10)
          {
            __break(1u);
LABEL_20:
            __break(1u);
LABEL_21:
            __break(1u);
            goto LABEL_22;
          }
          v11 = (v9 + 1) % v10;
          v12 = *(_QWORD *)v1;
          if ((*(_QWORD *)v1 & 0xC000000000000001) != 0)
          {
            swift_bridgeObjectRetain();
            v13 = (id)MEMORY[0x1DF0D75E4](v11, v12);
            swift_bridgeObjectRelease();
          }
          else
          {
            if (v11 >= *(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10))
              goto LABEL_20;
            v13 = *(id *)(v12 + 8 * v11 + 32);
          }
          v14 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CD7FE8]), sel_initWithTexture_, v13);

          v15 = v14;
          v16 = (void *)sub_1DD2F9DB4();
          objc_msgSend(v15, sel_setName_, v16);

          objc_msgSend(v0, sel_addChild_, v15);
          ++v9;
          if ((v6[8] & 1) != 0)
            goto LABEL_21;
        }
        v4 = v18;
        v8 = v19 + 1;
        if ((v18[8] & 1) != 0)
          goto LABEL_22;
      }

    }
    sub_1DD2F69E8(1);
  }
}

uint64_t sub_1DD2F655C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  _QWORD *v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  void *v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  id v21;
  void *v22;
  id v23;
  id v24;
  id v25;
  void *v26;
  int64x2_t v27;
  _QWORD *v28;
  uint64_t v29;
  _QWORD aBlock[6];

  v1 = v0;
  v2 = (uint64_t *)(v0 + OBJC_IVAR____TtC11EmojiPoster15OffsetGridScene_emoji);
  result = swift_beginAccess();
  v4 = *v2;
  v5 = *(_QWORD *)(*v2 + 16);
  if (v5)
  {
    v6 = (void *)objc_opt_self();
    v7 = (_QWORD *)(v1 + OBJC_IVAR____TtC11EmojiPoster15OffsetGridScene_emojiTextures);
    v29 = *(_QWORD *)(v1 + OBJC_IVAR____TtC11EmojiPoster15OffsetGridScene_emojiRenderer);
    swift_bridgeObjectRetain();
    v8 = (uint64_t *)(v4 + 40);
    v27 = vdupq_n_s64(0x4069000000000000uLL);
    v26 = v6;
    v28 = v7;
    while (1)
    {
      v9 = *(v8 - 1);
      v10 = *v8;
      v11 = objc_allocWithZone(MEMORY[0x1E0CB3940]);
      swift_bridgeObjectRetain_n();
      v12 = (void *)sub_1DD2F9DB4();
      swift_bridgeObjectRelease();
      v13 = objc_msgSend(v11, sel_initWithString_, v12);

      v14 = objc_msgSend(*(id *)(v29 + 24), sel_objectForKey_, v13);
      if (v14)
      {
        v15 = v14;
        swift_bridgeObjectRelease();
      }
      else
      {
        v16 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3830]), sel_init);
        objc_msgSend(v16, sel_setOpaque_, 0);
        v17 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3828]), sel_initWithSize_format_, v16, 200.0, 200.0);
        v18 = swift_allocObject();
        *(_QWORD *)(v18 + 16) = v9;
        *(_QWORD *)(v18 + 24) = v10;
        *(int64x2_t *)(v18 + 32) = v27;
        v19 = swift_allocObject();
        *(_QWORD *)(v19 + 16) = sub_1DD2C6578;
        *(_QWORD *)(v19 + 24) = v18;
        aBlock[4] = sub_1DD2C6594;
        aBlock[5] = v19;
        aBlock[0] = MEMORY[0x1E0C809B0];
        aBlock[1] = 1107296256;
        aBlock[2] = sub_1DD2CB738;
        aBlock[3] = &block_descriptor_13_0;
        v20 = _Block_copy(aBlock);
        swift_bridgeObjectRetain();
        swift_retain();
        swift_release();
        v21 = objc_msgSend(v17, sel_imageWithActions_, v20);
        _Block_release(v20);
        LOBYTE(v20) = swift_isEscapingClosureAtFileLocation();
        result = swift_release();
        if ((v20 & 1) != 0)
        {
          __break(1u);
          return result;
        }
        v22 = *(void **)(v29 + 24);
        v15 = v21;
        v23 = v22;
        objc_msgSend(v23, sel_setObject_forKey_, v15, v13);
        swift_bridgeObjectRelease();
        swift_release();

        v6 = v26;
      }

      v24 = objc_msgSend(v6, sel_textureWithImage_, v15);
      swift_beginAccess();
      v25 = v24;
      MEMORY[0x1DF0D7458]();
      if (*(_QWORD *)((*v28 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*v28 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        sub_1DD2F9F04();
      v8 += 2;
      sub_1DD2F9F10();
      sub_1DD2F9EF8();
      swift_endAccess();

      if (!--v5)
        return swift_bridgeObjectRelease();
    }
  }
  return result;
}

void sub_1DD2F6904()
{
  sub_1DD2F691C((double (*)(id))MEMORY[0x1E0C9D5D0]);
}

void sub_1DD2F6910()
{
  sub_1DD2F691C(MEMORY[0x1E0C9D580]);
}

void sub_1DD2F691C(double (*a1)(id))
{
  char *v1;
  id v3;
  void *v4;
  double v5;
  double v6;
  double v7;
  uint64_t v8;
  uint64_t v9;

  v3 = objc_msgSend(v1, sel_view);
  if (v3)
  {
    v4 = v3;
    v5 = a1(objc_msgSend(v3, sel_bounds));
    v6 = *(double *)&v1[OBJC_IVAR____TtC11EmojiPoster15OffsetGridScene_itemSize];
    if (v5 - v6 <= 0.0)
    {

    }
    else
    {
      v7 = v6 + v6 * *(double *)&v1[OBJC_IVAR____TtC11EmojiPoster15OffsetGridScene_spacingFactor];
      v8 = 1;
      do
      {
        v9 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
          __break(1u);
          return;
        }
        v6 = v7 + v6;
        ++v8;
      }
      while (v5 - v6 > 0.0);

      if ((v9 & 1) == 0 && __OFADD__(v9, 1))
        __break(1u);
    }
  }
}

void sub_1DD2F69E8(char a1)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  void *v7;
  id v8;
  _QWORD v9[6];

  v3 = swift_allocObject();
  *(_QWORD *)(v3 + 16) = 0;
  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = 0;
  v5 = (void *)sub_1DD2F9DB4();
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = v1;
  *(_QWORD *)(v6 + 24) = v4;
  *(_QWORD *)(v6 + 32) = v3;
  *(_BYTE *)(v6 + 40) = a1;
  v9[4] = sub_1DD2F73B8;
  v9[5] = v6;
  v9[0] = MEMORY[0x1E0C809B0];
  v9[1] = 1107296256;
  v9[2] = sub_1DD2F5D4C;
  v9[3] = &block_descriptor_11;
  v7 = _Block_copy(v9);
  v8 = v1;
  swift_retain();
  swift_retain();
  swift_release();
  objc_msgSend(v8, sel_enumerateChildNodesWithName_usingBlock_, v5, v7);
  _Block_release(v7);
  swift_release();
  swift_release();

}

void sub_1DD2F6B28(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  uint64_t v11;
  void *v12;
  uint64_t *v13;
  _QWORD *v14;
  id v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  objc_opt_self();
  v11 = swift_dynamicCastObjCClass();
  if (v11)
  {
    v12 = (void *)v11;
    v13 = (uint64_t *)(a4 + 16);
    v14 = (_QWORD *)(a5 + 16);
    swift_beginAccess();
    swift_beginAccess();
    v15 = a1;
    sub_1DD2F6CC8();
    objc_msgSend(v12, sel_setPosition_);
    if ((a6 & 1) != 0)
      objc_msgSend(v12, sel_scaleToSize_, *(double *)(a3 + OBJC_IVAR____TtC11EmojiPoster15OffsetGridScene_itemSize), *(double *)(a3 + OBJC_IVAR____TtC11EmojiPoster15OffsetGridScene_itemSize));
    swift_beginAccess();
    v16 = (uint64_t *)(a3 + OBJC_IVAR____TtC11EmojiPoster15OffsetGridScene_numberOfItemsInRow);
    if ((*(_BYTE *)(a3 + OBJC_IVAR____TtC11EmojiPoster15OffsetGridScene_numberOfItemsInRow + 8) & 1) != 0)
      goto LABEL_15;
    v17 = *v13;
    v18 = *v16;

    if (__OFSUB__(v18, 1))
    {
      __break(1u);
    }
    else
    {
      if (v17 != v18 - 1)
      {
        swift_beginAccess();
        v19 = *v13 + 1;
        if (!__OFADD__(*v13, 1))
          goto LABEL_10;
        goto LABEL_14;
      }
      swift_beginAccess();
      if (!__OFADD__(*v14, 1))
      {
        ++*v14;
        swift_beginAccess();
        v19 = 0;
LABEL_10:
        *v13 = v19;
        return;
      }
    }
    __break(1u);
LABEL_14:
    __break(1u);
LABEL_15:
    __break(1u);
  }
}

void sub_1DD2F6CC8()
{
  void *v0;
  id v1;
  void *v2;

  v1 = objc_msgSend(v0, sel_view);
  if (v1)
  {
    v2 = v1;
    objc_msgSend(v1, sel_bounds);
    if ((*((_BYTE *)v0 + OBJC_IVAR____TtC11EmojiPoster15OffsetGridScene_numberOfRows + 8) & 1) != 0)
    {
      __break(1u);
    }
    else
    {
      objc_msgSend(v2, sel_bounds);
      if ((*((_BYTE *)v0 + OBJC_IVAR____TtC11EmojiPoster15OffsetGridScene_numberOfItemsInRow + 8) & 1) == 0)
      {
        objc_msgSend(v2, sel_bounds);

        return;
      }
    }
    __break(1u);
  }
}

id sub_1DD2F6EA0()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for OffsetGridScene();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for OffsetGridScene()
{
  return objc_opt_self();
}

uint64_t sub_1DD2F6F38()
{
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

void sub_1DD2F6F84(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v3;

  v3 = (_QWORD *)(*v1 + OBJC_IVAR____TtC11EmojiPoster15OffsetGridScene_emoji);
  swift_beginAccess();
  *v3 = a1;
  swift_bridgeObjectRelease();
  sub_1DD2F6304();
}

void (*sub_1DD2F6FE4(uint64_t a1))(uint64_t a1, char a2)
{
  _QWORD *v1;

  *(_QWORD *)(a1 + 24) = *v1;
  swift_beginAccess();
  return sub_1DD2F7030;
}

void sub_1DD2F7030(uint64_t a1, char a2)
{
  swift_endAccess();
  if ((a2 & 1) == 0)
    sub_1DD2F6304();
}

uint64_t sub_1DD2F7060@<X0>(_BYTE *a1@<X8>)
{
  _QWORD *v1;
  _BYTE *v3;
  uint64_t result;

  v3 = (_BYTE *)(*v1 + OBJC_IVAR____TtC11EmojiPoster15OffsetGridScene_sizeVariant);
  result = swift_beginAccess();
  *a1 = *v3;
  return result;
}

double sub_1DD2F70B0(char *a1)
{
  _QWORD *v1;
  char v2;
  _BYTE *v3;

  v2 = *a1;
  v3 = (_BYTE *)(*v1 + OBJC_IVAR____TtC11EmojiPoster15OffsetGridScene_sizeVariant);
  swift_beginAccess();
  *v3 = v2;
  return sub_1DD2F5DA8();
}

double (*sub_1DD2F7108(uint64_t a1))(uint64_t a1, char a2)
{
  _QWORD *v1;

  *(_QWORD *)(a1 + 24) = *v1;
  swift_beginAccess();
  return sub_1DD2F7154;
}

double sub_1DD2F7154(uint64_t a1, char a2)
{
  double result;

  swift_endAccess();
  if ((a2 & 1) == 0)
    return sub_1DD2F5DA8();
  return result;
}

double sub_1DD2F7184()
{
  _QWORD *v0;
  uint64_t v1;

  v1 = *v0 + OBJC_IVAR____TtC11EmojiPoster15OffsetGridScene_wakeProgress;
  swift_beginAccess();
  return *(double *)v1;
}

void sub_1DD2F71CC(uint64_t a1, uint64_t a2, double a3)
{
  sub_1DD2F727C(a3, a1, a2, &OBJC_IVAR____TtC11EmojiPoster15OffsetGridScene_wakeProgress);
}

uint64_t (*sub_1DD2F71D8(uint64_t a1))()
{
  _QWORD *v1;

  *(_QWORD *)(a1 + 24) = *v1;
  swift_beginAccess();
  return sub_1DD2F7224;
}

double sub_1DD2F7228()
{
  _QWORD *v0;
  uint64_t v1;

  v1 = *v0 + OBJC_IVAR____TtC11EmojiPoster15OffsetGridScene_unlockProgress;
  swift_beginAccess();
  return *(double *)v1;
}

void sub_1DD2F7270(uint64_t a1, uint64_t a2, double a3)
{
  sub_1DD2F727C(a3, a1, a2, &OBJC_IVAR____TtC11EmojiPoster15OffsetGridScene_unlockProgress);
}

void sub_1DD2F727C(double a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  _QWORD *v4;
  double *v6;

  v6 = (double *)(*v4 + *a4);
  swift_beginAccess();
  *v6 = a1;
  sub_1DD2F69E8(1);
}

uint64_t (*sub_1DD2F72D4(uint64_t a1))()
{
  _QWORD *v1;

  *(_QWORD *)(a1 + 24) = *v1;
  swift_beginAccess();
  return sub_1DD2F7224;
}

void sub_1DD2F7320(uint64_t a1, char a2)
{
  swift_endAccess();
  if ((a2 & 1) == 0)
    sub_1DD2F69E8(1);
}

void sub_1DD2F7354()
{
  sub_1DD2F6304();
}

uint64_t sub_1DD2F7374()
{
  return swift_deallocObject();
}

uint64_t sub_1DD2F7384()
{
  uint64_t v0;

  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_1DD2F73B8(void *a1, uint64_t a2)
{
  uint64_t v2;

  sub_1DD2F6B28(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), *(_BYTE *)(v2 + 40));
}

uint64_t block_copy_helper_11(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_11()
{
  return swift_release();
}

uint64_t sub_1DD2F73E0()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1DD2F7404()
{
  return swift_deallocObject();
}

uint64_t sub_1DD2F741C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  char v11;

  v3 = *a1 + OBJC_IVAR____TtC11EmojiPoster24BackgroundViewController_backgroundConfiguration;
  swift_beginAccess();
  v4 = *(_QWORD *)(v3 + 40);
  v5 = *(_QWORD *)(v3 + 48);
  v6 = *(_QWORD *)(v3 + 56);
  v7 = *(_QWORD *)(v3 + 64);
  v8 = *(_QWORD *)(v3 + 72);
  v9 = *(_QWORD *)(v3 + 80);
  v10 = *(_BYTE *)(v3 + 88);
  v11 = *(_BYTE *)(v3 + 89);
  *(_BYTE *)a2 = *(_BYTE *)v3;
  *(_OWORD *)(a2 + 8) = *(_OWORD *)(v3 + 8);
  *(_OWORD *)(a2 + 24) = *(_OWORD *)(v3 + 24);
  *(_QWORD *)(a2 + 40) = v4;
  *(_QWORD *)(a2 + 48) = v5;
  *(_QWORD *)(a2 + 56) = v6;
  *(_QWORD *)(a2 + 64) = v7;
  *(_QWORD *)(a2 + 72) = v8;
  *(_QWORD *)(a2 + 80) = v9;
  *(_BYTE *)(a2 + 88) = v10;
  *(_BYTE *)(a2 + 89) = v11;
  return sub_1DD2BF7A4(v4, v5, v6, v7, v8);
}

id sub_1DD2F74A8(char *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  char v18;
  __int128 v19;
  char v20;

  v20 = *a1;
  v19 = *(_OWORD *)(a1 + 8);
  v2 = *((_QWORD *)a1 + 3);
  v3 = *((_QWORD *)a1 + 4);
  v4 = *((_QWORD *)a1 + 5);
  v5 = *((_QWORD *)a1 + 6);
  v6 = *((_QWORD *)a1 + 7);
  v7 = *((_QWORD *)a1 + 8);
  v8 = *((_QWORD *)a1 + 9);
  v9 = *((_QWORD *)a1 + 10);
  v10 = *a2 + OBJC_IVAR____TtC11EmojiPoster24BackgroundViewController_backgroundConfiguration;
  v17 = a1[89];
  v18 = a1[88];
  swift_beginAccess();
  v11 = *(_QWORD *)(v10 + 40);
  v12 = *(_QWORD *)(v10 + 48);
  v15 = *(_QWORD *)(v10 + 64);
  v16 = *(_QWORD *)(v10 + 56);
  v14 = *(_QWORD *)(v10 + 72);
  *(_BYTE *)v10 = v20;
  *(_OWORD *)(v10 + 8) = v19;
  *(_QWORD *)(v10 + 24) = v2;
  *(_QWORD *)(v10 + 32) = v3;
  *(_QWORD *)(v10 + 40) = v4;
  *(_QWORD *)(v10 + 48) = v5;
  *(_QWORD *)(v10 + 56) = v6;
  *(_QWORD *)(v10 + 64) = v7;
  *(_QWORD *)(v10 + 72) = v8;
  *(_QWORD *)(v10 + 80) = v9;
  *(_BYTE *)(v10 + 88) = v18;
  *(_BYTE *)(v10 + 89) = v17;
  sub_1DD2BF7A4(v4, v5, v6, v7, v8);
  sub_1DD2BF928(v11, v12, v16, v15, v14);
  return sub_1DD2F7CA4();
}

uint64_t sub_1DD2F75C0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  char v11;

  v3 = v1 + OBJC_IVAR____TtC11EmojiPoster24BackgroundViewController_backgroundConfiguration;
  swift_beginAccess();
  v4 = *(_QWORD *)(v3 + 40);
  v5 = *(_QWORD *)(v3 + 48);
  v6 = *(_QWORD *)(v3 + 56);
  v7 = *(_QWORD *)(v3 + 64);
  v8 = *(_QWORD *)(v3 + 72);
  v9 = *(_QWORD *)(v3 + 80);
  v10 = *(_BYTE *)(v3 + 88);
  v11 = *(_BYTE *)(v3 + 89);
  *(_BYTE *)a1 = *(_BYTE *)v3;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(v3 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(v3 + 24);
  *(_QWORD *)(a1 + 40) = v4;
  *(_QWORD *)(a1 + 48) = v5;
  *(_QWORD *)(a1 + 56) = v6;
  *(_QWORD *)(a1 + 64) = v7;
  *(_QWORD *)(a1 + 72) = v8;
  *(_QWORD *)(a1 + 80) = v9;
  *(_BYTE *)(a1 + 88) = v10;
  *(_BYTE *)(a1 + 89) = v11;
  return sub_1DD2BF7A4(v4, v5, v6, v7, v8);
}

id sub_1DD2F7648(char *a1)
{
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v16;
  __int128 v17;
  __int128 v18;

  v2 = *a1;
  v3 = *((_QWORD *)a1 + 3);
  v4 = *((_QWORD *)a1 + 4);
  v17 = *(_OWORD *)(a1 + 40);
  v18 = *(_OWORD *)(a1 + 8);
  v5 = *((_QWORD *)a1 + 7);
  v16 = *((_OWORD *)a1 + 4);
  v6 = *((_QWORD *)a1 + 10);
  v7 = a1[88];
  v8 = a1[89];
  v9 = v1 + OBJC_IVAR____TtC11EmojiPoster24BackgroundViewController_backgroundConfiguration;
  swift_beginAccess();
  v10 = *(_QWORD *)(v9 + 40);
  v11 = *(_QWORD *)(v9 + 48);
  v12 = *(_QWORD *)(v9 + 56);
  v13 = *(_QWORD *)(v9 + 64);
  v14 = *(_QWORD *)(v9 + 72);
  *(_BYTE *)v9 = v2;
  *(_OWORD *)(v9 + 8) = v18;
  *(_QWORD *)(v9 + 24) = v3;
  *(_QWORD *)(v9 + 32) = v4;
  *(_OWORD *)(v9 + 40) = v17;
  *(_QWORD *)(v9 + 56) = v5;
  *(_OWORD *)(v9 + 64) = v16;
  *(_QWORD *)(v9 + 80) = v6;
  *(_BYTE *)(v9 + 88) = v7;
  *(_BYTE *)(v9 + 89) = v8;
  sub_1DD2BF928(v10, v11, v12, v13, v14);
  return sub_1DD2F7CA4();
}

uint64_t (*sub_1DD2F7718(uint64_t a1))()
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1DD2F7760;
}

double sub_1DD2F7764()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + OBJC_IVAR____TtC11EmojiPoster24BackgroundViewController_wakeProgress;
  swift_beginAccess();
  return *(double *)v1;
}

id sub_1DD2F77A8(double a1)
{
  return sub_1DD2F784C(&OBJC_IVAR____TtC11EmojiPoster24BackgroundViewController_wakeProgress, a1);
}

uint64_t (*sub_1DD2F77B4(uint64_t a1))()
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1DD2F7760;
}

double sub_1DD2F77FC()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + OBJC_IVAR____TtC11EmojiPoster24BackgroundViewController_unlockProgress;
  swift_beginAccess();
  return *(double *)v1;
}

id sub_1DD2F7840(double a1)
{
  return sub_1DD2F784C(&OBJC_IVAR____TtC11EmojiPoster24BackgroundViewController_unlockProgress, a1);
}

id sub_1DD2F784C(_QWORD *a1, double a2)
{
  uint64_t v2;
  double *v4;

  v4 = (double *)(v2 + *a1);
  swift_beginAccess();
  *v4 = a2;
  return sub_1DD2F7CA4();
}

uint64_t (*sub_1DD2F789C(uint64_t a1))()
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1DD2F7760;
}

id sub_1DD2F78E4(uint64_t a1, char a2)
{
  id result;

  result = (id)swift_endAccess();
  if ((a2 & 1) == 0)
    return sub_1DD2F7CA4();
  return result;
}

id sub_1DD2F791C()
{
  char *v0;
  uint64_t v1;
  id v2;
  id result;
  void *v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  void *v13;
  void *v14;
  id v15;
  id v16;
  id v17;
  double v18;
  void *v19;
  id v20;
  objc_super v21;

  v21.receiver = v0;
  v21.super_class = (Class)type metadata accessor for BackgroundViewController();
  objc_msgSendSuper2(&v21, sel_viewDidLoad);
  v1 = OBJC_IVAR____TtC11EmojiPoster24BackgroundViewController_dimmingLayer;
  v2 = *(id *)&v0[OBJC_IVAR____TtC11EmojiPoster24BackgroundViewController_dimmingLayer];
  result = objc_msgSend(v0, sel_view);
  if (result)
  {
    v4 = result;
    objc_msgSend(result, sel_bounds);
    v6 = v5;
    v8 = v7;
    v10 = v9;
    v12 = v11;

    objc_msgSend(v2, sel_setFrame_, v6, v8, v10, v12);
    v13 = *(void **)&v0[v1];
    v14 = (void *)objc_opt_self();
    v15 = v13;
    v16 = objc_msgSend(v14, sel_blackColor);
    v17 = objc_msgSend(v16, sel_CGColor);

    objc_msgSend(v15, sel_setBackgroundColor_, v17);
    LODWORD(v18) = 0;
    objc_msgSend(*(id *)&v0[v1], sel_setOpacity_, v18);
    result = objc_msgSend(v0, sel_view);
    if (result)
    {
      v19 = result;
      v20 = objc_msgSend(result, sel_layer);

      objc_msgSend(v20, sel_addSublayer_, *(_QWORD *)&v0[v1]);
      return sub_1DD2F7CA4();
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

void sub_1DD2F7B00()
{
  char *v0;
  id v1;
  id v2;
  void *v3;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  objc_super v12;

  v12.receiver = v0;
  v12.super_class = (Class)type metadata accessor for BackgroundViewController();
  objc_msgSendSuper2(&v12, sel_viewDidLayoutSubviews);
  v1 = *(id *)&v0[OBJC_IVAR____TtC11EmojiPoster24BackgroundViewController_dimmingLayer];
  v2 = objc_msgSend(v0, sel_view);
  if (v2)
  {
    v3 = v2;
    objc_msgSend(v2, sel_bounds);
    v5 = v4;
    v7 = v6;
    v9 = v8;
    v11 = v10;

    objc_msgSend(v1, sel_setFrame_, v5, v7, v9, v11);
  }
  else
  {
    __break(1u);
  }
}

id sub_1DD2F7CA4()
{
  char *v0;
  id result;
  void *v2;
  double *v3;
  id v4;
  double *v5;
  double v6;

  result = objc_msgSend(v0, sel_view);
  if (result)
  {
    v2 = result;
    v3 = (double *)&v0[OBJC_IVAR____TtC11EmojiPoster24BackgroundViewController_backgroundConfiguration];
    swift_beginAccess();
    v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3658]), sel_initWithRed_green_blue_alpha_, v3[1], v3[2], v3[3], v3[4]);
    objc_msgSend(v2, sel_setBackgroundColor_, v4);

    v5 = (double *)&v0[OBJC_IVAR____TtC11EmojiPoster24BackgroundViewController_wakeProgress];
    swift_beginAccess();
    v6 = (1.0 - *v5) * 0.2 + 0.0;
    *(float *)&v6 = v6;
    return objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC11EmojiPoster24BackgroundViewController_dimmingLayer], sel_setOpacity_, v6);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t type metadata accessor for BackgroundViewController()
{
  return objc_opt_self();
}

id BackgroundViewController.__allocating_init(nibName:bundle:)(uint64_t a1, uint64_t a2, void *a3)
{
  objc_class *v3;
  objc_class *v4;
  void *v6;
  id v7;

  v4 = v3;
  if (a2)
  {
    v6 = (void *)sub_1DD2F9DB4();
    swift_bridgeObjectRelease();
  }
  else
  {
    v6 = 0;
  }
  v7 = objc_msgSend(objc_allocWithZone(v4), sel_initWithNibName_bundle_, v6, a3);

  return v7;
}

id BackgroundViewController.init(nibName:bundle:)(uint64_t a1, uint64_t a2, void *a3)
{
  _BYTE *v3;
  char *v6;
  void *v7;
  char *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  id v16;
  objc_super v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD v22[2];

  v22[1] = *MEMORY[0x1E0C80C00];
  v3[OBJC_IVAR____TtC11EmojiPoster24BackgroundViewController_usesDimmingLayer] = 1;
  v6 = &v3[OBJC_IVAR____TtC11EmojiPoster24BackgroundViewController_backgroundConfiguration];
  v7 = (void *)objc_opt_self();
  v8 = v3;
  v9 = objc_msgSend(v7, sel_lightGrayColor);
  v21 = 0;
  v22[0] = 0;
  v19 = 0;
  v20 = 0;
  objc_msgSend(v9, sel_getRed_green_blue_alpha_, v22, &v21, &v20, &v19);

  v11 = v21;
  v10 = v22[0];
  v13 = v19;
  v12 = v20;
  *v6 = 0;
  *((_QWORD *)v6 + 1) = v10;
  *((_QWORD *)v6 + 2) = v11;
  *((_QWORD *)v6 + 3) = v12;
  *((_QWORD *)v6 + 4) = v13;
  *(_OWORD *)(v6 + 40) = 0u;
  *(_OWORD *)(v6 + 56) = 0u;
  *(_OWORD *)(v6 + 72) = 0u;
  *((_WORD *)v6 + 44) = 0;
  *(_QWORD *)&v8[OBJC_IVAR____TtC11EmojiPoster24BackgroundViewController_backgroundIndex] = 0;
  v14 = OBJC_IVAR____TtC11EmojiPoster24BackgroundViewController_dimmingLayer;
  *(_QWORD *)&v8[v14] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CD27A8]), sel_init);
  *(_QWORD *)&v8[OBJC_IVAR____TtC11EmojiPoster24BackgroundViewController_wakeProgress] = 0x3FF0000000000000;
  *(_QWORD *)&v8[OBJC_IVAR____TtC11EmojiPoster24BackgroundViewController_unlockProgress] = 0x3FF0000000000000;

  if (a2)
  {
    v15 = (void *)sub_1DD2F9DB4();
    swift_bridgeObjectRelease();
  }
  else
  {
    v15 = 0;
  }
  v18.receiver = v8;
  v18.super_class = (Class)type metadata accessor for BackgroundViewController();
  v16 = objc_msgSendSuper2(&v18, sel_initWithNibName_bundle_, v15, a3);

  return v16;
}

id BackgroundViewController.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

id BackgroundViewController.init(coder:)(void *a1)
{
  _BYTE *v1;
  char *v3;
  void *v4;
  char *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  objc_super v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD v18[2];

  v18[1] = *MEMORY[0x1E0C80C00];
  v1[OBJC_IVAR____TtC11EmojiPoster24BackgroundViewController_usesDimmingLayer] = 1;
  v3 = &v1[OBJC_IVAR____TtC11EmojiPoster24BackgroundViewController_backgroundConfiguration];
  v4 = (void *)objc_opt_self();
  v5 = v1;
  v6 = objc_msgSend(v4, sel_lightGrayColor);
  v17 = 0;
  v18[0] = 0;
  v15 = 0;
  v16 = 0;
  objc_msgSend(v6, sel_getRed_green_blue_alpha_, v18, &v17, &v16, &v15);

  v8 = v17;
  v7 = v18[0];
  v10 = v15;
  v9 = v16;
  *v3 = 0;
  *((_QWORD *)v3 + 1) = v7;
  *((_QWORD *)v3 + 2) = v8;
  *((_QWORD *)v3 + 3) = v9;
  *((_QWORD *)v3 + 4) = v10;
  *(_OWORD *)(v3 + 40) = 0u;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *((_WORD *)v3 + 44) = 0;
  *(_QWORD *)&v5[OBJC_IVAR____TtC11EmojiPoster24BackgroundViewController_backgroundIndex] = 0;
  v11 = OBJC_IVAR____TtC11EmojiPoster24BackgroundViewController_dimmingLayer;
  *(_QWORD *)&v5[v11] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CD27A8]), sel_init);
  *(_QWORD *)&v5[OBJC_IVAR____TtC11EmojiPoster24BackgroundViewController_wakeProgress] = 0x3FF0000000000000;
  *(_QWORD *)&v5[OBJC_IVAR____TtC11EmojiPoster24BackgroundViewController_unlockProgress] = 0x3FF0000000000000;

  v14.receiver = v5;
  v14.super_class = (Class)type metadata accessor for BackgroundViewController();
  v12 = objc_msgSendSuper2(&v14, sel_initWithCoder_, a1);

  return v12;
}

id BackgroundViewController.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for BackgroundViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

double sub_1DD2F827C@<D0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return keypath_get_4Tm(a1, &OBJC_IVAR____TtC11EmojiPoster24BackgroundViewController_wakeProgress, a2);
}

id sub_1DD2F8288(uint64_t *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_2Tm_0(a1, a2, a3, a4, &OBJC_IVAR____TtC11EmojiPoster24BackgroundViewController_wakeProgress);
}

double sub_1DD2F8294@<D0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return keypath_get_4Tm(a1, &OBJC_IVAR____TtC11EmojiPoster24BackgroundViewController_unlockProgress, a2);
}

id sub_1DD2F82A0(uint64_t *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_2Tm_0(a1, a2, a3, a4, &OBJC_IVAR____TtC11EmojiPoster24BackgroundViewController_unlockProgress);
}

id keypath_set_2Tm_0(uint64_t *a1, _QWORD *a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  uint64_t v5;
  _QWORD *v6;

  v5 = *a1;
  v6 = (_QWORD *)(*a2 + *a5);
  swift_beginAccess();
  *v6 = v5;
  return sub_1DD2F7CA4();
}

uint64_t method lookup function for BackgroundViewController()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of BackgroundViewController.backgroundConfiguration.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x80))();
}

uint64_t dispatch thunk of BackgroundViewController.backgroundConfiguration.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x88))();
}

uint64_t dispatch thunk of BackgroundViewController.backgroundConfiguration.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x90))();
}

uint64_t dispatch thunk of BackgroundViewController.wakeProgress.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xC8))();
}

uint64_t dispatch thunk of BackgroundViewController.wakeProgress.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xD0))();
}

uint64_t dispatch thunk of BackgroundViewController.wakeProgress.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xD8))();
}

uint64_t dispatch thunk of BackgroundViewController.unlockProgress.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xE0))();
}

uint64_t dispatch thunk of BackgroundViewController.unlockProgress.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xE8))();
}

uint64_t dispatch thunk of BackgroundViewController.unlockProgress.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xF0))();
}

uint64_t dispatch thunk of BackgroundViewController.updateWithCurrentConfiguration()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xF8))();
}

void sub_1DD2F8468()
{
  char *v0;
  id v1;
  void *v2;
  id v3;
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;
  void *v10;
  id v11;
  void *v12;
  id v13;
  void *v14;
  void *v15;
  id v16;
  void *v17;
  id v18;
  objc_super v19;

  v19.receiver = v0;
  v19.super_class = (Class)type metadata accessor for EmojiGreyscaleReplicatorViewController();
  objc_msgSendSuper2(&v19, sel_viewDidLoad);
  v1 = objc_msgSend(v0, sel_view);
  if (!v1)
  {
    __break(1u);
    goto LABEL_6;
  }
  v2 = v1;
  v3 = objc_msgSend((id)objc_opt_self(), sel_clearColor);
  objc_msgSend(v2, sel_setBackgroundColor_, v3);

  v4 = (void *)sub_1DD2F8DC8();
  v5 = *(void **)&v0[OBJC_IVAR____TtC11EmojiPoster38EmojiGreyscaleReplicatorViewController_emojiLayer];
  v6 = objc_msgSend(v4, sel_CGImage);
  objc_msgSend(v5, sel_setContents_, v6);

  objc_msgSend(v4, sel_size);
  objc_msgSend(v5, sel_frame);
  objc_msgSend(v5, sel_setFrame_);
  v7 = *(void **)&v0[OBJC_IVAR____TtC11EmojiPoster38EmojiGreyscaleReplicatorViewController_horizontalReplicatorLayer];
  objc_msgSend(v7, sel_addSublayer_, v5);
  v8 = *(void **)&v0[OBJC_IVAR____TtC11EmojiPoster38EmojiGreyscaleReplicatorViewController_verticalReplicatorLayer];
  objc_msgSend(v8, sel_addSublayer_, v7);
  v9 = objc_msgSend(v0, sel_view);
  if (!v9)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  v10 = v9;
  v11 = objc_msgSend(v9, sel_layer);

  objc_msgSend(v11, sel_addSublayer_, v8);
  v12 = *(void **)&v0[OBJC_IVAR____TtC11EmojiPoster38EmojiGreyscaleReplicatorViewController_secondaryEmojiLayer];
  v13 = objc_msgSend(v4, sel_CGImage);
  objc_msgSend(v12, sel_setContents_, v13);

  objc_msgSend(v4, sel_size);
  objc_msgSend(v12, sel_frame);
  objc_msgSend(v12, sel_setFrame_);
  v14 = *(void **)&v0[OBJC_IVAR____TtC11EmojiPoster38EmojiGreyscaleReplicatorViewController_offsetHorizontalReplicatorLayer];
  objc_msgSend(v14, sel_addSublayer_, v12);
  v15 = *(void **)&v0[OBJC_IVAR____TtC11EmojiPoster38EmojiGreyscaleReplicatorViewController_offsetVerticalReplicatorLayer];
  objc_msgSend(v15, sel_addSublayer_, v14);
  v16 = objc_msgSend(v0, sel_view);
  if (v16)
  {
    v17 = v16;
    v18 = objc_msgSend(v16, sel_layer);

    objc_msgSend(v18, sel_addSublayer_, v15);
    sub_1DD2F8794();

    return;
  }
LABEL_7:
  __break(1u);
}

uint64_t type metadata accessor for EmojiGreyscaleReplicatorViewController()
{
  return objc_opt_self();
}

void sub_1DD2F8794()
{
  char *v0;
  uint64_t v1;
  double v2;
  double v3;
  void *v4;
  void *v5;
  void *v6;
  id v7;
  void *v8;
  double v9;
  double v10;
  double v11;
  uint64_t v12;
  BOOL v13;
  id v14;
  void *v15;
  double v16;
  double v17;
  double v18;
  uint64_t v19;
  id v20;
  void *v21;
  uint64_t v22;
  double v23;
  double v24;
  id v25;
  void *v26;
  double v27;
  double v28;
  double v29;
  double v30;
  double v31;
  CGFloat v32;
  double v33;
  double v34;
  double v35;
  CGFloat v36;
  double v37;
  double v38;
  void *v39;
  CGFloat v40;
  CGFloat v41;
  void *v42;
  double v43;
  CGFloat v44;
  CGFloat v45;
  id v46;
  void *v47;
  double v48;
  double v49;
  double v50;
  double v51;
  double v52;
  double v53;
  id v54;
  void *v55;
  double v56;
  CGFloat v57;
  double v58;
  double v59;
  double v60;
  CGFloat v61;
  double v62;
  double v63;
  double v64;
  CGFloat v65;
  double v66;
  double v67;
  double v68;
  void *v69;
  CGFloat v70;
  CGFloat v71;
  void *v72;
  double v73;
  CGFloat v74;
  CGFloat v75;
  CGFloat v76;
  CGFloat v77;
  double v78;
  id v79;
  double v80;
  CATransform3D v81;
  CGRect v82;
  CGRect v83;
  CGRect v84;
  CGRect v85;
  CGRect v86;
  CGRect v87;
  CGRect v88;
  CGRect v89;

  v1 = OBJC_IVAR____TtC11EmojiPoster38EmojiGreyscaleReplicatorViewController_scale;
  v2 = *(double *)&v0[OBJC_IVAR____TtC11EmojiPoster38EmojiGreyscaleReplicatorViewController_scale];
  v3 = v2 * 100.0;
  v4 = (void *)objc_opt_self();
  objc_msgSend(v4, sel_begin);
  objc_msgSend(v4, sel_setDisableActions_, 1);
  v5 = *(void **)&v0[OBJC_IVAR____TtC11EmojiPoster38EmojiGreyscaleReplicatorViewController_emojiLayer];
  objc_msgSend(v5, sel_frame);
  objc_msgSend(v5, sel_setFrame_);
  v6 = *(void **)&v0[OBJC_IVAR____TtC11EmojiPoster38EmojiGreyscaleReplicatorViewController_secondaryEmojiLayer];
  objc_msgSend(v6, sel_frame);
  objc_msgSend(v6, sel_setFrame_);
  v7 = objc_msgSend(v0, sel_view);
  if (!v7)
    goto LABEL_30;
  v8 = v7;
  objc_msgSend(v7, sel_bounds);
  v10 = v9;

  v11 = ceil(v10 / v3);
  if ((~*(_QWORD *)&v11 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_22;
  }
  if (v11 <= -9.22337204e18)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  if (v11 >= 9.22337204e18)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v12 = (uint64_t)v11 + 1;
  if (__OFADD__((uint64_t)v11, 1))
  {
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  if ((v12 & 1) == 0)
  {
    v13 = __OFADD__(v12, 1);
    v12 = (uint64_t)v11 + 2;
    if (v13)
      goto LABEL_29;
  }
  v14 = objc_msgSend(v0, sel_view);
  if (!v14)
  {
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  v15 = v14;
  objc_msgSend(v14, sel_bounds);
  v17 = v16;

  v18 = ceil(v17 / v3);
  if ((~*(_QWORD *)&v18 & 0x7FF0000000000000) == 0)
    goto LABEL_25;
  if (v18 <= -9.22337204e18)
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  if (v18 >= 9.22337204e18)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  v19 = (uint64_t)v18 + 1;
  if (__OFADD__((uint64_t)v18, 1))
  {
LABEL_28:
    __break(1u);
LABEL_29:
    __break(1u);
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  v20 = objc_msgSend(v0, sel_view);
  if (!v20)
  {
LABEL_32:
    __break(1u);
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  v21 = v20;
  v79 = v4;
  if (v12 >= 0)
    v22 = v12;
  else
    v22 = v12 + 1;
  objc_msgSend(v20, sel_bounds);
  v24 = v23;

  v25 = objc_msgSend(v0, sel_view);
  if (!v25)
    goto LABEL_33;
  v26 = v25;
  v27 = v2 * 0.2 + 1.65;
  v80 = v3 * v27;
  v28 = v24 * 0.5 - (v3 * (double)((v22 >> 1) + 1) - v3 * 0.5 + (v3 * v27 - v3) * ((double)((v22 >> 1) + 1) + -1.0));
  objc_msgSend(v25, sel_bounds);
  v30 = v29;
  v32 = v31;
  v34 = v33;
  v36 = v35;

  v37 = *(double *)&v0[v1];
  v78 = v28;
  v38 = v28 - (v37 + v37) / 0.098;
  v82.origin.x = v30 + v38;
  v82.size.width = v34 - v38;
  v39 = *(void **)&v0[OBJC_IVAR____TtC11EmojiPoster38EmojiGreyscaleReplicatorViewController_verticalReplicatorLayer];
  v40 = v37 / 0.098;
  v41 = v37 / 0.049;
  v82.origin.y = v32;
  v82.size.height = v36;
  v83 = CGRectInset(v82, v40, v41);
  objc_msgSend(v39, sel_setFrame_, v83.origin.x, v83.origin.y, v83.size.width, v83.size.height);
  v42 = *(void **)&v0[OBJC_IVAR____TtC11EmojiPoster38EmojiGreyscaleReplicatorViewController_horizontalReplicatorLayer];
  v84.size.width = v3 * (v27 * ((double)v12 + -1.0) + (double)v12);
  v43 = *(double *)&v0[v1];
  v44 = v43 / 0.098;
  v45 = v43 / 0.049;
  v84.origin.x = 0.0;
  v84.origin.y = 0.0;
  v84.size.height = v3;
  v85 = CGRectInset(v84, v44, v45);
  objc_msgSend(v42, sel_setFrame_, v85.origin.x, v85.origin.y, v85.size.width, v85.size.height);
  objc_msgSend(v42, sel_setInstanceCount_, v12);
  CATransform3DMakeTranslation(&v81, v3 * v27, 0.0, 0.0);
  objc_msgSend(v42, sel_setInstanceTransform_, &v81);
  objc_msgSend(v39, sel_setInstanceCount_, v19);
  CATransform3DMakeTranslation(&v81, 0.0, v3 * v27, 0.0);
  objc_msgSend(v39, sel_setInstanceTransform_, &v81);
  v46 = objc_msgSend(v0, sel_view);
  if (!v46)
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  v47 = v46;
  objc_msgSend(v46, sel_bounds);
  v76 = v49;
  v77 = v48;
  v51 = v50;
  v53 = v52;

  v54 = objc_msgSend(v0, sel_view);
  if (v54)
  {
    v55 = v54;
    v56 = v3 * (v27 * 0.5);
    v57 = v53 - v56;
    objc_msgSend(v54, sel_bounds);
    v59 = v58;
    v61 = v60;
    v63 = v62;
    v65 = v64;

    v66 = *(double *)&v0[v1];
    v67 = v78 - (v66 + v66) / 0.098;
    v68 = v63 - v67;
    v86.origin.x = v59 + v67 - v56;
    v86.size.width = v56 + v68;
    v69 = *(void **)&v0[OBJC_IVAR____TtC11EmojiPoster38EmojiGreyscaleReplicatorViewController_offsetHorizontalReplicatorLayer];
    v70 = v66 / 0.098;
    v71 = v66 / 0.049;
    v86.origin.y = v61;
    v86.size.height = v65;
    v87 = CGRectInset(v86, v70, v71);
    objc_msgSend(v69, sel_setFrame_, v87.origin.x, v87.origin.y, v87.size.width, v87.size.height);
    v72 = *(void **)&v0[OBJC_IVAR____TtC11EmojiPoster38EmojiGreyscaleReplicatorViewController_offsetVerticalReplicatorLayer];
    v73 = *(double *)&v0[v1];
    v74 = v73 / 0.098;
    v75 = v73 / 0.049;
    v88.size.width = v76;
    v88.origin.x = v77;
    v88.origin.y = v56 + v51;
    v88.size.height = v57;
    v89 = CGRectInset(v88, v74, v75);
    objc_msgSend(v72, sel_setFrame_, v89.origin.x, v89.origin.y, v89.size.width, v89.size.height);
    objc_msgSend(v69, sel_setInstanceCount_, v12);
    CATransform3DMakeTranslation(&v81, v80, 0.0, 0.0);
    objc_msgSend(v69, sel_setInstanceTransform_, &v81);
    objc_msgSend(v72, sel_setInstanceCount_, v19);
    CATransform3DMakeTranslation(&v81, 0.0, v80, 0.0);
    objc_msgSend(v72, sel_setInstanceTransform_, &v81);
    objc_msgSend(v79, sel_commit);
    return;
  }
LABEL_35:
  __break(1u);
}

uint64_t sub_1DD2F8DC8()
{
  void *v0;
  id v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  id v6;
  id v7;
  char isEscapingClosureAtFileLocation;
  uint64_t result;
  void *v10;
  id v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  id v16;
  id v17;
  id v18;
  id v19;
  char v20;
  uint64_t aBlock;
  uint64_t v22;
  void (*v23)(uint64_t, void *);
  void *v24;
  uint64_t (*v25)(uint64_t);
  uint64_t v26;

  v1 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3830]), sel_init);
  objc_msgSend(v1, sel_setOpaque_, 0);
  v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3828]), sel_initWithSize_format_, v1, 100.0, 100.0);
  v3 = swift_allocObject();
  *(_QWORD *)(v3 + 16) = v0;
  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = sub_1DD2F9A34;
  *(_QWORD *)(v4 + 24) = v3;
  v25 = sub_1DD2C6594;
  v26 = v4;
  aBlock = MEMORY[0x1E0C809B0];
  v22 = 1107296256;
  v23 = sub_1DD2CB738;
  v24 = &block_descriptor_12;
  v5 = _Block_copy(&aBlock);
  v6 = v0;
  swift_retain();
  swift_release();
  v7 = objc_msgSend(v2, sel_imageWithActions_, v5);
  _Block_release(v5);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  result = swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    v10 = v2;
    v11 = objc_msgSend((id)objc_opt_self(), sel_grayColor);
    v12 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3828]), sel_initWithSize_format_, v1, 100.0, 100.0);
    v13 = swift_allocObject();
    *(_QWORD *)(v13 + 24) = 0;
    *(_QWORD *)(v13 + 32) = 0;
    *(_QWORD *)(v13 + 16) = v6;
    *(int64x2_t *)(v13 + 40) = vdupq_n_s64(0x4059000000000000uLL);
    *(_QWORD *)(v13 + 56) = v7;
    *(_QWORD *)(v13 + 64) = v11;
    v14 = swift_allocObject();
    *(_QWORD *)(v14 + 16) = sub_1DD2F9A98;
    *(_QWORD *)(v14 + 24) = v13;
    v25 = sub_1DD2EC194;
    v26 = v14;
    aBlock = MEMORY[0x1E0C809B0];
    v22 = 1107296256;
    v23 = sub_1DD2CB738;
    v24 = &block_descriptor_13_1;
    v15 = _Block_copy(&aBlock);
    v16 = v6;
    v17 = v7;
    v18 = v11;
    swift_retain();
    swift_release();
    v19 = objc_msgSend(v12, sel_imageWithActions_, v15);

    _Block_release(v15);
    v20 = swift_isEscapingClosureAtFileLocation();
    swift_release();
    swift_release();
    result = swift_release();
    if ((v20 & 1) == 0)
      return (uint64_t)v19;
  }
  __break(1u);
  return result;
}

void sub_1DD2F90EC()
{
  uint64_t inited;
  void *v1;
  void *v2;
  id v3;
  id v4;
  id v5;
  void *v6;
  void *v7;
  id v8;
  double v9;
  double v10;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDB615F0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1DD2FDFC0;
  v1 = (void *)*MEMORY[0x1E0DC1138];
  *(_QWORD *)(inited + 32) = *MEMORY[0x1E0DC1138];
  v2 = (void *)objc_opt_self();
  swift_bridgeObjectRetain();
  v3 = v1;
  v4 = objc_msgSend(v2, sel_systemFontOfSize_, 100.0);
  *(_QWORD *)(inited + 64) = sub_1DD2CB820();
  *(_QWORD *)(inited + 40) = v4;
  sub_1DD2DEA78(inited);
  v5 = objc_allocWithZone(MEMORY[0x1E0CB3498]);
  v6 = (void *)sub_1DD2F9DB4();
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  sub_1DD2CB85C();
  v7 = (void *)sub_1DD2F9D78();
  swift_bridgeObjectRelease();
  v8 = objc_msgSend(v5, sel_initWithString_attributes_, v6, v7);

  objc_msgSend(v8, sel_size);
  objc_msgSend(v8, sel_drawInRect_, 50.0 - v9 * 0.5, 50.0 - v10 * 0.5, v9);

}

void sub_1DD2F9288(void *a1, CGFloat a2, CGFloat a3, CGFloat a4, CGFloat a5, uint64_t a6, void *a7, void *a8)
{
  CGImage *v14;
  CGImage *v15;
  CGContext *c;
  CGRect v17;
  CGRect v18;

  c = (CGContext *)objc_msgSend(a1, sel_CGContext);
  CGContextTranslateCTM(c, 0.0, 100.0);
  CGContextScaleCTM(c, 1.0, -1.0);
  v14 = (CGImage *)objc_msgSend(a7, sel_CGImage);
  if (v14)
  {
    v15 = v14;
    v17.origin.x = a2;
    v17.origin.y = a3;
    v17.size.width = a4;
    v17.size.height = a5;
    CGContextClipToMask(c, v17, v14);

    objc_msgSend(a8, sel_setFill);
    v18.origin.x = a2;
    v18.origin.y = a3;
    v18.size.width = a4;
    v18.size.height = a5;
    CGContextFillRect(c, v18);
    CGContextTranslateCTM(c, 0.0, -100.0);
    CGContextScaleCTM(c, 1.0, -1.0);

  }
  else
  {
    __break(1u);
  }
}

void sub_1DD2F939C(void *a1)
{
  uint64_t v1;
  uint64_t v3;

  switch((unint64_t)objc_msgSend(a1, sel_state))
  {
    case 1uLL:
    case 2uLL:
      objc_msgSend(a1, sel_scale);
      *(_QWORD *)(v1 + OBJC_IVAR____TtC11EmojiPoster38EmojiGreyscaleReplicatorViewController_scale) = v3;
      sub_1DD2F8794();
      break;
    default:
      *(_QWORD *)(v1 + OBJC_IVAR____TtC11EmojiPoster38EmojiGreyscaleReplicatorViewController_scaleDelta) = 0x3FF0000000000000;
      break;
  }
}

void sub_1DD2F9474(double a1)
{
  uint64_t v1;

  *(double *)(v1 + OBJC_IVAR____TtC11EmojiPoster38EmojiGreyscaleReplicatorViewController_scale) = a1;
  sub_1DD2F8794();
}

id EmojiGreyscaleReplicatorViewController.__allocating_init(nibName:bundle:)(uint64_t a1, uint64_t a2, void *a3)
{
  objc_class *v3;
  objc_class *v4;
  void *v6;
  id v7;

  v4 = v3;
  if (a2)
  {
    v6 = (void *)sub_1DD2F9DB4();
    swift_bridgeObjectRelease();
  }
  else
  {
    v6 = 0;
  }
  v7 = objc_msgSend(objc_allocWithZone(v4), sel_initWithNibName_bundle_, v6, a3);

  return v7;
}

id EmojiGreyscaleReplicatorViewController.init(nibName:bundle:)(uint64_t a1, uint64_t a2, void *a3)
{
  char *v3;
  char *v6;
  uint64_t v7;
  id v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  id v16;
  objc_super v18;

  v6 = &v3[OBJC_IVAR____TtC11EmojiPoster38EmojiGreyscaleReplicatorViewController_emoji];
  *(_QWORD *)v6 = 3113983984;
  *((_QWORD *)v6 + 1) = 0xA400000000000000;
  *(int64x2_t *)&v3[OBJC_IVAR____TtC11EmojiPoster38EmojiGreyscaleReplicatorViewController_emojiSize] = vdupq_n_s64(0x4059000000000000uLL);
  *(_QWORD *)&v3[OBJC_IVAR____TtC11EmojiPoster38EmojiGreyscaleReplicatorViewController_spacingFactor] = 0x3FFA666666666666;
  *(_QWORD *)&v3[OBJC_IVAR____TtC11EmojiPoster38EmojiGreyscaleReplicatorViewController_scale] = 0x3FEF5C28F5C28F5CLL;
  *(_QWORD *)&v3[OBJC_IVAR____TtC11EmojiPoster38EmojiGreyscaleReplicatorViewController_scaleDelta] = 0x3FF0000000000000;
  v7 = OBJC_IVAR____TtC11EmojiPoster38EmojiGreyscaleReplicatorViewController_emojiLayer;
  v8 = objc_allocWithZone(MEMORY[0x1E0CD27A8]);
  v9 = v3;
  *(_QWORD *)&v3[v7] = objc_msgSend(v8, sel_init);
  v10 = OBJC_IVAR____TtC11EmojiPoster38EmojiGreyscaleReplicatorViewController_secondaryEmojiLayer;
  *(_QWORD *)&v9[v10] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CD27A8]), sel_init);
  v11 = OBJC_IVAR____TtC11EmojiPoster38EmojiGreyscaleReplicatorViewController_horizontalReplicatorLayer;
  *(_QWORD *)&v9[v11] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CD2828]), sel_init);
  v12 = OBJC_IVAR____TtC11EmojiPoster38EmojiGreyscaleReplicatorViewController_offsetHorizontalReplicatorLayer;
  *(_QWORD *)&v9[v12] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CD2828]), sel_init);
  v13 = OBJC_IVAR____TtC11EmojiPoster38EmojiGreyscaleReplicatorViewController_verticalReplicatorLayer;
  *(_QWORD *)&v9[v13] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CD2828]), sel_init);
  v14 = OBJC_IVAR____TtC11EmojiPoster38EmojiGreyscaleReplicatorViewController_offsetVerticalReplicatorLayer;
  *(_QWORD *)&v9[v14] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CD2828]), sel_init);

  if (a2)
  {
    v15 = (void *)sub_1DD2F9DB4();
    swift_bridgeObjectRelease();
  }
  else
  {
    v15 = 0;
  }
  v18.receiver = v9;
  v18.super_class = (Class)type metadata accessor for EmojiGreyscaleReplicatorViewController();
  v16 = objc_msgSendSuper2(&v18, sel_initWithNibName_bundle_, v15, a3);

  return v16;
}

id EmojiGreyscaleReplicatorViewController.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

id EmojiGreyscaleReplicatorViewController.init(coder:)(void *a1)
{
  char *v1;
  char *v3;
  uint64_t v4;
  id v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  objc_super v14;

  v3 = &v1[OBJC_IVAR____TtC11EmojiPoster38EmojiGreyscaleReplicatorViewController_emoji];
  *(_QWORD *)v3 = 3113983984;
  *((_QWORD *)v3 + 1) = 0xA400000000000000;
  *(int64x2_t *)&v1[OBJC_IVAR____TtC11EmojiPoster38EmojiGreyscaleReplicatorViewController_emojiSize] = vdupq_n_s64(0x4059000000000000uLL);
  *(_QWORD *)&v1[OBJC_IVAR____TtC11EmojiPoster38EmojiGreyscaleReplicatorViewController_spacingFactor] = 0x3FFA666666666666;
  *(_QWORD *)&v1[OBJC_IVAR____TtC11EmojiPoster38EmojiGreyscaleReplicatorViewController_scale] = 0x3FEF5C28F5C28F5CLL;
  *(_QWORD *)&v1[OBJC_IVAR____TtC11EmojiPoster38EmojiGreyscaleReplicatorViewController_scaleDelta] = 0x3FF0000000000000;
  v4 = OBJC_IVAR____TtC11EmojiPoster38EmojiGreyscaleReplicatorViewController_emojiLayer;
  v5 = objc_allocWithZone(MEMORY[0x1E0CD27A8]);
  v6 = v1;
  *(_QWORD *)&v1[v4] = objc_msgSend(v5, sel_init);
  v7 = OBJC_IVAR____TtC11EmojiPoster38EmojiGreyscaleReplicatorViewController_secondaryEmojiLayer;
  *(_QWORD *)&v6[v7] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CD27A8]), sel_init);
  v8 = OBJC_IVAR____TtC11EmojiPoster38EmojiGreyscaleReplicatorViewController_horizontalReplicatorLayer;
  *(_QWORD *)&v6[v8] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CD2828]), sel_init);
  v9 = OBJC_IVAR____TtC11EmojiPoster38EmojiGreyscaleReplicatorViewController_offsetHorizontalReplicatorLayer;
  *(_QWORD *)&v6[v9] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CD2828]), sel_init);
  v10 = OBJC_IVAR____TtC11EmojiPoster38EmojiGreyscaleReplicatorViewController_verticalReplicatorLayer;
  *(_QWORD *)&v6[v10] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CD2828]), sel_init);
  v11 = OBJC_IVAR____TtC11EmojiPoster38EmojiGreyscaleReplicatorViewController_offsetVerticalReplicatorLayer;
  *(_QWORD *)&v6[v11] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CD2828]), sel_init);

  v14.receiver = v6;
  v14.super_class = (Class)type metadata accessor for EmojiGreyscaleReplicatorViewController();
  v12 = objc_msgSendSuper2(&v14, sel_initWithCoder_, a1);

  return v12;
}

id EmojiGreyscaleReplicatorViewController.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for EmojiGreyscaleReplicatorViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t method lookup function for EmojiGreyscaleReplicatorViewController()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of EmojiGreyscaleReplicatorViewController.updateScale(with:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xF0))();
}

uint64_t sub_1DD2F9A10()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_1DD2F9A34()
{
  sub_1DD2F90EC();
}

uint64_t sub_1DD2F9A3C()
{
  return swift_deallocObject();
}

uint64_t block_copy_helper_12(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_12()
{
  return swift_release();
}

uint64_t sub_1DD2F9A64()
{
  id *v0;

  return swift_deallocObject();
}

void sub_1DD2F9A98(void *a1)
{
  uint64_t v1;

  sub_1DD2F9288(a1, *(CGFloat *)(v1 + 24), *(CGFloat *)(v1 + 32), *(CGFloat *)(v1 + 40), *(CGFloat *)(v1 + 48), *(_QWORD *)(v1 + 16), *(void **)(v1 + 56), *(void **)(v1 + 64));
}

uint64_t sub_1DD2F9AAC()
{
  return swift_deallocObject();
}

double sub_1DD2F9AC4(uint64_t a1)
{
  uint64_t v1;

  if (a1 < 1)
    return 0.0;
  else
    return dbl_1DD2FF830[*(char *)(v1 + 16)]
         / dbl_1DD2FF850[*(char *)(v1 + 16)]
         * (*(double *)(v1 + 24)
          / dbl_1DD2FF870[*(char *)(v1 + 16)])
         * (double)a1;
}

uint64_t sub_1DD2F9B1C()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for CircularLayoutProvider()
{
  return objc_opt_self();
}

uint64_t dispatch thunk of EmojiScene.emoji.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of EmojiScene.emoji.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of EmojiScene.emoji.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of EmojiScene.sizeVariant.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of EmojiScene.sizeVariant.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

uint64_t dispatch thunk of EmojiScene.sizeVariant.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 48))();
}

uint64_t dispatch thunk of EmojiScene.wakeProgress.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t dispatch thunk of EmojiScene.wakeProgress.setter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 64))();
}

uint64_t dispatch thunk of EmojiScene.wakeProgress.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 72))();
}

uint64_t dispatch thunk of EmojiScene.unlockProgress.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 80))();
}

uint64_t dispatch thunk of EmojiScene.unlockProgress.setter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 88))();
}

uint64_t dispatch thunk of EmojiScene.unlockProgress.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 96))();
}

uint64_t dispatch thunk of EmojiScene.updateForEmoji()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 104))();
}

uint64_t type metadata accessor for ResourceBundleClass()
{
  return objc_opt_self();
}

uint64_t sub_1DD2F9BD4()
{
  return MEMORY[0x1E0CAE070]();
}

uint64_t sub_1DD2F9BE0()
{
  return MEMORY[0x1E0CAE0A8]();
}

uint64_t sub_1DD2F9BEC()
{
  return MEMORY[0x1E0CAE0B8]();
}

uint64_t sub_1DD2F9BF8()
{
  return MEMORY[0x1E0CAE390]();
}

uint64_t sub_1DD2F9C04()
{
  return MEMORY[0x1E0CAE488]();
}

uint64_t sub_1DD2F9C10()
{
  return MEMORY[0x1E0CAE490]();
}

uint64_t sub_1DD2F9C1C()
{
  return MEMORY[0x1E0CAE498]();
}

uint64_t sub_1DD2F9C28()
{
  return MEMORY[0x1E0CAE4B8]();
}

uint64_t sub_1DD2F9C34()
{
  return MEMORY[0x1E0CAF328]();
}

uint64_t sub_1DD2F9C40()
{
  return MEMORY[0x1E0CAF990]();
}

uint64_t sub_1DD2F9C4C()
{
  return MEMORY[0x1E0CAFF00]();
}

uint64_t sub_1DD2F9C58()
{
  return MEMORY[0x1E0CAFFF8]();
}

uint64_t sub_1DD2F9C64()
{
  return MEMORY[0x1E0CB01F0]();
}

uint64_t sub_1DD2F9C70()
{
  return MEMORY[0x1E0CB0228]();
}

uint64_t sub_1DD2F9C7C()
{
  return MEMORY[0x1E0CB15E8]();
}

uint64_t sub_1DD2F9C88()
{
  return MEMORY[0x1E0CB1608]();
}

uint64_t sub_1DD2F9C94()
{
  return MEMORY[0x1E0DC1A38]();
}

uint64_t sub_1DD2F9CA0()
{
  return MEMORY[0x1E0DC1A48]();
}

uint64_t sub_1DD2F9CAC()
{
  return MEMORY[0x1E0DC1A58]();
}

uint64_t sub_1DD2F9CB8()
{
  return MEMORY[0x1E0CB1658]();
}

uint64_t sub_1DD2F9CC4()
{
  return MEMORY[0x1E0DEFCA8]();
}

uint64_t sub_1DD2F9CD0()
{
  return MEMORY[0x1E0DF2240]();
}

uint64_t sub_1DD2F9CDC()
{
  return MEMORY[0x1E0DF2248]();
}

uint64_t sub_1DD2F9CE8()
{
  return MEMORY[0x1E0DF2258]();
}

uint64_t sub_1DD2F9CF4()
{
  return MEMORY[0x1E0DC23E0]();
}

uint64_t sub_1DD2F9D00()
{
  return MEMORY[0x1E0DC2430]();
}

uint64_t sub_1DD2F9D0C()
{
  return MEMORY[0x1E0DC24D0]();
}

uint64_t sub_1DD2F9D18()
{
  return MEMORY[0x1E0DC2728]();
}

uint64_t sub_1DD2F9D24()
{
  return MEMORY[0x1E0DC2740]();
}

uint64_t sub_1DD2F9D30()
{
  return MEMORY[0x1E0DEF4F8]();
}

uint64_t sub_1DD2F9D3C()
{
  return MEMORY[0x1E0DEF578]();
}

uint64_t sub_1DD2F9D48()
{
  return MEMORY[0x1E0DEF5B0]();
}

uint64_t sub_1DD2F9D54()
{
  return MEMORY[0x1E0DEF698]();
}

uint64_t sub_1DD2F9D60()
{
  return MEMORY[0x1E0DEF6B8]();
}

uint64_t sub_1DD2F9D6C()
{
  return MEMORY[0x1E0DEF758]();
}

uint64_t sub_1DD2F9D78()
{
  return MEMORY[0x1E0CB17D8]();
}

uint64_t sub_1DD2F9D84()
{
  return MEMORY[0x1E0DEA1C0]();
}

uint64_t sub_1DD2F9D90()
{
  return MEMORY[0x1E0DEA3B0]();
}

uint64_t sub_1DD2F9D9C()
{
  return MEMORY[0x1E0DEA568]();
}

uint64_t sub_1DD2F9DA8()
{
  return MEMORY[0x1E0CB1840]();
}

uint64_t sub_1DD2F9DB4()
{
  return MEMORY[0x1E0CB1940]();
}

uint64_t sub_1DD2F9DC0()
{
  return MEMORY[0x1E0CB1950]();
}

uint64_t sub_1DD2F9DCC()
{
  return MEMORY[0x1E0CB1960]();
}

uint64_t sub_1DD2F9DD8()
{
  return MEMORY[0x1E0CB1970]();
}

uint64_t sub_1DD2F9DE4()
{
  return MEMORY[0x1E0CB1980]();
}

uint64_t sub_1DD2F9DF0()
{
  return MEMORY[0x1E0CB19C0]();
}

uint64_t sub_1DD2F9DFC()
{
  return MEMORY[0x1E0CB19E8]();
}

uint64_t sub_1DD2F9E08()
{
  return MEMORY[0x1E0CB1A18]();
}

uint64_t sub_1DD2F9E14()
{
  return MEMORY[0x1E0CB1A58]();
}

uint64_t sub_1DD2F9E20()
{
  return MEMORY[0x1E0DEA658]();
}

uint64_t sub_1DD2F9E2C()
{
  return MEMORY[0x1E0DEA6C0]();
}

uint64_t sub_1DD2F9E38()
{
  return MEMORY[0x1E0DEA6F8]();
}

uint64_t sub_1DD2F9E44()
{
  return MEMORY[0x1E0DEA758]();
}

uint64_t sub_1DD2F9E50()
{
  return MEMORY[0x1E0DEA7B8]();
}

uint64_t sub_1DD2F9E5C()
{
  return MEMORY[0x1E0DEA7C0]();
}

uint64_t sub_1DD2F9E68()
{
  return MEMORY[0x1E0DEA7D0]();
}

uint64_t sub_1DD2F9E74()
{
  return MEMORY[0x1E0DEA800]();
}

uint64_t sub_1DD2F9E80()
{
  return MEMORY[0x1E0DEA840]();
}

uint64_t sub_1DD2F9E8C()
{
  return MEMORY[0x1E0DEA850]();
}

uint64_t sub_1DD2F9E98()
{
  return MEMORY[0x1E0DEAA08]();
}

uint64_t sub_1DD2F9EA4()
{
  return MEMORY[0x1E0DEAA40]();
}

uint64_t sub_1DD2F9EB0()
{
  return MEMORY[0x1E0DEAA50]();
}

uint64_t sub_1DD2F9EBC()
{
  return MEMORY[0x1E0DEADA0]();
}

uint64_t sub_1DD2F9EC8()
{
  return MEMORY[0x1E0CB1AC0]();
}

uint64_t sub_1DD2F9ED4()
{
  return MEMORY[0x1E0CB1AD0]();
}

uint64_t sub_1DD2F9EE0()
{
  return MEMORY[0x1E0CB1AE8]();
}

uint64_t sub_1DD2F9EEC()
{
  return MEMORY[0x1E0DEADB0]();
}

uint64_t sub_1DD2F9EF8()
{
  return MEMORY[0x1E0DEADB8]();
}

uint64_t sub_1DD2F9F04()
{
  return MEMORY[0x1E0DEADE8]();
}

uint64_t sub_1DD2F9F10()
{
  return MEMORY[0x1E0DEAE58]();
}

uint64_t sub_1DD2F9F1C()
{
  return MEMORY[0x1E0DEB030]();
}

uint64_t sub_1DD2F9F28()
{
  return MEMORY[0x1E0DEB258]();
}

uint64_t sub_1DD2F9F34()
{
  return MEMORY[0x1E0DF2270]();
}

uint64_t sub_1DD2F9F40()
{
  return MEMORY[0x1E0DF2278]();
}

uint64_t sub_1DD2F9F4C()
{
  return MEMORY[0x1E0DF2280]();
}

uint64_t sub_1DD2F9F58()
{
  return MEMORY[0x1E0DF2290]();
}

uint64_t sub_1DD2F9F64()
{
  return MEMORY[0x1E0DC2B48]();
}

uint64_t sub_1DD2F9F70()
{
  return MEMORY[0x1E0DC2B78]();
}

uint64_t sub_1DD2F9F7C()
{
  return MEMORY[0x1E0DEF840]();
}

uint64_t sub_1DD2F9F88()
{
  return MEMORY[0x1E0DEF8E8]();
}

uint64_t sub_1DD2F9F94()
{
  return MEMORY[0x1E0DEF900]();
}

uint64_t sub_1DD2F9FA0()
{
  return MEMORY[0x1E0DEFCE0]();
}

uint64_t sub_1DD2F9FAC()
{
  return MEMORY[0x1E0DC2FF8]();
}

uint64_t sub_1DD2F9FB8()
{
  return MEMORY[0x1E0DEBB48]();
}

uint64_t sub_1DD2F9FC4()
{
  return MEMORY[0x1E0DEBC20]();
}

uint64_t sub_1DD2F9FD0()
{
  return MEMORY[0x1E0DEBC90]();
}

uint64_t sub_1DD2F9FDC()
{
  return MEMORY[0x1E0CB2480]();
}

uint64_t sub_1DD2F9FE8()
{
  return MEMORY[0x1E0DEBE50]();
}

uint64_t sub_1DD2F9FF4()
{
  return MEMORY[0x1E0DEC060]();
}

uint64_t sub_1DD2FA000()
{
  return MEMORY[0x1E0DEC248]();
}

uint64_t sub_1DD2FA00C()
{
  return MEMORY[0x1E0DEC250]();
}

uint64_t sub_1DD2FA018()
{
  return MEMORY[0x1E0DEC2A0]();
}

uint64_t sub_1DD2FA024()
{
  return MEMORY[0x1E0DEC2A8]();
}

uint64_t sub_1DD2FA030()
{
  return MEMORY[0x1E0DEC2B0]();
}

uint64_t sub_1DD2FA03C()
{
  return MEMORY[0x1E0DEC3D0]();
}

uint64_t sub_1DD2FA048()
{
  return MEMORY[0x1E0DEC3E0]();
}

uint64_t sub_1DD2FA054()
{
  return MEMORY[0x1E0DEC3E8]();
}

uint64_t sub_1DD2FA060()
{
  return MEMORY[0x1E0DEC470]();
}

uint64_t sub_1DD2FA06C()
{
  return MEMORY[0x1E0DEC498]();
}

uint64_t sub_1DD2FA078()
{
  return MEMORY[0x1E0DEC588]();
}

uint64_t sub_1DD2FA084()
{
  return MEMORY[0x1E0DEC590]();
}

uint64_t sub_1DD2FA090()
{
  return MEMORY[0x1E0DEC660]();
}

uint64_t sub_1DD2FA09C()
{
  return MEMORY[0x1E0DEC670]();
}

uint64_t sub_1DD2FA0A8()
{
  return MEMORY[0x1E0DEC688]();
}

uint64_t sub_1DD2FA0B4()
{
  return MEMORY[0x1E0DEC6C0]();
}

uint64_t sub_1DD2FA0C0()
{
  return MEMORY[0x1E0DEC6C8]();
}

uint64_t sub_1DD2FA0CC()
{
  return MEMORY[0x1E0DEC8E0]();
}

uint64_t sub_1DD2FA0D8()
{
  return MEMORY[0x1E0DECBE0]();
}

uint64_t sub_1DD2FA0E4()
{
  return MEMORY[0x1E0DECBE8]();
}

uint64_t sub_1DD2FA0F0()
{
  return MEMORY[0x1E0DECD18]();
}

uint64_t sub_1DD2FA0FC()
{
  return MEMORY[0x1E0DECD20]();
}

uint64_t sub_1DD2FA108()
{
  return MEMORY[0x1E0DECD38]();
}

uint64_t sub_1DD2FA114()
{
  return MEMORY[0x1E0DECD40]();
}

uint64_t sub_1DD2FA120()
{
  return MEMORY[0x1E0DECD50]();
}

uint64_t sub_1DD2FA12C()
{
  return MEMORY[0x1E0DECD70]();
}

uint64_t sub_1DD2FA138()
{
  return MEMORY[0x1E0DECE70]();
}

uint64_t sub_1DD2FA144()
{
  return MEMORY[0x1E0DECF38]();
}

uint64_t sub_1DD2FA150()
{
  return MEMORY[0x1E0DECF40]();
}

uint64_t sub_1DD2FA15C()
{
  return MEMORY[0x1E0DECF58]();
}

uint64_t sub_1DD2FA168()
{
  return MEMORY[0x1E0DECF88]();
}

uint64_t sub_1DD2FA174()
{
  return MEMORY[0x1E0DECFC8]();
}

uint64_t sub_1DD2FA180()
{
  return MEMORY[0x1E0DECFD0]();
}

uint64_t sub_1DD2FA18C()
{
  return MEMORY[0x1E0DECFE0]();
}

uint64_t sub_1DD2FA198()
{
  return MEMORY[0x1E0DECFF0]();
}

uint64_t sub_1DD2FA1A4()
{
  return MEMORY[0x1E0DED038]();
}

uint64_t sub_1DD2FA1B0()
{
  return MEMORY[0x1E0DED070]();
}

uint64_t sub_1DD2FA1BC()
{
  return MEMORY[0x1E0DED090]();
}

uint64_t sub_1DD2FA1C8()
{
  return MEMORY[0x1E0DED0C0]();
}

uint64_t sub_1DD2FA1D4()
{
  return MEMORY[0x1E0DED0F8]();
}

uint64_t sub_1DD2FA1E0()
{
  return MEMORY[0x1E0DED100]();
}

uint64_t sub_1DD2FA1EC()
{
  return MEMORY[0x1E0DED110]();
}

uint64_t sub_1DD2FA1F8()
{
  return MEMORY[0x1E0DED120]();
}

uint64_t sub_1DD2FA204()
{
  return MEMORY[0x1E0DED1D0]();
}

uint64_t sub_1DD2FA210()
{
  return MEMORY[0x1E0DED600]();
}

uint64_t sub_1DD2FA21C()
{
  return MEMORY[0x1E0DED658]();
}

uint64_t sub_1DD2FA228()
{
  return MEMORY[0x1E0DED6F8]();
}

uint64_t sub_1DD2FA234()
{
  return MEMORY[0x1E0DED770]();
}

uint64_t sub_1DD2FA240()
{
  return MEMORY[0x1E0DEDAE0]();
}

uint64_t sub_1DD2FA24C()
{
  return MEMORY[0x1E0DEDAE8]();
}

uint64_t sub_1DD2FA258()
{
  return MEMORY[0x1E0DEDED8]();
}

uint64_t sub_1DD2FA264()
{
  return MEMORY[0x1E0DEDEF0]();
}

uint64_t sub_1DD2FA270()
{
  return MEMORY[0x1E0DEDEF8]();
}

uint64_t sub_1DD2FA27C()
{
  return MEMORY[0x1E0DEDF10]();
}

uint64_t sub_1DD2FA288()
{
  return MEMORY[0x1E0DEDF30]();
}

uint64_t sub_1DD2FA294()
{
  return MEMORY[0x1E0DEDF40]();
}

uint64_t sub_1DD2FA2A0()
{
  return MEMORY[0x1E0DEE230]();
}

uint64_t sub_1DD2FA2AC()
{
  return MEMORY[0x1E0DEE240]();
}

uint64_t sub_1DD2FA2B8()
{
  return MEMORY[0x1E0DEE260]();
}

uint64_t sub_1DD2FA2C4()
{
  return MEMORY[0x1E0DEE270]();
}

uint64_t sub_1DD2FA2D0()
{
  return MEMORY[0x1E0DEE710]();
}

uint64_t sub_1DD2FA2DC()
{
  return MEMORY[0x1E0DEE8E0]();
}

uint64_t sub_1DD2FA2E8()
{
  return MEMORY[0x1E0DEE8E8]();
}

CATransform3D *__cdecl CATransform3DMakeTranslation(CATransform3D *__return_ptr retstr, CGFloat tx, CGFloat ty, CGFloat tz)
{
  return (CATransform3D *)MEMORY[0x1E0CD2648](retstr, tx, ty, tz);
}

uint64_t CEMEmojiTokenGetString()
{
  return MEMORY[0x1E0D15D90]();
}

uint64_t CEMEnumerateEmojiTokensInStringWithBlock()
{
  return MEMORY[0x1E0D15DA8]();
}

uint64_t CEMStringIsSingleEmoji()
{
  return MEMORY[0x1E0D15DC8]();
}

CFTypeID CFGetTypeID(CFTypeRef cf)
{
  return MEMORY[0x1E0C98738](cf);
}

CFTypeID CFNumberGetTypeID(void)
{
  return MEMORY[0x1E0C989B8]();
}

Boolean CFNumberGetValue(CFNumberRef number, CFNumberType theType, void *valuePtr)
{
  return MEMORY[0x1E0C989C0](number, theType, valuePtr);
}

CFPropertyListRef CFPreferencesCopyAppValue(CFStringRef key, CFStringRef applicationID)
{
  return (CFPropertyListRef)MEMORY[0x1E0C98A40](key, applicationID);
}

void CFRelease(CFTypeRef cf)
{
  MEMORY[0x1E0C98BC0](cf);
}

CGAffineTransform *__cdecl CGAffineTransformConcat(CGAffineTransform *__return_ptr retstr, CGAffineTransform *t1, CGAffineTransform *t2)
{
  return (CGAffineTransform *)MEMORY[0x1E0C9BA90](retstr, t1, t2);
}

CGAffineTransform *__cdecl CGAffineTransformMakeRotation(CGAffineTransform *__return_ptr retstr, CGFloat angle)
{
  return (CGAffineTransform *)MEMORY[0x1E0C9BAD0](retstr, angle);
}

CGContextRef CGBitmapContextCreate(void *data, size_t width, size_t height, size_t bitsPerComponent, size_t bytesPerRow, CGColorSpaceRef space, uint32_t bitmapInfo)
{
  return (CGContextRef)MEMORY[0x1E0C9BB10](data, width, height, bitsPerComponent, bytesPerRow, space, *(_QWORD *)&bitmapInfo);
}

CGBitmapInfo CGBitmapContextGetBitmapInfo(CGContextRef context)
{
  return MEMORY[0x1E0C9BB48](context);
}

size_t CGBitmapContextGetBytesPerRow(CGContextRef context)
{
  return MEMORY[0x1E0C9BB60](context);
}

void *__cdecl CGBitmapContextGetData(CGContextRef context)
{
  return (void *)MEMORY[0x1E0C9BB70](context);
}

size_t CGBitmapContextGetHeight(CGContextRef context)
{
  return MEMORY[0x1E0C9BB78](context);
}

size_t CGBitmapContextGetWidth(CGContextRef context)
{
  return MEMORY[0x1E0C9BB80](context);
}

CGColorRef CGColorCreate(CGColorSpaceRef space, const CGFloat *components)
{
  return (CGColorRef)MEMORY[0x1E0C9BC78](space, components);
}

CGColorRef CGColorCreateCopy(CGColorRef color)
{
  return (CGColorRef)MEMORY[0x1E0C9BC80](color);
}

CGColorRef CGColorCreateCopyWithAlpha(CGColorRef color, CGFloat alpha)
{
  return (CGColorRef)MEMORY[0x1E0C9BC90](color, alpha);
}

BOOL CGColorEqualToColor(CGColorRef color1, CGColorRef color2)
{
  return MEMORY[0x1E0C9BCD8](color1, color2);
}

CGFloat CGColorGetAlpha(CGColorRef color)
{
  CGFloat result;

  MEMORY[0x1E0C9BCF8](color);
  return result;
}

CGColorSpaceRef CGColorGetColorSpace(CGColorRef color)
{
  return (CGColorSpaceRef)MEMORY[0x1E0C9BD00](color);
}

const CGFloat *__cdecl CGColorGetComponents(CGColorRef color)
{
  return (const CGFloat *)MEMORY[0x1E0C9BD08](color);
}

void CGColorRelease(CGColorRef color)
{
  MEMORY[0x1E0C9BD60](color);
}

CGColorSpaceRef CGColorSpaceCreateDeviceGray(void)
{
  return (CGColorSpaceRef)MEMORY[0x1E0C9BDE8]();
}

CGColorSpaceRef CGColorSpaceCreateDeviceRGB(void)
{
  return (CGColorSpaceRef)MEMORY[0x1E0C9BDF0]();
}

CGColorSpaceRef CGColorSpaceCreateICCBased(size_t nComponents, const CGFloat *range, CGDataProviderRef profile, CGColorSpaceRef alternate)
{
  return (CGColorSpaceRef)MEMORY[0x1E0C9BE10](nComponents, range, profile, alternate);
}

CGColorSpaceRef CGColorSpaceCreateLab(const CGFloat *whitePoint, const CGFloat *blackPoint, const CGFloat *range)
{
  return (CGColorSpaceRef)MEMORY[0x1E0C9BE20](whitePoint, blackPoint, range);
}

CGColorSpaceModel CGColorSpaceGetModel(CGColorSpaceRef space)
{
  return MEMORY[0x1E0C9BEC8](space);
}

void CGContextClipToMask(CGContextRef c, CGRect rect, CGImageRef mask)
{
  MEMORY[0x1E0C9C030](c, mask, (__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
}

void CGContextDrawImage(CGContextRef c, CGRect rect, CGImageRef image)
{
  MEMORY[0x1E0C9C170](c, image, (__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
}

void CGContextFillRect(CGContextRef c, CGRect rect)
{
  MEMORY[0x1E0C9C220](c, (__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
}

void CGContextRelease(CGContextRef c)
{
  MEMORY[0x1E0C9C340](c);
}

void CGContextScaleCTM(CGContextRef c, CGFloat sx, CGFloat sy)
{
  MEMORY[0x1E0C9C390](c, sx, sy);
}

void CGContextTranslateCTM(CGContextRef c, CGFloat tx, CGFloat ty)
{
  MEMORY[0x1E0C9C588](c, tx, ty);
}

CGDataProviderRef CGDataProviderCreateWithData(void *info, const void *data, size_t size, CGDataProviderReleaseDataCallback releaseData)
{
  return (CGDataProviderRef)MEMORY[0x1E0C9C600](info, data, size, releaseData);
}

void CGDataProviderRelease(CGDataProviderRef provider)
{
  MEMORY[0x1E0C9C638](provider);
}

CGImageRef CGImageCreateCopyWithColorSpace(CGImageRef image, CGColorSpaceRef space)
{
  return (CGImageRef)MEMORY[0x1E0C9CB98](image, space);
}

size_t CGImageGetHeight(CGImageRef image)
{
  return MEMORY[0x1E0C9CC60](image);
}

size_t CGImageGetWidth(CGImageRef image)
{
  return MEMORY[0x1E0C9CCD0](image);
}

void CGImageRelease(CGImageRef image)
{
  MEMORY[0x1E0C9CDA0](image);
}

BOOL CGRectContainsPoint(CGRect rect, CGPoint point)
{
  return MEMORY[0x1E0C9D550]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height, (__n128)point, *(__n128 *)&point.y);
}

CGFloat CGRectGetMaxX(CGRect rect)
{
  CGFloat result;

  MEMORY[0x1E0C9D588]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
  return result;
}

CGFloat CGRectGetMaxY(CGRect rect)
{
  CGFloat result;

  MEMORY[0x1E0C9D5A0]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
  return result;
}

CGFloat CGRectGetMidX(CGRect rect)
{
  CGFloat result;

  MEMORY[0x1E0C9D5A8]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
  return result;
}

CGFloat CGRectGetMidY(CGRect rect)
{
  CGFloat result;

  MEMORY[0x1E0C9D5B0]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
  return result;
}

CGFloat CGRectGetWidth(CGRect rect)
{
  CGFloat result;

  MEMORY[0x1E0C9D5D0]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
  return result;
}

CGRect CGRectInset(CGRect rect, CGFloat dx, CGFloat dy)
{
  double v3;
  double v4;
  double v5;
  double v6;
  CGRect result;

  MEMORY[0x1E0C9D5E8]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height, dx, dy);
  result.size.height = v6;
  result.size.width = v5;
  result.origin.y = v4;
  result.origin.x = v3;
  return result;
}

BOOL CGSizeEqualToSize(CGSize size1, CGSize size2)
{
  return MEMORY[0x1E0C9D810]((__n128)size1, *(__n128 *)&size1.height, (__n128)size2, *(__n128 *)&size2.height);
}

CGFontRef CTFontCopyGraphicsFont(CTFontRef font, CTFontDescriptorRef *attributes)
{
  return (CGFontRef)MEMORY[0x1E0CA79C8](font, attributes);
}

CFDataRef CTFontCopyTable(CTFontRef font, CTFontTableTag table, CTFontTableOptions options)
{
  return (CFDataRef)MEMORY[0x1E0CA7A00](font, *(_QWORD *)&table, *(_QWORD *)&options);
}

CTFontRef CTFontCreateWithName(CFStringRef name, CGFloat size, const CGAffineTransform *matrix)
{
  return (CTFontRef)MEMORY[0x1E0CA7A88](name, matrix, size);
}

CTLineRef CTLineCreateWithAttributedString(CFAttributedStringRef attrString)
{
  return (CTLineRef)MEMORY[0x1E0CA7E88](attrString);
}

CFArrayRef CTLineGetGlyphRuns(CTLineRef line)
{
  return (CFArrayRef)MEMORY[0x1E0CA7ED8](line);
}

CFIndex CTRunGetGlyphCount(CTRunRef run)
{
  return MEMORY[0x1E0CA7FD0](run);
}

void CTRunGetGlyphs(CTRunRef run, CFRange range, CGGlyph *buffer)
{
  MEMORY[0x1E0CA7FE0](run, range.location, range.length, buffer);
}

uint64_t MGIsDeviceOneOfType()
{
  return MEMORY[0x1E0DE2B90]();
}

BOOL UIAccessibilityIsReduceMotionEnabled(void)
{
  return MEMORY[0x1E0DC4548]();
}

void *__cdecl _Block_copy(const void *aBlock)
{
  return (void *)MEMORY[0x1E0C80928](aBlock);
}

void _Block_release(const void *aBlock)
{
  MEMORY[0x1E0C80958](aBlock);
}

void _Unwind_Resume(_Unwind_Exception *exception_object)
{
  MEMORY[0x1E0C80A20](exception_object);
}

std::logic_error *__cdecl std::logic_error::logic_error(std::logic_error *this, const char *a2)
{
  return (std::logic_error *)MEMORY[0x1E0DE4288](this, a2);
}

std::bad_array_new_length *__cdecl std::bad_array_new_length::bad_array_new_length(std::bad_array_new_length *this)
{
  return (std::bad_array_new_length *)MEMORY[0x1E0DE4388](this);
}

void std::exception::~exception(std::exception *this)
{
  MEMORY[0x1E0DE4DD8](this);
}

void std::terminate(void)
{
  MEMORY[0x1E0DE4E18]();
}

void operator delete(void *__p)
{
  off_1EA7119F0(__p);
}

uint64_t operator delete()
{
  return off_1EA7119F8();
}

void *__cdecl operator new(size_t __sz)
{
  return (void *)off_1EA711A00(__sz);
}

uint64_t operator new()
{
  return off_1EA711A08();
}

void *__cxa_allocate_exception(size_t thrown_size)
{
  return (void *)MEMORY[0x1E0DE5068](thrown_size);
}

void *__cxa_begin_catch(void *a1)
{
  return (void *)MEMORY[0x1E0DE5080](a1);
}

void __cxa_free_exception(void *a1)
{
  MEMORY[0x1E0DE50A0](a1);
}

void __cxa_throw(void *a1, struct type_info *lptinfo, void (*a3)(void *))
{
  MEMORY[0x1E0DE50D8](a1, lptinfo, a3);
}

__double2 __sincos_stret(double a1)
{
  double v1;
  double v2;
  __double2 result;

  MEMORY[0x1E0C80BC8](a1);
  result.__cosval = v2;
  result.__sinval = v1;
  return result;
}

void _os_log_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
  MEMORY[0x1E0C81048](dso, log, type, format, buf, *(_QWORD *)&size);
}

uint64_t _swift_stdlib_reportUnimplementedInitializer()
{
  return MEMORY[0x1E0DEEA40]();
}

long double atan2(long double __y, long double __x)
{
  long double result;

  MEMORY[0x1E0C81620](__y, __x);
  return result;
}

void bzero(void *a1, size_t a2)
{
  MEMORY[0x1E0C81758](a1, a2);
}

long double cos(long double __x)
{
  long double result;

  MEMORY[0x1E0C82B40](__x);
  return result;
}

void dispatch_once(dispatch_once_t *predicate, dispatch_block_t block)
{
  MEMORY[0x1E0C82E08](predicate, block);
}

long double exp(long double __x)
{
  long double result;

  MEMORY[0x1E0C83280](__x);
  return result;
}

long double fmod(long double __x, long double __y)
{
  long double result;

  MEMORY[0x1E0C83440](__x, __y);
  return result;
}

void free(void *a1)
{
  MEMORY[0x1E0C834A8](a1);
}

long double log(long double __x)
{
  long double result;

  MEMORY[0x1E0C83BB8](__x);
  return result;
}

void *__cdecl malloc(size_t __size)
{
  return (void *)MEMORY[0x1E0C83E68](__size);
}

size_t malloc_size(const void *ptr)
{
  return MEMORY[0x1E0C83EE0](ptr);
}

void *__cdecl malloc_type_calloc(size_t count, size_t size, malloc_type_id_t type_id)
{
  return (void *)MEMORY[0x1E0C83EF8](count, size, type_id);
}

void *__cdecl malloc_type_malloc(size_t size, malloc_type_id_t type_id)
{
  return (void *)MEMORY[0x1E0C83F00](size, type_id);
}

void *__cdecl memcpy(void *__dst, const void *__src, size_t __n)
{
  return (void *)MEMORY[0x1E0C84088](__dst, __src, __n);
}

void *__cdecl memmove(void *__dst, const void *__src, size_t __len)
{
  return (void *)MEMORY[0x1E0C84098](__dst, __src, __len);
}

id objc_alloc(Class a1)
{
  return (id)MEMORY[0x1E0DE7BA8](a1);
}

id objc_allocWithZone(Class a1)
{
  return (id)MEMORY[0x1E0DE7BB0](a1);
}

uint64_t objc_alloc_init()
{
  return MEMORY[0x1E0DE7BB8]();
}

id objc_autoreleaseReturnValue(id a1)
{
  return (id)MEMORY[0x1E0DE7BE8](a1);
}

uint64_t objc_claimAutoreleasedReturnValue()
{
  return MEMORY[0x1E0DE7BF8]();
}

id objc_msgSend(id a1, SEL a2, ...)
{
  return (id)MEMORY[0x1E0DE7D20](a1, a2);
}

id objc_msgSendSuper2(objc_super *a1, SEL a2, ...)
{
  return (id)MEMORY[0x1E0DE7D30](a1, a2);
}

uint64_t objc_opt_self()
{
  return MEMORY[0x1E0DE7D58]();
}

void objc_release(id a1)
{
  MEMORY[0x1E0DE7D78](a1);
}

id objc_retain(id a1)
{
  return (id)MEMORY[0x1E0DE7E50](a1);
}

id objc_retainAutorelease(id a1)
{
  return (id)MEMORY[0x1E0DE7E58](a1);
}

id objc_retainAutoreleasedReturnValue(id a1)
{
  return (id)MEMORY[0x1E0DE7E68](a1);
}

void objc_storeStrong(id *location, id obj)
{
  MEMORY[0x1E0DE7FB0](location, obj);
}

BOOL os_log_type_enabled(os_log_t oslog, os_log_type_t type)
{
  return MEMORY[0x1E0C84780](oslog, type);
}

long double pow(long double __x, long double __y)
{
  long double result;

  MEMORY[0x1E0C84BB8](__x, __y);
  return result;
}

int printf(const char *a1, ...)
{
  return MEMORY[0x1E0C84BD0](a1);
}

long double sin(long double __x)
{
  long double result;

  MEMORY[0x1E0C85418](__x);
  return result;
}

int strcmp(const char *__s1, const char *__s2)
{
  return MEMORY[0x1E0C85520](__s1, __s2);
}

uint64_t swift_allocError()
{
  return MEMORY[0x1E0DEEAA8]();
}

uint64_t swift_allocObject()
{
  return MEMORY[0x1E0DEEAB0]();
}

uint64_t swift_allocateGenericValueMetadata()
{
  return MEMORY[0x1E0DEEAC0]();
}

uint64_t swift_arrayDestroy()
{
  return MEMORY[0x1E0DEEAD8]();
}

uint64_t swift_arrayInitWithCopy()
{
  return MEMORY[0x1E0DEEAE0]();
}

uint64_t swift_beginAccess()
{
  return MEMORY[0x1E0DEEAF8]();
}

uint64_t swift_bridgeObjectRelease()
{
  return MEMORY[0x1E0DEEB08]();
}

uint64_t swift_bridgeObjectRelease_n()
{
  return MEMORY[0x1E0DEEB10]();
}

uint64_t swift_bridgeObjectRetain()
{
  return MEMORY[0x1E0DEEB18]();
}

uint64_t swift_bridgeObjectRetain_n()
{
  return MEMORY[0x1E0DEEB20]();
}

uint64_t swift_deallocClassInstance()
{
  return MEMORY[0x1E0DEEB50]();
}

uint64_t swift_deallocObject()
{
  return MEMORY[0x1E0DEEB60]();
}

uint64_t swift_dynamicCast()
{
  return MEMORY[0x1E0DEEB80]();
}

uint64_t swift_dynamicCastClass()
{
  return MEMORY[0x1E0DEEB88]();
}

uint64_t swift_dynamicCastObjCClass()
{
  return MEMORY[0x1E0DEEBA8]();
}

uint64_t swift_dynamicCastObjCClassUnconditional()
{
  return MEMORY[0x1E0DEEBB0]();
}

uint64_t swift_endAccess()
{
  return MEMORY[0x1E0DEEBE0]();
}

uint64_t swift_errorRelease()
{
  return MEMORY[0x1E0DEEBF0]();
}

uint64_t swift_getAssociatedConformanceWitness()
{
  return MEMORY[0x1E0DEEC00]();
}

uint64_t swift_getAssociatedTypeWitness()
{
  return MEMORY[0x1E0DEEC08]();
}

uint64_t swift_getForeignTypeMetadata()
{
  return MEMORY[0x1E0DEEC78]();
}

uint64_t swift_getGenericMetadata()
{
  return MEMORY[0x1E0DEECB0]();
}

uint64_t swift_getObjCClassFromMetadata()
{
  return MEMORY[0x1E0DEECC8]();
}

uint64_t swift_getObjCClassMetadata()
{
  return MEMORY[0x1E0DEECD8]();
}

uint64_t swift_getObjectType()
{
  return MEMORY[0x1E0DEECE0]();
}

uint64_t swift_getSingletonMetadata()
{
  return MEMORY[0x1E0DEECF8]();
}

uint64_t swift_getTypeByMangledNameInContext2()
{
  return MEMORY[0x1E0DEED38]();
}

uint64_t swift_getTypeByMangledNameInContextInMetadataState2()
{
  return MEMORY[0x1E0DEED40]();
}

uint64_t swift_getWitnessTable()
{
  return MEMORY[0x1E0DEED50]();
}

uint64_t swift_initStackObject()
{
  return MEMORY[0x1E0DEED78]();
}

uint64_t swift_initStructMetadata()
{
  return MEMORY[0x1E0DEED88]();
}

uint64_t swift_isEscapingClosureAtFileLocation()
{
  return MEMORY[0x1E0DEED98]();
}

uint64_t swift_isUniquelyReferenced_nonNull_bridgeObject()
{
  return MEMORY[0x1E0DEEDC8]();
}

uint64_t swift_isUniquelyReferenced_nonNull_native()
{
  return MEMORY[0x1E0DEEDD0]();
}

uint64_t swift_lookUpClassMethod()
{
  return MEMORY[0x1E0DEEDE0]();
}

uint64_t swift_makeBoxUnique()
{
  return MEMORY[0x1E0DEEDE8]();
}

uint64_t swift_once()
{
  return MEMORY[0x1E0DEEE00]();
}

uint64_t swift_release()
{
  return MEMORY[0x1E0DEEE30]();
}

uint64_t swift_release_n()
{
  return MEMORY[0x1E0DEEE38]();
}

uint64_t swift_retain()
{
  return MEMORY[0x1E0DEEE48]();
}

uint64_t swift_slowAlloc()
{
  return MEMORY[0x1E0DEEE78]();
}

uint64_t swift_slowDealloc()
{
  return MEMORY[0x1E0DEEE80]();
}

uint64_t swift_unknownObjectRelease()
{
  return MEMORY[0x1E0DEEEC0]();
}

uint64_t swift_unknownObjectRetain()
{
  return MEMORY[0x1E0DEEED0]();
}

uint64_t swift_unknownObjectRetain_n()
{
  return MEMORY[0x1E0DEEED8]();
}

uint64_t swift_unknownObjectWeakAssign()
{
  return MEMORY[0x1E0DEEF20]();
}

uint64_t swift_unknownObjectWeakDestroy()
{
  return MEMORY[0x1E0DEEF38]();
}

uint64_t swift_unknownObjectWeakInit()
{
  return MEMORY[0x1E0DEEF40]();
}

uint64_t swift_unknownObjectWeakLoadStrong()
{
  return MEMORY[0x1E0DEEF48]();
}

uint64_t swift_updateClassMetadata2()
{
  return MEMORY[0x1E0DEEF78]();
}

uint64_t swift_willThrow()
{
  return MEMORY[0x1E0DEEFC0]();
}

