BOOL UVConnectToRenderServerPort()
{
  return CARenderServerGetServerPort() != 0;
}

uint64_t __SERVICEHUB_ATTACH_POINT__()
{
  return 0;
}

uint64_t sub_21C1E5294(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;

  v3[6] = a2;
  v3[7] = a3;
  v3[5] = a1;
  sub_21C24863C();
  v3[8] = sub_21C248630();
  v3[9] = sub_21C2485E8();
  v3[10] = v4;
  return swift_task_switch();
}

uint64_t sub_21C1E5304()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 88) = sub_21C247310();
  return swift_task_switch();
}

uint64_t sub_21C1E5344()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 96) = *(_QWORD *)(*(_QWORD *)(v0 + 56) + 8);
  return swift_task_switch();
}

uint64_t sub_21C1E5360()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t *v2;

  v1 = v0[11];
  v2 = (uint64_t *)v0[5];
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_21C2285AC(v1, v2);
  v0[13] = 0;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_21C1E5414()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21C1E5448()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

id sub_21C1E5488@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char *a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  void (*v25)(char *, uint64_t, uint64_t);
  NSObject *v26;
  os_log_type_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  void *v33;
  id v34;
  _QWORD *v35;
  os_log_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  int *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  void (*v51)(char *, uint64_t, uint64_t);
  char *v52;
  uint64_t v53;
  id v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  void *v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  char *v63;
  uint64_t v65;
  uint64_t v66;
  _QWORD *v67;
  uint64_t v68;
  int v69;
  os_log_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  uint64_t v88[4];

  v74 = a2;
  v86 = a4;
  v6 = sub_21C246F20();
  MEMORY[0x24BDAC7A8](v6);
  v82 = (char *)&v65 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_21C246F38();
  v84 = *(_QWORD *)(v8 - 8);
  v85 = v8;
  MEMORY[0x24BDAC7A8](v8);
  v83 = (char *)&v65 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_255249930);
  MEMORY[0x24BDAC7A8](v10);
  v80 = (uint64_t)&v65 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v81 = sub_21C2470E8();
  v78 = *(_QWORD *)(v81 - 8);
  MEMORY[0x24BDAC7A8](v81);
  v79 = (char *)&v65 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v73 = type metadata accessor for RenderEffects(0);
  MEMORY[0x24BDAC7A8](v73);
  v77 = (uint64_t)&v65 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v76 = type metadata accessor for PreviewDisplayContext(0);
  MEMORY[0x24BDAC7A8](v76);
  v15 = (char *)&v65 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_21C247670();
  v17 = *(_QWORD *)(v16 - 8);
  v18 = MEMORY[0x24BDAC7A8](v16);
  v20 = (char *)&v65 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v18);
  v22 = (char *)&v65 - v21;
  v72 = sub_21C247CC4();
  v71 = *(_QWORD *)(v72 - 8);
  MEMORY[0x24BDAC7A8](v72);
  v24 = (char *)&v65 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21C247CA0();
  v25 = *(void (**)(char *, uint64_t, uint64_t))(v17 + 16);
  v75 = a1;
  v25(v22, a1, v16);
  swift_retain_n();
  v26 = sub_21C247CB8();
  v27 = sub_21C248714();
  v70 = v26;
  v69 = v27;
  if (os_log_type_enabled(v26, v27))
  {
    v28 = swift_slowAlloc();
    v66 = a3;
    v29 = v28;
    v67 = (_QWORD *)swift_slowAlloc();
    v68 = swift_slowAlloc();
    v88[0] = v68;
    *(_DWORD *)v29 = 136446466;
    v25(v20, (uint64_t)v22, v16);
    v30 = sub_21C2484E0();
    v87 = sub_21C203A90(v30, v31, v88);
    sub_21C2487A4();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v17 + 8))(v22, v16);
    *(_WORD *)(v29 + 12) = 2114;
    v32 = v66;
    swift_beginAccess();
    v33 = *(void **)(v32 + 16);
    v87 = (uint64_t)v33;
    v34 = v33;
    sub_21C2487A4();
    v35 = v67;
    *v67 = v33;
    swift_release_n();
    v36 = v70;
    _os_log_impl(&dword_21C1E3000, v70, (os_log_type_t)v69, "MainPreviewEntryPoint update for role: %{public}s, scene: %{public}@", (uint8_t *)v29, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25524B630);
    swift_arrayDestroy();
    MEMORY[0x2207770EC](v35, -1, -1);
    v37 = v68;
    swift_arrayDestroy();
    MEMORY[0x2207770EC](v37, -1, -1);
    MEMORY[0x2207770EC](v29, -1, -1);

    (*(void (**)(char *, uint64_t))(v71 + 8))(v24, v72);
    v38 = v32;
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v17 + 8))(v22, v16);

    swift_release_n();
    (*(void (**)(char *, uint64_t))(v71 + 8))(v24, v72);
    v38 = a3;
  }
  v39 = v77;
  sub_21C1E7170(v74, v77, type metadata accessor for RenderEffects);
  v40 = sub_21C247664();
  v41 = v76;
  v42 = &v15[*(int *)(v76 + 28)];
  *(_QWORD *)v42 = 0;
  *((_QWORD *)v42 + 1) = 0;
  *((_QWORD *)v15 + 3) = &type metadata for SwiftUIAppHostProvider;
  *((_QWORD *)v15 + 4) = sub_21C1E6CE0();
  v43 = &v15[*(int *)(v41 + 20)];
  v44 = *MEMORY[0x24BDC6F98];
  v45 = sub_21C247E74();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 104))(v43, v44, v45);
  v46 = (int *)type metadata accessor for PreviewDisplayContext.Configuration(0);
  v43[v46[5]] = v40 & 1;
  sub_21C1E7170(v39, (uint64_t)&v43[v46[6]], type metadata accessor for RenderEffects);
  v43[v46[7]] = 0;
  v43[v46[8]] = 0;
  v47 = v80;
  sub_21C1E6D24(v39 + *(int *)(v73 + 20), v80);
  v48 = v78;
  v49 = v81;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v78 + 48))(v47, 1, v81) == 1)
  {
    v50 = v79;
    (*(void (**)(char *, _QWORD, uint64_t))(v48 + 104))(v79, *MEMORY[0x24BE77290], v49);
    sub_21C1E6D6C(v47);
    (*(void (**)(char *, char *, uint64_t))(v48 + 32))(&v15[*(int *)(v41 + 24)], v50, v49);
  }
  else
  {
    v51 = *(void (**)(char *, uint64_t, uint64_t))(v48 + 32);
    v52 = v79;
    v51(v79, v47, v49);
    v51(&v15[*(int *)(v41 + 24)], (uint64_t)v52, v49);
  }
  sub_21C1E71CC(v39, type metadata accessor for RenderEffects);
  swift_bridgeObjectRelease();
  *(_QWORD *)v42 = 0;
  *((_QWORD *)v42 + 1) = 0;
  v53 = sub_21C1E5C04();
  swift_beginAccess();
  v54 = objc_msgSend(*(id *)(v38 + 16), sel_previewSceneIdentifier);
  v55 = sub_21C248498();
  v57 = v56;

  sub_21C1E5D18(v15, v55, v57);
  swift_bridgeObjectRelease();
  sub_21C2470DC();
  v58 = v83;
  sub_21C246F14();
  sub_21C1E71CC((uint64_t)v15, type metadata accessor for PreviewDisplayContext);
  swift_beginAccess();
  v59 = *(void **)(v53 + 40);
  v60 = swift_allocObject();
  *(_QWORD *)(v60 + 16) = v53;
  *(_QWORD *)(v60 + 24) = v38;
  v61 = v86;
  *(_QWORD *)v86 = v59;
  v62 = __swift_instantiateConcreteTypeFromMangledName(&qword_255249950);
  (*(void (**)(char *, char *, uint64_t))(v84 + 32))(&v61[*(int *)(v62 + 36)], v58, v85);
  v63 = &v61[*(int *)(v62 + 44)];
  *(_QWORD *)v63 = &unk_255249948;
  *((_QWORD *)v63 + 1) = v60;
  swift_retain();
  return v59;
}

uint64_t sub_21C1E5C04()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  _QWORD v5[6];

  v0 = sub_21C247808();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5[5] = &type metadata for IOSHostingParadigm;
  swift_beginAccess();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255249960);
  sub_21C1E78E4((unint64_t *)&qword_255249968, &qword_255249960, MEMORY[0x24BE76CA0]);
  sub_21C247820();
  swift_endAccess();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255249970);
  sub_21C2477FC();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v5[2];
}

id sub_21C1E5D18(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(uint64_t, uint64_t);
  uint64_t v16;
  uint64_t KeyPath;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  id result;
  void *v23;
  id v24;
  void *v25;
  id v26;
  void *v27;
  void *v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  ValueMetadata *v34;
  _UNKNOWN **v35;
  ValueMetadata *v36;
  _UNKNOWN **v37;
  _BYTE v38[40];
  uint64_t v39[6];

  v4 = v3;
  v30 = a2;
  v31 = a3;
  v33 = type metadata accessor for PreviewDisplayContext.Configuration(0);
  v6 = MEMORY[0x24BDAC7A8](v33);
  v32 = (uint64_t)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v30 - v8;
  v10 = a1[3];
  v11 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v10);
  v36 = &type metadata for IOSHostingParadigm;
  v37 = &protocol witness table for IOSHostingParadigm;
  swift_getKeyPath();
  v34 = &type metadata for IOSHostingParadigm;
  v35 = &protocol witness table for IOSHostingParadigm;
  swift_getKeyPath();
  sub_21C247D30();
  swift_release();
  swift_release();
  v12 = sub_21C2131A8((uint64_t)v39, v10, v11);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v39);
  if ((v12 & 1) == 0)
  {
    v13 = a1[3];
    v14 = a1[4];
    __swift_project_boxed_opaque_existential_1(a1, v13);
    v15 = *(uint64_t (**)(uint64_t, uint64_t))(v14 + 32);
    v39[3] = swift_getAssociatedTypeWitness();
    v39[4] = swift_getAssociatedConformanceWitness();
    __swift_allocate_boxed_opaque_existential_1(v39);
    v16 = v15(v13, v14);
    MEMORY[0x24BDAC7A8](v16);
    *(&v30 - 2) = (uint64_t)&type metadata for IOSHostingParadigm;
    *(&v30 - 1) = (uint64_t)&protocol witness table for IOSHostingParadigm;
    KeyPath = swift_getKeyPath();
    MEMORY[0x24BDAC7A8](KeyPath);
    *(&v30 - 2) = (uint64_t)&type metadata for IOSHostingParadigm;
    *(&v30 - 1) = (uint64_t)&protocol witness table for IOSHostingParadigm;
    swift_getKeyPath();
    sub_21C1E712C((uint64_t)v39, (uint64_t)v38);
    swift_retain();
    sub_21C247D3C();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v39);
  }
  v18 = (uint64_t)a1 + *(int *)(type metadata accessor for PreviewDisplayContext(0) + 20);
  v19 = sub_21C1E7170(v18, (uint64_t)v9, type metadata accessor for PreviewDisplayContext.Configuration);
  MEMORY[0x24BDAC7A8](v19);
  *(&v30 - 2) = (uint64_t)&type metadata for IOSHostingParadigm;
  *(&v30 - 1) = (uint64_t)&protocol witness table for IOSHostingParadigm;
  v20 = swift_getKeyPath();
  MEMORY[0x24BDAC7A8](v20);
  *(&v30 - 2) = (uint64_t)&type metadata for IOSHostingParadigm;
  *(&v30 - 1) = (uint64_t)&protocol witness table for IOSHostingParadigm;
  swift_getKeyPath();
  sub_21C1E7170((uint64_t)v9, v32, type metadata accessor for PreviewDisplayContext.Configuration);
  swift_retain();
  sub_21C247D3C();
  sub_21C1E71CC((uint64_t)v9, type metadata accessor for PreviewDisplayContext.Configuration);
  v21 = *(void **)(v4 + 16);
  if ((*(_BYTE *)(v18 + *(int *)(v33 + 32)) & 1) == 0)
    sub_21C247F04();
  sub_21C248054();
  result = objc_msgSend(v21, sel_view, v30, v31);
  if (!result)
  {
    __break(1u);
    goto LABEL_11;
  }
  v23 = result;
  v24 = objc_msgSend((id)objc_opt_self(), sel_systemBackgroundColor);
  objc_msgSend(v23, sel_setBackgroundColor_, v24);

  swift_beginAccess();
  v25 = *(void **)(v4 + 40);
  *(_QWORD *)(v4 + 40) = v21;
  v26 = v21;

  result = objc_msgSend(v26, sel_view);
  if (!result)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  v27 = result;
  objc_msgSend(result, sel_setNeedsLayout);

  result = objc_msgSend(v26, sel_view);
  if (!result)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  v28 = result;
  objc_msgSend(result, sel_layoutIfNeeded);

  swift_bridgeObjectRetain();
  sub_21C247730();
  result = objc_msgSend(v26, sel_view);
  if (result)
  {
    v29 = result;
    objc_msgSend(result, sel_frame);

    sub_21C247760();
    return (id)sub_21C247748();
  }
LABEL_13:
  __break(1u);
  return result;
}

uint64_t sub_21C1E61D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  v3[6] = a2;
  v3[7] = a3;
  v3[5] = a1;
  sub_21C24863C();
  v3[8] = sub_21C248630();
  sub_21C2485E8();
  return swift_task_switch();
}

uint64_t sub_21C1E6240()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 56);
  swift_release();
  swift_beginAccess();
  objc_msgSend(*(id *)(v1 + 16), sel_displayScale);
  sub_21C1E62B4();
  sub_21C247208();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21C1E62B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  _QWORD v17[2];
  void (*v18)(char *, uint64_t, uint64_t);
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;

  v0 = sub_21C2472D4();
  v1 = *(_QWORD *)(v0 - 8);
  v2 = MEMORY[0x24BDAC7A8](v0);
  v4 = (char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)v17 - v5;
  v7 = MEMORY[0x24BEE4AF8];
  v20 = &v21;
  v21 = MEMORY[0x24BEE4AF8];
  sub_21C248060();
  v8 = v21;
  v9 = *(_QWORD *)(v21 + 16);
  if (v9)
  {
    v21 = v7;
    sub_21C1E6E60(0, v9, 0);
    v10 = *(unsigned __int8 *)(v1 + 80);
    v17[1] = v8;
    v19 = (v10 + 32) & ~v10;
    v11 = v8 + v19;
    v12 = *(_QWORD *)(v1 + 72);
    v18 = *(void (**)(char *, uint64_t, uint64_t))(v1 + 16);
    do
    {
      v18(v4, v11, v0);
      sub_21C2472C8();
      (*(void (**)(char *, uint64_t))(v1 + 8))(v4, v0);
      v13 = v21;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_21C1E6E60(0, *(_QWORD *)(v13 + 16) + 1, 1);
        v13 = v21;
      }
      v15 = *(_QWORD *)(v13 + 16);
      v14 = *(_QWORD *)(v13 + 24);
      if (v15 >= v14 >> 1)
      {
        sub_21C1E6E60(v14 > 1, v15 + 1, 1);
        v13 = v21;
      }
      *(_QWORD *)(v13 + 16) = v15 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v1 + 32))(v13 + v19 + v15 * v12, v6, v0);
      v21 = v13;
      v11 += v12;
      --v9;
    }
    while (v9);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    return MEMORY[0x24BEE4AF8];
  }
  return v13;
}

uint64_t sub_21C1E64A4()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for MainPreviewEntryPoint()
{
  return objc_opt_self();
}

uint64_t sub_21C1E64D4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t result;
  uint64_t v11;

  v2 = sub_21C247CC4();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = swift_allocObject();
  sub_21C247CA0();
  v7 = sub_21C247CB8();
  v8 = sub_21C248714();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v9 = 0;
    _os_log_impl(&dword_21C1E3000, v7, v8, "MainPreviewEntryPoint init", v9, 2u);
    MEMORY[0x2207770EC](v9, -1, -1);
  }

  result = (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  *a1 = v6;
  return result;
}

uint64_t sub_21C1E65E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;

  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_21C1E664C;
  return sub_21C1E5294(a1, a2, a3);
}

uint64_t sub_21C1E664C()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

id sub_21C1E6694@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char *a4@<X8>)
{
  return sub_21C1E5488(a1, a2, a3, a4);
}

unint64_t sub_21C1E66A8()
{
  return 0xD000000000000015;
}

uint64_t sub_21C1E66C4(uint64_t a1)
{
  uint64_t result;

  result = sub_21C1E672C(qword_2552498D0, (uint64_t)&unk_21C249148);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_21C1E66F8(uint64_t a1)
{
  uint64_t result;

  result = sub_21C1E672C(&qword_255249928, (uint64_t)&unk_21C249170);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_21C1E672C(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for MainPreviewEntryPoint();
    result = MEMORY[0x22077702C](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_21C1E6768()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_255249970);
  swift_allocObject();
  sub_21C1E6814();
  return sub_21C247814();
}

uint64_t __swift_instantiateConcreteTypeFromMangledName(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = MEMORY[0x220777014]((char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

_QWORD *sub_21C1E6814()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  int *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  void *v22;
  _QWORD *result;
  void *v24;
  id v25;
  id v26;
  void *v27;
  id v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  ValueMetadata *v33;
  _UNKNOWN **v34;
  ValueMetadata *v35;
  _UNKNOWN **v36;
  uint64_t v37;
  uint64_t v38;

  v1 = v0;
  v32 = sub_21C24773C();
  v2 = *(_QWORD *)(v32 - 8);
  MEMORY[0x24BDAC7A8](v32);
  v4 = (char *)&v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = (int *)type metadata accessor for PreviewDisplayContext.Configuration(0);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v31 - v9;
  v11 = *MEMORY[0x24BDC6F98];
  v12 = sub_21C247E74();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 104))(v10, v11, v12);
  v13 = &v10[v5[6]];
  v14 = type metadata accessor for RenderEffects(0);
  v15 = &v13[*(int *)(v14 + 20)];
  v16 = sub_21C2470E8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v15, 1, 1, v16);
  v17 = &v13[*(int *)(v14 + 24)];
  v18 = MEMORY[0x24BDEC0A0];
  *((_QWORD *)v17 + 3) = MEMORY[0x24BDEC0B0];
  *((_QWORD *)v17 + 4) = v18;
  *(_QWORD *)v13 = MEMORY[0x24BEE4AF8];
  v10[v5[5]] = 1;
  v10[v5[7]] = 0;
  v10[v5[8]] = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255249978);
  v19 = swift_allocObject();
  v1[3] = sub_21C1E7738((uint64_t)v10, v19);
  sub_21C1E78E4(&qword_255249980, &qword_255249978, (uint64_t)&unk_21C24BD20);
  swift_retain();
  v37 = sub_21C247EB0();
  v38 = v20;
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255249988);
  sub_21C1E78E4(&qword_255249990, &qword_255249988, (uint64_t)&unk_21C24BD58);
  v37 = sub_21C248330();
  v21 = objc_allocWithZone((Class)__swift_instantiateConcreteTypeFromMangledName(&qword_255249998));
  v22 = (void *)sub_21C248078();
  swift_release();
  v1[2] = v22;
  v35 = &type metadata for IOSHostingParadigm;
  v36 = &protocol witness table for IOSHostingParadigm;
  swift_getKeyPath();
  v33 = &type metadata for IOSHostingParadigm;
  v34 = &protocol witness table for IOSHostingParadigm;
  swift_getKeyPath();
  sub_21C247D30();
  swift_release();
  swift_release();
  if ((v8[v5[8]] & 1) == 0)
    sub_21C247F04();
  sub_21C248054();
  result = objc_msgSend(v22, sel_view);
  if (result)
  {
    v24 = result;
    v25 = objc_msgSend((id)objc_opt_self(), sel_systemBackgroundColor);
    objc_msgSend(v24, sel_setBackgroundColor_, v25);

    v26 = v22;
    sub_21C1E71CC((uint64_t)v8, type metadata accessor for PreviewDisplayContext.Configuration);
    v1[5] = v26;
    v27 = (void *)v1[2];
    (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v4, *MEMORY[0x24BE78460], v32);
    v28 = v27;
    result = objc_msgSend(v28, sel_view);
    if (result)
    {
      v29 = objc_allocWithZone((Class)sub_21C24776C());
      v30 = sub_21C247754();

      v1[4] = v30;
      return v1;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_21C1E6BE8()
{
  return sub_21C22EDD4();
}

uint64_t sub_21C1E6C08(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t (*v5)(_QWORD);
  uint64_t v7;

  v2 = type metadata accessor for PreviewDisplayContext.Configuration(0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21C1E7170(a1, (uint64_t)v4, v5);
  return sub_21C22EF90((uint64_t)v4);
}

uint64_t sub_21C1E6C88()
{
  return sub_21C22EE64();
}

uint64_t sub_21C1E6CA8(uint64_t a1)
{
  _BYTE v2[40];

  sub_21C1E712C(a1, (uint64_t)v2);
  return sub_21C22EEF4((uint64_t)v2);
}

unint64_t sub_21C1E6CE0()
{
  unint64_t result;

  result = qword_255249938;
  if (!qword_255249938)
  {
    result = MEMORY[0x22077702C](&unk_21C24CBCC, &type metadata for SwiftUIAppHostProvider);
    atomic_store(result, &qword_255249938);
  }
  return result;
}

uint64_t sub_21C1E6D24(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255249930);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_21C1E6D6C(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_255249930);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_21C1E6DAC()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_21C1E6DD8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v5 = *(_QWORD *)(v1 + 16);
  v4 = *(_QWORD *)(v1 + 24);
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_21C1E664C;
  return sub_21C1E61D0(a1, v5, v4);
}

uint64_t sub_21C1E6E3C(uint64_t a1)
{
  uint64_t v1;

  return sub_21C23D168(a1, *(unint64_t **)(v1 + 16));
}

uint64_t sub_21C1E6E44(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_21C1E6EF0(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_21C1E6E60(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_21C1E7558(a1, a2, a3, (_QWORD *)*v3, &qword_255249958, (uint64_t (*)(_QWORD))MEMORY[0x24BE777B8]);
  *v3 = result;
  return result;
}

uint64_t sub_21C1E6E8C(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_21C1E724C(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_21C1E6EA8(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_21C1E73D4(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_21C1E6EC4(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_21C1E7558(a1, a2, a3, (_QWORD *)*v3, &qword_2552499E8, (uint64_t (*)(_QWORD))MEMORY[0x24BE77960]);
  *v3 = result;
  return result;
}

uint64_t sub_21C1E6EF0(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2552499D0);
    v10 = (_QWORD *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 40);
  }
  else
  {
    v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  v12 = (unint64_t)(v10 + 4);
  v13 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= v13 + 40 * v8)
      memmove(v10 + 4, a4 + 4, 40 * v8);
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v13 >= v12 + 40 * v8 || v12 >= v13 + 40 * v8)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2552499D8);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_21C2488E8();
  __break(1u);
  return result;
}

_QWORD *__swift_project_boxed_opaque_existential_1(_QWORD *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
    return (_QWORD *)(*result
                    + ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80)));
  return result;
}

uint64_t sub_21C1E70B8()
{
  return 16;
}

__n128 sub_21C1E70C4(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t __swift_destroy_boxed_opaque_existential_1(uint64_t a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)(a1 + 24) - 8);
  if ((*(_BYTE *)(v1 + 82) & 2) != 0)
    return swift_release();
  else
    return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t *__swift_allocate_boxed_opaque_existential_1(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t v2;

  v1 = a1;
  if ((*(_BYTE *)(*(_QWORD *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

uint64_t sub_21C1E712C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  *(_QWORD *)(a2 + 32) = *(_QWORD *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_21C1E7170(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_21C1E71B4()
{
  return 16;
}

__n128 sub_21C1E71C0(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_21C1E71CC(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v3;

  v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t __swift_instantiateConcreteTypeFromMangledNameAbstract(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = MEMORY[0x220777020](255, (char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

uint64_t sub_21C1E724C(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2552499C0);
    v10 = (_QWORD *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 25;
    v10[2] = v8;
    v10[3] = 2 * (v12 >> 3);
  }
  else
  {
    v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  v13 = (unint64_t)(v10 + 4);
  v14 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= v14 + 8 * v8)
      memmove(v10 + 4, a4 + 4, 8 * v8);
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 8 * v8 || v13 >= v14 + 8 * v8)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2552499C8);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_21C2488E8();
  __break(1u);
  return result;
}

uint64_t sub_21C1E73D4(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2552499F0);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 48);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[48 * v8])
      memmove(v12, v13, 48 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[48 * v8] || v12 >= &v13[48 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_21C2488E8();
  __break(1u);
  return result;
}

uint64_t sub_21C1E7558(char a1, int64_t a2, char a3, _QWORD *a4, uint64_t *a5, uint64_t (*a6)(_QWORD))
{
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  size_t v17;
  uint64_t v19;
  unint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  char *v24;
  unint64_t v25;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v9 = a4[3];
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = a4[2];
  if (v10 <= v11)
    v12 = a4[2];
  else
    v12 = v10;
  if (!v12)
  {
    v16 = (_QWORD *)MEMORY[0x24BEE4AF8];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(a5);
  v13 = *(_QWORD *)(a6(0) - 8);
  v14 = *(_QWORD *)(v13 + 72);
  v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v16 = (_QWORD *)swift_allocObject();
  v17 = _swift_stdlib_malloc_size(v16);
  if (!v14)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v17 - v15 == 0x8000000000000000 && v14 == -1)
    goto LABEL_34;
  v16[2] = v11;
  v16[3] = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  v19 = *(_QWORD *)(a6(0) - 8);
  v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  v21 = (char *)v16 + v20;
  v22 = (char *)a4 + v20;
  if ((a1 & 1) != 0)
  {
    if (v16 < a4 || v21 >= &v22[*(_QWORD *)(v19 + 72) * v11])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  v23 = *(_QWORD *)(v19 + 72) * v11;
  v24 = &v21[v23];
  v25 = (unint64_t)&v22[v23];
  if (v22 >= v24 || (unint64_t)v21 >= v25)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v16;
  }
LABEL_36:
  result = sub_21C2488E8();
  __break(1u);
  return result;
}

uint64_t sub_21C1E7738(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  _BYTE *v9;
  _BYTE v11[40];
  _BYTE v12[40];
  _BYTE v13[24];
  uint64_t v14;
  uint64_t v15;

  v4 = type metadata accessor for PreviewDisplayContext.Configuration(0);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = &v11[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v5);
  v9 = &v11[-v8];
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2552499A0);
  v15 = sub_21C1E78E4(&qword_2552499A8, &qword_2552499A0, (uint64_t)&unk_21C24BED8);
  sub_21C1E7170(a1, (uint64_t)v9, type metadata accessor for PreviewDisplayContext.Configuration);
  swift_beginAccess();
  sub_21C1E7170((uint64_t)v9, (uint64_t)v7, type metadata accessor for PreviewDisplayContext.Configuration);
  sub_21C247D18();
  sub_21C1E71CC((uint64_t)v9, type metadata accessor for PreviewDisplayContext.Configuration);
  swift_endAccess();
  sub_21C1E712C((uint64_t)v13, (uint64_t)v12);
  swift_beginAccess();
  sub_21C1E712C((uint64_t)v12, (uint64_t)v11);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2552499B0);
  sub_21C247D18();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
  swift_endAccess();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v13);
  sub_21C1E71CC(a1, type metadata accessor for PreviewDisplayContext.Configuration);
  return a2;
}

uint64_t sub_21C1E78E4(unint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    result = MEMORY[0x22077702C](a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

void type metadata accessor for os_unfair_lock_s(uint64_t a1)
{
  sub_21C1E79A4(a1, &qword_2552499E0);
}

__n128 __swift_memcpy16_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  *a1 = *a2;
  return result;
}

uint64_t sub_21C1E7948(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_21C1E7968(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)result = (a2 - 1);
    *(_QWORD *)(result + 8) = 0;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 16) = v3;
  return result;
}

void type metadata accessor for CGPoint(uint64_t a1)
{
  sub_21C1E79A4(a1, qword_2552499F8);
}

void sub_21C1E79A4(uint64_t a1, unint64_t *a2)
{
  unint64_t ForeignTypeMetadata;
  uint64_t v4;

  if (!*a2)
  {
    ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v4)
      atomic_store(ForeignTypeMetadata, a2);
  }
}

ValueMetadata *type metadata accessor for NoopEntryPoint()
{
  return &type metadata for NoopEntryPoint;
}

uint64_t sub_21C1E79F8()
{
  uint64_t v0;

  return sub_21C1E7AF4(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_21C1E7A04()
{
  uint64_t v0;

  return sub_21C1E7AE8(*(uint64_t (**)(void))(v0 + 8));
}

unint64_t sub_21C1E7A18(uint64_t a1)
{
  unint64_t result;

  result = sub_21C1E7A3C();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_21C1E7A3C()
{
  unint64_t result;

  result = qword_255249A60;
  if (!qword_255249A60)
  {
    result = MEMORY[0x22077702C](&unk_21C2492A4, &type metadata for NoopEntryPoint);
    atomic_store(result, (unint64_t *)&qword_255249A60);
  }
  return result;
}

unint64_t sub_21C1E7A80(uint64_t a1)
{
  unint64_t result;

  result = sub_21C1E7AA4();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_21C1E7AA4()
{
  unint64_t result;

  result = qword_255249A78;
  if (!qword_255249A78)
  {
    result = MEMORY[0x22077702C](&unk_21C2492CC, &type metadata for NoopEntryPoint);
    atomic_store(result, (unint64_t *)&qword_255249A78);
  }
  return result;
}

uint64_t sub_21C1E7AE8(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_21C1E7AF4(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_21C1E7AFC()
{
  return 0x72746E45706F6F4ELL;
}

uint64_t PreviewModifiers.applied<A>(to:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  _QWORD *v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v11[2];

  v7 = v3[3];
  v8 = v3[4];
  __swift_project_boxed_opaque_existential_1(v3, v7);
  v9 = sub_21C247EEC();
  a3[3] = v9;
  v11[0] = a2;
  v11[1] = v8;
  a3[4] = MEMORY[0x22077702C](MEMORY[0x24BDED308], v9, v11);
  __swift_allocate_boxed_opaque_existential_1(a3);
  return sub_21C1E7BC8(a1, v7);
}

uint64_t sub_21C1E7BC8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v4 = *(_QWORD *)(a2 - 8);
  v5 = MEMORY[0x24BDAC7A8](a1);
  v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  (*(void (**)(char *))(v9 + 16))((char *)&v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v7, v2, a2);
  return sub_21C247EE0();
}

uint64_t sub_21C1E7C9C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;

  v3[13] = a2;
  v3[14] = v2;
  v3[12] = a1;
  sub_21C24863C();
  v3[15] = sub_21C248630();
  v3[16] = sub_21C2485E8();
  v3[17] = v4;
  return swift_task_switch();
}

uint64_t sub_21C1E7D0C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *boxed_opaque_existential_1;
  _QWORD *v4;

  sub_21C1E7EFC((uint64_t)(v0 + 2));
  v1 = v0[5];
  v2 = v0[6];
  __swift_project_boxed_opaque_existential_1(v0 + 2, v1);
  v0[10] = swift_getAssociatedTypeWitness();
  v0[11] = swift_getAssociatedConformanceWitness();
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v0 + 7);
  v4 = (_QWORD *)swift_task_alloc();
  v0[18] = v4;
  *v4 = v0;
  v4[1] = sub_21C1E7DF4;
  return sub_21C1E80EC((uint64_t)boxed_opaque_existential_1, v0[13], v1, v2);
}

uint64_t sub_21C1E7DF4()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 152) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_21C1E7E54()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 96);
  swift_release();
  sub_21C1EB66C((__int128 *)(v0 + 56), v1);
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21C1E7EB0()
{
  uint64_t v0;

  swift_release();
  __swift_deallocate_boxed_opaque_existential_1(v0 + 56);
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21C1E7EFC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12[3];
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD v19[3];
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD v25[6];

  sub_21C2480A8();
  sub_21C1E923C();
  sub_21C247C4C();
  v2 = v25[0];
  v25[3] = &type metadata for EmptyWrapper;
  v25[4] = sub_21C1E9284();
  sub_21C1E712C((uint64_t)v25, (uint64_t)&v22);
  if (*(_QWORD *)(v2 + 16))
  {
    swift_bridgeObjectRetain();
    sub_21C1E712C(v2 + 32, (uint64_t)v19);
    v4 = v23;
    v3 = v24;
    __swift_project_boxed_opaque_existential_1(&v22, v23);
    v6 = v20;
    v5 = v21;
    __swift_project_boxed_opaque_existential_1(v19, v20);
    v13 = type metadata accessor for SingleWrapper(0, v6, v5, v7);
    v14 = MEMORY[0x22077702C](&unk_21C2494C4, v13);
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v12);
    sub_21C1E92C8(v6, (uint64_t)boxed_opaque_existential_1);
    v9 = v13;
    v10 = v14;
    __swift_project_boxed_opaque_existential_1(v12, v13);
    v15 = v4;
    v16 = v9;
    v17 = v3;
    v18 = v10;
    type metadata accessor for CompoundWrapper();
  }
  sub_21C1EB66C(&v22, a1);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
  return swift_bridgeObjectRelease();
}

uint64_t sub_21C1E80EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t AssociatedTypeWitness;
  uint64_t v10;
  _QWORD *v11;
  uint64_t (*v13)(uint64_t, uint64_t, uint64_t, uint64_t);

  v5[4] = a4;
  v5[5] = v4;
  v5[2] = a1;
  v5[3] = a3;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5[6] = AssociatedTypeWitness;
  v5[7] = *(_QWORD *)(AssociatedTypeWitness - 8);
  v10 = swift_task_alloc();
  v5[8] = v10;
  v5[9] = sub_21C24863C();
  v5[10] = sub_21C248630();
  v13 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(a4 + 32) + *(_QWORD *)(a4 + 32));
  v11 = (_QWORD *)swift_task_alloc();
  v5[11] = v11;
  *v11 = v5;
  v11[1] = sub_21C1E81DC;
  return v13(v10, a2, a3, a4);
}

uint64_t sub_21C1E81DC()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 96) = v0;
  swift_task_dealloc();
  sub_21C2485E8();
  return swift_task_switch();
}

uint64_t sub_21C1E8264()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *(_QWORD *)(v0 + 56);
  v1 = *(_QWORD *)(v0 + 64);
  v3 = *(_QWORD *)(v0 + 48);
  v5 = *(_QWORD *)(v0 + 24);
  v4 = *(_QWORD *)(v0 + 32);
  swift_release();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 40))(v1, v5, v4);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21C1E82F0()
{
  uint64_t v0;

  swift_release();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21C1E8330(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;

  v5[16] = a4;
  v5[17] = v4;
  v5[14] = a1;
  v5[15] = a3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255249D80);
  v5[18] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255249D88);
  v5[19] = swift_task_alloc();
  v6 = sub_21C247808();
  v5[20] = v6;
  v5[21] = *(_QWORD *)(v6 - 8);
  v5[22] = swift_task_alloc();
  v5[23] = swift_task_alloc();
  v5[24] = sub_21C24863C();
  v5[25] = sub_21C248630();
  v5[26] = sub_21C2485E8();
  v5[27] = v7;
  return swift_task_switch();
}

uint64_t sub_21C1E8424()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v24;
  unint64_t v25;
  _QWORD *v26;
  uint64_t v28;
  uint64_t v29;

  v1 = v0[17] + 16;
  swift_beginAccess();
  v2 = *(_QWORD *)v1;
  if (*(_QWORD *)(*(_QWORD *)v1 + 16) && (v3 = sub_21C1F61E4(v0[15]), (v4 & 1) != 0))
  {
    v6 = v0[22];
    v5 = v0[23];
    v7 = v0[20];
    v8 = v0[21];
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v8 + 16))(v6, *(_QWORD *)(v2 + 56) + *(_QWORD *)(v8 + 72) * v3, v7);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 32))(v5, v6, v7);
    swift_endAccess();
    swift_getAssociatedTypeWitness();
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255249D90);
    sub_21C247AC0();
    sub_21C2477FC();
    v0[28] = v0[13];
    v9 = (_QWORD *)swift_task_alloc();
    v0[29] = v9;
    *v9 = v0;
    v9[1] = sub_21C1E87D0;
  }
  else
  {
    v28 = v0[21];
    v10 = v0[19];
    v29 = v0[20];
    v11 = v0[17];
    v12 = v0[18];
    v14 = v0[15];
    v13 = v0[16];
    swift_endAccess();
    swift_getAssociatedTypeWitness();
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255249D90);
    v15 = sub_21C247AC0();
    v16 = sub_21C248654();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v10, 1, 1, v16);
    swift_retain();
    v17 = sub_21C248630();
    v18 = (_QWORD *)swift_allocObject();
    v19 = MEMORY[0x24BEE6930];
    v18[2] = v17;
    v18[3] = v19;
    v18[4] = v14;
    v18[5] = v13;
    v18[6] = v11;
    v18[7] = v14;
    sub_21C1E8C9C(v10, (uint64_t)&unk_255249DA0, (uint64_t)v18);
    v20 = sub_21C247AB4();
    v0[31] = v20;
    swift_release();
    v0[11] = v20;
    swift_retain();
    sub_21C247814();
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v28 + 56))(v12, 0, 1, v29);
    swift_beginAccess();
    sub_21C227290(v12, v14);
    swift_endAccess();
    v21 = (_QWORD *)(v11 + 24);
    swift_beginAccess();
    v22 = *(_QWORD **)(v11 + 24);
    swift_retain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)(v11 + 24) = v22;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v22 = sub_21C23D550(0, v22[2] + 1, 1, v22);
      *v21 = v22;
    }
    v25 = v22[2];
    v24 = v22[3];
    if (v25 >= v24 >> 1)
      *v21 = sub_21C23D550((_QWORD *)(v24 > 1), v25 + 1, 1, v22);
    v0[12] = v20;
    sub_21C1EB5F4(v25, (uint64_t)(v0 + 12), (uint64_t *)(v11 + 24), v15, (uint64_t)&off_24E01CFA8);
    swift_endAccess();
    v26 = (_QWORD *)swift_task_alloc();
    v0[32] = v26;
    *v26 = v0;
    v26[1] = sub_21C1E88B4;
  }
  return sub_21C247A9C();
}

uint64_t sub_21C1E87D0()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 240) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_21C1E8830()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 184);
  v2 = *(_QWORD *)(v0 + 160);
  v3 = *(_QWORD *)(v0 + 168);
  swift_release();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21C1E88B4()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 264) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_21C1E8914()
{
  uint64_t v0;

  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21C1E8980()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 184);
  v2 = *(_QWORD *)(v0 + 160);
  v3 = *(_QWORD *)(v0 + 168);
  swift_release();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21C1E8A04()
{
  uint64_t v0;

  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21C1E8A70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  _QWORD *v6;

  v5[5] = a4;
  v5[6] = a5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255249D80);
  v5[7] = swift_task_alloc();
  v5[8] = sub_21C24863C();
  v5[9] = sub_21C248630();
  v6 = (_QWORD *)swift_task_alloc();
  v5[10] = v6;
  *v6 = v5;
  v6[1] = sub_21C1E8B20;
  return sub_21C247EF8();
}

uint64_t sub_21C1E8B20()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 88) = v0;
  swift_task_dealloc();
  sub_21C2485E8();
  return swift_task_switch();
}

uint64_t sub_21C1E8BA8()
{
  uint64_t v0;

  swift_release();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21C1E8BE8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 48);
  v2 = *(_QWORD *)(v0 + 56);
  swift_release();
  v3 = sub_21C247808();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))(v2, 1, 1, v3);
  swift_beginAccess();
  sub_21C227290(v2, v1);
  swift_endAccess();
  swift_willThrow();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21C1E8C9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;

  v5 = sub_21C248654();
  v6 = *(_QWORD *)(v5 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(a1, 1, v5) != 1)
  {
    sub_21C248648();
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a1, v5);
    if (!*(_QWORD *)(a3 + 16))
      return swift_task_create();
    goto LABEL_3;
  }
  sub_21C1EB684(a1);
  if (*(_QWORD *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_21C2485E8();
    swift_unknownObjectRelease();
  }
  return swift_task_create();
}

uint64_t sub_21C1E8DC4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD v7[3];
  uint64_t v8;
  uint64_t v9;

  swift_beginAccess();
  *(_QWORD *)(v0 + 16) = MEMORY[0x24BEE4B00];
  swift_bridgeObjectRelease();
  swift_beginAccess();
  v1 = *(_QWORD *)(v0 + 24);
  v2 = *(_QWORD *)(v1 + 16);
  if (v2)
  {
    v3 = v1 + 32;
    swift_bridgeObjectRetain();
    do
    {
      sub_21C1E712C(v3, (uint64_t)v7);
      v4 = v8;
      v5 = v9;
      __swift_project_boxed_opaque_existential_1(v7, v8);
      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v5);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v7);
      v3 += 40;
      --v2;
    }
    while (v2);
    swift_bridgeObjectRelease();
  }
  *(_QWORD *)(v0 + 24) = MEMORY[0x24BEE4AF8];
  return swift_bridgeObjectRelease();
}

uint64_t sub_21C1E8EB8()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_21C1E8EE4()
{
  return sub_21C247AA8();
}

uint64_t initializeBufferWithCopyOfBuffer for PreviewModifiers(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a2;
  *a1 = *a2;
  v3 = v2 + 16;
  swift_retain();
  return v3;
}

uint64_t initializeWithCopy for PreviewModifiers(uint64_t a1, uint64_t a2)
{
  __int128 v3;

  v3 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v3;
  (**(void (***)(void))(v3 - 8))();
  return a1;
}

uint64_t *assignWithCopy for PreviewModifiers(uint64_t *a1, uint64_t *a2)
{
  __swift_assign_boxed_opaque_existential_1(a1, a2);
  return a1;
}

uint64_t *__swift_assign_boxed_opaque_existential_1(uint64_t *result, uint64_t *a2)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE v11[24];

  if (result != a2)
  {
    v3 = result;
    v4 = result[3];
    v5 = a2[3];
    if (v4 == v5)
    {
      v9 = *(_QWORD *)(v4 - 8);
      if ((*(_BYTE *)(v9 + 82) & 2) != 0)
      {
        v10 = *a2;
        swift_retain();
        result = (uint64_t *)swift_release();
        *v3 = v10;
      }
      else
      {
        return (uint64_t *)(*(uint64_t (**)(uint64_t *, uint64_t *, uint64_t))(v9 + 24))(result, a2, result[3]);
      }
    }
    else
    {
      result[3] = v5;
      result[4] = a2[4];
      v6 = *(_QWORD *)(v4 - 8);
      v7 = *(_QWORD *)(v5 - 8);
      v8 = *(_DWORD *)(v7 + 80);
      if ((*(_BYTE *)(v6 + 82) & 2) != 0)
      {
        if ((v8 & 0x20000) != 0)
        {
          *result = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(result, a2, v5);
        }
        return (uint64_t *)swift_release();
      }
      else
      {
        (*(void (**)(_BYTE *, uint64_t *, uint64_t))(v6 + 32))(v11, result, v4);
        if ((v8 & 0x20000) != 0)
        {
          *v3 = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(v3, a2, v5);
        }
        return (uint64_t *)(*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v11, v4);
      }
    }
  }
  return result;
}

__n128 __swift_memcpy40_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for PreviewModifiers(uint64_t a1, uint64_t a2)
{
  __int128 v4;

  __swift_destroy_boxed_opaque_existential_1(a1);
  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for PreviewModifiers(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 40))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PreviewModifiers(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 40) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for PreviewModifiers()
{
  return &type metadata for PreviewModifiers;
}

uint64_t type metadata accessor for ModifierContextCache()
{
  return objc_opt_self();
}

uint64_t __swift_deallocate_boxed_opaque_existential_1(uint64_t result)
{
  if ((*(_DWORD *)(*(_QWORD *)(*(_QWORD *)(result + 24) - 8) + 80) & 0x20000) != 0)
    JUMPOUT(0x2207770ECLL);
  return result;
}

unint64_t sub_21C1E923C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_255249B38;
  if (!qword_255249B38)
  {
    v1 = sub_21C2480A8();
    result = MEMORY[0x22077702C](MEMORY[0x24BDEF588], v1);
    atomic_store(result, (unint64_t *)&qword_255249B38);
  }
  return result;
}

unint64_t sub_21C1E9284()
{
  unint64_t result;

  result = qword_255249B40[0];
  if (!qword_255249B40[0])
  {
    result = MEMORY[0x22077702C](&unk_21C2494E0, &type metadata for EmptyWrapper);
    atomic_store(result, qword_255249B40);
  }
  return result;
}

uint64_t sub_21C1E92C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  v4 = *(_QWORD *)(a1 - 8);
  MEMORY[0x24BDAC7A8]();
  v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v4 + 16))(v6);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v4 + 32))(a2, v6, a1);
}

uint64_t type metadata accessor for SingleWrapper(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for SingleWrapper);
}

void type metadata accessor for CompoundWrapper()
{
  JUMPOUT(0x220776FA8);
}

uint64_t sub_21C1E9360()
{
  uint64_t v0;

  sub_21C24863C();
  *(_QWORD *)(v0 + 16) = sub_21C248630();
  sub_21C2485E8();
  return swift_task_switch();
}

uint64_t sub_21C1E93C8()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21C1E9400(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v3[2] = sub_21C24863C();
  v3[3] = sub_21C248630();
  v6 = (_QWORD *)swift_task_alloc();
  v3[4] = v6;
  v7 = *(_QWORD *)(a3 + 16);
  v8 = *(_QWORD *)(a3 + 24);
  *v6 = v3;
  v6[1] = sub_21C1E9480;
  return sub_21C1E8330(a1, v9, v7, v8);
}

uint64_t sub_21C1E9480()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 40) = v0;
  swift_task_dealloc();
  sub_21C2485E8();
  return swift_task_switch();
}

uint64_t sub_21C1E9508()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21C1E953C()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21C1E9570(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t AssociatedTypeWitness;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v4 = *(_QWORD *)(a2 + 16);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v6 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v7 = MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v9 = (char *)&v13 - v8;
  MEMORY[0x24BDAC7A8](v7);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))((char *)&v13 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v2, v4);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v9, a1, AssociatedTypeWitness);
  return sub_21C247D54();
}

uint64_t sub_21C1E9670(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;

  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_21C1E664C;
  return sub_21C1E9400(a1, a2, a3);
}

uint64_t sub_21C1E96DC(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t AssociatedTypeWitness;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5[191] = v4;
  v5[185] = a4;
  v5[179] = a3;
  v5[173] = a2;
  v5[167] = a1;
  v5[197] = a4[5];
  v5[203] = a4[3];
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5[209] = AssociatedTypeWitness;
  v5[210] = *(_QWORD *)(AssociatedTypeWitness - 8);
  v5[211] = swift_task_alloc();
  v8 = *(a4 - 1);
  v5[212] = v8;
  v5[213] = *(_QWORD *)(v8 + 64);
  v5[214] = swift_task_alloc();
  v5[215] = swift_task_alloc();
  v5[216] = a4[4];
  v5[217] = a4[2];
  v9 = swift_getAssociatedTypeWitness();
  v5[218] = v9;
  v5[219] = *(_QWORD *)(v9 - 8);
  v5[220] = swift_task_alloc();
  sub_21C24863C();
  v5[221] = sub_21C248630();
  v5[222] = sub_21C2485E8();
  v5[223] = v10;
  return swift_task_switch();
}

uint64_t sub_21C1E9828()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  char *v10;
  void (*v11)(char *, uint64_t, uint64_t);
  char *v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(void);
  uint64_t v18;
  uint64_t v19;

  v1 = v0[217];
  v2 = v0[216];
  v16 = v2;
  v14 = v0[215];
  v19 = v0[214];
  v3 = v0[213];
  v4 = v0[212];
  v5 = v0[203];
  v6 = v0[197];
  v7 = v0[185];
  v15 = v0[179];
  v17 = *(void (**)(void))(v4 + 16);
  v18 = v0[191];
  v17();
  v8 = (*(unsigned __int8 *)(v4 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v9 = (v3 + v8 + 7) & 0xFFFFFFFFFFFFFFF8;
  v10 = (char *)swift_allocObject();
  v0[224] = v10;
  *((_QWORD *)v10 + 2) = v1;
  *((_QWORD *)v10 + 3) = v5;
  *((_QWORD *)v10 + 4) = v2;
  *((_QWORD *)v10 + 5) = v6;
  v11 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 32);
  v11(&v10[v8], v14, v7);
  *(_QWORD *)&v10[v9] = v15;
  swift_retain();
  swift_retain();
  swift_asyncLet_begin();
  ((void (*)(uint64_t, uint64_t, uint64_t))v17)(v19, v18, v7);
  v12 = (char *)swift_allocObject();
  v0[225] = v12;
  *((_QWORD *)v12 + 2) = v1;
  *((_QWORD *)v12 + 3) = v5;
  *((_QWORD *)v12 + 4) = v16;
  *((_QWORD *)v12 + 5) = v6;
  v11(&v12[v8], v19, v7);
  *(_QWORD *)&v12[v9] = v15;
  swift_retain();
  swift_asyncLet_begin();
  return swift_asyncLet_get_throwing();
}

uint64_t sub_21C1E9A04()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 1808) = v0;
  if (v0)
    return swift_asyncLet_finish();
  else
    return swift_task_switch();
}

uint64_t sub_21C1E9A38()
{
  _QWORD *v0;

  (*(void (**)(_QWORD, _QWORD, _QWORD))(v0[219] + 16))(v0[167], v0[220], v0[218]);
  return swift_asyncLet_get_throwing();
}

uint64_t sub_21C1E9A90()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 1816) = v0;
  return swift_task_switch();
}

uint64_t sub_21C1E9AB8()
{
  _QWORD *v0;

  (*(void (**)(_QWORD, _QWORD, _QWORD))(v0[210] + 16))(v0[173], v0[211], v0[209]);
  return swift_asyncLet_finish();
}

uint64_t sub_21C1E9B10()
{
  return swift_task_switch();
}

uint64_t sub_21C1E9B24()
{
  return swift_asyncLet_finish();
}

uint64_t sub_21C1E9B3C()
{
  return swift_task_switch();
}

uint64_t sub_21C1E9B50()
{
  uint64_t v0;

  swift_release();
  swift_release_n();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21C1E9BE0()
{
  return swift_task_switch();
}

uint64_t sub_21C1E9BF4()
{
  return swift_asyncLet_finish();
}

uint64_t sub_21C1E9C0C()
{
  return swift_task_switch();
}

uint64_t sub_21C1E9C20()
{
  uint64_t v0;

  swift_release();
  swift_release_n();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21C1E9CB8()
{
  _QWORD *v0;

  (*(void (**)(_QWORD, _QWORD))(v0[219] + 8))(v0[167], v0[218]);
  return swift_asyncLet_finish();
}

uint64_t sub_21C1E9D0C()
{
  return swift_task_switch();
}

uint64_t sub_21C1E9D20()
{
  return swift_asyncLet_finish();
}

uint64_t sub_21C1E9D38()
{
  return swift_task_switch();
}

uint64_t sub_21C1E9D4C()
{
  uint64_t v0;

  swift_release();
  swift_release_n();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21C1E9DE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;

  v6[5] = a4;
  v6[6] = a6;
  v6[3] = a2;
  v6[4] = a3;
  v6[2] = a1;
  return swift_task_switch();
}

uint64_t sub_21C1E9E04()
{
  uint64_t v0;

  sub_21C24863C();
  *(_QWORD *)(v0 + 56) = sub_21C248630();
  sub_21C2485E8();
  return swift_task_switch();
}

uint64_t sub_21C1E9E6C()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t (*v4)(_QWORD, _QWORD, _QWORD, _QWORD);

  v1 = v0[6];
  swift_release();
  v4 = (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD))(**(int **)(v1 + 32) + *(_QWORD *)(v1 + 32));
  v2 = (_QWORD *)swift_task_alloc();
  v0[8] = v2;
  *v2 = v0;
  v2[1] = sub_21C1E9ED8;
  return v4(v0[2], v0[4], v0[5], v0[6]);
}

uint64_t sub_21C1E9ED8()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_21C1E9F20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;

  v7[11] = a6;
  v7[12] = a7;
  v7[9] = a4;
  v7[10] = a5;
  v7[7] = a2;
  v7[8] = a3;
  v7[6] = a1;
  return swift_task_switch();
}

void sub_21C1E9F44()
{
  _OWORD *v0;

  v0[1] = *(_OWORD *)((char *)v0 + 72);
  v0[2] = *(_OWORD *)((char *)v0 + 88);
  type metadata accessor for CompoundWrapper();
}

uint64_t sub_21C1E9F74(uint64_t a1)
{
  uint64_t v1;

  *(_DWORD *)(v1 + 120) = *(_DWORD *)(a1 + 52);
  sub_21C24863C();
  *(_QWORD *)(v1 + 104) = sub_21C248630();
  sub_21C2485E8();
  return swift_task_switch();
}

uint64_t sub_21C1E9FD0()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t (*v4)(_QWORD, _QWORD, _QWORD, _QWORD);

  v1 = v0[12];
  swift_release();
  v4 = (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD))(**(int **)(v1 + 32) + *(_QWORD *)(v1 + 32));
  v2 = (_QWORD *)swift_task_alloc();
  v0[14] = v2;
  *v2 = v0;
  v2[1] = sub_21C1EA054;
  return v4(v0[6], v0[8], v0[10], v0[12]);
}

uint64_t sub_21C1EA054()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

void sub_21C1EA09C(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t TupleTypeMetadata2;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  void (*v24)(char *, uint64_t, uint64_t);
  void (*v25)(char *, uint64_t, uint64_t);
  char *v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t AssociatedConformanceWitness;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t AssociatedTypeWitness;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;

  v35 = a2;
  v39 = a1;
  v45 = a4;
  v5 = a3[3];
  v49 = a3[5];
  v40 = v5;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v46 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v50 = (char *)&v33 - v6;
  v41 = a3;
  v7 = a3[2];
  v47 = a3[4];
  v37 = v7;
  v42 = swift_getAssociatedTypeWitness();
  v43 = *(_QWORD *)(v42 - 8);
  MEMORY[0x24BDAC7A8](v42);
  v48 = (char *)&v33 - v8;
  v9 = swift_getAssociatedTypeWitness();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v36 = (char *)&v33 - v11;
  v12 = swift_getAssociatedTypeWitness();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v33 = (char *)&v33 - v14;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v38 = *(_QWORD *)(TupleTypeMetadata2 - 8);
  v16 = MEMORY[0x24BDAC7A8](TupleTypeMetadata2);
  v18 = (char *)&v33 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = MEMORY[0x24BDAC7A8](v16);
  v21 = (char *)&v33 - v20;
  v22 = *(int *)(v19 + 48);
  v34 = v19;
  v23 = (char *)&v33 + v22 - v20;
  v24 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 16);
  v24((char *)&v33 - v20, v39, v12);
  v25 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  v25(v23, v35, v9);
  v26 = &v18[*(int *)(TupleTypeMetadata2 + 48)];
  v24(v18, (uint64_t)v21, v12);
  v25(v26, (uint64_t)v23, v9);
  v27 = v33;
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v33, v18, v12);
  v28 = v36;
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v36, v26, v9);
  (*(void (**)(char *, uint64_t))(v47 + 40))(v27, v37);
  (*(void (**)(char *, uint64_t))(v49 + 40))(v28, v40);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v28, v9);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v27, v12);
  (*(void (**)(char *, uint64_t))(v38 + 8))(v21, v34);
  v29 = v42;
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v31 = AssociatedTypeWitness;
  v32 = swift_getAssociatedConformanceWitness();
  (*(void (**)(uint64_t, char *, uint64_t))(v43 + 32))(v45, v48, v29);
  v51 = v29;
  v52 = v31;
  v53 = AssociatedConformanceWitness;
  v54 = v32;
  type metadata accessor for CompoundViewModifier();
}

uint64_t sub_21C1EA428(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v3 - 160) + 32))(v1 + *(int *)(a1 + 52), *(_QWORD *)(v3 - 128), v2);
}

uint64_t sub_21C1EA464(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v3;
  uint64_t v7;
  _QWORD *v8;

  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  v7 = a1 + *(int *)(swift_getTupleTypeMetadata2() + 48);
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v8;
  *v8 = v3;
  v8[1] = sub_21C1EBB98;
  return sub_21C1E96DC(a1, v7, a2, a3);
}

void sub_21C1EA544(uint64_t a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;

  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  v6 = a1 + *(int *)(swift_getTupleTypeMetadata2() + 48);
  sub_21C1EA09C(a1, v6, a2, a3);
}

uint64_t sub_21C1EA5F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(char *, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD v31[2];
  _QWORD v32[2];

  v4 = v3;
  v28 = a1;
  v30 = a3;
  MEMORY[0x22077702C](&unk_21C249458);
  v6 = sub_21C2480D8();
  v7 = *(_QWORD *)(a2 + 16);
  v8 = sub_21C247EEC();
  v27 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v25 - v9;
  v26 = *(_QWORD *)(a2 + 24);
  v11 = sub_21C247EEC();
  v29 = *(_QWORD *)(v11 - 8);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v25 - v15;
  v17 = MEMORY[0x22077702C](MEMORY[0x24BDEFB78], v6);
  MEMORY[0x2207763E4](v4, v6, v7, v17);
  v18 = v4 + *(int *)(a2 + 52);
  v19 = *(_QWORD *)(a2 + 32);
  v32[0] = v17;
  v32[1] = v19;
  v20 = MEMORY[0x24BDED308];
  v21 = MEMORY[0x22077702C](MEMORY[0x24BDED308], v8, v32);
  MEMORY[0x2207763E4](v18, v8, v26, v21);
  (*(void (**)(char *, uint64_t))(v27 + 8))(v10, v8);
  v22 = *(_QWORD *)(a2 + 40);
  v31[0] = v21;
  v31[1] = v22;
  MEMORY[0x22077702C](v20, v11, v31);
  sub_21C230710((uint64_t)v14, v11, (uint64_t)v16);
  v23 = *(void (**)(char *, uint64_t))(v29 + 8);
  v23(v14, v11);
  sub_21C22E6B8((uint64_t)v16, v11, v30);
  return ((uint64_t (*)(char *, uint64_t))v23)(v16, v11);
}

uint64_t sub_21C1EA800()
{
  return sub_21C247DF0();
}

uint64_t sub_21C1EA81C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  return sub_21C1EA828(a1, a2, a3, a4, a5, (uint64_t (*)(_QWORD, _QWORD *))type metadata accessor for CompoundViewModifier, a6);
}

uint64_t sub_21C1EA828@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t (*a6)(_QWORD, _QWORD *)@<X5>, uint64_t a7@<X8>)
{
  uint64_t v7;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t (*v24)(_QWORD, _QWORD *);
  _QWORD v25[4];

  v23 = a5;
  v24 = a6;
  v13 = *(_QWORD *)(a3 - 8);
  v14 = ((uint64_t (*)(void))MEMORY[0x24BDAC7A8])();
  v16 = (char *)&v23 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = *(_QWORD *)(v17 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v20 = (char *)&v23 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v18 + 16))(v20, v7, a2);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v16, a1, a3);
  (*(void (**)(uint64_t, char *, uint64_t))(v18 + 32))(a7, v20, a2);
  v25[0] = a2;
  v25[1] = a3;
  v25[2] = a4;
  v25[3] = v23;
  v21 = v24(0, v25);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v13 + 32))(a7 + *(int *)(v21 + 52), v16, a3);
}

void type metadata accessor for CompoundViewModifier()
{
  JUMPOUT(0x220776FA8);
}

uint64_t sub_21C1EA954()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_21C1EA980()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_21C1EAA0C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v13;
  uint64_t v14;

  v4 = a1;
  v5 = *(_QWORD *)(a3 + 24);
  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v7 = *(_QWORD *)(v5 - 8);
  v8 = *(_DWORD *)(v7 + 80);
  v9 = *(_QWORD *)(v6 + 64) + v8;
  v10 = (*(_BYTE *)(v6 + 80) | *(_BYTE *)(v7 + 80));
  if (v10 > 7
    || ((*(_DWORD *)(v6 + 80) | *(_DWORD *)(v7 + 80)) & 0x100000) != 0
    || (v9 & (unint64_t)~v8) + *(_QWORD *)(v7 + 64) > 0x18)
  {
    v13 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v13 + ((v10 + 16) & ~v10));
    swift_retain();
  }
  else
  {
    v14 = ~v8;
    (*(void (**)(uint64_t *, uint64_t *))(v6 + 16))(a1, a2);
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v7 + 16))(((unint64_t)v4 + v9) & v14, ((unint64_t)a2 + v9) & v14, v5);
  }
  return v4;
}

uint64_t sub_21C1EAADC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  (*(void (**)(void))(v4 + 8))();
  return (*(uint64_t (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 24) - 8) + 8))((*(_QWORD *)(v4 + 64) + a1 + *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 24) - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 24) - 8) + 80));
}

uint64_t sub_21C1EAB34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v6 + 16))();
  v7 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v7 + 16))((*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v7 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80), (*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v7 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  return a1;
}

uint64_t sub_21C1EABA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v6 + 24))();
  v7 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v7 + 24))((*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v7 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80), (*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v7 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  return a1;
}

uint64_t sub_21C1EAC0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v6 + 32))();
  v7 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v7 + 32))((*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v7 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80), (*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v7 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  return a1;
}

uint64_t sub_21C1EAC78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v6 + 40))();
  v7 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v7 + 40))((*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v7 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80), (*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v7 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  return a1;
}

uint64_t sub_21C1EACE4(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  uint64_t v6;
  unsigned int v7;
  unsigned int v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  char v13;
  int v14;
  unsigned int v15;
  int v16;
  int v17;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= v5)
    v8 = *(_DWORD *)(v4 + 84);
  else
    v8 = *(_DWORD *)(v6 + 84);
  if (!a2)
    return 0;
  v9 = *(unsigned __int8 *)(v6 + 80);
  v10 = *(_QWORD *)(v4 + 64) + v9;
  v11 = a2 - v8;
  if (a2 <= v8)
    goto LABEL_23;
  v12 = (v10 & ~v9) + *(_QWORD *)(v6 + 64);
  v13 = 8 * v12;
  if (v12 <= 3)
  {
    v15 = ((v11 + ~(-1 << v13)) >> v13) + 1;
    if (HIWORD(v15))
    {
      v14 = *(_DWORD *)(a1 + v12);
      if (!v14)
        goto LABEL_23;
      goto LABEL_14;
    }
    if (v15 > 0xFF)
    {
      v14 = *(unsigned __int16 *)(a1 + v12);
      if (!*(_WORD *)(a1 + v12))
        goto LABEL_23;
      goto LABEL_14;
    }
    if (v15 < 2)
    {
LABEL_23:
      if (v8)
      {
        if (v5 >= v7)
          return (*(uint64_t (**)(void))(v4 + 48))();
        else
          return (*(uint64_t (**)(uint64_t))(v6 + 48))((v10 + a1) & ~v9);
      }
      return 0;
    }
  }
  v14 = *(unsigned __int8 *)(a1 + v12);
  if (!*(_BYTE *)(a1 + v12))
    goto LABEL_23;
LABEL_14:
  v16 = (v14 - 1) << v13;
  if (v12 > 3)
    v16 = 0;
  if (!(_DWORD)v12)
    return v8 + v16 + 1;
  if (v12 <= 3)
    v17 = (v10 & ~(_DWORD)v9) + *(_DWORD *)(v6 + 64);
  else
    v17 = 4;
  return ((uint64_t (*)(void))((char *)&loc_21C1EADC0 + 4 * byte_21C249310[v17 - 1]))();
}

void sub_21C1EAE3C(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  size_t v8;
  unsigned int v9;
  unsigned int v10;
  unsigned int v11;
  int v12;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v6 = *(_QWORD *)(*(_QWORD *)(a4 + 24) - 8);
  if (*(_DWORD *)(v6 + 84) <= *(_DWORD *)(v5 + 84))
    v7 = *(_DWORD *)(v5 + 84);
  else
    v7 = *(_DWORD *)(v6 + 84);
  v8 = ((*(_QWORD *)(v5 + 64) + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))
     + *(_QWORD *)(v6 + 64);
  if (a3 > v7)
  {
    if (v8 <= 3)
    {
      v11 = ((a3 - v7 + ~(-1 << (8 * v8))) >> (8 * v8)) + 1;
      if (HIWORD(v11))
      {
        v9 = 4u;
      }
      else if (v11 >= 0x100)
      {
        v9 = 2;
      }
      else
      {
        v9 = v11 > 1;
      }
    }
    else
    {
      v9 = 1u;
    }
  }
  else
  {
    v9 = 0;
  }
  if (v7 < a2)
  {
    v10 = ~v7 + a2;
    if (v8 < 4)
    {
      if ((_DWORD)v8)
      {
        v12 = v10 & ~(-1 << (8 * v8));
        bzero(a1, v8);
        if ((_DWORD)v8 == 3)
        {
          *a1 = v12;
          *((_BYTE *)a1 + 2) = BYTE2(v12);
        }
        else if ((_DWORD)v8 == 2)
        {
          *a1 = v12;
        }
        else
        {
          *(_BYTE *)a1 = v12;
        }
      }
    }
    else
    {
      bzero(a1, v8);
      *(_DWORD *)a1 = v10;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X16 }
}

uint64_t sub_21C1EB03C()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_21C1EB044()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_21C1EB0B0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;

  v3 = a1;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 80);
  if (v5 <= 7 && *(_QWORD *)(v4 + 64) <= 0x18uLL && (*(_DWORD *)(v4 + 80) & 0x100000) == 0)
  {
    (*(void (**)(uint64_t *))(v4 + 16))(a1);
  }
  else
  {
    v8 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v8 + ((v5 + 16) & ~v5));
    swift_retain();
  }
  return v3;
}

uint64_t sub_21C1EB120(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 8))();
}

uint64_t sub_21C1EB130(uint64_t a1, uint64_t a2, uint64_t a3)
{
  (*(void (**)(void))(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 16))();
  return a1;
}

uint64_t sub_21C1EB160(uint64_t a1, uint64_t a2, uint64_t a3)
{
  (*(void (**)(void))(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 24))();
  return a1;
}

uint64_t sub_21C1EB190(uint64_t a1, uint64_t a2, uint64_t a3)
{
  (*(void (**)(void))(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 32))();
  return a1;
}

uint64_t sub_21C1EB1C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  (*(void (**)(void))(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 40))();
  return a1;
}

uint64_t sub_21C1EB1F0(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  char v8;
  int v9;
  unsigned int v10;
  int v11;

  if (!a2)
    return 0;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  v6 = a2 - v5;
  if (a2 <= v5)
    goto LABEL_18;
  v7 = *(_QWORD *)(v4 + 64);
  v8 = 8 * v7;
  if (v7 <= 3)
  {
    v10 = ((v6 + ~(-1 << v8)) >> v8) + 1;
    if (HIWORD(v10))
    {
      v9 = *(_DWORD *)(a1 + v7);
      if (!v9)
        goto LABEL_18;
      goto LABEL_11;
    }
    if (v10 > 0xFF)
    {
      v9 = *(unsigned __int16 *)(a1 + v7);
      if (!*(_WORD *)(a1 + v7))
        goto LABEL_18;
      goto LABEL_11;
    }
    if (v10 < 2)
    {
LABEL_18:
      if (v5)
        return (*(uint64_t (**)(void))(v4 + 48))();
      return 0;
    }
  }
  v9 = *(unsigned __int8 *)(a1 + v7);
  if (!*(_BYTE *)(a1 + v7))
    goto LABEL_18;
LABEL_11:
  v11 = (v9 - 1) << v8;
  if (v7 > 3)
    v11 = 0;
  if (!(_DWORD)v7)
    return v5 + v11 + 1;
  if (v7 > 3)
    LODWORD(v7) = 4;
  return ((uint64_t (*)(void))((char *)&loc_21C1EB2A0 + 4 * byte_21C24931E[(v7 - 1)]))();
}

void sub_21C1EB2F0(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6;
  unsigned int v7;
  size_t v8;
  BOOL v9;
  unsigned int v10;
  unsigned int v11;
  unsigned int v12;
  unsigned int v13;
  int v14;

  v6 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v7 = *(_DWORD *)(v6 + 84);
  v8 = *(_QWORD *)(v6 + 64);
  v9 = a3 >= v7;
  v10 = a3 - v7;
  if (v10 != 0 && v9)
  {
    if (v8 <= 3)
    {
      v13 = ((v10 + ~(-1 << (8 * v8))) >> (8 * v8)) + 1;
      if (HIWORD(v13))
      {
        v11 = 4u;
      }
      else if (v13 >= 0x100)
      {
        v11 = 2;
      }
      else
      {
        v11 = v13 > 1;
      }
    }
    else
    {
      v11 = 1u;
    }
  }
  else
  {
    v11 = 0;
  }
  if (v7 < a2)
  {
    v12 = ~v7 + a2;
    if (v8 < 4)
    {
      if ((_DWORD)v8)
      {
        v14 = v12 & ~(-1 << (8 * v8));
        bzero(a1, v8);
        if ((_DWORD)v8 == 3)
        {
          *a1 = v14;
          *((_BYTE *)a1 + 2) = BYTE2(v14);
        }
        else if ((_DWORD)v8 == 2)
        {
          *a1 = v14;
        }
        else
        {
          *(_BYTE *)a1 = v14;
        }
      }
    }
    else
    {
      bzero(a1, *(_QWORD *)(v6 + 64));
      *(_DWORD *)a1 = v12;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X11 }
}

ValueMetadata *type metadata accessor for EmptyWrapper()
{
  return &type metadata for EmptyWrapper;
}

uint64_t sub_21C1EB4B0()
{
  return sub_21C1EB4C8();
}

uint64_t sub_21C1EB4BC()
{
  return sub_21C1EB4C8();
}

uint64_t sub_21C1EB4C8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_21C1EB4F8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_21C1EB52C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_21C1EB53C()
{
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_21C1EB568(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v7 = v1[6];
  v6 = v1[7];
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_21C1E664C;
  return sub_21C1E8A70(a1, v4, v5, v7, v6);
}

uint64_t sub_21C1EB5F4(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5)
{
  uint64_t *boxed_opaque_existential_1;
  uint64_t v10;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;

  v13 = a4;
  v14 = a5;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v12);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a4 - 8) + 32))(boxed_opaque_existential_1, a2, a4);
  v10 = *a3;
  *(_QWORD *)(v10 + 16) = a1 + 1;
  return sub_21C1EB66C(&v12, v10 + 40 * a1 + 32);
}

uint64_t sub_21C1EB66C(__int128 *a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;

  v2 = *a1;
  v3 = a1[1];
  *(_QWORD *)(a2 + 32) = *((_QWORD *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

uint64_t sub_21C1EB684(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_255249D88);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_21C1EB6C8()
{
  uint64_t v0;
  uint64_t v1;
  __int128 v2;

  v2 = *(_OWORD *)(v0 + 32);
  *(_OWORD *)(v1 + 16) = *(_OWORD *)(v0 + 16);
  *(_OWORD *)(v1 + 32) = v2;
  type metadata accessor for CompoundWrapper();
}

uint64_t sub_21C1EB700(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int64x2_t v10;
  int64x2_t v11;

  v4 = *(_QWORD *)(a1 - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = v2 + v5;
  v7 = *(_QWORD *)(v2 + ((*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFF8));
  v8 = swift_task_alloc();
  *(_QWORD *)(v3 + 48) = v8;
  *(_QWORD *)v8 = v3;
  *(_QWORD *)(v8 + 8) = sub_21C1EB784;
  *(int64x2_t *)(v8 + 40) = vzip1q_s64(v11, v10);
  *(_QWORD *)(v8 + 24) = v6;
  *(_QWORD *)(v8 + 32) = v7;
  *(_QWORD *)(v8 + 16) = v1;
  return swift_task_switch();
}

uint64_t sub_21C1EB784()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

void objectdestroy_19Tm()
{
  type metadata accessor for CompoundWrapper();
}

uint64_t sub_21C1EB814(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(a1 - 8) + 80);
  v5 = v2 + ((v4 + 48) & ~v4);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v5, v1);
  (*(void (**)(uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v5 + *(int *)(a1 + 52));
  swift_release();
  return swift_deallocObject();
}

void sub_21C1EB8A8()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = v0[3];
  v3 = v0[4];
  v4 = v0[5];
  v1[2] = v0[2];
  v1[3] = v2;
  v1[4] = v3;
  v1[5] = v4;
  type metadata accessor for CompoundWrapper();
}

uint64_t sub_21C1EB8EC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;

  v8 = *(_QWORD *)(a1 - 8);
  v9 = (*(unsigned __int8 *)(v8 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v10 = v2 + v9;
  v11 = *(_QWORD *)(v2 + ((*(_QWORD *)(v8 + 64) + v9 + 7) & 0xFFFFFFFFFFFFF8));
  v12 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 48) = v12;
  *v12 = v4;
  v12[1] = sub_21C1EBB9C;
  v12[11] = v6;
  v12[12] = v7;
  v12[9] = v3;
  v12[10] = v5;
  v12[7] = v10;
  v12[8] = v11;
  v12[6] = v1;
  return swift_task_switch();
}

uint64_t __swift_instantiateGenericMetadata(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD v6[3];

  v6[0] = a2;
  v6[1] = a3;
  v6[2] = a4;
  return MEMORY[0x220776FA8](a1, v6, a5);
}

uint64_t sub_21C1EB9A0()
{
  return MEMORY[0x24BDEC0A0];
}

void sub_21C1EB9AC()
{
  sub_21C247D60();
  JUMPOUT(0x22077702CLL);
}

void sub_21C1EB9D4()
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for CompoundViewModifier();
}

uint64_t sub_21C1EBA90(uint64_t a1)
{
  return MEMORY[0x22077702C](&unk_21C249458, a1);
}

void sub_21C1EBABC()
{
  type metadata accessor for CompoundViewModifier();
}

uint64_t sub_21C1EBAF0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  MEMORY[0x22077702C](&unk_21C249458, a1);
  v3 = sub_21C2480D8();
  v4 = sub_21C247EEC();
  v5 = sub_21C247EEC();
  v10 = MEMORY[0x22077702C](MEMORY[0x24BDEFB78], v3);
  v11 = v2;
  v6 = MEMORY[0x24BDED308];
  v8 = MEMORY[0x22077702C](MEMORY[0x24BDED308], v4, &v10);
  v9 = v1;
  return MEMORY[0x22077702C](v6, v5, &v8);
}

unint64_t sub_21C1EBBA0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  __int128 *v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t result;
  char v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;
  _QWORD v22[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_255249FE0);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(_QWORD *)(a1 + 16))
  {
    v7 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_255249FE8);
  v6 = sub_21C2488DC();
  v7 = (_QWORD *)v6;
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  v9 = (__int128 *)&v5[*(int *)(v2 + 48)];
  v10 = v6 + 64;
  v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v22[1] = a1;
  v12 = a1 + v11;
  v13 = *(_QWORD *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_21C1F03EC(v12, (uint64_t)v5, &qword_255249FE0);
    result = sub_21C1F62B4((uint64_t)v5);
    if ((v15 & 1) != 0)
      break;
    v16 = result;
    *(_QWORD *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v17 = v7[6];
    v18 = sub_21C247094();
    (*(void (**)(unint64_t, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v17 + *(_QWORD *)(*(_QWORD *)(v18 - 8) + 72) * v16, v5, v18);
    result = sub_21C1EB66C(v9, v7[7] + 40 * v16);
    v19 = v7[2];
    v20 = __OFADD__(v19, 1);
    v21 = v19 + 1;
    if (v20)
      goto LABEL_11;
    v7[2] = v21;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_21C1EBD40(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  __int128 *v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t result;
  char v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;
  _QWORD v22[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_255249FD0);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(_QWORD *)(a1 + 16))
  {
    v7 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_255249FD8);
  v6 = sub_21C2488DC();
  v7 = (_QWORD *)v6;
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  v9 = (__int128 *)&v5[*(int *)(v2 + 48)];
  v10 = v6 + 64;
  v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v22[1] = a1;
  v12 = a1 + v11;
  v13 = *(_QWORD *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_21C1F03EC(v12, (uint64_t)v5, &qword_255249FD0);
    result = sub_21C1F634C((uint64_t)v5);
    if ((v15 & 1) != 0)
      break;
    v16 = result;
    *(_QWORD *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v17 = v7[6];
    v18 = sub_21C246FB0();
    (*(void (**)(unint64_t, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v17 + *(_QWORD *)(*(_QWORD *)(v18 - 8) + 72) * v16, v5, v18);
    result = sub_21C1EB66C(v9, v7[7] + 40 * v16);
    v19 = v7[2];
    v20 = __OFADD__(v19, 1);
    v21 = v19 + 1;
    if (v20)
      goto LABEL_11;
    v7[2] = v21;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_21C1EBEE0(uint64_t a1)
{
  return sub_21C1EBF28(a1, &qword_255249F98, &qword_255249FA0, (uint64_t (*)(char *))sub_21C1F6448, (uint64_t (*)(_QWORD))MEMORY[0x24BE783F0]);
}

unint64_t sub_21C1EBF04(uint64_t a1)
{
  return sub_21C1EBF28(a1, &qword_255249F88, &qword_255249F90, (uint64_t (*)(char *))sub_21C1F6448, (uint64_t (*)(_QWORD))MEMORY[0x24BE783F0]);
}

unint64_t sub_21C1EBF28(uint64_t a1, uint64_t *a2, uint64_t *a3, uint64_t (*a4)(char *), uint64_t (*a5)(_QWORD))
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t result;
  char v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;
  _QWORD v29[2];
  uint64_t (*v30)(_QWORD);
  uint64_t (*v31)(char *);

  v30 = a5;
  v31 = a4;
  v8 = __swift_instantiateConcreteTypeFromMangledName(a2);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(_QWORD *)(a1 + 16))
  {
    v13 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(a3);
  v12 = sub_21C2488DC();
  v13 = (_QWORD *)v12;
  v14 = *(_QWORD *)(a1 + 16);
  if (!v14)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v13;
  }
  v15 = *(int *)(v8 + 48);
  v16 = a1;
  v17 = v12 + 64;
  v18 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v29[1] = v16;
  v19 = v16 + v18;
  v20 = *(_QWORD *)(v9 + 72);
  swift_retain();
  while (1)
  {
    sub_21C1F03EC(v19, (uint64_t)v11, a2);
    result = v31(v11);
    if ((v22 & 1) != 0)
      break;
    v23 = result;
    *(_QWORD *)(v17 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v24 = v13[6];
    v25 = v30(0);
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 32))(v24 + *(_QWORD *)(*(_QWORD *)(v25 - 8) + 72) * v23, v11, v25);
    *(_OWORD *)(v13[7] + 16 * v23) = *(_OWORD *)&v11[v15];
    v26 = v13[2];
    v27 = __OFADD__(v26, 1);
    v28 = v26 + 1;
    if (v27)
      goto LABEL_11;
    v13[2] = v28;
    v19 += v20;
    if (!--v14)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_21C1EC0C4(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t result;
  char v8;
  uint64_t *v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  __int128 v19;
  uint64_t v20;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_255249F28);
  v2 = (_QWORD *)sub_21C2488DC();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  v4 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_21C1F03EC(v4, (uint64_t)&v16, &qword_255249F30);
    v5 = v16;
    v6 = v17;
    result = sub_21C1F63E4(v16, v17);
    if ((v8 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v9 = (uint64_t *)(v2[6] + 16 * result);
    *v9 = v5;
    v9[1] = v6;
    v10 = v2[7] + 40 * result;
    v11 = v18;
    v12 = v19;
    *(_QWORD *)(v10 + 32) = v20;
    *(_OWORD *)v10 = v11;
    *(_OWORD *)(v10 + 16) = v12;
    v13 = v2[2];
    v14 = __OFADD__(v13, 1);
    v15 = v13 + 1;
    if (v14)
      goto LABEL_11;
    v2[2] = v15;
    v4 += 56;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_21C1EC20C(uint64_t a1)
{
  return sub_21C1EC230(a1, &qword_255249F78, &qword_255249F80, (uint64_t (*)(char *))sub_21C1F64E0, (uint64_t (*)(_QWORD))MEMORY[0x24BE777F0]);
}

unint64_t sub_21C1EC230(uint64_t a1, uint64_t *a2, uint64_t *a3, uint64_t (*a4)(char *), uint64_t (*a5)(_QWORD))
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t result;
  char v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;
  _QWORD v29[2];
  uint64_t (*v30)(_QWORD);
  uint64_t (*v31)(char *);

  v30 = a5;
  v31 = a4;
  v8 = __swift_instantiateConcreteTypeFromMangledName(a2);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(_QWORD *)(a1 + 16))
  {
    v13 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(a3);
  v12 = sub_21C2488DC();
  v13 = (_QWORD *)v12;
  v14 = *(_QWORD *)(a1 + 16);
  if (!v14)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v13;
  }
  v15 = *(int *)(v8 + 48);
  v16 = a1;
  v17 = v12 + 64;
  v18 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v29[1] = v16;
  v19 = v16 + v18;
  v20 = *(_QWORD *)(v9 + 72);
  swift_retain();
  while (1)
  {
    sub_21C1F03EC(v19, (uint64_t)v11, a2);
    result = v31(v11);
    if ((v22 & 1) != 0)
      break;
    v23 = result;
    *(_QWORD *)(v17 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v24 = v13[6];
    v25 = v30(0);
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 32))(v24 + *(_QWORD *)(*(_QWORD *)(v25 - 8) + 72) * v23, v11, v25);
    *(_QWORD *)(v13[7] + 8 * v23) = *(_QWORD *)&v11[v15];
    v26 = v13[2];
    v27 = __OFADD__(v26, 1);
    v28 = v26 + 1;
    if (v27)
      goto LABEL_11;
    v13[2] = v28;
    v19 += v20;
    if (!--v14)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_21C1EC3CC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t result;
  char v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t updated;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;
  _QWORD v24[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_255249F68);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(_QWORD *)(a1 + 16))
  {
    v7 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_255249F70);
  v6 = sub_21C2488DC();
  v7 = (_QWORD *)v6;
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  v9 = (uint64_t)&v5[*(int *)(v2 + 48)];
  v10 = v6 + 64;
  v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v24[1] = a1;
  v12 = a1 + v11;
  v13 = *(_QWORD *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_21C1F03EC(v12, (uint64_t)v5, &qword_255249F68);
    result = sub_21C1F64E0((uint64_t)v5);
    if ((v15 & 1) != 0)
      break;
    v16 = result;
    *(_QWORD *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v17 = v7[6];
    v18 = sub_21C2472E0();
    (*(void (**)(unint64_t, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v17 + *(_QWORD *)(*(_QWORD *)(v18 - 8) + 72) * v16, v5, v18);
    v19 = v7[7];
    updated = type metadata accessor for EntryPointIndex.UpdateState(0);
    result = sub_21C1F00F0(v9, v19 + *(_QWORD *)(*(_QWORD *)(updated - 8) + 72) * v16, type metadata accessor for EntryPointIndex.UpdateState);
    v21 = v7[2];
    v22 = __OFADD__(v21, 1);
    v23 = v21 + 1;
    if (v22)
      goto LABEL_11;
    v7[2] = v23;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_21C1EC584(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  __int128 *v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t result;
  char v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;
  _QWORD v22[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_255249F58);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(_QWORD *)(a1 + 16))
  {
    v7 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_255249F60);
  v6 = sub_21C2488DC();
  v7 = (_QWORD *)v6;
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  v9 = (__int128 *)&v5[*(int *)(v2 + 48)];
  v10 = v6 + 64;
  v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v22[1] = a1;
  v12 = a1 + v11;
  v13 = *(_QWORD *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_21C1F03EC(v12, (uint64_t)v5, &qword_255249F58);
    result = sub_21C1F64E0((uint64_t)v5);
    if ((v15 & 1) != 0)
      break;
    v16 = result;
    *(_QWORD *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v17 = v7[6];
    v18 = sub_21C2472E0();
    (*(void (**)(unint64_t, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v17 + *(_QWORD *)(*(_QWORD *)(v18 - 8) + 72) * v16, v5, v18);
    result = sub_21C1EB66C(v9, v7[7] + 40 * v16);
    v19 = v7[2];
    v20 = __OFADD__(v19, 1);
    v21 = v19 + 1;
    if (v20)
      goto LABEL_11;
    v7[2] = v21;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_21C1EC724(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  __int128 *v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t result;
  char v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;
  _QWORD v22[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_255249F48);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(_QWORD *)(a1 + 16))
  {
    v7 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_255249F50);
  v6 = sub_21C2488DC();
  v7 = (_QWORD *)v6;
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  v9 = (__int128 *)&v5[*(int *)(v2 + 48)];
  v10 = v6 + 64;
  v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v22[1] = a1;
  v12 = a1 + v11;
  v13 = *(_QWORD *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_21C1F03EC(v12, (uint64_t)v5, &qword_255249F48);
    result = sub_21C1F64E0((uint64_t)v5);
    if ((v15 & 1) != 0)
      break;
    v16 = result;
    *(_QWORD *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v17 = v7[6];
    v18 = sub_21C2472E0();
    (*(void (**)(unint64_t, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v17 + *(_QWORD *)(*(_QWORD *)(v18 - 8) + 72) * v16, v5, v18);
    result = sub_21C1EB66C(v9, v7[7] + 40 * v16);
    v19 = v7[2];
    v20 = __OFADD__(v19, 1);
    v21 = v19 + 1;
    if (v20)
      goto LABEL_11;
    v7[2] = v21;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_21C1EC8C4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  __int128 *v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t result;
  char v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;
  _QWORD v22[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_255249F18);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(_QWORD *)(a1 + 16))
  {
    v7 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_255249F20);
  v6 = sub_21C2488DC();
  v7 = (_QWORD *)v6;
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  v9 = (__int128 *)&v5[*(int *)(v2 + 48)];
  v10 = v6 + 64;
  v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v22[1] = a1;
  v12 = a1 + v11;
  v13 = *(_QWORD *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_21C1F03EC(v12, (uint64_t)v5, &qword_255249F18);
    result = sub_21C1F6578((uint64_t)v5);
    if ((v15 & 1) != 0)
      break;
    v16 = result;
    *(_QWORD *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v17 = v7[6];
    v18 = sub_21C247574();
    (*(void (**)(unint64_t, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v17 + *(_QWORD *)(*(_QWORD *)(v18 - 8) + 72) * v16, v5, v18);
    result = sub_21C1EB66C(v9, v7[7] + 40 * v16);
    v19 = v7[2];
    v20 = __OFADD__(v19, 1);
    v21 = v19 + 1;
    if (v20)
      goto LABEL_11;
    v7[2] = v21;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_21C1ECA64(uint64_t a1)
{
  return sub_21C1EBF28(a1, &qword_255249F08, &qword_255249F10, (uint64_t (*)(char *))sub_21C1F634C, (uint64_t (*)(_QWORD))MEMORY[0x24BE77078]);
}

uint64_t sub_21C1ECA88(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v3[4] = a2;
  v3[5] = v2;
  v3[3] = a1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255249EA0);
  v3[6] = v4;
  v3[7] = *(_QWORD *)(v4 - 8);
  v3[8] = swift_task_alloc();
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_255249EA8);
  v3[9] = v5;
  v3[10] = *(_QWORD *)(v5 - 8);
  v3[11] = swift_task_alloc();
  v6 = sub_21C247418();
  v3[12] = v6;
  v3[13] = *(_QWORD *)(v6 - 8);
  v3[14] = swift_task_alloc();
  v7 = sub_21C246F74();
  v3[15] = v7;
  v3[16] = *(_QWORD *)(v7 - 8);
  v3[17] = swift_task_alloc();
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_255249EB0);
  v3[18] = v8;
  v3[19] = *(_QWORD *)(v8 - 8);
  v3[20] = swift_task_alloc();
  v9 = sub_21C247250();
  v3[21] = v9;
  v3[22] = *(_QWORD *)(v9 - 8);
  v3[23] = swift_task_alloc();
  v3[24] = sub_21C2473D0();
  v3[25] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_21C1ECBE4()
{
  _QWORD *v0;
  int EnumCaseMultiPayload;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  sub_21C2473DC();
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  v2 = v0[25];
  if (EnumCaseMultiPayload == 1)
  {
    v4 = v0[16];
    v3 = v0[17];
    v6 = v0[14];
    v5 = v0[15];
    v7 = v0[12];
    v8 = v0[13];
    v9 = (_QWORD *)v0[5];
    v10 = v2 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255249EB8) + 48);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 32))(v3, v2, v5);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 32))(v6, v10, v7);
    v0[30] = *__swift_project_boxed_opaque_existential_1(v9, v9[3]);
  }
  else
  {
    v12 = v0[22];
    v11 = v0[23];
    v13 = v0[21];
    v0[26] = *(_QWORD *)(v2 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255249EC8) + 48));
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 32))(v11, v2, v13);
    v0[27] = sub_21C247244();
    v0[28] = v14;
    sub_21C24863C();
    v0[29] = sub_21C248630();
    sub_21C2485E8();
  }
  return swift_task_switch();
}

uint64_t sub_21C1ECD44()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = v0[28];
  v3 = v0[26];
  v2 = v0[27];
  v4 = v0[20];
  swift_release();
  sub_21C209934(v2, v1, v3, v4);
  swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_21C1ECDAC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = *(_QWORD *)(v0 + 176);
  v1 = *(_QWORD *)(v0 + 184);
  v3 = *(_QWORD *)(v0 + 160);
  v4 = *(_QWORD *)(v0 + 168);
  v5 = *(_QWORD *)(v0 + 144);
  v6 = *(_QWORD *)(v0 + 152);
  type metadata accessor for LocatedPreview();
  sub_21C247148();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v3, v5);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v4);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21C1ECE94()
{
  _QWORD *v0;
  _QWORD *v1;

  v0[2] = *(_QWORD *)(v0[30] + 112);
  swift_bridgeObjectRetain();
  v1 = (_QWORD *)swift_task_alloc();
  v0[31] = v1;
  *v1 = v0;
  v1[1] = sub_21C1ECEFC;
  return sub_21C1EEB0C(v0[8], v0[14]);
}

uint64_t sub_21C1ECEFC()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_21C1ECF50()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = v0[30];
  v2 = v0[2];
  v0[32] = v2;
  *(_QWORD *)(v1 + 112) = v2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v3 = (_QWORD *)swift_task_alloc();
  v0[33] = v3;
  sub_21C247C64();
  *v3 = v0;
  v3[1] = sub_21C1ECFE0;
  return sub_21C247154();
}

uint64_t sub_21C1ECFE0()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 272) = v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_21C1ED048()
{
  _QWORD *v0;

  (*(void (**)(_QWORD, _QWORD))(v0[7] + 8))(v0[8], v0[6]);
  return swift_task_switch();
}

uint64_t sub_21C1ED08C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = *(_QWORD *)(v0 + 136);
  v9 = *(_QWORD *)(v0 + 128);
  v10 = *(_QWORD *)(v0 + 120);
  v2 = *(_QWORD *)(v0 + 104);
  v8 = *(_QWORD *)(v0 + 112);
  v3 = *(_QWORD *)(v0 + 88);
  v4 = *(_QWORD *)(v0 + 96);
  v6 = *(_QWORD *)(v0 + 72);
  v5 = *(_QWORD *)(v0 + 80);
  *(_QWORD *)(swift_task_alloc() + 16) = v1;
  type metadata accessor for LocatedPreview();
  sub_21C247148();
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v6);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v8, v4);
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v1, v10);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21C1ED1B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_21C1ED740(a1, a2);
}

uint64_t sub_21C1ED1C8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  char *v24;
  void (*v25)(char *, char *, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  dispatch_semaphore_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  __int128 v37;
  NSObject *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t result;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  char *v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  _OWORD v62[2];
  uint64_t v63;

  v60 = a1;
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_255249D88);
  MEMORY[0x24BDAC7A8](v1);
  v53 = (char *)&v47 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_255249FA8);
  v3 = MEMORY[0x24BDAC7A8](v50);
  v54 = (char *)&v47 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v47 - v5;
  v61 = sub_21C247418();
  v59 = *(_QWORD *)(v61 - 8);
  v7 = *(_QWORD *)(v59 + 64);
  v8 = MEMORY[0x24BDAC7A8](v61);
  v51 = (char *)&v47 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v58 = (char *)&v47 - v9;
  v10 = sub_21C246F74();
  v56 = *(_QWORD *)(v10 - 8);
  v57 = v10;
  MEMORY[0x24BDAC7A8](v10);
  v55 = (char *)&v47 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_255249EB0);
  v49 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v47 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_21C247250();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)&v47 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_21C2473D0();
  MEMORY[0x24BDAC7A8](v19);
  v21 = (char *)&v47 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21C2473DC();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v22 = &v21[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255249EB8) + 48)];
    (*(void (**)(char *, char *, uint64_t))(v56 + 32))(v55, v21, v57);
    v24 = v58;
    v23 = v59;
    v25 = *(void (**)(char *, char *, uint64_t))(v59 + 32);
    v26 = v61;
    v25(v58, v22, v61);
    v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_255249EA8);
    v48 = v7;
    v28 = v27;
    v49 = *(_QWORD *)(v27 - 8);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v49 + 56))(v6, 1, 1, v27);
    v29 = sub_21C247C7C();
    v30 = dispatch_semaphore_create(0);
    v31 = sub_21C248654();
    v32 = (uint64_t)v53;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(v53, 1, 1, v31);
    sub_21C1F0134(v52, (uint64_t)v62);
    v33 = v51;
    (*(void (**)(char *, char *, uint64_t))(v23 + 16))(v51, v24, v26);
    v34 = (*(unsigned __int8 *)(v23 + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80);
    v35 = (v48 + v34 + 7) & 0xFFFFFFFFFFFFFFF8;
    v36 = swift_allocObject();
    *(_QWORD *)(v36 + 16) = 0;
    *(_QWORD *)(v36 + 24) = 0;
    *(_QWORD *)(v36 + 32) = v29;
    v37 = v62[1];
    *(_OWORD *)(v36 + 40) = v62[0];
    *(_OWORD *)(v36 + 56) = v37;
    *(_QWORD *)(v36 + 72) = v63;
    v25((char *)(v36 + v34), v33, v26);
    *(_QWORD *)(v36 + v35) = v30;
    swift_retain();
    v38 = v30;
    sub_21C1EDB94(v32, (uint64_t)&unk_255249FB8, v36);
    swift_release();
    v39 = v32;
    v40 = v49;
    sub_21C1F03B0(v39, &qword_255249D88);
    sub_21C248750();
    *(_QWORD *)&v62[0] = v29;
    __swift_instantiateConcreteTypeFromMangledName(&qword_255249FC0);
    sub_21C1F02D0();
    v41 = v54;
    sub_21C247A6C();
    result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v40 + 48))(v41, 1, v28);
    if ((_DWORD)result == 1)
    {
      __break(1u);
    }
    else
    {
      MEMORY[0x24BDAC7A8](result);
      v43 = v55;
      type metadata accessor for LocatedPreview();
      sub_21C247148();
      swift_release();

      (*(void (**)(char *, uint64_t))(v59 + 8))(v58, v61);
      (*(void (**)(char *, uint64_t))(v56 + 8))(v43, v57);
      return (*(uint64_t (**)(char *, uint64_t))(v40 + 8))(v41, v28);
    }
  }
  else
  {
    v44 = *(_QWORD *)&v21[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255249EC8) + 48)];
    (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v18, v21, v15);
    v45 = sub_21C247244();
    sub_21C209934(v45, v46, v44, (uint64_t)v14);
    swift_bridgeObjectRelease();
    type metadata accessor for LocatedPreview();
    sub_21C247148();
    (*(void (**)(char *, uint64_t))(v49 + 8))(v14, v12);
    return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v18, v15);
  }
  return result;
}

uint64_t sub_21C1ED740@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *(_QWORD *)(a1 + 8);
  v3 = *(_QWORD *)(a1 + 16);
  v4 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)a2 = *(_QWORD *)a1;
  *(_QWORD *)(a2 + 8) = v2;
  *(_QWORD *)(a2 + 16) = v3;
  *(_OWORD *)(a2 + 24) = *(_OWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 40) = v4;
  type metadata accessor for LocatedPreview();
  swift_storeEnumTagMultiPayload();
  swift_bridgeObjectRetain();
  return swift_retain();
}

uint64_t sub_21C1ED7C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  uint64_t v8;

  v7[6] = a6;
  v7[7] = a7;
  v7[4] = a4;
  v7[5] = a5;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_255249EA0);
  v7[8] = v8;
  v7[9] = *(_QWORD *)(v8 - 8);
  v7[10] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255249FA8);
  v7[11] = swift_task_alloc();
  v7[12] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_21C1ED860()
{
  _QWORD *v0;
  _QWORD *v1;

  v1 = (_QWORD *)v0[5];
  v0[2] = v0[4];
  v0[13] = swift_getKeyPath();
  v0[14] = *__swift_project_boxed_opaque_existential_1(v1, v1[3]);
  return swift_task_switch();
}

uint64_t sub_21C1ED8BC()
{
  _QWORD *v0;
  _QWORD *v1;

  v0[3] = *(_QWORD *)(v0[14] + 112);
  swift_bridgeObjectRetain();
  v1 = (_QWORD *)swift_task_alloc();
  v0[15] = v1;
  *v1 = v0;
  v1[1] = sub_21C1ED924;
  return sub_21C1EEB0C(v0[10], v0[6]);
}

uint64_t sub_21C1ED924()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_21C1ED978()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = v0[14];
  v2 = v0[3];
  v0[16] = v2;
  *(_QWORD *)(v1 + 112) = v2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v3 = (_QWORD *)swift_task_alloc();
  v0[17] = v3;
  sub_21C247C64();
  *v3 = v0;
  v3[1] = sub_21C1EDA04;
  return sub_21C247154();
}

uint64_t sub_21C1EDA04()
{
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_21C1EDA64()
{
  _QWORD *v0;

  (*(void (**)(_QWORD, _QWORD))(v0[9] + 8))(v0[10], v0[8]);
  return swift_task_switch();
}

uint64_t sub_21C1EDAA8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 96);
  v2 = *(_QWORD *)(v0 + 88);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_255249EA8);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))(v2, 0, 1, v3);
  __swift_instantiateConcreteTypeFromMangledName(&qword_255249FC0);
  sub_21C1F02D0();
  sub_21C247A54();
  swift_release();
  sub_21C1F03B0(v2, &qword_255249FA8);
  sub_21C1F03B0(v1, &qword_255249FA8);
  sub_21C24875C();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21C1EDB94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v16[4];

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_255249D88);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21C1F03EC(a1, (uint64_t)v8, &qword_255249D88);
  v9 = sub_21C248654();
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_21C1F03B0((uint64_t)v8, &qword_255249D88);
    if (*(_QWORD *)(a3 + 16))
    {
LABEL_3:
      swift_getObjectType();
      swift_unknownObjectRetain();
      v11 = sub_21C2485E8();
      v13 = v12;
      swift_unknownObjectRelease();
      goto LABEL_6;
    }
  }
  else
  {
    sub_21C248648();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v8, v9);
    if (*(_QWORD *)(a3 + 16))
      goto LABEL_3;
  }
  v11 = 0;
  v13 = 0;
LABEL_6:
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = a2;
  *(_QWORD *)(v14 + 24) = a3;
  if (v13 | v11)
  {
    v16[0] = 0;
    v16[1] = 0;
    v16[2] = v11;
    v16[3] = v13;
  }
  return swift_task_create();
}

uint64_t sub_21C1EDD2C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = sub_21C247C64();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a3, a1, v6);
  v7 = a3 + *(int *)(type metadata accessor for RegistryPreview(0) + 20);
  v8 = sub_21C246F74();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(v7, a2, v8);
  type metadata accessor for LocatedPreview();
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_21C1EDDC8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_21C1EBB98;
  return sub_21C1ECA88(a1, a2);
}

uint64_t LocatedPreview.makeRenderingHostContext(renderEffects:allowAnimations:safeAreaPolicy:)@<X0>(uint64_t a1@<X0>, char a2@<W1>, char *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char v15;
  uint64_t v16;
  unint64_t v19[5];
  unint64_t v20;

  v9 = type metadata accessor for RenderEffects(0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (uint64_t *)((char *)&v19[-1] - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_255249DD0);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v19[-1] - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *a3;
  v16 = sub_21C2475BC();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v14, 1, 1, v16);
  sub_21C227B30(v19);
  v20 = v19[0];
  sub_21C2285AC(a1, v11);
  swift_bridgeObjectRelease();
  if (!v4)
  {
    v19[3] = MEMORY[0x24BDEC0B0];
    v19[4] = MEMORY[0x24BDEC0A0];
    LOBYTE(v20) = v15;
    LocatedPreview.makeDisplayContext(requestedGroupIndex:renderEffects:previewModifiers:allowAnimations:safeAreaPolicy:)((uint64_t)v14, (uint64_t)v11, (uint64_t)v19, a2 & 1, (unsigned __int8 *)&v20, a4);
    sub_21C1EE258((uint64_t)v19);
    sub_21C1E71CC((uint64_t)v11, type metadata accessor for RenderEffects);
  }
  return sub_21C1F03B0((uint64_t)v14, &qword_255249DD0);
}

uint64_t LocatedPreview.makeDisplayContext(requestedGroupIndex:renderEffects:previewModifiers:allowAnimations:safeAreaPolicy:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W3>, unsigned __int8 *a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t (*v20)(_QWORD);
  uint64_t *boxed_opaque_existential_1;
  _UNKNOWN **v22;
  ValueMetadata *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  __int128 v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _BYTE v37[40];
  uint64_t v38[3];
  ValueMetadata *v39;
  _UNKNOWN **v40;
  int v41;
  unsigned __int8 v42;

  v7 = v6;
  v35 = a2;
  v36 = a3;
  v34 = a1;
  v11 = type metadata accessor for RenderEffects(0);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v32 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_255249DD0);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v32 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for LocatedPreview();
  MEMORY[0x24BDAC7A8](v17);
  v19 = (char *)&v32 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = *a5;
  sub_21C1E7170(v7, (uint64_t)v19, v20);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v39 = (ValueMetadata *)type metadata accessor for RegistryPreview(0);
    v40 = &off_24E01FEC0;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v38);
    sub_21C1F00F0((uint64_t)v19, (uint64_t)boxed_opaque_existential_1, type metadata accessor for RegistryPreview);
    v23 = v39;
    v22 = v40;
  }
  else
  {
    v32 = *(_OWORD *)v19;
    v24 = *((_QWORD *)v19 + 2);
    v33 = a4;
    v25 = *((_QWORD *)v19 + 5);
    v23 = &type metadata for ProviderPreview;
    v22 = &off_24E01DDA8;
    v39 = &type metadata for ProviderPreview;
    v40 = &off_24E01DDA8;
    v26 = swift_allocObject();
    v38[0] = v26;
    *(_OWORD *)(v26 + 16) = v32;
    *(_QWORD *)(v26 + 32) = v24;
    *(_OWORD *)(v26 + 40) = *(_OWORD *)(v19 + 24);
    *(_QWORD *)(v26 + 56) = v25;
    LOBYTE(a4) = v33;
  }
  v27 = __swift_project_boxed_opaque_existential_1(v38, (uint64_t)v23);
  MEMORY[0x24BDAC7A8](v27);
  v29 = (char *)&v32 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v30 + 16))(v29);
  sub_21C1F03EC(v34, (uint64_t)v16, &qword_255249DD0);
  sub_21C1E7170(v35, (uint64_t)v13, type metadata accessor for RenderEffects);
  sub_21C1EE2C8(v36, (uint64_t)v37);
  v42 = v41;
  sub_21C21278C(v29, (uint64_t)v16, (uint64_t)v13, (uint64_t)v37, a4 & 1, &v42, (uint64_t)v23, (uint64_t)v22, a6);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v38);
}

uint64_t sub_21C1EE258(uint64_t a1)
{
  destroy for PreviewModifiers();
  return a1;
}

uint64_t type metadata accessor for LocatedPreview()
{
  uint64_t result;

  result = qword_255249E58;
  if (!qword_255249E58)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_21C1EE2C8(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for PreviewModifiers(a2, a1);
  return a2;
}

uint64_t sub_21C1EE304()
{
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t PreviewSpecification.locatePreview()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  _QWORD *v5;
  _QWORD v8[5];

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_255249DD8);
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v8[-1] - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for RegistryLocator();
  v5 = (_QWORD *)swift_allocObject();
  swift_defaultActor_initialize();
  v5[14] = 0;
  v5[15] = sub_21C1EBD40(MEMORY[0x24BEE4AF8]);
  v5[16] = 0;
  v8[3] = v4;
  v8[4] = &off_24E01FD50;
  v8[0] = v5;
  sub_21C1ED1C8((uint64_t)v3);
  sub_21C1EE438((uint64_t)v8);
  sub_21C24713C();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

uint64_t sub_21C1EE438(uint64_t a1)
{
  __swift_destroy_boxed_opaque_existential_1(a1);
  return a1;
}

uint64_t dispatch thunk of PreviewLocating.locatePreview(for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v9;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);

  v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(a4 + 8) + *(_QWORD *)(a4 + 8));
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v9;
  *v9 = v4;
  v9[1] = sub_21C1EBB98;
  return v11(a1, a2, a3, a4);
}

uint64_t initializeBufferWithCopyOfBuffer for LocatedPreview(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v11 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = v11 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v6 = sub_21C247C64();
      (*(void (**)(uint64_t, uint64_t *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
      v7 = *(int *)(type metadata accessor for RegistryPreview(0) + 20);
      v8 = a1 + v7;
      v9 = (uint64_t)a2 + v7;
      v10 = sub_21C246F74();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
    }
    else
    {
      v12 = a2[1];
      *(_QWORD *)a1 = *a2;
      *(_QWORD *)(a1 + 8) = v12;
      *(_QWORD *)(a1 + 16) = a2[2];
      v13 = a2[5];
      *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 3);
      *(_QWORD *)(a1 + 40) = v13;
      swift_bridgeObjectRetain();
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t destroy for LocatedPreview(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v2 = sub_21C247C64();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
    v3 = a1 + *(int *)(type metadata accessor for RegistryPreview(0) + 20);
    v4 = sub_21C246F74();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  }
  else
  {
    swift_bridgeObjectRelease();
    return swift_release();
  }
}

uint64_t initializeWithCopy for LocatedPreview(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v4 = sub_21C247C64();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
    v5 = *(int *)(type metadata accessor for RegistryPreview(0) + 20);
    v6 = a1 + v5;
    v7 = a2 + v5;
    v8 = sub_21C246F74();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(v6, v7, v8);
  }
  else
  {
    v9 = *(_QWORD *)(a2 + 8);
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = v9;
    *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
    v10 = *(_QWORD *)(a2 + 40);
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
    *(_QWORD *)(a1 + 40) = v10;
    swift_bridgeObjectRetain();
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t assignWithCopy for LocatedPreview(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  if (a1 != a2)
  {
    sub_21C1E71CC(a1, (uint64_t (*)(_QWORD))type metadata accessor for LocatedPreview);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v4 = sub_21C247C64();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
      v5 = *(int *)(type metadata accessor for RegistryPreview(0) + 20);
      v6 = a1 + v5;
      v7 = a2 + v5;
      v8 = sub_21C246F74();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(v6, v7, v8);
    }
    else
    {
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
      *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
      *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
      *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
      swift_bridgeObjectRetain();
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

char *initializeWithTake for LocatedPreview(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;

  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v6 = sub_21C247C64();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
    v7 = *(int *)(type metadata accessor for RegistryPreview(0) + 20);
    v8 = &a1[v7];
    v9 = &a2[v7];
    v10 = sub_21C246F74();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

char *assignWithTake for LocatedPreview(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;

  if (a1 != a2)
  {
    sub_21C1E71CC((uint64_t)a1, (uint64_t (*)(_QWORD))type metadata accessor for LocatedPreview);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v6 = sub_21C247C64();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
      v7 = *(int *)(type metadata accessor for RegistryPreview(0) + 20);
      v8 = &a1[v7];
      v9 = &a2[v7];
      v10 = sub_21C246F74();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for LocatedPreview(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a3 - 8) + 48))();
}

uint64_t storeEnumTagSinglePayload for LocatedPreview(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a4 - 8) + 56))();
}

uint64_t sub_21C1EEA34()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_21C1EEA44()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for RegistryPreview(319);
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t sub_21C1EEAB4(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t sub_21C1EEABC(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t sub_21C1EEAD4(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t sub_21C1EEADC(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t sub_21C1EEAE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 40))();
}

ValueMetadata *type metadata accessor for PreviewLocator()
{
  return &type metadata for PreviewLocator;
}

uint64_t sub_21C1EEB0C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;

  v3[4] = a2;
  v3[5] = v2;
  v3[3] = a1;
  v4 = sub_21C24758C();
  v3[6] = v4;
  v3[7] = *(_QWORD *)(v4 - 8);
  v3[8] = swift_task_alloc();
  v3[9] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_21C1EEB80()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t);
  uint64_t v9;
  unint64_t v10;
  char v11;
  _OWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v20;
  uint64_t v21;
  id v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v26;
  uint64_t v27;

  v1 = **(_QWORD **)(v0 + 40);
  if (!v1)
  {
    v18 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 80) = v18;
    *v18 = v0;
    v18[1] = sub_21C1EEEE4;
    return sub_21C1EFD0C();
  }
  swift_bridgeObjectRetain();
  sub_21C247400();
  if (!*(_QWORD *)(v1 + 16) || (v2 = sub_21C1F621C(*(_QWORD *)(v0 + 72)), (v3 & 1) == 0))
  {
    v15 = *(_QWORD *)(v0 + 72);
    v16 = *(_QWORD *)(v0 + 48);
    v17 = *(_QWORD *)(v0 + 56);
    swift_bridgeObjectRelease();
    v8 = *(void (**)(uint64_t, uint64_t))(v17 + 8);
    v8(v15, v16);
LABEL_10:
    v20 = *(_QWORD *)(v0 + 64);
    v21 = *(_QWORD *)(v0 + 48);
    v27 = *(_QWORD *)(v0 + 24);
    sub_21C24881C();
    v22 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD1760]), sel_init);
    v23 = objc_msgSend(v22, sel_processName);

    sub_21C248498();
    swift_bridgeObjectRelease();
    sub_21C248504();
    sub_21C248504();
    sub_21C248504();
    sub_21C247400();
    sub_21C1F0064();
    sub_21C2488F4();
    sub_21C248504();
    swift_bridgeObjectRelease();
    v8(v20, v21);
    sub_21C248504();
    *(_QWORD *)(v0 + 16) = sub_21C24740C();
    sub_21C2488F4();
    sub_21C248504();
    swift_bridgeObjectRelease();
    sub_21C248504();
    sub_21C246F80();
    v24 = *MEMORY[0x24BE77310];
    v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_255249EA0);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 104))(v27, v24, v25);
    goto LABEL_11;
  }
  v4 = *(_QWORD *)(v0 + 72);
  v5 = *(_QWORD *)(v0 + 48);
  v6 = *(_QWORD *)(v0 + 56);
  v7 = *(_QWORD *)(*(_QWORD *)(v1 + 56) + 8 * v2);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v8 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
  v8(v4, v5);
  v9 = sub_21C24740C();
  if (!*(_QWORD *)(v7 + 16) || (v10 = sub_21C1F61E4(v9), (v11 & 1) == 0))
  {
    swift_bridgeObjectRelease();
    goto LABEL_10;
  }
  v12 = *(_OWORD **)(v0 + 24);
  v26 = *(_OWORD *)(*(_QWORD *)(v7 + 56) + 16 * v10);
  swift_bridgeObjectRelease();
  *v12 = v26;
  v13 = *MEMORY[0x24BE77340];
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_255249EA0);
  (*(void (**)(_OWORD *, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 104))(v12, v13, v14);
LABEL_11:
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21C1EEEE4(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 88) = a1;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_21C1EEF40()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  unint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t);
  uint64_t v11;
  unint64_t v12;
  char v13;
  _OWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  __int128 v28;

  v1 = *(_QWORD *)(v0 + 88);
  v2 = *(_QWORD **)(v0 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *v2 = v1;
  v3 = *(_QWORD *)(v0 + 88);
  sub_21C247400();
  if (!*(_QWORD *)(v3 + 16) || (v4 = sub_21C1F621C(*(_QWORD *)(v0 + 72)), (v5 & 1) == 0))
  {
    v17 = *(_QWORD *)(v0 + 72);
    v18 = *(_QWORD *)(v0 + 48);
    v19 = *(_QWORD *)(v0 + 56);
    swift_bridgeObjectRelease();
    v10 = *(void (**)(uint64_t, uint64_t))(v19 + 8);
    v10(v17, v18);
LABEL_8:
    v20 = *(_QWORD *)(v0 + 64);
    v21 = *(_QWORD *)(v0 + 48);
    v22 = *(_QWORD *)(v0 + 24);
    sub_21C24881C();
    v23 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD1760]), sel_init);
    v24 = objc_msgSend(v23, sel_processName);

    sub_21C248498();
    swift_bridgeObjectRelease();
    sub_21C248504();
    sub_21C248504();
    sub_21C248504();
    sub_21C247400();
    sub_21C1F0064();
    sub_21C2488F4();
    sub_21C248504();
    swift_bridgeObjectRelease();
    v10(v20, v21);
    sub_21C248504();
    *(_QWORD *)(v0 + 16) = sub_21C24740C();
    sub_21C2488F4();
    sub_21C248504();
    swift_bridgeObjectRelease();
    sub_21C248504();
    sub_21C246F80();
    v25 = *MEMORY[0x24BE77310];
    v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_255249EA0);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 104))(v22, v25, v26);
    goto LABEL_9;
  }
  v6 = *(_QWORD *)(v0 + 72);
  v7 = *(_QWORD *)(v0 + 48);
  v8 = *(_QWORD *)(v0 + 56);
  v9 = *(_QWORD *)(*(_QWORD *)(v3 + 56) + 8 * v4);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v10 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
  v10(v6, v7);
  v11 = sub_21C24740C();
  if (!*(_QWORD *)(v9 + 16) || (v12 = sub_21C1F61E4(v11), (v13 & 1) == 0))
  {
    swift_bridgeObjectRelease();
    goto LABEL_8;
  }
  v14 = *(_OWORD **)(v0 + 24);
  v28 = *(_OWORD *)(*(_QWORD *)(v9 + 56) + 16 * v12);
  swift_bridgeObjectRelease();
  *v14 = v28;
  v15 = *MEMORY[0x24BE77340];
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_255249EA0);
  (*(void (**)(_OWORD *, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 104))(v14, v15, v16);
LABEL_9:
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21C1EF26C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_21C1EDD2C(a1, *(_QWORD *)(v2 + 16), a2);
}

uint64_t sub_21C1EF284(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v21;
  NSObject *v22;
  os_log_type_t v23;
  int v24;
  BOOL v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  os_log_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  char v38;
  unint64_t v39;
  uint64_t v40;
  unint64_t v41;
  char v42;
  uint64_t *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  BOOL v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v55;
  uint64_t v56;
  uint64_t *v57;
  char v58;
  void (*v59)(uint64_t, uint64_t);
  uint64_t v60;
  os_log_t v61;
  int v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  void (*v67)(char *, char *, uint64_t);
  char *v68;
  char *v69;
  char *v70;
  uint64_t *v71;
  uint64_t v72;
  uint64_t v73;

  v71 = a1;
  v5 = sub_21C247CC4();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v70 = (char *)&v60 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_255249EE8);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v60 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_21C24758C();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v60 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = MEMORY[0x24BDAC7A8](v13);
  v69 = (char *)&v60 - v17;
  MEMORY[0x24BDAC7A8](v16);
  v19 = (char *)&v60 - v18;
  sub_21C1EF7D8((uint64_t)v10);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
    return sub_21C1F03B0((uint64_t)v10, &qword_255249EE8);
  v64 = v6;
  v65 = v5;
  v68 = v15;
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v19, v10, v11);
  sub_21C247C94();
  v21 = v69;
  v67 = *(void (**)(char *, char *, uint64_t))(v12 + 16);
  v67(v69, v19, v11);
  v22 = sub_21C247CB8();
  v23 = sub_21C248708();
  v24 = v23;
  v25 = os_log_type_enabled(v22, v23);
  v26 = (uint64_t)v19;
  v27 = v71;
  v66 = v11;
  if (v25)
  {
    v28 = swift_slowAlloc();
    v62 = v24;
    v29 = v28;
    v30 = swift_slowAlloc();
    v73 = v30;
    *(_DWORD *)v29 = 136446722;
    v61 = v22;
    v72 = sub_21C203A90(0x77656976657270, 0xE700000000000000, &v73);
    v63 = v26;
    sub_21C2487A4();
    *(_WORD *)(v29 + 12) = 2082;
    v60 = v29 + 14;
    sub_21C1F0064();
    v31 = sub_21C2488F4();
    v72 = sub_21C203A90(v31, v32, &v73);
    sub_21C2487A4();
    swift_bridgeObjectRelease();
    v69 = *(char **)(v12 + 8);
    ((void (*)(char *, uint64_t))v69)(v21, v11);
    *(_WORD *)(v29 + 22) = 2050;
    v33 = a3;
    v72 = sub_21C247B2C();
    v26 = v63;
    sub_21C2487A4();
    v34 = v61;
    _os_log_impl(&dword_21C1E3000, v61, (os_log_type_t)v62, "Found %{public}s registry: %{public}s:%{public}ld", (uint8_t *)v29, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x2207770EC](v30, -1, -1);
    v27 = v71;
    MEMORY[0x2207770EC](v29, -1, -1);

    (*(void (**)(char *, uint64_t))(v64 + 8))(v70, v65);
    v35 = (uint64_t)v68;
  }
  else
  {
    v69 = *(char **)(v12 + 8);
    ((void (*)(char *, uint64_t))v69)(v21, v11);

    (*(void (**)(char *, uint64_t))(v64 + 8))(v70, v65);
    v35 = (uint64_t)v68;
    v33 = a3;
  }
  v36 = *v27;
  if (*(_QWORD *)(*v27 + 16) && (v37 = sub_21C1F621C(v26), (v38 & 1) != 0))
  {
    v39 = *(_QWORD *)(*(_QWORD *)(v36 + 56) + 8 * v37);
    v73 = v39;
    swift_bridgeObjectRetain();
  }
  else
  {
    v39 = sub_21C1EFC30(MEMORY[0x24BEE4AF8]);
    v73 = v39;
  }
  v40 = sub_21C247B2C();
  if (*(_QWORD *)(v39 + 16) && (v41 = sub_21C1F61E4(v40), (v42 & 1) != 0))
  {
    v43 = (uint64_t *)(*(_QWORD *)(v39 + 56) + 16 * v41);
    v44 = *v43;
    v45 = v43[1];
    v46 = v26;
    v47 = sub_21C247B2C();
    v48 = sub_21C247B38();
    v49 = v48 < sub_21C247B38();
    v35 = (uint64_t)v68;
    if (v49)
      v50 = v44;
    else
      v50 = a2;
    if (v49)
      v51 = v45;
    else
      v51 = v33;
    v52 = v47;
    v26 = v46;
    sub_21C227468(v50, v51, v52);
  }
  else
  {
    v53 = sub_21C247B2C();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v72 = v39;
    sub_21C1F9634(a2, v33, v53, isUniquelyReferenced_nonNull_native);
    v73 = v72;
    swift_bridgeObjectRelease();
  }
  v55 = v66;
  v67((char *)v35, (char *)v26, v66);
  v56 = v73;
  swift_bridgeObjectRetain();
  v57 = v71;
  v58 = swift_isUniquelyReferenced_nonNull_native();
  v72 = *v57;
  *v57 = 0x8000000000000000;
  sub_21C1F94A0(v56, v35, v58);
  *v57 = v72;
  swift_bridgeObjectRelease();
  v59 = (void (*)(uint64_t, uint64_t))v69;
  ((void (*)(uint64_t, uint64_t))v69)(v35, v55);
  v59(v26, v55);
  return swift_bridgeObjectRelease();
}

uint64_t sub_21C1EF7D8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  void *v6;
  void *v7;
  id v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint64_t v12;
  uint8_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint8_t *v18;
  uint64_t v19;
  uint64_t v21;
  _QWORD v22[2];
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v2 = sub_21C247CC4();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21C247B44();
  v6 = (void *)sub_21C24848C();
  swift_bridgeObjectRelease();
  v7 = (void *)sub_21C24848C();
  v8 = objc_msgSend(v6, sel_componentsSeparatedByString_, v7);

  v9 = sub_21C248564();
  if (*(_QWORD *)(v9 + 16) > 1uLL)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    sub_21C247580();
    v19 = sub_21C24758C();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(a1, 0, 1, v19);
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_21C247CA0();
    v10 = sub_21C247CB8();
    v11 = sub_21C248720();
    if (os_log_type_enabled(v10, v11))
    {
      v12 = swift_slowAlloc();
      v24 = a1;
      v13 = (uint8_t *)v12;
      v14 = swift_slowAlloc();
      v23 = v2;
      v15 = v14;
      v26 = v14;
      *(_DWORD *)v13 = 136446210;
      v22[1] = v13 + 4;
      v16 = sub_21C247B44();
      v25 = sub_21C203A90(v16, v17, &v26);
      sub_21C2487A4();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_21C1E3000, v10, v11, "registry fileID had fewer than 2 components: %{public}s", v13, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2207770EC](v15, -1, -1);
      v18 = v13;
      a1 = v24;
      MEMORY[0x2207770EC](v18, -1, -1);

      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v23);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    }
    v21 = sub_21C24758C();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(a1, 1, 1, v21);
  }
}

unint64_t sub_21C1EFAC8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  _QWORD *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t result;
  char v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  BOOL v18;
  uint64_t v19;
  uint64_t v20;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_255249F38);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (uint64_t *)((char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = *(_QWORD *)(a1 + 16);
  if (v6)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_255249F40);
    v7 = (_QWORD *)sub_21C2488DC();
    v8 = (char *)v5 + *(int *)(v2 + 48);
    v9 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    v10 = *(_QWORD *)(v3 + 72);
    while (1)
    {
      sub_21C1F03EC(v9, (uint64_t)v5, &qword_255249F38);
      v11 = *v5;
      result = sub_21C1F61E4(*v5);
      if ((v13 & 1) != 0)
        break;
      v14 = result;
      *(_QWORD *)((char *)v7 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      *(_QWORD *)(v7[6] + 8 * result) = v11;
      v15 = v7[7];
      v16 = sub_21C247808();
      result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v15 + *(_QWORD *)(*(_QWORD *)(v16 - 8) + 72) * v14, v8, v16);
      v17 = v7[2];
      v18 = __OFADD__(v17, 1);
      v19 = v17 + 1;
      if (v18)
        goto LABEL_10;
      v7[2] = v19;
      v9 += v10;
      if (!--v6)
        return (unint64_t)v7;
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return MEMORY[0x24BEE4B00];
  }
  return result;
}

unint64_t sub_21C1EFC30(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  _OWORD *i;
  uint64_t v5;
  unint64_t result;
  char v7;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;
  __int128 v11;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_255249EF0);
    v3 = (_QWORD *)sub_21C2488DC();
    for (i = (_OWORD *)(a1 + 40); ; i = (_OWORD *)((char *)i + 24))
    {
      v5 = *((_QWORD *)i - 1);
      v11 = *i;
      result = sub_21C1F61E4(v5);
      if ((v7 & 1) != 0)
        break;
      *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      *(_QWORD *)(v3[6] + 8 * result) = v5;
      *(_OWORD *)(v3[7] + 16 * result) = v11;
      v8 = v3[2];
      v9 = __OFADD__(v8, 1);
      v10 = v8 + 1;
      if (v9)
        goto LABEL_10;
      v3[2] = v10;
      if (!--v1)
        return (unint64_t)v3;
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return MEMORY[0x24BEE4B00];
  }
  return result;
}

uint64_t sub_21C1EFD0C()
{
  _QWORD *v0;
  uint64_t v1;

  v1 = sub_21C247CC4();
  v0[3] = v1;
  v0[4] = *(_QWORD *)(v1 - 8);
  v0[5] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_21C1EFD68()
{
  _QWORD *v0;
  NSObject *v1;
  os_log_type_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v12;
  uint64_t v13;

  sub_21C247C94();
  v1 = sub_21C247CB8();
  v2 = sub_21C248738();
  if (os_log_type_enabled(v1, v2))
  {
    v3 = v0[4];
    v12 = v0[5];
    v4 = v0[3];
    v5 = (uint8_t *)swift_slowAlloc();
    v6 = swift_slowAlloc();
    v13 = v6;
    *(_DWORD *)v5 = 136446210;
    v0[2] = sub_21C203A90(0x77656976657270, 0xE700000000000000, &v13);
    sub_21C2487A4();
    _os_log_impl(&dword_21C1E3000, v1, v2, "scraping runtime for %{public}s types", v5, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2207770EC](v6, -1, -1);
    MEMORY[0x2207770EC](v5, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v12, v4);
  }
  else
  {
    v8 = v0[4];
    v7 = v0[5];
    v9 = v0[3];

    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
  }
  sub_21C1F00AC();
  v10 = (_QWORD *)swift_task_alloc();
  v0[6] = v10;
  *v10 = v0;
  v10[1] = sub_21C1EFF20;
  return sub_21C246DD0();
}

uint64_t sub_21C1EFF20(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 56) = a1;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_21C1EFF7C()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  unint64_t v7;

  v1 = *(_QWORD *)(v0 + 56);
  v2 = sub_21C1EC230(MEMORY[0x24BEE4AF8], &qword_255249EF8, &qword_255249F00, (uint64_t (*)(char *))sub_21C1F621C, (uint64_t (*)(_QWORD))MEMORY[0x24BE77EF8]);
  v7 = v2;
  v3 = *(_QWORD *)(v1 + 16);
  if (v3)
  {
    v4 = (uint64_t *)(swift_bridgeObjectRetain() + 40);
    do
    {
      sub_21C1EF284((uint64_t *)&v7, *(v4 - 1), *v4);
      v4 += 2;
      --v3;
    }
    while (v3);
    swift_bridgeObjectRelease();
    v5 = v7;
  }
  else
  {
    v5 = v2;
  }
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v5);
}

unint64_t sub_21C1F0064()
{
  unint64_t result;
  uint64_t v1;

  result = qword_255249ED8;
  if (!qword_255249ED8)
  {
    v1 = sub_21C24758C();
    result = MEMORY[0x22077702C](MEMORY[0x24BE77F18], v1);
    atomic_store(result, (unint64_t *)&qword_255249ED8);
  }
  return result;
}

unint64_t sub_21C1F00AC()
{
  unint64_t result;

  result = qword_255249EE0;
  if (!qword_255249EE0)
  {
    result = MEMORY[0x22077702C](&unk_21C24CD50, &type metadata for PreviewRegistryEntry);
    atomic_store(result, (unint64_t *)&qword_255249EE0);
  }
  return result;
}

uint64_t sub_21C1F00F0(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_21C1F0134(uint64_t a1, uint64_t a2)
{
  __int128 v3;

  v3 = *(_OWORD *)(a1 + 24);
  *(_OWORD *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_21C1F0174()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v1 = sub_21C247418();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_unknownObjectRelease();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 40);
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);

  return swift_deallocObject();
}

uint64_t sub_21C1F0214(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;

  v4 = *(_QWORD *)(sub_21C247418() - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = v1[2];
  v7 = v1[3];
  v8 = v1[4];
  v9 = (uint64_t)(v1 + 5);
  v10 = (uint64_t)v1 + v5;
  v11 = *(_QWORD *)((char *)v1 + ((*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFF8));
  v12 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v12;
  *v12 = v2;
  v12[1] = sub_21C1E664C;
  return sub_21C1ED7C4(a1, v6, v7, v8, v9, v10, v11);
}

unint64_t sub_21C1F02D0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_255249FC8;
  if (!qword_255249FC8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255249FC0);
    result = MEMORY[0x22077702C](MEMORY[0x24BE76C78], v1);
    atomic_store(result, (unint64_t *)&qword_255249FC8);
  }
  return result;
}

uint64_t sub_21C1F031C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_21C1F0340(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_21C1E664C;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_25524BE70 + dword_25524BE70))(a1, v4);
}

uint64_t sub_21C1F03B0(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = __swift_instantiateConcreteTypeFromMangledName(a2);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_21C1F03EC(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_21C1F0430@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_21C1EF26C(a1, a2);
}

uint64_t PreviewAgentServices.resolveRenderEffects(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[6] = a2;
  v3[7] = v2;
  v3[5] = a1;
  return swift_task_switch();
}

uint64_t sub_21C1F0460()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 64) = *(_QWORD *)(*(_QWORD *)(v0 + 56) + 8);
  return swift_task_switch();
}

uint64_t sub_21C1F047C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;

  v2 = *(uint64_t **)(v0 + 40);
  v1 = *(_QWORD *)(v0 + 48);
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_21C2285AC(v1, v2);
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t PreviewAgentServices.locatePreview(for:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;

  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255249DD8);
  v3[5] = v4;
  v3[6] = *(_QWORD *)(v4 - 8);
  v3[7] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_21C1F0574()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t (*v6)(_QWORD, _QWORD, uint64_t, uint64_t);

  v1 = (_QWORD *)v0[4];
  v2 = v1[11];
  v3 = v1[12];
  __swift_project_boxed_opaque_existential_1(v1 + 8, v2);
  v6 = (uint64_t (*)(_QWORD, _QWORD, uint64_t, uint64_t))(**(int **)(v3 + 8) + *(_QWORD *)(v3 + 8));
  v4 = (_QWORD *)swift_task_alloc();
  v0[8] = v4;
  *v4 = v0;
  v4[1] = sub_21C1F05FC;
  return v6(v0[7], v0[3], v2, v3);
}

uint64_t sub_21C1F05FC()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_21C1F0650()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(v0 + 48);
  v1 = *(_QWORD *)(v0 + 56);
  v3 = *(_QWORD *)(v0 + 40);
  sub_21C24713C();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t PreviewAgentServices.resolveModifiers(for:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  type metadata accessor for RegistryPreview(0);
  v3[5] = swift_task_alloc();
  v3[6] = type metadata accessor for LocatedPreview();
  v3[7] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_21C1F0748()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;

  sub_21C1F0928(*(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 56));
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v1 = *(_QWORD *)(v0 + 32);
    sub_21C1F096C(*(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 40));
    v2 = *(_QWORD *)(v1 + 16);
    v3 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 64) = v3;
    *v3 = v0;
    v3[1] = sub_21C1F0830;
    return sub_21C1E7C9C(*(_QWORD *)(v0 + 16), v2);
  }
  else
  {
    v5 = *(_QWORD *)(v0 + 16);
    swift_bridgeObjectRelease();
    swift_release();
    v6 = MEMORY[0x24BDEC0A0];
    *(_QWORD *)(v5 + 24) = MEMORY[0x24BDEC0B0];
    *(_QWORD *)(v5 + 32) = v6;
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_21C1F0830()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 72) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_21C1F0894()
{
  uint64_t v0;

  sub_21C1F09B0(*(_QWORD *)(v0 + 40));
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21C1F08DC()
{
  uint64_t v0;

  sub_21C1F09B0(*(_QWORD *)(v0 + 40));
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21C1F0928(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for LocatedPreview();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_21C1F096C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for RegistryPreview(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_21C1F09B0(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for RegistryPreview(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t destroy for PreviewAgentServices(uint64_t a1)
{
  swift_release();
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(a1 + 24);
  return __swift_destroy_boxed_opaque_existential_1(a1 + 64);
}

uint64_t initializeWithCopy for PreviewAgentServices(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);
  __int128 v9;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v5 = a2 + 24;
  v6 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 48) = v6;
  v7 = v6;
  v8 = **(void (***)(uint64_t, uint64_t, uint64_t))(v6 - 8);
  swift_retain();
  swift_retain();
  swift_retain();
  v8(a1 + 24, v5, v7);
  v9 = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 88) = v9;
  (**(void (***)(uint64_t, uint64_t))(v9 - 8))(a1 + 64, a2 + 64);
  return a1;
}

_QWORD *assignWithCopy for PreviewAgentServices(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  __swift_assign_boxed_opaque_existential_1(a1 + 3, a2 + 3);
  __swift_assign_boxed_opaque_existential_1(a1 + 8, a2 + 8);
  return a1;
}

__n128 __swift_memcpy104_8(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __n128 result;
  __int128 v5;
  __int128 v6;

  v2 = *a2;
  v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  result = (__n128)a2[3];
  v5 = a2[4];
  v6 = a2[5];
  *(_QWORD *)(a1 + 96) = *((_QWORD *)a2 + 12);
  *(_OWORD *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 80) = v6;
  *(__n128 *)(a1 + 48) = result;
  return result;
}

uint64_t assignWithTake for PreviewAgentServices(uint64_t a1, uint64_t a2)
{
  __int128 v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_release();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_release();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(a1 + 24);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  __swift_destroy_boxed_opaque_existential_1(a1 + 64);
  v4 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v4;
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  return a1;
}

uint64_t getEnumTagSinglePayload for PreviewAgentServices(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 104))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PreviewAgentServices(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 104) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 104) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for PreviewAgentServices()
{
  return &type metadata for PreviewAgentServices;
}

uint64_t sub_21C1F0CCC()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 40) = v0;
  return swift_task_switch();
}

uint64_t sub_21C1F0CE4()
{
  _QWORD *v0;
  _QWORD *v1;

  if (qword_2552497B0 != -1)
    swift_once();
  v1 = (_QWORD *)v0[5];
  if (byte_255249FF0 == 1)
  {
    v0[6] = v1[2];
    sub_21C24863C();
    v0[7] = sub_21C248630();
    sub_21C2485E8();
  }
  else
  {
    v0[8] = __swift_project_boxed_opaque_existential_1(v1 + 3, v1[6]);
  }
  return swift_task_switch();
}

uint64_t sub_21C1F0DB4()
{
  swift_release();
  sub_21C1E8DC4();
  return swift_task_switch();
}

uint64_t sub_21C1F0DF4()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 64) = __swift_project_boxed_opaque_existential_1((_QWORD *)(*(_QWORD *)(v0 + 40) + 24), *(_QWORD *)(*(_QWORD *)(v0 + 40) + 48));
  return swift_task_switch();
}

uint64_t sub_21C1F0E3C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  unint64_t v3;

  v1 = *(uint64_t **)(v0 + 64);
  v2 = *v1;
  *(_QWORD *)(*v1 + 112) = 0;
  swift_bridgeObjectRelease();
  v3 = sub_21C1EBD40(MEMORY[0x24BEE4AF8]);
  swift_beginAccess();
  *(_QWORD *)(v2 + 120) = v3;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 128) = 0;
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21C1F0EC0()
{
  uint64_t result;

  result = sub_21C1F0EE0();
  byte_255249FF0 = result & 1;
  return result;
}

uint64_t sub_21C1F0EE0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  _BYTE *v6;
  id v7;
  id v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t inited;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  uint64_t v20;
  os_log_type_t v21;
  _BYTE v23[64];

  v0 = sub_21C247CC4();
  v1 = *(_QWORD *)(v0 - 8);
  v2 = MEMORY[0x24BDAC7A8](v0);
  v4 = &v23[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v2);
  v6 = &v23[-v5];
  v7 = objc_msgSend((id)objc_opt_self(), sel_processInfo);
  v8 = objc_msgSend(v7, sel_environment);

  v9 = sub_21C248438();
  if (*(_QWORD *)(v9 + 16) && (v10 = sub_21C1F63E4(0xD00000000000002ELL, 0x800000021C24D300), (v11 & 1) != 0))
  {
    v12 = (uint64_t *)(*(_QWORD *)(v9 + 56) + 16 * v10);
    v14 = *v12;
    v13 = v12[1];
    swift_bridgeObjectRetain();
  }
  else
  {
    v14 = 0;
    v13 = 0;
  }
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(qword_25524A018);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_21C2495D0;
  *(_OWORD *)(inited + 32) = xmmword_21C2495E0;
  *(_OWORD *)(inited + 48) = xmmword_21C2495F0;
  if (v13
    && (v14 == 20302 && v13 == 0xE200000000000000
     || (sub_21C248924() & 1) != 0
     || (v16 = *(_QWORD *)(inited + 56)) != 0
     && (*(_QWORD *)(inited + 48) == v14 && v16 == v13 || (sub_21C248924() & 1) != 0)))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_21C247CAC();
    v17 = sub_21C247CB8();
    v18 = sub_21C248738();
    if (!os_log_type_enabled(v17, v18))
    {
      v20 = 0;
      v6 = v4;
      goto LABEL_20;
    }
    v19 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v19 = 0;
    _os_log_impl(&dword_21C1E3000, v17, v18, "Flag set, will not clear modifier cache after hot swap", v19, 2u);
    v20 = 0;
    v6 = v4;
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_21C247CAC();
    v17 = sub_21C247CB8();
    v21 = sub_21C248738();
    if (!os_log_type_enabled(v17, v21))
    {
      v20 = 1;
      goto LABEL_20;
    }
    v19 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v19 = 0;
    _os_log_impl(&dword_21C1E3000, v17, v21, "Will clear modifier cache after hot swap", v19, 2u);
    v20 = 1;
  }
  MEMORY[0x2207770EC](v19, -1, -1);
LABEL_20:

  (*(void (**)(_BYTE *, uint64_t))(v1 + 8))(v6, v0);
  return v20;
}

void DYLDJITLaunchFatalError(_:)()
{
  sub_21C2488AC();
  __break(1u);
}

uint64_t sub_21C1F123C(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t sub_21C1F1244(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return *(_QWORD *)(a3 - 8);
}

uint64_t sub_21C1F1250@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t AssociatedTypeWitness;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t (**v19)(_QWORD, _QWORD);
  uint64_t v20;
  void (**v21)(uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t AssociatedConformanceWitness;
  uint64_t v27;
  char *v29;
  void (*v30)(char *, char *, char *);
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  void (*v35)(void);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t *v68;
  char *v69;
  uint64_t v70;
  uint64_t *v71;
  uint64_t v72;
  uint64_t *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  __int128 v88;
  uint64_t v89;
  uint64_t v90;

  v86 = a2;
  v87 = a1;
  v82 = sub_21C246E6C();
  v84 = *(_QWORD *)(v82 - 8);
  MEMORY[0x24BDAC7A8](v82);
  v80 = (char *)&v66 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_255249DD0);
  MEMORY[0x24BDAC7A8](v11);
  v78 = (uint64_t)&v66 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v81 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v14 = MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v79 = (char *)&v66 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v66 - v16;
  v18 = sub_21C247BBC();
  v19 = *(uint64_t (***)(_QWORD, _QWORD))(v18 - 8);
  MEMORY[0x24BDAC7A8](v18);
  v21 = (void (**)(uint64_t))((char *)&v66 - v20);
  v22 = type metadata accessor for RegistryHostProvider(0);
  v23 = *(int *)(v22 + 24);
  v85 = a6;
  v83 = a3;
  sub_21C1EE2C8(a3, a6 + v23);
  (*(void (**)(uint64_t, uint64_t))(a5 + 24))(a4, a5);
  v24 = ((uint64_t (**)(void (**)(uint64_t), uint64_t))v19)[11](v21, v18);
  if ((_DWORD)v24 == *MEMORY[0x24BDC6E58])
  {
    v25 = ((uint64_t (**)(void (**)(uint64_t), uint64_t))v19)[12](v21, v18);
    (*v21)(v25);
    AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(AssociatedConformanceWitness + 8))(&v88, AssociatedTypeWitness, AssociatedConformanceWitness);
    swift_release();
    sub_21C1EE258(v83);
    sub_21C1F03B0(v86, &qword_255249DD0);
    (*(void (**)(char *, uint64_t))(v81 + 8))(v17, AssociatedTypeWitness);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(a4 - 8) + 8))(v87, a4);
    v27 = v85;
    sub_21C1EB66C(&v88, v85);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(v84 + 104))(v27 + *(int *)(v22 + 20), *MEMORY[0x24BE78140], v82);
  }
  else
  {
    v76 = a5;
    v77 = v22;
    if ((_DWORD)v24 == *MEMORY[0x24BDC6E60])
    {
      ((uint64_t (**)(void (**)(uint64_t), uint64_t))v19)[12](v21, v18);
      v29 = (char *)v21 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25524A140) + 48);
      v30 = *(void (**)(char *, char *, char *))v29;
      v75 = *((_QWORD *)v29 + 1);
      v31 = sub_21C247BD4();
      v73 = &v66;
      MEMORY[0x24BDAC7A8](v31);
      v33 = (char *)&v66 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
      v70 = v34;
      v35 = *(void (**)(void))(v34 + 32);
      v69 = v33;
      v72 = v36;
      v35();
      v37 = sub_21C247B74();
      v71 = &v66;
      v74 = v37;
      v38 = *(_QWORD *)(v37 - 8);
      MEMORY[0x24BDAC7A8](v37);
      v40 = (char *)&v66 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
      v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_25524A148);
      v68 = &v66;
      MEMORY[0x24BDAC7A8](v41);
      v43 = (char *)&v66 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
      v44 = v78;
      sub_21C1F2ED8(v86, v78);
      v45 = sub_21C2475BC();
      v46 = *(_QWORD *)(v45 - 8);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v46 + 48))(v44, 1, v45) == 1)
      {
        sub_21C1F03B0(v44, &qword_255249DD0);
        v47 = 1;
      }
      else
      {
        sub_21C2475B0();
        sub_21C247598();
        sub_21C247B5C();
        (*(void (**)(uint64_t, uint64_t))(v46 + 8))(v44, v45);
        v47 = 0;
      }
      v52 = AssociatedTypeWitness;
      v66 = AssociatedTypeWitness;
      v67 = v38;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v38 + 56))(v43, v47, 1, v74);
      v53 = v79;
      v30(v79, v40, v43);
      sub_21C1F03B0((uint64_t)v43, &qword_25524A148);
      v54 = swift_getAssociatedConformanceWitness();
      (*(void (**)(uint64_t, uint64_t))(v54 + 8))(v52, v54);
      __swift_instantiateConcreteTypeFromMangledName(&qword_25524A150);
      v55 = a4;
      v56 = v80;
      v57 = v70;
      v58 = v69;
      v59 = v72;
      (*(void (**)(char *, char *, uint64_t))(v70 + 16))(v80, v69, v72);
      sub_21C247B68();
      sub_21C247B50();
      sub_21C2475A4();
      swift_release();
      sub_21C1EE258(v83);
      sub_21C1F03B0(v86, &qword_255249DD0);
      (*(void (**)(char *, uint64_t))(v67 + 8))(v40, v74);
      (*(void (**)(char *, uint64_t))(v81 + 8))(v53, v66);
      (*(void (**)(char *, uint64_t))(v57 + 8))(v58, v59);
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v55 - 8) + 8))(v87, v55);
      v60 = v84;
      v61 = v82;
      (*(void (**)(char *, _QWORD, uint64_t))(v84 + 104))(v56, *MEMORY[0x24BE78150], v82);
      return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v60 + 32))(v85 + *(int *)(v77 + 20), v56, v61);
    }
    else
    {
      v48 = v82;
      v49 = v87;
      v50 = v77;
      if ((_DWORD)v24 == *MEMORY[0x24BDC6E50])
      {
        v89 = MEMORY[0x24BDF5158];
        v90 = MEMORY[0x24BDF5138];
        sub_21C1EE258(v83);
        sub_21C1F03B0(v86, &qword_255249DD0);
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(a4 - 8) + 8))(v49, a4);
        v51 = v85;
        sub_21C1EB66C(&v88, v85);
        return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(v84 + 104))(v51 + *(int *)(v50 + 20), *MEMORY[0x24BE78138], v48);
      }
      else
      {
        MEMORY[0x24BDAC7A8](v24);
        v62 = v76;
        *(&v66 - 4) = a4;
        *(&v66 - 3) = v62;
        v65 = 2;
        v64 = 38;
        sub_21C2478E0();
        v89 = MEMORY[0x24BDF5158];
        v90 = MEMORY[0x24BDF5138];
        sub_21C1EE258(v83);
        sub_21C1F03B0(v86, &qword_255249DD0);
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(a4 - 8) + 8))(v49, a4);
        v63 = v85;
        sub_21C1EB66C(&v88, v85);
        (*(void (**)(uint64_t, _QWORD, uint64_t))(v84 + 104))(v63 + *(int *)(v50 + 20), *MEMORY[0x24BE78138], v48);
        return ((uint64_t (**)(void (**)(uint64_t), uint64_t))v19)[1](v21, v18);
      }
    }
  }
}

uint64_t sub_21C1F1A1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  _QWORD v10[2];

  swift_getAssociatedTypeWitness();
  v5 = sub_21C247BBC();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v10 - v7;
  v10[0] = 0;
  v10[1] = 0xE000000000000000;
  sub_21C24881C();
  sub_21C248504();
  (*(void (**)(uint64_t, uint64_t))(a3 + 24))(a2, a3);
  sub_21C24890C();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  sub_21C248504();
  return v10[0];
}

uint64_t sub_21C1F1B38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  swift_allocObject();
  return sub_21C1F1C08(a1, a2, a3, a4);
}

uint64_t sub_21C1F1B98()
{
  uint64_t v1;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_21C247D30();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_21C1F1C08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t *boxed_opaque_existential_1;
  __int128 v15;
  _QWORD v17[2];

  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_25524A138);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = v4 + OBJC_IVAR____TtCV17PreviewsInjection20RegistryHostProvider4Host__seed;
  v17[1] = 0;
  sub_21C247D18();
  (*(void (**)(uint64_t, char *, uint64_t))(v10 + 32))(v13, v12, v9);
  *(_QWORD *)(v4 + 40) = a3;
  *(_QWORD *)(v4 + 48) = a4;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v4 + 16));
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 32))(boxed_opaque_existential_1, a1, a3);
  v15 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(v4 + 56) = *(_OWORD *)a2;
  *(_OWORD *)(v4 + 72) = v15;
  *(_QWORD *)(v4 + 88) = *(_QWORD *)(a2 + 32);
  return v4;
}

uint64_t sub_21C1F1D04@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  _QWORD v14[5];
  uint64_t v15[4];
  _QWORD v16[5];

  v4 = sub_21C248024();
  swift_beginAccess();
  sub_21C1E712C(a1 + 16, (uint64_t)v16);
  v5 = v16[4];
  v6 = __swift_project_boxed_opaque_existential_1(v16, v16[3]);
  swift_beginAccess();
  sub_21C1EE2C8(a1 + 56, (uint64_t)v14);
  PreviewModifiers.applied<A>(to:)((uint64_t)v6, v5, v15);
  sub_21C1EE258((uint64_t)v14);
  v7 = __swift_project_boxed_opaque_existential_1(v15, v15[3]);
  MEMORY[0x24BDAC7A8](v7);
  (*(void (**)(char *))(v9 + 16))((char *)&v14[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = sub_21C248330();
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_21C247D30();
  swift_release();
  swift_release();
  swift_release();
  v11 = v14[0];
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v15);
  result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
  *(_QWORD *)a2 = v4;
  *(_QWORD *)(a2 + 8) = 0;
  *(_BYTE *)(a2 + 16) = 1;
  *(_QWORD *)(a2 + 24) = v10;
  *(_QWORD *)(a2 + 32) = v11;
  return result;
}

uint64_t sub_21C1F1EA8()
{
  return sub_21C24827C();
}

uint64_t sub_21C1F1EC0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_21C1F1D04(*(_QWORD *)(v1 + 8), a1);
}

uint64_t sub_21C1F1EC8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  sub_21C1EE258(v0 + 56);
  v1 = v0 + OBJC_IVAR____TtCV17PreviewsInjection20RegistryHostProvider4Host__seed;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25524A138);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance();
}

uint64_t sub_21C1F1F2C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  sub_21C1F3874(&qword_25524A130, (uint64_t)&unk_21C2497D8);
  swift_retain();
  result = sub_21C247EB0();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_21C1F1F88@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_21C247D0C();
  *a1 = result;
  return result;
}

uint64_t sub_21C1F1FB0(_QWORD *a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t *v5;
  void (*v6)(uint64_t *, _QWORD);
  _QWORD *v7;
  uint64_t v9;

  v3 = *a1;
  v4 = (uint64_t *)((char *)v2 + *(int *)(a2 + 24));
  v5 = (uint64_t *)(*a1 + 16);
  swift_beginAccess();
  __swift_assign_boxed_opaque_existential_1(v5, v2);
  swift_endAccess();
  swift_beginAccess();
  sub_21C1F38B4(v4, (uint64_t *)(v3 + 56));
  swift_endAccess();
  swift_getKeyPath();
  swift_getKeyPath();
  v6 = (void (*)(uint64_t *, _QWORD))sub_21C247D24();
  ++*v7;
  v6(&v9, 0);
  swift_release();
  swift_release();
  return 1;
}

uint64_t sub_21C1F20A0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  _QWORD *v2;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t result;
  _BYTE v14[40];

  v5 = v2[3];
  v6 = v2[4];
  v7 = __swift_project_boxed_opaque_existential_1(v2, v5);
  v8 = type metadata accessor for RegistryHostProvider.Host(0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = &v14[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  (*(void (**)(_BYTE *, _QWORD *, uint64_t))(v11 + 16))(v10, v7, v5);
  sub_21C1EE2C8((uint64_t)v2 + *(int *)(a1 + 24), (uint64_t)v14);
  result = sub_21C1F1B38((uint64_t)v10, (uint64_t)v14, v5, v6);
  *a2 = result;
  return result;
}

uint64_t sub_21C1F216C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a1 + 20);
  v5 = sub_21C246E6C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, v4, v5);
}

id sub_21C1F21B4()
{
  id *v0;

  return *v0;
}

uint64_t sub_21C1F21C8()
{
  return sub_21C248120();
}

uint64_t sub_21C1F2200()
{
  sub_21C1F38F8();
  return sub_21C24815C();
}

uint64_t sub_21C1F2250()
{
  sub_21C1F38F8();
  return sub_21C24812C();
}

void sub_21C1F22A0()
{
  sub_21C1F38F8();
  sub_21C248150();
  __break(1u);
}

void sub_21C1F22C4(uint64_t a1@<X8>)
{
  void *v1;
  id v2;
  void *v3;
  id v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  double v16;
  double v17;
  double v18;
  double v19;
  unint64_t v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  id v41;
  id v42;
  id v43;
  void *v44;
  void *v45;
  id v46;
  uint64_t v47;
  uint64_t v48;
  BOOL v49;
  void *v50;
  id v51;

  objc_msgSend(v1, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  v51 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBDB08]), sel_init);
  v2 = objc_msgSend(v51, sel_view);
  if (!v2)
  {
    __break(1u);
    return;
  }
  v3 = v2;
  objc_msgSend(v2, sel_addSubview_, v1);
  v4 = objc_msgSend(v1, sel_leadingAnchor);
  v5 = objc_msgSend(v3, (SEL)&stru_24E021128.types + 6);
  v6 = objc_msgSend(v4, sel_constraintEqualToAnchor_, v5);

  v7 = objc_msgSend(v1, sel_trailingAnchor);
  v8 = objc_msgSend(v3, sel_trailingAnchor);
  v9 = objc_msgSend(v7, (SEL)0x24E021F4ELL, v8);

  v10 = objc_msgSend(v1, sel_topAnchor);
  v11 = objc_msgSend(v3, (SEL)&stru_24E0216D8.size);
  v12 = objc_msgSend(v10, (SEL)0x24E021F4ELL, v11);

  v13 = objc_msgSend(v1, sel_bottomAnchor);
  v14 = objc_msgSend(v3, (SEL)&RunningAppEntryPoint.base_meths + 5);
  v15 = objc_msgSend(v13, (SEL)0x24E021F4ELL, v14);

  LODWORD(v16) = 1.0;
  objc_msgSend(v6, sel_setPriority_, v16);
  LODWORD(v17) = 1.0;
  v50 = v9;
  objc_msgSend(v9, sel_setPriority_, v17);
  LODWORD(v18) = 1.0;
  objc_msgSend(v12, sel_setPriority_, v18);
  LODWORD(v19) = 1.0;
  objc_msgSend(v15, sel_setPriority_, v19);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25524A158);
  v20 = swift_allocObject();
  *(_OWORD *)(v20 + 16) = xmmword_21C249670;
  v21 = objc_msgSend(v1, sel_leadingAnchor);
  v22 = objc_msgSend(v3, sel_leadingAnchor);
  v23 = objc_msgSend(v21, sel_constraintGreaterThanOrEqualToAnchor_, v22);

  *(_QWORD *)(v20 + 32) = v23;
  v24 = objc_msgSend(v1, sel_trailingAnchor);
  v25 = objc_msgSend(v3, sel_trailingAnchor);
  v26 = objc_msgSend(v24, sel_constraintLessThanOrEqualToAnchor_, v25);

  *(_QWORD *)(v20 + 40) = v26;
  v27 = objc_msgSend(v1, sel_topAnchor);
  v28 = objc_msgSend(v3, sel_topAnchor);
  v29 = objc_msgSend(v27, sel_constraintGreaterThanOrEqualToAnchor_, v28);

  *(_QWORD *)(v20 + 48) = v29;
  v30 = objc_msgSend(v1, sel_bottomAnchor);
  v31 = objc_msgSend(v3, sel_bottomAnchor);
  v32 = objc_msgSend(v30, sel_constraintLessThanOrEqualToAnchor_, v31);

  *(_QWORD *)(v20 + 56) = v32;
  v33 = objc_msgSend(v1, sel_centerXAnchor);
  v34 = objc_msgSend(v3, sel_centerXAnchor);
  v35 = objc_msgSend(v33, sel_constraintEqualToAnchor_, v34);

  *(_QWORD *)(v20 + 64) = v35;
  v36 = objc_msgSend(v1, sel_centerYAnchor);
  v37 = objc_msgSend(v3, sel_centerYAnchor);
  v38 = objc_msgSend(v36, sel_constraintEqualToAnchor_, v37);

  *(_QWORD *)(v20 + 72) = v38;
  sub_21C24857C();
  if (!(v20 >> 62))
  {
    v39 = *(_QWORD *)((v20 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    v40 = v39 + 4;
    if (!__OFADD__(v39, 4))
      goto LABEL_4;
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  swift_bridgeObjectRetain();
  v48 = sub_21C2488B8();
  v49 = __OFADD__(v48, 4);
  v40 = v48 + 4;
  if (v49)
    goto LABEL_14;
LABEL_4:
  sub_21C1F300C(v40, 1);
  sub_21C24857C();
  v38 = v6;
  MEMORY[0x22077669C]();
  if (*(_QWORD *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
LABEL_15:
    sub_21C248594();
  sub_21C2485C4();
  sub_21C24857C();
  v41 = v50;
  MEMORY[0x22077669C]();
  if (*(_QWORD *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    sub_21C248594();
  sub_21C2485C4();
  sub_21C24857C();
  v42 = v12;
  MEMORY[0x22077669C]();
  if (*(_QWORD *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    sub_21C248594();
  sub_21C2485C4();
  sub_21C24857C();
  v43 = v15;
  MEMORY[0x22077669C]();
  if (*(_QWORD *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    sub_21C248594();
  v44 = (void *)objc_opt_self();
  sub_21C2485C4();
  sub_21C24857C();
  swift_bridgeObjectRelease();

  sub_21C1F30C8();
  v45 = (void *)sub_21C248558();
  swift_bridgeObjectRelease();
  objc_msgSend(v44, sel_activateConstraints_, v45);

  v46 = v51;
  v47 = sub_21C247F04();
  LOBYTE(v45) = sub_21C2481BC();
  *(_QWORD *)(a1 + 24) = __swift_instantiateConcreteTypeFromMangledName(&qword_25524A168);
  *(_QWORD *)(a1 + 32) = sub_21C1F3104();

  *(_QWORD *)a1 = v46;
  *(_QWORD *)(a1 + 8) = v47;
  *(_BYTE *)(a1 + 16) = (_BYTE)v45;
}

void sub_21C1F2A1C(uint64_t a1@<X8>)
{
  sub_21C1F22C4(a1);
}

void sub_21C1F2A3C(uint64_t a1@<X8>)
{
  void *v1;
  id v3;
  void *v4;
  id v5;
  id v6;
  void *v7;
  void *v8;
  uint64_t v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  void *v22;
  id v23;
  uint64_t v24;

  v3 = objc_msgSend(v1, sel_view);
  if (v3)
  {
    v4 = v3;
    objc_msgSend(v3, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBDB08]), sel_init);
    v6 = objc_msgSend(v5, sel_view);
    if (v6)
    {
      v7 = v6;
      objc_msgSend(v5, sel_addChildViewController_, v1);
      objc_msgSend(v7, sel_addSubview_, v4);
      objc_msgSend(v1, sel_didMoveToParentViewController_, v5);
      v8 = (void *)objc_opt_self();
      __swift_instantiateConcreteTypeFromMangledName(&qword_25524A158);
      v9 = swift_allocObject();
      *(_OWORD *)(v9 + 16) = xmmword_21C249680;
      v10 = objc_msgSend(v4, sel_leadingAnchor);
      v11 = objc_msgSend(v7, sel_leadingAnchor);
      v12 = objc_msgSend(v10, sel_constraintEqualToAnchor_, v11);

      *(_QWORD *)(v9 + 32) = v12;
      v13 = objc_msgSend(v4, sel_trailingAnchor);
      v14 = objc_msgSend(v7, sel_trailingAnchor);
      v15 = objc_msgSend(v13, sel_constraintEqualToAnchor_, v14);

      *(_QWORD *)(v9 + 40) = v15;
      v16 = objc_msgSend(v4, sel_topAnchor);
      v17 = objc_msgSend(v7, sel_topAnchor);
      v18 = objc_msgSend(v16, sel_constraintEqualToAnchor_, v17);

      *(_QWORD *)(v9 + 48) = v18;
      v19 = objc_msgSend(v4, sel_bottomAnchor);
      v20 = objc_msgSend(v7, sel_bottomAnchor);
      v21 = objc_msgSend(v19, sel_constraintEqualToAnchor_, v20);

      *(_QWORD *)(v9 + 56) = v21;
      sub_21C24857C();
      sub_21C1F30C8();
      v22 = (void *)sub_21C248558();
      swift_bridgeObjectRelease();
      objc_msgSend(v8, sel_activateConstraints_, v22);

      v23 = v5;
      v24 = sub_21C247F04();
      LOBYTE(v8) = sub_21C2481BC();
      *(_QWORD *)(a1 + 24) = __swift_instantiateConcreteTypeFromMangledName(&qword_25524A168);
      *(_QWORD *)(a1 + 32) = sub_21C1F3104();

      *(_QWORD *)a1 = v23;
      *(_QWORD *)(a1 + 8) = v24;
      *(_BYTE *)(a1 + 16) = (_BYTE)v8;
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

void sub_21C1F2D60(uint64_t a1@<X8>)
{
  sub_21C1F2A3C(a1);
}

uint64_t sub_21C1F2D80()
{
  return type metadata accessor for RegistryHostProvider.Host(0);
}

uint64_t type metadata accessor for RegistryHostProvider.Host(uint64_t a1)
{
  return sub_21C1F2E98(a1, (uint64_t *)&unk_25524A070);
}

void sub_21C1F2D9C()
{
  unint64_t v0;

  sub_21C1F2E14();
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

void sub_21C1F2E14()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25524A080)
  {
    v0 = sub_21C247D48();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25524A080);
  }
}

uint64_t sub_21C1F2E68()
{
  return MEMORY[0x24BDB9D70];
}

uint64_t sub_21C1F2E74()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t type metadata accessor for RegistryHostProvider(uint64_t a1)
{
  return sub_21C1F2E98(a1, qword_25524A1D8);
}

uint64_t sub_21C1F2E98(uint64_t a1, uint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_21C1F2ECC()
{
  uint64_t *v0;

  return sub_21C1F1A1C(v0[4], v0[2], v0[3]);
}

uint64_t sub_21C1F2ED8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255249DD0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_21C1F2F20@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_21C247D30();
  swift_release();
  result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_21C1F2F9C()
{
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  return sub_21C247D3C();
}

uint64_t sub_21C1F300C(uint64_t a1, char a2)
{
  uint64_t *v2;
  unint64_t v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5 = *v2;
  result = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *v2 = v5;
  v7 = 0;
  if ((result & 1) != 0 && (v5 & 0x8000000000000000) == 0 && (v5 & 0x4000000000000000) == 0)
  {
    if (a1 <= *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x18) >> 1)
      return result;
    v7 = 1;
  }
  if (v5 >> 62)
  {
    swift_bridgeObjectRetain();
    v8 = sub_21C2488B8();
    swift_bridgeObjectRelease();
  }
  else
  {
    v8 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  if (v8 <= a1)
    v9 = a1;
  else
    v9 = v8;
  result = MEMORY[0x2207769A8](v7, v9, a2 & 1, v5);
  *v2 = result;
  return result;
}

unint64_t sub_21C1F30C8()
{
  unint64_t result;

  result = qword_25524A160;
  if (!qword_25524A160)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_25524A160);
  }
  return result;
}

unint64_t sub_21C1F3104()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_25524A170;
  if (!qword_25524A170)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25524A168);
    v2[0] = sub_21C1F3170();
    v2[1] = MEMORY[0x24BDF1050];
    result = MEMORY[0x22077702C](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_25524A170);
  }
  return result;
}

unint64_t sub_21C1F3170()
{
  unint64_t result;

  result = qword_25524A178;
  if (!qword_25524A178)
  {
    result = MEMORY[0x22077702C](&unk_21C24991C, &type metadata for UIKitPreviewWrapperView);
    atomic_store(result, (unint64_t *)&qword_25524A178);
  }
  return result;
}

ValueMetadata *type metadata accessor for UIKitPreviewWrapperView()
{
  return &type metadata for UIKitPreviewWrapperView;
}

_QWORD *sub_21C1F31C4(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v4;
  int v5;
  __int128 v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;

  v4 = (_QWORD *)a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = *(_OWORD *)(a2 + 3);
    *(_OWORD *)(a1 + 24) = v7;
    (**(void (***)(uint64_t, uint64_t *))(v7 - 8))(a1, a2);
    v8 = *(int *)(a3 + 20);
    v9 = (char *)v4 + v8;
    v10 = (uint64_t)a2 + v8;
    v11 = sub_21C246E6C();
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = *(int *)(a3 + 24);
    v13 = *(_OWORD *)((char *)a2 + v12 + 24);
    *(_OWORD *)((char *)v4 + v12 + 24) = v13;
    (**(void (***)(void))(v13 - 8))();
  }
  return v4;
}

uint64_t sub_21C1F3298(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  __swift_destroy_boxed_opaque_existential_1(a1);
  v4 = a1 + *(int *)(a2 + 20);
  v5 = sub_21C246E6C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  return __swift_destroy_boxed_opaque_existential_1(a1 + *(int *)(a2 + 24));
}

uint64_t sub_21C1F32F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;

  v6 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v6;
  (**(void (***)(void))(v6 - 8))();
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_21C246E6C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = *(int *)(a3 + 24);
  v12 = *(_OWORD *)(a2 + v11 + 24);
  *(_OWORD *)(a1 + v11 + 24) = v12;
  (**(void (***)(void))(v12 - 8))();
  return a1;
}

uint64_t *sub_21C1F3390(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  __swift_assign_boxed_opaque_existential_1(a1, a2);
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_21C246E6C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  __swift_assign_boxed_opaque_existential_1((uint64_t *)((char *)a1 + *(int *)(a3 + 24)), (uint64_t *)((char *)a2 + *(int *)(a3 + 24)));
  return a1;
}

uint64_t sub_21C1F3408(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;

  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_21C246E6C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = *(int *)(a3 + 24);
  v12 = a1 + v11;
  v13 = a2 + v11;
  v14 = *(_OWORD *)(v13 + 16);
  *(_OWORD *)v12 = *(_OWORD *)v13;
  *(_OWORD *)(v12 + 16) = v14;
  *(_QWORD *)(v12 + 32) = *(_QWORD *)(v13 + 32);
  return a1;
}

uint64_t sub_21C1F3498(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;

  __swift_destroy_boxed_opaque_existential_1(a1);
  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_21C246E6C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = *(int *)(a3 + 24);
  v12 = a1 + v11;
  v13 = a2 + v11;
  __swift_destroy_boxed_opaque_existential_1(a1 + v11);
  v14 = *(_OWORD *)(v13 + 16);
  *(_OWORD *)v12 = *(_OWORD *)v13;
  *(_OWORD *)(v12 + 16) = v14;
  *(_QWORD *)(v12 + 32) = *(_QWORD *)(v13 + 32);
  return a1;
}

uint64_t sub_21C1F3534()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_21C1F3540(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 24);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_21C246E6C();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 20), a2, v8);
  }
}

uint64_t sub_21C1F35BC()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_21C1F35C8(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 24) = (a2 - 1);
  }
  else
  {
    v7 = sub_21C246E6C();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 20), a2, a2, v7);
  }
  return result;
}

uint64_t sub_21C1F363C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_21C246E6C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

_QWORD *initializeBufferWithCopyOfBuffer for RegistryHostProvider.Host.HostView(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  return a1;
}

uint64_t destroy for RegistryHostProvider.Host.HostView()
{
  return swift_release();
}

_QWORD *assignWithCopy for RegistryHostProvider.Host.HostView(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  return a1;
}

_QWORD *assignWithTake for RegistryHostProvider.Host.HostView(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for RegistryHostProvider.Host.HostView(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 16))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for RegistryHostProvider.Host.HostView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 16) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for RegistryHostProvider.Host.HostView()
{
  return &type metadata for RegistryHostProvider.Host.HostView;
}

unint64_t sub_21C1F37EC()
{
  unint64_t result;

  result = qword_25524A218;
  if (!qword_25524A218)
  {
    result = MEMORY[0x22077702C](&unk_21C249854, &type metadata for RegistryHostProvider.Host.HostView);
    atomic_store(result, (unint64_t *)&qword_25524A218);
  }
  return result;
}

uint64_t sub_21C1F3830()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_21C1F3844()
{
  return MEMORY[0x24BDF5560];
}

uint64_t sub_21C1F3850()
{
  return sub_21C1F3874(qword_25524A220, (uint64_t)&unk_21C249810);
}

uint64_t sub_21C1F3874(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for RegistryHostProvider.Host(255);
    result = MEMORY[0x22077702C](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t *sub_21C1F38B4(uint64_t *a1, uint64_t *a2)
{
  assignWithCopy for PreviewModifiers(a2, a1);
  return a2;
}

unint64_t sub_21C1F38F8()
{
  unint64_t result;

  result = qword_25524A258;
  if (!qword_25524A258)
  {
    result = MEMORY[0x22077702C](&unk_21C2498A4, &type metadata for UIKitPreviewWrapperView);
    atomic_store(result, (unint64_t *)&qword_25524A258);
  }
  return result;
}

unint64_t sub_21C1F3940()
{
  unint64_t result;
  uint64_t v1;

  result = qword_25524A260;
  if (!qword_25524A260)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25524A268);
    result = MEMORY[0x22077702C](MEMORY[0x24BDF4700], v1);
    atomic_store(result, (unint64_t *)&qword_25524A260);
  }
  return result;
}

uint64_t sub_21C1F3998(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  unint64_t v16;
  char v17;
  NSObject *v18;
  os_log_type_t v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  char isUniquelyReferenced_nonNull_native;
  _BYTE v30[4];
  int v31;
  os_log_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v2 = v1;
  v4 = sub_21C247CC4();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = &v30[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = sub_21C2476E8();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v12 = &v30[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v10);
  v14 = &v30[-v13];
  v15 = *v1;
  if (*(_QWORD *)(v15 + 16)
    && (v16 = sub_21C1F6448(a1), (v17 & 1) != 0)
    && *(ValueMetadata **)(*(_QWORD *)(v15 + 56) + 16 * v16) != &type metadata for PreviewProviderEntryPoint)
  {
    v34 = *(_QWORD *)(*(_QWORD *)(v15 + 56) + 16 * v16);
    sub_21C247C94();
    (*(void (**)(_BYTE *, uint64_t, uint64_t))(v9 + 16))(v12, a1, v8);
    v18 = sub_21C247CB8();
    v19 = sub_21C24872C();
    v20 = v19;
    if (os_log_type_enabled(v18, v19))
    {
      v21 = swift_slowAlloc();
      v33 = swift_slowAlloc();
      v36 = v33;
      *(_DWORD *)v21 = 136315650;
      v32 = v18;
      v35 = sub_21C203A90(0xD000000000000019, 0x800000021C24D570, &v36);
      v31 = v20;
      sub_21C2487A4();
      *(_WORD *)(v21 + 12) = 2080;
      sub_21C1FBD14(&qword_25524A270, (uint64_t (*)(uint64_t))MEMORY[0x24BE783F0], MEMORY[0x24BE78410]);
      v22 = sub_21C2488F4();
      v35 = sub_21C203A90(v22, v23, &v36);
      sub_21C2487A4();
      swift_bridgeObjectRelease();
      (*(void (**)(_BYTE *, uint64_t))(v9 + 8))(v12, v8);
      *(_WORD *)(v21 + 22) = 2080;
      v24 = sub_21C2489E4();
      v35 = sub_21C203A90(v24, v25, &v36);
      sub_21C2487A4();
      swift_bridgeObjectRelease();
      v18 = v32;
      _os_log_impl(&dword_21C1E3000, v32, (os_log_type_t)v31, "Can't register %s for %s -- already registered: %s", (uint8_t *)v21, 0x20u);
      v26 = v33;
      swift_arrayDestroy();
      MEMORY[0x2207770EC](v26, -1, -1);
      MEMORY[0x2207770EC](v21, -1, -1);
    }
    else
    {
      (*(void (**)(_BYTE *, uint64_t))(v9 + 8))(v12, v8);
    }

    return (*(uint64_t (**)(_BYTE *, uint64_t))(v5 + 8))(v7, v4);
  }
  else
  {
    (*(void (**)(_BYTE *, uint64_t, uint64_t))(v9 + 16))(v14, a1, v8);
    v27 = sub_21C1FBCD0();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v36 = *v2;
    *v2 = 0x8000000000000000;
    sub_21C1F9910((uint64_t)&type metadata for PreviewProviderEntryPoint, v27, (uint64_t)v14, isUniquelyReferenced_nonNull_native, &qword_255249FA0);
    *v2 = v36;
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(_BYTE *, uint64_t))(v9 + 8))(v14, v8);
  }
}

uint64_t sub_21C1F3D1C(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  unint64_t v16;
  char v17;
  NSObject *v18;
  os_log_type_t v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  char isUniquelyReferenced_nonNull_native;
  _BYTE v30[4];
  int v31;
  os_log_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v2 = v1;
  v4 = sub_21C247CC4();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = &v30[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = sub_21C2476E8();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v12 = &v30[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v10);
  v14 = &v30[-v13];
  v15 = *v1;
  if (*(_QWORD *)(v15 + 16)
    && (v16 = sub_21C1F6448(a1), (v17 & 1) != 0)
    && *(ValueMetadata **)(*(_QWORD *)(v15 + 56) + 16 * v16) != &type metadata for PreviewPreflightEntryPoint)
  {
    v34 = *(_QWORD *)(*(_QWORD *)(v15 + 56) + 16 * v16);
    sub_21C247C94();
    (*(void (**)(_BYTE *, uint64_t, uint64_t))(v9 + 16))(v12, a1, v8);
    v18 = sub_21C247CB8();
    v19 = sub_21C24872C();
    v20 = v19;
    if (os_log_type_enabled(v18, v19))
    {
      v21 = swift_slowAlloc();
      v33 = swift_slowAlloc();
      v36 = v33;
      *(_DWORD *)v21 = 136315650;
      v32 = v18;
      v35 = sub_21C203A90(0xD00000000000001ALL, 0x800000021C24D550, &v36);
      v31 = v20;
      sub_21C2487A4();
      *(_WORD *)(v21 + 12) = 2080;
      sub_21C1FBD14(&qword_25524A270, (uint64_t (*)(uint64_t))MEMORY[0x24BE783F0], MEMORY[0x24BE78410]);
      v22 = sub_21C2488F4();
      v35 = sub_21C203A90(v22, v23, &v36);
      sub_21C2487A4();
      swift_bridgeObjectRelease();
      (*(void (**)(_BYTE *, uint64_t))(v9 + 8))(v12, v8);
      *(_WORD *)(v21 + 22) = 2080;
      v24 = sub_21C2489E4();
      v35 = sub_21C203A90(v24, v25, &v36);
      sub_21C2487A4();
      swift_bridgeObjectRelease();
      v18 = v32;
      _os_log_impl(&dword_21C1E3000, v32, (os_log_type_t)v31, "Can't register %s for %s -- already registered: %s", (uint8_t *)v21, 0x20u);
      v26 = v33;
      swift_arrayDestroy();
      MEMORY[0x2207770EC](v26, -1, -1);
      MEMORY[0x2207770EC](v21, -1, -1);
    }
    else
    {
      (*(void (**)(_BYTE *, uint64_t))(v9 + 8))(v12, v8);
    }

    return (*(uint64_t (**)(_BYTE *, uint64_t))(v5 + 8))(v7, v4);
  }
  else
  {
    (*(void (**)(_BYTE *, uint64_t, uint64_t))(v9 + 16))(v14, a1, v8);
    v27 = sub_21C1FBC8C();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v36 = *v2;
    *v2 = 0x8000000000000000;
    sub_21C1F9910((uint64_t)&type metadata for PreviewPreflightEntryPoint, v27, (uint64_t)v14, isUniquelyReferenced_nonNull_native, &qword_255249FA0);
    *v2 = v36;
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(_BYTE *, uint64_t))(v9 + 8))(v14, v8);
  }
}

uint64_t sub_21C1F40A0(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  unint64_t v16;
  char v17;
  NSObject *v18;
  os_log_type_t v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  char isUniquelyReferenced_nonNull_native;
  _BYTE v30[4];
  int v31;
  os_log_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v2 = v1;
  v4 = sub_21C247CC4();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = &v30[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = sub_21C2476E8();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v12 = &v30[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v10);
  v14 = &v30[-v13];
  v15 = *v1;
  if (*(_QWORD *)(v15 + 16)
    && (v16 = sub_21C1F6448(a1), (v17 & 1) != 0)
    && *(ValueMetadata **)(*(_QWORD *)(v15 + 56) + 16 * v16) != &type metadata for RegistryPreflightEntryPoint)
  {
    v34 = *(_QWORD *)(*(_QWORD *)(v15 + 56) + 16 * v16);
    sub_21C247C94();
    (*(void (**)(_BYTE *, uint64_t, uint64_t))(v9 + 16))(v12, a1, v8);
    v18 = sub_21C247CB8();
    v19 = sub_21C24872C();
    v20 = v19;
    if (os_log_type_enabled(v18, v19))
    {
      v21 = swift_slowAlloc();
      v33 = swift_slowAlloc();
      v36 = v33;
      *(_DWORD *)v21 = 136315650;
      v32 = v18;
      v35 = sub_21C203A90(0xD00000000000001BLL, 0x800000021C24D530, &v36);
      v31 = v20;
      sub_21C2487A4();
      *(_WORD *)(v21 + 12) = 2080;
      sub_21C1FBD14(&qword_25524A270, (uint64_t (*)(uint64_t))MEMORY[0x24BE783F0], MEMORY[0x24BE78410]);
      v22 = sub_21C2488F4();
      v35 = sub_21C203A90(v22, v23, &v36);
      sub_21C2487A4();
      swift_bridgeObjectRelease();
      (*(void (**)(_BYTE *, uint64_t))(v9 + 8))(v12, v8);
      *(_WORD *)(v21 + 22) = 2080;
      v24 = sub_21C2489E4();
      v35 = sub_21C203A90(v24, v25, &v36);
      sub_21C2487A4();
      swift_bridgeObjectRelease();
      v18 = v32;
      _os_log_impl(&dword_21C1E3000, v32, (os_log_type_t)v31, "Can't register %s for %s -- already registered: %s", (uint8_t *)v21, 0x20u);
      v26 = v33;
      swift_arrayDestroy();
      MEMORY[0x2207770EC](v26, -1, -1);
      MEMORY[0x2207770EC](v21, -1, -1);
    }
    else
    {
      (*(void (**)(_BYTE *, uint64_t))(v9 + 8))(v12, v8);
    }

    return (*(uint64_t (**)(_BYTE *, uint64_t))(v5 + 8))(v7, v4);
  }
  else
  {
    (*(void (**)(_BYTE *, uint64_t, uint64_t))(v9 + 16))(v14, a1, v8);
    v27 = sub_21C1FBC48();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v36 = *v2;
    *v2 = 0x8000000000000000;
    sub_21C1F9910((uint64_t)&type metadata for RegistryPreflightEntryPoint, v27, (uint64_t)v14, isUniquelyReferenced_nonNull_native, &qword_255249FA0);
    *v2 = v36;
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(_BYTE *, uint64_t))(v9 + 8))(v14, v8);
  }
}

uint64_t sub_21C1F4424(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  char v17;
  NSObject *v18;
  os_log_type_t v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char isUniquelyReferenced_nonNull_native;
  _BYTE v30[4];
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v2 = v1;
  v34 = sub_21C247CC4();
  v4 = *(_QWORD *)(v34 - 8);
  MEMORY[0x24BDAC7A8](v34);
  v6 = &v30[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = sub_21C2476E8();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v11 = &v30[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v9);
  v13 = &v30[-v12];
  v14 = type metadata accessor for RegistryEntryPoint();
  v15 = *v1;
  if (*(_QWORD *)(v15 + 16)
    && (v16 = sub_21C1F6448(a1), (v17 & 1) != 0)
    && *(_QWORD *)(*(_QWORD *)(v15 + 56) + 16 * v16) != v14)
  {
    v33 = *(_QWORD *)(*(_QWORD *)(v15 + 56) + 16 * v16);
    sub_21C247C94();
    (*(void (**)(_BYTE *, uint64_t, uint64_t))(v8 + 16))(v11, a1, v7);
    v18 = sub_21C247CB8();
    v19 = sub_21C24872C();
    v20 = v19;
    if (os_log_type_enabled(v18, v19))
    {
      v21 = swift_slowAlloc();
      v32 = swift_slowAlloc();
      v36 = v32;
      *(_DWORD *)v21 = 136315650;
      v31 = v20;
      v35 = sub_21C203A90(0xD000000000000012, 0x800000021C24D510, &v36);
      sub_21C2487A4();
      *(_WORD *)(v21 + 12) = 2080;
      sub_21C1FBD14(&qword_25524A270, (uint64_t (*)(uint64_t))MEMORY[0x24BE783F0], MEMORY[0x24BE78410]);
      v22 = sub_21C2488F4();
      v35 = sub_21C203A90(v22, v23, &v36);
      sub_21C2487A4();
      swift_bridgeObjectRelease();
      (*(void (**)(_BYTE *, uint64_t))(v8 + 8))(v11, v7);
      *(_WORD *)(v21 + 22) = 2080;
      v24 = sub_21C2489E4();
      v35 = sub_21C203A90(v24, v25, &v36);
      sub_21C2487A4();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_21C1E3000, v18, (os_log_type_t)v31, "Can't register %s for %s -- already registered: %s", (uint8_t *)v21, 0x20u);
      v26 = v32;
      swift_arrayDestroy();
      MEMORY[0x2207770EC](v26, -1, -1);
      MEMORY[0x2207770EC](v21, -1, -1);
    }
    else
    {
      (*(void (**)(_BYTE *, uint64_t))(v8 + 8))(v11, v7);
    }

    return (*(uint64_t (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v34);
  }
  else
  {
    (*(void (**)(_BYTE *, uint64_t, uint64_t))(v8 + 16))(v13, a1, v7);
    v27 = sub_21C1FBD14(&qword_25524A308, (uint64_t (*)(uint64_t))type metadata accessor for RegistryEntryPoint, (uint64_t)&unk_21C24C0D0);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v36 = *v2;
    *v2 = 0x8000000000000000;
    sub_21C1F9910(v14, v27, (uint64_t)v13, isUniquelyReferenced_nonNull_native, &qword_255249FA0);
    *v2 = v36;
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(_BYTE *, uint64_t))(v8 + 8))(v13, v7);
  }
}

uint64_t sub_21C1F47B8(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  unint64_t v16;
  char v17;
  NSObject *v18;
  os_log_type_t v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  char isUniquelyReferenced_nonNull_native;
  _BYTE v30[4];
  int v31;
  os_log_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v2 = v1;
  v4 = sub_21C247CC4();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = &v30[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = sub_21C2476E8();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v12 = &v30[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v10);
  v14 = &v30[-v13];
  v15 = *v1;
  if (*(_QWORD *)(v15 + 16)
    && (v16 = sub_21C1F6448(a1), (v17 & 1) != 0)
    && *(ValueMetadata **)(*(_QWORD *)(v15 + 56) + 16 * v16) != &type metadata for CFunctionEntryPoint)
  {
    v34 = *(_QWORD *)(*(_QWORD *)(v15 + 56) + 16 * v16);
    sub_21C247C94();
    (*(void (**)(_BYTE *, uint64_t, uint64_t))(v9 + 16))(v12, a1, v8);
    v18 = sub_21C247CB8();
    v19 = sub_21C24872C();
    v20 = v19;
    if (os_log_type_enabled(v18, v19))
    {
      v21 = swift_slowAlloc();
      v33 = swift_slowAlloc();
      v36 = v33;
      *(_DWORD *)v21 = 136315650;
      v32 = v18;
      v35 = sub_21C203A90(0xD000000000000013, 0x800000021C24D4F0, &v36);
      v31 = v20;
      sub_21C2487A4();
      *(_WORD *)(v21 + 12) = 2080;
      sub_21C1FBD14(&qword_25524A270, (uint64_t (*)(uint64_t))MEMORY[0x24BE783F0], MEMORY[0x24BE78410]);
      v22 = sub_21C2488F4();
      v35 = sub_21C203A90(v22, v23, &v36);
      sub_21C2487A4();
      swift_bridgeObjectRelease();
      (*(void (**)(_BYTE *, uint64_t))(v9 + 8))(v12, v8);
      *(_WORD *)(v21 + 22) = 2080;
      v24 = sub_21C2489E4();
      v35 = sub_21C203A90(v24, v25, &v36);
      sub_21C2487A4();
      swift_bridgeObjectRelease();
      v18 = v32;
      _os_log_impl(&dword_21C1E3000, v32, (os_log_type_t)v31, "Can't register %s for %s -- already registered: %s", (uint8_t *)v21, 0x20u);
      v26 = v33;
      swift_arrayDestroy();
      MEMORY[0x2207770EC](v26, -1, -1);
      MEMORY[0x2207770EC](v21, -1, -1);
    }
    else
    {
      (*(void (**)(_BYTE *, uint64_t))(v9 + 8))(v12, v8);
    }

    return (*(uint64_t (**)(_BYTE *, uint64_t))(v5 + 8))(v7, v4);
  }
  else
  {
    (*(void (**)(_BYTE *, uint64_t, uint64_t))(v9 + 16))(v14, a1, v8);
    v27 = sub_21C1FBC04();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v36 = *v2;
    *v2 = 0x8000000000000000;
    sub_21C1F9910((uint64_t)&type metadata for CFunctionEntryPoint, v27, (uint64_t)v14, isUniquelyReferenced_nonNull_native, &qword_255249FA0);
    *v2 = v36;
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(_BYTE *, uint64_t))(v9 + 8))(v14, v8);
  }
}

uint64_t sub_21C1F4B3C(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  unint64_t v16;
  char v17;
  NSObject *v18;
  os_log_type_t v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  char isUniquelyReferenced_nonNull_native;
  _BYTE v30[4];
  int v31;
  os_log_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v2 = v1;
  v4 = sub_21C247CC4();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = &v30[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = sub_21C2476E8();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v12 = &v30[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v10);
  v14 = &v30[-v13];
  v15 = *v1;
  if (*(_QWORD *)(v15 + 16)
    && (v16 = sub_21C1F6448(a1), (v17 & 1) != 0)
    && *(ValueMetadata **)(*(_QWORD *)(v15 + 56) + 16 * v16) != &type metadata for NoopEntryPoint)
  {
    v34 = *(_QWORD *)(*(_QWORD *)(v15 + 56) + 16 * v16);
    sub_21C247C94();
    (*(void (**)(_BYTE *, uint64_t, uint64_t))(v9 + 16))(v12, a1, v8);
    v18 = sub_21C247CB8();
    v19 = sub_21C24872C();
    v20 = v19;
    if (os_log_type_enabled(v18, v19))
    {
      v21 = swift_slowAlloc();
      v33 = swift_slowAlloc();
      v36 = v33;
      *(_DWORD *)v21 = 136315650;
      v32 = v18;
      v35 = sub_21C203A90(0x72746E45706F6F4ELL, 0xEE00746E696F5079, &v36);
      v31 = v20;
      sub_21C2487A4();
      *(_WORD *)(v21 + 12) = 2080;
      sub_21C1FBD14(&qword_25524A270, (uint64_t (*)(uint64_t))MEMORY[0x24BE783F0], MEMORY[0x24BE78410]);
      v22 = sub_21C2488F4();
      v35 = sub_21C203A90(v22, v23, &v36);
      sub_21C2487A4();
      swift_bridgeObjectRelease();
      (*(void (**)(_BYTE *, uint64_t))(v9 + 8))(v12, v8);
      *(_WORD *)(v21 + 22) = 2080;
      v24 = sub_21C2489E4();
      v35 = sub_21C203A90(v24, v25, &v36);
      sub_21C2487A4();
      swift_bridgeObjectRelease();
      v18 = v32;
      _os_log_impl(&dword_21C1E3000, v32, (os_log_type_t)v31, "Can't register %s for %s -- already registered: %s", (uint8_t *)v21, 0x20u);
      v26 = v33;
      swift_arrayDestroy();
      MEMORY[0x2207770EC](v26, -1, -1);
      MEMORY[0x2207770EC](v21, -1, -1);
    }
    else
    {
      (*(void (**)(_BYTE *, uint64_t))(v9 + 8))(v12, v8);
    }

    return (*(uint64_t (**)(_BYTE *, uint64_t))(v5 + 8))(v7, v4);
  }
  else
  {
    (*(void (**)(_BYTE *, uint64_t, uint64_t))(v9 + 16))(v14, a1, v8);
    v27 = sub_21C1FBBC0();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v36 = *v2;
    *v2 = 0x8000000000000000;
    sub_21C1F9910((uint64_t)&type metadata for NoopEntryPoint, v27, (uint64_t)v14, isUniquelyReferenced_nonNull_native, &qword_255249FA0);
    *v2 = v36;
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(_BYTE *, uint64_t))(v9 + 8))(v14, v8);
  }
}

uint64_t EntryPointTypeRegistry.register<A>(entryPoint:for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;
  uint64_t *v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  unint64_t v20;
  char v21;
  NSObject *v22;
  os_log_type_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  char isUniquelyReferenced_nonNull_native;
  _QWORD v34[2];
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v5 = v4;
  v9 = sub_21C2476E8();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)v34 - v14;
  v16 = sub_21C247CC4();
  v35 = *(_QWORD *)(v16 - 8);
  v36 = v16;
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)v34 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = *v4;
  if (*(_QWORD *)(v19 + 16)
    && (v20 = sub_21C1F6448(a2), (v21 & 1) != 0)
    && *(_QWORD *)(*(_QWORD *)(v19 + 56) + 16 * v20) != a1)
  {
    v34[1] = *(_QWORD *)(*(_QWORD *)(v19 + 56) + 16 * v20);
    sub_21C247C94();
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v15, a2, v9);
    v22 = sub_21C247CB8();
    v23 = sub_21C24872C();
    if (os_log_type_enabled(v22, v23))
    {
      v24 = swift_slowAlloc();
      v34[0] = swift_slowAlloc();
      v38 = v34[0];
      *(_DWORD *)v24 = 136315650;
      v25 = sub_21C2489E4();
      v37 = sub_21C203A90(v25, v26, &v38);
      sub_21C2487A4();
      swift_bridgeObjectRelease();
      *(_WORD *)(v24 + 12) = 2080;
      sub_21C1FBD14(&qword_25524A270, (uint64_t (*)(uint64_t))MEMORY[0x24BE783F0], MEMORY[0x24BE78410]);
      v27 = sub_21C2488F4();
      v37 = sub_21C203A90(v27, v28, &v38);
      sub_21C2487A4();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v10 + 8))(v15, v9);
      *(_WORD *)(v24 + 22) = 2080;
      v29 = sub_21C2489E4();
      v37 = sub_21C203A90(v29, v30, &v38);
      sub_21C2487A4();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_21C1E3000, v22, v23, "Can't register %s for %s -- already registered: %s", (uint8_t *)v24, 0x20u);
      v31 = v34[0];
      swift_arrayDestroy();
      MEMORY[0x2207770EC](v31, -1, -1);
      MEMORY[0x2207770EC](v24, -1, -1);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v10 + 8))(v15, v9);
    }

    return (*(uint64_t (**)(char *, uint64_t))(v35 + 8))(v18, v36);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v13, a2, v9);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v38 = *v5;
    *v5 = 0x8000000000000000;
    sub_21C1F9910(a1, a4, (uint64_t)v13, isUniquelyReferenced_nonNull_native, &qword_255249FA0);
    *v5 = v38;
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v13, v9);
  }
}

{
  uint64_t v4;
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  unint64_t v20;
  char v21;
  NSObject *v22;
  os_log_type_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  char isUniquelyReferenced_nonNull_native;
  _QWORD v34[2];
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v5 = v4;
  v9 = sub_21C2476E8();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)v34 - v14;
  v16 = sub_21C247CC4();
  v35 = *(_QWORD *)(v16 - 8);
  v36 = v16;
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)v34 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = *(_QWORD *)(v4 + 8);
  if (*(_QWORD *)(v19 + 16)
    && (v20 = sub_21C1F6448(a2), (v21 & 1) != 0)
    && *(_QWORD *)(*(_QWORD *)(v19 + 56) + 16 * v20) != a1)
  {
    v34[1] = *(_QWORD *)(*(_QWORD *)(v19 + 56) + 16 * v20);
    sub_21C247C94();
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v15, a2, v9);
    v22 = sub_21C247CB8();
    v23 = sub_21C24872C();
    if (os_log_type_enabled(v22, v23))
    {
      v24 = swift_slowAlloc();
      v34[0] = swift_slowAlloc();
      v38 = v34[0];
      *(_DWORD *)v24 = 136315650;
      v25 = sub_21C2489E4();
      v37 = sub_21C203A90(v25, v26, &v38);
      sub_21C2487A4();
      swift_bridgeObjectRelease();
      *(_WORD *)(v24 + 12) = 2080;
      sub_21C1FBD14(&qword_25524A270, (uint64_t (*)(uint64_t))MEMORY[0x24BE783F0], MEMORY[0x24BE78410]);
      v27 = sub_21C2488F4();
      v37 = sub_21C203A90(v27, v28, &v38);
      sub_21C2487A4();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v10 + 8))(v15, v9);
      *(_WORD *)(v24 + 22) = 2080;
      v29 = sub_21C2489E4();
      v37 = sub_21C203A90(v29, v30, &v38);
      sub_21C2487A4();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_21C1E3000, v22, v23, "Can't register %s for %s -- already registered: %s", (uint8_t *)v24, 0x20u);
      v31 = v34[0];
      swift_arrayDestroy();
      MEMORY[0x2207770EC](v31, -1, -1);
      MEMORY[0x2207770EC](v24, -1, -1);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v10 + 8))(v15, v9);
    }

    return (*(uint64_t (**)(char *, uint64_t))(v35 + 8))(v18, v36);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v13, a2, v9);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v38 = *(_QWORD *)(v5 + 8);
    *(_QWORD *)(v5 + 8) = 0x8000000000000000;
    sub_21C1F9910(a1, a4, (uint64_t)v13, isUniquelyReferenced_nonNull_native, &qword_255249F90);
    *(_QWORD *)(v5 + 8) = v38;
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v13, v9);
  }
}

uint64_t sub_21C1F5234(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  char v17;
  NSObject *v18;
  os_log_type_t v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char isUniquelyReferenced_nonNull_native;
  _BYTE v30[4];
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v2 = v1;
  v34 = sub_21C247CC4();
  v4 = *(_QWORD *)(v34 - 8);
  MEMORY[0x24BDAC7A8](v34);
  v6 = &v30[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = sub_21C2476E8();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v11 = &v30[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v9);
  v13 = &v30[-v12];
  v14 = type metadata accessor for PreviewEntryPoint();
  v15 = *(_QWORD *)(v1 + 8);
  if (*(_QWORD *)(v15 + 16)
    && (v16 = sub_21C1F6448(a1), (v17 & 1) != 0)
    && *(_QWORD *)(*(_QWORD *)(v15 + 56) + 16 * v16) != v14)
  {
    v33 = *(_QWORD *)(*(_QWORD *)(v15 + 56) + 16 * v16);
    sub_21C247C94();
    (*(void (**)(_BYTE *, uint64_t, uint64_t))(v8 + 16))(v11, a1, v7);
    v18 = sub_21C247CB8();
    v19 = sub_21C24872C();
    v20 = v19;
    if (os_log_type_enabled(v18, v19))
    {
      v21 = swift_slowAlloc();
      v32 = swift_slowAlloc();
      v36 = v32;
      *(_DWORD *)v21 = 136315650;
      v31 = v20;
      v35 = sub_21C203A90(0xD000000000000011, 0x800000021C24D4D0, &v36);
      sub_21C2487A4();
      *(_WORD *)(v21 + 12) = 2080;
      sub_21C1FBD14(&qword_25524A270, (uint64_t (*)(uint64_t))MEMORY[0x24BE783F0], MEMORY[0x24BE78410]);
      v22 = sub_21C2488F4();
      v35 = sub_21C203A90(v22, v23, &v36);
      sub_21C2487A4();
      swift_bridgeObjectRelease();
      (*(void (**)(_BYTE *, uint64_t))(v8 + 8))(v11, v7);
      *(_WORD *)(v21 + 22) = 2080;
      v24 = sub_21C2489E4();
      v35 = sub_21C203A90(v24, v25, &v36);
      sub_21C2487A4();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_21C1E3000, v18, (os_log_type_t)v31, "Can't register %s for %s -- already registered: %s", (uint8_t *)v21, 0x20u);
      v26 = v32;
      swift_arrayDestroy();
      MEMORY[0x2207770EC](v26, -1, -1);
      MEMORY[0x2207770EC](v21, -1, -1);
    }
    else
    {
      (*(void (**)(_BYTE *, uint64_t))(v8 + 8))(v11, v7);
    }

    return (*(uint64_t (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v34);
  }
  else
  {
    (*(void (**)(_BYTE *, uint64_t, uint64_t))(v8 + 16))(v13, a1, v7);
    v27 = sub_21C1FBD14(&qword_25524A2F0, (uint64_t (*)(uint64_t))type metadata accessor for PreviewEntryPoint, (uint64_t)&unk_21C24AC88);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v36 = *(_QWORD *)(v2 + 8);
    *(_QWORD *)(v2 + 8) = 0x8000000000000000;
    sub_21C1F9910(v14, v27, (uint64_t)v13, isUniquelyReferenced_nonNull_native, &qword_255249F90);
    *(_QWORD *)(v2 + 8) = v36;
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(_BYTE *, uint64_t))(v8 + 8))(v13, v7);
  }
}

uint64_t sub_21C1F55C8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  char v17;
  NSObject *v18;
  os_log_type_t v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char isUniquelyReferenced_nonNull_native;
  _BYTE v30[4];
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v2 = v1;
  v34 = sub_21C247CC4();
  v4 = *(_QWORD *)(v34 - 8);
  MEMORY[0x24BDAC7A8](v34);
  v6 = &v30[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = sub_21C2476E8();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v11 = &v30[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v9);
  v13 = &v30[-v12];
  v14 = type metadata accessor for MainPreviewEntryPoint();
  v15 = *(_QWORD *)(v1 + 8);
  if (*(_QWORD *)(v15 + 16)
    && (v16 = sub_21C1F6448(a1), (v17 & 1) != 0)
    && *(_QWORD *)(*(_QWORD *)(v15 + 56) + 16 * v16) != v14)
  {
    v33 = *(_QWORD *)(*(_QWORD *)(v15 + 56) + 16 * v16);
    sub_21C247C94();
    (*(void (**)(_BYTE *, uint64_t, uint64_t))(v8 + 16))(v11, a1, v7);
    v18 = sub_21C247CB8();
    v19 = sub_21C24872C();
    v20 = v19;
    if (os_log_type_enabled(v18, v19))
    {
      v21 = swift_slowAlloc();
      v32 = swift_slowAlloc();
      v36 = v32;
      *(_DWORD *)v21 = 136315650;
      v31 = v20;
      v35 = sub_21C203A90(0xD000000000000015, 0x800000021C24D4B0, &v36);
      sub_21C2487A4();
      *(_WORD *)(v21 + 12) = 2080;
      sub_21C1FBD14(&qword_25524A270, (uint64_t (*)(uint64_t))MEMORY[0x24BE783F0], MEMORY[0x24BE78410]);
      v22 = sub_21C2488F4();
      v35 = sub_21C203A90(v22, v23, &v36);
      sub_21C2487A4();
      swift_bridgeObjectRelease();
      (*(void (**)(_BYTE *, uint64_t))(v8 + 8))(v11, v7);
      *(_WORD *)(v21 + 22) = 2080;
      v24 = sub_21C2489E4();
      v35 = sub_21C203A90(v24, v25, &v36);
      sub_21C2487A4();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_21C1E3000, v18, (os_log_type_t)v31, "Can't register %s for %s -- already registered: %s", (uint8_t *)v21, 0x20u);
      v26 = v32;
      swift_arrayDestroy();
      MEMORY[0x2207770EC](v26, -1, -1);
      MEMORY[0x2207770EC](v21, -1, -1);
    }
    else
    {
      (*(void (**)(_BYTE *, uint64_t))(v8 + 8))(v11, v7);
    }

    return (*(uint64_t (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v34);
  }
  else
  {
    (*(void (**)(_BYTE *, uint64_t, uint64_t))(v8 + 16))(v13, a1, v7);
    v27 = sub_21C1FBD14(&qword_25524A2E8, (uint64_t (*)(uint64_t))type metadata accessor for MainPreviewEntryPoint, (uint64_t)&unk_21C24918C);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v36 = *(_QWORD *)(v2 + 8);
    *(_QWORD *)(v2 + 8) = 0x8000000000000000;
    sub_21C1F9910(v14, v27, (uint64_t)v13, isUniquelyReferenced_nonNull_native, &qword_255249F90);
    *(_QWORD *)(v2 + 8) = v36;
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(_BYTE *, uint64_t))(v8 + 8))(v13, v7);
  }
}

uint64_t sub_21C1F595C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  char v17;
  NSObject *v18;
  os_log_type_t v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char isUniquelyReferenced_nonNull_native;
  _BYTE v30[4];
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v2 = v1;
  v34 = sub_21C247CC4();
  v4 = *(_QWORD *)(v34 - 8);
  MEMORY[0x24BDAC7A8](v34);
  v6 = &v30[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = sub_21C2476E8();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v11 = &v30[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v9);
  v13 = &v30[-v12];
  v14 = type metadata accessor for RunningAppEntryPoint();
  v15 = *(_QWORD *)(v1 + 8);
  if (*(_QWORD *)(v15 + 16)
    && (v16 = sub_21C1F6448(a1), (v17 & 1) != 0)
    && *(_QWORD *)(*(_QWORD *)(v15 + 56) + 16 * v16) != v14)
  {
    v33 = *(_QWORD *)(*(_QWORD *)(v15 + 56) + 16 * v16);
    sub_21C247C94();
    (*(void (**)(_BYTE *, uint64_t, uint64_t))(v8 + 16))(v11, a1, v7);
    v18 = sub_21C247CB8();
    v19 = sub_21C24872C();
    v20 = v19;
    if (os_log_type_enabled(v18, v19))
    {
      v21 = swift_slowAlloc();
      v32 = swift_slowAlloc();
      v36 = v32;
      *(_DWORD *)v21 = 136315650;
      v31 = v20;
      v35 = sub_21C203A90(0xD000000000000014, 0x800000021C24D490, &v36);
      sub_21C2487A4();
      *(_WORD *)(v21 + 12) = 2080;
      sub_21C1FBD14(&qword_25524A270, (uint64_t (*)(uint64_t))MEMORY[0x24BE783F0], MEMORY[0x24BE78410]);
      v22 = sub_21C2488F4();
      v35 = sub_21C203A90(v22, v23, &v36);
      sub_21C2487A4();
      swift_bridgeObjectRelease();
      (*(void (**)(_BYTE *, uint64_t))(v8 + 8))(v11, v7);
      *(_WORD *)(v21 + 22) = 2080;
      v24 = sub_21C2489E4();
      v35 = sub_21C203A90(v24, v25, &v36);
      sub_21C2487A4();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_21C1E3000, v18, (os_log_type_t)v31, "Can't register %s for %s -- already registered: %s", (uint8_t *)v21, 0x20u);
      v26 = v32;
      swift_arrayDestroy();
      MEMORY[0x2207770EC](v26, -1, -1);
      MEMORY[0x2207770EC](v21, -1, -1);
    }
    else
    {
      (*(void (**)(_BYTE *, uint64_t))(v8 + 8))(v11, v7);
    }

    return (*(uint64_t (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v34);
  }
  else
  {
    (*(void (**)(_BYTE *, uint64_t, uint64_t))(v8 + 16))(v13, a1, v7);
    v27 = sub_21C1FBD14(&qword_25524A2E0, (uint64_t (*)(uint64_t))type metadata accessor for RunningAppEntryPoint, (uint64_t)&unk_21C24B41C);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v36 = *(_QWORD *)(v2 + 8);
    *(_QWORD *)(v2 + 8) = 0x8000000000000000;
    sub_21C1F9910(v14, v27, (uint64_t)v13, isUniquelyReferenced_nonNull_native, &qword_255249F90);
    *(_QWORD *)(v2 + 8) = v36;
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(_BYTE *, uint64_t))(v8 + 8))(v13, v7);
  }
}

uint64_t sub_21C1F605C@<X0>(unint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  void (*v9)(char *, uint64_t);
  uint64_t v11;

  v2 = sub_21C2476E8();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = MEMORY[0x24BEE4AF8];
  v7 = sub_21C1EBEE0(MEMORY[0x24BEE4AF8]);
  v8 = sub_21C1EBF04(v6);
  *a1 = v7;
  a1[1] = v8;
  sub_21C2476A0();
  sub_21C1F3998((uint64_t)v5);
  v9 = *(void (**)(char *, uint64_t))(v3 + 8);
  v9(v5, v2);
  sub_21C2476AC();
  sub_21C1F3D1C((uint64_t)v5);
  v9(v5, v2);
  sub_21C2476C4();
  sub_21C1F40A0((uint64_t)v5);
  v9(v5, v2);
  sub_21C2476B8();
  sub_21C1F4424((uint64_t)v5);
  v9(v5, v2);
  sub_21C2476DC();
  sub_21C1F47B8((uint64_t)v5);
  v9(v5, v2);
  sub_21C2476D0();
  sub_21C1F4B3C((uint64_t)v5);
  v9(v5, v2);
  sub_21C247694();
  sub_21C1F5234((uint64_t)v5);
  v9(v5, v2);
  sub_21C247688();
  sub_21C1F55C8((uint64_t)v5);
  v9(v5, v2);
  sub_21C24767C();
  sub_21C1F595C((uint64_t)v5);
  return ((uint64_t (*)(char *, uint64_t))v9)(v5, v2);
}

unint64_t sub_21C1F61E4(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_21C24899C();
  return sub_21C1F66A8(a1, v2);
}

unint64_t sub_21C1F621C(uint64_t a1)
{
  uint64_t (*v2)(uint64_t);
  uint64_t v3;

  sub_21C24758C();
  v2 = (uint64_t (*)(uint64_t))MEMORY[0x24BE77EF8];
  sub_21C1FBD14(&qword_25524A278, (uint64_t (*)(uint64_t))MEMORY[0x24BE77EF8], MEMORY[0x24BE77F08]);
  v3 = sub_21C248474();
  return sub_21C1F6744(a1, v3, v2, &qword_25524A280, MEMORY[0x24BE77F10]);
}

unint64_t sub_21C1F62B4(uint64_t a1)
{
  uint64_t (*v2)(uint64_t);
  uint64_t v3;

  sub_21C247094();
  v2 = (uint64_t (*)(uint64_t))MEMORY[0x24BE77150];
  sub_21C1FBD14(&qword_25524A2B8, (uint64_t (*)(uint64_t))MEMORY[0x24BE77150], MEMORY[0x24BE77160]);
  v3 = sub_21C248474();
  return sub_21C1F6744(a1, v3, v2, &qword_25524A2C0, MEMORY[0x24BE77168]);
}

unint64_t sub_21C1F634C(uint64_t a1)
{
  uint64_t (*v2)(uint64_t);
  uint64_t v3;

  sub_21C246FB0();
  v2 = (uint64_t (*)(uint64_t))MEMORY[0x24BE77078];
  sub_21C1FBD14(&qword_25524A288, (uint64_t (*)(uint64_t))MEMORY[0x24BE77078], MEMORY[0x24BE77088]);
  v3 = sub_21C248474();
  return sub_21C1F6744(a1, v3, v2, &qword_25524A290, MEMORY[0x24BE77090]);
}

unint64_t sub_21C1F63E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_21C2489A8();
  sub_21C2484F8();
  v4 = sub_21C2489C0();
  return sub_21C1F6874(a1, a2, v4);
}

unint64_t sub_21C1F6448(uint64_t a1)
{
  uint64_t (*v2)(uint64_t);
  uint64_t v3;

  sub_21C2476E8();
  v2 = (uint64_t (*)(uint64_t))MEMORY[0x24BE783F0];
  sub_21C1FBD14(&qword_25524A328, (uint64_t (*)(uint64_t))MEMORY[0x24BE783F0], MEMORY[0x24BE78400]);
  v3 = sub_21C248474();
  return sub_21C1F6744(a1, v3, v2, &qword_25524A330, MEMORY[0x24BE78408]);
}

unint64_t sub_21C1F64E0(uint64_t a1)
{
  uint64_t (*v2)(uint64_t);
  uint64_t v3;

  sub_21C2472E0();
  v2 = (uint64_t (*)(uint64_t))MEMORY[0x24BE777F0];
  sub_21C1FBD14(&qword_25524A298, (uint64_t (*)(uint64_t))MEMORY[0x24BE777F0], MEMORY[0x24BE77800]);
  v3 = sub_21C248474();
  return sub_21C1F6744(a1, v3, v2, &qword_25524A2A0, MEMORY[0x24BE77808]);
}

unint64_t sub_21C1F6578(uint64_t a1)
{
  uint64_t (*v2)(uint64_t);
  uint64_t v3;

  sub_21C247574();
  v2 = (uint64_t (*)(uint64_t))MEMORY[0x24BE77EC0];
  sub_21C1FBD14(&qword_25524A2A8, (uint64_t (*)(uint64_t))MEMORY[0x24BE77EC0], MEMORY[0x24BE77ED0]);
  v3 = sub_21C248474();
  return sub_21C1F6744(a1, v3, v2, &qword_25524A2B0, MEMORY[0x24BE77ED8]);
}

unint64_t sub_21C1F6610(uint64_t a1)
{
  uint64_t (*v2)(uint64_t);
  uint64_t v3;

  sub_21C24752C();
  v2 = (uint64_t (*)(uint64_t))MEMORY[0x24BE77E60];
  sub_21C1FBD14(&qword_25524A2D0, (uint64_t (*)(uint64_t))MEMORY[0x24BE77E60], MEMORY[0x24BE77E70]);
  v3 = sub_21C248474();
  return sub_21C1F6744(a1, v3, v2, &qword_25524A2D8, MEMORY[0x24BE77E78]);
}

unint64_t sub_21C1F66A8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t result;
  uint64_t v7;
  uint64_t v8;

  v4 = v2 + 64;
  v5 = -1 << *(_BYTE *)(v2 + 32);
  result = a2 & ~v5;
  if (((*(_QWORD *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0)
  {
    v7 = *(_QWORD *)(v2 + 48);
    if (*(_QWORD *)(v7 + 8 * result) != a1)
    {
      v8 = ~v5;
      for (result = (result + 1) & v8;
            ((*(_QWORD *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            result = (result + 1) & v8)
      {
        if (*(_QWORD *)(v7 + 8 * result) == a1)
          break;
      }
    }
  }
  return result;
}

unint64_t sub_21C1F6744(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t), unint64_t *a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(char *, unint64_t, uint64_t);
  char v17;
  uint64_t v19;
  uint64_t (*v20)(uint64_t);
  unint64_t *v21;
  uint64_t v22;

  v21 = a4;
  v22 = a5;
  v6 = v5;
  v19 = a1;
  v20 = a3;
  v8 = a3(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v19 - v10;
  v12 = -1 << *(_BYTE *)(v6 + 32);
  v13 = a2 & ~v12;
  if (((*(_QWORD *)(v6 + 64 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) != 0)
  {
    v14 = ~v12;
    v15 = *(_QWORD *)(v9 + 72);
    v16 = *(void (**)(char *, unint64_t, uint64_t))(v9 + 16);
    do
    {
      v16(v11, *(_QWORD *)(v6 + 48) + v15 * v13, v8);
      sub_21C1FBD14(v21, v20, v22);
      v17 = sub_21C248480();
      (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
      if ((v17 & 1) != 0)
        break;
      v13 = (v13 + 1) & v14;
    }
    while (((*(_QWORD *)(v6 + 64 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) != 0);
  }
  return v13;
}

unint64_t sub_21C1F6874(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v9;
  _QWORD *v10;
  BOOL v11;
  uint64_t v12;
  _QWORD *v13;
  BOOL v14;

  v4 = v3 + 64;
  v5 = -1 << *(_BYTE *)(v3 + 32);
  v6 = a3 & ~v5;
  if (((*(_QWORD *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0)
  {
    v9 = *(_QWORD *)(v3 + 48);
    v10 = (_QWORD *)(v9 + 16 * v6);
    v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_21C248924() & 1) == 0)
    {
      v12 = ~v5;
      do
      {
        v6 = (v6 + 1) & v12;
        if (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
          break;
        v13 = (_QWORD *)(v9 + 16 * v6);
        v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_21C248924() & 1) == 0);
    }
  }
  return v6;
}

uint64_t sub_21C1F6954(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  char v30;
  unint64_t v31;
  BOOL v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  int v37;
  int64_t v38;
  _QWORD *v39;
  uint64_t v40;

  v3 = v2;
  v5 = sub_21C247808();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255249F40);
  result = sub_21C2488D0();
  v11 = result;
  if (*(_QWORD *)(v9 + 16))
  {
    v36 = v3;
    v12 = 0;
    v13 = *(_QWORD *)(v9 + 64);
    v39 = (_QWORD *)(v9 + 64);
    v14 = 1 << *(_BYTE *)(v9 + 32);
    if (v14 < 64)
      v15 = ~(-1 << v14);
    else
      v15 = -1;
    v16 = v15 & v13;
    v38 = (unint64_t)(v14 + 63) >> 6;
    v17 = result + 64;
    v37 = a2;
    v18 = 16;
    if ((a2 & 1) != 0)
      v18 = 32;
    v40 = v18;
    while (1)
    {
      if (v16)
      {
        v20 = __clz(__rbit64(v16));
        v16 &= v16 - 1;
        v21 = v20 | (v12 << 6);
      }
      else
      {
        v22 = v12 + 1;
        if (__OFADD__(v12, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        result = (uint64_t)v39;
        if (v22 >= v38)
          goto LABEL_33;
        v23 = v39[v22];
        ++v12;
        if (!v23)
        {
          v12 = v22 + 1;
          if (v22 + 1 >= v38)
            goto LABEL_33;
          v23 = v39[v12];
          if (!v23)
          {
            v24 = v22 + 2;
            if (v24 >= v38)
            {
LABEL_33:
              if ((v37 & 1) == 0)
              {
                result = swift_release();
                v3 = v36;
                goto LABEL_40;
              }
              v34 = 1 << *(_BYTE *)(v9 + 32);
              if (v34 >= 64)
                bzero(v39, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              else
                *v39 = -1 << v34;
              v3 = v36;
              *(_QWORD *)(v9 + 16) = 0;
              break;
            }
            v23 = v39[v24];
            if (!v23)
            {
              while (1)
              {
                v12 = v24 + 1;
                if (__OFADD__(v24, 1))
                  goto LABEL_42;
                if (v12 >= v38)
                  goto LABEL_33;
                v23 = v39[v12];
                ++v24;
                if (v23)
                  goto LABEL_23;
              }
            }
            v12 = v24;
          }
        }
LABEL_23:
        v16 = (v23 - 1) & v23;
        v21 = __clz(__rbit64(v23)) + (v12 << 6);
      }
      v25 = *(_QWORD *)(*(_QWORD *)(v9 + 48) + 8 * v21);
      v26 = *(_QWORD *)(v6 + 72);
      (*(void (**)(char *, unint64_t, uint64_t))(v6 + v40))(v8, *(_QWORD *)(v9 + 56) + v26 * v21, v5);
      result = sub_21C24899C();
      v27 = -1 << *(_BYTE *)(v11 + 32);
      v28 = result & ~v27;
      v29 = v28 >> 6;
      if (((-1 << v28) & ~*(_QWORD *)(v17 + 8 * (v28 >> 6))) != 0)
      {
        v19 = __clz(__rbit64((-1 << v28) & ~*(_QWORD *)(v17 + 8 * (v28 >> 6)))) | v28 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v30 = 0;
        v31 = (unint64_t)(63 - v27) >> 6;
        do
        {
          if (++v29 == v31 && (v30 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          v32 = v29 == v31;
          if (v29 == v31)
            v29 = 0;
          v30 |= v32;
          v33 = *(_QWORD *)(v17 + 8 * v29);
        }
        while (v33 == -1);
        v19 = __clz(__rbit64(~v33)) + (v29 << 6);
      }
      *(_QWORD *)(v17 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
      *(_QWORD *)(*(_QWORD *)(v11 + 48) + 8 * v19) = v25;
      result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v6 + 32))(*(_QWORD *)(v11 + 56) + v26 * v19, v8, v5);
      ++*(_QWORD *)(v11 + 16);
    }
  }
  result = swift_release();
LABEL_40:
  *v3 = v11;
  return result;
}

uint64_t sub_21C1F6C84(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  int64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  char v32;
  __int128 v33;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255249EF0);
  result = sub_21C2488D0();
  v7 = result;
  if (*(_QWORD *)(v5 + 16))
  {
    v32 = a2;
    v31 = v3;
    v8 = 0;
    v9 = (uint64_t *)(v5 + 64);
    v10 = 1 << *(_BYTE *)(v5 + 32);
    v29 = -1 << v10;
    v30 = v10;
    if (v10 < 64)
      v11 = ~(-1 << v10);
    else
      v11 = -1;
    v12 = v11 & *(_QWORD *)(v5 + 64);
    v13 = (unint64_t)(v10 + 63) >> 6;
    v14 = result + 64;
    while (1)
    {
      if (v12)
      {
        v16 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        v17 = v16 | (v8 << 6);
      }
      else
      {
        v18 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v18 >= v13)
          goto LABEL_31;
        v19 = v9[v18];
        ++v8;
        if (!v19)
        {
          v8 = v18 + 1;
          if (v18 + 1 >= v13)
            goto LABEL_31;
          v19 = v9[v8];
          if (!v19)
          {
            v20 = v18 + 2;
            if (v20 >= v13)
            {
LABEL_31:
              if ((v32 & 1) == 0)
              {
                result = swift_release();
                v3 = v31;
                goto LABEL_38;
              }
              if (v30 >= 64)
                bzero((void *)(v5 + 64), 8 * v13);
              else
                *v9 = v29;
              v3 = v31;
              *(_QWORD *)(v5 + 16) = 0;
              break;
            }
            v19 = v9[v20];
            if (!v19)
            {
              while (1)
              {
                v8 = v20 + 1;
                if (__OFADD__(v20, 1))
                  goto LABEL_40;
                if (v8 >= v13)
                  goto LABEL_31;
                v19 = v9[v8];
                ++v20;
                if (v19)
                  goto LABEL_21;
              }
            }
            v8 = v20;
          }
        }
LABEL_21:
        v12 = (v19 - 1) & v19;
        v17 = __clz(__rbit64(v19)) + (v8 << 6);
      }
      v21 = *(_QWORD *)(*(_QWORD *)(v5 + 48) + 8 * v17);
      v33 = *(_OWORD *)(*(_QWORD *)(v5 + 56) + 16 * v17);
      result = sub_21C24899C();
      v22 = -1 << *(_BYTE *)(v7 + 32);
      v23 = result & ~v22;
      v24 = v23 >> 6;
      if (((-1 << v23) & ~*(_QWORD *)(v14 + 8 * (v23 >> 6))) != 0)
      {
        v15 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v14 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v25 = 0;
        v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          v27 = v24 == v26;
          if (v24 == v26)
            v24 = 0;
          v25 |= v27;
          v28 = *(_QWORD *)(v14 + 8 * v24);
        }
        while (v28 == -1);
        v15 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(_QWORD *)(v14 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
      *(_QWORD *)(*(_QWORD *)(v7 + 48) + 8 * v15) = v21;
      *(_OWORD *)(*(_QWORD *)(v7 + 56) + 16 * v15) = v33;
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
LABEL_38:
  *v3 = v7;
  return result;
}

uint64_t sub_21C1F6F24(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t result;
  int64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  char v31;
  unint64_t v32;
  BOOL v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  int64_t v38;
  _QWORD *v39;
  int v40;
  __int128 v41[2];

  v3 = v2;
  v5 = sub_21C247094();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255249FE8);
  v40 = a2;
  v10 = sub_21C2488D0();
  v11 = v10;
  if (!*(_QWORD *)(v9 + 16))
    goto LABEL_41;
  v12 = 1 << *(_BYTE *)(v9 + 32);
  v13 = *(_QWORD *)(v9 + 64);
  v39 = (_QWORD *)(v9 + 64);
  if (v12 < 64)
    v14 = ~(-1 << v12);
  else
    v14 = -1;
  v15 = v14 & v13;
  v37 = v2;
  v38 = (unint64_t)(v12 + 63) >> 6;
  v16 = v10 + 64;
  result = swift_retain();
  v18 = 0;
  while (1)
  {
    if (v15)
    {
      v20 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      v21 = v20 | (v18 << 6);
      goto LABEL_22;
    }
    v22 = v18 + 1;
    if (__OFADD__(v18, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v22 >= v38)
      break;
    v23 = v39;
    v24 = v39[v22];
    ++v18;
    if (!v24)
    {
      v18 = v22 + 1;
      if (v22 + 1 >= v38)
        goto LABEL_34;
      v24 = v39[v18];
      if (!v24)
      {
        v25 = v22 + 2;
        if (v25 >= v38)
        {
LABEL_34:
          swift_release();
          v3 = v37;
          if ((v40 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v24 = v39[v25];
        if (!v24)
        {
          while (1)
          {
            v18 = v25 + 1;
            if (__OFADD__(v25, 1))
              goto LABEL_43;
            if (v18 >= v38)
              goto LABEL_34;
            v24 = v39[v18];
            ++v25;
            if (v24)
              goto LABEL_21;
          }
        }
        v18 = v25;
      }
    }
LABEL_21:
    v15 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v18 << 6);
LABEL_22:
    v26 = *(_QWORD *)(v6 + 72);
    v27 = *(_QWORD *)(v9 + 48) + v26 * v21;
    if ((v40 & 1) != 0)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v6 + 32))(v8, v27, v5);
      sub_21C1EB66C((__int128 *)(*(_QWORD *)(v9 + 56) + 40 * v21), (uint64_t)v41);
    }
    else
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v6 + 16))(v8, v27, v5);
      sub_21C1E712C(*(_QWORD *)(v9 + 56) + 40 * v21, (uint64_t)v41);
    }
    sub_21C1FBD14(&qword_25524A2B8, (uint64_t (*)(uint64_t))MEMORY[0x24BE77150], MEMORY[0x24BE77160]);
    result = sub_21C248474();
    v28 = -1 << *(_BYTE *)(v11 + 32);
    v29 = result & ~v28;
    v30 = v29 >> 6;
    if (((-1 << v29) & ~*(_QWORD *)(v16 + 8 * (v29 >> 6))) != 0)
    {
      v19 = __clz(__rbit64((-1 << v29) & ~*(_QWORD *)(v16 + 8 * (v29 >> 6)))) | v29 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v31 = 0;
      v32 = (unint64_t)(63 - v28) >> 6;
      do
      {
        if (++v30 == v32 && (v31 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v33 = v30 == v32;
        if (v30 == v32)
          v30 = 0;
        v31 |= v33;
        v34 = *(_QWORD *)(v16 + 8 * v30);
      }
      while (v34 == -1);
      v19 = __clz(__rbit64(~v34)) + (v30 << 6);
    }
    *(_QWORD *)(v16 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
    (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(*(_QWORD *)(v11 + 48) + v26 * v19, v8, v5);
    result = sub_21C1EB66C(v41, *(_QWORD *)(v11 + 56) + 40 * v19);
    ++*(_QWORD *)(v11 + 16);
  }
  swift_release();
  v3 = v37;
  v23 = v39;
  if ((v40 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v35 = 1 << *(_BYTE *)(v9 + 32);
  if (v35 >= 64)
    bzero(v23, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v35;
  *(_QWORD *)(v9 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v3 = v11;
  return result;
}

uint64_t sub_21C1F72CC(uint64_t a1, int a2, uint64_t (*a3)(uint64_t), uint64_t *a4, unint64_t *a5, uint64_t a6)
{
  uint64_t *v6;
  uint64_t *v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int v21;
  uint64_t v22;
  uint64_t result;
  int64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  int64_t v29;
  _QWORD *v30;
  unint64_t v31;
  int64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  char v37;
  unint64_t v38;
  BOOL v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t *v43;
  int64_t v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t (*v47)(uint64_t);
  unint64_t *v48;
  uint64_t v49;
  __int128 v50;

  v48 = a5;
  v49 = a6;
  v8 = v6;
  v47 = a3;
  v10 = a3(0);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v42 - v12;
  v14 = *v6;
  __swift_instantiateConcreteTypeFromMangledName(a4);
  v15 = sub_21C2488D0();
  v16 = v15;
  if (!*(_QWORD *)(v14 + 16))
    goto LABEL_40;
  v17 = 1 << *(_BYTE *)(v14 + 32);
  v18 = *(_QWORD *)(v14 + 64);
  v45 = (_QWORD *)(v14 + 64);
  if (v17 < 64)
    v19 = ~(-1 << v17);
  else
    v19 = -1;
  v20 = v19 & v18;
  v43 = v6;
  v44 = (unint64_t)(v17 + 63) >> 6;
  v21 = a2;
  v22 = v15 + 64;
  result = swift_retain();
  v24 = 0;
  HIDWORD(v42) = v21;
  v25 = 16;
  if ((v21 & 1) != 0)
    v25 = 32;
  v46 = v25;
  while (1)
  {
    if (v20)
    {
      v27 = __clz(__rbit64(v20));
      v20 &= v20 - 1;
      v28 = v27 | (v24 << 6);
      goto LABEL_24;
    }
    v29 = v24 + 1;
    if (__OFADD__(v24, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v29 >= v44)
      break;
    v30 = v45;
    v31 = v45[v29];
    ++v24;
    if (!v31)
    {
      v24 = v29 + 1;
      if (v29 + 1 >= v44)
        goto LABEL_33;
      v31 = v45[v24];
      if (!v31)
      {
        v32 = v29 + 2;
        if (v32 >= v44)
        {
LABEL_33:
          swift_release();
          v8 = v43;
          if ((v42 & 0x100000000) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v31 = v45[v32];
        if (!v31)
        {
          while (1)
          {
            v24 = v32 + 1;
            if (__OFADD__(v32, 1))
              goto LABEL_42;
            if (v24 >= v44)
              goto LABEL_33;
            v31 = v45[v24];
            ++v32;
            if (v31)
              goto LABEL_23;
          }
        }
        v24 = v32;
      }
    }
LABEL_23:
    v20 = (v31 - 1) & v31;
    v28 = __clz(__rbit64(v31)) + (v24 << 6);
LABEL_24:
    v33 = *(_QWORD *)(v11 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v11 + v46))(v13, *(_QWORD *)(v14 + 48) + v33 * v28, v10);
    v50 = *(_OWORD *)(*(_QWORD *)(v14 + 56) + 16 * v28);
    sub_21C1FBD14(v48, v47, v49);
    result = sub_21C248474();
    v34 = -1 << *(_BYTE *)(v16 + 32);
    v35 = result & ~v34;
    v36 = v35 >> 6;
    if (((-1 << v35) & ~*(_QWORD *)(v22 + 8 * (v35 >> 6))) != 0)
    {
      v26 = __clz(__rbit64((-1 << v35) & ~*(_QWORD *)(v22 + 8 * (v35 >> 6)))) | v35 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v37 = 0;
      v38 = (unint64_t)(63 - v34) >> 6;
      do
      {
        if (++v36 == v38 && (v37 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v39 = v36 == v38;
        if (v36 == v38)
          v36 = 0;
        v37 |= v39;
        v40 = *(_QWORD *)(v22 + 8 * v36);
      }
      while (v40 == -1);
      v26 = __clz(__rbit64(~v40)) + (v36 << 6);
    }
    *(_QWORD *)(v22 + ((v26 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v26;
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v11 + 32))(*(_QWORD *)(v16 + 48) + v33 * v26, v13, v10);
    *(_OWORD *)(*(_QWORD *)(v16 + 56) + 16 * v26) = v50;
    ++*(_QWORD *)(v16 + 16);
  }
  swift_release();
  v8 = v43;
  v30 = v45;
  if ((v42 & 0x100000000) == 0)
    goto LABEL_40;
LABEL_36:
  v41 = 1 << *(_BYTE *)(v14 + 32);
  if (v41 >= 64)
    bzero(v30, ((unint64_t)(v41 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v30 = -1 << v41;
  *(_QWORD *)(v14 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v8 = v16;
  return result;
}

uint64_t sub_21C1F7648(uint64_t a1, int a2)
{
  return sub_21C1F766C(a1, a2, (uint64_t (*)(uint64_t))MEMORY[0x24BE777F0], &qword_255249F80, &qword_25524A298, MEMORY[0x24BE77800]);
}

uint64_t sub_21C1F766C(uint64_t a1, int a2, uint64_t (*a3)(uint64_t), uint64_t *a4, unint64_t *a5, uint64_t a6)
{
  uint64_t *v6;
  uint64_t *v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t result;
  int64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  int64_t v27;
  _QWORD *v28;
  unint64_t v29;
  int64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  char v37;
  unint64_t v38;
  BOOL v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t *v42;
  int64_t v43;
  _QWORD *v44;
  uint64_t i;
  uint64_t (*v46)(uint64_t);
  unint64_t *v47;
  uint64_t v48;
  int v49;

  v47 = a5;
  v48 = a6;
  v8 = v6;
  v46 = a3;
  v10 = a3(0);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v42 - v12;
  v14 = *v6;
  __swift_instantiateConcreteTypeFromMangledName(a4);
  v49 = a2;
  v15 = sub_21C2488D0();
  v16 = v15;
  if (!*(_QWORD *)(v14 + 16))
    goto LABEL_41;
  v17 = 1 << *(_BYTE *)(v14 + 32);
  v18 = *(_QWORD *)(v14 + 64);
  v44 = (_QWORD *)(v14 + 64);
  if (v17 < 64)
    v19 = ~(-1 << v17);
  else
    v19 = -1;
  v20 = v19 & v18;
  v42 = v6;
  v43 = (unint64_t)(v17 + 63) >> 6;
  v21 = v15 + 64;
  result = swift_retain();
  v23 = 0;
  for (i = v14; ; v14 = i)
  {
    if (v20)
    {
      v25 = __clz(__rbit64(v20));
      v20 &= v20 - 1;
      v26 = v25 | (v23 << 6);
      goto LABEL_22;
    }
    v27 = v23 + 1;
    if (__OFADD__(v23, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v27 >= v43)
      break;
    v28 = v44;
    v29 = v44[v27];
    ++v23;
    if (!v29)
    {
      v23 = v27 + 1;
      if (v27 + 1 >= v43)
        goto LABEL_34;
      v29 = v44[v23];
      if (!v29)
      {
        v30 = v27 + 2;
        if (v30 >= v43)
        {
LABEL_34:
          swift_release();
          v8 = v42;
          if ((v49 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v29 = v44[v30];
        if (!v29)
        {
          while (1)
          {
            v23 = v30 + 1;
            if (__OFADD__(v30, 1))
              goto LABEL_43;
            if (v23 >= v43)
              goto LABEL_34;
            v29 = v44[v23];
            ++v30;
            if (v29)
              goto LABEL_21;
          }
        }
        v23 = v30;
      }
    }
LABEL_21:
    v20 = (v29 - 1) & v29;
    v26 = __clz(__rbit64(v29)) + (v23 << 6);
LABEL_22:
    v31 = *(_QWORD *)(v11 + 72);
    v32 = *(_QWORD *)(v14 + 48) + v31 * v26;
    if ((v49 & 1) != 0)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v11 + 32))(v13, v32, v10);
      v33 = *(_QWORD *)(*(_QWORD *)(v14 + 56) + 8 * v26);
    }
    else
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v11 + 16))(v13, v32, v10);
      v33 = *(_QWORD *)(*(_QWORD *)(v14 + 56) + 8 * v26);
      swift_bridgeObjectRetain();
    }
    sub_21C1FBD14(v47, v46, v48);
    result = sub_21C248474();
    v34 = -1 << *(_BYTE *)(v16 + 32);
    v35 = result & ~v34;
    v36 = v35 >> 6;
    if (((-1 << v35) & ~*(_QWORD *)(v21 + 8 * (v35 >> 6))) != 0)
    {
      v24 = __clz(__rbit64((-1 << v35) & ~*(_QWORD *)(v21 + 8 * (v35 >> 6)))) | v35 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v37 = 0;
      v38 = (unint64_t)(63 - v34) >> 6;
      do
      {
        if (++v36 == v38 && (v37 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v39 = v36 == v38;
        if (v36 == v38)
          v36 = 0;
        v37 |= v39;
        v40 = *(_QWORD *)(v21 + 8 * v36);
      }
      while (v40 == -1);
      v24 = __clz(__rbit64(~v40)) + (v36 << 6);
    }
    *(_QWORD *)(v21 + ((v24 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v24;
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v11 + 32))(*(_QWORD *)(v16 + 48) + v31 * v24, v13, v10);
    *(_QWORD *)(*(_QWORD *)(v16 + 56) + 8 * v24) = v33;
    ++*(_QWORD *)(v16 + 16);
  }
  swift_release();
  v8 = v42;
  v28 = v44;
  if ((v49 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v41 = 1 << *(_BYTE *)(v14 + 32);
  if (v41 >= 64)
    bzero(v28, ((unint64_t)(v41 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v28 = -1 << v41;
  *(_QWORD *)(v14 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v8 = v16;
  return result;
}

uint64_t sub_21C1F79F8(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  unint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  __int128 v17;
  __int128 v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  _QWORD *v22;
  unint64_t v23;
  int64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __int128 v29;
  __int128 v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  char v34;
  unint64_t v35;
  BOOL v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  int64_t v40;
  uint64_t v41;
  char v42;
  __int128 v43;
  __int128 v44;
  uint64_t v45;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255249F28);
  v42 = a2;
  v6 = sub_21C2488D0();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_41;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v41 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v39 = v2;
  v40 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  while (1)
  {
    if (v10)
    {
      v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v20 = v19 | (v13 << 6);
      goto LABEL_22;
    }
    v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v21 >= v40)
      break;
    v22 = (_QWORD *)(v5 + 64);
    v23 = *(_QWORD *)(v41 + 8 * v21);
    ++v13;
    if (!v23)
    {
      v13 = v21 + 1;
      if (v21 + 1 >= v40)
        goto LABEL_34;
      v23 = *(_QWORD *)(v41 + 8 * v13);
      if (!v23)
      {
        v24 = v21 + 2;
        if (v24 >= v40)
        {
LABEL_34:
          swift_release();
          v3 = v39;
          if ((v42 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v23 = *(_QWORD *)(v41 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            v13 = v24 + 1;
            if (__OFADD__(v24, 1))
              goto LABEL_43;
            if (v13 >= v40)
              goto LABEL_34;
            v23 = *(_QWORD *)(v41 + 8 * v13);
            ++v24;
            if (v23)
              goto LABEL_21;
          }
        }
        v13 = v24;
      }
    }
LABEL_21:
    v10 = (v23 - 1) & v23;
    v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_22:
    v25 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v20);
    v27 = *v25;
    v26 = v25[1];
    v28 = *(_QWORD *)(v5 + 56) + 40 * v20;
    if ((v42 & 1) != 0)
    {
      v29 = *(_OWORD *)v28;
      v30 = *(_OWORD *)(v28 + 16);
      v45 = *(_QWORD *)(v28 + 32);
      v43 = v29;
      v44 = v30;
    }
    else
    {
      sub_21C1FBB84(v28, (uint64_t)&v43);
      swift_bridgeObjectRetain();
    }
    sub_21C2489A8();
    sub_21C2484F8();
    result = sub_21C2489C0();
    v31 = -1 << *(_BYTE *)(v7 + 32);
    v32 = result & ~v31;
    v33 = v32 >> 6;
    if (((-1 << v32) & ~*(_QWORD *)(v11 + 8 * (v32 >> 6))) != 0)
    {
      v14 = __clz(__rbit64((-1 << v32) & ~*(_QWORD *)(v11 + 8 * (v32 >> 6)))) | v32 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v34 = 0;
      v35 = (unint64_t)(63 - v31) >> 6;
      do
      {
        if (++v33 == v35 && (v34 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v36 = v33 == v35;
        if (v33 == v35)
          v33 = 0;
        v34 |= v36;
        v37 = *(_QWORD *)(v11 + 8 * v33);
      }
      while (v37 == -1);
      v14 = __clz(__rbit64(~v37)) + (v33 << 6);
    }
    *(_QWORD *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    v15 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v14);
    *v15 = v27;
    v15[1] = v26;
    v16 = *(_QWORD *)(v7 + 56) + 40 * v14;
    v17 = v43;
    v18 = v44;
    *(_QWORD *)(v16 + 32) = v45;
    *(_OWORD *)v16 = v17;
    *(_OWORD *)(v16 + 16) = v18;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v3 = v39;
  v22 = (_QWORD *)(v5 + 64);
  if ((v42 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v38 = 1 << *(_BYTE *)(v5 + 32);
  if (v38 >= 64)
    bzero(v22, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v22 = -1 << v38;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_21C1F7D2C(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t updated;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t result;
  int64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  int64_t v25;
  _QWORD *v26;
  unint64_t v27;
  int64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  char v37;
  unint64_t v38;
  BOOL v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t *v43;
  int64_t v44;
  _QWORD *v45;
  uint64_t i;
  uint64_t v47;
  int v48;
  uint64_t v49;

  v3 = v2;
  updated = type metadata accessor for EntryPointIndex.UpdateState(0);
  v47 = *(_QWORD *)(updated - 8);
  MEMORY[0x24BDAC7A8](updated);
  v49 = (uint64_t)&v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_21C2472E0();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v42 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255249F70);
  v48 = a2;
  v12 = v11;
  v13 = sub_21C2488D0();
  v14 = v13;
  if (!*(_QWORD *)(v12 + 16))
    goto LABEL_41;
  v15 = 1 << *(_BYTE *)(v12 + 32);
  v16 = *(_QWORD *)(v12 + 64);
  v45 = (_QWORD *)(v12 + 64);
  if (v15 < 64)
    v17 = ~(-1 << v15);
  else
    v17 = -1;
  v18 = v17 & v16;
  v43 = v2;
  v44 = (unint64_t)(v15 + 63) >> 6;
  v19 = v13 + 64;
  result = swift_retain();
  v21 = 0;
  for (i = v12; ; v12 = i)
  {
    if (v18)
    {
      v23 = __clz(__rbit64(v18));
      v18 &= v18 - 1;
      v24 = v23 | (v21 << 6);
      goto LABEL_22;
    }
    v25 = v21 + 1;
    if (__OFADD__(v21, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v25 >= v44)
      break;
    v26 = v45;
    v27 = v45[v25];
    ++v21;
    if (!v27)
    {
      v21 = v25 + 1;
      if (v25 + 1 >= v44)
        goto LABEL_34;
      v27 = v45[v21];
      if (!v27)
      {
        v28 = v25 + 2;
        if (v28 >= v44)
        {
LABEL_34:
          swift_release();
          v3 = v43;
          if ((v48 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v27 = v45[v28];
        if (!v27)
        {
          while (1)
          {
            v21 = v28 + 1;
            if (__OFADD__(v28, 1))
              goto LABEL_43;
            if (v21 >= v44)
              goto LABEL_34;
            v27 = v45[v21];
            ++v28;
            if (v27)
              goto LABEL_21;
          }
        }
        v21 = v28;
      }
    }
LABEL_21:
    v18 = (v27 - 1) & v27;
    v24 = __clz(__rbit64(v27)) + (v21 << 6);
LABEL_22:
    v29 = *(_QWORD *)(v8 + 72);
    v30 = *(_QWORD *)(v12 + 48) + v29 * v24;
    if ((v48 & 1) != 0)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v8 + 32))(v10, v30, v7);
      v31 = *(_QWORD *)(v12 + 56);
      v32 = *(_QWORD *)(v47 + 72);
      sub_21C1FBAFC(v31 + v32 * v24, v49);
    }
    else
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v8 + 16))(v10, v30, v7);
      v33 = *(_QWORD *)(v12 + 56);
      v32 = *(_QWORD *)(v47 + 72);
      sub_21C1FBAB8(v33 + v32 * v24, v49);
    }
    sub_21C1FBD14(&qword_25524A298, (uint64_t (*)(uint64_t))MEMORY[0x24BE777F0], MEMORY[0x24BE77800]);
    result = sub_21C248474();
    v34 = -1 << *(_BYTE *)(v14 + 32);
    v35 = result & ~v34;
    v36 = v35 >> 6;
    if (((-1 << v35) & ~*(_QWORD *)(v19 + 8 * (v35 >> 6))) != 0)
    {
      v22 = __clz(__rbit64((-1 << v35) & ~*(_QWORD *)(v19 + 8 * (v35 >> 6)))) | v35 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v37 = 0;
      v38 = (unint64_t)(63 - v34) >> 6;
      do
      {
        if (++v36 == v38 && (v37 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v39 = v36 == v38;
        if (v36 == v38)
          v36 = 0;
        v37 |= v39;
        v40 = *(_QWORD *)(v19 + 8 * v36);
      }
      while (v40 == -1);
      v22 = __clz(__rbit64(~v40)) + (v36 << 6);
    }
    *(_QWORD *)(v19 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
    (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(*(_QWORD *)(v14 + 48) + v29 * v22, v10, v7);
    result = sub_21C1FBAFC(v49, *(_QWORD *)(v14 + 56) + v32 * v22);
    ++*(_QWORD *)(v14 + 16);
  }
  swift_release();
  v3 = v43;
  v26 = v45;
  if ((v48 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v41 = 1 << *(_BYTE *)(v12 + 32);
  if (v41 >= 64)
    bzero(v26, ((unint64_t)(v41 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v26 = -1 << v41;
  *(_QWORD *)(v12 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v3 = v14;
  return result;
}

uint64_t sub_21C1F8120(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t result;
  int64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  char v31;
  unint64_t v32;
  BOOL v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  int64_t v38;
  _QWORD *v39;
  int v40;
  __int128 v41[2];

  v3 = v2;
  v5 = sub_21C2472E0();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255249F50);
  v40 = a2;
  v10 = sub_21C2488D0();
  v11 = v10;
  if (!*(_QWORD *)(v9 + 16))
    goto LABEL_41;
  v12 = 1 << *(_BYTE *)(v9 + 32);
  v13 = *(_QWORD *)(v9 + 64);
  v39 = (_QWORD *)(v9 + 64);
  if (v12 < 64)
    v14 = ~(-1 << v12);
  else
    v14 = -1;
  v15 = v14 & v13;
  v37 = v2;
  v38 = (unint64_t)(v12 + 63) >> 6;
  v16 = v10 + 64;
  result = swift_retain();
  v18 = 0;
  while (1)
  {
    if (v15)
    {
      v20 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      v21 = v20 | (v18 << 6);
      goto LABEL_22;
    }
    v22 = v18 + 1;
    if (__OFADD__(v18, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v22 >= v38)
      break;
    v23 = v39;
    v24 = v39[v22];
    ++v18;
    if (!v24)
    {
      v18 = v22 + 1;
      if (v22 + 1 >= v38)
        goto LABEL_34;
      v24 = v39[v18];
      if (!v24)
      {
        v25 = v22 + 2;
        if (v25 >= v38)
        {
LABEL_34:
          swift_release();
          v3 = v37;
          if ((v40 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v24 = v39[v25];
        if (!v24)
        {
          while (1)
          {
            v18 = v25 + 1;
            if (__OFADD__(v25, 1))
              goto LABEL_43;
            if (v18 >= v38)
              goto LABEL_34;
            v24 = v39[v18];
            ++v25;
            if (v24)
              goto LABEL_21;
          }
        }
        v18 = v25;
      }
    }
LABEL_21:
    v15 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v18 << 6);
LABEL_22:
    v26 = *(_QWORD *)(v6 + 72);
    v27 = *(_QWORD *)(v9 + 48) + v26 * v21;
    if ((v40 & 1) != 0)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v6 + 32))(v8, v27, v5);
      sub_21C1EB66C((__int128 *)(*(_QWORD *)(v9 + 56) + 40 * v21), (uint64_t)v41);
    }
    else
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v6 + 16))(v8, v27, v5);
      sub_21C1E712C(*(_QWORD *)(v9 + 56) + 40 * v21, (uint64_t)v41);
    }
    sub_21C1FBD14(&qword_25524A298, (uint64_t (*)(uint64_t))MEMORY[0x24BE777F0], MEMORY[0x24BE77800]);
    result = sub_21C248474();
    v28 = -1 << *(_BYTE *)(v11 + 32);
    v29 = result & ~v28;
    v30 = v29 >> 6;
    if (((-1 << v29) & ~*(_QWORD *)(v16 + 8 * (v29 >> 6))) != 0)
    {
      v19 = __clz(__rbit64((-1 << v29) & ~*(_QWORD *)(v16 + 8 * (v29 >> 6)))) | v29 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v31 = 0;
      v32 = (unint64_t)(63 - v28) >> 6;
      do
      {
        if (++v30 == v32 && (v31 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v33 = v30 == v32;
        if (v30 == v32)
          v30 = 0;
        v31 |= v33;
        v34 = *(_QWORD *)(v16 + 8 * v30);
      }
      while (v34 == -1);
      v19 = __clz(__rbit64(~v34)) + (v30 << 6);
    }
    *(_QWORD *)(v16 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
    (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(*(_QWORD *)(v11 + 48) + v26 * v19, v8, v5);
    result = sub_21C1EB66C(v41, *(_QWORD *)(v11 + 56) + 40 * v19);
    ++*(_QWORD *)(v11 + 16);
  }
  swift_release();
  v3 = v37;
  v23 = v39;
  if ((v40 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v35 = 1 << *(_BYTE *)(v9 + 32);
  if (v35 >= 64)
    bzero(v23, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v35;
  *(_QWORD *)(v9 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v3 = v11;
  return result;
}

uint64_t sub_21C1F84C8(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t result;
  int64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  char v31;
  unint64_t v32;
  BOOL v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  int64_t v37;
  _QWORD *v38;
  int v39;
  __int128 v40;

  v3 = v2;
  v5 = sub_21C24752C();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25524A2C8);
  v39 = a2;
  v10 = sub_21C2488D0();
  v11 = v10;
  if (!*(_QWORD *)(v9 + 16))
    goto LABEL_41;
  v12 = 1 << *(_BYTE *)(v9 + 32);
  v13 = *(_QWORD *)(v9 + 64);
  v38 = (_QWORD *)(v9 + 64);
  if (v12 < 64)
    v14 = ~(-1 << v12);
  else
    v14 = -1;
  v15 = v14 & v13;
  v36 = v2;
  v37 = (unint64_t)(v12 + 63) >> 6;
  v16 = v10 + 64;
  result = swift_retain();
  v18 = 0;
  while (1)
  {
    if (v15)
    {
      v20 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      v21 = v20 | (v18 << 6);
      goto LABEL_22;
    }
    v22 = v18 + 1;
    if (__OFADD__(v18, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v22 >= v37)
      break;
    v23 = v38;
    v24 = v38[v22];
    ++v18;
    if (!v24)
    {
      v18 = v22 + 1;
      if (v22 + 1 >= v37)
        goto LABEL_34;
      v24 = v38[v18];
      if (!v24)
      {
        v25 = v22 + 2;
        if (v25 >= v37)
        {
LABEL_34:
          swift_release();
          v3 = v36;
          if ((v39 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v24 = v38[v25];
        if (!v24)
        {
          while (1)
          {
            v18 = v25 + 1;
            if (__OFADD__(v25, 1))
              goto LABEL_43;
            if (v18 >= v37)
              goto LABEL_34;
            v24 = v38[v18];
            ++v25;
            if (v24)
              goto LABEL_21;
          }
        }
        v18 = v25;
      }
    }
LABEL_21:
    v15 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v18 << 6);
LABEL_22:
    v26 = *(_QWORD *)(v6 + 72);
    v27 = *(_QWORD *)(v9 + 48) + v26 * v21;
    if ((v39 & 1) != 0)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v6 + 32))(v8, v27, v5);
      v40 = *(_OWORD *)(*(_QWORD *)(v9 + 56) + 16 * v21);
    }
    else
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v6 + 16))(v8, v27, v5);
      v40 = *(_OWORD *)(*(_QWORD *)(v9 + 56) + 16 * v21);
      swift_unknownObjectRetain();
    }
    sub_21C1FBD14(&qword_25524A2D0, (uint64_t (*)(uint64_t))MEMORY[0x24BE77E60], MEMORY[0x24BE77E70]);
    result = sub_21C248474();
    v28 = -1 << *(_BYTE *)(v11 + 32);
    v29 = result & ~v28;
    v30 = v29 >> 6;
    if (((-1 << v29) & ~*(_QWORD *)(v16 + 8 * (v29 >> 6))) != 0)
    {
      v19 = __clz(__rbit64((-1 << v29) & ~*(_QWORD *)(v16 + 8 * (v29 >> 6)))) | v29 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v31 = 0;
      v32 = (unint64_t)(63 - v28) >> 6;
      do
      {
        if (++v30 == v32 && (v31 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v33 = v30 == v32;
        if (v30 == v32)
          v30 = 0;
        v31 |= v33;
        v34 = *(_QWORD *)(v16 + 8 * v30);
      }
      while (v34 == -1);
      v19 = __clz(__rbit64(~v34)) + (v30 << 6);
    }
    *(_QWORD *)(v16 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v6 + 32))(*(_QWORD *)(v11 + 48) + v26 * v19, v8, v5);
    *(_OWORD *)(*(_QWORD *)(v11 + 56) + 16 * v19) = v40;
    ++*(_QWORD *)(v11 + 16);
  }
  swift_release();
  v3 = v36;
  v23 = v38;
  if ((v39 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v35 = 1 << *(_BYTE *)(v9 + 32);
  if (v35 >= 64)
    bzero(v23, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v35;
  *(_QWORD *)(v9 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v3 = v11;
  return result;
}

uint64_t sub_21C1F8860(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t result;
  int64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  char v31;
  unint64_t v32;
  BOOL v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  int64_t v38;
  _QWORD *v39;
  int v40;
  __int128 v41[2];

  v3 = v2;
  v5 = sub_21C247574();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255249F20);
  v40 = a2;
  v10 = sub_21C2488D0();
  v11 = v10;
  if (!*(_QWORD *)(v9 + 16))
    goto LABEL_41;
  v12 = 1 << *(_BYTE *)(v9 + 32);
  v13 = *(_QWORD *)(v9 + 64);
  v39 = (_QWORD *)(v9 + 64);
  if (v12 < 64)
    v14 = ~(-1 << v12);
  else
    v14 = -1;
  v15 = v14 & v13;
  v37 = v2;
  v38 = (unint64_t)(v12 + 63) >> 6;
  v16 = v10 + 64;
  result = swift_retain();
  v18 = 0;
  while (1)
  {
    if (v15)
    {
      v20 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      v21 = v20 | (v18 << 6);
      goto LABEL_22;
    }
    v22 = v18 + 1;
    if (__OFADD__(v18, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v22 >= v38)
      break;
    v23 = v39;
    v24 = v39[v22];
    ++v18;
    if (!v24)
    {
      v18 = v22 + 1;
      if (v22 + 1 >= v38)
        goto LABEL_34;
      v24 = v39[v18];
      if (!v24)
      {
        v25 = v22 + 2;
        if (v25 >= v38)
        {
LABEL_34:
          swift_release();
          v3 = v37;
          if ((v40 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v24 = v39[v25];
        if (!v24)
        {
          while (1)
          {
            v18 = v25 + 1;
            if (__OFADD__(v25, 1))
              goto LABEL_43;
            if (v18 >= v38)
              goto LABEL_34;
            v24 = v39[v18];
            ++v25;
            if (v24)
              goto LABEL_21;
          }
        }
        v18 = v25;
      }
    }
LABEL_21:
    v15 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v18 << 6);
LABEL_22:
    v26 = *(_QWORD *)(v6 + 72);
    v27 = *(_QWORD *)(v9 + 48) + v26 * v21;
    if ((v40 & 1) != 0)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v6 + 32))(v8, v27, v5);
      sub_21C1EB66C((__int128 *)(*(_QWORD *)(v9 + 56) + 40 * v21), (uint64_t)v41);
    }
    else
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v6 + 16))(v8, v27, v5);
      sub_21C1E712C(*(_QWORD *)(v9 + 56) + 40 * v21, (uint64_t)v41);
    }
    sub_21C1FBD14(&qword_25524A2A8, (uint64_t (*)(uint64_t))MEMORY[0x24BE77EC0], MEMORY[0x24BE77ED0]);
    result = sub_21C248474();
    v28 = -1 << *(_BYTE *)(v11 + 32);
    v29 = result & ~v28;
    v30 = v29 >> 6;
    if (((-1 << v29) & ~*(_QWORD *)(v16 + 8 * (v29 >> 6))) != 0)
    {
      v19 = __clz(__rbit64((-1 << v29) & ~*(_QWORD *)(v16 + 8 * (v29 >> 6)))) | v29 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v31 = 0;
      v32 = (unint64_t)(63 - v28) >> 6;
      do
      {
        if (++v30 == v32 && (v31 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v33 = v30 == v32;
        if (v30 == v32)
          v30 = 0;
        v31 |= v33;
        v34 = *(_QWORD *)(v16 + 8 * v30);
      }
      while (v34 == -1);
      v19 = __clz(__rbit64(~v34)) + (v30 << 6);
    }
    *(_QWORD *)(v16 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
    (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(*(_QWORD *)(v11 + 48) + v26 * v19, v8, v5);
    result = sub_21C1EB66C(v41, *(_QWORD *)(v11 + 56) + 40 * v19);
    ++*(_QWORD *)(v11 + 16);
  }
  swift_release();
  v3 = v37;
  v23 = v39;
  if ((v40 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v35 = 1 << *(_BYTE *)(v9 + 32);
  if (v35 >= 64)
    bzero(v23, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v35;
  *(_QWORD *)(v9 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v3 = v11;
  return result;
}

uint64_t sub_21C1F8C08(uint64_t a1, int a2)
{
  return sub_21C1F72CC(a1, a2, (uint64_t (*)(uint64_t))MEMORY[0x24BE77078], &qword_255249F10, &qword_25524A288, MEMORY[0x24BE77088]);
}

uint64_t sub_21C1F8C2C(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t result;
  int64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  char v31;
  unint64_t v32;
  BOOL v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  int64_t v38;
  _QWORD *v39;
  int v40;
  __int128 v41[2];

  v3 = v2;
  v5 = sub_21C246FB0();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255249FD8);
  v40 = a2;
  v10 = sub_21C2488D0();
  v11 = v10;
  if (!*(_QWORD *)(v9 + 16))
    goto LABEL_41;
  v12 = 1 << *(_BYTE *)(v9 + 32);
  v13 = *(_QWORD *)(v9 + 64);
  v39 = (_QWORD *)(v9 + 64);
  if (v12 < 64)
    v14 = ~(-1 << v12);
  else
    v14 = -1;
  v15 = v14 & v13;
  v37 = v2;
  v38 = (unint64_t)(v12 + 63) >> 6;
  v16 = v10 + 64;
  result = swift_retain();
  v18 = 0;
  while (1)
  {
    if (v15)
    {
      v20 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      v21 = v20 | (v18 << 6);
      goto LABEL_22;
    }
    v22 = v18 + 1;
    if (__OFADD__(v18, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v22 >= v38)
      break;
    v23 = v39;
    v24 = v39[v22];
    ++v18;
    if (!v24)
    {
      v18 = v22 + 1;
      if (v22 + 1 >= v38)
        goto LABEL_34;
      v24 = v39[v18];
      if (!v24)
      {
        v25 = v22 + 2;
        if (v25 >= v38)
        {
LABEL_34:
          swift_release();
          v3 = v37;
          if ((v40 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v24 = v39[v25];
        if (!v24)
        {
          while (1)
          {
            v18 = v25 + 1;
            if (__OFADD__(v25, 1))
              goto LABEL_43;
            if (v18 >= v38)
              goto LABEL_34;
            v24 = v39[v18];
            ++v25;
            if (v24)
              goto LABEL_21;
          }
        }
        v18 = v25;
      }
    }
LABEL_21:
    v15 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v18 << 6);
LABEL_22:
    v26 = *(_QWORD *)(v6 + 72);
    v27 = *(_QWORD *)(v9 + 48) + v26 * v21;
    if ((v40 & 1) != 0)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v6 + 32))(v8, v27, v5);
      sub_21C1EB66C((__int128 *)(*(_QWORD *)(v9 + 56) + 40 * v21), (uint64_t)v41);
    }
    else
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v6 + 16))(v8, v27, v5);
      sub_21C1E712C(*(_QWORD *)(v9 + 56) + 40 * v21, (uint64_t)v41);
    }
    sub_21C1FBD14(&qword_25524A288, (uint64_t (*)(uint64_t))MEMORY[0x24BE77078], MEMORY[0x24BE77088]);
    result = sub_21C248474();
    v28 = -1 << *(_BYTE *)(v11 + 32);
    v29 = result & ~v28;
    v30 = v29 >> 6;
    if (((-1 << v29) & ~*(_QWORD *)(v16 + 8 * (v29 >> 6))) != 0)
    {
      v19 = __clz(__rbit64((-1 << v29) & ~*(_QWORD *)(v16 + 8 * (v29 >> 6)))) | v29 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v31 = 0;
      v32 = (unint64_t)(63 - v28) >> 6;
      do
      {
        if (++v30 == v32 && (v31 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v33 = v30 == v32;
        if (v30 == v32)
          v30 = 0;
        v31 |= v33;
        v34 = *(_QWORD *)(v16 + 8 * v30);
      }
      while (v34 == -1);
      v19 = __clz(__rbit64(~v34)) + (v30 << 6);
    }
    *(_QWORD *)(v16 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
    (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(*(_QWORD *)(v11 + 48) + v26 * v19, v8, v5);
    result = sub_21C1EB66C(v41, *(_QWORD *)(v11 + 56) + 40 * v19);
    ++*(_QWORD *)(v11 + 16);
  }
  swift_release();
  v3 = v37;
  v23 = v39;
  if ((v40 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v35 = 1 << *(_BYTE *)(v9 + 32);
  if (v35 >= 64)
    bzero(v23, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v35;
  *(_QWORD *)(v9 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v3 = v11;
  return result;
}

uint64_t sub_21C1F8FD4(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t result;
  int64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  char v31;
  unint64_t v32;
  BOOL v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  int64_t v38;
  _QWORD *v39;
  int v40;
  __int128 v41[2];

  v3 = v2;
  v5 = sub_21C2472E0();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255249F60);
  v40 = a2;
  v10 = sub_21C2488D0();
  v11 = v10;
  if (!*(_QWORD *)(v9 + 16))
    goto LABEL_41;
  v12 = 1 << *(_BYTE *)(v9 + 32);
  v13 = *(_QWORD *)(v9 + 64);
  v39 = (_QWORD *)(v9 + 64);
  if (v12 < 64)
    v14 = ~(-1 << v12);
  else
    v14 = -1;
  v15 = v14 & v13;
  v37 = v2;
  v38 = (unint64_t)(v12 + 63) >> 6;
  v16 = v10 + 64;
  result = swift_retain();
  v18 = 0;
  while (1)
  {
    if (v15)
    {
      v20 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      v21 = v20 | (v18 << 6);
      goto LABEL_22;
    }
    v22 = v18 + 1;
    if (__OFADD__(v18, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v22 >= v38)
      break;
    v23 = v39;
    v24 = v39[v22];
    ++v18;
    if (!v24)
    {
      v18 = v22 + 1;
      if (v22 + 1 >= v38)
        goto LABEL_34;
      v24 = v39[v18];
      if (!v24)
      {
        v25 = v22 + 2;
        if (v25 >= v38)
        {
LABEL_34:
          swift_release();
          v3 = v37;
          if ((v40 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v24 = v39[v25];
        if (!v24)
        {
          while (1)
          {
            v18 = v25 + 1;
            if (__OFADD__(v25, 1))
              goto LABEL_43;
            if (v18 >= v38)
              goto LABEL_34;
            v24 = v39[v18];
            ++v25;
            if (v24)
              goto LABEL_21;
          }
        }
        v18 = v25;
      }
    }
LABEL_21:
    v15 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v18 << 6);
LABEL_22:
    v26 = *(_QWORD *)(v6 + 72);
    v27 = *(_QWORD *)(v9 + 48) + v26 * v21;
    if ((v40 & 1) != 0)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v6 + 32))(v8, v27, v5);
      sub_21C1EB66C((__int128 *)(*(_QWORD *)(v9 + 56) + 40 * v21), (uint64_t)v41);
    }
    else
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v6 + 16))(v8, v27, v5);
      sub_21C1E712C(*(_QWORD *)(v9 + 56) + 40 * v21, (uint64_t)v41);
    }
    sub_21C1FBD14(&qword_25524A298, (uint64_t (*)(uint64_t))MEMORY[0x24BE777F0], MEMORY[0x24BE77800]);
    result = sub_21C248474();
    v28 = -1 << *(_BYTE *)(v11 + 32);
    v29 = result & ~v28;
    v30 = v29 >> 6;
    if (((-1 << v29) & ~*(_QWORD *)(v16 + 8 * (v29 >> 6))) != 0)
    {
      v19 = __clz(__rbit64((-1 << v29) & ~*(_QWORD *)(v16 + 8 * (v29 >> 6)))) | v29 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v31 = 0;
      v32 = (unint64_t)(63 - v28) >> 6;
      do
      {
        if (++v30 == v32 && (v31 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v33 = v30 == v32;
        if (v30 == v32)
          v30 = 0;
        v31 |= v33;
        v34 = *(_QWORD *)(v16 + 8 * v30);
      }
      while (v34 == -1);
      v19 = __clz(__rbit64(~v34)) + (v30 << 6);
    }
    *(_QWORD *)(v16 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
    (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(*(_QWORD *)(v11 + 48) + v26 * v19, v8, v5);
    result = sub_21C1EB66C(v41, *(_QWORD *)(v11 + 56) + 40 * v19);
    ++*(_QWORD *)(v11 + 16);
  }
  swift_release();
  v3 = v37;
  v23 = v39;
  if ((v40 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v35 = 1 << *(_BYTE *)(v9 + 32);
  if (v35 >= 64)
    bzero(v23, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v35;
  *(_QWORD *)(v9 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v3 = v11;
  return result;
}

uint64_t sub_21C1F937C(uint64_t a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  _QWORD *v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  unint64_t v20;
  char v21;

  v4 = (_QWORD **)v3;
  v8 = (_QWORD *)*v3;
  v10 = sub_21C1F61E4(a2);
  v11 = v8[2];
  v12 = (v9 & 1) == 0;
  v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
  }
  else
  {
    v14 = v9;
    v15 = v8[3];
    if (v15 >= v13 && (a3 & 1) != 0)
    {
LABEL_7:
      v16 = *v4;
      if ((v14 & 1) != 0)
      {
LABEL_8:
        v17 = v16[7];
        v18 = sub_21C247808();
        return (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 40))(v17 + *(_QWORD *)(*(_QWORD *)(v18 - 8) + 72) * v10, a1, v18);
      }
      return sub_21C1FA5D4(v10, a2, a1, v16);
    }
    if (v15 >= v13 && (a3 & 1) == 0)
    {
      sub_21C1FA8FC();
      goto LABEL_7;
    }
    sub_21C1F6954(v13, a3 & 1);
    v20 = sub_21C1F61E4(a2);
    if ((v14 & 1) == (v21 & 1))
    {
      v10 = v20;
      v16 = *v4;
      if ((v14 & 1) != 0)
        goto LABEL_8;
      return sub_21C1FA5D4(v10, a2, a1, v16);
    }
  }
  result = sub_21C248948();
  __break(1u);
  return result;
}

uint64_t sub_21C1F94A0(uint64_t a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  _QWORD *v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t result;
  unint64_t v23;
  char v24;
  uint64_t v25;

  v4 = (_QWORD **)v3;
  v8 = sub_21C24758C();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (_QWORD *)*v3;
  v14 = sub_21C1F621C(a2);
  v15 = v12[2];
  v16 = (v13 & 1) == 0;
  v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_14;
  }
  v18 = v13;
  v19 = v12[3];
  if (v19 >= v17 && (a3 & 1) != 0)
  {
LABEL_7:
    v20 = *v4;
    if ((v18 & 1) != 0)
    {
LABEL_8:
      v21 = v20[7];
      result = swift_bridgeObjectRelease();
      *(_QWORD *)(v21 + 8 * v14) = a1;
      return result;
    }
    goto LABEL_11;
  }
  if (v19 >= v17 && (a3 & 1) == 0)
  {
    sub_21C1FACDC((uint64_t (*)(_QWORD))MEMORY[0x24BE77EF8], &qword_255249F00);
    goto LABEL_7;
  }
  sub_21C1F766C(v17, a3 & 1, (uint64_t (*)(uint64_t))MEMORY[0x24BE77EF8], &qword_255249F00, &qword_25524A278, MEMORY[0x24BE77F08]);
  v23 = sub_21C1F621C(a2);
  if ((v18 & 1) != (v24 & 1))
  {
LABEL_14:
    result = sub_21C248948();
    __break(1u);
    return result;
  }
  v14 = v23;
  v20 = *v4;
  if ((v18 & 1) != 0)
    goto LABEL_8;
LABEL_11:
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
  return sub_21C1FA66C(v14, (uint64_t)v11, a1, v20, (uint64_t (*)(_QWORD))MEMORY[0x24BE77EF8]);
}

uint64_t sub_21C1F9634(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t result;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  char v20;
  _QWORD *v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;

  v5 = v4;
  v10 = *v4;
  v12 = sub_21C1F61E4(a3);
  v13 = *(_QWORD *)(v10 + 16);
  v14 = (v11 & 1) == 0;
  result = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v16 = v11;
  v17 = *(_QWORD *)(v10 + 24);
  if (v17 >= result && (a4 & 1) != 0)
    goto LABEL_7;
  if (v17 >= result && (a4 & 1) == 0)
  {
    result = (uint64_t)sub_21C1FAB1C();
LABEL_7:
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
    {
LABEL_8:
      v19 = (_QWORD *)(v18[7] + 16 * v12);
      *v19 = a1;
      v19[1] = a2;
      return result;
    }
LABEL_11:
    v18[(v12 >> 6) + 8] |= 1 << v12;
    *(_QWORD *)(v18[6] + 8 * v12) = a3;
    v21 = (_QWORD *)(v18[7] + 16 * v12);
    *v21 = a1;
    v21[1] = a2;
    v22 = v18[2];
    v23 = __OFADD__(v22, 1);
    v24 = v22 + 1;
    if (!v23)
    {
      v18[2] = v24;
      return result;
    }
    goto LABEL_14;
  }
  sub_21C1F6C84(result, a4 & 1);
  result = sub_21C1F61E4(a3);
  if ((v16 & 1) == (v20 & 1))
  {
    v12 = result;
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  result = sub_21C248948();
  __break(1u);
  return result;
}

uint64_t sub_21C1F9768(__int128 *a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  _QWORD *v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t result;
  unint64_t v23;
  char v24;
  uint64_t v25;

  v4 = (_QWORD **)v3;
  v8 = sub_21C247094();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (_QWORD *)*v3;
  v14 = sub_21C1F62B4(a2);
  v15 = v12[2];
  v16 = (v13 & 1) == 0;
  v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
  }
  else
  {
    v18 = v13;
    v19 = v12[3];
    if (v19 >= v17 && (a3 & 1) != 0)
    {
LABEL_7:
      v20 = *v4;
      if ((v18 & 1) != 0)
      {
LABEL_8:
        v21 = v20[7] + 40 * v14;
        __swift_destroy_boxed_opaque_existential_1(v21);
        return sub_21C1EB66C(a1, v21);
      }
      goto LABEL_11;
    }
    if (v19 >= v17 && (a3 & 1) == 0)
    {
      sub_21C1FB398((uint64_t (*)(_QWORD))MEMORY[0x24BE77150], &qword_255249FE8, (uint64_t (*)(_BYTE *, uint64_t))sub_21C1EB66C);
      goto LABEL_7;
    }
    sub_21C1F6F24(v17, a3 & 1);
    v23 = sub_21C1F62B4(a2);
    if ((v18 & 1) == (v24 & 1))
    {
      v14 = v23;
      v20 = *v4;
      if ((v18 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
      return sub_21C1FA854(v14, (uint64_t)v11, (uint64_t)a1, v20, (uint64_t (*)(_QWORD))MEMORY[0x24BE77150], (uint64_t (*)(uint64_t, uint64_t))sub_21C1EB66C);
    }
  }
  result = sub_21C248948();
  __break(1u);
  return result;
}

uint64_t sub_21C1F9910(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t *a5)
{
  _QWORD *v5;
  _QWORD **v7;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  _QWORD *v14;
  char v15;
  unint64_t v16;
  uint64_t v17;
  _BOOL8 v18;
  uint64_t result;
  char v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;

  v7 = (_QWORD **)v5;
  v26 = a1;
  v27 = a2;
  v10 = sub_21C2476E8();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = (_QWORD *)*v5;
  v16 = sub_21C1F6448(a3);
  v17 = v14[2];
  v18 = (v15 & 1) == 0;
  result = v17 + v18;
  if (__OFADD__(v17, v18))
  {
    __break(1u);
    goto LABEL_14;
  }
  v20 = v15;
  v21 = v14[3];
  if (v21 >= result && (a4 & 1) != 0)
  {
LABEL_7:
    v22 = *v7;
    if ((v20 & 1) != 0)
    {
LABEL_8:
      v23 = (_QWORD *)(v22[7] + 16 * v16);
      v24 = v27;
      *v23 = v26;
      v23[1] = v24;
      return result;
    }
    goto LABEL_11;
  }
  if (v21 >= result && (a4 & 1) == 0)
  {
    result = (uint64_t)sub_21C1FB84C((uint64_t (*)(_QWORD))MEMORY[0x24BE783F0], a5);
    goto LABEL_7;
  }
  sub_21C1F72CC(result, a4 & 1, (uint64_t (*)(uint64_t))MEMORY[0x24BE783F0], a5, &qword_25524A328, MEMORY[0x24BE78400]);
  result = sub_21C1F6448(a3);
  if ((v20 & 1) != (v25 & 1))
  {
LABEL_14:
    result = sub_21C248948();
    __break(1u);
    return result;
  }
  v16 = result;
  v22 = *v7;
  if ((v20 & 1) != 0)
    goto LABEL_8;
LABEL_11:
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, a3, v10);
  return sub_21C1FA7B4(v16, (uint64_t)v13, v26, v27, v22, (uint64_t (*)(_QWORD))MEMORY[0x24BE783F0]);
}

uint64_t dispatch thunk of static EntryPointProvider.registerEntryPointTypes(in:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t dispatch thunk of static EntryPointProvider.registerRenderEffects(in:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t destroy for EntryPointTypeRegistry()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *_s17PreviewsInjection22EntryPointTypeRegistryVwCP_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for EntryPointTypeRegistry(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *assignWithTake for EntryPointTypeRegistry(_OWORD *a1, _OWORD *a2)
{
  swift_bridgeObjectRelease();
  *a1 = *a2;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for EntryPointTypeRegistry(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 16))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for EntryPointTypeRegistry(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 16) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for EntryPointTypeRegistry()
{
  return &type metadata for EntryPointTypeRegistry;
}

uint64_t sub_21C1F9C40(uint64_t a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  _QWORD *v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t updated;
  uint64_t result;
  unint64_t v24;
  char v25;
  uint64_t v26;

  v4 = (_QWORD **)v3;
  v8 = sub_21C2472E0();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (_QWORD *)*v3;
  v14 = sub_21C1F64E0(a2);
  v15 = v12[2];
  v16 = (v13 & 1) == 0;
  v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
  }
  else
  {
    v18 = v13;
    v19 = v12[3];
    if (v19 >= v17 && (a3 & 1) != 0)
    {
LABEL_7:
      v20 = *v4;
      if ((v18 & 1) != 0)
      {
LABEL_8:
        v21 = v20[7];
        updated = type metadata accessor for EntryPointIndex.UpdateState(0);
        return sub_21C1FBB40(a1, v21 + *(_QWORD *)(*(_QWORD *)(updated - 8) + 72) * v14);
      }
      goto LABEL_11;
    }
    if (v19 >= v17 && (a3 & 1) == 0)
    {
      sub_21C1FB100();
      goto LABEL_7;
    }
    sub_21C1F7D2C(v17, a3 & 1);
    v24 = sub_21C1F64E0(a2);
    if ((v18 & 1) == (v25 & 1))
    {
      v14 = v24;
      v20 = *v4;
      if ((v18 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
      return sub_21C1FA704(v14, (uint64_t)v11, a1, v20);
    }
  }
  result = sub_21C248948();
  __break(1u);
  return result;
}

uint64_t sub_21C1F9DC0(__int128 *a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  _QWORD *v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t result;
  unint64_t v23;
  char v24;
  uint64_t v25;

  v4 = (_QWORD **)v3;
  v8 = sub_21C2472E0();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (_QWORD *)*v3;
  v14 = sub_21C1F64E0(a2);
  v15 = v12[2];
  v16 = (v13 & 1) == 0;
  v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
  }
  else
  {
    v18 = v13;
    v19 = v12[3];
    if (v19 >= v17 && (a3 & 1) != 0)
    {
LABEL_7:
      v20 = *v4;
      if ((v18 & 1) != 0)
      {
LABEL_8:
        v21 = v20[7] + 40 * v14;
        __swift_destroy_boxed_opaque_existential_1(v21);
        return sub_21C1EB66C(a1, v21);
      }
      goto LABEL_11;
    }
    if (v19 >= v17 && (a3 & 1) == 0)
    {
      sub_21C1FB398((uint64_t (*)(_QWORD))MEMORY[0x24BE777F0], &qword_255249F50, (uint64_t (*)(_BYTE *, uint64_t))sub_21C1EB66C);
      goto LABEL_7;
    }
    sub_21C1F8120(v17, a3 & 1);
    v23 = sub_21C1F64E0(a2);
    if ((v18 & 1) == (v24 & 1))
    {
      v14 = v23;
      v20 = *v4;
      if ((v18 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
      return sub_21C1FA854(v14, (uint64_t)v11, (uint64_t)a1, v20, (uint64_t (*)(_QWORD))MEMORY[0x24BE777F0], (uint64_t (*)(uint64_t, uint64_t))sub_21C1EB66C);
    }
  }
  result = sub_21C248948();
  __break(1u);
  return result;
}

uint64_t sub_21C1F9F68(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD **v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  _QWORD *v13;
  char v14;
  unint64_t v15;
  uint64_t v16;
  _BOOL8 v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t *v22;
  uint64_t result;
  uint64_t v24;
  unint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;

  v5 = (_QWORD **)v4;
  v28 = a2;
  v9 = sub_21C24752C();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = (_QWORD *)*v4;
  v15 = sub_21C1F6610(a3);
  v16 = v13[2];
  v17 = (v14 & 1) == 0;
  v18 = v16 + v17;
  if (__OFADD__(v16, v17))
  {
    __break(1u);
    goto LABEL_14;
  }
  v19 = v14;
  v20 = v13[3];
  if (v20 >= v18 && (a4 & 1) != 0)
  {
LABEL_7:
    v21 = *v5;
    if ((v19 & 1) != 0)
    {
LABEL_8:
      v22 = (uint64_t *)(v21[7] + 16 * v15);
      result = swift_unknownObjectRelease();
      v24 = v28;
      *v22 = a1;
      v22[1] = v24;
      return result;
    }
    goto LABEL_11;
  }
  if (v20 >= v18 && (a4 & 1) == 0)
  {
    sub_21C1FB5E0();
    goto LABEL_7;
  }
  sub_21C1F84C8(v18, a4 & 1);
  v25 = sub_21C1F6610(a3);
  if ((v19 & 1) != (v26 & 1))
  {
LABEL_14:
    result = sub_21C248948();
    __break(1u);
    return result;
  }
  v15 = v25;
  v21 = *v5;
  if ((v19 & 1) != 0)
    goto LABEL_8;
LABEL_11:
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, a3, v9);
  return sub_21C1FA7B4(v15, (uint64_t)v12, a1, v28, v21, (uint64_t (*)(_QWORD))MEMORY[0x24BE77E60]);
}

uint64_t sub_21C1FA0DC(__int128 *a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  _QWORD *v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t result;
  unint64_t v23;
  char v24;
  uint64_t v25;

  v4 = (_QWORD **)v3;
  v8 = sub_21C247574();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (_QWORD *)*v3;
  v14 = sub_21C1F6578(a2);
  v15 = v12[2];
  v16 = (v13 & 1) == 0;
  v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
  }
  else
  {
    v18 = v13;
    v19 = v12[3];
    if (v19 >= v17 && (a3 & 1) != 0)
    {
LABEL_7:
      v20 = *v4;
      if ((v18 & 1) != 0)
      {
LABEL_8:
        v21 = v20[7] + 40 * v14;
        __swift_destroy_boxed_opaque_existential_1(v21);
        return sub_21C1EB66C(a1, v21);
      }
      goto LABEL_11;
    }
    if (v19 >= v17 && (a3 & 1) == 0)
    {
      sub_21C1FB398((uint64_t (*)(_QWORD))MEMORY[0x24BE77EC0], &qword_255249F20, (uint64_t (*)(_BYTE *, uint64_t))sub_21C1EB66C);
      goto LABEL_7;
    }
    sub_21C1F8860(v17, a3 & 1);
    v23 = sub_21C1F6578(a2);
    if ((v18 & 1) == (v24 & 1))
    {
      v14 = v23;
      v20 = *v4;
      if ((v18 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
      return sub_21C1FA854(v14, (uint64_t)v11, (uint64_t)a1, v20, (uint64_t (*)(_QWORD))MEMORY[0x24BE77EC0], (uint64_t (*)(uint64_t, uint64_t))sub_21C1EB66C);
    }
  }
  result = sub_21C248948();
  __break(1u);
  return result;
}

uint64_t sub_21C1FA284(__int128 *a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  _QWORD *v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t result;
  unint64_t v23;
  char v24;
  uint64_t v25;

  v4 = (_QWORD **)v3;
  v8 = sub_21C246FB0();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (_QWORD *)*v3;
  v14 = sub_21C1F634C(a2);
  v15 = v12[2];
  v16 = (v13 & 1) == 0;
  v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
  }
  else
  {
    v18 = v13;
    v19 = v12[3];
    if (v19 >= v17 && (a3 & 1) != 0)
    {
LABEL_7:
      v20 = *v4;
      if ((v18 & 1) != 0)
      {
LABEL_8:
        v21 = v20[7] + 40 * v14;
        __swift_destroy_boxed_opaque_existential_1(v21);
        return sub_21C1EB66C(a1, v21);
      }
      goto LABEL_11;
    }
    if (v19 >= v17 && (a3 & 1) == 0)
    {
      sub_21C1FB398((uint64_t (*)(_QWORD))MEMORY[0x24BE77078], &qword_255249FD8, (uint64_t (*)(_BYTE *, uint64_t))sub_21C1EB66C);
      goto LABEL_7;
    }
    sub_21C1F8C2C(v17, a3 & 1);
    v23 = sub_21C1F634C(a2);
    if ((v18 & 1) == (v24 & 1))
    {
      v14 = v23;
      v20 = *v4;
      if ((v18 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
      return sub_21C1FA854(v14, (uint64_t)v11, (uint64_t)a1, v20, (uint64_t (*)(_QWORD))MEMORY[0x24BE77078], (uint64_t (*)(uint64_t, uint64_t))sub_21C1EB66C);
    }
  }
  result = sub_21C248948();
  __break(1u);
  return result;
}

uint64_t sub_21C1FA42C(__int128 *a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  _QWORD *v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t result;
  unint64_t v23;
  char v24;
  uint64_t v25;

  v4 = (_QWORD **)v3;
  v8 = sub_21C2472E0();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (_QWORD *)*v3;
  v14 = sub_21C1F64E0(a2);
  v15 = v12[2];
  v16 = (v13 & 1) == 0;
  v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
  }
  else
  {
    v18 = v13;
    v19 = v12[3];
    if (v19 >= v17 && (a3 & 1) != 0)
    {
LABEL_7:
      v20 = *v4;
      if ((v18 & 1) != 0)
      {
LABEL_8:
        v21 = v20[7] + 40 * v14;
        __swift_destroy_boxed_opaque_existential_1(v21);
        return sub_21C1EB66C(a1, v21);
      }
      goto LABEL_11;
    }
    if (v19 >= v17 && (a3 & 1) == 0)
    {
      sub_21C1FB398((uint64_t (*)(_QWORD))MEMORY[0x24BE777F0], &qword_255249F60, (uint64_t (*)(_BYTE *, uint64_t))sub_21C1EB66C);
      goto LABEL_7;
    }
    sub_21C1F8FD4(v17, a3 & 1);
    v23 = sub_21C1F64E0(a2);
    if ((v18 & 1) == (v24 & 1))
    {
      v14 = v23;
      v20 = *v4;
      if ((v18 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
      return sub_21C1FA854(v14, (uint64_t)v11, (uint64_t)a1, v20, (uint64_t (*)(_QWORD))MEMORY[0x24BE777F0], (uint64_t (*)(uint64_t, uint64_t))sub_21C1EB66C);
    }
  }
  result = sub_21C248948();
  __break(1u);
  return result;
}

uint64_t sub_21C1FA5D4(unint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  *(_QWORD *)(a4[6] + 8 * a1) = a2;
  v7 = a4[7];
  v8 = sub_21C247808();
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(v7 + *(_QWORD *)(*(_QWORD *)(v8 - 8) + 72) * a1, a3, v8);
  v10 = a4[2];
  v11 = __OFADD__(v10, 1);
  v12 = v10 + 1;
  if (v11)
    __break(1u);
  else
    a4[2] = v12;
  return result;
}

uint64_t sub_21C1FA660(unint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  return sub_21C1FA66C(a1, a2, a3, a4, (uint64_t (*)(_QWORD))MEMORY[0x24BE777F0]);
}

uint64_t sub_21C1FA66C(unint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4, uint64_t (*a5)(_QWORD))
{
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  v9 = a4[6];
  v10 = a5(0);
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v9 + *(_QWORD *)(*(_QWORD *)(v10 - 8) + 72) * a1, a2, v10);
  *(_QWORD *)(a4[7] + 8 * a1) = a3;
  v12 = a4[2];
  v13 = __OFADD__(v12, 1);
  v14 = v12 + 1;
  if (v13)
    __break(1u);
  else
    a4[2] = v14;
  return result;
}

uint64_t sub_21C1FA704(unint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t updated;
  uint64_t result;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  v8 = a4[6];
  v9 = sub_21C2472E0();
  (*(void (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v8 + *(_QWORD *)(*(_QWORD *)(v9 - 8) + 72) * a1, a2, v9);
  v10 = a4[7];
  updated = type metadata accessor for EntryPointIndex.UpdateState(0);
  result = sub_21C1FBAFC(a3, v10 + *(_QWORD *)(*(_QWORD *)(updated - 8) + 72) * a1);
  v13 = a4[2];
  v14 = __OFADD__(v13, 1);
  v15 = v13 + 1;
  if (v14)
    __break(1u);
  else
    a4[2] = v15;
  return result;
}

uint64_t sub_21C1FA7B4(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5, uint64_t (*a6)(_QWORD))
{
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  _QWORD *v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;

  a5[(a1 >> 6) + 8] |= 1 << a1;
  v11 = a5[6];
  v12 = a6(0);
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v11 + *(_QWORD *)(*(_QWORD *)(v12 - 8) + 72) * a1, a2, v12);
  v14 = (_QWORD *)(a5[7] + 16 * a1);
  *v14 = a3;
  v14[1] = a4;
  v15 = a5[2];
  v16 = __OFADD__(v15, 1);
  v17 = v15 + 1;
  if (v16)
    __break(1u);
  else
    a5[2] = v17;
  return result;
}

uint64_t sub_21C1FA854(unint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4, uint64_t (*a5)(_QWORD), uint64_t (*a6)(uint64_t, uint64_t))
{
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  v11 = a4[6];
  v12 = a5(0);
  (*(void (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v11 + *(_QWORD *)(*(_QWORD *)(v12 - 8) + 72) * a1, a2, v12);
  result = a6(a3, a4[7] + 40 * a1);
  v14 = a4[2];
  v15 = __OFADD__(v14, 1);
  v16 = v14 + 1;
  if (v15)
    __break(1u);
  else
    a4[2] = v16;
  return result;
}

void *sub_21C1FA8FC()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *result;
  unint64_t v9;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  int64_t v26;

  v1 = sub_21C247808();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_255249F40);
  v24 = v0;
  v5 = *v0;
  v6 = sub_21C2488C4();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v24 = v7;
    return result;
  }
  result = (void *)(v6 + 64);
  v9 = (unint64_t)((1 << *(_BYTE *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9)
    result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  v11 = 0;
  *(_QWORD *)(v7 + 16) = *(_QWORD *)(v5 + 16);
  v12 = 1 << *(_BYTE *)(v5 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v14 = v13 & *(_QWORD *)(v5 + 64);
  v25 = v5 + 64;
  v26 = (unint64_t)(v12 + 63) >> 6;
  while (1)
  {
    if (v14)
    {
      v15 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v16 = v15 | (v11 << 6);
      goto LABEL_12;
    }
    v20 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v26)
      goto LABEL_26;
    v21 = *(_QWORD *)(v25 + 8 * v20);
    ++v11;
    if (!v21)
    {
      v11 = v20 + 1;
      if (v20 + 1 >= v26)
        goto LABEL_26;
      v21 = *(_QWORD *)(v25 + 8 * v11);
      if (!v21)
        break;
    }
LABEL_25:
    v14 = (v21 - 1) & v21;
    v16 = __clz(__rbit64(v21)) + (v11 << 6);
LABEL_12:
    v17 = 8 * v16;
    v18 = *(_QWORD *)(*(_QWORD *)(v5 + 48) + 8 * v16);
    v19 = *(_QWORD *)(v2 + 72) * v16;
    (*(void (**)(char *, unint64_t, uint64_t))(v2 + 16))(v4, *(_QWORD *)(v5 + 56) + v19, v1);
    *(_QWORD *)(*(_QWORD *)(v7 + 48) + v17) = v18;
    result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v2 + 32))(*(_QWORD *)(v7 + 56) + v19, v4, v1);
  }
  v22 = v20 + 2;
  if (v22 >= v26)
    goto LABEL_26;
  v21 = *(_QWORD *)(v25 + 8 * v22);
  if (v21)
  {
    v11 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    v11 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v11 >= v26)
      goto LABEL_26;
    v21 = *(_QWORD *)(v25 + 8 * v11);
    ++v22;
    if (v21)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_21C1FAB1C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  unint64_t v23;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255249EF0);
  v2 = *v0;
  v3 = sub_21C2488C4();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v13)
      goto LABEL_26;
    v21 = *(_QWORD *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      v9 = v20 + 1;
      if (v20 + 1 >= v13)
        goto LABEL_26;
      v21 = *(_QWORD *)(v6 + 8 * v9);
      if (!v21)
        break;
    }
LABEL_25:
    v23 = __clz(__rbit64(v21));
    v12 = (v21 - 1) & v21;
    v15 = v23 + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v15);
    v18 = 16 * v15;
    v19 = *(_OWORD *)(*(_QWORD *)(v2 + 56) + v18);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = v17;
    *(_OWORD *)(*(_QWORD *)(v4 + 56) + v18) = v19;
  }
  v22 = v20 + 2;
  if (v22 >= v13)
    goto LABEL_26;
  v21 = *(_QWORD *)(v6 + 8 * v22);
  if (v21)
  {
    v9 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v21 = *(_QWORD *)(v6 + 8 * v9);
    ++v22;
    if (v21)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_21C1FACAC()
{
  return sub_21C1FB398((uint64_t (*)(_QWORD))MEMORY[0x24BE77150], &qword_255249FE8, (uint64_t (*)(_BYTE *, uint64_t))sub_21C1EB66C);
}

void *sub_21C1FACC8()
{
  return sub_21C1FACDC((uint64_t (*)(_QWORD))MEMORY[0x24BE777F0], &qword_255249F80);
}

void *sub_21C1FACDC(uint64_t (*a1)(_QWORD), uint64_t *a2)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *result;
  unint64_t v12;
  int64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  int64_t v29;

  v4 = a1(0);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v26 - v6;
  __swift_instantiateConcreteTypeFromMangledName(a2);
  v27 = v2;
  v8 = *v2;
  v9 = sub_21C2488C4();
  v10 = v9;
  if (!*(_QWORD *)(v8 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v27 = v10;
    return result;
  }
  result = (void *)(v9 + 64);
  v12 = (unint64_t)((1 << *(_BYTE *)(v10 + 32)) + 63) >> 6;
  if (v10 != v8 || (unint64_t)result >= v8 + 64 + 8 * v12)
    result = memmove(result, (const void *)(v8 + 64), 8 * v12);
  v28 = v8 + 64;
  v14 = 0;
  *(_QWORD *)(v10 + 16) = *(_QWORD *)(v8 + 16);
  v15 = 1 << *(_BYTE *)(v8 + 32);
  v16 = -1;
  if (v15 < 64)
    v16 = ~(-1 << v15);
  v17 = v16 & *(_QWORD *)(v8 + 64);
  v29 = (unint64_t)(v15 + 63) >> 6;
  while (1)
  {
    if (v17)
    {
      v18 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      v19 = v18 | (v14 << 6);
      goto LABEL_12;
    }
    v23 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v29)
      goto LABEL_26;
    v24 = *(_QWORD *)(v28 + 8 * v23);
    ++v14;
    if (!v24)
    {
      v14 = v23 + 1;
      if (v23 + 1 >= v29)
        goto LABEL_26;
      v24 = *(_QWORD *)(v28 + 8 * v14);
      if (!v24)
        break;
    }
LABEL_25:
    v17 = (v24 - 1) & v24;
    v19 = __clz(__rbit64(v24)) + (v14 << 6);
LABEL_12:
    v20 = *(_QWORD *)(v5 + 72) * v19;
    (*(void (**)(char *, unint64_t, uint64_t))(v5 + 16))(v7, *(_QWORD *)(v8 + 48) + v20, v4);
    v21 = 8 * v19;
    v22 = *(_QWORD *)(*(_QWORD *)(v8 + 56) + 8 * v19);
    (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(*(_QWORD *)(v10 + 48) + v20, v7, v4);
    *(_QWORD *)(*(_QWORD *)(v10 + 56) + v21) = v22;
    result = (void *)swift_bridgeObjectRetain();
  }
  v25 = v23 + 2;
  if (v25 >= v29)
    goto LABEL_26;
  v24 = *(_QWORD *)(v28 + 8 * v25);
  if (v24)
  {
    v14 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    v14 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (v14 >= v29)
      goto LABEL_26;
    v24 = *(_QWORD *)(v28 + 8 * v14);
    ++v25;
    if (v24)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_21C1FAF0C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  int64_t v25;
  unint64_t v26;
  int64_t v27;
  uint64_t *v28;
  _OWORD v29[2];
  uint64_t v30;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255249F28);
  v2 = *v0;
  v3 = sub_21C2488C4();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = (void *)swift_release();
LABEL_28:
    *v1 = v4;
    return result;
  }
  v28 = v1;
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v25 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v25 >= v13)
      goto LABEL_26;
    v26 = *(_QWORD *)(v6 + 8 * v25);
    ++v9;
    if (!v26)
    {
      v9 = v25 + 1;
      if (v25 + 1 >= v13)
        goto LABEL_26;
      v26 = *(_QWORD *)(v6 + 8 * v9);
      if (!v26)
        break;
    }
LABEL_25:
    v12 = (v26 - 1) & v26;
    v15 = __clz(__rbit64(v26)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v19 = *v17;
    v18 = v17[1];
    v20 = 40 * v15;
    sub_21C1FBB84(*(_QWORD *)(v2 + 56) + 40 * v15, (uint64_t)v29);
    v21 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v21 = v19;
    v21[1] = v18;
    v22 = *(_QWORD *)(v4 + 56) + v20;
    v23 = v30;
    v24 = v29[1];
    *(_OWORD *)v22 = v29[0];
    *(_OWORD *)(v22 + 16) = v24;
    *(_QWORD *)(v22 + 32) = v23;
    result = (void *)swift_bridgeObjectRetain();
  }
  v27 = v25 + 2;
  if (v27 >= v13)
  {
LABEL_26:
    result = (void *)swift_release();
    v1 = v28;
    goto LABEL_28;
  }
  v26 = *(_QWORD *)(v6 + 8 * v27);
  if (v26)
  {
    v9 = v27;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v27 + 1;
    if (__OFADD__(v27, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v26 = *(_QWORD *)(v6 + 8 * v9);
    ++v27;
    if (v26)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_21C1FB100()
{
  uint64_t *v0;
  uint64_t updated;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *result;
  unint64_t v12;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  uint64_t *v24;
  uint64_t v25;
  int64_t v26;
  uint64_t v27;

  updated = type metadata accessor for EntryPointIndex.UpdateState(0);
  v27 = *(_QWORD *)(updated - 8);
  MEMORY[0x24BDAC7A8](updated);
  v3 = (char *)&v24 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_21C2472E0();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_255249F70);
  v24 = v0;
  v8 = *v0;
  v9 = sub_21C2488C4();
  v10 = v9;
  if (!*(_QWORD *)(v8 + 16))
  {
LABEL_23:
    result = (void *)swift_release();
    *v24 = v10;
    return result;
  }
  result = (void *)(v9 + 64);
  v12 = (unint64_t)((1 << *(_BYTE *)(v10 + 32)) + 63) >> 6;
  if (v10 != v8 || (unint64_t)result >= v8 + 64 + 8 * v12)
    result = memmove(result, (const void *)(v8 + 64), 8 * v12);
  v25 = v8 + 64;
  v13 = 0;
  *(_QWORD *)(v10 + 16) = *(_QWORD *)(v8 + 16);
  v14 = 1 << *(_BYTE *)(v8 + 32);
  v15 = -1;
  if (v14 < 64)
    v15 = ~(-1 << v14);
  v16 = v15 & *(_QWORD *)(v8 + 64);
  v26 = (unint64_t)(v14 + 63) >> 6;
  while (1)
  {
    if (v16)
    {
      v17 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      v18 = v17 | (v13 << 6);
      goto LABEL_9;
    }
    v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v21 >= v26)
      goto LABEL_23;
    v22 = *(_QWORD *)(v25 + 8 * v21);
    ++v13;
    if (!v22)
    {
      v13 = v21 + 1;
      if (v21 + 1 >= v26)
        goto LABEL_23;
      v22 = *(_QWORD *)(v25 + 8 * v13);
      if (!v22)
        break;
    }
LABEL_22:
    v16 = (v22 - 1) & v22;
    v18 = __clz(__rbit64(v22)) + (v13 << 6);
LABEL_9:
    v19 = *(_QWORD *)(v5 + 72) * v18;
    (*(void (**)(char *, unint64_t, uint64_t))(v5 + 16))(v7, *(_QWORD *)(v8 + 48) + v19, v4);
    v20 = *(_QWORD *)(v27 + 72) * v18;
    sub_21C1FBAB8(*(_QWORD *)(v8 + 56) + v20, (uint64_t)v3);
    (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(*(_QWORD *)(v10 + 48) + v19, v7, v4);
    result = (void *)sub_21C1FBAFC((uint64_t)v3, *(_QWORD *)(v10 + 56) + v20);
  }
  v23 = v21 + 2;
  if (v23 >= v26)
    goto LABEL_23;
  v22 = *(_QWORD *)(v25 + 8 * v23);
  if (v22)
  {
    v13 = v23;
    goto LABEL_22;
  }
  while (1)
  {
    v13 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v13 >= v26)
      goto LABEL_23;
    v22 = *(_QWORD *)(v25 + 8 * v13);
    ++v23;
    if (v22)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
  return result;
}

void *sub_21C1FB37C()
{
  return sub_21C1FB398((uint64_t (*)(_QWORD))MEMORY[0x24BE777F0], &qword_255249F50, (uint64_t (*)(_BYTE *, uint64_t))sub_21C1EB66C);
}

void *sub_21C1FB398(uint64_t (*a1)(_QWORD), uint64_t *a2, uint64_t (*a3)(_BYTE *, uint64_t))
{
  uint64_t *v3;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *result;
  unint64_t v14;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  int64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  int64_t v25;
  unint64_t v26;
  int64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t (*v30)(_BYTE *, uint64_t);
  _BYTE v31[40];

  v30 = a3;
  v5 = v3;
  v6 = a1(0);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v28 - v8;
  __swift_instantiateConcreteTypeFromMangledName(a2);
  v10 = *v3;
  v11 = sub_21C2488C4();
  v12 = v11;
  if (!*(_QWORD *)(v10 + 16))
  {
    result = (void *)swift_release();
LABEL_28:
    *v5 = v12;
    return result;
  }
  v28 = v5;
  result = (void *)(v11 + 64);
  v14 = (unint64_t)((1 << *(_BYTE *)(v12 + 32)) + 63) >> 6;
  if (v12 != v10 || (unint64_t)result >= v10 + 64 + 8 * v14)
    result = memmove(result, (const void *)(v10 + 64), 8 * v14);
  v29 = v10 + 64;
  v16 = 0;
  *(_QWORD *)(v12 + 16) = *(_QWORD *)(v10 + 16);
  v17 = 1 << *(_BYTE *)(v10 + 32);
  v18 = -1;
  if (v17 < 64)
    v18 = ~(-1 << v17);
  v19 = v18 & *(_QWORD *)(v10 + 64);
  v20 = (unint64_t)(v17 + 63) >> 6;
  while (1)
  {
    if (v19)
    {
      v21 = __clz(__rbit64(v19));
      v19 &= v19 - 1;
      v22 = v21 | (v16 << 6);
      goto LABEL_12;
    }
    v25 = v16 + 1;
    if (__OFADD__(v16, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v25 >= v20)
      goto LABEL_26;
    v26 = *(_QWORD *)(v29 + 8 * v25);
    ++v16;
    if (!v26)
    {
      v16 = v25 + 1;
      if (v25 + 1 >= v20)
        goto LABEL_26;
      v26 = *(_QWORD *)(v29 + 8 * v16);
      if (!v26)
        break;
    }
LABEL_25:
    v19 = (v26 - 1) & v26;
    v22 = __clz(__rbit64(v26)) + (v16 << 6);
LABEL_12:
    v23 = *(_QWORD *)(v7 + 72) * v22;
    (*(void (**)(char *, unint64_t, uint64_t))(v7 + 16))(v9, *(_QWORD *)(v10 + 48) + v23, v6);
    v24 = 40 * v22;
    sub_21C1E712C(*(_QWORD *)(v10 + 56) + v24, (uint64_t)v31);
    (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(*(_QWORD *)(v12 + 48) + v23, v9, v6);
    result = (void *)v30(v31, *(_QWORD *)(v12 + 56) + v24);
  }
  v27 = v25 + 2;
  if (v27 >= v20)
  {
LABEL_26:
    result = (void *)swift_release();
    v5 = v28;
    goto LABEL_28;
  }
  v26 = *(_QWORD *)(v29 + 8 * v27);
  if (v26)
  {
    v16 = v27;
    goto LABEL_25;
  }
  while (1)
  {
    v16 = v27 + 1;
    if (__OFADD__(v27, 1))
      break;
    if (v16 >= v20)
      goto LABEL_26;
    v26 = *(_QWORD *)(v29 + 8 * v16);
    ++v27;
    if (v26)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_21C1FB5E0()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *result;
  unint64_t v10;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  void (*v22)(unint64_t, char *, uint64_t);
  int64_t v23;
  unint64_t v24;
  int64_t v25;
  uint64_t *v26;
  uint64_t v27;
  __int128 v28;

  v1 = v0;
  v2 = sub_21C24752C();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25524A2C8);
  v6 = *v0;
  v7 = sub_21C2488C4();
  v8 = v7;
  if (!*(_QWORD *)(v6 + 16))
  {
    result = (void *)swift_release();
LABEL_28:
    *v1 = v8;
    return result;
  }
  v26 = v1;
  result = (void *)(v7 + 64);
  v10 = (unint64_t)((1 << *(_BYTE *)(v8 + 32)) + 63) >> 6;
  if (v8 != v6 || (unint64_t)result >= v6 + 64 + 8 * v10)
    result = memmove(result, (const void *)(v6 + 64), 8 * v10);
  v27 = v6 + 64;
  v12 = 0;
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(v6 + 16);
  v13 = 1 << *(_BYTE *)(v6 + 32);
  v14 = -1;
  if (v13 < 64)
    v14 = ~(-1 << v13);
  v15 = v14 & *(_QWORD *)(v6 + 64);
  v16 = (unint64_t)(v13 + 63) >> 6;
  while (1)
  {
    if (v15)
    {
      v17 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      v18 = v17 | (v12 << 6);
      goto LABEL_12;
    }
    v23 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v23 >= v16)
      goto LABEL_26;
    v24 = *(_QWORD *)(v27 + 8 * v23);
    ++v12;
    if (!v24)
    {
      v12 = v23 + 1;
      if (v23 + 1 >= v16)
        goto LABEL_26;
      v24 = *(_QWORD *)(v27 + 8 * v12);
      if (!v24)
        break;
    }
LABEL_25:
    v15 = (v24 - 1) & v24;
    v18 = __clz(__rbit64(v24)) + (v12 << 6);
LABEL_12:
    v19 = *(_QWORD *)(v3 + 72) * v18;
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v5, *(_QWORD *)(v6 + 48) + v19, v2);
    v20 = 16 * v18;
    v21 = *(_QWORD *)(v8 + 48) + v19;
    v22 = *(void (**)(unint64_t, char *, uint64_t))(v3 + 32);
    v28 = *(_OWORD *)(*(_QWORD *)(v6 + 56) + v20);
    v22(v21, v5, v2);
    *(_OWORD *)(*(_QWORD *)(v8 + 56) + v20) = v28;
    result = (void *)swift_unknownObjectRetain();
  }
  v25 = v23 + 2;
  if (v25 >= v16)
  {
LABEL_26:
    result = (void *)swift_release();
    v1 = v26;
    goto LABEL_28;
  }
  v24 = *(_QWORD *)(v27 + 8 * v25);
  if (v24)
  {
    v12 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    v12 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (v12 >= v16)
      goto LABEL_26;
    v24 = *(_QWORD *)(v27 + 8 * v12);
    ++v25;
    if (v24)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_21C1FB81C()
{
  return sub_21C1FB398((uint64_t (*)(_QWORD))MEMORY[0x24BE77EC0], &qword_255249F20, (uint64_t (*)(_BYTE *, uint64_t))sub_21C1EB66C);
}

void *sub_21C1FB838()
{
  return sub_21C1FB84C((uint64_t (*)(_QWORD))MEMORY[0x24BE77078], &qword_255249F10);
}

void *sub_21C1FB84C(uint64_t (*a1)(_QWORD), uint64_t *a2)
{
  uint64_t *v2;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *result;
  unint64_t v13;
  int64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  int64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t (*v25)(unint64_t, char *, uint64_t);
  int64_t v26;
  unint64_t v27;
  int64_t v28;
  uint64_t *v29;
  uint64_t v30;
  __int128 v31;

  v4 = v2;
  v5 = a1(0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v29 - v7;
  __swift_instantiateConcreteTypeFromMangledName(a2);
  v9 = *v2;
  v10 = sub_21C2488C4();
  v11 = v10;
  if (!*(_QWORD *)(v9 + 16))
  {
    result = (void *)swift_release();
LABEL_28:
    *v4 = v11;
    return result;
  }
  v29 = v4;
  result = (void *)(v10 + 64);
  v13 = (unint64_t)((1 << *(_BYTE *)(v11 + 32)) + 63) >> 6;
  if (v11 != v9 || (unint64_t)result >= v9 + 64 + 8 * v13)
    result = memmove(result, (const void *)(v9 + 64), 8 * v13);
  v30 = v9 + 64;
  v15 = 0;
  *(_QWORD *)(v11 + 16) = *(_QWORD *)(v9 + 16);
  v16 = 1 << *(_BYTE *)(v9 + 32);
  v17 = -1;
  if (v16 < 64)
    v17 = ~(-1 << v16);
  v18 = v17 & *(_QWORD *)(v9 + 64);
  v19 = (unint64_t)(v16 + 63) >> 6;
  while (1)
  {
    if (v18)
    {
      v20 = __clz(__rbit64(v18));
      v18 &= v18 - 1;
      v21 = v20 | (v15 << 6);
      goto LABEL_12;
    }
    v26 = v15 + 1;
    if (__OFADD__(v15, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v26 >= v19)
      goto LABEL_26;
    v27 = *(_QWORD *)(v30 + 8 * v26);
    ++v15;
    if (!v27)
    {
      v15 = v26 + 1;
      if (v26 + 1 >= v19)
        goto LABEL_26;
      v27 = *(_QWORD *)(v30 + 8 * v15);
      if (!v27)
        break;
    }
LABEL_25:
    v18 = (v27 - 1) & v27;
    v21 = __clz(__rbit64(v27)) + (v15 << 6);
LABEL_12:
    v22 = *(_QWORD *)(v6 + 72) * v21;
    (*(void (**)(char *, unint64_t, uint64_t))(v6 + 16))(v8, *(_QWORD *)(v9 + 48) + v22, v5);
    v23 = 16 * v21;
    v24 = *(_QWORD *)(v11 + 48) + v22;
    v25 = *(uint64_t (**)(unint64_t, char *, uint64_t))(v6 + 32);
    v31 = *(_OWORD *)(*(_QWORD *)(v9 + 56) + v23);
    result = (void *)v25(v24, v8, v5);
    *(_OWORD *)(*(_QWORD *)(v11 + 56) + v23) = v31;
  }
  v28 = v26 + 2;
  if (v28 >= v19)
  {
LABEL_26:
    result = (void *)swift_release();
    v4 = v29;
    goto LABEL_28;
  }
  v27 = *(_QWORD *)(v30 + 8 * v28);
  if (v27)
  {
    v15 = v28;
    goto LABEL_25;
  }
  while (1)
  {
    v15 = v28 + 1;
    if (__OFADD__(v28, 1))
      break;
    if (v15 >= v19)
      goto LABEL_26;
    v27 = *(_QWORD *)(v30 + 8 * v15);
    ++v28;
    if (v27)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_21C1FBA80()
{
  return sub_21C1FB398((uint64_t (*)(_QWORD))MEMORY[0x24BE77078], &qword_255249FD8, (uint64_t (*)(_BYTE *, uint64_t))sub_21C1EB66C);
}

void *sub_21C1FBA9C()
{
  return sub_21C1FB398((uint64_t (*)(_QWORD))MEMORY[0x24BE777F0], &qword_255249F60, (uint64_t (*)(_BYTE *, uint64_t))sub_21C1EB66C);
}

uint64_t sub_21C1FBAB8(uint64_t a1, uint64_t a2)
{
  uint64_t updated;

  updated = type metadata accessor for EntryPointIndex.UpdateState(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(updated - 8) + 16))(a2, a1, updated);
  return a2;
}

uint64_t sub_21C1FBAFC(uint64_t a1, uint64_t a2)
{
  uint64_t updated;

  updated = type metadata accessor for EntryPointIndex.UpdateState(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(updated - 8) + 32))(a2, a1, updated);
  return a2;
}

uint64_t sub_21C1FBB40(uint64_t a1, uint64_t a2)
{
  uint64_t updated;

  updated = type metadata accessor for EntryPointIndex.UpdateState(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(updated - 8) + 40))(a2, a1, updated);
  return a2;
}

uint64_t sub_21C1FBB84(uint64_t a1, uint64_t a2)
{
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(MEMORY[0x24BEE23D0] - 8) + 16))(a2, a1);
  return a2;
}

unint64_t sub_21C1FBBC0()
{
  unint64_t result;

  result = qword_25524A2F8;
  if (!qword_25524A2F8)
  {
    result = MEMORY[0x22077702C](&unk_21C2492E8, &type metadata for NoopEntryPoint);
    atomic_store(result, (unint64_t *)&qword_25524A2F8);
  }
  return result;
}

unint64_t sub_21C1FBC04()
{
  unint64_t result;

  result = qword_25524A300;
  if (!qword_25524A300)
  {
    result = MEMORY[0x22077702C](&unk_21C24B518, &type metadata for CFunctionEntryPoint);
    atomic_store(result, (unint64_t *)&qword_25524A300);
  }
  return result;
}

unint64_t sub_21C1FBC48()
{
  unint64_t result;

  result = qword_25524A310;
  if (!qword_25524A310)
  {
    result = MEMORY[0x22077702C](&unk_21C24C820, &type metadata for RegistryPreflightEntryPoint);
    atomic_store(result, (unint64_t *)&qword_25524A310);
  }
  return result;
}

unint64_t sub_21C1FBC8C()
{
  unint64_t result;

  result = qword_25524A318;
  if (!qword_25524A318)
  {
    result = MEMORY[0x22077702C](&unk_21C24AEE0, &type metadata for PreviewPreflightEntryPoint);
    atomic_store(result, (unint64_t *)&qword_25524A318);
  }
  return result;
}

unint64_t sub_21C1FBCD0()
{
  unint64_t result;

  result = qword_25524A320;
  if (!qword_25524A320)
  {
    result = MEMORY[0x22077702C](&unk_21C24C9F0, &type metadata for PreviewProviderEntryPoint);
    atomic_store(result, (unint64_t *)&qword_25524A320);
  }
  return result;
}

uint64_t sub_21C1FBD14(unint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = a2(255);
    result = MEMORY[0x22077702C](a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_21C1FBD58(uint64_t a1, uint64_t a2, char a3)
{
  unint64_t v4;

  if ((a3 & 1) != 0)
  {
    sub_21C24881C();
    swift_bridgeObjectRelease();
    v4 = 0xD000000000000023;
  }
  else
  {
    sub_21C24881C();
    swift_bridgeObjectRelease();
    v4 = 0xD000000000000019;
  }
  sub_21C248504();
  return v4;
}

unint64_t sub_21C1FBE10()
{
  uint64_t v0;

  return sub_21C1FBD58(*(_QWORD *)v0, *(_QWORD *)(v0 + 8), *(_BYTE *)(v0 + 16));
}

uint64_t sub_21C1FBE1C()
{
  return 0;
}

uint64_t sub_21C1FBE3C()
{
  return 0;
}

uint64_t sub_21C1FBE50()
{
  sub_21C1FC1D0();
  return sub_21C24794C();
}

uint64_t sub_21C1FBE84()
{
  sub_21C1FC1D0();
  return sub_21C24791C();
}

id sub_21C1FBEBC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  void *v8;
  id v9;
  id v10;
  uint64_t v11;
  id v12;
  void *v13;
  id v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  _QWORD v22[3];
  char v23;
  id v24[3];
  uint64_t v25;
  uint64_t v26;

  v26 = *MEMORY[0x24BDAC8D0];
  v0 = sub_21C246D28();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)v22 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21C246CC8();
  v4 = sub_21C246D1C();
  v6 = v5;
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  v7 = objc_allocWithZone(MEMORY[0x24BDD1488]);
  swift_bridgeObjectRetain();
  v8 = (void *)sub_21C24848C();
  swift_bridgeObjectRelease();
  v9 = objc_msgSend(v7, sel_initWithPath_, v8);

  if (v9)
  {
    v24[0] = 0;
    if ((objc_msgSend(v9, sel_loadAndReturnError_, v24) & 1) != 0)
    {
      v10 = v24[0];
      swift_bridgeObjectRelease();
    }
    else
    {
      v12 = v24[0];
      v13 = (void *)sub_21C246CA4();

      swift_willThrow();
      v22[1] = v4;
      v22[2] = v6;
      v23 = 1;
      v14 = v13;
      sub_21C1FC1D0();
      sub_21C247940();

      swift_bridgeObjectRelease();
      v15 = v25;
      v16 = __swift_project_boxed_opaque_existential_1(v24, v25);
      v17 = *(_QWORD *)(v15 - 8);
      MEMORY[0x24BDAC7A8](v16);
      v19 = (char *)v22 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *))(v17 + 16))(v19);
      if (sub_21C248900())
      {
        (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v15);
      }
      else
      {
        swift_allocError();
        (*(void (**)(uint64_t, char *, uint64_t))(v17 + 32))(v20, v19, v15);
      }
      swift_willThrow();

      __swift_destroy_boxed_opaque_existential_1((uint64_t)v24);
    }
  }
  else
  {
    sub_21C1FC18C();
    swift_allocError();
    *(_QWORD *)v11 = v4;
    *(_QWORD *)(v11 + 8) = v6;
    *(_BYTE *)(v11 + 16) = 0;
    swift_willThrow();
  }
  return v9;
}

unint64_t sub_21C1FC18C()
{
  unint64_t result;

  result = qword_25524A338;
  if (!qword_25524A338)
  {
    result = MEMORY[0x22077702C](&unk_21C249B64, &type metadata for LoadError);
    atomic_store(result, (unint64_t *)&qword_25524A338);
  }
  return result;
}

unint64_t sub_21C1FC1D0()
{
  unint64_t result;

  result = qword_25524A340;
  if (!qword_25524A340)
  {
    result = MEMORY[0x22077702C](&unk_21C249ACC, &type metadata for LoadError);
    atomic_store(result, (unint64_t *)&qword_25524A340);
  }
  return result;
}

uint64_t sub_21C1FC218()
{
  return swift_bridgeObjectRetain();
}

uint64_t destroy for LoadError()
{
  return sub_21C1FC230();
}

uint64_t sub_21C1FC230()
{
  return swift_bridgeObjectRelease();
}

uint64_t _s17PreviewsInjection9LoadErrorOwCP_0(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;

  v3 = *a2;
  v4 = a2[1];
  v5 = *((_BYTE *)a2 + 16);
  sub_21C1FC218();
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for LoadError(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;

  v3 = *a2;
  v4 = a2[1];
  v5 = *((_BYTE *)a2 + 16);
  sub_21C1FC218();
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  sub_21C1FC230();
  return a1;
}

__n128 __swift_memcpy17_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for LoadError(uint64_t a1, uint64_t a2)
{
  char v3;

  v3 = *(_BYTE *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = v3;
  sub_21C1FC230();
  return a1;
}

uint64_t getEnumTagSinglePayload for LoadError(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 17))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 1)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for LoadError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 255;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_BYTE *)(result + 16) = -(char)a2;
  }
  return result;
}

uint64_t sub_21C1FC3B8(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 16);
}

uint64_t sub_21C1FC3C0(uint64_t result, char a2)
{
  *(_BYTE *)(result + 16) = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for LoadError()
{
  return &type metadata for LoadError;
}

unint64_t sub_21C1FC3E4()
{
  unint64_t result;

  result = qword_25524A348;
  if (!qword_25524A348)
  {
    result = MEMORY[0x22077702C](&unk_21C249A84, &type metadata for LoadError);
    atomic_store(result, (unint64_t *)&qword_25524A348);
  }
  return result;
}

unint64_t sub_21C1FC42C()
{
  unint64_t result;

  result = qword_25524A350;
  if (!qword_25524A350)
  {
    result = MEMORY[0x22077702C](&unk_21C249A5C, &type metadata for LoadError);
    atomic_store(result, (unint64_t *)&qword_25524A350);
  }
  return result;
}

uint64_t sub_21C1FC470(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  v3[5] = type metadata accessor for EntryPointIndex.PendingShellResource(0);
  v3[6] = swift_task_alloc();
  v4 = sub_21C247304();
  v3[7] = v4;
  v3[8] = *(_QWORD *)(v4 - 8);
  v3[9] = swift_task_alloc();
  v5 = sub_21C2470D0();
  v3[10] = v5;
  v3[11] = *(_QWORD *)(v5 - 8);
  v3[12] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_21C1FC520()
{
  _QWORD *v0;

  (*(void (**)(_QWORD, _QWORD, _QWORD))(v0[8] + 16))(v0[9], v0[2], v0[7]);
  sub_21C2470A0();
  return swift_task_switch();
}

uint64_t sub_21C1FC588()
{
  uint64_t *v0;
  _QWORD *v1;

  (*(void (**)(uint64_t, uint64_t, uint64_t))(v0[11] + 16))(v0[6], v0[12], v0[10]);
  swift_storeEnumTagMultiPayload();
  v1 = (_QWORD *)swift_task_alloc();
  v0[13] = (uint64_t)v1;
  *v1 = v0;
  v1[1] = sub_21C1FC600;
  return sub_21C2373FC(v0[6], v0[3]);
}

uint64_t sub_21C1FC600()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 48);
  swift_task_dealloc();
  sub_21C1FCA8C(v1);
  return swift_task_switch();
}

uint64_t sub_21C1FC660()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 88) + 8))(*(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 80));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21C1FC6C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;

  v5[3] = a4;
  v5[4] = a5;
  v6 = sub_21C247CC4();
  v5[5] = v6;
  v5[6] = *(_QWORD *)(v6 - 8);
  v5[7] = swift_task_alloc();
  v7 = sub_21C2478C8();
  v5[8] = v7;
  v5[9] = *(_QWORD *)(v7 - 8);
  v5[10] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_21C1FC748()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 88) = v1;
  *v1 = v0;
  v1[1] = sub_21C1FC7A0;
  return sub_21C246F98();
}

uint64_t sub_21C1FC7A0()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 96) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_21C1FC820()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  void *v6;
  uint8_t *v7;
  _QWORD *v8;
  id v9;
  uint64_t v10;
  void *v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;

  v1 = *(void **)(v0 + 96);
  sub_21C247CA0();
  v2 = v1;
  v3 = v1;
  v4 = sub_21C247CB8();
  v5 = sub_21C248720();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = *(void **)(v0 + 96);
    v7 = (uint8_t *)swift_slowAlloc();
    v8 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v7 = 138412290;
    v9 = v6;
    v10 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 16) = v10;
    sub_21C2487A4();
    *v8 = v10;

    _os_log_impl(&dword_21C1E3000, v4, v5, "Failed to attach transport to message pipe: %@", v7, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25524B630);
    swift_arrayDestroy();
    MEMORY[0x2207770EC](v8, -1, -1);
    MEMORY[0x2207770EC](v7, -1, -1);
  }
  else
  {
    v11 = *(void **)(v0 + 96);

  }
  v12 = *(void **)(v0 + 96);
  v14 = *(_QWORD *)(v0 + 72);
  v13 = *(_QWORD *)(v0 + 80);
  v15 = *(_QWORD *)(v0 + 64);
  v16 = *(_QWORD **)(v0 + 32);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 48) + 8))(*(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 40));
  __swift_project_boxed_opaque_existential_1(v16, v16[3]);
  sub_21C2478BC();
  sub_21C2478B0();

  (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v13, v15);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21C1FCA48()
{
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ShellMessagePipeAgent()
{
  return objc_opt_self();
}

uint64_t sub_21C1FCA8C(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for EntryPointIndex.PendingShellResource(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_21C1FCAC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5[2] = a4;
  v5[3] = a5;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_25524A508);
  v5[4] = v6;
  v5[5] = *(_QWORD *)(v6 - 8);
  v5[6] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25524A510);
  v5[7] = swift_task_alloc();
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_25524A518);
  v5[8] = v7;
  v5[9] = *(_QWORD *)(v7 - 8);
  v5[10] = swift_task_alloc();
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_25524A520);
  v5[11] = v8;
  v5[12] = *(_QWORD *)(v8 - 8);
  v5[13] = swift_task_alloc();
  v5[14] = sub_21C24863C();
  v5[15] = sub_21C248630();
  v5[16] = sub_21C2485E8();
  v5[17] = v9;
  return swift_task_switch();
}

uint64_t sub_21C1FCBE0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v2 = v0[9];
  v1 = v0[10];
  v3 = v0[8];
  sub_21C2477C0();
  sub_21C1FBD14(&qword_25524A528, (uint64_t (*)(uint64_t))MEMORY[0x24BE78560], MEMORY[0x24BE78528]);
  sub_21C246E54();
  sub_21C248678();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  v0[18] = sub_21C248630();
  v4 = (_QWORD *)swift_task_alloc();
  v0[19] = v4;
  *v4 = v0;
  v4[1] = sub_21C1FCCD0;
  return sub_21C248684();
}

uint64_t sub_21C1FCCD0()
{
  swift_task_dealloc();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_21C1FCD24()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v3;

  v1 = *(_QWORD *)(v0 + 56);
  if ((*(unsigned int (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 40) + 48))(v1, 1, *(_QWORD *)(v0 + 32)) == 1)
  {
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 96) + 8))(*(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 88));
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    sub_21C1FFC70(v1, *(_QWORD *)(v0 + 48), &qword_25524A508);
    v3 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 160) = v3;
    *v3 = v0;
    v3[1] = sub_21C1FCE18;
    return sub_21C1FCEE8(*(_QWORD *)(v0 + 48));
  }
}

uint64_t sub_21C1FCE18()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_21C1FCE64()
{
  uint64_t *v0;
  _QWORD *v1;

  sub_21C1F03B0(v0[6], &qword_25524A508);
  v0[18] = sub_21C248630();
  v1 = (_QWORD *)swift_task_alloc();
  v0[19] = (uint64_t)v1;
  *v1 = v0;
  v1[1] = sub_21C1FCCD0;
  return sub_21C248684();
}

uint64_t sub_21C1FCEE8(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2[2] = a1;
  v2[3] = v1;
  v2[4] = type metadata accessor for EntryPointIndex.PendingShellResource(0);
  v2[5] = swift_task_alloc();
  v3 = sub_21C247880();
  v2[6] = v3;
  v2[7] = *(_QWORD *)(v3 - 8);
  v2[8] = swift_task_alloc();
  v4 = sub_21C2472E0();
  v2[9] = v4;
  v2[10] = *(_QWORD *)(v4 - 8);
  v2[11] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25524B930);
  v2[12] = swift_task_alloc();
  v5 = sub_21C247718();
  v2[13] = v5;
  v2[14] = *(_QWORD *)(v5 - 8);
  v2[15] = swift_task_alloc();
  v6 = sub_21C2471CC();
  v2[16] = v6;
  v2[17] = *(_QWORD *)(v6 - 8);
  v2[18] = swift_task_alloc();
  v7 = sub_21C247634();
  v2[19] = v7;
  v2[20] = *(_QWORD *)(v7 - 8);
  v2[21] = swift_task_alloc();
  v2[22] = __swift_instantiateConcreteTypeFromMangledName(&qword_25524A508);
  v2[23] = swift_task_alloc();
  v2[24] = sub_21C24863C();
  v2[25] = sub_21C248630();
  v2[26] = sub_21C2485E8();
  v2[27] = v8;
  return swift_task_switch();
}

uint64_t sub_21C1FD090()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  int EnumCaseMultiPayload;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v1 = v0[23];
  v2 = v0[2];
  sub_21C248630();
  sub_21C2485F4();
  swift_release();
  sub_21C1F03EC(v2, v1, &qword_25524A508);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    v8 = (_QWORD *)v0[23];
    v9 = v0[17];
    v29 = v0[16];
    v30 = v0[18];
    v10 = v0[10];
    v11 = v0[11];
    v12 = v0[9];
    v13 = v0[7];
    v31 = v0[6];
    v33 = v0[8];
    v0[31] = *v8;
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_25524A538);
    v15 = (char *)v8 + *(int *)(v14 + 48);
    v16 = (char *)v8 + *(int *)(v14 + 64);
    v17 = &v15[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25524A540) + 48)];
    (*(void (**)(uint64_t, char *, uint64_t))(v10 + 32))(v11, v15, v12);
    (*(void (**)(uint64_t, char *, uint64_t))(v9 + 32))(v30, v16, v29);
    (*(void (**)(uint64_t, char *, uint64_t))(v13 + 32))(v33, v17, v31);
    v0[32] = sub_21C248630();
    v0[33] = sub_21C2485E8();
    v0[34] = v18;
    return swift_task_switch();
  }
  else if (EnumCaseMultiPayload == 1)
  {
    v4 = v0[23];
    v5 = v4 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25524A550) + 48);
    v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_25524A558);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 48))(v4, 1, v6) == 1)
    {
      (*(void (**)(_QWORD, uint64_t, _QWORD))(v0[17] + 32))(v0[18], v5, v0[16]);
      v7 = (_QWORD *)swift_task_alloc();
      v0[30] = v7;
      *v7 = v0;
      v7[1] = sub_21C1FD540;
    }
    else
    {
      v20 = v0[21];
      v21 = v0[18];
      v22 = v0[16];
      v23 = v0[17];
      v25 = v0[14];
      v24 = v0[15];
      v32 = v0[13];
      v34 = v0[3];
      v26 = v4 + *(int *)(v6 + 48);
      (*(void (**)(uint64_t, uint64_t, _QWORD))(v0[20] + 32))(v20, v4, v0[19]);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v23 + 32))(v21, v5, v22);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v25 + 32))(v24, v26, v32);
      v27 = (_QWORD *)swift_task_alloc();
      v0[28] = v27;
      v27[2] = v34;
      v27[3] = v20;
      v27[4] = v24;
      v28 = (_QWORD *)swift_task_alloc();
      v0[29] = v28;
      *v28 = v0;
      v28[1] = sub_21C1FD3B0;
    }
    return sub_21C2489D8();
  }
  else
  {
    return sub_21C248918();
  }
}

uint64_t sub_21C1FD3B0()
{
  swift_task_dealloc();
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_21C1FD404()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = *(_QWORD *)(v0 + 136);
  v1 = *(_QWORD *)(v0 + 144);
  v4 = *(_QWORD *)(v0 + 120);
  v3 = *(_QWORD *)(v0 + 128);
  v5 = *(_QWORD *)(v0 + 104);
  v6 = *(_QWORD *)(v0 + 112);
  v7 = *(_QWORD *)(v0 + 96);
  swift_release();
  sub_21C2471A8();
  sub_21C1F03B0(v7, &qword_25524B930);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 160) + 8))(*(_QWORD *)(v0 + 168), *(_QWORD *)(v0 + 152));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21C1FD540()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_21C1FD58C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 96);
  swift_release();
  sub_21C2471A8();
  sub_21C1F03B0(v1, &qword_25524B930);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 136) + 8))(*(_QWORD *)(v0 + 144), *(_QWORD *)(v0 + 128));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21C1FD6A0()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 280) = *(_QWORD *)(*(_QWORD *)(v0 + 24) + 48);
  return swift_task_switch();
}

uint64_t sub_21C1FD6BC()
{
  uint64_t *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  char *v6;
  id v7;
  _QWORD *v8;

  v1 = (void *)v0[31];
  v3 = v0[7];
  v2 = v0[8];
  v5 = (_QWORD *)v0[5];
  v4 = v0[6];
  v6 = (char *)v5 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25524A548) + 48);
  *v5 = v1;
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v6, v2, v4);
  swift_storeEnumTagMultiPayload();
  v7 = v1;
  v8 = (_QWORD *)swift_task_alloc();
  v0[36] = (uint64_t)v8;
  *v8 = v0;
  v8[1] = sub_21C1FD770;
  return sub_21C2373FC(v0[5], v0[11]);
}

uint64_t sub_21C1FD770()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 40);
  swift_task_dealloc();
  sub_21C1E71CC(v1, type metadata accessor for EntryPointIndex.PendingShellResource);
  return swift_task_switch();
}

uint64_t sub_21C1FD7D0()
{
  swift_release();
  return swift_task_switch();
}

uint64_t sub_21C1FD808()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = *(void **)(v0 + 248);
  v3 = *(_QWORD *)(v0 + 136);
  v2 = *(_QWORD *)(v0 + 144);
  v4 = *(_QWORD *)(v0 + 128);
  v6 = *(_QWORD *)(v0 + 56);
  v5 = *(_QWORD *)(v0 + 64);
  v7 = *(_QWORD *)(v0 + 48);
  swift_release();
  sub_21C24719C();

  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 80) + 8))(*(_QWORD *)(v0 + 88), *(_QWORD *)(v0 + 72));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21C1FD920(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  _QWORD *v8;

  v4[2] = sub_21C24863C();
  v4[3] = sub_21C248630();
  v8 = (_QWORD *)swift_task_alloc();
  v4[4] = v8;
  *v8 = v4;
  v8[1] = sub_21C1FD9B0;
  return sub_21C1FDA38(a1, a3, a4);
}

uint64_t sub_21C1FD9B0()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 40) = v0;
  swift_task_dealloc();
  sub_21C2485E8();
  return swift_task_switch();
}

uint64_t sub_21C1FDA38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v4[23] = a3;
  v4[24] = v3;
  v4[21] = a1;
  v4[22] = a2;
  v4[25] = sub_21C247724();
  v4[26] = swift_task_alloc();
  sub_21C246EF0();
  v4[27] = swift_task_alloc();
  v5 = sub_21C246F38();
  v4[28] = v5;
  v4[29] = *(_QWORD *)(v5 - 8);
  v4[30] = swift_task_alloc();
  v6 = sub_21C247784();
  v4[31] = v6;
  v4[32] = *(_QWORD *)(v6 - 8);
  v4[33] = swift_task_alloc();
  v7 = sub_21C246F08();
  v4[34] = v7;
  v4[35] = *(_QWORD *)(v7 - 8);
  v4[36] = swift_task_alloc();
  v4[37] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25524A588);
  v4[38] = swift_task_alloc();
  v8 = sub_21C247670();
  v4[39] = v8;
  v4[40] = *(_QWORD *)(v8 - 8);
  v4[41] = swift_task_alloc();
  v9 = __swift_instantiateConcreteTypeFromMangledName(qword_25524A450);
  v4[42] = v9;
  v4[43] = *(_QWORD *)(v9 - 8);
  v4[44] = swift_task_alloc();
  v10 = sub_21C247808();
  v4[45] = v10;
  v4[46] = *(_QWORD *)(v10 - 8);
  v4[47] = swift_task_alloc();
  v11 = sub_21C247880();
  v4[48] = v11;
  v4[49] = *(_QWORD *)(v11 - 8);
  v4[50] = swift_task_alloc();
  v4[51] = swift_task_alloc();
  v4[52] = __swift_instantiateConcreteTypeFromMangledName(&qword_25524A590);
  v4[53] = swift_task_alloc();
  v12 = sub_21C247634();
  v4[54] = v12;
  v4[55] = *(_QWORD *)(v12 - 8);
  v4[56] = swift_task_alloc();
  v4[57] = swift_task_alloc();
  v13 = sub_21C247CC4();
  v4[58] = v13;
  v4[59] = *(_QWORD *)(v13 - 8);
  v4[60] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25524A598);
  v4[61] = swift_task_alloc();
  v14 = sub_21C24761C();
  v4[62] = v14;
  v4[63] = *(_QWORD *)(v14 - 8);
  v4[64] = swift_task_alloc();
  v4[65] = swift_task_alloc();
  sub_21C24863C();
  v4[66] = sub_21C248630();
  v4[67] = sub_21C2485E8();
  v4[68] = v15;
  return swift_task_switch();
}

uint64_t sub_21C1FDD34()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t, uint64_t);
  _QWORD *v5;

  v1 = v0[65];
  v2 = v0[62];
  v3 = v0[63];
  sub_21C247628();
  sub_21C247610();
  v4 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  v0[69] = (uint64_t)v4;
  v4(v1, v2);
  v5 = (_QWORD *)swift_task_alloc();
  v0[70] = (uint64_t)v5;
  *v5 = v0;
  v5[1] = sub_21C1FDDD4;
  return sub_21C206EE4(v0[61]);
}

uint64_t sub_21C1FDDD4()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(*v1 + 568) = v0;
  swift_task_dealloc();
  sub_21C1F03B0(*(_QWORD *)(v2 + 488), &qword_25524A598);
  return swift_task_switch();
}

uint64_t sub_21C1FDE48()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 576) = v1;
  *v1 = v0;
  v1[1] = sub_21C1FDEA4;
  return sub_21C234BCC(v0 + 16, *(_QWORD *)(v0 + 176));
}

uint64_t sub_21C1FDEA4()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 584) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_21C1FDF08()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  NSObject *v8;
  os_log_type_t v9;
  void (*v10)(uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(uint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v36;
  void (*v37)(uint64_t, uint64_t);
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  os_log_type_t type;
  uint64_t v43;
  NSObject *log;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;

  v1 = v0 + 2;
  v3 = v0[56];
  v2 = v0[57];
  v4 = v0[54];
  v5 = v0[55];
  v6 = v0[22];
  sub_21C247CA0();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
  v7(v2, v6, v4);
  sub_21C1E712C((uint64_t)(v0 + 2), (uint64_t)(v0 + 7));
  v7(v3, v6, v4);
  v8 = sub_21C247CB8();
  v9 = sub_21C248738();
  if (os_log_type_enabled(v8, v9))
  {
    v10 = (void (*)(uint64_t, uint64_t))v0[69];
    v11 = v0[64];
    v12 = v0[62];
    log = v8;
    v45 = v0[59];
    v13 = v0[57];
    v46 = v0[58];
    v47 = v0[60];
    v39 = v0[56];
    v36 = v0[55];
    v14 = v0[53];
    v48 = v0[54];
    v38 = v0[51];
    v40 = v0[48];
    v41 = v0[49];
    v15 = swift_slowAlloc();
    v43 = swift_slowAlloc();
    v49 = v43;
    *(_DWORD *)v15 = 136315650;
    type = v9;
    sub_21C247628();
    sub_21C247604();
    v10(v11, v12);
    v16 = sub_21C24878C();
    v18 = v17;
    sub_21C1F03B0(v14, &qword_25524A590);
    v0[18] = sub_21C203A90(v16, v18, &v49);
    sub_21C2487A4();
    swift_bridgeObjectRelease();
    v37 = *(void (**)(uint64_t, uint64_t))(v36 + 8);
    v37(v13, v48);
    *(_WORD *)(v15 + 12) = 2082;
    __swift_project_boxed_opaque_existential_1(v0 + 7, v0[10]);
    v19 = sub_21C204B40();
    v0[19] = sub_21C203A90(v19, v20, &v49);
    sub_21C2487A4();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 7));
    *(_WORD *)(v15 + 22) = 2080;
    sub_21C2475D4();
    sub_21C1FBD14(&qword_25524A5A0, (uint64_t (*)(uint64_t))MEMORY[0x24BE76530], MEMORY[0x24BE76540]);
    v21 = sub_21C2488F4();
    v23 = v22;
    (*(void (**)(uint64_t, uint64_t))(v41 + 8))(v38, v40);
    v0[20] = sub_21C203A90(v21, v23, &v49);
    sub_21C2487A4();
    swift_bridgeObjectRelease();
    v37(v39, v48);
    _os_log_impl(&dword_21C1E3000, log, type, "Performing update #%s\n  - Entry point = %{public}s\n  - Payload = %s", (uint8_t *)v15, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x2207770EC](v43, -1, -1);
    v24 = v15;
    v1 = v0 + 2;
    MEMORY[0x2207770EC](v24, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v45 + 8))(v47, v46);
  }
  else
  {
    v26 = v0[59];
    v25 = v0[60];
    v27 = v0[58];
    v28 = v0[56];
    v29 = v0[54];
    v30 = *(void (**)(uint64_t, uint64_t))(v0[55] + 8);
    v30(v0[57], v29);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 7));
    v30(v28, v29);

    (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v25, v27);
  }
  v31 = v0[24];
  v32 = v0[5];
  v33 = v0[6];
  __swift_project_boxed_opaque_existential_1(v1, v32);
  sub_21C2475D4();
  v34 = (_QWORD *)swift_task_alloc();
  v0[74] = v34;
  *v34 = v0;
  v34[1] = sub_21C1FE30C;
  return sub_21C217518(v0[47], v0[50], v31 + 40, v32, v33);
}

uint64_t sub_21C1FE30C()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = *(_QWORD **)v1;
  *(_QWORD *)(*(_QWORD *)v1 + 600) = v0;
  swift_task_dealloc();
  (*(void (**)(_QWORD, _QWORD))(v2[49] + 8))(v2[50], v2[48]);
  return swift_task_switch();
}

uint64_t sub_21C1FE380()
{
  _QWORD *v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(void);
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  id v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void (*v49)(uint64_t, uint64_t);
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;

  v1 = v0[75];
  v2 = (char *)v0[44];
  v3 = v0[41];
  v4 = v0[24];
  swift_release();
  v5 = v0[5];
  v6 = v0[6];
  v57 = (uint64_t)(v0 + 2);
  __swift_project_boxed_opaque_existential_1(v0 + 2, v5);
  sub_21C2476F4();
  v7 = *(_QWORD *)(v4 + 16);
  sub_21C217AF0(v3, v7, v5, v6, v2);
  if (!v1)
  {
    v12 = v0[24];
    (*(void (**)(_QWORD, _QWORD))(v0[40] + 8))(v0[41], v0[39]);
    v13 = *(void **)(v12 + 24);
    if (v13)
      objc_msgSend(v13, sel_setRootViewController_, *(_QWORD *)v0[44]);
    v14 = v0[43];
    v15 = v0[42];
    v17 = v0[37];
    v16 = v0[38];
    v18 = v0[35];
    v55 = v0[34];
    v19 = v0[24];
    sub_21C1F03EC(v0[44], v16, qword_25524A450);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v14 + 56))(v16, 0, 1, v15);
    v20 = v19 + OBJC_IVAR____TtC17PreviewsInjection17PreviewSceneAgent_currentUpdateResult;
    swift_beginAccess();
    sub_21C1FFBE4(v16, v20);
    swift_endAccess();
    sub_21C24770C();
    v21 = (*(uint64_t (**)(uint64_t, uint64_t))(v18 + 88))(v17, v55);
    if (v21 == *MEMORY[0x24BE787B0])
    {
      v51 = v0[42];
      v52 = v0[44];
      v22 = v0[33];
      v53 = v0[32];
      v23 = v0[30];
      v56 = v0[31];
      v24 = v0[29];
      v50 = v0[28];
      v25 = v0[26];
      v26 = (void *)objc_opt_self();
      swift_beginAccess();
      v27 = objc_msgSend(v26, sel_createForScene_, *(_QWORD *)(v7 + 16));
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v24 + 16))(v23, v52 + *(int *)(v51 + 36), v50);
      sub_21C247700();
      v28 = v27;
      sub_21C247778();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v53 + 16))(v25, v22, v56);
      swift_storeEnumTagMultiPayload();
      sub_21C246EE4();
      sub_21C1E71CC(v25, (uint64_t (*)(_QWORD))MEMORY[0x24BE78448]);
      objc_msgSend(v28, sel_invalidate);

    }
    else
    {
      if (v21 != *MEMORY[0x24BE787A8])
      {
        v43 = v0[46];
        v42 = v0[47];
        v45 = v0[44];
        v44 = v0[45];
        v46 = v0[36];
        v54 = v0[37];
        v47 = v0[34];
        v48 = v0[35];
        sub_21C24770C();
        sub_21C246EFC();
        v49 = *(void (**)(uint64_t, uint64_t))(v48 + 8);
        v49(v46, v47);
        swift_willThrow();
        sub_21C1F03B0(v45, qword_25524A450);
        (*(void (**)(uint64_t, uint64_t))(v43 + 8))(v42, v44);
        v49(v54, v47);
        goto LABEL_3;
      }
      v30 = v0[32];
      v29 = v0[33];
      v31 = v0[31];
      v32 = v0[26];
      (*(void (**)(_QWORD, _QWORD, _QWORD))(v0[29] + 16))(v0[30], v0[44] + *(int *)(v0[42] + 36), v0[28]);
      sub_21C247700();
      sub_21C247778();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v30 + 16))(v32, v29, v31);
      swift_storeEnumTagMultiPayload();
      sub_21C246EE4();
      sub_21C1E71CC(v32, (uint64_t (*)(_QWORD))MEMORY[0x24BE78448]);
    }
    v33 = v0[49];
    v35 = v0[47];
    v34 = v0[48];
    v37 = v0[45];
    v36 = v0[46];
    v38 = v0[44];
    v39 = v0[42];
    v40 = v0[21];
    (*(void (**)(_QWORD, _QWORD))(v0[32] + 8))(v0[33], v0[31]);
    (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v35, v37);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v33 + 16))(v40, v38 + *(int *)(v39 + 40), v34);
    sub_21C1F03B0(v38, qword_25524A450);
    __swift_destroy_boxed_opaque_existential_1(v57);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    v11 = (uint64_t (*)(void))v0[1];
    return v11();
  }
  v9 = v0[46];
  v8 = v0[47];
  v10 = v0[45];
  (*(void (**)(_QWORD, _QWORD))(v0[40] + 8))(v0[41], v0[39]);
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v10);
LABEL_3:
  __swift_destroy_boxed_opaque_existential_1(v57);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  v11 = (uint64_t (*)(void))v0[1];
  return v11();
}

uint64_t sub_21C1FE9CC()
{
  uint64_t v0;

  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21C1FEB10()
{
  uint64_t v0;

  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21C1FEC54()
{
  uint64_t v0;

  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21C1FEDA4(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v3;

  v1[2] = sub_21C24863C();
  v1[3] = sub_21C248630();
  v3 = (_QWORD *)swift_task_alloc();
  v1[4] = v3;
  *v3 = v1;
  v3[1] = sub_21C1E9480;
  return sub_21C1FEE1C(a1);
}

uint64_t sub_21C1FEE1C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v2[5] = a1;
  v2[6] = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25524A588);
  v2[7] = swift_task_alloc();
  v3 = __swift_instantiateConcreteTypeFromMangledName(qword_25524A450);
  v2[8] = v3;
  v2[9] = *(_QWORD *)(v3 - 8);
  v2[10] = swift_task_alloc();
  sub_21C24863C();
  v2[11] = sub_21C248630();
  v2[12] = sub_21C2485E8();
  v2[13] = v4;
  return swift_task_switch();
}

uint64_t sub_21C1FEED8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  int **v9;
  int *v10;
  _QWORD *v11;
  uint64_t (*v12)(_QWORD);

  v1 = *(_QWORD *)(v0 + 64);
  v2 = *(_QWORD *)(v0 + 72);
  v3 = *(_QWORD *)(v0 + 56);
  v4 = *(_QWORD *)(v0 + 48) + OBJC_IVAR____TtC17PreviewsInjection17PreviewSceneAgent_currentUpdateResult;
  swift_beginAccess();
  sub_21C1F03EC(v4, v3, &qword_25524A588);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    v5 = *(_QWORD *)(v0 + 56);
    swift_release();
    sub_21C1F03B0(v5, &qword_25524A588);
    sub_21C1FFC2C();
    swift_allocError();
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v7 = *(_QWORD *)(v0 + 80);
    v8 = *(_QWORD *)(v0 + 64);
    sub_21C1FFC70(*(_QWORD *)(v0 + 56), v7, qword_25524A450);
    v9 = (int **)(v7 + *(int *)(v8 + 44));
    v10 = *v9;
    *(_QWORD *)(v0 + 112) = v9[1];
    v12 = (uint64_t (*)(_QWORD))((char *)v10 + *v10);
    swift_retain();
    v11 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 120) = v11;
    *v11 = v0;
    v11[1] = sub_21C1FF040;
    return v12(*(_QWORD *)(v0 + 40));
  }
}

uint64_t sub_21C1FF040()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 128) = v0;
  swift_task_dealloc();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_21C1FF0A8()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 80);
  swift_release();
  sub_21C1F03B0(v1, qword_25524A450);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21C1FF100()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 80);
  swift_release();
  sub_21C1F03B0(v1, qword_25524A450);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

unint64_t sub_21C1FF158()
{
  return 0xD000000000000015;
}

unint64_t sub_21C1FF174()
{
  return 0xD000000000000044;
}

uint64_t sub_21C1FF190()
{
  sub_21C200270();
  return sub_21C24794C();
}

uint64_t sub_21C1FF1B8()
{
  sub_21C200270();
  return sub_21C24791C();
}

uint64_t sub_21C1FF1E0()
{
  uint64_t v0;

  swift_release();

  swift_release();
  sub_21C1FFAF0(v0 + 40);
  sub_21C1F03B0(v0 + OBJC_IVAR____TtC17PreviewsInjection17PreviewSceneAgent_currentUpdateResult, &qword_25524A588);
  return swift_deallocClassInstance();
}

uint64_t sub_21C1FF238()
{
  return type metadata accessor for PreviewSceneAgent();
}

uint64_t type metadata accessor for PreviewSceneAgent()
{
  uint64_t result;

  result = qword_25524A438;
  if (!qword_25524A438)
    return swift_getSingletonMetadata();
  return result;
}

void sub_21C1FF27C()
{
  unint64_t v0;

  sub_21C1FF30C();
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

void sub_21C1FF30C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25524A448)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_25524A450);
    v0 = sub_21C248798();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25524A448);
  }
}

void **initializeBufferWithCopyOfBuffer for PreviewSceneAgent.SceneBehavior(void **a1, void **a2)
{
  void *v3;
  id v4;

  v3 = *a2;
  *a1 = *a2;
  v4 = v3;
  return a1;
}

void destroy for PreviewSceneAgent.SceneBehavior(id *a1)
{

}

void **assignWithCopy for PreviewSceneAgent.SceneBehavior(void **a1, void **a2)
{
  void *v3;
  void *v4;
  id v5;

  v3 = *a2;
  v4 = *a1;
  *a1 = *a2;
  v5 = v3;

  return a1;
}

_QWORD *__swift_memcpy8_8(_QWORD *result, _QWORD *a2)
{
  *result = *a2;
  return result;
}

void **assignWithTake for PreviewSceneAgent.SceneBehavior(void **a1, void **a2)
{
  void *v3;

  v3 = *a1;
  *a1 = *a2;

  return a1;
}

uint64_t getEnumTagSinglePayload for PreviewSceneAgent.SceneBehavior(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *((_BYTE *)a1 + 8))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  if ((v3 + 1) >= 2)
    return v3;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for PreviewSceneAgent.SceneBehavior(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)result = 0;
    *(_DWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 8) = 0;
    if (a2)
      *(_QWORD *)result = a2;
  }
  return result;
}

uint64_t sub_21C1FF4AC(uint64_t *a1)
{
  uint64_t v1;

  v1 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  return (v1 + 1);
}

_QWORD *sub_21C1FF4C4(_QWORD *result, int a2)
{
  unsigned int v2;

  if (a2 < 0)
  {
    v2 = a2 ^ 0x80000000;
  }
  else
  {
    if (!a2)
      return result;
    v2 = a2 - 1;
  }
  *result = v2;
  return result;
}

ValueMetadata *type metadata accessor for PreviewSceneAgent.SceneBehavior()
{
  return &type metadata for PreviewSceneAgent.SceneBehavior;
}

uint64_t sub_21C1FF4F4()
{
  return 0;
}

_QWORD *sub_21C1FF500(void *a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  id v16;
  NSObject *v17;
  os_log_type_t v18;
  int v19;
  uint8_t *v20;
  id v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint8_t *v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  id v32;
  char v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v41;
  uint8_t *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  int v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;

  v4 = v3;
  v48 = a3;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_255249D88);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_21C247CC4();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v41 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = (char *)v4 + OBJC_IVAR____TtC17PreviewsInjection17PreviewSceneAgent_currentUpdateResult;
  v15 = __swift_instantiateConcreteTypeFromMangledName(qword_25524A450);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v14, 1, 1, v15);
  sub_21C247CA0();
  v16 = a1;
  v17 = sub_21C247CB8();
  v18 = sub_21C248714();
  v19 = v18;
  if (os_log_type_enabled(v17, v18))
  {
    v46 = v19;
    v20 = (uint8_t *)swift_slowAlloc();
    v43 = swift_slowAlloc();
    v50 = v43;
    v47 = v9;
    *(_DWORD *)v20 = 136446210;
    v42 = v20;
    v21 = objc_msgSend(v16, sel_previewSceneIdentifier, v20 + 4);
    v45 = v11;
    v22 = a2;
    v23 = v21;
    v24 = sub_21C248498();
    v44 = v10;
    v25 = v24;
    v27 = v26;

    a2 = v22;
    v49 = sub_21C203A90(v25, v27, &v50);
    v9 = v47;
    sub_21C2487A4();

    swift_bridgeObjectRelease();
    v28 = v42;
    _os_log_impl(&dword_21C1E3000, v17, (os_log_type_t)v46, "PreviewSceneAgent init for %{public}s", v42, 0xCu);
    v29 = v43;
    swift_arrayDestroy();
    MEMORY[0x2207770EC](v29, -1, -1);
    MEMORY[0x2207770EC](v28, -1, -1);

    (*(void (**)(char *, uint64_t))(v45 + 8))(v13, v44);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  }
  type metadata accessor for SceneServices();
  v30 = swift_allocObject();
  *(_QWORD *)(v30 + 16) = v16;
  *(_QWORD *)(v30 + 24) = sub_21C1EFAC8(MEMORY[0x24BEE4AF8]);
  v4[2] = v30;
  *(_QWORD *)(swift_allocObject() + 16) = v16;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25524A4F0);
  swift_allocObject();
  v31 = v16;
  v4[4] = sub_21C246EC0();
  sub_21C1FF9B4(v48, (uint64_t)(v4 + 5));
  v32 = v31;
  v33 = sub_21C248768();

  v34 = 0;
  if ((v33 & 1) != 0)
  {
    v34 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBDB58]), sel_initWithWindowScene_, v32);
    objc_msgSend(v34, sel_makeKeyAndVisible);
  }
  v4[3] = v34;
  v35 = swift_allocObject();
  *(_QWORD *)(v35 + 16) = sub_21C1FF9F0;
  *(_QWORD *)(v35 + 24) = v4;
  swift_retain();
  swift_retain();
  sub_21C246ED8();
  swift_release();
  swift_retain();
  sub_21C248780();
  swift_release();
  v36 = sub_21C248654();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 56))(v9, 1, 1, v36);
  sub_21C24863C();
  swift_retain();
  swift_retain();
  v37 = sub_21C248630();
  v38 = (_QWORD *)swift_allocObject();
  v39 = MEMORY[0x24BEE6930];
  v38[2] = v37;
  v38[3] = v39;
  v38[4] = a2;
  v38[5] = v4;
  sub_21C219F64((uint64_t)v9, (uint64_t)&unk_25524A500, (uint64_t)v38);
  swift_release();
  sub_21C1FFAF0(v48);
  return v4;
}

uint64_t sub_21C1FF970()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_21C1FF994()
{
  return sub_21C248774();
}

uint64_t sub_21C1FF9B4(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for PreviewAgentServices(a2, a1);
  return a2;
}

void sub_21C1FF9F0(char a1, uint64_t a2)
{
  sub_21C1FFCB4(a1 & 1, a2);
}

uint64_t sub_21C1FF9F8()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_21C1FFA1C(unsigned __int8 *a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD))(v1 + 16))(*a1);
}

uint64_t sub_21C1FFA44()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_21C1FFA78(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v7 = v1[4];
  v6 = v1[5];
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_21C1E664C;
  return sub_21C1FCAC8(a1, v4, v5, v7, v6);
}

uint64_t sub_21C1FFAF0(uint64_t a1)
{
  destroy for PreviewAgentServices(a1);
  return a1;
}

uint64_t sub_21C1FFB24(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_21C1E664C;
  return sub_21C1FEDA4(a1);
}

uint64_t sub_21C1FFB78(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_21C1EBB98;
  return sub_21C1FD920(a1, v4, v5, v6);
}

uint64_t sub_21C1FFBE4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25524A588);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

unint64_t sub_21C1FFC2C()
{
  unint64_t result;

  result = qword_25524A5B0;
  if (!qword_25524A5B0)
  {
    result = MEMORY[0x22077702C](&unk_21C249E10, &type metadata for PreviewSceneAgent.NoCurrentUpdateError);
    atomic_store(result, (unint64_t *)&qword_25524A5B0);
  }
  return result;
}

uint64_t sub_21C1FFC70(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

void sub_21C1FFCB4(char a1, uint64_t a2)
{
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  char *v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  void (*v26)(char *, char *, uint64_t);
  unint64_t v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v3 = a1 & 1;
  v4 = sub_21C247CC4();
  v34 = *(_QWORD *)(v4 - 8);
  v35 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v33 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_21C247898();
  v31 = *(_QWORD *)(v6 - 8);
  v32 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_25524A5B8);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_21C246F5C();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(_QWORD *)(v13 + 64);
  v15 = MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v30 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)&v30 - v17;
  sub_21C1F03EC(a2, (uint64_t)v11, &qword_25524A5B8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
  {
    sub_21C1F03B0((uint64_t)v11, &qword_25524A5B8);
    v19 = v33;
    sub_21C247CA0();
    v20 = sub_21C247CB8();
    v21 = sub_21C248720();
    if (os_log_type_enabled(v20, v21))
    {
      v22 = (uint8_t *)swift_slowAlloc();
      v23 = swift_slowAlloc();
      v37 = v23;
      *(_DWORD *)v22 = 136446210;
      LOBYTE(v36) = v3;
      sub_21C20005C();
      v24 = sub_21C2488F4();
      v36 = sub_21C203A90(v24, v25, &v37);
      sub_21C2487A4();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_21C1E3000, v20, v21, "Scene message %{public}s received without responder", v22, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2207770EC](v23, -1, -1);
      MEMORY[0x2207770EC](v22, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v34 + 8))(v19, v35);
  }
  else
  {
    v26 = *(void (**)(char *, char *, uint64_t))(v13 + 32);
    v26(v18, v11, v12);
    if (v3)
    {
      sub_21C2000A0();
      v29 = (void *)swift_allocError();
      sub_21C246F44();
      (*(void (**)(char *, uint64_t))(v13 + 8))(v18, v12);

    }
    else
    {
      sub_21C2000E4();
      sub_21C24788C();
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v16, v18, v12);
      v27 = (*(unsigned __int8 *)(v13 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
      v28 = swift_allocObject();
      v26((char *)(v28 + v27), v16, v12);
      sub_21C2486FC();
      swift_release();
      (*(void (**)(char *, uint64_t))(v31 + 8))(v8, v32);
      (*(void (**)(char *, uint64_t))(v13 + 8))(v18, v12);
    }
  }
}

unint64_t sub_21C20005C()
{
  unint64_t result;

  result = qword_25524A5C0;
  if (!qword_25524A5C0)
  {
    result = MEMORY[0x22077702C](MEMORY[0x24BE784A8], MEMORY[0x24BE784A0]);
    atomic_store(result, (unint64_t *)&qword_25524A5C0);
  }
  return result;
}

unint64_t sub_21C2000A0()
{
  unint64_t result;

  result = qword_25524A5C8;
  if (!qword_25524A5C8)
  {
    result = MEMORY[0x22077702C](&unk_21C249DD0, &type metadata for PreviewSceneAgent.UnhandledAction);
    atomic_store(result, (unint64_t *)&qword_25524A5C8);
  }
  return result;
}

unint64_t sub_21C2000E4()
{
  unint64_t result;

  result = qword_25524A5D0;
  if (!qword_25524A5D0)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_25524A5D0);
  }
  return result;
}

uint64_t sub_21C200120()
{
  uint64_t v0;
  uint64_t v1;

  v1 = sub_21C246F5C();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

uint64_t sub_21C200180()
{
  sub_21C246F5C();
  return sub_21C246F50();
}

ValueMetadata *type metadata accessor for PreviewSceneAgent.UnhandledAction()
{
  return &type metadata for PreviewSceneAgent.UnhandledAction;
}

ValueMetadata *type metadata accessor for PreviewSceneAgent.NoCurrentUpdateError()
{
  return &type metadata for PreviewSceneAgent.NoCurrentUpdateError;
}

unint64_t sub_21C2001E4()
{
  unint64_t result;

  result = qword_25524A5D8;
  if (!qword_25524A5D8)
  {
    result = MEMORY[0x22077702C](&unk_21C249CF0, &type metadata for PreviewSceneAgent.NoCurrentUpdateError);
    atomic_store(result, (unint64_t *)&qword_25524A5D8);
  }
  return result;
}

unint64_t sub_21C20022C()
{
  unint64_t result;

  result = qword_25524A5E0;
  if (!qword_25524A5E0)
  {
    result = MEMORY[0x22077702C](&unk_21C249CC8, &type metadata for PreviewSceneAgent.NoCurrentUpdateError);
    atomic_store(result, (unint64_t *)&qword_25524A5E0);
  }
  return result;
}

unint64_t sub_21C200270()
{
  unint64_t result;

  result = qword_25524A5E8;
  if (!qword_25524A5E8)
  {
    result = MEMORY[0x22077702C](&unk_21C249D38, &type metadata for PreviewSceneAgent.NoCurrentUpdateError);
    atomic_store(result, (unint64_t *)&qword_25524A5E8);
  }
  return result;
}

uint64_t sub_21C2002C0(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;

  v3[2] = a1;
  v3[3] = a2;
  v3[4] = *v2;
  return swift_task_switch();
}

uint64_t sub_21C2002E0()
{
  uint64_t v0;

  sub_21C24863C();
  *(_QWORD *)(v0 + 40) = sub_21C248630();
  sub_21C2485E8();
  return swift_task_switch();
}

uint64_t sub_21C200348()
{
  uint64_t v0;
  char v1;

  swift_release();
  v1 = sub_21C200980();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(v1 & 1);
}

uint64_t EntryPoint.handle(hostMessageStream:instance:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v5;

  v5[5] = a4;
  v5[6] = v4;
  v5[3] = a2;
  v5[4] = a3;
  v5[2] = a1;
  return swift_task_switch();
}

uint64_t sub_21C2003B4()
{
  uint64_t v0;

  sub_21C24863C();
  *(_QWORD *)(v0 + 56) = sub_21C248630();
  sub_21C2485E8();
  return swift_task_switch();
}

uint64_t sub_21C20041C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;

  v2 = *(_QWORD *)(v0 + 32);
  v1 = *(_QWORD *)(v0 + 40);
  v4 = *(_QWORD *)(v0 + 16);
  v3 = *(_QWORD *)(v0 + 24);
  swift_release();
  v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v1 + 72))(v4, v3, v2, v1);
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(v5 & 1);
}

uint64_t sub_21C200480(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v3 = *v1;
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = v3;
  return swift_task_switch();
}

uint64_t sub_21C20049C()
{
  uint64_t v0;

  sub_21C24863C();
  *(_QWORD *)(v0 + 32) = sub_21C248630();
  sub_21C2485E8();
  return swift_task_switch();
}

uint64_t sub_21C200504()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_release();
  sub_21C2010E4(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t EntryPoint.handle(shellMessageStream:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;

  v4[4] = a3;
  v4[5] = v3;
  v4[2] = a1;
  v4[3] = a2;
  return swift_task_switch();
}

uint64_t sub_21C20055C()
{
  uint64_t v0;

  sub_21C24863C();
  *(_QWORD *)(v0 + 48) = sub_21C248630();
  sub_21C2485E8();
  return swift_task_switch();
}

uint64_t sub_21C2005C4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = v0[3];
  v1 = v0[4];
  v3 = v0[2];
  swift_release();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v1 + 80))(v3, v2, v1);
  return swift_task_switch();
}

uint64_t sub_21C200624()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21C20062C(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(v3 + 16) = a2;
  *(_QWORD *)(v3 + 24) = v4;
  return swift_task_switch();
}

uint64_t sub_21C200648()
{
  uint64_t v0;

  sub_21C24863C();
  *(_QWORD *)(v0 + 32) = sub_21C248630();
  sub_21C2485E8();
  return swift_task_switch();
}

uint64_t sub_21C2006B0()
{
  uint64_t v0;

  swift_release();
  sub_21C204488();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t EntryPoint.handle(endpoint:context:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v5;

  v5[5] = a4;
  v5[6] = v4;
  v5[3] = a2;
  v5[4] = a3;
  v5[2] = a1;
  return swift_task_switch();
}

uint64_t sub_21C20070C()
{
  uint64_t v0;

  sub_21C24863C();
  *(_QWORD *)(v0 + 56) = sub_21C248630();
  sub_21C2485E8();
  return swift_task_switch();
}

uint64_t sub_21C200774()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = v0[4];
  v1 = v0[5];
  v4 = v0[2];
  v3 = v0[3];
  swift_release();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v1 + 88))(v4, v3, v2, v1);
  return swift_task_switch();
}

uint64_t sub_21C2007E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_21C2025E8(a1, a2, a3, MEMORY[0x24BE778E8], qword_25524A788, MEMORY[0x24BE778D8]);
}

uint64_t static EntryPoint<>.decode(updatePayload:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  v2 = sub_21C247880();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getAssociatedTypeWitness();
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, a1, v2);
  return sub_21C247A18();
}

uint64_t sub_21C2008E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_21C2026C0(a1, a2, a3, MEMORY[0x24BE775F0], &qword_25524A780, MEMORY[0x24BE775E0]);
}

uint64_t static EntryPoint<>.encode(staticOutput:)()
{
  swift_getAssociatedTypeWitness();
  return sub_21C247A0C();
}

uint64_t sub_21C20095C()
{
  return sub_21C200980() & 1;
}

uint64_t sub_21C200980()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;

  v0 = sub_21C247CC4();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21C247CA0();
  swift_retain();
  v4 = sub_21C247CB8();
  v5 = sub_21C248720();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc();
    v7 = swift_slowAlloc();
    v10 = v7;
    *(_DWORD *)v6 = 136446210;
    v9 = sub_21C203A90(0xD000000000000015, 0x800000021C24D4B0, &v10);
    sub_21C2487A4();
    swift_release();
    _os_log_impl(&dword_21C1E3000, v4, v5, "Entry point received a host message stream but does not handle them: %{public}s", v6, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2207770EC](v7, -1, -1);
    MEMORY[0x2207770EC](v6, -1, -1);

  }
  else
  {

    swift_release();
  }
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return 0;
}

uint64_t sub_21C200B30()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;

  v0 = sub_21C247CC4();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21C247CA0();
  swift_retain();
  v4 = sub_21C247CB8();
  v5 = sub_21C248720();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc();
    v7 = swift_slowAlloc();
    v10 = v7;
    *(_DWORD *)v6 = 136446210;
    v9 = sub_21C203A90(0xD000000000000013, 0x800000021C24D4F0, &v10);
    sub_21C2487A4();
    swift_release();
    _os_log_impl(&dword_21C1E3000, v4, v5, "Entry point received a host message stream but does not handle them: %{public}s", v6, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2207770EC](v7, -1, -1);
    MEMORY[0x2207770EC](v6, -1, -1);

  }
  else
  {

    swift_release();
  }
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return 0;
}

uint64_t sub_21C200CE0(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  NSObject *v10;
  os_log_type_t v11;
  uint64_t v12;
  uint64_t v13;
  uint8_t *v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v6 = sub_21C247CC4();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21C247CA0();
  swift_retain();
  v10 = sub_21C247CB8();
  v11 = sub_21C248720();
  if (os_log_type_enabled(v10, v11))
  {
    v18 = v6;
    v12 = swift_slowAlloc();
    v17 = v7;
    v13 = a3;
    v14 = (uint8_t *)v12;
    v15 = swift_slowAlloc();
    v20 = v15;
    *(_DWORD *)v14 = 136446210;
    v19 = sub_21C203A90(v13, a4, &v20);
    sub_21C2487A4();
    swift_release();
    _os_log_impl(&dword_21C1E3000, v10, v11, "Entry point received a host message stream but does not handle them: %{public}s", v14, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2207770EC](v15, -1, -1);
    MEMORY[0x2207770EC](v14, -1, -1);

    (*(void (**)(char *, uint64_t))(v17 + 8))(v9, v18);
  }
  else
  {

    swift_release();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  return 0;
}

uint64_t EntryPoint.handleHostMessageStream(_:instance:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  NSObject *v12;
  os_log_type_t v13;
  uint64_t v14;
  uint8_t *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  _QWORD v20[2];
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v5 = *(_QWORD *)(a3 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v7 = (char *)v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_21C247CC4();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21C247CA0();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v3, a3);
  v12 = sub_21C247CB8();
  v13 = sub_21C248720();
  if (os_log_type_enabled(v12, v13))
  {
    v14 = swift_slowAlloc();
    v22 = v8;
    v15 = (uint8_t *)v14;
    v16 = swift_slowAlloc();
    v24 = v16;
    v21 = v9;
    *(_DWORD *)v15 = 136446210;
    v20[1] = v15 + 4;
    v17 = sub_21C2488F4();
    v23 = sub_21C203A90(v17, v18, &v24);
    sub_21C2487A4();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, a3);
    _os_log_impl(&dword_21C1E3000, v12, v13, "Entry point received a host message stream but does not handle them: %{public}s", v15, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2207770EC](v16, -1, -1);
    MEMORY[0x2207770EC](v15, -1, -1);

    (*(void (**)(char *, uint64_t))(v21 + 8))(v11, v22);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, a3);

    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
  return 0;
}

uint64_t sub_21C2010C4(uint64_t a1)
{
  return sub_21C2010E4(a1);
}

uint64_t sub_21C2010E4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  NSObject *v6;
  os_log_type_t v7;
  uint64_t v8;
  uint8_t *v9;
  uint64_t v10;
  _QWORD v12[3];
  uint64_t v13;

  v2 = sub_21C247CC4();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21C247CA0();
  swift_retain();
  v6 = sub_21C247CB8();
  v7 = sub_21C248720();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = swift_slowAlloc();
    v12[1] = a1;
    v9 = (uint8_t *)v8;
    v10 = swift_slowAlloc();
    v13 = v10;
    *(_DWORD *)v9 = 136446210;
    v12[2] = sub_21C203A90(0xD000000000000015, 0x800000021C24D4B0, &v13);
    sub_21C2487A4();
    swift_release();
    _os_log_impl(&dword_21C1E3000, v6, v7, "Entry point received a shell message stream but does not handle them: %{public}s", v9, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2207770EC](v10, -1, -1);
    MEMORY[0x2207770EC](v9, -1, -1);

  }
  else
  {

    swift_release();
  }
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  sub_21C2470D0();
  sub_21C1FBD14(&qword_25524A608, (uint64_t (*)(uint64_t))MEMORY[0x24BE77240], MEMORY[0x24BE771D8]);
  return sub_21C2478A4();
}

uint64_t sub_21C20130C(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  NSObject *v10;
  os_log_type_t v11;
  uint64_t v12;
  unint64_t v13;
  uint8_t *v14;
  uint64_t v15;
  _QWORD v17[3];
  uint64_t v18;

  v6 = sub_21C247CC4();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21C247CA0();
  swift_retain();
  v10 = sub_21C247CB8();
  v11 = sub_21C248720();
  if (os_log_type_enabled(v10, v11))
  {
    v17[1] = a1;
    v12 = swift_slowAlloc();
    v17[0] = v6;
    v13 = a3;
    v14 = (uint8_t *)v12;
    v15 = swift_slowAlloc();
    v18 = v15;
    *(_DWORD *)v14 = 136446210;
    v17[2] = sub_21C203A90(a2, v13, &v18);
    sub_21C2487A4();
    swift_release();
    _os_log_impl(&dword_21C1E3000, v10, v11, "Entry point received a shell message stream but does not handle them: %{public}s", v14, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2207770EC](v15, -1, -1);
    MEMORY[0x2207770EC](v14, -1, -1);

    (*(void (**)(char *, _QWORD))(v7 + 8))(v9, v17[0]);
  }
  else
  {

    swift_release();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  sub_21C2470D0();
  sub_21C1FBD14(&qword_25524A608, (uint64_t (*)(uint64_t))MEMORY[0x24BE77240], MEMORY[0x24BE771D8]);
  return sub_21C2478A4();
}

uint64_t sub_21C201540(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  NSObject *v6;
  os_log_type_t v7;
  uint64_t v8;
  uint8_t *v9;
  uint64_t v10;
  _QWORD v12[3];
  uint64_t v13;

  v2 = sub_21C247CC4();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21C247CA0();
  swift_retain();
  v6 = sub_21C247CB8();
  v7 = sub_21C248720();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = swift_slowAlloc();
    v12[1] = a1;
    v9 = (uint8_t *)v8;
    v10 = swift_slowAlloc();
    v13 = v10;
    *(_DWORD *)v9 = 136446210;
    v12[2] = sub_21C203A90(0xD000000000000013, 0x800000021C24D4F0, &v13);
    sub_21C2487A4();
    swift_release();
    _os_log_impl(&dword_21C1E3000, v6, v7, "Entry point received a shell message stream but does not handle them: %{public}s", v9, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2207770EC](v10, -1, -1);
    MEMORY[0x2207770EC](v9, -1, -1);

  }
  else
  {

    swift_release();
  }
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  sub_21C2470D0();
  sub_21C1FBD14(&qword_25524A608, (uint64_t (*)(uint64_t))MEMORY[0x24BE77240], MEMORY[0x24BE771D8]);
  return sub_21C2478A4();
}

uint64_t EntryPoint.handleShellMessageStream(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  NSObject *v13;
  os_log_type_t v14;
  uint64_t v15;
  uint8_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  _QWORD v22[2];
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v26 = a3;
  v6 = *(_QWORD *)(a2 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v8 = (char *)v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_21C247CC4();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21C247CA0();
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v3, a2);
  v13 = sub_21C247CB8();
  v14 = sub_21C248720();
  if (os_log_type_enabled(v13, v14))
  {
    v15 = swift_slowAlloc();
    v25 = a1;
    v16 = (uint8_t *)v15;
    v17 = swift_slowAlloc();
    v24 = v9;
    v18 = v17;
    v28 = v17;
    v23 = v10;
    *(_DWORD *)v16 = 136446210;
    v22[1] = v16 + 4;
    v19 = sub_21C2488F4();
    v27 = sub_21C203A90(v19, v20, &v28);
    sub_21C2487A4();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, a2);
    _os_log_impl(&dword_21C1E3000, v13, v14, "Entry point received a shell message stream but does not handle them: %{public}s", v16, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2207770EC](v18, -1, -1);
    MEMORY[0x2207770EC](v16, -1, -1);

    (*(void (**)(char *, uint64_t))(v23 + 8))(v12, v24);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, a2);

    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  }
  sub_21C2470D0();
  sub_21C1FBD14(&qword_25524A608, (uint64_t (*)(uint64_t))MEMORY[0x24BE77240], MEMORY[0x24BE771D8]);
  return sub_21C2478A4();
}

uint64_t sub_21C201A00()
{
  return sub_21C204488();
}

uint64_t EntryPoint.handleEndpoint(_:context:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_21C204B68(a2, a3);
}

uint64_t EntryPoint.description.getter()
{
  return sub_21C2489E4();
}

uint64_t sub_21C201A3C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return swift_task_switch();
}

uint64_t sub_21C201A54()
{
  uint64_t v0;

  sub_21C24863C();
  *(_QWORD *)(v0 + 32) = sub_21C248630();
  sub_21C2485E8();
  return swift_task_switch();
}

uint64_t sub_21C201ABC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;

  v1 = *(_QWORD *)(v0 + 24);
  v2 = *(_QWORD *)(v0 + 16);
  swift_release();
  v3 = sub_21C2040E0(v2, v1, 0x72746E45706F6F4ELL, 0xEE00746E696F5079);
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(v3 & 1);
}

uint64_t sub_21C201B20(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
  return swift_task_switch();
}

uint64_t sub_21C201B38()
{
  uint64_t v0;

  sub_21C24863C();
  *(_QWORD *)(v0 + 24) = sub_21C248630();
  sub_21C2485E8();
  return swift_task_switch();
}

uint64_t sub_21C201BA0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_release();
  sub_21C204284(v1, 0x72746E45706F6F4ELL, 0xEE00746E696F5079);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21C201BF8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a2;
  return swift_task_switch();
}

uint64_t sub_21C201C10()
{
  uint64_t v0;

  sub_21C24863C();
  *(_QWORD *)(v0 + 24) = sub_21C248630();
  sub_21C2485E8();
  return swift_task_switch();
}

uint64_t sub_21C201C78()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_release();
  sub_21C2049A0(v1, 0x72746E45706F6F4ELL, 0xEE00746E696F5079);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21C201CDC(uint64_t a1, uint64_t a2)
{
  return sub_21C2040E0(a1, a2, 0x72746E45706F6F4ELL, 0xEE00746E696F5079) & 1;
}

uint64_t sub_21C201D14(uint64_t a1)
{
  return sub_21C204284(a1, 0x72746E45706F6F4ELL, 0xEE00746E696F5079);
}

uint64_t sub_21C201D48(uint64_t a1, uint64_t a2)
{
  return sub_21C2049A0(a2, 0x72746E45706F6F4ELL, 0xEE00746E696F5079);
}

uint64_t sub_21C201D80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v10;

  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 16) = v10;
  *v10 = v5;
  v10[1] = sub_21C201E04;
  v10[5] = a4;
  v10[6] = v4;
  v10[3] = a2;
  v10[4] = a3;
  v10[2] = a1;
  return swift_task_switch();
}

uint64_t sub_21C201E04(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v4;

  v4 = *v1;
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v4 + 8))(a1);
}

uint64_t sub_21C201E54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  _QWORD *v8;

  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v8;
  *v8 = v4;
  v8[1] = sub_21C1E664C;
  v8[4] = a3;
  v8[5] = v3;
  v8[2] = a1;
  v8[3] = a2;
  return swift_task_switch();
}

uint64_t sub_21C201EC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v10;

  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 16) = v10;
  *v10 = v5;
  v10[1] = sub_21C1EBB98;
  v10[5] = a4;
  v10[6] = v4;
  v10[3] = a2;
  v10[4] = a3;
  v10[2] = a1;
  return swift_task_switch();
}

uint64_t sub_21C201F4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  EntryPoint.handleHostMessageStream(_:instance:)(a1, a2, a3);
  return 0;
}

uint64_t sub_21C201F68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_21C204B68(a2, a3);
}

uint64_t sub_21C201F78()
{
  _QWORD v1[2];

  sub_21C24881C();
  swift_bridgeObjectRelease();
  strcpy((char *)v1, "Cannot decode ");
  swift_getAssociatedTypeWitness();
  sub_21C2489E4();
  sub_21C248504();
  swift_bridgeObjectRelease();
  sub_21C248504();
  sub_21C247880();
  sub_21C1FBD14(&qword_25524A5A0, (uint64_t (*)(uint64_t))MEMORY[0x24BE76530], MEMORY[0x24BE76540]);
  sub_21C2488F4();
  sub_21C248504();
  swift_bridgeObjectRelease();
  return v1[0];
}

uint64_t sub_21C202090@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;

  v4 = sub_21C247880();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
}

unint64_t sub_21C2020CC()
{
  return 0xD000000000000016;
}

uint64_t sub_21C2020E8()
{
  return sub_21C2052A0();
}

uint64_t sub_21C2020F8(uint64_t a1)
{
  MEMORY[0x22077702C](&unk_21C24A028, a1);
  return sub_21C24794C();
}

uint64_t sub_21C20212C(uint64_t a1)
{
  MEMORY[0x22077702C](&unk_21C24A028, a1);
  return sub_21C24791C();
}

uint64_t *NonUIEntryPoint.any.getter(uint64_t a1, uint64_t a2)
{
  return sub_21C2021C0(a1, a2);
}

uint64_t AnyNonUIEntryPoint.deinit()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  return v0;
}

uint64_t AnyNonUIEntryPoint.__deallocating_deinit()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  return swift_deallocClassInstance();
}

uint64_t *SceneEntryPoint.any.getter(uint64_t a1, uint64_t a2)
{
  return sub_21C2021C0(a1, a2);
}

uint64_t *sub_21C2021C0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  void (*v9)(uint64_t);
  uint64_t *v10;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v13;

  v5 = *(_QWORD *)(a1 - 8);
  v6 = MEMORY[0x24BDAC7A8](a1);
  v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9(v6);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v8, v2, a1);
  v10 = (uint64_t *)swift_allocObject();
  v10[5] = a1;
  v10[6] = a2;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v10 + 2);
  (*(void (**)(uint64_t *, char *, uint64_t))(v5 + 32))(boxed_opaque_existential_1, v8, a1);
  return v10;
}

uint64_t *sub_21C202270(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v6;
  uint64_t *boxed_opaque_existential_1;

  v6 = (uint64_t *)swift_allocObject();
  v6[5] = a2;
  v6[6] = a3;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v6 + 2);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 32))(boxed_opaque_existential_1, a1, a2);
  return v6;
}

uint64_t *sub_21C2022D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t *boxed_opaque_existential_1;

  v3[5] = a2;
  v3[6] = a3;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v3 + 2);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 32))(boxed_opaque_existential_1, a1, a2);
  return v3;
}

uint64_t sub_21C202320(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;

  v3[2] = a1;
  v3[3] = a2;
  v3[4] = *v2;
  return swift_task_switch();
}

uint64_t sub_21C202340()
{
  uint64_t v0;

  sub_21C24863C();
  *(_QWORD *)(v0 + 40) = sub_21C248630();
  sub_21C2485E8();
  return swift_task_switch();
}

uint64_t sub_21C2023A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;

  v2 = *(_QWORD *)(v0 + 16);
  v1 = *(_QWORD *)(v0 + 24);
  swift_release();
  v3 = sub_21C200CE0(v2, v1, 0xD000000000000011, 0x800000021C24D4D0);
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(v3 & 1);
}

uint64_t sub_21C20240C(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v3 = *v1;
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = v3;
  return swift_task_switch();
}

uint64_t sub_21C202428()
{
  uint64_t v0;

  sub_21C24863C();
  *(_QWORD *)(v0 + 32) = sub_21C248630();
  sub_21C2485E8();
  return swift_task_switch();
}

uint64_t sub_21C202490()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_release();
  sub_21C20130C(v1, 0xD000000000000011, 0x800000021C24D4D0);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21C2024E4(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(v3 + 16) = a2;
  *(_QWORD *)(v3 + 24) = v4;
  return swift_task_switch();
}

uint64_t sub_21C202500()
{
  uint64_t v0;

  sub_21C24863C();
  *(_QWORD *)(v0 + 32) = sub_21C248630();
  sub_21C2485E8();
  return swift_task_switch();
}

uint64_t sub_21C202568()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_release();
  sub_21C2047E0(v1, 0xD000000000000011, 0x800000021C24D4D0);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21C2025BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_21C2025E8(a1, a2, a3, MEMORY[0x24BE78230], qword_25524A7A8, MEMORY[0x24BE78220]);
}

uint64_t sub_21C2025E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t), unint64_t *a5, uint64_t a6)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v15;

  v10 = sub_21C247880();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v15 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  a4(0);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, a1, v10);
  sub_21C1FBD14(a5, a4, a6);
  return sub_21C247A18();
}

uint64_t sub_21C2026C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t), unint64_t *a5, uint64_t a6)
{
  a4(0);
  sub_21C1FBD14(a5, a4, a6);
  return sub_21C247A0C();
}

uint64_t sub_21C20272C(uint64_t a1, uint64_t a2)
{
  return sub_21C200CE0(a1, a2, 0xD000000000000011, 0x800000021C24D4D0) & 1;
}

uint64_t sub_21C202768(uint64_t a1)
{
  return sub_21C20130C(a1, 0xD000000000000011, 0x800000021C24D4D0);
}

uint64_t sub_21C2027A0(uint64_t a1, uint64_t a2)
{
  return sub_21C2047E0(a2, 0xD000000000000011, 0x800000021C24D4D0);
}

uint64_t sub_21C2027DC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return swift_task_switch();
}

uint64_t sub_21C2027F4()
{
  uint64_t v0;

  sub_21C24863C();
  *(_QWORD *)(v0 + 32) = sub_21C248630();
  sub_21C2485E8();
  return swift_task_switch();
}

uint64_t sub_21C20285C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;

  v1 = *(_QWORD *)(v0 + 24);
  v2 = *(_QWORD *)(v0 + 16);
  swift_release();
  v3 = sub_21C2040E0(v2, v1, 0xD00000000000001ALL, 0x800000021C24D550);
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(v3 & 1);
}

uint64_t sub_21C2028B8(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
  return swift_task_switch();
}

uint64_t sub_21C2028D0()
{
  uint64_t v0;

  sub_21C24863C();
  *(_QWORD *)(v0 + 24) = sub_21C248630();
  sub_21C2485E8();
  return swift_task_switch();
}

uint64_t sub_21C202938()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_release();
  sub_21C204284(v1, 0xD00000000000001ALL, 0x800000021C24D550);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21C202988(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a2;
  return swift_task_switch();
}

uint64_t sub_21C2029A0()
{
  uint64_t v0;

  sub_21C24863C();
  *(_QWORD *)(v0 + 24) = sub_21C248630();
  sub_21C2485E8();
  return swift_task_switch();
}

uint64_t sub_21C202A08()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_release();
  sub_21C2049A0(v1, 0xD00000000000001ALL, 0x800000021C24D550);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21C202A58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_21C2025E8(a1, a2, a3, (uint64_t (*)(uint64_t))MEMORY[0x24BE77A98], qword_25524A8C0, MEMORY[0x24BE77A80]);
}

uint64_t sub_21C202A84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_21C203594(a1, a2, a3, &qword_25524A8A8, (void (*)(void))sub_21C205398);
}

uint64_t sub_21C202A98(uint64_t a1, uint64_t a2)
{
  return sub_21C2040E0(a1, a2, 0xD00000000000001ALL, 0x800000021C24D550) & 1;
}

uint64_t sub_21C202AC8(uint64_t a1)
{
  return sub_21C204284(a1, 0xD00000000000001ALL, 0x800000021C24D550);
}

uint64_t sub_21C202AF4(uint64_t a1, uint64_t a2)
{
  return sub_21C2049A0(a2, 0xD00000000000001ALL, 0x800000021C24D550);
}

uint64_t sub_21C202B24(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;

  v3[2] = a1;
  v3[3] = a2;
  v3[4] = *v2;
  return swift_task_switch();
}

uint64_t sub_21C202B44()
{
  uint64_t v0;

  sub_21C24863C();
  *(_QWORD *)(v0 + 40) = sub_21C248630();
  sub_21C2485E8();
  return swift_task_switch();
}

uint64_t sub_21C202BAC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;

  v2 = *(_QWORD *)(v0 + 16);
  v1 = *(_QWORD *)(v0 + 24);
  swift_release();
  v3 = sub_21C200CE0(v2, v1, 0xD000000000000014, 0x800000021C24D490);
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(v3 & 1);
}

uint64_t sub_21C202C10(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v3 = *v1;
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = v3;
  return swift_task_switch();
}

uint64_t sub_21C202C2C()
{
  uint64_t v0;

  sub_21C24863C();
  *(_QWORD *)(v0 + 32) = sub_21C248630();
  sub_21C2485E8();
  return swift_task_switch();
}

uint64_t sub_21C202C94()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_release();
  sub_21C20130C(v1, 0xD000000000000014, 0x800000021C24D490);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21C202CE8(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(v3 + 16) = a2;
  *(_QWORD *)(v3 + 24) = v4;
  return swift_task_switch();
}

uint64_t sub_21C202D04()
{
  uint64_t v0;

  sub_21C24863C();
  *(_QWORD *)(v0 + 32) = sub_21C248630();
  sub_21C2485E8();
  return swift_task_switch();
}

uint64_t sub_21C202D6C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_release();
  sub_21C2047E0(v1, 0xD000000000000014, 0x800000021C24D490);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21C202DC0(uint64_t a1, uint64_t a2)
{
  return sub_21C200CE0(a1, a2, 0xD000000000000014, 0x800000021C24D490) & 1;
}

uint64_t sub_21C202DFC(uint64_t a1)
{
  return sub_21C20130C(a1, 0xD000000000000014, 0x800000021C24D490);
}

uint64_t sub_21C202E34(uint64_t a1, uint64_t a2)
{
  return sub_21C2047E0(a2, 0xD000000000000014, 0x800000021C24D490);
}

uint64_t sub_21C202E70(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v3 = *v1;
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = v3;
  return swift_task_switch();
}

uint64_t sub_21C202E8C()
{
  uint64_t v0;

  sub_21C24863C();
  *(_QWORD *)(v0 + 32) = sub_21C248630();
  sub_21C2485E8();
  return swift_task_switch();
}

uint64_t sub_21C202EF4()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_release();
  sub_21C201540(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21C202F34(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(v3 + 16) = a2;
  *(_QWORD *)(v3 + 24) = v4;
  return swift_task_switch();
}

uint64_t sub_21C202F50()
{
  uint64_t v0;

  sub_21C24863C();
  *(_QWORD *)(v0 + 32) = sub_21C248630();
  sub_21C2485E8();
  return swift_task_switch();
}

uint64_t sub_21C202FB8()
{
  uint64_t v0;

  swift_release();
  sub_21C204634();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21C202FF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_21C2025E8(a1, a2, a3, MEMORY[0x24BE77720], qword_25524A908, MEMORY[0x24BE776F8]);
}

uint64_t sub_21C203024()
{
  sub_21C247880();
  return sub_21C247A0C();
}

uint64_t sub_21C20305C()
{
  return sub_21C200B30();
}

uint64_t sub_21C203064(uint64_t a1)
{
  return sub_21C201540(a1);
}

uint64_t sub_21C20306C()
{
  return sub_21C204634();
}

uint64_t sub_21C203078(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v3 = *v1;
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = v3;
  return swift_task_switch();
}

uint64_t sub_21C203094()
{
  uint64_t v0;

  sub_21C24863C();
  *(_QWORD *)(v0 + 32) = sub_21C248630();
  sub_21C2485E8();
  return swift_task_switch();
}

uint64_t sub_21C2030FC()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_release();
  sub_21C20130C(v1, 0xD000000000000012, 0x800000021C24D510);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21C203150(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(v3 + 16) = a2;
  *(_QWORD *)(v3 + 24) = v4;
  return swift_task_switch();
}

uint64_t sub_21C20316C()
{
  uint64_t v0;

  sub_21C24863C();
  *(_QWORD *)(v0 + 32) = sub_21C248630();
  sub_21C2485E8();
  return swift_task_switch();
}

uint64_t sub_21C2031D4()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_release();
  sub_21C2047E0(v1, 0xD000000000000012, 0x800000021C24D510);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21C203228(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_21C2025E8(a1, a2, a3, (uint64_t (*)(uint64_t))MEMORY[0x24BE776E8], qword_25524A7E0, MEMORY[0x24BE776C8]);
}

uint64_t sub_21C203254(uint64_t a1, uint64_t a2)
{
  return sub_21C200CE0(a1, a2, 0xD000000000000012, 0x800000021C24D510) & 1;
}

uint64_t sub_21C203290(uint64_t a1)
{
  return sub_21C20130C(a1, 0xD000000000000012, 0x800000021C24D510);
}

uint64_t sub_21C2032C8(uint64_t a1, uint64_t a2)
{
  return sub_21C2047E0(a2, 0xD000000000000012, 0x800000021C24D510);
}

uint64_t sub_21C203304(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return swift_task_switch();
}

uint64_t sub_21C20331C()
{
  uint64_t v0;

  sub_21C24863C();
  *(_QWORD *)(v0 + 32) = sub_21C248630();
  sub_21C2485E8();
  return swift_task_switch();
}

uint64_t sub_21C203384()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;

  v1 = *(_QWORD *)(v0 + 24);
  v2 = *(_QWORD *)(v0 + 16);
  swift_release();
  v3 = sub_21C2040E0(v2, v1, 0xD00000000000001BLL, 0x800000021C24D530);
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(v3 & 1);
}

uint64_t sub_21C2033E0(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
  return swift_task_switch();
}

uint64_t sub_21C2033F8()
{
  uint64_t v0;

  sub_21C24863C();
  *(_QWORD *)(v0 + 24) = sub_21C248630();
  sub_21C2485E8();
  return swift_task_switch();
}

uint64_t sub_21C203460()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_release();
  sub_21C204284(v1, 0xD00000000000001BLL, 0x800000021C24D530);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21C2034B0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a2;
  return swift_task_switch();
}

uint64_t sub_21C2034C8()
{
  uint64_t v0;

  sub_21C24863C();
  *(_QWORD *)(v0 + 24) = sub_21C248630();
  sub_21C2485E8();
  return swift_task_switch();
}

uint64_t sub_21C203530()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_release();
  sub_21C2049A0(v1, 0xD00000000000001BLL, 0x800000021C24D530);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21C203580(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_21C203594(a1, a2, a3, &qword_25524A8E0, (void (*)(void))sub_21C205414);
}

uint64_t sub_21C203594(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, void (*a5)(void))
{
  __swift_instantiateConcreteTypeFromMangledName(a4);
  a5();
  return sub_21C247A0C();
}

uint64_t sub_21C2035E0(uint64_t a1, uint64_t a2)
{
  return sub_21C2040E0(a1, a2, 0xD00000000000001BLL, 0x800000021C24D530) & 1;
}

uint64_t sub_21C203610(uint64_t a1)
{
  return sub_21C204284(a1, 0xD00000000000001BLL, 0x800000021C24D530);
}

uint64_t sub_21C20363C(uint64_t a1, uint64_t a2)
{
  return sub_21C2049A0(a2, 0xD00000000000001BLL, 0x800000021C24D530);
}

uint64_t sub_21C20366C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return swift_task_switch();
}

uint64_t sub_21C203684()
{
  uint64_t v0;

  sub_21C24863C();
  *(_QWORD *)(v0 + 32) = sub_21C248630();
  sub_21C2485E8();
  return swift_task_switch();
}

uint64_t sub_21C2036EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;

  v1 = *(_QWORD *)(v0 + 24);
  v2 = *(_QWORD *)(v0 + 16);
  swift_release();
  v3 = sub_21C2040E0(v2, v1, 0xD000000000000019, 0x800000021C24D570);
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(v3 & 1);
}

uint64_t sub_21C203748(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
  return swift_task_switch();
}

uint64_t sub_21C203760()
{
  uint64_t v0;

  sub_21C24863C();
  *(_QWORD *)(v0 + 24) = sub_21C248630();
  sub_21C2485E8();
  return swift_task_switch();
}

uint64_t sub_21C2037C8()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_release();
  sub_21C204284(v1, 0xD000000000000019, 0x800000021C24D570);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21C203818(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a2;
  return swift_task_switch();
}

uint64_t sub_21C203830()
{
  uint64_t v0;

  sub_21C24863C();
  *(_QWORD *)(v0 + 24) = sub_21C248630();
  sub_21C2485E8();
  return swift_task_switch();
}

uint64_t sub_21C203898()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_release();
  sub_21C2049A0(v1, 0xD000000000000019, 0x800000021C24D570);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21C2038E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_21C2025E8(a1, a2, a3, (uint64_t (*)(uint64_t))MEMORY[0x24BE776B8], qword_25524A888, MEMORY[0x24BE776A8]);
}

uint64_t sub_21C203914(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_21C2026C0(a1, a2, a3, MEMORY[0x24BE77B58], &qword_25524A880, MEMORY[0x24BE77B48]);
}

uint64_t sub_21C203930(uint64_t a1, uint64_t a2)
{
  return sub_21C2040E0(a1, a2, 0xD000000000000019, 0x800000021C24D570) & 1;
}

uint64_t sub_21C203960(uint64_t a1)
{
  return sub_21C204284(a1, 0xD000000000000019, 0x800000021C24D570);
}

uint64_t sub_21C20398C(uint64_t a1, uint64_t a2)
{
  return sub_21C2049A0(a2, 0xD000000000000019, 0x800000021C24D570);
}

uint64_t sub_21C2039BC(uint64_t result, _BYTE **a2)
{
  _BYTE *v2;

  v2 = *a2;
  *v2 = result;
  *a2 = v2 + 1;
  return result;
}

uint64_t sub_21C2039CC(uint64_t (**a1)(uint64_t, uint64_t, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*a1)(a2, a3, a4);
}

uint64_t sub_21C203A00(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_21C203A20(uint64_t *a1, uint64_t a2, uint64_t *a3, uint64_t (*a4)(void))
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t result;

  v6 = a4();
  sub_21C203A90(v6, v7, a3);
  v8 = *a1 + 8;
  sub_21C2487A4();
  result = swift_bridgeObjectRelease();
  *a1 = v8;
  return result;
}

uint64_t sub_21C203A90(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12[3];
  uint64_t ObjectType;

  v6 = sub_21C203B60(v12, 0, 0, 1, a1, a2);
  v7 = v12[0];
  if (v6)
  {
    v8 = v6;
    ObjectType = swift_getObjectType();
    v12[0] = v8;
    v9 = *a3;
    if (*a3)
    {
      sub_21C204FAC((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    ObjectType = MEMORY[0x24BEE2520];
    v12[0] = a1;
    v12[1] = a2;
    v10 = *a3;
    if (*a3)
    {
      sub_21C204FAC((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
  return v7;
}

uint64_t sub_21C203B60(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  uint64_t v8;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  _QWORD __src[2];

  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (_QWORD *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            sub_21C2487B0();
            result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    result = sub_21C203D18(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0)
    goto LABEL_13;
  if ((a5 & 0x1000000000000000) != 0)
  {
    v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  v8 = sub_21C248864();
  if (!v8)
  {
    sub_21C2488A0();
    __break(1u);
LABEL_17:
    result = sub_21C2488E8();
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0)
    return 0;
  else
    return swift_unknownObjectRetain();
}

uint64_t sub_21C203D18(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v2 = sub_21C203DAC(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_21C203F84(0, *(_QWORD *)(v2 + 16) + 1, 1, (char *)v2);
  v4 = *(_QWORD *)(v2 + 16);
  v3 = *(_QWORD *)(v2 + 24);
  if (v4 >= v3 >> 1)
    v2 = sub_21C203F84(v3 > 1, v4 + 1, 1, (char *)v2);
  *(_QWORD *)(v2 + 16) = v4 + 1;
  *(_BYTE *)(v2 + 32 + v4) = 0;
  return v2;
}

uint64_t sub_21C203DAC(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  char v6;
  uint64_t result;

  if ((a2 & 0x1000000000000000) != 0)
    goto LABEL_10;
  if ((a2 & 0x2000000000000000) != 0)
    v2 = HIBYTE(a2) & 0xF;
  else
    v2 = a1 & 0xFFFFFFFFFFFFLL;
  if (v2)
  {
    while (1)
    {
      v3 = sub_21C203F20(v2, 0);
      if (v2 < 0)
        break;
      v4 = v3;
      v5 = sub_21C248828();
      if ((v6 & 1) != 0)
        goto LABEL_14;
      if (v5 == v2)
        return (uint64_t)v4;
      sub_21C2488A0();
      __break(1u);
LABEL_10:
      v2 = sub_21C24851C();
      if (!v2)
        return MEMORY[0x24BEE4AF8];
    }
    sub_21C2488E8();
    __break(1u);
LABEL_14:
    result = sub_21C2488A0();
    __break(1u);
  }
  else
  {
    return MEMORY[0x24BEE4AF8];
  }
  return result;
}

_QWORD *sub_21C203F20(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v4;
  size_t v5;

  if (a2 <= a1)
    v2 = a1;
  else
    v2 = a2;
  if (!v2)
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  __swift_instantiateConcreteTypeFromMangledName(qword_25524A7F8);
  v4 = (_QWORD *)swift_allocObject();
  v5 = _swift_stdlib_malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

uint64_t sub_21C203F84(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(qword_25524A7F8);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[v8])
      memmove(v12, v13, v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_21C2488E8();
  __break(1u);
  return result;
}

_BYTE **sub_21C2040D0(_BYTE **result, uint64_t a2, uint64_t a3, char a4)
{
  _BYTE *v4;

  v4 = *result;
  *v4 = a4;
  *result = v4 + 1;
  return result;
}

uint64_t sub_21C2040E0(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  NSObject *v10;
  os_log_type_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint8_t *v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v6 = sub_21C247CC4();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21C247CA0();
  v10 = sub_21C247CB8();
  v11 = sub_21C248720();
  if (os_log_type_enabled(v10, v11))
  {
    v12 = swift_slowAlloc();
    v19 = v6;
    v13 = a3;
    v14 = a4;
    v15 = (uint8_t *)v12;
    v16 = swift_slowAlloc();
    v21 = v16;
    *(_DWORD *)v15 = 136446210;
    v20 = sub_21C203A90(v13, v14, &v21);
    sub_21C2487A4();
    _os_log_impl(&dword_21C1E3000, v10, v11, "Entry point received a host message stream but does not handle them: %{public}s", v15, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2207770EC](v16, -1, -1);
    MEMORY[0x2207770EC](v15, -1, -1);

    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v19);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  return 0;
}

uint64_t sub_21C204284(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  NSObject *v10;
  os_log_type_t v11;
  uint64_t v12;
  uint8_t *v13;
  uint64_t v14;
  uint64_t v16[3];
  uint64_t v17;

  v6 = sub_21C247CC4();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21C247CA0();
  v10 = sub_21C247CB8();
  v11 = sub_21C248720();
  if (os_log_type_enabled(v10, v11))
  {
    v16[0] = a2;
    v12 = swift_slowAlloc();
    v16[1] = a1;
    v13 = (uint8_t *)v12;
    v14 = swift_slowAlloc();
    v17 = v14;
    *(_DWORD *)v13 = 136446210;
    v16[2] = sub_21C203A90(v16[0], a3, &v17);
    sub_21C2487A4();
    _os_log_impl(&dword_21C1E3000, v10, v11, "Entry point received a shell message stream but does not handle them: %{public}s", v13, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2207770EC](v14, -1, -1);
    MEMORY[0x2207770EC](v13, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  sub_21C2470D0();
  sub_21C1FBD14(&qword_25524A608, (uint64_t (*)(uint64_t))MEMORY[0x24BE77240], MEMORY[0x24BE771D8]);
  return sub_21C2478A4();
}

uint64_t sub_21C204488()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;

  v0 = sub_21C247CC4();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21C247CA0();
  swift_retain();
  v4 = sub_21C247CB8();
  v5 = sub_21C248720();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc();
    v7 = swift_slowAlloc();
    v10 = v7;
    *(_DWORD *)v6 = 136446210;
    v9 = sub_21C203A90(0xD000000000000015, 0x800000021C24D4B0, &v10);
    sub_21C2487A4();
    swift_release();
    _os_log_impl(&dword_21C1E3000, v4, v5, "Entry point received an endpoint but does not handle them: %{public}s", v6, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2207770EC](v7, -1, -1);
    MEMORY[0x2207770EC](v6, -1, -1);

  }
  else
  {

    swift_release();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

uint64_t sub_21C204634()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;

  v0 = sub_21C247CC4();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21C247CA0();
  swift_retain();
  v4 = sub_21C247CB8();
  v5 = sub_21C248720();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc();
    v7 = swift_slowAlloc();
    v10 = v7;
    *(_DWORD *)v6 = 136446210;
    v9 = sub_21C203A90(0xD000000000000013, 0x800000021C24D4F0, &v10);
    sub_21C2487A4();
    swift_release();
    _os_log_impl(&dword_21C1E3000, v4, v5, "Entry point received an endpoint but does not handle them: %{public}s", v6, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2207770EC](v7, -1, -1);
    MEMORY[0x2207770EC](v6, -1, -1);

  }
  else
  {

    swift_release();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

uint64_t sub_21C2047E0(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  NSObject *v9;
  os_log_type_t v10;
  uint64_t v11;
  uint64_t v12;
  uint8_t *v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v5 = sub_21C247CC4();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21C247CA0();
  swift_retain();
  v9 = sub_21C247CB8();
  v10 = sub_21C248720();
  if (os_log_type_enabled(v9, v10))
  {
    v17 = v5;
    v11 = swift_slowAlloc();
    v16 = v6;
    v12 = a2;
    v13 = (uint8_t *)v11;
    v14 = swift_slowAlloc();
    v19 = v14;
    *(_DWORD *)v13 = 136446210;
    v18 = sub_21C203A90(v12, a3, &v19);
    sub_21C2487A4();
    swift_release();
    _os_log_impl(&dword_21C1E3000, v9, v10, "Entry point received an endpoint but does not handle them: %{public}s", v13, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2207770EC](v14, -1, -1);
    MEMORY[0x2207770EC](v13, -1, -1);

    return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v8, v17);
  }
  else
  {

    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
}

uint64_t sub_21C2049A0(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  NSObject *v9;
  os_log_type_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint8_t *v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v5 = sub_21C247CC4();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21C247CA0();
  v9 = sub_21C247CB8();
  v10 = sub_21C248720();
  if (os_log_type_enabled(v9, v10))
  {
    v11 = swift_slowAlloc();
    v18 = v5;
    v12 = a2;
    v13 = a3;
    v14 = (uint8_t *)v11;
    v15 = swift_slowAlloc();
    v20 = v15;
    *(_DWORD *)v14 = 136446210;
    v19 = sub_21C203A90(v12, v13, &v20);
    sub_21C2487A4();
    _os_log_impl(&dword_21C1E3000, v9, v10, "Entry point received an endpoint but does not handle them: %{public}s", v14, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2207770EC](v15, -1, -1);
    MEMORY[0x2207770EC](v14, -1, -1);

    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v18);
  }
  else
  {

    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
}

uint64_t sub_21C204B40()
{
  return sub_21C2488F4();
}

uint64_t sub_21C204B68(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  uint8_t *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  _QWORD v19[2];
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v4 = *(_QWORD *)(a2 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v6 = (char *)v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_21C247CC4();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21C247CA0();
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v2, a2);
  v11 = sub_21C247CB8();
  v12 = sub_21C248720();
  if (os_log_type_enabled(v11, v12))
  {
    v13 = swift_slowAlloc();
    v21 = v7;
    v14 = (uint8_t *)v13;
    v15 = swift_slowAlloc();
    v23 = v15;
    v20 = v8;
    *(_DWORD *)v14 = 136446210;
    v19[1] = v14 + 4;
    v16 = sub_21C2488F4();
    v22 = sub_21C203A90(v16, v17, &v23);
    sub_21C2487A4();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, a2);
    _os_log_impl(&dword_21C1E3000, v11, v12, "Entry point received an endpoint but does not handle them: %{public}s", v14, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2207770EC](v15, -1, -1);
    MEMORY[0x2207770EC](v14, -1, -1);

    return (*(uint64_t (**)(char *, uint64_t))(v20 + 8))(v10, v21);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, a2);

    return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
}

uint64_t type metadata accessor for AnyNonUIEntryPoint()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for AnySceneEntryPoint()
{
  return objc_opt_self();
}

uint64_t dispatch thunk of EntryPoint.handle(hostMessageStream:instance:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v9;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);

  v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(a4 + 32) + *(_QWORD *)(a4 + 32));
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v9;
  *v9 = v4;
  v9[1] = sub_21C205488;
  return v11(a1, a2, a3, a4);
}

uint64_t dispatch thunk of EntryPoint.handle(shellMessageStream:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);

  v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(a3 + 40) + *(_QWORD *)(a3 + 40));
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_21C1EBB98;
  return v9(a1, a2, a3);
}

uint64_t dispatch thunk of EntryPoint.handle(endpoint:context:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v9;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);

  v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(a4 + 48) + *(_QWORD *)(a4 + 48));
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v9;
  *v9 = v4;
  v9[1] = sub_21C1EBB98;
  return v11(a1, a2, a3, a4);
}

uint64_t dispatch thunk of static EntryPoint.decode(updatePayload:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 56))();
}

uint64_t dispatch thunk of static EntryPoint.encode(staticOutput:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 64))();
}

uint64_t dispatch thunk of EntryPoint.handleHostMessageStream(_:instance:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 72))();
}

uint64_t dispatch thunk of EntryPoint.handleShellMessageStream(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 80))();
}

uint64_t dispatch thunk of EntryPoint.handleEndpoint(_:context:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 88))();
}

uint64_t method lookup function for AnyNonUIEntryPoint()
{
  return swift_lookUpClassMethod();
}

uint64_t method lookup function for AnySceneEntryPoint()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of static NonUIEntryPointFactory.makeEntryPoint(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t sub_21C204FAC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_21C204FE8()
{
  uint64_t result;
  unint64_t v1;

  result = sub_21C247880();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_21C205050(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_21C247880();
  return (**(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8))(a1, a2, v4);
}

uint64_t sub_21C20508C(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_21C247880();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

uint64_t sub_21C2050C0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_21C247880();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t sub_21C205104(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_21C247880();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t sub_21C205148(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_21C247880();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t sub_21C20518C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_21C247880();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t sub_21C2051D0()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_21C2051DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_21C247880();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t sub_21C205218()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_21C205224(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_21C247880();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t type metadata accessor for UpdatePayloadError(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for UpdatePayloadError);
}

void sub_21C205270()
{
  JUMPOUT(0x22077702CLL);
}

void sub_21C205280()
{
  JUMPOUT(0x22077702CLL);
}

void sub_21C205290()
{
  JUMPOUT(0x22077702CLL);
}

uint64_t sub_21C2052A0()
{
  sub_21C24881C();
  sub_21C248504();
  sub_21C2489E4();
  sub_21C248504();
  swift_bridgeObjectRelease();
  sub_21C248504();
  swift_getAssociatedTypeWitness();
  sub_21C2489E4();
  sub_21C248504();
  swift_bridgeObjectRelease();
  return 0;
}

unint64_t sub_21C205398()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_25524A8B0;
  if (!qword_25524A8B0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25524A8A8);
    v2 = sub_21C1FBD14(&qword_25524A8B8, (uint64_t (*)(uint64_t))MEMORY[0x24BE77698], MEMORY[0x24BE77688]);
    result = MEMORY[0x22077702C](MEMORY[0x24BE77358], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_25524A8B0);
  }
  return result;
}

unint64_t sub_21C205414()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_25524A8E8[0];
  if (!qword_25524A8E8[0])
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25524A8E0);
    v2 = MEMORY[0x24BE76518];
    result = MEMORY[0x22077702C](MEMORY[0x24BE77358], v1, &v2);
    atomic_store(result, qword_25524A8E8);
  }
  return result;
}

uint64_t dispatch thunk of static SceneEntryPointFactory.makeEntryPoint(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return dispatch thunk of static NonUIEntryPointFactory.makeEntryPoint(for:)(a1, a2, a3);
}

uint64_t sub_21C205490(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4[4] = a3;
  v4[5] = a4;
  v4[2] = a1;
  v4[3] = a2;
  v5 = sub_21C247574();
  v4[6] = v5;
  v4[7] = *(_QWORD *)(v5 - 8);
  v4[8] = swift_task_alloc();
  v6 = sub_21C24716C();
  v4[9] = v6;
  v4[10] = *(_QWORD *)(v6 - 8);
  v4[11] = swift_task_alloc();
  v7 = sub_21C2472E0();
  v4[12] = v7;
  v4[13] = *(_QWORD *)(v7 - 8);
  v4[14] = swift_task_alloc();
  v8 = sub_21C247544();
  v4[15] = v8;
  v4[16] = *(_QWORD *)(v8 - 8);
  v4[17] = swift_task_alloc();
  v4[18] = sub_21C247214();
  v4[19] = swift_task_alloc();
  v9 = sub_21C247304();
  v4[20] = v9;
  v4[21] = *(_QWORD *)(v9 - 8);
  v4[22] = swift_task_alloc();
  v10 = sub_21C2470D0();
  v4[23] = v10;
  v4[24] = *(_QWORD *)(v10 - 8);
  v4[25] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_21C2055E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v1 = *(_QWORD *)(v0 + 152);
  v2 = *(_QWORD *)(v0 + 24);
  (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 168) + 16))(*(_QWORD *)(v0 + 176), *(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 160));
  sub_21C2470A0();
  sub_21C206430(v2, v1);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v3 = *(_QWORD *)(v0 + 152);
    v5 = *(_QWORD *)(v0 + 104);
    v4 = *(_QWORD *)(v0 + 112);
    v7 = *(_QWORD *)(v0 + 88);
    v6 = *(_QWORD *)(v0 + 96);
    v8 = *(_QWORD *)(v0 + 72);
    v9 = *(_QWORD *)(v0 + 80);
    v18 = *(_QWORD *)(v0 + 56);
    v19 = *(_QWORD *)(v0 + 48);
    v20 = *(_QWORD *)(v0 + 64);
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_25524AA88);
    v11 = v3 + *(int *)(v10 + 48);
    v12 = v3 + *(int *)(v10 + 64);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 32))(v4, v3, v6);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 32))(v7, v11, v8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 32))(v20, v12, v19);
    v13 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 208) = v13;
    *v13 = v0;
    v13[1] = sub_21C2057E4;
    return sub_21C235BD4(*(_QWORD *)(v0 + 200), *(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 88), *(_QWORD *)(v0 + 64));
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 128) + 32))(*(_QWORD *)(v0 + 136), *(_QWORD *)(v0 + 152), *(_QWORD *)(v0 + 120));
    sub_21C205914();
    v16 = *(_QWORD *)(v0 + 192);
    v15 = *(_QWORD *)(v0 + 200);
    v17 = *(_QWORD *)(v0 + 184);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 128) + 8))(*(_QWORD *)(v0 + 136), *(_QWORD *)(v0 + 120));
    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v15, v17);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_21C2057E4()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_21C205838()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = *(_QWORD *)(v0 + 80);
  v1 = *(_QWORD *)(v0 + 88);
  v3 = *(_QWORD *)(v0 + 72);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 56) + 8))(*(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 48));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  v5 = *(_QWORD *)(v0 + 192);
  v4 = *(_QWORD *)(v0 + 200);
  v6 = *(_QWORD *)(v0 + 184);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 104) + 8))(*(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 96));
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21C205914()
{
  uint64_t v0;

  v0 = sub_21C247CC4();
  MEMORY[0x24BDAC7A8](v0);
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25524AA90);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25524AA98);
  sub_21C20648C();
  sub_21C247A60();
  swift_release();
  swift_getObjectType();
  sub_21C24746C();
  return swift_unknownObjectRelease();
}

uint64_t sub_21C205C30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;

  v5[3] = a4;
  v5[4] = a5;
  v6 = sub_21C247CC4();
  v5[5] = v6;
  v5[6] = *(_QWORD *)(v6 - 8);
  v5[7] = swift_task_alloc();
  v7 = sub_21C2478C8();
  v5[8] = v7;
  v5[9] = *(_QWORD *)(v7 - 8);
  v5[10] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_21C205CB8()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 88) = v1;
  *v1 = v0;
  v1[1] = sub_21C205D10;
  return sub_21C246F98();
}

uint64_t sub_21C205D10()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 96) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_21C205D90()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  void *v6;
  uint8_t *v7;
  _QWORD *v8;
  id v9;
  uint64_t v10;
  void *v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;

  v1 = *(void **)(v0 + 96);
  sub_21C247CA0();
  v2 = v1;
  v3 = v1;
  v4 = sub_21C247CB8();
  v5 = sub_21C248720();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = *(void **)(v0 + 96);
    v7 = (uint8_t *)swift_slowAlloc();
    v8 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v7 = 138412290;
    v9 = v6;
    v10 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 16) = v10;
    sub_21C2487A4();
    *v8 = v10;

    _os_log_impl(&dword_21C1E3000, v4, v5, "Failed to attach transport to message pipe: %@", v7, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25524B630);
    swift_arrayDestroy();
    MEMORY[0x2207770EC](v8, -1, -1);
    MEMORY[0x2207770EC](v7, -1, -1);
  }
  else
  {
    v11 = *(void **)(v0 + 96);

  }
  v12 = *(void **)(v0 + 96);
  v14 = *(_QWORD *)(v0 + 72);
  v13 = *(_QWORD *)(v0 + 80);
  v15 = *(_QWORD *)(v0 + 64);
  v16 = *(_QWORD **)(v0 + 32);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 48) + 8))(*(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 40));
  __swift_project_boxed_opaque_existential_1(v16, v16[3]);
  sub_21C1FCA44();
  sub_21C2478B0();

  (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v13, v15);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t type metadata accessor for HostMessagePipeAgent()
{
  return objc_opt_self();
}

uint64_t sub_21C205FDC@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  unint64_t v15;
  char v16;
  uint64_t (*v17)(char *, uint64_t);
  uint64_t result;
  void (*v19)(char *, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char isUniquelyReferenced_nonNull_native;
  __int128 v24;
  __int128 v25;
  uint64_t v26;

  v7 = sub_21C24752C();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v25 - v12;
  sub_21C247538();
  v14 = *a1;
  if (*(_QWORD *)(*a1 + 16) && (v15 = sub_21C1F6610((uint64_t)v13), (v16 & 1) != 0))
  {
    v25 = *(_OWORD *)(*(_QWORD *)(v14 + 56) + 16 * v15);
    v17 = *(uint64_t (**)(char *, uint64_t))(v8 + 8);
    swift_unknownObjectRetain();
    result = v17(v13, v7);
    *a3 = v25;
  }
  else
  {
    *(_QWORD *)&v25 = a3;
    v19 = *(void (**)(char *, uint64_t))(v8 + 8);
    v19(v13, v7);
    result = sub_21C2064D8(a2);
    if (!v3)
    {
      v21 = result;
      v22 = v20;
      sub_21C247538();
      swift_unknownObjectRetain();
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v26 = *a1;
      *a1 = 0x8000000000000000;
      sub_21C1F9F68(v21, v22, (uint64_t)v11, isUniquelyReferenced_nonNull_native);
      *a1 = v26;
      swift_bridgeObjectRelease();
      result = ((uint64_t (*)(char *, uint64_t))v19)(v11, v7);
      *(_QWORD *)&v24 = v21;
      *((_QWORD *)&v24 + 1) = v22;
      *(_OWORD *)v25 = v24;
    }
  }
  return result;
}

BOOL sub_21C206178(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t sub_21C20618C()
{
  sub_21C2489A8();
  sub_21C2489B4();
  return sub_21C2489C0();
}

uint64_t sub_21C2061D0()
{
  return sub_21C2489B4();
}

uint64_t sub_21C2061F8()
{
  sub_21C2489A8();
  sub_21C2489B4();
  return sub_21C2489C0();
}

unint64_t sub_21C206238()
{
  uint64_t v0;
  uint64_t AgentError;
  unint64_t v3;

  AgentError = type metadata accessor for AgentCache.CreateAgentError();
  if (!*(_BYTE *)(v0 + *(int *)(AgentError + 20)))
    return 0xD00000000000001FLL;
  if (*(_BYTE *)(v0 + *(int *)(AgentError + 20)) == 1)
  {
    sub_21C24881C();
    swift_bridgeObjectRelease();
    v3 = 0xD000000000000010;
  }
  else
  {
    v3 = 0;
    sub_21C24881C();
    sub_21C248504();
  }
  sub_21C247514();
  sub_21C248504();
  swift_bridgeObjectRelease();
  sub_21C248504();
  return v3;
}

unint64_t sub_21C206370()
{
  return 0xD000000000000025;
}

uint64_t sub_21C206390()
{
  sub_21C1FBD14(qword_25524AAB0, (uint64_t (*)(uint64_t))type metadata accessor for AgentCache.CreateAgentError, (uint64_t)&unk_21C24A1D0);
  return sub_21C24794C();
}

uint64_t sub_21C2063D0()
{
  sub_21C1FBD14(qword_25524AAB0, (uint64_t (*)(uint64_t))type metadata accessor for AgentCache.CreateAgentError, (uint64_t)&unk_21C24A1D0);
  return sub_21C24791C();
}

uint64_t type metadata accessor for AgentCache()
{
  return objc_opt_self();
}

uint64_t sub_21C206430(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_21C247214();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_21C206474@<X0>(uint64_t *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v2;

  return sub_21C205FDC(a1, *(_QWORD *)(v2 + 16), a2);
}

unint64_t sub_21C20648C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_25524AAA0;
  if (!qword_25524AAA0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25524AA90);
    result = MEMORY[0x22077702C](MEMORY[0x24BE76C78], v1);
    atomic_store(result, (unint64_t *)&qword_25524AAA0);
  }
  return result;
}

uint64_t sub_21C2064D8(uint64_t a1)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t AgentError;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  id v12;
  id v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  void *v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD v29[3];
  uint64_t v30;
  char *v31;

  v3 = sub_21C247544();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v29[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_21C247880();
  MEMORY[0x24BDAC7A8](v7);
  AgentError = type metadata accessor for AgentCache.CreateAgentError();
  MEMORY[0x24BDAC7A8](AgentError);
  v10 = (char *)&v29[-1] - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21C247508();
  if (v11)
  {
    v31 = v6;
    v12 = sub_21C1FBEBC();
    if (v1)
    {
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v10, a1, v3);
      v10[*(int *)(AgentError + 20)] = 0;
      v13 = v1;
      sub_21C1FBD14(qword_25524AAB0, (uint64_t (*)(uint64_t))type metadata accessor for AgentCache.CreateAgentError, (uint64_t)&unk_21C24A1D0);
      sub_21C247940();

      sub_21C2068C0((uint64_t)v10);
      v14 = v30;
      v15 = __swift_project_boxed_opaque_existential_1(v29, v30);
      v16 = *(_QWORD *)(v14 - 8);
      MEMORY[0x24BDAC7A8](v15);
      v18 = (char *)&v29[-1] - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *))(v16 + 16))(v18);
      if (sub_21C248900())
      {
        (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v14);
      }
      else
      {
        swift_allocError();
        (*(void (**)(uint64_t, char *, uint64_t))(v16 + 32))(v26, v18, v14);
      }
      swift_willThrow();

      return __swift_destroy_boxed_opaque_existential_1((uint64_t)v29);
    }
    v19 = v12;
    swift_bridgeObjectRelease();

    v6 = v31;
  }
  sub_21C247514();
  v20 = sub_21C248834();
  swift_bridgeObjectRelease();
  if (v20)
  {
    if (!swift_conformsToProtocol2())
      v20 = 0;
    if (v20)
    {
      sub_21C247520();
      return sub_21C247478();
    }
    (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, a1, v3);
    sub_21C1FBD14(&qword_25524AAA8, (uint64_t (*)(uint64_t))type metadata accessor for AgentCache.CreateAgentError, (uint64_t)&unk_21C24A268);
    swift_allocError();
    v23 = v27;
    (*(void (**)(uint64_t, char *, uint64_t))(v4 + 32))(v27, v6, v3);
    v24 = *(int *)(AgentError + 20);
    v25 = 2;
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, a1, v3);
    sub_21C1FBD14(&qword_25524AAA8, (uint64_t (*)(uint64_t))type metadata accessor for AgentCache.CreateAgentError, (uint64_t)&unk_21C24A268);
    swift_allocError();
    v23 = v22;
    (*(void (**)(uint64_t, char *, uint64_t))(v4 + 32))(v22, v6, v3);
    v24 = *(int *)(AgentError + 20);
    v25 = 1;
  }
  *(_BYTE *)(v23 + v24) = v25;
  return swift_willThrow();
}

uint64_t type metadata accessor for AgentCache.CreateAgentError()
{
  uint64_t result;

  result = qword_25524AB10;
  if (!qword_25524AB10)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_21C2068C0(uint64_t a1)
{
  uint64_t AgentError;

  AgentError = type metadata accessor for AgentCache.CreateAgentError();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(AgentError - 8) + 8))(a1, AgentError);
  return a1;
}

_QWORD *sub_21C2068FC(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_21C247544();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    *((_BYTE *)a1 + *(int *)(a3 + 20)) = *((_BYTE *)a2 + *(int *)(a3 + 20));
  }
  return a1;
}

uint64_t sub_21C206984(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_21C247544();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

uint64_t sub_21C2069B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_21C247544();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_21C206A14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_21C247544();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_21C206A70(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_21C247544();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_21C206ACC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_21C247544();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_21C206B28()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_21C206B34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unsigned int v9;

  v6 = sub_21C247544();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 3)
    return v9 - 2;
  else
    return 0;
}

uint64_t sub_21C206BAC()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_21C206BB8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_21C247544();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_BYTE *)(a1 + *(int *)(a4 + 20)) = a2 + 2;
  return result;
}

uint64_t sub_21C206C30()
{
  uint64_t result;
  unint64_t v1;

  result = sub_21C247544();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_21C206CA0()
{
  return sub_21C1FBD14(&qword_25524AAA8, (uint64_t (*)(uint64_t))type metadata accessor for AgentCache.CreateAgentError, (uint64_t)&unk_21C24A268);
}

uint64_t sub_21C206CCC()
{
  return sub_21C1FBD14(&qword_25524AB48, (uint64_t (*)(uint64_t))type metadata accessor for AgentCache.CreateAgentError, (uint64_t)&unk_21C24A188);
}

uint64_t sub_21C206CF8()
{
  return sub_21C1FBD14(&qword_25524AB50, (uint64_t (*)(uint64_t))type metadata accessor for AgentCache.CreateAgentError, (uint64_t)&unk_21C24A160);
}

_BYTE *__swift_memcpy1_1(_BYTE *result, _BYTE *a2)
{
  *result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for AgentCache.CreateAgentError.Reason(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFE)
    goto LABEL_17;
  if (a2 + 2 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 2) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 2;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 2;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 2;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 3;
  v8 = v6 - 3;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for AgentCache.CreateAgentError.Reason(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_21C206E0C + 4 * byte_21C24A0C5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_21C206E40 + 4 * byte_21C24A0C0[v4]))();
}

uint64_t sub_21C206E40(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_21C206E48(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x21C206E50);
  return result;
}

uint64_t sub_21C206E5C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x21C206E64);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_21C206E68(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_21C206E70(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_21C206E7C(unsigned __int8 *a1)
{
  return *a1;
}

_BYTE *sub_21C206E84(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

ValueMetadata *type metadata accessor for AgentCache.CreateAgentError.Reason()
{
  return &type metadata for AgentCache.CreateAgentError.Reason;
}

unint64_t sub_21C206EA0()
{
  unint64_t result;

  result = qword_25524AB58;
  if (!qword_25524AB58)
  {
    result = MEMORY[0x22077702C](&unk_21C24A2F0, &type metadata for AgentCache.CreateAgentError.Reason);
    atomic_store(result, (unint64_t *)&qword_25524AB58);
  }
  return result;
}

uint64_t sub_21C206EE4(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v2[2] = a1;
  v2[3] = v1;
  v3 = sub_21C247CC4();
  v2[4] = v3;
  v2[5] = *(_QWORD *)(v3 - 8);
  v2[6] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_21C206F44()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 56) = v1;
  *v1 = v0;
  v1[1] = sub_21C206F98;
  return sub_21C207180(*(_QWORD *)(v0 + 16));
}

uint64_t sub_21C206F98(char a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;

  v4 = *v2;
  v5 = *v2;
  swift_task_dealloc();
  if (v1)
  {
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v5 + 8))();
  }
  else
  {
    *(_BYTE *)(v4 + 72) = a1 & 1;
    return swift_task_switch();
  }
}

uint64_t sub_21C207020()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  uint8_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  if (*(_BYTE *)(v0 + 72) == 1)
  {
    sub_21C247CA0();
    v1 = sub_21C247CB8();
    v2 = sub_21C248714();
    if (os_log_type_enabled(v1, v2))
    {
      v3 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v3 = 0;
      _os_log_impl(&dword_21C1E3000, v1, v2, "Loaded new products; will clear caches", v3, 2u);
      MEMORY[0x2207770EC](v3, -1, -1);
    }
    v5 = *(_QWORD *)(v0 + 40);
    v4 = *(_QWORD *)(v0 + 48);
    v6 = *(_QWORD *)(v0 + 32);

    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
    v7 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 64) = v7;
    *v7 = v0;
    v7[1] = sub_21C207130;
    return sub_21C1F0CCC();
  }
  else
  {
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_21C207130()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_21C207180(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v2[2] = a1;
  v2[3] = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25524A598);
  v2[4] = swift_task_alloc();
  v3 = sub_21C2473B8();
  v2[5] = v3;
  v2[6] = *(_QWORD *)(v3 - 8);
  v2[7] = swift_task_alloc();
  v2[8] = swift_task_alloc();
  sub_21C24863C();
  v2[9] = sub_21C248630();
  sub_21C2485E8();
  return swift_task_switch();
}

uint64_t sub_21C207248()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  unsigned __int8 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 v12;
  uint64_t v13;
  unsigned __int8 v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t, uint64_t);

  v1 = *(_QWORD *)(v0 + 40);
  v2 = *(_QWORD *)(v0 + 48);
  v3 = *(_QWORD *)(v0 + 32);
  v4 = *(_QWORD *)(v0 + 16);
  swift_release();
  sub_21C208AD0(v4, v3);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_21C208B18(*(_QWORD *)(v0 + 32));
    v5 = 0;
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 48) + 32))(*(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40));
    v6 = sub_21C247394();
    v7 = sub_21C2073FC(v6);
    v8 = *(_QWORD *)(v0 + 56);
    v9 = *(_QWORD *)(v0 + 64);
    v10 = *(_QWORD *)(v0 + 40);
    v11 = *(_QWORD *)(v0 + 48);
    v12 = v7;
    swift_bridgeObjectRelease();
    v13 = sub_21C2473AC();
    v14 = sub_21C207E7C(v13);
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16))(v8, v9, v10);
    if (((v12 | v14) & 1) != 0)
      v5 = 1;
    else
      v5 = sub_21C2473A0();
    v15 = *(_QWORD *)(v0 + 64);
    v16 = *(_QWORD *)(v0 + 40);
    v17 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 + 48) + 8);
    v17(*(_QWORD *)(v0 + 56), v16);
    v17(v15, v16);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(v5 & 1);
}

uint64_t sub_21C2073FC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  unint64_t v28;
  __int128 v29;
  void (*v30)(char *, uint64_t);
  char *v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  id v36;
  id v37;
  char *v38;
  char *v39;
  void (*v40)(char *, uint64_t);
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  int v46;
  id v47;
  void *v48;
  id v49;
  id v50;
  os_log_type_t v51;
  int v52;
  uint64_t v53;
  id v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  unint64_t v59;
  char *v60;
  uint64_t v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  __int128 v75;
  char *v76;
  int v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  int v81;
  int v82;
  char *v83;
  char *v84;
  char *v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  int v93;
  int v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  void (*v101)(char *, unint64_t, uint64_t);
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;

  v4 = v2;
  v5 = v1;
  v79 = sub_21C247CC4();
  v78 = *(_QWORD *)(v79 - 8);
  MEMORY[0x24BDAC7A8](v79);
  v8 = (char *)&v71 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_21C24749C();
  v96 = *(_QWORD *)(v9 - 8);
  v97 = v9;
  MEMORY[0x24BDAC7A8](v9);
  v95 = (char *)&v71 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_21C246D28();
  v87 = *(_QWORD *)(v11 - 8);
  v88 = v11;
  v12 = MEMORY[0x24BDAC7A8](v11);
  v86 = (char *)&v71 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x24BDAC7A8](v12);
  v85 = (char *)&v71 - v15;
  MEMORY[0x24BDAC7A8](v14);
  v84 = (char *)&v71 - v16;
  v17 = sub_21C2474E4();
  v99 = *(_QWORD *)(v17 - 8);
  v100 = v17;
  v18 = MEMORY[0x24BDAC7A8](v17);
  v76 = (char *)&v71 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v18);
  v98 = (char *)&v71 - v20;
  v21 = sub_21C2474FC();
  v22 = *(_QWORD *)(v21 - 8);
  v23 = MEMORY[0x24BDAC7A8](v21);
  v83 = (char *)&v71 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v23);
  v26 = (char *)&v71 - v25;
  v27 = *(_QWORD *)(a1 + 16);
  if (v27)
  {
    v80 = v8;
    v72 = v5;
    v28 = a1 + ((*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80));
    v94 = *MEMORY[0x24BE77D70];
    v82 = *MEMORY[0x24BE77D68];
    v93 = *MEMORY[0x24BE77D28];
    v81 = *MEMORY[0x24BE77D30];
    v77 = *MEMORY[0x24BE77D20];
    v91 = *(_QWORD *)(v22 + 72);
    v101 = *(void (**)(char *, unint64_t, uint64_t))(v22 + 16);
    v73 = a1;
    swift_bridgeObjectRetain();
    *(_QWORD *)&v29 = 136446466;
    v75 = v29;
    v74 = MEMORY[0x24BEE4AD8] + 8;
    v89 = v21;
    v92 = v22;
    while (1)
    {
      v104 = v27;
      v101(v26, v28, v21);
      v31 = v98;
      sub_21C2474F0();
      v32 = (*(uint64_t (**)(char *, uint64_t))(v99 + 88))(v31, v100);
      if (v32 == v94)
      {
        v102 = sub_21C2474D8();
        v34 = v33;
        sub_21C247490();
        v35 = (void *)sub_21C24848C();
        swift_bridgeObjectRelease();
      }
      else
      {
        if (v32 != v82)
        {
          swift_bridgeObjectRelease();
          sub_21C2478D4();
          sub_21C247A30();
          sub_21C1FBD14(&qword_25524AC28, (uint64_t (*)(uint64_t))MEMORY[0x24BE769E0], MEMORY[0x24BE769E8]);
          swift_allocError();
          sub_21C247A24();
          swift_willThrow();
          (*(void (**)(char *, uint64_t))(v22 + 8))(v26, v21);
          (*(void (**)(char *, uint64_t))(v99 + 8))(v98, v100);
          return v3 & 1;
        }
        v36 = objc_msgSend((id)objc_opt_self(), sel_mainBundle);
        v37 = objc_msgSend(v36, sel_bundleURL);

        v38 = v85;
        sub_21C246D04();

        v39 = v84;
        sub_21C246CBC();
        v90 = v4;
        v40 = *(void (**)(char *, uint64_t))(v87 + 8);
        v3 = (uint64_t)v26;
        v41 = v88;
        v40(v38, v88);
        sub_21C2474D8();
        v42 = v86;
        sub_21C246CEC();
        swift_bridgeObjectRelease();
        v102 = sub_21C246D1C();
        v34 = v43;
        v40(v42, v41);
        sub_21C247490();
        sub_21C246CEC();
        swift_bridgeObjectRelease();
        sub_21C246D1C();
        v40(v42, v41);
        v35 = (void *)sub_21C24848C();
        swift_bridgeObjectRelease();
        v44 = v41;
        v26 = (char *)v3;
        v40(v39, v44);
        v21 = v89;
        v4 = v90;
      }
      v45 = v95;
      sub_21C2474A8();
      v46 = (*(uint64_t (**)(char *, uint64_t))(v96 + 88))(v45, v97);
      if (v46 == v93)
        break;
      if (v46 == v81)
        goto LABEL_14;
      if (v46 != v77)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_21C2478D4();
        sub_21C247A30();
        sub_21C1FBD14(&qword_25524AC28, (uint64_t (*)(uint64_t))MEMORY[0x24BE769E0], MEMORY[0x24BE769E8]);
        swift_allocError();
        sub_21C247A24();
        swift_willThrow();

        (*(void (**)(char *, uint64_t))(v92 + 8))(v26, v21);
        (*(void (**)(char *, uint64_t))(v96 + 8))(v95, v97);
        return v3 & 1;
      }
      swift_bridgeObjectRelease();
      sub_21C247CAC();
      v101(v83, (unint64_t)v26, v21);
      v50 = v35;
      v3 = sub_21C247CB8();
      v51 = sub_21C248714();
      v52 = v51;
      if (os_log_type_enabled((os_log_t)v3, v51))
      {
        v53 = swift_slowAlloc();
        v102 = swift_slowAlloc();
        v103 = v102;
        *(_DWORD *)v53 = v75;
        v54 = objc_msgSend(v50, sel_lastPathComponent);
        v55 = sub_21C248498();
        LODWORD(v90) = v52;
        v56 = v55;
        v57 = v4;
        v59 = v58;

        *(_QWORD *)(v53 + 4) = sub_21C203A90(v56, v59, &v103);
        v4 = v57;
        swift_bridgeObjectRelease();
        *(_WORD *)(v53 + 12) = 2080;
        v60 = v83;
        sub_21C2474F0();
        v61 = sub_21C2484E0();
        *(_QWORD *)(v53 + 14) = sub_21C203A90(v61, v62, &v103);
        swift_bridgeObjectRelease();
        v22 = v92;
        v30 = *(void (**)(char *, uint64_t))(v92 + 8);
        v30(v60, v89);
        _os_log_impl(&dword_21C1E3000, (os_log_t)v3, (os_log_type_t)v90, "ProductLoader NOT loading %{public}s because XOJIT has already loaded it from the shell (%s)", (uint8_t *)v53, 0x16u);
        v63 = v102;
        swift_arrayDestroy();
        MEMORY[0x2207770EC](v63, -1, -1);
        v64 = v53;
        v21 = v89;
        MEMORY[0x2207770EC](v64, -1, -1);

      }
      else
      {

        v22 = v92;
        v30 = *(void (**)(char *, uint64_t))(v92 + 8);
        v30(v83, v21);

      }
      (*(void (**)(char *, uint64_t))(v78 + 8))(v80, v79);
      v30(v26, v21);
LABEL_5:
      v28 += v91;
      v27 = v104 - 1;
      if (v104 == 1)
      {
        a1 = v73;
        swift_bridgeObjectRelease();
        v5 = v72;
        goto LABEL_20;
      }
    }
    v47 = objc_allocWithZone(MEMORY[0x24BDD1488]);
    swift_bridgeObjectRetain();
    v3 = v102;
    v48 = (void *)sub_21C24848C();
    swift_bridgeObjectRelease();
    v49 = objc_msgSend(v47, sel_initWithPath_, v48);

    if (!v49)
    {
      swift_bridgeObjectRelease();
      sub_21C2095E4();
      swift_allocError();
      *(_QWORD *)v69 = v3;
      *(_QWORD *)(v69 + 8) = v34;
      *(_QWORD *)(v69 + 16) = 0;
      *(_QWORD *)(v69 + 24) = 0;
      *(_BYTE *)(v69 + 32) = 0;
      swift_willThrow();

      (*(void (**)(char *, uint64_t))(v92 + 8))(v26, v21);
      return v3 & 1;
    }
LABEL_14:
    swift_bridgeObjectRelease();
    sub_21C208EB4(v35, (uint64_t)v26);
    if (v4)
    {

      (*(void (**)(char *, uint64_t))(v92 + 8))(v26, v21);
      swift_bridgeObjectRelease();
      return v3 & 1;
    }

    v22 = v92;
    (*(void (**)(char *, uint64_t))(v92 + 8))(v26, v21);
    goto LABEL_5;
  }
LABEL_20:
  if ((*(_BYTE *)(v5 + 16) & 1) == 0)
  {
    sub_21C248198();
    *(_BYTE *)(v5 + 16) = 1;
  }
  v103 = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25524AC30);
  sub_21C209598();
  sub_21C1FBD14(&qword_25524AC40, (uint64_t (*)(uint64_t))MEMORY[0x24BE77D88], MEMORY[0x24BE77D98]);
  v65 = sub_21C2486F0();
  swift_beginAccess();
  v66 = swift_bridgeObjectRetain();
  v67 = sub_21C208364(v66, v65);
  swift_bridgeObjectRelease();
  LOBYTE(v3) = v67 ^ 1;
  swift_beginAccess();
  v68 = swift_bridgeObjectRetain();
  sub_21C2088AC(v68);
  swift_endAccess();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

uint64_t sub_21C207E7C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  _QWORD *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  char isUniquelyReferenced_nonNull_native;
  char v29;
  unint64_t v30;
  uint64_t v31;
  _BOOL8 v32;
  uint64_t v33;
  char v34;
  unint64_t v35;
  char v36;
  uint64_t *v37;
  uint64_t v38;
  __int128 v39;
  __int128 v40;
  uint64_t v41;
  BOOL v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  uint64_t result;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  void (*v55)(char *, uint64_t);
  uint64_t v56;
  uint64_t v57;
  void (*v58)(char *, uint64_t, uint64_t);
  _QWORD *v59;
  __int128 v60;
  __int128 v61;
  uint64_t v62;
  _QWORD v63[5];
  __int128 v64;
  __int128 v65;
  uint64_t v66;

  v54 = sub_21C247880();
  v53 = *(_QWORD *)(v54 - 8);
  MEMORY[0x24BDAC7A8](v54);
  v4 = (char *)&v48 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_21C247448();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v48 - v9;
  v11 = *(_QWORD *)(a1 + 16);
  if (v11)
  {
    v52 = v8;
    v49 = v1;
    v63[0] = MEMORY[0x24BEE4AF8];
    sub_21C1E6E8C(0, v11, 0);
    v12 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
    v50 = a1;
    v13 = a1 + v12;
    v56 = *(_QWORD *)(v6 + 72);
    v57 = v5;
    v58 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
    v14 = v13;
    v15 = v11;
    v51 = v6;
    do
    {
      v58(v10, v14, v5);
      sub_21C247424();
      v16 = sub_21C24785C();
      (*(void (**)(char *, uint64_t))(v53 + 8))(v4, v54);
      v55 = *(void (**)(char *, uint64_t))(v6 + 8);
      v55(v10, v5);
      v17 = v63[0];
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_21C1E6E8C(0, *(_QWORD *)(v17 + 16) + 1, 1);
        v17 = v63[0];
      }
      v19 = *(_QWORD *)(v17 + 16);
      v18 = *(_QWORD *)(v17 + 24);
      if (v19 >= v18 >> 1)
      {
        sub_21C1E6E8C(v18 > 1, v19 + 1, 1);
        v17 = v63[0];
      }
      *(_QWORD *)(v17 + 16) = v19 + 1;
      *(_QWORD *)(v17 + 8 * v19 + 32) = v16;
      v5 = v57;
      v14 += v56;
      --v15;
      v6 = v51;
    }
    while (v15);
    sub_21C24818C();
    swift_bridgeObjectRelease();
    v20 = (_QWORD *)sub_21C1EC0C4(MEMORY[0x24BEE4AF8]);
    swift_bridgeObjectRetain();
    v21 = v52;
    while (1)
    {
      v58(v21, v13, v5);
      v22 = sub_21C247430();
      v24 = v23;
      sub_21C24743C();
      v25 = __swift_project_boxed_opaque_existential_1(v63, v63[3]);
      MEMORY[0x24BDAC7A8](v25);
      (*(void (**)(char *))(v27 + 16))((char *)&v48 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0));
      sub_21C2487EC();
      v60 = v64;
      v61 = v65;
      v62 = v66;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v59 = v20;
      v30 = sub_21C1F63E4(v22, v24);
      v31 = v20[2];
      v32 = (v29 & 1) == 0;
      v33 = v31 + v32;
      if (__OFADD__(v31, v32))
        break;
      v34 = v29;
      if (v20[3] >= v33)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          sub_21C1FAF0C();
      }
      else
      {
        sub_21C1F79F8(v33, isUniquelyReferenced_nonNull_native);
        v35 = sub_21C1F63E4(v22, v24);
        if ((v34 & 1) != (v36 & 1))
          goto LABEL_25;
        v30 = v35;
      }
      v5 = v57;
      v20 = v59;
      if ((v34 & 1) != 0)
      {
        sub_21C208DFC((uint64_t)&v60, v59[7] + 40 * v30);
      }
      else
      {
        v59[(v30 >> 6) + 8] |= 1 << v30;
        v37 = (uint64_t *)(v20[6] + 16 * v30);
        *v37 = v22;
        v37[1] = v24;
        v38 = v20[7] + 40 * v30;
        v39 = v60;
        v40 = v61;
        *(_QWORD *)(v38 + 32) = v62;
        *(_OWORD *)v38 = v39;
        *(_OWORD *)(v38 + 16) = v40;
        v41 = v20[2];
        v42 = __OFADD__(v41, 1);
        v43 = v41 + 1;
        if (v42)
          goto LABEL_24;
        v20[2] = v43;
        swift_bridgeObjectRetain();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v63);
      v21 = v52;
      v55(v52, v5);
      v13 += v56;
      if (!--v11)
      {
        swift_bridgeObjectRelease();
        v1 = v49;
        goto LABEL_22;
      }
    }
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    result = sub_21C248948();
    __break(1u);
  }
  else
  {
    v44 = MEMORY[0x24BEE4AF8];
    sub_21C24818C();
    swift_bridgeObjectRelease();
    v20 = (_QWORD *)sub_21C1EC0C4(v44);
LABEL_22:
    v45 = swift_bridgeObjectRetain();
    v46 = sub_21C208B58(v45, (uint64_t)v20);
    swift_bridgeObjectRelease();
    *(_QWORD *)(v1 + 32) = v20;
    swift_bridgeObjectRelease();
    return (v46 & 1) == 0;
  }
  return result;
}

uint64_t sub_21C208364(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t result;
  int64_t v19;
  unint64_t i;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  void (*v28)(char *, unint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  char v33;
  void (*v34)(char *, uint64_t);
  uint64_t v35;
  char *v36;
  uint64_t v37;
  int64_t v38;
  uint64_t v39;
  int64_t v40;
  uint64_t v41;
  int64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;

  v4 = sub_21C2474FC();
  v46 = *(_QWORD **)(v4 - 8);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x24BDAC7A8](v5);
  v10 = (char *)&v35 - v9;
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v35 - v11;
  if (*(_QWORD *)(a1 + 16) < *(_QWORD *)(a2 + 16))
    return 0;
  v14 = *(_QWORD *)(a2 + 56);
  v44 = a2 + 56;
  v15 = -1 << *(_BYTE *)(a2 + 32);
  v37 = ~v15;
  if (-v15 < 64)
    v16 = ~(-1 << -(char)v15);
  else
    v16 = -1;
  v17 = v16 & v14;
  v38 = (unint64_t)(63 - v15) >> 6;
  v45 = a1 + 56;
  result = swift_bridgeObjectRetain();
  v19 = 0;
  v41 = a2;
  v36 = v12;
  v42 = 0;
  v43 = v17;
  if (!v17)
    goto LABEL_8;
LABEL_7:
  v39 = (v17 - 1) & v17;
  v40 = v19;
  for (i = __clz(__rbit64(v17)) | (v19 << 6); ; i = __clz(__rbit64(v22)) + (v23 << 6))
  {
    v25 = *(_QWORD *)(a2 + 48);
    v26 = v46;
    v27 = v46[9];
    v28 = (void (*)(char *, unint64_t, uint64_t))v46[2];
    v28(v12, v25 + v27 * i, v4);
    ((void (*)(char *, char *, uint64_t))v26[4])(v10, v12, v4);
    if (!*(_QWORD *)(a1 + 16)
      || (sub_21C1FBD14(&qword_25524AC40, (uint64_t (*)(uint64_t))MEMORY[0x24BE77D88], MEMORY[0x24BE77D98]),
          v29 = sub_21C248474(),
          v30 = -1 << *(_BYTE *)(a1 + 32),
          v31 = v29 & ~v30,
          ((*(_QWORD *)(v45 + ((v31 >> 3) & 0xFFFFFFFFFFFFF8)) >> v31) & 1) == 0))
    {
      v34 = (void (*)(char *, uint64_t))v46[1];
LABEL_31:
      v34(v10, v4);
      v13 = 0;
      goto LABEL_32;
    }
    v32 = ~v30;
    while (1)
    {
      v28(v7, *(_QWORD *)(a1 + 48) + v31 * v27, v4);
      sub_21C1FBD14(&qword_25524AC50, (uint64_t (*)(uint64_t))MEMORY[0x24BE77D88], MEMORY[0x24BE77DA0]);
      v33 = sub_21C248480();
      v34 = (void (*)(char *, uint64_t))v46[1];
      v34(v7, v4);
      if ((v33 & 1) != 0)
        break;
      v31 = (v31 + 1) & v32;
      if (((*(_QWORD *)(v45 + ((v31 >> 3) & 0xFFFFFFFFFFFFF8)) >> v31) & 1) == 0)
        goto LABEL_31;
    }
    result = ((uint64_t (*)(char *, uint64_t))v34)(v10, v4);
    v17 = v39;
    v19 = v40;
    a2 = v41;
    v12 = v36;
    v42 = v40;
    v43 = v39;
    if (v39)
      goto LABEL_7;
LABEL_8:
    v21 = v19 + 1;
    if (__OFADD__(v19, 1))
    {
      __break(1u);
      goto LABEL_36;
    }
    if (v21 >= v38)
      goto LABEL_34;
    v22 = *(_QWORD *)(v44 + 8 * v21);
    v23 = v19 + 1;
    if (!v22)
    {
      v23 = v19 + 2;
      if (v19 + 2 >= v38)
        goto LABEL_34;
      v22 = *(_QWORD *)(v44 + 8 * v23);
      if (!v22)
      {
        v23 = v19 + 3;
        if (v19 + 3 >= v38)
          goto LABEL_34;
        v22 = *(_QWORD *)(v44 + 8 * v23);
        if (!v22)
          break;
      }
    }
LABEL_21:
    v39 = (v22 - 1) & v22;
    v40 = v23;
  }
  v24 = v19 + 4;
  if (v19 + 4 >= v38)
  {
LABEL_34:
    v13 = 1;
LABEL_32:
    sub_21C209628();
    return v13;
  }
  v22 = *(_QWORD *)(v44 + 8 * v24);
  if (v22)
  {
    v23 = v19 + 4;
    goto LABEL_21;
  }
  while (1)
  {
    v23 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v23 >= v38)
      goto LABEL_34;
    v22 = *(_QWORD *)(v44 + 8 * v23);
    ++v24;
    if (v22)
      goto LABEL_21;
  }
LABEL_36:
  __break(1u);
  return result;
}

uint64_t sub_21C208714()
{
  __int128 *v0;
  uint64_t v2;
  uint64_t v3;
  char v4;

  sub_21C2098D8(v0, (uint64_t)&v3);
  if ((v4 & 1) != 0)
  {
    sub_21C24881C();
    swift_bridgeObjectRelease();
    v2 = 0x1000000000000022;
    sub_21C248504();
  }
  else
  {
    sub_21C24881C();
    swift_bridgeObjectRelease();
    v2 = 0x1000000000000024;
  }
  sub_21C248504();
  sub_21C248504();
  return v2;
}

uint64_t sub_21C20882C()
{
  __int128 *v0;
  _BYTE v2[40];

  sub_21C2098D8(v0, (uint64_t)v2);
  return sub_21C208714();
}

uint64_t sub_21C208860()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for DynamicProductLoader()
{
  return objc_opt_self();
}

uint64_t sub_21C2088AC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t result;
  uint64_t v11;
  char *v12;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  uint64_t v24;
  uint64_t v25;

  v2 = sub_21C2474FC();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x24BDAC7A8](v4);
  v9 = (char *)&v24 - v8;
  result = MEMORY[0x24BDAC7A8](v7);
  v12 = (char *)&v24 - v11;
  v13 = 0;
  v14 = *(_QWORD *)(a1 + 56);
  v25 = a1 + 56;
  v15 = 1 << *(_BYTE *)(a1 + 32);
  v16 = -1;
  if (v15 < 64)
    v16 = ~(-1 << v15);
  v17 = v16 & v14;
  v18 = (unint64_t)(v15 + 63) >> 6;
  while (1)
  {
    if (v17)
    {
      v19 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      v20 = v19 | (v13 << 6);
      goto LABEL_5;
    }
    v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v21 >= v18)
      return swift_release();
    v22 = *(_QWORD *)(v25 + 8 * v21);
    ++v13;
    if (!v22)
    {
      v13 = v21 + 1;
      if (v21 + 1 >= v18)
        return swift_release();
      v22 = *(_QWORD *)(v25 + 8 * v13);
      if (!v22)
      {
        v13 = v21 + 2;
        if (v21 + 2 >= v18)
          return swift_release();
        v22 = *(_QWORD *)(v25 + 8 * v13);
        if (!v22)
        {
          v13 = v21 + 3;
          if (v21 + 3 >= v18)
            return swift_release();
          v22 = *(_QWORD *)(v25 + 8 * v13);
          if (!v22)
            break;
        }
      }
    }
LABEL_22:
    v17 = (v22 - 1) & v22;
    v20 = __clz(__rbit64(v22)) + (v13 << 6);
LABEL_5:
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v12, *(_QWORD *)(a1 + 48) + *(_QWORD *)(v3 + 72) * v20, v2);
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v6, v12, v2);
    sub_21C239DA4((uint64_t)v9, v6);
    result = (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v9, v2);
  }
  v23 = v21 + 4;
  if (v23 >= v18)
    return swift_release();
  v22 = *(_QWORD *)(v25 + 8 * v23);
  if (v22)
  {
    v13 = v23;
    goto LABEL_22;
  }
  while (1)
  {
    v13 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v13 >= v18)
      return swift_release();
    v22 = *(_QWORD *)(v25 + 8 * v13);
    ++v23;
    if (v22)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_21C208AD0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25524A598);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_21C208B18(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25524A598);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_21C208B58(uint64_t result, uint64_t a2)
{
  uint64_t v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  char v17;
  char v18;
  char v19;
  uint64_t v20;
  int64_t v21;
  _BYTE v22[40];
  __int128 v23;
  __int128 v24;
  __int128 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __int128 v29;
  __int128 v30;
  uint64_t v31;

  if (result == a2)
    return 1;
  v3 = result;
  if (*(_QWORD *)(result + 16) != *(_QWORD *)(a2 + 16))
    return 0;
  v4 = 0;
  v20 = result + 64;
  v5 = 1 << *(_BYTE *)(result + 32);
  v6 = -1;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  v7 = v6 & *(_QWORD *)(result + 64);
  v21 = (unint64_t)(v5 + 63) >> 6;
  while (1)
  {
    if (v7)
    {
      v8 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      v9 = v8 | (v4 << 6);
LABEL_8:
      v10 = *(_QWORD *)(v3 + 56);
      v11 = (_QWORD *)(*(_QWORD *)(v3 + 48) + 16 * v9);
      v12 = v11[1];
      *(_QWORD *)&v23 = *v11;
      *((_QWORD *)&v23 + 1) = v12;
      sub_21C1FBB84(v10 + 40 * v9, (uint64_t)&v24);
      swift_bridgeObjectRetain();
      goto LABEL_30;
    }
    v13 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
      goto LABEL_39;
    }
    if (v13 < v21)
    {
      v14 = *(_QWORD *)(v20 + 8 * v13);
      if (v14)
        goto LABEL_12;
      v15 = v4 + 2;
      ++v4;
      if (v13 + 1 < v21)
      {
        v14 = *(_QWORD *)(v20 + 8 * v15);
        if (v14)
          goto LABEL_15;
        v4 = v13 + 1;
        if (v13 + 2 < v21)
        {
          v14 = *(_QWORD *)(v20 + 8 * (v13 + 2));
          if (v14)
          {
            v13 += 2;
            goto LABEL_12;
          }
          v4 = v13 + 2;
          if (v13 + 3 < v21)
          {
            v14 = *(_QWORD *)(v20 + 8 * (v13 + 3));
            if (v14)
            {
              v13 += 3;
              goto LABEL_12;
            }
            v15 = v13 + 4;
            v4 = v13 + 3;
            if (v13 + 4 < v21)
              break;
          }
        }
      }
    }
LABEL_29:
    v7 = 0;
    v26 = 0;
    v24 = 0u;
    v25 = 0u;
    v23 = 0u;
LABEL_30:
    sub_21C208E38((uint64_t)&v23, (uint64_t)&v27);
    if (!v28)
      return 1;
    v23 = v29;
    v24 = v30;
    *(_QWORD *)&v25 = v31;
    v16 = sub_21C1F63E4(v27, v28);
    v18 = v17;
    swift_bridgeObjectRelease();
    if ((v18 & 1) == 0)
    {
      sub_21C208E80((uint64_t)&v23);
      return 0;
    }
    sub_21C1FBB84(*(_QWORD *)(a2 + 56) + 40 * v16, (uint64_t)v22);
    v19 = MEMORY[0x220776924](v22, &v23);
    sub_21C208E80((uint64_t)v22);
    result = sub_21C208E80((uint64_t)&v23);
    if ((v19 & 1) == 0)
      return 0;
  }
  v14 = *(_QWORD *)(v20 + 8 * v15);
  if (v14)
  {
LABEL_15:
    v13 = v15;
LABEL_12:
    v7 = (v14 - 1) & v14;
    v9 = __clz(__rbit64(v14)) + (v13 << 6);
    v4 = v13;
    goto LABEL_8;
  }
  while (1)
  {
    v13 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v13 >= v21)
    {
      v4 = v21 - 1;
      goto LABEL_29;
    }
    v14 = *(_QWORD *)(v20 + 8 * v13);
    ++v15;
    if (v14)
      goto LABEL_12;
  }
LABEL_39:
  __break(1u);
  return result;
}

uint64_t sub_21C208DFC(uint64_t a1, uint64_t a2)
{
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(MEMORY[0x24BEE23D0] - 8) + 40))(a2, a1);
  return a2;
}

uint64_t sub_21C208E38(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25524AC20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_21C208E80(uint64_t a1)
{
  (*(void (**)(void))(*(_QWORD *)(MEMORY[0x24BEE23D0] - 8) + 8))();
  return a1;
}

void sub_21C208EB4(void *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  void (*v18)(char *, uint64_t, uint64_t);
  id v19;
  NSObject *v20;
  os_log_type_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  unint64_t v31;
  os_log_t v32;
  uint64_t v33;
  void (*v34)(char *, uint64_t);
  os_log_t v35;
  int v36;
  id v37;
  char *v38;
  char *v39;
  char *v40;
  uint64_t v41;
  id v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  id v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  id v52;
  id v53;
  id v54;
  _QWORD *v55;
  NSObject *v56;
  os_log_type_t v57;
  int v58;
  uint64_t v59;
  uint64_t v60;
  id v61;
  _QWORD *v62;
  uint64_t v63;
  unint64_t v64;
  id v65;
  os_log_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  os_log_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  int v79;
  uint64_t v80;
  _QWORD *v81;
  _QWORD *v82;
  os_log_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;

  v5 = sub_21C2484D4();
  v77 = *(_QWORD *)(v5 - 8);
  v78 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v76 = (char *)&v69 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_21C2474C0();
  v84 = *(_QWORD *)(v7 - 8);
  v85 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v83 = (os_log_t)((char *)&v69 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v80 = sub_21C2474E4();
  MEMORY[0x24BDAC7A8](v80);
  v9 = sub_21C2474FC();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v69 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_21C247CC4();
  v82 = *(_QWORD **)(v13 - 8);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v74 = (char *)&v69 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v69 - v16;
  sub_21C247CA0();
  v18 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  v81 = (_QWORD *)v9;
  v18(v12, a2, v9);
  v19 = a1;
  v20 = sub_21C247CB8();
  v21 = sub_21C248714();
  v79 = v21;
  if (os_log_type_enabled(v20, v21))
  {
    v22 = swift_slowAlloc();
    v72 = a2;
    v23 = v22;
    v71 = swift_slowAlloc();
    v87 = v71;
    *(_DWORD *)v23 = 136380931;
    v24 = objc_msgSend(v19, sel_lastPathComponent, v23 + 4);
    v75 = v13;
    v25 = v24;
    v26 = sub_21C248498();
    v70 = v20;
    v27 = v26;
    v73 = v2;
    v29 = v28;

    v86 = sub_21C203A90(v27, v29, &v87);
    sub_21C2487A4();

    swift_bridgeObjectRelease();
    *(_WORD *)(v23 + 12) = 2080;
    sub_21C2474F0();
    v30 = sub_21C2484E0();
    v86 = sub_21C203A90(v30, v31, &v87);
    v13 = v75;
    sub_21C2487A4();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, _QWORD *))(v10 + 8))(v12, v81);
    v32 = v70;
    _os_log_impl(&dword_21C1E3000, v70, (os_log_type_t)v79, "ProductLoader loading %{private}s (%s)", (uint8_t *)v23, 0x16u);
    v33 = v71;
    swift_arrayDestroy();
    MEMORY[0x2207770EC](v33, -1, -1);
    MEMORY[0x2207770EC](v23, -1, -1);

  }
  else
  {

    (*(void (**)(char *, _QWORD *))(v10 + 8))(v12, v81);
  }
  v34 = (void (*)(char *, uint64_t))v82[1];
  v34(v17, v13);
  v35 = v83;
  sub_21C2474CC();
  v36 = sub_21C2474B4();
  (*(void (**)(os_log_t, uint64_t))(v84 + 8))(v35, v85);
  v37 = objc_retainAutorelease(v19);
  if (!dlopen((const char *)objc_msgSend(v37, sel_UTF8String), v36))
  {
    v38 = dlerror();
    if (v38)
    {
      v39 = v38;
      v40 = v76;
      sub_21C2484BC();
      v41 = sub_21C2484C8();
      (*(void (**)(char *, uint64_t))(v77 + 8))(v40, v78);
      v42 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD17C8]), sel_initWithCString_encoding_, v39, v41);
      if ((sub_21C247484() & 1) != 0)
      {
        v43 = sub_21C248498();
        v45 = v44;
        v87 = (uint64_t)v42;
        v46 = v42;
        __swift_instantiateConcreteTypeFromMangledName(&qword_25524AC58);
        v47 = sub_21C2484E0();
        v49 = v48;
        sub_21C2095E4();
        swift_allocError();
        *(_QWORD *)v50 = v43;
        *(_QWORD *)(v50 + 8) = v45;
        *(_QWORD *)(v50 + 16) = v47;
        *(_QWORD *)(v50 + 24) = v49;
        *(_BYTE *)(v50 + 32) = 1;
        swift_willThrow();

      }
      else
      {
        v75 = v13;
        v51 = v74;
        sub_21C247CA0();
        v52 = v37;
        v53 = v42;
        v54 = v52;
        v55 = v53;
        v56 = sub_21C247CB8();
        v57 = sub_21C248720();
        v58 = v57;
        if (os_log_type_enabled(v56, v57))
        {
          v59 = swift_slowAlloc();
          LODWORD(v84) = v58;
          v60 = v59;
          v81 = (_QWORD *)swift_slowAlloc();
          v85 = swift_slowAlloc();
          v86 = (uint64_t)v54;
          v87 = v85;
          *(_DWORD *)v60 = 138412546;
          v82 = v55;
          v83 = v56;
          v61 = v54;
          sub_21C2487A4();
          v62 = v81;
          *v81 = v54;

          *(_WORD *)(v60 + 12) = 2080;
          v86 = (uint64_t)v42;
          __swift_instantiateConcreteTypeFromMangledName(&qword_25524AC58);
          v63 = sub_21C24878C();
          v86 = sub_21C203A90(v63, v64, &v87);
          sub_21C2487A4();
          v65 = v82;

          swift_bridgeObjectRelease();
          v66 = v83;
          _os_log_impl(&dword_21C1E3000, v83, (os_log_type_t)v84, "Failed to load optional product: %@: %s", (uint8_t *)v60, 0x16u);
          __swift_instantiateConcreteTypeFromMangledName(&qword_25524B630);
          swift_arrayDestroy();
          MEMORY[0x2207770EC](v62, -1, -1);
          v67 = v85;
          swift_arrayDestroy();
          MEMORY[0x2207770EC](v67, -1, -1);
          MEMORY[0x2207770EC](v60, -1, -1);

          v68 = v74;
        }
        else
        {

          v68 = v51;
        }
        v34(v68, v75);
      }
    }
    else
    {
      __break(1u);
    }
  }
}

unint64_t sub_21C209598()
{
  unint64_t result;
  uint64_t v1;

  result = qword_25524AC38;
  if (!qword_25524AC38)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25524AC30);
    result = MEMORY[0x22077702C](MEMORY[0x24BEE12E0], v1);
    atomic_store(result, (unint64_t *)&qword_25524AC38);
  }
  return result;
}

unint64_t sub_21C2095E4()
{
  unint64_t result;

  result = qword_25524AC48;
  if (!qword_25524AC48)
  {
    result = MEMORY[0x22077702C](&unk_21C24A3EC, &type metadata for DynamicProductLoader.LoadingError);
    atomic_store(result, (unint64_t *)&qword_25524AC48);
  }
  return result;
}

uint64_t sub_21C209628()
{
  return swift_release();
}

uint64_t sub_21C209630(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  if ((a5 & 1) != 0)
    swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t destroy for DynamicProductLoader.LoadingError(uint64_t a1)
{
  return sub_21C209670(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_BYTE *)(a1 + 32));
}

uint64_t sub_21C209670(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t result;

  result = swift_bridgeObjectRelease();
  if ((a5 & 1) != 0)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t initializeWithCopy for DynamicProductLoader.LoadingError(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_BYTE *)(a2 + 32);
  sub_21C209630(*(_QWORD *)a2, v4, v5, v6, v7);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_BYTE *)(a1 + 32) = v7;
  return a1;
}

uint64_t assignWithCopy for DynamicProductLoader.LoadingError(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_BYTE *)(a2 + 32);
  sub_21C209630(*(_QWORD *)a2, v4, v5, v6, v7);
  v8 = *(_QWORD *)a1;
  v9 = *(_QWORD *)(a1 + 8);
  v10 = *(_QWORD *)(a1 + 16);
  v11 = *(_QWORD *)(a1 + 24);
  v12 = *(_BYTE *)(a1 + 32);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_BYTE *)(a1 + 32) = v7;
  sub_21C209670(v8, v9, v10, v11, v12);
  return a1;
}

__n128 __swift_memcpy33_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for DynamicProductLoader.LoadingError(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  __int128 v9;

  v3 = *(_BYTE *)(a2 + 32);
  v4 = *(_QWORD *)a1;
  v6 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a1 + 16);
  v7 = *(_QWORD *)(a1 + 24);
  v8 = *(_BYTE *)(a1 + 32);
  v9 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v9;
  *(_BYTE *)(a1 + 32) = v3;
  sub_21C209670(v4, v6, v5, v7, v8);
  return a1;
}

uint64_t getEnumTagSinglePayload for DynamicProductLoader.LoadingError(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 33))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 32);
  if (v3 <= 1)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for DynamicProductLoader.LoadingError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_BYTE *)(result + 32) = 0;
    *(_QWORD *)result = a2 - 255;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 33) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 33) = 0;
    if (a2)
      *(_BYTE *)(result + 32) = -(char)a2;
  }
  return result;
}

uint64_t sub_21C209868(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 32);
}

uint64_t sub_21C209870(uint64_t result, char a2)
{
  *(_BYTE *)(result + 32) = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for DynamicProductLoader.LoadingError()
{
  return &type metadata for DynamicProductLoader.LoadingError;
}

unint64_t sub_21C209890()
{
  unint64_t result;

  result = qword_25524AC60;
  if (!qword_25524AC60)
  {
    result = MEMORY[0x22077702C](&unk_21C24A394, &type metadata for DynamicProductLoader.LoadingError);
    atomic_store(result, (unint64_t *)&qword_25524AC60);
  }
  return result;
}

uint64_t sub_21C2098D8(__int128 *a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;

  v2 = *a1;
  v3 = a1[1];
  *(_BYTE *)(a2 + 32) = *((_BYTE *)a1 + 32);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

uint64_t sub_21C2098F0()
{
  uint64_t v0;

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for IOSurfaceRenderer.IOSurfaceBackedBuffer()
{
  return objc_opt_self();
}

uint64_t sub_21C209934@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v22;
  uint64_t v23;
  __int128 v24;
  uint64_t v25;
  _QWORD v26[4];

  swift_bridgeObjectRetain();
  v8 = sub_21C248834();
  if (v8)
  {
    v9 = v8;
    v10 = swift_conformsToProtocol2();
    if (v10)
      v11 = v10;
    else
      v11 = 0;
    if (v10)
      v12 = v9;
    else
      v12 = 0;
    if (v12)
    {
      sub_21C209B8C(a1, a2, a3, v12, v11, &v22);
      v16 = v23;
      v17 = v25;
      v18 = v24;
      *(_OWORD *)a4 = v22;
      *(_QWORD *)(a4 + 16) = v16;
      *(_OWORD *)(a4 + 24) = v18;
      *(_QWORD *)(a4 + 40) = v17;
      v19 = *MEMORY[0x24BE77340];
      v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_255249EB0);
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 104))(a4, v19, v20);
    }
    sub_21C20AC7C();
    v14 = (void *)swift_allocError();
    *(_QWORD *)v13 = a1;
    *(_QWORD *)(v13 + 8) = a2;
    *(_OWORD *)(v13 + 16) = xmmword_21C24A4B0;
  }
  else
  {
    sub_21C20AC7C();
    v14 = (void *)swift_allocError();
    *(_QWORD *)v13 = a1;
    *(_QWORD *)(v13 + 8) = a2;
    *(_QWORD *)(v13 + 16) = 0;
    *(_QWORD *)(v13 + 24) = 0;
  }
  *(_BYTE *)(v13 + 32) = 1;
  swift_willThrow();
  swift_getErrorValue();
  sub_21C248954();
  __swift_project_boxed_opaque_existential_1(&v22, v24);
  sub_21C2478F8();
  if (!v15)
  {
    swift_getErrorValue();
    sub_21C248954();
    __swift_project_boxed_opaque_existential_1(v26, v26[3]);
    sub_21C2478EC();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v26);
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v22);
  sub_21C247124();

  return swift_bridgeObjectRelease();
}

uint64_t sub_21C209B8C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, _QWORD *a6@<X8>)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;

  swift_bridgeObjectRetain();
  v12 = *(_QWORD *)(sub_21C247F28() + 16);
  swift_bridgeObjectRelease();
  v13 = a3;
  v14 = v12;
  if (v12 > a3)
  {
    sub_21C247E38();
    v14 = sub_21C247DFC();
    if (v14)
    {
      result = swift_bridgeObjectRelease();
      *a6 = a1;
      a6[1] = a2;
      a6[2] = a3;
      a6[3] = v14;
      a6[4] = a4;
      a6[5] = a5;
      return result;
    }
    v13 = 2;
  }
  sub_21C20AC7C();
  swift_allocError();
  *(_QWORD *)v16 = a1;
  *(_QWORD *)(v16 + 8) = a2;
  *(_QWORD *)(v16 + 16) = v13;
  *(_QWORD *)(v16 + 24) = v14;
  *(_BYTE *)(v16 + 32) = v12 > a3;
  swift_willThrow();
  return swift_bridgeObjectRelease();
}

uint64_t ProviderPreview.underlyingPreviewHost.getter()
{
  return swift_retain();
}

uint64_t ProviderPreview.retrieveUnderlyingPreview()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  unint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;

  v3 = *(_QWORD *)(v1 + 16);
  swift_bridgeObjectRetain();
  swift_retain();
  result = sub_21C247E2C();
  if ((v3 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else
  {
    v5 = result;
    if (v3 < *(_QWORD *)(result + 16))
    {
      v6 = sub_21C2483A8();
      (*(void (**)(uint64_t, unint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, v5+ ((*(unsigned __int8 *)(*(_QWORD *)(v6 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v6 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v6 - 8) + 72) * v3, v6);
      swift_release();
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_21C209D4C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  unint64_t v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  v1 = sub_21C2483A8();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  swift_retain();
  result = sub_21C247E2C();
  if ((v5 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (v5 < *(_QWORD *)(result + 16))
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v2 + 16))(v4, result+ ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80))+ *(_QWORD *)(v2 + 72) * v5, v1);
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v7 = sub_21C248354();
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    return v7;
  }
  __break(1u);
  return result;
}

uint64_t ProviderPreview.id.getter@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = v1[1];
  v3 = v1[2];
  *a1 = *v1;
  a1[1] = v2;
  a1[2] = v3;
  return swift_bridgeObjectRetain();
}

uint64_t sub_21C209E6C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  unint64_t v9;
  uint64_t result;
  _QWORD v11[2];

  v11[1] = a1;
  v11[0] = sub_21C247388();
  v2 = *(_QWORD *)(v11[0] - 8);
  MEMORY[0x24BDAC7A8](v11[0]);
  v4 = (char *)v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_21C2483A8();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(_QWORD *)(v1 + 16);
  swift_bridgeObjectRetain();
  swift_retain();
  result = sub_21C247E2C();
  if ((v9 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (v9 < *(_QWORD *)(result + 16))
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v6 + 16))(v8, result+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(_QWORD *)(v6 + 72) * v9, v5);
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_21C244580((uint64_t)v4);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    sub_21C209FE0();
    return (*(uint64_t (**)(char *, _QWORD))(v2 + 8))(v4, v11[0]);
  }
  __break(1u);
  return result;
}

uint64_t sub_21C209FE0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  _DWORD v13[4];

  v0 = sub_21C247118();
  MEMORY[0x24BDAC7A8](v0);
  v1 = sub_21C2473C4();
  MEMORY[0x24BDAC7A8](v1);
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25524AD30);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_21C2471E4();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)v13 - v10;
  sub_21C247358();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_21C20AD04((uint64_t)v4);
    sub_21C24782C();
    sub_21C1FBD14(&qword_25524AD38, (uint64_t (*)(uint64_t))MEMORY[0x24BE763B0], MEMORY[0x24BE763C0]);
    swift_allocError();
    sub_21C247838();
    return swift_willThrow();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v11, v4, v5);
    sub_21C247340();
    (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v9, v11, v5);
    v13[3] = sub_21C247364();
    sub_21C247334();
    sub_21C24734C();
    sub_21C247328();
    sub_21C24722C();
    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v11, v5);
  }
}

unint64_t sub_21C20A294@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  unint64_t result;

  v3 = *(_QWORD *)(v1 + 40);
  type metadata accessor for PreviewProviderHostProvider.Host(0);
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = *(_OWORD *)(v1 + 24);
  *(_QWORD *)(v4 + 32) = v3;
  swift_beginAccess();
  swift_retain_n();
  sub_21C247D18();
  swift_endAccess();
  swift_release();
  a1[3] = (uint64_t)&type metadata for PreviewProviderHostProvider;
  result = sub_21C20ACC0();
  a1[4] = result;
  *a1 = v4;
  return result;
}

uint64_t sub_21C20A374()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  unint64_t v5;
  uint64_t result;
  uint64_t v7;

  v1 = sub_21C2483A8();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  swift_retain();
  result = sub_21C247E2C();
  if ((v5 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (v5 < *(_QWORD *)(result + 16))
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v2 + 16))(v4, result+ ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80))+ *(_QWORD *)(v2 + 72) * v5, v1);
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_21C248384();
    return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  }
  __break(1u);
  return result;
}

uint64_t sub_21C20A478@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  unint64_t v10;
  uint64_t result;
  _QWORD v12[2];

  v12[1] = a1;
  v2 = sub_21C247388();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_21C2483A8();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(v1 + 16);
  swift_bridgeObjectRetain();
  swift_retain();
  result = sub_21C247E2C();
  if ((v10 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (v10 < *(_QWORD *)(result + 16))
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v7 + 16))(v9, result+ ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))+ *(_QWORD *)(v7 + 72) * v10, v6);
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_21C244580((uint64_t)v5);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    sub_21C247370();
    return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  __break(1u);
  return result;
}

uint64_t ProviderPreview.ID.hash(into:)()
{
  swift_bridgeObjectRetain();
  sub_21C2484F8();
  swift_bridgeObjectRelease();
  return sub_21C2489B4();
}

BOOL static ProviderPreview.ID.== infix(_:_:)(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  char v5;
  _BOOL8 result;

  v2 = a1[2];
  v3 = a2[2];
  if (*a1 == *a2 && a1[1] == a2[1])
    return v2 == v3;
  v5 = sub_21C248924();
  result = 0;
  if ((v5 & 1) != 0)
    return v2 == v3;
  return result;
}

uint64_t ProviderPreview.ID.hashValue.getter()
{
  sub_21C2489A8();
  swift_bridgeObjectRetain();
  sub_21C2484F8();
  swift_bridgeObjectRelease();
  sub_21C2489B4();
  return sub_21C2489C0();
}

uint64_t sub_21C20A6FC()
{
  sub_21C2489A8();
  swift_bridgeObjectRetain();
  sub_21C2484F8();
  swift_bridgeObjectRelease();
  sub_21C2489B4();
  return sub_21C2489C0();
}

uint64_t sub_21C20A76C()
{
  swift_bridgeObjectRetain();
  sub_21C2484F8();
  swift_bridgeObjectRelease();
  return sub_21C2489B4();
}

uint64_t sub_21C20A7C4()
{
  sub_21C2489A8();
  swift_bridgeObjectRetain();
  sub_21C2484F8();
  swift_bridgeObjectRelease();
  sub_21C2489B4();
  return sub_21C2489C0();
}

unint64_t sub_21C20A834()
{
  unint64_t result;

  result = qword_25524AD18;
  if (!qword_25524AD18)
  {
    result = MEMORY[0x22077702C](&protocol conformance descriptor for ProviderPreview.ID, &type metadata for ProviderPreview.ID);
    atomic_store(result, (unint64_t *)&qword_25524AD18);
  }
  return result;
}

BOOL sub_21C20A878(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  char v5;
  _BOOL8 result;

  v2 = a1[2];
  v3 = a2[2];
  if (*a1 == *a2 && a1[1] == a2[1])
    return v2 == v3;
  v5 = sub_21C248924();
  result = 0;
  if ((v5 & 1) != 0)
    return v2 == v3;
  return result;
}

uint64_t sub_21C20A8D4@<X0>(uint64_t a1@<X8>)
{
  return sub_21C209E6C(a1);
}

unint64_t sub_21C20A8F0@<X0>(uint64_t *a1@<X8>)
{
  return sub_21C20A294(a1);
}

uint64_t destroy for ProviderPreview()
{
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t initializeWithCopy for ProviderPreview(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v4 = *(_QWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 40) = v4;
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for ProviderPreview(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_retain();
  swift_release();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  return a1;
}

__n128 __swift_memcpy48_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for ProviderPreview(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_release();
  v5 = *(_QWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 40) = v5;
  return a1;
}

uint64_t getEnumTagSinglePayload for ProviderPreview(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 48))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ProviderPreview(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 48) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 48) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ProviderPreview()
{
  return &type metadata for ProviderPreview;
}

_QWORD *sub_21C20AB0C(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for ProviderPreview.ID(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  return a1;
}

__n128 __swift_memcpy24_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

_QWORD *assignWithTake for ProviderPreview.ID(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  return a1;
}

uint64_t getEnumTagSinglePayload for ProviderPreview.ID(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 24))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ProviderPreview.ID(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 24) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ProviderPreview.ID()
{
  return &type metadata for ProviderPreview.ID;
}

unint64_t sub_21C20AC7C()
{
  unint64_t result;

  result = qword_25524AD20;
  if (!qword_25524AD20)
  {
    result = MEMORY[0x22077702C](&unk_21C24A68C, &type metadata for ProviderError);
    atomic_store(result, (unint64_t *)&qword_25524AD20);
  }
  return result;
}

unint64_t sub_21C20ACC0()
{
  unint64_t result;

  result = qword_25524AD28;
  if (!qword_25524AD28)
  {
    result = MEMORY[0x22077702C](&unk_21C24CBB0, &type metadata for PreviewProviderHostProvider);
    atomic_store(result, (unint64_t *)&qword_25524AD28);
  }
  return result;
}

uint64_t sub_21C20AD04(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25524AD30);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t destroy for ProviderError()
{
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ProviderError(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ProviderError(uint64_t a1, uint64_t a2)
{
  __int128 v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = *(_OWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = v4;
  return a1;
}

uint64_t assignWithTake for ProviderError(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for ProviderError(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 33))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ProviderError(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_BYTE *)(result + 32) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 33) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 33) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ProviderError()
{
  return &type metadata for ProviderError;
}

uint64_t sub_21C20AEC4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  char v8;

  sub_21C20B824((__int128 *)(v0 + 16), (uint64_t)&v6);
  sub_21C20B824(&v6, (uint64_t)&v7);
  if (v8 != 1)
  {
LABEL_6:
    sub_21C24881C();
    swift_bridgeObjectRelease();
    v2 = 0x100000000000001ELL;
    goto LABEL_7;
  }
  if (v7 != 0)
  {
    if (!((unint64_t)v7 ^ 1 | *((_QWORD *)&v7 + 1)))
    {
      sub_21C24881C();
      swift_bridgeObjectRelease();
      v5 = 10322146;
      sub_21C2479AC();
      if (v1)
        goto LABEL_8;
LABEL_9:
      swift_bridgeObjectRetain();
      goto LABEL_10;
    }
    goto LABEL_6;
  }
  sub_21C24881C();
  swift_bridgeObjectRelease();
  v2 = 0x100000000000001CLL;
LABEL_7:
  v5 = v2;
  sub_21C2479AC();
  if (!v3)
    goto LABEL_9;
LABEL_8:
  swift_bridgeObjectRelease();
LABEL_10:
  sub_21C248504();
  swift_bridgeObjectRelease();
  sub_21C248504();
  return v5;
}

uint64_t sub_21C20B09C()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  __int128 v8;
  __int128 v9;
  char v10;

  sub_21C20B824((__int128 *)(v0 + 16), (uint64_t)&v8);
  sub_21C20B824(&v8, (uint64_t)&v9);
  if (v10 == 1)
  {
    if (v9 == 0)
    {
      v7 = 0;
      sub_21C24881C();
      v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD1760]), sel_init);
      v3 = objc_msgSend(v2, sel_processName);

      sub_21C248498();
      sub_21C248504();
      swift_bridgeObjectRelease();
      sub_21C248504();
      sub_21C2479AC();
      if (!v4)
        goto LABEL_10;
    }
    else
    {
      if (!((unint64_t)v9 ^ 1 | *((_QWORD *)&v9 + 1)))
      {
        v7 = 0;
        sub_21C24881C();
        sub_21C248504();
        sub_21C2479AC();
        if (v1)
          goto LABEL_8;
LABEL_10:
        swift_bridgeObjectRetain();
        goto LABEL_11;
      }
      sub_21C24881C();
      swift_bridgeObjectRelease();
      v7 = 0x1000000000000025;
      sub_21C2479AC();
      if (!v5)
        goto LABEL_10;
    }
LABEL_8:
    swift_bridgeObjectRelease();
LABEL_11:
    sub_21C248504();
    swift_bridgeObjectRelease();
    goto LABEL_12;
  }
  v7 = 0;
  sub_21C24881C();
  sub_21C248504();
  sub_21C2488F4();
  sub_21C248504();
  swift_bridgeObjectRelease();
  sub_21C248504();
  sub_21C2488F4();
  sub_21C248504();
  swift_bridgeObjectRelease();
LABEL_12:
  sub_21C248504();
  return v7;
}

uint64_t sub_21C20B440()
{
  uint64_t v0;
  _QWORD v2[2];

  sub_21C24881C();
  swift_bridgeObjectRelease();
  strcpy((char *)v2, "Mangled name: ");
  swift_bridgeObjectRetain();
  sub_21C248504();
  sub_21C20B7FC(v0);
  return v2[0];
}

uint64_t sub_21C20B4D4()
{
  return sub_21C20AEC4();
}

uint64_t sub_21C20B510()
{
  return sub_21C20B09C();
}

uint64_t sub_21C20B548()
{
  return sub_21C20B440();
}

uint64_t sub_21C20B580@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v5;
  uint64_t (*v6)(uint64_t);
  uint64_t v7;

  if (*(_BYTE *)(v1 + 32) == 1 && *(_OWORD *)(v1 + 16) == 0)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_25524AD50);
    v5 = sub_21C247A00();
    v6 = (uint64_t (*)(uint64_t))MEMORY[0x24BE76988];
    v7 = *(_QWORD *)(v5 - 8);
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_21C24A4C0;
    sub_21C2479F4();
    sub_21C1FBD14(&qword_25524AD58, v6, MEMORY[0x24BE76998]);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25524AD60);
    sub_21C20B7B0();
    sub_21C2487BC();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v5);
  }
  else
  {
    v3 = sub_21C247A00();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))(a1, 1, 1, v3);
  }
}

uint64_t sub_21C20B6CC()
{
  sub_21C20B83C();
  return sub_21C24794C();
}

uint64_t sub_21C20B6F4()
{
  sub_21C20B83C();
  return sub_21C24791C();
}

unint64_t sub_21C20B724()
{
  unint64_t result;

  result = qword_25524AD40;
  if (!qword_25524AD40)
  {
    result = MEMORY[0x22077702C](&unk_21C24A5AC, &type metadata for ProviderError);
    atomic_store(result, (unint64_t *)&qword_25524AD40);
  }
  return result;
}

unint64_t sub_21C20B76C()
{
  unint64_t result;

  result = qword_25524AD48;
  if (!qword_25524AD48)
  {
    result = MEMORY[0x22077702C](&unk_21C24A584, &type metadata for ProviderError);
    atomic_store(result, (unint64_t *)&qword_25524AD48);
  }
  return result;
}

unint64_t sub_21C20B7B0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_25524AD68;
  if (!qword_25524AD68)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25524AD60);
    result = MEMORY[0x22077702C](MEMORY[0x24BEE12C8], v1);
    atomic_store(result, (unint64_t *)&qword_25524AD68);
  }
  return result;
}

uint64_t sub_21C20B7FC(uint64_t a1)
{
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_21C20B824(__int128 *a1, uint64_t a2)
{
  __int128 v2;

  v2 = *a1;
  *(_BYTE *)(a2 + 16) = *((_BYTE *)a1 + 16);
  *(_OWORD *)a2 = v2;
  return a2;
}

unint64_t sub_21C20B83C()
{
  unint64_t result;

  result = qword_25524AD70;
  if (!qword_25524AD70)
  {
    result = MEMORY[0x22077702C](&unk_21C24A5F4, &type metadata for ProviderError);
    atomic_store(result, (unint64_t *)&qword_25524AD70);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for ProviderError.Problem(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 17))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for ProviderError.Problem(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)result = 0;
    *(_QWORD *)(result + 8) = 0;
    *(_BYTE *)(result + 16) = 0;
    *(_DWORD *)result = a2 - 1;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 17) = v3;
  return result;
}

uint64_t sub_21C20B8D0(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_21C20B8EC(uint64_t result, int a2)
{
  if (a2)
  {
    *(_QWORD *)result = (a2 - 1);
    *(_QWORD *)(result + 8) = 0;
    *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    *(_BYTE *)(result + 16) = 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for ProviderError.Problem()
{
  return &type metadata for ProviderError.Problem;
}

ValueMetadata *type metadata accessor for MetricsView()
{
  return &type metadata for MetricsView;
}

uint64_t sub_21C20B934()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_21C20B944@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t *v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _BYTE v39[12];
  int v40;
  _BYTE *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  v2 = type metadata accessor for EnvironmentView();
  v3 = MEMORY[0x24BDAC7A8](v2);
  v5 = (uint64_t *)&v39[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v3);
  v7 = &v39[-v6];
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_25524AD80);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v11 = &v39[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v9);
  v13 = &v39[-v12];
  *v5 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25524AD88);
  swift_storeEnumTagMultiPayload();
  v14 = (uint64_t *)((char *)v5 + *(int *)(v2 + 20));
  *v14 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25524AD90);
  swift_storeEnumTagMultiPayload();
  v15 = (uint64_t *)((char *)v5 + *(int *)(v2 + 24));
  *v15 = swift_getKeyPath();
  swift_storeEnumTagMultiPayload();
  sub_21C20CB5C((uint64_t)v5, (uint64_t)v7);
  LOBYTE(v5) = sub_21C2481C8();
  sub_21C247D9C();
  v17 = v16;
  v19 = v18;
  v21 = v20;
  v23 = v22;
  sub_21C20CBA0((uint64_t)v7, (uint64_t)v11);
  v24 = &v11[*(int *)(v8 + 36)];
  *v24 = (_BYTE)v5;
  *((_QWORD *)v24 + 1) = v17;
  *((_QWORD *)v24 + 2) = v19;
  *((_QWORD *)v24 + 3) = v21;
  *((_QWORD *)v24 + 4) = v23;
  v24[40] = 0;
  sub_21C20CBE4((uint64_t)v7);
  v25 = (uint64_t)v13;
  v41 = v13;
  sub_21C20CC20((uint64_t)v11, (uint64_t)v13);
  v26 = sub_21C2482A0();
  v44 = sub_21C248030();
  v43 = sub_21C247FB8();
  v42 = sub_21C247F04();
  v40 = sub_21C2481BC();
  v27 = sub_21C2482AC();
  v28 = sub_21C24803C();
  v29 = sub_21C247FAC();
  v30 = sub_21C2482C4();
  v31 = sub_21C247FAC();
  v32 = sub_21C248030();
  sub_21C1F03EC(v25, (uint64_t)v11, &qword_25524AD80);
  sub_21C1F03EC((uint64_t)v11, a1, &qword_25524AD80);
  v33 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_25524AD98);
  v34 = a1 + v33[12];
  v35 = v44;
  *(_QWORD *)v34 = v26;
  *(_QWORD *)(v34 + 8) = v35;
  *(_QWORD *)(v34 + 16) = v43;
  *(_BYTE *)(v34 + 24) = 0;
  *(_QWORD *)(v34 + 32) = v42;
  *(_BYTE *)(v34 + 40) = v40;
  v36 = a1 + v33[16];
  *(_QWORD *)v36 = v27;
  *(_QWORD *)(v36 + 8) = v28;
  *(_QWORD *)(v36 + 16) = v29;
  *(_BYTE *)(v36 + 24) = 1;
  v37 = a1 + v33[20];
  *(_QWORD *)v37 = v30;
  *(_BYTE *)(v37 + 8) = 0;
  *(_QWORD *)(v37 + 16) = v31;
  *(_QWORD *)(v37 + 24) = v32;
  swift_retain();
  swift_retain();
  swift_retain();
  sub_21C1F03B0((uint64_t)v41, &qword_25524AD80);
  swift_release();
  swift_release();
  swift_release();
  return sub_21C1F03B0((uint64_t)v11, &qword_25524AD80);
}

uint64_t sub_21C20BC6C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = sub_21C248024();
  v3 = sub_21C247FB8();
  *a1 = v2;
  a1[1] = v3;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25524AD78);
  return sub_21C20B944((uint64_t)a1 + *(int *)(v4 + 44));
}

uint64_t type metadata accessor for EnvironmentView()
{
  uint64_t result;

  result = qword_25524AE10;
  if (!qword_25524AE10)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_21C20BCEC@<X0>(char a1@<W2>, uint64_t a2@<X3>, uint64_t a3@<X4>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t KeyPath;
  unsigned __int8 v14;
  unsigned __int8 v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  uint64_t result;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  char v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char v74;
  char v75;
  __int128 v76;
  __int128 v77;
  char v78;

  v8 = sub_21C2482D0();
  v40 = sub_21C248030();
  v41 = a3;
  v42 = a2;
  sub_21C20BFA4(a1, (uint64_t)&v56);
  v38 = v57;
  v39 = v56;
  v36 = v59;
  v37 = v58;
  v9 = v61;
  v35 = v60;
  v10 = v62;
  v11 = v63;
  v12 = sub_21C248204();
  KeyPath = swift_getKeyPath();
  v14 = sub_21C2481E0();
  v15 = sub_21C2481F8();
  v16 = sub_21C2481EC();
  sub_21C2481EC();
  if (sub_21C2481EC() != v14)
    v16 = sub_21C2481EC();
  sub_21C2481EC();
  if (sub_21C2481EC() != v15)
    v16 = sub_21C2481EC();
  sub_21C247D9C();
  v18 = v17;
  v20 = v19;
  v22 = v21;
  v24 = v23;
  v25 = sub_21C2481D4();
  v43 = (unint64_t)v40;
  LOBYTE(v44) = 1;
  *((_QWORD *)&v44 + 1) = v39;
  *(_QWORD *)&v45 = v38;
  *((_QWORD *)&v45 + 1) = v37;
  *(_QWORD *)&v46 = v36;
  *((_QWORD *)&v46 + 1) = v35;
  *(_QWORD *)&v47 = v9;
  BYTE8(v47) = v10;
  *(_QWORD *)&v48 = v11;
  *((_QWORD *)&v48 + 1) = KeyPath;
  *(_QWORD *)&v49 = v12;
  BYTE8(v49) = v16;
  *(_QWORD *)&v50 = v18;
  *((_QWORD *)&v50 + 1) = v20;
  *(_QWORD *)&v51 = v22;
  *((_QWORD *)&v51 + 1) = v24;
  LOBYTE(v52) = 0;
  BYTE8(v52) = v25;
  v54 = 0u;
  v53 = 0u;
  v55 = 1;
  v26 = v49;
  v27 = v50;
  v28 = v52;
  *(_OWORD *)(a4 + 152) = v51;
  *(_OWORD *)(a4 + 136) = v27;
  *(_OWORD *)(a4 + 120) = v26;
  v29 = v47;
  *(_OWORD *)(a4 + 104) = v48;
  v30 = v44;
  *(_OWORD *)(a4 + 24) = v43;
  *(_OWORD *)(a4 + 88) = v29;
  v31 = v45;
  *(_OWORD *)(a4 + 72) = v46;
  *(_OWORD *)(a4 + 56) = v31;
  *(_OWORD *)(a4 + 40) = v30;
  v32 = v53;
  v33 = v54;
  *(_BYTE *)(a4 + 216) = 1;
  *(_OWORD *)(a4 + 200) = v33;
  *(_OWORD *)(a4 + 184) = v32;
  *(_OWORD *)(a4 + 168) = v28;
  v56 = v40;
  v57 = 0;
  LOBYTE(v58) = 1;
  v59 = v39;
  v60 = v38;
  v61 = v37;
  v62 = v36;
  v63 = v35;
  v64 = v9;
  v65 = v10;
  v66 = v11;
  v67 = KeyPath;
  v68 = v12;
  v69 = v16;
  v70 = v18;
  v71 = v20;
  v72 = v22;
  v73 = v24;
  v74 = 0;
  v75 = v25;
  v76 = 0u;
  v77 = 0u;
  v78 = 1;
  swift_retain();
  sub_21C20DE78((uint64_t)&v43);
  sub_21C20DF38((uint64_t)&v56);
  result = swift_release();
  *(_QWORD *)a4 = v41;
  *(_QWORD *)(a4 + 8) = v42;
  *(_QWORD *)(a4 + 16) = v8;
  return result;
}

uint64_t sub_21C20BFA4@<X0>(char a1@<W1>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  double v7;
  double v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  double v12;
  double v13;
  double v14;
  double v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  char v20;
  uint64_t v21;

  if ((a1 & 1) != 0)
  {
    v3 = 0;
    v4 = 0;
    v5 = 0;
    v6 = 0;
  }
  else
  {
    sub_21C247E50();
    sub_21C20C0D8(v7, v8);
    sub_21C20DFF8();
    v3 = sub_21C24824C();
    v4 = v9;
    v6 = v10;
    v5 = v11 & 1;
  }
  sub_21C247E44();
  sub_21C20C1F4(v12, v13, v14, v15);
  sub_21C20DFF8();
  v16 = sub_21C24824C();
  v18 = v17;
  *(_QWORD *)a2 = v3;
  *(_QWORD *)(a2 + 8) = v4;
  v20 = v19 & 1;
  *(_QWORD *)(a2 + 16) = v5;
  *(_QWORD *)(a2 + 24) = v6;
  *(_QWORD *)(a2 + 32) = v16;
  *(_QWORD *)(a2 + 40) = v17;
  *(_BYTE *)(a2 + 48) = v19 & 1;
  *(_QWORD *)(a2 + 56) = v21;
  sub_21C20DEF8(v3, v4, v5, v6);
  sub_21C20DF28(v16, v18, v20);
  swift_bridgeObjectRetain();
  sub_21C20DFE8(v16, v18, v20);
  swift_bridgeObjectRelease();
  return sub_21C20DFB8(v3, v4, v5, v6);
}

uint64_t sub_21C20C0D8(double a1, double a2)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  __swift_instantiateConcreteTypeFromMangledName(&qword_25524AE78);
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_21C24A4C0;
  v5 = MEMORY[0x24BEE50B0];
  *(_QWORD *)(v4 + 56) = MEMORY[0x24BEE50B0];
  v6 = sub_21C20E03C();
  *(_QWORD *)(v4 + 64) = v6;
  *(double *)(v4 + 32) = a1;
  sub_21C2484A4();
  sub_21C248504();
  swift_bridgeObjectRelease();
  sub_21C248504();
  v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_21C24A4C0;
  *(_QWORD *)(v7 + 56) = v5;
  *(_QWORD *)(v7 + 64) = v6;
  *(double *)(v7 + 32) = a2;
  sub_21C2484A4();
  sub_21C248504();
  swift_bridgeObjectRelease();
  return 0x203A657A6953;
}

uint64_t sub_21C20C1F4(double a1, double a2, double a3, double a4)
{
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v15[2];

  sub_21C24881C();
  swift_bridgeObjectRelease();
  strcpy((char *)v15, "Insets: Top ");
  __swift_instantiateConcreteTypeFromMangledName(&qword_25524AE78);
  v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_21C24A4C0;
  v9 = MEMORY[0x24BEE50B0];
  *(_QWORD *)(v8 + 56) = MEMORY[0x24BEE50B0];
  v10 = sub_21C20E03C();
  *(_QWORD *)(v8 + 64) = v10;
  *(double *)(v8 + 32) = a1;
  sub_21C2484A4();
  sub_21C248504();
  swift_bridgeObjectRelease();
  sub_21C248504();
  v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_21C24A4C0;
  *(_QWORD *)(v11 + 56) = v9;
  *(_QWORD *)(v11 + 64) = v10;
  *(double *)(v11 + 32) = a2;
  sub_21C2484A4();
  sub_21C248504();
  swift_bridgeObjectRelease();
  sub_21C248504();
  v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_21C24A4C0;
  *(_QWORD *)(v12 + 56) = v9;
  *(_QWORD *)(v12 + 64) = v10;
  *(double *)(v12 + 32) = a3;
  sub_21C2484A4();
  sub_21C248504();
  swift_bridgeObjectRelease();
  sub_21C248504();
  v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_21C24A4C0;
  *(_QWORD *)(v13 + 56) = v9;
  *(_QWORD *)(v13 + 64) = v10;
  *(double *)(v13 + 32) = a4;
  sub_21C2484A4();
  sub_21C248504();
  swift_bridgeObjectRelease();
  return v15[0];
}

uint64_t sub_21C20C424@<X0>(uint64_t (**a1)@<X0>(uint64_t a1@<X8>)@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = *v1;
  v4 = *((_BYTE *)v1 + 8);
  v6 = v1[2];
  v5 = v1[3];
  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 16) = v3;
  *(_BYTE *)(v7 + 24) = v4;
  *(_QWORD *)(v7 + 32) = v6;
  *(_QWORD *)(v7 + 40) = v5;
  *a1 = sub_21C20DE18;
  a1[1] = (uint64_t (*)@<X0>(uint64_t@<X8>))v7;
  return swift_retain();
}

uint64_t sub_21C20C48C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  char v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _BYTE v31[4];
  int v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  char v37;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25524ADA0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = &v31[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = sub_21C247DB4();
  MEMORY[0x24BDAC7A8](v5);
  v7 = &v31[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = sub_21C24800C();
  v9 = MEMORY[0x24BDAC7A8](v8);
  MEMORY[0x24BDAC7A8](v9);
  sub_21C248000();
  sub_21C247FF4();
  sub_21C2405BC((uint64_t)v7);
  sub_21C2484E0();
  sub_21C247FE8();
  swift_bridgeObjectRelease();
  sub_21C247FF4();
  sub_21C248018();
  v34 = sub_21C248240();
  v35 = v10;
  v33 = v11;
  v32 = v12 & 1;
  sub_21C248000();
  sub_21C247FF4();
  type metadata accessor for EnvironmentView();
  sub_21C2407FC((uint64_t)v4);
  sub_21C20E080((uint64_t)v4);
  sub_21C1F03B0((uint64_t)v4, &qword_25524ADA0);
  sub_21C247FE8();
  swift_bridgeObjectRelease();
  sub_21C247FF4();
  sub_21C248018();
  v13 = sub_21C248240();
  v15 = v14;
  v17 = v16;
  v19 = v18 & 1;
  sub_21C248000();
  sub_21C247FF4();
  sub_21C2407FC((uint64_t)v4);
  sub_21C20E080((uint64_t)v4);
  sub_21C1F03B0((uint64_t)v4, &qword_25524ADA0);
  sub_21C247FE8();
  swift_bridgeObjectRelease();
  sub_21C247FF4();
  sub_21C248018();
  v20 = sub_21C248240();
  v22 = v21;
  v23 = v32;
  v37 = v32;
  v36 = v19;
  v25 = v24 & 1;
  v26 = v34;
  v27 = v35;
  *(_QWORD *)a1 = v34;
  *(_QWORD *)(a1 + 8) = v27;
  *(_BYTE *)(a1 + 16) = v23;
  *(_QWORD *)(a1 + 24) = v33;
  *(_QWORD *)(a1 + 32) = v13;
  *(_QWORD *)(a1 + 40) = v15;
  *(_BYTE *)(a1 + 48) = v19;
  *(_QWORD *)(a1 + 56) = v17;
  *(_QWORD *)(a1 + 64) = v20;
  *(_QWORD *)(a1 + 72) = v22;
  *(_BYTE *)(a1 + 80) = v24 & 1;
  *(_QWORD *)(a1 + 88) = v28;
  *(_QWORD *)(a1 + 96) = 0;
  *(_BYTE *)(a1 + 104) = 1;
  v29 = v26;
  sub_21C20DF28(v26, v27, v23);
  swift_bridgeObjectRetain();
  sub_21C20DF28(v13, v15, v19);
  swift_bridgeObjectRetain();
  sub_21C20DF28(v20, v22, v25);
  swift_bridgeObjectRetain();
  sub_21C20DFE8(v20, v22, v25);
  swift_bridgeObjectRelease();
  sub_21C20DFE8(v13, v15, v36);
  swift_bridgeObjectRelease();
  sub_21C20DFE8(v29, v35, v37);
  return swift_bridgeObjectRelease();
}

__n128 sub_21C20C8B4@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  char v8;
  char v9;
  uint64_t v10;
  uint64_t KeyPath;
  __n128 result;
  uint64_t v13;
  uint64_t v14;
  __n128 v15;
  __int128 v16;
  uint64_t v17;
  _QWORD v18[2];
  char v19;
  __int128 v20;
  uint64_t v21;
  char v22;
  __n128 v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  char v29;
  char v30;
  char v31;
  char v32;

  v17 = sub_21C248030();
  sub_21C20C48C((uint64_t)v18);
  v2 = v18[0];
  v3 = v18[1];
  v4 = v19;
  v5 = v21;
  v6 = v22;
  v15 = v23;
  v16 = v20;
  v7 = v24;
  v8 = v25;
  v13 = v27;
  v14 = v26;
  v9 = v28;
  LOBYTE(v18[0]) = 1;
  v32 = v19;
  v31 = v22;
  v30 = v25;
  v29 = v28;
  v10 = sub_21C248204();
  KeyPath = swift_getKeyPath();
  *(_QWORD *)a1 = v17;
  *(_QWORD *)(a1 + 8) = 0;
  *(_BYTE *)(a1 + 16) = 1;
  *(_QWORD *)(a1 + 24) = v2;
  *(_QWORD *)(a1 + 32) = v3;
  *(_BYTE *)(a1 + 40) = v4;
  *(_OWORD *)(a1 + 48) = v16;
  *(_QWORD *)(a1 + 64) = v5;
  *(_BYTE *)(a1 + 72) = v6;
  result = v15;
  *(__n128 *)(a1 + 80) = v15;
  *(_QWORD *)(a1 + 96) = v7;
  *(_BYTE *)(a1 + 104) = v8;
  *(_QWORD *)(a1 + 112) = v14;
  *(_QWORD *)(a1 + 120) = v13;
  *(_BYTE *)(a1 + 128) = v9;
  *(_QWORD *)(a1 + 136) = KeyPath;
  *(_QWORD *)(a1 + 144) = v10;
  return result;
}

uint64_t sub_21C20C9B8()
{
  return sub_21C247F34();
}

uint64_t sub_21C20C9D8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  v2 = sub_21C247DB4();
  MEMORY[0x24BDAC7A8](v2);
  (*(void (**)(char *, uint64_t))(v4 + 16))((char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
  return sub_21C247F40();
}

uint64_t sub_21C20CA58()
{
  return sub_21C247F58();
}

uint64_t sub_21C20CA78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_21C20CAB4(a1, a2, a3, a4, MEMORY[0x24BDEE1E0]);
}

uint64_t sub_21C20CA94()
{
  return sub_21C247F4C();
}

uint64_t sub_21C20CAB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(char *))
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v11;

  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_25524ADA0);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21C1F03EC(a1, (uint64_t)v9, &qword_25524ADA0);
  return a5(v9);
}

uint64_t sub_21C20CB40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_21C20CAB4(a1, a2, a3, a4, MEMORY[0x24BDEE130]);
}

uint64_t sub_21C20CB5C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for EnvironmentView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_21C20CBA0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for EnvironmentView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_21C20CBE4(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for EnvironmentView();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_21C20CC20(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25524AD80);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t destroy for BorderedSizeView()
{
  return swift_release();
}

uint64_t initializeWithCopy for BorderedSizeView(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for BorderedSizeView(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_retain();
  swift_release();
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  return a1;
}

__n128 __swift_memcpy32_8(_OWORD *a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

uint64_t assignWithTake for BorderedSizeView(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_release();
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  return a1;
}

uint64_t getEnumTagSinglePayload for BorderedSizeView(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 32))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for BorderedSizeView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 32) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for BorderedSizeView()
{
  return &type metadata for BorderedSizeView;
}

uint64_t *sub_21C20CDF0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_25524AD88);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v7 = sub_21C247DB4();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v9 = *(int *)(a3 + 20);
    v10 = (uint64_t *)((char *)a1 + v9);
    v11 = (uint64_t *)((char *)a2 + v9);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25524AD90);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v12 = sub_21C2480FC();
      v13 = *(_QWORD *)(v12 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
      {
        v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_25524ADA0);
        memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v13 + 16))(v10, v11, v12);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
      }
    }
    else
    {
      *v10 = *v11;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v15 = *(int *)(a3 + 24);
    v16 = (uint64_t *)((char *)a1 + v15);
    v17 = (uint64_t *)((char *)a2 + v15);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v18 = sub_21C2480FC();
      v19 = *(_QWORD *)(v18 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18))
      {
        v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_25524ADA0);
        memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v19 + 16))(v16, v17, v18);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
      }
    }
    else
    {
      *v16 = *v17;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_21C20D064(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;

  __swift_instantiateConcreteTypeFromMangledName(&qword_25524AD88);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v4 = sub_21C247DB4();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  }
  else
  {
    swift_release();
  }
  v5 = a1 + *(int *)(a2 + 20);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25524AD90);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v6 = sub_21C2480FC();
    v7 = *(_QWORD *)(v6 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6))
      (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
  }
  else
  {
    swift_release();
  }
  v8 = a1 + *(int *)(a2 + 24);
  if (swift_getEnumCaseMultiPayload() != 1)
    return swift_release();
  v9 = sub_21C2480FC();
  v10 = *(_QWORD *)(v9 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
  return result;
}

_QWORD *sub_21C20D1C8(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  __swift_instantiateConcreteTypeFromMangledName(&qword_25524AD88);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v6 = sub_21C247DB4();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)((char *)a1 + v7);
  v9 = (_QWORD *)((char *)a2 + v7);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25524AD90);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v10 = sub_21C2480FC();
    v11 = *(_QWORD *)(v10 - 8);
    if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
    {
      v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_25524ADA0);
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v11 + 16))(v8, v9, v10);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
    }
  }
  else
  {
    *v8 = *v9;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  v13 = *(int *)(a3 + 24);
  v14 = (_QWORD *)((char *)a1 + v13);
  v15 = (_QWORD *)((char *)a2 + v13);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v16 = sub_21C2480FC();
    v17 = *(_QWORD *)(v16 - 8);
    if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
    {
      v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_25524ADA0);
      memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    }
    else
    {
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v17 + 16))(v14, v15, v16);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
    }
  }
  else
  {
    *v14 = *v15;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

_QWORD *sub_21C20D410(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  if (a1 != a2)
  {
    sub_21C1F03B0((uint64_t)a1, &qword_25524AD88);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25524AD88);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v6 = sub_21C247DB4();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v7 = *(int *)(a3 + 20);
    v8 = (_QWORD *)((char *)a1 + v7);
    v9 = (_QWORD *)((char *)a2 + v7);
    sub_21C1F03B0((uint64_t)a1 + v7, &qword_25524AD90);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25524AD90);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v10 = sub_21C2480FC();
      v11 = *(_QWORD *)(v10 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
      {
        v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_25524ADA0);
        memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v11 + 16))(v8, v9, v10);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      }
    }
    else
    {
      *v8 = *v9;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v13 = *(int *)(a3 + 24);
    v14 = (_QWORD *)((char *)a1 + v13);
    v15 = (_QWORD *)((char *)a2 + v13);
    sub_21C1F03B0((uint64_t)a1 + v13, &qword_25524AD90);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25524AD90);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v16 = sub_21C2480FC();
      v17 = *(_QWORD *)(v16 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
      {
        v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_25524ADA0);
        memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v17 + 16))(v14, v15, v16);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
      }
    }
    else
    {
      *v14 = *v15;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

char *sub_21C20D6A0(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_25524AD88);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v7 = sub_21C247DB4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  }
  v8 = *(int *)(a3 + 20);
  v9 = &a1[v8];
  v10 = &a2[v8];
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_25524AD90);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v12 = sub_21C2480FC();
    v13 = *(_QWORD *)(v12 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v10, 1, v12))
    {
      v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_25524ADA0);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v9, v10, v12);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v9, 0, 1, v12);
    }
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  v15 = *(int *)(a3 + 24);
  v16 = &a1[v15];
  v17 = &a2[v15];
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v18 = sub_21C2480FC();
    v19 = *(_QWORD *)(v18 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18))
    {
      v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_25524ADA0);
      memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v16, v17, v18);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
    }
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  return a1;
}

char *sub_21C20D8DC(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  if (a1 != a2)
  {
    sub_21C1F03B0((uint64_t)a1, &qword_25524AD88);
    v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_25524AD88);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v7 = sub_21C247DB4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
    }
    v8 = *(int *)(a3 + 20);
    v9 = &a1[v8];
    v10 = &a2[v8];
    sub_21C1F03B0((uint64_t)&a1[v8], &qword_25524AD90);
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_25524AD90);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v12 = sub_21C2480FC();
      v13 = *(_QWORD *)(v12 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v10, 1, v12))
      {
        v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_25524ADA0);
        memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v9, v10, v12);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v9, 0, 1, v12);
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    }
    v15 = *(int *)(a3 + 24);
    v16 = &a1[v15];
    v17 = &a2[v15];
    sub_21C1F03B0((uint64_t)&a1[v15], &qword_25524AD90);
    v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_25524AD90);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v19 = sub_21C2480FC();
      v20 = *(_QWORD *)(v19 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v17, 1, v19))
      {
        v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_25524ADA0);
        memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v16, v17, v19);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v16, 0, 1, v19);
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_21C20DB60()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_21C20DB6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_25524ADA8);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(qword_25524ADB0);
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t sub_21C20DBE8()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_21C20DBF4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_25524ADA8);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    v10 = __swift_instantiateConcreteTypeFromMangledName(qword_25524ADB0);
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_21C20DC78()
{
  unint64_t v0;
  unint64_t v1;

  sub_21C20DCFC();
  if (v0 <= 0x3F)
  {
    sub_21C20DD50();
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

void sub_21C20DCFC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25524AE20)
  {
    sub_21C247DB4();
    v0 = sub_21C247DC0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25524AE20);
  }
}

void sub_21C20DD50()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25524AE28[0])
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25524ADA0);
    v0 = sub_21C247DC0();
    if (!v1)
      atomic_store(v0, qword_25524AE28);
  }
}

uint64_t sub_21C20DDA8()
{
  return sub_21C1E78E4(&qword_25524AE60, &qword_25524AE68, MEMORY[0x24BDF4750]);
}

uint64_t sub_21C20DDD4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_21C20DDE4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_21C20DDF4()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_21C20DE18@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_21C20BCEC(*(_BYTE *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), a1);
}

uint64_t sub_21C20DE28@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_21C247F7C();
  *a1 = result;
  return result;
}

uint64_t sub_21C20DE50()
{
  swift_retain();
  return sub_21C247F88();
}

uint64_t sub_21C20DE78(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char v4;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = *(_QWORD *)(a1 + 64);
  v4 = *(_BYTE *)(a1 + 72);
  sub_21C20DEF8(*(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48));
  sub_21C20DF28(v2, v3, v4);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

uint64_t sub_21C20DEF8(uint64_t result, uint64_t a2, char a3, uint64_t a4)
{
  if (a4)
  {
    sub_21C20DF28(result, a2, a3 & 1);
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_21C20DF28(uint64_t a1, uint64_t a2, char a3)
{
  if ((a3 & 1) != 0)
    return swift_retain();
  else
    return swift_bridgeObjectRetain();
}

uint64_t sub_21C20DF38(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char v4;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = *(_QWORD *)(a1 + 64);
  v4 = *(_BYTE *)(a1 + 72);
  sub_21C20DFB8(*(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48));
  sub_21C20DFE8(v2, v3, v4);
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return a1;
}

uint64_t sub_21C20DFB8(uint64_t result, uint64_t a2, char a3, uint64_t a4)
{
  if (a4)
  {
    sub_21C20DFE8(result, a2, a3 & 1);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_21C20DFE8(uint64_t a1, uint64_t a2, char a3)
{
  if ((a3 & 1) != 0)
    return swift_release();
  else
    return swift_bridgeObjectRelease();
}

unint64_t sub_21C20DFF8()
{
  unint64_t result;

  result = qword_25524AE70;
  if (!qword_25524AE70)
  {
    result = MEMORY[0x22077702C](MEMORY[0x24BEE0D50], MEMORY[0x24BEE0D00]);
    atomic_store(result, (unint64_t *)&qword_25524AE70);
  }
  return result;
}

unint64_t sub_21C20E03C()
{
  unint64_t result;

  result = qword_25524AE80;
  if (!qword_25524AE80)
  {
    result = MEMORY[0x22077702C](MEMORY[0x24BEE5108], MEMORY[0x24BEE50B0]);
    atomic_store(result, (unint64_t *)&qword_25524AE80);
  }
  return result;
}

uint64_t sub_21C20E080(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v13;

  v2 = 0x6E776F6E6B6E75;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_25524ADA0);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v13 - v7;
  sub_21C1F03EC(a1, (uint64_t)&v13 - v7, &qword_25524ADA0);
  v9 = sub_21C2480FC();
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) != 1)
  {
    sub_21C1F03EC((uint64_t)v8, (uint64_t)v6, &qword_25524ADA0);
    v11 = (*(uint64_t (**)(char *, uint64_t))(v10 + 88))(v6, v9);
    if (v11 == *MEMORY[0x24BDEFEE8])
    {
      v2 = 0x746361706D6F63;
    }
    else if (v11 == *MEMORY[0x24BDEFEF0])
    {
      v2 = 0x72616C75676572;
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v10 + 8))(v6, v9);
    }
  }
  sub_21C1F03B0((uint64_t)v8, &qword_25524ADA0);
  return v2;
}

uint64_t sub_21C20E1F0()
{
  return sub_21C1E78E4(&qword_25524AE88, &qword_25524AE90, MEMORY[0x24BDEC6F8]);
}

unint64_t sub_21C20E220()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_25524AE98;
  if (!qword_25524AE98)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25524AEA0);
    v2[0] = sub_21C1E78E4(&qword_25524AEA8, &qword_25524AEB0, MEMORY[0x24BDF4700]);
    v2[1] = sub_21C1E78E4(&qword_25524AEB8, &qword_25524AEC0, MEMORY[0x24BDF1028]);
    result = MEMORY[0x22077702C](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_25524AE98);
  }
  return result;
}

uint64_t sub_21C20E2BC()
{
  uint64_t v0;
  uint64_t result;

  type metadata accessor for UVJITAgent();
  v0 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25524B078);
  swift_allocObject();
  *(_QWORD *)(v0 + 16) = sub_21C211A3C();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25524B080);
  result = swift_allocObject();
  *(_DWORD *)(result + 64) = 0;
  *(_QWORD *)(result + 16) = 0;
  *(_QWORD *)(result + 24) = 0;
  *(_QWORD *)(result + 32) = 0;
  *(_QWORD *)(result + 40) = 1;
  *(_QWORD *)(result + 48) = 0;
  *(_QWORD *)(result + 56) = 0;
  *(_QWORD *)(v0 + 24) = result;
  qword_2552524E0 = v0;
  return result;
}

void sub_21C20E344(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  void *v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  void (*v16)(char *, uint64_t);
  uint64_t v17;
  id v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  id v22;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  uint8_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  uint64_t v32;

  v32 = sub_21C247CC4();
  v3 = *(_QWORD *)(v32 - 8);
  v4 = MEMORY[0x24BDAC7A8](v32);
  v6 = (char *)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x24BDAC7A8](v4);
  v9 = (char *)&v29 - v8;
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v29 - v10;
  v12 = (void *)objc_opt_self();
  if ((objc_msgSend(v12, sel_isMainThread) & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    v30 = v12;
    v31 = v1;
    sub_21C247CAC();
    v13 = sub_21C247CB8();
    v14 = sub_21C248714();
    if (os_log_type_enabled(v13, v14))
    {
      v15 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v15 = 0;
      _os_log_impl(&dword_21C1E3000, v13, v14, "Agent asked to activate JIT XPC endpoint. Waiting for stub executor to be invoked.", v15, 2u);
      MEMORY[0x2207770EC](v15, -1, -1);
    }

    v16 = *(void (**)(char *, uint64_t))(v3 + 8);
    v17 = v32;
    v16(v11, v32);
    v18 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD1988]), sel_initWithListenerEndpoint_, a1);
    sub_21C247CAC();
    v19 = sub_21C247CB8();
    v20 = sub_21C248714();
    if (os_log_type_enabled(v19, v20))
    {
      v21 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v21 = 0;
      _os_log_impl(&dword_21C1E3000, v19, v20, "Creating XOJIT executor from connection", v21, 2u);
      MEMORY[0x2207770EC](v21, -1, -1);
    }

    v16(v9, v17);
    v22 = objc_msgSend(v18, sel__xpcConnection);
    sub_21C246D88();
    swift_allocObject();
    v23 = sub_21C246D4C();
    sub_21C247CAC();
    v24 = sub_21C247CB8();
    v25 = sub_21C248714();
    if (os_log_type_enabled(v24, v25))
    {
      v26 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v26 = 0;
      _os_log_impl(&dword_21C1E3000, v24, v25, "Calling XOJIT executor start()", v26, 2u);
      MEMORY[0x2207770EC](v26, -1, -1);
    }

    v16(v6, v17);
    sub_21C246D7C();
    v27 = *(_QWORD *)(v31 + 16);
    if (!objc_msgSend(v30, sel_isMainThread))
    {
      v28 = *(_QWORD *)(*(_QWORD *)v27 + 96);
      if (!*(_QWORD *)(v27 + v28))
      {
        *(_QWORD *)(v27 + v28) = v23;
        swift_retain();
        sub_21C24875C();
        swift_release();

        return;
      }
    }
  }
  sub_21C2488AC();
  __break(1u);
}

uint64_t sub_21C20E724(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  void (*v31)(char *, uint64_t, uint64_t);
  NSObject *v32;
  os_log_type_t v33;
  uint8_t *v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  void (*v39)(char *);
  char *v40;
  uint64_t v41;
  int v42;
  NSObject *v43;
  os_log_type_t v44;
  uint8_t *v45;
  NSObject *v46;
  os_log_type_t v47;
  uint8_t *v48;
  NSObject *v49;
  os_log_type_t v50;
  uint8_t *v51;
  NSObject *v52;
  os_log_type_t v53;
  uint8_t *v54;
  NSObject *v55;
  os_log_type_t v56;
  uint8_t *v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  unint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  char *v65;
  char *v66;
  char *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;

  v71 = a1;
  v1 = sub_21C246D58();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = MEMORY[0x24BDAC7A8](v1);
  v5 = (char *)&v62 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = MEMORY[0x24BDAC7A8](v3);
  v67 = (char *)&v62 - v7;
  v8 = MEMORY[0x24BDAC7A8](v6);
  v68 = (char *)&v62 - v9;
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v62 - v10;
  v12 = sub_21C247CC4();
  v69 = *(_QWORD *)(v12 - 8);
  v70 = v12;
  v13 = MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v62 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = MEMORY[0x24BDAC7A8](v13);
  v18 = (char *)&v62 - v17;
  v19 = MEMORY[0x24BDAC7A8](v16);
  v21 = (char *)&v62 - v20;
  v22 = MEMORY[0x24BDAC7A8](v19);
  v24 = (char *)&v62 - v23;
  v25 = MEMORY[0x24BDAC7A8](v22);
  v27 = (char *)&v62 - v26;
  MEMORY[0x24BDAC7A8](v25);
  v29 = (char *)&v62 - v28;
  if ((sub_21C211CA8() & 1) == 0)
  {
    v64 = v24;
    v65 = v5;
    v66 = v15;
    v39 = *(void (**)(char *))(v2 + 16);
    v40 = v67;
    v41 = v71;
    v39(v67);
    v63 = v2;
    v42 = (*(uint64_t (**)(char *, uint64_t))(v2 + 88))(v40, v1);
    if (v42 == *MEMORY[0x24BEC6480])
    {
      sub_21C247CAC();
      v43 = sub_21C247CB8();
      v44 = sub_21C248708();
      if (os_log_type_enabled(v43, v44))
      {
        v45 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v45 = 0;
        _os_log_impl(&dword_21C1E3000, v43, v44, "JIT linker connection terminated", v45, 2u);
        MEMORY[0x2207770EC](v45, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v69 + 8))(v18, v70);
      exit(124);
    }
    if (v42 == *MEMORY[0x24BEC6468])
    {
      sub_21C247CAC();
      v46 = sub_21C247CB8();
      v47 = sub_21C248720();
      if (os_log_type_enabled(v46, v47))
      {
        v48 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v48 = 0;
        _os_log_impl(&dword_21C1E3000, v46, v47, "JIT linker connection terminated due to bad command", v48, 2u);
        MEMORY[0x2207770EC](v48, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v69 + 8))(v27, v70);
      exit(121);
    }
    if (v42 == *MEMORY[0x24BEC6478])
    {
      sub_21C247CAC();
      v49 = sub_21C247CB8();
      v50 = sub_21C248708();
      if (os_log_type_enabled(v49, v50))
      {
        v51 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v51 = 0;
        _os_log_impl(&dword_21C1E3000, v49, v50, "JIT linker connection terminated due to remote disconnect", v51, 2u);
        MEMORY[0x2207770EC](v51, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v69 + 8))(v21, v70);
      exit(123);
    }
    if (v42 == *MEMORY[0x24BEC6470])
    {
      sub_21C247CAC();
      v52 = sub_21C247CB8();
      v53 = sub_21C248720();
      if (os_log_type_enabled(v52, v53))
      {
        v54 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v54 = 0;
        _os_log_impl(&dword_21C1E3000, v52, v53, "JIT linker connection terminated due to failed setup", v54, 2u);
        MEMORY[0x2207770EC](v54, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v69 + 8))(v64, v70);
      exit(122);
    }
    sub_21C247CAC();
    ((void (*)(char *, uint64_t, uint64_t))v39)(v65, v41, v1);
    v55 = sub_21C247CB8();
    v56 = sub_21C248708();
    if (os_log_type_enabled(v55, v56))
    {
      v57 = (uint8_t *)swift_slowAlloc();
      v58 = swift_slowAlloc();
      v73 = v58;
      *(_DWORD *)v57 = 136446210;
      v59 = v65;
      ((void (*)(char *, char *, uint64_t))v39)(v68, v65, v1);
      v60 = sub_21C2484E0();
      v72 = sub_21C203A90(v60, v61, &v73);
      sub_21C2487A4();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v63 + 8))(v59, v1);
      _os_log_impl(&dword_21C1E3000, v55, v56, "JIT linker connection terminated for unknown reason: %{public}s", v57, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2207770EC](v58, -1, -1);
      MEMORY[0x2207770EC](v57, -1, -1);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v63 + 8))(v65, v1);
    }

    (*(void (**)(char *, uint64_t))(v69 + 8))(v66, v70);
    exit(200);
  }
  sub_21C247CAC();
  v30 = v2;
  v31 = *(void (**)(char *, uint64_t, uint64_t))(v2 + 16);
  v31(v11, v71, v1);
  v32 = sub_21C247CB8();
  v33 = sub_21C248720();
  if (os_log_type_enabled(v32, v33))
  {
    v34 = (uint8_t *)swift_slowAlloc();
    v71 = swift_slowAlloc();
    v73 = v71;
    *(_DWORD *)v34 = 136446210;
    v67 = (char *)(v34 + 4);
    v31(v68, (uint64_t)v11, v1);
    v35 = sub_21C2484E0();
    v72 = sub_21C203A90(v35, v36, &v73);
    sub_21C2487A4();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v30 + 8))(v11, v1);
    _os_log_impl(&dword_21C1E3000, v32, v33, "JIT linker connection terminated but will keep agent alive. (termination result: %{public}s)", v34, 0xCu);
    v37 = v71;
    swift_arrayDestroy();
    MEMORY[0x2207770EC](v37, -1, -1);
    MEMORY[0x2207770EC](v34, -1, -1);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v30 + 8))(v11, v1);
  }

  return (*(uint64_t (**)(char *, uint64_t))(v69 + 8))(v29, v70);
}

uint64_t sub_21C20EE6C(uint64_t *a1, unsigned int *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v8;
  __int128 v9;
  _BYTE v10[16];
  _BYTE v11[16];

  v3 = *a2;
  v4 = (uint64_t)(a2 + 4);
  v8 = *(_OWORD *)(a2 + 6);
  v9 = *(_OWORD *)(a2 + 2);
  v5 = (uint64_t)(a2 + 8);
  v6 = *((_QWORD *)a2 + 5);
  sub_21C2126A0(*a1, a1[1], a1[2], a1[3]);
  *a1 = v3;
  *(_OWORD *)(a1 + 1) = v9;
  *(_OWORD *)(a1 + 3) = v8;
  a1[5] = v6;
  sub_21C2126D4(v4, (uint64_t)v11);
  sub_21C2126D4(v5, (uint64_t)v10);
  sub_21C21271C((uint64_t)v11);
  return sub_21C21271C((uint64_t)v10);
}

uint64_t sub_21C20EF18()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t (*v21)(uint64_t, unint64_t);
  uint64_t (*v22)(uint64_t, unint64_t);
  NSObject *v23;
  os_log_type_t v24;
  uint64_t v25;
  uint64_t v26;
  NSObject *v27;
  os_log_type_t v28;
  _BOOL4 v29;
  uint64_t v30;
  uint8_t *v31;
  uint64_t v32;
  uint8_t *v33;
  void (**v34)(char *, uint64_t);
  uint64_t (*v35)(uint64_t, unint64_t);
  NSObject *v36;
  os_log_type_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  NSObject *v42;
  os_log_type_t v43;
  _BOOL4 v44;
  uint8_t *v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v52;
  unint64_t v53;
  const char *v54;
  uint64_t (*v55)(_QWORD, unint64_t);
  char *v56;
  NSObject *v57;
  os_log_type_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  NSObject *v63;
  os_log_type_t v64;
  uint8_t *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  char *v70;
  uint64_t v71;
  void (**v72)(char *, uint64_t);
  unsigned int v73;
  unint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  unint64_t v78;
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;

  v1 = sub_21C247CC4();
  v72 = *(void (***)(char *, uint64_t))(v1 - 8);
  v2 = MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v67 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = MEMORY[0x24BDAC7A8](v2);
  v70 = (char *)&v67 - v6;
  v7 = MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v67 - v8;
  v10 = MEMORY[0x24BDAC7A8](v7);
  v12 = (char *)&v67 - v11;
  v13 = MEMORY[0x24BDAC7A8](v10);
  v15 = (char *)&v67 - v14;
  MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v67 - v16;
  v76 = *(_QWORD *)(v0 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25524B060);
  sub_21C212618(&qword_25524B068, &qword_25524B060);
  sub_21C247A6C();
  v18 = v79;
  if (v79 == 1)
  {
    v62 = v1;
    sub_21C247CAC();
    v63 = sub_21C247CB8();
    v64 = sub_21C248720();
    if (os_log_type_enabled(v63, v64))
    {
      v65 = (uint8_t *)swift_slowAlloc();
      v66 = swift_slowAlloc();
      v77 = v66;
      *(_DWORD *)v65 = 136315138;
      v76 = sub_21C203A90(0xD000000000000014, 0x800000021C24E830, &v77);
      sub_21C2487A4();
      _os_log_impl(&dword_21C1E3000, v63, v64, "%s No user entry point config provided.", v65, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2207770EC](v66, -1, -1);
      MEMORY[0x2207770EC](v65, -1, -1);
    }

    v72[1](v4, v62);
    goto LABEL_33;
  }
  v74 = v78;
  v19 = v80;
  v20 = v81;
  v73 = v77;
  v21 = (uint64_t (*)(uint64_t, unint64_t))dlsym((void *)0xFFFFFFFFFFFFFFFELL, "__debug_blank_executor_run_user_entry_point");
  v75 = v18;
  if (v21)
  {
    v22 = v21;
    sub_21C247CAC();
    v23 = sub_21C247CB8();
    v24 = sub_21C248738();
    if (os_log_type_enabled(v23, v24))
    {
      v25 = swift_slowAlloc();
      v26 = swift_slowAlloc();
      v77 = v26;
      *(_DWORD *)v25 = 136315394;
      v71 = v1;
      v76 = sub_21C203A90(0xD000000000000014, 0x800000021C24E830, &v77);
      sub_21C2487A4();
      *(_WORD *)(v25 + 12) = 2082;
      v76 = sub_21C203A90(0xD00000000000002BLL, 0x800000021C24E880, &v77);
      sub_21C2487A4();
      _os_log_impl(&dword_21C1E3000, v23, v24, "%s Invoking executor entry point, %{public}s.", (uint8_t *)v25, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x2207770EC](v26, -1, -1);
      MEMORY[0x2207770EC](v25, -1, -1);

      v72[1](v17, v71);
    }
    else
    {

      v72[1](v17, v1);
    }
    v40 = v73;
    v41 = v74;
LABEL_16:
    v50 = v22(v40, v41);
    goto LABEL_17;
  }
  v68 = v19;
  sub_21C247CAC();
  v27 = sub_21C247CB8();
  v28 = sub_21C248720();
  v29 = os_log_type_enabled(v27, v28);
  v69 = v20;
  if (v29)
  {
    v30 = swift_slowAlloc();
    v71 = v1;
    v31 = (uint8_t *)v30;
    v32 = swift_slowAlloc();
    v77 = v32;
    *(_DWORD *)v31 = 136315138;
    v76 = sub_21C203A90(0xD00000000000002BLL, 0x800000021C24E880, &v77);
    sub_21C2487A4();
    _os_log_impl(&dword_21C1E3000, v27, v28, "Unable to find entry point trampoline '%s', falling back.", v31, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2207770EC](v32, -1, -1);
    v33 = v31;
    v1 = v71;
    MEMORY[0x2207770EC](v33, -1, -1);
  }

  v34 = (void (**)(char *, uint64_t))v72[1];
  ((void (*)(char *, uint64_t))v34)(v15, v1);
  v35 = (uint64_t (*)(uint64_t, unint64_t))dlsym((void *)0xFFFFFFFFFFFFFFFELL, "__previews_blank_executor_run_user_entry_point");
  if (v35)
  {
    v22 = v35;
    sub_21C247CAC();
    v36 = sub_21C247CB8();
    v37 = sub_21C248738();
    if (os_log_type_enabled(v36, v37))
    {
      v38 = swift_slowAlloc();
      v39 = swift_slowAlloc();
      v77 = v39;
      *(_DWORD *)v38 = 136315394;
      v72 = v34;
      v76 = sub_21C203A90(0xD000000000000014, 0x800000021C24E830, &v77);
      sub_21C2487A4();
      *(_WORD *)(v38 + 12) = 2082;
      v76 = sub_21C203A90(0xD00000000000002ELL, 0x800000021C24E8B0, &v77);
      sub_21C2487A4();
      _os_log_impl(&dword_21C1E3000, v36, v37, "%s Invoking executor entry point, %{public}s.", (uint8_t *)v38, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x2207770EC](v39, -1, -1);
      MEMORY[0x2207770EC](v38, -1, -1);

      ((void (*)(char *, uint64_t))v72)(v12, v1);
    }
    else
    {

      ((void (*)(char *, uint64_t))v34)(v12, v1);
    }
    v41 = v74;
    v40 = v73;
    goto LABEL_16;
  }
  sub_21C247CAC();
  v42 = sub_21C247CB8();
  v43 = sub_21C248720();
  v44 = os_log_type_enabled(v42, v43);
  v71 = v1;
  if (v44)
  {
    v45 = (uint8_t *)swift_slowAlloc();
    v46 = v1;
    v47 = swift_slowAlloc();
    v77 = v47;
    *(_DWORD *)v45 = 136315138;
    v76 = sub_21C203A90(0xD00000000000002ELL, 0x800000021C24E8B0, &v77);
    sub_21C2487A4();
    _os_log_impl(&dword_21C1E3000, v42, v43, "Unable to find entry point trampoline '%s', falling back.", v45, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2207770EC](v47, -1, -1);
    MEMORY[0x2207770EC](v45, -1, -1);

    v48 = v9;
    v49 = v46;
  }
  else
  {

    v48 = v9;
    v49 = v1;
  }
  ((void (*)(char *, uint64_t))v34)(v48, v49);
  if (v69)
    v52 = v68;
  else
    v52 = 1852399981;
  if (v69)
    v53 = v69;
  else
    v53 = 0xE400000000000000;
  v54 = (const char *)(sub_21C2484EC() + 32);
  swift_bridgeObjectRetain();
  v55 = (uint64_t (*)(_QWORD, unint64_t))dlsym((void *)0xFFFFFFFFFFFFFFFELL, v54);
  swift_release();
  if (!v55)
  {
    while (1)
    {
      v77 = 0;
      v78 = 0xE000000000000000;
      sub_21C24881C();
      swift_bridgeObjectRelease();
LABEL_33:
      sub_21C2488AC();
      __break(1u);
    }
  }
  v56 = v70;
  sub_21C247CAC();
  swift_bridgeObjectRetain();
  v57 = sub_21C247CB8();
  v58 = sub_21C248738();
  if (os_log_type_enabled(v57, v58))
  {
    v59 = swift_slowAlloc();
    v60 = swift_slowAlloc();
    v72 = v34;
    v61 = v60;
    v77 = v60;
    *(_DWORD *)v59 = 136315394;
    v76 = sub_21C203A90(0xD000000000000014, 0x800000021C24E830, &v77);
    sub_21C2487A4();
    *(_WORD *)(v59 + 12) = 2082;
    swift_bridgeObjectRetain();
    v76 = sub_21C203A90(v52, v53, &v77);
    sub_21C2487A4();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_21C1E3000, v57, v58, "%s Invoking executor entry point, %{public}s.", (uint8_t *)v59, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2207770EC](v61, -1, -1);
    MEMORY[0x2207770EC](v59, -1, -1);

    ((void (*)(char *, uint64_t))v72)(v70, v71);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    ((void (*)(char *, uint64_t))v34)(v56, v71);
  }
  v50 = v55(v73, v74);
LABEL_17:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v50;
}

uint64_t sub_21C20F9F0()
{
  swift_release();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t __previewsInjectionJITLinkEntrypoint(argc:argv:previewsDylibPath:previewsDylibEntryPointName:)(unsigned int a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  void (*v23)(char *, uint64_t);
  id v24;
  id v25;
  uint64_t v26;
  char v27;
  char v28;
  uint64_t result;
  NSObject *v30;
  os_log_type_t v31;
  uint8_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  NSObject *v37;
  os_log_type_t v38;
  uint8_t *v39;
  uint64_t v40;
  uint64_t *v41;
  os_unfair_lock_s *v42;
  NSObject *v43;
  os_log_type_t v44;
  uint8_t *v45;
  NSObject *v46;
  os_log_type_t v47;
  uint8_t *v48;
  uint64_t v49;
  unsigned int v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unsigned int v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;

  v52 = a3;
  v53 = a4;
  v51 = a2;
  v50 = a1;
  v4 = sub_21C247CC4();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v49 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x24BDAC7A8](v6);
  v11 = (char *)&v49 - v10;
  v12 = MEMORY[0x24BDAC7A8](v9);
  v14 = (char *)&v49 - v13;
  v15 = MEMORY[0x24BDAC7A8](v12);
  v17 = (char *)&v49 - v16;
  MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)&v49 - v18;
  sub_21C247CAC();
  v20 = sub_21C247CB8();
  v21 = sub_21C248714();
  if (os_log_type_enabled(v20, v21))
  {
    v22 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v22 = 0;
    _os_log_impl(&dword_21C1E3000, v20, v21, "__previews_injection_jit_link_entrypoint start", v22, 2u);
    MEMORY[0x2207770EC](v22, -1, -1);
  }

  v23 = *(void (**)(char *, uint64_t))(v5 + 8);
  v23(v19, v4);
  v24 = objc_msgSend((id)objc_opt_self(), sel_processInfo);
  v25 = objc_msgSend(v24, sel_environment);

  v26 = sub_21C248438();
  if (!*(_QWORD *)(v26 + 16))
    return swift_bridgeObjectRelease();
  sub_21C1F63E4(0xD000000000000013, 0x800000021C24E330);
  v28 = v27;
  result = swift_bridgeObjectRelease();
  if ((v28 & 1) != 0)
  {
    sub_21C247CAC();
    v30 = sub_21C247CB8();
    v31 = sub_21C248714();
    if (os_log_type_enabled(v30, v31))
    {
      v32 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v32 = 0;
      _os_log_impl(&dword_21C1E3000, v30, v31, "Previews JIT link environment variable present.", v32, 2u);
      MEMORY[0x2207770EC](v32, -1, -1);
    }

    v23(v17, v4);
    if (qword_2552497B8 != -1)
      swift_once();
    v49 = qword_2552524E0;
    if (v52)
    {
      v52 = sub_21C248510();
      v33 = v34;
    }
    else
    {
      v52 = 0;
      v33 = 0;
    }
    if (v53)
    {
      v53 = sub_21C248510();
      v35 = v36;
    }
    else
    {
      v53 = 0;
      v35 = 0;
    }
    sub_21C247CAC();
    v37 = sub_21C247CB8();
    v38 = sub_21C248714();
    if (os_log_type_enabled(v37, v38))
    {
      v39 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v39 = 0;
      _os_log_impl(&dword_21C1E3000, v37, v38, "Received debug dylib entry point config", v39, 2u);
      MEMORY[0x2207770EC](v39, -1, -1);
    }

    v23(v14, v4);
    v54 = v50;
    v55 = v51;
    v56 = v52;
    v57 = v33;
    v58 = v53;
    v59 = v35;
    v40 = *(_QWORD *)(v49 + 24);
    v41 = (uint64_t *)(v40 + 16);
    v42 = (os_unfair_lock_s *)(v40 + 64);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    os_unfair_lock_lock(v42);
    sub_21C20EE6C(v41, &v54);
    os_unfair_lock_unlock(v42);
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    sub_21C212144();
    swift_retain();
    sub_21C247CAC();
    v43 = sub_21C247CB8();
    v44 = sub_21C248714();
    if (os_log_type_enabled(v43, v44))
    {
      v45 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v45 = 0;
      _os_log_impl(&dword_21C1E3000, v43, v44, "__previews_injection_jit_link_entrypoint JIT connection received.", v45, 2u);
      MEMORY[0x2207770EC](v45, -1, -1);
    }

    v23(v11, v4);
    sub_21C246D70();
    sub_21C246D64();
    sub_21C247CAC();
    v46 = sub_21C247CB8();
    v47 = sub_21C248714();
    if (os_log_type_enabled(v46, v47))
    {
      v48 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v48 = 0;
      _os_log_impl(&dword_21C1E3000, v46, v47, "__previews_injection_jit_link_entrypoint JIT program returned.", v48, 2u);
      MEMORY[0x2207770EC](v48, -1, -1);
    }

    v23(v8, v4);
    exit(-1);
  }
  return result;
}

void __previews_injection_run_user_entrypoint()
{
  __previewsInjectionRunUserEntryPoint()();
}

Swift::Int32 __swiftcall __previewsInjectionRunUserEntryPoint()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  int v7;
  uint64_t v8;

  v0 = sub_21C247CC4();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21C247CAC();
  v4 = sub_21C247CB8();
  v5 = sub_21C248714();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v6 = 0;
    _os_log_impl(&dword_21C1E3000, v4, v5, "__previews_injection_run_user_entrypoint called", v6, 2u);
    MEMORY[0x2207770EC](v6, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  if (qword_2552497B8 != -1)
    swift_once();
  v7 = sub_21C20EF18();
  exit(v7);
}

uint64_t __previews_injection_perform_first_jit_link(unint64_t a1, uint64_t a2)
{
  __previewsInjectionPerformFirstJITLink(argc:argv:)(a1, a2);
  return 0;
}

uint64_t __previewsInjectionPerformFirstJITLink(argc:argv:)(unint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  id v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int64_t v24;
  uint64_t v25;
  int64_t v26;
  uint64_t v27;
  int64_t v28;
  uint64_t v29;
  __int128 v30;
  _QWORD *v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  NSObject *v36;
  os_log_type_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  uint64_t result;
  unint64_t v45;
  unint64_t v46;
  NSObject *v47;
  os_log_type_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  __int128 v63;
  unint64_t v64;
  __int128 v65;
  void (*v66)(char *, uint64_t);
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;

  v67 = a2;
  v3 = sub_21C2484D4();
  MEMORY[0x24BDAC7A8](v3);
  v61 = (char *)&v59 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v68 = sub_21C247CC4();
  v5 = *(_QWORD *)(v68 - 8);
  v6 = MEMORY[0x24BDAC7A8](v68);
  v8 = (char *)&v59 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x24BDAC7A8](v6);
  v11 = (char *)&v59 - v10;
  MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v59 - v12;
  sub_21C247CAC();
  v14 = sub_21C247CB8();
  v15 = sub_21C248714();
  if (os_log_type_enabled(v14, v15))
  {
    v16 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v16 = 0;
    _os_log_impl(&dword_21C1E3000, v14, v15, "__previews_injection_perform_first_jit_link called", v16, 2u);
    MEMORY[0x2207770EC](v16, -1, -1);
  }

  v66 = *(void (**)(char *, uint64_t))(v5 + 8);
  v66(v13, v68);
  v17 = objc_msgSend((id)objc_opt_self(), sel_processInfo);
  v18 = objc_msgSend(v17, sel_environment);

  v19 = sub_21C248438();
  v20 = v19 + 64;
  v21 = 1 << *(_BYTE *)(v19 + 32);
  v22 = -1;
  if (v21 < 64)
    v22 = ~(-1 << v21);
  v23 = v22 & *(_QWORD *)(v19 + 64);
  v24 = (unint64_t)(v21 + 63) >> 6;
  swift_bridgeObjectRetain();
  v25 = 0;
  if (!v23)
    goto LABEL_7;
LABEL_6:
  for (v23 &= v23 - 1; ; v23 = (v27 - 1) & v27)
  {
    swift_bridgeObjectRetain();
    if ((sub_21C248528() & 1) != 0)
    {
      swift_release();
      swift_bridgeObjectRelease();
      v25 = 1;
      goto LABEL_30;
    }
    swift_bridgeObjectRelease();
    if (v23)
      goto LABEL_6;
LABEL_7:
    v26 = v25 + 1;
    if (__OFADD__(v25, 1))
    {
      __break(1u);
LABEL_44:
      __break(1u);
LABEL_45:
      __break(1u);
      goto LABEL_46;
    }
    if (v26 >= v24)
      goto LABEL_29;
    v27 = *(_QWORD *)(v20 + 8 * v26);
    ++v25;
    if (!v27)
    {
      v25 = v26 + 1;
      if (v26 + 1 >= v24)
        goto LABEL_29;
      v27 = *(_QWORD *)(v20 + 8 * v25);
      if (!v27)
      {
        v25 = v26 + 2;
        if (v26 + 2 >= v24)
          goto LABEL_29;
        v27 = *(_QWORD *)(v20 + 8 * v25);
        if (!v27)
        {
          v25 = v26 + 3;
          if (v26 + 3 >= v24)
            goto LABEL_29;
          v27 = *(_QWORD *)(v20 + 8 * v25);
          if (!v27)
          {
            v25 = v26 + 4;
            if (v26 + 4 >= v24)
              goto LABEL_29;
            v27 = *(_QWORD *)(v20 + 8 * v25);
            if (!v27)
              break;
          }
        }
      }
    }
LABEL_24:
    ;
  }
  v28 = v26 + 5;
  if (v28 < v24)
  {
    v27 = *(_QWORD *)(v20 + 8 * v28);
    if (!v27)
    {
      while (1)
      {
        v25 = v28 + 1;
        if (__OFADD__(v28, 1))
          goto LABEL_45;
        if (v25 >= v24)
          goto LABEL_29;
        v27 = *(_QWORD *)(v20 + 8 * v25);
        ++v28;
        if (v27)
          goto LABEL_24;
      }
    }
    v25 = v28;
    goto LABEL_24;
  }
LABEL_29:
  swift_release();
  swift_bridgeObjectRelease();
  v25 = 0;
LABEL_30:
  swift_bridgeObjectRelease();
  if ((a1 & 0x80000000) != 0)
    goto LABEL_44;
  v60 = v8;
  if (!(_DWORD)a1)
    return 0;
  v29 = a1;
  *((_QWORD *)&v30 + 1) = 2;
  v65 = xmmword_21C24A4C0;
  v64 = 0x800000021C24E380;
  *(_QWORD *)&v30 = 136446210;
  v63 = v30;
  v62 = MEMORY[0x24BEE4AD8] + 8;
  v31 = (_QWORD *)v67;
  while (v67)
  {
    if (!*v31)
      goto LABEL_47;
    v23 = sub_21C248510();
    a1 = v32;
    if ((_DWORD)v25)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_25524AED8);
      v33 = swift_allocObject();
      *(_OWORD *)(v33 + 16) = v65;
      v70 = 0;
      v71 = 0xE000000000000000;
      sub_21C24881C();
      swift_bridgeObjectRelease();
      v70 = 0xD000000000000017;
      v71 = v64;
      sub_21C248504();
      sub_21C248504();
      v34 = v70;
      v35 = v71;
      *(_QWORD *)(v33 + 56) = MEMORY[0x24BEE0D00];
      *(_QWORD *)(v33 + 32) = v34;
      *(_QWORD *)(v33 + 40) = v35;
      sub_21C212240();
      sub_21C248990();
      swift_bridgeObjectRelease();
    }
    sub_21C247CAC();
    swift_bridgeObjectRetain_n();
    v36 = sub_21C247CB8();
    v37 = sub_21C248714();
    if (os_log_type_enabled(v36, v37))
    {
      v38 = v25;
      v39 = swift_slowAlloc();
      v40 = swift_slowAlloc();
      v70 = v40;
      *(_DWORD *)v39 = v63;
      swift_bridgeObjectRetain();
      *(_QWORD *)(v39 + 4) = sub_21C203A90(v23, a1, &v70);
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_21C1E3000, v36, v37, "Agent: calling dlopen(\"%{public}s\", RTLD_NOW)...", (uint8_t *)v39, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2207770EC](v40, -1, -1);
      v41 = v39;
      v25 = v38;
      MEMORY[0x2207770EC](v41, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    v66(v11, v68);
    v42 = sub_21C2484EC();
    v43 = dlopen((const char *)(v42 + 32), 2);
    swift_release();
    if (!v43)
      goto LABEL_48;
    swift_bridgeObjectRelease();
    ++v31;
    if (!--v29)
      return 0;
  }
LABEL_46:
  __break(1u);
LABEL_47:
  __break(1u);
LABEL_48:
  LODWORD(v64) = v25;
  if (dlerror())
  {
    sub_21C2484BC();
    v67 = sub_21C2484B0();
    v46 = v45;
  }
  else
  {
    v67 = 0;
    v46 = 0;
  }
  sub_21C247CAC();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  v47 = sub_21C247CB8();
  v48 = sub_21C248720();
  if (os_log_type_enabled(v47, v48))
  {
    v49 = swift_slowAlloc();
    *(_QWORD *)&v63 = swift_slowAlloc();
    v70 = v63;
    *(_DWORD *)v49 = 136446466;
    swift_bridgeObjectRetain();
    v69 = sub_21C203A90(v23, a1, &v70);
    sub_21C2487A4();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v49 + 12) = 2082;
    if (v46)
      v50 = v67;
    else
      v50 = 0;
    if (v46)
      v51 = v46;
    else
      v51 = 0xE000000000000000;
    swift_bridgeObjectRetain();
    v69 = sub_21C203A90(v50, v51, &v70);
    sub_21C2487A4();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_21C1E3000, v47, v48, "Agent: Failed linking pseudodylib %{public}s %{public}s", (uint8_t *)v49, 0x16u);
    v52 = v63;
    swift_arrayDestroy();
    MEMORY[0x2207770EC](v52, -1, -1);
    MEMORY[0x2207770EC](v49, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
  v66(v60, v68);
  if ((_DWORD)v64)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_25524AED8);
    v53 = swift_allocObject();
    *(_OWORD *)(v53 + 16) = v65;
    v70 = 0;
    v71 = 0xE000000000000000;
    sub_21C24881C();
    swift_bridgeObjectRelease();
    v70 = 0xD000000000000022;
    v71 = 0x800000021C24E350;
    sub_21C248504();
    v54 = v70;
    v55 = v71;
    *(_QWORD *)(v53 + 56) = MEMORY[0x24BEE0D00];
    *(_QWORD *)(v53 + 32) = v54;
    *(_QWORD *)(v53 + 40) = v55;
    sub_21C212240();
    sub_21C248990();
    swift_bridgeObjectRelease();
    if (v46)
    {
      v56 = swift_allocObject();
      *(_OWORD *)(v56 + 16) = v65;
      v70 = 0x203A746E656741;
      v71 = 0xE700000000000000;
      swift_bridgeObjectRetain();
      sub_21C248504();
      swift_bridgeObjectRelease();
      v57 = v70;
      v58 = v71;
      *(_QWORD *)(v56 + 56) = MEMORY[0x24BEE0D00];
      *(_QWORD *)(v56 + 32) = v57;
      *(_QWORD *)(v56 + 40) = v58;
      sub_21C248990();
      swift_bridgeObjectRelease();
    }
  }
  v70 = 0;
  v71 = 0xE000000000000000;
  sub_21C24881C();
  swift_bridgeObjectRelease();
  v70 = 0x6C2064656C696146;
  v71 = 0xEF20676E696B6E69;
  sub_21C248504();
  sub_21C248504();
  sub_21C248504();
  swift_bridgeObjectRelease();
  result = sub_21C2488AC();
  __break(1u);
  return result;
}

uint64_t sub_21C210AB4()
{
  FILE *v0;
  uint64_t v1;

  v0 = (FILE *)sub_21C247D00();
  v1 = sub_21C2484EC();
  fputs((const char *)(v1 + 32), v0);
  return swift_release();
}

uint64_t __previewsInjectionGetDebugPseudodylibSwiftEntrySectionData()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint8_t *v22;
  uint8_t *v23;
  void (*v24)(char *, uint64_t);
  void (*v25)(char *, uint64_t);
  uint64_t v26;
  char v27;
  char *v28;
  unint64_t v29;
  NSObject *v30;
  os_log_type_t v31;
  uint8_t *v32;
  uint64_t result;
  NSObject *v34;
  os_log_type_t v35;
  uint8_t *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  uint64_t v45;

  v0 = sub_21C2483C0();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (uint64_t *)((char *)&v37 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  v40 = sub_21C2483D8();
  v4 = *(_QWORD *)(v40 - 8);
  v5 = MEMORY[0x24BDAC7A8](v40);
  v7 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v37 - v8;
  v42 = sub_21C247CC4();
  v10 = *(_QWORD *)(v42 - 8);
  v11 = MEMORY[0x24BDAC7A8](v42);
  v39 = (char *)&v37 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x24BDAC7A8](v11);
  v41 = (char *)&v37 - v14;
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v37 - v15;
  sub_21C247CAC();
  v17 = sub_21C247CB8();
  v18 = sub_21C248714();
  if (os_log_type_enabled(v17, v18))
  {
    v19 = (uint8_t *)swift_slowAlloc();
    v38 = v1;
    v20 = v0;
    v21 = v4;
    v22 = v19;
    *(_WORD *)v19 = 0;
    _os_log_impl(&dword_21C1E3000, v17, v18, "__previews_injection_get_debug_dodylib_swift_entry_section_data called", v19, 2u);
    v23 = v22;
    v4 = v21;
    v0 = v20;
    v1 = v38;
    MEMORY[0x2207770EC](v23, -1, -1);
  }

  v24 = *(void (**)(char *, uint64_t))(v10 + 8);
  v24(v16, v42);
  if (qword_2552497C8 != -1)
    swift_once();
  sub_21C2483CC();
  *v3 = 1;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x24BEE5420], v0);
  MEMORY[0x220776534](v7, v3);
  (*(void (**)(_QWORD *, uint64_t))(v1 + 8))(v3, v0);
  v25 = *(void (**)(char *, uint64_t))(v4 + 8);
  v26 = v40;
  v25(v7, v40);
  v27 = sub_21C248744();
  v25(v9, v26);
  if ((v27 & 1) != 0)
  {
    sub_21C247CAC();
    v34 = sub_21C247CB8();
    v35 = sub_21C248720();
    if (os_log_type_enabled(v34, v35))
    {
      v36 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v36 = 0;
      _os_log_impl(&dword_21C1E3000, v34, v35, "Timed out waiting for swift entry section registration.", v36, 2u);
      MEMORY[0x2207770EC](v36, -1, -1);
    }

    v24(v39, v42);
  }
  else
  {
    v28 = v41;
    if (qword_2552497C0 != -1)
      swift_once();
    v45 = qword_25524AEC8;
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_25524AEE8);
    sub_21C212618(&qword_25524AEF0, &qword_25524AEE8);
    sub_21C247A60();
    swift_release();
    v29 = v43;
    sub_21C247CAC();
    v30 = sub_21C247CB8();
    v31 = sub_21C248714();
    if (os_log_type_enabled(v30, v31))
    {
      v32 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v32 = 134217984;
      v43 = v29;
      sub_21C2487A4();
      _os_log_impl(&dword_21C1E3000, v30, v31, "Received Swift entry point: %lx)", v32, 0xCu);
      MEMORY[0x2207770EC](v32, -1, -1);
    }

    v24(v28, v42);
    if (v29)
      return v29;
    v43 = 0;
    v44 = 0xE000000000000000;
    sub_21C24881C();
    swift_bridgeObjectRelease();
    v43 = 0xD00000000000002FLL;
    v44 = 0x800000021C24E4D0;
    v45 = 0;
    sub_21C2488F4();
    sub_21C248504();
    swift_bridgeObjectRelease();
  }
  result = sub_21C2488AC();
  __break(1u);
  return result;
}

uint64_t sub_21C211080@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  if ((*(_BYTE *)(result + 8) & 1) != 0)
  {
    result = sub_21C2488AC();
    __break(1u);
  }
  else
  {
    *a2 = *(_QWORD *)result;
  }
  return result;
}

uint64_t __previews_injection_register_swift_extension_entry_section(int a1, _QWORD *a2)
{
  __previewsInjectionRegisterSwiftExtensionEntrySeciont(argc:argv:)(a1, a2);
  return 0;
}

uint64_t __previewsInjectionRegisterSwiftExtensionEntrySeciont(argc:argv:)(int a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  uint8_t *v27;
  uint8_t *v28;
  void (*v29)(char *, uint64_t);
  uint64_t v30;
  uint64_t v31;
  NSObject *v32;
  os_log_type_t v33;
  void (*v34)(char *, uint64_t);
  uint8_t *v35;
  uint8_t *v36;
  uint64_t v37;
  uint64_t result;
  void (*v39)(char *, uint64_t);
  NSObject *v40;
  os_log_type_t v41;
  uint8_t *v42;
  void (*v43)(char *, uint64_t);
  NSObject *v44;
  os_log_type_t v45;
  uint8_t *v46;
  _QWORD v47[2];
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;

  v4 = sub_21C2479E8();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v50 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v55 = sub_21C247CC4();
  v8 = *(_QWORD *)(v55 - 8);
  v9 = MEMORY[0x24BDAC7A8](v55);
  v54 = (char *)&v50 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v53 = (char *)&v50 - v12;
  v13 = MEMORY[0x24BDAC7A8](v11);
  v52 = (char *)&v50 - v14;
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v50 - v16;
  MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)&v50 - v18;
  sub_21C247CAC();
  v20 = sub_21C247CB8();
  v21 = sub_21C248714();
  if (os_log_type_enabled(v20, v21))
  {
    v22 = (uint8_t *)swift_slowAlloc();
    v51 = v17;
    v23 = a2;
    v24 = v5;
    v25 = v4;
    v26 = a1;
    v27 = v22;
    *(_WORD *)v22 = 0;
    _os_log_impl(&dword_21C1E3000, v20, v21, "__previews_injection_register_swift_extension_entry_section called", v22, 2u);
    v28 = v27;
    a1 = v26;
    v4 = v25;
    v5 = v24;
    a2 = v23;
    v17 = v51;
    MEMORY[0x2207770EC](v28, -1, -1);
  }

  v29 = *(void (**)(char *, uint64_t))(v8 + 8);
  v30 = v55;
  v29(v19, v55);
  if (a1 < 1 || !a2)
  {
    v39 = v29;
    sub_21C247CAC();
    v40 = sub_21C247CB8();
    v41 = sub_21C248720();
    if (os_log_type_enabled(v40, v41))
    {
      v42 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v42 = 0;
      _os_log_impl(&dword_21C1E3000, v40, v41, "No data passed to swift entry registration function.", v42, 2u);
      MEMORY[0x2207770EC](v42, -1, -1);
    }

    v39(v53, v55);
    LODWORD(v49) = 0;
    v48 = 334;
    goto LABEL_19;
  }
  if (!*a2)
  {
    v43 = v29;
    sub_21C247CAC();
    v44 = sub_21C247CB8();
    v45 = sub_21C248720();
    if (os_log_type_enabled(v44, v45))
    {
      v46 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v46 = 0;
      _os_log_impl(&dword_21C1E3000, v44, v45, "Could not dereference swift entry pointer string argument.", v46, 2u);
      MEMORY[0x2207770EC](v46, -1, -1);
    }

    v43(v52, v55);
    LODWORD(v49) = 0;
    v48 = 339;
LABEL_19:
    result = sub_21C2488AC();
    __break(1u);
    return result;
  }
  sub_21C248510();
  sub_21C2479D0();
  v31 = sub_21C2479DC();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  sub_21C247CAC();
  v32 = sub_21C247CB8();
  v33 = sub_21C248714();
  if (os_log_type_enabled(v32, v33))
  {
    v34 = v29;
    v35 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v35 = 134349056;
    v56 = v31;
    sub_21C2487A4();
    _os_log_impl(&dword_21C1E3000, v32, v33, "Swift entry pointer section received: %{public}llx", v35, 0xCu);
    v36 = v35;
    v29 = v34;
    MEMORY[0x2207770EC](v36, -1, -1);
  }

  v29(v17, v30);
  if (qword_2552497C0 != -1)
    swift_once();
  v56 = qword_25524AEC8;
  MEMORY[0x24BDAC7A8](qword_25524AEC8);
  swift_retain();
  v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_25524AEE8);
  v49 = sub_21C212618(&qword_25524AEF0, &qword_25524AEE8);
  v47[1] = v37;
  v48 = MEMORY[0x24BEE4AE0] + 8;
  v47[0] = v47;
  sub_21C247A60();
  swift_release();
  if (qword_2552497C8 != -1)
    swift_once();
  sub_21C24875C();
  return 0;
}

uint64_t sub_21C211874(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;

  v4 = sub_21C247CC4();
  result = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_BYTE *)(a1 + 8) == 1)
  {
    *(_QWORD *)a1 = a2;
    *(_BYTE *)(a1 + 8) = 0;
  }
  else
  {
    v13 = v6;
    v15 = result;
    v9 = v8;
    sub_21C247CAC();
    v14 = v9;
    v10 = sub_21C247CB8();
    v11 = sub_21C248720();
    if (os_log_type_enabled(v10, v11))
    {
      v12 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v12 = 0;
      _os_log_impl(&dword_21C1E3000, v10, v11, "Swift extension entry section already registered.", v12, 2u);
      MEMORY[0x2207770EC](v12, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v13 + 8))(v14, v15);
    result = sub_21C2488AC();
    __break(1u);
  }
  return result;
}

uint64_t sub_21C2119D8()
{
  uint64_t result;

  __swift_instantiateConcreteTypeFromMangledName(&qword_25524B058);
  result = sub_21C247C7C();
  qword_25524AEC8 = result;
  return result;
}

dispatch_semaphore_t sub_21C211A1C()
{
  dispatch_semaphore_t result;

  result = dispatch_semaphore_create(0);
  qword_25524AED0 = (uint64_t)result;
  return result;
}

uint64_t sub_21C211A3C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_25524B050);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (uint64_t *)((char *)&v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  v4 = v0 + qword_25524AFC0;
  v5 = sub_21C2483C0();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v7(v4, 1, 1, v5);
  *(_QWORD *)(v0 + *(_QWORD *)(*(_QWORD *)v0 + 96)) = 0;
  v8 = *(_QWORD *)(*(_QWORD *)v0 + 104);
  *(_QWORD *)(v0 + v8) = dispatch_semaphore_create(0);
  if ((sub_21C211CA8() & 1) != 0)
  {
    v9 = v3;
    v10 = 1;
  }
  else
  {
    *v3 = 30;
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(v6 + 104))(v3, *MEMORY[0x24BEE5420], v5);
    v9 = v3;
    v10 = 0;
  }
  v7((uint64_t)v9, v10, 1, v5);
  v11 = v0 + qword_25524AFC0;
  swift_beginAccess();
  sub_21C212744((uint64_t)v3, v11);
  swift_endAccess();
  return v0;
}

uint64_t sub_21C211B80()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_21C2125D8(v0 + qword_25524AFC0);
  v1 = v0 + *(_QWORD *)(*(_QWORD *)v0 + 96);
  v2 = sub_21C248798();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);

  return v0;
}

uint64_t sub_21C211BF4()
{
  sub_21C211B80();
  return swift_deallocClassInstance();
}

void *sub_21C211C14(void *__src, uint64_t a2, void *__dst, uint64_t a4)
{
  uint64_t v4;

  if (__src)
    v4 = a2 - (_QWORD)__src;
  else
    v4 = 0;
  if (!__dst)
  {
    if (v4 <= 0)
      return __src;
LABEL_10:
    __src = (void *)sub_21C2488E8();
    __break(1u);
    return __src;
  }
  if (a4 - (uint64_t)__dst < v4)
    goto LABEL_10;
  if (__src)
    return memmove(__dst, __src, a2 - (_QWORD)__src);
  return __src;
}

uint64_t sub_21C211CA8()
{
  uint64_t inited;
  id v1;
  id v2;
  uint64_t v3;
  unint64_t v4;
  char v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  __swift_instantiateConcreteTypeFromMangledName(qword_25524A018);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_21C2495D0;
  *(_OWORD *)(inited + 32) = xmmword_21C24A900;
  *(_OWORD *)(inited + 48) = xmmword_21C24A910;
  v1 = objc_msgSend((id)objc_opt_self(), sel_processInfo);
  v2 = objc_msgSend(v1, sel_environment);

  v3 = sub_21C248438();
  if (*(_QWORD *)(v3 + 16) && (v4 = sub_21C1F63E4(0xD000000000000036, 0x800000021C24E6F0), (v5 & 1) != 0))
  {
    v6 = (uint64_t *)(*(_QWORD *)(v3 + 56) + 16 * v4);
    v8 = *v6;
    v7 = v6[1];
    swift_bridgeObjectRetain();
  }
  else
  {
    v8 = 0;
    v7 = 0;
  }
  swift_bridgeObjectRelease();
  v9 = *(_QWORD *)(inited + 40);
  if (v9)
  {
    if (!v7)
    {
      if (!*(_QWORD *)(inited + 56))
        goto LABEL_20;
      goto LABEL_18;
    }
    if (*(_QWORD *)(inited + 32) == v8 && v9 == v7 || (sub_21C248924() & 1) != 0)
      goto LABEL_16;
LABEL_12:
    v10 = *(_QWORD *)(inited + 56);
    if (v10 && (*(_QWORD *)(inited + 48) == v8 && v10 == v7 || (sub_21C248924() & 1) != 0))
    {
LABEL_16:
      swift_bridgeObjectRelease();
      goto LABEL_20;
    }
LABEL_18:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return 0;
  }
  if (v7)
    goto LABEL_12;
LABEL_20:
  swift_bridgeObjectRelease();
  return 1;
}

uint64_t sub_21C211E70()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  void (*v17)(char *, uint64_t);
  char v18;
  uint64_t result;
  uint64_t v20;

  v1 = v0;
  v2 = sub_21C2483D8();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v20 - v7;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_25524B050);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_21C2483C0();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v20 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (objc_msgSend((id)objc_opt_self(), sel_isMainThread))
  {
    v16 = v1 + qword_25524AFC0;
    swift_beginAccess();
    sub_21C212658(v16, (uint64_t)v11);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
    {
      sub_21C2125D8((uint64_t)v11);
      sub_21C248750();
      goto LABEL_6;
    }
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v15, v11, v12);
    sub_21C2483CC();
    MEMORY[0x220776534](v6, v15);
    v17 = *(void (**)(char *, uint64_t))(v3 + 8);
    v17(v6, v2);
    v18 = sub_21C248744();
    v17(v8, v2);
    if ((v18 & 1) == 0)
    {
      (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
LABEL_6:
      result = *(_QWORD *)(v1 + *(_QWORD *)(*(_QWORD *)v1 + 96));
      if (result)
        return result;
    }
  }
  result = sub_21C2488AC();
  __break(1u);
  return result;
}

uint64_t sub_21C212144()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v8;

  v0 = sub_21C247CC4();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21C247CAC();
  v4 = sub_21C247CB8();
  v5 = sub_21C248714();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v6 = 0;
    _os_log_impl(&dword_21C1E3000, v4, v5, "Waiting for JIT executor to appear.", v6, 2u);
    MEMORY[0x2207770EC](v6, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return sub_21C211E70();
}

unint64_t sub_21C212240()
{
  unint64_t result;

  result = qword_25524AEE0;
  if (!qword_25524AEE0)
  {
    result = MEMORY[0x22077702C](&unk_21C24A9C4, &type metadata for StderrOutputStream);
    atomic_store(result, (unint64_t *)&qword_25524AEE0);
  }
  return result;
}

uint64_t sub_21C212284(uint64_t a1)
{
  uint64_t v1;

  return sub_21C211874(a1, *(_QWORD *)(v1 + 16));
}

uint64_t type metadata accessor for UVJITAgent()
{
  return objc_opt_self();
}

void sub_21C2122C0()
{
  unint64_t v0;
  unint64_t v1;

  sub_21C212364();
  if (v0 <= 0x3F)
  {
    sub_21C248798();
    if (v1 <= 0x3F)
      swift_initClassMetadata2();
  }
}

uint64_t type metadata accessor for BlockingBox(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for BlockingBox);
}

void sub_21C212364()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25524B048)
  {
    sub_21C2483C0();
    v0 = sub_21C248798();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25524B048);
  }
}

uint64_t destroy for UVJITAgent.DebugDylibEntryPointConfig()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for UVJITAgent.DebugDylibEntryPointConfig(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  v3 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v3;
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for UVJITAgent.DebugDylibEntryPointConfig(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for UVJITAgent.DebugDylibEntryPointConfig(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v4;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for UVJITAgent.DebugDylibEntryPointConfig(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 48))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 24);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for UVJITAgent.DebugDylibEntryPointConfig(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 48) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 48) = 0;
    if (a2)
      *(_QWORD *)(result + 24) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for UVJITAgent.DebugDylibEntryPointConfig()
{
  return &type metadata for UVJITAgent.DebugDylibEntryPointConfig;
}

ValueMetadata *type metadata accessor for StderrOutputStream()
{
  return &type metadata for StderrOutputStream;
}

uint64_t sub_21C2125D8(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25524B050);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_21C212618(unint64_t *a1, uint64_t *a2)
{
  uint64_t result;
  uint64_t v4;

  result = *a1;
  if (!result)
  {
    v4 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    result = MEMORY[0x22077702C](MEMORY[0x24BE76C78], v4);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_21C212658(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25524B050);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_21C2126A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;

  if (a4 != 1)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_21C2126D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25524B070);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_21C21271C(uint64_t a1)
{
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_21C212744(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25524B050);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_21C21278C@<X0>(char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, int a5@<W4>, unsigned __int8 *a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  void (*v28)(__int128 *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t result;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  uint64_t v42;
  char v43;
  int *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  void (*v56)(char *, uint64_t);
  char *v57;
  void (*v58)(char *, uint64_t, uint64_t);
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t *v62;
  uint64_t (*v63)(uint64_t, uint64_t);
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t (*v68)(uint64_t, uint64_t);
  uint64_t *v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  int *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  int v83;
  uint64_t v84;
  int v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  __int128 v93[3];
  char *v94;

  v92 = a3;
  v85 = a5;
  v94 = a1;
  v90 = *(_QWORD *)(a7 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v87 = (char *)&v67 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_255249930);
  MEMORY[0x24BDAC7A8](v16);
  v89 = (uint64_t)&v67 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v88 = sub_21C2470E8();
  v86 = *(_QWORD *)(v88 - 8);
  MEMORY[0x24BDAC7A8](v88);
  v78 = (char *)&v67 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v80 = type metadata accessor for RenderEffects(0);
  MEMORY[0x24BDAC7A8](v80);
  v81 = (uint64_t)&v67 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v82 = sub_21C247E74();
  v20 = *(_QWORD *)(v82 - 8);
  MEMORY[0x24BDAC7A8](v82);
  v79 = (char *)&v67 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = type metadata accessor for PreviewDisplayContext.Configuration(0);
  MEMORY[0x24BDAC7A8](v22);
  v24 = (char *)&v67 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v83 = *a6;
  v25 = type metadata accessor for PreviewDisplayContext(0);
  v26 = *(int *)(v25 + 28);
  v84 = a9;
  v27 = (uint64_t *)(a9 + v26);
  *v27 = 0;
  v27[1] = 0;
  v28 = *(void (**)(__int128 *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t))(a8 + 40);
  v29 = v91;
  v91 = a7;
  v30 = a7;
  v31 = a8;
  v28(v93, a4, a2, v30, a8);
  if (v29)
  {
    sub_21C1EE258(a4);
    sub_21C215050(v92);
    sub_21C1F03B0(a2, &qword_255249DD0);
    (*(void (**)(char *, uint64_t))(v90 + 8))(v94, v91);
    return swift_bridgeObjectRelease();
  }
  else
  {
    v71 = v20;
    v72 = v24;
    v73 = (int *)v22;
    v33 = v80;
    v77 = v25;
    v69 = v27;
    v74 = 0;
    v75 = a4;
    v70 = a2;
    v34 = v84;
    sub_21C1EB66C(v93, v84);
    v35 = v79;
    v36 = v91;
    (*(void (**)(uint64_t, uint64_t))(v31 + 24))(v91, v31);
    v37 = v81;
    sub_21C1E7170(v92, v81, type metadata accessor for RenderEffects);
    v68 = *(uint64_t (**)(uint64_t, uint64_t))(v31 + 8);
    v38 = v68(v36, v31);
    v76 = v31;
    v40 = v37;
    if (v39)
    {
      v41 = v85;
      v42 = v33;
      if (v38 == 0xD000000000000010 && v39 == 0x800000021C24EAA0)
        v43 = 1;
      else
        v43 = sub_21C248924();
      v44 = v73;
      swift_bridgeObjectRelease();
    }
    else
    {
      v43 = 0;
      v41 = v85;
      v42 = v33;
      v44 = v73;
    }
    v45 = (uint64_t)v72;
    (*(void (**)(char *, char *, uint64_t))(v71 + 32))(v72, v35, v82);
    *(_BYTE *)(v45 + v44[5]) = v41 & 1;
    sub_21C1F00F0(v40, v45 + v44[6], type metadata accessor for RenderEffects);
    *(_BYTE *)(v45 + v44[7]) = v43 & 1;
    *(_BYTE *)(v45 + v44[8]) = v83;
    sub_21C1F00F0(v45, v34 + *(int *)(v77 + 20), type metadata accessor for PreviewDisplayContext.Configuration);
    v46 = v89;
    sub_21C1E6D24(v92 + *(int *)(v42 + 20), v89);
    v48 = v90;
    v47 = v91;
    v49 = v87;
    v50 = v94;
    (*(void (**)(char *, char *, uint64_t))(v90 + 16))(v87, v94, v91);
    v51 = v86;
    v52 = v88;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v86 + 48))(v46, 1, v88) == 1)
    {
      v53 = v34;
      v54 = v51;
      v55 = v78;
      (*(void (**)(uint64_t))(v76 + 32))(v47);
      v56 = *(void (**)(char *, uint64_t))(v48 + 8);
      v57 = v55;
      v56(v49, v47);
      sub_21C1F03B0(v89, &qword_255249930);
      v58 = *(void (**)(char *, uint64_t, uint64_t))(v54 + 32);
    }
    else
    {
      v59 = v46;
      v53 = v34;
      v56 = *(void (**)(char *, uint64_t))(v48 + 8);
      v56(v49, v47);
      v58 = *(void (**)(char *, uint64_t, uint64_t))(v51 + 32);
      v57 = v78;
      v58(v78, v59, v52);
    }
    v60 = v70;
    v61 = v52;
    v62 = v69;
    v63 = v68;
    v58((char *)(v53 + *(int *)(v77 + 24)), (uint64_t)v57, v61);
    v64 = v63(v47, v76);
    v66 = v65;
    sub_21C1EE258(v75);
    sub_21C215050(v92);
    sub_21C1F03B0(v60, &qword_255249DD0);
    v56(v50, v47);
    result = swift_bridgeObjectRelease();
    *v62 = v64;
    v62[1] = v66;
  }
  return result;
}

uint64_t PreviewDisplayContext.Configuration.layout.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_21C247E74();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t PreviewDisplayContext.Configuration.layout.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_21C247E74();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*PreviewDisplayContext.Configuration.layout.modify())()
{
  return nullsub_1;
}

uint64_t PreviewDisplayContext.Configuration.allowAnimations.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for PreviewDisplayContext.Configuration(0) + 20));
}

uint64_t type metadata accessor for PreviewDisplayContext.Configuration(uint64_t a1)
{
  return sub_21C1F2E98(a1, qword_25524B180);
}

uint64_t PreviewDisplayContext.Configuration.allowAnimations.setter(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for PreviewDisplayContext.Configuration(0);
  *(_BYTE *)(v1 + *(int *)(result + 20)) = a1;
  return result;
}

uint64_t (*PreviewDisplayContext.Configuration.allowAnimations.modify())(_QWORD, _QWORD)
{
  type metadata accessor for PreviewDisplayContext.Configuration(0);
  return nullsub_1;
}

BOOL static PreviewDisplayContext.SafeAreaPolicy.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t PreviewDisplayContext.description.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_21C24881C();
  sub_21C248504();
  v1 = v0 + *(int *)(type metadata accessor for PreviewDisplayContext(0) + 20);
  sub_21C247E74();
  sub_21C248870();
  sub_21C248504();
  sub_21C2470E8();
  sub_21C248870();
  sub_21C248504();
  v2 = type metadata accessor for PreviewDisplayContext.Configuration(0);
  sub_21C248504();
  swift_bridgeObjectRelease();
  sub_21C248504();
  v3 = *(_QWORD *)(v1 + *(int *)(v2 + 24));
  v4 = sub_21C247094();
  MEMORY[0x2207766C0](v3, v4);
  sub_21C248504();
  swift_bridgeObjectRelease();
  sub_21C248504();
  sub_21C248870();
  sub_21C248504();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25524B070);
  sub_21C24878C();
  sub_21C248504();
  swift_bridgeObjectRelease();
  sub_21C248504();
  sub_21C248504();
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t PreviewDisplayContext.SafeAreaPolicy.hash(into:)()
{
  return sub_21C2489B4();
}

uint64_t PreviewDisplayContext.SafeAreaPolicy.hashValue.getter()
{
  sub_21C2489A8();
  sub_21C2489B4();
  return sub_21C2489C0();
}

BOOL sub_21C213168(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t PreviewDisplayContext.hostRecipe.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_21C1E7170(v1, a1, type metadata accessor for PreviewDisplayContext);
}

uint64_t sub_21C2131A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  int v15;
  void (*v16)(char *, uint64_t, uint64_t, uint64_t);
  char v17;
  _BYTE v20[40];

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v7 = sub_21C248798();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v11 = &v20[-v10 - 8];
  v12 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x24BDAC7A8](v9);
  v14 = &v20[-v13 - 8];
  sub_21C1E712C(a1, (uint64_t)v20);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2552499B0);
  v15 = swift_dynamicCast();
  v16 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56);
  if (v15)
  {
    v16(v11, 0, 1, AssociatedTypeWitness);
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v14, v11, AssociatedTypeWitness);
    v17 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(a3 + 24))(v14, a2, a3);
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, AssociatedTypeWitness);
  }
  else
  {
    v16(v11, 1, 1, AssociatedTypeWitness);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v7);
    v17 = 0;
  }
  return v17 & 1;
}

uint64_t _s7SwiftUI13PreviewLayoutO17PreviewsInjectionE2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  double *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  double *v12;
  void (*v13)(char *, uint64_t, uint64_t);
  uint64_t (*v14)(char *, uint64_t);
  int v15;
  int v16;
  void (*v17)(double *, uint64_t);
  double v18;
  double v19;
  _BOOL8 v20;
  uint64_t v22;

  v4 = sub_21C247E74();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (double *)((char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_25524B1C8);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (double *)&v11[*(int *)(v9 + 48)];
  v13 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v13(v11, a1, v4);
  v13((char *)v12, a2, v4);
  v14 = *(uint64_t (**)(char *, uint64_t))(v5 + 88);
  v15 = v14(v11, v4);
  v16 = v15;
  if (v15 != *MEMORY[0x24BDC6F90])
  {
    if ((v15 == *MEMORY[0x24BDC6F98] || v15 == *MEMORY[0x24BDC6F88]) && v14((char *)v12, v4) == v15)
    {
      (*(void (**)(char *, uint64_t))(v5 + 8))(v11, v4);
      return 1;
    }
LABEL_11:
    sub_21C1F03B0((uint64_t)v11, &qword_25524B1C8);
    return 0;
  }
  v13((char *)v7, (uint64_t)v11, v4);
  v17 = *(void (**)(double *, uint64_t))(v5 + 96);
  v17(v7, v4);
  v19 = *v7;
  v18 = v7[1];
  if (v14((char *)v12, v4) != v16)
    goto LABEL_11;
  v17(v12, v4);
  v20 = v18 == v12[1] && v19 == *v12;
  (*(void (**)(char *, uint64_t))(v5 + 8))(v11, v4);
  return v20;
}

uint64_t _s17PreviewsInjection21PreviewDisplayContextV13ConfigurationV2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  double *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  double *v12;
  void (*v13)(char *, uint64_t, uint64_t);
  uint64_t (*v14)(char *, uint64_t);
  int v15;
  int v16;
  void (*v17)(double *, uint64_t);
  double v18;
  double v19;
  double v20;
  double v21;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v27;

  v4 = sub_21C247E74();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (double *)((char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_25524B1C8);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (double *)&v11[*(int *)(v9 + 48)];
  v13 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v13(v11, a1, v4);
  v13((char *)v12, a2, v4);
  v14 = *(uint64_t (**)(char *, uint64_t))(v5 + 88);
  v15 = v14(v11, v4);
  v16 = v15;
  if (v15 != *MEMORY[0x24BDC6F90])
  {
    if ((v15 == *MEMORY[0x24BDC6F98] || v15 == *MEMORY[0x24BDC6F88]) && v14((char *)v12, v4) == v15)
    {
      (*(void (**)(char *, uint64_t))(v5 + 8))(v11, v4);
      goto LABEL_12;
    }
LABEL_16:
    sub_21C1F03B0((uint64_t)v11, &qword_25524B1C8);
LABEL_17:
    v25 = 0;
    return v25 & 1;
  }
  v13((char *)v7, (uint64_t)v11, v4);
  v17 = *(void (**)(double *, uint64_t))(v5 + 96);
  v17(v7, v4);
  v18 = *v7;
  v19 = v7[1];
  if (v14((char *)v12, v4) != v16)
    goto LABEL_16;
  v17(v12, v4);
  v20 = *v12;
  v21 = v12[1];
  (*(void (**)(char *, uint64_t))(v5 + 8))(v11, v4);
  if (v18 != v20 || v19 != v21)
    goto LABEL_17;
LABEL_12:
  v23 = type metadata accessor for PreviewDisplayContext.Configuration(0);
  if (*(unsigned __int8 *)(a1 + *(int *)(v23 + 20)) != *(unsigned __int8 *)(a2 + *(int *)(v23 + 20)))
    goto LABEL_17;
  v24 = v23;
  if ((sub_21C228BF0(*(_QWORD *)(a1 + *(int *)(v23 + 24)), *(_QWORD *)(a2 + *(int *)(v23 + 24))) & 1) == 0
    || *(unsigned __int8 *)(a1 + *(int *)(v24 + 28)) != *(unsigned __int8 *)(a2 + *(int *)(v24 + 28)))
  {
    goto LABEL_17;
  }
  v25 = *(_BYTE *)(a1 + *(int *)(v24 + 32)) ^ *(_BYTE *)(a2 + *(int *)(v24 + 32)) ^ 1;
  return v25 & 1;
}

uint64_t type metadata accessor for PreviewDisplayContext(uint64_t a1)
{
  return sub_21C1F2E98(a1, qword_25524B0E8);
}

unint64_t sub_21C213778()
{
  unint64_t result;

  result = qword_25524B088;
  if (!qword_25524B088)
  {
    result = MEMORY[0x22077702C](&protocol conformance descriptor for PreviewDisplayContext.SafeAreaPolicy, &type metadata for PreviewDisplayContext.SafeAreaPolicy);
    atomic_store(result, (unint64_t *)&qword_25524B088);
  }
  return result;
}

char *initializeBufferWithCopyOfBuffer for PreviewDisplayContext(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  char *v4;
  int v5;
  __int128 v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  int *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  const void *v18;
  uint64_t v19;
  uint64_t v20;
  unsigned int (*v21)(const void *, uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v25;
  uint64_t v26;
  char *v27;
  _QWORD *v28;
  uint64_t v29;
  char *__dst;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;

  v4 = (char *)a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v23 = *a2;
    *(_QWORD *)v4 = *a2;
    v4 = (char *)(v23 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = *(_OWORD *)(a2 + 3);
    *(_OWORD *)(a1 + 24) = v7;
    (**(void (***)(uint64_t, uint64_t *))(v7 - 8))(a1, a2);
    v35 = a3;
    v8 = *(int *)(a3 + 20);
    v9 = &v4[v8];
    v10 = (uint64_t)a2 + v8;
    v11 = sub_21C247E74();
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = (int *)type metadata accessor for PreviewDisplayContext.Configuration(0);
    v9[v12[5]] = *(_BYTE *)(v10 + v12[5]);
    v13 = v12[6];
    v14 = &v9[v13];
    v15 = v10 + v13;
    *(_QWORD *)&v9[v13] = *(_QWORD *)(v10 + v13);
    v16 = type metadata accessor for RenderEffects(0);
    v17 = *(int *)(v16 + 20);
    v33 = v15;
    v34 = v14;
    __dst = &v14[v17];
    v32 = v16;
    v18 = (const void *)(v15 + v17);
    v19 = sub_21C2470E8();
    v20 = *(_QWORD *)(v19 - 8);
    v21 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v20 + 48);
    swift_bridgeObjectRetain();
    if (v21(v18, 1, v19))
    {
      v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_255249930);
      memcpy(__dst, v18, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, const void *, uint64_t))(v20 + 16))(__dst, v18, v19);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(__dst, 0, 1, v19);
    }
    v24 = *(int *)(v32 + 24);
    v25 = *(_OWORD *)(v33 + v24 + 24);
    *(_OWORD *)&v34[v24 + 24] = v25;
    (**(void (***)(void))(v25 - 8))();
    v9[v12[7]] = *(_BYTE *)(v10 + v12[7]);
    v9[v12[8]] = *(_BYTE *)(v10 + v12[8]);
    (*(void (**)(char *, uint64_t, uint64_t))(v20 + 16))(&v4[*(int *)(v35 + 24)], (uint64_t)a2 + *(int *)(v35 + 24), v19);
    v26 = *(int *)(v35 + 28);
    v27 = &v4[v26];
    v28 = (uint64_t *)((char *)a2 + v26);
    v29 = v28[1];
    *(_QWORD *)v27 = *v28;
    *((_QWORD *)v27 + 1) = v29;
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t destroy for PreviewDisplayContext(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  __swift_destroy_boxed_opaque_existential_1(a1);
  v4 = a1 + *(int *)(a2 + 20);
  v5 = sub_21C247E74();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  v6 = v4 + *(int *)(type metadata accessor for PreviewDisplayContext.Configuration(0) + 24);
  swift_bridgeObjectRelease();
  v7 = type metadata accessor for RenderEffects(0);
  v8 = v6 + *(int *)(v7 + 20);
  v9 = sub_21C2470E8();
  v10 = *(_QWORD *)(v9 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
  __swift_destroy_boxed_opaque_existential_1(v6 + *(int *)(v7 + 24));
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(a1 + *(int *)(a2 + 24), v9);
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for PreviewDisplayContext(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  const void *v17;
  uint64_t v18;
  uint64_t v19;
  unsigned int (*v20)(const void *, uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;
  void *__dst;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v6 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v6;
  (**(void (***)(void))(v6 - 8))();
  v31 = a1;
  v7 = a3[5];
  v8 = a1 + v7;
  v32 = a2;
  v9 = a2 + v7;
  v10 = sub_21C247E74();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = (int *)type metadata accessor for PreviewDisplayContext.Configuration(0);
  *(_BYTE *)(v8 + v11[5]) = *(_BYTE *)(v9 + v11[5]);
  v12 = v11[6];
  v13 = v8 + v12;
  v14 = v9 + v12;
  *(_QWORD *)(v8 + v12) = *(_QWORD *)(v9 + v12);
  v15 = type metadata accessor for RenderEffects(0);
  v16 = *(int *)(v15 + 20);
  __dst = (void *)(v13 + v16);
  v30 = v15;
  v17 = (const void *)(v14 + v16);
  v18 = sub_21C2470E8();
  v19 = *(_QWORD *)(v18 - 8);
  v20 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v19 + 48);
  swift_bridgeObjectRetain();
  if (v20(v17, 1, v18))
  {
    v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_255249930);
    memcpy(__dst, v17, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v19 + 16))(__dst, v17, v18);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v19 + 56))(__dst, 0, 1, v18);
  }
  v22 = *(int *)(v30 + 24);
  v23 = *(_OWORD *)(v14 + v22 + 24);
  *(_OWORD *)(v13 + v22 + 24) = v23;
  (**(void (***)(void))(v23 - 8))();
  *(_BYTE *)(v8 + v11[7]) = *(_BYTE *)(v9 + v11[7]);
  *(_BYTE *)(v8 + v11[8]) = *(_BYTE *)(v9 + v11[8]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v19 + 16))(v31 + a3[6], v32 + a3[6], v18);
  v24 = a3[7];
  v25 = (_QWORD *)(v31 + v24);
  v26 = (_QWORD *)(v32 + v24);
  v27 = v26[1];
  *v25 = *v26;
  v25[1] = v27;
  swift_bridgeObjectRetain();
  return v31;
}

uint64_t *assignWithCopy for PreviewDisplayContext(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t (*v19)(char *, uint64_t, uint64_t);
  int v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t *v30;

  __swift_assign_boxed_opaque_existential_1(a1, a2);
  v28 = a3;
  v29 = a2;
  v6 = *(int *)(a3 + 20);
  v30 = a1;
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_21C247E74();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  v10 = (int *)type metadata accessor for PreviewDisplayContext.Configuration(0);
  v7[v10[5]] = v8[v10[5]];
  v11 = v10[6];
  v12 = &v7[v11];
  v13 = &v8[v11];
  *(_QWORD *)&v7[v11] = *(_QWORD *)&v8[v11];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v26 = type metadata accessor for RenderEffects(0);
  v27 = v13;
  v14 = *(int *)(v26 + 20);
  v15 = &v12[v14];
  v16 = &v13[v14];
  v17 = sub_21C2470E8();
  v18 = *(_QWORD *)(v17 - 8);
  v19 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v18 + 48);
  LODWORD(a3) = v19(v15, 1, v17);
  v20 = v19(v16, 1, v17);
  if (!(_DWORD)a3)
  {
    if (!v20)
    {
      (*(void (**)(char *, char *, uint64_t))(v18 + 24))(v15, v16, v17);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v18 + 8))(v15, v17);
    goto LABEL_6;
  }
  if (v20)
  {
LABEL_6:
    v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_255249930);
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v15, v16, v17);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
LABEL_7:
  __swift_assign_boxed_opaque_existential_1((uint64_t *)&v12[*(int *)(v26 + 24)], (uint64_t *)&v27[*(int *)(v26 + 24)]);
  v7[v10[7]] = v8[v10[7]];
  v7[v10[8]] = v8[v10[8]];
  (*(void (**)(char *, char *, uint64_t))(v18 + 24))((char *)v30 + *(int *)(v28 + 24), (char *)v29 + *(int *)(v28 + 24), v17);
  v22 = *(int *)(v28 + 28);
  v23 = (uint64_t *)((char *)v30 + v22);
  v24 = (uint64_t *)((char *)v29 + v22);
  *v23 = *v24;
  v23[1] = v24[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return v30;
}

uint64_t initializeWithTake for PreviewDisplayContext(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  const void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(void *, const void *, uint64_t);
  const void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  uint64_t v26;
  void *__dst;

  v5 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  v6 = a3[5];
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_21C247E74();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  v10 = (int *)type metadata accessor for PreviewDisplayContext.Configuration(0);
  *(_BYTE *)(v7 + v10[5]) = *(_BYTE *)(v8 + v10[5]);
  v11 = v10[6];
  v12 = v7 + v11;
  v13 = v8 + v11;
  *(_QWORD *)(v7 + v11) = *(_QWORD *)(v8 + v11);
  v26 = type metadata accessor for RenderEffects(0);
  v14 = *(int *)(v26 + 20);
  __dst = (void *)(v12 + v14);
  v15 = (const void *)(v13 + v14);
  v16 = sub_21C2470E8();
  v17 = *(_QWORD *)(v16 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
  {
    v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_255249930);
    memcpy(__dst, v15, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    v19 = *(void (**)(void *, const void *, uint64_t))(v17 + 32);
  }
  else
  {
    v20 = v15;
    v19 = *(void (**)(void *, const void *, uint64_t))(v17 + 32);
    v19(__dst, v20, v16);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v17 + 56))(__dst, 0, 1, v16);
  }
  v21 = *(int *)(v26 + 24);
  v22 = v12 + v21;
  v23 = v13 + v21;
  v24 = *(_OWORD *)(v23 + 16);
  *(_OWORD *)v22 = *(_OWORD *)v23;
  *(_OWORD *)(v22 + 16) = v24;
  *(_QWORD *)(v22 + 32) = *(_QWORD *)(v23 + 32);
  *(_BYTE *)(v7 + v10[7]) = *(_BYTE *)(v8 + v10[7]);
  *(_BYTE *)(v7 + v10[8]) = *(_BYTE *)(v8 + v10[8]);
  v19((void *)(a1 + a3[6]), (const void *)(a2 + a3[6]), v16);
  *(_OWORD *)(a1 + a3[7]) = *(_OWORD *)(a2 + a3[7]);
  return a1;
}

uint64_t assignWithTake for PreviewDisplayContext(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  void *v17;
  uint64_t v18;
  uint64_t (*v19)(void *, uint64_t, uint64_t);
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  const void *v24;
  const void *v25;
  const void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __int128 v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  __swift_destroy_boxed_opaque_existential_1(a1);
  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  v41 = a3;
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_21C247E74();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = type metadata accessor for PreviewDisplayContext.Configuration(0);
  *(_BYTE *)(v8 + *(int *)(v11 + 20)) = *(_BYTE *)(v9 + *(int *)(v11 + 20));
  v40 = v11;
  v12 = *(int *)(v11 + 24);
  v13 = v8 + v12;
  v14 = v9 + v12;
  *(_QWORD *)(v8 + v12) = *(_QWORD *)(v9 + v12);
  swift_bridgeObjectRelease();
  v37 = type metadata accessor for RenderEffects(0);
  v15 = *(int *)(v37 + 20);
  v16 = (void *)(v13 + v15);
  v39 = v14;
  v17 = (void *)(v14 + v15);
  v18 = sub_21C2470E8();
  v38 = *(_QWORD *)(v18 - 8);
  v19 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v38 + 48);
  LODWORD(v14) = v19(v16, 1, v18);
  v20 = v19(v17, 1, v18);
  if ((_DWORD)v14)
  {
    if (v20)
    {
      v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_255249930);
      memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
      v22 = v38;
    }
    else
    {
      v25 = v17;
      v22 = v38;
      (*(void (**)(void *, const void *, uint64_t))(v38 + 32))(v16, v25, v18);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v38 + 56))(v16, 0, 1, v18);
    }
  }
  else if (v20)
  {
    (*(void (**)(void *, uint64_t))(v38 + 8))(v16, v18);
    v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_255249930);
    v24 = v17;
    v22 = v38;
    memcpy(v16, v24, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
  }
  else
  {
    v26 = v17;
    v22 = v38;
    (*(void (**)(void *, const void *, uint64_t))(v38 + 40))(v16, v26, v18);
  }
  v27 = *(int *)(v37 + 24);
  v28 = v13 + v27;
  v29 = v39 + v27;
  __swift_destroy_boxed_opaque_existential_1(v13 + v27);
  v30 = *(_OWORD *)(v29 + 16);
  *(_OWORD *)v28 = *(_OWORD *)v29;
  *(_OWORD *)(v28 + 16) = v30;
  *(_QWORD *)(v28 + 32) = *(_QWORD *)(v29 + 32);
  *(_BYTE *)(v8 + *(int *)(v40 + 28)) = *(_BYTE *)(v9 + *(int *)(v40 + 28));
  *(_BYTE *)(v8 + *(int *)(v40 + 32)) = *(_BYTE *)(v9 + *(int *)(v40 + 32));
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v22 + 40))(a1 + *(int *)(v41 + 24), a2 + *(int *)(v41 + 24), v18);
  v31 = *(int *)(v41 + 28);
  v32 = (_QWORD *)(a1 + v31);
  v33 = (uint64_t *)(a2 + v31);
  v35 = *v33;
  v34 = v33[1];
  *v32 = v35;
  v32[1] = v34;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for PreviewDisplayContext()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_21C2142C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 24);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for PreviewDisplayContext.Configuration(0);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = *(int *)(a3 + 20);
    }
    else
    {
      v10 = sub_21C2470E8();
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a3 + 24);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a1 + v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for PreviewDisplayContext()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_21C214374(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 24) = (a2 - 1);
  }
  else
  {
    v8 = type metadata accessor for PreviewDisplayContext.Configuration(0);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = *(int *)(a4 + 20);
    }
    else
    {
      v10 = sub_21C2470E8();
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a4 + 24);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5 + v11, a2, a2, v10);
  }
  return result;
}

uint64_t sub_21C214410()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = type metadata accessor for PreviewDisplayContext.Configuration(319);
  if (v1 <= 0x3F)
  {
    result = sub_21C2470E8();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

_QWORD *initializeBufferWithCopyOfBuffer for PreviewDisplayContext.Configuration(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  unsigned int (*v16)(char *, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  uint64_t v21;
  char *__dst;
  uint64_t v24;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v18 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_21C247E74();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[6];
    *((_BYTE *)a1 + a3[5]) = *((_BYTE *)a2 + a3[5]);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    *(_QWORD *)((char *)a1 + v8) = *(_QWORD *)((char *)a2 + v8);
    v11 = type metadata accessor for RenderEffects(0);
    v12 = *(int *)(v11 + 20);
    __dst = &v9[v12];
    v24 = v11;
    v13 = &v10[v12];
    v14 = sub_21C2470E8();
    v15 = *(_QWORD *)(v14 - 8);
    v16 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48);
    swift_bridgeObjectRetain();
    if (v16(v13, 1, v14))
    {
      v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_255249930);
      memcpy(__dst, v13, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v15 + 16))(__dst, v13, v14);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(__dst, 0, 1, v14);
    }
    v19 = *(int *)(v24 + 24);
    v20 = *(_OWORD *)&v10[v19 + 24];
    *(_OWORD *)&v9[v19 + 24] = v20;
    (**(void (***)(void))(v20 - 8))();
    v21 = a3[8];
    *((_BYTE *)a1 + a3[7]) = *((_BYTE *)a2 + a3[7]);
    *((_BYTE *)a1 + v21) = *((_BYTE *)a2 + v21);
  }
  return a1;
}

uint64_t destroy for PreviewDisplayContext.Configuration(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4 = sub_21C247E74();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + *(int *)(a2 + 24);
  swift_bridgeObjectRelease();
  v6 = type metadata accessor for RenderEffects(0);
  v7 = v5 + *(int *)(v6 + 20);
  v8 = sub_21C2470E8();
  v9 = *(_QWORD *)(v8 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8))
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
  return __swift_destroy_boxed_opaque_existential_1(v5 + *(int *)(v6 + 24));
}

uint64_t initializeWithCopy for PreviewDisplayContext.Configuration(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  const void *v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int (*v15)(const void *, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  uint64_t v19;
  void *__dst;
  uint64_t v22;

  v6 = sub_21C247E74();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[6];
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  v10 = type metadata accessor for RenderEffects(0);
  v11 = *(int *)(v10 + 20);
  __dst = (void *)(v8 + v11);
  v22 = v10;
  v12 = (const void *)(v9 + v11);
  v13 = sub_21C2470E8();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v14 + 48);
  swift_bridgeObjectRetain();
  if (v15(v12, 1, v13))
  {
    v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_255249930);
    memcpy(__dst, v12, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v14 + 16))(__dst, v12, v13);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v14 + 56))(__dst, 0, 1, v13);
  }
  v17 = *(int *)(v22 + 24);
  v18 = *(_OWORD *)(v9 + v17 + 24);
  *(_OWORD *)(v8 + v17 + 24) = v18;
  (**(void (***)(void))(v18 - 8))();
  v19 = a3[8];
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  *(_BYTE *)(a1 + v19) = *(_BYTE *)(a2 + v19);
  return a1;
}

uint64_t assignWithCopy for PreviewDisplayContext.Configuration(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(void *, uint64_t, uint64_t);
  int v16;
  int v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;

  v6 = sub_21C247E74();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  v7 = a3[6];
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v20 = type metadata accessor for RenderEffects(0);
  v21 = v9;
  v10 = *(int *)(v20 + 20);
  v11 = (void *)(v8 + v10);
  v12 = (void *)(v9 + v10);
  v13 = sub_21C2470E8();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v14 + 48);
  v16 = v15(v11, 1, v13);
  v17 = v15(v12, 1, v13);
  if (!v16)
  {
    if (!v17)
    {
      (*(void (**)(void *, void *, uint64_t))(v14 + 24))(v11, v12, v13);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v14 + 8))(v11, v13);
    goto LABEL_6;
  }
  if (v17)
  {
LABEL_6:
    v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_255249930);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v14 + 16))(v11, v12, v13);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
LABEL_7:
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(v8 + *(int *)(v20 + 24)), (uint64_t *)(v21 + *(int *)(v20 + 24)));
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  *(_BYTE *)(a1 + a3[8]) = *(_BYTE *)(a2 + a3[8]);
  return a1;
}

uint64_t initializeWithTake for PreviewDisplayContext.Configuration(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  const void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  uint64_t v21;

  v6 = sub_21C247E74();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[6];
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  v10 = type metadata accessor for RenderEffects(0);
  v11 = *(int *)(v10 + 20);
  v12 = (void *)(v8 + v11);
  v13 = (const void *)(v9 + v11);
  v14 = sub_21C2470E8();
  v15 = *(_QWORD *)(v14 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
  {
    v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_255249930);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v15 + 32))(v12, v13, v14);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  }
  v17 = *(int *)(v10 + 24);
  v18 = v8 + v17;
  v19 = v9 + v17;
  v20 = *(_OWORD *)(v19 + 16);
  *(_OWORD *)v18 = *(_OWORD *)v19;
  *(_OWORD *)(v18 + 16) = v20;
  *(_QWORD *)(v18 + 32) = *(_QWORD *)(v19 + 32);
  v21 = a3[8];
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  *(_BYTE *)(a1 + v21) = *(_BYTE *)(a2 + v21);
  return a1;
}

uint64_t assignWithTake for PreviewDisplayContext.Configuration(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(void *, uint64_t, uint64_t);
  int v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;

  v6 = sub_21C247E74();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[6];
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  swift_bridgeObjectRelease();
  v25 = type metadata accessor for RenderEffects(0);
  v26 = v9;
  v10 = *(int *)(v25 + 20);
  v11 = (void *)(v8 + v10);
  v12 = (void *)(v9 + v10);
  v13 = sub_21C2470E8();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v14 + 48);
  v16 = v15(v11, 1, v13);
  v17 = v15(v12, 1, v13);
  if (!v16)
  {
    if (!v17)
    {
      (*(void (**)(void *, void *, uint64_t))(v14 + 40))(v11, v12, v13);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v14 + 8))(v11, v13);
    goto LABEL_6;
  }
  if (v17)
  {
LABEL_6:
    v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_255249930);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v14 + 32))(v11, v12, v13);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
LABEL_7:
  v19 = *(int *)(v25 + 24);
  v20 = v8 + v19;
  v21 = v26 + v19;
  __swift_destroy_boxed_opaque_existential_1(v8 + v19);
  v22 = *(_OWORD *)(v21 + 16);
  *(_OWORD *)v20 = *(_OWORD *)v21;
  *(_OWORD *)(v20 + 16) = v22;
  *(_QWORD *)(v20 + 32) = *(_QWORD *)(v21 + 32);
  v23 = a3[8];
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  *(_BYTE *)(a1 + v23) = *(_BYTE *)(a2 + v23);
  return a1;
}

uint64_t getEnumTagSinglePayload for PreviewDisplayContext.Configuration()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_21C214CE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  unsigned int v11;

  v6 = sub_21C247E74();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  if ((_DWORD)a2 != 254)
  {
    v8 = type metadata accessor for RenderEffects(0);
    v10 = a1 + *(int *)(a3 + 24);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48);
    return v9(v10, a2, v8);
  }
  v11 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 20));
  if (v11 >= 2)
    return ((v11 + 2147483646) & 0x7FFFFFFF) + 1;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for PreviewDisplayContext.Configuration()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_21C214DA0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  result = sub_21C247E74();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = result;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    if (a3 == 254)
    {
      *(_BYTE *)(a1 + *(int *)(a4 + 20)) = a2 + 1;
      return result;
    }
    v10 = type metadata accessor for RenderEffects(0);
    v12 = a1 + *(int *)(a4 + 24);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  }
  return v11(v12, a2, a2, v10);
}

uint64_t sub_21C214E40()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_21C247E74();
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for RenderEffects(319);
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t getEnumTagSinglePayload for PreviewDisplayContext.SafeAreaPolicy(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFF)
    goto LABEL_17;
  if (a2 + 1 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 1;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 1;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 1;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 2;
  v8 = v6 - 2;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for PreviewDisplayContext.SafeAreaPolicy(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_21C214FAC + 4 * byte_21C24AA15[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_21C214FE0 + 4 * byte_21C24AA10[v4]))();
}

uint64_t sub_21C214FE0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_21C214FE8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x21C214FF0);
  return result;
}

uint64_t sub_21C214FFC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x21C215004);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_21C215008(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_21C215010(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

_BYTE *sub_21C21501C(_BYTE *result, char a2)
{
  *result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for PreviewDisplayContext.SafeAreaPolicy()
{
  return &type metadata for PreviewDisplayContext.SafeAreaPolicy;
}

uint64_t dispatch thunk of PreviewContentHost.content.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t sub_21C215040(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t sub_21C215048(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t sub_21C215050(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for RenderEffects(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_21C21508C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3[11] = a2;
  v3[12] = a3;
  v3[10] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255249DD0);
  v3[13] = swift_task_alloc();
  type metadata accessor for RenderEffects(0);
  v3[14] = swift_task_alloc();
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255249DD8);
  v3[15] = v4;
  v3[16] = *(_QWORD *)(v4 - 8);
  v3[17] = swift_task_alloc();
  v5 = sub_21C2473E8();
  v3[18] = v5;
  v3[19] = *(_QWORD *)(v5 - 8);
  v3[20] = swift_task_alloc();
  v6 = sub_21C247190();
  v3[21] = v6;
  v3[22] = *(_QWORD *)(v6 - 8);
  v3[23] = swift_task_alloc();
  v3[24] = swift_task_alloc();
  type metadata accessor for LocatedPreview();
  v3[25] = swift_task_alloc();
  v3[26] = swift_task_alloc();
  sub_21C24863C();
  v3[27] = sub_21C248630();
  v3[28] = sub_21C2485E8();
  v3[29] = v7;
  return swift_task_switch();
}

uint64_t sub_21C2151FC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t, uint64_t);

  v1 = v0[24];
  v2 = v0[21];
  v3 = v0[22];
  sub_21C246E90();
  sub_21C247184();
  v4 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  v0[30] = v4;
  v4(v1, v2);
  return swift_task_switch();
}

uint64_t sub_21C215278()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t (*v6)(_QWORD, _QWORD, uint64_t, uint64_t);

  v1 = (_QWORD *)v0[12];
  v2 = v1[11];
  v3 = v1[12];
  __swift_project_boxed_opaque_existential_1(v1 + 8, v2);
  v6 = (uint64_t (*)(_QWORD, _QWORD, uint64_t, uint64_t))(**(int **)(v3 + 8) + *(_QWORD *)(v3 + 8));
  v4 = (_QWORD *)swift_task_alloc();
  v0[31] = v4;
  *v4 = v0;
  v4[1] = sub_21C215300;
  return v6(v0[17], v0[20], v2, v3);
}

uint64_t sub_21C215300()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_21C215354()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_21C24713C();
  v0[32] = 0;
  v2 = v0[19];
  v1 = v0[20];
  v3 = v0[18];
  (*(void (**)(_QWORD, _QWORD))(v0[16] + 8))(v0[17], v0[15]);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  return swift_task_switch();
}

uint64_t sub_21C2153E0()
{
  _QWORD *v0;
  void (*v1)(uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;

  v1 = (void (*)(uint64_t, uint64_t))v0[30];
  v2 = v0[23];
  v3 = v0[21];
  sub_21C1F0928(v0[26], v0[25]);
  sub_21C246E90();
  v0[33] = sub_21C247178();
  v1(v2, v3);
  return swift_task_switch();
}

uint64_t sub_21C215454()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 272) = *(_QWORD *)(*(_QWORD *)(v0 + 96) + 8);
  return swift_task_switch();
}

uint64_t sub_21C215470()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  _QWORD *v5;

  v1 = v0[33];
  v2 = v0[32];
  v3 = (uint64_t *)v0[14];
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_21C2285AC(v1, v3);
  v0[35] = v2;
  swift_bridgeObjectRelease();
  if (v2)
    return swift_task_switch();
  swift_bridgeObjectRelease();
  v5 = (_QWORD *)swift_task_alloc();
  v0[36] = v5;
  *v5 = v0;
  v5[1] = sub_21C215604;
  return PreviewAgentServices.resolveModifiers(for:)((uint64_t)(v0 + 2), v0[26]);
}

uint64_t sub_21C215568()
{
  uint64_t v0;

  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21C215604()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *v1;
  *(_QWORD *)(*v1 + 296) = v0;
  swift_task_dealloc();
  if (v0)
  {
    v3 = *(_QWORD *)(v2 + 200);
    sub_21C1E71CC(*(_QWORD *)(v2 + 112), type metadata accessor for RenderEffects);
    sub_21C1E71CC(v3, (uint64_t (*)(_QWORD))type metadata accessor for LocatedPreview);
  }
  return swift_task_switch();
}

uint64_t sub_21C21568C()
{
  uint64_t v0;

  sub_21C1E71CC(*(_QWORD *)(v0 + 200), (uint64_t (*)(_QWORD))type metadata accessor for LocatedPreview);
  swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_21C2156D8()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 208);
  swift_release();
  sub_21C1E71CC(v1, (uint64_t (*)(_QWORD))type metadata accessor for LocatedPreview);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21C215784()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int *updated;
  uint64_t v7;
  __int128 v8;
  __int128 v9;

  v1 = *(_QWORD *)(v0 + 208);
  v2 = *(_QWORD *)(v0 + 200);
  v3 = *(_QWORD *)(v0 + 104);
  v4 = *(_QWORD *)(v0 + 112);
  v5 = *(_QWORD *)(v0 + 80);
  swift_release();
  sub_21C246E9C();
  sub_21C1E71CC(v1, (uint64_t (*)(_QWORD))type metadata accessor for LocatedPreview);
  sub_21C1F00F0(v2, v5, (uint64_t (*)(_QWORD))type metadata accessor for LocatedPreview);
  updated = (int *)type metadata accessor for PreviewEntryPoint.UpdateInputs();
  sub_21C1F00F0(v4, v5 + updated[5], type metadata accessor for RenderEffects);
  v7 = v5 + updated[6];
  v8 = *(_OWORD *)(v0 + 16);
  v9 = *(_OWORD *)(v0 + 32);
  *(_QWORD *)(v7 + 32) = *(_QWORD *)(v0 + 48);
  *(_OWORD *)v7 = v8;
  *(_OWORD *)(v7 + 16) = v9;
  sub_21C216140(v3, v5 + updated[7]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21C2158AC()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 208);
  swift_release();
  sub_21C1E71CC(v1, (uint64_t (*)(_QWORD))type metadata accessor for LocatedPreview);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21C215958@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, char *a3@<X8>)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  int *updated;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t result;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  void *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(uint64_t, uint64_t);
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  int *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  unsigned __int8 v56[24];
  uint64_t v57;

  v57 = a2;
  v55 = a3;
  v5 = sub_21C246E6C();
  v53 = *(_QWORD *)(v5 - 8);
  v54 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v52 = (char *)&v44 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_21C246F20();
  MEMORY[0x24BDAC7A8](v7);
  v48 = (char *)&v44 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_21C246F38();
  v50 = *(_QWORD *)(v9 - 8);
  v51 = v9;
  v10 = MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v44 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v49 = (char *)&v44 - v13;
  v14 = type metadata accessor for PreviewDisplayContext(0);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (uint64_t *)((char *)&v44 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  updated = (int *)type metadata accessor for PreviewEntryPoint.UpdateInputs();
  v18 = a1 + updated[7];
  v19 = a1 + updated[5];
  v20 = a1 + updated[6];
  v21 = sub_21C247664();
  v56[0] = 0;
  result = LocatedPreview.makeDisplayContext(requestedGroupIndex:renderEffects:previewModifiers:allowAnimations:safeAreaPolicy:)(v18, v19, v20, v21 & 1, v56, (uint64_t)v16);
  if (!v3)
  {
    v23 = v57;
    v47 = 0;
    v24 = sub_21C1E5C04();
    swift_beginAccess();
    v25 = v23;
    v26 = objc_msgSend(*(id *)(v23 + 16), sel_previewSceneIdentifier);
    v27 = sub_21C248498();
    v29 = v28;

    sub_21C1E5D18(v16, v27, v29);
    swift_bridgeObjectRelease();
    objc_msgSend(*(id *)(v25 + 16), sel_previewMaximumSize);
    sub_21C215CD8();
    sub_21C2470DC();
    v30 = v49;
    sub_21C246F14();
    v45 = v24;
    swift_beginAccess();
    v31 = *(void **)(v24 + 40);
    v32 = v12;
    v46 = v12;
    v33 = v50;
    v34 = v51;
    (*(void (**)(char *, char *, uint64_t))(v50 + 16))(v32, v30, v51);
    v35 = v16[3];
    v36 = v16[4];
    __swift_project_boxed_opaque_existential_1(v16, v35);
    v37 = *(void (**)(uint64_t, uint64_t))(v36 + 40);
    v48 = v31;
    v38 = v52;
    v37(v35, v36);
    (*(void (**)(char *, uint64_t))(v33 + 8))(v30, v34);
    v39 = swift_allocObject();
    v40 = v57;
    *(_QWORD *)(v39 + 16) = v45;
    *(_QWORD *)(v39 + 24) = v40;
    v41 = v55;
    *(_QWORD *)v55 = v48;
    v42 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_25524B338);
    (*(void (**)(char *, char *, uint64_t))(v33 + 32))(&v41[v42[9]], v46, v34);
    (*(void (**)(char *, char *, uint64_t))(v53 + 32))(&v41[v42[10]], v38, v54);
    v43 = &v41[v42[11]];
    *(_QWORD *)v43 = &unk_25524B330;
    *((_QWORD *)v43 + 1) = v39;
    swift_retain();
    return sub_21C1E71CC((uint64_t)v16, type metadata accessor for PreviewDisplayContext);
  }
  return result;
}

uint64_t sub_21C215CD8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  int v7;
  uint64_t v9;
  _QWORD v10[4];

  v0 = sub_21C247E74();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for PreviewDisplayContext.Configuration(0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10[2] = &type metadata for IOSHostingParadigm;
  v10[3] = &protocol witness table for IOSHostingParadigm;
  swift_getKeyPath();
  v10[0] = &type metadata for IOSHostingParadigm;
  v10[1] = &protocol witness table for IOSHostingParadigm;
  swift_getKeyPath();
  sub_21C247D30();
  swift_release();
  swift_release();
  (*(void (**)(char *, char *, uint64_t))(v1 + 16))(v3, v6, v0);
  sub_21C1E71CC((uint64_t)v6, type metadata accessor for PreviewDisplayContext.Configuration);
  v7 = (*(uint64_t (**)(char *, uint64_t))(v1 + 88))(v3, v0);
  if (v7 == *MEMORY[0x24BDC6F90])
  {
    (*(void (**)(char *, uint64_t))(v1 + 96))(v3, v0);
    return *(_QWORD *)v3;
  }
  if (v7 != *MEMORY[0x24BDC6F98])
  {
    if (v7 == *MEMORY[0x24BDC6F88])
    {
      sub_21C248048();
      return v9;
    }
    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  }
  return 0;
}

uint64_t type metadata accessor for PreviewEntryPoint()
{
  return objc_opt_self();
}

uint64_t sub_21C215EE8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = swift_allocObject();
  *a1 = result;
  return result;
}

uint64_t sub_21C215F18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;

  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_21C1E664C;
  return sub_21C21508C(a1, a2, a3);
}

uint64_t sub_21C215F80@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, char *a3@<X8>)
{
  return sub_21C215958(a1, a2, a3);
}

unint64_t sub_21C215F94()
{
  return 0xD000000000000011;
}

uint64_t sub_21C215FB0(uint64_t a1)
{
  uint64_t result;

  result = sub_21C216018(qword_25524B2C8, (uint64_t)&unk_21C24AC44);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_21C215FE4(uint64_t a1)
{
  uint64_t result;

  result = sub_21C216018(&qword_25524B320, (uint64_t)&unk_21C24AC6C);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_21C216018(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for PreviewEntryPoint();
    result = MEMORY[0x22077702C](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t type metadata accessor for PreviewEntryPoint.UpdateInputs()
{
  uint64_t result;

  result = qword_25524B3A0;
  if (!qword_25524B3A0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_21C216090()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_21C2160BC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v5 = *(_QWORD *)(v1 + 16);
  v4 = *(_QWORD *)(v1 + 24);
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_21C1E664C;
  return sub_21C1E61D0(a1, v5, v4);
}

uint64_t sub_21C216128()
{
  return 16;
}

__n128 sub_21C216134(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_21C216140(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255249DD0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_21C216188(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  const void *v20;
  uint64_t v21;
  uint64_t v22;
  unsigned int (*v23)(const void *, uint64_t, uint64_t);
  uint64_t v24;
  uint64_t v25;
  __int128 v26;
  uint64_t v27;
  __int128 v28;
  uint64_t v29;
  void *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void *__dst;
  uint64_t v37;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = v12 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    type metadata accessor for LocatedPreview();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v7 = sub_21C247C64();
      (*(void (**)(uint64_t, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
      v8 = *(int *)(type metadata accessor for RegistryPreview(0) + 20);
      v9 = a1 + v8;
      v10 = (uint64_t)a2 + v8;
      v11 = sub_21C246F74();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    }
    else
    {
      v13 = a2[1];
      *(_QWORD *)a1 = *a2;
      *(_QWORD *)(a1 + 8) = v13;
      *(_QWORD *)(a1 + 16) = a2[2];
      v14 = a2[5];
      *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 3);
      *(_QWORD *)(a1 + 40) = v14;
      swift_bridgeObjectRetain();
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v37 = a3;
    v15 = *(int *)(a3 + 20);
    v16 = a1 + v15;
    v17 = (uint64_t)a2 + v15;
    *(_QWORD *)(a1 + v15) = *(uint64_t *)((char *)a2 + v15);
    v18 = type metadata accessor for RenderEffects(0);
    v19 = *(int *)(v18 + 20);
    __dst = (void *)(v16 + v19);
    v20 = (const void *)(v17 + v19);
    v21 = sub_21C2470E8();
    v22 = *(_QWORD *)(v21 - 8);
    v23 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v22 + 48);
    swift_bridgeObjectRetain();
    if (v23(v20, 1, v21))
    {
      v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_255249930);
      memcpy(__dst, v20, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v22 + 16))(__dst, v20, v21);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v22 + 56))(__dst, 0, 1, v21);
    }
    v25 = *(int *)(v18 + 24);
    v26 = *(_OWORD *)(v17 + v25 + 24);
    *(_OWORD *)(v16 + v25 + 24) = v26;
    (**(void (***)(void))(v26 - 8))();
    v27 = *(int *)(v37 + 24);
    v28 = *(_OWORD *)((char *)a2 + v27 + 24);
    *(_OWORD *)(a1 + v27 + 24) = v28;
    (**(void (***)(void))(v28 - 8))();
    v29 = *(int *)(v37 + 28);
    v30 = (void *)(a1 + v29);
    v31 = (char *)a2 + v29;
    v32 = sub_21C2475BC();
    v33 = *(_QWORD *)(v32 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48))(v31, 1, v32))
    {
      v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_255249DD0);
      memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v33 + 16))(v30, v31, v32);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v33 + 56))(v30, 0, 1, v32);
    }
  }
  return a1;
}

uint64_t sub_21C216454(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;

  type metadata accessor for LocatedPreview();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v4 = sub_21C247C64();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
    v5 = a1 + *(int *)(type metadata accessor for RegistryPreview(0) + 20);
    v6 = sub_21C246F74();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_release();
  }
  v7 = a1 + a2[5];
  swift_bridgeObjectRelease();
  v8 = type metadata accessor for RenderEffects(0);
  v9 = v7 + *(int *)(v8 + 20);
  v10 = sub_21C2470E8();
  v11 = *(_QWORD *)(v10 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v9, v10);
  __swift_destroy_boxed_opaque_existential_1(v7 + *(int *)(v8 + 24));
  __swift_destroy_boxed_opaque_existential_1(a1 + a2[6]);
  v12 = a1 + a2[7];
  v13 = sub_21C2475BC();
  v14 = *(_QWORD *)(v13 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v14 + 8))(v12, v13);
  return result;
}

uint64_t sub_21C2165CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  const void *v18;
  uint64_t v19;
  uint64_t v20;
  unsigned int (*v21)(const void *, uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  uint64_t v25;
  __int128 v26;
  uint64_t v27;
  void *v28;
  const void *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void *__dst;
  uint64_t v35;

  type metadata accessor for LocatedPreview();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v6 = sub_21C247C64();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
    v7 = *(int *)(type metadata accessor for RegistryPreview(0) + 20);
    v8 = a1 + v7;
    v9 = a2 + v7;
    v10 = sub_21C246F74();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  }
  else
  {
    v11 = *(_QWORD *)(a2 + 8);
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = v11;
    *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
    v12 = *(_QWORD *)(a2 + 40);
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
    *(_QWORD *)(a1 + 40) = v12;
    swift_bridgeObjectRetain();
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  v35 = a3;
  v13 = *(int *)(a3 + 20);
  v14 = a1 + v13;
  v15 = a2 + v13;
  *(_QWORD *)(a1 + v13) = *(_QWORD *)(a2 + v13);
  v16 = type metadata accessor for RenderEffects(0);
  v17 = *(int *)(v16 + 20);
  __dst = (void *)(v14 + v17);
  v18 = (const void *)(v15 + v17);
  v19 = sub_21C2470E8();
  v20 = *(_QWORD *)(v19 - 8);
  v21 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v20 + 48);
  swift_bridgeObjectRetain();
  if (v21(v18, 1, v19))
  {
    v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_255249930);
    memcpy(__dst, v18, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v20 + 16))(__dst, v18, v19);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v20 + 56))(__dst, 0, 1, v19);
  }
  v23 = *(int *)(v16 + 24);
  v24 = *(_OWORD *)(v15 + v23 + 24);
  *(_OWORD *)(v14 + v23 + 24) = v24;
  (**(void (***)(void))(v24 - 8))();
  v25 = *(int *)(v35 + 24);
  v26 = *(_OWORD *)(a2 + v25 + 24);
  *(_OWORD *)(a1 + v25 + 24) = v26;
  (**(void (***)(void))(v26 - 8))();
  v27 = *(int *)(v35 + 28);
  v28 = (void *)(a1 + v27);
  v29 = (const void *)(a2 + v27);
  v30 = sub_21C2475BC();
  v31 = *(_QWORD *)(v30 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v31 + 48))(v29, 1, v30))
  {
    v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_255249DD0);
    memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v31 + 16))(v28, v29, v30);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v31 + 56))(v28, 0, 1, v30);
  }
  return a1;
}

uint64_t sub_21C21686C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t (*v19)(void *, uint64_t, uint64_t);
  int v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t (*v28)(void *, uint64_t, uint64_t);
  int v29;
  int v30;
  uint64_t v31;
  uint64_t v33;
  uint64_t v34;

  if (a1 != a2)
  {
    sub_21C1E71CC(a1, (uint64_t (*)(_QWORD))type metadata accessor for LocatedPreview);
    type metadata accessor for LocatedPreview();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v6 = sub_21C247C64();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
      v7 = *(int *)(type metadata accessor for RegistryPreview(0) + 20);
      v8 = a1 + v7;
      v9 = a2 + v7;
      v10 = sub_21C246F74();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
    }
    else
    {
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
      *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
      *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
      *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
      swift_bridgeObjectRetain();
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  v34 = a3;
  v11 = *(int *)(a3 + 20);
  v12 = a1 + v11;
  v13 = a2 + v11;
  *(_QWORD *)(a1 + v11) = *(_QWORD *)(a2 + v11);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v33 = type metadata accessor for RenderEffects(0);
  v14 = *(int *)(v33 + 20);
  v15 = (void *)(v12 + v14);
  v16 = (void *)(v13 + v14);
  v17 = sub_21C2470E8();
  v18 = *(_QWORD *)(v17 - 8);
  v19 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v18 + 48);
  v20 = v19(v15, 1, v17);
  v21 = v19(v16, 1, v17);
  if (v20)
  {
    if (!v21)
    {
      (*(void (**)(void *, void *, uint64_t))(v18 + 16))(v15, v16, v17);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
      goto LABEL_12;
    }
    goto LABEL_11;
  }
  if (v21)
  {
    (*(void (**)(void *, uint64_t))(v18 + 8))(v15, v17);
LABEL_11:
    v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_255249930);
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    goto LABEL_12;
  }
  (*(void (**)(void *, void *, uint64_t))(v18 + 24))(v15, v16, v17);
LABEL_12:
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(v12 + *(int *)(v33 + 24)), (uint64_t *)(v13 + *(int *)(v33 + 24)));
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + *(int *)(v34 + 24)), (uint64_t *)(a2 + *(int *)(v34 + 24)));
  v23 = *(int *)(v34 + 28);
  v24 = (void *)(a1 + v23);
  v25 = (void *)(a2 + v23);
  v26 = sub_21C2475BC();
  v27 = *(_QWORD *)(v26 - 8);
  v28 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v27 + 48);
  v29 = v28(v24, 1, v26);
  v30 = v28(v25, 1, v26);
  if (!v29)
  {
    if (!v30)
    {
      (*(void (**)(void *, void *, uint64_t))(v27 + 24))(v24, v25, v26);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v27 + 8))(v24, v26);
    goto LABEL_17;
  }
  if (v30)
  {
LABEL_17:
    v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_255249DD0);
    memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v27 + 16))(v24, v25, v26);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v27 + 56))(v24, 0, 1, v26);
  return a1;
}

char *sub_21C216B88(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  __int128 v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  __int128 v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v6 = type metadata accessor for LocatedPreview();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v7 = sub_21C247C64();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
    v8 = *(int *)(type metadata accessor for RegistryPreview(0) + 20);
    v9 = &a1[v8];
    v10 = &a2[v8];
    v11 = sub_21C246F74();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  }
  v12 = a3[5];
  v13 = &a1[v12];
  v14 = &a2[v12];
  *(_QWORD *)&a1[v12] = *(_QWORD *)&a2[v12];
  v15 = type metadata accessor for RenderEffects(0);
  v16 = *(int *)(v15 + 20);
  v17 = &v13[v16];
  v18 = &v14[v16];
  v19 = sub_21C2470E8();
  v20 = *(_QWORD *)(v19 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
  {
    v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_255249930);
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v17, v18, v19);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
  }
  v22 = *(int *)(v15 + 24);
  v23 = &v13[v22];
  v24 = &v14[v22];
  v25 = *((_OWORD *)v24 + 1);
  *(_OWORD *)v23 = *(_OWORD *)v24;
  *((_OWORD *)v23 + 1) = v25;
  *((_QWORD *)v23 + 4) = *((_QWORD *)v24 + 4);
  v26 = a3[6];
  v27 = a3[7];
  v28 = &a1[v26];
  v29 = &a2[v26];
  *((_QWORD *)v28 + 4) = *((_QWORD *)v29 + 4);
  v30 = *((_OWORD *)v29 + 1);
  *(_OWORD *)v28 = *(_OWORD *)v29;
  *((_OWORD *)v28 + 1) = v30;
  v31 = &a1[v27];
  v32 = &a2[v27];
  v33 = sub_21C2475BC();
  v34 = *(_QWORD *)(v33 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v34 + 48))(v32, 1, v33))
  {
    v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_255249DD0);
    memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v34 + 32))(v31, v32, v33);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v34 + 56))(v31, 0, 1, v33);
  }
  return a1;
}

char *sub_21C216DC8(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t (*v21)(char *, uint64_t, uint64_t);
  int v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  __int128 v28;
  uint64_t v29;
  char *v30;
  char *v31;
  __int128 v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t (*v38)(char *, uint64_t, uint64_t);
  int v39;
  int v40;
  uint64_t v41;
  uint64_t v43;
  char *v44;

  if (a1 != a2)
  {
    sub_21C1E71CC((uint64_t)a1, (uint64_t (*)(_QWORD))type metadata accessor for LocatedPreview);
    v6 = type metadata accessor for LocatedPreview();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v7 = sub_21C247C64();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
      v8 = *(int *)(type metadata accessor for RegistryPreview(0) + 20);
      v9 = &a1[v8];
      v10 = &a2[v8];
      v11 = sub_21C246F74();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
    }
  }
  v43 = a3;
  v44 = a1;
  v12 = *(int *)(a3 + 20);
  v13 = &a1[v12];
  v14 = &a2[v12];
  *(_QWORD *)&a1[v12] = *(_QWORD *)&a2[v12];
  swift_bridgeObjectRelease();
  v15 = type metadata accessor for RenderEffects(0);
  v16 = *(int *)(v15 + 20);
  v17 = &v13[v16];
  v18 = &v14[v16];
  v19 = sub_21C2470E8();
  v20 = *(_QWORD *)(v19 - 8);
  v21 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v20 + 48);
  v22 = v21(v17, 1, v19);
  v23 = v21(v18, 1, v19);
  if (v22)
  {
    if (!v23)
    {
      (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v17, v18, v19);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
      goto LABEL_11;
    }
    goto LABEL_10;
  }
  if (v23)
  {
    (*(void (**)(char *, uint64_t))(v20 + 8))(v17, v19);
LABEL_10:
    v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_255249930);
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    goto LABEL_11;
  }
  (*(void (**)(char *, char *, uint64_t))(v20 + 40))(v17, v18, v19);
LABEL_11:
  v25 = *(int *)(v15 + 24);
  v26 = &v13[v25];
  v27 = &v14[v25];
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v13[v25]);
  v28 = *((_OWORD *)v27 + 1);
  *(_OWORD *)v26 = *(_OWORD *)v27;
  *((_OWORD *)v26 + 1) = v28;
  *((_QWORD *)v26 + 4) = *((_QWORD *)v27 + 4);
  v29 = *(int *)(v43 + 24);
  v30 = &v44[v29];
  v31 = &a2[v29];
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v44[v29]);
  v32 = *((_OWORD *)v31 + 1);
  *(_OWORD *)v30 = *(_OWORD *)v31;
  *((_OWORD *)v30 + 1) = v32;
  *((_QWORD *)v30 + 4) = *((_QWORD *)v31 + 4);
  v33 = *(int *)(v43 + 28);
  v34 = &v44[v33];
  v35 = &a2[v33];
  v36 = sub_21C2475BC();
  v37 = *(_QWORD *)(v36 - 8);
  v38 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v37 + 48);
  v39 = v38(v34, 1, v36);
  v40 = v38(v35, 1, v36);
  if (!v39)
  {
    if (!v40)
    {
      (*(void (**)(char *, char *, uint64_t))(v37 + 40))(v34, v35, v36);
      return v44;
    }
    (*(void (**)(char *, uint64_t))(v37 + 8))(v34, v36);
    goto LABEL_16;
  }
  if (v40)
  {
LABEL_16:
    v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_255249DD0);
    memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
    return v44;
  }
  (*(void (**)(char *, char *, uint64_t))(v37 + 32))(v34, v35, v36);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v37 + 56))(v34, 0, 1, v36);
  return v44;
}

uint64_t sub_21C2170D4()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_21C2170E0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;

  v6 = type metadata accessor for LocatedPreview();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  v11 = type metadata accessor for RenderEffects(0);
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v13 = a3[5];
LABEL_10:
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  if ((_DWORD)a2 != 0x7FFFFFFF)
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_255249DD0);
    v12 = *(_QWORD *)(v8 - 8);
    v13 = a3[7];
    goto LABEL_10;
  }
  v14 = *(_QWORD *)(a1 + a3[6] + 24);
  if (v14 >= 0xFFFFFFFF)
    LODWORD(v14) = -1;
  return (v14 + 1);
}

uint64_t sub_21C2171B4()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_21C2171C0(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;

  v8 = type metadata accessor for LocatedPreview();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    result = type metadata accessor for RenderEffects(0);
    v14 = *(_QWORD *)(result - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = result;
      v15 = a4[5];
    }
    else
    {
      if (a3 == 0x7FFFFFFF)
      {
        *(_QWORD *)(a1 + a4[6] + 24) = (a2 - 1);
        return result;
      }
      v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_255249DD0);
      v14 = *(_QWORD *)(v10 - 8);
      v15 = a4[7];
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_21C217290()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  type metadata accessor for LocatedPreview();
  if (v0 <= 0x3F)
  {
    type metadata accessor for RenderEffects(319);
    if (v1 <= 0x3F)
    {
      sub_21C217338();
      if (v2 <= 0x3F)
        swift_initStructMetadata();
    }
  }
}

void sub_21C217338()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25524B3B0)
  {
    sub_21C2475BC();
    v0 = sub_21C248798();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25524B3B0);
  }
}

uint64_t SceneServices.sharedHostController<A>(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  _BYTE v11[16];
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v5 = sub_21C247808();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = &v11[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v15 = a2;
  v12 = a2;
  v13 = a3;
  swift_beginAccess();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255249960);
  sub_21C2181BC();
  sub_21C247820();
  swift_endAccess();
  type metadata accessor for PreviewHostController(0, a2, a3, v9);
  sub_21C2477FC();
  (*(void (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
  return v14;
}

uint64_t SceneUpdateResult.init<>(viewController:preferences:makeStaticOutput:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char *a6@<X8>)
{
  return SceneUpdateResult.init(viewController:preferences:hostedOutput:makeStaticOutput:)(a1, a2, a3, a3, a4, MEMORY[0x24BEE4AE0] + 8, a5, a6);
}

{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v18;

  v12 = sub_21C246F38();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v18 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, a2, v12);
  SceneUpdateResult.init(viewController:preferences:hostedOutput:makeStaticOutput:)(a1, (uint64_t)v15, v16, a3, a4, MEMORY[0x24BEE4AE0] + 8, a5, a6);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v13 + 8))(a2, v12);
}

uint64_t sub_21C2174BC()
{
  return sub_21C217DCC();
}

uint64_t SceneEntryPoint.update(payload:scene:role:)()
{
  sub_21C218208();
  swift_allocError();
  return swift_willThrow();
}

uint64_t sub_21C217518(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v6;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t updated;
  uint64_t AssociatedTypeWitness;
  uint64_t v14;
  uint64_t v15;

  v6[11] = a5;
  v6[12] = v5;
  v6[9] = a3;
  v6[10] = a4;
  v6[7] = a1;
  v6[8] = a2;
  v9 = sub_21C247880();
  v6[13] = v9;
  v6[14] = *(_QWORD *)(v9 - 8);
  v6[15] = swift_task_alloc();
  v10 = *(_QWORD *)(a5 + 8);
  v6[16] = v10;
  updated = type metadata accessor for UpdatePayloadError(0, a4, v10, v11);
  v6[17] = updated;
  v6[18] = *(_QWORD *)(updated - 8);
  v6[19] = swift_task_alloc();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v6[20] = AssociatedTypeWitness;
  v6[21] = *(_QWORD *)(AssociatedTypeWitness - 8);
  v6[22] = swift_task_alloc();
  v6[23] = swift_task_alloc();
  v14 = swift_getAssociatedTypeWitness();
  v6[24] = v14;
  v6[25] = *(_QWORD *)(v14 - 8);
  v6[26] = swift_task_alloc();
  v6[27] = swift_task_alloc();
  sub_21C24863C();
  v6[28] = sub_21C248630();
  v6[29] = sub_21C2485E8();
  v6[30] = v15;
  return swift_task_switch();
}

uint64_t sub_21C21769C()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t (*v4)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD);

  (*(void (**)(_QWORD))(v0[16] + 56))(v0[8]);
  v1 = v0[11];
  (*(void (**)(_QWORD, _QWORD, _QWORD))(v0[25] + 32))(v0[27], v0[26], v0[24]);
  v4 = (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))(**(int **)(v1 + 40) + *(_QWORD *)(v1 + 40));
  v2 = (_QWORD *)swift_task_alloc();
  v0[31] = v2;
  *v2 = v0;
  v2[1] = sub_21C217918;
  return v4(v0[23], v0[27], v0[9], v0[10], v0[11]);
}

uint64_t sub_21C217918()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 256) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_21C217978()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = *(_QWORD *)(v0 + 216);
  v2 = *(_QWORD *)(v0 + 200);
  v4 = *(_QWORD *)(v0 + 184);
  v3 = *(_QWORD *)(v0 + 192);
  v6 = *(_QWORD *)(v0 + 168);
  v5 = *(_QWORD *)(v0 + 176);
  v7 = *(_QWORD *)(v0 + 160);
  swift_release();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v5, v4, v7);
  sub_21C247814();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v7);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21C217A5C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 216);
  v2 = *(_QWORD *)(v0 + 192);
  v3 = *(_QWORD *)(v0 + 200);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21C217AF0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, char *a5@<X8>)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t updated;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t result;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;

  v24 = a2;
  v23 = a5;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v9 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v11 = (char *)&v22 - v10;
  v12 = swift_getAssociatedTypeWitness();
  v13 = swift_getAssociatedTypeWitness();
  updated = type metadata accessor for SceneUpdateResult(0, v12, v13, v14);
  v22 = *(_QWORD *)(updated - 8);
  MEMORY[0x24BDAC7A8](updated);
  v17 = (char *)&v22 - v16;
  sub_21C2477FC();
  v18 = v25;
  (*(void (**)(uint64_t, char *, uint64_t, uint64_t, uint64_t))(a4 + 48))(a1, v11, v24, a3, a4);
  result = (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, AssociatedTypeWitness);
  if (!v18)
  {
    MEMORY[0x24BDAC7A8](result);
    *(&v22 - 4) = a3;
    *(&v22 - 3) = a4;
    *(&v22 - 2) = a3;
    v20 = (_QWORD *)swift_allocObject();
    v20[2] = a3;
    v20[3] = a4;
    v20[4] = a3;
    v21 = sub_21C247880();
    sub_21C2184E8((void (*)(char *))sub_21C219724, (uint64_t)(&v22 - 6), (uint64_t)sub_21C21975C, (uint64_t)v20, updated, v21, v21, v23);
    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v22 + 8))(v17, updated);
  }
  return result;
}

uint64_t SceneUpdateResult.init(viewController:preferences:hostedOutput:makeStaticOutput:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, char *a8@<X8>)
{
  int *updated;
  char *v15;
  uint64_t v16;
  uint64_t result;
  uint64_t *v18;

  *(_QWORD *)a8 = a1;
  updated = (int *)type metadata accessor for SceneUpdateResult(0, a6, a7, a4);
  v15 = &a8[updated[9]];
  v16 = sub_21C246F38();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v15, a2, v16);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(a6 - 8) + 32))(&a8[updated[10]], a3, a6);
  v18 = (uint64_t *)&a8[updated[11]];
  *v18 = a4;
  v18[1] = a5;
  return result;
}

uint64_t sub_21C217DCC()
{
  sub_21C218208();
  swift_allocError();
  return swift_willThrow();
}

uint64_t sub_21C217E10()
{
  sub_21C246E6C();
  sub_21C2196DC();
  return sub_21C247A0C();
}

uint64_t static SceneEntryPoint<>.encode(hostedOutput:)()
{
  swift_getAssociatedTypeWitness();
  return sub_21C247A0C();
}

uint64_t sub_21C217EB0()
{
  return SceneEntryPoint.update(payload:scene:role:)();
}

uint64_t SceneEntryPoint<>.prepareToUpdate(with:services:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;

  v5[4] = a4;
  v5[5] = a5;
  v5[2] = a1;
  v5[3] = a2;
  sub_21C24863C();
  v5[6] = sub_21C248630();
  sub_21C2485E8();
  return swift_task_switch();
}

uint64_t sub_21C217F34()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t AssociatedTypeWitness;

  v1 = *(_QWORD *)(v0 + 24);
  v2 = *(_QWORD *)(v0 + 16);
  swift_release();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 16))(v2, v1, AssociatedTypeWitness);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void SceneEntryPoint<>.update(for:with:services:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void (*v10)(uint64_t, id, uint64_t, uint64_t, uint64_t);
  id v11;

  swift_beginAccess();
  v10 = *(void (**)(uint64_t, id, uint64_t, uint64_t, uint64_t))(a5 + 56);
  v11 = *(id *)(a3 + 16);
  v10(a2, v11, a1, a4, a5);

}

void SceneEntryPoint<>.init()()
{
  sub_21C2488AC();
  __break(1u);
}

id SceneServices.scene.getter()
{
  uint64_t v0;

  swift_beginAccess();
  return *(id *)(v0 + 16);
}

void SceneServices.scene.setter(uint64_t a1)
{
  uint64_t v1;
  void *v3;

  swift_beginAccess();
  v3 = *(void **)(v1 + 16);
  *(_QWORD *)(v1 + 16) = a1;

}

uint64_t (*SceneServices.scene.modify())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t sub_21C21814C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  type metadata accessor for PreviewHostController(0, a1, a2, a4);
  PreviewHostController.__allocating_init()();
  return sub_21C247814();
}

uint64_t sub_21C2181A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return sub_21C21814C(*(_QWORD *)(v4 + 16), *(_QWORD *)(v4 + 24), a3, a4);
}

unint64_t sub_21C2181BC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_255249968;
  if (!qword_255249968)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255249960);
    result = MEMORY[0x22077702C](MEMORY[0x24BE76CA0], v1);
    atomic_store(result, (unint64_t *)&qword_255249968);
  }
  return result;
}

unint64_t sub_21C218208()
{
  unint64_t result;

  result = qword_25524B3E8;
  if (!qword_25524B3E8)
  {
    result = MEMORY[0x22077702C](&unk_21C24AE18, &type metadata for Unimplemented);
    atomic_store(result, (unint64_t *)&qword_25524B3E8);
  }
  return result;
}

uint64_t type metadata accessor for SceneUpdateResult(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for SceneUpdateResult);
}

uint64_t SceneServices.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return v0;
}

uint64_t SceneServices.__deallocating_deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

id SceneUpdateResult.viewController.getter()
{
  id *v0;

  return *v0;
}

void SceneUpdateResult.viewController.setter(void *a1)
{
  id *v1;

  *v1 = a1;
}

uint64_t (*SceneUpdateResult.viewController.modify())()
{
  return nullsub_1;
}

uint64_t SceneUpdateResult.preferences.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a1 + 36);
  v5 = sub_21C246F38();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, v4, v5);
}

uint64_t SceneUpdateResult.preferences.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a2 + 36);
  v5 = sub_21C246F38();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 40))(v4, a1, v5);
}

uint64_t (*SceneUpdateResult.preferences.modify())()
{
  return nullsub_1;
}

uint64_t SceneUpdateResult.hostedOutput.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a1 + 16) - 8) + 16))(a2, v2 + *(int *)(a1 + 40));
}

uint64_t SceneUpdateResult.hostedOutput.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 40))(v2 + *(int *)(a2 + 40), a1);
}

uint64_t (*SceneUpdateResult.hostedOutput.modify())()
{
  return nullsub_1;
}

uint64_t SceneUpdateResult.makeStaticOutput.getter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + *(int *)(a1 + 44));
  swift_retain();
  return v2;
}

uint64_t SceneUpdateResult.makeStaticOutput.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v6;
  uint64_t result;

  v6 = (_QWORD *)(v3 + *(int *)(a3 + 44));
  result = swift_release();
  *v6 = a1;
  v6[1] = a2;
  return result;
}

uint64_t (*SceneUpdateResult.makeStaticOutput.modify())()
{
  return nullsub_1;
}

uint64_t SceneUpdateResult.init<>(viewController:preferences:hostedOutput:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char *a5@<X8>)
{
  return SceneUpdateResult.init(viewController:preferences:hostedOutput:makeStaticOutput:)(a1, a2, a3, (uint64_t)&unk_25524B3F8, 0, a4, MEMORY[0x24BEE4AE0] + 8, a5);
}

uint64_t SceneUpdateResult.init<>(viewController:preferences:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t result;
  _QWORD *v9;

  *a3 = a1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_25524B408);
  v6 = (char *)a3 + *(int *)(v5 + 36);
  v7 = sub_21C246F38();
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v6, a2, v7);
  v9 = (_QWORD *)((char *)a3 + *(int *)(v5 + 44));
  *v9 = &unk_25524B400;
  v9[1] = 0;
  return result;
}

uint64_t sub_21C2184E8@<X0>(void (*a1)(char *)@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, char *a8@<X8>)
{
  void **v8;
  void **v9;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  void *v21;
  uint64_t v22;
  char *v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;
  id v30;
  uint64_t v31;
  void (*v32)(char *);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;

  v9 = v8;
  v34 = a4;
  v35 = a7;
  v32 = a1;
  v33 = a3;
  v31 = a2;
  v36 = a8;
  v12 = *(_QWORD *)(a5 - 8);
  v13 = *(_QWORD *)(v12 + 64);
  v14 = MEMORY[0x24BDAC7A8](a1);
  v15 = (char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v29 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_21C246F38();
  MEMORY[0x24BDAC7A8](v18);
  v20 = (char *)&v29 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = *v8;
  (*(void (**)(char *, char *))(v22 + 16))(v20, (char *)v9 + *(int *)(a5 + 36));
  v23 = (char *)v9 + *(int *)(a5 + 40);
  v30 = v21;
  v32(v23);
  (*(void (**)(char *, void **, uint64_t))(v12 + 16))(v15, v9, a5);
  v24 = (*(unsigned __int8 *)(v12 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  v25 = swift_allocObject();
  *(_OWORD *)(v25 + 16) = *(_OWORD *)(a5 + 16);
  v26 = v34;
  v27 = v35;
  *(_QWORD *)(v25 + 32) = a6;
  *(_QWORD *)(v25 + 40) = v27;
  *(_QWORD *)(v25 + 48) = v33;
  *(_QWORD *)(v25 + 56) = v26;
  (*(void (**)(unint64_t, char *, uint64_t))(v12 + 32))(v25 + v24, v15, a5);
  SceneUpdateResult.init(viewController:preferences:hostedOutput:makeStaticOutput:)((uint64_t)v30, (uint64_t)v20, (uint64_t)v17, (uint64_t)&unk_25524B568, v25, a6, v27, v36);
  return swift_retain();
}

uint64_t sub_21C2186A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;

  v6[6] = a5;
  v6[7] = a6;
  v6[4] = a3;
  v6[5] = a4;
  v6[2] = a1;
  v6[3] = a2;
  v6[8] = *(_QWORD *)(a6 - 8);
  v6[9] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_21C2186FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t (*v9)(_QWORD);

  v5 = v4[5];
  v6 = (_QWORD *)(v5 + *(int *)(type metadata accessor for SceneUpdateResult(0, v4[6], v4[7], a4) + 44));
  v9 = (uint64_t (*)(_QWORD))(*(int *)*v6 + *v6);
  v7 = (_QWORD *)swift_task_alloc();
  v4[10] = v7;
  *v7 = v4;
  v7[1] = sub_21C218770;
  return v9(v4[9]);
}

uint64_t sub_21C218770()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 88) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_21C2187D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(v0 + 64);
  v1 = *(_QWORD *)(v0 + 72);
  v3 = *(_QWORD *)(v0 + 56);
  (*(void (**)(uint64_t))(v0 + 24))(v1);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21C218838()
{
  uint64_t v0;

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

_QWORD *SceneUpdateResult.init(viewController:preferences:hostedOutput:makeStaticOutput:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, char *a8@<X8>)
{
  int *updated;
  char *v16;
  uint64_t v17;
  _QWORD *result;
  char *v19;

  *(_QWORD *)a8 = a1;
  updated = (int *)type metadata accessor for SceneUpdateResult(0, a6, a7, a4);
  v16 = &a8[updated[9]];
  v17 = sub_21C246F38();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v16, a2, v17);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(a6 - 8) + 32))(&a8[updated[10]], a3, a6);
  result = (_QWORD *)swift_allocObject();
  result[2] = a6;
  result[3] = a7;
  result[4] = a4;
  result[5] = a5;
  v19 = &a8[updated[11]];
  *(_QWORD *)v19 = &unk_25524B418;
  *((_QWORD *)v19 + 1) = result;
  return result;
}

uint64_t sub_21C21894C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  return swift_task_switch();
}

uint64_t sub_21C218968()
{
  uint64_t v0;
  _QWORD *v1;

  *(_QWORD *)(v0 + 40) = (*(uint64_t (**)(void))(v0 + 24))();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 48) = v1;
  *v1 = v0;
  v1[1] = sub_21C2189F4;
  return sub_21C247A84();
}

uint64_t sub_21C2189F4()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 56) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_21C218A58()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21C218A8C()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21C218AC0()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_21C218AE4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  __int128 v5;

  v4 = swift_task_alloc();
  v5 = *(_OWORD *)(v1 + 32);
  *(_QWORD *)(v2 + 16) = v4;
  *(_QWORD *)v4 = v2;
  *(_QWORD *)(v4 + 8) = sub_21C1EBB98;
  *(_OWORD *)(v4 + 24) = v5;
  *(_QWORD *)(v4 + 16) = a1;
  return swift_task_switch();
}

uint64_t dispatch thunk of SceneEntryPoint.init()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of SceneEntryPoint.prepareToUpdate(with:services:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v11;
  uint64_t (*v13)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v13 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(a5 + 40) + *(_QWORD *)(a5 + 40));
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 16) = v11;
  *v11 = v5;
  v11[1] = sub_21C1E664C;
  return v13(a1, a2, a3, a4, a5);
}

uint64_t dispatch thunk of SceneEntryPoint.update(for:with:services:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 48))();
}

uint64_t dispatch thunk of SceneEntryPoint.update(payload:scene:role:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 56))();
}

uint64_t dispatch thunk of static SceneEntryPoint.encode(hostedOutput:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 64))();
}

uint64_t type metadata accessor for SceneServices()
{
  return objc_opt_self();
}

uint64_t method lookup function for SceneServices()
{
  return swift_lookUpClassMethod();
}

uint64_t sub_21C218D24()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_21C218D2C()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_21C246F38();
  if (v1 <= 0x3F)
  {
    result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

void **sub_21C218DD0(void **a1, void **a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  char *v15;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  _QWORD *v24;
  uint64_t v25;
  _QWORD *v26;
  void (*v28)(uint64_t, uint64_t, uint64_t);

  v6 = sub_21C246F38();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_DWORD *)(v7 + 80);
  v9 = *(_QWORD *)(v7 + 64);
  v10 = *(_QWORD *)(a3 + 16);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_DWORD *)(v11 + 80);
  v13 = *(_QWORD *)(v11 + 64) + 7;
  v14 = (*(_DWORD *)(v11 + 80) | *(_DWORD *)(v7 + 80)) & 0x100000;
  v15 = (char *)*a2;
  *a1 = *a2;
  if ((v12 | v8) > 7 || v14 != 0 || ((v13 + ((v9 + ((v8 + 8) & ~v8) + v12) & ~v12)) & 0xFFFFFFFFFFFFFFF8) + 16 > 0x18)
  {
    a1 = (void **)&v15[((v12 | v8) & 0xF8 ^ 0x1F8) & ((v12 | v8) + 16)];
  }
  else
  {
    v18 = ~v8;
    v19 = (char *)a1 + v8;
    v20 = (char *)a2 + v8;
    v21 = (unint64_t)(v19 + 8) & v18;
    v22 = (unint64_t)(v20 + 8) & v18;
    v28 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16);
    v23 = v15;
    v28(v21, v22, v6);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16))((v21 + v9 + v12) & ~v12, (v22 + v9 + v12) & ~v12, v10);
    v24 = (_QWORD *)((v13 + ((v22 + v9 + v12) & ~v12)) & 0xFFFFFFFFFFFFFFF8);
    v25 = v24[1];
    v26 = (_QWORD *)((v13 + ((v21 + v9 + v12) & ~v12)) & 0xFFFFFFFFFFFFFFF8);
    *v26 = *v24;
    v26[1] = v25;
  }
  swift_retain();
  return a1;
}

uint64_t sub_21C218F38(id *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v4 = sub_21C246F38();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = ((unint64_t)a1 + *(unsigned __int8 *)(v5 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  (*(void (**)(unint64_t, uint64_t))(v5 + 8))(v6, v4);
  (*(void (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 8))((v6
                                                                                            + *(_QWORD *)(v5 + 64)
                                                                                            + *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 80));
  return swift_release();
}

void **sub_21C218FD0(void **a1, void **a2, uint64_t a3)
{
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, uint64_t);
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;

  v6 = *a2;
  *a1 = *a2;
  v7 = sub_21C246F38();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = ((unint64_t)a1 + v9 + 8) & ~v9;
  v11 = ((unint64_t)a2 + v9 + 8) & ~v9;
  v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16);
  v13 = v6;
  v12(v10, v11, v7);
  v14 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v15 = *(unsigned __int8 *)(v14 + 80);
  v16 = *(_QWORD *)(v8 + 64) + v15;
  v17 = (v16 + v10) & ~v15;
  v18 = (v16 + v11) & ~v15;
  (*(void (**)(uint64_t, uint64_t))(v14 + 16))(v17, v18);
  v19 = *(_QWORD *)(v14 + 64) + 7;
  v20 = (_QWORD *)((v19 + v17) & 0xFFFFFFFFFFFFFFF8);
  v21 = (_QWORD *)((v19 + v18) & 0xFFFFFFFFFFFFFFF8);
  v22 = v21[1];
  *v20 = *v21;
  v20[1] = v22;
  swift_retain();
  return a1;
}

void **sub_21C2190B0(void **a1, void **a2, uint64_t a3)
{
  void *v6;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;

  v6 = *a2;
  v7 = *a1;
  *a1 = *a2;
  v8 = v6;

  v9 = sub_21C246F38();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(unsigned __int8 *)(v10 + 80);
  v12 = ((unint64_t)a1 + v11 + 8) & ~v11;
  v13 = ((unint64_t)a2 + v11 + 8) & ~v11;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 24))(v12, v13, v9);
  v14 = *(_QWORD *)(v10 + 64);
  v15 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v16 = *(unsigned __int8 *)(v15 + 80);
  v17 = v14 + v16;
  v18 = (v17 + v12) & ~v16;
  v19 = (v17 + v13) & ~v16;
  (*(void (**)(uint64_t, uint64_t))(v15 + 24))(v18, v19);
  v20 = *(_QWORD *)(v15 + 64) + 7;
  v21 = (_QWORD *)((v20 + v18) & 0xFFFFFFFFFFFFFFF8);
  v22 = (_QWORD *)((v20 + v19) & 0xFFFFFFFFFFFFFFF8);
  v23 = v22[1];
  *v21 = *v22;
  v21[1] = v23;
  swift_retain();
  swift_release();
  return a1;
}

_QWORD *sub_21C219198(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  *a1 = *a2;
  v6 = sub_21C246F38();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = ((unint64_t)a1 + v8 + 8) & ~v8;
  v10 = ((unint64_t)a2 + v8 + 8) & ~v8;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32))(v9, v10, v6);
  v11 = *(_QWORD *)(v7 + 64);
  v12 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v13 = *(unsigned __int8 *)(v12 + 80);
  v14 = v11 + v13;
  v15 = (v14 + v9) & ~v13;
  v16 = (v14 + v10) & ~v13;
  (*(void (**)(uint64_t, uint64_t))(v12 + 32))(v15, v16);
  *(_OWORD *)((*(_QWORD *)(v12 + 64) + 7 + v15) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)((*(_QWORD *)(v12 + 64) + 7 + v16) & 0xFFFFFFFFFFFFF8);
  return a1;
}

void **sub_21C219264(void **a1, void **a2, uint64_t a3)
{
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v6 = *a1;
  *a1 = *a2;

  v7 = sub_21C246F38();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = ((unint64_t)a1 + v9 + 8) & ~v9;
  v11 = ((unint64_t)a2 + v9 + 8) & ~v9;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 40))(v10, v11, v7);
  v12 = *(_QWORD *)(v8 + 64);
  v13 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v14 = *(unsigned __int8 *)(v13 + 80);
  v15 = v12 + v14;
  v16 = (v15 + v10) & ~v14;
  v17 = (v15 + v11) & ~v14;
  (*(void (**)(uint64_t, uint64_t))(v13 + 40))(v16, v17);
  *(_OWORD *)((*(_QWORD *)(v13 + 64) + 7 + v16) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((*(_QWORD *)(v13 + 64)
                                                                                       + 7
                                                                                       + v17) & 0xFFFFFFFFFFFFF8);
  swift_release();
  return a1;
}

uint64_t sub_21C219340(uint64_t *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unsigned int v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;

  v6 = sub_21C246F38();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned int *)(v7 + 84);
  v9 = *(_QWORD *)(a3 + 16);
  v10 = *(_QWORD *)(v9 - 8);
  if (v8 <= *(_DWORD *)(v10 + 84))
    v11 = *(_DWORD *)(v10 + 84);
  else
    v11 = *(_DWORD *)(v7 + 84);
  if (v11 <= 0x7FFFFFFF)
    v12 = 0x7FFFFFFF;
  else
    v12 = v11;
  if (!a2)
    return 0;
  v13 = v6;
  v14 = *(unsigned __int8 *)(v7 + 80);
  v15 = *(_QWORD *)(v7 + 64);
  v16 = *(unsigned __int8 *)(v10 + 80);
  if (v12 < a2)
  {
    if (((((*(_QWORD *)(v10 + 64) + ((v15 + ((v14 + 8) & ~v14) + v16) & ~v16) + 7) & 0xFFFFFFFFFFFFFFF8) + 16) & 0xFFFFFFF8) != 0)
      v17 = 2;
    else
      v17 = a2 - v12 + 1;
    if (v17 >= 0x10000)
      v18 = 4;
    else
      v18 = 2;
    if (v17 < 0x100)
      v18 = 1;
    if (v17 >= 2)
      v19 = v18;
    else
      v19 = 0;
    __asm { BR              X5 }
  }
  if ((v11 & 0x80000000) != 0)
  {
    v22 = ((unint64_t)a1 + v14 + 8) & ~v14;
    if ((_DWORD)v8 == v12)
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v22, v8, v13);
    else
      return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(v10 + 48))((v22 + v15 + v16) & ~v16, *(unsigned int *)(v10 + 84), v9);
  }
  else
  {
    v21 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF)
      LODWORD(v21) = -1;
    return (v21 + 1);
  }
}

void sub_21C2194DC(unsigned int *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  unsigned int v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int v14;
  int v15;
  int v16;
  unsigned int v17;

  v8 = *(_QWORD *)(sub_21C246F38() - 8);
  v9 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v8 + 84) <= *(_DWORD *)(v9 + 84))
    v10 = *(_DWORD *)(v9 + 84);
  else
    v10 = *(_DWORD *)(v8 + 84);
  if (v10 <= 0x7FFFFFFF)
    v11 = 0x7FFFFFFF;
  else
    v11 = v10;
  v12 = *(unsigned __int8 *)(v8 + 80);
  v13 = *(unsigned __int8 *)(v9 + 80);
  if (v11 >= a3)
  {
    v16 = 0;
    if (a2 <= v11)
      goto LABEL_20;
  }
  else
  {
    if (((*(_DWORD *)(v9 + 64)
         + ((*(_DWORD *)(v8 + 64) + (((_DWORD)v12 + 8) & ~(_DWORD)v12) + (_DWORD)v13) & ~(_DWORD)v13)
         + 7) & 0xFFFFFFF8) == 0xFFFFFFF0)
      v14 = a3 - v11 + 1;
    else
      v14 = 2;
    if (v14 >= 0x10000)
      v15 = 4;
    else
      v15 = 2;
    if (v14 < 0x100)
      v15 = 1;
    if (v14 >= 2)
      v16 = v15;
    else
      v16 = 0;
    if (a2 <= v11)
LABEL_20:
      __asm { BR              X5 }
  }
  if (((*(_DWORD *)(v9 + 64)
       + ((*(_DWORD *)(v8 + 64) + (((_DWORD)v12 + 8) & ~(_DWORD)v12) + (_DWORD)v13) & ~(_DWORD)v13)
       + 7) & 0xFFFFFFF8) != 0xFFFFFFF0)
  {
    v17 = ~v11 + a2;
    bzero(a1, ((*(_QWORD *)(v9 + 64) + ((*(_QWORD *)(v8 + 64) + ((v12 + 8) & ~v12) + v13) & ~v13) + 7) & 0xFFFFFFFFFFFFFFF8)+ 16);
    *a1 = v17;
  }
  __asm { BR              X10 }
}

void sub_21C219620()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
  JUMPOUT(0x21C219688);
}

void sub_21C219628()
{
  uint64_t v0;
  int v1;
  uint64_t v2;

  *(_DWORD *)(v0 + v2) = 0;
  if (v1)
    JUMPOUT(0x21C219630);
  JUMPOUT(0x21C219688);
}

void sub_21C219640()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
  JUMPOUT(0x21C219688);
}

void sub_21C219648()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  *(_DWORD *)(v0 + v1) = v2;
  JUMPOUT(0x21C219688);
}

void sub_21C219650()
{
  int v0;
  uint64_t v1;
  int v2;
  uint64_t v3;

  *(_WORD *)(v1 + v3) = 0;
  if (v2)
  {
    if ((v0 & 0x80000000) == 0)
    {
      if ((v2 & 0x80000000) == 0)
        JUMPOUT(0x21C219684);
      JUMPOUT(0x21C219680);
    }
    JUMPOUT(0x21C21965CLL);
  }
  JUMPOUT(0x21C219688);
}

ValueMetadata *type metadata accessor for Unimplemented()
{
  return &type metadata for Unimplemented;
}

unint64_t sub_21C2196DC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_25524B550;
  if (!qword_25524B550)
  {
    v1 = sub_21C246E6C();
    result = MEMORY[0x22077702C](MEMORY[0x24BE78148], v1);
    atomic_store(result, (unint64_t *)&qword_25524B550);
  }
  return result;
}

uint64_t sub_21C219724(uint64_t a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)(v1 + 24) + 64))(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_21C21974C()
{
  return swift_deallocObject();
}

uint64_t sub_21C21975C(uint64_t a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)(*(_QWORD *)(v1 + 24) + 8) + 64))(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_21C219788(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t updated;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = *(_QWORD *)(v4 + 16);
  updated = type metadata accessor for SceneUpdateResult(0, v5, *(_QWORD *)(v4 + 24), a4);
  v7 = *(unsigned __int8 *)(*(_QWORD *)(updated - 8) + 80);
  v8 = (v7 + 64) & ~v7;
  swift_release();
  v9 = v4 + v8;

  v10 = v4 + v8 + *(int *)(updated + 36);
  v11 = sub_21C246F38();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v9 + *(int *)(updated + 40), v5);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_21C219854(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v7 = v4[2];
  v8 = v4[3];
  v9 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for SceneUpdateResult(0, v7, v8, a4) - 8) + 80);
  v10 = v4[6];
  v11 = v4[7];
  v12 = (uint64_t)v4 + ((v9 + 64) & ~v9);
  v13 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 16) = v13;
  *v13 = v5;
  v13[1] = sub_21C1EBB98;
  return sub_21C2186A0(a1, v10, v11, v12, v7, v8);
}

ValueMetadata *type metadata accessor for PreviewPreflightEntryPoint()
{
  return &type metadata for PreviewPreflightEntryPoint;
}

__n128 sub_21C21991C@<Q0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t *boxed_opaque_existential_1;
  __n128 result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;

  v4 = type metadata accessor for LocatedPreview();
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21C1F0928(a1, (uint64_t)v6);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    a2[3] = type metadata accessor for RegistryPreview(0);
    a2[4] = (uint64_t)&off_24E01FEC0;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(a2);
    sub_21C1F096C((uint64_t)v6, (uint64_t)boxed_opaque_existential_1);
  }
  else
  {
    v12 = *(_OWORD *)v6;
    v9 = *((_QWORD *)v6 + 2);
    v10 = *((_QWORD *)v6 + 5);
    a2[3] = (uint64_t)&type metadata for ProviderPreview;
    a2[4] = (uint64_t)&off_24E01DDA8;
    v11 = swift_allocObject();
    *a2 = v11;
    *(_OWORD *)(v11 + 16) = v12;
    *(_QWORD *)(v11 + 32) = v9;
    result = *(__n128 *)(v6 + 24);
    *(__n128 *)(v11 + 40) = result;
    *(_QWORD *)(v11 + 56) = v10;
  }
  return result;
}

uint64_t sub_21C219A34(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = a1[3];
  v2 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 16))(v1, v2);
}

uint64_t sub_21C219A84()
{
  uint64_t v0;

  sub_21C24863C();
  *(_QWORD *)(v0 + 16) = sub_21C248630();
  sub_21C2485E8();
  return swift_task_switch();
}

uint64_t sub_21C219AEC()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21C219B1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255249DD8);
  v3[5] = v4;
  v3[6] = *(_QWORD *)(v4 - 8);
  v3[7] = swift_task_alloc();
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_25524B5F8);
  v3[8] = v5;
  v3[9] = *(_QWORD *)(v5 - 8);
  v3[10] = swift_task_alloc();
  sub_21C24863C();
  v3[11] = sub_21C248630();
  v3[12] = sub_21C2485E8();
  v3[13] = v6;
  return swift_task_switch();
}

uint64_t sub_21C219BE4()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t (*v6)(_QWORD, _QWORD, uint64_t, uint64_t);

  v1 = (_QWORD *)v0[4];
  v2 = v1[11];
  v3 = v1[12];
  __swift_project_boxed_opaque_existential_1(v1 + 8, v2);
  v6 = (uint64_t (*)(_QWORD, _QWORD, uint64_t, uint64_t))(**(int **)(v3 + 8) + *(_QWORD *)(v3 + 8));
  v4 = (_QWORD *)swift_task_alloc();
  v0[14] = v4;
  *v4 = v0;
  v4[1] = sub_21C219C6C;
  return v6(v0[7], v0[3], v2, v3);
}

uint64_t sub_21C219C6C()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_21C219CB8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(v0 + 80);
  v2 = *(_QWORD *)(v0 + 64);
  v3 = *(_QWORD *)(v0 + 72);
  v5 = *(_QWORD *)(v0 + 48);
  v4 = *(_QWORD *)(v0 + 56);
  v6 = *(_QWORD *)(v0 + 40);
  swift_release();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25524B600);
  sub_21C247148();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  sub_21C247238();
  sub_21C247148();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

unint64_t sub_21C219DB0()
{
  return 0xD00000000000001ALL;
}

unint64_t sub_21C219DCC(uint64_t a1)
{
  unint64_t result;

  result = sub_21C219DF0();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_21C219DF0()
{
  unint64_t result;

  result = qword_25524B5D8;
  if (!qword_25524B5D8)
  {
    result = MEMORY[0x22077702C](&unk_21C24AE9C, &type metadata for PreviewPreflightEntryPoint);
    atomic_store(result, (unint64_t *)&qword_25524B5D8);
  }
  return result;
}

unint64_t sub_21C219E34(uint64_t a1)
{
  unint64_t result;

  result = sub_21C219E58();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_21C219E58()
{
  unint64_t result;

  result = qword_25524B5F0;
  if (!qword_25524B5F0)
  {
    result = MEMORY[0x22077702C](&unk_21C24AEC4, &type metadata for PreviewPreflightEntryPoint);
    atomic_store(result, (unint64_t *)&qword_25524B5F0);
  }
  return result;
}

uint64_t sub_21C219E9C()
{
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_21C219EC8@<X0>(uint64_t a1@<X8>)
{
  return sub_21C219EF0(MEMORY[0x24BDC6F98], (uint64_t (*)(_QWORD))MEMORY[0x24BDC6FA0], a1);
}

uint64_t sub_21C219EDC@<X0>(uint64_t a1@<X8>)
{
  return sub_21C219EF0(MEMORY[0x24BE77290], (uint64_t (*)(_QWORD))MEMORY[0x24BE77298], a1);
}

uint64_t sub_21C219EF0@<X0>(unsigned int *a1@<X2>, uint64_t (*a2)(_QWORD)@<X3>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *a1;
  v5 = a2(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 104))(a3, v4, v5);
}

unint64_t sub_21C219F2C@<X0>(uint64_t a1@<X8>)
{
  unint64_t result;

  *(_QWORD *)(a1 + 24) = &type metadata for SwiftUIAppHostProvider;
  result = sub_21C1E6CE0();
  *(_QWORD *)(a1 + 32) = result;
  return result;
}

uint64_t sub_21C219F64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = sub_21C248654();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    sub_21C248648();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(_QWORD *)(a3 + 16))
      goto LABEL_5;
    goto LABEL_3;
  }
  sub_21C1F03B0(a1, &qword_255249D88);
  if (*(_QWORD *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_21C2485E8();
    swift_unknownObjectRelease();
  }
LABEL_5:
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a2;
  *(_QWORD *)(v8 + 24) = a3;
  return swift_task_create();
}

id sub_21C21A0B8()
{
  id result;

  result = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for UVBSEndpointMonitor()), sel_init);
  qword_25524B610 = (uint64_t)result;
  return result;
}

char *sub_21C21A0E4()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  void (*v8)(char *, _QWORD, uint64_t);
  void (*v9)(char *, uint64_t);
  void *v10;
  void *v11;
  id v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  id v17;
  char *v18;
  void *v19;
  char *v20;
  void *v21;
  id v22;
  objc_class *ObjectType;
  objc_super v25;
  uint64_t v26;

  ObjectType = (objc_class *)swift_getObjectType();
  v1 = sub_21C246E24();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&ObjectType - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = OBJC_IVAR____TtC17PreviewsInjection19UVBSEndpointMonitor_controlAgent;
  v26 = 0;
  v6 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25524BA98);
  *(_QWORD *)&v0[v5] = sub_21C247C7C();
  v7 = OBJC_IVAR____TtC17PreviewsInjection19UVBSEndpointMonitor_jitBootstrapAgent;
  v26 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25524BAA0);
  *(_QWORD *)&v6[v7] = sub_21C247C7C();
  v8 = *(void (**)(char *, _QWORD, uint64_t))(v2 + 104);
  v8(v4, *MEMORY[0x24BE77FD8], v1);
  sub_21C246E0C();
  v9 = *(void (**)(char *, uint64_t))(v2 + 8);
  v9(v4, v1);
  v10 = (void *)sub_21C24848C();
  swift_bridgeObjectRelease();
  v11 = (void *)objc_opt_self();
  v12 = objc_msgSend(v11, sel_monitorForService_, v10);

  *(_QWORD *)&v6[OBJC_IVAR____TtC17PreviewsInjection19UVBSEndpointMonitor_controlAgentMonitor] = v12;
  v13 = objc_msgSend((id)objc_opt_self(), sel_processInfo);
  sub_21C21A394();
  v15 = v14;

  swift_bridgeObjectRelease();
  if (v15)
  {
    v8(v4, *MEMORY[0x24BE78000], v1);
    sub_21C246E0C();
    v9(v4, v1);
    v16 = (void *)sub_21C24848C();
    swift_bridgeObjectRelease();
    v17 = objc_msgSend(v11, sel_monitorForService_, v16);

  }
  else
  {
    v17 = 0;
  }
  *(_QWORD *)&v6[OBJC_IVAR____TtC17PreviewsInjection19UVBSEndpointMonitor_jitBootstrapAgentMonitor] = v17;

  v25.receiver = v6;
  v25.super_class = ObjectType;
  v18 = (char *)objc_msgSendSuper2(&v25, sel_init);
  v19 = *(void **)&v18[OBJC_IVAR____TtC17PreviewsInjection19UVBSEndpointMonitor_controlAgentMonitor];
  v20 = v18;
  objc_msgSend(v19, sel_setDelegate_, v20);
  objc_msgSend(v19, sel_activate);
  v21 = *(void **)&v20[OBJC_IVAR____TtC17PreviewsInjection19UVBSEndpointMonitor_jitBootstrapAgentMonitor];
  if (v21)
  {
    objc_msgSend(*(id *)&v20[OBJC_IVAR____TtC17PreviewsInjection19UVBSEndpointMonitor_jitBootstrapAgentMonitor], sel_setDelegate_, v20);
    v22 = v21;
    objc_msgSend(v22, sel_activate);

  }
  return v20;
}

uint64_t sub_21C21A394()
{
  void *v0;
  id v1;
  uint64_t v2;
  unint64_t v3;
  char v4;
  uint64_t v5;

  v1 = objc_msgSend(v0, sel_environment);
  v2 = sub_21C248438();

  if (*(_QWORD *)(v2 + 16) && (v3 = sub_21C1F63E4(0xD000000000000029, 0x800000021C24EEA0), (v4 & 1) != 0))
  {
    v5 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + 16 * v3);
    swift_bridgeObjectRetain();
  }
  else
  {
    v5 = 0;
  }
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t UVBSEndpointMonitor.monitor(_:didReceive:)(void *a1, void *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  NSObject *v27;
  NSObject *v28;
  os_log_type_t v29;
  _BOOL4 v30;
  uint8_t *v31;
  uint64_t v32;
  NSObject *v33;
  NSObject *v34;
  NSObject *v35;
  _QWORD *v36;
  void *v37;
  char *v38;
  void *v39;
  uint64_t v40;
  id v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  NSObject *v50;
  NSObject *v51;
  os_log_type_t v52;
  uint8_t *v53;
  _QWORD *v54;
  NSObject *v55;
  char *v56;
  uint64_t v57;
  char *v58;
  NSObject *v59;
  os_log_type_t v60;
  uint8_t *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  _QWORD *v66;
  _QWORD *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  char *v73;
  char *v74;
  char *v75;
  char *v76;
  uint64_t v77;
  char *v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  char *v84;
  void *v85;
  _QWORD *v86;
  _QWORD v87[5];
  uint64_t v88;
  uint64_t v89;

  v3 = v2;
  v85 = a1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_255249D88);
  MEMORY[0x24BDAC7A8](v5);
  v72 = (char *)&v68 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v80 = sub_21C247880();
  v7 = *(_QWORD *)(v80 - 8);
  v8 = MEMORY[0x24BDAC7A8](v80);
  v75 = (char *)&v68 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v84 = (char *)&v68 - v10;
  v81 = sub_21C246E24();
  v11 = *(_QWORD *)(v81 - 8);
  v12 = MEMORY[0x24BDAC7A8](v81);
  v14 = (char *)&v68 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v78 = (char *)&v68 - v15;
  v16 = sub_21C247CC4();
  v83 = *(_QWORD *)(v16 - 8);
  v17 = MEMORY[0x24BDAC7A8](v16);
  v76 = (char *)&v68 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = MEMORY[0x24BDAC7A8](v17);
  v79 = (char *)&v68 - v20;
  v21 = MEMORY[0x24BDAC7A8](v19);
  v82 = (char *)&v68 - v22;
  v23 = MEMORY[0x24BDAC7A8](v21);
  v73 = (char *)&v68 - v24;
  MEMORY[0x24BDAC7A8](v23);
  v26 = (char *)&v68 - v25;
  sub_21C247CA0();
  v27 = a2;
  v28 = sub_21C247CB8();
  v29 = sub_21C248738();
  v30 = os_log_type_enabled(v28, v29);
  v74 = v14;
  if (v30)
  {
    v77 = v3;
    v31 = (uint8_t *)swift_slowAlloc();
    v32 = swift_slowAlloc();
    v71 = v16;
    v68 = (_QWORD *)v32;
    v70 = v11;
    *(_DWORD *)v31 = 138543362;
    v87[0] = v27;
    v33 = v27;
    v34 = v27;
    v69 = v7;
    v35 = v34;
    v3 = v77;
    v11 = v70;
    sub_21C2487A4();
    v36 = v68;
    *v68 = v33;

    v7 = v69;
    _os_log_impl(&dword_21C1E3000, v28, v29, "UVBSEndpointMonitor did receive endpoint %{public}@", v31, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25524B630);
    swift_arrayDestroy();
    v16 = v71;
    MEMORY[0x2207770EC](v36, -1, -1);
    MEMORY[0x2207770EC](v31, -1, -1);
  }
  else
  {

    v28 = v27;
  }

  v83 = *(_QWORD *)(v83 + 8);
  ((void (*)(char *, uint64_t))v83)(v26, v16);
  v38 = v84;
  v37 = v85;
  if (*(void **)(v3 + OBJC_IVAR____TtC17PreviewsInjection19UVBSEndpointMonitor_controlAgentMonitor) == v85)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_25524B638);
    v48 = v78;
    v49 = v81;
    (*(void (**)(char *, _QWORD, uint64_t))(v11 + 104))(v78, *MEMORY[0x24BE77FD8], v81);
    _s17PreviewsInjection10EntryPointPAAyt12StaticOutputRtzrlE6encode06staticF00A12FoundationOS12PropertyListVyt_tFZ_0();
    sub_21C246E60();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v38, v80);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v48, v49);
    v88 = *(_QWORD *)(v3 + OBJC_IVAR____TtC17PreviewsInjection19UVBSEndpointMonitor_controlAgent);
    swift_getKeyPath();
    type metadata accessor for ControlAgent();
    swift_allocObject();
    swift_retain();
    v57 = swift_retain();
    v86 = sub_21C21B140(v57);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25524B670);
    sub_21C1E78E4(&qword_25524B678, &qword_25524B670, MEMORY[0x24BE76C78]);
    sub_21C247A54();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    return swift_release();
  }
  else
  {
    v39 = *(void **)(v3 + OBJC_IVAR____TtC17PreviewsInjection19UVBSEndpointMonitor_jitBootstrapAgentMonitor);
    if (v39 && v39 == v85)
    {
      v40 = v11;
      v41 = objc_msgSend((id)objc_opt_self(), sel_processInfo);
      v42 = sub_21C21A394();
      v44 = v43;

      if (v44)
      {
        v77 = v3;
        v45 = v75;
        sub_21C247874();
        v88 = v42;
        v89 = v44;
        v87[3] = MEMORY[0x24BEE0D00];
        v87[4] = MEMORY[0x24BE76CB0];
        v87[0] = 0xD00000000000001DLL;
        v87[1] = 0x800000021C24EB60;
        sub_21C247844();
        swift_bridgeObjectRelease();
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v87);
        __swift_instantiateConcreteTypeFromMangledName(&qword_25524B638);
        v46 = v74;
        v47 = v81;
        (*(void (**)(char *, _QWORD, uint64_t))(v40 + 104))(v74, *MEMORY[0x24BE78000], v81);
        v62 = sub_21C246E60();
        (*(void (**)(char *, uint64_t))(v40 + 8))(v46, v47);
        v88 = *(_QWORD *)(v77 + OBJC_IVAR____TtC17PreviewsInjection19UVBSEndpointMonitor_jitBootstrapAgent);
        swift_getKeyPath();
        type metadata accessor for JITBootstrapAgent();
        v63 = swift_allocObject();
        swift_retain();
        swift_retain();
        swift_defaultActor_initialize();
        *(_QWORD *)(v63 + 112) = v62;
        v64 = sub_21C248654();
        v65 = (uint64_t)v72;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v64 - 8) + 56))(v72, 1, 1, v64);
        v66 = (_QWORD *)swift_allocObject();
        v66[2] = 0;
        v66[3] = 0;
        v66[4] = v63;
        swift_retain();
        sub_21C219F64(v65, (uint64_t)&unk_25524B650, (uint64_t)v66);
        swift_release();
        v86 = (_QWORD *)v63;
        __swift_instantiateConcreteTypeFromMangledName(&qword_25524B658);
        sub_21C1E78E4(&qword_25524B660, &qword_25524B658, MEMORY[0x24BE76C78]);
        sub_21C247A54();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v45, v80);
      }
      v58 = v73;
      sub_21C247CA0();
      v59 = sub_21C247CB8();
      v60 = sub_21C248720();
      if (os_log_type_enabled(v59, v60))
      {
        v61 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v61 = 0;
        _os_log_impl(&dword_21C1E3000, v59, v60, "No JIT_BOOTSTRAP_AGENT_CONNECTION_IDENTIFIER specified.", v61, 2u);
        MEMORY[0x2207770EC](v61, -1, -1);
      }

      v56 = v58;
    }
    else
    {
      sub_21C247CA0();
      v50 = v37;
      v51 = sub_21C247CB8();
      v52 = sub_21C248720();
      if (os_log_type_enabled(v51, v52))
      {
        v53 = (uint8_t *)swift_slowAlloc();
        v54 = (_QWORD *)swift_slowAlloc();
        *(_DWORD *)v53 = 138412290;
        v87[0] = v50;
        v55 = v50;
        sub_21C2487A4();
        *v54 = v50;

        _os_log_impl(&dword_21C1E3000, v51, v52, "Unrecognized endpoint connection monitor: %@", v53, 0xCu);
        __swift_instantiateConcreteTypeFromMangledName(&qword_25524B630);
        swift_arrayDestroy();
        MEMORY[0x2207770EC](v54, -1, -1);
        MEMORY[0x2207770EC](v53, -1, -1);
      }
      else
      {

        v51 = v50;
      }

      v56 = v82;
    }
    return ((uint64_t (*)(char *, uint64_t))v83)(v56, v16);
  }
}

id UVBSEndpointMonitor.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

_QWORD *sub_21C21B140(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v22;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255249D88);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_defaultActor_initialize();
  v7 = MEMORY[0x24BEE4AF8];
  v1[43] = MEMORY[0x24BEE4AF8];
  v1[14] = a1;
  v8 = type metadata accessor for RegistryLocator();
  v9 = (_QWORD *)swift_allocObject();
  swift_retain();
  swift_defaultActor_initialize();
  v9[14] = 0;
  v9[15] = sub_21C1EBD40(v7);
  v9[16] = 0;
  type metadata accessor for DynamicProductLoader();
  v10 = swift_allocObject();
  *(_BYTE *)(v10 + 16) = 0;
  v11 = MEMORY[0x24BEE4B08];
  *(_QWORD *)(v10 + 24) = MEMORY[0x24BEE4B08];
  *(_QWORD *)(v10 + 32) = sub_21C1EC0C4(v7);
  type metadata accessor for EntryPointIndex();
  v12 = (_QWORD *)swift_allocObject();
  swift_defaultActor_initialize();
  sub_21C1F605C(v12 + 18);
  sub_21C227B30(v12 + 20);
  v12[21] = v11;
  v12[14] = sub_21C1EC20C(v7);
  v12[15] = sub_21C1EC3CC(v7);
  v12[16] = sub_21C1EC584(v7);
  v12[17] = sub_21C1EC724(v7);
  swift_beginAccess();
  v12[21] = v11;
  swift_bridgeObjectRelease();
  type metadata accessor for ModifierContextCache();
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = sub_21C1EFAC8(v7);
  *(_QWORD *)(v13 + 24) = v7;
  v2[36] = v8;
  v2[37] = &off_24E01FD50;
  v2[33] = v9;
  v2[41] = &type metadata for PreviewLocator;
  v2[42] = &off_24E01D2C8;
  v14 = (_QWORD *)swift_allocObject();
  v2[38] = v14;
  v14[5] = v8;
  v14[6] = &off_24E01FD50;
  v14[2] = v9;
  v2[30] = v10;
  v2[31] = v12;
  v2[32] = v13;
  sub_21C1FF9B4((uint64_t)(v2 + 30), (uint64_t)(v2 + 15));
  type metadata accessor for HostMessagePipeAgent();
  v15 = swift_allocObject();
  type metadata accessor for AgentCache();
  v16 = swift_allocObject();
  v22 = MEMORY[0x24BEE4B00];
  swift_retain_n();
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25524BAA8);
  *(_QWORD *)(v16 + 16) = sub_21C247C7C();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25524BAB0);
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = v16;
  *(_QWORD *)(v17 + 24) = v12;
  *(_QWORD *)(v15 + 16) = sub_21C246F8C();
  v2[28] = v15;
  type metadata accessor for ShellMessagePipeAgent();
  v18 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25524BAC0);
  swift_retain();
  *(_QWORD *)(v18 + 16) = sub_21C246F8C();
  v2[29] = v18;
  v19 = sub_21C248654();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v6, 1, 1, v19);
  v20 = (_QWORD *)swift_allocObject();
  v20[2] = 0;
  v20[3] = 0;
  v20[4] = v2;
  swift_retain();
  sub_21C219F64((uint64_t)v6, (uint64_t)&unk_25524BAD8, (uint64_t)v20);
  swift_release();
  swift_release();
  swift_release();
  return v2;
}

uint64_t sub_21C21B4C0()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_21C1EBB98;
  return sub_21C21B508();
}

uint64_t sub_21C21B508()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1[2] = v0;
  v2 = sub_21C2471CC();
  v1[3] = v2;
  v1[4] = *(_QWORD *)(v2 - 8);
  v1[5] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25524B930);
  v1[6] = swift_task_alloc();
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_25524B9D8);
  v1[7] = v3;
  v1[8] = *(_QWORD *)(v3 - 8);
  v1[9] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25524B9E0);
  v1[10] = swift_task_alloc();
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25524B9E8);
  v1[11] = v4;
  v1[12] = *(_QWORD *)(v4 - 8);
  v1[13] = swift_task_alloc();
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_25524B9F0);
  v1[14] = v5;
  v1[15] = *(_QWORD *)(v5 - 8);
  v1[16] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_21C21B634()
{
  uint64_t v0;
  _QWORD *v1;

  sub_21C246E84();
  sub_21C1FBD14(&qword_25524B9F8, (uint64_t (*)(uint64_t))MEMORY[0x24BE78208], MEMORY[0x24BE78200]);
  sub_21C246E54();
  sub_21C248678();
  *(_QWORD *)(v0 + 136) = sub_21C1FBD14(&qword_25524BA00, (uint64_t (*)(uint64_t))type metadata accessor for ControlAgent, (uint64_t)&unk_21C24B01C);
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 144) = v1;
  *v1 = v0;
  v1[1] = sub_21C21B724;
  return sub_21C248684();
}

uint64_t sub_21C21B724()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_21C21B77C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v1 = *(_QWORD *)(v0 + 80);
  if ((*(unsigned int (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 64) + 48))(v1, 1, *(_QWORD *)(v0 + 56)) == 1)
  {
    v3 = *(_QWORD *)(v0 + 120);
    v2 = *(_QWORD *)(v0 + 128);
    v4 = *(_QWORD *)(v0 + 112);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 96) + 8))(*(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 88));
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v6 = *(_QWORD *)(v0 + 72);
    v7 = *(_QWORD *)(v0 + 16);
    sub_21C1FFC70(v1, v6, &qword_25524B9D8);
    v8 = swift_task_alloc();
    *(_QWORD *)(v0 + 152) = v8;
    *(_QWORD *)(v8 + 16) = v6;
    *(_QWORD *)(v8 + 24) = v7;
    v9 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 160) = v9;
    *(_QWORD *)(v0 + 168) = sub_21C247880();
    *v9 = v0;
    v9[1] = sub_21C21B8D0;
    return sub_21C2489CC();
  }
}

uint64_t sub_21C21B8D0()
{
  swift_task_dealloc();
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_21C21B930()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v1 = v0[9];
  v2 = v0[6];
  v4 = v0[4];
  v3 = v0[5];
  v5 = v0[3];
  sub_21C246EA8();
  sub_21C2471A8();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  sub_21C1F03B0(v2, &qword_25524B930);
  sub_21C1F03B0(v1, &qword_25524B9D8);
  v6 = (_QWORD *)swift_task_alloc();
  v0[18] = v6;
  *v6 = v0;
  v6[1] = sub_21C21B724;
  return sub_21C248684();
}

uint64_t sub_21C21BA40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;

  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  v4 = sub_21C247460();
  v3[5] = v4;
  v3[6] = *(_QWORD *)(v4 - 8);
  v3[7] = swift_task_alloc();
  v3[8] = swift_task_alloc();
  v3[9] = __swift_instantiateConcreteTypeFromMangledName(&qword_25524B9D8);
  v3[10] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_21C21BAE0()
{
  uint64_t v0;
  int EnumCaseMultiPayload;
  uint64_t v2;
  uint64_t v3;
  int v4;
  void (*v5)(uint64_t, uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int *v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  _QWORD *v34;
  _QWORD *v35;

  sub_21C1F03EC(*(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 80), &qword_25524B9D8);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 3)
  {
    v16 = *(uint64_t **)(v0 + 80);
    v17 = *v16;
    *(_QWORD *)(v0 + 136) = *v16;
    v18 = v16[1];
    *(_QWORD *)(v0 + 144) = v18;
    v19 = v16[2];
    *(_QWORD *)(v0 + 152) = v19;
    *(_DWORD *)(v0 + 260) = *(_DWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25524BA18) + 64);
    if (v19)
    {
      if (v19 == 1)
      {
        v30 = *(_QWORD *)(v0 + 32);
        v31 = swift_task_alloc();
        *(_QWORD *)(v0 + 232) = v31;
        *(_QWORD *)(v31 + 16) = v30;
        *(_QWORD *)(v31 + 24) = v17;
        v32 = (_QWORD *)swift_task_alloc();
        *(_QWORD *)(v0 + 240) = v32;
        *v32 = v0;
        v32[1] = sub_21C21C480;
        v11 = *(_QWORD *)(v0 + 32);
        v12 = *(_QWORD *)(v0 + 16);
        v14 = 0x800000021C24EE00;
        v15 = (int *)&unk_25524BA28;
      }
      else
      {
        if (v19 == 2)
        {
          v20 = *(_QWORD *)(v0 + 32);
          v21 = swift_task_alloc();
          *(_QWORD *)(v0 + 208) = v21;
          *(_QWORD *)(v21 + 16) = v20;
          *(_QWORD *)(v21 + 24) = v17;
          v22 = (_QWORD *)swift_task_alloc();
          *(_QWORD *)(v0 + 216) = v22;
          *v22 = v0;
          v22[1] = sub_21C21C380;
          v11 = *(_QWORD *)(v0 + 32);
          v12 = *(_QWORD *)(v0 + 16);
          v13 = 0xD000000000000015;
          v14 = 0x800000021C24EE20;
          v15 = (int *)&unk_25524BA40;
          return sub_21C21C8B0(v12, v13, v14, v11, v15);
        }
        v33 = *(_QWORD *)(v0 + 32);
        v34 = (_QWORD *)swift_task_alloc();
        *(_QWORD *)(v0 + 160) = v34;
        v34[2] = v33;
        v34[3] = v17;
        v34[4] = v18;
        v34[5] = v19;
        v35 = (_QWORD *)swift_task_alloc();
        *(_QWORD *)(v0 + 168) = v35;
        *v35 = v0;
        v35[1] = sub_21C21C0F8;
        v11 = *(_QWORD *)(v0 + 32);
        v12 = *(_QWORD *)(v0 + 16);
        v14 = 0x800000021C24EE40;
        v15 = (int *)&unk_25524BA50;
      }
    }
    else
    {
      v27 = *(_QWORD *)(v0 + 32);
      v28 = swift_task_alloc();
      *(_QWORD *)(v0 + 184) = v28;
      *(_QWORD *)(v28 + 16) = v27;
      *(_QWORD *)(v28 + 24) = v17;
      v29 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 192) = v29;
      *v29 = v0;
      v29[1] = sub_21C21C178;
      v11 = *(_QWORD *)(v0 + 32);
      v12 = *(_QWORD *)(v0 + 16);
      v14 = 0x800000021C24EE60;
      v15 = (int *)&unk_25524BA60;
    }
    v13 = 0xD000000000000014;
  }
  else
  {
    if (EnumCaseMultiPayload != 1)
      return sub_21C248918();
    v2 = *(_QWORD *)(v0 + 80);
    v3 = *(_QWORD *)(v0 + 48);
    *(_DWORD *)(v0 + 256) = *(_DWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25524BA68) + 48);
    sub_21C246E78();
    v4 = swift_getEnumCaseMultiPayload();
    v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 32);
    v7 = *(_QWORD *)(v0 + 32);
    v6 = *(_QWORD *)(v0 + 40);
    if (v4 != 1)
    {
      v24 = *(_QWORD *)(v0 + 64);
      v5(v24, v2, v6);
      v25 = swift_task_alloc();
      *(_QWORD *)(v0 + 88) = v25;
      *(_QWORD *)(v25 + 16) = v7;
      *(_QWORD *)(v25 + 24) = v24;
      v26 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 96) = v26;
      *v26 = v0;
      v26[1] = sub_21C21BE78;
      return sub_21C21CE94(*(_QWORD *)(v0 + 16), 0x79706F63206C7275, 0xE800000000000000, (int *)&unk_25524BA88);
    }
    v8 = *(_QWORD *)(v0 + 56);
    v5(v8, v2, v6);
    v9 = swift_task_alloc();
    *(_QWORD *)(v0 + 112) = v9;
    *(_QWORD *)(v9 + 16) = v7;
    *(_QWORD *)(v9 + 24) = v8;
    v10 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 120) = v10;
    *v10 = v0;
    v10[1] = sub_21C21BF6C;
    v11 = *(_QWORD *)(v0 + 32);
    v12 = *(_QWORD *)(v0 + 16);
    v13 = 0xD000000000000010;
    v14 = 0x800000021C24EE80;
    v15 = (int *)&unk_25524BA78;
  }
  return sub_21C21C8B0(v12, v13, v14, v11, v15);
}

uint64_t sub_21C21BE78()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 104) = v0;
  swift_task_dealloc();
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_21C21BEEC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 80) + *(int *)(v0 + 256);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 48) + 8))(*(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 40));
  v2 = sub_21C2471CC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21C21BF6C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 128) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_21C21BFE0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 80) + *(int *)(v0 + 256);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 48) + 8))(*(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 40));
  v2 = sub_21C2471CC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21C21C060()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *(_QWORD *)(v0 + 48);
  v1 = *(_QWORD *)(v0 + 56);
  v3 = *(_QWORD *)(v0 + 40);
  v4 = *(_QWORD *)(v0 + 80) + *(int *)(v0 + 256);
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  v5 = sub_21C2471CC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21C21C0F8()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(*v1 + 176) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    sub_21C22050C(*(_QWORD *)(v2 + 144), *(_QWORD *)(v2 + 152));
    swift_task_dealloc();
  }
  return swift_task_switch();
}

uint64_t sub_21C21C178()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 200) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_21C21C1EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(int *)(v0 + 260);
  v2 = *(_QWORD *)(v0 + 80);

  swift_task_dealloc();
  v3 = sub_21C2471CC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2 + v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21C21C278()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(int *)(v0 + 260);
  v2 = *(_QWORD *)(v0 + 80);

  v3 = sub_21C2471CC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2 + v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21C21C2F0()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(void **)(v0 + 136);
  v2 = *(_QWORD *)(v0 + 80) + *(int *)(v0 + 260);
  sub_21C22050C(*(_QWORD *)(v0 + 144), *(_QWORD *)(v0 + 152));

  swift_task_dealloc();
  v3 = sub_21C2471CC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21C21C380()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 224) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_21C21C3F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(int *)(v0 + 260);
  v2 = *(_QWORD *)(v0 + 80);

  swift_task_dealloc();
  v3 = sub_21C2471CC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2 + v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21C21C480()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 248) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_21C21C4F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(int *)(v0 + 260);
  v2 = *(_QWORD *)(v0 + 80);

  swift_task_dealloc();
  v3 = sub_21C2471CC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2 + v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21C21C580()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 80) + *(int *)(v0 + 256);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 48) + 8))(*(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 40));
  v2 = sub_21C2471CC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21C21C608(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  return swift_task_switch();
}

uint64_t sub_21C21C620()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t);
  uint64_t *boxed_opaque_existential_1;

  v1 = *(uint64_t **)(v0 + 16);
  v2 = sub_21C2471FC();
  v3 = (uint64_t (*)(uint64_t))MEMORY[0x24BE775D8];
  v1[3] = v2;
  v1[4] = sub_21C1FBD14(&qword_25524BA90, v3, MEMORY[0x24BE775C8]);
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v1);
  sub_21C21DDB8((uint64_t)boxed_opaque_existential_1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21C21C6B8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return swift_task_switch();
}

uint64_t sub_21C21C6D4()
{
  uint64_t v0;

  sub_21C21E590(*(_QWORD *)(v0 + 24));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21C21C720(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v4;

  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_21C1E664C;
  return sub_21C21CFAC(a2);
}

uint64_t sub_21C21C774(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v8;

  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v8;
  *v8 = v4;
  v8[1] = sub_21C1EBB98;
  return sub_21C21D224(a2, a3, a4);
}

uint64_t sub_21C21C7E0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return swift_task_switch();
}

uint64_t sub_21C21C7FC()
{
  uint64_t v0;

  sub_21C21DB50();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21C21C848(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return swift_task_switch();
}

uint64_t sub_21C21C864()
{
  uint64_t v0;

  sub_21C21D8BC();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21C21C8B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int *a5)
{
  _QWORD *v5;
  uint64_t v7;
  _QWORD *v8;
  uint64_t (*v10)(void);

  v5[12] = a3;
  v5[13] = a4;
  v5[10] = a1;
  v5[11] = a2;
  v7 = sub_21C247CC4();
  v5[14] = v7;
  v5[15] = *(_QWORD *)(v7 - 8);
  v5[16] = swift_task_alloc();
  v5[17] = swift_task_alloc();
  v10 = (uint64_t (*)(void))((char *)a5 + *a5);
  v8 = (_QWORD *)swift_task_alloc();
  v5[18] = v8;
  *v8 = v5;
  v8[1] = sub_21C21C950;
  return v10();
}

uint64_t sub_21C21C950()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 152) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_21C21C9B8()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = sub_21C247880();
  v2 = MEMORY[0x24BE76518];
  v0[5] = v1;
  v0[6] = v2;
  __swift_allocate_boxed_opaque_existential_1(v0 + 2);
  _s17PreviewsInjection10EntryPointPAAyt12StaticOutputRtzrlE6encode06staticF00A12FoundationOS12PropertyListVyt_tFZ_0();
  return swift_task_switch();
}

uint64_t sub_21C21CA18()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint8_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  sub_21C247CA0();
  swift_bridgeObjectRetain_n();
  v1 = sub_21C247CB8();
  v2 = sub_21C248708();
  if (os_log_type_enabled(v1, v2))
  {
    v3 = *(_QWORD *)(v0 + 120);
    v12 = *(_QWORD *)(v0 + 112);
    v13 = *(_QWORD *)(v0 + 136);
    v5 = *(_QWORD *)(v0 + 88);
    v4 = *(_QWORD *)(v0 + 96);
    v6 = (uint8_t *)swift_slowAlloc();
    v7 = swift_slowAlloc();
    v14 = v7;
    *(_DWORD *)v6 = 136446210;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 72) = sub_21C203A90(v5, v4, &v14);
    sub_21C2487A4();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_21C1E3000, v1, v2, "ControlAgent: %{public}s succeeded", v6, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2207770EC](v7, -1, -1);
    MEMORY[0x2207770EC](v6, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v13, v12);
  }
  else
  {
    v8 = *(_QWORD *)(v0 + 136);
    v9 = *(_QWORD *)(v0 + 112);
    v10 = *(_QWORD *)(v0 + 120);
    swift_bridgeObjectRelease_n();

    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
  }
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 40));
  sub_21C247A0C();
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21C21CC0C()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  void *v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  id v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v1 = *(void **)(v0 + 152);
  sub_21C247CA0();
  swift_bridgeObjectRetain();
  v2 = v1;
  swift_bridgeObjectRetain();
  v3 = v1;
  v4 = sub_21C247CB8();
  v5 = sub_21C248720();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = *(void **)(v0 + 152);
    v19 = *(_QWORD *)(v0 + 120);
    v20 = *(_QWORD *)(v0 + 112);
    v21 = *(_QWORD *)(v0 + 128);
    v7 = *(_QWORD *)(v0 + 88);
    v8 = *(_QWORD *)(v0 + 96);
    v9 = swift_slowAlloc();
    v10 = (_QWORD *)swift_slowAlloc();
    v18 = swift_slowAlloc();
    v22 = v18;
    *(_DWORD *)v9 = 136446466;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 56) = sub_21C203A90(v7, v8, &v22);
    sub_21C2487A4();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v9 + 12) = 2114;
    v11 = v6;
    v12 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 64) = v12;
    sub_21C2487A4();
    *v10 = v12;

    _os_log_impl(&dword_21C1E3000, v4, v5, "ControlAgent: %{public}s failed: %{public}@", (uint8_t *)v9, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25524B630);
    swift_arrayDestroy();
    MEMORY[0x2207770EC](v10, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x2207770EC](v18, -1, -1);
    MEMORY[0x2207770EC](v9, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v21, v20);
  }
  else
  {
    v13 = *(void **)(v0 + 152);
    v15 = *(_QWORD *)(v0 + 120);
    v14 = *(_QWORD *)(v0 + 128);
    v16 = *(_QWORD *)(v0 + 112);
    swift_bridgeObjectRelease_n();

    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v14, v16);
  }
  swift_willThrow();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21C21CE94(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t v7;
  _QWORD *v8;
  uint64_t (*v10)(_QWORD *);

  v5[12] = a3;
  v5[13] = v4;
  v5[10] = a1;
  v5[11] = a2;
  v7 = sub_21C247CC4();
  v5[14] = v7;
  v5[15] = *(_QWORD *)(v7 - 8);
  v5[16] = swift_task_alloc();
  v5[17] = swift_task_alloc();
  v10 = (uint64_t (*)(_QWORD *))((char *)a4 + *a4);
  v8 = (_QWORD *)swift_task_alloc();
  v5[18] = v8;
  *v8 = v5;
  v8[1] = sub_21C21CF48;
  return v10(v5 + 2);
}

uint64_t sub_21C21CF48()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 152) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_21C21CFAC(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v2[15] = a1;
  v2[16] = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255249D88);
  v2[17] = swift_task_alloc();
  v3 = sub_21C247880();
  v2[18] = v3;
  v2[19] = *(_QWORD *)(v3 - 8);
  v2[20] = swift_task_alloc();
  v4 = sub_21C246E24();
  v2[21] = v4;
  v2[22] = *(_QWORD *)(v4 - 8);
  v2[23] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_21C21D058()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;

  v2 = *(_QWORD *)(v0 + 176);
  v1 = *(_QWORD *)(v0 + 184);
  v4 = *(_QWORD *)(v0 + 160);
  v3 = *(_QWORD *)(v0 + 168);
  v5 = *(_QWORD *)(v0 + 144);
  v6 = *(_QWORD *)(v0 + 152);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25524B638);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v2 + 104))(v1, *MEMORY[0x24BE78008], v3);
  _s17PreviewsInjection10EntryPointPAAyt12StaticOutputRtzrlE6encode06staticF00A12FoundationOS12PropertyListVyt_tFZ_0();
  v7 = sub_21C246E60();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  v8 = *(_QWORD *)(v0 + 136);
  v9 = *(_QWORD *)(v0 + 128) + 120;
  v10 = sub_21C248654();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v8, 1, 1, v10);
  sub_21C220250(v9, v0 + 16);
  v11 = swift_allocObject();
  v12 = *(_OWORD *)(v0 + 48);
  *(_OWORD *)(v11 + 88) = *(_OWORD *)(v0 + 64);
  v13 = *(_OWORD *)(v0 + 96);
  *(_OWORD *)(v11 + 104) = *(_OWORD *)(v0 + 80);
  *(_OWORD *)(v11 + 120) = v13;
  v14 = *(_OWORD *)(v0 + 32);
  *(_OWORD *)(v11 + 40) = *(_OWORD *)(v0 + 16);
  *(_OWORD *)(v11 + 56) = v14;
  *(_QWORD *)(v11 + 16) = 0;
  *(_QWORD *)(v11 + 24) = 0;
  *(_QWORD *)(v11 + 32) = v7;
  *(_QWORD *)(v11 + 136) = *(_QWORD *)(v0 + 112);
  *(_OWORD *)(v11 + 72) = v12;
  swift_retain();
  sub_21C219F64(v8, (uint64_t)&unk_25524B9D0, v11);
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21C21D224(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4[5] = a3;
  v4[6] = v3;
  v4[3] = a1;
  v4[4] = a2;
  v5 = sub_21C247880();
  v4[7] = v5;
  v4[8] = *(_QWORD *)(v5 - 8);
  v4[9] = swift_task_alloc();
  v6 = sub_21C246E24();
  v4[10] = v6;
  v4[11] = *(_QWORD *)(v6 - 8);
  v4[12] = swift_task_alloc();
  v7 = sub_21C2477D8();
  v4[13] = v7;
  v4[14] = *(_QWORD *)(v7 - 8);
  v4[15] = swift_task_alloc();
  v8 = sub_21C247CC4();
  v4[16] = v8;
  v4[17] = *(_QWORD *)(v8 - 8);
  v4[18] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_21C21D300()
{
  _QWORD *v0;
  NSObject *v1;
  os_log_type_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint8_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  sub_21C247CA0();
  swift_bridgeObjectRetain_n();
  v1 = sub_21C247CB8();
  v2 = sub_21C248708();
  if (os_log_type_enabled(v1, v2))
  {
    v3 = v0[17];
    v18 = v0[16];
    v19 = v0[18];
    v5 = v0[4];
    v4 = v0[5];
    v6 = (uint8_t *)swift_slowAlloc();
    v7 = swift_slowAlloc();
    v20 = v7;
    *(_DWORD *)v6 = 136446210;
    swift_bridgeObjectRetain();
    v0[2] = sub_21C203A90(v5, v4, &v20);
    sub_21C2487A4();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_21C1E3000, v1, v2, "ControlAgent creating preview scene agent for %{public}s", v6, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2207770EC](v7, -1, -1);
    MEMORY[0x2207770EC](v6, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v19, v18);
  }
  else
  {
    v9 = v0[17];
    v8 = v0[18];
    v10 = v0[16];

    swift_bridgeObjectRelease_n();
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v10);
  }
  v11 = v0[12];
  v12 = v0[10];
  v13 = v0[11];
  swift_bridgeObjectRetain();
  sub_21C2477CC();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25524B638);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v13 + 104))(v11, *MEMORY[0x24BE78010], v12);
  sub_21C1FBD14(&qword_25524B9C8, (uint64_t (*)(uint64_t))MEMORY[0x24BE78588], MEMORY[0x24BE78570]);
  sub_21C247A0C();
  v0[19] = sub_21C246E60();
  v15 = v0[11];
  v14 = v0[12];
  v16 = v0[10];
  (*(void (**)(_QWORD, _QWORD))(v0[8] + 8))(v0[9], v0[7]);
  (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v14, v16);
  v0[20] = sub_21C2477A8();
  v0[21] = sub_21C24863C();
  v0[22] = sub_21C248630();
  sub_21C2485E8();
  return swift_task_switch();
}

uint64_t sub_21C21D650()
{
  uint64_t v0;

  swift_release();
  *(_QWORD *)(v0 + 184) = sub_21C24779C();
  return swift_task_switch();
}

uint64_t sub_21C21D69C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = v0[19];
  v2 = v0[6];
  v3 = swift_allocObject();
  v0[24] = v3;
  *(_QWORD *)(v3 + 16) = v1;
  *(_QWORD *)(v3 + 24) = v2;
  swift_retain();
  swift_retain();
  v0[25] = sub_21C248630();
  sub_21C2485E8();
  return swift_task_switch();
}

uint64_t sub_21C21D738()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 184);
  swift_release();
  sub_21C247790();
  swift_release();

  return swift_task_switch();
}

uint64_t sub_21C21D7B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(v0 + 112);
  v1 = *(_QWORD *)(v0 + 120);
  v3 = *(_QWORD *)(v0 + 104);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21C21D834(void *a1, uint64_t a2, uint64_t a3)
{
  id v5;
  _BYTE v7[104];

  sub_21C1FF9B4(a3 + 240, (uint64_t)v7);
  type metadata accessor for PreviewSceneAgent();
  swift_allocObject();
  v5 = a1;
  swift_retain();
  sub_21C1FF500(v5, a2, (uint64_t)v7);
  swift_release();

  return swift_release();
}

uint64_t sub_21C21D8BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  char *v22;
  __int128 v23[2];
  _QWORD v24[7];

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_255249D88);
  MEMORY[0x24BDAC7A8](v0);
  v22 = (char *)&v21 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = sub_21C247880();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_21C246E24();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_25524B638);
  v11 = *MEMORY[0x24BE78058];
  v12 = sub_21C246E18();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 104))(v9, v11, v12);
  (*(void (**)(char *, _QWORD, uint64_t))(v7 + 104))(v9, *MEMORY[0x24BE77FF0], v6);
  _s17PreviewsInjection10EntryPointPAAyt12StaticOutputRtzrlE6encode06staticF00A12FoundationOS12PropertyListVyt_tFZ_0();
  v13 = v24[6];
  v14 = sub_21C246E60();
  if (v13)
  {
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  else
  {
    v16 = v14;
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    v17 = *(_QWORD *)(v21 + 224);
    v24[3] = v10;
    v24[4] = sub_21C1E78E4(&qword_25524B9B0, &qword_25524B638, MEMORY[0x24BE78120]);
    v24[0] = v16;
    v18 = sub_21C248654();
    v19 = (uint64_t)v22;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v22, 1, 1, v18);
    sub_21C1E712C((uint64_t)v24, (uint64_t)v23);
    v20 = (_QWORD *)swift_allocObject();
    v20[2] = 0;
    v20[3] = 0;
    v20[4] = v17;
    sub_21C1EB66C(v23, (uint64_t)(v20 + 5));
    swift_retain_n();
    swift_retain();
    sub_21C219F64(v19, (uint64_t)&unk_25524B9C0, (uint64_t)v20);
    swift_release();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v24);
    return swift_release_n();
  }
}

uint64_t sub_21C21DB50()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD v19[2];
  __int128 v20[2];
  _QWORD v21[5];
  char *v22;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_255249D88);
  MEMORY[0x24BDAC7A8](v1);
  v22 = (char *)v19 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_21C247880();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_21C246E24();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_25524B638);
  (*(void (**)(char *, _QWORD, uint64_t))(v8 + 104))(v10, *MEMORY[0x24BE77FF8], v7);
  _s17PreviewsInjection10EntryPointPAAyt12StaticOutputRtzrlE6encode06staticF00A12FoundationOS12PropertyListVyt_tFZ_0();
  v12 = sub_21C246E60();
  if (v0)
  {
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
  else
  {
    v14 = v12;
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    v15 = *(_QWORD *)(v19[1] + 232);
    v21[3] = v11;
    v21[4] = sub_21C1E78E4(&qword_25524B9B0, &qword_25524B638, MEMORY[0x24BE78120]);
    v21[0] = v14;
    v16 = sub_21C248654();
    v17 = (uint64_t)v22;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v22, 1, 1, v16);
    sub_21C1E712C((uint64_t)v21, (uint64_t)v20);
    v18 = (_QWORD *)swift_allocObject();
    v18[2] = 0;
    v18[3] = 0;
    v18[4] = v15;
    sub_21C1EB66C(v20, (uint64_t)(v18 + 5));
    swift_retain_n();
    swift_retain();
    sub_21C219F64(v17, (uint64_t)&unk_25524B9B8, (uint64_t)v18);
    swift_release();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
    return swift_release_n();
  }
}

uint64_t sub_21C21DDB8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE *v21;
  uint64_t v22;
  _BYTE *v23;
  id v24;
  id v25;
  void *v26;
  _BYTE *v27;
  uint64_t v28;
  void (*v29)(_BYTE *, _BYTE *, uint64_t);
  _BYTE *v30;
  NSObject *v31;
  os_log_type_t v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  void (*v38)(_BYTE *, uint64_t);
  _BYTE *v39;
  _BYTE *v40;
  _BYTE *v41;
  uint64_t v42;
  unint64_t v43;
  _BYTE *v44;
  void *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  id v50;
  void *v51;
  void *v52;
  unsigned __int8 v53;
  id v54;
  id v55;
  void *v56;
  uint64_t v57;
  id v58;
  uint64_t v59;
  _QWORD *v60;
  uint64_t v61;
  uint64_t v62;
  _BYTE *v63;
  uint64_t v64;
  _BYTE *v65;
  _BYTE v66[12];
  int v67;
  os_log_t v68;
  void *v69;
  void (*v70)(_BYTE *, _BYTE *, uint64_t);
  id v71;
  _BYTE *v72;
  uint64_t v73;
  uint64_t v74;
  _BYTE *v75;
  _BYTE *v76;
  uint64_t v77;
  uint64_t v78;
  _BYTE *v79;
  _BYTE *v80;
  uint64_t v81;
  _BYTE *v82;
  uint64_t v83;
  id v84[3];
  uint64_t v85;
  uint64_t v86;

  v73 = a1;
  v86 = *MEMORY[0x24BDAC8D0];
  v74 = type metadata accessor for ControlAgent.FailedToCopyURLError(0);
  MEMORY[0x24BDAC7A8](v74);
  v75 = &v66[-((v1 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v2 = sub_21C247CC4();
  v77 = *(_QWORD *)(v2 - 8);
  v78 = v2;
  MEMORY[0x24BDAC7A8](v2);
  v82 = &v66[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v4 = sub_21C246D40();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = &v66[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = sub_21C246D28();
  v81 = *(_QWORD *)(v8 - 8);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v11 = &v66[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v12 = MEMORY[0x24BDAC7A8](v9);
  v80 = &v66[-v13];
  v14 = MEMORY[0x24BDAC7A8](v12);
  v76 = &v66[-v15];
  v16 = MEMORY[0x24BDAC7A8](v14);
  v18 = &v66[-v17];
  v19 = MEMORY[0x24BDAC7A8](v16);
  v21 = &v66[-v20];
  MEMORY[0x24BDAC7A8](v19);
  v23 = &v66[-v22];
  sub_21C247454();
  if ((sub_21C246D10() & 1) != 0)
  {
    v71 = (id)objc_opt_self();
    v24 = objc_msgSend(v71, sel_defaultManager);
    v25 = objc_msgSend(v24, sel_temporaryDirectory);

    sub_21C246D04();
    sub_21C246CD4();
    v79 = v18;
    sub_21C246D34();
    sub_21C1FBD14(&qword_25524B9A0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
    v84[0] = (id)sub_21C2488F4();
    v84[1] = v26;
    (*(void (**)(_BYTE *, uint64_t))(v5 + 8))(v7, v4);
    sub_21C248504();
    sub_21C248504();
    swift_bridgeObjectRelease();
    v72 = v21;
    v27 = v79;
    sub_21C246CB0();
    swift_bridgeObjectRelease();
    sub_21C247CA0();
    v28 = v81;
    v29 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(v81 + 16);
    v30 = v76;
    v29(v76, v23, v8);
    v29(v80, v27, v8);
    v31 = sub_21C247CB8();
    v32 = sub_21C248708();
    v33 = v32;
    if (os_log_type_enabled(v31, v32))
    {
      v34 = swift_slowAlloc();
      v70 = v29;
      v35 = v34;
      v69 = (void *)swift_slowAlloc();
      v84[0] = v69;
      *(_DWORD *)v35 = 136315394;
      v68 = v31;
      v36 = sub_21C246D1C();
      v83 = sub_21C203A90(v36, v37, (uint64_t *)v84);
      v67 = v33;
      sub_21C2487A4();
      swift_bridgeObjectRelease();
      v38 = *(void (**)(_BYTE *, uint64_t))(v28 + 8);
      v38(v30, v8);
      *(_WORD *)(v35 + 12) = 2080;
      v39 = v27;
      v40 = v23;
      v41 = v80;
      v42 = sub_21C246D1C();
      v83 = sub_21C203A90(v42, v43, (uint64_t *)v84);
      sub_21C2487A4();
      swift_bridgeObjectRelease();
      v44 = v41;
      v23 = v40;
      v27 = v39;
      v38(v44, v8);
      v31 = v68;
      _os_log_impl(&dword_21C1E3000, v68, (os_log_type_t)v67, "Attempting copy of %s to %s", (uint8_t *)v35, 0x16u);
      v45 = v69;
      swift_arrayDestroy();
      MEMORY[0x2207770EC](v45, -1, -1);
      v46 = v35;
      v29 = v70;
      MEMORY[0x2207770EC](v46, -1, -1);
    }
    else
    {
      v38 = *(void (**)(_BYTE *, uint64_t))(v28 + 8);
      v38(v30, v8);
      v38(v80, v8);
    }

    (*(void (**)(_BYTE *, uint64_t))(v77 + 8))(v82, v78);
    v50 = objc_msgSend(v71, sel_defaultManager);
    v51 = (void *)sub_21C246CE0();
    v52 = (void *)sub_21C246CE0();
    v84[0] = 0;
    v53 = objc_msgSend(v50, sel_copyItemAtURL_toURL_error_, v51, v52, v84);

    if ((v53 & 1) != 0)
    {
      v54 = v84[0];
      sub_21C246D1C();
      sub_21C2471F0();
      v38(v27, v8);
      v38(v72, v8);
      sub_21C246CF8();
      return ((uint64_t (*)(_BYTE *, uint64_t))v38)(v23, v8);
    }
    else
    {
      v55 = v84[0];
      v56 = (void *)sub_21C246CA4();

      swift_willThrow();
      v57 = (uint64_t)v75;
      v82 = v23;
      v29(v75, v23, v8);
      v29((_BYTE *)(v57 + *(int *)(v74 + 20)), v27, v8);
      v58 = v56;
      sub_21C1FBD14(&qword_25524B9A8, type metadata accessor for ControlAgent.FailedToCopyURLError, (uint64_t)&unk_21C24B254);
      sub_21C247940();

      sub_21C2200D4(v57);
      v59 = v85;
      v60 = __swift_project_boxed_opaque_existential_1(v84, v85);
      v61 = *(_QWORD *)(v59 - 8);
      MEMORY[0x24BDAC7A8](v60);
      v63 = &v66[-((v62 + 15) & 0xFFFFFFFFFFFFFFF0)];
      (*(void (**)(_BYTE *))(v61 + 16))(v63);
      if (sub_21C248900())
      {
        (*(void (**)(_BYTE *, uint64_t))(v61 + 8))(v63, v59);
      }
      else
      {
        swift_allocError();
        (*(void (**)(uint64_t, _BYTE *, uint64_t))(v61 + 32))(v64, v63, v59);
      }
      swift_willThrow();

      v38(v79, v8);
      v38(v72, v8);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v84);
      v65 = v82;
      sub_21C246CF8();
      return ((uint64_t (*)(_BYTE *, uint64_t))v38)(v65, v8);
    }
  }
  else
  {
    v47 = v81;
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v81 + 16))(v11, v23, v8);
    type metadata accessor for ControlAgent.FailedToAccessSecurityScopedResourceError(0);
    sub_21C1FBD14(&qword_25524B998, type metadata accessor for ControlAgent.FailedToAccessSecurityScopedResourceError, (uint64_t)&unk_21C24B2EC);
    swift_allocError();
    (*(void (**)(uint64_t, _BYTE *, uint64_t))(v47 + 32))(v48, v11, v8);
    swift_willThrow();
    return (*(uint64_t (**)(_BYTE *, uint64_t))(v47 + 8))(v23, v8);
  }
}

uint64_t sub_21C21E590(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  unint64_t *v18;
  unint64_t v19;
  char isUniquelyReferenced_nonNull_native;
  char *v21;
  unint64_t v22;
  unint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  NSObject *v29;
  os_log_type_t v30;
  uint8_t *v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  void (*v35)(char *, uint64_t);
  uint64_t v37;
  void (*v38)(char *, uint64_t);
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47[5];

  v2 = sub_21C247CC4();
  v44 = *(_QWORD *)(v2 - 8);
  v45 = v2;
  MEMORY[0x24BDAC7A8](v2);
  v46 = (char *)&v39 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_21C247460();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_21C246D28();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x24BDAC7A8](v10);
  v43 = (char *)&v39 - v14;
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v39 - v15;
  sub_21C247454();
  if ((sub_21C246D10() & 1) != 0)
  {
    v40 = v16;
    v41 = v9;
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
    v17 = v42;
    v18 = (unint64_t *)(v42 + 344);
    swift_beginAccess();
    v19 = *(_QWORD *)(v17 + 344);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)(v17 + 344) = v19;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v19 = sub_21C23D9B0(0, *(_QWORD *)(v19 + 16) + 1, 1, v19);
      *v18 = v19;
    }
    v21 = v43;
    v23 = *(_QWORD *)(v19 + 16);
    v22 = *(_QWORD *)(v19 + 24);
    if (v23 >= v22 >> 1)
    {
      v19 = sub_21C23D9B0(v22 > 1, v23 + 1, 1, v19);
      *v18 = v19;
    }
    *(_QWORD *)(v19 + 16) = v23 + 1;
    (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v19+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(_QWORD *)(v5 + 72) * v23, v7, v4);
    swift_endAccess();
    v24 = v46;
    sub_21C247CA0();
    v25 = v40;
    v26 = v41;
    v27 = v8;
    (*(void (**)(char *, char *, uint64_t))(v41 + 16))(v21, v40, v8);
    v28 = v21;
    v29 = sub_21C247CB8();
    v30 = sub_21C248708();
    if (os_log_type_enabled(v29, v30))
    {
      v31 = (uint8_t *)swift_slowAlloc();
      v32 = swift_slowAlloc();
      v47[0] = v32;
      *(_DWORD *)v31 = 136315138;
      v43 = (char *)(v31 + 4);
      v33 = sub_21C246D1C();
      v47[4] = sub_21C203A90(v33, v34, v47);
      sub_21C2487A4();
      swift_bridgeObjectRelease();
      v35 = *(void (**)(char *, uint64_t))(v41 + 8);
      v35(v28, v27);
      _os_log_impl(&dword_21C1E3000, v29, v30, "Consumed execute permissions extension for: %s", v31, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2207770EC](v32, -1, -1);
      MEMORY[0x2207770EC](v31, -1, -1);

      (*(void (**)(char *, uint64_t))(v44 + 8))(v46, v45);
      return ((uint64_t (*)(char *, uint64_t))v35)(v25, v27);
    }
    else
    {

      v38 = *(void (**)(char *, uint64_t))(v26 + 8);
      v38(v28, v27);
      (*(void (**)(char *, uint64_t))(v44 + 8))(v24, v45);
      return ((uint64_t (*)(char *, uint64_t))v38)(v25, v27);
    }
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v12, v16, v8);
    type metadata accessor for ControlAgent.FailedToAccessSecurityScopedResourceError(0);
    sub_21C1FBD14(&qword_25524B998, type metadata accessor for ControlAgent.FailedToAccessSecurityScopedResourceError, (uint64_t)&unk_21C24B2EC);
    swift_allocError();
    (*(void (**)(uint64_t, char *, uint64_t))(v9 + 32))(v37, v12, v8);
    swift_willThrow();
    return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v16, v8);
  }
}

unint64_t sub_21C21E9D0()
{
  sub_21C24881C();
  swift_bridgeObjectRelease();
  sub_21C246D1C();
  sub_21C248504();
  swift_bridgeObjectRelease();
  return 0xD000000000000011;
}

uint64_t sub_21C21EA50()
{
  sub_21C1FBD14((unint64_t *)&unk_25524BC30, type metadata accessor for ControlAgent.FailedToAccessSecurityScopedResourceError, (uint64_t)&unk_21C24B10C);
  return sub_21C24794C();
}

uint64_t sub_21C21EA90()
{
  sub_21C1FBD14((unint64_t *)&unk_25524BC30, type metadata accessor for ControlAgent.FailedToAccessSecurityScopedResourceError, (uint64_t)&unk_21C24B10C);
  return sub_21C24791C();
}

uint64_t sub_21C21EAD0()
{
  sub_21C24881C();
  swift_bridgeObjectRelease();
  sub_21C246D1C();
  sub_21C248504();
  swift_bridgeObjectRelease();
  sub_21C248504();
  type metadata accessor for ControlAgent.FailedToCopyURLError(0);
  sub_21C246D1C();
  sub_21C248504();
  swift_bridgeObjectRelease();
  return 0x742064656C696146;
}

uint64_t sub_21C21EBA0()
{
  sub_21C1FBD14(&qword_25524B9A8, type metadata accessor for ControlAgent.FailedToCopyURLError, (uint64_t)&unk_21C24B254);
  return sub_21C24794C();
}

uint64_t sub_21C21EBE0()
{
  sub_21C1FBD14(&qword_25524B9A8, type metadata accessor for ControlAgent.FailedToCopyURLError, (uint64_t)&unk_21C24B254);
  return sub_21C24791C();
}

uint64_t sub_21C21EC20()
{
  uint64_t v0;

  swift_release();
  sub_21C220660(v0 + 120);
  swift_release();
  swift_release();
  sub_21C1FFAF0(v0 + 240);
  swift_bridgeObjectRelease();
  swift_defaultActor_destroy();
  return swift_defaultActor_deallocate();
}

uint64_t sub_21C21EC6C()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_21C21EC78()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_21C1EBB98;
  return sub_21C21ECC0();
}

uint64_t sub_21C21ECC0()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1[2] = v0;
  v2 = sub_21C2471CC();
  v1[3] = v2;
  v1[4] = *(_QWORD *)(v2 - 8);
  v1[5] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25524B930);
  v1[6] = swift_task_alloc();
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_25524B938);
  v1[7] = v3;
  v1[8] = *(_QWORD *)(v3 - 8);
  v1[9] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25524B940);
  v1[10] = swift_task_alloc();
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25524B948);
  v1[11] = v4;
  v1[12] = *(_QWORD *)(v4 - 8);
  v1[13] = swift_task_alloc();
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_25524B950);
  v1[14] = v5;
  v1[15] = *(_QWORD *)(v5 - 8);
  v1[16] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_21C21EDEC()
{
  uint64_t v0;
  _QWORD *v1;

  sub_21C246EB4();
  sub_21C1FBD14(&qword_25524B958, (uint64_t (*)(uint64_t))MEMORY[0x24BE782B8], MEMORY[0x24BE782B0]);
  sub_21C246E54();
  sub_21C248678();
  *(_QWORD *)(v0 + 136) = sub_21C1FBD14(&qword_25524B960, (uint64_t (*)(uint64_t))type metadata accessor for JITBootstrapAgent, (uint64_t)&unk_21C24AFF4);
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 144) = v1;
  *v1 = v0;
  v1[1] = sub_21C21EEDC;
  return sub_21C248684();
}

uint64_t sub_21C21EEDC()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_21C21EF34()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v1 = *(_QWORD *)(v0 + 80);
  if ((*(unsigned int (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 64) + 48))(v1, 1, *(_QWORD *)(v0 + 56)) == 1)
  {
    v3 = *(_QWORD *)(v0 + 120);
    v2 = *(_QWORD *)(v0 + 128);
    v4 = *(_QWORD *)(v0 + 112);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 96) + 8))(*(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 88));
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v6 = *(_QWORD *)(v0 + 72);
    v7 = *(_QWORD *)(v0 + 16);
    sub_21C1FFC70(v1, v6, &qword_25524B938);
    v8 = swift_task_alloc();
    *(_QWORD *)(v0 + 152) = v8;
    *(_QWORD *)(v8 + 16) = v6;
    *(_QWORD *)(v8 + 24) = v7;
    v9 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 160) = v9;
    *(_QWORD *)(v0 + 168) = sub_21C247880();
    *v9 = v0;
    v9[1] = sub_21C21F088;
    return sub_21C2489CC();
  }
}

uint64_t sub_21C21F088()
{
  swift_task_dealloc();
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_21C21F0E8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v1 = v0[9];
  v2 = v0[6];
  v4 = v0[4];
  v3 = v0[5];
  v5 = v0[3];
  sub_21C246EA8();
  sub_21C2471A8();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  sub_21C1F03B0(v2, &qword_25524B930);
  sub_21C1F03B0(v1, &qword_25524B938);
  v6 = (_QWORD *)swift_task_alloc();
  v0[18] = v6;
  *v6 = v0;
  v6[1] = sub_21C21EEDC;
  return sub_21C248684();
}

uint64_t sub_21C21F1F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;

  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  v4 = sub_21C246E48();
  v3[5] = v4;
  v3[6] = *(_QWORD *)(v4 - 8);
  v3[7] = swift_task_alloc();
  v3[8] = __swift_instantiateConcreteTypeFromMangledName(&qword_25524B938);
  v3[9] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_21C21F288()
{
  uint64_t v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;

  sub_21C1F03EC(*(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 72), &qword_25524B938);
  if (swift_getEnumCaseMultiPayload() != 2)
    return sub_21C248918();
  v1 = *(char **)(v0 + 72);
  v3 = *(_QWORD *)(v0 + 48);
  v2 = *(_QWORD *)(v0 + 56);
  v5 = *(_QWORD *)(v0 + 32);
  v4 = *(_QWORD *)(v0 + 40);
  v6 = *(_QWORD *)v1;
  *(_QWORD *)(v0 + 80) = *(_QWORD *)v1;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_25524B978);
  (*(void (**)(uint64_t, char *, uint64_t))(v3 + 32))(v2, &v1[*(int *)(v7 + 48)], v4);
  *(_DWORD *)(v0 + 112) = *(_DWORD *)(v7 + 64);
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 88) = v8;
  v8[2] = v5;
  v8[3] = v6;
  v8[4] = v2;
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 96) = v9;
  *v9 = v0;
  v9[1] = sub_21C21F3C8;
  return sub_21C21F618(*(_QWORD *)(v0 + 16), 0x6E6E6F632054494ALL, 0xEE006E6F69746365, (int *)&unk_25524B988);
}

uint64_t sub_21C21F3C8()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 104) = v0;
  swift_task_dealloc();
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_21C21F43C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(int *)(v0 + 112);
  v2 = *(_QWORD *)(v0 + 72);
  v4 = *(_QWORD *)(v0 + 48);
  v3 = *(_QWORD *)(v0 + 56);
  v5 = *(_QWORD *)(v0 + 40);

  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  v6 = sub_21C2471CC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v2 + v1, v6);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21C21F4CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(int *)(v0 + 112);
  v2 = *(_QWORD *)(v0 + 72);
  v4 = *(_QWORD *)(v0 + 48);
  v3 = *(_QWORD *)(v0 + 56);
  v5 = *(_QWORD *)(v0 + 40);

  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  v6 = sub_21C2471CC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v2 + v1, v6);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21C21F55C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;

  v4[4] = a3;
  v4[5] = a4;
  v4[2] = a1;
  v4[3] = a2;
  return swift_task_switch();
}

uint64_t sub_21C21F574()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t);

  v1 = *(_QWORD *)(v0 + 32);
  v2 = *(uint64_t **)(v0 + 16);
  v3 = sub_21C246E3C();
  v4 = (uint64_t (*)(uint64_t))MEMORY[0x24BE780B0];
  v2[3] = v3;
  v2[4] = sub_21C1FBD14(&qword_25524B990, v4, MEMORY[0x24BE780A0]);
  __swift_allocate_boxed_opaque_existential_1(v2);
  sub_21C21FBAC(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21C21F618(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t v7;
  _QWORD *v8;
  uint64_t (*v10)(_QWORD *);

  v5[12] = a3;
  v5[13] = v4;
  v5[10] = a1;
  v5[11] = a2;
  v7 = sub_21C247CC4();
  v5[14] = v7;
  v5[15] = *(_QWORD *)(v7 - 8);
  v5[16] = swift_task_alloc();
  v5[17] = swift_task_alloc();
  v10 = (uint64_t (*)(_QWORD *))((char *)a4 + *a4);
  v8 = (_QWORD *)swift_task_alloc();
  v5[18] = v8;
  *v8 = v5;
  v8[1] = sub_21C21F6CC;
  return v10(v5 + 2);
}

uint64_t sub_21C21F6CC()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 152) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_21C21F730()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint8_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  sub_21C247CA0();
  swift_bridgeObjectRetain_n();
  v1 = sub_21C247CB8();
  v2 = sub_21C248708();
  if (os_log_type_enabled(v1, v2))
  {
    v3 = *(_QWORD *)(v0 + 120);
    v12 = *(_QWORD *)(v0 + 112);
    v13 = *(_QWORD *)(v0 + 136);
    v5 = *(_QWORD *)(v0 + 88);
    v4 = *(_QWORD *)(v0 + 96);
    v6 = (uint8_t *)swift_slowAlloc();
    v7 = swift_slowAlloc();
    v14 = v7;
    *(_DWORD *)v6 = 136446210;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 72) = sub_21C203A90(v5, v4, &v14);
    sub_21C2487A4();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_21C1E3000, v1, v2, "JITBootstrapAgent: %{public}s succeeded", v6, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2207770EC](v7, -1, -1);
    MEMORY[0x2207770EC](v6, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v13, v12);
  }
  else
  {
    v8 = *(_QWORD *)(v0 + 136);
    v9 = *(_QWORD *)(v0 + 112);
    v10 = *(_QWORD *)(v0 + 120);
    swift_bridgeObjectRelease_n();

    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
  }
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 40));
  sub_21C247A0C();
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21C21F924()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  void *v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  id v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v1 = *(void **)(v0 + 152);
  sub_21C247CA0();
  swift_bridgeObjectRetain();
  v2 = v1;
  swift_bridgeObjectRetain();
  v3 = v1;
  v4 = sub_21C247CB8();
  v5 = sub_21C248720();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = *(void **)(v0 + 152);
    v19 = *(_QWORD *)(v0 + 120);
    v20 = *(_QWORD *)(v0 + 112);
    v21 = *(_QWORD *)(v0 + 128);
    v7 = *(_QWORD *)(v0 + 88);
    v8 = *(_QWORD *)(v0 + 96);
    v9 = swift_slowAlloc();
    v10 = (_QWORD *)swift_slowAlloc();
    v18 = swift_slowAlloc();
    v22 = v18;
    *(_DWORD *)v9 = 136446466;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 56) = sub_21C203A90(v7, v8, &v22);
    sub_21C2487A4();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v9 + 12) = 2114;
    v11 = v6;
    v12 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 64) = v12;
    sub_21C2487A4();
    *v10 = v12;

    _os_log_impl(&dword_21C1E3000, v4, v5, "JITBootstrapAgent: %{public}s failed: %{public}@", (uint8_t *)v9, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25524B630);
    swift_arrayDestroy();
    MEMORY[0x2207770EC](v10, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x2207770EC](v18, -1, -1);
    MEMORY[0x2207770EC](v9, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v21, v20);
  }
  else
  {
    v13 = *(void **)(v0 + 152);
    v15 = *(_QWORD *)(v0 + 120);
    v14 = *(_QWORD *)(v0 + 128);
    v16 = *(_QWORD *)(v0 + 112);
    swift_bridgeObjectRelease_n();

    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v14, v16);
  }
  swift_willThrow();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_21C21FBAC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;

  v3 = sub_21C247CC4();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21C247CAC();
  v7 = sub_21C247CB8();
  v8 = sub_21C248714();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v9 = 0;
    _os_log_impl(&dword_21C1E3000, v7, v8, "Received request to connect JIT.", v9, 2u);
    MEMORY[0x2207770EC](v9, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  if (qword_2552497B8 != -1)
    swift_once();
  sub_21C20E344(a1);
  if (!v1)
    sub_21C246E30();
}

uint64_t sub_21C21FD00()
{
  swift_release();
  swift_defaultActor_destroy();
  return swift_defaultActor_deallocate();
}

uint64_t sub_21C21FD24(void (*a1)(void))
{
  a1();
  return _swift_stdlib_bridgeErrorToNSError();
}

void sub_21C21FD44(uint64_t *a1, _QWORD **a2, uint64_t a3, uint64_t (*a4)(void))
{
  void *v6;
  uint64_t v7;
  _QWORD *v8;

  v6 = (void *)a4();
  v7 = *a1 + 8;
  sub_21C2487A4();
  *a1 = v7;
  v8 = *a2;
  if (*a2)
  {
    *v8 = v6;
    *a2 = v8 + 1;
  }
  else
  {

  }
}

uint64_t _s17PreviewsInjection19UVBSEndpointMonitorC08activateD0yyFZ_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t result;
  uint64_t v8;

  v0 = sub_21C247CC4();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21C247CA0();
  v4 = sub_21C247CB8();
  v5 = sub_21C248738();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v6 = 0;
    _os_log_impl(&dword_21C1E3000, v4, v5, "UVBSEndpointMonitor activating", v6, 2u);
    MEMORY[0x2207770EC](v6, -1, -1);
  }

  result = (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  if (qword_2552497D0 != -1)
    return swift_once();
  return result;
}

uint64_t type metadata accessor for JITBootstrapAgent()
{
  return objc_opt_self();
}

uint64_t sub_21C21FF28()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_21C1EBB98;
  v2 = (_QWORD *)swift_task_alloc();
  v1[2] = v2;
  *v2 = v1;
  v2[1] = sub_21C1EBB98;
  return sub_21C21ECC0();
}

uint64_t type metadata accessor for ControlAgent()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for UVBSEndpointMonitor()
{
  return objc_opt_self();
}

uint64_t sub_21C21FFD0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v5 = *(_QWORD *)(v1 + 16);
  v4 = *(_QWORD *)(v1 + 24);
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_21C1EBB98;
  return sub_21C21F1F8(a1, v5, v4);
}

uint64_t sub_21C220034(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;

  v4 = *(_QWORD *)(v1 + 32);
  v5 = swift_task_alloc();
  v6 = *(_OWORD *)(v1 + 16);
  *(_QWORD *)(v2 + 16) = v5;
  *(_QWORD *)v5 = v2;
  *(_QWORD *)(v5 + 8) = sub_21C1EBB98;
  *(_QWORD *)(v5 + 40) = v4;
  *(_OWORD *)(v5 + 24) = v6;
  *(_QWORD *)(v5 + 16) = a1;
  return swift_task_switch();
}

uint64_t type metadata accessor for ControlAgent.FailedToAccessSecurityScopedResourceError(uint64_t a1)
{
  return sub_21C1F2E98(a1, qword_25524BBD0);
}

uint64_t type metadata accessor for ControlAgent.FailedToCopyURLError(uint64_t a1)
{
  return sub_21C1F2E98(a1, qword_25524BB40);
}

uint64_t sub_21C2200D4(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for ControlAgent.FailedToCopyURLError(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_21C220114(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_21C1EBB98;
  return sub_21C1FC6C0(a1, v4, v5, v6, (uint64_t)(v1 + 5));
}

uint64_t objectdestroy_15Tm()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 40);
  return swift_deallocObject();
}

uint64_t sub_21C2201C8(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_21C1EBB98;
  return sub_21C205C30(a1, v4, v5, v6, (uint64_t)(v1 + 5));
}

uint64_t sub_21C220248(void *a1)
{
  uint64_t v1;

  return sub_21C21D834(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_21C220250(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for PreviewAgentServices(a2, a1);
  return a2;
}

uint64_t sub_21C22028C()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 64);
  __swift_destroy_boxed_opaque_existential_1(v0 + 104);
  return swift_deallocObject();
}

uint64_t sub_21C2202E0(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_21C1EBB98;
  return sub_21C221E48(a1, v4, v5, v6, (uint64_t)(v1 + 5));
}

uint64_t sub_21C22035C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v5 = *(_QWORD *)(v1 + 16);
  v4 = *(_QWORD *)(v1 + 24);
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_21C1EBB98;
  return sub_21C21BA40(a1, v5, v4);
}

uint64_t sub_21C2203C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __int128 v3;

  v2 = swift_task_alloc();
  v3 = *(_OWORD *)(v0 + 16);
  *(_QWORD *)(v1 + 16) = v2;
  *(_QWORD *)v2 = v1;
  *(_QWORD *)(v2 + 8) = sub_21C1EBB98;
  *(_OWORD *)(v2 + 16) = v3;
  return swift_task_switch();
}

uint64_t sub_21C220420()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __int128 v3;

  v2 = swift_task_alloc();
  v3 = *(_OWORD *)(v0 + 16);
  *(_QWORD *)(v1 + 16) = v2;
  *(_QWORD *)v2 = v1;
  *(_QWORD *)(v2 + 8) = sub_21C1EBB98;
  *(_OWORD *)(v2 + 16) = v3;
  return swift_task_switch();
}

uint64_t sub_21C220480()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;

  v2 = v0[3];
  v4 = v0[4];
  v3 = v0[5];
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v5;
  *v5 = v1;
  v5[1] = sub_21C1EBB98;
  v6 = (_QWORD *)swift_task_alloc();
  v5[2] = v6;
  *v6 = v5;
  v6[1] = sub_21C1EBB98;
  return sub_21C21D224(v2, v4, v3);
}

uint64_t sub_21C22050C(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >= 3)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t sub_21C220520()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;

  v2 = *(_QWORD *)(v0 + 24);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_21C1EBB98;
  v4 = (_QWORD *)swift_task_alloc();
  v3[2] = v4;
  *v4 = v3;
  v4[1] = sub_21C1E664C;
  return sub_21C21CFAC(v2);
}

uint64_t sub_21C220598()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __int128 v3;

  v2 = swift_task_alloc();
  v3 = *(_OWORD *)(v0 + 16);
  *(_QWORD *)(v1 + 16) = v2;
  *(_QWORD *)v2 = v1;
  *(_QWORD *)(v2 + 8) = sub_21C1EBB98;
  *(_OWORD *)(v2 + 16) = v3;
  return swift_task_switch();
}

uint64_t sub_21C2205F8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  __int128 v5;

  v4 = swift_task_alloc();
  v5 = *(_OWORD *)(v1 + 16);
  *(_QWORD *)(v2 + 16) = v4;
  *(_QWORD *)v4 = v2;
  *(_QWORD *)(v4 + 8) = sub_21C1E664C;
  *(_OWORD *)(v4 + 24) = v5;
  *(_QWORD *)(v4 + 16) = a1;
  return swift_task_switch();
}

uint64_t sub_21C220660(uint64_t a1)
{
  destroy for PreviewAgentServices(a1);
  return a1;
}

uint64_t sub_21C220694()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  return swift_deallocObject();
}

uint64_t objectdestroy_23Tm()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_21C2206E8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v7 = *(_QWORD *)(v2 + 16);
  v6 = *(_QWORD *)(v2 + 24);
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v8;
  *v8 = v3;
  v8[1] = sub_21C1EBB98;
  return sub_21C205490(a1, a2, v7, v6);
}

uint64_t sub_21C220750(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v6;

  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v6;
  *v6 = v3;
  v6[1] = sub_21C1EBB98;
  return sub_21C1FC470(a1, a2, v2);
}

uint64_t objectdestroyTm()
{
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_21C2207E0()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_21C1E664C;
  v2 = (_QWORD *)swift_task_alloc();
  v1[2] = v2;
  *v2 = v1;
  v2[1] = sub_21C1EBB98;
  return sub_21C21B508();
}

uint64_t sub_21C220848()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_21C22086C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_21C1EBB98;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_25524BE70 + dword_25524BE70))(a1, v4);
}

uint64_t *sub_21C2208DC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  void (*v8)(uint64_t *, uint64_t *, uint64_t);
  uint64_t v9;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_21C246D28();
    v8 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    v8((uint64_t *)((char *)a1 + *(int *)(a3 + 20)), (uint64_t *)((char *)a2 + *(int *)(a3 + 20)), v7);
  }
  return a1;
}

uint64_t sub_21C220978(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void (*v6)(uint64_t, uint64_t);

  v4 = sub_21C246D28();
  v6 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v6(a1, v4);
  return ((uint64_t (*)(uint64_t, uint64_t))v6)(a1 + *(int *)(a2 + 20), v4);
}

uint64_t sub_21C2209E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);

  v6 = sub_21C246D28();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  return a1;
}

uint64_t sub_21C220A50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);

  v6 = sub_21C246D28();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  return a1;
}

uint64_t sub_21C220AC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);

  v6 = sub_21C246D28();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  return a1;
}

uint64_t sub_21C220B30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);

  v6 = sub_21C246D28();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  return a1;
}

uint64_t sub_21C220BA0()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_21C220BAC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_21C246D28();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t sub_21C220BE8()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_21C220BF4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_21C246D28();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t sub_21C220C34()
{
  uint64_t result;
  unint64_t v1;

  result = sub_21C246D28();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_21C220C9C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_21C246D28();
  return (**(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8))(a1, a2, v4);
}

uint64_t sub_21C220CD8(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_21C246D28();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

uint64_t sub_21C220D0C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_21C246D28();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t sub_21C220D50(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_21C246D28();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t sub_21C220D94(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_21C246D28();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t sub_21C220DD8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_21C246D28();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t sub_21C220E1C()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_21C220E28(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_21C246D28();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t sub_21C220E64()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_21C220E70(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_21C246D28();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t sub_21C220EB0()
{
  uint64_t result;
  unint64_t v1;

  result = sub_21C246D28();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_21C220F18()
{
  return sub_21C1FBD14(&qword_25524B998, type metadata accessor for ControlAgent.FailedToAccessSecurityScopedResourceError, (uint64_t)&unk_21C24B2EC);
}

uint64_t sub_21C220F44()
{
  return sub_21C1FBD14(&qword_25524BC08, type metadata accessor for ControlAgent.FailedToAccessSecurityScopedResourceError, (uint64_t)&unk_21C24B0C4);
}

uint64_t sub_21C220F70()
{
  return sub_21C1FBD14(&qword_25524BC10, type metadata accessor for ControlAgent.FailedToAccessSecurityScopedResourceError, (uint64_t)&unk_21C24B09C);
}

uint64_t sub_21C220F9C()
{
  return sub_21C1FBD14(&qword_25524BC18, type metadata accessor for ControlAgent.FailedToCopyURLError, (uint64_t)&unk_21C24B1A4);
}

uint64_t sub_21C220FC8()
{
  return sub_21C1FBD14(&qword_25524BC20, type metadata accessor for ControlAgent.FailedToCopyURLError, (uint64_t)&unk_21C24B20C);
}

uint64_t sub_21C220FF4()
{
  return sub_21C1FBD14(&qword_25524BC28, type metadata accessor for ControlAgent.FailedToCopyURLError, (uint64_t)&unk_21C24B1E4);
}

uint64_t sub_21C221030()
{
  sub_21C221B78();
  swift_allocError();
  return swift_willThrow();
}

uint64_t NonUIEntryPoint.update(payload:)()
{
  return sub_21C221030();
}

uint64_t sub_21C221090(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v5;

  v5[4] = a4;
  v5[5] = v4;
  v5[2] = a1;
  v5[3] = a3;
  return swift_task_switch();
}

uint64_t sub_21C2210AC()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 48) = sub_21C248630();
  sub_21C2485E8();
  return swift_task_switch();
}

uint64_t sub_21C22110C()
{
  uint64_t v0;
  void (*v1)(uint64_t);
  uint64_t v2;

  v1 = *(void (**)(uint64_t))(v0 + 24);
  v2 = swift_release();
  v1(v2);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21C221170()
{
  return sub_21C221030();
}

uint64_t sub_21C221184(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v11;

  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v6 + 16) = v11;
  *v11 = v6;
  v11[1] = sub_21C1E664C;
  v11[6] = a5;
  v11[7] = v5;
  v11[4] = a2;
  v11[5] = a4;
  v11[3] = a1;
  return swift_task_switch();
}

uint64_t NonUIEntryPoint.update(with:services:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v6;

  v6[6] = a5;
  v6[7] = v5;
  v6[4] = a2;
  v6[5] = a4;
  v6[3] = a1;
  return swift_task_switch();
}

uint64_t sub_21C221228()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int128 v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t (*v8)(uint64_t, uint64_t, uint64_t, uint64_t);

  v2 = *(_QWORD *)(v0 + 32);
  v1 = *(_QWORD *)(v0 + 40);
  sub_21C24863C();
  v3 = swift_task_alloc();
  *(_QWORD *)(v0 + 64) = v3;
  v4 = *(_OWORD *)(v0 + 48);
  *(_QWORD *)(v3 + 16) = v1;
  *(_OWORD *)(v3 + 24) = v4;
  *(_QWORD *)(v3 + 40) = v2;
  swift_getAssociatedTypeWitness();
  v5 = sub_21C247A90();
  v8 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_25524BCA8 + dword_25524BCA8);
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 72) = v6;
  *v6 = v0;
  v6[1] = sub_21C221318;
  return v8(v0 + 16, v5, (uint64_t)sub_21C221A18, v3);
}

uint64_t sub_21C221318()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  _QWORD *v4;

  v2 = (_QWORD *)*v1;
  v2[10] = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  swift_task_dealloc();
  v2[11] = v2[2];
  v4 = (_QWORD *)swift_task_alloc();
  v2[12] = v4;
  *v4 = v2;
  v4[1] = sub_21C2213BC;
  return sub_21C247A84();
}

uint64_t sub_21C2213BC()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 104) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_21C221420()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21C221454()
{
  uint64_t v0;

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21C221488()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21C2214BC()
{
  return sub_21C221030();
}

uint64_t sub_21C2214D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v6;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t updated;
  uint64_t AssociatedTypeWitness;
  uint64_t v14;

  v6[11] = a5;
  v6[12] = v5;
  v6[9] = a3;
  v6[10] = a4;
  v6[7] = a1;
  v6[8] = a2;
  v9 = sub_21C247880();
  v6[13] = v9;
  v6[14] = *(_QWORD *)(v9 - 8);
  v6[15] = swift_task_alloc();
  v10 = *(_QWORD *)(a5 + 8);
  v6[16] = v10;
  updated = type metadata accessor for UpdatePayloadError(0, a4, v10, v11);
  v6[17] = updated;
  v6[18] = *(_QWORD *)(updated - 8);
  v6[19] = swift_task_alloc();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v6[20] = AssociatedTypeWitness;
  v6[21] = *(_QWORD *)(AssociatedTypeWitness - 8);
  v6[22] = swift_task_alloc();
  v14 = swift_getAssociatedTypeWitness();
  v6[23] = v14;
  v6[24] = *(_QWORD *)(v14 - 8);
  v6[25] = swift_task_alloc();
  v6[26] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_21C221618()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t (*v4)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD);

  (*(void (**)(_QWORD))(v0[16] + 56))(v0[8]);
  v1 = v0[11];
  (*(void (**)(_QWORD, _QWORD, _QWORD))(v0[24] + 32))(v0[26], v0[25], v0[23]);
  v4 = (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))(**(int **)(v1 + 24) + *(_QWORD *)(v1 + 24));
  v2 = (_QWORD *)swift_task_alloc();
  v0[27] = v2;
  *v2 = v0;
  v2[1] = sub_21C221870;
  return v4(v0[22], v0[26], v0[9], v0[10], v0[11]);
}

uint64_t sub_21C221870()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 224) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_21C2218D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(v0 + 208);
  v2 = *(_QWORD *)(v0 + 184);
  v3 = *(_QWORD *)(v0 + 192);
  v5 = *(_QWORD *)(v0 + 168);
  v4 = *(_QWORD *)(v0 + 176);
  v6 = *(_QWORD *)(v0 + 160);
  (*(void (**)(uint64_t))(*(_QWORD *)(v0 + 128) + 64))(v4);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21C221998()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 192) + 8))(*(_QWORD *)(v0 + 208), *(_QWORD *)(v0 + 184));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21C221A18@<X0>(uint64_t *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t result;

  result = (*(uint64_t (**)(_QWORD, _QWORD))(v1[3] + 32))(v1[5], v1[2]);
  if (!v2)
    *a1 = result;
  return result;
}

uint64_t dispatch thunk of NonUIEntryPoint.init()(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);

  v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(a3 + 16) + *(_QWORD *)(a3 + 16));
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_21C1E664C;
  return v9(a1, a2, a3);
}

uint64_t dispatch thunk of NonUIEntryPoint.update(with:services:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v11;
  uint64_t (*v13)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v13 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(a5 + 24) + *(_QWORD *)(a5 + 24));
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 16) = v11;
  *v11 = v5;
  v11[1] = sub_21C1E664C;
  return v13(a1, a2, a3, a4, a5);
}

uint64_t dispatch thunk of NonUIEntryPoint.update(payload:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

unint64_t sub_21C221B78()
{
  unint64_t result;

  result = qword_25524BCC8;
  if (!qword_25524BCC8)
  {
    result = MEMORY[0x22077702C](&unk_21C24B360, &_s17PreviewsInjection13UnimplementedVN_0);
    atomic_store(result, &qword_25524BCC8);
  }
  return result;
}

ValueMetadata *_s17PreviewsInjection13UnimplementedVMa_0()
{
  return &_s17PreviewsInjection13UnimplementedVN_0;
}

uint64_t type metadata accessor for RunningAppEntryPoint()
{
  return objc_opt_self();
}

uint64_t sub_21C221BEC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t result;
  uint64_t v11;

  v2 = sub_21C247CC4();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = swift_allocObject();
  sub_21C247CA0();
  v7 = sub_21C247CB8();
  v8 = sub_21C248714();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v9 = 0;
    _os_log_impl(&dword_21C1E3000, v7, v8, "RunningAppEntryPoint init", v9, 2u);
    MEMORY[0x2207770EC](v9, -1, -1);
  }

  result = (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  *a1 = v6;
  return result;
}

uint64_t sub_21C221CFC@<X0>(_QWORD *a1@<X8>)
{
  id v2;
  uint64_t v3;
  uint64_t result;
  _QWORD *v5;

  v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBDB08]), sel_init);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_25524B408);
  result = sub_21C246F2C();
  *a1 = v2;
  v5 = (_QWORD *)((char *)a1 + *(int *)(v3 + 44));
  *v5 = &unk_25524B400;
  v5[1] = 0;
  return result;
}

unint64_t sub_21C221D78()
{
  return 0xD000000000000014;
}

uint64_t sub_21C221D94(uint64_t a1)
{
  uint64_t result;

  result = sub_21C221DFC(qword_25524BDD0, (uint64_t)&unk_21C24B3D8);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_21C221DC8(uint64_t a1)
{
  uint64_t result;

  result = sub_21C221DFC(&qword_25524BE20, (uint64_t)&unk_21C24B400);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_21C221DFC(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for RunningAppEntryPoint();
    result = MEMORY[0x22077702C](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

ValueMetadata *type metadata accessor for PreviewNonUIAgent()
{
  return &type metadata for PreviewNonUIAgent;
}

uint64_t sub_21C221E48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v5[36] = a4;
  v5[37] = a5;
  v6 = sub_21C247880();
  v5[38] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v5[39] = v7;
  v5[40] = *(_QWORD *)(v7 + 64);
  v5[41] = swift_task_alloc();
  v5[42] = swift_task_alloc();
  v8 = sub_21C2472E0();
  v5[43] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v5[44] = v9;
  v5[45] = *(_QWORD *)(v9 + 64);
  v5[46] = swift_task_alloc();
  v5[47] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255249D88);
  v5[48] = swift_task_alloc();
  v5[49] = swift_task_alloc();
  v10 = sub_21C2471CC();
  v5[50] = v10;
  v5[51] = *(_QWORD *)(v10 - 8);
  v5[52] = swift_task_alloc();
  v5[53] = swift_task_alloc();
  v11 = sub_21C247634();
  v5[54] = v11;
  v12 = *(_QWORD *)(v11 - 8);
  v5[55] = v12;
  v5[56] = *(_QWORD *)(v12 + 64);
  v5[57] = swift_task_alloc();
  v5[58] = swift_task_alloc();
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_25524BE30);
  v5[59] = v13;
  v5[60] = *(_QWORD *)(v13 - 8);
  v5[61] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25524BE38);
  v5[62] = swift_task_alloc();
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_25524BE40);
  v5[63] = v14;
  v5[64] = *(_QWORD *)(v14 - 8);
  v5[65] = swift_task_alloc();
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_25524BE48);
  v5[66] = v15;
  v5[67] = *(_QWORD *)(v15 - 8);
  v5[68] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_21C222048()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v1 = v0[65];
  v2 = v0[63];
  v3 = v0[64];
  sub_21C2477B4();
  sub_21C22291C();
  sub_21C246E54();
  sub_21C248678();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  v4 = (_QWORD *)swift_task_alloc();
  v0[69] = v4;
  *v4 = v0;
  v4[1] = sub_21C22210C;
  return sub_21C248684();
}

uint64_t sub_21C22210C()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_21C222160()
{
  uint64_t v0;
  uint64_t v1;
  int EnumCaseMultiPayload;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void **v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  char *v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  __int128 v41;
  uint64_t v42;
  __int128 v43;
  __int128 v44;
  int v45;
  id v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  _QWORD *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  void (*v79)(uint64_t, char *, uint64_t);
  uint64_t v80;
  uint64_t v81;
  void (*v82)(uint64_t, char *, uint64_t);
  uint64_t v83;
  void *v84;
  uint64_t v85;
  uint64_t v86;
  void (*v87)(uint64_t, uint64_t, uint64_t);
  uint64_t v88;
  id v89;

  v1 = *(_QWORD *)(v0 + 496);
  if ((*(unsigned int (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 480) + 48))(v1, 1, *(_QWORD *)(v0 + 472)) == 1)
  {
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 536) + 8))(*(_QWORD *)(v0 + 544), *(_QWORD *)(v0 + 528));
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  sub_21C222964(v1, *(_QWORD *)(v0 + 488));
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    v26 = *(void ***)(v0 + 488);
    v78 = *(_QWORD *)(v0 + 416);
    v67 = *(_QWORD *)(v0 + 408);
    v73 = *(_QWORD *)(v0 + 400);
    v27 = *(_QWORD *)(v0 + 376);
    v88 = *(_QWORD *)(v0 + 384);
    v28 = *(_QWORD *)(v0 + 352);
    v76 = *(_QWORD *)(v0 + 360);
    v68 = v28;
    v30 = *(_QWORD *)(v0 + 336);
    v29 = *(_QWORD *)(v0 + 344);
    v71 = *(char **)(v0 + 368);
    v72 = *(char **)(v0 + 328);
    v31 = *(_QWORD *)(v0 + 312);
    v85 = *(_QWORD *)(v0 + 304);
    v70 = *(_QWORD *)(v0 + 296);
    v84 = *v26;
    v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_25524BE58);
    v33 = (char *)v26 + *(int *)(v32 + 48);
    v34 = (char *)v26 + *(int *)(v32 + 64);
    v35 = &v33[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25524A540) + 48)];
    v82 = *(void (**)(uint64_t, char *, uint64_t))(v28 + 32);
    v69 = v29;
    v82(v27, v33, v29);
    (*(void (**)(uint64_t, char *, uint64_t))(v67 + 32))(v78, v34, v73);
    v79 = *(void (**)(uint64_t, char *, uint64_t))(v31 + 32);
    v79(v30, v35, v85);
    v36 = sub_21C248654();
    v74 = *(_QWORD *)(v36 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v74 + 56))(v88, 1, 1, v36);
    sub_21C220250(v70, v0 + 16);
    (*(void (**)(char *, uint64_t, uint64_t))(v68 + 16))(v71, v27, v29);
    (*(void (**)(char *, uint64_t, uint64_t))(v31 + 16))(v72, v30, v85);
    v37 = (*(unsigned __int8 *)(v68 + 80) + 144) & ~(unint64_t)*(unsigned __int8 *)(v68 + 80);
    v38 = (v76 + *(unsigned __int8 *)(v31 + 80) + v37) & ~(unint64_t)*(unsigned __int8 *)(v31 + 80);
    v39 = swift_allocObject();
    *(_QWORD *)(v39 + 16) = 0;
    v40 = (_QWORD *)(v39 + 16);
    *(_QWORD *)(v39 + 24) = 0;
    v41 = *(_OWORD *)(v0 + 96);
    *(_OWORD *)(v39 + 96) = *(_OWORD *)(v0 + 80);
    *(_OWORD *)(v39 + 112) = v41;
    v42 = *(_QWORD *)(v0 + 112);
    v43 = *(_OWORD *)(v0 + 32);
    *(_OWORD *)(v39 + 32) = *(_OWORD *)(v0 + 16);
    *(_OWORD *)(v39 + 48) = v43;
    v44 = *(_OWORD *)(v0 + 64);
    *(_OWORD *)(v39 + 64) = *(_OWORD *)(v0 + 48);
    *(_OWORD *)(v39 + 80) = v44;
    *(_QWORD *)(v39 + 128) = v42;
    *(_QWORD *)(v39 + 136) = v84;
    v82(v39 + v37, v71, v69);
    v79(v39 + v38, v72, v85);
    v45 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v74 + 48))(v88, 1, v36);
    v46 = v84;
    v47 = *(_QWORD *)(v0 + 384);
    v89 = v46;
    if (v45 == 1)
    {
      sub_21C1F03B0(v47, &qword_255249D88);
      if (*v40)
      {
LABEL_11:
        swift_getObjectType();
        swift_unknownObjectRetain();
        v48 = sub_21C2485E8();
        v50 = v49;
        swift_unknownObjectRelease();
LABEL_17:
        v57 = swift_allocObject();
        *(_QWORD *)(v57 + 16) = &unk_25524BE68;
        *(_QWORD *)(v57 + 24) = v39;
        if (v50 | v48)
        {
          *(_QWORD *)(v0 + 224) = 0;
          *(_QWORD *)(v0 + 232) = 0;
          *(_QWORD *)(v0 + 240) = v48;
          *(_QWORD *)(v0 + 248) = v50;
        }
        v59 = *(_QWORD *)(v0 + 408);
        v58 = *(_QWORD *)(v0 + 416);
        v60 = *(_QWORD *)(v0 + 400);
        v86 = *(_QWORD *)(v0 + 376);
        v62 = *(_QWORD *)(v0 + 344);
        v61 = *(_QWORD *)(v0 + 352);
        v63 = *(_QWORD *)(v0 + 336);
        v65 = *(_QWORD *)(v0 + 304);
        v64 = *(_QWORD *)(v0 + 312);
        swift_task_create();
        sub_21C2471C0();
        swift_release();

        (*(void (**)(uint64_t, uint64_t))(v64 + 8))(v63, v65);
        (*(void (**)(uint64_t, uint64_t))(v59 + 8))(v58, v60);
        (*(void (**)(uint64_t, uint64_t))(v61 + 8))(v86, v62);
        goto LABEL_20;
      }
    }
    else
    {
      sub_21C248648();
      (*(void (**)(uint64_t, uint64_t))(v74 + 8))(v47, v36);
      if (*v40)
        goto LABEL_11;
    }
    v48 = 0;
    v50 = 0;
    goto LABEL_17;
  }
  if (EnumCaseMultiPayload != 1)
    return sub_21C248918();
  v4 = *(_QWORD *)(v0 + 488);
  v5 = *(_QWORD *)(v0 + 464);
  v77 = v5;
  v81 = *(_QWORD *)(v0 + 456);
  v6 = *(_QWORD *)(v0 + 440);
  v7 = *(_QWORD *)(v0 + 432);
  v75 = *(_QWORD *)(v0 + 424);
  v8 = *(_QWORD *)(v0 + 400);
  v9 = *(_QWORD *)(v0 + 408);
  v10 = *(_QWORD *)(v0 + 392);
  v83 = v10;
  v80 = *(_QWORD *)(v0 + 296);
  v11 = v4 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25524BE78) + 48);
  v87 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 32);
  v87(v5, v4, v7);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 32))(v75, v11, v8);
  v12 = sub_21C248654();
  v13 = *(_QWORD *)(v12 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v13 + 56))(v10, 1, 1, v12);
  sub_21C220250(v80, v0 + 120);
  v14 = v7;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v81, v77, v7);
  v15 = (*(unsigned __int8 *)(v6 + 80) + 136) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v16 = swift_allocObject();
  *(_QWORD *)(v16 + 16) = 0;
  v17 = (_QWORD *)(v16 + 16);
  *(_QWORD *)(v16 + 24) = 0;
  v18 = *(_OWORD *)(v0 + 200);
  *(_OWORD *)(v16 + 96) = *(_OWORD *)(v0 + 184);
  *(_OWORD *)(v16 + 112) = v18;
  *(_QWORD *)(v16 + 128) = *(_QWORD *)(v0 + 216);
  v19 = *(_OWORD *)(v0 + 136);
  *(_OWORD *)(v16 + 32) = *(_OWORD *)(v0 + 120);
  *(_OWORD *)(v16 + 48) = v19;
  v20 = *(_OWORD *)(v0 + 168);
  *(_OWORD *)(v16 + 64) = *(_OWORD *)(v0 + 152);
  *(_OWORD *)(v16 + 80) = v20;
  v87(v16 + v15, v81, v14);
  v21 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(v83, 1, v12);
  v22 = *(_QWORD *)(v0 + 392);
  if (v21 == 1)
  {
    sub_21C1F03B0(*(_QWORD *)(v0 + 392), &qword_255249D88);
    if (*v17)
      goto LABEL_7;
  }
  else
  {
    sub_21C248648();
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v22, v12);
    if (*v17)
    {
LABEL_7:
      swift_getObjectType();
      swift_unknownObjectRetain();
      v23 = sub_21C2485E8();
      v25 = v24;
      swift_unknownObjectRelease();
      if (v25 | v23)
      {
        *(_QWORD *)(v0 + 256) = 0;
        *(_QWORD *)(v0 + 264) = 0;
        *(_QWORD *)(v0 + 272) = v23;
        *(_QWORD *)(v0 + 280) = v25;
      }
    }
  }
  v51 = *(_QWORD *)(v0 + 464);
  v52 = *(_QWORD *)(v0 + 432);
  v53 = *(_QWORD *)(v0 + 440);
  v54 = *(_QWORD *)(v0 + 424);
  v55 = *(_QWORD *)(v0 + 400);
  v56 = *(_QWORD *)(v0 + 408);
  swift_task_create();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255249D90);
  sub_21C2471B4();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v56 + 8))(v54, v55);
  (*(void (**)(uint64_t, uint64_t))(v53 + 8))(v51, v52);
LABEL_20:
  v66 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 552) = v66;
  *v66 = v0;
  v66[1] = sub_21C22210C;
  return sub_21C248684();
}

unint64_t sub_21C22291C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_25524BE50;
  if (!qword_25524BE50)
  {
    v1 = sub_21C2477B4();
    result = MEMORY[0x22077702C](MEMORY[0x24BE784E0], v1);
    atomic_store(result, (unint64_t *)&qword_25524BE50);
  }
  return result;
}

uint64_t sub_21C222964(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25524BE30);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_21C2229AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v8;

  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 16) = v8;
  *v8 = v5;
  v8[1] = sub_21C1E664C;
  return sub_21C222A14(a1, a5);
}

uint64_t sub_21C222A14(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3[21] = a2;
  v3[22] = v2;
  v3[20] = a1;
  v4 = sub_21C247880();
  v3[23] = v4;
  v3[24] = *(_QWORD *)(v4 - 8);
  v3[25] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25524A598);
  v3[26] = swift_task_alloc();
  v5 = sub_21C24761C();
  v3[27] = v5;
  v3[28] = *(_QWORD *)(v5 - 8);
  v3[29] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_21C222AC4()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v2 = v0[28];
  v1 = v0[29];
  v3 = v0[27];
  sub_21C1FF9B4(v0[22], (uint64_t)(v0 + 2));
  sub_21C247628();
  sub_21C247610();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  v4 = (_QWORD *)swift_task_alloc();
  v0[30] = (uint64_t)v4;
  *v4 = v0;
  v4[1] = sub_21C222B60;
  return sub_21C206EE4(v0[26]);
}

uint64_t sub_21C222B60()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)v1 + 16;
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 208);
  *(_QWORD *)(*(_QWORD *)v1 + 248) = v0;
  swift_task_dealloc();
  sub_21C1F03B0(v3, &qword_25524A598);
  sub_21C1FFAF0(v2);
  return swift_task_switch();
}

uint64_t sub_21C222BEC()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 256) = v1;
  *v1 = v0;
  v1[1] = sub_21C222C48;
  return sub_21C23463C(v0 + 120, *(_QWORD *)(v0 + 168));
}

uint64_t sub_21C222C48()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 264) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_21C222CAC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = v0[18];
  v2 = v0[19];
  __swift_project_boxed_opaque_existential_1(v0 + 15, v1);
  sub_21C2475D4();
  v3 = (_QWORD *)swift_task_alloc();
  v0[34] = v3;
  *v3 = v0;
  v3[1] = sub_21C222D40;
  return sub_21C2214D8(v0[20], v0[25], v0[22], v1, v2);
}

uint64_t sub_21C222D40()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(*(_QWORD *)v1 + 192);
  v2 = *(_QWORD *)(*(_QWORD *)v1 + 200);
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 184);
  *(_QWORD *)(*(_QWORD *)v1 + 280) = v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  return swift_task_switch();
}

uint64_t sub_21C222DC4()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 120);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21C222E20()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21C222E70()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21C222EC0()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 120);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21C222F18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;

  v7[4] = a6;
  v7[5] = a7;
  v7[2] = a4;
  v7[3] = a5;
  v7[6] = type metadata accessor for EntryPointIndex.PendingShellResource(0);
  v7[7] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_21C222F78()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 64) = *(_QWORD *)(*(_QWORD *)(v0 + 16) + 8);
  return swift_task_switch();
}

uint64_t sub_21C222F94()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  void *v3;
  char *v4;
  uint64_t v5;
  id v6;
  _QWORD *v7;

  v1 = (_QWORD *)v0[7];
  v2 = v0[5];
  v3 = (void *)v0[3];
  v4 = (char *)v1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25524A548) + 48);
  *v1 = v3;
  v5 = sub_21C247880();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(v4, v2, v5);
  swift_storeEnumTagMultiPayload();
  v6 = v3;
  v7 = (_QWORD *)swift_task_alloc();
  v0[9] = v7;
  *v7 = v0;
  v7[1] = sub_21C223050;
  return sub_21C2373FC(v0[7], v0[4]);
}

uint64_t sub_21C223050()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v3;

  v1 = *(_QWORD *)(*v0 + 56);
  v3 = *v0;
  swift_task_dealloc();
  sub_21C1FCA8C(v1);
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v3 + 8))();
}

uint64_t sub_21C2230AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;

  v1 = sub_21C2472E0();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 144) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  v5 = sub_21C247880();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = (v3 + v4 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 56);
  __swift_destroy_boxed_opaque_existential_1(v0 + 96);

  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  (*(void (**)(unint64_t, uint64_t))(v6 + 8))(v0 + v7, v5);
  return swift_deallocObject();
}

uint64_t sub_21C223198(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;

  v4 = *(_QWORD *)(sub_21C2472E0() - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 144) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = *(_QWORD *)(v4 + 64);
  v7 = *(unsigned __int8 *)(*(_QWORD *)(sub_21C247880() - 8) + 80);
  v8 = v5 + v6 + v7;
  v9 = v1[2];
  v10 = v1[3];
  v11 = (uint64_t)(v1 + 4);
  v12 = v1[17];
  v13 = (uint64_t)v1 + v5;
  v14 = (uint64_t)v1 + (v8 & ~v7);
  v15 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v15;
  *v15 = v2;
  v15[1] = sub_21C1E664C;
  return sub_21C222F18(a1, v9, v10, v11, v12, v13, v14);
}

uint64_t sub_21C223264(uint64_t a1, int *a2)
{
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_21C2232C8;
  return v6(a1);
}

uint64_t sub_21C2232C8()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_21C223314()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_21C223338()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_21C247634();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 136) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 56);
  __swift_destroy_boxed_opaque_existential_1(v0 + 96);
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_21C2233D4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(sub_21C247634() - 8) + 80);
  v5 = v1 + ((v4 + 136) & ~v4);
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_21C1E664C;
  v7 = (_QWORD *)swift_task_alloc();
  v6[2] = v7;
  *v7 = v6;
  v7[1] = sub_21C1E664C;
  return sub_21C222A14(a1, v5);
}

ValueMetadata *type metadata accessor for CFunctionEntryPoint()
{
  return &type metadata for CFunctionEntryPoint;
}

uint64_t sub_21C223480(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t updated;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD v20[2];

  v3 = v2;
  updated = type metadata accessor for CFunctionEntryPoint.UpdateState.Phase(0);
  MEMORY[0x24BDAC7A8](updated);
  v8 = (char *)v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_25524BF38);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = type metadata accessor for CFunctionEntryPoint.UpdateState(0);
  v14 = *(int *)(result + 20);
  v15 = *(_QWORD *)(v3 + v14);
  v16 = __CFADD__(v15, 1);
  v17 = v15 + 1;
  if (v16)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v3 + v14) = v17;
    sub_21C225F00(v3, (uint64_t)v8);
    if (swift_getEnumCaseMultiPayload())
    {
      sub_21C225F44((uint64_t)v8);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v8, v9);
      sub_21C248624();
      sub_21C1FBD14(&qword_25524BF80, (uint64_t (*)(uint64_t))MEMORY[0x24BEE6838], MEMORY[0x24BEE6848]);
      v18 = swift_allocError();
      sub_21C248420();
      v20[1] = v18;
      sub_21C248600();
      (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    }
    sub_21C225F44(v3);
    v19 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25524BF48) + 48);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16))(v3, a1, v9);
    *(_BYTE *)(v3 + v19) = a2 & 1;
    swift_storeEnumTagMultiPayload();
    return *(_QWORD *)(v3 + v14);
  }
  return result;
}

uint64_t sub_21C22364C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t result;
  uint64_t v13;
  char *v14;
  _QWORD v15[6];
  uint64_t updated;
  uint64_t v17;

  v15[5] = a1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25524BF40);
  v15[1] = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v5 = sub_21C247880();
  v15[3] = *(_QWORD *)(v5 - 8);
  v15[4] = v5;
  v6 = MEMORY[0x24BDAC7A8](v5);
  v15[2] = (char *)v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_25524BF38);
  MEMORY[0x24BDAC7A8](v8);
  updated = type metadata accessor for CFunctionEntryPoint.UpdateState.Phase(0);
  v9 = MEMORY[0x24BDAC7A8](updated);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)v15 - v10;
  result = type metadata accessor for CFunctionEntryPoint.UpdateState(0);
  v13 = *(int *)(result + 20);
  v17 = v2;
  if (*(_QWORD *)(v2 + v13) == a2)
  {
    sub_21C225F00(v17, (uint64_t)v11);
    v14 = (char *)&loc_21C2237EC + 4 * byte_21C24B480[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  return result;
}

uint64_t sub_21C2239A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;

  v4[3] = a2;
  v4[4] = a4;
  v4[2] = a1;
  v4[5] = sub_21C24863C();
  v4[6] = sub_21C248630();
  v4[7] = sub_21C2485E8();
  v4[8] = v5;
  return swift_task_switch();
}

uint64_t sub_21C223A18()
{
  uint64_t v0;
  int8x16_t *v1;
  _QWORD *v2;
  int8x16_t v4;

  v4 = *(int8x16_t *)(v0 + 24);
  *(_QWORD *)(v0 + 72) = sub_21C248630();
  v1 = (int8x16_t *)swift_task_alloc();
  *(_QWORD *)(v0 + 80) = v1;
  v1[1] = vextq_s8(v4, v4, 8uLL);
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 88) = v2;
  sub_21C247880();
  *v2 = v0;
  v2[1] = sub_21C223AE0;
  return sub_21C248930();
}

uint64_t sub_21C223AE0()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 96) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    swift_release();
    swift_task_dealloc();
  }
  return swift_task_switch();
}

uint64_t sub_21C223B54()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21C223B88()
{
  uint64_t v0;

  swift_release();
  swift_release();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_21C223BD0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(void *, void *);
  void *v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD aBlock[10];

  v6 = sub_21C247CC4();
  v27 = *(_QWORD *)(v6 - 8);
  v28 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v7 = sub_21C247880();
  v23 = *(_QWORD *)(v7 - 8);
  v24 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_21C2471D8();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  aBlock[7] = a2;
  v31 = a1;
  v32 = a3;
  v30 = a2;
  swift_retain();
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_25524BF28);
  v25 = sub_21C1E78E4(&qword_25524BF30, &qword_25524BF28, MEMORY[0x24BE76C78]);
  v26 = v14;
  sub_21C247A60();
  swift_release();
  v29 = aBlock[8];
  v15 = sub_21C24728C();
  v17 = v16;
  sub_21C2472B0();
  v18 = (void (*)(void *, void *))sub_21C225B7C(v15, v17, (uint64_t)v13);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  swift_bridgeObjectRelease();
  sub_21C247298();
  sub_21C24785C();
  (*(void (**)(char *, uint64_t))(v23 + 8))(v9, v24);
  v19 = (void *)sub_21C24842C();
  swift_bridgeObjectRelease();
  v20 = swift_allocObject();
  v21 = v29;
  *(_QWORD *)(v20 + 16) = v30;
  *(_QWORD *)(v20 + 24) = v21;
  aBlock[4] = sub_21C225E9C;
  aBlock[5] = v20;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_21C2243FC;
  aBlock[3] = &block_descriptor;
  v22 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  v18(v19, v22);
  _Block_release(v22);

}

uint64_t sub_21C2240D4()
{
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25524BF28);
  sub_21C1E78E4(&qword_25524BF30, &qword_25524BF28, MEMORY[0x24BE76C78]);
  sub_21C247A60();
  return swift_release();
}

uint64_t sub_21C2241A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t updated;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t result;
  char *v20;
  _QWORD v21[4];
  uint64_t v22;

  v22 = a4;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_25524BF38);
  v21[2] = *(_QWORD *)(v7 - 8);
  v21[3] = v7;
  MEMORY[0x24BDAC7A8](v7);
  v21[0] = (char *)v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  updated = type metadata accessor for CFunctionEntryPoint.UpdateState.Phase(0);
  MEMORY[0x24BDAC7A8](updated);
  v11 = (char *)v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_21C247880();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)v21 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)v21 - v17;
  v21[1] = a2;
  if (a2)
  {
    result = type metadata accessor for CFunctionEntryPoint.UpdateState(0);
    if (*(_QWORD *)(a1 + *(int *)(result + 20)) == a3)
    {
      sub_21C225F00(a1, (uint64_t)v11);
      v20 = (char *)&loc_21C2242FC + 4 * byte_21C24B484[swift_getEnumCaseMultiPayload()];
      __asm { BR              X10 }
    }
  }
  else
  {
    if (v22)
    {
      swift_bridgeObjectRetain();
      sub_21C247850();
      (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v18, v16, v12);
    }
    else
    {
      _s17PreviewsInjection10EntryPointPAAyt12StaticOutputRtzrlE6encode06staticF00A12FoundationOS12PropertyListVyt_tFZ_0();
    }
    sub_21C22364C((uint64_t)v18, a3);
    return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v18, v12);
  }
  return result;
}

void sub_21C2243D0()
{
  uint64_t v0;

  sub_21C225F44(v0);
  JUMPOUT(0x21C2243ACLL);
}

void sub_21C2243DC()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_25524BF40);
  JUMPOUT(0x21C2243A8);
}

uint64_t sub_21C2243FC(uint64_t a1, uint64_t a2, void *a3)
{
  void (*v4)(uint64_t, void *);
  uint64_t v5;
  id v6;

  v4 = *(void (**)(uint64_t, void *))(a1 + 32);
  if (a2)
    v5 = sub_21C248438();
  else
    v5 = 0;
  swift_retain();
  v6 = a3;
  v4(v5, a3);
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t sub_21C224490(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t updated;
  uint64_t v7;
  char *v8;
  uint64_t result;
  char *v10;
  uint64_t v11;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_25524BF38);
  MEMORY[0x24BDAC7A8](v5);
  updated = type metadata accessor for CFunctionEntryPoint.UpdateState.Phase(0);
  MEMORY[0x24BDAC7A8](updated);
  v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = type metadata accessor for CFunctionEntryPoint.UpdateState(0);
  if (*(_QWORD *)(a1 + *(int *)(result + 20)) == a3)
  {
    sub_21C225F00(a1, (uint64_t)v8);
    v10 = (char *)&loc_21C22457C + 4 * byte_21C24B488[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  return result;
}

uint64_t sub_21C224628()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t);
  uint64_t v2;
  uint64_t v3;
  char *v4;
  char v5;
  uint64_t result;
  _QWORD v7[4];

  v0 = sub_21C247574();
  v1 = (uint64_t (*)(uint64_t))MEMORY[0x24BE77EC0];
  v2 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v4 = (char *)v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21C247568();
  sub_21C1FBD14(qword_25524BF88, v1, MEMORY[0x24BE77EE0]);
  sub_21C248540();
  sub_21C248540();
  if (v7[2] == v7[0] && v7[3] == v7[1])
  {
    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v0);
  }
  else
  {
    v5 = sub_21C248924();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v0);
    result = 0;
    if ((v5 & 1) == 0)
      return result;
  }
  sub_21C247880();
  sub_21C2470AC();
  swift_retain();
  sub_21C247A78();
  swift_release();
  swift_release();
  return 1;
}

uint64_t sub_21C2247B4()
{
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25524BF28);
  sub_21C1E78E4(&qword_25524BF30, &qword_25524BF28, MEMORY[0x24BE76C78]);
  sub_21C247A60();
  return swift_release();
}

void sub_21C224884(uint64_t a1)
{
  uint64_t v2;
  uint64_t updated;
  uint64_t v4;
  char *v5;
  uint64_t v6;

  v2 = sub_21C247880();
  MEMORY[0x24BDAC7A8](v2);
  updated = type metadata accessor for CFunctionEntryPoint.UpdateState.Phase(0);
  MEMORY[0x24BDAC7A8](updated);
  sub_21C225F00(a1, (uint64_t)&v6 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = (char *)sub_21C224954 + 4 * byte_21C24B48C[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_21C224954()
{
  uint64_t v0;
  uint64_t v1;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_25524BF38);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0, v1);
}

void *sub_21C224A74@<X0>(const char *a1@<X0>, _QWORD *a2@<X8>)
{
  void *result;

  result = dlopen(a1, 2);
  *a2 = result;
  return result;
}

void sub_21C224AA4()
{
  __int128 *v0;
  _QWORD v1[5];
  _BYTE v2[40];

  sub_21C2098D8(v0, (uint64_t)v1);
  sub_21C2098D8(v0, (uint64_t)v2);
  __asm { BR              X10 }
}

unint64_t sub_21C224AF8()
{
  sub_21C24881C();
  swift_bridgeObjectRelease();
  sub_21C248504();
  sub_21C248504();
  return 0xD000000000000026;
}

unint64_t sub_21C224D20()
{
  return 0xD00000000000002BLL;
}

void sub_21C224D3C()
{
  __int128 *v0;
  _BYTE v1[40];

  sub_21C2098D8(v0, (uint64_t)v1);
  sub_21C224AA4();
}

uint64_t sub_21C224D70()
{
  sub_21C22603C();
  return sub_21C24794C();
}

uint64_t sub_21C224D98()
{
  sub_21C22603C();
  return sub_21C24791C();
}

uint64_t sub_21C224DC0(uint64_t a1)
{
  _QWORD *v1;

  v1[2] = a1;
  v1[3] = type metadata accessor for CFunctionEntryPoint.UpdateState(0);
  v1[4] = swift_task_alloc();
  sub_21C24863C();
  v1[5] = sub_21C248630();
  sub_21C2485E8();
  return swift_task_switch();
}

uint64_t sub_21C224E50()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;

  v1 = *(_QWORD *)(v0 + 32);
  v3 = *(uint64_t **)(v0 + 16);
  v2 = *(_QWORD *)(v0 + 24);
  swift_release();
  type metadata accessor for CFunctionEntryPoint.UpdateState.Phase(0);
  swift_storeEnumTagMultiPayload();
  *(_QWORD *)(v1 + *(int *)(v2 + 20)) = 0;
  *v3 = sub_21C247C7C();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21C224EC4(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;

  v6 = *v2;
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_21C1E664C;
  return sub_21C2239A4(a1, a2, v8, v6);
}

uint64_t sub_21C224F2C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  sub_21C24863C();
  v3[5] = sub_21C248630();
  sub_21C2485E8();
  return swift_task_switch();
}

uint64_t sub_21C224F9C()
{
  uint64_t v0;
  char v1;

  swift_release();
  v1 = sub_21C224628();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(v1 & 1);
}

unint64_t sub_21C224FEC()
{
  return 0xD000000000000013;
}

unint64_t sub_21C225008(uint64_t a1)
{
  unint64_t result;

  result = sub_21C22502C();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_21C22502C()
{
  unint64_t result;

  result = qword_25524BF00[0];
  if (!qword_25524BF00[0])
  {
    result = MEMORY[0x22077702C](&unk_21C24B4D4, &type metadata for CFunctionEntryPoint);
    atomic_store(result, qword_25524BF00);
  }
  return result;
}

unint64_t sub_21C225070(uint64_t a1)
{
  unint64_t result;

  result = sub_21C225094();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_21C225094()
{
  unint64_t result;

  result = qword_25524BF18;
  if (!qword_25524BF18)
  {
    result = MEMORY[0x22077702C](&unk_21C24B4FC, &type metadata for CFunctionEntryPoint);
    atomic_store(result, &qword_25524BF18);
  }
  return result;
}

void sub_21C2250D8(uint64_t a1)
{
  uint64_t v1;

  sub_21C223BD0(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_21C2250E0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  char v4;
  uint64_t result;

  v3 = *(_QWORD *)(v1 + 16);
  v4 = sub_21C2472A4();
  result = sub_21C223480(v3, v4 & 1);
  *a1 = result;
  return result;
}

uint64_t sub_21C225134(unint64_t a1)
{
  unint64_t *v1;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;

  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v3 = sub_21C2488B8();
    swift_bridgeObjectRelease();
  }
  else
  {
    v3 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v4 = *v1;
  if (*v1 >> 62)
  {
    swift_bridgeObjectRetain();
    v5 = sub_21C2488B8();
    swift_bridgeObjectRelease();
    v6 = v5 + v3;
    if (!__OFADD__(v5, v3))
      goto LABEL_5;
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v5 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
  v6 = v5 + v3;
  if (__OFADD__(v5, v3))
    goto LABEL_23;
LABEL_5:
  v4 = *v1;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *v1 = v4;
  v5 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v4 & 0x8000000000000000) == 0 && (v4 & 0x4000000000000000) == 0)
  {
    v8 = v4 & 0xFFFFFFFFFFFFFF8;
    if (v6 <= *(_QWORD *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      goto LABEL_15;
    v5 = 1;
  }
  if (v4 >> 62)
    goto LABEL_25;
  v9 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    if (v9 <= v6)
      v9 = v6;
    swift_bridgeObjectRetain();
    v4 = MEMORY[0x2207769A8](v5, v9, 1, v4);
    swift_bridgeObjectRelease();
    *v1 = v4;
    v8 = v4 & 0xFFFFFFFFFFFFFF8;
LABEL_15:
    result = sub_21C2252EC(v8 + 8 * *(_QWORD *)(v8 + 16) + 32, (*(_QWORD *)(v8 + 24) >> 1) - *(_QWORD *)(v8 + 16), a1);
    if (v11 >= v3)
      break;
LABEL_24:
    __break(1u);
LABEL_25:
    swift_bridgeObjectRetain();
    v9 = sub_21C2488B8();
    swift_bridgeObjectRelease();
  }
  if (v11 < 1)
    goto LABEL_19;
  v12 = *(_QWORD *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v13 = __OFADD__(v12, v11);
  v14 = v12 + v11;
  if (!v13)
  {
    *(_QWORD *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10) = v14;
LABEL_19:
    swift_bridgeObjectRelease();
    return sub_21C24857C();
  }
  __break(1u);
  return result;
}

uint64_t sub_21C2252EC(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t i;
  void (*v12)(_QWORD *);
  id *v13;
  id v14;
  uint64_t result;
  void (*v16[4])(id *);

  v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    v7 = sub_21C2488B8();
    swift_bridgeObjectRelease();
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_19;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    v10 = sub_21C2488B8();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_21C1E78E4(&qword_25524BF78, &qword_25524BF70, MEMORY[0x24BEE12E0]);
        swift_bridgeObjectRetain();
        for (i = 0; i != v7; ++i)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_25524BF70);
          v12 = sub_21C2254F8(v16, i, a3);
          v14 = *v13;
          ((void (*)(void (**)(id *), _QWORD))v12)(v16, 0);
          *(_QWORD *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v9 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_21C226080();
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  result = sub_21C2488E8();
  __break(1u);
  return result;
}

void (*sub_21C2254F8(void (**a1)(id *a1), unint64_t a2, uint64_t a3))(_QWORD *a1)
{
  void (*v6)(id *);

  v6 = (void (*)(id *))malloc(0x28uLL);
  *a1 = v6;
  *((_QWORD *)v6 + 4) = sub_21C225578(v6, a2, a3);
  return sub_21C22554C;
}

void sub_21C22554C(_QWORD *a1)
{
  void *v1;

  v1 = (void *)*a1;
  (*(void (**)(_QWORD))(*a1 + 32))(*a1);
  free(v1);
}

void (*sub_21C225578(void (*result)(id *a1), unint64_t a2, uint64_t a3))(id *a1)
{
  void (*v3)(id *);
  id v4;

  v3 = result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    v4 = (id)MEMORY[0x22077699C](a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    v4 = *(id *)(a3 + 8 * a2 + 32);
LABEL_5:
    *(_QWORD *)v3 = v4;
    return destroy for PreviewSceneAgent.SceneBehavior;
  }
  __break(1u);
  return result;
}

void *sub_21C2255E4(unint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  id v7;
  void *v8;
  uint64_t v9;
  id v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v16;

  if (a1 >> 62)
    goto LABEL_20;
  v5 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v5; v5 = sub_21C2488B8())
  {
    v6 = 4;
    while (1)
    {
      v7 = (a1 & 0xC000000000000001) != 0 ? (id)MEMORY[0x22077699C](v6 - 4, a1) : *(id *)(a1 + 8 * v6);
      v8 = v7;
      v9 = v6 - 3;
      if (__OFADD__(v6 - 4, 1))
        break;
      v10 = objc_msgSend(v7, sel_bundleIdentifier);
      if (v10)
      {
        v11 = v10;
        v12 = sub_21C248498();
        v14 = v13;

        if (v12 == a2 && v14 == a3)
        {
          swift_bridgeObjectRelease();
LABEL_18:
          swift_bridgeObjectRelease();
          return v8;
        }
        v16 = sub_21C248924();
        swift_bridgeObjectRelease();
        if ((v16 & 1) != 0)
          goto LABEL_18;
      }

      ++v6;
      if (v9 == v5)
        goto LABEL_21;
    }
    __break(1u);
LABEL_20:
    swift_bridgeObjectRetain();
  }
LABEL_21:
  swift_bridgeObjectRelease();
  return 0;
}

id sub_21C225774(uint64_t a1)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  id v11;
  uint64_t v12;
  id v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  id v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD v27[4];
  char v28;
  _QWORD v29[3];
  uint64_t v30;

  v3 = sub_21C2471D8();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (_QWORD *)((char *)v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(v4 + 16))(v6, a1, v3);
  v7 = (*(uint64_t (**)(uint64_t *, uint64_t))(v4 + 88))(v6, v3);
  if (v7 == *MEMORY[0x24BE77550])
  {
    (*(void (**)(uint64_t *, uint64_t))(v4 + 96))(v6, v3);
    v9 = *v6;
    v8 = v6[1];
    v10 = (void *)objc_opt_self();
    v11 = objc_msgSend(v10, sel_allBundles);
    sub_21C226080();
    v12 = sub_21C248564();

    v13 = objc_msgSend(v10, sel_allFrameworks);
    v14 = sub_21C248564();

    v29[0] = v12;
    sub_21C225134(v14);
    v15 = v29[0];
    swift_bridgeObjectRetain();
    v3 = (uint64_t)sub_21C2255E4(v15, v9, v8);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v3)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_21C225FC4();
      swift_allocError();
      *(_QWORD *)v24 = v9;
      *(_QWORD *)(v24 + 8) = v8;
      *(_QWORD *)(v24 + 16) = 0;
      *(_QWORD *)(v24 + 24) = 0;
      *(_BYTE *)(v24 + 32) = 0;
      swift_willThrow();
    }
  }
  else if (v7 == *MEMORY[0x24BE77558])
  {
    (*(void (**)(uint64_t *, uint64_t))(v4 + 96))(v6, v3);
    v17 = *v6;
    v16 = v6[1];
    v18 = sub_21C1FBEBC();
    if (v1)
    {
      v27[0] = v17;
      v27[1] = v16;
      v27[2] = 0;
      v27[3] = 0;
      v28 = 1;
      v19 = v1;
      sub_21C22603C();
      sub_21C247940();

      swift_bridgeObjectRelease();
      v3 = v30;
      v20 = __swift_project_boxed_opaque_existential_1(v29, v30);
      v21 = *(_QWORD *)(v3 - 8);
      MEMORY[0x24BDAC7A8](v20);
      v23 = (char *)v27 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *))(v21 + 16))(v23);
      if (sub_21C248900())
      {
        (*(void (**)(char *, uint64_t))(v21 + 8))(v23, v3);
      }
      else
      {
        swift_allocError();
        (*(void (**)(uint64_t, char *, uint64_t))(v21 + 32))(v25, v23, v3);
      }
      swift_willThrow();

      __swift_destroy_boxed_opaque_existential_1((uint64_t)v29);
    }
    else
    {
      v3 = (uint64_t)v18;
      swift_bridgeObjectRelease();
    }
  }
  else if (v7 == *MEMORY[0x24BE77548])
  {
    return objc_msgSend((id)objc_opt_self(), sel_mainBundle);
  }
  else
  {
    sub_21C2478D4();
    sub_21C247A30();
    sub_21C1FBD14(&qword_25524AC28, (uint64_t (*)(uint64_t))MEMORY[0x24BE769E0], MEMORY[0x24BE769E8]);
    swift_allocError();
    sub_21C247A24();
    swift_willThrow();
    (*(void (**)(uint64_t *, uint64_t))(v4 + 8))(v6, v3);
  }
  return (id)v3;
}

void *sub_21C225B7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  uint64_t v4;
  id v7;
  void *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  const char *v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  char *v19;
  uint64_t v20;
  char __path[8];
  uint64_t v22;

  v7 = sub_21C225774(a3);
  if (!v4)
  {
    v9 = v7;
    v10 = objc_msgSend(v7, sel_executablePath);
    if (!v10)
    {
      sub_21C225FC4();
      swift_allocError();
      *(_QWORD *)v17 = v9;
      *(_QWORD *)(v17 + 8) = 0;
      *(_QWORD *)(v17 + 16) = 0;
      *(_QWORD *)(v17 + 24) = 0;
      *(_BYTE *)(v17 + 32) = 2;
      swift_willThrow();
      return v3;
    }
    v3 = v10;
    v11 = sub_21C248498();
    v13 = v12;

    if ((v13 & 0x1000000000000000) != 0 || !(v13 & 0x2000000000000000 | v11 & 0x1000000000000000))
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_25524BF58);
      sub_21C248810();
      v15 = *(void **)__path;
      if (*(_QWORD *)__path)
        goto LABEL_13;
    }
    else
    {
      if ((v13 & 0x2000000000000000) == 0)
      {
        if ((v11 & 0x1000000000000000) != 0)
          v14 = (const char *)((v13 & 0xFFFFFFFFFFFFFFFLL) + 32);
        else
          v14 = (const char *)sub_21C248864();
        v3 = 0;
        sub_21C224A74(v14, __path);
        v15 = *(void **)__path;
        if (!*(_QWORD *)__path)
          goto LABEL_10;
LABEL_13:
        v18 = (void *)MEMORY[0x24BDAC7A8](v15);
        if ((a2 & 0x1000000000000000) != 0 || !(a2 & 0x2000000000000000 | a1 & 0x1000000000000000))
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_25524BF58);
          sub_21C248810();
          v3 = *(void **)__path;
          if (*(_QWORD *)__path)
          {
LABEL_21:
            swift_bridgeObjectRelease();

            return v3;
          }
        }
        else
        {
          if ((a2 & 0x2000000000000000) != 0)
          {
            *(_QWORD *)__path = a1;
            v22 = a2 & 0xFFFFFFFFFFFFFFLL;
            v3 = dlsym(v18, __path);
          }
          else
          {
            if ((a1 & 0x1000000000000000) != 0)
              v19 = (char *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 32);
            else
              v19 = (char *)sub_21C248864();
            sub_21C226008(v19, __path);
            v3 = *(void **)__path;
          }
          if (v3)
            goto LABEL_21;
        }
        sub_21C225FC4();
        swift_allocError();
        *(_QWORD *)v20 = a1;
        *(_QWORD *)(v20 + 8) = a2;
        *(_QWORD *)(v20 + 16) = v11;
        *(_QWORD *)(v20 + 24) = v13;
        *(_BYTE *)(v20 + 32) = 4;
        swift_bridgeObjectRetain();
        goto LABEL_26;
      }
      *(_QWORD *)__path = v11;
      v22 = v13 & 0xFFFFFFFFFFFFFFLL;
      v15 = dlopen(__path, 2);
      if (v15)
        goto LABEL_13;
    }
LABEL_10:
    sub_21C225FC4();
    swift_allocError();
    *(_QWORD *)v16 = v11;
    *(_QWORD *)(v16 + 8) = v13;
    *(_QWORD *)(v16 + 16) = 0;
    *(_QWORD *)(v16 + 24) = 0;
    *(_BYTE *)(v16 + 32) = 3;
LABEL_26:
    swift_willThrow();

  }
  return v3;
}

uint64_t sub_21C225E60(uint64_t a1)
{
  uint64_t v1;

  return sub_21C224490(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_21C225E78()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_21C225E9C()
{
  return sub_21C2240D4();
}

uint64_t block_copy_helper(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper()
{
  return swift_release();
}

uint64_t sub_21C225EBC(uint64_t a1)
{
  uint64_t *v1;

  return sub_21C2241A8(a1, v1[2], v1[3], v1[4]);
}

uint64_t type metadata accessor for CFunctionEntryPoint.UpdateState.Phase(uint64_t a1)
{
  return sub_21C1F2E98(a1, (uint64_t *)&unk_25524C000);
}

uint64_t type metadata accessor for CFunctionEntryPoint.UpdateState(uint64_t a1)
{
  return sub_21C1F2E98(a1, qword_25524C0A0);
}

uint64_t sub_21C225F00(uint64_t a1, uint64_t a2)
{
  uint64_t updated;

  updated = type metadata accessor for CFunctionEntryPoint.UpdateState.Phase(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(updated - 8) + 16))(a2, a1, updated);
  return a2;
}

uint64_t sub_21C225F44(uint64_t a1)
{
  uint64_t updated;

  updated = type metadata accessor for CFunctionEntryPoint.UpdateState.Phase(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(updated - 8) + 8))(a1, updated);
  return a1;
}

uint64_t sub_21C225F80(uint64_t a1, uint64_t a2)
{
  uint64_t updated;

  updated = type metadata accessor for CFunctionEntryPoint.UpdateState.Phase(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(updated - 8) + 40))(a2, a1, updated);
  return a2;
}

unint64_t sub_21C225FC4()
{
  unint64_t result;

  result = qword_25524BF50;
  if (!qword_25524BF50)
  {
    result = MEMORY[0x22077702C](&unk_21C24B674, &type metadata for CFunctionEntryPoint.LoadError);
    atomic_store(result, (unint64_t *)&qword_25524BF50);
  }
  return result;
}

void *sub_21C226008@<X0>(char *__symbol@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  void *result;

  result = dlsym(*(void **)(v2 + 16), __symbol);
  *a2 = result;
  return result;
}

unint64_t sub_21C22603C()
{
  unint64_t result;

  result = qword_25524BF60;
  if (!qword_25524BF60)
  {
    result = MEMORY[0x22077702C](&unk_21C24B5DC, &type metadata for CFunctionEntryPoint.LoadError);
    atomic_store(result, (unint64_t *)&qword_25524BF60);
  }
  return result;
}

unint64_t sub_21C226080()
{
  unint64_t result;

  result = qword_25524BF68;
  if (!qword_25524BF68)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_25524BF68);
  }
  return result;
}

uint64_t sub_21C2260BC()
{
  return sub_21C2247B4();
}

void sub_21C2260C4(uint64_t a1)
{
  sub_21C224884(a1);
}

id sub_21C2260DC(id result, id a2, uint64_t a3, uint64_t a4, char a5)
{
  switch(a5)
  {
    case 0:
    case 1:
    case 3:
      goto LABEL_2;
    case 2:
      result = result;
      break;
    case 4:
      swift_bridgeObjectRetain();
LABEL_2:
      result = (id)swift_bridgeObjectRetain();
      break;
    default:
      return result;
  }
  return result;
}

void destroy for CFunctionEntryPoint.LoadError(uint64_t a1)
{
  sub_21C226150(*(void **)a1, *(id *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_BYTE *)(a1 + 32));
}

void sub_21C226150(void *a1, id a2, uint64_t a3, uint64_t a4, char a5)
{
  switch(a5)
  {
    case 0:
    case 1:
    case 3:
      goto LABEL_2;
    case 2:

      break;
    case 4:
      swift_bridgeObjectRelease();
LABEL_2:
      swift_bridgeObjectRelease();
      break;
    default:
      return;
  }
}

uint64_t initializeWithCopy for CFunctionEntryPoint.LoadError(uint64_t a1, uint64_t a2)
{
  id v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  char v7;

  v3 = *(id *)a2;
  v4 = *(void **)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_BYTE *)(a2 + 32);
  sub_21C2260DC(*(id *)a2, v4, v5, v6, v7);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_BYTE *)(a1 + 32) = v7;
  return a1;
}

uint64_t assignWithCopy for CFunctionEntryPoint.LoadError(uint64_t a1, uint64_t a2)
{
  id v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  char v12;

  v3 = *(id *)a2;
  v4 = *(void **)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_BYTE *)(a2 + 32);
  sub_21C2260DC(*(id *)a2, v4, v5, v6, v7);
  v8 = *(void **)a1;
  v9 = *(void **)(a1 + 8);
  v10 = *(_QWORD *)(a1 + 16);
  v11 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  v12 = *(_BYTE *)(a1 + 32);
  *(_BYTE *)(a1 + 32) = v7;
  sub_21C226150(v8, v9, v10, v11, v12);
  return a1;
}

uint64_t assignWithTake for CFunctionEntryPoint.LoadError(uint64_t a1, uint64_t a2)
{
  char v3;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  __int128 v8;
  char v9;

  v3 = *(_BYTE *)(a2 + 32);
  v4 = *(void **)a1;
  v6 = *(void **)(a1 + 8);
  v5 = *(_QWORD *)(a1 + 16);
  v7 = *(_QWORD *)(a1 + 24);
  v8 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v8;
  v9 = *(_BYTE *)(a1 + 32);
  *(_BYTE *)(a1 + 32) = v3;
  sub_21C226150(v4, v6, v5, v7, v9);
  return a1;
}

uint64_t getEnumTagSinglePayload for CFunctionEntryPoint.LoadError(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFC && *(_BYTE *)(a1 + 33))
    return (*(_DWORD *)a1 + 252);
  v3 = *(unsigned __int8 *)(a1 + 32);
  if (v3 <= 4)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for CFunctionEntryPoint.LoadError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFB)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_BYTE *)(result + 32) = 0;
    *(_QWORD *)result = a2 - 252;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFC)
      *(_BYTE *)(result + 33) = 1;
  }
  else
  {
    if (a3 >= 0xFC)
      *(_BYTE *)(result + 33) = 0;
    if (a2)
      *(_BYTE *)(result + 32) = -(char)a2;
  }
  return result;
}

uint64_t sub_21C226358(uint64_t result, char a2)
{
  *(_BYTE *)(result + 32) = a2;
  return result;
}

ValueMetadata *type metadata accessor for CFunctionEntryPoint.LoadError()
{
  return &type metadata for CFunctionEntryPoint.LoadError;
}

uint64_t *sub_21C226370(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  int EnumCaseMultiPayload;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_25524BF40);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(a1, a2, v11);
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload == 1)
    {
      *a1 = *a2;
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(_QWORD *)(v5 + 64));
    }
    else
    {
      v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_25524BF38);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
      v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_25524BF48);
      *((_BYTE *)a1 + *(int *)(v9 + 48)) = *((_BYTE *)a2 + *(int *)(v9 + 48));
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_21C2264A4(uint64_t a1)
{
  uint64_t result;
  uint64_t *v3;
  uint64_t v4;

  result = swift_getEnumCaseMultiPayload();
  if ((_DWORD)result == 2)
  {
    v3 = &qword_25524BF40;
LABEL_6:
    v4 = __swift_instantiateConcreteTypeFromMangledName(v3);
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  }
  if ((_DWORD)result != 1)
  {
    if ((_DWORD)result)
      return result;
    v3 = &qword_25524BF38;
    goto LABEL_6;
  }
  return swift_bridgeObjectRelease();
}

_QWORD *sub_21C22651C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_25524BF40);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(a1, a2, v9);
    swift_storeEnumTagMultiPayload();
  }
  else if (EnumCaseMultiPayload == 1)
  {
    *a1 = *a2;
    swift_bridgeObjectRetain();
    swift_storeEnumTagMultiPayload();
  }
  else if (EnumCaseMultiPayload)
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_25524BF38);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_25524BF48);
    *((_BYTE *)a1 + *(int *)(v8 + 48)) = *((_BYTE *)a2 + *(int *)(v8 + 48));
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_QWORD *sub_21C226628(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  if (a1 != a2)
  {
    sub_21C225F44((uint64_t)a1);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_25524BF40);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(a1, a2, v9);
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload == 1)
    {
      *a1 = *a2;
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
    else
    {
      v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_25524BF38);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
      v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_25524BF48);
      *((_BYTE *)a1 + *(int *)(v8 + 48)) = *((_BYTE *)a2 + *(int *)(v8 + 48));
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

void *sub_21C226744(void *a1, const void *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_25524BF40);
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(a1, a2, v9);
    swift_storeEnumTagMultiPayload();
  }
  else if (EnumCaseMultiPayload)
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_25524BF38);
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_25524BF48);
    *((_BYTE *)a1 + *(int *)(v8 + 48)) = *((_BYTE *)a2 + *(int *)(v8 + 48));
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *sub_21C226828(void *a1, const void *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  if (a1 != a2)
  {
    sub_21C225F44((uint64_t)a1);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_25524BF40);
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(a1, a2, v9);
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
    else
    {
      v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_25524BF38);
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
      v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_25524BF48);
      *((_BYTE *)a1 + *(int *)(v8 + 48)) = *((_BYTE *)a2 + *(int *)(v8 + 48));
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

void sub_21C22691C()
{
  unint64_t v0;
  uint64_t v1;
  unint64_t v2;
  char v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;

  sub_21C2269BC();
  if (v0 <= 0x3F)
  {
    swift_getTupleTypeLayout2();
    v4 = &v3;
    v5 = MEMORY[0x24BEE0158] + 64;
    sub_21C226A2C();
    if (v2 <= 0x3F)
    {
      v6 = *(_QWORD *)(v1 - 8) + 64;
      swift_initEnumMetadataMultiPayload();
    }
  }
}

void sub_21C2269BC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25524C010)
  {
    sub_21C247880();
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255249D90);
    v0 = sub_21C248618();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25524C010);
  }
}

void sub_21C226A2C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25524C018[0])
  {
    sub_21C247880();
    v0 = sub_21C2470C4();
    if (!v1)
      atomic_store(v0, qword_25524C018);
  }
}

uint64_t *sub_21C226A88(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t updated;
  int EnumCaseMultiPayload;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v11 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v11 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    updated = type metadata accessor for CFunctionEntryPoint.UpdateState.Phase(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_25524BF40);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(a1, a2, v12);
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload == 1)
    {
      *a1 = *a2;
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(updated - 8) + 64));
    }
    else
    {
      v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_25524BF38);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(a1, a2, v9);
      v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_25524BF48);
      *((_BYTE *)a1 + *(int *)(v10 + 48)) = *((_BYTE *)a2 + *(int *)(v10 + 48));
      swift_storeEnumTagMultiPayload();
    }
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
  }
  return a1;
}

uint64_t sub_21C226BD8(uint64_t a1)
{
  uint64_t result;
  uint64_t *v3;
  uint64_t v4;

  type metadata accessor for CFunctionEntryPoint.UpdateState.Phase(0);
  result = swift_getEnumCaseMultiPayload();
  if ((_DWORD)result == 2)
  {
    v3 = &qword_25524BF40;
LABEL_6:
    v4 = __swift_instantiateConcreteTypeFromMangledName(v3);
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  }
  if ((_DWORD)result != 1)
  {
    if ((_DWORD)result)
      return result;
    v3 = &qword_25524BF38;
    goto LABEL_6;
  }
  return swift_bridgeObjectRelease();
}

_QWORD *sub_21C226C60(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t updated;
  int EnumCaseMultiPayload;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  updated = type metadata accessor for CFunctionEntryPoint.UpdateState.Phase(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_25524BF40);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(a1, a2, v10);
    swift_storeEnumTagMultiPayload();
  }
  else if (EnumCaseMultiPayload == 1)
  {
    *a1 = *a2;
    swift_bridgeObjectRetain();
    swift_storeEnumTagMultiPayload();
  }
  else if (EnumCaseMultiPayload)
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(updated - 8) + 64));
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_25524BF38);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
    v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_25524BF48);
    *((_BYTE *)a1 + *(int *)(v9 + 48)) = *((_BYTE *)a2 + *(int *)(v9 + 48));
    swift_storeEnumTagMultiPayload();
  }
  *(_QWORD *)((char *)a1 + *(int *)(a3 + 20)) = *(_QWORD *)((char *)a2 + *(int *)(a3 + 20));
  return a1;
}

_QWORD *sub_21C226D84(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t updated;
  int EnumCaseMultiPayload;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  if (a1 != a2)
  {
    sub_21C225F44((uint64_t)a1);
    updated = type metadata accessor for CFunctionEntryPoint.UpdateState.Phase(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_25524BF40);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(a1, a2, v10);
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload == 1)
    {
      *a1 = *a2;
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(updated - 8) + 64));
    }
    else
    {
      v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_25524BF38);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
      v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_25524BF48);
      *((_BYTE *)a1 + *(int *)(v9 + 48)) = *((_BYTE *)a2 + *(int *)(v9 + 48));
      swift_storeEnumTagMultiPayload();
    }
  }
  *(_QWORD *)((char *)a1 + *(int *)(a3 + 20)) = *(_QWORD *)((char *)a2 + *(int *)(a3 + 20));
  return a1;
}

char *sub_21C226EB8(char *a1, char *a2, uint64_t a3)
{
  uint64_t updated;
  int EnumCaseMultiPayload;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  updated = type metadata accessor for CFunctionEntryPoint.UpdateState.Phase(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_25524BF40);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(a1, a2, v10);
    swift_storeEnumTagMultiPayload();
  }
  else if (EnumCaseMultiPayload)
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(updated - 8) + 64));
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_25524BF38);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a1, a2, v8);
    v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_25524BF48);
    a1[*(int *)(v9 + 48)] = a2[*(int *)(v9 + 48)];
    swift_storeEnumTagMultiPayload();
  }
  *(_QWORD *)&a1[*(int *)(a3 + 20)] = *(_QWORD *)&a2[*(int *)(a3 + 20)];
  return a1;
}

char *sub_21C226FB4(char *a1, char *a2, uint64_t a3)
{
  uint64_t updated;
  int EnumCaseMultiPayload;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  if (a1 != a2)
  {
    sub_21C225F44((uint64_t)a1);
    updated = type metadata accessor for CFunctionEntryPoint.UpdateState.Phase(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_25524BF40);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(a1, a2, v10);
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(updated - 8) + 64));
    }
    else
    {
      v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_25524BF38);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a1, a2, v8);
      v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_25524BF48);
      a1[*(int *)(v9 + 48)] = a2[*(int *)(v9 + 48)];
      swift_storeEnumTagMultiPayload();
    }
  }
  *(_QWORD *)&a1[*(int *)(a3 + 20)] = *(_QWORD *)&a2[*(int *)(a3 + 20)];
  return a1;
}

uint64_t sub_21C2270C0()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_21C2270CC(uint64_t a1, uint64_t a2)
{
  uint64_t updated;

  updated = type metadata accessor for CFunctionEntryPoint.UpdateState.Phase(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(updated - 8) + 48))(a1, a2, updated);
}

uint64_t sub_21C227108()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_21C227114(uint64_t a1, uint64_t a2)
{
  uint64_t updated;

  updated = type metadata accessor for CFunctionEntryPoint.UpdateState.Phase(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(updated - 8) + 56))(a1, a2, a2, updated);
}

uint64_t sub_21C227154()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for CFunctionEntryPoint.UpdateState.Phase(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unint64_t sub_21C2271D0()
{
  unint64_t result;

  result = qword_25524C0D8;
  if (!qword_25524C0D8)
  {
    result = MEMORY[0x22077702C](&unk_21C24B594, &type metadata for CFunctionEntryPoint.LoadError);
    atomic_store(result, (unint64_t *)&qword_25524C0D8);
  }
  return result;
}

unint64_t sub_21C227218()
{
  unint64_t result;

  result = qword_25524C0E0;
  if (!qword_25524C0E0)
  {
    result = MEMORY[0x22077702C](&unk_21C24B56C, &type metadata for CFunctionEntryPoint.LoadError);
    atomic_store(result, (unint64_t *)&qword_25524C0E0);
  }
  return result;
}

uint64_t sub_21C22725C(uint64_t a1)
{
  sub_21C226150(*(void **)a1, *(id *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_BYTE *)(a1 + 32));
  return a1;
}

uint64_t sub_21C227290(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  unint64_t v13;
  char v14;
  unint64_t v15;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v21;
  uint64_t v22;

  v3 = v2;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_255249D80);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_21C247808();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(a1, 1, v9) == 1)
  {
    sub_21C1F03B0(a1, &qword_255249D80);
    v13 = sub_21C1F61E4(a2);
    if ((v14 & 1) != 0)
    {
      v15 = v13;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v17 = *v3;
      v22 = *v3;
      *v3 = 0x8000000000000000;
      if (!isUniquelyReferenced_nonNull_native)
      {
        sub_21C1FA8FC();
        v17 = v22;
      }
      (*(void (**)(char *, unint64_t, uint64_t))(v10 + 32))(v8, *(_QWORD *)(v17 + 56) + *(_QWORD *)(v10 + 72) * v15, v9);
      sub_21C22B07C(v15, v17);
      *v3 = v17;
      swift_bridgeObjectRelease();
      v18 = 0;
    }
    else
    {
      v18 = 1;
    }
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v8, v18, 1, v9);
    return sub_21C1F03B0((uint64_t)v8, &qword_255249D80);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 32))(v12, a1, v9);
    v19 = swift_isUniquelyReferenced_nonNull_native();
    v22 = *v3;
    *v3 = 0x8000000000000000;
    sub_21C1F937C((uint64_t)v12, a2, v19);
    *v3 = v22;
    return swift_bridgeObjectRelease();
  }
}

unint64_t sub_21C227468(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t *v4;
  char isUniquelyReferenced_nonNull_native;
  unint64_t result;
  char v10;
  unint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v4 = v3;
  if (a1)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v14 = *v3;
    *v3 = 0x8000000000000000;
    sub_21C1F9634(a1, a2, a3, isUniquelyReferenced_nonNull_native);
    *v3 = v14;
  }
  else
  {
    result = sub_21C1F61E4(a3);
    if ((v10 & 1) == 0)
      return result;
    v11 = result;
    v12 = swift_isUniquelyReferenced_nonNull_native();
    v13 = *v3;
    v15 = *v4;
    *v4 = 0x8000000000000000;
    if (!v12)
    {
      sub_21C1FAB1C();
      v13 = v15;
    }
    sub_21C22B238(v11, v13);
    *v4 = v13;
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_21C227544(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  __int128 v9[2];

  if (*(_QWORD *)(a1 + 24))
  {
    sub_21C1EB66C((__int128 *)a1, (uint64_t)v9);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v8 = *v2;
    *v2 = 0x8000000000000000;
    sub_21C1F9768(v9, a2, isUniquelyReferenced_nonNull_native);
    *v2 = v8;
    swift_bridgeObjectRelease();
    v5 = sub_21C247094();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(a2, v5);
  }
  else
  {
    sub_21C1F03B0(a1, &qword_25524C1B8);
    sub_21C22A8D0(a2, (uint64_t)v9);
    v7 = sub_21C247094();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(a2, v7);
    return sub_21C1F03B0((uint64_t)v9, &qword_25524C1B8);
  }
}

uint64_t sub_21C227628(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t updated;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v3 = v2;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_25524C198);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  updated = type metadata accessor for EntryPointIndex.UpdateState(0);
  MEMORY[0x24BDAC7A8](updated);
  v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t))(v12 + 48))(a1, 1) == 1)
  {
    sub_21C1F03B0(a1, &qword_25524C198);
    sub_21C22A9F0(a2, (uint64_t)v8);
    v13 = sub_21C2472E0();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(a2, v13);
    return sub_21C1F03B0((uint64_t)v8, &qword_25524C198);
  }
  else
  {
    sub_21C1FBAFC(a1, (uint64_t)v11);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v18 = *v3;
    *v3 = 0x8000000000000000;
    sub_21C1F9C40((uint64_t)v11, a2, isUniquelyReferenced_nonNull_native);
    *v3 = v18;
    swift_bridgeObjectRelease();
    v16 = sub_21C2472E0();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(a2, v16);
  }
}

uint64_t sub_21C2277A0(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  __int128 v9[2];

  if (*(_QWORD *)(a1 + 24))
  {
    sub_21C1EB66C((__int128 *)a1, (uint64_t)v9);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v8 = *v2;
    *v2 = 0x8000000000000000;
    sub_21C1F9DC0(v9, a2, isUniquelyReferenced_nonNull_native);
    *v2 = v8;
    swift_bridgeObjectRelease();
    v5 = sub_21C2472E0();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(a2, v5);
  }
  else
  {
    sub_21C1F03B0(a1, &qword_25524C1A0);
    sub_21C22ABFC(a2, (uint64_t)v9);
    v7 = sub_21C2472E0();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(a2, v7);
    return sub_21C1F03B0((uint64_t)v9, &qword_25524C1A0);
  }
}

uint64_t sub_21C227884(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  __int128 v9[2];

  if (*(_QWORD *)(a1 + 24))
  {
    sub_21C1EB66C((__int128 *)a1, (uint64_t)v9);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v8 = *v2;
    *v2 = 0x8000000000000000;
    sub_21C1FA0DC(v9, a2, isUniquelyReferenced_nonNull_native);
    *v2 = v8;
    swift_bridgeObjectRelease();
    v5 = sub_21C247574();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(a2, v5);
  }
  else
  {
    sub_21C1F03B0(a1, &qword_25524C1B0);
    sub_21C22AD1C(a2, (uint64_t)v9);
    v7 = sub_21C247574();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(a2, v7);
    return sub_21C1F03B0((uint64_t)v9, &qword_25524C1B0);
  }
}

uint64_t sub_21C227968(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  __int128 v9[2];

  if (*(_QWORD *)(a1 + 24))
  {
    sub_21C1EB66C((__int128 *)a1, (uint64_t)v9);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v8 = *v2;
    *v2 = 0x8000000000000000;
    sub_21C1FA284(v9, a2, isUniquelyReferenced_nonNull_native);
    *v2 = v8;
    swift_bridgeObjectRelease();
    v5 = sub_21C246FB0();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(a2, v5);
  }
  else
  {
    sub_21C1F03B0(a1, &qword_25524C190);
    sub_21C22AE3C(a2, (uint64_t)v9);
    v7 = sub_21C246FB0();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(a2, v7);
    return sub_21C1F03B0((uint64_t)v9, &qword_25524C190);
  }
}

uint64_t sub_21C227A4C(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  __int128 v9[2];

  if (*(_QWORD *)(a1 + 24))
  {
    sub_21C1EB66C((__int128 *)a1, (uint64_t)v9);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v8 = *v2;
    *v2 = 0x8000000000000000;
    sub_21C1FA42C(v9, a2, isUniquelyReferenced_nonNull_native);
    *v2 = v8;
    swift_bridgeObjectRelease();
    v5 = sub_21C2472E0();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(a2, v5);
  }
  else
  {
    sub_21C1F03B0(a1, &qword_25524C1A8);
    sub_21C22AF5C(a2, (uint64_t)v9);
    v7 = sub_21C2472E0();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(a2, v7);
    return sub_21C1F03B0((uint64_t)v9, &qword_25524C1A8);
  }
}

uint64_t sub_21C227B30@<X0>(unint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(char *, uint64_t);
  void (*v27)(char *, char *, uint64_t);
  void (*v28)(char *, _QWORD, uint64_t);
  void (*v29)(char *, char *, uint64_t);
  uint64_t v30;
  void (*v31)(char *, uint64_t);
  uint64_t v32;
  void (*v33)(char *, char *, uint64_t);
  uint64_t v34;
  _QWORD *v35;
  char *v36;
  void (*v37)(char *, uint64_t, uint64_t);
  uint64_t v38;
  void (*v39)(char *, char *, uint64_t);
  uint64_t v40;
  void (*v41)(char *, char *, uint64_t);
  uint64_t v42;
  void (*v43)(char *, uint64_t);
  void (*v44)(char *, uint64_t);
  void (*v45)(uint64_t, char *, uint64_t);
  uint64_t v46;
  uint64_t v48;
  void (*v49)(char *, char *, uint64_t);
  char *v50;
  _QWORD *v51;
  uint64_t v52;
  char *v53;
  void (*v54)(char *, uint64_t, uint64_t);
  void (*v55)(char *, char *, uint64_t);
  uint64_t v56;
  uint64_t v57;

  v2 = _s9TransformVMa_1(0);
  MEMORY[0x24BDAC7A8](v2);
  v53 = (char *)&v48 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_21C2470E8();
  v51 = *(_QWORD **)(v4 - 8);
  v52 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v50 = (char *)&v48 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = _s9TransformVMa_0(0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v48 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_21C247ED4();
  v55 = *(void (**)(char *, char *, uint64_t))(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v48 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_21C247094();
  v56 = *(_QWORD *)(v12 - 8);
  v57 = v12;
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v48 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = _s9TransformVMa(0);
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v48 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_21C247DB4();
  v19 = *(_QWORD *)(v18 - 8);
  MEMORY[0x24BDAC7A8](v18);
  v21 = (char *)&v48 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  *a1 = sub_21C1EBBA0(MEMORY[0x24BEE4AF8]);
  v22 = *MEMORY[0x24BDEB3F0];
  v54 = *(void (**)(char *, uint64_t, uint64_t))(v19 + 104);
  v54(v21, v22, v18);
  v49 = *(void (**)(char *, char *, uint64_t))(v19 + 32);
  v49(v17, v21, v18);
  sub_21C246FBC();
  sub_21C229354((uint64_t)v17, (uint64_t)v14, _s9TransformVMa, &qword_25524C1D0, (uint64_t)&unk_21C24BA78);
  v23 = v57;
  v56 = *(_QWORD *)(v56 + 8);
  ((void (*)(char *, uint64_t))v56)(v14, v57);
  sub_21C1E71CC((uint64_t)v17, _s9TransformVMa);
  v54(v21, *MEMORY[0x24BDEB400], v18);
  v49(v17, v21, v18);
  sub_21C246FC8();
  sub_21C229354((uint64_t)v17, (uint64_t)v14, _s9TransformVMa, &qword_25524C1D0, (uint64_t)&unk_21C24BA78);
  v24 = v23;
  v25 = v23;
  v26 = (void (*)(char *, uint64_t))v56;
  ((void (*)(char *, uint64_t))v56)(v14, v25);
  sub_21C1E71CC((uint64_t)v17, _s9TransformVMa);
  v27 = v55;
  v28 = (void (*)(char *, _QWORD, uint64_t))*((_QWORD *)v55 + 13);
  v28(v11, *MEMORY[0x24BDECF20], v9);
  v29 = (void (*)(char *, char *, uint64_t))*((_QWORD *)v27 + 4);
  v29(v8, v11, v9);
  sub_21C247070();
  sub_21C229354((uint64_t)v8, (uint64_t)v14, _s9TransformVMa_0, &qword_25524C1C8, (uint64_t)&unk_21C24BA94);
  v30 = v24;
  v31 = v26;
  v26(v14, v30);
  sub_21C1E71CC((uint64_t)v8, _s9TransformVMa_0);
  v28(v11, *MEMORY[0x24BDECF08], v9);
  v29(v8, v11, v9);
  sub_21C24704C();
  sub_21C229354((uint64_t)v8, (uint64_t)v14, _s9TransformVMa_0, &qword_25524C1C8, (uint64_t)&unk_21C24BA94);
  v32 = v57;
  v31(v14, v57);
  sub_21C1E71CC((uint64_t)v8, _s9TransformVMa_0);
  v28(v11, *MEMORY[0x24BDECF10], v9);
  v29(v8, v11, v9);
  sub_21C247058();
  sub_21C229354((uint64_t)v8, (uint64_t)v14, _s9TransformVMa_0, &qword_25524C1C8, (uint64_t)&unk_21C24BA94);
  v31(v14, v32);
  sub_21C1E71CC((uint64_t)v8, _s9TransformVMa_0);
  v28(v11, *MEMORY[0x24BDECF00], v9);
  v29(v8, v11, v9);
  sub_21C247040();
  sub_21C229354((uint64_t)v8, (uint64_t)v14, _s9TransformVMa_0, &qword_25524C1C8, (uint64_t)&unk_21C24BA94);
  v31(v14, v32);
  sub_21C1E71CC((uint64_t)v8, _s9TransformVMa_0);
  v28(v11, *MEMORY[0x24BDECF18], v9);
  v29(v8, v11, v9);
  sub_21C247064();
  sub_21C229354((uint64_t)v8, (uint64_t)v14, _s9TransformVMa_0, &qword_25524C1C8, (uint64_t)&unk_21C24BA94);
  v31(v14, v32);
  sub_21C1E71CC((uint64_t)v8, _s9TransformVMa_0);
  v28(v11, *MEMORY[0x24BDECF28], v9);
  v29(v8, v11, v9);
  sub_21C24707C();
  sub_21C229354((uint64_t)v8, (uint64_t)v14, _s9TransformVMa_0, &qword_25524C1C8, (uint64_t)&unk_21C24BA94);
  v31(v14, v32);
  sub_21C1E71CC((uint64_t)v8, _s9TransformVMa_0);
  v28(v11, *MEMORY[0x24BDECF38], v9);
  v55 = v29;
  v29(v8, v11, v9);
  sub_21C247088();
  sub_21C229354((uint64_t)v8, (uint64_t)v14, _s9TransformVMa_0, &qword_25524C1C8, (uint64_t)&unk_21C24BA94);
  v31(v14, v32);
  sub_21C1E71CC((uint64_t)v8, _s9TransformVMa_0);
  v28(v11, *MEMORY[0x24BDECEA0], v9);
  v29(v8, v11, v9);
  sub_21C247004();
  sub_21C229354((uint64_t)v8, (uint64_t)v14, _s9TransformVMa_0, &qword_25524C1C8, (uint64_t)&unk_21C24BA94);
  v31(v14, v32);
  sub_21C1E71CC((uint64_t)v8, _s9TransformVMa_0);
  v28(v11, *MEMORY[0x24BDECEA8], v9);
  v33 = v55;
  v55(v8, v11, v9);
  sub_21C247010();
  sub_21C229354((uint64_t)v8, (uint64_t)v14, _s9TransformVMa_0, &qword_25524C1C8, (uint64_t)&unk_21C24BA94);
  v34 = v57;
  v31(v14, v57);
  sub_21C1E71CC((uint64_t)v8, _s9TransformVMa_0);
  v28(v11, *MEMORY[0x24BDECEC0], v9);
  v33(v8, v11, v9);
  sub_21C24701C();
  sub_21C229354((uint64_t)v8, (uint64_t)v14, _s9TransformVMa_0, &qword_25524C1C8, (uint64_t)&unk_21C24BA94);
  v31(v14, v34);
  sub_21C1E71CC((uint64_t)v8, _s9TransformVMa_0);
  v28(v11, *MEMORY[0x24BDECED0], v9);
  v33(v8, v11, v9);
  sub_21C247028();
  sub_21C229354((uint64_t)v8, (uint64_t)v14, _s9TransformVMa_0, &qword_25524C1C8, (uint64_t)&unk_21C24BA94);
  v31(v14, v34);
  sub_21C1E71CC((uint64_t)v8, _s9TransformVMa_0);
  v28(v11, *MEMORY[0x24BDECEE0], v9);
  v33(v8, v11, v9);
  sub_21C247034();
  sub_21C229354((uint64_t)v8, (uint64_t)v14, _s9TransformVMa_0, &qword_25524C1C8, (uint64_t)&unk_21C24BA94);
  v31(v14, v34);
  sub_21C1E71CC((uint64_t)v8, _s9TransformVMa_0);
  v36 = v50;
  v35 = v51;
  v37 = (void (*)(char *, uint64_t, uint64_t))v51[13];
  v38 = v52;
  v37(v50, *MEMORY[0x24BE77290], v52);
  v54 = v37;
  v39 = (void (*)(char *, char *, uint64_t))v35[2];
  v40 = (uint64_t)v53;
  v39(v53, v36, v38);
  v41 = (void (*)(char *, char *, uint64_t))v35[7];
  ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v41)(v40, 0, 1, v38);
  v55 = v41;
  v51 = (_QWORD *)v35[1];
  ((void (*)(char *, uint64_t))v51)(v36, v38);
  sub_21C246FF8();
  sub_21C229354(v40, (uint64_t)v14, _s9TransformVMa_1, &qword_25524C1C0, (uint64_t)&unk_21C24BAB0);
  v42 = v57;
  ((void (*)(char *, uint64_t))v56)(v14, v57);
  sub_21C1E71CC(v40, _s9TransformVMa_1);
  v37(v36, *MEMORY[0x24BE77288], v38);
  v39((char *)v40, v36, v38);
  ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v41)(v40, 0, 1, v38);
  v43 = (void (*)(char *, uint64_t))v51;
  ((void (*)(char *, uint64_t))v51)(v36, v38);
  sub_21C246FEC();
  sub_21C229354(v40, (uint64_t)v14, _s9TransformVMa_1, &qword_25524C1C0, (uint64_t)&unk_21C24BAB0);
  v44 = (void (*)(char *, uint64_t))v56;
  ((void (*)(char *, uint64_t))v56)(v14, v42);
  sub_21C1E71CC(v40, _s9TransformVMa_1);
  v54(v36, *MEMORY[0x24BE77278], v38);
  v45 = (void (*)(uint64_t, char *, uint64_t))v39;
  v39((char *)v40, v36, v38);
  ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v55)(v40, 0, 1, v38);
  v43(v36, v38);
  sub_21C246FD4();
  sub_21C229354(v40, (uint64_t)v14, _s9TransformVMa_1, &qword_25524C1C0, (uint64_t)&unk_21C24BAB0);
  v46 = v57;
  v44(v14, v57);
  sub_21C1E71CC(v40, _s9TransformVMa_1);
  v54(v36, *MEMORY[0x24BE77280], v38);
  v45(v40, v36, v38);
  ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v55)(v40, 0, 1, v38);
  v43(v36, v38);
  sub_21C246FE0();
  sub_21C229354(v40, (uint64_t)v14, _s9TransformVMa_1, &qword_25524C1C0, (uint64_t)&unk_21C24BAB0);
  v44(v14, v46);
  return sub_21C1E71CC(v40, _s9TransformVMa_1);
}

uint64_t sub_21C2285AC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t result;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(uint64_t, uint64_t);
  uint64_t (*v34)(char *, uint64_t, uint64_t);
  int v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  int v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  void (*v63)(char *, uint64_t, uint64_t);
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  __int128 v79;
  uint64_t v80;
  uint64_t v81;
  _BYTE v82[24];
  uint64_t v83;
  uint64_t v84;
  __int128 v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;

  v71 = a2;
  v88 = sub_21C2470E8();
  v74 = *(_QWORD *)(v88 - 8);
  MEMORY[0x24BDAC7A8](v88);
  v70 = (char *)&v64 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_255249930);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v69 = (uint64_t)&v64 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v68 = (uint64_t)&v64 - v10;
  v11 = MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v64 - v12;
  v14 = MEMORY[0x24BDAC7A8](v11);
  v16 = (char *)&v64 - v15;
  v17 = MEMORY[0x24BDAC7A8](v14);
  v19 = (char *)&v64 - v18;
  v20 = MEMORY[0x24BDAC7A8](v17);
  v22 = (char *)&v64 - v21;
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v64 - v23;
  v25 = *v2;
  swift_bridgeObjectRetain();
  v26 = a1;
  v27 = sub_21C22BEFC(a1, v25);
  result = swift_bridgeObjectRelease();
  if (!v3)
  {
    v72 = v13;
    v65 = v24;
    v66 = 0;
    v67 = v26;
    v29 = *(_QWORD *)(v27 + 16);
    v73 = v27;
    v64 = v29;
    if (v29)
    {
      v30 = v27 + 32;
      swift_bridgeObjectRetain();
      while (1)
      {
        sub_21C1E712C(v30, (uint64_t)&v85);
        v31 = v86;
        v32 = v87;
        __swift_project_boxed_opaque_existential_1(&v85, v86);
        v33 = *(void (**)(uint64_t, uint64_t))(v32 + 24);
        swift_bridgeObjectRetain();
        v33(v31, v32);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v85);
        sub_21C22C094((uint64_t)v22, (uint64_t)v19);
        swift_bridgeObjectRelease();
        v34 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v74 + 48);
        v35 = v34(v19, 1, v88);
        result = sub_21C1F03B0((uint64_t)v19, &qword_255249930);
        if (v35 != 1)
          break;
        v30 += 40;
        if (!--v29)
          goto LABEL_13;
      }
      v36 = v64 + 1;
      v37 = v73;
      v38 = v73 + 40 * v64 - 8;
      v39 = v88;
      while (1)
      {
        if (v36 - 2 >= *(_QWORD *)(v37 + 16))
        {
          __break(1u);
          goto LABEL_21;
        }
        sub_21C1E712C(v38, (uint64_t)&v85);
        v40 = v86;
        v41 = v87;
        __swift_project_boxed_opaque_existential_1(&v85, v86);
        v42 = v40;
        v43 = (uint64_t)v72;
        (*(void (**)(uint64_t, uint64_t))(v41 + 24))(v42, v41);
        sub_21C22C094(v43, (uint64_t)v16);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v85);
        v44 = v34(v16, 1, v39);
        result = sub_21C1F03B0((uint64_t)v16, &qword_255249930);
        if (v44 != 1)
          break;
        --v36;
        v38 -= 40;
        if (v36 < 2)
        {
          __break(1u);
          goto LABEL_13;
        }
      }
      sub_21C1E712C(v38, (uint64_t)&v85);
      v56 = v86;
      v55 = v87;
      __swift_project_boxed_opaque_existential_1(&v85, v86);
      (*(void (**)(uint64_t, uint64_t))(v55 + 24))(v56, v55);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v85);
      v57 = v43;
      v58 = v68;
      sub_21C22C094(v57, v68);
      v59 = v69;
      sub_21C1F03EC(v58, v69, &qword_255249930);
      result = v34((char *)v59, 1, v39);
      v60 = v74;
      v61 = v70;
      if ((_DWORD)result != 1)
      {
        v62 = v39;
        v63 = *(void (**)(char *, uint64_t, uint64_t))(v74 + 32);
        v63(v70, v59, v62);
        sub_21C1F03B0(v58, &qword_255249930);
        v45 = (uint64_t)v65;
        v63(v65, (uint64_t)v61, v62);
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v60 + 56))(v45, 0, 1, v62);
        goto LABEL_14;
      }
LABEL_21:
      __break(1u);
    }
    else
    {
      swift_bridgeObjectRetain();
LABEL_13:
      v45 = (uint64_t)v65;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v74 + 56))(v65, 1, 1, v88);
LABEL_14:
      swift_bridgeObjectRelease();
      v46 = v67;
      v47 = v71;
      v83 = MEMORY[0x24BDEC0B0];
      v84 = MEMORY[0x24BDEC0A0];
      sub_21C1E712C((uint64_t)v82, (uint64_t)&v79);
      v48 = v73;
      if (v64)
      {
        swift_bridgeObjectRetain();
        sub_21C1E712C(v48 + 32, (uint64_t)&v85);
        v49 = v80;
        v50 = v81;
        __swift_project_boxed_opaque_existential_1(&v79, v80);
        v52 = v86;
        v51 = v87;
        __swift_project_boxed_opaque_existential_1(&v85, v86);
        v53 = *(_QWORD *)(v51 + 16);
        v75 = v49;
        v76 = v52;
        v77 = v50;
        v78 = v53;
        type metadata accessor for CompoundViewModifier();
      }
      sub_21C1EB66C(&v79, (uint64_t)&v85);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v82);
      swift_bridgeObjectRelease();
      *v47 = v46;
      v54 = type metadata accessor for RenderEffects(0);
      sub_21C22C094(v45, (uint64_t)v47 + *(int *)(v54 + 20));
      sub_21C1EB66C(&v85, (uint64_t)v47 + *(int *)(v54 + 24));
      return swift_bridgeObjectRetain();
    }
  }
  return result;
}

uint64_t static RenderEffects.== infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  return sub_21C228BF0(*a1, *a2);
}

uint64_t sub_21C228BF0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  unint64_t v12;
  void (*v13)(char *, unint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  void (*v18)(char *, uint64_t);
  BOOL v20;
  uint64_t v22;
  uint64_t v23;

  v4 = sub_21C247094();
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v10 = (char *)&v22 - v9;
  v11 = *(_QWORD *)(a1 + 16);
  if (v11 == *(_QWORD *)(a2 + 16))
  {
    if (!v11 || a1 == a2)
    {
      v17 = 1;
    }
    else
    {
      v12 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
      v22 = *(_QWORD *)(v8 + 72);
      v23 = v8;
      v13 = *(void (**)(char *, unint64_t, uint64_t))(v8 + 16);
      v14 = v11 - 1;
      do
      {
        v15 = a1;
        v13(v10, a1 + v12, v4);
        v16 = a2;
        v13(v7, a2 + v12, v4);
        sub_21C1FBD14(&qword_25524A2C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE77150], MEMORY[0x24BE77168]);
        v17 = sub_21C248480();
        v18 = *(void (**)(char *, uint64_t))(v23 + 8);
        v18(v7, v4);
        v18(v10, v4);
        v20 = v14-- != 0;
        if ((v17 & 1) == 0)
          break;
        v12 += v22;
        a2 = v16;
        a1 = v15;
      }
      while (v20);
    }
  }
  else
  {
    v17 = 0;
  }
  return v17 & 1;
}

uint64_t static RenderEffects.empty.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  char *v7;

  v2 = type metadata accessor for RenderEffects(0);
  v3 = (char *)a1 + *(int *)(v2 + 20);
  v4 = sub_21C2470E8();
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v3, 1, 1, v4);
  v6 = MEMORY[0x24BDEC0A0];
  v7 = (char *)a1 + *(int *)(v2 + 24);
  *((_QWORD *)v7 + 3) = MEMORY[0x24BDEC0B0];
  *((_QWORD *)v7 + 4) = v6;
  *a1 = MEMORY[0x24BEE4AF8];
  return result;
}

uint64_t type metadata accessor for RenderEffects(uint64_t a1)
{
  return sub_21C1F2E98(a1, (uint64_t *)&unk_25524C148);
}

uint64_t RenderEffects.applied<A>(to:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  uint64_t v3;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v12[2];

  v7 = (_QWORD *)(v3 + *(int *)(type metadata accessor for RenderEffects(0) + 24));
  v8 = v7[3];
  v9 = v7[4];
  __swift_project_boxed_opaque_existential_1(v7, v8);
  v10 = sub_21C247EEC();
  a3[3] = v10;
  v12[0] = a2;
  v12[1] = v9;
  a3[4] = MEMORY[0x22077702C](MEMORY[0x24BDED308], v10, v12);
  __swift_allocate_boxed_opaque_existential_1(a3);
  return sub_21C1E7BC8(a1, v8);
}

uint64_t RenderEffects.description.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = sub_21C247094();
  v1 = swift_bridgeObjectRetain();
  v2 = MEMORY[0x2207766C0](v1, v0);
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t sub_21C228F24(uint64_t *a1, uint64_t *a2)
{
  return sub_21C228BF0(*a1, *a2);
}

uint64_t sub_21C228F30()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;

  sub_21C248504();
  v1 = *v0;
  v2 = sub_21C247094();
  MEMORY[0x2207766C0](v1, v2);
  sub_21C248504();
  swift_bridgeObjectRelease();
  sub_21C248504();
  return 0;
}

uint64_t sub_21C228FAC@<X0>(uint64_t a1@<X8>)
{
  return RenderEffectTransform.orientationOverride.getter(a1);
}

uint64_t RenderEffectTransform.orientationOverride.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;

  v2 = sub_21C2470E8();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(a1, 1, 1, v2);
}

uint64_t sub_21C228FFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t TupleTypeMetadata2;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  int v24;
  void (*v25)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v26;
  char *v27;
  char *v28;
  void (*v29)(char *, char *, uint64_t);
  unsigned int (*v30)(char *, uint64_t, uint64_t);
  void (*v31)(char *, uint64_t);
  char v32;
  char *v33;
  char *v34;
  void (*v35)(char *, uint64_t);
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  char *v44;

  v39 = a4;
  v7 = *(_QWORD *)(a2 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v40 = (char *)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_21C248798();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v41 = *(_QWORD *)(TupleTypeMetadata2 - 8);
  v11 = MEMORY[0x24BDAC7A8](TupleTypeMetadata2);
  v42 = (char *)&v37 - v12;
  v13 = *(_QWORD *)(v9 - 8);
  v14 = MEMORY[0x24BDAC7A8](v11);
  v44 = (char *)&v37 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v37 - v17;
  v19 = MEMORY[0x24BDAC7A8](v16);
  v21 = (char *)&v37 - v20;
  MEMORY[0x24BDAC7A8](v19);
  (*(void (**)(char *, uint64_t, uint64_t))(v23 + 16))((char *)&v37 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0), a1, a3);
  v24 = swift_dynamicCast();
  v25 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56);
  v25(v21, v24 ^ 1u, 1, a2);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v18, v43, a2);
  v25(v18, 0, 1, a2);
  v43 = TupleTypeMetadata2;
  v26 = *(int *)(TupleTypeMetadata2 + 48);
  v27 = v42;
  v28 = &v42[v26];
  v29 = *(void (**)(char *, char *, uint64_t))(v13 + 16);
  v29(v42, v21, v9);
  v29(v28, v18, v9);
  v30 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48);
  if (v30(v27, 1, a2) != 1)
  {
    v38 = v13;
    v29(v44, v27, v9);
    if (v30(v28, 1, a2) != 1)
    {
      v33 = v40;
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v40, v28, a2);
      v34 = v44;
      v32 = sub_21C248480();
      v35 = *(void (**)(char *, uint64_t))(v7 + 8);
      v35(v33, a2);
      v31 = *(void (**)(char *, uint64_t))(v38 + 8);
      v31(v18, v9);
      v35(v34, a2);
      v31(v27, v9);
      goto LABEL_8;
    }
    v31 = *(void (**)(char *, uint64_t))(v38 + 8);
    v31(v18, v9);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v44, a2);
    goto LABEL_6;
  }
  v31 = *(void (**)(char *, uint64_t))(v13 + 8);
  v31(v18, v9);
  if (v30(v28, 1, a2) != 1)
  {
LABEL_6:
    (*(void (**)(char *, uint64_t))(v41 + 8))(v27, v43);
    v32 = 0;
    goto LABEL_8;
  }
  v31(v27, v9);
  v32 = 1;
LABEL_8:
  v31(v21, v9);
  return v32 & 1;
}

uint64_t sub_21C229354(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t), unint64_t *a4, uint64_t a5)
{
  uint64_t *v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE *v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *boxed_opaque_existential_1;
  _BYTE *v28;
  _BYTE *v29;
  uint64_t v30;
  _BYTE *v31;
  unint64_t *v32;
  os_log_type_t v33;
  int v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  _BYTE v44[12];
  int v45;
  uint64_t v46;
  uint64_t v47;
  _BYTE *v48;
  _BYTE *v49;
  _BYTE *v50;
  _BYTE *v51;
  unint64_t *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55[5];
  uint64_t v56;
  __int128 v57[2];
  uint64_t v58[3];
  uint64_t v59;
  uint64_t v60;

  v52 = a4;
  v53 = a5;
  v54 = a3(0);
  v9 = MEMORY[0x24BDAC7A8](v54);
  v48 = &v44[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v9);
  v49 = &v44[-v11];
  v12 = sub_21C247CC4();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v51 = &v44[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v15 = sub_21C247094();
  v16 = *(_QWORD *)(v15 - 8);
  v17 = MEMORY[0x24BDAC7A8](v15);
  v50 = &v44[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v17);
  v20 = &v44[-v19];
  v21 = *v5;
  if (!*(_QWORD *)(v21 + 16))
    goto LABEL_5;
  v22 = sub_21C1F62B4(a2);
  if ((v23 & 1) == 0)
    goto LABEL_5;
  v46 = v13;
  v47 = v12;
  sub_21C1E712C(*(_QWORD *)(v21 + 56) + 40 * v22, (uint64_t)v57);
  sub_21C1EB66C(v57, (uint64_t)v58);
  v24 = v59;
  v25 = v60;
  __swift_project_boxed_opaque_existential_1(v58, v59);
  sub_21C1FBD14(v52, a3, v53);
  if ((sub_21C228FFC(a1, v24, v54, v25) & 1) != 0)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v58);
LABEL_5:
    (*(void (**)(_BYTE *, uint64_t, uint64_t))(v16 + 16))(v20, a2, v15);
    v59 = v54;
    v60 = sub_21C1FBD14(v52, a3, v53);
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v58);
    sub_21C1E7170(a1, (uint64_t)boxed_opaque_existential_1, a3);
    return sub_21C227544((uint64_t)v58, (uint64_t)v20);
  }
  v28 = v51;
  sub_21C247C94();
  v29 = v49;
  sub_21C1E7170(a1, (uint64_t)v49, a3);
  v30 = v16;
  v31 = v50;
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v16 + 16))(v50, a2, v15);
  sub_21C1E712C((uint64_t)v58, (uint64_t)v57);
  v32 = (unint64_t *)sub_21C247CB8();
  v33 = sub_21C24872C();
  v34 = v33;
  if (os_log_type_enabled((os_log_t)v32, v33))
  {
    v35 = (uint64_t)v29;
    v36 = swift_slowAlloc();
    v53 = swift_slowAlloc();
    v56 = v53;
    *(_DWORD *)v36 = 136315650;
    v52 = v32;
    v45 = v34;
    sub_21C1E7170(v35, (uint64_t)v48, a3);
    v37 = sub_21C2484E0();
    v55[0] = sub_21C203A90(v37, v38, &v56);
    sub_21C2487A4();
    swift_bridgeObjectRelease();
    sub_21C1E71CC(v35, a3);
    *(_WORD *)(v36 + 12) = 2080;
    sub_21C1FBD14(&qword_25524C0E8, (uint64_t (*)(uint64_t))MEMORY[0x24BE77150], MEMORY[0x24BE77170]);
    v39 = sub_21C2488F4();
    v55[0] = sub_21C203A90(v39, v40, &v56);
    sub_21C2487A4();
    swift_bridgeObjectRelease();
    (*(void (**)(_BYTE *, uint64_t))(v30 + 8))(v31, v15);
    *(_WORD *)(v36 + 22) = 2080;
    sub_21C1E712C((uint64_t)v57, (uint64_t)v55);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2552499D8);
    v41 = sub_21C2484E0();
    v55[0] = sub_21C203A90(v41, v42, &v56);
    sub_21C2487A4();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v57);
    v32 = v52;
    _os_log_impl(&dword_21C1E3000, (os_log_t)v52, (os_log_type_t)v45, "Can't register %s for %s -- already registered: %s", (uint8_t *)v36, 0x20u);
    v43 = v53;
    swift_arrayDestroy();
    MEMORY[0x2207770EC](v43, -1, -1);
    MEMORY[0x2207770EC](v36, -1, -1);
  }
  else
  {
    sub_21C1E71CC((uint64_t)v29, a3);
    (*(void (**)(_BYTE *, uint64_t))(v16 + 8))(v31, v15);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v57);
  }

  (*(void (**)(_BYTE *, uint64_t))(v46 + 8))(v28, v47);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v58);
}

uint64_t RenderEffectRegistry.register<A>(_:for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(char *, uint64_t, uint64_t);
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  NSObject *v36;
  os_log_type_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  unint64_t v45;
  os_log_t v46;
  uint64_t v47;
  uint64_t v48;
  os_log_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59[5];
  uint64_t v60;
  __int128 v61[2];
  uint64_t v62[3];
  uint64_t v63;
  uint64_t v64;

  v58 = a1;
  v8 = sub_21C247094();
  v56 = *(_QWORD *)(v8 - 8);
  v57 = v8;
  v9 = MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v48 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x24BDAC7A8](v9);
  v54 = (char *)&v48 - v13;
  v14 = *(_QWORD *)(a3 - 8);
  v15 = MEMORY[0x24BDAC7A8](v12);
  v52 = (char *)&v48 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v53 = (char *)&v48 - v17;
  v18 = sub_21C247CC4();
  v55 = *(_QWORD *)(v18 - 8);
  MEMORY[0x24BDAC7A8](v18);
  v20 = (char *)&v48 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = *v4;
  if (!*(_QWORD *)(v21 + 16))
    goto LABEL_5;
  v22 = sub_21C1F62B4(a2);
  if ((v23 & 1) == 0)
    goto LABEL_5;
  v51 = v18;
  sub_21C1E712C(*(_QWORD *)(v21 + 56) + 40 * v22, (uint64_t)v61);
  sub_21C1EB66C(v61, (uint64_t)v62);
  v24 = v63;
  v25 = v64;
  __swift_project_boxed_opaque_existential_1(v62, v63);
  v26 = v58;
  if ((sub_21C228FFC(v58, v24, a3, v25) & 1) != 0)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v62);
LABEL_5:
    (*(void (**)(char *, uint64_t, uint64_t))(v56 + 16))(v11, a2, v57);
    v63 = a3;
    v64 = a4;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v62);
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(v14 + 16))(boxed_opaque_existential_1, v58, a3);
    return sub_21C227544((uint64_t)v62, (uint64_t)v11);
  }
  v29 = (uint64_t)v20;
  sub_21C247C94();
  v30 = v14;
  v31 = *(void (**)(char *, uint64_t, uint64_t))(v14 + 16);
  v32 = v53;
  v31(v53, v26, a3);
  v33 = v56;
  v34 = v57;
  v35 = v54;
  (*(void (**)(char *, uint64_t, uint64_t))(v56 + 16))(v54, a2, v57);
  sub_21C1E712C((uint64_t)v62, (uint64_t)v61);
  v36 = sub_21C247CB8();
  v37 = sub_21C24872C();
  if (os_log_type_enabled(v36, v37))
  {
    v38 = swift_slowAlloc();
    v48 = v30;
    v39 = v38;
    v50 = swift_slowAlloc();
    v60 = v50;
    *(_DWORD *)v39 = 136315650;
    v49 = v36;
    v58 = v29;
    v31(v52, (uint64_t)v32, a3);
    v40 = sub_21C2484E0();
    v59[0] = sub_21C203A90(v40, v41, &v60);
    sub_21C2487A4();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v48 + 8))(v32, a3);
    *(_WORD *)(v39 + 12) = 2080;
    sub_21C1FBD14(&qword_25524C0E8, (uint64_t (*)(uint64_t))MEMORY[0x24BE77150], MEMORY[0x24BE77170]);
    v42 = sub_21C2488F4();
    v59[0] = sub_21C203A90(v42, v43, &v60);
    sub_21C2487A4();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v33 + 8))(v35, v34);
    *(_WORD *)(v39 + 22) = 2080;
    sub_21C1E712C((uint64_t)v61, (uint64_t)v59);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2552499D8);
    v44 = sub_21C2484E0();
    v59[0] = sub_21C203A90(v44, v45, &v60);
    sub_21C2487A4();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v61);
    v46 = v49;
    _os_log_impl(&dword_21C1E3000, v49, v37, "Can't register %s for %s -- already registered: %s", (uint8_t *)v39, 0x20u);
    v47 = v50;
    swift_arrayDestroy();
    MEMORY[0x2207770EC](v47, -1, -1);
    MEMORY[0x2207770EC](v39, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v55 + 8))(v58, v51);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v30 + 8))(v32, a3);
    (*(void (**)(char *, uint64_t))(v33 + 8))(v35, v34);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v61);

    (*(void (**)(uint64_t, uint64_t))(v55 + 8))(v29, v51);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v62);
}

uint64_t sub_21C229D24@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v3 = v2;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_25524C468);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_21C247DB4();
  v10 = *(_QWORD *)(v9 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v8, v3, v9);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v8, 0, 1, v9);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_25524C470);
  sub_21C1F03EC((uint64_t)v8, a2 + *(int *)(v11 + 36), &qword_25524C468);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_25524C478);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(a2, a1, v12);
  return sub_21C1F03B0((uint64_t)v8, &qword_25524C468);
}

uint64_t sub_21C229E30@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;

  v2 = sub_21C2470E8();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(a1, 1, 1, v2);
}

uint64_t sub_21C229E6C()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_25524C480);
  sub_21C1E78E4(&qword_25524C488, &qword_25524C480, MEMORY[0x24BDEFB78]);
  return sub_21C248288();
}

uint64_t sub_21C229EE4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_21C1F03EC(v1, a1, &qword_255249930);
}

uint64_t sub_21C229F08@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25524C490);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
}

uint64_t sub_21C229F4C()
{
  sub_21C24881C();
  sub_21C248504();
  sub_21C247094();
  sub_21C1FBD14(&qword_25524C0E8, (uint64_t (*)(uint64_t))MEMORY[0x24BE77150], MEMORY[0x24BE77170]);
  sub_21C2488F4();
  sub_21C248504();
  swift_bridgeObjectRelease();
  sub_21C248504();
  return 0;
}

unint64_t sub_21C22A028()
{
  return 0xD000000000000013;
}

uint64_t sub_21C22A048()
{
  sub_21C1FBD14(&qword_25524C460, type metadata accessor for UnsupportedRenderEffectError, (uint64_t)&unk_21C24B9A0);
  return sub_21C24794C();
}

uint64_t sub_21C22A088()
{
  sub_21C1FBD14(&qword_25524C460, type metadata accessor for UnsupportedRenderEffectError, (uint64_t)&unk_21C24B9A0);
  return sub_21C24791C();
}

uint64_t *initializeBufferWithCopyOfBuffer for RenderEffects(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  uint64_t *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(char *, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  __int128 v16;

  v3 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v7 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    v7 = a1;
    v8 = *(int *)(a3 + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_21C2470E8();
    v12 = *(_QWORD *)(v11 - 8);
    v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    swift_bridgeObjectRetain();
    if (v13(v10, 1, v11))
    {
      v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_255249930);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    v15 = *(int *)(a3 + 24);
    v16 = *(_OWORD *)((char *)a2 + v15 + 24);
    *(_OWORD *)((char *)v7 + v15 + 24) = v16;
    (**(void (***)(void))(v16 - 8))();
  }
  return v7;
}

uint64_t destroy for RenderEffects(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 20);
  v5 = sub_21C2470E8();
  v6 = *(_QWORD *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  return __swift_destroy_boxed_opaque_existential_1(a1 + *(int *)(a2 + 24));
}

_QWORD *initializeWithCopy for RenderEffects(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int (*v11)(char *, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  __int128 v14;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_21C2470E8();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
  swift_bridgeObjectRetain();
  if (v11(v8, 1, v9))
  {
    v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_255249930);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  v13 = *(int *)(a3 + 24);
  v14 = *(_OWORD *)((char *)a2 + v13 + 24);
  *(_OWORD *)((char *)a1 + v13 + 24) = v14;
  (**(void (***)(void))(v14 - 8))();
  return a1;
}

_QWORD *assignWithCopy for RenderEffects(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(char *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;

  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_21C2470E8();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_255249930);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_7:
  __swift_assign_boxed_opaque_existential_1((_QWORD *)((char *)a1 + *(int *)(a3 + 24)), (_QWORD *)((char *)a2 + *(int *)(a3 + 24)));
  return a1;
}

_QWORD *initializeWithTake for RenderEffects(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  __int128 v15;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_21C2470E8();
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_255249930);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  v12 = *(int *)(a3 + 24);
  v13 = (char *)a1 + v12;
  v14 = (char *)a2 + v12;
  v15 = *((_OWORD *)v14 + 1);
  *(_OWORD *)v13 = *(_OWORD *)v14;
  *((_OWORD *)v13 + 1) = v15;
  *((_QWORD *)v13 + 4) = *((_QWORD *)v14 + 4);
  return a1;
}

_QWORD *assignWithTake for RenderEffects(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(char *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  __int128 v18;

  *a1 = *a2;
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_21C2470E8();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_255249930);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_7:
  v15 = *(int *)(a3 + 24);
  v16 = (char *)a1 + v15;
  v17 = (char *)a2 + v15;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1 + v15);
  v18 = *((_OWORD *)v17 + 1);
  *(_OWORD *)v16 = *(_OWORD *)v17;
  *((_OWORD *)v16 + 1) = v18;
  *((_QWORD *)v16 + 4) = *((_QWORD *)v17 + 4);
  return a1;
}

uint64_t getEnumTagSinglePayload for RenderEffects()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_21C22A6E0(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_255249930);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 20)], a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for RenderEffects()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_21C22A76C(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_255249930);
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 20)], a2, a2, v7);
  }
  return result;
}

void sub_21C22A7E4()
{
  unint64_t v0;

  sub_21C22A864();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

void sub_21C22A864()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25524C158[0])
  {
    sub_21C2470E8();
    v0 = sub_21C248798();
    if (!v1)
      atomic_store(v0, qword_25524C158);
  }
}

uint64_t dispatch thunk of RenderEffectTransform.orientationOverride.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

ValueMetadata *type metadata accessor for RenderEffectRegistry()
{
  return &type metadata for RenderEffectRegistry;
}

double sub_21C22A8D0@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t *v3;
  unint64_t v6;
  char v7;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(uint64_t);
  double result;
  uint64_t v14;

  v3 = v2;
  swift_bridgeObjectRetain();
  v6 = sub_21C1F62B4(a1);
  LOBYTE(a1) = v7;
  swift_bridgeObjectRelease();
  if ((a1 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v9 = *v3;
    v14 = *v3;
    *v3 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_21C1FACAC();
      v9 = v14;
    }
    v10 = *(_QWORD *)(v9 + 48);
    v11 = sub_21C247094();
    v12 = (uint64_t (*)(uint64_t))MEMORY[0x24BE77150];
    (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10 + *(_QWORD *)(*(_QWORD *)(v11 - 8) + 72) * v6, v11);
    sub_21C1EB66C((__int128 *)(*(_QWORD *)(v9 + 56) + 40 * v6), a2);
    sub_21C22B940(v6, v9, v12, &qword_25524A2B8, MEMORY[0x24BE77160]);
    *v3 = v9;
    swift_bridgeObjectRelease();
  }
  else
  {
    *(_QWORD *)(a2 + 32) = 0;
    result = 0.0;
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
  }
  return result;
}

uint64_t sub_21C22A9F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t *v3;
  unint64_t v6;
  char v7;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t updated;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;

  v3 = v2;
  swift_bridgeObjectRetain();
  v6 = sub_21C1F64E0(a1);
  LOBYTE(a1) = v7;
  swift_bridgeObjectRelease();
  if ((a1 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v9 = *v3;
    v17 = *v3;
    *v3 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_21C1FB100();
      v9 = v17;
    }
    v10 = *(_QWORD *)(v9 + 48);
    v11 = sub_21C2472E0();
    (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10 + *(_QWORD *)(*(_QWORD *)(v11 - 8) + 72) * v6, v11);
    v12 = *(_QWORD *)(v9 + 56);
    updated = type metadata accessor for EntryPointIndex.UpdateState(0);
    v14 = *(_QWORD *)(updated - 8);
    sub_21C1FBAFC(v12 + *(_QWORD *)(v14 + 72) * v6, a2);
    sub_21C22B3CC(v6, v9);
    *v3 = v9;
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v14 + 56))(a2, 0, 1, updated);
  }
  else
  {
    v16 = type metadata accessor for EntryPointIndex.UpdateState(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(a2, 1, 1, v16);
  }
}

uint64_t sub_21C22AB24(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  unint64_t v4;
  char v5;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v2 = v1;
  swift_bridgeObjectRetain();
  v4 = sub_21C1F64E0(a1);
  LOBYTE(a1) = v5;
  swift_bridgeObjectRelease();
  if ((a1 & 1) == 0)
    return 0;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v7 = *v2;
  v12 = *v2;
  *v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_21C1FACC8();
    v7 = v12;
  }
  v8 = *(_QWORD *)(v7 + 48);
  v9 = sub_21C2472E0();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8 + *(_QWORD *)(*(_QWORD *)(v9 - 8) + 72) * v4, v9);
  v10 = *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v4);
  sub_21C22B6A0(v4, v7);
  *v2 = v7;
  swift_bridgeObjectRelease();
  return v10;
}

double sub_21C22ABFC@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t *v3;
  unint64_t v6;
  char v7;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(uint64_t);
  double result;
  uint64_t v14;

  v3 = v2;
  swift_bridgeObjectRetain();
  v6 = sub_21C1F64E0(a1);
  LOBYTE(a1) = v7;
  swift_bridgeObjectRelease();
  if ((a1 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v9 = *v3;
    v14 = *v3;
    *v3 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_21C1FB37C();
      v9 = v14;
    }
    v10 = *(_QWORD *)(v9 + 48);
    v11 = sub_21C2472E0();
    v12 = (uint64_t (*)(uint64_t))MEMORY[0x24BE777F0];
    (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10 + *(_QWORD *)(*(_QWORD *)(v11 - 8) + 72) * v6, v11);
    sub_21C1EB66C((__int128 *)(*(_QWORD *)(v9 + 56) + 40 * v6), a2);
    sub_21C22B940(v6, v9, v12, &qword_25524A298, MEMORY[0x24BE77800]);
    *v3 = v9;
    swift_bridgeObjectRelease();
  }
  else
  {
    *(_QWORD *)(a2 + 32) = 0;
    result = 0.0;
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
  }
  return result;
}

double sub_21C22AD1C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t *v3;
  unint64_t v6;
  char v7;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(uint64_t);
  double result;
  uint64_t v14;

  v3 = v2;
  swift_bridgeObjectRetain();
  v6 = sub_21C1F6578(a1);
  LOBYTE(a1) = v7;
  swift_bridgeObjectRelease();
  if ((a1 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v9 = *v3;
    v14 = *v3;
    *v3 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_21C1FB81C();
      v9 = v14;
    }
    v10 = *(_QWORD *)(v9 + 48);
    v11 = sub_21C247574();
    v12 = (uint64_t (*)(uint64_t))MEMORY[0x24BE77EC0];
    (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10 + *(_QWORD *)(*(_QWORD *)(v11 - 8) + 72) * v6, v11);
    sub_21C1EB66C((__int128 *)(*(_QWORD *)(v9 + 56) + 40 * v6), a2);
    sub_21C22B940(v6, v9, v12, &qword_25524A2A8, MEMORY[0x24BE77ED0]);
    *v3 = v9;
    swift_bridgeObjectRelease();
  }
  else
  {
    *(_QWORD *)(a2 + 32) = 0;
    result = 0.0;
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
  }
  return result;
}

double sub_21C22AE3C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t *v3;
  unint64_t v6;
  char v7;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(uint64_t);
  double result;
  uint64_t v14;

  v3 = v2;
  swift_bridgeObjectRetain();
  v6 = sub_21C1F634C(a1);
  LOBYTE(a1) = v7;
  swift_bridgeObjectRelease();
  if ((a1 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v9 = *v3;
    v14 = *v3;
    *v3 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_21C1FBA80();
      v9 = v14;
    }
    v10 = *(_QWORD *)(v9 + 48);
    v11 = sub_21C246FB0();
    v12 = (uint64_t (*)(uint64_t))MEMORY[0x24BE77078];
    (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10 + *(_QWORD *)(*(_QWORD *)(v11 - 8) + 72) * v6, v11);
    sub_21C1EB66C((__int128 *)(*(_QWORD *)(v9 + 56) + 40 * v6), a2);
    sub_21C22B940(v6, v9, v12, &qword_25524A288, MEMORY[0x24BE77088]);
    *v3 = v9;
    swift_bridgeObjectRelease();
  }
  else
  {
    *(_QWORD *)(a2 + 32) = 0;
    result = 0.0;
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
  }
  return result;
}

double sub_21C22AF5C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t *v3;
  unint64_t v6;
  char v7;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(uint64_t);
  double result;
  uint64_t v14;

  v3 = v2;
  swift_bridgeObjectRetain();
  v6 = sub_21C1F64E0(a1);
  LOBYTE(a1) = v7;
  swift_bridgeObjectRelease();
  if ((a1 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v9 = *v3;
    v14 = *v3;
    *v3 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_21C1FBA9C();
      v9 = v14;
    }
    v10 = *(_QWORD *)(v9 + 48);
    v11 = sub_21C2472E0();
    v12 = (uint64_t (*)(uint64_t))MEMORY[0x24BE777F0];
    (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10 + *(_QWORD *)(*(_QWORD *)(v11 - 8) + 72) * v6, v11);
    sub_21C1EB66C((__int128 *)(*(_QWORD *)(v9 + 56) + 40 * v6), a2);
    sub_21C22B940(v6, v9, v12, &qword_25524A298, MEMORY[0x24BE77800]);
    *v3 = v9;
    swift_bridgeObjectRelease();
  }
  else
  {
    *(_QWORD *)(a2 + 32) = 0;
    result = 0.0;
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
  }
  return result;
}

unint64_t sub_21C22B07C(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  unint64_t v11;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  int64_t v17;
  int64_t v18;
  unint64_t v19;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_21C2487C8();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        v9 = *(_QWORD *)(a2 + 48);
        v10 = (_QWORD *)(v9 + 8 * v6);
        result = sub_21C24899C();
        v11 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v11 < v8 || v3 < (uint64_t)v11)
            goto LABEL_6;
        }
        else if (v11 < v8 && v3 < (uint64_t)v11)
        {
          goto LABEL_6;
        }
        v14 = (_QWORD *)(v9 + 8 * v3);
        if (v3 != v6 || v14 >= v10 + 1)
          *v14 = *v10;
        v15 = *(_QWORD *)(a2 + 56);
        v16 = *(_QWORD *)(*(_QWORD *)(sub_21C247808() - 8) + 72);
        v17 = v16 * v3;
        result = v15 + v16 * v3;
        v18 = v16 * v6;
        v19 = v15 + v16 * v6 + v16;
        if (v17 < v18 || result >= v19)
        {
          result = swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          v3 = v6;
          if (v17 == v18)
            goto LABEL_6;
          result = swift_arrayInitWithTakeBackToFront();
        }
        v3 = v6;
LABEL_6:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v21 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v22 = *v21;
    v23 = (-1 << v3) - 1;
  }
  else
  {
    v21 = (uint64_t *)(v4 + 8 * (result >> 6));
    v23 = *v21;
    v22 = (-1 << result) - 1;
  }
  *v21 = v23 & v22;
  v24 = *(_QWORD *)(a2 + 16);
  v25 = __OFSUB__(v24, 1);
  v26 = v24 - 1;
  if (v25)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v26;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_21C22B238(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  unint64_t v11;
  _QWORD *v14;
  uint64_t v15;
  _OWORD *v16;
  _OWORD *v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_21C2487C8();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        v9 = *(_QWORD *)(a2 + 48);
        v10 = (_QWORD *)(v9 + 8 * v6);
        result = sub_21C24899C();
        v11 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v11 >= v8 && v3 >= (uint64_t)v11)
          {
LABEL_16:
            v14 = (_QWORD *)(v9 + 8 * v3);
            if (v3 != v6 || v14 >= v10 + 1)
              *v14 = *v10;
            v15 = *(_QWORD *)(a2 + 56);
            v16 = (_OWORD *)(v15 + 16 * v3);
            v17 = (_OWORD *)(v15 + 16 * v6);
            if (v3 != v6 || (v3 = v6, v16 >= v17 + 1))
            {
              *v16 = *v17;
              v3 = v6;
            }
          }
        }
        else if (v11 >= v8 || v3 >= (uint64_t)v11)
        {
          goto LABEL_16;
        }
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v18 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v19 = *v18;
    v20 = (-1 << v3) - 1;
  }
  else
  {
    v18 = (uint64_t *)(v4 + 8 * (result >> 6));
    v20 = *v18;
    v19 = (-1 << result) - 1;
  }
  *v18 = v20 & v19;
  v21 = *(_QWORD *)(a2 + 16);
  v22 = __OFSUB__(v21, 1);
  v23 = v21 - 1;
  if (v22)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v23;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_21C22B3CC(int64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t result;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v22;
  uint64_t v23;
  int64_t v24;
  int64_t v25;
  unint64_t v26;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  BOOL v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(char *, unint64_t, uint64_t);
  unint64_t v36;
  uint64_t v37;

  v4 = sub_21C2472E0();
  v37 = *(_QWORD *)(v4 - 8);
  result = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = a2 + 64;
  v9 = -1 << *(_BYTE *)(a2 + 32);
  v10 = (a1 + 1) & ~v9;
  if (((1 << v10) & *(_QWORD *)(a2 + 64 + 8 * (v10 >> 6))) != 0)
  {
    v11 = ~v9;
    result = sub_21C2487C8();
    if ((*(_QWORD *)(v8 + 8 * (v10 >> 6)) & (1 << v10)) != 0)
    {
      v36 = (result + 1) & v11;
      v12 = *(_QWORD *)(v37 + 72);
      v35 = *(void (**)(char *, unint64_t, uint64_t))(v37 + 16);
      v13 = v11;
      do
      {
        v14 = v8;
        v15 = v12;
        v16 = v12 * v10;
        v17 = v13;
        v35(v7, *(_QWORD *)(a2 + 48) + v12 * v10, v4);
        sub_21C1FBD14(&qword_25524A298, (uint64_t (*)(uint64_t))MEMORY[0x24BE777F0], MEMORY[0x24BE77800]);
        v18 = sub_21C248474();
        result = (*(uint64_t (**)(char *, uint64_t))(v37 + 8))(v7, v4);
        v13 = v17;
        v19 = v18 & v17;
        if (a1 >= (uint64_t)v36)
        {
          if (v19 >= v36 && a1 >= (uint64_t)v19)
          {
LABEL_16:
            v8 = v14;
            if (v15 * a1 < v16
              || *(_QWORD *)(a2 + 48) + v15 * a1 >= (unint64_t)(*(_QWORD *)(a2 + 48) + v16 + v15))
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (v15 * a1 != v16)
            {
              swift_arrayInitWithTakeBackToFront();
            }
            v22 = *(_QWORD *)(a2 + 56);
            v23 = *(_QWORD *)(*(_QWORD *)(type metadata accessor for EntryPointIndex.UpdateState(0) - 8) + 72);
            v24 = v23 * a1;
            result = v22 + v23 * a1;
            v25 = v23 * v10;
            v26 = v22 + v23 * v10 + v23;
            if (v24 < v25 || result >= v26)
            {
              result = swift_arrayInitWithTakeFrontToBack();
              a1 = v10;
              v13 = v17;
            }
            else
            {
              a1 = v10;
              v13 = v17;
              if (v24 != v25)
              {
                result = swift_arrayInitWithTakeBackToFront();
                v13 = v17;
                a1 = v10;
              }
            }
            goto LABEL_5;
          }
        }
        else if (v19 >= v36 || a1 >= (uint64_t)v19)
        {
          goto LABEL_16;
        }
        v8 = v14;
LABEL_5:
        v10 = (v10 + 1) & v13;
        v12 = v15;
      }
      while (((*(_QWORD *)(v8 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
    }
    v28 = (uint64_t *)(v8 + 8 * ((unint64_t)a1 >> 6));
    v29 = *v28;
    v30 = (-1 << a1) - 1;
  }
  else
  {
    v28 = (uint64_t *)(v8 + 8 * ((unint64_t)a1 >> 6));
    v30 = *v28;
    v29 = (-1 << a1) - 1;
  }
  *v28 = v30 & v29;
  v31 = *(_QWORD *)(a2 + 16);
  v32 = __OFSUB__(v31, 1);
  v33 = v31 - 1;
  if (v32)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v33;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_21C22B6A0(int64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t result;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(char *, unint64_t, uint64_t);
  unint64_t v34;
  uint64_t v35;

  v4 = sub_21C2472E0();
  v35 = *(_QWORD *)(v4 - 8);
  result = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = a2 + 64;
  v9 = -1 << *(_BYTE *)(a2 + 32);
  v10 = (a1 + 1) & ~v9;
  if (((1 << v10) & *(_QWORD *)(a2 + 64 + 8 * (v10 >> 6))) != 0)
  {
    v11 = ~v9;
    result = sub_21C2487C8();
    if ((*(_QWORD *)(v8 + 8 * (v10 >> 6)) & (1 << v10)) != 0)
    {
      v34 = (result + 1) & v11;
      v12 = *(_QWORD *)(v35 + 72);
      v33 = *(void (**)(char *, unint64_t, uint64_t))(v35 + 16);
      v13 = v11;
      do
      {
        v14 = v8;
        v15 = v12;
        v16 = v12 * v10;
        v17 = v13;
        v33(v7, *(_QWORD *)(a2 + 48) + v12 * v10, v4);
        sub_21C1FBD14(&qword_25524A298, (uint64_t (*)(uint64_t))MEMORY[0x24BE777F0], MEMORY[0x24BE77800]);
        v18 = sub_21C248474();
        result = (*(uint64_t (**)(char *, uint64_t))(v35 + 8))(v7, v4);
        v13 = v17;
        v19 = v18 & v17;
        if (a1 >= (uint64_t)v34)
        {
          if (v19 >= v34 && a1 >= (uint64_t)v19)
          {
LABEL_16:
            v22 = *(_QWORD *)(a2 + 48);
            result = v22 + v15 * a1;
            v8 = v14;
            if (v15 * a1 < v16 || (v12 = v15, result >= v22 + v16 + v15))
            {
              result = swift_arrayInitWithTakeFrontToBack();
LABEL_21:
              v13 = v17;
              v12 = v15;
            }
            else if (v15 * a1 != v16)
            {
              result = swift_arrayInitWithTakeBackToFront();
              goto LABEL_21;
            }
            v23 = *(_QWORD *)(a2 + 56);
            v24 = (_QWORD *)(v23 + 8 * a1);
            v25 = (_QWORD *)(v23 + 8 * v10);
            if (a1 != v10 || (a1 = v10, v24 >= v25 + 1))
            {
              *v24 = *v25;
              a1 = v10;
            }
            goto LABEL_5;
          }
        }
        else if (v19 >= v34 || a1 >= (uint64_t)v19)
        {
          goto LABEL_16;
        }
        v8 = v14;
        v12 = v15;
LABEL_5:
        v10 = (v10 + 1) & v13;
      }
      while (((*(_QWORD *)(v8 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
    }
    v26 = (uint64_t *)(v8 + 8 * ((unint64_t)a1 >> 6));
    v27 = *v26;
    v28 = (-1 << a1) - 1;
  }
  else
  {
    v26 = (uint64_t *)(v8 + 8 * ((unint64_t)a1 >> 6));
    v28 = *v26;
    v27 = (-1 << a1) - 1;
  }
  *v26 = v28 & v27;
  v29 = *(_QWORD *)(a2 + 16);
  v30 = __OFSUB__(v29, 1);
  v31 = v29 - 1;
  if (v30)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v31;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_21C22B940(int64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t), unint64_t *a4, uint64_t a5)
{
  uint64_t v7;
  unint64_t result;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v25;
  BOOL v26;
  uint64_t v27;
  unint64_t v28;
  __int128 *v29;
  __int128 v30;
  __int128 v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  BOOL v36;
  uint64_t v37;
  void (*v38)(char *, unint64_t, uint64_t);
  unint64_t v39;
  uint64_t (*v40)(uint64_t);
  unint64_t *v41;
  uint64_t v42;
  uint64_t v43;

  v41 = a4;
  v42 = a5;
  v40 = a3;
  v7 = a3(0);
  v43 = *(_QWORD *)(v7 - 8);
  result = MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v38 - v9;
  v11 = a2 + 64;
  v12 = -1 << *(_BYTE *)(a2 + 32);
  v13 = (a1 + 1) & ~v12;
  if (((1 << v13) & *(_QWORD *)(a2 + 64 + 8 * (v13 >> 6))) != 0)
  {
    v14 = ~v12;
    result = sub_21C2487C8();
    if ((*(_QWORD *)(v11 + 8 * (v13 >> 6)) & (1 << v13)) != 0)
    {
      v39 = (result + 1) & v14;
      v15 = *(_QWORD *)(v43 + 72);
      v38 = *(void (**)(char *, unint64_t, uint64_t))(v43 + 16);
      v16 = v14;
      do
      {
        v17 = v11;
        v18 = v15;
        v19 = v15 * v13;
        v20 = v16;
        v38(v10, *(_QWORD *)(a2 + 48) + v15 * v13, v7);
        sub_21C1FBD14(v41, v40, v42);
        v21 = sub_21C248474();
        result = (*(uint64_t (**)(char *, uint64_t))(v43 + 8))(v10, v7);
        v16 = v20;
        v22 = v21 & v20;
        if (a1 >= (uint64_t)v39)
        {
          if (v22 >= v39 && a1 >= (uint64_t)v22)
          {
LABEL_16:
            v25 = *(_QWORD *)(a2 + 48);
            v15 = v18;
            result = v25 + v18 * a1;
            if (v18 * a1 < v19 || result >= v25 + v19 + v18)
            {
              result = swift_arrayInitWithTakeFrontToBack();
              v16 = v20;
              v11 = v17;
            }
            else
            {
              v26 = v18 * a1 == v19;
              v11 = v17;
              if (!v26)
              {
                result = swift_arrayInitWithTakeBackToFront();
                v16 = v20;
              }
            }
            v27 = *(_QWORD *)(a2 + 56);
            v28 = v27 + 40 * a1;
            v29 = (__int128 *)(v27 + 40 * v13);
            if (a1 != v13 || (a1 = v13, v28 >= (unint64_t)v29 + 40))
            {
              v30 = *v29;
              v31 = v29[1];
              *(_QWORD *)(v28 + 32) = *((_QWORD *)v29 + 4);
              *(_OWORD *)v28 = v30;
              *(_OWORD *)(v28 + 16) = v31;
              a1 = v13;
            }
            goto LABEL_5;
          }
        }
        else if (v22 >= v39 || a1 >= (uint64_t)v22)
        {
          goto LABEL_16;
        }
        v11 = v17;
        v15 = v18;
LABEL_5:
        v13 = (v13 + 1) & v16;
      }
      while (((*(_QWORD *)(v11 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) != 0);
    }
    v32 = (uint64_t *)(v11 + 8 * ((unint64_t)a1 >> 6));
    v33 = *v32;
    v34 = (-1 << a1) - 1;
  }
  else
  {
    v32 = (uint64_t *)(v11 + 8 * ((unint64_t)a1 >> 6));
    v34 = *v32;
    v33 = (-1 << a1) - 1;
  }
  *v32 = v34 & v33;
  v35 = *(_QWORD *)(a2 + 16);
  v36 = __OFSUB__(v35, 1);
  v37 = v35 - 1;
  if (v36)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v37;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

uint64_t _s9TransformVMa_1(uint64_t a1)
{
  return sub_21C1F2E98(a1, qword_25524C3E8);
}

uint64_t _s9TransformVMa_0(uint64_t a1)
{
  return sub_21C1F2E98(a1, qword_25524C358);
}

uint64_t _s9TransformVMa(uint64_t a1)
{
  return sub_21C1F2E98(a1, qword_25524C2C8);
}

uint64_t sub_21C22BC20(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t (*v20)(uint64_t, uint64_t, uint64_t);
  int v21;
  uint64_t *v22;
  char v23;
  char *v24;
  void (*v25)(char *, uint64_t);
  uint64_t v27;
  char *v28;

  v4 = sub_21C2470E8();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v28 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_25524C498);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_255249930);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x24BDAC7A8](v11);
  v16 = (char *)&v27 - v15;
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v27 - v17;
  sub_21C1F03EC(a1, (uint64_t)&v27 - v17, &qword_255249930);
  sub_21C1F03EC(a2, (uint64_t)v16, &qword_255249930);
  v19 = (uint64_t)&v9[*(int *)(v7 + 48)];
  sub_21C1F03EC((uint64_t)v18, (uint64_t)v9, &qword_255249930);
  sub_21C1F03EC((uint64_t)v16, v19, &qword_255249930);
  v20 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (v20((uint64_t)v9, 1, v4) == 1)
  {
    sub_21C1F03B0((uint64_t)v16, &qword_255249930);
    sub_21C1F03B0((uint64_t)v18, &qword_255249930);
    v21 = v20(v19, 1, v4);
    if (v21 == 1)
      v22 = &qword_255249930;
    else
      v22 = &qword_25524C498;
    if (v21 == 1)
      v23 = -1;
    else
      v23 = 0;
  }
  else
  {
    sub_21C1F03EC((uint64_t)v9, (uint64_t)v13, &qword_255249930);
    if (v20(v19, 1, v4) == 1)
    {
      sub_21C1F03B0((uint64_t)v16, &qword_255249930);
      sub_21C1F03B0((uint64_t)v18, &qword_255249930);
      (*(void (**)(char *, uint64_t))(v5 + 8))(v13, v4);
      v23 = 0;
      v22 = &qword_25524C498;
    }
    else
    {
      v24 = v28;
      (*(void (**)(char *, uint64_t, uint64_t))(v5 + 32))(v28, v19, v4);
      sub_21C1FBD14(&qword_25524C4A0, (uint64_t (*)(uint64_t))MEMORY[0x24BE77298], MEMORY[0x24BE772A8]);
      v23 = sub_21C248480();
      v25 = *(void (**)(char *, uint64_t))(v5 + 8);
      v25(v24, v4);
      v22 = &qword_255249930;
      sub_21C1F03B0((uint64_t)v16, &qword_255249930);
      sub_21C1F03B0((uint64_t)v18, &qword_255249930);
      v25(v13, v4);
    }
  }
  sub_21C1F03B0((uint64_t)v9, v22);
  return v23 & 1;
}

uint64_t sub_21C22BEFC(uint64_t a1, uint64_t a2)
{
  int64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;
  __int128 v18[2];
  uint64_t v19;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = MEMORY[0x24BEE4AF8];
  if (v2)
  {
    v19 = MEMORY[0x24BEE4AF8];
    sub_21C1E6E44(0, v2, 0);
    v3 = v19;
    v6 = sub_21C247094();
    v7 = *(_QWORD *)(v6 - 8);
    v8 = a1 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
    v16 = v7;
    v17 = v6;
    v9 = *(_QWORD *)(v7 + 72);
    while (*(_QWORD *)(a2 + 16))
    {
      v10 = sub_21C1F62B4(v8);
      if ((v11 & 1) == 0)
        break;
      sub_21C1E712C(*(_QWORD *)(a2 + 56) + 40 * v10, (uint64_t)v18);
      v19 = v3;
      v13 = *(_QWORD *)(v3 + 16);
      v12 = *(_QWORD *)(v3 + 24);
      if (v13 >= v12 >> 1)
      {
        sub_21C1E6E44(v12 > 1, v13 + 1, 1);
        v3 = v19;
      }
      *(_QWORD *)(v3 + 16) = v13 + 1;
      sub_21C1EB66C(v18, v3 + 40 * v13 + 32);
      v8 += v9;
      if (!--v2)
        return v3;
    }
    type metadata accessor for UnsupportedRenderEffectError(0);
    sub_21C1FBD14(qword_25524C1D8, type metadata accessor for UnsupportedRenderEffectError, (uint64_t)&unk_21C24BA38);
    swift_allocError();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 16))(v14, v8, v17);
    swift_willThrow();
    swift_release();
  }
  return v3;
}

uint64_t sub_21C22C094(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255249930);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for UnsupportedRenderEffectError(uint64_t a1)
{
  return sub_21C1F2E98(a1, qword_25524C238);
}

uint64_t sub_21C22C0F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_21C22C204(a1, a2, a3, (uint64_t (*)(_QWORD))MEMORY[0x24BE77150]);
}

uint64_t sub_21C22C0FC(uint64_t a1, uint64_t a2)
{
  return sub_21C22C24C(a1, a2, (uint64_t (*)(_QWORD))MEMORY[0x24BE77150]);
}

uint64_t sub_21C22C108(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_21C22C28C(a1, a2, a3, (uint64_t (*)(_QWORD))MEMORY[0x24BE77150]);
}

uint64_t sub_21C22C114(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_21C22C2DC(a1, a2, a3, (uint64_t (*)(_QWORD))MEMORY[0x24BE77150]);
}

uint64_t sub_21C22C120(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_21C22C32C(a1, a2, a3, (uint64_t (*)(_QWORD))MEMORY[0x24BE77150]);
}

uint64_t sub_21C22C12C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_21C22C37C(a1, a2, a3, (uint64_t (*)(_QWORD))MEMORY[0x24BE77150]);
}

uint64_t sub_21C22C138()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_21C22C144(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return __swift_get_extra_inhabitant_index_1Tm(a1, a2, a3, (uint64_t (*)(_QWORD))MEMORY[0x24BE77150]);
}

uint64_t sub_21C22C150()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_21C22C15C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_store_extra_inhabitant_index_2Tm(a1, a2, a3, a4, (uint64_t (*)(_QWORD))MEMORY[0x24BE77150]);
}

uint64_t sub_21C22C168(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_21C22C984(a1, a2, a3, (uint64_t (*)(uint64_t))MEMORY[0x24BE77150]);
}

uint64_t sub_21C22C174(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_21C22C204(a1, a2, a3, (uint64_t (*)(_QWORD))MEMORY[0x24BDEB418]);
}

uint64_t sub_21C22C180(uint64_t a1, uint64_t a2)
{
  return sub_21C22C24C(a1, a2, (uint64_t (*)(_QWORD))MEMORY[0x24BDEB418]);
}

uint64_t sub_21C22C18C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_21C22C28C(a1, a2, a3, (uint64_t (*)(_QWORD))MEMORY[0x24BDEB418]);
}

uint64_t sub_21C22C198(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_21C22C2DC(a1, a2, a3, (uint64_t (*)(_QWORD))MEMORY[0x24BDEB418]);
}

uint64_t sub_21C22C1A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_21C22C32C(a1, a2, a3, (uint64_t (*)(_QWORD))MEMORY[0x24BDEB418]);
}

uint64_t sub_21C22C1B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_21C22C37C(a1, a2, a3, (uint64_t (*)(_QWORD))MEMORY[0x24BDEB418]);
}

uint64_t sub_21C22C1BC()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_21C22C1C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return __swift_get_extra_inhabitant_index_1Tm(a1, a2, a3, (uint64_t (*)(_QWORD))MEMORY[0x24BDEB418]);
}

uint64_t sub_21C22C1D4()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_21C22C1E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_store_extra_inhabitant_index_2Tm(a1, a2, a3, a4, (uint64_t (*)(_QWORD))MEMORY[0x24BDEB418]);
}

uint64_t sub_21C22C1EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_21C22C984(a1, a2, a3, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418]);
}

uint64_t sub_21C22C1F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_21C22C204(a1, a2, a3, (uint64_t (*)(_QWORD))MEMORY[0x24BDECF50]);
}

uint64_t sub_21C22C204(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD))
{
  uint64_t v6;

  v6 = a4(0);
  return (**(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v6 - 8))(a1, a2, v6);
}

uint64_t sub_21C22C240(uint64_t a1, uint64_t a2)
{
  return sub_21C22C24C(a1, a2, (uint64_t (*)(_QWORD))MEMORY[0x24BDECF50]);
}

uint64_t sub_21C22C24C(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v4;

  v4 = a3(0);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
}

uint64_t sub_21C22C280(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_21C22C28C(a1, a2, a3, (uint64_t (*)(_QWORD))MEMORY[0x24BDECF50]);
}

uint64_t sub_21C22C28C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD))
{
  uint64_t v6;

  v6 = a4(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  return a1;
}

uint64_t sub_21C22C2D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_21C22C2DC(a1, a2, a3, (uint64_t (*)(_QWORD))MEMORY[0x24BDECF50]);
}

uint64_t sub_21C22C2DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD))
{
  uint64_t v6;

  v6 = a4(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  return a1;
}

uint64_t sub_21C22C320(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_21C22C32C(a1, a2, a3, (uint64_t (*)(_QWORD))MEMORY[0x24BDECF50]);
}

uint64_t sub_21C22C32C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD))
{
  uint64_t v6;

  v6 = a4(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  return a1;
}

uint64_t sub_21C22C370(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_21C22C37C(a1, a2, a3, (uint64_t (*)(_QWORD))MEMORY[0x24BDECF50]);
}

uint64_t sub_21C22C37C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD))
{
  uint64_t v6;

  v6 = a4(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  return a1;
}

uint64_t sub_21C22C3C0()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_21C22C3CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return __swift_get_extra_inhabitant_index_1Tm(a1, a2, a3, (uint64_t (*)(_QWORD))MEMORY[0x24BDECF50]);
}

uint64_t __swift_get_extra_inhabitant_index_1Tm(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD))
{
  uint64_t v6;

  v6 = a4(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 48))(a1, a2, v6);
}

uint64_t sub_21C22C414()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_21C22C420(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_store_extra_inhabitant_index_2Tm(a1, a2, a3, a4, (uint64_t (*)(_QWORD))MEMORY[0x24BDECF50]);
}

uint64_t __swift_store_extra_inhabitant_index_2Tm(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD))
{
  uint64_t v7;

  v7 = a5(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(a1, a2, a2, v7);
}

uint64_t sub_21C22C46C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_21C22C984(a1, a2, a3, (uint64_t (*)(uint64_t))MEMORY[0x24BDECF50]);
}

uint64_t *sub_21C22C478(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255249930) - 8);
  v5 = *(_DWORD *)(v4 + 80);
  if ((v5 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v6 = sub_21C2470E8();
    v7 = *(_QWORD *)(v6 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
    {
      memcpy(a1, a2, *(_QWORD *)(v4 + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(a1, a2, v6);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
    }
  }
  return a1;
}

uint64_t sub_21C22C54C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  v2 = sub_21C2470E8();
  v3 = *(_QWORD *)(v2 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(a1, 1, v2);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
  return result;
}

void *sub_21C22C5B4(void *a1, const void *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = sub_21C2470E8();
  v5 = *(_QWORD *)(v4 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v5 + 48))(a2, 1, v4))
  {
    v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_255249930);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v5 + 16))(a1, a2, v4);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v4);
  }
  return a1;
}

void *sub_21C22C658(void *a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(void *, uint64_t, uint64_t);
  int v7;
  int v8;
  uint64_t v9;

  v4 = sub_21C2470E8();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v5 + 48);
  v7 = v6(a1, 1, v4);
  v8 = v6(a2, 1, v4);
  if (!v7)
  {
    if (!v8)
    {
      (*(void (**)(void *, void *, uint64_t))(v5 + 24))(a1, a2, v4);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v5 + 8))(a1, v4);
    goto LABEL_6;
  }
  if (v8)
  {
LABEL_6:
    v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_255249930);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v5 + 16))(a1, a2, v4);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v4);
  return a1;
}

void *sub_21C22C748(void *a1, const void *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = sub_21C2470E8();
  v5 = *(_QWORD *)(v4 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v5 + 48))(a2, 1, v4))
  {
    v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_255249930);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v5 + 32))(a1, a2, v4);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v4);
  }
  return a1;
}

void *sub_21C22C7EC(void *a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(void *, uint64_t, uint64_t);
  int v7;
  int v8;
  uint64_t v9;

  v4 = sub_21C2470E8();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v5 + 48);
  v7 = v6(a1, 1, v4);
  v8 = v6(a2, 1, v4);
  if (!v7)
  {
    if (!v8)
    {
      (*(void (**)(void *, void *, uint64_t))(v5 + 40))(a1, a2, v4);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v5 + 8))(a1, v4);
    goto LABEL_6;
  }
  if (v8)
  {
LABEL_6:
    v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_255249930);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v5 + 32))(a1, a2, v4);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v4);
  return a1;
}

uint64_t sub_21C22C8DC()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_21C22C8E8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255249930);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t sub_21C22C928()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_21C22C934(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255249930);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t sub_21C22C978(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_21C22C984(a1, a2, a3, (uint64_t (*)(uint64_t))sub_21C22A864);
}

uint64_t sub_21C22C984(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t))
{
  uint64_t result;
  unint64_t v5;

  result = a4(319);
  if (v5 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_21C22C9EC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_21C22C9FC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_21C22CA0C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_21C22CA1C()
{
  return sub_21C1FBD14(qword_25524C1D8, type metadata accessor for UnsupportedRenderEffectError, (uint64_t)&unk_21C24BA38);
}

uint64_t sub_21C22CA48()
{
  return sub_21C1FBD14(&qword_25524C420, type metadata accessor for UnsupportedRenderEffectError, (uint64_t)&unk_21C24B958);
}

uint64_t sub_21C22CA74()
{
  return sub_21C1FBD14(&qword_25524C428, type metadata accessor for UnsupportedRenderEffectError, (uint64_t)&unk_21C24B930);
}

uint64_t sub_21C22CAA0(uint64_t a1)
{
  uint64_t result;

  *(_QWORD *)(a1 + 8) = sub_21C1FBD14(&qword_25524C430, _s9TransformVMa, (uint64_t)&unk_21C24B8B8);
  result = sub_21C1FBD14(&qword_25524C438, _s9TransformVMa, (uint64_t)&unk_21C24B8E0);
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

uint64_t sub_21C22CAFC(uint64_t a1)
{
  uint64_t result;

  *(_QWORD *)(a1 + 8) = sub_21C1FBD14(&qword_25524C440, _s9TransformVMa_0, (uint64_t)&unk_21C24B840);
  result = sub_21C1FBD14(&qword_25524C448, _s9TransformVMa_0, (uint64_t)&unk_21C24B868);
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

uint64_t sub_21C22CB58(uint64_t a1)
{
  uint64_t result;

  *(_QWORD *)(a1 + 8) = sub_21C1FBD14(&qword_25524C450, _s9TransformVMa_1, (uint64_t)&unk_21C24B7C8);
  result = sub_21C1FBD14(&qword_25524C458, _s9TransformVMa_1, (uint64_t)&unk_21C24B7F0);
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_21C22CBB8()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_25524C4A8;
  if (!qword_25524C4A8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25524C470);
    v2[0] = sub_21C1E78E4(&qword_25524C4B0, &qword_25524C478, MEMORY[0x24BDEFB78]);
    v2[1] = sub_21C1E78E4((unint64_t *)&qword_25524C4B8, &qword_25524C4C0, MEMORY[0x24BDF0B90]);
    result = MEMORY[0x22077702C](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_25524C4A8);
  }
  return result;
}

uint64_t sub_21C22CC54()
{
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25524C480);
  sub_21C1E78E4(&qword_25524C488, &qword_25524C480, MEMORY[0x24BDEFB78]);
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_21C22CCB8()
{
  return sub_21C1E78E4(&qword_25524C4C8, &qword_25524C490, MEMORY[0x24BDEFB78]);
}

uint64_t sub_21C22CCE8@<X0>(void (*a1)(char *, char *)@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X6>, uint64_t a6@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(char *, char *);
  uint64_t v28;

  v25 = a5;
  v26 = a2;
  v28 = a4;
  v27 = a1;
  v24 = a3;
  v9 = *(_QWORD *)(a3 - 8);
  v10 = MEMORY[0x24BDAC7A8](a1);
  v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *(_QWORD *)(v13 + 16);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = MEMORY[0x24BDAC7A8](v10);
  v18 = (char *)&v24 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16);
  v20 = (char *)&v24 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v21 + 16))(v20, v6);
  v22 = 1;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v20, 1, v14) != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v18, v20, v14);
    v27(v18, v12);
    (*(void (**)(char *, uint64_t))(v15 + 8))(v18, v14);
    if (v7)
      return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v9 + 32))(v25, v12, v24);
    v22 = 0;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(a6, v22, 1);
}

uint64_t sub_21C22CE78()
{
  sub_21C246D94();
  return sub_21C246FA4();
}

uint64_t static RegistryEntry.typeDescription.getter()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t);
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v7;

  v0 = sub_21C246FB0();
  v1 = (uint64_t (*)(uint64_t))MEMORY[0x24BE77078];
  v2 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21C246D94();
  sub_21C246FA4();
  sub_21C1FBD14(&qword_25524C4D0, v1, MEMORY[0x24BE77098]);
  v5 = sub_21C2488F4();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v0);
  return v5;
}

uint64_t sub_21C22CF74@<X0>(uint64_t a1@<X8>)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  _QWORD v7[2];

  v7[1] = a1;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  v2 = sub_21C2477F0();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)v7 - v4;
  sub_21C246DAC();
  sub_21C2477E4();
  MEMORY[0x22077702C](MEMORY[0x24BE761C0], v2);
  sub_21C247A0C();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_21C22D0E8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v11;

  swift_getAssociatedTypeWitness();
  v4 = sub_21C2486B4();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v11 - v6;
  sub_21C24869C();
  v8 = swift_allocBox();
  sub_21C246DA0();
  sub_21C248678();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  v9 = (_QWORD *)swift_allocObject();
  v9[2] = a1;
  v9[3] = a2;
  v9[4] = v8;
  sub_21C247880();
  return sub_21C2486A8();
}

uint64_t sub_21C22D218(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;

  v4[6] = a3;
  v4[7] = a4;
  v4[5] = a1;
  swift_getAssociatedTypeWitness();
  v5 = sub_21C248798();
  v4[8] = v5;
  v4[9] = *(_QWORD *)(v5 - 8);
  v4[10] = swift_task_alloc();
  v4[11] = sub_21C24869C();
  v4[12] = swift_projectBox();
  return swift_task_switch();
}

uint64_t sub_21C22D2C4()
{
  uint64_t v0;
  _QWORD *v1;

  swift_beginAccess();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 104) = v1;
  *v1 = v0;
  v1[1] = sub_21C22D32C;
  return sub_21C248690();
}

uint64_t sub_21C22D32C()
{
  swift_task_dealloc();
  swift_endAccess();
  return swift_task_switch();
}

uint64_t sub_21C22D38C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = *(_QWORD *)(v0 + 72);
  v1 = *(_QWORD *)(v0 + 80);
  v3 = *(_QWORD *)(v0 + 64);
  v4 = *(_QWORD *)(v0 + 40);
  v5 = swift_task_alloc();
  *(_OWORD *)(v5 + 16) = *(_OWORD *)(v0 + 48);
  v6 = sub_21C247880();
  sub_21C22CCE8((void (*)(char *, char *))sub_21C22E238, v5, MEMORY[0x24BEE4078], v6, v7, v4);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21C22D43C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  _QWORD v12[2];

  v12[1] = a2;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v4 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v6 = (char *)v12 - v5;
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  v7 = sub_21C2477F0();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)v12 - v9;
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, a1, AssociatedTypeWitness);
  sub_21C2477E4();
  MEMORY[0x22077702C](MEMORY[0x24BE761C0], v7);
  sub_21C247A0C();
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t PlaygroundRegistryEntry.fileID.getter()
{
  return sub_21C247BB0();
}

uint64_t PlaygroundRegistryEntry.line.getter()
{
  return sub_21C247B98();
}

uint64_t PlaygroundRegistryEntry.column.getter()
{
  return sub_21C247BA4();
}

uint64_t PlaygroundRegistryEntry.makeExecutable()()
{
  return sub_21C247B8C();
}

uint64_t sub_21C22D660()
{
  return sub_21C247BB0();
}

uint64_t sub_21C22D684()
{
  return sub_21C247B98();
}

uint64_t sub_21C22D6A8()
{
  return sub_21C247BA4();
}

uint64_t sub_21C22D6CC()
{
  uint64_t v0;

  sub_21C247B8C();
  return sub_21C1E7AE8(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_21C22D72C()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_21C201E04;
  return sub_21C246E00();
}

uint64_t _Playground.metadata.getter()
{
  sub_21C247ACC();
  return sub_21C24731C();
}

uint64_t _Playground.run()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  _BYTE v6[16];
  uint64_t v7;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_25524C4D8);
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = &v6[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = v0;
  sub_21C247220();
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v2 + 104))(v4, *MEMORY[0x24BEE6A10], v1);
  return sub_21C2486C0();
}

uint64_t sub_21C22D870(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;

  v20 = a1;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_25524C530);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_255249D88);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_21C248654();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v9, 1, 1, v10);
  v11 = sub_21C247AE4();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(_QWORD *)(v12 + 64);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v19 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, a2, v11);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v20, v3);
  v15 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  v16 = (v13 + *(unsigned __int8 *)(v4 + 80) + v15) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = 0;
  *(_QWORD *)(v17 + 24) = 0;
  (*(void (**)(unint64_t, char *, uint64_t))(v12 + 32))(v17 + v15, v14, v11);
  (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(v17 + v16, v6, v3);
  sub_21C219F64((uint64_t)v9, (uint64_t)&unk_25524C540, v17);
  return swift_release();
}

uint64_t sub_21C22DA2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;

  v5[5] = a4;
  v5[6] = a5;
  v6 = sub_21C247220();
  v5[7] = v6;
  v5[8] = *(_QWORD *)(v6 - 8);
  v5[9] = swift_task_alloc();
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_25524C548);
  v5[10] = v7;
  v5[11] = *(_QWORD *)(v7 - 8);
  v5[12] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_21C22DAB8()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t (*v5)(void);

  v1 = (int *)sub_21C247AD8();
  *(_QWORD *)(v0 + 104) = v2;
  v5 = (uint64_t (*)(void))((char *)v1 + *v1);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 112) = v3;
  *v3 = v0;
  v3[1] = sub_21C22DB1C;
  return v5();
}

uint64_t sub_21C22DB1C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 120) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_21C22DB80()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(v0 + 96);
  v2 = *(_QWORD *)(v0 + 80);
  v3 = *(_QWORD *)(v0 + 88);
  v5 = *(_QWORD *)(v0 + 64);
  v4 = *(_QWORD *)(v0 + 72);
  v6 = *(_QWORD *)(v0 + 56);
  swift_release();
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v5 + 104))(v4, *MEMORY[0x24BE77660], v6);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25524C530);
  sub_21C248660();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25524C530);
  sub_21C24866C();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21C22DC48()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  v1 = *(void **)(v0 + 120);
  v2 = *(_QWORD *)(v0 + 96);
  v3 = *(_QWORD *)(v0 + 88);
  v9 = *(_QWORD *)(v0 + 80);
  v4 = *(_QWORD *)(v0 + 64);
  v5 = *(_QWORD **)(v0 + 72);
  v6 = *(_QWORD *)(v0 + 56);
  swift_release();
  *(_QWORD *)(v0 + 16) = 0;
  *(_QWORD *)(v0 + 24) = 0xE000000000000000;
  *(_QWORD *)(v0 + 32) = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255249D90);
  sub_21C248870();
  v7 = *(_QWORD *)(v0 + 24);
  *v5 = *(_QWORD *)(v0 + 16);
  v5[1] = v7;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v4 + 104))(v5, *MEMORY[0x24BE77658], v6);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25524C530);
  sub_21C248660();

  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v9);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25524C530);
  sub_21C24866C();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21C22DD78()
{
  sub_21C247ACC();
  return sub_21C24731C();
}

uint64_t sub_21C22DD9C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  _BYTE v6[16];
  uint64_t v7;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_25524C4D8);
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = &v6[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = v0;
  sub_21C247220();
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v2 + 104))(v4, *MEMORY[0x24BEE6A10], v1);
  return sub_21C2486C0();
}

uint64_t _s17PreviewsInjection23PlaygroundRegistryEntryV20registryTypeRawValueSSvgZ_0()
{
  return 0x756F726779616C70;
}

uint64_t sub_21C22DE74()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t);
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v7;

  v0 = sub_21C246FB0();
  v1 = (uint64_t (*)(uint64_t))MEMORY[0x24BE77078];
  v2 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21C246FA4();
  sub_21C1FBD14(&qword_25524C4D0, v1, MEMORY[0x24BE77098]);
  v5 = sub_21C2488F4();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v0);
  return v5;
}

_QWORD *_s17PreviewsInjection23PlaygroundRegistryEntryV23scrapeRuntimeForEntriesSayACGyFZ_0()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t i;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;

  __swift_instantiateConcreteTypeFromMangledName(qword_25524C550);
  v0 = sub_21C246F68();
  v1 = (_QWORD *)MEMORY[0x24BEE4AF8];
  if (v0)
    v2 = v0;
  else
    v2 = MEMORY[0x24BEE4AF8];
  v3 = *(_QWORD *)(v2 + 16);
  if (v3)
  {
    swift_bridgeObjectRetain();
    for (i = 0; i != v3; ++i)
    {
      v6 = *(_QWORD *)(v2 + 8 * i + 32);
      v7 = swift_conformsToProtocol2();
      if (v7)
        v8 = v6;
      else
        v8 = 0;
      if (v7)
        v9 = v7;
      else
        v9 = 0;
      if (v8)
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v1 = sub_21C23D9D8(0, v1[2] + 1, 1, v1);
        v11 = v1[2];
        v10 = v1[3];
        if (v11 >= v10 >> 1)
          v1 = sub_21C23D9D8((_QWORD *)(v10 > 1), v11 + 1, 1, v1);
        v1[2] = v11 + 1;
        v5 = &v1[2 * v11];
        v5[4] = v8;
        v5[5] = v9;
      }
    }
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_21C22E06C(uint64_t a1)
{
  uint64_t v1;

  return sub_21C22D870(a1, *(_QWORD *)(v1 + 16));
}

unint64_t sub_21C22E078()
{
  unint64_t result;

  result = qword_25524C4E0;
  if (!qword_25524C4E0)
  {
    result = MEMORY[0x22077702C](&protocol conformance descriptor for PlaygroundRegistryEntry, &type metadata for PlaygroundRegistryEntry);
    atomic_store(result, (unint64_t *)&qword_25524C4E0);
  }
  return result;
}

uint64_t sub_21C22E0BC()
{
  return sub_21C1FBD14(qword_25524C4E8, (uint64_t (*)(uint64_t))MEMORY[0x24BDC6D00], (uint64_t)&protocol conformance descriptor for _Playground);
}

uint64_t sub_21C22E0E8()
{
  return sub_21C1FBD14(&qword_25524C500, MEMORY[0x24BE77900], MEMORY[0x24BE77918]);
}

uint64_t sub_21C22E114()
{
  return sub_21C1FBD14(&qword_25524C508, MEMORY[0x24BE77900], MEMORY[0x24BE77910]);
}

uint64_t sub_21C22E140()
{
  return sub_21C1FBD14(&qword_25524C510, (uint64_t (*)(uint64_t))MEMORY[0x24BE77668], MEMORY[0x24BE77680]);
}

uint64_t sub_21C22E16C()
{
  return sub_21C1FBD14(&qword_25524C518, (uint64_t (*)(uint64_t))MEMORY[0x24BE77668], MEMORY[0x24BE77678]);
}

ValueMetadata *type metadata accessor for PlaygroundRegistryEntry()
{
  return &type metadata for PlaygroundRegistryEntry;
}

uint64_t sub_21C22E1A8()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_21C22E1CC(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_21C1E664C;
  return sub_21C22D218(a1, v6, v4, v5);
}

uint64_t sub_21C22E238@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_21C22D43C(a1, a2);
}

uint64_t sub_21C22E254()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;

  v1 = sub_21C247AE4();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = v3 + *(_QWORD *)(v2 + 64);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_25524C530);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = (v4 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  swift_unknownObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  (*(void (**)(unint64_t, uint64_t))(v6 + 8))(v0 + v7, v5);
  return swift_deallocObject();
}

uint64_t sub_21C22E314(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v4 = *(_QWORD *)(sub_21C247AE4() - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = v5 + *(_QWORD *)(v4 + 64);
  v7 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25524C530) - 8) + 80);
  v8 = (v6 + v7) & ~v7;
  v9 = *(_QWORD *)(v1 + 16);
  v10 = *(_QWORD *)(v1 + 24);
  v11 = v1 + v5;
  v12 = v1 + v8;
  v13 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v13;
  *v13 = v2;
  v13[1] = sub_21C1EBB98;
  return sub_21C22DA2C(a1, v9, v10, v11, v12);
}

uint64_t PreviewHostController.update(with:debugDescription:)(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t AssociatedTypeWitness;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t AssociatedConformanceWitness;
  void (*v20)(uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v23;
  void (*v24)(uint64_t, uint64_t);
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30[5];

  v28 = a2;
  v29 = a3;
  v6 = *(_QWORD *)(*v3 + 80);
  v5 = *(_QWORD *)(*v3 + 88);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v26 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v27 = AssociatedTypeWitness;
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v25 = (char *)&v23 - v8;
  v9 = type metadata accessor for PreviewDisplayContext.Configuration(0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = a1[3];
  v13 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v12);
  sub_21C22EE64();
  LOBYTE(v12) = sub_21C2131A8((uint64_t)v30, v12, v13);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v30);
  if ((v12 & 1) == 0)
  {
    v14 = a1[3];
    v15 = a1[4];
    __swift_project_boxed_opaque_existential_1(a1, v14);
    v24 = *(void (**)(uint64_t, uint64_t))(v15 + 32);
    v30[3] = swift_getAssociatedTypeWitness();
    v30[4] = swift_getAssociatedConformanceWitness();
    __swift_allocate_boxed_opaque_existential_1(v30);
    v24(v14, v15);
    sub_21C22EEF4((uint64_t)v30);
  }
  v16 = (uint64_t)a1 + *(int *)(type metadata accessor for PreviewDisplayContext(0) + 20);
  sub_21C1E7170(v16, (uint64_t)v11, type metadata accessor for PreviewDisplayContext.Configuration);
  sub_21C22EF90((uint64_t)v11);
  v17 = v25;
  (*(void (**)(_QWORD, uint64_t, uint64_t, uint64_t))(v5 + 80))(v3[2], v16, v6, v5);
  v18 = (char *)v3 + *(_QWORD *)(*v3 + 120);
  swift_beginAccess();
  (*(void (**)(char *, char *, uint64_t))(v26 + 40))(v18, v17, v27);
  swift_endAccess();
  swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v20 = *(void (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 56);
  v21 = swift_checkMetadataState();
  v20(v21, AssociatedConformanceWitness);
  swift_bridgeObjectRetain();
  sub_21C247730();
  (*(void (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 32))(v21, AssociatedConformanceWitness);
  sub_21C247760();
  return sub_21C247748();
}

uint64_t sub_21C22E6B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 16))(a3, a1);
}

CGSize_optional __swiftcall PreviewHostController.desiredSize(in:)(CGSize in)
{
  double height;
  double width;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int v10;
  double v11;
  double v12;
  uint64_t v13;
  uint64_t AssociatedConformanceWitness;
  double (*v15)(uint64_t, uint64_t, double, double);
  uint64_t v16;
  uint64_t v17;
  CGSize_optional result;

  height = in.height;
  width = in.width;
  v3 = sub_21C247E74();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (uint64_t *)((char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = type metadata accessor for PreviewDisplayContext.Configuration(0);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21C22EDD4();
  (*(void (**)(uint64_t *, char *, uint64_t))(v4 + 16))(v6, v9, v3);
  sub_21C1E71CC((uint64_t)v9, type metadata accessor for PreviewDisplayContext.Configuration);
  v10 = (*(uint64_t (**)(uint64_t *, uint64_t))(v4 + 88))(v6, v3);
  if (v10 != *MEMORY[0x24BDC6F90])
  {
    if (v10 != *MEMORY[0x24BDC6F98])
    {
      if (v10 == *MEMORY[0x24BDC6F88])
      {
        swift_getAssociatedTypeWitness();
        AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
        v15 = *(double (**)(uint64_t, uint64_t, double, double))(AssociatedConformanceWitness + 24);
        v16 = swift_checkMetadataState();
        v11 = v15(v16, AssociatedConformanceWitness, width, height);
        LOBYTE(v13) = LOBYTE(v11);
        goto LABEL_8;
      }
      (*(void (**)(uint64_t *, uint64_t))(v4 + 8))(v6, v3);
    }
    LOBYTE(v13) = 0;
    goto LABEL_8;
  }
  (*(void (**)(uint64_t *, uint64_t))(v4 + 96))(v6, v3);
  v13 = *v6;
LABEL_8:
  result.value.height = v12;
  result.value.width = v11;
  result.is_nil = v13;
  return result;
}

uint64_t PreviewHostController.__allocating_init()()
{
  uint64_t v0;

  v0 = swift_allocObject();
  PreviewHostController.init()();
  return v0;
}

uint64_t PreviewHostController.rootViewController.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t AssociatedTypeWitness;

  v3 = v1 + *(_QWORD *)(*(_QWORD *)v1 + 120);
  swift_beginAccess();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 16))(a1, v3, AssociatedTypeWitness);
}

uint64_t PreviewHostController.rootViewController.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t AssociatedTypeWitness;

  v3 = v1 + *(_QWORD *)(*(_QWORD *)v1 + 120);
  swift_beginAccess();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 40))(v3, a1, AssociatedTypeWitness);
  return swift_endAccess();
}

uint64_t (*PreviewHostController.rootViewController.modify())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

char *PreviewHostController.init()()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t AssociatedTypeWitness;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t (*v13)(_QWORD *, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t (*v18)(uint64_t, uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  _QWORD v22[2];
  uint64_t v23[2];

  v1 = v0;
  v2 = *(_QWORD *)v0;
  v3 = type metadata accessor for PreviewDisplayContext.Configuration(0);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_QWORD *)(v2 + 80);
  v6 = *(_QWORD *)(v2 + 88);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v9 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v11 = (char *)v22 - v10;
  type metadata accessor for PreviewDisplayHost(0, v7, v6, v12);
  *((_QWORD *)v1 + 3) = sub_21C22EC18();
  sub_21C22ED80(v23);
  v22[0] = v23[0];
  v22[1] = v23[1];
  v13 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 72);
  v15 = type metadata accessor for PreviewDisplayHost.HostView(0, v7, v6, v14);
  v16 = MEMORY[0x22077702C](&unk_21C24BD58, v15);
  v17 = v13(v22, v15, v16, v7, v6);
  swift_release();
  *((_QWORD *)v1 + 2) = v17;
  sub_21C22EDD4();
  (*(void (**)(uint64_t, char *, uint64_t, uint64_t))(v6 + 80))(v17, v5, v7, v6);
  sub_21C1E71CC((uint64_t)v5, type metadata accessor for PreviewDisplayContext.Configuration);
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(&v1[*(_QWORD *)(*(_QWORD *)v1 + 120)], v11, AssociatedTypeWitness);
  v18 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 96);
  v19 = swift_unknownObjectRetain();
  v20 = v18(v19, v7, v6);
  swift_unknownObjectRelease();
  *((_QWORD *)v1 + 4) = v20;
  return v1;
}

uint64_t sub_21C22EC18()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char v16[24];
  uint64_t v17;
  uint64_t v18;

  v1 = (int *)type metadata accessor for PreviewDisplayContext.Configuration(0);
  MEMORY[0x24BDAC7A8](v1);
  v3 = &v16[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v4 = *MEMORY[0x24BDC6F98];
  v5 = sub_21C247E74();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 104))(v3, v4, v5);
  v6 = &v3[v1[6]];
  v7 = type metadata accessor for RenderEffects(0);
  v8 = &v6[*(int *)(v7 + 20)];
  v9 = sub_21C2470E8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v8, 1, 1, v9);
  v10 = MEMORY[0x24BDEC0A0];
  v11 = &v6[*(int *)(v7 + 24)];
  *((_QWORD *)v11 + 3) = MEMORY[0x24BDEC0B0];
  *((_QWORD *)v11 + 4) = v10;
  *(_QWORD *)v6 = MEMORY[0x24BEE4AF8];
  v3[v1[5]] = 1;
  v3[v1[7]] = 0;
  v3[v1[8]] = 0;
  v17 = type metadata accessor for PreviewDisplayHost.EmptyContentHost(0, *(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 88), v12);
  v18 = MEMORY[0x22077702C](&unk_21C24BED8, v17);
  v13 = swift_allocObject();
  sub_21C22F51C((uint64_t)v3, (uint64_t)v16);
  return v13;
}

uint64_t sub_21C22ED80@<X0>(uint64_t *a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;

  v3 = *v1;
  swift_retain();
  MEMORY[0x22077702C](&unk_21C24BD20, v3);
  result = sub_21C247EB0();
  *a1 = result;
  a1[1] = v5;
  return result;
}

uint64_t sub_21C22EDD4()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_21C247D30();
  swift_release();
  return swift_release();
}

uint64_t sub_21C22EE64()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_21C247D30();
  swift_release();
  return swift_release();
}

uint64_t sub_21C22EEF4(uint64_t a1)
{
  _BYTE v3[40];

  swift_getKeyPath();
  swift_getKeyPath();
  sub_21C1E712C(a1, (uint64_t)v3);
  swift_retain();
  sub_21C247D3C();
  return __swift_destroy_boxed_opaque_existential_1(a1);
}

uint64_t sub_21C22EF90(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD v10[2];
  uint64_t v11;
  uint64_t v12;

  v3 = *v1;
  v4 = type metadata accessor for PreviewDisplayContext.Configuration(0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(_QWORD *)(v3 + 88);
  v11 = *(_QWORD *)(v3 + 80);
  v7 = v11;
  v12 = v8;
  swift_getKeyPath();
  v10[0] = v7;
  v10[1] = v8;
  swift_getKeyPath();
  sub_21C1E7170(a1, (uint64_t)v6, type metadata accessor for PreviewDisplayContext.Configuration);
  swift_retain();
  sub_21C247D3C();
  return sub_21C1E71CC(a1, type metadata accessor for PreviewDisplayContext.Configuration);
}

uint64_t type metadata accessor for PreviewDisplayHost(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for PreviewDisplayHost);
}

uint64_t type metadata accessor for PreviewDisplayHost.HostView(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for PreviewDisplayHost.HostView);
}

uint64_t PreviewHostController._forEachIdentifiedView(body:)(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedConformanceWitness;
  uint64_t (*v5)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v6;

  swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(AssociatedConformanceWitness + 16);
  v6 = swift_checkMetadataState();
  return v5(a1, a2, v6, AssociatedConformanceWitness);
}

Swift::Void __swiftcall PreviewHostController._render(seconds:)(Swift::Double seconds)
{
  uint64_t AssociatedConformanceWitness;
  void (*v3)(uint64_t, uint64_t, double);
  uint64_t v4;

  swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v3 = *(void (**)(uint64_t, uint64_t, double))(AssociatedConformanceWitness + 8);
  v4 = swift_checkMetadataState();
  v3(v4, AssociatedConformanceWitness, seconds);
}

id *PreviewHostController.deinit()
{
  id *v0;
  char *v1;
  uint64_t AssociatedTypeWitness;

  swift_unknownObjectRelease();
  swift_release();

  v1 = (char *)v0 + *((_QWORD *)*v0 + 15);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 8))(v1, AssociatedTypeWitness);
  return v0;
}

uint64_t PreviewHostController.__deallocating_deinit()
{
  return sub_21C22FE08((void (*)(void))PreviewHostController.deinit);
}

uint64_t sub_21C22F26C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  v2 = type metadata accessor for PreviewDisplayContext.Configuration(0);
  MEMORY[0x24BDAC7A8](v2);
  sub_21C1E7170(a1, (uint64_t)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for PreviewDisplayContext.Configuration);
  sub_21C247D18();
  return sub_21C1E71CC(a1, type metadata accessor for PreviewDisplayContext.Configuration);
}

uint64_t sub_21C22F30C(uint64_t a1, uint64_t a2)
{
  return PreviewHostController._forEachIdentifiedView(body:)(a1, a2);
}

uint64_t sub_21C22F32C()
{
  uint64_t result;
  unint64_t v1;

  result = swift_getAssociatedTypeWitness();
  if (v1 <= 0x3F)
  {
    result = swift_initClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t type metadata accessor for PreviewHostController(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for PreviewHostController);
}

uint64_t method lookup function for PreviewHostController()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of PreviewHostController.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 128))();
}

void sub_21C22F3F4()
{
  unint64_t v0;
  unint64_t v1;

  sub_21C22FE2C();
  if (v0 <= 0x3F)
  {
    sub_21C22FE80();
    if (v1 <= 0x3F)
      swift_initClassMetadata2();
  }
}

uint64_t sub_21C22F47C(uint64_t a1)
{
  _BYTE v3[40];

  sub_21C1E712C(a1, (uint64_t)v3);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2552499B0);
  sub_21C247D18();
  return __swift_destroy_boxed_opaque_existential_1(a1);
}

uint64_t sub_21C22F4D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = swift_allocObject();
  sub_21C22F51C(a1, a2);
  return v4;
}

uint64_t sub_21C22F51C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  _BYTE v10[40];

  v5 = type metadata accessor for PreviewDisplayContext.Configuration(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0) + 22;
  sub_21C1E7170(a1, (uint64_t)v7, type metadata accessor for PreviewDisplayContext.Configuration);
  swift_beginAccess();
  sub_21C22F26C((uint64_t)v7);
  swift_endAccess();
  sub_21C1E712C(a2, (uint64_t)v10);
  swift_beginAccess();
  sub_21C22F47C((uint64_t)v10);
  swift_endAccess();
  __swift_destroy_boxed_opaque_existential_1(a2);
  sub_21C1E71CC(a1, type metadata accessor for PreviewDisplayContext.Configuration);
  return v2;
}

uint64_t sub_21C22F62C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, char *a4@<X8>)
{
  uint64_t v6;
  char *v7;
  uint64_t AssociatedTypeWitness;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t KeyPath;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t AssociatedConformanceWitness;
  uint64_t v25;
  void (*v26)(char *, char *, uint64_t);
  char *v27;
  void (*v28)(char *, uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  _QWORD v40[2];
  uint64_t v41;
  char v42;
  char v43;
  uint64_t v44;
  char v45;

  v32 = a1;
  v39 = a4;
  v36 = sub_21C247E74();
  v34 = *(_QWORD *)(v36 - 8);
  MEMORY[0x24BDAC7A8](v36);
  v7 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = a3;
  v31 = a2;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v38 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v10 = (char *)&v30 - v9;
  v11 = type metadata accessor for PreviewDisplayContext.Configuration(0);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25524C6F8);
  v14 = sub_21C247EEC();
  v37 = *(_QWORD *)(v14 - 8);
  v15 = MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v30 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v35 = (char *)&v30 - v18;
  sub_21C22F970((uint64_t)&v41);
  v19 = v41;
  LOBYTE(a3) = v42;
  swift_retain();
  sub_21C22EDD4();
  swift_release();
  LOBYTE(v11) = v13[*(int *)(v11 + 20)];
  sub_21C1E71CC((uint64_t)v13, type metadata accessor for PreviewDisplayContext.Configuration);
  KeyPath = swift_getKeyPath();
  v41 = v19;
  v42 = a3;
  v43 = v11;
  v44 = KeyPath;
  v45 = 1;
  swift_retain();
  sub_21C22EDD4();
  swift_release();
  v21 = v34;
  v22 = v36;
  (*(void (**)(char *, char *, uint64_t))(v34 + 16))(v7, v13, v36);
  sub_21C1E71CC((uint64_t)v13, type metadata accessor for PreviewDisplayContext.Configuration);
  (*(void (**)(char *, uint64_t, uint64_t))(v30 + 88))(v7, v31, v30);
  (*(void (**)(char *, uint64_t))(v21 + 8))(v7, v22);
  v23 = sub_21C2301A4();
  MEMORY[0x2207763E4](v10, v33, AssociatedTypeWitness, v23);
  (*(void (**)(char *, uint64_t))(v38 + 8))(v10, AssociatedTypeWitness);
  sub_21C230388(v41, v42);
  swift_release();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v40[0] = v23;
  v40[1] = AssociatedConformanceWitness;
  MEMORY[0x22077702C](MEMORY[0x24BDED308], v14, v40);
  v25 = v37;
  v26 = *(void (**)(char *, char *, uint64_t))(v37 + 16);
  v27 = v35;
  v26(v35, v17, v14);
  v28 = *(void (**)(char *, uint64_t))(v25 + 8);
  v28(v17, v14);
  v26(v39, v27, v14);
  return ((uint64_t (*)(char *, uint64_t))v28)(v27, v14);
}

uint64_t sub_21C22F970@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t AssociatedConformanceWitness;
  uint64_t *v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t result;
  char v22;
  void (*v23)(uint64_t, uint64_t);
  uint64_t v24;
  void (**v25)(uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27[4];
  uint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t AssociatedTypeWitness;
  uint64_t v35;

  v2 = type metadata accessor for RenderEffects(0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for PreviewDisplayContext.Configuration(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((sub_21C22FC9C() & 1) != 0)
  {
    v28 = 0;
    v29 = 0;
  }
  else
  {
    swift_retain();
    sub_21C22EE64();
    swift_release();
    v8 = v30;
    v9 = v31;
    v10 = __swift_project_boxed_opaque_existential_1(&v28, v30);
    v24 = v5;
    v25 = &v23;
    v11 = *(_QWORD *)(v8 - 8);
    MEMORY[0x24BDAC7A8](v10);
    v13 = (char *)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v11 + 16))(v13);
    v23 = *(void (**)(uint64_t, uint64_t))(v9 + 24);
    AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    v35 = AssociatedConformanceWitness;
    v15 = __swift_allocate_boxed_opaque_existential_1(&v32);
    v26 = a1;
    v16 = (uint64_t)v15;
    v23(v8, v9);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v8);
    swift_retain();
    sub_21C22EDD4();
    swift_release();
    sub_21C1E7170((uint64_t)&v7[*(int *)(v24 + 24)], (uint64_t)v4, type metadata accessor for RenderEffects);
    sub_21C1E71CC((uint64_t)v7, type metadata accessor for PreviewDisplayContext.Configuration);
    RenderEffects.applied<A>(to:)(v16, AssociatedConformanceWitness, v27);
    sub_21C1E71CC((uint64_t)v4, type metadata accessor for RenderEffects);
    v17 = __swift_project_boxed_opaque_existential_1(v27, v27[3]);
    MEMORY[0x24BDAC7A8](v17);
    (*(void (**)(char *))(v19 + 16))((char *)&v23 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
    v20 = sub_21C248330();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v27);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v32);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v28);
    v28 = v20;
    a1 = v26;
    v29 = 1;
  }
  sub_21C230300();
  result = sub_21C248084();
  v22 = v33;
  *(_QWORD *)a1 = v32;
  *(_BYTE *)(a1 + 8) = v22;
  return result;
}

uint64_t sub_21C22FC9C()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  id v3;
  id v4;
  uint64_t v6;

  v0 = type metadata accessor for PreviewDisplayContext.Configuration(0);
  MEMORY[0x24BDAC7A8](v0);
  v2 = (char *)&v6 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  sub_21C22EDD4();
  swift_release();
  LOBYTE(v0) = v2[*(int *)(v0 + 28)];
  sub_21C1E71CC((uint64_t)v2, type metadata accessor for PreviewDisplayContext.Configuration);
  if ((v0 & 1) != 0)
    return 1;
  v4 = objc_msgSend((id)objc_opt_self(), sel_rootSettings);
  v3 = objc_msgSend(v4, sel_forceMetricsView);

  return (uint64_t)v3;
}

uint64_t sub_21C22FD78@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t *v2;

  return sub_21C22F62C(*v2, *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), a2);
}

uint64_t sub_21C22FD88()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = v0 + qword_25524C5D8;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25524C748);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  v3 = v0 + qword_25524C5E0;
  v4 = __swift_instantiateConcreteTypeFromMangledName(qword_25524C750);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  return v0;
}

uint64_t sub_21C22FDFC()
{
  return sub_21C22FE08((void (*)(void))sub_21C22FD88);
}

uint64_t sub_21C22FE08(void (*a1)(void))
{
  a1();
  return swift_deallocClassInstance();
}

void sub_21C22FE2C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25524C668)
  {
    type metadata accessor for PreviewDisplayContext.Configuration(255);
    v0 = sub_21C247D48();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25524C668);
  }
}

void sub_21C22FE80()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25524C670[0])
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2552499B0);
    v0 = sub_21C247D48();
    if (!v1)
      atomic_store(v0, qword_25524C670);
  }
}

uint64_t sub_21C22FED8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_21C22FF0C@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  char *v16;
  void (*v17)(char *, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v20;
  _QWORD v21[2];
  uint64_t v22;
  uint64_t v23;

  v21[1] = a3;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_25524C7F8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_25524C800);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_25524C808);
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (v14 + 15) & 0xFFFFFFFFFFFFFFF0;
  v16 = (char *)v21 - v15;
  if ((a2 & 1) != 0)
  {
    v17 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 16);
    v17((char *)v21 - v15, a1, v12);
    v17(v11, (uint64_t)v16, v12);
    swift_storeEnumTagMultiPayload();
    v18 = sub_21C1E78E4(&qword_25524C810, &qword_25524C808, MEMORY[0x24BDEFB78]);
    v22 = v12;
    v23 = v18;
    swift_getOpaqueTypeConformance2();
    sub_21C248084();
    return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v16, v12);
  }
  else
  {
    v20 = sub_21C1E78E4(&qword_25524C810, &qword_25524C808, MEMORY[0x24BDEFB78]);
    sub_21C248270();
    (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v11, v8, v5);
    swift_storeEnumTagMultiPayload();
    v22 = v12;
    v23 = v20;
    swift_getOpaqueTypeConformance2();
    sub_21C248084();
    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
}

uint64_t sub_21C230140@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  char *v2;

  return sub_21C22FF0C(a1, *v2, a2);
}

uint64_t sub_21C230148(uint64_t a1)
{
  return nullsub_1(*(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24));
}

uint64_t sub_21C230154@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_21C247F64();
  *a1 = result & 1;
  return result;
}

uint64_t sub_21C230180()
{
  return sub_21C247F70();
}

unint64_t sub_21C2301A4()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_25524C700;
  if (!qword_25524C700)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25524C6F8);
    v2[0] = sub_21C230228();
    v2[1] = sub_21C1E78E4(&qword_25524C738, &qword_25524C740, MEMORY[0x24BDF1028]);
    result = MEMORY[0x22077702C](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_25524C700);
  }
  return result;
}

unint64_t sub_21C230228()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_25524C708;
  if (!qword_25524C708)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25524C710);
    v2[0] = sub_21C230294();
    v2[1] = sub_21C230344();
    result = MEMORY[0x22077702C](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_25524C708);
  }
  return result;
}

unint64_t sub_21C230294()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_25524C718;
  if (!qword_25524C718)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25524C720);
    v2[0] = sub_21C230300();
    v2[1] = MEMORY[0x24BDF4760];
    result = MEMORY[0x22077702C](MEMORY[0x24BDEF3E0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_25524C718);
  }
  return result;
}

unint64_t sub_21C230300()
{
  unint64_t result;

  result = qword_25524C728;
  if (!qword_25524C728)
  {
    result = MEMORY[0x22077702C](&unk_21C24A700, &type metadata for MetricsView);
    atomic_store(result, (unint64_t *)&qword_25524C728);
  }
  return result;
}

unint64_t sub_21C230344()
{
  unint64_t result;

  result = qword_25524C730;
  if (!qword_25524C730)
  {
    result = MEMORY[0x22077702C](&unk_21C24BEF4, &type metadata for AllowAnimationsModifier);
    atomic_store(result, (unint64_t *)&qword_25524C730);
  }
  return result;
}

uint64_t sub_21C230388(uint64_t a1, char a2)
{
  uint64_t result;

  if ((a2 & 1) != 0)
    return swift_release();
  return result;
}

uint64_t type metadata accessor for PreviewDisplayHost.EmptyContentHost(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for PreviewDisplayHost.EmptyContentHost);
}

uint64_t sub_21C2303A8()
{
  return 16;
}

__n128 sub_21C2303B4(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_21C2303C8()
{
  return 16;
}

__n128 sub_21C2303D4(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_21C2303E0()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t getEnumTagSinglePayload for AllowAnimationsModifier(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFF)
    goto LABEL_17;
  if (a2 + 1 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 1;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 1;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 1;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 2;
  v8 = (v6 + 2147483646) & 0x7FFFFFFF;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for AllowAnimationsModifier(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_21C2304D4 + 4 * byte_21C24BC15[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_21C230508 + 4 * asc_21C24BC10[v4]))();
}

uint64_t sub_21C230508(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_21C230510(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x21C230518);
  return result;
}

uint64_t sub_21C230524(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x21C23052CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_21C230530(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_21C230538(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AllowAnimationsModifier()
{
  return &type metadata for AllowAnimationsModifier;
}

uint64_t sub_21C230554()
{
  uint64_t v0;
  _QWORD v2[2];

  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25524C6F8);
  swift_getAssociatedTypeWitness();
  v0 = sub_21C247EEC();
  v2[0] = sub_21C2301A4();
  v2[1] = swift_getAssociatedConformanceWitness();
  return MEMORY[0x22077702C](MEMORY[0x24BDED308], v0, v2);
}

uint64_t sub_21C230610()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_21C230644()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_21C230658()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[4];

  result = qword_25524C818;
  if (!qword_25524C818)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_25524C820);
    v2 = sub_21C1E78E4(&qword_25524C810, &qword_25524C808, MEMORY[0x24BDEFB78]);
    v3[2] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25524C808);
    v3[3] = v2;
    v3[0] = v2;
    v3[1] = swift_getOpaqueTypeConformance2();
    result = MEMORY[0x22077702C](MEMORY[0x24BDEF3E0], v1, v3);
    atomic_store(result, (unint64_t *)&qword_25524C818);
  }
  return result;
}

uint64_t sub_21C230704()
{
  return MEMORY[0x24BDF5138];
}

_QWORD *RenderingHostManager.__allocating_init()()
{
  _QWORD *v0;
  uint64_t v1;

  v0 = (_QWORD *)swift_allocObject();
  type metadata accessor for PreviewHostController(0, *(_QWORD *)(*v0 + 80), *(_QWORD *)(*v0 + 88), v1);
  v0[2] = PreviewHostController.__allocating_init()();
  return v0;
}

_QWORD *RenderingHostManager.init()(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;

  type metadata accessor for PreviewHostController(0, *(_QWORD *)(*v4 + 80), *(_QWORD *)(*v4 + 88), a4);
  v4[2] = PreviewHostController.__allocating_init()();
  return v4;
}

uint64_t RenderingHostManager.update(using:identifier:)(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  PreviewHostController.update(with:debugDescription:)(a1, a2, a3);
  return swift_retain();
}

uint64_t RenderingHostManager.update(using:debugDescription:)(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  sub_21C230820(a1, a2, a3);
  return swift_retain();
}

uint64_t RenderingHostManager.deinit()
{
  uint64_t v0;

  swift_release();
  return v0;
}

uint64_t RenderingHostManager.__deallocating_deinit()
{
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_21C230820(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;

  v4 = *(_QWORD *)(v3 + 16);
  PreviewHostController.update(with:debugDescription:)(a1, a2, a3);
  return v4;
}

uint64_t sub_21C230844()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for RenderingHostManager(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for RenderingHostManager);
}

uint64_t method lookup function for RenderingHostManager()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of RenderingHostManager.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t sub_21C2308A8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v3[20] = a2;
  v3[21] = v2;
  v3[19] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255249D88);
  v3[22] = swift_task_alloc();
  v4 = sub_21C246F74();
  v3[23] = v4;
  v3[24] = *(_QWORD *)(v4 - 8);
  v3[25] = swift_task_alloc();
  v5 = sub_21C247280();
  v3[26] = v5;
  v3[27] = *(_QWORD *)(v5 - 8);
  v3[28] = swift_task_alloc();
  v6 = sub_21C247CC4();
  v3[29] = v6;
  v3[30] = *(_QWORD *)(v6 - 8);
  v3[31] = swift_task_alloc();
  v7 = sub_21C247418();
  v3[32] = v7;
  v3[33] = *(_QWORD *)(v7 - 8);
  v3[34] = swift_task_alloc();
  v8 = sub_21C246FB0();
  v3[35] = v8;
  v3[36] = *(_QWORD *)(v8 - 8);
  v3[37] = swift_task_alloc();
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_25524CA18);
  v3[38] = v9;
  v3[39] = *(_QWORD *)(v9 - 8);
  v3[40] = swift_task_alloc();
  v10 = sub_21C2478C8();
  v3[41] = v10;
  v3[42] = *(_QWORD *)(v10 - 8);
  v3[43] = swift_task_alloc();
  v11 = sub_21C247574();
  v3[44] = v11;
  v3[45] = *(_QWORD *)(v11 - 8);
  v3[46] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_21C230A4C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;

  v2 = v0[45];
  v1 = v0[46];
  v3 = v0[44];
  v4 = v0[21];
  sub_21C247A48();
  swift_allocObject();
  v5 = sub_21C247A3C();
  v6 = sub_21C1EC8C4(MEMORY[0x24BEE4AF8]);
  v0[12] = v5;
  v0[13] = v6;
  sub_21C24755C();
  v0[47] = sub_21C231270(v1);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  v7 = *(_QWORD *)(v4 + 112);
  if (v7)
  {
    v9 = v0[42];
    v8 = v0[43];
    v10 = v0[41];
    v11 = *(_QWORD *)(v4 + 120);
    sub_21C23272C(*(_QWORD *)(v4 + 112));
    v0[14] = v7;
    v0[15] = v11;
    sub_21C2478BC();
    sub_21C231E3C();
    sub_21C2478B0();
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v10);
    swift_release();
    swift_bridgeObjectRelease();
    v12 = *(_QWORD *)(v4 + 112);
  }
  else
  {
    v12 = 0;
  }
  v13 = v0[20];
  v14 = v0[13];
  *(_QWORD *)(v4 + 112) = v0[12];
  *(_QWORD *)(v4 + 120) = v14;
  swift_retain();
  swift_bridgeObjectRetain();
  sub_21C232700(v12);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v13 + 24), *(_QWORD *)(v13 + 48));
  sub_21C24725C();
  sub_21C247268();
  v15 = (_QWORD *)swift_task_alloc();
  v0[48] = v15;
  *v15 = v0;
  v15[1] = sub_21C230C54;
  return sub_21C241E88(v0[40], v0[37], v0[34]);
}

uint64_t sub_21C230C54()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *(_QWORD **)v1;
  *(_QWORD *)(*(_QWORD *)v1 + 392) = v0;
  swift_task_dealloc();
  v4 = v2[36];
  v3 = v2[37];
  v5 = v2[35];
  (*(void (**)(_QWORD, _QWORD))(v2[33] + 8))(v2[34], v2[32]);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  return swift_task_switch();
}

uint64_t sub_21C230CF0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  _BOOL4 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint8_t *v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  NSObject *log;
  os_log_type_t type;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v1 = *(_QWORD *)(v0 + 392);
  sub_21C24713C();
  if (v1)
  {
    v3 = *(_QWORD *)(v0 + 312);
    v2 = *(_QWORD *)(v0 + 320);
    v4 = *(_QWORD *)(v0 + 304);
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
    swift_release();
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    v5 = *(uint64_t (**)(void))(v0 + 8);
  }
  else
  {
    v6 = *(_QWORD *)(v0 + 152);
    v8 = *(_QWORD *)(v0 + 216);
    v7 = *(_QWORD *)(v0 + 224);
    v9 = *(_QWORD *)(v0 + 208);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 312) + 8))(*(_QWORD *)(v0 + 320), *(_QWORD *)(v0 + 304));
    sub_21C247C94();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v7, v6, v9);
    v10 = sub_21C247CB8();
    v11 = sub_21C248738();
    v12 = os_log_type_enabled(v10, v11);
    v14 = *(_QWORD *)(v0 + 240);
    v13 = *(_QWORD *)(v0 + 248);
    v16 = *(_QWORD *)(v0 + 224);
    v15 = *(_QWORD *)(v0 + 232);
    if (v12)
    {
      v30 = *(_QWORD *)(v0 + 216);
      v37 = *(_QWORD *)(v0 + 232);
      v17 = *(_QWORD *)(v0 + 200);
      v29 = *(_QWORD *)(v0 + 192);
      type = v11;
      v18 = *(_QWORD *)(v0 + 184);
      log = v10;
      v32 = *(_QWORD *)(v0 + 208);
      v36 = *(_QWORD *)(v0 + 240);
      v19 = (uint8_t *)swift_slowAlloc();
      v33 = swift_slowAlloc();
      v38 = v33;
      *(_DWORD *)v19 = 136315138;
      sub_21C247274();
      sub_21C232890(&qword_25524CA30, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BE76F98], MEMORY[0x24BE76FA8]);
      v20 = sub_21C2488F4();
      v31 = v13;
      v22 = v21;
      (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v17, v18);
      *(_QWORD *)(v0 + 144) = sub_21C203A90(v20, v22, &v38);
      sub_21C2487A4();
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v16, v32);
      _os_log_impl(&dword_21C1E3000, log, type, "Executing registry %s", v19, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2207770EC](v33, -1, -1);
      MEMORY[0x2207770EC](v19, -1, -1);

      (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v31, v37);
    }
    else
    {
      (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 216) + 8))(*(_QWORD *)(v0 + 224), *(_QWORD *)(v0 + 208));

      (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v13, v15);
    }
    v23 = *(_QWORD *)(v0 + 376);
    v24 = *(_QWORD *)(v0 + 176);
    v25 = sub_21C248654();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v24, 1, 1, v25);
    sub_21C1E712C(v0 + 16, v0 + 56);
    v26 = (_QWORD *)swift_allocObject();
    v26[2] = 0;
    v26[3] = 0;
    sub_21C1EB66C((__int128 *)(v0 + 56), (uint64_t)(v26 + 4));
    v26[9] = v23;
    swift_retain();
    sub_21C219F64(v24, (uint64_t)&unk_25524CA28, (uint64_t)v26);
    v27 = *(_QWORD *)(v0 + 104);
    *(_QWORD *)(v0 + 128) = *(_QWORD *)(v0 + 96);
    *(_QWORD *)(v0 + 136) = v27;
    sub_21C231EF8();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    sub_21C2479C4();
    swift_release_n();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1(v0 + 16);
    swift_release();
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    v5 = *(uint64_t (**)(void))(v0 + 8);
  }
  return v5();
}

uint64_t sub_21C231198()
{
  uint64_t v0;

  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21C231270(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v15[5];

  v2 = v1;
  v4 = sub_21C247574();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v15[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_25524CA60);
  MEMORY[0x24BDAC7A8](v8);
  *(_QWORD *)((char *)&v15[-1] - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0)) = MEMORY[0x24BEE4AF8];
  swift_storeEnumTagMultiPayload();
  v10 = sub_21C247C7C();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
  v15[3] = __swift_instantiateConcreteTypeFromMangledName(qword_25524CA68);
  v15[4] = &off_24E01F548;
  v15[0] = v10;
  swift_retain();
  sub_21C227884((uint64_t)v15, (uint64_t)v7);
  v12 = *v2;
  v11 = v2[1];
  v15[0] = v12;
  v15[1] = v11;
  sub_21C231EF8();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  sub_21C2479C4();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_21C2313FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5[3] = a4;
  v5[4] = a5;
  v6 = sub_21C247CC4();
  v5[5] = v6;
  v5[6] = *(_QWORD *)(v6 - 8);
  v5[7] = swift_task_alloc();
  v7 = sub_21C247880();
  v5[8] = v7;
  v5[9] = *(_QWORD *)(v7 - 8);
  v5[10] = swift_task_alloc();
  v5[11] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25524CA38);
  v5[12] = swift_task_alloc();
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_25524CA40);
  v5[13] = v8;
  v5[14] = *(_QWORD *)(v8 - 8);
  v5[15] = swift_task_alloc();
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_25524CA48);
  v5[16] = v9;
  v5[17] = *(_QWORD *)(v9 - 8);
  v5[18] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_21C231510()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v2 = v0[14];
  v1 = v0[15];
  v3 = v0[13];
  v4 = (_QWORD *)v0[3];
  v5 = v4[3];
  v6 = v4[4];
  __swift_project_boxed_opaque_existential_1(v4, v5);
  sub_21C22D0E8(v5, v6);
  sub_21C248678();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  v0[19] = 0;
  v7 = (_QWORD *)swift_task_alloc();
  v0[20] = v7;
  *v7 = v0;
  v7[1] = sub_21C2315D8;
  return sub_21C248684();
}

uint64_t sub_21C2315D8()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_21C23162C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  _BOOL4 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  void (*v20)(uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v1 = *(_QWORD *)(v0 + 96);
  v2 = *(_QWORD *)(v0 + 64);
  v3 = *(_QWORD *)(v0 + 72);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2) == 1)
  {
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 136) + 8))(*(_QWORD *)(v0 + 144), *(_QWORD *)(v0 + 128));
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v6 = *(_QWORD *)(v0 + 80);
    v5 = *(_QWORD *)(v0 + 88);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 32))(v5, v1, v2);
    sub_21C247C94();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v6, v5, v2);
    v7 = sub_21C247CB8();
    v8 = sub_21C248738();
    v9 = os_log_type_enabled(v7, v8);
    v11 = *(_QWORD *)(v0 + 72);
    v10 = *(_QWORD *)(v0 + 80);
    v12 = *(_QWORD *)(v0 + 56);
    v13 = *(_QWORD *)(v0 + 64);
    v15 = *(_QWORD *)(v0 + 40);
    v14 = *(_QWORD *)(v0 + 48);
    if (v9)
    {
      v26 = *(_QWORD *)(v0 + 56);
      v16 = swift_slowAlloc();
      v25 = v15;
      v17 = swift_slowAlloc();
      v27 = v17;
      *(_DWORD *)v16 = 136315138;
      sub_21C232890(&qword_25524A5A0, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BE76530], MEMORY[0x24BE76540]);
      v18 = sub_21C2488F4();
      *(_QWORD *)(v16 + 4) = sub_21C203A90(v18, v19, &v27);
      swift_bridgeObjectRelease();
      v20 = *(void (**)(uint64_t, uint64_t))(v11 + 8);
      v20(v10, v13);
      _os_log_impl(&dword_21C1E3000, v7, v8, "Got registry event %s", (uint8_t *)v16, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2207770EC](v17, -1, -1);
      MEMORY[0x2207770EC](v16, -1, -1);

      (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v26, v25);
    }
    else
    {
      v20 = *(void (**)(uint64_t, uint64_t))(v11 + 8);
      v20(*(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 64));

      (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v12, v15);
    }
    v21 = *(_QWORD *)(v0 + 152);
    v22 = *(_QWORD *)(v0 + 88);
    v23 = *(_QWORD *)(v0 + 64);
    *(_QWORD *)(v0 + 16) = **(_QWORD **)(v0 + 32);
    *(_QWORD *)(swift_task_alloc() + 16) = v22;
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_25524CA50);
    sub_21C232844();
    sub_21C247A60();
    swift_task_dealloc();
    swift_release();
    v20(v22, v23);
    *(_QWORD *)(v0 + 152) = v21;
    v24 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 160) = v24;
    *v24 = v0;
    v24[1] = sub_21C2315D8;
    return sub_21C248684();
  }
}

uint64_t sub_21C231984(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v12[2];
  _QWORD v13[3];
  uint64_t v14;
  uint64_t v15;

  v3 = *(_QWORD *)(v2 + 112);
  if (v3)
  {
    v4 = *(_QWORD *)(v2 + 120);
    if (*(_QWORD *)(v4 + 16))
    {
      swift_retain();
      swift_bridgeObjectRetain();
      v7 = sub_21C1F6578(a2);
      if ((v8 & 1) != 0)
      {
        sub_21C1E712C(*(_QWORD *)(v4 + 56) + 40 * v7, (uint64_t)v12);
        sub_21C1EB66C(v12, (uint64_t)v13);
        v9 = v14;
        v10 = v15;
        __swift_project_boxed_opaque_existential_1(v13, v14);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 8))(a1, v9, v10);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v13);
        sub_21C232700(v3);
        return 1;
      }
      sub_21C232700(v3);
    }
  }
  return 0;
}

uint64_t sub_21C231A64()
{
  uint64_t v0;

  sub_21C232700(*(_QWORD *)(v0 + 112));
  swift_defaultActor_destroy();
  return swift_defaultActor_deallocate();
}

uint64_t type metadata accessor for RegistryEntryPoint()
{
  return objc_opt_self();
}

uint64_t destroy for UpdateContext()
{
  swift_release();
  return swift_bridgeObjectRelease();
}

_QWORD *_s17PreviewsInjection13UpdateContextVwCP_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for UpdateContext(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *assignWithTake for UpdateContext(_OWORD *a1, _OWORD *a2)
{
  swift_release();
  *a1 = *a2;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for UpdateContext()
{
  return &type metadata for UpdateContext;
}

uint64_t sub_21C231BB0(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;

  type metadata accessor for RegistryEntryPoint();
  v3 = swift_allocObject();
  swift_defaultActor_initialize();
  *(_QWORD *)(v3 + 112) = 0;
  *(_QWORD *)(v3 + 120) = 0;
  *a1 = v3;
  return sub_21C1E7AF4(*(uint64_t (**)(void))(v1 + 8));
}

uint64_t sub_21C231C00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v6;

  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v6;
  *v6 = v3;
  v6[1] = sub_21C1E664C;
  return sub_21C2308A8(a2, a3);
}

uint64_t sub_21C231C60(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;

  v3[2] = a1;
  v3[3] = a2;
  v3[4] = *v2;
  return swift_task_switch();
}

uint64_t sub_21C231C7C()
{
  uint64_t v0;
  char v1;

  v1 = sub_21C231984(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(v1 & 1);
}

unint64_t sub_21C231CB4()
{
  return 0xD000000000000012;
}

uint64_t sub_21C231CD0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  _QWORD v10[4];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_25524CA60);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)v10 - v7;
  v10[3] = a2;
  v10[0] = sub_21C247880();
  v10[1] = MEMORY[0x24BE76518];
  swift_getKeyPath();
  swift_storeEnumTagMultiPayload();
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25524CA50);
  sub_21C232844();
  sub_21C247A54();
  swift_release();
  sub_21C232918((uint64_t)v6);
  swift_release();
  return sub_21C232918((uint64_t)v8);
}

uint64_t sub_21C231DF0()
{
  return swift_retain();
}

uint64_t sub_21C231DF8()
{
  sub_21C231EF8();
  return sub_21C2479B8();
}

unint64_t sub_21C231E3C()
{
  unint64_t result;

  result = qword_25524C980[0];
  if (!qword_25524C980[0])
  {
    result = MEMORY[0x22077702C](&unk_21C24C034, &type metadata for UpdateContext);
    atomic_store(result, qword_25524C980);
  }
  return result;
}

uint64_t sub_21C231E80(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = sub_21C232890(qword_25524C9F0, a2, (uint64_t (*)(uint64_t))type metadata accessor for RegistryEntryPoint, (uint64_t)&unk_21C24C08C);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_21C231EBC(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = sub_21C232890(&qword_25524CA08, a2, (uint64_t (*)(uint64_t))type metadata accessor for RegistryEntryPoint, (uint64_t)&unk_21C24C0B4);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_21C231EF8()
{
  unint64_t result;

  result = qword_25524CA10;
  if (!qword_25524CA10)
  {
    result = MEMORY[0x22077702C](&unk_21C24C05C, &type metadata for UpdateContext);
    atomic_store(result, (unint64_t *)&qword_25524CA10);
  }
  return result;
}

uint64_t sub_21C231F3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v7;

  sub_21C2470AC();
  v7 = (_QWORD *)swift_allocObject();
  v7[2] = a3;
  v7[3] = a4;
  v7[4] = a2;
  swift_retain();
  sub_21C247A78();
  swift_release();
  return swift_release();
}

uint64_t sub_21C231FCC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  type metadata accessor for SendingStreamPlaceholder.State(255, a3, a4, a4);
  v4 = sub_21C247C88();
  swift_retain();
  MEMORY[0x22077702C](MEMORY[0x24BE76C78], v4);
  sub_21C247A60();
  return swift_release();
}

uint64_t sub_21C2320A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t result;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  NSObject *v21;
  os_log_type_t v22;
  uint8_t *v23;
  os_log_type_t v24;
  uint8_t *v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  BOOL v30;
  uint64_t v31;
  _QWORD v32[2];
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v36 = a2;
  v6 = a1;
  v7 = *(_QWORD *)(a3 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  MEMORY[0x24BDAC7A8](a1);
  v9 = (char *)v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = sub_21C247CC4();
  v10 = *(_QWORD *)(v35 - 8);
  MEMORY[0x24BDAC7A8](v35);
  v34 = (char *)v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = a4;
  v13 = type metadata accessor for SendingStreamPlaceholder.State(0, a3, a4, v12);
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (_QWORD *)((char *)v32 - v15);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))((char *)v32 - v15, v6, v13);
  result = swift_getEnumCaseMultiPayload();
  if ((_DWORD)result)
  {
    if ((_DWORD)result == 1)
    {
      sub_21C2478D4();
      v18 = sub_21C2470C4();
      return (*(uint64_t (**)(uint64_t *, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(v16, v18);
    }
  }
  else
  {
    v32[1] = v13;
    v33 = v10;
    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v6, v13);
    v19 = *v16;
    v20 = v34;
    sub_21C247C94();
    v21 = sub_21C247CB8();
    v22 = sub_21C248738();
    if (os_log_type_enabled(v21, v22))
    {
      v23 = (uint8_t *)swift_slowAlloc();
      v24 = v22;
      v25 = v23;
      *(_WORD *)v23 = 0;
      _os_log_impl(&dword_21C1E3000, v21, v24, "Received message stream sender; will send buffered events", v23, 2u);
      MEMORY[0x2207770EC](v25, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v33 + 8))(v20, v35);
    if (MEMORY[0x220776720](v19, a3))
    {
      v26 = 0;
      v27 = v8;
      do
      {
        v28 = sub_21C2485B8();
        sub_21C248588();
        if ((v28 & 1) != 0)
        {
          v29 = v6;
          (*(void (**)(char *, unint64_t, uint64_t))(v7 + 16))(v9, v19+ ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))+ *(_QWORD *)(v7 + 72) * v26, a3);
          v6 = v26 + 1;
          if (__OFADD__(v26, 1))
            goto LABEL_16;
        }
        else
        {
          result = sub_21C248840();
          if (v8 != 8)
          {
            __break(1u);
            return result;
          }
          v29 = v6;
          v38 = result;
          (*(void (**)(char *, uint64_t *, uint64_t))(v7 + 16))(v9, &v38, a3);
          swift_unknownObjectRelease();
          v6 = v26 + 1;
          if (__OFADD__(v26, 1))
          {
LABEL_16:
            __break(1u);
            break;
          }
        }
        sub_21C2470C4();
        sub_21C2470B8();
        (*(void (**)(char *, uint64_t))(v7 + 8))(v9, a3);
        ++v26;
        v30 = v6 == MEMORY[0x220776720](v19, a3);
        v6 = v29;
        v8 = v27;
      }
      while (!v30);
    }
    swift_bridgeObjectRelease();
    v31 = sub_21C2470C4();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 16))(v6, v36, v31);
    return swift_storeEnumTagMultiPayload();
  }
  return result;
}

uint64_t sub_21C232420(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t result;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  uint64_t v23;
  _QWORD v24[2];

  v24[1] = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_25524BF40);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24[0] = sub_21C247CC4();
  v7 = *(_QWORD *)(v24[0] - 8);
  v8 = MEMORY[0x24BDAC7A8](v24[0]);
  v10 = (char *)v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)v24 - v11;
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_25524CA60);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)v24 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21C2328D0((uint64_t)a1, (uint64_t)v15);
  result = swift_getEnumCaseMultiPayload();
  if ((_DWORD)result)
  {
    if ((_DWORD)result == 1)
    {
      (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v6, v15, v3);
      sub_21C247C94();
      v17 = sub_21C247CB8();
      v18 = sub_21C248738();
      if (os_log_type_enabled(v17, v18))
      {
        v19 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v19 = 0;
        _os_log_impl(&dword_21C1E3000, v17, v18, "Have sender: will send registry event", v19, 2u);
        MEMORY[0x2207770EC](v19, -1, -1);
      }

      (*(void (**)(char *, _QWORD))(v7 + 8))(v10, v24[0]);
      sub_21C2470B8();
      return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    }
  }
  else
  {
    sub_21C232918((uint64_t)a1);
    sub_21C247C94();
    v20 = sub_21C247CB8();
    v21 = sub_21C248738();
    if (os_log_type_enabled(v20, v21))
    {
      v22 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v22 = 0;
      _os_log_impl(&dword_21C1E3000, v20, v21, "Waiting for sender: will buffer registry event", v22, 2u);
      MEMORY[0x2207770EC](v22, -1, -1);
    }

    (*(void (**)(char *, _QWORD))(v7 + 8))(v12, v24[0]);
    sub_21C247880();
    v23 = sub_21C2485A0();
    swift_bridgeObjectRelease();
    *a1 = v23;
    return swift_storeEnumTagMultiPayload();
  }
  return result;
}

uint64_t sub_21C2326F0(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  return sub_21C231F3C(a1, *v2, *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24));
}

uint64_t sub_21C232700(uint64_t result)
{
  if (result)
  {
    swift_release();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_21C23272C(uint64_t result)
{
  if (result)
  {
    swift_retain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_21C232758()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 32);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_21C23278C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_21C1E664C;
  return sub_21C2313FC(a1, v4, v5, v1 + 32, v1 + 72);
}

uint64_t sub_21C232808()
{
  return sub_21C2486CC();
}

uint64_t sub_21C23282C(uint64_t *a1)
{
  uint64_t v1;

  return sub_21C232420(a1, *(_QWORD *)(v1 + 16));
}

unint64_t sub_21C232844()
{
  unint64_t result;
  uint64_t v1;

  result = qword_25524CA58;
  if (!qword_25524CA58)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25524CA50);
    result = MEMORY[0x22077702C](MEMORY[0x24BE76C78], v1);
    atomic_store(result, (unint64_t *)&qword_25524CA58);
  }
  return result;
}

uint64_t sub_21C232890(unint64_t *a1, uint64_t a2, uint64_t (*a3)(uint64_t), uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    v7 = a3(a2);
    result = MEMORY[0x22077702C](a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_21C2328D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25524CA60);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_21C232918(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25524CA60);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_21C232958(uint64_t a1)
{
  uint64_t v1;

  return sub_21C231CD0(a1, v1);
}

uint64_t type metadata accessor for SendingStreamPlaceholder(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for SendingStreamPlaceholder);
}

uint64_t sub_21C23296C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_21C2470C4();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t *sub_21C2329E4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  int EnumCaseMultiPayload;
  uint64_t v8;
  uint64_t v9;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      v9 = sub_21C2470C4();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(a1, a2, v9);
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(_QWORD *)(v5 + 64));
    }
    else
    {
      *a1 = *a2;
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_21C232AC0(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;

  result = swift_getEnumCaseMultiPayload();
  if ((_DWORD)result == 1)
  {
    v3 = sub_21C2470C4();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  }
  else if (!(_DWORD)result)
  {
    return swift_bridgeObjectRelease();
  }
  return result;
}

_QWORD *sub_21C232B28(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    v7 = sub_21C2470C4();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  else if (EnumCaseMultiPayload)
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    *a1 = *a2;
    swift_bridgeObjectRetain();
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_QWORD *sub_21C232BDC(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v5;
  int EnumCaseMultiPayload;
  uint64_t v7;

  if (a1 != a2)
  {
    v5 = *(_QWORD *)(a3 - 8);
    (*(void (**)(_QWORD *, uint64_t))(v5 + 8))(a1, a3);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      v7 = sub_21C2470C4();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(_QWORD *)(v5 + 64));
    }
    else
    {
      *a1 = *a2;
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

void *sub_21C232CA8(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v6 = sub_21C2470C4();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

void *sub_21C232D38(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;

  if (a1 != a2)
  {
    v5 = *(_QWORD *)(a3 - 8);
    (*(void (**)(void *, uint64_t))(v5 + 8))(a1, a3);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v6 = sub_21C2470C4();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(v5 + 64));
    }
  }
  return a1;
}

uint64_t type metadata accessor for SendingStreamPlaceholder.State(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for SendingStreamPlaceholder.State);
}

uint64_t sub_21C232DEC(uint64_t a1, uint64_t a2)
{
  return *(_QWORD *)(a2 + 24);
}

uint64_t sub_21C232DF4()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_21C232E18(uint64_t a1)
{
  uint64_t *v1;

  return sub_21C231FCC(a1, v1[4], v1[2], v1[3]);
}

uint64_t sub_21C232E24(uint64_t a1)
{
  uint64_t *v1;

  return sub_21C2320A8(a1, v1[4], v1[2], v1[3]);
}

uint64_t initializeWithCopy for MeasurementsView(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for MeasurementsView(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  return a1;
}

__n128 __swift_memcpy25_8(uint64_t a1, uint64_t a2)
{
  __n128 result;

  result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for MeasurementsView(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_release();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  return a1;
}

uint64_t getEnumTagSinglePayload for MeasurementsView(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 25))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MeasurementsView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_BYTE *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 25) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 25) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for MeasurementsView()
{
  return &type metadata for MeasurementsView;
}

uint64_t sub_21C232FCC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_21C232FDC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X8>)
{
  uint64_t v10;
  uint64_t result;

  swift_retain();
  v10 = sub_21C248024();
  swift_retain();
  result = sub_21C247FB8();
  *(_QWORD *)a5 = a1;
  *(_WORD *)(a5 + 8) = 256;
  *(_BYTE *)(a5 + 10) = a4;
  *(_QWORD *)(a5 + 16) = v10;
  *(_QWORD *)(a5 + 24) = a3;
  *(_QWORD *)(a5 + 32) = a1;
  *(_WORD *)(a5 + 40) = 257;
  *(_BYTE *)(a5 + 42) = a4;
  *(_QWORD *)(a5 + 48) = a2;
  *(_QWORD *)(a5 + 56) = result;
  return result;
}

__n128 sub_21C233058@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  char v12;
  char v13;
  uint64_t v14;
  char v15;
  char v16;
  char v17;
  __n128 result;
  __int128 v19;
  uint64_t v20;
  char v21;
  char v22;
  char v23;
  __n128 v24;
  uint64_t v25;
  char v26;
  char v27;
  char v28;
  __int128 v29;

  v3 = *(_QWORD *)v1;
  v4 = *(_QWORD *)(v1 + 8);
  v5 = *(_QWORD *)(v1 + 16);
  v6 = *(_BYTE *)(v1 + 24);
  v7 = sub_21C2483B4();
  v9 = v8;
  sub_21C232FDC(v3, v4, v5, v6, (uint64_t)&v20);
  v10 = v20;
  v11 = v21;
  v12 = v22;
  v13 = v23;
  v14 = v25;
  v15 = v26;
  v16 = v27;
  v17 = v28;
  result = v24;
  v19 = v29;
  *(_QWORD *)a1 = v7;
  *(_QWORD *)(a1 + 8) = v9;
  *(_QWORD *)(a1 + 16) = v10;
  *(_BYTE *)(a1 + 24) = v11;
  *(_BYTE *)(a1 + 25) = v12;
  *(_BYTE *)(a1 + 26) = v13;
  *(__n128 *)(a1 + 32) = result;
  *(_QWORD *)(a1 + 48) = v14;
  *(_BYTE *)(a1 + 56) = v15;
  *(_BYTE *)(a1 + 57) = v16;
  *(_BYTE *)(a1 + 58) = v17;
  *(_OWORD *)(a1 + 64) = v19;
  return result;
}

uint64_t initializeWithCopy for ArrowView(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_WORD *)(a1 + 9) = *(_WORD *)(a2 + 9);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for ArrowView(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_retain();
  swift_release();
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_BYTE *)(a1 + 9) = *(_BYTE *)(a2 + 9);
  *(_BYTE *)(a1 + 10) = *(_BYTE *)(a2 + 10);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  return a1;
}

uint64_t assignWithTake for ArrowView(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_release();
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_BYTE *)(a1 + 9) = *(_BYTE *)(a2 + 9);
  *(_BYTE *)(a1 + 10) = *(_BYTE *)(a2 + 10);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  return a1;
}

ValueMetadata *type metadata accessor for ArrowView()
{
  return &type metadata for ArrowView;
}

uint64_t sub_21C23322C()
{
  return sub_21C1E78E4(&qword_25524CB90, &qword_25524CB98, MEMORY[0x24BDF4750]);
}

uint64_t sub_21C233258()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_21C233268@<X0>(uint64_t a1@<X0>, int a2@<W1>, double a3@<X4>, char a4@<W5>, double a5@<X6>, char a6@<W7>, _QWORD *a7@<X8>, double a8, char a9, double a10, char a11, double a12, char a13, double a14, char a15, uint64_t a16, char a17)
{
  char v18;
  char v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  double v27;
  double v28;
  double v29;
  double v30;
  double v31;
  double v32;
  char v33;
  uint64_t v34;
  uint64_t v39;
  uint64_t v40;
  _QWORD v42[45];
  _QWORD v43[2];
  _BYTE v44[304];
  double v45;
  double v46;
  double v47;
  double v48;
  char v49;
  _BYTE __src[304];

  v18 = a4 & 1;
  v19 = a6 & 1;
  v40 = sub_21C248024();
  v39 = sub_21C247FB8();
  sub_21C233470(a1, a2 & 0x10101, a3, v18, a5, v19, (uint64_t)__src, a8, a9 & 1, a10, a11 & 1, a12, a13 & 1, a14, a15 & 1, a16, a17);
  sub_21C247E50();
  v21 = v20;
  v23 = v22;
  sub_21C247E50();
  v25 = v24 / 5.0;
  v26 = v23 * 0.25;
  v28 = v27 / 2.4;
  if ((a17 & 1) != 0)
    v29 = v25;
  else
    v29 = 0.0;
  if ((a17 & 1) != 0)
    v30 = 0.0;
  else
    v30 = v28;
  if ((a17 & 1) != 0)
    v31 = v21 / 5.0;
  else
    v31 = 0.0;
  if ((a17 & 1) != 0)
    v32 = 0.0;
  else
    v32 = v26;
  v33 = sub_21C2481BC();
  v34 = sub_21C2482B8();
  v42[0] = v40;
  v42[1] = v39;
  memcpy(&v42[2], __src, 0x128uLL);
  LOBYTE(v42[39]) = v33;
  *(double *)&v42[40] = v32;
  *(double *)&v42[41] = v31;
  *(double *)&v42[42] = v30;
  *(double *)&v42[43] = v29;
  LOBYTE(v42[44]) = 0;
  memcpy(a7, v42, 0x161uLL);
  a7[45] = v34;
  sub_21C233D20((uint64_t)v42);
  v43[0] = v40;
  v43[1] = v39;
  memcpy(v44, __src, 0x128uLL);
  v44[296] = v33;
  v45 = v32;
  v46 = v31;
  v47 = v30;
  v48 = v29;
  v49 = 0;
  return sub_21C233DA4((uint64_t)v43);
}

uint64_t sub_21C233470@<X0>(uint64_t a1@<X0>, int a2@<W1>, double a3@<X4>, char a4@<W5>, double a5@<X6>, char a6@<W7>, uint64_t a7@<X8>, double a8, char a9, double a10, char a11, double a12, char a13, double a14, char a15, uint64_t a16, char a17)
{
  uint64_t v20;
  double v21;
  uint64_t v22;
  uint64_t v23;
  int v24;
  unsigned __int8 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  uint64_t v40;
  char v41;
  double v42;
  double v43;
  double v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  uint64_t v58;
  int v60;
  char v61;
  char v62;
  char v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  uint64_t v80;
  _OWORD v81[14];
  uint64_t v82;
  char v83;
  _OWORD v84[14];
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  __int16 v91;
  uint64_t v92;
  __int16 v93;
  __int16 v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  __int16 v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  __int128 v106;
  __int128 v107;
  __int128 v108;
  __int128 v109;
  __int128 v110;
  __int128 v111;
  __int128 v112;
  __int128 v113;
  __int128 v114;
  __int128 v115;
  __int128 v116;
  __int128 v117;
  __int128 v118;
  __int128 v119;
  uint64_t v120;

  v62 = a4 & 1;
  v61 = a6 & 1;
  v20 = sub_21C24800C();
  MEMORY[0x24BDAC7A8](v20);
  swift_retain_n();
  v21 = 0.0;
  sub_21C247DCC();
  v91 = a2 & 0x101;
  v60 = a2;
  v92 = a1;
  v93 = 256;
  v94 = a2 & 0x101;
  v95 = v86;
  v96 = v87;
  v97 = v88;
  v98 = v89;
  v99 = v90;
  v100 = a1;
  v101 = 256;
  v102 = sub_21C2483B4();
  v103 = v22;
  v104 = sub_21C2483B4();
  v105 = v23;
  sub_21C2483B4();
  sub_21C233954(a3, v62, a5, v61, a8, a9 & 1, a10, a11 & 1, (uint64_t)&v106, a12, a13 & 1, a14, a15 & 1);
  swift_bridgeObjectRelease();
  swift_release_n();
  sub_21C248000();
  sub_21C247FF4();
  v24 = sub_21C2481B0();
  v25 = sub_21C2481B0();
  sub_21C247E50();
  if (v24 == v25)
    v26 = v27;
  *(_QWORD *)&v84[0] = v26;
  sub_21C233E28();
  sub_21C247FDC();
  sub_21C247FF4();
  sub_21C248018();
  v28 = sub_21C248240();
  v30 = v29;
  v32 = v31 & 1;
  v33 = sub_21C248234();
  v35 = v34;
  v65 = v36;
  v38 = v37;
  sub_21C20DFE8(v28, v30, v32);
  swift_bridgeObjectRelease();
  v39 = objc_msgSend((id)objc_opt_self(), sel_secondarySystemBackgroundColor);
  v40 = MEMORY[0x22077642C](v39);
  v41 = sub_21C2481BC();
  if ((a17 & 1) != 0)
  {
    sub_21C247E50();
    v43 = v42 / 7.0;
    v44 = -(v42 / 7.0);
    if ((v60 & 0x10000) != 0)
      v21 = v43;
    else
      v21 = v44;
  }
  v45 = v117;
  v78 = v118;
  v79 = v119;
  v46 = v113;
  v47 = v114;
  v74 = v114;
  v75 = v115;
  v48 = v115;
  v49 = v116;
  v76 = v116;
  v77 = v117;
  v50 = v109;
  v51 = v110;
  v70 = v110;
  v71 = v111;
  v52 = v111;
  v53 = v112;
  v72 = v112;
  v73 = v113;
  v66 = v106;
  v67 = v107;
  v55 = v106;
  v54 = v107;
  v68 = v108;
  v69 = v109;
  v81[12] = v118;
  v81[13] = v119;
  v81[8] = v114;
  v81[9] = v115;
  v81[10] = v116;
  v81[11] = v117;
  v56 = v108;
  v81[4] = v110;
  v81[5] = v111;
  v81[6] = v112;
  v81[7] = v113;
  v81[0] = v106;
  v81[1] = v107;
  v81[2] = v108;
  v81[3] = v109;
  v57 = v119;
  *(_OWORD *)(a7 + 192) = v118;
  *(_OWORD *)(a7 + 208) = v57;
  *(_OWORD *)(a7 + 128) = v47;
  *(_OWORD *)(a7 + 144) = v48;
  *(_OWORD *)(a7 + 160) = v49;
  *(_OWORD *)(a7 + 176) = v45;
  *(_OWORD *)(a7 + 64) = v51;
  *(_OWORD *)(a7 + 80) = v52;
  *(_OWORD *)(a7 + 96) = v53;
  *(_OWORD *)(a7 + 112) = v46;
  *(_OWORD *)a7 = v55;
  *(_OWORD *)(a7 + 16) = v54;
  v80 = v120;
  v82 = v120;
  v58 = v120;
  *(_OWORD *)(a7 + 32) = v56;
  *(_OWORD *)(a7 + 48) = v50;
  v83 = v65 & 1;
  *(_QWORD *)(a7 + 224) = v58;
  *(_QWORD *)(a7 + 232) = v33;
  *(_QWORD *)(a7 + 240) = v35;
  *(_BYTE *)(a7 + 248) = v65 & 1;
  *(_QWORD *)(a7 + 256) = v38;
  *(_QWORD *)(a7 + 264) = v40;
  *(_BYTE *)(a7 + 272) = v41;
  *(_QWORD *)(a7 + 280) = 0;
  *(double *)(a7 + 288) = v21;
  sub_21C233EB4((uint64_t)v81);
  sub_21C20DF28(v33, v35, v65 & 1);
  swift_bridgeObjectRetain();
  swift_retain();
  sub_21C20DFE8(v33, v35, v65 & 1);
  swift_release();
  swift_bridgeObjectRelease();
  v84[12] = v78;
  v84[13] = v79;
  v85 = v80;
  v84[8] = v74;
  v84[9] = v75;
  v84[10] = v76;
  v84[11] = v77;
  v84[4] = v70;
  v84[5] = v71;
  v84[6] = v72;
  v84[7] = v73;
  v84[0] = v66;
  v84[1] = v67;
  v84[2] = v68;
  v84[3] = v69;
  return sub_21C233E6C((uint64_t)v84);
}

uint64_t sub_21C233954@<X0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13)
{
  uint64_t v13;
  void *v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;

  if ((a2 & 1) != 0)
    a1 = -INFINITY;
  if ((a4 & 1) != 0)
    a3 = a1;
  if ((a6 & 1) != 0)
    a5 = a3;
  if (a1 > a3 || a3 > a5)
    goto LABEL_22;
  if ((a8 & 1) != 0)
    a7 = -INFINITY;
  if ((a11 & 1) != 0)
    a10 = a7;
  if ((a13 & 1) != 0)
    a12 = a10;
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    sub_21C24872C();
    v23 = (void *)sub_21C2481A4();
    sub_21C247C70();

  }
  sub_21C247F1C();
  v24 = *(_OWORD *)(v13 + 80);
  *(_OWORD *)(a9 + 64) = *(_OWORD *)(v13 + 64);
  *(_OWORD *)(a9 + 80) = v24;
  *(_OWORD *)(a9 + 96) = *(_OWORD *)(v13 + 96);
  *(_QWORD *)(a9 + 112) = *(_QWORD *)(v13 + 112);
  v25 = *(_OWORD *)(v13 + 16);
  *(_OWORD *)a9 = *(_OWORD *)v13;
  *(_OWORD *)(a9 + 16) = v25;
  v26 = *(_OWORD *)(v13 + 48);
  *(_OWORD *)(a9 + 32) = *(_OWORD *)(v13 + 32);
  *(_OWORD *)(a9 + 48) = v26;
  *(_OWORD *)(a9 + 152) = v30;
  *(_OWORD *)(a9 + 136) = v29;
  *(_OWORD *)(a9 + 120) = v28;
  *(_OWORD *)(a9 + 216) = v34;
  *(_OWORD *)(a9 + 200) = v33;
  *(_OWORD *)(a9 + 184) = v32;
  *(_OWORD *)(a9 + 168) = v31;
  return sub_21C233EB4(v13);
}

uint64_t sub_21C233B20@<X0>(_QWORD *a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  char v4;
  char v5;
  char v6;
  uint64_t v7;
  int v8;
  BOOL v9;
  BOOL v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;

  v3 = *v1;
  v4 = *((_BYTE *)v1 + 8);
  v5 = *((_BYTE *)v1 + 9);
  v6 = *((_BYTE *)v1 + 10);
  v7 = v1[2];
  v16 = v1[3];
  v8 = sub_21C2481B0();
  v9 = v8 == sub_21C2481B0();
  v10 = v9;
  v11 = !v9;
  if (v9)
    v12 = 0;
  else
    v12 = 0x4024000000000000;
  if (v9)
    v13 = 0x4024000000000000;
  else
    v13 = 0;
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = v3;
  *(_BYTE *)(v14 + 24) = v4;
  *(_BYTE *)(v14 + 25) = v5;
  *(_BYTE *)(v14 + 26) = v6;
  *(_QWORD *)(v14 + 32) = v7;
  *(_QWORD *)(v14 + 40) = v16;
  *(_QWORD *)(v14 + 48) = v13;
  *(_BYTE *)(v14 + 56) = v11;
  *(_QWORD *)(v14 + 64) = v13;
  *(_BYTE *)(v14 + 72) = v11;
  *(_QWORD *)(v14 + 80) = v13;
  *(_BYTE *)(v14 + 88) = v11;
  *(_QWORD *)(v14 + 96) = v12;
  *(_BYTE *)(v14 + 104) = v10;
  *(_QWORD *)(v14 + 112) = v12;
  *(_BYTE *)(v14 + 120) = v10;
  *(_QWORD *)(v14 + 128) = v12;
  *(_BYTE *)(v14 + 136) = v10;
  *(_BYTE *)(v14 + 137) = v10;
  *a1 = sub_21C233C3C;
  a1[1] = v14;
  return swift_retain();
}

uint64_t sub_21C233C18()
{
  swift_release();
  return swift_deallocObject();
}

void *sub_21C233C3C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  int v6;
  int v7;
  int v8;
  _QWORD __src[47];

  v4 = *(_QWORD *)(v2 + 32);
  v5 = *(_QWORD *)(v2 + 40);
  if (*(_BYTE *)(v2 + 25))
    v6 = 256;
  else
    v6 = 0;
  v7 = v6 | *(unsigned __int8 *)(v2 + 24);
  if (*(_BYTE *)(v2 + 26))
    v8 = 0x10000;
  else
    v8 = 0;
  sub_21C233268(*(_QWORD *)(v2 + 16), v7 | v8, *(double *)(v2 + 48), *(_BYTE *)(v2 + 56), *(double *)(v2 + 64), *(_BYTE *)(v2 + 72), __src, *(double *)(v2 + 80), *(_BYTE *)(v2 + 88), *(double *)(v2 + 96), *(_BYTE *)(v2 + 104), *(double *)(v2 + 112), *(_BYTE *)(v2 + 120), *(double *)(v2 + 128), *(_BYTE *)(v2 + 136), a1, *(_BYTE *)(v2 + 137));
  *a2 = v4;
  a2[1] = v5;
  return memcpy(a2 + 2, __src, 0x170uLL);
}

uint64_t sub_21C233D20(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char v4;

  v2 = *(_QWORD *)(a1 + 248);
  v3 = *(_QWORD *)(a1 + 256);
  v4 = *(_BYTE *)(a1 + 264);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  sub_21C20DF28(v2, v3, v4);
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

uint64_t sub_21C233DA4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char v4;

  v2 = *(_QWORD *)(a1 + 248);
  v3 = *(_QWORD *)(a1 + 256);
  v4 = *(_BYTE *)(a1 + 264);
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  sub_21C20DFE8(v2, v3, v4);
  swift_release();
  swift_bridgeObjectRelease();
  return a1;
}

unint64_t sub_21C233E28()
{
  unint64_t result;

  result = qword_25524CBA0;
  if (!qword_25524CBA0)
  {
    result = MEMORY[0x22077702C](MEMORY[0x24BDEADB8], MEMORY[0x24BEE50B0]);
    atomic_store(result, (unint64_t *)&qword_25524CBA0);
  }
  return result;
}

uint64_t sub_21C233E6C(uint64_t a1)
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return a1;
}

uint64_t sub_21C233EB4(uint64_t a1)
{
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

_WORD *__swift_memcpy2_1(_WORD *result, _WORD *a2)
{
  *result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for Arrow(unsigned __int16 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFF)
    goto LABEL_17;
  if (a2 + 65281 <= 0xFFFEFFFF)
    v2 = 2;
  else
    v2 = 4;
  if (a2 + 65281 < 0xFF0000)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 16)) - 65281;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
      return (*a1 | (v4 << 16)) - 65281;
    }
    v4 = *((unsigned __int8 *)a1 + 2);
    if (*((_BYTE *)a1 + 2))
      return (*a1 | (v4 << 16)) - 65281;
  }
LABEL_17:
  v6 = *(unsigned __int8 *)a1;
  v7 = v6 >= 2;
  v8 = v6 - 2;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for Arrow(_WORD *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 65281 <= 0xFFFEFFFF)
    v3 = 2;
  else
    v3 = 4;
  if (a3 + 65281 < 0xFF0000)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_21C233FE8 + 4 * byte_21C24C1C5[v4]))();
  *a1 = a2 - 255;
  return ((uint64_t (*)(void))((char *)sub_21C23401C + 4 * byte_21C24C1C0[v4]))();
}

uint64_t sub_21C23401C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 2) = v1;
  return result;
}

uint64_t sub_21C234024(uint64_t result, int a2)
{
  *(_WORD *)(result + 2) = 0;
  if (a2)
    JUMPOUT(0x21C23402CLL);
  return result;
}

uint64_t sub_21C234038(uint64_t result, int a2)
{
  *(_DWORD *)(result + 2) = 0;
  if (!a2)
    JUMPOUT(0x21C234040);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_21C234044(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 2) = v1;
  return result;
}

uint64_t sub_21C23404C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 2) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Arrow()
{
  return &type metadata for Arrow;
}

uint64_t sub_21C234068()
{
  return sub_21C1E78E4(&qword_25524CBA8, &qword_25524CBB0, MEMORY[0x24BDEC6F8]);
}

uint64_t sub_21C234094()
{
  return sub_21C1E78E4(&qword_25524CBB8, &qword_25524CBC0, MEMORY[0x24BDEB358]);
}

uint64_t sub_21C2340C0(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4, uint64_t a5, __int16 a6)
{
  double Width;
  double Height;
  int v13;
  _OWORD *v14;
  uint64_t v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  uint64_t v27;
  CGRect v29;

  Width = CGRectGetWidth(*(CGRect *)&a1);
  v29.origin.x = a1;
  v29.origin.y = a2;
  v29.size.width = a3;
  v29.size.height = a4;
  Height = CGRectGetHeight(v29);
  v13 = sub_21C2481B0();
  if (v13 == sub_21C2481B0())
  {
    if ((a6 & 0x100) != 0)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_25524CBE0);
      v14 = (_OWORD *)swift_allocObject();
      v14[1] = xmmword_21C24C3B0;
      v14[2] = xmmword_21C24C3D0;
      v14[3] = xmmword_21C24C3E0;
      v14[4] = xmmword_21C24C3F0;
      __asm { FMOV            V0.2D, #10.0 }
      v14[5] = _Q0;
      v14[6] = xmmword_21C24C3D0;
      sub_21C24821C();
      swift_bridgeObjectRelease();
    }
    __swift_instantiateConcreteTypeFromMangledName(&qword_25524CBE0);
    v20 = swift_allocObject();
    *(_OWORD *)(v20 + 16) = xmmword_21C24C3C0;
    *(_OWORD *)(v20 + 32) = xmmword_21C24C3F0;
    v21 = Height + -10.0;
    *(_QWORD *)(v20 + 48) = 0x4014000000000000;
    v22 = 10.0;
    Width = 5.0;
    v23 = 0.0;
    v24 = Height + -10.0;
    v25 = Height + -10.0;
    v26 = 5.0;
  }
  else
  {
    v21 = Height * 0.5;
    if ((a6 & 0x100) != 0)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_25524CBE0);
      v27 = swift_allocObject();
      *(_OWORD *)(v27 + 16) = xmmword_21C24C3B0;
      *(_QWORD *)(v27 + 32) = 0x4024000000000000;
      *(double *)(v27 + 40) = v21;
      v24 = v21 + -5.0;
      *(_QWORD *)(v27 + 48) = 0x4024000000000000;
      *(double *)(v27 + 56) = v21 + -5.0;
      *(_QWORD *)(v27 + 64) = 0;
      *(double *)(v27 + 72) = v21;
      v25 = v21 + 5.0;
      *(_QWORD *)(v27 + 80) = 0x4024000000000000;
      *(double *)(v27 + 88) = v21 + 5.0;
      *(_QWORD *)(v27 + 96) = 0x4024000000000000;
      *(double *)(v27 + 104) = v21;
      sub_21C24821C();
      swift_bridgeObjectRelease();
    }
    else
    {
      v24 = v21 + -5.0;
      v25 = v21 + 5.0;
    }
    __swift_instantiateConcreteTypeFromMangledName(&qword_25524CBE0);
    v20 = swift_allocObject();
    *(_OWORD *)(v20 + 16) = xmmword_21C24C3C0;
    *(_QWORD *)(v20 + 32) = 0x4024000000000000;
    v23 = Width + -10.0;
    *(double *)(v20 + 40) = v21;
    *(double *)(v20 + 48) = Width + -10.0;
    Height = Height * 0.5;
    v22 = Width + -10.0;
    v26 = Width + -10.0;
  }
  *(double *)(v20 + 56) = v21;
  *(double *)(v20 + 64) = v23;
  *(double *)(v20 + 72) = v24;
  *(double *)(v20 + 80) = Width;
  *(double *)(v20 + 88) = Height;
  *(double *)(v20 + 96) = v22;
  *(double *)(v20 + 104) = v25;
  *(double *)(v20 + 112) = v26;
  *(double *)(v20 + 120) = v21;
  sub_21C24821C();
  swift_bridgeObjectRelease();
  return sub_21C248210();
}

double sub_21C234300@<D0>(uint64_t a1@<X8>)
{
  double result;
  __int128 v3;
  __int128 v4;
  char v5;

  sub_21C248228();
  result = *(double *)&v3;
  *(_OWORD *)a1 = v3;
  *(_OWORD *)(a1 + 16) = v4;
  *(_BYTE *)(a1 + 32) = v5;
  return result;
}

uint64_t sub_21C23436C()
{
  return sub_21C2482E8();
}

void (*sub_21C234384(_QWORD *a1))(_QWORD *a1)
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_21C247D6C();
  return sub_21C22554C;
}

uint64_t sub_21C2343E4()
{
  sub_21C2345B8();
  return sub_21C248324();
}

uint64_t sub_21C234434()
{
  sub_21C2345B8();
  return sub_21C2482F4();
}

uint64_t sub_21C234484()
{
  sub_21C2345B8();
  return sub_21C24830C();
}

unint64_t sub_21C2344C0()
{
  unint64_t result;

  result = qword_25524CBC8;
  if (!qword_25524CBC8)
  {
    result = MEMORY[0x22077702C](MEMORY[0x24BDEEF18], MEMORY[0x24BDEEF38]);
    atomic_store(result, (unint64_t *)&qword_25524CBC8);
  }
  return result;
}

unint64_t sub_21C234508()
{
  unint64_t result;

  result = qword_25524CBD0;
  if (!qword_25524CBD0)
  {
    result = MEMORY[0x22077702C](&unk_21C24C308, &type metadata for Arrow);
    atomic_store(result, (unint64_t *)&qword_25524CBD0);
  }
  return result;
}

unint64_t sub_21C234550()
{
  unint64_t result;

  result = qword_25524CBD8;
  if (!qword_25524CBD8)
  {
    result = MEMORY[0x22077702C](&unk_21C24C2B8, &type metadata for Arrow);
    atomic_store(result, (unint64_t *)&qword_25524CBD8);
  }
  return result;
}

uint64_t sub_21C234594(uint64_t a1)
{
  uint64_t v1;
  __int16 v2;

  if (*(_BYTE *)(v1 + 49))
    v2 = 256;
  else
    v2 = 0;
  return sub_21C2340C0(*(CGFloat *)(v1 + 16), *(CGFloat *)(v1 + 24), *(CGFloat *)(v1 + 32), *(CGFloat *)(v1 + 40), a1, v2 | *(unsigned __int8 *)(v1 + 48));
}

unint64_t sub_21C2345B8()
{
  unint64_t result;

  result = qword_25524CBE8;
  if (!qword_25524CBE8)
  {
    result = MEMORY[0x22077702C](&unk_21C24C358, &type metadata for Arrow);
    atomic_store(result, (unint64_t *)&qword_25524CBE8);
  }
  return result;
}

uint64_t (*sub_21C234600())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t sub_21C23463C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3[29] = a2;
  v3[30] = v2;
  v3[28] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25524A590);
  v3[31] = swift_task_alloc();
  v4 = sub_21C24761C();
  v3[32] = v4;
  v3[33] = *(_QWORD *)(v4 - 8);
  v3[34] = swift_task_alloc();
  v5 = sub_21C2472E0();
  v3[35] = v5;
  v3[36] = *(_QWORD *)(v5 - 8);
  v3[37] = swift_task_alloc();
  v3[38] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_21C2346FC()
{
  uint64_t v0;
  _OWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;

  v1 = (_OWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v0 + 304);
  v3 = *(_QWORD *)(v0 + 272);
  v15 = *(_QWORD *)(v0 + 288);
  v16 = *(_QWORD *)(v0 + 280);
  v5 = *(_QWORD *)(v0 + 256);
  v4 = *(_QWORD *)(v0 + 264);
  v6 = *(_QWORD *)(v0 + 240);
  v7 = *(_QWORD *)(v0 + 248);
  sub_21C2475C8();
  sub_21C247628();
  sub_21C247604();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  sub_21C235098(v2, v7);
  sub_21C1F03B0(v7, &qword_25524A590);
  v8 = *(void (**)(uint64_t, uint64_t))(v15 + 8);
  *(_QWORD *)(v0 + 312) = v8;
  v8(v2, v16);
  sub_21C2475C8();
  swift_beginAccess();
  v9 = *(_QWORD *)(v6 + 128);
  if (*(_QWORD *)(v9 + 16))
  {
    v10 = *(_QWORD *)(v0 + 296);
    swift_bridgeObjectRetain();
    v11 = sub_21C1F64E0(v10);
    if ((v12 & 1) != 0)
    {
      sub_21C1E712C(*(_QWORD *)(v9 + 56) + 40 * v11, v0 + 16);
    }
    else
    {
      *(_QWORD *)(v0 + 48) = 0;
      *v1 = 0u;
      *(_OWORD *)(v0 + 32) = 0u;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    *(_QWORD *)(v0 + 48) = 0;
    *v1 = 0u;
    *(_OWORD *)(v0 + 32) = 0u;
  }
  v8(*(_QWORD *)(v0 + 296), *(_QWORD *)(v0 + 280));
  if (*(_QWORD *)(v0 + 40))
  {
    sub_21C1EB66C((__int128 *)(v0 + 16), *(_QWORD *)(v0 + 224));
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    sub_21C1F03B0(v0 + 16, &qword_25524C1A8);
    v14 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 320) = v14;
    *v14 = v0;
    v14[1] = sub_21C2348FC;
    return sub_21C237E88(v0 + 56, *(_QWORD *)(v0 + 232));
  }
}

uint64_t sub_21C2348FC()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 328) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_21C234960()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t *boxed_opaque_existential_1;
  _QWORD *v7;

  v1 = v0[38];
  sub_21C2475C8();
  sub_21C1E712C((uint64_t)(v0 + 7), (uint64_t)(v0 + 12));
  swift_beginAccess();
  sub_21C227A4C((uint64_t)(v0 + 12), v1);
  swift_endAccess();
  sub_21C2475C8();
  v2 = v0[10];
  v3 = v0[11];
  v4 = __swift_project_boxed_opaque_existential_1(v0 + 7, v2);
  v0[20] = v2;
  v5 = *(_QWORD *)(v3 + 8);
  v0[21] = v5;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v0 + 17);
  (*(void (**)(uint64_t *, _QWORD *, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(boxed_opaque_existential_1, v4, v2);
  v7 = (_QWORD *)swift_task_alloc();
  v0[42] = v7;
  *v7 = v0;
  v7[1] = sub_21C234A80;
  return sub_21C23BA68(v0[38], (uint64_t)boxed_opaque_existential_1, v0[30], v2, v5);
}

uint64_t sub_21C234A80()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t, uint64_t);
  uint64_t v4;

  v1 = *(_QWORD *)v0 + 136;
  v2 = *(_QWORD *)(*(_QWORD *)v0 + 304);
  v3 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)v0 + 312);
  v4 = *(_QWORD *)(*(_QWORD *)v0 + 280);
  swift_task_dealloc();
  v3(v2, v4);
  __swift_destroy_boxed_opaque_existential_1(v1);
  return swift_task_switch();
}

uint64_t sub_21C234B08()
{
  uint64_t v0;

  sub_21C1EB66C((__int128 *)(v0 + 56), *(_QWORD *)(v0 + 224));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21C234B70()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21C234BCC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3[29] = a2;
  v3[30] = v2;
  v3[28] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25524A590);
  v3[31] = swift_task_alloc();
  v4 = sub_21C24761C();
  v3[32] = v4;
  v3[33] = *(_QWORD *)(v4 - 8);
  v3[34] = swift_task_alloc();
  v5 = sub_21C2472E0();
  v3[35] = v5;
  v3[36] = *(_QWORD *)(v5 - 8);
  v3[37] = swift_task_alloc();
  v3[38] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_21C234C8C()
{
  uint64_t v0;
  _OWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;

  v1 = (_OWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v0 + 304);
  v3 = *(_QWORD *)(v0 + 272);
  v15 = *(_QWORD *)(v0 + 288);
  v16 = *(_QWORD *)(v0 + 280);
  v5 = *(_QWORD *)(v0 + 256);
  v4 = *(_QWORD *)(v0 + 264);
  v6 = *(_QWORD *)(v0 + 240);
  v7 = *(_QWORD *)(v0 + 248);
  sub_21C2475C8();
  sub_21C247628();
  sub_21C247604();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  sub_21C235098(v2, v7);
  sub_21C1F03B0(v7, &qword_25524A590);
  v8 = *(void (**)(uint64_t, uint64_t))(v15 + 8);
  *(_QWORD *)(v0 + 312) = v8;
  v8(v2, v16);
  sub_21C2475C8();
  swift_beginAccess();
  v9 = *(_QWORD *)(v6 + 136);
  if (*(_QWORD *)(v9 + 16))
  {
    v10 = *(_QWORD *)(v0 + 296);
    swift_bridgeObjectRetain();
    v11 = sub_21C1F64E0(v10);
    if ((v12 & 1) != 0)
    {
      sub_21C1E712C(*(_QWORD *)(v9 + 56) + 40 * v11, v0 + 16);
    }
    else
    {
      *(_QWORD *)(v0 + 48) = 0;
      *v1 = 0u;
      *(_OWORD *)(v0 + 32) = 0u;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    *(_QWORD *)(v0 + 48) = 0;
    *v1 = 0u;
    *(_OWORD *)(v0 + 32) = 0u;
  }
  v8(*(_QWORD *)(v0 + 296), *(_QWORD *)(v0 + 280));
  if (*(_QWORD *)(v0 + 40))
  {
    sub_21C1EB66C((__int128 *)(v0 + 16), *(_QWORD *)(v0 + 224));
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    sub_21C1F03B0(v0 + 16, &qword_25524C1A0);
    v14 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 320) = v14;
    *v14 = v0;
    v14[1] = sub_21C234E8C;
    return sub_21C238398(v0 + 56, *(_QWORD *)(v0 + 232));
  }
}

uint64_t sub_21C234E8C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 328) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_21C234EF0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t *boxed_opaque_existential_1;
  _QWORD *v7;

  v1 = v0[38];
  sub_21C2475C8();
  sub_21C1E712C((uint64_t)(v0 + 7), (uint64_t)(v0 + 12));
  swift_beginAccess();
  sub_21C2277A0((uint64_t)(v0 + 12), v1);
  swift_endAccess();
  sub_21C2475C8();
  v2 = v0[10];
  v3 = v0[11];
  v4 = __swift_project_boxed_opaque_existential_1(v0 + 7, v2);
  v0[20] = v2;
  v5 = *(_QWORD *)(v3 + 8);
  v0[21] = v5;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v0 + 17);
  (*(void (**)(uint64_t *, _QWORD *, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(boxed_opaque_existential_1, v4, v2);
  v7 = (_QWORD *)swift_task_alloc();
  v0[42] = v7;
  *v7 = v0;
  v7[1] = sub_21C235010;
  return sub_21C23BA68(v0[38], (uint64_t)boxed_opaque_existential_1, v0[30], v2, v5);
}

uint64_t sub_21C235010()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t, uint64_t);
  uint64_t v4;

  v1 = *(_QWORD *)v0 + 136;
  v2 = *(_QWORD *)(*(_QWORD *)v0 + 304);
  v3 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)v0 + 312);
  v4 = *(_QWORD *)(*(_QWORD *)v0 + 280);
  swift_task_dealloc();
  v3(v2, v4);
  __swift_destroy_boxed_opaque_existential_1(v1);
  return swift_task_switch();
}

uint64_t sub_21C235098(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t updated;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  char *v37;
  unsigned int (*v38)(char *, uint64_t, uint64_t);
  uint64_t v39;
  uint64_t v40;
  NSObject *v41;
  os_log_type_t v42;
  uint8_t *v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  unint64_t v47;
  char *v48;
  uint64_t v49;
  void (*v50)(char *, uint64_t, uint64_t);
  char *v51;
  char *v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char v57;
  void (*v58)(char *, uint64_t, uint64_t, uint64_t);
  char *v59;
  uint64_t v60;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  void (*v65)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v66;
  void (*v67)(char *, char *, uint64_t);
  uint64_t v68;
  uint64_t v69;
  unsigned int (*v70)(uint64_t, uint64_t, uint64_t);
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  char v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  char v81;
  void (*v82)(char *, char *, uint64_t);
  uint64_t v83;
  void (*v84)(char *, uint64_t);
  uint64_t v85;
  uint64_t v86;
  void (*v87)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  void (*v99)(char *, uint64_t, uint64_t);
  uint64_t v100;
  char *v101;
  char *v102;
  uint64_t v103;
  void (*v104)(char *, uint64_t, uint64_t);
  char *v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  char *v109;
  uint64_t v110;
  char *v111;
  uint64_t v112;
  char *v113;
  char *v114;
  char *v115;
  char *v116;
  void (*v117)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v118;
  unsigned int (*v119)(uint64_t, uint64_t, uint64_t);
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  char *v124;
  char *v125;
  char *v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130[4];

  v126 = (char *)a2;
  v127 = a1;
  v119 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))sub_21C247CC4();
  v117 = (void (*)(char *, uint64_t, uint64_t, uint64_t))*((_QWORD *)v119 - 1);
  MEMORY[0x24BDAC7A8](v119);
  v125 = (char *)&v104 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_21C2472E0();
  v4 = *(_QWORD *)(v3 - 8);
  v122 = v3;
  v123 = v4;
  v5 = MEMORY[0x24BDAC7A8](v3);
  v124 = (char *)&v104 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v114 = (char *)&v104 - v7;
  v128 = sub_21C2470D0();
  v112 = *(_QWORD *)(v128 - 8);
  MEMORY[0x24BDAC7A8](v128);
  v109 = (char *)&v104 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  updated = type metadata accessor for EntryPointIndex.UpdateState(0);
  v120 = *(_QWORD *)(updated - 8);
  v121 = updated;
  MEMORY[0x24BDAC7A8](updated);
  v110 = (uint64_t)&v104 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v118 = __swift_instantiateConcreteTypeFromMangledName(&qword_25524CF80);
  MEMORY[0x24BDAC7A8](v118);
  v115 = (char *)&v104 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_25524C198);
  v13 = MEMORY[0x24BDAC7A8](v12);
  v113 = (char *)&v104 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v111 = (char *)&v104 - v16;
  MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)&v104 - v17;
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_25524A590);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v104 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = MEMORY[0x24BDAC7A8](v20);
  v25 = (char *)&v104 - v24;
  v26 = MEMORY[0x24BDAC7A8](v23);
  v28 = (char *)&v104 - v27;
  MEMORY[0x24BDAC7A8](v26);
  v30 = (char *)&v104 - v29;
  v31 = sub_21C24716C();
  v32 = *(_QWORD *)(v31 - 8);
  v33 = MEMORY[0x24BDAC7A8](v31);
  v35 = (char *)&v104 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v33);
  v37 = (char *)&v104 - v36;
  sub_21C1F03EC((uint64_t)v126, (uint64_t)v30, &qword_25524A590);
  v38 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48);
  if (v38(v30, 1, v31) == 1)
  {
    sub_21C1F03B0((uint64_t)v30, &qword_25524A590);
    sub_21C247CA0();
    v39 = v123;
    v40 = v122;
    (*(void (**)(char *, uint64_t, uint64_t))(v123 + 16))(v124, v127, v122);
    v41 = sub_21C247CB8();
    v42 = sub_21C248714();
    if (os_log_type_enabled(v41, v42))
    {
      v43 = (uint8_t *)swift_slowAlloc();
      v44 = swift_slowAlloc();
      v130[0] = v44;
      *(_DWORD *)v43 = 136315138;
      sub_21C1FBD14(&qword_25524CF88, (uint64_t (*)(uint64_t))MEMORY[0x24BE777F0], MEMORY[0x24BE77810]);
      v45 = v124;
      v46 = sub_21C2488F4();
      v129 = sub_21C203A90(v46, v47, v130);
      sub_21C2487A4();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v39 + 8))(v45, v40);
      _os_log_impl(&dword_21C1E3000, v41, v42, "Received update without updateSeed for %s\n(per-update message streams will not be delivered for this update)", v43, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2207770EC](v44, -1, -1);
      MEMORY[0x2207770EC](v43, -1, -1);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v39 + 8))(v124, v40);
    }

    return (*((uint64_t (**)(char *, unsigned int (*)(uint64_t, uint64_t, uint64_t)))v117 + 1))(v125, v119);
  }
  v119 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v38;
  v105 = v35;
  v124 = v28;
  v125 = v25;
  v108 = v22;
  v48 = v115;
  v49 = v127;
  v50 = *(void (**)(char *, uint64_t, uint64_t))(v32 + 32);
  v126 = v37;
  v104 = v50;
  v50(v37, (uint64_t)v30, v31);
  v51 = v116;
  v52 = v116 + 120;
  swift_beginAccess();
  v53 = *((_QWORD *)v51 + 15);
  if (*(_QWORD *)(v53 + 16))
  {
    swift_bridgeObjectRetain();
    v54 = sub_21C1F64E0(v49);
    v55 = v120;
    v56 = v121;
    if ((v57 & 1) != 0)
    {
      sub_21C1E7170(*(_QWORD *)(v53 + 56) + *(_QWORD *)(v120 + 72) * v54, (uint64_t)v18, type metadata accessor for EntryPointIndex.UpdateState);
      v58 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v55 + 56);
      v59 = v18;
      v60 = 0;
    }
    else
    {
      v58 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v120 + 56);
      v59 = v18;
      v60 = 1;
    }
    v117 = v58;
    v58(v59, v60, 1, v56);
    swift_bridgeObjectRelease();
  }
  else
  {
    v55 = v120;
    v56 = v121;
    v117 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v120 + 56);
    v117(v18, 1, 1, v121);
  }
  v62 = (uint64_t)v126;
  v63 = (uint64_t)v48;
  v116 = *(char **)(v55 + 48);
  v64 = (uint64_t)v52;
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v116)(v18, 1, v56))
  {
    sub_21C1F03B0((uint64_t)v18, &qword_25524C198);
    v65 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v32 + 56);
    v66 = (uint64_t)v124;
    v65(v124, 1, 1, v31);
    v67 = *(void (**)(char *, char *, uint64_t))(v32 + 16);
  }
  else
  {
    v67 = *(void (**)(char *, char *, uint64_t))(v32 + 16);
    v66 = (uint64_t)v124;
    v67(v124, v18, v31);
    sub_21C1F03B0((uint64_t)v18, &qword_25524C198);
    v65 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v32 + 56);
    v65((char *)v66, 0, 1, v31);
  }
  v68 = (uint64_t)v125;
  v67(v125, (char *)v62, v31);
  v65((char *)v68, 0, 1, v31);
  v69 = v63 + *(int *)(v118 + 48);
  sub_21C1F03EC(v66, v63, &qword_25524A590);
  sub_21C1F03EC(v68, v69, &qword_25524A590);
  v70 = v119;
  if (v119(v63, 1, v31) == 1)
  {
    sub_21C1F03B0(v68, &qword_25524A590);
    sub_21C1F03B0(v66, &qword_25524A590);
    v71 = v64;
    if (v70(v69, 1, v31) == 1)
    {
      sub_21C1F03B0(v63, &qword_25524A590);
      return (*(uint64_t (**)(char *, uint64_t))(v32 + 8))(v126, v31);
    }
  }
  else
  {
    v72 = (uint64_t)v108;
    sub_21C1F03EC(v63, (uint64_t)v108, &qword_25524A590);
    v71 = v64;
    if (v70(v69, 1, v31) != 1)
    {
      v80 = v105;
      v104(v105, v69, v31);
      sub_21C1FBD14(&qword_25524CFA0, (uint64_t (*)(uint64_t))MEMORY[0x24BE77398], MEMORY[0x24BE773A8]);
      v81 = sub_21C248480();
      v82 = v67;
      v83 = v63;
      v84 = *(void (**)(char *, uint64_t))(v32 + 8);
      v84(v80, v31);
      sub_21C1F03B0((uint64_t)v125, &qword_25524A590);
      sub_21C1F03B0(v66, &qword_25524A590);
      v84(v108, v31);
      v85 = v83;
      v67 = v82;
      sub_21C1F03B0(v85, &qword_25524A590);
      if ((v81 & 1) != 0)
        return ((uint64_t (*)(char *, uint64_t))v84)(v126, v31);
      goto LABEL_21;
    }
    sub_21C1F03B0((uint64_t)v125, &qword_25524A590);
    sub_21C1F03B0(v66, &qword_25524A590);
    (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v72, v31);
  }
  sub_21C1F03B0(v63, &qword_25524CF80);
LABEL_21:
  v73 = *(_QWORD *)v71;
  v74 = *(_QWORD *)(*(_QWORD *)v71 + 16);
  v107 = v31;
  v106 = v32;
  v124 = (char *)v67;
  if (v74)
  {
    swift_bridgeObjectRetain();
    v75 = sub_21C1F64E0(v127);
    v77 = (uint64_t)v111;
    if ((v76 & 1) != 0)
    {
      sub_21C1E7170(*(_QWORD *)(v73 + 56) + *(_QWORD *)(v120 + 72) * v75, (uint64_t)v111, type metadata accessor for EntryPointIndex.UpdateState);
      v78 = v77;
      v79 = 0;
    }
    else
    {
      v78 = (uint64_t)v111;
      v79 = 1;
    }
    v86 = v121;
    v87 = v117;
    v117((char *)v78, v79, 1, v121);
    swift_bridgeObjectRelease();
  }
  else
  {
    v77 = (uint64_t)v111;
    v86 = v121;
    v87 = v117;
    v117(v111, 1, 1, v121);
  }
  v88 = v122;
  v89 = v123;
  v90 = v112;
  v91 = (uint64_t)v126;
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v116)(v77, 1, v86))
  {
    sub_21C1F03B0(v77, &qword_25524C198);
    v92 = (uint64_t)v114;
    v93 = (uint64_t)v113;
  }
  else
  {
    v125 = (char *)v71;
    v94 = v110;
    sub_21C1E7170(v77, v110, type metadata accessor for EntryPointIndex.UpdateState);
    sub_21C1F03B0(v77, &qword_25524C198);
    v95 = *(_QWORD *)(v94 + *(int *)(v86 + 20));
    v96 = *(_QWORD *)(v95 + 16);
    if (v96)
    {
      v97 = v95 + ((*(unsigned __int8 *)(v90 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v90 + 80));
      v98 = *(_QWORD *)(v90 + 72);
      v99 = *(void (**)(char *, uint64_t, uint64_t))(v90 + 16);
      v120 = v95;
      swift_bridgeObjectRetain();
      v100 = v128;
      v101 = v109;
      do
      {
        v99(v101, v97, v100);
        sub_21C1FBD14(&qword_25524A608, (uint64_t (*)(uint64_t))MEMORY[0x24BE77240], MEMORY[0x24BE771D8]);
        sub_21C2478A4();
        v100 = v128;
        (*(void (**)(char *, uint64_t))(v90 + 8))(v101, v128);
        v97 += v98;
        --v96;
      }
      while (v96);
      swift_bridgeObjectRelease();
      v86 = v121;
      v88 = v122;
      v94 = v110;
      v91 = (uint64_t)v126;
      v87 = v117;
    }
    sub_21C1E71CC(v94, type metadata accessor for EntryPointIndex.UpdateState);
    v89 = v123;
    v92 = (uint64_t)v114;
    v93 = (uint64_t)v113;
  }
  v102 = v124;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v89 + 16))(v92, v127, v88);
  v103 = v107;
  ((void (*)(uint64_t, uint64_t, uint64_t))v102)(v93, v91, v107);
  *(_QWORD *)(v93 + *(int *)(v86 + 20)) = MEMORY[0x24BEE4AF8];
  v87((char *)v93, 0, 1, v86);
  swift_beginAccess();
  sub_21C227628(v93, v92);
  swift_endAccess();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v106 + 8))(v91, v103);
}

uint64_t sub_21C235BD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5[37] = a4;
  v5[38] = v4;
  v5[35] = a2;
  v5[36] = a3;
  v5[34] = a1;
  v6 = sub_21C2470D0();
  v5[39] = v6;
  v5[40] = *(_QWORD *)(v6 - 8);
  v5[41] = swift_task_alloc();
  v5[42] = swift_task_alloc();
  v7 = sub_21C2472E0();
  v5[43] = v7;
  v5[44] = *(_QWORD *)(v7 - 8);
  v5[45] = swift_task_alloc();
  v5[46] = swift_task_alloc();
  v5[47] = swift_task_alloc();
  v8 = sub_21C24716C();
  v5[48] = v8;
  v5[49] = *(_QWORD *)(v8 - 8);
  v5[50] = swift_task_alloc();
  v5[51] = swift_task_alloc();
  v5[52] = swift_task_alloc();
  v5[53] = __swift_instantiateConcreteTypeFromMangledName(&qword_25524CF80);
  v5[54] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25524C198);
  v5[55] = swift_task_alloc();
  v5[56] = swift_task_alloc();
  v5[57] = __swift_instantiateConcreteTypeFromMangledName(&qword_25524A590);
  v5[58] = swift_task_alloc();
  v5[59] = swift_task_alloc();
  v5[60] = swift_task_alloc();
  v5[61] = swift_task_alloc();
  v9 = sub_21C247574();
  v5[62] = v9;
  v5[63] = *(_QWORD *)(v9 - 8);
  v5[64] = swift_task_alloc();
  v5[65] = swift_task_alloc();
  v5[66] = swift_task_alloc();
  v5[67] = swift_task_alloc();
  v10 = sub_21C247CC4();
  v5[68] = v10;
  v5[69] = *(_QWORD *)(v10 - 8);
  v5[70] = swift_task_alloc();
  v5[71] = swift_task_alloc();
  v5[72] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_21C235E14()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t, uint64_t);
  NSObject *v6;
  os_log_type_t v7;
  uint64_t v8;
  uint64_t v9;
  uint8_t *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  void (*v14)(uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  char v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t updated;
  _QWORD *v28;
  NSObject *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  NSObject *v40;
  os_log_type_t v41;
  _BOOL4 v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  int v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  void (*v65)(uint64_t, uint64_t, uint64_t, uint64_t);
  void (*v66)(uint64_t, uint64_t, uint64_t);
  void (*v67)(uint64_t, uint64_t, uint64_t);
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  unsigned int (*v75)(uint64_t, uint64_t, uint64_t);
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  unsigned int v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char v89;
  void (*v90)(uint64_t, uint64_t);
  void (*v91)(_QWORD *);
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  NSObject *v105;
  os_log_type_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  unint64_t v113;
  uint64_t v114;
  unint64_t v115;
  uint64_t v116;
  uint64_t v117;
  unint64_t v118;
  uint64_t v119;
  uint64_t v120;
  char v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  unint64_t v134;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v136;
  unint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  char v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  unint64_t v155;
  unint64_t v156;
  uint64_t v158;
  uint64_t v159;
  _QWORD *v160;
  uint64_t v161;
  _QWORD *v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  os_log_type_t v166;
  os_log_t log;
  void (*type)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t *v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t (*v175)(uint64_t, uint64_t, uint64_t);
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  void (*v183)(uint64_t, uint64_t);
  void (*v184)(uint64_t, uint64_t);
  void (*v185)(uint64_t, uint64_t, uint64_t);
  uint64_t v186;
  uint64_t (*v187)();
  NSObject *v188;
  uint64_t v189;
  void (*v190)(uint64_t, uint64_t);
  __int128 *v191;
  uint64_t v192;
  void (*v193)(uint64_t, uint64_t, uint64_t);
  uint64_t v194;
  uint64_t v195;
  uint64_t (*v196)(_QWORD, _QWORD, uint64_t, uint64_t);
  uint64_t v197[2];

  v1 = *(_QWORD *)(v0 + 536);
  v3 = *(_QWORD *)(v0 + 496);
  v2 = *(_QWORD *)(v0 + 504);
  v4 = *(_QWORD *)(v0 + 296);
  sub_21C247CA0();
  v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16);
  v5(v1, v4, v3);
  v6 = sub_21C247CB8();
  v7 = sub_21C248714();
  v185 = v5;
  if (os_log_type_enabled(v6, v7))
  {
    v182 = *(_QWORD *)(v0 + 576);
    v172 = *(_QWORD *)(v0 + 552);
    v176 = *(_QWORD *)(v0 + 544);
    v8 = *(_QWORD *)(v0 + 536);
    v9 = *(_QWORD *)(v0 + 496);
    v189 = *(_QWORD *)(v0 + 504);
    v10 = (uint8_t *)swift_slowAlloc();
    v11 = swift_slowAlloc();
    v197[0] = v11;
    *(_DWORD *)v10 = 136315138;
    sub_21C1FBD14(&qword_25524CF90, (uint64_t (*)(uint64_t))MEMORY[0x24BE77EC0], MEMORY[0x24BE77EE8]);
    v12 = sub_21C2488F4();
    *(_QWORD *)(v0 + 264) = sub_21C203A90(v12, v13, v197);
    sub_21C2487A4();
    swift_bridgeObjectRelease();
    v190 = *(void (**)(uint64_t, uint64_t))(v189 + 8);
    v190(v8, v9);
    _os_log_impl(&dword_21C1E3000, v6, v7, "EntryPointIndex received host message stream for %s", v10, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2207770EC](v11, -1, -1);
    MEMORY[0x2207770EC](v10, -1, -1);

    v14 = *(void (**)(uint64_t, uint64_t))(v172 + 8);
    v14(v182, v176);
  }
  else
  {
    v15 = *(_QWORD *)(v0 + 576);
    v16 = *(_QWORD *)(v0 + 552);
    v17 = *(_QWORD *)(v0 + 544);
    v190 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 + 504) + 8);
    v190(*(_QWORD *)(v0 + 536), *(_QWORD *)(v0 + 496));

    v14 = *(void (**)(uint64_t, uint64_t))(v16 + 8);
    v14(v15, v17);
  }
  v191 = (__int128 *)(v0 + 56);
  sub_21C237BE0(*(_QWORD *)(v0 + 280), v0 + 56);
  if (!*(_QWORD *)(v0 + 80))
  {
    v183 = v14;
    v32 = *(_QWORD *)(v0 + 512);
    v33 = *(_QWORD *)(v0 + 496);
    v170 = *(_QWORD *)(v0 + 392);
    v173 = *(_QWORD *)(v0 + 384);
    v177 = *(_QWORD *)(v0 + 400);
    v34 = *(_QWORD *)(v0 + 352);
    v35 = *(_QWORD *)(v0 + 360);
    v36 = *(_QWORD *)(v0 + 344);
    v38 = *(_QWORD *)(v0 + 288);
    v37 = *(_QWORD *)(v0 + 296);
    v39 = *(_QWORD *)(v0 + 280);
    sub_21C1F03B0((uint64_t)v191, &qword_25524CF78);
    sub_21C247CA0();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v34 + 16))(v35, v39, v36);
    v185(v32, v37, v33);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v170 + 16))(v177, v38, v173);
    v40 = sub_21C247CB8();
    v41 = sub_21C248738();
    v42 = os_log_type_enabled(v40, v41);
    v43 = *(_QWORD *)(v0 + 560);
    v44 = *(_QWORD *)(v0 + 544);
    v45 = *(_QWORD *)(v0 + 512);
    v46 = *(_QWORD *)(v0 + 496);
    v192 = *(_QWORD *)(v0 + 400);
    v178 = *(_QWORD *)(v0 + 392);
    v186 = *(_QWORD *)(v0 + 384);
    v48 = *(_QWORD *)(v0 + 352);
    v47 = *(_QWORD *)(v0 + 360);
    v49 = *(_QWORD *)(v0 + 344);
    if (v42)
    {
      v174 = *(_QWORD *)(v0 + 544);
      v50 = swift_slowAlloc();
      v171 = swift_slowAlloc();
      v197[0] = v171;
      *(_DWORD *)v50 = 136315650;
      sub_21C1FBD14(&qword_25524CF88, (uint64_t (*)(uint64_t))MEMORY[0x24BE777F0], MEMORY[0x24BE77810]);
      v51 = sub_21C2488F4();
      *(_QWORD *)(v0 + 256) = sub_21C203A90(v51, v52, v197);
      sub_21C2487A4();
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v48 + 8))(v47, v49);
      *(_WORD *)(v50 + 12) = 2080;
      sub_21C1FBD14(&qword_25524CF90, (uint64_t (*)(uint64_t))MEMORY[0x24BE77EC0], MEMORY[0x24BE77EE8]);
      v53 = sub_21C2488F4();
      *(_QWORD *)(v0 + 248) = sub_21C203A90(v53, v54, v197);
      sub_21C2487A4();
      swift_bridgeObjectRelease();
      v190(v45, v46);
      *(_WORD *)(v50 + 22) = 2080;
      sub_21C1FBD14(&qword_25524CF98, (uint64_t (*)(uint64_t))MEMORY[0x24BE77398], MEMORY[0x24BE773B0]);
      v55 = sub_21C2488F4();
      *(_QWORD *)(v0 + 240) = sub_21C203A90(v55, v56, v197);
      sub_21C2487A4();
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v178 + 8))(v192, v186);
      _os_log_impl(&dword_21C1E3000, v40, v41, "Invalidating received host message stream for unknown entry point:\n  - ContentIdentifier: %s\n  - Instance: %s\n  - UpdateSeed: %s", (uint8_t *)v50, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x2207770EC](v171, -1, -1);
      MEMORY[0x2207770EC](v50, -1, -1);

      v57 = v43;
      v58 = v174;
    }
    else
    {
      (*(void (**)(_QWORD, _QWORD))(v48 + 8))(*(_QWORD *)(v0 + 360), *(_QWORD *)(v0 + 344));
      v190(v45, v46);
      (*(void (**)(uint64_t, uint64_t))(v178 + 8))(v192, v186);

      v57 = v43;
      v58 = v44;
    }
    v183(v57, v58);
    sub_21C1FBD14(&qword_25524A608, (uint64_t (*)(uint64_t))MEMORY[0x24BE77240], MEMORY[0x24BE771D8]);
    sub_21C2478A4();
    goto LABEL_50;
  }
  v18 = (_QWORD *)(v0 + 16);
  v19 = *(_QWORD *)(v0 + 304);
  sub_21C1EB66C(v191, v0 + 16);
  v169 = (uint64_t *)(v19 + 120);
  swift_beginAccess();
  v20 = *(_QWORD *)(v19 + 120);
  if (*(_QWORD *)(v20 + 16))
  {
    v21 = *(_QWORD *)(v0 + 280);
    swift_bridgeObjectRetain();
    v22 = sub_21C1F64E0(v21);
    v23 = *(_QWORD *)(v0 + 448);
    if ((v24 & 1) != 0)
    {
      v25 = v22;
      v26 = *(_QWORD *)(v20 + 56);
      updated = type metadata accessor for EntryPointIndex.UpdateState(0);
      v28 = *(_QWORD **)(updated - 8);
      sub_21C1E7170(v26 + v28[9] * v25, v23, type metadata accessor for EntryPointIndex.UpdateState);
      v29 = v28[7];
      v30 = v23;
      v31 = 0;
    }
    else
    {
      updated = type metadata accessor for EntryPointIndex.UpdateState(0);
      v28 = *(_QWORD **)(updated - 8);
      v29 = v28[7];
      v30 = v23;
      v31 = 1;
    }
    log = v29;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v29)(v30, v31, 1, updated);
    swift_bridgeObjectRelease();
  }
  else
  {
    v59 = *(_QWORD *)(v0 + 448);
    updated = type metadata accessor for EntryPointIndex.UpdateState(0);
    v28 = *(_QWORD **)(updated - 8);
    log = (os_log_t)v28[7];
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))log)(v59, 1, 1, updated);
  }
  v60 = *(_QWORD *)(v0 + 448);
  type metadata accessor for EntryPointIndex.UpdateState(0);
  v175 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v28[6];
  v61 = v175(v60, 1, updated);
  v62 = *(_QWORD *)(v0 + 488);
  v63 = *(_QWORD *)(v0 + 384);
  v64 = *(_QWORD *)(v0 + 392);
  v179 = updated;
  v162 = v28;
  if (v61)
  {
    sub_21C1F03B0(v60, &qword_25524C198);
    v65 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v64 + 56);
    v65(v62, 1, 1, v63);
    v66 = *(void (**)(uint64_t, uint64_t, uint64_t))(v64 + 16);
  }
  else
  {
    v67 = *(void (**)(uint64_t, uint64_t, uint64_t))(v64 + 16);
    v67(v62, v60, v63);
    sub_21C1F03B0(v60, &qword_25524C198);
    v65 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v64 + 56);
    v65(v62, 0, 1, v63);
    v66 = v67;
  }
  v69 = *(_QWORD *)(v0 + 480);
  v68 = *(_QWORD *)(v0 + 488);
  v70 = *(_QWORD *)(v0 + 424);
  v71 = *(_QWORD *)(v0 + 432);
  v73 = *(_QWORD *)(v0 + 384);
  v72 = *(_QWORD *)(v0 + 392);
  v193 = v66;
  v66(v69, *(_QWORD *)(v0 + 288), v73);
  type = v65;
  v65(v69, 0, 1, v73);
  v74 = v71 + *(int *)(v70 + 48);
  sub_21C1F03EC(v68, v71, &qword_25524A590);
  sub_21C1F03EC(v69, v74, &qword_25524A590);
  v75 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v72 + 48);
  if (v75(v71, 1, v73) == 1)
  {
    v76 = *(_QWORD *)(v0 + 488);
    v77 = *(_QWORD *)(v0 + 384);
    sub_21C1F03B0(*(_QWORD *)(v0 + 480), &qword_25524A590);
    sub_21C1F03B0(v76, &qword_25524A590);
    if (v75(v74, 1, v77) == 1)
    {
      sub_21C1F03B0(*(_QWORD *)(v0 + 432), &qword_25524A590);
      goto LABEL_25;
    }
    goto LABEL_21;
  }
  v78 = *(_QWORD *)(v0 + 384);
  sub_21C1F03EC(*(_QWORD *)(v0 + 432), *(_QWORD *)(v0 + 472), &qword_25524A590);
  v79 = v75(v74, 1, v78);
  v81 = *(_QWORD *)(v0 + 480);
  v80 = *(_QWORD *)(v0 + 488);
  v82 = *(_QWORD *)(v0 + 472);
  if (v79 == 1)
  {
    v83 = *(_QWORD *)(v0 + 384);
    v84 = *(_QWORD *)(v0 + 392);
    sub_21C1F03B0(*(_QWORD *)(v0 + 480), &qword_25524A590);
    sub_21C1F03B0(v80, &qword_25524A590);
    (*(void (**)(uint64_t, uint64_t))(v84 + 8))(v82, v83);
LABEL_21:
    v184 = v14;
    sub_21C1F03B0(*(_QWORD *)(v0 + 432), &qword_25524CF80);
LABEL_27:
    v97 = *(_QWORD *)(v0 + 520);
    v98 = *(_QWORD *)(v0 + 496);
    v99 = *(_QWORD *)(v0 + 408);
    v100 = *(_QWORD *)(v0 + 384);
    v101 = *(_QWORD *)(v0 + 352);
    v163 = *(_QWORD *)(v0 + 344);
    v164 = *(_QWORD *)(v0 + 368);
    v102 = *(_QWORD *)(v0 + 296);
    v103 = *(_QWORD *)(v0 + 280);
    v104 = *(_QWORD *)(v0 + 288);
    sub_21C247CA0();
    v185(v97, v102, v98);
    v193(v99, v104, v100);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v101 + 16))(v164, v103, v163);
    swift_retain_n();
    v105 = sub_21C247CB8();
    v106 = sub_21C248738();
    if (os_log_type_enabled(v105, v106))
    {
      v166 = v106;
      v188 = v105;
      v107 = *(_QWORD *)(v0 + 520);
      v108 = *(_QWORD *)(v0 + 496);
      v109 = *(_QWORD *)(v0 + 408);
      v110 = *(_QWORD *)(v0 + 384);
      v161 = *(_QWORD *)(v0 + 392);
      v111 = swift_slowAlloc();
      v165 = swift_slowAlloc();
      v197[0] = v165;
      *(_DWORD *)v111 = 136315650;
      sub_21C1FBD14(&qword_25524CF90, (uint64_t (*)(uint64_t))MEMORY[0x24BE77EC0], MEMORY[0x24BE77EE8]);
      v112 = sub_21C2488F4();
      *(_QWORD *)(v0 + 232) = sub_21C203A90(v112, v113, v197);
      sub_21C2487A4();
      swift_bridgeObjectRelease();
      v190(v107, v108);
      *(_WORD *)(v111 + 12) = 2080;
      sub_21C1FBD14(&qword_25524CF98, (uint64_t (*)(uint64_t))MEMORY[0x24BE77398], MEMORY[0x24BE773B0]);
      v114 = sub_21C2488F4();
      *(_QWORD *)(v0 + 216) = sub_21C203A90(v114, v115, v197);
      sub_21C2487A4();
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v161 + 8))(v109, v110);
      *(_WORD *)(v111 + 22) = 2080;
      v116 = *v169;
      if (*(_QWORD *)(*v169 + 16))
      {
        v117 = *(_QWORD *)(v0 + 368);
        swift_bridgeObjectRetain();
        v118 = sub_21C1F64E0(v117);
        v119 = *(_QWORD *)(v0 + 440);
        v120 = v179;
        if ((v121 & 1) != 0)
        {
          sub_21C1E7170(*(_QWORD *)(v116 + 56) + v162[9] * v118, *(_QWORD *)(v0 + 440), type metadata accessor for EntryPointIndex.UpdateState);
          v122 = v119;
          v123 = 0;
        }
        else
        {
          v122 = *(_QWORD *)(v0 + 440);
          v123 = 1;
        }
        ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))log)(v122, v123, 1, v179);
        swift_bridgeObjectRelease();
      }
      else
      {
        v120 = v179;
        ((void (*)(_QWORD, uint64_t, uint64_t, uint64_t))log)(*(_QWORD *)(v0 + 440), 1, 1, v179);
      }
      v148 = *(_QWORD *)(v0 + 440);
      v149 = 1;
      if (!v175(v148, 1, v120))
      {
        v193(*(_QWORD *)(v0 + 464), v148, *(_QWORD *)(v0 + 384));
        v149 = 0;
        v148 = *(_QWORD *)(v0 + 440);
      }
      v195 = *(_QWORD *)(v0 + 568);
      v150 = *(_QWORD *)(v0 + 464);
      v151 = *(_QWORD *)(v0 + 384);
      v180 = *(_QWORD *)(v0 + 368);
      v181 = *(_QWORD *)(v0 + 544);
      v153 = *(_QWORD *)(v0 + 344);
      v152 = *(_QWORD *)(v0 + 352);
      sub_21C1F03B0(v148, &qword_25524C198);
      type(v150, v149, 1, v151);
      v154 = sub_21C24878C();
      v156 = v155;
      sub_21C1F03B0(v150, &qword_25524A590);
      *(_QWORD *)(v0 + 224) = sub_21C203A90(v154, v156, v197);
      sub_21C2487A4();
      swift_release_n();
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v152 + 8))(v180, v153);
      _os_log_impl(&dword_21C1E3000, v188, v166, "Invalidating received host message stream for incorrect update seed:\n  - Instance: %s\n  - UpdateSeed: %s\n  - Current update seed: %s", (uint8_t *)v111, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x2207770EC](v165, -1, -1);
      MEMORY[0x2207770EC](v111, -1, -1);

      v131 = v195;
      v132 = v181;
    }
    else
    {
      v194 = *(_QWORD *)(v0 + 568);
      v124 = *(_QWORD *)(v0 + 544);
      v125 = *(_QWORD *)(v0 + 408);
      v126 = *(_QWORD *)(v0 + 384);
      v127 = *(_QWORD *)(v0 + 392);
      v128 = *(_QWORD *)(v0 + 368);
      v129 = *(_QWORD *)(v0 + 344);
      v130 = *(_QWORD *)(v0 + 352);
      v190(*(_QWORD *)(v0 + 520), *(_QWORD *)(v0 + 496));
      (*(void (**)(uint64_t, uint64_t))(v127 + 8))(v125, v126);
      swift_release_n();
      (*(void (**)(uint64_t, uint64_t))(v130 + 8))(v128, v129);

      v131 = v194;
      v132 = v124;
    }
    v184(v131, v132);
    sub_21C1FBD14(&qword_25524A608, (uint64_t (*)(uint64_t))MEMORY[0x24BE77240], MEMORY[0x24BE771D8]);
    sub_21C2478A4();
    v147 = v0 + 16;
    goto LABEL_49;
  }
  v184 = v14;
  v85 = *(_QWORD *)(v0 + 432);
  v86 = *(_QWORD *)(v0 + 416);
  v88 = *(_QWORD *)(v0 + 384);
  v87 = *(_QWORD *)(v0 + 392);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v87 + 32))(v86, v74, v88);
  sub_21C1FBD14(&qword_25524CFA0, (uint64_t (*)(uint64_t))MEMORY[0x24BE77398], MEMORY[0x24BE773A8]);
  v89 = sub_21C248480();
  v90 = *(void (**)(uint64_t, uint64_t))(v87 + 8);
  v90(v86, v88);
  sub_21C1F03B0(v81, &qword_25524A590);
  sub_21C1F03B0(v80, &qword_25524A590);
  v90(v82, v88);
  sub_21C1F03B0(v85, &qword_25524A590);
  if ((v89 & 1) == 0)
    goto LABEL_27;
LABEL_25:
  (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 352) + 16))(*(_QWORD *)(v0 + 376), *(_QWORD *)(v0 + 280), *(_QWORD *)(v0 + 344));
  v187 = sub_21C234600();
  v91 = sub_21C237318((_QWORD *)(v0 + 128));
  v93 = v92;
  if (v175(v92, 1, v179))
  {
    v94 = *(_QWORD *)(v0 + 376);
    v96 = *(_QWORD *)(v0 + 344);
    v95 = *(_QWORD *)(v0 + 352);
    ((void (*)(uint64_t, _QWORD))v91)(v0 + 128, 0);
    (*(void (**)(uint64_t, uint64_t))(v95 + 8))(v94, v96);
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 320) + 16))(*(_QWORD *)(v0 + 336), *(_QWORD *)(v0 + 272), *(_QWORD *)(v0 + 312));
    v133 = *(int *)(v179 + 20);
    v134 = *(_QWORD *)(v93 + v133);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)(v93 + v133) = v134;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v134 = sub_21C23D790(0, *(_QWORD *)(v134 + 16) + 1, 1, v134);
      *(_QWORD *)(v93 + v133) = v134;
    }
    v137 = *(_QWORD *)(v134 + 16);
    v136 = *(_QWORD *)(v134 + 24);
    if (v137 >= v136 >> 1)
    {
      v134 = sub_21C23D790(v136 > 1, v137 + 1, 1, v134);
      *(_QWORD *)(v93 + v133) = v134;
    }
    v138 = *(_QWORD *)(v0 + 376);
    v139 = *(_QWORD *)(v0 + 344);
    v140 = *(_QWORD *)(v0 + 352);
    v141 = *(_QWORD *)(v0 + 336);
    v142 = *(_QWORD *)(v0 + 312);
    v143 = *(_QWORD *)(v0 + 320);
    *(_QWORD *)(v134 + 16) = v137 + 1;
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v143 + 32))(v134+ ((*(unsigned __int8 *)(v143 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v143 + 80))+ *(_QWORD *)(v143 + 72) * v137, v141, v142);
    ((void (*)(uint64_t, _QWORD))v91)(v0 + 128, 0);
    (*(void (**)(uint64_t, uint64_t))(v140 + 8))(v138, v139);
    v18 = (_QWORD *)(v0 + 16);
  }
  ((void (*)(uint64_t, _QWORD))v187)(v0 + 96, 0);
  sub_21C247550();
  sub_21C1FBD14(qword_25524BF88, (uint64_t (*)(uint64_t))MEMORY[0x24BE77EC0], MEMORY[0x24BE77EE0]);
  sub_21C248540();
  sub_21C248540();
  v144 = *(_QWORD *)(v0 + 528);
  v145 = *(_QWORD *)(v0 + 496);
  if (*(_QWORD *)(v0 + 200) == *(_QWORD *)(v0 + 184) && *(_QWORD *)(v0 + 208) == *(_QWORD *)(v0 + 192))
  {
    swift_bridgeObjectRelease_n();
    v190(v144, v145);
LABEL_41:
    (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 320) + 16))(*(_QWORD *)(v0 + 328), *(_QWORD *)(v0 + 272), *(_QWORD *)(v0 + 312));
    v197[0] = 0x2D746E656761;
    v197[1] = 0xE600000000000000;
    sub_21C1FBD14(&qword_25524CF98, (uint64_t (*)(uint64_t))MEMORY[0x24BE77398], MEMORY[0x24BE773B0]);
    sub_21C2488F4();
    sub_21C248504();
    swift_bridgeObjectRelease();
    sub_21C2472F8();
    swift_allocObject();
    sub_21C2472EC();
    swift_release();
    v147 = (uint64_t)v18;
LABEL_49:
    __swift_destroy_boxed_opaque_existential_1(v147);
LABEL_50:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v146 = sub_21C248924();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v190(v144, v145);
  if ((v146 & 1) != 0)
    goto LABEL_41;
  v158 = *(_QWORD *)(v0 + 40);
  v159 = *(_QWORD *)(v0 + 48);
  __swift_project_boxed_opaque_existential_1(v18, v158);
  v196 = (uint64_t (*)(_QWORD, _QWORD, uint64_t, uint64_t))(**(int **)(v159 + 32) + *(_QWORD *)(v159 + 32));
  v160 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 584) = v160;
  *v160 = v0;
  v160[1] = sub_21C2370EC;
  return v196(*(_QWORD *)(v0 + 272), *(_QWORD *)(v0 + 296), v158, v159);
}

uint64_t sub_21C2370EC(char a1)
{
  uint64_t v1;

  *(_BYTE *)(*(_QWORD *)v1 + 592) = a1;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_21C23714C()
{
  uint64_t v0;

  if ((*(_BYTE *)(v0 + 592) & 1) == 0)
  {
    sub_21C1FBD14(&qword_25524A608, (uint64_t (*)(uint64_t))MEMORY[0x24BE77240], MEMORY[0x24BE771D8]);
    sub_21C2478A4();
  }
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void (*sub_21C237318(_QWORD *a1))(_QWORD *a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;

  v2 = malloc(0x40uLL);
  *a1 = v2;
  v3 = sub_21C2472E0();
  v2[4] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v2[5] = v4;
  v5 = malloc(*(_QWORD *)(v4 + 64));
  v2[6] = v5;
  (*(void (**)(void))(v4 + 16))();
  v2[7] = sub_21C23B538(v2, (uint64_t)v5);
  return sub_21C2373A8;
}

void sub_21C2373A8(_QWORD *a1)
{
  void *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;

  v1 = (void *)*a1;
  v2 = *(void **)(*a1 + 48);
  v3 = *(_QWORD *)(*a1 + 32);
  v4 = *(_QWORD *)(*a1 + 40);
  (*(void (**)(_QWORD, _QWORD))(*a1 + 56))(*a1, 0);
  (*(void (**)(void *, uint64_t))(v4 + 8))(v2, v3);
  free(v2);
  free(v1);
}

uint64_t sub_21C2373FC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;

  v3[16] = a2;
  v3[17] = v2;
  v3[15] = a1;
  v3[18] = *(_QWORD *)(type metadata accessor for EntryPointIndex.PendingShellResource(0) - 8);
  v3[19] = swift_task_alloc();
  v4 = sub_21C2472E0();
  v3[20] = v4;
  v3[21] = *(_QWORD *)(v4 - 8);
  v3[22] = swift_task_alloc();
  v3[23] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_21C237494()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t);
  unint64_t *v11;
  int isUniquelyReferenced_nonNull_native;
  unint64_t v13;
  char v14;
  unint64_t v15;
  uint64_t v16;
  _BOOL8 v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  _QWORD *v23;
  uint64_t v24;
  char v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  sub_21C237BE0(*(_QWORD *)(v0 + 128), v0 + 56);
  if (*(_QWORD *)(v0 + 80))
  {
    sub_21C1EB66C((__int128 *)(v0 + 56), v0 + 16);
    v1 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 192) = v1;
    *v1 = v0;
    v1[1] = sub_21C23779C;
    return sub_21C237840(*(_QWORD *)(v0 + 120), v0 + 16);
  }
  v3 = *(_QWORD *)(v0 + 184);
  v4 = *(_QWORD *)(v0 + 160);
  v5 = *(_QWORD *)(v0 + 168);
  v6 = *(_QWORD *)(v0 + 152);
  v7 = *(_QWORD *)(v0 + 128);
  v8 = *(_QWORD *)(v0 + 136);
  v9 = *(_QWORD *)(v0 + 120);
  sub_21C1F03B0(v0 + 56, &qword_25524CF78);
  v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
  v10(v3, v7, v4);
  sub_21C1E7170(v9, v6, type metadata accessor for EntryPointIndex.PendingShellResource);
  v11 = (unint64_t *)(v8 + 112);
  swift_beginAccess();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v13 = *(_QWORD *)(v8 + 112);
  *(_QWORD *)(v8 + 112) = 0x8000000000000000;
  v15 = sub_21C1F64E0(v3);
  v16 = *(_QWORD *)(v13 + 16);
  v17 = (v14 & 1) == 0;
  v18 = v16 + v17;
  if (__OFADD__(v16, v17))
  {
    __break(1u);
LABEL_17:
    v13 = sub_21C23D670(0, *(_QWORD *)(v13 + 16) + 1, 1, v13);
    *(_QWORD *)(v3 + 8 * v15) = v13;
    goto LABEL_13;
  }
  v19 = v14;
  if (*(_QWORD *)(v13 + 24) >= v18)
  {
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      sub_21C1FACC8();
  }
  else
  {
    v20 = *(_QWORD *)(v0 + 184);
    sub_21C1F7648(v18, isUniquelyReferenced_nonNull_native);
    v21 = sub_21C1F64E0(v20);
    if ((v19 & 1) != (v22 & 1))
      return sub_21C248948();
    v15 = v21;
  }
  *v11 = v13;
  swift_bridgeObjectRelease();
  v23 = (_QWORD *)*v11;
  swift_bridgeObjectRetain();
  if ((v19 & 1) == 0)
  {
    v24 = *(_QWORD *)(v0 + 176);
    v10(v24, *(_QWORD *)(v0 + 184), *(_QWORD *)(v0 + 160));
    sub_21C1FA660(v15, v24, MEMORY[0x24BEE4AF8], v23);
  }
  v3 = v23[7];
  swift_bridgeObjectRelease();
  v13 = *(_QWORD *)(v3 + 8 * v15);
  v25 = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)(v3 + 8 * v15) = v13;
  if ((v25 & 1) == 0)
    goto LABEL_17;
LABEL_13:
  v27 = *(_QWORD *)(v13 + 16);
  v26 = *(_QWORD *)(v13 + 24);
  if (v27 >= v26 >> 1)
  {
    v13 = sub_21C23D670(v26 > 1, v27 + 1, 1, v13);
    *(_QWORD *)(v3 + 8 * v15) = v13;
  }
  v28 = *(_QWORD *)(v0 + 184);
  v29 = *(_QWORD *)(v0 + 160);
  v30 = *(_QWORD *)(v0 + 168);
  v32 = *(_QWORD *)(v0 + 144);
  v31 = *(_QWORD *)(v0 + 152);
  *(_QWORD *)(v13 + 16) = v27 + 1;
  sub_21C1F00F0(v31, v13+ ((*(unsigned __int8 *)(v32 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v32 + 80))+ *(_QWORD *)(v32 + 72) * v27, type metadata accessor for EntryPointIndex.PendingShellResource);
  (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v28, v29);
  swift_endAccess();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21C23779C()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_21C2377F4()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21C237840(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  v4 = sub_21C247880();
  v3[5] = v4;
  v3[6] = *(_QWORD *)(v4 - 8);
  v3[7] = swift_task_alloc();
  v5 = sub_21C2470D0();
  v3[8] = v5;
  v3[9] = *(_QWORD *)(v5 - 8);
  v3[10] = swift_task_alloc();
  v3[11] = type metadata accessor for EntryPointIndex.PendingShellResource(0);
  v3[12] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_21C2378F0()
{
  uint64_t *v0;
  int EnumCaseMultiPayload;
  uint64_t *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t (*v16)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t (*v17)(uint64_t, uint64_t, uint64_t);

  sub_21C1E7170(v0[2], v0[12], type metadata accessor for EntryPointIndex.PendingShellResource);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  v2 = (uint64_t *)v0[12];
  v3 = (_QWORD *)v0[3];
  if (EnumCaseMultiPayload == 1)
  {
    v5 = v0[6];
    v4 = v0[7];
    v6 = v0[5];
    v7 = *v2;
    v0[14] = *v2;
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_25524A548);
    (*(void (**)(uint64_t, char *, uint64_t))(v5 + 32))(v4, (char *)v2 + *(int *)(v8 + 48), v6);
    v9 = v3[3];
    v10 = v3[4];
    __swift_project_boxed_opaque_existential_1(v3, v9);
    v16 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(v10 + 48) + *(_QWORD *)(v10 + 48));
    v11 = (_QWORD *)swift_task_alloc();
    v0[15] = (uint64_t)v11;
    *v11 = v0;
    v11[1] = sub_21C237B1C;
    return v16(v7, v0[7], v9, v10);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v0[9] + 32))(v0[10], v0[12], v0[8]);
    v13 = v3[3];
    v14 = v3[4];
    __swift_project_boxed_opaque_existential_1(v3, v13);
    v17 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(v14 + 40) + *(_QWORD *)(v14 + 40));
    v15 = (_QWORD *)swift_task_alloc();
    v0[13] = (uint64_t)v15;
    *v15 = v0;
    v15[1] = sub_21C237A64;
    return v17(v0[10], v13, v14);
  }
}

uint64_t sub_21C237A64()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_21C237ABC()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 72) + 8))(*(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 64));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21C237B1C()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_21C237B74()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 48) + 8))(*(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 40));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21C237BE0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v18;
  unint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t *v24;
  _BYTE v25[24];
  __int128 v26;
  __int128 v27;
  uint64_t v28;
  __int128 v29;
  __int128 v30;
  uint64_t v31;

  v3 = v2;
  v6 = sub_21C2472E0();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = &v25[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  swift_beginAccess();
  v10 = *(_QWORD *)(v2 + 128);
  if (*(_QWORD *)(v10 + 16))
  {
    swift_bridgeObjectRetain();
    v11 = sub_21C1F64E0(a1);
    if ((v12 & 1) != 0)
    {
      sub_21C1E712C(*(_QWORD *)(v10 + 56) + 40 * v11, (uint64_t)&v26);
    }
    else
    {
      v28 = 0;
      v26 = 0u;
      v27 = 0u;
    }
    swift_bridgeObjectRelease();
    v13 = *((_QWORD *)&v27 + 1);
    if (*((_QWORD *)&v27 + 1))
    {
      v14 = v28;
      v15 = __swift_project_boxed_opaque_existential_1(&v26, *((uint64_t *)&v27 + 1));
      *((_QWORD *)&v30 + 1) = v13;
      v31 = *(_QWORD *)(v14 + 8);
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v29);
      (*(void (**)(uint64_t *, _QWORD *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(boxed_opaque_existential_1, v15, v13);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v26);
      goto LABEL_9;
    }
  }
  else
  {
    v28 = 0;
    v26 = 0u;
    v27 = 0u;
  }
  sub_21C1F03B0((uint64_t)&v26, &qword_25524C1A8);
  v29 = 0u;
  v30 = 0u;
  v31 = 0;
LABEL_9:
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v7 + 16))(v9, a1, v6);
  if (*((_QWORD *)&v30 + 1))
  {
    (*(void (**)(_BYTE *, uint64_t))(v7 + 8))(v9, v6);
    return sub_21C1EB66C(&v29, a2);
  }
  swift_beginAccess();
  v18 = *(_QWORD *)(v3 + 136);
  if (!*(_QWORD *)(v18 + 16))
  {
    v28 = 0;
    v26 = 0u;
    v27 = 0u;
LABEL_18:
    (*(void (**)(_BYTE *, uint64_t))(v7 + 8))(v9, v6);
    sub_21C1F03B0((uint64_t)&v26, &qword_25524C1A0);
    *(_QWORD *)(a2 + 32) = 0;
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
    return sub_21C1F03B0((uint64_t)&v29, &qword_25524CF78);
  }
  swift_bridgeObjectRetain();
  v19 = sub_21C1F64E0((uint64_t)v9);
  if ((v20 & 1) != 0)
  {
    sub_21C1E712C(*(_QWORD *)(v18 + 56) + 40 * v19, (uint64_t)&v26);
  }
  else
  {
    v28 = 0;
    v26 = 0u;
    v27 = 0u;
  }
  swift_bridgeObjectRelease();
  v21 = *((_QWORD *)&v27 + 1);
  if (!*((_QWORD *)&v27 + 1))
    goto LABEL_18;
  v22 = v28;
  v23 = __swift_project_boxed_opaque_existential_1(&v26, *((uint64_t *)&v27 + 1));
  *(_QWORD *)(a2 + 24) = v21;
  *(_QWORD *)(a2 + 32) = *(_QWORD *)(v22 + 8);
  v24 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)a2);
  (*(void (**)(uint64_t *, _QWORD *, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v24, v23, v21);
  (*(void (**)(_BYTE *, uint64_t))(v7 + 8))(v9, v6);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v26);
  return sub_21C1F03B0((uint64_t)&v29, &qword_25524CF78);
}

uint64_t sub_21C237E88(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3[9] = a2;
  v3[10] = v2;
  v3[8] = a1;
  v4 = sub_21C2476E8();
  v3[11] = v4;
  v3[12] = *(_QWORD *)(v4 - 8);
  v3[13] = swift_task_alloc();
  v3[14] = swift_task_alloc();
  v5 = sub_21C2472E0();
  v3[15] = v5;
  v3[16] = *(_QWORD *)(v5 - 8);
  v3[17] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_21C237F24()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int *v15;
  uint64_t *boxed_opaque_existential_1;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t (*v26)(uint64_t *);
  __int128 v27;

  v1 = sub_21C2475F8();
  sub_21C238978(v1, v2);
  *(_QWORD *)(v0 + 144) = 0;
  swift_bridgeObjectRelease();
  v3 = sub_21C2475EC();
  *(_QWORD *)(v0 + 152) = v4;
  if (v4)
  {
    *(_QWORD *)(v0 + 160) = v3;
    sub_21C2475C8();
    sub_21C24863C();
    *(_QWORD *)(v0 + 168) = sub_21C248630();
    sub_21C2485E8();
    return swift_task_switch();
  }
  v6 = *(_QWORD *)(v0 + 80);
  sub_21C2475E0();
  swift_beginAccess();
  v7 = *(_QWORD *)(v6 + 144);
  if (*(_QWORD *)(v7 + 16))
  {
    v8 = *(_QWORD *)(v0 + 112);
    swift_bridgeObjectRetain();
    v9 = sub_21C1F6448(v8);
    if ((v10 & 1) != 0)
    {
      v11 = *(_QWORD *)(v0 + 112);
      v12 = *(_QWORD *)(v0 + 88);
      v13 = *(_QWORD *)(v0 + 96);
      v14 = *(_QWORD *)(v0 + 64);
      v27 = *(_OWORD *)(*(_QWORD *)(v7 + 56) + 16 * v9);
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v11, v12);
      v15 = *(int **)(*((_QWORD *)&v27 + 1) + 16);
      *(_OWORD *)(v14 + 24) = v27;
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)v14);
      v26 = (uint64_t (*)(uint64_t *))((char *)v15 + *v15);
      v17 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 184) = v17;
      *v17 = v0;
      v17[1] = sub_21C2382E4;
      return v26(boxed_opaque_existential_1);
    }
    swift_bridgeObjectRelease();
  }
  v18 = *(_QWORD *)(v0 + 104);
  v19 = *(_QWORD *)(v0 + 88);
  v20 = *(_QWORD *)(v0 + 96);
  v21 = *(_QWORD *)(v0 + 80);
  (*(void (**)(_QWORD, uint64_t))(v20 + 8))(*(_QWORD *)(v0 + 112), v19);
  sub_21C2475E0();
  swift_beginAccess();
  v22 = *(_QWORD *)(v21 + 168);
  v23 = type metadata accessor for EntryPointIndex.NoEntryPoint(0);
  sub_21C1FBD14(&qword_25524CF68, type metadata accessor for EntryPointIndex.NoEntryPoint, (uint64_t)&unk_21C24C758);
  swift_allocError();
  v25 = v24;
  *v24 = 0x49556E6F6ELL;
  v24[1] = 0xE500000000000000;
  (*(void (**)(char *, uint64_t, uint64_t))(v20 + 32))((char *)v24 + *(int *)(v23 + 20), v18, v19);
  *(_QWORD *)((char *)v25 + *(int *)(v23 + 24)) = v22;
  swift_bridgeObjectRetain();
  swift_willThrow();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21C2381F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(_QWORD *)(v0 + 160);
  v3 = *(_QWORD *)(v0 + 144);
  v2 = *(_QWORD *)(v0 + 152);
  v4 = *(_QWORD *)(v0 + 136);
  v5 = *(_QWORD *)(v0 + 64);
  swift_release();
  sub_21C238850(v4, v1, v2, 1, v5);
  *(_QWORD *)(v0 + 176) = v3;
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 128) + 8))(*(_QWORD *)(v0 + 136), *(_QWORD *)(v0 + 120));
  swift_bridgeObjectRelease();
  if (v3)
    return swift_task_switch();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21C2382E4()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_21C238348()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21C238398(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3[9] = a2;
  v3[10] = v2;
  v3[8] = a1;
  v4 = sub_21C2476E8();
  v3[11] = v4;
  v3[12] = *(_QWORD *)(v4 - 8);
  v3[13] = swift_task_alloc();
  v3[14] = swift_task_alloc();
  v5 = sub_21C2472E0();
  v3[15] = v5;
  v3[16] = *(_QWORD *)(v5 - 8);
  v3[17] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_21C238434()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;

  v1 = sub_21C2475F8();
  sub_21C238978(v1, v2);
  *(_QWORD *)(v0 + 144) = 0;
  swift_bridgeObjectRelease();
  v3 = sub_21C2475EC();
  *(_QWORD *)(v0 + 152) = v4;
  if (v4)
  {
    *(_QWORD *)(v0 + 160) = v3;
    sub_21C2475C8();
    sub_21C24863C();
    *(_QWORD *)(v0 + 168) = sub_21C248630();
    sub_21C2485E8();
    return swift_task_switch();
  }
  v6 = *(_QWORD *)(v0 + 80);
  sub_21C2475E0();
  swift_beginAccess();
  v7 = *(_QWORD *)(v6 + 152);
  if (*(_QWORD *)(v7 + 16))
  {
    v8 = *(_QWORD *)(v0 + 112);
    swift_bridgeObjectRetain();
    v9 = sub_21C1F6448(v8);
    if ((v10 & 1) != 0)
    {
      v11 = *(_QWORD *)(v0 + 112);
      v12 = *(_QWORD *)(v0 + 88);
      v13 = *(_QWORD *)(v0 + 96);
      v14 = *(uint64_t **)(v0 + 64);
      v15 = (uint64_t *)(*(_QWORD *)(v7 + 56) + 16 * v9);
      v16 = *v15;
      *(_QWORD *)(v0 + 184) = *v15;
      v17 = v15[1];
      *(_QWORD *)(v0 + 192) = v17;
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v11, v12);
      *(_QWORD *)(v0 + 200) = *(_QWORD *)(v17 + 32);
      v14[3] = v16;
      v14[4] = v17;
      *(_QWORD *)(v0 + 208) = __swift_allocate_boxed_opaque_existential_1(v14);
      sub_21C24863C();
      *(_QWORD *)(v0 + 216) = sub_21C248630();
      sub_21C2485E8();
      return swift_task_switch();
    }
    swift_bridgeObjectRelease();
  }
  v18 = *(_QWORD *)(v0 + 104);
  v19 = *(_QWORD *)(v0 + 88);
  v20 = *(_QWORD *)(v0 + 96);
  v21 = *(_QWORD *)(v0 + 80);
  (*(void (**)(_QWORD, uint64_t))(v20 + 8))(*(_QWORD *)(v0 + 112), v19);
  sub_21C2475E0();
  swift_beginAccess();
  v22 = *(_QWORD *)(v21 + 168);
  v23 = type metadata accessor for EntryPointIndex.NoEntryPoint(0);
  sub_21C1FBD14(&qword_25524CF68, type metadata accessor for EntryPointIndex.NoEntryPoint, (uint64_t)&unk_21C24C758);
  swift_allocError();
  v25 = v24;
  *v24 = 0x656E656373;
  v24[1] = 0xE500000000000000;
  (*(void (**)(char *, uint64_t, uint64_t))(v20 + 32))((char *)v24 + *(int *)(v23 + 20), v18, v19);
  *(_QWORD *)((char *)v25 + *(int *)(v23 + 24)) = v22;
  swift_bridgeObjectRetain();
  swift_willThrow();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21C2386F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(_QWORD *)(v0 + 160);
  v3 = *(_QWORD *)(v0 + 144);
  v2 = *(_QWORD *)(v0 + 152);
  v4 = *(_QWORD *)(v0 + 136);
  v5 = *(_QWORD *)(v0 + 64);
  swift_release();
  sub_21C238850(v4, v1, v2, 2, v5);
  *(_QWORD *)(v0 + 176) = v3;
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 128) + 8))(*(_QWORD *)(v0 + 136), *(_QWORD *)(v0 + 120));
  swift_bridgeObjectRelease();
  if (v3)
    return swift_task_switch();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21C2387DC()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t, uint64_t);
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 192);
  v2 = *(void (**)(uint64_t, uint64_t))(v0 + 200);
  v3 = *(_QWORD *)(v0 + 184);
  swift_release();
  v2(v3, v1);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21C238850@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W4>, uint64_t a5@<X8>)
{
  uint64_t v5;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v11 = sub_21C248834();
  if (!v11)
  {
    sub_21C23C2D0();
    swift_allocError();
    *(_QWORD *)v17 = a2;
    *(_QWORD *)(v17 + 8) = a3;
    *(_BYTE *)(v17 + 32) = 0;
    swift_bridgeObjectRetain();
    return swift_willThrow();
  }
  v12 = v11;
  v13 = swift_conformsToProtocol2();
  if (v13)
    v14 = v13;
  else
    v14 = 0;
  if (v13)
    v15 = v12;
  else
    v15 = 0;
  if (!v15)
  {
    sub_21C23C2D0();
    swift_allocError();
    v19 = v18;
    *(_QWORD *)(v18 + 24) = swift_getMetatypeMetadata();
    *(_QWORD *)v19 = v12;
    *(_BYTE *)(v19 + 32) = a4;
    return swift_willThrow();
  }
  result = (*(uint64_t (**)(uint64_t))(v14 + 8))(a1);
  if (!v5)
  {
    sub_21C1E712C(result + 16, a5);
    return swift_release();
  }
  return result;
}

uint64_t sub_21C238978(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  int v19;
  BOOL v20;
  uint8_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  uint8_t *v42;
  int v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46[3];
  uint64_t v47;
  uint64_t v48;

  v6 = sub_21C247CC4();
  v7 = *(_QWORD *)(v6 - 8);
  result = MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v42 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    v44 = result;
    v48 = v3;
    swift_beginAccess();
    v45 = v2;
    v11 = *(_QWORD *)(v2 + 168);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v12 = sub_21C238DC4(a1, a2, v11);
    swift_bridgeObjectRelease();
    if ((v12 & 1) != 0)
      return swift_bridgeObjectRelease();
    v13 = v48;
    v14 = sub_21C1FBEBC();
    if (!v13)
    {

      swift_beginAccess();
      sub_21C23A000(&v47, a1, a2);
      swift_endAccess();
      swift_bridgeObjectRelease();
      __swift_instantiateConcreteTypeFromMangledName(&qword_25524CF50);
      v15 = sub_21C246F68();
      if (v15)
        v16 = v15;
      else
        v16 = MEMORY[0x24BEE4AF8];
      sub_21C247CA0();
      swift_bridgeObjectRetain_n();
      v17 = sub_21C247CB8();
      v18 = sub_21C248738();
      v19 = v18;
      v20 = os_log_type_enabled(v17, v18);
      v48 = 0;
      if (v20)
      {
        v21 = (uint8_t *)swift_slowAlloc();
        v22 = swift_slowAlloc();
        v46[0] = v22;
        v43 = v19;
        *(_DWORD *)v21 = 136315138;
        v42 = v21 + 4;
        swift_bridgeObjectRetain();
        v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_25524CF58);
        v24 = MEMORY[0x2207766C0](v16, v23);
        v26 = v25;
        swift_bridgeObjectRelease();
        v47 = sub_21C203A90(v24, v26, v46);
        sub_21C2487A4();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_21C1E3000, v17, (os_log_type_t)v43, "Found types conforming to EntryPointProvider: %s", v21, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x2207770EC](v22, -1, -1);
        MEMORY[0x2207770EC](v21, -1, -1);

      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v44);
      v27 = v45;
      v28 = *(_QWORD *)(v16 + 16);
      if (v28)
      {
        swift_bridgeObjectRetain();
        v29 = 0;
        v30 = (_QWORD *)MEMORY[0x24BEE4AF8];
        do
        {
          v32 = *(_QWORD *)(v16 + 8 * v29 + 32);
          v33 = swift_conformsToProtocol2();
          if (v33)
            v34 = v32;
          else
            v34 = 0;
          if (v33)
            v35 = v33;
          else
            v35 = 0;
          if (v34)
          {
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              v30 = sub_21C23D684(0, v30[2] + 1, 1, v30);
            v37 = v30[2];
            v36 = v30[3];
            if (v37 >= v36 >> 1)
              v30 = sub_21C23D684((_QWORD *)(v36 > 1), v37 + 1, 1, v30);
            v30[2] = v37 + 1;
            v31 = &v30[2 * v37];
            v31[4] = v34;
            v31[5] = v35;
          }
          ++v29;
        }
        while (v28 != v29);
        swift_bridgeObjectRelease();
        v27 = v45;
      }
      else
      {
        v30 = (_QWORD *)MEMORY[0x24BEE4AF8];
      }
      swift_bridgeObjectRelease();
      v38 = v30[2];
      if (v38)
      {
        v39 = v30 + 5;
        do
        {
          v40 = *(v39 - 1);
          v41 = *v39;
          swift_beginAccess();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v41 + 8))(v27 + 144, v40, v41);
          swift_endAccess();
          swift_beginAccess();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v41 + 16))(v27 + 160, v40, v41);
          swift_endAccess();
          v39 += 2;
          --v38;
        }
        while (v38);
      }
      return swift_bridgeObjectRelease();
    }
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_21C238DC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  BOOL v12;
  uint64_t result;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  BOOL v17;

  if (*(_QWORD *)(a3 + 16))
  {
    sub_21C2489A8();
    sub_21C2484F8();
    v6 = sub_21C2489C0();
    v7 = -1 << *(_BYTE *)(a3 + 32);
    v8 = v6 & ~v7;
    v9 = a3 + 56;
    if (((*(_QWORD *)(a3 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) != 0)
    {
      v10 = *(_QWORD *)(a3 + 48);
      v11 = (_QWORD *)(v10 + 16 * v8);
      v12 = *v11 == a1 && v11[1] == a2;
      if (v12 || (sub_21C248924() & 1) != 0)
        return 1;
      v14 = ~v7;
      v15 = (v8 + 1) & v14;
      if (((*(_QWORD *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFF8)) >> v15) & 1) != 0)
      {
        while (1)
        {
          v16 = (_QWORD *)(v10 + 16 * v15);
          v17 = *v16 == a1 && v16[1] == a2;
          if (v17 || (sub_21C248924() & 1) != 0)
            break;
          result = 0;
          v15 = (v15 + 1) & v14;
          if (((*(_QWORD *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFF8)) >> v15) & 1) == 0)
            return result;
        }
        return 1;
      }
    }
  }
  return 0;
}

uint64_t sub_21C238EF8()
{
  sub_21C24881C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_21C248504();
  swift_bridgeObjectRelease();
  sub_21C248504();
  type metadata accessor for EntryPointIndex.NoEntryPoint(0);
  sub_21C2476E8();
  sub_21C1FBD14(&qword_25524A270, (uint64_t (*)(uint64_t))MEMORY[0x24BE783F0], MEMORY[0x24BE78410]);
  sub_21C2488F4();
  sub_21C248504();
  swift_bridgeObjectRelease();
  return 2125646;
}

unint64_t sub_21C238FF0()
{
  sub_21C24881C();
  swift_bridgeObjectRelease();
  type metadata accessor for EntryPointIndex.NoEntryPoint(0);
  sub_21C2486E4();
  sub_21C2486D8();
  sub_21C248504();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return 0xD000000000000013;
}

void sub_21C2390C8(uint64_t *a1@<X8>)
{
  void *v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = (void *)sub_21C24848C();
  v3 = objc_msgSend(v2, sel_lastPathComponent);

  v4 = sub_21C248498();
  v6 = v5;

  *a1 = v4;
  a1[1] = v6;
}

uint64_t sub_21C239148()
{
  sub_21C1FBD14(qword_25524D078, type metadata accessor for EntryPointIndex.NoEntryPoint, (uint64_t)&unk_21C24C578);
  return sub_21C24794C();
}

uint64_t sub_21C239188()
{
  sub_21C1FBD14(qword_25524D078, type metadata accessor for EntryPointIndex.NoEntryPoint, (uint64_t)&unk_21C24C578);
  return sub_21C24791C();
}

uint64_t sub_21C2391C8()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_defaultActor_destroy();
  return v0;
}

uint64_t sub_21C23922C()
{
  sub_21C2391C8();
  return swift_defaultActor_deallocate();
}

uint64_t type metadata accessor for EntryPointIndex()
{
  return objc_opt_self();
}

uint64_t *sub_21C239264(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_21C24716C();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_21C2392F0(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_21C24716C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return swift_bridgeObjectRelease();
}

uint64_t sub_21C239334(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_21C24716C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_21C239394(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_21C24716C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_21C239400(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_21C24716C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_21C23945C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_21C24716C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_21C2394C0()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_21C2394CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_21C24716C();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_21C239548()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_21C239554(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_21C24716C();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  return result;
}

uint64_t type metadata accessor for EntryPointIndex.UpdateState(uint64_t a1)
{
  return sub_21C1F2E98(a1, qword_25524CE70);
}

uint64_t sub_21C2395E0()
{
  uint64_t result;
  unint64_t v1;

  result = sub_21C24716C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

char *sub_21C239654(char *a1, char **a2, uint64_t a3)
{
  int v5;
  char *v6;
  char *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = &v12[(v5 + 16) & ~(unint64_t)v5];
    swift_retain();
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v6 = *a2;
      *(_QWORD *)a1 = *a2;
      v7 = v6;
      v8 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25524A548) + 48);
      v9 = &a1[v8];
      v10 = (char *)a2 + v8;
      v11 = sub_21C247880();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    }
    else
    {
      v13 = sub_21C2470D0();
      (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(a1, a2, v13);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_21C239748(id *a1)
{
  uint64_t v2;

  if (swift_getEnumCaseMultiPayload() == 1)
  {

    a1 = (id *)((char *)a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25524A548) + 48));
    v2 = sub_21C247880();
  }
  else
  {
    v2 = sub_21C2470D0();
  }
  return (*(uint64_t (**)(id *, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

void **sub_21C2397B0(void **a1, void **a2)
{
  void *v4;
  id v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;

  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v4 = *a2;
    *a1 = *a2;
    v5 = v4;
    v6 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25524A548) + 48);
    v7 = (char *)a1 + v6;
    v8 = (char *)a2 + v6;
    v9 = sub_21C247880();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8, v9);
  }
  else
  {
    v10 = sub_21C2470D0();
    (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(a1, a2, v10);
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void **sub_21C239878(void **a1, void **a2)
{
  void *v4;
  id v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;

  if (a1 != a2)
  {
    sub_21C1E71CC((uint64_t)a1, type metadata accessor for EntryPointIndex.PendingShellResource);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v4 = *a2;
      *a1 = *a2;
      v5 = v4;
      v6 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25524A548) + 48);
      v7 = (char *)a1 + v6;
      v8 = (char *)a2 + v6;
      v9 = sub_21C247880();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8, v9);
    }
    else
    {
      v10 = sub_21C2470D0();
      (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(a1, a2, v10);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t type metadata accessor for EntryPointIndex.PendingShellResource(uint64_t a1)
{
  return sub_21C1F2E98(a1, qword_25524CF18);
}

_QWORD *sub_21C23996C(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;

  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *a1 = *a2;
    v4 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25524A548) + 48);
    v5 = (char *)a1 + v4;
    v6 = (char *)a2 + v4;
    v7 = sub_21C247880();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  }
  else
  {
    v8 = sub_21C2470D0();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a1, a2, v8);
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

_QWORD *sub_21C239A30(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;

  if (a1 != a2)
  {
    sub_21C1E71CC((uint64_t)a1, type metadata accessor for EntryPointIndex.PendingShellResource);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *a1 = *a2;
      v4 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25524A548) + 48);
      v5 = (char *)a1 + v4;
      v6 = (char *)a2 + v4;
      v7 = sub_21C247880();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
    }
    else
    {
      v8 = sub_21C2470D0();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a1, a2, v8);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_21C239B0C()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;
  _QWORD v3[6];

  result = sub_21C2470D0();
  if (v1 <= 0x3F)
  {
    v3[4] = *(_QWORD *)(result - 8) + 64;
    result = sub_21C247880();
    if (v2 <= 0x3F)
    {
      swift_getTupleTypeLayout2();
      v3[5] = v3;
      swift_initEnumMetadataMultiPayload();
      return 0;
    }
  }
  return result;
}

unint64_t sub_21C239BA4()
{
  uint64_t v0;
  uint64_t v1;
  _OWORD v3[2];
  _OWORD v4[2];
  char v5;

  sub_21C23CC40(v0, (uint64_t)v4);
  if (v5)
  {
    sub_21C23CC74(v4, v3);
    sub_21C24881C();
    sub_21C248504();
    sub_21C248870();
    sub_21C248504();
    v1 = 0;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v3);
  }
  else
  {
    sub_21C24881C();
    swift_bridgeObjectRelease();
    sub_21C248504();
    swift_bridgeObjectRelease();
    return 0xD00000000000001ALL;
  }
  return v1;
}

uint64_t sub_21C239D54()
{
  sub_21C23CC84();
  return sub_21C24794C();
}

uint64_t sub_21C239D7C()
{
  sub_21C23CC84();
  return sub_21C24791C();
}

uint64_t sub_21C239DA4(uint64_t a1, char *a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t);
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(_QWORD, _QWORD, _QWORD);
  uint64_t v19;
  void (*v20)(_QWORD, _QWORD, _QWORD);
  char v21;
  void (*v22)(char *, uint64_t);
  uint64_t v23;
  char isUniquelyReferenced_nonNull_native;
  char *v25;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;

  v3 = v2;
  v6 = sub_21C2474FC();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *v3;
  sub_21C1FBD14(&qword_25524AC40, v11, MEMORY[0x24BE77D98]);
  swift_bridgeObjectRetain();
  v31 = a2;
  v12 = sub_21C248474();
  v13 = -1 << *(_BYTE *)(v10 + 32);
  v14 = v12 & ~v13;
  v15 = v10;
  v16 = v10 + 56;
  if (((*(_QWORD *)(v10 + 56 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) != 0)
  {
    v27 = v3;
    v28 = a1;
    v29 = ~v13;
    v30 = v7;
    v17 = *(_QWORD *)(v7 + 72);
    v18 = *(void (**)(_QWORD, _QWORD, _QWORD))(v7 + 16);
    while (1)
    {
      v19 = v15;
      v20 = v18;
      v18(v9, *(_QWORD *)(v15 + 48) + v17 * v14, v6);
      sub_21C1FBD14(&qword_25524AC50, (uint64_t (*)(uint64_t))MEMORY[0x24BE77D88], MEMORY[0x24BE77DA0]);
      v21 = sub_21C248480();
      v22 = *(void (**)(char *, uint64_t))(v30 + 8);
      v22(v9, v6);
      if ((v21 & 1) != 0)
        break;
      v14 = (v14 + 1) & v29;
      v15 = v19;
      v18 = v20;
      if (((*(_QWORD *)(v16 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        v3 = v27;
        a1 = v28;
        v23 = v30;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    v22(v31, v6);
    v20(v28, *(_QWORD *)(*v27 + 48) + v17 * v14, v6);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    v18 = *(void (**)(_QWORD, _QWORD, _QWORD))(v7 + 16);
    v23 = v7;
LABEL_7:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v25 = v31;
    v18(v9, v31, v6);
    v32 = *v3;
    *v3 = 0x8000000000000000;
    sub_21C23A7F4((uint64_t)v9, v14, isUniquelyReferenced_nonNull_native);
    *v3 = v32;
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, char *, uint64_t))(v23 + 32))(a1, v25, v6);
    return 1;
  }
}

uint64_t sub_21C23A000(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  BOOL v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v17;
  _QWORD *v18;
  BOOL v19;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v21;

  v7 = *v3;
  sub_21C2489A8();
  swift_bridgeObjectRetain();
  sub_21C2484F8();
  v8 = sub_21C2489C0();
  v9 = -1 << *(_BYTE *)(v7 + 32);
  v10 = v8 & ~v9;
  if (((*(_QWORD *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0)
  {
    v11 = *(_QWORD *)(v7 + 48);
    v12 = (_QWORD *)(v11 + 16 * v10);
    v13 = *v12 == a2 && v12[1] == a3;
    if (v13 || (sub_21C248924() & 1) != 0)
    {
LABEL_7:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v14 = (uint64_t *)(*(_QWORD *)(*v3 + 48) + 16 * v10);
      v15 = v14[1];
      *a1 = *v14;
      a1[1] = v15;
      swift_bridgeObjectRetain();
      return 0;
    }
    v17 = ~v9;
    while (1)
    {
      v10 = (v10 + 1) & v17;
      if (((*(_QWORD *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) == 0)
        break;
      v18 = (_QWORD *)(v11 + 16 * v10);
      v19 = *v18 == a2 && v18[1] == a3;
      if (v19 || (sub_21C248924() & 1) != 0)
        goto LABEL_7;
    }
  }
  swift_bridgeObjectRelease();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v21 = *v3;
  *v3 = 0x8000000000000000;
  swift_bridgeObjectRetain();
  sub_21C23A9F8(a2, a3, v10, isUniquelyReferenced_nonNull_native);
  *v3 = v21;
  swift_bridgeObjectRelease();
  *a1 = a2;
  a1[1] = a3;
  return 1;
}

uint64_t sub_21C23A1AC()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(char *, unint64_t, uint64_t);
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  char v28;
  unint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  int64_t v34;
  _QWORD *v35;
  uint64_t v36;

  v1 = v0;
  v2 = sub_21C2474FC();
  v36 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v33 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(qword_25524CFB0);
  v6 = sub_21C248804();
  v7 = v6;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 1 << *(_BYTE *)(v5 + 32);
    v9 = *(_QWORD *)(v5 + 56);
    v35 = (_QWORD *)(v5 + 56);
    if (v8 < 64)
      v10 = ~(-1 << v8);
    else
      v10 = -1;
    v11 = v10 & v9;
    v33 = v0;
    v34 = (unint64_t)(v8 + 63) >> 6;
    v12 = v6 + 56;
    result = swift_retain();
    v14 = 0;
    while (1)
    {
      if (v11)
      {
        v16 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        v17 = v16 | (v14 << 6);
      }
      else
      {
        v18 = v14 + 1;
        if (__OFADD__(v14, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v18 >= v34)
          goto LABEL_33;
        v19 = v35[v18];
        ++v14;
        if (!v19)
        {
          v14 = v18 + 1;
          if (v18 + 1 >= v34)
            goto LABEL_33;
          v19 = v35[v14];
          if (!v19)
          {
            v14 = v18 + 2;
            if (v18 + 2 >= v34)
              goto LABEL_33;
            v19 = v35[v14];
            if (!v19)
            {
              v20 = v18 + 3;
              if (v20 >= v34)
              {
LABEL_33:
                swift_release();
                v1 = v33;
                v32 = 1 << *(_BYTE *)(v5 + 32);
                if (v32 > 63)
                  bzero(v35, ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v35 = -1 << v32;
                *(_QWORD *)(v5 + 16) = 0;
                break;
              }
              v19 = v35[v20];
              if (!v19)
              {
                while (1)
                {
                  v14 = v20 + 1;
                  if (__OFADD__(v20, 1))
                    goto LABEL_39;
                  if (v14 >= v34)
                    goto LABEL_33;
                  v19 = v35[v14];
                  ++v20;
                  if (v19)
                    goto LABEL_23;
                }
              }
              v14 = v20;
            }
          }
        }
LABEL_23:
        v11 = (v19 - 1) & v19;
        v17 = __clz(__rbit64(v19)) + (v14 << 6);
      }
      v21 = v5;
      v22 = *(_QWORD *)(v5 + 48);
      v23 = *(_QWORD *)(v36 + 72);
      v24 = *(void (**)(char *, unint64_t, uint64_t))(v36 + 32);
      v24(v4, v22 + v23 * v17, v2);
      sub_21C1FBD14(&qword_25524AC40, (uint64_t (*)(uint64_t))MEMORY[0x24BE77D88], MEMORY[0x24BE77D98]);
      result = sub_21C248474();
      v25 = -1 << *(_BYTE *)(v7 + 32);
      v26 = result & ~v25;
      v27 = v26 >> 6;
      if (((-1 << v26) & ~*(_QWORD *)(v12 + 8 * (v26 >> 6))) != 0)
      {
        v15 = __clz(__rbit64((-1 << v26) & ~*(_QWORD *)(v12 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v28 = 0;
        v29 = (unint64_t)(63 - v25) >> 6;
        do
        {
          if (++v27 == v29 && (v28 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v30 = v27 == v29;
          if (v27 == v29)
            v27 = 0;
          v28 |= v30;
          v31 = *(_QWORD *)(v12 + 8 * v27);
        }
        while (v31 == -1);
        v15 = __clz(__rbit64(~v31)) + (v27 << 6);
      }
      *(_QWORD *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
      result = ((uint64_t (*)(unint64_t, char *, uint64_t))v24)(*(_QWORD *)(v7 + 48) + v15 * v23, v4, v2);
      ++*(_QWORD *)(v7 + 16);
      v5 = v21;
    }
  }
  result = swift_release();
  *v1 = v7;
  return result;
}

uint64_t sub_21C23A518()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t result;
  int64_t v11;
  unint64_t v12;
  _QWORD *v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25524CF60);
  v3 = sub_21C248804();
  v4 = v3;
  if (*(_QWORD *)(v2 + 16))
  {
    v5 = 1 << *(_BYTE *)(v2 + 32);
    v30 = (_QWORD *)(v2 + 56);
    if (v5 < 64)
      v6 = ~(-1 << v5);
    else
      v6 = -1;
    v7 = v6 & *(_QWORD *)(v2 + 56);
    v8 = (unint64_t)(v5 + 63) >> 6;
    v9 = v3 + 56;
    result = swift_retain();
    v11 = 0;
    while (1)
    {
      if (v7)
      {
        v14 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        v15 = v14 | (v11 << 6);
      }
      else
      {
        v16 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v8)
          goto LABEL_33;
        v17 = v30[v16];
        ++v11;
        if (!v17)
        {
          v11 = v16 + 1;
          if (v16 + 1 >= v8)
            goto LABEL_33;
          v17 = v30[v11];
          if (!v17)
          {
            v11 = v16 + 2;
            if (v16 + 2 >= v8)
              goto LABEL_33;
            v17 = v30[v11];
            if (!v17)
            {
              v18 = v16 + 3;
              if (v18 >= v8)
              {
LABEL_33:
                swift_release();
                v1 = v0;
                v29 = 1 << *(_BYTE *)(v2 + 32);
                if (v29 > 63)
                  bzero(v30, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v30 = -1 << v29;
                *(_QWORD *)(v2 + 16) = 0;
                break;
              }
              v17 = v30[v18];
              if (!v17)
              {
                while (1)
                {
                  v11 = v18 + 1;
                  if (__OFADD__(v18, 1))
                    goto LABEL_39;
                  if (v11 >= v8)
                    goto LABEL_33;
                  v17 = v30[v11];
                  ++v18;
                  if (v17)
                    goto LABEL_23;
                }
              }
              v11 = v18;
            }
          }
        }
LABEL_23:
        v7 = (v17 - 1) & v17;
        v15 = __clz(__rbit64(v17)) + (v11 << 6);
      }
      v19 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
      v20 = *v19;
      v21 = v19[1];
      sub_21C2489A8();
      sub_21C2484F8();
      result = sub_21C2489C0();
      v22 = -1 << *(_BYTE *)(v4 + 32);
      v23 = result & ~v22;
      v24 = v23 >> 6;
      if (((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6))) != 0)
      {
        v12 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v25 = 0;
        v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v27 = v24 == v26;
          if (v24 == v26)
            v24 = 0;
          v25 |= v27;
          v28 = *(_QWORD *)(v9 + 8 * v24);
        }
        while (v28 == -1);
        v12 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(_QWORD *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      v13 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 16 * v12);
      *v13 = v20;
      v13[1] = v21;
      ++*(_QWORD *)(v4 + 16);
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

uint64_t sub_21C23A7F4(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(char *, unint64_t, uint64_t);
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t result;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;

  v26 = a1;
  v6 = sub_21C2474FC();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(*v3 + 16);
  v11 = *(_QWORD *)(*v3 + 24);
  v25 = v3;
  if (v11 > v10 && (a3 & 1) != 0)
    goto LABEL_12;
  if ((a3 & 1) != 0)
  {
    sub_21C23A1AC();
  }
  else
  {
    if (v11 > v10)
    {
      sub_21C23AB90();
      goto LABEL_12;
    }
    sub_21C23AF64();
  }
  v12 = *v3;
  sub_21C1FBD14(&qword_25524AC40, (uint64_t (*)(uint64_t))MEMORY[0x24BE77D88], MEMORY[0x24BE77D98]);
  v13 = sub_21C248474();
  v14 = -1 << *(_BYTE *)(v12 + 32);
  a2 = v13 & ~v14;
  if (((*(_QWORD *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v15 = ~v14;
    v16 = *(_QWORD *)(v7 + 72);
    v17 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    do
    {
      v17(v9, *(_QWORD *)(v12 + 48) + v16 * a2, v6);
      sub_21C1FBD14(&qword_25524AC50, (uint64_t (*)(uint64_t))MEMORY[0x24BE77D88], MEMORY[0x24BE77DA0]);
      v18 = sub_21C248480();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      if ((v18 & 1) != 0)
        goto LABEL_15;
      a2 = (a2 + 1) & v15;
    }
    while (((*(_QWORD *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  v19 = v26;
  v20 = *v25;
  *(_QWORD *)(*v25 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v7 + 32))(*(_QWORD *)(v20 + 48) + *(_QWORD *)(v7 + 72) * a2, v19, v6);
  v22 = *(_QWORD *)(v20 + 16);
  v23 = __OFADD__(v22, 1);
  v24 = v22 + 1;
  if (!v23)
  {
    *(_QWORD *)(v20 + 16) = v24;
    return result;
  }
  __break(1u);
LABEL_15:
  result = sub_21C24893C();
  __break(1u);
  return result;
}

uint64_t sub_21C23A9F8(uint64_t result, uint64_t a2, unint64_t a3, char a4)
{
  uint64_t *v4;
  uint64_t *v5;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  BOOL v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;

  v5 = v4;
  v8 = result;
  v9 = *(_QWORD *)(*v4 + 16);
  v10 = *(_QWORD *)(*v4 + 24);
  if (v10 > v9 && (a4 & 1) != 0)
    goto LABEL_22;
  if ((a4 & 1) != 0)
  {
    sub_21C23A518();
  }
  else
  {
    if (v10 > v9)
    {
      result = (uint64_t)sub_21C23ADB4();
      goto LABEL_22;
    }
    sub_21C23B28C();
  }
  v11 = *v4;
  sub_21C2489A8();
  sub_21C2484F8();
  result = sub_21C2489C0();
  v12 = -1 << *(_BYTE *)(v11 + 32);
  a3 = result & ~v12;
  v13 = v11 + 56;
  if (((*(_QWORD *)(v11 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8)) >> a3) & 1) != 0)
  {
    v14 = *(_QWORD *)(v11 + 48);
    v15 = (_QWORD *)(v14 + 16 * a3);
    v16 = *v15 == v8 && v15[1] == a2;
    if (v16 || (result = sub_21C248924(), (result & 1) != 0))
    {
LABEL_21:
      result = sub_21C24893C();
      __break(1u);
    }
    else
    {
      v17 = ~v12;
      while (1)
      {
        a3 = (a3 + 1) & v17;
        if (((*(_QWORD *)(v13 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8)) >> a3) & 1) == 0)
          break;
        v18 = (_QWORD *)(v14 + 16 * a3);
        if (*v18 != v8 || v18[1] != a2)
        {
          result = sub_21C248924();
          if ((result & 1) == 0)
            continue;
        }
        goto LABEL_21;
      }
    }
  }
LABEL_22:
  v20 = *v5;
  *(_QWORD *)(*v5 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  v21 = (uint64_t *)(*(_QWORD *)(v20 + 48) + 16 * a3);
  *v21 = v8;
  v21[1] = a2;
  v22 = *(_QWORD *)(v20 + 16);
  v23 = __OFADD__(v22, 1);
  v24 = v22 + 1;
  if (v23)
    __break(1u);
  else
    *(_QWORD *)(v20 + 16) = v24;
  return result;
}

void *sub_21C23AB90()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *result;
  uint64_t v10;
  unint64_t v11;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  uint64_t v24;
  uint64_t *v25;

  v1 = v0;
  v2 = sub_21C2474FC();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(qword_25524CFB0);
  v6 = *v0;
  v7 = sub_21C2487F8();
  v8 = v7;
  if (!*(_QWORD *)(v6 + 16))
  {
    result = (void *)swift_release();
LABEL_30:
    *v1 = v8;
    return result;
  }
  v25 = v1;
  result = (void *)(v7 + 56);
  v10 = v6 + 56;
  v11 = (unint64_t)((1 << *(_BYTE *)(v8 + 32)) + 63) >> 6;
  if (v8 != v6 || (unint64_t)result >= v6 + 56 + 8 * v11)
    result = memmove(result, (const void *)(v6 + 56), 8 * v11);
  v13 = 0;
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(v6 + 16);
  v14 = 1 << *(_BYTE *)(v6 + 32);
  v15 = -1;
  if (v14 < 64)
    v15 = ~(-1 << v14);
  v16 = v15 & *(_QWORD *)(v6 + 56);
  v17 = (unint64_t)(v14 + 63) >> 6;
  while (1)
  {
    if (v16)
    {
      v18 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      v19 = v18 | (v13 << 6);
      goto LABEL_12;
    }
    v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
      __break(1u);
      goto LABEL_32;
    }
    if (v21 >= v17)
      goto LABEL_28;
    v22 = *(_QWORD *)(v10 + 8 * v21);
    ++v13;
    if (!v22)
    {
      v13 = v21 + 1;
      if (v21 + 1 >= v17)
        goto LABEL_28;
      v22 = *(_QWORD *)(v10 + 8 * v13);
      if (!v22)
      {
        v13 = v21 + 2;
        if (v21 + 2 >= v17)
          goto LABEL_28;
        v22 = *(_QWORD *)(v10 + 8 * v13);
        if (!v22)
          break;
      }
    }
LABEL_27:
    v16 = (v22 - 1) & v22;
    v19 = __clz(__rbit64(v22)) + (v13 << 6);
LABEL_12:
    v20 = *(_QWORD *)(v3 + 72) * v19;
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v5, *(_QWORD *)(v6 + 48) + v20, v2);
    result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32))(*(_QWORD *)(v8 + 48) + v20, v5, v2);
  }
  v23 = v21 + 3;
  if (v23 >= v17)
  {
LABEL_28:
    result = (void *)swift_release();
    v1 = v25;
    goto LABEL_30;
  }
  v22 = *(_QWORD *)(v10 + 8 * v23);
  if (v22)
  {
    v13 = v23;
    goto LABEL_27;
  }
  while (1)
  {
    v13 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v13 >= v17)
      goto LABEL_28;
    v22 = *(_QWORD *)(v10 + 8 * v13);
    ++v23;
    if (v22)
      goto LABEL_27;
  }
LABEL_32:
  __break(1u);
  return result;
}

void *sub_21C23ADB4()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  _QWORD *v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25524CF60);
  v2 = *v0;
  v3 = sub_21C2487F8();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v20 >= v13)
      goto LABEL_28;
    v21 = *(_QWORD *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      v9 = v20 + 1;
      if (v20 + 1 >= v13)
        goto LABEL_28;
      v21 = *(_QWORD *)(v6 + 8 * v9);
      if (!v21)
      {
        v9 = v20 + 2;
        if (v20 + 2 >= v13)
          goto LABEL_28;
        v21 = *(_QWORD *)(v6 + 8 * v9);
        if (!v21)
          break;
      }
    }
LABEL_27:
    v12 = (v21 - 1) & v21;
    v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (_QWORD *)(*(_QWORD *)(v2 + 48) + v16);
    v18 = v17[1];
    v19 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v19 = *v17;
    v19[1] = v18;
    result = (void *)swift_bridgeObjectRetain();
  }
  v22 = v20 + 3;
  if (v22 >= v13)
    goto LABEL_28;
  v21 = *(_QWORD *)(v6 + 8 * v22);
  if (v21)
  {
    v9 = v22;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v21 = *(_QWORD *)(v6 + 8 * v9);
    ++v22;
    if (v21)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_21C23AF64()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t result;
  int64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  int64_t v33;

  v1 = v0;
  v2 = sub_21C2474FC();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(qword_25524CFB0);
  v7 = sub_21C248804();
  v8 = v7;
  if (!*(_QWORD *)(v6 + 16))
  {
    result = swift_release();
LABEL_35:
    *v1 = v8;
    return result;
  }
  v9 = 1 << *(_BYTE *)(v6 + 32);
  v10 = *(_QWORD *)(v6 + 56);
  v31 = v0;
  v32 = v6 + 56;
  if (v9 < 64)
    v11 = ~(-1 << v9);
  else
    v11 = -1;
  v12 = v11 & v10;
  v33 = (unint64_t)(v9 + 63) >> 6;
  v13 = v7 + 56;
  result = swift_retain();
  v15 = 0;
  while (1)
  {
    if (v12)
    {
      v17 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v18 = v17 | (v15 << 6);
      goto LABEL_24;
    }
    v19 = v15 + 1;
    if (__OFADD__(v15, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v19 >= v33)
      goto LABEL_33;
    v20 = *(_QWORD *)(v32 + 8 * v19);
    ++v15;
    if (!v20)
    {
      v15 = v19 + 1;
      if (v19 + 1 >= v33)
        goto LABEL_33;
      v20 = *(_QWORD *)(v32 + 8 * v15);
      if (!v20)
      {
        v15 = v19 + 2;
        if (v19 + 2 >= v33)
          goto LABEL_33;
        v20 = *(_QWORD *)(v32 + 8 * v15);
        if (!v20)
          break;
      }
    }
LABEL_23:
    v12 = (v20 - 1) & v20;
    v18 = __clz(__rbit64(v20)) + (v15 << 6);
LABEL_24:
    v22 = *(_QWORD *)(v3 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v5, *(_QWORD *)(v6 + 48) + v22 * v18, v2);
    sub_21C1FBD14(&qword_25524AC40, (uint64_t (*)(uint64_t))MEMORY[0x24BE77D88], MEMORY[0x24BE77D98]);
    result = sub_21C248474();
    v23 = -1 << *(_BYTE *)(v8 + 32);
    v24 = result & ~v23;
    v25 = v24 >> 6;
    if (((-1 << v24) & ~*(_QWORD *)(v13 + 8 * (v24 >> 6))) != 0)
    {
      v16 = __clz(__rbit64((-1 << v24) & ~*(_QWORD *)(v13 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v26 = 0;
      v27 = (unint64_t)(63 - v23) >> 6;
      do
      {
        if (++v25 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v28 = v25 == v27;
        if (v25 == v27)
          v25 = 0;
        v26 |= v28;
        v29 = *(_QWORD *)(v13 + 8 * v25);
      }
      while (v29 == -1);
      v16 = __clz(__rbit64(~v29)) + (v25 << 6);
    }
    *(_QWORD *)(v13 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32))(*(_QWORD *)(v8 + 48) + v16 * v22, v5, v2);
    ++*(_QWORD *)(v8 + 16);
  }
  v21 = v19 + 3;
  if (v21 >= v33)
  {
LABEL_33:
    result = swift_release_n();
    v1 = v31;
    goto LABEL_35;
  }
  v20 = *(_QWORD *)(v32 + 8 * v21);
  if (v20)
  {
    v15 = v21;
    goto LABEL_23;
  }
  while (1)
  {
    v15 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v15 >= v33)
      goto LABEL_33;
    v20 = *(_QWORD *)(v32 + 8 * v15);
    ++v21;
    if (v20)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_21C23B28C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t result;
  int64_t v11;
  unint64_t v12;
  _QWORD *v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  int64_t v29;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25524CF60);
  v3 = sub_21C248804();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_35:
    *v1 = v4;
    return result;
  }
  v5 = 1 << *(_BYTE *)(v2 + 32);
  v6 = v2 + 56;
  if (v5 < 64)
    v7 = ~(-1 << v5);
  else
    v7 = -1;
  v8 = v7 & *(_QWORD *)(v2 + 56);
  v29 = (unint64_t)(v5 + 63) >> 6;
  v9 = v3 + 56;
  result = swift_retain();
  v11 = 0;
  while (1)
  {
    if (v8)
    {
      v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v15 = v14 | (v11 << 6);
      goto LABEL_24;
    }
    v16 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v29)
      goto LABEL_33;
    v17 = *(_QWORD *)(v6 + 8 * v16);
    ++v11;
    if (!v17)
    {
      v11 = v16 + 1;
      if (v16 + 1 >= v29)
        goto LABEL_33;
      v17 = *(_QWORD *)(v6 + 8 * v11);
      if (!v17)
      {
        v11 = v16 + 2;
        if (v16 + 2 >= v29)
          goto LABEL_33;
        v17 = *(_QWORD *)(v6 + 8 * v11);
        if (!v17)
          break;
      }
    }
LABEL_23:
    v8 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v11 << 6);
LABEL_24:
    v19 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v20 = *v19;
    v21 = v19[1];
    sub_21C2489A8();
    swift_bridgeObjectRetain();
    sub_21C2484F8();
    result = sub_21C2489C0();
    v22 = -1 << *(_BYTE *)(v4 + 32);
    v23 = result & ~v22;
    v24 = v23 >> 6;
    if (((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6))) != 0)
    {
      v12 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v27 = v24 == v26;
        if (v24 == v26)
          v24 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v9 + 8 * v24);
      }
      while (v28 == -1);
      v12 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(_QWORD *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    v13 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 16 * v12);
    *v13 = v20;
    v13[1] = v21;
    ++*(_QWORD *)(v4 + 16);
  }
  v18 = v16 + 3;
  if (v18 >= v29)
  {
LABEL_33:
    result = swift_release_n();
    v1 = v0;
    goto LABEL_35;
  }
  v17 = *(_QWORD *)(v6 + 8 * v18);
  if (v17)
  {
    v11 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    v11 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v11 >= v29)
      goto LABEL_33;
    v17 = *(_QWORD *)(v6 + 8 * v11);
    ++v18;
    if (v17)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

void (*sub_21C23B538(_QWORD *a1, uint64_t a2))(uint64_t a1)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  char isUniquelyReferenced_nonNull_native;

  v4 = malloc(0x68uLL);
  *a1 = v4;
  v5 = sub_21C2472E0();
  v4[8] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v4[9] = v6;
  v7 = malloc(*(_QWORD *)(v6 + 64));
  v4[10] = v7;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  (*(void (**)(void *, uint64_t, uint64_t))(v6 + 16))(v7, a2, v5);
  v4[11] = sub_21C23B834(v4);
  v4[12] = sub_21C23B664(v4 + 4, (uint64_t)v7, isUniquelyReferenced_nonNull_native);
  return sub_21C23B5F8;
}

void sub_21C23B5F8(uint64_t a1)
{
  void *v1;
  void (*v2)(void *, _QWORD);
  void *v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(void **)a1;
  v2 = *(void (**)(void *, _QWORD))(*(_QWORD *)a1 + 88);
  v4 = *(_QWORD *)(*(_QWORD *)a1 + 72);
  v3 = *(void **)(*(_QWORD *)a1 + 80);
  v5 = *(_QWORD *)(*(_QWORD *)a1 + 64);
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)a1 + 96))(*(_QWORD *)a1 + 32, 0);
  (*(void (**)(void *, uint64_t))(v4 + 8))(v3, v5);
  v2(v1, 0);
  free(v3);
  free(v1);
}

void (*sub_21C23B664(_QWORD *a1, uint64_t a2, char a3))(uint64_t **a1)
{
  _QWORD *v3;
  _QWORD *v4;
  _QWORD *v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  char v12;
  unint64_t v13;
  uint64_t v14;
  _BOOL8 v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t updated;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  void (*result)(uint64_t **);

  v4 = v3;
  v8 = malloc(0x28uLL);
  *a1 = v8;
  *v8 = a2;
  v8[1] = v3;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_25524C198);
  v10 = malloc(*(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  v8[2] = v10;
  v11 = *v3;
  v13 = sub_21C1F64E0(a2);
  *((_BYTE *)v8 + 32) = v12 & 1;
  v14 = *(_QWORD *)(v11 + 16);
  v15 = (v12 & 1) == 0;
  v16 = v14 + v15;
  if (__OFADD__(v14, v15))
  {
    __break(1u);
  }
  else
  {
    v17 = v12;
    v18 = *(_QWORD *)(v11 + 24);
    if (v18 >= v16 && (a3 & 1) != 0)
    {
LABEL_7:
      v8[3] = v13;
      if ((v17 & 1) != 0)
      {
LABEL_8:
        v19 = *(_QWORD *)(*v4 + 56);
        updated = type metadata accessor for EntryPointIndex.UpdateState(0);
        v21 = *(_QWORD *)(updated - 8);
        sub_21C1F00F0(v19 + *(_QWORD *)(v21 + 72) * v13, (uint64_t)v10, type metadata accessor for EntryPointIndex.UpdateState);
        v22 = 0;
LABEL_12:
        (*(void (**)(void *, uint64_t, uint64_t, uint64_t))(v21 + 56))(v10, v22, 1, updated);
        return sub_21C23B7E8;
      }
LABEL_11:
      updated = type metadata accessor for EntryPointIndex.UpdateState(0);
      v21 = *(_QWORD *)(updated - 8);
      v22 = 1;
      goto LABEL_12;
    }
    if (v18 >= v16 && (a3 & 1) == 0)
    {
      sub_21C1FB100();
      goto LABEL_7;
    }
    sub_21C1F7D2C(v16, a3 & 1);
    v23 = sub_21C1F64E0(a2);
    if ((v17 & 1) == (v24 & 1))
    {
      v13 = v23;
      v8[3] = v23;
      if ((v17 & 1) != 0)
        goto LABEL_8;
      goto LABEL_11;
    }
  }
  sub_21C2472E0();
  result = (void (*)(uint64_t **))sub_21C248948();
  __break(1u);
  return result;
}

void sub_21C23B7E8(uint64_t **a1)
{
  uint64_t *v1;
  void *v2;

  v1 = *a1;
  v2 = (void *)(*a1)[2];
  sub_21C23B860((uint64_t)v2, *((unsigned __int8 *)*a1 + 32), (uint64_t *)(*a1)[1], (*a1)[3], **a1);
  sub_21C1F03B0((uint64_t)v2, &qword_25524C198);
  free(v2);
  free(v1);
}

uint64_t (*sub_21C23B834(_QWORD *a1))(uint64_t result)
{
  _QWORD *v1;

  *a1 = *v1;
  a1[1] = v1;
  *v1 = 0x8000000000000000;
  return sub_21C23B854;
}

uint64_t sub_21C23B854(uint64_t result)
{
  **(_QWORD **)(result + 8) = *(_QWORD *)result;
  return result;
}

unint64_t sub_21C23B860(uint64_t a1, int a2, uint64_t *a3, unint64_t a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t updated;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  unint64_t result;
  int64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  int v26;

  v23 = a5;
  v25 = a4;
  v26 = a2;
  v24 = sub_21C2472E0();
  v7 = *(_QWORD *)(v24 - 8);
  MEMORY[0x24BDAC7A8](v24);
  v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_25524C198);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  updated = type metadata accessor for EntryPointIndex.UpdateState(0);
  v14 = *(_QWORD *)(updated - 8);
  v15 = MEMORY[0x24BDAC7A8](updated);
  v17 = (char *)&v23 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)&v23 - v18;
  sub_21C1F03EC(a1, (uint64_t)v12, &qword_25524C198);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, updated) == 1)
  {
    result = sub_21C1F03B0((uint64_t)v12, &qword_25524C198);
    if ((v26 & 1) != 0)
    {
      v21 = v25;
      swift_arrayDestroy();
      return sub_21C22B3CC(v21, *a3);
    }
  }
  else
  {
    sub_21C1F00F0((uint64_t)v12, (uint64_t)v19, type metadata accessor for EntryPointIndex.UpdateState);
    v22 = (_QWORD *)*a3;
    if ((v26 & 1) != 0)
    {
      return sub_21C1F00F0((uint64_t)v19, v22[7] + *(_QWORD *)(v14 + 72) * v25, type metadata accessor for EntryPointIndex.UpdateState);
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v23, v24);
      sub_21C1F00F0((uint64_t)v19, (uint64_t)v17, type metadata accessor for EntryPointIndex.UpdateState);
      return sub_21C1FA704(v25, (uint64_t)v9, (uint64_t)v17, v22);
    }
  }
  return result;
}

uint64_t sub_21C23BA68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5[7] = a4;
  v5[8] = a5;
  v5[5] = a1;
  v5[6] = a3;
  v7 = sub_21C247880();
  v5[9] = v7;
  v5[10] = *(_QWORD *)(v7 - 8);
  v5[11] = swift_task_alloc();
  v8 = sub_21C2470D0();
  v5[12] = v8;
  v5[13] = *(_QWORD *)(v8 - 8);
  v5[14] = swift_task_alloc();
  v9 = type metadata accessor for EntryPointIndex.PendingShellResource(0);
  v5[15] = v9;
  v5[16] = *(_QWORD *)(v9 - 8);
  v5[17] = swift_task_alloc();
  v5[18] = swift_task_alloc();
  v10 = *(_QWORD *)(a4 - 8);
  v5[19] = v10;
  v5[20] = swift_task_alloc();
  (*(void (**)(void))(v10 + 16))();
  return swift_task_switch();
}

uint64_t sub_21C23BB6C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  int EnumCaseMultiPayload;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v18;
  uint64_t (*v19)(uint64_t, _QWORD, _QWORD, _QWORD);
  uint64_t (*v20)(_QWORD, _QWORD, _QWORD);

  v1 = *(_QWORD *)(v0 + 40);
  swift_beginAccess();
  v2 = sub_21C22AB24(v1);
  *(_QWORD *)(v0 + 168) = v2;
  swift_endAccess();
  if (!v2)
    goto LABEL_6;
  v3 = *(_QWORD *)(v2 + 16);
  *(_QWORD *)(v0 + 176) = v3;
  if (!v3)
  {
    swift_bridgeObjectRelease();
LABEL_6:
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 152) + 8))(*(_QWORD *)(v0 + 160), *(_QWORD *)(v0 + 56));
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v4 = *(_QWORD *)(v0 + 128);
  v5 = *(_DWORD *)(v4 + 80);
  *(_DWORD *)(v0 + 224) = v5;
  *(_QWORD *)(v0 + 184) = *(_QWORD *)(v4 + 72);
  *(_QWORD *)(v0 + 192) = 0;
  v7 = *(_QWORD *)(v0 + 136);
  v6 = *(_QWORD *)(v0 + 144);
  sub_21C1E7170(*(_QWORD *)(v0 + 168) + ((v5 + 32) & ~(unint64_t)v5), v6, type metadata accessor for EntryPointIndex.PendingShellResource);
  sub_21C1E7170(v6, v7, type metadata accessor for EntryPointIndex.PendingShellResource);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  v9 = *(char **)(v0 + 136);
  v10 = *(_QWORD *)(v0 + 64);
  if (EnumCaseMultiPayload == 1)
  {
    v12 = *(_QWORD *)(v0 + 80);
    v11 = *(_QWORD *)(v0 + 88);
    v13 = *(_QWORD *)(v0 + 72);
    v14 = *(_QWORD *)v9;
    *(_QWORD *)(v0 + 208) = *(_QWORD *)v9;
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_25524A548);
    (*(void (**)(uint64_t, char *, uint64_t))(v12 + 32))(v11, &v9[*(int *)(v15 + 48)], v13);
    v19 = (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD))(**(int **)(v10 + 48) + *(_QWORD *)(v10 + 48));
    v16 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 216) = v16;
    *v16 = v0;
    v16[1] = sub_21C23C02C;
    return v19(v14, *(_QWORD *)(v0 + 88), *(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64));
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 104) + 32))(*(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 136), *(_QWORD *)(v0 + 96));
    v20 = (uint64_t (*)(_QWORD, _QWORD, _QWORD))(**(int **)(v10 + 40) + *(_QWORD *)(v10 + 40));
    v18 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 200) = v18;
    *v18 = v0;
    v18[1] = sub_21C23BDAC;
    return v20(*(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64));
  }
}

uint64_t sub_21C23BDAC()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_21C23BE04()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int EnumCaseMultiPayload;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t (*v19)(uint64_t, _QWORD, _QWORD, _QWORD);
  uint64_t (*v20)(_QWORD, _QWORD, _QWORD);

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 104) + 8))(*(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 96));
  v1 = *(_QWORD *)(v0 + 176);
  v2 = *(_QWORD *)(v0 + 192) + 1;
  sub_21C1E71CC(*(_QWORD *)(v0 + 144), type metadata accessor for EntryPointIndex.PendingShellResource);
  if (v2 == v1)
  {
    swift_bridgeObjectRelease();
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 152) + 8))(*(_QWORD *)(v0 + 160), *(_QWORD *)(v0 + 56));
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v4 = *(_QWORD *)(v0 + 184);
    v5 = *(_QWORD *)(v0 + 192) + 1;
    *(_QWORD *)(v0 + 192) = v5;
    v6 = *(_QWORD *)(v0 + 136);
    v7 = *(_QWORD *)(v0 + 144);
    sub_21C1E7170(*(_QWORD *)(v0 + 168)+ ((*(unsigned __int8 *)(v0 + 224) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 224))+ v4 * v5, v7, type metadata accessor for EntryPointIndex.PendingShellResource);
    sub_21C1E7170(v7, v6, type metadata accessor for EntryPointIndex.PendingShellResource);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    v9 = *(char **)(v0 + 136);
    if (EnumCaseMultiPayload == 1)
    {
      v11 = *(_QWORD *)(v0 + 80);
      v10 = *(_QWORD *)(v0 + 88);
      v13 = *(_QWORD *)(v0 + 64);
      v12 = *(_QWORD *)(v0 + 72);
      v14 = *(_QWORD *)v9;
      *(_QWORD *)(v0 + 208) = *(_QWORD *)v9;
      v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_25524A548);
      (*(void (**)(uint64_t, char *, uint64_t))(v11 + 32))(v10, &v9[*(int *)(v15 + 48)], v12);
      v19 = (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD))(**(int **)(v13 + 48) + *(_QWORD *)(v13 + 48));
      v16 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 216) = v16;
      *v16 = v0;
      v16[1] = sub_21C23C02C;
      return v19(v14, *(_QWORD *)(v0 + 88), *(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64));
    }
    else
    {
      v17 = *(_QWORD *)(v0 + 64);
      (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 104) + 32))(*(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 136), *(_QWORD *)(v0 + 96));
      v20 = (uint64_t (*)(_QWORD, _QWORD, _QWORD))(**(int **)(v17 + 40) + *(_QWORD *)(v17 + 40));
      v18 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 200) = v18;
      *v18 = v0;
      v18[1] = sub_21C23BDAC;
      return v20(*(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64));
    }
  }
}

uint64_t sub_21C23C02C()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_21C23C084()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int EnumCaseMultiPayload;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t (*v22)(uint64_t, _QWORD, _QWORD, _QWORD);
  uint64_t (*v23)(_QWORD, _QWORD, _QWORD);

  v2 = *(_QWORD *)(v0 + 80);
  v1 = *(_QWORD *)(v0 + 88);
  v3 = *(_QWORD *)(v0 + 72);

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  v4 = *(_QWORD *)(v0 + 176);
  v5 = *(_QWORD *)(v0 + 192) + 1;
  sub_21C1E71CC(*(_QWORD *)(v0 + 144), type metadata accessor for EntryPointIndex.PendingShellResource);
  if (v5 == v4)
  {
    swift_bridgeObjectRelease();
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 152) + 8))(*(_QWORD *)(v0 + 160), *(_QWORD *)(v0 + 56));
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v7 = *(_QWORD *)(v0 + 184);
    v8 = *(_QWORD *)(v0 + 192) + 1;
    *(_QWORD *)(v0 + 192) = v8;
    v9 = *(_QWORD *)(v0 + 136);
    v10 = *(_QWORD *)(v0 + 144);
    sub_21C1E7170(*(_QWORD *)(v0 + 168)+ ((*(unsigned __int8 *)(v0 + 224) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 224))+ v7 * v8, v10, type metadata accessor for EntryPointIndex.PendingShellResource);
    sub_21C1E7170(v10, v9, type metadata accessor for EntryPointIndex.PendingShellResource);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    v12 = *(char **)(v0 + 136);
    if (EnumCaseMultiPayload == 1)
    {
      v14 = *(_QWORD *)(v0 + 80);
      v13 = *(_QWORD *)(v0 + 88);
      v16 = *(_QWORD *)(v0 + 64);
      v15 = *(_QWORD *)(v0 + 72);
      v17 = *(_QWORD *)v12;
      *(_QWORD *)(v0 + 208) = *(_QWORD *)v12;
      v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_25524A548);
      (*(void (**)(uint64_t, char *, uint64_t))(v14 + 32))(v13, &v12[*(int *)(v18 + 48)], v15);
      v22 = (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD))(**(int **)(v16 + 48) + *(_QWORD *)(v16 + 48));
      v19 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 216) = v19;
      *v19 = v0;
      v19[1] = sub_21C23C02C;
      return v22(v17, *(_QWORD *)(v0 + 88), *(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64));
    }
    else
    {
      v20 = *(_QWORD *)(v0 + 64);
      (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 104) + 32))(*(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 136), *(_QWORD *)(v0 + 96));
      v23 = (uint64_t (*)(_QWORD, _QWORD, _QWORD))(**(int **)(v20 + 40) + *(_QWORD *)(v20 + 40));
      v21 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 200) = v21;
      *v21 = v0;
      v21[1] = sub_21C23BDAC;
      return v23(*(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64));
    }
  }
}

uint64_t type metadata accessor for EntryPointIndex.NoEntryPoint(uint64_t a1)
{
  return sub_21C1F2E98(a1, qword_25524D010);
}

unint64_t sub_21C23C2D0()
{
  unint64_t result;

  result = qword_25524CF70;
  if (!qword_25524CF70)
  {
    result = MEMORY[0x22077702C](&unk_21C24C718, &type metadata for LegacyEntryPointLoader.LoaderError);
    atomic_store(result, (unint64_t *)&qword_25524CF70);
  }
  return result;
}

uint64_t destroy for LegacyEntryPointLoader.LoaderError(uint64_t a1)
{
  unsigned int v1;

  v1 = *(unsigned __int8 *)(a1 + 32);
  if (v1 >= 3)
    v1 = *(_DWORD *)a1 + 3;
  if (v1 == 2 || v1 == 1)
    return __swift_destroy_boxed_opaque_existential_1(a1);
  else
    return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for LegacyEntryPointLoader.LoaderError(uint64_t a1, uint64_t a2)
{
  unsigned int v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;

  v3 = *(unsigned __int8 *)(a2 + 32);
  if (v3 >= 3)
    v3 = *(_DWORD *)a2 + 3;
  if (v3 == 2)
  {
    v6 = *(_QWORD *)(a2 + 24);
    *(_QWORD *)(a1 + 24) = v6;
    (**(void (***)(uint64_t))(v6 - 8))(a1);
    v5 = 2;
  }
  else
  {
    if (v3 != 1)
    {
      v7 = *(_QWORD *)(a2 + 8);
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *(_QWORD *)(a1 + 8) = v7;
      *(_BYTE *)(a1 + 32) = 0;
      swift_bridgeObjectRetain();
      return a1;
    }
    v4 = *(_QWORD *)(a2 + 24);
    *(_QWORD *)(a1 + 24) = v4;
    (**(void (***)(uint64_t))(v4 - 8))(a1);
    v5 = 1;
  }
  *(_BYTE *)(a1 + 32) = v5;
  return a1;
}

uint64_t assignWithCopy for LegacyEntryPointLoader.LoaderError(uint64_t a1, uint64_t a2)
{
  unsigned int v4;
  unsigned int v5;
  uint64_t v6;
  char v7;
  uint64_t v8;

  if (a1 != a2)
  {
    v4 = *(unsigned __int8 *)(a1 + 32);
    if (v4 >= 3)
      v4 = *(_DWORD *)a1 + 3;
    if (v4 == 2 || v4 == 1)
      __swift_destroy_boxed_opaque_existential_1(a1);
    else
      swift_bridgeObjectRelease();
    v5 = *(unsigned __int8 *)(a2 + 32);
    if (v5 >= 3)
      v5 = *(_DWORD *)a2 + 3;
    if (v5 == 2)
    {
      v8 = *(_QWORD *)(a2 + 24);
      *(_QWORD *)(a1 + 24) = v8;
      (**(void (***)(uint64_t, uint64_t))(v8 - 8))(a1, a2);
      v7 = 2;
    }
    else
    {
      if (v5 != 1)
      {
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
        *(_BYTE *)(a1 + 32) = 0;
        swift_bridgeObjectRetain();
        return a1;
      }
      v6 = *(_QWORD *)(a2 + 24);
      *(_QWORD *)(a1 + 24) = v6;
      (**(void (***)(uint64_t, uint64_t))(v6 - 8))(a1, a2);
      v7 = 1;
    }
    *(_BYTE *)(a1 + 32) = v7;
  }
  return a1;
}

uint64_t assignWithTake for LegacyEntryPointLoader.LoaderError(uint64_t a1, uint64_t a2)
{
  unsigned int v4;
  unsigned int v5;
  __int128 v6;

  if (a1 != a2)
  {
    v4 = *(unsigned __int8 *)(a1 + 32);
    if (v4 >= 3)
      v4 = *(_DWORD *)a1 + 3;
    if (v4 == 2 || v4 == 1)
      __swift_destroy_boxed_opaque_existential_1(a1);
    else
      swift_bridgeObjectRelease();
    v5 = *(unsigned __int8 *)(a2 + 32);
    if (v5 >= 3)
      v5 = *(_DWORD *)a2 + 3;
    if (v5 == 2 || v5 == 1)
    {
      v6 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v6;
    }
    else
    {
      LOBYTE(v5) = 0;
      *(_OWORD *)a1 = *(_OWORD *)a2;
    }
    *(_BYTE *)(a1 + 32) = v5;
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for LegacyEntryPointLoader.LoaderError(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0xFE && *(_BYTE *)(a1 + 33))
    return (*(_DWORD *)a1 + 254);
  v3 = *(unsigned __int8 *)(a1 + 32);
  if (v3 >= 3)
    return (v3 ^ 0xFF) + 1;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for LegacyEntryPointLoader.LoaderError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_BYTE *)(result + 32) = 0;
    *(_OWORD *)result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)result = a2 - 254;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 33) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 33) = 0;
    if (a2)
      *(_BYTE *)(result + 32) = -(char)a2;
  }
  return result;
}

uint64_t sub_21C23C608(uint64_t a1)
{
  uint64_t result;

  result = *(unsigned __int8 *)(a1 + 32);
  if (result >= 3)
    return (*(_DWORD *)a1 + 3);
  return result;
}

uint64_t sub_21C23C624(uint64_t result, unsigned int a2)
{
  if (a2 > 2)
  {
    *(_OWORD *)result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)result = a2 - 3;
    LOBYTE(a2) = 3;
  }
  *(_BYTE *)(result + 32) = a2;
  return result;
}

ValueMetadata *type metadata accessor for LegacyEntryPointLoader.LoaderError()
{
  return &type metadata for LegacyEntryPointLoader.LoaderError;
}

uint64_t *sub_21C23C658(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v13 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = *(int *)(a3 + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_21C2476E8();
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    *(uint64_t *)((char *)v4 + *(int *)(a3 + 24)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 24));
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_21C23C714(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 20);
  v5 = sub_21C2476E8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  return swift_bridgeObjectRelease();
}

_QWORD *sub_21C23C770(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = *(int *)(a3 + 20);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_21C2476E8();
  v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  *(_QWORD *)((char *)a1 + *(int *)(a3 + 24)) = *(_QWORD *)((char *)a2 + *(int *)(a3 + 24));
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *sub_21C23C800(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_21C2476E8();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  *(_QWORD *)((char *)a1 + *(int *)(a3 + 24)) = *(_QWORD *)((char *)a2 + *(int *)(a3 + 24));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *sub_21C23C8A0(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_21C2476E8();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  *(_QWORD *)((char *)a1 + *(int *)(a3 + 24)) = *(_QWORD *)((char *)a2 + *(int *)(a3 + 24));
  return a1;
}

_QWORD *sub_21C23C918(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = *(int *)(a3 + 20);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_21C2476E8();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  *(_QWORD *)((char *)a1 + *(int *)(a3 + 24)) = *(_QWORD *)((char *)a2 + *(int *)(a3 + 24));
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_21C23C9A0()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_21C23C9AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_21C2476E8();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 20), a2, v8);
  }
}

uint64_t sub_21C23CA28()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_21C23CA34(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = sub_21C2476E8();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 20), a2, a2, v7);
  }
  return result;
}

uint64_t sub_21C23CAA8()
{
  uint64_t result;
  unint64_t v1;

  result = sub_21C2476E8();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_21C23CB28()
{
  return sub_21C1FBD14(&qword_25524CF68, type metadata accessor for EntryPointIndex.NoEntryPoint, (uint64_t)&unk_21C24C758);
}

uint64_t sub_21C23CB54()
{
  return sub_21C1FBD14(&qword_25524D050, type metadata accessor for EntryPointIndex.NoEntryPoint, (uint64_t)&unk_21C24C530);
}

uint64_t sub_21C23CB80()
{
  return sub_21C1FBD14(&qword_25524D058, type metadata accessor for EntryPointIndex.NoEntryPoint, (uint64_t)&unk_21C24C508);
}

unint64_t sub_21C23CBB4()
{
  unint64_t result;

  result = qword_25524D060;
  if (!qword_25524D060)
  {
    result = MEMORY[0x22077702C](&unk_21C24C638, &type metadata for LegacyEntryPointLoader.LoaderError);
    atomic_store(result, (unint64_t *)&qword_25524D060);
  }
  return result;
}

unint64_t sub_21C23CBFC()
{
  unint64_t result;

  result = qword_25524D068;
  if (!qword_25524D068)
  {
    result = MEMORY[0x22077702C](&unk_21C24C610, &type metadata for LegacyEntryPointLoader.LoaderError);
    atomic_store(result, (unint64_t *)&qword_25524D068);
  }
  return result;
}

uint64_t sub_21C23CC40(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for LegacyEntryPointLoader.LoaderError(a2, a1);
  return a2;
}

_OWORD *sub_21C23CC74(_OWORD *a1, _OWORD *a2)
{
  __int128 v2;

  v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

unint64_t sub_21C23CC84()
{
  unint64_t result;

  result = qword_25524D070;
  if (!qword_25524D070)
  {
    result = MEMORY[0x22077702C](&unk_21C24C680, &type metadata for LegacyEntryPointLoader.LoaderError);
    atomic_store(result, (unint64_t *)&qword_25524D070);
  }
  return result;
}

ValueMetadata *type metadata accessor for RegistryPreflightEntryPoint()
{
  return &type metadata for RegistryPreflightEntryPoint;
}

uint64_t sub_21C23CCE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  v4 = sub_21C247418();
  v3[5] = v4;
  v3[6] = *(_QWORD *)(v4 - 8);
  v3[7] = swift_task_alloc();
  v5 = sub_21C246FB0();
  v3[8] = v5;
  v3[9] = *(_QWORD *)(v5 - 8);
  v3[10] = swift_task_alloc();
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_25524CA18);
  v3[11] = v6;
  v3[12] = *(_QWORD *)(v6 - 8);
  v3[13] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_21C23CD98()
{
  _QWORD *v0;
  _QWORD *v1;

  __swift_project_boxed_opaque_existential_1((_QWORD *)(v0[4] + 24), *(_QWORD *)(v0[4] + 48));
  sub_21C24725C();
  sub_21C247268();
  v1 = (_QWORD *)swift_task_alloc();
  v0[14] = v1;
  *v1 = v0;
  v1[1] = sub_21C23CE24;
  return sub_21C241E88(v0[13], v0[10], v0[7]);
}

uint64_t sub_21C23CE24()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = *(_QWORD *)(*(_QWORD *)v1 + 72);
  v2 = *(_QWORD *)(*(_QWORD *)v1 + 80);
  v5 = *(_QWORD *)(*(_QWORD *)v1 + 56);
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 64);
  v6 = *(_QWORD *)(*(_QWORD *)v1 + 40);
  v7 = *(_QWORD *)(*(_QWORD *)v1 + 48);
  *(_QWORD *)(*(_QWORD *)v1 + 120) = v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  return swift_task_switch();
}

uint64_t sub_21C23CECC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(v0 + 96);
  v1 = *(_QWORD *)(v0 + 104);
  v3 = *(_QWORD *)(v0 + 88);
  sub_21C247880();
  sub_21C247148();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21C23CF70()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21C23CFBC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  return sub_21C22CF74(a2);
}

uint64_t sub_21C23D00C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;

  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_21C1E664C;
  return sub_21C23CCE0(a1, a2, a3);
}

unint64_t sub_21C23D074()
{
  return 0xD00000000000001BLL;
}

unint64_t sub_21C23D090(uint64_t a1)
{
  unint64_t result;

  result = sub_21C23D0B4();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_21C23D0B4()
{
  unint64_t result;

  result = qword_25524D0E0;
  if (!qword_25524D0E0)
  {
    result = MEMORY[0x22077702C](&unk_21C24C7DC, &type metadata for RegistryPreflightEntryPoint);
    atomic_store(result, (unint64_t *)&qword_25524D0E0);
  }
  return result;
}

unint64_t sub_21C23D0F8(uint64_t a1)
{
  unint64_t result;

  result = sub_21C23D11C();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_21C23D11C()
{
  unint64_t result;

  result = qword_25524D0F8;
  if (!qword_25524D0F8)
  {
    result = MEMORY[0x22077702C](&unk_21C24C804, &type metadata for RegistryPreflightEntryPoint);
    atomic_store(result, &qword_25524D0F8);
  }
  return result;
}

uint64_t dispatch thunk of SelectableRegionProvider._forEachIdentifiedView(body:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t sub_21C23D168(uint64_t a1, unint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char v16;
  void (*v17)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t *v26;
  unint64_t v27;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v29;
  unint64_t v30;
  unint64_t *v31;
  uint64_t v32;
  char *v33;
  char v34[40];

  v3 = sub_21C2472D4();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v33 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_25524D108);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_25524D110);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_21C248180();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v31 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21C2480B4();
  sub_21C2487E0();
  sub_21C208E80((uint64_t)v34);
  v16 = swift_dynamicCast();
  v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56);
  if ((v16 & 1) != 0)
  {
    v31 = a2;
    v32 = v3;
    v17(v11, 0, 1, v12);
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v15, v11, v12);
    sub_21C2480CC();
    v18 = sub_21C2480F0();
    v19 = *(_QWORD *)(v18 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v8, 1, v18) == 1)
    {
      sub_21C1F03B0((uint64_t)v8, &qword_25524D108);
      v20 = 0;
      v21 = 0xF000000000000000;
    }
    else
    {
      v23 = sub_21C2480E4();
      v25 = v24;
      (*(void (**)(char *, uint64_t))(v19 + 8))(v8, v18);
      if (v25 >> 60 == 15)
        v20 = 0;
      else
        v20 = v23;
      if (v25 >> 60 == 15)
        v21 = 0xF000000000000000;
      else
        v21 = v25;
    }
    sub_21C248174();
    sub_21C2480C0();
    sub_21C23D4F8(v20, v21);
    sub_21C2472BC();
    v26 = v31;
    v27 = *v31;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *v26 = v27;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v27 = sub_21C23D7A4(0, *(_QWORD *)(v27 + 16) + 1, 1, v27, &qword_255249958, (uint64_t (*)(_QWORD))MEMORY[0x24BE777B8]);
      *v26 = v27;
    }
    v30 = *(_QWORD *)(v27 + 16);
    v29 = *(_QWORD *)(v27 + 24);
    if (v30 >= v29 >> 1)
    {
      v27 = sub_21C23D7A4(v29 > 1, v30 + 1, 1, v27, &qword_255249958, (uint64_t (*)(_QWORD))MEMORY[0x24BE777B8]);
      *v26 = v27;
    }
    *(_QWORD *)(v27 + 16) = v30 + 1;
    (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(v27+ ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))+ *(_QWORD *)(v4 + 72) * v30, v33, v32);
    sub_21C23D9E4(v20, v21);
    return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  }
  else
  {
    v17(v11, 1, 1, v12);
    return sub_21C1F03B0((uint64_t)v11, &qword_25524D110);
  }
}

uint64_t sub_21C23D4F8(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15)
    return sub_21C23D50C(a1, a2);
  return a1;
}

uint64_t sub_21C23D50C(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_retain();
  }
  return swift_retain();
}

_QWORD *sub_21C23D550(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  _QWORD *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_25524D150);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 40);
      v12 = v10 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[5 * v8 + 4])
          memmove(v12, a4 + 4, 40 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v12 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_21C23DB50(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_21C23D670(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_21C23D7A4(a1, a2, a3, a4, &qword_25524D128, type metadata accessor for EntryPointIndex.PendingShellResource);
}

_QWORD *sub_21C23D684(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_25524D120);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 17;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v13 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4])
          memmove(v13, a4 + 4, 16 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_21C23DC5C(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_21C23D790(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_21C23D7A4(a1, a2, a3, a4, &qword_25524D130, (uint64_t (*)(_QWORD))MEMORY[0x24BE77240]);
}

uint64_t sub_21C23D7A4(char a1, int64_t a2, char a3, unint64_t a4, uint64_t *a5, uint64_t (*a6)(_QWORD))
{
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  size_t v17;
  BOOL v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v9 = *(_QWORD *)(a4 + 24);
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = *(_QWORD *)(a4 + 16);
  if (v10 <= v11)
    v12 = *(_QWORD *)(a4 + 16);
  else
    v12 = v10;
  if (!v12)
  {
    v16 = (_QWORD *)MEMORY[0x24BEE4AF8];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(a5);
  v13 = *(_QWORD *)(a6(0) - 8);
  v14 = *(_QWORD *)(v13 + 72);
  v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v16 = (_QWORD *)swift_allocObject();
  v17 = _swift_stdlib_malloc_size(v16);
  if (!v14 || (v17 - v15 == 0x8000000000000000 ? (v18 = v14 == -1) : (v18 = 0), v18))
  {
LABEL_29:
    result = sub_21C2488A0();
    __break(1u);
    return result;
  }
  v16[2] = v11;
  v16[3] = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  v19 = *(_QWORD *)(a6(0) - 8);
  v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  v21 = (unint64_t)v16 + v20;
  if ((a1 & 1) != 0)
  {
    if ((unint64_t)v16 < a4 || v21 >= a4 + v20 + *(_QWORD *)(v19 + 72) * v11)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != (_QWORD *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_21C23DD44(0, v11, v21, a4, a6);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v16;
}

uint64_t sub_21C23D9B0(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_21C23D7A4(a1, a2, a3, a4, &qword_25524D138, (uint64_t (*)(_QWORD))MEMORY[0x24BE77C48]);
}

uint64_t sub_21C23D9C4(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_21C23D7A4(a1, a2, a3, a4, &qword_25524D148, (uint64_t (*)(_QWORD))MEMORY[0x24BE76530]);
}

_QWORD *sub_21C23D9D8(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_21C23DA48(a1, a2, a3, a4, &qword_25524D140);
}

uint64_t sub_21C23D9E4(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15)
    return sub_21C23D9F8(a1, a2);
  return a1;
}

uint64_t sub_21C23D9F8(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_release();
  }
  return swift_release();
}

_QWORD *sub_21C23DA3C(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_21C23DA48(a1, a2, a3, a4, &qword_25524D118);
}

_QWORD *sub_21C23DA48(_QWORD *result, int64_t a2, char a3, _QWORD *a4, uint64_t *a5)
{
  char v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  _QWORD *v14;

  v6 = (char)result;
  if ((a3 & 1) == 0)
  {
    v8 = a2;
    goto LABEL_8;
  }
  v7 = a4[3];
  v8 = v7 >> 1;
  if ((uint64_t)(v7 >> 1) >= a2)
    goto LABEL_8;
  if (v8 + 0x4000000000000000 >= 0)
  {
    v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v8 = a2;
LABEL_8:
    v9 = a4[2];
    if (v8 <= v9)
      v10 = a4[2];
    else
      v10 = v8;
    if (v10)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      v11 = (_QWORD *)swift_allocObject();
      v12 = _swift_stdlib_malloc_size(v11);
      v13 = v12 - 32;
      if (v12 < 32)
        v13 = v12 - 17;
      v11[2] = v9;
      v11[3] = 2 * (v13 >> 4);
      v14 = v11 + 4;
      if ((v6 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v11 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v14 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v11 != a4 || v14 >= &a4[2 * v9 + 4])
          memmove(v14, a4 + 4, 16 * v9);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_21C23DC5C(0, v9, (char *)v14, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v11;
  }
  __break(1u);
  return result;
}

uint64_t sub_21C23DB50(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 40 * a1 + 32;
    v6 = a3 + 40 * v4;
    if (v5 >= v6 || v5 + 40 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_25524D158);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_21C2488E8();
  __break(1u);
  return result;
}

char *sub_21C23DC5C(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4;
  char *v5;
  size_t v6;
  char *v7;
  char *result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = (char *)(a4 + 16 * a1 + 32);
    v6 = 16 * v4;
    v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  result = (char *)sub_21C2488E8();
  __break(1u);
  return result;
}

uint64_t sub_21C23DD44(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD))
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t result;

  v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    v9 = *(_QWORD *)(a5(0) - 8);
    v10 = *(unsigned __int8 *)(v9 + 80);
    v11 = *(_QWORD *)(v9 + 72);
    v12 = a4 + ((v10 + 32) & ~v10) + v11 * a1;
    v13 = v11 * v5;
    v14 = a3 + v13;
    v15 = v12 + v13;
    if (v12 >= v14 || v15 <= a3)
    {
      swift_arrayInitWithCopy();
      return v14;
    }
  }
  result = sub_21C2488E8();
  __break(1u);
  return result;
}

void sub_21C23DE5C()
{
  sub_21C23E614();
}

void static HostingParadigm.createHostingViewable(view:with:)()
{
  sub_21C23E614();
}

void sub_21C23DE7C()
{
  static HostingParadigm.rootViewController(for:with:)();
}

void static HostingParadigm.rootViewController(for:with:)()
{
  sub_21C2488AC();
  __break(1u);
}

void sub_21C23DED0()
{
  sub_21C2488AC();
  __break(1u);
}

void static HostingParadigm.configureHostingViewable(_:with:)()
{
  sub_21C2488AC();
  __break(1u);
}

uint64_t sub_21C23DF60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return static HostingParadigm.createHostingViewable<A>(rootView:)(a1, a4, a2, a5);
}

uint64_t static HostingParadigm.createHostingViewable<A>(rootView:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v28 = a2;
  v27 = a4;
  v6 = sub_21C247E74();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = (int *)type metadata accessor for PreviewDisplayContext.Configuration(0);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))((char *)&v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), a1, a3);
  v16 = sub_21C248330();
  (*(void (**)(char *, _QWORD, uint64_t))(v7 + 104))(v9, *MEMORY[0x24BDC6F98], v6);
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v13, v9, v6);
  v17 = &v13[v10[6]];
  v18 = type metadata accessor for RenderEffects(0);
  v19 = &v17[*(int *)(v18 + 20)];
  v20 = sub_21C2470E8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v19, 1, 1, v20);
  v21 = &v17[*(int *)(v18 + 24)];
  v22 = MEMORY[0x24BDEC0A0];
  v23 = MEMORY[0x24BEE4AF8];
  *((_QWORD *)v21 + 3) = MEMORY[0x24BDEC0B0];
  *((_QWORD *)v21 + 4) = v22;
  *(_QWORD *)v17 = v23;
  v13[v10[5]] = 1;
  v13[v10[7]] = 0;
  v13[v10[8]] = 0;
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  v24 = (*(uint64_t (**)(uint64_t, char *, uint64_t))(v27 + 48))(v16, v13, v28);
  swift_release();
  sub_21C23E7E4((uint64_t)v13);
  return v24;
}

uint64_t static HostingParadigm.updateHostingViewable(_:with:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  (*(void (**)(void))(a4 + 64))();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a4 + 56))(a1, a2, a3, a4);
}

void UIHostingController.size.getter()
{
  void *v0;
  id v1;
  void *v2;

  v1 = objc_msgSend(v0, sel_view);
  if (v1)
  {
    v2 = v1;
    objc_msgSend(v1, sel_frame);

  }
  else
  {
    __break(1u);
  }
}

void UIHostingController.size.setter()
{
  void *v0;
  id v1;
  id v2;

  v1 = objc_msgSend(v0, sel_view);
  if (v1)
  {
    v2 = v1;
    objc_msgSend(v1, sel_frame);
    objc_msgSend(v2, sel_setFrame_);

  }
  else
  {
    __break(1u);
  }
}

void (*UIHostingController.size.modify(_QWORD *a1))()
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  a1[2] = v1;
  UIHostingController.size.getter();
  *a1 = v3;
  a1[1] = v4;
  return sub_21C23E2F4;
}

void sub_21C23E2F4()
{
  UIHostingController.size.setter();
}

Swift::Void __swiftcall UIHostingController.forceLayout()()
{
  void *v0;
  id v1;
  void *v2;
  id v3;
  id v4;

  v1 = objc_msgSend(v0, sel_view);
  if (v1)
  {
    v2 = v1;
    objc_msgSend(v1, sel_setNeedsLayout);

    v3 = objc_msgSend(v0, sel_view);
    if (v3)
    {
      v4 = v3;
      objc_msgSend(v3, sel_layoutIfNeeded);

      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

void (*sub_21C23E3B8(_QWORD *a1))(_QWORD *a1)
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = UIHostingController.size.modify(v2);
  return sub_21C22554C;
}

uint64_t static IOSHostingParadigm.createHostingViewable<A>(rootView:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  id v3;
  _QWORD v5[2];

  MEMORY[0x24BDAC7A8](a1);
  (*(void (**)(char *))(v2 + 16))((char *)v5 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5[1] = sub_21C248330();
  v3 = objc_allocWithZone((Class)__swift_instantiateConcreteTypeFromMangledName(&qword_255249998));
  return sub_21C248078();
}

id static IOSHostingParadigm.updateHostingViewable(_:with:)(void *a1, uint64_t a2)
{
  id result;
  void *v3;
  id v4;

  if ((*(_BYTE *)(a2 + *(int *)(type metadata accessor for PreviewDisplayContext.Configuration(0) + 32)) & 1) == 0)
    sub_21C247F04();
  sub_21C248054();
  result = objc_msgSend(a1, sel_view);
  if (result)
  {
    v3 = result;
    v4 = objc_msgSend((id)objc_opt_self(), sel_systemBackgroundColor);
    objc_msgSend(v3, sel_setBackgroundColor_, v4);

    return a1;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id static IOSHostingParadigm.debugOverlay(for:)(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id result;
  id v6;
  uint64_t v7;

  v2 = sub_21C24773C();
  MEMORY[0x24BDAC7A8](v2);
  (*(void (**)(char *, _QWORD))(v4 + 104))((char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), *MEMORY[0x24BE78460]);
  result = objc_msgSend(a1, sel_view);
  if (result)
  {
    v6 = objc_allocWithZone((Class)sub_21C24776C());
    return (id)sub_21C247754();
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_21C23E614()
{
  sub_21C2488AC();
  __break(1u);
}

id sub_21C23E65C@<X0>(id a1@<X0>, id *a2@<X8>)
{
  *a2 = a1;
  return a1;
}

id sub_21C23E668@<X0>(void *a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  id result;
  void *v5;
  id v6;

  if ((*(_BYTE *)(a2 + *(int *)(type metadata accessor for PreviewDisplayContext.Configuration(0) + 32)) & 1) == 0)
    sub_21C247F04();
  sub_21C248054();
  result = objc_msgSend(a1, sel_view);
  if (result)
  {
    v5 = result;
    v6 = objc_msgSend((id)objc_opt_self(), sel_systemBackgroundColor);
    objc_msgSend(v5, sel_setBackgroundColor_, v6);

    *a3 = a1;
    return a1;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_21C23E730(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id result;
  id v6;
  uint64_t v7;

  v2 = sub_21C24773C();
  MEMORY[0x24BDAC7A8](v2);
  (*(void (**)(char *, _QWORD))(v4 + 104))((char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), *MEMORY[0x24BE78460]);
  result = objc_msgSend(a1, sel_view);
  if (result)
  {
    v6 = objc_allocWithZone((Class)sub_21C24776C());
    return (id)sub_21C247754();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_21C23E7E4(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for PreviewDisplayContext.Configuration(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_21C23E820()
{
  return MEMORY[0x24BDEC0A0];
}

_UNKNOWN **sub_21C23E82C()
{
  return &protocol witness table for UIHostingController<A>;
}

void sub_21C23E838(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  UIHostingController.size.getter();
  *a1 = v2;
  a1[1] = v3;
}

void sub_21C23E860()
{
  UIHostingController.size.setter();
}

uint64_t sub_21C23E884()
{
  return 16;
}

__n128 sub_21C23E890(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t dispatch thunk of static HostingParadigm.createHostingViewable(view:with:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 48))();
}

uint64_t dispatch thunk of static HostingParadigm.rootViewController(for:with:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 56))();
}

uint64_t dispatch thunk of static HostingParadigm.configureHostingViewable(_:with:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 64))();
}

uint64_t dispatch thunk of static HostingParadigm.createHostingViewable<A>(rootView:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 72))();
}

uint64_t dispatch thunk of static HostingParadigm.updateHostingViewable(_:with:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 80))();
}

uint64_t dispatch thunk of static HostingParadigm.hostModifier(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 88))();
}

uint64_t dispatch thunk of static HostingParadigm.debugOverlay(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 96))();
}

uint64_t dispatch thunk of _HostingViewable._render(seconds:)(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of _HostingViewable._forEachIdentifiedView(body:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

uint64_t dispatch thunk of _HostingViewable.sizeThatFits(in:)(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of _HostingViewable.size.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of _HostingViewable.size.setter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of _HostingViewable.size.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 48))();
}

uint64_t dispatch thunk of _HostingViewable.forceLayout()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

ValueMetadata *type metadata accessor for IOSHostingParadigm()
{
  return &type metadata for IOSHostingParadigm;
}

ValueMetadata *type metadata accessor for PreviewProviderEntryPoint()
{
  return &type metadata for PreviewProviderEntryPoint;
}

uint64_t sub_21C23E92C(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v2[2] = a1;
  v2[3] = a2;
  v3 = sub_21C2483A8();
  v2[4] = v3;
  v2[5] = *(_QWORD *)(v3 - 8);
  v2[6] = swift_task_alloc();
  v4 = sub_21C247388();
  v2[7] = v4;
  v2[8] = *(_QWORD *)(v4 - 8);
  v2[9] = swift_task_alloc();
  sub_21C24863C();
  v2[10] = sub_21C248630();
  sub_21C2485E8();
  return swift_task_switch();
}

uint64_t sub_21C23E9E8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t (*v23)(void);
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;

  swift_release();
  v1 = sub_21C247244();
  v3 = v2;
  v4 = sub_21C248834();
  if (!v4)
  {
    sub_21C20AC7C();
    swift_allocError();
    *(_QWORD *)v22 = v1;
    *(_QWORD *)(v22 + 8) = v3;
    *(_QWORD *)(v22 + 16) = 0;
    *(_QWORD *)(v22 + 24) = 0;
LABEL_20:
    *(_BYTE *)(v22 + 32) = 1;
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    v23 = (uint64_t (*)(void))v0[1];
    return v23();
  }
  v5 = v4;
  v6 = swift_conformsToProtocol2();
  if (v6)
    v7 = v6;
  else
    v7 = 0;
  if (!v6)
    v5 = 0;
  if (!v5)
  {
    sub_21C20AC7C();
    swift_allocError();
    *(_QWORD *)v22 = v1;
    *(_QWORD *)(v22 + 8) = v3;
    *(_OWORD *)(v22 + 16) = xmmword_21C24A4B0;
    goto LABEL_20;
  }
  v8 = *(_QWORD *)(sub_21C247F28() + 16);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  v9 = sub_21C23EE80(0, v8, v1, v3, v5, v7);
  swift_bridgeObjectRelease_n();
  v10 = *(_QWORD *)(v9 + 16);
  if (!v10)
  {
LABEL_22:
    swift_bridgeObjectRelease();
    sub_21C247208();
    swift_task_dealloc();
    swift_task_dealloc();
    v23 = (uint64_t (*)(void))v0[1];
    return v23();
  }
  v24 = v0[5];
  v25 = v0[8];
  v27 = MEMORY[0x24BEE4AF8];
  sub_21C1E6EC4(0, v10, 0);
  v11 = v9 + 56;
  v26 = v0;
  while (1)
  {
    v12 = *(_QWORD *)(v11 - 8);
    swift_bridgeObjectRetain_n();
    swift_retain_n();
    result = sub_21C247E2C();
    if ((v12 & 0x8000000000000000) != 0)
      break;
    if (v12 >= *(_QWORD *)(result + 16))
      goto LABEL_24;
    v14 = v0[9];
    v15 = v0[6];
    v16 = v0[4];
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v24 + 16))(v15, result+ ((*(unsigned __int8 *)(v24 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80))+ *(_QWORD *)(v24 + 72) * v12, v16);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    sub_21C244580(v14);
    (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v15, v16);
    swift_bridgeObjectRelease_n();
    swift_release_n();
    v17 = v27;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_21C1E6EC4(0, *(_QWORD *)(v27 + 16) + 1, 1);
      v17 = v27;
    }
    v19 = *(_QWORD *)(v17 + 16);
    v18 = *(_QWORD *)(v17 + 24);
    v0 = v26;
    if (v19 >= v18 >> 1)
    {
      sub_21C1E6EC4(v18 > 1, v19 + 1, 1);
      v17 = v27;
    }
    v20 = v26[9];
    v21 = v26[7];
    *(_QWORD *)(v17 + 16) = v19 + 1;
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v25 + 32))(v17+ ((*(unsigned __int8 *)(v25 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80))+ *(_QWORD *)(v25 + 72) * v19, v20, v21);
    v27 = v17;
    v11 += 48;
    if (!--v10)
      goto LABEL_22;
  }
  __break(1u);
LABEL_24:
  __break(1u);
  return result;
}

uint64_t sub_21C23ED3C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_21C1E664C;
  return sub_21C23E92C(a1, a2);
}

unint64_t sub_21C23ED94()
{
  return 0xD000000000000019;
}

unint64_t sub_21C23EDB0(uint64_t a1)
{
  unint64_t result;

  result = sub_21C23EDD4();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_21C23EDD4()
{
  unint64_t result;

  result = qword_25524D228;
  if (!qword_25524D228)
  {
    result = MEMORY[0x22077702C](&unk_21C24C9AC, &type metadata for PreviewProviderEntryPoint);
    atomic_store(result, (unint64_t *)&qword_25524D228);
  }
  return result;
}

unint64_t sub_21C23EE18(uint64_t a1)
{
  unint64_t result;

  result = sub_21C23EE3C();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_21C23EE3C()
{
  unint64_t result;

  result = qword_25524D240;
  if (!qword_25524D240)
  {
    result = MEMORY[0x22077702C](&unk_21C24C9D4, &type metadata for PreviewProviderEntryPoint);
    atomic_store(result, &qword_25524D240);
  }
  return result;
}

uint64_t sub_21C23EE80(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v27;

  v25 = result;
  v6 = a2 - result;
  if (__OFSUB__(a2, result))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v7 = MEMORY[0x24BEE4AF8];
  if (!v6)
    return v7;
  v27 = MEMORY[0x24BEE4AF8];
  result = sub_21C1E6EA8(0, v6 & ~(v6 >> 63), 0);
  if ((v6 & 0x8000000000000000) == 0)
  {
    v11 = v25;
    v7 = v27;
    if (a2 <= v25)
      v12 = v25;
    else
      v12 = a2;
    v23 = v12;
    while (a2 != v11)
    {
      swift_bridgeObjectRetain_n();
      v13 = *(_QWORD *)(sub_21C247F28() + 16);
      swift_bridgeObjectRelease();
      if (v11 >= v13)
      {
        v20 = v11;
        v21 = v13;
LABEL_19:
        sub_21C20AC7C();
        swift_allocError();
        *(_QWORD *)v22 = a3;
        *(_QWORD *)(v22 + 8) = a4;
        *(_QWORD *)(v22 + 16) = v20;
        *(_QWORD *)(v22 + 24) = v21;
        *(_BYTE *)(v22 + 32) = v11 < v13;
        swift_willThrow();
        swift_release();
        swift_bridgeObjectRelease();
        return v7;
      }
      sub_21C247E38();
      v14 = sub_21C247DFC();
      if (!v14)
      {
        v21 = 0;
        v20 = 2;
        goto LABEL_19;
      }
      v15 = v14;
      v16 = a4;
      result = swift_bridgeObjectRelease();
      v18 = *(_QWORD *)(v27 + 16);
      v17 = *(_QWORD *)(v27 + 24);
      if (v18 >= v17 >> 1)
      {
        result = sub_21C1E6EA8(v17 > 1, v18 + 1, 1);
        v16 = a4;
      }
      *(_QWORD *)(v27 + 16) = v18 + 1;
      v19 = (_QWORD *)(v27 + 48 * v18);
      v19[4] = a3;
      v19[5] = v16;
      v19[6] = v11;
      v19[7] = v15;
      v19[8] = a5;
      v19[9] = a6;
      if (a2 < v25)
        goto LABEL_22;
      if (v23 == v11)
        goto LABEL_23;
      if (a2 == ++v11)
        return v7;
    }
    __break(1u);
LABEL_22:
    __break(1u);
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
LABEL_25:
  __break(1u);
  return result;
}

BOOL sub_21C23F080(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(a2 + 24);
  v3 = *(_QWORD *)(a1 + 24);
  if (v2 == v3)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    sub_21C247D30();
    swift_release();
    swift_release();
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    sub_21C247D3C();
    sub_21C247E14();
    sub_21C247E20();
  }
  return v2 == v3;
}

uint64_t sub_21C23F16C()
{
  uint64_t v1;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_21C247D30();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_21C23F1DC@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_21C247D30();
  swift_release();
  result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_21C23F258()
{
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  return sub_21C247D3C();
}

uint64_t sub_21C23F2C8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t result;
  uint64_t *v18;
  uint64_t v19;
  uint64_t *v20;

  v20 = a1;
  v1 = sub_21C247FA0();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = MEMORY[0x24BDAC7A8](v1);
  v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)&v19 - v6;
  v8 = type metadata accessor for EnvironmentWrapper(0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for PreviewProviderHostProvider.Host.HostView(0);
  swift_retain();
  sub_21C240828(qword_25524D358, (uint64_t (*)(char *, uint64_t))sub_21C240B54, 0xD000000000000039, 0x800000021C24F740, (uint64_t)v10);
  (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v7, v10, v1);
  type metadata accessor for PreviewProviderHostProvider.Host(0);
  sub_21C1FBD14(&qword_25524D508, type metadata accessor for PreviewProviderHostProvider.Host, (uint64_t)&unk_21C24CA9C);
  swift_retain();
  v11 = sub_21C247EB0();
  v13 = v12;
  sub_21C247E38();
  sub_21C1FBD14(&qword_25524D510, (uint64_t (*)(uint64_t))MEMORY[0x24BDEBF40], MEMORY[0x24BDEBF30]);
  swift_retain();
  swift_retain();
  v14 = sub_21C247EB0();
  v16 = v15;
  (*(void (**)(char *, char *, uint64_t))(v2 + 16))(v5, v7, v1);
  swift_retain();
  sub_21C247E08();
  swift_release();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v7, v1);
  swift_release();
  result = swift_release();
  v18 = v20;
  *v20 = v11;
  v18[1] = v13;
  v18[2] = v14;
  v18[3] = v16;
  return result;
}

uint64_t sub_21C23F4E4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_21C247FA0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t sub_21C23F520@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t result;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, uint64_t);
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  void (*v25)(char *, unint64_t, uint64_t);
  char *v26;
  uint64_t *v27;
  char *v28;
  char *v29;
  unint64_t v30;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25524C4C0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_25524C468);
  MEMORY[0x24BDAC7A8](v5);
  v29 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_21C2483A8();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v28 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v25 - v11;
  swift_retain();
  v13 = sub_21C247E2C();
  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_21C247D30();
  swift_release();
  swift_release();
  result = swift_release();
  if ((v30 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (v30 >= *(_QWORD *)(v13 + 16))
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  v26 = v4;
  v27 = a1;
  v15 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v16 = *(_QWORD *)(v8 + 72);
  v25 = *(void (**)(char *, unint64_t, uint64_t))(v8 + 16);
  v25(v12, v13 + v15 + v16 * v30, v7);
  swift_bridgeObjectRelease();
  v17 = sub_21C248390();
  v18 = *(void (**)(char *, uint64_t))(v8 + 8);
  v18(v12, v7);
  swift_retain();
  v19 = sub_21C247E2C();
  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_21C247D30();
  swift_release();
  swift_release();
  result = swift_release();
  if ((v30 & 0x8000000000000000) != 0)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  if (v30 < *(_QWORD *)(v19 + 16))
  {
    v20 = v28;
    v25(v28, v19 + v15 + v30 * v16, v7);
    swift_bridgeObjectRelease();
    v21 = (uint64_t)v29;
    sub_21C24833C();
    v18(v20, v7);
    v22 = (uint64_t)v26;
    sub_21C1F03EC(v21, (uint64_t)v26, &qword_25524C468);
    v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_25524D520);
    v24 = v27;
    sub_21C1F03EC(v22, (uint64_t)v27 + *(int *)(v23 + 36), &qword_25524C4C0);
    *v24 = v17;
    swift_retain();
    sub_21C1F03B0(v22, &qword_25524C4C0);
    sub_21C1F03B0(v21, &qword_25524C468);
    return swift_release();
  }
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_21C23F850@<X0>(uint64_t *a1@<X8>)
{
  return sub_21C23F520(a1);
}

uint64_t sub_21C23F85C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_release();
  v1 = v0 + OBJC_IVAR____TtCV17PreviewsInjection27PreviewProviderHostProvider4Host__previewIndex;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25524A138);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance();
}

uint64_t sub_21C23F8B8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;

  v3 = *v1;
  *a1 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(qword_25524D358);
  swift_storeEnumTagMultiPayload();
  *(uint64_t *)((char *)a1 + *(int *)(type metadata accessor for PreviewProviderHostProvider.Host.HostView(0) + 20)) = v3;
  return swift_retain();
}

BOOL sub_21C23F918(uint64_t *a1)
{
  uint64_t *v1;

  return sub_21C23F080(*a1, *v1);
}

uint64_t sub_21C23F924@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;

  *a1 = *v1;
  return swift_retain();
}

uint64_t sub_21C23F930@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *MEMORY[0x24BE78140];
  v3 = sub_21C246E6C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
}

uint64_t sub_21C23F974()
{
  return sub_21C240A4C();
}

uint64_t sub_21C23F97C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  sub_21C247EA4();
  swift_allocObject();
  result = sub_21C247E98();
  *a1 = result;
  return result;
}

uint64_t AppPreviewHost.content.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  v2 = sub_21C247D90();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = sub_21C247E8C();
  if (*(_QWORD *)(result + 16))
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v5, result + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80)), v2);
    swift_bridgeObjectRelease();
    v7 = sub_21C247D84();
    result = (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    *a1 = v7;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_21C23FA7C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_21C23FA8C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  v2 = sub_21C247D90();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = sub_21C247E8C();
  if (*(_QWORD *)(result + 16))
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v5, result + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80)), v2);
    swift_bridgeObjectRelease();
    v7 = sub_21C247D84();
    result = (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    *a1 = v7;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_21C23FB54()
{
  return type metadata accessor for PreviewProviderHostProvider.Host(0);
}

uint64_t type metadata accessor for PreviewProviderHostProvider.Host(uint64_t a1)
{
  return sub_21C1F2E98(a1, qword_25524D2A0);
}

void sub_21C23FB70()
{
  unint64_t v0;

  sub_21C1F2E14();
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

uint64_t sub_21C23FBF4()
{
  return MEMORY[0x24BDF4760];
}

uint64_t sub_21C23FC00()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_21C23FC10@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;

  v4 = sub_21C247FA0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
}

uint64_t type metadata accessor for PreviewProviderHostProvider.Host.HostView(uint64_t a1)
{
  return sub_21C1F2E98(a1, (uint64_t *)&unk_25524D450);
}

uint64_t sub_21C23FC60(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_21C247FA0();
  return (**(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8))(a1, a2, v4);
}

uint64_t sub_21C23FC9C(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_21C247FA0();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

uint64_t sub_21C23FCD0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_21C247FA0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t sub_21C23FD14(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_21C247FA0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t sub_21C23FD58(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_21C247FA0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t sub_21C23FD9C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_21C247FA0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t sub_21C23FDE0()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_21C23FDEC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_21C247FA0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t sub_21C23FE28()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_21C23FE34(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_21C247FA0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t type metadata accessor for EnvironmentWrapper(uint64_t a1)
{
  return sub_21C1F2E98(a1, qword_25524D3B8);
}

uint64_t sub_21C23FE88()
{
  uint64_t result;
  unint64_t v1;

  result = sub_21C247FA0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for SwiftUIAppHostProvider()
{
  return &type metadata for SwiftUIAppHostProvider;
}

uint64_t *sub_21C23FF00(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(qword_25524D358);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v7 = sub_21C247FA0();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
  }
  swift_retain();
  return a1;
}

uint64_t sub_21C23FFD8(uint64_t a1)
{
  uint64_t v2;

  __swift_instantiateConcreteTypeFromMangledName(qword_25524D358);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v2 = sub_21C247FA0();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  }
  else
  {
    swift_release();
  }
  return swift_release();
}

_QWORD *sub_21C240048(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;

  __swift_instantiateConcreteTypeFromMangledName(qword_25524D358);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v6 = sub_21C247FA0();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  *(_QWORD *)((char *)a1 + *(int *)(a3 + 20)) = *(_QWORD *)((char *)a2 + *(int *)(a3 + 20));
  swift_retain();
  return a1;
}

_QWORD *sub_21C2400F8(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;

  if (a1 != a2)
  {
    sub_21C1F03B0((uint64_t)a1, qword_25524D358);
    __swift_instantiateConcreteTypeFromMangledName(qword_25524D358);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v6 = sub_21C247FA0();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  *(_QWORD *)((char *)a1 + *(int *)(a3 + 20)) = *(_QWORD *)((char *)a2 + *(int *)(a3 + 20));
  swift_retain();
  swift_release();
  return a1;
}

char *sub_21C2401CC(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = __swift_instantiateConcreteTypeFromMangledName(qword_25524D358);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v7 = sub_21C247FA0();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  }
  *(_QWORD *)&a1[*(int *)(a3 + 20)] = *(_QWORD *)&a2[*(int *)(a3 + 20)];
  return a1;
}

char *sub_21C240274(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  if (a1 != a2)
  {
    sub_21C1F03B0((uint64_t)a1, qword_25524D358);
    v6 = __swift_instantiateConcreteTypeFromMangledName(qword_25524D358);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v7 = sub_21C247FA0();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
    }
  }
  *(_QWORD *)&a1[*(int *)(a3 + 20)] = *(_QWORD *)&a2[*(int *)(a3 + 20)];
  swift_release();
  return a1;
}

uint64_t sub_21C24033C()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_21C240348(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_25524D3F0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_21C2403C8()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_21C2403D4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = __swift_instantiateConcreteTypeFromMangledName(&qword_25524D3F0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  return result;
}

void sub_21C240450()
{
  unint64_t v0;

  sub_21C2404C4();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

void sub_21C2404C4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25524D460)
  {
    type metadata accessor for EnvironmentWrapper(255);
    v0 = sub_21C247DC0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25524D460);
  }
}

ValueMetadata *type metadata accessor for PreviewProviderHostProvider()
{
  return &type metadata for PreviewProviderHostProvider;
}

uint64_t sub_21C240528()
{
  return sub_21C1FBD14(&qword_25524D490, type metadata accessor for PreviewProviderHostProvider.Host.HostView, (uint64_t)&unk_21C24CB60);
}

uint64_t sub_21C240554()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_21C240564()
{
  return sub_21C1FBD14(qword_25524D498, type metadata accessor for PreviewProviderHostProvider.Host, (uint64_t)&unk_21C24CAD4);
}

uint64_t sub_21C240590()
{
  return sub_21C1FBD14(qword_25524D4D0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEC5F0], (uint64_t)&protocol conformance descriptor for AppPreviewHost);
}

uint64_t sub_21C2405BC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  os_log_type_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD v19[3];
  uint64_t v20;

  v2 = v1;
  v4 = sub_21C247FA0();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_25524AD88);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21C1F03EC(v2, (uint64_t)v10, &qword_25524AD88);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v11 = sub_21C247DB4();
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(a1, v10, v11);
  }
  else
  {
    v13 = sub_21C24872C();
    v14 = sub_21C2481A4();
    v15 = v13;
    if (os_log_type_enabled(v14, v13))
    {
      v16 = (uint8_t *)swift_slowAlloc();
      v17 = swift_slowAlloc();
      v19[1] = a1;
      v18 = v17;
      v20 = v17;
      *(_DWORD *)v16 = 136315138;
      v19[2] = sub_21C203A90(0x686353726F6C6F43, 0xEB00000000656D65, &v20);
      sub_21C2487A4();
      _os_log_impl(&dword_21C1E3000, v14, v15, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v16, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2207770EC](v18, -1, -1);
      MEMORY[0x2207770EC](v16, -1, -1);
    }

    sub_21C247F94();
    swift_getAtKeyPath();
    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
}

uint64_t sub_21C2407FC@<X0>(uint64_t a1@<X8>)
{
  return sub_21C240828(&qword_25524AD90, (uint64_t (*)(char *, uint64_t))sub_21C240D9C, 0xD000000000000020, 0x800000021C24F780, a1);
}

uint64_t sub_21C240828@<X0>(uint64_t *a1@<X0>, uint64_t (*a2)(char *, uint64_t)@<X1>, uint64_t a3@<X2>, unint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  os_log_type_t v19;
  NSObject *v20;
  uint64_t v21;
  uint8_t *v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v27 = a3;
  v9 = v5;
  v11 = sub_21C247FA0();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(a1);
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v24 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21C1F03EC(v9, (uint64_t)v17, a1);
  if (swift_getEnumCaseMultiPayload() == 1)
    return a2(v17, a5);
  v19 = sub_21C24872C();
  v20 = sub_21C2481A4();
  if (os_log_type_enabled(v20, v19))
  {
    v25 = a4;
    v21 = swift_slowAlloc();
    v26 = a5;
    v22 = (uint8_t *)v21;
    v23 = swift_slowAlloc();
    v29 = v23;
    *(_DWORD *)v22 = 136315138;
    v28 = sub_21C203A90(v27, v25, &v29);
    sub_21C2487A4();
    _os_log_impl(&dword_21C1E3000, v20, v19, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v22, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2207770EC](v23, -1, -1);
    MEMORY[0x2207770EC](v22, -1, -1);
  }

  sub_21C247F94();
  swift_getAtKeyPath();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
}

uint64_t sub_21C240A4C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v8;

  v0 = sub_21C247CC4();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21C247CA0();
  v4 = sub_21C247CB8();
  v5 = sub_21C248714();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v6 = 0;
    _os_log_impl(&dword_21C1E3000, v4, v5, "updating AppPreviewHost", v6, 2u);
    MEMORY[0x2207770EC](v6, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  sub_21C247E80();
  return 1;
}

uint64_t sub_21C240B54(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for EnvironmentWrapper(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t destroy for PreviewProviderHostProvider.Host.InnerHostView()
{
  swift_release();
  return swift_release();
}

_QWORD *initializeWithCopy for PreviewProviderHostProvider.Host.InnerHostView(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_retain();
  swift_retain();
  return a1;
}

_QWORD *assignWithCopy for PreviewProviderHostProvider.Host.InnerHostView(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_retain();
  swift_release();
  return a1;
}

_QWORD *assignWithTake for PreviewProviderHostProvider.Host.InnerHostView(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_release();
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for PreviewProviderHostProvider.Host.InnerHostView(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 32))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PreviewProviderHostProvider.Host.InnerHostView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 32) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for PreviewProviderHostProvider.Host.InnerHostView()
{
  return &type metadata for PreviewProviderHostProvider.Host.InnerHostView;
}

unint64_t sub_21C240D48()
{
  unint64_t result;

  result = qword_25524D518;
  if (!qword_25524D518)
  {
    result = MEMORY[0x22077702C](&unk_21C24CC40, &type metadata for PreviewProviderHostProvider.Host.InnerHostView);
    atomic_store(result, (unint64_t *)&qword_25524D518);
  }
  return result;
}

uint64_t sub_21C240D8C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_21C240D9C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25524ADA0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_21C240DE8()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;
  _QWORD v3[2];

  result = qword_25524D528[0];
  if (!qword_25524D528[0])
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25524D520);
    v2 = sub_21C240E54();
    v3[0] = MEMORY[0x24BDF4760];
    v3[1] = v2;
    result = MEMORY[0x22077702C](MEMORY[0x24BDED308], v1, v3);
    atomic_store(result, qword_25524D528);
  }
  return result;
}

unint64_t sub_21C240E54()
{
  unint64_t result;
  uint64_t v1;

  result = qword_25524C4B8;
  if (!qword_25524C4B8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25524C4C0);
    result = MEMORY[0x22077702C](MEMORY[0x24BDF0B90], v1);
    atomic_store(result, (unint64_t *)&qword_25524C4B8);
  }
  return result;
}

uint64_t sub_21C240EA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v9;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);

  v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(a4 + 8) + *(_QWORD *)(a4 + 8));
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v9;
  *v9 = v4;
  v9[1] = sub_21C1E664C;
  return v11(a1, a2, a3, a4);
}

uint64_t sub_21C240F28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v11;
  uint64_t (*v13)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v13 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(a5 + 16) + *(_QWORD *)(a5 + 16));
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 16) = v11;
  *v11 = v5;
  v11[1] = sub_21C1E664C;
  return v13(a1, a2, a3, a4, a5);
}

uint64_t sub_21C240FBC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t, uint64_t);

  v7 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(a2 + 24) + *(_QWORD *)(a2 + 24));
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_21C1EBB98;
  return v7(a1, a2);
}

uint64_t sub_21C241028(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4[7] = a3;
  v4[8] = v3;
  v4[5] = a1;
  v4[6] = a2;
  v6 = sub_21C24758C();
  v4[9] = v6;
  v4[10] = *(_QWORD *)(v6 - 8);
  v4[11] = swift_task_alloc();
  v4[12] = swift_task_alloc();
  v7 = *(_QWORD *)(a3 + 16);
  v4[13] = v7;
  v8 = sub_21C248798();
  v4[14] = v8;
  v4[15] = *(_QWORD *)(v8 - 8);
  v4[16] = swift_task_alloc();
  v4[17] = *(_QWORD *)(v7 - 8);
  v4[18] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_21C2410F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t, uint64_t);
  unsigned int *v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  id v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v1 = **(_QWORD **)(v0 + 64);
  if (!v1)
  {
    v17 = *(_QWORD *)(v0 + 56);
    v18 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 152) = v18;
    v19 = *(_QWORD *)(v17 + 24);
    *v18 = v0;
    v18[1] = sub_21C241510;
    return sub_21C243CA0(*(_QWORD *)(v0 + 104), v19);
  }
  v2 = *(_QWORD *)(v0 + 96);
  v3 = *(_QWORD *)(v0 + 72);
  v4 = *(_QWORD *)(v0 + 80);
  swift_bridgeObjectRetain();
  sub_21C247400();
  v5 = sub_21C248450();
  v6 = sub_21C1FBD14(&qword_25524A278, (uint64_t (*)(uint64_t))MEMORY[0x24BE77EF8], MEMORY[0x24BE77F08]);
  MEMORY[0x2207765AC](v2, v1, v3, v5, v6);
  swift_bridgeObjectRelease();
  v7 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
  v7(v2, v3);
  v8 = *(_QWORD *)(v0 + 16);
  v9 = *(_QWORD *)(v0 + 128);
  v10 = *(_QWORD *)(v0 + 136);
  v11 = *(_QWORD *)(v0 + 104);
  if (!v8)
  {
    (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(v10 + 56))(*(_QWORD *)(v0 + 128), 1, 1, *(_QWORD *)(v0 + 104));
    goto LABEL_7;
  }
  *(_QWORD *)(v0 + 24) = sub_21C24740C();
  MEMORY[0x2207765AC](v0 + 24, v8, MEMORY[0x24BEE1768], v11, MEMORY[0x24BEE1778]);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v9, 1, v11) == 1)
  {
LABEL_7:
    v21 = *(_QWORD *)(v0 + 88);
    v22 = *(_QWORD *)(v0 + 72);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 120) + 8))(*(_QWORD *)(v0 + 128), *(_QWORD *)(v0 + 112));
    sub_21C24881C();
    v23 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD1760]), sel_init);
    v24 = objc_msgSend(v23, sel_processName);

    sub_21C248498();
    swift_bridgeObjectRelease();
    sub_21C248504();
    sub_21C246DC4();
    sub_21C248504();
    swift_bridgeObjectRelease();
    sub_21C248504();
    sub_21C247400();
    sub_21C1FBD14((unint64_t *)&qword_255249ED8, (uint64_t (*)(uint64_t))MEMORY[0x24BE77EF8], MEMORY[0x24BE77F18]);
    sub_21C2488F4();
    sub_21C248504();
    swift_bridgeObjectRelease();
    v7(v21, v22);
    sub_21C248504();
    *(_QWORD *)(v0 + 32) = sub_21C24740C();
    sub_21C2488F4();
    sub_21C248504();
    swift_bridgeObjectRelease();
    sub_21C248504();
    sub_21C246F80();
    v16 = (unsigned int *)MEMORY[0x24BE77310];
    goto LABEL_8;
  }
  v12 = *(_QWORD *)(v0 + 144);
  v13 = *(_QWORD *)(v0 + 104);
  v14 = *(_QWORD *)(v0 + 40);
  v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 + 136) + 32);
  v15(v12, *(_QWORD *)(v0 + 128), v13);
  v15(v14, v12, v13);
  v16 = (unsigned int *)MEMORY[0x24BE77340];
LABEL_8:
  v25 = *(_QWORD *)(v0 + 40);
  v26 = *v16;
  v27 = sub_21C247160();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 104))(v25, v26, v27);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21C241510(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 160) = a1;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_21C24156C()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t, uint64_t, uint64_t);
  unsigned int *v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v1 = *(_QWORD *)(v0 + 160);
  v2 = *(_QWORD **)(v0 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *v2 = v1;
  v3 = *(_QWORD *)(v0 + 160);
  v4 = *(_QWORD *)(v0 + 96);
  v5 = *(_QWORD *)(v0 + 72);
  v6 = *(_QWORD *)(v0 + 80);
  sub_21C247400();
  v7 = sub_21C248450();
  v8 = sub_21C1FBD14(&qword_25524A278, (uint64_t (*)(uint64_t))MEMORY[0x24BE77EF8], MEMORY[0x24BE77F08]);
  MEMORY[0x2207765AC](v4, v3, v5, v7, v8);
  swift_bridgeObjectRelease();
  v9 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
  v9(v4, v5);
  v10 = *(_QWORD *)(v0 + 16);
  if (!v10)
  {
    (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 136) + 56))(*(_QWORD *)(v0 + 128), 1, 1, *(_QWORD *)(v0 + 104));
    goto LABEL_5;
  }
  v11 = *(_QWORD *)(v0 + 128);
  v12 = *(_QWORD *)(v0 + 136);
  v13 = *(_QWORD *)(v0 + 104);
  *(_QWORD *)(v0 + 24) = sub_21C24740C();
  MEMORY[0x2207765AC](v0 + 24, v10, MEMORY[0x24BEE1768], v13, MEMORY[0x24BEE1778]);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v11, 1, v13) == 1)
  {
LABEL_5:
    v19 = *(_QWORD *)(v0 + 88);
    v20 = *(_QWORD *)(v0 + 72);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 120) + 8))(*(_QWORD *)(v0 + 128), *(_QWORD *)(v0 + 112));
    sub_21C24881C();
    v21 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD1760]), sel_init);
    v22 = objc_msgSend(v21, sel_processName);

    sub_21C248498();
    swift_bridgeObjectRelease();
    sub_21C248504();
    sub_21C246DC4();
    sub_21C248504();
    swift_bridgeObjectRelease();
    sub_21C248504();
    sub_21C247400();
    sub_21C1FBD14((unint64_t *)&qword_255249ED8, (uint64_t (*)(uint64_t))MEMORY[0x24BE77EF8], MEMORY[0x24BE77F18]);
    sub_21C2488F4();
    sub_21C248504();
    swift_bridgeObjectRelease();
    v9(v19, v20);
    sub_21C248504();
    *(_QWORD *)(v0 + 32) = sub_21C24740C();
    sub_21C2488F4();
    sub_21C248504();
    swift_bridgeObjectRelease();
    sub_21C248504();
    sub_21C246F80();
    v18 = (unsigned int *)MEMORY[0x24BE77310];
    goto LABEL_6;
  }
  v14 = *(_QWORD *)(v0 + 144);
  v15 = *(_QWORD *)(v0 + 104);
  v16 = *(_QWORD *)(v0 + 40);
  v17 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 + 136) + 32);
  v17(v14, *(_QWORD *)(v0 + 128), v15);
  v17(v16, v14, v15);
  v18 = (unsigned int *)MEMORY[0x24BE77340];
LABEL_6:
  v23 = *(_QWORD *)(v0 + 40);
  v24 = *v18;
  v25 = sub_21C247160();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 104))(v23, v24, v25);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21C24194C(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v4 = *a2;
  v5 = a2[1];
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_21C2232C8;
  return sub_21C2419B0(a1, v4, v5);
}

uint64_t sub_21C2419B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;

  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  v4 = sub_21C247C64();
  v3[5] = v4;
  v3[6] = *(_QWORD *)(v4 - 8);
  v3[7] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_21C241A14()
{
  uint64_t v0;

  sub_21C24863C();
  *(_QWORD *)(v0 + 64) = sub_21C248630();
  sub_21C2485E8();
  return swift_task_switch();
}

uint64_t sub_21C241A7C()
{
  uint64_t v0;

  swift_release();
  sub_21C247B20();
  *(_QWORD *)(v0 + 72) = 0;
  return swift_task_switch();
}

uint64_t sub_21C241AF8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 16);
  (*(void (**)(uint64_t, _QWORD, _QWORD))(*(_QWORD *)(v0 + 48) + 32))(v1, *(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 40));
  v2 = *MEMORY[0x24BE77340];
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_255249EA8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(v1, v2, v3);
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21C241B70()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 72);
  sub_21C24881C();
  swift_bridgeObjectRelease();
  sub_21C247130();

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21C241C04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t AssociatedTypeWitness;
  _QWORD *v5;

  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v3[5] = AssociatedTypeWitness;
  v3[6] = *(_QWORD *)(AssociatedTypeWitness - 8);
  v3[7] = swift_task_alloc();
  v5 = (_QWORD *)swift_task_alloc();
  v3[8] = v5;
  *v5 = v3;
  v5[1] = sub_21C241CB8;
  return sub_21C246DB8();
}

uint64_t sub_21C241CB8()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 72) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_21C241D1C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 16);
  (*(void (**)(uint64_t, _QWORD, _QWORD))(*(_QWORD *)(v0 + 48) + 32))(v1, *(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 40));
  v2 = *MEMORY[0x24BE77340];
  v3 = sub_21C247160();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(v1, v2, v3);
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21C241DA0()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 72);
  sub_21C24881C();
  swift_bridgeObjectRelease();
  sub_21C246DC4();
  sub_21C248504();
  swift_bridgeObjectRelease();
  sub_21C248504();
  sub_21C247130();
  swift_bridgeObjectRelease();

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21C241E88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;

  v4[26] = a3;
  v4[27] = v3;
  v4[24] = a1;
  v4[25] = a2;
  v5 = sub_21C246FB0();
  v4[28] = v5;
  v4[29] = *(_QWORD *)(v5 - 8);
  v4[30] = swift_task_alloc();
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_25524D758);
  v4[31] = v6;
  v4[32] = *(_QWORD *)(v6 - 8);
  v4[33] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_21C241F18()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  char v3;
  _OWORD *v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;

  v1 = sub_21C2427C4();
  if (!*(_QWORD *)(v1 + 16) || (v2 = sub_21C1F634C(*(_QWORD *)(v0 + 200)), (v3 & 1) == 0))
  {
    v15 = *(_QWORD *)(v0 + 232);
    v14 = *(_QWORD *)(v0 + 240);
    v16 = *(_QWORD *)(v0 + 224);
    v17 = *(_QWORD *)(v0 + 200);
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16))(v14, v17, v16);
    type metadata accessor for UnknownRegistryType();
    sub_21C1FBD14(&qword_25524D760, (uint64_t (*)(uint64_t))type metadata accessor for UnknownRegistryType, (uint64_t)&unk_21C24CF2C);
    swift_allocError();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 32))(v18, v14, v16);
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v4 = (_OWORD *)(v0 + 56);
  v5 = *(_QWORD *)(v0 + 216);
  v6 = (uint64_t *)(*(_QWORD *)(v1 + 56) + 16 * v2);
  v7 = *v6;
  v8 = v6[1];
  swift_bridgeObjectRelease();
  swift_beginAccess();
  v10 = *(_QWORD *)(v5 + 120);
  if (!*(_QWORD *)(v10 + 16))
  {
    *(_QWORD *)(v0 + 88) = 0;
    *v4 = 0u;
    *(_OWORD *)(v0 + 72) = 0u;
LABEL_11:
    v20 = type metadata accessor for Cache(0, v7, *(_QWORD *)(v8 + 8), v9);
    *(_QWORD *)(v0 + 40) = v20;
    *(_QWORD *)(v0 + 184) = v8;
    *(_QWORD *)(v0 + 48) = MEMORY[0x22077702C](&unk_21C24CDB0, v20, v0 + 184);
    *(_QWORD *)(v0 + 16) = 0;
    sub_21C1F03B0(v0 + 56, &qword_25524C190);
    goto LABEL_12;
  }
  v11 = *(_QWORD *)(v0 + 200);
  swift_bridgeObjectRetain();
  v12 = sub_21C1F634C(v11);
  if ((v13 & 1) != 0)
  {
    sub_21C1E712C(*(_QWORD *)(v10 + 56) + 40 * v12, v0 + 56);
  }
  else
  {
    *(_QWORD *)(v0 + 88) = 0;
    *v4 = 0u;
    *(_OWORD *)(v0 + 72) = 0u;
  }
  swift_bridgeObjectRelease();
  if (!*(_QWORD *)(v0 + 80))
    goto LABEL_11;
  sub_21C1EB66C((__int128 *)(v0 + 56), v0 + 16);
LABEL_12:
  v21 = *(_QWORD *)(v0 + 40);
  v22 = *(_QWORD *)(v0 + 48);
  __swift_mutable_project_boxed_opaque_existential_1(v0 + 16, v21);
  v23 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 272) = v23;
  *v23 = v0;
  v23[1] = sub_21C242170;
  return sub_21C242368(*(_QWORD *)(v0 + 264), *(_QWORD *)(v0 + 208), v21, v22);
}

uint64_t sub_21C242170()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_21C2421C8()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;

  v1 = v0[30];
  (*(void (**)(uint64_t, _QWORD, _QWORD))(v0[29] + 16))(v1, v0[25], v0[28]);
  sub_21C1E712C((uint64_t)(v0 + 2), (uint64_t)(v0 + 12));
  swift_beginAccess();
  sub_21C227968((uint64_t)(v0 + 12), v1);
  swift_endAccess();
  v2 = (_QWORD *)swift_task_alloc();
  v0[35] = v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25524D778);
  *v2 = v0;
  v2[1] = sub_21C2422AC;
  return sub_21C247154();
}

uint64_t sub_21C2422AC()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_21C242304()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 256) + 8))(*(_QWORD *)(v0 + 264), *(_QWORD *)(v0 + 248));
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21C242368(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t (*v12)(uint64_t, uint64_t, uint64_t, uint64_t);

  v4[3] = a3;
  v4[4] = a4;
  v4[2] = a1;
  swift_getAssociatedTypeWitness();
  v8 = sub_21C247160();
  v4[5] = v8;
  v4[6] = *(_QWORD *)(v8 - 8);
  v9 = swift_task_alloc();
  v4[7] = v9;
  v12 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(a4 + 24) + *(_QWORD *)(a4 + 24));
  v10 = (_QWORD *)swift_task_alloc();
  v4[8] = v10;
  *v10 = v4;
  v10[1] = sub_21C242440;
  return v12(v9, a2, a3, a4);
}

uint64_t sub_21C242440()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_21C242494()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(v0 + 48);
  v1 = *(_QWORD *)(v0 + 56);
  v3 = *(_QWORD *)(v0 + 40);
  *(_OWORD *)(swift_task_alloc() + 16) = *(_OWORD *)(v0 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25524D750);
  sub_21C247148();
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21C242538(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return swift_task_switch();
}

uint64_t sub_21C242550()
{
  uint64_t *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v1 = (_QWORD *)v0[3];
  v3 = v1[3];
  v2 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v3);
  v4 = (_QWORD *)swift_task_alloc();
  v0[4] = (uint64_t)v4;
  *v4 = v0;
  v4[1] = sub_21C2425C4;
  return sub_21C242610(v0[2], v3, v2);
}

uint64_t sub_21C2425C4()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_21C242610(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  v5 = *(_QWORD *)(a3 + 8);
  swift_getAssociatedTypeWitness();
  v6 = sub_21C247160();
  v3[5] = v6;
  v3[6] = *(_QWORD *)(v6 - 8);
  v7 = swift_task_alloc();
  v3[7] = v7;
  v8 = (_QWORD *)swift_task_alloc();
  v3[8] = v8;
  *v8 = v3;
  v8[1] = sub_21C2426CC;
  return sub_21C241C04(v7, a2, v5);
}

uint64_t sub_21C2426CC()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_21C242720()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(v0 + 48);
  v1 = *(_QWORD *)(v0 + 56);
  v3 = *(_QWORD *)(v0 + 40);
  *(_OWORD *)(swift_task_alloc() + 16) = *(_OWORD *)(v0 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25524D778);
  sub_21C247148();
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21C2427C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v18;
  char v19;
  unint64_t v20;
  uint64_t v21;
  _BOOL8 v22;
  uint64_t v23;
  char v24;
  unint64_t v25;
  char v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t result;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;

  v1 = sub_21C246FB0();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v33 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *(_QWORD **)(v0 + 128);
  if (v5)
  {
    swift_bridgeObjectRetain();
    return (uint64_t)v5;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_25524D750);
  v6 = sub_21C246F68();
  if (v6)
    v7 = v6;
  else
    v7 = MEMORY[0x24BEE4AF8];
  v5 = (_QWORD *)sub_21C1ECA64(MEMORY[0x24BEE4AF8]);
  v36 = *(_QWORD *)(v7 + 16);
  if (!v36)
  {
LABEL_28:
    swift_bridgeObjectRelease();
    *(_QWORD *)(v0 + 128) = v5;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    return (uint64_t)v5;
  }
  v34 = v0;
  swift_bridgeObjectRetain();
  v8 = 0;
  v35 = v7;
  while (1)
  {
    v11 = *(_QWORD *)(v7 + 8 * v8 + 32);
    v12 = swift_conformsToProtocol2();
    if (v12)
      v13 = v11;
    else
      v13 = 0;
    if (v12)
      v14 = v12;
    else
      v14 = 0;
    if (!v13)
      goto LABEL_10;
    v15 = v2;
    v16 = v1;
    v37 = v14;
    sub_21C22CE78();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v38 = v5;
    v18 = (uint64_t)v4;
    v20 = sub_21C1F634C((uint64_t)v4);
    v21 = v5[2];
    v22 = (v19 & 1) == 0;
    v23 = v21 + v22;
    if (__OFADD__(v21, v22))
      break;
    v24 = v19;
    if (v5[3] >= v23)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        sub_21C1FB838();
    }
    else
    {
      sub_21C1F8C08(v23, isUniquelyReferenced_nonNull_native);
      v25 = sub_21C1F634C(v18);
      if ((v24 & 1) != (v26 & 1))
        goto LABEL_32;
      v20 = v25;
    }
    v1 = v16;
    v5 = v38;
    v2 = v15;
    if ((v24 & 1) != 0)
    {
      v9 = (_QWORD *)(v38[7] + 16 * v20);
      v10 = v37;
      *v9 = v13;
      v9[1] = v10;
    }
    else
    {
      v38[(v20 >> 6) + 8] |= 1 << v20;
      (*(void (**)(unint64_t, uint64_t, uint64_t))(v15 + 16))(v5[6] + *(_QWORD *)(v15 + 72) * v20, v18, v1);
      v27 = (_QWORD *)(v5[7] + 16 * v20);
      v28 = v37;
      *v27 = v13;
      v27[1] = v28;
      v29 = v5[2];
      v30 = __OFADD__(v29, 1);
      v31 = v29 + 1;
      if (v30)
        goto LABEL_31;
      v5[2] = v31;
    }
    swift_bridgeObjectRelease();
    v4 = (char *)v18;
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v18, v1);
    v7 = v35;
LABEL_10:
    if (v36 == ++v8)
    {
      swift_bridgeObjectRelease();
      v0 = v34;
      goto LABEL_28;
    }
  }
  __break(1u);
LABEL_31:
  __break(1u);
LABEL_32:
  result = sub_21C248948();
  __break(1u);
  return result;
}

uint64_t sub_21C242A5C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_defaultActor_destroy();
  return swift_defaultActor_deallocate();
}

uint64_t type metadata accessor for RegistryLocator()
{
  return objc_opt_self();
}

ValueMetadata *type metadata accessor for PreviewRegistryEntry()
{
  return &type metadata for PreviewRegistryEntry;
}

_QWORD *sub_21C242AC0(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_21C242AEC()
{
  return swift_bridgeObjectRelease();
}

_QWORD *sub_21C242AF4(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *sub_21C242B2C(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_21C242B5C(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *((_BYTE *)a1 + 8))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t sub_21C242BB8(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 8) = 0;
    if (a2)
      *(_QWORD *)result = a2;
  }
  return result;
}

uint64_t type metadata accessor for Cache(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for Cache);
}

uint64_t sub_21C242C14(uint64_t *a1, char *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  char *v31;
  void (*v33)(char *, char *, uint64_t);
  void (*v34)(char *, char *, uint64_t);
  NSObject *v35;
  os_log_type_t v36;
  int v37;
  _BOOL4 v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  unint64_t v44;
  char *v45;
  uint64_t v46;
  void (*v47)(char *, uint64_t);
  os_log_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  char *v63;
  char *v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  os_log_t v68;
  int v69;
  void (*v70)(char *, uint64_t);
  void (*v71)(char *, char *, uint64_t);
  void (*v72)(char *, char *, uint64_t);
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  char *v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  char *v83;
  char *v84;
  uint64_t v85;
  char *v86;
  char *v87;
  uint64_t *v88;
  uint64_t v89;
  _QWORD v90[2];
  uint64_t v91;

  v88 = a1;
  v8 = sub_21C248798();
  v75 = *(_QWORD *)(v8 - 8);
  v76 = v8;
  v9 = MEMORY[0x24BDAC7A8](v8);
  v79 = (char *)&v66 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v77 = (char *)&v66 - v12;
  v13 = MEMORY[0x24BDAC7A8](v11);
  v82 = (char *)&v66 - v14;
  v89 = *(_QWORD *)(a3 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v78 = (char *)&v66 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v86 = (char *)&v66 - v17;
  v18 = sub_21C247CC4();
  v80 = *(_QWORD *)(v18 - 8);
  v81 = v18;
  MEMORY[0x24BDAC7A8](v18);
  v87 = (char *)&v66 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_255249EE8);
  MEMORY[0x24BDAC7A8](v20);
  v22 = (char *)&v66 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = sub_21C24758C();
  v24 = *(_QWORD *)(v23 - 8);
  v25 = MEMORY[0x24BDAC7A8](v23);
  v84 = (char *)&v66 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = MEMORY[0x24BDAC7A8](v25);
  v29 = (char *)&v66 - v28;
  MEMORY[0x24BDAC7A8](v27);
  v31 = (char *)&v66 - v30;
  v85 = a4;
  sub_21C2433C0(a3, (uint64_t)v22);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23) == 1)
    return sub_21C1F03B0((uint64_t)v22, &qword_255249EE8);
  (*(void (**)(char *, char *, uint64_t))(v24 + 32))(v31, v22, v23);
  sub_21C247C94();
  v33 = *(void (**)(char *, char *, uint64_t))(v24 + 16);
  v83 = v31;
  v72 = v33;
  v33(v29, v31, v23);
  v34 = *(void (**)(char *, char *, uint64_t))(v89 + 16);
  v73 = a2;
  v71 = v34;
  v34(v86, a2, a3);
  v35 = sub_21C247CB8();
  v36 = sub_21C248708();
  v37 = v36;
  v38 = os_log_type_enabled(v35, v36);
  v74 = v4;
  if (v38)
  {
    v39 = swift_slowAlloc();
    v69 = v37;
    v40 = v39;
    v67 = swift_slowAlloc();
    v91 = v67;
    *(_DWORD *)v40 = 136446722;
    v68 = v35;
    v41 = sub_21C246DC4();
    v90[0] = sub_21C203A90(v41, v42, &v91);
    sub_21C2487A4();
    swift_bridgeObjectRelease();
    *(_WORD *)(v40 + 12) = 2082;
    sub_21C1FBD14((unint64_t *)&qword_255249ED8, (uint64_t (*)(uint64_t))MEMORY[0x24BE77EF8], MEMORY[0x24BE77F18]);
    v43 = sub_21C2488F4();
    v90[0] = sub_21C203A90(v43, v44, &v91);
    sub_21C2487A4();
    swift_bridgeObjectRelease();
    v70 = *(void (**)(char *, uint64_t))(v24 + 8);
    v70(v29, v23);
    *(_WORD *)(v40 + 22) = 2050;
    v45 = v86;
    v46 = sub_21C246DDC();
    v47 = *(void (**)(char *, uint64_t))(v89 + 8);
    v47(v45, a3);
    v90[0] = v46;
    sub_21C2487A4();
    v48 = v68;
    _os_log_impl(&dword_21C1E3000, v68, (os_log_type_t)v69, "Found %{public}s registry: %{public}s:%{public}ld", (uint8_t *)v40, 0x20u);
    v49 = v67;
    swift_arrayDestroy();
    MEMORY[0x2207770EC](v49, -1, -1);
    MEMORY[0x2207770EC](v40, -1, -1);

  }
  else
  {
    v47 = *(void (**)(char *, uint64_t))(v89 + 8);
    v47(v86, a3);
    v70 = *(void (**)(char *, uint64_t))(v24 + 8);
    v70(v29, v23);

  }
  (*(void (**)(char *, uint64_t))(v80 + 8))(v87, v81);
  v50 = *v88;
  v51 = sub_21C248450();
  v52 = sub_21C1FBD14(&qword_25524A278, (uint64_t (*)(uint64_t))MEMORY[0x24BE77EF8], MEMORY[0x24BE77F08]);
  MEMORY[0x2207765AC](v90, v83, v50, v23, v51, v52);
  v53 = v90[0];
  v54 = v73;
  if (!v90[0])
  {
    swift_getTupleTypeMetadata2();
    sub_21C2485AC();
    v53 = sub_21C248444();
  }
  v91 = v53;
  v90[0] = sub_21C246DDC();
  v55 = v82;
  MEMORY[0x2207765AC](v90, v53, MEMORY[0x24BEE1768], a3, MEMORY[0x24BEE1778]);
  v56 = v89;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v89 + 48))(v55, 1, a3) == 1)
  {
    (*(void (**)(char *, uint64_t))(v75 + 8))(v55, v76);
    v57 = sub_21C246DDC();
    v58 = v77;
    v71(v77, v54, a3);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v56 + 56))(v58, 0, 1, a3);
    v90[0] = v57;
    sub_21C248468();
  }
  else
  {
    v87 = (char *)v47;
    v59 = v78;
    (*(void (**)(char *, char *, uint64_t))(v56 + 32))(v78, v55, a3);
    v60 = sub_21C246DDC();
    v61 = sub_21C246DE8();
    if (v61 >= sub_21C246DE8())
    {
      v62 = v79;
      v63 = v79;
      v64 = v54;
    }
    else
    {
      v62 = v79;
      v63 = v79;
      v64 = v59;
    }
    v71(v63, v64, a3);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v89 + 56))(v62, 0, 1, a3);
    v90[0] = v60;
    sub_21C248468();
    ((void (*)(char *, uint64_t))v87)(v59, a3);
  }
  v65 = v83;
  v72(v84, v83, v23);
  v90[0] = v91;
  sub_21C248450();
  swift_bridgeObjectRetain();
  sub_21C248468();
  v70(v65, v23);
  return swift_bridgeObjectRelease();
}

uint64_t sub_21C2433C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  void *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint64_t v17;
  uint8_t *v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint8_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;

  v29 = *(_QWORD *)(a1 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_21C247CC4();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v30 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21C246DF4();
  v10 = (void *)sub_21C24848C();
  swift_bridgeObjectRelease();
  v11 = (void *)sub_21C24848C();
  v12 = objc_msgSend(v10, sel_componentsSeparatedByString_, v11);

  v13 = sub_21C248564();
  if (*(_QWORD *)(v13 + 16) >= 2uLL)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    sub_21C247580();
    v22 = sub_21C24758C();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(a2, 0, 1, v22);
  }
  else
  {
    v27 = a2;
    v28 = v8;
    swift_bridgeObjectRelease();
    sub_21C247CA0();
    v14 = v29;
    (*(void (**)(char *, uint64_t, uint64_t))(v29 + 16))(v6, v2, a1);
    v15 = sub_21C247CB8();
    v16 = sub_21C248720();
    if (os_log_type_enabled(v15, v16))
    {
      v17 = swift_slowAlloc();
      v26 = v7;
      v18 = (uint8_t *)v17;
      v19 = swift_slowAlloc();
      v32 = v19;
      *(_DWORD *)v18 = 136446210;
      v25 = v18 + 4;
      v20 = sub_21C246DF4();
      v31 = sub_21C203A90(v20, v21, &v32);
      sub_21C2487A4();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v14 + 8))(v6, a1);
      _os_log_impl(&dword_21C1E3000, v15, v16, "registry fileID had fewer than 2 components: %{public}s", v18, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2207770EC](v19, -1, -1);
      MEMORY[0x2207770EC](v18, -1, -1);

      (*(void (**)(char *, uint64_t))(v28 + 8))(v30, v26);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v14 + 8))(v6, a1);

      (*(void (**)(char *, uint64_t))(v28 + 8))(v30, v7);
    }
    v24 = sub_21C24758C();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v27, 1, 1, v24);
  }
}

uint64_t sub_21C243720@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t AssociatedTypeWitness;
  uint64_t *boxed_opaque_existential_1;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  a2[3] = AssociatedTypeWitness;
  a2[4] = swift_getAssociatedConformanceWitness();
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(a2);
  return (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 16))(boxed_opaque_existential_1, a1, AssociatedTypeWitness);
}

uint64_t sub_21C2437D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;

  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_21C1EBB98;
  return sub_21C241028(a1, a2, a3);
}

uint64_t sub_21C243838@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t AssociatedTypeWitness;
  uint64_t *boxed_opaque_existential_1;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  a2[3] = AssociatedTypeWitness;
  a2[4] = swift_getAssociatedConformanceWitness();
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(a2);
  return (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 16))(boxed_opaque_existential_1, a1, AssociatedTypeWitness);
}

unint64_t sub_21C2438E0()
{
  sub_21C24881C();
  swift_bridgeObjectRelease();
  sub_21C246FB0();
  sub_21C1FBD14(&qword_25524C4D0, (uint64_t (*)(uint64_t))MEMORY[0x24BE77078], MEMORY[0x24BE77098]);
  sub_21C2488F4();
  sub_21C248504();
  swift_bridgeObjectRelease();
  sub_21C248504();
  return 0xD000000000000019;
}

unint64_t sub_21C2439A4()
{
  sub_21C24881C();
  swift_bridgeObjectRelease();
  sub_21C246FB0();
  sub_21C1FBD14(&qword_25524C4D0, (uint64_t (*)(uint64_t))MEMORY[0x24BE77078], MEMORY[0x24BE77098]);
  sub_21C2488F4();
  sub_21C248504();
  swift_bridgeObjectRelease();
  sub_21C248504();
  return 0xD00000000000001FLL;
}

uint64_t sub_21C243A84()
{
  sub_21C1FBD14(&qword_25524D830, (uint64_t (*)(uint64_t))type metadata accessor for UnknownRegistryType, (uint64_t)&unk_21C24CE94);
  return sub_21C24794C();
}

uint64_t sub_21C243AC4()
{
  sub_21C1FBD14(&qword_25524D830, (uint64_t (*)(uint64_t))type metadata accessor for UnknownRegistryType, (uint64_t)&unk_21C24CE94);
  return sub_21C24791C();
}

uint64_t sub_21C243B04()
{
  return sub_21C247B44();
}

uint64_t sub_21C243B28()
{
  return sub_21C247B2C();
}

uint64_t sub_21C243B4C()
{
  return sub_21C247B38();
}

uint64_t sub_21C243B70(uint64_t a1)
{
  _OWORD *v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_OWORD *)(v2 + 24) = *v1;
  return swift_task_switch();
}

uint64_t sub_21C243B90()
{
  uint64_t v0;

  sub_21C24863C();
  *(_QWORD *)(v0 + 40) = sub_21C248630();
  sub_21C2485E8();
  return swift_task_switch();
}

uint64_t sub_21C243BF8()
{
  uint64_t v0;

  swift_release();
  sub_21C247B20();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21C243C60@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = a1();
  *a2 = result;
  return result;
}

uint64_t sub_21C243C88()
{
  return 0x77656976657270;
}

uint64_t sub_21C243CA0(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;

  v2[6] = a1;
  v2[7] = a2;
  v3 = sub_21C247CC4();
  v2[8] = v3;
  v2[9] = *(_QWORD *)(v3 - 8);
  v2[10] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_21C243D00()
{
  _QWORD *v0;
  NSObject *v1;
  os_log_type_t v2;
  uint8_t *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  sub_21C247C94();
  v1 = sub_21C247CB8();
  v2 = sub_21C248738();
  if (os_log_type_enabled(v1, v2))
  {
    v12 = v0[9];
    v13 = v0[8];
    v14 = v0[10];
    v3 = (uint8_t *)swift_slowAlloc();
    v4 = swift_slowAlloc();
    v15 = v4;
    *(_DWORD *)v3 = 136446210;
    v5 = sub_21C246DC4();
    v0[5] = sub_21C203A90(v5, v6, &v15);
    sub_21C2487A4();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_21C1E3000, v1, v2, "scraping runtime for %{public}s types", v3, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2207770EC](v4, -1, -1);
    MEMORY[0x2207770EC](v3, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v14, v13);
  }
  else
  {
    v8 = v0[9];
    v7 = v0[10];
    v9 = v0[8];

    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
  }
  v10 = (_QWORD *)swift_task_alloc();
  v0[11] = v10;
  *v10 = v0;
  v10[1] = sub_21C243EBC;
  return sub_21C246DD0();
}

uint64_t sub_21C243EBC(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 96) = a1;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_21C243F18()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t);
  uint64_t v2;
  uint64_t v3;
  __int128 v5;

  *(_QWORD *)(v0 + 24) = *(_QWORD *)(v0 + 96);
  sub_21C24758C();
  v1 = (uint64_t (*)(uint64_t))MEMORY[0x24BE77EF8];
  v5 = *(_OWORD *)(v0 + 48);
  sub_21C248450();
  swift_getTupleTypeMetadata2();
  sub_21C2485AC();
  sub_21C1FBD14(&qword_25524A278, v1, MEMORY[0x24BE77F08]);
  *(_QWORD *)(v0 + 32) = sub_21C248444();
  *(_OWORD *)(swift_task_alloc() + 16) = v5;
  v2 = sub_21C2485DC();
  sub_21C248450();
  MEMORY[0x22077702C](MEMORY[0x24BEE12C8], v2);
  sub_21C248534();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  v3 = *(_QWORD *)(v0 + 16);
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v3);
}

uint64_t sub_21C2440AC(uint64_t *a1, char *a2)
{
  uint64_t v2;

  return sub_21C242C14(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24));
}

_QWORD *sub_21C2440C4()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t i;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;

  __swift_instantiateConcreteTypeFromMangledName(&qword_25524D738);
  v0 = sub_21C246F68();
  v1 = (_QWORD *)MEMORY[0x24BEE4AF8];
  if (v0)
    v2 = v0;
  else
    v2 = MEMORY[0x24BEE4AF8];
  v3 = *(_QWORD *)(v2 + 16);
  if (v3)
  {
    swift_bridgeObjectRetain();
    for (i = 0; i != v3; ++i)
    {
      v6 = *(_QWORD *)(v2 + 8 * i + 32);
      v7 = swift_conformsToProtocol2();
      if (v7)
        v8 = v6;
      else
        v8 = 0;
      if (v7)
        v9 = v7;
      else
        v9 = 0;
      if (v8)
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v1 = sub_21C23DA3C(0, v1[2] + 1, 1, v1);
        v11 = v1[2];
        v10 = v1[3];
        if (v11 >= v10 >> 1)
          v1 = sub_21C23DA3C((_QWORD *)(v10 > 1), v11 + 1, 1, v1);
        v1[2] = v11 + 1;
        v5 = &v1[2 * v11];
        v5[4] = v8;
        v5[5] = v9;
      }
    }
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t type metadata accessor for UnknownRegistryType()
{
  uint64_t result;

  result = qword_25524D7E8;
  if (!qword_25524D7E8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t __swift_mutable_project_boxed_opaque_existential_1(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
  {
    swift_makeBoxUnique();
    return v2;
  }
  return result;
}

uint64_t sub_21C24424C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_21C243838(a1, a2);
}

uint64_t sub_21C244264@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_21C243720(a1, a2);
}

uint64_t sub_21C24427C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_21C246FB0();
  return (**(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8))(a1, a2, v4);
}

uint64_t sub_21C2442B8(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_21C246FB0();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

uint64_t sub_21C2442EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_21C246FB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t sub_21C244330(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_21C246FB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t sub_21C244374(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_21C246FB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t sub_21C2443B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_21C246FB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t sub_21C2443FC()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_21C244408(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_21C246FB0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t sub_21C244444()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_21C244450(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_21C246FB0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t sub_21C244490()
{
  uint64_t result;
  unint64_t v1;

  result = sub_21C246FB0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_21C2444F8()
{
  return sub_21C1FBD14(&qword_25524D760, (uint64_t (*)(uint64_t))type metadata accessor for UnknownRegistryType, (uint64_t)&unk_21C24CF2C);
}

uint64_t sub_21C244524()
{
  return sub_21C1FBD14(&qword_25524D820, (uint64_t (*)(uint64_t))type metadata accessor for UnknownRegistryType, (uint64_t)&unk_21C24CE4C);
}

uint64_t sub_21C244550()
{
  return sub_21C1FBD14(&qword_25524D828, (uint64_t (*)(uint64_t))type metadata accessor for UnknownRegistryType, (uint64_t)&unk_21C24CE24);
}

uint64_t sub_21C244580@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(void);
  uint64_t v38;
  char *v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  _OWORD *v45;
  uint64_t v46;
  uint64_t v47;
  _OWORD *v48;
  int v49;
  char *v50;
  char *v51;
  _OWORD *v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  char *v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  int v69;
  unsigned int *v70;
  uint64_t v71;
  void (*v72)(_OWORD *, uint64_t, uint64_t);
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  char *v79;
  char *v81;
  void (*v82)(char *, _QWORD, uint64_t);
  char *v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  char *v89;
  char *v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  char *v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  char *v108;
  _QWORD v109[3];
  uint64_t v110;

  v99 = a1;
  v1 = sub_21C2471E4();
  MEMORY[0x24BDAC7A8](v1);
  v98 = (char *)&v81 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v95 = sub_21C247100();
  v92 = *(_QWORD *)(v95 - 8);
  MEMORY[0x24BDAC7A8](v95);
  v108 = (char *)&v81 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_21C247E74();
  v96 = *(_QWORD *)(v4 - 8);
  v97 = v4;
  v5 = MEMORY[0x24BDAC7A8](v4);
  v90 = (char *)&v81 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v100 = (char *)&v81 - v7;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_25524D838);
  MEMORY[0x24BDAC7A8](v8);
  v88 = (char *)&v81 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v87 = sub_21C24809C();
  v86 = *(_QWORD *)(v87 - 8);
  MEMORY[0x24BDAC7A8](v87);
  v85 = (char *)&v81 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_21C2470E8();
  v93 = *(_QWORD *)(v11 - 8);
  v94 = v11;
  v12 = MEMORY[0x24BDAC7A8](v11);
  v91 = (char *)&v81 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v107 = (char *)&v81 - v14;
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_25524D840);
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v81 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_21C248414();
  v84 = *(_QWORD *)(v18 - 8);
  MEMORY[0x24BDAC7A8](v18);
  v81 = (char *)&v81 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_25524D848);
  MEMORY[0x24BDAC7A8](v20);
  v22 = (char *)&v81 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = sub_21C2483FC();
  v24 = *(_QWORD *)(v23 - 8);
  MEMORY[0x24BDAC7A8](v23);
  v26 = (char *)&v81 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = sub_21C247C28();
  v105 = *(_QWORD *)(v27 - 8);
  v106 = v27;
  v28 = MEMORY[0x24BDAC7A8](v27);
  v83 = (char *)&v81 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v28);
  v31 = (char *)&v81 - v30;
  v32 = sub_21C2473C4();
  v33 = MEMORY[0x24BDAC7A8](v32);
  v89 = (char *)&v81 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v33);
  v101 = (char *)&v81 - v35;
  v102 = v36;
  v37 = *(void (**)(void))(v36 + 104);
  v103 = v38;
  v82 = (void (*)(char *, _QWORD, uint64_t))v37;
  v37();
  v104 = v31;
  sub_21C247C10();
  sub_21C24839C();
  if (v110)
  {
    __swift_project_boxed_opaque_existential_1(v109, v110);
    sub_21C1FBD14(&qword_25524D860, (uint64_t (*)(uint64_t))MEMORY[0x24BDFAE78], MEMORY[0x24BDFAE70]);
    sub_21C247EBC();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v109);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23) != 1)
    {
      v39 = v101;
      v40 = v103;
      (*(void (**)(char *, uint64_t))(v102 + 8))(v101, v103);
      (*(void (**)(char *, char *, uint64_t))(v24 + 32))(v26, v22, v23);
      v82(v39, *MEMORY[0x24BE77A70], v40);
      v41 = v83;
      sub_21C2483F0();
      (*(void (**)(char *, uint64_t))(v24 + 8))(v26, v23);
      v43 = v104;
      v42 = v105;
      v44 = v106;
      (*(void (**)(char *, uint64_t))(v105 + 8))(v104, v106);
      (*(void (**)(char *, char *, uint64_t))(v42 + 32))(v43, v41, v44);
      goto LABEL_6;
    }
  }
  else
  {
    sub_21C1F03B0((uint64_t)v109, &qword_25524D850);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v24 + 56))(v22, 1, 1, v23);
  }
  sub_21C1F03B0((uint64_t)v22, &qword_25524D848);
LABEL_6:
  v45 = v108;
  v46 = (uint64_t)v88;
  v47 = v84;
  sub_21C24839C();
  v48 = v90;
  if (v110)
  {
    __swift_project_boxed_opaque_existential_1(v109, v110);
    sub_21C1FBD14(&qword_25524D858, (uint64_t (*)(uint64_t))MEMORY[0x24BDFB388], MEMORY[0x24BDFB370]);
    sub_21C247EBC();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v109);
    v49 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v47 + 48))(v17, 1, v18);
    v50 = v100;
    if (v49 != 1)
    {
      v51 = v101;
      v52 = v45;
      v53 = v103;
      (*(void (**)(char *, uint64_t))(v102 + 8))(v101, v103);
      v54 = v81;
      (*(void (**)(char *, char *, uint64_t))(v47 + 32))(v81, v17, v18);
      v55 = v53;
      v45 = v52;
      v82(v51, *MEMORY[0x24BE77A70], v55);
      v56 = v83;
      sub_21C248408();
      (*(void (**)(char *, uint64_t))(v47 + 8))(v54, v18);
      v58 = v104;
      v57 = v105;
      v59 = v106;
      (*(void (**)(char *, uint64_t))(v105 + 8))(v104, v106);
      v60 = v56;
      v50 = v100;
      (*(void (**)(char *, char *, uint64_t))(v57 + 32))(v58, v60, v59);
      LODWORD(v88) = 0;
      goto LABEL_11;
    }
  }
  else
  {
    sub_21C1F03B0((uint64_t)v109, &qword_25524D850);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v47 + 56))(v17, 1, 1, v18);
    v50 = v100;
  }
  sub_21C1F03B0((uint64_t)v17, &qword_25524D840);
  LODWORD(v88) = 1;
LABEL_11:
  v61 = v85;
  sub_21C248360();
  sub_21C248090();
  (*(void (**)(char *, uint64_t))(v86 + 8))(v61, v87);
  v87 = sub_21C24836C();
  v86 = sub_21C248348();
  v85 = v62;
  sub_21C248378();
  v63 = sub_21C247E68();
  v64 = *(_QWORD *)(v63 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v64 + 48))(v46, 1, v63) == 1)
  {
    sub_21C1F03B0(v46, &qword_25524D838);
    v84 = 0;
    v83 = 0;
  }
  else
  {
    v84 = sub_21C247E5C();
    v83 = v65;
    (*(void (**)(uint64_t, uint64_t))(v64 + 8))(v46, v63);
  }
  v82 = (void (*)(char *, _QWORD, uint64_t))sub_21C248354();
  v81 = v66;
  sub_21C248384();
  v68 = v96;
  v67 = v97;
  (*(void (**)(_OWORD *, char *, uint64_t))(v96 + 16))(v48, v50, v97);
  v69 = (*(uint64_t (**)(_OWORD *, uint64_t))(v68 + 88))(v48, v67);
  if (v69 == *MEMORY[0x24BDC6F90])
  {
    (*(void (**)(_OWORD *, uint64_t))(v68 + 96))(v48, v67);
    *v45 = *v48;
    v70 = (unsigned int *)MEMORY[0x24BE772C0];
LABEL_18:
    v71 = *v70;
    v72 = *(void (**)(_OWORD *, uint64_t, uint64_t))(v92 + 104);
    goto LABEL_19;
  }
  if (v69 == *MEMORY[0x24BDC6F98])
  {
    v70 = (unsigned int *)MEMORY[0x24BE772C8];
    goto LABEL_18;
  }
  v72 = *(void (**)(_OWORD *, uint64_t, uint64_t))(v92 + 104);
  if (v69 != *MEMORY[0x24BDC6F88])
  {
    v72(v45, *MEMORY[0x24BE772C8], v95);
    (*(void (**)(_OWORD *, uint64_t))(v68 + 8))(v48, v67);
    goto LABEL_20;
  }
  v71 = *MEMORY[0x24BE772B8];
LABEL_19:
  v72(v45, v71, v95);
LABEL_20:
  (*(void (**)(char *, uint64_t))(v68 + 8))(v50, v67);
  v73 = v101;
  v74 = v102;
  v75 = v103;
  (*(void (**)(char *, char *, uint64_t))(v102 + 16))(v89, v101, v103);
  v76 = v93;
  v77 = v94;
  v78 = v107;
  (*(void (**)(char *, char *, uint64_t))(v93 + 16))(v91, v107, v94);
  v79 = v104;
  sub_21C247C04();
  sub_21C24737C();
  (*(void (**)(char *, uint64_t))(v76 + 8))(v78, v77);
  (*(void (**)(char *, uint64_t))(v105 + 8))(v79, v106);
  return (*(uint64_t (**)(char *, uint64_t))(v74 + 8))(v73, v75);
}

uint64_t sub_21C244F5C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _OWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _OWORD *v13;
  uint64_t v14;
  char *v15;
  int v16;
  unsigned int *v17;
  uint64_t v18;
  void (*v19)(_OWORD *, uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v24 = a1;
  v1 = sub_21C2470E8();
  MEMORY[0x24BDAC7A8](v1);
  v2 = sub_21C247BF8();
  v22 = *(_QWORD *)(v2 - 8);
  v23 = v2;
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_21C247100();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (_OWORD *)((char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = sub_21C247E74();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v13 = (_OWORD *)((char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v21 - v14;
  sub_21C247B80();
  sub_21C247C4C();
  (*(void (**)(_OWORD *, char *, uint64_t))(v10 + 16))(v13, v15, v9);
  v16 = (*(uint64_t (**)(_OWORD *, uint64_t))(v10 + 88))(v13, v9);
  if (v16 == *MEMORY[0x24BDC6F90])
  {
    (*(void (**)(_OWORD *, uint64_t))(v10 + 96))(v13, v9);
    *v8 = *v13;
    v17 = (unsigned int *)MEMORY[0x24BE772C0];
LABEL_5:
    v18 = *v17;
    v19 = *(void (**)(_OWORD *, uint64_t, uint64_t))(v6 + 104);
    goto LABEL_6;
  }
  if (v16 == *MEMORY[0x24BDC6F98])
  {
    v17 = (unsigned int *)MEMORY[0x24BE772C8];
    goto LABEL_5;
  }
  v19 = *(void (**)(_OWORD *, uint64_t, uint64_t))(v6 + 104);
  if (v16 != *MEMORY[0x24BDC6F88])
  {
    v19(v8, *MEMORY[0x24BE772C8], v5);
    (*(void (**)(_OWORD *, uint64_t))(v10 + 8))(v13, v9);
    goto LABEL_7;
  }
  v18 = *MEMORY[0x24BE772B8];
LABEL_6:
  v19(v8, v18, v5);
LABEL_7:
  (*(void (**)(char *, uint64_t))(v10 + 8))(v15, v9);
  sub_21C247C34();
  sub_21C247C4C();
  sub_21C247BEC();
  (*(void (**)(char *, uint64_t))(v22 + 8))(v4, v23);
  return sub_21C24710C();
}

uint64_t RegistryPreview.underlyingPreview.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_21C247C64();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t RegistryPreview.id.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for RegistryPreview(0) + 20);
  v4 = sub_21C246F74();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t type metadata accessor for RegistryPreview(uint64_t a1)
{
  return sub_21C1F2E98(a1, qword_25524D8C0);
}

uint64_t sub_21C245280@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  int v18;
  uint64_t v19;
  void (*v20)(char *, _QWORD, uint64_t);
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  __int128 v32;
  __int128 v33;
  uint64_t v34;
  _QWORD v35[4];
  _QWORD v36[4];
  _QWORD v37[4];
  _QWORD v38[4];

  v31 = a1;
  v2 = sub_21C247118();
  MEMORY[0x24BDAC7A8](v2);
  v30 = (char *)&v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_21C2471E4();
  MEMORY[0x24BDAC7A8](v4);
  v29 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = sub_21C247C28();
  v26 = *(_QWORD *)(v27 - 8);
  MEMORY[0x24BDAC7A8](v27);
  v25 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_21C2473C4();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_21C247BE0();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v25 - v16;
  v28 = v1;
  sub_21C247C58();
  __swift_project_boxed_opaque_existential_1(v38, v38[3]);
  sub_21C247AF0();
  (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v15, v17, v11);
  v18 = (*(uint64_t (**)(char *, uint64_t))(v12 + 88))(v15, v11);
  if (v18 == *MEMORY[0x24BDC6EE8])
  {
    (*(void (**)(char *, _QWORD, uint64_t))(v8 + 104))(v10, *MEMORY[0x24BE77A68], v7);
    v19 = (uint64_t)v30;
  }
  else
  {
    v19 = (uint64_t)v30;
    if (v18 == *MEMORY[0x24BDC6EF0])
    {
      (*(void (**)(char *, _QWORD, uint64_t))(v8 + 104))(v10, *MEMORY[0x24BE77A70], v7);
    }
    else
    {
      v20 = *(void (**)(char *, _QWORD, uint64_t))(v8 + 104);
      if (v18 == *MEMORY[0x24BDC6EE0])
      {
        v20(v10, *MEMORY[0x24BE77A60], v7);
      }
      else
      {
        v20(v10, *MEMORY[0x24BE77A68], v7);
        (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v11);
      }
    }
  }
  (*(void (**)(char *, uint64_t))(v12 + 8))(v17, v11);
  sub_21C247C58();
  __swift_project_boxed_opaque_existential_1(v37, v37[3]);
  v21 = v25;
  sub_21C247AFC();
  sub_21C247C04();
  (*(void (**)(char *, uint64_t))(v26 + 8))(v21, v27);
  sub_21C247C58();
  __swift_project_boxed_opaque_existential_1(v36, v36[3]);
  sub_21C247B08();
  sub_21C247C58();
  __swift_project_boxed_opaque_existential_1(v35, v35[3]);
  sub_21C247B14();
  sub_21C244F5C(v19);
  sub_21C247C58();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25524D8F8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25524D918);
  if (swift_dynamicCast())
  {
    v22 = *((_QWORD *)&v33 + 1);
    v23 = v34;
    __swift_project_boxed_opaque_existential_1(&v32, *((uint64_t *)&v33 + 1));
    (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v22, v23);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v32);
  }
  else
  {
    v34 = 0;
    v33 = 0u;
    v32 = 0u;
    sub_21C246810((uint64_t)&v32);
  }
  sub_21C247C40();
  sub_21C24722C();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v35);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v36);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v37);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v38);
}

uint64_t sub_21C245718@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t *boxed_opaque_existential_1;
  _BYTE v17[40];
  _QWORD v18[3];
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  _BYTE v22[40];

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_255249DD0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = &v17[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_21C247C58();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25524D8F8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25524D900);
  if (swift_dynamicCast())
  {
    sub_21C1EB66C(&v21, (uint64_t)v18);
    v9 = v19;
    v10 = v20;
    v11 = __swift_project_boxed_opaque_existential_1(v18, v19);
    MEMORY[0x24BDAC7A8](v11);
    v13 = &v17[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
    (*(void (**)(_BYTE *))(v14 + 16))(v13);
    sub_21C1F2ED8(a2, (uint64_t)v8);
    sub_21C1EE2C8(a1, (uint64_t)v17);
    a3[3] = type metadata accessor for RegistryHostProvider(0);
    a3[4] = sub_21C1FBD14(&qword_25524D908, type metadata accessor for RegistryHostProvider, (uint64_t)&unk_21C24996C);
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(a3);
    sub_21C1F1250((uint64_t)v13, (uint64_t)v8, (uint64_t)v17, v9, v10, (uint64_t)boxed_opaque_existential_1);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v18);
  }
  else
  {
    sub_21C2458D8(a1, a3);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
}

uint64_t sub_21C2458D8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  void (*v20)(_QWORD *__return_ptr);
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t *boxed_opaque_existential_1;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  __int128 v31;
  __int128 v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t *v35;
  char *v36;
  uint64_t (*v37)(void);
  void *v38;
  uint64_t v39;
  uint64_t *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t *v46;
  uint64_t v47;
  char *v48;
  uint64_t (*v49)(void);
  void *v50;
  uint64_t v51;
  uint64_t *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t DynamicType;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t *v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t *v74;
  uint64_t v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  uint64_t v79;
  _QWORD v80[3];
  uint64_t v81;
  uint64_t v82;
  _BYTE v83[24];
  uint64_t *v84;

  v75 = a1;
  v84 = a2;
  v67 = sub_21C247C28();
  v66 = *(_QWORD *)(v67 - 8);
  MEMORY[0x24BDAC7A8](v67);
  v65 = (char *)&v62 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v70 = sub_21C247CF4();
  v64 = *(_QWORD *)(v70 - 8);
  v3 = MEMORY[0x24BDAC7A8](v70);
  v63 = (char *)&v62 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v68 = (char *)&v62 - v5;
  v74 = (uint64_t *)sub_21C247CDC();
  v73 = *(v74 - 1);
  v6 = MEMORY[0x24BDAC7A8](v74);
  v69 = (char *)&v62 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v62 - v8;
  v72 = sub_21C247658();
  v71 = *(_QWORD *)(v72 - 8);
  MEMORY[0x24BDAC7A8](v72);
  v11 = (char *)&v62 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21C247C58();
  v12 = sub_21C247FD0();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(_QWORD *)(v13 + 64);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (v14 + 15) & 0xFFFFFFFFFFFFFFF0;
  v16 = (char *)&v62 - v15;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25524D8F8);
  v17 = swift_dynamicCast();
  if ((_DWORD)v17)
  {
    v74 = &v62;
    MEMORY[0x24BDAC7A8](v17);
    v18 = (char *)&v62 - v15;
    v19 = v13;
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v18, v16, v12);
    v20 = (void (*)(_QWORD *__return_ptr))sub_21C247FC4();
    v20(v80);
    swift_release();
    v21 = __swift_project_boxed_opaque_existential_1(v80, v81);
    MEMORY[0x24BDAC7A8](v21);
    (*(void (**)(char *))(v23 + 16))((char *)&v62 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0));
    sub_21C24764C();
    sub_21C1EE2C8(v75, (uint64_t)&v77);
    v24 = type metadata accessor for RegistryHostProvider(0);
    v25 = v84;
    v84[3] = v24;
    v25[4] = sub_21C1FBD14(&qword_25524D908, type metadata accessor for RegistryHostProvider, (uint64_t)&unk_21C24996C);
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v25);
    sub_21C247640();
    (*(void (**)(char *, uint64_t))(v71 + 8))(v11, v72);
    sub_21C1EB66C(&v76, (uint64_t)boxed_opaque_existential_1);
    v27 = (char *)boxed_opaque_existential_1 + *(int *)(v24 + 20);
    v28 = *MEMORY[0x24BE78140];
    v29 = sub_21C246E6C();
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 104))(v27, v28, v29);
    v30 = (char *)boxed_opaque_existential_1 + *(int *)(v24 + 24);
    v31 = v77;
    v32 = v78;
    *((_QWORD *)v30 + 4) = v79;
    *(_OWORD *)v30 = v31;
    *((_OWORD *)v30 + 1) = v32;
    (*(void (**)(char *, uint64_t))(v19 + 8))(v18, v12);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v80);
  }
  else
  {
    v33 = v75;
    v34 = v84;
    v35 = v74;
    if (swift_dynamicCast())
    {
      v36 = v69;
      (*(void (**)(char *, char *, uint64_t *))(v73 + 32))(v69, v9, v35);
      v37 = (uint64_t (*)(void))sub_21C247CD0();
      v38 = (void *)v37();
      swift_release();
      v39 = type metadata accessor for RegistryHostProvider(0);
      v34[3] = v39;
      v34[4] = sub_21C1FBD14(&qword_25524D908, type metadata accessor for RegistryHostProvider, (uint64_t)&unk_21C24996C);
      v40 = __swift_allocate_boxed_opaque_existential_1(v34);
      sub_21C1EE2C8(v33, (uint64_t)v40 + *(int *)(v39 + 24));
      sub_21C1F22C4((uint64_t)v40);

      v41 = (char *)v40 + *(int *)(v39 + 20);
      v42 = *MEMORY[0x24BE78140];
      v43 = sub_21C246E6C();
      (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 104))(v41, v42, v43);
      (*(void (**)(char *, uint64_t *))(v73 + 8))(v36, v35);
    }
    else
    {
      v44 = v68;
      v45 = v70;
      if (!swift_dynamicCast())
      {
        sub_21C247C58();
        __swift_project_boxed_opaque_existential_1(v80, v81);
        DynamicType = swift_getDynamicType();
        v58 = v82;
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v80);
        sub_21C247C58();
        __swift_project_boxed_opaque_existential_1(&v77, *((uint64_t *)&v78 + 1));
        v59 = v65;
        sub_21C247AFC();
        v60 = type metadata accessor for RegistryPreview.UnknownPreviewSource(0);
        sub_21C1FBD14(&qword_25524D910, type metadata accessor for RegistryPreview.UnknownPreviewSource, (uint64_t)&unk_21C24D128);
        swift_allocError();
        *v61 = DynamicType;
        v61[1] = v58;
        (*(void (**)(char *, char *, uint64_t))(v66 + 32))((char *)v61 + *(int *)(v60 + 20), v59, v67);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v77);
        swift_willThrow();
        return __swift_destroy_boxed_opaque_existential_1((uint64_t)v83);
      }
      v46 = v34;
      v47 = v64;
      v48 = v63;
      (*(void (**)(char *, char *, uint64_t))(v64 + 32))(v63, v44, v45);
      v49 = (uint64_t (*)(void))sub_21C247CD0();
      v50 = (void *)v49();
      swift_release();
      v51 = type metadata accessor for RegistryHostProvider(0);
      v46[3] = v51;
      v46[4] = sub_21C1FBD14(&qword_25524D908, type metadata accessor for RegistryHostProvider, (uint64_t)&unk_21C24996C);
      v52 = __swift_allocate_boxed_opaque_existential_1(v46);
      sub_21C1EE2C8(v33, (uint64_t)v52 + *(int *)(v51 + 24));
      sub_21C1F2A3C((uint64_t)v52);

      v53 = (char *)v52 + *(int *)(v51 + 20);
      v54 = *MEMORY[0x24BE78140];
      v55 = sub_21C246E6C();
      (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v55 - 8) + 104))(v53, v54, v55);
      (*(void (**)(char *, uint64_t))(v47 + 8))(v48, v45);
    }
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v83);
}

unint64_t sub_21C245FE0()
{
  sub_21C24881C();
  swift_bridgeObjectRelease();
  sub_21C2489E4();
  sub_21C248504();
  swift_bridgeObjectRelease();
  sub_21C248504();
  type metadata accessor for RegistryPreview.UnknownPreviewSource(0);
  sub_21C247C1C();
  sub_21C248504();
  swift_bridgeObjectRelease();
  return 0xD000000000000014;
}

unint64_t sub_21C2460B0()
{
  return 0xD000000000000014;
}

uint64_t sub_21C2460D0()
{
  sub_21C1FBD14(&qword_25524D9C8, type metadata accessor for RegistryPreview.UnknownPreviewSource, (uint64_t)&unk_21C24D090);
  return sub_21C24794C();
}

uint64_t sub_21C246110()
{
  sub_21C1FBD14(&qword_25524D9C8, type metadata accessor for RegistryPreview.UnknownPreviewSource, (uint64_t)&unk_21C24D090);
  return sub_21C24791C();
}

uint64_t sub_21C246154@<X0>(uint64_t a1@<X8>)
{
  return sub_21C245280(a1);
}

uint64_t sub_21C246178()
{
  sub_21C247B80();
  return sub_21C247C4C();
}

uint64_t sub_21C2461AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v5;

  v0 = sub_21C247118();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21C244F5C((uint64_t)v3);
  sub_21C2470F4();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

uint64_t sub_21C246238@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_21C245718(a1, a2, a3);
}

uint64_t sub_21C24624C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  int v4;
  uint64_t v5;
  uint64_t v7;

  v0 = sub_21C247BBC();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v7 - v2;
  sub_21C247BC8();
  v4 = (*(uint64_t (**)(char *, uint64_t))(v1 + 88))(v3, v0);
  if (v4 == *MEMORY[0x24BDC6E58])
    goto LABEL_6;
  if (v4 == *MEMORY[0x24BDC6E60])
  {
    (*(void (**)(char *, uint64_t))(v1 + 96))(v3, v0);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25524A140);
    swift_release();
    v5 = sub_21C247BD4();
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v3, v5);
    return 1;
  }
  if (v4 == *MEMORY[0x24BDC6E50])
    return 1;
LABEL_6:
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return 0;
}

uint64_t *initializeBufferWithCopyOfBuffer for RegistryPreview(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_21C247C64();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_21C246F74();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
  }
  return a1;
}

uint64_t destroy for RegistryPreview(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = sub_21C247C64();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + *(int *)(a2 + 20);
  v6 = sub_21C246F74();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
}

uint64_t initializeWithCopy for RegistryPreview(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = sub_21C247C64();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_21C246F74();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  return a1;
}

uint64_t assignWithCopy for RegistryPreview(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = sub_21C247C64();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_21C246F74();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  return a1;
}

uint64_t initializeWithTake for RegistryPreview(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = sub_21C247C64();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_21C246F74();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  return a1;
}

uint64_t assignWithTake for RegistryPreview(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = sub_21C247C64();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_21C246F74();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for RegistryPreview()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_21C24667C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;

  v6 = sub_21C247C64();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    v8 = sub_21C246F74();
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t storeEnumTagSinglePayload for RegistryPreview()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_21C2466FC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  v8 = sub_21C247C64();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    v10 = sub_21C246F74();
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  }
  return v11(v12, a2, a2, v10);
}

uint64_t sub_21C246778()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_21C247C64();
  if (v1 <= 0x3F)
  {
    result = sub_21C246F74();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t type metadata accessor for RegistryPreview.UnknownPreviewSource(uint64_t a1)
{
  return sub_21C1F2E98(a1, qword_25524D980);
}

uint64_t sub_21C246810(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(qword_25524D920);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

_QWORD *sub_21C246850(_QWORD *a1, uint64_t *a2, uint64_t a3)
{
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v5 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    *a1 = v5;
    a1 = (_QWORD *)(v5 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    v6 = a2[1];
    *a1 = v5;
    a1[1] = v6;
    v7 = *(int *)(a3 + 20);
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = sub_21C247C28();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  }
  return a1;
}

uint64_t sub_21C2468D8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = a1 + *(int *)(a2 + 20);
  v3 = sub_21C247C28();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
}

_OWORD *sub_21C246910(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_21C247C28();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v5, v6, v7);
  return a1;
}

_OWORD *sub_21C24696C(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_21C247C28();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 24))(v5, v6, v7);
  return a1;
}

_OWORD *sub_21C2469C8(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_21C247C28();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

_OWORD *sub_21C246A24(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_21C247C28();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 40))(v5, v6, v7);
  return a1;
}

uint64_t sub_21C246A80()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_21C246A8C(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_21C247C28();
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 20)], a2, v8);
  }
}

uint64_t sub_21C246B08()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_21C246B14(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = sub_21C247C28();
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 20)], a2, a2, v7);
  }
  return result;
}

uint64_t sub_21C246B88()
{
  uint64_t result;
  unint64_t v1;

  result = sub_21C247C28();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_21C246BFC()
{
  return sub_21C1FBD14(&qword_25524D910, type metadata accessor for RegistryPreview.UnknownPreviewSource, (uint64_t)&unk_21C24D128);
}

uint64_t sub_21C246C28()
{
  return sub_21C1FBD14(&qword_25524D9B8, type metadata accessor for RegistryPreview.UnknownPreviewSource, (uint64_t)&unk_21C24D048);
}

uint64_t sub_21C246C54()
{
  return sub_21C1FBD14(&qword_25524D9C0, type metadata accessor for RegistryPreview.UnknownPreviewSource, (uint64_t)&unk_21C24D020);
}

uint64_t sub_21C246C80()
{
  return MEMORY[0x24BDCBE60]();
}

uint64_t sub_21C246C8C()
{
  return MEMORY[0x24BDCBE68]();
}

uint64_t sub_21C246C98()
{
  return MEMORY[0x24BDCBE80]();
}

uint64_t sub_21C246CA4()
{
  return MEMORY[0x24BDCD2F8]();
}

uint64_t sub_21C246CB0()
{
  return MEMORY[0x24BE76168]();
}

uint64_t sub_21C246CBC()
{
  return MEMORY[0x24BE76170]();
}

uint64_t sub_21C246CC8()
{
  return MEMORY[0x24BE77FC0]();
}

uint64_t sub_21C246CD4()
{
  return MEMORY[0x24BDCD898]();
}

uint64_t sub_21C246CE0()
{
  return MEMORY[0x24BDCD8D0]();
}

uint64_t sub_21C246CEC()
{
  return MEMORY[0x24BDCD928]();
}

uint64_t sub_21C246CF8()
{
  return MEMORY[0x24BDCD9B0]();
}

uint64_t sub_21C246D04()
{
  return MEMORY[0x24BDCD9C0]();
}

uint64_t sub_21C246D10()
{
  return MEMORY[0x24BDCD9C8]();
}

uint64_t sub_21C246D1C()
{
  return MEMORY[0x24BDCD9F8]();
}

uint64_t sub_21C246D28()
{
  return MEMORY[0x24BDCDAC0]();
}

uint64_t sub_21C246D34()
{
  return MEMORY[0x24BDCEA40]();
}

uint64_t sub_21C246D40()
{
  return MEMORY[0x24BDCEA58]();
}

uint64_t sub_21C246D4C()
{
  return MEMORY[0x24BEC6460]();
}

uint64_t sub_21C246D58()
{
  return MEMORY[0x24BEC6488]();
}

uint64_t sub_21C246D64()
{
  return MEMORY[0x24BEC6490]();
}

uint64_t sub_21C246D70()
{
  return MEMORY[0x24BEC6498]();
}

uint64_t sub_21C246D7C()
{
  return MEMORY[0x24BEC64A0]();
}

uint64_t sub_21C246D88()
{
  return MEMORY[0x24BEC64A8]();
}

uint64_t sub_21C246D94()
{
  return MEMORY[0x24BE78660]();
}

uint64_t sub_21C246DA0()
{
  return MEMORY[0x24BE78688]();
}

uint64_t sub_21C246DAC()
{
  return MEMORY[0x24BE786A0]();
}

uint64_t sub_21C246DB8()
{
  return MEMORY[0x24BE786B0]();
}

uint64_t sub_21C246DC4()
{
  return MEMORY[0x24BE786C0]();
}

uint64_t sub_21C246DD0()
{
  return MEMORY[0x24BE786C8]();
}

uint64_t sub_21C246DDC()
{
  return MEMORY[0x24BE786D8]();
}

uint64_t sub_21C246DE8()
{
  return MEMORY[0x24BE786E0]();
}

uint64_t sub_21C246DF4()
{
  return MEMORY[0x24BE786E8]();
}

uint64_t sub_21C246E00()
{
  return MEMORY[0x24BE786F0]();
}

uint64_t sub_21C246E0C()
{
  return MEMORY[0x24BE78028]();
}

uint64_t sub_21C246E18()
{
  return MEMORY[0x24BE78060]();
}

uint64_t sub_21C246E24()
{
  return MEMORY[0x24BE78068]();
}

uint64_t sub_21C246E30()
{
  return MEMORY[0x24BE780A8]();
}

uint64_t sub_21C246E3C()
{
  return MEMORY[0x24BE780B0]();
}

uint64_t sub_21C246E48()
{
  return MEMORY[0x24BE780C8]();
}

uint64_t sub_21C246E54()
{
  return MEMORY[0x24BE780E8]();
}

uint64_t sub_21C246E60()
{
  return MEMORY[0x24BE780F8]();
}

uint64_t sub_21C246E6C()
{
  return MEMORY[0x24BE78158]();
}

uint64_t sub_21C246E78()
{
  return MEMORY[0x24BE781D8]();
}

uint64_t sub_21C246E84()
{
  return MEMORY[0x24BE78208]();
}

uint64_t sub_21C246E90()
{
  return MEMORY[0x24BE78218]();
}

uint64_t sub_21C246E9C()
{
  return MEMORY[0x24BE78228]();
}

uint64_t sub_21C246EA8()
{
  return MEMORY[0x24BE78278]();
}

uint64_t sub_21C246EB4()
{
  return MEMORY[0x24BE782B8]();
}

uint64_t sub_21C246EC0()
{
  return MEMORY[0x24BE78740]();
}

uint64_t sub_21C246ECC()
{
  return MEMORY[0x24BE78748]();
}

uint64_t sub_21C246ED8()
{
  return MEMORY[0x24BE78750]();
}

uint64_t sub_21C246EE4()
{
  return MEMORY[0x24BE78760]();
}

uint64_t sub_21C246EF0()
{
  return MEMORY[0x24BE78778]();
}

uint64_t sub_21C246EFC()
{
  return MEMORY[0x24BE787A0]();
}

uint64_t sub_21C246F08()
{
  return MEMORY[0x24BE787B8]();
}

uint64_t sub_21C246F14()
{
  return MEMORY[0x24BE787D0]();
}

uint64_t sub_21C246F20()
{
  return MEMORY[0x24BE78808]();
}

uint64_t sub_21C246F2C()
{
  return MEMORY[0x24BE78810]();
}

uint64_t sub_21C246F38()
{
  return MEMORY[0x24BE78818]();
}

uint64_t sub_21C246F44()
{
  return MEMORY[0x24BE78840]();
}

uint64_t sub_21C246F50()
{
  return MEMORY[0x24BE78848]();
}

uint64_t sub_21C246F5C()
{
  return MEMORY[0x24BE78850]();
}

uint64_t sub_21C246F68()
{
  return MEMORY[0x24BE7D008]();
}

uint64_t sub_21C246F74()
{
  return MEMORY[0x24BE76F98]();
}

uint64_t sub_21C246F80()
{
  return MEMORY[0x24BE76FB0]();
}

uint64_t sub_21C246F8C()
{
  return MEMORY[0x24BE76FC8]();
}

uint64_t sub_21C246F98()
{
  return MEMORY[0x24BE76FD0]();
}

uint64_t sub_21C246FA4()
{
  return MEMORY[0x24BE77070]();
}

uint64_t sub_21C246FB0()
{
  return MEMORY[0x24BE77078]();
}

uint64_t sub_21C246FBC()
{
  return MEMORY[0x24BE770A0]();
}

uint64_t sub_21C246FC8()
{
  return MEMORY[0x24BE770A8]();
}

uint64_t sub_21C246FD4()
{
  return MEMORY[0x24BE770B0]();
}

uint64_t sub_21C246FE0()
{
  return MEMORY[0x24BE770B8]();
}

uint64_t sub_21C246FEC()
{
  return MEMORY[0x24BE770C0]();
}

uint64_t sub_21C246FF8()
{
  return MEMORY[0x24BE770C8]();
}

uint64_t sub_21C247004()
{
  return MEMORY[0x24BE770D8]();
}

uint64_t sub_21C247010()
{
  return MEMORY[0x24BE770E0]();
}

uint64_t sub_21C24701C()
{
  return MEMORY[0x24BE770E8]();
}

uint64_t sub_21C247028()
{
  return MEMORY[0x24BE770F0]();
}

uint64_t sub_21C247034()
{
  return MEMORY[0x24BE770F8]();
}

uint64_t sub_21C247040()
{
  return MEMORY[0x24BE77100]();
}

uint64_t sub_21C24704C()
{
  return MEMORY[0x24BE77108]();
}

uint64_t sub_21C247058()
{
  return MEMORY[0x24BE77110]();
}

uint64_t sub_21C247064()
{
  return MEMORY[0x24BE77118]();
}

uint64_t sub_21C247070()
{
  return MEMORY[0x24BE77120]();
}

uint64_t sub_21C24707C()
{
  return MEMORY[0x24BE77128]();
}

uint64_t sub_21C247088()
{
  return MEMORY[0x24BE77130]();
}

uint64_t sub_21C247094()
{
  return MEMORY[0x24BE77150]();
}

uint64_t sub_21C2470A0()
{
  return MEMORY[0x24BE771E0]();
}

uint64_t sub_21C2470AC()
{
  return MEMORY[0x24BE771E8]();
}

uint64_t sub_21C2470B8()
{
  return MEMORY[0x24BE77200]();
}

uint64_t sub_21C2470C4()
{
  return MEMORY[0x24BE77208]();
}

uint64_t sub_21C2470D0()
{
  return MEMORY[0x24BE77240]();
}

uint64_t sub_21C2470DC()
{
  return MEMORY[0x24BE782E0]();
}

uint64_t sub_21C2470E8()
{
  return MEMORY[0x24BE77298]();
}

uint64_t sub_21C2470F4()
{
  return MEMORY[0x24BE772B0]();
}

uint64_t sub_21C247100()
{
  return MEMORY[0x24BE772D0]();
}

uint64_t sub_21C24710C()
{
  return MEMORY[0x24BE772D8]();
}

uint64_t sub_21C247118()
{
  return MEMORY[0x24BE772E0]();
}

uint64_t sub_21C247124()
{
  return MEMORY[0x24BE77308]();
}

uint64_t sub_21C247130()
{
  return MEMORY[0x24BE77318]();
}

uint64_t sub_21C24713C()
{
  return MEMORY[0x24BE77320]();
}

uint64_t sub_21C247148()
{
  return MEMORY[0x24BE77328]();
}

uint64_t sub_21C247154()
{
  return MEMORY[0x24BE77330]();
}

uint64_t sub_21C247160()
{
  return MEMORY[0x24BE77348]();
}

uint64_t sub_21C24716C()
{
  return MEMORY[0x24BE77398]();
}

uint64_t sub_21C247178()
{
  return MEMORY[0x24BE773D0]();
}

uint64_t sub_21C247184()
{
  return MEMORY[0x24BE773D8]();
}

uint64_t sub_21C247190()
{
  return MEMORY[0x24BE773E0]();
}

uint64_t sub_21C24719C()
{
  return MEMORY[0x24BE774B0]();
}

uint64_t sub_21C2471A8()
{
  return MEMORY[0x24BE774C0]();
}

uint64_t sub_21C2471B4()
{
  return MEMORY[0x24BE774C8]();
}

uint64_t sub_21C2471C0()
{
  return MEMORY[0x24BE774D0]();
}

uint64_t sub_21C2471CC()
{
  return MEMORY[0x24BE774E0]();
}

uint64_t sub_21C2471D8()
{
  return MEMORY[0x24BE77560]();
}

uint64_t sub_21C2471E4()
{
  return MEMORY[0x24BE77570]();
}

uint64_t sub_21C2471F0()
{
  return MEMORY[0x24BE775D0]();
}

uint64_t sub_21C2471FC()
{
  return MEMORY[0x24BE775D8]();
}

uint64_t sub_21C247208()
{
  return MEMORY[0x24BE775E8]();
}

uint64_t sub_21C247214()
{
  return MEMORY[0x24BE77600]();
}

uint64_t sub_21C247220()
{
  return MEMORY[0x24BE77668]();
}

uint64_t sub_21C24722C()
{
  return MEMORY[0x24BE77690]();
}

uint64_t sub_21C247238()
{
  return MEMORY[0x24BE77698]();
}

uint64_t sub_21C247244()
{
  return MEMORY[0x24BE776B0]();
}

uint64_t sub_21C247250()
{
  return MEMORY[0x24BE776B8]();
}

uint64_t sub_21C24725C()
{
  return MEMORY[0x24BE776D0]();
}

uint64_t sub_21C247268()
{
  return MEMORY[0x24BE776D8]();
}

uint64_t sub_21C247274()
{
  return MEMORY[0x24BE776E0]();
}

uint64_t sub_21C247280()
{
  return MEMORY[0x24BE776E8]();
}

uint64_t sub_21C24728C()
{
  return MEMORY[0x24BE77700]();
}

uint64_t sub_21C247298()
{
  return MEMORY[0x24BE77708]();
}

uint64_t sub_21C2472A4()
{
  return MEMORY[0x24BE77710]();
}

uint64_t sub_21C2472B0()
{
  return MEMORY[0x24BE77718]();
}

uint64_t sub_21C2472BC()
{
  return MEMORY[0x24BE777A8]();
}

uint64_t sub_21C2472C8()
{
  return MEMORY[0x24BE777B0]();
}

uint64_t sub_21C2472D4()
{
  return MEMORY[0x24BE777B8]();
}

uint64_t sub_21C2472E0()
{
  return MEMORY[0x24BE777F0]();
}

uint64_t sub_21C2472EC()
{
  return MEMORY[0x24BE77860]();
}

uint64_t sub_21C2472F8()
{
  return MEMORY[0x24BE77868]();
}

uint64_t sub_21C247304()
{
  return MEMORY[0x24BE77898]();
}

uint64_t sub_21C247310()
{
  return MEMORY[0x24BE778E0]();
}

uint64_t sub_21C24731C()
{
  return MEMORY[0x24BE778F8]();
}

uint64_t sub_21C247328()
{
  return MEMORY[0x24BE77920]();
}

uint64_t sub_21C247334()
{
  return MEMORY[0x24BE77928]();
}

uint64_t sub_21C247340()
{
  return MEMORY[0x24BE77930]();
}

uint64_t sub_21C24734C()
{
  return MEMORY[0x24BE77938]();
}

uint64_t sub_21C247358()
{
  return MEMORY[0x24BE77940]();
}

uint64_t sub_21C247364()
{
  return MEMORY[0x24BE77948]();
}

uint64_t sub_21C247370()
{
  return MEMORY[0x24BE77950]();
}

uint64_t sub_21C24737C()
{
  return MEMORY[0x24BE77958]();
}

uint64_t sub_21C247388()
{
  return MEMORY[0x24BE77960]();
}

uint64_t sub_21C247394()
{
  return MEMORY[0x24BE779E8]();
}

uint64_t sub_21C2473A0()
{
  return MEMORY[0x24BE779F0]();
}

uint64_t sub_21C2473AC()
{
  return MEMORY[0x24BE779F8]();
}

uint64_t sub_21C2473B8()
{
  return MEMORY[0x24BE77A00]();
}

uint64_t sub_21C2473C4()
{
  return MEMORY[0x24BE77A78]();
}

uint64_t sub_21C2473D0()
{
  return MEMORY[0x24BE77A88]();
}

uint64_t sub_21C2473DC()
{
  return MEMORY[0x24BE77A90]();
}

uint64_t sub_21C2473E8()
{
  return MEMORY[0x24BE77A98]();
}

uint64_t sub_21C2473F4()
{
  return MEMORY[0x24BE77B50]();
}

uint64_t sub_21C247400()
{
  return MEMORY[0x24BE77B68]();
}

uint64_t sub_21C24740C()
{
  return MEMORY[0x24BE77B70]();
}

uint64_t sub_21C247418()
{
  return MEMORY[0x24BE77B78]();
}

uint64_t sub_21C247424()
{
  return MEMORY[0x24BE77C18]();
}

uint64_t sub_21C247430()
{
  return MEMORY[0x24BE77C20]();
}

uint64_t sub_21C24743C()
{
  return MEMORY[0x24BE77C28]();
}

uint64_t sub_21C247448()
{
  return MEMORY[0x24BE77C30]();
}

uint64_t sub_21C247454()
{
  return MEMORY[0x24BE77C40]();
}

uint64_t sub_21C247460()
{
  return MEMORY[0x24BE77C48]();
}

uint64_t sub_21C24746C()
{
  return MEMORY[0x24BE77CA8]();
}

uint64_t sub_21C247478()
{
  return MEMORY[0x24BE77CB0]();
}

uint64_t sub_21C247484()
{
  return MEMORY[0x24BE77D10]();
}

uint64_t sub_21C247490()
{
  return MEMORY[0x24BE77D18]();
}

uint64_t sub_21C24749C()
{
  return MEMORY[0x24BE77D38]();
}

uint64_t sub_21C2474A8()
{
  return MEMORY[0x24BE77D40]();
}

uint64_t sub_21C2474B4()
{
  return MEMORY[0x24BE77D48]();
}

uint64_t sub_21C2474C0()
{
  return MEMORY[0x24BE77D50]();
}

uint64_t sub_21C2474CC()
{
  return MEMORY[0x24BE77D58]();
}

uint64_t sub_21C2474D8()
{
  return MEMORY[0x24BE77D60]();
}

uint64_t sub_21C2474E4()
{
  return MEMORY[0x24BE77D78]();
}

uint64_t sub_21C2474F0()
{
  return MEMORY[0x24BE77D80]();
}

uint64_t sub_21C2474FC()
{
  return MEMORY[0x24BE77D88]();
}

uint64_t sub_21C247508()
{
  return MEMORY[0x24BE77E48]();
}

uint64_t sub_21C247514()
{
  return MEMORY[0x24BE77E50]();
}

uint64_t sub_21C247520()
{
  return MEMORY[0x24BE77E58]();
}

uint64_t sub_21C24752C()
{
  return MEMORY[0x24BE77E60]();
}

uint64_t sub_21C247538()
{
  return MEMORY[0x24BE77E80]();
}

uint64_t sub_21C247544()
{
  return MEMORY[0x24BE77E88]();
}

uint64_t sub_21C247550()
{
  return MEMORY[0x24BE77E98]();
}

uint64_t sub_21C24755C()
{
  return MEMORY[0x24BE77EB0]();
}

uint64_t sub_21C247568()
{
  return MEMORY[0x24BE77EB8]();
}

uint64_t sub_21C247574()
{
  return MEMORY[0x24BE77EC0]();
}

uint64_t sub_21C247580()
{
  return MEMORY[0x24BE77EF0]();
}

uint64_t sub_21C24758C()
{
  return MEMORY[0x24BE77EF8]();
}

uint64_t sub_21C247598()
{
  return MEMORY[0x24BE77F30]();
}

uint64_t sub_21C2475A4()
{
  return MEMORY[0x24BE77F38]();
}

uint64_t sub_21C2475B0()
{
  return MEMORY[0x24BE77F40]();
}

uint64_t sub_21C2475BC()
{
  return MEMORY[0x24BE77F48]();
}

uint64_t sub_21C2475C8()
{
  return MEMORY[0x24BE782E8]();
}

uint64_t sub_21C2475D4()
{
  return MEMORY[0x24BE782F0]();
}

uint64_t sub_21C2475E0()
{
  return MEMORY[0x24BE78300]();
}

uint64_t sub_21C2475EC()
{
  return MEMORY[0x24BE78308]();
}

uint64_t sub_21C2475F8()
{
  return MEMORY[0x24BE78310]();
}

uint64_t sub_21C247604()
{
  return MEMORY[0x24BE78318]();
}

uint64_t sub_21C247610()
{
  return MEMORY[0x24BE78320]();
}

uint64_t sub_21C24761C()
{
  return MEMORY[0x24BE78330]();
}

uint64_t sub_21C247628()
{
  return MEMORY[0x24BE78340]();
}

uint64_t sub_21C247634()
{
  return MEMORY[0x24BE78348]();
}

uint64_t sub_21C247640()
{
  return MEMORY[0x24BE78358]();
}

uint64_t sub_21C24764C()
{
  return MEMORY[0x24BE78360]();
}

uint64_t sub_21C247658()
{
  return MEMORY[0x24BE78368]();
}

uint64_t sub_21C247664()
{
  return MEMORY[0x24BE78378]();
}

uint64_t sub_21C247670()
{
  return MEMORY[0x24BE78390]();
}

uint64_t sub_21C24767C()
{
  return MEMORY[0x24BE783A0]();
}

uint64_t sub_21C247688()
{
  return MEMORY[0x24BE783A8]();
}

uint64_t sub_21C247694()
{
  return MEMORY[0x24BE783B8]();
}

uint64_t sub_21C2476A0()
{
  return MEMORY[0x24BE783C0]();
}

uint64_t sub_21C2476AC()
{
  return MEMORY[0x24BE783C8]();
}

uint64_t sub_21C2476B8()
{
  return MEMORY[0x24BE783D0]();
}

uint64_t sub_21C2476C4()
{
  return MEMORY[0x24BE783D8]();
}

uint64_t sub_21C2476D0()
{
  return MEMORY[0x24BE783E0]();
}

uint64_t sub_21C2476DC()
{
  return MEMORY[0x24BE783E8]();
}

uint64_t sub_21C2476E8()
{
  return MEMORY[0x24BE783F0]();
}

uint64_t sub_21C2476F4()
{
  return MEMORY[0x24BE78418]();
}

uint64_t sub_21C247700()
{
  return MEMORY[0x24BE78420]();
}

uint64_t sub_21C24770C()
{
  return MEMORY[0x24BE78428]();
}

uint64_t sub_21C247718()
{
  return MEMORY[0x24BE78430]();
}

uint64_t sub_21C247724()
{
  return MEMORY[0x24BE78448]();
}

uint64_t sub_21C247730()
{
  return MEMORY[0x24BE78458]();
}

uint64_t sub_21C24773C()
{
  return MEMORY[0x24BE78468]();
}

uint64_t sub_21C247748()
{
  return MEMORY[0x24BE78470]();
}

uint64_t sub_21C247754()
{
  return MEMORY[0x24BE78478]();
}

uint64_t sub_21C247760()
{
  return MEMORY[0x24BE78480]();
}

uint64_t sub_21C24776C()
{
  return MEMORY[0x24BE78488]();
}

uint64_t sub_21C247778()
{
  return MEMORY[0x24BE784B8]();
}

uint64_t sub_21C247784()
{
  return MEMORY[0x24BE784C0]();
}

uint64_t sub_21C247790()
{
  return MEMORY[0x24BE784C8]();
}

uint64_t sub_21C24779C()
{
  return MEMORY[0x24BE784D0]();
}

uint64_t sub_21C2477A8()
{
  return MEMORY[0x24BE784D8]();
}

uint64_t sub_21C2477B4()
{
  return MEMORY[0x24BE78518]();
}

uint64_t sub_21C2477C0()
{
  return MEMORY[0x24BE78560]();
}

uint64_t sub_21C2477CC()
{
  return MEMORY[0x24BE78578]();
}

uint64_t sub_21C2477D8()
{
  return MEMORY[0x24BE78588]();
}

uint64_t sub_21C2477E4()
{
  return MEMORY[0x24BE761B0]();
}

uint64_t sub_21C2477F0()
{
  return MEMORY[0x24BE761B8]();
}

uint64_t sub_21C2477FC()
{
  return MEMORY[0x24BE761C8]();
}

uint64_t sub_21C247808()
{
  return MEMORY[0x24BE761D0]();
}

uint64_t sub_21C247814()
{
  return MEMORY[0x24BE761E0]();
}

uint64_t sub_21C247820()
{
  return MEMORY[0x24BE76370]();
}

uint64_t sub_21C24782C()
{
  return MEMORY[0x24BE763B0]();
}

uint64_t sub_21C247838()
{
  return MEMORY[0x24BE763B8]();
}

uint64_t sub_21C247844()
{
  return MEMORY[0x24BE764C0]();
}

uint64_t sub_21C247850()
{
  return MEMORY[0x24BE764E0]();
}

uint64_t sub_21C24785C()
{
  return MEMORY[0x24BE764E8]();
}

uint64_t _s17PreviewsInjection10EntryPointPAAyt12StaticOutputRtzrlE6encode06staticF00A12FoundationOS12PropertyListVyt_tFZ_0()
{
  return MEMORY[0x24BE764F8]();
}

uint64_t sub_21C247874()
{
  return MEMORY[0x24BE76528]();
}

uint64_t sub_21C247880()
{
  return MEMORY[0x24BE76530]();
}

uint64_t sub_21C24788C()
{
  return MEMORY[0x24BE76590]();
}

uint64_t sub_21C247898()
{
  return MEMORY[0x24BE765A0]();
}

uint64_t sub_21C2478A4()
{
  return MEMORY[0x24BE765B0]();
}

uint64_t sub_21C2478B0()
{
  return MEMORY[0x24BE76648]();
}

uint64_t sub_21C2478BC()
{
  return MEMORY[0x24BE76708]();
}

uint64_t sub_21C2478C8()
{
  return MEMORY[0x24BE76710]();
}

uint64_t sub_21C2478D4()
{
  return MEMORY[0x24BE76720]();
}

uint64_t sub_21C2478E0()
{
  return MEMORY[0x24BE76728]();
}

uint64_t sub_21C2478EC()
{
  return MEMORY[0x24BE76738]();
}

uint64_t sub_21C2478F8()
{
  return MEMORY[0x24BE76740]();
}

uint64_t sub_21C247904()
{
  return MEMORY[0x24BE76748]();
}

uint64_t sub_21C247910()
{
  return MEMORY[0x24BE76750]();
}

uint64_t sub_21C24791C()
{
  return MEMORY[0x24BE76758]();
}

uint64_t sub_21C247928()
{
  return MEMORY[0x24BE76760]();
}

uint64_t sub_21C247934()
{
  return MEMORY[0x24BE76768]();
}

uint64_t sub_21C247940()
{
  return MEMORY[0x24BE76770]();
}

uint64_t sub_21C24794C()
{
  return MEMORY[0x24BE76778]();
}

uint64_t sub_21C247958()
{
  return MEMORY[0x24BE76780]();
}

uint64_t sub_21C247964()
{
  return MEMORY[0x24BE76788]();
}

uint64_t sub_21C247970()
{
  return MEMORY[0x24BE76790]();
}

uint64_t sub_21C24797C()
{
  return MEMORY[0x24BE767A0]();
}

uint64_t sub_21C247988()
{
  return MEMORY[0x24BE767A8]();
}

uint64_t sub_21C247994()
{
  return MEMORY[0x24BE767B0]();
}

uint64_t sub_21C2479A0()
{
  return MEMORY[0x24BE767B8]();
}

uint64_t sub_21C2479AC()
{
  return MEMORY[0x24BE76808]();
}

uint64_t sub_21C2479B8()
{
  return MEMORY[0x24BE768A0]();
}

uint64_t sub_21C2479C4()
{
  return MEMORY[0x24BE768A8]();
}

uint64_t sub_21C2479D0()
{
  return MEMORY[0x24BE76948]();
}

uint64_t sub_21C2479DC()
{
  return MEMORY[0x24BE76960]();
}

uint64_t sub_21C2479E8()
{
  return MEMORY[0x24BE76968]();
}

uint64_t sub_21C2479F4()
{
  return MEMORY[0x24BE76970]();
}

uint64_t sub_21C247A00()
{
  return MEMORY[0x24BE76988]();
}

uint64_t sub_21C247A0C()
{
  return MEMORY[0x24BE769A8]();
}

uint64_t sub_21C247A18()
{
  return MEMORY[0x24BE769B0]();
}

uint64_t sub_21C247A24()
{
  return MEMORY[0x24BE769D8]();
}

uint64_t sub_21C247A30()
{
  return MEMORY[0x24BE769E0]();
}

uint64_t sub_21C247A3C()
{
  return MEMORY[0x24BE76A00]();
}

uint64_t sub_21C247A48()
{
  return MEMORY[0x24BE76A08]();
}

uint64_t sub_21C247A54()
{
  return MEMORY[0x24BE76A18]();
}

uint64_t sub_21C247A60()
{
  return MEMORY[0x24BE76A28]();
}

uint64_t sub_21C247A6C()
{
  return MEMORY[0x24BE76A30]();
}

uint64_t sub_21C247A78()
{
  return MEMORY[0x24BE76AE8]();
}

uint64_t sub_21C247A84()
{
  return MEMORY[0x24BE76B70]();
}

uint64_t sub_21C247A90()
{
  return MEMORY[0x24BE76B98]();
}

uint64_t sub_21C247A9C()
{
  return MEMORY[0x24BE76C00]();
}

uint64_t sub_21C247AA8()
{
  return MEMORY[0x24BE76C10]();
}

uint64_t sub_21C247AB4()
{
  return MEMORY[0x24BE76C18]();
}

uint64_t sub_21C247AC0()
{
  return MEMORY[0x24BE76C20]();
}

uint64_t sub_21C247ACC()
{
  return MEMORY[0x24BDC6CF0]();
}

uint64_t sub_21C247AD8()
{
  return MEMORY[0x24BDC6CF8]();
}

uint64_t sub_21C247AE4()
{
  return MEMORY[0x24BDC6D00]();
}

uint64_t sub_21C247AF0()
{
  return MEMORY[0x24BDC6D80]();
}

uint64_t sub_21C247AFC()
{
  return MEMORY[0x24BDC6D88]();
}

uint64_t sub_21C247B08()
{
  return MEMORY[0x24BDC6D90]();
}

uint64_t sub_21C247B14()
{
  return MEMORY[0x24BDC6D98]();
}

uint64_t sub_21C247B20()
{
  return MEMORY[0x24BDC6DA8]();
}

uint64_t sub_21C247B2C()
{
  return MEMORY[0x24BDC6DB0]();
}

uint64_t sub_21C247B38()
{
  return MEMORY[0x24BDC6DB8]();
}

uint64_t sub_21C247B44()
{
  return MEMORY[0x24BDC6DC0]();
}

uint64_t sub_21C247B50()
{
  return MEMORY[0x24BDC6DD8]();
}

uint64_t sub_21C247B5C()
{
  return MEMORY[0x24BDC6DE0]();
}

uint64_t sub_21C247B68()
{
  return MEMORY[0x24BDC6DE8]();
}

uint64_t sub_21C247B74()
{
  return MEMORY[0x24BDC6DF0]();
}

uint64_t sub_21C247B80()
{
  return MEMORY[0x24BDC6E18]();
}

uint64_t sub_21C247B8C()
{
  return MEMORY[0x24BDC6E28]();
}

uint64_t sub_21C247B98()
{
  return MEMORY[0x24BDC6E30]();
}

uint64_t sub_21C247BA4()
{
  return MEMORY[0x24BDC6E38]();
}

uint64_t sub_21C247BB0()
{
  return MEMORY[0x24BDC6E40]();
}

uint64_t sub_21C247BBC()
{
  return MEMORY[0x24BDC6E68]();
}

uint64_t sub_21C247BC8()
{
  return MEMORY[0x24BDC6E70]();
}

uint64_t sub_21C247BD4()
{
  return MEMORY[0x24BDC6ED0]();
}

uint64_t sub_21C247BE0()
{
  return MEMORY[0x24BDC6EF8]();
}

uint64_t sub_21C247BEC()
{
  return MEMORY[0x24BE78590]();
}

uint64_t sub_21C247BF8()
{
  return MEMORY[0x24BDC6F20]();
}

uint64_t sub_21C247C04()
{
  return MEMORY[0x24BE78598]();
}

uint64_t sub_21C247C10()
{
  return MEMORY[0x24BDEADC0]();
}

uint64_t sub_21C247C1C()
{
  return MEMORY[0x24BDC6F28]();
}

uint64_t sub_21C247C28()
{
  return MEMORY[0x24BDC6F30]();
}

uint64_t sub_21C247C34()
{
  return MEMORY[0x24BDC6F48]();
}

uint64_t sub_21C247C40()
{
  return MEMORY[0x24BDC6F60]();
}

uint64_t sub_21C247C4C()
{
  return MEMORY[0x24BDC6F68]();
}

uint64_t sub_21C247C58()
{
  return MEMORY[0x24BDC6F70]();
}

uint64_t sub_21C247C64()
{
  return MEMORY[0x24BDC6F78]();
}

uint64_t sub_21C247C70()
{
  return MEMORY[0x24BEE76F0]();
}

uint64_t sub_21C247C7C()
{
  return MEMORY[0x24BE76C70]();
}

uint64_t sub_21C247C88()
{
  return MEMORY[0x24BEE7828]();
}

uint64_t sub_21C247C94()
{
  return MEMORY[0x24BE78708]();
}

uint64_t sub_21C247CA0()
{
  return MEMORY[0x24BE76C80]();
}

uint64_t sub_21C247CAC()
{
  return MEMORY[0x24BE76C90]();
}

uint64_t sub_21C247CB8()
{
  return MEMORY[0x24BEE78A8]();
}

uint64_t sub_21C247CC4()
{
  return MEMORY[0x24BEE78D8]();
}

uint64_t sub_21C247CD0()
{
  return MEMORY[0x24BEBC260]();
}

uint64_t sub_21C247CDC()
{
  return MEMORY[0x24BEBC268]();
}

uint64_t sub_21C247CE8()
{
  return MEMORY[0x24BEBC878]();
}

uint64_t sub_21C247CF4()
{
  return MEMORY[0x24BEBC880]();
}

uint64_t sub_21C247D00()
{
  return MEMORY[0x24BEE76D8]();
}

uint64_t sub_21C247D0C()
{
  return MEMORY[0x24BDB9C48]();
}

uint64_t sub_21C247D18()
{
  return MEMORY[0x24BDB9E98]();
}

uint64_t sub_21C247D24()
{
  return MEMORY[0x24BDB9EC0]();
}

uint64_t sub_21C247D30()
{
  return MEMORY[0x24BDB9EC8]();
}

uint64_t sub_21C247D3C()
{
  return MEMORY[0x24BDB9ED0]();
}

uint64_t sub_21C247D48()
{
  return MEMORY[0x24BDB9EF0]();
}

uint64_t sub_21C247D54()
{
  return MEMORY[0x24BDEAE50]();
}

uint64_t sub_21C247D60()
{
  return MEMORY[0x24BDEAE58]();
}

uint64_t sub_21C247D6C()
{
  return MEMORY[0x24BDEAE98]();
}

uint64_t sub_21C247D78()
{
  return MEMORY[0x24BDEAEB0]();
}

uint64_t sub_21C247D84()
{
  return MEMORY[0x24BDEAEF8]();
}

uint64_t sub_21C247D90()
{
  return MEMORY[0x24BDEAF00]();
}

uint64_t sub_21C247D9C()
{
  return MEMORY[0x24BDEB040]();
}

uint64_t sub_21C247DA8()
{
  return MEMORY[0x24BDEB3E0]();
}

uint64_t sub_21C247DB4()
{
  return MEMORY[0x24BDEB418]();
}

uint64_t sub_21C247DC0()
{
  return MEMORY[0x24BDEB560]();
}

uint64_t sub_21C247DCC()
{
  return MEMORY[0x24BDEB7B8]();
}

uint64_t sub_21C247DD8()
{
  return MEMORY[0x24BDEBDE0]();
}

uint64_t sub_21C247DE4()
{
  return MEMORY[0x24BDEBDF0]();
}

uint64_t sub_21C247DF0()
{
  return MEMORY[0x24BDEBE00]();
}

uint64_t sub_21C247DFC()
{
  return MEMORY[0x24BDEBF10]();
}

uint64_t sub_21C247E08()
{
  return MEMORY[0x24BDEBF18]();
}

uint64_t sub_21C247E14()
{
  return MEMORY[0x24BDEBF20]();
}

uint64_t sub_21C247E20()
{
  return MEMORY[0x24BDEBF28]();
}

uint64_t sub_21C247E2C()
{
  return MEMORY[0x24BDEBF38]();
}

uint64_t sub_21C247E38()
{
  return MEMORY[0x24BDEBF40]();
}

uint64_t sub_21C247E44()
{
  return MEMORY[0x24BDEC110]();
}

uint64_t sub_21C247E50()
{
  return MEMORY[0x24BDEC120]();
}

uint64_t sub_21C247E5C()
{
  return MEMORY[0x24BDEC380]();
}

uint64_t sub_21C247E68()
{
  return MEMORY[0x24BDEC388]();
}

uint64_t sub_21C247E74()
{
  return MEMORY[0x24BDC6FA0]();
}

uint64_t sub_21C247E80()
{
  return MEMORY[0x24BDEC5D8]();
}

uint64_t sub_21C247E8C()
{
  return MEMORY[0x24BDEC5E0]();
}

uint64_t sub_21C247E98()
{
  return MEMORY[0x24BDEC5E8]();
}

uint64_t sub_21C247EA4()
{
  return MEMORY[0x24BDEC5F0]();
}

uint64_t sub_21C247EB0()
{
  return MEMORY[0x24BDEC998]();
}

uint64_t sub_21C247EBC()
{
  return MEMORY[0x24BDECA38]();
}

uint64_t sub_21C247EC8()
{
  return MEMORY[0x24BDECEF8]();
}

uint64_t sub_21C247ED4()
{
  return MEMORY[0x24BDECF50]();
}

uint64_t sub_21C247EE0()
{
  return MEMORY[0x24BDED198]();
}

uint64_t sub_21C247EEC()
{
  return MEMORY[0x24BDED2D0]();
}

uint64_t sub_21C247EF8()
{
  return MEMORY[0x24BDED368]();
}

uint64_t sub_21C247F04()
{
  return MEMORY[0x24BDED3B0]();
}

uint64_t sub_21C247F10()
{
  return MEMORY[0x24BDED510]();
}

uint64_t sub_21C247F1C()
{
  return MEMORY[0x24BDEDBA8]();
}

uint64_t sub_21C247F28()
{
  return MEMORY[0x24BDEDC38]();
}

uint64_t sub_21C247F34()
{
  return MEMORY[0x24BDEDEE8]();
}

uint64_t sub_21C247F40()
{
  return MEMORY[0x24BDEDEF8]();
}

uint64_t sub_21C247F4C()
{
  return MEMORY[0x24BDEE128]();
}

uint64_t sub_21C247F58()
{
  return MEMORY[0x24BDEE1D8]();
}

uint64_t sub_21C247F64()
{
  return MEMORY[0x24BDEE210]();
}

uint64_t sub_21C247F70()
{
  return MEMORY[0x24BDEE218]();
}

uint64_t sub_21C247F7C()
{
  return MEMORY[0x24BDEE390]();
}

uint64_t sub_21C247F88()
{
  return MEMORY[0x24BDEE3A0]();
}

uint64_t sub_21C247F94()
{
  return MEMORY[0x24BDEE4E0]();
}

uint64_t sub_21C247FA0()
{
  return MEMORY[0x24BDEE4F8]();
}

uint64_t sub_21C247FAC()
{
  return MEMORY[0x24BDEE728]();
}

uint64_t sub_21C247FB8()
{
  return MEMORY[0x24BDEE730]();
}

uint64_t sub_21C247FC4()
{
  return MEMORY[0x24BDEE758]();
}

uint64_t sub_21C247FD0()
{
  return MEMORY[0x24BDEE760]();
}

uint64_t sub_21C247FDC()
{
  return MEMORY[0x24BDEE9E8]();
}

uint64_t sub_21C247FE8()
{
  return MEMORY[0x24BDEEA18]();
}

uint64_t sub_21C247FF4()
{
  return MEMORY[0x24BDEEA28]();
}

uint64_t sub_21C248000()
{
  return MEMORY[0x24BDEEA30]();
}

uint64_t sub_21C24800C()
{
  return MEMORY[0x24BDEEA40]();
}

uint64_t sub_21C248018()
{
  return MEMORY[0x24BDEEA60]();
}

uint64_t sub_21C248024()
{
  return MEMORY[0x24BDEEF60]();
}

uint64_t sub_21C248030()
{
  return MEMORY[0x24BDEEF78]();
}

uint64_t sub_21C24803C()
{
  return MEMORY[0x24BDEEF80]();
}

uint64_t sub_21C248048()
{
  return MEMORY[0x24BDEF178]();
}

uint64_t sub_21C248054()
{
  return MEMORY[0x24BDEF190]();
}

uint64_t sub_21C248060()
{
  return MEMORY[0x24BDEF198]();
}

uint64_t sub_21C24806C()
{
  return MEMORY[0x24BDEF1A8]();
}

uint64_t sub_21C248078()
{
  return MEMORY[0x24BDEF1D0]();
}

uint64_t sub_21C248084()
{
  return MEMORY[0x24BDEF3A0]();
}

uint64_t sub_21C248090()
{
  return MEMORY[0x24BE785A0]();
}

uint64_t sub_21C24809C()
{
  return MEMORY[0x24BDEF508]();
}

uint64_t sub_21C2480A8()
{
  return MEMORY[0x24BDEF590]();
}

uint64_t sub_21C2480B4()
{
  return MEMORY[0x24BDEF7E8]();
}

uint64_t sub_21C2480C0()
{
  return MEMORY[0x24BDEF7F0]();
}

uint64_t sub_21C2480CC()
{
  return MEMORY[0x24BDEF7F8]();
}

uint64_t sub_21C2480D8()
{
  return MEMORY[0x24BDEFB50]();
}

uint64_t sub_21C2480E4()
{
  return MEMORY[0x24BDEFB80]();
}

uint64_t sub_21C2480F0()
{
  return MEMORY[0x24BDEFB88]();
}

uint64_t sub_21C2480FC()
{
  return MEMORY[0x24BDEFEF8]();
}

uint64_t sub_21C248108()
{
  return MEMORY[0x24BDF0EC0]();
}

uint64_t sub_21C248114()
{
  return MEMORY[0x24BDF0ED0]();
}

uint64_t sub_21C248120()
{
  return MEMORY[0x24BDF0EE0]();
}

uint64_t sub_21C24812C()
{
  return MEMORY[0x24BDF0EF0]();
}

uint64_t sub_21C248138()
{
  return MEMORY[0x24BDF0F00]();
}

uint64_t sub_21C248144()
{
  return MEMORY[0x24BDF0F10]();
}

uint64_t sub_21C248150()
{
  return MEMORY[0x24BDF0F18]();
}

uint64_t sub_21C24815C()
{
  return MEMORY[0x24BDF0F28]();
}

uint64_t sub_21C248168()
{
  return MEMORY[0x24BDF0F38]();
}

uint64_t sub_21C248174()
{
  return MEMORY[0x24BDF1118]();
}

uint64_t sub_21C248180()
{
  return MEMORY[0x24BDF1120]();
}

uint64_t sub_21C24818C()
{
  return MEMORY[0x24BDF1340]();
}

uint64_t sub_21C248198()
{
  return MEMORY[0x24BDF1348]();
}

uint64_t sub_21C2481A4()
{
  return MEMORY[0x24BDF1430]();
}

uint64_t sub_21C2481B0()
{
  return MEMORY[0x24BDF1478]();
}

uint64_t sub_21C2481BC()
{
  return MEMORY[0x24BDF14A8]();
}

uint64_t sub_21C2481C8()
{
  return MEMORY[0x24BDF14C0]();
}

uint64_t sub_21C2481D4()
{
  return MEMORY[0x24BDF14C8]();
}

uint64_t sub_21C2481E0()
{
  return MEMORY[0x24BDF14E0]();
}

uint64_t sub_21C2481EC()
{
  return MEMORY[0x24BDF14E8]();
}

uint64_t sub_21C2481F8()
{
  return MEMORY[0x24BDF14F8]();
}

uint64_t sub_21C248204()
{
  return MEMORY[0x24BDF17F8]();
}

uint64_t sub_21C248210()
{
  return MEMORY[0x24BDF1AC8]();
}

uint64_t sub_21C24821C()
{
  return MEMORY[0x24BDF1B60]();
}

uint64_t sub_21C248228()
{
  return MEMORY[0x24BDF1BD0]();
}

uint64_t sub_21C248234()
{
  return MEMORY[0x24BDF1D08]();
}

uint64_t sub_21C248240()
{
  return MEMORY[0x24BDF1FC0]();
}

uint64_t sub_21C24824C()
{
  return MEMORY[0x24BDF1FF0]();
}

uint64_t sub_21C248258()
{
  return MEMORY[0x24BDF2088]();
}

uint64_t sub_21C248264()
{
  return MEMORY[0x24BDF20A0]();
}

uint64_t sub_21C248270()
{
  return MEMORY[0x24BDF25B0]();
}

uint64_t sub_21C24827C()
{
  return MEMORY[0x24BDF2698]();
}

uint64_t sub_21C248288()
{
  return MEMORY[0x24BDF27E0]();
}

uint64_t sub_21C248294()
{
  return MEMORY[0x24BDF38C0]();
}

uint64_t sub_21C2482A0()
{
  return MEMORY[0x24BDF3C78]();
}

uint64_t sub_21C2482AC()
{
  return MEMORY[0x24BDF3C90]();
}

uint64_t sub_21C2482B8()
{
  return MEMORY[0x24BDF3D10]();
}

uint64_t sub_21C2482C4()
{
  return MEMORY[0x24BDF3D18]();
}

uint64_t sub_21C2482D0()
{
  return MEMORY[0x24BDF3D78]();
}

uint64_t sub_21C2482DC()
{
  return MEMORY[0x24BDF3EB0]();
}

uint64_t sub_21C2482E8()
{
  return MEMORY[0x24BDF4208]();
}

uint64_t sub_21C2482F4()
{
  return MEMORY[0x24BDF4218]();
}

uint64_t sub_21C248300()
{
  return MEMORY[0x24BDF4230]();
}

uint64_t sub_21C24830C()
{
  return MEMORY[0x24BDF4238]();
}

uint64_t sub_21C248318()
{
  return MEMORY[0x24BDF4248]();
}

uint64_t sub_21C248324()
{
  return MEMORY[0x24BDF4278]();
}

uint64_t sub_21C248330()
{
  return MEMORY[0x24BDF4790]();
}

uint64_t sub_21C24833C()
{
  return MEMORY[0x24BDF4E70]();
}

uint64_t sub_21C248348()
{
  return MEMORY[0x24BDF4E78]();
}

uint64_t sub_21C248354()
{
  return MEMORY[0x24BDF4E80]();
}

uint64_t sub_21C248360()
{
  return MEMORY[0x24BDF4E88]();
}

uint64_t sub_21C24836C()
{
  return MEMORY[0x24BDF4E90]();
}

uint64_t sub_21C248378()
{
  return MEMORY[0x24BDF4E98]();
}

uint64_t sub_21C248384()
{
  return MEMORY[0x24BDF4EA0]();
}

uint64_t sub_21C248390()
{
  return MEMORY[0x24BDF4EA8]();
}

uint64_t sub_21C24839C()
{
  return MEMORY[0x24BDF4EB0]();
}

uint64_t sub_21C2483A8()
{
  return MEMORY[0x24BDF4EB8]();
}

uint64_t sub_21C2483B4()
{
  return MEMORY[0x24BDF4F18]();
}

uint64_t sub_21C2483C0()
{
  return MEMORY[0x24BEE5428]();
}

uint64_t sub_21C2483CC()
{
  return MEMORY[0x24BEE5570]();
}

uint64_t sub_21C2483D8()
{
  return MEMORY[0x24BEE5590]();
}

uint64_t sub_21C2483E4()
{
  return MEMORY[0x24BEE5620]();
}

uint64_t sub_21C2483F0()
{
  return MEMORY[0x24BDFAE60]();
}

uint64_t sub_21C2483FC()
{
  return MEMORY[0x24BDFAE78]();
}

uint64_t sub_21C248408()
{
  return MEMORY[0x24BDFB368]();
}

uint64_t sub_21C248414()
{
  return MEMORY[0x24BDFB388]();
}

uint64_t sub_21C248420()
{
  return MEMORY[0x24BEE67F8]();
}

uint64_t sub_21C24842C()
{
  return MEMORY[0x24BDCF808]();
}

uint64_t sub_21C248438()
{
  return MEMORY[0x24BDCF830]();
}

uint64_t sub_21C248444()
{
  return MEMORY[0x24BEE02B0]();
}

uint64_t sub_21C248450()
{
  return MEMORY[0x24BEE0460]();
}

uint64_t sub_21C24845C()
{
  return MEMORY[0x24BEE04A8]();
}

uint64_t sub_21C248468()
{
  return MEMORY[0x24BEE04B0]();
}

uint64_t sub_21C248474()
{
  return MEMORY[0x24BEE0610]();
}

uint64_t sub_21C248480()
{
  return MEMORY[0x24BEE0980]();
}

uint64_t sub_21C24848C()
{
  return MEMORY[0x24BDCF9E0]();
}

uint64_t sub_21C248498()
{
  return MEMORY[0x24BDCFA28]();
}

uint64_t sub_21C2484A4()
{
  return MEMORY[0x24BDCFA78]();
}

uint64_t sub_21C2484B0()
{
  return MEMORY[0x24BDCFA80]();
}

uint64_t sub_21C2484BC()
{
  return MEMORY[0x24BDCFAC8]();
}

uint64_t sub_21C2484C8()
{
  return MEMORY[0x24BDCFAE8]();
}

uint64_t sub_21C2484D4()
{
  return MEMORY[0x24BDCFAF8]();
}

uint64_t sub_21C2484E0()
{
  return MEMORY[0x24BEE09F0]();
}

uint64_t sub_21C2484EC()
{
  return MEMORY[0x24BEE0A30]();
}

uint64_t sub_21C2484F8()
{
  return MEMORY[0x24BEE0B20]();
}

uint64_t sub_21C248504()
{
  return MEMORY[0x24BEE0BC0]();
}

uint64_t sub_21C248510()
{
  return MEMORY[0x24BEE0BE8]();
}

uint64_t sub_21C24851C()
{
  return MEMORY[0x24BEE0C10]();
}

uint64_t sub_21C248528()
{
  return MEMORY[0x24BEE0CC8]();
}

uint64_t sub_21C248534()
{
  return MEMORY[0x24BEE0EB0]();
}

uint64_t sub_21C248540()
{
  return MEMORY[0x24BEE0FD8]();
}

uint64_t sub_21C24854C()
{
  return MEMORY[0x24BEE1110]();
}

uint64_t sub_21C248558()
{
  return MEMORY[0x24BDCFBA8]();
}

uint64_t sub_21C248564()
{
  return MEMORY[0x24BDCFBC8]();
}

uint64_t sub_21C248570()
{
  return MEMORY[0x24BEE1120]();
}

uint64_t sub_21C24857C()
{
  return MEMORY[0x24BEE1128]();
}

uint64_t sub_21C248588()
{
  return MEMORY[0x24BEE1140]();
}

uint64_t sub_21C248594()
{
  return MEMORY[0x24BEE1160]();
}

uint64_t sub_21C2485A0()
{
  return MEMORY[0x24BE76D08]();
}

uint64_t sub_21C2485AC()
{
  return MEMORY[0x24BEE1180]();
}

uint64_t sub_21C2485B8()
{
  return MEMORY[0x24BEE11A0]();
}

uint64_t sub_21C2485C4()
{
  return MEMORY[0x24BEE11B8]();
}

uint64_t sub_21C2485D0()
{
  return MEMORY[0x24BEE1220]();
}

uint64_t sub_21C2485DC()
{
  return MEMORY[0x24BEE1250]();
}

uint64_t sub_21C2485E8()
{
  return MEMORY[0x24BEE6800]();
}

uint64_t sub_21C2485F4()
{
  return MEMORY[0x24BEE6810]();
}

uint64_t sub_21C248600()
{
  return MEMORY[0x24BEE6820]();
}

uint64_t sub_21C24860C()
{
  return MEMORY[0x24BEE6828]();
}

uint64_t sub_21C248618()
{
  return MEMORY[0x24BEE6830]();
}

uint64_t sub_21C248624()
{
  return MEMORY[0x24BEE6838]();
}

uint64_t sub_21C248630()
{
  return MEMORY[0x24BEE6920]();
}

uint64_t sub_21C24863C()
{
  return MEMORY[0x24BEE6928]();
}

uint64_t sub_21C248648()
{
  return MEMORY[0x24BEE6988]();
}

uint64_t sub_21C248654()
{
  return MEMORY[0x24BEE6990]();
}

uint64_t sub_21C248660()
{
  return MEMORY[0x24BEE6A30]();
}

uint64_t sub_21C24866C()
{
  return MEMORY[0x24BEE6A38]();
}

uint64_t sub_21C248678()
{
  return MEMORY[0x24BEE6A50]();
}

uint64_t sub_21C248684()
{
  return MEMORY[0x24BEE6A58]();
}

uint64_t sub_21C248690()
{
  return MEMORY[0x24BEE6A68]();
}

uint64_t sub_21C24869C()
{
  return MEMORY[0x24BEE6A78]();
}

uint64_t sub_21C2486A8()
{
  return MEMORY[0x24BEE6A90]();
}

uint64_t sub_21C2486B4()
{
  return MEMORY[0x24BEE6A98]();
}

uint64_t sub_21C2486C0()
{
  return MEMORY[0x24BEE6AA0]();
}

uint64_t sub_21C2486CC()
{
  return MEMORY[0x24BEE6AD0]();
}

uint64_t sub_21C2486D8()
{
  return MEMORY[0x24BEE1598]();
}

uint64_t sub_21C2486E4()
{
  return MEMORY[0x24BE76D98]();
}

uint64_t sub_21C2486F0()
{
  return MEMORY[0x24BE76DC0]();
}

uint64_t sub_21C2486FC()
{
  return MEMORY[0x24BE785A8]();
}

uint64_t sub_21C248708()
{
  return MEMORY[0x24BEE78F0]();
}

uint64_t sub_21C248714()
{
  return MEMORY[0x24BEE7908]();
}

uint64_t sub_21C248720()
{
  return MEMORY[0x24BEE7910]();
}

uint64_t sub_21C24872C()
{
  return MEMORY[0x24BEE7920]();
}

uint64_t sub_21C248738()
{
  return MEMORY[0x24BEE7928]();
}

uint64_t sub_21C248744()
{
  return MEMORY[0x24BEE5918]();
}

uint64_t sub_21C248750()
{
  return MEMORY[0x24BEE5920]();
}

uint64_t sub_21C24875C()
{
  return MEMORY[0x24BEE5928]();
}

uint64_t sub_21C248768()
{
  return MEMORY[0x24BE785B0]();
}

uint64_t sub_21C248774()
{
  return MEMORY[0x24BE785B8]();
}

uint64_t sub_21C248780()
{
  return MEMORY[0x24BE785C0]();
}

uint64_t sub_21C24878C()
{
  return MEMORY[0x24BE76E00]();
}

uint64_t sub_21C248798()
{
  return MEMORY[0x24BEE1C68]();
}

uint64_t sub_21C2487A4()
{
  return MEMORY[0x24BEE1F00]();
}

uint64_t sub_21C2487B0()
{
  return MEMORY[0x24BEE1F48]();
}

uint64_t sub_21C2487BC()
{
  return MEMORY[0x24BEE22C0]();
}

uint64_t sub_21C2487C8()
{
  return MEMORY[0x24BEE22D0]();
}

uint64_t sub_21C2487D4()
{
  return MEMORY[0x24BEE23A8]();
}

uint64_t sub_21C2487E0()
{
  return MEMORY[0x24BEE23B0]();
}

uint64_t sub_21C2487EC()
{
  return MEMORY[0x24BEE23E8]();
}

uint64_t sub_21C2487F8()
{
  return MEMORY[0x24BEE24B8]();
}

uint64_t sub_21C248804()
{
  return MEMORY[0x24BEE24C0]();
}

uint64_t sub_21C248810()
{
  return MEMORY[0x24BEE24F0]();
}

uint64_t sub_21C24881C()
{
  return MEMORY[0x24BEE2510]();
}

uint64_t sub_21C248828()
{
  return MEMORY[0x24BEE2518]();
}

uint64_t sub_21C248834()
{
  return MEMORY[0x24BEE2528]();
}

uint64_t sub_21C248840()
{
  return MEMORY[0x24BEE2650]();
}

uint64_t sub_21C24884C()
{
  return MEMORY[0x24BEE2658]();
}

uint64_t sub_21C248858()
{
  return MEMORY[0x24BEE2660]();
}

uint64_t sub_21C248864()
{
  return MEMORY[0x24BEE2838]();
}

uint64_t sub_21C248870()
{
  return MEMORY[0x24BEE2BE0]();
}

uint64_t sub_21C24887C()
{
  return MEMORY[0x24BEE2C90]();
}

uint64_t sub_21C248888()
{
  return MEMORY[0x24BEE2C98]();
}

uint64_t sub_21C248894()
{
  return MEMORY[0x24BEE2CA0]();
}

uint64_t sub_21C2488A0()
{
  return MEMORY[0x24BEE2F40]();
}

uint64_t sub_21C2488AC()
{
  return MEMORY[0x24BEE2F48]();
}

uint64_t sub_21C2488B8()
{
  return MEMORY[0x24BEE3068]();
}

uint64_t sub_21C2488C4()
{
  return MEMORY[0x24BEE3080]();
}

uint64_t sub_21C2488D0()
{
  return MEMORY[0x24BEE3088]();
}

uint64_t sub_21C2488DC()
{
  return MEMORY[0x24BEE3098]();
}

uint64_t sub_21C2488E8()
{
  return MEMORY[0x24BEE30B0]();
}

uint64_t sub_21C2488F4()
{
  return MEMORY[0x24BEE3568]();
}

uint64_t sub_21C248900()
{
  return MEMORY[0x24BEE3880]();
}

uint64_t sub_21C24890C()
{
  return MEMORY[0x24BEE3930]();
}

uint64_t sub_21C248918()
{
  return MEMORY[0x24BEE3A28]();
}

uint64_t sub_21C248924()
{
  return MEMORY[0x24BEE3A30]();
}

uint64_t sub_21C248930()
{
  return MEMORY[0x24BEE70E0]();
}

uint64_t sub_21C24893C()
{
  return MEMORY[0x24BEE3ED0]();
}

uint64_t sub_21C248948()
{
  return MEMORY[0x24BEE3ED8]();
}

uint64_t sub_21C248954()
{
  return MEMORY[0x24BE76E10]();
}

uint64_t sub_21C248960()
{
  return MEMORY[0x24BEE3EF8]();
}

uint64_t sub_21C24896C()
{
  return MEMORY[0x24BEE3F00]();
}

uint64_t sub_21C248978()
{
  return MEMORY[0x24BEE3F08]();
}

uint64_t sub_21C248984()
{
  return MEMORY[0x24BEE3F10]();
}

uint64_t sub_21C248990()
{
  return MEMORY[0x24BEE42B8]();
}

uint64_t sub_21C24899C()
{
  return MEMORY[0x24BEE42D8]();
}

uint64_t sub_21C2489A8()
{
  return MEMORY[0x24BEE42E0]();
}

uint64_t sub_21C2489B4()
{
  return MEMORY[0x24BEE42F8]();
}

uint64_t sub_21C2489C0()
{
  return MEMORY[0x24BEE4328]();
}

uint64_t sub_21C2489CC()
{
  return MEMORY[0x24BE76E28]();
}

uint64_t sub_21C2489D8()
{
  return MEMORY[0x24BE76E40]();
}

uint64_t sub_21C2489E4()
{
  return MEMORY[0x24BEE4A98]();
}

uint64_t CARenderServerGetServerPort()
{
  return MEMORY[0x24BDE5540]();
}

CGFloat CGRectGetHeight(CGRect rect)
{
  CGFloat result;

  MEMORY[0x24BDBEFE8]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
  return result;
}

CGFloat CGRectGetWidth(CGRect rect)
{
  CGFloat result;

  MEMORY[0x24BDBF020]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
  return result;
}

void *__cdecl _Block_copy(const void *aBlock)
{
  return (void *)MEMORY[0x24BDAC720](aBlock);
}

void _Block_release(const void *aBlock)
{
  MEMORY[0x24BDAC738](aBlock);
}

void _os_log_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
  MEMORY[0x24BDACB90](dso, log, type, format, buf, *(_QWORD *)&size);
}

uint64_t _swift_stdlib_bridgeErrorToNSError()
{
  return MEMORY[0x24BEE4B30]();
}

void bzero(void *a1, size_t a2)
{
  MEMORY[0x24BDAD320](a1, a2);
}

dispatch_semaphore_t dispatch_semaphore_create(intptr_t value)
{
  return (dispatch_semaphore_t)MEMORY[0x24BDADF28](value);
}

char *dlerror(void)
{
  return (char *)MEMORY[0x24BDAE068]();
}

void *__cdecl dlopen(const char *__path, int __mode)
{
  return (void *)MEMORY[0x24BDAE070](__path, *(_QWORD *)&__mode);
}

void *__cdecl dlsym(void *__handle, const char *__symbol)
{
  return (void *)MEMORY[0x24BDAE088](__handle, __symbol);
}

void exit(int a1)
{
  MEMORY[0x24BDAE268](*(_QWORD *)&a1);
}

int fputs(const char *a1, FILE *a2)
{
  return MEMORY[0x24BDAE440](a1, a2);
}

void free(void *a1)
{
  MEMORY[0x24BDAE450](a1);
}

void *__cdecl malloc(size_t __size)
{
  return (void *)MEMORY[0x24BDAED08](__size);
}

size_t malloc_size(const void *ptr)
{
  return MEMORY[0x24BDAED60](ptr);
}

void *__cdecl memcpy(void *__dst, const void *__src, size_t __n)
{
  return (void *)MEMORY[0x24BDAEE80](__dst, __src, __n);
}

void *__cdecl memmove(void *__dst, const void *__src, size_t __len)
{
  return (void *)MEMORY[0x24BDAEE98](__dst, __src, __len);
}

id objc_allocWithZone(Class a1)
{
  return (id)MEMORY[0x24BEDCF78](a1);
}

id objc_autoreleaseReturnValue(id a1)
{
  return (id)MEMORY[0x24BEDCFD0](a1);
}

uint64_t objc_claimAutoreleasedReturnValue()
{
  return MEMORY[0x24BEDCFE8]();
}

id objc_msgSend(id a1, SEL a2, ...)
{
  return (id)MEMORY[0x24BEDD108](a1, a2);
}

id objc_msgSendSuper2(objc_super *a1, SEL a2, ...)
{
  return (id)MEMORY[0x24BEDD120](a1, a2);
}

uint64_t objc_opt_class()
{
  return MEMORY[0x24BEDD130]();
}

uint64_t objc_opt_isKindOfClass()
{
  return MEMORY[0x24BEDD138]();
}

uint64_t objc_opt_self()
{
  return MEMORY[0x24BEDD168]();
}

void objc_release(id a1)
{
  MEMORY[0x24BEDD188](a1);
}

id objc_retain(id a1)
{
  return (id)MEMORY[0x24BEDD2A0](a1);
}

id objc_retainAutorelease(id a1)
{
  return (id)MEMORY[0x24BEDD2A8](a1);
}

id objc_retainAutoreleasedReturnValue(id a1)
{
  return (id)MEMORY[0x24BEDD2B8](a1);
}

BOOL os_log_type_enabled(os_log_t oslog, os_log_type_t type)
{
  return MEMORY[0x24BDAF398](oslog, type);
}

void os_unfair_lock_lock(os_unfair_lock_t lock)
{
  MEMORY[0x24BDAF460](lock);
}

void os_unfair_lock_unlock(os_unfair_lock_t lock)
{
  MEMORY[0x24BDAF488](lock);
}

uint64_t swift_allocBox()
{
  return MEMORY[0x24BEE4B58]();
}

uint64_t swift_allocError()
{
  return MEMORY[0x24BEE4B68]();
}

uint64_t swift_allocObject()
{
  return MEMORY[0x24BEE4B70]();
}

uint64_t swift_allocateGenericClassMetadata()
{
  return MEMORY[0x24BEE4B78]();
}

uint64_t swift_allocateGenericValueMetadata()
{
  return MEMORY[0x24BEE4B80]();
}

uint64_t swift_arrayDestroy()
{
  return MEMORY[0x24BEE4B98]();
}

uint64_t swift_arrayInitWithCopy()
{
  return MEMORY[0x24BEE4BA0]();
}

uint64_t swift_arrayInitWithTakeBackToFront()
{
  return MEMORY[0x24BEE4BA8]();
}

uint64_t swift_arrayInitWithTakeFrontToBack()
{
  return MEMORY[0x24BEE4BB0]();
}

uint64_t swift_asyncLet_begin()
{
  return MEMORY[0x24BEE7198]();
}

uint64_t swift_asyncLet_finish()
{
  return MEMORY[0x24BEE71A0]();
}

uint64_t swift_asyncLet_get_throwing()
{
  return MEMORY[0x24BEE71B0]();
}

uint64_t swift_beginAccess()
{
  return MEMORY[0x24BEE4BB8]();
}

uint64_t swift_bridgeObjectRelease()
{
  return MEMORY[0x24BEE4BC0]();
}

uint64_t swift_bridgeObjectRelease_n()
{
  return MEMORY[0x24BEE4BC8]();
}

uint64_t swift_bridgeObjectRetain()
{
  return MEMORY[0x24BEE4BD0]();
}

uint64_t swift_bridgeObjectRetain_n()
{
  return MEMORY[0x24BEE4BD8]();
}

uint64_t swift_checkMetadataState()
{
  return MEMORY[0x24BEE4BE0]();
}

uint64_t swift_conformsToProtocol2()
{
  return MEMORY[0x24BEE4BF0]();
}

uint64_t swift_deallocClassInstance()
{
  return MEMORY[0x24BEE4C00]();
}

uint64_t swift_deallocObject()
{
  return MEMORY[0x24BEE4C10]();
}

uint64_t swift_defaultActor_deallocate()
{
  return MEMORY[0x24BEE71E0]();
}

uint64_t swift_defaultActor_destroy()
{
  return MEMORY[0x24BEE71E8]();
}

uint64_t swift_defaultActor_initialize()
{
  return MEMORY[0x24BEE71F0]();
}

uint64_t swift_dynamicCast()
{
  return MEMORY[0x24BEE4C38]();
}

uint64_t swift_endAccess()
{
  return MEMORY[0x24BEE4C98]();
}

uint64_t swift_errorRelease()
{
  return MEMORY[0x24BEE4CA0]();
}

uint64_t swift_errorRetain()
{
  return MEMORY[0x24BEE4CA8]();
}

uint64_t swift_getAssociatedConformanceWitness()
{
  return MEMORY[0x24BEE4CD0]();
}

uint64_t swift_getAssociatedTypeWitness()
{
  return MEMORY[0x24BEE4CD8]();
}

uint64_t swift_getAtKeyPath()
{
  return MEMORY[0x24BEE4CE8]();
}

uint64_t swift_getDynamicType()
{
  return MEMORY[0x24BEE4D00]();
}

uint64_t swift_getEnumCaseMultiPayload()
{
  return MEMORY[0x24BEE4D08]();
}

uint64_t swift_getEnumTagSinglePayloadGeneric()
{
  return MEMORY[0x24BEE4D10]();
}

uint64_t swift_getErrorValue()
{
  return MEMORY[0x24BEE4D18]();
}

uint64_t swift_getForeignTypeMetadata()
{
  return MEMORY[0x24BEE4D40]();
}

uint64_t swift_getGenericMetadata()
{
  return MEMORY[0x24BEE4D80]();
}

uint64_t swift_getKeyPath()
{
  return MEMORY[0x24BEE4D88]();
}

uint64_t swift_getMetatypeMetadata()
{
  return MEMORY[0x24BEE4D98]();
}

uint64_t swift_getObjCClassMetadata()
{
  return MEMORY[0x24BEE4DB0]();
}

uint64_t swift_getObjectType()
{
  return MEMORY[0x24BEE4DB8]();
}

uint64_t swift_getOpaqueTypeConformance2()
{
  return MEMORY[0x24BEE4DC0]();
}

uint64_t swift_getSingletonMetadata()
{
  return MEMORY[0x24BEE4DD0]();
}

uint64_t swift_getTupleTypeLayout2()
{
  return MEMORY[0x24BEE4DE0]();
}

uint64_t swift_getTupleTypeMetadata2()
{
  return MEMORY[0x24BEE4DF8]();
}

uint64_t swift_getTypeByMangledNameInContext2()
{
  return MEMORY[0x24BEE4E10]();
}

uint64_t swift_getTypeByMangledNameInContextInMetadataState2()
{
  return MEMORY[0x24BEE4E18]();
}

uint64_t swift_getWitnessTable()
{
  return MEMORY[0x24BEE4E20]();
}

uint64_t swift_initClassMetadata2()
{
  return MEMORY[0x24BEE4E28]();
}

uint64_t swift_initEnumMetadataMultiPayload()
{
  return MEMORY[0x24BEE4E30]();
}

uint64_t swift_initStackObject()
{
  return MEMORY[0x24BEE4E48]();
}

uint64_t swift_initStructMetadata()
{
  return MEMORY[0x24BEE4E58]();
}

uint64_t swift_isUniquelyReferenced_nonNull_bridgeObject()
{
  return MEMORY[0x24BEE4E90]();
}

uint64_t swift_isUniquelyReferenced_nonNull_native()
{
  return MEMORY[0x24BEE4E98]();
}

uint64_t swift_lookUpClassMethod()
{
  return MEMORY[0x24BEE4EA8]();
}

uint64_t swift_makeBoxUnique()
{
  return MEMORY[0x24BEE4EB0]();
}

uint64_t swift_once()
{
  return MEMORY[0x24BEE4EC8]();
}

uint64_t swift_projectBox()
{
  return MEMORY[0x24BEE4ED0]();
}

uint64_t swift_release()
{
  return MEMORY[0x24BEE4EF8]();
}

uint64_t swift_release_n()
{
  return MEMORY[0x24BEE4F00]();
}

uint64_t swift_retain()
{
  return MEMORY[0x24BEE4F08]();
}

uint64_t swift_retain_n()
{
  return MEMORY[0x24BEE4F10]();
}

uint64_t swift_slowAlloc()
{
  return MEMORY[0x24BEE4F38]();
}

uint64_t swift_slowDealloc()
{
  return MEMORY[0x24BEE4F40]();
}

uint64_t swift_storeEnumTagMultiPayload()
{
  return MEMORY[0x24BEE4F58]();
}

uint64_t swift_storeEnumTagSinglePayloadGeneric()
{
  return MEMORY[0x24BEE4F60]();
}

uint64_t swift_task_alloc()
{
  return MEMORY[0x24BEE7228]();
}

uint64_t swift_task_create()
{
  return MEMORY[0x24BEE7230]();
}

uint64_t swift_task_dealloc()
{
  return MEMORY[0x24BEE7238]();
}

uint64_t swift_task_switch()
{
  return MEMORY[0x24BEE7278]();
}

uint64_t swift_unknownObjectRelease()
{
  return MEMORY[0x24BEE4F70]();
}

uint64_t swift_unknownObjectRetain()
{
  return MEMORY[0x24BEE4F80]();
}

uint64_t swift_updateClassMetadata2()
{
  return MEMORY[0x24BEE5008]();
}

uint64_t swift_willThrow()
{
  return MEMORY[0x24BEE5050]();
}

