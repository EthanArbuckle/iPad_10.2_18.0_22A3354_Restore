uint64_t sub_1C083FE00()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1C083FE0C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;

  result = sub_1C0780478();
  if (*(_DWORD *)(*(_QWORD *)(result - 8) + 84) == a3)
    return sub_1C07B2D8C(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  return result;
}

uint64_t sub_1C083FE80()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1C106D6CC();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void sub_1C083FF04()
{
  sub_1C07803F8(&qword_1EF631D68, (void (*)(uint64_t))type metadata accessor for BehaviorPopularity);
}

void sub_1C083FF30()
{
  sub_1C07803F8(&qword_1EF631D30, (void (*)(uint64_t))type metadata accessor for BehaviorPopularity);
}

void sub_1C083FF5C()
{
  sub_1C07803F8(&qword_1EF631D70, (void (*)(uint64_t))type metadata accessor for BehaviorPopularity);
}

unint64_t sub_1C083FF88()
{
  unint64_t result;

  result = qword_1EF631D88;
  if (!qword_1EF631D88)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C107BCFC, &type metadata for BehaviorPopularity.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF631D88);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for BehaviorPopularity.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1C0840010 + 4 * byte_1C107B98E[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1C0840044 + 4 * byte_1C107B989[v4]))();
}

uint64_t sub_1C0840044(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C084004C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C0840054);
  return result;
}

uint64_t sub_1C0840060(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C0840068);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1C084006C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C0840074(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for BehaviorPopularity.CodingKeys()
{
  return &type metadata for BehaviorPopularity.CodingKeys;
}

unint64_t sub_1C0840094()
{
  unint64_t result;

  result = qword_1EF631DB0;
  if (!qword_1EF631DB0)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C107BCD4, &type metadata for BehaviorPopularity.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF631DB0);
  }
  return result;
}

unint64_t sub_1C08400D4()
{
  unint64_t result;

  result = qword_1EF631DB8;
  if (!qword_1EF631DB8)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C107BC44, &type metadata for BehaviorPopularity.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF631DB8);
  }
  return result;
}

unint64_t sub_1C0840114()
{
  unint64_t result;

  result = qword_1EF631DC0[0];
  if (!qword_1EF631DC0[0])
  {
    result = MEMORY[0x1C3BA8174](&unk_1C107BC6C, &type metadata for BehaviorPopularity.CodingKeys);
    atomic_store(result, qword_1EF631DC0);
  }
  return result;
}

uint64_t sub_1C084015C()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    result = swift_initClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

void sub_1C08401CC(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6[2];

  v2 = *(_QWORD *)(sub_1C07ACF80(&qword_1EF637810) - 8);
  v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    sub_1C0861C0C();
    v3 = v4;
  }
  v5 = *(_QWORD *)(v3 + 16);
  v6[0] = v3 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  v6[1] = v5;
  sub_1C0842014(v6);
  *a1 = v3;
}

uint64_t sub_1C0840250()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(_QWORD);
  uint64_t v6;

  sub_1C077AF90();
  v2 = sub_1C106D6CC();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  sub_1C07A22F4();
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v4);
  sub_1C0776794();
  sub_1C0845A4C(v0, v0, v5);
  v6 = sub_1C07ACF80(qword_1EF631E48);
  if (sub_1C07B2D80(v0, 2, v6))
    return sub_1C1070E04();
  sub_1C0791A44(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 32));
  sub_1C1070E04();
  sub_1C0794BAC((unint64_t *)&qword_1ED744A48, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3C130], MEMORY[0x1E0D3C148]);
  sub_1C106FA0C();
  sub_1C106FC28();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  return sub_1C0775834();
}

uint64_t sub_1C0840390()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  BOOL v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  sub_1C0779670();
  v30 = v1;
  v31 = v2;
  v4 = v3;
  v6 = v5;
  v7 = sub_1C106D6CC();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  sub_1C07A22F4();
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v9);
  sub_1C07785B8();
  sub_1C07ACF80(&qword_1EF631F98);
  sub_1C077C078();
  v11 = MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = (uint64_t)&v13[*(int *)(v11 + 48)];
  sub_1C0845A4C(v6, (uint64_t)v13, type metadata accessor for BehaviorDigestTaskIdentifier);
  sub_1C0845A4C(v4, v14, type metadata accessor for BehaviorDigestTaskIdentifier);
  v15 = sub_1C07ACF80(qword_1EF631E48);
  v16 = sub_1C0796FE4((uint64_t)v13);
  if (v16)
  {
    if (v16 == 1)
    {
      sub_1C077AEEC(v14, 2, v15);
      if (!v24)
        goto LABEL_9;
      goto LABEL_8;
    }
    if (sub_1C0796FE4(v14) == 2)
      goto LABEL_8;
  }
  else
  {
    sub_1C0845A4C((uint64_t)v13, v0, type metadata accessor for BehaviorDigestTaskIdentifier);
    v17 = *(int *)(v15 + 48);
    v19 = *(_QWORD *)(v0 + v17);
    v18 = *(_QWORD *)(v0 + v17 + 8);
    if (!sub_1C0796FE4(v14))
    {
      v21 = *(_QWORD *)(v14 + v17 + 8);
      v27 = *(_QWORD *)(v14 + v17);
      sub_1C0791A44(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 32));
      sub_1C0794BAC((unint64_t *)&qword_1ED744A60, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3C130], MEMORY[0x1E0D3C158]);
      sub_1C07A8514();
      sub_1C07A8514();
      v23 = v28;
      v22 = v29;
      (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v0, v7);
      if (v22 == v23)
      {
        v24 = v19 == v27 && v18 == v21;
        if (v24)
        {
          swift_bridgeObjectRelease_n();
          sub_1C0779734();
          goto LABEL_8;
        }
        v25 = sub_1C1070CB4();
        swift_bridgeObjectRelease();
        sub_1C0775834();
        sub_1C0779734();
        if ((v25 & 1) != 0)
        {
LABEL_8:
          sub_1C07B1FB8();
          return 1;
        }
      }
      else
      {
        sub_1C0779734();
        swift_bridgeObjectRelease();
        sub_1C0775834();
      }
      sub_1C07B1FB8();
      return 0;
    }
    sub_1C0775834();
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v0, v7);
  }
LABEL_9:
  sub_1C0784B6C((uint64_t)v13, &qword_1EF631F98);
  return 0;
}

uint64_t sub_1C0840608()
{
  sub_1C1070DF8();
  sub_1C0840250();
  return sub_1C1070E4C();
}

uint64_t sub_1C084064C()
{
  sub_1C1070DF8();
  sub_1C0840250();
  return sub_1C1070E4C();
}

uint64_t sub_1C0840688(uint64_t a1, uint64_t a2, uint64_t a3, double a4)
{
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)(v4 + 32) = a2;
  *(_QWORD *)(v4 + 40) = a3;
  *(_QWORD *)(v4 + 24) = a1;
  *(double *)(v4 + 16) = a4;
  v5 = sub_1C07ACF80(&qword_1ED75D0B8);
  *(_QWORD *)(v4 + 48) = v5;
  *(_QWORD *)(v4 + 56) = *(_QWORD *)(v5 - 8);
  *(_QWORD *)(v4 + 64) = sub_1C0779644();
  sub_1C07ACF80((uint64_t *)&unk_1ED752020);
  *(_QWORD *)(v4 + 72) = sub_1C0779644();
  return swift_task_switch();
}

uint64_t sub_1C0840700()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  char v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v13)(void);

  v1 = sub_1C08F086C(*(_QWORD *)(v0 + 40), *(double *)(v0 + 16));
  *(_QWORD *)(v0 + 80) = v1;
  v2 = *(_QWORD *)(v1 + 16);
  *(_QWORD *)(v0 + 88) = v2;
  if (v2)
  {
    v4 = *(_QWORD *)(v0 + 48);
    v3 = *(_QWORD *)(v0 + 56);
    v5 = *(_DWORD *)(v3 + 80);
    *(_DWORD *)(v0 + 128) = v5;
    *(_QWORD *)(v0 + 96) = *(_QWORD *)(v3 + 72);
    *(_QWORD *)(v0 + 104) = 0;
    v6 = *(_QWORD *)(v0 + 72);
    sub_1C0845A78(v1 + ((v5 + 32) & ~(unint64_t)v5), v6, &qword_1ED75D0B8);
    sub_1C07B2D8C(v6, 0, 1, v4);
    sub_1C077AEEC(v6, 1, v4);
    if (!v7)
    {
      sub_1C078A6A8(*(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 64), &qword_1ED75D0B8);
      swift_getObjectType();
      v8 = (_QWORD *)sub_1C0781510();
      v9 = sub_1C07A5120(v8, (uint64_t)sub_1C0840820);
      return sub_1C0790E28(v9, v10, v11, v13);
    }
  }
  else
  {
    sub_1C07A7D28();
  }
  sub_1C0789D68();
  sub_1C07767BC();
  sub_1C07796F8();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1C0840820()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 120) = v0;
  swift_task_dealloc();
  if (v0)
    swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_1C084088C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t (*v12)(uint64_t);

  v1 = *(_QWORD *)(v0 + 88);
  v2 = *(_QWORD *)(v0 + 104) + 1;
  sub_1C0784B6C(*(_QWORD *)(v0 + 64), &qword_1ED75D0B8);
  if (v2 == v1)
  {
    sub_1C07A7D28();
  }
  else
  {
    v3 = *(_QWORD *)(v0 + 96);
    v4 = *(_QWORD *)(v0 + 104) + 1;
    *(_QWORD *)(v0 + 104) = v4;
    v5 = *(_QWORD *)(v0 + 72);
    v6 = *(_QWORD *)(v0 + 48);
    sub_1C0845A78(*(_QWORD *)(v0 + 80)+ ((*(unsigned __int8 *)(v0 + 128) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 128))+ v3 * v4, v5, &qword_1ED75D0B8);
    sub_1C07B2D8C(v5, 0, 1, v6);
    sub_1C077AEEC(v5, 1, v6);
    if (!v7)
    {
      v8 = *(_QWORD *)(v0 + 32);
      sub_1C078A6A8(*(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 64), &qword_1ED75D0B8);
      swift_getObjectType();
      v12 = (uint64_t (*)(uint64_t))(**(int **)(v8 + 16) + *(_QWORD *)(v8 + 16));
      v9 = (_QWORD *)swift_task_alloc();
      v10 = sub_1C07A5120(v9, (uint64_t)sub_1C0840820);
      return v12(v10);
    }
  }
  sub_1C0789D68();
  sub_1C07767BC();
  sub_1C07796F8();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1C08409B4()
{
  uint64_t v0;

  sub_1C0784B6C(*(_QWORD *)(v0 + 64), &qword_1ED75D0B8);
  swift_task_dealloc();
  sub_1C07796F8();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1C08409FC()
{
  uint64_t v0;

  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v0 + 80) - 8) + 8))(v0 + *(_QWORD *)(*(_QWORD *)v0 + 96));
  return v0;
}

uint64_t sub_1C0840A2C()
{
  sub_1C08409FC();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for BehaviorDigestBatchedTaskRunner(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C0802884(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for BehaviorDigestBatchedTaskRunner);
}

uint64_t *sub_1C0840A5C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    v7 = sub_1C07ACF80(qword_1EF631E48);
    if (sub_1C07B2D80((uint64_t)a2, 2, v7))
    {
      memcpy(a1, a2, *(_QWORD *)(v5 + 64));
    }
    else
    {
      v9 = sub_1C106D6CC();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(a1, a2, v9);
      v10 = *(int *)(v7 + 48);
      v11 = (uint64_t *)((char *)a1 + v10);
      v12 = (uint64_t *)((char *)a2 + v10);
      v13 = v12[1];
      *v11 = *v12;
      v11[1] = v13;
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      sub_1C07B2D8C((uint64_t)a1, 0, 2, v7);
    }
  }
  return a1;
}

uint64_t sub_1C0840B38(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;

  v2 = sub_1C07ACF80(qword_1EF631E48);
  result = sub_1C07B2D80(a1, 2, v2);
  if (!(_DWORD)result)
  {
    v4 = sub_1C106D6CC();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
    return swift_bridgeObjectRelease();
  }
  return result;
}

char *sub_1C0840BAC(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;

  v6 = sub_1C07ACF80(qword_1EF631E48);
  if (sub_1C07B2D80((uint64_t)a2, 2, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v7 = sub_1C106D6CC();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(v6 + 48);
    v9 = &a1[v8];
    v10 = &a2[v8];
    v11 = *((_QWORD *)v10 + 1);
    *(_QWORD *)v9 = *(_QWORD *)v10;
    *((_QWORD *)v9 + 1) = v11;
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    sub_1C07B2D8C((uint64_t)a1, 0, 2, v6);
  }
  return a1;
}

char *sub_1C0840C64(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  int v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;

  v6 = sub_1C07ACF80(qword_1EF631E48);
  v7 = sub_1C07B2D80((uint64_t)a1, 2, v6);
  v8 = sub_1C07B2D80((uint64_t)a2, 2, v6);
  if (!v7)
  {
    if (!v8)
    {
      v14 = sub_1C106D6CC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 24))(a1, a2, v14);
      v15 = *(int *)(v6 + 48);
      v16 = &a1[v15];
      v17 = &a2[v15];
      *(_QWORD *)v16 = *(_QWORD *)v17;
      *((_QWORD *)v16 + 1) = *((_QWORD *)v17 + 1);
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      swift_bridgeObjectRelease();
      return a1;
    }
    sub_1C0784B6C((uint64_t)a1, qword_1EF631E48);
    goto LABEL_6;
  }
  if (v8)
  {
LABEL_6:
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    return a1;
  }
  v9 = sub_1C106D6CC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(a1, a2, v9);
  v10 = *(int *)(v6 + 48);
  v11 = &a1[v10];
  v12 = &a2[v10];
  *(_QWORD *)v11 = *(_QWORD *)v12;
  *((_QWORD *)v11 + 1) = *((_QWORD *)v12 + 1);
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C07B2D8C((uint64_t)a1, 0, 2, v6);
  return a1;
}

char *sub_1C0840DA8(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_1C07ACF80(qword_1EF631E48);
  if (sub_1C07B2D80((uint64_t)a2, 2, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v7 = sub_1C106D6CC();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
    *(_OWORD *)&a1[*(int *)(v6 + 48)] = *(_OWORD *)&a2[*(int *)(v6 + 48)];
    sub_1C07B2D8C((uint64_t)a1, 0, 2, v6);
  }
  return a1;
}

char *sub_1C0840E54(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  int v7;
  int v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;

  v6 = sub_1C07ACF80(qword_1EF631E48);
  v7 = sub_1C07B2D80((uint64_t)a1, 2, v6);
  v8 = sub_1C07B2D80((uint64_t)a2, 2, v6);
  if (!v7)
  {
    if (!v8)
    {
      v11 = sub_1C106D6CC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 40))(a1, a2, v11);
      v12 = *(int *)(v6 + 48);
      v13 = &a1[v12];
      v14 = &a2[v12];
      v16 = *(_QWORD *)v14;
      v15 = *((_QWORD *)v14 + 1);
      *(_QWORD *)v13 = v16;
      *((_QWORD *)v13 + 1) = v15;
      swift_bridgeObjectRelease();
      return a1;
    }
    sub_1C0784B6C((uint64_t)a1, qword_1EF631E48);
    goto LABEL_6;
  }
  if (v8)
  {
LABEL_6:
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    return a1;
  }
  v9 = sub_1C106D6CC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(a1, a2, v9);
  *(_OWORD *)&a1[*(int *)(v6 + 48)] = *(_OWORD *)&a2[*(int *)(v6 + 48)];
  sub_1C07B2D8C((uint64_t)a1, 0, 2, v6);
  return a1;
}

uint64_t sub_1C0840F74()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1C0840F80(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unsigned int v5;

  v4 = sub_1C07ACF80(qword_1EF631E48);
  v5 = sub_1C07B2D80(a1, a2, v4);
  if (v5 >= 3)
    return v5 - 2;
  else
    return 0;
}

uint64_t sub_1C0840FC8()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1C0840FD4(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;

  if (a2)
    v5 = (a2 + 2);
  else
    v5 = 0;
  v6 = sub_1C07ACF80(qword_1EF631E48);
  return sub_1C077F00C(a1, v5, a3, v6);
}

uint64_t sub_1C084101C(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1C07ACF80(qword_1EF631E48);
  return sub_1C07B2D80(a1, 2, v2);
}

uint64_t sub_1C0841050(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1C07ACF80(qword_1EF631E48);
  return sub_1C07B2D8C(a1, a2, 2, v4);
}

uint64_t type metadata accessor for BehaviorDigestTaskIdentifier(uint64_t a1)
{
  return sub_1C0784B00(a1, qword_1EF631EC0);
}

uint64_t sub_1C08410A0()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1C106D6CC();
  if (v1 <= 0x3F)
  {
    swift_getTupleTypeLayout2();
    swift_initEnumMetadataSinglePayload();
    return 0;
  }
  return result;
}

uint64_t *sub_1C0841110(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  void (*v8)(uint64_t *, uint64_t *, uint64_t);
  uint64_t v9;
  uint64_t v10;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1C106ADE0();
    v8 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    v9 = sub_1C07ACF80(&qword_1ED75D0B8);
    v8((uint64_t *)((char *)a1 + *(int *)(v9 + 36)), (uint64_t *)((char *)a2 + *(int *)(v9 + 36)), v7);
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  }
  return a1;
}

uint64_t sub_1C08411C8(uint64_t a1)
{
  uint64_t v2;
  void (*v3)(uint64_t, uint64_t);
  uint64_t v4;

  v2 = sub_1C106ADE0();
  v3 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8);
  v3(a1, v2);
  v4 = sub_1C07ACF80(&qword_1ED75D0B8);
  v3(a1 + *(int *)(v4 + 36), v2);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C0841234(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;

  v6 = sub_1C106ADE0();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v8 = sub_1C07ACF80(&qword_1ED75D0B8);
  v7(a1 + *(int *)(v8 + 36), a2 + *(int *)(v8 + 36), v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  return a1;
}

uint64_t sub_1C08412C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;

  v6 = sub_1C106ADE0();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24);
  v7(a1, a2, v6);
  v8 = sub_1C07ACF80(&qword_1ED75D0B8);
  v7(a1 + *(int *)(v8 + 36), a2 + *(int *)(v8 + 36), v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1C0841358(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;

  v6 = sub_1C106ADE0();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v8 = sub_1C07ACF80(&qword_1ED75D0B8);
  v7(a1 + *(int *)(v8 + 36), a2 + *(int *)(v8 + 36), v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_1C08413E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;

  v6 = sub_1C106ADE0();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40);
  v7(a1, a2, v6);
  v8 = sub_1C07ACF80(&qword_1ED75D0B8);
  v7(a1 + *(int *)(v8 + 36), a2 + *(int *)(v8 + 36), v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1C0841470()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1C084147C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  unint64_t v8;

  v6 = sub_1C07ACF80(&qword_1ED75D0B8);
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
    return sub_1C07B2D80(a1, a2, v6);
  v8 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v8 >= 0xFFFFFFFF)
    LODWORD(v8) = -1;
  return (v8 + 1);
}

uint64_t sub_1C08414F8()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_1C0841504(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;

  v8 = sub_1C07ACF80(&qword_1ED75D0B8);
  if (*(_DWORD *)(*(_QWORD *)(v8 - 8) + 84) == a3)
  {
    sub_1C077F00C(a1, a2, a2, v8);
  }
  else
  {
    *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
    sub_1C077671C();
  }
}

uint64_t type metadata accessor for BehaviorDigestRunSpecification(uint64_t a1)
{
  return sub_1C0784B00(a1, qword_1EF631F28);
}

void sub_1C0841580()
{
  unint64_t v0;

  sub_1C08415F4();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

void sub_1C08415F4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED7480E8)
  {
    sub_1C106ADE0();
    sub_1C0794BAC((unint64_t *)&qword_1ED755A40, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08B0]);
    v0 = sub_1C106FA9C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED7480E8);
  }
}

void sub_1C084166C()
{
  sub_1C0794BAC(&qword_1EF631F60, type metadata accessor for BehaviorDigestTaskIdentifier, (uint64_t)&unk_1C107BE40);
}

uint64_t sub_1C0841698()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char v55;
  char v56;
  void (*v57)(uint64_t, uint64_t);
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  BOOL v61;
  uint64_t v62;
  uint64_t *v63;
  uint64_t v64;
  unint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t result;
  uint64_t v73;
  uint64_t v74;
  void (*v75)(uint64_t, char *, uint64_t);
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  unint64_t v86;
  __int128 v87;
  uint64_t *v88;
  _QWORD *v89;
  uint64_t v90;
  uint64_t *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;

  sub_1C0779670();
  v93 = v2;
  v94 = v3;
  v5 = v4;
  v81 = sub_1C07ACF80(&qword_1EF631F68);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v6);
  sub_1C07785B8();
  sub_1C07ACF80(&qword_1EF631F70);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v7);
  sub_1C077AED0();
  v79 = v8;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v9);
  v89 = (uint64_t *)((char *)&v73 - v10);
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v73 - v12;
  sub_1C07ACF80((uint64_t *)&unk_1ED762690);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v14);
  sub_1C077AED0();
  v78 = v15;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v16);
  sub_1C0779728();
  v82 = v17;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v73 - v19;
  v21 = sub_1C106ADE0();
  v85 = *(_QWORD *)(v21 - 8);
  MEMORY[0x1E0C80A78](v21);
  sub_1C077AED0();
  v77 = v22;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v23);
  v83 = (uint64_t)&v73 - v24;
  v88 = v0;
  v91 = v0;
  v25 = _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C0841DE0(v25, (void (*)(uint64_t, _QWORD))sub_1C0841DD8, (uint64_t)&v90);
  swift_bridgeObjectRelease();
  v26 = _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C0844D74(v26);
  v28 = v27;
  swift_bridgeObjectRelease();
  v92 = v28;
  sub_1C08401CC(&v92);
  swift_bridgeObjectRelease();
  v84 = v92;
  sub_1C0AA457C();
  v29 = sub_1C07ACF80(&qword_1EF637810);
  sub_1C077AEEC((uint64_t)v13, 1, v29);
  if (v33)
  {
    sub_1C0784B6C((uint64_t)v13, &qword_1EF631F70);
    sub_1C0782118();
    sub_1C07B2D8C(v30, v31, v32, v21);
    goto LABEL_6;
  }
  v76 = v29;
  sub_1C078A6A8((uint64_t)&v13[*(int *)(v29 + 48)], (uint64_t)v20, (uint64_t *)&unk_1ED762690);
  sub_1C07ADADC((uint64_t)v20);
  if (v33)
  {
LABEL_6:
    swift_release();
    sub_1C0784B6C((uint64_t)v20, (uint64_t *)&unk_1ED762690);
    sub_1C07ACF80(&qword_1EF631F78);
    sub_1C0782118();
    return sub_1C07B2D8C(v34, v35, v36, v37);
  }
  v74 = v5;
  v75 = *(void (**)(_QWORD, _QWORD, _QWORD))(v85 + 32);
  v75(v83, v20, v21);
  v38 = 0;
  v39 = MEMORY[0x1E0DEE9D8];
  v40 = *(_QWORD *)(v84 + 16);
  v41 = v79;
  v42 = v82;
  v43 = v76;
  v80 = v40;
  while (1)
  {
    if (v38 == v40)
    {
      v44 = 1;
      v86 = v40;
    }
    else
    {
      if (v38 >= *(_QWORD *)(v84 + 16))
        goto LABEL_39;
      sub_1C0845A78(v84+ ((*(unsigned __int8 *)(*(_QWORD *)(v43 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v43 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v43 - 8) + 72) * v38, v41, &qword_1EF637810);
      v44 = 0;
      v86 = v38 + 1;
    }
    sub_1C07B2D8C(v41, v44, 1, v43);
    v45 = v41;
    v46 = v89;
    sub_1C078A6A8(v41, (uint64_t)v89, &qword_1EF631F70);
    sub_1C077AEEC((uint64_t)v46, 1, v43);
    if (v33)
      goto LABEL_33;
    *(_QWORD *)&v87 = v39;
    v47 = *v89;
    v48 = (uint64_t)v89 + *(int *)(v43 + 48);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v85 + 16))(v42, v83, v21);
    sub_1C07B2D8C(v42, 0, 1, v21);
    v49 = v1 + *(int *)(v81 + 48);
    sub_1C078A6A8(v48, v1, (uint64_t *)&unk_1ED762690);
    sub_1C0845A78(v42, v49, (uint64_t *)&unk_1ED762690);
    sub_1C07ADADC(v1);
    if (v33)
    {
      sub_1C0784B6C(v42, (uint64_t *)&unk_1ED762690);
      sub_1C07ADADC(v49);
      if (!v33)
        goto LABEL_32;
      sub_1C0784B6C(v1, (uint64_t *)&unk_1ED762690);
      v39 = v87;
    }
    else
    {
      v50 = v78;
      sub_1C0845A78(v1, v78, (uint64_t *)&unk_1ED762690);
      sub_1C07ADADC(v49);
      if (v51)
      {
        sub_1C0784B6C(v42, (uint64_t *)&unk_1ED762690);
        (*(void (**)(uint64_t, uint64_t))(v85 + 8))(v50, v21);
LABEL_32:
        sub_1C0784B6C(v1, &qword_1EF631F68);
        v39 = v87;
LABEL_33:
        swift_release();
        v69 = sub_1C07ACF80(&qword_1EF631F78);
        v70 = *(int *)(v69 + 48);
        v71 = v74;
        sub_1C07957C0(v74, v83);
        *(_QWORD *)(v71 + v70) = v39;
        v34 = v71;
        v35 = 0;
        v36 = 1;
        v37 = v69;
        return sub_1C07B2D8C(v34, v35, v36, v37);
      }
      v52 = v77;
      sub_1C07957C0(v77, v49);
      sub_1C0794BAC((unint64_t *)&qword_1EF631F80, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08B8]);
      v53 = v1;
      v54 = v50;
      v55 = sub_1C106FAA8();
      v45 = v79;
      v56 = v55;
      v57 = *(void (**)(_QWORD, _QWORD))(v85 + 8);
      v43 = v76;
      v57(v52, v21);
      sub_1C0784B6C(v82, (uint64_t *)&unk_1ED762690);
      v58 = v54;
      v1 = v53;
      v42 = v82;
      v57(v58, v21);
      sub_1C0784B6C(v53, (uint64_t *)&unk_1ED762690);
      v39 = v87;
      if ((v56 & 1) == 0)
        goto LABEL_33;
    }
    v59 = v88[1];
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      break;
    if ((v47 & 0x8000000000000000) != 0)
      goto LABEL_35;
LABEL_21:
    if (v47 >= *(_QWORD *)(v59 + 16))
      goto LABEL_36;
    v60 = *(_QWORD *)(v59 + 32 + 8 * v47);
    v61 = __OFADD__(v60, 1);
    v62 = v60 + 1;
    if (v61)
      goto LABEL_37;
    *(_QWORD *)(v59 + 32 + 8 * v47) = v62;
    v63 = v88;
    v88[1] = v59;
    v64 = *v63;
    if (v47 >= *(_QWORD *)(v64 + 16))
      goto LABEL_38;
    v87 = *(_OWORD *)(v64 + 24 * v47 + 32);
    swift_unknownObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_1C077C154();
      v39 = v67;
    }
    v65 = *(_QWORD *)(v39 + 16);
    if (v65 >= *(_QWORD *)(v39 + 24) >> 1)
    {
      sub_1C077C154();
      v39 = v68;
    }
    *(_QWORD *)(v39 + 16) = v65 + 1;
    *(_OWORD *)(v39 + 16 * v65 + 32) = v87;
    v38 = v86;
    v40 = v80;
    v41 = v45;
  }
  sub_1C0C6EDEC();
  v59 = v66;
  if ((v47 & 0x8000000000000000) == 0)
    goto LABEL_21;
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
LABEL_39:
  __break(1u);
  result = swift_release();
  __break(1u);
  return result;
}

unint64_t sub_1C0841D10@<X0>(unint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_9;
  }
  if (*(_QWORD *)(*(_QWORD *)a3 + 16) <= result)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  v6 = *(_QWORD *)(*(_QWORD *)a3 + 24 * result + 48);
  if (*(_QWORD *)(v6 + 16) <= a2)
  {
    v10 = sub_1C106ADE0();
    v8 = a4;
    v9 = 1;
    return sub_1C07B2D8C(v8, v9, 1, v10);
  }
  if ((a2 & 0x8000000000000000) == 0)
  {
    v7 = sub_1C106ADE0();
    (*(void (**)(uint64_t, unint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a4, v6+ ((*(unsigned __int8 *)(*(_QWORD *)(v7 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v7 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v7 - 8) + 72) * a2, v7);
    v8 = a4;
    v9 = 0;
    v10 = v7;
    return sub_1C07B2D8C(v8, v9, 1, v10);
  }
LABEL_10:
  __break(1u);
  return result;
}

unint64_t sub_1C0841DD8@<X0>(unint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;

  return sub_1C0841D10(a1, a2, *(_QWORD *)(v3 + 16), a3);
}

uint64_t sub_1C0841DE0(uint64_t a1, void (*a2)(uint64_t, _QWORD), uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t i;
  unint64_t v11;
  uint64_t v13;
  void (*v14)(uint64_t, _QWORD);
  uint64_t v15;
  uint64_t v16;

  v14 = a2;
  v15 = a3;
  v4 = sub_1C07ACF80((uint64_t *)&unk_1ED762690);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = MEMORY[0x1E0DEE9D8];
  sub_1C09D30AC();
  v8 = v16;
  v9 = *(_QWORD *)(a1 + 16);
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  v13 = a1;
  if (v9)
  {
    for (i = 0; i != v9; ++i)
    {
      v14(i, *(_QWORD *)(a1 + 32 + 8 * i));
      v16 = v8;
      v11 = *(_QWORD *)(v8 + 16);
      if (v11 >= *(_QWORD *)(v8 + 24) >> 1)
      {
        sub_1C09D30AC();
        v8 = v16;
      }
      *(_QWORD *)(v8 + 16) = v11 + 1;
      sub_1C078A6A8((uint64_t)v7, v8+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(_QWORD *)(v5 + 72) * v11, (uint64_t *)&unk_1ED762690);
    }
  }
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t sub_1C0841F3C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(a1 + 16);
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  if (v2)
  {
    v3 = sub_1C106FFAC();
    *(_QWORD *)(v3 + 16) = v2;
    bzero((void *)(v3 + 32), 8 * v2);
  }
  return a1;
}

void sub_1C0841FA4(uint64_t *a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = sub_1C0841F3C(*v1);
  v5 = v4;
  sub_1C077960C();
  *a1 = v3;
  a1[1] = v5;
  sub_1C077671C();
}

uint64_t sub_1C0841FDC()
{
  return sub_1C07BD3A8();
}

void sub_1C0841FE4()
{
  sub_1C0F0E6E4();
}

uint64_t sub_1C0841FEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  return sub_1C0F0E9DC(a1, a2, a3, *v3);
}

uint64_t sub_1C0841FF4()
{
  return sub_1C106FDFC();
}

void sub_1C0842014(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  uint64_t v59;
  _QWORD *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  void (*v65)(char *, uint64_t, uint64_t);
  char *v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  void (*v70)(char *, uint64_t);
  uint64_t v71;
  uint64_t v72;
  _QWORD *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  int v77;
  uint64_t v78;
  void (*v79)(char *, uint64_t, uint64_t);
  char *v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  void (*v84)(char *, uint64_t);
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  unint64_t v91;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  _QWORD *v103;
  _QWORD *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  void (*v109)(char *, uint64_t, uint64_t);
  char *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  char *v114;
  char v115;
  void (*v116)(char *, uint64_t);
  uint64_t v117;
  uint64_t v118;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v120;
  unint64_t v121;
  unint64_t v122;
  char *v123;
  char *v124;
  uint64_t v125;
  unint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  char v130;
  char *v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  BOOL v137;
  unint64_t v138;
  char *v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  char *v144;
  uint64_t v145;
  uint64_t v146;
  BOOL v147;
  uint64_t v148;
  char v149;
  char *v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  BOOL v154;
  uint64_t v155;
  uint64_t v156;
  char *v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  char *v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  unint64_t v165;
  char *v166;
  char *v167;
  uint64_t v168;
  char *v169;
  uint64_t v170;
  uint64_t v171;
  unint64_t v172;
  uint64_t v173;
  uint64_t v174;
  unint64_t v175;
  char *v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  char *v180;
  unint64_t v181;
  char *v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  _QWORD *v186;
  _QWORD *v187;
  _QWORD *v188;
  char *v189;
  char *v190;
  _QWORD *v191;
  uint64_t v192;
  char *v193;
  char *v194;
  uint64_t v195;
  _QWORD *v196;
  uint64_t v197;
  _QWORD *v198;
  unint64_t v199;
  _QWORD *v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  char *v204;
  _QWORD *v205;
  uint64_t v206;
  _QWORD *v207;
  _QWORD *v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  char *v219;
  _QWORD *v220;
  uint64_t *v221;

  v2 = sub_1C106ADE0();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x1E0C80A78](v2);
  v204 = (char *)&v182 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = MEMORY[0x1E0C80A78](v4);
  v219 = (char *)&v182 - v7;
  v8 = MEMORY[0x1E0C80A78](v6);
  v189 = (char *)&v182 - v9;
  v10 = MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v182 - v11;
  v13 = MEMORY[0x1E0C80A78](v10);
  v15 = (char *)&v182 - v14;
  MEMORY[0x1E0C80A78](v13);
  v17 = (char *)&v182 - v16;
  v18 = sub_1C07ACF80(&qword_1EF637810);
  v201 = *(_QWORD *)(v18 - 8);
  v19 = MEMORY[0x1E0C80A78](v18);
  v195 = (uint64_t)&v182 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = MEMORY[0x1E0C80A78](v19);
  v215 = (uint64_t)&v182 - v22;
  v23 = MEMORY[0x1E0C80A78](v21);
  v205 = (char **)((char *)&v182 - v24);
  v25 = MEMORY[0x1E0C80A78](v23);
  v208 = (char **)((char *)&v182 - v26);
  v27 = MEMORY[0x1E0C80A78](v25);
  v207 = (char **)((char *)&v182 - v28);
  v29 = MEMORY[0x1E0C80A78](v27);
  v220 = (char **)((char *)&v182 - v30);
  v31 = MEMORY[0x1E0C80A78](v29);
  v191 = (char **)((char *)&v182 - v32);
  v33 = MEMORY[0x1E0C80A78](v31);
  v196 = (char **)((char *)&v182 - v34);
  v35 = MEMORY[0x1E0C80A78](v33);
  v37 = (char **)((char *)&v182 - v36);
  v38 = MEMORY[0x1E0C80A78](v35);
  v198 = (char **)((char *)&v182 - v39);
  v40 = MEMORY[0x1E0C80A78](v38);
  v186 = (char **)((char *)&v182 - v41);
  v42 = MEMORY[0x1E0C80A78](v40);
  v187 = (char **)((char *)&v182 - v43);
  v44 = MEMORY[0x1E0C80A78](v42);
  v202 = (uint64_t)&v182 - v45;
  MEMORY[0x1E0C80A78](v44);
  v188 = (char **)((char *)&v182 - v46);
  v221 = a1;
  v47 = a1[1];
  v48 = sub_1C1070BE8();
  if (v48 >= v47)
  {
    if (v47 < 0)
      goto LABEL_159;
    if (v47)
    {
      v173 = v203;
      sub_1C0843030(0, v47, 1, v221);
      v203 = v173;
    }
    return;
  }
  v185 = v48;
  sub_1C08CBE34(v47 / 2);
  v183 = v49;
  v199 = v50;
  v184 = v47;
  if (v47 <= 0)
    goto LABEL_122;
  v182 = v15;
  v193 = v12;
  v206 = v3;
  v51 = 0;
  v52 = (char *)MEMORY[0x1E0DEE9D8];
  v212 = v18;
  v213 = v2;
  v200 = v37;
  v53 = v202;
  v190 = v17;
  while (1)
  {
    v194 = v52;
    v197 = v51;
    if (v51 + 1 >= v47)
    {
      v62 = v51 + 1;
    }
    else
    {
      v217 = v47;
      v54 = v51;
      v55 = v53;
      v56 = *v221;
      v57 = *(_QWORD *)(v201 + 72);
      v214 = v51 + 1;
      v58 = v188;
      sub_1C0845A78(v56 + v57 * (v51 + 1), (uint64_t)v188, &qword_1EF637810);
      v210 = v56;
      v218 = v57;
      sub_1C0845A78(v56 + v57 * v54, v55, &qword_1EF637810);
      v59 = *(int *)(v18 + 48);
      v60 = (_QWORD *)v55;
      v61 = (uint64_t)v187 + v59;
      *v187 = *v58;
      sub_1C0845A78((uint64_t)v58 + v59, v61, (uint64_t *)&unk_1ED762690);
      if (sub_1C07B2D80(v61, 1, v2) == 1)
      {
        sub_1C0784B6C(v61, (uint64_t *)&unk_1ED762690);
        LODWORD(v216) = 0;
      }
      else
      {
        v63 = v18;
        v64 = v206;
        v65 = *(void (**)(char *, uint64_t, uint64_t))(v206 + 32);
        v66 = v190;
        v65(v190, v61, v2);
        v67 = *(int *)(v63 + 48);
        v68 = (uint64_t)v186 + v67;
        *v186 = *v60;
        sub_1C0845A78((uint64_t)v60 + v67, v68, (uint64_t *)&unk_1ED762690);
        if (sub_1C07B2D80(v68, 1, v2) == 1)
        {
          (*(void (**)(char *, uint64_t))(v64 + 8))(v66, v2);
          sub_1C0784B6C(v68, (uint64_t *)&unk_1ED762690);
          LODWORD(v216) = 1;
        }
        else
        {
          v69 = v182;
          v65(v182, v68, v2);
          LODWORD(v216) = sub_1C106AD50();
          v70 = *(void (**)(char *, uint64_t))(v64 + 8);
          v70(v69, v2);
          v70(v66, v2);
        }
        v18 = v212;
      }
      v53 = v202;
      sub_1C0784B6C(v202, &qword_1EF637810);
      sub_1C0784B6C((uint64_t)v188, &qword_1EF637810);
      v51 = v197;
      v62 = v197 + 2;
      v47 = v217;
      if (v197 + 2 < v217)
      {
        v71 = v218 * v214;
        v72 = v210;
        v211 = v218 * v62;
        v209 = v218 * v214;
        while (1)
        {
          v214 = v62;
          v73 = v198;
          sub_1C0845A78(v72 + v211, (uint64_t)v198, &qword_1EF637810);
          sub_1C0845A78(v72 + v71, (uint64_t)v37, &qword_1EF637810);
          v74 = v212;
          v75 = *(int *)(v212 + 48);
          v76 = (uint64_t)v196 + v75;
          *v196 = *v73;
          sub_1C0845A78((uint64_t)v73 + v75, v76, (uint64_t *)&unk_1ED762690);
          if (sub_1C07B2D80(v76, 1, v2) == 1)
          {
            sub_1C0784B6C(v76, (uint64_t *)&unk_1ED762690);
            v77 = 0;
            v47 = v217;
          }
          else
          {
            v78 = v206;
            v79 = *(void (**)(char *, uint64_t, uint64_t))(v206 + 32);
            v80 = v193;
            v79(v193, v76, v2);
            v81 = *(int *)(v74 + 48);
            v82 = (uint64_t)v191 + v81;
            *v191 = *v37;
            sub_1C0845A78((uint64_t)v37 + v81, v82, (uint64_t *)&unk_1ED762690);
            if (sub_1C07B2D80(v82, 1, v2) == 1)
            {
              (*(void (**)(char *, uint64_t))(v78 + 8))(v80, v2);
              sub_1C0784B6C(v82, (uint64_t *)&unk_1ED762690);
              v77 = 1;
            }
            else
            {
              v83 = v189;
              v79(v189, v82, v2);
              v77 = sub_1C106AD50();
              v84 = *(void (**)(char *, uint64_t))(v78 + 8);
              v84(v83, v2);
              v84(v193, v2);
            }
            v37 = v200;
            v47 = v217;
            v71 = v209;
          }
          sub_1C0784B6C((uint64_t)v37, &qword_1EF637810);
          sub_1C0784B6C((uint64_t)v198, &qword_1EF637810);
          v62 = v214;
          if (((v216 ^ v77) & 1) != 0)
            break;
          v62 = v214 + 1;
          v72 += v218;
          if (v214 + 1 >= v47)
          {
            v62 = v47;
            break;
          }
        }
        v18 = v212;
        v53 = v202;
        v51 = v197;
      }
      if ((v216 & 1) != 0)
      {
        if (v62 < v51)
          goto LABEL_160;
        if (v51 < v62)
        {
          v85 = 0;
          v86 = v218 * (v62 - 1);
          v87 = v62 * v218;
          v88 = v51;
          v89 = v51 * v218;
          v214 = v62;
          do
          {
            if (v88 != v62 + v85 - 1)
            {
              v90 = v210;
              if (!v210)
                goto LABEL_166;
              v91 = v210 + v89;
              v216 = v210 + v86;
              sub_1C078A6A8(v210 + v89, v195, &qword_1EF637810);
              if (v89 < v86 || v91 >= v90 + v87)
              {
                v93 = v216;
                swift_arrayInitWithTakeFrontToBack();
              }
              else
              {
                v93 = v216;
                if (v89 != v86)
                  swift_arrayInitWithTakeBackToFront();
              }
              sub_1C078A6A8(v195, v93, &qword_1EF637810);
              v53 = v202;
              v62 = v214;
            }
            ++v88;
            --v85;
            v86 -= v218;
            v87 -= v218;
            v89 += v218;
          }
          while (v88 < v62 + v85);
          v18 = v212;
          v2 = v213;
          v51 = v197;
          v47 = v217;
        }
      }
    }
    if (v62 < v47)
    {
      v137 = __OFSUB__(v62, v51);
      v94 = v62 - v51;
      if (v137)
        goto LABEL_158;
      if (v94 < v185)
      {
        if (__OFADD__(v197, v185))
          goto LABEL_161;
        if (v197 + v185 >= v47)
          v95 = v47;
        else
          v95 = v197 + v185;
        if (v95 < v197)
        {
LABEL_162:
          __break(1u);
          goto LABEL_163;
        }
        if (v62 == v95)
        {
          v51 = v197;
          goto LABEL_66;
        }
        v96 = *(_QWORD *)(v201 + 72);
        v97 = v96 * (v62 - 1);
        v209 = v96;
        v98 = v62 * v96;
        v192 = v95;
LABEL_52:
        v99 = 0;
        v100 = v197;
        v214 = v62;
        v210 = v97;
        v211 = v98;
        while (1)
        {
          v218 = v100;
          v101 = *v221;
          v217 = v98 + v99;
          v102 = v98 + v99 + v101;
          v103 = v220;
          sub_1C0845A78(v102, (uint64_t)v220, &qword_1EF637810);
          v216 = v97 + v99;
          v104 = v207;
          sub_1C0845A78(v97 + v99 + v101, (uint64_t)v207, &qword_1EF637810);
          v105 = *(int *)(v18 + 48);
          v106 = (uint64_t)v208 + v105;
          *v208 = *v103;
          sub_1C0845A78((uint64_t)v103 + v105, v106, (uint64_t *)&unk_1ED762690);
          v107 = v213;
          if (sub_1C07B2D80(v106, 1, v213) == 1)
          {
            sub_1C0784B6C(v106, (uint64_t *)&unk_1ED762690);
            sub_1C0784B6C((uint64_t)v104, &qword_1EF637810);
            sub_1C0784B6C((uint64_t)v220, &qword_1EF637810);
            goto LABEL_62;
          }
          v108 = v206;
          v109 = *(void (**)(char *, uint64_t, uint64_t))(v206 + 32);
          v110 = v219;
          v109(v219, v106, v107);
          v111 = *(int *)(v18 + 48);
          v112 = (uint64_t)v205 + v111;
          *v205 = *v104;
          sub_1C0845A78((uint64_t)v104 + v111, v112, (uint64_t *)&unk_1ED762690);
          v113 = (uint64_t)v104;
          if (sub_1C07B2D80(v112, 1, v107) == 1)
          {
            (*(void (**)(char *, uint64_t))(v108 + 8))(v110, v107);
            sub_1C0784B6C(v112, (uint64_t *)&unk_1ED762690);
            sub_1C0784B6C((uint64_t)v104, &qword_1EF637810);
            sub_1C0784B6C((uint64_t)v220, &qword_1EF637810);
          }
          else
          {
            v114 = v204;
            v109(v204, v112, v107);
            v115 = sub_1C106AD50();
            v116 = *(void (**)(char *, uint64_t))(v108 + 8);
            v116(v114, v107);
            v116(v219, v107);
            sub_1C0784B6C(v113, &qword_1EF637810);
            sub_1C0784B6C((uint64_t)v220, &qword_1EF637810);
            if ((v115 & 1) == 0)
            {
              v18 = v212;
              v62 = v214;
              v97 = v210;
LABEL_62:
              v98 = v211;
LABEL_63:
              ++v62;
              v97 += v209;
              v98 += v209;
              if (v62 == v192)
              {
                v62 = v192;
                v2 = v213;
                v37 = v200;
                v53 = v202;
                break;
              }
              goto LABEL_52;
            }
          }
          v117 = *v221;
          v98 = v211;
          v18 = v212;
          v97 = v210;
          if (!*v221)
            goto LABEL_164;
          v118 = v117 + v210 + v99;
          sub_1C078A6A8(v117 + v211 + v99, v215, &qword_1EF637810);
          swift_arrayInitWithTakeFrontToBack();
          sub_1C078A6A8(v215, v118, &qword_1EF637810);
          v99 -= v209;
          v100 = v218 + 1;
          v62 = v214;
          if (v214 == v218 + 1)
            goto LABEL_63;
        }
      }
      v51 = v197;
    }
LABEL_66:
    if (v62 < v51)
      goto LABEL_157;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v214 = v62;
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      v52 = v194;
    else
      v52 = sub_1C0861AD0(0, *((_QWORD *)v194 + 2) + 1, 1, v194);
    v121 = *((_QWORD *)v52 + 2);
    v120 = *((_QWORD *)v52 + 3);
    v122 = v121 + 1;
    if (v121 >= v120 >> 1)
      v52 = sub_1C0861AD0((char *)(v120 > 1), v121 + 1, 1, v52);
    *((_QWORD *)v52 + 2) = v122;
    v123 = v52 + 32;
    v124 = &v52[16 * v121 + 32];
    v125 = v214;
    *(_QWORD *)v124 = v197;
    *((_QWORD *)v124 + 1) = v125;
    if (v121)
      break;
    v122 = 1;
LABEL_114:
    v47 = v221[1];
    v51 = v214;
    v18 = v212;
    if (v214 >= v47)
      goto LABEL_123;
  }
  while (1)
  {
    v126 = v122 - 1;
    if (v122 >= 4)
    {
      v131 = &v123[16 * v122];
      v132 = *((_QWORD *)v131 - 8);
      v133 = *((_QWORD *)v131 - 7);
      v137 = __OFSUB__(v133, v132);
      v134 = v133 - v132;
      if (v137)
        goto LABEL_142;
      v136 = *((_QWORD *)v131 - 6);
      v135 = *((_QWORD *)v131 - 5);
      v137 = __OFSUB__(v135, v136);
      v129 = v135 - v136;
      v130 = v137;
      if (v137)
        goto LABEL_143;
      v138 = v122 - 2;
      v139 = &v123[16 * v122 - 32];
      v141 = *(_QWORD *)v139;
      v140 = *((_QWORD *)v139 + 1);
      v137 = __OFSUB__(v140, v141);
      v142 = v140 - v141;
      if (v137)
        goto LABEL_144;
      v137 = __OFADD__(v129, v142);
      v143 = v129 + v142;
      if (v137)
        goto LABEL_146;
      if (v143 >= v134)
      {
        v161 = &v123[16 * v126];
        v163 = *(_QWORD *)v161;
        v162 = *((_QWORD *)v161 + 1);
        v137 = __OFSUB__(v162, v163);
        v164 = v162 - v163;
        if (v137)
          goto LABEL_152;
        v154 = v129 < v164;
        goto LABEL_103;
      }
    }
    else
    {
      if (v122 != 3)
      {
        v155 = *((_QWORD *)v52 + 4);
        v156 = *((_QWORD *)v52 + 5);
        v137 = __OFSUB__(v156, v155);
        v148 = v156 - v155;
        v149 = v137;
        goto LABEL_97;
      }
      v128 = *((_QWORD *)v52 + 4);
      v127 = *((_QWORD *)v52 + 5);
      v137 = __OFSUB__(v127, v128);
      v129 = v127 - v128;
      v130 = v137;
    }
    if ((v130 & 1) != 0)
      goto LABEL_145;
    v138 = v122 - 2;
    v144 = &v123[16 * v122 - 32];
    v146 = *(_QWORD *)v144;
    v145 = *((_QWORD *)v144 + 1);
    v147 = __OFSUB__(v145, v146);
    v148 = v145 - v146;
    v149 = v147;
    if (v147)
      goto LABEL_147;
    v150 = &v123[16 * v126];
    v152 = *(_QWORD *)v150;
    v151 = *((_QWORD *)v150 + 1);
    v137 = __OFSUB__(v151, v152);
    v153 = v151 - v152;
    if (v137)
      goto LABEL_149;
    if (__OFADD__(v148, v153))
      goto LABEL_151;
    if (v148 + v153 >= v129)
    {
      v154 = v129 < v153;
LABEL_103:
      if (v154)
        v126 = v138;
      goto LABEL_105;
    }
LABEL_97:
    if ((v149 & 1) != 0)
      goto LABEL_148;
    v157 = &v123[16 * v126];
    v159 = *(_QWORD *)v157;
    v158 = *((_QWORD *)v157 + 1);
    v137 = __OFSUB__(v158, v159);
    v160 = v158 - v159;
    if (v137)
      goto LABEL_150;
    if (v160 < v148)
      goto LABEL_114;
LABEL_105:
    v165 = v126 - 1;
    if (v126 - 1 >= v122)
    {
      __break(1u);
LABEL_139:
      __break(1u);
LABEL_140:
      __break(1u);
LABEL_141:
      __break(1u);
LABEL_142:
      __break(1u);
LABEL_143:
      __break(1u);
LABEL_144:
      __break(1u);
LABEL_145:
      __break(1u);
LABEL_146:
      __break(1u);
LABEL_147:
      __break(1u);
LABEL_148:
      __break(1u);
LABEL_149:
      __break(1u);
LABEL_150:
      __break(1u);
LABEL_151:
      __break(1u);
LABEL_152:
      __break(1u);
      goto LABEL_153;
    }
    if (!*v221)
      goto LABEL_165;
    v166 = v52;
    v167 = &v123[16 * v165];
    v168 = *(_QWORD *)v167;
    v169 = &v123[16 * v126];
    v170 = *((_QWORD *)v169 + 1);
    v171 = v203;
    sub_1C084346C(*v221 + *(_QWORD *)(v201 + 72) * *(_QWORD *)v167, *v221 + *(_QWORD *)(v201 + 72) * *(_QWORD *)v169, *v221 + *(_QWORD *)(v201 + 72) * v170, v199);
    v203 = v171;
    if (v171)
      break;
    if (v170 < v168)
      goto LABEL_139;
    if (v126 > *((_QWORD *)v166 + 2))
      goto LABEL_140;
    *(_QWORD *)v167 = v168;
    *(_QWORD *)&v123[16 * v165 + 8] = v170;
    v172 = *((_QWORD *)v166 + 2);
    if (v126 >= v172)
      goto LABEL_141;
    v122 = v172 - 1;
    memmove(&v123[16 * v126], v169 + 16, 16 * (v172 - 1 - v126));
    v52 = v166;
    *((_QWORD *)v166 + 2) = v172 - 1;
    v2 = v213;
    v37 = v200;
    v53 = v202;
    if (v172 <= 2)
      goto LABEL_114;
  }
LABEL_120:
  swift_bridgeObjectRelease();
  if (v184 >= -1)
    goto LABEL_135;
  __break(1u);
LABEL_122:
  v52 = (char *)MEMORY[0x1E0DEE9D8];
  v122 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
LABEL_123:
  if (v122 >= 2)
  {
    v174 = *v221;
    while (1)
    {
      v175 = v122 - 2;
      if (v122 < 2)
        break;
      if (!v174)
        goto LABEL_167;
      v176 = v52;
      v177 = *(_QWORD *)&v52[16 * v175 + 32];
      v178 = *(_QWORD *)&v52[16 * v122 + 24];
      v179 = v203;
      sub_1C084346C(v174 + *(_QWORD *)(v201 + 72) * v177, v174 + *(_QWORD *)(v201 + 72) * *(_QWORD *)&v52[16 * v122 + 16], v174 + *(_QWORD *)(v201 + 72) * v178, v199);
      v203 = v179;
      if (v179)
        goto LABEL_120;
      if (v178 < v177)
        goto LABEL_154;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v176 = sub_1C0861BC0();
      if (v175 >= *((_QWORD *)v176 + 2))
        goto LABEL_155;
      v180 = &v176[16 * v175 + 32];
      *(_QWORD *)v180 = v177;
      *((_QWORD *)v180 + 1) = v178;
      v181 = *((_QWORD *)v176 + 2);
      if (v122 > v181)
        goto LABEL_156;
      memmove(&v176[16 * v122 + 16], &v176[16 * v122 + 32], 16 * (v181 - v122));
      v52 = v176;
      *((_QWORD *)v176 + 2) = v181 - 1;
      v122 = v181 - 1;
      if (v181 <= 2)
        goto LABEL_134;
    }
LABEL_153:
    __break(1u);
LABEL_154:
    __break(1u);
LABEL_155:
    __break(1u);
LABEL_156:
    __break(1u);
LABEL_157:
    __break(1u);
LABEL_158:
    __break(1u);
LABEL_159:
    __break(1u);
LABEL_160:
    __break(1u);
LABEL_161:
    __break(1u);
    goto LABEL_162;
  }
LABEL_134:
  swift_bridgeObjectRelease();
  if (v184 >= -1)
  {
LABEL_135:
    *(_QWORD *)(v183 + 16) = 0;
    swift_bridgeObjectRelease();
    return;
  }
LABEL_163:
  __break(1u);
LABEL_164:
  __break(1u);
LABEL_165:
  __break(1u);
LABEL_166:
  __break(1u);
LABEL_167:
  __break(1u);
}

void sub_1C0843030(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(char *, uint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  char *v35;
  char v36;
  void (*v37)(char *, uint64_t);
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  _QWORD *v47;
  _QWORD *v48;
  uint64_t v49;
  _QWORD *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t *v57;
  uint64_t v58;
  uint64_t v59;

  v57 = a4;
  v44 = a1;
  v6 = sub_1C106ADE0();
  v49 = *(_QWORD *)(v6 - 8);
  v7 = MEMORY[0x1E0C80A78](v6);
  v46 = (char *)&v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v54 = (char *)&v42 - v9;
  v10 = sub_1C07ACF80(&qword_1EF637810);
  v11 = MEMORY[0x1E0C80A78](v10);
  v53 = (uint64_t)&v42 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x1E0C80A78](v11);
  v48 = (uint64_t *)((char *)&v42 - v14);
  v15 = MEMORY[0x1E0C80A78](v13);
  v50 = (uint64_t *)((char *)&v42 - v16);
  v17 = MEMORY[0x1E0C80A78](v15);
  v19 = (uint64_t *)((char *)&v42 - v18);
  MEMORY[0x1E0C80A78](v17);
  v22 = (uint64_t *)((char *)&v42 - v21);
  v52 = a3;
  v43 = a2;
  if (a3 != a2)
  {
    v23 = *(_QWORD *)(v20 + 72);
    v59 = v23 * (v52 - 1);
    v51 = v23;
    v58 = v23 * v52;
    v45 = v10;
    v47 = (uint64_t *)((char *)&v42 - v21);
    while (2)
    {
      v24 = 0;
      v25 = v44;
      while (1)
      {
        v26 = *v57;
        v56 = v58 + v24;
        sub_1C0845A78(v58 + v24 + v26, (uint64_t)v22, &qword_1EF637810);
        v55 = v59 + v24;
        sub_1C0845A78(v59 + v24 + v26, (uint64_t)v19, &qword_1EF637810);
        v27 = *(int *)(v10 + 48);
        v28 = (uint64_t)v50 + v27;
        *v50 = *v22;
        sub_1C0845A78((uint64_t)v22 + v27, v28, (uint64_t *)&unk_1ED762690);
        if (sub_1C07B2D80(v28, 1, v6) == 1)
          break;
        v29 = v49;
        v30 = *(void (**)(char *, uint64_t, uint64_t))(v49 + 32);
        v30(v54, v28, v6);
        v31 = *(int *)(v10 + 48);
        v32 = (uint64_t)v48 + v31;
        *v48 = *v19;
        sub_1C0845A78((uint64_t)v19 + v31, v32, (uint64_t *)&unk_1ED762690);
        if (sub_1C07B2D80(v32, 1, v6) == 1)
        {
          (*(void (**)(char *, uint64_t))(v29 + 8))(v54, v6);
          sub_1C0784B6C(v32, (uint64_t *)&unk_1ED762690);
          sub_1C0784B6C((uint64_t)v19, &qword_1EF637810);
          v22 = v47;
          sub_1C0784B6C((uint64_t)v47, &qword_1EF637810);
        }
        else
        {
          v33 = v54;
          v34 = v6;
          v35 = v46;
          v30(v46, v32, v34);
          v36 = sub_1C106AD50();
          v37 = *(void (**)(char *, uint64_t))(v29 + 8);
          v38 = v35;
          v6 = v34;
          v39 = v33;
          v10 = v45;
          v37(v38, v34);
          v37(v39, v34);
          sub_1C0784B6C((uint64_t)v19, &qword_1EF637810);
          v22 = v47;
          sub_1C0784B6C((uint64_t)v47, &qword_1EF637810);
          if ((v36 & 1) == 0)
            goto LABEL_12;
        }
        v40 = *v57;
        if (!*v57)
        {
          __break(1u);
          return;
        }
        v41 = v40 + v59 + v24;
        sub_1C078A6A8(v40 + v58 + v24, v53, &qword_1EF637810);
        swift_arrayInitWithTakeFrontToBack();
        sub_1C078A6A8(v53, v41, &qword_1EF637810);
        v24 -= v51;
        if (v52 == ++v25)
          goto LABEL_12;
      }
      sub_1C0784B6C(v28, (uint64_t *)&unk_1ED762690);
      sub_1C0784B6C((uint64_t)v19, &qword_1EF637810);
      sub_1C0784B6C((uint64_t)v22, &qword_1EF637810);
LABEL_12:
      v59 += v51;
      v58 += v51;
      if (++v52 != v43)
        continue;
      break;
    }
  }
}

void sub_1C084346C(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  int64_t v36;
  int64_t v38;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  uint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  BOOL v50;
  uint64_t v51;
  void (*v52)(char *, uint64_t, uint64_t);
  _QWORD *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char v58;
  void (*v59)(char *, uint64_t);
  unint64_t v62;
  uint64_t v63;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  _QWORD *v68;
  _QWORD *v69;
  _QWORD *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char v75;
  uint64_t v76;
  void (*v77)(char *, uint64_t, uint64_t);
  char *v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  void (*v82)(char *, uint64_t);
  unint64_t v83;
  uint64_t v86;
  int64_t v88;
  uint64_t v90;
  char *v91;
  char *v92;
  unint64_t v93;
  char *v94;
  char *v95;
  _QWORD *v96;
  char *v97;
  uint64_t v98;
  _QWORD *v99;
  uint64_t v100;
  _QWORD *v101;
  _QWORD *v102;
  unint64_t v103;
  uint64_t v104;
  unint64_t v105;
  uint64_t v106;
  unint64_t v107;
  uint64_t v108;
  unint64_t v109;

  v105 = a3;
  v7 = sub_1C106ADE0();
  v98 = *(_QWORD *)(v7 - 8);
  v8 = MEMORY[0x1E0C80A78](v7);
  v92 = (char *)&v90 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v90 - v11;
  v13 = MEMORY[0x1E0C80A78](v10);
  v91 = (char *)&v90 - v14;
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v90 - v15;
  v17 = sub_1C07ACF80(&qword_1EF637810);
  v18 = MEMORY[0x1E0C80A78](v17);
  v96 = (uint64_t *)((char *)&v90 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  v20 = MEMORY[0x1E0C80A78](v18);
  v99 = (uint64_t *)((char *)&v90 - v21);
  v22 = MEMORY[0x1E0C80A78](v20);
  v97 = (char *)&v90 - v23;
  v24 = MEMORY[0x1E0C80A78](v22);
  v107 = (unint64_t)&v90 - v25;
  v26 = MEMORY[0x1E0C80A78](v24);
  v101 = (uint64_t *)((char *)&v90 - v27);
  v28 = MEMORY[0x1E0C80A78](v26);
  v106 = (uint64_t)&v90 - v29;
  v30 = MEMORY[0x1E0C80A78](v28);
  v32 = (char *)&v90 - v31;
  MEMORY[0x1E0C80A78](v30);
  v102 = (uint64_t *)((char *)&v90 - v33);
  v35 = *(_QWORD *)(v34 + 72);
  if (!v35)
  {
    __break(1u);
LABEL_87:
    __break(1u);
LABEL_88:
    __break(1u);
    goto LABEL_89;
  }
  v36 = a2 - a1;
  if (a2 - a1 == 0x8000000000000000 && v35 == -1)
    goto LABEL_87;
  v38 = v105 - a2;
  if (v105 - a2 == 0x8000000000000000 && v35 == -1)
    goto LABEL_88;
  v94 = v16;
  v95 = v12;
  v103 = a4;
  v104 = v7;
  v40 = v36 / v35;
  v41 = v38 / v35;
  v108 = v17;
  v100 = v35;
  if (v36 / v35 >= v38 / v35)
  {
    v62 = v103;
    sub_1C09D205C(a2, v38 / v35);
    v63 = v41 * v35;
    v42 = v62;
    v43 = v62 + v63;
    if (v63 < 1 || a1 >= a2)
      goto LABEL_81;
    v65 = v35;
    v66 = v17;
    v106 = -v65;
    v67 = (char *)v105;
    v68 = v97;
    v93 = a1;
    while (1)
    {
      v105 = (unint64_t)v67;
      v109 = v43;
      v69 = (_QWORD *)v106;
      v70 = (_QWORD *)v107;
      v102 = (_QWORD *)(v43 + v106);
      sub_1C0845A78(v43 + v106, v107, &qword_1EF637810);
      v101 = (_QWORD *)((char *)v69 + a2);
      sub_1C0845A78((uint64_t)v69 + a2, (uint64_t)v68, &qword_1EF637810);
      v71 = v66;
      v72 = *(int *)(v66 + 48);
      v73 = (uint64_t)v99 + v72;
      *v99 = *v70;
      sub_1C0845A78((uint64_t)v70 + v72, v73, (uint64_t *)&unk_1ED762690);
      v74 = v104;
      if (sub_1C07B2D80(v73, 1, v104) == 1)
      {
        sub_1C0784B6C(v73, (uint64_t *)&unk_1ED762690);
        v75 = 0;
      }
      else
      {
        v76 = v98;
        v77 = *(void (**)(char *, uint64_t, uint64_t))(v98 + 32);
        v78 = v95;
        v77(v95, v73, v74);
        v79 = *(int *)(v71 + 48);
        v80 = (uint64_t)v96 + v79;
        *v96 = *v68;
        sub_1C0845A78((uint64_t)v68 + v79, v80, (uint64_t *)&unk_1ED762690);
        if (sub_1C07B2D80(v80, 1, v74) == 1)
        {
          (*(void (**)(char *, uint64_t))(v76 + 8))(v78, v74);
          sub_1C0784B6C(v80, (uint64_t *)&unk_1ED762690);
          v75 = 1;
        }
        else
        {
          v81 = v92;
          v77(v92, v80, v74);
          v75 = sub_1C106AD50();
          v82 = *(void (**)(char *, uint64_t))(v76 + 8);
          v82(v81, v74);
          v82(v78, v74);
        }
        v42 = v103;
        v66 = v108;
        v68 = v97;
        a1 = v93;
      }
      v83 = v105;
      v67 = (char *)(v105 + v106);
      sub_1C0784B6C((uint64_t)v68, &qword_1EF637810);
      sub_1C0784B6C(v107, &qword_1EF637810);
      if ((v75 & 1) != 0)
      {
        if (v83 < a2 || (unint64_t)v67 >= a2)
        {
          a2 = (unint64_t)v101;
          swift_arrayInitWithTakeFrontToBack();
        }
        else if (v83 == a2)
        {
          a2 = (unint64_t)v101;
        }
        else
        {
          a2 = (unint64_t)v101;
          swift_arrayInitWithTakeBackToFront();
        }
        v43 = v109;
        goto LABEL_75;
      }
      if (v83 < v109 || (unint64_t)v67 >= v109)
      {
        v86 = (uint64_t)v102;
        swift_arrayInitWithTakeFrontToBack();
      }
      else
      {
        if (v83 == v109)
        {
          v43 = (unint64_t)v102;
          goto LABEL_75;
        }
        v86 = (uint64_t)v102;
        swift_arrayInitWithTakeBackToFront();
      }
      v43 = v86;
LABEL_75:
      if (v43 <= v42 || a2 <= a1)
      {
        v35 = v100;
        goto LABEL_81;
      }
    }
  }
  v42 = v103;
  sub_1C09D205C(a1, v36 / v35);
  v43 = v42 + v40 * v35;
  if (v40 * v35 >= 1 && a2 < v105)
  {
    v45 = (uint64_t)v32;
    v46 = v102;
    v109 = v42 + v40 * v35;
    do
    {
      v107 = a2;
      sub_1C0845A78(a2, (uint64_t)v46, &qword_1EF637810);
      sub_1C0845A78(v42, v45, &qword_1EF637810);
      v47 = v108;
      v48 = *(int *)(v108 + 48);
      v49 = v106 + v48;
      *(_QWORD *)v106 = *v46;
      sub_1C0845A78((uint64_t)v46 + v48, v49, (uint64_t *)&unk_1ED762690);
      if (sub_1C07B2D80(v49, 1, v7) == 1)
      {
        sub_1C0784B6C(v49, (uint64_t *)&unk_1ED762690);
        sub_1C0784B6C(v45, &qword_1EF637810);
        sub_1C0784B6C((uint64_t)v46, &qword_1EF637810);
        v35 = v100;
      }
      else
      {
        v103 = v42;
        v51 = v98;
        v52 = *(void (**)(char *, uint64_t, uint64_t))(v98 + 32);
        v53 = (_QWORD *)v45;
        v54 = v94;
        v52(v94, v49, v7);
        v55 = *(int *)(v47 + 48);
        v56 = (uint64_t)v101 + v55;
        *v101 = *v53;
        sub_1C0845A78((uint64_t)v53 + v55, v56, (uint64_t *)&unk_1ED762690);
        if (sub_1C07B2D80(v56, 1, v7) == 1)
        {
          (*(void (**)(char *, uint64_t))(v51 + 8))(v54, v7);
          sub_1C0784B6C(v56, (uint64_t *)&unk_1ED762690);
          sub_1C0784B6C((uint64_t)v53, &qword_1EF637810);
          v46 = v102;
          sub_1C0784B6C((uint64_t)v102, &qword_1EF637810);
          v35 = v100;
          v45 = (uint64_t)v53;
          v42 = v103;
LABEL_30:
          a2 = v107 + v35;
          if (a1 < v107 || a1 >= a2)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (a1 != v107)
          {
            swift_arrayInitWithTakeBackToFront();
          }
          goto LABEL_38;
        }
        v57 = v91;
        v52(v91, v56, v7);
        v58 = sub_1C106AD50();
        v59 = *(void (**)(char *, uint64_t))(v51 + 8);
        v59(v57, v7);
        v59(v54, v7);
        sub_1C0784B6C((uint64_t)v53, &qword_1EF637810);
        v46 = v102;
        sub_1C0784B6C((uint64_t)v102, &qword_1EF637810);
        v35 = v100;
        v45 = (uint64_t)v53;
        v42 = v103;
        if ((v58 & 1) != 0)
          goto LABEL_30;
      }
      v50 = a1 < v42 || a1 >= v42 + v35;
      a2 = v107;
      if (v50)
      {
        swift_arrayInitWithTakeFrontToBack();
      }
      else if (a1 != v42)
      {
        swift_arrayInitWithTakeBackToFront();
      }
      v42 += v35;
      v7 = v104;
LABEL_38:
      v43 = v109;
      a1 += v35;
    }
    while (v42 < v109 && a2 < v105);
  }
LABEL_81:
  v88 = v43 - v42;
  if (v35 != -1 || v88 != 0x8000000000000000)
  {
    sub_1C09D205C(v42, v88 / v35);
    return;
  }
LABEL_89:
  __break(1u);
}

void sub_1C0843C50()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;
  char v4;
  _QWORD *v5;
  size_t v6;
  uint64_t v7;
  uint64_t v8;
  BOOL v9;
  BOOL v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  sub_1C0779670();
  sub_1C077AF90();
  type metadata accessor for GDInteractionEnumeration.GDInteractionIterator();
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v0);
  sub_1C0793724();
  sub_1C106AA50();
  sub_1C106AA38();
  v1 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  if (v14)
  {
    sub_1C07D4B70(0, &qword_1ED758D28);
    v2 = 0;
    v3 = v1 + 4;
    while ((sub_1C078AB44() & 1) != 0)
    {
      if (!v2)
      {
        sub_1C0796168();
        if (v4)
          goto LABEL_24;
        sub_1C079F31C();
        sub_1C07ACF80(&qword_1ED762CD0);
        v5 = (_QWORD *)sub_1C078F1C8();
        v6 = j__malloc_size(v5);
        v7 = sub_1C0787944(v6);
        if (v8)
        {
          v9 = v5 != v1 || &v1[(_QWORD)v3 + 4] == 0;
          if (v9)
            sub_1C07906D4(v7, v1 + 4);
          v1[2] = 0;
        }
        sub_1C079D270();
        v1 = v5;
      }
      v10 = __OFSUB__(v2--, 1);
      if (v10)
      {
        __break(1u);
LABEL_24:
        __break(1u);
        goto LABEL_25;
      }
      *v3++ = v12;
      sub_1C106AA38();
      if (!v14)
        goto LABEL_17;
    }
  }
  else
  {
LABEL_17:
    sub_1C0784B6C((uint64_t)&v13, &qword_1ED760400);
  }
  sub_1C07B1FB8();
  sub_1C0786398();
  if (!v9)
    goto LABEL_22;
  sub_1C07B7104();
  if (!v10)
  {
    v1[2] = v11;
LABEL_22:
    sub_1C0776760();
    return;
  }
LABEL_25:
  __break(1u);
}

void sub_1C0843DB0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t (*v26)();
  uint64_t v27;
  uint64_t v28;
  _BYTE *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t (*v33)();
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  BOOL v45;
  BOOL v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char v54;
  int64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  size_t v59;
  int64_t v60;
  BOOL v61;
  uint64_t v62;
  uint64_t v63;
  _QWORD *v64;
  unint64_t v65;
  unint64_t v66;
  uint64_t v67;
  uint64_t v69;
  unint64_t v70;
  unint64_t v71;
  unint64_t v72;
  _QWORD v73[3];
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  _QWORD *v83;

  sub_1C0779670();
  v1 = v0;
  sub_1C07ACF80(&qword_1ED7623F8);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v2);
  sub_1C077AE40();
  v80 = v3;
  v4 = type metadata accessor for Source();
  MEMORY[0x1E0C80A78](v4);
  sub_1C077AED0();
  v77 = v5;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v6);
  sub_1C0779728();
  v76 = v7;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v8);
  sub_1C0779728();
  v75 = v9;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)v73 - v11;
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)v73 - v14;
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)v73 - v17;
  MEMORY[0x1E0C80A78](v19);
  v78 = (char *)v73 - v20;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v21);
  v81 = (uint64_t)v73 - v22;
  v23 = 0;
  v79 = v24;
  v25 = *(unsigned __int8 *)(v24 + 80);
  v74 = (v25 + 32) & ~v25;
  v82 = MEMORY[0x1E0DEE9D8] + v74;
  v83 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  v73[2] = v25 | 7;
  v26 = type metadata accessor for Source;
  v27 = 1;
  while (1)
  {
    if (qword_1ED75DF60 != -1)
      swift_once();
    if (qword_1ED78D4B0 < v27)
      break;
    switch(v27)
    {
      case 1:
        if (qword_1ED761438 != -1)
          swift_once();
        v28 = v4;
        v29 = byte_1ED761420;
        goto LABEL_65;
      case 2:
        if (qword_1ED762380 != -1)
          swift_once();
        v28 = v4;
        v29 = &unk_1ED762360;
        goto LABEL_65;
      case 6:
        if (qword_1ED7623A8 != -1)
          swift_once();
        v28 = v4;
        v29 = &unk_1ED762388;
        goto LABEL_65;
      case 9:
        if (qword_1ED7622F0 != -1)
          swift_once();
        v28 = v4;
        v29 = byte_1ED7622D0;
        goto LABEL_65;
      case 11:
        if (qword_1ED7623C8 != -1)
          swift_once();
        v28 = v4;
        v29 = &unk_1ED7623B0;
        goto LABEL_65;
      case 12:
        if (qword_1ED762330 != -1)
          swift_once();
        v28 = v4;
        v29 = &unk_1ED762318;
        goto LABEL_65;
      case 14:
        if (qword_1ED762358 != -1)
          swift_once();
        v28 = v4;
        v29 = &unk_1ED762338;
        goto LABEL_65;
      case 16:
        if (qword_1ED762260 != -1)
          swift_once();
        v28 = v4;
        v29 = &unk_1ED762240;
        goto LABEL_65;
      case 17:
        if (qword_1ED761448 != -1)
          swift_once();
        v28 = v4;
        v29 = &unk_1ED762E88;
        goto LABEL_65;
      case 18:
        if (qword_1ED7623F0 != -1)
          swift_once();
        v28 = v4;
        v29 = &unk_1ED7623D0;
        goto LABEL_65;
      case 19:
        if (qword_1ED761418 != -1)
          swift_once();
        v28 = v4;
        v29 = &unk_1ED761400;
        goto LABEL_65;
      case 21:
        if (qword_1ED762310 != -1)
          swift_once();
        v28 = v4;
        v29 = &unk_1ED7622F8;
        goto LABEL_65;
      case 22:
        if (qword_1ED7622C8 != -1)
          swift_once();
        v28 = v4;
        v29 = &unk_1ED7622B0;
        goto LABEL_65;
      case 23:
        if (qword_1ED762E80 != -1)
          swift_once();
        v28 = v4;
        v29 = &unk_1ED762268;
        goto LABEL_65;
      case 24:
        if (qword_1ED7622A8 != -1)
          swift_once();
        v28 = v4;
        v29 = &unk_1ED762288;
        goto LABEL_65;
      case 25:
        if (qword_1ED762280 != -1)
          swift_once();
        v28 = v4;
        v29 = &unk_1ED761548;
        goto LABEL_65;
      case 27:
        if (qword_1ED761598 != -1)
          swift_once();
        v28 = v4;
        v29 = &unk_1ED761838;
        goto LABEL_65;
      case 29:
        if (qword_1ED761870 != -1)
          swift_once();
        v28 = v4;
        v29 = &unk_1ED761850;
LABEL_65:
        v43 = sub_1C079E000(v28, (uint64_t)v29);
        sub_1C0845A4C(v43, (uint64_t)v12, (uint64_t (*)(_QWORD))v26);
        goto LABEL_66;
      default:
        if (qword_1ED761518 != -1)
          swift_once();
        swift_beginAccess();
        if (!qword_1ED7627B8)
        {
          v36 = v80;
          sub_1C0782118();
          sub_1C07B2D8C(v50, v51, v52, v4);
LABEL_78:
          sub_1C0784B6C(v36, &qword_1ED7623F8);
          v45 = __OFADD__(v27++, 1);
          if (v45)
            goto LABEL_110;
          continue;
        }
        v30 = (*((uint64_t (**)(void))off_1ED7627C0 + 2))();
        v32 = v4;
        v33 = v26;
        v34 = v1;
        v35 = v80;
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v31 + 16))(v27, v30, v31);
        v36 = v35;
        v1 = v34;
        v26 = v33;
        v4 = v32;
        sub_1C07ADADC(v36);
        if (v61)
          goto LABEL_78;
        v37 = v36;
        v38 = v77;
        sub_1C0797C10(v37);
        v39 = v38;
        v40 = v76;
        sub_1C0797C10(v39);
        v41 = v40;
        v42 = v75;
        sub_1C0797C10(v41);
        sub_1C0845A08(v42, (uint64_t)v12);
LABEL_66:
        sub_1C0845A08((uint64_t)v12, (uint64_t)v15);
        sub_1C0845A08((uint64_t)v15, (uint64_t)v18);
        v44 = v27 - 1;
        if (__OFSUB__(v27, 1))
        {
          __break(1u);
LABEL_109:
          __break(1u);
LABEL_110:
          __break(1u);
LABEL_111:
          __break(1u);
          goto LABEL_112;
        }
        v45 = __OFADD__(v27++, 1);
        if (v45)
          goto LABEL_109;
        v46 = v44 > 0x40;
        if (v44 >= 0x40)
          v47 = 0;
        else
          v47 = 1 << v44;
        if (v46)
          v47 = 0;
        if ((v47 & v1) < 1)
        {
          sub_1C07B1FB8();
          continue;
        }
        v48 = (uint64_t)v78;
        sub_1C0797C10((uint64_t)v18);
        sub_1C0845A08(v48, v81);
        if (v23)
        {
          v49 = v83;
          goto LABEL_102;
        }
        sub_1C0796168();
        if (v54)
          goto LABEL_113;
        v55 = v53 & 0xFFFFFFFFFFFFFFFELL;
        if (v55 <= 1)
          v56 = 1;
        else
          v56 = v55;
        sub_1C07ACF80(&qword_1ED7603F0);
        v57 = *(_QWORD *)(v79 + 72);
        v58 = v74;
        v82 = v56;
        v49 = (_QWORD *)swift_allocObject();
        v59 = j__malloc_size(v49);
        if (!v57)
          goto LABEL_114;
        v60 = v59 - v58;
        v61 = v59 - v58 == 0x8000000000000000 && v57 == -1;
        if (v61)
          goto LABEL_115;
        v62 = v58;
        v63 = v60 / v57;
        v64 = v83;
        v49[2] = v82;
        v49[3] = 2 * (v60 / v57);
        v65 = (unint64_t)v49 + v62;
        v66 = v64[3];
        v67 = (v66 >> 1) * v57;
        if (!v64[2])
          goto LABEL_101;
        if (v49 < v64 || v65 >= (unint64_t)v64 + v62 + v67)
        {
          sub_1C07A1B1C();
          swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          if (v49 == v64)
            goto LABEL_100;
          sub_1C07A1B1C();
          swift_arrayInitWithTakeBackToFront();
        }
        v67 = v73[1];
        v65 = v82;
        v66 = v57;
LABEL_100:
        v83[2] = 0;
LABEL_101:
        v82 = v65 + v67;
        v23 = (v63 & 0x7FFFFFFFFFFFFFFFLL) - (v66 >> 1);
        swift_release();
LABEL_102:
        v45 = __OFSUB__(v23--, 1);
        if (v45)
          goto LABEL_111;
        v69 = v82;
        sub_1C0845A08(v81, v82);
        v82 = v69 + *(_QWORD *)(v79 + 72);
        v83 = v49;
        break;
    }
  }
  v70 = v83[3];
  if (v70 >= 2)
  {
    v71 = v70 >> 1;
    v45 = __OFSUB__(v71, v23);
    v72 = v71 - v23;
    if (v45)
    {
LABEL_112:
      __break(1u);
LABEL_113:
      __break(1u);
LABEL_114:
      __break(1u);
LABEL_115:
      __break(1u);
      JUMPOUT(0x1C0844654);
    }
    v83[2] = v72;
  }
  sub_1C0776760();
}

void sub_1C08446C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  int64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  size_t v23;
  int64_t v24;
  uint64_t v26;
  char *v27;
  unint64_t v28;
  uint64_t v29;
  BOOL v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  _QWORD v35[2];
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  sub_1C0779670();
  v2 = v1;
  sub_1C07ACF80(&qword_1EF631FB8);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1C07ACF80(&qword_1EF631F78);
  MEMORY[0x1E0C80A78](v6);
  sub_1C07785B8();
  v37 = v7;
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = *(_QWORD *)(v2 + 16);
  sub_1C07767B4();
  v10 = sub_1C0C6C3C0(0, v9);
  v35[0] = v2;
  v38 = v2;
  v39 = v10;
  sub_1C078D3E4();
  v11 = sub_1C0794398();
  v12 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  if (v11 == 1)
  {
    v13 = 0;
LABEL_28:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C0784B6C((uint64_t)v5, &qword_1EF631FB8);
    v32 = v12[3];
    if (v32 < 2)
      goto LABEL_31;
    v33 = v32 >> 1;
    v31 = __OFSUB__(v33, v13);
    v34 = v33 - v13;
    if (!v31)
    {
      v12[2] = v34;
LABEL_31:
      sub_1C0776760();
      return;
    }
  }
  else
  {
    v13 = 0;
    v36 = (v8 + 32) & ~v8;
    v14 = MEMORY[0x1E0DEE9D8] + v36;
    v35[1] = v8 | 7;
    v15 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    while (1)
    {
      sub_1C078A6A8((uint64_t)v5, v0, &qword_1EF631F78);
      if (v13)
      {
        v12 = v15;
      }
      else
      {
        sub_1C0796168();
        if (v17)
          goto LABEL_33;
        v18 = v6;
        v19 = v16 & 0xFFFFFFFFFFFFFFFELL;
        if (v19 <= 1)
          v20 = 1;
        else
          v20 = v19;
        sub_1C07ACF80(&qword_1EF631FC0);
        v21 = v36;
        v22 = *(_QWORD *)(v37 + 72);
        v12 = (_QWORD *)swift_allocObject();
        v23 = j__malloc_size(v12);
        if (!v22)
          goto LABEL_34;
        v24 = v23 - v21;
        if (v23 - v21 == 0x8000000000000000 && v22 == -1)
          goto LABEL_35;
        v26 = v24 / v22;
        v12[2] = v20;
        v12[3] = 2 * (v24 / v22);
        v27 = (char *)v12 + v21;
        v28 = v15[3];
        v29 = (v28 >> 1) * v22;
        if (v15[2])
        {
          if (v12 < v15 || v27 >= (char *)v15 + v36 + v29)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v12 != v15)
          {
            swift_arrayInitWithTakeBackToFront();
          }
          v15[2] = 0;
        }
        v14 = (uint64_t)&v27[v29];
        v13 = (v26 & 0x7FFFFFFFFFFFFFFFLL) - (v28 >> 1);
        sub_1C07785A8();
        v6 = v18;
      }
      v31 = __OFSUB__(v13--, 1);
      if (v31)
        break;
      sub_1C078A6A8(v0, v14, &qword_1EF631F78);
      v14 += *(_QWORD *)(v37 + 72);
      sub_1C078D3E4();
      v15 = v12;
      if (sub_1C0794398() == 1)
        goto LABEL_28;
    }
    __break(1u);
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
  }
  __break(1u);
}

void sub_1C0844930()
{
  id v0;
  _QWORD *v1;
  id v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  char v6;
  int64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  BOOL v14;
  BOOL v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;

  sub_1C0779670();
  swift_retain();
  v0 = sub_1C0F0F284();
  v1 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  if (v0)
  {
    v2 = v0;
    v3 = 0;
    v4 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
    while (1)
    {
      if (!v3)
      {
        sub_1C0796168();
        if (v6)
          goto LABEL_27;
        v7 = v5 & 0xFFFFFFFFFFFFFFFELL;
        if (v7 <= 1)
          v8 = 1;
        else
          v8 = v7;
        sub_1C07ACF80(&qword_1ED762CD0);
        v9 = (_QWORD *)sub_1C078F1C8();
        v10 = (uint64_t)(j__malloc_size(v9) - 32) / 8;
        v9[2] = v8;
        v9[3] = (2 * v10) | 1;
        v11 = (unint64_t)(v9 + 4);
        v12 = v1[3];
        v13 = v12 >> 1;
        if (v1[2])
        {
          v14 = v9 != v1 || v11 >= (unint64_t)&v1[v13 + 4];
          if (v14)
            memmove(v9 + 4, v1 + 4, 8 * v13);
          v1[2] = 0;
        }
        v4 = (_QWORD *)(v11 + 8 * v13);
        v3 = (v10 & 0x7FFFFFFFFFFFFFFFLL) - (v12 >> 1);
        swift_release();
        v1 = v9;
      }
      v15 = __OFSUB__(v3--, 1);
      if (v15)
        break;
      *v4++ = v2;
      v2 = sub_1C0F0F284();
      if (!v2)
        goto LABEL_21;
    }
    __break(1u);
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  v3 = 0;
LABEL_21:
  sub_1C07785A8();
  sub_1C0786398();
  if (!v14)
  {
LABEL_25:
    sub_1C0776760();
    return;
  }
  v17 = v16 >> 1;
  v15 = __OFSUB__(v17, v3);
  v18 = v17 - v3;
  if (!v15)
  {
    v1[2] = v18;
    goto LABEL_25;
  }
LABEL_28:
  __break(1u);
}

void sub_1C0844A5C()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  _QWORD *v4;
  char v5;
  _QWORD *v6;
  size_t v7;
  uint64_t v8;
  uint64_t v9;
  BOOL v10;
  BOOL v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  sub_1C0779670();
  v0 = sub_1C077AF90();
  type metadata accessor for PhotosMetadataSequence.Iterator(v0);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v1);
  sub_1C0793724();
  sub_1C106ECC8();
  sub_1C106ECB0();
  v2 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  if (v15)
  {
    sub_1C07D4B70(0, &qword_1ED744828);
    v3 = 0;
    v4 = v2 + 4;
    while ((sub_1C078AB44() & 1) != 0)
    {
      if (!v3)
      {
        sub_1C0796168();
        if (v5)
          goto LABEL_24;
        sub_1C079F31C();
        sub_1C07ACF80(&qword_1ED762CD0);
        v6 = (_QWORD *)sub_1C078F1C8();
        v7 = j__malloc_size(v6);
        v8 = sub_1C0787944(v7);
        if (v9)
        {
          v10 = v6 != v2 || &v2[(_QWORD)v4 + 4] == 0;
          if (v10)
            sub_1C07906D4(v8, v2 + 4);
          v2[2] = 0;
        }
        sub_1C079D270();
        v2 = v6;
      }
      v11 = __OFSUB__(v3--, 1);
      if (v11)
      {
        __break(1u);
LABEL_24:
        __break(1u);
        goto LABEL_25;
      }
      *v4++ = v13;
      sub_1C106ECB0();
      if (!v15)
        goto LABEL_17;
    }
  }
  else
  {
LABEL_17:
    sub_1C0784B6C((uint64_t)&v14, &qword_1ED760400);
  }
  sub_1C07B1FB8();
  sub_1C0786398();
  if (!v10)
    goto LABEL_22;
  sub_1C07B7104();
  if (!v11)
  {
    v2[2] = v12;
LABEL_22:
    sub_1C0776760();
    return;
  }
LABEL_25:
  __break(1u);
}

void sub_1C0844BBC()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  int64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  BOOL v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;

  v0 = _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  v1 = (void *)MEMORY[0x1C3BA79F4](v0);
  sub_1C07B1280();
  v2 = sub_1C10705D0();
  objc_autoreleasePoolPop(v1);
  swift_bridgeObjectRelease();
  v3 = *(_QWORD *)(v2 + 16);
  v4 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  v5 = 0;
  if (v3)
  {
    v6 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
    v7 = (uint64_t *)(v2 + 40);
    while (1)
    {
      v8 = *(v7 - 1);
      v9 = *v7;
      if (v5)
      {
        sub_1C077584C();
      }
      else
      {
        sub_1C0796168();
        if (v11)
          goto LABEL_26;
        v12 = v10 & 0xFFFFFFFFFFFFFFFELL;
        v13 = v12 <= 1 ? 1 : v12;
        sub_1C07ACF80(&qword_1ED762CB0);
        v14 = (_QWORD *)sub_1C078F1C8();
        v15 = (uint64_t)(j__malloc_size(v14) - 32) / 16;
        v14[2] = v13;
        v14[3] = 2 * v15;
        v16 = v14 + 4;
        v17 = v4[3] >> 1;
        v6 = &v14[2 * v17 + 4];
        v5 = (v15 & 0x7FFFFFFFFFFFFFFFLL) - v17;
        if (v4[2])
        {
          if (v14 != v4 || v16 >= &v4[2 * v17 + 4])
            memmove(v16, v4 + 4, 16 * v17);
          sub_1C077584C();
          v4[2] = 0;
        }
        else
        {
          sub_1C077584C();
        }
        sub_1C07785A8();
        v4 = v14;
      }
      v19 = __OFSUB__(v5--, 1);
      if (v19)
        break;
      v7 += 2;
      *v6 = v8;
      v6[1] = v9;
      v6 += 2;
      if (!--v3)
        goto LABEL_21;
    }
    __break(1u);
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
LABEL_21:
  swift_bridgeObjectRelease();
  v20 = v4[3];
  if (v20 >= 2)
  {
    v21 = v20 >> 1;
    v19 = __OFSUB__(v21, v5);
    v22 = v21 - v5;
    if (v19)
    {
LABEL_27:
      __break(1u);
      return;
    }
    v4[2] = v22;
  }
}

void sub_1C0844D74(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  int64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  size_t v27;
  int64_t v28;
  uint64_t v30;
  char *v31;
  unint64_t v32;
  uint64_t v33;
  BOOL v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  _QWORD v39[2];
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;

  v2 = sub_1C07ACF80(&qword_1EF637810);
  v3 = MEMORY[0x1E0C80A78](v2);
  v43 = (char *)v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = MEMORY[0x1E0C80A78](v3);
  v42 = (_QWORD *)((char *)v39 - v6);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v39 - v7;
  v44 = a1;
  v45 = v9;
  v10 = *(unsigned __int8 *)(v9 + 80);
  v11 = *(_QWORD *)(a1 + 16);
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  v12 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  v41 = v11;
  if (v11)
  {
    v13 = 0;
    v14 = 0;
    v40 = (v10 + 32) & ~v10;
    v15 = MEMORY[0x1E0DEE9D8] + v40;
    v39[1] = v10 | 7;
    v16 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    while (1)
    {
      v17 = sub_1C07ACF80((uint64_t *)&unk_1ED762690);
      v18 = (uint64_t)&v43[*(int *)(v2 + 48)];
      sub_1C0845A78(v44+ ((*(unsigned __int8 *)(*(_QWORD *)(v17 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v17 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v17 - 8) + 72) * v13, v18, (uint64_t *)&unk_1ED762690);
      v19 = (uint64_t)v42;
      v20 = (uint64_t)v42 + *(int *)(v2 + 48);
      *v42 = v13;
      sub_1C078A6A8(v18, v20, (uint64_t *)&unk_1ED762690);
      v21 = (uint64_t)v8;
      sub_1C078A6A8(v19, (uint64_t)v8, &qword_1EF637810);
      if (v14)
      {
        v12 = v16;
      }
      else
      {
        v22 = v16[3];
        if ((uint64_t)((v22 >> 1) + 0x4000000000000000) < 0)
          goto LABEL_34;
        v23 = v22 & 0xFFFFFFFFFFFFFFFELL;
        if (v23 <= 1)
          v24 = 1;
        else
          v24 = v23;
        sub_1C07ACF80(&qword_1EF631F88);
        v25 = *(_QWORD *)(v45 + 72);
        v26 = v40;
        v12 = (_QWORD *)swift_allocObject();
        v27 = j__malloc_size(v12);
        if (!v25)
          goto LABEL_35;
        v28 = v27 - v26;
        if (v27 - v26 == 0x8000000000000000 && v25 == -1)
          goto LABEL_36;
        v30 = v28 / v25;
        v12[2] = v24;
        v12[3] = 2 * (v28 / v25);
        v31 = (char *)v12 + v26;
        v32 = v16[3];
        v33 = (v32 >> 1) * v25;
        if (v16[2])
        {
          if (v12 < v16 || v31 >= (char *)v16 + v40 + v33)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v12 != v16)
          {
            swift_arrayInitWithTakeBackToFront();
          }
          v16[2] = 0;
        }
        v15 = (uint64_t)&v31[v33];
        v14 = (v30 & 0x7FFFFFFFFFFFFFFFLL) - (v32 >> 1);
        swift_release();
      }
      v35 = __OFSUB__(v14--, 1);
      if (v35)
        break;
      ++v13;
      v8 = (char *)v21;
      sub_1C078A6A8(v21, v15, &qword_1EF637810);
      v15 += *(_QWORD *)(v45 + 72);
      v16 = v12;
      if (v41 == v13)
        goto LABEL_29;
    }
    __break(1u);
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
    goto LABEL_37;
  }
  v14 = 0;
LABEL_29:
  swift_bridgeObjectRelease();
  v36 = v12[3];
  if (v36 >= 2)
  {
    v37 = v36 >> 1;
    v35 = __OFSUB__(v37, v14);
    v38 = v37 - v14;
    if (v35)
    {
LABEL_37:
      __break(1u);
      return;
    }
    v12[2] = v38;
  }
}

void sub_1C0845060(uint64_t a1)
{
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD *v6;
  _QWORD *i;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  id v15;
  _QWORD *v16;
  uint64_t v17;
  char v18;
  int64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  id v25;
  id v26;
  BOOL v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;

  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  v2 = 0;
  v3 = 0;
  v4 = 0;
  v5 = 0;
  v6 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  for (i = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32); v3; i += 5)
  {
LABEL_3:
    v8 = *(_QWORD *)(v3 + 16);
    if (v2 == v8)
      break;
    if (v2 >= v8)
    {
LABEL_32:
      __break(1u);
LABEL_33:
      __break(1u);
      goto LABEL_34;
    }
    v11 = (_QWORD *)(v3 + 40 * v2);
    v12 = v11[5];
    v13 = v11[7];
    v31 = v11[6];
    v32 = v11[4];
    v33 = (void *)v11[8];
    if (v4)
    {
      v14 = (void *)v11[8];
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      sub_1C0778624();
      v15 = v14;
      v16 = v6;
    }
    else
    {
      sub_1C0796168();
      if (v18)
        goto LABEL_35;
      v19 = v17 & 0xFFFFFFFFFFFFFFFELL;
      if (v19 <= 1)
        v20 = 1;
      else
        v20 = v19;
      sub_1C07ACF80(&qword_1EF631F90);
      v16 = (_QWORD *)swift_allocObject();
      v21 = (uint64_t)(j__malloc_size(v16) - 32) / 40;
      v16[2] = v20;
      v16[3] = 2 * v21;
      v22 = v16 + 4;
      v23 = v6[3] >> 1;
      i = &v16[5 * v23 + 4];
      v4 = (v21 & 0x7FFFFFFFFFFFFFFFLL) - v23;
      if (v6[2])
      {
        if (v16 != v6 || v22 >= &v6[5 * v23 + 4])
          memmove(v22, v6 + 4, 40 * v23);
        sub_1C077AEBC();
        sub_1C0778624();
        v25 = v33;
        v6[2] = 0;
      }
      else
      {
        sub_1C077AEBC();
        sub_1C0778624();
        v26 = v33;
      }
      swift_release();
    }
    v27 = __OFSUB__(v4--, 1);
    if (v27)
      goto LABEL_33;
    ++v2;
    *i = v32;
    i[1] = v12;
    i[2] = v31;
    i[3] = v13;
    i[4] = v33;
    v6 = v16;
  }
  while (1)
  {
    v9 = *(_QWORD *)(a1 + 16);
    if (v5 == v9)
      break;
    if (v5 >= v9)
    {
      __break(1u);
      goto LABEL_32;
    }
    v10 = *(_QWORD *)(a1 + 8 * v5 + 32);
    sub_1C077AEBC();
    sub_1C077960C();
    v2 = 0;
    v3 = v10;
    ++v5;
    if (v10)
      goto LABEL_3;
  }
  sub_1C07767AC();
  sub_1C077960C();
  v28 = v6[3];
  if (v28 < 2)
    return;
  v29 = v28 >> 1;
  v27 = __OFSUB__(v29, v4);
  v30 = v29 - v4;
  if (!v27)
  {
    v6[2] = v30;
    return;
  }
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
}

void sub_1C0845274(uint64_t a1)
{
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD *v6;
  uint64_t i;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  _QWORD *v14;
  uint64_t v15;
  char v16;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  BOOL v22;
  uint64_t v23;
  size_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  v2 = 0;
  v3 = 0;
  v4 = 0;
  v5 = 0;
  v6 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  for (i = MEMORY[0x1E0DEE9D8] + 32; v3; i += 48)
  {
LABEL_3:
    v8 = *(_QWORD *)(v3 + 16);
    if (v2 == v8)
      break;
    if (v2 >= v8)
    {
LABEL_34:
      __break(1u);
LABEL_35:
      __break(1u);
      goto LABEL_36;
    }
    v11 = v3 + 48 * v2;
    v12 = *(_QWORD *)(v11 + 64);
    v13 = *(_BYTE *)(v11 + 72);
    v27 = *(_QWORD *)(v11 + 40);
    v28 = *(_QWORD *)(v11 + 32);
    v25 = *(_QWORD *)(v11 + 56);
    v26 = *(_QWORD *)(v11 + 48);
    if (v4)
    {
      sub_1C07A9D5C(*(_QWORD *)(v11 + 32), *(_QWORD *)(v11 + 40), *(_QWORD *)(v11 + 48), *(_QWORD *)(v11 + 56));
      v14 = v6;
      goto LABEL_27;
    }
    sub_1C0796168();
    if (v16)
      goto LABEL_37;
    v17 = v15 & 0xFFFFFFFFFFFFFFFELL;
    if (v17 <= 1)
      v18 = 1;
    else
      v18 = v17;
    sub_1C07ACF80(&qword_1ED758EA8);
    v14 = (_QWORD *)swift_allocObject();
    v19 = (uint64_t)(j__malloc_size(v14) - 32) / 48;
    v14[2] = v18;
    v14[3] = 2 * v19;
    v20 = v6[3];
    v4 = (v19 & 0x7FFFFFFFFFFFFFFFLL) - (v20 >> 1);
    i = (uint64_t)&v14[6 * (v20 >> 1) + 4];
    if (v6[2])
    {
      v24 = 48 * (v20 >> 1);
      if (v14 >= v6 && v14 + 4 < &v6[6 * (v20 >> 1) + 4])
      {
        sub_1C0826EB0(v28, v27, v26, v25, v12, v13);
        if (v14 != v6)
LABEL_24:
          memmove(v14 + 4, v6 + 4, v24);
        v6[2] = 0;
        goto LABEL_26;
      }
      sub_1C0826EB0(v28, v27, v26, v25, v12, v13);
      goto LABEL_24;
    }
    sub_1C07A9D5C(v28, v27, v26, v25);
LABEL_26:
    swift_release();
LABEL_27:
    v22 = __OFSUB__(v4--, 1);
    if (v22)
      goto LABEL_35;
    ++v2;
    *(_QWORD *)i = v28;
    *(_QWORD *)(i + 8) = v27;
    *(_QWORD *)(i + 16) = v26;
    *(_QWORD *)(i + 24) = v25;
    *(_QWORD *)(i + 32) = v12;
    *(_BYTE *)(i + 40) = v13;
    v6 = v14;
  }
  while (1)
  {
    v9 = *(_QWORD *)(a1 + 16);
    if (v5 == v9)
      break;
    if (v5 >= v9)
    {
      __break(1u);
      goto LABEL_34;
    }
    v10 = *(_QWORD *)(a1 + 8 * v5 + 32);
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    sub_1C077960C();
    v2 = 0;
    v3 = v10;
    ++v5;
    if (v10)
      goto LABEL_3;
  }
  sub_1C07767AC();
  sub_1C077960C();
  if (v6[3] < 2uLL)
    return;
  sub_1C07B7104();
  if (!v22)
  {
    v6[2] = v23;
    return;
  }
LABEL_36:
  __break(1u);
LABEL_37:
  __break(1u);
}

void sub_1C08454A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(uint64_t, uint64_t, uint64_t);
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  size_t v33;
  int64_t v34;
  BOOL v35;
  uint64_t v36;
  char *v37;
  _QWORD *v38;
  unint64_t v39;
  uint64_t v40;
  BOOL v41;
  BOOL v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  void (*v54)(uint64_t, uint64_t, uint64_t);
  uint64_t v55;
  _QWORD *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  _QWORD *v62;

  sub_1C0779670();
  v2 = v1;
  sub_1C07ACF80((uint64_t *)&unk_1ED762690);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v3);
  sub_1C0776794();
  v4 = sub_1C106ADE0();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  sub_1C077AE40();
  v58 = v6;
  v59 = sub_1C07ACF80(&qword_1ED74D310);
  MEMORY[0x1E0C80A78](v59);
  sub_1C077AED0();
  v57 = v7;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v8);
  sub_1C0779728();
  v56 = v9;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v10);
  v60 = v12;
  v61 = (uint64_t)&v47 - v11;
  v13 = *(unsigned __int8 *)(v12 + 80);
  v14 = *(_QWORD *)(v2 + 16);
  sub_1C077AEBC();
  v15 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  v55 = v14;
  v47 = v2;
  if (v14)
  {
    v16 = 0;
    v17 = 0;
    v50 = (v13 + 32) & ~v13;
    v18 = MEMORY[0x1E0DEE9D8] + v50;
    v19 = v2 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
    v51 = *(_QWORD *)(v5 + 72);
    v52 = v4;
    v20 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
    v53 = v0;
    v54 = v20;
    v48 = v5;
    v49 = v13 | 7;
    v21 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    while (1)
    {
      v54(v0, v19, v4);
      sub_1C07B2D8C(v0, 0, 1, v4);
      sub_1C077AEEC(v0, 1, v4);
      if (v35)
        break;
      v62 = v21;
      v22 = v5;
      v23 = *(_QWORD *)(v5 + 32);
      v24 = v58;
      sub_1C079E278(v58, v0);
      v25 = v59;
      v26 = v57 + *(int *)(v59 + 48);
      sub_1C079E278(v26, v24);
      v27 = *(int *)(v25 + 48);
      v28 = (uint64_t)v56;
      v29 = (uint64_t)v56 + v27;
      *v56 = v16;
      sub_1C079E278(v29, v26);
      sub_1C078A6A8(v28, v61, &qword_1ED74D310);
      if (v17)
      {
        v15 = v62;
        v4 = v52;
        v0 = v53;
        v5 = v22;
      }
      else
      {
        sub_1C0796168();
        if (v30)
          goto LABEL_32;
        sub_1C079F31C();
        sub_1C07ACF80(&qword_1EF631FB0);
        v31 = *(_QWORD *)(v60 + 72);
        v32 = v50;
        v15 = (_QWORD *)swift_allocObject();
        v33 = j__malloc_size(v15);
        if (!v31)
          goto LABEL_33;
        v34 = v33 - v32;
        v35 = v33 - v32 == 0x8000000000000000 && v31 == -1;
        if (v35)
          goto LABEL_34;
        v36 = v34 / v31;
        v15[2] = v23;
        v15[3] = 2 * (v34 / v31);
        v37 = (char *)v15 + v32;
        v38 = v62;
        v39 = v62[3];
        v40 = (v39 >> 1) * v31;
        v4 = v52;
        v0 = v53;
        if (v62[2])
        {
          v41 = v15 < v62 || v37 >= (char *)v62 + v50 + v40;
          if (v41)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v15 != v62)
          {
            swift_arrayInitWithTakeBackToFront();
          }
          v38[2] = 0;
        }
        v18 = (uint64_t)&v37[v40];
        v17 = (v36 & 0x7FFFFFFFFFFFFFFFLL) - (v39 >> 1);
        swift_release();
        v5 = v48;
      }
      v42 = __OFSUB__(v17--, 1);
      if (v42)
      {
        __break(1u);
LABEL_32:
        __break(1u);
LABEL_33:
        __break(1u);
LABEL_34:
        __break(1u);
        goto LABEL_35;
      }
      ++v16;
      sub_1C078A6A8(v61, v18, &qword_1ED74D310);
      v18 += *(_QWORD *)(v60 + 72);
      v19 += v51;
      v21 = v15;
      if (v55 == v16)
        goto LABEL_25;
    }
  }
  else
  {
LABEL_25:
    sub_1C0782118();
    sub_1C07B2D8C(v43, v44, v45, v4);
    v21 = v15;
  }
  sub_1C0784B6C(v0, (uint64_t *)&unk_1ED762690);
  swift_bridgeObjectRelease();
  sub_1C0786398();
  if (!v41)
    goto LABEL_30;
  sub_1C07B7104();
  if (!v42)
  {
    v21[2] = v46;
LABEL_30:
    sub_1C0776760();
    return;
  }
LABEL_35:
  __break(1u);
}

uint64_t sub_1C0845818(unint64_t a1, uint64_t a2)
{
  unint64_t v3;
  uint64_t v4;
  uint64_t result;
  _QWORD *v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  unint64_t v14;
  int64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  BOOL v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;

  v3 = a1;
  if (a1 >> 62)
    goto LABEL_32;
  v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  result = sub_1C07767B4();
LABEL_3:
  v6 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  if (v4 != a2)
  {
    if (v4 <= a2)
    {
      __break(1u);
      goto LABEL_34;
    }
    v8 = v3 & 0xC000000000000001;
    sub_1C07AD058(a2);
    sub_1C07AD058(v4 - 1);
    v7 = 0;
    v9 = v6 + 4;
    v27 = v3;
    while (1)
    {
      if (v8)
      {
        v10 = MEMORY[0x1C3BA70DC](a2, v3);
        if (v7)
          goto LABEL_24;
      }
      else
      {
        v10 = *(_QWORD *)(v3 + 8 * a2 + 32);
        swift_retain();
        if (v7)
          goto LABEL_24;
      }
      sub_1C0796168();
      if (v12)
        goto LABEL_31;
      v13 = v4;
      v14 = v8;
      v15 = v11 & 0xFFFFFFFFFFFFFFFELL;
      if (v15 <= 1)
        v16 = 1;
      else
        v16 = v15;
      sub_1C07ACF80(&qword_1ED762CD0);
      v17 = (_QWORD *)sub_1C078F1C8();
      v18 = (uint64_t)(j__malloc_size(v17) - 32) / 8;
      v17[2] = v16;
      v17[3] = (2 * v18) | 1;
      v19 = (unint64_t)(v17 + 4);
      v20 = v6[3];
      v21 = v20 >> 1;
      if (v6[2])
      {
        if (v17 != v6 || v19 >= (unint64_t)&v6[v21 + 4])
          memmove(v17 + 4, v6 + 4, 8 * v21);
        v6[2] = 0;
      }
      v9 = (uint64_t *)(v19 + 8 * v21);
      v7 = (v18 & 0x7FFFFFFFFFFFFFFFLL) - (v20 >> 1);
      swift_release();
      v6 = v17;
      v8 = v14;
      v4 = v13;
      v3 = v27;
LABEL_24:
      v23 = __OFSUB__(v7--, 1);
      if (v23)
      {
        __break(1u);
LABEL_31:
        __break(1u);
LABEL_32:
        sub_1C07767B4();
        result = sub_1C10709B4();
        v4 = result;
        goto LABEL_3;
      }
      ++a2;
      *v9++ = v10;
      if (v4 == a2)
        goto LABEL_26;
    }
  }
  v7 = 0;
LABEL_26:
  result = sub_1C07767AC();
  v24 = v6[3];
  if (v24 < 2)
    return (uint64_t)v6;
  v25 = v24 >> 1;
  v23 = __OFSUB__(v25, v7);
  v26 = v25 - v7;
  if (!v23)
  {
    v6[2] = v26;
    return (uint64_t)v6;
  }
LABEL_34:
  __break(1u);
  return result;
}

uint64_t sub_1C0845A08(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Source();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1C0845A4C(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;

  v3 = a3(0);
  sub_1C077AF24(v3);
  sub_1C0778534();
}

void sub_1C0845A78(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  v3 = sub_1C0778588(a1, a2, a3);
  sub_1C077AF24(v3);
  sub_1C0778534();
}

uint64_t sub_1C0845A9C()
{
  swift_unknownObjectRelease();
  return swift_bridgeObjectRelease();
}

void sub_1C0845AC4(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_unknownObjectRetain();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C0778534();
}

_QWORD *sub_1C0845B00(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;

  v4 = a2[1];
  *a1 = *a2;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  a1[1] = v4;
  a1[2] = a2[2];
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1C0845B60(uint64_t a1, uint64_t a2)
{
  swift_unknownObjectRelease();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for BiomeStreamStoreCache(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *((_BYTE *)a1 + 24))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for BiomeStreamStoreCache(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 24) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for BehaviorDigestBasedTaskInvocation()
{
  sub_1C0779604();
}

void type metadata accessor for MergedBehaviorDigestInvocationSequence()
{
  sub_1C0779604();
}

unint64_t sub_1C0845C40()
{
  unint64_t result;

  result = qword_1EF631FA8;
  if (!qword_1EF631FA8)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C107BF70, &unk_1E7A0DF08);
    atomic_store(result, (unint64_t *)&qword_1EF631FA8);
  }
  return result;
}

uint64_t destroy for ContactHandleBlockingFunction()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void _s24IntelligencePlatformCore17NowPlayingContentVwCP_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;

  v2 = a2[1];
  *a1 = *a2;
  a1[1] = v2;
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C0778534();
}

_QWORD *assignWithCopy for ContactHandleBlockingFunction(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *assignWithTake for ContactHandleBlockingFunction(_OWORD *a1, _OWORD *a2)
{
  swift_bridgeObjectRelease();
  *a1 = *a2;
  swift_bridgeObjectRelease();
  return a1;
}

void type metadata accessor for MergedBehaviorDigestInvocationSequence.Iterator()
{
  sub_1C0779604();
}

uint64_t sub_1C0845D7C(id *a1)
{

  swift_release();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *sub_1C0845DB4(_QWORD *a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  uint64_t v5;
  id v6;

  v3 = *(void **)a2;
  v4 = *(_QWORD *)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  a1[1] = v4;
  v5 = *(_QWORD *)(a2 + 24);
  a1[2] = *(_QWORD *)(a2 + 16);
  a1[3] = v5;
  v6 = v3;
  swift_retain();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  return a1;
}

uint64_t sub_1C0845E08(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1C0845E90(uint64_t a1, _OWORD *a2)
{

  *(_OWORD *)a1 = *a2;
  swift_release();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = a2[1];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for EntityRelevanceMLModel(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *((_BYTE *)a1 + 32))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for EntityRelevanceMLModel(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 32) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for BehaviorEventPostProcessor()
{
  sub_1C0779604();
}

uint64_t sub_1C0845F70(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v4 = *(_QWORD *)(a1 + 16);
  if (v4)
  {
    v12 = MEMORY[0x1E0DEE9D8];
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    sub_1C09D30E0();
    v7 = v12;
    v8 = a1 + 40;
    do
    {
      swift_bridgeObjectRetain_n();
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      sub_1C106FD54();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v9 = *(_QWORD *)(v12 + 16);
      if (v9 >= *(_QWORD *)(v12 + 24) >> 1)
        sub_1C09D30E0();
      v8 += 16;
      *(_QWORD *)(v12 + 16) = v9 + 1;
      v10 = v12 + 16 * v9;
      *(_QWORD *)(v10 + 32) = a2;
      *(_QWORD *)(v10 + 40) = a3;
      --v4;
    }
    while (v4);
    swift_bridgeObjectRelease_n();
  }
  else
  {
    swift_bridgeObjectRelease();
    return MEMORY[0x1E0DEE9D8];
  }
  return v7;
}

uint64_t sub_1C08460D0(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  _QWORD v33[2];
  id v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  v11 = sub_1C07ACF80((uint64_t *)&unk_1ED762690);
  MEMORY[0x1E0C80A78](v11);
  v36 = (uint64_t)v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *(_QWORD *)(a1 + 16);
  if (v13)
  {
    v33[1] = v5;
    v42 = MEMORY[0x1E0DEE9D8];
    v33[0] = a2;
    v34 = a2;
    swift_retain();
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    sub_1C09D30E0();
    v14 = v42;
    v15 = (uint64_t *)(a1 + 40);
    v35 = a3;
    do
    {
      v37 = v14;
      v38 = v13;
      v16 = *v15;
      v40 = *(v15 - 1);
      v41 = v16;
      swift_bridgeObjectRetain_n();
      v39 = v34;
      swift_retain();
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      v17 = sub_1C106FD54();
      v19 = v18;
      v20 = sub_1C106ADE0();
      v21 = a5;
      v22 = v36;
      sub_1C07B2D8C(v36, 1, 1, v20);
      v23 = sub_1C0ACA89C(v17, v19, v22);
      v24 = a4;
      v26 = v25;
      sub_1C077CDB4(v22);
      swift_release();

      swift_bridgeObjectRelease();
      if (v26)
        v27 = v23;
      else
        v27 = 0;
      if (!v26)
        v26 = 0xE000000000000000;
      swift_bridgeObjectRelease();
      v28 = v21;
      v14 = v37;
      swift_bridgeObjectRelease();
      v29 = v24;
      swift_bridgeObjectRelease();
      v42 = v14;
      v30 = *(_QWORD *)(v14 + 16);
      if (v30 >= *(_QWORD *)(v14 + 24) >> 1)
      {
        sub_1C09D30E0();
        v14 = v42;
      }
      v15 += 2;
      *(_QWORD *)(v14 + 16) = v30 + 1;
      v31 = v14 + 16 * v30;
      *(_QWORD *)(v31 + 32) = v27;
      *(_QWORD *)(v31 + 40) = v26;
      v13 = v38 - 1;
      a4 = v29;
      a5 = v28;
    }
    while (v38 != 1);
    swift_release();

    a2 = (void *)v33[0];
  }
  else
  {
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    v14 = MEMORY[0x1E0DEE9D8];
  }
  swift_release();

  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease_n();
  return v14;
}

id sub_1C0846380()
{
  uint64_t v0;
  id v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  id v5;
  uint64_t v6;
  void *v7;
  os_log_type_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  os_log_type_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;

  v0 = sub_1C106AB28();
  MEMORY[0x1E0C80A78](v0);
  sub_1C0778564();
  type metadata accessor for HashGenerator();
  swift_allocObject();
  sub_1C0ACB214();
  sub_1C07D4B70(0, (unint64_t *)&qword_1ED7624D0);
  swift_retain();
  v1 = sub_1C0846C94();
  if (!v1 || (sub_1C0847FE8(0xD000000000000016, 0x80000001C10E5A80, 1701409396, 0xE400000000000000, v1), !v2))
  {
    sub_1C077AF1C();
LABEL_7:
    if (qword_1ED760048 != -1)
      swift_once();
    v6 = sub_1C077585C();
    sub_1C079E000(v6, (uint64_t)qword_1ED78D800);
    v7 = (void *)sub_1C106F538();
    v8 = sub_1C1070390();
    if (sub_1C07758D8(v8))
    {
      *(_WORD *)sub_1C0775854() = 0;
      sub_1C0790E38(&dword_1C0771000, v9, v10, "Unable to get path of resources in IntelligencePlatformCore");
      sub_1C0776778();
    }
    goto LABEL_11;
  }
  sub_1C0847FE8(0xD00000000000001DLL, 0x80000001C10E5AA0, 0x7473696C70, 0xE500000000000000, v1);
  if (!v3)
  {
    sub_1C077AF1C();
    sub_1C077960C();
    goto LABEL_7;
  }
  sub_1C07D4B70(0, &qword_1EF631FC8);
  v4 = sub_1C0846CF4();
  if (!v4)
  {
    sub_1C077AF1C();
    swift_bridgeObjectRelease();
    if (qword_1ED760048 != -1)
      swift_once();
    v12 = sub_1C077585C();
    sub_1C079E000(v12, (uint64_t)qword_1ED78D800);
    v7 = (void *)sub_1C106F538();
    v13 = sub_1C107039C();
    if (sub_1C07758D8(v13))
    {
      *(_WORD *)sub_1C0775854() = 0;
      sub_1C0790E38(&dword_1C0771000, v14, v15, "Unable to create bundle ID trie for filtering");
      sub_1C0776778();
    }
LABEL_11:
    sub_1C077AF1C();

    return 0;
  }
  v5 = v4;
  v16 = v4;
  sub_1C106AA8C();
  swift_bridgeObjectRelease();
  sub_1C106AB58();
  sub_1C078F1D4();
  sub_1C106A978();
  swift_allocObject();
  sub_1C106A96C();
  sub_1C084809C();
  sub_1C106A960();

  sub_1C079D284();
  swift_release();
  sub_1C077AE90();
  swift_bridgeObjectRelease();
  sub_1C077AF1C();

  return v5;
}

uint64_t sub_1C08468A0(uint64_t a1, uint64_t a2, char a3, void *a4, uint64_t a5, uint64_t a6)
{
  void *v11;
  char v12;
  char v13;

  v11 = (void *)sub_1C106FAF0();
  LODWORD(a4) = objc_msgSend(a4, sel_payloadForString_, v11);

  v12 = (_DWORD)a4 != 0;
  if ((_DWORD)a4 && (a3 & 1) != 0)
  {
    sub_1C0A791CC(a1, a2, a6);
    v12 = v13 ^ 1;
  }
  return v12 & 1;
}

uint64_t sub_1C0846928(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000015 && a2 == 0x80000001C10E5AC0 || (sub_1C1070CB4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000001C10E5AE0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v5 = sub_1C1070CB4();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

unint64_t sub_1C0846A10(char a1)
{
  if ((a1 & 1) != 0)
    return 0xD000000000000016;
  else
    return 0xD000000000000015;
}

uint64_t sub_1C0846A48(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  v3 = sub_1C07ACF80(&qword_1EF631FD8);
  MEMORY[0x1E0C80A78](v3);
  sub_1C0778564();
  v4 = a1[3];
  sub_1C07A9480(a1, v4);
  sub_1C0848158();
  sub_1C1070E94();
  if (v1)
  {
    sub_1C0775880();
  }
  else
  {
    sub_1C07ACF80(&qword_1ED762B80);
    sub_1C0848194();
    sub_1C07A67E0();
    v4 = v6;
    sub_1C077C0B8();
    sub_1C07A67E0();
    sub_1C079B434();
    sub_1C077AE90();
    sub_1C0775880();
    swift_bridgeObjectRelease();
    sub_1C077589C();
  }
  return v4;
}

unint64_t sub_1C0846B90()
{
  char *v0;

  return sub_1C0846A10(*v0);
}

uint64_t sub_1C0846B98@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1C0846928(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C0846BBC()
{
  sub_1C0848158();
  return sub_1C1070EE8();
}

uint64_t sub_1C0846BE4()
{
  sub_1C0848158();
  return sub_1C1070EF4();
}

uint64_t sub_1C0846C0C@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v5;

  result = sub_1C0846A48(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
  }
  return result;
}

uint64_t sub_1C0846C34@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1C08481F0(v1, a1);
}

uint64_t sub_1C0846C40@<X0>(uint64_t a1@<X8>)
{
  _OWORD *v1;
  __int128 v3;
  _OWORD v5[4];
  _OWORD v6[2];

  v3 = v1[1];
  v5[3] = *v1;
  v6[0] = v3;
  *(_OWORD *)((char *)v6 + 9) = *(_OWORD *)((char *)v1 + 25);
  sub_1C0846C34((uint64_t)v5);
  return sub_1C07DFF44((uint64_t)v5, a1);
}

id sub_1C0846C94()
{
  void *v0;
  id v1;

  v0 = (void *)sub_1C106FAF0();
  swift_bridgeObjectRelease();
  v1 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_bundleWithIdentifier_, v0);

  return v1;
}

id sub_1C0846CF4()
{
  id v0;
  void *v1;
  id v2;

  v0 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  v1 = (void *)sub_1C106FAF0();
  swift_bridgeObjectRelease();
  v2 = objc_msgSend(v0, sel_initWithPath_, v1);

  return v2;
}

void sub_1C0846D64(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, unint64_t a4@<X3>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X7>, uint64_t a8@<X8>, unint64_t a9)
{
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD v42[5];
  char v43;
  _QWORD v44[5];
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char v50;

  sub_1C07DFF44(a1, (uint64_t)v44);
  v38 = v44[1];
  v40 = v44[3];
  v39 = v44[4];
  v15 = sub_1C106D6CC();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  sub_1C0778564();
  v19 = v18 - v17;
  sub_1C07DFF44(a1, (uint64_t)&v45);
  switch(v50)
  {
    case 0:
      v20 = v45;
      v19 = v46;
      sub_1C077C0B8();
      if ((sub_1C079E280(v20, v19, a2 & 1, v21, v22) & 1) != 0)
      {
        sub_1C0798614();
        sub_1C07863A4();
        a3 = v40;
        goto LABEL_6;
      }
      sub_1C077589C();
      sub_1C078AB5C();
      LOBYTE(v16) = 0;
      goto LABEL_26;
    case 1:
      a3 = v45;
      v23 = v46;
      v19 = v47;
      v24 = v48;
      sub_1C077C0B8();
      sub_1C077AE90();
      if ((sub_1C079E280(a3, v23, a2 & 1, v25, v26) & 1) == 0)
      {
        sub_1C0A791CC(v19, v24, a6);
        a5 = a7;
        if ((v35 & 1) != 0)
        {
          a3 = v24;
        }
        else
        {
          v19 = a7;
          a3 = a9;
        }
        swift_bridgeObjectRelease();
        v15 = 0;
        LOBYTE(v16) = 1;
        goto LABEL_27;
      }
      sub_1C0798614();
      sub_1C07A2310();
      sub_1C07863A4();
      sub_1C077960C();
LABEL_6:
      v15 = v39;
      goto LABEL_16;
    case 4:
      a3 = 0;
      v15 = 0;
      v27 = 0x100000000;
      if (!BYTE4(v47))
        v27 = 0;
      v19 = v27 | v47;
      LOBYTE(v16) = 4;
      goto LABEL_26;
    case 7:
      sub_1C07A5140();
      LOBYTE(v16) = 7;
      goto LABEL_26;
    case 9:
      sub_1C07A5140();
      LOBYTE(v16) = 9;
      goto LABEL_26;
    case 10:
      sub_1C07A5140();
      LOBYTE(v16) = 10;
      goto LABEL_26;
    case 12:
      v19 = v45;
      a3 = v46;
      v28 = v49;
      sub_1C077C0B8();
      sub_1C077AE90();
      if ((sub_1C079E280(v19, a3, a2 & 1, v29, v30) & 1) != 0)
      {
        sub_1C0798614();
        sub_1C07A2310();
        v15 = v39;
        _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
        sub_1C07863A4();
        sub_1C077960C();
LABEL_16:
        sub_1C07A440C();
      }
      else
      {
        LOBYTE(v16) = 12;
        v19 = a7;
        a5 = a7;
        a4 = a9;
        a3 = a9;
        v15 = v28;
      }
LABEL_28:
      *(_QWORD *)a8 = a5;
      *(_QWORD *)(a8 + 8) = a4;
      *(_QWORD *)(a8 + 16) = v19;
      *(_QWORD *)(a8 + 24) = a3;
      *(_QWORD *)(a8 + 32) = v15;
      *(_BYTE *)(a8 + 40) = v16;
      return;
    case 13:
      sub_1C078AB5C();
      LOBYTE(v16) = 13;
      goto LABEL_26;
    case 14:
      v31 = v47;
      if (v46)
      {
        sub_1C0791A54();
        if (v33)
          v32 = 0;
        v19 = v32 | v31;
        LOBYTE(v16) = 14;
LABEL_26:
        a5 = a7;
LABEL_27:
        a4 = a9;
      }
      else
      {
        a5 = v45;
        sub_1C077589C();
        a4 = 0;
        sub_1C0791A54();
        if (v33)
          v36 = 0;
        v19 = v36 | v31;
        LOBYTE(v16) = 14;
      }
      goto LABEL_28;
    case 15:
      if ((a3 & 1) != 0)
      {
        v34 = v45;
        sub_1C077C0B8();
        v19 = 0;
        a5 = sub_1C0845F70(v34, a7, a9);
        sub_1C077589C();
        a4 = 0;
        sub_1C078AB5C();
        LOBYTE(v16) = 15;
      }
      else
      {
        (*(void (**)(uint64_t, _QWORD, uint64_t))(v16 + 104))(v19, *MEMORY[0x1E0D3C0B0], v15);
        sub_1C077C0B8();
        sub_1C0821B64();
        sub_1C077C0B8();
        sub_1C077960C();
        sub_1C0821FFC(v19, a7, a9, (uint64_t)v42);
        a5 = v42[0];
        a4 = v42[1];
        v19 = v42[2];
        a3 = v42[3];
        v15 = v42[4];
        LOBYTE(v16) = v43;
        sub_1C07863A4();
      }
      goto LABEL_28;
    default:
      sub_1C08480D8(a1);
      sub_1C077589C();
      a3 = v40;
      v15 = v39;
      sub_1C07A440C();
      a4 = v38;
      goto LABEL_28;
  }
}

uint64_t sub_1C0847110@<X0>(uint64_t a1@<X0>, char a2@<W1>, char a3@<W2>, void *a4@<X3>, uint64_t a5@<X5>, uint64_t a6@<X6>, void *a7@<X7>, uint64_t a8@<X8>, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  unint64_t v25;
  id v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  int v38;
  uint64_t v39;
  id v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  id v47;
  unint64_t v48;
  unint64_t v49;
  unint64_t v50;
  void *v51;
  unint64_t v52;
  id v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  char v57;
  unint64_t v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  id v62;
  unint64_t v63;
  unint64_t v64;
  uint64_t v65;
  unint64_t v66;
  uint64_t v67;
  id v68;
  unint64_t v69;
  unint64_t v70;
  uint64_t v71;
  unint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  unint64_t v76;
  uint64_t v77;
  id v78;
  unint64_t v79;
  unint64_t v80;
  unint64_t v81;
  uint64_t v82;
  uint64_t v83;
  int v84;
  uint64_t v85;
  id v86;
  unint64_t v87;
  unint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  unint64_t v95;
  unint64_t v96;
  char v97;
  uint64_t v98;
  uint64_t v99;
  unint64_t v100;
  unint64_t v101;
  void *v102;
  uint64_t v103;
  unint64_t v104;
  uint64_t v105;
  id v106;
  uint64_t v107;
  uint64_t v108;
  unint64_t v109;
  unint64_t v110;
  uint64_t v111;
  uint64_t v112;
  unint64_t v113;
  unint64_t v114;
  uint64_t v115;
  unint64_t v116;
  uint64_t result;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  unint64_t v121;
  unint64_t v122;
  uint64_t v123;
  unint64_t v124;
  unint64_t v125;
  uint64_t v126;
  unint64_t v127;
  unint64_t v128;
  id v129;
  uint64_t v130;
  int v131;
  unint64_t v132;
  unint64_t v133;
  uint64_t v134;
  id v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  id v140;
  _QWORD v141[5];
  char v142;
  _QWORD v143[5];
  unsigned __int8 v144;
  void *v145;
  unint64_t v146;
  unint64_t v147;
  unint64_t v148;
  uint64_t v149;
  char v150;

  v140 = a7;
  v136 = a8;
  v139 = a11;
  v137 = a10;
  v138 = a9;
  sub_1C07DFF44(a1, (uint64_t)v143);
  v135 = (id)v143[0];
  v133 = v143[1];
  v134 = v143[2];
  v132 = v143[3];
  v130 = v143[4];
  v131 = v144;
  v17 = sub_1C106D6CC();
  v18 = *(_QWORD *)(v17 - 8);
  MEMORY[0x1E0C80A78](v17);
  v20 = (char *)&v126 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_1C07ACF80((uint64_t *)&unk_1ED762690);
  MEMORY[0x1E0C80A78](v21);
  v23 = (char *)&v126 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C07DFF44(a1, (uint64_t)&v145);
  switch(v150)
  {
    case 0:
      v24 = (uint64_t)v145;
      v25 = v146;
      v26 = v140;
      swift_retain();
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      if ((sub_1C08468A0(v24, v25, a2 & 1, a4, v27, a5) & 1) != 0)
      {
        v28 = v133;
        _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
        swift_bridgeObjectRelease();
        swift_release();

        v29 = v136;
        v30 = v134;
        v31 = (uint64_t)v135;
        v32 = v132;
        v33 = v131;
        v34 = v130;
      }
      else
      {
        v94 = sub_1C106ADE0();
        sub_1C07B2D8C((uint64_t)v23, 1, 1, v94);
        v31 = sub_1C0ACA89C(v24, v25, (uint64_t)v23);
        v96 = v95;
        sub_1C077CDB4((uint64_t)v23);
        swift_release();

        if (v96)
        {
          v28 = v96;
        }
        else
        {
          v31 = 0;
          v28 = 0xE000000000000000;
        }
        swift_bridgeObjectRelease();
        v30 = 0;
        v32 = 0;
        v34 = 0;
        v29 = v136;
        v33 = 0;
      }
      goto LABEL_63;
    case 1:
      v51 = v145;
      v50 = v146;
      v52 = v148;
      v127 = v147;
      v53 = v140;
      swift_retain();
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      v129 = v51;
      v128 = v50;
      v54 = v50;
      v55 = v52;
      v57 = sub_1C08468A0((uint64_t)v51, v54, a2 & 1, a4, v56, a5);
      v29 = v136;
      if ((v57 & 1) != 0)
      {
        v28 = v133;
        _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
        v58 = v132;
        _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
        swift_bridgeObjectRelease();
        swift_release();

        swift_bridgeObjectRelease();
        v32 = v58;
        v30 = v134;
        v31 = (uint64_t)v135;
        v33 = v131;
        goto LABEL_17;
      }
      v135 = v53;
      v30 = v127;
      sub_1C0A791CC(v127, v52, a6);
      if ((v97 & 1) == 0)
      {
        v119 = sub_1C106ADE0();
        sub_1C07B2D8C((uint64_t)v23, 1, 1, v119);
        v120 = sub_1C0ACA89C(v30, v52, (uint64_t)v23);
        v122 = v121;
        sub_1C077CDB4((uint64_t)v23);
        swift_bridgeObjectRelease();
        if (v122)
          v30 = v120;
        else
          v30 = 0;
        if (v122)
          v55 = v122;
        else
          v55 = 0xE000000000000000;
      }
      v123 = sub_1C106ADE0();
      sub_1C07B2D8C((uint64_t)v23, 1, 1, v123);
      v31 = sub_1C0ACA89C((uint64_t)v129, v128, (uint64_t)v23);
      v125 = v124;
      sub_1C077CDB4((uint64_t)v23);
      swift_release();

      if (v125)
      {
        v28 = v125;
      }
      else
      {
        v31 = 0;
        v28 = 0xE000000000000000;
      }
      swift_bridgeObjectRelease();
      v34 = 0;
      v32 = v55;
      v33 = 1;
      goto LABEL_63;
    case 4:
      v35 = (uint64_t)v145;
      v36 = v146;
      v37 = v147;
      v38 = BYTE4(v147);
      v39 = sub_1C106ADE0();
      sub_1C07B2D8C((uint64_t)v23, 1, 1, v39);
      v40 = v140;
      swift_retain();
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      v31 = sub_1C0ACA89C(v35, v36, (uint64_t)v23);
      v42 = v41;
      sub_1C077CDB4((uint64_t)v23);
      swift_release();

      if (v42)
      {
        v28 = v42;
      }
      else
      {
        v31 = 0;
        v28 = 0xE000000000000000;
      }
      swift_bridgeObjectRelease();
      v32 = 0;
      v34 = 0;
      v43 = 0x100000000;
      if (!v38)
        v43 = 0;
      v30 = v43 | v37;
      v33 = 4;
      goto LABEL_62;
    case 7:
      v59 = (uint64_t)v145;
      v60 = v146;
      v30 = v147;
      v61 = sub_1C106ADE0();
      sub_1C07B2D8C((uint64_t)v23, 1, 1, v61);
      v62 = v140;
      swift_retain();
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      v31 = sub_1C0ACA89C(v59, v60, (uint64_t)v23);
      v64 = v63;
      sub_1C077CDB4((uint64_t)v23);
      swift_release();

      if (v64)
      {
        v28 = v64;
      }
      else
      {
        v31 = 0;
        v28 = 0xE000000000000000;
      }
      swift_bridgeObjectRelease();
      v32 = 0;
      v34 = 0;
      v33 = 7;
      goto LABEL_62;
    case 9:
      v65 = (uint64_t)v145;
      v66 = v146;
      v30 = v147;
      v67 = sub_1C106ADE0();
      sub_1C07B2D8C((uint64_t)v23, 1, 1, v67);
      v68 = v140;
      swift_retain();
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      v31 = sub_1C0ACA89C(v65, v66, (uint64_t)v23);
      v70 = v69;
      sub_1C077CDB4((uint64_t)v23);
      swift_release();

      if (v70)
      {
        v28 = v70;
      }
      else
      {
        v31 = 0;
        v28 = 0xE000000000000000;
      }
      swift_bridgeObjectRelease();
      v32 = 0;
      v34 = 0;
      v33 = 9;
      goto LABEL_62;
    case 10:
      v44 = (uint64_t)v145;
      v45 = v146;
      v30 = v147;
      v46 = sub_1C106ADE0();
      sub_1C07B2D8C((uint64_t)v23, 1, 1, v46);
      v47 = v140;
      swift_retain();
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      v31 = sub_1C0ACA89C(v44, v45, (uint64_t)v23);
      v49 = v48;
      sub_1C077CDB4((uint64_t)v23);
      swift_release();

      if (v49)
      {
        v28 = v49;
      }
      else
      {
        v31 = 0;
        v28 = 0xE000000000000000;
      }
      swift_bridgeObjectRelease();
      v32 = 0;
      v34 = 0;
      v33 = 10;
      goto LABEL_62;
    case 12:
      v71 = (uint64_t)v145;
      v72 = v146;
      v128 = v147;
      v73 = v149;
      v127 = v148;
      v129 = v140;
      swift_retain();
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      if ((sub_1C08468A0(v71, v72, a2 & 1, a4, v74, a5) & 1) != 0)
      {
        v28 = v133;
        _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
        v32 = v132;
        _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
        v34 = v130;
        _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
        swift_bridgeObjectRelease();
        swift_release();

        swift_bridgeObjectRelease();
        v29 = v136;
        v30 = v134;
        v31 = (uint64_t)v135;
        v33 = v131;
      }
      else
      {
        v98 = sub_1C106ADE0();
        sub_1C07B2D8C((uint64_t)v23, 1, 1, v98);
        v99 = sub_1C0ACA89C(v71, v72, (uint64_t)v23);
        v101 = v100;
        sub_1C077CDB4((uint64_t)v23);
        if (v101)
          v102 = (void *)v99;
        else
          v102 = 0;
        v135 = v102;
        if (!v101)
          v101 = 0xE000000000000000;
        sub_1C07B2D8C((uint64_t)v23, 1, 1, v98);
        v103 = sub_1C0ACA89C(v128, v127, (uint64_t)v23);
        v32 = v104;
        v105 = (uint64_t)v23;
        v28 = v101;
        sub_1C077CDB4(v105);
        swift_release();

        if (!v32)
        {
          v103 = 0;
          v32 = 0xE000000000000000;
        }
        swift_bridgeObjectRelease();
        v34 = v73;
        v29 = v136;
        v33 = 12;
        v30 = v103;
        v31 = (uint64_t)v135;
      }
      goto LABEL_63;
    case 13:
      v75 = (uint64_t)v145;
      v76 = v146;
      v77 = sub_1C106ADE0();
      sub_1C07B2D8C((uint64_t)v23, 1, 1, v77);
      v78 = v140;
      swift_retain();
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      v31 = sub_1C0ACA89C(v75, v76, (uint64_t)v23);
      v80 = v79;
      sub_1C077CDB4((uint64_t)v23);
      swift_release();

      if (v80)
      {
        v28 = v80;
      }
      else
      {
        v31 = 0;
        v28 = 0xE000000000000000;
      }
      swift_bridgeObjectRelease();
      v30 = 0;
      v32 = 0;
      v34 = 0;
      v33 = 13;
      goto LABEL_62;
    case 14:
      v82 = (uint64_t)v145;
      v81 = v146;
      v83 = v147;
      v84 = BYTE4(v147);
      if (v146)
      {
        v85 = sub_1C106ADE0();
        sub_1C07B2D8C((uint64_t)v23, 1, 1, v85);
        v86 = v140;
        swift_retain();
        _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
        _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
        v31 = sub_1C0ACA89C(v82, v81, (uint64_t)v23);
        v88 = v87;
        sub_1C077CDB4((uint64_t)v23);
        swift_release();

        if (v88)
        {
          v28 = v88;
        }
        else
        {
          v31 = 0;
          v28 = 0xE000000000000000;
        }
        swift_bridgeObjectRelease();
        v32 = 0;
        v34 = 0;
        v89 = 0x100000000;
        if (!v84)
          v89 = 0;
        v30 = v89 | v83;
        v33 = 14;
LABEL_62:
        v29 = v136;
      }
      else
      {
        v118 = 0x100000000;
        if (!BYTE4(v147))
          v118 = 0;
        v30 = v118 | v147;
        _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
        v28 = 0;
        v34 = 0;
        v33 = 14;
        v29 = v136;
        v31 = v82;
        v32 = 0;
      }
LABEL_63:
      swift_bridgeObjectRelease();
      swift_release();

      result = swift_bridgeObjectRelease_n();
      *(_QWORD *)v29 = v31;
      *(_QWORD *)(v29 + 8) = v28;
      *(_QWORD *)(v29 + 16) = v30;
      *(_QWORD *)(v29 + 24) = v32;
      *(_QWORD *)(v29 + 32) = v34;
      *(_BYTE *)(v29 + 40) = v33;
      return result;
    case 15:
      if ((a3 & 1) != 0)
      {
        v90 = (uint64_t)v145;
        v91 = v138;
        swift_retain_n();
        v92 = v137;
        swift_bridgeObjectRetain_n();
        v93 = v139;
        swift_bridgeObjectRetain_n();
        v31 = sub_1C08460D0(v90, v140, v91, v92, v93);
        swift_bridgeObjectRelease();
        swift_release();
        v28 = 0;
        v30 = 0;
        v32 = 0;
        v34 = 0;
        v33 = 15;
      }
      else
      {
        (*(void (**)(char *, _QWORD, uint64_t))(v18 + 104))(v20, *MEMORY[0x1E0D3C0B0], v17);
        v106 = v140;
        swift_retain();
        _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
        _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
        sub_1C0821B64();
        v108 = v107;
        v110 = v109;
        v111 = sub_1C106ADE0();
        sub_1C07B2D8C((uint64_t)v23, 1, 1, v111);
        v112 = sub_1C0ACA89C(v108, v110, (uint64_t)v23);
        v114 = v113;
        sub_1C077CDB4((uint64_t)v23);
        swift_bridgeObjectRelease();
        if (v114)
          v115 = v112;
        else
          v115 = 0;
        if (v114)
          v116 = v114;
        else
          v116 = 0xE000000000000000;
        sub_1C0821FFC((uint64_t)v20, v115, v116, (uint64_t)v141);
        v31 = v141[0];
        v28 = v141[1];
        v30 = v141[2];
        v32 = v141[3];
        v34 = v141[4];
        v33 = v142;
        swift_bridgeObjectRelease();
        swift_release();

      }
      goto LABEL_62;
    default:
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      sub_1C08480D8(a1);
      swift_bridgeObjectRelease();
      v29 = v136;
      v30 = v134;
      v31 = (uint64_t)v135;
      v28 = v133;
      v32 = v132;
      v33 = v131;
LABEL_17:
      v34 = v130;
      goto LABEL_63;
  }
}

uint64_t sub_1C0847EFC@<X0>(uint64_t a1@<X0>, char a2@<W1>, char a3@<W2>, void *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  id v15;
  _BYTE v17[48];

  v15 = a4;
  swift_retain();
  sub_1C077AE90();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C0847110(a1, a2, a3, v15, a6, a7, v15, (uint64_t)v17, a5, a6, a7);
  return sub_1C07DFF44((uint64_t)v17, a8);
}

uint64_t sub_1C0847FA8@<X0>(uint64_t a1@<X0>, char a2@<W1>, char a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  _BYTE v7[48];

  sub_1C0847EFC(a1, a2, a3, *(void **)v4, *(_QWORD *)(v4 + 8), *(_QWORD *)(v4 + 16), *(_QWORD *)(v4 + 24), (uint64_t)v7);
  return sub_1C07DFF44((uint64_t)v7, a4);
}

uint64_t sub_1C0847FE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  void *v6;
  void *v7;
  id v8;
  uint64_t v9;

  v6 = (void *)sub_1C106FAF0();
  swift_bridgeObjectRelease();
  v7 = (void *)sub_1C106FAF0();
  sub_1C077960C();
  v8 = objc_msgSend(a5, sel_pathForResource_ofType_, v6, v7);

  if (!v8)
    return 0;
  v9 = sub_1C106FB14();

  return v9;
}

unint64_t sub_1C084809C()
{
  unint64_t result;

  result = qword_1EF631FD0;
  if (!qword_1EF631FD0)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C107C090, &unk_1E7A0E140);
    atomic_store(result, (unint64_t *)&qword_1EF631FD0);
  }
  return result;
}

uint64_t sub_1C08480D8(uint64_t a1)
{
  sub_1C0826EB0(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_BYTE *)(a1 + 40));
  return a1;
}

void type metadata accessor for SimpleBehaviorReplacer()
{
  sub_1C0779604();
}

_QWORD *sub_1C084811C(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C077AE90();
  return a1;
}

void type metadata accessor for BehaviorPostProcessingSettings()
{
  sub_1C0779604();
}

unint64_t sub_1C0848158()
{
  unint64_t result;

  result = qword_1EF631FE0;
  if (!qword_1EF631FE0)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C107C17C, &type metadata for BehaviorPostProcessingSettings.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF631FE0);
  }
  return result;
}

unint64_t sub_1C0848194()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_1ED762580;
  if (!qword_1ED762580)
  {
    v1 = sub_1C07D4BEC(&qword_1ED762B80);
    v2 = MEMORY[0x1E0DEA9A0];
    result = MEMORY[0x1C3BA8174](MEMORY[0x1E0DEB3D8], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_1ED762580);
  }
  return result;
}

uint64_t sub_1C08481F0(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for Behavior(a2, a1);
  return a2;
}

uint64_t storeEnumTagSinglePayload for BehaviorPostProcessingSettings.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1C0848278 + 4 * byte_1C107BFE9[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1C08482AC + 4 * byte_1C107BFE4[v4]))();
}

uint64_t sub_1C08482AC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C08482B4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C08482BCLL);
  return result;
}

uint64_t sub_1C08482C8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C08482D0);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1C08482D4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C08482DC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for BehaviorPostProcessingSettings.CodingKeys()
{
  return &type metadata for BehaviorPostProcessingSettings.CodingKeys;
}

unint64_t sub_1C08482FC()
{
  unint64_t result;

  result = qword_1EF631FE8;
  if (!qword_1EF631FE8)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C107C154, &type metadata for BehaviorPostProcessingSettings.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF631FE8);
  }
  return result;
}

unint64_t sub_1C084833C()
{
  unint64_t result;

  result = qword_1EF631FF0;
  if (!qword_1EF631FF0)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C107C0C4, &type metadata for BehaviorPostProcessingSettings.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF631FF0);
  }
  return result;
}

unint64_t sub_1C084837C()
{
  unint64_t result;

  result = qword_1EF631FF8;
  if (!qword_1EF631FF8)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C107C0EC, &type metadata for BehaviorPostProcessingSettings.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF631FF8);
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for PoiCategoryContent(uint64_t result, uint64_t *a2)
{
  uint64_t v2;

  v2 = *a2;
  *(_BYTE *)(result + 8) = *((_BYTE *)a2 + 8);
  *(_QWORD *)result = v2;
  return result;
}

uint64_t sub_1C08483CC(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 9))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_1C08483EC(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)result = 0;
    *(_BYTE *)(result + 8) = 0;
    *(_DWORD *)result = a2 - 1;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 9) = v3;
  return result;
}

uint64_t sub_1C084841C(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 8))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_1C0848438(uint64_t result, int a2)
{
  char v2;

  if (a2)
  {
    *(_QWORD *)result = (a2 - 1);
    v2 = 1;
  }
  else
  {
    v2 = 0;
  }
  *(_BYTE *)(result + 8) = v2;
  return result;
}

void type metadata accessor for TimeBasedContextAspect()
{
  sub_1C0779604();
}

uint64_t getEnumTagSinglePayload for ManualBundleCategory(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xF4)
  {
    if (a2 + 12 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 12) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 13;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0xD;
  v5 = v6 - 13;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t sub_1C08484EC(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 12 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 12) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF4)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF3)
    return ((uint64_t (*)(void))((char *)&loc_1C0848538 + 4 * byte_1C107C1D5[v4]))();
  *a1 = a2 + 12;
  return ((uint64_t (*)(void))((char *)sub_1C084856C + 4 * byte_1C107C1D0[v4]))();
}

uint64_t sub_1C084856C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C0848574(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C084857CLL);
  return result;
}

uint64_t sub_1C0848588(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C0848590);
  *(_BYTE *)result = a2 + 12;
  return result;
}

uint64_t sub_1C0848594(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C084859C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for BehaviorContextAspect()
{
  sub_1C0779604();
}

void sub_1C08485B4(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5[2];

  v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    sub_1C0861C1C();
    v2 = v3;
  }
  v4 = *(_QWORD *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v4;
  sub_1C084B100(v5);
  *a1 = v2;
}

uint64_t sub_1C084861C()
{
  unint64_t v0;
  unint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  char v33;
  uint64_t v34;
  char v35;
  char v36;
  char v37;
  int v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  uint64_t v50;
  char v51;
  char v52;
  char v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  BOOL v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char v73;
  char v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char v84;
  uint64_t v85;
  char v86;
  char v87;
  char v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  char v98;
  uint64_t v99;
  char v100;
  char v101;
  char v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  char v112;
  uint64_t v113;
  char v114;
  char v115;
  char v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  char v126;
  uint64_t v127;
  char v128;
  char v129;
  char v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  char v134;
  uint64_t v135;
  uint64_t v136;
  int v137;
  int v138;
  int v139;
  int v140;
  int v141;
  int v142;
  uint64_t i;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  char v153;
  uint64_t v154;
  char v155;
  char v156;
  char v157;
  int v158;
  unint64_t v159;
  unint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  char v169;
  uint64_t v170;
  char v171;
  char v172;
  char v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  unint64_t v188;
  uint64_t v189;
  uint64_t v190;
  unint64_t v191;
  uint64_t v192;
  uint64_t result;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  __int128 v212;
  uint64_t v213;
  __int128 v214;
  __int128 v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;

  v246 = sub_1C0AA7DC8();
  v203 = 13;
  v2 = 0;
  v212 = xmmword_1C1079220;
  do
  {
    sub_1C0BE8D34(v2, 1, &unk_1E79FC610);
    v3 = *((_BYTE *)&unk_1E79FC610 + v2 + 32);
    v4 = sub_1C0A7DA68();
    sub_1C0781CD8(v4, v5, v6, v7, v8, v9, v10, v11, v194, v203, v212, *((uint64_t *)&v212 + 1), v227, v236, v237, v238);
    v12 = sub_1C0A7DA68();
    sub_1C0781CD8(v12, v13, v14, v15, v16, v17, v18, v19, v195, v204, v213, v221, v228, v236, v237, v238);
    sub_1C07ACF80(&qword_1ED746368);
    v20 = sub_1C0778598();
    *(_OWORD *)(v20 + 16) = v214;
    *(_BYTE *)(v20 + 32) = v3;
    sub_1C0AA799C();
    v22 = v21;
    v23 = v246;
    sub_1C0799788();
    sub_1C078796C();
    v24 = sub_1C07767B4();
    sub_1C07A5150(v24, v25, v26, v27, v28, v29, v30, v31, v196, v205, v214, *((uint64_t *)&v214 + 1), v229, v236, v237, v238, v239, v240, v241,
      v242,
      v243,
      v244,
      v245,
      v246,
      v247,
      v248,
      v249,
      v250,
      v251,
      v252,
      v253,
      v254);
    sub_1C079E28C();
    sub_1C07B3FBC();
    if ((v32 & 1) == 0)
    {
LABEL_7:
      sub_1C07767AC();
      v38 = sub_1C0778698();
      v236 = v23;
      v39 = *(_QWORD *)(v23 + 16);
      v40 = *(_QWORD *)(v23 + 24);
      sub_1C07767C4();
      if (v40 <= v39)
      {
        if (v38)
          sub_1C0A80E14();
        else
          sub_1C0A89D04();
        v23 = v236;
        sub_1C0799788();
        v41 = sub_1C078796C();
        sub_1C07A5150(v41, v42, v43, v44, v45, v46, v47, v48, v197, v206, v215, *((uint64_t *)&v215 + 1), v230, v236, v237, v238, v239, v240, v241,
          v242,
          v243,
          v244,
          v245,
          v246,
          v247,
          v248,
          v249,
          v250,
          v251,
          v252,
          v253,
          v254);
        sub_1C079E28C();
        sub_1C07B3FBC();
        if ((v49 & 1) != 0)
        {
          do
          {
            sub_1C079FCF0();
            if (v33)
            {
              v50 = sub_1C0798624();
              sub_1C07B95B4(v50);
              v52 = v51;
              sub_1C079A814();
              if ((v52 & 1) != 0)
                goto LABEL_94;
            }
            sub_1C07906E0();
          }
          while ((v53 & 1) != 0);
        }
      }
      else if ((v38 & 1) == 0)
      {
        sub_1C0A87E9C();
        v23 = v236;
      }
      sub_1C07B61B8(v23 + ((v0 >> 3) & 0xFFFFFFFFFFFFFF8));
      v55 = v54 + 16 * v0;
      *(_QWORD *)v55 = v22;
      *(_BYTE *)(v55 + 8) = 2;
      v56 = *(_QWORD *)(v23 + 16);
      v57 = __OFADD__(v56, 1);
      v58 = v56 + 1;
      if (!v57)
      {
        *(_QWORD *)(v23 + 16) = v58;
        v246 = v23;
        sub_1C0775894();
        goto LABEL_21;
      }
LABEL_93:
      __break(1u);
LABEL_94:
      result = sub_1C1070D38();
      __break(1u);
      return result;
    }
    while (1)
    {
      sub_1C079FCF0();
      if (v33)
      {
        v34 = sub_1C0798624();
        sub_1C07B95B4(v34);
        v36 = v35;
        sub_1C079A814();
        if ((v36 & 1) != 0)
          break;
      }
      sub_1C07906E0();
      if ((v37 & 1) == 0)
        goto LABEL_7;
    }
    sub_1C0775894();
LABEL_21:
    swift_bridgeObjectRelease();
    v59 = sub_1C0778598();
    *(_OWORD *)(v59 + 16) = v215;
    *(_BYTE *)(v59 + 32) = v3;
    sub_1C0AA799C();
    v61 = v60;
    sub_1C0799788();
    sub_1C079F32C();
    sub_1C07767B4();
    sub_1C0A8C5A4((uint64_t)&v237, v61, v62, v63, v64, v65, v66, v67, v197, v206, v215, *((uint64_t *)&v215 + 1), v230, v236, v237, v238, v239, v240, v241,
      v242,
      v243,
      v244,
      v245,
      v246,
      v247,
      v248,
      v249,
      v250,
      v251,
      v252,
      v253,
      v254);
    v68 = sub_1C079E28C();
    v69 = -1 << *(_BYTE *)(v23 + 32);
    v70 = v68 & ~v69;
    v0 = v23 + 56;
    if (((*(_QWORD *)(v23 + 56 + ((v70 >> 3) & 0xFFFFFFFFFFFFF8)) >> v70) & 1) != 0)
    {
      v71 = ~v69;
      while (1)
      {
        sub_1C07B1CC8();
        if (v33)
        {
          v72 = sub_1C0798624();
          sub_1C0A7CADC(v72, v61);
          v74 = v73;
          sub_1C0797C18();
          if ((v74 & 1) != 0)
            break;
        }
        v70 = (v70 + 1) & v71;
        if (((*(_QWORD *)(v0 + ((v70 >> 3) & 0xFFFFFFFFFFFFF8)) >> v70) & 1) == 0)
          goto LABEL_27;
      }
      swift_bridgeObjectRelease();
    }
    else
    {
LABEL_27:
      sub_1C07767AC();
      sub_1C0778698();
      v237 = v23;
      v75 = _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      sub_1C0A84CB4(v75, 3, v70);
      v23 = v237;
      v246 = v237;
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    ++v2;
  }
  while (v2 != v203);
  swift_bridgeObjectRelease();
  sub_1C0AA799C();
  sub_1C0799788();
  sub_1C078796C();
  sub_1C07796D8();
  v76 = sub_1C07767B4();
  sub_1C07957D0(v76, v77, v78, v79, v80, v81, v82, v83, v194, v203, v212, *((uint64_t *)&v212 + 1), v227, v236, v237, v238, v239, v240, v241,
    v242,
    v243,
    v244,
    v245,
    v246,
    v247,
    v248,
    v249,
    v250,
    v251,
    v252,
    v253,
    v254);
  sub_1C079E28C();
  sub_1C07A07AC();
  if ((v84 & 1) != 0)
  {
    while (1)
    {
      sub_1C079FCF0();
      if (v33)
      {
        v85 = sub_1C0798624();
        sub_1C07B7A60(v85);
        v87 = v86;
        sub_1C079A814();
        if ((v87 & 1) != 0)
          break;
      }
      sub_1C07ADAF8();
      if ((v88 & 1) == 0)
        goto LABEL_35;
    }
    sub_1C0775844();
  }
  else
  {
LABEL_35:
    sub_1C07767AC();
    sub_1C0778698();
    v89 = sub_1C0796FF0();
    sub_1C07943A8(v89, 2);
    v23 = v237;
    v246 = v237;
    sub_1C0775844();
  }
  swift_bridgeObjectRelease();
  sub_1C0799788();
  sub_1C079F32C();
  v90 = sub_1C07767B4();
  sub_1C07957D0(v90, v91, v92, v93, v94, v95, v96, v97, v198, v207, v216, v222, v231, v236, v237, v238, v239, v240, v241,
    v242,
    v243,
    v244,
    v245,
    v246,
    v247,
    v248,
    v249,
    v250,
    v251,
    v252,
    v253,
    v254);
  sub_1C079E28C();
  sub_1C07A07AC();
  if ((v98 & 1) != 0)
  {
    while (1)
    {
      sub_1C07B1CC8();
      if (v33)
      {
        v99 = sub_1C0798624();
        sub_1C07B7A60(v99);
        v101 = v100;
        sub_1C0797C18();
        if ((v101 & 1) != 0)
          break;
      }
      sub_1C07ADAF8();
      if ((v102 & 1) == 0)
        goto LABEL_42;
    }
    sub_1C0775844();
  }
  else
  {
LABEL_42:
    sub_1C07767AC();
    sub_1C0778698();
    v103 = sub_1C0796FF0();
    sub_1C07943A8(v103, 3);
    v23 = v237;
    v246 = v237;
    sub_1C0775844();
  }
  swift_bridgeObjectRelease();
  sub_1C0AA799C();
  sub_1C0799788();
  sub_1C078796C();
  sub_1C07796D8();
  v104 = sub_1C07767B4();
  sub_1C07957D0(v104, v105, v106, v107, v108, v109, v110, v111, v199, v208, v217, v223, v232, v236, v237, v238, v239, v240, v241,
    v242,
    v243,
    v244,
    v245,
    v246,
    v247,
    v248,
    v249,
    v250,
    v251,
    v252,
    v253,
    v254);
  sub_1C079E28C();
  sub_1C07A07AC();
  if ((v112 & 1) != 0)
  {
    while (1)
    {
      sub_1C079FCF0();
      if (v33)
      {
        v113 = sub_1C0798624();
        sub_1C07B7A60(v113);
        v115 = v114;
        sub_1C079A814();
        if ((v115 & 1) != 0)
          break;
      }
      sub_1C07ADAF8();
      if ((v116 & 1) == 0)
        goto LABEL_49;
    }
    sub_1C0775844();
  }
  else
  {
LABEL_49:
    sub_1C07767AC();
    sub_1C0778698();
    v117 = sub_1C0796FF0();
    sub_1C07943A8(v117, 2);
    v23 = v237;
    v246 = v237;
    sub_1C0775844();
  }
  swift_bridgeObjectRelease();
  sub_1C0799788();
  sub_1C079F32C();
  v118 = sub_1C07767B4();
  sub_1C07957D0(v118, v119, v120, v121, v122, v123, v124, v125, v200, v209, v218, v224, v233, v236, v237, v238, v239, v240, v241,
    v242,
    v243,
    v244,
    v245,
    v246,
    v247,
    v248,
    v249,
    v250,
    v251,
    v252,
    v253,
    v254);
  sub_1C079E28C();
  sub_1C07A07AC();
  if ((v126 & 1) != 0)
  {
    while (1)
    {
      sub_1C07B1CC8();
      if (v33)
      {
        v127 = sub_1C0798624();
        sub_1C07B7A60(v127);
        v129 = v128;
        sub_1C0797C18();
        if ((v129 & 1) != 0)
          break;
      }
      sub_1C07ADAF8();
      if ((v130 & 1) == 0)
        goto LABEL_56;
    }
    sub_1C0775844();
  }
  else
  {
LABEL_56:
    sub_1C07767AC();
    sub_1C0778698();
    v131 = sub_1C0796FF0();
    sub_1C07943A8(v131, 3);
    v23 = v237;
    v246 = v237;
    sub_1C0775844();
  }
  swift_bridgeObjectRelease();
  v132 = 0;
  while (2)
  {
    sub_1C0BE8D34(v132, 1, &unk_1E79FC740);
    v133 = 0;
    v134 = *((_BYTE *)&unk_1E79FC740 + v132 + 32);
    v219 = v132 + 1;
    do
    {
      v135 = v133;
      sub_1C0BE8D34(v133++, 1, byte_1E79FC768);
      LOBYTE(v135) = byte_1E79FC768[v135 + 32];
      sub_1C07ACF80(&qword_1ED746368);
      v136 = sub_1C0778598();
      *(_BYTE *)(v136 + 32) = v134;
      *(_BYTE *)(v136 + 33) = v135;
      sub_1C07F3934();
      v237 = sub_1C1070234();
      for (i = 32; i != 34; ++i)
        sub_1C0A7D800((int)&v236, *(unsigned __int8 *)(v136 + i), v137, v138, v139, v140, v141, v142, v201, v210, v219, v225, v234, v236, v237, v238, v239, v240, v241,
          v242,
          v243,
          v244,
          v245,
          v246,
          v247,
          v248,
          v249,
          v250,
          v251,
          v252,
          v253,
          v254);
      swift_setDeallocating();
      swift_deallocClassInstance();
      v144 = v237;
      sub_1C0799788();
      sub_1C078796C();
      sub_1C07767C4();
      v145 = sub_1C07767B4();
      sub_1C07A5150(v145, v146, v147, v148, v149, v150, v151, v152, v201, v210, v219, v225, v234, v236, v237, v238, v239, v240, v241,
        v242,
        v243,
        v244,
        v245,
        v246,
        v247,
        v248,
        v249,
        v250,
        v251,
        v252,
        v253,
        v254);
      sub_1C079E28C();
      sub_1C079C304();
      if ((v153 & 1) != 0)
      {
        while (1)
        {
          sub_1C07AFFE4();
          if (v33)
          {
            v154 = sub_1C0798624();
            sub_1C07B95B4(v154);
            v156 = v155;
            sub_1C079A814();
            if ((v156 & 1) != 0)
              break;
          }
          sub_1C07B82B0();
          if ((v157 & 1) == 0)
            goto LABEL_67;
        }
        sub_1C0775894();
      }
      else
      {
LABEL_67:
        sub_1C07767AC();
        v158 = sub_1C0778698();
        v236 = v23;
        v159 = *(_QWORD *)(v23 + 16);
        v160 = *(_QWORD *)(v23 + 24);
        sub_1C07767C4();
        if (v160 <= v159)
        {
          if (v158)
            sub_1C0A80E14();
          else
            sub_1C0A89D04();
          v23 = v236;
          sub_1C0799788();
          v161 = sub_1C078796C();
          sub_1C07A5150(v161, v162, v163, v164, v165, v166, v167, v168, v202, v211, v220, v226, v235, v236, v237, v238, v239, v240, v241,
            v242,
            v243,
            v244,
            v245,
            v246,
            v247,
            v248,
            v249,
            v250,
            v251,
            v252,
            v253,
            v254);
          sub_1C079E28C();
          sub_1C079C304();
          if ((v169 & 1) != 0)
          {
            do
            {
              sub_1C07AFFE4();
              if (v33)
              {
                v170 = sub_1C0798624();
                sub_1C07B95B4(v170);
                v172 = v171;
                sub_1C079A814();
                if ((v172 & 1) != 0)
                  goto LABEL_94;
              }
              sub_1C07B82B0();
            }
            while ((v173 & 1) != 0);
          }
        }
        else if ((v158 & 1) == 0)
        {
          sub_1C0A87E9C();
          v23 = v236;
        }
        sub_1C07B61B8(v23 + ((v1 >> 3) & 0xFFFFFFFFFFFFFF8));
        v175 = v174 + 16 * v1;
        *(_QWORD *)v175 = v144;
        *(_BYTE *)(v175 + 8) = 2;
        v176 = *(_QWORD *)(v23 + 16);
        v57 = __OFADD__(v176, 1);
        v177 = v176 + 1;
        if (v57)
        {
          __break(1u);
          goto LABEL_93;
        }
        *(_QWORD *)(v23 + 16) = v177;
        sub_1C0775894();
      }
      swift_bridgeObjectRelease();
      sub_1C0799788();
      sub_1C079F32C();
      v178 = sub_1C07767B4();
      sub_1C07A5150(v178, v179, v180, v181, v182, v183, v184, v185, v202, v211, v220, v226, v235, v236, v237, v238, v239, v240, v241,
        v242,
        v243,
        v244,
        v245,
        v246,
        v247,
        v248,
        v249,
        v250,
        v251,
        v252,
        v253,
        v254);
      v186 = sub_1C079E28C();
      v187 = -1 << *(_BYTE *)(v23 + 32);
      v188 = v186 & ~v187;
      if (((*(_QWORD *)(v23 + 56 + ((v188 >> 3) & 0xFFFFFFFFFFFFF8)) >> v188) & 1) != 0)
      {
        v189 = ~v187;
        while (1)
        {
          sub_1C07B1CC8();
          if (v33)
          {
            v190 = sub_1C0798624();
            sub_1C07B95B4(v190);
            v1 = v191;
            sub_1C0797C18();
            if ((v1 & 1) != 0)
              break;
          }
          v188 = (v188 + 1) & v189;
          if (((*(_QWORD *)(v23 + 56 + ((v188 >> 3) & 0xFFFFFFFFFFFFF8)) >> v188) & 1) == 0)
            goto LABEL_87;
        }
        sub_1C0775894();
      }
      else
      {
LABEL_87:
        sub_1C07767AC();
        v1 = sub_1C0778698();
        v237 = v23;
        v192 = sub_1C07767C4();
        sub_1C0A84CB4(v192, 3, v188);
        v23 = v237;
        sub_1C0775894();
      }
      swift_bridgeObjectRelease();
    }
    while (v133 != 6);
    v246 = v23;
    v132 = v219;
    if (v219 != 3)
      continue;
    return v23;
  }
}

void sub_1C0848E74(uint64_t a1, uint64_t a2, char a3)
{
  __asm { BR              X10 }
}

uint64_t sub_1C0848EA4()
{
  sub_1C1070E04();
  sub_1C084AE10();
  sub_1C106FC28();
  return swift_bridgeObjectRelease();
}

void sub_1C0848F28()
{
  sub_1C1070E04(1);
  sub_1C0778534();
}

void sub_1C0848F30()
{
  sub_1C1070E04(2);
  sub_1C0778534();
}

void sub_1C0848F38()
{
  sub_1C1070E04(3);
  sub_1C0778534();
}

void sub_1C0848F40()
{
  sub_1C1070E04(4);
  sub_1C0778534();
}

void sub_1C0848F48()
{
  sub_1C1070E04(5);
  sub_1C0778534();
}

void sub_1C0848F50()
{
  sub_1C1070E04(6);
  sub_1C0778534();
}

void sub_1C0848F58()
{
  sub_1C1070E04(7);
  sub_1C0778534();
}

void sub_1C0848F60()
{
  sub_1C1070E04(8);
  sub_1C0778534();
}

void sub_1C0848F68()
{
  sub_1C1070E04(9);
  sub_1C0778534();
}

void sub_1C0848F80(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_1C0848FAC(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  if (!a4)
  {
    sub_1C07BC610();
    sub_1C077C170();
    __asm { BR              X11 }
  }
  return 0;
}

void sub_1C08493B0(uint64_t a1, char a2)
{
  _BYTE v4[72];

  sub_1C077C06C();
  sub_1C0848E74((uint64_t)v4, a1, a2);
  sub_1C077AE74();
  sub_1C0775804();
}

void sub_1C08493E8()
{
  uint64_t v0;

  sub_1C08493B0(*(_QWORD *)v0, *(_BYTE *)(v0 + 8));
}

void sub_1C08493F4(uint64_t a1)
{
  uint64_t v1;

  sub_1C0848E74(a1, *(_QWORD *)v1, *(_BYTE *)(v1 + 8));
}

void sub_1C0849400()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  _BYTE v3[72];

  v1 = *(_QWORD *)v0;
  v2 = *(_BYTE *)(v0 + 8);
  sub_1C1070DF8();
  sub_1C0848E74((uint64_t)v3, v1, v2);
  sub_1C077AE74();
  sub_1C0775804();
}

void sub_1C084943C(uint64_t a1)
{
  sub_1C0848F80(*(_QWORD *)a1, *(_BYTE *)(a1 + 8));
}

void sub_1C0849454(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_1C0849484()
{
  uint64_t v0;
  uint64_t v2;

  sub_1C0784E3C();
  sub_1C0782B28();
  sub_1C07786A0();
  v2 = v0;
  sub_1C08499CC();
  sub_1C106FC94();
  sub_1C07767AC();
  return v2;
}

void sub_1C0849594()
{
  sub_1C077B66C();
  JUMPOUT(0x1C0849584);
}

void sub_1C08495A0()
{
  sub_1C077B66C();
  JUMPOUT(0x1C0849584);
}

void sub_1C08495AC()
{
  sub_1C077B66C();
  JUMPOUT(0x1C0849584);
}

void sub_1C08495BC()
{
  sub_1C077B66C();
  JUMPOUT(0x1C0849584);
}

void sub_1C08495CC()
{
  sub_1C077B66C();
  JUMPOUT(0x1C0849584);
}

void sub_1C08495DC()
{
  JUMPOUT(0x1C08495E8);
}

void sub_1C08495F0()
{
  sub_1C0776808();
  JUMPOUT(0x1C0849584);
}

void sub_1C0849600()
{
  sub_1C077B66C();
  JUMPOUT(0x1C0849584);
}

uint64_t sub_1C0849624(uint64_t a1)
{
  uint64_t v1;
  int v2;
  uint64_t v3;
  uint64_t v6;

  if (*(_QWORD *)(a1 + 16))
  {
    v6 = MEMORY[0x1E0DEE9D8];
    sub_1C09D30E0();
    v1 = sub_1C0F2239C(a1);
    if (v1 < 0 || v1 >= 1 << *(_BYTE *)(a1 + 32))
    {
      __break(1u);
    }
    else if (((*(_QWORD *)(a1 + 56 + (((unint64_t)v1 >> 3) & 0xFFFFFFFFFFFFF8)) >> v1) & 1) != 0)
    {
      if (*(_DWORD *)(a1 + 36) == v2)
        __asm { BR              X9 }
LABEL_10:
      __break(1u);
      swift_release();
      __break(1u);
      JUMPOUT(0x1C0849998);
    }
    __break(1u);
    goto LABEL_10;
  }
  v6 = MEMORY[0x1E0DEE9D8];
  sub_1C07767B4();
  sub_1C08485B4(&v6);
  sub_1C07767AC();
  sub_1C07ACF80(&qword_1ED762B70);
  sub_1C07F52E0((unint64_t *)&qword_1ED762430, &qword_1ED762B70, MEMORY[0x1E0DEAF20]);
  v3 = sub_1C106FA54();
  swift_release();
  return v3;
}

uint64_t sub_1C08499CC()
{
  uint64_t v0;
  uint64_t v1;

  v0 = sub_1C07786AC();
  return ((uint64_t (*)(uint64_t))((char *)sub_1C08499F0 + 4 * byte_1C107C23E[v1]))(v0);
}

uint64_t sub_1C0849A1C()
{
  return 0x74536E6F69746F6DLL;
}

void sub_1C0849A3C(uint64_t a1, uint64_t a2)
{
  BOOL v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  char v19;

  if (a1 == 0xD000000000000010)
  {
    sub_1C0791A68((uint64_t)"lastExecutionAge");
    if (v4)
      goto LABEL_4;
  }
  if ((sub_1C079373C() & 1) != 0)
    goto LABEL_4;
  if (a1 == 0xD000000000000022)
  {
    sub_1C07ADB14();
    if (v4)
      goto LABEL_4;
  }
  if ((sub_1C079373C() & 1) != 0)
    goto LABEL_4;
  if (a1 == 0xD000000000000010)
  {
    sub_1C0791A68((uint64_t)"dailyDoseL1Error");
    if (v4)
      goto LABEL_4;
  }
  if ((sub_1C079373C() & 1) != 0)
    goto LABEL_4;
  if (a1 == 0xD000000000000010)
  {
    sub_1C0791A68((uint64_t)"dailyDoseL2Error");
    if (v4)
      goto LABEL_4;
  }
  if ((sub_1C079373C() & 1) != 0)
    goto LABEL_4;
  if (a1 == 0xD000000000000012)
  {
    sub_1C07ADB14();
    if (v4)
      goto LABEL_4;
  }
  if ((sub_1C079373C() & 1) != 0)
    goto LABEL_4;
  if (a1 == 0xD00000000000001BLL)
  {
    sub_1C07ADB14();
    if (v4)
      goto LABEL_4;
  }
  if ((sub_1C079373C() & 1) != 0)
    goto LABEL_4;
  if (a1 == 0xD00000000000001ALL)
  {
    sub_1C07ADB14();
    if (v4)
      goto LABEL_4;
  }
  if ((sub_1C079373C() & 1) != 0)
    goto LABEL_4;
  if (a1 == 0xD00000000000001FLL)
  {
    sub_1C0791A68((uint64_t)"sequencePopularityGivenBehavior");
    if (v4)
      goto LABEL_4;
  }
  sub_1C077B66C();
  if ((sub_1C079373C() & 1) != 0)
    goto LABEL_4;
  if (a1 == 0xD00000000000001FLL)
  {
    sub_1C0791A68((uint64_t)"behaviorPopularityGivenSequence");
    if (v4)
      goto LABEL_4;
  }
  sub_1C077B66C();
  if ((sub_1C079373C() & 1) != 0)
    goto LABEL_4;
  v4 = a1 == 0x756F436C61746F74 && a2 == 0xEA0000000000746ELL;
  if (v4)
    goto LABEL_4;
  sub_1C0776808();
  if ((sub_1C079373C() & 1) != 0)
    goto LABEL_4;
  sub_1C07B1280();
  v5 = (_QWORD *)sub_1C1070630();
  sub_1C07767AC();
  if (v5[2] != 2)
    goto LABEL_4;
  v6 = v5[8];
  v7 = v5[9];
  v8 = v5[10];
  v9 = v5[11];
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  v10 = MEMORY[0x1C3BA64D0](v6, v7, v8, v9);
  v12 = v11;
  swift_bridgeObjectRelease();
  sub_1C0849F14(v10, v12);
  if (!v13)
    goto LABEL_4;
  if (!v5[2])
  {
    __break(1u);
    return;
  }
  v14 = v13;
  sub_1C07796D8();
  sub_1C077960C();
  sub_1C077B66C();
  if ((sub_1C0796174(v15, v16) & 1) != 0)
  {
    sub_1C0775844();
    return;
  }
  if ((sub_1C0796174(0xD00000000000001ELL, 0x80000001C10E5BE0) & 1) != 0)
  {
    sub_1C0775844();
    if (*(_QWORD *)(v14 + 16) == 1)
    {
LABEL_57:
      sub_1C0AA4680(v14);
      sub_1C07767AC();
      return;
    }
LABEL_4:
    swift_bridgeObjectRelease();
    return;
  }
  if ((sub_1C0796174(0xD00000000000001ELL, 0x80000001C10E5C00) & 1) != 0)
  {
    sub_1C0775844();
    if (*(_QWORD *)(v14 + 16) == 1)
      goto LABEL_57;
    goto LABEL_4;
  }
  sub_1C077B66C();
  v19 = sub_1C0796174(v17, v18);
  sub_1C0775844();
  if ((v19 & 1) == 0)
    goto LABEL_4;
}

void sub_1C0849F14(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  sub_1C07B1280();
  v2 = sub_1C1070630();
  sub_1C0775844();
  v3 = *(_QWORD *)(v2 + 16);
  if (v3)
  {
    v4 = (uint64_t *)(v2 + 56);
    v5 = MEMORY[0x1E0DEE9D8];
    while (1)
    {
      v7 = *(v4 - 1);
      v6 = *v4;
      v9 = *(v4 - 3);
      v8 = *(v4 - 2);
      sub_1C07796D8();
      MEMORY[0x1C3BA64D0](v9, v8, v7, v6);
      sub_1C0775844();
      v10 = sub_1C084AE80();
      if (v10 == 13)
        break;
      v11 = v10;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1C078DABC();
        v5 = v13;
      }
      v12 = *(_QWORD *)(v5 + 16);
      if (v12 >= *(_QWORD *)(v5 + 24) >> 1)
      {
        sub_1C078DABC();
        v5 = v14;
      }
      *(_QWORD *)(v5 + 16) = v12 + 1;
      *(_BYTE *)(v5 + v12 + 32) = v11;
      v4 += 4;
      if (!--v3)
        goto LABEL_11;
    }
    sub_1C077960C();
    sub_1C07767AC();
  }
  else
  {
    v5 = MEMORY[0x1E0DEE9D8];
LABEL_11:
    sub_1C07767AC();
    sub_1C0899138(v5, v15, v16, v17, v18, v19, v20, v21, a1, SWORD2(a1), SBYTE6(a1), SHIBYTE(a1), a2, v24, v25, v26, v27, v28, v29,
      v30,
      v31);
  }
}

uint64_t sub_1C084A06C@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t *a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  double v11;
  double v12;
  uint64_t result;
  double v14;
  uint64_t v15;
  uint64_t v16;

  v7 = sub_1C106AFCC();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  sub_1C077962C();
  v9 = sub_1C106ADE0();
  sub_1C077E58C();
  MEMORY[0x1E0C80A78](v10);
  sub_1C07766EC();
  if ((a2 & 1) == 0)
  {
    sub_1C106AF18();
    sub_1C106ACD8();
    v12 = v11;
    result = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(v5, v9);
    v14 = v12 / (86400.0 / (double)a1);
    if ((~*(_QWORD *)&v14 & 0x7FF0000000000000) != 0)
    {
      if (v14 > -9.22337204e18)
      {
        if (v14 < 9.22337204e18)
        {
          v15 = (uint64_t)v14;
LABEL_7:
          *a3 = v15;
          return result;
        }
        goto LABEL_10;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v8 + 104))(v4, *MEMORY[0x1E0CB1198], v7);
  v16 = sub_1C106AFD8();
  result = (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 8))(v4, v7);
  v15 = v16 - 1;
  if (!__OFSUB__(v16, 1))
    goto LABEL_7;
LABEL_11:
  __break(1u);
  return result;
}

void sub_1C084A1F0(uint64_t a1@<X0>, uint64_t a2@<X3>, char a3@<W4>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v28;
  void *v30;

  v8 = sub_1C106AFCC();
  v24 = *(_QWORD *)(v8 - 8);
  v25 = v8;
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v9);
  sub_1C0778564();
  v12 = v11 - v10;
  sub_1C07ACF80((uint64_t *)&unk_1ED762690);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v13);
  sub_1C077864C();
  v14 = sub_1C106ADE0();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  sub_1C0778564();
  v18 = v17 - v16;
  v19 = sub_1C106AFE4();
  sub_1C077E58C();
  MEMORY[0x1E0C80A78](v20);
  sub_1C077962C();
  v21 = sub_1C106AFC0();
  if ((a3 & 1) == 0)
  {
    sub_1C106AF18();
    sub_1C106AD2C();
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v18, v14);
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v5, v19);
LABEL_8:
    sub_1C07757D0();
    return;
  }
  v22 = (void *)MEMORY[0x1C3BA79F4](v21);
  sub_1C084A06C(a2, 1, (uint64_t *)&v30);
  if (!v28)
  {
    objc_autoreleasePoolPop(v22);
    v22 = v30;
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v24 + 104))(v12, *MEMORY[0x1E0CB1130], v25);
    if (!__OFSUB__(a1, v22))
    {
      sub_1C106AF9C();
      (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v12, v25);
      if (sub_1C07B2D80(v6, 1, v14) == 1)
      {
        sub_1C077CDB4(v6);
        sub_1C084BABC();
        sub_1C0775810();
        *v23 = a1;
        swift_willThrow();
        sub_1C077CFC8();
      }
      else
      {
        sub_1C077CFC8();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 32))(a4, v6, v14);
      }
      goto LABEL_8;
    }
    __break(1u);
  }
  objc_autoreleasePoolPop(v22);
  __break(1u);
}

void sub_1C084A454(uint64_t a1, uint64_t a2, char a3)
{
  if ((a3 & 1) == 0)
    sub_1C1070E04();
  sub_1C1070E04();
  sub_1C0778534();
}

BOOL sub_1C084A48C(uint64_t a1, char a2, uint64_t a3, char a4)
{
  if ((a2 & 1) == 0)
  {
    if ((a4 & 1) == 0)
      return a1 == a3;
    return 0;
  }
  return (a4 & 1) != 0;
}

uint64_t sub_1C084A4B4(uint64_t a1, uint64_t a2)
{
  BOOL v3;
  char v7;

  v3 = a1 == 0x6144664F656D6974 && a2 == 0xE900000000000079;
  if (v3 || (sub_1C1070CB4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x656557664F796164 && a2 == 0xE90000000000006BLL)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v7 = sub_1C1070CB4();
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1C084A5B0(char a1)
{
  if ((a1 & 1) != 0)
    return 0x656557664F796164;
  else
    return 0x6144664F656D6974;
}

uint64_t sub_1C084A5EC(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 0x664F7265626D756ELL && a2 == 0xEC000000736E6942)
  {
    swift_bridgeObjectRelease();
    v4 = 0;
  }
  else
  {
    v3 = sub_1C1070CB4();
    swift_bridgeObjectRelease();
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_1C084A688()
{
  return 0x664F7265626D756ELL;
}

void sub_1C084A6A8(_QWORD *a1, uint64_t a2, char a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v7 = sub_1C07ACF80(&qword_1EF632018);
  v13 = *(_QWORD *)(v7 - 8);
  v14 = v7;
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v8);
  sub_1C077864C();
  v9 = sub_1C07ACF80(&qword_1EF632020);
  v12 = *(_QWORD *)(v9 - 8);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v10);
  sub_1C07766EC();
  sub_1C07ACF80(&qword_1EF632028);
  sub_1C077E58C();
  MEMORY[0x1E0C80A78](v11);
  sub_1C07795DC();
  sub_1C07A9480(a1, a1[3]);
  sub_1C084B9CC();
  sub_1C1070EB8();
  if ((a3 & 1) != 0)
  {
    sub_1C078888C();
    sub_1C077C160();
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v4, v14);
  }
  else
  {
    sub_1C084BA44();
    sub_1C077C160();
    sub_1C1070BAC();
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v5, v9);
  }
  sub_1C0794D38(*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
  sub_1C07757D0();
}

void sub_1C084A828(uint64_t a1, char a2)
{
  sub_1C077C06C();
  if ((a2 & 1) == 0)
    sub_1C1070E04();
  sub_1C1070E04();
  sub_1C077AE74();
  sub_1C0775804();
}

uint64_t sub_1C084A874(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v26 = sub_1C07ACF80(&qword_1ED762508);
  v23 = *(_QWORD *)(v26 - 8);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v3);
  sub_1C0778564();
  v25 = v5 - v4;
  v24 = sub_1C07ACF80(&qword_1ED7603A0);
  MEMORY[0x1E0C80A78](v24);
  sub_1C0778564();
  v6 = sub_1C07ACF80(&qword_1ED7603A8);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  sub_1C07795DC();
  v8 = (uint64_t)sub_1C07A9480(a1, a1[3]);
  sub_1C084B9CC();
  sub_1C1070E94();
  if (!v27)
  {
    v22 = v7;
    v9 = sub_1C1070AF8();
    v10 = *(_QWORD *)(v9 + 16);
    v11 = v6;
    if (v10)
    {
      v12 = v6;
      v13 = *(_BYTE *)(v9 + 32);
      sub_1C07D02BC(1, v10, v9, v9 + 32, 0, (2 * v10) | 1);
      v15 = v14;
      v17 = v16;
      swift_bridgeObjectRelease();
      if (v15 == v17 >> 1)
      {
        if ((v13 & 1) != 0)
        {
          sub_1C078888C();
          sub_1C07AD064();
          (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v25, v26);
          sub_1C077E6B4();
          sub_1C0794D38(*(uint64_t (**)(uint64_t, uint64_t))(v22 + 8));
          v8 = 0;
        }
        else
        {
          sub_1C084BA44();
          sub_1C07AD064();
          v8 = sub_1C1070AD4();
          sub_1C077AF9C();
          sub_1C077F634();
          sub_1C0794D38(*(uint64_t (**)(uint64_t, uint64_t))(v22 + 8));
        }
        goto LABEL_8;
      }
      v11 = v12;
    }
    v18 = sub_1C10707EC();
    sub_1C0775810();
    v20 = v19;
    sub_1C07ACF80(&qword_1ED752E80);
    *v20 = &unk_1E7A0E318;
    v8 = v1;
    sub_1C1070A44();
    sub_1C10707E0();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v18 - 8) + 104))(v20, *MEMORY[0x1E0DEC450], v18);
    swift_willThrow();
    sub_1C077E6B4();
    (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v1, v11);
  }
LABEL_8:
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)a1);
  return v8;
}

uint64_t sub_1C084ABEC()
{
  char *v0;

  return sub_1C084A5B0(*v0);
}

uint64_t sub_1C084ABF4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1C084A4B4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C084AC18()
{
  sub_1C084B9CC();
  return sub_1C1070EE8();
}

uint64_t sub_1C084AC40()
{
  sub_1C084B9CC();
  return sub_1C1070EF4();
}

uint64_t sub_1C084AC68()
{
  sub_1C084BA08();
  return sub_1C1070EE8();
}

uint64_t sub_1C084AC90()
{
  sub_1C084BA08();
  return sub_1C1070EF4();
}

uint64_t sub_1C084ACBC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1C084A5EC(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1C084ACE4()
{
  sub_1C084BA44();
  return sub_1C1070EE8();
}

uint64_t sub_1C084AD0C()
{
  sub_1C084BA44();
  return sub_1C1070EF4();
}

uint64_t sub_1C084AD34@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v5;

  result = sub_1C084A874(a1);
  if (!v2)
  {
    *(_QWORD *)a2 = result;
    *(_BYTE *)(a2 + 8) = v5 & 1;
  }
  return result;
}

void sub_1C084AD64(_QWORD *a1)
{
  uint64_t v1;

  sub_1C084A6A8(a1, *(_QWORD *)v1, *(_BYTE *)(v1 + 8));
}

void sub_1C084AD80()
{
  uint64_t v0;

  sub_1C084A828(*(_QWORD *)v0, *(_BYTE *)(v0 + 8));
}

void sub_1C084AD8C(uint64_t a1)
{
  uint64_t v1;

  sub_1C084A454(a1, *(_QWORD *)v1, *(_BYTE *)(v1 + 8));
}

uint64_t sub_1C084AD98()
{
  uint64_t v0;
  char v1;

  v1 = *(_BYTE *)(v0 + 8);
  sub_1C1070DF8();
  if ((v1 & 1) == 0)
    sub_1C1070E04();
  sub_1C1070E04();
  return sub_1C1070E4C();
}

BOOL sub_1C084ADF4(uint64_t a1, uint64_t a2)
{
  return sub_1C084A48C(*(_QWORD *)a1, *(_BYTE *)(a1 + 8), *(_QWORD *)a2, *(_BYTE *)(a2 + 8));
}

uint64_t sub_1C084AE10()
{
  uint64_t v0;
  uint64_t v1;

  v0 = sub_1C07786AC();
  return ((uint64_t (*)(uint64_t))((char *)sub_1C084AE34 + 4 * byte_1C107C24B[v1]))(v0);
}

uint64_t sub_1C084AE60()
{
  return 0x74536E6F69746F6DLL;
}

uint64_t sub_1C084AE80()
{
  unint64_t v0;

  v0 = sub_1C1070A2C();
  sub_1C07767AC();
  if (v0 >= 0xD)
    return 13;
  else
    return v0;
}

void sub_1C084AEC4(char *a1)
{
  sub_1C08C5B40(*a1);
}

void sub_1C084AED0()
{
  unsigned __int8 *v0;

  sub_1C0A53DE0(*v0);
}

void sub_1C084AED8(uint64_t a1)
{
  char *v1;

  sub_1C08C8C8C(a1, *v1);
}

void sub_1C084AEE0(uint64_t a1)
{
  unsigned __int8 *v1;

  sub_1C0A543C0(a1, *v1);
}

uint64_t sub_1C084AEE8@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1C084AE80();
  *a1 = result;
  return result;
}

void sub_1C084AF14(uint64_t *a1@<X8>)
{
  uint64_t v2;

  *a1 = sub_1C084AE10();
  a1[1] = v2;
  sub_1C0778534();
}

void sub_1C084AF38(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E79FC610;
}

uint64_t sub_1C084AF48()
{
  sub_1C084BA80();
  return sub_1C106FE8C();
}

uint64_t sub_1C084AFA4()
{
  sub_1C084BA80();
  return sub_1C106FE50();
}

uint64_t sub_1C084AFF0()
{
  return sub_1C07F52E0(&qword_1EF632000, &qword_1EF632008, MEMORY[0x1E0DEAF50]);
}

unint64_t sub_1C084B020()
{
  unint64_t result;

  result = qword_1ED7575E0;
  if (!qword_1ED7575E0)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C107C3A8, &unk_1E7A0E3A8);
    atomic_store(result, (unint64_t *)&qword_1ED7575E0);
  }
  return result;
}

unint64_t sub_1C084B060()
{
  unint64_t result;

  result = qword_1EF632010;
  if (!qword_1EF632010)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C107C3D0, &unk_1E7A0E318);
    atomic_store(result, (unint64_t *)&qword_1EF632010);
  }
  return result;
}

uint64_t sub_1C084B09C(uint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7;
  BOOL v8;

  if ((a2 & 0x2000000000000000) != 0)
    v7 = HIBYTE(a2) & 0xF;
  else
    v7 = a1 & 0xFFFFFFFFFFFFLL;
  v8 = a1 == a5 && a2 == a6;
  if (v8 && !(a3 >> 16) && v7 == a4 >> 16)
    return 1;
  else
    return sub_1C1070BF4() & 1;
}

void sub_1C084B100(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  int v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  char *v34;
  char *v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  BOOL v47;
  unint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  BOOL v57;
  uint64_t v58;
  char v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  BOOL v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  char *v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  unint64_t v80;
  _QWORD *v81;
  uint64_t *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  _QWORD *v86;
  BOOL v87;
  uint64_t v88;
  unint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  unint64_t v94;
  uint64_t v95;
  uint64_t *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  char *v101;

  v3 = a1[1];
  v4 = sub_1C1070BE8();
  if (v4 >= v3)
  {
    if ((v3 & 0x8000000000000000) == 0)
    {
      if (v3)
        sub_1C084B764(0, v3, 1, a1);
      return;
    }
    goto LABEL_144;
  }
  v5 = v4;
  sub_1C08CBE40(v3 / 2);
  v98 = v6;
  v99 = v3;
  v100 = v7;
  v96 = a1;
  if (v3 <= 0)
  {
    v101 = (char *)MEMORY[0x1E0DEE9D8];
    v33 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
LABEL_110:
    if (v33 < 2)
    {
LABEL_121:
      swift_bridgeObjectRelease();
      if (v3 >= -1)
      {
        *(_QWORD *)(v98 + 16) = 0;
        swift_bridgeObjectRelease();
        return;
      }
      goto LABEL_149;
    }
    v88 = *v96;
    while (1)
    {
      v89 = v33 - 2;
      if (v33 < 2)
        break;
      if (!v88)
        goto LABEL_153;
      v90 = v101;
      v91 = *(_QWORD *)&v101[16 * v89 + 32];
      v92 = *(_QWORD *)&v101[16 * v33 + 24];
      sub_1C084B828((char *)(v88 + 16 * v91), (char *)(v88 + 16 * *(_QWORD *)&v101[16 * v33 + 16]), v88 + 16 * v92, v100);
      if (v1)
        goto LABEL_106;
      if (v92 < v91)
        goto LABEL_139;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v90 = sub_1C0861BC0();
      if (v89 >= *((_QWORD *)v90 + 2))
        goto LABEL_140;
      v93 = &v90[16 * v89 + 32];
      *(_QWORD *)v93 = v91;
      *((_QWORD *)v93 + 1) = v92;
      v94 = *((_QWORD *)v90 + 2);
      if (v33 > v94)
        goto LABEL_141;
      memmove(&v90[16 * v33 + 16], &v90[16 * v33 + 32], 16 * (v94 - v33));
      v101 = v90;
      *((_QWORD *)v90 + 2) = v94 - 1;
      v33 = v94 - 1;
      v3 = v99;
      if (v94 <= 2)
        goto LABEL_121;
    }
LABEL_138:
    __break(1u);
LABEL_139:
    __break(1u);
LABEL_140:
    __break(1u);
LABEL_141:
    __break(1u);
LABEL_142:
    __break(1u);
LABEL_143:
    __break(1u);
LABEL_144:
    __break(1u);
LABEL_145:
    __break(1u);
LABEL_146:
    __break(1u);
LABEL_147:
    __break(1u);
LABEL_148:
    __break(1u);
LABEL_149:
    __break(1u);
LABEL_150:
    __break(1u);
LABEL_151:
    __break(1u);
LABEL_152:
    __break(1u);
LABEL_153:
    __break(1u);
    return;
  }
  v97 = v5;
  v8 = 0;
  v9 = *a1;
  v95 = *a1 + 8;
  v101 = (char *)MEMORY[0x1E0DEE9D8];
  while (1)
  {
    v10 = v8++;
    if (v8 >= v3)
      goto LABEL_32;
    v11 = (uint64_t *)(v9 + 16 * v8);
    v12 = *v11;
    v13 = v11[1];
    v14 = (_QWORD *)(v9 + 16 * v10);
    if (v12 == *v14 && v13 == v14[1])
    {
      v17 = v10 + 2;
      if (v10 + 2 >= v3)
        goto LABEL_31;
      v16 = 0;
LABEL_13:
      v18 = (_QWORD *)(v95 + 16 * v17);
      do
      {
        v19 = (_QWORD *)(v9 + 16 * v8);
        if (*(v18 - 1) == *v19 && *v18 == v19[1])
        {
          if ((v16 & 1) != 0)
            goto LABEL_24;
        }
        else if (((v16 ^ sub_1C1070CB4()) & 1) != 0)
        {
          goto LABEL_23;
        }
        v18 += 2;
        v21 = v17 + 1;
        v8 = v17;
        v17 = v21;
      }
      while (v21 < v3);
      v17 = v21;
      goto LABEL_23;
    }
    v16 = sub_1C1070CB4();
    v17 = v10 + 2;
    if (v10 + 2 < v3)
      goto LABEL_13;
LABEL_23:
    v8 = v17;
    if ((v16 & 1) == 0)
      goto LABEL_32;
LABEL_24:
    if (v17 < v10)
      goto LABEL_148;
    if (v10 < v17)
    {
      v22 = 16 * v17;
      v23 = 16 * v10;
      v24 = v17;
      v25 = v10;
      do
      {
        if (v25 != --v24)
        {
          if (!v9)
            goto LABEL_152;
          v26 = v9 + v22;
          v27 = *(_QWORD *)(v9 + v23);
          v28 = *(_QWORD *)(v9 + v23 + 8);
          *(_OWORD *)(v9 + v23) = *(_OWORD *)(v9 + v22 - 16);
          *(_QWORD *)(v26 - 16) = v27;
          *(_QWORD *)(v26 - 8) = v28;
        }
        ++v25;
        v22 -= 16;
        v23 += 16;
      }
      while (v25 < v24);
    }
LABEL_31:
    v8 = v17;
LABEL_32:
    if (v8 >= v3)
      goto LABEL_41;
    if (__OFSUB__(v8, v10))
      goto LABEL_143;
    if (v8 - v10 >= v97)
      goto LABEL_41;
    if (__OFADD__(v10, v97))
      goto LABEL_146;
    if (v10 + v97 >= v3)
      v29 = v3;
    else
      v29 = v10 + v97;
    if (v29 < v10)
      goto LABEL_147;
    if (v8 == v29)
    {
LABEL_41:
      v30 = v101;
    }
    else
    {
      v81 = (_QWORD *)(v9 + 16 * v8);
      v30 = v101;
      do
      {
        v82 = (uint64_t *)(v9 + 16 * v8);
        v83 = *v82;
        v84 = v82[1];
        v85 = v10;
        v86 = v81;
        do
        {
          v87 = v83 == *(v86 - 2) && v84 == *(v86 - 1);
          if (v87 || (sub_1C1070CB4() & 1) == 0)
            break;
          if (!v9)
            goto LABEL_150;
          v83 = *v86;
          v84 = v86[1];
          *(_OWORD *)v86 = *((_OWORD *)v86 - 1);
          *(v86 - 1) = v84;
          *(v86 - 2) = v83;
          v86 -= 2;
          ++v85;
        }
        while (v8 != v85);
        ++v8;
        v81 += 2;
      }
      while (v8 != v29);
      v8 = v29;
    }
    if (v8 < v10)
      goto LABEL_142;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v30 = sub_1C0861AD0(0, *((_QWORD *)v30 + 2) + 1, 1, v30);
    v32 = *((_QWORD *)v30 + 2);
    v31 = *((_QWORD *)v30 + 3);
    v33 = v32 + 1;
    if (v32 >= v31 >> 1)
      v30 = sub_1C0861AD0((char *)(v31 > 1), v32 + 1, 1, v30);
    *((_QWORD *)v30 + 2) = v33;
    v34 = v30 + 32;
    v35 = &v30[16 * v32 + 32];
    *(_QWORD *)v35 = v10;
    *((_QWORD *)v35 + 1) = v8;
    v101 = v30;
    if (v32)
      break;
    v33 = 1;
LABEL_90:
    v3 = v99;
    if (v8 >= v99)
      goto LABEL_110;
  }
  while (1)
  {
    v36 = v33 - 1;
    if (v33 >= 4)
    {
      v41 = &v34[16 * v33];
      v42 = *((_QWORD *)v41 - 8);
      v43 = *((_QWORD *)v41 - 7);
      v47 = __OFSUB__(v43, v42);
      v44 = v43 - v42;
      if (v47)
        goto LABEL_127;
      v46 = *((_QWORD *)v41 - 6);
      v45 = *((_QWORD *)v41 - 5);
      v47 = __OFSUB__(v45, v46);
      v39 = v45 - v46;
      v40 = v47;
      if (v47)
        goto LABEL_128;
      v48 = v33 - 2;
      v49 = &v34[16 * v33 - 32];
      v51 = *(_QWORD *)v49;
      v50 = *((_QWORD *)v49 + 1);
      v47 = __OFSUB__(v50, v51);
      v52 = v50 - v51;
      if (v47)
        goto LABEL_129;
      v47 = __OFADD__(v39, v52);
      v53 = v39 + v52;
      if (v47)
        goto LABEL_131;
      if (v53 >= v44)
      {
        v71 = &v34[16 * v36];
        v73 = *(_QWORD *)v71;
        v72 = *((_QWORD *)v71 + 1);
        v47 = __OFSUB__(v72, v73);
        v74 = v72 - v73;
        if (v47)
          goto LABEL_137;
        v64 = v39 < v74;
        goto LABEL_79;
      }
    }
    else
    {
      if (v33 != 3)
      {
        v65 = *((_QWORD *)v30 + 4);
        v66 = *((_QWORD *)v30 + 5);
        v47 = __OFSUB__(v66, v65);
        v58 = v66 - v65;
        v59 = v47;
        goto LABEL_73;
      }
      v38 = *((_QWORD *)v30 + 4);
      v37 = *((_QWORD *)v30 + 5);
      v47 = __OFSUB__(v37, v38);
      v39 = v37 - v38;
      v40 = v47;
    }
    if ((v40 & 1) != 0)
      goto LABEL_130;
    v48 = v33 - 2;
    v54 = &v34[16 * v33 - 32];
    v56 = *(_QWORD *)v54;
    v55 = *((_QWORD *)v54 + 1);
    v57 = __OFSUB__(v55, v56);
    v58 = v55 - v56;
    v59 = v57;
    if (v57)
      goto LABEL_132;
    v60 = &v34[16 * v36];
    v62 = *(_QWORD *)v60;
    v61 = *((_QWORD *)v60 + 1);
    v47 = __OFSUB__(v61, v62);
    v63 = v61 - v62;
    if (v47)
      goto LABEL_134;
    if (__OFADD__(v58, v63))
      goto LABEL_136;
    if (v58 + v63 >= v39)
    {
      v64 = v39 < v63;
LABEL_79:
      if (v64)
        v36 = v48;
      goto LABEL_81;
    }
LABEL_73:
    if ((v59 & 1) != 0)
      goto LABEL_133;
    v67 = &v34[16 * v36];
    v69 = *(_QWORD *)v67;
    v68 = *((_QWORD *)v67 + 1);
    v47 = __OFSUB__(v68, v69);
    v70 = v68 - v69;
    if (v47)
      goto LABEL_135;
    if (v70 < v58)
      goto LABEL_90;
LABEL_81:
    v75 = v36 - 1;
    if (v36 - 1 >= v33)
    {
      __break(1u);
LABEL_124:
      __break(1u);
LABEL_125:
      __break(1u);
LABEL_126:
      __break(1u);
LABEL_127:
      __break(1u);
LABEL_128:
      __break(1u);
LABEL_129:
      __break(1u);
LABEL_130:
      __break(1u);
LABEL_131:
      __break(1u);
LABEL_132:
      __break(1u);
LABEL_133:
      __break(1u);
LABEL_134:
      __break(1u);
LABEL_135:
      __break(1u);
LABEL_136:
      __break(1u);
LABEL_137:
      __break(1u);
      goto LABEL_138;
    }
    if (!v9)
      goto LABEL_151;
    v76 = &v34[16 * v75];
    v77 = *(_QWORD *)v76;
    v78 = &v34[16 * v36];
    v79 = *((_QWORD *)v78 + 1);
    sub_1C084B828((char *)(v9 + 16 * *(_QWORD *)v76), (char *)(v9 + 16 * *(_QWORD *)v78), v9 + 16 * v79, v100);
    if (v1)
      break;
    if (v79 < v77)
      goto LABEL_124;
    if (v36 > *((_QWORD *)v101 + 2))
      goto LABEL_125;
    *(_QWORD *)v76 = v77;
    *(_QWORD *)&v34[16 * v75 + 8] = v79;
    v80 = *((_QWORD *)v101 + 2);
    if (v36 >= v80)
      goto LABEL_126;
    v30 = v101;
    v33 = v80 - 1;
    memmove(&v34[16 * v36], v78 + 16, 16 * (v80 - 1 - v36));
    *((_QWORD *)v101 + 2) = v80 - 1;
    if (v80 <= 2)
      goto LABEL_90;
  }
LABEL_106:
  swift_bridgeObjectRelease();
  if (v99 < -1)
    goto LABEL_145;
  *(_QWORD *)(v98 + 16) = 0;
  swift_bridgeObjectRelease();
}

uint64_t sub_1C084B764(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;

  if (a3 != a2)
  {
    v4 = a3;
    v6 = result;
    v7 = *a4;
    v8 = *a4 + 16 * a3;
    while (2)
    {
      v9 = (uint64_t *)(v7 + 16 * v4);
      result = *v9;
      v10 = v9[1];
      v11 = v6;
      v12 = (uint64_t *)v8;
      do
      {
        if (result == *(v12 - 2) && v10 == *(v12 - 1))
          break;
        result = sub_1C1070CB4();
        if ((result & 1) == 0)
          break;
        if (!v7)
        {
          __break(1u);
          return result;
        }
        result = *v12;
        v10 = v12[1];
        *(_OWORD *)v12 = *((_OWORD *)v12 - 1);
        *(v12 - 1) = v10;
        *(v12 - 2) = result;
        v12 -= 2;
        ++v11;
      }
      while (v4 != v11);
      ++v4;
      v8 += 16;
      if (v4 != a2)
        continue;
      break;
    }
  }
  return result;
}

uint64_t sub_1C084B828(char *a1, char *a2, unint64_t a3, char *a4)
{
  char *v4;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  BOOL v14;
  char *v15;
  char *v18;
  char *v19;
  char *v20;
  BOOL v21;
  BOOL v22;
  BOOL v23;

  v4 = a4;
  v6 = a2;
  v7 = a1;
  v8 = a2 - a1;
  v9 = (a2 - a1) / 16;
  v10 = a3 - (_QWORD)a2;
  v11 = (uint64_t)(a3 - (_QWORD)a2) / 16;
  if (v9 >= v11)
  {
    sub_1C079E018(a2, (uint64_t)(a3 - (_QWORD)a2) / 16, a4);
    v12 = (unint64_t)&v4[16 * v11];
    if (v7 >= v6 || v10 < 16)
      goto LABEL_47;
    v18 = (char *)(a3 - 16);
    while (1)
    {
      v19 = v18 + 16;
      v20 = (char *)(v12 - 16);
      v21 = *(_QWORD *)(v12 - 16) == *((_QWORD *)v6 - 2) && *(_QWORD *)(v12 - 8) == *((_QWORD *)v6 - 1);
      if (v21 || (sub_1C1070CB4() & 1) == 0)
      {
        v23 = v19 != (char *)v12 || (unint64_t)v18 >= v12;
        v12 -= 16;
        if (!v23)
          goto LABEL_43;
      }
      else
      {
        v22 = v19 != v6 || v18 >= v6;
        v20 = v6 - 16;
        v6 -= 16;
        if (!v22)
          goto LABEL_43;
      }
      *(_OWORD *)v18 = *(_OWORD *)v20;
LABEL_43:
      v18 -= 16;
      if (v6 <= v7 || v12 <= (unint64_t)v4)
        goto LABEL_47;
    }
  }
  sub_1C079E018(a1, (a2 - a1) / 16, a4);
  v12 = (unint64_t)&v4[16 * v9];
  if ((unint64_t)v6 < a3 && v8 >= 16)
  {
    while (1)
    {
      v14 = *(_QWORD *)v6 == *(_QWORD *)v4 && *((_QWORD *)v6 + 1) == *((_QWORD *)v4 + 1);
      if (!v14 && (sub_1C1070CB4() & 1) != 0)
        break;
      v15 = v4;
      v14 = v7 == v4;
      v4 += 16;
      if (!v14)
        goto LABEL_15;
LABEL_16:
      v7 += 16;
      if ((unint64_t)v4 >= v12 || (unint64_t)v6 >= a3)
        goto LABEL_21;
    }
    v15 = v6;
    v14 = v7 == v6;
    v6 += 16;
    if (v14)
      goto LABEL_16;
LABEL_15:
    *(_OWORD *)v7 = *(_OWORD *)v15;
    goto LABEL_16;
  }
LABEL_21:
  v6 = v7;
LABEL_47:
  sub_1C079E018(v4, (uint64_t)(v12 - (_QWORD)v4) / 16, v6);
  return 1;
}

unint64_t sub_1C084B9CC()
{
  unint64_t result;

  result = qword_1ED75FC28;
  if (!qword_1ED75FC28)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C107C7CC, &type metadata for TimeBasedContextAspect.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED75FC28);
  }
  return result;
}

unint64_t sub_1C084BA08()
{
  unint64_t result;

  result = qword_1ED75FC40;
  if (!qword_1ED75FC40)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C107C77C, &type metadata for TimeBasedContextAspect.DayOfWeekCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED75FC40);
  }
  return result;
}

unint64_t sub_1C084BA44()
{
  unint64_t result;

  result = qword_1ED75FC10;
  if (!qword_1ED75FC10)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C107C72C, &type metadata for TimeBasedContextAspect.TimeOfDayCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED75FC10);
  }
  return result;
}

unint64_t sub_1C084BA80()
{
  unint64_t result;

  result = qword_1ED75FAA8;
  if (!qword_1ED75FAA8)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C107C330, &unk_1E7A0E3A8);
    atomic_store(result, (unint64_t *)&qword_1ED75FAA8);
  }
  return result;
}

unint64_t sub_1C084BABC()
{
  unint64_t result;

  result = qword_1EF632030;
  if (!qword_1EF632030)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C107C6EC, &unk_1E7A0E438);
    atomic_store(result, (unint64_t *)&qword_1EF632030);
  }
  return result;
}

uint64_t sub_1C084BAF8(uint64_t a1, char a2)
{
  uint64_t result;

  if ((a2 & 0xFE) == 2)
    return swift_bridgeObjectRelease();
  return result;
}

void type metadata accessor for TimeBasedContextAspect.TimeBasedContextAspectError()
{
  sub_1C0779604();
}

uint64_t storeEnumTagSinglePayload for TimeBasedContextAspect.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1C084BB64 + 4 * byte_1C107C25D[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1C084BB98 + 4 * byte_1C107C258[v4]))();
}

uint64_t sub_1C084BB98(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C084BBA0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C084BBA8);
  return result;
}

uint64_t sub_1C084BBB4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C084BBBCLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1C084BBC0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C084BBC8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for TimeBasedContextAspect.CodingKeys()
{
  return &type metadata for TimeBasedContextAspect.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for TimeBasedContextAspect.TimeOfDayCodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1C084BC24 + 4 * byte_1C107C262[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1C084BC44 + 4 * byte_1C107C267[v4]))();
}

_BYTE *sub_1C084BC24(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1C084BC44(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1C084BC4C(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1C084BC54(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1C084BC5C(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1C084BC64(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for TimeBasedContextAspect.TimeOfDayCodingKeys()
{
  return &type metadata for TimeBasedContextAspect.TimeOfDayCodingKeys;
}

ValueMetadata *type metadata accessor for TimeBasedContextAspect.DayOfWeekCodingKeys()
{
  return &type metadata for TimeBasedContextAspect.DayOfWeekCodingKeys;
}

uint64_t sub_1C084BC90(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v4;

  v3 = *(_QWORD *)a2;
  v4 = *(_BYTE *)(a2 + 8);
  sub_1C084BCD4(*(_QWORD *)a2, v4);
  *(_QWORD *)a1 = v3;
  *(_BYTE *)(a1 + 8) = v4;
  return a1;
}

uint64_t sub_1C084BCD4(uint64_t a1, char a2)
{
  uint64_t result;

  if ((a2 & 0xFE) == 2)
    return _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  return result;
}

uint64_t sub_1C084BCE8(uint64_t a1)
{
  return sub_1C084BAF8(*(_QWORD *)a1, *(_BYTE *)(a1 + 8));
}

uint64_t sub_1C084BCF8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v4;
  uint64_t v5;
  char v6;

  v3 = *(_QWORD *)a2;
  v4 = *(_BYTE *)(a2 + 8);
  sub_1C084BCD4(*(_QWORD *)a2, v4);
  v5 = *(_QWORD *)a1;
  *(_QWORD *)a1 = v3;
  v6 = *(_BYTE *)(a1 + 8);
  *(_BYTE *)(a1 + 8) = v4;
  sub_1C084BAF8(v5, v6);
  return a1;
}

uint64_t sub_1C084BD48(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  char v5;

  v3 = *(_BYTE *)(a2 + 8);
  v4 = *(_QWORD *)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v5 = *(_BYTE *)(a1 + 8);
  *(_BYTE *)(a1 + 8) = v3;
  sub_1C084BAF8(v4, v5);
  return a1;
}

uint64_t sub_1C084BD84(uint64_t a1, unsigned int a2)
{
  int v2;
  unsigned int v3;

  if (a2)
  {
    if (a2 >= 0xFC && *(_BYTE *)(a1 + 9))
    {
      v2 = *(_DWORD *)a1 + 251;
    }
    else
    {
      v3 = *(unsigned __int8 *)(a1 + 8);
      if (v3 <= 4)
        v2 = -1;
      else
        v2 = v3 ^ 0xFF;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t sub_1C084BDC4(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFB)
  {
    *(_BYTE *)(result + 8) = 0;
    *(_QWORD *)result = a2 - 252;
    if (a3 >= 0xFC)
      *(_BYTE *)(result + 9) = 1;
  }
  else
  {
    if (a3 >= 0xFC)
      *(_BYTE *)(result + 9) = 0;
    if (a2)
      *(_BYTE *)(result + 8) = -(char)a2;
  }
  return result;
}

uint64_t sub_1C084BE08(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 8) <= 3u)
    return *(unsigned __int8 *)(a1 + 8);
  else
    return (*(_DWORD *)a1 + 4);
}

uint64_t sub_1C084BE20(uint64_t result, unsigned int a2)
{
  if (a2 >= 4)
  {
    *(_QWORD *)result = a2 - 4;
    LOBYTE(a2) = 4;
  }
  *(_BYTE *)(result + 8) = a2;
  return result;
}

void type metadata accessor for BehaviorFeature()
{
  sub_1C0779604();
}

unint64_t sub_1C084BE48()
{
  unint64_t result;

  result = qword_1EF632038;
  if (!qword_1EF632038)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C107C60C, &type metadata for TimeBasedContextAspect.TimeOfDayCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF632038);
  }
  return result;
}

unint64_t sub_1C084BE88()
{
  unint64_t result;

  result = qword_1EF632040;
  if (!qword_1EF632040)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C107C6C4, &type metadata for TimeBasedContextAspect.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF632040);
  }
  return result;
}

unint64_t sub_1C084BEC8()
{
  unint64_t result;

  result = qword_1ED75FC20;
  if (!qword_1ED75FC20)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C107C57C, &type metadata for TimeBasedContextAspect.TimeOfDayCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED75FC20);
  }
  return result;
}

unint64_t sub_1C084BF08()
{
  unint64_t result;

  result = qword_1ED75FC18;
  if (!qword_1ED75FC18)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C107C5A4, &type metadata for TimeBasedContextAspect.TimeOfDayCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED75FC18);
  }
  return result;
}

unint64_t sub_1C084BF48()
{
  unint64_t result;

  result = qword_1ED75FC50;
  if (!qword_1ED75FC50)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C107C52C, &type metadata for TimeBasedContextAspect.DayOfWeekCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED75FC50);
  }
  return result;
}

unint64_t sub_1C084BF88()
{
  unint64_t result;

  result = qword_1ED75FC48;
  if (!qword_1ED75FC48)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C107C554, &type metadata for TimeBasedContextAspect.DayOfWeekCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED75FC48);
  }
  return result;
}

unint64_t sub_1C084BFC8()
{
  unint64_t result;

  result = qword_1ED75FC38;
  if (!qword_1ED75FC38)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C107C634, &type metadata for TimeBasedContextAspect.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED75FC38);
  }
  return result;
}

unint64_t sub_1C084C008()
{
  unint64_t result;

  result = qword_1ED75FC30;
  if (!qword_1ED75FC30)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C107C65C, &type metadata for TimeBasedContextAspect.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED75FC30);
  }
  return result;
}

unint64_t sub_1C084C048()
{
  unint64_t result;

  result = qword_1ED757298[0];
  if (!qword_1ED757298[0])
  {
    result = MEMORY[0x1C3BA8174](&unk_1C107C504, &unk_1E7A0E608);
    atomic_store(result, qword_1ED757298);
  }
  return result;
}

uint64_t *sub_1C084C088(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t **v6;
  uint64_t v7;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  _QWORD v29[3];
  uint64_t v30;
  uint64_t v31;
  _BYTE v32[24];
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v7 = v2;
  type metadata accessor for Configuration();
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v10);
  sub_1C077962C();
  if (qword_1ED7549C0 != -1)
    swift_once();
  v11 = (uint64_t *)qword_1ED78CE20;
  swift_retain();
  sub_1C0CBD818();
  swift_release();
  if (v3)
  {
    _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0(a2);
    sub_1C078D09C(a1);
  }
  else
  {
    sub_1C078E3E0(a1, v4);
    type metadata accessor for KeyValueStore();
    sub_1C077B5BC();
    v27 = KeyValueStore.init(config:domain:)(v4, 1413829954, 0xE400000000000000);
    sub_1C0784AC0(a2, (uint64_t)v32);
    sub_1C0839E6C();
    v25 = v13;
    sub_1C08363FC(a2, v29);
    v14 = v33;
    v26 = v34;
    v15 = sub_1C079D180((uint64_t)v32, v33);
    v28 = &v21;
    MEMORY[0x1E0C80A78](v15);
    sub_1C07766EC();
    (*(void (**)(uint64_t **))(v16 + 16))(v6);
    v17 = v30;
    v23 = v31;
    v18 = sub_1C079D180((uint64_t)v29, v30);
    v24 = &v21;
    MEMORY[0x1E0C80A78](v18);
    sub_1C077864C();
    (*(void (**)(uint64_t))(v19 + 16))(v5);
    v22 = v7;
    v35 = v25;
    v20 = type metadata accessor for BehaviorDatabaseEventTracker();
    swift_retain();
    v11 = sub_1C0851E54(v6, (uint64_t)&v35, v5, v27, v22, v14, v17, v20, v26, v23, (uint64_t)&off_1E7A0D6A8);
    _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v29);
    swift_release();
    _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v32);
    swift_release();
    _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0(a2);
    sub_1C078D09C(a1);
  }
  return v11;
}

id sub_1C084C318(uint64_t a1, uint64_t a2)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int64_t v7;
  int64_t v8;
  uint64_t v9;
  int64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  double v19;
  double v20;
  uint64_t v21;
  char v22;
  id v23;
  unint64_t v24;
  char v25;
  char v26;
  id v27;
  unint64_t v28;
  char v29;
  unint64_t v30;
  unint64_t v31;
  char v32;
  uint64_t v33;
  void *v34;
  uint64_t *v35;
  uint64_t v36;
  BOOL v37;
  uint64_t v38;
  id v39;
  id result;
  uint64_t v41;
  NSObject *v42;
  os_log_type_t v43;
  uint8_t *v44;
  uint64_t v45;
  unint64_t v46;
  char v47;
  uint64_t v48;
  int64_t v49;
  _QWORD *v50;

  sub_1C07D97D4();
  v3 = (_QWORD *)sub_1C106F97C();
  v48 = a2 + 56;
  v4 = 1 << *(_BYTE *)(a2 + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(a2 + 56);
  v49 = (unint64_t)(v4 + 63) >> 6;
  sub_1C07767B4();
  v7 = 0;
  while (v6)
  {
    v6 &= v6 - 1;
LABEL_20:
    v11 = sub_1C085248C();
    sub_1C084BCD4(v11, v12);
    v13 = sub_1C085248C();
    sub_1C0849454(v13, v14);
    v16 = v15;
    v18 = v17;
    sub_1C085248C();
    sub_1C084C864();
    v20 = v19;
    v21 = sub_1C085248C();
    sub_1C084BAF8(v21, v22);
    v23 = objc_msgSend((id)objc_opt_self(), sel_featureValueWithDouble_, v20);
    if (v23)
    {
      v27 = v23;
      swift_isUniquelyReferenced_nonNull_native();
      v50 = v3;
      v28 = sub_1C077F63C();
      v47 = v29;
      if (__OFADD__(v3[2], (v29 & 1) == 0))
        goto LABEL_39;
      v30 = v28;
      sub_1C07ACF80(&qword_1ED758E28);
      if ((sub_1C107090C() & 1) != 0)
      {
        v31 = sub_1C077D774(v16, v18);
        if ((v47 & 1) != (v32 & 1))
        {
          result = (id)sub_1C1070D44();
          __break(1u);
          return result;
        }
        v30 = v31;
      }
      v3 = v50;
      if ((v47 & 1) != 0)
      {
        v33 = v50[7];

        *(_QWORD *)(v33 + 8 * v30) = v27;
      }
      else
      {
        v50[(v30 >> 6) + 8] |= 1 << v30;
        v35 = (uint64_t *)(v3[6] + 16 * v30);
        *v35 = v16;
        v35[1] = v18;
        *(_QWORD *)(v3[7] + 8 * v30) = v27;
        v36 = v3[2];
        v37 = __OFADD__(v36, 1);
        v38 = v36 + 1;
        if (v37)
          goto LABEL_40;
        v3[2] = v38;
        _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      }
LABEL_32:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      v24 = sub_1C077F63C();
      v26 = v25;
      swift_bridgeObjectRelease();
      if ((v26 & 1) != 0)
      {
        swift_isUniquelyReferenced_nonNull_native();
        v50 = v3;
        sub_1C07ACF80(&qword_1ED758E28);
        sub_1C107090C();
        swift_bridgeObjectRelease();
        v34 = *(void **)(v3[7] + 8 * v24);
        sub_1C1070924();

        goto LABEL_32;
      }
      swift_bridgeObjectRelease();
    }
  }
  v8 = v7 + 1;
  if (__OFADD__(v7, 1))
  {
    __break(1u);
    goto LABEL_38;
  }
  if (v8 >= v49)
    goto LABEL_33;
  v9 = *(_QWORD *)(v48 + 8 * v8);
  ++v7;
  if (v9)
    goto LABEL_19;
  v7 = v8 + 1;
  if (v8 + 1 >= v49)
    goto LABEL_33;
  v9 = *(_QWORD *)(v48 + 8 * v7);
  if (v9)
    goto LABEL_19;
  v7 = v8 + 2;
  if (v8 + 2 >= v49)
    goto LABEL_33;
  v9 = *(_QWORD *)(v48 + 8 * v7);
  if (v9)
  {
LABEL_19:
    v6 = (v9 - 1) & v9;
    goto LABEL_20;
  }
  v10 = v8 + 3;
  if (v10 >= v49)
  {
LABEL_33:
    swift_release();
    sub_1C089BD40();
    swift_bridgeObjectRelease();
    v39 = objc_allocWithZone(MEMORY[0x1E0C9E8F8]);
    return sub_1C0945AE0();
  }
  v9 = *(_QWORD *)(v48 + 8 * v10);
  if (v9)
  {
    v7 = v10;
    goto LABEL_19;
  }
  while (1)
  {
    v7 = v10 + 1;
    if (__OFADD__(v10, 1))
      break;
    if (v7 >= v49)
      goto LABEL_33;
    v9 = *(_QWORD *)(v48 + 8 * v7);
    ++v10;
    if (v9)
      goto LABEL_19;
  }
LABEL_38:
  __break(1u);
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
  swift_once();
  v41 = sub_1C077585C();
  sub_1C079E000(v41, (uint64_t)qword_1ED78D800);
  sub_1C077CF64();
  sub_1C077CF64();
  v42 = sub_1C106F538();
  v43 = sub_1C107039C();
  if (os_log_type_enabled(v42, v43))
  {
    v44 = (uint8_t *)sub_1C0775854();
    v50 = (_QWORD *)sub_1C0775854();
    *(_DWORD *)v44 = 136315138;
    sub_1C077F64C();
    v45 = sub_1C1070D74();
    sub_1C0788DAC(v45, v46, (uint64_t *)&v50);
    sub_1C10705AC();
    sub_1C077960C();
    sub_1C077E6C8();
    sub_1C077E6C8();
    _os_log_impl(&dword_1C0771000, v42, v43, "BehaviorFeaturizer: Failed to create MLDictionaryFeatureProvider - %s", v44, 0xCu);
    sub_1C0778610();
    sub_1C0776778();
  }
  sub_1C077E6C8();
  sub_1C077E6C8();
  sub_1C077E6C8();

  return 0;
}

void sub_1C084C864()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD v17[8];
  int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD v22[5];
  unsigned __int8 v23;

  sub_1C0776838();
  v19 = v0;
  v2 = v1;
  v21 = v3;
  sub_1C07DFF44(v4, (uint64_t)v22);
  v17[3] = v22[0];
  v17[4] = v22[1];
  v17[5] = v22[2];
  v17[6] = v22[3];
  v17[7] = v22[4];
  v18 = v23;
  sub_1C07ACF80((uint64_t *)&unk_1ED762690);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v5);
  sub_1C077AED0();
  v17[2] = v6;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v7);
  v17[1] = (char *)v17 - v8;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v9);
  v10 = sub_1C106D6CC();
  MEMORY[0x1E0C80A78](v10);
  MEMORY[0x1E0C80A78](v11);
  MEMORY[0x1E0C80A78](v12);
  MEMORY[0x1E0C80A78](v13);
  MEMORY[0x1E0C80A78](v14);
  sub_1C07A2FB0();
  MEMORY[0x1E0C80A78](v15);
  MEMORY[0x1E0C80A78](v16);
  v20 = v2;
  __asm { BR              X10 }
}

void sub_1C084CA48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v11 = v8;
  sub_1C0824E00(a1, a2, a3, a4, a5, a6, a7, a8);
  sub_1C084FA68(*(_QWORD *)(v10 - 272));
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v9, a1);
  swift_getObjectType();
  sub_1C08524A0();
  sub_1C0854588();
  sub_1C077CFD8();
  swift_unknownObjectRelease();
  sub_1C078D424();
}

uint64_t sub_1C084D4DC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  v2 = sub_1C077AE98();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C106AD68();
  sub_1C084D578(a1, (uint64_t)v5);
  return sub_1C078303C((uint64_t)v5, *(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
}

uint64_t sub_1C084D578(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t result;
  uint64_t v21;
  void (*v22)(char *, uint64_t, uint64_t);
  uint64_t v23;
  char v24;
  void (*v25)(char *, char *, uint64_t);
  void (*v26)(char *, uint64_t, uint64_t);
  char *v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  __int128 v43[2];
  uint64_t v44;

  v42 = a2;
  v40 = a1;
  sub_1C07ACF80((uint64_t *)&unk_1ED762690);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v5);
  v6 = sub_1C0797000();
  v41 = *(_QWORD *)(v6 - 8);
  sub_1C07757C4();
  v8 = MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  sub_1C07A2FB0();
  v12 = MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v34 - v13;
  MEMORY[0x1E0C80A78](v12);
  v16 = (char *)&v34 - v15;
  v17 = *(_QWORD *)(v2 + 160);
  v39 = v4;
  v18 = v17;
  v19 = v44;
  result = sub_1C07F7D44();
  if (!v19)
  {
    v35 = v3;
    v36 = v18;
    v44 = 0;
    v37 = v10;
    v38 = v16;
    v21 = v41;
    v22 = *(void (**)(char *, uint64_t, uint64_t))(v41 + 16);
    v22(v14, v42, v6);
    v23 = v39;
    sub_1C077AEEC(v39, 1, v6);
    if (v24)
    {
      v25 = *(void (**)(char *, char *, uint64_t))(v21 + 32);
      v27 = v38;
      v25(v38, v14, v6);
      sub_1C0784B94(v23, (uint64_t *)&unk_1ED762690);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v21 + 8))(v14, v6);
      v26 = *(void (**)(char *, uint64_t, uint64_t))(v21 + 32);
      v27 = v38;
      v26(v38, v23, v6);
    }
    v28 = v40;
    v29 = sub_1C106AD44();
    v30 = (uint64_t)v37;
    if ((v29 & 1) != 0)
    {
      v31 = v44;
      sub_1C0B79648();
      v44 = v31;
      if (!v31)
      {
        v32 = v28;
        v39 = v2 + 16;
        sub_1C0784AC0(v2 + 16, (uint64_t)v43);
        v33 = v35;
        v22((char *)v35, (uint64_t)v27, v6);
        v22((char *)v30, v32, v6);
        type metadata accessor for CachedContextProvider();
        sub_1C077B5BC();
        sub_1C08AE78C(v43, v33, v30);
        sub_1C084D7F0();
        swift_release();
      }
    }
    return (*(uint64_t (**)(char *, uint64_t))(v41 + 8))(v27, v6);
  }
  return result;
}

uint64_t sub_1C084D7F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t (*v23)(uint64_t, uint64_t, uint64_t);
  NSObject *v24;
  os_log_type_t v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  unint64_t v31;
  NSObject *v33;
  uint64_t (*v34)(uint64_t, uint64_t, uint64_t);
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  sub_1C0776838();
  v41 = v2;
  v42 = v3;
  v4 = v0;
  v6 = v5;
  v8 = v7;
  v10 = v9;
  v12 = v11;
  v13 = sub_1C077AE98();
  MEMORY[0x1E0C80A78](v13);
  sub_1C077AED0();
  v38 = v14;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v15);
  v36 = (char *)&v33 - v16;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v17);
  sub_1C0782124();
  v37 = v18;
  v34 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v18 + 16);
  v35 = v12;
  sub_1C077CF74(v1, v12, v34);
  sub_1C0775864();
  while ((sub_1C07825A8() & 1) != 0)
  {
    v19 = (void *)MEMORY[0x1C3BA79F4]();
    sub_1C084DCD8(v10, v1, v6, v4, v8);
    objc_autoreleasePoolPop(v19);
  }
  sub_1C07A9480((_QWORD *)(v4 + 56), *(_QWORD *)(v4 + 80));
  sub_1C082E440();
  v20 = v38;
  v21 = (uint64_t)v36;
  if (qword_1ED760048 != -1)
    swift_once();
  v22 = sub_1C077585C();
  sub_1C079E000(v22, (uint64_t)qword_1ED78D800);
  v23 = v34;
  v34(v21, v35, v13);
  v23(v20, (uint64_t)v10, v13);
  v24 = sub_1C106F538();
  v25 = sub_1C10703A8();
  v26 = v25;
  if (os_log_type_enabled(v24, v25))
  {
    v27 = sub_1C0775854();
    v35 = sub_1C0775854();
    v40 = v35;
    *(_DWORD *)v27 = 136315394;
    sub_1C0794BAC((unint64_t *)&qword_1ED7565B0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08F0]);
    LODWORD(v34) = v26;
    v28 = sub_1C0789DA0();
    v39 = sub_1C07B7A68(v28, v29);
    sub_1C078100C();
    sub_1C077960C();
    v33 = v24;
    sub_1C078799C(v21);
    *(_WORD *)(v27 + 12) = 2080;
    v30 = sub_1C0789DA0();
    v39 = sub_1C07B7A68(v30, v31);
    sub_1C078100C();
    sub_1C077960C();
    sub_1C078799C(v20);
    sub_1C077E89C(&dword_1C0771000, v33, (os_log_type_t)v34, "BehaviorFeaturizer: Digested behavior history from %s to %s", (uint8_t *)v27);
    swift_arrayDestroy();
    sub_1C0776778();
  }
  sub_1C07786D0(v21);
  sub_1C07786D0(v20);

  return sub_1C07786D0(v1);
}

uint64_t sub_1C084DC30()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v6;

  v1 = sub_1C077AE98();
  sub_1C0788898();
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C106AD68();
  sub_1C084D7F0();
  return (*(uint64_t (**)(char *, uint64_t))(v0 + 8))(v4, v1);
}

uint64_t sub_1C084DCD8(_BYTE *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  _BYTE *v20;
  void (*v21)(_BYTE *, uint64_t, uint64_t);
  _BYTE *v22;
  _BYTE *v23;
  void (*v24)(_BYTE *, uint64_t);
  _BYTE *v25;
  uint64_t v26;
  uint64_t v27;
  NSObject *v28;
  os_log_type_t v29;
  int v30;
  _BOOL4 v31;
  uint64_t v32;
  void (*v33)(_BYTE *, uint64_t);
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  _BYTE *v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  _BYTE *v45;
  id v46;
  id v47;
  NSObject *v48;
  os_log_type_t v49;
  uint8_t *v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  void (*v54)(_BYTE *, uint64_t);
  uint64_t v55;
  uint64_t v56;
  _BYTE v58[12];
  int v59;
  uint64_t v60;
  os_log_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  _BYTE *v65;
  _BYTE *v66;
  uint64_t v67;
  uint64_t v68;
  void (*v69)(_BYTE *, uint64_t, uint64_t);
  uint64_t v70;
  _BYTE *v71;
  uint64_t v72;
  void (*v73)(_BYTE *, uint64_t);
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77[3];
  uint64_t v78;
  uint64_t v79;

  v72 = a5;
  v70 = a4;
  v74 = a3;
  v7 = sub_1C106ADE0();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x1E0C80A78](v7);
  v66 = &v58[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v11 = MEMORY[0x1E0C80A78](v9);
  v65 = &v58[-v12];
  v13 = MEMORY[0x1E0C80A78](v11);
  v15 = &v58[-v14];
  v16 = MEMORY[0x1E0C80A78](v13);
  v18 = &v58[-v17];
  MEMORY[0x1E0C80A78](v16);
  v20 = &v58[-v19];
  swift_beginAccess();
  v21 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v8 + 16);
  v21(v15, a2, v7);
  sub_1C106AD2C();
  v68 = v8;
  v73 = *(void (**)(_BYTE *, uint64_t))(v8 + 8);
  v73(v15, v7);
  sub_1C0794BAC((unint64_t *)&qword_1ED755A40, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08B0]);
  if ((sub_1C106FA6C() & 1) != 0)
  {
    v22 = v20;
    v23 = v18;
  }
  else
  {
    v22 = v20;
    v23 = a1;
  }
  v21(v22, (uint64_t)v23, v7);
  v24 = v73;
  v73(v18, v7);
  swift_beginAccess();
  v21(v15, a2, v7);
  sub_1C08AD21C((uint64_t)v15, (uint64_t)v20);
  v24(v15, v7);
  v25 = v65;
  if (qword_1ED760048 != -1)
    swift_once();
  v26 = sub_1C106F544();
  v27 = sub_1C079E000(v26, (uint64_t)qword_1ED78D800);
  v71 = v20;
  v21(v25, (uint64_t)v20, v7);
  v63 = v27;
  v28 = sub_1C106F538();
  v29 = sub_1C1070384();
  v30 = v29;
  v31 = os_log_type_enabled(v28, v29);
  v69 = v21;
  if (v31)
  {
    v32 = swift_slowAlloc();
    v64 = a2;
    v33 = v24;
    v34 = v32;
    v62 = swift_slowAlloc();
    v77[0] = v62;
    *(_DWORD *)v34 = 136315394;
    v60 = v34 + 4;
    swift_beginAccess();
    v21(v15, v64, v7);
    sub_1C0794BAC((unint64_t *)&qword_1ED7565B0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08F0]);
    v35 = sub_1C1070C0C();
    v61 = v28;
    v37 = v36;
    v33(v15, v7);
    v76 = sub_1C0788DAC(v35, v37, v77);
    v59 = v30;
    sub_1C10705AC();
    swift_bridgeObjectRelease();
    *(_WORD *)(v34 + 12) = 2080;
    v21 = v69;
    v38 = sub_1C1070C0C();
    v76 = sub_1C0788DAC(v38, v39, v77);
    sub_1C10705AC();
    swift_bridgeObjectRelease();
    v33(v25, v7);
    a2 = v64;
    v28 = v61;
    _os_log_impl(&dword_1C0771000, v61, (os_log_type_t)v59, "BehaviorFeaturizer: Starting histogram batched digest from %s to %s", (uint8_t *)v34, 0x16u);
    v40 = v62;
    swift_arrayDestroy();
    MEMORY[0x1C3BA8270](v40, -1, -1);
    MEMORY[0x1C3BA8270](v34, -1, -1);
  }
  else
  {
    v24(v25, v7);
  }

  v41 = v66;
  sub_1C0784AC0(v70 + 56, (uint64_t)v77);
  v42 = v78;
  v43 = v79;
  sub_1C07A9480(v77, v78);
  swift_beginAccess();
  v21(v41, a2, v7);
  v44 = (void *)v67;
  (*(void (**)(_BYTE *, _BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v43 + 8) + 8))(v41, v71, v72, v74, v42);
  v45 = v41;
  if (v44)
  {
    v73(v41, v7);
    _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v77);
    v46 = v44;
    v47 = v44;
    v48 = sub_1C106F538();
    v49 = sub_1C107039C();
    if (os_log_type_enabled(v48, v49))
    {
      v50 = (uint8_t *)swift_slowAlloc();
      v67 = swift_slowAlloc();
      v77[0] = v67;
      *(_DWORD *)v50 = 136315138;
      v66 = v50 + 4;
      swift_getErrorValue();
      v51 = sub_1C1070D74();
      v75 = sub_1C0788DAC(v51, v52, v77);
      sub_1C10705AC();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1C0771000, v48, v49, "BehaviorFeaturizer: Error updating eventTracker - %s", v50, 0xCu);
      v53 = v67;
      swift_arrayDestroy();
      MEMORY[0x1C3BA8270](v53, -1, -1);
      MEMORY[0x1C3BA8270](v50, -1, -1);

    }
    else
    {

    }
    v21 = v69;
    v54 = v73;
  }
  else
  {
    v54 = v73;
    v73(v45, v7);
    _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v77);
  }
  swift_beginAccess();
  v21(v15, a2, v7);
  v55 = (uint64_t)v71;
  sub_1C084E478((uint64_t)v15, (uint64_t)v71, v72, v74);
  v54(v15, v7);
  v56 = v68;
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v68 + 32))(v15, v55, v7);
  swift_beginAccess();
  return (*(uint64_t (**)(uint64_t, _BYTE *, uint64_t))(v56 + 40))(a2, v15, v7);
}

uint64_t sub_1C084E478(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t result;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(char *, char *, uint64_t);
  _QWORD *v28;
  char v29;
  void (*v30)(char *, uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char v38;
  uint64_t v39;
  void (*v40)(char *, char *, uint64_t);
  uint64_t v41;
  unint64_t v42;
  char *v43;
  __int128 v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  unsigned __int8 v50;
  unint64_t v51;
  __int128 v52;
  uint64_t v53;
  uint64_t v54;
  void *v55;
  uint64_t v56;
  uint64_t *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t ObjectType;
  void (*v62)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  __int128 v74;
  uint64_t v75;
  void (*v76)(char *, uint64_t, uint64_t);
  char *v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  _QWORD *v81;
  __int128 v82;
  _QWORD *v83;
  __int128 v84;
  unsigned __int8 v85[9];

  v70 = a4;
  v69 = a3;
  v68 = a2;
  v67 = a1;
  v4 = sub_1C106D6CC();
  v78 = *(_QWORD *)(v4 - 8);
  v5 = MEMORY[0x1E0C80A78](v4);
  v80 = (char *)&v64 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v64 - v8;
  v10 = MEMORY[0x1E0C80A78](v7);
  v72 = (char *)&v64 - v11;
  v12 = MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v64 - v13;
  v15 = MEMORY[0x1E0C80A78](v12);
  v17 = (char *)&v64 - v16;
  MEMORY[0x1E0C80A78](v15);
  v19 = (char *)&v64 - v18;
  result = sub_1C106D684();
  v21 = result;
  v22 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)&v84 = MEMORY[0x1E0DEE9D8];
  v23 = *(_QWORD *)(result + 16);
  v79 = v4;
  v77 = v9;
  v75 = v23;
  if (v23)
  {
    v24 = 0;
    LODWORD(v74) = *MEMORY[0x1E0D3C0A8];
    v71 = result;
    v66 = v19;
    while (1)
    {
      if (v24 >= *(_QWORD *)(v21 + 16))
      {
        __break(1u);
        goto LABEL_36;
      }
      v25 = v78;
      v26 = *(_QWORD *)(v78 + 72);
      v76 = (void (*)(char *, uint64_t, uint64_t))((*(unsigned __int8 *)(v25 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80));
      *(_QWORD *)&v82 = v26;
      v27 = *(void (**)(char *, char *, uint64_t))(v78 + 16);
      v27(v19, (char *)v76 + v21 + v26 * v24, v4);
      (*(void (**)(char *, _QWORD, uint64_t))(v25 + 104))(v17, v74, v4);
      sub_1C0794BAC((unint64_t *)&unk_1ED744A50, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3C130], MEMORY[0x1E0D3C150]);
      v81 = v28;
      v29 = sub_1C106FAA8();
      v30 = *(void (**)(char *, uint64_t))(v25 + 8);
      v30(v17, v4);
      v27(v14, v19, v4);
      if ((v29 & 1) == 0)
      {
        v73 = v24;
        v31 = sub_1C106D690();
        if (!*(_QWORD *)(v31 + 16)
          || (sub_1C0794BAC((unint64_t *)&qword_1ED744A48, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3C130], MEMORY[0x1E0D3C148]), v32 = sub_1C106FA00(), v33 = -1 << *(_BYTE *)(v31 + 32), v34 = v32 & ~v33, ((*(_QWORD *)(v31 + 56 + ((v34 >> 3) & 0xFFFFFFFFFFFFF8)) >> v34) & 1) == 0))
        {
LABEL_11:
          swift_bridgeObjectRelease();
          v39 = v79;
          v30(v14, v79);
          v40 = *(void (**)(char *, char *, uint64_t))(v78 + 32);
          v19 = v66;
          v40(v72, v66, v39);
          v41 = v84;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_1C09D331C();
            v41 = v84;
          }
          v9 = v77;
          v42 = *(_QWORD *)(v41 + 16);
          v24 = v73;
          if (v42 >= *(_QWORD *)(v41 + 24) >> 1)
          {
            sub_1C09D331C();
            v41 = v84;
          }
          *(_QWORD *)(v41 + 16) = v42 + 1;
          v43 = (char *)v76 + v41 + v42 * v82;
          v4 = v79;
          result = ((uint64_t (*)(char *, char *, uint64_t))v40)(v43, v72, v79);
          *(_QWORD *)&v84 = v41;
          v21 = v71;
          goto LABEL_16;
        }
        v35 = ~v33;
        while (1)
        {
          v36 = v79;
          v27(v17, (char *)(*(_QWORD *)(v31 + 48) + v34 * v82), v79);
          v37 = v14;
          v38 = sub_1C106FAA8();
          v30(v17, v36);
          if ((v38 & 1) != 0)
            break;
          v34 = (v34 + 1) & v35;
          v14 = v37;
          if (((*(_QWORD *)(v31 + 56 + ((v34 >> 3) & 0xFFFFFFFFFFFFF8)) >> v34) & 1) == 0)
            goto LABEL_11;
        }
        swift_bridgeObjectRelease();
        v4 = v79;
        v9 = v77;
        v14 = v37;
        v21 = v71;
        v19 = v66;
        v24 = v73;
      }
      v30(v14, v4);
      result = ((uint64_t (*)(char *, uint64_t))v30)(v19, v4);
LABEL_16:
      if (++v24 == v75)
      {
        v22 = v84;
        break;
      }
    }
  }
  result = swift_bridgeObjectRelease();
  v66 = *(char **)(v22 + 16);
  if (!v66)
    return swift_release();
  v45 = 0;
  v81 = v83 + 12;
  v64 = v22 + ((*(unsigned __int8 *)(v78 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v78 + 80));
  *(_QWORD *)&v44 = 136315650;
  v74 = v44;
  v73 = MEMORY[0x1E0DEE9B8] + 8;
  v65 = v22;
  while (v45 < *(_QWORD *)(v22 + 16))
  {
    v46 = v64 + *(_QWORD *)(v78 + 72) * v45;
    v76 = *(void (**)(char *, uint64_t, uint64_t))(v78 + 16);
    v76(v9, v46, v4);
    v47 = 16;
    v48 = &byte_1E79FBF80;
    v49 = MEMORY[0x1E0DEE9D8];
    do
    {
      v50 = *v48++;
      v85[0] = v50;
      sub_1C084EE48(v85, v83, (uint64_t)v9, (uint64_t *)&v84);
      if ((_QWORD)v84)
      {
        v82 = v84;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1C07EBA00();
          v49 = v53;
        }
        v51 = *(_QWORD *)(v49 + 16);
        v52 = v82;
        if (v51 >= *(_QWORD *)(v49 + 24) >> 1)
        {
          sub_1C07EBA00();
          v52 = v82;
          v49 = v54;
        }
        *(_QWORD *)(v49 + 16) = v51 + 1;
        *(_OWORD *)(v49 + 16 * v51 + 32) = v52;
      }
      --v47;
    }
    while (v47);
    v72 = (char *)v45;
    v55 = (void *)MEMORY[0x1C3BA79F4]();
    sub_1C084F1EC(v49, v67, v68, v69, v70, (uint64_t)v9);
    objc_autoreleasePoolPop(v55);
    v56 = *(_QWORD *)(v49 + 16);
    v71 = v49;
    if (v56)
    {
      v57 = (uint64_t *)(v49 + 40);
      do
      {
        v58 = *v57;
        v59 = v83[15];
        v60 = v83[16];
        sub_1C07A9480(v81, v59);
        ObjectType = swift_getObjectType();
        v62 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v60 + 16);
        v63 = swift_unknownObjectRetain();
        v62(v63, ObjectType, v58, v59, v60);
        swift_unknownObjectRelease();
        v57 += 2;
        --v56;
      }
      while (v56);
    }
    v45 = (unint64_t)(v72 + 1);
    swift_bridgeObjectRelease();
    v9 = v77;
    v4 = v79;
    result = (*(uint64_t (**)(char *, uint64_t))(v78 + 8))(v77, v79);
    v22 = v65;
    if ((char *)v45 == v66)
      return swift_release();
  }
LABEL_36:
  __break(1u);
  return result;
}

uint64_t sub_1C084EDA0()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  v2 = v0;
  v3 = v0 + 7;
  v5 = v0[10];
  v4 = v0[11];
  sub_1C07A9480(v3, v5);
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(v4 + 8) + 16))(v5);
  if (!v1)
  {
    v7 = v2[15];
    v8 = v2[16];
    sub_1C07A9480(v2 + 12, v7);
    (*(void (**)(uint64_t, uint64_t))(v8 + 24))(v7, v8);
    return KeyValueStore.delete(key:)(*(Swift::String *)(v2 + 19));
  }
  return result;
}

void sub_1C084EE48(unsigned __int8 *a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  void *v4;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  id v22;
  NSObject *v23;
  os_log_type_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t v29;
  id v30;
  uint64_t v31;
  _QWORD *v32;
  os_log_t v33;
  uint64_t v34;
  uint64_t *v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t *v38;
  os_log_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  v40 = sub_1C106D6CC();
  v9 = *(_QWORD *)(v40 - 8);
  MEMORY[0x1E0C80A78](v40);
  v11 = (char *)&v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  LODWORD(a1) = *a1;
  v13 = a2[15];
  v12 = a2[16];
  sub_1C07A9480(a2 + 12, v13);
  LODWORD(v39) = (_DWORD)a1;
  sub_1C0853B34((char)a1);
  v15 = v14;
  v17 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v12 + 8))(v16, a3, v16, v14, v13, v12);
  if (v4)
  {
    v38 = a4;
    if (qword_1ED760048 != -1)
      swift_once();
    v18 = sub_1C106F544();
    sub_1C079E000(v18, (uint64_t)qword_1ED78D800);
    v19 = a3;
    v20 = v40;
    (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, v19, v40);
    v21 = v4;
    v22 = v4;
    v23 = sub_1C106F538();
    v24 = sub_1C107039C();
    if (os_log_type_enabled(v23, v24))
    {
      v25 = swift_slowAlloc();
      v36 = (_QWORD *)swift_slowAlloc();
      v37 = swift_slowAlloc();
      v42 = v37;
      *(_DWORD *)v25 = 136315650;
      v26 = sub_1C0854A58(v39);
      v39 = v23;
      v41 = sub_1C0788DAC(v26, v27, &v42);
      sub_1C10705AC();
      swift_bridgeObjectRelease();
      *(_WORD *)(v25 + 12) = 2080;
      sub_1C0794BAC((unint64_t *)&qword_1ED744A68, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3C130], MEMORY[0x1E0D3C168]);
      v28 = sub_1C1070C0C();
      v41 = sub_1C0788DAC(v28, v29, &v42);
      sub_1C10705AC();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v20);
      *(_WORD *)(v25 + 22) = 2112;
      v30 = v4;
      v31 = _swift_stdlib_bridgeErrorToNSError();
      v41 = v31;
      sub_1C10705AC();
      v32 = v36;
      *v36 = v31;

      v33 = v39;
      _os_log_impl(&dword_1C0771000, v39, v24, "BehaviorFeaturizer: Error updating %s for %s behaviors - %@", (uint8_t *)v25, 0x20u);
      sub_1C07ACF80(&qword_1ED7614A0);
      swift_arrayDestroy();
      MEMORY[0x1C3BA8270](v32, -1, -1);
      v34 = v37;
      swift_arrayDestroy();
      MEMORY[0x1C3BA8270](v34, -1, -1);
      MEMORY[0x1C3BA8270](v25, -1, -1);

    }
    else
    {

      (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v20);
    }
    v35 = v38;
    *v38 = 0;
    v35[1] = 0;
  }
  else
  {
    *a4 = v17;
    a4[1] = v15;
  }
}

void sub_1C084F1EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  id v12;
  id v13;
  NSObject *v14;
  os_log_type_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  id v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v26 = a6;
  v7 = sub_1C106D6CC();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0853C9C();
  if (v6)
  {
    if (qword_1ED760048 != -1)
      swift_once();
    v11 = sub_1C106F544();
    sub_1C079E000(v11, (uint64_t)qword_1ED78D800);
    (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v26, v7);
    v12 = v6;
    v13 = v6;
    v14 = sub_1C106F538();
    v15 = sub_1C107039C();
    if (os_log_type_enabled(v14, v15))
    {
      v16 = swift_slowAlloc();
      v24 = v8;
      v17 = v16;
      v25 = (_QWORD *)swift_slowAlloc();
      v26 = swift_slowAlloc();
      v28 = v26;
      *(_DWORD *)v17 = 136315394;
      sub_1C0794BAC((unint64_t *)&qword_1ED744A68, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3C130], MEMORY[0x1E0D3C168]);
      v18 = sub_1C1070C0C();
      v27 = sub_1C0788DAC(v18, v19, &v28);
      sub_1C10705AC();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v24 + 8))(v10, v7);
      *(_WORD *)(v17 + 12) = 2112;
      v20 = v6;
      v21 = _swift_stdlib_bridgeErrorToNSError();
      v27 = v21;
      sub_1C10705AC();
      v22 = v25;
      *v25 = v21;

      _os_log_impl(&dword_1C0771000, v14, v15, "BehaviorFeaturizer: Error updating histograms for %s behaviors - %@", (uint8_t *)v17, 0x16u);
      sub_1C07ACF80(&qword_1ED7614A0);
      swift_arrayDestroy();
      MEMORY[0x1C3BA8270](v22, -1, -1);
      v23 = v26;
      swift_arrayDestroy();
      MEMORY[0x1C3BA8270](v23, -1, -1);
      MEMORY[0x1C3BA8270](v17, -1, -1);

    }
    else
    {

      (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    }
  }
}

uint64_t sub_1C084F510()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v10;
  uint64_t v11;
  _QWORD v12[2];

  v2 = sub_1C07ACF80((uint64_t *)&unk_1ED762690);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1C106ADE0();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C07A9480((_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 80));
  sub_1C082E9B0();
  if (v1)
  {

    sub_1C07B2D8C((uint64_t)v4, 1, 1, v5);
LABEL_4:
    sub_1C0784B94((uint64_t)v4, (uint64_t *)&unk_1ED762690);
    return 0;
  }
  if (sub_1C07B2D80((uint64_t)v4, 1, v5) == 1)
    goto LABEL_4;
  (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v4, v5);
  sub_1C106ACD8();
  v11 = v10;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return v11;
}

void sub_1C084F69C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  double v18;
  uint64_t v19[5];
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  LOBYTE(v20) = -1;
  v13 = HIDWORD(a3) & 1;
  v14 = a3;
  sub_1C0850188((uint64_t)v19, a2, a3 | (unint64_t)(v13 << 32), a4, a5, a6, a7, a8, 0, 0, 0, 0, 0, v20, v21, v22, v23, v24, v25,
    v26);
  if (!v8 && v18 != 0.0)
    sub_1C0850188(a1, a2, v14 | (v13 << 32), a4, a5, v15, v16, v17, v19[0], v19[1], v19[2], v19[3], v19[4], v20, v21, v22, v23, v24, v25,
      v26);
}

void sub_1C084F74C(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  double v8;
  _OWORD v9[2];
  uint64_t v10;
  char v11;

  v10 = 0;
  memset(v9, 0, sizeof(v9));
  v11 = -1;
  v6 = HIDWORD(a3) & 1;
  v7 = a3;
  sub_1C084FF14((uint64_t)v9, a2, a3 | (unint64_t)(v6 << 32));
  if (!v3 && v8 != 0.0)
    sub_1C084FF14(a1, a2, v7 | (v6 << 32));
}

double sub_1C084F7E4(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  double v10;
  double v11;
  char v13;
  _BYTE v15[48];
  _QWORD v16[5];
  char v17;
  _BYTE v18[48];
  _QWORD v19[5];
  char v20;

  sub_1C07DFF44(a2, (uint64_t)v16);
  v5 = v16[0];
  v6 = v16[1];
  v7 = v16[2];
  v8 = v16[3];
  v9 = v16[4];
  v13 = v17;
  sub_1C08268CC(v3 + OBJC_IVAR____TtC24IntelligencePlatformCore21BehaviorHistogramBase_trackedBehaviorType, (_QWORD *)(v3 + OBJC_IVAR____TtC24IntelligencePlatformCore21BehaviorHistogramBase_eventSource), (uint64_t)v15);
  sub_1C07DFB7C((uint64_t)v15, (uint64_t)v18);
  if (v18[40] == 255)
    return 0.0;
  v19[0] = v5;
  v19[1] = v6;
  v19[2] = v7;
  v19[3] = v8;
  v19[4] = v9;
  v20 = v13;
  sub_1C08384CC(a2, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1C0826EB0);
  sub_1C084FE6C((uint64_t)v15, (uint64_t)v19, a3 | ((HIDWORD(a3) & 1) << 32));
  v11 = v10;
  sub_1C08384CC(a2, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1C0826F50);
  sub_1C08384CC((uint64_t)v15, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1C08273B4);
  return v11;
}

double sub_1C084F928(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  double v10;
  double v11;
  char v13;
  _BYTE v15[48];
  _QWORD v16[5];
  char v17;
  _BYTE v18[48];
  _QWORD v19[5];
  char v20;

  sub_1C07DFF44(a1, (uint64_t)v16);
  v5 = v16[0];
  v6 = v16[1];
  v7 = v16[2];
  v8 = v16[3];
  v9 = v16[4];
  v13 = v17;
  sub_1C08268CC(v3 + OBJC_IVAR____TtC24IntelligencePlatformCore21BehaviorHistogramBase_trackedBehaviorType, (_QWORD *)(v3 + OBJC_IVAR____TtC24IntelligencePlatformCore21BehaviorHistogramBase_eventSource), (uint64_t)v15);
  sub_1C07DFB7C((uint64_t)v15, (uint64_t)v18);
  if (v18[40] == 255)
    return 0.0;
  v19[0] = v5;
  v19[1] = v6;
  v19[2] = v7;
  v19[3] = v8;
  v19[4] = v9;
  v20 = v13;
  sub_1C08384CC(a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1C0826EB0);
  sub_1C084F74C((uint64_t)v19, (uint64_t)v15, a3 | ((HIDWORD(a3) & 1) << 32));
  v11 = v10;
  sub_1C08384CC(a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1C0826F50);
  sub_1C08384CC((uint64_t)v15, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1C08273B4);
  return v11;
}

void sub_1C084FA68(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1C084FAA4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = v0[15];
  v3 = v0[16];
  sub_1C07A9480(v0 + 12, v2);
  v4 = type metadata accessor for TimeOfDayBehaviorHistogram(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, _UNKNOWN **, uint64_t, uint64_t))(v3 + 8))(v4, v1, v4, &off_1E7A0F538, v2, v3);
}

uint64_t sub_1C084FD80()
{
  uint64_t v0;

  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0(v0 + 16);
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0(v0 + 56);
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0(v0 + 96);
  swift_release();
  swift_bridgeObjectRelease();
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0(v0 + 168);
  return v0;
}

uint64_t sub_1C084FDC4()
{
  sub_1C084FD80();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for BehaviorFeaturizer()
{
  return objc_opt_self();
}

uint64_t sub_1C084FE04()
{
  return sub_1C084DC30();
}

uint64_t sub_1C084FE2C(uint64_t a1)
{
  return sub_1C084D4DC(a1);
}

uint64_t sub_1C084FE4C()
{
  return sub_1C084EDA0();
}

void sub_1C084FE6C(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t v3;
  double v7;
  _OWORD v8[2];
  uint64_t v9;
  char v10;

  v9 = 0;
  memset(v8, 0, sizeof(v8));
  v10 = -1;
  sub_1C084FF14(a2, (uint64_t)v8, 0x100000000);
  if (!v3 && v7 != 0.0)
    sub_1C084FF14(a2, a1, a3 | ((HIDWORD(a3) & 1) << 32));
}

void sub_1C084FF14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  unsigned __int16 v12;
  unsigned __int16 v13;
  unsigned __int16 v14;
  unsigned __int16 v15;
  id *v16;
  double v17;
  id *v18;
  double v19;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v28[5];
  char v29;
  _QWORD v30[5];
  char v31;
  _BYTE v32[48];
  _BYTE v33[48];
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char v45;

  sub_1C07DFB7C(a2, (uint64_t)v30);
  v25 = v30[1];
  v26 = v30[0];
  v23 = v30[3];
  v24 = v30[2];
  v22 = v30[4];
  v21 = v31;
  sub_1C07DFB7C(a1, (uint64_t)v28);
  v6 = v28[0];
  v7 = v28[1];
  v8 = v28[2];
  v9 = v28[3];
  v10 = v28[4];
  v11 = v29;
  sub_1C07DFB7C(a1, (uint64_t)v33);
  if (v33[40] == 255)
  {
    v13 = -1;
  }
  else
  {
    v40 = v6;
    v41 = v7;
    v42 = v8;
    v43 = v9;
    v44 = v10;
    v45 = v11;
    sub_1C0826EB0(v6, v7, v8, v9, v10, v11);
    sub_1C085549C();
    v13 = v12;
    sub_1C08384CC(a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1C08273B4);
    if (v4)
      return;
  }
  sub_1C07DFB7C(a2, (uint64_t)v32);
  if (v32[40] == 255)
  {
    v15 = -1;
  }
  else
  {
    v34 = v26;
    v35 = v25;
    v36 = v24;
    v37 = v23;
    v38 = v22;
    v39 = v21;
    sub_1C0826EB0(v26, v25, v24, v23, v22, v21);
    sub_1C085549C();
    v15 = v14;
    sub_1C08384CC(a2, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1C08273B4);
    if (v4)
      return;
  }
  if ((a3 & 0x100000000) != 0)
  {
    v18 = (id *)(v3 + OBJC_IVAR____TtC24IntelligencePlatformCore21BehaviorHistogramBase_state);
    sub_1C0775864();
    objc_msgSend(*v18, sel_lookupUnsmoothedA_b_, v13, v15);
  }
  else
  {
    sub_1C07A3748(*(float *)&a3);
    v16 = (id *)(v3 + OBJC_IVAR____TtC24IntelligencePlatformCore21BehaviorHistogramBase_state);
    sub_1C0775864();
    sub_1C079B468(*v16, sel_lookupSmoothedWithBucketCount_distanceScale_a_b_, v17);
  }
  sub_1C08518E8();
  sub_1C078AB6C(v19);
}

#error "1C0850158: call analysis failed (funcsize=7)"

#error "1C085017C: call analysis failed (funcsize=7)"

void sub_1C0850188(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  unsigned __int16 v32;
  uint64_t v33;
  uint64_t v34;
  unsigned __int16 v35;
  id *v36;
  double v37;
  id v38;
  id *v39;
  double v40;
  uint64_t v41;
  double (*v42)(id);
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  _QWORD v49[11];
  char v50;

  sub_1C077681C();
  a19 = v23;
  a20 = v24;
  sub_1C07786D8(v25, v26, (uint64_t)&a16);
  v41 = v27;
  v29 = v28;
  sub_1C078DEE4(v28);
  sub_1C07ACF80((uint64_t *)&unk_1ED762690);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v30);
  sub_1C077962C();
  sub_1C07DFB7C(v29, (uint64_t)v49);
  sub_1C07AFFF8();
  if (v31)
  {
    v32 = -1;
  }
  else
  {
    v49[6] = v43;
    v49[7] = v44;
    v49[8] = v45;
    v49[9] = v46;
    v49[10] = v47;
    v50 = v48;
    sub_1C0826EB0(v43, v44, v45, v46, v47, v48);
    v32 = sub_1C077AFB0();
    sub_1C08384CC(v29, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1C08273B4);
    if (v21)
      goto LABEL_12;
  }
  v33 = sub_1C08524A0();
  sub_1C078A924(v33, v22, (uint64_t *)&unk_1ED762690);
  v34 = sub_1C077AE98();
  sub_1C077AEEC(v22, 1, v34);
  if (v31)
    v35 = -1;
  else
    v35 = 0;
  sub_1C0784B94(v22, (uint64_t *)&unk_1ED762690);
  if ((v41 & 0x100000000) != 0)
  {
    v39 = (id *)(v20 + OBJC_IVAR____TtC24IntelligencePlatformCore21BehaviorHistogramBase_state);
    sub_1C0775864();
    v38 = objc_msgSend(*v39, sel_lookupUnsmoothedA_b_, v32, v35);
  }
  else
  {
    sub_1C07A3748(*(float *)&v41);
    v36 = (id *)(v20 + OBJC_IVAR____TtC24IntelligencePlatformCore21BehaviorHistogramBase_state);
    sub_1C0775864();
    v38 = sub_1C079B468(*v36, sel_lookupSmoothedWithBucketCount_distanceScale_a_b_, v37);
  }
  v40 = v42(v38);
  sub_1C078AB6C(v40);
LABEL_12:
  sub_1C077F074();
}

#error "1C0850364: call analysis failed (funcsize=7)"

#error "1C08503A8: call analysis failed (funcsize=79)"

#error "1C08504D8: call analysis failed (funcsize=60)"

#error "1C08505D4: call analysis failed (funcsize=63)"

#error "1C08506E4: call analysis failed (funcsize=61)"

void sub_1C08507CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  unsigned __int16 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  unsigned __int16 v15;
  unsigned __int16 v16;
  id *v17;
  double v18;
  id *v19;
  double v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  _QWORD v31[11];
  char v32;

  sub_1C077681C();
  v21 = v3;
  v5 = v4;
  sub_1C078DEE4(v4);
  sub_1C07ACF80(&qword_1ED762CE0);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v6);
  sub_1C077864C();
  v24 = sub_1C106AE28();
  v23 = *(_QWORD *)(v24 - 8);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v7);
  sub_1C077AE40();
  v22 = v8;
  sub_1C07DFB7C(v5, (uint64_t)v31);
  sub_1C07AFFF8();
  if (v9)
  {
    v11 = -1;
    v12 = v1;
  }
  else
  {
    v31[6] = v25;
    v31[7] = v26;
    v31[8] = v27;
    v31[9] = v28;
    v31[10] = v29;
    v32 = v30;
    sub_1C0826EB0(v25, v26, v27, v28, v29, v30);
    sub_1C07A98B4();
    sub_1C0855478();
    v11 = v10;
    v12 = v1;
    sub_1C085243C(v10, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1C08273B4);
    if (v1)
      goto LABEL_16;
  }
  v13 = sub_1C08524A0();
  sub_1C078A924(v13, v2, v14);
  sub_1C077AEEC(v2, 1, v24);
  if (v9)
  {
    sub_1C0784B94(v2, &qword_1ED762CE0);
    v15 = -1;
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v23 + 32))(v22, v2, v24);
    sub_1C085CFBC();
    if (v12)
    {
      sub_1C078303C(v22, *(uint64_t (**)(uint64_t, uint64_t))(v23 + 8));
      goto LABEL_16;
    }
    v15 = v16;
    sub_1C078303C(v22, *(uint64_t (**)(uint64_t, uint64_t))(v23 + 8));
  }
  if ((v21 & 0x100000000) != 0)
  {
    v19 = (id *)(v0 + OBJC_IVAR____TtC24IntelligencePlatformCore32CategoricalBehaviorHistogramBase_state);
    sub_1C0775864();
    objc_msgSend(*v19, sel_lookupUnsmoothedA_b_, v11, v15);
  }
  else
  {
    sub_1C07A3748(*(float *)&v21);
    v17 = (id *)(v0 + OBJC_IVAR____TtC24IntelligencePlatformCore32CategoricalBehaviorHistogramBase_state);
    sub_1C0775864();
    sub_1C079B468(*v17, sel_lookupSmoothedWithBucketCount_distanceScale_a_b_, v18);
  }
  *(float *)&v20 = sub_1C07BFEAC();
  sub_1C078AB6C(v20);
LABEL_16:
  sub_1C077F074();
}

void sub_1C0850A18(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  sub_1C0850A3C(a1, a2, a3, a4, (void (*)(_QWORD *))sub_1C0855478, (void (*)(uint64_t))sub_1C085CE04);
}

void sub_1C0850A3C(uint64_t a1, uint64_t a2, char a3, uint64_t a4, void (*a5)(_QWORD *), void (*a6)(uint64_t))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  id *v15;
  double v16;
  id *v17;
  double v18;
  _QWORD v24[5];
  char v25;
  _BYTE v26[48];
  _QWORD v27[5];
  char v28;

  sub_1C07DFB7C(a1, (uint64_t)v24);
  v10 = v24[0];
  v9 = v24[1];
  v11 = v24[2];
  v12 = v24[3];
  v13 = v24[4];
  v14 = v25;
  sub_1C07DFB7C(a1, (uint64_t)v26);
  if (v26[40] == 255)
    goto LABEL_12;
  v27[0] = v10;
  v27[1] = v9;
  v27[2] = v11;
  v27[3] = v12;
  v27[4] = v13;
  v28 = v14;
  sub_1C0826EB0(v10, v9, v11, v12, v13, v14);
  a5(v27);
  sub_1C08384CC(a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1C08273B4);
  if (!v7)
  {
LABEL_12:
    if ((a3 & 1) != 0 || (a6(a2), !v7))
    {
      if ((a4 & 0x100000000) != 0)
      {
        v17 = (id *)(v6 + OBJC_IVAR____TtC24IntelligencePlatformCore32CategoricalBehaviorHistogramBase_state);
        sub_1C0775864();
        sub_1C07B88FC(*v17, sel_lookupUnsmoothedA_b_);
      }
      else
      {
        sub_1C07A3748(*(float *)&a4);
        v15 = (id *)(v6 + OBJC_IVAR____TtC24IntelligencePlatformCore32CategoricalBehaviorHistogramBase_state);
        sub_1C0775864();
        sub_1C079B468(*v15, sel_lookupSmoothedWithBucketCount_distanceScale_a_b_, v16);
      }
      sub_1C08518E8();
      sub_1C078AB6C(v18);
    }
  }
}

#error "1C0850C20: call analysis failed (funcsize=77)"

#error "1C0850D48: call analysis failed (funcsize=8)"

#error "1C0850D70: call analysis failed (funcsize=8)"

void sub_1C0850D7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  unsigned __int16 v35;
  unsigned __int16 v36;
  id *v37;
  double v38;
  id *v39;
  double v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t (*v43)(uint64_t);
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  _QWORD v53[11];
  char v54;

  sub_1C077681C();
  a19 = v23;
  a20 = v24;
  sub_1C07786D8(v25, v26, (uint64_t)&a12);
  v46 = v27;
  v45 = v28;
  v30 = v29;
  sub_1C078DEE4(v29);
  sub_1C07ACF80((uint64_t *)&unk_1ED762690);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v31);
  sub_1C07766EC();
  v44 = sub_1C077AE98();
  v42 = *(_QWORD *)(v44 - 8);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v32);
  sub_1C077AE40();
  v41 = v33;
  sub_1C07DFB7C(v30, (uint64_t)v53);
  sub_1C07AFFF8();
  if (v34)
  {
    v35 = -1;
  }
  else
  {
    v53[6] = v47;
    v53[7] = v48;
    v53[8] = v49;
    v53[9] = v50;
    v53[10] = v51;
    v54 = v52;
    sub_1C0826EB0(v47, v48, v49, v50, v51, v52);
    v35 = sub_1C077AFB0();
    sub_1C08384CC(v30, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1C08273B4);
    if (v21)
      goto LABEL_12;
  }
  sub_1C078A924(v45, v22, (uint64_t *)&unk_1ED762690);
  sub_1C077AEEC(v22, 1, v44);
  if (v34)
  {
    sub_1C0784B94(v22, (uint64_t *)&unk_1ED762690);
    v36 = -1;
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v42 + 32))(v41, v22, v44);
    v36 = v43(v41);
    (*(void (**)(uint64_t, uint64_t))(v42 + 8))(v41, v44);
  }
  if ((v46 & 0x100000000) != 0)
  {
    v39 = (id *)(v20 + OBJC_IVAR____TtC24IntelligencePlatformCore21BehaviorHistogramBase_state);
    sub_1C0775864();
    objc_msgSend(*v39, sel_lookupUnsmoothedA_b_, v35, v36);
  }
  else
  {
    sub_1C07A3748(*(float *)&v46);
    v37 = (id *)(v20 + OBJC_IVAR____TtC24IntelligencePlatformCore21BehaviorHistogramBase_state);
    sub_1C0775864();
    sub_1C079B468(*v37, sel_lookupSmoothedWithBucketCount_distanceScale_a_b_, v38);
  }
  sub_1C0851D20();
  sub_1C078AB6C(v40);
LABEL_12:
  sub_1C077F074();
}

void sub_1C0850FCC()
{
  uint64_t v0;
  unsigned __int16 v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t);
  id *v16;
  double v17;
  id *v18;
  double v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE v22[5];

  sub_1C077681C();
  sub_1C078C82C(v4, v5, v6);
  sub_1C0852464();
  sub_1C07ACF80((uint64_t *)&unk_1ED762690);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v7);
  v21 = sub_1C0797000();
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v8);
  sub_1C07A7D3C(v9, v20);
  sub_1C07AFFF8();
  if (v12)
  {
    v1 = -1;
  }
  else
  {
    sub_1C0793770();
    sub_1C07A98B4();
    sub_1C085549C();
    sub_1C0782368();
    sub_1C085243C(v13, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1C08273B4);
    if (v2)
      goto LABEL_11;
  }
  sub_1C0779740(v10, v11, (uint64_t *)&unk_1ED762690);
  sub_1C077AEEC(v3, 1, v21);
  if (!v12)
  {
    v14 = sub_1C0782D14();
    v15(v14);
    sub_1C085EB58();
  }
  sub_1C0784B94(v3, (uint64_t *)&unk_1ED762690);
  if ((*(_QWORD *)v22 & 0x100000000) != 0)
  {
    v18 = (id *)(v0 + OBJC_IVAR____TtC24IntelligencePlatformCore21BehaviorHistogramBase_state);
    sub_1C0775864();
    objc_msgSend(*v18, sel_lookupUnsmoothedA_b_, v1, 0xFFFFLL);
  }
  else
  {
    sub_1C07A3748(*(float *)v22);
    v16 = (id *)(v0 + OBJC_IVAR____TtC24IntelligencePlatformCore21BehaviorHistogramBase_state);
    sub_1C0775864();
    sub_1C079B468(*v16, sel_lookupSmoothedWithBucketCount_distanceScale_a_b_, v17);
  }
  sub_1C08518E8();
  sub_1C078AB6C(v19);
LABEL_11:
  sub_1C077F074();
}

void sub_1C085118C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t);
  id *v16;
  uint64_t v17;
  id v18;
  double v19;
  id *v20;
  double v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _BYTE v25[5];

  sub_1C077681C();
  sub_1C078C82C(v4, v5, v6);
  sub_1C0852464();
  sub_1C07ACF80((uint64_t *)&unk_1ED762690);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v7);
  v24 = sub_1C0797000();
  v23 = *(_QWORD *)(v24 - 8);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v8);
  sub_1C07A7D3C(v9, v22);
  sub_1C07AFFF8();
  if (v12
    || (sub_1C0793770(),
        sub_1C07A98B4(),
        sub_1C085549C(),
        sub_1C085243C(v13, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1C08273B4),
        !v1))
  {
    sub_1C0779740(v10, v11, (uint64_t *)&unk_1ED762690);
    sub_1C077AEEC(v2, 1, v24);
    if (v12)
    {
      sub_1C0784B94(v2, (uint64_t *)&unk_1ED762690);
    }
    else
    {
      v14 = sub_1C0782D14();
      v15(v14);
      sub_1C085E450();
      sub_1C078303C(v3, *(uint64_t (**)(uint64_t, uint64_t))(v23 + 8));
    }
    if ((*(_QWORD *)v25 & 0x100000000) != 0)
    {
      v20 = (id *)(v0 + OBJC_IVAR____TtC24IntelligencePlatformCore21BehaviorHistogramBase_state);
      sub_1C0775864();
      sub_1C07B88FC(*v20, sel_lookupUnsmoothedA_b_);
    }
    else
    {
      sub_1C07A3748(*(float *)v25);
      v16 = (id *)(v0 + OBJC_IVAR____TtC24IntelligencePlatformCore21BehaviorHistogramBase_state);
      sub_1C0775864();
      v17 = qword_1ED7580E0;
      v18 = *v16;
      if (v17 != -1)
        swift_once();
      sub_1C079B468(v18, sel_lookupSmoothedWithBucketCount_distanceScale_a_b_, v19);

    }
    sub_1C08518E8();
    sub_1C078AB6C(v21);
  }
  sub_1C077F074();
}

double sub_1C0851384()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  double v13;
  void (*v14)(uint64_t);
  uint64_t v15;
  double v16;
  void (*v17)(char *, uint64_t);
  uint64_t v19;

  v1 = sub_1C07ACF80((uint64_t *)&unk_1ED762690);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v19 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1C106ADE0();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v19 - v9;
  v11 = v0 + OBJC_IVAR____TtC24IntelligencePlatformCore21BehaviorHistogramBase_state;
  swift_beginAccess();
  v12 = type metadata accessor for DecayingHistogramState();
  sub_1C078A924(v11 + *(int *)(v12 + 20), (uint64_t)v3, (uint64_t *)&unk_1ED762690);
  if (sub_1C07B2D80((uint64_t)v3, 1, v4) == 1)
  {
    sub_1C0784B94((uint64_t)v3, (uint64_t *)&unk_1ED762690);
    return 1.0;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v10, v3, v4);
    v14 = *(void (**)(uint64_t))(v0
                                         + OBJC_IVAR____TtC24IntelligencePlatformCore21BehaviorHistogramBase_timeSource);
    v15 = swift_retain();
    v14(v15);
    swift_release();
    sub_1C106ACD8();
    v13 = 1.0;
    if (v16 > 0.0)
      v13 = exp2(v16 / -1209600.0);
    v17 = *(void (**)(char *, uint64_t))(v5 + 8);
    v17(v7, v4);
    v17(v10, v4);
  }
  return v13;
}

double sub_1C0851550()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  double v13;
  void (*v14)(uint64_t);
  uint64_t v15;
  double v16;
  void (*v17)(char *, uint64_t);
  uint64_t v19;

  v1 = sub_1C07ACF80((uint64_t *)&unk_1ED762690);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v19 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1C106ADE0();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v19 - v9;
  v11 = v0 + OBJC_IVAR____TtC24IntelligencePlatformCore21BehaviorHistogramBase_state;
  swift_beginAccess();
  v12 = type metadata accessor for DecayingHistogramState();
  sub_1C078A924(v11 + *(int *)(v12 + 20), (uint64_t)v3, (uint64_t *)&unk_1ED762690);
  if (sub_1C07B2D80((uint64_t)v3, 1, v4) == 1)
  {
    sub_1C0784B94((uint64_t)v3, (uint64_t *)&unk_1ED762690);
    return 1.0;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v10, v3, v4);
    v14 = *(void (**)(uint64_t))(v0
                                         + OBJC_IVAR____TtC24IntelligencePlatformCore21BehaviorHistogramBase_timeSource);
    v15 = swift_retain();
    v14(v15);
    swift_release();
    sub_1C106ACD8();
    v13 = 1.0;
    if (v16 > 0.0)
      v13 = exp2(v16 / -21600.0);
    v17 = *(void (**)(char *, uint64_t))(v5 + 8);
    v17(v7, v4);
    v17(v10, v4);
  }
  return v13;
}

double sub_1C085171C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  double v13;
  void (*v14)(uint64_t);
  uint64_t v15;
  double v16;
  void (*v17)(char *, uint64_t);
  uint64_t v19;

  v1 = sub_1C07ACF80((uint64_t *)&unk_1ED762690);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v19 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1C106ADE0();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v19 - v9;
  v11 = v0 + OBJC_IVAR____TtC24IntelligencePlatformCore21BehaviorHistogramBase_state;
  swift_beginAccess();
  v12 = type metadata accessor for DecayingHistogramState();
  sub_1C078A924(v11 + *(int *)(v12 + 20), (uint64_t)v3, (uint64_t *)&unk_1ED762690);
  if (sub_1C07B2D80((uint64_t)v3, 1, v4) == 1)
  {
    sub_1C0784B94((uint64_t)v3, (uint64_t *)&unk_1ED762690);
    return 1.0;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v10, v3, v4);
    v14 = *(void (**)(uint64_t))(v0
                                         + OBJC_IVAR____TtC24IntelligencePlatformCore21BehaviorHistogramBase_timeSource);
    v15 = swift_retain();
    v14(v15);
    swift_release();
    sub_1C106ACD8();
    v13 = 1.0;
    if (v16 > 0.0)
      v13 = exp2(v16 / -604800.0);
    v17 = *(void (**)(char *, uint64_t))(v5 + 8);
    v17(v7, v4);
    v17(v10, v4);
  }
  return v13;
}

void sub_1C08518E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  double v15;
  uint64_t v16;

  sub_1C0776838();
  v4 = v3;
  sub_1C07ACF80((uint64_t *)&unk_1ED762690);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1C077AE98();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  sub_1C078D30C();
  MEMORY[0x1E0C80A78](v10);
  sub_1C0782124();
  v11 = v0 + *v4;
  sub_1C0775864();
  v12 = sub_1C0782D0C();
  sub_1C078A924(v11 + *(int *)(v12 + 20), (uint64_t)v7, (uint64_t *)&unk_1ED762690);
  v13 = sub_1C0776854((uint64_t)v7);
  if (v14)
  {
    sub_1C07892D0(v13, (uint64_t *)&unk_1ED762690);
  }
  else
  {
    sub_1C077CF74(v2, (uint64_t)v7, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 32));
    sub_1C07A5BC0();
    sub_1C07B6608();
    sub_1C07785A8();
    sub_1C077C184();
    if (v15 > 0.0)
      sub_1C07AF540(v15, -2592000.0);
    sub_1C07786D0(v1);
    sub_1C07786D0(v2);
  }
  sub_1C078D424();
}

double sub_1C0851A20()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  double v13;
  void (*v14)(uint64_t);
  uint64_t v15;
  double v16;
  void (*v17)(char *, uint64_t);
  uint64_t v19;

  v1 = sub_1C07ACF80((uint64_t *)&unk_1ED762690);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v19 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1C106ADE0();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v19 - v9;
  v11 = v0 + OBJC_IVAR____TtC24IntelligencePlatformCore32CategoricalBehaviorHistogramBase_state;
  swift_beginAccess();
  v12 = type metadata accessor for DecayingHistogramState();
  sub_1C078A924(v11 + *(int *)(v12 + 20), (uint64_t)v3, (uint64_t *)&unk_1ED762690);
  if (sub_1C07B2D80((uint64_t)v3, 1, v4) == 1)
  {
    sub_1C0784B94((uint64_t)v3, (uint64_t *)&unk_1ED762690);
    return 1.0;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v10, v3, v4);
    v14 = *(void (**)(uint64_t))(v0
                                         + OBJC_IVAR____TtC24IntelligencePlatformCore32CategoricalBehaviorHistogramBase_timeSource);
    v15 = swift_retain();
    v14(v15);
    swift_release();
    sub_1C106ACD8();
    v13 = 1.0;
    if (v16 > 0.0)
      v13 = exp2(v16 / -15768000.0);
    v17 = *(void (**)(char *, uint64_t))(v5 + 8);
    v17(v7, v4);
    v17(v10, v4);
  }
  return v13;
}

void sub_1C0851BEC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  double v10;
  uint64_t v11;

  sub_1C07ACF80((uint64_t *)&unk_1ED762690);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C077AE98();
  sub_1C0788898();
  MEMORY[0x1E0C80A78](v6);
  sub_1C078D30C();
  MEMORY[0x1E0C80A78](v7);
  sub_1C0782124();
  sub_1C0775864();
  v8 = sub_1C0782D0C();
  sub_1C07AB6C8(v8);
  sub_1C0776854((uint64_t)v5);
  if (v9)
  {
    sub_1C0784B94((uint64_t)v5, (uint64_t *)&unk_1ED762690);
  }
  else
  {
    sub_1C077CF74(v1, (uint64_t)v5, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 32));
    sub_1C07A5BC0();
    sub_1C07B6608();
    sub_1C07785A8();
    sub_1C077C184();
    if (v10 > 0.0)
      sub_1C07AF540(v10, -3456000.0);
    sub_1C07786D0(v0);
    sub_1C07786D0(v1);
  }
  sub_1C0790E8C();
}

void sub_1C0851D20()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  double v10;
  uint64_t v11;

  sub_1C07ACF80((uint64_t *)&unk_1ED762690);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C077AE98();
  sub_1C0788898();
  MEMORY[0x1E0C80A78](v6);
  sub_1C078D30C();
  MEMORY[0x1E0C80A78](v7);
  sub_1C0782124();
  sub_1C0775864();
  v8 = sub_1C0782D0C();
  sub_1C07AB6C8(v8);
  sub_1C0776854((uint64_t)v5);
  if (v9)
  {
    sub_1C0784B94((uint64_t)v5, (uint64_t *)&unk_1ED762690);
  }
  else
  {
    sub_1C077CF74(v1, (uint64_t)v5, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 32));
    sub_1C07A5BC0();
    sub_1C07B6608();
    sub_1C07785A8();
    sub_1C077C184();
    if (v10 > 0.0)
      sub_1C07AF540(v10, -5184000.0);
    sub_1C07786D0(v0);
    sub_1C07786D0(v1);
  }
  sub_1C0790E8C();
}

uint64_t *sub_1C0851E54(uint64_t **a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t *v45;
  uint64_t v47;
  uint64_t *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD v54[5];
  _BYTE v55[40];
  __int128 v56[2];
  _BYTE v57[24];
  uint64_t v58[5];
  uint64_t v59[5];

  v53 = a4;
  v52 = a10;
  v51 = a9;
  v17 = *(_QWORD *)(a6 - 8);
  MEMORY[0x1E0C80A78](a1);
  sub_1C077AE40();
  v50 = v18;
  v20 = *(_QWORD *)(v19 - 8);
  MEMORY[0x1E0C80A78](v21);
  sub_1C077AED0();
  v49 = v22;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v23);
  v25 = (char *)&v47 - v24;
  v59[3] = v26;
  v59[4] = v27;
  v48 = sub_1C079DFC4(v59);
  (*(void (**)(uint64_t *, uint64_t **, uint64_t))(v17 + 32))(v48, a1, a6);
  v58[3] = a8;
  v58[4] = a11;
  v28 = sub_1C079DFC4(v58);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a8 - 8) + 32))(v28, a2, a8);
  sub_1C077CF74((uint64_t)v25, a3, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v20 + 32));
  sub_1C0784AC0((uint64_t)v58, (uint64_t)v57);
  sub_1C0784AC0((uint64_t)v59, (uint64_t)v56);
  sub_1C0784AC0((uint64_t)v58, (uint64_t)v55);
  sub_1C0852498((uint64_t)v55);
  sub_1C07B7110();
  MEMORY[0x1E0C80A78](v29);
  sub_1C0787978(v30, v31, v47);
  v32 = *a1;
  v33 = type metadata accessor for BehaviorDatabaseEventTracker();
  v54[4] = &off_1E7A0D6A8;
  v54[3] = v33;
  v54[0] = v32;
  type metadata accessor for BehaviorEventTimeIntervalCalculator();
  v34 = (_QWORD *)swift_allocObject();
  sub_1C0852498((uint64_t)v54);
  sub_1C07B7110();
  MEMORY[0x1E0C80A78](v35);
  sub_1C0787978(v36, v37, v47);
  v38 = *v32;
  v34[10] = v33;
  v34[11] = &off_1E7A0D6A8;
  v34[7] = v38;
  sub_1C077DD60(v56, (uint64_t)(v34 + 2));
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v54);
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v55);
  sub_1C0852498((uint64_t)v57);
  sub_1C07B7110();
  MEMORY[0x1E0C80A78](v39);
  sub_1C0787978(v40, v41, v47);
  v42 = *v32;
  v43 = v50;
  (*(void (**)(uint64_t, uint64_t *, uint64_t))(v17 + 16))(v50, v48, a6);
  v44 = v49;
  sub_1C077CF74(v49, (uint64_t)v25, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v20 + 16));
  v45 = sub_1C0852124(v43, v42, v44, v53, (uint64_t)v34, a6, a7, v51, v52);
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v57);
  (*(void (**)(char *, uint64_t))(v20 + 8))(v25, a7);
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v58);
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v59);
  return v45;
}

uint64_t *sub_1C0852124(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  double v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  double v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD v40[5];

  v37 = a8;
  v38 = a4;
  v39 = a5;
  v35 = a3;
  v36 = a9;
  v12 = *(_QWORD *)(a7 - 8);
  MEMORY[0x1E0C80A78](a1);
  v14 = (char *)&v35 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)&v35 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = MEMORY[0x1E0C80A78](v20);
  v23 = (char *)&v35 - v22;
  (*(void (**)(char *, double))(v16 + 32))((char *)&v35 - v22, v21);
  v24 = type metadata accessor for BehaviorDatabaseEventTracker();
  v40[3] = v24;
  v40[4] = &off_1E7A0D6A8;
  v40[0] = a2;
  type metadata accessor for BehaviorFeaturizer();
  v25 = (uint64_t *)swift_allocObject();
  v26 = sub_1C079D180((uint64_t)v40, v24);
  v27 = MEMORY[0x1E0C80A78](v26);
  v29 = (uint64_t *)((char *)&v35 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, double))(v30 + 16))(v29, v27);
  v31 = *v29;
  (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v19, v23, a6);
  v32 = v35;
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, v35, a7);
  v33 = sub_1C085231C((uint64_t)v19, v31, (uint64_t)v14, v38, v39, v25, a6, a7, v37, v36);
  (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v32, a7);
  (*(void (**)(char *, uint64_t))(v16 + 8))(v23, a6);
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v40);
  return v33;
}

uint64_t *sub_1C085231C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t *a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t *v18;
  uint64_t *v19;

  a6[5] = a7;
  a6[6] = a9;
  v18 = sub_1C079DFC4(a6 + 2);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a7 - 8) + 32))(v18, a1, a7);
  a6[15] = a8;
  a6[16] = a10;
  v19 = sub_1C079DFC4(a6 + 12);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a8 - 8) + 32))(v19, a3, a8);
  a6[24] = type metadata accessor for BehaviorEventTimeIntervalCalculator();
  a6[25] = (uint64_t)&off_1E7A12528;
  a6[21] = a5;
  a6[10] = type metadata accessor for BehaviorDatabaseEventTracker();
  a6[11] = (uint64_t)&off_1E7A0D6A8;
  a6[7] = a2;
  a6[19] = 0xD000000000000023;
  a6[20] = 0x80000001C10E5D00;
  a6[17] = a4;
  a6[18] = 0x413BAF8000000000;
  return a6;
}

uint64_t sub_1C0852414()
{
  return sub_1C084FE4C();
}

void sub_1C0852428()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 152) = 1;
}

void sub_1C085243C(uint64_t a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  uint64_t v2;

  sub_1C08384CC(v2, a2);
}

uint64_t sub_1C0852444(uint64_t a1, unint64_t a2)
{
  uint64_t v2;

  return sub_1C0788DAC(a1, a2, (uint64_t *)(v2 - 216));
}

uint64_t sub_1C0852478()
{
  uint64_t v0;
  char v1;
  uint64_t v2;

  *(_BYTE *)(v2 - 96) = v1;
  return v0;
}

uint64_t sub_1C085248C()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1C0852498(uint64_t a1)
{
  uint64_t v1;

  return sub_1C079D180(a1, v1);
}

uint64_t sub_1C08524A0()
{
  uint64_t v0;

  return *(_QWORD *)(v0 - 296);
}

void sub_1C08524AC(uint64_t *a1@<X0>, uint64_t **a2@<X8>)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t *v24;
  uint64_t v25;
  void (*v26)(_QWORD, _QWORD, _QWORD);
  uint64_t *v27;
  uint64_t *v28;
  uint64_t **v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  void (*v33)(os_log_t, uint64_t, uint64_t **);
  char v34;
  os_log_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  NSObject *v39;
  os_log_type_t v40;
  int v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  uint64_t v46;
  unint64_t v47;
  unint64_t v48;
  uint64_t v49;
  void *v50;
  os_log_type_t v51;
  _BOOL4 v52;
  uint64_t v53;
  _WORD *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t *v65;
  uint64_t v66;
  _UNKNOWN **v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t **v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t *v80;
  uint64_t **v81;
  NSObject *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t *v91;
  uint64_t v92;
  uint64_t **v93;
  uint64_t v94;
  uint64_t v95;
  void *v96;
  os_log_type_t v97;
  _WORD *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t isa;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  _QWORD *v107;
  uint64_t v108;
  void *v109;
  os_log_type_t v110;
  _WORD *v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t *v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t **v134;
  uint64_t *v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t *v139;
  uint64_t **v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t **v145;
  uint64_t *v146;
  void (*v147)(char *, uint64_t *, uint64_t **);
  uint64_t v148;
  char v149;
  void *v150;
  os_log_type_t v151;
  _WORD *v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t *v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t *v176;
  uint64_t **v177;
  uint64_t v178;
  uint64_t v179[2];
  uint64_t v180;
  uint64_t v181;
  char *v182;
  uint64_t *v183;
  uint64_t v184;
  char *v185;
  os_log_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t *v189;
  uint64_t **v190;
  void (*v191)(char *, uint64_t *, uint64_t **);
  uint64_t *v192;
  _QWORD v193[3];
  uint64_t v194;
  _UNKNOWN **v195;
  uint64_t v196;
  __int128 v197[2];
  __int128 v198[3];
  __int128 v199;
  uint64_t v200;
  __int128 v201;
  uint64_t v202;
  _UNKNOWN **v203;
  _UNKNOWN **v204;

  v3 = v2;
  v190 = a2;
  v5 = sub_1C07ACF80((uint64_t *)&unk_1ED762690);
  MEMORY[0x1E0C80A78](v5);
  sub_1C077AED0();
  v184 = v6;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v7);
  v185 = (char *)v179 - v8;
  v9 = sub_1C106ADE0();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  sub_1C077AED0();
  v187 = v11;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v12);
  v186 = (os_log_t)((char *)v179 - v13);
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v14);
  v182 = (char *)v179 - v15;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v16);
  v183 = (uint64_t *)((char *)v179 - v17);
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)v179 - v19;
  MEMORY[0x1E0C80A78](v21);
  v23 = (char *)v179 - v22;
  v192 = v3;
  v24 = (uint64_t *)v3[2];
  v25 = (uint64_t)v24 + OBJC_IVAR____TtC24IntelligencePlatformCore21CachedContextProvider_contextCacheStartDate;
  sub_1C0775864();
  v26 = *(void (**)(_QWORD, _QWORD, _QWORD))(v10 + 16);
  v188 = v25;
  sub_1C07B46A4((uint64_t)v23, v25);
  sub_1C085387C((unint64_t *)&qword_1ED755A40, MEMORY[0x1E0CB08B0]);
  LOBYTE(v25) = sub_1C07B7124();
  v181 = v10;
  v27 = *(uint64_t **)(v10 + 8);
  sub_1C078C850((uint64_t)v23);
  v189 = a1;
  sub_1C07B46A4((uint64_t)v20, (uint64_t)a1);
  v191 = v26;
  if ((v25 & 1) != 0)
  {
    v28 = v24;
    sub_1C078C850((uint64_t)v20);
    v29 = (uint64_t **)v9;
    goto LABEL_4;
  }
  v28 = v24;
  v30 = (uint64_t)v24 + OBJC_IVAR____TtC24IntelligencePlatformCore21CachedContextProvider_contextCacheEndDate;
  sub_1C0775864();
  v180 = v30;
  sub_1C07B46A4((uint64_t)v23, v30);
  v31 = sub_1C07B7124();
  sub_1C078C850((uint64_t)v23);
  sub_1C078C850((uint64_t)v20);
  v29 = (uint64_t **)v9;
  if ((v31 & 1) == 0)
  {
    v189 = v27;
    v82 = v192;
    sub_1C0775864();
    sub_1C078A924((uint64_t)&v82[20], (uint64_t)&v199, &qword_1EF632118);
    if (v200)
    {
      sub_1C0853864(&v199, &v201);
      sub_1C0853864(&v201, v190);
      return;
    }
    v94 = (uint64_t)v28;
    v179[0] = (uint64_t)&v82[20];
    sub_1C0784B94((uint64_t)&v199, &qword_1EF632118);
    if (qword_1ED760048 != -1)
      swift_once();
    v95 = sub_1C077585C();
    v179[1] = sub_1C079E000(v95, (uint64_t)qword_1ED78D800);
    v96 = (void *)sub_1C106F538();
    v97 = sub_1C1070384();
    if (sub_1C07758D8(v97))
    {
      v98 = (_WORD *)sub_1C0780FC8();
      sub_1C079A830(v98);
      sub_1C078F150(&dword_1C0771000, v99, v100, "CachedBehaviorFeaturizerProvider: Creating new featurizer since one was not already cached");
      sub_1C0776778();
    }

    v186 = v82 + 3;
    sub_1C0784AC0((uint64_t)&v82[3], (uint64_t)&v201);
    isa = (uint64_t)v82[18].isa;
    v101 = (uint64_t)v82[19].isa;
    sub_1C079D180((uint64_t)&v201, v202);
    sub_1C0792D70();
    MEMORY[0x1E0C80A78](v103);
    sub_1C0787978(v104, v105, v179[0]);
    v106 = OBJC_IVAR____TtC24IntelligencePlatformCore21CachedContextProvider_contextCacheEndDate;
    sub_1C077E35C();
    sub_1C0779758();
    sub_1C0783050();
    v187 = isa;
    v107 = sub_1C08535DC(v94, v106, v101, isa);
    _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)&v201);
    swift_release();
    v108 = (uint64_t)v185;
    sub_1C07F7D44();
    if (sub_1C07B2D80(v108, 1, (uint64_t)v29) == 1)
    {
      v191 = (void (*)(_QWORD, _QWORD, _QWORD))v107;
      v109 = (void *)sub_1C106F538();
      v110 = sub_1C10703A8();
      if (sub_1C07758D8(v110))
      {
        v111 = (_WORD *)sub_1C0780FC8();
        sub_1C079A830(v111);
        sub_1C078F150(&dword_1C0771000, v112, v113, "CachedBehaviorFeaturizerProvider: Creating new featurizer without cached context since the featurizer has no stored state indicating what interval it will query over.");
        sub_1C0776778();
      }

      v189 = (uint64_t *)sub_1C079B470();
      sub_1C079E294();
      sub_1C07B8908();
      sub_1C0790EA4(v114, (uint64_t)v198);
      sub_1C07A5BD0((uint64_t)&v82[13]);
      sub_1C07943B4((uint64_t)&v82[8]);
      sub_1C079A820();
      sub_1C0792D70();
      MEMORY[0x1E0C80A78](v115);
      sub_1C0787978(v116, v117, v179[0]);
      v118 = OBJC_IVAR____TtC24IntelligencePlatformCore21CachedContextProvider_contextCacheEndDate;
      v119 = type metadata accessor for BehaviorDatabaseHistogramKeyProvider(0);
      v194 = v119;
      v195 = &off_1E7A0D840;
      v193[0] = v118;
      sub_1C079C380();
      sub_1C07A2358();
      sub_1C07879A4();
      sub_1C0792D70();
      MEMORY[0x1E0C80A78](v120);
      sub_1C07A6804(v121, v122, v179[0]);
      v123 = *v29;
      qword_1ED78D598 = v119;
      unk_1ED78D5A0 = &off_1E7A0D840;
      qword_1ED78D580 = (uint64_t)v123;
      OBJC_IVAR____TtC24IntelligencePlatformCore10StateStore_config = MEMORY[0x1E0DEE9E0];
      sub_1C077DD60(v198, (uint64_t)&OBJC_IVAR____TtC24IntelligencePlatformCore23VirtualInteractionEvent_virtualInteraction);
      sub_1C077DD60(v197, (uint64_t)qword_1ED78D558);
      _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v193);
      _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)&v196);
      v124 = (uint64_t)v203;
      sub_1C079FD30((uint64_t)&v201);
      sub_1C0792D70();
      MEMORY[0x1E0C80A78](v125);
      sub_1C07A6804(v126, v127, v179[0]);
      sub_1C079D180((uint64_t)&v199, v200);
      sub_1C0792D70();
      MEMORY[0x1E0C80A78](v128);
      sub_1C0778564();
      v131 = v130 - v129;
      (*(void (**)(uint64_t))(v132 + 16))(v130 - v129);
      sub_1C0794D68();
      v133 = v187;
      sub_1C0783050();
      v134 = v29;
      v135 = v189;
      v139 = sub_1C0796188(v134, v131, (uint64_t)v198, v133, (uint64_t)v189, v136, v137, v138, v124, (uint64_t)&off_1E7A0D820, (uint64_t)&off_1E7A0D6A8);
      _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)&v199);
      _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)&v201);
      v140 = v190;
      v190[3] = v135;
      v140[4] = (uint64_t *)&off_1E7A0E760;
      v140[5] = (uint64_t *)&off_1E7A0E730;
      swift_release();
      *v140 = v139;
LABEL_25:
      v141 = (uint64_t)v185;
LABEL_26:
      sub_1C0784B94(v141, (uint64_t *)&unk_1ED762690);
      return;
    }
    v142 = v184;
    sub_1C078A924(v108, v184, (uint64_t *)&unk_1ED762690);
    if (sub_1C07B2D80(v142, 1, (uint64_t)v29) == 1)
    {
      sub_1C0784B94(v142, (uint64_t *)&unk_1ED762690);
LABEL_29:
      v143 = sub_1C079B470();
      v203 = &off_1E7A0E760;
      v204 = &off_1E7A0E730;
      v202 = v143;
      *(_QWORD *)&v201 = v107;
      v144 = v179[0];
      sub_1C0798650();
      sub_1C0783050();
      sub_1C085381C((uint64_t)&v201, v144);
      swift_endAccess();
      v145 = v190;
      v190[3] = (uint64_t *)v143;
      v145[4] = (uint64_t *)&off_1E7A0E760;
      v145[5] = (uint64_t *)&off_1E7A0E730;
      *v145 = v107;
      v141 = v108;
      goto LABEL_26;
    }
    v146 = v183;
    (*(void (**)(uint64_t *, uint64_t, uint64_t **))(v181 + 32))(v183, v142, v29);
    v147 = (void (*)(char *, uint64_t *, uint64_t **))v191;
    v191(v23, v188, v29);
    LODWORD(v188) = sub_1C106AD50();
    sub_1C07A5174((uint64_t)v23);
    v148 = (uint64_t)v182;
    v147(v182, v146, v29);
    if ((v188 & 1) != 0)
    {
      sub_1C07A5174(v148);
    }
    else
    {
      v147(v23, (uint64_t *)v180, v29);
      v149 = sub_1C106AD44();
      v146 = v189;
      ((void (*)(char *, uint64_t **))v189)(v23, v29);
      ((void (*)(uint64_t, uint64_t **))v146)(v148, v29);
      if ((v149 & 1) == 0)
      {
        sub_1C07A5174((uint64_t)v183);
        goto LABEL_29;
      }
    }
    v191 = (void (*)(_QWORD, _QWORD, _QWORD))v107;
    v188 = (uint64_t)v29;
    v150 = (void *)sub_1C106F538();
    v151 = sub_1C10703A8();
    if (sub_1C07758D8(v151))
    {
      v152 = (_WORD *)sub_1C0780FC8();
      sub_1C079A830(v152);
      sub_1C078F150(&dword_1C0771000, v153, v154, "CachedBehaviorFeaturizerProvider: Creating new featurizer without cached context since the featurizer's state doesn't match the cache provider.");
      sub_1C0776778();
    }

    v155 = sub_1C079B470();
    sub_1C079E294();
    sub_1C07B8908();
    sub_1C0790EA4(v156, (uint64_t)v198);
    sub_1C07A5BD0((uint64_t)&v82[13]);
    sub_1C07943B4((uint64_t)&v82[8]);
    sub_1C079A820();
    sub_1C0792D70();
    MEMORY[0x1E0C80A78](v157);
    sub_1C0787978(v158, v159, v179[0]);
    v160 = sub_1C0797C24();
    v194 = v160;
    v195 = &off_1E7A0D840;
    v193[0] = v150;
    sub_1C079C380();
    sub_1C07A2358();
    sub_1C07879A4();
    sub_1C0792D70();
    MEMORY[0x1E0C80A78](v161);
    sub_1C07A6804(v162, v163, v179[0]);
    v164 = *v29;
    v146[15] = v160;
    v146[16] = (uint64_t)&off_1E7A0D840;
    v146[12] = (uint64_t)v164;
    v146[17] = MEMORY[0x1E0DEE9E0];
    sub_1C077DD60(v198, (uint64_t)(v146 + 2));
    sub_1C077DD60(v197, (uint64_t)(v146 + 7));
    _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v193);
    sub_1C07BCD90();
    v165 = (uint64_t)v203;
    sub_1C079FD30((uint64_t)&v201);
    v192 = v179;
    sub_1C0792D70();
    MEMORY[0x1E0C80A78](v166);
    sub_1C07A6804(v167, v168, v179[0]);
    sub_1C07BC638();
    sub_1C0792D70();
    MEMORY[0x1E0C80A78](v169);
    sub_1C078F1E4(v170, v171, v179[0]);
    sub_1C0794D68();
    v172 = v187;
    swift_retain();
    v176 = sub_1C0796188(v29, (uint64_t)&off_1E7A0D840, (uint64_t)v198, v172, v155, v173, v174, v175, v165, (uint64_t)&off_1E7A0D820, (uint64_t)&off_1E7A0D6A8);
    _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)&v199);
    sub_1C07A1B54();
    v177 = v190;
    v190[3] = (uint64_t *)v155;
    v177[4] = (uint64_t *)&off_1E7A0E760;
    v177[5] = (uint64_t *)&off_1E7A0E730;
    swift_release();
    *v177 = v176;
    ((void (*)(uint64_t *, uint64_t))v189)(v183, v188);
    goto LABEL_25;
  }
LABEL_4:
  v32 = (uint64_t)v28 + OBJC_IVAR____TtC24IntelligencePlatformCore21CachedContextProvider_contextCacheEndDate;
  sub_1C0775864();
  v33 = (void (*)(os_log_t, uint64_t, uint64_t **))v191;
  v191(v23, v32, v29);
  v34 = sub_1C106AD44();
  sub_1C078AB78((uint64_t)v23);
  if ((v34 & 1) != 0)
  {
    sub_1C079379C((uint64_t)v23);
    v35 = v186;
    v33(v186, v188, v29);
    sub_1C106ACD8();
    sub_1C078AB78((uint64_t)v35);
    sub_1C078AB78((uint64_t)v23);
    sub_1C079379C((uint64_t)v23);
    v36 = v187;
    sub_1C079379C(v187);
    sub_1C106AD2C();
    sub_1C078AB78(v36);
    sub_1C08AD21C((uint64_t)v23, (uint64_t)v35);
    sub_1C078AB78((uint64_t)v35);
    ((void (*)(char *, uint64_t **))v27)(v23, v29);
    if (qword_1ED760048 != -1)
      swift_once();
    v37 = sub_1C077585C();
    sub_1C079E000(v37, (uint64_t)qword_1ED78D800);
    v38 = v192;
    swift_retain_n();
    v39 = sub_1C106F538();
    v40 = sub_1C1070378();
    v41 = v40;
    if (os_log_type_enabled(v39, v40))
    {
      v42 = swift_slowAlloc();
      v187 = swift_slowAlloc();
      *(_QWORD *)&v201 = v187;
      *(_DWORD *)v42 = 136315394;
      v185 = (char *)(v42 + 4);
      sub_1C078D44C((uint64_t)v23, v188);
      sub_1C085387C((unint64_t *)&qword_1ED7565B0, MEMORY[0x1E0CB08F0]);
      LODWORD(v188) = v41;
      v186 = v39;
      v43 = sub_1C079D2B0();
      v189 = v28;
      v45 = v44;
      sub_1C07A2FC4();
      *(_QWORD *)&v199 = sub_1C0788DAC(v43, v45, (uint64_t *)&v201);
      sub_1C10705AC();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v42 + 12) = 2080;
      sub_1C078D44C((uint64_t)v23, v32);
      v46 = sub_1C079D2B0();
      v48 = v47;
      sub_1C07A2FC4();
      *(_QWORD *)&v199 = sub_1C0788DAC(v46, v48, (uint64_t *)&v201);
      sub_1C10705AC();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C0771000, v186, (os_log_type_t)v188, "CachedBehaviorFeaturizerProvider: Moving cache forward to %s until %s", (uint8_t *)v42, 0x16u);
      swift_arrayDestroy();
      sub_1C0776778();
    }

    swift_release_n();
    sub_1C0784AC0((uint64_t)(v38 + 3), (uint64_t)&v201);
    v84 = v38[18];
    v83 = v38[19];
    sub_1C079D180((uint64_t)&v201, v202);
    sub_1C0792D70();
    MEMORY[0x1E0C80A78](v85);
    sub_1C0778564();
    v88 = (uint64_t *)(v87 - v86);
    (*(void (**)(uint64_t))(v89 + 16))(v87 - v86);
    v90 = *v88;
    sub_1C077E35C();
    sub_1C0779758();
    swift_retain();
    v91 = sub_1C08535DC((uint64_t)v28, v90, v83, v84);
    _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)&v201);
    swift_release();
    v92 = sub_1C079B470();
    v203 = &off_1E7A0E760;
    v204 = &off_1E7A0E730;
    v202 = v92;
    *(_QWORD *)&v201 = v91;
    sub_1C0798650();
    sub_1C0779758();
    sub_1C085381C((uint64_t)&v201, (uint64_t)(v38 + 20));
    swift_endAccess();
    v93 = v190;
    v190[3] = (uint64_t *)v92;
    v93[4] = (uint64_t *)&off_1E7A0E760;
    v93[5] = (uint64_t *)&off_1E7A0E730;
    *v93 = v91;
  }
  else
  {
    if (qword_1ED760048 != -1)
      swift_once();
    v49 = sub_1C077585C();
    sub_1C079E000(v49, (uint64_t)qword_1ED78D800);
    v50 = (void *)sub_1C106F538();
    v51 = sub_1C107039C();
    v52 = sub_1C07758D8(v51);
    v53 = (uint64_t)v192;
    if (v52)
    {
      v54 = (_WORD *)sub_1C0780FC8();
      sub_1C079A830(v54);
      sub_1C078F150(&dword_1C0771000, v55, v56, "CachedBehaviorFeaturizerProvider error: Received non-sequential date");
      sub_1C0776778();
    }

    v191 = (void (*)(_QWORD, _QWORD, _QWORD))sub_1C079B470();
    sub_1C079E294();
    sub_1C0784AC0(v53 + 24, (uint64_t)&v199);
    sub_1C0790EA4(v57, (uint64_t)v198);
    sub_1C07A5BD0(v53 + 104);
    sub_1C07943B4(v53 + 64);
    sub_1C079A820();
    sub_1C0792D70();
    MEMORY[0x1E0C80A78](v58);
    sub_1C0787978(v59, v60, v179[0]);
    v61 = sub_1C0797C24();
    v194 = v61;
    v195 = &off_1E7A0D840;
    v193[0] = v50;
    sub_1C079C380();
    sub_1C07A2358();
    sub_1C07879A4();
    sub_1C0792D70();
    MEMORY[0x1E0C80A78](v62);
    sub_1C07A6804(v63, v64, v179[0]);
    v65 = *v29;
    qword_1ED78D598 = v61;
    unk_1ED78D5A0 = &off_1E7A0D840;
    qword_1ED78D580 = (uint64_t)v65;
    OBJC_IVAR____TtC24IntelligencePlatformCore10StateStore_config = MEMORY[0x1E0DEE9E0];
    sub_1C077DD60(v198, (uint64_t)&OBJC_IVAR____TtC24IntelligencePlatformCore23VirtualInteractionEvent_virtualInteraction);
    sub_1C077DD60(v197, (uint64_t)qword_1ED78D558);
    _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v193);
    sub_1C07BCD90();
    v66 = *(_QWORD *)(v53 + 144);
    v67 = v203;
    sub_1C079FD30((uint64_t)&v201);
    v192 = v179;
    sub_1C0792D70();
    MEMORY[0x1E0C80A78](v68);
    sub_1C0778564();
    v71 = (uint64_t **)(v70 - v69);
    (*(void (**)(uint64_t))(v72 + 16))(v70 - v69);
    sub_1C07BC638();
    sub_1C0792D70();
    MEMORY[0x1E0C80A78](v73);
    sub_1C078F1E4(v74, v75, v179[0]);
    sub_1C0794D68();
    swift_retain();
    v178 = (uint64_t)v67;
    v76 = (uint64_t *)v191;
    v80 = sub_1C0796188(v71, v53, (uint64_t)v198, v66, (uint64_t)v191, v77, v78, v79, v178, (uint64_t)&off_1E7A0D820, (uint64_t)&off_1E7A0D6A8);
    _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)&v199);
    sub_1C07A1B54();
    v81 = v190;
    v190[3] = v76;
    v81[4] = (uint64_t *)&off_1E7A0E760;
    v81[5] = (uint64_t *)&off_1E7A0E730;
    *v81 = v80;
  }
}

uint64_t sub_1C0853474()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  __int128 v5;
  __int128 v6;
  __int128 v7;

  swift_beginAccess();
  if (!*(_QWORD *)(v0 + 184)
    || (sub_1C0853A7C(v0 + 160, (uint64_t)&v5),
        v2 = *((_QWORD *)&v6 + 1),
        v3 = *((_QWORD *)&v7 + 1),
        sub_1C07A9480(&v5, *((uint64_t *)&v6 + 1)),
        (*(void (**)(uint64_t, uint64_t))(v3 + 16))(v2, v3),
        result = _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)&v5),
        !v1))
  {
    v6 = 0u;
    v7 = 0u;
    v5 = 0u;
    swift_beginAccess();
    sub_1C085381C((uint64_t)&v5, v0 + 160);
    return swift_endAccess();
  }
  return result;
}

uint64_t sub_1C0853548()
{
  uint64_t v0;

  swift_release();
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0(v0 + 24);
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0(v0 + 64);
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0(v0 + 104);
  swift_release();
  swift_release();
  sub_1C0784B94(v0 + 160, &qword_1EF632118);
  return v0;
}

uint64_t sub_1C085359C()
{
  sub_1C0853548();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for CachedBehaviorFeaturizerProvider()
{
  return objc_opt_self();
}

_QWORD *sub_1C08535DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  double v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  double v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  double v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  _QWORD v31[5];
  _BYTE v32[24];
  uint64_t v33;
  __int128 v34[2];
  _BYTE v35[24];
  uint64_t v36;
  _QWORD v37[5];
  _QWORD v38[5];

  v38[3] = type metadata accessor for CachedContextProvider();
  v38[4] = &off_1E7A11A88;
  v38[0] = a1;
  v8 = type metadata accessor for BehaviorDatabaseEventTracker();
  v37[3] = v8;
  v37[4] = &off_1E7A0D6A8;
  v37[0] = a2;
  sub_1C0784AC0((uint64_t)v37, (uint64_t)v35);
  sub_1C0784AC0((uint64_t)v38, (uint64_t)v34);
  sub_1C0784AC0((uint64_t)v37, (uint64_t)v32);
  v9 = sub_1C079D180((uint64_t)v32, v33);
  v10 = MEMORY[0x1E0C80A78](v9);
  v12 = (_QWORD *)((char *)v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, double))(v13 + 16))(v12, v10);
  v14 = *v12;
  v31[4] = &off_1E7A0D6A8;
  v31[3] = v8;
  v31[0] = v14;
  type metadata accessor for BehaviorEventTimeIntervalCalculator();
  v15 = (_QWORD *)swift_allocObject();
  v16 = sub_1C079D180((uint64_t)v31, v8);
  v17 = MEMORY[0x1E0C80A78](v16);
  v19 = (_QWORD *)((char *)v31 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, double))(v20 + 16))(v19, v17);
  v21 = *v19;
  v15[10] = v8;
  v15[11] = &off_1E7A0D6A8;
  v15[7] = v21;
  sub_1C077DD60(v34, (uint64_t)(v15 + 2));
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v31);
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v32);
  v22 = sub_1C079D180((uint64_t)v35, v36);
  v23 = MEMORY[0x1E0C80A78](v22);
  v25 = (_QWORD *)((char *)v31 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, double))(v26 + 16))(v25, v23);
  v27 = *v25;
  v28 = v38[0];
  swift_retain();
  swift_retain();
  v29 = sub_1C08538B8(v28, v27, a3, a4, (uint64_t)v15);
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v35);
  swift_release();
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v37);
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v38);
  return v29;
}

uint64_t sub_1C085381C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1C07ACF80(&qword_1EF632118);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

_OWORD *sub_1C0853864(__int128 *a1, _OWORD *a2)
{
  __int128 v2;
  __int128 v3;

  v2 = *a1;
  v3 = a1[2];
  a2[1] = a1[1];
  a2[2] = v3;
  *a2 = v2;
  return a2;
}

void sub_1C085387C(unint64_t *a1, uint64_t a2)
{
  uint64_t v4;

  if (!*a1)
  {
    v4 = sub_1C106ADE0();
    atomic_store(MEMORY[0x1C3BA8174](a2, v4), a1);
  }
  sub_1C0778534();
}

_QWORD *sub_1C08538B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v10;
  uint64_t v11;
  double v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD v19[3];
  uint64_t v20;
  _UNKNOWN **v21;

  v20 = type metadata accessor for BehaviorDatabaseEventTracker();
  v21 = &off_1E7A0D6A8;
  v19[0] = a2;
  type metadata accessor for BehaviorFeaturizer();
  v10 = (_QWORD *)swift_allocObject();
  v11 = sub_1C079D180((uint64_t)v19, v20);
  v12 = MEMORY[0x1E0C80A78](v11);
  v14 = (_QWORD *)((char *)&v19[-1] - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, double))(v15 + 16))(v14, v12);
  v16 = sub_1C08539B0(a1, *v14, a3, a4, a5, v10);
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v19);
  return v16;
}

_QWORD *sub_1C08539B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, _QWORD *a6)
{
  a6[5] = type metadata accessor for CachedContextProvider();
  a6[6] = &off_1E7A11A88;
  a6[2] = a1;
  a6[15] = type metadata accessor for CachedBehaviorDatabaseHistogramManager();
  a6[16] = &off_1E7A0D820;
  a6[12] = a3;
  a6[24] = type metadata accessor for BehaviorEventTimeIntervalCalculator();
  a6[25] = &off_1E7A12528;
  a6[21] = a5;
  a6[10] = type metadata accessor for BehaviorDatabaseEventTracker();
  a6[11] = &off_1E7A0D6A8;
  a6[7] = a2;
  a6[19] = 0xD000000000000023;
  a6[20] = 0x80000001C10E5D00;
  a6[17] = a4;
  a6[18] = 0x413BAF8000000000;
  return a6;
}

uint64_t sub_1C0853A7C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  *(_OWORD *)(a2 + 32) = *(_OWORD *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

void sub_1C0853AC0(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5[2];

  v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    sub_1C0861C5C();
    v2 = v3;
  }
  v4 = *(_QWORD *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v4;
  sub_1C08612D4(v5);
  *a1 = v2;
}

void *sub_1C0853B28()
{
  return &unk_1E79FBF60;
}

void sub_1C0853B34(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1C0853B58()
{
  return type metadata accessor for TimeOfDayBehaviorHistogram(0);
}

void sub_1C0853C9C()
{
  NSObject *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint8_t *v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(uint64_t, uint64_t);
  uint64_t v29;
  uint64_t (*v30)(uint64_t, char *, uint64_t);
  uint64_t v31;
  NSObject *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void (*v41)(uint64_t, uint64_t, uint64_t);
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  int v45;
  int v46;
  uint64_t v47;
  uint64_t v48;
  void (*v49)(char *, uint64_t, uint64_t);
  uint64_t v50;
  uint64_t v51;
  void *v52;
  void *v53;
  uint64_t v54;
  NSObject *v55;
  int v56;
  uint8_t *v57;
  uint64_t v58;
  uint64_t *i;
  uint64_t v60;
  uint64_t v61;
  void (*v62)(uint64_t, uint64_t);
  unint64_t v63;
  unint64_t v64;
  uint64_t v65;
  uint64_t v66;
  void (*v67)(char *, uint64_t, uint64_t);
  uint64_t v68;
  id v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t *v72;
  uint64_t v73;
  void *v74;
  NSObject *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  NSObject *v82;
  os_log_type_t v83;
  uint64_t v84;
  uint64_t v85;
  unint64_t v86;
  uint8_t *v87;
  uint64_t v88;
  unint64_t v89;
  unint64_t v90;
  uint64_t v91;
  _BYTE *v92;
  uint64_t v93;
  uint64_t *v94;
  uint64_t v95;
  uint64_t v96;
  void (*v97)(uint64_t, uint64_t);
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  void (*v101)(uint64_t, uint64_t, uint64_t);
  uint64_t v102;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  _QWORD *v106;
  uint64_t v107;
  id v108;
  uint64_t v109;
  uint8_t *v110;
  os_log_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  id v118;

  sub_1C077681C();
  v5 = v4;
  v109 = v6;
  v110 = v7;
  v106 = v9;
  v107 = v8;
  sub_1C07ACF80((uint64_t *)&unk_1ED762690);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v10);
  sub_1C0862E70(v11, v98);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v98 - v13;
  v15 = sub_1C0780478();
  sub_1C077591C();
  MEMORY[0x1E0C80A78](v16);
  sub_1C0780698();
  v18 = MEMORY[0x1E0C80A78](v17);
  v19 = MEMORY[0x1E0C80A78](v18);
  v20 = MEMORY[0x1E0C80A78](v19);
  v22 = (char *)&v98 - v21;
  MEMORY[0x1E0C80A78](v20);
  sub_1C0789AD4();
  v25 = *(_QWORD *)(v5 + 16);
  if (!v25)
  {
LABEL_27:
    sub_1C077F074();
    return;
  }
  v103 = v24;
  v104 = v14;
  v102 = v23;
  v111 = v0;
  v26 = *(_QWORD *)(v5 + 40);
  v27 = sub_1C07796E8();
  v114 = v15;
  v28 = *(void (**)(uint64_t, uint64_t))(v26 + 64);
  sub_1C077B694();
  v28(v27, v26);
  v29 = v114;
  sub_1C07768A0();
  v113 = v3;
  v30 = *(uint64_t (**)(uint64_t, char *, uint64_t))(v3 + 32);
  v31 = v30(v2, v22, v29);
  MEMORY[0x1E0C80A78](v31);
  v112 = v2;
  *(&v98 - 2) = v2;
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  v32 = v111;
  sub_1C0D2F0D0((uint64_t (*)(__int128 *))sub_1C0861058, (uint64_t)(&v98 - 4), v5);
  v34 = *(_QWORD *)(v33 + 16);
  swift_bridgeObjectRelease();
  v35 = v5;
  if (v34 != v25)
  {
    if (qword_1ED760048 != -1)
      swift_once();
    v54 = sub_1C106F544();
    sub_1C079E000(v54, (uint64_t)qword_1ED78D800);
    swift_bridgeObjectRetain_n();
    v55 = sub_1C106F538();
    v56 = sub_1C107039C();
    if (os_log_type_enabled(v55, (os_log_type_t)v56))
    {
      LODWORD(v109) = v56;
      v111 = v55;
      v57 = (uint8_t *)sub_1C0775854();
      v108 = (id)sub_1C0775854();
      v118 = v108;
      v110 = v57;
      *(_DWORD *)v57 = 136315138;
      v117 = MEMORY[0x1E0DEE9D8];
      sub_1C09D331C();
      v58 = v117;
      for (i = (uint64_t *)(v35 + 40); ; i += 2)
      {
        v60 = *i;
        v61 = sub_1C07796E8();
        v62 = *(void (**)(uint64_t, uint64_t))(v60 + 64);
        sub_1C077B694();
        v62(v61, v60);
        sub_1C07768A0();
        v117 = v58;
        v63 = *(_QWORD *)(v58 + 16);
        if (v63 >= *(_QWORD *)(v58 + 24) >> 1)
        {
          sub_1C09D331C();
          v58 = v117;
        }
        *(_QWORD *)(v58 + 16) = v63 + 1;
        v64 = v58
            + ((*(unsigned __int8 *)(v113 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v113 + 80))
            + *(_QWORD *)(v113 + 72) * v63;
        v65 = v114;
        v30(v64, v1, v114);
        if (!--v25)
        {
          v87 = v110;
          v88 = MEMORY[0x1C3BA683C](v58, v65);
          v90 = v89;
          swift_release();
          v117 = sub_1C0788DAC(v88, v90, (uint64_t *)&v118);
          sub_1C10705AC();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_1C0771000, v111, (os_log_type_t)v109, "Mismatch histogram behavior types. Skipping digest of histograms: %s", v87, 0xCu);
          swift_arrayDestroy();
          sub_1C0776778();
        }
      }
    }

    swift_bridgeObjectRelease_n();
    v91 = v113;
    sub_1C0861074();
    sub_1C0775810();
    *v92 = 1;
    swift_willThrow();
    sub_1C0779750(v112, *(uint64_t (**)(uint64_t, uint64_t))(v91 + 8));
    goto LABEL_27;
  }
  v111 = v32;
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  v36 = (uint64_t *)(v5 + 40);
  v37 = v25;
  v38 = v109;
  do
  {
    v39 = *v36;
    v40 = sub_1C07796E8();
    v41 = *(void (**)(uint64_t, uint64_t, uint64_t))(v39 + 128);
    sub_1C077B694();
    v41(v38, v40, v39);
    sub_1C07768A0();
    v36 += 2;
    --v37;
  }
  while (v37);
  swift_bridgeObjectRelease();
  v42 = v113;
  v43 = v103;
  v44 = v114;
  v101 = *(void (**)(uint64_t, uint64_t, uint64_t))(v113 + 16);
  v101(v103, v112, v114);
  v45 = (*(uint64_t (**)(uint64_t, uint64_t))(v42 + 88))(v43, v44);
  v46 = *MEMORY[0x1E0D3C0B0];
  v47 = (uint64_t)v110;
  v105 = v35;
  if (v45 == v46)
  {
    v48 = sub_1C077AE98();
    v49 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v48 - 8) + 16);
    v50 = (uint64_t)v104;
    v49(v104, v107, v48);
    sub_1C0780FD4(v50);
    v51 = (uint64_t)v108;
    v49((char *)v108, v38, v48);
    sub_1C0780FD4(v51);
    sub_1C08AD330();
    v53 = v52;
    sub_1C0781B00(v51);
    sub_1C0781B00(v50);
  }
  else
  {
    v100 = v106[3];
    v99 = v106[4];
    sub_1C07A9480(v106, v100);
    v66 = sub_1C077AE98();
    v67 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v66 - 8) + 16);
    v68 = (uint64_t)v104;
    v67(v104, v107, v66);
    sub_1C07863D0(v68);
    v69 = v108;
    v70 = sub_1C07AB6F8();
    ((void (*)(uint64_t))v67)(v70);
    sub_1C07863D0((uint64_t)v69);
    v53 = (void *)(*(uint64_t (**)(uint64_t, id, uint64_t, uint64_t))(v99 + 24))(v68, v69, v112, v100);
    sub_1C0781B00((uint64_t)v69);
    sub_1C0781B00(v68);
    (*(void (**)(uint64_t, uint64_t))(v113 + 8))(v43, v114);
  }
  v106 = (_QWORD *)OBJC_IVAR____TtC24IntelligencePlatformCore21CachedContextProvider_lastBehaviorEventDigested;
  *(_QWORD *)(v47 + OBJC_IVAR____TtC24IntelligencePlatformCore21CachedContextProvider_lastBehaviorEventDigested) = 0;
  swift_release();
  v71 = sub_1C07AB530();
  *(_QWORD *)(v71 + 16) = 0;
  v72 = (uint64_t *)(v71 + 16);
  v73 = sub_1C07AB530();
  *(_QWORD *)(v73 + 16) = 0;
  v74 = (void *)MEMORY[0x1C3BA79F4]();
  v108 = v53;
  v109 = v73;
  v75 = v111;
  v107 = v71;
  sub_1C085C230(v53, v112, v105, v38, v47, v73, v71);
  v111 = v75;
  if (!v75)
  {
    objc_autoreleasePoolPop(v74);
    sub_1C0775864();
    v76 = *v72;
    v77 = v114;
    if (*v72 > 0)
    {
      sub_1C0775864();
      v78 = *(_QWORD *)(v73 + 16);
      v79 = v112;
      if (qword_1ED760048 != -1)
        swift_once();
      v80 = sub_1C106F544();
      sub_1C079E000(v80, (uint64_t)qword_1ED78D800);
      v81 = v102;
      v101(v102, v79, v77);
      v82 = sub_1C106F538();
      v83 = sub_1C1070378();
      if (os_log_type_enabled(v82, v83))
      {
        sub_1C077E6D8((double)v76, 10000.0);
        sub_1C07BC228();
        v84 = swift_slowAlloc();
        v116 = sub_1C0775854();
        *(_DWORD *)v84 = 136315394;
        sub_1C0794BAC((unint64_t *)&qword_1ED744A68, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3C130], MEMORY[0x1E0D3C168]);
        v85 = sub_1C1070C0C();
        v115 = sub_1C0788DAC(v85, v86, &v116);
        sub_1C10705AC();
        sub_1C077960C();
        (*(void (**)(uint64_t, uint64_t))(v113 + 8))(v81, v114);
        *(_WORD *)(v84 + 12) = 2048;
        v115 = v78;
        sub_1C10705AC();
        _os_log_impl(&dword_1C0771000, v82, v83, "[tracking %s]: Skipped %f%% behavior events during digest due to missing context", (uint8_t *)v84, 0x16u);
        swift_arrayDestroy();
        sub_1C0776778();
      }
      sub_1C0779750(v81, *(uint64_t (**)(uint64_t, uint64_t))(v113 + 8));

    }
    *(_QWORD *)((char *)v106 + v47) = 0;
    swift_release();
    v93 = v105;
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    v94 = (uint64_t *)(v93 + 40);
    do
    {
      v95 = *v94;
      v96 = sub_1C07796E8();
      v97 = *(void (**)(uint64_t, uint64_t))(v95 + 136);
      sub_1C077B694();
      v97(v96, v95);
      sub_1C07768A0();
      v94 += 2;
      --v25;
    }
    while (v25);

    swift_bridgeObjectRelease();
    sub_1C0779750(v112, *(uint64_t (**)(uint64_t, uint64_t))(v113 + 8));
    swift_release();
    swift_release();
    goto LABEL_27;
  }
  objc_autoreleasePoolPop(v74);
  __break(1u);
}

void sub_1C0854588()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t AssociatedTypeWitness;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  double v17;
  uint64_t v18;
  char *v19;
  void (*v20)(uint64_t, _QWORD, uint64_t, uint64_t, double);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD v39[5];
  char v40;
  _QWORD v41[5];
  unsigned __int8 v42;

  sub_1C077681C();
  v38 = v2;
  v4 = v3;
  v6 = v5;
  v36 = v7;
  v37 = v8;
  sub_1C07DFF44(v8, (uint64_t)v41);
  v33 = v41[0];
  v32 = v41[1];
  v31 = v41[2];
  v30 = v41[3];
  v29 = v41[4];
  v28 = v42;
  v35 = *(_QWORD *)(v4 + 16);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v10 = sub_1C1070564();
  sub_1C0779CC0();
  MEMORY[0x1E0C80A78](v11);
  sub_1C077AF80();
  v14 = v12 - v13;
  MEMORY[0x1E0C80A78](v15);
  sub_1C0789AD4();
  v34 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v17 = MEMORY[0x1E0C80A78](v16);
  v19 = (char *)&v25 - v18;
  v20 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t, double))(v4 + 104);
  v21 = v38;
  v38 = v6;
  v20(v21, 0, v6, v4, v17);
  if (sub_1C07B2D80(v1, 1, AssociatedTypeWitness) == 1)
  {
    (*(void (**)(uint64_t, uint64_t))(v0 + 8))(v1, v10);
  }
  else
  {
    v26 = v0;
    v27 = v10;
    v22 = v34;
    (*(void (**)(char *, uint64_t, uint64_t))(v34 + 32))(v19, v1, AssociatedTypeWitness);
    (*(void (**)(uint64_t, char *, uint64_t))(v22 + 16))(v14, v19, AssociatedTypeWitness);
    v23 = sub_1C07B2D8C(v14, 0, 1, AssociatedTypeWitness);
    v39[0] = v33;
    v39[1] = v32;
    v39[2] = v31;
    v39[3] = v30;
    v39[4] = v29;
    v40 = v28;
    sub_1C07AB328(v23, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1C0826EB0);
    sub_1C09012CC(v14, (uint64_t)v39, v36 | ((HIDWORD(v36) & 1) << 32), v38, v35);
    sub_1C07AB328(v24, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1C0826F50);
    sub_1C07786F0(v14, *(uint64_t (**)(uint64_t, _QWORD))(v26 + 8));
    sub_1C0862F3C();
  }
  sub_1C078210C();
  sub_1C077F074();
}

void sub_1C085481C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t AssociatedTypeWitness;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  double v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  _QWORD v19[2];
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  _QWORD v31[5];
  char v32;
  _QWORD v33[5];
  unsigned __int8 v34;

  sub_1C077681C();
  v30 = v3;
  v5 = v4;
  v7 = v6;
  v29 = v8;
  v27 = v9;
  sub_1C07DFF44(v9, (uint64_t)v33);
  v24 = v33[1];
  v25 = v33[0];
  v23 = v33[2];
  v22 = v33[3];
  v21 = v33[4];
  v20 = v34;
  v28 = *(_QWORD *)(v5 + 16);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v11 = sub_1C1070564();
  sub_1C0779CC0();
  MEMORY[0x1E0C80A78](v12);
  sub_1C078D458();
  MEMORY[0x1E0C80A78](v13);
  sub_1C077E368();
  v26 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v15 = MEMORY[0x1E0C80A78](v14);
  v17 = (char *)v19 - v16;
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t, double))(v5 + 104))(v30, 0, v7, v5, v15);
  if (sub_1C07B2D80(v2, 1, AssociatedTypeWitness) == 1)
  {
    (*(void (**)(uint64_t, uint64_t))(v0 + 8))(v2, v11);
  }
  else
  {
    v19[1] = v0;
    v19[0] = v11;
    v18 = v26;
    (*(void (**)(char *, uint64_t, uint64_t))(v26 + 32))(v17, v2, AssociatedTypeWitness);
    v31[0] = v25;
    v31[1] = v24;
    v31[2] = v23;
    v31[3] = v22;
    v31[4] = v21;
    v32 = v20;
    (*(void (**)(uint64_t, char *, uint64_t))(v18 + 16))(v1, v17, AssociatedTypeWitness);
    sub_1C07B2D8C(v1, 0, 1, AssociatedTypeWitness);
    sub_1C08384CC(v27, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1C0826EB0);
    sub_1C09011B8((uint64_t)v31, v1, v29 | ((HIDWORD(v29) & 1) << 32), v7, v28);
    sub_1C077592C();
    sub_1C0779760();
  }
  sub_1C078210C();
  sub_1C077F074();
}

uint64_t sub_1C0854A58(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1C0854A90 + 4 * byte_1C107CAA0[a1]))(0x6144664F656D6954, 0xE900000000000079);
}

uint64_t sub_1C0854A90()
{
  return 0x656557664F796144;
}

unint64_t sub_1C0854AA8()
{
  return 0xD000000000000011;
}

uint64_t sub_1C0854B00()
{
  return 0x636F4C6F7263694DLL;
}

uint64_t sub_1C0854B24()
{
  return 0x6369666963657053;
}

uint64_t sub_1C0854B48()
{
  return 0x6547657372616F43;
}

uint64_t sub_1C0854B6C()
{
  return 0x6F6547656772614CLL;
}

void sub_1C0854B8C()
{
  JUMPOUT(0x1C0854BA0);
}

uint64_t sub_1C0854BAC()
{
  return 1766222167;
}

uint64_t sub_1C0854BBC()
{
  return 0x646F4D7375636F46;
}

uint64_t sub_1C0854BD4()
{
  return 0x74536E6F69746F4DLL;
}

uint64_t sub_1C0854BF4()
{
  return 0x6144664F74726150;
}

uint64_t sub_1C0854C08()
{
  return 0x6557664F74726150;
}

void sub_1C0854C24()
{
  __asm { BR              X8 }
}

void sub_1C0854EF8()
{
  sub_1C1070E04();
  sub_1C0778534();
}

void sub_1C0854F18()
{
  sub_1C077C06C();
  sub_1C1070E04();
  sub_1C077AE74();
  sub_1C0775804();
}

void sub_1C0854F44()
{
  sub_1C1070E04();
  sub_1C0778534();
}

void sub_1C0854F64(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;

  *a1 = sub_1C07D9350(*v1);
  sub_1C0778534();
}

void sub_1C0854F88(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E79FBF60;
}

uint64_t sub_1C0854F98()
{
  unsigned __int8 *v0;

  return sub_1C0854A58(*v0);
}

void sub_1C0854FA8()
{
  sub_1C085DA24();
}

void sub_1C0854FC0()
{
  sub_1C0854F44();
}

double sub_1C0854FCC()
{
  return 15768000.0;
}

double sub_1C0854FD8()
{
  return 604800.0;
}

double sub_1C0854FE4()
{
  return 5184000.0;
}

double sub_1C0854FF0()
{
  return 2592000.0;
}

double sub_1C0854FFC()
{
  return 3456000.0;
}

double sub_1C0855008()
{
  return 1209600.0;
}

double sub_1C0855014()
{
  return 21600.0;
}

uint64_t sub_1C0855020()
{
  if (qword_1ED7580E0 != -1)
    swift_once();
  return (unsigned __int16)word_1ED78D770;
}

uint64_t sub_1C0855060()
{
  return 200;
}

uint64_t sub_1C0855068()
{
  return 7;
}

unint64_t sub_1C0855074(_QWORD *a1, SEL *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  id *v7;
  id v8;
  unint64_t v9;

  sub_1C07BBD98();
  sub_1C0779CC0();
  MEMORY[0x1E0C80A78](v6);
  sub_1C07785B8();
  v7 = (id *)(v2 + *a1);
  sub_1C0775864();
  v8 = objc_msgSend(*v7, *a2);
  sub_1C106AFFC();

  v9 = sub_1C106B008();
  sub_1C0783058(*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
  if ((v9 & 0x8000000000000000) != 0)
  {
    sub_1C07A3684();
    sub_1C0789DAC();
    goto LABEL_6;
  }
  if (v9 >= 0x10000)
  {
    sub_1C07A3684();
    sub_1C07A8544();
LABEL_6:
    sub_1C07B15F8();
    sub_1C078A734();
  }
  return v9;
}

void sub_1C0855180()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  _QWORD v24[2];
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _BYTE v31[40];
  uint64_t v32[5];
  uint64_t v33;

  sub_1C077AE5C();
  v25 = v1;
  v26 = v5;
  v28 = v6;
  v33 = v7;
  v9 = v8;
  v11 = v10;
  v12 = sub_1C0780478();
  v29 = *(_QWORD *)(v12 - 8);
  v30 = v12;
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v13);
  sub_1C077864C();
  sub_1C0782D0C();
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v14);
  sub_1C078AB94();
  MEMORY[0x1E0C80A78](v15);
  sub_1C077E368();
  v16 = (void *)MEMORY[0x1C3BA79F4]();
  sub_1C106A708();
  sub_1C077B5BC();
  sub_1C106A6FC();
  sub_1C0794BAC(&qword_1ED757878, (uint64_t (*)(uint64_t))type metadata accessor for DecayingHistogramState, (uint64_t)&unk_1C1087D90);
  v27 = v11;
  sub_1C106A6F0();
  swift_release();
  objc_autoreleasePoolPop(v16);
  if (v2)
  {
    _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0(v26);
    _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0(v28);
    sub_1C07B9EEC();
    sub_1C07B3374(v27, v9);
  }
  else
  {
    sub_1C080ABC4(v4, v0, (uint64_t (*)(_QWORD))type metadata accessor for DecayingHistogramState);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v29 + 16))(v3, v33, v30);
    sub_1C07B68A8();
    v17 = v26;
    sub_1C0784AC0(v26, (uint64_t)v31);
    sub_1C079D180((uint64_t)v32, v32[3]);
    v24[1] = v24;
    sub_1C0792D70();
    MEMORY[0x1E0C80A78](v18);
    sub_1C0778564();
    v19 = v9;
    v22 = (uint64_t *)(v21 - v20);
    (*(void (**)(uint64_t))(v23 + 16))(v21 - v20);
    sub_1C08620D8(v0, v3, *v22, (uint64_t)v31, v25);
    _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v32);
    sub_1C07B3374(v27, v19);
    _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0(v17);
    _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v16);
    sub_1C07B9EEC();
    sub_1C07B1F90(v4, (uint64_t (*)(_QWORD))type metadata accessor for DecayingHistogramState);
  }
  sub_1C07757D0();
}

uint64_t sub_1C08553A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_1C0782D0C();
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v3);
  sub_1C077F090();
  sub_1C077B5BC();
  sub_1C106A768();
  v4 = v0 + OBJC_IVAR____TtC24IntelligencePlatformCore21BehaviorHistogramBase_state;
  sub_1C0775864();
  sub_1C080ABC4(v4, v2, (uint64_t (*)(_QWORD))type metadata accessor for DecayingHistogramState);
  sub_1C0794BAC(&qword_1ED757870, (uint64_t (*)(uint64_t))type metadata accessor for DecayingHistogramState, (uint64_t)&unk_1C1087D68);
  sub_1C106A75C();
  sub_1C0862E90();
  swift_release();
  return v1;
}

void sub_1C0855478()
{
  sub_1C08554C0();
}

void sub_1C085549C()
{
  sub_1C08554C0();
}

void sub_1C08554C0()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _BYTE *v23;

  sub_1C077AE5C();
  v3 = v2;
  v4 = v0;
  v6 = v5;
  v7 = sub_1C0780478();
  v8 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D3C130];
  v9 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  sub_1C07766EC();
  sub_1C0824E00(v10, v11, v12, v13, v14, v15, v16, v17);
  sub_1C0794BAC((unint64_t *)&unk_1ED744A50, v8, MEMORY[0x1E0D3C150]);
  v18 = sub_1C106FAA8();
  sub_1C0779750(v1, *(uint64_t (**)(uint64_t, uint64_t))(v9 + 8));
  if ((v18 & 1) != 0)
  {
    v19 = v4 + *v3;
    sub_1C077F040();
    v20 = *(_QWORD *)(v19 + 24);
    v21 = *(_QWORD *)(v19 + 32);
    sub_1C079D180(v19, v20);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v21 + 8))(v6, v20, v21);
    swift_endAccess();
  }
  else
  {
    sub_1C086224C();
    v22 = sub_1C0775810();
    sub_1C0794D8C(v22, v23);
  }
  sub_1C078210C();
  sub_1C07757D0();
}

uint64_t sub_1C08555F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v7;

  sub_1C0862EFC();
  sub_1C07ACF80(&qword_1ED746360);
  v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1C1079220;
  *(_QWORD *)(v7 + 32) = v5;
  *(_QWORD *)(v7 + 40) = a5;
  swift_retain();
  sub_1C0853C9C();
  return swift_bridgeObjectRelease();
}

void sub_1C0855698(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  id *v13;
  uint64_t v14;
  id v15;
  double v16;
  long double v17;
  _BYTE v18[24];

  v3 = sub_1C07ACF80((uint64_t *)&unk_1ED762690);
  v4 = MEMORY[0x1E0C80A78](v3);
  v6 = &v18[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v4);
  v8 = &v18[-v7];
  v9 = sub_1C106ADE0();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = &v18[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = (id *)(v1 + OBJC_IVAR____TtC24IntelligencePlatformCore32CategoricalBehaviorHistogramBase_state);
  swift_beginAccess();
  v14 = type metadata accessor for DecayingHistogramState();
  sub_1C077CD6C((uint64_t)v13 + *(int *)(v14 + 20), (uint64_t)v8);
  if (sub_1C07B2D80((uint64_t)v8, 1, v9) == 1)
  {
    sub_1C0784B6C((uint64_t)v8, (uint64_t *)&unk_1ED762690);
  }
  else
  {
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v10 + 32))(v12, v8, v9);
    if ((sub_1C106AD50() & 1) != 0)
    {
      v15 = *v13;
      sub_1C106ACD8();
      v16 = v17;
      LODWORD(v17) = 1.0;
      if (v16 > 0.0)
      {
        v17 = exp2(v16 / -15768000.0);
        *(float *)&v17 = v17;
      }
      objc_msgSend(v15, sel_decayByFactor_, (double)v17);

      (*(void (**)(_BYTE *, uint64_t, uint64_t))(v10 + 16))(v6, a1, v9);
      sub_1C07B2D8C((uint64_t)v6, 0, 1, v9);
      swift_beginAccess();
      sub_1C0806880((uint64_t)v6, (uint64_t)v13 + *(int *)(v14 + 20));
      swift_endAccess();
    }
    (*(void (**)(_BYTE *, uint64_t))(v10 + 8))(v12, v9);
  }
}

void sub_1C08558A8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  id *v13;
  uint64_t v14;
  id v15;
  double v16;
  long double v17;
  _BYTE v18[24];

  v3 = sub_1C07ACF80((uint64_t *)&unk_1ED762690);
  v4 = MEMORY[0x1E0C80A78](v3);
  v6 = &v18[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v4);
  v8 = &v18[-v7];
  v9 = sub_1C106ADE0();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = &v18[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = (id *)(v1 + OBJC_IVAR____TtC24IntelligencePlatformCore21BehaviorHistogramBase_state);
  swift_beginAccess();
  v14 = type metadata accessor for DecayingHistogramState();
  sub_1C077CD6C((uint64_t)v13 + *(int *)(v14 + 20), (uint64_t)v8);
  if (sub_1C07B2D80((uint64_t)v8, 1, v9) == 1)
  {
    sub_1C0784B6C((uint64_t)v8, (uint64_t *)&unk_1ED762690);
  }
  else
  {
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v10 + 32))(v12, v8, v9);
    if ((sub_1C106AD50() & 1) != 0)
    {
      v15 = *v13;
      sub_1C106ACD8();
      v16 = v17;
      LODWORD(v17) = 1.0;
      if (v16 > 0.0)
      {
        v17 = exp2(v16 / -604800.0);
        *(float *)&v17 = v17;
      }
      objc_msgSend(v15, sel_decayByFactor_, (double)v17);

      (*(void (**)(_BYTE *, uint64_t, uint64_t))(v10 + 16))(v6, a1, v9);
      sub_1C07B2D8C((uint64_t)v6, 0, 1, v9);
      swift_beginAccess();
      sub_1C0806880((uint64_t)v6, (uint64_t)v13 + *(int *)(v14 + 20));
      swift_endAccess();
    }
    (*(void (**)(_BYTE *, uint64_t))(v10 + 8))(v12, v9);
  }
}

void sub_1C0855AB8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  char v11;
  uint64_t v12;
  double v13;
  char v14;
  uint64_t v15;

  sub_1C0779670();
  sub_1C07ACF80((uint64_t *)&unk_1ED762690);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v2);
  sub_1C078AB94();
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v15 - v4;
  v6 = sub_1C077AE98();
  sub_1C0778688();
  MEMORY[0x1E0C80A78](v7);
  sub_1C0778544();
  sub_1C0775864();
  v8 = sub_1C0782D0C();
  sub_1C07BCD9C(v8);
  v9 = sub_1C0776880();
  if (v10)
  {
    sub_1C0782970(v9, (uint64_t *)&unk_1ED762690);
  }
  else
  {
    sub_1C079ED78();
    v11 = sub_1C0782374();
    if ((v11 & 1) != 0)
    {
      sub_1C0862FA8();
      sub_1C077F654();
      sub_1C0862F4C();
      if (!v10 & v14)
        sub_1C0862FF8(-2592000.0, v13);
      sub_1C079866C(v12, sel_decayByFactor_);

      sub_1C07A2FD0();
      sub_1C07B2D8C(v0, 0, 1, v6);
      sub_1C077F040();
      sub_1C07AFA14();
      sub_1C0862FF0();
    }
    sub_1C0792D7C(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  }
  sub_1C0776760();
}

void sub_1C0855BE0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  char v11;
  uint64_t v12;
  double v13;
  char v14;
  uint64_t v15;

  sub_1C0779670();
  sub_1C07ACF80((uint64_t *)&unk_1ED762690);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v2);
  sub_1C078AB94();
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v15 - v4;
  v6 = sub_1C077AE98();
  sub_1C0778688();
  MEMORY[0x1E0C80A78](v7);
  sub_1C0778544();
  sub_1C0775864();
  v8 = sub_1C0782D0C();
  sub_1C07BCD9C(v8);
  v9 = sub_1C0776880();
  if (v10)
  {
    sub_1C0782970(v9, (uint64_t *)&unk_1ED762690);
  }
  else
  {
    sub_1C079ED78();
    v11 = sub_1C0782374();
    if ((v11 & 1) != 0)
    {
      sub_1C0862FA8();
      sub_1C077F654();
      sub_1C0862F4C();
      if (!v10 & v14)
        sub_1C0862FF8(-5184000.0, v13);
      sub_1C079866C(v12, sel_decayByFactor_);

      sub_1C07A2FD0();
      sub_1C07B2D8C(v0, 0, 1, v6);
      sub_1C077F040();
      sub_1C07AFA14();
      sub_1C0862FF0();
    }
    sub_1C0792D7C(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  }
  sub_1C0776760();
}

void sub_1C0855D08()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  char v11;
  uint64_t v12;
  double v13;
  char v14;
  uint64_t v15;

  sub_1C0779670();
  sub_1C07ACF80((uint64_t *)&unk_1ED762690);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v2);
  sub_1C078AB94();
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v15 - v4;
  v6 = sub_1C077AE98();
  sub_1C0778688();
  MEMORY[0x1E0C80A78](v7);
  sub_1C0778544();
  sub_1C0775864();
  v8 = sub_1C0782D0C();
  sub_1C07BCD9C(v8);
  v9 = sub_1C0776880();
  if (v10)
  {
    sub_1C0782970(v9, (uint64_t *)&unk_1ED762690);
  }
  else
  {
    sub_1C079ED78();
    v11 = sub_1C0782374();
    if ((v11 & 1) != 0)
    {
      sub_1C0862FA8();
      sub_1C077F654();
      sub_1C0862F4C();
      if (!v10 & v14)
        sub_1C0862FF8(-3456000.0, v13);
      sub_1C079866C(v12, sel_decayByFactor_);

      sub_1C07A2FD0();
      sub_1C07B2D8C(v0, 0, 1, v6);
      sub_1C077F040();
      sub_1C07AFA14();
      sub_1C0862FF0();
    }
    sub_1C0792D7C(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  }
  sub_1C0776760();
}

void sub_1C0855E30(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  id *v13;
  uint64_t v14;
  id v15;
  double v16;
  long double v17;
  _BYTE v18[24];

  v3 = sub_1C07ACF80((uint64_t *)&unk_1ED762690);
  v4 = MEMORY[0x1E0C80A78](v3);
  v6 = &v18[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v4);
  v8 = &v18[-v7];
  v9 = sub_1C106ADE0();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = &v18[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = (id *)(v1 + OBJC_IVAR____TtC24IntelligencePlatformCore21BehaviorHistogramBase_state);
  swift_beginAccess();
  v14 = type metadata accessor for DecayingHistogramState();
  sub_1C077CD6C((uint64_t)v13 + *(int *)(v14 + 20), (uint64_t)v8);
  if (sub_1C07B2D80((uint64_t)v8, 1, v9) == 1)
  {
    sub_1C0784B6C((uint64_t)v8, (uint64_t *)&unk_1ED762690);
  }
  else
  {
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v10 + 32))(v12, v8, v9);
    if ((sub_1C106AD50() & 1) != 0)
    {
      v15 = *v13;
      sub_1C106ACD8();
      v16 = v17;
      LODWORD(v17) = 1.0;
      if (v16 > 0.0)
      {
        v17 = exp2(v16 / -1209600.0);
        *(float *)&v17 = v17;
      }
      objc_msgSend(v15, sel_decayByFactor_, (double)v17);

      (*(void (**)(_BYTE *, uint64_t, uint64_t))(v10 + 16))(v6, a1, v9);
      sub_1C07B2D8C((uint64_t)v6, 0, 1, v9);
      swift_beginAccess();
      sub_1C0806880((uint64_t)v6, (uint64_t)v13 + *(int *)(v14 + 20));
      swift_endAccess();
    }
    (*(void (**)(_BYTE *, uint64_t))(v10 + 8))(v12, v9);
  }
}

void sub_1C0856040(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  id *v13;
  uint64_t v14;
  id v15;
  double v16;
  long double v17;
  _BYTE v18[24];

  v3 = sub_1C07ACF80((uint64_t *)&unk_1ED762690);
  v4 = MEMORY[0x1E0C80A78](v3);
  v6 = &v18[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v4);
  v8 = &v18[-v7];
  v9 = sub_1C106ADE0();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = &v18[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = (id *)(v1 + OBJC_IVAR____TtC24IntelligencePlatformCore21BehaviorHistogramBase_state);
  swift_beginAccess();
  v14 = type metadata accessor for DecayingHistogramState();
  sub_1C077CD6C((uint64_t)v13 + *(int *)(v14 + 20), (uint64_t)v8);
  if (sub_1C07B2D80((uint64_t)v8, 1, v9) == 1)
  {
    sub_1C0784B6C((uint64_t)v8, (uint64_t *)&unk_1ED762690);
  }
  else
  {
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v10 + 32))(v12, v8, v9);
    if ((sub_1C106AD50() & 1) != 0)
    {
      v15 = *v13;
      sub_1C106ACD8();
      v16 = v17;
      LODWORD(v17) = 1.0;
      if (v16 > 0.0)
      {
        v17 = exp2(v16 / -21600.0);
        *(float *)&v17 = v17;
      }
      objc_msgSend(v15, sel_decayByFactor_, (double)v17);

      (*(void (**)(_BYTE *, uint64_t, uint64_t))(v10 + 16))(v6, a1, v9);
      sub_1C07B2D8C((uint64_t)v6, 0, 1, v9);
      swift_beginAccess();
      sub_1C0806880((uint64_t)v6, (uint64_t)v13 + *(int *)(v14 + 20));
      swift_endAccess();
    }
    (*(void (**)(_BYTE *, uint64_t))(v10 + 8))(v12, v9);
  }
}

uint64_t sub_1C0856250(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unsigned __int16 v19;
  unsigned __int16 v20;
  _BYTE *v21;
  int v23;
  uint64_t v24;
  double v25;
  float v26;
  void (*v27)(char *, uint64_t);
  id *v28;
  double v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(char *, uint64_t, uint64_t);
  int v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _BYTE v44[48];

  v43 = a2;
  v5 = sub_1C07ACF80((uint64_t *)&unk_1ED762690);
  MEMORY[0x1E0C80A78](v5);
  v40 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v41 = (uint64_t)&v36 - v8;
  v42 = sub_1C106ADE0();
  v9 = *(_QWORD *)(v42 - 8);
  MEMORY[0x1E0C80A78](v42);
  v39 = (char *)&v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v36 - v12;
  v14 = *(_QWORD *)(a1 + 64);
  sub_1C0860908();
  if (v16)
  {
    v17 = v15;
    v18 = v16;
    sub_1C07DFF44(a1 + 16, (uint64_t)v44);
    sub_1C08384CC((uint64_t)v44, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1C0826EB0);
    sub_1C08554C0();
    v20 = v19;
    sub_1C08384CC((uint64_t)v44, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1C0826F50);
    if (!v3)
    {
      sub_1C085CE18(v17, v18);
      v38 = v23;
      v24 = v42;
      v37 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
      v37(v13, v14 + OBJC_IVAR____TtC24IntelligencePlatformCore15BehaviorContext_date, v42);
      sub_1C106ACD8();
      v26 = 1.0;
      if (v25 > 0.0)
        v26 = exp2(v25 / -15768000.0);
      v27 = *(void (**)(char *, uint64_t))(v9 + 8);
      v27(v13, v24);
      v28 = (id *)(v2 + OBJC_IVAR____TtC24IntelligencePlatformCore32CategoricalBehaviorHistogramBase_state);
      swift_beginAccess();
      *(float *)&v29 = v26;
      objc_msgSend(*v28, sel_add_a_b_, v20, (unsigned __int16)v38, v29);
      v30 = type metadata accessor for DecayingHistogramState();
      v31 = v41;
      sub_1C077CD6C((uint64_t)v28 + *(int *)(v30 + 20), v41);
      if (sub_1C07B2D80(v31, 1, v24) == 1)
      {
        sub_1C0784B6C(v31, (uint64_t *)&unk_1ED762690);
        v32 = (uint64_t)v40;
        v37(v40, v43, v24);
        sub_1C07B2D8C(v32, 0, 1, v24);
        swift_beginAccess();
        sub_1C0806880(v32, (uint64_t)v28 + *(int *)(v30 + 20));
        swift_endAccess();
      }
      else
      {
        v33 = v39;
        (*(void (**)(char *, uint64_t, uint64_t))(v9 + 32))(v39, v31, v24);
        v34 = v43;
        if ((sub_1C106AD50() & 1) != 0)
        {
          v35 = (uint64_t)v40;
          v37(v40, v34, v24);
          sub_1C07B2D8C(v35, 0, 1, v24);
          swift_beginAccess();
          sub_1C0806880(v35, (uint64_t)v28 + *(int *)(v30 + 20));
          swift_endAccess();
        }
        v27(v33, v24);
      }
    }
    return swift_bridgeObjectRelease();
  }
  else
  {
    sub_1C0861074();
    swift_allocError();
    *v21 = 0;
    return swift_willThrow();
  }
}

void sub_1C0856618(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  int v28;
  int v29;
  unsigned __int16 v30;
  unsigned __int16 v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  double v36;
  float v37;
  void (*v38)(char *, uint64_t);
  id *v39;
  double v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _BYTE *v44;
  void (*v45)(uint64_t, uint64_t, uint64_t);
  uint64_t v46;
  uint64_t v47;
  void (*v48)(char *, uint64_t, uint64_t);
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63[5];
  char v64;
  _BYTE v65[48];
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char v71;
  _BYTE v72[8];

  v4 = v3;
  v54 = a2;
  v7 = sub_1C07ACF80((uint64_t *)&unk_1ED762690);
  MEMORY[0x1E0C80A78](v7);
  v50 = (char *)&v48 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v53 = (uint64_t)&v48 - v10;
  v55 = sub_1C106ADE0();
  v52 = *(_QWORD *)(v55 - 8);
  MEMORY[0x1E0C80A78](v55);
  v49 = (uint64_t)&v48 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v51 = (char *)&v48 - v13;
  v14 = *(_QWORD *)(a1 + 64);
  sub_1C085FC00(v14, a3, v15, v16, v17, v18, v19, v20, (uint64_t)v48, v49, (uint64_t)v50, (uint64_t)&v48 - v13, v52, v53, v54, v55, v56, v57, v58,
    v59,
    v60,
    v61,
    v62,
    v63[0]);
  v21 = v63[0];
  v22 = v63[1];
  v23 = v63[2];
  v24 = v63[3];
  v25 = v63[4];
  v26 = v64;
  sub_1C080AD78((uint64_t)v63, (uint64_t)v65, &qword_1ED758C90);
  if (v65[40] == 255)
  {
    sub_1C0861074();
    swift_allocError();
    *v44 = 0;
    swift_willThrow();
  }
  else
  {
    v66 = v21;
    v67 = v22;
    v68 = v23;
    v69 = v24;
    v70 = v25;
    v71 = v26;
    sub_1C07DFF44(a1 + 16, (uint64_t)v72);
    sub_1C08384CC((uint64_t)v72, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1C0826EB0);
    v27 = v56;
    sub_1C08554C0();
    v29 = v28;
    sub_1C08384CC((uint64_t)v72, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1C0826F50);
    if (!v27)
    {
      sub_1C08554C0();
      v31 = v30;
      LODWORD(v56) = v29;
      v32 = v52;
      v33 = v51;
      v34 = v55;
      v48 = *(void (**)(char *, uint64_t, uint64_t))(v52 + 16);
      v48(v51, v14 + OBJC_IVAR____TtC24IntelligencePlatformCore15BehaviorContext_date, v55);
      v35 = v54;
      sub_1C106ACD8();
      v37 = 1.0;
      if (v36 > 0.0)
        v37 = exp2(v36 / -2592000.0);
      v38 = *(void (**)(char *, uint64_t))(v32 + 8);
      v38(v33, v34);
      v39 = (id *)(v4 + OBJC_IVAR____TtC24IntelligencePlatformCore21BehaviorHistogramBase_state);
      swift_beginAccess();
      *(float *)&v40 = v37;
      objc_msgSend(*v39, sel_add_a_b_, (unsigned __int16)v56, v31, v40);
      v41 = type metadata accessor for DecayingHistogramState();
      v42 = v53;
      sub_1C077CD6C((uint64_t)v39 + *(int *)(v41 + 20), v53);
      if (sub_1C07B2D80(v42, 1, v34) == 1)
      {
        sub_1C0784B6C(v42, (uint64_t *)&unk_1ED762690);
        v43 = (uint64_t)v50;
        v48(v50, v35, v34);
        sub_1C07B2D8C(v43, 0, 1, v34);
        swift_beginAccess();
        sub_1C0806880(v43, (uint64_t)v39 + *(int *)(v41 + 20));
        swift_endAccess();
      }
      else
      {
        v45 = *(void (**)(uint64_t, uint64_t, uint64_t))(v32 + 32);
        v46 = v49;
        v45(v49, v42, v34);
        if ((sub_1C106AD50() & 1) != 0)
        {
          v47 = (uint64_t)v50;
          v48(v50, v35, v34);
          sub_1C07B2D8C(v47, 0, 1, v34);
          swift_beginAccess();
          sub_1C0806880(v47, (uint64_t)v39 + *(int *)(v41 + 20));
          swift_endAccess();
        }
        v38((char *)v46, v34);
      }
    }
    sub_1C08384CC((uint64_t)v63, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1C08273B4);
  }
}

uint64_t sub_1C0856A9C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  double v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  _BYTE *v22;
  void (*v24)(char *, char *, uint64_t);
  unsigned __int16 v25;
  unsigned __int16 v26;
  uint64_t v27;
  double v28;
  float v29;
  void (*v30)(char *, uint64_t);
  id *v31;
  double v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void (*v40)(char *, uint64_t, uint64_t);
  char *v41;
  char *v42;
  uint64_t v43;
  void (*v44)(char *, uint64_t, uint64_t, double);
  uint64_t v45;
  uint64_t v46;
  _BYTE v47[48];

  v45 = a2;
  v4 = sub_1C07ACF80((uint64_t *)&unk_1ED762690);
  MEMORY[0x1E0C80A78](v4);
  v42 = (char *)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v43 = (uint64_t)&v39 - v7;
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v39 - v9;
  v11 = sub_1C106ADE0();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v41 = (char *)&v39 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v39 - v15;
  v18 = MEMORY[0x1E0C80A78](v17);
  v20 = (char *)&v39 - v19;
  v21 = *(_QWORD *)(a1 + 64) + OBJC_IVAR____TtC24IntelligencePlatformCore15BehaviorContext_date;
  v44 = *(void (**)(char *, uint64_t, uint64_t, double))(v12 + 16);
  v44(v10, v21, v11, v18);
  sub_1C07B2D8C((uint64_t)v10, 0, 1, v11);
  if (sub_1C07B2D80((uint64_t)v10, 1, v11) == 1)
  {
    sub_1C0784B6C((uint64_t)v10, (uint64_t *)&unk_1ED762690);
    sub_1C0861074();
    swift_allocError();
    *v22 = 0;
    return swift_willThrow();
  }
  else
  {
    v24 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
    v24(v20, v10, v11);
    sub_1C07DFF44(a1 + 16, (uint64_t)v47);
    sub_1C08384CC((uint64_t)v47, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1C0826EB0);
    sub_1C08554C0();
    if (v2)
    {
      sub_1C08384CC((uint64_t)v47, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1C0826F50);
      return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v20, v11);
    }
    else
    {
      v26 = v25;
      v40 = (void (*)(char *, uint64_t, uint64_t))v24;
      v27 = v46;
      sub_1C08384CC((uint64_t)v47, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1C0826F50);
      ((void (*)(char *, uint64_t, uint64_t))v44)(v16, v21, v11);
      sub_1C106ACD8();
      v29 = 1.0;
      if (v28 > 0.0)
        v29 = exp2(v28 / -604800.0);
      v30 = *(void (**)(char *, uint64_t))(v12 + 8);
      v30(v16, v11);
      v31 = (id *)(v27 + OBJC_IVAR____TtC24IntelligencePlatformCore21BehaviorHistogramBase_state);
      swift_beginAccess();
      *(float *)&v32 = v29;
      objc_msgSend(*v31, sel_add_a_b_, v26, 0, v32);
      v33 = type metadata accessor for DecayingHistogramState();
      v34 = v43;
      sub_1C077CD6C((uint64_t)v31 + *(int *)(v33 + 20), v43);
      if (sub_1C07B2D80(v34, 1, v11) == 1)
      {
        sub_1C0784B6C(v34, (uint64_t *)&unk_1ED762690);
        v35 = (uint64_t)v42;
        ((void (*)(char *, uint64_t, uint64_t))v44)(v42, v45, v11);
        sub_1C07B2D8C(v35, 0, 1, v11);
        swift_beginAccess();
        sub_1C0806880(v35, (uint64_t)v31 + *(int *)(v33 + 20));
        swift_endAccess();
      }
      else
      {
        v36 = v41;
        v40(v41, v34, v11);
        v37 = v45;
        if ((sub_1C106AD50() & 1) != 0)
        {
          v38 = (uint64_t)v42;
          ((void (*)(char *, uint64_t, uint64_t))v44)(v42, v37, v11);
          sub_1C07B2D8C(v38, 0, 1, v11);
          swift_beginAccess();
          sub_1C0806880(v38, (uint64_t)v31 + *(int *)(v33 + 20));
          swift_endAccess();
        }
        v30(v36, v11);
      }
      return ((uint64_t (*)(char *, uint64_t))v30)(v20, v11);
    }
  }
}

uint64_t sub_1C0856ED4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  double v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  _BYTE *v24;
  char *v26;
  void (*v27)(char *, char *, uint64_t);
  int v28;
  unsigned __int16 v29;
  uint64_t v30;
  double v31;
  float v32;
  void (*v33)(char *, uint64_t);
  id *v34;
  double v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  void (*v41)(char *, uint64_t, uint64_t);
  char *v42;
  int v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  void (*v48)(char *, uint64_t, uint64_t, double);
  _BYTE v49[48];

  v4 = v2;
  v47 = a2;
  v6 = sub_1C07ACF80((uint64_t *)&unk_1ED762690);
  MEMORY[0x1E0C80A78](v6);
  v45 = (char *)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v46 = (uint64_t)&v41 - v9;
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v41 - v11;
  v13 = sub_1C106ADE0();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v44 = (char *)&v41 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v41 - v17;
  v20 = MEMORY[0x1E0C80A78](v19);
  v22 = (char *)&v41 - v21;
  v23 = *(_QWORD *)(a1 + 64) + OBJC_IVAR____TtC24IntelligencePlatformCore15BehaviorContext_date;
  v48 = *(void (**)(char *, uint64_t, uint64_t, double))(v14 + 16);
  v48(v12, v23, v13, v20);
  sub_1C07B2D8C((uint64_t)v12, 0, 1, v13);
  if (sub_1C07B2D80((uint64_t)v12, 1, v13) == 1)
  {
    sub_1C0784B6C((uint64_t)v12, (uint64_t *)&unk_1ED762690);
    sub_1C0861074();
    swift_allocError();
    *v24 = 0;
    return swift_willThrow();
  }
  else
  {
    v26 = v12;
    v27 = *(void (**)(char *, char *, uint64_t))(v14 + 32);
    v27(v22, v26, v13);
    sub_1C07DFF44(a1 + 16, (uint64_t)v49);
    sub_1C08384CC((uint64_t)v49, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1C0826EB0);
    sub_1C08554C0();
    if (v3)
    {
      sub_1C08384CC((uint64_t)v49, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1C0826F50);
      return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v22, v13);
    }
    else
    {
      v43 = v28;
      v41 = (void (*)(char *, uint64_t, uint64_t))v27;
      sub_1C08384CC((uint64_t)v49, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1C0826F50);
      v42 = v22;
      v29 = sub_1C085ED70();
      ((void (*)(char *, uint64_t, uint64_t))v48)(v18, v23, v13);
      v30 = v47;
      sub_1C106ACD8();
      v32 = 1.0;
      if (v31 > 0.0)
        v32 = exp2(v31 / -5184000.0);
      v33 = *(void (**)(char *, uint64_t))(v14 + 8);
      v33(v18, v13);
      v34 = (id *)(v4 + OBJC_IVAR____TtC24IntelligencePlatformCore21BehaviorHistogramBase_state);
      swift_beginAccess();
      *(float *)&v35 = v32;
      objc_msgSend(*v34, sel_add_a_b_, (unsigned __int16)v43, v29, v35);
      v36 = type metadata accessor for DecayingHistogramState();
      v37 = v46;
      sub_1C077CD6C((uint64_t)v34 + *(int *)(v36 + 20), v46);
      if (sub_1C07B2D80(v37, 1, v13) == 1)
      {
        sub_1C0784B6C(v37, (uint64_t *)&unk_1ED762690);
        v38 = (uint64_t)v45;
        ((void (*)(char *, uint64_t, uint64_t))v48)(v45, v30, v13);
        sub_1C07B2D8C(v38, 0, 1, v13);
        swift_beginAccess();
        sub_1C0806880(v38, (uint64_t)v34 + *(int *)(v36 + 20));
        swift_endAccess();
      }
      else
      {
        v39 = v44;
        v41(v44, v37, v13);
        if ((sub_1C106AD50() & 1) != 0)
        {
          v40 = (uint64_t)v45;
          ((void (*)(char *, uint64_t, uint64_t))v48)(v45, v30, v13);
          sub_1C07B2D8C(v40, 0, 1, v13);
          swift_beginAccess();
          sub_1C0806880(v40, (uint64_t)v34 + *(int *)(v36 + 20));
          swift_endAccess();
        }
        v33(v39, v13);
      }
      return ((uint64_t (*)(char *, uint64_t))v33)(v42, v13);
    }
  }
}

uint64_t sub_1C0857330(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unsigned __int16 v19;
  unsigned __int16 v20;
  _BYTE *v21;
  int v23;
  uint64_t v24;
  double v25;
  float v26;
  void (*v27)(char *, uint64_t);
  id *v28;
  double v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(char *, uint64_t, uint64_t);
  int v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _BYTE v44[48];

  v43 = a2;
  v5 = sub_1C07ACF80((uint64_t *)&unk_1ED762690);
  MEMORY[0x1E0C80A78](v5);
  v40 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v41 = (uint64_t)&v36 - v8;
  v42 = sub_1C106ADE0();
  v9 = *(_QWORD *)(v42 - 8);
  MEMORY[0x1E0C80A78](v42);
  v39 = (char *)&v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v36 - v12;
  v14 = *(_QWORD *)(a1 + 64);
  v15 = sub_1C0860BC4();
  if (v16)
  {
    v17 = v15;
    v18 = v16;
    sub_1C07DFF44(a1 + 16, (uint64_t)v44);
    sub_1C08384CC((uint64_t)v44, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1C0826EB0);
    sub_1C08554C0();
    v20 = v19;
    sub_1C08384CC((uint64_t)v44, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1C0826F50);
    if (!v3)
    {
      sub_1C085CE18(v17, v18);
      v38 = v23;
      v24 = v42;
      v37 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
      v37(v13, v14 + OBJC_IVAR____TtC24IntelligencePlatformCore15BehaviorContext_date, v42);
      sub_1C106ACD8();
      v26 = 1.0;
      if (v25 > 0.0)
        v26 = exp2(v25 / -2592000.0);
      v27 = *(void (**)(char *, uint64_t))(v9 + 8);
      v27(v13, v24);
      v28 = (id *)(v2 + OBJC_IVAR____TtC24IntelligencePlatformCore32CategoricalBehaviorHistogramBase_state);
      swift_beginAccess();
      *(float *)&v29 = v26;
      objc_msgSend(*v28, sel_add_a_b_, v20, (unsigned __int16)v38, v29);
      v30 = type metadata accessor for DecayingHistogramState();
      v31 = v41;
      sub_1C077CD6C((uint64_t)v28 + *(int *)(v30 + 20), v41);
      if (sub_1C07B2D80(v31, 1, v24) == 1)
      {
        sub_1C0784B6C(v31, (uint64_t *)&unk_1ED762690);
        v32 = (uint64_t)v40;
        v37(v40, v43, v24);
        sub_1C07B2D8C(v32, 0, 1, v24);
        swift_beginAccess();
        sub_1C0806880(v32, (uint64_t)v28 + *(int *)(v30 + 20));
        swift_endAccess();
      }
      else
      {
        v33 = v39;
        (*(void (**)(char *, uint64_t, uint64_t))(v9 + 32))(v39, v31, v24);
        v34 = v43;
        if ((sub_1C106AD50() & 1) != 0)
        {
          v35 = (uint64_t)v40;
          v37(v40, v34, v24);
          sub_1C07B2D8C(v35, 0, 1, v24);
          swift_beginAccess();
          sub_1C0806880(v35, (uint64_t)v28 + *(int *)(v30 + 20));
          swift_endAccess();
        }
        v27(v33, v24);
      }
    }
    return swift_bridgeObjectRelease();
  }
  else
  {
    sub_1C0861074();
    swift_allocError();
    *v21 = 0;
    return swift_willThrow();
  }
}

uint64_t sub_1C08576F8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  double v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  _BYTE *v20;
  char *v22;
  void (*v23)(char *, char *, uint64_t);
  int v24;
  _QWORD v25[2];
  int v26;
  char *v27;
  char *v28;
  char *v29;
  uint64_t v30;
  void (*v31)(char *, uint64_t, uint64_t, double);
  _BYTE v32[48];

  v30 = a2;
  v4 = sub_1C07ACF80((uint64_t *)&unk_1ED762690);
  MEMORY[0x1E0C80A78](v4);
  v28 = (char *)v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v29 = (char *)v25 - v7;
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)v25 - v9;
  v11 = sub_1C106ADE0();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v27 = (char *)v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v16 = MEMORY[0x1E0C80A78](v15);
  v18 = (char *)v25 - v17;
  v19 = *(_QWORD *)(a1 + 64) + OBJC_IVAR____TtC24IntelligencePlatformCore15BehaviorContext_date;
  v31 = *(void (**)(char *, uint64_t, uint64_t, double))(v12 + 16);
  v31(v10, v19, v11, v16);
  sub_1C07B2D8C((uint64_t)v10, 0, 1, v11);
  if (sub_1C07B2D80((uint64_t)v10, 1, v11) == 1)
  {
    sub_1C0784B6C((uint64_t)v10, (uint64_t *)&unk_1ED762690);
    sub_1C0861074();
    swift_allocError();
    *v20 = 0;
    return swift_willThrow();
  }
  else
  {
    v22 = v10;
    v23 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
    v23(v18, v22, v11);
    sub_1C07DFF44(a1 + 16, (uint64_t)v32);
    sub_1C08384CC((uint64_t)v32, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1C0826EB0);
    sub_1C08554C0();
    if (!v2)
    {
      v26 = v24;
      v25[0] = v23;
      sub_1C08384CC((uint64_t)v32, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1C0826F50);
      v25[1] = v18;
      sub_1C085EB58();
    }
    sub_1C08384CC((uint64_t)v32, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1C0826F50);
    return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v18, v11);
  }
}

uint64_t sub_1C0857B54(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  double v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  _BYTE *v24;
  char *v26;
  void (*v27)(char *, char *, uint64_t);
  int v28;
  unsigned __int16 v29;
  uint64_t v30;
  double v31;
  float v32;
  void (*v33)(char *, uint64_t);
  id *v34;
  double v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  void (*v41)(char *, uint64_t, uint64_t);
  char *v42;
  int v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  void (*v48)(char *, uint64_t, uint64_t, double);
  _BYTE v49[48];

  v4 = v2;
  v47 = a2;
  v6 = sub_1C07ACF80((uint64_t *)&unk_1ED762690);
  MEMORY[0x1E0C80A78](v6);
  v45 = (char *)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v46 = (uint64_t)&v41 - v9;
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v41 - v11;
  v13 = sub_1C106ADE0();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v44 = (char *)&v41 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v41 - v17;
  v20 = MEMORY[0x1E0C80A78](v19);
  v22 = (char *)&v41 - v21;
  v23 = *(_QWORD *)(a1 + 64) + OBJC_IVAR____TtC24IntelligencePlatformCore15BehaviorContext_date;
  v48 = *(void (**)(char *, uint64_t, uint64_t, double))(v14 + 16);
  v48(v12, v23, v13, v20);
  sub_1C07B2D8C((uint64_t)v12, 0, 1, v13);
  if (sub_1C07B2D80((uint64_t)v12, 1, v13) == 1)
  {
    sub_1C0784B6C((uint64_t)v12, (uint64_t *)&unk_1ED762690);
    sub_1C0861074();
    swift_allocError();
    *v24 = 0;
    return swift_willThrow();
  }
  else
  {
    v26 = v12;
    v27 = *(void (**)(char *, char *, uint64_t))(v14 + 32);
    v27(v22, v26, v13);
    sub_1C07DFF44(a1 + 16, (uint64_t)v49);
    sub_1C08384CC((uint64_t)v49, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1C0826EB0);
    sub_1C08554C0();
    if (v3)
    {
      sub_1C08384CC((uint64_t)v49, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1C0826F50);
      return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v22, v13);
    }
    else
    {
      v43 = v28;
      v41 = (void (*)(char *, uint64_t, uint64_t))v27;
      sub_1C08384CC((uint64_t)v49, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1C0826F50);
      v42 = v22;
      v29 = sub_1C085E450();
      ((void (*)(char *, uint64_t, uint64_t))v48)(v18, v23, v13);
      v30 = v47;
      sub_1C106ACD8();
      v32 = 1.0;
      if (v31 > 0.0)
        v32 = exp2(v31 / -2592000.0);
      v33 = *(void (**)(char *, uint64_t))(v14 + 8);
      v33(v18, v13);
      v34 = (id *)(v4 + OBJC_IVAR____TtC24IntelligencePlatformCore21BehaviorHistogramBase_state);
      swift_beginAccess();
      *(float *)&v35 = v32;
      objc_msgSend(*v34, sel_add_a_b_, (unsigned __int16)v43, v29, v35);
      v36 = type metadata accessor for DecayingHistogramState();
      v37 = v46;
      sub_1C077CD6C((uint64_t)v34 + *(int *)(v36 + 20), v46);
      if (sub_1C07B2D80(v37, 1, v13) == 1)
      {
        sub_1C0784B6C(v37, (uint64_t *)&unk_1ED762690);
        v38 = (uint64_t)v45;
        ((void (*)(char *, uint64_t, uint64_t))v48)(v45, v30, v13);
        sub_1C07B2D8C(v38, 0, 1, v13);
        swift_beginAccess();
        sub_1C0806880(v38, (uint64_t)v34 + *(int *)(v36 + 20));
        swift_endAccess();
      }
      else
      {
        v39 = v44;
        v41(v44, v37, v13);
        if ((sub_1C106AD50() & 1) != 0)
        {
          v40 = (uint64_t)v45;
          ((void (*)(char *, uint64_t, uint64_t))v48)(v45, v30, v13);
          sub_1C07B2D8C(v40, 0, 1, v13);
          swift_beginAccess();
          sub_1C0806880(v40, (uint64_t)v34 + *(int *)(v36 + 20));
          swift_endAccess();
        }
        v33(v39, v13);
      }
      return ((uint64_t (*)(char *, uint64_t))v33)(v42, v13);
    }
  }
}

uint64_t sub_1C0857FB0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  double v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  _BYTE *v24;
  char *v26;
  void (*v27)(char *, char *, uint64_t);
  int v28;
  unsigned __int16 v29;
  unsigned __int16 v30;
  uint64_t v31;
  double v32;
  float v33;
  void (*v34)(char *, uint64_t);
  id *v35;
  double v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  void (*v42)(char *, uint64_t, uint64_t);
  char *v43;
  int v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  void (*v49)(char *, uint64_t, uint64_t, double);
  _BYTE v50[48];

  v4 = v2;
  v48 = a2;
  v6 = sub_1C07ACF80((uint64_t *)&unk_1ED762690);
  MEMORY[0x1E0C80A78](v6);
  v46 = (char *)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v47 = (uint64_t)&v42 - v9;
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v42 - v11;
  v13 = sub_1C106ADE0();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v45 = (char *)&v42 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v42 - v17;
  v20 = MEMORY[0x1E0C80A78](v19);
  v22 = (char *)&v42 - v21;
  v23 = *(_QWORD *)(a1 + 64) + OBJC_IVAR____TtC24IntelligencePlatformCore15BehaviorContext_date;
  v49 = *(void (**)(char *, uint64_t, uint64_t, double))(v14 + 16);
  v49(v12, v23, v13, v20);
  sub_1C07B2D8C((uint64_t)v12, 0, 1, v13);
  if (sub_1C07B2D80((uint64_t)v12, 1, v13) == 1)
  {
    sub_1C0784B6C((uint64_t)v12, (uint64_t *)&unk_1ED762690);
    sub_1C0861074();
    swift_allocError();
    *v24 = 0;
    return swift_willThrow();
  }
  else
  {
    v26 = v12;
    v27 = *(void (**)(char *, char *, uint64_t))(v14 + 32);
    v27(v22, v26, v13);
    sub_1C07DFF44(a1 + 16, (uint64_t)v50);
    sub_1C08384CC((uint64_t)v50, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1C0826EB0);
    sub_1C08554C0();
    if (v3)
    {
      sub_1C08384CC((uint64_t)v50, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1C0826F50);
      return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v22, v13);
    }
    else
    {
      v44 = v28;
      v42 = (void (*)(char *, uint64_t, uint64_t))v27;
      sub_1C08384CC((uint64_t)v50, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1C0826F50);
      v43 = v22;
      sub_1C085F898();
      v30 = v29;
      ((void (*)(char *, uint64_t, uint64_t))v49)(v18, v23, v13);
      v31 = v48;
      sub_1C106ACD8();
      v33 = 1.0;
      if (v32 > 0.0)
        v33 = exp2(v32 / -5184000.0);
      v34 = *(void (**)(char *, uint64_t))(v14 + 8);
      v34(v18, v13);
      v35 = (id *)(v4 + OBJC_IVAR____TtC24IntelligencePlatformCore21BehaviorHistogramBase_state);
      swift_beginAccess();
      *(float *)&v36 = v33;
      objc_msgSend(*v35, sel_add_a_b_, (unsigned __int16)v44, v30, v36);
      v37 = type metadata accessor for DecayingHistogramState();
      v38 = v47;
      sub_1C077CD6C((uint64_t)v35 + *(int *)(v37 + 20), v47);
      if (sub_1C07B2D80(v38, 1, v13) == 1)
      {
        sub_1C0784B6C(v38, (uint64_t *)&unk_1ED762690);
        v39 = (uint64_t)v46;
        ((void (*)(char *, uint64_t, uint64_t))v49)(v46, v31, v13);
        sub_1C07B2D8C(v39, 0, 1, v13);
        swift_beginAccess();
        sub_1C0806880(v39, (uint64_t)v35 + *(int *)(v37 + 20));
        swift_endAccess();
      }
      else
      {
        v40 = v45;
        v42(v45, v38, v13);
        if ((sub_1C106AD50() & 1) != 0)
        {
          v41 = (uint64_t)v46;
          ((void (*)(char *, uint64_t, uint64_t))v49)(v46, v31, v13);
          sub_1C07B2D8C(v41, 0, 1, v13);
          swift_beginAccess();
          sub_1C0806880(v41, (uint64_t)v35 + *(int *)(v37 + 20));
          swift_endAccess();
        }
        v34(v40, v13);
      }
      return ((uint64_t (*)(char *, uint64_t))v34)(v43, v13);
    }
  }
}

void sub_1C085840C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  _BYTE *v20;
  unsigned __int16 v21;
  unsigned __int16 v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t, uint64_t);
  double v25;
  float v26;
  char *v27;
  void (*v28)(char *, uint64_t);
  id *v29;
  double v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(char *, uint64_t);
  char *v38;
  char *v39;
  uint64_t v40;
  unint64_t v41;
  char v42;
  unint64_t v43;
  _BYTE v44[48];

  v5 = v3;
  v40 = a2;
  v8 = sub_1C07ACF80((uint64_t *)&unk_1ED762690);
  MEMORY[0x1E0C80A78](v8);
  v39 = (char *)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v36 - v11;
  v13 = sub_1C106ADE0();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v38 = (char *)&v36 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v36 - v17;
  v19 = *(_QWORD *)(a1 + 64);
  sub_1C085FDBC(a3, (uint64_t)&v41);
  if ((v42 & 1) != 0)
  {
    sub_1C0861074();
    swift_allocError();
    *v20 = 0;
    swift_willThrow();
  }
  else
  {
    v43 = v41;
    sub_1C07DFF44(a1 + 16, (uint64_t)v44);
    sub_1C08384CC((uint64_t)v44, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1C0826EB0);
    sub_1C08554C0();
    v22 = v21;
    sub_1C08384CC((uint64_t)v44, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1C0826F50);
    if (!v4)
    {
      LODWORD(v37) = sub_1C085FE50(&v43);
      v23 = v19 + OBJC_IVAR____TtC24IntelligencePlatformCore15BehaviorContext_date;
      v24 = *(void (**)(char *, uint64_t, uint64_t))(v14 + 16);
      v24(v18, v23, v13);
      sub_1C106ACD8();
      v26 = 1.0;
      if (v25 > 0.0)
        v26 = exp2(v25 / -2592000.0);
      v27 = v18;
      v28 = *(void (**)(char *, uint64_t))(v14 + 8);
      v28(v27, v13);
      v29 = (id *)(v5 + OBJC_IVAR____TtC24IntelligencePlatformCore21BehaviorHistogramBase_state);
      swift_beginAccess();
      *(float *)&v30 = v26;
      objc_msgSend(*v29, sel_add_a_b_, v22, (unsigned __int16)v37, v30);
      v31 = type metadata accessor for DecayingHistogramState();
      sub_1C077CD6C((uint64_t)v29 + *(int *)(v31 + 20), (uint64_t)v12);
      if (sub_1C07B2D80((uint64_t)v12, 1, v13) == 1)
      {
        sub_1C0784B6C((uint64_t)v12, (uint64_t *)&unk_1ED762690);
        v32 = (uint64_t)v39;
        v24(v39, v40, v13);
        sub_1C07B2D8C(v32, 0, 1, v13);
        swift_beginAccess();
        sub_1C0806880(v32, (uint64_t)v29 + *(int *)(v31 + 20));
        swift_endAccess();
      }
      else
      {
        v37 = v28;
        v33 = v38;
        (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v38, v12, v13);
        v34 = v40;
        if ((sub_1C106AD50() & 1) != 0)
        {
          v35 = (uint64_t)v39;
          v24(v39, v34, v13);
          sub_1C07B2D8C(v35, 0, 1, v13);
          swift_beginAccess();
          sub_1C0806880(v35, (uint64_t)v29 + *(int *)(v31 + 20));
          swift_endAccess();
        }
        v37(v33, v13);
      }
    }
  }
}

void sub_1C08587A4()
{
  uint64_t v0;
  void (*v1)(_QWORD, _QWORD, _QWORD);
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t, uint64_t, double);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  double v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  void (*v23)(_QWORD, _QWORD, _QWORD);
  unsigned __int16 v24;
  unsigned __int16 v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  double v30;
  float v31;
  void (*v32)(char *, uint64_t);
  id *v33;
  double v34;
  uint64_t v35;
  uint64_t v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void (*v48)(_QWORD, _QWORD, _QWORD);
  uint64_t v49;
  uint64_t (*v50)(uint64_t, uint64_t, double);
  _BYTE v51[48];

  sub_1C077681C();
  v49 = v3;
  v50 = v4;
  v48 = v1;
  v46 = v5;
  v7 = v6;
  sub_1C07ACF80((uint64_t *)&unk_1ED762690);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v8);
  sub_1C0862E70(v9, v43);
  MEMORY[0x1E0C80A78](v10);
  sub_1C077E368();
  v11 = sub_1C077AE98();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  sub_1C077AF80();
  v15 = v13 - v14;
  v17 = MEMORY[0x1E0C80A78](v16);
  v19 = (char *)&v43 - v18;
  v20 = *(_QWORD *)(v7 + 64);
  v21 = v50(v20, v49, v17);
  if ((v22 & 1) != 0)
  {
    sub_1C0861074();
    v39 = sub_1C0775810();
    sub_1C0794D8C(v39, v40);
  }
  else
  {
    v49 = v2;
    v50 = (uint64_t (*)(uint64_t, uint64_t, double))v21;
    v44 = v19;
    v45 = v12;
    v43 = v15;
    sub_1C07DFF44(v7 + 16, (uint64_t)v51);
    sub_1C08384CC((uint64_t)v51, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1C0826EB0);
    v23 = v48;
    sub_1C08554C0();
    v25 = v24;
    sub_1C08384CC((uint64_t)v51, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1C0826F50);
    if (!v23)
    {
      sub_1C085CF00();
      LODWORD(v50) = v26;
      v27 = v20 + OBJC_IVAR____TtC24IntelligencePlatformCore15BehaviorContext_date;
      v29 = v44;
      v28 = v45;
      v48 = *(void (**)(_QWORD, _QWORD, _QWORD))(v45 + 16);
      v48(v44, v27, v11);
      sub_1C106ACD8();
      v31 = 1.0;
      if (v30 > 0.0)
        v31 = exp2(v30 / -2592000.0);
      v32 = *(void (**)(char *, uint64_t))(v28 + 8);
      v32(v29, v11);
      v33 = (id *)(v0 + OBJC_IVAR____TtC24IntelligencePlatformCore32CategoricalBehaviorHistogramBase_state);
      sub_1C0775864();
      *(float *)&v34 = v31;
      objc_msgSend(*v33, sel_add_a_b_, v25, (unsigned __int16)v50, v34);
      v35 = sub_1C0782D0C();
      v36 = v49;
      sub_1C077CD6C((uint64_t)v33 + *(int *)(v35 + 20), v49);
      v37 = sub_1C07B2D80(v36, 1, v11);
      v38 = v47;
      if (v37 == 1)
      {
        sub_1C0784B6C(v36, (uint64_t *)&unk_1ED762690);
        sub_1C07825B4();
        sub_1C07B2D8C(v38, 0, 1, v11);
        sub_1C077F040();
        sub_1C0862F2C();
        swift_endAccess();
      }
      else
      {
        v41 = v36;
        v42 = v43;
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v28 + 32))(v43, v41, v11);
        if ((sub_1C106AD50() & 1) != 0)
        {
          sub_1C07825B4();
          sub_1C07B2D8C(v38, 0, 1, v11);
          sub_1C077F040();
          sub_1C0862F2C();
          swift_endAccess();
        }
        v32((char *)v42, v11);
      }
    }
  }
  sub_1C077F074();
}

uint64_t sub_1C0858AA0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unsigned __int16 v19;
  unsigned __int16 v20;
  _BYTE *v21;
  int v23;
  uint64_t v24;
  double v25;
  float v26;
  void (*v27)(char *, uint64_t);
  id *v28;
  double v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(char *, uint64_t, uint64_t);
  int v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _BYTE v44[48];

  v43 = a2;
  v5 = sub_1C07ACF80((uint64_t *)&unk_1ED762690);
  MEMORY[0x1E0C80A78](v5);
  v40 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v41 = (uint64_t)&v36 - v8;
  v42 = sub_1C106ADE0();
  v9 = *(_QWORD *)(v42 - 8);
  MEMORY[0x1E0C80A78](v42);
  v39 = (char *)&v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v36 - v12;
  v14 = *(_QWORD *)(a1 + 64);
  sub_1C0860008();
  if (v16)
  {
    v17 = v15;
    v18 = v16;
    sub_1C07DFF44(a1 + 16, (uint64_t)v44);
    sub_1C08384CC((uint64_t)v44, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1C0826EB0);
    sub_1C08554C0();
    v20 = v19;
    sub_1C08384CC((uint64_t)v44, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1C0826F50);
    if (!v3)
    {
      sub_1C085CE18(v17, v18);
      v38 = v23;
      v24 = v42;
      v37 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
      v37(v13, v14 + OBJC_IVAR____TtC24IntelligencePlatformCore15BehaviorContext_date, v42);
      sub_1C106ACD8();
      v26 = 1.0;
      if (v25 > 0.0)
        v26 = exp2(v25 / -3456000.0);
      v27 = *(void (**)(char *, uint64_t))(v9 + 8);
      v27(v13, v24);
      v28 = (id *)(v2 + OBJC_IVAR____TtC24IntelligencePlatformCore32CategoricalBehaviorHistogramBase_state);
      swift_beginAccess();
      *(float *)&v29 = v26;
      objc_msgSend(*v28, sel_add_a_b_, v20, (unsigned __int16)v38, v29);
      v30 = type metadata accessor for DecayingHistogramState();
      v31 = v41;
      sub_1C077CD6C((uint64_t)v28 + *(int *)(v30 + 20), v41);
      if (sub_1C07B2D80(v31, 1, v24) == 1)
      {
        sub_1C0784B6C(v31, (uint64_t *)&unk_1ED762690);
        v32 = (uint64_t)v40;
        v37(v40, v43, v24);
        sub_1C07B2D8C(v32, 0, 1, v24);
        swift_beginAccess();
        sub_1C0806880(v32, (uint64_t)v28 + *(int *)(v30 + 20));
        swift_endAccess();
      }
      else
      {
        v33 = v39;
        (*(void (**)(char *, uint64_t, uint64_t))(v9 + 32))(v39, v31, v24);
        v34 = v43;
        if ((sub_1C106AD50() & 1) != 0)
        {
          v35 = (uint64_t)v40;
          v37(v40, v34, v24);
          sub_1C07B2D8C(v35, 0, 1, v24);
          swift_beginAccess();
          sub_1C0806880(v35, (uint64_t)v28 + *(int *)(v30 + 20));
          swift_endAccess();
        }
        v27(v33, v24);
      }
    }
    return swift_bridgeObjectRelease();
  }
  else
  {
    sub_1C0861074();
    swift_allocError();
    *v21 = 0;
    return swift_willThrow();
  }
}

void sub_1C0858E68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  void (*v20)(_QWORD, _QWORD, _QWORD);
  unsigned __int16 v21;
  unsigned __int16 v22;
  int v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  double v28;
  float v29;
  void (*v30)(char *, uint64_t);
  id *v31;
  double v32;
  uint64_t v33;
  uint64_t v34;
  int v35;
  uint64_t v36;
  _BYTE *v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  char *v46;
  void (*v47)(_QWORD, _QWORD, _QWORD);
  uint64_t v48;
  _BYTE v49[56];

  v48 = a3;
  v45 = a2;
  v5 = sub_1C07ACF80((uint64_t *)&unk_1ED762690);
  MEMORY[0x1E0C80A78](v5);
  v46 = (char *)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v40 - v8;
  v10 = sub_1C106ADE0();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v40 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v40 - v15;
  v17 = *(_QWORD *)(a1 + 64);
  sub_1C08601F0();
  if ((v19 & 1) != 0)
  {
    sub_1C0861074();
    swift_allocError();
    *v37 = 0;
    swift_willThrow();
  }
  else
  {
    v48 = v18;
    v41 = v17;
    v42 = v16;
    v43 = v11;
    v44 = v9;
    v40 = v13;
    sub_1C07DFF44(a1 + 16, (uint64_t)v49);
    sub_1C08384CC((uint64_t)v49, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1C0826EB0);
    v20 = v47;
    sub_1C08554C0();
    v22 = v21;
    sub_1C08384CC((uint64_t)v49, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1C0826F50);
    if (!v20)
    {
      sub_1C085CF00();
      LODWORD(v48) = v23;
      v24 = v42;
      v25 = v43;
      v26 = v10;
      v47 = *(void (**)(_QWORD, _QWORD, _QWORD))(v43 + 16);
      v47(v42, v41 + OBJC_IVAR____TtC24IntelligencePlatformCore15BehaviorContext_date, v10);
      v27 = v45;
      sub_1C106ACD8();
      v29 = 1.0;
      if (v28 > 0.0)
        v29 = exp2(v28 / -3456000.0);
      v30 = *(void (**)(char *, uint64_t))(v25 + 8);
      v30(v24, v26);
      v31 = (id *)(v3 + OBJC_IVAR____TtC24IntelligencePlatformCore32CategoricalBehaviorHistogramBase_state);
      swift_beginAccess();
      *(float *)&v32 = v29;
      objc_msgSend(*v31, sel_add_a_b_, v22, (unsigned __int16)v48, v32);
      v33 = type metadata accessor for DecayingHistogramState();
      v34 = (uint64_t)v44;
      sub_1C077CD6C((uint64_t)v31 + *(int *)(v33 + 20), (uint64_t)v44);
      v35 = sub_1C07B2D80(v34, 1, v26);
      v36 = (uint64_t)v46;
      if (v35 == 1)
      {
        sub_1C0784B6C(v34, (uint64_t *)&unk_1ED762690);
        v47(v36, v27, v26);
        sub_1C07B2D8C(v36, 0, 1, v26);
        swift_beginAccess();
        sub_1C0806880(v36, (uint64_t)v31 + *(int *)(v33 + 20));
        swift_endAccess();
      }
      else
      {
        v38 = v34;
        v39 = v40;
        (*(void (**)(char *, uint64_t, uint64_t))(v25 + 32))(v40, v38, v26);
        if ((sub_1C106AD50() & 1) != 0)
        {
          v47(v36, v27, v26);
          sub_1C07B2D8C(v36, 0, 1, v26);
          swift_beginAccess();
          sub_1C0806880(v36, (uint64_t)v31 + *(int *)(v33 + 20));
          swift_endAccess();
        }
        v30(v39, v26);
      }
    }
  }
}

uint64_t sub_1C0859218(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  double v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  _BYTE *v22;
  void (*v24)(char *, char *, uint64_t);
  unsigned __int16 v25;
  unsigned __int16 v26;
  uint64_t v27;
  double v28;
  float v29;
  void (*v30)(char *, uint64_t);
  id *v31;
  double v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void (*v40)(char *, uint64_t, uint64_t);
  char *v41;
  char *v42;
  uint64_t v43;
  void (*v44)(char *, uint64_t, uint64_t, double);
  uint64_t v45;
  uint64_t v46;
  _BYTE v47[48];

  v45 = a2;
  v4 = sub_1C07ACF80((uint64_t *)&unk_1ED762690);
  MEMORY[0x1E0C80A78](v4);
  v42 = (char *)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v43 = (uint64_t)&v39 - v7;
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v39 - v9;
  v11 = sub_1C106ADE0();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v41 = (char *)&v39 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v39 - v15;
  v18 = MEMORY[0x1E0C80A78](v17);
  v20 = (char *)&v39 - v19;
  v21 = *(_QWORD *)(a1 + 64) + OBJC_IVAR____TtC24IntelligencePlatformCore15BehaviorContext_date;
  v44 = *(void (**)(char *, uint64_t, uint64_t, double))(v12 + 16);
  v44(v10, v21, v11, v18);
  sub_1C07B2D8C((uint64_t)v10, 0, 1, v11);
  if (sub_1C07B2D80((uint64_t)v10, 1, v11) == 1)
  {
    sub_1C0784B6C((uint64_t)v10, (uint64_t *)&unk_1ED762690);
    sub_1C0861074();
    swift_allocError();
    *v22 = 0;
    return swift_willThrow();
  }
  else
  {
    v24 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
    v24(v20, v10, v11);
    sub_1C07DFF44(a1 + 16, (uint64_t)v47);
    sub_1C08384CC((uint64_t)v47, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1C0826EB0);
    sub_1C08554C0();
    if (v2)
    {
      sub_1C08384CC((uint64_t)v47, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1C0826F50);
      return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v20, v11);
    }
    else
    {
      v26 = v25;
      v40 = (void (*)(char *, uint64_t, uint64_t))v24;
      v27 = v46;
      sub_1C08384CC((uint64_t)v47, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1C0826F50);
      ((void (*)(char *, uint64_t, uint64_t))v44)(v16, v21, v11);
      sub_1C106ACD8();
      v29 = 1.0;
      if (v28 > 0.0)
        v29 = exp2(v28 / -1209600.0);
      v30 = *(void (**)(char *, uint64_t))(v12 + 8);
      v30(v16, v11);
      v31 = (id *)(v27 + OBJC_IVAR____TtC24IntelligencePlatformCore21BehaviorHistogramBase_state);
      swift_beginAccess();
      *(float *)&v32 = v29;
      objc_msgSend(*v31, sel_add_a_b_, v26, 0, v32);
      v33 = type metadata accessor for DecayingHistogramState();
      v34 = v43;
      sub_1C077CD6C((uint64_t)v31 + *(int *)(v33 + 20), v43);
      if (sub_1C07B2D80(v34, 1, v11) == 1)
      {
        sub_1C0784B6C(v34, (uint64_t *)&unk_1ED762690);
        v35 = (uint64_t)v42;
        ((void (*)(char *, uint64_t, uint64_t))v44)(v42, v45, v11);
        sub_1C07B2D8C(v35, 0, 1, v11);
        swift_beginAccess();
        sub_1C0806880(v35, (uint64_t)v31 + *(int *)(v33 + 20));
        swift_endAccess();
      }
      else
      {
        v36 = v41;
        v40(v41, v34, v11);
        v37 = v45;
        if ((sub_1C106AD50() & 1) != 0)
        {
          v38 = (uint64_t)v42;
          ((void (*)(char *, uint64_t, uint64_t))v44)(v42, v37, v11);
          sub_1C07B2D8C(v38, 0, 1, v11);
          swift_beginAccess();
          sub_1C0806880(v38, (uint64_t)v31 + *(int *)(v33 + 20));
          swift_endAccess();
        }
        v30(v36, v11);
      }
      return ((uint64_t (*)(char *, uint64_t))v30)(v20, v11);
    }
  }
}

uint64_t sub_1C0859650(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  double v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  _BYTE *v22;
  void (*v24)(char *, char *, uint64_t);
  unsigned __int16 v25;
  unsigned __int16 v26;
  uint64_t v27;
  double v28;
  float v29;
  void (*v30)(char *, uint64_t);
  id *v31;
  double v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void (*v40)(char *, uint64_t, uint64_t);
  char *v41;
  char *v42;
  uint64_t v43;
  void (*v44)(char *, uint64_t, uint64_t, double);
  uint64_t v45;
  uint64_t v46;
  _BYTE v47[48];

  v45 = a2;
  v4 = sub_1C07ACF80((uint64_t *)&unk_1ED762690);
  MEMORY[0x1E0C80A78](v4);
  v42 = (char *)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v43 = (uint64_t)&v39 - v7;
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v39 - v9;
  v11 = sub_1C106ADE0();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v41 = (char *)&v39 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v39 - v15;
  v18 = MEMORY[0x1E0C80A78](v17);
  v20 = (char *)&v39 - v19;
  v21 = *(_QWORD *)(a1 + 64) + OBJC_IVAR____TtC24IntelligencePlatformCore15BehaviorContext_date;
  v44 = *(void (**)(char *, uint64_t, uint64_t, double))(v12 + 16);
  v44(v10, v21, v11, v18);
  sub_1C07B2D8C((uint64_t)v10, 0, 1, v11);
  if (sub_1C07B2D80((uint64_t)v10, 1, v11) == 1)
  {
    sub_1C0784B6C((uint64_t)v10, (uint64_t *)&unk_1ED762690);
    sub_1C0861074();
    swift_allocError();
    *v22 = 0;
    return swift_willThrow();
  }
  else
  {
    v24 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
    v24(v20, v10, v11);
    sub_1C07DFF44(a1 + 16, (uint64_t)v47);
    sub_1C08384CC((uint64_t)v47, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1C0826EB0);
    sub_1C08554C0();
    if (v2)
    {
      sub_1C08384CC((uint64_t)v47, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1C0826F50);
      return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v20, v11);
    }
    else
    {
      v26 = v25;
      v40 = (void (*)(char *, uint64_t, uint64_t))v24;
      v27 = v46;
      sub_1C08384CC((uint64_t)v47, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1C0826F50);
      ((void (*)(char *, uint64_t, uint64_t))v44)(v16, v21, v11);
      sub_1C106ACD8();
      v29 = 1.0;
      if (v28 > 0.0)
        v29 = exp2(v28 / -21600.0);
      v30 = *(void (**)(char *, uint64_t))(v12 + 8);
      v30(v16, v11);
      v31 = (id *)(v27 + OBJC_IVAR____TtC24IntelligencePlatformCore21BehaviorHistogramBase_state);
      swift_beginAccess();
      *(float *)&v32 = v29;
      objc_msgSend(*v31, sel_add_a_b_, v26, 0, v32);
      v33 = type metadata accessor for DecayingHistogramState();
      v34 = v43;
      sub_1C077CD6C((uint64_t)v31 + *(int *)(v33 + 20), v43);
      if (sub_1C07B2D80(v34, 1, v11) == 1)
      {
        sub_1C0784B6C(v34, (uint64_t *)&unk_1ED762690);
        v35 = (uint64_t)v42;
        ((void (*)(char *, uint64_t, uint64_t))v44)(v42, v45, v11);
        sub_1C07B2D8C(v35, 0, 1, v11);
        swift_beginAccess();
        sub_1C0806880(v35, (uint64_t)v31 + *(int *)(v33 + 20));
        swift_endAccess();
      }
      else
      {
        v36 = v41;
        v40(v41, v34, v11);
        v37 = v45;
        if ((sub_1C106AD50() & 1) != 0)
        {
          v38 = (uint64_t)v42;
          ((void (*)(char *, uint64_t, uint64_t))v44)(v42, v37, v11);
          sub_1C07B2D8C(v38, 0, 1, v11);
          swift_beginAccess();
          sub_1C0806880(v38, (uint64_t)v31 + *(int *)(v33 + 20));
          swift_endAccess();
        }
        v30(v36, v11);
      }
      return ((uint64_t (*)(char *, uint64_t))v30)(v20, v11);
    }
  }
}

uint64_t sub_1C0859A88(uint64_t a1, uint64_t a2, char *a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  _BYTE *v23;
  uint64_t v25;
  uint64_t v26;
  unsigned __int16 v27;
  unsigned __int16 v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  double v34;
  float v35;
  void (*v36)(char *, uint64_t);
  id *v37;
  double v38;
  uint64_t v39;
  uint64_t v40;
  int v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  char v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  void (*v53)(char *, uint64_t, uint64_t);
  char *v54;
  int v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  _BYTE v65[56];

  v64 = a3;
  v61 = a2;
  v5 = sub_1C07ACF80((uint64_t *)&unk_1ED762690);
  MEMORY[0x1E0C80A78](v5);
  v58 = (char *)&v52 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v60 = (uint64_t)&v52 - v8;
  v62 = sub_1C106ADE0();
  v59 = *(_QWORD *)(v62 - 8);
  MEMORY[0x1E0C80A78](v62);
  v10 = (char *)&v52 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v52 - v12;
  v14 = sub_1C07ACF80(&qword_1ED762CE0);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v52 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_1C106AE28();
  v18 = *(_QWORD *)(v17 - 8);
  MEMORY[0x1E0C80A78](v17);
  v20 = (char *)&v52 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = a1;
  v22 = *(_QWORD *)(a1 + 64);
  sub_1C08606F0();
  if (sub_1C07B2D80((uint64_t)v16, 1, v17) == 1)
  {
    sub_1C0784B6C((uint64_t)v16, &qword_1ED762CE0);
    sub_1C0861074();
    swift_allocError();
    *v23 = 0;
    return swift_willThrow();
  }
  else
  {
    v57 = v13;
    v64 = v10;
    v25 = v62;
    (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v20, v16, v17);
    sub_1C07DFF44(v21 + 16, (uint64_t)v65);
    sub_1C08384CC((uint64_t)v65, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1C0826EB0);
    v26 = v63;
    sub_1C08554C0();
    if (v26)
    {
      sub_1C08384CC((uint64_t)v65, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1C0826F50);
      return (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v20, v17);
    }
    else
    {
      v28 = v27;
      v63 = v17;
      v56 = v18;
      sub_1C08384CC((uint64_t)v65, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1C0826F50);
      sub_1C085CFBC();
      v55 = v29;
      v30 = v3;
      v54 = v20;
      v31 = v59;
      v32 = v57;
      v33 = v25;
      v53 = *(void (**)(char *, uint64_t, uint64_t))(v59 + 16);
      v53(v57, v22 + OBJC_IVAR____TtC24IntelligencePlatformCore15BehaviorContext_date, v25);
      sub_1C106ACD8();
      v35 = 1.0;
      if (v34 > 0.0)
        v35 = exp2(v34 / -3456000.0);
      v36 = *(void (**)(char *, uint64_t))(v31 + 8);
      v36(v32, v25);
      v37 = (id *)(v30 + OBJC_IVAR____TtC24IntelligencePlatformCore32CategoricalBehaviorHistogramBase_state);
      swift_beginAccess();
      *(float *)&v38 = v35;
      objc_msgSend(*v37, sel_add_a_b_, v28, (unsigned __int16)v55, v38);
      v39 = type metadata accessor for DecayingHistogramState();
      v40 = v60;
      sub_1C077CD6C((uint64_t)v37 + *(int *)(v39 + 20), v60);
      v41 = sub_1C07B2D80(v40, 1, v33);
      v42 = v64;
      if (v41 == 1)
      {
        sub_1C0784B6C(v40, (uint64_t *)&unk_1ED762690);
        v43 = (uint64_t)v58;
        v53(v58, v61, v33);
        sub_1C07B2D8C(v43, 0, 1, v33);
        swift_beginAccess();
        sub_1C0806880(v43, (uint64_t)v37 + *(int *)(v39 + 20));
        swift_endAccess();
        v44 = v56;
        v45 = v54;
      }
      else
      {
        (*(void (**)(char *, uint64_t, uint64_t))(v31 + 32))(v64, v40, v33);
        v46 = v61;
        v47 = sub_1C106AD50();
        v44 = v56;
        v45 = v54;
        if ((v47 & 1) != 0)
        {
          v48 = v46;
          v49 = v42;
          v50 = (uint64_t)v58;
          v53(v58, v48, v33);
          sub_1C07B2D8C(v50, 0, 1, v33);
          swift_beginAccess();
          sub_1C0806880(v50, (uint64_t)v37 + *(int *)(v39 + 20));
          swift_endAccess();
          v51 = v49;
        }
        else
        {
          v51 = v42;
        }
        v36(v51, v33);
      }
      return (*(uint64_t (**)(char *, uint64_t))(v44 + 8))(v45, v63);
    }
  }
}

void sub_1C0859F7C()
{
  sub_1C085A788();
}

void sub_1C0859F90()
{
  sub_1C085A8B0();
}

unint64_t sub_1C0859FA4()
{
  uint64_t v0;
  unint64_t result;
  uint64_t v2;
  uint64_t v3;
  id *v4;
  uint64_t i;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id *v9;
  unsigned __int16 *v10;
  unsigned int v11;

  if ((unsigned __int16)sub_1C0855074(&OBJC_IVAR____TtC24IntelligencePlatformCore21BehaviorHistogramBase_state, (SEL *)&selRef_aSet) >= 0x3E9u)
  {
    result = sub_1C0855074(&OBJC_IVAR____TtC24IntelligencePlatformCore21BehaviorHistogramBase_state, (SEL *)&selRef_aSet);
    if ((((unsigned __int16)result - 1000) & 0xFFFF0000) != 0)
    {
      __break(1u);
      goto LABEL_15;
    }
    v2 = sub_1C085A9D8((unsigned __int16)(result - 1000), 0, &OBJC_IVAR____TtC24IntelligencePlatformCore21BehaviorHistogramBase_state);
    v3 = *(_QWORD *)(v2 + 16);
    if (v3)
    {
      v4 = (id *)(v0 + OBJC_IVAR____TtC24IntelligencePlatformCore21BehaviorHistogramBase_state);
      swift_beginAccess();
      for (i = 0; i != v3; ++i)
      {
        v6 = *(unsigned __int16 *)(v2 + 2 * i + 32);
        objc_msgSend(*v4, sel_deleteWhereA_b_, v6, 0xFFFFLL);
      }
    }
    swift_bridgeObjectRelease();
  }
  result = sub_1C0855074(&OBJC_IVAR____TtC24IntelligencePlatformCore21BehaviorHistogramBase_state, (SEL *)&selRef_bSet);
  if ((unsigned __int16)result < 0xC9u)
    return result;
  result = sub_1C0855074(&OBJC_IVAR____TtC24IntelligencePlatformCore21BehaviorHistogramBase_state, (SEL *)&selRef_bSet);
  if ((((unsigned __int16)result - 200) & 0xFFFF0000) != 0)
  {
LABEL_15:
    __break(1u);
    return result;
  }
  v7 = sub_1C085A9D8((unsigned __int16)(result - 200), 1, &OBJC_IVAR____TtC24IntelligencePlatformCore21BehaviorHistogramBase_state);
  v8 = *(_QWORD *)(v7 + 16);
  if (v8)
  {
    v9 = (id *)(v0 + OBJC_IVAR____TtC24IntelligencePlatformCore21BehaviorHistogramBase_state);
    v10 = (unsigned __int16 *)(v7 + 32);
    swift_beginAccess();
    do
    {
      v11 = *v10++;
      objc_msgSend(*v9, sel_deleteWhereA_b_, 0xFFFFLL, v11);
      --v8;
    }
    while (v8);
  }
  return swift_bridgeObjectRelease();
}

void sub_1C085A144()
{
  uint64_t v0;
  unsigned __int16 v1;
  char v2;
  unsigned __int16 v3;
  uint64_t v4;
  uint64_t v5;

  sub_1C0862F0C();
  if ((unsigned __int16)sub_1C0855074(&OBJC_IVAR____TtC24IntelligencePlatformCore32CategoricalBehaviorHistogramBase_state, (SEL *)&selRef_aSet) < 0xBB9u)goto LABEL_8;
  sub_1C0855074(&OBJC_IVAR____TtC24IntelligencePlatformCore32CategoricalBehaviorHistogramBase_state, (SEL *)&selRef_aSet);
  sub_1C0788BA0();
  if (v2)
  {
    if (*(_QWORD *)(sub_1C0862F74(v1, v0, &OBJC_IVAR____TtC24IntelligencePlatformCore32CategoricalBehaviorHistogramBase_state)+ 16))
    {
      sub_1C0775864();
      while (1)
        sub_1C0797C30();
    }
    sub_1C07767AC();
LABEL_8:
    if ((unsigned __int16)sub_1C0855074(&OBJC_IVAR____TtC24IntelligencePlatformCore32CategoricalBehaviorHistogramBase_state, (SEL *)&selRef_bSet) >= 0x1Fu)
    {
      v3 = sub_1C0855074(&OBJC_IVAR____TtC24IntelligencePlatformCore32CategoricalBehaviorHistogramBase_state, (SEL *)&selRef_bSet);
      if (((v3 - 30) & 0xFFFF0000) != 0)
        goto LABEL_15;
      v5 = *(_QWORD *)(sub_1C0862FD0((unsigned __int16)(v3 - 30), v4, &OBJC_IVAR____TtC24IntelligencePlatformCore32CategoricalBehaviorHistogramBase_state)+ 16);
      if (v5)
      {
        sub_1C0775864();
        do
        {
          sub_1C07B7130();
          --v5;
        }
        while (v5);
      }
      sub_1C07767AC();
    }
    sub_1C0794D74();
    return;
  }
  __break(1u);
LABEL_15:
  __break(1u);
}

unint64_t sub_1C085A278()
{
  uint64_t v0;
  unint64_t result;
  uint64_t v2;
  uint64_t v3;
  id *v4;
  uint64_t i;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id *v9;
  unsigned __int16 *v10;
  unsigned int v11;

  if ((unsigned __int16)sub_1C0855074(&OBJC_IVAR____TtC24IntelligencePlatformCore21BehaviorHistogramBase_state, (SEL *)&selRef_aSet) >= 0x3E9u)
  {
    result = sub_1C0855074(&OBJC_IVAR____TtC24IntelligencePlatformCore21BehaviorHistogramBase_state, (SEL *)&selRef_aSet);
    if ((((unsigned __int16)result - 1000) & 0xFFFF0000) != 0)
    {
      __break(1u);
      goto LABEL_15;
    }
    v2 = sub_1C085A9D8((unsigned __int16)(result - 1000), 0, &OBJC_IVAR____TtC24IntelligencePlatformCore21BehaviorHistogramBase_state);
    v3 = *(_QWORD *)(v2 + 16);
    if (v3)
    {
      v4 = (id *)(v0 + OBJC_IVAR____TtC24IntelligencePlatformCore21BehaviorHistogramBase_state);
      swift_beginAccess();
      for (i = 0; i != v3; ++i)
      {
        v6 = *(unsigned __int16 *)(v2 + 2 * i + 32);
        objc_msgSend(*v4, sel_deleteWhereA_b_, v6, 0xFFFFLL);
      }
    }
    swift_bridgeObjectRelease();
  }
  result = sub_1C0855074(&OBJC_IVAR____TtC24IntelligencePlatformCore21BehaviorHistogramBase_state, (SEL *)&selRef_bSet);
  if ((unsigned __int16)result < 5u)
    return result;
  result = sub_1C0855074(&OBJC_IVAR____TtC24IntelligencePlatformCore21BehaviorHistogramBase_state, (SEL *)&selRef_bSet);
  if ((((unsigned __int16)result - 4) & 0xFFFF0000) != 0)
  {
LABEL_15:
    __break(1u);
    return result;
  }
  v7 = sub_1C085A9D8((unsigned __int16)(result - 4), 1, &OBJC_IVAR____TtC24IntelligencePlatformCore21BehaviorHistogramBase_state);
  v8 = *(_QWORD *)(v7 + 16);
  if (v8)
  {
    v9 = (id *)(v0 + OBJC_IVAR____TtC24IntelligencePlatformCore21BehaviorHistogramBase_state);
    v10 = (unsigned __int16 *)(v7 + 32);
    swift_beginAccess();
    do
    {
      v11 = *v10++;
      objc_msgSend(*v9, sel_deleteWhereA_b_, 0xFFFFLL, v11);
      --v8;
    }
    while (v8);
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C085A418()
{
  uint64_t v0;
  uint64_t result;
  uint64_t v2;
  uint64_t v3;
  id *v4;
  uint64_t i;
  uint64_t v6;
  unsigned __int16 v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  id *v11;
  unsigned __int16 *v12;
  unsigned int v13;

  if ((unsigned __int16)sub_1C0855074(&OBJC_IVAR____TtC24IntelligencePlatformCore21BehaviorHistogramBase_state, (SEL *)&selRef_aSet) >= 0x3E9u)
  {
    result = sub_1C0855074(&OBJC_IVAR____TtC24IntelligencePlatformCore21BehaviorHistogramBase_state, (SEL *)&selRef_aSet);
    if ((((unsigned __int16)result - 1000) & 0xFFFF0000) != 0)
    {
      __break(1u);
      goto LABEL_17;
    }
    v2 = sub_1C085A9D8((unsigned __int16)(result - 1000), 0, &OBJC_IVAR____TtC24IntelligencePlatformCore21BehaviorHistogramBase_state);
    v3 = *(_QWORD *)(v2 + 16);
    if (v3)
    {
      v4 = (id *)(v0 + OBJC_IVAR____TtC24IntelligencePlatformCore21BehaviorHistogramBase_state);
      swift_beginAccess();
      for (i = 0; i != v3; ++i)
      {
        v6 = *(unsigned __int16 *)(v2 + 2 * i + 32);
        objc_msgSend(*v4, sel_deleteWhereA_b_, v6, 0xFFFFLL);
      }
    }
    swift_bridgeObjectRelease();
  }
  result = sub_1C0855074(&OBJC_IVAR____TtC24IntelligencePlatformCore21BehaviorHistogramBase_state, (SEL *)&selRef_bSet);
  v7 = result;
  if (qword_1ED7580E0 != -1)
    result = swift_once();
  v8 = (unsigned __int16)word_1ED78D770;
  if ((unsigned __int16)word_1ED78D770 < v7)
  {
    result = sub_1C0855074(&OBJC_IVAR____TtC24IntelligencePlatformCore21BehaviorHistogramBase_state, (SEL *)&selRef_bSet);
    if ((((unsigned __int16)result - v8) & 0xFFFF0000) == 0)
    {
      v9 = sub_1C085A9D8((unsigned __int16)(result - v8), 1, &OBJC_IVAR____TtC24IntelligencePlatformCore21BehaviorHistogramBase_state);
      v10 = *(_QWORD *)(v9 + 16);
      if (v10)
      {
        v11 = (id *)(v0 + OBJC_IVAR____TtC24IntelligencePlatformCore21BehaviorHistogramBase_state);
        v12 = (unsigned __int16 *)(v9 + 32);
        swift_beginAccess();
        do
        {
          v13 = *v12++;
          objc_msgSend(*v11, sel_deleteWhereA_b_, 0xFFFFLL, v13);
          --v10;
        }
        while (v10);
      }
      return swift_bridgeObjectRelease();
    }
LABEL_17:
    __break(1u);
  }
  return result;
}

unint64_t sub_1C085A5E8()
{
  uint64_t v0;
  unint64_t result;
  uint64_t v2;
  uint64_t v3;
  id *v4;
  uint64_t i;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id *v9;
  unsigned __int16 *v10;
  unsigned int v11;

  if ((unsigned __int16)sub_1C0855074(&OBJC_IVAR____TtC24IntelligencePlatformCore21BehaviorHistogramBase_state, (SEL *)&selRef_aSet) >= 0xBB9u)
  {
    result = sub_1C0855074(&OBJC_IVAR____TtC24IntelligencePlatformCore21BehaviorHistogramBase_state, (SEL *)&selRef_aSet);
    if ((((unsigned __int16)result - 3000) & 0xFFFF0000) != 0)
    {
      __break(1u);
      goto LABEL_15;
    }
    v2 = sub_1C085A9D8((unsigned __int16)(result - 3000), 0, &OBJC_IVAR____TtC24IntelligencePlatformCore21BehaviorHistogramBase_state);
    v3 = *(_QWORD *)(v2 + 16);
    if (v3)
    {
      v4 = (id *)(v0 + OBJC_IVAR____TtC24IntelligencePlatformCore21BehaviorHistogramBase_state);
      swift_beginAccess();
      for (i = 0; i != v3; ++i)
      {
        v6 = *(unsigned __int16 *)(v2 + 2 * i + 32);
        objc_msgSend(*v4, sel_deleteWhereA_b_, v6, 0xFFFFLL);
      }
    }
    swift_bridgeObjectRelease();
  }
  result = sub_1C0855074(&OBJC_IVAR____TtC24IntelligencePlatformCore21BehaviorHistogramBase_state, (SEL *)&selRef_bSet);
  if ((unsigned __int16)result < 3u)
    return result;
  result = sub_1C0855074(&OBJC_IVAR____TtC24IntelligencePlatformCore21BehaviorHistogramBase_state, (SEL *)&selRef_bSet);
  if ((((unsigned __int16)result - 2) & 0xFFFF0000) != 0)
  {
LABEL_15:
    __break(1u);
    return result;
  }
  v7 = sub_1C085A9D8((unsigned __int16)(result - 2), 1, &OBJC_IVAR____TtC24IntelligencePlatformCore21BehaviorHistogramBase_state);
  v8 = *(_QWORD *)(v7 + 16);
  if (v8)
  {
    v9 = (id *)(v0 + OBJC_IVAR____TtC24IntelligencePlatformCore21BehaviorHistogramBase_state);
    v10 = (unsigned __int16 *)(v7 + 32);
    swift_beginAccess();
    do
    {
      v11 = *v10++;
      objc_msgSend(*v9, sel_deleteWhereA_b_, 0xFFFFLL, v11);
      --v8;
    }
    while (v8);
  }
  return swift_bridgeObjectRelease();
}

void sub_1C085A788()
{
  char v0;
  uint64_t v1;
  unsigned __int16 v2;
  char v3;
  unsigned __int16 v4;
  uint64_t v5;
  uint64_t v6;

  sub_1C0862F0C();
  sub_1C0855074(&OBJC_IVAR____TtC24IntelligencePlatformCore21BehaviorHistogramBase_state, (SEL *)&selRef_aSet);
  sub_1C077E1CC();
  if (v0)
  {
    sub_1C0855074(&OBJC_IVAR____TtC24IntelligencePlatformCore21BehaviorHistogramBase_state, (SEL *)&selRef_aSet);
    sub_1C0788BA0();
    if (!v3)
    {
      __break(1u);
      goto LABEL_16;
    }
    if (*(_QWORD *)(sub_1C0862F74(v2, v1, &OBJC_IVAR____TtC24IntelligencePlatformCore21BehaviorHistogramBase_state) + 16))
    {
      sub_1C0775864();
      while (1)
        sub_1C0797C30();
    }
    sub_1C07767AC();
  }
  if ((unsigned __int16)sub_1C0855074(&OBJC_IVAR____TtC24IntelligencePlatformCore21BehaviorHistogramBase_state, (SEL *)&selRef_bSet) < 8u)
  {
LABEL_15:
    sub_1C0794D74();
    return;
  }
  v4 = sub_1C0855074(&OBJC_IVAR____TtC24IntelligencePlatformCore21BehaviorHistogramBase_state, (SEL *)&selRef_bSet);
  if (((v4 - 7) & 0xFFFF0000) == 0)
  {
    v6 = *(_QWORD *)(sub_1C0862FD0((unsigned __int16)(v4 - 7), v5, &OBJC_IVAR____TtC24IntelligencePlatformCore21BehaviorHistogramBase_state)+ 16);
    if (v6)
    {
      sub_1C0775864();
      do
      {
        sub_1C07B7130();
        --v6;
      }
      while (v6);
    }
    sub_1C07767AC();
    goto LABEL_15;
  }
LABEL_16:
  __break(1u);
}

void sub_1C085A8B0()
{
  char v0;
  uint64_t v1;
  unsigned __int16 v2;
  char v3;
  unsigned __int16 v4;
  uint64_t v5;
  uint64_t v6;

  sub_1C0862F0C();
  sub_1C0855074(&OBJC_IVAR____TtC24IntelligencePlatformCore21BehaviorHistogramBase_state, (SEL *)&selRef_aSet);
  sub_1C077E1CC();
  if (v0)
  {
    sub_1C0855074(&OBJC_IVAR____TtC24IntelligencePlatformCore21BehaviorHistogramBase_state, (SEL *)&selRef_aSet);
    sub_1C0788BA0();
    if (!v3)
    {
      __break(1u);
      goto LABEL_16;
    }
    if (*(_QWORD *)(sub_1C0862F74(v2, v1, &OBJC_IVAR____TtC24IntelligencePlatformCore21BehaviorHistogramBase_state) + 16))
    {
      sub_1C0775864();
      while (1)
        sub_1C0797C30();
    }
    sub_1C07767AC();
  }
  if ((unsigned __int16)sub_1C0855074(&OBJC_IVAR____TtC24IntelligencePlatformCore21BehaviorHistogramBase_state, (SEL *)&selRef_bSet) < 2u)
  {
LABEL_15:
    sub_1C0794D74();
    return;
  }
  v4 = sub_1C0855074(&OBJC_IVAR____TtC24IntelligencePlatformCore21BehaviorHistogramBase_state, (SEL *)&selRef_bSet);
  if (((v4 - 1) & 0xFFFF0000) == 0)
  {
    v6 = *(_QWORD *)(sub_1C0862FD0((unsigned __int16)(v4 - 1), v5, &OBJC_IVAR____TtC24IntelligencePlatformCore21BehaviorHistogramBase_state)+ 16);
    if (v6)
    {
      sub_1C0775864();
      do
      {
        sub_1C07B7130();
        --v6;
      }
      while (v6);
    }
    sub_1C07767AC();
    goto LABEL_15;
  }
LABEL_16:
  __break(1u);
}

uint64_t sub_1C085A9D8(int64_t a1, char a2, _QWORD *a3)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  id *v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t (*v31)(uint64_t, _QWORD);
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t (*v45)(uint64_t, _QWORD);
  uint64_t v46;
  unint64_t v47;
  unint64_t v48;
  unint64_t v49;
  char v50;
  char v51;
  unint64_t v52;
  char v53;
  unint64_t v54;
  char v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  char v59;
  unint64_t v60;
  char v61;
  unint64_t v62;
  char v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  int64_t v70;
  __int16 *v71;
  uint64_t v72;
  __int16 v73;
  __int16 v74;
  unint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t result;
  id *v79;
  uint64_t v80;
  uint64_t v81;
  int64_t v82;
  uint64_t v83;
  uint64_t v84[4];
  uint64_t v85;

  v82 = a1;
  v8 = sub_1C106AFF0();
  v80 = *(_QWORD *)(v8 - 8);
  v81 = v8;
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v9);
  sub_1C077AF80();
  v12 = v10 - v11;
  MEMORY[0x1E0C80A78](v13);
  sub_1C0789AD4();
  v14 = sub_1C07BBD98();
  v83 = *(_QWORD *)(v14 - 8);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v15);
  sub_1C077AF80();
  v18 = v16 - v17;
  MEMORY[0x1E0C80A78](v19);
  v21 = (char *)&v79 - v20;
  v22 = sub_1C106F97C();
  v23 = (id *)(v3 + *a3);
  if ((a2 & 1) == 0)
  {
    swift_beginAccess();
    v24 = objc_msgSend(*v23, sel_aSet);
    sub_1C106AFFC();

    sub_1C0794BAC(&qword_1EF632298, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB13A0], MEMORY[0x1E0CB13E0]);
    v25 = sub_1C10702D0();
    v26 = MEMORY[0x1E0DEE9D8];
    v27 = (unint64_t)v21;
    if (v25)
    {
      v28 = v25;
      sub_1C07AB6DC();
      v29 = v85;
      sub_1C10702C4();
      if (v28 < 0)
      {
LABEL_61:
        __break(1u);
LABEL_62:
        __break(1u);
LABEL_63:
        sub_1C07A3684();
        sub_1C0789DAC();
LABEL_65:
        sub_1C07B15F8();
        sub_1C078A734();
      }
      do
      {
        v30 = v14;
        v31 = (uint64_t (*)(uint64_t, _QWORD))sub_1C1070300();
        sub_1C07BFEB4(v31);
        if ((v27 & 0x8000000000000000) != 0)
          goto LABEL_63;
        if (v27 >= 0x10000)
          goto LABEL_64;
        v32 = v4;
        v85 = v29;
        v33 = *(_QWORD *)(v29 + 16);
        v34 = v33 + 1;
        if (v33 >= *(_QWORD *)(v29 + 24) >> 1)
        {
          sub_1C07BBEE4();
          v34 = v29;
          v29 = v85;
        }
        *(_QWORD *)(v29 + 16) = v34;
        *(_WORD *)(v29 + 2 * v33 + 32) = v27;
        v4 = v32;
        v14 = v30;
        sub_1C10702DC();
        --v28;
      }
      while (v28);
      (*(void (**)(uint64_t, uint64_t))(v80 + 8))(v4, v81);
      v26 = v85;
      v23 = v79;
    }
    sub_1C0862EA8();
    if (*(_QWORD *)(v26 + 16))
    {
      while (1)
      {
        objc_msgSend(*v23, sel_lookupUnsmoothedA_b_, *(unsigned __int16 *)(v26 + 32), 0xFFFFLL);
        sub_1C0862F88();
        sub_1C07AF548();
        sub_1C077F0AC();
        if (v51)
          break;
        v52 = v49;
        v53 = v50;
        sub_1C07ACF80(&qword_1EF6322A0);
        if ((sub_1C07AF1F8() & 1) != 0)
        {
          v54 = sub_1C0862F7C();
          if ((v53 & 1) != (v55 & 1))
            goto LABEL_66;
          v52 = v54;
        }
        v56 = v84[0];
        if ((v53 & 1) != 0)
        {
          *(_DWORD *)(*(_QWORD *)(v84[0] + 56) + 4 * v52) = v5;
        }
        else
        {
          sub_1C07A1B60();
          if (v51)
            goto LABEL_56;
          *(_QWORD *)(v56 + 16) = v57;
        }
        sub_1C07BAB64();
      }
      __break(1u);
LABEL_55:
      __break(1u);
LABEL_56:
      __break(1u);
LABEL_57:
      __break(1u);
      goto LABEL_58;
    }
LABEL_38:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain_n();
    sub_1C08A2F90();
    v67 = v66;
    sub_1C0778580();
    v84[0] = v67;
    sub_1C0853AC0(v84);
    sub_1C0778580();
    v68 = v84[0];
    sub_1C0778580();
    v69 = *(_QWORD *)(v68 + 16);
    if ((uint64_t)v69 >= v82)
      v70 = v82;
    else
      v70 = *(_QWORD *)(v68 + 16);
    if ((v70 & 0x8000000000000000) == 0)
    {
      if (v70)
      {
        if (!v69)
        {
LABEL_59:
          __break(1u);
          goto LABEL_60;
        }
        if (v70 - 1 >= v69)
        {
LABEL_60:
          __break(1u);
          goto LABEL_61;
        }
        v71 = (__int16 *)(v68 + 32);
        v72 = MEMORY[0x1E0DEE9D8];
        do
        {
          v74 = *v71;
          v71 += 4;
          v73 = v74;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_1C0862F68();
            v72 = v76;
          }
          v75 = *(_QWORD *)(v72 + 16);
          if (v75 >= *(_QWORD *)(v72 + 24) >> 1)
          {
            sub_1C0862F68();
            v72 = v77;
          }
          *(_QWORD *)(v72 + 16) = v75 + 1;
          *(_WORD *)(v72 + 2 * v75 + 32) = v73;
          --v70;
        }
        while (v70);
      }
      else
      {
        v72 = MEMORY[0x1E0DEE9D8];
      }
      swift_release();
      return v72;
    }
LABEL_58:
    __break(1u);
    goto LABEL_59;
  }
  swift_beginAccess();
  v35 = objc_msgSend(*v23, sel_bSet);
  sub_1C106AFFC();

  sub_1C0794BAC(&qword_1EF632298, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB13A0], MEMORY[0x1E0CB13E0]);
  v37 = v36;
  v38 = sub_1C10702D0();
  v39 = MEMORY[0x1E0DEE9D8];
  if (!v38)
    goto LABEL_28;
  v40 = v38;
  sub_1C07AB6DC();
  v41 = v85;
  sub_1C10702C4();
  if (v40 < 0)
    goto LABEL_62;
  do
  {
    v42 = v22;
    v43 = v14;
    v44 = v37;
    v45 = (uint64_t (*)(uint64_t, _QWORD))sub_1C1070300();
    sub_1C07BFEB4(v45);
    if ((v18 & 0x8000000000000000) != 0)
      goto LABEL_63;
    if (v18 >= 0x10000)
    {
LABEL_64:
      sub_1C07A3684();
      sub_1C07A8544();
      goto LABEL_65;
    }
    v46 = v12;
    v85 = v41;
    v47 = *(_QWORD *)(v41 + 16);
    v48 = v47 + 1;
    if (v47 >= *(_QWORD *)(v41 + 24) >> 1)
    {
      sub_1C07BBEE4();
      v48 = v41;
      v41 = v85;
    }
    *(_QWORD *)(v41 + 16) = v48;
    *(_WORD *)(v41 + 2 * v47 + 32) = v18;
    v12 = v46;
    v37 = v44;
    v14 = v43;
    sub_1C10702DC();
    --v40;
    v22 = v42;
  }
  while (v40);
  (*(void (**)(uint64_t, uint64_t))(v80 + 8))(v12, v81);
  v39 = v85;
  v23 = v79;
LABEL_28:
  sub_1C0862EA8();
  if (!*(_QWORD *)(v39 + 16))
    goto LABEL_38;
  while (2)
  {
    objc_msgSend(*v23, sel_lookupUnsmoothedA_b_, 0xFFFFLL, *(unsigned __int16 *)(v39 + 32));
    sub_1C0862F88();
    sub_1C07AF548();
    sub_1C077F0AC();
    if (v51)
      goto LABEL_55;
    v60 = v58;
    v61 = v59;
    sub_1C07ACF80(&qword_1EF6322A0);
    if ((sub_1C07AF1F8() & 1) == 0)
      goto LABEL_33;
    v62 = sub_1C0862F7C();
    if ((v61 & 1) == (v63 & 1))
    {
      v60 = v62;
LABEL_33:
      v64 = v84[0];
      if ((v61 & 1) != 0)
      {
        *(_DWORD *)(*(_QWORD *)(v84[0] + 56) + 4 * v60) = v5;
      }
      else
      {
        sub_1C07A1B60();
        if (v51)
          goto LABEL_57;
        *(_QWORD *)(v64 + 16) = v65;
      }
      sub_1C07BAB64();
      continue;
    }
    break;
  }
LABEL_66:
  sub_1C1070D44();
  __break(1u);
  result = swift_release();
  __break(1u);
  return result;
}

uint64_t sub_1C085B074(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  id *v5;
  uint64_t v6;
  uint64_t v7;

  sub_1C07ACF80((uint64_t *)&unk_1ED762690);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v4);
  sub_1C07785B8();
  v5 = (id *)(v1 + *a1);
  sub_1C0775864();
  objc_msgSend(*v5, sel_clear);
  v6 = sub_1C077AE98();
  sub_1C07B2D8C(v2, 1, 1, v6);
  sub_1C077F040();
  v7 = sub_1C0782D0C();
  sub_1C0806880(v2, (uint64_t)v5 + *(int *)(v7 + 20));
  return swift_endAccess();
}

uint64_t sub_1C085B130(uint64_t a1, _OWORD *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v7;

  *(_QWORD *)(v5 + 104) = a4;
  *(_QWORD *)(v5 + 112) = a5;
  *(_QWORD *)(v5 + 88) = a1;
  *(_QWORD *)(v5 + 96) = a3;
  v7 = sub_1C0780478();
  *(_QWORD *)(v5 + 120) = v7;
  *(_QWORD *)(v5 + 128) = *(_QWORD *)(v7 - 8);
  *(_QWORD *)(v5 + 136) = sub_1C0793600();
  *(_QWORD *)(v5 + 144) = sub_1C0793600();
  *(_QWORD *)(v5 + 152) = sub_1C0793600();
  *(_QWORD *)(v5 + 160) = sub_1C0793600();
  *(_OWORD *)(v5 + 168) = *a2;
  return swift_task_switch();
}

void sub_1C085B1B4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t ObjectType;
  void (*v8)(uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(uint64_t, uint64_t, uint64_t);
  void (*v19)(uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v27;
  NSObject *v28;
  os_log_type_t v29;
  uint64_t v30;
  uint8_t *v31;
  uint64_t v32;
  uint64_t *i;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(uint64_t, uint64_t);
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _BYTE *v45;
  os_log_type_t v47;
  NSObject *log;
  uint64_t v49;
  void (*v50)(unint64_t, uint64_t, uint64_t);
  uint64_t v51;
  uint64_t v52;

  v1 = v0[14];
  v2 = *(_QWORD *)(v1 + 16);
  v0[23] = v2;
  v4 = v0[19];
  v3 = v0[20];
  if (v2)
  {
    v5 = v0[16];
    v49 = v0[15];
    v6 = *(_QWORD *)(v1 + 40);
    ObjectType = swift_getObjectType();
    v8 = *(void (**)(uint64_t, uint64_t))(v6 + 64);
    sub_1C077B694();
    v8(ObjectType, v6);
    swift_unknownObjectRelease();
    v9 = v49;
    v50 = *(void (**)(unint64_t, uint64_t, uint64_t))(v5 + 32);
    v50(v3, v4, v9);
    v10 = swift_task_alloc();
    *(_QWORD *)(v10 + 16) = v3;
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    sub_1C0D2F0D0((uint64_t (*)(__int128 *))sub_1C0862DC0, v10, v1);
    v12 = v11;
    sub_1C07767BC();
    v13 = *(_QWORD *)(v12 + 16);
    swift_bridgeObjectRelease();
    if (v13 == v2)
    {
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      v14 = (uint64_t *)(v1 + 40);
      do
      {
        v15 = v0[11];
        v16 = *v14;
        v17 = swift_getObjectType();
        v18 = *(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 128);
        swift_unknownObjectRetain();
        v18(v15, v17, v16);
        swift_unknownObjectRelease();
        v14 += 2;
        --v2;
      }
      while (v2);
      v19 = (void (*)(uint64_t))v0[21];
      v20 = v0[13];
      v21 = v0[12];
      swift_bridgeObjectRelease();
      v22 = OBJC_IVAR____TtC24IntelligencePlatformCore21CachedContextProvider_lastBehaviorEventDigested;
      v0[24] = OBJC_IVAR____TtC24IntelligencePlatformCore21CachedContextProvider_lastBehaviorEventDigested;
      *(_QWORD *)(v21 + v22) = v20;
      swift_retain();
      v23 = swift_release();
      v0[4] = 0;
      v0[5] = 0;
      v19(v23);
      v0[25] = 0;
      sub_1C078B9B8();
      v24 = (_QWORD *)swift_task_alloc();
      v0[26] = v24;
      *v24 = v0;
      v24[1] = sub_1C085B664;
      sub_1C0789AE4();
      __asm { BR              X1 }
    }
    if (qword_1ED760048 != -1)
      swift_once();
    v27 = sub_1C106F544();
    sub_1C079E000(v27, (uint64_t)qword_1ED78D800);
    swift_bridgeObjectRetain_n();
    v28 = sub_1C106F538();
    v29 = sub_1C107039C();
    if (os_log_type_enabled(v28, v29))
    {
      v47 = v29;
      log = v28;
      v30 = v0[16];
      v31 = (uint8_t *)sub_1C0775854();
      v51 = sub_1C0775854();
      *(_DWORD *)v31 = 136315138;
      v52 = MEMORY[0x1E0DEE9D8];
      sub_1C09D331C();
      v32 = v52;
      for (i = (uint64_t *)(v1 + 40); ; i += 2)
      {
        v34 = *i;
        v35 = swift_getObjectType();
        v36 = *(void (**)(uint64_t, uint64_t))(v34 + 64);
        swift_unknownObjectRetain();
        v36(v35, v34);
        swift_unknownObjectRelease();
        v52 = v32;
        v37 = *(_QWORD *)(v32 + 16);
        if (v37 >= *(_QWORD *)(v32 + 24) >> 1)
        {
          sub_1C09D331C();
          v32 = v52;
        }
        v38 = v0[17];
        v39 = v0[15];
        *(_QWORD *)(v32 + 16) = v37 + 1;
        v50(v32+ ((*(unsigned __int8 *)(v30 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80))+ *(_QWORD *)(v30 + 72) * v37, v38, v39);
        if (!--v2)
        {
          v40 = MEMORY[0x1C3BA683C](v32, v0[15]);
          v42 = v41;
          swift_release();
          v0[6] = sub_1C0788DAC(v40, v42, &v51);
          sub_1C10705AC();
          swift_bridgeObjectRelease();
          sub_1C07758A4();
          _os_log_impl(&dword_1C0771000, log, v47, "Mismatch histogram behavior types. Skipping digest of histograms: %s", v31, 0xCu);
          swift_arrayDestroy();
          sub_1C0776778();
        }
      }
    }
    sub_1C07758A4();

    v43 = v0[20];
    v44 = v0[16];
    sub_1C0861074();
    swift_allocError();
    *v45 = 1;
    swift_willThrow();
    sub_1C078303C(v43, *(uint64_t (**)(uint64_t, uint64_t))(v44 + 8));
    swift_task_dealloc();
    sub_1C07767BC();
    sub_1C07796F8();
    sub_1C07758BC();
    sub_1C0789AE4();
    __asm { BR              X0 }
  }
  sub_1C07758BC();
  sub_1C0779D18();
  sub_1C07767BC();
  sub_1C07796F8();
  sub_1C0789AE4();
  __asm { BR              X1 }
}

uint64_t sub_1C085B664()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 216) = v0;
  swift_task_dealloc();
  return sub_1C077AEC4();
}

uint64_t sub_1C085B6C0()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 224) = *(_QWORD *)(v0 + 56);
  return sub_1C078C868();
}

void sub_1C085B6D4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  BOOL v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  _QWORD *v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t ObjectType;
  void (*v28)(uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v32;
  uint64_t v33;

  v3 = v0[28];
  if (!v3)
  {
    swift_release();
    v1 = v0[4];
    if (v1 < 1)
      goto LABEL_11;
    v2 = v0[5];
    if (qword_1ED760048 == -1)
    {
LABEL_7:
      v14 = v0[16];
      v15 = sub_1C106F544();
      sub_1C079E000(v15, (uint64_t)qword_1ED78D800);
      sub_1C07AC42C(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 16));
      v16 = sub_1C106F538();
      v17 = sub_1C1070378();
      if (os_log_type_enabled(v16, v17))
      {
        sub_1C077E6D8((double)v1, 10000.0);
        sub_1C07BC228();
        v18 = swift_slowAlloc();
        v33 = sub_1C0775854();
        *(_DWORD *)v18 = 136315394;
        sub_1C0794BAC((unint64_t *)&qword_1ED744A68, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3C130], MEMORY[0x1E0D3C168]);
        v19 = sub_1C1070C0C();
        v0[9] = sub_1C0788DAC(v19, v20, &v33);
        sub_1C10705AC();
        swift_bridgeObjectRelease();
        sub_1C07879B4();
        *(_WORD *)(v18 + 12) = 2048;
        v0[10] = v2;
        sub_1C10705AC();
        _os_log_impl(&dword_1C0771000, v16, v17, "[tracking %s]: Skipped %f%% behavior events during digest due to missing context", (uint8_t *)v18, 0x16u);
        swift_arrayDestroy();
        sub_1C0776778();
      }
      sub_1C07879B4();

LABEL_11:
      *(_QWORD *)(v0[12] + v0[24]) = 0;
      swift_release();
      sub_1C077AE90();
      v23 = 0;
      v24 = 0;
      do
      {
        v25 = v0[23];
        v26 = *(_QWORD *)(v0[14] + v23 + 40);
        ++v24;
        ObjectType = swift_getObjectType();
        v28 = *(void (**)(uint64_t, uint64_t))(v26 + 136);
        sub_1C077B694();
        v28(ObjectType, v26);
        swift_unknownObjectRelease();
        v23 += 16;
      }
      while (v24 != v25);
      v29 = v0[20];
      v30 = v0[16];
      swift_bridgeObjectRelease();
      sub_1C078303C(v29, *(uint64_t (**)(uint64_t, uint64_t))(v30 + 8));
      sub_1C07BC0B8();
      sub_1C07796F8();
      sub_1C07758BC();
      sub_1C0779D18();
      sub_1C0781CE4();
      __asm { BR              X1 }
    }
LABEL_15:
    swift_once();
    goto LABEL_7;
  }
  v4 = v0[25];
  v5 = __OFADD__(v4, 1);
  v6 = v4 + 1;
  if (v5)
  {
    __break(1u);
    goto LABEL_15;
  }
  v32 = v6;
  v7 = v0[27];
  v8 = v0[20];
  v9 = v0[14];
  v11 = v0[11];
  v10 = v0[12];
  v12 = (void *)MEMORY[0x1C3BA79F4]();
  sub_1C085BB00(v3, v9, v11, v10, v0 + 5, v0 + 4, v8);
  if (!v7)
  {
    objc_autoreleasePoolPop(v12);
    swift_release();
    v0[25] = v32;
    sub_1C078B9B8();
    v21 = (_QWORD *)swift_task_alloc();
    v0[26] = v21;
    *v21 = v0;
    v21[1] = sub_1C085B664;
    sub_1C0781CE4();
    __asm { BR              X1 }
  }
  sub_1C0781CE4();
  objc_autoreleasePoolPop(v13);
}

uint64_t sub_1C085BA3C()
{
  return sub_1C078C868();
}

uint64_t sub_1C085BA48()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 64) = *(_QWORD *)(v0 + 216);
  sub_1C07ACF80(&qword_1ED7614F0);
  swift_willThrowTypedImpl();
  return sub_1C077AEC4();
}

uint64_t sub_1C085BAA0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 160);
  v2 = *(_QWORD *)(v0 + 128);
  swift_release();
  sub_1C078303C(v1, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  sub_1C07BC0B8();
  sub_1C07796F8();
  sub_1C07758BC();
  sub_1C0779D18();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1C085BB00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5, _QWORD *a6, uint64_t a7)
{
  void *v7;
  void *v8;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  __int128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t ObjectType;
  void (*v25)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  id v26;
  char v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  id v31;
  id v32;
  NSObject *v33;
  os_log_type_t v34;
  uint64_t v35;
  uint64_t (*v36)(void);
  unsigned __int8 v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  unint64_t v45;
  unint64_t v46;
  uint64_t v47;
  unint64_t v48;
  os_log_t v49;
  void *v50;
  uint64_t result;
  uint64_t v52;
  _QWORD v53[2];
  _QWORD *v54;
  uint64_t v55;
  __int128 v56;
  uint64_t v57;
  os_log_t v58;
  void *v59;
  uint64_t v60;
  _QWORD *v61;
  int v62;
  _QWORD *v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  _QWORD v71[5];
  char v72;
  id v73;

  v8 = v7;
  v60 = a7;
  v54 = a6;
  v61 = a5;
  v67 = a3;
  v68 = a4;
  v66 = sub_1C106D6CC();
  v64 = *(_QWORD *)(v66 - 8);
  MEMORY[0x1E0C80A78](v66);
  v65 = (char *)v53 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1C106ADE0();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)v53 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for BehaviorEvent();
  v16 = *(_QWORD *)(a1 + OBJC_IVAR____TtC24IntelligencePlatformCore16InteractionEvent_entityIdentifier + 8);
  v71[0] = *(_QWORD *)(a1 + OBJC_IVAR____TtC24IntelligencePlatformCore16InteractionEvent_entityIdentifier);
  v71[1] = v16;
  memset(&v71[2], 0, 24);
  v72 = 17;
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, a1 + OBJC_IVAR____TtC24IntelligencePlatformCore16InteractionEvent_date, v12);
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  v17 = sub_1C08258CC((uint64_t)v71, (uint64_t)v15);
  v18 = v17;
  v19 = *(_QWORD *)(a2 + 16);
  if (!v19)
  {
LABEL_19:
    *(_QWORD *)(v68 + OBJC_IVAR____TtC24IntelligencePlatformCore21CachedContextProvider_lastBehaviorEventDigested) = v18;
    return swift_release();
  }
  v69 = v17;
  v63 = v71;
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  v53[1] = a2;
  v20 = (uint64_t *)(a2 + 40);
  *(_QWORD *)&v21 = 136315906;
  v56 = v21;
  v55 = MEMORY[0x1E0DEE9B8] + 8;
  v22 = v64;
  while (1)
  {
    v23 = *v20;
    ObjectType = swift_getObjectType();
    v25 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v23 + 120);
    swift_unknownObjectRetain();
    v25(v69, v67, v68, ObjectType, v23);
    if (!v8)
      break;
    v73 = v8;
    v26 = v8;
    sub_1C07ACF80(&qword_1ED7614F0);
    v27 = swift_dynamicCast();
    v29 = v65;
    v28 = v66;
    if ((v27 & 1) != 0 && (v70 & 1) == 0)
    {

      result = swift_unknownObjectRelease();
      if (__OFADD__(*v54, 1))
        goto LABEL_21;
      ++*v54;
      if (__OFADD__(*v61, 1))
        goto LABEL_22;
      ++*v61;

      goto LABEL_16;
    }

    if (qword_1ED760048 != -1)
      swift_once();
    v30 = sub_1C106F544();
    sub_1C079E000(v30, (uint64_t)qword_1ED78D800);
    (*(void (**)(char *, uint64_t, uint64_t))(v22 + 16))(v29, v60, v28);
    swift_unknownObjectRetain();
    swift_retain();
    v31 = v8;
    swift_unknownObjectRetain();
    swift_retain();
    v32 = v8;
    v33 = sub_1C106F538();
    v34 = sub_1C1070390();
    v62 = v34;
    if (os_log_type_enabled(v33, v34))
    {
      v35 = swift_slowAlloc();
      v59 = (void *)swift_slowAlloc();
      v73 = v59;
      *(_DWORD *)v35 = v56;
      swift_getObjectType();
      v36 = *(uint64_t (**)(void))(v23 + 24);
      v58 = v33;
      v37 = v36();
      v38 = sub_1C0854A58(v37);
      v70 = sub_1C0788DAC(v38, v39, (uint64_t *)&v73);
      sub_1C10705AC();
      swift_unknownObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v35 + 12) = 2080;
      v57 = v35 + 14;
      sub_1C0794BAC((unint64_t *)&qword_1ED744A68, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3C130], MEMORY[0x1E0D3C168]);
      v41 = v65;
      v40 = v66;
      v42 = sub_1C1070C0C();
      v70 = sub_1C0788DAC(v42, v43, (uint64_t *)&v73);
      sub_1C10705AC();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v64 + 8))(v41, v40);
      *(_WORD *)(v35 + 22) = 2080;
      v57 = v35 + 24;
      swift_retain();
      v44 = sub_1C08257D4();
      v46 = v45;
      swift_release();
      v70 = sub_1C0788DAC(v44, v46, (uint64_t *)&v73);
      sub_1C10705AC();
      v22 = v64;
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v35 + 32) = 2080;
      swift_getErrorValue();
      v47 = sub_1C1070D74();
      v70 = sub_1C0788DAC(v47, v48, (uint64_t *)&v73);
      sub_1C10705AC();
      swift_bridgeObjectRelease();

      v49 = v58;
      _os_log_impl(&dword_1C0771000, v58, (os_log_type_t)v62, "[%s histogram, tracking %s]: Skipping event %s due to failure getting histogram key for behavior - %s", (uint8_t *)v35, 0x2Au);
      v50 = v59;
      swift_arrayDestroy();
      MEMORY[0x1C3BA8270](v50, -1, -1);
      MEMORY[0x1C3BA8270](v35, -1, -1);

      swift_unknownObjectRelease();
LABEL_16:
      v8 = 0;
      goto LABEL_17;
    }
    swift_unknownObjectRelease();

    swift_unknownObjectRelease_n();
    v52 = v64;
    (*(void (**)(char *, uint64_t))(v64 + 8))(v29, v28);
    swift_release_n();

    v8 = 0;
    v22 = v52;
LABEL_17:
    v20 += 2;
    if (!--v19)
    {
      swift_bridgeObjectRelease();
      v18 = v69;
      goto LABEL_19;
    }
  }
  result = swift_unknownObjectRelease();
  if (!__OFADD__(*v61, 1))
  {
    ++*v61;
    goto LABEL_17;
  }
  __break(1u);
LABEL_21:
  __break(1u);
LABEL_22:
  __break(1u);
  return result;
}

void sub_1C085C15C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t ObjectType;

  sub_1C077AE5C();
  v2 = v1;
  v3 = sub_1C0780478();
  v4 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D3C130];
  sub_1C077591C();
  MEMORY[0x1E0C80A78](v5);
  sub_1C0778564();
  v8 = v7 - v6;
  v9 = *(_QWORD *)(v2 + 8);
  ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t, uint64_t))(v9 + 64))(ObjectType, v9);
  sub_1C0794BAC((unint64_t *)&qword_1ED744A60, v4, MEMORY[0x1E0D3C158]);
  sub_1C078BB20();
  sub_1C078BB20();
  (*(void (**)(uint64_t, uint64_t))(v0 + 8))(v8, v3);
  sub_1C078210C();
  sub_1C07757D0();
}

void sub_1C085C230(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  void (*v14)(char *, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  const void *v28;
  id v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(uint64_t, char *, uint64_t);
  uint64_t v37;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t aBlock;
  uint64_t v47;
  uint64_t (*v48)(uint64_t);
  void *v49;
  void *v50;
  uint64_t v51;

  v43 = a1;
  v41 = a6;
  v42 = a7;
  v40 = a5;
  v38 = a4;
  v45 = a3;
  v33 = a2;
  v44 = sub_1C106ADE0();
  v35 = *(_QWORD *)(v44 - 8);
  v37 = *(_QWORD *)(v35 + 64);
  MEMORY[0x1E0C80A78](v44);
  v9 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = v9;
  v10 = sub_1C106D6CC();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_QWORD *)(v11 + 64);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 16);
  v14(v13, a2, v10);
  v15 = *(unsigned __int8 *)(v11 + 80);
  v34 = v15 | 7;
  v16 = swift_allocObject();
  v36 = *(void (**)(uint64_t, char *, uint64_t))(v11 + 32);
  v32 = v10;
  v36(v16 + ((v15 + 16) & ~v15), v13, v10);
  v50 = sub_1C086111C;
  v51 = v16;
  aBlock = MEMORY[0x1E0C809B0];
  v47 = 1107296256;
  v48 = (uint64_t (*)(uint64_t))sub_1C07BF90C;
  v49 = &unk_1E7A0F630;
  v39 = _Block_copy(&aBlock);
  swift_release();
  v17 = v35;
  (*(void (**)(char *, uint64_t, uint64_t))(v35 + 16))(v9, v38, v44);
  v14(v13, v33, v10);
  v18 = v17;
  v19 = (*(unsigned __int8 *)(v17 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
  v20 = (v37 + v19 + 7) & 0xFFFFFFFFFFFFFFF8;
  v21 = (v20 + 15) & 0xFFFFFFFFFFFFFFF8;
  v22 = (v21 + 15) & 0xFFFFFFFFFFFFFFF8;
  v23 = (v15 + v22 + 8) & ~v15;
  v24 = swift_allocObject();
  v25 = v44;
  *(_QWORD *)(v24 + 16) = v45;
  (*(void (**)(unint64_t, char *, uint64_t))(v18 + 32))(v24 + v19, v31, v25);
  v26 = v41;
  *(_QWORD *)(v24 + v20) = v40;
  *(_QWORD *)(v24 + v21) = v26;
  *(_QWORD *)(v24 + v22) = v42;
  v36(v24 + v23, v13, v32);
  v50 = sub_1C0861240;
  v51 = v24;
  aBlock = MEMORY[0x1E0C809B0];
  v47 = 1107296256;
  v48 = sub_1C082E0C0;
  v49 = &unk_1E7A0F680;
  v27 = _Block_copy(&aBlock);
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_release();
  v28 = v39;
  v29 = objc_msgSend(v43, sel_sinkWithCompletion_receiveInput_, v39, v27);
  _Block_release(v27);
  _Block_release(v28);

}

void sub_1C085C524(void *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  id v8;
  void *v9;
  uint64_t v10;
  id v11;
  NSObject *v12;
  os_log_type_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v4 = sub_1C106D6CC();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = objc_msgSend(a1, sel_error);
  if (v8)
  {
    v9 = v8;
    if (qword_1ED760048 != -1)
      swift_once();
    v10 = sub_1C106F544();
    sub_1C079E000(v10, (uint64_t)qword_1ED78D800);
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a2, v4);
    v11 = v9;
    v12 = sub_1C106F538();
    v13 = sub_1C1070390();
    if (os_log_type_enabled(v12, v13))
    {
      v14 = swift_slowAlloc();
      v21 = swift_slowAlloc();
      v23 = v21;
      *(_DWORD *)v14 = 136315394;
      sub_1C0794BAC((unint64_t *)&qword_1ED744A68, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3C130], MEMORY[0x1E0D3C168]);
      v15 = sub_1C1070C0C();
      v22 = sub_1C0788DAC(v15, v16, &v23);
      sub_1C10705AC();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
      *(_WORD *)(v14 + 12) = 2080;
      swift_getErrorValue();
      v17 = sub_1C1070D74();
      v22 = sub_1C0788DAC(v17, v18, &v23);
      sub_1C10705AC();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C0771000, v12, v13, "[tracking %s]: At digest, Biome sink completed with error- %s", (uint8_t *)v14, 0x16u);
      v19 = v21;
      swift_arrayDestroy();
      MEMORY[0x1C3BA8270](v19, -1, -1);
      MEMORY[0x1C3BA8270](v14, -1, -1);

    }
    else
    {

      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    }
  }
}

uint64_t sub_1C085C7D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t *v18;
  __int128 v19;
  uint64_t v20;
  uint64_t ObjectType;
  void (*v22)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t result;
  _QWORD v24[4];
  __int128 v25;
  uint64_t *v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v31 = a7;
  v33 = a3;
  v34 = a1;
  v11 = sub_1C106D6CC();
  v12 = MEMORY[0x1E0C80A78](v11);
  v15 = (char *)v24 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = *(_QWORD *)(a2 + 16);
  if (v16)
  {
    v28 = v15;
    v32 = v13;
    v29 = v12;
    v17 = (_QWORD *)(a5 + 16);
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    swift_beginAccess();
    v24[2] = a6 + 16;
    swift_beginAccess();
    swift_beginAccess();
    v26 = &v35;
    v24[1] = a2;
    v18 = (uint64_t *)(a2 + 40);
    *(_QWORD *)&v19 = 136315906;
    v25 = v19;
    v24[3] = MEMORY[0x1E0DEE9B8] + 8;
    v30 = a4;
    v27 = a5 + 16;
    while (1)
    {
      v20 = *v18;
      ObjectType = swift_getObjectType();
      v22 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v20 + 120);
      swift_unknownObjectRetain();
      v22(v34, v33, a4, ObjectType, v20);
      result = swift_unknownObjectRelease();
      if (__OFADD__(*v17, 1))
        break;
      ++*v17;
      v18 += 2;
      if (!--v16)
      {
        swift_bridgeObjectRelease();
        goto LABEL_6;
      }
    }
    __break(1u);
    __break(1u);
    __break(1u);
  }
  else
  {
LABEL_6:
    *(_QWORD *)(a4 + OBJC_IVAR____TtC24IntelligencePlatformCore21CachedContextProvider_lastBehaviorEventDigested) = v34;
    swift_release();
    return swift_retain();
  }
  return result;
}

void sub_1C085CDF0(uint64_t a1, uint64_t a2)
{
  sub_1C085CE18(a1, a2);
}

void sub_1C085CE04()
{
  sub_1C085CF00();
}

void sub_1C085CE18(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  int v9;
  uint64_t v10;

  v5 = v2 + OBJC_IVAR____TtC24IntelligencePlatformCore32CategoricalBehaviorHistogramBase_categoryMap;
  sub_1C0775864();
  v6 = *(_QWORD *)(*(_QWORD *)v5 + 16);
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  if (!v6)
  {
LABEL_5:
    v8 = sub_1C077AE90();
    v9 = sub_1C085D0A8(v8);
    sub_1C077960C();
    if ((v9 & 0x10000) == 0)
    {
      v10 = (unsigned __int16)v9 + 1;
      if ((v10 & 0x10000) == 0)
      {
LABEL_9:
        sub_1C077F040();
        sub_1C089FCC0(v10, a1, a2);
        sub_1C077EB4C();
        goto LABEL_10;
      }
      __break(1u);
    }
    v10 = 0;
    goto LABEL_9;
  }
  sub_1C077AE90();
  sub_1C077D774(a1, a2);
  if ((v7 & 1) == 0)
  {
    sub_1C077960C();
    goto LABEL_5;
  }
  sub_1C0778580();
LABEL_10:
  swift_bridgeObjectRelease();
  sub_1C07AEDEC();
}

void sub_1C085CF00()
{
  int v0;
  uint64_t v1;

  sub_1C1070C0C();
  sub_1C0775864();
  sub_1C07ABBE4();
  sub_1C077FA8C();
  sub_1C078101C();
  if ((v0 & 0x10000) != 0)
  {
    v1 = sub_1C07ABBE4();
    sub_1C085D0A8(v1);
    sub_1C078101C();
    sub_1C077F040();
    sub_1C0862EBC();
    sub_1C077EB4C();
  }
  sub_1C0778580();
  sub_1C07AEDEC();
}

void sub_1C085CFBC()
{
  int v0;
  uint64_t v1;

  sub_1C106ADF8();
  sub_1C0775864();
  sub_1C07ABBE4();
  sub_1C077FA8C();
  sub_1C078101C();
  if ((v0 & 0x10000) != 0)
  {
    v1 = sub_1C07ABBE4();
    sub_1C085D0A8(v1);
    sub_1C078101C();
    sub_1C077F040();
    sub_1C0862EBC();
    sub_1C077EB4C();
  }
  sub_1C0778580();
  sub_1C07AEDEC();
}

uint64_t sub_1C085D064(_QWORD *a1)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;

  v1 = a1[2];
  if (!v1)
    return 0;
  result = a1[4];
  v4 = v1 - 1;
  if (v1 != 1)
  {
    v5 = a1 + 5;
    do
    {
      v7 = *v5++;
      v6 = v7;
      if (result <= v7)
        result = v6;
      --v4;
    }
    while (v4);
  }
  return result;
}

uint64_t sub_1C085D0A8(uint64_t a1)
{
  uint64_t result;
  unint64_t v2;
  unint64_t v3;
  int64_t v4;
  int64_t v5;
  uint64_t v6;
  unsigned __int16 v7;
  unint64_t v8;
  unint64_t v9;
  int64_t v10;
  unint64_t v11;
  int64_t v12;
  int64_t v13;
  int v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int64_t v21;
  unint64_t v22;

  result = sub_1C0861BD4(a1, &v18);
  if (v22)
  {
    v2 = (v22 - 1) & v22;
    v3 = __clz(__rbit64(v22)) | (v21 << 6);
    v4 = (unint64_t)(v20 + 64) >> 6;
    v5 = v21;
    goto LABEL_3;
  }
  v15 = v21 + 1;
  if (__OFADD__(v21, 1))
  {
LABEL_45:
    __break(1u);
    return result;
  }
  v4 = (unint64_t)(v20 + 64) >> 6;
  if (v15 < v4)
  {
    v16 = *(_QWORD *)(v19 + 8 * v15);
    v5 = v21 + 1;
    if (v16)
    {
LABEL_29:
      v2 = (v16 - 1) & v16;
      v3 = __clz(__rbit64(v16)) + (v5 << 6);
LABEL_3:
      v6 = *(_QWORD *)(v18 + 56);
      v7 = *(_WORD *)(v6 + 2 * v3);
      if (!v2)
        goto LABEL_5;
LABEL_4:
      v8 = __clz(__rbit64(v2));
      v2 &= v2 - 1;
      v9 = v8 | (v5 << 6);
      while (1)
      {
        if (v7 <= *(unsigned __int16 *)(v6 + 2 * v9))
          v7 = *(_WORD *)(v6 + 2 * v9);
        if (v2)
          goto LABEL_4;
LABEL_5:
        v10 = v5 + 1;
        if (__OFADD__(v5, 1))
          break;
        if (v10 >= v4)
          goto LABEL_25;
        v11 = *(_QWORD *)(v19 + 8 * v10);
        v12 = v5 + 1;
        if (!v11)
        {
          v12 = v5 + 2;
          if (v5 + 2 >= v4)
            goto LABEL_25;
          v11 = *(_QWORD *)(v19 + 8 * v12);
          if (!v11)
          {
            v12 = v5 + 3;
            if (v5 + 3 >= v4)
              goto LABEL_25;
            v11 = *(_QWORD *)(v19 + 8 * v12);
            if (!v11)
            {
              v12 = v5 + 4;
              if (v5 + 4 >= v4)
                goto LABEL_25;
              v11 = *(_QWORD *)(v19 + 8 * v12);
              if (!v11)
              {
                v12 = v5 + 5;
                if (v5 + 5 >= v4)
                  goto LABEL_25;
                v11 = *(_QWORD *)(v19 + 8 * v12);
                if (!v11)
                {
                  v13 = v5 + 6;
                  while (v13 < v4)
                  {
                    v11 = *(_QWORD *)(v19 + 8 * v13++);
                    if (v11)
                    {
                      v12 = v13 - 1;
                      goto LABEL_20;
                    }
                  }
LABEL_25:
                  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
                  swift_release();
                  v14 = 0;
                  return v7 | (v14 << 16);
                }
              }
            }
          }
        }
LABEL_20:
        v2 = (v11 - 1) & v11;
        v9 = __clz(__rbit64(v11)) + (v12 << 6);
        v5 = v12;
      }
      __break(1u);
      goto LABEL_45;
    }
    v5 = v21 + 2;
    if (v21 + 2 < v4)
    {
      v16 = *(_QWORD *)(v19 + 8 * v5);
      if (v16)
        goto LABEL_29;
      v5 = v21 + 3;
      if (v21 + 3 < v4)
      {
        v16 = *(_QWORD *)(v19 + 8 * v5);
        if (v16)
          goto LABEL_29;
        v5 = v21 + 4;
        if (v21 + 4 < v4)
        {
          v16 = *(_QWORD *)(v19 + 8 * v5);
          if (v16)
            goto LABEL_29;
          v5 = v21 + 5;
          if (v21 + 5 < v4)
          {
            v16 = *(_QWORD *)(v19 + 8 * v5);
            if (v16)
              goto LABEL_29;
            v17 = v21 + 6;
            while (v17 < v4)
            {
              v16 = *(_QWORD *)(v19 + 8 * v17++);
              if (v16)
              {
                v5 = v17 - 1;
                goto LABEL_29;
              }
            }
          }
        }
      }
    }
  }
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C086229C((uint64_t)&v18);
  v7 = 0;
  v14 = 1;
  return v7 | (v14 << 16);
}

uint64_t sub_1C085D2D4(uint64_t a1)
{
  uint64_t v1;
  double v2;
  uint64_t v3;
  double *v4;
  double v5;
  double v6;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return 0;
  v2 = *(double *)(a1 + 32);
  v3 = v1 - 1;
  if (v1 != 1)
  {
    v4 = (double *)(a1 + 40);
    do
    {
      v5 = *v4++;
      v6 = v5;
      if (v2 < v5)
        v2 = v6;
      --v3;
    }
    while (v3);
  }
  return *(_QWORD *)&v2;
}

unint64_t sub_1C085D318(uint64_t a1)
{
  uint64_t v1;
  float v2;
  uint64_t v3;
  float *v4;
  float v5;
  float v6;
  uint64_t v7;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    v2 = *(float *)(a1 + 32);
    v3 = v1 - 1;
    if (v1 != 1)
    {
      v4 = (float *)(a1 + 36);
      do
      {
        v5 = *v4++;
        v6 = v5;
        if (v2 < v5)
          v2 = v6;
        --v3;
      }
      while (v3);
    }
    v7 = LODWORD(v2);
  }
  else
  {
    v7 = 0;
  }
  return v7 | ((unint64_t)(v1 == 0) << 32);
}

void sub_1C085D370()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  id *v4;
  id v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;

  sub_1C0779670();
  v2 = sub_1C07BBD98();
  v32 = *(_QWORD *)(v2 - 8);
  v33 = v2;
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v3);
  sub_1C0780A08();
  sub_1C085A144();
  v4 = (id *)(v0 + OBJC_IVAR____TtC24IntelligencePlatformCore32CategoricalBehaviorHistogramBase_state);
  sub_1C0775864();
  v5 = objc_msgSend(*v4, sel_bSet);
  v35 = v1;
  sub_1C106AFFC();

  v6 = (uint64_t *)(v0 + OBJC_IVAR____TtC24IntelligencePlatformCore32CategoricalBehaviorHistogramBase_categoryMap);
  sub_1C0775864();
  v7 = *v6;
  v8 = *v6 + 64;
  v9 = 1 << *(_BYTE *)(*v6 + 32);
  v10 = -1;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  v11 = v10 & *(_QWORD *)(*v6 + 64);
  v12 = (unint64_t)(v9 + 63) >> 6;
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  v13 = 0;
  v34 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  while (v11)
  {
    v14 = __clz(__rbit64(v11));
    v11 &= v11 - 1;
    v15 = v14 | (v13 << 6);
LABEL_22:
    v19 = (uint64_t *)(*(_QWORD *)(v7 + 48) + 16 * v15);
    v20 = *v19;
    v21 = v19[1];
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    if ((sub_1C106B014() & 1) != 0)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1C07B7730();
        v34 = v24;
      }
      v22 = v34[2];
      if (v22 >= v34[3] >> 1)
      {
        sub_1C07B7730();
        v34 = v25;
      }
      v34[2] = v22 + 1;
      v23 = &v34[2 * v22];
      v23[4] = v20;
      v23[5] = v21;
    }
  }
  v16 = v13 + 1;
  if (__OFADD__(v13, 1))
  {
    __break(1u);
LABEL_36:
    __break(1u);
    return;
  }
  if (v16 >= v12)
    goto LABEL_29;
  v17 = *(_QWORD *)(v8 + 8 * v16);
  ++v13;
  if (v17)
    goto LABEL_21;
  v13 = v16 + 1;
  if (v16 + 1 >= v12)
    goto LABEL_29;
  v17 = *(_QWORD *)(v8 + 8 * v13);
  if (v17)
    goto LABEL_21;
  v13 = v16 + 2;
  if (v16 + 2 >= v12)
    goto LABEL_29;
  v17 = *(_QWORD *)(v8 + 8 * v13);
  if (v17)
    goto LABEL_21;
  v13 = v16 + 3;
  if (v16 + 3 >= v12)
    goto LABEL_29;
  v17 = *(_QWORD *)(v8 + 8 * v13);
  if (v17)
  {
LABEL_21:
    v11 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v13 << 6);
    goto LABEL_22;
  }
  v18 = v16 + 4;
  if (v18 < v12)
  {
    v17 = *(_QWORD *)(v8 + 8 * v18);
    if (!v17)
    {
      while (1)
      {
        v13 = v18 + 1;
        if (__OFADD__(v18, 1))
          goto LABEL_36;
        if (v13 >= v12)
          goto LABEL_29;
        v17 = *(_QWORD *)(v8 + 8 * v13);
        ++v18;
        if (v17)
          goto LABEL_21;
      }
    }
    v13 = v18;
    goto LABEL_21;
  }
LABEL_29:
  swift_release();
  v26 = v34[2];
  if (v26)
  {
    v27 = v34 + 5;
    do
    {
      v28 = *(v27 - 1);
      v29 = *v27;
      sub_1C077F040();
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      sub_1C077AE90();
      sub_1C077D774(v28, v29);
      v31 = v30;
      swift_bridgeObjectRelease();
      if ((v31 & 1) != 0)
      {
        swift_isUniquelyReferenced_nonNull_native();
        v36 = *v6;
        *v6 = 0x8000000000000000;
        sub_1C07ACF80(&qword_1ED758E30);
        sub_1C107090C();
        swift_bridgeObjectRelease();
        sub_1C077CEF4();
        sub_1C1070924();
        *v6 = v36;
        swift_bridgeObjectRelease();
      }
      v27 += 2;
      swift_endAccess();
      swift_bridgeObjectRelease();
      --v26;
    }
    while (v26);
  }
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v35, v33);
  sub_1C0776760();
}

#error "1C085D744: call analysis failed (funcsize=56)"

void sub_1C085D7CC()
{
  uint64_t v0;
  uint64_t v1;

  v1 = sub_1C0780478();
  sub_1C077B5C8(v1);
  sub_1C07BA194(OBJC_IVAR____TtC24IntelligencePlatformCore21BehaviorHistogramBase_eventSource);
  sub_1C07BA194(OBJC_IVAR____TtC24IntelligencePlatformCore21BehaviorHistogramBase_behaviorKeySource);
  sub_1C0862F5C();
  sub_1C07B1F90(v0 + OBJC_IVAR____TtC24IntelligencePlatformCore21BehaviorHistogramBase_state, (uint64_t (*)(_QWORD))type metadata accessor for DecayingHistogramState);
  sub_1C0778534();
}

uint64_t sub_1C085D834()
{
  return sub_1C0814D10(sub_1C085D7CC);
}

uint64_t sub_1C085D840()
{
  return type metadata accessor for BehaviorHistogramBase(0);
}

uint64_t type metadata accessor for BehaviorHistogramBase(uint64_t a1)
{
  return sub_1C0784B00(a1, (uint64_t *)&unk_1ED7575E8);
}

uint64_t sub_1C085D85C()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_1C106D6CC();
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for DecayingHistogramState();
    if (v2 <= 0x3F)
    {
      result = swift_updateClassMetadata2();
      if (!result)
        return 0;
    }
  }
  return result;
}

uint64_t sub_1C085D8FC(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v7;

  v2 = a1 == 0x6172676F74736968 && a2 == 0xEE0065746174536DLL;
  if (v2 || (sub_1C1070CB4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x79726F6765746163 && a2 == 0xEB0000000070614DLL)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v7 = sub_1C1070CB4();
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

void sub_1C085DA24()
{
  sub_1C077C06C();
  sub_1C1070E04();
  sub_1C077AE74();
  sub_1C0775804();
}

uint64_t sub_1C085DA54(char a1)
{
  if ((a1 & 1) != 0)
    return 0x79726F6765746163;
  else
    return 0x6172676F74736968;
}

uint64_t sub_1C085DAA0(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(uint64_t);

  sub_1C07ACF80(&qword_1ED758E68);
  sub_1C0778688();
  MEMORY[0x1E0C80A78](v3);
  sub_1C0778544();
  sub_1C07A9480(a1, a1[3]);
  sub_1C0862BA0();
  sub_1C1070EB8();
  sub_1C0782D0C();
  sub_1C0794BAC(&qword_1ED757870, (uint64_t (*)(uint64_t))type metadata accessor for DecayingHistogramState, (uint64_t)&unk_1C1087D68);
  sub_1C07B6610();
  if (!v1)
  {
    sub_1C0862F24();
    sub_1C07ACF80(&qword_1ED758CA8);
    sub_1C0862BDC(&qword_1ED758CB0, MEMORY[0x1E0DEA970], MEMORY[0x1E0DEE070], MEMORY[0x1E0DEA0B8]);
    sub_1C07B6610();
  }
  v4 = sub_1C07AB6F8();
  return v5(v4);
}

void sub_1C085DBF0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  char v23;
  uint64_t v24;
  uint64_t v25;

  sub_1C077AE5C();
  v24 = v1;
  v25 = v2;
  v4 = v3;
  v17 = v5;
  v18 = sub_1C0782D0C();
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v6);
  sub_1C0778564();
  v19 = v8 - v7;
  v20 = sub_1C07ACF80(&qword_1ED758E58);
  sub_1C077591C();
  MEMORY[0x1E0C80A78](v9);
  sub_1C077962C();
  v10 = sub_1C0862F24();
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C07A9480(v4, v4[3]);
  sub_1C0862BA0();
  sub_1C1070E94();
  if (v0)
  {
    sub_1C0775880();
  }
  else
  {
    v16 = v10;
    v23 = 0;
    sub_1C0794BAC(&qword_1ED757878, (uint64_t (*)(uint64_t))type metadata accessor for DecayingHistogramState, (uint64_t)&unk_1C1087D90);
    v14 = v19;
    sub_1C07BAA60();
    sub_1C0862330(v14, (uint64_t)v13);
    sub_1C07ACF80(&qword_1ED758CA8);
    v22 = 1;
    sub_1C0862BDC(&qword_1ED758CB8, MEMORY[0x1E0DEA9A0], MEMORY[0x1E0DEE098], MEMORY[0x1E0DEA0D8]);
    sub_1C07BAA60();
    sub_1C078F1D4();
    v15 = v17;
    *(_QWORD *)&v13[*(int *)(v16 + 20)] = v21;
    sub_1C080ABC4((uint64_t)v13, v15, type metadata accessor for CategoricalBehaviorHistogramBase.Snapshot);
    sub_1C0775880();
    sub_1C07B1F90((uint64_t)v13, type metadata accessor for CategoricalBehaviorHistogramBase.Snapshot);
  }
}

void sub_1C085DE0C()
{
  sub_1C1070DF8();
  sub_1C1070E04();
  sub_1C077AE74();
  sub_1C0775804();
}

uint64_t sub_1C085DE40()
{
  char *v0;

  return sub_1C085DA54(*v0);
}

uint64_t sub_1C085DE48@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1C085D8FC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C085DE6C()
{
  sub_1C0862BA0();
  return sub_1C1070EE8();
}

uint64_t sub_1C085DE94()
{
  sub_1C0862BA0();
  return sub_1C1070EF4();
}

void sub_1C085DEBC()
{
  sub_1C085DBF0();
}

uint64_t sub_1C085DED0(_QWORD *a1)
{
  return sub_1C085DAA0(a1);
}

#error "1C085DF3C: call analysis failed (funcsize=58)"

void sub_1C085DFD0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t, uint64_t, uint64_t *, _BYTE *, uint64_t (*)(), _QWORD);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _BYTE v30[16];
  uint64_t v31;
  uint64_t v32;

  sub_1C077AE5C();
  v23 = v0;
  v24 = v4;
  v27 = v6;
  v28 = v5;
  v8 = v7;
  v10 = v9;
  v32 = sub_1C0780478();
  v29 = *(_QWORD *)(v32 - 8);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v11);
  sub_1C07766EC();
  sub_1C0782D0C();
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_1C0862F24();
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v16);
  sub_1C077864C();
  v17 = (void *)MEMORY[0x1C3BA79F4]();
  sub_1C106A708();
  sub_1C077B5BC();
  sub_1C106A6FC();
  sub_1C0794BAC(&qword_1ED758440, type metadata accessor for CategoricalBehaviorHistogramBase.Snapshot, (uint64_t)&unk_1C107D3EC);
  v25 = v10;
  v26 = v8;
  sub_1C106A6F0();
  swift_release();
  objc_autoreleasePoolPop(v17);
  if (v1)
  {
    _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0(v24);
    _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0(v27);
    (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v28, v32);
    sub_1C07B3374(v25, v26);
  }
  else
  {
    sub_1C080ABC4(v2, (uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for DecayingHistogramState);
    v18 = *(_QWORD *)(v2 + *(int *)(v15 + 20));
    v19 = v28;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v29 + 16))(v3, v28, v32);
    sub_1C07B68A8();
    v20 = v24;
    sub_1C0784AC0(v24, (uint64_t)v30);
    v21 = *(void (**)(char *, uint64_t, uint64_t, uint64_t *, _BYTE *, uint64_t (*)(), _QWORD))(v23 + 200);
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    v21(v14, v18, v3, &v31, v30, sub_1C07D4004, 0);
    sub_1C07B3374(v25, v26);
    _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0(v20);
    _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0(v15);
    (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v19, v32);
    sub_1C07B1F90(v2, type metadata accessor for CategoricalBehaviorHistogramBase.Snapshot);
  }
  sub_1C078210C();
  sub_1C07757D0();
}

uint64_t sub_1C085E1E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v3 = sub_1C0862F24();
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v4);
  sub_1C077F090();
  sub_1C077B5BC();
  sub_1C106A768();
  v5 = v0 + OBJC_IVAR____TtC24IntelligencePlatformCore32CategoricalBehaviorHistogramBase_state;
  sub_1C0775864();
  sub_1C080ABC4(v5, v2, (uint64_t (*)(_QWORD))type metadata accessor for DecayingHistogramState);
  v6 = (_QWORD *)(v0 + OBJC_IVAR____TtC24IntelligencePlatformCore32CategoricalBehaviorHistogramBase_categoryMap);
  sub_1C0775864();
  *(_QWORD *)(v2 + *(int *)(v3 + 20)) = *v6;
  sub_1C0794BAC(&qword_1ED758438, type metadata accessor for CategoricalBehaviorHistogramBase.Snapshot, (uint64_t)&unk_1C107D3C4);
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C106A75C();
  sub_1C0862E90();
  swift_release();
  return v1;
}

void sub_1C085E2F4()
{
  uint64_t v0;
  uint64_t v1;

  v1 = sub_1C0780478();
  sub_1C077B5C8(v1);
  sub_1C07BA194(OBJC_IVAR____TtC24IntelligencePlatformCore32CategoricalBehaviorHistogramBase_eventSource);
  sub_1C07BA194(OBJC_IVAR____TtC24IntelligencePlatformCore32CategoricalBehaviorHistogramBase_behaviorKeySource);
  sub_1C0862F5C();
  sub_1C07B1F90(v0 + OBJC_IVAR____TtC24IntelligencePlatformCore32CategoricalBehaviorHistogramBase_state, (uint64_t (*)(_QWORD))type metadata accessor for DecayingHistogramState);
  swift_bridgeObjectRelease();
  sub_1C0778534();
}

uint64_t sub_1C085E36C()
{
  return sub_1C0814D10(sub_1C085E2F4);
}

uint64_t sub_1C085E378()
{
  return type metadata accessor for CategoricalBehaviorHistogramBase(0);
}

uint64_t type metadata accessor for CategoricalBehaviorHistogramBase(uint64_t a1)
{
  return sub_1C0784B00(a1, (uint64_t *)&unk_1ED7584D8);
}

uint64_t sub_1C085E394()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_1C106D6CC();
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for DecayingHistogramState();
    if (v2 <= 0x3F)
    {
      result = swift_updateClassMetadata2();
      if (!result)
        return 0;
    }
  }
  return result;
}

void sub_1C085E440()
{
  word_1ED78D770 = 200;
}

unint64_t sub_1C085E450()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  double v10;
  double v11;
  double v12;
  double v13;
  unint64_t v14;

  v5 = sub_1C077AE98();
  sub_1C077591C();
  MEMORY[0x1E0C80A78](v6);
  sub_1C07AE79C();
  sub_1C0778688();
  MEMORY[0x1E0C80A78](v7);
  sub_1C0780A08();
  if (qword_1ED7580E0 != -1)
    swift_once();
  LOWORD(v4) = word_1ED78D770;
  sub_1C07A9480((_QWORD *)(v0 + OBJC_IVAR____TtC24IntelligencePlatformCore21BehaviorHistogramBase_eventSource), *(_QWORD *)(v0 + OBJC_IVAR____TtC24IntelligencePlatformCore21BehaviorHistogramBase_eventSource + 24));
  v8 = sub_1C0862EEC();
  v9 = (void *)MEMORY[0x1C3BA79F4](v8);
  sub_1C106AF18();
  v10 = 86400.0 / (double)v4;
  sub_1C106ACD8();
  v12 = v11;
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v5);
  v13 = v12 / v10;
  if ((~COERCE__INT64(v12 / v10) & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_10;
  }
  if (v13 <= -9.22337204e18)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  if (v13 >= 9.22337204e18)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  v14 = (uint64_t)v13;
  objc_autoreleasePoolPop(v9);
  sub_1C0784E50(*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  if ((v14 & 0x8000000000000000) != 0)
  {
LABEL_12:
    sub_1C07A3684();
    sub_1C0789DAC();
    goto LABEL_14;
  }
  if (v14 >= 0x10000)
  {
    sub_1C07A3684();
    sub_1C07A8544();
LABEL_14:
    sub_1C07B15F8();
    sub_1C078A734();
  }
  return v14;
}

void sub_1C085E628()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_1C0779670();
  sub_1C07957E8();
  sub_1C077591C();
  MEMORY[0x1E0C80A78](v0);
  v1 = sub_1C077AE98();
  MEMORY[0x1E0C80A78](v1);
  sub_1C078D458();
  MEMORY[0x1E0C80A78](v2);
  sub_1C07B6478();
}

void sub_1C085E6A0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;

  *(_QWORD *)(v7 - 104) = a1;
  v8 = *(_QWORD *)(v2 + OBJC_IVAR____TtC24IntelligencePlatformCore21BehaviorHistogramBase_eventSource + 24);
  v9 = *(_QWORD *)(v2 + OBJC_IVAR____TtC24IntelligencePlatformCore21BehaviorHistogramBase_eventSource + 32);
  sub_1C07A9480((_QWORD *)(v2 + OBJC_IVAR____TtC24IntelligencePlatformCore21BehaviorHistogramBase_eventSource), v8);
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v9);
  sub_1C106ADD4();
  sub_1C106AF18();
  v10 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  v10(v5, v1);
  v11 = sub_1C07943BC(v4, *(uint64_t (**)(uint64_t, uint64_t))(v6 + 8));
  if (qword_1ED7580E0 != -1)
    v11 = swift_once();
  MEMORY[0x1E0C80A78](v11);
  sub_1C0828E00();
  v12 = sub_1C07AB6F8();
  ((void (*)(uint64_t))v10)(v12);
  objc_autoreleasePoolPop(*(void **)(v7 - 104));
  sub_1C0776760();
}

uint64_t sub_1C085E7B4()
{
  return type metadata accessor for TimeOfDayBehaviorHistogram(0);
}

uint64_t type metadata accessor for TimeOfDayBehaviorHistogram(uint64_t a1)
{
  return sub_1C0784B00(a1, (uint64_t *)&unk_1ED7580E8);
}

uint64_t sub_1C085E7D4()
{
  return sub_1C0860EE0();
}

uint64_t sub_1C085E7E0@<X0>(uint64_t a1@<X8>)
{
  return sub_1C085FAE4(a1);
}

uint64_t sub_1C085E7F4()
{
  return sub_1C08553A0();
}

uint64_t sub_1C085E808(uint64_t a1, uint64_t a2)
{
  return sub_1C0857B54(a1, a2);
}

void sub_1C085E81C()
{
  sub_1C0855AB8();
}

void sub_1C085E83C()
{
  sub_1C0860F50();
}

void sub_1C085E848()
{
  sub_1C0855180();
}

uint64_t sub_1C085E85C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C08555F8(a1, a2, a3, a4, (uint64_t)&off_1E7A0F538);
}

void sub_1C085E88C(uint64_t a1@<X8>)
{
  sub_1C086100C(&OBJC_IVAR____TtC24IntelligencePlatformCore21BehaviorHistogramBase_state, a1);
}

void sub_1C085E898()
{
  sub_1C085E450();
  sub_1C077E8AC();
}

void sub_1C085E8B8()
{
  qword_1ED78CFD0 = 0x40D5180000000000;
}

void *sub_1C085E8CC()
{
  return &unk_1E79FB878;
}

void sub_1C085E8D8()
{
  uint64_t v0;
  uint64_t v1;

  sub_1C077B61C();
  sub_1C077AE98();
  sub_1C077E58C();
  MEMORY[0x1E0C80A78](v0);
  sub_1C077AF80();
  MEMORY[0x1E0C80A78](v1);
  sub_1C07B6478();
}

void sub_1C085E92C(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  double v5;
  double v6;
  void (*v7)(uint64_t, uint64_t);
  uint64_t v8;

  sub_1C106AF18();
  sub_1C106AD2C();
  sub_1C106ACD8();
  v6 = v5 / 21600.0;
  if ((~*(_QWORD *)&v6 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_6;
  }
  if (v6 <= -1.0)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if (v6 < 65536.0)
  {
    v7 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
    v7(v2, v1);
    v8 = sub_1C07AB6F8();
    ((void (*)(uint64_t))v7)(v8);
    objc_autoreleasePoolPop(a1);
    sub_1C077C798();
    return;
  }
LABEL_7:
  __break(1u);
}

void sub_1C085E9D8()
{
  sub_1C085E8D8();
}

uint64_t sub_1C085E9E8(unsigned __int16 a1)
{
  uint64_t v1;

  if (a1 >= 4uLL)
  {
    __break(1u);
    JUMPOUT(0x1C085EA70);
  }
  v1 = *((unsigned __int8 *)&unk_1E79FB878 + a1 + 32);
  swift_bridgeObjectRelease();
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)&loc_1C085EA28 + *((int *)qword_1C085EA70 + v1)))(0x746867696ELL, 0xE500000000000000);
}

void sub_1C085EA80()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  double v4;
  uint64_t v5;
  char *v6;
  void *v7;
  void (*v8)(uint64_t);
  uint64_t v9;
  _QWORD v10[6];

  sub_1C077B61C();
  v1 = sub_1C077AE98();
  sub_1C077E58C();
  MEMORY[0x1E0C80A78](v2);
  sub_1C0780698();
  v4 = MEMORY[0x1E0C80A78](v3);
  v6 = (char *)v10 - v5;
  v7 = (void *)MEMORY[0x1C3BA79F4](v4);
  sub_1C106AF18();
  sub_1C106AD2C();
  v8 = *(void (**)(uint64_t))(v0 + 8);
  v9 = sub_1C07AB6F8();
  v8(v9);
  v10[2] = v6;
  v10[3] = 0x40D5180000000000;
  sub_1C0828E00();
  ((void (*)(char *, uint64_t))v8)(v6, v1);
  objc_autoreleasePoolPop(v7);
  sub_1C077C798();
}

void sub_1C085EB58()
{
  uint64_t v0;

  sub_1C077B61C();
  sub_1C07957E8();
  sub_1C077E58C();
  MEMORY[0x1E0C80A78](v0);
  sub_1C0778544();
  sub_1C077C190(OBJC_IVAR____TtC24IntelligencePlatformCore21BehaviorHistogramBase_eventSource);
  sub_1C085E8D8();
}

void sub_1C085EBA4()
{
  uint64_t v0;

  sub_1C0792D7C(*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8));
  sub_1C077C798();
}

void sub_1C085EBC0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_1C0779670();
  sub_1C07957E8();
  sub_1C0863000();
  MEMORY[0x1E0C80A78](v2);
  sub_1C077AE98();
  sub_1C0778688();
  MEMORY[0x1E0C80A78](v3);
  sub_1C077CFE4();
  sub_1C079DB1C(OBJC_IVAR____TtC24IntelligencePlatformCore21BehaviorHistogramBase_eventSource);
  sub_1C085EA80();
  sub_1C0784E50(*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8));
  sub_1C0783058(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  sub_1C0776760();
}

#error "1C085ECAC: call analysis failed (funcsize=37)"

uint64_t sub_1C085ECE8()
{
  return type metadata accessor for PartOfDayBehaviorHistogram(0);
}

uint64_t type metadata accessor for PartOfDayBehaviorHistogram(uint64_t a1)
{
  return sub_1C0784B00(a1, (uint64_t *)&unk_1ED757FE0);
}

uint64_t sub_1C085ED04()
{
  return 14;
}

uint64_t sub_1C085ED0C(uint64_t a1, uint64_t a2)
{
  return sub_1C08576F8(a1, a2);
}

uint64_t sub_1C085ED24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C08555F8(a1, a2, a3, a4, (uint64_t)&off_1E7A0F478);
}

void sub_1C085ED50()
{
  sub_1C085EB58();
}

void sub_1C085ED64()
{
  sub_1C077E8AC();
}

unint64_t sub_1C085ED70()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  BOOL v10;
  unint64_t v11;

  sub_1C0779670();
  sub_1C106AFCC();
  sub_1C077591C();
  MEMORY[0x1E0C80A78](v5);
  sub_1C07AE79C();
  sub_1C0778688();
  MEMORY[0x1E0C80A78](v6);
  sub_1C07785B8();
  sub_1C07A9480((_QWORD *)(v0 + OBJC_IVAR____TtC24IntelligencePlatformCore21BehaviorHistogramBase_eventSource), *(_QWORD *)(v0 + OBJC_IVAR____TtC24IntelligencePlatformCore21BehaviorHistogramBase_eventSource + 24));
  v7 = sub_1C0862EEC();
  v8 = (void *)MEMORY[0x1C3BA79F4](v7);
  sub_1C078A72C(v2, *MEMORY[0x1E0CB1198], *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 104));
  v9 = sub_1C106AFD8();
  sub_1C07943BC(v2, *(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
  v10 = __OFSUB__(v9, 1);
  v11 = v9 - 1;
  if (v10)
  {
    __break(1u);
    goto LABEL_6;
  }
  objc_autoreleasePoolPop(v8);
  sub_1C078303C(v1, *(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
  if ((v11 & 0x8000000000000000) != 0)
  {
LABEL_6:
    sub_1C07A3684();
    sub_1C0789DAC();
    goto LABEL_8;
  }
  if (v11 >= 0x10000)
  {
    sub_1C07A3684();
    sub_1C07A8544();
LABEL_8:
    sub_1C07B15F8();
    sub_1C078A734();
  }
  return v11;
}

void sub_1C085EED0()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;

  v1 = (void *)MEMORY[0x1C3BA79F4]();
  sub_1C085EF10(v0, &v2);
  objc_autoreleasePoolPop(v1);
  sub_1C0776784();
}

uint64_t sub_1C085EF10@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(char *, uint64_t);
  uint64_t v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t, uint64_t);
  void (*v23)(char *, uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(char *, uint64_t);
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;

  v46 = a2;
  v3 = sub_1C106AFCC();
  v38 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v40 = (char *)&v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v37 - v6;
  v8 = sub_1C106ADE0();
  v43 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v37 - v12;
  v14 = sub_1C106AFE4();
  v41 = *(_QWORD *)(v14 - 8);
  v42 = v14;
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v37 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = *(_QWORD *)(a1 + OBJC_IVAR____TtC24IntelligencePlatformCore21BehaviorHistogramBase_eventSource + 24);
  v17 = *(_QWORD *)(a1 + OBJC_IVAR____TtC24IntelligencePlatformCore21BehaviorHistogramBase_eventSource + 32);
  sub_1C07A9480((_QWORD *)(a1 + OBJC_IVAR____TtC24IntelligencePlatformCore21BehaviorHistogramBase_eventSource), v18);
  (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v18, v17);
  sub_1C106ADD4();
  sub_1C106AF18();
  v19 = *(void (**)(char *, uint64_t))(v43 + 8);
  v43 = v8;
  v39 = v19;
  v19(v10, v8);
  v20 = *MEMORY[0x1E0CB1198];
  v21 = v38;
  v22 = *(void (**)(char *, uint64_t, uint64_t))(v38 + 104);
  v22(v7, v20, v3);
  v37 = sub_1C106AFD8();
  v23 = *(void (**)(char *, uint64_t))(v21 + 8);
  v23(v7, v3);
  v22(v7, v20, v3);
  v24 = (uint64_t)v40;
  v22(v40, *MEMORY[0x1E0CB10F8], v3);
  v25 = sub_1C106AFB4();
  v27 = v26;
  LOBYTE(v20) = v28;
  v23((char *)v24, v3);
  v29 = ((uint64_t (*)(char *, uint64_t))v23)(v7, v3);
  if ((v20 & 1) != 0)
  {
    v35 = MEMORY[0x1E0DEE9D8];
  }
  else
  {
    MEMORY[0x1E0C80A78](v29);
    v30 = v37;
    *(&v37 - 4) = (uint64_t)v16;
    *(&v37 - 3) = v30;
    *(&v37 - 2) = (uint64_t)v13;
    sub_1C0BC9B58((uint64_t)sub_1C0862314, (uint64_t)(&v37 - 6), v25, v27, v31, v32, v33, v34, v37, v38, (uint64_t)v39, (uint64_t)v40, v41, v42, v43, v44, v45, (uint64_t)v46, v47,
      v48);
  }
  *v46 = v35;
  v39(v13, v43);
  return (*(uint64_t (**)(char *, uint64_t))(v41 + 8))(v16, v42);
}

uint64_t sub_1C085F1DC(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  double v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;

  v5 = sub_1C106AFCC();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *a1;
  result = (*(uint64_t (**)(char *, _QWORD, uint64_t, double))(v6 + 104))(v9, *MEMORY[0x1E0CB1130], v5, v7);
  if (__OFSUB__(v10, a3))
  {
    __break(1u);
  }
  else
  {
    sub_1C106AF9C();
    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  }
  return result;
}

uint64_t sub_1C085F2BC()
{
  return type metadata accessor for DayOfWeekBehaviorHistogram(0);
}

uint64_t type metadata accessor for DayOfWeekBehaviorHistogram(uint64_t a1)
{
  return sub_1C0784B00(a1, (uint64_t *)&unk_1ED757CC8);
}

uint64_t sub_1C085F2D8(uint64_t a1, uint64_t a2)
{
  return sub_1C0856ED4(a1, a2);
}

void sub_1C085F2EC()
{
  sub_1C0855BE0();
}

uint64_t sub_1C085F304(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C08555F8(a1, a2, a3, a4, (uint64_t)&off_1E7A0F3B8);
}

void sub_1C085F334()
{
  sub_1C085ED70();
  sub_1C077E8AC();
}

void sub_1C085F354()
{
  void *v0;

  v0 = (void *)MEMORY[0x1C3BA79F4]();
  sub_1C106AF54();
  objc_autoreleasePoolPop(v0);
  sub_1C077671C();
}

void sub_1C085F398(uint64_t a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;

  v3 = (void *)MEMORY[0x1C3BA79F4]();
  sub_1C085F3DC(a2, &v4);
  objc_autoreleasePoolPop(v3);
  sub_1C0776784();
}

uint64_t sub_1C085F3DC@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t (*v27)(_QWORD);
  uint64_t (*v28)(_QWORD);
  uint64_t v29;
  void (*v30)(char *, uint64_t);
  uint64_t result;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  void (*v45)(char *, char *, uint64_t);
  char *v46;
  char *v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void (*v53)(char *, uint64_t);
  _QWORD *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t (*v60)(_QWORD);
  char *v61;
  uint64_t v62;
  uint64_t v63;

  v54 = a2;
  v3 = sub_1C07ACF80((uint64_t *)&unk_1ED762690);
  v58 = *(char **)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v52 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v63 = (uint64_t)&v52 - v7;
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v52 - v9;
  MEMORY[0x1E0C80A78](v11);
  v56 = (uint64_t)&v52 - v12;
  v13 = sub_1C106AFCC();
  v60 = *(uint64_t (**)(_QWORD))(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v52 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_1C106ADE0();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v61 = (char *)&v52 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v19);
  v59 = (char *)&v52 - v20;
  MEMORY[0x1E0C80A78](v21);
  v23 = (char *)&v52 - v22;
  MEMORY[0x1E0C80A78](v24);
  v26 = (char *)&v52 - v25;
  sub_1C106ADD4();
  sub_1C106AF18();
  v62 = v17;
  v53 = *(void (**)(char *, uint64_t))(v17 + 8);
  v53(v23, v16);
  v27 = v60;
  v28 = (uint64_t (*)(_QWORD))*((_QWORD *)v60 + 13);
  ((void (*)(char *, _QWORD, uint64_t))v28)(v15, *MEMORY[0x1E0CB1198], v13);
  v55 = v26;
  v57 = a1;
  v29 = sub_1C106AFD8();
  v30 = (void (*)(char *, uint64_t))*((_QWORD *)v27 + 1);
  v30(v15, v13);
  LODWORD(v52) = *MEMORY[0x1E0CB1130];
  v60 = v28;
  result = v28(v15);
  if (__OFSUB__(0, v29))
  {
    __break(1u);
  }
  else
  {
    sub_1C106AF9C();
    v30(v15, v13);
    ((void (*)(char *, _QWORD, uint64_t))v60)(v15, v52, v13);
    sub_1C106AF9C();
    v30(v15, v13);
    sub_1C07ACF80(&qword_1ED7448E0);
    v32 = *((_QWORD *)v58 + 9);
    v33 = (v58[80] + 32) & ~(unint64_t)v58[80];
    v34 = swift_allocObject();
    *(_OWORD *)(v34 + 16) = xmmword_1C1078FC0;
    v52 = v34;
    v35 = v34 + v33;
    v36 = v56;
    sub_1C077CD6C(v56, v35);
    v60 = (uint64_t (*)(_QWORD))v35;
    sub_1C077CD6C((uint64_t)v10, v35 + v32);
    v37 = 0;
    v38 = 0;
    v39 = MEMORY[0x1E0DEE9D8];
    v57 = v32;
    v58 = v10;
    v40 = v55;
    do
    {
      v41 = v37;
      v42 = v63;
      sub_1C077CD6C((uint64_t)v60 + v38 * v32, v63);
      sub_1C080AD78(v42, (uint64_t)v5, (uint64_t *)&unk_1ED762690);
      if (sub_1C07B2D80((uint64_t)v5, 1, v16) == 1)
      {
        sub_1C0784B6C((uint64_t)v5, (uint64_t *)&unk_1ED762690);
      }
      else
      {
        v43 = v40;
        v44 = v36;
        v45 = *(void (**)(char *, char *, uint64_t))(v62 + 32);
        v46 = v59;
        v47 = v5;
        v45(v59, v5, v16);
        v48 = v16;
        v45(v61, v46, v16);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1C07EB9D0();
          v39 = v50;
        }
        v49 = *(_QWORD *)(v39 + 16);
        if (v49 >= *(_QWORD *)(v39 + 24) >> 1)
        {
          sub_1C07EB9D0();
          v39 = v51;
        }
        *(_QWORD *)(v39 + 16) = v49 + 1;
        v45((char *)(v39+ ((*(unsigned __int8 *)(v62 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v62 + 80))+ *(_QWORD *)(v62 + 72) * v49), v61, v48);
        v36 = v44;
        v40 = v43;
        v32 = v57;
        v16 = v48;
        v5 = v47;
        v10 = v58;
      }
      v37 = 1;
      v38 = 1;
    }
    while ((v41 & 1) == 0);
    swift_setDeallocating();
    sub_1C0BE8D94();
    sub_1C0784B6C((uint64_t)v10, (uint64_t *)&unk_1ED762690);
    sub_1C0784B6C(v36, (uint64_t *)&unk_1ED762690);
    result = ((uint64_t (*)(char *, uint64_t))v53)(v40, v16);
    *v54 = v39;
  }
  return result;
}

void sub_1C085F898()
{
  uint64_t v0;
  uint64_t v1;

  sub_1C077B61C();
  sub_1C07957E8();
  sub_1C077E58C();
  MEMORY[0x1E0C80A78](v1);
  sub_1C0778544();
  sub_1C077C190(OBJC_IVAR____TtC24IntelligencePlatformCore21BehaviorHistogramBase_eventSource);
  sub_1C085F354();
  sub_1C0792D7C(*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8));
  sub_1C077C798();
}

void sub_1C085F900(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;

  sub_1C0779670();
  a19 = v22;
  a20 = v23;
  sub_1C07957E8();
  sub_1C0863000();
  MEMORY[0x1E0C80A78](v24);
  v26 = (char *)&a9 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C077AE98();
  sub_1C0778688();
  MEMORY[0x1E0C80A78](v27);
  sub_1C077CFE4();
  v28 = sub_1C079DB1C(OBJC_IVAR____TtC24IntelligencePlatformCore21BehaviorHistogramBase_eventSource);
  sub_1C085F398(v28, (uint64_t)v26);
  sub_1C0784E50(*(uint64_t (**)(uint64_t, uint64_t))(v20 + 8));
  sub_1C0783058(*(uint64_t (**)(uint64_t, uint64_t))(v21 + 8));
  sub_1C0776760();
}

uint64_t sub_1C085F990()
{
  return type metadata accessor for PartOfWeekBehaviorHistogram(0);
}

uint64_t type metadata accessor for PartOfWeekBehaviorHistogram(uint64_t a1)
{
  return sub_1C0784B00(a1, (uint64_t *)&unk_1ED7458A0);
}

uint64_t sub_1C085F9AC()
{
  return 15;
}

uint64_t sub_1C085F9B4(uint64_t a1, uint64_t a2)
{
  return sub_1C0857FB0(a1, a2);
}

uint64_t sub_1C085F9CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C08555F8(a1, a2, a3, a4, (uint64_t)&off_1E7A0F2F8);
}

void sub_1C085F9F8()
{
  sub_1C085F898();
  sub_1C077E8AC();
}

uint64_t sub_1C085FA18()
{
  return type metadata accessor for TrendingBehaviorHistogram(0);
}

uint64_t type metadata accessor for TrendingBehaviorHistogram(uint64_t a1)
{
  return sub_1C0784B00(a1, (uint64_t *)&unk_1ED757A38);
}

uint64_t sub_1C085FA34(uint64_t a1, uint64_t a2)
{
  return sub_1C0856A9C(a1, a2);
}

uint64_t sub_1C085FA50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C08555F8(a1, a2, a3, a4, (uint64_t)&off_1E7A0F238);
}

uint64_t sub_1C085FA84()
{
  return type metadata accessor for ShortTermTrendingBehaviorHistogram(0);
}

uint64_t type metadata accessor for ShortTermTrendingBehaviorHistogram(uint64_t a1)
{
  return sub_1C0784B00(a1, (uint64_t *)&unk_1ED7588D0);
}

uint64_t sub_1C085FAA0(uint64_t a1, uint64_t a2)
{
  return sub_1C0859650(a1, a2);
}

uint64_t sub_1C085FAB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C08555F8(a1, a2, a3, a4, (uint64_t)&off_1E7A0F178);
}

uint64_t sub_1C085FAE4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;

  v2 = sub_1C077AE98();
  sub_1C07AC42C(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16));
  return sub_1C077F00C(a1, 0, 1, v2);
}

uint64_t sub_1C085FB34()
{
  return type metadata accessor for LongTermTrendingBehaviorHistogram(0);
}

uint64_t type metadata accessor for LongTermTrendingBehaviorHistogram(uint64_t a1)
{
  return sub_1C0784B00(a1, (uint64_t *)&unk_1ED7587D0);
}

uint64_t sub_1C085FB50(uint64_t a1, uint64_t a2)
{
  return sub_1C0859218(a1, a2);
}

uint64_t sub_1C085FB68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C08555F8(a1, a2, a3, a4, (uint64_t)&off_1E7A0F0B8);
}

uint64_t sub_1C085FB94()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)(v0 + OBJC_IVAR____TtC24IntelligencePlatformCore21BehaviorHistogramBase_behaviorKeySource);
  sub_1C0775864();
  sub_1C07A9480(v1, v1[3]);
  return sub_1C0836628();
}

void sub_1C085FC00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, char a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;

  sub_1C0862F0C();
  a23 = v25;
  a24 = v27;
  v29 = v28;
  if (v26
    && (v30 = *(_QWORD *)(v26
                        + OBJC_IVAR____TtC24IntelligencePlatformCore21CachedContextProvider_lastBehaviorEventDigested)) != 0)
  {
    v31 = *(_QWORD *)(v30 + 16);
    v32 = *(_QWORD *)(v30 + 24);
    v33 = *(_QWORD *)(v30 + 32);
    v34 = *(_QWORD *)(v30 + 40);
    v35 = *(_QWORD *)(v30 + 48);
    v36 = *(_BYTE *)(v30 + 56);
    sub_1C07AAD08(v31, v32);
  }
  else
  {
    sub_1C08268CC(v24 + OBJC_IVAR____TtC24IntelligencePlatformCore21BehaviorHistogramBase_trackedBehaviorType, (_QWORD *)(v24 + OBJC_IVAR____TtC24IntelligencePlatformCore21BehaviorHistogramBase_eventSource), (uint64_t)&a9);
    v31 = a9;
    v32 = a10;
    v33 = a11;
    v34 = a12;
    v35 = a13;
    v36 = a14;
  }
  *(_QWORD *)v29 = v31;
  *(_QWORD *)(v29 + 8) = v32;
  *(_QWORD *)(v29 + 16) = v33;
  *(_QWORD *)(v29 + 24) = v34;
  *(_QWORD *)(v29 + 32) = v35;
  *(_BYTE *)(v29 + 40) = v36;
  sub_1C0794D74();
}

uint64_t sub_1C085FCA0()
{
  return type metadata accessor for PreviousBehaviorHistogram(0);
}

uint64_t type metadata accessor for PreviousBehaviorHistogram(uint64_t a1)
{
  return sub_1C0784B00(a1, (uint64_t *)&unk_1ED757938);
}

#error "1C085FCD4: call analysis failed (funcsize=15)"

void sub_1C085FCFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1C0856618(a1, a2, a3);
}

uint64_t sub_1C085FD14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C08555F8(a1, a2, a3, a4, (uint64_t)&off_1E7A0EFF8);
}

uint64_t sub_1C085FD3C()
{
  return sub_1C085B074(&OBJC_IVAR____TtC24IntelligencePlatformCore21BehaviorHistogramBase_state);
}

void sub_1C085FD68()
{
  sub_1C0862EDC();
  sub_1C077CEF4();
  sub_1C0778534();
}

void sub_1C085FD8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;

  sub_1C0862FBC(a1, a2, a3, a4, a5, a6, a7, a8, v8);
  sub_1C0862FD8();
  sub_1C0862FE4();
}

void sub_1C085FDBC(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v2;
  char v4;
  uint64_t v5;
  char v6;

  if (a1)
  {
    swift_retain();
    sub_1C08AD6C4();
    swift_release();
  }
  else
  {
    sub_1C0826B18((_QWORD *)(v2 + OBJC_IVAR____TtC24IntelligencePlatformCore21BehaviorHistogramBase_eventSource), (uint64_t)&v5);
  }
  v4 = v6;
  *(_QWORD *)a2 = v5;
  *(_BYTE *)(a2 + 8) = v4;
}

unint64_t sub_1C085FE50(unint64_t *a1)
{
  unint64_t result;

  result = *a1;
  if ((result & 0x8000000000000000) != 0)
  {
    sub_1C07A3684();
    sub_1C0789DAC();
LABEL_6:
    result = sub_1C07B15F8();
    __break(1u);
    return result;
  }
  if (result >= 0x10000)
  {
    sub_1C07A3684();
    sub_1C07A8544();
    goto LABEL_6;
  }
  return result;
}

void sub_1C085FECC()
{
  uint64_t v0;

  sub_1C07ACF80(&qword_1EF6322B8);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1C107A8D0;
  *(_OWORD *)(v0 + 32) = xmmword_1C1079220;
  *(_OWORD *)(v0 + 48) = xmmword_1C10795A0;
  *(_OWORD *)(v0 + 64) = xmmword_1C107A9E0;
  if (qword_1ED754E70 != -1)
    swift_once();
  *(_QWORD *)(v0 + 80) = qword_1ED754E68;
  sub_1C0778534();
}

uint64_t sub_1C085FF5C()
{
  return type metadata accessor for MotionStateBehaviorHistogram(0);
}

uint64_t type metadata accessor for MotionStateBehaviorHistogram(uint64_t a1)
{
  return sub_1C0784B00(a1, (uint64_t *)&unk_1ED75DB90);
}

uint64_t sub_1C085FF78()
{
  return sub_1C0781B08();
}

uint64_t sub_1C085FFA0()
{
  return 13;
}

void sub_1C085FFAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1C085840C(a1, a2, a3);
}

uint64_t sub_1C085FFC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C08555F8(a1, a2, a3, a4, (uint64_t)&off_1E7A0EF38);
}

void sub_1C085FFE8(unint64_t *a1)
{
  sub_1C085FE50(a1);
  sub_1C077E8AC();
}

void sub_1C0860008()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned __int8 v9;

  sub_1C077B61C();
  v3 = v2;
  sub_1C0780478();
  sub_1C0779CC0();
  MEMORY[0x1E0C80A78](v4);
  sub_1C0780A08();
  v6 = *MEMORY[0x1E0D3C0B8];
  if (v3)
  {
    sub_1C07A081C(v5, v6);
    sub_1C07B82CC();
    sub_1C078C858();
    sub_1C07906FC();
    sub_1C079865C();
    if (!v1)
      goto LABEL_9;
    sub_1C07A5BD8();
    sub_1C0778680();
  }
  else
  {
    sub_1C07A081C(v5, v6);
    sub_1C078AB80(OBJC_IVAR____TtC24IntelligencePlatformCore32CategoricalBehaviorHistogramBase_eventSource);
    v7 = sub_1C079865C();
    sub_1C07957DC(v7, v8, &qword_1ED758C90);
    v0 = v9;
    if (v9 == 255)
      goto LABEL_9;
    sub_1C0862ED0();
  }
  if (v0 != 7 || (v3 & 1) == 0)
    sub_1C077B678();
LABEL_9:
  sub_1C077C798();
}

uint64_t sub_1C08600EC()
{
  return type metadata accessor for MicroLocationBehaviorHistogram(0);
}

uint64_t type metadata accessor for MicroLocationBehaviorHistogram(uint64_t a1)
{
  return sub_1C0784B00(a1, (uint64_t *)&unk_1ED75DDB8);
}

uint64_t sub_1C086010C()
{
  return 6;
}

uint64_t sub_1C0860114()
{
  return sub_1C0860EE0();
}

void sub_1C0860120(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  sub_1C0860008();
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_1C0860144()
{
  return sub_1C085E1E0();
}

uint64_t sub_1C0860158(uint64_t a1, uint64_t a2)
{
  return sub_1C0858AA0(a1, a2);
}

void sub_1C086016C()
{
  sub_1C0855D08();
}

void sub_1C0860180()
{
  sub_1C085D370();
}

void sub_1C0860194()
{
  sub_1C0860F50();
}

void sub_1C08601A0()
{
  sub_1C085DFD0();
}

uint64_t sub_1C08601B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C08555F8(a1, a2, a3, a4, (uint64_t)&off_1E7A0EE38);
}

void sub_1C08601E4(uint64_t a1@<X8>)
{
  sub_1C086100C(&OBJC_IVAR____TtC24IntelligencePlatformCore32CategoricalBehaviorHistogramBase_state, a1);
}

void sub_1C08601F0()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned __int8 v9;

  sub_1C077B61C();
  v3 = v2;
  sub_1C0780478();
  sub_1C0779CC0();
  MEMORY[0x1E0C80A78](v4);
  sub_1C0780A08();
  v6 = *MEMORY[0x1E0D3C098];
  if (v3)
  {
    sub_1C07A081C(v5, v6);
    sub_1C07B82CC();
    sub_1C078C858();
    sub_1C07906FC();
    sub_1C079865C();
    if (!v1)
      goto LABEL_8;
    sub_1C079E2A4();
    sub_1C0778680();
  }
  else
  {
    sub_1C07A081C(v5, v6);
    sub_1C078AB80(OBJC_IVAR____TtC24IntelligencePlatformCore32CategoricalBehaviorHistogramBase_eventSource);
    v7 = sub_1C079865C();
    sub_1C07957DC(v7, v8, &qword_1ED758C90);
    v0 = v9;
    if (v9 == 255)
      goto LABEL_8;
    sub_1C0862ED0();
  }
  if (v0 != 18)
    sub_1C07BC648();
LABEL_8:
  sub_1C078C000();
  sub_1C077C798();
}

#error "1C0860320: call analysis failed (funcsize=37)"

uint64_t sub_1C0860360()
{
  return type metadata accessor for SpecificGeoHashBehaviorHistogram(0);
}

uint64_t type metadata accessor for SpecificGeoHashBehaviorHistogram(uint64_t a1)
{
  return sub_1C0784B00(a1, (uint64_t *)&unk_1ED7586A8);
}

void sub_1C086037C(uint64_t a1@<X8>)
{
  uint64_t v2;
  char v3;

  sub_1C08601F0();
  *(_QWORD *)a1 = v2;
  *(_BYTE *)(a1 + 8) = v3 & 1;
}

void sub_1C08603A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1C0858E68(a1, a2, a3);
}

uint64_t sub_1C08603BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C08555F8(a1, a2, a3, a4, (uint64_t)&off_1E7A0ED38);
}

void sub_1C08603E4()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned __int8 v9;

  sub_1C077B61C();
  v3 = v2;
  sub_1C0780478();
  sub_1C0779CC0();
  MEMORY[0x1E0C80A78](v4);
  sub_1C0780A08();
  v6 = *MEMORY[0x1E0D3C080];
  if (v3)
  {
    sub_1C07A081C(v5, v6);
    sub_1C07B82CC();
    sub_1C078C858();
    sub_1C07906FC();
    sub_1C079865C();
    if (!v1)
      goto LABEL_8;
    sub_1C079E2A4();
    sub_1C0778680();
  }
  else
  {
    sub_1C07A081C(v5, v6);
    sub_1C078AB80(OBJC_IVAR____TtC24IntelligencePlatformCore32CategoricalBehaviorHistogramBase_eventSource);
    v7 = sub_1C079865C();
    sub_1C07957DC(v7, v8, &qword_1ED758C90);
    v0 = v9;
    if (v9 == 255)
      goto LABEL_8;
    sub_1C0862ED0();
  }
  if (v0 != 19)
    sub_1C07BC648();
LABEL_8:
  sub_1C078C000();
  sub_1C077C798();
}

uint64_t sub_1C08604C0()
{
  return type metadata accessor for CoarseGeoHashBehaviorHistogram(0);
}

uint64_t type metadata accessor for CoarseGeoHashBehaviorHistogram(uint64_t a1)
{
  return sub_1C0784B00(a1, (uint64_t *)&unk_1ED7582F8);
}

void sub_1C08604DC(uint64_t a1@<X8>)
{
  uint64_t v2;
  char v3;

  sub_1C08603E4();
  *(_QWORD *)a1 = v2;
  *(_BYTE *)(a1 + 8) = v3 & 1;
}

void sub_1C0860508()
{
  sub_1C08587A4();
}

void sub_1C0860524()
{
  sub_1C0855AB8();
}

uint64_t sub_1C0860540(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C08555F8(a1, a2, a3, a4, (uint64_t)&off_1E7A0EC38);
}

void sub_1C0860568()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned __int8 v9;

  sub_1C077B61C();
  v3 = v2;
  sub_1C0780478();
  sub_1C0779CC0();
  MEMORY[0x1E0C80A78](v4);
  sub_1C0780A08();
  v6 = *MEMORY[0x1E0D3C070];
  if (v3)
  {
    sub_1C07A081C(v5, v6);
    sub_1C07B82CC();
    sub_1C078C858();
    sub_1C07906FC();
    sub_1C079865C();
    if (!v1)
      goto LABEL_8;
    sub_1C079E2A4();
    sub_1C0778680();
  }
  else
  {
    sub_1C07A081C(v5, v6);
    sub_1C078AB80(OBJC_IVAR____TtC24IntelligencePlatformCore32CategoricalBehaviorHistogramBase_eventSource);
    v7 = sub_1C079865C();
    sub_1C07957DC(v7, v8, &qword_1ED758C90);
    v0 = v9;
    if (v9 == 255)
      goto LABEL_8;
    sub_1C0862ED0();
  }
  if (v0 != 20)
    sub_1C07BC648();
LABEL_8:
  sub_1C078C000();
  sub_1C077C798();
}

uint64_t sub_1C0860644()
{
  return type metadata accessor for LargeGeoHashBehaviorHistogram(0);
}

uint64_t type metadata accessor for LargeGeoHashBehaviorHistogram(uint64_t a1)
{
  return sub_1C0784B00(a1, (uint64_t *)&unk_1ED75DC90);
}

uint64_t sub_1C0860660()
{
  return 9;
}

void sub_1C0860668(uint64_t a1@<X8>)
{
  uint64_t v2;
  char v3;

  sub_1C0860568();
  *(_QWORD *)a1 = v2;
  *(_BYTE *)(a1 + 8) = v3 & 1;
}

void sub_1C0860694()
{
  sub_1C08587A4();
}

uint64_t sub_1C08606B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C08555F8(a1, a2, a3, a4, (uint64_t)&off_1E7A0EB38);
}

void sub_1C08606D8()
{
  sub_1C085CF00();
}

uint64_t sub_1C08606F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  _QWORD v28[11];
  unsigned __int8 v29;
  uint64_t v30;
  uint64_t v31;

  sub_1C077B61C();
  v30 = v3;
  v31 = v4;
  v6 = v5;
  v8 = v7;
  v10 = v9;
  sub_1C0780478();
  sub_1C077E58C();
  MEMORY[0x1E0C80A78](v11);
  sub_1C0778544();
  v12 = *MEMORY[0x1E0D3C100];
  if (v6)
  {
    sub_1C078A72C(v1, v12, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 104));
    swift_retain();
    sub_1C08ADE70();
    v14 = v13;
    swift_release();
    sub_1C0792D7C(*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
    if (!v14)
      goto LABEL_10;
    v15 = *(_QWORD *)(v14 + 16);
    v16 = *(_QWORD *)(v14 + 24);
    v1 = *(_QWORD *)(v14 + 32);
    v6 = *(_QWORD *)(v14 + 40);
    v8 = *(_QWORD *)(v14 + 48);
    v17 = *(unsigned __int8 *)(v14 + 56);
    sub_1C07AAD08(v15, v16);
    swift_release();
  }
  else
  {
    sub_1C078A72C(v1, v12, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 104));
    sub_1C08268CC(v1, (_QWORD *)(v0 + OBJC_IVAR____TtC24IntelligencePlatformCore32CategoricalBehaviorHistogramBase_eventSource), (uint64_t)v28);
    v18 = sub_1C0792D7C(*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
    sub_1C07957DC(v18, v19, &qword_1ED758C90);
    v17 = v29;
    if (v29 == 255)
      goto LABEL_10;
    v15 = v28[6];
    v16 = v28[7];
    sub_1C0862ED0();
  }
  if (v17 != 14)
  {
LABEL_9:
    sub_1C0862F94();
    sub_1C0826F50(v20, v21, v22, v23, v24, v25);
    goto LABEL_10;
  }
  if (!v16)
  {
LABEL_10:
    v26 = sub_1C106AE28();
    return sub_1C07B2D8C(v10, 1, 1, v26);
  }
  if ((v1 & 0x100000000) == 0)
    goto LABEL_9;
  sub_1C106ADEC();
  return sub_1C0826F50(v15, v16, v1, v6, v8, 14);
}

uint64_t sub_1C0860890()
{
  return type metadata accessor for LocationOfInterestBehaviorHistogram(0);
}

uint64_t type metadata accessor for LocationOfInterestBehaviorHistogram(uint64_t a1)
{
  return sub_1C0784B00(a1, (uint64_t *)&unk_1ED7589D0);
}

uint64_t sub_1C08608AC()
{
  return 10;
}

uint64_t sub_1C08608B8(uint64_t a1, uint64_t a2, char *a3)
{
  return sub_1C0859A88(a1, a2, a3);
}

uint64_t sub_1C08608CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C08555F8(a1, a2, a3, a4, (uint64_t)&off_1E7A0EA38);
}

void sub_1C08608F4()
{
  sub_1C085CFBC();
}

void sub_1C0860908()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned __int8 v9;

  sub_1C077B61C();
  v3 = v2;
  sub_1C0780478();
  sub_1C0779CC0();
  MEMORY[0x1E0C80A78](v4);
  sub_1C0780A08();
  v6 = *MEMORY[0x1E0D3C128];
  if (v3)
  {
    sub_1C07A081C(v5, v6);
    sub_1C07B82CC();
    sub_1C078C858();
    sub_1C07906FC();
    sub_1C079865C();
    if (!v1)
      goto LABEL_9;
    sub_1C07A5BD8();
    sub_1C0778680();
  }
  else
  {
    sub_1C07A081C(v5, v6);
    sub_1C078AB80(OBJC_IVAR____TtC24IntelligencePlatformCore32CategoricalBehaviorHistogramBase_eventSource);
    v7 = sub_1C079865C();
    sub_1C07957DC(v7, v8, &qword_1ED758C90);
    v0 = v9;
    if (v9 == 255)
      goto LABEL_9;
    sub_1C0862ED0();
  }
  if (v0 != 9 || (v3 & 1) == 0)
    sub_1C077B678();
LABEL_9:
  sub_1C077C798();
}

uint64_t sub_1C08609E8()
{
  return type metadata accessor for WiFiBehaviorHistogram(0);
}

uint64_t type metadata accessor for WiFiBehaviorHistogram(uint64_t a1)
{
  return sub_1C0784B00(a1, (uint64_t *)&unk_1ED757730);
}

uint64_t sub_1C0860A04()
{
  return 11;
}

void sub_1C0860A0C(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  sub_1C0860908();
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_1C0860A30(uint64_t a1, uint64_t a2)
{
  return sub_1C0856250(a1, a2);
}

uint64_t sub_1C0860A48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C08555F8(a1, a2, a3, a4, (uint64_t)&off_1E7A0E938);
}

uint64_t sub_1C0860A70()
{
  return sub_1C085B074(&OBJC_IVAR____TtC24IntelligencePlatformCore32CategoricalBehaviorHistogramBase_state);
}

void sub_1C0860A9C()
{
  sub_1C0862EDC();
  sub_1C077CEF4();
  sub_1C0778534();
}

void sub_1C0860AC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;

  sub_1C0862FBC(a1, a2, a3, a4, a5, a6, a7, a8, v8);
  sub_1C0862FD8();
  sub_1C0862FE4();
}

void sub_1C0860AF0(uint64_t *a1)
{
  sub_1C085CE18(*a1, a1[1]);
}

uint64_t sub_1C0860B0C(uint64_t a1, char a2)
{
  uint64_t v4;
  _BYTE v5[48];
  _BYTE v6[48];
  uint64_t v7;
  int v8;
  char v9;
  char v10;

  sub_1C080AD78(a1, (uint64_t)v5, &qword_1ED758C90);
  if (v5[40] == 255)
    return 0;
  sub_1C07DFF44((uint64_t)v5, (uint64_t)v6);
  sub_1C07DFF44((uint64_t)v6, (uint64_t)&v7);
  if (v10 != 4 || (a2 & 1) != 0 && !v9)
    return 0;
  v4 = sub_1C088032C(v8);
  sub_1C106FC94();
  sub_1C106FC94();
  return v4;
}

uint64_t sub_1C0860BC4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  _QWORD v25[5];
  char v26;
  _QWORD v27[5];
  char v28;
  uint64_t v29;
  uint64_t v30;

  sub_1C0779670();
  v29 = v3;
  v30 = v4;
  v6 = v5;
  sub_1C0780478();
  sub_1C077591C();
  MEMORY[0x1E0C80A78](v7);
  sub_1C077962C();
  v8 = *MEMORY[0x1E0D3C0C8];
  if (v6)
  {
    sub_1C078A72C(v1, v8, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 104));
    swift_retain();
    sub_1C08ADE70();
    v10 = v9;
    swift_release();
    sub_1C07943BC(v1, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
    if (v10)
    {
      v11 = *(_QWORD *)(v10 + 16);
      v12 = *(_QWORD *)(v10 + 24);
      v13 = *(_QWORD *)(v10 + 32);
      v14 = *(_QWORD *)(v10 + 40);
      v15 = *(_QWORD *)(v10 + 48);
      v16 = *(_BYTE *)(v10 + 56);
      sub_1C07AAD08(v11, v12);
      swift_release();
    }
    else
    {
      v11 = 0;
      v12 = 0;
      v13 = 0;
      v14 = 0;
      v15 = 0;
      v16 = -1;
    }
  }
  else
  {
    sub_1C078A72C(v1, v8, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 104));
    sub_1C08268CC(v1, (_QWORD *)(v0 + OBJC_IVAR____TtC24IntelligencePlatformCore32CategoricalBehaviorHistogramBase_eventSource), (uint64_t)v25);
    v11 = v25[0];
    v12 = v25[1];
    v13 = v25[2];
    v14 = v25[3];
    v15 = v25[4];
    v16 = v26;
    sub_1C07943BC(v1, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  }
  v27[0] = v11;
  v27[1] = v12;
  v27[2] = v13;
  v27[3] = v14;
  v27[4] = v15;
  v28 = v16;
  v17 = sub_1C0860B0C((uint64_t)v27, 1);
  sub_1C0862F94();
  sub_1C08273B4(v18, v19, v20, v21, v22, v23);
  return v17;
}

uint64_t sub_1C0860D44()
{
  return type metadata accessor for FocusModeBehaviorHistogram(0);
}

uint64_t type metadata accessor for FocusModeBehaviorHistogram(uint64_t a1)
{
  return sub_1C0784B00(a1, (uint64_t *)&unk_1ED757EB8);
}

uint64_t sub_1C0860D60()
{
  return sub_1C0781B08();
}

uint64_t sub_1C0860D88(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 15 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 15) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF1)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF0)
    return ((uint64_t (*)(void))((char *)&loc_1C0860DD4 + 4 * byte_1C107CAC9[v4]))();
  *a1 = a2 + 15;
  return ((uint64_t (*)(void))((char *)sub_1C0860E08 + 4 * byte_1C107CAC4[v4]))();
}

uint64_t sub_1C0860E08(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C0860E10(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C0860E18);
  return result;
}

uint64_t sub_1C0860E24(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C0860E2CLL);
  *(_BYTE *)result = a2 + 15;
  return result;
}

uint64_t sub_1C0860E30(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C0860E38(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for BehaviorHistogramKind()
{
  sub_1C0779604();
}

unint64_t sub_1C0860E54()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF632120;
  if (!qword_1EF632120)
  {
    v1 = sub_1C07D4BEC(&qword_1EF632128);
    result = MEMORY[0x1C3BA8174](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF632120);
  }
  return result;
}

unint64_t sub_1C0860E9C()
{
  unint64_t result;

  result = qword_1EF632130;
  if (!qword_1EF632130)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C107CF00, &unk_1E7A0E810);
    atomic_store(result, (unint64_t *)&qword_1EF632130);
  }
  return result;
}

uint64_t sub_1C0860ED8()
{
  return 12;
}

uint64_t sub_1C0860EE0()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t);

  sub_1C0780478();
  v0 = sub_1C077CEF4();
  return v1(v0);
}

uint64_t sub_1C0860F18@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_1C0860BC4();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1C0860F3C(uint64_t a1, uint64_t a2)
{
  return sub_1C0857330(a1, a2);
}

void sub_1C0860F50()
{
  uint64_t v0;
  _QWORD *v1;
  void (*v2)(uint64_t, uint64_t, _QWORD, uint64_t, uint64_t);
  void (*v3)(uint64_t, uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  sub_1C077B61C();
  v3 = v2;
  v5 = v4;
  v7 = v6;
  v9 = v8;
  v11 = v10;
  sub_1C079D180(v6, *(_QWORD *)(v6 + 24));
  sub_1C0792D70();
  MEMORY[0x1E0C80A78](v12);
  sub_1C077962C();
  (*(void (**)(_QWORD *))(v13 + 16))(v1);
  v3(v11, v9, *v1, v5, v0);
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0(v7);
  sub_1C078C000();
  sub_1C077C798();
}

uint64_t sub_1C0860FE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C08555F8(a1, a2, a3, a4, (uint64_t)&off_1E7A0E838);
}

void sub_1C086100C(_QWORD *a1@<X2>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;

  v4 = v2 + *a1;
  sub_1C0775864();
  sub_1C080ABC4(v4, a2, (uint64_t (*)(_QWORD))type metadata accessor for DecayingHistogramState);
}

uint64_t sub_1C0861058()
{
  char v0;

  sub_1C085C15C();
  return v0 & 1;
}

unint64_t sub_1C0861074()
{
  unint64_t result;

  result = qword_1ED7459A0;
  if (!qword_1ED7459A0)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C107D414, &unk_1E7A0F728);
    atomic_store(result, (unint64_t *)&qword_1ED7459A0);
  }
  return result;
}

uint64_t sub_1C08610B0()
{
  return swift_deallocObject();
}

uint64_t sub_1C08610C0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = sub_1C0780478();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

void sub_1C086111C(void *a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(sub_1C0780478() - 8) + 80);
  sub_1C085C524(a1, v1 + ((v3 + 16) & ~v3));
}

uint64_t sub_1C0861154()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v8;

  v1 = *(_QWORD *)(sub_1C077AE98() - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = (((((*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  v4 = sub_1C0780478();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + v3 + 8) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v8 = v4;
  swift_bridgeObjectRelease();
  sub_1C078303C(v0 + v2, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  swift_release();
  swift_release();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v5 + 8))(v0 + v6, v8);
  return swift_deallocObject();
}

uint64_t sub_1C0861240(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;

  v3 = *(_QWORD *)(sub_1C077AE98() - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = (*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v6 = *(unsigned __int8 *)(*(_QWORD *)(sub_1C0780478() - 8) + 80);
  return sub_1C085C7D4(a1, *(_QWORD *)(v1 + 16), v1 + v4, *(_QWORD *)(v1 + v5), *(_QWORD *)(v1 + ((v5 + 15) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v1 + ((((v5 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)), v1 + ((v6 + ((((v5 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8) & ~v6));
}

void sub_1C08612D4(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  float v12;
  float v13;
  float *v14;
  float v15;
  float v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int16 v22;
  int v23;
  uint64_t v24;
  float *v25;
  float v26;
  uint64_t v27;
  float *v28;
  __int16 v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  char *v33;
  char *v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  BOOL v46;
  unint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  BOOL v56;
  uint64_t v57;
  char v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  BOOL v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  unint64_t v75;
  char *v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  unint64_t v80;
  char *v81;
  uint64_t v82;
  unint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  unint64_t v87;
  uint64_t v88;
  uint64_t *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;

  v3 = a1[1];
  v4 = sub_1C1070BE8();
  if (v4 >= v3)
  {
    if ((v3 & 0x8000000000000000) == 0)
    {
      if (v3)
        sub_1C08618E0(0, v3, 1, a1);
      return;
    }
    goto LABEL_124;
  }
  v5 = v4;
  sub_1C08CBEE8(v3 / 2);
  v89 = a1;
  v90 = v6;
  v94 = v7;
  v92 = v3;
  if (v3 <= 0)
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
    v32 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
LABEL_90:
    if (v32 < 2)
    {
LABEL_101:
      swift_bridgeObjectRelease();
      if (v92 >= -1)
      {
        *(_QWORD *)(v90 + 16) = 0;
        swift_bridgeObjectRelease();
        return;
      }
      goto LABEL_129;
    }
    v82 = *v89;
    while (1)
    {
      v83 = v32 - 2;
      if (v32 < 2)
        break;
      if (!v82)
        goto LABEL_133;
      v84 = *(_QWORD *)&v10[16 * v83 + 32];
      v85 = *(_QWORD *)&v10[16 * v32 + 24];
      sub_1C0861950((char *)(v82 + 8 * v84), (char *)(v82 + 8 * *(_QWORD *)&v10[16 * v32 + 16]), v82 + 8 * v85, v94);
      if (v1)
        goto LABEL_86;
      if (v85 < v84)
        goto LABEL_119;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v10 = sub_1C0861BC0();
      if (v83 >= *((_QWORD *)v10 + 2))
        goto LABEL_120;
      v86 = &v10[16 * v83 + 32];
      *(_QWORD *)v86 = v84;
      *((_QWORD *)v86 + 1) = v85;
      v87 = *((_QWORD *)v10 + 2);
      if (v32 > v87)
        goto LABEL_121;
      memmove(&v10[16 * v32 + 16], &v10[16 * v32 + 32], 16 * (v87 - v32));
      *((_QWORD *)v10 + 2) = v87 - 1;
      v32 = v87 - 1;
      if (v87 <= 2)
        goto LABEL_101;
    }
LABEL_118:
    __break(1u);
LABEL_119:
    __break(1u);
LABEL_120:
    __break(1u);
LABEL_121:
    __break(1u);
LABEL_122:
    __break(1u);
LABEL_123:
    __break(1u);
LABEL_124:
    __break(1u);
LABEL_125:
    __break(1u);
LABEL_126:
    __break(1u);
LABEL_127:
    __break(1u);
LABEL_128:
    __break(1u);
LABEL_129:
    __break(1u);
LABEL_130:
    __break(1u);
LABEL_131:
    __break(1u);
LABEL_132:
    __break(1u);
LABEL_133:
    __break(1u);
    return;
  }
  v8 = 0;
  v9 = *a1;
  v88 = *a1 + 20;
  v10 = (char *)MEMORY[0x1E0DEE9D8];
  v91 = v5;
  v93 = *a1;
  while (1)
  {
    v11 = v8++;
    if (v8 < v3)
    {
      v12 = *(float *)(v9 + 8 * v8 + 4);
      v13 = *(float *)(v9 + 8 * v11 + 4);
      v8 = v11 + 2;
      if (v11 + 2 < v3)
      {
        v14 = (float *)(v88 + 8 * v11);
        v15 = v12;
        while (1)
        {
          v16 = v15;
          v15 = *v14;
          if (v12 < v13 == *v14 >= v16)
            break;
          ++v8;
          v14 += 2;
          if (v8 >= v3)
          {
            v8 = v3;
            break;
          }
        }
      }
      if (v12 < v13)
      {
        if (v8 < v11)
          goto LABEL_126;
        if (v11 < v8)
        {
          v17 = 8 * v8;
          v18 = 8 * v11;
          v19 = v8;
          v20 = v11;
          do
          {
            if (v20 != --v19)
            {
              if (!v9)
                goto LABEL_132;
              v21 = v9 + v17;
              v22 = *(_WORD *)(v9 + v18);
              v23 = *(_DWORD *)(v9 + v18 + 4);
              *(_QWORD *)(v9 + v18) = *(_QWORD *)(v9 + v17 - 8);
              *(_WORD *)(v21 - 8) = v22;
              *(_DWORD *)(v21 - 4) = v23;
            }
            ++v20;
            v17 -= 8;
            v18 += 8;
          }
          while (v20 < v19);
        }
      }
    }
    if (v8 < v3)
    {
      if (__OFSUB__(v8, v11))
        goto LABEL_123;
      if (v8 - v11 < v5)
      {
        v24 = v11 + v5;
        if (__OFADD__(v11, v5))
          goto LABEL_127;
        if (v24 >= v3)
          v24 = v3;
        if (v24 < v11)
          goto LABEL_128;
        if (v8 != v24)
        {
          v25 = (float *)(v9 + 8 * v8);
          do
          {
            v26 = *(float *)(v9 + 8 * v8 + 4);
            v27 = v11;
            v28 = v25;
            do
            {
              if (v26 >= *(v28 - 1))
                break;
              if (!v9)
                goto LABEL_130;
              v29 = *(_WORD *)v28;
              *(_QWORD *)v28 = *((_QWORD *)v28 - 1);
              *((_WORD *)v28 - 4) = v29;
              *(v28 - 1) = v26;
              ++v27;
              v28 -= 2;
            }
            while (v8 != v27);
            ++v8;
            v25 += 2;
          }
          while (v8 != v24);
          v8 = v24;
        }
      }
    }
    if (v8 < v11)
      goto LABEL_122;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v10 = sub_1C0861AD0(0, *((_QWORD *)v10 + 2) + 1, 1, v10);
    v31 = *((_QWORD *)v10 + 2);
    v30 = *((_QWORD *)v10 + 3);
    v32 = v31 + 1;
    v9 = v93;
    if (v31 >= v30 >> 1)
    {
      v81 = sub_1C0861AD0((char *)(v30 > 1), v31 + 1, 1, v10);
      v9 = v93;
      v10 = v81;
    }
    *((_QWORD *)v10 + 2) = v32;
    v33 = v10 + 32;
    v34 = &v10[16 * v31 + 32];
    *(_QWORD *)v34 = v11;
    *((_QWORD *)v34 + 1) = v8;
    if (v31)
      break;
    v32 = 1;
LABEL_81:
    v5 = v91;
    v3 = v92;
    if (v8 >= v92)
      goto LABEL_90;
  }
  while (1)
  {
    v35 = v32 - 1;
    if (v32 >= 4)
    {
      v40 = &v33[16 * v32];
      v41 = *((_QWORD *)v40 - 8);
      v42 = *((_QWORD *)v40 - 7);
      v46 = __OFSUB__(v42, v41);
      v43 = v42 - v41;
      if (v46)
        goto LABEL_107;
      v45 = *((_QWORD *)v40 - 6);
      v44 = *((_QWORD *)v40 - 5);
      v46 = __OFSUB__(v44, v45);
      v38 = v44 - v45;
      v39 = v46;
      if (v46)
        goto LABEL_108;
      v47 = v32 - 2;
      v48 = &v33[16 * v32 - 32];
      v50 = *(_QWORD *)v48;
      v49 = *((_QWORD *)v48 + 1);
      v46 = __OFSUB__(v49, v50);
      v51 = v49 - v50;
      if (v46)
        goto LABEL_109;
      v46 = __OFADD__(v38, v51);
      v52 = v38 + v51;
      if (v46)
        goto LABEL_111;
      if (v52 >= v43)
      {
        v70 = &v33[16 * v35];
        v72 = *(_QWORD *)v70;
        v71 = *((_QWORD *)v70 + 1);
        v46 = __OFSUB__(v71, v72);
        v73 = v71 - v72;
        if (v46)
          goto LABEL_117;
        v63 = v38 < v73;
        goto LABEL_70;
      }
    }
    else
    {
      if (v32 != 3)
      {
        v64 = *((_QWORD *)v10 + 4);
        v65 = *((_QWORD *)v10 + 5);
        v46 = __OFSUB__(v65, v64);
        v57 = v65 - v64;
        v58 = v46;
        goto LABEL_64;
      }
      v37 = *((_QWORD *)v10 + 4);
      v36 = *((_QWORD *)v10 + 5);
      v46 = __OFSUB__(v36, v37);
      v38 = v36 - v37;
      v39 = v46;
    }
    if ((v39 & 1) != 0)
      goto LABEL_110;
    v47 = v32 - 2;
    v53 = &v33[16 * v32 - 32];
    v55 = *(_QWORD *)v53;
    v54 = *((_QWORD *)v53 + 1);
    v56 = __OFSUB__(v54, v55);
    v57 = v54 - v55;
    v58 = v56;
    if (v56)
      goto LABEL_112;
    v59 = &v33[16 * v35];
    v61 = *(_QWORD *)v59;
    v60 = *((_QWORD *)v59 + 1);
    v46 = __OFSUB__(v60, v61);
    v62 = v60 - v61;
    if (v46)
      goto LABEL_114;
    if (__OFADD__(v57, v62))
      goto LABEL_116;
    if (v57 + v62 >= v38)
    {
      v63 = v38 < v62;
LABEL_70:
      if (v63)
        v35 = v47;
      goto LABEL_72;
    }
LABEL_64:
    if ((v58 & 1) != 0)
      goto LABEL_113;
    v66 = &v33[16 * v35];
    v68 = *(_QWORD *)v66;
    v67 = *((_QWORD *)v66 + 1);
    v46 = __OFSUB__(v67, v68);
    v69 = v67 - v68;
    if (v46)
      goto LABEL_115;
    if (v69 < v57)
      goto LABEL_81;
LABEL_72:
    v74 = v10;
    v75 = v35 - 1;
    if (v35 - 1 >= v32)
    {
      __break(1u);
LABEL_104:
      __break(1u);
LABEL_105:
      __break(1u);
LABEL_106:
      __break(1u);
LABEL_107:
      __break(1u);
LABEL_108:
      __break(1u);
LABEL_109:
      __break(1u);
LABEL_110:
      __break(1u);
LABEL_111:
      __break(1u);
LABEL_112:
      __break(1u);
LABEL_113:
      __break(1u);
LABEL_114:
      __break(1u);
LABEL_115:
      __break(1u);
LABEL_116:
      __break(1u);
LABEL_117:
      __break(1u);
      goto LABEL_118;
    }
    if (!v9)
      goto LABEL_131;
    v76 = &v33[16 * v75];
    v77 = *(_QWORD *)v76;
    v78 = &v33[16 * v35];
    v79 = *((_QWORD *)v78 + 1);
    sub_1C0861950((char *)(v9 + 8 * *(_QWORD *)v76), (char *)(v9 + 8 * *(_QWORD *)v78), v9 + 8 * v79, v94);
    if (v1)
      break;
    if (v79 < v77)
      goto LABEL_104;
    if (v35 > *((_QWORD *)v74 + 2))
      goto LABEL_105;
    *(_QWORD *)v76 = v77;
    *(_QWORD *)&v33[16 * v75 + 8] = v79;
    v80 = *((_QWORD *)v74 + 2);
    if (v35 >= v80)
      goto LABEL_106;
    v10 = v74;
    v32 = v80 - 1;
    memmove(&v33[16 * v35], v78 + 16, 16 * (v80 - 1 - v35));
    *((_QWORD *)v74 + 2) = v80 - 1;
    v9 = v93;
    if (v80 <= 2)
      goto LABEL_81;
  }
LABEL_86:
  swift_bridgeObjectRelease();
  if (v92 < -1)
    goto LABEL_125;
  *(_QWORD *)(v90 + 16) = 0;
  swift_bridgeObjectRelease();
}

uint64_t sub_1C08618E0(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v5;
  float v6;
  uint64_t v7;
  float *v8;
  __int16 v9;

  if (a3 != a2)
  {
    v4 = *a4;
    v5 = *a4 + 8 * a3;
    while (2)
    {
      v6 = *(float *)(v4 + 8 * a3 + 4);
      v7 = result;
      v8 = (float *)v5;
      do
      {
        if (v6 >= *(v8 - 1))
          break;
        if (!v4)
        {
          __break(1u);
          return result;
        }
        v9 = *(_WORD *)v8;
        *(_QWORD *)v8 = *((_QWORD *)v8 - 1);
        *((_WORD *)v8 - 4) = v9;
        *(v8 - 1) = v6;
        ++v7;
        v8 -= 2;
      }
      while (a3 != v7);
      ++a3;
      v5 += 8;
      if (a3 != a2)
        continue;
      break;
    }
  }
  return result;
}

uint64_t sub_1C0861950(char *a1, char *a2, unint64_t a3, char *a4)
{
  char *v4;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  BOOL v14;
  char *v15;
  char *v20;
  char *v21;
  char *v22;
  BOOL v23;
  BOOL v24;

  v4 = a4;
  v6 = a2;
  v7 = a1;
  v8 = a2 - a1;
  v9 = (a2 - a1) / 8;
  v10 = a3 - (_QWORD)a2;
  v11 = (uint64_t)(a3 - (_QWORD)a2) / 8;
  if (v9 >= v11)
  {
    sub_1C09D2098(a2, (uint64_t)(a3 - (_QWORD)a2) / 8, a4);
    v12 = (unint64_t)&v4[8 * v11];
    if (v7 >= v6 || v10 < 8)
      goto LABEL_45;
    v20 = (char *)(a3 - 8);
    while (1)
    {
      v21 = v20 + 8;
      if (*(float *)(v12 - 4) >= *((float *)v6 - 1))
      {
        v22 = (char *)(v12 - 8);
        v24 = v21 != (char *)v12 || (unint64_t)v20 >= v12;
        v12 -= 8;
        if (!v24)
          goto LABEL_41;
      }
      else
      {
        v22 = v6 - 8;
        v23 = v21 != v6 || v20 >= v6;
        v6 -= 8;
        if (!v23)
          goto LABEL_41;
      }
      *(_QWORD *)v20 = *(_QWORD *)v22;
LABEL_41:
      v20 -= 8;
      if (v6 <= v7 || v12 <= (unint64_t)v4)
        goto LABEL_45;
    }
  }
  sub_1C09D2098(a1, (a2 - a1) / 8, a4);
  v12 = (unint64_t)&v4[8 * v9];
  if ((unint64_t)v6 < a3 && v8 >= 8)
  {
    do
    {
      if (*((float *)v6 + 1) >= *((float *)v4 + 1))
      {
        v14 = v7 == v4;
        v15 = v4;
        v4 += 8;
        if (v14 && v7 < v4)
          goto LABEL_18;
      }
      else
      {
        v14 = v7 == v6;
        v15 = v6;
        v6 += 8;
        if (v14 && v7 < v6)
          goto LABEL_18;
      }
      *(_QWORD *)v7 = *(_QWORD *)v15;
LABEL_18:
      v7 += 8;
    }
    while ((unint64_t)v4 < v12 && (unint64_t)v6 < a3);
  }
  v6 = v7;
LABEL_45:
  sub_1C09D2098(v4, (uint64_t)(v12 - (_QWORD)v4) / 8, v6);
  return 1;
}

char *sub_1C0861AD0(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    sub_1C07ACF80(&qword_1ED752E78);
    v10 = (char *)swift_allocObject();
    v11 = j__malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 16);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v10 != a4 || &v13[16 * v8] <= v12)
      memmove(v12, v13, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v12, v13, 16 * v8);
  }
  sub_1C07767AC();
  return v10;
}

char *sub_1C0861BC0()
{
  char *v0;
  int64_t v1;
  char v2;
  char *v3;

  v0 = (char *)sub_1C0790EAC();
  return sub_1C0861AD0(v0, v1, v2, v3);
}

uint64_t sub_1C0861BD4@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;

  v2 = -1;
  v3 = -1 << *(_BYTE *)(a1 + 32);
  *a2 = a1;
  v6 = *(_QWORD *)(a1 + 64);
  result = a1 + 64;
  v5 = v6;
  if (-v3 < 64)
    v2 = ~(-1 << -(char)v3);
  a2[1] = result;
  a2[2] = ~v3;
  a2[3] = 0;
  a2[4] = v2 & v5;
  return result;
}

void sub_1C0861C0C()
{
  sub_1C0790EAC();
  sub_1C09D50A8();
}

void sub_1C0861C1C()
{
  sub_1C0790EAC();
  sub_1C09D5194();
}

void sub_1C0861C2C()
{
  sub_1C0790EAC();
  JUMPOUT(0x1C3BA74FCLL);
}

void sub_1C0861C3C()
{
  sub_1C0790EAC();
  sub_1C09D529C();
}

void sub_1C0861C4C()
{
  sub_1C0790EAC();
  sub_1C09D5414();
}

void sub_1C0861C5C()
{
  sub_1C09D54D0();
}

void sub_1C0861C70()
{
  sub_1C0790EAC();
  sub_1C09D5654();
}

void sub_1C0861C80()
{
  sub_1C0790EAC();
  sub_1C09D5758();
}

void sub_1C0861C90()
{
  sub_1C0790EAC();
  sub_1C09D5358();
}

void sub_1C0861CA0()
{
  sub_1C0790EAC();
  sub_1C09D5828();
}

void sub_1C0861CB0()
{
  sub_1C0790EAC();
  sub_1C09D59CC();
}

void sub_1C0861CC0()
{
  sub_1C0790EAC();
  sub_1C09D5BD0();
}

void sub_1C0861CD0()
{
  sub_1C0790EAC();
  sub_1C09D5BEC();
}

void sub_1C0861CE0()
{
  sub_1C0790EAC();
  sub_1C09D5D30();
}

void sub_1C0861CF0()
{
  sub_1C0790EAC();
  sub_1C09D51B0();
}

void sub_1C0861D00()
{
  sub_1C0790EAC();
  sub_1C09D5638();
}

void sub_1C0861D10()
{
  sub_1C0790EAC();
  sub_1C09D557C();
}

void sub_1C0861D20()
{
  sub_1C0790EAC();
  sub_1C09D5B1C();
}

void sub_1C0861D30()
{
  sub_1C0790EAC();
  sub_1C09D5774();
}

void sub_1C0861D40()
{
  sub_1C0790EAC();
  sub_1C09D5D4C();
}

void sub_1C0861D50()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  void (*v16)(char *);
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  _QWORD v23[5];

  sub_1C0779670();
  v1 = v0;
  v3 = v2;
  v5 = v4;
  v7 = v6;
  v9 = v8;
  v11 = v10;
  v12 = sub_1C0837FAC();
  v23[3] = v12;
  v23[4] = &off_1E7A0D840;
  v23[0] = v7;
  sub_1C0862FC8((uint64_t)v23);
  sub_1C0792D70();
  MEMORY[0x1E0C80A78](v13);
  v15 = sub_1C07863B0(v14, v22);
  v16(v15);
  v17 = *v7;
  v18 = (_QWORD *)(v1 + OBJC_IVAR____TtC24IntelligencePlatformCore32CategoricalBehaviorHistogramBase_behaviorKeySource);
  v18[3] = v12;
  v18[4] = &off_1E7A0D840;
  *v18 = v17;
  sub_1C0862330(v11, v1 + OBJC_IVAR____TtC24IntelligencePlatformCore32CategoricalBehaviorHistogramBase_state);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC24IntelligencePlatformCore32CategoricalBehaviorHistogramBase_categoryMap) = v9;
  v19 = sub_1C0780478();
  v20 = sub_1C07B61CC(v19);
  sub_1C077EE40(v20, v1 + OBJC_IVAR____TtC24IntelligencePlatformCore32CategoricalBehaviorHistogramBase_eventSource);
  v21 = (_QWORD *)(v1 + OBJC_IVAR____TtC24IntelligencePlatformCore32CategoricalBehaviorHistogramBase_timeSource);
  *v21 = v5;
  v21[1] = v3;
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v23);
  sub_1C0862FB0();
  sub_1C0776760();
}

uint64_t sub_1C0861E4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE v21[40];
  _BYTE v22[40];
  _QWORD v23[5];

  v10 = sub_1C106D6CC();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = &v21[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v14 = type metadata accessor for DecayingHistogramState();
  MEMORY[0x1E0C80A78](v14);
  v16 = &v21[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v23[3] = type metadata accessor for BehaviorDatabaseHistogramKeyProvider(0);
  v23[4] = &off_1E7A0D840;
  v23[0] = a3;
  sub_1C080ABC4(a1, (uint64_t)v16, (uint64_t (*)(_QWORD))type metadata accessor for DecayingHistogramState);
  v17 = sub_1C106F97C();
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v11 + 16))(v13, a2, v10);
  sub_1C0784AC0((uint64_t)v23, (uint64_t)v22);
  sub_1C0784AC0(a4, (uint64_t)v21);
  v18 = (*(uint64_t (**)(_BYTE *, uint64_t, _BYTE *, _BYTE *, _BYTE *, uint64_t (*)(), _QWORD))(a5 + 200))(v16, v17, v13, v22, v21, sub_1C07D4004, 0);
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0(a4);
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v23);
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(a2, v10);
  sub_1C07B1F90(a1, (uint64_t (*)(_QWORD))type metadata accessor for DecayingHistogramState);
  return v18;
}

void sub_1C0861FEC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  void (*v14)(char *);
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  _QWORD v21[5];

  sub_1C0779670();
  v1 = v0;
  v3 = v2;
  v5 = v4;
  v7 = v6;
  v9 = v8;
  v10 = sub_1C0837FAC();
  v21[3] = v10;
  v21[4] = &off_1E7A0D840;
  v21[0] = v7;
  sub_1C07A2FE4((uint64_t)v21);
  sub_1C0792D70();
  MEMORY[0x1E0C80A78](v11);
  v13 = sub_1C07863B0(v12, v20);
  v14(v13);
  v15 = *v7;
  v16 = (_QWORD *)(v1 + OBJC_IVAR____TtC24IntelligencePlatformCore21BehaviorHistogramBase_behaviorKeySource);
  v16[3] = v10;
  v16[4] = &off_1E7A0D840;
  *v16 = v15;
  sub_1C0862330(v9, v1 + OBJC_IVAR____TtC24IntelligencePlatformCore21BehaviorHistogramBase_state);
  v17 = sub_1C0780478();
  v18 = sub_1C07B61CC(v17);
  sub_1C077EE40(v18, v1 + OBJC_IVAR____TtC24IntelligencePlatformCore21BehaviorHistogramBase_eventSource);
  v19 = (_QWORD *)(v1 + OBJC_IVAR____TtC24IntelligencePlatformCore21BehaviorHistogramBase_timeSource);
  *v19 = v5;
  v19[1] = v3;
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v21);
  sub_1C0862FB0();
  sub_1C0776760();
}

uint64_t sub_1C08620D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  _BYTE v20[40];
  _BYTE v21[40];
  _QWORD v22[5];

  v10 = sub_1C106D6CC();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = &v20[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v14 = type metadata accessor for DecayingHistogramState();
  MEMORY[0x1E0C80A78](v14);
  v16 = &v20[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v22[3] = type metadata accessor for BehaviorDatabaseHistogramKeyProvider(0);
  v22[4] = &off_1E7A0D840;
  v22[0] = a3;
  sub_1C080ABC4(a1, (uint64_t)v16, (uint64_t (*)(_QWORD))type metadata accessor for DecayingHistogramState);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v11 + 16))(v13, a2, v10);
  sub_1C0784AC0((uint64_t)v22, (uint64_t)v21);
  sub_1C0784AC0(a4, (uint64_t)v20);
  v17 = (*(uint64_t (**)(_BYTE *, _BYTE *, _BYTE *, _BYTE *, uint64_t (*)(), _QWORD))(a5 + 168))(v16, v13, v21, v20, sub_1C07D4004, 0);
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0(a4);
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v22);
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(a2, v10);
  sub_1C07B1F90(a1, (uint64_t (*)(_QWORD))type metadata accessor for DecayingHistogramState);
  return v17;
}

unint64_t sub_1C086224C()
{
  unint64_t result;

  result = qword_1EF6322A8;
  if (!qword_1EF6322A8)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C1087F7C, &type metadata for HistogramError);
    atomic_store(result, &qword_1EF6322A8);
  }
  return result;
}

uint64_t type metadata accessor for CategoricalBehaviorHistogramBase.Snapshot(uint64_t a1)
{
  return sub_1C0784B00(a1, qword_1ED758448);
}

uint64_t sub_1C086229C(uint64_t a1)
{
  swift_release();
  return a1;
}

uint64_t sub_1C08622C4()
{
  return sub_1C08622D8();
}

uint64_t sub_1C08622D8()
{
  return sub_1C106AD2C();
}

uint64_t sub_1C0862314(uint64_t *a1)
{
  uint64_t v1;

  return sub_1C085F1DC(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_1C0862330(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for DecayingHistogramState();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void **sub_1C0862374(void **a1, void **a2, uint64_t a3)
{
  int v3;
  char *v4;
  void **v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;

  v3 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v4 = (char *)*a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v7 = (void **)&v4[(v3 + 16) & ~(unint64_t)v3];
    swift_retain();
  }
  else
  {
    v7 = a1;
    v8 = *(int *)(type metadata accessor for DecayingHistogramState() + 20);
    v9 = (char *)v7 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_1C106ADE0();
    v12 = v4;
    if (sub_1C07B2D80((uint64_t)v10, 1, v11))
    {
      v13 = sub_1C07ACF80((uint64_t *)&unk_1ED762690);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
      sub_1C07B2D8C((uint64_t)v9, 0, 1, v11);
    }
    *(void **)((char *)v7 + *(int *)(a3 + 20)) = *(void **)((char *)a2 + *(int *)(a3 + 20));
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  }
  return v7;
}

uint64_t sub_1C086247C(id *a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = (uint64_t)a1 + *(int *)(type metadata accessor for DecayingHistogramState() + 20);
  v3 = sub_1C106ADE0();
  if (!sub_1C07B2D80(v2, 1, v3))
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
  return swift_bridgeObjectRelease();
}

void **sub_1C08624F8(void **a1, void **a2, uint64_t a3)
{
  void *v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  id v11;
  uint64_t v12;

  v6 = *a2;
  *a1 = *a2;
  v7 = *(int *)(type metadata accessor for DecayingHistogramState() + 20);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_1C106ADE0();
  v11 = v6;
  if (sub_1C07B2D80((uint64_t)v9, 1, v10))
  {
    v12 = sub_1C07ACF80((uint64_t *)&unk_1ED762690);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
    sub_1C07B2D8C((uint64_t)v8, 0, 1, v10);
  }
  *(void **)((char *)a1 + *(int *)(a3 + 20)) = *(void **)((char *)a2 + *(int *)(a3 + 20));
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  return a1;
}

void **sub_1C08625D8(void **a1, void **a2, uint64_t a3)
{
  void *v6;
  void *v7;
  id v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  int v13;
  int v14;
  uint64_t v15;
  uint64_t v16;

  v6 = *a2;
  v7 = *a1;
  *a1 = *a2;
  v8 = v6;

  v9 = *(int *)(type metadata accessor for DecayingHistogramState() + 20);
  v10 = (char *)a1 + v9;
  v11 = (char *)a2 + v9;
  v12 = sub_1C106ADE0();
  v13 = sub_1C07B2D80((uint64_t)v10, 1, v12);
  v14 = sub_1C07B2D80((uint64_t)v11, 1, v12);
  if (!v13)
  {
    v15 = *(_QWORD *)(v12 - 8);
    if (!v14)
    {
      (*(void (**)(char *, char *, uint64_t))(v15 + 24))(v10, v11, v12);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v15 + 8))(v10, v12);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    v16 = sub_1C07ACF80((uint64_t *)&unk_1ED762690);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v10, v11, v12);
  sub_1C07B2D8C((uint64_t)v10, 0, 1, v12);
LABEL_7:
  *(void **)((char *)a1 + *(int *)(a3 + 20)) = *(void **)((char *)a2 + *(int *)(a3 + 20));
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *sub_1C0862714(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;

  *a1 = *a2;
  v6 = *(int *)(type metadata accessor for DecayingHistogramState() + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1C106ADE0();
  if (sub_1C07B2D80((uint64_t)v8, 1, v9))
  {
    v10 = sub_1C07ACF80((uint64_t *)&unk_1ED762690);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
    sub_1C07B2D8C((uint64_t)v7, 0, 1, v9);
  }
  *(_QWORD *)((char *)a1 + *(int *)(a3 + 20)) = *(_QWORD *)((char *)a2 + *(int *)(a3 + 20));
  return a1;
}

void **sub_1C08627E4(void **a1, void **a2, uint64_t a3)
{
  void *v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  int v11;
  int v12;
  uint64_t v13;
  uint64_t v14;

  v6 = *a1;
  *a1 = *a2;

  v7 = *(int *)(type metadata accessor for DecayingHistogramState() + 20);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_1C106ADE0();
  v11 = sub_1C07B2D80((uint64_t)v8, 1, v10);
  v12 = sub_1C07B2D80((uint64_t)v9, 1, v10);
  if (!v11)
  {
    v13 = *(_QWORD *)(v10 - 8);
    if (!v12)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 40))(v8, v9, v10);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v13 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v12)
  {
LABEL_6:
    v14 = sub_1C07ACF80((uint64_t *)&unk_1ED762690);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  sub_1C07B2D8C((uint64_t)v8, 0, 1, v10);
LABEL_7:
  *(void **)((char *)a1 + *(int *)(a3 + 20)) = *(void **)((char *)a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1C0862914()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_1C0862920(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1C0782D0C();
  if (*(_DWORD *)(*(_QWORD *)(v4 - 8) + 84) == (_DWORD)a2)
    sub_1C07B2D80(a1, a2, v4);
  else
    sub_1C077671C();
}

uint64_t sub_1C086298C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1C0862998(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;

  result = sub_1C0782D0C();
  if (*(_DWORD *)(*(_QWORD *)(result - 8) + 84) == a3)
    return sub_1C077F00C(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  return result;
}

uint64_t sub_1C0862A00()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for DecayingHistogramState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void type metadata accessor for BehaviorHistogramDigestError()
{
  sub_1C0779604();
}

uint64_t sub_1C0862A88(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1C0862AC8 + 4 * byte_1C107CAD2[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1C0862AE8 + 4 * byte_1C107CAD7[v4]))();
}

_BYTE *sub_1C0862AC8(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1C0862AE8(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1C0862AF0(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1C0862AF8(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1C0862B00(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1C0862B08(_DWORD *result)
{
  *result = 0;
  return result;
}

void type metadata accessor for BehaviorHistogramKeyProvidingError()
{
  sub_1C0779604();
}

unint64_t sub_1C0862B24()
{
  unint64_t result;

  result = qword_1EF6322C0;
  if (!qword_1EF6322C0)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C107D334, &unk_1E7A0F7B8);
    atomic_store(result, (unint64_t *)&qword_1EF6322C0);
  }
  return result;
}

unint64_t sub_1C0862B64()
{
  unint64_t result;

  result = qword_1EF6322C8;
  if (!qword_1EF6322C8)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C107D39C, &unk_1E7A0F728);
    atomic_store(result, (unint64_t *)&qword_1EF6322C8);
  }
  return result;
}

unint64_t sub_1C0862BA0()
{
  unint64_t result;

  result = qword_1ED758420;
  if (!qword_1ED758420)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C107D558, &type metadata for CategoricalBehaviorHistogramBase.Snapshot.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED758420);
  }
  return result;
}

void sub_1C0862BDC(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  _QWORD v9[2];

  if (!*a1)
  {
    v8 = sub_1C07D4BEC(&qword_1ED758CA8);
    v9[0] = a2;
    v9[1] = a3;
    atomic_store(MEMORY[0x1C3BA8174](a4, v8, v9), a1);
  }
  sub_1C0776784();
}

uint64_t _s24IntelligencePlatformCore32CategoricalBehaviorHistogramBaseC8SnapshotV10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1C0862C80 + 4 * byte_1C107CAE1[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1C0862CB4 + 4 * byte_1C107CADC[v4]))();
}

uint64_t sub_1C0862CB4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C0862CBC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C0862CC4);
  return result;
}

uint64_t sub_1C0862CD0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C0862CD8);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1C0862CDC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C0862CE4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CategoricalBehaviorHistogramBase.Snapshot.CodingKeys()
{
  return &type metadata for CategoricalBehaviorHistogramBase.Snapshot.CodingKeys;
}

unint64_t sub_1C0862D04()
{
  unint64_t result;

  result = qword_1EF6322D0;
  if (!qword_1EF6322D0)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C107D530, &type metadata for CategoricalBehaviorHistogramBase.Snapshot.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF6322D0);
  }
  return result;
}

unint64_t sub_1C0862D44()
{
  unint64_t result;

  result = qword_1ED758430;
  if (!qword_1ED758430)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C107D4A0, &type metadata for CategoricalBehaviorHistogramBase.Snapshot.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED758430);
  }
  return result;
}

unint64_t sub_1C0862D84()
{
  unint64_t result;

  result = qword_1ED758428;
  if (!qword_1ED758428)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C107D4C8, &type metadata for CategoricalBehaviorHistogramBase.Snapshot.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED758428);
  }
  return result;
}

uint64_t sub_1C0862DC0()
{
  return sub_1C0861058() & 1;
}

void sub_1C0862DE0()
{
  sub_1C08606D8();
}

void sub_1C0862DF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_1C085FD8C(a1, a2, a3, a4, a5, a6, a7, a8);
}

void sub_1C0862E08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_1C0860AC0(a1, a2, a3, a4, a5, a6, a7, a8);
}

void sub_1C0862E20(uint64_t *a1)
{
  sub_1C0860AF0(a1);
}

uint64_t sub_1C0862E38()
{
  return sub_1C085FD3C();
}

uint64_t sub_1C0862E4C()
{
  return sub_1C0860A70();
}

void sub_1C0862E70(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 208) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

void sub_1C0862E90()
{
  uint64_t (*v0)(_QWORD);
  uint64_t v1;

  sub_1C07B1F90(v1, v0);
}

uint64_t sub_1C0862EA8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 176) + 8))(v1, v0);
}

uint64_t sub_1C0862EBC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return sub_1C089FCC0(v2, v0, v1);
}

uint64_t sub_1C0862EDC()
{
  return swift_retain();
}

uint64_t sub_1C0862EEC()
{
  uint64_t (*v0)(uint64_t, uint64_t);
  uint64_t v1;
  uint64_t v2;

  return v0(v1, v2);
}

uint64_t sub_1C0862F24()
{
  return type metadata accessor for CategoricalBehaviorHistogramBase.Snapshot(0);
}

uint64_t sub_1C0862F2C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return sub_1C0806880(v1, v0 + *(int *)(v2 + 20));
}

uint64_t sub_1C0862F3C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8))(v2, v0);
}

float sub_1C0862F4C()
{
  return 1.0;
}

uint64_t sub_1C0862F5C()
{
  return swift_release();
}

void sub_1C0862F68()
{
  sub_1C07EBAB8();
}

uint64_t sub_1C0862F74(int64_t a1, uint64_t a2, _QWORD *a3)
{
  return sub_1C085A9D8(a1, 0, a3);
}

unint64_t sub_1C0862F7C()
{
  unsigned __int16 v0;

  return sub_1C07DCF3C(v0);
}

uint64_t sub_1C0862F88()
{
  return swift_isUniquelyReferenced_nonNull_native();
}

id sub_1C0862FA8()
{
  id *v0;

  return *v0;
}

uint64_t sub_1C0862FB0()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1C0862FBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return sub_1C07DFF44(a1, (uint64_t)&a9);
}

uint64_t sub_1C0862FC8(uint64_t a1)
{
  uint64_t v1;

  return sub_1C079D180(a1, v1);
}

uint64_t sub_1C0862FD0(int64_t a1, uint64_t a2, _QWORD *a3)
{
  return sub_1C085A9D8(a1, 1, a3);
}

void sub_1C0862FD8()
{
  sub_1C08554C0();
}

uint64_t sub_1C0862FF0()
{
  return swift_endAccess();
}

double sub_1C0862FF8(double a1, double a2)
{
  return exp2(a2 / a1);
}

uint64_t sub_1C0863014(uint64_t a1, uint64_t (*a2)(_QWORD *))
{
  uint64_t v2;
  uint64_t v3;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  _QWORD *v12;
  _QWORD v14[2];
  uint64_t v15;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = MEMORY[0x1E0DEE9D8];
  if (v2)
  {
    v15 = MEMORY[0x1E0DEE9D8];
    sub_1C09D37BC();
    v3 = v15;
    v6 = (uint64_t *)(a1 + 40);
    do
    {
      v7 = *v6;
      v14[0] = *(v6 - 1);
      v14[1] = v7;
      v8 = a2(v14);
      v10 = v9;
      v15 = v3;
      v11 = *(_QWORD *)(v3 + 16);
      if (v11 >= *(_QWORD *)(v3 + 24) >> 1)
      {
        sub_1C09D37BC();
        v3 = v15;
      }
      *(_QWORD *)(v3 + 16) = v11 + 1;
      v12 = (_QWORD *)(v3 + 24 * v11);
      v12[4] = v8;
      v12[5] = v10;
      v12[6] = v7;
      v6 += 2;
      --v2;
    }
    while (v2);
  }
  return v3;
}

uint64_t sub_1C0863120(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  __int128 v18;
  __int128 v19;
  uint64_t v20;
  _OWORD v21[2];
  uint64_t v22;
  char v23;
  _OWORD v24[2];
  uint64_t v25;
  char v26;

  sub_1C07DFF44(a3, (uint64_t)v21);
  v6 = *(_QWORD *)(a1 + 16);
  if (v6)
  {
    v7 = v23;
    v8 = v22;
    v18 = v21[0];
    v19 = v21[1];
    v20 = MEMORY[0x1E0DEE9D8];
    sub_1C09D37F0();
    v9 = v20;
    v10 = (uint64_t *)(a1 + 32);
    v24[0] = v18;
    v24[1] = v19;
    v25 = v8;
    v26 = v7;
    while (1)
    {
      v12 = *v10++;
      v11 = v12;
      sub_1C08384CC(a3, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1C0826EB0);
      sub_1C0850370(v24, v12, 0, 0x100000000);
      if (v3)
        break;
      v14 = v13;
      sub_1C08384CC(a3, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1C0826F50);
      v15 = *(_QWORD *)(v20 + 16);
      if (v15 >= *(_QWORD *)(v20 + 24) >> 1)
        sub_1C09D37F0();
      *(_QWORD *)(v20 + 16) = v15 + 1;
      v16 = v20 + 16 * v15;
      *(_QWORD *)(v16 + 32) = v11;
      *(_QWORD *)(v16 + 40) = v14;
      if (!--v6)
      {
        swift_release();
        goto LABEL_10;
      }
    }
    sub_1C08384CC(a3, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1C0826F50);
    swift_release();
    swift_release();
    sub_1C08384CC(a3, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1C0826F50);
  }
  else
  {
    swift_release();
    v9 = MEMORY[0x1E0DEE9D8];
LABEL_10:
    sub_1C08384CC(a3, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1C0826F50);
  }
  return v9;
}

uint64_t sub_1C08632F0(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(_OWORD *, uint64_t, uint64_t, uint64_t))
{
  uint64_t v4;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  _QWORD *v17;
  __int128 v19;
  __int128 v20;
  uint64_t v22;
  _OWORD v23[2];
  uint64_t v24;
  char v25;
  _OWORD v26[2];
  uint64_t v27;
  char v28;

  sub_1C07DFF44(a3, (uint64_t)v23);
  v7 = *(_QWORD *)(a1 + 16);
  if (v7)
  {
    v8 = v25;
    v9 = v24;
    v19 = v23[0];
    v20 = v23[1];
    v22 = MEMORY[0x1E0DEE9D8];
    sub_1C09D37BC();
    v10 = v22;
    v11 = (uint64_t *)(a1 + 40);
    v26[0] = v19;
    v26[1] = v20;
    v27 = v9;
    v28 = v8;
    while (1)
    {
      v12 = *(v11 - 1);
      v13 = *v11;
      swift_bridgeObjectRetain_n();
      sub_1C08384CC(a3, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1C0826EB0);
      a4(v26, v12, v13, 0x100000000);
      if (v4)
        break;
      v15 = v14;
      sub_1C08384CC(a3, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1C0826F50);
      sub_1C077E584();
      v16 = *(_QWORD *)(v22 + 16);
      if (v16 >= *(_QWORD *)(v22 + 24) >> 1)
        sub_1C09D37BC();
      v11 += 2;
      *(_QWORD *)(v22 + 16) = v16 + 1;
      v17 = (_QWORD *)(v22 + 24 * v16);
      v17[4] = v12;
      v17[5] = v13;
      v17[6] = v15;
      if (!--v7)
      {
        swift_release();
        goto LABEL_10;
      }
    }
    sub_1C07ADB50(a3);
    sub_1C07785A8();
    sub_1C0780A00();
    swift_bridgeObjectRelease_n();
    sub_1C07ADB50(a3);
  }
  else
  {
    swift_release();
    v10 = MEMORY[0x1E0DEE9D8];
LABEL_10:
    sub_1C08384CC(a3, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1C0826F50);
  }
  return v10;
}

void sub_1C08634E8(uint64_t a1, uint64_t (*a2)(_BYTE *, uint64_t), uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t))
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  int v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v22;
  int v23;
  uint64_t v24;
  _BYTE v25[48];
  uint64_t v26;

  v5 = *(_QWORD *)(a1 + 16);
  if (v5)
  {
    v26 = MEMORY[0x1E0DEE9D8];
    sub_1C09D3788();
    v8 = v26;
    v9 = a5(a1);
    if ((v9 & 0x8000000000000000) == 0)
    {
      v11 = v9;
      if (v9 < 1 << *(_BYTE *)(a1 + 32))
      {
        v12 = a1 + 64;
        while ((*(_QWORD *)(v12 + 8 * (v11 >> 6)) & (1 << v11)) != 0)
        {
          if (v10 != *(_DWORD *)(a1 + 36))
            goto LABEL_18;
          v22 = v5;
          v23 = v10;
          sub_1C07DFF44(*(_QWORD *)(a1 + 48) + 48 * v11, (uint64_t)v25);
          v13 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8 * v11);
          sub_1C08384CC((uint64_t)v25, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1C0826EB0);
          _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
          v24 = a2(v25, v13);
          v15 = v14;
          v17 = v16;
          sub_1C08384CC((uint64_t)v25, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1C0826F50);
          sub_1C0775894();
          v26 = v8;
          v18 = *(_QWORD *)(v8 + 16);
          if (v18 >= *(_QWORD *)(v8 + 24) >> 1)
          {
            sub_1C09D3788();
            v8 = v26;
          }
          *(_QWORD *)(v8 + 16) = v18 + 1;
          v19 = (_QWORD *)(v8 + 24 * v18);
          v19[4] = v24;
          v19[5] = v15;
          v19[6] = v17;
          if ((uint64_t)v11 >= -(-1 << *(_BYTE *)(a1 + 32)))
            goto LABEL_19;
          v12 = a1 + 64;
          if ((*(_QWORD *)(a1 + 64 + 8 * (v11 >> 6)) & (1 << v11)) == 0)
            goto LABEL_20;
          if (v23 != *(_DWORD *)(a1 + 36))
            goto LABEL_21;
          v20 = sub_1C1070678();
          v5 = v22 - 1;
          if (v22 == 1)
            return;
          v11 = v20;
          if ((v20 & 0x8000000000000000) == 0)
          {
            v10 = *(_DWORD *)(a1 + 36);
            if (v20 < 1 << *(_BYTE *)(a1 + 32))
              continue;
          }
          goto LABEL_22;
        }
        __break(1u);
LABEL_18:
        __break(1u);
LABEL_19:
        __break(1u);
LABEL_20:
        __break(1u);
LABEL_21:
        __break(1u);
      }
    }
LABEL_22:
    __break(1u);
  }
}

uint64_t sub_1C086370C(uint64_t a1, uint64_t (*a2)(_QWORD *))
{
  uint64_t v2;
  uint64_t v3;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  _QWORD *v13;
  _QWORD v15[3];
  uint64_t v16;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = MEMORY[0x1E0DEE9D8];
  if (v2)
  {
    v16 = MEMORY[0x1E0DEE9D8];
    sub_1C09D37BC();
    v3 = v16;
    v6 = (uint64_t *)(a1 + 48);
    do
    {
      v7 = *(v6 - 1);
      v8 = *v6;
      v15[0] = *(v6 - 2);
      v15[1] = v7;
      v15[2] = v8;
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      v9 = a2(v15);
      v11 = v10;
      swift_bridgeObjectRelease();
      v16 = v3;
      v12 = *(_QWORD *)(v3 + 16);
      if (v12 >= *(_QWORD *)(v3 + 24) >> 1)
      {
        sub_1C09D37BC();
        v3 = v16;
      }
      *(_QWORD *)(v3 + 16) = v12 + 1;
      v13 = (_QWORD *)(v3 + 24 * v12);
      v13[4] = v9;
      v13[5] = v11;
      v13[6] = v8;
      v6 += 3;
      --v2;
    }
    while (v2);
  }
  return v3;
}

uint64_t (*sub_1C0863828(uint64_t a1, uint64_t a2, uint64_t a3))(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  void (*v19)(_BYTE *, uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _BYTE *v23;
  uint64_t (*v24)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, char);
  unint64_t v25;
  _BYTE v27[12];
  int v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(_QWORD, _QWORD, _QWORD);
  uint64_t v32;
  uint64_t v33;
  _BYTE *v34;
  uint64_t v35;
  uint64_t v36;
  _BYTE *v37;
  char v38;
  uint64_t (*v39)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, char);
  _QWORD v40[5];
  unsigned __int8 v41;
  uint64_t v42;
  uint64_t v43;
  void (*v44)(_QWORD, _QWORD, _QWORD);
  uint64_t v45;
  uint64_t v46;
  char v47;

  v36 = a3;
  sub_1C07DFF44(a3, (uint64_t)v40);
  v7 = v40[0];
  v6 = v40[1];
  v31 = (void (*)(_QWORD, _QWORD, _QWORD))v40[2];
  v30 = v40[3];
  v29 = v40[4];
  v28 = v41;
  v8 = sub_1C07ACF80(&qword_1ED762CE0);
  MEMORY[0x1E0C80A78](v8);
  v10 = &v27[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v11 = sub_1C106AE28();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v34 = &v27[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v14 = sub_1C07ACF80(&qword_1EF632410);
  v32 = *(_QWORD *)(v14 - 8);
  v33 = v14;
  MEMORY[0x1E0C80A78](v14);
  v37 = &v27[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v16 = *(_QWORD *)(a1 + 16);
  if (v16)
  {
    v35 = a2;
    v39 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, char))MEMORY[0x1E0DEE9D8];
    sub_1C09D3824();
    v17 = a1 + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80));
    v42 = v7;
    v43 = v6;
    v44 = v31;
    v45 = v30;
    v46 = v29;
    v47 = v28;
    v29 = *(_QWORD *)(v12 + 72);
    v31 = *(void (**)(_QWORD, _QWORD, _QWORD))(v12 + 16);
    v30 = v12;
    v18 = v34;
    while (1)
    {
      v19 = (void (*)(_BYTE *, uint64_t, uint64_t))v31;
      v31(v18, v17, v11);
      v19(v10, v17, v11);
      sub_1C07B2D8C((uint64_t)v10, 0, 1, v11);
      v20 = v36;
      sub_1C08384CC(v36, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1C0826EB0);
      v38 = 1;
      sub_1C08507CC();
      if (v3)
        break;
      v22 = v21;
      sub_1C0784B94((uint64_t)v10, &qword_1ED762CE0);
      sub_1C08384CC(v20, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1C0826F50);
      v23 = v37;
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v12 + 32))(v37, v18, v11);
      *(_QWORD *)&v23[*(int *)(v33 + 28)] = v22;
      v24 = v39;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1C09D3824();
        v24 = v39;
      }
      v25 = *((_QWORD *)v24 + 2);
      if (v25 >= *((_QWORD *)v24 + 3) >> 1)
      {
        sub_1C09D3824();
        v24 = v39;
      }
      *((_QWORD *)v24 + 2) = v25 + 1;
      sub_1C08273C8((uint64_t)v37, (uint64_t)v24+ ((*(unsigned __int8 *)(v32 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v32 + 80))+ *(_QWORD *)(v32 + 72) * v25, &qword_1EF632410);
      v17 += v29;
      --v16;
      v12 = v30;
      if (!v16)
      {
        swift_release();
        goto LABEL_12;
      }
    }
    sub_1C0784B94((uint64_t)v10, &qword_1ED762CE0);
    v24 = sub_1C0826F50;
    sub_1C08384CC(v20, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1C0826F50);
    (*(void (**)(_BYTE *, uint64_t))(v12 + 8))(v18, v11);
    swift_release();
    swift_release();
    sub_1C08384CC(v20, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1C0826F50);
  }
  else
  {
    swift_release();
    v24 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, char))MEMORY[0x1E0DEE9D8];
LABEL_12:
    sub_1C08384CC(v36, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1C0826F50);
  }
  return v24;
}

uint64_t sub_1C0863BF0(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(_OWORD *, uint64_t, _QWORD, uint64_t))
{
  uint64_t v4;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  __int128 v19;
  __int128 v20;
  uint64_t v22;
  _OWORD v23[2];
  uint64_t v24;
  char v25;
  _OWORD v26[2];
  uint64_t v27;
  char v28;

  sub_1C07DFF44(a3, (uint64_t)v23);
  v7 = *(_QWORD *)(a1 + 16);
  if (v7)
  {
    v8 = v25;
    v9 = v24;
    v19 = v23[0];
    v20 = v23[1];
    v22 = MEMORY[0x1E0DEE9D8];
    sub_1C09D3858();
    v10 = v22;
    v11 = (uint64_t *)(a1 + 32);
    v26[0] = v19;
    v26[1] = v20;
    v27 = v9;
    v28 = v8;
    while (1)
    {
      v13 = *v11++;
      v12 = v13;
      sub_1C08384CC(a3, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1C0826EB0);
      a4(v26, v13, 0, 0x100000000);
      if (v4)
        break;
      v15 = v14;
      sub_1C08384CC(a3, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1C0826F50);
      v16 = *(_QWORD *)(v22 + 16);
      if (v16 >= *(_QWORD *)(v22 + 24) >> 1)
        sub_1C09D3858();
      *(_QWORD *)(v22 + 16) = v16 + 1;
      v17 = v22 + 16 * v16;
      *(_QWORD *)(v17 + 32) = v12;
      *(_QWORD *)(v17 + 40) = v15;
      if (!--v7)
      {
        swift_release();
        goto LABEL_10;
      }
    }
    sub_1C07ADB50(a3);
    sub_1C07785A8();
    sub_1C0780A00();
    sub_1C07ADB50(a3);
  }
  else
  {
    sub_1C07785A8();
    v10 = MEMORY[0x1E0DEE9D8];
LABEL_10:
    sub_1C08384CC(a3, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1C0826F50);
  }
  return v10;
}

uint64_t sub_1C0863DB0(uint64_t a1, uint64_t (*a2)(_QWORD *))
{
  uint64_t v3;
  uint64_t result;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  uint64_t v18;
  uint64_t v19;
  _QWORD v20[5];
  char v21;
  uint64_t v22;
  uint64_t v23;

  v3 = *(_QWORD *)(a1 + 16);
  result = MEMORY[0x1E0DEE9D8];
  if (v3)
  {
    v23 = MEMORY[0x1E0DEE9D8];
    sub_1C09D37BC();
    result = v23;
    v5 = (_QWORD *)(a1 + 80);
    do
    {
      v7 = *(v5 - 6);
      v6 = *(v5 - 5);
      v8 = *(v5 - 4);
      v9 = *(v5 - 3);
      v10 = *(v5 - 2);
      v11 = *v5;
      v12 = *((_BYTE *)v5 - 8);
      v19 = result;
      v20[0] = v7;
      v20[1] = v6;
      v20[2] = v8;
      v20[3] = v9;
      v20[4] = v10;
      v21 = v12;
      v22 = v11;
      sub_1C0826EB0(v7, v6, v8, v9, v10, v12);
      v13 = a2(v20);
      v18 = v14;
      sub_1C0826F50(v7, v6, v8, v9, v10, v12);
      result = v19;
      v23 = v19;
      v15 = *(_QWORD *)(v19 + 16);
      if (v15 >= *(_QWORD *)(v19 + 24) >> 1)
      {
        sub_1C09D37BC();
        result = v23;
      }
      *(_QWORD *)(result + 16) = v15 + 1;
      v16 = (_QWORD *)(result + 24 * v15);
      v16[4] = v13;
      v16[5] = v18;
      v16[6] = v11;
      v5 += 7;
      --v3;
    }
    while (v3);
  }
  return result;
}

void sub_1C0863F14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  uint64_t v28;
  _OWORD v29[2];
  uint64_t v30;
  char v31;
  _OWORD v32[2];
  uint64_t v33;
  char v34;
  uint64_t v35[5];
  char v36;

  v4 = v3;
  v5 = a3;
  sub_1C07DFF44(a3, (uint64_t)v29);
  v7 = *(_QWORD *)(a1 + 16);
  if (v7)
  {
    v8 = v31;
    v9 = v30;
    v27 = v29[1];
    v24 = v29[0];
    v28 = MEMORY[0x1E0DEE9D8];
    v23 = v5;
    sub_1C09D388C();
    v26 = v28;
    v10 = a1 + 40;
    v32[0] = v24;
    v32[1] = v27;
    v33 = v9;
    v34 = v8;
    while (1)
    {
      v25 = v7;
      v11 = *(_QWORD *)v10;
      v14 = *(_QWORD *)(v10 + 8);
      v13 = *(_QWORD *)(v10 + 16);
      v15 = *(_QWORD *)(v10 + 24);
      v16 = *(_BYTE *)(v10 + 32);
      v35[0] = *(_QWORD *)(v10 - 8);
      v12 = v35[0];
      v35[1] = v11;
      v35[2] = v14;
      v35[3] = v13;
      v35[4] = v15;
      v36 = v16;
      sub_1C0826EB0(v35[0], v11, v14, v13, v15, v16);
      sub_1C0826EB0(v12, v11, v14, v13, v15, v16);
      sub_1C08384CC(v5, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1C0826EB0);
      sub_1C084FF14((uint64_t)v32, (uint64_t)v35, 0x100000000);
      if (v4)
        break;
      v18 = v17;
      sub_1C08384CC(v5, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1C0826F50);
      sub_1C0826F50(v12, v11, v14, v13, v15, v16);
      v19 = v26;
      v20 = *(_QWORD *)(v26 + 16);
      v21 = v20 + 1;
      if (v20 >= *(_QWORD *)(v26 + 24) >> 1)
      {
        sub_1C09D388C();
        v21 = v20 + 1;
        v5 = v23;
        v19 = v26;
      }
      v10 += 48;
      *(_QWORD *)(v19 + 16) = v21;
      v26 = v19;
      v22 = v19 + 56 * v20;
      *(_QWORD *)(v22 + 32) = v12;
      *(_QWORD *)(v22 + 40) = v11;
      *(_QWORD *)(v22 + 48) = v14;
      *(_QWORD *)(v22 + 56) = v13;
      *(_QWORD *)(v22 + 64) = v15;
      *(_BYTE *)(v22 + 72) = v16;
      *(_QWORD *)(v22 + 80) = v18;
      v4 = 0;
      v7 = v25 - 1;
      if (v25 == 1)
        goto LABEL_7;
    }
    sub_1C08384CC(v5, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1C0826F50);
    sub_1C0826F50(v12, v11, v14, v13, v15, v16);
    sub_1C0826F50(v12, v11, v14, v13, v15, v16);
    swift_release();
    swift_release();
    sub_1C08384CC(v5, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1C0826F50);
  }
  else
  {
LABEL_7:
    swift_release();
    sub_1C08384CC(v5, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1C0826F50);
  }
}

uint64_t (*sub_1C08641EC(uint64_t a1, uint64_t a2, uint64_t a3))(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  void (*v19)(_BYTE *, uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _BYTE *v23;
  uint64_t (*v24)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, char);
  unint64_t v25;
  _BYTE v27[12];
  int v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(_QWORD, _QWORD, _QWORD);
  uint64_t v32;
  uint64_t v33;
  _BYTE *v34;
  uint64_t v35;
  uint64_t v36;
  _BYTE *v37;
  char v38;
  uint64_t (*v39)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, char);
  _QWORD v40[5];
  unsigned __int8 v41;
  uint64_t v42;
  uint64_t v43;
  void (*v44)(_QWORD, _QWORD, _QWORD);
  uint64_t v45;
  uint64_t v46;
  char v47;

  v36 = a3;
  sub_1C07DFF44(a3, (uint64_t)v40);
  v7 = v40[0];
  v6 = v40[1];
  v31 = (void (*)(_QWORD, _QWORD, _QWORD))v40[2];
  v30 = v40[3];
  v29 = v40[4];
  v28 = v41;
  v8 = sub_1C07ACF80((uint64_t *)&unk_1ED762690);
  MEMORY[0x1E0C80A78](v8);
  v10 = &v27[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v11 = sub_1C106ADE0();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v34 = &v27[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v14 = sub_1C07ACF80(&qword_1EF6323F8);
  v32 = *(_QWORD *)(v14 - 8);
  v33 = v14;
  MEMORY[0x1E0C80A78](v14);
  v37 = &v27[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v16 = *(_QWORD *)(a1 + 16);
  if (v16)
  {
    v35 = a2;
    v39 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, char))MEMORY[0x1E0DEE9D8];
    sub_1C09D38C0();
    v17 = a1 + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80));
    v42 = v7;
    v43 = v6;
    v44 = v31;
    v45 = v30;
    v46 = v29;
    v47 = v28;
    v29 = *(_QWORD *)(v12 + 72);
    v31 = *(void (**)(_QWORD, _QWORD, _QWORD))(v12 + 16);
    v30 = v12;
    v18 = v34;
    while (1)
    {
      v19 = (void (*)(_BYTE *, uint64_t, uint64_t))v31;
      v31(v18, v17, v11);
      v19(v10, v17, v11);
      sub_1C07B2D8C((uint64_t)v10, 0, 1, v11);
      v20 = v36;
      sub_1C08384CC(v36, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1C0826EB0);
      v38 = 1;
      sub_1C085118C();
      if (v3)
        break;
      v22 = v21;
      sub_1C0784B94((uint64_t)v10, (uint64_t *)&unk_1ED762690);
      sub_1C08384CC(v20, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1C0826F50);
      v23 = v37;
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v12 + 32))(v37, v18, v11);
      *(_QWORD *)&v23[*(int *)(v33 + 28)] = v22;
      v24 = v39;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1C09D38C0();
        v24 = v39;
      }
      v25 = *((_QWORD *)v24 + 2);
      if (v25 >= *((_QWORD *)v24 + 3) >> 1)
      {
        sub_1C09D38C0();
        v24 = v39;
      }
      *((_QWORD *)v24 + 2) = v25 + 1;
      sub_1C08273C8((uint64_t)v37, (uint64_t)v24+ ((*(unsigned __int8 *)(v32 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v32 + 80))+ *(_QWORD *)(v32 + 72) * v25, &qword_1EF6323F8);
      v17 += v29;
      --v16;
      v12 = v30;
      if (!v16)
      {
        swift_release();
        goto LABEL_12;
      }
    }
    sub_1C0784B94((uint64_t)v10, (uint64_t *)&unk_1ED762690);
    v24 = sub_1C0826F50;
    sub_1C08384CC(v20, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1C0826F50);
    (*(void (**)(_BYTE *, uint64_t))(v12 + 8))(v18, v11);
    swift_release();
    swift_release();
    sub_1C08384CC(v20, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1C0826F50);
  }
  else
  {
    swift_release();
    v24 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, char))MEMORY[0x1E0DEE9D8];
LABEL_12:
    sub_1C08384CC(v36, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1C0826F50);
  }
  return v24;
}

uint64_t (*sub_1C08645B4(uint64_t a1, uint64_t a2, uint64_t a3))(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  void (*v19)(_BYTE *, uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _BYTE *v23;
  uint64_t (*v24)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, char);
  unint64_t v25;
  _BYTE v27[12];
  int v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(_QWORD, _QWORD, _QWORD);
  uint64_t v32;
  uint64_t v33;
  _BYTE *v34;
  uint64_t v35;
  uint64_t v36;
  _BYTE *v37;
  char v38;
  uint64_t (*v39)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, char);
  _QWORD v40[5];
  unsigned __int8 v41;
  uint64_t v42;
  uint64_t v43;
  void (*v44)(_QWORD, _QWORD, _QWORD);
  uint64_t v45;
  uint64_t v46;
  char v47;

  v36 = a3;
  sub_1C07DFF44(a3, (uint64_t)v40);
  v7 = v40[0];
  v6 = v40[1];
  v31 = (void (*)(_QWORD, _QWORD, _QWORD))v40[2];
  v30 = v40[3];
  v29 = v40[4];
  v28 = v41;
  v8 = sub_1C07ACF80((uint64_t *)&unk_1ED762690);
  MEMORY[0x1E0C80A78](v8);
  v10 = &v27[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v11 = sub_1C106ADE0();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v34 = &v27[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v14 = sub_1C07ACF80(&qword_1EF6323F8);
  v32 = *(_QWORD *)(v14 - 8);
  v33 = v14;
  MEMORY[0x1E0C80A78](v14);
  v37 = &v27[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v16 = *(_QWORD *)(a1 + 16);
  if (v16)
  {
    v35 = a2;
    v39 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, char))MEMORY[0x1E0DEE9D8];
    sub_1C09D38C0();
    v17 = a1 + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80));
    v42 = v7;
    v43 = v6;
    v44 = v31;
    v45 = v30;
    v46 = v29;
    v47 = v28;
    v29 = *(_QWORD *)(v12 + 72);
    v31 = *(void (**)(_QWORD, _QWORD, _QWORD))(v12 + 16);
    v30 = v12;
    v18 = v34;
    while (1)
    {
      v19 = (void (*)(_BYTE *, uint64_t, uint64_t))v31;
      v31(v18, v17, v11);
      v19(v10, v17, v11);
      sub_1C07B2D8C((uint64_t)v10, 0, 1, v11);
      v20 = v36;
      sub_1C08384CC(v36, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1C0826EB0);
      v38 = 1;
      sub_1C0850FCC();
      if (v3)
        break;
      v22 = v21;
      sub_1C0784B94((uint64_t)v10, (uint64_t *)&unk_1ED762690);
      sub_1C08384CC(v20, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1C0826F50);
      v23 = v37;
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v12 + 32))(v37, v18, v11);
      *(_QWORD *)&v23[*(int *)(v33 + 28)] = v22;
      v24 = v39;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1C09D38C0();
        v24 = v39;
      }
      v25 = *((_QWORD *)v24 + 2);
      if (v25 >= *((_QWORD *)v24 + 3) >> 1)
      {
        sub_1C09D38C0();
        v24 = v39;
      }
      *((_QWORD *)v24 + 2) = v25 + 1;
      sub_1C08273C8((uint64_t)v37, (uint64_t)v24+ ((*(unsigned __int8 *)(v32 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v32 + 80))+ *(_QWORD *)(v32 + 72) * v25, &qword_1EF6323F8);
      v17 += v29;
      --v16;
      v12 = v30;
      if (!v16)
      {
        swift_release();
        goto LABEL_12;
      }
    }
    sub_1C0784B94((uint64_t)v10, (uint64_t *)&unk_1ED762690);
    v24 = sub_1C0826F50;
    sub_1C08384CC(v20, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1C0826F50);
    (*(void (**)(_BYTE *, uint64_t))(v12 + 8))(v18, v11);
    swift_release();
    swift_release();
    sub_1C08384CC(v20, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1C0826F50);
  }
  else
  {
    swift_release();
    v24 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, char))MEMORY[0x1E0DEE9D8];
LABEL_12:
    sub_1C08384CC(v36, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1C0826F50);
  }
  return v24;
}

uint64_t (*sub_1C086497C(uint64_t a1, uint64_t a2, uint64_t a3))(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  void (*v19)(_BYTE *, uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _BYTE *v23;
  uint64_t (*v24)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, char);
  unint64_t v25;
  _BYTE v27[12];
  int v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(_BYTE *, uint64_t, uint64_t);
  uint64_t v32;
  uint64_t v33;
  _BYTE *v34;
  uint64_t v35;
  uint64_t v36;
  _BYTE *v37;
  char v38;
  uint64_t (*v39)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, char);
  _QWORD v40[5];
  unsigned __int8 v41;
  _QWORD v42[5];
  char v43;

  v36 = a3;
  sub_1C07DFF44(a3, (uint64_t)v40);
  v7 = v40[0];
  v6 = v40[1];
  v31 = (void (*)(_BYTE *, uint64_t, uint64_t))v40[2];
  v30 = v40[3];
  v29 = v40[4];
  v28 = v41;
  v8 = sub_1C07ACF80((uint64_t *)&unk_1ED762690);
  MEMORY[0x1E0C80A78](v8);
  v10 = &v27[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v11 = sub_1C106ADE0();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v34 = &v27[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v14 = sub_1C07ACF80(&qword_1EF6323F8);
  v32 = *(_QWORD *)(v14 - 8);
  v33 = v14;
  MEMORY[0x1E0C80A78](v14);
  v37 = &v27[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v16 = *(_QWORD *)(a1 + 16);
  if (v16)
  {
    v35 = a2;
    v39 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, char))MEMORY[0x1E0DEE9D8];
    sub_1C09D38C0();
    v17 = a1 + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80));
    v42[0] = v7;
    v42[1] = v6;
    v42[2] = v31;
    v42[3] = v30;
    v42[4] = v29;
    v43 = v28;
    v29 = *(_QWORD *)(v12 + 72);
    v31 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v12 + 16);
    v30 = v12;
    v18 = v34;
    while (1)
    {
      v19 = v31;
      v31(v18, v17, v11);
      v19(v10, v17, v11);
      sub_1C07B2D8C((uint64_t)v10, 0, 1, v11);
      v20 = v36;
      sub_1C08384CC(v36, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1C0826EB0);
      v38 = 1;
      sub_1C0850D54(v42, v10, 0x100000000);
      if (v3)
        break;
      v22 = v21;
      sub_1C0784B94((uint64_t)v10, (uint64_t *)&unk_1ED762690);
      sub_1C08384CC(v20, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1C0826F50);
      v23 = v37;
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v12 + 32))(v37, v18, v11);
      *(_QWORD *)&v23[*(int *)(v33 + 28)] = v22;
      v24 = v39;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1C09D38C0();
        v24 = v39;
      }
      v25 = *((_QWORD *)v24 + 2);
      if (v25 >= *((_QWORD *)v24 + 3) >> 1)
      {
        sub_1C09D38C0();
        v24 = v39;
      }
      *((_QWORD *)v24 + 2) = v25 + 1;
      sub_1C08273C8((uint64_t)v37, (uint64_t)v24+ ((*(unsigned __int8 *)(v32 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v32 + 80))+ *(_QWORD *)(v32 + 72) * v25, &qword_1EF6323F8);
      v17 += v29;
      --v16;
      v12 = v30;
      if (!v16)
      {
        swift_release();
        goto LABEL_12;
      }
    }
    sub_1C0784B94((uint64_t)v10, (uint64_t *)&unk_1ED762690);
    v24 = sub_1C0826F50;
    sub_1C08384CC(v20, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1C0826F50);
    (*(void (**)(_BYTE *, uint64_t))(v12 + 8))(v18, v11);
    swift_release();
    swift_release();
    sub_1C08384CC(v20, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1C0826F50);
  }
  else
  {
    swift_release();
    v24 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, char))MEMORY[0x1E0DEE9D8];
LABEL_12:
    sub_1C08384CC(v36, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1C0826F50);
  }
  return v24;
}

uint64_t (*sub_1C0864D44(uint64_t a1, uint64_t a2, uint64_t a3))(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  void (*v19)(_BYTE *, uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _BYTE *v23;
  uint64_t (*v24)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, char);
  unint64_t v25;
  _BYTE v27[12];
  int v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(_BYTE *, uint64_t, uint64_t);
  uint64_t v32;
  uint64_t v33;
  _BYTE *v34;
  uint64_t v35;
  uint64_t v36;
  _BYTE *v37;
  char v38;
  uint64_t (*v39)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, char);
  _QWORD v40[5];
  unsigned __int8 v41;
  _QWORD v42[5];
  char v43;

  v36 = a3;
  sub_1C07DFF44(a3, (uint64_t)v40);
  v7 = v40[0];
  v6 = v40[1];
  v31 = (void (*)(_BYTE *, uint64_t, uint64_t))v40[2];
  v30 = v40[3];
  v29 = v40[4];
  v28 = v41;
  v8 = sub_1C07ACF80((uint64_t *)&unk_1ED762690);
  MEMORY[0x1E0C80A78](v8);
  v10 = &v27[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v11 = sub_1C106ADE0();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v34 = &v27[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v14 = sub_1C07ACF80(&qword_1EF6323F8);
  v32 = *(_QWORD *)(v14 - 8);
  v33 = v14;
  MEMORY[0x1E0C80A78](v14);
  v37 = &v27[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v16 = *(_QWORD *)(a1 + 16);
  if (v16)
  {
    v35 = a2;
    v39 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, char))MEMORY[0x1E0DEE9D8];
    sub_1C09D38C0();
    v17 = a1 + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80));
    v42[0] = v7;
    v42[1] = v6;
    v42[2] = v31;
    v42[3] = v30;
    v42[4] = v29;
    v43 = v28;
    v29 = *(_QWORD *)(v12 + 72);
    v31 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v12 + 16);
    v30 = v12;
    v18 = v34;
    while (1)
    {
      v19 = v31;
      v31(v18, v17, v11);
      v19(v10, v17, v11);
      sub_1C07B2D8C((uint64_t)v10, 0, 1, v11);
      v20 = v36;
      sub_1C08384CC(v36, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1C0826EB0);
      v38 = 1;
      sub_1C0850D2C(v42, v10, 0x100000000);
      if (v3)
        break;
      v22 = v21;
      sub_1C0784B94((uint64_t)v10, (uint64_t *)&unk_1ED762690);
      sub_1C08384CC(v20, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1C0826F50);
      v23 = v37;
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v12 + 32))(v37, v18, v11);
      *(_QWORD *)&v23[*(int *)(v33 + 28)] = v22;
      v24 = v39;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1C09D38C0();
        v24 = v39;
      }
      v25 = *((_QWORD *)v24 + 2);
      if (v25 >= *((_QWORD *)v24 + 3) >> 1)
      {
        sub_1C09D38C0();
        v24 = v39;
      }
      *((_QWORD *)v24 + 2) = v25 + 1;
      sub_1C08273C8((uint64_t)v37, (uint64_t)v24+ ((*(unsigned __int8 *)(v32 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v32 + 80))+ *(_QWORD *)(v32 + 72) * v25, &qword_1EF6323F8);
      v17 += v29;
      --v16;
      v12 = v30;
      if (!v16)
      {
        swift_release();
        goto LABEL_12;
      }
    }
    sub_1C0784B94((uint64_t)v10, (uint64_t *)&unk_1ED762690);
    v24 = sub_1C0826F50;
    sub_1C08384CC(v20, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1C0826F50);
    (*(void (**)(_BYTE *, uint64_t))(v12 + 8))(v18, v11);
    swift_release();
    swift_release();
    sub_1C08384CC(v20, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1C0826F50);
  }
  else
  {
    swift_release();
    v24 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, char))MEMORY[0x1E0DEE9D8];
LABEL_12:
    sub_1C08384CC(v36, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1C0826F50);
  }
  return v24;
}

uint64_t (*sub_1C086510C(uint64_t a1, uint64_t a2, uint64_t a3))(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  void (*v19)(_BYTE *, uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _BYTE *v23;
  uint64_t (*v24)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, char);
  unint64_t v25;
  _BYTE v27[12];
  int v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(_BYTE *, uint64_t, uint64_t);
  uint64_t v32;
  uint64_t v33;
  _BYTE *v34;
  uint64_t v35;
  uint64_t v36;
  _BYTE *v37;
  char v38;
  uint64_t (*v39)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, char);
  _QWORD v40[5];
  unsigned __int8 v41;
  _QWORD v42[5];
  char v43;

  v36 = a3;
  sub_1C07DFF44(a3, (uint64_t)v40);
  v7 = v40[0];
  v6 = v40[1];
  v31 = (void (*)(_BYTE *, uint64_t, uint64_t))v40[2];
  v30 = v40[3];
  v29 = v40[4];
  v28 = v41;
  v8 = sub_1C07ACF80((uint64_t *)&unk_1ED762690);
  MEMORY[0x1E0C80A78](v8);
  v10 = &v27[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v11 = sub_1C106ADE0();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v34 = &v27[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v14 = sub_1C07ACF80(&qword_1EF6323F8);
  v32 = *(_QWORD *)(v14 - 8);
  v33 = v14;
  MEMORY[0x1E0C80A78](v14);
  v37 = &v27[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v16 = *(_QWORD *)(a1 + 16);
  if (v16)
  {
    v35 = a2;
    v39 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, char))MEMORY[0x1E0DEE9D8];
    sub_1C09D38C0();
    v17 = a1 + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80));
    v42[0] = v7;
    v42[1] = v6;
    v42[2] = v31;
    v42[3] = v30;
    v42[4] = v29;
    v43 = v28;
    v29 = *(_QWORD *)(v12 + 72);
    v31 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v12 + 16);
    v30 = v12;
    v18 = v34;
    while (1)
    {
      v19 = v31;
      v31(v18, v17, v11);
      v19(v10, v17, v11);
      sub_1C07B2D8C((uint64_t)v10, 0, 1, v11);
      v20 = v36;
      sub_1C08384CC(v36, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1C0826EB0);
      v38 = 1;
      sub_1C085034C(v42, v10, 0x100000000);
      if (v3)
        break;
      v22 = v21;
      sub_1C0784B94((uint64_t)v10, (uint64_t *)&unk_1ED762690);
      sub_1C08384CC(v20, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1C0826F50);
      v23 = v37;
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v12 + 32))(v37, v18, v11);
      *(_QWORD *)&v23[*(int *)(v33 + 28)] = v22;
      v24 = v39;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1C09D38C0();
        v24 = v39;
      }
      v25 = *((_QWORD *)v24 + 2);
      if (v25 >= *((_QWORD *)v24 + 3) >> 1)
      {
        sub_1C09D38C0();
        v24 = v39;
      }
      *((_QWORD *)v24 + 2) = v25 + 1;
      sub_1C08273C8((uint64_t)v37, (uint64_t)v24+ ((*(unsigned __int8 *)(v32 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v32 + 80))+ *(_QWORD *)(v32 + 72) * v25, &qword_1EF6323F8);
      v17 += v29;
      --v16;
      v12 = v30;
      if (!v16)
      {
        swift_release();
        goto LABEL_12;
      }
    }
    sub_1C0784B94((uint64_t)v10, (uint64_t *)&unk_1ED762690);
    v24 = sub_1C0826F50;
    sub_1C08384CC(v20, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1C0826F50);
    (*(void (**)(_BYTE *, uint64_t))(v12 + 8))(v18, v11);
    swift_release();
    swift_release();
    sub_1C08384CC(v20, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1C0826F50);
  }
  else
  {
    swift_release();
    v24 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, char))MEMORY[0x1E0DEE9D8];
LABEL_12:
    sub_1C08384CC(v36, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1C0826F50);
  }
  return v24;
}

uint64_t (*sub_1C08654D4(uint64_t a1, uint64_t a2, uint64_t a3))(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  void (*v19)(_BYTE *, uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _BYTE *v23;
  uint64_t (*v24)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, char);
  unint64_t v25;
  _BYTE v27[12];
  int v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(_BYTE *, uint64_t, uint64_t);
  uint64_t v32;
  uint64_t v33;
  _BYTE *v34;
  uint64_t v35;
  uint64_t v36;
  _BYTE *v37;
  char v38;
  uint64_t (*v39)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, char);
  _QWORD v40[5];
  unsigned __int8 v41;
  _QWORD v42[5];
  char v43;

  v36 = a3;
  sub_1C07DFF44(a3, (uint64_t)v40);
  v7 = v40[0];
  v6 = v40[1];
  v31 = (void (*)(_BYTE *, uint64_t, uint64_t))v40[2];
  v30 = v40[3];
  v29 = v40[4];
  v28 = v41;
  v8 = sub_1C07ACF80((uint64_t *)&unk_1ED762690);
  MEMORY[0x1E0C80A78](v8);
  v10 = &v27[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v11 = sub_1C106ADE0();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v34 = &v27[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v14 = sub_1C07ACF80(&qword_1EF6323F8);
  v32 = *(_QWORD *)(v14 - 8);
  v33 = v14;
  MEMORY[0x1E0C80A78](v14);
  v37 = &v27[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v16 = *(_QWORD *)(a1 + 16);
  if (v16)
  {
    v35 = a2;
    v39 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, char))MEMORY[0x1E0DEE9D8];
    sub_1C09D38C0();
    v17 = a1 + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80));
    v42[0] = v7;
    v42[1] = v6;
    v42[2] = v31;
    v42[3] = v30;
    v42[4] = v29;
    v43 = v28;
    v29 = *(_QWORD *)(v12 + 72);
    v31 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v12 + 16);
    v30 = v12;
    v18 = v34;
    while (1)
    {
      v19 = v31;
      v31(v18, v17, v11);
      v19(v10, v17, v11);
      sub_1C07B2D8C((uint64_t)v10, 0, 1, v11);
      v20 = v36;
      sub_1C08384CC(v36, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1C0826EB0);
      v38 = 1;
      sub_1C0850164(v42, v10, 0x100000000);
      if (v3)
        break;
      v22 = v21;
      sub_1C0784B94((uint64_t)v10, (uint64_t *)&unk_1ED762690);
      sub_1C08384CC(v20, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1C0826F50);
      v23 = v37;
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v12 + 32))(v37, v18, v11);
      *(_QWORD *)&v23[*(int *)(v33 + 28)] = v22;
      v24 = v39;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1C09D38C0();
        v24 = v39;
      }
      v25 = *((_QWORD *)v24 + 2);
      if (v25 >= *((_QWORD *)v24 + 3) >> 1)
      {
        sub_1C09D38C0();
        v24 = v39;
      }
      *((_QWORD *)v24 + 2) = v25 + 1;
      sub_1C08273C8((uint64_t)v37, (uint64_t)v24+ ((*(unsigned __int8 *)(v32 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v32 + 80))+ *(_QWORD *)(v32 + 72) * v25, &qword_1EF6323F8);
      v17 += v29;
      --v16;
      v12 = v30;
      if (!v16)
      {
        swift_release();
        goto LABEL_12;
      }
    }
    sub_1C0784B94((uint64_t)v10, (uint64_t *)&unk_1ED762690);
    v24 = sub_1C0826F50;
    sub_1C08384CC(v20, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1C0826F50);
    (*(void (**)(_BYTE *, uint64_t))(v12 + 8))(v18, v11);
    swift_release();
    swift_release();
    sub_1C08384CC(v20, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1C0826F50);
  }
  else
  {
    swift_release();
    v24 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, char))MEMORY[0x1E0DEE9D8];
LABEL_12:
    sub_1C08384CC(v36, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1C0826F50);
  }
  return v24;
}

uint64_t (*sub_1C086589C(uint64_t a1, uint64_t a2, uint64_t a3))(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  void (*v19)(_BYTE *, uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _BYTE *v23;
  uint64_t (*v24)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, char);
  unint64_t v25;
  _BYTE v27[12];
  int v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(_BYTE *, uint64_t, uint64_t);
  uint64_t v32;
  uint64_t v33;
  _BYTE *v34;
  uint64_t v35;
  uint64_t v36;
  _BYTE *v37;
  char v38;
  uint64_t (*v39)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, char);
  _QWORD v40[5];
  unsigned __int8 v41;
  _QWORD v42[5];
  char v43;

  v36 = a3;
  sub_1C07DFF44(a3, (uint64_t)v40);
  v7 = v40[0];
  v6 = v40[1];
  v31 = (void (*)(_BYTE *, uint64_t, uint64_t))v40[2];
  v30 = v40[3];
  v29 = v40[4];
  v28 = v41;
  v8 = sub_1C07ACF80((uint64_t *)&unk_1ED762690);
  MEMORY[0x1E0C80A78](v8);
  v10 = &v27[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v11 = sub_1C106ADE0();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v34 = &v27[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v14 = sub_1C07ACF80(&qword_1EF6323F8);
  v32 = *(_QWORD *)(v14 - 8);
  v33 = v14;
  MEMORY[0x1E0C80A78](v14);
  v37 = &v27[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v16 = *(_QWORD *)(a1 + 16);
  if (v16)
  {
    v35 = a2;
    v39 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, char))MEMORY[0x1E0DEE9D8];
    sub_1C09D38C0();
    v17 = a1 + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80));
    v42[0] = v7;
    v42[1] = v6;
    v42[2] = v31;
    v42[3] = v30;
    v42[4] = v29;
    v43 = v28;
    v29 = *(_QWORD *)(v12 + 72);
    v31 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v12 + 16);
    v30 = v12;
    v18 = v34;
    while (1)
    {
      v19 = v31;
      v31(v18, v17, v11);
      v19(v10, v17, v11);
      sub_1C07B2D8C((uint64_t)v10, 0, 1, v11);
      v20 = v36;
      sub_1C08384CC(v36, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1C0826EB0);
      v38 = 1;
      sub_1C0850140(v42, v10, 0x100000000);
      if (v3)
        break;
      v22 = v21;
      sub_1C0784B94((uint64_t)v10, (uint64_t *)&unk_1ED762690);
      sub_1C08384CC(v20, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1C0826F50);
      v23 = v37;
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v12 + 32))(v37, v18, v11);
      *(_QWORD *)&v23[*(int *)(v33 + 28)] = v22;
      v24 = v39;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1C09D38C0();
        v24 = v39;
      }
      v25 = *((_QWORD *)v24 + 2);
      if (v25 >= *((_QWORD *)v24 + 3) >> 1)
      {
        sub_1C09D38C0();
        v24 = v39;
      }
      *((_QWORD *)v24 + 2) = v25 + 1;
      sub_1C08273C8((uint64_t)v37, (uint64_t)v24+ ((*(unsigned __int8 *)(v32 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v32 + 80))+ *(_QWORD *)(v32 + 72) * v25, &qword_1EF6323F8);
      v17 += v29;
      --v16;
      v12 = v30;
      if (!v16)
      {
        swift_release();
        goto LABEL_12;
      }
    }
    sub_1C0784B94((uint64_t)v10, (uint64_t *)&unk_1ED762690);
    v24 = sub_1C0826F50;
    sub_1C08384CC(v20, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1C0826F50);
    (*(void (**)(_BYTE *, uint64_t))(v12 + 8))(v18, v11);
    swift_release();
    swift_release();
    sub_1C08384CC(v20, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1C0826F50);
  }
  else
  {
    swift_release();
    v24 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, char))MEMORY[0x1E0DEE9D8];
LABEL_12:
    sub_1C08384CC(v36, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1C0826F50);
  }
  return v24;
}

uint64_t sub_1C0865C64(uint64_t a1, uint64_t (*a2)(uint64_t), uint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  _QWORD *v17;
  uint64_t v19;
  uint64_t v21;

  v5 = *(_QWORD *)(a1 + 16);
  v6 = MEMORY[0x1E0DEE9D8];
  if (v5)
  {
    v21 = MEMORY[0x1E0DEE9D8];
    sub_1C09D37BC();
    v6 = v21;
    v19 = sub_1C07ACF80(a5);
    v9 = *(_QWORD *)(v19 - 8);
    v10 = a1 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    v11 = *(_QWORD *)(v9 + 72);
    do
    {
      v12 = a2(v10);
      v14 = v13;
      v15 = *(_QWORD *)(v10 + *(int *)(v19 + 28));
      v16 = *(_QWORD *)(v21 + 16);
      if (v16 >= *(_QWORD *)(v21 + 24) >> 1)
        sub_1C09D37BC();
      *(_QWORD *)(v21 + 16) = v16 + 1;
      v17 = (_QWORD *)(v21 + 24 * v16);
      v17[4] = v12;
      v17[5] = v14;
      v17[6] = v15;
      v10 += v11;
      --v5;
    }
    while (v5);
  }
  return v6;
}

uint64_t sub_1C0865D90()
{
  uint64_t v0;
  uint64_t v1;

  sub_1C0775864();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C08A3000();
  v1 = v0;
  swift_bridgeObjectRelease();
  return v1;
}

void sub_1C0865DF0()
{
  unint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int64_t v3;
  unint64_t v4;
  int64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  int64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unsigned __int8 *v18;
  unint64_t v19;
  char v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unsigned __int8 v24;
  BOOL v25;
  unint64_t v26;
  unsigned __int8 v27;
  unsigned __int8 v28;
  char v29;
  unsigned __int8 v30;
  unint64_t v31;
  unsigned __int8 v32;
  unsigned __int8 v33;
  unint64_t v34;
  unsigned __int8 v35;
  unsigned __int8 v36;
  int64_t v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD v41[5];

  sub_1C0775864();
  sub_1C0861BD0(v41);
  v1 = v41[0];
  v2 = v41[1];
  v3 = v41[3];
  v4 = v41[4];
  v5 = (unint64_t)(v41[2] + 64) >> 6;
  swift_bridgeObjectRetain_n();
  v6 = MEMORY[0x1E0DEE9D8];
  while (v4)
  {
    v7 = __clz(__rbit64(v4));
    v4 &= v4 - 1;
    v8 = v7 | (v3 << 6);
LABEL_19:
    v12 = (unint64_t *)(*(_QWORD *)(v1 + 48) + 16 * v8);
    v13 = *v12;
    v14 = v12[1];
    v15 = HIBYTE(v14) & 0xF;
    v16 = v13 & 0xFFFFFFFFFFFFLL;
    if ((v14 & 0x2000000000000000) != 0)
      v17 = HIBYTE(v14) & 0xF;
    else
      v17 = v13 & 0xFFFFFFFFFFFFLL;
    if (v17)
    {
      if ((v14 & 0x1000000000000000) != 0)
      {
        _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
        v19 = sub_1C0C9D87C(v13, v14, 10);
        LOBYTE(v0) = v38;
        swift_bridgeObjectRelease();
        goto LABEL_58;
      }
      if ((v14 & 0x2000000000000000) == 0)
      {
        if ((v13 & 0x1000000000000000) != 0)
          v18 = (unsigned __int8 *)((v14 & 0xFFFFFFFFFFFFFFFLL) + 32);
        else
          v18 = (unsigned __int8 *)sub_1C10707F8();
        v19 = (unint64_t)sub_1C0C9D818(v18, v16);
        LOBYTE(v0) = v20 & 1;
        goto LABEL_58;
      }
      v21 = v13 >> 8;
      v22 = v13 >> 16;
      v23 = v13 >> 24;
      if (v13 == 43)
      {
        if (!v15)
          goto LABEL_103;
        if (v15 != 1 && (BYTE1(v13) - 48) <= 9u)
        {
          v19 = (BYTE1(v13) - 48);
          if (v15 == 2)
            goto LABEL_57;
          v27 = v22 - 48;
          if (v27 <= 9u)
          {
            v19 = 10 * v19 + v27;
            if (v15 == 3)
              goto LABEL_57;
            v28 = v23 - 48;
            if (v28 <= 9u)
            {
              v19 = 10 * v19 + v28;
              if (v15 == 4)
                goto LABEL_57;
              while (1)
              {
                sub_1C07B8914();
                if (!v29 && v25)
                  break;
                sub_1C078D474();
                if (!v29)
                  break;
                v25 = __CFADD__(10 * v19, v30);
                v19 = 10 * v19 + v30;
                if (v25)
                  break;
                sub_1C07BCDB0();
                if (v29)
                  goto LABEL_58;
              }
            }
          }
        }
LABEL_54:
        v19 = 0;
LABEL_55:
        LOBYTE(v0) = 1;
        goto LABEL_58;
      }
      if (v13 != 45)
      {
        if (v15 && (v13 - 48) <= 9u)
        {
          v19 = (v13 - 48);
          if (v15 == 1)
            goto LABEL_57;
          if ((v21 - 48) <= 9u)
          {
            v19 = 10 * v19 + (v21 - 48);
            if (v15 == 2)
              goto LABEL_57;
            if ((v22 - 48) <= 9u)
            {
              v19 = 10 * v19 + (v22 - 48);
              if (v15 == 3)
                goto LABEL_57;
              while (1)
              {
                sub_1C07B8914();
                if (!v29 && v25)
                  break;
                sub_1C078D474();
                if (!v29)
                  break;
                v25 = __CFADD__(10 * v19, v32);
                v19 = 10 * v19 + v32;
                if (v25)
                  break;
                sub_1C07BCDB0();
                if (v29)
                  goto LABEL_58;
              }
            }
          }
        }
        goto LABEL_54;
      }
      if (!v15)
        goto LABEL_102;
      if (v15 == 1)
        goto LABEL_54;
      v24 = BYTE1(v13) - 48;
      if ((BYTE1(v13) - 48) > 9u)
        goto LABEL_54;
      v19 = 0;
      v25 = v24 == 0;
      v26 = -(uint64_t)v24;
      if (!v25)
        goto LABEL_55;
      if (v15 != 2)
      {
        v33 = v22 - 48;
        if (v33 <= 9u && is_mul_ok(v26, 0xAuLL))
        {
          v34 = 10 * v26;
          v19 = v34 - v33;
          if (v34 >= v33)
          {
            if (v15 == 3)
              goto LABEL_57;
            v35 = v23 - 48;
            if (v35 <= 9u && is_mul_ok(v19, 0xAuLL))
            {
              v25 = 10 * v19 >= v35;
              v19 = 10 * v19 - v35;
              if (v25)
              {
                if (v15 == 4)
                {
LABEL_57:
                  LOBYTE(v0) = 0;
                  goto LABEL_58;
                }
                while (1)
                {
                  sub_1C07B8914();
                  if (!v29 && v25)
                    break;
                  sub_1C078D474();
                  if (!v29)
                    break;
                  v25 = 10 * v19 >= v36;
                  v19 = 10 * v19 - v36;
                  if (!v25)
                    break;
                  sub_1C07BCDB0();
                  if (v29)
                    goto LABEL_58;
                }
              }
            }
          }
        }
        goto LABEL_54;
      }
      LOBYTE(v0) = 0;
      v19 = v26;
LABEL_58:
      if ((v0 & 1) == 0)
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1C0790708();
          v6 = v39;
        }
        v31 = *(_QWORD *)(v6 + 16);
        v0 = v31 + 1;
        if (v31 >= *(_QWORD *)(v6 + 24) >> 1)
        {
          sub_1C0790708();
          v6 = v40;
        }
        *(_QWORD *)(v6 + 16) = v0;
        *(_QWORD *)(v6 + 8 * v31 + 32) = v19;
      }
    }
  }
  v9 = v3 + 1;
  if (!__OFADD__(v3, 1))
  {
    if (v9 >= v5)
      goto LABEL_100;
    v10 = *(_QWORD *)(v2 + 8 * v9);
    if (!v10)
    {
      v11 = v3 + 2;
      if (v3 + 2 >= v5)
        goto LABEL_100;
      v10 = *(_QWORD *)(v2 + 8 * v11);
      if (v10)
        goto LABEL_17;
      v11 = v3 + 3;
      if (v3 + 3 >= v5)
        goto LABEL_100;
      v10 = *(_QWORD *)(v2 + 8 * v11);
      if (v10)
        goto LABEL_17;
      v11 = v3 + 4;
      if (v3 + 4 >= v5)
        goto LABEL_100;
      v10 = *(_QWORD *)(v2 + 8 * v11);
      if (v10)
        goto LABEL_17;
      v11 = v3 + 5;
      if (v3 + 5 >= v5)
        goto LABEL_100;
      v10 = *(_QWORD *)(v2 + 8 * v11);
      if (v10)
        goto LABEL_17;
      v11 = v3 + 6;
      if (v3 + 6 >= v5)
        goto LABEL_100;
      v10 = *(_QWORD *)(v2 + 8 * v11);
      if (v10)
      {
LABEL_17:
        v9 = v11;
      }
      else
      {
        v9 = v3 + 7;
        if (v3 + 7 >= v5)
          goto LABEL_100;
        v10 = *(_QWORD *)(v2 + 8 * v9);
        if (!v10)
        {
          v37 = v3 + 8;
          while (v37 < v5)
          {
            v10 = *(_QWORD *)(v2 + 8 * v37++);
            if (v10)
            {
              v9 = v37 - 1;
              goto LABEL_18;
            }
          }
LABEL_100:
          swift_bridgeObjectRelease();
          swift_release();
          return;
        }
      }
    }
LABEL_18:
    v4 = (v10 - 1) & v10;
    v8 = __clz(__rbit64(v10)) + (v9 << 6);
    v3 = v9;
    goto LABEL_19;
  }
  __break(1u);
LABEL_102:
  __break(1u);
LABEL_103:
  __break(1u);
}

void sub_1C08662D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  int64_t v12;
  uint64_t v13;
  int64_t v14;
  int64_t v15;
  uint64_t v16;
  int64_t v17;
  int64_t v18;
  void (*v19)(char *, uint64_t, uint64_t);
  char *v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  void (*v28)(unint64_t, char *, uint64_t);
  char *v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD v32[5];

  v1 = sub_1C07ACF80(&qword_1ED762CE0);
  MEMORY[0x1E0C80A78](v1);
  sub_1C0778564();
  v4 = v3 - v2;
  v5 = sub_1C106AE28();
  v30 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v29 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v27 = (char *)&v26 - v8;
  v9 = (uint64_t *)(v0 + OBJC_IVAR____TtC24IntelligencePlatformCore32CategoricalBehaviorHistogramBase_categoryMap);
  sub_1C0775864();
  v10 = *v9;
  sub_1C0861BD0(v32);
  v11 = v32[1];
  v12 = v32[3];
  v13 = v32[4];
  v14 = (unint64_t)(v32[2] + 64) >> 6;
  v26 = v10;
  swift_bridgeObjectRetain_n();
  v31 = MEMORY[0x1E0DEE9D8];
  while (1)
  {
    if (v13)
    {
      v13 &= v13 - 1;
      goto LABEL_24;
    }
    v15 = v12 + 1;
    if (__OFADD__(v12, 1))
      break;
    if (v15 >= v14)
      goto LABEL_31;
    v16 = *(_QWORD *)(v11 + 8 * v15);
    v17 = v12 + 1;
    if (!v16)
    {
      v17 = v12 + 2;
      if (v12 + 2 >= v14)
        goto LABEL_31;
      v16 = *(_QWORD *)(v11 + 8 * v17);
      if (!v16)
      {
        v17 = v12 + 3;
        if (v12 + 3 >= v14)
          goto LABEL_31;
        v16 = *(_QWORD *)(v11 + 8 * v17);
        if (!v16)
        {
          v17 = v12 + 4;
          if (v12 + 4 >= v14)
            goto LABEL_31;
          v16 = *(_QWORD *)(v11 + 8 * v17);
          if (!v16)
          {
            v17 = v12 + 5;
            if (v12 + 5 >= v14)
              goto LABEL_31;
            v16 = *(_QWORD *)(v11 + 8 * v17);
            if (!v16)
            {
              v17 = v12 + 6;
              if (v12 + 6 >= v14)
                goto LABEL_31;
              v16 = *(_QWORD *)(v11 + 8 * v17);
              if (!v16)
              {
                v17 = v12 + 7;
                if (v12 + 7 >= v14)
                  goto LABEL_31;
                v16 = *(_QWORD *)(v11 + 8 * v17);
                if (!v16)
                {
                  v18 = v12 + 8;
                  while (v18 < v14)
                  {
                    v16 = *(_QWORD *)(v11 + 8 * v18++);
                    if (v16)
                    {
                      v17 = v18 - 1;
                      goto LABEL_23;
                    }
                  }
LABEL_31:
                  swift_bridgeObjectRelease();
                  swift_release();
                  return;
                }
              }
            }
          }
        }
      }
    }
LABEL_23:
    v13 = (v16 - 1) & v16;
    v12 = v17;
LABEL_24:
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    sub_1C106ADEC();
    swift_bridgeObjectRelease();
    if (sub_1C07B2D80(v4, 1, v5) == 1)
    {
      sub_1C0784B94(v4, &qword_1ED762CE0);
    }
    else
    {
      v19 = *(void (**)(char *, uint64_t, uint64_t))(v30 + 32);
      v20 = v27;
      v19(v27, v4, v5);
      v28 = (void (*)(unint64_t, char *, uint64_t))v19;
      v19(v29, (uint64_t)v20, v5);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1C07EBAD4();
        v31 = v24;
      }
      v21 = *(_QWORD *)(v31 + 16);
      if (v21 >= *(_QWORD *)(v31 + 24) >> 1)
      {
        sub_1C07EBAD4();
        v31 = v25;
      }
      v22 = v30;
      v23 = v31;
      *(_QWORD *)(v31 + 16) = v21 + 1;
      v28(v23+ ((*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80))+ *(_QWORD *)(v22 + 72) * v21, v29, v5);
    }
  }
  __break(1u);
}

uint64_t HistogramBinFrequencyPair.bin.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a1 + 16) - 8) + 16))(a2, v2);
}

double HistogramBinFrequencyPair.frequency.getter(uint64_t a1)
{
  uint64_t v1;

  return *(double *)(v1 + *(int *)(a1 + 28));
}

uint64_t sub_1C0866638(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v7;

  v2 = a1 == 7235938 && a2 == 0xE300000000000000;
  if (v2 || (sub_1C1070CB4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x636E657571657266 && a2 == 0xE900000000000079)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v7 = sub_1C1070CB4();
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1C0866720(char a1)
{
  if ((a1 & 1) != 0)
    return 0x636E657571657266;
  else
    return 7235938;
}

BOOL sub_1C0866754(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1C07F4324(*a1, *a2);
}

uint64_t sub_1C0866764()
{
  return sub_1C07F4488();
}

uint64_t sub_1C0866774()
{
  return sub_1C07F4334();
}

uint64_t sub_1C0866784()
{
  sub_1C1070DF8();
  sub_1C07F4334();
  return sub_1C1070E4C();
}

uint64_t sub_1C08667C8()
{
  char *v0;

  return sub_1C0866720(*v0);
}

uint64_t sub_1C08667D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1C0866638(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C0866800()
{
  return sub_1C0782AF4();
}

uint64_t sub_1C0866824@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1C07F4480();
  *a1 = result;
  return result;
}

uint64_t sub_1C086684C(uint64_t a1)
{
  MEMORY[0x1C3BA8174](&unk_1C107D820, a1);
  return sub_1C1070EE8();
}

uint64_t sub_1C0866880(uint64_t a1)
{
  MEMORY[0x1C3BA8174](&unk_1C107D820, a1);
  return sub_1C1070EF4();
}

uint64_t HistogramBinFrequencyPair<A>.encode(to:)(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  _QWORD v13[4];
  char v14;
  char v15;

  v13[2] = a4;
  v13[0] = a2;
  v6 = type metadata accessor for HistogramBinFrequencyPair.CodingKeys(255, *(_QWORD *)(a2 + 16), a3, a4);
  MEMORY[0x1C3BA8174](&unk_1C107D820, v6);
  v7 = sub_1C1070BD0();
  sub_1C07B46AC();
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)v13 - v9;
  sub_1C07A9480(a1, a1[3]);
  sub_1C1070EB8();
  v15 = 0;
  v11 = v13[3];
  sub_1C1070BB8();
  if (!v11)
  {
    v14 = 1;
    sub_1C1070B94();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v10, v7);
}

uint64_t type metadata accessor for HistogramBinFrequencyPair.CodingKeys(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C0802884(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for HistogramBinFrequencyPair.CodingKeys);
}

uint64_t HistogramBinFrequencyPair<A>.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD v29[2];
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  char v37;
  char v38;

  v29[0] = a4;
  v30 = *(_QWORD *)(a2 - 8);
  v31 = a3;
  MEMORY[0x1E0C80A78](a1);
  sub_1C0778564();
  v32 = v8 - v7;
  v12 = type metadata accessor for HistogramBinFrequencyPair.CodingKeys(255, v9, v10, v11);
  MEMORY[0x1C3BA8174](&unk_1C107D820, v12);
  v33 = sub_1C1070B10();
  v29[1] = *(_QWORD *)(v33 - 8);
  MEMORY[0x1E0C80A78](v33);
  v14 = (char *)v29 - v13;
  v34 = a2;
  v17 = type metadata accessor for HistogramBinFrequencyPair(0, a2, v15, v16);
  sub_1C07B46AC();
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)v29 - v19;
  sub_1C07A9480(a1, a1[3]);
  v35 = v14;
  v21 = v36;
  sub_1C1070E94();
  if (v21)
    return sub_1C0781028();
  v36 = v4;
  v22 = v20;
  v23 = v30;
  v38 = 0;
  v24 = v32;
  sub_1C1070AE0();
  (*(void (**)(char *, uint64_t, uint64_t))(v23 + 32))(v22, v24, v34);
  v37 = 1;
  sub_1C1070ABC();
  v26 = v25;
  sub_1C079E2D0();
  *(_QWORD *)&v22[*(int *)(v17 + 28)] = v26;
  v27 = v36;
  (*(void (**)(_QWORD, char *, uint64_t))(v36 + 16))(v29[0], v22, v17);
  sub_1C0781028();
  return (*(uint64_t (**)(char *, uint64_t))(v27 + 8))(v22, v17);
}

uint64_t type metadata accessor for HistogramBinFrequencyPair(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C0802884(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for HistogramBinFrequencyPair);
}

uint64_t sub_1C0866C3C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  return HistogramBinFrequencyPair<A>.init(from:)(a1, *(_QWORD *)(a2 + 16), *(_QWORD *)(a3 - 8), a4);
}

uint64_t sub_1C0866C58(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return HistogramBinFrequencyPair<A>.encode(to:)(a1, a2, a3, *(_QWORD *)(a3 - 16));
}

BOOL static HistogramBinFrequencyPair<A>.== infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  if ((sub_1C106FAA8() & 1) == 0)
    return 0;
  v8 = type metadata accessor for HistogramBinFrequencyPair(0, a3, v6, v7);
  return *(double *)(a1 + *(int *)(v8 + 28)) == *(double *)(a2 + *(int *)(v8 + 28));
}

BOOL sub_1C0866CCC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return static HistogramBinFrequencyPair<A>.== infix(_:_:)(a1, a2, *(_QWORD *)(a3 + 16));
}

uint64_t sub_1C0866CD8()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1C0866D50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 24))();
  *(_QWORD *)((*(_QWORD *)(v5 + 64) + 7 + a1) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((*(_QWORD *)(v5 + 64) + 7 + a2) & 0xFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_1C0866DAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 40))();
  *(_QWORD *)((*(_QWORD *)(v5 + 64) + 7 + a1) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((*(_QWORD *)(v5 + 64) + 7 + a2) & 0xFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_1C0866E08(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  unsigned int v8;
  uint64_t v9;

  if (!a2)
    return 0;
  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned int *)(v5 + 84);
  if (v6 >= a2)
  {
    if ((_DWORD)v6)
      return sub_1C07B2D80(a1, v6, v4);
    return 0;
  }
  if (((((*(_QWORD *)(v5 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 8) & 0xFFFFFFF8) != 0)
    v7 = 2;
  else
    v7 = a2 - v6 + 1;
  if (v7 >= 0x10000)
    v8 = 4;
  else
    v8 = 2;
  if (v7 < 0x100)
    v8 = 1;
  if (v7 >= 2)
    v9 = v8;
  else
    v9 = 0;
  return ((uint64_t (*)(void))((char *)&loc_1C0866E78 + 4 * byte_1C107D5F0[v9]))();
}

void sub_1C0866ECC(unsigned int *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6;
  unsigned int v7;
  size_t v8;
  unsigned int v9;
  unsigned int v10;
  int v11;
  int v12;
  unsigned int v13;

  v6 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v7 = *(_DWORD *)(v6 + 84);
  v8 = ((*(_QWORD *)(v6 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v7 >= a3)
  {
    v12 = 0u;
  }
  else
  {
    v9 = a3 - v7;
    if (((*(_DWORD *)(v6 + 64) + 7) & 0xFFFFFFF8) == 0xFFFFFFF8)
      v10 = v9 + 1;
    else
      v10 = 2;
    if (v10 >= 0x10000)
      v11 = 4;
    else
      v11 = 2;
    if (v10 < 0x100)
      v11 = 1;
    if (v10 >= 2)
      v12 = v11;
    else
      v12 = 0;
  }
  if (a2 > v7)
  {
    if ((_DWORD)v8)
    {
      v13 = ~v7 + a2;
      bzero(a1, v8);
      *a1 = v13;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X10 }
}

uint64_t sub_1C0866FAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  *(_BYTE *)(v4 + v5) = 0;
  if ((_DWORD)a2)
    return sub_1C07B2D8C(v4, a2, a3, a4);
  return result;
}

void sub_1C0866FE8(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_WORD *)(v2 + v3) = 0;
  if (!a2)
    JUMPOUT(0x1C0866FF0);
  JUMPOUT(0x1C0866FD0);
}

uint64_t destroy for BehaviorHistogramRetriever(uint64_t a1)
{
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0(a1);
  return _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0(a1 + 40);
}

uint64_t initializeWithCopy for BehaviorHistogramRetriever(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  __int128 v5;

  v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  v5 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 64) = v5;
  (**(void (***)(uint64_t, uint64_t))(v5 - 8))(a1 + 40, a2 + 40);
  return a1;
}

uint64_t *assignWithCopy for BehaviorHistogramRetriever(uint64_t *a1, uint64_t *a2)
{
  sub_1C07E6484(a1, a2);
  sub_1C07E6484(a1 + 5, a2 + 5);
  return a1;
}

void *initializeWithTake for BehaviorHistogramRetriever(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x50uLL);
}

uint64_t assignWithTake for BehaviorHistogramRetriever(uint64_t a1, uint64_t a2)
{
  __int128 v4;

  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0(a1);
  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0(a1 + 40);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  return a1;
}

uint64_t getEnumTagSinglePayload for BehaviorHistogramRetriever(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 80))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 24);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for BehaviorHistogramRetriever(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 80) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 80) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for BehaviorHistogramRetriever()
{
  return &type metadata for BehaviorHistogramRetriever;
}

uint64_t sub_1C08671C0()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_1C08671C8(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1C0867214 + 4 * byte_1C107D604[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1C0867248 + 4 * byte_1C107D5FF[v4]))();
}

uint64_t sub_1C0867248(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C0867250(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C0867258);
  return result;
}

uint64_t sub_1C0867264(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C086726CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1C0867270(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C0867278(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void sub_1C0867284()
{
  JUMPOUT(0x1C3BA8174);
}

void sub_1C0867294()
{
  JUMPOUT(0x1C3BA8174);
}

void sub_1C08672A4()
{
  JUMPOUT(0x1C3BA8174);
}

void sub_1C08672B4(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1C08672F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  type metadata accessor for TimeOfDayBehaviorHistogram(0);
  sub_1C07A4454();
  if (!v1)
  {
    sub_1C079A83C();
    MEMORY[0x1E0C80A78](v3);
    sub_1C0799794();
    MEMORY[0x1E0C80A78](v4);
    sub_1C07A6828();
    *(_QWORD *)(v5 - 16) = sub_1C0869914;
    *(_QWORD *)(v5 - 8) = v6;
    sub_1C07AD078(v8, (uint64_t (*)(_BYTE *, uint64_t))sub_1C08699F0, v9, v2 - 168, sub_1C08CE490);
    sub_1C079CBEC(v10);
    v0 = v11;
    sub_1C0778580();
  }
  return v0;
}

#error "1C0867A84: call analysis failed (funcsize=122)"

void sub_1C0867B24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32)
{
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t (*v36)(uint64_t, uint64_t, char *);
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t (*v42)(_QWORD);
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  BOOL v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t (*v93)(uint64_t, uint64_t, char *);
  uint64_t v94;

  sub_1C07A5C04();
  a31 = v34;
  a32 = v35;
  v93 = v36;
  v38 = v37;
  v39 = v32;
  v41 = v40;
  v43 = v42(0);
  v44 = v39[3];
  v45 = v39[4];
  sub_1C07A9480(v39, v44);
  v46 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v45 + 8))(v43, v41, v43, v38, v44, v45);
  if (v33)
    goto LABEL_3;
  v47 = v46;
  sub_1C07ACF80(&qword_1ED762510);
  sub_1C106ADE0();
  v48 = swift_allocObject();
  *(_OWORD *)(v48 + 16) = xmmword_1C1079220;
  sub_1C106ADD4();
  sub_1C07A9480(v39 + 5, v39[8]);
  v49 = sub_1C0836950(v41);
  v50 = *(_QWORD *)(v49 + 16);
  if (!v50)
  {
LABEL_17:
    sub_1C077FA84();
    swift_bridgeObjectRelease();
    sub_1C0778580();
LABEL_3:
    sub_1C07A3758();
    return;
  }
  v51 = v49 + 32;
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  v92 = v47;
  while (1)
  {
    v52 = sub_1C07DFF44(v51, (uint64_t)&a15);
    sub_1C07A5180(v52, v53, v54, v55, v56, v57);
    sub_1C07A5180(v58, v59, v60, v61, v62, v63);
    swift_retain();
    v64 = v93(v48, v47, &a15);
    v94 = v50;
    sub_1C079D2C0(v64, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1C0826EB0, v65, v66, v67, v68, v69, v70);
    sub_1C077C09C();
    sub_1C07879C4();
    sub_1C0782144();
    if (v73)
      break;
    v74 = v71;
    v75 = v72;
    sub_1C07ACF80(&qword_1EF6323F0);
    v76 = sub_1C078F208();
    if ((v76 & 1) != 0)
    {
      sub_1C0790EC0();
      sub_1C0789DBC();
      if (!v82)
        goto LABEL_20;
      v74 = v76;
    }
    v83 = a22;
    if ((v75 & 1) != 0)
    {
      sub_1C07937A8();
      *(_QWORD *)(v75 + 8 * v74) = v64;
    }
    else
    {
      v84 = sub_1C07A0850(v76, v77, v78, v79, v80, v81);
      *(_QWORD *)(*(_QWORD *)(v83 + 56) + 8 * v74) = v64;
      v90 = *(_QWORD *)(v83 + 16);
      v73 = __OFADD__(v90, 1);
      v91 = v90 + 1;
      if (v73)
        goto LABEL_19;
      *(_QWORD *)(v83 + 16) = v91;
      sub_1C07A5180(v84, v85, v86, v87, v88, v89);
    }
    sub_1C077970C();
    sub_1C07ADB50((uint64_t)&a15);
    sub_1C07ADB50((uint64_t)&a15);
    v51 += 48;
    v50 = v94 - 1;
    v47 = v92;
    if (v94 == 1)
    {
      sub_1C0778580();
      goto LABEL_17;
    }
  }
  __break(1u);
LABEL_19:
  __break(1u);
LABEL_20:
  sub_1C1070D44();
  __break(1u);
}

uint64_t sub_1C0867DC8(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  uint64_t v18;
  uint64_t (*v19)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, char);
  uint64_t v20;
  uint64_t v21;
  uint64_t (*v22)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, char);
  unint64_t v23;
  char v24;
  unint64_t v25;
  char v26;
  unint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  BOOL v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _BYTE v35[48];
  _QWORD *v36;

  v3 = v1;
  v5 = type metadata accessor for PreviousBehaviorHistogram(0);
  v6 = v3[3];
  v7 = v3[4];
  v8 = sub_1C07A9480(v3, v6);
  v9 = v5;
  v10 = v5;
  v11 = v8;
  v12 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, _UNKNOWN **, uint64_t, uint64_t))(v7 + 8))(v9, a1, v10, &off_1E7A0EFF8, v6, v7);
  if (v2)
    return (uint64_t)v11;
  v13 = v12;
  v14 = sub_1C085FB94();
  sub_1C07A9480(v3 + 5, v3[8]);
  v15 = sub_1C0836950(a1);
  v17 = *(_QWORD *)(v15 + 16);
  if (!v17)
  {
    v11 = (_QWORD *)MEMORY[0x1E0DEE9E0];
LABEL_17:
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return (uint64_t)v11;
  }
  v18 = v15 + 32;
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  v11 = (_QWORD *)MEMORY[0x1E0DEE9E0];
  v19 = sub_1C0826EB0;
  v33 = v13;
  v34 = v14;
  while (1)
  {
    sub_1C07DFF44(v18, (uint64_t)v35);
    sub_1C08384CC((uint64_t)v35, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))v19);
    sub_1C08384CC((uint64_t)v35, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))v19);
    swift_retain();
    sub_1C0863F14(v14, v13, (uint64_t)v35);
    v21 = v20;
    v22 = v19;
    sub_1C08384CC((uint64_t)v35, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))v19);
    swift_isUniquelyReferenced_nonNull_native();
    v36 = v11;
    v23 = sub_1C07DCF70();
    if (__OFADD__(v11[2], (v24 & 1) == 0))
      break;
    v25 = v23;
    v26 = v24;
    sub_1C07ACF80(&qword_1EF632400);
    if ((sub_1C107090C() & 1) != 0)
    {
      v27 = sub_1C07DCF70();
      if ((v26 & 1) != (v28 & 1))
        goto LABEL_20;
      v25 = v27;
    }
    v11 = v36;
    if ((v26 & 1) != 0)
    {
      v29 = v36[7];
      swift_bridgeObjectRelease();
      *(_QWORD *)(v29 + 8 * v25) = v21;
      v19 = v22;
    }
    else
    {
      v36[(v25 >> 6) + 8] |= 1 << v25;
      sub_1C07DFF44((uint64_t)v35, v11[6] + 48 * v25);
      *(_QWORD *)(v11[7] + 8 * v25) = v21;
      v30 = v11[2];
      v31 = __OFADD__(v30, 1);
      v32 = v30 + 1;
      if (v31)
        goto LABEL_19;
      v11[2] = v32;
      v19 = v22;
      sub_1C08384CC((uint64_t)v35, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))v22);
    }
    swift_bridgeObjectRelease();
    sub_1C08384CC((uint64_t)v35, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1C0826F50);
    sub_1C08384CC((uint64_t)v35, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1C0826F50);
    v18 += 48;
    --v17;
    v13 = v33;
    v14 = v34;
    if (!v17)
    {
      swift_bridgeObjectRelease();
      goto LABEL_17;
    }
  }
  __break(1u);
LABEL_19:
  __break(1u);
LABEL_20:
  result = sub_1C1070D44();
  __break(1u);
  return result;
}

uint64_t sub_1C08680F4(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t result;
  uint64_t v18;
  uint64_t v19;
  uint64_t (*v20)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, char);
  uint64_t v21;
  uint64_t (*v22)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, char);
  unint64_t v23;
  char v24;
  unint64_t v25;
  char v26;
  unint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  BOOL v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _BYTE v35[48];
  _QWORD *v36;

  v3 = v1;
  v5 = type metadata accessor for SpecificGeoHashBehaviorHistogram(0);
  v6 = v3[3];
  v7 = v3[4];
  v8 = sub_1C07A9480(v3, v6);
  v9 = v5;
  v10 = v5;
  v11 = v8;
  v12 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, _UNKNOWN **, uint64_t, uint64_t))(v7 + 8))(v9, a1, v10, &off_1E7A0ED38, v6, v7);
  if (v2)
    return (uint64_t)v11;
  v13 = v12;
  sub_1C0865DF0();
  v15 = v14;
  sub_1C07A9480(v3 + 5, v3[8]);
  v16 = sub_1C0836950(a1);
  v18 = *(_QWORD *)(v16 + 16);
  if (!v18)
  {
    v11 = (_QWORD *)MEMORY[0x1E0DEE9E0];
LABEL_17:
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return (uint64_t)v11;
  }
  v19 = v16 + 32;
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  v11 = (_QWORD *)MEMORY[0x1E0DEE9E0];
  v20 = sub_1C0826EB0;
  v33 = v13;
  v34 = v15;
  while (1)
  {
    sub_1C07DFF44(v19, (uint64_t)v35);
    sub_1C08384CC((uint64_t)v35, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))v20);
    sub_1C08384CC((uint64_t)v35, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))v20);
    swift_retain();
    v21 = sub_1C0863BF0(v15, v13, (uint64_t)v35, (void (*)(_OWORD *, uint64_t, _QWORD, uint64_t))sub_1C0850BEC);
    v22 = v20;
    sub_1C08384CC((uint64_t)v35, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))v20);
    swift_isUniquelyReferenced_nonNull_native();
    v36 = v11;
    v23 = sub_1C07DCF70();
    if (__OFADD__(v11[2], (v24 & 1) == 0))
      break;
    v25 = v23;
    v26 = v24;
    sub_1C07ACF80(&qword_1EF632408);
    if ((sub_1C107090C() & 1) != 0)
    {
      v27 = sub_1C07DCF70();
      if ((v26 & 1) != (v28 & 1))
        goto LABEL_20;
      v25 = v27;
    }
    v11 = v36;
    if ((v26 & 1) != 0)
    {
      v29 = v36[7];
      swift_bridgeObjectRelease();
      *(_QWORD *)(v29 + 8 * v25) = v21;
      v20 = v22;
    }
    else
    {
      v36[(v25 >> 6) + 8] |= 1 << v25;
      sub_1C07DFF44((uint64_t)v35, v11[6] + 48 * v25);
      *(_QWORD *)(v11[7] + 8 * v25) = v21;
      v30 = v11[2];
      v31 = __OFADD__(v30, 1);
      v32 = v30 + 1;
      if (v31)
        goto LABEL_19;
      v11[2] = v32;
      v20 = v22;
      sub_1C08384CC((uint64_t)v35, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))v22);
    }
    swift_bridgeObjectRelease();
    sub_1C08384CC((uint64_t)v35, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1C0826F50);
    sub_1C08384CC((uint64_t)v35, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1C0826F50);
    v19 += 48;
    --v18;
    v13 = v33;
    v15 = v34;
    if (!v18)
    {
      swift_bridgeObjectRelease();
      goto LABEL_17;
    }
  }
  __break(1u);
LABEL_19:
  __break(1u);
LABEL_20:
  result = sub_1C1070D44();
  __break(1u);
  return result;
}

uint64_t sub_1C0868428(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t result;
  uint64_t v18;
  uint64_t v19;
  uint64_t (*v20)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, char);
  uint64_t v21;
  uint64_t (*v22)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, char);
  unint64_t v23;
  char v24;
  unint64_t v25;
  char v26;
  unint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  BOOL v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _BYTE v35[48];
  _QWORD *v36;

  v3 = v1;
  v5 = type metadata accessor for CoarseGeoHashBehaviorHistogram(0);
  v6 = v3[3];
  v7 = v3[4];
  v8 = sub_1C07A9480(v3, v6);
  v9 = v5;
  v10 = v5;
  v11 = v8;
  v12 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, _UNKNOWN **, uint64_t, uint64_t))(v7 + 8))(v9, a1, v10, &off_1E7A0EC38, v6, v7);
  if (v2)
    return (uint64_t)v11;
  v13 = v12;
  sub_1C0865DF0();
  v15 = v14;
  sub_1C07A9480(v3 + 5, v3[8]);
  v16 = sub_1C0836950(a1);
  v18 = *(_QWORD *)(v16 + 16);
  if (!v18)
  {
    v11 = (_QWORD *)MEMORY[0x1E0DEE9E0];
LABEL_17:
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return (uint64_t)v11;
  }
  v19 = v16 + 32;
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  v11 = (_QWORD *)MEMORY[0x1E0DEE9E0];
  v20 = sub_1C0826EB0;
  v33 = v13;
  v34 = v15;
  while (1)
  {
    sub_1C07DFF44(v19, (uint64_t)v35);
    sub_1C08384CC((uint64_t)v35, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))v20);
    sub_1C08384CC((uint64_t)v35, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))v20);
    swift_retain();
    v21 = sub_1C0863BF0(v15, v13, (uint64_t)v35, (void (*)(_OWORD *, uint64_t, _QWORD, uint64_t))sub_1C0850A18);
    v22 = v20;
    sub_1C08384CC((uint64_t)v35, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))v20);
    swift_isUniquelyReferenced_nonNull_native();
    v36 = v11;
    v23 = sub_1C07DCF70();
    if (__OFADD__(v11[2], (v24 & 1) == 0))
      break;
    v25 = v23;
    v26 = v24;
    sub_1C07ACF80(&qword_1EF632408);
    if ((sub_1C107090C() & 1) != 0)
    {
      v27 = sub_1C07DCF70();
      if ((v26 & 1) != (v28 & 1))
        goto LABEL_20;
      v25 = v27;
    }
    v11 = v36;
    if ((v26 & 1) != 0)
    {
      v29 = v36[7];
      swift_bridgeObjectRelease();
      *(_QWORD *)(v29 + 8 * v25) = v21;
      v20 = v22;
    }
    else
    {
      v36[(v25 >> 6) + 8] |= 1 << v25;
      sub_1C07DFF44((uint64_t)v35, v11[6] + 48 * v25);
      *(_QWORD *)(v11[7] + 8 * v25) = v21;
      v30 = v11[2];
      v31 = __OFADD__(v30, 1);
      v32 = v30 + 1;
      if (v31)
        goto LABEL_19;
      v11[2] = v32;
      v20 = v22;
      sub_1C08384CC((uint64_t)v35, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))v22);
    }
    swift_bridgeObjectRelease();
    sub_1C08384CC((uint64_t)v35, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1C0826F50);
    sub_1C08384CC((uint64_t)v35, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1C0826F50);
    v19 += 48;
    --v18;
    v13 = v33;
    v15 = v34;
    if (!v18)
    {
      swift_bridgeObjectRelease();
      goto LABEL_17;
    }
  }
  __break(1u);
LABEL_19:
  __break(1u);
LABEL_20:
  result = sub_1C1070D44();
  __break(1u);
  return result;
}

uint64_t sub_1C086875C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t result;
  uint64_t v18;
  uint64_t v19;
  uint64_t (*v20)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, char);
  uint64_t v21;
  uint64_t (*v22)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, char);
  unint64_t v23;
  char v24;
  unint64_t v25;
  char v26;
  unint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  BOOL v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _BYTE v35[48];
  _QWORD *v36;

  v3 = v1;
  v5 = type metadata accessor for LargeGeoHashBehaviorHistogram(0);
  v6 = v3[3];
  v7 = v3[4];
  v8 = sub_1C07A9480(v3, v6);
  v9 = v5;
  v10 = v5;
  v11 = v8;
  v12 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, _UNKNOWN **, uint64_t, uint64_t))(v7 + 8))(v9, a1, v10, &off_1E7A0EB38, v6, v7);
  if (v2)
    return (uint64_t)v11;
  v13 = v12;
  sub_1C0865DF0();
  v15 = v14;
  sub_1C07A9480(v3 + 5, v3[8]);
  v16 = sub_1C0836950(a1);
  v18 = *(_QWORD *)(v16 + 16);
  if (!v18)
  {
    v11 = (_QWORD *)MEMORY[0x1E0DEE9E0];
LABEL_17:
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return (uint64_t)v11;
  }
  v19 = v16 + 32;
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  v11 = (_QWORD *)MEMORY[0x1E0DEE9E0];
  v20 = sub_1C0826EB0;
  v33 = v13;
  v34 = v15;
  while (1)
  {
    sub_1C07DFF44(v19, (uint64_t)v35);
    sub_1C08384CC((uint64_t)v35, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))v20);
    sub_1C08384CC((uint64_t)v35, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))v20);
    swift_retain();
    v21 = sub_1C0863BF0(v15, v13, (uint64_t)v35, (void (*)(_OWORD *, uint64_t, _QWORD, uint64_t))sub_1C0850A18);
    v22 = v20;
    sub_1C08384CC((uint64_t)v35, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))v20);
    swift_isUniquelyReferenced_nonNull_native();
    v36 = v11;
    v23 = sub_1C07DCF70();
    if (__OFADD__(v11[2], (v24 & 1) == 0))
      break;
    v25 = v23;
    v26 = v24;
    sub_1C07ACF80(&qword_1EF632408);
    if ((sub_1C107090C() & 1) != 0)
    {
      v27 = sub_1C07DCF70();
      if ((v26 & 1) != (v28 & 1))
        goto LABEL_20;
      v25 = v27;
    }
    v11 = v36;
    if ((v26 & 1) != 0)
    {
      v29 = v36[7];
      swift_bridgeObjectRelease();
      *(_QWORD *)(v29 + 8 * v25) = v21;
      v20 = v22;
    }
    else
    {
      v36[(v25 >> 6) + 8] |= 1 << v25;
      sub_1C07DFF44((uint64_t)v35, v11[6] + 48 * v25);
      *(_QWORD *)(v11[7] + 8 * v25) = v21;
      v30 = v11[2];
      v31 = __OFADD__(v30, 1);
      v32 = v30 + 1;
      if (v31)
        goto LABEL_19;
      v11[2] = v32;
      v20 = v22;
      sub_1C08384CC((uint64_t)v35, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))v22);
    }
    swift_bridgeObjectRelease();
    sub_1C08384CC((uint64_t)v35, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1C0826F50);
    sub_1C08384CC((uint64_t)v35, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1C0826F50);
    v19 += 48;
    --v18;
    v13 = v33;
    v15 = v34;
    if (!v18)
    {
      swift_bridgeObjectRelease();
      goto LABEL_17;
    }
  }
  __break(1u);
LABEL_19:
  __break(1u);
LABEL_20:
  result = sub_1C1070D44();
  __break(1u);
  return result;
}

uint64_t sub_1C0868A90(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t result;
  uint64_t v18;
  uint64_t v19;
  uint64_t (*v20)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, char);
  uint64_t (*v21)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, char);
  uint64_t (*v22)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, char);
  unint64_t v23;
  char v24;
  unint64_t v25;
  char v26;
  unint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  BOOL v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _BYTE v35[48];
  _QWORD *v36;

  v3 = v1;
  v5 = type metadata accessor for LocationOfInterestBehaviorHistogram(0);
  v6 = v3[3];
  v7 = v3[4];
  v8 = sub_1C07A9480(v3, v6);
  v9 = v5;
  v10 = v5;
  v11 = v8;
  v12 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, _UNKNOWN **, uint64_t, uint64_t))(v7 + 8))(v9, a1, v10, &off_1E7A0EA38, v6, v7);
  if (v2)
    return (uint64_t)v11;
  v13 = v12;
  sub_1C08662D4();
  v15 = v14;
  sub_1C07A9480(v3 + 5, v3[8]);
  v16 = sub_1C0836950(a1);
  v18 = *(_QWORD *)(v16 + 16);
  if (!v18)
  {
    v11 = (_QWORD *)MEMORY[0x1E0DEE9E0];
LABEL_17:
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return (uint64_t)v11;
  }
  v19 = v16 + 32;
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  v11 = (_QWORD *)MEMORY[0x1E0DEE9E0];
  v20 = sub_1C0826EB0;
  v33 = v13;
  v34 = v15;
  while (1)
  {
    sub_1C07DFF44(v19, (uint64_t)v35);
    sub_1C08384CC((uint64_t)v35, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))v20);
    sub_1C08384CC((uint64_t)v35, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))v20);
    swift_retain();
    v21 = sub_1C0863828(v15, v13, (uint64_t)v35);
    v22 = v20;
    sub_1C08384CC((uint64_t)v35, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))v20);
    swift_isUniquelyReferenced_nonNull_native();
    v36 = v11;
    v23 = sub_1C07DCF70();
    if (__OFADD__(v11[2], (v24 & 1) == 0))
      break;
    v25 = v23;
    v26 = v24;
    sub_1C07ACF80(&qword_1EF632418);
    if ((sub_1C107090C() & 1) != 0)
    {
      v27 = sub_1C07DCF70();
      if ((v26 & 1) != (v28 & 1))
        goto LABEL_20;
      v25 = v27;
    }
    v11 = v36;
    if ((v26 & 1) != 0)
    {
      v29 = v36[7];
      swift_bridgeObjectRelease();
      *(_QWORD *)(v29 + 8 * v25) = v21;
      v20 = v22;
    }
    else
    {
      v36[(v25 >> 6) + 8] |= 1 << v25;
      sub_1C07DFF44((uint64_t)v35, v11[6] + 48 * v25);
      *(_QWORD *)(v11[7] + 8 * v25) = v21;
      v30 = v11[2];
      v31 = __OFADD__(v30, 1);
      v32 = v30 + 1;
      if (v31)
        goto LABEL_19;
      v11[2] = v32;
      v20 = v22;
      sub_1C08384CC((uint64_t)v35, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))v22);
    }
    swift_bridgeObjectRelease();
    sub_1C08384CC((uint64_t)v35, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1C0826F50);
    sub_1C08384CC((uint64_t)v35, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1C0826F50);
    v19 += 48;
    --v18;
    v13 = v33;
    v15 = v34;
    if (!v18)
    {
      swift_bridgeObjectRelease();
      goto LABEL_17;
    }
  }
  __break(1u);
LABEL_19:
  __break(1u);
LABEL_20:
  result = sub_1C1070D44();
  __break(1u);
  return result;
}

#error "1C0868F10: call analysis failed (funcsize=119)"

uint64_t sub_1C0868FAC(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t result;
  uint64_t v18;
  uint64_t v19;
  uint64_t (*v20)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, char);
  uint64_t v21;
  uint64_t (*v22)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, char);
  unint64_t v23;
  char v24;
  unint64_t v25;
  char v26;
  unint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  BOOL v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _BYTE v35[48];
  _QWORD *v36;

  v3 = v1;
  v5 = type metadata accessor for MotionStateBehaviorHistogram(0);
  v6 = v3[3];
  v7 = v3[4];
  v8 = sub_1C07A9480(v3, v6);
  v9 = v5;
  v10 = v5;
  v11 = v8;
  v12 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, _UNKNOWN **, uint64_t, uint64_t))(v7 + 8))(v9, a1, v10, &off_1E7A0EF38, v6, v7);
  if (v2)
    return (uint64_t)v11;
  v13 = v12;
  sub_1C085FECC();
  v15 = v14;
  sub_1C07A9480(v3 + 5, v3[8]);
  v16 = sub_1C0836950(a1);
  v18 = *(_QWORD *)(v16 + 16);
  if (!v18)
  {
    v11 = (_QWORD *)MEMORY[0x1E0DEE9E0];
LABEL_17:
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return (uint64_t)v11;
  }
  v19 = v16 + 32;
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  v11 = (_QWORD *)MEMORY[0x1E0DEE9E0];
  v20 = sub_1C0826EB0;
  v33 = v13;
  v34 = v15;
  while (1)
  {
    sub_1C07DFF44(v19, (uint64_t)v35);
    sub_1C08384CC((uint64_t)v35, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))v20);
    sub_1C08384CC((uint64_t)v35, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))v20);
    swift_retain();
    v21 = sub_1C0863120(v15, v13, (uint64_t)v35);
    v22 = v20;
    sub_1C08384CC((uint64_t)v35, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))v20);
    swift_isUniquelyReferenced_nonNull_native();
    v36 = v11;
    v23 = sub_1C07DCF70();
    if (__OFADD__(v11[2], (v24 & 1) == 0))
      break;
    v25 = v23;
    v26 = v24;
    sub_1C07ACF80(&qword_1EF632428);
    if ((sub_1C107090C() & 1) != 0)
    {
      v27 = sub_1C07DCF70();
      if ((v26 & 1) != (v28 & 1))
        goto LABEL_20;
      v25 = v27;
    }
    v11 = v36;
    if ((v26 & 1) != 0)
    {
      v29 = v36[7];
      swift_bridgeObjectRelease();
      *(_QWORD *)(v29 + 8 * v25) = v21;
      v20 = v22;
    }
    else
    {
      v36[(v25 >> 6) + 8] |= 1 << v25;
      sub_1C07DFF44((uint64_t)v35, v11[6] + 48 * v25);
      *(_QWORD *)(v11[7] + 8 * v25) = v21;
      v30 = v11[2];
      v31 = __OFADD__(v30, 1);
      v32 = v30 + 1;
      if (v31)
        goto LABEL_19;
      v11[2] = v32;
      v20 = v22;
      sub_1C08384CC((uint64_t)v35, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))v22);
    }
    swift_bridgeObjectRelease();
    sub_1C08384CC((uint64_t)v35, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1C0826F50);
    sub_1C08384CC((uint64_t)v35, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1C0826F50);
    v19 += 48;
    --v18;
    v13 = v33;
    v15 = v34;
    if (!v18)
    {
      swift_bridgeObjectRelease();
      goto LABEL_17;
    }
  }
  __break(1u);
LABEL_19:
  __break(1u);
LABEL_20:
  result = sub_1C1070D44();
  __break(1u);
  return result;
}

uint64_t sub_1C08692D8(uint64_t a1)
{
  return sub_1C0869310(a1, &qword_1EF62DAB0, (id *)&qword_1EF6322D8);
}

uint64_t sub_1C08692F4(uint64_t a1)
{
  return sub_1C0869310(a1, &qword_1EF62DAB8, (id *)&qword_1EF6322E0);
}

uint64_t sub_1C0869310(uint64_t a1, _QWORD *a2, id *a3)
{
  id v4;
  void *v5;
  id v6;
  uint64_t v7;

  if (*a2 != -1)
    swift_once();
  v4 = *a3;
  v5 = (void *)sub_1C106AD38();
  v6 = objc_msgSend(v4, sel_stringFromDate_, v5);

  v7 = sub_1C106FB14();
  return v7;
}

uint64_t sub_1C08693AC(uint64_t a1)
{
  return sub_1C0869310(a1, &qword_1EF62DAC0, (id *)qword_1EF6322E8);
}

uint64_t sub_1C08693C8()
{
  return sub_1C08693EC();
}

uint64_t sub_1C08693EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  __int16 v6;
  __int16 v7;
  uint64_t v8;

  v0 = sub_1C106AFE4();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  sub_1C0778564();
  v4 = v3 - v2;
  v5 = (void *)MEMORY[0x1C3BA79F4]();
  sub_1C106AFC0();
  sub_1C085F354();
  v7 = v6;
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v4, v0);
  if (v7)
    v8 = 0x7961646B656577;
  else
    v8 = 0x646E656B656577;
  objc_autoreleasePoolPop(v5);
  return v8;
}

uint64_t sub_1C08694B4(uint64_t a1)
{
  _BYTE v2[48];

  sub_1C07DFF44(a1, (uint64_t)v2);
  return sub_1C0869700((uint64_t)v2);
}

uint64_t sub_1C08694DC()
{
  return sub_1C08696B4();
}

uint64_t sub_1C08694E4()
{
  return sub_1C086965C();
}

uint64_t sub_1C08694F0(uint64_t *a1)
{
  uint64_t v2;

  v2 = *a1;
  return sub_1C0869520(&v2);
}

uint64_t sub_1C0869518(uint64_t *a1)
{
  return sub_1C08694F0(a1);
}

uint64_t sub_1C0869520(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t result;
  unsigned int v4;
  uint64_t v5;

  v1 = *a1;
  v2 = *a1 - 1;
  result = 0x6E776F6E6B6E55;
  switch(v2)
  {
    case 0:
      return result;
    case 1:
      return 0x616E6F6974617453;
    case 2:
    case 4:
    case 5:
    case 6:
      goto LABEL_6;
    case 3:
      v4 = 1802264919;
      return v4 | 0x676E6900000000;
    case 7:
      v4 = 1852732754;
      return v4 | 0x676E6900000000;
    default:
      if (v1 == 16)
      {
        v4 = 1818458435;
        return v4 | 0x676E6900000000;
      }
      else if (v1 == 32)
      {
        return 0x69746F6D6F747541;
      }
      else
      {
LABEL_6:
        if (qword_1ED754E70 != -1)
        {
          v5 = v1;
          swift_once();
          v1 = v5;
        }
        if (qword_1ED754E68 == v1)
          return 0xD000000000000014;
        else
          return 0xD000000000000016;
      }
  }
}

uint64_t sub_1C086965C()
{
  sub_1C10708F4();
  return 0;
}

uint64_t sub_1C08696A8(uint64_t a1)
{
  return sub_1C086975C(a1, (void (*)(_QWORD))MEMORY[0x1E0CB0998]);
}

uint64_t sub_1C08696B4()
{
  sub_1C10708F4();
  return 0;
}

uint64_t sub_1C0869700(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;

  v3 = 0;
  v4 = 0xE000000000000000;
  sub_1C07DFF44(a1, (uint64_t)&v2);
  sub_1C10708F4();
  return v3;
}

uint64_t sub_1C0869750(uint64_t a1)
{
  return sub_1C086975C(a1, (void (*)(_QWORD))MEMORY[0x1E0CB0870]);
}

uint64_t sub_1C086975C(uint64_t a1, void (*a2)(_QWORD))
{
  a2(0);
  sub_1C10708F4();
  return 0;
}

void sub_1C08697B4(uint64_t a1, uint64_t a2)
{
  sub_1C08697D4(a1, a2);
}

void sub_1C08697D4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  void (*v3)(uint64_t);

  v2 = sub_1C079B478(a1, a2);
  v3(v2);
  sub_1C0821B64();
  sub_1C0776784();
}

void sub_1C0869804(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;

  v2 = sub_1C079B478(a1, a2);
  sub_1C0865C64(v2, v3, v4, v5, v6);
  sub_1C0821B64();
  sub_1C0776784();
}

void sub_1C0869834(uint64_t a1, uint64_t a2)
{
  sub_1C08697D4(a1, a2);
}

void sub_1C0869854(uint64_t a1, uint64_t a2)
{
  sub_1C0869804(a1, a2);
}

void sub_1C0869874(uint64_t a1, uint64_t a2)
{
  sub_1C08697D4(a1, a2);
}

void sub_1C0869894(uint64_t a1, uint64_t a2)
{
  sub_1C0869804(a1, a2);
}

uint64_t sub_1C08698B4()
{
  return sub_1C08693C8();
}

uint64_t sub_1C08698BC(uint64_t a1)
{
  return sub_1C0869310(a1, &qword_1EF62DAC0, (id *)qword_1EF6322E8);
}

uint64_t sub_1C08698E8(uint64_t a1)
{
  return sub_1C0869310(a1, &qword_1EF62DAB8, (id *)&qword_1EF6322E0);
}

uint64_t sub_1C0869914(uint64_t a1)
{
  return sub_1C0869310(a1, &qword_1EF62DAB0, (id *)&qword_1EF6322D8);
}

void sub_1C0869940(uint64_t a1)
{
  sub_1C086998C(a1, 0x616D6D3A6868, 0xE600000000000000, &qword_1EF6322D8);
}

void sub_1C086995C(uint64_t a1)
{
  sub_1C086998C(a1, 0x616D6D3A6868, 0xE600000000000000, &qword_1EF6322E0);
}

void sub_1C0869978(uint64_t a1)
{
  sub_1C086998C(a1, 17733, 0xE200000000000000, qword_1EF6322E8);
}

void sub_1C086998C(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  id v7;

  v7 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB3578]), sel_init);
  sub_1C0B8A340(a2, a3, v7);
  *a4 = v7;
}

void sub_1C08699F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  void (*v14)(char *, unint64_t, uint64_t, __n128);
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  void (*v21)(char *, uint64_t);
  void (*v22)(char *, char *, uint64_t);
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;

  v4 = sub_1C106D6CC();
  v32 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v28 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v25 - v7;
  v10.n128_f64[0] = MEMORY[0x1E0C80A78](v9);
  v33 = (char *)&v25 - v11;
  v34 = MEMORY[0x1E0DEE9D8];
  v27 = *(_QWORD *)(a1 + 16);
  if (v27)
  {
    v12 = 0;
    v31 = a2 + 56;
    v26 = a1;
    while (v12 < *(_QWORD *)(a1 + 16))
    {
      v13 = *(_QWORD *)(v32 + 72);
      v29 = (*(unsigned __int8 *)(v32 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v32 + 80);
      v30 = v12;
      v14 = *(void (**)(char *, unint64_t, uint64_t, __n128))(v32 + 16);
      v14(v33, a1 + v29 + v13 * v12, v4, v10);
      if (*(_QWORD *)(a2 + 16)
        && (sub_1C0828544((unint64_t *)&qword_1ED744A48, MEMORY[0x1E0D3C148]),
            v15 = sub_1C106FA00(),
            v16 = -1 << *(_BYTE *)(a2 + 32),
            v17 = v15 & ~v16,
            ((*(_QWORD *)(v31 + ((v17 >> 3) & 0xFFFFFFFFFFFFF8)) >> v17) & 1) != 0))
      {
        v18 = ~v16;
        while (1)
        {
          v19 = a2;
          ((void (*)(char *, unint64_t, uint64_t))v14)(v8, *(_QWORD *)(a2 + 48) + v17 * v13, v4);
          sub_1C0828544((unint64_t *)&unk_1ED744A50, MEMORY[0x1E0D3C150]);
          v20 = sub_1C106FAA8();
          v21 = *(void (**)(char *, uint64_t))(v32 + 8);
          v21(v8, v4);
          if ((v20 & 1) != 0)
            break;
          v17 = (v17 + 1) & v18;
          a2 = v19;
          if (((*(_QWORD *)(v31 + ((v17 >> 3) & 0xFFFFFFFFFFFFF8)) >> v17) & 1) == 0)
            goto LABEL_9;
        }
        v21(v33, v4);
        a2 = v19;
      }
      else
      {
LABEL_9:
        v22 = *(void (**)(char *, char *, uint64_t))(v32 + 32);
        v22(v28, v33, v4);
        v23 = v34;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1C09D331C();
          v23 = v34;
        }
        v24 = *(_QWORD *)(v23 + 16);
        if (v24 >= *(_QWORD *)(v23 + 24) >> 1)
        {
          sub_1C09D331C();
          v23 = v34;
        }
        *(_QWORD *)(v23 + 16) = v24 + 1;
        v22((char *)(v23 + v29 + v24 * v13), v28, v4);
        v34 = v23;
      }
      v12 = v30 + 1;
      a1 = v26;
      if (v30 + 1 == v27)
        goto LABEL_17;
    }
    __break(1u);
  }
  else
  {
LABEL_17:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1C0869CD8(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t, uint64_t);

  v6 = *a3;
  v7 = v3 + OBJC_IVAR____TtC24IntelligencePlatformCore16MotionStateEvent_startDate;
  v8 = sub_1C077AE98();
  v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 32);
  v9(v7, a1, v8);
  v9(v3 + OBJC_IVAR____TtC24IntelligencePlatformCore16MotionStateEvent_endDate, a2, v8);
  *(_QWORD *)(v3 + OBJC_IVAR____TtC24IntelligencePlatformCore16MotionStateEvent_motionState) = v6;
  return v3;
}

uint64_t sub_1C0869D68()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t, uint64_t);

  v1 = v0 + OBJC_IVAR____TtC24IntelligencePlatformCore16MotionStateEvent_startDate;
  v2 = sub_1C077AE98();
  v3 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8);
  v3(v1, v2);
  v3(v0 + OBJC_IVAR____TtC24IntelligencePlatformCore16MotionStateEvent_endDate, v2);
  return swift_deallocClassInstance();
}

uint64_t sub_1C0869DD4()
{
  return type metadata accessor for MotionStateEvent();
}

uint64_t type metadata accessor for MotionStateEvent()
{
  uint64_t result;

  result = qword_1EF632458;
  if (!qword_1EF632458)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1C0869E14()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1C106ADE0();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

id sub_1C0869E90(uint64_t a1, void (*a2)(char *, _QWORD, uint64_t), int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unsigned int v38;
  void (*v39)(char *, char *, uint64_t);
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void (*v45)(char *, char *, uint64_t);
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  id v49;
  void (*v50)(uint64_t, uint64_t);
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  unsigned int v59;
  unsigned int v60;
  void (*v61)(char *, char *, uint64_t);
  uint64_t v62;
  uint64_t v63;
  void (*v64)(char *, _QWORD, uint64_t);
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;

  v66 = a4;
  LODWORD(v65) = a3;
  v64 = a2;
  v5 = sub_1C106D6CC();
  v63 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v52 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v52 - v9;
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v52 - v12;
  v14 = sub_1C07ACF80((uint64_t *)&unk_1ED762690);
  MEMORY[0x1E0C80A78](v14);
  sub_1C077AED0();
  v54 = v15;
  MEMORY[0x1E0C80A78](v16);
  v53 = (char *)&v52 - v17;
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v52 - v19;
  MEMORY[0x1E0C80A78](v21);
  v23 = (char *)&v52 - v22;
  v24 = sub_1C077AE98();
  v25 = *(_QWORD *)(v24 - 8);
  MEMORY[0x1E0C80A78](v24);
  sub_1C077AED0();
  v58 = v26;
  MEMORY[0x1E0C80A78](v27);
  v29 = (char *)&v52 - v28;
  sub_1C077CD6C(a1, (uint64_t)v23);
  if (sub_1C07B2D80((uint64_t)v23, 1, v24) == 1)
  {
    sub_1C106AC9C();
    sub_1C077CDB4((uint64_t)v23);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v25 + 32))(v29, v23, v24);
  }
  v30 = v66;
  sub_1C077CD6C((uint64_t)v64, (uint64_t)v20);
  if (sub_1C07B2D80((uint64_t)v20, 1, v24) == 1)
  {
    sub_1C106ADA4();
    sub_1C077CDB4((uint64_t)v20);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v25 + 32))(v58, v20, v24);
  }
  v69 = MEMORY[0x1E0DEE9D8];
  v57 = v29;
  if ((v65 & 1) != 0)
    v31 = sub_1C106D6A8();
  else
    v31 = sub_1C106D684();
  v32 = v31;
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C08699F4(v32, v30);
  v34 = *(_QWORD *)(v33 + 16);
  if (v34)
  {
    v55 = v25;
    v56 = v24;
    v35 = (*(unsigned __int8 *)(v63 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v63 + 80);
    v52 = v33;
    v36 = v33 + v35;
    v37 = *(_QWORD *)(v63 + 72);
    v61 = *(void (**)(char *, char *, uint64_t))(v63 + 16);
    v62 = v37;
    v38 = *MEMORY[0x1E0D3C0F0];
    v59 = *MEMORY[0x1E0D3C0A8];
    v60 = v38;
    do
    {
      v65 = v36;
      v66 = v34;
      v39 = v61;
      ((void (*)(char *))v61)(v13);
      v64 = *(void (**)(char *, _QWORD, uint64_t))(v63 + 104);
      v64(v10, v60, v5);
      sub_1C0828544((unint64_t *)&qword_1ED744A60, MEMORY[0x1E0D3C158]);
      sub_1C07A6838();
      sub_1C07A6838();
      v41 = v67;
      v40 = v68;
      sub_1C07A0880((uint64_t)v10);
      v39(v7, v13, v5);
      if (v40 == v41)
      {
        sub_1C07A0880((uint64_t)v7);
      }
      else
      {
        v64(v10, v59, v5);
        sub_1C07A6838();
        sub_1C07A6838();
        v43 = v67;
        v42 = v68;
        sub_1C07A0880((uint64_t)v10);
        sub_1C07A0880((uint64_t)v7);
        if (v42 != v43)
        {
          v44 = v56;
          v45 = *(void (**)(char *, char *, uint64_t))(v55 + 16);
          v46 = (uint64_t)v53;
          v45(v53, v57, v56);
          sub_1C0780FD4(v46);
          v47 = v54;
          v45((char *)v54, v58, v44);
          sub_1C0780FD4(v47);
          sub_1C086C570();
        }
      }
      sub_1C07A0880((uint64_t)v13);
      v36 = v65 + v62;
      v34 = v66 - 1;
    }
    while (v66 != 1);
    swift_bridgeObjectRelease();
    v48 = v69;
    v25 = v55;
    v24 = v56;
  }
  else
  {
    swift_bridgeObjectRelease();
    v48 = MEMORY[0x1E0DEE9D8];
  }
  v49 = sub_1C086A37C(v48, (uint64_t)&unk_1E7A0FB78);
  swift_bridgeObjectRelease();
  v50 = *(void (**)(uint64_t, uint64_t))(v25 + 8);
  v50((uint64_t)v58, v24);
  v50((uint64_t)v57, v24);
  return v49;
}

id sub_1C086A370(uint64_t a1)
{
  return sub_1C086A37C(a1, (uint64_t)&unk_1E7A0FBA0);
}

id sub_1C086A37C(uint64_t a1, uint64_t a2)
{
  id v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;
  _QWORD v11[6];

  v4 = objc_allocWithZone(MEMORY[0x1E0D02478]);
  type metadata accessor for BehaviorEvent();
  v5 = (void *)sub_1C106FEEC();
  v6 = objc_msgSend(v4, sel_initWithSequence_, v5);

  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v7 = (void *)a1;
    else
      v7 = (void *)(a1 & 0xFFFFFFFFFFFFFF8);
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    sub_1C07ACF80((uint64_t *)&unk_1EF632550);
    sub_1C107096C();
    sub_1C07ADB58();
  }
  else
  {
    v7 = (void *)(a1 & 0xFFFFFFFFFFFFFF8);
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    sub_1C1070CF0();
  }
  sub_1C07ACF80((uint64_t *)&unk_1EF632550);
  sub_1C106FEEC();
  sub_1C07ADB58();
  v11[4] = sub_1C086A4DC;
  v11[5] = 0;
  v11[0] = MEMORY[0x1E0C809B0];
  v11[1] = 1107296256;
  v11[2] = sub_1C086A5A4;
  v11[3] = a2;
  v8 = _Block_copy(v11);
  v9 = objc_msgSend(v6, sel_orderedMergeWithOthers_comparator_, v7, v8);

  _Block_release(v8);
  return v9;
}

uint64_t sub_1C086A4DC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  _BYTE v5[32];

  sub_1C0788E98(a1, (uint64_t)v5);
  type metadata accessor for BehaviorEvent();
  swift_dynamicCast();
  sub_1C0788E98(a2, (uint64_t)v5);
  swift_dynamicCast();
  v3 = sub_1C106ADB0();
  swift_release();
  swift_release();
  return v3;
}

uint64_t sub_1C086A5A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t (*v5)(_QWORD *, _QWORD *);
  uint64_t v6;
  _QWORD v8[4];
  _QWORD v9[4];

  v5 = *(uint64_t (**)(_QWORD *, _QWORD *))(a1 + 32);
  v9[3] = swift_getObjectType();
  v9[0] = a2;
  v8[3] = swift_getObjectType();
  v8[0] = a3;
  swift_retain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  v6 = v5(v9, v8);
  swift_release();
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v8);
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v9);
  return v6;
}

id sub_1C086A640(uint64_t a1, void (*a2)(char *, _QWORD, uint64_t), int a3, uint64_t a4)
{
  return sub_1C0869E90(a1, a2, a3, a4);
}

void sub_1C086A668()
{
  void (*v0)(uint64_t);
  uint64_t v1;

  sub_1C07879D4();
  v1 = swift_retain();
  v0(v1);
  sub_1C079702C();
  swift_release();
  sub_1C077671C();
}

id sub_1C086A6A0()
{
  uint64_t v0;
  uint64_t v1;
  id v2;

  v1 = OBJC_IVAR____TtC24IntelligencePlatformCore22BehaviorHistoryUtility____lazy_storage___biomeLibrary;
  if (*(_QWORD *)(v0 + OBJC_IVAR____TtC24IntelligencePlatformCore22BehaviorHistoryUtility____lazy_storage___biomeLibrary))
  {
    v2 = *(id *)(v0 + OBJC_IVAR____TtC24IntelligencePlatformCore22BehaviorHistoryUtility____lazy_storage___biomeLibrary);
  }
  else
  {
    v2 = (id)BiomeLibrary();
    *(_QWORD *)(v0 + v1) = v2;
    swift_unknownObjectRetain();
    swift_unknownObjectRelease();
  }
  swift_unknownObjectRetain();
  return v2;
}

void sub_1C086A708(_QWORD *a1)
{
  uint64_t v1;
  void *v2;
  id v3;

  v2 = *(void **)(v1 + *a1);
  if (!v2)
    sub_1C086A7A0();
  v3 = v2;
  sub_1C077671C();
}

void sub_1C086A754(_QWORD *a1)
{
  uint64_t v1;
  void *v2;
  id v3;

  v2 = *(void **)(v1 + *a1);
  if (!v2)
    sub_1C086A840();
  v3 = v2;
  sub_1C077671C();
}

void sub_1C086A7A0()
{
  sub_1C07A9D68();
}

id sub_1C086A7C4()
{
  SEL *v0;
  SEL *v1;
  SEL *v2;
  id v3;
  id v4;
  id v5;

  v3 = objc_msgSend(sub_1C086A6A0(), *v2);
  sub_1C07768A0();
  v4 = objc_msgSend(v3, *v1);
  swift_unknownObjectRelease();
  v5 = objc_msgSend(v4, *v0);
  sub_1C07768A0();
  sub_1C0780A48();
  return v5;
}

void sub_1C086A840()
{
  sub_1C07A9D68();
}

void sub_1C086A85C()
{
  SEL *v0;
  SEL *v1;
  id v2;

  v2 = objc_msgSend(sub_1C086A6A0(), *v1);
  sub_1C07768A0();
  objc_msgSend(v2, *v0);
  sub_1C0779714();
  sub_1C078D484();
  sub_1C077671C();
}

uint64_t sub_1C086A8AC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  void *v15;
  uint64_t (*v17)(void);
  _BYTE v18[24];

  sub_1C07ACF80((uint64_t *)&unk_1ED75E9A8);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v3);
  sub_1C077AF80();
  v6 = v4 - v5;
  MEMORY[0x1E0C80A78](v7);
  v9 = &v18[-v8];
  v10 = v1 + OBJC_IVAR____TtC24IntelligencePlatformCore22BehaviorHistoryUtility____lazy_storage___calendar;
  sub_1C077F040();
  sub_1C07AEE00();
  sub_1C078A8F8(v11, v12, v13);
  v14 = sub_1C106AFE4();
  if (sub_1C07B2D80((uint64_t)v9, 1, v14) == 1)
  {
    sub_1C0784B6C((uint64_t)v9, (uint64_t *)&unk_1ED75E9A8);
    v15 = (void *)MEMORY[0x1C3BA79F4]();
    sub_1C106AFC0();
    objc_autoreleasePoolPop(v15);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v6, a1, v14);
    sub_1C07B2D8C(v6, 0, 1, v14);
    sub_1C077F040();
    sub_1C0876088(v6, v10);
    return swift_endAccess();
  }
  else
  {
    sub_1C07AEE00();
    return v17();
  }
}

void sub_1C086AA04()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  sub_1C077AE5C();
  v3 = v0;
  v5 = v4;
  v7 = v6;
  type metadata accessor for Configuration();
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v8);
  sub_1C077AE40();
  v25 = v9;
  v10 = sub_1C106ED1C();
  v23 = *(_QWORD *)(v10 - 8);
  v24 = v10;
  MEMORY[0x1E0C80A78](v10);
  sub_1C077AE40();
  v26 = v11;
  v12 = sub_1C078A308();
  sub_1C0778688();
  MEMORY[0x1E0C80A78](v13);
  sub_1C0778564();
  v16 = v15 - v14;
  *(_QWORD *)(v0 + OBJC_IVAR____TtC24IntelligencePlatformCore22BehaviorHistoryUtility____lazy_storage___biomeLibrary) = 0;
  *(_QWORD *)(v0 + OBJC_IVAR____TtC24IntelligencePlatformCore22BehaviorHistoryUtility____lazy_storage___appInFocusStream) = 0;
  *(_QWORD *)(v0 + OBJC_IVAR____TtC24IntelligencePlatformCore22BehaviorHistoryUtility____lazy_storage___poiCategoryStream) = 0;
  *(_QWORD *)(v0 + OBJC_IVAR____TtC24IntelligencePlatformCore22BehaviorHistoryUtility____lazy_storage___focusModeStream) = 0;
  *(_QWORD *)(v0 + OBJC_IVAR____TtC24IntelligencePlatformCore22BehaviorHistoryUtility____lazy_storage___appIntentStream) = 0;
  *(_QWORD *)(v0 + OBJC_IVAR____TtC24IntelligencePlatformCore22BehaviorHistoryUtility____lazy_storage___carPlayStream) = 0;
  *(_QWORD *)(v0
            + OBJC_IVAR____TtC24IntelligencePlatformCore22BehaviorHistoryUtility____lazy_storage___homeKitAccessoryStream) = 0;
  *(_QWORD *)(v0
            + OBJC_IVAR____TtC24IntelligencePlatformCore22BehaviorHistoryUtility____lazy_storage___deviceLockedStream) = 0;
  *(_QWORD *)(v0
            + OBJC_IVAR____TtC24IntelligencePlatformCore22BehaviorHistoryUtility____lazy_storage___microlocationVisitStream) = 0;
  *(_QWORD *)(v0
            + OBJC_IVAR____TtC24IntelligencePlatformCore22BehaviorHistoryUtility____lazy_storage___airplaneModeStream) = 0;
  *(_QWORD *)(v0 + OBJC_IVAR____TtC24IntelligencePlatformCore22BehaviorHistoryUtility____lazy_storage___wifiEventStream) = 0;
  *(_QWORD *)(v0
            + OBJC_IVAR____TtC24IntelligencePlatformCore22BehaviorHistoryUtility____lazy_storage___bluetoothEventStream) = 0;
  *(_QWORD *)(v0
            + OBJC_IVAR____TtC24IntelligencePlatformCore22BehaviorHistoryUtility____lazy_storage___chargingEventStream) = 0;
  *(_QWORD *)(v0
            + OBJC_IVAR____TtC24IntelligencePlatformCore22BehaviorHistoryUtility____lazy_storage___semanticLocationStream) = 0;
  *(_QWORD *)(v0 + OBJC_IVAR____TtC24IntelligencePlatformCore22BehaviorHistoryUtility____lazy_storage___geoHashStream) = 0;
  *(_QWORD *)(v0
            + OBJC_IVAR____TtC24IntelligencePlatformCore22BehaviorHistoryUtility____lazy_storage___motionStateEventStream) = 0;
  v17 = v0 + OBJC_IVAR____TtC24IntelligencePlatformCore22BehaviorHistoryUtility____lazy_storage___calendar;
  v18 = sub_1C106AFE4();
  sub_1C077A2C4(v17, v19, v20, v18);
  v21 = v3 + OBJC_IVAR____TtC24IntelligencePlatformCore22BehaviorHistoryUtility_config;
  sub_1C078E3E0(v7, v3 + OBJC_IVAR____TtC24IntelligencePlatformCore22BehaviorHistoryUtility_config);
  sub_1C106D648();
  if (v1)
  {

    sub_1C078D09C(v7);
    sub_1C078D09C(v21);
    swift_unknownObjectRelease();
    sub_1C07A6844(OBJC_IVAR____TtC24IntelligencePlatformCore22BehaviorHistoryUtility____lazy_storage___appInFocusStream);
    sub_1C07A6844(OBJC_IVAR____TtC24IntelligencePlatformCore22BehaviorHistoryUtility____lazy_storage___poiCategoryStream);
    sub_1C07A6844(OBJC_IVAR____TtC24IntelligencePlatformCore22BehaviorHistoryUtility____lazy_storage___focusModeStream);
    sub_1C07A6844(OBJC_IVAR____TtC24IntelligencePlatformCore22BehaviorHistoryUtility____lazy_storage___appIntentStream);
    sub_1C07A6844(OBJC_IVAR____TtC24IntelligencePlatformCore22BehaviorHistoryUtility____lazy_storage___carPlayStream);
    sub_1C07A6844(OBJC_IVAR____TtC24IntelligencePlatformCore22BehaviorHistoryUtility____lazy_storage___homeKitAccessoryStream);
    sub_1C07A6844(OBJC_IVAR____TtC24IntelligencePlatformCore22BehaviorHistoryUtility____lazy_storage___deviceLockedStream);
    sub_1C07A6844(OBJC_IVAR____TtC24IntelligencePlatformCore22BehaviorHistoryUtility____lazy_storage___microlocationVisitStream);
    sub_1C07A6844(OBJC_IVAR____TtC24IntelligencePlatformCore22BehaviorHistoryUtility____lazy_storage___airplaneModeStream);
    sub_1C07A6844(OBJC_IVAR____TtC24IntelligencePlatformCore22BehaviorHistoryUtility____lazy_storage___wifiEventStream);
    sub_1C07A6844(OBJC_IVAR____TtC24IntelligencePlatformCore22BehaviorHistoryUtility____lazy_storage___bluetoothEventStream);
    sub_1C07A6844(OBJC_IVAR____TtC24IntelligencePlatformCore22BehaviorHistoryUtility____lazy_storage___chargingEventStream);
    sub_1C07A6844(OBJC_IVAR____TtC24IntelligencePlatformCore22BehaviorHistoryUtility____lazy_storage___semanticLocationStream);
    sub_1C07A6844(OBJC_IVAR____TtC24IntelligencePlatformCore22BehaviorHistoryUtility____lazy_storage___geoHashStream);
    sub_1C07A6844(OBJC_IVAR____TtC24IntelligencePlatformCore22BehaviorHistoryUtility____lazy_storage___motionStateEventStream);
    sub_1C0784B6C(v3 + OBJC_IVAR____TtC24IntelligencePlatformCore22BehaviorHistoryUtility____lazy_storage___calendar, (uint64_t *)&unk_1ED75E9A8);
    sub_1C077F0C0();
    swift_deallocPartialClassInstance();
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 32))(v3 + OBJC_IVAR____TtC24IntelligencePlatformCore22BehaviorHistoryUtility_handleView, v16, v12);
    sub_1C106D564();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v23 + 32))(v3 + OBJC_IVAR____TtC24IntelligencePlatformCore22BehaviorHistoryUtility_phPersonIdentifierMapView, v26, v24);
    sub_1C078E3E0(v7, v25);
    type metadata accessor for GraphStore();
    swift_allocObject();
    v22 = GraphStore.init(config:)(v25);
    sub_1C0784E5C();
    sub_1C078D09C(0);
    *(_QWORD *)(v3 + 16) = v22;
  }
  sub_1C07757D0();
}

void sub_1C086AF28()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  sub_1C077AE5C();
  v3 = v0;
  v5 = v4;
  v7 = v6;
  v8 = sub_1C106ED1C();
  v22 = *(_QWORD *)(v8 - 8);
  v23 = v8;
  MEMORY[0x1E0C80A78](v8);
  sub_1C077AE40();
  v24 = v9;
  v10 = sub_1C078A308();
  sub_1C0778688();
  MEMORY[0x1E0C80A78](v11);
  sub_1C0778564();
  v14 = v13 - v12;
  *(_QWORD *)(v3 + OBJC_IVAR____TtC24IntelligencePlatformCore22BehaviorHistoryUtility____lazy_storage___biomeLibrary) = 0;
  *(_QWORD *)(v3 + OBJC_IVAR____TtC24IntelligencePlatformCore22BehaviorHistoryUtility____lazy_storage___appInFocusStream) = 0;
  *(_QWORD *)(v3 + OBJC_IVAR____TtC24IntelligencePlatformCore22BehaviorHistoryUtility____lazy_storage___poiCategoryStream) = 0;
  *(_QWORD *)(v3 + OBJC_IVAR____TtC24IntelligencePlatformCore22BehaviorHistoryUtility____lazy_storage___focusModeStream) = 0;
  *(_QWORD *)(v3 + OBJC_IVAR____TtC24IntelligencePlatformCore22BehaviorHistoryUtility____lazy_storage___appIntentStream) = 0;
  *(_QWORD *)(v3 + OBJC_IVAR____TtC24IntelligencePlatformCore22BehaviorHistoryUtility____lazy_storage___carPlayStream) = 0;
  *(_QWORD *)(v3
            + OBJC_IVAR____TtC24IntelligencePlatformCore22BehaviorHistoryUtility____lazy_storage___homeKitAccessoryStream) = 0;
  *(_QWORD *)(v3
            + OBJC_IVAR____TtC24IntelligencePlatformCore22BehaviorHistoryUtility____lazy_storage___deviceLockedStream) = 0;
  *(_QWORD *)(v3
            + OBJC_IVAR____TtC24IntelligencePlatformCore22BehaviorHistoryUtility____lazy_storage___microlocationVisitStream) = 0;
  *(_QWORD *)(v3
            + OBJC_IVAR____TtC24IntelligencePlatformCore22BehaviorHistoryUtility____lazy_storage___airplaneModeStream) = 0;
  *(_QWORD *)(v3 + OBJC_IVAR____TtC24IntelligencePlatformCore22BehaviorHistoryUtility____lazy_storage___wifiEventStream) = 0;
  *(_QWORD *)(v3
            + OBJC_IVAR____TtC24IntelligencePlatformCore22BehaviorHistoryUtility____lazy_storage___bluetoothEventStream) = 0;
  *(_QWORD *)(v3
            + OBJC_IVAR____TtC24IntelligencePlatformCore22BehaviorHistoryUtility____lazy_storage___chargingEventStream) = 0;
  *(_QWORD *)(v3
            + OBJC_IVAR____TtC24IntelligencePlatformCore22BehaviorHistoryUtility____lazy_storage___semanticLocationStream) = 0;
  *(_QWORD *)(v3 + OBJC_IVAR____TtC24IntelligencePlatformCore22BehaviorHistoryUtility____lazy_storage___geoHashStream) = 0;
  *(_QWORD *)(v3
            + OBJC_IVAR____TtC24IntelligencePlatformCore22BehaviorHistoryUtility____lazy_storage___motionStateEventStream) = 0;
  v15 = v3 + OBJC_IVAR____TtC24IntelligencePlatformCore22BehaviorHistoryUtility____lazy_storage___calendar;
  v16 = sub_1C106AFE4();
  sub_1C077A2C4(v15, v17, v18, v16);
  *(_QWORD *)(v3 + 16) = v7;
  v19 = v3 + OBJC_IVAR____TtC24IntelligencePlatformCore22BehaviorHistoryUtility_config;
  sub_1C078E3E0(v7 + OBJC_IVAR____TtC24IntelligencePlatformCore10GraphStore_config, v3 + OBJC_IVAR____TtC24IntelligencePlatformCore22BehaviorHistoryUtility_config);
  v20 = swift_retain();
  MEMORY[0x1C3BA79F4](v20);
  sub_1C106D648();
  sub_1C079F338();
  if (v1)
  {

    swift_release();
    swift_release();
    sub_1C078D09C(v19);
    swift_unknownObjectRelease();
    sub_1C07A6844(OBJC_IVAR____TtC24IntelligencePlatformCore22BehaviorHistoryUtility____lazy_storage___appInFocusStream);
    sub_1C07A6844(OBJC_IVAR____TtC24IntelligencePlatformCore22BehaviorHistoryUtility____lazy_storage___poiCategoryStream);
    sub_1C07A6844(OBJC_IVAR____TtC24IntelligencePlatformCore22BehaviorHistoryUtility____lazy_storage___focusModeStream);
    sub_1C07A6844(OBJC_IVAR____TtC24IntelligencePlatformCore22BehaviorHistoryUtility____lazy_storage___appIntentStream);
    sub_1C07A6844(OBJC_IVAR____TtC24IntelligencePlatformCore22BehaviorHistoryUtility____lazy_storage___carPlayStream);
    sub_1C07A6844(OBJC_IVAR____TtC24IntelligencePlatformCore22BehaviorHistoryUtility____lazy_storage___homeKitAccessoryStream);
    sub_1C07A6844(OBJC_IVAR____TtC24IntelligencePlatformCore22BehaviorHistoryUtility____lazy_storage___deviceLockedStream);
    sub_1C07A6844(OBJC_IVAR____TtC24IntelligencePlatformCore22BehaviorHistoryUtility____lazy_storage___microlocationVisitStream);
    sub_1C07A6844(OBJC_IVAR____TtC24IntelligencePlatformCore22BehaviorHistoryUtility____lazy_storage___airplaneModeStream);
    sub_1C07A6844(OBJC_IVAR____TtC24IntelligencePlatformCore22BehaviorHistoryUtility____lazy_storage___wifiEventStream);
    sub_1C07A6844(OBJC_IVAR____TtC24IntelligencePlatformCore22BehaviorHistoryUtility____lazy_storage___bluetoothEventStream);
    sub_1C07A6844(OBJC_IVAR____TtC24IntelligencePlatformCore22BehaviorHistoryUtility____lazy_storage___chargingEventStream);
    sub_1C07A6844(OBJC_IVAR____TtC24IntelligencePlatformCore22BehaviorHistoryUtility____lazy_storage___semanticLocationStream);
    sub_1C07A6844(OBJC_IVAR____TtC24IntelligencePlatformCore22BehaviorHistoryUtility____lazy_storage___geoHashStream);
    sub_1C07A6844(OBJC_IVAR____TtC24IntelligencePlatformCore22BehaviorHistoryUtility____lazy_storage___motionStateEventStream);
    sub_1C0784B6C(v3 + OBJC_IVAR____TtC24IntelligencePlatformCore22BehaviorHistoryUtility____lazy_storage___calendar, (uint64_t *)&unk_1ED75E9A8);
    sub_1C077F0C0();
    swift_deallocPartialClassInstance();
  }
  else
  {
    v21 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 32))(v3 + OBJC_IVAR____TtC24IntelligencePlatformCore22BehaviorHistoryUtility_handleView, v14, v10);
    MEMORY[0x1C3BA79F4](v21);
    sub_1C106D564();
    sub_1C079F338();

    swift_release();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v22 + 32))(v3 + OBJC_IVAR____TtC24IntelligencePlatformCore22BehaviorHistoryUtility_phPersonIdentifierMapView, v24, v23);
  }
  sub_1C07757D0();
}

void sub_1C086B298()
{
  sub_1C078D48C();
}

void sub_1C086B2B0()
{
  uint64_t v0;
  uint64_t v1;
  uint8_t *v2;
  _QWORD *v3;

  v1 = sub_1C0778704();
  sub_1C086B2D0(v1, v2, v0, v3);
  sub_1C078D484();
  sub_1C0776784();
}

void sub_1C086B2D0(uint64_t a1@<X0>, uint8_t *a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  double v33;
  uint64_t v34;
  char *v35;
  void (*v36)(char *, uint64_t, uint64_t, double);
  int v37;
  void *v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  void *v48;
  uint64_t v49;
  uint64_t v50;
  void *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  void *v60;
  void *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  void *v66;
  uint64_t v67;
  uint64_t v68;
  void *v69;
  uint64_t v70;
  uint64_t v71;
  void *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  void *v77;
  void *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  void *v89;
  void *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  void *v96;
  void *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  NSObject *v108;
  os_log_type_t v109;
  uint8_t *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  NSObject *v114;
  os_log_type_t v115;
  uint8_t *v116;
  char *v117;
  uint64_t v118;
  unint64_t v119;
  void (*v120)(char *, uint64_t);
  uint8_t *v121;
  uint64_t v122;
  void *v123;
  uint64_t v124;
  uint64_t v125;
  char *v126;
  char *v127;
  char *v128;
  char *v129;
  char *v130;
  char *v131;
  char *v132;
  char *v133;
  uint8_t *v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;

  v135 = a3;
  v134 = a2;
  v6 = sub_1C07ACF80((uint64_t *)&unk_1ED762690);
  MEMORY[0x1E0C80A78](v6);
  v127 = (char *)&v124 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v128 = (char *)&v124 - v9;
  MEMORY[0x1E0C80A78](v10);
  v129 = (char *)&v124 - v11;
  MEMORY[0x1E0C80A78](v12);
  v130 = (char *)&v124 - v13;
  MEMORY[0x1E0C80A78](v14);
  v131 = (char *)&v124 - v15;
  MEMORY[0x1E0C80A78](v16);
  v132 = (char *)&v124 - v17;
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v124 - v19;
  MEMORY[0x1E0C80A78](v21);
  v133 = (char *)&v124 - v22;
  MEMORY[0x1E0C80A78](v23);
  v25 = (char *)&v124 - v24;
  MEMORY[0x1E0C80A78](v26);
  v28 = (char *)&v124 - v27;
  v29 = sub_1C106D6CC();
  v30 = *(_QWORD *)(v29 - 8);
  MEMORY[0x1E0C80A78](v29);
  v126 = (char *)&v124 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = MEMORY[0x1E0C80A78](v32);
  v35 = (char *)&v124 - v34;
  v36 = *(void (**)(char *, uint64_t, uint64_t, double))(v30 + 16);
  v125 = a1;
  v36((char *)&v124 - v34, a1, v29, v33);
  v37 = (*(uint64_t (**)(char *, uint64_t))(v30 + 88))(v35, v29);
  if (v37 == *MEMORY[0x1E0D3C0F0])
    goto LABEL_2;
  if (v37 == *MEMORY[0x1E0D3C120])
  {
    sub_1C086A754(&OBJC_IVAR____TtC24IntelligencePlatformCore22BehaviorHistoryUtility____lazy_storage___appInFocusStream);
    v39 = v38;
    v40 = sub_1C106ADE0();
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 16))(v28, v135, v40);
    v41 = sub_1C07B2D8C((uint64_t)v28, 0, 1, v40);
    v42 = (void *)MEMORY[0x1C3BA79F4](v41);
    goto LABEL_5;
  }
  if (v37 == *MEMORY[0x1E0D3C118])
  {
    sub_1C086A754(&OBJC_IVAR____TtC24IntelligencePlatformCore22BehaviorHistoryUtility____lazy_storage___appIntentStream);
    v48 = v47;
    v49 = sub_1C106ADE0();
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v49 - 8) + 16))(v25, v135, v49);
    v50 = sub_1C07B2D8C((uint64_t)v25, 0, 1, v49);
    v51 = (void *)MEMORY[0x1C3BA79F4](v50);
    v52 = v136;
    sub_1C086D470();
    if (v52)
    {
      v123 = v51;
      goto LABEL_63;
    }
    v54 = v53;
    objc_autoreleasePoolPop(v51);

    v55 = (uint64_t)v25;
LABEL_11:
    sub_1C0784B6C(v55, (uint64_t *)&unk_1ED762690);
    *a4 = v54;
    return;
  }
  if (v37 == *MEMORY[0x1E0D3C058])
    goto LABEL_13;
  if (v37 == *MEMORY[0x1E0D3C0A0])
  {
LABEL_2:
    *a4 = 0;
    return;
  }
  if (v37 == *MEMORY[0x1E0D3C0C8])
  {
LABEL_13:
    v56 = sub_1C106ADE0();
    v57 = (uint64_t)v133;
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v56 - 8) + 16))(v133, v135, v56);
    sub_1C07B2D8C(v57, 0, 1, v56);
    sub_1C086C2F4();
  }
  if (v37 == *MEMORY[0x1E0D3C0E8])
  {
    sub_1C086A754(&OBJC_IVAR____TtC24IntelligencePlatformCore22BehaviorHistoryUtility____lazy_storage___carPlayStream);
    v61 = v60;
    v62 = sub_1C106ADE0();
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v62 - 8) + 16))(v20, v135, v62);
    v63 = sub_1C07B2D8C((uint64_t)v20, 0, 1, v62);
    v42 = (void *)MEMORY[0x1C3BA79F4](v63);
    v64 = v136;
    sub_1C086D470();
    if (!v64)
    {
      v54 = v65;
      objc_autoreleasePoolPop(v42);

      v55 = (uint64_t)v20;
      goto LABEL_11;
    }
LABEL_61:
    v123 = v42;
LABEL_63:
    objc_autoreleasePoolPop(v123);
    __break(1u);
    return;
  }
  if (v37 == *MEMORY[0x1E0D3C068])
  {
    sub_1C086A754(&OBJC_IVAR____TtC24IntelligencePlatformCore22BehaviorHistoryUtility____lazy_storage___deviceLockedStream);
    v39 = v66;
    v67 = sub_1C106ADE0();
    v28 = v132;
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v67 - 8) + 16))(v132, v135, v67);
    v68 = sub_1C07B2D8C((uint64_t)v28, 0, 1, v67);
    v42 = (void *)MEMORY[0x1C3BA79F4](v68);
    goto LABEL_5;
  }
  if (v37 == *MEMORY[0x1E0D3C0B8])
    goto LABEL_13;
  if (v37 == *MEMORY[0x1E0D3C060])
  {
    sub_1C086A708(&OBJC_IVAR____TtC24IntelligencePlatformCore22BehaviorHistoryUtility____lazy_storage___airplaneModeStream);
    v39 = v69;
    v70 = sub_1C106ADE0();
    v28 = v131;
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v70 - 8) + 16))(v131, v135, v70);
    v71 = sub_1C07B2D8C((uint64_t)v28, 0, 1, v70);
    v42 = (void *)MEMORY[0x1C3BA79F4](v71);
    goto LABEL_5;
  }
  if (v37 == *MEMORY[0x1E0D3C128])
  {
    sub_1C086A708(&OBJC_IVAR____TtC24IntelligencePlatformCore22BehaviorHistoryUtility____lazy_storage___wifiEventStream);
    v39 = v72;
    v73 = sub_1C106ADE0();
    v28 = v130;
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v73 - 8) + 16))(v130, v135, v73);
    v74 = sub_1C07B2D8C((uint64_t)v28, 0, 1, v73);
    v42 = (void *)MEMORY[0x1C3BA79F4](v74);
LABEL_5:
    v43 = v136;
    sub_1C086D470();
    if (!v43)
    {
      v45 = v44;
      objc_autoreleasePoolPop(v42);

      v46 = (uint64_t)v28;
LABEL_7:
      sub_1C0784B6C(v46, (uint64_t *)&unk_1ED762690);
      *a4 = v45;
      return;
    }
    goto LABEL_61;
  }
  if (v37 == *MEMORY[0x1E0D3C088])
  {
    v75 = sub_1C106ADE0();
    v76 = (uint64_t)v133;
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v75 - 8) + 16))(v133, v135, v75);
    sub_1C07B2D8C(v76, 0, 1, v75);
    sub_1C086C2F4();
  }
  if (v37 == *MEMORY[0x1E0D3C078])
  {
    sub_1C086A708(&OBJC_IVAR____TtC24IntelligencePlatformCore22BehaviorHistoryUtility____lazy_storage___chargingEventStream);
    v78 = v77;
    v79 = sub_1C106ADE0();
    v80 = (uint64_t)v129;
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v79 - 8) + 16))(v129, v135, v79);
    v81 = sub_1C07B2D8C(v80, 0, 1, v79);
    v42 = (void *)MEMORY[0x1C3BA79F4](v81);
    v82 = v136;
    sub_1C086D470();
    if (!v82)
    {
      v84 = v83;
      objc_autoreleasePoolPop(v42);

      sub_1C0784B6C(v80, (uint64_t *)&unk_1ED762690);
      *a4 = v84;
      return;
    }
    goto LABEL_61;
  }
  if (v37 == *MEMORY[0x1E0D3C048])
  {
    v85 = sub_1C106ADE0();
    v86 = (uint64_t)v133;
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v85 - 8) + 16))(v133, v135, v85);
    sub_1C07B2D8C(v86, 0, 1, v85);
    sub_1C086C328(v86);
    v88 = v87;
    sub_1C0784B6C(v86, (uint64_t *)&unk_1ED762690);
    *a4 = v88;
    return;
  }
  if (v37 == *MEMORY[0x1E0D3C0C0])
  {
    sub_1C086A708(&OBJC_IVAR____TtC24IntelligencePlatformCore22BehaviorHistoryUtility____lazy_storage___homeKitAccessoryStream);
    v90 = v89;
    v91 = sub_1C106ADE0();
    v92 = (uint64_t)v128;
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v91 - 8) + 16))(v128, v135, v91);
    v93 = sub_1C07B2D8C(v92, 0, 1, v91);
    v42 = (void *)MEMORY[0x1C3BA79F4](v93);
    v94 = v136;
    sub_1C086D470();
    if (!v94)
    {
      v45 = v95;
      objc_autoreleasePoolPop(v42);

      v46 = (uint64_t)v128;
      goto LABEL_7;
    }
    goto LABEL_61;
  }
  if (v37 == *MEMORY[0x1E0D3C100])
  {
    sub_1C086A754(&OBJC_IVAR____TtC24IntelligencePlatformCore22BehaviorHistoryUtility____lazy_storage___semanticLocationStream);
    v97 = v96;
    v98 = sub_1C106ADE0();
    v99 = (uint64_t)v127;
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v98 - 8) + 16))(v127, v135, v98);
    v100 = sub_1C07B2D8C(v99, 0, 1, v98);
    v42 = (void *)MEMORY[0x1C3BA79F4](v100);
    v101 = v136;
    sub_1C086D470();
    if (!v101)
    {
      v45 = v102;
      objc_autoreleasePoolPop(v42);

      v46 = (uint64_t)v127;
      goto LABEL_7;
    }
    goto LABEL_61;
  }
  if (v37 == *MEMORY[0x1E0D3C0B0])
  {
    v103 = sub_1C106ADE0();
    v104 = (uint64_t)v133;
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v103 - 8) + 16))(v133, v135, v103);
    sub_1C07B2D8C(v104, 0, 1, v103);
    sub_1C086C36C();
  }
  if (v37 == *MEMORY[0x1E0D3C0D0])
  {
    v105 = sub_1C106ADE0();
    v106 = (uint64_t)v133;
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v105 - 8) + 16))(v133, v135, v105);
    sub_1C07B2D8C(v106, 0, 1, v105);
    sub_1C086C500();
    v59 = v58;
    sub_1C0784B6C(v106, (uint64_t *)&unk_1ED762690);
    *a4 = v59;
  }
  else
  {
    if (v37 == *MEMORY[0x1E0D3C0A8])
    {
      if (qword_1ED760048 != -1)
        swift_once();
      v107 = sub_1C106F544();
      sub_1C079E000(v107, (uint64_t)qword_1ED78D800);
      v108 = sub_1C106F538();
      v109 = sub_1C10703A8();
      if (os_log_type_enabled(v108, v109))
      {
        v110 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v110 = 0;
        _os_log_impl(&dword_1C0771000, v108, v109, "BehaviorHistoryUtility: lastBehaviorEvent called with entityInteraction - this should only occur if EntityInteractionHistogramViews are updating", v110, 2u);
        MEMORY[0x1C3BA8270](v110, -1, -1);
      }

      goto LABEL_2;
    }
    if (v37 == *MEMORY[0x1E0D3C098] || v37 == *MEMORY[0x1E0D3C080] || v37 == *MEMORY[0x1E0D3C070])
    {
      v111 = sub_1C106ADE0();
      v112 = (uint64_t)v133;
      (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v111 - 8) + 16))(v133, v135, v111);
      sub_1C07B2D8C(v112, 0, 1, v111);
      sub_1C086C538();
    }
    if (qword_1ED760048 != -1)
      swift_once();
    v113 = sub_1C106F544();
    sub_1C079E000(v113, (uint64_t)qword_1ED78D800);
    ((void (*)(char *, uint64_t, uint64_t))v36)(v126, v125, v29);
    v114 = sub_1C106F538();
    v115 = sub_1C107039C();
    if (os_log_type_enabled(v114, v115))
    {
      v116 = (uint8_t *)swift_slowAlloc();
      v135 = swift_slowAlloc();
      v138 = v135;
      v134 = v116;
      *(_DWORD *)v116 = 136315138;
      v133 = (char *)(v116 + 4);
      sub_1C0794BAC((unint64_t *)&qword_1ED744A68, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3C130], MEMORY[0x1E0D3C168]);
      v117 = v126;
      v118 = sub_1C1070C0C();
      v137 = sub_1C0788DAC(v118, v119, &v138);
      sub_1C10705AC();
      swift_bridgeObjectRelease();
      v120 = *(void (**)(char *, uint64_t))(v30 + 8);
      v120(v117, v29);
      v121 = v134;
      _os_log_impl(&dword_1C0771000, v114, v115, "BehaviorHistoryUtility: lastBehaviorEvent called with unexpected type: %s", v134, 0xCu);
      v122 = v135;
      swift_arrayDestroy();
      MEMORY[0x1C3BA8270](v122, -1, -1);
      MEMORY[0x1C3BA8270](v121, -1, -1);
    }
    else
    {
      v120 = *(void (**)(char *, uint64_t))(v30 + 8);
      v120(v126, v29);
    }

    *a4 = 0;
    v120(v35, v29);
  }
}

void sub_1C086C2F4()
{
  sub_1C078D48C();
}

void sub_1C086C30C()
{
  void (*v0)(uint64_t);
  uint64_t v1;

  v1 = sub_1C07B0004();
  v0(v1);
  sub_1C078D484();
  sub_1C0776784();
}

void sub_1C086C328(uint64_t a1)
{
  void *v2;
  uint64_t v3;

  v2 = (void *)MEMORY[0x1C3BA79F4]();
  sub_1C0872C00(a1, &v3);
  objc_autoreleasePoolPop(v2);
  sub_1C0776784();
}

void sub_1C086C36C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_1C07ACF80((uint64_t *)&unk_1ED762690);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v0);
  sub_1C0778564();
  sub_1C077AE98();
  sub_1C0778688();
  MEMORY[0x1E0C80A78](v1);
  sub_1C0780698();
  MEMORY[0x1E0C80A78](v2);
  sub_1C07A2FEC();
}

#error "1C086C474: call analysis failed (funcsize=34)"

uint64_t sub_1C086C47C()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t);

  sub_1C086D638(v2, (uint64_t)v1, (uint64_t (*)(uint64_t, char *, uint64_t))sub_1C086EAC8, (uint64_t)&unk_1E7A10970, (void (*)(void *))sub_1C0875F14, (uint64_t)&unk_1E7A10998);
  sub_1C0781030();

  v6 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  v6(v3, v0);
  v6(v4, v0);
  sub_1C07863E0();
  return 0;
}

void sub_1C086C500()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  MEMORY[0x1C3BA79F4]();
  v0 = sub_1C0778704();
  sub_1C0874D00(v0, v1, v2);
  sub_1C078D484();
  sub_1C0776784();
}

void sub_1C086C538()
{
  sub_1C078D48C();
}

void sub_1C086C550()
{
  void *v0;
  uint64_t v1;
  uint64_t *v2;

  sub_1C07B0004();
  sub_1C087523C(v1, v0, v2);
  sub_1C078D484();
  sub_1C0776784();
}

void sub_1C086C570()
{
  sub_1C079C388();
}

void sub_1C086C590()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v2 = sub_1C07B1CD4();
  sub_1C086C5BC(v2, v3, v0, v1, v4);
  sub_1C0780A48();
  sub_1C07892A4();
}

uint64_t sub_1C086C5BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, NSObject *a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int v27;
  char *v28;
  void (*v29)(char *, NSObject *, uint64_t);
  char *v30;
  uint64_t v31;
  int v32;
  id v33;
  void *v34;
  id v35;
  void (*v36)(char *, uint64_t);
  uint64_t result;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  NSObject *v42;
  os_log_type_t v43;
  uint8_t *v44;
  id v45;
  void *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  NSObject *v51;
  os_log_type_t v52;
  uint8_t *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  void (*v58)(char *, uint64_t);
  NSObject *v59;
  uint8_t *v60;
  uint64_t v61;
  id v62;
  void *v63;
  id v64;
  void (*v65)(char *, uint64_t);
  _QWORD v66[2];
  uint8_t *v67;
  char *v68;
  uint64_t v69;
  _QWORD *v70;
  NSObject *v71;
  char *v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;

  v71 = a3;
  v69 = a4;
  v70 = a5;
  v73 = sub_1C106D6CC();
  v7 = *(_QWORD *)(v73 - 8);
  MEMORY[0x1E0C80A78](v73);
  v68 = (char *)v66 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v72 = (char *)v66 - v10;
  v11 = sub_1C07ACF80((uint64_t *)&unk_1ED762690);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)v66 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)v66 - v15;
  v17 = sub_1C106ADE0();
  v18 = *(_QWORD *)(v17 - 8);
  MEMORY[0x1E0C80A78](v17);
  v74 = (char *)v66 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v20);
  v22 = (char *)v66 - v21;
  v23 = a1;
  v25 = v24;
  sub_1C078A8F8(v23, (uint64_t)v16, (uint64_t *)&unk_1ED762690);
  v26 = v18;
  if (sub_1C07B2D80((uint64_t)v16, 1, v25) == 1)
  {
    sub_1C106AC9C();
    sub_1C0784B6C((uint64_t)v16, (uint64_t *)&unk_1ED762690);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v22, v16, v25);
  }
  sub_1C078A8F8(a2, (uint64_t)v13, (uint64_t *)&unk_1ED762690);
  v27 = sub_1C07B2D80((uint64_t)v13, 1, v25);
  v28 = v74;
  if (v27 == 1)
  {
    sub_1C106ADA4();
    sub_1C0784B6C((uint64_t)v13, (uint64_t *)&unk_1ED762690);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v74, v13, v25);
  }
  v29 = *(void (**)(char *, NSObject *, uint64_t))(v7 + 16);
  v30 = v72;
  v31 = v73;
  v29(v72, v71, v73);
  v32 = (*(uint64_t (**)(char *, uint64_t))(v7 + 88))(v30, v31);
  if (v32 == *MEMORY[0x1E0D3C0F0])
    goto LABEL_8;
  if (v32 == *MEMORY[0x1E0D3C120] || v32 == *MEMORY[0x1E0D3C118])
    goto LABEL_11;
  if (v32 == *MEMORY[0x1E0D3C058])
    goto LABEL_15;
  if (v32 == *MEMORY[0x1E0D3C0A0])
  {
LABEL_8:
    v33 = objc_allocWithZone(MEMORY[0x1E0D02478]);
    type metadata accessor for BehaviorEvent();
    v34 = (void *)sub_1C106FEEC();
    v35 = objc_msgSend(v33, sel_initWithSequence_, v34);

LABEL_12:
    v36 = *(void (**)(char *, uint64_t))(v26 + 8);
    v36(v28, v25);
LABEL_13:
    result = ((uint64_t (*)(char *, uint64_t))v36)(v22, v25);
    *v70 = v35;
    return result;
  }
  if (v32 == *MEMORY[0x1E0D3C0C8] || v32 == *MEMORY[0x1E0D3C0E8] || v32 == *MEMORY[0x1E0D3C068])
  {
LABEL_11:
    v35 = (id)sub_1C086D110();
    goto LABEL_12;
  }
  if (v32 == *MEMORY[0x1E0D3C0B8])
    sub_1C086CF6C();
  if (v32 == *MEMORY[0x1E0D3C060]
    || v32 == *MEMORY[0x1E0D3C128]
    || v32 == *MEMORY[0x1E0D3C088]
    || v32 == *MEMORY[0x1E0D3C078])
  {
LABEL_15:
    sub_1C086D0C8();
  }
  if (v32 == *MEMORY[0x1E0D3C048])
    sub_1C086D084();
  v38 = v26;
  if (v32 == *MEMORY[0x1E0D3C0C0])
    sub_1C086D0C8();
  if (v32 == *MEMORY[0x1E0D3C100])
  {
    v39 = v74;
    v40 = sub_1C086D110();
LABEL_49:
    v35 = (id)v40;
    v36 = *(void (**)(char *, uint64_t))(v26 + 8);
    v36(v39, v25);
    goto LABEL_13;
  }
  if (v32 == *MEMORY[0x1E0D3C0B0])
    sub_1C086D19C();
  if (v32 == *MEMORY[0x1E0D3C0D0])
    sub_1C086D288();
  if (v32 == *MEMORY[0x1E0D3C0A8])
  {
    if (qword_1ED760048 != -1)
      swift_once();
    v41 = sub_1C106F544();
    sub_1C079E000(v41, (uint64_t)qword_1ED78D800);
    v42 = sub_1C106F538();
    v43 = sub_1C10703A8();
    if (os_log_type_enabled(v42, v43))
    {
      v44 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v44 = 0;
      _os_log_impl(&dword_1C0771000, v42, v43, "BehaviorHistoryUtility: lastBehaviorEvent unexpectedly called with entityInteraction - this should only occur if EntityInteractionHistogramViews are updating", v44, 2u);
      MEMORY[0x1C3BA8270](v44, -1, -1);
    }

    v45 = objc_allocWithZone(MEMORY[0x1E0D02478]);
    type metadata accessor for BehaviorEvent();
    v46 = (void *)sub_1C106FEEC();
    v35 = objc_msgSend(v45, sel_initWithSequence_, v46);

    v36 = *(void (**)(char *, uint64_t))(v26 + 8);
    v36(v74, v25);
    goto LABEL_13;
  }
  if (v32 == *MEMORY[0x1E0D3C098])
  {
    v47 = (uint64_t)v22;
    v39 = v74;
    v48 = (uint64_t)v74;
    v49 = 0;
LABEL_48:
    sub_1C086D320(v47, v48, v49);
    goto LABEL_49;
  }
  if (v32 == *MEMORY[0x1E0D3C080])
  {
    v47 = (uint64_t)v22;
    v39 = v74;
    v48 = (uint64_t)v74;
    v49 = 1;
    goto LABEL_48;
  }
  if (v32 == *MEMORY[0x1E0D3C070])
  {
    v47 = (uint64_t)v22;
    v39 = v74;
    v48 = (uint64_t)v74;
    v49 = 2;
    goto LABEL_48;
  }
  if (qword_1ED760048 != -1)
    swift_once();
  v50 = sub_1C106F544();
  sub_1C079E000(v50, (uint64_t)qword_1ED78D800);
  v29(v68, v71, v73);
  v51 = sub_1C106F538();
  v52 = sub_1C107039C();
  v71 = v51;
  if (os_log_type_enabled(v51, v52))
  {
    v53 = (uint8_t *)swift_slowAlloc();
    v69 = swift_slowAlloc();
    v76 = v69;
    v67 = v53;
    *(_DWORD *)v53 = 136315138;
    v66[1] = v53 + 4;
    sub_1C0794BAC((unint64_t *)&qword_1ED744A68, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3C130], MEMORY[0x1E0D3C168]);
    v54 = v68;
    v55 = v73;
    v56 = sub_1C1070C0C();
    v75 = sub_1C0788DAC(v56, v57, &v76);
    sub_1C10705AC();
    swift_bridgeObjectRelease();
    v58 = *(void (**)(char *, uint64_t))(v7 + 8);
    v58(v54, v55);
    v59 = v71;
    v60 = v67;
    _os_log_impl(&dword_1C0771000, v71, v52, "BehaviorHistoryUtility: behaviorEventPublisher called with unexpected type: %s", v67, 0xCu);
    v61 = v69;
    swift_arrayDestroy();
    MEMORY[0x1C3BA8270](v61, -1, -1);
    MEMORY[0x1C3BA8270](v60, -1, -1);

  }
  else
  {
    v58 = *(void (**)(char *, uint64_t))(v7 + 8);
    v58(v68, v73);

  }
  v62 = objc_allocWithZone(MEMORY[0x1E0D02478]);
  type metadata accessor for BehaviorEvent();
  v63 = (void *)sub_1C106FEEC();
  v64 = objc_msgSend(v62, sel_initWithSequence_, v63);

  v65 = *(void (**)(char *, uint64_t))(v38 + 8);
  v65(v74, v25);
  v65(v22, v25);
  *v70 = v64;
  return ((uint64_t (*)(char *, uint64_t))v58)(v72, v73);
}

void sub_1C086CF6C()
{
  sub_1C07943C4();
}

#error "1C086D044: call analysis failed (funcsize=57)"

void sub_1C086D084()
{
  sub_1C07A9D68();
}

void sub_1C086D0A0(uint64_t a1, ...)
{
  uint64_t v1;
  va_list va;

  va_start(va, a1);
  sub_1C08724B0(v1, va);
  sub_1C078D484();
  sub_1C0776784();
}

void sub_1C086D0C8()
{
  sub_1C079C388();
}

void sub_1C086D0E8()
{
  void (*v0)(uint64_t);
  uint64_t v1;

  v1 = sub_1C07B1CD4();
  v0(v1);
  sub_1C0780A48();
  sub_1C07892A4();
}

uint64_t sub_1C086D110()
{
  void *v0;
  uint64_t v2;

  v0 = (void *)MEMORY[0x1C3BA79F4]();
  sub_1C0870B90();
  objc_autoreleasePoolPop(v0);
  return v2;
}

void sub_1C086D19C()
{
  uint64_t v0;
  uint64_t v1;

  sub_1C0779670();
  sub_1C07ACF80((uint64_t *)&unk_1ED762690);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v0);
  sub_1C0780698();
  MEMORY[0x1E0C80A78](v1);
  sub_1C07A2FEC();
}

#error "1C086D200: call analysis failed (funcsize=38)"

void sub_1C086D288()
{
  sub_1C079C388();
}

void sub_1C086D29C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  void *v4;
  id v5;

  v1 = sub_1C07B1CD4();
  v3 = (void *)sub_1C0CB1228(v1, v2, 0, 0);
  if (v3)
  {
    v4 = v3;
    sub_1C0874320(v3, v0 + OBJC_IVAR____TtC24IntelligencePlatformCore22BehaviorHistoryUtility_phPersonIdentifierMapView);
  }
  else
  {
    v5 = objc_allocWithZone(MEMORY[0x1E0D02478]);
    sub_1C07786FC();
    v4 = (void *)sub_1C106FEEC();
    objc_msgSend(v5, sel_initWithSequence_, v4);
  }

  sub_1C07879E4();
  sub_1C077671C();
}

void sub_1C086D320(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;
  void *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;

  MEMORY[0x1C3BA79F4]();
  sub_1C086A754(&OBJC_IVAR____TtC24IntelligencePlatformCore22BehaviorHistoryUtility____lazy_storage___geoHashStream);
  v5 = v4;
  v6 = sub_1C079FD50(objc_allocWithZone((Class)GDGeoHashVisitUtility), sel_initWithGeoHashStream_);

  v7 = (void *)sub_1C106AD38();
  v8 = (void *)sub_1C106AD38();
  v9 = objc_msgSend(v6, sel_geoHashVisitEventPublisherFrom_to_level_, v7, v8, a3);

  *(_QWORD *)(swift_allocObject() + 16) = a3;
  v10 = sub_1C0790DCC((uint64_t)sub_1C08701B0, MEMORY[0x1E0C809B0], 1107296256, v12, v13);
  swift_release();
  v11 = objc_msgSend(v9, sel_mapWithTransform_, v10);

  _Block_release(v10);
  sub_1C07879E4();
  sub_1C079D2C8();
}

void sub_1C086D470()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(void *);
  uint64_t (*v4)(uint64_t, char *, uint64_t);
  uint64_t (*v5)(uint64_t, char *, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  id v25;
  id v26;
  void *v27;
  uint64_t v28;
  void (*v29)(void *);
  uint64_t v30;

  sub_1C077AE5C();
  v30 = v1;
  v28 = v2;
  v29 = v3;
  v5 = v4;
  v7 = v6;
  v9 = v8;
  v11 = v10;
  sub_1C07ACF80((uint64_t *)&unk_1ED762690);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v12);
  sub_1C077AF80();
  v15 = v13 - v14;
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v28 - v17;
  MEMORY[0x1E0C80A78](v19);
  v21 = (char *)&v28 - v20;
  sub_1C078A8F8(v9, (uint64_t)v18, (uint64_t *)&unk_1ED762690);
  v22 = sub_1C077AE98();
  if (sub_1C07B2D80((uint64_t)v18, 1, v22) == 1)
  {
    sub_1C0784B6C((uint64_t)v18, (uint64_t *)&unk_1ED762690);
    v23 = 1;
  }
  else
  {
    sub_1C106AD2C();
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v22 - 8) + 8))(v18, v22);
    v23 = 0;
  }
  sub_1C077B5DC((uint64_t)v21, v23);
  sub_1C077B5DC(v15, 1);
  v24 = objc_allocWithZone(MEMORY[0x1E0D026F0]);
  v25 = sub_1C07DC9F8((uint64_t)v21, v15, 0, 0, 1);
  v26 = objc_msgSend(v11, sel_publisherWithOptions_, v25);

  v27 = (void *)MEMORY[0x1C3BA79F4]();
  sub_1C086D638(v7, (uint64_t)v26, v5, v28, v29, v30);
  objc_autoreleasePoolPop(v27);
  if (v0)
  {
    __break(1u);
  }
  else
  {

    sub_1C07757D0();
  }
}

void sub_1C086D638(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, char *, uint64_t), uint64_t a4, void (*a5)(void *a1), uint64_t a6)
{
  uint64_t v6;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  void *v26;
  id v27;
  uint64_t aBlock;
  uint64_t v29;
  void (*v30)();
  uint64_t v31;
  void (*v32)(void *);
  uint64_t v33;

  sub_1C07ACF80((uint64_t *)&unk_1ED762690);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v12);
  sub_1C077AF80();
  v15 = v13 - v14;
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&aBlock - v17;
  sub_1C077AE98();
  sub_1C0788B90((uint64_t)v18);
  v19 = sub_1C0788B90(v15);
  v20 = (void *)MEMORY[0x1C3BA79F4](v19);
  v21 = a3(a2, v18, v15);
  if (v6)
  {
    objc_autoreleasePoolPop(v20);
    __break(1u);
  }
  else
  {
    v22 = (void *)v21;
    objc_autoreleasePoolPop(v20);
    sub_1C0784B6C(v15, (uint64_t *)&unk_1ED762690);
    sub_1C0784B6C((uint64_t)v18, (uint64_t *)&unk_1ED762690);
    v23 = swift_allocObject();
    *(_QWORD *)(v23 + 16) = 0;
    v32 = sub_1C086D850;
    v33 = 0;
    v24 = MEMORY[0x1E0C809B0];
    aBlock = MEMORY[0x1E0C809B0];
    v29 = 1107296256;
    v30 = (void (*)())sub_1C07BF90C;
    v31 = a4;
    v25 = _Block_copy(&aBlock);
    v32 = a5;
    v33 = v23;
    aBlock = v24;
    v29 = 1107296256;
    v30 = sub_1C086A668;
    v31 = a6;
    v26 = _Block_copy(&aBlock);
    swift_retain();
    swift_release();
    v27 = objc_msgSend(v22, sel_sinkWithCompletion_shouldContinue_, v25, v26);

    _Block_release(v26);
    _Block_release(v25);

    swift_beginAccess();
    swift_retain();
    swift_release();
  }
}

void sub_1C086D850(void *a1)
{
  sub_1C0875018(a1, "BehaviorHistoryUtility [lastEvent]: Biome query completed with error - %s");
}

id sub_1C086D85C(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  void *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  id v20;
  uint64_t v22;
  uint64_t aBlock;
  uint64_t v24;
  void (*v25)();
  void *v26;
  void (*v27)();
  uint64_t v28;

  v6 = sub_1C07ACF80((uint64_t *)&unk_1ED762690);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v22 - v11;
  v27 = sub_1C086F2F8;
  v28 = 0;
  aBlock = MEMORY[0x1E0C809B0];
  v24 = 1107296256;
  v25 = (void (*)())sub_1C08701B0;
  v26 = &unk_1E7A102E0;
  v13 = _Block_copy(&aBlock);
  swift_release();
  v14 = objc_msgSend(a1, sel_mapWithTransform_, v13);
  _Block_release(v13);
  sub_1C078A8F8(a2, (uint64_t)v12, (uint64_t *)&unk_1ED762690);
  sub_1C078A8F8(a3, (uint64_t)v9, (uint64_t *)&unk_1ED762690);
  v15 = *(unsigned __int8 *)(v7 + 80);
  v16 = (v15 + 16) & ~v15;
  v17 = (v8 + v15 + v16) & ~v15;
  v18 = swift_allocObject();
  sub_1C078A67C((uint64_t)v12, v18 + v16, (uint64_t *)&unk_1ED762690);
  sub_1C078A67C((uint64_t)v9, v18 + v17, (uint64_t *)&unk_1ED762690);
  v27 = (void (*)())sub_1C0875C68;
  v28 = v18;
  aBlock = MEMORY[0x1E0C809B0];
  v24 = 1107296256;
  v25 = sub_1C0870B58;
  v26 = &unk_1E7A10330;
  v19 = _Block_copy(&aBlock);
  swift_release();
  v20 = objc_msgSend(v14, sel_filterWithIsIncluded_, v19);
  _Block_release(v19);

  return v20;
}

id sub_1C086DA68(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  void *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  id v20;
  uint64_t v22;
  uint64_t aBlock;
  uint64_t v24;
  void (*v25)();
  void *v26;
  void (*v27)();
  uint64_t v28;

  v6 = sub_1C07ACF80((uint64_t *)&unk_1ED762690);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v22 - v11;
  v27 = sub_1C086F304;
  v28 = 0;
  aBlock = MEMORY[0x1E0C809B0];
  v24 = 1107296256;
  v25 = (void (*)())sub_1C08701B0;
  v26 = &unk_1E7A10268;
  v13 = _Block_copy(&aBlock);
  swift_release();
  v14 = objc_msgSend(a1, sel_mapWithTransform_, v13);
  _Block_release(v13);
  sub_1C078A8F8(a2, (uint64_t)v12, (uint64_t *)&unk_1ED762690);
  sub_1C078A8F8(a3, (uint64_t)v9, (uint64_t *)&unk_1ED762690);
  v15 = *(unsigned __int8 *)(v7 + 80);
  v16 = (v15 + 16) & ~v15;
  v17 = (v8 + v15 + v16) & ~v15;
  v18 = swift_allocObject();
  sub_1C078A67C((uint64_t)v12, v18 + v16, (uint64_t *)&unk_1ED762690);
  sub_1C078A67C((uint64_t)v9, v18 + v17, (uint64_t *)&unk_1ED762690);
  v27 = (void (*)())sub_1C0875C68;
  v28 = v18;
  aBlock = MEMORY[0x1E0C809B0];
  v24 = 1107296256;
  v25 = sub_1C0870B58;
  v26 = &unk_1E7A102B8;
  v19 = _Block_copy(&aBlock);
  swift_release();
  v20 = objc_msgSend(v14, sel_filterWithIsIncluded_, v19);
  _Block_release(v19);

  return v20;
}

id sub_1C086DC74(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  void *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  id v20;
  uint64_t v22;
  uint64_t aBlock;
  uint64_t v24;
  void (*v25)();
  void *v26;
  uint64_t (*v27)@<X0>(void *@<X0>, uint64_t *@<X8>);
  uint64_t v28;

  v6 = sub_1C07ACF80((uint64_t *)&unk_1ED762690);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v22 - v11;
  v27 = sub_1C086F4DC;
  v28 = 0;
  aBlock = MEMORY[0x1E0C809B0];
  v24 = 1107296256;
  v25 = (void (*)())sub_1C08701B0;
  v26 = &unk_1E7A10128;
  v13 = _Block_copy(&aBlock);
  swift_release();
  v14 = objc_msgSend(a1, sel_mapWithTransform_, v13);
  _Block_release(v13);
  sub_1C078A8F8(a2, (uint64_t)v12, (uint64_t *)&unk_1ED762690);
  sub_1C078A8F8(a3, (uint64_t)v9, (uint64_t *)&unk_1ED762690);
  v15 = *(unsigned __int8 *)(v7 + 80);
  v16 = (v15 + 16) & ~v15;
  v17 = (v8 + v15 + v16) & ~v15;
  v18 = swift_allocObject();
  sub_1C078A67C((uint64_t)v12, v18 + v16, (uint64_t *)&unk_1ED762690);
  sub_1C078A67C((uint64_t)v9, v18 + v17, (uint64_t *)&unk_1ED762690);
  v27 = (uint64_t (*)@<X0>(void *@<X0>, uint64_t *@<X8>))sub_1C0875C68;
  v28 = v18;
  aBlock = MEMORY[0x1E0C809B0];
  v24 = 1107296256;
  v25 = sub_1C0870B58;
  v26 = &unk_1E7A10178;
  v19 = _Block_copy(&aBlock);
  swift_release();
  v20 = objc_msgSend(v14, sel_filterWithIsIncluded_, v19);
  _Block_release(v19);

  return v20;
}

id sub_1C086DE80(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  void *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  id v20;
  uint64_t v22;
  uint64_t aBlock;
  uint64_t v24;
  void (*v25)();
  void *v26;
  void (*v27)();
  uint64_t v28;

  v6 = sub_1C07ACF80((uint64_t *)&unk_1ED762690);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v22 - v11;
  v27 = sub_1C086F6E0;
  v28 = 0;
  aBlock = MEMORY[0x1E0C809B0];
  v24 = 1107296256;
  v25 = (void (*)())sub_1C08701B0;
  v26 = &unk_1E7A10038;
  v13 = _Block_copy(&aBlock);
  swift_release();
  v14 = objc_msgSend(a1, sel_mapWithTransform_, v13);
  _Block_release(v13);
  sub_1C078A8F8(a2, (uint64_t)v12, (uint64_t *)&unk_1ED762690);
  sub_1C078A8F8(a3, (uint64_t)v9, (uint64_t *)&unk_1ED762690);
  v15 = *(unsigned __int8 *)(v7 + 80);
  v16 = (v15 + 16) & ~v15;
  v17 = (v8 + v15 + v16) & ~v15;
  v18 = swift_allocObject();
  sub_1C078A67C((uint64_t)v12, v18 + v16, (uint64_t *)&unk_1ED762690);
  sub_1C078A67C((uint64_t)v9, v18 + v17, (uint64_t *)&unk_1ED762690);
  v27 = (void (*)())sub_1C0875C68;
  v28 = v18;
  aBlock = MEMORY[0x1E0C809B0];
  v24 = 1107296256;
  v25 = sub_1C0870B58;
  v26 = &unk_1E7A10088;
  v19 = _Block_copy(&aBlock);
  swift_release();
  v20 = objc_msgSend(v14, sel_filterWithIsIncluded_, v19);
  _Block_release(v19);

  return v20;
}

id sub_1C086E08C(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  void *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  id v20;
  uint64_t v22;
  uint64_t aBlock;
  uint64_t v24;
  void (*v25)();
  void *v26;
  uint64_t (*v27)@<X0>(void *@<X0>, uint64_t *@<X8>);
  uint64_t v28;

  v6 = sub_1C07ACF80((uint64_t *)&unk_1ED762690);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v22 - v11;
  v27 = sub_1C086F6EC;
  v28 = 0;
  aBlock = MEMORY[0x1E0C809B0];
  v24 = 1107296256;
  v25 = (void (*)())sub_1C08701B0;
  v26 = &unk_1E7A0FFC0;
  v13 = _Block_copy(&aBlock);
  swift_release();
  v14 = objc_msgSend(a1, sel_mapWithTransform_, v13);
  _Block_release(v13);
  sub_1C078A8F8(a2, (uint64_t)v12, (uint64_t *)&unk_1ED762690);
  sub_1C078A8F8(a3, (uint64_t)v9, (uint64_t *)&unk_1ED762690);
  v15 = *(unsigned __int8 *)(v7 + 80);
  v16 = (v15 + 16) & ~v15;
  v17 = (v8 + v15 + v16) & ~v15;
  v18 = swift_allocObject();
  sub_1C078A67C((uint64_t)v12, v18 + v16, (uint64_t *)&unk_1ED762690);
  sub_1C078A67C((uint64_t)v9, v18 + v17, (uint64_t *)&unk_1ED762690);
  v27 = (uint64_t (*)@<X0>(void *@<X0>, uint64_t *@<X8>))sub_1C0875C68;
  v28 = v18;
  aBlock = MEMORY[0x1E0C809B0];
  v24 = 1107296256;
  v25 = sub_1C0870B58;
  v26 = &unk_1E7A10010;
  v19 = _Block_copy(&aBlock);
  swift_release();
  v20 = objc_msgSend(v14, sel_filterWithIsIncluded_, v19);
  _Block_release(v19);

  return v20;
}

id sub_1C086E298(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  void *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  id v20;
  uint64_t v22;
  uint64_t aBlock;
  uint64_t v24;
  void (*v25)();
  void *v26;
  uint64_t (*v27)@<X0>(void *@<X0>, uint64_t *@<X8>);
  uint64_t v28;

  v6 = sub_1C07ACF80((uint64_t *)&unk_1ED762690);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v22 - v11;
  v27 = sub_1C086F8F0;
  v28 = 0;
  aBlock = MEMORY[0x1E0C809B0];
  v24 = 1107296256;
  v25 = (void (*)())sub_1C08701B0;
  v26 = &unk_1E7A0FF20;
  v13 = _Block_copy(&aBlock);
  swift_release();
  v14 = objc_msgSend(a1, sel_mapWithTransform_, v13);
  _Block_release(v13);
  sub_1C078A8F8(a2, (uint64_t)v12, (uint64_t *)&unk_1ED762690);
  sub_1C078A8F8(a3, (uint64_t)v9, (uint64_t *)&unk_1ED762690);
  v15 = *(unsigned __int8 *)(v7 + 80);
  v16 = (v15 + 16) & ~v15;
  v17 = (v8 + v15 + v16) & ~v15;
  v18 = swift_allocObject();
  sub_1C078A67C((uint64_t)v12, v18 + v16, (uint64_t *)&unk_1ED762690);
  sub_1C078A67C((uint64_t)v9, v18 + v17, (uint64_t *)&unk_1ED762690);
  v27 = (uint64_t (*)@<X0>(void *@<X0>, uint64_t *@<X8>))sub_1C0875C68;
  v28 = v18;
  aBlock = MEMORY[0x1E0C809B0];
  v24 = 1107296256;
  v25 = sub_1C0870B58;
  v26 = &unk_1E7A0FF70;
  v19 = _Block_copy(&aBlock);
  swift_release();
  v20 = objc_msgSend(v14, sel_filterWithIsIncluded_, v19);
  _Block_release(v19);

  return v20;
}

id sub_1C086E4A4(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  void *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  id v20;
  uint64_t v22;
  uint64_t aBlock;
  uint64_t v24;
  void (*v25)();
  void *v26;
  void (*v27)();
  uint64_t v28;

  v6 = sub_1C07ACF80((uint64_t *)&unk_1ED762690);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v22 - v11;
  v27 = sub_1C086FAF4;
  v28 = 0;
  aBlock = MEMORY[0x1E0C809B0];
  v24 = 1107296256;
  v25 = (void (*)())sub_1C08701B0;
  v26 = &unk_1E7A0FEA8;
  v13 = _Block_copy(&aBlock);
  swift_release();
  v14 = objc_msgSend(a1, sel_mapWithTransform_, v13);
  _Block_release(v13);
  sub_1C078A8F8(a2, (uint64_t)v12, (uint64_t *)&unk_1ED762690);
  sub_1C078A8F8(a3, (uint64_t)v9, (uint64_t *)&unk_1ED762690);
  v15 = *(unsigned __int8 *)(v7 + 80);
  v16 = (v15 + 16) & ~v15;
  v17 = (v8 + v15 + v16) & ~v15;
  v18 = swift_allocObject();
  sub_1C078A67C((uint64_t)v12, v18 + v16, (uint64_t *)&unk_1ED762690);
  sub_1C078A67C((uint64_t)v9, v18 + v17, (uint64_t *)&unk_1ED762690);
  v27 = (void (*)())sub_1C0875C68;
  v28 = v18;
  aBlock = MEMORY[0x1E0C809B0];
  v24 = 1107296256;
  v25 = sub_1C0870B58;
  v26 = &unk_1E7A0FEF8;
  v19 = _Block_copy(&aBlock);
  swift_release();
  v20 = objc_msgSend(v14, sel_filterWithIsIncluded_, v19);
  _Block_release(v19);

  return v20;
}

id sub_1C086E6B0(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  void *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  id v20;
  uint64_t v22;
  uint64_t aBlock;
  uint64_t v24;
  void (*v25)();
  void *v26;
  void (*v27)();
  uint64_t v28;

  v6 = sub_1C07ACF80((uint64_t *)&unk_1ED762690);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v22 - v11;
  v27 = sub_1C086FB00;
  v28 = 0;
  aBlock = MEMORY[0x1E0C809B0];
  v24 = 1107296256;
  v25 = (void (*)())sub_1C08701B0;
  v26 = &unk_1E7A0FD40;
  v13 = _Block_copy(&aBlock);
  swift_release();
  v14 = objc_msgSend(a1, sel_mapWithTransform_, v13);
  _Block_release(v13);
  sub_1C078A8F8(a2, (uint64_t)v12, (uint64_t *)&unk_1ED762690);
  sub_1C078A8F8(a3, (uint64_t)v9, (uint64_t *)&unk_1ED762690);
  v15 = *(unsigned __int8 *)(v7 + 80);
  v16 = (v15 + 16) & ~v15;
  v17 = (v8 + v15 + v16) & ~v15;
  v18 = swift_allocObject();
  sub_1C078A67C((uint64_t)v12, v18 + v16, (uint64_t *)&unk_1ED762690);
  sub_1C078A67C((uint64_t)v9, v18 + v17, (uint64_t *)&unk_1ED762690);
  v27 = (void (*)())sub_1C0875C68;
  v28 = v18;
  aBlock = MEMORY[0x1E0C809B0];
  v24 = 1107296256;
  v25 = sub_1C0870B58;
  v26 = &unk_1E7A0FD90;
  v19 = _Block_copy(&aBlock);
  swift_release();
  v20 = objc_msgSend(v14, sel_filterWithIsIncluded_, v19);
  _Block_release(v19);

  return v20;
}

id sub_1C086E8BC(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  void *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  id v20;
  uint64_t v22;
  uint64_t aBlock;
  uint64_t v24;
  void (*v25)();
  void *v26;
  void (*v27)();
  uint64_t v28;

  v6 = sub_1C07ACF80((uint64_t *)&unk_1ED762690);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v22 - v11;
  v27 = sub_1C086FB14;
  v28 = 0;
  aBlock = MEMORY[0x1E0C809B0];
  v24 = 1107296256;
  v25 = (void (*)())sub_1C08701B0;
  v26 = &unk_1E7A0FCC8;
  v13 = _Block_copy(&aBlock);
  swift_release();
  v14 = objc_msgSend(a1, sel_mapWithTransform_, v13);
  _Block_release(v13);
  sub_1C078A8F8(a2, (uint64_t)v12, (uint64_t *)&unk_1ED762690);
  sub_1C078A8F8(a3, (uint64_t)v9, (uint64_t *)&unk_1ED762690);
  v15 = *(unsigned __int8 *)(v7 + 80);
  v16 = (v15 + 16) & ~v15;
  v17 = (v8 + v15 + v16) & ~v15;
  v18 = swift_allocObject();
  sub_1C078A67C((uint64_t)v12, v18 + v16, (uint64_t *)&unk_1ED762690);
  sub_1C078A67C((uint64_t)v9, v18 + v17, (uint64_t *)&unk_1ED762690);
  v27 = (void (*)())sub_1C0875C68;
  v28 = v18;
  aBlock = MEMORY[0x1E0C809B0];
  v24 = 1107296256;
  v25 = sub_1C0870B58;
  v26 = &unk_1E7A0FD18;
  v19 = _Block_copy(&aBlock);
  swift_release();
  v20 = objc_msgSend(v14, sel_filterWithIsIncluded_, v19);
  _Block_release(v19);

  return v20;
}

id sub_1C086EAC8(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  void *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  id v20;
  uint64_t v22;
  uint64_t aBlock;
  uint64_t v24;
  void (*v25)();
  void *v26;
  uint64_t (*v27)@<X0>(void *@<X0>, uint64_t *@<X8>);
  uint64_t v28;

  v6 = sub_1C07ACF80((uint64_t *)&unk_1ED762690);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v22 - v11;
  v27 = sub_1C086FD14;
  v28 = 0;
  aBlock = MEMORY[0x1E0C809B0];
  v24 = 1107296256;
  v25 = (void (*)())sub_1C08701B0;
  v26 = &unk_1E7A10358;
  v13 = _Block_copy(&aBlock);
  swift_release();
  v14 = objc_msgSend(a1, sel_mapWithTransform_, v13);
  _Block_release(v13);
  sub_1C078A8F8(a2, (uint64_t)v12, (uint64_t *)&unk_1ED762690);
  sub_1C078A8F8(a3, (uint64_t)v9, (uint64_t *)&unk_1ED762690);
  v15 = *(unsigned __int8 *)(v7 + 80);
  v16 = (v15 + 16) & ~v15;
  v17 = (v8 + v15 + v16) & ~v15;
  v18 = swift_allocObject();
  sub_1C078A67C((uint64_t)v12, v18 + v16, (uint64_t *)&unk_1ED762690);
  sub_1C078A67C((uint64_t)v9, v18 + v17, (uint64_t *)&unk_1ED762690);
  v27 = (uint64_t (*)@<X0>(void *@<X0>, uint64_t *@<X8>))sub_1C0875C68;
  v28 = v18;
  aBlock = MEMORY[0x1E0C809B0];
  v24 = 1107296256;
  v25 = sub_1C0870B58;
  v26 = &unk_1E7A103A8;
  v19 = _Block_copy(&aBlock);
  swift_release();
  v20 = objc_msgSend(v14, sel_filterWithIsIncluded_, v19);
  _Block_release(v19);

  return v20;
}

id sub_1C086ECD4(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  void *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  id v20;
  uint64_t v22;
  uint64_t aBlock;
  uint64_t v24;
  void (*v25)();
  void *v26;
  uint64_t (*v27)@<X0>(void *@<X0>, uint64_t *@<X8>);
  uint64_t v28;

  v6 = sub_1C07ACF80((uint64_t *)&unk_1ED762690);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v22 - v11;
  v27 = sub_1C086FF18;
  v28 = 0;
  aBlock = MEMORY[0x1E0C809B0];
  v24 = 1107296256;
  v25 = (void (*)())sub_1C08701B0;
  v26 = &unk_1E7A0FDB8;
  v13 = _Block_copy(&aBlock);
  swift_release();
  v14 = objc_msgSend(a1, sel_mapWithTransform_, v13);
  _Block_release(v13);
  sub_1C078A8F8(a2, (uint64_t)v12, (uint64_t *)&unk_1ED762690);
  sub_1C078A8F8(a3, (uint64_t)v9, (uint64_t *)&unk_1ED762690);
  v15 = *(unsigned __int8 *)(v7 + 80);
  v16 = (v15 + 16) & ~v15;
  v17 = (v8 + v15 + v16) & ~v15;
  v18 = swift_allocObject();
  sub_1C078A67C((uint64_t)v12, v18 + v16, (uint64_t *)&unk_1ED762690);
  sub_1C078A67C((uint64_t)v9, v18 + v17, (uint64_t *)&unk_1ED762690);
  v27 = (uint64_t (*)@<X0>(void *@<X0>, uint64_t *@<X8>))sub_1C0875C68;
  v28 = v18;
  aBlock = MEMORY[0x1E0C809B0];
  v24 = 1107296256;
  v25 = sub_1C0870B58;
  v26 = &unk_1E7A0FE08;
  v19 = _Block_copy(&aBlock);
  swift_release();
  v20 = objc_msgSend(v14, sel_filterWithIsIncluded_, v19);
  _Block_release(v19);

  return v20;
}

id sub_1C086EEE0(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  void *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  id v20;
  uint64_t v22;
  uint64_t aBlock;
  uint64_t v24;
  void (*v25)();
  void *v26;
  void (*v27)();
  uint64_t v28;

  v6 = sub_1C07ACF80((uint64_t *)&unk_1ED762690);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v22 - v11;
  v27 = sub_1C0870198;
  v28 = 0;
  aBlock = MEMORY[0x1E0C809B0];
  v24 = 1107296256;
  v25 = (void (*)())sub_1C08701B0;
  v26 = &unk_1E7A0FE30;
  v13 = _Block_copy(&aBlock);
  swift_release();
  v14 = objc_msgSend(a1, sel_mapWithTransform_, v13);
  _Block_release(v13);
  sub_1C078A8F8(a2, (uint64_t)v12, (uint64_t *)&unk_1ED762690);
  sub_1C078A8F8(a3, (uint64_t)v9, (uint64_t *)&unk_1ED762690);
  v15 = *(unsigned __int8 *)(v7 + 80);
  v16 = (v15 + 16) & ~v15;
  v17 = (v8 + v15 + v16) & ~v15;
  v18 = swift_allocObject();
  sub_1C078A67C((uint64_t)v12, v18 + v16, (uint64_t *)&unk_1ED762690);
  sub_1C078A67C((uint64_t)v9, v18 + v17, (uint64_t *)&unk_1ED762690);
  v27 = (void (*)())sub_1C0875C68;
  v28 = v18;
  aBlock = MEMORY[0x1E0C809B0];
  v24 = 1107296256;
  v25 = sub_1C0870B58;
  v26 = &unk_1E7A0FE80;
  v19 = _Block_copy(&aBlock);
  swift_release();
  v20 = objc_msgSend(v14, sel_filterWithIsIncluded_, v19);
  _Block_release(v19);

  return v20;
}

id sub_1C086F0EC(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  void *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  id v20;
  uint64_t v22;
  uint64_t aBlock;
  uint64_t v24;
  void (*v25)();
  void *v26;
  void (*v27)();
  uint64_t v28;

  v6 = sub_1C07ACF80((uint64_t *)&unk_1ED762690);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v22 - v11;
  v27 = sub_1C08701A4;
  v28 = 0;
  aBlock = MEMORY[0x1E0C809B0];
  v24 = 1107296256;
  v25 = (void (*)())sub_1C08701B0;
  v26 = &unk_1E7A100B0;
  v13 = _Block_copy(&aBlock);
  swift_release();
  v14 = objc_msgSend(a1, sel_mapWithTransform_, v13);
  _Block_release(v13);
  sub_1C078A8F8(a2, (uint64_t)v12, (uint64_t *)&unk_1ED762690);
  sub_1C078A8F8(a3, (uint64_t)v9, (uint64_t *)&unk_1ED762690);
  v15 = *(unsigned __int8 *)(v7 + 80);
  v16 = (v15 + 16) & ~v15;
  v17 = (v8 + v15 + v16) & ~v15;
  v18 = swift_allocObject();
  sub_1C078A67C((uint64_t)v12, v18 + v16, (uint64_t *)&unk_1ED762690);
  sub_1C078A67C((uint64_t)v9, v18 + v17, (uint64_t *)&unk_1ED762690);
  v27 = (void (*)())sub_1C0875C68;
  v28 = v18;
  aBlock = MEMORY[0x1E0C809B0];
  v24 = 1107296256;
  v25 = sub_1C0870B58;
  v26 = &unk_1E7A10100;
  v19 = _Block_copy(&aBlock);
  swift_release();
  v20 = objc_msgSend(v14, sel_filterWithIsIncluded_, v19);
  _Block_release(v19);

  return v20;
}

void sub_1C086F2F8()
{
  sub_1C086F310();
}

void sub_1C086F304()
{
  sub_1C086F310();
}

void sub_1C086F310()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(_QWORD *__return_ptr, __n128);
  void (*v3)(_QWORD *__return_ptr, __n128);
  void *v4;
  void *v5;
  uint64_t *v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  id v17;
  __n128 v18;
  void *v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  __n128 v24;
  id v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  _BYTE v29[40];
  uint64_t *v30;
  _QWORD v31[5];
  char v32;
  unsigned __int8 v33;
  __n128 v34;
  __n128 v35;
  uint64_t v36;
  char v37;

  sub_1C0779670();
  v3 = v2;
  v5 = v4;
  v7 = v6;
  sub_1C07ACF80((uint64_t *)&unk_1ED762690);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v8);
  v10 = &v29[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v11 = sub_1C077AE98();
  sub_1C0778688();
  MEMORY[0x1E0C80A78](v12);
  sub_1C07768A8();
  MEMORY[0x1E0C80A78](v13);
  v15 = &v29[-v14];
  v17 = sub_1C079866C(v16, sel_eventBody);
  v18 = 0uLL;
  v30 = v7;
  if (v17)
  {
    v19 = v17;
    v3(v31, (__n128)0);
    sub_1C07A2388();
    v20 = v31[4];
    v21 = v32;

    sub_1C07ABBF0(v22, v23, &qword_1ED758C90);
    if (v33 == 255)
    {
      v20 = 0;
      v21 = 21;
      v24 = 0uLL;
      v18 = 0uLL;
    }
    else
    {
      sub_1C07AD598();
      v18 = sub_1C0775948();
    }
  }
  else
  {
    v20 = 0;
    v21 = 21;
    v24 = 0uLL;
  }
  v34 = v18;
  v35 = v24;
  v36 = v20;
  v37 = v21;
  v25 = sub_1C079866C((uint64_t)v17, sel_eventBody);
  sub_1C07BCDC0();
  if (v25 && (v25, sub_1C07B2D80((uint64_t)v10, 1, v11) != 1))
  {
    sub_1C078A72C((uint64_t)v15, (uint64_t)v10, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v1 + 32));
  }
  else
  {
    objc_msgSend(v5, sel_timestamp);
    sub_1C077F664();
    sub_1C0784B6C((uint64_t)v10, (uint64_t *)&unk_1ED762690);
  }
  v26 = v30;
  v27 = sub_1C07786FC();
  sub_1C078A72C(v0, (uint64_t)v15, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v1 + 16));
  v28 = sub_1C077D000();
  v26[3] = v27;
  *v26 = v28;
  sub_1C07943BC((uint64_t)v15, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  sub_1C0776760();
}

uint64_t sub_1C086F4DC@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  double v12;
  uint64_t v13;
  char *v14;
  id v15;
  void *v16;
  unsigned int v17;
  uint64_t v18;
  char v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;

  v4 = sub_1C07ACF80((uint64_t *)&unk_1ED762690);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1C106ADE0();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v24 - v13;
  v15 = objc_msgSend(a1, sel_eventBody, v12);
  if (v15)
  {
    v16 = v15;
    v17 = objc_msgSend(v15, sel_starting);

    v18 = v17;
    v19 = 11;
  }
  else
  {
    v18 = 0;
    v19 = 21;
  }
  LOBYTE(v25) = v19;
  v20 = objc_msgSend(a1, sel_eventBody, v18, 0, 0, 0, 0, v25);
  sub_1C07B2D8C((uint64_t)v6, 1, 1, v7);
  if (v20 && (v20, sub_1C07B2D80((uint64_t)v6, 1, v7) != 1))
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v14, v6, v7);
  }
  else
  {
    objc_msgSend(a1, sel_timestamp);
    sub_1C106AC54();
    sub_1C0784B6C((uint64_t)v6, (uint64_t *)&unk_1ED762690);
  }
  v21 = type metadata accessor for BehaviorEvent();
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v10, v14, v7);
  v22 = sub_1C08258CC((uint64_t)&v24, (uint64_t)v10);
  a2[3] = v21;
  *a2 = v22;
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v14, v7);
}

void sub_1C086F6E0()
{
  sub_1C086F310();
}

uint64_t sub_1C086F6EC@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  double v12;
  uint64_t v13;
  char *v14;
  id v15;
  void *v16;
  unsigned int v17;
  uint64_t v18;
  char v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;

  v4 = sub_1C07ACF80((uint64_t *)&unk_1ED762690);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1C106ADE0();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v24 - v13;
  v15 = objc_msgSend(a1, sel_eventBody, v12);
  if (v15)
  {
    v16 = v15;
    v17 = objc_msgSend(v15, sel_starting);

    v18 = v17;
    v19 = 8;
  }
  else
  {
    v18 = 0;
    v19 = 21;
  }
  LOBYTE(v25) = v19;
  v20 = objc_msgSend(a1, sel_eventBody, v18, 0, 0, 0, 0, v25);
  sub_1C07B2D8C((uint64_t)v6, 1, 1, v7);
  if (v20 && (v20, sub_1C07B2D80((uint64_t)v6, 1, v7) != 1))
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v14, v6, v7);
  }
  else
  {
    objc_msgSend(a1, sel_timestamp);
    sub_1C106AC54();
    sub_1C0784B6C((uint64_t)v6, (uint64_t *)&unk_1ED762690);
  }
  v21 = type metadata accessor for BehaviorEvent();
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v10, v14, v7);
  v22 = sub_1C08258CC((uint64_t)&v24, (uint64_t)v10);
  a2[3] = v21;
  *a2 = v22;
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v14, v7);
}

uint64_t sub_1C086F8F0@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  double v12;
  uint64_t v13;
  char *v14;
  id v15;
  void *v16;
  unsigned int v17;
  uint64_t v18;
  char v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;

  v4 = sub_1C07ACF80((uint64_t *)&unk_1ED762690);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1C106ADE0();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v24 - v13;
  v15 = objc_msgSend(a1, sel_eventBody, v12);
  if (v15)
  {
    v16 = v15;
    v17 = objc_msgSend(v15, sel_starting);

    v18 = v17;
    v19 = 6;
  }
  else
  {
    v18 = 0;
    v19 = 21;
  }
  LOBYTE(v25) = v19;
  v20 = objc_msgSend(a1, sel_eventBody, v18, 0, 0, 0, 0, v25);
  sub_1C07B2D8C((uint64_t)v6, 1, 1, v7);
  if (v20 && (v20, sub_1C07B2D80((uint64_t)v6, 1, v7) != 1))
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v14, v6, v7);
  }
  else
  {
    objc_msgSend(a1, sel_timestamp);
    sub_1C106AC54();
    sub_1C0784B6C((uint64_t)v6, (uint64_t *)&unk_1ED762690);
  }
  v21 = type metadata accessor for BehaviorEvent();
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v10, v14, v7);
  v22 = sub_1C08258CC((uint64_t)&v24, (uint64_t)v10);
  a2[3] = v21;
  *a2 = v22;
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v14, v7);
}

void sub_1C086FAF4()
{
  sub_1C086F310();
}

void sub_1C086FB00()
{
  sub_1C086FB28();
}

void sub_1C086FB14()
{
  sub_1C086FB28();
}

void sub_1C086FB28()
{
  uint64_t v0;
  void (*v1)(void);
  void (*v2)(_QWORD *__return_ptr, __n128);
  void (*v3)(_QWORD *__return_ptr, __n128);
  void *v4;
  void *v5;
  uint64_t *v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  id v17;
  __n128 v18;
  void *v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  __n128 v24;
  id v25;
  void *v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  _BYTE v30[32];
  void (*v31)(void);
  uint64_t *v32;
  _QWORD v33[5];
  char v34;
  unsigned __int8 v35;
  __n128 v36;
  __n128 v37;
  uint64_t v38;
  char v39;

  sub_1C0779670();
  v31 = v1;
  v3 = v2;
  v5 = v4;
  v7 = v6;
  sub_1C07ACF80((uint64_t *)&unk_1ED762690);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v8);
  v10 = &v30[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v11 = sub_1C077AE98();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  sub_1C07768A8();
  MEMORY[0x1E0C80A78](v13);
  v15 = &v30[-v14];
  v17 = sub_1C079866C(v16, sel_eventBody);
  v18 = 0uLL;
  v32 = v7;
  if (v17)
  {
    v19 = v17;
    v3(v33, (__n128)0);
    sub_1C07A2388();
    v20 = v33[4];
    v21 = v34;

    sub_1C07ABBF0(v22, v23, &qword_1ED758C90);
    if (v35 == 255)
    {
      v20 = 0;
      v21 = 21;
      v24 = 0uLL;
      v18 = 0uLL;
    }
    else
    {
      sub_1C07AD598();
      v18 = sub_1C0775948();
    }
  }
  else
  {
    v20 = 0;
    v21 = 21;
    v24 = 0uLL;
  }
  v36 = v18;
  v37 = v24;
  v38 = v20;
  v39 = v21;
  v25 = sub_1C079866C((uint64_t)v17, sel_eventBody);
  if (!v25)
  {
    sub_1C07BCDC0();
    goto LABEL_10;
  }
  v26 = v25;
  v31();

  if (sub_1C07B2D80((uint64_t)v10, 1, v11) == 1)
  {
LABEL_10:
    objc_msgSend(v5, sel_timestamp);
    sub_1C077F664();
    sub_1C0784B6C((uint64_t)v10, (uint64_t *)&unk_1ED762690);
    goto LABEL_11;
  }
  sub_1C078A72C((uint64_t)v15, (uint64_t)v10, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 32));
LABEL_11:
  v27 = v32;
  v28 = sub_1C07786FC();
  sub_1C078A72C(v0, (uint64_t)v15, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 16));
  v29 = sub_1C077D000();
  v27[3] = v28;
  *v27 = v29;
  sub_1C07943BC((uint64_t)v15, *(uint64_t (**)(uint64_t, uint64_t))(v12 + 8));
  sub_1C0776760();
}

uint64_t sub_1C086FD14@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  double v12;
  uint64_t v13;
  char *v14;
  id v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;

  v4 = sub_1C07ACF80((uint64_t *)&unk_1ED762690);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1C106ADE0();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v24 - v13;
  v15 = objc_msgSend(a1, sel_eventBody, v12);
  if (v15)
  {
    v16 = v15;
    sub_1C0F180E4();
    v18 = v17;

    v19 = 15;
  }
  else
  {
    v18 = 0;
    v19 = 21;
  }
  LOBYTE(v25) = v19;
  v20 = objc_msgSend(a1, sel_eventBody, v18, 0, 0, 0, 0, v25);
  sub_1C07B2D8C((uint64_t)v6, 1, 1, v7);
  if (v20 && (v20, sub_1C07B2D80((uint64_t)v6, 1, v7) != 1))
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v14, v6, v7);
  }
  else
  {
    objc_msgSend(a1, sel_timestamp);
    sub_1C106AC54();
    sub_1C0784B6C((uint64_t)v6, (uint64_t *)&unk_1ED762690);
  }
  v21 = type metadata accessor for BehaviorEvent();
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v10, v14, v7);
  v22 = sub_1C08258CC((uint64_t)&v24, (uint64_t)v10);
  a2[3] = v21;
  *a2 = v22;
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v14, v7);
}

uint64_t sub_1C086FF18@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  double v12;
  uint64_t v13;
  char *v14;
  id v15;
  __int128 v16;
  void *v17;
  uint64_t v18;
  char v19;
  __int128 v20;
  id v21;
  void *v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v27;
  __int128 v28;
  uint64_t *v29;
  _OWORD v30[2];
  uint64_t v31;
  char v32;
  _BYTE v33[48];
  char v34[48];
  _OWORD v35[2];
  uint64_t v36;
  char v37;

  v4 = sub_1C07ACF80((uint64_t *)&unk_1ED762690);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1C106ADE0();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v27 - v13;
  v15 = objc_msgSend(a1, sel_eventBody, v12);
  v16 = 0uLL;
  v29 = a2;
  if (v15)
  {
    v17 = v15;
    sub_1C0876B78();
    v27 = v30[0];
    v28 = v30[1];
    v18 = v31;
    v19 = v32;

    sub_1C078A67C((uint64_t)v30, (uint64_t)v33, &qword_1ED758C90);
    if (v33[40] == 255)
    {
      v18 = 0;
      v19 = 21;
      v20 = 0uLL;
      v16 = 0uLL;
    }
    else
    {
      sub_1C07DFF44((uint64_t)v33, (uint64_t)v34);
      v16 = v27;
      v20 = v28;
    }
  }
  else
  {
    v18 = 0;
    v19 = 21;
    v20 = 0uLL;
  }
  v35[0] = v16;
  v35[1] = v20;
  v36 = v18;
  v37 = v19;
  v21 = objc_msgSend(a1, sel_eventBody);
  if (!v21)
  {
    sub_1C07B2D8C((uint64_t)v6, 1, 1, v7);
    goto LABEL_10;
  }
  v22 = v21;
  sub_1C0876BE8((uint64_t)v6);

  if (sub_1C07B2D80((uint64_t)v6, 1, v7) == 1)
  {
LABEL_10:
    objc_msgSend(a1, sel_timestamp);
    sub_1C106AC54();
    sub_1C0784B6C((uint64_t)v6, (uint64_t *)&unk_1ED762690);
    goto LABEL_11;
  }
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v14, v6, v7);
LABEL_11:
  v23 = v29;
  v24 = type metadata accessor for BehaviorEvent();
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v10, v14, v7);
  v25 = sub_1C08258CC((uint64_t)v35, (uint64_t)v10);
  v23[3] = v24;
  *v23 = v25;
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v14, v7);
}

void sub_1C0870198()
{
  sub_1C086F310();
}

void sub_1C08701A4()
{
  sub_1C086F310();
}

uint64_t sub_1C08701B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  NSObject *v29;
  os_log_type_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  unint64_t v46;
  char *v47;
  uint64_t v48;
  unint64_t v49;
  char *v50;
  uint64_t v51;
  unint64_t v52;
  void (*v53)(char *, char *);
  os_log_t v54;
  char *v55;
  char *v56;
  int v57;
  char *v58;
  char *v59;
  char v60;
  uint64_t v61;
  char *v62;
  NSObject *v63;
  os_log_type_t v64;
  int v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  unint64_t v79;
  unint64_t v80;
  uint64_t v81;
  unint64_t v82;
  char *v83;
  uint64_t v84;
  unint64_t v85;
  os_log_t v86;
  char *v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char v99;
  void (*v100)(char *, uint64_t);
  char v101;
  void (*v102)(char *, uint64_t);
  void (*v103)(char *, uint64_t);
  uint64_t v105;
  os_log_t v106;
  os_log_t v107;
  char *v108;
  char *v109;
  char *v110;
  uint64_t v111;
  char *v112;
  uint64_t v113;
  char *v114;
  uint64_t v115;
  char *v116;
  _BYTE v117[48];

  v111 = sub_1C106D6CC();
  v113 = *(_QWORD *)(v111 - 8);
  MEMORY[0x1E0C80A78](v111);
  v6 = (char *)&v105 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v112 = (char *)&v105 - v8;
  v9 = sub_1C07ACF80((uint64_t *)&unk_1ED762690);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v105 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v105 - v13;
  v15 = sub_1C106ADE0();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  v109 = (char *)&v105 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v18);
  v114 = (char *)&v105 - v19;
  MEMORY[0x1E0C80A78](v20);
  v110 = (char *)&v105 - v21;
  MEMORY[0x1E0C80A78](v22);
  v24 = (char *)&v105 - v23;
  type metadata accessor for BehaviorEvent();
  swift_unknownObjectRetain();
  v25 = swift_dynamicCastClass();
  if (!v25)
  {
    swift_unknownObjectRelease();
LABEL_23:
    v101 = 0;
    return v101 & 1;
  }
  v26 = v25;
  v108 = v6;
  sub_1C078A8F8(a2, (uint64_t)v14, (uint64_t *)&unk_1ED762690);
  if (sub_1C07B2D80((uint64_t)v14, 1, v15) == 1)
  {
    sub_1C0784B6C((uint64_t)v14, (uint64_t *)&unk_1ED762690);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v24, v14, v15);
    if ((sub_1C106AD50() & 1) != 0)
    {
      if (qword_1ED760048 != -1)
        swift_once();
      v27 = sub_1C106F544();
      sub_1C079E000(v27, (uint64_t)qword_1ED78D800);
      v28 = v110;
      (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v110, v24, v15);
      swift_unknownObjectRetain_n();
      v29 = sub_1C106F538();
      v30 = sub_1C1070390();
      v31 = v30;
      if (!os_log_type_enabled(v29, v30))
      {

        v102 = *(void (**)(char *, uint64_t))(v16 + 8);
        v102(v28, v15);
        swift_unknownObjectRelease_n();
        v102(v24, v15);
        goto LABEL_23;
      }
      v32 = swift_slowAlloc();
      v108 = (char *)v15;
      v33 = v32;
      v114 = (char *)swift_slowAlloc();
      v116 = v114;
      *(_DWORD *)v33 = 136315650;
      v34 = sub_1C07DFF44(v26 + 16, (uint64_t)v117);
      LODWORD(v107) = v31;
      v106 = v29;
      v35 = v112;
      sub_1C0824E00(v34, v36, v37, v38, v39, v40, v41, v42);
      sub_1C0794BAC((unint64_t *)&qword_1ED744A68, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3C130], MEMORY[0x1E0D3C168]);
      v109 = v24;
      v43 = v111;
      v44 = sub_1C1070C0C();
      v46 = v45;
      (*(void (**)(char *, uint64_t))(v113 + 8))(v35, v43);
      v115 = sub_1C0788DAC(v44, v46, (uint64_t *)&v116);
      sub_1C10705AC();
      swift_unknownObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v33 + 12) = 2080;
      sub_1C0794BAC((unint64_t *)&qword_1ED7565B0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08F0]);
      v47 = v108;
      v48 = sub_1C1070C0C();
      v115 = sub_1C0788DAC(v48, v49, (uint64_t *)&v116);
      sub_1C10705AC();
      swift_unknownObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v33 + 22) = 2080;
      v50 = v110;
      v51 = sub_1C1070C0C();
      v115 = sub_1C0788DAC(v51, v52, (uint64_t *)&v116);
      sub_1C10705AC();
      swift_bridgeObjectRelease();
      v53 = *(void (**)(char *, char *))(v16 + 8);
      v53(v50, v47);
      v54 = v106;
      _os_log_impl(&dword_1C0771000, v106, (os_log_type_t)v107, "BehaviorHistoryUtility [behaviorPublisher]: Biome unexpectedly emitted %s event on %s, which is earlier than publisher start date %s.", (uint8_t *)v33, 0x20u);
      v55 = v114;
      swift_arrayDestroy();
      MEMORY[0x1C3BA8270](v55, -1, -1);
      MEMORY[0x1C3BA8270](v33, -1, -1);
      swift_unknownObjectRelease();

      v56 = v109;
      goto LABEL_18;
    }
    (*(void (**)(char *, uint64_t))(v16 + 8))(v24, v15);
  }
  sub_1C078A8F8(a3, (uint64_t)v11, (uint64_t *)&unk_1ED762690);
  v57 = sub_1C07B2D80((uint64_t)v11, 1, v15);
  v58 = v114;
  if (v57 != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v114, v11, v15);
    v60 = sub_1C106AD44();
    v59 = v108;
    if ((v60 & 1) == 0)
    {
      (*(void (**)(char *, uint64_t))(v16 + 8))(v58, v15);
      goto LABEL_20;
    }
    if (qword_1ED760048 != -1)
      swift_once();
    v61 = sub_1C106F544();
    sub_1C079E000(v61, (uint64_t)qword_1ED78D800);
    v62 = v109;
    (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v109, v58, v15);
    swift_unknownObjectRetain_n();
    v63 = sub_1C106F538();
    v64 = sub_1C1070390();
    v65 = v64;
    if (!os_log_type_enabled(v63, v64))
    {

      v103 = *(void (**)(char *, uint64_t))(v16 + 8);
      v103(v62, v15);
      swift_unknownObjectRelease_n();
      v103(v58, v15);
      goto LABEL_23;
    }
    v66 = swift_slowAlloc();
    v107 = v63;
    v67 = v66;
    v110 = (char *)swift_slowAlloc();
    v116 = v110;
    *(_DWORD *)v67 = 136315650;
    v108 = (char *)v15;
    v68 = sub_1C07DFF44(v26 + 16, (uint64_t)v117);
    LODWORD(v106) = v65;
    v69 = v112;
    sub_1C0824E00(v68, v70, v71, v72, v73, v74, v75, v76);
    sub_1C0794BAC((unint64_t *)&qword_1ED744A68, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3C130], MEMORY[0x1E0D3C168]);
    v77 = v111;
    v78 = sub_1C1070C0C();
    v80 = v79;
    (*(void (**)(char *, uint64_t))(v113 + 8))(v69, v77);
    v115 = sub_1C0788DAC(v78, v80, (uint64_t *)&v116);
    v113 = v16;
    sub_1C10705AC();
    swift_unknownObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v67 + 12) = 2080;
    sub_1C0794BAC((unint64_t *)&qword_1ED7565B0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08F0]);
    v47 = v108;
    v81 = sub_1C1070C0C();
    v115 = sub_1C0788DAC(v81, v82, (uint64_t *)&v116);
    sub_1C10705AC();
    swift_unknownObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v67 + 22) = 2080;
    v83 = v109;
    v84 = sub_1C1070C0C();
    v115 = sub_1C0788DAC(v84, v85, (uint64_t *)&v116);
    sub_1C10705AC();
    swift_bridgeObjectRelease();
    v53 = *(void (**)(char *, char *))(v113 + 8);
    v53(v83, v47);
    v86 = v107;
    _os_log_impl(&dword_1C0771000, v107, (os_log_type_t)v106, "BehaviorHistoryUtility [behaviorPublisher]: Biome unexpectedly emitted %s event on %s, which is later than publisher end date %s.", (uint8_t *)v67, 0x20u);
    v87 = v110;
    swift_arrayDestroy();
    MEMORY[0x1C3BA8270](v87, -1, -1);
    MEMORY[0x1C3BA8270](v67, -1, -1);
    swift_unknownObjectRelease();

    v56 = v114;
LABEL_18:
    v53(v56, v47);
    goto LABEL_23;
  }
  sub_1C0784B6C((uint64_t)v11, (uint64_t *)&unk_1ED762690);
  v59 = v108;
LABEL_20:
  v88 = sub_1C07DFF44(v26 + 16, (uint64_t)v117);
  v89 = v112;
  sub_1C0824E00(v88, v90, v91, v92, v93, v94, v95, v96);
  v97 = v113;
  v98 = v111;
  (*(void (**)(char *, _QWORD, uint64_t))(v113 + 104))(v59, *MEMORY[0x1E0D3C0F0], v111);
  sub_1C0794BAC((unint64_t *)&unk_1ED744A50, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3C130], MEMORY[0x1E0D3C150]);
  v99 = sub_1C106FAA8();
  swift_unknownObjectRelease();
  v100 = *(void (**)(char *, uint64_t))(v97 + 8);
  v100(v59, v98);
  v100(v89, v98);
  v101 = v99 ^ 1;
  return v101 & 1;
}

void sub_1C0870B58()
{
  void (*v0)(uint64_t);
  uint64_t v1;

  sub_1C07879D4();
  v1 = swift_unknownObjectRetain();
  v0(v1);
  sub_1C079702C();
  swift_unknownObjectRelease();
  sub_1C077671C();
}

void sub_1C0870B90()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(id, char *, uint64_t);
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  void *v21;
  void *v22;
  id v23;
  id v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t (*v32)(id, char *, uint64_t);
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  sub_1C077AE5C();
  v35 = v2;
  v36 = v3;
  v31 = v0;
  v32 = v4;
  v6 = v5;
  v34 = v7;
  v9 = v8;
  v33 = v10;
  sub_1C07ACF80((uint64_t *)&unk_1ED762690);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v11);
  sub_1C0780698();
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v30 - v13;
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v30 - v16;
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v30 - v19;
  sub_1C086A754(v6);
  v22 = v21;
  sub_1C077AE98();
  sub_1C077EB54((uint64_t)v20, v9);
  sub_1C079A84C((uint64_t)v20);
  sub_1C077EB54((uint64_t)v17, v34);
  sub_1C079A84C((uint64_t)v17);
  v23 = objc_allocWithZone(MEMORY[0x1E0D026F0]);
  v24 = sub_1C07DC9F8((uint64_t)v20, (uint64_t)v17, 0, 0, 0);
  v25 = objc_msgSend(v22, sel_publisherWithOptions_, v24);

  sub_1C077EB54((uint64_t)v14, v9);
  sub_1C079A84C((uint64_t)v14);
  sub_1C077EB54(v1, v34);
  v26 = sub_1C079A84C(v1);
  MEMORY[0x1C3BA79F4](v26);
  v27 = v31;
  v28 = v32(v25, v14, v1);
  if (v27)
  {
    sub_1C079F338();
    __break(1u);
  }
  else
  {
    v29 = v28;
    sub_1C079F338();

    sub_1C0784B6C(v1, (uint64_t *)&unk_1ED762690);
    sub_1C0784B6C((uint64_t)v14, (uint64_t *)&unk_1ED762690);
    *v33 = v29;
  }
}

void sub_1C0870D84(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  void *v16;
  void *v17;
  uint64_t v18;
  void (*v19)(char *, uint64_t, uint64_t);
  id v20;
  id v21;
  id v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  id v26;
  id v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;

  v29 = a3;
  v30 = a2;
  v4 = sub_1C07ACF80((uint64_t *)&unk_1ED762690);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v28 - v8;
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v28 - v11;
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v28 - v14;
  sub_1C086A708(&OBJC_IVAR____TtC24IntelligencePlatformCore22BehaviorHistoryUtility____lazy_storage___poiCategoryStream);
  v17 = v16;
  v18 = sub_1C106ADE0();
  v19 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16);
  v19(v15, a1, v18);
  sub_1C07B2D8C((uint64_t)v15, 0, 1, v18);
  v19(v12, v30, v18);
  sub_1C07B2D8C((uint64_t)v12, 0, 1, v18);
  v20 = objc_allocWithZone(MEMORY[0x1E0D026F0]);
  v21 = sub_1C07DC9F8((uint64_t)v15, (uint64_t)v12, 0, 0, 0);
  v22 = objc_msgSend(v17, sel_publisherWithOptions_, v21);

  v19(v9, a1, v18);
  sub_1C07B2D8C((uint64_t)v9, 0, 1, v18);
  v19(v6, v30, v18);
  v23 = sub_1C07B2D8C((uint64_t)v6, 0, 1, v18);
  v24 = (void *)MEMORY[0x1C3BA79F4](v23);
  v25 = v28;
  v26 = sub_1C086ECD4(v22, (uint64_t)v9, (uint64_t)v6);
  if (v25)
  {
    objc_autoreleasePoolPop(v24);
    __break(1u);
  }
  else
  {
    v27 = v26;
    objc_autoreleasePoolPop(v24);

    sub_1C0784B6C((uint64_t)v6, (uint64_t *)&unk_1ED762690);
    sub_1C0784B6C((uint64_t)v9, (uint64_t *)&unk_1ED762690);
    *v29 = v27;
  }
}

void sub_1C0870FEC(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  void *v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  id v20;
  id v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;

  v26 = a3;
  v6 = sub_1C07ACF80((uint64_t *)&unk_1ED762690);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v25 - v10;
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v25 - v13;
  sub_1C086A708(&OBJC_IVAR____TtC24IntelligencePlatformCore22BehaviorHistoryUtility____lazy_storage___poiCategoryStream);
  v16 = v15;
  sub_1C078A8F8(a2, (uint64_t)v11, (uint64_t *)&unk_1ED762690);
  v17 = sub_1C106ADE0();
  if (sub_1C07B2D80((uint64_t)v11, 1, v17) == 1)
  {
    sub_1C0784B6C((uint64_t)v11, (uint64_t *)&unk_1ED762690);
    v18 = 1;
  }
  else
  {
    sub_1C106AD2C();
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v17 - 8) + 8))(v11, v17);
    v18 = 0;
  }
  sub_1C07B2D8C((uint64_t)v14, v18, 1, v17);
  sub_1C07B2D8C((uint64_t)v8, 1, 1, v17);
  v19 = objc_allocWithZone(MEMORY[0x1E0D026F0]);
  v20 = sub_1C07DC9F8((uint64_t)v14, (uint64_t)v8, 0, 0, 1);
  v21 = objc_msgSend(v16, sel_publisherWithOptions_, v20);

  v22 = (void *)MEMORY[0x1C3BA79F4]();
  sub_1C086D638(a1, (uint64_t)v21, (uint64_t (*)(uint64_t, char *, uint64_t))sub_1C086ECD4, (uint64_t)&unk_1E7A10560, (void (*)(void *))sub_1C0875F14, (uint64_t)&unk_1E7A10588);
  if (v3)
  {
    objc_autoreleasePoolPop(v22);
    __break(1u);
  }
  else
  {
    v24 = v23;
    objc_autoreleasePoolPop(v22);

    *v26 = v24;
  }
}

void sub_1C0871230(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  void *v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  id v20;
  id v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;

  v26 = a3;
  v6 = sub_1C07ACF80((uint64_t *)&unk_1ED762690);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v25 - v10;
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v25 - v13;
  sub_1C086A754(&OBJC_IVAR____TtC24IntelligencePlatformCore22BehaviorHistoryUtility____lazy_storage___focusModeStream);
  v16 = v15;
  sub_1C078A8F8(a2, (uint64_t)v11, (uint64_t *)&unk_1ED762690);
  v17 = sub_1C106ADE0();
  if (sub_1C07B2D80((uint64_t)v11, 1, v17) == 1)
  {
    sub_1C0784B6C((uint64_t)v11, (uint64_t *)&unk_1ED762690);
    v18 = 1;
  }
  else
  {
    sub_1C106AD2C();
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v17 - 8) + 8))(v11, v17);
    v18 = 0;
  }
  sub_1C07B2D8C((uint64_t)v14, v18, 1, v17);
  sub_1C07B2D8C((uint64_t)v8, 1, 1, v17);
  v19 = objc_allocWithZone(MEMORY[0x1E0D026F0]);
  v20 = sub_1C07DC9F8((uint64_t)v14, (uint64_t)v8, 0, 0, 1);
  v21 = objc_msgSend(v16, sel_publisherWithOptions_, v20);

  v22 = (void *)MEMORY[0x1C3BA79F4]();
  sub_1C086D638(a1, (uint64_t)v21, (uint64_t (*)(uint64_t, char *, uint64_t))sub_1C086EEE0, (uint64_t)&unk_1E7A105B0, (void (*)(void *))sub_1C0875F14, (uint64_t)&unk_1E7A105D8);
  if (v3)
  {
    objc_autoreleasePoolPop(v22);
    __break(1u);
  }
  else
  {
    v24 = v23;
    objc_autoreleasePoolPop(v22);

    *v26 = v24;
  }
}

void sub_1C087146C(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  void *v16;
  void *v17;
  uint64_t v18;
  void (*v19)(char *, uint64_t, uint64_t);
  id v20;
  id v21;
  id v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  id v26;
  id v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;

  v29 = a3;
  v30 = a2;
  v4 = sub_1C07ACF80((uint64_t *)&unk_1ED762690);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v28 - v8;
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v28 - v11;
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v28 - v14;
  sub_1C086A708(&OBJC_IVAR____TtC24IntelligencePlatformCore22BehaviorHistoryUtility____lazy_storage___wifiEventStream);
  v17 = v16;
  v18 = sub_1C106ADE0();
  v19 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16);
  v19(v15, a1, v18);
  sub_1C07B2D8C((uint64_t)v15, 0, 1, v18);
  v19(v12, v30, v18);
  sub_1C07B2D8C((uint64_t)v12, 0, 1, v18);
  v20 = objc_allocWithZone(MEMORY[0x1E0D026F0]);
  v21 = sub_1C07DC9F8((uint64_t)v15, (uint64_t)v12, 0, 0, 0);
  v22 = objc_msgSend(v17, sel_publisherWithOptions_, v21);

  v19(v9, a1, v18);
  sub_1C07B2D8C((uint64_t)v9, 0, 1, v18);
  v19(v6, v30, v18);
  v23 = sub_1C07B2D8C((uint64_t)v6, 0, 1, v18);
  v24 = (void *)MEMORY[0x1C3BA79F4](v23);
  v25 = v28;
  v26 = sub_1C086DE80(v22, (uint64_t)v9, (uint64_t)v6);
  if (v25)
  {
    objc_autoreleasePoolPop(v24);
    __break(1u);
  }
  else
  {
    v27 = v26;
    objc_autoreleasePoolPop(v24);

    sub_1C0784B6C((uint64_t)v6, (uint64_t *)&unk_1ED762690);
    sub_1C0784B6C((uint64_t)v9, (uint64_t *)&unk_1ED762690);
    *v29 = v27;
  }
}

void sub_1C08716D4(void *a1)
{
  id v2;
  void *v3;
  unsigned int v4;
  id v5;
  void *v6;

  v2 = objc_msgSend(a1, sel_eventBody);
  if (!v2 || (v3 = v2, v4 = objc_msgSend(v2, sel_deviceType), v3, v4 != 21))
  {
    v5 = objc_msgSend(a1, sel_eventBody);
    if (v5)
    {
      v6 = v5;
      objc_msgSend(v5, sel_deviceType);

    }
  }
  sub_1C07785E4();
}

void sub_1C0871768(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  void *v16;
  void *v17;
  uint64_t v18;
  void (*v19)(char *, uint64_t, uint64_t);
  id v20;
  id v21;
  id v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  id v26;
  id v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;

  v29 = a3;
  v30 = a2;
  v4 = sub_1C07ACF80((uint64_t *)&unk_1ED762690);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v28 - v8;
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v28 - v11;
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v28 - v14;
  sub_1C086A708(&OBJC_IVAR____TtC24IntelligencePlatformCore22BehaviorHistoryUtility____lazy_storage___bluetoothEventStream);
  v17 = v16;
  v18 = sub_1C106ADE0();
  v19 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16);
  v19(v15, a1, v18);
  sub_1C07B2D8C((uint64_t)v15, 0, 1, v18);
  v19(v12, v30, v18);
  sub_1C07B2D8C((uint64_t)v12, 0, 1, v18);
  v20 = objc_allocWithZone(MEMORY[0x1E0D026F0]);
  v21 = sub_1C07DC9F8((uint64_t)v15, (uint64_t)v12, 0, 0, 0);
  v22 = objc_msgSend(v17, sel_publisherWithOptions_, v21);

  v19(v9, a1, v18);
  sub_1C07B2D8C((uint64_t)v9, 0, 1, v18);
  v19(v6, v30, v18);
  v23 = sub_1C07B2D8C((uint64_t)v6, 0, 1, v18);
  v24 = (void *)MEMORY[0x1C3BA79F4](v23);
  v25 = v28;
  v26 = sub_1C086F0EC(v22, (uint64_t)v9, (uint64_t)v6);
  if (v25)
  {
    objc_autoreleasePoolPop(v24);
    __break(1u);
  }
  else
  {
    v27 = v26;
    objc_autoreleasePoolPop(v24);

    sub_1C0784B6C((uint64_t)v6, (uint64_t *)&unk_1ED762690);
    sub_1C0784B6C((uint64_t)v9, (uint64_t *)&unk_1ED762690);
    *v29 = v27;
  }
}

void sub_1C08719D0(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  void *v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  id v20;
  id v21;
  void *v22;
  id v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD aBlock[6];
  _QWORD *v28;

  v28 = a3;
  v6 = sub_1C07ACF80((uint64_t *)&unk_1ED762690);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)aBlock - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)aBlock - v10;
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)aBlock - v13;
  sub_1C086A708(&OBJC_IVAR____TtC24IntelligencePlatformCore22BehaviorHistoryUtility____lazy_storage___bluetoothEventStream);
  v16 = v15;
  sub_1C078A8F8(a2, (uint64_t)v11, (uint64_t *)&unk_1ED762690);
  v17 = sub_1C106ADE0();
  if (sub_1C07B2D80((uint64_t)v11, 1, v17) == 1)
  {
    sub_1C0784B6C((uint64_t)v11, (uint64_t *)&unk_1ED762690);
    v18 = 1;
  }
  else
  {
    sub_1C106AD2C();
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v17 - 8) + 8))(v11, v17);
    v18 = 0;
  }
  sub_1C07B2D8C((uint64_t)v14, v18, 1, v17);
  sub_1C07B2D8C((uint64_t)v8, 1, 1, v17);
  v19 = objc_allocWithZone(MEMORY[0x1E0D026F0]);
  v20 = sub_1C07DC9F8((uint64_t)v14, (uint64_t)v8, 0, 0, 1);
  v21 = objc_msgSend(v16, sel_publisherWithOptions_, v20);

  aBlock[4] = sub_1C0875F2C;
  aBlock[5] = a1;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1C0871C9C;
  aBlock[3] = &unk_1E7A10740;
  v22 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  v23 = objc_msgSend(v21, sel_filterWithIsIncluded_, v22);
  _Block_release(v22);

  v24 = (void *)MEMORY[0x1C3BA79F4]();
  sub_1C086D638(a1, (uint64_t)v23, (uint64_t (*)(uint64_t, char *, uint64_t))sub_1C086F0EC, (uint64_t)&unk_1E7A10768, (void (*)(void *))sub_1C0875F14, (uint64_t)&unk_1E7A10790);
  if (v3)
  {
    objc_autoreleasePoolPop(v24);
    __break(1u);
  }
  else
  {
    v26 = v25;
    objc_autoreleasePoolPop(v24);

    *v28 = v26;
  }
}

void sub_1C0871CA0(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  void *v16;
  void *v17;
  uint64_t v18;
  void (*v19)(char *, uint64_t, uint64_t);
  id v20;
  id v21;
  id v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  id v26;
  id v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;

  v29 = a3;
  v30 = a2;
  v4 = sub_1C07ACF80((uint64_t *)&unk_1ED762690);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v28 - v8;
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v28 - v11;
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v28 - v14;
  sub_1C086A708(&OBJC_IVAR____TtC24IntelligencePlatformCore22BehaviorHistoryUtility____lazy_storage___airplaneModeStream);
  v17 = v16;
  v18 = sub_1C106ADE0();
  v19 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16);
  v19(v15, a1, v18);
  sub_1C07B2D8C((uint64_t)v15, 0, 1, v18);
  v19(v12, v30, v18);
  sub_1C07B2D8C((uint64_t)v12, 0, 1, v18);
  v20 = objc_allocWithZone(MEMORY[0x1E0D026F0]);
  v21 = sub_1C07DC9F8((uint64_t)v15, (uint64_t)v12, 0, 0, 0);
  v22 = objc_msgSend(v17, sel_publisherWithOptions_, v21);

  v19(v9, a1, v18);
  sub_1C07B2D8C((uint64_t)v9, 0, 1, v18);
  v19(v6, v30, v18);
  v23 = sub_1C07B2D8C((uint64_t)v6, 0, 1, v18);
  v24 = (void *)MEMORY[0x1C3BA79F4](v23);
  v25 = v28;
  v26 = sub_1C086E08C(v22, (uint64_t)v9, (uint64_t)v6);
  if (v25)
  {
    objc_autoreleasePoolPop(v24);
    __break(1u);
  }
  else
  {
    v27 = v26;
    objc_autoreleasePoolPop(v24);

    sub_1C0784B6C((uint64_t)v6, (uint64_t *)&unk_1ED762690);
    sub_1C0784B6C((uint64_t)v9, (uint64_t *)&unk_1ED762690);
    *v29 = v27;
  }
}

void sub_1C0871F08(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  void *v16;
  void *v17;
  uint64_t v18;
  void (*v19)(char *, uint64_t, uint64_t);
  id v20;
  id v21;
  id v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  id v26;
  id v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;

  v29 = a3;
  v30 = a2;
  v4 = sub_1C07ACF80((uint64_t *)&unk_1ED762690);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v28 - v8;
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v28 - v11;
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v28 - v14;
  sub_1C086A708(&OBJC_IVAR____TtC24IntelligencePlatformCore22BehaviorHistoryUtility____lazy_storage___chargingEventStream);
  v17 = v16;
  v18 = sub_1C106ADE0();
  v19 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16);
  v19(v15, a1, v18);
  sub_1C07B2D8C((uint64_t)v15, 0, 1, v18);
  v19(v12, v30, v18);
  sub_1C07B2D8C((uint64_t)v12, 0, 1, v18);
  v20 = objc_allocWithZone(MEMORY[0x1E0D026F0]);
  v21 = sub_1C07DC9F8((uint64_t)v15, (uint64_t)v12, 0, 0, 0);
  v22 = objc_msgSend(v17, sel_publisherWithOptions_, v21);

  v19(v9, a1, v18);
  sub_1C07B2D8C((uint64_t)v9, 0, 1, v18);
  v19(v6, v30, v18);
  v23 = sub_1C07B2D8C((uint64_t)v6, 0, 1, v18);
  v24 = (void *)MEMORY[0x1C3BA79F4](v23);
  v25 = v28;
  v26 = sub_1C086DC74(v22, (uint64_t)v9, (uint64_t)v6);
  if (v25)
  {
    objc_autoreleasePoolPop(v24);
    __break(1u);
  }
  else
  {
    v27 = v26;
    objc_autoreleasePoolPop(v24);

    sub_1C0784B6C((uint64_t)v6, (uint64_t *)&unk_1ED762690);
    sub_1C0784B6C((uint64_t)v9, (uint64_t *)&unk_1ED762690);
    *v29 = v27;
  }
}

void sub_1C0872170(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  void *v11;
  void *v12;
  id v13;
  void *v14;
  id v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unsigned int v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v4 = sub_1C106ADE0();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1C07ACF80((uint64_t *)&unk_1ED762690);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C086A754(&OBJC_IVAR____TtC24IntelligencePlatformCore22BehaviorHistoryUtility____lazy_storage___microlocationVisitStream);
  v12 = v11;
  v13 = objc_msgSend(objc_allocWithZone((Class)GDMicroLocationVisitUtility), sel_initWithMicroLocationVisitStream_, v11);

  sub_1C078A8F8(a1, (uint64_t)v10, (uint64_t *)&unk_1ED762690);
  v14 = 0;
  if (sub_1C07B2D80((uint64_t)v10, 1, v4) != 1)
  {
    v14 = (void *)sub_1C106AD38();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
  }
  v15 = objc_msgSend(v13, sel_lastMicroLocationVisitEventPriorTo_, v14);

  if (v15)
  {
    type metadata accessor for BehaviorEvent();
    v16 = objc_msgSend(v15, sel_microLocationIdentifier);
    v17 = sub_1C106FB14();
    v19 = v18;

    v20 = objc_msgSend(v15, sel_isEnter);
    LOBYTE(v24) = 7;
    v21 = objc_msgSend(v15, sel_date, v17, v19, v20, 0, 0, v24);
    sub_1C106AD98();

    v22 = sub_1C08258CC((uint64_t)&v23, (uint64_t)v7);
  }
  else
  {

    v22 = 0;
  }
  *a2 = v22;
}

uint64_t sub_1C087239C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  id v13;
  uint64_t result;
  uint64_t v15;
  uint64_t v16;

  v4 = sub_1C106ADE0();
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for BehaviorEvent();
  v8 = objc_msgSend(a1, sel_microLocationIdentifier);
  v9 = sub_1C106FB14();
  v11 = v10;

  v12 = objc_msgSend(a1, sel_isEnter);
  LOBYTE(v16) = 7;
  v13 = objc_msgSend(a1, sel_date, v9, v11, v12, 0, 0, v16);
  sub_1C106AD98();

  result = sub_1C08258CC((uint64_t)&v15, (uint64_t)v6);
  a2[3] = v7;
  *a2 = result;
  return result;
}

void sub_1C08724B0(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  id v7;
  void *v8;
  id v9;
  id v10;
  unint64_t v11;
  uint64_t v12;
  void *v13;
  void *v14;
  id v15;
  id v16;
  uint64_t v17;
  void *v18;
  id v19;
  id v20;
  void *v21;
  id v22;
  id v23;
  void *v24;
  uint64_t v25;
  id v26;
  id v27;
  NSObject *v28;
  os_log_type_t v29;
  uint8_t *v30;
  void *v31;
  id v32;
  uint64_t v33;
  unint64_t v34;
  id v35;
  void *v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  id aBlock;
  uint64_t v41;
  void (*v42)();
  void *v43;
  uint64_t (*v44)();
  uint64_t v45;
  uint64_t v46;

  v38 = a2;
  v46 = *MEMORY[0x1E0C80C00];
  v3 = sub_1C106ADE0();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  MEMORY[0x1E0C80A78](v3);
  v6 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D44208]), sel_init);
  v7 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D44288]), sel_init);
  v8 = (void *)sub_1C106AD38();
  aBlock = 0;
  v9 = sub_1C0875C90(0x6D6574737953, 0xE600000000000000, (uint64_t)v8, (uint64_t)&aBlock, v7);

  v10 = aBlock;
  if (v9)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))((char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v3);
    v11 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
    v12 = swift_allocObject();
    (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(v12 + v11, (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v3);
    v44 = sub_1C0875D14;
    v45 = v12;
    v13 = (void *)MEMORY[0x1E0C809B0];
    aBlock = (id)MEMORY[0x1E0C809B0];
    v41 = 1107296256;
    v42 = (void (*)())sub_1C0871C9C;
    v43 = &unk_1E7A101C8;
    v14 = _Block_copy(&aBlock);
    v15 = v10;
    swift_release();
    v16 = objc_msgSend(v9, sel_filterWithIsIncluded_, v14);
    _Block_release(v14);

    v17 = swift_allocObject();
    *(_QWORD *)(v17 + 16) = v6;
    v44 = (uint64_t (*)())sub_1C0875D54;
    v45 = v17;
    aBlock = v13;
    v41 = 1107296256;
    v42 = (void (*)())sub_1C08701B0;
    v43 = &unk_1E7A10218;
    v18 = _Block_copy(&aBlock);
    v19 = v6;
    swift_release();
    v20 = objc_msgSend(v16, sel_mapWithTransform_, v18);
    _Block_release(v18);

    v44 = sub_1C0872BFC;
    v45 = 0;
    aBlock = v13;
    v41 = 1107296256;
    v42 = sub_1C0870B58;
    v43 = &unk_1E7A10240;
    v21 = _Block_copy(&aBlock);
    v22 = objc_msgSend(v20, sel_filterWithIsIncluded_, v21);

    _Block_release(v21);
  }
  else
  {
    v23 = aBlock;
    v24 = (void *)sub_1C106AA14();

    swift_willThrow();
    if (qword_1ED760048 != -1)
      swift_once();
    v25 = sub_1C106F544();
    sub_1C079E000(v25, (uint64_t)qword_1ED78D800);
    v26 = v24;
    v27 = v24;
    v28 = sub_1C106F538();
    v29 = sub_1C1070390();
    if (os_log_type_enabled(v28, v29))
    {
      v30 = (uint8_t *)swift_slowAlloc();
      v31 = (void *)swift_slowAlloc();
      aBlock = v31;
      *(_DWORD *)v30 = 136315138;
      v32 = v24;
      sub_1C07ACF80(&qword_1ED7614F0);
      v33 = sub_1C106FB5C();
      v39 = sub_1C0788DAC(v33, v34, (uint64_t *)&aBlock);
      sub_1C10705AC();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1C0771000, v28, v29, "BehaviorHistoryUtility [linkActionEventPublisher]: Unable to access Link action transcript: %s", v30, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C3BA8270](v31, -1, -1);
      MEMORY[0x1C3BA8270](v30, -1, -1);
    }
    else
    {

    }
    v35 = objc_allocWithZone(MEMORY[0x1E0D02478]);
    type metadata accessor for BehaviorEvent();
    v36 = (void *)sub_1C106FEEC();
    v22 = objc_msgSend(v35, sel_initWithSequence_, v36);

  }
  *v38 = v22;
}

uint64_t sub_1C087299C(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  double v4;
  uint64_t v5;
  char *v6;
  char v7;
  uint64_t v9;

  v2 = sub_1C106ADE0();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  objc_msgSend(a1, sel_timestamp, v4);
  sub_1C106AC54();
  v7 = sub_1C106AD50();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  return v7 & 1;
}

void sub_1C0872A44()
{
  void *v0;
  void (*v1)(void);
  id v2;

  sub_1C07879D4();
  v2 = v0;
  v1();
  sub_1C079702C();

  sub_1C077671C();
}

uint64_t sub_1C0872A78@<X0>(void *a1@<X0>, void *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  double v11;
  uint64_t v12;
  _BYTE *v13;
  id v14;
  __int128 v15;
  void *v16;
  char v17;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE v23[48];
  _OWORD v24[2];
  uint64_t v25;
  unsigned __int8 v26;
  _OWORD v27[2];
  uint64_t v28;
  char v29;

  v6 = sub_1C106ADE0();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = &v23[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v11 = MEMORY[0x1E0C80A78](v10);
  v13 = &v23[-v12];
  v14 = objc_msgSend(a1, sel_eventBody, v11);
  v15 = 0uLL;
  if (v14)
  {
    v16 = v14;
    sub_1C08762D8(v14, a2, (uint64_t)v23);

    sub_1C078A67C((uint64_t)v23, (uint64_t)v24, &qword_1ED758C90);
    v17 = v26;
    if (v26 == 255)
    {
      v19 = 0;
      v17 = 21;
      v18 = 0uLL;
      v15 = 0uLL;
    }
    else
    {
      v15 = v24[0];
      v18 = v24[1];
      v19 = v25;
    }
  }
  else
  {
    v19 = 0;
    v17 = 21;
    v18 = 0uLL;
  }
  v27[0] = v15;
  v27[1] = v18;
  v28 = v19;
  v29 = v17;
  objc_msgSend(a1, sel_timestamp);
  sub_1C106AC54();
  v20 = type metadata accessor for BehaviorEvent();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v7 + 16))(v9, v13, v6);
  v21 = sub_1C08258CC((uint64_t)v27, (uint64_t)v9);
  a3[3] = v20;
  *a3 = v21;
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v7 + 8))(v13, v6);
}

void sub_1C0872C00(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  void *v8;
  id v9;
  id v10;
  unint64_t v11;
  uint64_t v12;
  void *v13;
  void *v14;
  id v15;
  id v16;
  void *v17;
  uint64_t v18;
  id v19;
  void *v20;
  id v21;
  id v22;
  id v23;
  void *v24;
  uint64_t v25;
  id v26;
  id v27;
  NSObject *v28;
  os_log_type_t v29;
  uint8_t *v30;
  void *v31;
  id v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  id v36;
  _QWORD *v37;
  uint64_t v38;
  id aBlock;
  uint64_t v40;
  void (*v41)(uint64_t, void *);
  void *v42;
  void *v43;
  uint64_t v44;
  uint64_t v45;

  v37 = a2;
  v45 = *MEMORY[0x1E0C80C00];
  v3 = sub_1C07ACF80((uint64_t *)&unk_1ED762690);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  MEMORY[0x1E0C80A78](v3);
  v36 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D44208]), sel_init);
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = 0;
  v7 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D44288]), sel_init);
  v8 = (void *)sub_1C106FAF0();
  aBlock = 0;
  v9 = objc_msgSend(v7, sel_transcriptPublisherWithStreamName_fromDate_error_, v8, 0, &aBlock);

  v10 = aBlock;
  if (v9)
  {
    sub_1C078A8F8(a1, (uint64_t)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t *)&unk_1ED762690);
    v11 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
    v12 = swift_allocObject();
    sub_1C078A67C((uint64_t)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v12 + v11, (uint64_t *)&unk_1ED762690);
    v43 = sub_1C0875FBC;
    v44 = v12;
    v13 = (void *)MEMORY[0x1E0C809B0];
    aBlock = (id)MEMORY[0x1E0C809B0];
    v40 = 1107296256;
    v41 = (void (*)(uint64_t, void *))sub_1C0871C9C;
    v42 = &unk_1E7A10830;
    v14 = _Block_copy(&aBlock);
    v15 = v10;
    swift_release();
    v16 = objc_msgSend(v9, sel_filterWithIsIncluded_, v14);
    _Block_release(v14);

    v43 = sub_1C08732DC;
    v44 = 0;
    aBlock = v13;
    v40 = 1107296256;
    v41 = (void (*)(uint64_t, void *))sub_1C07BF90C;
    v42 = &unk_1E7A10858;
    v17 = _Block_copy(&aBlock);
    v18 = swift_allocObject();
    v19 = v36;
    *(_QWORD *)(v18 + 16) = v36;
    *(_QWORD *)(v18 + 24) = v6;
    v43 = sub_1C0876014;
    v44 = v18;
    aBlock = v13;
    v40 = 1107296256;
    v41 = sub_1C0779530;
    v42 = &unk_1E7A108A8;
    v20 = _Block_copy(&aBlock);
    v21 = v19;
    swift_retain();
    swift_release();
    v22 = objc_msgSend(v16, sel_sinkWithCompletion_receiveInput_, v17, v20);

    _Block_release(v20);
    _Block_release(v17);

    swift_beginAccess();
    *v37 = *(_QWORD *)(v6 + 16);
    swift_retain();
    swift_release();
  }
  else
  {
    v23 = aBlock;
    v24 = (void *)sub_1C106AA14();

    swift_willThrow();
    swift_release();

    if (qword_1ED760048 != -1)
      swift_once();
    v25 = sub_1C106F544();
    sub_1C079E000(v25, (uint64_t)qword_1ED78D800);
    v26 = v24;
    v27 = v24;
    v28 = sub_1C106F538();
    v29 = sub_1C1070390();
    if (os_log_type_enabled(v28, v29))
    {
      v30 = (uint8_t *)swift_slowAlloc();
      v31 = (void *)swift_slowAlloc();
      aBlock = v31;
      *(_DWORD *)v30 = 136315138;
      v32 = v24;
      sub_1C07ACF80(&qword_1ED7614F0);
      v33 = sub_1C106FB5C();
      v38 = sub_1C0788DAC(v33, v34, (uint64_t *)&aBlock);
      sub_1C10705AC();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1C0771000, v28, v29, "BehaviorHistoryUtility [lastLinkActionEvent]: Unable to access Link action transcript: %s", v30, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C3BA8270](v31, -1, -1);
      MEMORY[0x1C3BA8270](v30, -1, -1);

    }
    else
    {

    }
    *v37 = 0;
  }
}

uint64_t sub_1C0873110(void *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t result;
  uint64_t v15;
  char v16;
  void (*v17)(char *, uint64_t);
  id v18;
  uint64_t v19;

  v4 = sub_1C07ACF80((uint64_t *)&unk_1ED762690);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1C106ADE0();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v19 - v12;
  sub_1C078A8F8(a2, (uint64_t)v6, (uint64_t *)&unk_1ED762690);
  if (sub_1C07B2D80((uint64_t)v6, 1, v7) == 1)
  {
    sub_1C0784B6C((uint64_t)v6, (uint64_t *)&unk_1ED762690);
    result = (uint64_t)objc_msgSend(a1, sel_eventBody);
    if (!result)
      return result;
    sub_1C087601C((void *)result);
    if (v15)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v13, v6, v7);
    objc_msgSend(a1, sel_timestamp);
    sub_1C106AC54();
    v16 = sub_1C106AD50();
    v17 = *(void (**)(char *, uint64_t))(v8 + 8);
    v17(v10, v7);
    if ((v16 & 1) != 0)
    {
      v18 = objc_msgSend(a1, sel_eventBody);
      v17(v13, v7);
      if (v18)
      {

        return 1;
      }
    }
    else
    {
      v17(v13, v7);
    }
  }
  return 0;
}

void sub_1C08732DC(void *a1)
{
  sub_1C0875018(a1, "BehaviorHistoryUtility [lastLinkActionEvent]: Biome query completed with error - %s");
}

void sub_1C08732E8(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  double v11;
  uint64_t v12;
  _BYTE *v13;
  id v14;
  void *v15;
  uint64_t v16;
  _BYTE v18[48];
  _BYTE v19[48];
  _BYTE v20[48];

  v6 = sub_1C106ADE0();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0) + 16;
  v11 = MEMORY[0x1E0C80A78](v10);
  v13 = v18 - v12 + 16;
  v14 = objc_msgSend(a1, sel_eventBody, v11);
  if (v14)
  {
    v15 = v14;
    sub_1C08762D8(v14, a2, (uint64_t)v18);
    sub_1C078A67C((uint64_t)v18, (uint64_t)v19, &qword_1ED758C90);
    if (v19[40] == 255)
    {

    }
    else
    {
      sub_1C07DFF44((uint64_t)v19, (uint64_t)v20);
      objc_msgSend(a1, sel_timestamp);
      sub_1C106AC54();
      type metadata accessor for BehaviorEvent();
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v7 + 16))(v9, v13, v6);
      v16 = sub_1C08258CC((uint64_t)v20, (uint64_t)v9);

      (*(void (**)(_BYTE *, uint64_t))(v7 + 8))(v13, v6);
      swift_beginAccess();
      *(_QWORD *)(a3 + 16) = v16;
      swift_release();
    }
  }
}

void sub_1C087346C(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  void *v16;
  void *v17;
  uint64_t v18;
  void (*v19)(char *, uint64_t, uint64_t);
  id v20;
  id v21;
  id v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  id v26;
  id v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;

  v29 = a3;
  v30 = a2;
  v4 = sub_1C07ACF80((uint64_t *)&unk_1ED762690);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v28 - v8;
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v28 - v11;
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v28 - v14;
  sub_1C086A708(&OBJC_IVAR____TtC24IntelligencePlatformCore22BehaviorHistoryUtility____lazy_storage___homeKitAccessoryStream);
  v17 = v16;
  v18 = sub_1C106ADE0();
  v19 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16);
  v19(v15, a1, v18);
  sub_1C07B2D8C((uint64_t)v15, 0, 1, v18);
  v19(v12, v30, v18);
  sub_1C07B2D8C((uint64_t)v12, 0, 1, v18);
  v20 = objc_allocWithZone(MEMORY[0x1E0D026F0]);
  v21 = sub_1C07DC9F8((uint64_t)v15, (uint64_t)v12, 0, 0, 0);
  v22 = objc_msgSend(v17, sel_publisherWithOptions_, v21);

  v19(v9, a1, v18);
  sub_1C07B2D8C((uint64_t)v9, 0, 1, v18);
  v19(v6, v30, v18);
  v23 = sub_1C07B2D8C((uint64_t)v6, 0, 1, v18);
  v24 = (void *)MEMORY[0x1C3BA79F4](v23);
  v25 = v28;
  v26 = sub_1C086DA68(v22, (uint64_t)v9, (uint64_t)v6);
  if (v25)
  {
    objc_autoreleasePoolPop(v24);
    __break(1u);
  }
  else
  {
    v27 = v26;
    objc_autoreleasePoolPop(v24);

    sub_1C0784B6C((uint64_t)v6, (uint64_t *)&unk_1ED762690);
    sub_1C0784B6C((uint64_t)v9, (uint64_t *)&unk_1ED762690);
    *v29 = v27;
  }
}

void sub_1C08736D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  double v24;
  uint64_t v25;
  char *v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;

  sub_1C0779670();
  a19 = v21;
  a20 = v22;
  sub_1C07ACF80((uint64_t *)&unk_1ED75EA00);
  sub_1C077C078();
  v24 = MEMORY[0x1E0C80A78](v23);
  v26 = (char *)&a9 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = (void *)MEMORY[0x1C3BA79F4](v24);
  v28 = v20 + OBJC_IVAR____TtC24IntelligencePlatformCore22BehaviorHistoryUtility_handleView;
  v29 = sub_1C106CD54();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 16))(v26, v28, v29);
  sub_1C07B2D8C((uint64_t)v26, 0, 1, v29);
  sub_1C0F17F2C();
  sub_1C0779D34((uint64_t)v26);
  objc_autoreleasePoolPop(v27);
  sub_1C0776760();
}

void sub_1C08737C8()
{
  sub_1C07943C4();
}

void sub_1C08737EC(uint64_t a1, ...)
{
  uint64_t v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  va_list va;

  va_start(va, a1);
  sub_1C0873820(v5, v4, v2, v1, v3, va);
  sub_1C07863E0();
  sub_1C07892A4();
}

void sub_1C0873820(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, int a5@<W4>, _QWORD *a6@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  int v21;
  void *v22;
  void *v23;
  uint64_t v24;
  id v25;
  id v26;
  id v27;
  id v28;
  _BYTE v29[4];
  int v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;

  v32 = a3;
  v30 = a5;
  v33 = a4;
  v31 = a6;
  v8 = sub_1C07ACF80((uint64_t *)&unk_1ED762690);
  MEMORY[0x1E0C80A78](v8);
  v10 = &v29[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v11);
  v13 = &v29[-v12];
  MEMORY[0x1E0C80A78](v14);
  v16 = &v29[-v15];
  MEMORY[0x1E0C80A78](v17);
  v19 = &v29[-v18];
  sub_1C078A8F8(a1, (uint64_t)&v29[-v18], (uint64_t *)&unk_1ED762690);
  v20 = sub_1C106ADE0();
  v21 = sub_1C07B2D80((uint64_t)v19, 1, v20);
  sub_1C0784B6C((uint64_t)v19, (uint64_t *)&unk_1ED762690);
  if (v21 != 1)
  {
    sub_1C078A8F8(a2, (uint64_t)v16, (uint64_t *)&unk_1ED762690);
    sub_1C07B2D80((uint64_t)v16, 1, v20);
    sub_1C0784B6C((uint64_t)v16, (uint64_t *)&unk_1ED762690);
  }
  sub_1C086A754(&OBJC_IVAR____TtC24IntelligencePlatformCore22BehaviorHistoryUtility____lazy_storage___motionStateEventStream);
  v23 = v22;
  sub_1C078A8F8(a1, (uint64_t)v13, (uint64_t *)&unk_1ED762690);
  sub_1C078A8F8(a2, (uint64_t)v10, (uint64_t *)&unk_1ED762690);
  v24 = v33;
  if (v33 < 0)
  {
    __break(1u);
  }
  else
  {
    v25 = objc_allocWithZone(MEMORY[0x1E0D026F0]);
    v26 = sub_1C07DC9F8((uint64_t)v13, (uint64_t)v10, v24, 0, (v30 & 1) == 0);
    v27 = objc_msgSend(v23, sel_publisherWithOptions_, v26);

    v28 = sub_1C0873A44(v27);
    *v31 = v28;
  }
}

id sub_1C0873A44(void *a1)
{
  uint64_t v2;
  id v3;
  id v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v2 = MEMORY[0x1E0C809B0];
  sub_1C0790DCC((uint64_t)sub_1C08701B0, MEMORY[0x1E0C809B0], 1107296256, v6, v8);
  v3 = sub_1C079FD50(a1, sel_mapWithTransform_);
  sub_1C07AAD1C();
  sub_1C0790DCC((uint64_t)sub_1C0870B58, v2, 1107296256, v7, v9);
  v4 = sub_1C079FD50(v3, sel_filterWithIsIncluded_);
  sub_1C07AAD1C();

  return v4;
}

id sub_1C0873B28@<X0>(void *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  id result;

  if (objc_msgSend(a1, sel_hasUnknown))
    v4 = objc_msgSend(a1, sel_unknown);
  else
    v4 = 0;
  if (objc_msgSend(a1, sel_hasStationary) && objc_msgSend(a1, sel_stationary))
    v4 |= 2uLL;
  if (objc_msgSend(a1, sel_hasWalking) && objc_msgSend(a1, sel_walking))
    v4 |= 4uLL;
  if (objc_msgSend(a1, sel_hasRunning) && objc_msgSend(a1, sel_running))
    v4 |= 8uLL;
  if (objc_msgSend(a1, sel_hasCycling) && objc_msgSend(a1, sel_cycling))
    v4 |= 0x10uLL;
  result = objc_msgSend(a1, sel_hasAutomotive);
  if ((_DWORD)result)
  {
    result = objc_msgSend(a1, sel_automotive);
    if ((_DWORD)result)
      v4 |= 0x20uLL;
  }
  *a2 = v4;
  return result;
}

void sub_1C0873C70(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  double v15;
  uint64_t v16;
  char *v17;
  id v18;
  void *v19;
  id v20;
  void *v21;
  void (*v22)(char *, char *, uint64_t);
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  uint8_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v4 = sub_1C07ACF80((uint64_t *)&unk_1ED762690);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1C106ADE0();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v30 - v12;
  v15 = MEMORY[0x1E0C80A78](v14);
  v17 = (char *)&v30 - v16;
  v18 = objc_msgSend(a1, sel_eventBody, v15);
  if (v18)
  {
    v19 = v18;
    v20 = objc_msgSend(v18, sel_startDate);
    if (v20)
    {
      v21 = v20;
      sub_1C106AD98();

      v22 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
      v22(v6, v13, v7);
      sub_1C07B2D8C((uint64_t)v6, 0, 1, v7);
      if (sub_1C07B2D80((uint64_t)v6, 1, v7) != 1)
      {
        v22(v17, v6, v7);
LABEL_12:
        objc_msgSend(a1, sel_timestamp);
        sub_1C106AC54();
        type metadata accessor for BehaviorHistoryUtility();
        sub_1C0873B28(v19, &v31);
        v29 = type metadata accessor for MotionStateEvent();
        swift_allocObject();
        v28 = sub_1C0869CD8((uint64_t)v17, (uint64_t)v13, &v31);
        a2[3] = v29;

        goto LABEL_13;
      }
    }
    else
    {
      sub_1C07B2D8C((uint64_t)v6, 1, 1, v7);
    }
    objc_msgSend(a1, sel_timestamp);
    sub_1C106AC54();
    sub_1C0784B6C((uint64_t)v6, (uint64_t *)&unk_1ED762690);
    goto LABEL_12;
  }
  if (qword_1ED760048 != -1)
    swift_once();
  v23 = sub_1C106F544();
  sub_1C079E000(v23, (uint64_t)qword_1ED78D800);
  v24 = sub_1C106F538();
  v25 = sub_1C1070384();
  if (os_log_type_enabled(v24, v25))
  {
    v26 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v26 = 0;
    _os_log_impl(&dword_1C0771000, v24, v25, "Unexpected empty event body from MotionActivity publisher. Skipping event.", v26, 2u);
    MEMORY[0x1C3BA8270](v26, -1, -1);
  }

  objc_msgSend(a1, sel_timestamp);
  sub_1C106AC54();
  objc_msgSend(a1, sel_timestamp);
  sub_1C106AC54();
  v31 = 1;
  v27 = type metadata accessor for MotionStateEvent();
  swift_allocObject();
  v28 = sub_1C0869CD8((uint64_t)v13, (uint64_t)v10, &v31);
  a2[3] = v27;
LABEL_13:
  *a2 = v28;
}

BOOL sub_1C0873FB8()
{
  uint64_t v0;
  uint64_t v1;

  type metadata accessor for MotionStateEvent();
  swift_unknownObjectRetain();
  v0 = swift_dynamicCastClass();
  if (v0)
  {
    v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC24IntelligencePlatformCore16MotionStateEvent_motionState);
    swift_unknownObjectRelease();
    return (v1 & 1) == 0;
  }
  else
  {
    swift_unknownObjectRelease();
    return 0;
  }
}

void sub_1C0874024()
{
  sub_1C07943C4();
}

void sub_1C0874048()
{
  uint64_t v0;
  uint64_t v1;

  sub_1C07AEE00();
  sub_1C0874078(v0, v1);
}

void sub_1C0874068()
{
  sub_1C07863E0();
  sub_1C07892A4();
}

void sub_1C0874078(uint64_t a1@<X2>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;

  v7 = a2;
  v3 = sub_1C07ACF80((uint64_t *)&unk_1ED762690);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)(swift_allocObject() + 16) = MEMORY[0x1E0DEE9D8];
  v6 = sub_1C106ADE0();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(v5, a1, v6);
  sub_1C07B2D8C((uint64_t)v5, 0, 1, v6);
  sub_1C08737C8();
}

uint64_t sub_1C0874164(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v6;
  void *v7;
  void *v8;
  id v9;

  sub_1C0784B6C(v1, (uint64_t *)&unk_1ED762690);
  *(_QWORD *)(v4 - 96) = sub_1C0874294;
  *(_QWORD *)(v4 - 88) = 0;
  v6 = MEMORY[0x1E0C809B0];
  *(_QWORD *)(v4 - 128) = MEMORY[0x1E0C809B0];
  *(_QWORD *)(v4 - 120) = 1107296256;
  *(_QWORD *)(v4 - 112) = sub_1C07BF90C;
  *(_QWORD *)(v4 - 104) = &unk_1E7A0FC28;
  v7 = _Block_copy((const void *)(v4 - 128));
  *(_QWORD *)(v4 - 96) = sub_1C0875C5C;
  *(_QWORD *)(v4 - 88) = v2;
  *(_QWORD *)(v4 - 128) = v6;
  *(_QWORD *)(v4 - 120) = 1107296256;
  *(_QWORD *)(v4 - 112) = sub_1C082E0C0;
  *(_QWORD *)(v4 - 104) = &unk_1E7A0FC50;
  v8 = _Block_copy((const void *)(v4 - 128));
  swift_retain();
  swift_release();
  v9 = objc_msgSend(a1, sel_sinkWithCompletion_receiveInput_, v7, v8);

  _Block_release(v8);
  _Block_release(v7);

  swift_beginAccess();
  **(_QWORD **)(v4 - 144) = *v3;
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  return swift_release();
}

void sub_1C0874294(void *a1)
{
  sub_1C0875018(a1, "BehaviorHistoryUtility [fetchMotionStateEvents]: Biome query completed with error - %s");
}

uint64_t sub_1C08742A0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  swift_beginAccess();
  v3 = swift_retain();
  MEMORY[0x1C3BA6800](v3);
  sub_1C078442C(*(_QWORD *)((*(_QWORD *)(a2 + 16) & 0xFFFFFFFFFFFFF8) + 0x10));
  sub_1C106FFC4();
  sub_1C106FF28();
  return swift_endAccess();
}

id sub_1C0874320(void *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  id v11;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(void *@<X0>, uint64_t *@<X8>);
  uint64_t v16;

  v4 = sub_1C077B69C();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  MEMORY[0x1E0C80A78](v4);
  sub_1C078A72C((uint64_t)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a2, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 16));
  v7 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v8 = swift_allocObject();
  sub_1C078A72C(v8 + v7, (uint64_t)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 32));
  v15 = sub_1C0875E98;
  v16 = v8;
  v9 = MEMORY[0x1E0C809B0];
  v13 = MEMORY[0x1E0C809B0];
  v14 = 1107296256;
  sub_1C0781534((uint64_t)sub_1C08701B0);
  swift_release();
  v10 = sub_1C079FD50(a1, sel_mapWithTransform_);
  sub_1C07AAD1C();
  v15 = (void (*)(void *@<X0>, uint64_t *@<X8>))sub_1C0872BFC;
  v16 = 0;
  v13 = v9;
  v14 = 1107296256;
  sub_1C0781534((uint64_t)sub_1C0870B58);
  v11 = sub_1C079FD50(v10, sel_filterWithIsIncluded_);
  sub_1C07AAD1C();

  return v11;
}

void sub_1C0874498(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  double v12;
  uint64_t v13;
  char *v14;
  char *v15;
  void *v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  uint64_t v26;
  id v27;
  NSObject *v28;
  os_log_type_t v29;
  uint8_t *v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD v42[2];
  id v43;
  char *v44;
  uint64_t v45;
  __int128 v46;
  __int128 v47;
  uint64_t v48;
  char v49;

  v4 = sub_1C106ADE0();
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1C07ACF80((uint64_t *)&unk_1ED75EA40);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1C106E590();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x1E0C80A78](v10);
  v14 = (char *)v42 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = (char *)objc_msgSend(a1, sel_eventBody, v12);
  if (v15)
  {
    v16 = v15;
    v43 = a1;
    v44 = v6;
    v17 = OBJC_IVAR____TtC24IntelligencePlatformCore17PhotosPersonEvent_photosPerson;
    v18 = (uint64_t *)&v15[*(int *)(type metadata accessor for PhotosPersonObservation(0) + 20) + v17];
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    sub_1C106ED10();
    swift_bridgeObjectRelease();
    v25 = sub_1C07B2D80((uint64_t)v9, 1, v10);
    if (v25 == 1)
    {
      sub_1C0784B6C((uint64_t)v9, (uint64_t *)&unk_1ED75EA40);
      if (qword_1ED760048 != -1)
        swift_once();
      v26 = sub_1C106F544();
      sub_1C079E000(v26, (uint64_t)qword_1ED78D800);
      v27 = v16;
      v28 = sub_1C106F538();
      v29 = sub_1C1070390();
      if (os_log_type_enabled(v28, v29))
      {
        v30 = (uint8_t *)swift_slowAlloc();
        v31 = swift_slowAlloc();
        *(_QWORD *)&v46 = v31;
        *(_DWORD *)v30 = 136315138;
        v42[1] = v30 + 4;
        v32 = *v18;
        v33 = v18[1];
        _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
        v45 = sub_1C0788DAC(v32, v33, (uint64_t *)&v46);
        sub_1C10705AC();

        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1C0771000, v28, v29, "Unable to find mdid for PHPerson ID: %s", v30, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1C3BA8270](v31, -1, -1);
        MEMORY[0x1C3BA8270](v30, -1, -1);

      }
      else
      {

      }
      v38 = v43;
      v39 = type metadata accessor for BehaviorEvent();
      v46 = 0u;
      v47 = 0u;
      v48 = 0;
      v49 = 21;
      objc_msgSend(v38, sel_timestamp);
      v40 = (uint64_t)v44;
      sub_1C106AC54();
      v41 = sub_1C08258CC((uint64_t)&v46, v40);
      a2[3] = v39;

      *a2 = v41;
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v14, v9, v10);
      v34 = type metadata accessor for BehaviorEvent();
      *(_QWORD *)&v46 = sub_1C106E530();
      *((_QWORD *)&v46 + 1) = v35;
      v48 = 0;
      v47 = 0uLL;
      v49 = 16;
      objc_msgSend(v43, sel_timestamp);
      v36 = (uint64_t)v44;
      sub_1C106AC54();
      v37 = sub_1C08258CC((uint64_t)&v46, v36);
      a2[3] = v34;

      *a2 = v37;
      (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v10);
    }
  }
  else
  {
    if (qword_1ED760048 != -1)
      swift_once();
    v19 = sub_1C106F544();
    sub_1C079E000(v19, (uint64_t)qword_1ED78D800);
    v20 = sub_1C106F538();
    v21 = sub_1C1070384();
    if (os_log_type_enabled(v20, v21))
    {
      v22 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v22 = 0;
      _os_log_impl(&dword_1C0771000, v20, v21, "Unexpected empty event body from PhotosPersonEvent publisher. Skipping event.", v22, 2u);
      MEMORY[0x1C3BA8270](v22, -1, -1);
    }

    v23 = type metadata accessor for BehaviorEvent();
    v46 = 0u;
    v47 = 0u;
    v48 = 0;
    v49 = 21;
    objc_msgSend(a1, sel_timestamp);
    sub_1C106AC54();
    v24 = sub_1C08258CC((uint64_t)&v46, (uint64_t)v6);
    a2[3] = v23;
    *a2 = v24;
  }
}

void sub_1C0874BDC()
{
  _BYTE *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(_BYTE *, uint64_t);
  _BYTE v16[48];

  v1 = sub_1C106D6CC();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  sub_1C0780698();
  MEMORY[0x1E0C80A78](v3);
  v5 = &v16[-v4];
  sub_1C07786FC();
  swift_unknownObjectRetain();
  v6 = swift_dynamicCastClass();
  if (v6)
  {
    v7 = sub_1C07DFF44(v6 + 16, (uint64_t)v16);
    sub_1C0824E00(v7, v8, v9, v10, v11, v12, v13, v14);
    (*(void (**)(_BYTE *, _QWORD, uint64_t))(v2 + 104))(v0, *MEMORY[0x1E0D3C0F0], v1);
    sub_1C0794BAC((unint64_t *)&unk_1ED744A50, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3C130], MEMORY[0x1E0D3C150]);
    sub_1C106FAA8();
    sub_1C0779714();
    v15 = *(void (**)(_BYTE *, uint64_t))(v2 + 8);
    v15(v0, v1);
    v15(v5, v1);
  }
  else
  {
    sub_1C0779714();
  }
  sub_1C07785E4();
}

uint64_t sub_1C0874D00@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  void *v16;
  void *v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  const void *v22;
  void *v23;
  void *v24;
  id v25;
  void (*v26)(char *, uint64_t);
  uint64_t v27;
  uint64_t result;
  void (*v29)(char *, uint64_t);
  char *v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t aBlock;
  uint64_t v35;
  void (*v36)();
  void *v37;
  void *v38;
  uint64_t v39;

  v33 = a3;
  v6 = sub_1C07ACF80((uint64_t *)&unk_1ED762690);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1C106ADE0();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v30 - v14;
  sub_1C078A8F8(a1, (uint64_t)v8, (uint64_t *)&unk_1ED762690);
  if (sub_1C07B2D80((uint64_t)v8, 1, v9) == 1)
  {
    sub_1C0784B6C((uint64_t)v8, (uint64_t *)&unk_1ED762690);
    sub_1C106ADD4();
  }
  else
  {
    sub_1C106AC60();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v8, v9);
    sub_1C106AC54();
  }
  sub_1C106AC54();
  v16 = (void *)sub_1C0CB1228((uint64_t)v12, (uint64_t)v15, 1, 0);
  if (v16)
  {
    v17 = v16;
    v18 = sub_1C0874320(v16, a2 + OBJC_IVAR____TtC24IntelligencePlatformCore22BehaviorHistoryUtility_phPersonIdentifierMapView);
    v19 = swift_allocObject();
    *(_QWORD *)(v19 + 16) = 0;
    v38 = sub_1C087500C;
    v39 = 0;
    v32 = v3;
    v20 = MEMORY[0x1E0C809B0];
    aBlock = MEMORY[0x1E0C809B0];
    v35 = 1107296256;
    v36 = (void (*)())sub_1C07BF90C;
    v37 = &unk_1E7A109C0;
    v21 = _Block_copy(&aBlock);
    v31 = v10;
    v22 = v21;
    v38 = sub_1C0875F14;
    v39 = v19;
    aBlock = v20;
    v35 = 1107296256;
    v36 = sub_1C086A668;
    v37 = &unk_1E7A109E8;
    v23 = _Block_copy(&aBlock);
    swift_retain();
    swift_release();
    v30 = v15;
    v24 = v18;
    v25 = objc_msgSend(v18, sel_sinkWithCompletion_shouldContinue_, v22, v23);
    _Block_release(v23);
    _Block_release(v22);

    v26 = *(void (**)(char *, uint64_t))(v31 + 8);
    v26(v12, v9);
    v26(v30, v9);
    swift_beginAccess();
    v27 = *(_QWORD *)(v19 + 16);
    swift_retain();
    result = swift_release();
  }
  else
  {
    v29 = *(void (**)(char *, uint64_t))(v10 + 8);
    v29(v12, v9);
    result = ((uint64_t (*)(char *, uint64_t))v29)(v15, v9);
    v27 = 0;
  }
  *v33 = v27;
  return result;
}

void sub_1C087500C(void *a1)
{
  sub_1C0875018(a1, "BehaviorHistoryUtility [lastPhotosPersonInteractionEvent]: Biome query completed with error - %s");
}

void sub_1C0875018(void *a1, const char *a2)
{
  id v3;
  void *v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  unint64_t v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  int v18;
  int v19;
  int v20;
  int v21;
  int v22;
  int v23;
  int v24;
  int v25;
  int v26;
  int v27;
  int v28;
  int v29;
  int v30;
  int v31;
  int v32;
  int v33;
  int v34;
  int v35;
  int v36;
  int v37;
  int v38;
  int v39;
  int v40;
  int v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  id v46;
  id v47;
  id v48;
  id v49;
  uint64_t v50;

  v3 = objc_msgSend(a1, sel_error);
  if (v3)
  {
    v4 = v3;
    if (qword_1ED760048 != -1)
      swift_once();
    v5 = sub_1C106F544();
    sub_1C079E000(v5, (uint64_t)qword_1ED78D800);
    v46 = v4;
    v6 = sub_1C106F538();
    v7 = sub_1C1070390();
    if (os_log_type_enabled(v6, v7))
    {
      v8 = (uint8_t *)swift_slowAlloc();
      v50 = swift_slowAlloc();
      *(_DWORD *)v8 = 136315138;
      swift_getErrorValue();
      v9 = sub_1C1070D74();
      sub_1C0788DAC(v9, v10, &v50);
      v11 = sub_1C10705AC();
      sub_1C0791AA4(v11, v12, v13, v14, v15, v16, v17, v18, v43, v46);
      sub_1C0791AA4(v19, v20, v21, v22, v23, v24, v25, v26, v44, v47);
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C0771000, v6, v7, a2, v8, 0xCu);
      swift_arrayDestroy();
      sub_1C0776778();
    }

    sub_1C0791AA4(v27, v28, v29, v30, v31, v32, v33, v34, v43, v46);
    sub_1C0791AA4(v35, v36, v37, v38, v39, v40, v41, v42, v45, v48);

  }
}

uint64_t sub_1C08751EC(uint64_t a1, uint64_t a2)
{
  sub_1C077F040();
  *(_QWORD *)(a2 + 16) = a1;
  swift_release();
  swift_retain();
  return 0;
}

void sub_1C087523C(uint64_t a1@<X1>, void *a2@<X2>, uint64_t *a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  void *v12;
  void *v13;
  id v14;
  void *v15;
  id v16;
  id v17;
  unsigned int v18;
  id v19;
  id v20;
  unsigned int v21;
  id v22;
  unsigned int v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  NSObject *v27;
  os_log_type_t v28;
  uint8_t *v29;
  uint64_t v30;
  uint64_t *v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;

  v31 = a3;
  v5 = sub_1C106ADE0();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1C07ACF80((uint64_t *)&unk_1ED762690);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C086A754(&OBJC_IVAR____TtC24IntelligencePlatformCore22BehaviorHistoryUtility____lazy_storage___geoHashStream);
  v13 = v12;
  v14 = objc_msgSend(objc_allocWithZone((Class)GDGeoHashVisitUtility), sel_initWithGeoHashStream_, v12);

  sub_1C078A8F8(a1, (uint64_t)v11, (uint64_t *)&unk_1ED762690);
  v15 = 0;
  if (sub_1C07B2D80((uint64_t)v11, 1, v5) != 1)
  {
    v15 = (void *)sub_1C106AD38();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v5);
  }
  v16 = objc_msgSend(v14, sel_lastGeoHashVisitEventAt_level_, v15, a2);

  if (!v16)
    goto LABEL_16;
  if (!a2)
  {
    type metadata accessor for BehaviorEvent();
    v20 = objc_msgSend(v16, sel_geoHash);
    v21 = objc_msgSend(v16, sel_isEnter);
    v32 = v20;
    v33 = v21;
    v35 = 0;
    v36 = 0;
    v34 = 0;
    v37 = 18;
    v19 = objc_msgSend(v16, sel_date);
    goto LABEL_10;
  }
  if (a2 == (void *)1)
  {
    type metadata accessor for BehaviorEvent();
    v22 = objc_msgSend(v16, sel_geoHash);
    v23 = objc_msgSend(v16, sel_isEnter);
    v32 = v22;
    v33 = v23;
    v35 = 0;
    v36 = 0;
    v34 = 0;
    v37 = 19;
    v19 = objc_msgSend(v16, sel_date);
    goto LABEL_10;
  }
  if (a2 != (void *)2)
  {
    if (qword_1ED760048 != -1)
      swift_once();
    v26 = sub_1C106F544();
    sub_1C079E000(v26, (uint64_t)qword_1ED78D800);
    v27 = sub_1C106F538();
    v28 = sub_1C107039C();
    if (os_log_type_enabled(v27, v28))
    {
      v29 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v29 = 134217984;
      v32 = a2;
      sub_1C10705AC();
      _os_log_impl(&dword_1C0771000, v27, v28, "BehaviorHistoryUtility: lastGeoHashChangeEvent - Unexpected geohash level: %ld", v29, 0xCu);
      MEMORY[0x1C3BA8270](v29, -1, -1);
    }

LABEL_16:
    v25 = 0;
    goto LABEL_17;
  }
  type metadata accessor for BehaviorEvent();
  v17 = objc_msgSend(v16, sel_geoHash);
  v18 = objc_msgSend(v16, sel_isEnter);
  v32 = v17;
  v33 = v18;
  v35 = 0;
  v36 = 0;
  v34 = 0;
  v37 = 20;
  v19 = objc_msgSend(v16, sel_date);
LABEL_10:
  v24 = v19;
  sub_1C106AD98();

  v25 = sub_1C08258CC((uint64_t)&v32, (uint64_t)v8);
LABEL_17:
  *v31 = v25;
}

uint64_t sub_1C0875608@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  id v10;
  unsigned int v11;
  id v12;
  id v13;
  unsigned int v14;
  id v15;
  unsigned int v16;
  id v17;
  uint64_t result;
  _QWORD v19[2];
  id v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;

  v6 = sub_1C106ADE0();
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  switch(a2)
  {
    case 2:
      v9 = type metadata accessor for BehaviorEvent();
      v13 = objc_msgSend(a1, sel_geoHash);
      v14 = objc_msgSend(a1, sel_isEnter);
      v20 = v13;
      v21 = v14;
      v23 = 0;
      v24 = 0;
      v22 = 0;
      v25 = 20;
      v12 = objc_msgSend(a1, sel_date);
      goto LABEL_7;
    case 1:
      v9 = type metadata accessor for BehaviorEvent();
      v10 = objc_msgSend(a1, sel_geoHash);
      v11 = objc_msgSend(a1, sel_isEnter);
      v20 = v10;
      v21 = v11;
      v23 = 0;
      v24 = 0;
      v22 = 0;
      v25 = 19;
      v12 = objc_msgSend(a1, sel_date);
LABEL_7:
      v17 = v12;
      sub_1C106AD98();

      result = sub_1C08258CC((uint64_t)&v20, (uint64_t)v8);
      a3[3] = v9;
      *a3 = result;
      return result;
    case 0:
      v9 = type metadata accessor for BehaviorEvent();
      v15 = objc_msgSend(a1, sel_geoHash);
      v16 = objc_msgSend(a1, sel_isEnter);
      v20 = v15;
      v21 = v16;
      v23 = 0;
      v24 = 0;
      v22 = 0;
      v25 = 18;
      v12 = objc_msgSend(a1, sel_date);
      goto LABEL_7;
  }
  v20 = 0;
  v21 = 0xE000000000000000;
  sub_1C1070774();
  sub_1C106FC94();
  v19[1] = a2;
  sub_1C1070C0C();
  sub_1C106FC94();
  swift_bridgeObjectRelease();
  result = sub_1C1070954();
  __break(1u);
  return result;
}

id sub_1C087587C()
{
  void *v0;
  void (*v1)(_QWORD *__return_ptr);
  id v2;
  void *v3;
  _QWORD v5[4];

  sub_1C07879D4();
  v2 = v0;
  v1(v5);
  swift_release();

  sub_1C07A9480(v5, v5[3]);
  v3 = (void *)sub_1C1070C9C();
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v5);
  return v3;
}

void sub_1C08758EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_release();
  sub_1C078D09C(v0 + OBJC_IVAR____TtC24IntelligencePlatformCore22BehaviorHistoryUtility_config);
  v1 = sub_1C106CD54();
  sub_1C077B5C8(v1);
  v2 = sub_1C077B69C();
  sub_1C077B5C8(v2);
  swift_unknownObjectRelease();
  sub_1C07A3774(OBJC_IVAR____TtC24IntelligencePlatformCore22BehaviorHistoryUtility____lazy_storage___appInFocusStream);
  sub_1C07A3774(OBJC_IVAR____TtC24IntelligencePlatformCore22BehaviorHistoryUtility____lazy_storage___poiCategoryStream);
  sub_1C07A3774(OBJC_IVAR____TtC24IntelligencePlatformCore22BehaviorHistoryUtility____lazy_storage___focusModeStream);
  sub_1C07A3774(OBJC_IVAR____TtC24IntelligencePlatformCore22BehaviorHistoryUtility____lazy_storage___appIntentStream);
  sub_1C07A3774(OBJC_IVAR____TtC24IntelligencePlatformCore22BehaviorHistoryUtility____lazy_storage___carPlayStream);
  sub_1C07A3774(OBJC_IVAR____TtC24IntelligencePlatformCore22BehaviorHistoryUtility____lazy_storage___homeKitAccessoryStream);
  sub_1C07A3774(OBJC_IVAR____TtC24IntelligencePlatformCore22BehaviorHistoryUtility____lazy_storage___deviceLockedStream);
  sub_1C07A3774(OBJC_IVAR____TtC24IntelligencePlatformCore22BehaviorHistoryUtility____lazy_storage___microlocationVisitStream);
  sub_1C07A3774(OBJC_IVAR____TtC24IntelligencePlatformCore22BehaviorHistoryUtility____lazy_storage___airplaneModeStream);
  sub_1C07A3774(OBJC_IVAR____TtC24IntelligencePlatformCore22BehaviorHistoryUtility____lazy_storage___wifiEventStream);
  sub_1C07A3774(OBJC_IVAR____TtC24IntelligencePlatformCore22BehaviorHistoryUtility____lazy_storage___bluetoothEventStream);
  sub_1C07A3774(OBJC_IVAR____TtC24IntelligencePlatformCore22BehaviorHistoryUtility____lazy_storage___chargingEventStream);
  sub_1C07A3774(OBJC_IVAR____TtC24IntelligencePlatformCore22BehaviorHistoryUtility____lazy_storage___semanticLocationStream);
  sub_1C07A3774(OBJC_IVAR____TtC24IntelligencePlatformCore22BehaviorHistoryUtility____lazy_storage___geoHashStream);
  sub_1C07A3774(OBJC_IVAR____TtC24IntelligencePlatformCore22BehaviorHistoryUtility____lazy_storage___motionStateEventStream);
  sub_1C0784B6C(v0 + OBJC_IVAR____TtC24IntelligencePlatformCore22BehaviorHistoryUtility____lazy_storage___calendar, (uint64_t *)&unk_1ED75E9A8);
  sub_1C0778534();
}

uint64_t sub_1C0875A24()
{
  sub_1C08758EC();
  return swift_deallocClassInstance();
}

uint64_t sub_1C0875A48()
{
  return type metadata accessor for BehaviorHistoryUtility();
}

uint64_t type metadata accessor for BehaviorHistoryUtility()
{
  uint64_t result;

  result = qword_1ED75FB98;
  if (!qword_1ED75FB98)
    return swift_getSingletonMetadata();
  return result;
}

void sub_1C0875A88()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  type metadata accessor for Configuration();
  if (v0 <= 0x3F)
  {
    sub_1C106CD54();
    if (v1 <= 0x3F)
    {
      sub_1C106ED1C();
      if (v2 <= 0x3F)
      {
        sub_1C0875B70();
        if (v3 <= 0x3F)
          swift_updateClassMetadata2();
      }
    }
  }
}

void sub_1C0875B70()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED75E9B8)
  {
    sub_1C106AFE4();
    v0 = sub_1C1070564();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED75E9B8);
  }
}

uint64_t sub_1C0875BC4@<X0>(uint64_t a1@<X8>)
{
  return sub_1C086A8AC(a1);
}

void sub_1C0875BE4()
{
  sub_1C086B298();
}

void sub_1C0875C04()
{
  sub_1C086C570();
}

void sub_1C0875C18()
{
  sub_1C0778534();
}

void sub_1C0875C20()
{
  sub_1C0874024();
}

uint64_t sub_1C0875C40()
{
  swift_bridgeObjectRelease();
  sub_1C07A9D70();
  return swift_deallocObject();
}

uint64_t sub_1C0875C5C(uint64_t a1)
{
  uint64_t v1;

  return sub_1C08742A0(a1, v1);
}

id sub_1C0875C90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  void *v8;
  id v9;

  v8 = (void *)sub_1C106FAF0();
  swift_bridgeObjectRelease();
  v9 = objc_msgSend(a5, sel_transcriptPublisherWithStreamName_fromDate_error_, v8, a3, a4);

  return v9;
}

uint64_t sub_1C0875D08()
{
  return sub_1C0875E40((void (*)(_QWORD))MEMORY[0x1E0CB0870]);
}

uint64_t sub_1C0875D14()
{
  void *v0;

  sub_1C077AE98();
  v0 = (void *)sub_1C07A1B98();
  return sub_1C087299C(v0);
}

uint64_t sub_1C0875D38()
{
  uint64_t v0;

  sub_1C07A9D70();
  return swift_deallocObject();
}

uint64_t sub_1C0875D54@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_1C0872A78(a1, *(void **)(v2 + 16), a2);
}

uint64_t sub_1C0875D68()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(_QWORD *)(sub_1C07ACF80((uint64_t *)&unk_1ED762690) - 8);
  v2 = *(unsigned __int8 *)(v1 + 80);
  v3 = (v2 + 16) & ~v2;
  v4 = (*(_QWORD *)(v1 + 64) + v2 + v3) & ~v2;
  v5 = v0 + v3;
  sub_1C077AE98();
  if (!sub_1C077CF34(v5))
    sub_1C0797C58();
  if (!sub_1C077CF34(v0 + v4))
    sub_1C0797C58();
  return sub_1C079701C();
}

uint64_t sub_1C0875DEC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_1C07ACF80((uint64_t *)&unk_1ED762690);
  sub_1C078ABBC();
  return sub_1C08701B4(a1, v1 + v5, v1 + ((*(_QWORD *)(v3 + 64) + v4 + v5) & ~v4));
}

uint64_t sub_1C0875E34()
{
  return sub_1C0875E40((void (*)(_QWORD))MEMORY[0x1E0D3D6B8]);
}

uint64_t sub_1C0875E40(void (*a1)(_QWORD))
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  a1(0);
  sub_1C078ABBC();
  (*(void (**)(uint64_t))(v3 + 8))(v1 + v2);
  return swift_deallocObject();
}

void sub_1C0875E98(void *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1C077B69C();
  sub_1C0874498(a1, a2);
}

uint64_t sub_1C0875EE0()
{
  sub_1C07A9D70();
  return swift_deallocObject();
}

uint64_t sub_1C0875EF0@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_1C0875608(a1, *(_QWORD *)(v2 + 16), a2);
}

uint64_t sub_1C0875EF8()
{
  swift_release();
  sub_1C07A9D70();
  return swift_deallocObject();
}

uint64_t sub_1C0875F14(uint64_t a1)
{
  return sub_1C07ADB64(a1) & 1;
}

uint64_t sub_1C0875F2C(void *a1)
{
  char v1;

  sub_1C08716D4(a1);
  return v1 & 1;
}

uint64_t sub_1C0875F44()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(sub_1C07ACF80((uint64_t *)&unk_1ED762690) - 8) + 80);
  v2 = (v1 + 16) & ~v1;
  v3 = sub_1C077AE98();
  if (!sub_1C07B2D80(v0 + v2, 1, v3))
    sub_1C07943BC(v0 + v2, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8));
  return sub_1C079701C();
}

uint64_t sub_1C0875FBC()
{
  void *v0;
  uint64_t v1;

  sub_1C07ACF80((uint64_t *)&unk_1ED762690);
  v0 = (void *)sub_1C07A1B98();
  return sub_1C0873110(v0, v1);
}

uint64_t sub_1C0875FE8()
{
  uint64_t v0;

  swift_release();
  return swift_deallocObject();
}

void sub_1C0876014(void *a1)
{
  uint64_t v1;

  sub_1C08732E8(a1, *(void **)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_1C087601C(void *a1)
{
  id v2;
  uint64_t v3;

  v2 = objc_msgSend(a1, sel_bundleIdentifier);

  if (!v2)
    return 0;
  v3 = sub_1C106FB14();

  return v3;
}

uint64_t sub_1C0876088(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1C07ACF80((uint64_t *)&unk_1ED75E9A8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

void sub_1C08762D8(void *a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  id v18;
  void *v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  id v30;
  uint64_t v31;
  NSObject *v32;
  os_log_type_t v33;
  uint8_t *v34;
  uint64_t v35;
  unint64_t v36;
  id v37;
  id v38;
  uint64_t v39;
  id v40;
  id v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  uint64_t v46;
  id v47[2];

  v47[1] = *(id *)MEMORY[0x1E0C80C00];
  v5 = sub_1C080AD1C(a1, (SEL *)&selRef_bundleIdentifier);
  v7 = v6;
  if (!v6)
  {
    v26 = 0;
    v27 = 0;
    v28 = 0;
    v17 = 0;
    v29 = -1;
    goto LABEL_24;
  }
  v46 = v5;
  v8 = (void *)sub_1C106FAF0();
  v9 = sub_1C0796198();
  v10 = objc_msgSend(v9, sel_identifier);

  if (!v10)
  {
    sub_1C106FB14();
    v10 = (id)sub_1C106FAF0();
    swift_bridgeObjectRelease();
  }
  v47[0] = 0;
  v11 = objc_msgSend(a2, sel_actionForBundleIdentifier_andActionIdentifier_error_, v8, v10, v47);

  if (v11)
  {
    v12 = v47[0];
    v13 = objc_msgSend(v11, sel_systemProtocols);
    sub_1C0877040();
    v14 = sub_1C106FF04();

    if (v14 >> 62)
    {
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      v15 = sub_1C10709B4();
      sub_1C077589C();
    }
    else
    {
      v15 = *(_QWORD *)((v14 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    v45 = v11;
    if (!v15)
    {
      sub_1C077589C();
      v17 = (_QWORD *)MEMORY[0x1E0DEE9D8];
LABEL_22:
      v37 = sub_1C0796198();
      v38 = objc_msgSend(v37, sel_identifier);

      v27 = sub_1C106FB14();
      v28 = v39;

      v29 = 12;
      v26 = v46;
      goto LABEL_24;
    }
    v43 = v7;
    v44 = a3;
    v47[0] = (id)MEMORY[0x1E0DEE9D8];
    sub_1C09D30E0();
    if ((v15 & 0x8000000000000000) == 0)
    {
      v16 = 0;
      v17 = v47[0];
      do
      {
        if ((v14 & 0xC000000000000001) != 0)
          v18 = (id)MEMORY[0x1C3BA70DC](v16, v14);
        else
          v18 = *(id *)(v14 + 8 * v16 + 32);
        v19 = v18;
        v20 = objc_msgSend(v18, sel_identifier);
        v21 = sub_1C106FB14();
        v23 = v22;

        v47[0] = v17;
        v24 = v17[2];
        if (v24 >= v17[3] >> 1)
        {
          sub_1C09D30E0();
          v17 = v47[0];
        }
        ++v16;
        v17[2] = v24 + 1;
        v25 = &v17[2 * v24];
        v25[4] = v21;
        v25[5] = v23;
      }
      while (v15 != v16);
      sub_1C077589C();
      a3 = v44;
      v7 = v43;
      goto LABEL_22;
    }
    __break(1u);
    goto LABEL_27;
  }
  v30 = v47[0];
  sub_1C106AA14();

  swift_willThrow();
  if (qword_1ED760048 != -1)
LABEL_27:
    swift_once();
  v31 = sub_1C106F544();
  sub_1C079E000(v31, (uint64_t)qword_1ED78D800);
  sub_1C078F21C();
  sub_1C078F21C();
  v32 = sub_1C106F538();
  v33 = sub_1C1070390();
  if (os_log_type_enabled(v32, v33))
  {
    v34 = (uint8_t *)swift_slowAlloc();
    v47[0] = (id)swift_slowAlloc();
    *(_DWORD *)v34 = 136315138;
    sub_1C078F21C();
    sub_1C07ACF80(&qword_1ED7614F0);
    v35 = sub_1C106FB5C();
    sub_1C0788DAC(v35, v36, (uint64_t *)v47);
    sub_1C10705AC();
    swift_bridgeObjectRelease();
    sub_1C0781540();
    sub_1C0781540();
    _os_log_impl(&dword_1C0771000, v32, v33, "BehaviorRepresentable: Unable to access Link action metadata: %s", v34, 0xCu);
    swift_arrayDestroy();
    sub_1C0776778();
  }
  sub_1C0781540();
  sub_1C0781540();

  v26 = v46;
  v40 = sub_1C0796198();
  v41 = objc_msgSend(v40, sel_identifier);

  v27 = sub_1C106FB14();
  v28 = v42;

  sub_1C0781540();
  v29 = 12;
  v17 = (_QWORD *)MEMORY[0x1E0DEE9D8];
LABEL_24:
  *(_QWORD *)a3 = v26;
  *(_QWORD *)(a3 + 8) = v7;
  *(_QWORD *)(a3 + 16) = v27;
  *(_QWORD *)(a3 + 24) = v28;
  *(_QWORD *)(a3 + 32) = v17;
  *(_BYTE *)(a3 + 40) = v29;
}

void sub_1C08767D4(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  v3 = sub_1C0876830(a1);
  if ((v3 & 1) != 0)
  {
    v4 = sub_1C07A684C(v3, (SEL *)&selRef_bundleID);
    if (v5)
      v6 = v4;
    else
      v6 = 0;
    if (v5)
      v7 = v5;
    else
      v7 = 0;
    if (v5)
      v8 = 0;
    else
      v8 = -1;
  }
  else
  {
    v6 = 0;
    v7 = 0;
    v8 = -1;
  }
  *a2 = v6;
  a2[1] = v7;
  sub_1C07A23AC(v8);
}

uint64_t sub_1C0876830(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  char v9;
  char v11;

  v1 = sub_1C07A684C(a1, (SEL *)&selRef_bundleID);
  if (!v2)
    goto LABEL_12;
  v3 = sub_1C07A684C(v1, (SEL *)&selRef_launchReason);
  if (!v4)
  {
LABEL_11:
    sub_1C07767AC();
LABEL_12:
    v9 = 0;
    return v9 & 1;
  }
  v5 = (uint64_t)sub_1C07878D0(v3, sel_starting);
  if ((v5 & 1) == 0
    || (sub_1C07A684C(v5, (SEL *)&selRef_extensionHostID), v7 = v6, sub_1C07A4460(), v7)
    || (sub_1C106FD24() & 1) == 0)
  {
    sub_1C0778580();
    goto LABEL_11;
  }
  sub_1C07B1280();
  if ((sub_1C07A0888() & 1) == 0 && (sub_1C07A0888() & 1) == 0)
  {
    v11 = sub_1C07A0888();
    sub_1C0778580();
    if ((v11 & 1) != 0)
      goto LABEL_9;
    goto LABEL_11;
  }
  sub_1C0778580();
LABEL_9:
  v8 = sub_1C106FD24();
  sub_1C07767AC();
  v9 = v8 ^ 1;
  return v9 & 1;
}

uint64_t sub_1C08769D8@<X0>(uint64_t a1@<X8>)
{
  return sub_1C0876BF4((SEL *)&selRef_absoluteTimestamp, a1);
}

void sub_1C08769E4(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  _BOOL8 v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;

  v3 = sub_1C0876A64(a1);
  if (!v3)
  {
    v6 = 0;
    v7 = 0;
    v8 = 0;
    v9 = 0;
    v10 = -1;
    goto LABEL_6;
  }
  v4 = sub_1C07A684C(v3, (SEL *)&selRef_bundleID);
  if (v5)
  {
    v6 = v4;
    v7 = v5;
    v8 = sub_1C07A684C(v4, (SEL *)&selRef_intentClass);
    if (v9)
    {
      v10 = 1;
LABEL_6:
      *(_QWORD *)a2 = v6;
      *(_QWORD *)(a2 + 8) = v7;
      *(_QWORD *)(a2 + 16) = v8;
      *(_QWORD *)(a2 + 24) = v9;
      *(_QWORD *)(a2 + 32) = 0;
      *(_BYTE *)(a2 + 40) = v10;
      sub_1C077671C();
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

BOOL sub_1C0876A64(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v8;
  uint64_t v9;
  char v10;

  v1 = sub_1C07A684C(a1, (SEL *)&selRef_intentClass);
  if (!v2)
    return 0;
  v3 = v1;
  v4 = v2;
  v5 = sub_1C07A684C(v1, (SEL *)&selRef_bundleID);
  if (!v6)
  {
    sub_1C07767AC();
    return 0;
  }
  if (v5 == 0xD000000000000013 && v6 == 0x80000001C10DCA60)
  {
    sub_1C0778580();
  }
  else
  {
    v8 = sub_1C0797038();
    sub_1C0778580();
    if ((v8 & 1) == 0)
    {
      sub_1C07767AC();
      return 1;
    }
  }
  if (v3 == 0xD000000000000013 && v4 == 0x80000001C10E6910)
  {
    v9 = sub_1C07767AC();
    return sub_1C07878D0(v9, sel_interactionDirection) == 2;
  }
  v10 = sub_1C0797038();
  v9 = sub_1C07767AC();
  if ((v10 & 1) != 0)
    return sub_1C07878D0(v9, sel_interactionDirection) == 2;
  return 1;
}

void sub_1C0876B78()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  sub_1C078ABD0();
  v2 = sub_1C07A684C(v1, (SEL *)&selRef_poiCategory);
  v4 = v3;
  if (v3)
  {
    v5 = v2;
    if (!sub_1C07879EC(v2, sel_rank))
    {
      v6 = 2;
      goto LABEL_7;
    }
    swift_bridgeObjectRelease();
    v5 = 0;
    v4 = 0;
  }
  else
  {
    v5 = 0;
  }
  v6 = -1;
LABEL_7:
  *v0 = v5;
  v0[1] = v4;
  sub_1C07A23AC(v6);
  sub_1C077671C();
}

uint64_t sub_1C0876BE8@<X0>(uint64_t a1@<X8>)
{
  return sub_1C0876BF4((SEL *)&selRef_timestamp, a1);
}

uint64_t sub_1C0876BF4@<X0>(SEL *a1@<X0>, uint64_t a2@<X8>)
{
  void *v2;
  id v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = objc_msgSend(v2, *a1);
  if (v4)
  {
    v5 = v4;
    sub_1C106AD98();

    v6 = 0;
  }
  else
  {
    v6 = 1;
  }
  v7 = sub_1C106ADE0();
  return sub_1C07B2D8C(a2, v6, 1, v7);
}

void sub_1C0876C5C(uint64_t a1@<X8>)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  double v8;
  uint64_t v9;
  char *v10;
  id v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unsigned int v19;
  unsigned int v20;
  uint64_t v21;
  uint64_t v22;

  v2 = v1;
  v4 = sub_1C07ACF80(&qword_1ED762CE0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v22 - v9;
  v11 = objc_msgSend(v2, sel_loiIdentifier, v8);
  if (v11)
  {
    v12 = v11;
    sub_1C106AE10();

    v13 = sub_1C106AE28();
    v14 = (uint64_t)v6;
    v15 = 0;
  }
  else
  {
    v13 = sub_1C106AE28();
    v14 = (uint64_t)v6;
    v15 = 1;
  }
  sub_1C07B2D8C(v14, v15, 1, v13);
  sub_1C087707C((uint64_t)v6, (uint64_t)v10);
  sub_1C106AE28();
  if (sub_1C07B2D80((uint64_t)v10, 1, v13) == 1)
  {
    sub_1C08770C4((uint64_t)v10);
    v16 = 0;
    v17 = 0;
  }
  else
  {
    v16 = sub_1C106ADF8();
    v17 = v18;
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v10, v13);
  }
  v19 = objc_msgSend(v2, sel_userSpecificPlaceType);
  v20 = objc_msgSend(v2, sel_starting);
  v21 = 0x100000000;
  *(_QWORD *)a1 = v16;
  *(_QWORD *)(a1 + 8) = v17;
  if (!v20)
    v21 = 0;
  *(_QWORD *)(a1 + 24) = 0;
  *(_QWORD *)(a1 + 32) = 0;
  *(_QWORD *)(a1 + 16) = v21 | v19;
  *(_BYTE *)(a1 + 40) = 14;
  sub_1C07785E4();
}

void sub_1C0876DE4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  unsigned int v7;
  unsigned int v8;
  uint64_t v9;
  uint64_t v10;
  char v11;

  sub_1C078ABD0();
  v2 = sub_1C07A684C(v1, (SEL *)&selRef_mode);
  v4 = v3;
  if (v3)
  {
    v5 = v2;
    v6 = sub_1C07879EC(v2, sel_semanticType);
    v7 = v6;
    v8 = sub_1C07879EC((uint64_t)v6, sel_starting);
    v9 = 0x100000000;
    if (!v8)
      v9 = 0;
    v10 = v9 | v7;
    v11 = 4;
  }
  else
  {
    v5 = 0;
    v10 = 0;
    v11 = -1;
  }
  *(_QWORD *)v0 = v5;
  *(_QWORD *)(v0 + 8) = v4;
  *(_QWORD *)(v0 + 24) = 0;
  *(_QWORD *)(v0 + 32) = 0;
  *(_QWORD *)(v0 + 16) = v10;
  *(_BYTE *)(v0 + 40) = v11;
  sub_1C07785E4();
}

void sub_1C0876E70(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  id v3;
  unsigned int v4;
  unsigned int v5;
  uint64_t v6;

  v3 = sub_1C07878D0(a1, sel_reason);
  v4 = v3;
  v5 = sub_1C07878D0((uint64_t)v3, sel_starting);
  v6 = 0x100000000;
  if (!v5)
    v6 = 0;
  *(_QWORD *)a2 = v6 | v4;
  *(_OWORD *)(a2 + 8) = 0u;
  *(_OWORD *)(a2 + 24) = 0u;
  *(_BYTE *)(a2 + 40) = 5;
  sub_1C077671C();
}

void sub_1C0876ED4()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_1C078ABD0();
  sub_1C07A684C(v1, (SEL *)&selRef_SSID);
  if (!v2)
  {
    sub_1C07937BC();
    goto LABEL_5;
  }
  sub_1C07A4460();
  v3 = sub_1C080AD1C(v0, (SEL *)&selRef_SSID);
  if (v4)
  {
    v5 = sub_1C07879EC(v3, sel_starting);
LABEL_5:
    sub_1C0790EC8(v5);
    sub_1C077671C();
    return;
  }
  __break(1u);
}

void sub_1C0876F44()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_1C078ABD0();
  sub_1C07A684C(v1, (SEL *)&selRef_address);
  if (!v2)
  {
    sub_1C07937BC();
    goto LABEL_5;
  }
  sub_1C07A4460();
  v3 = sub_1C080AD1C(v0, (SEL *)&selRef_address);
  if (v4)
  {
    v5 = sub_1C07879EC(v3, sel_starting);
LABEL_5:
    sub_1C0790EC8(v5);
    sub_1C077671C();
    return;
  }
  __break(1u);
}

void sub_1C0876FB4(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  sub_1C07A684C(a1, (SEL *)&selRef_accessoryUniqueIdentifier);
  if (!v3)
  {
    v5 = 0;
    v6 = -1;
    goto LABEL_5;
  }
  v4 = sub_1C07A4460();
  v5 = sub_1C07A684C(v4, (SEL *)&selRef_accessoryUniqueIdentifier);
  if (v3)
  {
    v6 = 13;
LABEL_5:
    *a2 = v5;
    a2[1] = v3;
    sub_1C07A23AC(v6);
    return;
  }
  __break(1u);
}

uint64_t sub_1C0877010(void *a1)
{
  return sub_1C080AD1C(a1, (SEL *)&selRef_bundleID);
}

uint64_t sub_1C087701C(void *a1)
{
  return sub_1C080AD1C(a1, (SEL *)&selRef_extensionHostID);
}

uint64_t sub_1C0877028(void *a1)
{
  return sub_1C080AD1C(a1, (SEL *)&selRef_address);
}

uint64_t sub_1C0877034(void *a1)
{
  return sub_1C080AD1C(a1, (SEL *)&selRef_poiCategory);
}

unint64_t sub_1C0877040()
{
  unint64_t result;

  result = qword_1EF632620;
  if (!qword_1EF632620)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EF632620);
  }
  return result;
}

uint64_t sub_1C087707C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1C07ACF80(&qword_1ED762CE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C08770C4(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1C07ACF80(&qword_1ED762CE0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1C0877104()
{
  uint64_t v0;
  uint64_t v1;

  sub_1C07A9480((_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 56));
  sub_1C083F534();
  if (!v1)
    KeyValueStore.delete(key:)(*(Swift::String *)(v0 + 16));
}

void sub_1C0877154(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(uint64_t, uint64_t);
  _QWORD v40[3];
  void *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  id v50;

  v48 = a1;
  v2 = v1;
  v44 = type metadata accessor for BehaviorSampleGeneratorError();
  MEMORY[0x1E0C80A78](v44);
  v42 = (uint64_t)v40 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v43 = (uint64_t)v40 - v5;
  MEMORY[0x1E0C80A78](v6);
  v46 = (char *)v40 - v7;
  v8 = sub_1C07ACF80((uint64_t *)&unk_1ED762690);
  MEMORY[0x1E0C80A78](v8);
  sub_1C0778564();
  v11 = v10 - v9;
  v45 = sub_1C106ADE0();
  v12 = *(_QWORD *)(v45 - 8);
  MEMORY[0x1E0C80A78](v45);
  v14 = (char *)v40 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)v40 - v16;
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)v40 - v19;
  v21 = *(_QWORD *)(v1 + 120);
  v22 = *(_QWORD *)(v2 + 16);
  v23 = *(_QWORD *)(v2 + 24);
  v47 = v11;
  v24 = v49;
  sub_1C07F7D44();
  if (!v24)
  {
    v49 = v23;
    v40[1] = v21;
    v40[2] = v22;
    v40[0] = v14;
    v41 = 0;
    v25 = v20;
    v27 = (uint64_t)v46;
    v26 = v47;
    v28 = v45;
    if (sub_1C07B2D80(v47, 1, v45) == 1)
    {
      sub_1C106ADD4();
      sub_1C106AD2C();
      v29 = v17;
      v30 = v28;
      (*(void (**)(char *, uint64_t))(v12 + 8))(v29, v28);
      sub_1C0784B30(v26, (uint64_t *)&unk_1ED762690);
    }
    else
    {
      v30 = v28;
      (*(void (**)(char *, uint64_t, uint64_t))(v12 + 32))(v20, v26, v28);
    }
    v31 = v48;
    if ((sub_1C106AD50() & 1) == 0)
      goto LABEL_11;
    v32 = v41;
    sub_1C087755C((uint64_t)v20, v31, 0);
    if (!v32)
    {
      sub_1C0B79648();
LABEL_11:
      sub_1C07A6854();
      return;
    }
    v50 = v32;
    v33 = v32;
    sub_1C07ACF80(&qword_1ED7614F0);
    if (swift_dynamicCast())
    {

      v34 = v43;
      sub_1C08780D0(v27, v43);
      v35 = v42;
      sub_1C0878114(v34, v42);
      v36 = sub_1C07ACF80(&qword_1EF6326E8);
      if (sub_1C07B2D80(v35, 1, v36) != 1)
      {
        v38 = v40[0];
        (*(void (**)(_QWORD, uint64_t, uint64_t))(v12 + 32))(v40[0], v35 + *(int *)(v36 + 48), v30);
        sub_1C0B79648();
        swift_willThrow();
        v39 = *(void (**)(uint64_t, uint64_t))(v12 + 8);
        v39(v38, v30);
        sub_1C07ADB6C();
        v39((uint64_t)v25, v30);

        return;
      }
      sub_1C0878158();
      swift_allocError();
      sub_1C0878114(v34, v37);
      swift_willThrow();
      sub_1C07ADB6C();
      sub_1C07A6854();
      sub_1C0878198(v35);
    }
    else
    {
      sub_1C07A6854();
    }

  }
}

void sub_1C087755C(uint64_t a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  uint64_t v4;

  if ((a3 & 1) == 0 || (sub_1C0877104(), !v4))
  {
    MEMORY[0x1C3BA79F4]();
    sub_1C08775F8(v3, a1, a2);
  }
}

void sub_1C08775F8(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(char *, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v17 = a3;
  v5 = sub_1C07ACF80((uint64_t *)&unk_1ED762690);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v16 - v9;
  v11 = a1[13];
  v12 = a1[14];
  sub_1C07A9480(a1 + 10, v11);
  v13 = sub_1C106ADE0();
  v14 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 16);
  v14(v10, a2, v13);
  sub_1C07B2D8C((uint64_t)v10, 0, 1, v13);
  v14(v7, v17, v13);
  sub_1C07B2D8C((uint64_t)v7, 0, 1, v13);
  v15 = sub_1C106D690();
  (*(void (**)(char *, char *, _QWORD, uint64_t, uint64_t, uint64_t))(v12 + 32))(v10, v7, 0, v15, v11, v12);
  swift_bridgeObjectRelease();
  sub_1C0784B30((uint64_t)v7, (uint64_t *)&unk_1ED762690);
  sub_1C0784B30((uint64_t)v10, (uint64_t *)&unk_1ED762690);
  sub_1C07A9480(a1 + 4, a1[7]);
  sub_1C083D718();
}

void sub_1C0877768()
{
  void *v0;

}

uint64_t sub_1C0877794(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;

  result = sub_1C1070138();
  if (v1)
  {
    type metadata accessor for BehaviorSampleGeneratorError();
    sub_1C0878158();
    swift_allocError();
    v5 = v4;
    v6 = sub_1C07ACF80(&qword_1EF6326E8);
    v7 = (char *)v5 + *(int *)(v6 + 48);
    *v5 = v1;
    v8 = sub_1C106ADE0();
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(v7, a1, v8);
    sub_1C07B2D8C((uint64_t)v5, 0, 1, v6);
    return swift_willThrow();
  }
  return result;
}

uint64_t sub_1C0877858(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  char v15;
  _QWORD *v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  const char *v21;
  uint64_t v22;
  os_log_type_t v23;

  v4 = v2;
  v7 = (_QWORD *)(v2 + 32);
  v8 = *sub_1C07A9480((_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 56));
  v9 = sub_1C083EC38(a1);
  if (!v3)
  {
    v10 = v9;
    sub_1C07A9480(v7, *(_QWORD *)(v4 + 56));
    v11 = sub_1C083E794();
    v13 = v11;
    v14 = sub_1C0C3B544(v11);
    if ((v15 & 1) != 0)
    {
      sub_1C0775894();
      sub_1C0775834();
      if (qword_1ED760048 != -1)
        swift_once();
      v17 = sub_1C106F544();
      sub_1C079E000(v17, (uint64_t)qword_1ED78D800);
      v18 = sub_1C106F538();
      v19 = sub_1C10703A8();
      if (!sub_1C07892C0(v19))
        goto LABEL_16;
      v20 = (uint8_t *)sub_1C0780FC8();
      *(_WORD *)v20 = 0;
      v21 = "BehaviorSampleGenerator: Returning no negative samples since there are no behaviors in the table";
    }
    else
    {
      if (v14 >= 1)
      {
        *(_QWORD *)(swift_allocObject() + 16) = v14;
        v16 = sub_1C0877AF0(v13, v10, a2, (_QWORD *(*)(uint64_t *__return_ptr))sub_1C0878090);
        swift_release();
        sub_1C0775894();
        sub_1C0775834();
        sub_1C07A9480(v7, *(_QWORD *)(v4 + 56));
        v8 = sub_1C083F0C8((uint64_t)v16);
        swift_bridgeObjectRelease();
        return v8;
      }
      sub_1C0775894();
      sub_1C0775834();
      if (qword_1ED760048 != -1)
        swift_once();
      v22 = sub_1C106F544();
      sub_1C079E000(v22, (uint64_t)qword_1ED78D800);
      v18 = sub_1C106F538();
      v23 = sub_1C10703A8();
      if (!sub_1C07892C0(v23))
      {
LABEL_16:

        return MEMORY[0x1E0DEE9D8];
      }
      v20 = (uint8_t *)sub_1C0780FC8();
      *(_WORD *)v20 = 0;
      v21 = "BehaviorSampleGenerator: Returning no negative samples since cumulative counts has not been computed";
    }
    _os_log_impl(&dword_1C0771000, v18, (os_log_type_t)v4, v21, v20, 2u);
    MEMORY[0x1C3BA8270](v20, -1, -1);
    goto LABEL_16;
  }
  return v8;
}

uint64_t sub_1C0877ABC(uint64_t result)
{
  if (result < 0)
  {
    __break(1u);
  }
  else if (result)
  {
    sub_1C0945BC4();
  }
  __break(1u);
  return result;
}

_QWORD *sub_1C0877AF0(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *(*a4)(uint64_t *__return_ptr))
{
  uint64_t v4;
  unint64_t v7;
  uint64_t v8;
  uint64_t i;
  _QWORD *result;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  int64_t v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  uint8_t *v26;
  char v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v4 = MEMORY[0x1E0DEE9E8];
  v31 = MEMORY[0x1E0DEE9E8];
  if (a3 < 1)
    return (_QWORD *)v4;
  v7 = *(_QWORD *)(a1 + 16);
  v8 = a1 + 32;
  v29 = a2 + 56;
  for (i = 1; ; ++i)
  {
    result = a4(&v30);
    if (!v7)
    {
LABEL_30:
      if (qword_1ED760048 != -1)
        swift_once();
      v23 = sub_1C106F544();
      sub_1C079E000(v23, (uint64_t)qword_1ED78D800);
      v24 = sub_1C106F538();
      v25 = sub_1C107039C();
      if (os_log_type_enabled(v24, v25))
      {
        v26 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v26 = 0;
        _os_log_impl(&dword_1C0771000, v24, v25, "WeightedProbabilitySampleGenerator: Random number was generated that is larger than the maximum value in the cdf", v26, 2u);
        MEMORY[0x1C3BA8270](v26, -1, -1);
      }

      goto LABEL_35;
    }
    v11 = *(_QWORD *)(v8 + 8 * (v7 >> 1));
    v12 = v7 >> 1;
    if (v11 != v30)
    {
      v13 = 0;
      v14 = v7;
      v12 = v7 >> 1;
      while (1)
      {
        if (v11 >= v30)
        {
          v14 = v12;
        }
        else
        {
          v13 = v12 + 1;
          if (__OFADD__(v12, 1))
            goto LABEL_46;
        }
        if (v13 >= v14)
          break;
        if (__OFSUB__(v14, v13))
        {
          __break(1u);
LABEL_44:
          __break(1u);
LABEL_45:
          __break(1u);
LABEL_46:
          __break(1u);
          goto LABEL_47;
        }
        v15 = (v14 - v13) / 2;
        v16 = __OFADD__(v13, v15);
        v12 = v13 + v15;
        if (v16)
          goto LABEL_44;
        if (v12 >= v7)
          goto LABEL_45;
        v11 = *(_QWORD *)(v8 + 8 * v12);
        if (v11 == v30)
          goto LABEL_21;
      }
      v12 = v13 - (v13 == v7);
      if ((uint64_t)v12 >= (uint64_t)v7)
        goto LABEL_48;
      if (*(_QWORD *)(v8 + 8 * v12) > v30)
      {
        if (v12)
        {
          --v12;
          goto LABEL_21;
        }
        v17 = 0;
        goto LABEL_23;
      }
    }
LABEL_21:
    v17 = v12 + 1;
    if (__OFADD__(v12, 1))
      break;
    if (v17 >= (uint64_t)v7)
      goto LABEL_30;
LABEL_23:
    if (*(_QWORD *)(a2 + 16))
    {
      v18 = sub_1C1070DEC();
      v19 = -1 << *(_BYTE *)(a2 + 32);
      v20 = v18 & ~v19;
      if (((*(_QWORD *)(v29 + ((v20 >> 3) & 0xFFFFFFFFFFFFF8)) >> v20) & 1) != 0)
      {
        v21 = *(_QWORD *)(a2 + 48);
        if (*(_QWORD *)(v21 + 8 * v20) == v17)
          goto LABEL_35;
        v22 = ~v19;
        while (1)
        {
          v20 = (v20 + 1) & v22;
          if (((*(_QWORD *)(v29 + ((v20 >> 3) & 0xFFFFFFFFFFFFF8)) >> v20) & 1) == 0)
            break;
          if (*(_QWORD *)(v21 + 8 * v20) == v17)
            goto LABEL_35;
        }
      }
    }
    sub_1C07AF408(v17, v4);
    if ((v27 & 1) == 0)
      sub_1C07AF3F4(&v30, v17);
LABEL_35:
    if (i == 50)
      return (_QWORD *)v31;
    v4 = v31;
    if (*(_QWORD *)(v31 + 16) >= a3)
      return (_QWORD *)v4;
  }
LABEL_47:
  __break(1u);
LABEL_48:
  __break(1u);
  return result;
}

uint64_t sub_1C0877DC4()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0(v0 + 32);
  swift_release();
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0(v0 + 80);
  swift_release();
  return v0;
}

uint64_t sub_1C0877E00()
{
  sub_1C0877DC4();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for BehaviorSampleGenerator()
{
  return objc_opt_self();
}

void sub_1C0877E40(uint64_t a1)
{
  sub_1C0877154(a1);
}

void sub_1C0877E60()
{
  sub_1C0877104();
}

_QWORD *sub_1C0877E80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v30[3];
  uint64_t v31;
  uint64_t v32;

  v14 = *(_QWORD *)(a6 - 8);
  MEMORY[0x1E0C80A78](a1);
  sub_1C0778564();
  v17 = v16 - v15;
  v31 = v18;
  v32 = v19;
  v20 = sub_1C079DFC4(v30);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a5 - 8) + 32))(v20, a1, a5);
  v21 = (_QWORD *)swift_allocObject();
  v22 = sub_1C079D180((uint64_t)v30, v31);
  MEMORY[0x1E0C80A78](v22);
  sub_1C0778564();
  v25 = (uint64_t *)(v24 - v23);
  (*(void (**)(uint64_t))(v26 + 16))(v24 - v23);
  v27 = *v25;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 16))(v17, a2, a6);
  v28 = sub_1C0877FD0(v27, v17, a3, v21, a6, a8);
  (*(void (**)(uint64_t, uint64_t))(v14 + 8))(a2, a6);
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v30);
  return v28;
}

_QWORD *sub_1C0877FD0(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4, uint64_t a5, uint64_t a6)
{
  uint64_t *v11;

  a4[13] = a5;
  a4[14] = a6;
  v11 = sub_1C079DFC4(a4 + 10);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a5 - 8) + 32))(v11, a2, a5);
  a4[7] = type metadata accessor for BehaviorDatabase(0);
  a4[8] = &off_1E7A10C48;
  a4[2] = 0xD000000000000029;
  a4[3] = 0x80000001C10E6990;
  a4[4] = a1;
  type metadata accessor for WeightedProbabilitySampleGenerator();
  a4[9] = swift_allocObject();
  a4[15] = a3;
  return a4;
}

uint64_t sub_1C0878080()
{
  return swift_deallocObject();
}

uint64_t sub_1C0878090()
{
  uint64_t v0;

  return sub_1C0877ABC(*(_QWORD *)(v0 + 16));
}

uint64_t type metadata accessor for BehaviorSampleGeneratorError()
{
  uint64_t result;

  result = qword_1EF632768;
  if (!qword_1EF632768)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1C08780D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for BehaviorSampleGeneratorError();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C0878114(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for BehaviorSampleGeneratorError();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_1C0878158()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF6326F0;
  if (!qword_1EF6326F0)
  {
    v1 = type metadata accessor for BehaviorSampleGeneratorError();
    result = MEMORY[0x1C3BA8174](&unk_1C107DD48, v1);
    atomic_store(result, (unint64_t *)&qword_1EF6326F0);
  }
  return result;
}

uint64_t sub_1C0878198(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for BehaviorSampleGeneratorError();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

id *sub_1C08781D4(id *a1, id *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  char *v8;
  char *v9;
  id v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v8 = (char *)*a2;
    *a1 = *a2;
    a1 = (id *)&v8[(v6 + 16) & ~(unint64_t)v6];
    swift_retain();
  }
  else
  {
    v7 = sub_1C07ACF80(&qword_1EF6326E8);
    if (sub_1C07B2D80((uint64_t)a2, 1, v7))
    {
      memcpy(a1, a2, *(_QWORD *)(v5 + 64));
    }
    else
    {
      v9 = (char *)*a2;
      v10 = *a2;
      *a1 = v9;
      v11 = *(int *)(v7 + 48);
      v12 = (char *)a1 + v11;
      v13 = (char *)a2 + v11;
      v14 = sub_1C106ADE0();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
      sub_1C07B2D8C((uint64_t)a1, 0, 1, v7);
    }
  }
  return a1;
}

uint64_t sub_1C08782B4(id *a1)
{
  uint64_t v2;
  uint64_t result;
  char *v4;
  uint64_t v5;

  v2 = sub_1C07ACF80(&qword_1EF6326E8);
  result = sub_1C07B2D80((uint64_t)a1, 1, v2);
  if (!(_DWORD)result)
  {

    v4 = (char *)a1 + *(int *)(v2 + 48);
    v5 = sub_1C106ADE0();
    return (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  }
  return result;
}

_QWORD *sub_1C0878328(_QWORD *a1, id *a2, uint64_t a3)
{
  uint64_t v6;
  id v7;
  id v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;

  v6 = sub_1C07ACF80(&qword_1EF6326E8);
  if (sub_1C07B2D80((uint64_t)a2, 1, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v7 = *a2;
    v8 = *a2;
    *a1 = v7;
    v9 = *(int *)(v6 + 48);
    v10 = (char *)a1 + v9;
    v11 = (char *)a2 + v9;
    v12 = sub_1C106ADE0();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v10, v11, v12);
    sub_1C07B2D8C((uint64_t)a1, 0, 1, v6);
  }
  return a1;
}

void **sub_1C08783E4(void **a1, id *a2, uint64_t a3)
{
  uint64_t v6;
  int v7;
  int v8;
  id v9;
  id v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  id v16;
  id v17;
  void *v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;

  v6 = sub_1C07ACF80(&qword_1EF6326E8);
  v7 = sub_1C07B2D80((uint64_t)a1, 1, v6);
  v8 = sub_1C07B2D80((uint64_t)a2, 1, v6);
  if (!v7)
  {
    if (!v8)
    {
      v16 = *a2;
      v17 = *a2;
      v18 = *a1;
      *a1 = v16;

      v19 = *(int *)(v6 + 48);
      v20 = (char *)a1 + v19;
      v21 = (char *)a2 + v19;
      v22 = sub_1C106ADE0();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 24))(v20, v21, v22);
      return a1;
    }
    sub_1C0784B30((uint64_t)a1, &qword_1EF6326E8);
    goto LABEL_6;
  }
  if (v8)
  {
LABEL_6:
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    return a1;
  }
  v9 = *a2;
  v10 = *a2;
  *a1 = v9;
  v11 = *(int *)(v6 + 48);
  v12 = (char *)a1 + v11;
  v13 = (char *)a2 + v11;
  v14 = sub_1C106ADE0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
  sub_1C07B2D8C((uint64_t)a1, 0, 1, v6);
  return a1;
}

_QWORD *sub_1C087851C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;

  v6 = sub_1C07ACF80(&qword_1EF6326E8);
  if (sub_1C07B2D80((uint64_t)a2, 1, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    *a1 = *a2;
    v7 = *(int *)(v6 + 48);
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = sub_1C106ADE0();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
    sub_1C07B2D8C((uint64_t)a1, 0, 1, v6);
  }
  return a1;
}

void **sub_1C08785D0(void **a1, void **a2, uint64_t a3)
{
  uint64_t v6;
  int v7;
  int v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  void *v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;

  v6 = sub_1C07ACF80(&qword_1EF6326E8);
  v7 = sub_1C07B2D80((uint64_t)a1, 1, v6);
  v8 = sub_1C07B2D80((uint64_t)a2, 1, v6);
  if (!v7)
  {
    if (!v8)
    {
      v14 = *a1;
      *a1 = *a2;

      v15 = *(int *)(v6 + 48);
      v16 = (char *)a1 + v15;
      v17 = (char *)a2 + v15;
      v18 = sub_1C106ADE0();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 40))(v16, v17, v18);
      return a1;
    }
    sub_1C0784B30((uint64_t)a1, &qword_1EF6326E8);
    goto LABEL_6;
  }
  if (v8)
  {
LABEL_6:
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    return a1;
  }
  *a1 = *a2;
  v9 = *(int *)(v6 + 48);
  v10 = (char *)a1 + v9;
  v11 = (char *)a2 + v9;
  v12 = sub_1C106ADE0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v10, v11, v12);
  sub_1C07B2D8C((uint64_t)a1, 0, 1, v6);
  return a1;
}

uint64_t sub_1C08786F8()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1C0878704(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unsigned int v5;

  v4 = sub_1C07ACF80(&qword_1EF6326E8);
  v5 = sub_1C07B2D80(a1, a2, v4);
  if (v5 >= 2)
    return v5 - 1;
  else
    return 0;
}

uint64_t sub_1C087874C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1C0878758(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;

  if (a2)
    v5 = (a2 + 1);
  else
    v5 = 0;
  v6 = sub_1C07ACF80(&qword_1EF6326E8);
  return sub_1C07B2D8C(a1, v5, a3, v6);
}

uint64_t sub_1C08787A4(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1C07ACF80(&qword_1EF6326E8);
  return sub_1C07B2D80(a1, 1, v2);
}

uint64_t sub_1C08787D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1C07ACF80(&qword_1EF6326E8);
  return sub_1C07B2D8C(a1, a2, 1, v4);
}

uint64_t sub_1C0878814()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1C106ADE0();
  if (v1 <= 0x3F)
  {
    swift_getTupleTypeLayout2();
    swift_initEnumMetadataSinglePayload();
    return 0;
  }
  return result;
}

unint64_t sub_1C0878884()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v1 + 16);
  if (v2)
  {
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    v3 = 0;
    do
    {
      if (*(_QWORD *)(v1 + 8 * v3 + 32))
      {
        swift_retain();
        sub_1C08257D4();
      }
      ++v3;
      sub_1C106FC94();
      swift_bridgeObjectRelease();
      sub_1C106FC94();
      sub_1C106FC94();
      swift_release();
      swift_bridgeObjectRelease();
    }
    while (v2 != v3);
    swift_bridgeObjectRelease();
  }
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C106FC94();
  swift_bridgeObjectRelease();
  return 0xD000000000000010;
}

uint64_t type metadata accessor for BehaviorSequence()
{
  return objc_opt_self();
}

uint64_t getEnumTagSinglePayload for BehaviorSequenceGenerator(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 24))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for BehaviorSequenceGenerator(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 24) = v3;
  return result;
}

ValueMetadata *type metadata accessor for BehaviorSequenceGenerator()
{
  return &type metadata for BehaviorSequenceGenerator;
}

unint64_t sub_1C0878A2C()
{
  return sub_1C0878884();
}

id sub_1C0878A4C(void *a1, uint64_t a2, double a3, double a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  id v12;
  void *v13;
  id v14;
  uint64_t v15;
  void *v16;
  id v17;
  id v18;
  id v20;
  void *v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  if (a2 <= 0)
  {
    v20 = objc_allocWithZone(MEMORY[0x1E0D02478]);
    type metadata accessor for BehaviorSequence();
    v21 = (void *)sub_1C106FEEC();
    v22 = objc_msgSend(v20, sel_initWithSequence_, v21);

    return v22;
  }
  else
  {
    v8 = sub_1C1070D20();
    v9 = sub_1C078103C();
    *(_QWORD *)(v9 + 16) = a2;
    *(double *)(v9 + 24) = a3;
    *(double *)(v9 + 32) = a4;
    v10 = MEMORY[0x1E0C809B0];
    v11 = sub_1C0790DCC((uint64_t)sub_1C0878EF8, MEMORY[0x1E0C809B0], 1107296256, v23, v26);
    swift_release();
    v12 = objc_msgSend(a1, sel_scanWithInitial_nextPartialResult_, v8, v11);
    _Block_release(v11);
    swift_unknownObjectRelease();
    v13 = sub_1C0790DCC((uint64_t)sub_1C0870B58, v10, 1107296256, v24, v27);
    v14 = objc_msgSend(v12, sel_filterWithIsIncluded_, v13);

    _Block_release(v13);
    v15 = sub_1C078103C();
    *(_QWORD *)(v15 + 16) = a2;
    *(double *)(v15 + 24) = a3;
    *(double *)(v15 + 32) = a4;
    v16 = sub_1C0790DCC((uint64_t)sub_1C0879180, v10, 1107296256, v25, v28);
    v17 = v14;
    swift_release();
    v18 = objc_msgSend(v17, sel_mapWithTransform_, v16);

    _Block_release(v16);
    return v18;
  }
}

uint64_t sub_1C0878C7C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>, double a5@<D0>, double a6@<D1>)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19[4];
  uint64_t v20;
  uint64_t v21;

  sub_1C0788E98(a1, (uint64_t)v19);
  swift_dynamicCast();
  v11 = v21;
  if (v21)
  {
    sub_1C07ACF80(&qword_1EF632818);
    v12 = swift_allocObject();
    *(_OWORD *)(v12 + 16) = xmmword_1C1079220;
    *(_QWORD *)(v12 + 32) = v11;
    v19[0] = v12;
    sub_1C106FF28();
    v20 = v19[0];
    swift_retain();
    swift_bridgeObjectRelease();
  }
  v13 = _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  v14 = sub_1C0878E14(v13, a5, a6, a2, a3);
  swift_bridgeObjectRelease();
  if (v14)
  {
    v15 = swift_retain();
    MEMORY[0x1C3BA6800](v15);
    if (*(_QWORD *)(v20 + 16) >= *(_QWORD *)(v20 + 24) >> 1)
      sub_1C106FF58();
    sub_1C106FFC4();
    sub_1C106FF28();
    v21 = 0;
  }
  else
  {
    v21 = a2;
    swift_retain();
  }
  result = swift_release();
  v17 = v20;
  v18 = v21;
  a4[3] = (uint64_t)&type metadata for BehaviorSequenceGenerator.PartialSequence;
  *a4 = v17;
  a4[1] = v18;
  return result;
}

uint64_t sub_1C0878E08@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;

  return sub_1C0878C7C(a1, a2, *(_QWORD *)(v3 + 16), a3, *(double *)(v3 + 24), *(double *)(v3 + 32));
}

BOOL sub_1C0878E14(uint64_t a1, double a2, double a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  unint64_t v8;
  uint64_t v10;
  double v11;
  double v12;
  double v13;

  v5 = *(_QWORD *)(a1 + 16);
  if (v5 >= a5)
    return 0;
  if (!v5)
    return 1;
  if (!*(_QWORD *)(a1 + 32))
    return 1;
  v8 = sub_1C0C3B568(a1);
  if (v8 < 2)
    return 1;
  v10 = v8;
  swift_retain();
  sub_1C106ACD8();
  if (v11 > a2)
  {
    sub_1C0879200(v10);
    swift_release();
    return 0;
  }
  sub_1C106ACD8();
  v13 = v12;
  swift_release();
  sub_1C0879200(v10);
  return v13 <= a3;
}

id sub_1C0878EF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void (*v5)(_QWORD *__return_ptr, _QWORD *, uint64_t);
  void *v6;
  _QWORD v8[4];
  _QWORD v9[4];

  v5 = *(void (**)(_QWORD *__return_ptr, _QWORD *, uint64_t))(a1 + 32);
  v9[3] = swift_getObjectType();
  v9[0] = a2;
  swift_retain();
  swift_unknownObjectRetain();
  swift_retain();
  v5(v8, v9, a3);
  swift_release();
  swift_release();
  sub_1C07A9480(v8, v8[3]);
  v6 = (void *)sub_1C1070C9C();
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v8);
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v9);
  return v6;
}

BOOL sub_1C0878FA8()
{
  uint64_t v1;

  swift_unknownObjectRetain();
  swift_dynamicCast();
  swift_bridgeObjectRelease();
  if (v1)
    swift_release();
  return v1 != 0;
}

uint64_t sub_1C0879010@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;

  swift_unknownObjectRetain();
  v4 = swift_dynamicCast();
  v5 = *(_QWORD *)(v12 + 16);
  v6 = a1 - v5;
  if (__OFSUB__(a1, v5))
  {
    __break(1u);
LABEL_12:
    sub_1C106FF58();
    goto LABEL_4;
  }
  if (v6 < 1)
    goto LABEL_5;
  MEMORY[0x1C3BA6800](v4);
  if (*(_QWORD *)(v12 + 16) >= *(_QWORD *)(v12 + 24) >> 1)
    goto LABEL_12;
LABEL_4:
  sub_1C106FFC4();
  v7 = sub_1C106FF28();
  if (v6 != 1)
  {
    v11 = ~v5 + a1;
    do
    {
      MEMORY[0x1C3BA6800](v7);
      if (*(_QWORD *)(v12 + 16) >= *(_QWORD *)(v12 + 24) >> 1)
        sub_1C106FF58();
      sub_1C106FFC4();
      v7 = sub_1C106FF28();
      --v11;
    }
    while (v11);
  }
LABEL_5:
  v8 = type metadata accessor for BehaviorSequence();
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v12;
  a2[3] = v8;
  *a2 = v9;
  return swift_release();
}

uint64_t sub_1C0879174@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_1C0879010(*(_QWORD *)(v1 + 16), a1);
}

id sub_1C0879180(uint64_t a1)
{
  void (*v1)(_QWORD *__return_ptr, uint64_t);
  uint64_t v2;
  void *v3;
  _QWORD v5[4];

  v1 = *(void (**)(_QWORD *__return_ptr, uint64_t))(a1 + 32);
  swift_retain();
  v2 = swift_unknownObjectRetain();
  v1(v5, v2);
  swift_release();
  swift_unknownObjectRelease();
  sub_1C07A9480(v5, v5[3]);
  v3 = (void *)sub_1C1070C9C();
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v5);
  return v3;
}

uint64_t sub_1C0879200(uint64_t result)
{
  if (result != 1)
    return swift_release();
  return result;
}

_QWORD *assignWithCopy for BehaviorSequenceGenerator.PartialSequence(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for BehaviorSequenceGenerator.PartialSequence()
{
  return &type metadata for BehaviorSequenceGenerator.PartialSequence;
}

void sub_1C087928C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  int64_t v6;
  int64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v2 = a1 + 56;
  v3 = 1 << *(_BYTE *)(a1 + 32);
  v4 = -1;
  if (v3 < 64)
    v4 = ~(-1 << v3);
  v5 = v4 & *(_QWORD *)(a1 + 56);
  v6 = (unint64_t)(v3 + 63) >> 6;
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  v7 = 0;
  v8 = MEMORY[0x1E0DEE9D8];
  while (v5)
  {
    v9 = __clz(__rbit64(v5));
    v5 &= v5 - 1;
    v10 = v9 | (v7 << 6);
LABEL_22:
    v14 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v10);
    v15 = *v14;
    v16 = v14[1];
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    sub_1C0849A3C(v15, v16);
    if (v18 != -1)
    {
      v19 = v17;
      v20 = v18;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1C07EBBA0();
        v8 = v26;
      }
      v21 = v8;
      v22 = *(_QWORD *)(v8 + 16);
      v23 = v21;
      v24 = v22 + 1;
      if (v22 >= *(_QWORD *)(v21 + 24) >> 1)
      {
        sub_1C07EBBA0();
        v24 = v22 + 1;
        v23 = v27;
      }
      *(_QWORD *)(v23 + 16) = v24;
      v25 = v23 + 16 * v22;
      v8 = v23;
      *(_QWORD *)(v25 + 32) = v19;
      *(_BYTE *)(v25 + 40) = v20;
    }
  }
  v11 = v7 + 1;
  if (__OFADD__(v7, 1))
  {
    __break(1u);
    goto LABEL_30;
  }
  if (v11 >= v6)
    goto LABEL_28;
  v12 = *(_QWORD *)(v2 + 8 * v11);
  ++v7;
  if (v12)
    goto LABEL_21;
  v7 = v11 + 1;
  if (v11 + 1 >= v6)
    goto LABEL_28;
  v12 = *(_QWORD *)(v2 + 8 * v7);
  if (v12)
    goto LABEL_21;
  v7 = v11 + 2;
  if (v11 + 2 >= v6)
    goto LABEL_28;
  v12 = *(_QWORD *)(v2 + 8 * v7);
  if (v12)
    goto LABEL_21;
  v7 = v11 + 3;
  if (v11 + 3 >= v6)
    goto LABEL_28;
  v12 = *(_QWORD *)(v2 + 8 * v7);
  if (v12)
  {
LABEL_21:
    v5 = (v12 - 1) & v12;
    v10 = __clz(__rbit64(v12)) + (v7 << 6);
    goto LABEL_22;
  }
  v13 = v11 + 4;
  if (v13 >= v6)
  {
LABEL_28:
    swift_release();
    return;
  }
  v12 = *(_QWORD *)(v2 + 8 * v13);
  if (v12)
  {
    v7 = v13;
    goto LABEL_21;
  }
  while (1)
  {
    v7 = v13 + 1;
    if (__OFADD__(v13, 1))
      break;
    if (v7 >= v6)
      goto LABEL_28;
    v12 = *(_QWORD *)(v2 + 8 * v7);
    ++v13;
    if (v12)
      goto LABEL_21;
  }
LABEL_30:
  __break(1u);
}

uint64_t sub_1C087949C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD v46[2];
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  void (*v63)(char *, uint64_t, uint64_t);
  uint64_t v64;
  __int16 v65;
  _BYTE v66[56];
  uint64_t v67;

  v54 = a4;
  v55 = a5;
  v60 = type metadata accessor for TimeBasedBehaviorSample();
  v9 = *(_QWORD *)(v60 - 8);
  MEMORY[0x1E0C80A78](v60);
  v53 = (uint64_t)v46 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1C106ADE0();
  v59 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v58 = (char *)v46 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for FeatureProviderChange(0);
  v51 = *(_QWORD *)(v13 - 8);
  v52 = v13;
  MEMORY[0x1E0C80A78](v13);
  v61 = (uint64_t)v46 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v50 = (char *)v46 - v16;
  MEMORY[0x1E0C80A78](v17);
  v49 = (uint64_t)v46 - v18;
  v19 = *(_QWORD *)(a1 + 16);
  if (v19)
  {
    v62 = v5;
    v20 = a1 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    v56 = *(_QWORD *)(v9 + 72);
    v57 = (_QWORD *)(a2 + 104);
    v46[1] = a1;
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    v21 = MEMORY[0x1E0DEE9D8];
    v48 = a3;
    v47 = a2;
    do
    {
      v67 = v21;
      sub_1C07A9480(v57, *(_QWORD *)(a2 + 128));
      sub_1C07DFF44(v20, (uint64_t)v66);
      v22 = v20 + *(int *)(v60 + 24);
      v23 = (uint64_t)v58;
      v63 = *(void (**)(char *, uint64_t, uint64_t))(v59 + 16);
      v63(v58, v22, v11);
      v64 = 0;
      v65 = 256;
      type metadata accessor for BehaviorContext();
      swift_allocObject();
      sub_1C0825B94(v23, &v64, 0);
      v24 = v11;
      v25 = sub_1C084C318((uint64_t)v66, a3);
      swift_release();
      if (v25)
      {
        swift_unknownObjectRetain();
        v26 = v62;
        v27 = sub_1C087990C(MEMORY[0x1E0DEE9E0], a3, v25);
        v28 = v26;
        v29 = v53;
        sub_1C087B7B0(v20, v53);
        v30 = sub_1C087B54C(v29, v54);
        sub_1C087C028(v29);
        v31 = v55;
        _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
        v32 = v31;
        v33 = v28;
        v34 = sub_1C07E7D3C((uint64_t)v30, v32);
        swift_bridgeObjectRelease();
        sub_1C087A258(v34, v27);
        v62 = v33;
        v35 = (uint64_t)v50;
        v36 = v22;
        v37 = v24;
        v63(v50, v36, v24);
        sub_1C089B840();
        v39 = v38;
        swift_bridgeObjectRelease();
        swift_unknownObjectRelease();
        v40 = v52;
        *(_BYTE *)(v35 + *(int *)(v52 + 20)) = 2;
        *(_QWORD *)(v35 + *(int *)(v40 + 24)) = v39;
        v41 = v49;
        sub_1C087C414(v35, v49, type metadata accessor for FeatureProviderChange);
        sub_1C087C414(v41, v61, type metadata accessor for FeatureProviderChange);
        v21 = v67;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1C07EBBBC();
          v21 = v43;
        }
        v42 = *(_QWORD *)(v21 + 16);
        a3 = v48;
        a2 = v47;
        v11 = v37;
        if (v42 >= *(_QWORD *)(v21 + 24) >> 1)
        {
          sub_1C07EBBBC();
          v21 = v44;
        }
        *(_QWORD *)(v21 + 16) = v42 + 1;
        sub_1C087C414(v61, v21+ ((*(unsigned __int8 *)(v51 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v51 + 80))+ *(_QWORD *)(v51 + 72) * v42, type metadata accessor for FeatureProviderChange);
      }
      else
      {
        v21 = v67;
      }
      v20 += v56;
      --v19;
    }
    while (v19);
    swift_release();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_release();
    v21 = MEMORY[0x1E0DEE9D8];
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v21;
}

uint64_t sub_1C087990C(_QWORD *a1, uint64_t a2, void *a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  unint64_t v10;
  unint64_t i;
  int64_t v12;
  unint64_t v13;
  int64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  void *v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  char v27;
  unint64_t v28;
  char v29;
  uint64_t v30;
  void *v31;
  uint64_t *v32;
  uint64_t v33;
  BOOL v34;
  uint64_t v35;
  uint64_t result;
  void *v37;
  uint64_t v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  int64_t v42;

  v41 = a2 + 56;
  v6 = 1 << *(_BYTE *)(a2 + 32);
  v7 = -1;
  if (v6 < 64)
    v7 = ~(-1 << v6);
  v8 = v7 & *(_QWORD *)(a2 + 56);
  v42 = (unint64_t)(v6 + 63) >> 6;
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  v9 = 0;
  v37 = a3;
  if (!v8)
    goto LABEL_5;
LABEL_4:
  v10 = __clz(__rbit64(v8));
  v8 &= v8 - 1;
  for (i = v10 | (v9 << 6); ; i = __clz(__rbit64(v13)) + (v9 << 6))
  {
    v15 = *(_QWORD *)(a2 + 48) + 16 * i;
    v16 = *(_QWORD *)v15;
    v17 = *(_BYTE *)(v15 + 8);
    sub_1C084BCD4(*(_QWORD *)v15, v17);
    sub_1C0849454(v16, v17);
    v18 = (void *)sub_1C106FAF0();
    swift_bridgeObjectRelease();
    v19 = objc_msgSend(a3, sel_featureValueForName_, v18);

    if (v19)
    {
      sub_1C0849454(v16, v17);
      v21 = v20;
      v23 = v22;
      v39 = v19;
      swift_isUniquelyReferenced_nonNull_native();
      v38 = v21;
      v40 = v23;
      v24 = sub_1C077D774(v21, v23);
      if (__OFADD__(a1[2], (v25 & 1) == 0))
        goto LABEL_36;
      v26 = v24;
      v27 = v25;
      sub_1C07ACF80(&qword_1ED758E28);
      a3 = v37;
      if ((sub_1C107090C() & 1) != 0)
      {
        v28 = sub_1C077D774(v38, v40);
        if ((v27 & 1) != (v29 & 1))
          goto LABEL_38;
        v26 = v28;
      }
      if ((v27 & 1) != 0)
      {
        v30 = a1[7];

        v31 = v39;
        *(_QWORD *)(v30 + 8 * v26) = v39;
      }
      else
      {
        a1[(v26 >> 6) + 8] |= 1 << v26;
        v32 = (uint64_t *)(a1[6] + 16 * v26);
        v31 = v39;
        *v32 = v38;
        v32[1] = v40;
        *(_QWORD *)(a1[7] + 8 * v26) = v39;
        v33 = a1[2];
        v34 = __OFADD__(v33, 1);
        v35 = v33 + 1;
        if (v34)
          goto LABEL_37;
        a1[2] = v35;
        _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      }

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    sub_1C084BAF8(v16, v17);
    if (v8)
      goto LABEL_4;
LABEL_5:
    v12 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_35;
    }
    if (v12 >= v42)
      goto LABEL_33;
    v13 = *(_QWORD *)(v41 + 8 * v12);
    ++v9;
    if (!v13)
    {
      v9 = v12 + 1;
      if (v12 + 1 >= v42)
        goto LABEL_33;
      v13 = *(_QWORD *)(v41 + 8 * v9);
      if (!v13)
      {
        v9 = v12 + 2;
        if (v12 + 2 >= v42)
          goto LABEL_33;
        v13 = *(_QWORD *)(v41 + 8 * v9);
        if (!v13)
        {
          v9 = v12 + 3;
          if (v12 + 3 >= v42)
            goto LABEL_33;
          v13 = *(_QWORD *)(v41 + 8 * v9);
          if (!v13)
            break;
        }
      }
    }
LABEL_20:
    v8 = (v13 - 1) & v13;
  }
  v14 = v12 + 4;
  if (v14 >= v42)
  {
LABEL_33:
    swift_release();
    swift_unknownObjectRelease();
    return (uint64_t)a1;
  }
  v13 = *(_QWORD *)(v41 + 8 * v14);
  if (v13)
  {
    v9 = v14;
    goto LABEL_20;
  }
  while (1)
  {
    v9 = v14 + 1;
    if (__OFADD__(v14, 1))
      break;
    if (v9 >= v42)
      goto LABEL_33;
    v13 = *(_QWORD *)(v41 + 8 * v9);
    ++v14;
    if (v13)
      goto LABEL_20;
  }
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
LABEL_37:
  __break(1u);
LABEL_38:
  result = sub_1C1070D44();
  __break(1u);
  return result;
}

uint64_t sub_1C0879C78(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = sub_1C106D6CC();
  MEMORY[0x1E0C80A78](v2);
  sub_1C0778564();
  if (*(_QWORD *)(a1 + 16))
    __asm { BR              X8 }
  v3 = MEMORY[0x1E0DEE9D8];
  swift_release();
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t sub_1C087A258(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v6;
  uint64_t v8;

  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v8 = a2;
  sub_1C087C064(a1, (uint64_t)sub_1C090B6B8, 0, isUniquelyReferenced_nonNull_native, &v8);
  v6 = v8;
  swift_bridgeObjectRelease();
  if (v2)
    swift_bridgeObjectRelease();
  return v6;
}

void sub_1C087A2D4()
{
  sub_1C0AA7704();
}

void sub_1C087A2E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v0 = sub_1C084861C();
  v1 = *(_QWORD *)(v0 + 16);
  if (v1)
  {
    v25 = MEMORY[0x1E0DEE9D8];
    sub_1C09D30E0();
    v2 = v25;
    v3 = sub_1C0F2239C(v0);
    v5 = v4;
    v7 = v6 & 1;
    v24 = v0 + 56;
    while ((v3 & 0x8000000000000000) == 0 && v3 < 1 << *(_BYTE *)(v0 + 32))
    {
      if (((*(_QWORD *)(v24 + (((unint64_t)v3 >> 3) & 0xFFFFFFFFFFFFF8)) >> v3) & 1) == 0)
        goto LABEL_14;
      if (*(_DWORD *)(v0 + 36) != (_DWORD)v5)
        goto LABEL_15;
      v8 = *(_QWORD *)(v0 + 48) + 16 * v3;
      v9 = v2;
      v10 = *(_QWORD *)v8;
      v11 = *(_BYTE *)(v8 + 8);
      sub_1C084BCD4(*(_QWORD *)v8, v11);
      sub_1C0849454(v10, v11);
      v13 = v12;
      v15 = v14;
      v16 = v10;
      v2 = v9;
      sub_1C084BAF8(v16, v11);
      v26 = v9;
      v17 = v0;
      v18 = *(_QWORD *)(v2 + 16);
      if (v18 >= *(_QWORD *)(v2 + 24) >> 1)
      {
        sub_1C09D30E0();
        v2 = v26;
      }
      *(_QWORD *)(v2 + 16) = v18 + 1;
      v19 = v2 + 16 * v18;
      *(_QWORD *)(v19 + 32) = v13;
      *(_QWORD *)(v19 + 40) = v15;
      v20 = sub_1C0F22500(v3, v5, v7 & 1, v17);
      v3 = v20;
      v5 = v21;
      v7 = v22 & 1;
      --v1;
      v0 = v17;
      if (!v1)
      {
        sub_1C0834E68(v20, v21, v22 & 1);
        sub_1C07767AC();
        goto LABEL_12;
      }
    }
    __break(1u);
LABEL_14:
    __break(1u);
LABEL_15:
    __break(1u);
  }
  else
  {
    sub_1C07767AC();
    v2 = MEMORY[0x1E0DEE9D8];
LABEL_12:
    sub_1C0AA7704();
    sub_1C0BD9F34(v23);
    sub_1C0898D28(v2);
  }
}

uint64_t sub_1C087A4B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  _QWORD *v29;

  v25 = a2;
  v26 = a1;
  v3 = sub_1C106ADE0();
  MEMORY[0x1E0C80A78](v3);
  sub_1C077AED0();
  v27 = v4;
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v24 - v6;
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v24 - v9;
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v24 - v12;
  sub_1C07ACF80(&qword_1ED75D0B8);
  sub_1C106ACD8();
  sub_1C106AD2C();
  v28 = v10;
  sub_1C106AD2C();
  v14 = v2[16];
  v15 = v2[18];
  sub_1C07A9480(v2 + 13, v14);
  sub_1C106AD2C();
  v16 = v29;
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 8))(v7, v14, v15);
  sub_1C079E2E0((uint64_t)v7);
  if (v16)
  {
    v23 = (uint64_t)v28;
  }
  else
  {
    v17 = v2[10];
    v18 = v2[12];
    v29 = sub_1C07A9480(v2 + 7, v17);
    v19 = v27;
    sub_1C106AD2C();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 8))(v19, v17, v18);
    v21 = sub_1C079E2E0(v19);
    v22 = (void *)MEMORY[0x1C3BA79F4](v21);
    v23 = (uint64_t)v28;
    sub_1C087A6E4(v26, (uint64_t)v13, (uint64_t)v28, v25);
    objc_autoreleasePoolPop(v22);
  }
  sub_1C079E2E0(v23);
  return sub_1C079E2E0((uint64_t)v13);
}

void sub_1C087A6E4(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(char *, uint64_t, uint64_t);
  uint64_t v24;
  uint64_t (*v25)(char *, char *, _QWORD, uint64_t, uint64_t, uint64_t);
  uint64_t v26;
  char *v27;
  void *v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD v43[2];
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;

  v53 = a3;
  v55 = a2;
  v52 = a1;
  v44 = a4;
  v5 = sub_1C07ACF80(&qword_1EF632970);
  v45 = *(_QWORD *)(v5 - 8);
  v46 = v5;
  MEMORY[0x1E0C80A78](v5);
  sub_1C077AE40();
  v43[1] = v6;
  sub_1C07ACF80(&qword_1EF632960);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v7);
  sub_1C077AE40();
  v49 = v8;
  v48 = sub_1C07ACF80(&qword_1EF632978);
  v51 = *(_QWORD *)(v48 - 8);
  MEMORY[0x1E0C80A78](v48);
  sub_1C077AED0();
  v47 = v9;
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)v43 - v11;
  sub_1C07ACF80((uint64_t *)&unk_1ED762690);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)v43 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)v43 - v17;
  v19 = swift_allocObject();
  *(_QWORD *)(v19 + 16) = 0;
  v20 = v4[5];
  v21 = v4[6];
  v50 = v4;
  sub_1C07A9480(v4 + 2, v20);
  v22 = sub_1C106ADE0();
  v23 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 16);
  v23(v18, v55, v22);
  sub_1C0784E64((uint64_t)v18);
  v23(v15, v53, v22);
  sub_1C0784E64((uint64_t)v15);
  v24 = sub_1C106D690();
  v25 = *(uint64_t (**)(char *, char *, _QWORD, uint64_t, uint64_t, uint64_t))(v21 + 32);
  v26 = v21;
  v27 = v12;
  v28 = (void *)v25(v18, v15, 0, v24, v20, v26);
  swift_bridgeObjectRelease();
  sub_1C0784B94((uint64_t)v15, (uint64_t *)&unk_1ED762690);
  sub_1C0784B94((uint64_t)v18, (uint64_t *)&unk_1ED762690);
  type metadata accessor for BehaviorEvent();
  v29 = v28;
  v30 = v54;
  sub_1C106ED88();
  if (v30)
  {
    swift_release();

  }
  else
  {
    v54 = v19;
    v31 = v51;
    v32 = v48;
    v33 = type metadata accessor for TimeBasedBehaviorSample();
    v34 = v49;
    sub_1C07B2D8C(v49, 1, 1, v33);
    v35 = v50;
    v36 = sub_1C087B8F0(v34, 5);
    sub_1C0784B94(v34, &qword_1EF632960);
    sub_1C0779758();
    v37 = sub_1C0879C78(v36);
    MEMORY[0x1E0C80A78](v37);
    v43[-2] = v55;
    sub_1C0828F50();
    v39 = v38;
    swift_bridgeObjectRelease();
    v55 = sub_1C087BD94(v39, v52, -1);
    sub_1C0775834();
    v43[0] = v27;
    (*(void (**)(uint64_t, char *, uint64_t))(v31 + 16))(v47, v27, v32);
    v40 = (_QWORD *)swift_allocObject();
    v41 = v54;
    v40[2] = v35;
    v40[3] = v41;
    v40[4] = v52;
    sub_1C0779758();
    swift_retain();
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    sub_1C07ACF80(&qword_1EF632990);
    sub_1C07E6EDC(&qword_1EF632998, &qword_1EF632978, MEMORY[0x1E0D3D840]);
    sub_1C07E6EDC(&qword_1EF6329A0, &qword_1EF632990, (uint64_t)&unk_1C107A460);
    sub_1C1070CCC();

    (*(void (**)(_QWORD, uint64_t))(v51 + 8))(v43[0], v32);
    v42 = sub_1C07ACF80(&qword_1EF6329A8);
    *(_QWORD *)(v44 + *(int *)(v42 + 52)) = v55;
    (*(void (**)(void))(v45 + 32))();
    swift_release();
  }
}

uint64_t sub_1C087AB58@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;

  v5 = *(_QWORD *)a1;
  v6 = *(_QWORD *)(a1 + 8);
  v7 = *(_QWORD *)(a1 + 16);
  v8 = *(_QWORD *)(a1 + 24);
  v9 = *(_QWORD *)(a1 + 32);
  v10 = *(_BYTE *)(a1 + 40);
  v11 = a3 + *(int *)(type metadata accessor for TimeBasedBehaviorSample() + 24);
  v12 = sub_1C106ADE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v11, a2, v12);
  *(_QWORD *)a3 = v5;
  *(_QWORD *)(a3 + 8) = v6;
  *(_QWORD *)(a3 + 16) = v7;
  *(_QWORD *)(a3 + 24) = v8;
  *(_QWORD *)(a3 + 32) = v9;
  *(_BYTE *)(a3 + 40) = v10;
  *(_BYTE *)(a3 + 41) = 1;
  return sub_1C0826EB0(v5, v6, v7, v8, v9, v10);
}

uint64_t sub_1C087AC14(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5[39] = a4;
  v5[40] = a5;
  v5[37] = a1;
  v5[38] = a3;
  sub_1C07ACF80(&qword_1EF632960);
  v5[41] = swift_task_alloc();
  v7 = type metadata accessor for TimeBasedBehaviorSample();
  v5[42] = v7;
  v5[43] = *(_QWORD *)(v7 - 8);
  v5[44] = swift_task_alloc();
  v8 = sub_1C106ADE0();
  v5[45] = v8;
  v5[46] = *(_QWORD *)(v8 - 8);
  v5[47] = swift_task_alloc();
  v9 = sub_1C106D6CC();
  v5[48] = v9;
  v5[49] = *(_QWORD *)(v9 - 8);
  v10 = swift_task_alloc();
  v11 = *a2;
  v5[50] = v10;
  v5[51] = v11;
  return swift_task_switch();
}

uint64_t sub_1C087ACF4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(uint64_t);
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  NSObject *v32;
  os_log_type_t v33;
  uint8_t *v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t *v48;
  uint64_t result;
  uint64_t v50;
  BOOL v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t *v58;
  uint64_t v59;
  uint64_t v60;

  v1 = *(_QWORD *)(v0 + 304);
  v2 = *(_QWORD *)(v1 + 192);
  v3 = *(_QWORD *)(v2 + 16);
  if (v3)
  {
    v4 = v2 + 32;
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    while (1)
    {
      v5 = *(_QWORD *)(v0 + 408);
      sub_1C07D6D1C(v4, v0 + 104);
      v6 = *(_QWORD *)(v0 + 128);
      v7 = *(_QWORD *)(v0 + 136);
      sub_1C07A9480((_QWORD *)(v0 + 104), v6);
      if (((*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 8))(v5, v6, v7) & 1) != 0)
        break;
      _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0(v0 + 104);
      v4 += 40;
      if (!--v3)
      {
        swift_bridgeObjectRelease();
        v1 = *(_QWORD *)(v0 + 304);
        goto LABEL_6;
      }
    }
    swift_bridgeObjectRelease();
    sub_1C077DD60((__int128 *)(v0 + 104), v0 + 64);
    sub_1C0784B94(v0 + 64, qword_1EF6329B0);
    if (qword_1ED760048 != -1)
      swift_once();
    v31 = sub_1C077585C();
    sub_1C079E000(v31, (uint64_t)qword_1ED78D800);
    swift_retain_n();
    v32 = sub_1C106F538();
    v33 = sub_1C10703A8();
    if (os_log_type_enabled(v32, v33))
    {
      v34 = (uint8_t *)sub_1C0775854();
      v60 = sub_1C0775854();
      *(_DWORD *)v34 = 136315138;
      sub_1C0779758();
      v35 = sub_1C08257D4();
      v37 = v36;
      swift_release();
      *(_QWORD *)(v0 + 288) = sub_1C0788DAC(v35, v37, &v60);
      sub_1C10705AC();
      sub_1C07767AC();
      sub_1C07863E8();
      sub_1C07796F0(&dword_1C0771000, v32, v33, "BehaviorsFeatureProvider: Dropping sample due to hitting window limit for behavior: %s", v34);
      sub_1C0778610();
      sub_1C0776778();
    }
    sub_1C07863E8();

    goto LABEL_14;
  }
LABEL_6:
  v8 = *(_QWORD *)(v0 + 312);
  *(_OWORD *)(v0 + 64) = 0u;
  *(_OWORD *)(v0 + 80) = 0u;
  *(_QWORD *)(v0 + 96) = 0;
  sub_1C0784B94(v0 + 64, qword_1EF6329B0);
  sub_1C077F040();
  if (*(_QWORD *)(v8 + 16) >= *(_QWORD *)(v1 + 200))
    goto LABEL_14;
  v9 = *(_QWORD *)(v0 + 400);
  v10 = *(_QWORD *)(v0 + 384);
  v11 = *(_QWORD *)(v0 + 392);
  v12 = *(uint64_t (**)(uint64_t))(*(_QWORD *)(v0 + 304) + 208);
  v13 = (uint64_t *)(*(_QWORD *)(v0 + 408) + 16);
  v14 = sub_1C07DFF44((uint64_t)v13, v0 + 16);
  sub_1C0824E00(v14, v15, v16, v17, v18, v19, v20, v21);
  v22 = v12(v9);
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v9, v10);
  if ((v22 & 1) == 0)
  {
LABEL_14:
    **(_QWORD **)(v0 + 296) = MEMORY[0x1E0DEE9D8];
LABEL_15:
    swift_task_dealloc();
    swift_task_dealloc();
    sub_1C07796F8();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v23 = *(_QWORD *)(v0 + 408);
  v24 = *(_QWORD *)(v0 + 376);
  v25 = *(_QWORD **)(v0 + 304);
  v26 = v25[16];
  v27 = v25[18];
  sub_1C07A9480(v25 + 13, v26);
  sub_1C106AD2C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v27 + 8))(v24, v26, v27);
  v28 = *(_QWORD *)(v0 + 368);
  v30 = *(_QWORD *)(v0 + 352);
  v29 = *(_QWORD *)(v0 + 360);
  v38 = *(_QWORD *)(v0 + 408);
  v57 = *(_QWORD *)(v0 + 344);
  v39 = *(_QWORD *)(v0 + 328);
  v56 = *(_QWORD *)(v0 + 336);
  v59 = *(_QWORD *)(v0 + 320);
  v58 = (uint64_t *)(*(_QWORD *)(v0 + 312) + 16);
  sub_1C0797048();
  v40 = *(_QWORD *)(v38 + 24);
  v53 = *v13;
  v54 = *(_QWORD *)(v38 + 32);
  v41 = *(_QWORD *)(v38 + 40);
  v55 = *(_QWORD *)(v38 + 48);
  LOBYTE(v38) = *(_BYTE *)(v38 + 56);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v28 + 16))(v30 + *(int *)(v56 + 24), *(_QWORD *)(v23 + 64) + OBJC_IVAR____TtC24IntelligencePlatformCore15BehaviorContext_date, v29);
  *(_QWORD *)v30 = v53;
  *(_QWORD *)(v30 + 8) = v40;
  *(_QWORD *)(v30 + 16) = v54;
  *(_QWORD *)(v30 + 24) = v41;
  *(_QWORD *)(v30 + 32) = v55;
  *(_BYTE *)(v30 + 40) = v38;
  *(_BYTE *)(v30 + 41) = 0;
  sub_1C087C560(v30, v39);
  sub_1C07B2D8C(v39, 0, 1, v56);
  sub_1C0826EB0(v53, v40, v54, v41, v55, v38);
  v42 = sub_1C087B8F0(v39, 5);
  sub_1C0784B94(v39, &qword_1EF632960);
  swift_retain();
  sub_1C0879C78(v42);
  *(_QWORD *)(swift_task_alloc() + 16) = v30;
  sub_1C0828F50();
  sub_1C077960C();
  sub_1C07796F8();
  sub_1C07ACF80(&qword_1EF637980);
  v43 = (*(unsigned __int8 *)(v57 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v57 + 80);
  v44 = swift_allocObject();
  *(_OWORD *)(v44 + 16) = xmmword_1C1079220;
  sub_1C087C560(v30, v44 + v43);
  v60 = v44;
  sub_1C0BDA240();
  sub_1C077F040();
  v45 = sub_1C087BD94(v44, v59, *v58);
  v46 = *(_QWORD *)(v0 + 352);
  v47 = *(_QWORD *)(v0 + 312);
  v48 = *(uint64_t **)(v0 + 296);
  swift_bridgeObjectRelease();
  *v48 = v45;
  sub_1C087C028(v46);
  result = sub_1C077F040();
  v50 = *(_QWORD *)(v47 + 16);
  v51 = __OFADD__(v50, 1);
  v52 = v50 + 1;
  if (!v51)
  {
    *(_QWORD *)(*(_QWORD *)(v0 + 312) + 16) = v52;
    goto LABEL_15;
  }
  __break(1u);
  return result;
}

uint64_t sub_1C087B48C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v5 = *(_QWORD *)a1;
  v6 = *(_QWORD *)(a1 + 8);
  v7 = *(_QWORD *)(a1 + 16);
  v8 = *(_QWORD *)(a1 + 24);
  v9 = *(_QWORD *)(a1 + 32);
  v10 = *(_BYTE *)(a1 + 40);
  v11 = *(int *)(type metadata accessor for TimeBasedBehaviorSample() + 24);
  v12 = a2 + v11;
  v13 = a3 + v11;
  v14 = sub_1C106ADE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v13, v12, v14);
  *(_QWORD *)a3 = v5;
  *(_QWORD *)(a3 + 8) = v6;
  *(_QWORD *)(a3 + 16) = v7;
  *(_QWORD *)(a3 + 24) = v8;
  *(_QWORD *)(a3 + 32) = v9;
  *(_BYTE *)(a3 + 40) = v10;
  *(_BYTE *)(a3 + 41) = 1;
  return sub_1C0826EB0(v5, v6, v7, v8, v9, v10);
}

id sub_1C087B54C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  double v9;
  double v10;
  uint64_t inited;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  id result;
  _BYTE v24[48];
  _BYTE v25[48];

  v4 = sub_1C106D6CC();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  sub_1C0778564();
  v8 = v7 - v6;
  sub_1C07A518C();
  sub_1C106AD80();
  v10 = v9;
  sub_1C07ACF80(&qword_1ED755050);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C107DE20;
  *(_QWORD *)(inited + 32) = 1701869940;
  *(_QWORD *)(inited + 40) = 0xE400000000000000;
  v12 = sub_1C07DFF44(a1, (uint64_t)v25);
  sub_1C0824E00(v12, v13, v14, v15, v16, v17, v18, v19);
  v20 = sub_1C106D6C0();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v8, v4);
  v21 = (void *)objc_opt_self();
  *(_QWORD *)(inited + 48) = objc_msgSend(v21, sel_featureValueWithInt64_, v20);
  *(_QWORD *)(inited + 56) = 0x696669746E656469;
  *(_QWORD *)(inited + 64) = 0xEA00000000007265;
  sub_1C07D97D4();
  sub_1C07DFF44(a1, (uint64_t)v24);
  sub_1C0821B64();
  sub_1C07F5FD8();
  *(_QWORD *)(inited + 72) = v22;
  *(_QWORD *)(inited + 80) = 0x69746167654E7369;
  *(_QWORD *)(inited + 88) = 0xEA00000000006576;
  *(_QWORD *)(inited + 96) = sub_1C078C880();
  strcpy((char *)(inited + 104), "sequenceNumber");
  *(_BYTE *)(inited + 119) = -18;
  result = objc_msgSend(v21, sel_featureValueWithInt64_, a2);
  *(_QWORD *)(inited + 120) = result;
  *(_QWORD *)(inited + 128) = 0x6D617473656D6974;
  *(_QWORD *)(inited + 136) = 0xE900000000000070;
  if ((~*(_QWORD *)&v10 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_6;
  }
  if (v10 <= -9.22337204e18)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if (v10 < 9.22337204e18)
  {
    *(_QWORD *)(inited + 144) = sub_1C078C880();
    return (id)sub_1C106F97C();
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_1C087B7B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  _QWORD v22[3];
  uint64_t v23;
  uint64_t v24;
  _QWORD v25[6];
  __int128 v26;
  uint64_t v27;

  sub_1C106D6CC();
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v6);
  sub_1C0778544();
  sub_1C087C44C(v2 + 152, (uint64_t)&v26, &qword_1EF632968);
  if (v27)
  {
    sub_1C077DD60(&v26, (uint64_t)v22);
    v7 = v23;
    v8 = v24;
    sub_1C07A9480(v22, v23);
    sub_1C079D2DC();
    v9 = objc_msgSend((id)objc_opt_self(), sel_isInternalDevice);
    (*(void (**)(_QWORD *__return_ptr, __int128 *, id, uint64_t, uint64_t, uint64_t))(v8 + 8))(v25, &v26, v9, 1, v7, v8);
    LOBYTE(v7) = *(_BYTE *)(a1 + 41);
    sub_1C07A518C();
    v10 = sub_1C07A4468();
    sub_1C07879F4(v10);
    sub_1C07943D0();
    *(_BYTE *)(a2 + 41) = v7;
    return _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v22);
  }
  else
  {
    sub_1C0784B94((uint64_t)&v26, &qword_1EF632968);
    v12 = sub_1C079D2DC();
    sub_1C0824E00(v12, v13, v14, v15, v16, v17, v18, v19);
    sub_1C0821FFC(v3, 7040629, 0xE300000000000000, (uint64_t)v25);
    v20 = *(_BYTE *)(a1 + 41);
    sub_1C07A518C();
    v21 = sub_1C07A4468();
    sub_1C07879F4(v21);
    result = sub_1C07943D0();
    *(_BYTE *)(a2 + 41) = v20;
  }
  return result;
}

uint64_t sub_1C087B8F0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t inited;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;

  sub_1C07ACF80(&qword_1EF632960);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v6);
  sub_1C0778544();
  v7 = sub_1C07A518C();
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v8);
  sub_1C0778564();
  v11 = v10 - v9;
  sub_1C087C44C(a1, v3, &qword_1EF632960);
  if (sub_1C07B2D80(v3, 1, v7) == 1)
  {
    sub_1C0784B94(v3, &qword_1EF632960);
    v12 = MEMORY[0x1E0DEE9E8];
  }
  else
  {
    sub_1C087C414(v3, v11, (uint64_t (*)(_QWORD))type metadata accessor for TimeBasedBehaviorSample);
    sub_1C07ACF80(&qword_1ED758EA8);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1C1079220;
    v14 = *(_QWORD *)v11;
    v15 = *(_QWORD *)(v11 + 8);
    v16 = *(_QWORD *)(v11 + 16);
    v17 = *(_QWORD *)(v11 + 24);
    v18 = *(_QWORD *)(v11 + 32);
    v19 = *(_BYTE *)(v11 + 40);
    *(_QWORD *)(inited + 32) = *(_QWORD *)v11;
    *(_QWORD *)(inited + 40) = v15;
    *(_QWORD *)(inited + 48) = v16;
    *(_QWORD *)(inited + 56) = v17;
    *(_QWORD *)(inited + 64) = v18;
    *(_BYTE *)(inited + 72) = v19;
    sub_1C0826EB0(v14, v15, v16, v17, v18, v19);
    v12 = sub_1C0898DF8(inited);
    sub_1C087C028(v11);
  }
  sub_1C07A9480((_QWORD *)(v2 + 56), *(_QWORD *)(v2 + 80));
  v20 = sub_1C0877858(v12, a2);
  swift_bridgeObjectRelease();
  return v20;
}

uint64_t sub_1C087BBC4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  sub_1C087928C(a1);
  sub_1C0899154();
  v2 = v1;
  v3 = *(_QWORD *)(v1 + 16);
  v4 = MEMORY[0x1E0DEE9D8];
  if (v3)
  {
    v24 = MEMORY[0x1E0DEE9D8];
    sub_1C09D30E0();
    v4 = v24;
    result = sub_1C0F2239C(v2);
    v6 = result;
    v8 = v7;
    v10 = v9 & 1;
    while ((v6 & 0x8000000000000000) == 0 && v6 < 1 << *(_BYTE *)(v2 + 32))
    {
      if (((*(_QWORD *)(v2 + 56 + (((unint64_t)v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
        goto LABEL_13;
      if (*(_DWORD *)(v2 + 36) != (_DWORD)v8)
        goto LABEL_14;
      v11 = *(_QWORD *)(v2 + 48) + 16 * v6;
      v12 = *(_QWORD *)v11;
      v13 = *(_BYTE *)(v11 + 8);
      sub_1C084BCD4(*(_QWORD *)v11, v13);
      sub_1C0849454(v12, v13);
      v15 = v14;
      v17 = v16;
      sub_1C084BAF8(v12, v13);
      v18 = *(_QWORD *)(v24 + 16);
      if (v18 >= *(_QWORD *)(v24 + 24) >> 1)
        sub_1C09D30E0();
      *(_QWORD *)(v24 + 16) = v18 + 1;
      v19 = v24 + 16 * v18;
      *(_QWORD *)(v19 + 32) = v15;
      *(_QWORD *)(v19 + 40) = v17;
      result = sub_1C0F22500(v6, v8, v10 & 1, v2);
      v6 = result;
      v8 = v20;
      v10 = v21 & 1;
      if (!--v3)
      {
        sub_1C0834E68(result, v20, v21 & 1);
        goto LABEL_11;
      }
    }
    __break(1u);
LABEL_13:
    __break(1u);
LABEL_14:
    __break(1u);
  }
  else
  {
LABEL_11:
    sub_1C0898D28(v4);
    v23 = v22;
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    sub_1C087C260(v23);
    return v2;
  }
  return result;
}

uint64_t sub_1C087BD94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v6 = sub_1C087BBC4(a2);
  v8 = v7;
  sub_1C0779758();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  v9 = sub_1C087949C(a1, v3, v6, a3, v8);
  swift_bridgeObjectRelease();
  sub_1C0775834();
  return v9;
}

uint64_t sub_1C087BE24()
{
  uint64_t v0;

  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0(v0 + 16);
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0(v0 + 56);
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0(v0 + 104);
  sub_1C0784B94(v0 + 152, &qword_1EF632968);
  swift_bridgeObjectRelease();
  swift_release();
  return v0;
}

uint64_t sub_1C087BE70()
{
  sub_1C087BE24();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for BehaviorsFeatureProvider()
{
  return objc_opt_self();
}

uint64_t sub_1C087BEB0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1C087A4B0(a1, a2);
}

void sub_1C087BED0()
{
  sub_1C087A2E0();
}

uint64_t sub_1C087BEE4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1C087BEF4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD v8[3];
  uint64_t v9;
  uint64_t v10;

  sub_1C07A9480(v0 + 13, v0[16]);
  result = sub_1C079A85C();
  if (!v1)
  {
    sub_1C07A9480(v0 + 7, v0[10]);
    result = sub_1C079A85C();
    v3 = v0[24];
    v4 = *(_QWORD *)(v3 + 16);
    if (v4)
    {
      v5 = v3 + 32;
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      do
      {
        sub_1C07D6D1C(v5, (uint64_t)v8);
        v6 = v9;
        v7 = v10;
        sub_1C07A9480(v8, v9);
        (*(void (**)(uint64_t, uint64_t))(v7 + 16))(v6, v7);
        _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v8);
        v5 += 40;
        --v4;
      }
      while (v4);
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

uint64_t type metadata accessor for TimeBasedBehaviorSample()
{
  uint64_t result;

  result = qword_1EF632A10;
  if (!qword_1EF632A10)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1C087C028(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for TimeBasedBehaviorSample();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1C087C064(uint64_t a1, uint64_t a2, _QWORD *a3, char a4, _QWORD *a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  _BOOL8 v25;
  uint64_t v26;
  char v27;
  unint64_t v28;
  char v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  BOOL v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t result;
  uint64_t v40;
  _QWORD *v41;
  __int128 v42;
  uint64_t v43;
  __int128 v44;
  __int128 v45;

  sub_1C090A414(&v44);
  v42 = v44;
  v43 = v45;
  v40 = a1;
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  v41 = a3;
  swift_retain();
  sub_1C090A888();
  if (v10)
  {
    v12 = v9;
    v13 = v10;
    v14 = v11;
    while (1)
    {
      v15 = (_QWORD *)*a5;
      v23 = sub_1C077D774(v12, v13);
      v24 = v15[2];
      v25 = (v16 & 1) == 0;
      v26 = v24 + v25;
      if (__OFADD__(v24, v25))
        break;
      v27 = v16;
      if (v15[3] >= v26)
      {
        if ((a4 & 1) == 0)
        {
          sub_1C07ACF80(&qword_1ED758E28);
          sub_1C1070918();
        }
      }
      else
      {
        sub_1C0A4B200(v26, a4 & 1, v17, v18, v19, v20, v21, v22, v40, v41, v42, *((uint64_t *)&v42 + 1), v43, SBYTE4(v43));
        v28 = sub_1C077D774(v12, v13);
        if ((v27 & 1) != (v29 & 1))
          goto LABEL_17;
        v23 = v28;
      }
      v30 = (_QWORD *)*a5;
      if ((v27 & 1) != 0)
      {
        swift_bridgeObjectRelease();
        v31 = v30[7];

        *(_QWORD *)(v31 + 8 * v23) = v14;
      }
      else
      {
        v30[(v23 >> 6) + 8] |= 1 << v23;
        v32 = (uint64_t *)(v30[6] + 16 * v23);
        *v32 = v12;
        v32[1] = v13;
        *(_QWORD *)(v30[7] + 8 * v23) = v14;
        v33 = v30[2];
        v34 = __OFADD__(v33, 1);
        v35 = v33 + 1;
        if (v34)
          goto LABEL_16;
        v30[2] = v35;
      }
      sub_1C090A888();
      v12 = v36;
      v13 = v37;
      v14 = v38;
      a4 = 1;
      if (!v37)
        goto LABEL_14;
    }
    __break(1u);
LABEL_16:
    __break(1u);
LABEL_17:
    result = sub_1C1070D44();
    __break(1u);
  }
  else
  {
LABEL_14:
    swift_bridgeObjectRelease();
    swift_release();
    sub_1C0827370();
    return swift_release();
  }
  return result;
}

uint64_t sub_1C087C260(uint64_t result)
{
  uint64_t *v1;
  uint64_t v2;
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  unint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  int64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;

  v2 = result;
  v3 = 0;
  v4 = result + 56;
  v5 = -1 << *(_BYTE *)(result + 32);
  if (-v5 < 64)
    v6 = ~(-1 << -(char)v5);
  else
    v6 = -1;
  v7 = v6 & *(_QWORD *)(result + 56);
  v8 = (unint64_t)(63 - v5) >> 6;
  while (1)
  {
    if (v7)
    {
      v9 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      v10 = v9 | (v3 << 6);
      goto LABEL_21;
    }
    v11 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v11 >= v8)
      return sub_1C0827370();
    v12 = *(_QWORD *)(v4 + 8 * v11);
    v13 = v3 + 1;
    if (!v12)
    {
      v13 = v3 + 2;
      if (v3 + 2 >= v8)
        return sub_1C0827370();
      v12 = *(_QWORD *)(v4 + 8 * v13);
      if (!v12)
      {
        v13 = v3 + 3;
        if (v3 + 3 >= v8)
          return sub_1C0827370();
        v12 = *(_QWORD *)(v4 + 8 * v13);
        if (!v12)
          break;
      }
    }
LABEL_20:
    v7 = (v12 - 1) & v12;
    v10 = __clz(__rbit64(v12)) + (v13 << 6);
    v3 = v13;
LABEL_21:
    v15 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v10);
    v17 = *v15;
    v16 = v15[1];
    v18 = *v1;
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    sub_1C0A791CC(v17, v16, v18);
    if ((v19 & 1) != 0)
    {
      sub_1C0E60694(v17, v16);
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1C0A7D28C((uint64_t)&v20, v17, v16);
    }
    result = swift_bridgeObjectRelease();
  }
  v14 = v3 + 4;
  if (v3 + 4 >= v8)
    return sub_1C0827370();
  v12 = *(_QWORD *)(v4 + 8 * v14);
  if (v12)
  {
    v13 = v3 + 4;
    goto LABEL_20;
  }
  while (1)
  {
    v13 = v14 + 1;
    if (__OFADD__(v14, 1))
      break;
    if (v13 >= v8)
      return sub_1C0827370();
    v12 = *(_QWORD *)(v4 + 8 * v13);
    ++v14;
    if (v12)
      goto LABEL_20;
  }
LABEL_27:
  __break(1u);
  return result;
}

void sub_1C087C414(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;

  v3 = a3(0);
  sub_1C0775828(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 32));
  sub_1C0778534();
}

void sub_1C087C44C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  v3 = sub_1C07ACF80(a3);
  sub_1C0775828(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16));
  sub_1C0778534();
}

uint64_t sub_1C087C484()
{
  return swift_deallocObject();
}

uint64_t sub_1C087C494@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1C087AB58(a1, *(_QWORD *)(v2 + 16), a2);
}

uint64_t sub_1C087C4B0()
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C087C4E4(uint64_t a1, uint64_t *a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v6 = v2[2];
  v7 = v2[3];
  v8 = v2[4];
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v9;
  *v9 = v3;
  v9[1] = sub_1C0806670;
  return sub_1C087AC14(a1, a2, v6, v7, v8);
}

uint64_t sub_1C087C560(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for TimeBasedBehaviorSample();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C087C5A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1C087B48C(a1, *(_QWORD *)(v2 + 16), a2);
}

unint64_t sub_1C087C5C0(unint64_t a1, uint64_t a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v17 = *(_QWORD *)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    a1 = v17 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    v7 = *(_QWORD *)a2;
    v8 = *(_QWORD *)(a2 + 8);
    v9 = *(_QWORD *)(a2 + 16);
    v10 = *(_QWORD *)(a2 + 24);
    v11 = *(_QWORD *)(a2 + 32);
    v12 = *(_BYTE *)(a2 + 40);
    sub_1C0826EB0(*(_QWORD *)a2, v8, v9, v10, v11, v12);
    *(_QWORD *)a1 = v7;
    *(_QWORD *)(a1 + 8) = v8;
    *(_QWORD *)(a1 + 16) = v9;
    *(_QWORD *)(a1 + 24) = v10;
    *(_QWORD *)(a1 + 32) = v11;
    *(_BYTE *)(a1 + 40) = v12;
    *(_BYTE *)(a1 + 41) = *(_BYTE *)(a2 + 41);
    v13 = *(int *)(a3 + 24);
    v14 = a1 + v13;
    v15 = a2 + v13;
    v16 = sub_1C106ADE0();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v14, v15, v16);
  }
  return a1;
}

uint64_t sub_1C087C6A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  sub_1C0826F50(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_BYTE *)(a1 + 40));
  v4 = a1 + *(int *)(a2 + 24);
  v5 = sub_1C106ADE0();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

uint64_t sub_1C087C6F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v6 = *(_QWORD *)a2;
  v7 = *(_QWORD *)(a2 + 8);
  v8 = *(_QWORD *)(a2 + 16);
  v9 = *(_QWORD *)(a2 + 24);
  v10 = *(_QWORD *)(a2 + 32);
  v11 = *(_BYTE *)(a2 + 40);
  sub_1C0826EB0(*(_QWORD *)a2, v7, v8, v9, v10, v11);
  *(_QWORD *)a1 = v6;
  *(_QWORD *)(a1 + 8) = v7;
  *(_QWORD *)(a1 + 16) = v8;
  *(_QWORD *)(a1 + 24) = v9;
  *(_QWORD *)(a1 + 32) = v10;
  *(_BYTE *)(a1 + 40) = v11;
  *(_BYTE *)(a1 + 41) = *(_BYTE *)(a2 + 41);
  v12 = *(int *)(a3 + 24);
  v13 = a1 + v12;
  v14 = a2 + v12;
  v15 = sub_1C106ADE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
  return a1;
}

uint64_t sub_1C087C7B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v6 = *(_QWORD *)a2;
  v7 = *(_QWORD *)(a2 + 8);
  v8 = *(_QWORD *)(a2 + 16);
  v9 = *(_QWORD *)(a2 + 24);
  v10 = *(_QWORD *)(a2 + 32);
  v11 = *(_BYTE *)(a2 + 40);
  sub_1C0826EB0(*(_QWORD *)a2, v7, v8, v9, v10, v11);
  v12 = *(_QWORD *)a1;
  v13 = *(_QWORD *)(a1 + 8);
  v14 = *(_QWORD *)(a1 + 16);
  v15 = *(_QWORD *)(a1 + 24);
  v16 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)a1 = v6;
  *(_QWORD *)(a1 + 8) = v7;
  *(_QWORD *)(a1 + 16) = v8;
  *(_QWORD *)(a1 + 24) = v9;
  *(_QWORD *)(a1 + 32) = v10;
  v17 = *(_BYTE *)(a1 + 40);
  *(_BYTE *)(a1 + 40) = v11;
  sub_1C0826F50(v12, v13, v14, v15, v16, v17);
  *(_BYTE *)(a1 + 41) = *(_BYTE *)(a2 + 41);
  v18 = *(int *)(a3 + 24);
  v19 = a1 + v18;
  v20 = a2 + v18;
  v21 = sub_1C106ADE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 24))(v19, v20, v21);
  return a1;
}

uint64_t sub_1C087C87C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
  *(_BYTE *)(a1 + 41) = *(_BYTE *)(a2 + 41);
  v5 = *(int *)(a3 + 24);
  v6 = a1 + v5;
  v7 = a2 + v5;
  v8 = sub_1C106ADE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(v6, v7, v8);
  return a1;
}

uint64_t sub_1C087C8E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v6 = *(_QWORD *)(a2 + 32);
  v7 = *(_BYTE *)(a2 + 40);
  v8 = *(_QWORD *)a1;
  v9 = *(_QWORD *)(a1 + 8);
  v10 = *(_QWORD *)(a1 + 16);
  v11 = *(_QWORD *)(a1 + 24);
  v12 = *(_QWORD *)(a1 + 32);
  v13 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v13;
  *(_QWORD *)(a1 + 32) = v6;
  v14 = *(_BYTE *)(a1 + 40);
  *(_BYTE *)(a1 + 40) = v7;
  sub_1C0826F50(v8, v9, v10, v11, v12, v14);
  *(_BYTE *)(a1 + 41) = *(_BYTE *)(a2 + 41);
  v15 = *(int *)(a3 + 24);
  v16 = a1 + v15;
  v17 = a2 + v15;
  v18 = sub_1C106ADE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 40))(v16, v17, v18);
  return a1;
}

uint64_t sub_1C087C978()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1C087C984(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unsigned int v4;
  BOOL v5;
  int v6;
  uint64_t v10;

  if ((_DWORD)a2 == 254)
  {
    v4 = *(unsigned __int8 *)(a1 + 41);
    v5 = v4 >= 2;
    v6 = (v4 + 2147483646) & 0x7FFFFFFF;
    if (v5)
      return (v6 + 1);
    else
      return 0;
  }
  else
  {
    v10 = sub_1C106ADE0();
    return sub_1C07B2D80(a1 + *(int *)(a3 + 24), a2, v10);
  }
}

uint64_t sub_1C087C9F8()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1C087CA04(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 254)
  {
    *(_BYTE *)(result + 41) = a2 + 1;
  }
  else
  {
    v7 = sub_1C106ADE0();
    return sub_1C07B2D8C(v5 + *(int *)(a4 + 24), a2, a2, v7);
  }
  return result;
}

uint64_t sub_1C087CA6C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1C106ADE0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void sub_1C087CAE8()
{
  sub_1C07E6EDC(&qword_1EF632A50, &qword_1EF632A58, (uint64_t)&unk_1C10C2590);
}

uint64_t sub_1C087CB14()
{
  id v0;
  uint64_t result;

  v0 = objc_allocWithZone(MEMORY[0x1E0C99EA0]);
  result = (uint64_t)sub_1C087D708(0xD00000000000001CLL, 0x80000001C10E6C80);
  if (!result)
  {
    result = sub_1C1070954();
    __break(1u);
  }
  return result;
}

id sub_1C087CBB4()
{
  uint64_t v0;
  void *v1;
  id v2;
  void *v3;
  void *v4;
  id v5;

  v1 = *(void **)(v0 + 32);
  if (v1)
  {
    v2 = *(id *)(v0 + 32);
  }
  else
  {
    sub_1C07A896C();
    v3 = (void *)sub_1C087CB14();
    v4 = *(void **)(v0 + 32);
    *(_QWORD *)(v0 + 32) = v3;
    v2 = v3;

    v1 = 0;
  }
  v5 = v1;
  return v2;
}

uint64_t sub_1C087CC10()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = v0;
  if (v0[6])
  {
    v2 = v0[5];
  }
  else
  {
    sub_1C1070774();
    v4 = v0[2];
    v3 = v0[3];
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    swift_bridgeObjectRelease();
    sub_1C106FC94();
    v2 = v4;
    v1[5] = v4;
    v1[6] = v3;
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    swift_bridgeObjectRelease();
  }
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  return v2;
}

uint64_t sub_1C087CCCC()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = v0;
  if (v0[8])
  {
    v2 = v0[7];
  }
  else
  {
    sub_1C1070774();
    v4 = v0[2];
    v3 = v0[3];
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    swift_bridgeObjectRelease();
    sub_1C106FC94();
    v2 = v4;
    v1[7] = v4;
    v1[8] = v3;
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    swift_bridgeObjectRelease();
  }
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  return v2;
}

uint64_t sub_1C087CD88@<X0>(uint64_t a1@<X8>)
{
  id v2;
  void *v3;
  double v4;
  double v5;
  uint64_t v6;
  uint64_t v7;

  v2 = sub_1C087CBB4();
  sub_1C087CC10();
  v3 = (void *)sub_1C077E6EC();
  sub_1C077960C();
  objc_msgSend(v2, sel_doubleForKey_, v3);
  v5 = v4;

  if (v5 <= 0.0)
  {
    v6 = 1;
  }
  else
  {
    sub_1C106AD74();
    v6 = 0;
  }
  v7 = sub_1C077AE98();
  return sub_1C07B2D8C(a1, v6, 1, v7);
}

uint64_t sub_1C087CE20(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  void *v12;
  id v14;
  double v15;
  double v16;
  void *v17;

  v2 = sub_1C07ACF80((uint64_t *)&unk_1ED762690);
  MEMORY[0x1E0C80A78](v2);
  sub_1C0778564();
  v5 = v4 - v3;
  v6 = sub_1C077AE98();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  sub_1C0778564();
  v10 = v9 - v8;
  sub_1C077CD6C(a1, v5);
  if (sub_1C07B2D80(v5, 1, v6) == 1)
  {
    sub_1C077CDB4(v5);
    v11 = sub_1C087CBB4();
    sub_1C087CC10();
    v12 = (void *)sub_1C077E6EC();
    sub_1C077960C();
    objc_msgSend(v11, sel_removeObjectForKey_, v12);

    return sub_1C077CDB4(a1);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32))(v10, v5, v6);
    v14 = sub_1C087CBB4();
    sub_1C106AD80();
    v16 = v15;
    sub_1C087CC10();
    v17 = (void *)sub_1C077E6EC();
    sub_1C077960C();
    objc_msgSend(v14, sel_setDouble_forKey_, v17, v16);

    sub_1C077CDB4(a1);
    return (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 8))(v10, v6);
  }
}

id sub_1C087CFA8()
{
  id v0;
  void *v1;
  id v2;

  v0 = sub_1C087CBB4();
  sub_1C087CCCC();
  v1 = (void *)sub_1C077E6EC();
  sub_1C077960C();
  v2 = objc_msgSend(v0, sel_integerForKey_, v1);

  return v2;
}

void sub_1C087D004(uint64_t a1)
{
  id v2;
  id v3;

  v2 = sub_1C087CBB4();
  sub_1C087CCCC();
  v3 = (id)sub_1C077E6EC();
  sub_1C077960C();
  objc_msgSend(v2, sel_setInteger_forKey_, a1, v3);

}

void sub_1C087D068()
{
  id v0;
  void *v1;
  id v2;
  void *v3;

  v0 = sub_1C087CBB4();
  sub_1C087CCCC();
  v1 = (void *)sub_1C106FAF0();
  swift_bridgeObjectRelease();
  objc_msgSend(v0, sel_removeObjectForKey_, v1);

  v2 = sub_1C087CBB4();
  sub_1C087CC10();
  v3 = (void *)sub_1C106FAF0();
  swift_bridgeObjectRelease();
  objc_msgSend(v2, sel_removeObjectForKey_, v3);

}

uint64_t sub_1C087D10C()
{
  uint64_t v0;

  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1C087D140()
{
  sub_1C087D10C();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for UserDefaultsWindowLimiterState()
{
  return objc_opt_self();
}

uint64_t sub_1C087D180(uint64_t a1)
{
  return sub_1C087CE20(a1);
}

void sub_1C087D1A0(uint64_t a1)
{
  sub_1C087D004(a1);
}

uint64_t sub_1C087D1C0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  double v35;
  double v36;
  void (*v37)(char *, uint64_t);
  id v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48[48];

  v2 = v1;
  v4 = sub_1C07ACF80((uint64_t *)&unk_1ED762690);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v45 = (uint64_t)&v42 - v8;
  v9 = sub_1C077AE98();
  v44 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v43 = (char *)&v42 - v13;
  v14 = sub_1C106D6CC();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  sub_1C0778564();
  v18 = v17 - v16;
  v42 = a1;
  v19 = sub_1C07DFF44(a1 + 16, (uint64_t)v48);
  sub_1C0824E00(v19, v20, v21, v22, v23, v24, v25, v26);
  v27 = v2;
  sub_1C087D768();
  sub_1C07961A4();
  sub_1C07961A4();
  v28 = v46;
  v29 = v47;
  (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v18, v14);
  if (v28 != v29)
    return 0;
  v30 = v43;
  v31 = v44;
  (*(void (**)(char *, uint64_t, uint64_t))(v44 + 16))(v43, *(_QWORD *)(v42 + 64) + OBJC_IVAR____TtC24IntelligencePlatformCore15BehaviorContext_date, v9);
  v32 = v27;
  v33 = (_QWORD *)(v27 + OBJC_IVAR____TtC24IntelligencePlatformCore21BehaviorWindowLimiter_state);
  sub_1C077F040();
  sub_1C07A9480(v33, v33[3]);
  v34 = v45;
  sub_1C087CD88(v45);
  sub_1C07A3698();
  if (sub_1C07B2D80(v34, 1, v9) == 1)
  {
    sub_1C106AC9C();
    sub_1C077CDB4(v34);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v31 + 32))(v11, v34, v9);
  }
  sub_1C106ACD8();
  v36 = v35;
  v37 = *(void (**)(char *, uint64_t))(v31 + 8);
  v37(v11, v9);
  v37(v30, v9);
  if (v36 >= *(double *)(v32 + OBJC_IVAR____TtC24IntelligencePlatformCore21BehaviorWindowLimiter_interval))
  {
    sub_1C077F040();
    sub_1C07997B0();
    (*(void (**)(uint64_t, void (*)(char *, uint64_t), uint64_t))(v32 + 40))(1, v37, v32);
    sub_1C07A3698();
    sub_1C106ADD4();
    sub_1C07B2D8C((uint64_t)v6, 0, 1, v9);
    sub_1C077F040();
    sub_1C07997B0();
    (*(void (**)(char *, void (*)(char *, uint64_t), uint64_t))(v32 + 16))(v6, v37, v32);
    goto LABEL_9;
  }
  sub_1C077F040();
  sub_1C07A9480(v33, v33[3]);
  v38 = sub_1C087CFA8();
  sub_1C07A3698();
  if ((uint64_t)v38 < *(_QWORD *)(v32
                                + OBJC_IVAR____TtC24IntelligencePlatformCore21BehaviorWindowLimiter_maximumBehaviorsPerInterval))
  {
    sub_1C077F040();
    v39 = v33[3];
    v40 = v33[4];
    sub_1C079D180((uint64_t)v33, v39);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v40 + 40))((uint64_t)v38 + 1, v39, v40);
LABEL_9:
    sub_1C07A3698();
    return 0;
  }
  return 1;
}

void sub_1C087D544()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)(v0 + OBJC_IVAR____TtC24IntelligencePlatformCore21BehaviorWindowLimiter_state);
  swift_beginAccess();
  sub_1C07A9480(v1, v1[3]);
  sub_1C087D068();
}

uint64_t sub_1C087D5A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC24IntelligencePlatformCore21BehaviorWindowLimiter_type;
  v2 = sub_1C106D6CC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0(v0 + OBJC_IVAR____TtC24IntelligencePlatformCore21BehaviorWindowLimiter_state);
  return swift_deallocClassInstance();
}

uint64_t sub_1C087D600()
{
  return type metadata accessor for BehaviorWindowLimiter();
}

uint64_t type metadata accessor for BehaviorWindowLimiter()
{
  uint64_t result;

  result = qword_1EF632B60;
  if (!qword_1EF632B60)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1C087D640()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1C106D6CC();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_1C087D6C4(uint64_t a1)
{
  return sub_1C087D1C0(a1) & 1;
}

void sub_1C087D6E8()
{
  sub_1C087D544();
}

id sub_1C087D708(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  id v4;

  if (a2)
  {
    v3 = (void *)sub_1C106FAF0();
    swift_bridgeObjectRelease();
  }
  else
  {
    v3 = 0;
  }
  v4 = objc_msgSend(v2, sel_initWithSuiteName_, v3);

  return v4;
}

unint64_t sub_1C087D768()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED744A60;
  if (!qword_1ED744A60)
  {
    v1 = sub_1C106D6CC();
    result = MEMORY[0x1C3BA8174](MEMORY[0x1E0D3C158], v1);
    atomic_store(result, (unint64_t *)&qword_1ED744A60);
  }
  return result;
}

uint64_t IntelligencePlatformBenchmark.__allocating_init(config:)(uint64_t a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  IntelligencePlatformBenchmark.init(config:)(a1);
  return v2;
}

void IntelligencePlatformBenchmark.init(config:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v4 = v1;
  sub_1C106D78C();
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v6);
  sub_1C0778564();
  v9 = v8 - v7;
  type metadata accessor for Configuration();
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v10);
  sub_1C077AFC8();
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v18 - v12;
  v14 = v4 + OBJC_IVAR____TtC24IntelligencePlatformCore29IntelligencePlatformBenchmark_config;
  sub_1C078E3E0(a1, v4 + OBJC_IVAR____TtC24IntelligencePlatformCore29IntelligencePlatformBenchmark_config);
  sub_1C078E3E0(a1, (uint64_t)v13);
  type metadata accessor for GraphStore();
  swift_allocObject();
  v15 = GraphStore.init(config:)((uint64_t)v13);
  if (v2)
  {
    sub_1C078D09C(a1);
    sub_1C078D09C(v14);
    swift_deallocPartialClassInstance();
  }
  else
  {
    *(_QWORD *)(v4 + OBJC_IVAR____TtC24IntelligencePlatformCore29IntelligencePlatformBenchmark_graphStore) = v15;
    sub_1C106D804();
    sub_1C106D780();
    sub_1C078E3E0(a1, v3);
    KnosisServer.init(config:platformConfig:)(v9, v3);
    v17 = v16;
    sub_1C078D09C(a1);
    *(_QWORD *)(v4 + OBJC_IVAR____TtC24IntelligencePlatformCore29IntelligencePlatformBenchmark_knosisServer) = v17;
  }
  sub_1C07757D0();
}

uint64_t sub_1C087D984(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  type metadata accessor for Configuration();
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v2);
  sub_1C0778564();
  v5 = v4 - v3;
  sub_1C078E3E0(a1, v4 - v3);
  v6 = swift_allocObject();
  IntelligencePlatformBenchmark.init(config:)(v5);
  return v6;
}

void sub_1C087DA14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t isUniquelyReferenced_nonNull_native;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  BOOL v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  BOOL v37;
  BOOL v38;
  uint64_t v39;
  uint64_t v40;
  int64_t v41;
  int64_t v42;
  char *v43;
  void (*v44)(char *, uint64_t);
  char v45;
  char *v46;
  void (*v47)(uint64_t, uint64_t);
  uint64_t v48;
  _QWORD *v49;
  _QWORD *v50;
  _BYTE *v51;
  char v52;
  char v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  uint64_t v60;
  unint64_t v61;
  uint64_t v62;
  void (*v63)(void);
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  char v71;
  void (*v72)(char *, uint64_t);
  unint64_t v73;
  unint64_t v74;
  uint64_t v75;
  unint64_t v76;
  char v77;
  unint64_t v78;
  char v79;
  char v80;
  unint64_t v81;
  char v82;
  _QWORD *v83;
  uint64_t v84;
  uint64_t v85;
  BOOL v86;
  uint64_t v87;
  int64_t v88;
  uint64_t v89;
  uint64_t v90;
  unint64_t v91;
  uint64_t v92;
  unint64_t v93;
  _QWORD *v94;
  uint64_t v95;
  uint64_t v96;
  char v97;
  int64_t v98;
  unint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  unint64_t v107;
  uint64_t v108;
  unint64_t v109;
  unint64_t v110;
  uint64_t v111;
  unint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  unint64_t v118;
  unint64_t v119;
  char *v120;
  char *v121;
  char *v122;
  BOOL v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  char *v128;
  uint64_t v129;
  unint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  void (*v134)(uint64_t, uint64_t);
  uint64_t v135;
  char v136;
  uint64_t v137;
  uint64_t v138;
  unint64_t v139;
  unint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  BOOL v144;
  uint64_t v145;
  unint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  _BOOL4 v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  unint64_t v160;
  uint64_t v161;
  char v162;
  char *v163;
  uint64_t v164;
  char v165;
  char *v166;
  uint64_t v167;
  void (*v168)(char *, uint64_t);
  char v170;
  void (*v171)(char *, uint64_t);
  char *v172;
  uint64_t v173;
  unint64_t v174;
  unint64_t v175;
  uint64_t v176;
  _QWORD *v177;
  char *v178;
  uint64_t v179;
  unint64_t v180;
  unint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  _BYTE *v187;
  uint64_t v188;
  __int128 v189;
  uint64_t v190;
  unint64_t v191;
  int64_t v192;
  char *v193;
  int64_t v194;
  _QWORD *v195;
  unint64_t v196;
  int64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  char *v201;
  unint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  unint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  unint64_t v217;
  unint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  unint64_t v222;
  uint64_t v223;
  uint64_t v224;
  unint64_t v225;
  uint64_t v226;
  uint64_t v227;

  v206 = a5;
  sub_1C07ACF80(&qword_1EF632CC0);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v10);
  sub_1C077AFC8();
  MEMORY[0x1E0C80A78](v11);
  v196 = (unint64_t)&v185 - v12;
  v13 = sub_1C106E41C();
  v227 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  sub_1C077AED0();
  sub_1C077AF60();
  MEMORY[0x1E0C80A78](v14);
  sub_1C0779728();
  sub_1C077AF60();
  MEMORY[0x1E0C80A78](v15);
  sub_1C0779728();
  sub_1C077AF60();
  MEMORY[0x1E0C80A78](v16);
  sub_1C0779728();
  sub_1C077AF60();
  MEMORY[0x1E0C80A78](v17);
  sub_1C0779728();
  sub_1C077AF60();
  MEMORY[0x1E0C80A78](v18);
  v201 = (char *)&v185 - v19;
  sub_1C07ACF80(&qword_1EF632CC8);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v20);
  sub_1C0778564();
  v187 = (_BYTE *)(v22 - v21);
  v207 = sub_1C106E590();
  isUniquelyReferenced_nonNull_native = *(_QWORD *)(v207 - 8);
  MEMORY[0x1E0C80A78](v207);
  sub_1C077AED0();
  sub_1C077AF60();
  MEMORY[0x1E0C80A78](v24);
  sub_1C0779728();
  sub_1C077AF60();
  MEMORY[0x1E0C80A78](v25);
  sub_1C0779728();
  sub_1C077AF60();
  MEMORY[0x1E0C80A78](v26);
  sub_1C0779728();
  sub_1C077AF60();
  MEMORY[0x1E0C80A78](v27);
  v193 = (char *)&v185 - v28;
  v29 = (unint64_t)"formBenchmark";
  v30 = a1;
  v31 = a1 == 0xD000000000000010 && a2 == 0x80000001C10E6D90;
  v32 = v31;
  LODWORD(v194) = v32;
  v33 = (uint64_t)&unk_1EF6D0000;
  v204 = a2;
  v203 = v30;
  if (v31 || (sub_1C07785B0() & 1) != 0)
  {
    sub_1C07B7144();
    GraphStore.loadGraphTriples()();
    sub_1C0A56404();
LABEL_16:
    v186 = v34;
    sub_1C077960C();
    goto LABEL_17;
  }
  sub_1C0797058();
  v37 = v30 == v36 && a2 == v35;
  if (v37 || (sub_1C07997C0() & 1) != 0)
  {
    sub_1C07B7144();
    GraphStore.loadEventTriples()();
    sub_1C0A564C4();
    goto LABEL_16;
  }
LABEL_128:
  v186 = MEMORY[0x1E0DEE9D8];
LABEL_17:
  v38 = a3 == 7628135 && a4 == 0xE300000000000000;
  v210 = v13;
  v199 = isUniquelyReferenced_nonNull_native;
  if (!v38 && (sub_1C07785B0() & 1) == 0)
  {
    v123 = a3 == 7370352 && a4 == 0xE300000000000000;
    if (v123 || (sub_1C07785B0() & 1) != 0)
    {
      v124 = sub_1C079F340();
      v125 = *(_QWORD *)(v124 + 16);
      if (!v125)
        goto LABEL_104;
      v126 = v124 + 32;
      v127 = MEMORY[0x1E0DEE9D8];
      v209 = 0x547865646E692C27;
      v128 = v201;
      while (1)
      {
        sub_1C07D6D1C(v126, (uint64_t)&v224);
        sub_1C078C1D8();
        if (v31)
        {
          sub_1C078F230();
          sub_1C0784E74();
          goto LABEL_105;
        }
        v129 = sub_1C07A447C();
        swift_bridgeObjectRelease();
        sub_1C07AA6AC();
        if (!v129)
          break;
        sub_1C07A9480(&v221, v223);
        sub_1C07BCDD4();
        v130 = (unint64_t)v128;
        sub_1C106E1E8();
        v131 = sub_1C07957F0();
        v133 = v132;
        v134 = *(void (**)(uint64_t, uint64_t))(v227 + 8);
        v134(v131, v210);
        v218 = v130;
        v219 = v133;
        v213 = 39;
        sub_1C077AFE4();
        LOBYTE(v130) = sub_1C078C88C();
        sub_1C07785A0();
        sub_1C07ADB74();
        if ((v130 & 1) != 0)
          goto LABEL_123;
        sub_1C07A9480(&v218, v220);
        sub_1C07957F0();
        v213 = sub_1C106EA88();
        v214 = v135;
        v216 = 39;
        v217 = 0xE100000000000000;
        v136 = sub_1C078C88C();
        sub_1C07785A0();
        sub_1C07863F4();
        if ((v136 & 1) == 0)
        {
          v221 = 0;
          v222 = 0xE000000000000000;
          sub_1C1070774();
          swift_bridgeObjectRelease();
          v221 = 678458992;
          v222 = 0xE400000000000000;
          sub_1C07A9480(&v224, v226);
          sub_1C07AAD24();
          v128 = *(char **)(v137 - 256);
          sub_1C07BCDD4();
          sub_1C07803B8(&qword_1EF632CD0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3CC50], MEMORY[0x1E0D3CC90]);
          sub_1C07A9D80();
          sub_1C07A2FFC();
          swift_bridgeObjectRelease();
          v134((uint64_t)v128, 39);
          sub_1C106FC94();
          sub_1C07A447C();
          sub_1C07A2FFC();
          swift_bridgeObjectRelease();
          sub_1C0792D88();
          sub_1C07A7D70();
          sub_1C0787A0C();
          v138 = v221;
          v139 = v222;
          if ((sub_1C0778698() & 1) == 0)
          {
            sub_1C07937D0();
            v127 = v142;
          }
          v140 = *(_QWORD *)(v127 + 16);
          if (v140 >= *(_QWORD *)(v127 + 24) >> 1)
          {
            sub_1C07937D0();
            v127 = v143;
          }
          *(_QWORD *)(v127 + 16) = v140 + 1;
          v141 = v127 + 16 * v140;
          *(_QWORD *)(v141 + 32) = v138;
          *(_QWORD *)(v141 + 40) = v139;
          goto LABEL_125;
        }
LABEL_124:
        v128 = v201;
LABEL_125:
        sub_1C0784E74();
        v126 += 40;
        if (!--v125)
        {
          sub_1C079F340();
          goto LABEL_104;
        }
      }
      sub_1C07ADB74();
LABEL_123:
      sub_1C07863F4();
      goto LABEL_124;
    }
    v144 = a3 == 1651339107 && a4 == 0xE400000000000000;
    v145 = v203;
    if (!v144 && (sub_1C07785B0() & 1) == 0)
    {
LABEL_181:
      sub_1C079F340();
      goto LABEL_104;
    }
    if (!*(_QWORD *)(sub_1C079F340() + 16))
    {
LABEL_104:
      swift_bridgeObjectRelease();
LABEL_105:
      sub_1C07757D0();
      return;
    }
    v146 = 0;
    sub_1C0797058();
    v192 = *(_QWORD *)(v33 + 3296);
    v205 = v147 + 32;
    v152 = v145 == v150 && v204 == v148;
    LODWORD(v190) = v152;
    v191 = v29 | 0x8000000000000000;
    v153 = MEMORY[0x1E0DEE9D8];
    v208 = v149;
LABEL_142:
    if (v146 >= *(_QWORD *)(v147 + 16))
      goto LABEL_186;
    sub_1C07D6D1C(v205 + 40 * v146, (uint64_t)&v224);
    sub_1C0798690();
    v154 = sub_1C0784E7C();
    swift_bridgeObjectRelease();
    sub_1C07AA6AC();
    if (v154)
    {
      sub_1C07A9480(&v221, v223);
      sub_1C07AAD24();
      v156 = *(_QWORD *)(v155 - 256);
      sub_1C078F224();
      v157 = sub_1C106E1E8();
      v159 = v158;
      v209 = *(_QWORD *)(v227 + 8);
      ((void (*)(uint64_t, uint64_t))v209)(v156, v13);
      v218 = v157;
      v219 = v159;
      v213 = 39;
      v160 = sub_1C077AFE4();
      LOBYTE(v157) = sub_1C077F0D4();
      sub_1C0778580();
      sub_1C07ADB74();
      if ((v157 & 1) == 0)
      {
        sub_1C07A9480(&v218, v220);
        v213 = sub_1C0784E7C();
        v214 = v161;
        v216 = 39;
        v217 = 0xE100000000000000;
        v200 = v160;
        v162 = sub_1C1070624();
        sub_1C0778580();
        sub_1C07863F4();
        if ((v162 & 1) == 0)
        {
          if ((v194 & 1) != 0 || (sub_1C07785B0() & 1) != 0)
          {
            sub_1C07A6884();
            GraphStore.loadGraphTriples(subject:)();
            sub_1C078ABDC();
            sub_1C0A56404();
          }
          else
          {
            v164 = v208;
            if ((v190 & 1) == 0)
            {
              v165 = sub_1C07997C0();
              v166 = (char *)MEMORY[0x1E0DEE9D8];
              if ((v165 & 1) == 0)
                goto LABEL_158;
            }
            sub_1C07A6884();
            sub_1C0AAE34C(v160);
            sub_1C078ABDC();
            sub_1C0A564C4();
          }
          v166 = v163;
          sub_1C077960C();
          v164 = v208;
          v146 = v13;
LABEL_158:
          v13 = *((_QWORD *)v166 + 2);
          if (!v13)
          {
            sub_1C0778580();
            sub_1C0791AAC();
            goto LABEL_152;
          }
          v196 = v146;
          v193 = v166;
          v167 = (uint64_t)(v166 + 32);
          while (1)
          {
            sub_1C07D6D1C(v167, (uint64_t)&v213);
            sub_1C0798690();
            sub_1C078F224();
            sub_1C07B1604();
            sub_1C078F224();
            sub_1C07803B8(&qword_1ED75E7E0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3CC50], MEMORY[0x1E0D3CC80]);
            sub_1C079DB4C();
            sub_1C079DB4C();
            v168 = (void (*)(char *, uint64_t))v217;
            if (v216 == v211 && v217 == v212)
            {
              swift_bridgeObjectRelease_n();
              sub_1C079D2E8();
              sub_1C07AD084();
            }
            else
            {
              v170 = sub_1C07785B0();
              sub_1C077960C();
              sub_1C0778580();
              sub_1C079D2E8();
              sub_1C07AD084();
              if ((v170 & 1) != 0)
                goto LABEL_165;
              sub_1C078C1D8();
              if (v31)
              {
                sub_1C078F230();
                _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)&v213);
                sub_1C0791AAC();
                sub_1C07943DC();
LABEL_178:
                v164 = v208;
                v146 = v196;
LABEL_152:
                ++v146;
                sub_1C0784E74();
                v147 = v186;
                if (v146 == v164)
                  goto LABEL_104;
                goto LABEL_142;
              }
              v171 = v168;
              sub_1C07B1604();
              v172 = v201;
              sub_1C078F224();
              v173 = sub_1C106E1E8();
              v175 = v174;
              v176 = v210;
              v171(v172, v210);
              v216 = v173;
              v217 = v175;
              v211 = 39;
              v212 = 0xE100000000000000;
              LOBYTE(v173) = sub_1C077F0D4();
              sub_1C0778580();
              if ((v173 & 1) != 0)
              {
LABEL_165:
                sub_1C07943DC();
              }
              else
              {
                v216 = 0;
                v217 = 0xE000000000000000;
                sub_1C1070774();
                swift_bridgeObjectRelease();
                v216 = 678458992;
                v217 = 0xE400000000000000;
                sub_1C0798690();
                sub_1C078F224();
                sub_1C07803B8(&qword_1EF632CD0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3CC50], MEMORY[0x1E0D3CC90]);
                sub_1C0789DE8();
                sub_1C07A8554();
                sub_1C07785A0();
                v171(v201, v176);
                sub_1C106FC94();
                sub_1C0790714();
                v177 = v195;
                sub_1C07957F0();
                sub_1C106EA94();
                sub_1C07803B8((unint64_t *)&qword_1ED7625A0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3CE28], MEMORY[0x1E0D3CE60]);
                sub_1C07A9D80();
                sub_1C07A8554();
                sub_1C07785A0();
                (*(void (**)(_QWORD *, char *))(v199 + 8))(v177, v172);
                sub_1C106FC94();
                sub_1C106FC94();
                sub_1C106FC94();
                sub_1C07A9480(&v213, v215);
                sub_1C07AAD24();
                sub_1C07957F0();
                v178 = v201;
                sub_1C106EAA0();
                sub_1C0789DE8();
                sub_1C07A8554();
                sub_1C0778580();
                ((void (*)(char *, uint64_t))v209)(v178, v176);
                sub_1C0792D88();
                sub_1C106FC94();
                sub_1C0787A0C();
                v179 = v216;
                v180 = v217;
                if ((sub_1C0778698() & 1) == 0)
                {
                  sub_1C07937D0();
                  v153 = v183;
                }
                v181 = *(_QWORD *)(v153 + 16);
                if (v181 >= *(_QWORD *)(v153 + 24) >> 1)
                {
                  sub_1C07937D0();
                  v153 = v184;
                }
                *(_QWORD *)(v153 + 16) = v181 + 1;
                v182 = v153 + 16 * v181;
                *(_QWORD *)(v182 + 32) = v179;
                *(_QWORD *)(v182 + 40) = v180;
              }
            }
            _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)&v213);
            v167 += 40;
            if (!--v13)
            {
              sub_1C078F230();
              sub_1C0791AAC();
              goto LABEL_178;
            }
          }
        }
LABEL_151:
        v164 = v208;
        goto LABEL_152;
      }
    }
    else
    {
      sub_1C07ADB74();
    }
    sub_1C07863F4();
    goto LABEL_151;
  }
  sub_1C07ACF80(&qword_1ED75D8E8);
  sub_1C07803B8((unint64_t *)&qword_1ED7618F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3CE28], MEMORY[0x1E0D3CE40]);
  a3 = v207;
  v39 = sub_1C106F97C();
  v218 = v39;
  v40 = sub_1C079F340();
  v41 = *(_QWORD *)(v40 + 16);
  v198 = v5;
  v192 = v41;
  if (!v41)
  {
    swift_bridgeObjectRelease();
    goto LABEL_49;
  }
  v42 = 0;
  v191 = v40 + 32;
  v189 = xmmword_1C1079220;
  v43 = v193;
  do
  {
    v197 = v42;
    sub_1C07D6D1C(v191 + 40 * v42, (uint64_t)&v224);
    sub_1C079E2E8();
    sub_1C079CBF8();
    if (*(_QWORD *)(v218 + 16))
    {
      sub_1C07DCD84();
      v44 = *(void (**)(char *, uint64_t))(isUniquelyReferenced_nonNull_native + 8);
      if ((v45 & 1) != 0)
      {
        v46 = v43;
        v47 = *(void (**)(uint64_t, uint64_t))(isUniquelyReferenced_nonNull_native + 8);
        v44(v46, a3);
        sub_1C079E2E8();
        v48 = v188;
        sub_1C106EA94();
        sub_1C0D569A0();
        if (*v50)
        {
          v195 = v49;
          v202 = sub_1C07ACF80(qword_1EF632CE8);
          v51 = v187;
          sub_1C0790714();
          sub_1C07957F0();
          isUniquelyReferenced_nonNull_native = v199;
          sub_1C106EAA0();
          v5 = v198;
          sub_1C0A7E0C4();
          v53 = v52;
          ((void (*)(uint64_t *, _QWORD))v195)(&v221, 0);
          v47(v188, a3);
          *v51 = v53 & 1;
          v54 = (uint64_t)v51;
          v55 = 0;
          v56 = v202;
        }
        else
        {
          ((void (*)(uint64_t *, _QWORD))v49)(&v221, 0);
          v47(v48, a3);
          v56 = sub_1C07ACF80(qword_1EF632CE8);
          v51 = v187;
          v54 = (uint64_t)v187;
          v55 = 1;
        }
        sub_1C07B2D8C(v54, v55, 1, v56);
        v88 = v197;
        sub_1C087F790((uint64_t)v51);
        v43 = v193;
        goto LABEL_46;
      }
    }
    else
    {
      v44 = *(void (**)(char *, uint64_t))(isUniquelyReferenced_nonNull_native + 8);
    }
    v194 = (int64_t)v44;
    v44(v43, a3);
    sub_1C079E2E8();
    sub_1C079CBF8();
    sub_1C07ACF80(&qword_1ED75E838);
    v57 = v227;
    v58 = *(_QWORD *)(v227 + 72);
    v59 = (*(unsigned __int8 *)(v227 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v227 + 80);
    v60 = swift_allocObject();
    *(_OWORD *)(v60 + 16) = v189;
    v195 = (_QWORD *)v60;
    v61 = v60 + v59;
    sub_1C0798690();
    sub_1C078F224();
    sub_1C07803B8(&qword_1ED75EA28, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3CC50], MEMORY[0x1E0D3CC68]);
    v62 = sub_1C1070234();
    v63 = *(void (**)(void))(v57 + 16);
    v64 = v200;
    ((void (*)(uint64_t, unint64_t, uint64_t))v63)(v200, v61, v13);
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    v65 = sub_1C106FA00();
    v66 = -1 << *(_BYTE *)(v62 + 32);
    v67 = v65 & ~v66;
    v202 = v62;
    v68 = v62 + 56;
    if (((*(_QWORD *)(v62 + 56 + ((v67 >> 3) & 0xFFFFFFFFFFFFF8)) >> v67) & 1) != 0)
    {
      v13 = ~v66;
      while (1)
      {
        v69 = v201;
        v70 = v210;
        ((void (*)(char *, unint64_t, uint64_t))v63)(v201, *(_QWORD *)(v202 + 48) + v67 * v58, v210);
        sub_1C07803B8((unint64_t *)&qword_1ED75EA30, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3CC50], MEMORY[0x1E0D3CC78]);
        v71 = sub_1C106FAA8();
        v72 = *(void (**)(char *, uint64_t))(v227 + 8);
        v72(v69, v70);
        if ((v71 & 1) != 0)
          break;
        v67 = (v67 + 1) & v13;
        v64 = v200;
        if (((*(_QWORD *)(v68 + ((v67 >> 3) & 0xFFFFFFFFFFFFF8)) >> v67) & 1) == 0)
          goto LABEL_33;
      }
      sub_1C078F230();
      sub_1C0791AAC();
      v72((char *)v200, v13);
    }
    else
    {
LABEL_33:
      v73 = v202;
      sub_1C077960C();
      swift_isUniquelyReferenced_nonNull_native();
      sub_1C0791AAC();
      v63();
      v221 = v73;
      sub_1C0A85364();
      v202 = v221;
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v227 + 8))(v64, v13);
    }
    sub_1C07863FC();
    sub_1C0BE8DB8();
    v74 = v218;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v221 = v74;
    v218 = 0x8000000000000000;
    v75 = v190;
    sub_1C07DCD84();
    v43 = v193;
    if (__OFADD__(*(_QWORD *)(v74 + 16), (v77 & 1) == 0))
    {
      __break(1u);
LABEL_184:
      __break(1u);
LABEL_185:
      __break(1u);
LABEL_186:
      __break(1u);
      goto LABEL_187;
    }
    v78 = v76;
    v79 = v77;
    sub_1C07ACF80(&qword_1EF632CD8);
    sub_1C107090C();
    sub_1C07943DC();
    if ((v80 & 1) != 0)
    {
      sub_1C07DCD84();
      if ((v79 & 1) != (v82 & 1))
        goto LABEL_188;
      v78 = v81;
    }
    v83 = (_QWORD *)v221;
    if ((v79 & 1) != 0)
    {
      v84 = *(_QWORD *)(v221 + 56);
      swift_bridgeObjectRelease();
      *(_QWORD *)(v84 + 8 * v78) = v202;
    }
    else
    {
      *(_QWORD *)(v221 + 8 * (v78 >> 6) + 64) |= 1 << v78;
      (*(void (**)(unint64_t, uint64_t, uint64_t))(isUniquelyReferenced_nonNull_native + 16))(v83[6] + *(_QWORD *)(isUniquelyReferenced_nonNull_native + 72) * v78, v75, v207);
      *(_QWORD *)(v83[7] + 8 * v78) = v202;
      v85 = v83[2];
      v86 = __OFADD__(v85, 1);
      v87 = v85 + 1;
      if (v86)
        goto LABEL_185;
      v83[2] = v87;
    }
    v218 = (unint64_t)v83;
    swift_bridgeObjectRelease();
    a3 = v207;
    ((void (*)(uint64_t, uint64_t))v194)(v75, v207);
    v5 = v198;
    v88 = v197;
LABEL_46:
    v42 = v88 + 1;
    sub_1C0784E74();
  }
  while (v42 != v192);
  sub_1C078F230();
  v39 = v218;
LABEL_49:
  v193 = (char *)(v39 + 64);
  sub_1C0789DCC();
  v91 = v90 & v89;
  v194 = (unint64_t)(v92 + 63) >> 6;
  v192 = v194 - 1;
  v195 = (_QWORD *)v39;
  sub_1C07767B4();
  v197 = 0;
  v29 = MEMORY[0x1E0DEE9D8];
  if (!v91)
    goto LABEL_52;
  while (2)
  {
    v200 = (v91 - 1) & v91;
    v93 = __clz(__rbit64(v91)) | (v197 << 6);
LABEL_51:
    v94 = v195;
    (*(void (**)(uint64_t, unint64_t, uint64_t))(isUniquelyReferenced_nonNull_native + 16))(v5, v195[6] + *(_QWORD *)(isUniquelyReferenced_nonNull_native + 72) * v93, a3);
    v95 = v94[7];
    v96 = sub_1C077C1C0();
    *(_QWORD *)(v5 + *(int *)(v96 + 48)) = *(_QWORD *)(v95 + 8 * v93);
    sub_1C07B2D8C(v5, 0, 1, v96);
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
LABEL_71:
    v103 = v196;
    sub_1C087F748(v5, v196);
    v104 = sub_1C077C1C0();
    if (sub_1C07B2D80(v103, 1, v104) == 1)
    {
      swift_release();
      goto LABEL_104;
    }
    v5 = *(_QWORD *)(v103 + *(int *)(v104 + 48));
    (*(void (**)(uint64_t, uint64_t, uint64_t))(isUniquelyReferenced_nonNull_native + 32))(v209, v103, a3);
    v33 = 0;
    v201 = (char *)(v5 + 56);
    sub_1C0789DCC();
    v107 = v106 & v105;
    v202 = (unint64_t)(v108 + 63) >> 6;
    a4 = v208;
    if ((v106 & v105) != 0)
    {
LABEL_73:
      v109 = __clz(__rbit64(v107));
      v107 &= v107 - 1;
      v110 = v109 | (v33 << 6);
      goto LABEL_93;
    }
    while (1)
    {
      if (__OFADD__(v33, 1))
      {
        __break(1u);
        goto LABEL_128;
      }
      sub_1C078C1D8();
      if (v97 == v86)
        goto LABEL_101;
      sub_1C07AC70C();
      v33 = v111;
      if (!v112)
      {
        v33 = v111 + 1;
        sub_1C079C394();
        if (v97 == v86)
          goto LABEL_101;
        sub_1C07A1BB4();
        if (!v112)
        {
          v33 = v113 + 2;
          sub_1C079C394();
          if (v97 == v86)
            goto LABEL_101;
          sub_1C07A1BB4();
          if (!v112)
          {
            sub_1C078C1D8();
            if (v97 == v86)
              goto LABEL_101;
            sub_1C07AC70C();
            if (!v112)
            {
              while (1)
              {
                v33 = v114 + 1;
                if (__OFADD__(v114, 1))
                  break;
                sub_1C079C394();
                if (v97 == v86)
                  goto LABEL_101;
                sub_1C07A1BB4();
                v114 = v115 + 1;
                if (v112)
                  goto LABEL_92;
              }
              __break(1u);
              goto LABEL_181;
            }
            v33 = v114;
          }
        }
      }
LABEL_92:
      v107 = (v112 - 1) & v112;
      v110 = __clz(__rbit64(v112)) + (v33 << 6);
LABEL_93:
      v116 = v227;
      isUniquelyReferenced_nonNull_native = v205;
      (*(void (**)(uint64_t, unint64_t, uint64_t))(v227 + 16))(v205, *(_QWORD *)(v5 + 48) + *(_QWORD *)(v227 + 72) * v110, v13);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v116 + 32))(a4, isUniquelyReferenced_nonNull_native, v13);
      sub_1C078C1D8();
      if (v31)
        break;
      v224 = 0;
      v225 = 0xE000000000000000;
      sub_1C1070774();
      swift_bridgeObjectRelease();
      v224 = 0x2728746567;
      v225 = 0xE500000000000000;
      sub_1C07803B8((unint64_t *)&qword_1ED7625A0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3CE28], MEMORY[0x1E0D3CE60]);
      sub_1C1070C0C();
      sub_1C079BD30();
      swift_bridgeObjectRelease();
      sub_1C106FC94();
      sub_1C07803B8(&qword_1EF632CD0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3CC50], MEMORY[0x1E0D3CC90]);
      sub_1C1070C0C();
      sub_1C079BD30();
      swift_bridgeObjectRelease();
      sub_1C106FC94();
      sub_1C07A7D70();
      sub_1C0787A0C();
      v117 = v224;
      v118 = v225;
      if ((sub_1C0778698() & 1) == 0)
      {
        sub_1C07937D0();
        v29 = (unint64_t)v121;
      }
      v119 = *(_QWORD *)(v29 + 16);
      if (v119 >= *(_QWORD *)(v29 + 24) >> 1)
      {
        sub_1C07937D0();
        v29 = (unint64_t)v122;
      }
      *(_QWORD *)(v29 + 16) = v119 + 1;
      v120 = (char *)(v29 + 16 * v119);
      *((_QWORD *)v120 + 4) = v117;
      *((_QWORD *)v120 + 5) = v118;
      a4 = v208;
      v13 = v210;
      (*(void (**)(uint64_t, uint64_t))(v227 + 8))(v208, v210);
      a3 = v207;
      if (v107)
        goto LABEL_73;
    }
    (*(void (**)(uint64_t, uint64_t))(v227 + 8))(a4, v13);
LABEL_101:
    swift_release();
    sub_1C07943DC();
    (*(void (**)(uint64_t, uint64_t))(isUniquelyReferenced_nonNull_native + 8))(v209, a3);
    v5 = v198;
    v91 = v200;
    if (v200)
      continue;
    break;
  }
LABEL_52:
  if (__OFADD__(v197, 1))
    goto LABEL_184;
  sub_1C078C1D8();
  if (v97 == v86)
    goto LABEL_70;
  sub_1C07AC70C();
  if (v99)
    goto LABEL_56;
  v100 = v98 + 1;
  v197 = v98;
  if (v98 + 1 >= v194)
    goto LABEL_70;
  v99 = *(_QWORD *)&v193[8 * v100];
  if (v99)
    goto LABEL_59;
  v197 = v98 + 1;
  if (v98 + 2 >= v194)
    goto LABEL_70;
  v99 = *(_QWORD *)&v193[8 * v98 + 16];
  if (v99)
  {
    v98 += 2;
    goto LABEL_56;
  }
  v100 = v98 + 3;
  v197 = v98 + 2;
  if (v98 + 3 >= v194)
  {
LABEL_70:
    v102 = sub_1C077C1C0();
    sub_1C07B2D8C(v5, 1, 1, v102);
    v200 = 0;
    goto LABEL_71;
  }
  v99 = *(_QWORD *)&v193[8 * v100];
  if (v99)
  {
LABEL_59:
    v98 = v100;
LABEL_56:
    v200 = (v99 - 1) & v99;
    v93 = __clz(__rbit64(v99)) + (v98 << 6);
    v197 = v98;
    goto LABEL_51;
  }
  while (!__OFADD__(v100, 1))
  {
    sub_1C078C1D8();
    if (v97 == v86)
    {
      v197 = v192;
      goto LABEL_70;
    }
    sub_1C07AC70C();
    v100 = v101 + 1;
    if (v99)
      goto LABEL_56;
  }
LABEL_187:
  __break(1u);
LABEL_188:
  sub_1C1070D44();
  __break(1u);
}

uint64_t sub_1C087F2E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t inited;
  uint64_t result;
  uint64_t v13;
  unint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;

  v1 = v0;
  v2 = sub_1C106E5FC();
  v26 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  sub_1C0778564();
  v5 = v4 - v3;
  v6 = sub_1C106D7C8();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  sub_1C0778564();
  v10 = v9 - v8;
  sub_1C07ACF80(&qword_1ED762CB0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C1078A20;
  *(_QWORD *)(inited + 32) = 7628135;
  v28 = inited + 32;
  *(_QWORD *)(inited + 40) = 0xE300000000000000;
  *(_QWORD *)(inited + 48) = 7370352;
  *(_QWORD *)(inited + 56) = 0xE300000000000000;
  *(_QWORD *)(inited + 64) = 1651339107;
  v29 = inited;
  *(_QWORD *)(inited + 72) = 0xE400000000000000;
  result = swift_initStackObject();
  v13 = result;
  v14 = 0;
  *(_OWORD *)(result + 16) = xmmword_1C1079220;
  *(_QWORD *)(result + 32) = 0xD000000000000010;
  *(_QWORD *)(result + 40) = 0x80000001C10E6D90;
  v27 = result;
  v31 = v6;
  while (v14 < *(_QWORD *)(v29 + 16))
  {
    v30 = v14;
    v15 = (uint64_t *)(v28 + 16 * v14);
    v16 = *v15;
    v17 = v15[1];
    v18 = *(_QWORD *)(v13 + 16);
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    result = _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    if (!v18)
      goto LABEL_13;
    v21 = v13 + 32;
    v20 = *(_QWORD *)(v13 + 32);
    v19 = *(_QWORD *)(v21 + 8);
    sub_1C07767B4();
    sub_1C087DA14(v20, v19, v16, v17, 2000);
    if (v1)
    {
      sub_1C077960C();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1C07863FC();
      sub_1C0BE8D64();
      goto LABEL_11;
    }
    v23 = v22;
    swift_bridgeObjectRelease();
    v24 = *(_QWORD *)(v23 + 16);
    if (v24)
    {
      v25 = v23 + 40;
      do
      {
        sub_1C07767B4();
        sub_1C106E5F0();
        sub_1C106D7D4();
        (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v5, v2);
        (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v10, v31);
        v25 += 16;
        --v24;
      }
      while (v24);
    }
    v14 = v30 + 1;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v13 = v27;
    result = sub_1C077960C();
    v1 = 0;
    if (v30 == 2)
    {
      sub_1C078F230();
LABEL_11:
      sub_1C07863FC();
      return sub_1C0BE8D64();
    }
  }
  __break(1u);
LABEL_13:
  __break(1u);
  return result;
}

uint64_t IntelligencePlatformBenchmark.deinit()
{
  uint64_t v0;

  sub_1C078D09C(v0 + OBJC_IVAR____TtC24IntelligencePlatformCore29IntelligencePlatformBenchmark_config);
  swift_release();

  return v0;
}

uint64_t IntelligencePlatformBenchmark.__deallocating_deinit()
{
  IntelligencePlatformBenchmark.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_1C087F65C()
{
  return type metadata accessor for IntelligencePlatformBenchmark();
}

uint64_t type metadata accessor for IntelligencePlatformBenchmark()
{
  uint64_t result;

  result = qword_1EF632C28;
  if (!qword_1EF632C28)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1C087F69C()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for Configuration();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for IntelligencePlatformBenchmark()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of IntelligencePlatformBenchmark.__allocating_init(config:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t sub_1C087F748(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1C07ACF80(&qword_1EF632CC0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C087F790(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1C07ACF80(&qword_1EF632CC8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t BiomeCombinePublisher.init(bpsPublisher:)@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = result;
  return result;
}

id sub_1C087F7D8(uint64_t a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_allocWithZone(v1);
  return sub_1C087F808(a1);
}

id sub_1C087F808(uint64_t a1)
{
  char *v1;
  objc_class *ObjectType;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  objc_super v10;

  ObjectType = (objc_class *)swift_getObjectType();
  v4 = *MEMORY[0x1E0DEEDD8] & *(_QWORD *)v1;
  swift_weakInit();
  sub_1C07A377C();
  v6 = *(_QWORD *)(v4 + 88);
  v7 = *(_QWORD *)(v6 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(&v1[v5], a1, v6);
  swift_weakAssign();
  v10.receiver = v1;
  v10.super_class = ObjectType;
  v8 = objc_msgSendSuper2(&v10, sel_init);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
  return v8;
}

uint64_t sub_1C087F8C8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v6;
  uint64_t v7;
  id v8;
  _QWORD v10[5];

  v6 = type metadata accessor for BiomeCombinePublisher.BPSCombineSubscription(0, *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v4) + 0x50), a3, a4);
  v7 = sub_1C087F9B8((uint64_t)a1);
  swift_weakAssign();
  v10[3] = v6;
  v10[4] = MEMORY[0x1C3BA8174](&unk_1C107E170, v6);
  v10[0] = v7;
  v8 = a1;
  swift_retain();
  sub_1C106F67C();
  swift_release();
  return _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v10);
}

uint64_t sub_1C087F9B8(uint64_t a1)
{
  uint64_t result;

  result = swift_allocObject();
  *(_QWORD *)(result + 16) = a1;
  return result;
}

void sub_1C087F9E8(void *a1, uint64_t a2, void *a3)
{
  id v4;
  uint64_t v5;
  uint64_t v6;
  id v7;

  v4 = a3;
  v7 = a1;
  sub_1C087F8C8(v4, (uint64_t)v7, v5, v6);

}

uint64_t sub_1C087FA3C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t result;
  void *v6;
  _QWORD v7[4];

  v1 = a1;
  sub_1C0788E98(a1, (uint64_t)v7);
  if (swift_dynamicCast())
  {
    v1 = (uint64_t)v6;
    sub_1C07A377C();
    v7[0] = v6;
    v2 = sub_1C106F688();
    sub_1C106F6D0();
    if ((sub_1C07A68D4() & 1) != 0)
    {
      v3 = (uint64_t *)MEMORY[0x1E0D02408];
LABEL_6:
      v4 = *v3;
LABEL_10:

      return v4;
    }
    sub_1C106F6C4();
    if ((sub_1C07A68D4() & 1) != 0)
    {
      v3 = (uint64_t *)MEMORY[0x1E0D02400];
      goto LABEL_6;
    }
    sub_1C106F6D0();
    if ((sub_1C07961B0() & 1) != 0)
    {
      __break(1u);
    }
    else if ((v2 & 0x8000000000000000) == 0)
    {
      v4 = BPSDemandMax();
      goto LABEL_10;
    }
    __break(1u);
  }
  sub_1C0788E98(v1, (uint64_t)v7);
  sub_1C1070774();
  sub_1C106FC94();
  sub_1C07A9480(v7, v7[3]);
  swift_getDynamicType();
  sub_1C07ACF80(qword_1EF632ED0);
  sub_1C07986B4();
  sub_1C07997F0();
  swift_bridgeObjectRelease();
  sub_1C07997F0();
  swift_getMetatypeMetadata();
  sub_1C07986B4();
  sub_1C07997F0();
  swift_bridgeObjectRelease();
  result = sub_1C1070954();
  __break(1u);
  return result;
}

uint64_t sub_1C087FC38(void *a1)
{
  id v2;
  uint64_t v3;
  _BYTE v5[32];

  swift_unknownObjectRetain();
  v2 = a1;
  sub_1C107063C();
  swift_unknownObjectRelease();
  v3 = sub_1C087FA3C((uint64_t)v5);

  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v5);
  return v3;
}

void sub_1C087FCA0(void *a1)
{
  id v2;
  void *v3;
  id v4;

  if (objc_msgSend(a1, sel_state) != (id)1)
  {
    v3 = 0;
    goto LABEL_5;
  }
  v2 = objc_msgSend(a1, sel_error);
  if (v2)
  {
    v3 = v2;
LABEL_5:
    v4 = v3;
    sub_1C106F670();

    return;
  }
  __break(1u);
}

void sub_1C087FD64(void *a1, uint64_t a2, void *a3)
{
  id v4;
  id v5;

  v4 = a3;
  v5 = a1;
  sub_1C087FCA0(v4);

}

uint64_t sub_1C087FDB8()
{
  uint64_t result;

  result = swift_weakLoadStrong();
  if (result)
  {
    objc_msgSend(*(id *)(result + 16), sel_cancel);
    return swift_release();
  }
  return result;
}

id sub_1C087FE18()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 16), sel_cancel);
}

void sub_1C087FE28(void *a1)
{
  id v1;

  v1 = a1;
  sub_1C087FDB8();

}

void sub_1C087FE5C()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void sub_1C087FE88()
{
  sub_1C087FE5C();
}

id _s24IntelligencePlatformCore15CoordinationXPCCfD_0()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1C087FEC8(char *a1)
{
  (*(void (**)(char *))(*(_QWORD *)(*(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *(_QWORD *)a1) + 0x58) - 8) + 8))(&a1[*(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *(_QWORD *)a1) + 0x68)]);
  return swift_weakDestroy();
}

uint64_t sub_1C087FF24(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t result;

  sub_1C106F6D0();
  if ((sub_1C07A68D4() & 1) != 0)
  {
    v3 = (uint64_t *)MEMORY[0x1E0D02408];
LABEL_5:
    v4 = *v3;
    return (uint64_t)objc_msgSend(*(id *)(v1 + 16), sel_requestDemand_, v4);
  }
  sub_1C106F6C4();
  if ((sub_1C07A68D4() & 1) != 0)
  {
    v3 = (uint64_t *)MEMORY[0x1E0D02400];
    goto LABEL_5;
  }
  sub_1C106F6D0();
  result = sub_1C07961B0();
  if ((result & 1) != 0)
  {
    __break(1u);
  }
  else if ((a1 & 0x8000000000000000) == 0)
  {
    v4 = BPSDemandMax();
    return (uint64_t)objc_msgSend(*(id *)(v1 + 16), sel_requestDemand_, v4);
  }
  __break(1u);
  return result;
}

uint64_t sub_1C087FFA4()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1C087FFC0()
{
  sub_1C087FFA4();
  return swift_deallocClassInstance();
}

uint64_t sub_1C087FFE0(uint64_t a1)
{
  return sub_1C087FF24(a1);
}

id sub_1C0880000()
{
  return sub_1C087FE18();
}

uint64_t sub_1C0880020()
{
  return sub_1C106F604();
}

void BiomeCombinePublisher.receive<A>(subscriber:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void **v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t v14;

  v6 = *(_QWORD *)(a3 - 8);
  MEMORY[0x1E0C80A78](a1);
  v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *v3;
  type metadata accessor for BiomeCombinePublisher.BPSCombineSubscriber(0, *(_QWORD *)(v10 + 16), v11, v12);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, a1, a3);
  v13 = sub_1C087F7D8((uint64_t)v8);
  objc_msgSend(v9, sel_subscribe_, v13);

}

uint64_t type metadata accessor for BiomeCombinePublisher.BPSCombineSubscriber(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C0802884(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for BiomeCombinePublisher.BPSCombineSubscriber);
}

void sub_1C08800F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  BiomeCombinePublisher.receive<A>(subscriber:)(a1, a4, a2);
}

uint64_t type metadata accessor for BiomeCombinePublisher(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C0802884(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for BiomeCombinePublisher);
}

uint64_t sub_1C0880118()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    result = swift_initClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_1C0880190()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for BiomeCombinePublisher.BPSCombineSubscription(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C0802884(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for BiomeCombinePublisher.BPSCombineSubscription);
}

void sub_1C08801E0()
{
  JUMPOUT(0x1C3BA8174);
}

void sub_1C08801F0()
{
  JUMPOUT(0x1C3BA8174);
}

uint64_t sub_1C0880200(int a1)
{
  uint64_t result;

  result = 0x6E776F6E6B6E55;
  switch(a1)
  {
    case 0:
      return result;
    case 1:
      result = 0x6E49664F61657241;
      break;
    case 2:
      result = 0x49664F746E696F50;
      break;
    case 3:
      result = 0x73736572646441;
      break;
    default:
      result = sub_1C078F238();
      break;
  }
  return result;
}

uint64_t sub_1C08802A8(int a1)
{
  uint64_t result;

  result = 0x6E776F6E6B6E55;
  switch(a1)
  {
    case 0:
      return result;
    case 1:
      result = 1701670728;
      break;
    case 2:
      result = sub_1C07ADB90();
      break;
    case 3:
      result = 0x6C6F6F686353;
      break;
    case 4:
      result = 7174471;
      break;
    default:
      result = sub_1C078F238();
      break;
  }
  return result;
}

uint64_t sub_1C088032C(int a1)
{
  int v1;
  uint64_t result;
  unsigned int v3;

  v1 = a1 - 1;
  result = 0x6D6F74737543;
  switch(v1)
  {
    case 0:
      return result;
    case 1:
      result = 0x746C7561666544;
      break;
    case 2:
      result = 0x7065656C53;
      break;
    case 3:
      v3 = 1986622020;
      goto LABEL_10;
    case 4:
      result = 0x6573696372657845;
      break;
    case 5:
      result = sub_1C07ADB90();
      break;
    case 6:
      result = 0x6C616E6F73726550;
      break;
    case 7:
      v3 = 1684104530;
LABEL_10:
      result = v3 | 0x676E6900000000;
      break;
    case 8:
      result = 0x676E696D6147;
      break;
    case 9:
      result = 0x6E6C7566646E694DLL;
      break;
    default:
      result = sub_1C078F238();
      break;
  }
  return result;
}

void sub_1C0880430()
{
  uint64_t v0;
  uint64_t v1;
  BOOL v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  BOOL v6;
  BOOL v7;

  sub_1C07986C0();
  v2 = v2 && v1 == 0xE700000000000000;
  if (!v2)
  {
    v3 = v1;
    v4 = v0;
    if ((sub_1C079373C() & 1) == 0)
    {
      v6 = v4 == 0x6E49664F61657241 && v3 == 0xEE00747365726574;
      if (v6 || (sub_1C079373C() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        sub_1C0787A18();
        goto LABEL_7;
      }
      v7 = v4 == 0x49664F746E696F50 && v3 == 0xEF7473657265746ELL;
      if (v7 || (sub_1C079373C() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        sub_1C079A874();
        goto LABEL_7;
      }
      if (v4 != 0x73736572646441 || v3 != 0xE700000000000000)
      {
        sub_1C079373C();
        sub_1C0780490();
        sub_1C07961BC();
        goto LABEL_7;
      }
    }
  }
  swift_bridgeObjectRelease();
  v5 = 0;
LABEL_7:
  sub_1C07A08B0(v5);
  sub_1C07806B4();
}

unint64_t sub_1C08805E8()
{
  uint64_t v0;
  uint64_t v1;
  BOOL v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  BOOL v7;
  BOOL v8;
  BOOL v9;

  sub_1C07986C0();
  v2 = v2 && v1 == 0xE700000000000000;
  if (!v2)
  {
    v3 = v1;
    v4 = v0;
    if ((sub_1C079373C() & 1) == 0)
    {
      v7 = v4 == 1701670728 && v3 == 0xE400000000000000;
      if (v7 || (sub_1C079373C() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        sub_1C0787A18();
        return sub_1C07A08B0(v5);
      }
      v8 = v4 == 1802661719 && v3 == 0xE400000000000000;
      if (v8 || (sub_1C079373C() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        sub_1C079A874();
        return sub_1C07A08B0(v5);
      }
      v9 = v4 == 0x6C6F6F686353 && v3 == 0xE600000000000000;
      if (!v9 && (sub_1C079373C() & 1) == 0 && (v4 != 7174471 || v3 != 0xE300000000000000))
      {
        sub_1C079373C();
        sub_1C0780490();
        sub_1C07961BC();
        return sub_1C07A08B0(v5);
      }
    }
  }
  swift_bridgeObjectRelease();
  v5 = 0;
  return sub_1C07A08B0(v5);
}

void sub_1C0880788(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v5;
  BOOL v6;
  BOOL v7;
  BOOL v8;
  BOOL v9;
  BOOL v10;
  BOOL v11;
  BOOL v12;
  BOOL v13;
  BOOL v14;

  v2 = a1 == 0x6D6F74737543 && a2 == 0xE600000000000000;
  if (v2 || (sub_1C079373C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    sub_1C0787A18();
  }
  else
  {
    v6 = a1 == 0x746C7561666544 && a2 == 0xE700000000000000;
    if (v6 || (sub_1C079373C() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      sub_1C079A874();
    }
    else
    {
      v7 = a1 == 0x7065656C53 && a2 == 0xE500000000000000;
      if (v7
        || (sub_1C079373C() & 1) != 0
        || (a1 == 0x676E6976697244 ? (v8 = a2 == 0xE700000000000000) : (v8 = 0),
            v8
         || (sub_1C079373C() & 1) != 0
         || (a1 == 0x6573696372657845 ? (v9 = a2 == 0xE800000000000000) : (v9 = 0),
             v9
          || (sub_1C079373C() & 1) != 0
          || (a1 == 1802661719 ? (v10 = a2 == 0xE400000000000000) : (v10 = 0),
              v10
           || (sub_1C079373C() & 1) != 0
           || (a1 == 0x6C616E6F73726550 ? (v11 = a2 == 0xEC000000656D6954) : (v11 = 0),
               v11
            || (sub_1C079373C() & 1) != 0
            || (a1 == 0x676E6964616552 ? (v12 = a2 == 0xE700000000000000) : (v12 = 0),
                v12
             || (sub_1C079373C() & 1) != 0
             || (a1 == 0x676E696D6147 ? (v13 = a2 == 0xE600000000000000) : (v13 = 0),
                 v13
              || (sub_1C079373C() & 1) != 0
              || (a1 == 0x6E6C7566646E694DLL ? (v14 = a2 == 0xEB00000000737365) : (v14 = 0), v14))))))))
      {
        swift_bridgeObjectRelease();
        v5 = 0;
      }
      else
      {
        sub_1C079373C();
        sub_1C0780490();
        sub_1C07961BC();
      }
    }
  }
  sub_1C07A08B0(v5);
  sub_1C07806B4();
}

void sub_1C0880B20()
{
  uint64_t v0;
  uint64_t v1;
  BOOL v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  BOOL v6;

  sub_1C07986C0();
  v2 = v2 && v1 == 0xE700000000000000;
  if (v2 || (v3 = v1, v4 = v0, (sub_1C079373C() & 1) != 0))
  {
    swift_bridgeObjectRelease();
    v5 = 0;
  }
  else
  {
    v6 = v4 == 4346709 && v3 == 0xE300000000000000;
    if (v6 || (sub_1C079373C() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      sub_1C0787A18();
    }
    else if (v4 == 1766222167 && v3 == 0xE400000000000000)
    {
      swift_bridgeObjectRelease();
      sub_1C079A874();
    }
    else
    {
      sub_1C079373C();
      sub_1C0780490();
      sub_1C07961BC();
    }
  }
  sub_1C07A08B0(v5);
  sub_1C07806B4();
}

uint64_t type metadata accessor for AnyIdentifiableInteractionEventBiomeStream(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C0802884(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for AnyIdentifiableInteractionEventBiomeStream);
}

uint64_t sub_1C0880C24(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  char v9;
  int v10;
  unsigned int v11;
  int v12;

  if (!a2)
    return 0;
  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned int *)(v5 + 84);
  v7 = a2 - v6;
  if (a2 <= v6)
    goto LABEL_18;
  v8 = *(_QWORD *)(v5 + 64);
  v9 = 8 * v8;
  if (v8 <= 3)
  {
    v11 = ((v7 + ~(-1 << v9)) >> v9) + 1;
    if (HIWORD(v11))
    {
      v10 = *(_DWORD *)(a1 + v8);
      if (!v10)
        goto LABEL_18;
      goto LABEL_11;
    }
    if (v11 > 0xFF)
    {
      v10 = *(unsigned __int16 *)(a1 + v8);
      if (!*(_WORD *)(a1 + v8))
        goto LABEL_18;
      goto LABEL_11;
    }
    if (v11 < 2)
    {
LABEL_18:
      if ((_DWORD)v6)
        return sub_1C07B2D80(a1, v6, v4);
      return 0;
    }
  }
  v10 = *(unsigned __int8 *)(a1 + v8);
  if (!*(_BYTE *)(a1 + v8))
    goto LABEL_18;
LABEL_11:
  v12 = (v10 - 1) << v9;
  if (v8 > 3)
    v12 = 0;
  if (!(_DWORD)v8)
    return (v6 + v12 + 1);
  if (v8 > 3)
    LODWORD(v8) = 4;
  return ((uint64_t (*)(void))((char *)&loc_1C0880CD4 + 4 * byte_1C107E1C0[(v8 - 1)]))();
}

void sub_1C0880D20(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6;
  unsigned int v7;
  size_t v8;
  char v9;
  BOOL v10;
  unsigned int v11;
  unsigned int v12;
  unsigned int v13;
  unsigned int v14;
  int v15;

  v6 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v7 = *(_DWORD *)(v6 + 84);
  v8 = *(_QWORD *)(v6 + 64);
  v9 = 8 * v8;
  v10 = a3 >= v7;
  v11 = a3 - v7;
  if (v11 != 0 && v10)
  {
    if (v8 <= 3)
    {
      v14 = ((v11 + ~(-1 << v9)) >> v9) + 1;
      if (HIWORD(v14))
      {
        v12 = 4u;
      }
      else if (v14 >= 0x100)
      {
        v12 = 2;
      }
      else
      {
        v12 = v14 > 1;
      }
    }
    else
    {
      v12 = 1u;
    }
  }
  else
  {
    v12 = 0u;
  }
  if (v7 < a2)
  {
    v13 = ~v7 + a2;
    if (v8 < 4)
    {
      if ((_DWORD)v8)
      {
        v15 = v13 & ~(-1 << v9);
        bzero(a1, v8);
        if ((_DWORD)v8 == 3)
        {
          *a1 = v15;
          *((_BYTE *)a1 + 2) = BYTE2(v15);
        }
        else if ((_DWORD)v8 == 2)
        {
          *a1 = v15;
        }
        else
        {
          *(_BYTE *)a1 = v15;
        }
      }
    }
    else
    {
      bzero(a1, v8);
      *(_DWORD *)a1 = v13;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X10 }
}

uint64_t type metadata accessor for BiomeInteractionEventSourceAdapter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C0802884(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for BiomeInteractionEventSourceAdapter);
}

uint64_t sub_1C0880ED4(uint64_t a1, uint64_t a2)
{
  return *(_QWORD *)(a2 + 24);
}

id sub_1C0880EDC(uint64_t a1, id a2)
{
  return objc_msgSend(a2, sel_publisherWithOptions_, a1);
}

id sub_1C0880F08(uint64_t a1)
{
  id *v1;

  return sub_1C0880EDC(a1, *v1);
}

void sub_1C0880F10(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, void *a4@<X3>, uint64_t a5@<X4>, _QWORD *a6@<X8>)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  void *v15;
  uint64_t v16;
  uint64_t v17;

  v12 = *(_QWORD *)(a5 + 16);
  v11 = *(_QWORD *)(a5 + 24);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  if (((*(uint64_t (**)(void *, void *, uint64_t, uint64_t))(AssociatedConformanceWitness + 8))(a3, a4, AssociatedTypeWitness, AssociatedConformanceWitness) & 1) != 0)
  {
    v15 = (void *)MEMORY[0x1C3BA79F4]();
    sub_1C0881054(a1, a2, v17, a3, a4, v12, v11, a6);
    objc_autoreleasePoolPop(v15);
  }
  else
  {
    sub_1C0881ED0();
    swift_allocError();
    *(_QWORD *)v16 = a3;
    *(_QWORD *)(v16 + 8) = a4;
    *(_BYTE *)(v16 + 16) = 0;
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    swift_willThrow();
  }
}

void sub_1C0881054(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X3>, void *a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, _QWORD *a8@<X8>)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  double v29;
  uint64_t v30;
  char *v31;
  void (*v32)(char *, uint64_t, uint64_t, double);
  id v33;
  id v34;
  uint64_t (*v35)(id, uint64_t, uint64_t);
  uint64_t v36;
  uint64_t v37;
  void *v38;
  _QWORD *v39;
  id v40;
  void *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  void (*v56)(uint64_t, char *, uint64_t);
  unint64_t v57;
  char *v58;
  void *v59;
  id v60;
  id v61;
  id v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  unint64_t v67;
  uint64_t v68;
  _QWORD *v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  _QWORD *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  id v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  id v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  uint64_t aBlock;
  uint64_t v92;
  void *v93;
  void *v94;
  void *v95;
  _QWORD *v96;

  v88 = a6;
  v85 = a5;
  v81 = a4;
  v77 = a1;
  v78 = a3;
  v76 = a2;
  v74 = a8;
  v73 = sub_1C07ACF80(&qword_1ED744AB8);
  v72 = *(_QWORD *)(v73 - 8);
  MEMORY[0x1E0C80A78](v73);
  v71 = (char *)&v70 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v70 = v12;
  MEMORY[0x1E0C80A78](v13);
  v86 = (char *)&v70 - v14;
  v16 = type metadata accessor for BiomeInteractionEventSourceAdapter(0, a6, a7, v15);
  v90 = *(_QWORD *)(v16 - 8);
  v17 = *(_QWORD *)(v90 + 64);
  v83 = v16;
  v84 = v17;
  MEMORY[0x1E0C80A78](v16);
  v82 = (char *)&v70 - v18;
  v19 = sub_1C106ADE0();
  v20 = *(_QWORD *)(v19 - 8);
  v21 = v19;
  v22 = *(_QWORD *)(v20 + 64);
  v79 = v20;
  MEMORY[0x1E0C80A78](v19);
  v89 = (char *)&v70 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v23);
  v80 = (char *)&v70 - v24;
  v25 = sub_1C07ACF80((uint64_t *)&unk_1ED762690);
  MEMORY[0x1E0C80A78](v25);
  v27 = (char *)&v70 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = MEMORY[0x1E0C80A78](v28);
  v31 = (char *)&v70 - v30;
  v32 = *(void (**)(char *, uint64_t, uint64_t, double))(v20 + 16);
  v32((char *)&v70 - v30, a1, v21, v29);
  sub_1C07B2D8C((uint64_t)v31, 0, 1, v21);
  ((void (*)(char *, uint64_t, uint64_t))v32)(v27, a2, v21);
  sub_1C07B2D8C((uint64_t)v27, 0, 1, v21);
  v33 = objc_allocWithZone(MEMORY[0x1E0D026F0]);
  v34 = sub_1C07DC9F8((uint64_t)v31, (uint64_t)v27, 0, 0, 0);
  v35 = *(uint64_t (**)(id, uint64_t, uint64_t))(a7 + 24);
  v36 = v78;
  v37 = v88;
  v75 = a7;
  v38 = (void *)v35(v34, v88, a7);

  v39 = (_QWORD *)swift_allocObject();
  v39[2] = v37;
  v39[3] = a7;
  v40 = v85;
  v39[4] = v81;
  v39[5] = v40;
  v95 = sub_1C0881F38;
  v96 = v39;
  aBlock = MEMORY[0x1E0C809B0];
  v92 = 1107296256;
  v93 = sub_1C0881754;
  v94 = &unk_1E7A11228;
  v41 = _Block_copy(&aBlock);
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  swift_release();
  v85 = v38;
  v81 = objc_msgSend(v38, sel_mapWithTransform_, v41);
  _Block_release(v41);
  v42 = v80;
  v43 = v21;
  ((void (*)(char *, uint64_t, uint64_t))v32)(v80, v77, v21);
  v44 = v90;
  v45 = v82;
  v46 = v36;
  v47 = v83;
  (*(void (**)(char *, uint64_t, uint64_t))(v90 + 16))(v82, v46, v83);
  ((void (*)(char *, uint64_t, uint64_t))v32)(v89, v76, v21);
  v48 = v79;
  v49 = *(unsigned __int8 *)(v79 + 80);
  v50 = (v49 + 32) & ~v49;
  v51 = (v22 + *(unsigned __int8 *)(v44 + 80) + v50) & ~(unint64_t)*(unsigned __int8 *)(v44 + 80);
  v52 = (v84 + v49 + v51) & ~v49;
  v53 = swift_allocObject();
  v54 = v75;
  *(_QWORD *)(v53 + 16) = v88;
  *(_QWORD *)(v53 + 24) = v54;
  v55 = v53 + v50;
  v56 = *(void (**)(uint64_t, char *, uint64_t))(v48 + 32);
  v56(v55, v42, v43);
  (*(void (**)(unint64_t, char *, uint64_t))(v90 + 32))(v53 + v51, v45, v47);
  v57 = v53 + v52;
  v58 = v86;
  v56(v57, v89, v43);
  v95 = sub_1C088201C;
  v96 = (_QWORD *)v53;
  aBlock = MEMORY[0x1E0C809B0];
  v92 = 1107296256;
  v93 = sub_1C0870B58;
  v94 = &unk_1E7A11278;
  v59 = _Block_copy(&aBlock);
  swift_release();
  v60 = v81;
  v61 = objc_msgSend(v81, sel_filterWithIsIncluded_, v59);
  _Block_release(v59);

  type metadata accessor for InteractionEvent(0);
  v62 = v61;
  v63 = v87;
  sub_1C106ED88();
  if (v63)
  {

  }
  else
  {
    v64 = v72;
    v65 = v71;
    v66 = v73;
    (*(void (**)(char *, char *, uint64_t))(v72 + 16))(v71, v58, v73);
    v67 = (*(unsigned __int8 *)(v64 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v64 + 80);
    v68 = swift_allocObject();
    (*(void (**)(unint64_t, char *, uint64_t))(v64 + 32))(v68 + v67, v65, v66);

    v69 = v74;
    *v74 = sub_1C0882120;
    v69[1] = v68;
    (*(void (**)(char *, uint64_t))(v64 + 8))(v58, v66);
  }
}

uint64_t sub_1C08815C8@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v8;
  double v9;
  uint64_t v10;
  char *v11;
  id v12;
  uint64_t v13;
  uint64_t AssociatedConformanceWitness;
  uint64_t (*v15)(uint64_t, uint64_t, char *, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t result;
  _QWORD v19[2];

  v8 = sub_1C07ACF80((uint64_t *)&unk_1ED762690);
  v9 = MEMORY[0x1E0C80A78](v8);
  v11 = (char *)v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = objc_msgSend(a1, sel_eventBody, v9);
  if (v12)
  {
    v19[1] = v12;
    objc_msgSend(a1, sel_timestamp);
    sub_1C106AC54();
    v13 = sub_1C106ADE0();
    sub_1C07B2D8C((uint64_t)v11, 0, 1, v13);
    swift_getAssociatedTypeWitness();
    AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    v15 = *(uint64_t (**)(uint64_t, uint64_t, char *, uint64_t, uint64_t))(AssociatedConformanceWitness + 16);
    v16 = swift_checkMetadataState();
    v17 = v15(a2, a3, v11, v16, AssociatedConformanceWitness);
    sub_1C077CDB4((uint64_t)v11);
    swift_unknownObjectRelease();
  }
  else
  {
    v17 = 0;
  }
  result = sub_1C07ACF80((uint64_t *)&unk_1ED7453B0);
  a4[3] = result;
  *a4 = v17;
  return result;
}

id sub_1C0881754(uint64_t a1, void *a2)
{
  void (*v3)(_QWORD *__return_ptr);
  id v4;
  void *v5;
  _QWORD v7[4];

  v3 = *(void (**)(_QWORD *__return_ptr))(a1 + 32);
  swift_retain();
  v4 = a2;
  v3(v7);
  swift_release();

  sub_1C07A9480(v7, v7[3]);
  v5 = (void *)sub_1C1070C9C();
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v7);
  return v5;
}

uint64_t sub_1C08817D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE *v22;
  uint64_t v23;
  uint64_t v24;
  _BYTE *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  NSObject *v31;
  os_log_type_t v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  unint64_t v40;
  _BYTE *v41;
  uint64_t v42;
  uint64_t v43;
  _BYTE *v44;
  uint64_t v45;
  uint64_t v46;
  NSObject *v47;
  os_log_type_t v48;
  int v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  unint64_t v57;
  _BYTE *v58;
  uint64_t v59;
  unint64_t v60;
  _BYTE v62[4];
  int v63;
  uint64_t v64;
  uint64_t v65;
  _BYTE *v66;
  _BYTE *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  _BYTE *v72;

  v68 = a3;
  v65 = *(_QWORD *)(a5 - 8);
  MEMORY[0x1E0C80A78](a1);
  v66 = &v62[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v12 = sub_1C106ADE0();
  v13 = *(_QWORD *)(v12 - 8);
  v69 = v12;
  v70 = v13;
  MEMORY[0x1E0C80A78](v12);
  v67 = &v62[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v15);
  v17 = &v62[-v16];
  v19 = type metadata accessor for BiomeInteractionEventSourceAdapter(0, a5, a6, v18);
  v20 = *(_QWORD *)(v19 - 8);
  MEMORY[0x1E0C80A78](v19);
  v22 = &v62[-((v21 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v23);
  v25 = &v62[-v24];
  type metadata accessor for InteractionEvent(0);
  swift_unknownObjectRetain();
  v26 = swift_dynamicCastClass();
  if (!v26)
    goto LABEL_13;
  v27 = v26 + OBJC_IVAR____TtC24IntelligencePlatformCore16InteractionEvent_date;
  if ((sub_1C106AD50() & 1) != 0)
  {
    v64 = v27;
    if (qword_1ED760048 != -1)
      swift_once();
    v28 = sub_1C106F544();
    sub_1C079E000(v28, (uint64_t)qword_1ED78D800);
    (*(void (**)(_BYTE *, uint64_t, uint64_t))(v20 + 16))(v25, v68, v19);
    v29 = v69;
    v30 = v70;
    (*(void (**)(_BYTE *, uint64_t, uint64_t))(v70 + 16))(v17, a2, v69);
    swift_unknownObjectRetain_n();
    v31 = sub_1C106F538();
    v32 = sub_1C1070390();
    v33 = v32;
    if (os_log_type_enabled(v31, v32))
    {
      v34 = swift_slowAlloc();
      v67 = (_BYTE *)swift_slowAlloc();
      v68 = a1;
      v72 = v67;
      *(_DWORD *)v34 = 136315650;
      v63 = v33;
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v65 + 16))(v66, v25, a5);
      v35 = sub_1C106FB5C();
      v71 = sub_1C0788DAC(v35, v36, (uint64_t *)&v72);
      sub_1C10705AC();
      swift_bridgeObjectRelease();
      (*(void (**)(_BYTE *, uint64_t))(v20 + 8))(v25, v19);
      *(_WORD *)(v34 + 12) = 2080;
      sub_1C0815044();
      v37 = sub_1C1070C0C();
      v71 = sub_1C0788DAC(v37, v38, (uint64_t *)&v72);
      sub_1C10705AC();
      swift_unknownObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v34 + 22) = 2080;
      v39 = sub_1C1070C0C();
      v71 = sub_1C0788DAC(v39, v40, (uint64_t *)&v72);
      sub_1C10705AC();
      swift_bridgeObjectRelease();
      (*(void (**)(_BYTE *, uint64_t))(v70 + 8))(v17, v29);
      _os_log_impl(&dword_1C0771000, v31, (os_log_type_t)v63, "BiomeInteractionEventSourceAdapter [events]: Biome unexpectedly emitted %s event on %s, which is earlier than publisher start date %s.", (uint8_t *)v34, 0x20u);
      v41 = v67;
      swift_arrayDestroy();
      MEMORY[0x1C3BA8270](v41, -1, -1);
      MEMORY[0x1C3BA8270](v34, -1, -1);
      swift_unknownObjectRelease();

      return 0;
    }
    (*(void (**)(_BYTE *, uint64_t))(v20 + 8))(v25, v19);
    swift_unknownObjectRelease_n();
    (*(void (**)(_BYTE *, uint64_t))(v30 + 8))(v17, v29);

LABEL_13:
    swift_unknownObjectRelease();
    return 0;
  }
  if ((sub_1C106AD44() & 1) == 0)
  {
    swift_unknownObjectRelease();
    return 1;
  }
  v64 = v27;
  if (qword_1ED760048 != -1)
    swift_once();
  v42 = sub_1C106F544();
  sub_1C079E000(v42, (uint64_t)qword_1ED78D800);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v20 + 16))(v22, v68, v19);
  v43 = v70;
  v44 = v67;
  v45 = a4;
  v46 = v69;
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v70 + 16))(v67, v45, v69);
  swift_unknownObjectRetain_n();
  v47 = sub_1C106F538();
  v48 = sub_1C1070390();
  v49 = v48;
  if (os_log_type_enabled(v47, v48))
  {
    v50 = swift_slowAlloc();
    v51 = swift_slowAlloc();
    v68 = a1;
    v52 = v46;
    v53 = v51;
    v72 = (_BYTE *)v51;
    *(_DWORD *)v50 = 136315650;
    v63 = v49;
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v65 + 16))(v66, v22, a5);
    v54 = sub_1C106FB5C();
    v71 = sub_1C0788DAC(v54, v55, (uint64_t *)&v72);
    sub_1C10705AC();
    swift_bridgeObjectRelease();
    (*(void (**)(_BYTE *, uint64_t))(v20 + 8))(v22, v19);
    *(_WORD *)(v50 + 12) = 2080;
    sub_1C0815044();
    v56 = sub_1C1070C0C();
    v71 = sub_1C0788DAC(v56, v57, (uint64_t *)&v72);
    sub_1C10705AC();
    swift_unknownObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v50 + 22) = 2080;
    v58 = v67;
    v59 = sub_1C1070C0C();
    v71 = sub_1C0788DAC(v59, v60, (uint64_t *)&v72);
    sub_1C10705AC();
    swift_bridgeObjectRelease();
    (*(void (**)(_BYTE *, uint64_t))(v70 + 8))(v58, v52);
    _os_log_impl(&dword_1C0771000, v47, (os_log_type_t)v63, "BiomeInteractionEventSourceAdapter [events]: Biome unexpectedly emitted %s event on %s, which is later than publisher end date %s.", (uint8_t *)v50, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x1C3BA8270](v53, -1, -1);
    MEMORY[0x1C3BA8270](v50, -1, -1);
    swift_unknownObjectRelease();
  }
  else
  {
    swift_unknownObjectRelease();
    (*(void (**)(_BYTE *, uint64_t))(v20 + 8))(v22, v19);
    swift_unknownObjectRelease_n();
    (*(void (**)(_BYTE *, uint64_t))(v43 + 8))(v44, v46);
  }

  return 0;
}

void sub_1C0881EBC(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, void *a4@<X3>, uint64_t a5@<X4>, _QWORD *a6@<X8>)
{
  sub_1C0880F10(a1, a2, a3, a4, a5, a6);
}

unint64_t sub_1C0881ED0()
{
  unint64_t result;

  result = qword_1EF632F00;
  if (!qword_1EF632F00)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10A457C, &unk_1E7A20630);
    atomic_store(result, (unint64_t *)&qword_1EF632F00);
  }
  return result;
}

uint64_t sub_1C0881F0C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C0881F38@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_1C08815C8(a1, *(_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 40), a2);
}

uint64_t sub_1C0881F44()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  void (*v12)(uint64_t, uint64_t);

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v0 + 24);
  v3 = sub_1C106ADE0();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(unsigned __int8 *)(v4 + 80);
  v6 = (v5 + 32) & ~v5;
  v7 = v6 + *(_QWORD *)(v4 + 64);
  v9 = *(_QWORD *)(type metadata accessor for BiomeInteractionEventSourceAdapter(0, v1, v2, v8) - 8);
  v10 = (v7 + *(unsigned __int8 *)(v9 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v11 = (*(_QWORD *)(v9 + 64) + v5 + v10) & ~v5;
  v12 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
  v12(v0 + v6, v3);
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0 + v10, v1);
  v12(v0 + v11, v3);
  return swift_deallocObject();
}

uint64_t sub_1C088201C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;

  v3 = *(_QWORD *)(v1 + 16);
  v4 = *(_QWORD *)(v1 + 24);
  v5 = *(_QWORD *)(sub_1C106ADE0() - 8);
  v6 = *(unsigned __int8 *)(v5 + 80);
  v7 = (v6 + 32) & ~v6;
  v8 = v7 + *(_QWORD *)(v5 + 64);
  v10 = *(_QWORD *)(type metadata accessor for BiomeInteractionEventSourceAdapter(0, v3, v4, v9) - 8);
  v11 = (v8 + *(unsigned __int8 *)(v10 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  return sub_1C08817D0(a1, v1 + v7, v1 + v11, v1 + ((*(_QWORD *)(v10 + 64) + v6 + v11) & ~v6), v3, v4);
}

uint64_t sub_1C08820BC()
{
  uint64_t v0;
  uint64_t v1;

  v1 = sub_1C07ACF80(&qword_1ED744AB8);
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

void sub_1C0882120(_QWORD *a1@<X8>)
{
  sub_1C07ACF80(&qword_1ED744AB8);
  sub_1C093F42C(a1);
}

void sub_1C0882168(__int128 *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  __int128 v9;
  uint64_t v10;
  _QWORD *v11;

  v9 = *a1;
  v10 = *((_QWORD *)a1 + 2);
  *(_QWORD *)(v5 + OBJC_IVAR____TtC24IntelligencePlatformCore15BiomeSignalView____lazy_storage___featureNames) = 0;
  *(_OWORD *)(v5 + 16) = v9;
  *(_QWORD *)(v5 + 32) = v10;
  *(_OWORD *)(v5 + 40) = *(__int128 *)((char *)a1 + 24);
  sub_1C0882E74(a2, v5 + OBJC_IVAR____TtC24IntelligencePlatformCore15BiomeSignalView_config);
  v11 = (_QWORD *)(v5 + OBJC_IVAR____TtC24IntelligencePlatformCore15BiomeSignalView_streamDefinition);
  *v11 = a3;
  v11[1] = a4;
  v11[2] = a5;
  sub_1C077671C();
}

uint64_t sub_1C08821E0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD v6[8];

  v1 = v0[2];
  v2 = v0[3];
  v3 = v0[5];
  v4 = v0[6];
  v6[2] = v0[4];
  v6[3] = v3;
  v6[4] = v4;
  v6[5] = v1;
  v6[6] = v2;
  sub_1C07767B4();
  swift_bridgeObjectRetain_n();
  swift_retain_n();
  sub_1C077FF50((uint64_t)sub_1C0882D94, (uint64_t)v6);
  sub_1C07767AC();
  swift_release_n();
  return swift_bridgeObjectRelease_n();
}

void sub_1C088226C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = OBJC_IVAR____TtC24IntelligencePlatformCore15BiomeSignalView____lazy_storage___featureNames;
  if (!*(_QWORD *)(v0 + OBJC_IVAR____TtC24IntelligencePlatformCore15BiomeSignalView____lazy_storage___featureNames))
  {
    v2 = _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    *(_QWORD *)(v0 + v1) = sub_1C08992B8(v2);
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    swift_bridgeObjectRelease();
  }
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C077671C();
}

void sub_1C08822D8()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  _BOOL4 v13;
  uint64_t v14;
  uint8_t *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  int64_t v23;
  __int128 v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  BOOL v28;
  unint64_t v29;
  char v30;
  int64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  char v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  id v46;
  NSObject *v47;
  os_log_type_t v48;
  uint64_t v49;
  _QWORD *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  __int128 v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  int64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  int64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69[5];

  v3 = v0;
  v5 = *(_QWORD *)(v0 + OBJC_IVAR____TtC24IntelligencePlatformCore15BiomeSignalView_config);
  v4 = *(_QWORD *)(v0 + OBJC_IVAR____TtC24IntelligencePlatformCore15BiomeSignalView_config + 8);
  v6 = *(_QWORD *)(v3 + OBJC_IVAR____TtC24IntelligencePlatformCore15BiomeSignalView_streamDefinition + 16);
  swift_retain();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C07767B4();
  v57 = v5;
  v62 = v3;
  v7 = sub_1C0E04B90(v5, v4, v6, v3);
  v8 = v1;
  v64 = v6;
  swift_bridgeObjectRelease();
  v58 = v4;
  swift_bridgeObjectRelease();
  if (qword_1ED762AF0 == -1)
    goto LABEL_2;
LABEL_46:
  swift_once();
LABEL_2:
  v9 = sub_1C106F544();
  v10 = sub_1C079E000(v9, (uint64_t)qword_1ED78D9E0);
  swift_bridgeObjectRetain_n();
  v61 = v10;
  v11 = sub_1C106F538();
  v12 = sub_1C1070378();
  v13 = sub_1C078ABF4(v12);
  v14 = MEMORY[0x1E0DEE9B8];
  LOBYTE(v63) = v7;
  if (v13)
  {
    v15 = (uint8_t *)sub_1C0775854();
    v16 = sub_1C0775854();
    *(_DWORD *)v15 = 136315138;
    v69[0] = v16;
    sub_1C07D4B70(0, (unint64_t *)&qword_1ED758D30);
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    v17 = sub_1C106F94C();
    v19 = v18;
    swift_bridgeObjectRelease();
    v69[4] = sub_1C0788DAC(v17, v19, v69);
    sub_1C10705AC();
    sub_1C07758A4();
    sub_1C077B5B4();
    _os_log_impl(&dword_1C0771000, v11, (os_log_type_t)v2, "%s", v15, 0xCu);
    swift_arrayDestroy();
    sub_1C0776778();
  }

  sub_1C07758A4();
  v20 = (_QWORD *)v62;
  v59 = v64 + 64;
  v21 = 1 << *(_BYTE *)(v64 + 32);
  v22 = -1;
  if (v21 < 64)
    v22 = ~(-1 << v21);
  v2 = v22 & *(_QWORD *)(v64 + 64);
  v60 = (unint64_t)(v21 + 63) >> 6;
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  v23 = 0;
  *(_QWORD *)&v24 = 136315394;
  v55 = v24;
  v54 = v14 + 8;
  if (v2)
  {
LABEL_7:
    v25 = __clz(__rbit64(v2));
    v26 = (v2 - 1) & v2;
    v27 = v25 | (v23 << 6);
    goto LABEL_28;
  }
  while (1)
  {
    v28 = __OFADD__(v23++, 1);
    if (v28)
    {
      __break(1u);
      goto LABEL_46;
    }
    if (v23 >= v60)
      goto LABEL_43;
    v29 = *(_QWORD *)(v59 + 8 * v23);
    if (!v29)
      break;
LABEL_27:
    v26 = (v29 - 1) & v29;
    v27 = __clz(__rbit64(v29)) + (v23 << 6);
LABEL_28:
    v32 = (uint64_t *)(*(_QWORD *)(v64 + 48) + 16 * v27);
    v33 = *v32;
    v34 = v32[1];
    v35 = *(_QWORD *)(v7 + 16);
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    if (!v35)
      goto LABEL_41;
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    v36 = sub_1C077D774(v33, v34);
    if ((v37 & 1) == 0)
    {
      sub_1C077589C();
LABEL_41:
      swift_bridgeObjectRelease();
      sub_1C1070774();
      swift_bridgeObjectRelease();
      sub_1C07767B4();
      sub_1C106FC94();
      swift_bridgeObjectRelease();
      sub_1C106FC94();
      sub_1C106FC94();
      sub_1C0775834();
      sub_1C106FC94();
      sub_1C0882DC0();
      swift_allocError();
      *(_QWORD *)v51 = 0x69566C616E676953;
      *(_QWORD *)(v51 + 8) = 0xEB00000000207765;
      *(_BYTE *)(v51 + 16) = 3;
      swift_willThrow();
LABEL_44:
      swift_release();
      return;
    }
    v65 = v26;
    v66 = v23;
    v38 = *(id *)(*(_QWORD *)(v7 + 56) + 8 * v36);
    sub_1C0775834();
    v67 = v8;
    v68 = v33;
    v39 = v20[2];
    v40 = v20[3];
    v41 = v20[4];
    v42 = v20[5];
    v43 = v20[6];
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    swift_bridgeObjectRetain_n();
    v44 = swift_retain_n();
    v45 = (void *)MEMORY[0x1C3BA79F4](v44);
    LOBYTE(v52) = 1;
    sub_1C0A1CC50((uint64_t)v38, v41, v42, v43, v39, v40, v68, v34, 0, 0, 0, v52, v53, v54, v55, *((uint64_t *)&v55 + 1), v56, v57, v58,
      v59,
      v60,
      v61,
      v62,
      v63);
    v8 = v67;
    if (v67)
    {
      objc_autoreleasePoolPop(v45);
      swift_release();
      sub_1C077B5B4();
      swift_bridgeObjectRelease();
      sub_1C0775834();

      sub_1C077971C();
      sub_1C07758A4();
      return;
    }
    objc_autoreleasePoolPop(v45);
    sub_1C0775834();
    sub_1C077B5B4();
    sub_1C077971C();
    sub_1C07758A4();
    swift_retain();
    v46 = v38;
    v47 = sub_1C106F538();
    v48 = sub_1C1070378();
    if (sub_1C078ABF4(v48))
    {
      v49 = sub_1C0775854();
      v50 = (_QWORD *)sub_1C0775854();
      v69[0] = sub_1C0775854();
      *(_DWORD *)v49 = v55;
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      *(_QWORD *)(v49 + 4) = sub_1C0788DAC(v57, v58, v69);
      swift_release();
      sub_1C077589C();
      *(_WORD *)(v49 + 12) = 2112;
      *(_QWORD *)(v49 + 14) = v46;
      *v50 = v46;
      _os_log_impl(&dword_1C0771000, v47, (os_log_type_t)v42, "SignalView %s: Wrote %@", (uint8_t *)v49, 0x16u);
      sub_1C07ACF80(&qword_1ED7614A0);
      swift_arrayDestroy();
      sub_1C0776778();
    }

    swift_release();
    v7 = v63;
    v23 = v66;
    v2 = v65;
    if (v65)
      goto LABEL_7;
  }
  sub_1C078F254();
  if (v30 == v28)
    goto LABEL_43;
  sub_1C07ADBA0();
  if (v29)
    goto LABEL_26;
  sub_1C078F254();
  if (v30 == v28)
    goto LABEL_43;
  sub_1C07ADBA0();
  if (v29)
    goto LABEL_26;
  sub_1C078F254();
  if (v30 == v28)
    goto LABEL_43;
  sub_1C07ADBA0();
  if (v29)
    goto LABEL_26;
  sub_1C078F254();
  if (v30 == v28)
    goto LABEL_43;
  sub_1C07ADBA0();
  if (v29)
    goto LABEL_26;
  sub_1C078F254();
  if (v30 == v28)
  {
LABEL_43:
    sub_1C077589C();
    goto LABEL_44;
  }
  sub_1C07ADBA0();
  if (v29)
  {
LABEL_26:
    v23 = v31;
    goto LABEL_27;
  }
  while (1)
  {
    v23 = v31 + 1;
    if (__OFADD__(v31, 1))
      break;
    if (v23 >= v60)
      goto LABEL_43;
    v29 = *(_QWORD *)(v59 + 8 * v23);
    ++v31;
    if (v29)
      goto LABEL_27;
  }
  __break(1u);
}

uint64_t sub_1C08829A0(uint64_t a1)
{
  uint64_t v2;
  void *v3;
  void *v4;
  void *v5;
  uint64_t v6;
  void *v7;
  id v8;
  uint64_t v10;
  _QWORD aBlock[6];

  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  v2 = swift_retain();
  v3 = (void *)MEMORY[0x1C3BA79F4](v2);
  v4 = (void *)objc_opt_self();
  v5 = (void *)sub_1C106FAF0();
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = sub_1C0882DFC;
  *(_QWORD *)(v6 + 24) = a1;
  aBlock[4] = sub_1C0882E28;
  aBlock[5] = v6;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1C088311C;
  aBlock[3] = &unk_1E7A11360;
  v7 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  LOBYTE(v10) = 0;
  v8 = objc_msgSend(v4, sel_iterateStream_device_account_bookmark_startTime_endTime_maxEvents_lastN_reversed_body_, v5, 0, 0, 0, 0, 0, 0, 0, v10, v7);
  _Block_release(v7);

  objc_autoreleasePoolPop(v3);
  swift_release();
  swift_unknownObjectRelease();
  LOBYTE(aBlock[0]) = 1;
  sub_1C106F718();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C0882B20(void *a1)
{
  id v2;
  _QWORD v4[4];

  v4[3] = sub_1C07D4B70(0, &qword_1EF64A850);
  v4[0] = a1;
  v2 = a1;
  sub_1C106F724();
  return _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v4);
}

void sub_1C0882B7C()
{
  uint64_t v0;

  swift_release();
  swift_bridgeObjectRelease();
  sub_1C07767AC();
  sub_1C0882EB8(v0 + OBJC_IVAR____TtC24IntelligencePlatformCore15BiomeSignalView_config);
  swift_bridgeObjectRelease();
  sub_1C07767AC();
  swift_bridgeObjectRelease();
  sub_1C077671C();
}

uint64_t sub_1C0882BE8()
{
  sub_1C0882B7C();
  return swift_deallocClassInstance();
}

uint64_t sub_1C0882C0C()
{
  return type metadata accessor for BiomeSignalView();
}

uint64_t type metadata accessor for BiomeSignalView()
{
  uint64_t result;

  result = qword_1EF632F38;
  if (!qword_1EF632F38)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1C0882C4C()
{
  uint64_t result;
  unint64_t v1;

  result = _s10ViewConfigVMa();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_1C0882CD8()
{
  uint64_t v0;

  sub_1C08822D8();
  return sub_1C0882DB4(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1C0882D24()
{
  uint64_t v0;

  sub_1C08821E0();
  return sub_1C0882D8C(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1C0882D54@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;

  return sub_1C0882E30(*v1 + OBJC_IVAR____TtC24IntelligencePlatformCore15BiomeSignalView_config, a1);
}

void sub_1C0882D6C()
{
  sub_1C088226C();
}

uint64_t sub_1C0882D8C(uint64_t (*a1)(void))
{
  return a1();
}

void sub_1C0882D94()
{
  sub_1C0A1B374();
}

uint64_t sub_1C0882DB4(uint64_t (*a1)(void))
{
  return a1();
}

unint64_t sub_1C0882DC0()
{
  unint64_t result;

  result = qword_1EF64BFD0;
  if (!qword_1EF64BFD0)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10CD800, &unk_1E7A41D68);
    atomic_store(result, (unint64_t *)&qword_1EF64BFD0);
  }
  return result;
}

uint64_t sub_1C0882DFC(void *a1)
{
  return sub_1C0882B20(a1);
}

uint64_t sub_1C0882E04()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C0882E28(uint64_t a1)
{
  uint64_t v1;

  return sub_1C088317C(a1, *(uint64_t (**)(void))(v1 + 16));
}

uint64_t sub_1C0882E30(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = _s10ViewConfigVMa();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C0882E74(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = _s10ViewConfigVMa();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C0882EB8(uint64_t a1)
{
  uint64_t v2;

  v2 = _s10ViewConfigVMa();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t BiomeStreamStore.init(stream:bookmark:device:account:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, _QWORD *a6@<X8>)
{
  *a6 = result;
  a6[1] = a2;
  a6[2] = a3;
  a6[3] = a4;
  a6[4] = a5;
  return result;
}

void BiomeStreamStore.forEach(_:)(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  void *v10;
  uint64_t v11;
  void *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v6 = v2[2];
  v5 = v2[3];
  v7 = v2[4];
  v8 = (void *)MEMORY[0x1C3BA79F4]();
  v9 = (void *)objc_opt_self();
  v10 = (void *)sub_1C106FAF0();
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = a2;
  v12 = sub_1C07986D8((uint64_t)sub_1C088311C, v14, v15, v16, v17, MEMORY[0x1E0C809B0], 1107296256, v18, v19);
  swift_retain();
  swift_release();
  v13 = sub_1C07A08C4(v9, sel_iterateStream_device_account_bookmark_startTime_endTime_maxEvents_lastN_reversed_body_, (uint64_t)v10, v5, v7, v6);
  _Block_release(v12);

  objc_autoreleasePoolPop(v8);
  sub_1C07A3790();
}

void BiomeStreamStore.forEach(_:)()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v1 = v0[2];
  v2 = v0[3];
  v3 = v0[4];
  v4 = (void *)MEMORY[0x1C3BA79F4]();
  v5 = (void *)objc_opt_self();
  v6 = (void *)sub_1C106FAF0();
  v7 = sub_1C07986D8((uint64_t)sub_1C088311C, v9, v10, v11, v12, MEMORY[0x1E0C809B0], 1107296256, v13, v14);
  swift_retain();
  swift_release();
  v8 = sub_1C07A08C4(v5, sel_iterateStream_device_account_bookmark_startTime_endTime_maxEvents_lastN_reversed_body_, (uint64_t)v6, v2, v3, v1);
  _Block_release(v7);

  objc_autoreleasePoolPop(v4);
  sub_1C07A3790();
}

void sub_1C088311C(uint64_t a1, void *a2, double a3)
{
  void (*v5)(double);
  id v6;

  v5 = *(void (**)(double))(a1 + 32);
  swift_retain();
  v6 = a2;
  v5(a3);
  swift_release();

}

uint64_t sub_1C088317C(uint64_t a1, uint64_t (*a2)(void))
{
  return a2();
}

uint64_t sub_1C088319C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C08831C0()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 16))();
}

void BiomeStreamStore.prune(withReason:)(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;

  v2 = (void *)MEMORY[0x1C3BA79F4]();
  v3 = (void *)objc_opt_self();
  v4 = (void *)sub_1C106FAF0();
  objc_msgSend(v3, sel_pruneStream_withReason_, v4, a1);

  objc_autoreleasePoolPop(v2);
}

void destroy for BiomeStreamStore(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();

}

_QWORD *initializeWithCopy for BiomeStreamStore(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  void *v4;
  void *v5;
  id v6;
  id v7;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = (void *)a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = (void *)a2[4];
  a1[4] = v5;
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  swift_unknownObjectRetain();
  v6 = v4;
  v7 = v5;
  return a1;
}

_QWORD *assignWithCopy for BiomeStreamStore(_QWORD *a1, _QWORD *a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;

  *a1 = *a2;
  a1[1] = a2[1];
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  v4 = (void *)a1[3];
  v5 = (void *)a2[3];
  a1[3] = v5;
  v6 = v5;

  v7 = (void *)a1[4];
  v8 = (void *)a2[4];
  a1[4] = v8;
  v9 = v8;

  return a1;
}

uint64_t assignWithTake for BiomeStreamStore(uint64_t a1, uint64_t a2)
{
  void *v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_unknownObjectRelease();

  v4 = *(void **)(a1 + 32);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);

  return a1;
}

ValueMetadata *type metadata accessor for BiomeStreamStore()
{
  return &type metadata for BiomeStreamStore;
}

uint64_t sub_1C08833E4(uint64_t a1, void *a2)
{
  id v3;

  sub_1C1070E04();
  sub_1C106FB14();
  v3 = a2;
  sub_1C106FC28();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1C0883444(void *a1)
{
  id v2;

  sub_1C1070DF8();
  sub_1C1070E04();
  sub_1C106FB14();
  v2 = a1;
  sub_1C106FC28();

  swift_bridgeObjectRelease();
  return sub_1C1070E4C();
}

uint64_t sub_1C08834C4()
{
  void **v0;

  return sub_1C0883444(*v0);
}

uint64_t sub_1C08834CC(uint64_t a1)
{
  void **v1;

  return sub_1C08833E4(a1, *v1);
}

uint64_t sub_1C08834D4()
{
  uint64_t v0;

  v0 = sub_1C10708C4();
  MEMORY[0x1E0C80A78](v0);
  sub_1C1070D50();
  sub_1C07ACF80(&qword_1ED75DFA8);
  swift_allocObject();
  return sub_1C106E5B4();
}

void sub_1C088359C()
{
  void *v0;

  v0 = (void *)MEMORY[0x1C3BA79F4]();
  sub_1C106E5C0();
  sub_1C106E4B8();
  swift_release();
  objc_autoreleasePoolPop(v0);
}

void sub_1C0883648(uint64_t a1, void *a2)
{
  id v2;

  v2 = a2;
  sub_1C106F1E4();

}

id sub_1C08836B8(uint64_t a1, uint64_t a2)
{
  void *v2;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  objc_super v13;

  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = a1;
  *(_QWORD *)(v5 + 24) = a2;
  v6 = v2;
  swift_retain();
  v7 = sub_1C08834D4();
  v8 = (uint64_t *)&v6[OBJC_IVAR___GDBiomeStreamStoreCache_inner];
  *v8 = v7;
  v8[1] = v9;
  v8[2] = v10;

  v13.receiver = v6;
  v13.super_class = (Class)GDBiomeStreamStoreCache;
  v11 = objc_msgSendSuper2(&v13, sel_init);
  swift_release();
  return v11;
}

uint64_t sub_1C08837B8()
{
  sub_1C0779758();
  swift_retain();
  sub_1C106E5C0();
  swift_release();
  swift_release();
  sub_1C106E4B8();
  return swift_release();
}

uint64_t sub_1C0883844()
{
  return sub_1C106F208();
}

void __swiftcall GDBiomeStreamStoreCache.init()(GDBiomeStreamStoreCache *__return_ptr retstr)
{
  objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
}

void GDBiomeStreamStoreCache.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

unint64_t type metadata accessor for GDBiomeStreamStoreCache()
{
  unint64_t result;

  result = qword_1EF632FF0;
  if (!qword_1EF632FF0)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EF632FF0);
  }
  return result;
}

void sub_1C088396C(uint64_t a1)
{
  uint64_t v1;

  sub_1C0883648(a1, *(void **)(v1 + 16));
}

uint64_t sub_1C0883988()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD))(v0 + 24))(*(_QWORD *)(v0 + 40));
}

uint64_t sub_1C08839B0()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

uint64_t sub_1C08839D4()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C08839F8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  sub_1C07ACF80(&qword_1ED7566A0);
  swift_allocObject();
  sub_1C106F214();
  sub_1C07ACF80(&qword_1ED756660);
  swift_allocObject();
  result = sub_1C106E4C4();
  *a1 = result;
  return result;
}

id sub_1C0883A6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void *v4;
  void *v7;
  void *v8;
  id v9;

  v7 = (void *)sub_1C106FAF0();
  swift_bridgeObjectRelease();
  if (a4)
  {
    v8 = (void *)sub_1C106F934();
    swift_bridgeObjectRelease();
  }
  else
  {
    v8 = 0;
  }
  v9 = objc_msgSend(v4, sel_initWithDomain_code_userInfo_, v7, a3, v8);

  return v9;
}

uint64_t destroy for BiomeStreamStoreCache()
{
  swift_release();
  return swift_release();
}

uint64_t _s24IntelligencePlatformCore21BiomeStreamStoreCacheVwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = v3;
  swift_retain();
  sub_1C0779758();
  return a1;
}

_QWORD *assignWithCopy for BiomeStreamStoreCache(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;

  *a1 = *a2;
  swift_retain();
  swift_release();
  v4 = a2[2];
  a1[1] = a2[1];
  a1[2] = v4;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for BiomeStreamStoreCache(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  swift_release();
  v4 = *(_QWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = v4;
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for BiomeStreamStoreCache()
{
  return &type metadata for BiomeStreamStoreCache;
}

void **assignWithCopy for BiomeStreamStoreCache.Key(void **a1, void **a2)
{
  void *v3;
  void *v4;
  id v5;

  v3 = *a2;
  v4 = *a1;
  *a1 = *a2;
  v5 = v3;

  return a1;
}

void **assignWithTake for BiomeStreamStoreCache.Key(void **a1, void **a2)
{
  void *v3;

  v3 = *a1;
  *a1 = *a2;

  return a1;
}

ValueMetadata *type metadata accessor for BiomeStreamStoreCache.Key()
{
  return &type metadata for BiomeStreamStoreCache.Key;
}

unint64_t sub_1C0883CA8()
{
  unint64_t result;

  result = qword_1ED7558E0;
  if (!qword_1ED7558E0)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C107E3CC, &type metadata for BiomeStreamStoreCache.Key);
    atomic_store(result, (unint64_t *)&qword_1ED7558E0);
  }
  return result;
}

uint64_t sub_1C0883CE8()
{
  sub_1C106FB14();
  sub_1C106FC28();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C0883D28()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t);
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __n128 *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __n128 *v21;
  uint64_t v22;
  uint64_t result;
  char v24;
  char v25;
  char v26;
  char v27;
  __int128 v28;
  unint64_t v29;
  __int128 v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;

  sub_1C0779670();
  v33 = v0;
  v34 = v1;
  v3 = v2;
  v4 = sub_1C0776744();
  v5 = (void (*)(uint64_t))MEMORY[0x1E0D3BB08];
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v28 - v10;
  sub_1C08930B4((uint64_t)&v28 - v10);
  sub_1C106D1A4();
  sub_1C07803F8(&qword_1ED75E7D8, v5);
  v12 = sub_1C07961C8();
  sub_1C07B7158();
  if ((v12 & 1) != 0)
  {
    sub_1C079E2E0((uint64_t)v11);
    sub_1C07ACF80(&qword_1ED75D358);
    v13 = swift_allocObject();
    *(_OWORD *)(v13 + 16) = xmmword_1C107DE20;
    sub_1C07ACF80(&qword_1ED75E838);
    v14 = sub_1C078C1F0();
    v29 = ((*(unsigned __int8 *)(*(_QWORD *)(v14 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v14 - 8) + 80))
        + 2 * *(_QWORD *)(*(_QWORD *)(v14 - 8) + 72);
    v15 = (__n128 *)sub_1C07BAA6C();
    sub_1C0892E34(v15, (__n128)xmmword_1C1078FC0);
    sub_1C106DDEC();
    sub_1C106DE58();
    *(_QWORD *)(v13 + 56) = &type metadata for ContactHandleBlockingFunction;
    *(_QWORD *)(v13 + 64) = &protocol witness table for ContactHandleBlockingFunction;
    v16 = MEMORY[0x1E0DEE9D8];
    *(_QWORD *)(v13 + 32) = MEMORY[0x1E0DEE9D8];
    *(_QWORD *)(v13 + 40) = v15;
    v17 = sub_1C07BAA6C();
    v28 = xmmword_1C1079220;
    *(_OWORD *)(v17 + 16) = xmmword_1C1079220;
    swift_retain();
    sub_1C106DE70();
    *(_QWORD *)(v13 + 96) = &type metadata for VisualIdentifierBlockingFunction;
    *(_QWORD *)(v13 + 104) = &protocol witness table for VisualIdentifierBlockingFunction;
    *(_QWORD *)(v13 + 72) = v16;
    *(_QWORD *)(v13 + 80) = v17;
    *(_QWORD *)(v13 + 88) = v3;
    v18 = sub_1C07BAA6C();
    *(_OWORD *)(v18 + 16) = v28;
    sub_1C106DE70();
    *(_QWORD *)(v13 + 136) = &type metadata for SimpleBlockingFunction;
    *(_QWORD *)(v13 + 144) = &protocol witness table for SimpleBlockingFunction;
    *(_QWORD *)(v13 + 112) = v16;
    *(_QWORD *)(v13 + 120) = v18;
    v19 = sub_1C07BAA6C();
    *(_OWORD *)(v19 + 16) = xmmword_1C107A8D0;
    sub_1C106E248();
    sub_1C106DD2C();
    sub_1C106E3B0();
    sub_1C106DD20();
    sub_1C106DCE4();
    sub_1C106DD38();
    sub_1C106DD74();
    *(_QWORD *)(v13 + 176) = &type metadata for SimpleBlockingFunction;
    *(_QWORD *)(v13 + 184) = &protocol witness table for SimpleBlockingFunction;
    *(_QWORD *)(v13 + 152) = v19;
    *(_QWORD *)(v13 + 160) = v16;
    v20 = sub_1C07BAA6C();
    *(_OWORD *)(v20 + 16) = v30;
    sub_1C106DEB8();
    sub_1C106E0EC();
    *(_QWORD *)(v13 + 216) = &type metadata for SimpleBlockingFunction;
    *(_QWORD *)(v13 + 224) = &protocol witness table for SimpleBlockingFunction;
    *(_QWORD *)(v13 + 192) = v20;
    *(_QWORD *)(v13 + 200) = v16;
    return v13;
  }
  sub_1C106D18C();
  sub_1C07961C8();
  sub_1C078C8A0();
  sub_1C106CDD8();
  sub_1C07961C8();
  sub_1C078C8A0();
  sub_1C106CFD0();
  sub_1C07961C8();
  sub_1C078C8A0();
  sub_1C106D1B0();
  sub_1C07961C8();
  sub_1C078C8A0();
  _s24IntelligencePlatformCore15DocumentMatcherV11entityClass0aB006EntityG0Vvg_0();
  sub_1C07961C8();
  sub_1C078C8A0();
  _s24IntelligencePlatformCore15LocationMatcherV11entityClass0aB006EntityG0Vvg_0();
  sub_1C07961C8();
  sub_1C078C8A0();
  _s24IntelligencePlatformCore19OrganizationMatcherV11entityClass0aB006EntityG0Vvg_0();
  sub_1C07961C8();
  sub_1C078C8A0();
  sub_1C106D1EC();
  sub_1C07961C8();
  sub_1C078C8A0();
  _s24IntelligencePlatformCore12EventMatcherV11entityClass0aB006EntityG0Vvg_0();
  sub_1C07961C8();
  sub_1C078C8A0();
  if ((v12 & 1) != 0)
    goto LABEL_4;
  sub_1C106CFD0();
  sub_1C07961C8();
  sub_1C078C8A0();
  sub_1C106CDE4();
  sub_1C07961C8();
  sub_1C078C8A0();
  sub_1C106CE44();
  v12 = sub_1C106CEF8();
  sub_1C07B7158();
  sub_1C0892FC8();
  v25 = v24;
  sub_1C077960C();
  if ((v25 & 1) != 0)
    goto LABEL_4;
  sub_1C106CDD8();
  v12 = sub_1C106CEF8();
  sub_1C07B7158();
  sub_1C0892FC8();
  v27 = v26;
  sub_1C077960C();
  if ((v27 & 1) != 0 || (sub_1C106D0E4(), sub_1C07961C8(), sub_1C078C8A0(), (v12 & 1) != 0))
  {
LABEL_4:
    sub_1C079E2E0((uint64_t)v11);
    sub_1C07ACF80(&qword_1ED75D358);
    v13 = sub_1C0787A5C();
    sub_1C0892E34((__n128 *)v13, (__n128)xmmword_1C1079220);
    sub_1C07ACF80(&qword_1ED75E838);
    sub_1C078C1F0();
    v21 = (__n128 *)sub_1C0892C4C();
    sub_1C0892D28(v21);
    sub_1C106E218();
    *(_QWORD *)(v13 + 56) = &type metadata for SimpleBlockingFunction;
    *(_QWORD *)(v13 + 64) = &protocol witness table for SimpleBlockingFunction;
    v22 = MEMORY[0x1E0DEE9D8];
    *(_QWORD *)(v13 + 32) = v12;
    *(_QWORD *)(v13 + 40) = v22;
    return v13;
  }
  sub_1C106CDFC();
  sub_1C07961C8();
  sub_1C078C8A0();
  sub_1C106D108();
  sub_1C07961C8();
  sub_1C078C8A0();
  sub_1C106D1B0();
  sub_1C07961C8();
  sub_1C078C8A0();
  sub_1C106CDB4();
  sub_1C07961C8();
  sub_1C078C8A0();
  sub_1C106CE50();
  sub_1C07961C8();
  sub_1C078C8A0();
  sub_1C106D180();
  sub_1C07961C8();
  sub_1C078C8A0();
  sub_1C106CE8C();
  sub_1C07961C8();
  sub_1C078C8A0();
  sub_1C106CDC0();
  sub_1C07961C8();
  sub_1C078C8A0();
  sub_1C106CFE8();
  sub_1C07961C8();
  sub_1C078C8A0();
  sub_1C106CF04();
  sub_1C07961C8();
  sub_1C078C8A0();
  sub_1C08930B4((uint64_t)v7);
  v31 = 0;
  v32 = 0xE000000000000000;
  sub_1C1070774();
  sub_1C106FC94();
  sub_1C106D0FC();
  sub_1C07A08D0();
  sub_1C07767AC();
  sub_1C106FC94();
  result = sub_1C0892E90();
  __break(1u);
  return result;
}

uint64_t sub_1C0884620()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t);
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  double v7;
  uint64_t v8;
  char *v9;
  char v10;
  void (*v11)(char *, uint64_t);
  uint64_t result;
  uint64_t v13;

  v1 = sub_1C0776744();
  v2 = (void (*)(uint64_t))MEMORY[0x1E0D3BB08];
  v3 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v13 - v8;
  (*(void (**)(char *, uint64_t, uint64_t, double))(v3 + 16))((char *)&v13 - v8, v0, v1, v7);
  _s24IntelligencePlatformCore15LocationMatcherV11entityClass0aB006EntityG0Vvg_0();
  sub_1C07803F8(&qword_1ED75E7D8, v2);
  v10 = sub_1C106FAA8();
  v11 = *(void (**)(char *, uint64_t))(v3 + 8);
  v11(v5, v1);
  v11(v9, v1);
  if ((v10 & 1) == 0)
    return MEMORY[0x1E0DEE9D8];
  sub_1C07ACF80(&qword_1ED75D348);
  result = sub_1C0787A5C();
  *(_OWORD *)(result + 16) = xmmword_1C1079220;
  *(_QWORD *)(result + 56) = &type metadata for LocationGeoHashBlockingFunction;
  *(_QWORD *)(result + 64) = &protocol witness table for LocationGeoHashBlockingFunction;
  return result;
}

void Blocker.config.getter(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_1C0892C20(v1, a1, (uint64_t (*)(_QWORD))type metadata accessor for Configuration);
}

uint64_t Blocker.entityClass.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = v1 + *(int *)(sub_1C0892D3C() + 20);
  v3 = sub_1C0776744();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(v0, v2, v3);
}

uint64_t type metadata accessor for Blocker()
{
  uint64_t result;

  result = qword_1ED75CC50;
  if (!qword_1ED75CC50)
    return swift_getSingletonMetadata();
  return result;
}

void Blocker.source.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = sub_1C0892D3C();
  sub_1C0892F3C(v0 + *(int *)(v1 + 24), v2, (uint64_t (*)(_QWORD))type metadata accessor for Source);
  sub_1C0778534();
}

void Blocker.stageName.getter()
{
  _BYTE *v0;
  uint64_t v1;

  *v0 = *(_BYTE *)(v1 + *(int *)(sub_1C0892D3C() + 28));
  sub_1C0778534();
}

void Blocker.stores.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = sub_1C0892D3C();
  sub_1C0892F3C(v0 + *(int *)(v1 + 32), v2, (uint64_t (*)(_QWORD))type metadata accessor for PhaseStores);
  sub_1C0778534();
}

void Blocker.pipelineType.getter()
{
  _BYTE *v0;
  uint64_t v1;

  *v0 = *(_BYTE *)(v1 + *(int *)(sub_1C0892D3C() + 44));
  sub_1C0778534();
}

uint64_t Blocker.stateStore.getter()
{
  sub_1C0892D74();
  return swift_retain();
}

void Blocker.init(stores:entityClass:source:pipelineType:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char *a4@<X3>, uint64_t a5@<X8>)
{
  int *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;

  v16 = *a4;
  sub_1C0892F3C(a1, a2, (uint64_t (*)(_QWORD))type metadata accessor for Configuration);
  v9 = (int *)sub_1C0892D74();
  v10 = a5 + v9[5];
  v11 = sub_1C0776744();
  v12 = *(_QWORD *)(v11 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16))(v10, a2, v11);
  sub_1C0892C20(a3, a5 + v9[6], (uint64_t (*)(_QWORD))type metadata accessor for Source);
  *(_BYTE *)(a5 + v9[7]) = 0;
  sub_1C0892C20(a1, a5 + v9[8], (uint64_t (*)(_QWORD))type metadata accessor for PhaseStores);
  v13 = sub_1C078A314();
  *(_QWORD *)(a5 + v9[9]) = sub_1C0883D28();
  v14 = sub_1C0884620();
  sub_1C07B1F90(a3, (uint64_t (*)(_QWORD))type metadata accessor for Source);
  (*(void (**)(uint64_t, uint64_t))(v12 + 8))(a2, v11);
  *(_QWORD *)(a5 + v9[10]) = v14;
  *(_BYTE *)(a5 + v9[11]) = v16;
  v15 = *(_QWORD *)(a1 + *(int *)(v13 + 28));
  swift_retain();
  sub_1C07B1F90(a1, (uint64_t (*)(_QWORD))type metadata accessor for PhaseStores);
  *(_QWORD *)(a5 + v9[12]) = v15;
}

uint64_t Blocker.execute()()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  v1[3] = v0;
  v1[4] = sub_1C0892D74();
  v1[5] = sub_1C0779D74();
  v2 = sub_1C0776744();
  v1[6] = v2;
  v1[7] = *(_QWORD *)(v2 - 8);
  v1[8] = sub_1C0775870();
  v1[9] = sub_1C0775870();
  v1[10] = sub_1C0775870();
  sub_1C07ACF80(&qword_1ED7618D0);
  v1[11] = sub_1C0779D74();
  return swift_task_switch();
}

void sub_1C0884A80()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7[32];

  v1 = v0[11];
  v2 = v0[6];
  v3 = v0[7];
  v5 = v0[3];
  v4 = v0[4];
  sub_1C078A314();
  v6 = *(int *)(v4 + 44);
  v7[0] = *(_BYTE *)(v5 + v6);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v1, v5 + *(int *)(v4 + 20), v2);
  sub_1C07B2D8C(v1, 0, 1, v2);
  sub_1C0AB2294(v7, v1);
  sub_1C0784B6C(v1, &qword_1ED7618D0);
  __asm { BR              X10 }
}

uint64_t sub_1C0884B3C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t, uint64_t, _QWORD);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t, _QWORD);

  v6 = *(_QWORD *)(v2 + 80);
  sub_1C07BA19C();
  v14 = v3;
  v7 = sub_1C0794DA4();
  *(_QWORD *)(v7 + 16) = v1;
  sub_1C08867F8(v6, 0, 1, (uint64_t)sub_1C0891C20, v7, (uint64_t)sub_1C0892B98);
  sub_1C0892FB0();
  sub_1C07767D4();
  v8 = *(_QWORD *)(v2 + 64);
  v9 = *(_QWORD *)(v2 + 24);
  v14(v8, v0, *(_QWORD *)(v2 + 48));
  v10 = *(unsigned __int8 *)(v4 + v5);
  v11 = sub_1C0794DA4();
  *(_QWORD *)(v11 + 16) = v9;
  sub_1C0886AE0(v8, v10, 0, 1, (uint64_t)sub_1C0891BD4, v11);
  sub_1C0892FB0();
  sub_1C07767D4();
  sub_1C106AC6C();
  sub_1C0888824(v13, 0, 1);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_1C07767D4();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_1C0884DC4(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t), _QWORD *a5, uint64_t a6, uint64_t a7)
{
  unint64_t v7;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(uint64_t, uint64_t, char *);
  uint64_t v20;
  NSObject *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  double v26;
  uint64_t v27;
  char *v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  int *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  __int128 v58;
  uint64_t v59;
  NSObject *v60;
  uint64_t v61;
  NSObject *v62;
  char *v63;
  _DWORD *v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  void (*v68)(uint64_t);
  uint64_t v69;
  unint64_t v70;
  NSObject *v71;
  char v72;
  void (*v73)(char *, uint64_t);
  uint64_t v74;
  char isUniquelyReferenced_nonNull_native;
  char v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  BOOL v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  NSObject *v84;
  uint64_t v85;
  uint64_t v86;
  NSObject *v87;
  uint64_t v88;
  char v89;
  char v90;
  void (*v91)(char *, uint64_t);
  char v92;
  char v93;
  char v94;
  char v95;
  char v96;
  uint64_t v97;
  Class v98;
  objc_class *v99;
  char v100;
  uint64_t v101;
  void (*v102)(char *, unint64_t, uint64_t);
  char v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  char v108;
  uint64_t v109;
  void (*v110)(char *, char *, uint64_t);
  char v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t *v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  os_log_type_t v125;
  _DWORD *v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  unint64_t v131;
  unint64_t v132;
  uint64_t v133;
  uint8_t *v134;
  NSObject *v135;
  uint64_t v136;
  uint64_t v137;
  char *v138;
  NSObject *v139;
  uint64_t v140;
  Class v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t *v146;
  uint64_t v147;
  unint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  __int128 v158;
  NSObject *v159;
  char *v160;
  uint64_t v161;
  int *v162;
  uint64_t v163;
  unint64_t v165;
  uint64_t v166;
  unint64_t v167;
  uint64_t v168;
  NSObject *v169;
  Class v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  char *v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  NSObject *v178;
  os_log_type_t v179;
  uint64_t v180;
  uint8_t *v181;
  uint64_t v182;
  unint64_t v183;
  uint64_t v184;
  uint64_t v185;
  NSObject *v186;
  uint64_t v187;
  uint64_t v188;
  void (*v189)(uint64_t, uint64_t, char *);
  _DWORD *v190;
  uint64_t *v191;
  uint64_t v192;
  _QWORD *v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t *v200;
  uint64_t v201;
  unint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  void (*v207)(uint64_t, char *);
  uint64_t v208;
  uint64_t v209;
  char *v210;
  uint64_t result;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  int *v216;
  uint64_t v217;
  void (*v218)(uint64_t);
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  char v222;
  uint64_t *v223;
  uint64_t v224;
  uint64_t v225;
  unint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  NSObject *v233;
  os_log_type_t v234;
  uint8_t *v235;
  uint64_t v236;
  unint64_t v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  char *v241;
  uint64_t v242;
  uint64_t *v243;
  char *v244;
  NSObject *v245;
  void (*v246)(uint64_t);
  _QWORD *v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  __int128 v252;
  uint64_t v253;
  uint64_t v254;
  int v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  unint64_t v260;
  uint64_t v261;
  _QWORD *v262;
  uint64_t v263;
  uint64_t v264;
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  uint64_t v268;
  NSObject *v269;
  NSObject *v270;
  Class isa;
  __int128 v272;
  uint64_t *v273;
  unint64_t v274;
  uint64_t v275;
  uint64_t v276;
  char *v277;
  uint64_t v278;
  uint64_t v279;
  char *v280;
  uint64_t v281;
  uint64_t v282;
  NSObject *v283;
  int *v284;
  uint64_t v285;
  uint64_t v286;
  uint64_t v287;
  NSObject *v288;
  NSObject *v289;
  _DWORD *v290;
  void (*v291)(uint64_t, uint64_t, char *);
  _QWORD *v292;
  NSObject *v293;
  uint64_t v294;
  uint64_t v295;
  uint64_t v296;
  uint64_t v297;
  uint64_t v298;
  uint64_t v299[2];
  uint64_t v300;
  uint64_t v301;
  NSObject *v302;
  uint64_t v303;

  v278 = a7;
  v263 = a6;
  v262 = a5;
  v246 = a4;
  v258 = type metadata accessor for Blocker();
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v11);
  sub_1C077AE40();
  sub_1C0787A68(v12);
  v13 = sub_1C106E41C();
  v296 = *(_QWORD *)(v13 - 8);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v14);
  sub_1C077AED0();
  v292 = v15;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v16);
  sub_1C0779728();
  v294 = v17;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v18);
  sub_1C0779728();
  v291 = v19;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v20);
  sub_1C0779728();
  v293 = v21;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v22);
  v24 = (char *)&v240 - v23;
  v26 = MEMORY[0x1E0C80A78](v25);
  v28 = (char *)&v240 - v27;
  v284 = (int *)((uint64_t (*)(_QWORD, double))a2)(0, v26);
  v29 = *((_QWORD *)v284 - 1);
  MEMORY[0x1E0C80A78](v284);
  sub_1C077AED0();
  sub_1C077AF60();
  MEMORY[0x1E0C80A78](v30);
  sub_1C0779728();
  sub_1C077AF60();
  MEMORY[0x1E0C80A78](v31);
  sub_1C0779728();
  sub_1C077AF60();
  MEMORY[0x1E0C80A78](v32);
  sub_1C0779728();
  v285 = v33;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v34);
  sub_1C0779728();
  v286 = v35;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v36);
  v38 = sub_1C0787A68((uint64_t)&v240 - v37);
  v281 = type metadata accessor for EntityBlock(v38);
  v282 = *(_QWORD *)(v281 - 8);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v39);
  sub_1C077AED0();
  sub_1C077AF60();
  MEMORY[0x1E0C80A78](v40);
  sub_1C0779728();
  sub_1C077AF60();
  MEMORY[0x1E0C80A78](v41);
  v241 = (char *)&v240 - v42;
  v243 = (uint64_t *)a3;
  sub_1C07ACF80((uint64_t *)a3);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v43);
  sub_1C077AE40();
  sub_1C0787A68(v44);
  v266 = sub_1C106E590();
  v268 = *(_QWORD *)(v266 - 8);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v45);
  sub_1C077AED0();
  sub_1C077AF60();
  MEMORY[0x1E0C80A78](v46);
  sub_1C0779728();
  sub_1C077AF60();
  MEMORY[0x1E0C80A78](v47);
  sub_1C0779728();
  sub_1C077AF60();
  MEMORY[0x1E0C80A78](v48);
  sub_1C0779728();
  sub_1C077AF60();
  MEMORY[0x1E0C80A78](v49);
  v244 = (char *)&v240 - v51;
  v52 = *(_QWORD *)(a1 + 16);
  v53 = MEMORY[0x1E0DEE9D8];
  v54 = &OBJC_IVAR____TtC24IntelligencePlatformCore19AddressLinkingModel_version;
  v55 = MEMORY[0x1E0DEE9B8];
  v279 = a2;
  v280 = v28;
  v265 = v52;
  if (v52)
  {
    sub_1C0779D28();
    v249 = v56 + v57;
    v260 = v29;
    v248 = *(_QWORD *)(v29 + 72);
    v267 = v56;
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    v255 = 0;
    v264 = MEMORY[0x1E0DEE9D8];
    *(_QWORD *)&v58 = 136380675;
    v252 = v58;
    v251 = v55 + 8;
    sub_1C07BC0C4();
    while (1)
    {
      v253 = v59;
      sub_1C0892E04(v249 + v248 * v59, a3);
      if ((sub_1C1070120() & 1) != 0)
      {
        if (qword_1ED761458 != -1)
          swift_once();
        v231 = sub_1C077585C();
        sub_1C079E000(v231, (uint64_t)qword_1ED78D818);
        v232 = v240;
        sub_1C0892C20(v259, v240, (uint64_t (*)(_QWORD))type metadata accessor for Blocker);
        v233 = sub_1C106F538();
        v234 = sub_1C10703A8();
        if (sub_1C07825D0(v234))
        {
          v235 = (uint8_t *)sub_1C0775854();
          v300 = sub_1C0775854();
          *(_DWORD *)v235 = 136315138;
          sub_1C08870A4();
          v299[0] = sub_1C0788DAC(v236, v237, &v300);
          sub_1C10705AC();
          sub_1C077960C();
          sub_1C07B1F90(v232, (uint64_t (*)(_QWORD))type metadata accessor for Blocker);
          sub_1C07796F0(&dword_1C0771000, v233, (os_log_type_t)v29, "%s going to defer", v235);
          swift_arrayDestroy();
          sub_1C0776778();
        }
        sub_1C07B1F90(v232, (uint64_t (*)(_QWORD))type metadata accessor for Blocker);

        sub_1C107006C();
        sub_1C07803F8(&qword_1ED759800, (void (*)(uint64_t))MEMORY[0x1E0DF05E0]);
        swift_allocError();
        sub_1C106F91C();
        swift_willThrow();
        sub_1C078AC18(a3);
        sub_1C078F230();
        return sub_1C078F230();
      }
      v60 = *(NSObject **)(v259 + *(int *)(v258 + 36));
      isa = v60[2].isa;
      if (isa)
        break;
LABEL_82:
      v154 = v253 + 1;
      sub_1C078AC18(a3);
      v59 = v154;
      if (v154 == v265)
      {
        v155 = v267;
        sub_1C07767AC();
        v50 = v155;
        v53 = v264;
        v29 = v260;
        v55 = MEMORY[0x1E0DEE9B8];
        v54 = &OBJC_IVAR____TtC24IntelligencePlatformCore19AddressLinkingModel_version;
        goto LABEL_85;
      }
    }
    v270 = v60 + 4;
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    v29 = 0;
    v269 = v60;
    while (1)
    {
      if ((Class)v29 >= v60[2].isa)
      {
        __break(1u);
LABEL_137:
        __break(1u);
LABEL_138:
        __break(1u);
LABEL_139:
        sub_1C0892DCC();
        v264 = v238;
LABEL_128:
        v225 = v264;
        v226 = *(_QWORD *)(v264 + 16);
        if (v226 >= *(_QWORD *)(v264 + 24) >> 1)
        {
          sub_1C07EC170();
          v225 = v239;
        }
        *(_QWORD *)(v225 + 16) = v226 + 1;
        sub_1C0782978();
        v230 = v229;
        sub_1C07E563C(a2, v229 + v227 + *(_QWORD *)(v228 + 72) * v226, type metadata accessor for EntityBlock);
        (*(void (**)(char *, uint64_t))(v268 + 8))(v244, v266);
        return v230;
      }
      v274 = v29;
      sub_1C0784AC0((uint64_t)&v270[5 * v29], (uint64_t)&v300);
      v61 = v301;
      v62 = v302;
      sub_1C0893008();
      v63 = (char *)((uint64_t (*)(uint64_t, NSObject *))v62[1].isa)(v61, v62);
      sub_1C07803F8(&qword_1ED75EA28, (void (*)(uint64_t))MEMORY[0x1E0D3CC50]);
      v290 = v64;
      v65 = (char *)sub_1C1070234();
      v288 = *((_QWORD *)v63 + 2);
      if (v288)
      {
        sub_1C0779D28();
        v277 = v63;
        v287 = (uint64_t)&v63[v66];
        v295 = *(_QWORD *)(v67 + 72);
        v68 = *(void (**)(uint64_t))(v67 + 16);
        do
        {
          v69 = sub_1C07AB330();
          v68(v69);
          _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
          v70 = sub_1C0892D1C() & ~(-1 << v65[32]);
          v71 = v65;
          v7 = (unint64_t)(v65 + 56);
          if (((*(_QWORD *)&v65[((v70 >> 3) & 0xFFFFFFFFFFFFF8) + 56] >> v70) & 1) != 0)
          {
            while (1)
            {
              sub_1C078BB2C(*((_QWORD *)v65 + 6));
              sub_1C07803F8(&qword_1ED75EA30, (void (*)(uint64_t))MEMORY[0x1E0D3CC50]);
              sub_1C08930D4();
              v72 = sub_1C07B9EFC();
              v73 = *(void (**)(char *, uint64_t))(v296 + 8);
              v73(v24, v13);
              if ((v72 & 1) != 0)
                break;
              sub_1C0892FE0();
              if (((*(_QWORD *)(v7 + v74) >> v70) & 1) == 0)
                goto LABEL_12;
            }
            sub_1C0778580();
          }
          else
          {
LABEL_12:
            sub_1C0778580();
            isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            ((void (*)(_QWORD *, uint64_t, uint64_t))v68)(v292, v294, v13);
            v299[0] = (uint64_t)v65;
            if (*((_QWORD *)v65 + 3) <= *((_QWORD *)v65 + 2))
            {
              if ((isUniquelyReferenced_nonNull_native & 1) != 0)
                sub_1C0A812B8();
              else
                sub_1C0A8A19C();
              v7 = v299[0];
              v76 = (char)v292;
              v70 = sub_1C0892D1C() & ~(-1 << *(_BYTE *)(v7 + 32));
              if (((*(_QWORD *)(v7 + 56 + ((v70 >> 3) & 0xFFFFFFFFFFFFF8)) >> v70) & 1) != 0)
              {
                do
                {
                  sub_1C078BB2C(*(_QWORD *)(v7 + 48));
                  sub_1C07803F8(&qword_1ED75EA30, (void (*)(uint64_t))MEMORY[0x1E0D3CC50]);
                  sub_1C08930D4();
                  sub_1C07B9EFC();
                  sub_1C0892CB0();
                  if ((v76 & 1) != 0)
                    goto LABEL_140;
                  sub_1C0892FE0();
                }
                while (((*(_QWORD *)(v7 + 56 + v77) >> v70) & 1) != 0);
              }
            }
            else if ((isUniquelyReferenced_nonNull_native & 1) == 0)
            {
              sub_1C0A87FA0();
            }
            v65 = (char *)v299[0];
            *(_QWORD *)(v299[0] + ((v70 >> 3) & 0xFFFFFFFFFFFFFF8) + 56) |= 1 << v70;
            v78 = v296;
            (*(void (**)(unint64_t, _QWORD *, uint64_t))(v296 + 32))(*((_QWORD *)v65 + 6) + v70 * v295, v292, v13);
            v79 = *((_QWORD *)v65 + 2);
            v80 = __OFADD__(v79, 1);
            v81 = v79 + 1;
            if (v80)
            {
              __break(1u);
LABEL_123:
              __break(1u);
              goto LABEL_124;
            }
            *((_QWORD *)v65 + 2) = v81;
            swift_bridgeObjectRelease();
            v73 = *(void (**)(char *, uint64_t))(v78 + 8);
          }
          v73((char *)v294, v13);
        }
        while (((char *)&v289->isa + 1) != v288);
      }
      swift_bridgeObjectRelease();
      v82 = v301;
      v83 = (uint64_t)v302;
      sub_1C0893008();
      v60 = (*(uint64_t (**)(uint64_t, uint64_t))(v83 + 16))(v82, v83);
      v84 = sub_1C1070234();
      v288 = v60[2].isa;
      v289 = v84;
      if (v288)
      {
        v277 = v65;
        sub_1C0779D28();
        *(_QWORD *)&v272 = v60;
        v287 = (uint64_t)v60 + v85;
        v295 = *(_QWORD *)(v86 + 72);
        v83 = *(_QWORD *)(v86 + 16);
        v60 = v293;
        v87 = v289;
        do
        {
          v88 = sub_1C07AB330();
          ((void (*)(uint64_t))v83)(v88);
          _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
          sub_1C0892D1C();
          sub_1C078C00C();
          sub_1C08930C0();
          v71 = v60;
          if ((v89 & 1) != 0)
          {
            while (1)
            {
              sub_1C0892E20((uint64_t)v87[6].isa);
              sub_1C07803F8(&qword_1ED75EA30, (void (*)(uint64_t))MEMORY[0x1E0D3CC50]);
              v90 = sub_1C07B9EFC();
              v91 = *(void (**)(char *, uint64_t))(v296 + 8);
              v91(v24, v13);
              if ((v90 & 1) != 0)
                break;
              sub_1C077FD7C();
              v71 = v293;
              if ((v92 & 1) == 0)
                goto LABEL_30;
            }
            swift_bridgeObjectRelease();
          }
          else
          {
LABEL_30:
            swift_bridgeObjectRelease();
            v93 = swift_isUniquelyReferenced_nonNull_native();
            ((void (*)(_QWORD, NSObject *, uint64_t))v83)(v291, v71, v13);
            v299[0] = (uint64_t)v87;
            if (v87[3].isa <= v87[2].isa)
            {
              if ((v93 & 1) != 0)
                sub_1C0A812B8();
              else
                sub_1C0A8A19C();
              v71 = v299[0];
              v94 = (char)v291;
              sub_1C106FA00();
              sub_1C078C00C();
              sub_1C08930C0();
              if ((v95 & 1) != 0)
              {
                while (1)
                {
                  sub_1C0892E20((uint64_t)v71[6].isa);
                  sub_1C07803F8(&qword_1ED75EA30, (void (*)(uint64_t))MEMORY[0x1E0D3CC50]);
                  sub_1C08930D4();
                  sub_1C07B9EFC();
                  sub_1C0892CB0();
                  if ((v94 & 1) != 0)
                    break;
                  sub_1C077FD7C();
                  if ((v96 & 1) == 0)
                    goto LABEL_40;
                }
LABEL_140:
                result = sub_1C1070D38();
                __break(1u);
                return result;
              }
            }
            else if ((v93 & 1) == 0)
            {
              sub_1C0A87FA0();
            }
LABEL_40:
            v87 = v299[0];
            *(_QWORD *)(v299[0] + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8) + 56) |= 1 << v7;
            v97 = v296;
            (*(void (**)(char *, _QWORD, uint64_t))(v296 + 32))((char *)v87[6].isa + v7 * v295, v291, v13);
            v98 = v87[2].isa;
            v80 = __OFADD__(v98, 1);
            v99 = (Class)((char *)v98 + 1);
            if (v80)
              goto LABEL_123;
            v87[2].isa = v99;
            swift_bridgeObjectRelease();
            v91 = *(void (**)(char *, uint64_t))(v97 + 8);
          }
          v60 = v293;
          v91((char *)v293, v13);
        }
        while (((char *)&v289->isa + 1) != v288);
        v289 = v87;
        sub_1C078F230();
        v65 = v277;
      }
      else
      {
        sub_1C077960C();
      }
      if (*((_QWORD *)v65 + 2))
      {
        v60 = ((char *)v283 + v284[5]);
        v295 = (uint64_t)v60;
        sub_1C0892D1C();
        sub_1C078C00C();
        a3 = (uint64_t)v65;
        sub_1C0892F0C();
        if ((v100 & 1) != 0)
        {
          v101 = *(_QWORD *)(v296 + 72);
          v102 = *(void (**)(char *, unint64_t, uint64_t))(v296 + 16);
          while (1)
          {
            v102(v24, *(_QWORD *)(a3 + 48) + v101 * v7, v13);
            sub_1C07803F8(&qword_1ED75EA30, (void (*)(uint64_t))MEMORY[0x1E0D3CC50]);
            sub_1C08930D4();
            sub_1C07B9EFC();
            sub_1C0892CB0();
            if ((v60 & 1) != 0)
              break;
            sub_1C0892E58();
            if ((v103 & 1) == 0)
              goto LABEL_52;
          }
          sub_1C0778580();
          v113 = sub_1C0893034();
          v115 = *(_QWORD *)(v114 - 256);
          a2 = v279;
          sub_1C0892E04(v113, v115);
          sub_1C078AC18(v115);
          sub_1C07819A8();
          goto LABEL_63;
        }
      }
      else
      {
        a3 = (uint64_t)v65;
      }
LABEL_52:
      sub_1C0778580();
      v104 = sub_1C0893034();
      v106 = *(_QWORD *)(v105 - 256);
      a2 = v279;
      sub_1C0892E04(v104, v106);
      if (!v289[2].isa)
      {
        swift_bridgeObjectRelease();
        sub_1C078AC18(v106);
        sub_1C0892EF4();
        goto LABEL_78;
      }
      v60 = (v106 + v284[7]);
      a3 = (uint64_t)v60;
      sub_1C0892D1C();
      sub_1C078C00C();
      sub_1C0892F0C();
      if ((v108 & 1) == 0)
      {
        swift_bridgeObjectRelease();
        v112 = v106;
LABEL_61:
        sub_1C078AC18(v112);
        sub_1C0892EF4();
        sub_1C0893020();
        sub_1C07BC0C4();
        goto LABEL_79;
      }
      a2 = ~v107;
      v109 = *(_QWORD *)(v296 + 72);
      v110 = *(void (**)(char *, char *, uint64_t))(v296 + 16);
      while (1)
      {
        v110(v24, (char *)v289[6].isa + v109 * v7, v13);
        sub_1C07803F8(&qword_1ED75EA30, (void (*)(uint64_t))MEMORY[0x1E0D3CC50]);
        sub_1C07B9EFC();
        sub_1C0892CB0();
        if ((v60 & 1) != 0)
          break;
        sub_1C0892E58();
        if ((v111 & 1) == 0)
        {
          sub_1C07819A8();
          v112 = sub_1C089305C();
          goto LABEL_61;
        }
      }
      sub_1C07819A8();
      v116 = sub_1C089305C();
      sub_1C078AC18(v116);
      sub_1C07BC0C4();
LABEL_63:
      v117 = v301;
      v7 = (unint64_t)v302;
      sub_1C07A9480(&v300, v301);
      v118 = (uint64_t *)(a3 + v284[8]);
      v119 = *v118;
      a3 = v118[1];
      v83 = *(_QWORD *)(v7 + 24);
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      v120 = v119;
      v121 = v275;
      v122 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t, unint64_t))v83)(v120, a3, v117, v7);
      v275 = v121;
      if (v121)
      {
        sub_1C0778580();
        if (qword_1ED761458 != -1)
          swift_once();
        v123 = sub_1C077585C();
        sub_1C079E000(v123, (uint64_t)qword_1ED78D818);
        v124 = v257;
        sub_1C0892E04((uint64_t)v283, v257);
        v60 = sub_1C106F538();
        v125 = sub_1C1070390();
        a3 = v125;
        if (os_log_type_enabled(v60, v125))
        {
          v126 = (_DWORD *)sub_1C0775854();
          v290 = v126;
          v295 = sub_1C0775854();
          v299[0] = v295;
          *v126 = v252;
          v127 = v268;
          v128 = v254;
          v129 = v266;
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v268 + 16))(v254, v124, v266);
          sub_1C078AC18(v124);
          sub_1C07803F8(&qword_1ED7625A0, (void (*)(uint64_t))MEMORY[0x1E0D3CE28]);
          v289 = v60;
          v130 = sub_1C1070C0C();
          v132 = v131;
          (*(void (**)(uint64_t, uint64_t))(v127 + 8))(v128, v129);
          v133 = sub_1C0788DAC(v130, v132, v299);
          v134 = (uint8_t *)v290;
          *(_QWORD *)(v290 + 1) = v133;
          swift_bridgeObjectRelease();
          sub_1C07796F0(&dword_1C0771000, v289, (os_log_type_t)a3, "Blocking not successful for sourcetriple: %{private}s", v134);
          swift_arrayDestroy();
          sub_1C0776778();
        }
        sub_1C078AC18(v124);
        sub_1C0892DF8();

        v275 = 0;
        sub_1C0892EF4();
      }
      else
      {
        v60 = v122;
        sub_1C0778580();
        v7 = (unint64_t)v60[2].isa;
        sub_1C0892EF4();
        if (v7)
        {
          sub_1C0892E74();
          v289 = v135;
          LODWORD(v288) = *(unsigned __int8 *)(v137 + *(int *)(v136 + 44));
          v287 = sub_1C0776744();
          sub_1C089309C();
          v277 = v138;
          *(_QWORD *)&v272 = v60;
          v139 = v60 + 5;
          v140 = v264;
          sub_1C07BC0C4();
          v83 = v250;
          do
          {
            v295 = v7;
            v141 = v139->isa;
            v290 = v139[-1].isa;
            v142 = sub_1C0893088();
            ((void (*)(uint64_t, NSObject *, uint64_t))v277)(v142, v289, v287);
            _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
            v143 = sub_1C106E530();
            v145 = v144;
            sub_1C106AC6C();
            *(_QWORD *)v83 = v290;
            *(_QWORD *)(v83 + 8) = v141;
            v146 = (uint64_t *)(v83 + *(int *)(v7 + 24));
            *v146 = v143;
            v146[1] = v145;
            *(_QWORD *)(v83 + *(int *)(v7 + 28)) = v147;
            *(_BYTE *)(v83 + *(int *)(v7 + 32)) = (_BYTE)v288;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            {
              sub_1C0892DCC();
              v140 = v152;
            }
            v148 = *(_QWORD *)(v140 + 16);
            v60 = (v148 + 1);
            v149 = v295;
            if (v148 >= *(_QWORD *)(v140 + 24) >> 1)
            {
              sub_1C07EC170();
              v140 = v153;
            }
            v139 += 2;
            *(_QWORD *)(v140 + 16) = v60;
            sub_1C0782978();
            sub_1C07E563C(v83, v140 + v150 + *(_QWORD *)(v151 + 72) * v148, type metadata accessor for EntityBlock);
            v7 = v149 - 1;
            a3 = (uint64_t)v283;
          }
          while (v7);
          v264 = v140;
          sub_1C078F230();
          v255 = 1;
          a2 = v279;
          goto LABEL_78;
        }
        sub_1C077960C();
      }
      sub_1C07BC0C4();
LABEL_78:
      sub_1C0893020();
LABEL_79:
      v29 = v83 + 1;
      _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)&v300);
      if ((Class)v29 == isa)
      {
        sub_1C077960C();
        goto LABEL_82;
      }
    }
  }
  v255 = 0;
LABEL_85:
  v288 = *(NSObject **)(v259 + *(int *)(v258 + 40));
  v24 = (char *)v266;
  v287 = (uint64_t)v288[2].isa;
  v264 = v53;
  if (!v287)
    goto LABEL_120;
  if (!v265)
    goto LABEL_138;
  v283 = v288 + 4;
  v260 = v29;
  sub_1C0779D28();
  v267 = v156;
  v295 = v157;
  v277 = (char *)(v156 + v157);
  v273 = &v298;
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  *(_QWORD *)&v158 = *((_QWORD *)v54 + 118);
  v272 = v158;
  v159 = 0;
  isa = (Class)(v55 + 8);
  do
  {
    if ((Class)v159 >= v288[2].isa)
      goto LABEL_137;
    v289 = v159;
    sub_1C0784AC0((uint64_t)&v283[5 * (_QWORD)v159], (uint64_t)&v300);
    v160 = v277;
    v161 = v261;
    sub_1C0892E04((uint64_t)v277, v261);
    v291 = *(void (**)(uint64_t, uint64_t, char *))(v268 + 16);
    v291(v276, v161, v24);
    sub_1C078AC18(v161);
    v293 = v302;
    v294 = v301;
    v292 = sub_1C07A9480(&v300, v301);
    v303 = MEMORY[0x1E0DEE9D8];
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    v162 = *(int **)(v260 + 72);
    v163 = v265;
    do
    {
      sub_1C0892E04((uint64_t)v160, v286);
      sub_1C106DCFC();
      sub_1C07803F8(&qword_1ED75E7E0, (void (*)(uint64_t))MEMORY[0x1E0D3CC50]);
      sub_1C07AEE18();
      sub_1C07AEE18();
      if (v299[0] == v297 && v299[1] == v298)
      {
        swift_bridgeObjectRelease_n();
        sub_1C0892E0C();
      }
      else
      {
        LOBYTE(v165) = sub_1C1070CB4();
        sub_1C077960C();
        sub_1C0778580();
        sub_1C0892E0C();
        if ((v165 & 1) == 0)
        {
          sub_1C078AC18(v286);
          goto LABEL_102;
        }
      }
      sub_1C07E563C(v286, v285, (uint64_t (*)(_QWORD))a2);
      v166 = v303;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1C0892EC4(0, *(_QWORD *)(v166 + 16) + 1);
        v166 = v303;
      }
      v165 = *(_QWORD *)(v166 + 16);
      v167 = *(_QWORD *)(v166 + 24);
      if (v165 >= v167 >> 1)
      {
        sub_1C0892EC4(v167 > 1, v165 + 1);
        v166 = v303;
      }
      *(_QWORD *)(v166 + 16) = v165 + 1;
      sub_1C07E563C(v285, v166 + v295 + v165 * (_QWORD)v162, (uint64_t (*)(_QWORD))a2);
LABEL_102:
      v160 = (char *)v162 + (_QWORD)v160;
      --v163;
    }
    while (v163);
    sub_1C078F230();
    v168 = v303;
    v169 = v293;
    v170 = v293[1].isa;
    sub_1C07803F8(v262, (void (*)(uint64_t))a2);
    v171 = v275;
    v173 = ((uint64_t (*)(uint64_t, int *, uint64_t, uint64_t, NSObject *))v170)(v168, v284, v172, v294, v169);
    v275 = v171;
    if (v171)
    {
      swift_release();
      v174 = (char *)v266;
      if (qword_1ED761458 != -1)
        swift_once();
      v175 = sub_1C077585C();
      sub_1C079E000(v175, (uint64_t)qword_1ED78D818);
      v176 = v256;
      v177 = v276;
      v291(v256, v276, v174);
      v178 = sub_1C106F538();
      v179 = sub_1C1070390();
      if (sub_1C07825D0(v179))
      {
        v180 = sub_1C0775854();
        v293 = v178;
        v181 = (uint8_t *)v180;
        v294 = sub_1C0775854();
        v299[0] = v294;
        *(_DWORD *)v181 = v272;
        v292 = v181 + 4;
        sub_1C07803F8(&qword_1ED7625A0, (void (*)(uint64_t))MEMORY[0x1E0D3CE28]);
        v182 = sub_1C1070C0C();
        v297 = sub_1C0788DAC(v182, v183, v299);
        sub_1C10705AC();
        sub_1C077960C();
        (*(void (**)(uint64_t, char *))(v268 + 8))(v176, v174);
        sub_1C07796F0(&dword_1C0771000, v293, (os_log_type_t)v165, "Blocking not successful for entity: %{private}s", v181);
        swift_arrayDestroy();
        sub_1C0776778();
      }
      sub_1C0892DF8();

      v207 = *(void (**)(uint64_t, char *))(v268 + 8);
      v207(v176, v174);
      v207(v177, v174);
      v275 = 0;
      v24 = v174;
    }
    else
    {
      v184 = v173;
      swift_release();
      v185 = *(_QWORD *)(v184 + 16);
      if (v185)
      {
        sub_1C0892E74();
        v293 = v186;
        LODWORD(v292) = *(unsigned __int8 *)(v188 + *(int *)(v187 + 44));
        sub_1C0776744();
        sub_1C089309C();
        v290 = v190;
        v291 = v189;
        v274 = v184;
        v191 = (uint64_t *)(v184 + 40);
        v192 = v264;
        v193 = v247;
        do
        {
          v294 = v185;
          v194 = *(v191 - 1);
          v195 = *v191;
          v196 = sub_1C0893088();
          ((void (*)(uint64_t, NSObject *, _QWORD))v290)(v196, v293, v291);
          _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
          v197 = sub_1C106E530();
          v199 = v198;
          sub_1C106AC6C();
          *v193 = v194;
          v193[1] = v195;
          v200 = (_QWORD *)((char *)v193 + v162[6]);
          *v200 = v197;
          v200[1] = v199;
          *(_QWORD *)((char *)v193 + v162[7]) = v201;
          *((_BYTE *)v193 + v162[8]) = (_BYTE)v292;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_1C0892DCC();
            v192 = v205;
          }
          v202 = *(_QWORD *)(v192 + 16);
          a2 = v279;
          if (v202 >= *(_QWORD *)(v192 + 24) >> 1)
          {
            sub_1C07EC170();
            v192 = v206;
          }
          v191 += 2;
          *(_QWORD *)(v192 + 16) = v202 + 1;
          sub_1C0782978();
          sub_1C07E563C((uint64_t)v193, v192 + v203 + *(_QWORD *)(v204 + 72) * v202, type metadata accessor for EntityBlock);
          v185 = v294 - 1;
        }
        while (v294 != 1);
        v264 = v192;
        v255 = 1;
        sub_1C0892EF4();
      }
      sub_1C07767AC();
      v24 = (char *)v266;
      (*(void (**)(uint64_t, uint64_t))(v268 + 8))(v276, v266);
    }
    v159 = ((char *)&v289->isa + 1);
    _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)&v300);
  }
  while (v159 != v287);
  swift_bridgeObjectRelease();
  v50 = v267;
LABEL_120:
  v71 = v245;
  v246(v50);
  if (sub_1C07B2D80((uint64_t)v71, 1, (uint64_t)v284) == 1)
  {
    sub_1C0784B6C((uint64_t)v71, v243);
    return v264;
  }
LABEL_124:
  v208 = v268;
  v209 = v242;
  (*(void (**)(uint64_t, NSObject *, char *))(v268 + 16))(v242, v71, v24);
  sub_1C078AC18((uint64_t)v71);
  v210 = v244;
  (*(void (**)(char *, uint64_t, char *))(v208 + 32))(v244, v209, v24);
  if ((v255 & 1) == 0)
  {
    v212 = v258;
    v213 = v259;
    sub_1C106D090();
    v296 = sub_1C106FB68();
    v215 = v214;
    sub_1C07767AC();
    v216 = (int *)v281;
    a2 = (uint64_t)v241;
    sub_1C0776744();
    v217 = sub_1C0892F4C();
    v218(v217);
    v219 = sub_1C106E530();
    v221 = v220;
    sub_1C106AC6C();
    v222 = *(_BYTE *)(v213 + *(int *)(v212 + 44));
    *(_QWORD *)a2 = v296;
    *(_QWORD *)(a2 + 8) = v215;
    v223 = (uint64_t *)(a2 + v216[6]);
    *v223 = v219;
    v223[1] = v221;
    *(_QWORD *)(a2 + v216[7]) = v224;
    *(_BYTE *)(a2 + v216[8]) = v222;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      goto LABEL_139;
    goto LABEL_128;
  }
  (*(void (**)(char *, char *))(v208 + 8))(v210, v24);
  return v264;
}

uint64_t sub_1C08867F8(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  void (*v14)(char *, uint64_t, uint64_t);
  NSObject *v15;
  os_log_type_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  uint64_t v40;

  v34 = a6;
  v35 = a2;
  v37 = a4;
  v36 = a3;
  v9 = sub_1C0776744();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1ED762B20 != -1)
    swift_once();
  v13 = sub_1C077585C();
  sub_1C079E000(v13, (uint64_t)qword_1ED78D9F8);
  v14 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  v33 = a1;
  v14(v12, a1, v9);
  v15 = sub_1C106F538();
  v16 = sub_1C10703A8();
  if (os_log_type_enabled(v15, v16))
  {
    v17 = sub_1C0775854();
    v32 = v6;
    v18 = v17;
    v30 = sub_1C0775854();
    v40 = v30;
    *(_DWORD *)v18 = 136315394;
    v31 = a5;
    sub_1C07803F8(&qword_1ED759F68, (void (*)(uint64_t))MEMORY[0x1E0D3BB08]);
    v19 = sub_1C1070C0C();
    v38 = sub_1C0788DAC(v19, v20, &v40);
    sub_1C10705AC();
    sub_1C077960C();
    sub_1C0779794();
    *(_WORD *)(v18 + 12) = 2080;
    v38 = v35;
    v39 = v36 & 1;
    sub_1C07ACF80(&qword_1ED75E828);
    v21 = sub_1C106FB5C();
    v38 = sub_1C0788DAC(v21, v22, &v40);
    sub_1C10705AC();
    sub_1C0778580();
    _os_log_impl(&dword_1C0771000, v15, v16, "GraphStore: tripleBlockingMap: e:%s t:%s", (uint8_t *)v18, 0x16u);
    swift_arrayDestroy();
    sub_1C0776778();
  }
  sub_1C0779794();

  v23 = v36;
  v24 = v35;
  MEMORY[0x1E0C80A78](v25);
  v26 = v33;
  *(&v29 - 6) = v27;
  *(&v29 - 5) = v26;
  *(&v29 - 4) = v24;
  *((_BYTE *)&v29 - 24) = v23 & 1;
  *(&v29 - 2) = v37;
  *(&v29 - 1) = a5;
  swift_retain();
  sub_1C078017C();
  return swift_release();
}

uint64_t sub_1C0886AE0(uint64_t a1, int a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  void (*v15)(char *, uint64_t, uint64_t);
  NSObject *v16;
  os_log_type_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  int v39;
  uint64_t v40;
  int v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  uint64_t v45;

  v40 = a3;
  v42 = a5;
  v41 = a4;
  v10 = sub_1C106D1F8();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1ED762B20 != -1)
    swift_once();
  v39 = a2;
  v14 = sub_1C106F544();
  sub_1C079E000(v14, (uint64_t)qword_1ED78D9F8);
  v15 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 16);
  v38 = a1;
  v15(v13, a1, v10);
  v16 = sub_1C106F538();
  v17 = sub_1C10703A8();
  if (os_log_type_enabled(v16, v17))
  {
    v18 = swift_slowAlloc();
    v19 = swift_slowAlloc();
    v37 = v6;
    v35 = v19;
    v45 = v19;
    *(_DWORD *)v18 = 136315650;
    v36 = a6;
    sub_1C07803F8(&qword_1ED759F68, (void (*)(uint64_t))MEMORY[0x1E0D3BB08]);
    v20 = sub_1C1070C0C();
    v43 = sub_1C0788DAC(v20, v21, &v45);
    sub_1C10705AC();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    *(_WORD *)(v18 + 12) = 2080;
    v22 = v39;
    LOBYTE(v43) = v39;
    PipelineType.description.getter();
    v43 = sub_1C0788DAC(v23, v24, &v45);
    sub_1C10705AC();
    swift_bridgeObjectRelease();
    *(_WORD *)(v18 + 22) = 2080;
    v25 = v40;
    v43 = v40;
    v26 = v41;
    v44 = v41 & 1;
    sub_1C07ACF80(&qword_1ED75E828);
    v27 = sub_1C106FB5C();
    v43 = sub_1C0788DAC(v27, v28, &v45);
    sub_1C10705AC();
    a6 = v36;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C0771000, v16, v17, "GraphStore: tripleBlockingMap: e:%s p:%s t:%s", (uint8_t *)v18, 0x20u);
    v29 = v35;
    swift_arrayDestroy();
    MEMORY[0x1C3BA8270](v29, -1, -1);
    MEMORY[0x1C3BA8270](v18, -1, -1);

  }
  else
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);

    v26 = v41;
    v25 = v40;
    v22 = v39;
  }
  MEMORY[0x1E0C80A78](v30);
  v31 = v38;
  *(&v34 - 8) = v32;
  *(&v34 - 7) = v31;
  *((_BYTE *)&v34 - 48) = v22;
  *(&v34 - 5) = v25;
  *((_BYTE *)&v34 - 32) = v26 & 1;
  *(&v34 - 3) = v42;
  *(&v34 - 2) = a6;
  swift_retain();
  sub_1C078017C();
  return swift_release();
}

uint64_t sub_1C0886E74()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_1C0806670;
  return Blocker.execute()();
}

void sub_1C0886EBC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_1C0779670();
  sub_1C0776744();
  sub_1C07B0018();
  MEMORY[0x1E0C80A78](v1);
  sub_1C07B4008();
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v2);
  sub_1C0790EDC();
  sub_1C077866C();
  sub_1C07AC718();
  v3 = type metadata accessor for Resolver();
  sub_1C0892E40(v3);
  sub_1C07ACF80(&qword_1ED75CF30);
  sub_1C0892CC8();
  sub_1C0892CDC();
  sub_1C0775894();
  sub_1C079707C();
  sub_1C0892DDC(*(int *)(v0 + 24));
  sub_1C0782158();
  sub_1C0775894();
  sub_1C07A37AC();
  sub_1C07AA358();
  sub_1C07BAD78();
  sub_1C0892C78();
  sub_1C07785A0();
  sub_1C078BCC0();
  sub_1C07A44A8();
  sub_1C0892D88();
  sub_1C0789B00();
  sub_1C07AAD34();
  sub_1C0784E88();
  sub_1C077589C();
  sub_1C078D498();
  sub_1C0892C8C(*(int *)(v0 + 28));
  sub_1C07A08D0();
  sub_1C07767AC();
  sub_1C078B754();
  sub_1C0776760();
}

void sub_1C0886FB0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_1C0779670();
  sub_1C0776744();
  sub_1C07B0018();
  MEMORY[0x1E0C80A78](v1);
  sub_1C07B4008();
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v2);
  sub_1C0790EDC();
  sub_1C077866C();
  sub_1C07AC718();
  v3 = type metadata accessor for Deduper();
  sub_1C0892E40(v3);
  sub_1C07ACF80(&qword_1ED754FB0);
  sub_1C0892CC8();
  sub_1C0892CDC();
  sub_1C0775894();
  sub_1C079707C();
  sub_1C0892DDC(*(int *)(v0 + 24));
  sub_1C0782158();
  sub_1C0775894();
  sub_1C07A37AC();
  sub_1C07AA358();
  sub_1C07BAD78();
  sub_1C0892C78();
  sub_1C07785A0();
  sub_1C078BCC0();
  sub_1C07A44A8();
  sub_1C0892D88();
  sub_1C0789B00();
  sub_1C07AAD34();
  sub_1C0784E88();
  sub_1C077589C();
  sub_1C078D498();
  sub_1C0892C8C(*(int *)(v0 + 32));
  sub_1C07A08D0();
  sub_1C07767AC();
  sub_1C078B754();
  sub_1C0776760();
}

void sub_1C08870A4()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_1C077B61C();
  sub_1C077674C();
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v3);
  sub_1C079E30C();
  sub_1C077978C();
  sub_1C07AB704();
  v4 = type metadata accessor for Blocker();
  sub_1C0892D00(v4);
  sub_1C07ACF80((uint64_t *)&unk_1ED75CD00);
  sub_1C07AF20C();
  sub_1C0892CD4();
  sub_1C0775834();
  sub_1C079707C();
  sub_1C077C7FC(v1[7]);
  sub_1C0781048();
  sub_1C0775834();
  sub_1C07A37AC();
  sub_1C07B9A74(v0 + v1[6], v2);
  sub_1C07B5EA8();
  sub_1C0784E88();
  sub_1C077589C();
  sub_1C077C1D8();
  sub_1C07A44A8();
  sub_1C07B6488();
  sub_1C0781048();
  sub_1C0775844();
  sub_1C078D498();
  sub_1C0781548(v1[11]);
  sub_1C0781048();
  sub_1C07767AC();
  sub_1C077E378();
  sub_1C077C798();
}

void sub_1C0887190()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_1C0779670();
  sub_1C0776744();
  sub_1C07B0018();
  MEMORY[0x1E0C80A78](v1);
  sub_1C07B4008();
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v2);
  sub_1C0790EDC();
  sub_1C077866C();
  sub_1C07AC718();
  v3 = type metadata accessor for Linker();
  sub_1C089307C(v3);
  sub_1C07ACF80(&qword_1ED75CC10);
  sub_1C0892DEC();
  sub_1C0892CDC();
  sub_1C0775894();
  sub_1C079707C();
  sub_1C106FC94();
  sub_1C077EE48();
  sub_1C0775894();
  sub_1C07A37AC();
  sub_1C07AA358();
  sub_1C07BAD78();
  sub_1C0892C78();
  sub_1C07785A0();
  sub_1C078BCC0();
  sub_1C07A44A8();
  sub_1C0892D88();
  sub_1C0789B00();
  sub_1C07AAD34();
  sub_1C0784E88();
  sub_1C077589C();
  sub_1C078D498();
  sub_1C0892CF0(*(int *)(v0 + 28));
  sub_1C07A08D0();
  sub_1C07767AC();
  sub_1C078B754();
  sub_1C0776760();
}

void sub_1C08872AC()
{
  sub_1C0887DD0();
}

void sub_1C08872D0()
{
  sub_1C08874BC();
}

void sub_1C08872E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_1C077B61C();
  sub_1C077674C();
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v3);
  sub_1C079E30C();
  sub_1C077978C();
  v4 = sub_1C07AB704();
  v5 = type metadata accessor for BMAppleMusicEventDeltaSourceIngestor(v4);
  sub_1C0892D00(v5);
  sub_1C07ACF80(&qword_1ED74CF30);
  sub_1C07AF20C();
  sub_1C0892CD4();
  sub_1C0775834();
  sub_1C079707C();
  sub_1C07AA6BC();
  sub_1C07A37AC();
  sub_1C07B9A74(v0, v2);
  sub_1C07B5EA8();
  sub_1C0784E88();
  sub_1C077589C();
  sub_1C077C1D8();
  sub_1C07A44A8();
  sub_1C07B6488();
  sub_1C0781048();
  sub_1C0775844();
  sub_1C078D498();
  sub_1C0781548(*(int *)(v1 + 24));
  sub_1C0781048();
  sub_1C07767AC();
  sub_1C077E378();
  sub_1C077C798();
}

void sub_1C08873BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_1C077B61C();
  sub_1C077674C();
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v3);
  sub_1C079E30C();
  sub_1C077978C();
  sub_1C07AB704();
  v4 = type metadata accessor for FutureLifeEventDeltaSourceIngestor();
  sub_1C0892D00(v4);
  sub_1C07ACF80(&qword_1ED752018);
  sub_1C07AF20C();
  sub_1C0892CD4();
  sub_1C0775834();
  sub_1C079707C();
  sub_1C07AA6BC();
  sub_1C07A37AC();
  sub_1C07B9A74(v0, v2);
  sub_1C07B5EA8();
  sub_1C0784E88();
  sub_1C077589C();
  sub_1C077C1D8();
  sub_1C07A44A8();
  sub_1C07B6488();
  sub_1C0781048();
  sub_1C0775844();
  sub_1C078D498();
  sub_1C0781548(*(int *)(v1 + 20));
  sub_1C0781048();
  sub_1C07767AC();
  sub_1C077E378();
  sub_1C077C798();
}

void sub_1C0887494()
{
  sub_1C088769C();
}

void sub_1C08874A8()
{
  sub_1C08874BC();
}

void sub_1C08874BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_1C0779670();
  v1 = v0;
  sub_1C0776744();
  sub_1C07B0018();
  MEMORY[0x1E0C80A78](v2);
  sub_1C07B4008();
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v3);
  sub_1C0790EDC();
  sub_1C077866C();
  v4 = sub_1C07BAB70();
  sub_1C07B9DE0(v4);
  sub_1C0892CC8();
  sub_1C0892CDC();
  sub_1C0775894();
  sub_1C079707C();
  sub_1C07AA6BC();
  sub_1C07A37AC();
  sub_1C07AA358();
  sub_1C07BAD78();
  sub_1C0892C78();
  sub_1C07785A0();
  sub_1C078BCC0();
  sub_1C07A44A8();
  sub_1C0892D88();
  sub_1C0789B00();
  sub_1C07AAD34();
  sub_1C0784E88();
  sub_1C077589C();
  sub_1C078D498();
  sub_1C0892C8C(*(int *)(v1 + 24));
  sub_1C07A08D0();
  sub_1C07767AC();
  sub_1C078B754();
  sub_1C0776760();
}

void sub_1C0887598()
{
  sub_1C08874BC();
}

void sub_1C08875AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_1C077B61C();
  sub_1C077674C();
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v3);
  sub_1C079E30C();
  sub_1C077978C();
  v4 = sub_1C07AB704();
  v5 = type metadata accessor for BMAppleMusicEventSourceIngestor(v4);
  sub_1C0892D00(v5);
  sub_1C07ACF80(&qword_1ED751160);
  sub_1C07AF20C();
  sub_1C0892CD4();
  sub_1C0775834();
  sub_1C079707C();
  sub_1C07AA6BC();
  sub_1C07A37AC();
  sub_1C07B9A74(v0 + *(int *)(v1 + 20), v2);
  sub_1C07B5EA8();
  sub_1C0784E88();
  sub_1C077589C();
  sub_1C077C1D8();
  sub_1C07A44A8();
  sub_1C07B6488();
  sub_1C0781048();
  sub_1C0775844();
  sub_1C078D498();
  sub_1C0781548(*(int *)(v1 + 24));
  sub_1C0781048();
  sub_1C07767AC();
  sub_1C077E378();
  sub_1C077C798();
}

void sub_1C0887688()
{
  sub_1C088769C();
}

void sub_1C088769C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_1C0779670();
  v2 = v1;
  sub_1C0776744();
  sub_1C07B0018();
  MEMORY[0x1E0C80A78](v3);
  sub_1C07B4008();
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v4);
  sub_1C0790EDC();
  sub_1C077866C();
  v5 = sub_1C07BAB70();
  sub_1C07B9DE0(v5);
  sub_1C0892CC8();
  sub_1C0892CDC();
  sub_1C0775894();
  sub_1C079707C();
  sub_1C07AA6BC();
  sub_1C07A37AC();
  sub_1C07806C0(v0);
  sub_1C07BAD78();
  sub_1C0892C78();
  sub_1C07785A0();
  sub_1C078BCC0();
  sub_1C07A44A8();
  sub_1C0892D88();
  sub_1C0789B00();
  sub_1C07AAD34();
  sub_1C0784E88();
  sub_1C077589C();
  sub_1C078D498();
  sub_1C0892C8C(*(int *)(v2 + 24));
  sub_1C07A08D0();
  sub_1C07767AC();
  sub_1C078B754();
  sub_1C0776760();
}

void sub_1C088777C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_1C0779670();
  sub_1C0776744();
  sub_1C07B0018();
  MEMORY[0x1E0C80A78](v2);
  sub_1C07B4008();
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v3);
  sub_1C0790EDC();
  sub_1C077866C();
  v4 = sub_1C07AC718();
  v5 = type metadata accessor for LifeEventDeltaSourceIngestor(v4);
  sub_1C0892E40(v5);
  sub_1C07ACF80((uint64_t *)&unk_1ED74C8A0);
  sub_1C0892CC8();
  sub_1C0892CDC();
  sub_1C0775894();
  sub_1C079707C();
  sub_1C07AA6BC();
  sub_1C07A37AC();
  sub_1C07806C0(v0);
  sub_1C07BAD78();
  sub_1C0892C78();
  sub_1C07785A0();
  sub_1C078BCC0();
  sub_1C07A44A8();
  sub_1C0892D88();
  sub_1C0789B00();
  sub_1C07AAD34();
  sub_1C0784E88();
  sub_1C077589C();
  sub_1C078D498();
  sub_1C0892C8C(*(int *)(v1 + 20));
  sub_1C07A08D0();
  sub_1C07767AC();
  sub_1C078B754();
  sub_1C0776760();
}

void sub_1C0887864()
{
  sub_1C08874BC();
}

void sub_1C0887878()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_1C077B61C();
  sub_1C077674C();
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v3);
  sub_1C079E30C();
  sub_1C077978C();
  v4 = sub_1C07AB704();
  v5 = type metadata accessor for CNContactDeltaSourceIngestor(v4);
  sub_1C0892D00(v5);
  sub_1C07ACF80(&qword_1ED74C7D8);
  sub_1C07AF20C();
  sub_1C0892CD4();
  sub_1C0775834();
  sub_1C079707C();
  sub_1C077C7FC(v1[9]);
  sub_1C0781048();
  sub_1C0775834();
  sub_1C07A37AC();
  sub_1C07B9A74(v0 + v1[6], v2);
  sub_1C07B5EA8();
  sub_1C0784E88();
  sub_1C077589C();
  sub_1C077C1D8();
  sub_1C07A44A8();
  sub_1C106D0FC();
  sub_1C0781048();
  sub_1C0775844();
  sub_1C078D498();
  sub_1C0781548(v1[7]);
  sub_1C0781048();
  sub_1C07767AC();
  sub_1C077E378();
  sub_1C077C798();
}

void sub_1C0887964()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_1C077B61C();
  sub_1C077674C();
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v3);
  sub_1C079E30C();
  sub_1C077978C();
  v4 = sub_1C07AB704();
  v5 = type metadata accessor for CNContactFullSourceIngestor(v4);
  sub_1C0892D00(v5);
  sub_1C07ACF80(&qword_1ED7510A8);
  sub_1C07AF20C();
  sub_1C0892CD4();
  sub_1C0775834();
  sub_1C079707C();
  sub_1C077C7FC(v1[9]);
  sub_1C0781048();
  sub_1C0775834();
  sub_1C07A37AC();
  sub_1C07B9A74(v0 + v1[5], v2);
  sub_1C07B5EA8();
  sub_1C0784E88();
  sub_1C077589C();
  sub_1C077C1D8();
  sub_1C07A44A8();
  sub_1C07B6488();
  sub_1C0781048();
  sub_1C0775844();
  sub_1C078D498();
  sub_1C0781548(v1[6]);
  sub_1C0781048();
  sub_1C07767AC();
  sub_1C077E378();
  sub_1C077C798();
}

void sub_1C0887A50()
{
  sub_1C088769C();
}

void sub_1C0887A64()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_1C0779670();
  sub_1C0776744();
  sub_1C07B0018();
  MEMORY[0x1E0C80A78](v2);
  sub_1C07B4008();
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v3);
  sub_1C0790EDC();
  sub_1C077866C();
  v4 = sub_1C07AC718();
  v5 = type metadata accessor for LifeEventSourceIngestor(v4);
  sub_1C0892E40(v5);
  sub_1C07ACF80(&qword_1EF633070);
  sub_1C0892CC8();
  sub_1C0892CDC();
  sub_1C0775894();
  sub_1C079707C();
  sub_1C07AA6BC();
  sub_1C07A37AC();
  sub_1C07806C0(v0 + *(int *)(v1 + 24));
  sub_1C07BAD78();
  sub_1C0892C78();
  sub_1C07785A0();
  sub_1C078BCC0();
  sub_1C07A44A8();
  sub_1C0892D88();
  sub_1C0789B00();
  sub_1C07AAD34();
  sub_1C0784E88();
  sub_1C077589C();
  sub_1C078D498();
  sub_1C0892C8C(*(int *)(v1 + 28));
  sub_1C07A08D0();
  sub_1C07767AC();
  sub_1C078B754();
  sub_1C0776760();
}

void sub_1C0887B50()
{
  sub_1C08874BC();
}

void sub_1C0887B64()
{
  sub_1C0888148();
}

void sub_1C0887B78()
{
  sub_1C08874BC();
}

void sub_1C0887B8C()
{
  sub_1C08874BC();
}

void sub_1C0887BA0()
{
  sub_1C08874BC();
}

void sub_1C0887BB4()
{
  sub_1C08874BC();
}

void sub_1C0887BC8()
{
  sub_1C08874BC();
}

void sub_1C0887BDC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_1C077B61C();
  sub_1C077674C();
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v3);
  sub_1C079E30C();
  sub_1C077978C();
  sub_1C07AB704();
  v4 = type metadata accessor for StandardEntityMapper();
  sub_1C0892D00(v4);
  sub_1C07ACF80(&qword_1EF633038);
  sub_1C07AF20C();
  sub_1C0892CD4();
  sub_1C0775834();
  sub_1C079707C();
  sub_1C077C7FC(*(int *)(v1 + 24));
  sub_1C0781048();
  sub_1C0775834();
  sub_1C07A37AC();
  sub_1C07B9A74(v0, v2);
  sub_1C07B5EA8();
  sub_1C0784E88();
  sub_1C077589C();
  sub_1C077C1D8();
  sub_1C07A44A8();
  sub_1C07B6488();
  sub_1C0781048();
  sub_1C0775844();
  sub_1C078D498();
  sub_1C0781548(*(int *)(v1 + 28));
  sub_1C0781048();
  sub_1C07767AC();
  sub_1C077E378();
  sub_1C077C798();
}

void sub_1C0887CC4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_1C077B61C();
  sub_1C077674C();
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v3);
  sub_1C079E30C();
  sub_1C077978C();
  sub_1C07AB704();
  v4 = type metadata accessor for StandardEntityFusion();
  sub_1C0892D00(v4);
  sub_1C07ACF80(&qword_1ED75BF68);
  sub_1C07AF20C();
  sub_1C0892CD4();
  sub_1C0775834();
  sub_1C079707C();
  sub_1C106FC94();
  sub_1C07A37AC();
  sub_1C07B9A74(v0 + *(int *)(v1 + 24), v2);
  sub_1C07B5EA8();
  sub_1C0784E88();
  sub_1C077589C();
  sub_1C077C1D8();
  sub_1C07A44A8();
  sub_1C07B6488();
  sub_1C0781048();
  sub_1C0775844();
  sub_1C078D498();
  sub_1C0781548(*(int *)(v1 + 28));
  sub_1C0781048();
  sub_1C07767AC();
  sub_1C077E378();
  sub_1C077C798();
}

void sub_1C0887DB0()
{
  sub_1C0892ED4();
  sub_1C0887DD0();
}

void sub_1C0887DD0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(_QWORD);
  _BYTE v14[16];
  uint64_t v15;
  unint64_t v16;

  sub_1C0779670();
  v3 = v2;
  v5 = v4;
  v6 = sub_1C0776744();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  sub_1C07B4008();
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v8);
  v10 = &v14[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v15 = 0;
  v16 = 0xE000000000000000;
  sub_1C1070774();
  sub_1C077866C();
  v11 = sub_1C07BAB70();
  sub_1C0892E40(v11);
  sub_1C07ACF80(v3);
  sub_1C0892CC8();
  sub_1C106FC94();
  swift_bridgeObjectRelease();
  sub_1C079707C();
  sub_1C106FC94();
  sub_1C07A37AC();
  sub_1C0892C20(v0 + *(int *)(v5 + 20), (uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for Source);
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C106FC94();
  sub_1C07785A0();
  v12 = sub_1C0893070();
  sub_1C07B1F90(v12, v13);
  sub_1C07A44A8();
  sub_1C0892D88();
  sub_1C0789B00();
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v1, v6);
  sub_1C0784E88();
  sub_1C077589C();
  sub_1C078D498();
  v14[8] = *(_BYTE *)(v0 + *(int *)(v5 + 28));
  PipelineType.description.getter();
  sub_1C07A08D0();
  sub_1C07767AC();
  sub_1C078B754();
  sub_1C0776760();
}

void sub_1C0887F44()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_1C0779670();
  sub_1C0776744();
  sub_1C07B0018();
  MEMORY[0x1E0C80A78](v1);
  sub_1C07B4008();
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v2);
  sub_1C0790EDC();
  sub_1C077866C();
  sub_1C07AC718();
  v3 = type metadata accessor for OrganizationMatcher();
  sub_1C089307C(v3);
  sub_1C07ACF80(&qword_1ED7560A0);
  sub_1C0892DEC();
  sub_1C0892CDC();
  sub_1C0775894();
  sub_1C079707C();
  sub_1C07A98DC();
  sub_1C077EE48();
  sub_1C0775894();
  sub_1C07A37AC();
  sub_1C07AA358();
  sub_1C07BAD78();
  sub_1C0892C78();
  sub_1C07785A0();
  sub_1C078BCC0();
  sub_1C07A44A8();
  _s24IntelligencePlatformCore19OrganizationMatcherV11entityClass0aB006EntityG0Vvg_0();
  sub_1C0789B00();
  sub_1C07AAD34();
  sub_1C0784E88();
  sub_1C077589C();
  sub_1C078D498();
  sub_1C0892CF0(*(int *)(v0 + 24));
  sub_1C07A08D0();
  sub_1C07767AC();
  sub_1C078B754();
  sub_1C0776760();
}

void sub_1C0888034()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_1C077B61C();
  sub_1C077674C();
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v2);
  sub_1C079E30C();
  sub_1C077978C();
  sub_1C07AB704();
  v3 = type metadata accessor for PassthroughMatcher();
  sub_1C07ACF80(&qword_1ED75BC98);
  sub_1C0892FD4();
  sub_1C0892CD4();
  sub_1C0775834();
  sub_1C079707C();
  sub_1C07BBEF8();
  sub_1C0892EB4();
  sub_1C0775834();
  sub_1C07A37AC();
  sub_1C07B9A74(v0, v1);
  sub_1C07B5EA8();
  sub_1C0784E88();
  sub_1C077589C();
  sub_1C077C1D8();
  sub_1C07A44A8();
  sub_1C07B6488();
  sub_1C0781048();
  sub_1C0775844();
  sub_1C078D498();
  sub_1C0892EA4(*(int *)(v3 + 20));
  sub_1C0781048();
  sub_1C07767AC();
  sub_1C077E378();
  sub_1C077C798();
}

void sub_1C0888134()
{
  sub_1C0888148();
}

void sub_1C0888148()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t *v3;
  uint64_t (*v4)(uint64_t);
  uint64_t (*v5)(uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  sub_1C077B61C();
  v3 = v2;
  v5 = v4;
  sub_1C077674C();
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v6);
  sub_1C079E30C();
  sub_1C077978C();
  v7 = sub_1C07AB704();
  v8 = v5(v7);
  sub_1C07ACF80(v3);
  sub_1C0892FD4();
  sub_1C0892CD4();
  sub_1C0775834();
  sub_1C079707C();
  sub_1C07BBEF8();
  sub_1C0892EB4();
  sub_1C0775834();
  sub_1C07A37AC();
  sub_1C07B9A74(v0 + *(int *)(v8 + 20), v1);
  sub_1C07B5EA8();
  sub_1C0784E88();
  sub_1C077589C();
  sub_1C077C1D8();
  sub_1C07A44A8();
  sub_1C07B6488();
  sub_1C0781048();
  sub_1C0775844();
  sub_1C078D498();
  sub_1C0892EA4(*(int *)(v8 + 24));
  sub_1C0781048();
  sub_1C07767AC();
  sub_1C077E378();
  sub_1C077C798();
}

void sub_1C0888250()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_1C0779670();
  sub_1C0776744();
  sub_1C07B0018();
  MEMORY[0x1E0C80A78](v1);
  sub_1C07B4008();
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v2);
  sub_1C0790EDC();
  sub_1C077866C();
  sub_1C07AC718();
  v3 = type metadata accessor for LocationMatcher();
  sub_1C0892E40(v3);
  sub_1C07ACF80(&qword_1ED75AFA0);
  sub_1C0892CC8();
  sub_1C0892CDC();
  sub_1C0775894();
  sub_1C079707C();
  sub_1C0892DDC(*(int *)(v0 + 32));
  sub_1C0782158();
  sub_1C0775894();
  sub_1C07A37AC();
  sub_1C07AA358();
  sub_1C07BAD78();
  sub_1C0892C78();
  sub_1C07785A0();
  sub_1C078BCC0();
  sub_1C07A44A8();
  _s24IntelligencePlatformCore15LocationMatcherV11entityClass0aB006EntityG0Vvg_0();
  sub_1C0789B00();
  sub_1C07AAD34();
  sub_1C0784E88();
  sub_1C077589C();
  sub_1C078D498();
  sub_1C0892C8C(*(int *)(v0 + 24));
  sub_1C07A08D0();
  sub_1C07767AC();
  sub_1C078B754();
  sub_1C0776760();
}

void sub_1C0888348()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_1C0779670();
  sub_1C0776744();
  sub_1C07B0018();
  MEMORY[0x1E0C80A78](v1);
  sub_1C07B4008();
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v2);
  sub_1C0790EDC();
  sub_1C077866C();
  sub_1C07AC718();
  v3 = type metadata accessor for DocumentMatcher();
  sub_1C089307C(v3);
  sub_1C07ACF80(&qword_1EF633050);
  sub_1C0892DEC();
  sub_1C0892CDC();
  sub_1C0775894();
  sub_1C079707C();
  sub_1C07A98DC();
  sub_1C077EE48();
  sub_1C0775894();
  sub_1C07A37AC();
  sub_1C07AA358();
  sub_1C07BAD78();
  sub_1C0892C78();
  sub_1C07785A0();
  sub_1C078BCC0();
  sub_1C07A44A8();
  _s24IntelligencePlatformCore15DocumentMatcherV11entityClass0aB006EntityG0Vvg_0();
  sub_1C0789B00();
  sub_1C07AAD34();
  sub_1C0784E88();
  sub_1C077589C();
  sub_1C078D498();
  sub_1C0892CF0(*(int *)(v0 + 28));
  sub_1C07A08D0();
  sub_1C07767AC();
  sub_1C078B754();
  sub_1C0776760();
}

void sub_1C0888438()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_1C077B61C();
  sub_1C077674C();
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v3);
  sub_1C079E30C();
  sub_1C077978C();
  sub_1C07AB704();
  v4 = type metadata accessor for PeopleMatcher();
  sub_1C0892D00(v4);
  sub_1C07ACF80(&qword_1ED756090);
  sub_1C07AF20C();
  sub_1C0892CD4();
  sub_1C0775834();
  sub_1C079707C();
  sub_1C077C7FC(v1[7]);
  sub_1C0781048();
  sub_1C0775834();
  sub_1C07A37AC();
  sub_1C07B9A74(v0 + v1[5], v2);
  sub_1C07B5EA8();
  sub_1C0784E88();
  sub_1C077589C();
  sub_1C077C1D8();
  sub_1C07A44A8();
  sub_1C07B6488();
  sub_1C0781048();
  sub_1C0775844();
  sub_1C078D498();
  sub_1C0781548(v1[8]);
  sub_1C0781048();
  sub_1C07767AC();
  sub_1C077E378();
  sub_1C077C798();
}

void sub_1C0888524()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_1C077B61C();
  sub_1C077674C();
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v3);
  sub_1C079E30C();
  sub_1C077978C();
  sub_1C07AB704();
  v4 = type metadata accessor for PairGenerator();
  sub_1C0892D00(v4);
  sub_1C07ACF80(&qword_1ED75A9D8);
  sub_1C07AF20C();
  sub_1C0892CD4();
  sub_1C0775834();
  sub_1C079707C();
  sub_1C077C7FC(v1[8]);
  sub_1C0781048();
  sub_1C0775834();
  sub_1C07A37AC();
  sub_1C07B9A74(v0 + v1[5], v2);
  sub_1C07B5EA8();
  sub_1C0784E88();
  sub_1C077589C();
  sub_1C077C1D8();
  sub_1C07A44A8();
  sub_1C07B6488();
  sub_1C0781048();
  sub_1C0775844();
  sub_1C078D498();
  sub_1C0781548(v1[7]);
  sub_1C0781048();
  sub_1C07767AC();
  sub_1C077E378();
  sub_1C077C798();
}

void sub_1C0888610()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_1C077B61C();
  sub_1C077674C();
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v3);
  sub_1C079E30C();
  sub_1C077978C();
  sub_1C07AB704();
  v4 = type metadata accessor for TopicMatcher();
  sub_1C0892D00(v4);
  sub_1C07ACF80(&qword_1ED75A788);
  sub_1C07AF20C();
  sub_1C0892CD4();
  sub_1C0775834();
  sub_1C079707C();
  sub_1C077C7FC(v1[8]);
  sub_1C0781048();
  sub_1C0775834();
  sub_1C07A37AC();
  sub_1C07B9A74(v0 + v1[5], v2);
  sub_1C07B5EA8();
  sub_1C0784E88();
  sub_1C077589C();
  sub_1C077C1D8();
  sub_1C07A44A8();
  sub_1C07B6488();
  sub_1C0781048();
  sub_1C0775844();
  sub_1C078D498();
  sub_1C0781548(v1[6]);
  sub_1C0781048();
  sub_1C07767AC();
  sub_1C077E378();
  sub_1C077C798();
}

void sub_1C08886FC()
{
  sub_1C0888148();
}

void sub_1C0888710()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_1C0779670();
  sub_1C0776744();
  sub_1C07B0018();
  MEMORY[0x1E0C80A78](v2);
  sub_1C07B4008();
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v3);
  sub_1C0790EDC();
  sub_1C077866C();
  sub_1C07AC718();
  v4 = type metadata accessor for EventMatcher();
  sub_1C089307C(v4);
  sub_1C07ACF80(&qword_1ED75A618);
  sub_1C0892DEC();
  sub_1C0892CDC();
  sub_1C0775894();
  sub_1C079707C();
  sub_1C07A98DC();
  sub_1C077EE48();
  sub_1C0775894();
  sub_1C07A37AC();
  sub_1C07806C0(v0);
  sub_1C07BAD78();
  sub_1C0892C78();
  sub_1C07785A0();
  sub_1C078BCC0();
  sub_1C07A44A8();
  _s24IntelligencePlatformCore12EventMatcherV11entityClass0aB006EntityG0Vvg_0();
  sub_1C0789B00();
  sub_1C07AAD34();
  sub_1C0784E88();
  sub_1C077589C();
  sub_1C078D498();
  sub_1C0892CF0(*(int *)(v1 + 20));
  sub_1C07A08D0();
  sub_1C07767AC();
  sub_1C078B754();
  sub_1C0776760();
}

void sub_1C0888804()
{
  sub_1C0888148();
}

void sub_1C0888818(_BYTE *a1@<X8>)
{
  *a1 = 9;
}

void sub_1C0888824(uint64_t a1, char a2, char a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  double v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  _QWORD v16[3];
  uint64_t v17;
  uint64_t v18;

  v4 = v3;
  v7 = type metadata accessor for ConstructionProgressTokens(0);
  MEMORY[0x1E0C80A78](v7);
  v8 = type metadata accessor for ProgressTokens(0);
  MEMORY[0x1E0C80A78](v8);
  v9 = type metadata accessor for Blocker();
  v10 = MEMORY[0x1E0C80A78](v9);
  if ((a2 & 1) == 0)
  {
    v14 = (void *)MEMORY[0x1C3BA79F4](v10);
    v16[0] = a1;
    sub_1C106A774();
    swift_allocObject();
    sub_1C106A768();
    sub_1C07ACF80(&qword_1ED75AB00);
    sub_1C07BB218(&qword_1ED75AAF8, &qword_1ED75AB00);
    sub_1C106A75C();
    swift_release();
    objc_autoreleasePoolPop(v14);
  }
  sub_1C088FAB4();
  v11 = v17;
  if (v17)
  {
    v12 = v18;
    sub_1C07A9480(v16, v17);
    v13 = (*(uint64_t (**)(uint64_t, uint64_t))(v12 + 48))(v11, v12);
    _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v16);
  }
  else
  {
    sub_1C0784B6C((uint64_t)v16, &qword_1EF633030);
    v13 = 0;
  }
  if ((a3 & 1) != 0 || !__OFADD__(v13, 1))
    __asm { BR              X10 }
  __break(1u);
  JUMPOUT(0x1C0888EACLL);
}

void sub_1C0888EBC()
{
  sub_1C088D878();
}

void sub_1C0888EE0()
{
  void *v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  os_log_type_t v13;
  _BOOL8 v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v24;
  uint64_t v25;

  sub_1C0779670();
  sub_1C07A7D84(v3, v4, v5);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v6);
  sub_1C0787A24();
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v7);
  sub_1C0787A40();
  type metadata accessor for EventMatcher();
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v8);
  sub_1C0778544();
  if ((v2 & 1) != 0)
  {
    sub_1C07B68B8();
    goto LABEL_9;
  }
  v9 = MEMORY[0x1C3BA79F4]();
  sub_1C077C1C8(v9);
  sub_1C077B5BC();
  v1 = sub_1C078049C();
  sub_1C079BD54();
  sub_1C07BFEC8(&qword_1ED75AAF8);
  sub_1C07A5C20();
  if (!&qword_1ED75AB00)
  {
    sub_1C07785A8();
    sub_1C0778718();
LABEL_9:
    sub_1C0892F8C();
    if (v25)
    {
      sub_1C07ADBAC();
      sub_1C077AFF0();
    }
    else
    {
      sub_1C0892C70(v22, &qword_1EF633030);
      v1 = 0;
    }
    if ((v24 & 1) != 0 || !__OFADD__(v1, 1))
    {
      sub_1C07937DC();
      __asm { BR              X10 }
    }
    __break(1u);
    JUMPOUT(0x1C08892B0);
  }
  sub_1C07785A8();
  sub_1C0778718();
  if (qword_1ED761458 != -1)
    swift_once();
  v10 = sub_1C077585C();
  v11 = sub_1C0781988(v10, (uint64_t)qword_1ED78D818);
  sub_1C078A31C(v11, v12, (uint64_t (*)(_QWORD))type metadata accessor for EventMatcher);
  sub_1C106F538();
  v13 = sub_1C077CF00();
  v14 = sub_1C077B6A4(v13);
  if (v14)
  {
    sub_1C0792D98();
    v15 = sub_1C079BD3C();
    sub_1C0892C9C(v15);
    sub_1C07B1628(4.8149e-34);
    sub_1C0888710();
    v18 = sub_1C0782D28(v16, v17);
    sub_1C079A880(v18);
    v19 = sub_1C077960C();
    sub_1C077EB5C(v19, (uint64_t (*)(_QWORD))type metadata accessor for EventMatcher);
    sub_1C079D2FC(&dword_1C0771000, v20, v21, "%s failed to update progress token");
    sub_1C0797090();
    sub_1C0776778();
  }
  sub_1C077EB5C(v14, (uint64_t (*)(_QWORD))type metadata accessor for EventMatcher);
  sub_1C077E6C8();

  sub_1C0776760();
}

void sub_1C08892C0()
{
  sub_1C088D878();
}

void sub_1C08892E4()
{
  void *v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  os_log_type_t v13;
  _BOOL8 v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v24;
  uint64_t v25;

  sub_1C0779670();
  sub_1C07A7D84(v3, v4, v5);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v6);
  sub_1C0787A24();
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v7);
  sub_1C0782B30();
  type metadata accessor for TopicMatcher();
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v8);
  sub_1C0778544();
  if ((v2 & 1) != 0)
  {
    sub_1C07B68B8();
    goto LABEL_9;
  }
  v9 = MEMORY[0x1C3BA79F4]();
  sub_1C077C1C8(v9);
  sub_1C077B5BC();
  v1 = sub_1C078049C();
  sub_1C079BD54();
  sub_1C07BFEC8(&qword_1ED75AAF8);
  sub_1C07A5C20();
  if (!&qword_1ED75AB00)
  {
    sub_1C07785A8();
    sub_1C0778718();
LABEL_9:
    sub_1C0892F98();
    if (v25)
    {
      sub_1C07ADBAC();
      sub_1C077AFF0();
    }
    else
    {
      sub_1C0892C70(v22, &qword_1EF633030);
      v1 = 0;
    }
    if ((v24 & 1) != 0 || !__OFADD__(v1, 1))
    {
      sub_1C07937DC();
      __asm { BR              X10 }
    }
    __break(1u);
    JUMPOUT(0x1C08896C0);
  }
  sub_1C07785A8();
  sub_1C0778718();
  if (qword_1ED761458 != -1)
    swift_once();
  v10 = sub_1C077585C();
  v11 = sub_1C0781988(v10, (uint64_t)qword_1ED78D818);
  sub_1C078A31C(v11, v12, (uint64_t (*)(_QWORD))type metadata accessor for TopicMatcher);
  sub_1C106F538();
  v13 = sub_1C077CF00();
  v14 = sub_1C077B6A4(v13);
  if (v14)
  {
    sub_1C0792D98();
    v15 = sub_1C079BD3C();
    sub_1C0892C9C(v15);
    sub_1C07B1628(4.8149e-34);
    sub_1C0888610();
    v18 = sub_1C0782D28(v16, v17);
    sub_1C079A880(v18);
    v19 = sub_1C077960C();
    sub_1C077EB5C(v19, (uint64_t (*)(_QWORD))type metadata accessor for TopicMatcher);
    sub_1C079D2FC(&dword_1C0771000, v20, v21, "%s failed to update progress token");
    sub_1C0797090();
    sub_1C0776778();
  }
  sub_1C077EB5C(v14, (uint64_t (*)(_QWORD))type metadata accessor for TopicMatcher);
  sub_1C077E6C8();

  sub_1C0776760();
}

void sub_1C08896D0()
{
  void *v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  os_log_type_t v13;
  _BOOL8 v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v24;
  uint64_t v25;

  sub_1C0779670();
  sub_1C07A7D84(v3, v4, v5);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v6);
  sub_1C0787A24();
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v7);
  sub_1C0782B30();
  type metadata accessor for PairGenerator();
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v8);
  sub_1C0778544();
  if ((v2 & 1) != 0)
  {
    sub_1C07B68B8();
    goto LABEL_9;
  }
  v9 = MEMORY[0x1C3BA79F4]();
  sub_1C077C1C8(v9);
  sub_1C077B5BC();
  v1 = sub_1C078049C();
  sub_1C079BD54();
  sub_1C07BFEC8(&qword_1ED75AAF8);
  sub_1C07A5C20();
  if (!&qword_1ED75AB00)
  {
    sub_1C07785A8();
    sub_1C0778718();
LABEL_9:
    sub_1C0892F80();
    if (v25)
    {
      sub_1C07ADBAC();
      sub_1C077AFF0();
    }
    else
    {
      sub_1C0892C70(v22, &qword_1EF633030);
      v1 = 0;
    }
    if ((v24 & 1) != 0 || !__OFADD__(v1, 1))
    {
      sub_1C07937DC();
      __asm { BR              X10 }
    }
    __break(1u);
    JUMPOUT(0x1C0889AACLL);
  }
  sub_1C07785A8();
  sub_1C0778718();
  if (qword_1ED761458 != -1)
    swift_once();
  v10 = sub_1C077585C();
  v11 = sub_1C0781988(v10, (uint64_t)qword_1ED78D818);
  sub_1C078A31C(v11, v12, (uint64_t (*)(_QWORD))type metadata accessor for PairGenerator);
  sub_1C106F538();
  v13 = sub_1C077CF00();
  v14 = sub_1C077B6A4(v13);
  if (v14)
  {
    sub_1C0792D98();
    v15 = sub_1C079BD3C();
    sub_1C0892C9C(v15);
    sub_1C07B1628(4.8149e-34);
    sub_1C0888524();
    v18 = sub_1C0782D28(v16, v17);
    sub_1C079A880(v18);
    v19 = sub_1C077960C();
    sub_1C077EB5C(v19, (uint64_t (*)(_QWORD))type metadata accessor for PairGenerator);
    sub_1C079D2FC(&dword_1C0771000, v20, v21, "%s failed to update progress token");
    sub_1C0797090();
    sub_1C0776778();
  }
  sub_1C077EB5C(v14, (uint64_t (*)(_QWORD))type metadata accessor for PairGenerator);
  sub_1C077E6C8();

  sub_1C0776760();
}

void sub_1C0889ABC()
{
  void *v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  os_log_type_t v13;
  _BOOL8 v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v24;
  uint64_t v25;

  sub_1C0779670();
  sub_1C07A7D84(v3, v4, v5);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v6);
  sub_1C0787A24();
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v7);
  sub_1C0782B30();
  type metadata accessor for PeopleMatcher();
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v8);
  sub_1C0778544();
  if ((v2 & 1) != 0)
  {
    sub_1C07B68B8();
    goto LABEL_9;
  }
  v9 = MEMORY[0x1C3BA79F4]();
  sub_1C077C1C8(v9);
  sub_1C077B5BC();
  v1 = sub_1C078049C();
  sub_1C079BD54();
  sub_1C07BFEC8(&qword_1ED75AAF8);
  sub_1C07A5C20();
  if (!&qword_1ED75AB00)
  {
    sub_1C07785A8();
    sub_1C0778718();
LABEL_9:
    sub_1C07AF930();
    sub_1C0890020();
    if (v25)
    {
      sub_1C07ADBAC();
      sub_1C077AFF0();
    }
    else
    {
      sub_1C0892C70(v22, &qword_1EF633030);
      v1 = 0;
    }
    if ((v24 & 1) != 0 || !__OFADD__(v1, 1))
    {
      sub_1C07937DC();
      __asm { BR              X10 }
    }
    __break(1u);
    JUMPOUT(0x1C0889E84);
  }
  sub_1C07785A8();
  sub_1C0778718();
  if (qword_1ED761458 != -1)
    swift_once();
  v10 = sub_1C077585C();
  v11 = sub_1C0781988(v10, (uint64_t)qword_1ED78D818);
  sub_1C078A31C(v11, v12, (uint64_t (*)(_QWORD))type metadata accessor for PeopleMatcher);
  sub_1C106F538();
  v13 = sub_1C077CF00();
  v14 = sub_1C077B6A4(v13);
  if (v14)
  {
    sub_1C0792D98();
    v15 = sub_1C079BD3C();
    sub_1C0892C9C(v15);
    sub_1C07B1628(4.8149e-34);
    sub_1C0888438();
    v18 = sub_1C0782D28(v16, v17);
    sub_1C079A880(v18);
    v19 = sub_1C077960C();
    sub_1C077EB5C(v19, (uint64_t (*)(_QWORD))type metadata accessor for PeopleMatcher);
    sub_1C079D2FC(&dword_1C0771000, v20, v21, "%s failed to update progress token");
    sub_1C0797090();
    sub_1C0776778();
  }
  sub_1C077EB5C(v14, (uint64_t (*)(_QWORD))type metadata accessor for PeopleMatcher);
  sub_1C077E6C8();

  sub_1C0776760();
}

void sub_1C0889E94()
{
  void *v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  os_log_type_t v13;
  _BOOL8 v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v24;
  uint64_t v25;

  sub_1C0779670();
  sub_1C07A7D84(v3, v4, v5);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v6);
  sub_1C0787A24();
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v7);
  sub_1C0787A40();
  type metadata accessor for DocumentMatcher();
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v8);
  sub_1C0778544();
  if ((v2 & 1) != 0)
  {
    sub_1C07B68B8();
    goto LABEL_9;
  }
  v9 = MEMORY[0x1C3BA79F4]();
  sub_1C077C1C8(v9);
  sub_1C077B5BC();
  v1 = sub_1C078049C();
  sub_1C079BD54();
  sub_1C07BFEC8(&qword_1ED75AAF8);
  sub_1C07A5C20();
  if (!&qword_1ED75AB00)
  {
    sub_1C07785A8();
    sub_1C0778718();
LABEL_9:
    sub_1C07AF930();
    sub_1C08903B8();
    if (v25)
    {
      sub_1C07ADBAC();
      sub_1C077AFF0();
    }
    else
    {
      sub_1C0892C70(v22, &qword_1EF633030);
      v1 = 0;
    }
    if ((v24 & 1) != 0 || !__OFADD__(v1, 1))
    {
      sub_1C07937DC();
      __asm { BR              X10 }
    }
    __break(1u);
    JUMPOUT(0x1C088A260);
  }
  sub_1C07785A8();
  sub_1C0778718();
  if (qword_1ED761458 != -1)
    swift_once();
  v10 = sub_1C077585C();
  v11 = sub_1C0781988(v10, (uint64_t)qword_1ED78D818);
  sub_1C078A31C(v11, v12, (uint64_t (*)(_QWORD))type metadata accessor for DocumentMatcher);
  sub_1C106F538();
  v13 = sub_1C077CF00();
  v14 = sub_1C077B6A4(v13);
  if (v14)
  {
    sub_1C0792D98();
    v15 = sub_1C079BD3C();
    sub_1C0892C9C(v15);
    sub_1C07B1628(4.8149e-34);
    sub_1C0888348();
    v18 = sub_1C0782D28(v16, v17);
    sub_1C079A880(v18);
    v19 = sub_1C077960C();
    sub_1C077EB5C(v19, (uint64_t (*)(_QWORD))type metadata accessor for DocumentMatcher);
    sub_1C079D2FC(&dword_1C0771000, v20, v21, "%s failed to update progress token");
    sub_1C0797090();
    sub_1C0776778();
  }
  sub_1C077EB5C(v14, (uint64_t (*)(_QWORD))type metadata accessor for DocumentMatcher);
  sub_1C077E6C8();

  sub_1C0776760();
}

void sub_1C088A270()
{
  void *v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  os_log_type_t v13;
  _BOOL8 v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v24;
  uint64_t v25;

  sub_1C0779670();
  sub_1C07A7D84(v3, v4, v5);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v6);
  sub_1C0787A24();
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v7);
  sub_1C0787A40();
  type metadata accessor for LocationMatcher();
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v8);
  sub_1C0778544();
  if ((v2 & 1) != 0)
  {
    sub_1C07B68B8();
    goto LABEL_9;
  }
  v9 = MEMORY[0x1C3BA79F4]();
  sub_1C077C1C8(v9);
  sub_1C077B5BC();
  v1 = sub_1C078049C();
  sub_1C079BD54();
  sub_1C07BFEC8(&qword_1ED75AAF8);
  sub_1C07A5C20();
  if (!&qword_1ED75AB00)
  {
    sub_1C07785A8();
    sub_1C0778718();
LABEL_9:
    sub_1C0892F98();
    if (v25)
    {
      sub_1C07ADBAC();
      sub_1C077AFF0();
    }
    else
    {
      sub_1C0892C70(v22, &qword_1EF633030);
      v1 = 0;
    }
    if ((v24 & 1) != 0 || !__OFADD__(v1, 1))
    {
      sub_1C07937DC();
      __asm { BR              X10 }
    }
    __break(1u);
    JUMPOUT(0x1C088A650);
  }
  sub_1C07785A8();
  sub_1C0778718();
  if (qword_1ED761458 != -1)
    swift_once();
  v10 = sub_1C077585C();
  v11 = sub_1C0781988(v10, (uint64_t)qword_1ED78D818);
  sub_1C078A31C(v11, v12, (uint64_t (*)(_QWORD))type metadata accessor for LocationMatcher);
  sub_1C106F538();
  v13 = sub_1C077CF00();
  v14 = sub_1C077B6A4(v13);
  if (v14)
  {
    sub_1C0792D98();
    v15 = sub_1C079BD3C();
    sub_1C0892C9C(v15);
    sub_1C07B1628(4.8149e-34);
    sub_1C0888250();
    v18 = sub_1C0782D28(v16, v17);
    sub_1C079A880(v18);
    v19 = sub_1C077960C();
    sub_1C077EB5C(v19, (uint64_t (*)(_QWORD))type metadata accessor for LocationMatcher);
    sub_1C079D2FC(&dword_1C0771000, v20, v21, "%s failed to update progress token");
    sub_1C0797090();
    sub_1C0776778();
  }
  sub_1C077EB5C(v14, (uint64_t (*)(_QWORD))type metadata accessor for LocationMatcher);
  sub_1C077E6C8();

  sub_1C0776760();
}

void sub_1C088A660()
{
  sub_1C088D878();
}

void sub_1C088A684()
{
  void *v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  os_log_type_t v13;
  _BOOL8 v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v24;
  uint64_t v25;

  sub_1C0779670();
  sub_1C07A7D84(v3, v4, v5);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v6);
  sub_1C0787A24();
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v7);
  sub_1C0782B30();
  type metadata accessor for PassthroughMatcher();
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v8);
  sub_1C0778544();
  if ((v2 & 1) != 0)
  {
    sub_1C07B68B8();
    goto LABEL_9;
  }
  v9 = MEMORY[0x1C3BA79F4]();
  sub_1C077C1C8(v9);
  sub_1C077B5BC();
  v1 = sub_1C078049C();
  sub_1C079BD54();
  sub_1C07BFEC8(&qword_1ED75AAF8);
  sub_1C07A5C20();
  if (!&qword_1ED75AB00)
  {
    sub_1C07785A8();
    sub_1C0778718();
LABEL_9:
    sub_1C0892F8C();
    if (v25)
    {
      sub_1C07ADBAC();
      sub_1C077AFF0();
    }
    else
    {
      sub_1C0892C70(v22, &qword_1EF633030);
      v1 = 0;
    }
    if ((v24 & 1) != 0 || !__OFADD__(v1, 1))
    {
      sub_1C07937DC();
      __asm { BR              X10 }
    }
    __break(1u);
    JUMPOUT(0x1C088AA64);
  }
  sub_1C07785A8();
  sub_1C0778718();
  if (qword_1ED761458 != -1)
    swift_once();
  v10 = sub_1C077585C();
  v11 = sub_1C0781988(v10, (uint64_t)qword_1ED78D818);
  sub_1C078A31C(v11, v12, (uint64_t (*)(_QWORD))type metadata accessor for PassthroughMatcher);
  sub_1C106F538();
  v13 = sub_1C077CF00();
  v14 = sub_1C077B6A4(v13);
  if (v14)
  {
    sub_1C0792D98();
    v15 = sub_1C079BD3C();
    sub_1C0892C9C(v15);
    sub_1C07B1628(4.8149e-34);
    sub_1C0888034();
    v18 = sub_1C0782D28(v16, v17);
    sub_1C079A880(v18);
    v19 = sub_1C077960C();
    sub_1C077EB5C(v19, (uint64_t (*)(_QWORD))type metadata accessor for PassthroughMatcher);
    sub_1C079D2FC(&dword_1C0771000, v20, v21, "%s failed to update progress token");
    sub_1C0797090();
    sub_1C0776778();
  }
  sub_1C077EB5C(v14, (uint64_t (*)(_QWORD))type metadata accessor for PassthroughMatcher);
  sub_1C077E6C8();

  sub_1C0776760();
}

void sub_1C088AA74()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  os_log_type_t v12;
  _BOOL8 v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v24;
  uint64_t v25;

  sub_1C0779670();
  v2 = v0;
  sub_1C07BC670(v3, v4, v5);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v6);
  sub_1C0787A24();
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v7);
  sub_1C0787A40();
  type metadata accessor for OrganizationMatcher();
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v8);
  sub_1C0778544();
  if ((v1 & 1) != 0)
    goto LABEL_9;
  MEMORY[0x1C3BA79F4]();
  sub_1C077B6B4();
  sub_1C077B5BC();
  sub_1C078049C();
  v9 = (void *)sub_1C079BD54();
  sub_1C07BFEC8(&qword_1ED75AAF8);
  sub_1C07825C8();
  if (!&qword_1ED75AB00)
  {
    sub_1C07785A8();
    sub_1C0780A48();
    v2 = v0;
LABEL_9:
    v21 = v2;
    sub_1C088FE5C();
    if (v25)
    {
      sub_1C077FD50();
      sub_1C077AFF0();
    }
    else
    {
      sub_1C0892C70(v22, &qword_1EF633030);
      v21 = 0;
    }
    if ((v24 & 1) != 0 || !__OFADD__(v21, 1))
    {
      sub_1C077F0E4();
      __asm { BR              X10 }
    }
    __break(1u);
    JUMPOUT(0x1C088AE84);
  }
  sub_1C07785A8();
  sub_1C0780A48();
  if (qword_1ED761458 != -1)
    swift_once();
  v10 = sub_1C077585C();
  sub_1C0781988(v10, (uint64_t)qword_1ED78D818);
  sub_1C07AC098(v0, v11, (uint64_t (*)(_QWORD))type metadata accessor for OrganizationMatcher);
  sub_1C106F538();
  v12 = sub_1C077CF00();
  v13 = sub_1C077B6A4(v12);
  if (v13)
  {
    sub_1C0792D98();
    v14 = sub_1C079BD3C();
    sub_1C0892C9C(v14);
    sub_1C07B1628(4.8149e-34);
    sub_1C0887F44();
    v17 = sub_1C0782D28(v15, v16);
    sub_1C079A880(v17);
    v18 = sub_1C077960C();
    sub_1C077EB5C(v18, (uint64_t (*)(_QWORD))type metadata accessor for OrganizationMatcher);
    sub_1C079D2FC(&dword_1C0771000, v19, v20, "%s failed to update progress token");
    sub_1C0797090();
    sub_1C0776778();
  }
  sub_1C077EB5C(v13, (uint64_t (*)(_QWORD))type metadata accessor for OrganizationMatcher);
  sub_1C077E6C8();

  sub_1C0776760();
}

void sub_1C088AE94()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _DWORD *v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  os_log_type_t v14;
  _BOOL8 v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v25;
  uint64_t v26;

  sub_1C0779670();
  v3 = v0;
  sub_1C07BC670(v4, v5, v6);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v7);
  sub_1C0787A24();
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v8);
  sub_1C0787A40();
  type metadata accessor for StandardTransformer();
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v9);
  sub_1C0778544();
  if ((v1 & 1) != 0)
    goto LABEL_9;
  v10 = (_DWORD *)MEMORY[0x1C3BA79F4]();
  sub_1C077B6B4();
  sub_1C077B5BC();
  sub_1C078049C();
  v11 = (void *)sub_1C079BD54();
  sub_1C07BFEC8(&qword_1ED75AAF8);
  sub_1C07825C8();
  if (!&qword_1ED75AB00)
  {
    sub_1C07785A8();
    sub_1C0780A48();
    v3 = v0;
LABEL_9:
    v22 = v3;
    sub_1C0890934();
    if (v26)
    {
      sub_1C077FD50();
      sub_1C077AFF0();
    }
    else
    {
      sub_1C0892C70(v23, &qword_1EF633030);
      v22 = 0;
    }
    if ((v25 & 1) != 0 || !__OFADD__(v22, 1))
    {
      sub_1C077F0E4();
      __asm { BR              X10 }
    }
    __break(1u);
    JUMPOUT(0x1C088B2C0);
  }
  sub_1C07785A8();
  sub_1C0780A48();
  if (qword_1ED761458 != -1)
    swift_once();
  v12 = sub_1C077585C();
  sub_1C0781988(v12, (uint64_t)qword_1ED78D818);
  sub_1C07AC098(v0, v13, (uint64_t (*)(_QWORD))type metadata accessor for StandardTransformer);
  sub_1C106F538();
  v14 = sub_1C077CF00();
  v15 = sub_1C077B6A4(v14);
  if (v15)
  {
    sub_1C0792D98();
    v16 = sub_1C079BD3C();
    sub_1C0892C9C(v16);
    *v10 = 136315138;
    sub_1C0892ED4();
    sub_1C0887DD0();
    v19 = sub_1C0782D28(v17, v18);
    sub_1C079A880(v19);
    sub_1C077960C();
    sub_1C07B1F90(v2, (uint64_t (*)(_QWORD))type metadata accessor for StandardTransformer);
    sub_1C079D2FC(&dword_1C0771000, v20, v21, "%s failed to update progress token");
    sub_1C0797090();
    sub_1C0776778();
  }
  sub_1C077EB5C(v15, (uint64_t (*)(_QWORD))type metadata accessor for StandardTransformer);
  sub_1C077E6C8();

  sub_1C0776760();
}

void sub_1C088B2D0()
{
  void *v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  os_log_type_t v13;
  _BOOL8 v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v24;
  uint64_t v25;

  sub_1C0779670();
  sub_1C07A7D84(v3, v4, v5);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v6);
  sub_1C0787A24();
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v7);
  sub_1C0782B30();
  type metadata accessor for StandardEntityMapper();
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v8);
  sub_1C0778544();
  if ((v2 & 1) != 0)
  {
    sub_1C07B68B8();
    goto LABEL_9;
  }
  v9 = MEMORY[0x1C3BA79F4]();
  sub_1C077C1C8(v9);
  sub_1C077B5BC();
  v1 = sub_1C078049C();
  sub_1C079BD54();
  sub_1C07BFEC8(&qword_1ED75AAF8);
  sub_1C07A5C20();
  if (!&qword_1ED75AB00)
  {
    sub_1C07785A8();
    sub_1C0778718();
LABEL_9:
    sub_1C07AF930();
    sub_1C0890B14();
    if (v25)
    {
      sub_1C07ADBAC();
      sub_1C077AFF0();
    }
    else
    {
      sub_1C0892C70(v22, &qword_1EF633030);
      v1 = 0;
    }
    if ((v24 & 1) != 0 || !__OFADD__(v1, 1))
    {
      sub_1C07937DC();
      __asm { BR              X10 }
    }
    __break(1u);
    JUMPOUT(0x1C088B66CLL);
  }
  sub_1C07785A8();
  sub_1C0778718();
  if (qword_1ED761458 != -1)
    swift_once();
  v10 = sub_1C077585C();
  v11 = sub_1C0781988(v10, (uint64_t)qword_1ED78D818);
  sub_1C078A31C(v11, v12, (uint64_t (*)(_QWORD))type metadata accessor for StandardEntityMapper);
  sub_1C106F538();
  v13 = sub_1C077CF00();
  v14 = sub_1C077B6A4(v13);
  if (v14)
  {
    sub_1C0792D98();
    v15 = sub_1C079BD3C();
    sub_1C0892C9C(v15);
    sub_1C07B1628(4.8149e-34);
    sub_1C0887BDC();
    v18 = sub_1C0782D28(v16, v17);
    sub_1C079A880(v18);
    v19 = sub_1C077960C();
    sub_1C077EB5C(v19, (uint64_t (*)(_QWORD))type metadata accessor for StandardEntityMapper);
    sub_1C079D2FC(&dword_1C0771000, v20, v21, "%s failed to update progress token");
    sub_1C0797090();
    sub_1C0776778();
  }
  sub_1C077EB5C(v14, (uint64_t (*)(_QWORD))type metadata accessor for StandardEntityMapper);
  sub_1C077E6C8();

  sub_1C0776760();
}

void sub_1C088B67C()
{
  sub_1C088D414();
}

void sub_1C088B6A0()
{
  sub_1C088D414();
}

void sub_1C088B6C4()
{
  sub_1C088D414();
}

void sub_1C088B6E8()
{
  sub_1C088D414();
}

void sub_1C088B70C()
{
  sub_1C088D414();
}

void sub_1C088B730()
{
  sub_1C088D414();
}

void sub_1C088B754()
{
  void *v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  os_log_type_t v14;
  _BOOL8 v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v25;
  uint64_t v26;

  sub_1C0779670();
  sub_1C07A7D84(v3, v4, v5);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v6);
  sub_1C0787A24();
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v7);
  v8 = sub_1C0787A40();
  type metadata accessor for LifeEventSourceIngestor(v8);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v9);
  sub_1C0778544();
  if ((v2 & 1) != 0)
  {
    sub_1C07B68B8();
    goto LABEL_9;
  }
  v10 = MEMORY[0x1C3BA79F4]();
  sub_1C077C1C8(v10);
  sub_1C077B5BC();
  v1 = sub_1C078049C();
  sub_1C079BD54();
  sub_1C07BFEC8(&qword_1ED75AAF8);
  sub_1C07A5C20();
  if (!&qword_1ED75AB00)
  {
    sub_1C07785A8();
    sub_1C0778718();
LABEL_9:
    sub_1C0892FA4();
    if (v26)
    {
      sub_1C07ADBAC();
      sub_1C077AFF0();
    }
    else
    {
      sub_1C0892C70(v23, &qword_1EF633030);
      v1 = 0;
    }
    if ((v25 & 1) != 0 || !__OFADD__(v1, 1))
    {
      sub_1C07937DC();
      __asm { BR              X10 }
    }
    __break(1u);
    JUMPOUT(0x1C088BB00);
  }
  sub_1C07785A8();
  sub_1C0778718();
  if (qword_1ED761458 != -1)
    swift_once();
  v11 = sub_1C077585C();
  v12 = sub_1C0781988(v11, (uint64_t)qword_1ED78D818);
  sub_1C078A31C(v12, v13, type metadata accessor for LifeEventSourceIngestor);
  sub_1C106F538();
  v14 = sub_1C077CF00();
  v15 = sub_1C077B6A4(v14);
  if (v15)
  {
    sub_1C0792D98();
    v16 = sub_1C079BD3C();
    sub_1C0892C9C(v16);
    sub_1C07B1628(4.8149e-34);
    sub_1C0887A64();
    v19 = sub_1C0782D28(v17, v18);
    sub_1C079A880(v19);
    v20 = sub_1C077960C();
    sub_1C077EB5C(v20, type metadata accessor for LifeEventSourceIngestor);
    sub_1C079D2FC(&dword_1C0771000, v21, v22, "%s failed to update progress token");
    sub_1C0797090();
    sub_1C0776778();
  }
  sub_1C077EB5C(v15, type metadata accessor for LifeEventSourceIngestor);
  sub_1C077E6C8();

  sub_1C0776760();
}

void sub_1C088BB10()
{
  sub_1C088C864();
}

void sub_1C088BB34()
{
  uint64_t v0;
  void *v1;
  char v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  os_log_type_t v15;
  _BOOL8 v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  char v29;
  uint64_t v30;

  sub_1C0779670();
  v1 = (void *)v0;
  v29 = v2;
  v4 = v3;
  v6 = v5;
  type metadata accessor for ConstructionProgressTokens(0);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v7);
  sub_1C0892D90(v8, v26);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v9);
  v10 = sub_1C0782B30();
  type metadata accessor for CNContactFullSourceIngestor(v10);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v11);
  sub_1C0778544();
  if (v4 >> 60 == 15)
  {
LABEL_8:
    sub_1C07A9BD8();
    if (v30)
    {
      sub_1C07ADBAC();
      sub_1C077AFF0();
      if ((v29 & 1) != 0)
        goto LABEL_13;
    }
    else
    {
      sub_1C0892C70(v24, &qword_1EF633030);
      v0 = 0;
      if ((v29 & 1) != 0)
        goto LABEL_13;
    }
    if (__OFADD__(v0, 1))
    {
      __break(1u);
      JUMPOUT(0x1C088BF70);
    }
LABEL_13:
    sub_1C07937DC();
    __asm { BR              X10 }
  }
  v28 = v0;
  v12 = sub_1C07B0E28(v6, v4);
  v27 = (void *)MEMORY[0x1C3BA79F4](v12);
  sub_1C106A774();
  sub_1C077B5BC();
  v0 = sub_1C078049C();
  sub_1C079BD54();
  sub_1C07BFEC8(&qword_1ED75AAE8);
  sub_1C07825C8();
  if (!&qword_1ED75AAF0)
  {
    sub_1C07785A8();
    objc_autoreleasePoolPop(v27);
    sub_1C0892CA8(v6);
    goto LABEL_8;
  }
  sub_1C07785A8();
  objc_autoreleasePoolPop(v27);
  sub_1C0892CA8(v6);
  if (qword_1ED761458 != -1)
    swift_once();
  v13 = sub_1C077585C();
  sub_1C0781988(v13, (uint64_t)qword_1ED78D818);
  sub_1C07AC098(v28, v14, type metadata accessor for CNContactFullSourceIngestor);
  sub_1C106F538();
  v15 = sub_1C077CF00();
  v16 = sub_1C077B6A4(v15);
  if (v16)
  {
    sub_1C0792D98();
    v17 = sub_1C079BD3C();
    sub_1C0892C9C(v17);
    sub_1C07B1628(4.8149e-34);
    sub_1C0887964();
    v20 = sub_1C0782D28(v18, v19);
    sub_1C079A880(v20);
    v21 = sub_1C077960C();
    sub_1C077EB5C(v21, type metadata accessor for CNContactFullSourceIngestor);
    sub_1C079D2FC(&dword_1C0771000, v22, v23, "%s failed to update progress token");
    sub_1C0797090();
    sub_1C0776778();
  }
  sub_1C077EB5C(v16, type metadata accessor for CNContactFullSourceIngestor);
  sub_1C077E6C8();

  sub_1C0776760();
}

void sub_1C088BF80()
{
  uint64_t v0;
  void *v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  os_log_type_t v18;
  _BOOL8 v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;

  sub_1C0779670();
  v1 = (void *)v0;
  v35 = v2;
  v4 = v3;
  v6 = v5;
  v7 = type metadata accessor for ConstructionProgressTokens(0);
  v8 = *(_QWORD *)(v7 - 8);
  v32 = v7;
  v33 = v8;
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v9);
  v34 = *(_QWORD *)(sub_1C0892D90(v10, v30) - 8);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v11);
  v12 = sub_1C0782B30();
  type metadata accessor for CNContactDeltaSourceIngestor(v12);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v13);
  if (v4 >> 60 == 15)
  {
LABEL_8:
    sub_1C0892FA4();
    v28 = v35;
    if (v38)
    {
      sub_1C07ADBAC();
      sub_1C077AFF0();
      if ((v28 & 1) != 0)
        goto LABEL_13;
    }
    else
    {
      sub_1C0892C70(v27, &qword_1EF633030);
      v0 = 0;
      if ((v28 & 1) != 0)
        goto LABEL_13;
    }
    if (__OFADD__(v0, 1))
    {
      __break(1u);
      JUMPOUT(0x1C088C3E4);
    }
LABEL_13:
    sub_1C07937DC();
    __asm { BR              X10 }
  }
  v30 = (uint64_t)&v30 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_1C07B0E28(v6, v4);
  v31 = (void *)MEMORY[0x1C3BA79F4](v15);
  v36 = v6;
  v37 = v4;
  sub_1C106A774();
  sub_1C077B5BC();
  v0 = sub_1C078049C();
  sub_1C079BD54();
  sub_1C07BFEC8(&qword_1ED75AAE8);
  sub_1C07825C8();
  if (!&qword_1ED75AAF0)
  {
    sub_1C07785A8();
    objc_autoreleasePoolPop(v31);
    sub_1C0892CA8(v6);
    goto LABEL_8;
  }
  sub_1C07785A8();
  objc_autoreleasePoolPop(v31);
  sub_1C0892CA8(v6);
  if (qword_1ED761458 != -1)
    swift_once();
  v16 = sub_1C077585C();
  sub_1C0781988(v16, (uint64_t)qword_1ED78D818);
  sub_1C07AC098((uint64_t)v1, v17, type metadata accessor for CNContactDeltaSourceIngestor);
  sub_1C106F538();
  v18 = sub_1C077CF00();
  v19 = sub_1C077B6A4(v18);
  if (v19)
  {
    sub_1C0792D98();
    v20 = sub_1C079BD3C();
    sub_1C0892C9C(v20);
    sub_1C07B1628(4.8149e-34);
    sub_1C0887878();
    v23 = sub_1C0782D28(v21, v22);
    sub_1C079A880(v23);
    v24 = sub_1C077960C();
    sub_1C077EB5C(v24, type metadata accessor for CNContactDeltaSourceIngestor);
    sub_1C079D2FC(&dword_1C0771000, v25, v26, "%s failed to update progress token");
    sub_1C0797090();
    sub_1C0776778();
  }
  sub_1C077EB5C(v19, type metadata accessor for CNContactDeltaSourceIngestor);
  sub_1C077E6C8();

  sub_1C0776760();
}

void sub_1C088C3F4()
{
  sub_1C088D414();
}

void sub_1C088C418()
{
  sub_1C088C864();
}

void sub_1C088C43C()
{
  void *v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  os_log_type_t v14;
  _BOOL8 v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v25;
  uint64_t v26;

  sub_1C0779670();
  sub_1C07A7D84(v3, v4, v5);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v6);
  sub_1C0787A24();
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v7);
  v8 = sub_1C0782B30();
  type metadata accessor for BMAppleMusicEventSourceIngestor(v8);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v9);
  sub_1C0778544();
  if ((v2 & 1) != 0)
  {
    sub_1C07B68B8();
    goto LABEL_9;
  }
  v10 = MEMORY[0x1C3BA79F4]();
  sub_1C077C1C8(v10);
  sub_1C077B5BC();
  v1 = sub_1C078049C();
  sub_1C079BD54();
  sub_1C07BFEC8(&qword_1ED75AAF8);
  sub_1C07A5C20();
  if (!&qword_1ED75AB00)
  {
    sub_1C07785A8();
    sub_1C0778718();
LABEL_9:
    sub_1C07A9BD8();
    if (v26)
    {
      sub_1C07ADBAC();
      sub_1C077AFF0();
    }
    else
    {
      sub_1C0892C70(v23, &qword_1EF633030);
      v1 = 0;
    }
    if ((v25 & 1) != 0 || !__OFADD__(v1, 1))
    {
      sub_1C07937DC();
      __asm { BR              X10 }
    }
    __break(1u);
    JUMPOUT(0x1C088C80CLL);
  }
  sub_1C07785A8();
  sub_1C0778718();
  if (qword_1ED761458 != -1)
    swift_once();
  v11 = sub_1C077585C();
  v12 = sub_1C0781988(v11, (uint64_t)qword_1ED78D818);
  sub_1C078A31C(v12, v13, type metadata accessor for BMAppleMusicEventSourceIngestor);
  sub_1C106F538();
  v14 = sub_1C077CF00();
  v15 = sub_1C077B6A4(v14);
  if (v15)
  {
    sub_1C0792D98();
    v16 = sub_1C079BD3C();
    sub_1C0892C9C(v16);
    sub_1C07B1628(4.8149e-34);
    sub_1C08875AC();
    v19 = sub_1C0782D28(v17, v18);
    sub_1C079A880(v19);
    v20 = sub_1C077960C();
    sub_1C077EB5C(v20, type metadata accessor for BMAppleMusicEventSourceIngestor);
    sub_1C079D2FC(&dword_1C0771000, v21, v22, "%s failed to update progress token");
    sub_1C0797090();
    sub_1C0776778();
  }
  sub_1C077EB5C(v15, type metadata accessor for BMAppleMusicEventSourceIngestor);
  sub_1C077E6C8();

  sub_1C0776760();
}

void sub_1C088C81C()
{
  sub_1C088D414();
}

void sub_1C088C840()
{
  sub_1C088C864();
}

void sub_1C088C864()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  os_log_type_t v3;
  void (*v4)(uint64_t);
  void (*v5)(uint64_t);
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  uint64_t v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v23;
  uint64_t v24;

  sub_1C0779670();
  v5 = v4;
  sub_1C07BC670(v6, v7, v8);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v9);
  sub_1C0787A24();
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v10);
  v11 = sub_1C0787A40();
  v5(v11);
  sub_1C078B9A4();
  MEMORY[0x1E0C80A78](v12);
  sub_1C0892F70();
  if ((v1 & 1) != 0)
    goto LABEL_9;
  MEMORY[0x1C3BA79F4]();
  sub_1C077B6B4();
  sub_1C077B5BC();
  sub_1C078049C();
  v13 = sub_1C079BD54();
  sub_1C07BFEC8(&qword_1ED75AAF8);
  sub_1C07825C8();
  if (!&qword_1ED75AB00)
  {
    sub_1C07785A8();
    sub_1C0892F44();
LABEL_9:
    sub_1C0891254();
    if (v24)
    {
      sub_1C077FD50();
      sub_1C077AFF0();
    }
    else
    {
      sub_1C0892C70(v21, &qword_1EF633030);
      v0 = 0;
    }
    if ((v23 & 1) != 0 || !__OFADD__(v0, 1))
    {
      sub_1C077F0E4();
      __asm { BR              X10 }
    }
    __break(1u);
    JUMPOUT(0x1C088CC70);
  }
  sub_1C07785A8();
  sub_1C0892F44();
  if (qword_1ED761458 != -1)
    swift_once();
  v14 = sub_1C077585C();
  sub_1C0781988(v14, (uint64_t)qword_1ED78D818);
  sub_1C0892C20(v0, v2, (uint64_t (*)(_QWORD))v5);
  sub_1C106F538();
  v15 = sub_1C077CF00();
  if (sub_1C077B6A4(v15))
  {
    v16 = (uint8_t *)sub_1C0792D98();
    v17 = sub_1C0775854();
    sub_1C0892C9C(v17);
    sub_1C0892FF4(4.8149e-34);
    sub_1C088769C();
    v20 = sub_1C0782D28(v18, v19);
    sub_1C0892DB0(v20);
    sub_1C077960C();
    sub_1C077E59C();
    sub_1C07796F0(&dword_1C0771000, v13, v3, "%s failed to update progress token", v16);
    sub_1C0797090();
    sub_1C0776778();
  }
  sub_1C077E59C();
  sub_1C077E6C8();

  sub_1C0776760();
}

void sub_1C088CC80()
{
  void *v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  os_log_type_t v13;
  _BOOL8 v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v24;
  uint64_t v25;

  sub_1C0779670();
  sub_1C07A7D84(v3, v4, v5);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v6);
  sub_1C0787A24();
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v7);
  sub_1C0782B30();
  type metadata accessor for FutureLifeEventDeltaSourceIngestor();
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v8);
  sub_1C0778544();
  if ((v2 & 1) != 0)
  {
    sub_1C07B68B8();
    goto LABEL_9;
  }
  v9 = MEMORY[0x1C3BA79F4]();
  sub_1C077C1C8(v9);
  sub_1C077B5BC();
  v1 = sub_1C078049C();
  sub_1C079BD54();
  sub_1C07BFEC8(&qword_1ED75AAF8);
  sub_1C07A5C20();
  if (!&qword_1ED75AB00)
  {
    sub_1C07785A8();
    sub_1C0778718();
LABEL_9:
    sub_1C07AF930();
    sub_1C0891428();
    if (v25)
    {
      sub_1C07ADBAC();
      sub_1C077AFF0();
    }
    else
    {
      sub_1C0892C70(v22, &qword_1EF633030);
      v1 = 0;
    }
    if ((v24 & 1) != 0 || !__OFADD__(v1, 1))
    {
      sub_1C07937DC();
      __asm { BR              X10 }
    }
    __break(1u);
    JUMPOUT(0x1C088D01CLL);
  }
  sub_1C07785A8();
  sub_1C0778718();
  if (qword_1ED761458 != -1)
    swift_once();
  v10 = sub_1C077585C();
  v11 = sub_1C0781988(v10, (uint64_t)qword_1ED78D818);
  sub_1C078A31C(v11, v12, (uint64_t (*)(_QWORD))type metadata accessor for FutureLifeEventDeltaSourceIngestor);
  sub_1C106F538();
  v13 = sub_1C077CF00();
  v14 = sub_1C077B6A4(v13);
  if (v14)
  {
    sub_1C0792D98();
    v15 = sub_1C079BD3C();
    sub_1C0892C9C(v15);
    sub_1C07B1628(4.8149e-34);
    sub_1C08873BC();
    v18 = sub_1C0782D28(v16, v17);
    sub_1C079A880(v18);
    v19 = sub_1C077960C();
    sub_1C077EB5C(v19, (uint64_t (*)(_QWORD))type metadata accessor for FutureLifeEventDeltaSourceIngestor);
    sub_1C079D2FC(&dword_1C0771000, v20, v21, "%s failed to update progress token");
    sub_1C0797090();
    sub_1C0776778();
  }
  sub_1C077EB5C(v14, (uint64_t (*)(_QWORD))type metadata accessor for FutureLifeEventDeltaSourceIngestor);
  sub_1C077E6C8();

  sub_1C0776760();
}

void sub_1C088D02C()
{
  void *v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  os_log_type_t v14;
  _BOOL8 v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v25;
  uint64_t v26;

  sub_1C0779670();
  sub_1C07A7D84(v3, v4, v5);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v6);
  sub_1C0787A24();
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v7);
  v8 = sub_1C0782B30();
  type metadata accessor for BMAppleMusicEventDeltaSourceIngestor(v8);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v9);
  sub_1C0778544();
  if ((v2 & 1) != 0)
  {
    sub_1C07B68B8();
    goto LABEL_9;
  }
  v10 = MEMORY[0x1C3BA79F4]();
  sub_1C077C1C8(v10);
  sub_1C077B5BC();
  v1 = sub_1C078049C();
  sub_1C079BD54();
  sub_1C07BFEC8(&qword_1ED75AAF8);
  sub_1C07A5C20();
  if (!&qword_1ED75AB00)
  {
    sub_1C07785A8();
    sub_1C0778718();
LABEL_9:
    sub_1C07AF930();
    sub_1C0891254();
    if (v26)
    {
      sub_1C07ADBAC();
      sub_1C077AFF0();
    }
    else
    {
      sub_1C0892C70(v23, &qword_1EF633030);
      v1 = 0;
    }
    if ((v25 & 1) != 0 || !__OFADD__(v1, 1))
    {
      sub_1C07937DC();
      __asm { BR              X10 }
    }
    __break(1u);
    JUMPOUT(0x1C088D3E0);
  }
  sub_1C07785A8();
  sub_1C0778718();
  if (qword_1ED761458 != -1)
    swift_once();
  v11 = sub_1C077585C();
  v12 = sub_1C0781988(v11, (uint64_t)qword_1ED78D818);
  sub_1C078A31C(v12, v13, type metadata accessor for BMAppleMusicEventDeltaSourceIngestor);
  sub_1C106F538();
  v14 = sub_1C077CF00();
  v15 = sub_1C077B6A4(v14);
  if (v15)
  {
    sub_1C0792D98();
    v16 = sub_1C079BD3C();
    sub_1C0892C9C(v16);
    sub_1C07B1628(4.8149e-34);
    sub_1C08872E4();
    v19 = sub_1C0782D28(v17, v18);
    sub_1C079A880(v19);
    v20 = sub_1C077960C();
    sub_1C077EB5C(v20, type metadata accessor for BMAppleMusicEventDeltaSourceIngestor);
    sub_1C079D2FC(&dword_1C0771000, v21, v22, "%s failed to update progress token");
    sub_1C0797090();
    sub_1C0776778();
  }
  sub_1C077EB5C(v15, type metadata accessor for BMAppleMusicEventDeltaSourceIngestor);
  sub_1C077E6C8();

  sub_1C0776760();
}

void sub_1C088D3F0()
{
  sub_1C088D414();
}

void sub_1C088D414()
{
  uint64_t v0;
  uint64_t v1;
  os_log_type_t v2;
  void (*v3)(uint64_t);
  void (*v4)(uint64_t);
  char v5;
  char v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  uint64_t v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  sub_1C0779670();
  v4 = v3;
  v25 = v5;
  v7 = v6;
  sub_1C07AEE0C();
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v8);
  sub_1C0787A24();
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v9);
  v10 = sub_1C0787A40();
  v4(v10);
  sub_1C078B9A4();
  MEMORY[0x1E0C80A78](v11);
  sub_1C0892F70();
  if ((v7 & 1) != 0)
    goto LABEL_9;
  MEMORY[0x1C3BA79F4]();
  sub_1C077B6B4();
  sub_1C077B5BC();
  sub_1C078049C();
  v12 = sub_1C079BD54();
  sub_1C07BFEC8(&qword_1ED75AAF8);
  sub_1C07825C8();
  if (!&qword_1ED75AB00)
  {
    sub_1C07785A8();
    sub_1C0892F44();
LABEL_9:
    sub_1C0890EBC();
    v21 = v27;
    if (v27)
    {
      v22 = v28;
      v23 = sub_1C07A9480(&v26, v27);
      (*(void (**)(uint64_t, uint64_t))(v22 + 48))(v21, v22);
      sub_1C077AFF0();
    }
    else
    {
      sub_1C0892C70(v20, &qword_1EF633030);
      v23 = 0;
    }
    if ((v25 & 1) != 0 || !__OFADD__(v23, 1))
    {
      sub_1C077F0E4();
      __asm { BR              X10 }
    }
    __break(1u);
    JUMPOUT(0x1C088D844);
  }
  sub_1C07785A8();
  sub_1C0892F44();
  if (qword_1ED761458 != -1)
    swift_once();
  v13 = sub_1C077585C();
  sub_1C0781988(v13, (uint64_t)qword_1ED78D818);
  sub_1C0892C20(v0, v1, (uint64_t (*)(_QWORD))v4);
  sub_1C106F538();
  v14 = sub_1C077CF00();
  if (sub_1C077B6A4(v14))
  {
    v15 = (uint8_t *)sub_1C0792D98();
    v16 = sub_1C0775854();
    sub_1C0892C9C(v16);
    *(_DWORD *)v15 = 136315138;
    sub_1C08874BC();
    v19 = sub_1C0782D28(v17, v18);
    sub_1C079A880(v19);
    sub_1C077960C();
    sub_1C07BA028();
    sub_1C07796F0(&dword_1C0771000, v12, v2, "%s failed to update progress token", v15);
    sub_1C0797090();
    sub_1C0776778();
  }
  sub_1C07BA028();
  sub_1C077E6C8();

  sub_1C0776760();
}

void sub_1C088D854()
{
  sub_1C088D878();
}

void sub_1C088D878()
{
  NSObject *v0;
  uint64_t v1;
  os_log_type_t v2;
  void (*v3)(uint64_t);
  void (*v4)(uint64_t);
  char v5;
  char v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  void *v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  sub_1C0779670();
  v4 = v3;
  v24 = v5;
  v7 = v6;
  sub_1C07AEE0C();
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v8);
  sub_1C0787A24();
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v9);
  v10 = sub_1C0782B30();
  v4(v10);
  sub_1C078B9A4();
  MEMORY[0x1E0C80A78](v11);
  sub_1C0892F70();
  if ((v7 & 1) != 0)
    goto LABEL_9;
  v23 = (void *)MEMORY[0x1C3BA79F4]();
  sub_1C077B6B4();
  sub_1C077B5BC();
  sub_1C078049C();
  sub_1C079BD54();
  sub_1C07BFEC8(&qword_1ED75AAF8);
  sub_1C07825C8();
  if (!&qword_1ED75AB00)
  {
    sub_1C07785A8();
    objc_autoreleasePoolPop(v23);
LABEL_9:
    sub_1C07AF930();
    sub_1C088FE5C();
    v19 = v26;
    if (v26)
    {
      v20 = v27;
      v21 = sub_1C07A9480(&v25, v26);
      (*(void (**)(uint64_t, uint64_t))(v20 + 48))(v19, v20);
      sub_1C077AFF0();
    }
    else
    {
      sub_1C0892C70(v18, &qword_1EF633030);
      v21 = 0;
    }
    if ((v24 & 1) != 0 || !__OFADD__(v21, 1))
    {
      sub_1C07937DC();
      __asm { BR              X10 }
    }
    __break(1u);
    JUMPOUT(0x1C088DCC0);
  }
  sub_1C07785A8();
  objc_autoreleasePoolPop(v23);
  if (qword_1ED761458 != -1)
    swift_once();
  v12 = sub_1C077585C();
  sub_1C0781988(v12, (uint64_t)qword_1ED78D818);
  sub_1C0892C20((uint64_t)v0, v1, (uint64_t (*)(_QWORD))v4);
  sub_1C106F538();
  v13 = sub_1C077CF00();
  if (sub_1C077B6A4(v13))
  {
    v14 = (uint8_t *)sub_1C0792D98();
    v25 = sub_1C0775854();
    sub_1C0892FF4(4.8149e-34);
    sub_1C0888148();
    v17 = sub_1C0782D28(v15, v16);
    sub_1C0892DB0(v17);
    sub_1C077960C();
    sub_1C0892FBC();
    sub_1C07796F0(&dword_1C0771000, v0, v2, "%s failed to update progress token", v14);
    swift_arrayDestroy();
    sub_1C0776778();
  }
  sub_1C0892FBC();
  sub_1C077E6C8();

  sub_1C0776760();
}

void sub_1C088DCD0()
{
  void *v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  os_log_type_t v13;
  _BOOL8 v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v24;
  uint64_t v25;

  sub_1C0779670();
  sub_1C07A7D84(v3, v4, v5);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v6);
  sub_1C0787A24();
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v7);
  sub_1C0787A40();
  type metadata accessor for Deduper();
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v8);
  sub_1C0778544();
  if ((v2 & 1) != 0)
  {
    sub_1C07B68B8();
    goto LABEL_9;
  }
  v9 = MEMORY[0x1C3BA79F4]();
  sub_1C077C1C8(v9);
  sub_1C077B5BC();
  v1 = sub_1C078049C();
  sub_1C079BD54();
  sub_1C07BFEC8(&qword_1ED75AAF8);
  sub_1C07A5C20();
  if (!&qword_1ED75AB00)
  {
    sub_1C07785A8();
    sub_1C0778718();
LABEL_9:
    sub_1C07AF930();
    sub_1C08917D0();
    if (v25)
    {
      sub_1C07ADBAC();
      sub_1C077AFF0();
    }
    else
    {
      sub_1C0892C70(v22, &qword_1EF633030);
      v1 = 0;
    }
    if ((v24 & 1) != 0 || !__OFADD__(v1, 1))
    {
      sub_1C07937DC();
      __asm { BR              X10 }
    }
    __break(1u);
    JUMPOUT(0x1C088E044);
  }
  sub_1C07785A8();
  sub_1C0778718();
  if (qword_1ED761458 != -1)
    swift_once();
  v10 = sub_1C077585C();
  v11 = sub_1C0781988(v10, (uint64_t)qword_1ED78D818);
  sub_1C078A31C(v11, v12, (uint64_t (*)(_QWORD))type metadata accessor for Deduper);
  sub_1C106F538();
  v13 = sub_1C077CF00();
  v14 = sub_1C077B6A4(v13);
  if (v14)
  {
    sub_1C0792D98();
    v15 = sub_1C079BD3C();
    sub_1C0892C9C(v15);
    sub_1C07B1628(4.8149e-34);
    sub_1C0886FB0();
    v18 = sub_1C0782D28(v16, v17);
    sub_1C079A880(v18);
    v19 = sub_1C077960C();
    sub_1C077EB5C(v19, (uint64_t (*)(_QWORD))type metadata accessor for Deduper);
    sub_1C079D2FC(&dword_1C0771000, v20, v21, "%s failed to update progress token");
    sub_1C0797090();
    sub_1C0776778();
  }
  sub_1C077EB5C(v14, (uint64_t (*)(_QWORD))type metadata accessor for Deduper);
  sub_1C077E6C8();

  sub_1C0776760();
}

void sub_1C088E054()
{
  void *v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  os_log_type_t v13;
  _BOOL8 v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v24;
  uint64_t v25;

  sub_1C0779670();
  sub_1C07A7D84(v3, v4, v5);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v6);
  sub_1C0787A24();
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v7);
  sub_1C0787A40();
  type metadata accessor for Resolver();
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v8);
  sub_1C0778544();
  if ((v2 & 1) != 0)
  {
    sub_1C07B68B8();
    goto LABEL_9;
  }
  v9 = MEMORY[0x1C3BA79F4]();
  sub_1C077C1C8(v9);
  sub_1C077B5BC();
  v1 = sub_1C078049C();
  sub_1C079BD54();
  sub_1C07BFEC8(&qword_1ED75AAF8);
  sub_1C07A5C20();
  if (!&qword_1ED75AB00)
  {
    sub_1C07785A8();
    sub_1C0778718();
LABEL_9:
    sub_1C0892F80();
    if (v25)
    {
      sub_1C07ADBAC();
      sub_1C077AFF0();
    }
    else
    {
      sub_1C0892C70(v22, &qword_1EF633030);
      v1 = 0;
    }
    if ((v24 & 1) != 0 || !__OFADD__(v1, 1))
    {
      sub_1C07937DC();
      __asm { BR              X10 }
    }
    __break(1u);
    JUMPOUT(0x1C088E424);
  }
  sub_1C07785A8();
  sub_1C0778718();
  if (qword_1ED761458 != -1)
    swift_once();
  v10 = sub_1C077585C();
  v11 = sub_1C0781988(v10, (uint64_t)qword_1ED78D818);
  sub_1C078A31C(v11, v12, (uint64_t (*)(_QWORD))type metadata accessor for Resolver);
  sub_1C106F538();
  v13 = sub_1C077CF00();
  v14 = sub_1C077B6A4(v13);
  if (v14)
  {
    sub_1C0792D98();
    v15 = sub_1C079BD3C();
    sub_1C0892C9C(v15);
    sub_1C07B1628(4.8149e-34);
    sub_1C0886EBC();
    v18 = sub_1C0782D28(v16, v17);
    sub_1C079A880(v18);
    v19 = sub_1C077960C();
    sub_1C077EB5C(v19, (uint64_t (*)(_QWORD))type metadata accessor for Resolver);
    sub_1C079D2FC(&dword_1C0771000, v20, v21, "%s failed to update progress token");
    sub_1C0797090();
    sub_1C0776778();
  }
  sub_1C077EB5C(v14, (uint64_t (*)(_QWORD))type metadata accessor for Resolver);
  sub_1C077E6C8();

  sub_1C0776760();
}

uint64_t sub_1C088E434(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8)
{
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  void (*v18)(char *, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v22 = a7;
  v23 = a8;
  v20 = a5;
  v21 = a1;
  v10 = a6 & 1;
  v11 = sub_1C07ACF80(&qword_1ED759F00);
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v20 - v16;
  type metadata accessor for EntityTriple(0);
  sub_1C07803F8(&qword_1ED75A488, (void (*)(uint64_t))type metadata accessor for EntityTriple);
  sub_1C106B944();
  sub_1C0D49670((uint64_t)v14, a3, a4, v20, v10, (uint64_t)v17);
  v18 = *(void (**)(char *, uint64_t))(v12 + 8);
  v18(v14, v11);
  sub_1C088E578(v21, v17, v22, v23);
  return ((uint64_t (*)(char *, uint64_t))v18)(v17, v11);
}

uint64_t sub_1C088E578(uint64_t a1, char *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t result;
  _QWORD v22[9];
  uint64_t v23;
  char *v24;
  char *v25;
  char *v26;

  v25 = a2;
  v22[6] = a4;
  v22[4] = a3;
  v23 = sub_1C106E590();
  v22[5] = *(_QWORD *)(v23 - 8);
  MEMORY[0x1E0C80A78](v23);
  v22[7] = (char *)v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1C07ACF80(&qword_1ED75A508);
  MEMORY[0x1E0C80A78](v6);
  v24 = (char *)v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v22[8] = (char *)v22 - v9;
  v10 = type metadata accessor for EntityTriple(0);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)v22 - v15;
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)v22 - v18;
  sub_1C07ACF80(&qword_1ED759F00);
  sub_1C07BB218(&qword_1ED759ED8, &qword_1ED759F00);
  sub_1C07803F8(&qword_1ED75A490, (void (*)(uint64_t))type metadata accessor for EntityTriple);
  v20 = v26;
  result = sub_1C106BAAC();
  if (!v20)
  {
    v22[1] = v11;
    v22[2] = v19;
    v25 = v13;
    v26 = v16;
    v22[3] = a1;
    sub_1C09D637C();
  }
  return result;
}

void sub_1C088E8F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;

  if (v2)
  {
    sub_1C07B1F90(v3, type metadata accessor for EntityTriple);
  }
  else
  {
    v10 = *(_QWORD *)(v9 - 200);
    *(_QWORD *)(v9 - 144) = v1;
    if (sub_1C07B2D80(v8, 1, v5) != 1)
    {
      sub_1C07E563C(v8, *(_QWORD *)(v9 - 112), type metadata accessor for EntityTriple);
      sub_1C07803F8(&qword_1ED75EA38, (void (*)(uint64_t))MEMORY[0x1E0D3CE28]);
      v11 = sub_1C106FAA8();
      v12 = *(_QWORD *)(v9 - 160);
      if ((v11 & 1) != 0)
      {
        v13 = *(_QWORD *)(v9 - 112);
      }
      else
      {
        v14 = (void *)MEMORY[0x1C3BA79F4]();
        sub_1C0AB9FA4(*(_QWORD *)(v9 - 176), v12, v9 - 72, v4, *(_QWORD *)(v9 - 184));
        objc_autoreleasePoolPop(v14);
        swift_bridgeObjectRelease();
        *(_QWORD *)(v9 - 72) = MEMORY[0x1E0DEE9D8];
        v13 = *(_QWORD *)(v9 - 112);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 168) + 24))(v4, v13, v7);
      }
      sub_1C0892C20(v13, *(_QWORD *)(v9 - 120), type metadata accessor for EntityTriple);
      v15 = *(_QWORD *)(v9 - 72);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1C07EACCC();
        v15 = v18;
      }
      v16 = *(_QWORD *)(v15 + 16);
      if (v16 >= *(_QWORD *)(v15 + 24) >> 1)
      {
        sub_1C07EACCC();
        v17 = v10;
        v15 = v19;
      }
      else
      {
        v17 = v10;
      }
      *(_QWORD *)(v15 + 16) = v16 + 1;
      sub_1C07E563C(*(_QWORD *)(v9 - 120), v15 + v6 + v16 * v17, type metadata accessor for EntityTriple);
      *(_QWORD *)(v9 - 72) = v15;
      sub_1C07B1F90(*(_QWORD *)(v9 - 112), type metadata accessor for EntityTriple);
      sub_1C09D637C();
    }
    sub_1C0784B6C(v8, &qword_1ED75A508);
    v20 = *(_QWORD *)(v9 - 160);
    if (*(_QWORD *)(*(_QWORD *)(v9 - 72) + 16))
    {
      v21 = (void *)MEMORY[0x1C3BA79F4]();
      sub_1C0AB9FA4(*(_QWORD *)(v9 - 176), v20, v9 - 72, v4, *(_QWORD *)(v9 - 184));
      v0 = *(_QWORD *)(v9 - 168);
      objc_autoreleasePoolPop(v21);
    }
    else
    {
      v0 = *(_QWORD *)(v9 - 168);
    }
    sub_1C07B1F90(*(_QWORD *)(v9 - 192), type metadata accessor for EntityTriple);
  }
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v0 + 8))(v4, v7);
  swift_bridgeObjectRelease();
  JUMPOUT(0x1C088E818);
}

uint64_t sub_1C088EBB4(uint64_t a1, char *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t result;
  _QWORD v22[9];
  uint64_t v23;
  char *v24;
  char *v25;
  char *v26;

  v25 = a2;
  v22[6] = a4;
  v22[4] = a3;
  v23 = sub_1C106E590();
  v22[5] = *(_QWORD *)(v23 - 8);
  MEMORY[0x1E0C80A78](v23);
  v22[7] = (char *)v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1C07ACF80(&qword_1ED75F138);
  MEMORY[0x1E0C80A78](v6);
  v24 = (char *)v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v22[8] = (char *)v22 - v9;
  v10 = type metadata accessor for GraphTriple(0);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)v22 - v15;
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)v22 - v18;
  sub_1C07ACF80(&qword_1ED75E500);
  sub_1C07BB218(&qword_1ED75E9D0, &qword_1ED75E500);
  sub_1C07803F8(&qword_1ED756860, (void (*)(uint64_t))type metadata accessor for GraphTriple);
  v20 = v26;
  result = sub_1C106BAAC();
  if (!v20)
  {
    v22[1] = v11;
    v22[2] = v19;
    v25 = v13;
    v26 = v16;
    v22[3] = a1;
    sub_1C09D6194();
  }
  return result;
}

void sub_1C088EF34()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;

  if (v2)
  {
    sub_1C07B1F90(v3, type metadata accessor for GraphTriple);
  }
  else
  {
    v10 = *(_QWORD *)(v9 - 200);
    *(_QWORD *)(v9 - 144) = v1;
    if (sub_1C07B2D80(v8, 1, v5) != 1)
    {
      sub_1C07E563C(v8, *(_QWORD *)(v9 - 112), type metadata accessor for GraphTriple);
      sub_1C07803F8(&qword_1ED75EA38, (void (*)(uint64_t))MEMORY[0x1E0D3CE28]);
      v11 = sub_1C106FAA8();
      v12 = *(_QWORD *)(v9 - 160);
      if ((v11 & 1) != 0)
      {
        v13 = *(_QWORD *)(v9 - 112);
      }
      else
      {
        v14 = (void *)MEMORY[0x1C3BA79F4]();
        sub_1C0AB9FA4(*(_QWORD *)(v9 - 176), v12, v9 - 72, v4, *(_QWORD *)(v9 - 184));
        objc_autoreleasePoolPop(v14);
        swift_bridgeObjectRelease();
        *(_QWORD *)(v9 - 72) = MEMORY[0x1E0DEE9D8];
        v13 = *(_QWORD *)(v9 - 112);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 168) + 24))(v4, v13, v7);
      }
      sub_1C0892C20(v13, *(_QWORD *)(v9 - 120), type metadata accessor for GraphTriple);
      v15 = *(_QWORD *)(v9 - 72);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1C07EB774();
        v15 = v18;
      }
      v16 = *(_QWORD *)(v15 + 16);
      if (v16 >= *(_QWORD *)(v15 + 24) >> 1)
      {
        sub_1C07EB774();
        v17 = v10;
        v15 = v19;
      }
      else
      {
        v17 = v10;
      }
      *(_QWORD *)(v15 + 16) = v16 + 1;
      sub_1C07E563C(*(_QWORD *)(v9 - 120), v15 + v6 + v16 * v17, type metadata accessor for GraphTriple);
      *(_QWORD *)(v9 - 72) = v15;
      sub_1C07B1F90(*(_QWORD *)(v9 - 112), type metadata accessor for GraphTriple);
      sub_1C09D6194();
    }
    sub_1C0784B6C(v8, &qword_1ED75F138);
    v20 = *(_QWORD *)(v9 - 160);
    if (*(_QWORD *)(*(_QWORD *)(v9 - 72) + 16))
    {
      v21 = (void *)MEMORY[0x1C3BA79F4]();
      sub_1C0AB9FA4(*(_QWORD *)(v9 - 176), v20, v9 - 72, v4, *(_QWORD *)(v9 - 184));
      v0 = *(_QWORD *)(v9 - 168);
      objc_autoreleasePoolPop(v21);
    }
    else
    {
      v0 = *(_QWORD *)(v9 - 168);
    }
    sub_1C07B1F90(*(_QWORD *)(v9 - 192), type metadata accessor for GraphTriple);
  }
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v0 + 8))(v4, v7);
  swift_bridgeObjectRelease();
  JUMPOUT(0x1C088EE54);
}

uint64_t sub_1C088F1F0(uint64_t a1, char *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t result;
  _QWORD v22[9];
  uint64_t v23;
  char *v24;
  char *v25;
  char *v26;

  v25 = a2;
  v22[6] = a4;
  v22[4] = a3;
  v23 = sub_1C106E590();
  v22[5] = *(_QWORD *)(v23 - 8);
  MEMORY[0x1E0C80A78](v23);
  v22[7] = (char *)v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1C07ACF80(&qword_1ED750E40);
  MEMORY[0x1E0C80A78](v6);
  v24 = (char *)v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v22[8] = (char *)v22 - v9;
  v10 = type metadata accessor for ConstructionGraphTriple(0);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)v22 - v15;
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)v22 - v18;
  sub_1C07ACF80(&qword_1ED750620);
  sub_1C07BB218(&qword_1ED750600, &qword_1ED750620);
  sub_1C07803F8(&qword_1ED750E08, (void (*)(uint64_t))type metadata accessor for ConstructionGraphTriple);
  v20 = v26;
  result = sub_1C106BAAC();
  if (!v20)
  {
    v22[1] = v11;
    v22[2] = v19;
    v25 = v13;
    v26 = v16;
    v22[3] = a1;
    sub_1C09D6470();
  }
  return result;
}

void sub_1C088F570()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;

  if (v2)
  {
    sub_1C07B1F90(v3, type metadata accessor for ConstructionGraphTriple);
  }
  else
  {
    v10 = *(_QWORD *)(v9 - 200);
    *(_QWORD *)(v9 - 144) = v1;
    if (sub_1C07B2D80(v8, 1, v5) != 1)
    {
      sub_1C07E563C(v8, *(_QWORD *)(v9 - 112), type metadata accessor for ConstructionGraphTriple);
      sub_1C07803F8(&qword_1ED75EA38, (void (*)(uint64_t))MEMORY[0x1E0D3CE28]);
      v11 = sub_1C106FAA8();
      v12 = *(_QWORD *)(v9 - 160);
      if ((v11 & 1) != 0)
      {
        v13 = *(_QWORD *)(v9 - 112);
      }
      else
      {
        v14 = (void *)MEMORY[0x1C3BA79F4]();
        sub_1C0AB9FA4(*(_QWORD *)(v9 - 176), v12, v9 - 72, v4, *(_QWORD *)(v9 - 184));
        objc_autoreleasePoolPop(v14);
        swift_bridgeObjectRelease();
        *(_QWORD *)(v9 - 72) = MEMORY[0x1E0DEE9D8];
        v13 = *(_QWORD *)(v9 - 112);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 168) + 24))(v4, v13, v7);
      }
      sub_1C0892C20(v13, *(_QWORD *)(v9 - 120), type metadata accessor for ConstructionGraphTriple);
      v15 = *(_QWORD *)(v9 - 72);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1C07EC154();
        v15 = v18;
      }
      v16 = *(_QWORD *)(v15 + 16);
      if (v16 >= *(_QWORD *)(v15 + 24) >> 1)
      {
        sub_1C07EC154();
        v17 = v10;
        v15 = v19;
      }
      else
      {
        v17 = v10;
      }
      *(_QWORD *)(v15 + 16) = v16 + 1;
      sub_1C07E563C(*(_QWORD *)(v9 - 120), v15 + v6 + v16 * v17, type metadata accessor for ConstructionGraphTriple);
      *(_QWORD *)(v9 - 72) = v15;
      sub_1C07B1F90(*(_QWORD *)(v9 - 112), type metadata accessor for ConstructionGraphTriple);
      sub_1C09D6470();
    }
    sub_1C0784B6C(v8, &qword_1ED750E40);
    v20 = *(_QWORD *)(v9 - 160);
    if (*(_QWORD *)(*(_QWORD *)(v9 - 72) + 16))
    {
      v21 = (void *)MEMORY[0x1C3BA79F4]();
      sub_1C0AB9FA4(*(_QWORD *)(v9 - 176), v20, v9 - 72, v4, *(_QWORD *)(v9 - 184));
      v0 = *(_QWORD *)(v9 - 168);
      objc_autoreleasePoolPop(v21);
    }
    else
    {
      v0 = *(_QWORD *)(v9 - 168);
    }
    sub_1C07B1F90(*(_QWORD *)(v9 - 192), type metadata accessor for ConstructionGraphTriple);
  }
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v0 + 8))(v4, v7);
  swift_bridgeObjectRelease();
  JUMPOUT(0x1C088F490);
}

uint64_t sub_1C088F82C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7)
{
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  void (*v17)(char *, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v21 = a6;
  v22 = a7;
  v20 = a1;
  v9 = a5 & 1;
  v10 = sub_1C07ACF80(&qword_1ED75E500);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v19 - v15;
  type metadata accessor for GraphTriple(0);
  sub_1C07803F8(&qword_1ED75E628, (void (*)(uint64_t))type metadata accessor for GraphTriple);
  sub_1C106B944();
  sub_1C0D496B4((uint64_t)v13, a3, 4, a4, v9, (uint64_t)v16);
  v17 = *(void (**)(char *, uint64_t))(v11 + 8);
  v17(v13, v10);
  sub_1C088EBB4(v20, v16, v21, v22);
  return ((uint64_t (*)(char *, uint64_t))v17)(v16, v10);
}

uint64_t sub_1C088F970(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7)
{
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  void (*v17)(char *, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v21 = a6;
  v22 = a7;
  v20 = a1;
  v9 = a5 & 1;
  v10 = sub_1C07ACF80(&qword_1ED750620);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v19 - v15;
  type metadata accessor for ConstructionGraphTriple(0);
  sub_1C07803F8(&qword_1ED750DF8, (void (*)(uint64_t))type metadata accessor for ConstructionGraphTriple);
  sub_1C106B944();
  sub_1C0D49D88((uint64_t)v13, a3, 4, a4, v9, (uint64_t)v16);
  v17 = *(void (**)(char *, uint64_t))(v11 + 8);
  v17(v13, v10);
  sub_1C088F1F0(v20, v16, v21, v22);
  return ((uint64_t (*)(char *, uint64_t))v17)(v16, v10);
}

void sub_1C088FAB4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;

  v1 = sub_1C07ACF80(&qword_1ED75C730);
  MEMORY[0x1E0C80A78](v1);
  v2 = type metadata accessor for ConstructionProgressTokens(0);
  MEMORY[0x1E0C80A78](v2);
  v3 = sub_1C07ACF80(&qword_1ED75ACF8);
  MEMORY[0x1E0C80A78](v3);
  v4 = type metadata accessor for ProgressTokens(0);
  MEMORY[0x1E0C80A78](v4);
  v5 = (char *)sub_1C088FBF8
     + 4 * byte_1C107E454[*(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for Blocker() + 44))];
  __asm { BR              X10 }
}

void sub_1C088FBF8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t (*v17)(uint64_t);
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  *(_QWORD *)(v9 - 128) = v4;
  v10 = sub_1C1070CB4();
  swift_bridgeObjectRelease();
  if ((v10 & 1) != 0)
  {
    type metadata accessor for PhaseStores();
    *(_QWORD *)(v9 - 96) = v8;
    sub_1C07803F8(&qword_1ED75CC40, (void (*)(uint64_t))type metadata accessor for Blocker);
    *(_QWORD *)(v9 - 88) = v11;
    v12 = sub_1C079DFC4((uint64_t *)(v9 - 120));
    sub_1C0892C20(v1, (uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for Blocker);
    swift_retain();
    sub_1C0D42028(v9 - 120, 0);
    swift_release();
    _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0(v9 - 120);
    if (sub_1C07B2D80(v5, 1, v6) == 1)
    {
      v13 = (uint64_t *)&unk_1ED75ACF8;
      v14 = v5;
LABEL_6:
      sub_1C0784B6C(v14, v13);
      *(_QWORD *)(v0 + 32) = 0;
      *(_OWORD *)v0 = 0u;
      *(_OWORD *)(v0 + 16) = 0u;
      return;
    }
    v17 = type metadata accessor for ProgressTokens;
    sub_1C07E563C(v5, v7, type metadata accessor for ProgressTokens);
    *(_QWORD *)(v0 + 24) = v6;
    *(_QWORD *)(v0 + 32) = &off_1E7A1D0E0;
    v18 = sub_1C079DFC4((uint64_t *)v0);
    v19 = v7;
  }
  else
  {
    type metadata accessor for PhaseStores();
    *(_QWORD *)(v9 - 96) = v8;
    sub_1C07803F8(&qword_1ED75CC40, (void (*)(uint64_t))type metadata accessor for Blocker);
    *(_QWORD *)(v9 - 88) = v15;
    v16 = sub_1C079DFC4((uint64_t *)(v9 - 120));
    sub_1C0892C20(v1, (uint64_t)v16, (uint64_t (*)(_QWORD))type metadata accessor for Blocker);
    swift_retain();
    sub_1C0D4203C(v9 - 120, 0);
    swift_release();
    _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0(v9 - 120);
    if (sub_1C07B2D80(v2, 1, v3) == 1)
    {
      v13 = (uint64_t *)&unk_1ED75C730;
      v14 = v2;
      goto LABEL_6;
    }
    v17 = type metadata accessor for ConstructionProgressTokens;
    v20 = v2;
    v21 = *(_QWORD *)(v9 - 128);
    sub_1C07E563C(v20, v21, type metadata accessor for ConstructionProgressTokens);
    *(_QWORD *)(v0 + 24) = v3;
    *(_QWORD *)(v0 + 32) = &off_1E7A1D138;
    v18 = sub_1C079DFC4((uint64_t *)v0);
    v19 = v21;
  }
  sub_1C07E563C(v19, (uint64_t)v18, v17);
}

void sub_1C088FE5C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_1C0779670();
  sub_1C0892D0C(v0, v1, v2);
  sub_1C07ACF80(&qword_1ED75C730);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v3);
  sub_1C0780A50();
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v4);
  sub_1C077B6C0();
  sub_1C07ACF80(&qword_1ED75ACF8);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v5);
  sub_1C07943E8();
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v6);
  sub_1C077595C();
  sub_1C077F0E4();
  __asm { BR              X10 }
}

void sub_1C088FF14()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t *v7;
  char v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;

  sub_1C07888A8();
  *(_QWORD *)(v4 - 152) = v0;
  v5 = sub_1C077F66C();
  sub_1C0775834();
  if ((v5 & 1) != 0)
  {
    sub_1C078A314();
    sub_1C07AE7B8();
    v7 = sub_1C078C1E4(v6);
    sub_1C07AD5A4((uint64_t)v7);
    sub_1C077E884();
    sub_1C07B6624();
    sub_1C077AF1C();
    sub_1C077D018();
    if (!v8)
    {
      sub_1C07B61E4(v3, v2);
      sub_1C0892CE4((uint64_t)&off_1E7A1D0E0);
      v13 = sub_1C077E1E0();
LABEL_9:
      sub_1C07B61E4(v13, v14);
      goto LABEL_10;
    }
    v9 = &qword_1ED75ACF8;
    v10 = v3;
  }
  else
  {
    sub_1C078A314();
    sub_1C07AE7B8();
    v12 = sub_1C078C1E4(v11);
    sub_1C07AD5A4((uint64_t)v12);
    sub_1C077E884();
    sub_1C0783064();
    sub_1C077AF1C();
    sub_1C07AFC6C();
    if (!v8)
    {
      sub_1C0782D34();
      sub_1C0782B4C((uint64_t)&off_1E7A1D138);
      v13 = sub_1C07B6A70();
      goto LABEL_9;
    }
    v9 = &qword_1ED75C730;
    v10 = v1;
  }
  sub_1C0784B6C(v10, v9);
  sub_1C077FA9C();
LABEL_10:
  sub_1C0776760();
}

void sub_1C0890020()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;

  v1 = sub_1C07ACF80(&qword_1ED75C730);
  MEMORY[0x1E0C80A78](v1);
  v2 = type metadata accessor for ConstructionProgressTokens(0);
  MEMORY[0x1E0C80A78](v2);
  v3 = sub_1C07ACF80(&qword_1ED75ACF8);
  MEMORY[0x1E0C80A78](v3);
  v4 = type metadata accessor for ProgressTokens(0);
  MEMORY[0x1E0C80A78](v4);
  v5 = (char *)sub_1C0890164
     + 4 * byte_1C107E45C[*(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for PeopleMatcher() + 32))];
  __asm { BR              X10 }
}

void sub_1C0890164()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t (*v17)(uint64_t);
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  *(_QWORD *)(v9 - 128) = v4;
  v10 = sub_1C1070CB4();
  swift_bridgeObjectRelease();
  if ((v10 & 1) != 0)
  {
    type metadata accessor for PhaseStores();
    *(_QWORD *)(v9 - 96) = v8;
    sub_1C07803F8(&qword_1ED75A9E8, (void (*)(uint64_t))type metadata accessor for PeopleMatcher);
    *(_QWORD *)(v9 - 88) = v11;
    v12 = sub_1C079DFC4((uint64_t *)(v9 - 120));
    sub_1C0892C20(v1, (uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for PeopleMatcher);
    swift_retain();
    sub_1C0D42028(v9 - 120, 0);
    swift_release();
    _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0(v9 - 120);
    if (sub_1C07B2D80(v5, 1, v6) == 1)
    {
      v13 = &qword_1ED75ACF8;
      v14 = v5;
LABEL_6:
      sub_1C0784B6C(v14, v13);
      *(_QWORD *)(v0 + 32) = 0;
      *(_OWORD *)v0 = 0u;
      *(_OWORD *)(v0 + 16) = 0u;
      return;
    }
    v17 = type metadata accessor for ProgressTokens;
    sub_1C07E563C(v5, v7, type metadata accessor for ProgressTokens);
    *(_QWORD *)(v0 + 24) = v6;
    *(_QWORD *)(v0 + 32) = &off_1E7A1D0E0;
    v18 = sub_1C079DFC4((uint64_t *)v0);
    v19 = v7;
  }
  else
  {
    type metadata accessor for PhaseStores();
    *(_QWORD *)(v9 - 96) = v8;
    sub_1C07803F8(&qword_1ED75A9E8, (void (*)(uint64_t))type metadata accessor for PeopleMatcher);
    *(_QWORD *)(v9 - 88) = v15;
    v16 = sub_1C079DFC4((uint64_t *)(v9 - 120));
    sub_1C0892C20(v1, (uint64_t)v16, (uint64_t (*)(_QWORD))type metadata accessor for PeopleMatcher);
    swift_retain();
    sub_1C0D4203C(v9 - 120, 0);
    swift_release();
    _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0(v9 - 120);
    if (sub_1C07B2D80(v2, 1, v3) == 1)
    {
      v13 = &qword_1ED75C730;
      v14 = v2;
      goto LABEL_6;
    }
    v17 = type metadata accessor for ConstructionProgressTokens;
    v20 = v2;
    v21 = *(_QWORD *)(v9 - 128);
    sub_1C07E563C(v20, v21, type metadata accessor for ConstructionProgressTokens);
    *(_QWORD *)(v0 + 24) = v3;
    *(_QWORD *)(v0 + 32) = &off_1E7A1D138;
    v18 = sub_1C079DFC4((uint64_t *)v0);
    v19 = v21;
  }
  sub_1C07E563C(v19, (uint64_t)v18, v17);
}

void sub_1C08903B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;

  v1 = sub_1C07ACF80(&qword_1ED75C730);
  MEMORY[0x1E0C80A78](v1);
  v2 = type metadata accessor for ConstructionProgressTokens(0);
  MEMORY[0x1E0C80A78](v2);
  v3 = sub_1C07ACF80(&qword_1ED75ACF8);
  MEMORY[0x1E0C80A78](v3);
  v4 = type metadata accessor for ProgressTokens(0);
  MEMORY[0x1E0C80A78](v4);
  v5 = (char *)sub_1C08904FC
     + 4 * byte_1C107E460[*(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for DocumentMatcher() + 28))];
  __asm { BR              X10 }
}

void sub_1C08904FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t (*v17)(uint64_t);
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  *(_QWORD *)(v9 - 128) = v4;
  v10 = sub_1C1070CB4();
  swift_bridgeObjectRelease();
  if ((v10 & 1) != 0)
  {
    type metadata accessor for PhaseStores();
    *(_QWORD *)(v9 - 96) = v8;
    sub_1C07803F8(&qword_1EF633068, (void (*)(uint64_t))type metadata accessor for DocumentMatcher);
    *(_QWORD *)(v9 - 88) = v11;
    v12 = sub_1C079DFC4((uint64_t *)(v9 - 120));
    sub_1C0892C20(v1, (uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for DocumentMatcher);
    swift_retain();
    sub_1C0D42028(v9 - 120, 0);
    swift_release();
    _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0(v9 - 120);
    if (sub_1C07B2D80(v5, 1, v6) == 1)
    {
      v13 = &qword_1ED75ACF8;
      v14 = v5;
LABEL_6:
      sub_1C0784B6C(v14, v13);
      *(_QWORD *)(v0 + 32) = 0;
      *(_OWORD *)v0 = 0u;
      *(_OWORD *)(v0 + 16) = 0u;
      return;
    }
    v17 = type metadata accessor for ProgressTokens;
    sub_1C07E563C(v5, v7, type metadata accessor for ProgressTokens);
    *(_QWORD *)(v0 + 24) = v6;
    *(_QWORD *)(v0 + 32) = &off_1E7A1D0E0;
    v18 = sub_1C079DFC4((uint64_t *)v0);
    v19 = v7;
  }
  else
  {
    type metadata accessor for PhaseStores();
    *(_QWORD *)(v9 - 96) = v8;
    sub_1C07803F8(&qword_1EF633068, (void (*)(uint64_t))type metadata accessor for DocumentMatcher);
    *(_QWORD *)(v9 - 88) = v15;
    v16 = sub_1C079DFC4((uint64_t *)(v9 - 120));
    sub_1C0892C20(v1, (uint64_t)v16, (uint64_t (*)(_QWORD))type metadata accessor for DocumentMatcher);
    swift_retain();
    sub_1C0D4203C(v9 - 120, 0);
    swift_release();
    _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0(v9 - 120);
    if (sub_1C07B2D80(v2, 1, v3) == 1)
    {
      v13 = &qword_1ED75C730;
      v14 = v2;
      goto LABEL_6;
    }
    v17 = type metadata accessor for ConstructionProgressTokens;
    v20 = v2;
    v21 = *(_QWORD *)(v9 - 128);
    sub_1C07E563C(v20, v21, type metadata accessor for ConstructionProgressTokens);
    *(_QWORD *)(v0 + 24) = v3;
    *(_QWORD *)(v0 + 32) = &off_1E7A1D138;
    v18 = sub_1C079DFC4((uint64_t *)v0);
    v19 = v21;
  }
  sub_1C07E563C(v19, (uint64_t)v18, v17);
}

void sub_1C0890760()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_1C0779670();
  sub_1C0892D0C(v0, v1, v2);
  sub_1C07ACF80(&qword_1ED75C730);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v3);
  sub_1C0780A50();
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v4);
  sub_1C077B6C0();
  sub_1C07ACF80(&qword_1ED75ACF8);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v5);
  sub_1C07943E8();
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v6);
  sub_1C077595C();
  sub_1C077F0E4();
  __asm { BR              X10 }
}

void sub_1C0890818()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t *v7;
  char v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;

  sub_1C07888A8();
  *(_QWORD *)(v4 - 152) = v0;
  v5 = sub_1C077F66C();
  sub_1C0775834();
  if ((v5 & 1) != 0)
  {
    sub_1C078A314();
    sub_1C07AE7B8();
    v7 = sub_1C078C1E4(v6);
    sub_1C07AD5A4((uint64_t)v7);
    sub_1C077E884();
    sub_1C07B6624();
    sub_1C077AF1C();
    sub_1C077D018();
    if (!v8)
    {
      sub_1C07B61E4(v3, v2);
      sub_1C0892CE4((uint64_t)&off_1E7A1D0E0);
      v13 = sub_1C077E1E0();
LABEL_9:
      sub_1C07B61E4(v13, v14);
      goto LABEL_10;
    }
    v9 = &qword_1ED75ACF8;
    v10 = v3;
  }
  else
  {
    sub_1C078A314();
    sub_1C07AE7B8();
    v12 = sub_1C078C1E4(v11);
    sub_1C07AD5A4((uint64_t)v12);
    sub_1C077E884();
    sub_1C0783064();
    sub_1C077AF1C();
    sub_1C07AFC6C();
    if (!v8)
    {
      sub_1C0782D34();
      sub_1C0782B4C((uint64_t)&off_1E7A1D138);
      v13 = sub_1C07B6A70();
      goto LABEL_9;
    }
    v9 = &qword_1ED75C730;
    v10 = v1;
  }
  sub_1C0784B6C(v10, v9);
  sub_1C077FA9C();
LABEL_10:
  sub_1C0776760();
}

void sub_1C0890934()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_1C0779670();
  sub_1C0892D0C(v0, v1, v2);
  sub_1C07ACF80(&qword_1ED75C730);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v3);
  sub_1C0780A50();
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v4);
  sub_1C077B6C0();
  sub_1C07ACF80(&qword_1ED75ACF8);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v5);
  sub_1C07943E8();
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v6);
  sub_1C077595C();
  sub_1C077F0E4();
  __asm { BR              X10 }
}

void sub_1C08909EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t *v7;
  char v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;

  sub_1C07888A8();
  *(_QWORD *)(v4 - 152) = v0;
  v5 = sub_1C077F66C();
  sub_1C0775834();
  if ((v5 & 1) != 0)
  {
    sub_1C078A314();
    sub_1C07AE7B8();
    v7 = sub_1C078C1E4(v6);
    sub_1C07AD5A4((uint64_t)v7);
    sub_1C077E884();
    sub_1C07B6624();
    sub_1C077AF1C();
    sub_1C077D018();
    if (!v8)
    {
      sub_1C07B61E4(v3, v2);
      sub_1C0892CE4((uint64_t)&off_1E7A1D0E0);
      v13 = sub_1C077E1E0();
LABEL_9:
      sub_1C07B61E4(v13, v14);
      goto LABEL_10;
    }
    v9 = &qword_1ED75ACF8;
    v10 = v3;
  }
  else
  {
    sub_1C078A314();
    sub_1C07AE7B8();
    v12 = sub_1C078C1E4(v11);
    sub_1C07AD5A4((uint64_t)v12);
    sub_1C077E884();
    sub_1C0783064();
    sub_1C077AF1C();
    sub_1C07AFC6C();
    if (!v8)
    {
      sub_1C0782D34();
      sub_1C0782B4C((uint64_t)&off_1E7A1D138);
      v13 = sub_1C07B6A70();
      goto LABEL_9;
    }
    v9 = &qword_1ED75C730;
    v10 = v1;
  }
  sub_1C0784B6C(v10, v9);
  sub_1C077FA9C();
LABEL_10:
  sub_1C0776760();
}

void sub_1C0890AF8()
{
  sub_1C0890934();
}

void sub_1C0890B14()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;

  v1 = sub_1C07ACF80(&qword_1ED75C730);
  MEMORY[0x1E0C80A78](v1);
  v2 = type metadata accessor for ConstructionProgressTokens(0);
  MEMORY[0x1E0C80A78](v2);
  v3 = sub_1C07ACF80(&qword_1ED75ACF8);
  MEMORY[0x1E0C80A78](v3);
  v4 = type metadata accessor for ProgressTokens(0);
  MEMORY[0x1E0C80A78](v4);
  v5 = (char *)sub_1C0890C58
     + 4 * byte_1C107E46C[*(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for StandardEntityMapper() + 28))];
  __asm { BR              X10 }
}

void sub_1C0890C58()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t (*v17)(uint64_t);
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  *(_QWORD *)(v9 - 128) = v4;
  v10 = sub_1C1070CB4();
  swift_bridgeObjectRelease();
  if ((v10 & 1) != 0)
  {
    type metadata accessor for PhaseStores();
    *(_QWORD *)(v9 - 96) = v8;
    sub_1C07803F8(&qword_1ED754ED0, (void (*)(uint64_t))type metadata accessor for StandardEntityMapper);
    *(_QWORD *)(v9 - 88) = v11;
    v12 = sub_1C079DFC4((uint64_t *)(v9 - 120));
    sub_1C0892C20(v1, (uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for StandardEntityMapper);
    swift_retain();
    sub_1C0D42028(v9 - 120, 0);
    swift_release();
    _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0(v9 - 120);
    if (sub_1C07B2D80(v5, 1, v6) == 1)
    {
      v13 = &qword_1ED75ACF8;
      v14 = v5;
LABEL_6:
      sub_1C0784B6C(v14, v13);
      *(_QWORD *)(v0 + 32) = 0;
      *(_OWORD *)v0 = 0u;
      *(_OWORD *)(v0 + 16) = 0u;
      return;
    }
    v17 = type metadata accessor for ProgressTokens;
    sub_1C07E563C(v5, v7, type metadata accessor for ProgressTokens);
    *(_QWORD *)(v0 + 24) = v6;
    *(_QWORD *)(v0 + 32) = &off_1E7A1D0E0;
    v18 = sub_1C079DFC4((uint64_t *)v0);
    v19 = v7;
  }
  else
  {
    type metadata accessor for PhaseStores();
    *(_QWORD *)(v9 - 96) = v8;
    sub_1C07803F8(&qword_1ED754ED0, (void (*)(uint64_t))type metadata accessor for StandardEntityMapper);
    *(_QWORD *)(v9 - 88) = v15;
    v16 = sub_1C079DFC4((uint64_t *)(v9 - 120));
    sub_1C0892C20(v1, (uint64_t)v16, (uint64_t (*)(_QWORD))type metadata accessor for StandardEntityMapper);
    swift_retain();
    sub_1C0D4203C(v9 - 120, 0);
    swift_release();
    _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0(v9 - 120);
    if (sub_1C07B2D80(v2, 1, v3) == 1)
    {
      v13 = &qword_1ED75C730;
      v14 = v2;
      goto LABEL_6;
    }
    v17 = type metadata accessor for ConstructionProgressTokens;
    v20 = v2;
    v21 = *(_QWORD *)(v9 - 128);
    sub_1C07E563C(v20, v21, type metadata accessor for ConstructionProgressTokens);
    *(_QWORD *)(v0 + 24) = v3;
    *(_QWORD *)(v0 + 32) = &off_1E7A1D138;
    v18 = sub_1C079DFC4((uint64_t *)v0);
    v19 = v21;
  }
  sub_1C07E563C(v19, (uint64_t)v18, v17);
}

void sub_1C0890EBC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_1C0779670();
  sub_1C0892D0C(v0, v1, v2);
  sub_1C07ACF80(&qword_1ED75C730);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v3);
  sub_1C0780A50();
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v4);
  sub_1C077B6C0();
  sub_1C07ACF80(&qword_1ED75ACF8);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v5);
  sub_1C07943E8();
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v6);
  sub_1C077595C();
  sub_1C077F0E4();
  __asm { BR              X10 }
}

void sub_1C0890F74()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t *v7;
  char v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;

  sub_1C07888A8();
  *(_QWORD *)(v4 - 152) = v0;
  v5 = sub_1C077F66C();
  sub_1C0775834();
  if ((v5 & 1) != 0)
  {
    sub_1C078A314();
    sub_1C07AE7B8();
    v7 = sub_1C078C1E4(v6);
    sub_1C07AD5A4((uint64_t)v7);
    sub_1C077E884();
    sub_1C07B6624();
    sub_1C077AF1C();
    sub_1C077D018();
    if (!v8)
    {
      sub_1C07B61E4(v3, v2);
      sub_1C0892CE4((uint64_t)&off_1E7A1D0E0);
      v13 = sub_1C077E1E0();
LABEL_9:
      sub_1C07B61E4(v13, v14);
      goto LABEL_10;
    }
    v9 = &qword_1ED75ACF8;
    v10 = v3;
  }
  else
  {
    sub_1C078A314();
    sub_1C07AE7B8();
    v12 = sub_1C078C1E4(v11);
    sub_1C07AD5A4((uint64_t)v12);
    sub_1C077E884();
    sub_1C0783064();
    sub_1C077AF1C();
    sub_1C07AFC6C();
    if (!v8)
    {
      sub_1C0782D34();
      sub_1C0782B4C((uint64_t)&off_1E7A1D138);
      v13 = sub_1C07B6A70();
      goto LABEL_9;
    }
    v9 = &qword_1ED75C730;
    v10 = v1;
  }
  sub_1C0784B6C(v10, v9);
  sub_1C077FA9C();
LABEL_10:
  sub_1C0776760();
}

void sub_1C0891080()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_1C0779670();
  sub_1C0892D0C(v0, v1, v2);
  sub_1C07ACF80(&qword_1ED75C730);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v3);
  sub_1C0780A50();
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v4);
  sub_1C077B6C0();
  sub_1C07ACF80(&qword_1ED75ACF8);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v5);
  sub_1C07943E8();
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v6);
  sub_1C077595C();
  sub_1C077F0E4();
  __asm { BR              X10 }
}

void sub_1C0891138()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t *v7;
  char v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;

  sub_1C07888A8();
  *(_QWORD *)(v4 - 152) = v0;
  v5 = sub_1C077F66C();
  sub_1C0775834();
  if ((v5 & 1) != 0)
  {
    sub_1C078A314();
    sub_1C07AE7B8();
    v7 = sub_1C078C1E4(v6);
    sub_1C07AD5A4((uint64_t)v7);
    sub_1C077E884();
    sub_1C07B6624();
    sub_1C077AF1C();
    sub_1C077D018();
    if (!v8)
    {
      sub_1C07B61E4(v3, v2);
      sub_1C0892CE4((uint64_t)&off_1E7A1D0E0);
      v13 = sub_1C077E1E0();
LABEL_9:
      sub_1C07B61E4(v13, v14);
      goto LABEL_10;
    }
    v9 = &qword_1ED75ACF8;
    v10 = v3;
  }
  else
  {
    sub_1C078A314();
    sub_1C07AE7B8();
    v12 = sub_1C078C1E4(v11);
    sub_1C07AD5A4((uint64_t)v12);
    sub_1C077E884();
    sub_1C0783064();
    sub_1C077AF1C();
    sub_1C07AFC6C();
    if (!v8)
    {
      sub_1C0782D34();
      sub_1C0782B4C((uint64_t)&off_1E7A1D138);
      v13 = sub_1C07B6A70();
      goto LABEL_9;
    }
    v9 = &qword_1ED75C730;
    v10 = v1;
  }
  sub_1C0784B6C(v10, v9);
  sub_1C077FA9C();
LABEL_10:
  sub_1C0776760();
}

void sub_1C0891254()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_1C0779670();
  sub_1C0892D0C(v0, v1, v2);
  sub_1C07ACF80(&qword_1ED75C730);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v3);
  sub_1C0780A50();
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v4);
  sub_1C077B6C0();
  sub_1C07ACF80(&qword_1ED75ACF8);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v5);
  sub_1C07943E8();
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v6);
  sub_1C077595C();
  sub_1C077F0E4();
  __asm { BR              X10 }
}

void sub_1C089130C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t *v7;
  char v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;

  sub_1C07888A8();
  *(_QWORD *)(v4 - 152) = v0;
  v5 = sub_1C077F66C();
  sub_1C0775834();
  if ((v5 & 1) != 0)
  {
    sub_1C078A314();
    sub_1C07AE7B8();
    v7 = sub_1C078C1E4(v6);
    sub_1C07AD5A4((uint64_t)v7);
    sub_1C077E884();
    sub_1C07B6624();
    sub_1C077AF1C();
    sub_1C077D018();
    if (!v8)
    {
      sub_1C07B61E4(v3, v2);
      sub_1C0892CE4((uint64_t)&off_1E7A1D0E0);
      v13 = sub_1C077E1E0();
LABEL_9:
      sub_1C07B61E4(v13, v14);
      goto LABEL_10;
    }
    v9 = &qword_1ED75ACF8;
    v10 = v3;
  }
  else
  {
    sub_1C078A314();
    sub_1C07AE7B8();
    v12 = sub_1C078C1E4(v11);
    sub_1C07AD5A4((uint64_t)v12);
    sub_1C077E884();
    sub_1C0783064();
    sub_1C077AF1C();
    sub_1C07AFC6C();
    if (!v8)
    {
      sub_1C0782D34();
      sub_1C0782B4C((uint64_t)&off_1E7A1D138);
      v13 = sub_1C07B6A70();
      goto LABEL_9;
    }
    v9 = &qword_1ED75C730;
    v10 = v1;
  }
  sub_1C0784B6C(v10, v9);
  sub_1C077FA9C();
LABEL_10:
  sub_1C0776760();
}

void sub_1C0891428()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;

  v1 = sub_1C07ACF80(&qword_1ED75C730);
  MEMORY[0x1E0C80A78](v1);
  v2 = type metadata accessor for ConstructionProgressTokens(0);
  MEMORY[0x1E0C80A78](v2);
  v3 = sub_1C07ACF80(&qword_1ED75ACF8);
  MEMORY[0x1E0C80A78](v3);
  v4 = type metadata accessor for ProgressTokens(0);
  MEMORY[0x1E0C80A78](v4);
  v5 = (char *)sub_1C089156C
     + 4
     * byte_1C107E47C[*(unsigned __int8 *)(v0
                                         + *(int *)(type metadata accessor for FutureLifeEventDeltaSourceIngestor() + 20))];
  __asm { BR              X10 }
}

void sub_1C089156C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t (*v17)(uint64_t);
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  *(_QWORD *)(v9 - 128) = v4;
  v10 = sub_1C1070CB4();
  swift_bridgeObjectRelease();
  if ((v10 & 1) != 0)
  {
    type metadata accessor for PhaseStores();
    *(_QWORD *)(v9 - 96) = v8;
    sub_1C07803F8(&qword_1ED751F68, (void (*)(uint64_t))type metadata accessor for FutureLifeEventDeltaSourceIngestor);
    *(_QWORD *)(v9 - 88) = v11;
    v12 = sub_1C079DFC4((uint64_t *)(v9 - 120));
    sub_1C0892C20(v1, (uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for FutureLifeEventDeltaSourceIngestor);
    swift_retain();
    sub_1C0D42028(v9 - 120, 0);
    swift_release();
    _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0(v9 - 120);
    if (sub_1C07B2D80(v5, 1, v6) == 1)
    {
      v13 = &qword_1ED75ACF8;
      v14 = v5;
LABEL_6:
      sub_1C0784B6C(v14, v13);
      *(_QWORD *)(v0 + 32) = 0;
      *(_OWORD *)v0 = 0u;
      *(_OWORD *)(v0 + 16) = 0u;
      return;
    }
    v17 = type metadata accessor for ProgressTokens;
    sub_1C07E563C(v5, v7, type metadata accessor for ProgressTokens);
    *(_QWORD *)(v0 + 24) = v6;
    *(_QWORD *)(v0 + 32) = &off_1E7A1D0E0;
    v18 = sub_1C079DFC4((uint64_t *)v0);
    v19 = v7;
  }
  else
  {
    type metadata accessor for PhaseStores();
    *(_QWORD *)(v9 - 96) = v8;
    sub_1C07803F8(&qword_1ED751F68, (void (*)(uint64_t))type metadata accessor for FutureLifeEventDeltaSourceIngestor);
    *(_QWORD *)(v9 - 88) = v15;
    v16 = sub_1C079DFC4((uint64_t *)(v9 - 120));
    sub_1C0892C20(v1, (uint64_t)v16, (uint64_t (*)(_QWORD))type metadata accessor for FutureLifeEventDeltaSourceIngestor);
    swift_retain();
    sub_1C0D4203C(v9 - 120, 0);
    swift_release();
    _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0(v9 - 120);
    if (sub_1C07B2D80(v2, 1, v3) == 1)
    {
      v13 = &qword_1ED75C730;
      v14 = v2;
      goto LABEL_6;
    }
    v17 = type metadata accessor for ConstructionProgressTokens;
    v20 = v2;
    v21 = *(_QWORD *)(v9 - 128);
    sub_1C07E563C(v20, v21, type metadata accessor for ConstructionProgressTokens);
    *(_QWORD *)(v0 + 24) = v3;
    *(_QWORD *)(v0 + 32) = &off_1E7A1D138;
    v18 = sub_1C079DFC4((uint64_t *)v0);
    v19 = v21;
  }
  sub_1C07E563C(v19, (uint64_t)v18, v17);
}

void sub_1C08917D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;

  v1 = sub_1C07ACF80(&qword_1ED75C730);
  MEMORY[0x1E0C80A78](v1);
  v2 = type metadata accessor for ConstructionProgressTokens(0);
  MEMORY[0x1E0C80A78](v2);
  v3 = sub_1C07ACF80(&qword_1ED75ACF8);
  MEMORY[0x1E0C80A78](v3);
  v4 = type metadata accessor for ProgressTokens(0);
  MEMORY[0x1E0C80A78](v4);
  v5 = (char *)sub_1C0891914
     + 4 * byte_1C107E480[*(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for Deduper() + 32))];
  __asm { BR              X10 }
}

void sub_1C0891914()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t (*v17)(uint64_t);
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  *(_QWORD *)(v9 - 128) = v4;
  v10 = sub_1C1070CB4();
  swift_bridgeObjectRelease();
  if ((v10 & 1) != 0)
  {
    type metadata accessor for PhaseStores();
    *(_QWORD *)(v9 - 96) = v8;
    sub_1C07803F8(&qword_1ED754F90, (void (*)(uint64_t))type metadata accessor for Deduper);
    *(_QWORD *)(v9 - 88) = v11;
    v12 = sub_1C079DFC4((uint64_t *)(v9 - 120));
    sub_1C0892C20(v1, (uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for Deduper);
    swift_retain();
    sub_1C0D42028(v9 - 120, 0);
    swift_release();
    _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0(v9 - 120);
    if (sub_1C07B2D80(v5, 1, v6) == 1)
    {
      v13 = &qword_1ED75ACF8;
      v14 = v5;
LABEL_6:
      sub_1C0784B6C(v14, v13);
      *(_QWORD *)(v0 + 32) = 0;
      *(_OWORD *)v0 = 0u;
      *(_OWORD *)(v0 + 16) = 0u;
      return;
    }
    v17 = type metadata accessor for ProgressTokens;
    sub_1C07E563C(v5, v7, type metadata accessor for ProgressTokens);
    *(_QWORD *)(v0 + 24) = v6;
    *(_QWORD *)(v0 + 32) = &off_1E7A1D0E0;
    v18 = sub_1C079DFC4((uint64_t *)v0);
    v19 = v7;
  }
  else
  {
    type metadata accessor for PhaseStores();
    *(_QWORD *)(v9 - 96) = v8;
    sub_1C07803F8(&qword_1ED754F90, (void (*)(uint64_t))type metadata accessor for Deduper);
    *(_QWORD *)(v9 - 88) = v15;
    v16 = sub_1C079DFC4((uint64_t *)(v9 - 120));
    sub_1C0892C20(v1, (uint64_t)v16, (uint64_t (*)(_QWORD))type metadata accessor for Deduper);
    swift_retain();
    sub_1C0D4203C(v9 - 120, 0);
    swift_release();
    _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0(v9 - 120);
    if (sub_1C07B2D80(v2, 1, v3) == 1)
    {
      v13 = &qword_1ED75C730;
      v14 = v2;
      goto LABEL_6;
    }
    v17 = type metadata accessor for ConstructionProgressTokens;
    v20 = v2;
    v21 = *(_QWORD *)(v9 - 128);
    sub_1C07E563C(v20, v21, type metadata accessor for ConstructionProgressTokens);
    *(_QWORD *)(v0 + 24) = v3;
    *(_QWORD *)(v0 + 32) = &off_1E7A1D138;
    v18 = sub_1C079DFC4((uint64_t *)v0);
    v19 = v21;
  }
  sub_1C07E563C(v19, (uint64_t)v18, v17);
}

void sub_1C0891B7C(_BYTE *a1@<X8>)
{
  *a1 = 7;
}

void sub_1C0891B88(uint64_t a1)
{
  sub_1C0884DC4(a1, (uint64_t)type metadata accessor for GraphTriple, (uint64_t)&unk_1ED75F138, (void (*)(uint64_t))sub_1C0AA4998, &qword_1ED7606F0, (uint64_t)&protocol conformance descriptor for GraphTriple, (uint64_t)sub_1C09D3AC0);
  sub_1C07892B8();
}

void sub_1C0891BD4(uint64_t a1)
{
  sub_1C0884DC4(a1, (uint64_t)type metadata accessor for EntityTriple, (uint64_t)&qword_1ED75A508, (void (*)(uint64_t))sub_1C0AA49F4, &qword_1ED75A480, (uint64_t)&protocol conformance descriptor for EntityTriple, (uint64_t)sub_1C09D3F18);
  sub_1C07892B8();
}

void sub_1C0891C20(uint64_t a1)
{
  sub_1C0884DC4(a1, (uint64_t)type metadata accessor for ConstructionGraphTriple, (uint64_t)&unk_1ED750E40, (void (*)(uint64_t))sub_1C0AA49A4, &qword_1ED750DF0, (uint64_t)&protocol conformance descriptor for ConstructionGraphTriple, (uint64_t)sub_1C09D3EE4);
  sub_1C07892B8();
}

uint64_t sub_1C0891C6C()
{
  return MEMORY[0x1E0DEB0A8];
}

uint64_t sub_1C0891C78()
{
  return MEMORY[0x1E0DEB080];
}

void sub_1C0891C84(uint64_t a1)
{
  uint64_t v2;

  sub_1C07803F8(&qword_1ED75CC48, (void (*)(uint64_t))type metadata accessor for Blocker);
  *(_QWORD *)(a1 + 8) = v2;
}

void sub_1C0891CC0(uint64_t a1)
{
  uint64_t v2;

  sub_1C07803F8(&qword_1ED75CC38, (void (*)(uint64_t))type metadata accessor for Blocker);
  *(_QWORD *)(a1 + 8) = v2;
}

_QWORD *initializeBufferWithCopyOfBuffer for Blocker(_QWORD *a1, _QWORD *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  char *v21;
  char *v22;
  int *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v28)(char *, char *, uint64_t);
  uint64_t v29;
  void (*v30)(_QWORD *, _QWORD *, uint64_t);
  uint64_t v31;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v26 = *a2;
    *a1 = *a2;
    v4 = (_QWORD *)(v26 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    v7 = sub_1C106AB28();
    v30 = *(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
    v31 = v7;
    v30(v4, a2, v7);
    v29 = type metadata accessor for Configuration();
    *(_OWORD *)((char *)v4 + *(int *)(v29 + 20)) = *(_OWORD *)((char *)a2 + *(int *)(v29 + 20));
    v8 = a3[5];
    v9 = (char *)v4 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_1C106D1F8();
    v28 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    v28(v9, v10, v11);
    v12 = a3[6];
    v13 = (_QWORD *)((char *)v4 + v12);
    v14 = (char *)a2 + v12;
    v15 = *(_QWORD *)((char *)a2 + v12 + 8);
    *v13 = *(_QWORD *)((char *)a2 + v12);
    v13[1] = v15;
    v13[2] = *(_QWORD *)((char *)a2 + v12 + 16);
    v16 = type metadata accessor for Source();
    v17 = *(int *)(v16 + 24);
    v18 = (char *)v13 + v17;
    v19 = &v14[v17];
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    v28(v18, v19, v11);
    *((_BYTE *)v13 + *(int *)(v16 + 28)) = v14[*(int *)(v16 + 28)];
    v20 = a3[8];
    *((_BYTE *)v4 + a3[7]) = *((_BYTE *)a2 + a3[7]);
    v21 = (char *)v4 + v20;
    v22 = (char *)a2 + v20;
    v30((_QWORD *)((char *)v4 + v20), (_QWORD *)((char *)a2 + v20), v31);
    *(_OWORD *)&v21[*(int *)(v29 + 20)] = *(_OWORD *)&v22[*(int *)(v29 + 20)];
    v23 = (int *)type metadata accessor for PhaseStores();
    *(_QWORD *)&v21[v23[5]] = *(_QWORD *)&v22[v23[5]];
    *(_QWORD *)&v21[v23[6]] = *(_QWORD *)&v22[v23[6]];
    *(_QWORD *)&v21[v23[7]] = *(_QWORD *)&v22[v23[7]];
    *(_QWORD *)&v21[v23[8]] = *(_QWORD *)&v22[v23[8]];
    *(_QWORD *)&v21[v23[9]] = *(_QWORD *)&v22[v23[9]];
    *(_QWORD *)&v21[v23[10]] = *(_QWORD *)&v22[v23[10]];
    *(_QWORD *)&v21[v23[11]] = *(_QWORD *)&v22[v23[11]];
    v24 = a3[10];
    *(_QWORD *)((char *)v4 + a3[9]) = *(_QWORD *)((char *)a2 + a3[9]);
    *(_QWORD *)((char *)v4 + v24) = *(_QWORD *)((char *)a2 + v24);
    v25 = a3[12];
    *((_BYTE *)v4 + a3[11]) = *((_BYTE *)a2 + a3[11]);
    *(_QWORD *)((char *)v4 + v25) = *(_QWORD *)((char *)a2 + v25);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  }
  swift_retain();
  return v4;
}

uint64_t destroy for Blocker(uint64_t a1, int *a2)
{
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;

  v4 = sub_1C106AB28();
  v5 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v5(a1, v4);
  v6 = a1 + a2[5];
  v7 = sub_1C106D1F8();
  v8 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8);
  v8(v6, v7);
  v9 = a1 + a2[6];
  swift_bridgeObjectRelease();
  v10 = type metadata accessor for Source();
  v8(v9 + *(int *)(v10 + 24), v7);
  v5(a1 + a2[8], v4);
  type metadata accessor for PhaseStores();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t initializeWithCopy for Blocker(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int *v22;
  uint64_t v23;
  uint64_t v24;
  void (*v26)(uint64_t, uint64_t, uint64_t);
  uint64_t v27;
  void (*v28)(uint64_t, uint64_t, uint64_t);
  uint64_t v29;

  v6 = sub_1C106AB28();
  v28 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
  v29 = v6;
  v28(a1, a2, v6);
  v27 = type metadata accessor for Configuration();
  *(_OWORD *)(a1 + *(int *)(v27 + 20)) = *(_OWORD *)(a2 + *(int *)(v27 + 20));
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1C106D1F8();
  v26 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  v26(v8, v9, v10);
  v11 = a3[6];
  v12 = (_QWORD *)(a1 + v11);
  v13 = a2 + v11;
  v14 = *(_QWORD *)(a2 + v11 + 8);
  *v12 = *(_QWORD *)(a2 + v11);
  v12[1] = v14;
  v12[2] = *(_QWORD *)(a2 + v11 + 16);
  v15 = type metadata accessor for Source();
  v16 = *(int *)(v15 + 24);
  v17 = (char *)v12 + v16;
  v18 = v13 + v16;
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  v26((uint64_t)v17, v18, v10);
  *((_BYTE *)v12 + *(int *)(v15 + 28)) = *(_BYTE *)(v13 + *(int *)(v15 + 28));
  v19 = a3[8];
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  v20 = a1 + v19;
  v21 = a2 + v19;
  v28(a1 + v19, a2 + v19, v29);
  *(_OWORD *)(v20 + *(int *)(v27 + 20)) = *(_OWORD *)(v21 + *(int *)(v27 + 20));
  v22 = (int *)type metadata accessor for PhaseStores();
  *(_QWORD *)(v20 + v22[5]) = *(_QWORD *)(v21 + v22[5]);
  *(_QWORD *)(v20 + v22[6]) = *(_QWORD *)(v21 + v22[6]);
  *(_QWORD *)(v20 + v22[7]) = *(_QWORD *)(v21 + v22[7]);
  *(_QWORD *)(v20 + v22[8]) = *(_QWORD *)(v21 + v22[8]);
  *(_QWORD *)(v20 + v22[9]) = *(_QWORD *)(v21 + v22[9]);
  *(_QWORD *)(v20 + v22[10]) = *(_QWORD *)(v21 + v22[10]);
  *(_QWORD *)(v20 + v22[11]) = *(_QWORD *)(v21 + v22[11]);
  v23 = a3[10];
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  *(_QWORD *)(a1 + v23) = *(_QWORD *)(a2 + v23);
  v24 = a3[12];
  *(_BYTE *)(a1 + a3[11]) = *(_BYTE *)(a2 + a3[11]);
  *(_QWORD *)(a1 + v24) = *(_QWORD *)(a2 + v24);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for Blocker(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(char *, uint64_t, uint64_t);
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  int *v26;
  void (*v28)(uint64_t, uint64_t, uint64_t);

  v6 = sub_1C106AB28();
  v28 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24);
  v28(a1, a2, v6);
  v7 = type metadata accessor for Configuration();
  v8 = *(int *)(v7 + 20);
  v9 = (_QWORD *)(a1 + v8);
  v10 = (_QWORD *)(a2 + v8);
  *v9 = *v10;
  v9[1] = v10[1];
  v11 = a3[5];
  v12 = (char *)(a1 + v11);
  v13 = a2 + v11;
  v14 = sub_1C106D1F8();
  v15 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 24);
  v15(v12, v13, v14);
  v16 = a3[6];
  v17 = (char *)(a1 + v16);
  v18 = a2 + v16;
  *(_QWORD *)v17 = *(_QWORD *)(a2 + v16);
  *((_QWORD *)v17 + 1) = *(_QWORD *)(a2 + v16 + 8);
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  swift_bridgeObjectRelease();
  *((_QWORD *)v17 + 2) = *(_QWORD *)(v18 + 16);
  v19 = type metadata accessor for Source();
  v15(&v17[*(int *)(v19 + 24)], v18 + *(int *)(v19 + 24), v14);
  v17[*(int *)(v19 + 28)] = *(_BYTE *)(v18 + *(int *)(v19 + 28));
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  v20 = a3[8];
  v21 = a1 + v20;
  v22 = a2 + v20;
  v28(a1 + v20, a2 + v20, v6);
  v23 = *(int *)(v7 + 20);
  v24 = (_QWORD *)(v21 + v23);
  v25 = (_QWORD *)(v22 + v23);
  *v24 = *v25;
  v24[1] = v25[1];
  v26 = (int *)type metadata accessor for PhaseStores();
  *(_QWORD *)(v21 + v26[5]) = *(_QWORD *)(v22 + v26[5]);
  swift_retain();
  swift_release();
  *(_QWORD *)(v21 + v26[6]) = *(_QWORD *)(v22 + v26[6]);
  swift_retain();
  swift_release();
  *(_QWORD *)(v21 + v26[7]) = *(_QWORD *)(v22 + v26[7]);
  swift_retain();
  swift_release();
  *(_QWORD *)(v21 + v26[8]) = *(_QWORD *)(v22 + v26[8]);
  swift_retain();
  swift_release();
  *(_QWORD *)(v21 + v26[9]) = *(_QWORD *)(v22 + v26[9]);
  swift_retain();
  swift_release();
  *(_QWORD *)(v21 + v26[10]) = *(_QWORD *)(v22 + v26[10]);
  swift_retain();
  swift_release();
  *(_QWORD *)(v21 + v26[11]) = *(_QWORD *)(v22 + v26[11]);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[10]) = *(_QWORD *)(a2 + a3[10]);
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + a3[11]) = *(_BYTE *)(a2 + a3[11]);
  *(_QWORD *)(a1 + a3[12]) = *(_QWORD *)(a2 + a3[12]);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t initializeWithTake for Blocker(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int *v20;
  uint64_t v21;
  uint64_t v22;
  void (*v24)(uint64_t, uint64_t, uint64_t);

  v6 = sub_1C106AB28();
  v24 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
  v24(a1, a2, v6);
  v7 = type metadata accessor for Configuration();
  *(_OWORD *)(a1 + *(int *)(v7 + 20)) = *(_OWORD *)(a2 + *(int *)(v7 + 20));
  v8 = a3[5];
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = sub_1C106D1F8();
  v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 32);
  v12(v9, v10, v11);
  v13 = a3[6];
  v14 = a1 + v13;
  v15 = a2 + v13;
  *(_OWORD *)v14 = *(_OWORD *)(a2 + v13);
  *(_QWORD *)(v14 + 16) = *(_QWORD *)(a2 + v13 + 16);
  v16 = type metadata accessor for Source();
  v12(v14 + *(int *)(v16 + 24), v15 + *(int *)(v16 + 24), v11);
  *(_BYTE *)(v14 + *(int *)(v16 + 28)) = *(_BYTE *)(v15 + *(int *)(v16 + 28));
  v17 = a3[8];
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  v18 = a1 + v17;
  v19 = a2 + v17;
  v24(a1 + v17, a2 + v17, v6);
  *(_OWORD *)(v18 + *(int *)(v7 + 20)) = *(_OWORD *)(v19 + *(int *)(v7 + 20));
  v20 = (int *)type metadata accessor for PhaseStores();
  *(_QWORD *)(v18 + v20[5]) = *(_QWORD *)(v19 + v20[5]);
  *(_QWORD *)(v18 + v20[6]) = *(_QWORD *)(v19 + v20[6]);
  *(_QWORD *)(v18 + v20[7]) = *(_QWORD *)(v19 + v20[7]);
  *(_QWORD *)(v18 + v20[8]) = *(_QWORD *)(v19 + v20[8]);
  *(_QWORD *)(v18 + v20[9]) = *(_QWORD *)(v19 + v20[9]);
  *(_QWORD *)(v18 + v20[10]) = *(_QWORD *)(v19 + v20[10]);
  *(_QWORD *)(v18 + v20[11]) = *(_QWORD *)(v19 + v20[11]);
  v21 = a3[10];
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  *(_QWORD *)(a1 + v21) = *(_QWORD *)(a2 + v21);
  v22 = a3[12];
  *(_BYTE *)(a1 + a3[11]) = *(_BYTE *)(a2 + a3[11]);
  *(_QWORD *)(a1 + v22) = *(_QWORD *)(a2 + v22);
  return a1;
}

uint64_t assignWithTake for Blocker(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(char *, uint64_t, uint64_t);
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int *v21;
  uint64_t v22;
  void (*v24)(uint64_t, uint64_t, uint64_t);

  v6 = sub_1C106AB28();
  v24 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40);
  v24(a1, a2, v6);
  v7 = type metadata accessor for Configuration();
  *(_OWORD *)(a1 + *(int *)(v7 + 20)) = *(_OWORD *)(a2 + *(int *)(v7 + 20));
  v8 = a3[5];
  v9 = (char *)(a1 + v8);
  v10 = a2 + v8;
  v11 = sub_1C106D1F8();
  v12 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 40);
  v12(v9, v10, v11);
  v13 = a3[6];
  v14 = (char *)(a1 + v13);
  v15 = a2 + v13;
  v16 = *(_QWORD *)(a2 + v13 + 8);
  *(_QWORD *)v14 = *(_QWORD *)(a2 + v13);
  *((_QWORD *)v14 + 1) = v16;
  swift_bridgeObjectRelease();
  *((_QWORD *)v14 + 2) = *(_QWORD *)(v15 + 16);
  v17 = type metadata accessor for Source();
  v12(&v14[*(int *)(v17 + 24)], v15 + *(int *)(v17 + 24), v11);
  v14[*(int *)(v17 + 28)] = *(_BYTE *)(v15 + *(int *)(v17 + 28));
  v18 = a3[8];
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  v19 = a1 + v18;
  v20 = a2 + v18;
  v24(a1 + v18, a2 + v18, v6);
  *(_OWORD *)(v19 + *(int *)(v7 + 20)) = *(_OWORD *)(v20 + *(int *)(v7 + 20));
  v21 = (int *)type metadata accessor for PhaseStores();
  *(_QWORD *)(v19 + v21[5]) = *(_QWORD *)(v20 + v21[5]);
  swift_release();
  *(_QWORD *)(v19 + v21[6]) = *(_QWORD *)(v20 + v21[6]);
  swift_release();
  *(_QWORD *)(v19 + v21[7]) = *(_QWORD *)(v20 + v21[7]);
  swift_release();
  *(_QWORD *)(v19 + v21[8]) = *(_QWORD *)(v20 + v21[8]);
  swift_release();
  *(_QWORD *)(v19 + v21[9]) = *(_QWORD *)(v20 + v21[9]);
  swift_release();
  *(_QWORD *)(v19 + v21[10]) = *(_QWORD *)(v20 + v21[10]);
  swift_release();
  *(_QWORD *)(v19 + v21[11]) = *(_QWORD *)(v20 + v21[11]);
  swift_release();
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[10]) = *(_QWORD *)(a2 + a3[10]);
  swift_bridgeObjectRelease();
  v22 = a3[12];
  *(_BYTE *)(a1 + a3[11]) = *(_BYTE *)(a2 + a3[11]);
  *(_QWORD *)(a1 + v22) = *(_QWORD *)(a2 + v22);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for Blocker()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1C0892944(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  unint64_t v17;

  sub_1C078F260();
  sub_1C0786404();
  if (v9)
  {
    v7 = v6;
    v8 = v4;
    return sub_1C07B2D80(v8, v3, v7);
  }
  sub_1C0776744();
  sub_1C0786404();
  if (v9)
  {
    v7 = v10;
    v11 = a3[5];
LABEL_13:
    v8 = v4 + v11;
    return sub_1C07B2D80(v8, v3, v7);
  }
  sub_1C077674C();
  sub_1C0786404();
  if (v12)
  {
    v7 = v13;
    v11 = a3[6];
    goto LABEL_13;
  }
  sub_1C078A314();
  sub_1C0786404();
  if (v14)
  {
    v7 = v15;
    v11 = a3[8];
    goto LABEL_13;
  }
  v17 = *(_QWORD *)(v4 + a3[9]);
  if (v17 >= 0xFFFFFFFF)
    LODWORD(v17) = -1;
  return (v17 + 1);
}

uint64_t storeEnumTagSinglePayload for Blocker()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_1C0892A00(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  char v15;
  uint64_t v16;

  sub_1C078F260();
  sub_1C077AFFC();
  if (v10)
  {
    v8 = v7;
    v9 = v5;
  }
  else
  {
    sub_1C0776744();
    sub_1C077AFFC();
    if (v10)
    {
      v8 = v11;
      v12 = a4[5];
    }
    else
    {
      sub_1C077674C();
      sub_1C077AFFC();
      if (v13)
      {
        v8 = v14;
        v12 = a4[6];
      }
      else
      {
        sub_1C078A314();
        sub_1C077AFFC();
        if (!v15)
        {
          *(_QWORD *)(v5 + a4[9]) = (v4 - 1);
          return;
        }
        v8 = v16;
        v12 = a4[8];
      }
    }
    v9 = v5 + v12;
  }
  sub_1C07B2D8C(v9, v4, v4, v8);
}

uint64_t sub_1C0892AAC()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;

  result = type metadata accessor for Configuration();
  if (v1 <= 0x3F)
  {
    result = sub_1C106D1F8();
    if (v2 <= 0x3F)
    {
      result = type metadata accessor for Source();
      if (v3 <= 0x3F)
      {
        result = type metadata accessor for PhaseStores();
        if (v4 <= 0x3F)
        {
          swift_initStructMetadata();
          return 0;
        }
      }
    }
  }
  return result;
}

uint64_t sub_1C0892B98(uint64_t a1)
{
  return sub_1C0892BF8(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1C088F970);
}

uint64_t sub_1C0892BB4(uint64_t a1)
{
  uint64_t v1;

  return sub_1C088E434(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(unsigned __int8 *)(v1 + 32), *(_QWORD *)(v1 + 40), *(_BYTE *)(v1 + 48), *(_QWORD *)(v1 + 56), *(_QWORD *)(v1 + 64));
}

uint64_t sub_1C0892BDC(uint64_t a1)
{
  return sub_1C0892BF8(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1C088F82C);
}

uint64_t sub_1C0892BF8(uint64_t a1, uint64_t (*a2)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  uint64_t v2;

  return a2(a1, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), *(unsigned __int8 *)(v2 + 40), *(_QWORD *)(v2 + 48), *(_QWORD *)(v2 + 56));
}

void sub_1C0892C20(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;
  void (*v4)(uint64_t);

  sub_1C0779690(a1, a2, a3);
  v3 = sub_1C0892F4C();
  v4(v3);
  sub_1C0778534();
}

uint64_t sub_1C0892C4C()
{
  return swift_allocObject();
}

void sub_1C0892C70(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;

  sub_1C0784B6C(v2 - 120, a2);
}

uint64_t sub_1C0892C78()
{
  return sub_1C106FC94();
}

uint64_t sub_1C0892C84()
{
  return sub_1C0BE8E58();
}

void sub_1C0892C8C(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_BYTE *)(v2 - 104) = *(_BYTE *)(v1 + a1);
  PipelineType.description.getter();
}

uint64_t sub_1C0892C9C(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 120) = result;
  return result;
}

uint64_t sub_1C0892CA8(uint64_t a1)
{
  unint64_t v1;

  return sub_1C07B33B8(a1, v1);
}

uint64_t sub_1C0892CB0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 168) + 8))(v0, v1);
}

uint64_t sub_1C0892CC8()
{
  return sub_1C106FB5C();
}

uint64_t sub_1C0892CD4()
{
  return sub_1C106FC94();
}

uint64_t sub_1C0892CDC()
{
  return sub_1C106FC94();
}

uint64_t *sub_1C0892CE4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;

  v3 = *(uint64_t **)(v2 - 128);
  v3[3] = v1;
  v3[4] = a1;
  return sub_1C079DFC4(v3);
}

void sub_1C0892CF0(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_BYTE *)(v2 - 112) = *(_BYTE *)(v1 + a1);
  PipelineType.description.getter();
}

uint64_t sub_1C0892D00(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 88) = result;
  return result;
}

void sub_1C0892D0C(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v3;

  *(_QWORD *)(v3 - 144) = a1;
  *(_QWORD *)(v3 - 136) = a2;
  *(_QWORD *)(v3 - 128) = a3;
}

uint64_t sub_1C0892D1C()
{
  return sub_1C106FA00();
}

__n128 sub_1C0892D28(__n128 *a1)
{
  uint64_t v1;
  __n128 result;

  result = *(__n128 *)(v1 - 112);
  a1[1] = result;
  return result;
}

uint64_t sub_1C0892D3C()
{
  return type metadata accessor for Blocker();
}

void sub_1C0892D48()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int *v3;
  uint64_t v4;
  _QWORD *v5;

  v5 = (_QWORD *)(v2 + v3[7]);
  *v5 = *(_QWORD *)(v4 - 160);
  v5[1] = v1;
  *(_QWORD *)(v2 + v3[8]) = v0;
  *(_BYTE *)(v2 + v3[9]) = *(_DWORD *)(v4 - 140) & 1;
}

uint64_t sub_1C0892D74()
{
  return type metadata accessor for Blocker();
}

uint64_t sub_1C0892D88()
{
  return _s24IntelligencePlatformCore5StagePAAE11entityClass0aB006EntityF0Vvg_0();
}

uint64_t sub_1C0892D90@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 160) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
  return type metadata accessor for ProgressTokens(0);
}

uint64_t sub_1C0892DB0(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 136) = a1;
  return sub_1C10705AC();
}

void sub_1C0892DCC()
{
  sub_1C07EC170();
}

uint64_t sub_1C0892DDC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_BYTE *)(v2 - 104) = *(_BYTE *)(v1 + a1);
  return StageName.description.getter();
}

uint64_t sub_1C0892DEC()
{
  return sub_1C106FB5C();
}

void sub_1C0892DF8()
{
  uint64_t v0;

}

void sub_1C0892E04(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(_QWORD);

  sub_1C0892C20(a1, a2, v2);
}

uint64_t sub_1C0892E0C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 168) + 8))(v0, v1);
}

uint64_t sub_1C0892E20@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  return v2(v1, a1 + v3 * *(_QWORD *)(v5 - 176), v4);
}

__n128 *sub_1C0892E34(__n128 *result, __n128 a2)
{
  uint64_t v2;

  *(__n128 *)(v2 - 112) = a2;
  result[1] = a2;
  return result;
}

uint64_t sub_1C0892E40(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 104) = result;
  return result;
}

uint64_t sub_1C0892E90()
{
  return sub_1C1070954();
}

void sub_1C0892EA4(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_BYTE *)(v2 - 96) = *(_BYTE *)(v1 + a1);
  PipelineType.description.getter();
}

uint64_t sub_1C0892EB4()
{
  return sub_1C106FC94();
}

uint64_t sub_1C0892EC4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 - 312))(a1, a2, 1);
}

void sub_1C0892F3C(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;

  sub_1C0892C20(a1, v3, a3);
}

void sub_1C0892F44()
{
  uint64_t v0;

  objc_autoreleasePoolPop(*(void **)(v0 - 208));
}

uint64_t sub_1C0892F4C()
{
  uint64_t v0;

  return v0;
}

void sub_1C0892F80()
{
  sub_1C0890934();
}

void sub_1C0892F8C()
{
  sub_1C0890760();
}

void sub_1C0892F98()
{
  sub_1C088FE5C();
}

void sub_1C0892FA4()
{
  sub_1C0891080();
}

uint64_t sub_1C0892FB0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(v0, v1);
}

void sub_1C0892FBC()
{
  uint64_t v0;
  uint64_t (*v1)(_QWORD);

  sub_1C07B1F90(v0, v1);
}

void sub_1C0892FC8()
{
  sub_1C0A7942C();
}

uint64_t sub_1C0892FD4()
{
  return sub_1C106FB5C();
}

void sub_1C0892FF4(float a1)
{
  float *v1;

  *v1 = a1;
}

_QWORD *sub_1C0893008()
{
  uint64_t v0;
  uint64_t v1;

  return sub_1C07A9480((_QWORD *)(v1 - 128), v0);
}

uint64_t sub_1C0893014()
{
  uint64_t v0;
  uint64_t v1;

  return v0 + *(int *)(v1 + 20);
}

uint64_t sub_1C0893034()
{
  uint64_t v0;

  return *(_QWORD *)(v0 - 272);
}

void sub_1C0893048()
{
  char v0;
  uint64_t v1;
  uint64_t v2;

  *(_BYTE *)(v2 + *(int *)(v1 + 20)) = v0;
}

uint64_t sub_1C089305C()
{
  uint64_t v0;

  return *(_QWORD *)(v0 - 352);
}

uint64_t sub_1C0893070()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1C089307C(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 112) = result;
  return result;
}

uint64_t sub_1C0893088()
{
  uint64_t v0;
  uint64_t v1;

  return v0 + *(int *)(*(_QWORD *)(v1 - 288) + 20);
}

uint64_t sub_1C08930A8()
{
  uint64_t v0;
  uint64_t v1;

  return v0 + *(int *)(v1 + 24);
}

uint64_t sub_1C08930B4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);

  return v3(a1, v2, v1);
}

uint64_t sub_1C08930D4()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1C08930E0(uint64_t a1, _BYTE *a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v3 + 96) = a1;
  *(_QWORD *)(v3 + 104) = v2;
  type metadata accessor for Fuser();
  *(_QWORD *)(v3 + 112) = sub_1C0779D74();
  type metadata accessor for Linker();
  *(_QWORD *)(v3 + 120) = sub_1C0779D74();
  *(_QWORD *)(v3 + 128) = type metadata accessor for Source();
  *(_QWORD *)(v3 + 136) = sub_1C0786414();
  *(_QWORD *)(v3 + 144) = swift_task_alloc();
  type metadata accessor for PhaseStores();
  *(_QWORD *)(v3 + 152) = sub_1C0786414();
  *(_QWORD *)(v3 + 160) = swift_task_alloc();
  *(_BYTE *)(v3 + 185) = *a2;
  return swift_task_switch();
}

void sub_1C0893180()
{
  __asm { BR              X10 }
}

uint64_t sub_1C08931DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;

  v3 = sub_1C1070CB4();
  swift_bridgeObjectRelease();
  if ((v3 & 1) != 0)
  {
    sub_1C0893744(*(_QWORD *)(v1 + 96), *(_QWORD *)(v1 + 160), (uint64_t (*)(_QWORD))type metadata accessor for PhaseStores);
    if (*(_QWORD *)(v2 + 1048) != -1)
      swift_once();
    v4 = *(_QWORD *)(v1 + 160);
    v5 = sub_1C079E000(*(_QWORD *)(v1 + 128), (uint64_t)&unk_1ED761400);
    v6 = type metadata accessor for BMAppleMusicEventDeltaSourceIngestor(0);
    *(_QWORD *)(v1 + 40) = v6;
    v7 = sub_1C07803B8((unint64_t *)&unk_1ED75CA20, type metadata accessor for BMAppleMusicEventDeltaSourceIngestor, (uint64_t)&unk_1C107E728);
    v8 = sub_1C07986E4(v7);
    sub_1C0893744(v5, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for Source);
    sub_1C0893788(v4, (uint64_t)v8 + *(int *)(v6 + 20));
    *((_BYTE *)v8 + *(int *)(v6 + 24)) = 2;
    _s24IntelligencePlatformCore12EventMatcherV11entityClass0aB006EntityG0Vvg_0();
  }
  else
  {
    sub_1C0893744(*(_QWORD *)(v1 + 96), *(_QWORD *)(v1 + 160), (uint64_t (*)(_QWORD))type metadata accessor for PhaseStores);
    v9 = type metadata accessor for BMAppleMusicEventSourceIngestor(0);
    *(_QWORD *)(v1 + 40) = v9;
    v10 = sub_1C07803B8(&qword_1ED751138, type metadata accessor for BMAppleMusicEventSourceIngestor, (uint64_t)&unk_1C107E744);
    v11 = sub_1C07986E4(v10);
    v12 = (uint64_t)v11 + *(int *)(v9 + 20);
    if (*(_QWORD *)(v2 + 1048) != -1)
      swift_once();
    v13 = *(_QWORD *)(v1 + 160);
    v14 = sub_1C079E000(*(_QWORD *)(v1 + 128), (uint64_t)&unk_1ED761400);
    sub_1C0893744(v14, v12, (uint64_t (*)(_QWORD))type metadata accessor for Source);
    *((_BYTE *)v11 + *(int *)(v9 + 24)) = 1;
    _s24IntelligencePlatformCore12EventMatcherV11entityClass0aB006EntityG0Vvg_0();
    sub_1C0893788(v13, (uint64_t)v11);
  }
  sub_1C0893744(*(_QWORD *)(v1 + 96), *(_QWORD *)(v1 + 160), (uint64_t (*)(_QWORD))type metadata accessor for PhaseStores);
  if (*(_QWORD *)(v2 + 1048) != -1)
    swift_once();
  v15 = *(_BYTE *)(v1 + 185);
  v17 = *(_QWORD *)(v1 + 144);
  v16 = *(_QWORD *)(v1 + 152);
  v18 = *(_QWORD *)(v1 + 136);
  v19 = *(_QWORD *)(v1 + 96);
  v20 = sub_1C079E000(*(_QWORD *)(v1 + 128), (uint64_t)&unk_1ED761400);
  *(_QWORD *)(v1 + 168) = v20;
  sub_1C0893744(v20, v17, (uint64_t (*)(_QWORD))type metadata accessor for Source);
  sub_1C07D6D1C(v0, v1 + 56);
  sub_1C0893744(v20, v18, (uint64_t (*)(_QWORD))type metadata accessor for Source);
  sub_1C0893744(v19, v16, (uint64_t (*)(_QWORD))type metadata accessor for PhaseStores);
  *(_BYTE *)(v1 + 184) = v15;
  v21 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 176) = v21;
  *v21 = v1;
  v21[1] = sub_1C08934C0;
  return Linker.init(source:stores:pipelineType:)(*(_QWORD *)(v1 + 120), *(_QWORD *)(v1 + 136), *(_QWORD *)(v1 + 152), (_BYTE *)(v1 + 184));
}

uint64_t sub_1C08934C0()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1C0893514()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;

  v1 = *(_BYTE *)(v0 + 185);
  v2 = *(_QWORD *)(v0 + 152);
  v14 = *(_QWORD *)(v0 + 144);
  v15 = *(_QWORD *)(v0 + 160);
  v3 = *(_QWORD *)(v0 + 112);
  v4 = *(_QWORD *)(v0 + 96);
  v12 = *(_QWORD *)(v0 + 104);
  v13 = *(_QWORD *)(v0 + 120);
  sub_1C0893744(*(_QWORD *)(v0 + 168), *(_QWORD *)(v0 + 136), (uint64_t (*)(_QWORD))type metadata accessor for Source);
  sub_1C0893744(v4, v2, (uint64_t (*)(_QWORD))type metadata accessor for PhaseStores);
  Fuser.init(source:stores:pipelineType:)();
  sub_1C08937CC(v4);
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0(v0 + 16);
  v16 = v1;
  v6 = *(_QWORD *)(v0 + 80);
  v5 = *(_QWORD *)(v0 + 88);
  v7 = sub_1C079D180(v0 + 56, v6);
  v8 = *(_QWORD *)(v6 - 8);
  v9 = swift_task_alloc();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v9, v7, v6);
  v10 = sub_1C0CD00A4(v15, v14, v9, v13, v3, &v16, v12, v6, v5);
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0(v0 + 56);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v10);
}

void sub_1C0893684()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_1C08936B0()
{
  PipelinePhase.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_1C08936D0()
{
  return type metadata accessor for BMAppleMusicEventPhase();
}

uint64_t type metadata accessor for BMAppleMusicEventPhase()
{
  uint64_t result;

  result = qword_1ED755D00;
  if (!qword_1ED755D00)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1C0893710()
{
  return swift_updateClassMetadata2();
}

uint64_t sub_1C0893744(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1C0893788(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for PhaseStores();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C08937CC(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for PhaseStores();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

_QWORD *sub_1C0893808(_QWORD *a1, _QWORD *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  void (*v13)(char *, char *, uint64_t);
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  int *v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v23 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v23 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    a1[2] = a2[2];
    v8 = type metadata accessor for Source();
    v9 = *(int *)(v8 + 24);
    v10 = (char *)v4 + v9;
    v11 = (char *)a2 + v9;
    v12 = sub_1C106D1F8();
    v13 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    v13(v10, v11, v12);
    *((_BYTE *)v4 + *(int *)(v8 + 28)) = *((_BYTE *)a2 + *(int *)(v8 + 28));
    v14 = a3[5];
    v15 = (char *)v4 + v14;
    v16 = (char *)a2 + v14;
    v17 = sub_1C106AB28();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v15, v16, v17);
    v18 = type metadata accessor for Configuration();
    *(_OWORD *)&v15[*(int *)(v18 + 20)] = *(_OWORD *)&v16[*(int *)(v18 + 20)];
    v19 = (int *)type metadata accessor for PhaseStores();
    *(_QWORD *)&v15[v19[5]] = *(_QWORD *)&v16[v19[5]];
    *(_QWORD *)&v15[v19[6]] = *(_QWORD *)&v16[v19[6]];
    *(_QWORD *)&v15[v19[7]] = *(_QWORD *)&v16[v19[7]];
    *(_QWORD *)&v15[v19[8]] = *(_QWORD *)&v16[v19[8]];
    *(_QWORD *)&v15[v19[9]] = *(_QWORD *)&v16[v19[9]];
    *(_QWORD *)&v15[v19[10]] = *(_QWORD *)&v16[v19[10]];
    *(_QWORD *)&v15[v19[11]] = *(_QWORD *)&v16[v19[11]];
    v20 = a3[7];
    *((_BYTE *)v4 + a3[6]) = *((_BYTE *)a2 + a3[6]);
    v21 = (char *)v4 + v20;
    v22 = (char *)a2 + v20;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    v13(v21, v22, v12);
  }
  return v4;
}

uint64_t sub_1C08939E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v9)(uint64_t, uint64_t);

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(type metadata accessor for Source() + 24);
  v5 = sub_1C106D1F8();
  v9 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8);
  v9(v4, v5);
  v6 = a1 + *(int *)(a2 + 20);
  v7 = sub_1C106AB28();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  type metadata accessor for PhaseStores();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return ((uint64_t (*)(uint64_t, uint64_t))v9)(a1 + *(int *)(a2 + 28), v5);
}

_QWORD *sub_1C0893AEC(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  int *v18;
  uint64_t v19;
  char *v20;
  char *v21;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  a1[2] = a2[2];
  v7 = type metadata accessor for Source();
  v8 = *(int *)(v7 + 24);
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = sub_1C106D1F8();
  v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  v12(v9, v10, v11);
  *((_BYTE *)a1 + *(int *)(v7 + 28)) = *((_BYTE *)a2 + *(int *)(v7 + 28));
  v13 = a3[5];
  v14 = (char *)a1 + v13;
  v15 = (char *)a2 + v13;
  v16 = sub_1C106AB28();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v14, v15, v16);
  v17 = type metadata accessor for Configuration();
  *(_OWORD *)&v14[*(int *)(v17 + 20)] = *(_OWORD *)&v15[*(int *)(v17 + 20)];
  v18 = (int *)type metadata accessor for PhaseStores();
  *(_QWORD *)&v14[v18[5]] = *(_QWORD *)&v15[v18[5]];
  *(_QWORD *)&v14[v18[6]] = *(_QWORD *)&v15[v18[6]];
  *(_QWORD *)&v14[v18[7]] = *(_QWORD *)&v15[v18[7]];
  *(_QWORD *)&v14[v18[8]] = *(_QWORD *)&v15[v18[8]];
  *(_QWORD *)&v14[v18[9]] = *(_QWORD *)&v15[v18[9]];
  *(_QWORD *)&v14[v18[10]] = *(_QWORD *)&v15[v18[10]];
  *(_QWORD *)&v14[v18[11]] = *(_QWORD *)&v15[v18[11]];
  v19 = a3[7];
  *((_BYTE *)a1 + a3[6]) = *((_BYTE *)a2 + a3[6]);
  v20 = (char *)a1 + v19;
  v21 = (char *)a2 + v19;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  v12(v20, v21, v11);
  return a1;
}

_QWORD *sub_1C0893C98(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  int *v19;

  *a1 = *a2;
  a1[1] = a2[1];
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  v6 = type metadata accessor for Source();
  v7 = *(int *)(v6 + 24);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_1C106D1F8();
  v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 24);
  v11(v8, v9, v10);
  *((_BYTE *)a1 + *(int *)(v6 + 28)) = *((_BYTE *)a2 + *(int *)(v6 + 28));
  v12 = a3[5];
  v13 = (char *)a1 + v12;
  v14 = (char *)a2 + v12;
  v15 = sub_1C106AB28();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 24))(v13, v14, v15);
  v16 = *(int *)(type metadata accessor for Configuration() + 20);
  v17 = &v13[v16];
  v18 = &v14[v16];
  *(_QWORD *)v17 = *(_QWORD *)v18;
  *((_QWORD *)v17 + 1) = *((_QWORD *)v18 + 1);
  v19 = (int *)type metadata accessor for PhaseStores();
  *(_QWORD *)&v13[v19[5]] = *(_QWORD *)&v14[v19[5]];
  swift_retain();
  swift_release();
  *(_QWORD *)&v13[v19[6]] = *(_QWORD *)&v14[v19[6]];
  swift_retain();
  swift_release();
  *(_QWORD *)&v13[v19[7]] = *(_QWORD *)&v14[v19[7]];
  swift_retain();
  swift_release();
  *(_QWORD *)&v13[v19[8]] = *(_QWORD *)&v14[v19[8]];
  swift_retain();
  swift_release();
  *(_QWORD *)&v13[v19[9]] = *(_QWORD *)&v14[v19[9]];
  swift_retain();
  swift_release();
  *(_QWORD *)&v13[v19[10]] = *(_QWORD *)&v14[v19[10]];
  swift_retain();
  swift_release();
  *(_QWORD *)&v13[v19[11]] = *(_QWORD *)&v14[v19[11]];
  swift_retain();
  swift_release();
  *((_BYTE *)a1 + a3[6]) = *((_BYTE *)a2 + a3[6]);
  v11((char *)a1 + a3[7], (char *)a2 + a3[7], v10);
  return a1;
}

uint64_t sub_1C0893E90(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int *v17;
  uint64_t v18;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v6 = type metadata accessor for Source();
  v7 = *(int *)(v6 + 24);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1C106D1F8();
  v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32);
  v11(v8, v9, v10);
  *(_BYTE *)(a1 + *(int *)(v6 + 28)) = *(_BYTE *)(a2 + *(int *)(v6 + 28));
  v12 = a3[5];
  v13 = a1 + v12;
  v14 = a2 + v12;
  v15 = sub_1C106AB28();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v13, v14, v15);
  v16 = type metadata accessor for Configuration();
  *(_OWORD *)(v13 + *(int *)(v16 + 20)) = *(_OWORD *)(v14 + *(int *)(v16 + 20));
  v17 = (int *)type metadata accessor for PhaseStores();
  *(_QWORD *)(v13 + v17[5]) = *(_QWORD *)(v14 + v17[5]);
  *(_QWORD *)(v13 + v17[6]) = *(_QWORD *)(v14 + v17[6]);
  *(_QWORD *)(v13 + v17[7]) = *(_QWORD *)(v14 + v17[7]);
  *(_QWORD *)(v13 + v17[8]) = *(_QWORD *)(v14 + v17[8]);
  *(_QWORD *)(v13 + v17[9]) = *(_QWORD *)(v14 + v17[9]);
  *(_QWORD *)(v13 + v17[10]) = *(_QWORD *)(v14 + v17[10]);
  *(_QWORD *)(v13 + v17[11]) = *(_QWORD *)(v14 + v17[11]);
  v18 = a3[7];
  *(_BYTE *)(a1 + a3[6]) = *(_BYTE *)(a2 + a3[6]);
  v11(a1 + v18, a2 + v18, v10);
  return a1;
}

_QWORD *sub_1C0893FE0(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  int *v18;
  uint64_t v19;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  v7 = type metadata accessor for Source();
  v8 = *(int *)(v7 + 24);
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = sub_1C106D1F8();
  v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 40);
  v12(v9, v10, v11);
  *((_BYTE *)a1 + *(int *)(v7 + 28)) = *((_BYTE *)a2 + *(int *)(v7 + 28));
  v13 = a3[5];
  v14 = (char *)a1 + v13;
  v15 = (char *)a2 + v13;
  v16 = sub_1C106AB28();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 40))(v14, v15, v16);
  v17 = type metadata accessor for Configuration();
  *(_OWORD *)&v14[*(int *)(v17 + 20)] = *(_OWORD *)&v15[*(int *)(v17 + 20)];
  v18 = (int *)type metadata accessor for PhaseStores();
  *(_QWORD *)&v14[v18[5]] = *(_QWORD *)&v15[v18[5]];
  swift_release();
  *(_QWORD *)&v14[v18[6]] = *(_QWORD *)&v15[v18[6]];
  swift_release();
  *(_QWORD *)&v14[v18[7]] = *(_QWORD *)&v15[v18[7]];
  swift_release();
  *(_QWORD *)&v14[v18[8]] = *(_QWORD *)&v15[v18[8]];
  swift_release();
  *(_QWORD *)&v14[v18[9]] = *(_QWORD *)&v15[v18[9]];
  swift_release();
  *(_QWORD *)&v14[v18[10]] = *(_QWORD *)&v15[v18[10]];
  swift_release();
  *(_QWORD *)&v14[v18[11]] = *(_QWORD *)&v15[v18[11]];
  swift_release();
  v19 = a3[7];
  *((_BYTE *)a1 + a3[6]) = *((_BYTE *)a2 + a3[6]);
  v12((char *)a1 + v19, (char *)a2 + v19, v11);
  return a1;
}

uint64_t sub_1C0894174()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1C0894180(uint64_t a1, uint64_t a2, int *a3)
{
  return sub_1C0894B94(a1, a2, a3, (uint64_t (*)(_QWORD))type metadata accessor for Source, (uint64_t (*)(_QWORD))type metadata accessor for PhaseStores);
}

uint64_t sub_1C0894194()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1C08941A0(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  return sub_1C0894C6C(a1, a2, a3, a4, (uint64_t (*)(_QWORD))type metadata accessor for Source, (uint64_t (*)(_QWORD))type metadata accessor for PhaseStores);
}

uint64_t type metadata accessor for BMAppleMusicEventDeltaSourceIngestor(uint64_t a1)
{
  return sub_1C0784B00(a1, qword_1ED75CA40);
}

uint64_t sub_1C08941C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C0894D58(a1, a2, a3, (uint64_t (*)(uint64_t))type metadata accessor for Source, (uint64_t (*)(uint64_t))type metadata accessor for PhaseStores);
}

_QWORD *sub_1C08941DC(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  int *v9;
  uint64_t v10;
  _QWORD *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v19)(char *, char *, uint64_t);
  char *v20;
  char *v21;
  uint64_t v22;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v17 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1C106AB28();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = type metadata accessor for Configuration();
    *(_OWORD *)((char *)a1 + *(int *)(v8 + 20)) = *(_OWORD *)((char *)a2 + *(int *)(v8 + 20));
    v9 = (int *)type metadata accessor for PhaseStores();
    *(_QWORD *)((char *)a1 + v9[5]) = *(_QWORD *)((char *)a2 + v9[5]);
    *(_QWORD *)((char *)a1 + v9[6]) = *(_QWORD *)((char *)a2 + v9[6]);
    *(_QWORD *)((char *)a1 + v9[7]) = *(_QWORD *)((char *)a2 + v9[7]);
    *(_QWORD *)((char *)a1 + v9[8]) = *(_QWORD *)((char *)a2 + v9[8]);
    *(_QWORD *)((char *)a1 + v9[9]) = *(_QWORD *)((char *)a2 + v9[9]);
    *(_QWORD *)((char *)a1 + v9[10]) = *(_QWORD *)((char *)a2 + v9[10]);
    *(_QWORD *)((char *)a1 + v9[11]) = *(_QWORD *)((char *)a2 + v9[11]);
    v10 = a3[5];
    v11 = (_QWORD *)((char *)a1 + v10);
    v12 = (char *)a2 + v10;
    v13 = *(_QWORD *)((char *)a2 + v10 + 8);
    *v11 = *(_QWORD *)((char *)a2 + v10);
    v11[1] = v13;
    v11[2] = *(_QWORD *)((char *)a2 + v10 + 16);
    v22 = type metadata accessor for Source();
    v14 = *(int *)(v22 + 24);
    v20 = &v12[v14];
    v21 = (char *)v11 + v14;
    v15 = sub_1C106D1F8();
    v19 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    v19(v21, v20, v15);
    *((_BYTE *)v11 + *(int *)(v22 + 28)) = v12[*(int *)(v22 + 28)];
    v16 = a3[7];
    *((_BYTE *)a1 + a3[6]) = *((_BYTE *)a2 + a3[6]);
    v19((char *)a1 + v16, (char *)a2 + v16, v15);
  }
  return a1;
}

uint64_t sub_1C08943C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v9)(uint64_t, uint64_t);

  v4 = sub_1C106AB28();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  type metadata accessor for PhaseStores();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  v5 = a1 + *(int *)(a2 + 20);
  swift_bridgeObjectRelease();
  v6 = v5 + *(int *)(type metadata accessor for Source() + 24);
  v7 = sub_1C106D1F8();
  v9 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8);
  v9(v6, v7);
  return ((uint64_t (*)(uint64_t, uint64_t))v9)(a1 + *(int *)(a2 + 28), v7);
}

uint64_t sub_1C08944C8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v18)(char *, uint64_t, uint64_t);
  uint64_t v19;
  char *v20;
  uint64_t v21;

  v6 = sub_1C106AB28();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = type metadata accessor for Configuration();
  *(_OWORD *)(a1 + *(int *)(v7 + 20)) = *(_OWORD *)(a2 + *(int *)(v7 + 20));
  v8 = (int *)type metadata accessor for PhaseStores();
  *(_QWORD *)(a1 + v8[5]) = *(_QWORD *)(a2 + v8[5]);
  *(_QWORD *)(a1 + v8[6]) = *(_QWORD *)(a2 + v8[6]);
  *(_QWORD *)(a1 + v8[7]) = *(_QWORD *)(a2 + v8[7]);
  *(_QWORD *)(a1 + v8[8]) = *(_QWORD *)(a2 + v8[8]);
  *(_QWORD *)(a1 + v8[9]) = *(_QWORD *)(a2 + v8[9]);
  *(_QWORD *)(a1 + v8[10]) = *(_QWORD *)(a2 + v8[10]);
  *(_QWORD *)(a1 + v8[11]) = *(_QWORD *)(a2 + v8[11]);
  v9 = a3[5];
  v10 = (_QWORD *)(a1 + v9);
  v11 = a2 + v9;
  v12 = *(_QWORD *)(a2 + v9 + 8);
  *v10 = *(_QWORD *)(a2 + v9);
  v10[1] = v12;
  v10[2] = *(_QWORD *)(a2 + v9 + 16);
  v13 = type metadata accessor for Source();
  v14 = *(int *)(v13 + 24);
  v20 = (char *)v10 + v14;
  v21 = v13;
  v19 = v11 + v14;
  v15 = sub_1C106D1F8();
  v18 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 16);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  v18(v20, v19, v15);
  *((_BYTE *)v10 + *(int *)(v21 + 28)) = *(_BYTE *)(v11 + *(int *)(v21 + 28));
  v16 = a3[7];
  *(_BYTE *)(a1 + a3[6]) = *(_BYTE *)(a2 + a3[6]);
  v18((char *)(a1 + v16), a2 + v16, v15);
  return a1;
}

uint64_t sub_1C0894688(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  int *v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(char *, uint64_t, uint64_t);

  v6 = sub_1C106AB28();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(type metadata accessor for Configuration() + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *v8 = *v9;
  v8[1] = v9[1];
  v10 = (int *)type metadata accessor for PhaseStores();
  *(_QWORD *)(a1 + v10[5]) = *(_QWORD *)(a2 + v10[5]);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + v10[6]) = *(_QWORD *)(a2 + v10[6]);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + v10[7]) = *(_QWORD *)(a2 + v10[7]);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + v10[8]) = *(_QWORD *)(a2 + v10[8]);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + v10[9]) = *(_QWORD *)(a2 + v10[9]);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + v10[10]) = *(_QWORD *)(a2 + v10[10]);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + v10[11]) = *(_QWORD *)(a2 + v10[11]);
  swift_retain();
  swift_release();
  v11 = a3[5];
  v12 = (_QWORD *)(a1 + v11);
  v13 = a2 + v11;
  *v12 = *(_QWORD *)(a2 + v11);
  v12[1] = *(_QWORD *)(a2 + v11 + 8);
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  swift_bridgeObjectRelease();
  v12[2] = *(_QWORD *)(v13 + 16);
  v14 = type metadata accessor for Source();
  v15 = *(int *)(v14 + 24);
  v16 = (char *)v12 + v15;
  v17 = v13 + v15;
  v18 = sub_1C106D1F8();
  v19 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 24);
  v19(v16, v17, v18);
  *((_BYTE *)v12 + *(int *)(v14 + 28)) = *(_BYTE *)(v13 + *(int *)(v14 + 28));
  *(_BYTE *)(a1 + a3[6]) = *(_BYTE *)(a2 + a3[6]);
  v19((char *)(a1 + a3[7]), a2 + a3[7], v18);
  return a1;
}

uint64_t sub_1C0894880(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t, uint64_t, uint64_t);
  uint64_t v18;

  v6 = sub_1C106AB28();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = type metadata accessor for Configuration();
  *(_OWORD *)(a1 + *(int *)(v7 + 20)) = *(_OWORD *)(a2 + *(int *)(v7 + 20));
  v8 = (int *)type metadata accessor for PhaseStores();
  *(_QWORD *)(a1 + v8[5]) = *(_QWORD *)(a2 + v8[5]);
  *(_QWORD *)(a1 + v8[6]) = *(_QWORD *)(a2 + v8[6]);
  *(_QWORD *)(a1 + v8[7]) = *(_QWORD *)(a2 + v8[7]);
  *(_QWORD *)(a1 + v8[8]) = *(_QWORD *)(a2 + v8[8]);
  *(_QWORD *)(a1 + v8[9]) = *(_QWORD *)(a2 + v8[9]);
  *(_QWORD *)(a1 + v8[10]) = *(_QWORD *)(a2 + v8[10]);
  *(_QWORD *)(a1 + v8[11]) = *(_QWORD *)(a2 + v8[11]);
  v9 = a3[5];
  v10 = a1 + v9;
  v11 = a2 + v9;
  *(_OWORD *)v10 = *(_OWORD *)(a2 + v9);
  *(_QWORD *)(v10 + 16) = *(_QWORD *)(a2 + v9 + 16);
  v12 = type metadata accessor for Source();
  v13 = *(int *)(v12 + 24);
  v14 = v10 + v13;
  v15 = v11 + v13;
  v16 = sub_1C106D1F8();
  v17 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 32);
  v17(v14, v15, v16);
  *(_BYTE *)(v10 + *(int *)(v12 + 28)) = *(_BYTE *)(v11 + *(int *)(v12 + 28));
  v18 = a3[7];
  *(_BYTE *)(a1 + a3[6]) = *(_BYTE *)(a2 + a3[6]);
  v17(a1 + v18, a2 + v18, v16);
  return a1;
}

uint64_t sub_1C08949D8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, uint64_t, uint64_t);
  uint64_t v19;

  v6 = sub_1C106AB28();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = type metadata accessor for Configuration();
  *(_OWORD *)(a1 + *(int *)(v7 + 20)) = *(_OWORD *)(a2 + *(int *)(v7 + 20));
  v8 = (int *)type metadata accessor for PhaseStores();
  *(_QWORD *)(a1 + v8[5]) = *(_QWORD *)(a2 + v8[5]);
  swift_release();
  *(_QWORD *)(a1 + v8[6]) = *(_QWORD *)(a2 + v8[6]);
  swift_release();
  *(_QWORD *)(a1 + v8[7]) = *(_QWORD *)(a2 + v8[7]);
  swift_release();
  *(_QWORD *)(a1 + v8[8]) = *(_QWORD *)(a2 + v8[8]);
  swift_release();
  *(_QWORD *)(a1 + v8[9]) = *(_QWORD *)(a2 + v8[9]);
  swift_release();
  *(_QWORD *)(a1 + v8[10]) = *(_QWORD *)(a2 + v8[10]);
  swift_release();
  *(_QWORD *)(a1 + v8[11]) = *(_QWORD *)(a2 + v8[11]);
  swift_release();
  v9 = a3[5];
  v10 = (_QWORD *)(a1 + v9);
  v11 = a2 + v9;
  v12 = *(_QWORD *)(a2 + v9 + 8);
  *v10 = *(_QWORD *)(a2 + v9);
  v10[1] = v12;
  swift_bridgeObjectRelease();
  v10[2] = *(_QWORD *)(v11 + 16);
  v13 = type metadata accessor for Source();
  v14 = *(int *)(v13 + 24);
  v15 = (char *)v10 + v14;
  v16 = v11 + v14;
  v17 = sub_1C106D1F8();
  v18 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 40);
  v18(v15, v16, v17);
  *((_BYTE *)v10 + *(int *)(v13 + 28)) = *(_BYTE *)(v11 + *(int *)(v13 + 28));
  v19 = a3[7];
  *(_BYTE *)(a1 + a3[6]) = *(_BYTE *)(a2 + a3[6]);
  v18((char *)(a1 + v19), a2 + v19, v17);
  return a1;
}

uint64_t sub_1C0894B74()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1C0894B80(uint64_t a1, uint64_t a2, int *a3)
{
  return sub_1C0894B94(a1, a2, a3, (uint64_t (*)(_QWORD))type metadata accessor for PhaseStores, (uint64_t (*)(_QWORD))type metadata accessor for Source);
}

uint64_t sub_1C0894B94(uint64_t a1, uint64_t a2, int *a3, uint64_t (*a4)(_QWORD), uint64_t (*a5)(_QWORD))
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int v14;

  v9 = a4(0);
  if (*(_DWORD *)(*(_QWORD *)(v9 - 8) + 84) == (_DWORD)a2)
  {
    v10 = v9;
    v11 = a1;
    return sub_1C07B2D80(v11, a2, v10);
  }
  v12 = a5(0);
  if (*(_DWORD *)(*(_QWORD *)(v12 - 8) + 84) == (_DWORD)a2)
  {
    v10 = v12;
    v13 = a3[5];
LABEL_10:
    v11 = a1 + v13;
    return sub_1C07B2D80(v11, a2, v10);
  }
  if ((_DWORD)a2 != 252)
  {
    v10 = sub_1C0776744();
    v13 = a3[7];
    goto LABEL_10;
  }
  v14 = *(unsigned __int8 *)(a1 + a3[6]);
  if (v14 >= 4)
    return v14 - 3;
  else
    return 0;
}

uint64_t sub_1C0894C4C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1C0894C58(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  return sub_1C0894C6C(a1, a2, a3, a4, (uint64_t (*)(_QWORD))type metadata accessor for PhaseStores, (uint64_t (*)(_QWORD))type metadata accessor for Source);
}

uint64_t sub_1C0894C6C(uint64_t a1, uint64_t a2, int a3, int *a4, uint64_t (*a5)(_QWORD), uint64_t (*a6)(_QWORD))
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;

  v11 = a5(0);
  if (*(_DWORD *)(*(_QWORD *)(v11 - 8) + 84) == a3)
  {
    v12 = v11;
    v13 = a1;
  }
  else
  {
    result = a6(0);
    if (*(_DWORD *)(*(_QWORD *)(result - 8) + 84) == a3)
    {
      v12 = result;
      v15 = a4[5];
    }
    else
    {
      if (a3 == 252)
      {
        *(_BYTE *)(a1 + a4[6]) = a2 + 3;
        return result;
      }
      v12 = sub_1C0776744();
      v15 = a4[7];
    }
    v13 = a1 + v15;
  }
  return sub_1C07B2D8C(v13, a2, a2, v12);
}

uint64_t type metadata accessor for BMAppleMusicEventSourceIngestor(uint64_t a1)
{
  return sub_1C0784B00(a1, (uint64_t *)&unk_1ED751150);
}

uint64_t sub_1C0894D44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C0894D58(a1, a2, a3, (uint64_t (*)(uint64_t))type metadata accessor for PhaseStores, (uint64_t (*)(uint64_t))type metadata accessor for Source);
}

uint64_t sub_1C0894D58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t), uint64_t (*a5)(uint64_t))
{
  uint64_t result;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;

  result = a4(319);
  if (v7 <= 0x3F)
  {
    result = a5(319);
    if (v8 <= 0x3F)
    {
      result = sub_1C106D1F8();
      if (v9 <= 0x3F)
      {
        swift_initStructMetadata();
        return 0;
      }
    }
  }
  return result;
}

uint64_t sub_1C0894E04(int a1)
{
  uint64_t result;
  unsigned int v3;

  result = 0x6E776F6E6B6E55;
  switch(a1)
  {
    case 0:
      return result;
    case 1:
      v3 = 2036427856;
      goto LABEL_7;
    case 2:
      result = 0x646573756150;
      break;
    case 3:
      result = 0x646570706F7453;
      break;
    case 4:
      result = 0x7075727265746E49;
      break;
    case 5:
      v3 = 1801807187;
LABEL_7:
      result = v3 | 0x676E6900000000;
      break;
    default:
      result = sub_1C1070954();
      __break(1u);
      break;
  }
  return result;
}

uint64_t sub_1C0894F00(uint64_t a1, char a2, uint64_t a3)
{
  void *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  _BYTE *v54;
  _QWORD *v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  _QWORD *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t *v86;
  uint64_t v87;
  uint64_t *v88;
  uint64_t *v89;
  uint64_t *v90;
  uint64_t *v91;
  uint64_t v92;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v108;
  int *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  void (*v115)(uint64_t, uint64_t);
  uint64_t v116;
  void (*v117)(uint64_t, uint64_t);
  uint64_t v118;
  void (*v119)(uint64_t, uint64_t);
  uint64_t v120;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  int *v128;
  uint64_t v129;
  uint64_t *v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;

  sub_1C07ACF80(&qword_1EF633110);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v5);
  sub_1C0778564();
  v8 = v7 - v6;
  v9 = sub_1C106A918();
  v118 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  sub_1C0778564();
  v12 = v11 - v10;
  v124 = sub_1C106AFE4();
  v116 = *(_QWORD *)(v124 - 8);
  MEMORY[0x1E0C80A78](v124);
  sub_1C077AE40();
  v123 = v13;
  sub_1C077CF58();
  v122 = sub_1C106ADE0();
  v114 = *(_QWORD *)(v122 - 8);
  MEMORY[0x1E0C80A78](v122);
  sub_1C077AE40();
  v120 = v14;
  v15 = sub_1C077CF58();
  v128 = (int *)type metadata accessor for BMAppleMusicEventStructs.DateRelationshipType(v15);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v16);
  sub_1C0778564();
  v19 = v18 - v17;
  sub_1C07ACF80(&qword_1EF633118);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v20);
  sub_1C0778564();
  v23 = v22 - v21;
  sub_1C07ACF80(&qword_1EF633120);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v24);
  sub_1C077AE40();
  v112 = v25;
  v26 = sub_1C077CF58();
  v113 = type metadata accessor for BMAppleMusicEventStructs.SongRelationshipType(v26);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v27);
  sub_1C077AE40();
  v127 = v28;
  sub_1C07ACF80(&qword_1EF633128);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v29);
  sub_1C077AE40();
  v30 = sub_1C077CF58();
  v111 = type metadata accessor for BMAppleMusicEventStructs.QuantityRelationshipType(v30);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v31);
  sub_1C077AE40();
  v126 = v32;
  sub_1C07ACF80(&qword_1EF633130);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v33);
  sub_1C077AE40();
  v110 = v34;
  v35 = sub_1C077CF58();
  v108 = type metadata accessor for BMAppleMusicEventStructs.IdentifierRelationshipType(v35);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v36);
  sub_1C077AE40();
  v125 = v37;
  v38 = sub_1C077CF58();
  v129 = type metadata accessor for BMAppleMusicEventStructs.Song(v38);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v39);
  sub_1C077AE40();
  v131 = v40;
  v41 = sub_1C077CF58();
  v42 = type metadata accessor for BMAppleMusicEventStructs.Event(v41);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v43);
  sub_1C077AE40();
  v133 = v44;
  v45 = sub_1C0898890(v3, (SEL *)&selRef_iTunesSubscriptionIdentifier);
  if (v46)
  {
    v47 = v45;
    v48 = v46;
    v97 = v23;
    v99 = v12;
    v102 = v9;
    v101 = v8;
    v49 = v3;
    sub_1C0894E04((int)objc_msgSend(v3, sel_playbackState));
    v105 = v47;
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    sub_1C106FC94();
    sub_1C077B5B4();
    sub_1C079FD58();
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    sub_1C106FC94();
    sub_1C077B5B4();
    sub_1C077589C();
    if (qword_1ED749BD0 != -1)
      swift_once();
    v50 = type metadata accessor for SourceIdPrefix();
    sub_1C079E000(v50, (uint64_t)&unk_1ED749BB0);
    String.base64EncodedSHA(withPrefix:)();
    v52 = v51;
    a3 = v53;
    sub_1C077B5B4();
    sub_1C07767B4();
    sub_1C0F28178();
    if (v132)
    {
      swift_bridgeObjectRelease();
      sub_1C07767AC();
    }
    else
    {
      v55 = (_QWORD *)sub_1C0894E04((int)objc_msgSend(v49, sel_playbackState));
      v57 = v56;
      v58 = (_QWORD *)(v133 + *(int *)(v42 + 36));
      swift_bridgeObjectRelease();
      *v58 = v55;
      v58[1] = v57;
      if (qword_1ED749C18 != -1)
        swift_once();
      sub_1C079E000(v50, (uint64_t)&unk_1ED749C00);
      String.base64EncodedSHA(withPrefix:)();
      sub_1C0F28A70(v59, v60, v61, v62, v63, v64, v65, v66, v95, v96, v52, v97, v99, v101, v102, v19, v105, a1, v108,
        v110);
      sub_1C0794DAC(v67, (SEL *)&selRef_title);
      sub_1C07B4024();
      v68 = sub_1C07997F8();
      *v55 = v50;
      v55[1] = v58;
      sub_1C0794DAC(v68, (SEL *)&selRef_artist);
      sub_1C07B4024();
      v69 = sub_1C07997F8();
      *v55 = v50;
      v55[1] = v58;
      sub_1C0794DAC(v69, (SEL *)&selRef_iTunesArtistIdentifier);
      sub_1C07B4024();
      v70 = sub_1C07997F8();
      *v55 = v50;
      v55[1] = v58;
      sub_1C0794DAC(v70, (SEL *)&selRef_album);
      sub_1C07B4024();
      v71 = sub_1C07997F8();
      *v55 = v50;
      v55[1] = v58;
      sub_1C0794DAC(v71, (SEL *)&selRef_iTunesAlbumIdentifier);
      sub_1C07B4024();
      sub_1C07997F8();
      *v55 = v50;
      v55[1] = v58;
      sub_1C0C47F60(v49);
      sub_1C07B4024();
      sub_1C07997F8();
      *v55 = v50;
      v55[1] = v58;
      sub_1C106E41C();
      v72 = sub_1C07B7164();
      *(_QWORD *)(v74 - 256) = v73;
      sub_1C07B2D8C(v72, v75, v76, v73);
      sub_1C106D030();
      v77 = v125 + v109[6];
      if (qword_1ED761418 != -1)
        swift_once();
      v78 = type metadata accessor for Source();
      v79 = sub_1C079E000(v78, (uint64_t)&unk_1ED761400);
      sub_1C07E05C8(v79, v77, (uint64_t (*)(_QWORD))type metadata accessor for Source);
      sub_1C106DE70();
      v80 = (_QWORD *)(v125 + v109[8]);
      sub_1C106DF00();
      v81 = v109[10];
      *v80 = v106;
      v80[1] = v48;
      *(_OWORD *)(v125 + v81) = xmmword_1C107E760;
      sub_1C078C8B0(v125, type metadata accessor for BMAppleMusicEventStructs.IdentifierRelationshipType, (uint64_t)&v135);
      sub_1C078C780((uint64_t)type metadata accessor for Source, 0);
      sub_1C0F29480();
      v82 = sub_1C07B7164();
      sub_1C07B2D8C(v82, v84, v85, *(_QWORD *)(v83 - 256));
      sub_1C106D000();
      sub_1C0789B14(v79, v126 + *(int *)(v111 + 24));
      sub_1C106E374();
      v86 = (uint64_t *)(v126 + *(int *)(v111 + 32));
      objc_msgSend(v49, sel_duration);
      *v86 = sub_1C1070C0C();
      v86[1] = v87;
      sub_1C078C8B0(v126, type metadata accessor for BMAppleMusicEventStructs.QuantityRelationshipType, (uint64_t)&v136);
      sub_1C078F0C0((uint64_t)v86);
      sub_1C0F2950C();
      sub_1C078C780(v127, 1);
      sub_1C106CF94();
      sub_1C0789B14(v79, v127 + *(int *)(v113 + 24));
      sub_1C07B2D8C(v127 + *(int *)(v113 + 28), 1, 1, v129);
      sub_1C07E05C8(v131, v112, type metadata accessor for BMAppleMusicEventStructs.Song);
      sub_1C078F0C0(v112);
      sub_1C0F29598();
      sub_1C07E05C8(v127, v98, type metadata accessor for BMAppleMusicEventStructs.SongRelationshipType);
      sub_1C07B2D8C(v98, 0, 1, v113);
      sub_1C0F29668();
      sub_1C078C780(v104, 1);
      sub_1C106CF88();
      sub_1C0789B14(v79, v104 + v128[6]);
      sub_1C106E404();
      v88 = (uint64_t *)(v104 + v128[8]);
      *v88 = 0;
      v88[1] = 0;
      sub_1C106E2D8();
      v89 = (uint64_t *)(v104 + v128[10]);
      *v89 = 0;
      v89[1] = 0;
      v130 = v89;
      sub_1C106DFC0();
      v90 = (uint64_t *)(v104 + v128[12]);
      *v90 = 0;
      v90[1] = 0;
      sub_1C106DF0C();
      v91 = (uint64_t *)(v104 + v128[14]);
      *v91 = 0;
      v91[1] = 0;
      sub_1C106AC54();
      sub_1C106AFC0();
      if (qword_1ED75BEB0 != -1)
        swift_once();
      v92 = qword_1ED78D700;
      sub_1C07767B4();
      sub_1C106AF3C();
      sub_1C07767AC();
      sub_1C08FFE64();
      sub_1C077F0F8();
      v119 = *(void (**)(uint64_t, uint64_t))(v118 + 8);
      v119(v100, v103);
      v117 = *(void (**)(uint64_t, uint64_t))(v116 + 8);
      v117(v123, v124);
      v115 = *(void (**)(uint64_t, uint64_t))(v114 + 8);
      v115(v120, v122);
      swift_bridgeObjectRelease();
      *v88 = v92;
      v88[1] = v100;
      sub_1C079FD58();
      sub_1C077F0F8();
      swift_bridgeObjectRelease();
      *v90 = v92;
      v90[1] = v100;
      if ((a2 & 1) == 0)
      {
        sub_1C079FD58();
        sub_1C077F0F8();
        swift_bridgeObjectRelease();
        *v91 = v92;
        v91[1] = v100;
        sub_1C106AC54();
        sub_1C106AFC0();
        v92 = qword_1ED78D700;
        sub_1C07767B4();
        sub_1C106AF3C();
        sub_1C07767AC();
        sub_1C08FFE64();
        sub_1C077F0F8();
        v119(v100, v103);
        v117(v123, v124);
        v115(v120, v122);
        swift_bridgeObjectRelease();
        *v130 = v92;
        v130[1] = v100;
      }
      sub_1C078C8B0(v104, type metadata accessor for BMAppleMusicEventStructs.DateRelationshipType, (uint64_t)&v134);
      sub_1C07B2D8C(v92, 0, 1, (uint64_t)v128);
      sub_1C0F296F4();
      sub_1C0F29780();
      a3 = v94;
      sub_1C0898860(v127, (void (*)(_QWORD))type metadata accessor for BMAppleMusicEventStructs.SongRelationshipType);
      sub_1C077589C();
      sub_1C0898860(v104, (void (*)(_QWORD))type metadata accessor for BMAppleMusicEventStructs.DateRelationshipType);
      sub_1C0898860(v126, (void (*)(_QWORD))type metadata accessor for BMAppleMusicEventStructs.QuantityRelationshipType);
      sub_1C0898860(v125, (void (*)(_QWORD))type metadata accessor for BMAppleMusicEventStructs.IdentifierRelationshipType);
      sub_1C0898860(v131, (void (*)(_QWORD))type metadata accessor for BMAppleMusicEventStructs.Song);
      sub_1C0898860(v133, (void (*)(_QWORD))type metadata accessor for BMAppleMusicEventStructs.Event);
    }
  }
  else
  {
    sub_1C0898824();
    sub_1C0775810();
    *v54 = 0;
    swift_willThrow();
  }
  return a3;
}

uint64_t sub_1C0895A5C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unsigned __int8 v5;

  sub_1C08BA730();
  if (v5)
    v1 = 0;
  else
    v1 = v4;
  v2 = type metadata accessor for BMAppleMusicEventDeltaSourceIngestor(0);
  return sub_1C08962E8(v1, v5, *(unsigned __int8 *)(v0 + *(int *)(v2 + 24)));
}

uint64_t sub_1C0895AC0(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  double v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  _BOOL4 v19;
  uint8_t *v20;
  uint64_t v21;
  id *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  _QWORD v29[5];
  int v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  double v42;

  v41 = a3;
  type metadata accessor for BMAppleMusicEventSourceIngestor(0);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v6);
  v29[1] = (char *)v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v29[2] = (char *)v29 - v9;
  v10 = sub_1C0780678();
  v39 = v10;
  *(_QWORD *)(v10 + 16) = 0;
  v33 = v10 + 16;
  v11 = sub_1C0780678();
  v38 = v11;
  *(_QWORD *)(v11 + 16) = 0;
  v12 = v11 + 16;
  v13 = sub_1C0780678();
  v37 = v13;
  *(_QWORD *)(v13 + 16) = 0;
  v32 = v13 + 16;
  v29[3] = a1;
  v30 = a2;
  if ((a2 & 1) != 0)
    v14 = 0.0;
  else
    v14 = *(double *)&a1;
  v35 = sub_1C0780678();
  *(_QWORD *)(v35 + 16) = 0;
  v15 = swift_allocObject();
  v36 = v15;
  *(_BYTE *)(v15 + 16) = 0;
  v29[4] = v15 + 16;
  if (qword_1ED761458 != -1)
    swift_once();
  v16 = sub_1C106F544();
  v31 = sub_1C079E000(v16, (uint64_t)qword_1ED78D818);
  v17 = sub_1C106F538();
  v18 = sub_1C10703A8();
  v19 = os_log_type_enabled(v17, v18);
  v34 = v12;
  if (v19)
  {
    v20 = (uint8_t *)sub_1C0775854();
    *(_DWORD *)v20 = 134217984;
    v42 = v14;
    sub_1C10705AC();
    _os_log_impl(&dword_1C0771000, v17, v18, "Ingesting now playing using time stamp: %f", v20, 0xCu);
    sub_1C0776778();
  }

  v21 = sub_1C0780678();
  *(_QWORD *)(v21 + 16) = 0;
  v22 = (id *)(v21 + 16);
  v23 = type metadata accessor for PhaseStores();
  MEMORY[0x1E0C80A78](v23);
  *(double *)&v29[-10] = v14;
  v29[-9] = v24;
  v29[-8] = v21;
  v25 = v35;
  v29[-7] = v39;
  v29[-6] = v25;
  v29[-5] = v37;
  LOBYTE(v29[-4]) = v41;
  v26 = v36;
  v29[-3] = v38;
  v29[-2] = v26;
  swift_retain();
  GraphStore.tripleInsertingTransaction(transactionBody:)();
  if (v3)
  {
    sub_1C07814FC();
    swift_release();
    sub_1C077FA84();
    sub_1C07785A8();
  }
  else
  {
    sub_1C07785A8();
    sub_1C0775864();
    if (!*v22)
      __asm { BR              X10 }
    v27 = *v22;
    swift_willThrow();
    sub_1C07797A4();
    sub_1C07797A4();
    sub_1C07814FC();
  }
  sub_1C0896FDC(v40, v41);
  sub_1C07797A4();
  sub_1C07797A4();
  return sub_1C07797A4();
}

uint64_t sub_1C08962E8(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  double v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  _BOOL4 v20;
  uint8_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  id v30;
  _QWORD v32[6];
  int v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  double v46;

  v45 = a3;
  v5 = type metadata accessor for BMAppleMusicEventDeltaSourceIngestor(0);
  MEMORY[0x1E0C80A78](v5);
  v32[2] = (char *)v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v32[5] = (char *)v32 - v8;
  v9 = swift_allocObject();
  v43 = v9;
  *(_QWORD *)(v9 + 16) = 0;
  v37 = v9 + 16;
  v10 = swift_allocObject();
  v42 = v10;
  *(_QWORD *)(v10 + 16) = 0;
  v11 = v10 + 16;
  v12 = swift_allocObject();
  v41 = v12;
  *(_QWORD *)(v12 + 16) = 0;
  v13 = v12 + 16;
  v32[3] = a1;
  v33 = a2;
  if ((a2 & 1) != 0)
    v14 = 0.0;
  else
    v14 = *(double *)&a1;
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = 0;
  v35 = v15 + 16;
  v16 = swift_allocObject();
  v40 = v16;
  *(_BYTE *)(v16 + 16) = 0;
  v32[4] = v16 + 16;
  if (qword_1ED761458 != -1)
    swift_once();
  v17 = sub_1C106F544();
  v34 = sub_1C079E000(v17, (uint64_t)qword_1ED78D818);
  v18 = sub_1C106F538();
  v19 = sub_1C10703A8();
  v20 = os_log_type_enabled(v18, v19);
  v38 = v11;
  v36 = v13;
  if (v20)
  {
    v21 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v21 = 134217984;
    v46 = v14;
    sub_1C10705AC();
    _os_log_impl(&dword_1C0771000, v18, v19, "Ingesting now playing using time stamp: %f", v21, 0xCu);
    MEMORY[0x1C3BA8270](v21, -1, -1);
  }

  v22 = swift_allocObject();
  *(_QWORD *)(v22 + 16) = 0;
  v23 = v44;
  v24 = type metadata accessor for PhaseStores();
  v25 = *(int *)(v24 + 24);
  MEMORY[0x1E0C80A78](v24);
  *(double *)&v32[-10] = v14;
  v32[-9] = v23;
  v32[-8] = v22;
  v32[-7] = v43;
  v32[-6] = v15;
  v32[-5] = v41;
  LOBYTE(v32[-4]) = v45;
  v26 = v15;
  v27 = v40;
  v32[-3] = v42;
  v32[-2] = v27;
  swift_retain();
  v28 = v39;
  GraphStore.tripleInsertingTransaction(transactionBody:)();
  if (v28)
  {
    swift_release();
    swift_release();
    swift_release();
    swift_release();
  }
  else
  {
    v32[1] = v25;
    v39 = v22;
    swift_release();
    swift_beginAccess();
    v29 = *(void **)(v22 + 16);
    if (!v29)
    {
      v32[0] = v26;
      __asm { BR              X10 }
    }
    v30 = v29;
    swift_willThrow();
    swift_release();
    swift_release();
    swift_release();
  }
  sub_1C0897328(v44, v45);
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_1C0896CD8()
{
  uint64_t v0;

  sub_1C0895A5C();
  return sub_1C0787A78(*(uint64_t (**)(void))(v0 + 8));
}

void sub_1C0896D1C(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_1C07E05C8(v1, a1, (uint64_t (*)(_QWORD))type metadata accessor for Source);
}

void sub_1C0896D40(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  sub_1C07E05C8(v2 + *(int *)(a1 + 20), a2, (uint64_t (*)(_QWORD))type metadata accessor for PhaseStores);
}

uint64_t sub_1C0896D6C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = type metadata accessor for BMAppleMusicEventSourceIngestor(0);
  return sub_1C0895AC0(0, 1, *(unsigned __int8 *)(v0 + *(int *)(v1 + 24)));
}

uint64_t sub_1C0896DA8()
{
  uint64_t v0;

  sub_1C0896D6C();
  return sub_1C0787A78(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1C0896DE8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a1 + 28);
  v5 = sub_1C0776744();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, v4, v5);
}

void sub_1C0896E24(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  sub_1C07E05C8(v2 + *(int *)(a1 + 20), a2, (uint64_t (*)(_QWORD))type metadata accessor for Source);
}

void sub_1C0896E4C(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_1C07E05C8(v1, a1, (uint64_t (*)(_QWORD))type metadata accessor for PhaseStores);
}

void sub_1C0896E74(uint64_t a1)
{
  uint64_t v2;

  sub_1C0794BAC(&qword_1ED751130, type metadata accessor for BMAppleMusicEventSourceIngestor, (uint64_t)&unk_1C107E630);
  *(_QWORD *)(a1 + 8) = v2;
}

void sub_1C0896EB0(uint64_t a1)
{
  uint64_t v2;

  sub_1C0794BAC(&qword_1ED751148, type metadata accessor for BMAppleMusicEventSourceIngestor, (uint64_t)&unk_1C107E658);
  *(_QWORD *)(a1 + 8) = v2;
}

void sub_1C0896EEC(uint64_t a1)
{
  uint64_t v2;

  sub_1C0794BAC(&qword_1ED751140, type metadata accessor for BMAppleMusicEventSourceIngestor, (uint64_t)&unk_1C107E674);
  *(_QWORD *)(a1 + 8) = v2;
}

void sub_1C0896F28(uint64_t a1)
{
  uint64_t v2;

  sub_1C0794BAC(&qword_1ED75CA18, type metadata accessor for BMAppleMusicEventDeltaSourceIngestor, (uint64_t)&unk_1C107E6AC);
  *(_QWORD *)(a1 + 8) = v2;
}

void sub_1C0896F64(uint64_t a1)
{
  uint64_t v2;

  sub_1C0794BAC(&qword_1ED75CA38, type metadata accessor for BMAppleMusicEventDeltaSourceIngestor, (uint64_t)&unk_1C107E6D4);
  *(_QWORD *)(a1 + 8) = v2;
}

void sub_1C0896FA0(uint64_t a1)
{
  uint64_t v2;

  sub_1C0794BAC(&qword_1ED75CA30, type metadata accessor for BMAppleMusicEventDeltaSourceIngestor, (uint64_t)&unk_1C107E6F0);
  *(_QWORD *)(a1 + 8) = v2;
}

void sub_1C0896FDC(uint64_t a1, char a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;

  v4 = type metadata accessor for Pipeline.StatusStore();
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v7 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C07E05C8(a1, (uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for Configuration);
  v6[*(int *)(v4 + 20)] = a2;
  Pipeline.StatusStore.currentSessionId()();
  sub_1C0898860((uint64_t)v6, (void (*)(_QWORD))type metadata accessor for Pipeline.StatusStore);
  __asm { BR              X10 }
}

uint64_t sub_1C08970D4()
{
  _QWORD *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t inited;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  swift_bridgeObjectRelease();
  sub_1C106F244();
  sub_1C07ACF80((uint64_t *)&unk_1ED7614C0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C10795A0;
  *(_QWORD *)(inited + 32) = 0x496E6F6973736573;
  *(_QWORD *)(inited + 40) = 0xE900000000000064;
  v4 = sub_1C106FAF0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(inited + 48) = v4;
  *(_QWORD *)(inited + 56) = 0x614E656372756F73;
  *(_QWORD *)(inited + 64) = v2;
  v5 = sub_1C106FAF0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(inited + 72) = v5;
  *(_QWORD *)(inited + 80) = 0x756F436E656B6174;
  *(_QWORD *)(inited + 88) = v2 + 3841;
  swift_beginAccess();
  *(_QWORD *)(inited + 96) = sub_1C1070294();
  strcpy((char *)(inited + 104), "droppedCount");
  *(_BYTE *)(inited + 117) = 0;
  *(_WORD *)(inited + 118) = -5120;
  swift_beginAccess();
  v6 = *v1;
  swift_beginAccess();
  if (__OFSUB__(v6, *v0))
  {
    __break(1u);
    JUMPOUT(0x1C0897318);
  }
  *(_QWORD *)(inited + 120) = sub_1C1070294();
  sub_1C077CA90();
  sub_1C106F97C();
  sub_1C106F22C();
  return swift_bridgeObjectRelease();
}

void sub_1C0897328(uint64_t a1, char a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;

  v4 = type metadata accessor for Pipeline.StatusStore();
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for BMAppleMusicEventDeltaSourceIngestor(0);
  sub_1C07E05C8(a1 + *(int *)(v7 + 20), (uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for Configuration);
  v6[*(int *)(v4 + 20)] = a2;
  Pipeline.StatusStore.currentSessionId()();
  sub_1C0898860((uint64_t)v6, (void (*)(_QWORD))type metadata accessor for Pipeline.StatusStore);
  __asm { BR              X10 }
}

uint64_t sub_1C089742C()
{
  _QWORD *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t inited;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  swift_bridgeObjectRelease();
  sub_1C106F244();
  sub_1C07ACF80((uint64_t *)&unk_1ED7614C0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C10795A0;
  *(_QWORD *)(inited + 32) = 0x496E6F6973736573;
  *(_QWORD *)(inited + 40) = 0xE900000000000064;
  v4 = sub_1C106FAF0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(inited + 48) = v4;
  *(_QWORD *)(inited + 56) = 0x614E656372756F73;
  *(_QWORD *)(inited + 64) = v2;
  v5 = sub_1C106FAF0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(inited + 72) = v5;
  *(_QWORD *)(inited + 80) = 0x756F436E656B6174;
  *(_QWORD *)(inited + 88) = v2 + 3841;
  swift_beginAccess();
  *(_QWORD *)(inited + 96) = sub_1C1070294();
  strcpy((char *)(inited + 104), "droppedCount");
  *(_BYTE *)(inited + 117) = 0;
  *(_WORD *)(inited + 118) = -5120;
  swift_beginAccess();
  v6 = *v1;
  swift_beginAccess();
  if (__OFSUB__(v6, *v0))
  {
    __break(1u);
    JUMPOUT(0x1C0897670);
  }
  *(_QWORD *)(inited + 120) = sub_1C1070294();
  sub_1C077CA90();
  sub_1C106F97C();
  sub_1C106F22C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C0897680@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, int a8@<W7>, _BYTE *a9@<X8>, uint64_t a10, uint64_t a11)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  uint64_t v27;
  void *v28;
  char *v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  void *v42;
  uint64_t v43;
  id v44;
  const void *v45;
  id v46;
  uint64_t result;
  unint64_t v48;
  void *v49;
  id v50;
  id v51;
  id v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  int v60;
  uint64_t v61;
  _BYTE *v62;
  uint64_t v63;
  uint64_t aBlock;
  uint64_t v65;
  uint64_t (*v66)(uint64_t, void *);
  void *v67;
  uint64_t (*v68)(_QWORD);
  uint64_t v69;

  v63 = a5;
  v60 = a8;
  v58 = a2;
  v59 = a7;
  v56 = a1;
  v57 = a6;
  v62 = a9;
  v54 = a4;
  v55 = a10;
  v53 = a11;
  v12 = type metadata accessor for BMAppleMusicEventSourceIngestor(0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(_QWORD *)(v13 + 64);
  MEMORY[0x1E0C80A78](v12);
  v15 = sub_1C07ACF80((uint64_t *)&unk_1ED762690);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v48 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v48 - v19;
  v61 = a11 + 16;
  sub_1C106AC54();
  v21 = sub_1C106ADE0();
  sub_1C07B2D8C((uint64_t)v20, 0, 1, v21);
  sub_1C07B2D8C((uint64_t)v17, 1, 1, v21);
  v22 = objc_allocWithZone(MEMORY[0x1E0D026F0]);
  v23 = sub_1C07DC9F8((uint64_t)v20, (uint64_t)v17, 0, 0, 0);
  v52 = v23;
  v24 = objc_msgSend((id)BiomeLibrary(), sel_Media);
  swift_unknownObjectRelease();
  v25 = objc_msgSend(v24, sel_NowPlaying);
  swift_unknownObjectRelease();
  v26 = objc_msgSend(v25, sel_publisherWithOptions_, v23);
  v51 = v26;

  v68 = (uint64_t (*)(_QWORD))sub_1C0897F68;
  v69 = 0;
  aBlock = MEMORY[0x1E0C809B0];
  v27 = MEMORY[0x1E0C809B0];
  v65 = 1107296256;
  v66 = sub_1C0808508;
  v67 = &unk_1E7A11848;
  v28 = _Block_copy(&aBlock);
  v50 = objc_msgSend(v26, sel_filterWithIsIncluded_, v28);
  _Block_release(v28);
  v68 = nullsub_1;
  v69 = 0;
  aBlock = v27;
  v65 = 1107296256;
  v66 = (uint64_t (*)(uint64_t, void *))sub_1C07BF90C;
  v67 = &unk_1E7A11870;
  v49 = _Block_copy(&aBlock);
  v29 = (char *)&v48 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C07E05C8(a3, (uint64_t)v29, type metadata accessor for BMAppleMusicEventSourceIngestor);
  v30 = (*(unsigned __int8 *)(v13 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v31 = (v14 + v30 + 7) & 0xFFFFFFFFFFFFFFF8;
  v32 = (v31 + 15) & 0xFFFFFFFFFFFFFFF8;
  v33 = (v32 + 15) & 0xFFFFFFFFFFFFFFF8;
  v48 = (v33 + 15) & 0xFFFFFFFFFFFFFFF8;
  v34 = (v33 + 31) & 0xFFFFFFFFFFFFFFF8;
  v35 = (v34 + 23) & 0xFFFFFFFFFFFFFFF8;
  v36 = swift_allocObject();
  sub_1C07E05F4((uint64_t)v29, v36 + v30, type metadata accessor for BMAppleMusicEventSourceIngestor);
  v37 = v53;
  *(_QWORD *)(v36 + v31) = v54;
  *(_QWORD *)(v36 + v32) = v63;
  v38 = v58;
  *(_QWORD *)(v36 + v33) = v57;
  v39 = v36 + v48;
  *(_QWORD *)v39 = v59;
  *(_BYTE *)(v39 + 8) = v60;
  v40 = (_QWORD *)(v36 + v34);
  v41 = v55;
  *v40 = v56;
  v40[1] = v38;
  *(_QWORD *)(v36 + v35) = v41;
  *(_QWORD *)(v36 + ((v35 + 15) & 0xFFFFFFFFFFFFFFF8)) = v37;
  v68 = sub_1C0898A2C;
  v69 = v36;
  aBlock = MEMORY[0x1E0C809B0];
  v65 = 1107296256;
  v66 = sub_1C0808508;
  v67 = &unk_1E7A118C0;
  v42 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  v43 = v37;
  swift_retain();
  swift_release();
  v44 = v50;
  v45 = v49;
  v46 = objc_msgSend(v50, sel_sinkWithCompletion_shouldContinue_, v49, v42);

  _Block_release(v42);
  _Block_release(v45);

  result = swift_beginAccess();
  *v62 = *(_BYTE *)(v43 + 16);
  return result;
}

uint64_t sub_1C0897AF4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, int a8@<W7>, _BYTE *a9@<X8>, uint64_t a10, uint64_t a11)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  uint64_t v27;
  void *v28;
  char *v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  void *v42;
  uint64_t v43;
  id v44;
  const void *v45;
  id v46;
  uint64_t result;
  unint64_t v48;
  void *v49;
  id v50;
  id v51;
  id v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  int v60;
  uint64_t v61;
  _BYTE *v62;
  uint64_t v63;
  uint64_t aBlock;
  uint64_t v65;
  uint64_t (*v66)(uint64_t, void *);
  void *v67;
  uint64_t (*v68)(_QWORD);
  uint64_t v69;

  v63 = a5;
  v60 = a8;
  v58 = a2;
  v59 = a7;
  v56 = a1;
  v57 = a6;
  v62 = a9;
  v54 = a4;
  v55 = a10;
  v53 = a11;
  v12 = type metadata accessor for BMAppleMusicEventDeltaSourceIngestor(0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(_QWORD *)(v13 + 64);
  MEMORY[0x1E0C80A78](v12);
  v15 = sub_1C07ACF80((uint64_t *)&unk_1ED762690);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v48 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v48 - v19;
  v61 = a11 + 16;
  sub_1C106AC54();
  v21 = sub_1C106ADE0();
  sub_1C07B2D8C((uint64_t)v20, 0, 1, v21);
  sub_1C07B2D8C((uint64_t)v17, 1, 1, v21);
  v22 = objc_allocWithZone(MEMORY[0x1E0D026F0]);
  v23 = sub_1C07DC9F8((uint64_t)v20, (uint64_t)v17, 0, 0, 0);
  v52 = v23;
  v24 = objc_msgSend((id)BiomeLibrary(), sel_Media);
  swift_unknownObjectRelease();
  v25 = objc_msgSend(v24, sel_NowPlaying);
  swift_unknownObjectRelease();
  v26 = objc_msgSend(v25, sel_publisherWithOptions_, v23);
  v51 = v26;

  v68 = (uint64_t (*)(_QWORD))sub_1C0897F68;
  v69 = 0;
  aBlock = MEMORY[0x1E0C809B0];
  v27 = MEMORY[0x1E0C809B0];
  v65 = 1107296256;
  v66 = sub_1C0808508;
  v67 = &unk_1E7A118E8;
  v28 = _Block_copy(&aBlock);
  v50 = objc_msgSend(v26, sel_filterWithIsIncluded_, v28);
  _Block_release(v28);
  v68 = nullsub_1;
  v69 = 0;
  aBlock = v27;
  v65 = 1107296256;
  v66 = (uint64_t (*)(uint64_t, void *))sub_1C07BF90C;
  v67 = &unk_1E7A11910;
  v49 = _Block_copy(&aBlock);
  v29 = (char *)&v48 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C07E05C8(a3, (uint64_t)v29, type metadata accessor for BMAppleMusicEventDeltaSourceIngestor);
  v30 = (*(unsigned __int8 *)(v13 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v31 = (v14 + v30 + 7) & 0xFFFFFFFFFFFFFFF8;
  v32 = (v31 + 15) & 0xFFFFFFFFFFFFFFF8;
  v33 = (v32 + 15) & 0xFFFFFFFFFFFFFFF8;
  v48 = (v33 + 15) & 0xFFFFFFFFFFFFFFF8;
  v34 = (v33 + 31) & 0xFFFFFFFFFFFFFFF8;
  v35 = (v34 + 23) & 0xFFFFFFFFFFFFFFF8;
  v36 = swift_allocObject();
  sub_1C07E05F4((uint64_t)v29, v36 + v30, type metadata accessor for BMAppleMusicEventDeltaSourceIngestor);
  v37 = v53;
  *(_QWORD *)(v36 + v31) = v54;
  *(_QWORD *)(v36 + v32) = v63;
  v38 = v58;
  *(_QWORD *)(v36 + v33) = v57;
  v39 = v36 + v48;
  *(_QWORD *)v39 = v59;
  *(_BYTE *)(v39 + 8) = v60;
  v40 = (_QWORD *)(v36 + v34);
  v41 = v55;
  *v40 = v56;
  v40[1] = v38;
  *(_QWORD *)(v36 + v35) = v41;
  *(_QWORD *)(v36 + ((v35 + 15) & 0xFFFFFFFFFFFFFFF8)) = v37;
  v68 = sub_1C0898BE8;
  v69 = v36;
  aBlock = MEMORY[0x1E0C809B0];
  v65 = 1107296256;
  v66 = sub_1C0808508;
  v67 = &unk_1E7A11960;
  v42 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  v43 = v37;
  swift_retain();
  swift_release();
  v44 = v50;
  v45 = v49;
  v46 = objc_msgSend(v50, sel_sinkWithCompletion_shouldContinue_, v49, v42);

  _Block_release(v42);
  _Block_release(v45);

  result = swift_beginAccess();
  *v62 = *(_BYTE *)(v43 + 16);
  return result;
}

uint64_t sub_1C0897F68(void *a1)
{
  id v1;
  void *v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  char v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v16;
  char v17;

  v1 = objc_msgSend(a1, sel_eventBody);
  if (!v1)
    goto LABEL_25;
  v2 = v1;
  v3 = sub_1C0877010(v1);
  if (v4)
  {
    v5 = v4;
  }
  else
  {
    v3 = 0;
    v5 = 0xE000000000000000;
  }
  if (v3 == 0x6C7070612E6D6F63 && v5 == 0xEF636973754D2E65)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    v7 = sub_1C1070CB4();
    swift_bridgeObjectRelease();
    if ((v7 & 1) == 0)
      goto LABEL_24;
  }
  v8 = sub_1C0898890(v2, (SEL *)&selRef_iTunesSubscriptionIdentifier);
  if (!v9)
    goto LABEL_24;
  v10 = v8;
  v11 = v9;
  swift_bridgeObjectRelease();
  v12 = HIBYTE(v11) & 0xF;
  if ((v11 & 0x2000000000000000) == 0)
    v12 = v10 & 0xFFFFFFFFFFFFLL;
  if (!v12)
    goto LABEL_24;
  v13 = sub_1C0898890(v2, (SEL *)&selRef_title);
  if (v14)
  {
    if (v13 == 0xE2676E6964616F4CLL && v14 == 0xAA0000000000A680)
    {
      swift_bridgeObjectRelease();
LABEL_24:

LABEL_25:
      v17 = 0;
      return v17 & 1;
    }
    v16 = sub_1C1070CB4();
    swift_bridgeObjectRelease();

    v17 = v16 ^ 1;
  }
  else
  {

    v17 = 1;
  }
  return v17 & 1;
}

uint64_t sub_1C0898108(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unsigned int a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t (*a12)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  char v19;

  v14 = a3 + 16;
  v15 = a4 + 16;
  v16 = a5 + 16;
  v17 = a6 + 16;
  v18 = (void *)MEMORY[0x1C3BA79F4]();
  v19 = a12(a2, v14, a1, v15, v16, v17, a7, a8, a9, a10 + 16, a11 + 16);
  objc_autoreleasePoolPop(v18);
  return v19 & 1;
}

uint64_t sub_1C08981CC(uint64_t a1, void **a2, void *a3, _QWORD *a4, void **a5, _QWORD *a6, unsigned __int8 a7, void (*a8)(uint64_t), uint64_t a9, _QWORD *a10, _BYTE *a11)
{
  void *v11;
  void *v18;
  void *v19;
  void *v20;
  id v21;
  void *v22;
  uint64_t result;
  void *v24;
  id v25;
  uint64_t v26;
  void *v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  id v34;
  void *v35;
  unsigned __int8 v38[24];

  sub_1C0CCBD44();
  v18 = v11;
  if (v11)
  {
    swift_beginAccess();
    v19 = *a2;
    *a2 = v11;

    v18 = 0;
  }
  swift_beginAccess();
  v20 = *a2;
  if (*a2)
    return v20 == 0;
  v21 = objc_msgSend(a3, sel_eventBody);
  if (!v21)
    return v20 == 0;
  v22 = v21;
  result = swift_beginAccess();
  if (__OFADD__(*a4, 1))
  {
    __break(1u);
  }
  else
  {
    ++*a4;
    swift_beginAccess();
    v24 = *a5;
    if (!*a5)
    {
      swift_beginAccess();
      v27 = *a5;
      *a5 = v22;
      v28 = v22;

      goto LABEL_11;
    }
    v35 = v22;
    swift_beginAccess();
    v25 = v24;
    objc_msgSend(a3, sel_timestamp);
    v38[0] = a7;
    sub_1C0894F00(v26, 0, (uint64_t)v38);
    if (v18)
    {

      v38[0] = 1;
      static Transformers.reportError(error:context:config:pipelineType:)((uint64_t)v18, 0xD000000000000011, 0x80000001C10E71E0, a1, v38);

      swift_beginAccess();
      *a11 = 1;
LABEL_11:
      objc_msgSend(a3, sel_timestamp, v35);
      v32 = v31;

      swift_beginAccess();
      *a6 = v32;
      return v20 == 0;
    }
    sub_1C0A56D74();
    v30 = v29;
    swift_bridgeObjectRelease();
    a8(v30);
    swift_bridgeObjectRelease();

    swift_beginAccess();
    v33 = *a5;
    *a5 = v22;
    v34 = v22;

    result = swift_beginAccess();
    if (!__OFADD__(*a10, 1))
    {
      ++*a10;
      goto LABEL_11;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1C08984B4(uint64_t a1, void **a2, void *a3, _QWORD *a4, void **a5, _QWORD *a6, unsigned __int8 a7, void (*a8)(uint64_t), uint64_t a9, _QWORD *a10, _BYTE *a11)
{
  void *v11;
  void *v18;
  void *v19;
  void *v20;
  id v21;
  void *v22;
  uint64_t result;
  void *v24;
  id v25;
  uint64_t v26;
  void *v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  id v35;
  void *v36;
  unsigned __int8 v39[24];

  sub_1C0CCBDF8();
  v18 = v11;
  if (v11)
  {
    swift_beginAccess();
    v19 = *a2;
    *a2 = v11;

    v18 = 0;
  }
  swift_beginAccess();
  v20 = *a2;
  if (*a2)
    return v20 == 0;
  v21 = objc_msgSend(a3, sel_eventBody);
  if (!v21)
    return v20 == 0;
  v22 = v21;
  result = swift_beginAccess();
  if (__OFADD__(*a4, 1))
  {
    __break(1u);
  }
  else
  {
    ++*a4;
    swift_beginAccess();
    v24 = *a5;
    if (!*a5)
    {
      swift_beginAccess();
      v27 = *a5;
      *a5 = v22;
      v28 = v22;

      goto LABEL_11;
    }
    v36 = v22;
    swift_beginAccess();
    v25 = v24;
    objc_msgSend(a3, sel_timestamp);
    v39[0] = a7;
    sub_1C0894F00(v26, 0, (uint64_t)v39);
    if (v18)
    {

      v31 = a1 + *(int *)(type metadata accessor for BMAppleMusicEventDeltaSourceIngestor(0) + 20);
      v39[0] = 1;
      static Transformers.reportError(error:context:config:pipelineType:)((uint64_t)v18, 0xD000000000000011, 0x80000001C10E71E0, v31, v39);

      swift_beginAccess();
      *a11 = 1;
LABEL_11:
      objc_msgSend(a3, sel_timestamp, v36);
      v33 = v32;

      swift_beginAccess();
      *a6 = v33;
      return v20 == 0;
    }
    sub_1C0A56D74();
    v30 = v29;
    swift_bridgeObjectRelease();
    a8(v30);
    swift_bridgeObjectRelease();

    swift_beginAccess();
    v34 = *a5;
    *a5 = v22;
    v35 = v22;

    result = swift_beginAccess();
    if (!__OFADD__(*a10, 1))
    {
      ++*a10;
      goto LABEL_11;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1C08987A8()
{
  return sub_1C078F06C();
}

uint64_t sub_1C08987B4()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_1C08987D8()
{
  return sub_1C078F06C();
}

uint64_t sub_1C08987E4()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_1C0898808(uint64_t a1, uint64_t a2)
{
  return sub_1C0898A5C(a1, a2, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, double, _QWORD, _QWORD))sub_1C0897680);
}

unint64_t sub_1C0898824()
{
  unint64_t result;

  result = qword_1EF633520;
  if (!qword_1EF633520)
  {
    result = MEMORY[0x1C3BA8174](&protocol conformance descriptor for TransformingError, &type metadata for TransformingError);
    atomic_store(result, &qword_1EF633520);
  }
  return result;
}

void sub_1C0898860(uint64_t a1, void (*a2)(_QWORD))
{
  void (*v3)(uint64_t);

  a2(0);
  sub_1C0792DA8();
  v3(a1);
  sub_1C0778534();
}

uint64_t sub_1C0898890(void *a1, SEL *a2)
{
  uint64_t v2;
  id v3;
  void *v4;

  v3 = objc_msgSend(a1, *a2);
  if (!v3)
    return 0;
  v4 = v3;
  sub_1C106FB14();
  sub_1C077F0F8();

  return v2;
}

uint64_t sub_1C08988E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t);

  type metadata accessor for BMAppleMusicEventSourceIngestor(0);
  sub_1C07A23D8();
  sub_1C079E334();
  sub_1C07A5C34();
  v3 = v0 + v2;
  sub_1C106AB28();
  sub_1C0792DA8();
  v4(v3);
  type metadata accessor for PhaseStores();
  sub_1C07961E0();
  sub_1C07961E0();
  sub_1C07961E0();
  sub_1C07961E0();
  sub_1C07961E0();
  sub_1C07961E0();
  sub_1C07961E0();
  v5 = v3 + *(int *)(v1 + 20);
  swift_bridgeObjectRelease();
  v6 = v5 + *(int *)(type metadata accessor for Source() + 24);
  v7 = sub_1C0776744();
  v8 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8);
  v8(v6, v7);
  v8(v3 + *(int *)(v1 + 28), v7);
  swift_release();
  swift_release();
  swift_release();
  sub_1C078D3DC();
  swift_release();
  sub_1C078D3DC();
  sub_1C078D3DC();
  return sub_1C07A37C4();
}

uint64_t sub_1C0898A2C(uint64_t a1)
{
  return sub_1C0898BFC(a1, type metadata accessor for BMAppleMusicEventSourceIngestor, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t))sub_1C08981CC);
}

uint64_t sub_1C0898A40(uint64_t a1, uint64_t a2)
{
  return sub_1C0898A5C(a1, a2, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, double, _QWORD, _QWORD))sub_1C0897AF4);
}

uint64_t sub_1C0898A5C(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, double, _QWORD, _QWORD))
{
  uint64_t v3;

  return a3(a1, a2, *(_QWORD *)(v3 + 24), *(_QWORD *)(v3 + 32), *(_QWORD *)(v3 + 40), *(_QWORD *)(v3 + 48), *(_QWORD *)(v3 + 56), *(unsigned __int8 *)(v3 + 64), *(double *)(v3 + 16), *(_QWORD *)(v3 + 72), *(_QWORD *)(v3 + 80));
}

uint64_t sub_1C0898A98()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t);
  uint64_t v7;
  void (*v8)(uint64_t);

  type metadata accessor for BMAppleMusicEventDeltaSourceIngestor(0);
  sub_1C07A23D8();
  sub_1C079E334();
  sub_1C07A5C34();
  v3 = v0 + v2;
  swift_bridgeObjectRelease();
  v4 = v3 + *(int *)(type metadata accessor for Source() + 24);
  v5 = sub_1C0776744();
  v6 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8);
  v6(v4, v5);
  v7 = v3 + *(int *)(v1 + 20);
  sub_1C106AB28();
  sub_1C0792DA8();
  v8(v7);
  type metadata accessor for PhaseStores();
  sub_1C079A89C();
  sub_1C079A89C();
  sub_1C079A89C();
  sub_1C079A89C();
  sub_1C079A89C();
  sub_1C079A89C();
  sub_1C079A89C();
  v6(v3 + *(int *)(v1 + 28), v5);
  swift_release();
  swift_release();
  swift_release();
  sub_1C078D3DC();
  swift_release();
  sub_1C078D3DC();
  sub_1C078D3DC();
  return sub_1C07A37C4();
}

uint64_t sub_1C0898BE8(uint64_t a1)
{
  return sub_1C0898BFC(a1, type metadata accessor for BMAppleMusicEventDeltaSourceIngestor, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t))sub_1C08984B4);
}

uint64_t sub_1C0898BFC(uint64_t a1, uint64_t (*a2)(_QWORD), uint64_t (*a3)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v3;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;

  v6 = *(_QWORD *)(a2(0) - 8);
  v7 = (*(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v8 = (*(_QWORD *)(v6 + 64) + v7 + 7) & 0xFFFFFFFFFFFFFFF8;
  v9 = (v8 + 15) & 0xFFFFFFFFFFFFFFF8;
  v10 = (v9 + 15) & 0xFFFFFFFFFFFFFFF8;
  v11 = (v10 + 31) & 0xFFFFFFFFFFFFFFF8;
  return sub_1C0898108(a1, v3 + v7, *(_QWORD *)(v3 + v8), *(_QWORD *)(v3 + v9), *(_QWORD *)(v3 + v10), *(_QWORD *)(v3 + ((v10 + 15) & 0xFFFFFFFFFFFFFFF8)), *(unsigned __int8 *)(v3 + ((v10 + 15) & 0xFFFFFFFFFFFFFFF8) + 8), *(_QWORD *)(v3 + v11), *(_QWORD *)(v3 + v11 + 8), *(_QWORD *)(v3 + ((v11 + 23) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v3 + ((((v11 + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFF8)), a3) & 1;
}

uint64_t sub_1C0898CF8()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for BMAppleMusicMonitor()
{
  return objc_opt_self();
}

void sub_1C0898D28(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _BYTE v4[16];
  uint64_t v5;

  v5 = sub_1C1070234();
  v2 = *(_QWORD *)(a1 + 16);
  if (v2)
  {
    v3 = a1 + 40;
    do
    {
      sub_1C077584C();
      sub_1C077FAB0((uint64_t)v4);
      sub_1C07AD0B0();
      v3 += 16;
      --v2;
    }
    while (v2);
    sub_1C07767AC();
  }
  else
  {
    sub_1C07767AC();
  }
  sub_1C079B3E0();
}

void sub_1C0898DB0()
{
  sub_1C089A1B8();
}

void sub_1C0898DD4()
{
  sub_1C089A1B8();
}

#error "1C0898E54: call analysis failed (funcsize=42)"

void sub_1C0898EA4(uint64_t a1)
{
  uint64_t *v2;
  uint64_t v3;

  sub_1C1070234();
  if (*(_QWORD *)(a1 + 16))
  {
    while (1)
    {
      sub_1C08A60D0();
      sub_1C07AF3F4(v2, v3);
    }
  }
  sub_1C07767AC();
  sub_1C0776784();
}

void sub_1C0898F1C()
{
  sub_1C089A1B8();
}

void sub_1C0898F40()
{
  sub_1C0898F4C();
}

void sub_1C0898F4C()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(_QWORD *__return_ptr, uint64_t);
  void (*v3)(_QWORD *__return_ptr, uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(uint64_t);
  uint64_t v27;
  _QWORD v28[4];
  uint64_t v29;

  sub_1C0779670();
  v3 = v2;
  v5 = v4;
  v6 = sub_1C106D6FC();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  sub_1C078D30C();
  MEMORY[0x1E0C80A78](v8);
  sub_1C077D048();
  MEMORY[0x1E0C80A78](v9);
  sub_1C07AF224();
  sub_1C0794BAC((unint64_t *)&qword_1ED747AA0, v10, MEMORY[0x1E0D3C198]);
  sub_1C1070234();
  v3(v28, v5);
  v11 = v28[0];
  v27 = v28[1];
  v12 = v28[3];
  v13 = v29;
  v14 = (unint64_t)(v28[2] + 64) >> 6;
  if (!v29)
    goto LABEL_3;
LABEL_2:
  sub_1C07ABFB8();
  v16 = v15 | (v12 << 6);
  while (1)
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v1, *(_QWORD *)(v11 + 48) + *(_QWORD *)(v7 + 72) * v16, v6);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32))(v0, v1, v6);
    sub_1C0A7D710();
    v25 = sub_1C07AB6F8();
    v26(v25);
    if (v13)
      goto LABEL_2;
LABEL_3:
    if (__OFADD__(v12, 1))
      break;
    if (v12 + 1 >= v14)
      goto LABEL_20;
    sub_1C077F104();
    if (!v18)
    {
      if (v17 + 1 >= v14)
        goto LABEL_20;
      if (!*(_QWORD *)(v27 + 8 * (v17 + 1)))
      {
        if (v17 + 2 >= v14)
          goto LABEL_20;
        if (!*(_QWORD *)(v27 + 8 * (v17 + 2)))
        {
          if (v17 + 3 >= v14)
            goto LABEL_20;
          if (!*(_QWORD *)(v27 + 8 * (v17 + 3)))
          {
            if (v17 + 4 >= v14)
              goto LABEL_20;
            if (!*(_QWORD *)(v27 + 8 * (v17 + 4)))
            {
              v19 = v12 + 6;
              while (v19 < v14)
              {
                if (*(_QWORD *)(v27 + 8 * v19++))
                  goto LABEL_17;
              }
LABEL_20:
              swift_release();
              sub_1C0776760();
              return;
            }
          }
        }
      }
    }
LABEL_17:
    sub_1C078A328();
    v13 = v22 & v21;
    v16 = v24 + (v23 << 6);
    v12 = v23;
  }
  __break(1u);
}

void sub_1C0899138(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, __int16 a10, char a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21)
{
  sub_1C0899230(a1, (uint64_t)sub_1C07F3934, (uint64_t)&unk_1E7A0E3A8, (uint64_t)sub_1C0A7D800, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
    a20,
    a21);
}

void sub_1C0899154()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  char v6;

  sub_1C07768C4();
  sub_1C08A5B0C();
  sub_1C08A6350();
  v1 = *(_QWORD *)(v0 + 16);
  if (v1)
  {
    v2 = (char *)(v0 + 40);
    do
    {
      v3 = *((_QWORD *)v2 - 1);
      v4 = *v2;
      v2 += 16;
      sub_1C084BCD4(v3, v4);
      sub_1C0A7DA68();
      sub_1C084BAF8(v5, v6);
      --v1;
    }
    while (v1);
  }
  sub_1C07767AC();
  sub_1C079B3E0();
}

void sub_1C08991F0()
{
  sub_1C089A1B8();
}

void sub_1C0899214(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, __int16 a10, char a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21)
{
  sub_1C0899230(a1, (uint64_t)sub_1C08A5B84, (uint64_t)&unk_1E7A205A0, (uint64_t)sub_1C0A7E1B4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
    a20,
    a21);
}

void sub_1C0899230(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, __int16 a10, char a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21)
{
  uint64_t v21;
  uint64_t v22;
  void (*v23)(char *, _QWORD);
  void (*v24)(char *, _QWORD);
  uint64_t v25;
  uint64_t v26;
  void (*v27)(void);
  uint64_t v28;
  uint64_t i;
  uint64_t v30;

  sub_1C079FC8C();
  a20 = v21;
  a21 = v22;
  v24 = v23;
  v26 = v25;
  v27();
  a13 = sub_1C1070234();
  v28 = *(_QWORD *)(v26 + 16);
  if (v28)
  {
    for (i = 0; i != v28; ++i)
    {
      v30 = v26 + i;
      v24(&a12, *(unsigned __int8 *)(v30 + 32));
    }
  }
  sub_1C07767AC();
  sub_1C07892A4();
}

_QWORD *sub_1C08992B8(uint64_t a1)
{
  return sub_1C089A800(a1, (_QWORD *(*)(_QWORD *__return_ptr, uint64_t))sub_1C0861BD0);
}

void sub_1C08992C4(uint64_t a1)
{
  uint64_t v2;
  uint64_t i;
  uint64_t v4;
  int v5;
  uint64_t v6;

  v6 = sub_1C1070234();
  v2 = *(_QWORD *)(a1 + 16);
  if (v2)
  {
    for (i = 0; i != v2; ++i)
    {
      v4 = *(unsigned int *)(a1 + 4 * i + 32);
      sub_1C0A7E448(&v5, v4);
    }
    sub_1C07767AC();
  }
  else
  {
    sub_1C07767AC();
  }
  sub_1C0776784();
}

void sub_1C0899344()
{
  sub_1C089A0AC();
}

void sub_1C0899368()
{
  sub_1C089A1B8();
}

_QWORD *sub_1C089938C()
{
  _QWORD *result;
  uint64_t v1;
  uint64_t v2;
  int64_t v3;
  unint64_t v4;
  int64_t v5;
  unint64_t v6;
  unint64_t v7;
  int64_t v8;
  unint64_t v9;
  int64_t v10;
  int64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD v17[4];
  unint64_t v18;

  v16 = sub_1C1070234();
  result = sub_1C0861BD0(v17);
  v1 = v17[0];
  v2 = v17[1];
  v3 = v17[3];
  v4 = v18;
  v5 = (unint64_t)(v17[2] + 64) >> 6;
  if (!v18)
    goto LABEL_3;
LABEL_2:
  v6 = __clz(__rbit64(v4));
  v4 &= v4 - 1;
  v7 = v6 | (v3 << 6);
  while (1)
  {
    v12 = (uint64_t *)(*(_QWORD *)(v1 + 56) + 16 * v7);
    v13 = *v12;
    v14 = v12[1];
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    sub_1C0A7D28C((uint64_t)&v15, v13, v14);
    result = (_QWORD *)swift_bridgeObjectRelease();
    if (v4)
      goto LABEL_2;
LABEL_3:
    v8 = v3 + 1;
    if (__OFADD__(v3, 1))
      break;
    if (v8 >= v5)
      goto LABEL_21;
    v9 = *(_QWORD *)(v2 + 8 * v8);
    v10 = v3 + 1;
    if (!v9)
    {
      v10 = v3 + 2;
      if (v3 + 2 >= v5)
        goto LABEL_21;
      v9 = *(_QWORD *)(v2 + 8 * v10);
      if (!v9)
      {
        v10 = v3 + 3;
        if (v3 + 3 >= v5)
          goto LABEL_21;
        v9 = *(_QWORD *)(v2 + 8 * v10);
        if (!v9)
        {
          v10 = v3 + 4;
          if (v3 + 4 >= v5)
            goto LABEL_21;
          v9 = *(_QWORD *)(v2 + 8 * v10);
          if (!v9)
          {
            v10 = v3 + 5;
            if (v3 + 5 >= v5)
              goto LABEL_21;
            v9 = *(_QWORD *)(v2 + 8 * v10);
            if (!v9)
            {
              v11 = v3 + 6;
              while (v11 < v5)
              {
                v9 = *(_QWORD *)(v2 + 8 * v11++);
                if (v9)
                {
                  v10 = v11 - 1;
                  goto LABEL_18;
                }
              }
LABEL_21:
              swift_release();
              return (_QWORD *)v16;
            }
          }
        }
      }
    }
LABEL_18:
    v4 = (v9 - 1) & v9;
    v7 = __clz(__rbit64(v9)) + (v10 << 6);
    v3 = v10;
  }
  __break(1u);
  return result;
}

void sub_1C0899508()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t);
  uint64_t v15;
  _QWORD v16[2];

  sub_1C0779670();
  v2 = sub_1C08A6388();
  v3 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870];
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  sub_1C0780698();
  MEMORY[0x1E0C80A78](v5);
  sub_1C07AF224();
  sub_1C07ACF80((uint64_t *)&unk_1ED762690);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0794BAC(&qword_1EF6331E8, v3, MEMORY[0x1E0CB08A8]);
  v9 = sub_1C08A6380();
  v16[0] = v0;
  v16[1] = v9;
  v10 = *(_QWORD *)(v0 + 16);
  if (v10)
  {
    sub_1C0779D28();
    v12 = v16[0] + v11;
    v13 = *(_QWORD *)(v4 + 72);
    v14 = *(void (**)(uint64_t))(v4 + 16);
    while (1)
    {
      v15 = sub_1C0787A98();
      v14(v15);
      sub_1C0791AE8((uint64_t)v8, 0);
      if (sub_1C07B2D80((uint64_t)v8, 1, v2) == 1)
        break;
      sub_1C078A72C(v1, (uint64_t)v8, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 32));
      sub_1C0A7EBFC();
      sub_1C08A61B4(*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
      v12 += v13;
      if (!--v10)
        goto LABEL_5;
    }
  }
  else
  {
LABEL_5:
    sub_1C0791AE8((uint64_t)v8, 1);
  }
  swift_bridgeObjectRelease();
  sub_1C0776760();
}

void sub_1C0899660()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD v6[4];

  sub_1C07768C4();
  sub_1C08A5CE0();
  v6[3] = sub_1C08A6350();
  v1 = *(_QWORD *)(v0 + 16);
  if (v1)
  {
    v2 = (uint64_t *)(v0 + 48);
    do
    {
      v3 = *(v2 - 2);
      v4 = *(v2 - 1);
      v5 = *v2;
      v2 += 3;
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      sub_1C0A7ED00((uint64_t)v6, v3, v4, v5);
      sub_1C07AD0B0();
      --v1;
    }
    while (v1);
    sub_1C07767AC();
  }
  else
  {
    sub_1C07767AC();
  }
  sub_1C07A08DC();
}

void sub_1C08996F8()
{
  sub_1C089A1B8();
}

void sub_1C089971C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9)
{
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  _QWORD *v15;
  void *v16;

  sub_1C079FC8C();
  v10 = v9;
  v11 = v9 >> 62;
  if (v9 >> 62)
  {
    sub_1C07767B4();
    sub_1C10709B4();
    sub_1C07767AC();
  }
  sub_1C08A5CAC(0, (unint64_t *)&qword_1ED7447C0);
  sub_1C08A5C70(&qword_1EF633240, (unint64_t *)&qword_1ED7447C0);
  sub_1C1070234();
  if (v11)
  {
    sub_1C07767B4();
    v12 = sub_1C10709B4();
    sub_1C07767AC();
    if (v12)
      goto LABEL_5;
LABEL_11:
    sub_1C07767AC();
    sub_1C07892A4();
    return;
  }
  v12 = *(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v12)
    goto LABEL_11;
LABEL_5:
  if (v12 >= 1)
  {
    while (1)
    {
      if ((v10 & 0xC000000000000001) != 0)
      {
        v13 = sub_1C07AB6F8();
        MEMORY[0x1C3BA70DC](v13);
      }
      else
      {
        v14 = *(id *)(v10 + 32);
      }
      sub_1C08A60D0();
      sub_1C0A7F1E8(v15, v16);

    }
  }
  __break(1u);
}

void sub_1C0899854()
{
  sub_1C089A1B8();
}

void sub_1C0899878()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t);
  _QWORD *v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  int *v17;
  unint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t v27;
  char v29;
  uint64_t v30;
  BOOL v31;
  uint64_t v32;
  char v34;
  uint64_t v35;
  uint64_t v36;
  BOOL v37;
  char v38;
  int isUniquelyReferenced_nonNull_native;
  _QWORD *v40;
  uint64_t v41;
  int *v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  BOOL v48;
  uint64_t v49;
  uint64_t v50;
  char v52;
  uint64_t v53;
  uint64_t v54;
  BOOL v55;
  uint64_t v56;
  char v58;
  uint64_t v59;
  uint64_t v60;
  BOOL v61;
  uint64_t v62;
  uint64_t v63;
  BOOL v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  unint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  unint64_t v78;
  uint64_t v79;
  int *v80;
  uint64_t v81;
  uint64_t v82;
  _QWORD *v83;
  uint64_t v84;
  uint64_t v85;

  sub_1C0779670();
  v3 = v2;
  v4 = type metadata accessor for OntologyTriple();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  sub_1C0780698();
  MEMORY[0x1E0C80A78](v6);
  sub_1C0790738();
  MEMORY[0x1E0C80A78](v7);
  v75 = (uint64_t)&v66 - v8;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v9);
  v78 = (unint64_t)&v66 - v10;
  sub_1C0794BAC(&qword_1EF633200, v11, (uint64_t)&unk_1C10AF418);
  v80 = (int *)v4;
  v12 = (_QWORD *)sub_1C08A6380();
  v70 = *(_QWORD *)(v3 + 16);
  if (!v70)
  {
LABEL_77:
    sub_1C077960C();
    sub_1C0776760();
    return;
  }
  v13 = 0;
  sub_1C0779D28();
  v69 = v3 + v14;
  v68 = v3;
  v67 = v5;
  v66 = v1;
  while (v13 < *(_QWORD *)(v3 + 16))
  {
    v15 = *(_QWORD *)(v5 + 72);
    v71 = v13;
    v79 = v15;
    v16 = v78;
    sub_1C077B048(v69 + v15 * v13, v78);
    sub_1C07A23F8();
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    sub_1C0778624();
    sub_1C079B4B8();
    sub_1C0775834();
    v17 = v80;
    v18 = v16 + v80[5];
    sub_1C0779688();
    sub_1C0794BAC(&qword_1ED75EA28, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3CC50], MEMORY[0x1E0D3CC68]);
    v1 = v19;
    v76 = v18;
    sub_1C106FA0C();
    v20 = (_QWORD *)(v16 + v17[6]);
    sub_1C0778624();
    sub_1C079B4B8();
    sub_1C0775834();
    v74 = v16 + v17[7];
    v72 = v1;
    sub_1C106FA0C();
    v73 = v16 + v17[8];
    sub_1C0778624();
    sub_1C079B4B8();
    sub_1C0775834();
    sub_1C07AC0A0();
    sub_1C07ABA40();
    sub_1C08A6240();
    if ((v22 & 1) != 0)
    {
      v77 = ~v21;
      do
      {
        v1 = (uint64_t)v12;
        sub_1C077B048(v12[6] + v16 * v79, v0);
        sub_1C07B1CE0();
        v25 = v25 && v23 == v24;
        if (!v25 && (sub_1C07785B0() & 1) == 0)
          goto LABEL_35;
        sub_1C0794BAC(&qword_1ED75E7E0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3CC50], MEMORY[0x1E0D3CC80]);
        v27 = v26;
        sub_1C07B7178();
        sub_1C07B7178();
        if (v84 == v81 && v85 == v82)
        {
          sub_1C0782990();
        }
        else
        {
          v29 = sub_1C07785B0();
          sub_1C077960C();
          sub_1C0775894();
          if ((v29 & 1) == 0)
            goto LABEL_35;
        }
        v31 = sub_1C08A61E0() == *v20 && v30 == v20[1];
        if (!v31 && (sub_1C07785B0() & 1) == 0)
          goto LABEL_35;
        sub_1C08A61F4();
        sub_1C07B7178();
        v32 = v74;
        sub_1C07B7178();
        sub_1C07804A4();
        if (v25 && v32 == v27)
        {
          sub_1C0782990();
        }
        else
        {
          v34 = sub_1C07785B0();
          sub_1C077960C();
          sub_1C0775834();
          if ((v34 & 1) == 0)
            goto LABEL_35;
        }
        sub_1C07B1CE0();
        v37 = v25 && v35 == v36;
        if (v37 || (sub_1C07785B0() & 1) != 0)
        {
          sub_1C08A6010(v0);
          v12 = (_QWORD *)v1;
          goto LABEL_76;
        }
LABEL_35:
        sub_1C08A6010(v0);
        sub_1C07B6490();
        v12 = (_QWORD *)v1;
      }
      while ((v38 & 1) != 0);
    }
    swift_bridgeObjectRelease();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    sub_1C077B048(v78, v75);
    v83 = v12;
    if (v12[3] <= v12[2])
    {
      v1 = v66;
      if (isUniquelyReferenced_nonNull_native)
        sub_1C0A82B38();
      else
        sub_1C0A8B5E4();
      v16 = v72;
      v40 = v83;
      sub_1C07A23F8();
      v41 = v75;
      sub_1C077AE90();
      sub_1C07888B4();
      sub_1C077960C();
      v42 = v80;
      v76 = v41 + v80[5];
      sub_1C08A5FF0();
      v74 = v41 + v42[6];
      sub_1C0778624();
      sub_1C079B4B8();
      sub_1C0775834();
      v73 = v41 + v42[7];
      sub_1C08A5FF0();
      v72 = v41 + v42[8];
      sub_1C0778624();
      sub_1C079B4B8();
      sub_1C0775834();
      sub_1C07AC0A0();
      sub_1C07ABA40();
      v77 = (uint64_t)v40;
      v43 = v40 + 7;
      if (((*(_QWORD *)((char *)v40 + ((v16 >> 3) & 0xFFFFFFFFFFFFF8) + 56) >> v16) & 1) == 0)
        goto LABEL_74;
      while (2)
      {
        v44 = sub_1C07B6A7C();
        sub_1C077B048(v44, v45);
        sub_1C07B1CE0();
        v48 = v25 && v46 == v47;
        if (v48 || (sub_1C07785B0() & 1) != 0)
        {
          sub_1C0794BAC(&qword_1ED75E7E0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3CC50], MEMORY[0x1E0D3CC80]);
          v50 = v49;
          sub_1C07B7178();
          sub_1C07B7178();
          if (v84 == v81 && v85 == v82)
          {
            sub_1C0782990();
          }
          else
          {
            v52 = sub_1C07785B0();
            sub_1C077960C();
            sub_1C0775894();
            if ((v52 & 1) == 0)
              goto LABEL_73;
          }
          sub_1C07B1CE0();
          v55 = v25 && v53 == v54;
          if (v55 || (sub_1C07785B0() & 1) != 0)
          {
            sub_1C08A6208();
            sub_1C07B7178();
            v56 = v73;
            sub_1C07B7178();
            sub_1C07804A4();
            if (v25 && v56 == v50)
            {
              sub_1C0782990();
            }
            else
            {
              v58 = sub_1C07785B0();
              sub_1C077960C();
              sub_1C0775834();
              if ((v58 & 1) == 0)
                goto LABEL_73;
            }
            sub_1C07B1CE0();
            v61 = v25 && v59 == v60;
            if (v61 || (sub_1C07785B0() & 1) != 0)
              goto LABEL_80;
          }
        }
LABEL_73:
        sub_1C08A6010(v1);
        sub_1C07AC344();
        if (((*(_QWORD *)((char *)v43 + v62) >> v16) & 1) == 0)
          goto LABEL_74;
        continue;
      }
    }
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      sub_1C0A887D4();
LABEL_74:
    v12 = v83;
    sub_1C08A612C((uint64_t)v83 + ((v16 >> 3) & 0xFFFFFFFFFFFFFF8));
    sub_1C07E05F4(v75, v12[6] + v16 * v79, (uint64_t (*)(_QWORD))type metadata accessor for OntologyTriple);
    v63 = v12[2];
    v64 = __OFADD__(v63, 1);
    v65 = v63 + 1;
    if (v64)
      goto LABEL_79;
    v12[2] = v65;
LABEL_76:
    swift_bridgeObjectRelease();
    v13 = v71 + 1;
    sub_1C08A6010(v78);
    v3 = v68;
    v5 = v67;
    if (v13 == v70)
      goto LABEL_77;
  }
  __break(1u);
LABEL_79:
  __break(1u);
LABEL_80:
  sub_1C08A5D1C(v1, (uint64_t (*)(_QWORD))type metadata accessor for OntologyTriple);
  sub_1C1070D38();
  __break(1u);
}

void sub_1C0899F30()
{
  sub_1C089A0AC();
}

uint64_t sub_1C0899F54(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD v10[2];
  uint64_t v11;

  v4 = sub_1C1070234();
  v11 = v4;
  v5 = (void *)MEMORY[0x1C3BA79F4]();
  v10[0] = a1;
  v10[1] = a2;
  sub_1C07B1280();
  v6 = sub_1C10705D0();
  objc_autoreleasePoolPop(v5);
  sub_1C0778580();
  v7 = *(_QWORD *)(v6 + 16);
  if (v7)
  {
    v8 = v6 + 40;
    do
    {
      sub_1C077584C();
      sub_1C077FAB0((uint64_t)v10);
      swift_bridgeObjectRelease();
      v8 += 16;
      --v7;
    }
    while (v7);
    sub_1C07767AC();
    return v11;
  }
  else
  {
    sub_1C07767AC();
  }
  return v4;
}

void sub_1C089A040()
{
  sub_1C089A0AC();
}

void sub_1C089A064()
{
  sub_1C089A0AC();
}

void sub_1C089A088()
{
  sub_1C089A0AC();
}

void sub_1C089A0AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(_QWORD);
  uint64_t (*v6)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  unint64_t *v12;
  uint64_t (*v13)(uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD v18[2];

  sub_1C0779670();
  v4 = v3;
  v6 = v5;
  sub_1C077E6F4(v7, v5);
  sub_1C077591C();
  MEMORY[0x1E0C80A78](v8);
  sub_1C07768A8();
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)v18 - v10;
  v12 = (unint64_t *)sub_1C08A5F84();
  sub_1C0794BAC(v12, v13, v4);
  v18[1] = sub_1C1070234();
  v14 = *(_QWORD *)(v0 + 16);
  if (v14)
  {
    sub_1C0779D28();
    v16 = v0 + v15;
    v17 = *(_QWORD *)(v2 + 72);
    do
    {
      sub_1C07E05C8(v16, v1, v6);
      sub_1C07A9BE4();
      sub_1C08A5D1C((uint64_t)v11, v6);
      v16 += v17;
      --v14;
    }
    while (v14);
  }
  sub_1C07767AC();
  sub_1C0776760();
}

void sub_1C089A194()
{
  sub_1C089A1B8();
}

void sub_1C089A1B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t *v6;
  uint64_t (*v7)(uint64_t);
  uint64_t (*v8)(uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(uint64_t, uint64_t, uint64_t);
  _QWORD v20[2];

  sub_1C0779670();
  v4 = v3;
  v6 = v5;
  v8 = v7;
  v10 = sub_1C077E6F4(v9, v7);
  sub_1C077591C();
  MEMORY[0x1E0C80A78](v11);
  sub_1C07768A8();
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)v20 - v13;
  sub_1C0794BAC(v6, v8, v4);
  v20[1] = sub_1C1070234();
  v15 = *(_QWORD *)(v0 + 16);
  if (v15)
  {
    sub_1C0779D28();
    v20[0] = v0;
    v17 = v0 + v16;
    v18 = *(_QWORD *)(v2 + 72);
    v19 = *(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16);
    do
    {
      v19(v1, v17, v10);
      sub_1C07A9BE4();
      (*(void (**)(char *, uint64_t))(v2 + 8))(v14, v10);
      v17 += v18;
      --v15;
    }
    while (v15);
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1C07767AC();
  }
  sub_1C0776760();
}

void sub_1C089A2B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  unint64_t v22;
  BOOL v23;
  BOOL v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  unint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  BOOL v35;
  char v36;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  unint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD *v56;

  sub_1C0779670();
  v2 = v1;
  sub_1C07ACF80(&qword_1ED7623F8);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v3);
  sub_1C07785B8();
  v4 = type metadata accessor for Source();
  v49 = *(_QWORD *)(v4 - 8);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v47 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v47 - v9;
  MEMORY[0x1E0C80A78](v11);
  v53 = (uint64_t)&v47 - v12;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v13);
  v54 = (uint64_t)&v47 - v14;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v47 - v16;
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v47 - v19;
  sub_1C0794BAC(&qword_1ED744708, (uint64_t (*)(uint64_t))type metadata accessor for Source, (uint64_t)&protocol conformance descriptor for Source);
  v55 = sub_1C1070234();
  v21 = 1;
  while (1)
  {
    while (1)
    {
      while (1)
      {
        if (qword_1ED75DF60 != -1)
          swift_once();
        if (qword_1ED78D4B0 < v21)
        {
          sub_1C0776760();
          return;
        }
        sub_1C0D2AA04(v21, v0);
        if (sub_1C07B2D80(v0, 1, v4) != 1)
          break;
        sub_1C07B1C6C(v0, &qword_1ED7623F8);
        v23 = __OFADD__(v21++, 1);
        if (v23)
          goto LABEL_50;
      }
      sub_1C08A5FD4(v0, (uint64_t)v17);
      v22 = v21 - 1;
      if (__OFSUB__(v21, 1))
      {
        __break(1u);
LABEL_50:
        __break(1u);
LABEL_51:
        __break(1u);
LABEL_52:
        __break(1u);
        goto LABEL_53;
      }
      v23 = __OFADD__(v21++, 1);
      if (v23)
        goto LABEL_51;
      v23 = __OFSUB__(v22, 64);
      v24 = v22 > 0x40;
      if (v22 >= 0x40)
        v25 = 0;
      else
        v25 = 1 << v22;
      if (v24)
        v25 = 0;
      if (!(((v25 & v2) < 0) ^ v23 | ((v25 & v2) == 0)))
        break;
      sub_1C0781B18((uint64_t)v17);
    }
    v51 = v10;
    v52 = v7;
    v47 = v2;
    sub_1C08A5FD4((uint64_t)v17, (uint64_t)v20);
    v48 = v20;
    v26 = v54;
    sub_1C08A5FD4((uint64_t)v20, v54);
    v27 = (_QWORD *)v55;
    sub_1C07A23F8();
    v28 = *(_QWORD *)(v26 + 8);
    sub_1C077C0B8();
    sub_1C07767C4();
    sub_1C08A60B8();
    sub_1C0775894();
    sub_1C07AC0A0();
    sub_1C08A62F4();
    v30 = v27 + 7;
    if (((*(_QWORD *)((char *)v27 + ((v28 >> 3) & 0xFFFFFFFFFFFFF8) + 56) >> v28) & 1) != 0)
    {
      v50 = ~v29;
      v31 = *(_QWORD *)(v49 + 72);
      while (1)
      {
        v32 = v27[6] + v31 * v28;
        v7 = v52;
        sub_1C0789B14(v32, (uint64_t)v52);
        sub_1C07B1CE0();
        v35 = v35 && v33 == v34;
        if (v35)
        {
          sub_1C0781B18((uint64_t)v7);
          swift_bridgeObjectRelease();
          goto LABEL_34;
        }
        v36 = sub_1C07785B0();
        sub_1C0781B18((uint64_t)v7);
        if ((v36 & 1) != 0)
          break;
        v28 = (v28 + 1) & v50;
        v27 = (_QWORD *)v55;
        if (((*(_QWORD *)((char *)v30 + ((v28 >> 3) & 0xFFFFFFFFFFFFF8)) >> v28) & 1) == 0)
          goto LABEL_27;
      }
      swift_bridgeObjectRelease();
      v7 = v52;
LABEL_34:
      v20 = v48;
      goto LABEL_47;
    }
LABEL_27:
    swift_bridgeObjectRelease();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    sub_1C0789B14(v54, v53);
    v56 = v27;
    if (v27[3] <= v27[2])
      break;
    v20 = v48;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_1C0A88F78();
      v27 = v56;
    }
LABEL_45:
    sub_1C08A612C((uint64_t)v27 + ((v28 >> 3) & 0xFFFFFFFFFFFFFF8));
    sub_1C08A5FD4(v53, v27[6] + *(_QWORD *)(v49 + 72) * v28);
    v45 = v27[2];
    v23 = __OFADD__(v45, 1);
    v46 = v45 + 1;
    if (v23)
      goto LABEL_52;
    v55 = (uint64_t)v27;
    v27[2] = v46;
    sub_1C077970C();
    v7 = v52;
LABEL_47:
    sub_1C0781B18(v54);
    v2 = v47;
    v10 = v51;
  }
  v20 = v48;
  if (isUniquelyReferenced_nonNull_native)
    sub_1C0A838DC();
  else
    sub_1C0A8C0D8();
  v27 = v56;
  sub_1C07A23F8();
  v28 = *(_QWORD *)(v53 + 8);
  sub_1C07767C4();
  sub_1C08A60B8();
  sub_1C0775894();
  sub_1C07AC0A0();
  sub_1C08A62F4();
  v50 = (unint64_t)(v27 + 7);
  if (((*(_QWORD *)((char *)v27 + ((v28 >> 3) & 0xFFFFFFFFFFFFF8) + 56) >> v28) & 1) == 0)
    goto LABEL_45;
  v55 = (uint64_t)v27;
  v39 = ~v38;
  v40 = *(_QWORD *)(v49 + 72);
  while (1)
  {
    v20 = v51;
    sub_1C0789B14(*(_QWORD *)(v55 + 48) + v40 * v28, (uint64_t)v51);
    sub_1C07B1CE0();
    if (v35 && v41 == v42)
      break;
    v44 = sub_1C07785B0();
    sub_1C0781B18((uint64_t)v20);
    if ((v44 & 1) != 0)
      goto LABEL_54;
    v28 = (v28 + 1) & v39;
    if (((*(_QWORD *)(v50 + ((v28 >> 3) & 0xFFFFFFFFFFFFF8)) >> v28) & 1) == 0)
    {
      v20 = v48;
      v27 = (_QWORD *)v55;
      goto LABEL_45;
    }
  }
LABEL_53:
  sub_1C08A5D1C((uint64_t)v20, (uint64_t (*)(_QWORD))type metadata accessor for Source);
LABEL_54:
  sub_1C1070D38();
  __break(1u);
}

void sub_1C089A76C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  sub_1C07768C4();
  type metadata accessor for BMDevicePlatform(0);
  sub_1C0794BAC(&qword_1EF6331D0, (uint64_t (*)(uint64_t))type metadata accessor for BMDevicePlatform, (uint64_t)&unk_1C1076198);
  sub_1C08A6380();
  if (*(_QWORD *)(v0 + 16))
  {
    while (1)
    {
      sub_1C08A60D0();
      sub_1C0A7FD9C(v1, v2);
    }
  }
  sub_1C07767AC();
  sub_1C0776784();
}

_QWORD *sub_1C089A800(uint64_t a1, _QWORD *(*a2)(_QWORD *__return_ptr, uint64_t))
{
  _QWORD *result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int64_t v8;
  int64_t v9;
  int64_t v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD v17[4];
  uint64_t v18;

  v16 = sub_1C1070234();
  result = a2(v17, a1);
  v5 = v17[1];
  v6 = v17[3];
  v7 = v18;
  v8 = (unint64_t)(v17[2] + 64) >> 6;
  if (!v18)
    goto LABEL_3;
LABEL_2:
  sub_1C077E8CC();
  while (1)
  {
    sub_1C077584C();
    sub_1C077FAB0((uint64_t)&v15);
    result = (_QWORD *)swift_bridgeObjectRelease();
    if (v7)
      goto LABEL_2;
LABEL_3:
    v9 = v6 + 1;
    if (__OFADD__(v6, 1))
      break;
    if (v9 >= v8)
      goto LABEL_20;
    if (!*(_QWORD *)(v5 + 8 * v9))
    {
      if (v6 + 2 >= v8)
        goto LABEL_20;
      if (!*(_QWORD *)(v5 + 8 * (v6 + 2)))
      {
        if (v6 + 3 >= v8)
          goto LABEL_20;
        if (!*(_QWORD *)(v5 + 8 * (v6 + 3)))
        {
          if (v6 + 4 >= v8)
            goto LABEL_20;
          if (!*(_QWORD *)(v5 + 8 * (v6 + 4)))
          {
            if (v6 + 5 >= v8)
              goto LABEL_20;
            if (!*(_QWORD *)(v5 + 8 * (v6 + 5)))
            {
              v10 = v6 + 6;
              while (v10 < v8)
              {
                if (*(_QWORD *)(v5 + 8 * v10++))
                  goto LABEL_17;
              }
LABEL_20:
              sub_1C077AF1C();
              return (_QWORD *)v16;
            }
          }
        }
      }
    }
LABEL_17:
    sub_1C078A328();
    v7 = v13 & v12;
    v6 = v14;
  }
  __break(1u);
  return result;
}

void sub_1C089A95C(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  char v3;

  if (*(_QWORD *)(a2 + 16) && (v2 = sub_1C07DCBB0(), (v3 & 1) != 0))
    sub_1C07ABBFC(v2);
  else
    sub_1C0782AF4();
  sub_1C0778534();
}

void sub_1C089A994(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v3;

  if (*(_QWORD *)(a3 + 16) && (sub_1C0797CA4(a1, a2), (v3 & 1) != 0))
    sub_1C077AE90();
  else
    sub_1C08A60E0();
  sub_1C077CEF4();
  sub_1C0778534();
}

void sub_1C089A9D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  char v6;
  char v7;

  sub_1C08A5E30();
  if (v4 && (v5 = sub_1C0797CA4(v2, v3), (v6 & 1) != 0))
  {
    sub_1C08A5C34(*(_QWORD *)(v1 + 56) + 8 * v5, v0);
    v7 = 0;
  }
  else
  {
    *(_QWORD *)v0 = 0;
    v7 = 1;
  }
  *(_BYTE *)(v0 + 8) = v7;
  sub_1C0778534();
}

void sub_1C089AA1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v3;
  char v4;

  if (*(_QWORD *)(a3 + 16))
  {
    v3 = sub_1C0797CA4(a1, a2);
    if ((v4 & 1) != 0)
      sub_1C08A5F5C(v3);
  }
  sub_1C0778534();
}

void sub_1C089AA50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v3;
  char v4;

  if (*(_QWORD *)(a3 + 16) && (v3 = sub_1C0797CA4(a1, a2), (v4 & 1) != 0))
    sub_1C07ABBFC(v3);
  else
    sub_1C0782AF4();
  sub_1C0778534();
}

void sub_1C089AA84()
{
  uint64_t v0;
  unsigned __int8 v1;
  uint64_t v2;
  __int128 v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;
  char v8;
  __int128 *v9;
  __int128 v10;

  sub_1C07BBF10();
  v3 = 0uLL;
  if (v4)
  {
    v5 = v2;
    v6 = sub_1C07DCCD4(v1);
    if ((v7 & 1) != 0)
    {
      v8 = 0;
      v9 = (__int128 *)(*(_QWORD *)(v5 + 56) + 32 * v6);
      v3 = *v9;
      v10 = v9[1];
    }
    else
    {
      v8 = 1;
      v10 = 0uLL;
      v3 = 0uLL;
    }
  }
  else
  {
    v8 = 1;
    v10 = 0uLL;
  }
  *(_OWORD *)v0 = v3;
  *(_OWORD *)(v0 + 16) = v10;
  *(_BYTE *)(v0 + 32) = v8;
  sub_1C0778534();
}

void sub_1C089AAE4(unsigned __int8 a1, uint64_t a2)
{
  unint64_t v2;
  char v3;

  if (*(_QWORD *)(a2 + 16) && (v2 = sub_1C07DCCD4(a1), (v3 & 1) != 0))
    sub_1C07ABBFC(v2);
  else
    sub_1C0782AF4();
  sub_1C0778534();
}

void sub_1C089AB18()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;

  sub_1C07BBF10();
  if (v1 && (v2 = sub_1C07DCBDC(v0), (v3 & 1) != 0))
  {
    v4 = sub_1C077E384(v2);
    sub_1C079CC10(v4, v5);
  }
  else
  {
    sub_1C08A5F3C();
    sub_1C0778534();
  }
}

void sub_1C089AB50(uint64_t a1, uint64_t a2)
{
  sub_1C089B4CC(a1, a2, (uint64_t (*)(void))sub_1C07DCDE8);
}

void sub_1C089AB5C(uint64_t a1, uint64_t a2)
{
  char v2;

  if (*(_QWORD *)(a2 + 16))
  {
    sub_1C07DCEAC();
    if ((v2 & 1) != 0)
      swift_unknownObjectRetain();
  }
  sub_1C0778534();
}

void sub_1C089ABA4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v4;

  if (*(_QWORD *)(a2 + 16))
  {
    sub_1C07DCC0C();
    if ((v4 & 1) != 0)
      sub_1C08A5BC0(*(_QWORD *)(*(_QWORD *)(a2 + 56) + 16 * v3), *(_BYTE *)(*(_QWORD *)(a2 + 56) + 16 * v3 + 8));
  }
  sub_1C0778534();
}

uint64_t sub_1C089ABFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  unint64_t v4;
  char v5;
  int v6;
  int v7;

  if (*(_QWORD *)(a3 + 16) && (v4 = sub_1C0797CA4(a1, a2), (v5 & 1) != 0))
  {
    v6 = 0;
    v7 = *(unsigned __int16 *)(*(_QWORD *)(v3 + 56) + 2 * v4);
  }
  else
  {
    v7 = 0;
    v6 = 1;
  }
  return v7 | (v6 << 16);
}

uint64_t sub_1C089AC48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C089B24C(a1, a2, a3, (uint64_t (*)(_QWORD))MEMORY[0x1E0D3CE28]);
}

void sub_1C089AC54()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  char v6;

  sub_1C08A5E30();
  if (v4 && (v5 = sub_1C0797CA4(v2, v3), (v6 & 1) != 0))
  {
    sub_1C078A8F8(*(_QWORD *)(v1 + 56) + 32 * v5, (uint64_t)v0, &qword_1ED760400);
  }
  else
  {
    *v0 = 0;
    v0[1] = 0;
    v0[2] = 0;
    v0[3] = 1;
  }
  sub_1C0778534();
}

void sub_1C089ACA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v3;

  if (*(_QWORD *)(a3 + 16))
  {
    sub_1C0797CA4(a1, a2);
    if ((v3 & 1) != 0)
      sub_1C08A6194();
  }
  sub_1C0778534();
}

void sub_1C089ACD4()
{
  _OWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  char v6;

  sub_1C08A5E30();
  if (v4 && (v5 = sub_1C0797CA4(v2, v3), (v6 & 1) != 0))
  {
    sub_1C0853A7C(*(_QWORD *)(v1 + 56) + 48 * v5, (uint64_t)v0);
  }
  else
  {
    v0[1] = 0u;
    v0[2] = 0u;
    *v0 = 0u;
    sub_1C0778534();
  }
}

void sub_1C089AD20()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;

  sub_1C08A5E30();
  if (v2 && (v3 = sub_1C0797CA4(v0, v1), (v4 & 1) != 0))
  {
    v5 = sub_1C077E384(v3);
    sub_1C079CC10(v5, v6);
  }
  else
  {
    sub_1C08A5F3C();
    sub_1C0778534();
  }
}

void sub_1C089AD54(uint64_t a1, uint64_t a2)
{
  sub_1C089AF70(a1, a2, (uint64_t (*)(void))sub_1C07DCC70);
}

void sub_1C089AD60(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  char v3;

  if (*(_QWORD *)(a2 + 16) && (v2 = sub_1C07DD074(a1), (v3 & 1) != 0))
    sub_1C07ABBFC(v2);
  else
    sub_1C0782AF4();
  sub_1C0778534();
}

void sub_1C089AD94(uint64_t a1, uint64_t a2)
{
  char v2;

  if (*(_QWORD *)(a2 + 16))
  {
    sub_1C07DD074(a1);
    if ((v2 & 1) != 0)
      sub_1C0784E94();
  }
  sub_1C0778534();
}

void sub_1C089ADC8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;

  sub_1C077B61C();
  sub_1C07BBF10();
  if (v3 && (v4 = v2, v5 = sub_1C07DCB64(v1), (v6 & 1) != 0))
  {
    v7 = *(_QWORD *)(v4 + 56) + 48 * v5;
    v8 = *(_QWORD *)v7;
    v9 = *(_QWORD *)(v7 + 8);
    v10 = *(_QWORD *)(v7 + 16);
    v11 = *(_QWORD *)(v7 + 24);
    v12 = *(_QWORD *)(v7 + 32);
    v13 = *(_BYTE *)(v7 + 40);
    sub_1C0826EB0(*(_QWORD *)v7, v9, v10, v11, v12, v13);
  }
  else
  {
    v8 = 0;
    v9 = 0;
    v10 = 0;
    v11 = 0;
    v12 = 0;
    v13 = -1;
  }
  *(_QWORD *)v0 = v8;
  *(_QWORD *)(v0 + 8) = v9;
  *(_QWORD *)(v0 + 16) = v10;
  *(_QWORD *)(v0 + 24) = v11;
  *(_QWORD *)(v0 + 32) = v12;
  *(_BYTE *)(v0 + 40) = v13;
  sub_1C077C798();
}

uint64_t sub_1C089AE5C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(_QWORD);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  sub_1C07BBF10();
  if (v3 && (sub_1C08A60C8(), (v4 & 1) != 0))
  {
    v5 = sub_1C08A5E84();
    type metadata accessor for EntityMatch(v5);
    sub_1C08A615C();
    sub_1C07E05C8(v2 + v6 * v1, v0, v7);
    v8 = sub_1C07797AC();
  }
  else
  {
    type metadata accessor for EntityMatch(0);
    v8 = sub_1C078AA74();
  }
  return sub_1C077F00C(v8, v9, v10, v11);
}

void sub_1C089AEBC(uint64_t a1, uint64_t a2)
{
  sub_1C089B4CC(a1, a2, (uint64_t (*)(void))sub_1C07DCD84);
}

uint64_t sub_1C089AEC8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  char v4;

  if (*(_QWORD *)(a2 + 16) && (sub_1C08A60C8(), (v4 & 1) != 0))
    return *(_QWORD *)(*(_QWORD *)(v2 + 56) + 16 * v3);
  else
    return 0;
}

uint64_t sub_1C089AF10(uint64_t a1, uint64_t a2)
{
  char v2;

  if (*(_QWORD *)(a2 + 16) && (sub_1C07DCF70(), (v2 & 1) != 0))
  {
    sub_1C08A61A0();
    sub_1C07796D8();
  }
  else
  {
    sub_1C08A60E0();
  }
  return sub_1C077CEF4();
}

void sub_1C089AF64(uint64_t a1, uint64_t a2)
{
  sub_1C089AF70(a1, a2, (uint64_t (*)(void))sub_1C07DCD20);
}

void sub_1C089AF70(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  char v3;

  if (*(_QWORD *)(a2 + 16) && (sub_1C08A62EC(a1, a2, a3), (v3 & 1) != 0))
    sub_1C077AE90();
  else
    sub_1C08A60E0();
  sub_1C077CEF4();
  sub_1C0778534();
}

void sub_1C089AFB0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  char v3;

  if (*(_QWORD *)(a2 + 16) && (sub_1C08A60C8(), (v3 & 1) != 0))
    sub_1C07ABBFC(v2);
  else
    sub_1C0782AF4();
  sub_1C0778534();
}

void sub_1C089AFE0(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  char v3;

  if (*(_QWORD *)(a2 + 16))
  {
    v2 = sub_1C07DCBDC(a1);
    if ((v3 & 1) != 0)
      sub_1C08A5F5C(v2);
  }
  sub_1C0778534();
}

void sub_1C089B01C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v3;

  if (*(_QWORD *)(a3 + 16))
  {
    sub_1C0797CA4(a1, a2);
    if ((v3 & 1) != 0)
      sub_1C0784E94();
  }
  sub_1C0778534();
}

void sub_1C089B04C()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;

  sub_1C07BBF10();
  if (v0 && (sub_1C07DCC70(), (v2 & 1) != 0))
  {
    v3 = sub_1C077E384(v1);
    sub_1C079CC10(v3, v4);
  }
  else
  {
    sub_1C08A5F3C();
    sub_1C0778534();
  }
}

void sub_1C089B084(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(_QWORD *)(a3 + 16))
    sub_1C0797CA4(a1, a2);
  sub_1C0778534();
}

void sub_1C089B0C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  char v5;

  if (*(_QWORD *)(a5 + 16))
  {
    sub_1C07DD1C0(a1, a2, a3, a4);
    if ((v5 & 1) != 0)
      sub_1C0784E94();
  }
  sub_1C0778534();
}

uint64_t sub_1C089B0F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  char v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  sub_1C08A5E30();
  if (v4 && (v5 = sub_1C0797CA4(v2, v3), (v6 & 1) != 0))
  {
    v7 = v5;
    v8 = *(_QWORD *)(v1 + 56);
    v9 = sub_1C07ACF80(&qword_1ED756668);
    sub_1C08A615C();
    sub_1C078A8F8(v8 + v10 * v7, v0, &qword_1ED756668);
    return sub_1C079BD5C(v0, 0, 1, v9);
  }
  else
  {
    sub_1C07ACF80(&qword_1ED756668);
    v12 = sub_1C078AA74();
    return sub_1C079BD5C(v12, v13, v14, v15);
  }
}

uint64_t sub_1C089B174(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  if (*(_QWORD *)(a5 + 16) && (sub_1C07DD1C0(a1, a2, a3, a4), (v5 & 1) != 0))
  {
    sub_1C08A5E84();
    v6 = sub_1C106EB24();
    sub_1C07B82EC(v6);
    v7 = sub_1C07797AC();
  }
  else
  {
    sub_1C106EB24();
    v7 = sub_1C078AA74();
  }
  return sub_1C077F00C(v7, v8, v9, v10);
}

void sub_1C089B1C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v3;

  if (*(_QWORD *)(a3 + 16))
  {
    sub_1C0797CA4(a1, a2);
    if ((v3 & 1) != 0)
      sub_1C0784E94();
  }
  sub_1C0778534();
}

uint64_t sub_1C089B1F4()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_1C07BBF10();
  if (v1 && (sub_1C07DD088(v0), (v2 & 1) != 0))
  {
    sub_1C08A5E84();
    v3 = sub_1C106AEA0();
    sub_1C07B82EC(v3);
    v4 = sub_1C07797AC();
  }
  else
  {
    sub_1C106AEA0();
    v4 = sub_1C078AA74();
  }
  return sub_1C077F00C(v4, v5, v6, v7);
}

uint64_t sub_1C089B240(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C089B24C(a1, a2, a3, (uint64_t (*)(_QWORD))MEMORY[0x1E0D6DCE8]);
}

uint64_t sub_1C089B24C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  sub_1C08A5E30();
  if (v9 && (v10 = sub_1C0797CA4(v7, v8), (v11 & 1) != 0))
  {
    v12 = v10;
    v13 = *(_QWORD *)(v5 + 56);
    v14 = a4(0);
    (*(void (**)(uint64_t, unint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v4, v13 + *(_QWORD *)(*(_QWORD *)(v14 - 8) + 72) * v12, v14);
    v15 = sub_1C07797AC();
  }
  else
  {
    a4(0);
    v15 = sub_1C078AA74();
  }
  return sub_1C079BD5C(v15, v16, v17, v18);
}

void sub_1C089B2C0(uint64_t a1, uint64_t a2)
{
  sub_1C089B394(a1, a2, (uint64_t (*)(void))sub_1C07DCD84);
}

void sub_1C089B2CC(uint64_t a1, uint64_t a2)
{
  char v2;

  if (*(_QWORD *)(a2 + 16) && (sub_1C07DCB64(a1), (v2 & 1) != 0))
    sub_1C077AE90();
  else
    sub_1C08A60E0();
  sub_1C077CEF4();
  sub_1C0778534();
}

void sub_1C089B310(uint64_t a1, uint64_t a2)
{
  char v2;

  if (*(_QWORD *)(a2 + 16))
  {
    sub_1C07DCB64(a1);
    if ((v2 & 1) != 0)
      sub_1C0784E94();
  }
  sub_1C0778534();
}

uint64_t sub_1C089B344()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_1C07BBF10();
  if (v0 && (sub_1C08A60C8(), (v1 & 1) != 0))
  {
    sub_1C08A5E84();
    v2 = sub_1C106E590();
    sub_1C07B82EC(v2);
    v3 = sub_1C07797AC();
  }
  else
  {
    sub_1C078784C();
    v3 = sub_1C078AA74();
  }
  return sub_1C077F00C(v3, v4, v5, v6);
}

void sub_1C089B388(uint64_t a1, uint64_t a2)
{
  sub_1C089B394(a1, a2, (uint64_t (*)(void))sub_1C07DD240);
}

void sub_1C089B394(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v3;
  char v4;

  if (*(_QWORD *)(a2 + 16) && (v3 = sub_1C08A62EC(a1, a2, a3), (v4 & 1) != 0))
    sub_1C07ABBFC(v3);
  else
    sub_1C0782AF4();
  sub_1C0778534();
}

void sub_1C089B3C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;

  sub_1C07BBF10();
  if (v1 && (v2 = sub_1C07DD088(v0), (v3 & 1) != 0))
  {
    v4 = sub_1C077E384(v2);
    sub_1C079CC10(v4, v5);
  }
  else
  {
    sub_1C08A5F3C();
    sub_1C0778534();
  }
}

void sub_1C089B3FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  char v6;

  sub_1C08A5E30();
  if (v4 && (v5 = sub_1C0797CA4(v2, v3), (v6 & 1) != 0))
  {
    sub_1C078A8F8(*(_QWORD *)(v1 + 56) + 40 * v5, v0, &qword_1ED75DF80);
  }
  else
  {
    *(_QWORD *)v0 = 0;
    *(_QWORD *)(v0 + 8) = 0;
    *(_QWORD *)(v0 + 16) = 0;
    *(_OWORD *)(v0 + 24) = xmmword_1C107E790;
  }
  sub_1C0778534();
}

void sub_1C089B454()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  char v5;

  sub_1C08A5E30();
  if (v3 && (v4 = sub_1C0797CA4(v1, v2), (v5 & 1) != 0))
  {
    sub_1C08A5F48(v4);
  }
  else
  {
    *(_QWORD *)(v0 + 32) = 0;
    sub_1C08A5F3C();
  }
  sub_1C0778534();
}

void sub_1C089B488()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;

  sub_1C07BBF10();
  if (v2 && (v3 = sub_1C07DD4D8(v1), (v4 & 1) != 0))
  {
    sub_1C08A5F48(v3);
  }
  else
  {
    *(_QWORD *)(v0 + 32) = 0;
    sub_1C08A5F3C();
  }
  sub_1C0778534();
}

void sub_1C089B4C0(uint64_t a1, uint64_t a2)
{
  sub_1C089B4CC(a1, a2, (uint64_t (*)(void))sub_1C07DD4EC);
}

void sub_1C089B4CC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  char v3;

  if (*(_QWORD *)(a2 + 16))
  {
    sub_1C08A62EC(a1, a2, a3);
    if ((v3 & 1) != 0)
      sub_1C0784E94();
  }
  sub_1C0778534();
}

void sub_1C089B4FC(uint64_t a1, uint64_t a2)
{
  char v2;

  if (*(_QWORD *)(a2 + 16))
  {
    sub_1C07DCB8C();
    if ((v2 & 1) != 0)
      sub_1C0784E94();
  }
  sub_1C0778534();
}

uint64_t sub_1C089B534(uint64_t a1, uint64_t a2)
{
  void *v2;
  char v3;
  id v4;

  if (*(_QWORD *)(a2 + 16) && (sub_1C07DD65C(a1), (v3 & 1) != 0))
  {
    sub_1C08A61A0();
    v4 = v2;
  }
  else
  {
    sub_1C08A60E0();
  }
  return sub_1C077CEF4();
}

void sub_1C089B590(double (*a1)(void)@<X0>, double *a2@<X8>)
{
  *a2 = a1();
  sub_1C0778534();
}

void sub_1C089B5B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int64_t v12;
  uint64_t v13;
  int64_t v14;
  uint64_t v15;
  void *v16;
  id v17;
  unint64_t v18;
  unint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  __int128 v25;
  __int128 v26;
  uint64_t v27;

  sub_1C07768C4();
  if (v1)
  {
    sub_1C07ACF80(&qword_1EF633168);
    v2 = sub_1C0787A88();
  }
  else
  {
    v2 = MEMORY[0x1E0DEE9E0];
  }
  v3 = v0 + 64;
  v4 = -1 << *(_BYTE *)(v0 + 32);
  if (-v4 < 64)
    v5 = ~(-1 << -(char)v4);
  else
    v5 = -1;
  v6 = v5 & *(_QWORD *)(v0 + 64);
  v7 = (unint64_t)(63 - v4) >> 6;
  v8 = v2 + 64;
  sub_1C07767B4();
  swift_retain();
  v9 = 0;
  if (!v6)
    goto LABEL_9;
LABEL_8:
  sub_1C07A9558();
  v11 = v10 | (v9 << 6);
  while (1)
  {
    v16 = *(void **)(*(_QWORD *)(v0 + 56) + 8 * v11);
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    v17 = v16;
    sub_1C077D040();
    v18 = sub_1C10706E4() & ~(-1 << *(_BYTE *)(v2 + 32));
    if (((-1 << v18) & ~*(_QWORD *)(v8 + 8 * (v18 >> 6))) == 0)
    {
      sub_1C0797B50();
      while (++v21 != v22 || (v20 & 1) == 0)
      {
        v23 = v21 == v22;
        if (v21 == v22)
          v21 = 0;
        v20 |= v23;
        if (*(_QWORD *)(v8 + 8 * v21) != -1)
        {
          sub_1C0791970();
          goto LABEL_33;
        }
      }
      __break(1u);
LABEL_37:
      __break(1u);
      goto LABEL_38;
    }
    sub_1C0792CBC();
LABEL_33:
    *(_QWORD *)(v8 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
    v24 = *(_QWORD *)(v2 + 48) + 40 * v19;
    *(_OWORD *)v24 = v25;
    *(_OWORD *)(v24 + 16) = v26;
    *(_QWORD *)(v24 + 32) = v27;
    *(_QWORD *)(*(_QWORD *)(v2 + 56) + 8 * v19) = v17;
    ++*(_QWORD *)(v2 + 16);
    if (v6)
      goto LABEL_8;
LABEL_9:
    v12 = v9 + 1;
    if (__OFADD__(v9, 1))
      goto LABEL_37;
    if (v12 >= v7)
      goto LABEL_35;
    if (!*(_QWORD *)(v3 + 8 * v12))
    {
      if (v9 + 2 >= v7)
        goto LABEL_35;
      if (!*(_QWORD *)(v3 + 8 * (v9 + 2)))
      {
        if (v9 + 3 >= v7)
          goto LABEL_35;
        if (!*(_QWORD *)(v3 + 8 * (v9 + 3)))
        {
          if (v9 + 4 >= v7)
            goto LABEL_35;
          if (!*(_QWORD *)(v3 + 8 * (v9 + 4)))
          {
            v13 = v9 + 5;
            if (v9 + 5 >= v7)
            {
LABEL_35:
              sub_1C08A6188();
              sub_1C0827370();
              sub_1C07892E0();
              return;
            }
            if (!*(_QWORD *)(v3 + 8 * v13))
              break;
          }
        }
      }
    }
LABEL_23:
    sub_1C077EB64();
    v9 = v15;
  }
  while (1)
  {
    v14 = v13 + 1;
    if (__OFADD__(v13, 1))
      break;
    if (v14 >= v7)
      goto LABEL_35;
    ++v13;
    if (*(_QWORD *)(v3 + 8 * v14))
      goto LABEL_23;
  }
LABEL_38:
  __break(1u);
}

void sub_1C089B840()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t *v7;
  unint64_t v8;
  char v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  id v24;
  unint64_t v25;
  unint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t *v31;
  _QWORD *v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  sub_1C07768C4();
  if (v1)
  {
    sub_1C07ACF80(&qword_1EF633178);
    v2 = (_QWORD *)sub_1C0787A88();
  }
  else
  {
    v2 = (_QWORD *)MEMORY[0x1E0DEE9E0];
  }
  sub_1C07A1BCC();
  v5 = v4 & v3;
  sub_1C07767B4();
  v6 = 0;
  v7 = (unint64_t *)&qword_1ED758D30;
  v8 = 0x1E0C9E918uLL;
  while (1)
  {
    while (1)
    {
      if (v5)
      {
        sub_1C07BBDA0();
      }
      else
      {
        if (__OFADD__(v6, 1))
          goto LABEL_36;
        sub_1C079CC18();
        if (v9 == v10)
        {
LABEL_33:
          sub_1C07B68C4();
          sub_1C07A5C48();
          sub_1C08A5E68();
          return;
        }
        sub_1C077F104();
        if (!v11)
        {
          sub_1C077EE58();
          if (v9 == v10)
            goto LABEL_33;
          sub_1C07AF218();
          if (!v12)
          {
            sub_1C077EE58();
            if (v9 == v10)
              goto LABEL_33;
            sub_1C07AF218();
            if (!v13)
            {
              sub_1C077EE58();
              if (v9 == v10)
                goto LABEL_33;
              sub_1C07AF218();
              if (!v14)
              {
                sub_1C079CC18();
                if (v9 == v10)
                  goto LABEL_33;
                if (!*(_QWORD *)(v38 + 8 * v15))
                {
                  while (!__OFADD__(v15, 1))
                  {
                    sub_1C077EE58();
                    if (v9 == v10)
                      goto LABEL_33;
                    sub_1C07B002C();
                    if (v16)
                      goto LABEL_27;
                  }
                  goto LABEL_37;
                }
              }
            }
          }
        }
LABEL_27:
        sub_1C08A5F68();
        v6 = v17;
      }
      sub_1C08A6254();
      v20 = *v18;
      v19 = v18[1];
      v23 = *(void **)(v22 + 8 * v21);
      sub_1C08A5CAC(0, v7);
      sub_1C07767C4();
      v24 = v23;
      sub_1C07ACF80(&qword_1EF633180);
      sub_1C077D040();
      v25 = sub_1C077F684();
      v26 = v25;
      if ((v27 & 1) == 0)
        break;
      v28 = v0;
      v29 = v6;
      v30 = v8;
      v31 = v7;
      v32 = (_QWORD *)(v2[6] + 16 * v25);
      swift_bridgeObjectRelease();
      *v32 = v20;
      v32[1] = v19;
      v33 = v2[7];

      *(_QWORD *)(v33 + 8 * v26) = v40;
      v7 = v31;
      v8 = v30;
      v6 = v29;
      v0 = v28;
      v5 = v39;
    }
    sub_1C08A5DFC();
    if (v34)
      break;
    sub_1C07BA1C4((v26 >> 3) & 0x1FFFFFFFFFFFFFF8);
    v36 = (_QWORD *)(v35 + 16 * v26);
    *v36 = v20;
    v36[1] = v19;
    *(_QWORD *)(v2[7] + 8 * v26) = v40;
    sub_1C07AEE24();
    if (v10)
      goto LABEL_35;
    v2[2] = v37;
    v5 = v39;
  }
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
LABEL_37:
  __break(1u);
}

void sub_1C089BA88(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v44;
  char v45[40];
  uint64_t v46;
  uint64_t v47;
  _BYTE v48[16];
  uint64_t v49;
  _BYTE v50[40];
  __int128 v51;
  __int128 v52[2];
  uint64_t v53;
  __int128 v54;
  _OWORD v55[2];
  uint64_t v56;

  if (a1[2])
  {
    sub_1C07ACF80(&qword_1ED7448B0);
    v1 = sub_1C0787A88();
  }
  else
  {
    v1 = MEMORY[0x1E0DEE9E0];
  }
  sub_1C07AFA30();
  v4 = v3 & v2;
  sub_1C07AE7C8();
  v41 = v5;
  v42 = v1 + 64;
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  v44 = 0;
  while (1)
  {
    while (1)
    {
      if (v4)
      {
        sub_1C0782168();
        v7 = v6 | (v44 << 6);
      }
      else
      {
        if (__OFADD__(v44, 1))
          goto LABEL_36;
        sub_1C0778720();
        if (v8 == v9)
        {
LABEL_33:
          sub_1C07A5C48();
          return;
        }
        sub_1C077F104();
        if (!v10)
        {
          sub_1C079D310();
          if (v8 == v9)
            goto LABEL_33;
          sub_1C0794404();
          if (!v11)
          {
            sub_1C079D310();
            if (v8 == v9)
              goto LABEL_33;
            sub_1C0794404();
            if (!v12)
            {
              sub_1C079D310();
              if (v8 == v9)
                goto LABEL_33;
              sub_1C0794404();
              if (!v13)
              {
                sub_1C0778720();
                if (v8 == v9)
                  goto LABEL_33;
                sub_1C08A5F30();
                if (!v15)
                {
                  while (!__OFADD__(v14, 1))
                  {
                    sub_1C079D310();
                    if (v8 == v9)
                      goto LABEL_33;
                    sub_1C07B002C();
                    if (v16)
                      goto LABEL_27;
                  }
                  goto LABEL_37;
                }
              }
            }
          }
        }
LABEL_27:
        sub_1C078A328();
        v4 = v18 & v17;
        v7 = v20 + (v19 << 6);
        v44 = v19;
      }
      v21 = (uint64_t *)(a1[6] + 16 * v7);
      v23 = *v21;
      v22 = v21[1];
      sub_1C0784AC0(a1[7] + 40 * v7, (uint64_t)v55);
      *(_QWORD *)&v54 = v23;
      *((_QWORD *)&v54 + 1) = v22;
      v51 = v54;
      v52[0] = v55[0];
      v52[1] = v55[1];
      v53 = v56;
      v46 = v23;
      v47 = v22;
      sub_1C077DD60(v52, (uint64_t)v45);
      sub_1C07796D8();
      sub_1C07ACF80(&qword_1ED756490);
      sub_1C077E1EC();
      sub_1C077D040();
      v25 = v46;
      v24 = v47;
      v26 = sub_1C0787A98();
      sub_1C078B9CC(v26, v27);
      sub_1C078B9CC((uint64_t)&v49, (uint64_t)v50);
      sub_1C078B9CC((uint64_t)v50, (uint64_t)v48);
      v28 = sub_1C077D774(v25, v24);
      if ((v29 & 1) == 0)
        break;
      sub_1C08A62C0();
      *(_QWORD *)&v54 = v25;
      *((_QWORD *)&v54 + 1) = v24;
      sub_1C078A98C((uint64_t)v48, *(_QWORD *)(v1 + 56) + 40 * v28, &qword_1ED75DF80);
    }
    sub_1C08A5DFC();
    if (v38)
      break;
    sub_1C08A5DD0(v30, v31, v32, v33, v34, v35, v36, v37, v41, v42);
    *v39 = v25;
    v39[1] = v24;
    sub_1C078B9CC((uint64_t)v48, *(_QWORD *)(v1 + 56) + 40 * v28);
    sub_1C07AEE24();
    if (v9)
      goto LABEL_35;
    *(_QWORD *)(v1 + 16) = v40;
  }
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
LABEL_37:
  __break(1u);
}

void sub_1C089BD40()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t *v6;
  uint64_t v7;
  unint64_t *v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t *v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  _OWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  char v38;
  unint64_t *v39;
  uint64_t *v40;
  _OWORD *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  uint64_t *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65[4];
  __int128 v66;
  uint64_t v67;
  __int128 v68;

  sub_1C07768C4();
  if (v1)
  {
    sub_1C07ACF80(&qword_1ED758E48);
    v3 = (_QWORD *)sub_1C0787A88();
  }
  else
  {
    v3 = (_QWORD *)MEMORY[0x1E0DEE9E0];
  }
  v58 = (uint64_t)(v0 + 8);
  sub_1C0791AB8();
  v57 = v4;
  v5 = v65;
  v6 = &v67;
  v54 = v7;
  v55 = (uint64_t)(v3 + 8);
  sub_1C07767B4();
  v59 = 0;
  v8 = (unint64_t *)&qword_1ED758D30;
  v9 = 0x1E0C9E918uLL;
  v56 = MEMORY[0x1E0DEE9B8] + 8;
  while (1)
  {
    while (1)
    {
      if (v2)
      {
        sub_1C07A9558();
        v60 = v2;
      }
      else
      {
        if (__OFADD__(v59, 1))
          goto LABEL_34;
        if (v59 + 1 >= v57)
        {
LABEL_31:
          sub_1C07A5C48();
          sub_1C08A5E3C();
          return;
        }
        sub_1C077F104();
        if (!v10)
        {
          sub_1C078D4A0();
          if (v12 == v13)
            goto LABEL_31;
          if (!*(_QWORD *)(v58 + 8 * v11))
          {
            sub_1C078D4A0();
            if (v12 == v13)
              goto LABEL_31;
            if (!*(_QWORD *)(v58 + 8 * v14))
            {
              sub_1C078D4A0();
              if (v12 == v13)
                goto LABEL_31;
              if (!*(_QWORD *)(v58 + 8 * v15))
              {
                v17 = v16 + 4;
                if (v17 >= v57)
                  goto LABEL_31;
                if (!*(_QWORD *)(v58 + 8 * v17))
                {
                  while (!__OFADD__(v17, 1))
                  {
                    sub_1C078D4A0();
                    if (v12 == v13)
                      goto LABEL_31;
                    sub_1C07B002C();
                    if (v18)
                      goto LABEL_25;
                  }
                  goto LABEL_35;
                }
              }
            }
          }
        }
LABEL_25:
        sub_1C0788BD0();
        v59 = v19;
        v60 = v20;
      }
      sub_1C08A6254();
      v23 = *(void **)(v22 + 8 * v21);
      v63 = *v24;
      v64 = v24[1];
      v62 = (uint64_t)v23;
      sub_1C08A5CAC(0, v8);
      sub_1C0778624();
      v25 = v23;
      sub_1C077D040();
      v27 = v63;
      v26 = v64;
      sub_1C07C010C(v5, v6);
      v28 = sub_1C07C010C(v6, &v68);
      sub_1C08A61D4((uint64_t)v28, v29, v30, v31, v32, v33, v34, v35, v53, v54, v55, v56, v57, v58, v59, v60, v62, v63, v64,
        v65[0],
        v65[1],
        v65[2],
        v65[3],
        v66);
      v36 = sub_1C077D774(v27, v26);
      v37 = v36;
      if ((v38 & 1) == 0)
        break;
      v6 = v5;
      v5 = v0;
      v0 = (uint64_t *)v9;
      v39 = v8;
      v40 = (uint64_t *)(v3[6] + 16 * v36);
      swift_bridgeObjectRelease();
      *v40 = v27;
      v40[1] = v26;
      v8 = v39;
      v9 = (unint64_t)v0;
      sub_1C077ECF8();
      v41 = (_OWORD *)(v3[7] + 32 * v37);
      _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v41);
      sub_1C07C010C(&v66, v41);
      v2 = v61;
    }
    sub_1C08A5DFC();
    if (v50)
      break;
    sub_1C078C1FC(v42, v43, v44, v45, v46, v47, v48, v49, v53, v54, v55);
    *v51 = v27;
    v51[1] = v26;
    sub_1C07C010C(&v66, (_OWORD *)(v3[7] + 32 * v37));
    sub_1C07AEE24();
    if (v13)
      goto LABEL_33;
    v3[2] = v52;
    v2 = v61;
  }
  __break(1u);
LABEL_33:
  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
}

void sub_1C089BFE0(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t *v6;
  uint64_t *v7;
  int64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  int64_t v14;
  uint64_t *v15;
  unint64_t v16;
  unint64_t v17;
  char v18;
  int64_t v19;
  uint64_t *v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t *v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;
  int64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _BYTE v35[16];
  uint64_t v36;
  _BYTE v37[40];

  v1 = a1;
  if (*(_QWORD *)(a1 + 16))
  {
    sub_1C07ACF80(&qword_1EF633288);
    v2 = (_QWORD *)sub_1C10709E4();
  }
  else
  {
    v2 = (_QWORD *)MEMORY[0x1E0DEE9E0];
  }
  v30 = v1 + 64;
  v3 = -1 << *(_BYTE *)(v1 + 32);
  if (-v3 < 64)
    v4 = ~(-1 << -(char)v3);
  else
    v4 = -1;
  v5 = v4 & *(_QWORD *)(v1 + 64);
  v29 = (unint64_t)(63 - v3) >> 6;
  v6 = &v34;
  v7 = &v36;
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  v8 = 0;
  v9 = MEMORY[0x1E0DEB070];
  while (1)
  {
    while (1)
    {
      if (v5)
      {
        v31 = (v5 - 1) & v5;
        v10 = __clz(__rbit64(v5)) | (v8 << 6);
      }
      else
      {
        v11 = v8 + 1;
        if (__OFADD__(v8, 1))
          goto LABEL_34;
        if (v11 >= v29)
        {
LABEL_31:
          sub_1C0827370();
          return;
        }
        v12 = *(_QWORD *)(v30 + 8 * v11);
        v13 = v8 + 1;
        if (!v12)
        {
          v13 = v8 + 2;
          if (v8 + 2 >= v29)
            goto LABEL_31;
          v12 = *(_QWORD *)(v30 + 8 * v13);
          if (!v12)
          {
            v13 = v8 + 3;
            if (v8 + 3 >= v29)
              goto LABEL_31;
            v12 = *(_QWORD *)(v30 + 8 * v13);
            if (!v12)
            {
              v13 = v8 + 4;
              if (v8 + 4 >= v29)
                goto LABEL_31;
              v12 = *(_QWORD *)(v30 + 8 * v13);
              if (!v12)
              {
                v14 = v8 + 5;
                if (v8 + 5 >= v29)
                  goto LABEL_31;
                v12 = *(_QWORD *)(v30 + 8 * v14);
                if (!v12)
                {
                  while (1)
                  {
                    v13 = v14 + 1;
                    if (__OFADD__(v14, 1))
                      goto LABEL_35;
                    if (v13 >= v29)
                      goto LABEL_31;
                    v12 = *(_QWORD *)(v30 + 8 * v13);
                    ++v14;
                    if (v12)
                      goto LABEL_25;
                  }
                }
                v13 = v8 + 5;
              }
            }
          }
        }
LABEL_25:
        v31 = (v12 - 1) & v12;
        v10 = __clz(__rbit64(v12)) + (v13 << 6);
        v8 = v13;
      }
      v15 = (uint64_t *)(*(_QWORD *)(v1 + 48) + 16 * v10);
      v32 = *v15;
      v33 = v15[1];
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      sub_1C07ACF80(&qword_1ED760400);
      swift_dynamicCast();
      sub_1C078A67C((uint64_t)v6, (uint64_t)v7, &qword_1ED760400);
      sub_1C078A67C((uint64_t)v7, (uint64_t)v37, &qword_1ED760400);
      sub_1C078A67C((uint64_t)v37, (uint64_t)v35, &qword_1ED760400);
      v16 = sub_1C077D774(v32, v33);
      v17 = v16;
      if ((v18 & 1) == 0)
        break;
      v19 = v8;
      v20 = v7;
      v21 = v6;
      v22 = v1;
      v23 = v9;
      v24 = (uint64_t *)(v2[6] + 16 * v16);
      swift_bridgeObjectRelease();
      *v24 = v32;
      v24[1] = v33;
      v9 = v23;
      v1 = v22;
      v6 = v21;
      v7 = v20;
      v8 = v19;
      sub_1C078A98C((uint64_t)v35, v2[7] + 32 * v17, &qword_1ED760400);
      v5 = v31;
    }
    if (v2[2] >= v2[3])
      break;
    *(_QWORD *)((char *)v2 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << v16;
    v25 = (uint64_t *)(v2[6] + 16 * v16);
    *v25 = v32;
    v25[1] = v33;
    sub_1C078A67C((uint64_t)v35, v2[7] + 32 * v16, &qword_1ED760400);
    v26 = v2[2];
    v27 = __OFADD__(v26, 1);
    v28 = v26 + 1;
    if (v27)
      goto LABEL_33;
    v2[2] = v28;
    v5 = v31;
  }
  __break(1u);
LABEL_33:
  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
}

void sub_1C089C33C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  _OWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  _OWORD *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  uint64_t *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  __int128 v60;
  uint64_t v61;
  uint64_t v62;
  __int128 v63;
  _OWORD v64[2];
  __int128 v65;

  sub_1C07768C4();
  if (v0)
  {
    sub_1C07ACF80(&qword_1ED758E48);
    v1 = sub_1C0787A88();
  }
  else
  {
    v1 = MEMORY[0x1E0DEE9E0];
  }
  sub_1C07A1BCC();
  v4 = v3 & v2;
  v51 = (unint64_t)(63 - v5) >> 6;
  v49 = v5;
  v50 = v1 + 64;
  sub_1C07767B4();
  v6 = 0;
  v7 = MEMORY[0x1E0DEE9B8] + 8;
  while (1)
  {
    while (1)
    {
      if (v4)
      {
        sub_1C07ABFB8();
        v54 = v4;
      }
      else
      {
        if (__OFADD__(v6, 1))
          goto LABEL_36;
        sub_1C079CC18();
        if (v8 == v9)
        {
LABEL_33:
          sub_1C07B68C4();
          sub_1C07A5C48();
          sub_1C08A5E3C();
          return;
        }
        sub_1C077F104();
        if (!v10)
        {
          sub_1C077EE58();
          if (v8 == v9)
            goto LABEL_33;
          sub_1C07AF218();
          if (!v11)
          {
            sub_1C077EE58();
            if (v8 == v9)
              goto LABEL_33;
            sub_1C07AF218();
            if (!v12)
            {
              sub_1C077EE58();
              if (v8 == v9)
                goto LABEL_33;
              sub_1C07AF218();
              if (!v13)
              {
                sub_1C079CC18();
                if (v8 == v9)
                  goto LABEL_33;
                if (!*(_QWORD *)(v52 + 8 * v14))
                {
                  while (!__OFADD__(v14, 1))
                  {
                    sub_1C077EE58();
                    if (v8 == v9)
                      goto LABEL_33;
                    sub_1C07B002C();
                    if (v15)
                      goto LABEL_27;
                  }
                  goto LABEL_37;
                }
              }
            }
          }
        }
LABEL_27:
        sub_1C0788BD0();
        v54 = v16;
        v6 = v17;
      }
      v18 = sub_1C08A6260();
      v58 = v19;
      v59 = v18;
      v56 = *v20;
      v57 = v20[1];
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      sub_1C077C0B8();
      sub_1C077D040();
      v21 = v58;
      v22 = v59;
      sub_1C07C010C(&v60, v64);
      v23 = sub_1C07C010C(v64, &v65);
      sub_1C08A61D4((uint64_t)v23, v24, v25, v26, v27, v28, v29, v30, v48, v49, v50, v51, v52, v53, v54, v56, v57, v58, v59,
        v60,
        *((uint64_t *)&v60 + 1),
        v61,
        v62,
        v63);
      v31 = sub_1C0794DB4(v21);
      if ((v32 & 1) == 0)
        break;
      v53 = v6;
      sub_1C08A61C0();
      v33 = v7;
      v35 = (uint64_t *)(v34 + 16 * v31);
      swift_bridgeObjectRelease();
      *v35 = v21;
      v35[1] = v22;
      v7 = v33;
      sub_1C077ECF8();
      v36 = (_OWORD *)(*(_QWORD *)(v1 + 56) + 32 * v31);
      _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v36);
      sub_1C07C010C(&v63, v36);
      v4 = v55;
    }
    sub_1C08A5DFC();
    if (v45)
      break;
    sub_1C078C1FC(v37, v38, v39, v40, v41, v42, v43, v44, v48, v49, v50);
    *v46 = v21;
    v46[1] = v22;
    sub_1C07C010C(&v63, (_OWORD *)(*(_QWORD *)(v1 + 56) + 32 * v31));
    sub_1C07AEE24();
    if (v9)
      goto LABEL_35;
    *(_QWORD *)(v1 + 16) = v47;
    v4 = v55;
  }
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
LABEL_37:
  __break(1u);
}

void sub_1C089C590()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  char v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _BYTE v38[16];
  _BYTE v39[40];
  _BYTE v40[48];

  sub_1C07768C4();
  if (v0)
  {
    sub_1C07ACF80(&qword_1ED7448B0);
    v2 = sub_1C0787A88();
  }
  else
  {
    v2 = MEMORY[0x1E0DEE9E0];
  }
  sub_1C07A9D8C();
  v31 = v3;
  v32 = v2 + 64;
  sub_1C07767B4();
  v33 = 0;
  v4 = (uint64_t *)MEMORY[0x1E0DEA968];
  while (1)
  {
    while (1)
    {
      if (v1)
      {
        sub_1C07BBDA0();
      }
      else
      {
        if (__OFADD__(v33, 1))
          goto LABEL_36;
        sub_1C0778720();
        if (v5 == v6)
        {
LABEL_33:
          sub_1C07A5C48();
          return;
        }
        sub_1C077F104();
        if (!v7)
        {
          sub_1C079D310();
          if (v5 == v6)
            goto LABEL_33;
          sub_1C0794404();
          if (!v8)
          {
            sub_1C079D310();
            if (v5 == v6)
              goto LABEL_33;
            sub_1C0794404();
            if (!v9)
            {
              sub_1C079D310();
              if (v5 == v6)
                goto LABEL_33;
              sub_1C0794404();
              if (!v10)
              {
                sub_1C0778720();
                if (v5 == v6)
                  goto LABEL_33;
                sub_1C08A5F30();
                if (!v12)
                {
                  while (!__OFADD__(v11, 1))
                  {
                    sub_1C079D310();
                    if (v5 == v6)
                      goto LABEL_33;
                    sub_1C07B002C();
                    if (v13)
                      goto LABEL_27;
                  }
                  goto LABEL_37;
                }
              }
            }
          }
        }
LABEL_27:
        sub_1C0788BD0();
        v33 = v14;
        v34 = v15;
      }
      v16 = sub_1C08A6260();
      v35 = v17;
      v36 = v16;
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      sub_1C0778624();
      sub_1C07ACF80(&qword_1ED75DF80);
      sub_1C077D040();
      sub_1C07AC43C((uint64_t)&v37, (uint64_t)v39);
      sub_1C07AC43C((uint64_t)v39, (uint64_t)v40);
      sub_1C07AC43C((uint64_t)v40, (uint64_t)v38);
      v18 = sub_1C0794DB4(v35);
      if ((v19 & 1) == 0)
        break;
      sub_1C08A6150();
      *v4 = v35;
      v4[1] = v36;
      sub_1C078A98C((uint64_t)v38, *(_QWORD *)(v2 + 56) + 40 * v18, &qword_1ED75DF80);
      v1 = v34;
    }
    sub_1C08A5DFC();
    if (v28)
      break;
    sub_1C07A991C(v20, v21, v22, v23, v24, v25, v26, v27, v31, v32);
    *v29 = v35;
    v29[1] = v36;
    sub_1C07AC43C((uint64_t)v38, *(_QWORD *)(v2 + 56) + 40 * v18);
    sub_1C07AEE24();
    if (v6)
      goto LABEL_35;
    *(_QWORD *)(v2 + 16) = v30;
    v1 = v34;
  }
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
LABEL_37:
  __break(1u);
}

void sub_1C089C7F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  char v20;
  _QWORD *v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;

  sub_1C07A5194();
  sub_1C07768C4();
  if (v1)
  {
    sub_1C07ACF80(&qword_1EF633230);
    v4 = sub_1C0787A88();
  }
  else
  {
    v4 = MEMORY[0x1E0DEE9E0];
  }
  sub_1C07A9D8C();
  sub_1C07767B4();
  while (v2)
  {
    sub_1C077E1F4();
LABEL_27:
    v15 = (uint64_t *)(*(_QWORD *)(v0 + 48) + 16 * v5);
    v17 = *v15;
    v16 = v15[1];
    v18 = *(_QWORD *)(*(_QWORD *)(v0 + 56) + 8 * v5);
    sub_1C0778624();
    swift_retain();
    v19 = sub_1C08A5F90();
    if ((v20 & 1) != 0)
    {
      sub_1C08A611C();
      *v3 = v17;
      v3[1] = v16;
      v21 = (_QWORD *)(*(_QWORD *)(v4 + 56) + 16 * v19);
      swift_unknownObjectRelease();
      *v21 = v18;
      v21[1] = &off_1E7A1E3A0;
    }
    else
    {
      sub_1C08A5DFC();
      if (v22)
      {
        __break(1u);
LABEL_34:
        __break(1u);
        __break(1u);
        goto LABEL_35;
      }
      sub_1C08A62A0();
      sub_1C07BA1C4(v23);
      v25 = (_QWORD *)(v24 + 16 * v19);
      *v25 = v17;
      v25[1] = v16;
      v26 = (_QWORD *)(*(_QWORD *)(v4 + 56) + 16 * v19);
      *v26 = v18;
      v26[1] = &off_1E7A1E3A0;
      sub_1C07AEE24();
      if (v7)
        goto LABEL_34;
      *(_QWORD *)(v4 + 16) = v27;
    }
  }
  sub_1C0778720();
  if (v6 == v7)
    goto LABEL_32;
  sub_1C077F104();
  if (v8)
    goto LABEL_26;
  sub_1C079D310();
  if (v6 == v7)
    goto LABEL_32;
  sub_1C0794404();
  if (v9)
    goto LABEL_26;
  sub_1C079D310();
  if (v6 == v7)
    goto LABEL_32;
  sub_1C0794404();
  if (v10)
    goto LABEL_26;
  sub_1C079D310();
  if (v6 == v7)
    goto LABEL_32;
  sub_1C0794404();
  if (v11)
    goto LABEL_26;
  sub_1C0778720();
  if (v6 == v7)
  {
LABEL_32:
    sub_1C08A6328();
    sub_1C07A5C48();
    sub_1C0781AD8();
    return;
  }
  sub_1C08A5F30();
  if (v13)
  {
LABEL_26:
    sub_1C078299C();
    goto LABEL_27;
  }
  while (!__OFADD__(v12, 1))
  {
    sub_1C079D310();
    if (v6 == v7)
      goto LABEL_32;
    sub_1C07B002C();
    if (v14)
      goto LABEL_26;
  }
LABEL_35:
  __break(1u);
}

void sub_1C089C990()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _OWORD *v25;
  _OWORD *v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  BOOL v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  int64_t v38;
  uint64_t v39;
  __int128 v40;
  __int128 v41;
  uint64_t v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  uint64_t v46;
  _OWORD v47[2];
  _OWORD v48[5];
  __int128 v49;
  _OWORD v50[2];

  sub_1C07768C4();
  if (v0)
  {
    sub_1C07ACF80(&qword_1ED755258);
    v1 = (_QWORD *)sub_1C0787A88();
  }
  else
  {
    v1 = (_QWORD *)MEMORY[0x1E0DEE9E0];
  }
  sub_1C08A6168();
  sub_1C07AF810();
  v4 = v3 & v2;
  v38 = (unint64_t)(63 - v5) >> 6;
  v6 = v1 + 8;
  sub_1C07767B4();
  swift_retain();
  v7 = 0;
  if (!v4)
    goto LABEL_6;
LABEL_5:
  v4 &= v4 - 1;
  while (1)
  {
    sub_1C08A6254();
    v22 = *v20;
    v21 = v20[1];
    sub_1C0788E98(v24 + 32 * v23, (uint64_t)v50);
    *(_QWORD *)&v49 = v22;
    *((_QWORD *)&v49 + 1) = v21;
    v48[2] = v49;
    v48[3] = v50[0];
    v48[4] = v50[1];
    *(_QWORD *)&v48[0] = v22;
    *((_QWORD *)&v48[0] + 1) = v21;
    sub_1C077AE90();
    sub_1C077D040();
    v25 = (_OWORD *)sub_1C0787A98();
    sub_1C07C010C(v25, v26);
    v44 = v40;
    v45 = v41;
    v46 = v42;
    sub_1C07C010C(&v43, v47);
    v40 = v44;
    v41 = v45;
    v42 = v46;
    sub_1C07C010C(v47, v48);
    sub_1C07C010C(v48, &v44);
    sub_1C10706E4();
    sub_1C0799804();
    if (((v29 << v28) & ~v6[v27]) == 0)
    {
      sub_1C0797B50();
      while (++v31 != v32 || (v30 & 1) == 0)
      {
        v33 = v31 == v32;
        if (v31 == v32)
          v31 = 0;
        v30 |= v33;
        if (v6[v31] != -1)
        {
          sub_1C0791970();
          goto LABEL_34;
        }
      }
      __break(1u);
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    sub_1C0792CBC();
LABEL_34:
    sub_1C0786D70();
    *(_QWORD *)((char *)v6 + v34) |= v35;
    v37 = v1[6] + 40 * v36;
    *(_OWORD *)v37 = v40;
    *(_OWORD *)(v37 + 16) = v41;
    *(_QWORD *)(v37 + 32) = v42;
    sub_1C07C010C(&v44, (_OWORD *)(v1[7] + 32 * v36));
    ++v1[2];
    if (v4)
      goto LABEL_5;
LABEL_6:
    if (__OFADD__(v7, 1))
      goto LABEL_38;
    if (v7 + 1 >= v38)
      goto LABEL_36;
    sub_1C077F104();
    if (!v8)
    {
      sub_1C08A6308();
      if (v10 == v11)
        goto LABEL_36;
      if (!*(_QWORD *)(v39 + 8 * v9))
      {
        sub_1C08A6308();
        if (v10 == v11)
          goto LABEL_36;
        if (!*(_QWORD *)(v39 + 8 * v12))
        {
          sub_1C08A6308();
          if (v10 == v11)
            goto LABEL_36;
          if (!*(_QWORD *)(v39 + 8 * v13))
          {
            v15 = v14 + 4;
            if (v15 >= v38)
            {
LABEL_36:
              sub_1C08A6188();
              sub_1C0827370();
              return;
            }
            if (!*(_QWORD *)(v39 + 8 * v15))
              break;
          }
        }
      }
    }
LABEL_24:
    sub_1C078A328();
    v4 = v18 & v17;
    v7 = v19;
  }
  while (!__OFADD__(v15, 1))
  {
    sub_1C08A6308();
    if (v10 == v11)
      goto LABEL_36;
    sub_1C07B002C();
    if (v16)
      goto LABEL_24;
  }
LABEL_39:
  __break(1u);
}

void sub_1C089CCA8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  unint64_t v19;
  char v20;
  _OWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  __int128 v38;
  __int128 v39;
  _OWORD v40[2];
  _OWORD v41[2];

  sub_1C07768C4();
  if (v1)
  {
    sub_1C07ACF80(&qword_1ED758E48);
    v3 = sub_1C0787A88();
  }
  else
  {
    v3 = MEMORY[0x1E0DEE9E0];
  }
  sub_1C0791AB8();
  v33 = v4;
  v34 = v3 + 64;
  sub_1C07767B4();
  v5 = 0;
  while (1)
  {
    while (1)
    {
      if (v2)
      {
        sub_1C07A9558();
        v35 = v2;
        v7 = v6 | (v5 << 6);
      }
      else
      {
        if (__OFADD__(v5, 1))
          goto LABEL_36;
        sub_1C0778720();
        if (v8 == v9)
        {
LABEL_33:
          sub_1C08A6328();
          sub_1C07A5C48();
          return;
        }
        sub_1C077F104();
        if (!v10)
        {
          sub_1C079D310();
          if (v8 == v9)
            goto LABEL_33;
          sub_1C0794404();
          if (!v11)
          {
            sub_1C079D310();
            if (v8 == v9)
              goto LABEL_33;
            sub_1C0794404();
            if (!v12)
            {
              sub_1C079D310();
              if (v8 == v9)
                goto LABEL_33;
              sub_1C0794404();
              if (!v13)
              {
                sub_1C0778720();
                if (v8 == v9)
                  goto LABEL_33;
                sub_1C08A5F30();
                if (!v15)
                {
                  while (!__OFADD__(v14, 1))
                  {
                    sub_1C079D310();
                    if (v8 == v9)
                      goto LABEL_33;
                    sub_1C07B002C();
                    if (v16)
                      goto LABEL_27;
                  }
                  goto LABEL_37;
                }
              }
            }
          }
        }
LABEL_27:
        sub_1C08A5F68();
        v5 = v17;
      }
      v18 = (uint64_t *)(*(_QWORD *)(v0 + 48) + 16 * v7);
      v36 = *v18;
      v37 = v18[1];
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      sub_1C0778624();
      sub_1C07ACF80(&qword_1ED758CC0);
      sub_1C077D040();
      sub_1C07C010C(&v38, v40);
      sub_1C07C010C(v40, v41);
      sub_1C07C010C(v41, &v39);
      v19 = sub_1C0794DB4(v36);
      if ((v20 & 1) == 0)
        break;
      sub_1C08A61C0();
      sub_1C08A6150();
      qword_1ED758CC0 = v36;
      qword_1ED758CC8 = v37;
      sub_1C077ECF8();
      v21 = (_OWORD *)(*(_QWORD *)(v3 + 56) + 32 * v19);
      _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v21);
      sub_1C07C010C(&v39, v21);
      v2 = v35;
    }
    sub_1C08A5DFC();
    if (v30)
      break;
    sub_1C07A991C(v22, v23, v24, v25, v26, v27, v28, v29, v33, v34);
    *v31 = v36;
    v31[1] = v37;
    sub_1C07C010C(&v39, (_OWORD *)(*(_QWORD *)(v3 + 56) + 32 * v19));
    sub_1C07AEE24();
    if (v9)
      goto LABEL_35;
    *(_QWORD *)(v3 + 16) = v32;
    v2 = v35;
  }
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
LABEL_37:
  __break(1u);
}

void sub_1C089CF14()
{
  uint64_t v0;
  _BYTE *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  char v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD v43[3];
  int64_t v44;
  uint64_t v45;
  uint64_t v46;
  const char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;

  sub_1C0779670();
  v55 = *(_QWORD *)(sub_1C08A6388() - 8);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v2);
  sub_1C077AE40();
  v54 = v3;
  v53 = sub_1C07ACF80(&qword_1ED749410);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)v43 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52 = sub_1C07ACF80(qword_1ED749418);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v7);
  sub_1C077AE40();
  v51 = v8;
  v50 = sub_1C07ACF80((uint64_t *)&unk_1ED762690);
  v46 = *(_QWORD *)(v50 - 8);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v9);
  v58 = (uint64_t)v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v11);
  v49 = (uint64_t)v43 - v12;
  v48 = sub_1C07ACF80(&qword_1ED7558C8);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v13);
  sub_1C07768A8();
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)v43 - v15;
  v56 = v0;
  if (*(_QWORD *)(v0 + 16))
  {
    sub_1C07ACF80(&qword_1ED74D438);
    sub_1C0787A88();
  }
  v45 = v56 + 64;
  sub_1C07AF810();
  v19 = v18 & v17;
  v43[0] = v20;
  v44 = (unint64_t)(63 - v20) >> 6;
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  swift_retain();
  v57 = 0;
  v47 = "address_char_idx";
  v43[2] = "intelligencePlatform";
  v43[1] = "intelligencePlatformCore";
  if (v19)
  {
    v21 = __clz(__rbit64(v19)) | (v57 << 6);
    goto LABEL_24;
  }
  if (__OFADD__(v57, 1))
  {
    __break(1u);
    goto LABEL_27;
  }
  if (v57 + 1 < v44)
  {
    sub_1C077F104();
    if (v22)
      goto LABEL_23;
    sub_1C0779D88();
    if (v23 == v24)
      goto LABEL_25;
    sub_1C07B9F08();
    if (v25)
      goto LABEL_23;
    sub_1C0779D88();
    if (v23 == v24)
      goto LABEL_25;
    sub_1C07B9F08();
    if (v26)
      goto LABEL_23;
    sub_1C0779D88();
    if (v23 == v24)
      goto LABEL_25;
    sub_1C07B9F08();
    if (v28)
      goto LABEL_23;
    v29 = v27 + 4;
    if (v29 < v44)
    {
      if (!*(_QWORD *)(v45 + 8 * v29))
      {
        while (!__OFADD__(v29, 1))
        {
          sub_1C0779D88();
          if (v23 == v24)
            goto LABEL_25;
          sub_1C07B002C();
          if (v30)
            goto LABEL_23;
        }
LABEL_27:
        __break(1u);
        JUMPOUT(0x1C089D424);
      }
LABEL_23:
      sub_1C078A328();
      v21 = v32 + (v31 << 6);
      v57 = v31;
LABEL_24:
      v33 = v55;
      v34 = *(_BYTE *)(*(_QWORD *)(v56 + 48) + v21);
      v35 = v48;
      sub_1C078A72C((uint64_t)&v16[*(int *)(v48 + 48)], *(_QWORD *)(v56 + 56) + *(_QWORD *)(v55 + 72) * v21, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v55 + 16));
      *v16 = v34;
      sub_1C078A67C((uint64_t)v16, (uint64_t)v1, &qword_1ED7558C8);
      v36 = (uint64_t)&v1[*(int *)(v35 + 48)];
      v37 = v54;
      v38 = (uint64_t)&v6[*(int *)(v53 + 48)];
      *v6 = *v1;
      sub_1C078A72C(v37, v36, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v33 + 32));
      sub_1C077D040();
      v39 = v51 + *(int *)(v52 + 48);
      v40 = *v6;
      sub_1C07AAD4C(v38, v39);
      v41 = v39;
      v42 = v49;
      sub_1C07AAD4C(v41, v49);
      sub_1C07AAD4C(v42, v58);
      sub_1C07A23F8();
      __asm { BR              X8 }
    }
  }
LABEL_25:
  swift_release();
  sub_1C0827370();
  sub_1C0776760();
}

void sub_1C089D438()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  id v21;
  unint64_t v22;
  char v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;

  sub_1C07A5194();
  sub_1C07768C4();
  if (v1)
  {
    sub_1C07ACF80(&qword_1ED755F40);
    v3 = (_QWORD *)sub_1C0787A88();
  }
  else
  {
    v3 = (_QWORD *)MEMORY[0x1E0DEE9E0];
  }
  v4 = -1 << *(_BYTE *)(v0 + 32);
  if (-v4 < 64)
    v5 = ~(-1 << -(char)v4);
  else
    v5 = -1;
  v6 = v5 & *(_QWORD *)(v0 + 64);
  sub_1C078B760();
  sub_1C07767B4();
  while (v6)
  {
    sub_1C077E1F4();
LABEL_30:
    v17 = (uint64_t *)(*(_QWORD *)(v0 + 48) + 16 * v7);
    v19 = *v17;
    v18 = v17[1];
    v20 = *(void **)(*(_QWORD *)(v0 + 56) + 8 * v7);
    sub_1C0778624();
    v21 = v20;
    v22 = sub_1C08A5F90();
    if ((v23 & 1) != 0)
    {
      sub_1C08A611C();
      *v2 = v19;
      v2[1] = v18;
      v24 = v3[7];

      *(_QWORD *)(v24 + 8 * v22) = v21;
    }
    else
    {
      sub_1C08A5DFC();
      if (v25)
      {
        __break(1u);
LABEL_37:
        __break(1u);
        __break(1u);
        goto LABEL_38;
      }
      sub_1C08A62A0();
      *(_QWORD *)((char *)v3 + v26 + 64) |= v27;
      v28 = (_QWORD *)(v3[6] + 16 * v22);
      *v28 = v19;
      v28[1] = v18;
      *(_QWORD *)(v3[7] + 8 * v22) = v21;
      sub_1C07AEE24();
      if (v9)
        goto LABEL_37;
      v3[2] = v29;
    }
  }
  sub_1C0778720();
  if (v8 == v9)
    goto LABEL_35;
  sub_1C077F104();
  if (v10)
    goto LABEL_29;
  sub_1C079D310();
  if (v8 == v9)
    goto LABEL_35;
  sub_1C0794404();
  if (v11)
    goto LABEL_29;
  sub_1C079D310();
  if (v8 == v9)
    goto LABEL_35;
  sub_1C0794404();
  if (v12)
    goto LABEL_29;
  sub_1C079D310();
  if (v8 == v9)
    goto LABEL_35;
  sub_1C0794404();
  if (v13)
    goto LABEL_29;
  sub_1C0778720();
  if (v8 == v9)
  {
LABEL_35:
    sub_1C07A5C48();
    sub_1C0781AD8();
    return;
  }
  sub_1C08A5F30();
  if (v15)
  {
LABEL_29:
    sub_1C078299C();
    goto LABEL_30;
  }
  while (!__OFADD__(v14, 1))
  {
    sub_1C079D310();
    if (v8 == v9)
      goto LABEL_35;
    sub_1C07B002C();
    if (v16)
      goto LABEL_29;
  }
LABEL_38:
  __break(1u);
}

void sub_1C089D604()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  char v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _BYTE v43[56];
  uint64_t v44;
  uint64_t v45;
  _QWORD v46[7];
  _BYTE v47[16];
  _BYTE v48[56];
  _BYTE v49[56];
  _QWORD v50[9];
  _QWORD v51[10];

  sub_1C0779670();
  v1 = v0;
  if (*(_QWORD *)(v0 + 16))
  {
    sub_1C07ACF80(&qword_1EF633298);
    v2 = sub_1C0787A88();
  }
  else
  {
    v2 = MEMORY[0x1E0DEE9E0];
  }
  sub_1C07AFA30();
  v5 = v4 & v3;
  sub_1C07AE7C8();
  v40 = v6;
  v41 = v2 + 64;
  sub_1C0778624();
  v42 = 0;
  while (1)
  {
    while (1)
    {
      if (v5)
      {
        v7 = __clz(__rbit64(v5));
        v5 &= v5 - 1;
        v8 = v7 | (v42 << 6);
      }
      else
      {
        if (__OFADD__(v42, 1))
          goto LABEL_36;
        sub_1C0778720();
        if (v9 == v10)
        {
LABEL_33:
          sub_1C07A5C48();
          sub_1C0776760();
          return;
        }
        sub_1C077F104();
        if (!v11)
        {
          sub_1C079D310();
          if (v9 == v10)
            goto LABEL_33;
          sub_1C0794404();
          if (!v12)
          {
            sub_1C079D310();
            if (v9 == v10)
              goto LABEL_33;
            sub_1C0794404();
            if (!v13)
            {
              sub_1C079D310();
              if (v9 == v10)
                goto LABEL_33;
              sub_1C0794404();
              if (!v14)
              {
                sub_1C0778720();
                if (v9 == v10)
                  goto LABEL_33;
                sub_1C08A5F30();
                if (!v16)
                {
                  while (!__OFADD__(v15, 1))
                  {
                    sub_1C079D310();
                    if (v9 == v10)
                      goto LABEL_33;
                    sub_1C07B002C();
                    if (v17)
                      goto LABEL_27;
                  }
                  goto LABEL_37;
                }
              }
            }
          }
        }
LABEL_27:
        sub_1C078A328();
        v5 = v19 & v18;
        v8 = v21 + (v20 << 6);
        v42 = v20;
      }
      v22 = (uint64_t *)(*(_QWORD *)(v1 + 48) + 16 * v8);
      v24 = *v22;
      v23 = v22[1];
      sub_1C08A5D3C(*(_QWORD *)(v1 + 56) + 56 * v8, (uint64_t)&v51[2]);
      v51[0] = v24;
      v51[1] = v23;
      memcpy(v50, v51, 0x41uLL);
      v44 = v50[0];
      v45 = v50[1];
      sub_1C08A5D78((uint64_t)&v50[2], (uint64_t)v43);
      sub_1C07796D8();
      sub_1C07ACF80((uint64_t *)&unk_1EF6479D0);
      sub_1C077D040();
      v26 = v44;
      v25 = v45;
      sub_1C08A5EDC((uint64_t)v46, (uint64_t)v48);
      sub_1C08A5EDC((uint64_t)v48, (uint64_t)v49);
      sub_1C08A5EDC((uint64_t)v49, (uint64_t)v47);
      v27 = sub_1C077D774(v26, v25);
      if ((v28 & 1) == 0)
        break;
      sub_1C08A62C0();
      v46[0] = v26;
      v46[1] = v25;
      sub_1C078A98C((uint64_t)v47, *(_QWORD *)(v2 + 56) + 56 * v27, (uint64_t *)&unk_1EF6479D0);
    }
    sub_1C08A5DFC();
    if (v37)
      break;
    sub_1C08A5DD0(v29, v30, v31, v32, v33, v34, v35, v36, v40, v41);
    *v38 = v26;
    v38[1] = v25;
    sub_1C08A5EDC((uint64_t)v47, *(_QWORD *)(v2 + 56) + 56 * v27);
    sub_1C07AEE24();
    if (v10)
      goto LABEL_35;
    *(_QWORD *)(v2 + 16) = v39;
  }
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
LABEL_37:
  __break(1u);
}

void sub_1C089D8AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  void *v6;
  char v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  void *v26;
  uint64_t *v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  sub_1C07768C4();
  if (v1)
  {
    sub_1C07ACF80(&qword_1EF6331E0);
    v3 = (_QWORD *)sub_1C0787A88();
  }
  else
  {
    v3 = (_QWORD *)MEMORY[0x1E0DEE9E0];
  }
  v33 = v0 + 64;
  sub_1C0791AB8();
  sub_1C07767B4();
  v4 = 0;
  v5 = &unk_1ED7466D8;
  v6 = &unk_1ED75E3F0;
  while (1)
  {
    while (1)
    {
      if (v2)
      {
        sub_1C07A9558();
      }
      else
      {
        if (__OFADD__(v4, 1))
          goto LABEL_36;
        sub_1C079CC18();
        if (v7 == v8)
        {
LABEL_33:
          sub_1C07B68C4();
          sub_1C07A5C48();
          sub_1C08A5E68();
          return;
        }
        sub_1C077F104();
        if (!v9)
        {
          sub_1C077EE58();
          if (v7 == v8)
            goto LABEL_33;
          sub_1C07AF218();
          if (!v10)
          {
            sub_1C077EE58();
            if (v7 == v8)
              goto LABEL_33;
            sub_1C07AF218();
            if (!v11)
            {
              sub_1C077EE58();
              if (v7 == v8)
                goto LABEL_33;
              sub_1C07AF218();
              if (!v12)
              {
                sub_1C079CC18();
                if (v7 == v8)
                  goto LABEL_33;
                if (!*(_QWORD *)(v33 + 8 * v13))
                {
                  while (!__OFADD__(v13, 1))
                  {
                    sub_1C077EE58();
                    if (v7 == v8)
                      goto LABEL_33;
                    sub_1C07B002C();
                    if (v14)
                      goto LABEL_27;
                  }
                  goto LABEL_37;
                }
              }
            }
          }
        }
LABEL_27:
        sub_1C077EB64();
        v4 = v15;
      }
      sub_1C08A6254();
      v18 = *v16;
      v17 = v16[1];
      sub_1C077C0B8();
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      sub_1C077E1EC();
      sub_1C0781058();
      sub_1C077D040();
      v19 = sub_1C077D774(v18, v17);
      v20 = v19;
      if ((v21 & 1) == 0)
        break;
      v22 = v2;
      v23 = v0;
      v24 = v4;
      v25 = v6;
      v26 = v5;
      v27 = (uint64_t *)(v3[6] + 16 * v19);
      swift_bridgeObjectRelease();
      *v27 = v18;
      v27[1] = v17;
      v5 = v26;
      v6 = v25;
      v4 = v24;
      v0 = v23;
      v2 = v22;
      v28 = v3[7];
      swift_bridgeObjectRelease();
      *(_QWORD *)(v28 + 8 * v20) = v34;
    }
    sub_1C08A5DFC();
    if (v29)
      break;
    sub_1C07BA1C4((v20 >> 3) & 0x1FFFFFFFFFFFFFF8);
    v31 = (uint64_t *)(v30 + 16 * v20);
    *v31 = v18;
    v31[1] = v17;
    *(_QWORD *)(v3[7] + 8 * v20) = v34;
    sub_1C07AEE24();
    if (v8)
      goto LABEL_35;
    v3[2] = v32;
  }
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
LABEL_37:
  __break(1u);
}

uint64_t sub_1C089DAE4(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  int64_t v12;
  unint64_t v13;
  int64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  char v18;
  _QWORD *v19;
  uint64_t *v20;
  unint64_t v21;
  char v22;
  unint64_t v23;
  char v24;
  unint64_t v25;
  char v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t *v29;
  uint64_t v30;
  BOOL v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  char v36;
  unint64_t v37;
  char v38;
  unint64_t v39;
  char v40;
  uint64_t *v41;
  uint64_t v42;
  uint64_t result;
  uint64_t v44;
  int64_t v45;
  int64_t v46;
  _QWORD *v47;
  _QWORD *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD v52[3];
  uint64_t v53;
  __int128 v54;
  _OWORD v55[2];
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;

  v44 = a2 + 64;
  v4 = 1 << *(_BYTE *)(a2 + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(a2 + 64);
  v45 = (unint64_t)(v4 + 63) >> 6;
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  v46 = 0;
  if (!v6)
    goto LABEL_6;
LABEL_4:
  v7 = __clz(__rbit64(v6));
  v6 &= v6 - 1;
  v8 = v7 | (v46 << 6);
LABEL_5:
  v9 = *(_QWORD *)(a2 + 56);
  v10 = (_QWORD *)(*(_QWORD *)(a2 + 48) + 16 * v8);
  v11 = v10[1];
  *(_QWORD *)&v54 = *v10;
  *((_QWORD *)&v54 + 1) = v11;
  sub_1C078A8F8(v9 + 32 * v8, (uint64_t)v55, &qword_1ED760400);
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  while (1)
  {
    sub_1C078A67C((uint64_t)&v54, (uint64_t)&v56, &qword_1EF633138);
    v15 = v57;
    if (!v57)
      goto LABEL_60;
    v16 = v56;
    sub_1C078A67C((uint64_t)&v58, (uint64_t)&v54, &qword_1ED760400);
    if (a1[2])
      break;
    v48 = 0;
    v49 = 0;
    v50 = 0;
    v51 = 1;
LABEL_31:
    v19 = &v48;
    v20 = (uint64_t *)&unk_1EF633158;
LABEL_32:
    sub_1C07B1C6C((uint64_t)v19, v20);
LABEL_33:
    sub_1C078A8F8((uint64_t)&v54, (uint64_t)v52, &qword_1ED760400);
    swift_isUniquelyReferenced_nonNull_native();
    v48 = a1;
    v21 = sub_1C077D774(v16, v15);
    if (__OFADD__(a1[2], (v22 & 1) == 0))
    {
      __break(1u);
LABEL_62:
      __break(1u);
LABEL_63:
      __break(1u);
LABEL_64:
      __break(1u);
      goto LABEL_65;
    }
    v23 = v21;
    v24 = v22;
    sub_1C07ACF80(&qword_1EF633150);
    if ((sub_1C107090C() & 1) != 0)
    {
      v25 = sub_1C077D774(v16, v15);
      if ((v24 & 1) != (v26 & 1))
        goto LABEL_66;
      v23 = v25;
    }
    a1 = v48;
    if ((v24 & 1) == 0)
    {
      v48[(v23 >> 6) + 8] |= 1 << v23;
      v29 = (uint64_t *)(a1[6] + 16 * v23);
      *v29 = v16;
      v29[1] = v15;
      sub_1C078A67C((uint64_t)v52, a1[7] + 32 * v23, &qword_1ED760400);
      v30 = a1[2];
      v31 = __OFADD__(v30, 1);
      v32 = v30 + 1;
      if (v31)
        goto LABEL_62;
      goto LABEL_41;
    }
    v27 = v48[7] + 32 * v23;
    v28 = v52;
LABEL_39:
    sub_1C078A98C((uint64_t)v28, v27, &qword_1ED760400);
LABEL_42:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C07B1C6C((uint64_t)&v54, &qword_1ED760400);
    if (v6)
      goto LABEL_4;
LABEL_6:
    v12 = v46 + 1;
    if (__OFADD__(v46, 1))
      goto LABEL_63;
    if (v12 < v45)
    {
      v13 = *(_QWORD *)(v44 + 8 * v12);
      if (v13)
        goto LABEL_9;
      v14 = v46 + 2;
      ++v46;
      if (v12 + 1 < v45)
      {
        v13 = *(_QWORD *)(v44 + 8 * v14);
        if (v13)
          goto LABEL_12;
        v46 = v12 + 1;
        if (v12 + 2 < v45)
        {
          v13 = *(_QWORD *)(v44 + 8 * (v12 + 2));
          if (v13)
          {
            v12 += 2;
            goto LABEL_9;
          }
          v14 = v12 + 3;
          v46 = v12 + 2;
          if (v12 + 3 < v45)
          {
            v13 = *(_QWORD *)(v44 + 8 * v14);
            if (v13)
            {
LABEL_12:
              v12 = v14;
LABEL_9:
              v6 = (v13 - 1) & v13;
              v8 = __clz(__rbit64(v13)) + (v12 << 6);
              v46 = v12;
              goto LABEL_5;
            }
            while (1)
            {
              v12 = v14 + 1;
              if (__OFADD__(v14, 1))
                break;
              if (v12 >= v45)
              {
                v46 = v45 - 1;
                goto LABEL_23;
              }
              v13 = *(_QWORD *)(v44 + 8 * v12);
              ++v14;
              if (v13)
                goto LABEL_9;
            }
LABEL_65:
            __break(1u);
LABEL_66:
            result = sub_1C1070D44();
            __break(1u);
            return result;
          }
        }
      }
    }
LABEL_23:
    v6 = 0;
    memset(v55, 0, sizeof(v55));
    v54 = 0u;
  }
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  v17 = sub_1C077D774(v16, v15);
  if ((v18 & 1) != 0)
  {
    sub_1C078A8F8(a1[7] + 32 * v17, (uint64_t)&v48, &qword_1ED760400);
  }
  else
  {
    v48 = 0;
    v49 = 0;
    v50 = 0;
    v51 = 1;
  }
  swift_bridgeObjectRelease();
  if (v51 == 1)
    goto LABEL_31;
  sub_1C078A67C((uint64_t)&v48, (uint64_t)v52, &qword_1ED760400);
  if (!v53)
  {
LABEL_55:
    v19 = v52;
    v20 = &qword_1ED760400;
    goto LABEL_32;
  }
  v33 = sub_1C07ACF80(&qword_1EF633148);
  if ((swift_dynamicCast() & 1) == 0)
    goto LABEL_33;
  sub_1C078A8F8((uint64_t)&v54, (uint64_t)v52, &qword_1ED760400);
  if (!v53)
  {
    swift_bridgeObjectRelease();
    goto LABEL_55;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_33;
  }
  v34 = sub_1C089DAE4(v47, v48);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v53 = v33;
  v52[0] = v34;
  sub_1C078A67C((uint64_t)v52, (uint64_t)&v48, &qword_1ED760400);
  swift_isUniquelyReferenced_nonNull_native();
  v47 = a1;
  v35 = sub_1C077D774(v16, v15);
  if (__OFADD__(a1[2], (v36 & 1) == 0))
    goto LABEL_64;
  v37 = v35;
  v38 = v36;
  sub_1C07ACF80(&qword_1EF633150);
  if ((sub_1C107090C() & 1) != 0)
  {
    v39 = sub_1C077D774(v16, v15);
    if ((v38 & 1) != (v40 & 1))
      goto LABEL_66;
    v37 = v39;
  }
  if ((v38 & 1) != 0)
  {
    v27 = a1[7] + 32 * v37;
    v28 = &v48;
    goto LABEL_39;
  }
  a1[(v37 >> 6) + 8] |= 1 << v37;
  v41 = (uint64_t *)(a1[6] + 16 * v37);
  *v41 = v16;
  v41[1] = v15;
  sub_1C078A67C((uint64_t)&v48, a1[7] + 32 * v37, &qword_1ED760400);
  v42 = a1[2];
  v31 = __OFADD__(v42, 1);
  v32 = v42 + 1;
  if (!v31)
  {
LABEL_41:
    a1[2] = v32;
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    goto LABEL_42;
  }
  __break(1u);
LABEL_60:
  swift_release();
  return (uint64_t)a1;
}

void BMContextualUnderstandingSoundAnalysis.asHierarchicalDictionary()()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  __int128 v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  int64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  uint64_t *v28;
  uint64_t v29;
  BOOL v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  __n128 *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  __n128 v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  uint64_t v47;
  uint64_t *v48;
  uint64_t v49;
  BOOL v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char v54;
  unint64_t v55;
  char v56;
  uint64_t v57;
  unint64_t v58;
  char v59;
  uint64_t *v60;
  uint64_t v61;
  os_log_type_t v62;
  uint64_t v63;
  unint64_t v64;
  uint64_t v65;
  BOOL v66;
  __n128 *inited;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  __n128 v75;
  uint64_t v76;
  uint64_t v77;
  _QWORD *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  int64_t v84;
  _BYTE *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t *v88;
  uint64_t v89;
  uint64_t v90;
  __int128 v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  _QWORD v95[4];
  uint64_t v96[3];
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  __int128 v100;
  _BYTE v101[40];
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;

  sub_1C0779670();
  v3 = &qword_1ED760400;
  sub_1C079BD54();
  v4 = sub_1C106F97C();
  v87 = v0;
  v5 = BMContextualUnderstandingSoundAnalysis.asFlatDictionary()();
  sub_1C0782160(v5, &qword_1ED752E68);
  v6 = static BMContextualUnderstandingSoundAnalysis.soundHierarchyDictionary()();
  sub_1C08A6168();
  v10 = 1 << v9;
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & v8;
  v85 = v101;
  v86 = v5;
  v88 = &v104;
  v89 = 0;
  v84 = (unint64_t)(v10 + 63) >> 6;
  v82 = v84 - 1;
  *((_QWORD *)&v13 + 1) = 2;
  *(_QWORD *)&v13 = 136315138;
  v91 = v13;
  v90 = MEMORY[0x1E0DEE9B8] + 8;
  v94 = v7;
  if ((v11 & v8) == 0)
    goto LABEL_6;
LABEL_4:
  v14 = __clz(__rbit64(v12));
  v15 = (v12 - 1) & v12;
  v16 = v14 | (v89 << 6);
LABEL_5:
  v17 = *(_QWORD *)(v86 + 56);
  v18 = (_QWORD *)(*(_QWORD *)(v86 + 48) + 16 * v16);
  v19 = v18[1];
  *(_QWORD *)&v100 = *v18;
  *((_QWORD *)&v100 + 1) = v19;
  sub_1C08A6394(v17 + 32 * v16, (uint64_t)v85);
  sub_1C07767B4();
  while (1)
  {
    sub_1C078A67C((uint64_t)&v100, (uint64_t)&v102, &qword_1EF633138);
    v23 = v103;
    if (!v103)
    {
      sub_1C0775834();
      swift_release();
      sub_1C0776760();
      return;
    }
    v92 = v15;
    v93 = v4;
    v24 = v102;
    sub_1C08A613C((uint64_t)v88, (uint64_t)&v100);
    v98 = v24;
    v99 = v23;
    v25 = *(_QWORD *)(v6 + 16);
    sub_1C07767C4();
    if (v25)
    {
      sub_1C07767C4();
      v15 = v6;
      v26 = sub_1C077D774(v24, v23);
      if ((v27 & 1) != 0)
      {
        v28 = (uint64_t *)(*(_QWORD *)(v6 + 56) + 16 * v26);
        v2 = *v28;
        v15 = v28[1];
        sub_1C077AE90();
      }
      else
      {
        sub_1C08A6058();
      }
      sub_1C0775894();
    }
    else
    {
      sub_1C08A6058();
    }
    v29 = sub_1C106F97C();
    v30 = v2 == 1953460082 && v15 == 0xE400000000000000;
    if (!v30 && (sub_1C07785B0() & 1) == 0)
      break;
LABEL_72:
    swift_bridgeObjectRelease();
    v6 = v94;
    if (*(_QWORD *)(v29 + 16))
    {
      sub_1C0775894();
    }
    else
    {
      sub_1C07ACF80(&qword_1EF633140);
      inited = (__n128 *)swift_initStackObject();
      sub_1C08A6358(inited, v68, v69, v70, v71, v72, v73, v74, v81, v82, v83, v84, (uint64_t)v85, v86, v87, (uint64_t)v88, v89, v90, v91,
        *((uint64_t *)&v91 + 1),
        v92,
        v93,
        v75);
      *(_QWORD *)(v76 + 32) = v24;
      *(_QWORD *)(v76 + 40) = v23;
      sub_1C08A6394((uint64_t)&v100, v77);
      sub_1C106F97C();
      sub_1C07767AC();
    }
    sub_1C07767B4();
    v78 = (_QWORD *)sub_1C07AB6F8();
    v80 = sub_1C089DAE4(v78, v79);
    sub_1C0778580();
    sub_1C07767AC();
    sub_1C08A6274();
    sub_1C07767AC();
    swift_bridgeObjectRelease();
    v4 = v80;
    v12 = v92;
    if (v92)
      goto LABEL_4;
LABEL_6:
    v20 = v89 + 1;
    if (__OFADD__(v89, 1))
      goto LABEL_80;
    if (v20 < v84)
    {
      v21 = *(_QWORD *)(v83 + 8 * v20);
      if (v21)
        goto LABEL_9;
      v22 = v89 + 2;
      ++v89;
      if (v20 + 1 < v84)
      {
        v21 = *(_QWORD *)(v83 + 8 * v22);
        if (v21)
          goto LABEL_12;
        v89 = v20 + 1;
        if (v20 + 2 < v84)
        {
          v21 = *(_QWORD *)(v83 + 8 * (v20 + 2));
          if (v21)
          {
            v20 += 2;
            goto LABEL_9;
          }
          v22 = v20 + 3;
          v89 = v20 + 2;
          if (v20 + 3 < v84)
          {
            v21 = *(_QWORD *)(v83 + 8 * v22);
            if (!v21)
            {
              while (1)
              {
                v20 = v22 + 1;
                if (__OFADD__(v22, 1))
                  goto LABEL_81;
                if (v20 >= v84)
                {
                  v89 = v82;
                  goto LABEL_23;
                }
                v21 = *(_QWORD *)(v83 + 8 * v20);
                ++v22;
                if (v21)
                  goto LABEL_9;
              }
            }
LABEL_12:
            v20 = v22;
LABEL_9:
            v15 = (v21 - 1) & v21;
            v16 = __clz(__rbit64(v21)) + (v20 << 6);
            v89 = v20;
            goto LABEL_5;
          }
        }
      }
    }
LABEL_23:
    v15 = 0;
    memset(v101, 0, 32);
    v100 = 0u;
  }
  swift_beginAccess();
  while (1)
  {
    v31 = v3;
    v32 = v23;
    v33 = v24;
    v23 = v15;
    v24 = v2;
    sub_1C07ACF80(&qword_1EF633140);
    v34 = (__n128 *)swift_initStackObject();
    sub_1C08A6358(v34, v35, v36, v37, v38, v39, v40, v41, v81, v82, v83, v84, (uint64_t)v85, v86, v87, (uint64_t)v88, v89, v90, v91,
      *((uint64_t *)&v91 + 1),
      v92,
      v93,
      v42);
    *(_QWORD *)(v43 + 32) = v33;
    *(_QWORD *)(v43 + 40) = v32;
    v3 = v31;
    sub_1C078A8F8((uint64_t)&v100, v44, v31);
    sub_1C07767C4();
    v45 = sub_1C106F97C();
    v97 = sub_1C07ACF80(&qword_1EF633148);
    v96[0] = v45;
    sub_1C078B9CC((uint64_t)v96, (uint64_t)v95);
    sub_1C0778698();
    sub_1C077C80C(v2);
    if (__OFADD__(*(_QWORD *)(v29 + 16), (v46 & 1) == 0))
      break;
    sub_1C08A62E0();
    v2 = sub_1C07ACF80(&qword_1EF633150);
    if ((sub_1C107090C() & 1) != 0)
    {
      sub_1C077D774(v24, v23);
      sub_1C0781D14();
      if (!v30)
        goto LABEL_84;
      v6 = v47;
    }
    if ((v1 & 1) != 0)
    {
      sub_1C078A98C((uint64_t)v95, *(_QWORD *)(v29 + 56) + 32 * v6, v31);
    }
    else
    {
      sub_1C08A5E08();
      *v48 = v24;
      v48[1] = v23;
      sub_1C08A613C((uint64_t)v95, *(_QWORD *)(v29 + 56) + 32 * v6);
      v49 = *(_QWORD *)(v29 + 16);
      v50 = __OFADD__(v49, 1);
      v51 = v49 + 1;
      if (v50)
        goto LABEL_79;
      *(_QWORD *)(v29 + 16) = v51;
      sub_1C07767C4();
    }
    sub_1C0775894();
    sub_1C077970C();
    v52 = v98;
    v53 = v99;
    sub_1C0778624();
    sub_1C07767B4();
    v1 = sub_1C077D774(v52, v53);
    LOBYTE(v52) = v54;
    sub_1C07767AC();
    if ((v52 & 1) != 0)
    {
      sub_1C0778698();
      v95[0] = v29;
      sub_1C107090C();
      v29 = v95[0];
      swift_bridgeObjectRelease();
      sub_1C08A613C(*(_QWORD *)(v29 + 56) + 32 * v1, (uint64_t)v96);
      sub_1C1070924();
      sub_1C077970C();
    }
    else
    {
      sub_1C078BB40();
    }
    sub_1C0775834();
    sub_1C07B1C6C((uint64_t)v96, &qword_1EF633158);
    v98 = v24;
    v99 = v23;
    sub_1C07767C4();
    sub_1C077960C();
    if (!*(_QWORD *)(v29 + 16))
      goto LABEL_82;
    sub_1C07767C4();
    v55 = sub_1C077C80C(v24);
    if ((v56 & 1) != 0)
      sub_1C08A6394(*(_QWORD *)(v29 + 56) + 32 * v55, (uint64_t)v96);
    else
      sub_1C078BB40();
    sub_1C0775894();
    if (v97 == 1)
      goto LABEL_83;
    sub_1C08A6274();
    sub_1C08A613C((uint64_t)v96, (uint64_t)&v100);
    if (!*(_QWORD *)(v94 + 16))
      goto LABEL_59;
    LOBYTE(v1) = v98;
    v6 = v99;
    sub_1C077584C();
    sub_1C0778624();
    sub_1C08A6090();
    v15 = v57;
    sub_1C0778580();
    sub_1C0775834();
    if ((v15 & 1) == 0)
    {
LABEL_59:
      if (qword_1ED762B18 != -1)
        swift_once();
      v61 = sub_1C106F544();
      sub_1C079E000(v61, (uint64_t)qword_1ED762AF8);
      v15 = sub_1C106F538();
      v62 = sub_1C1070390();
      v6 = v62;
      if (os_log_type_enabled((os_log_t)v15, v62))
      {
        v63 = swift_slowAlloc();
        v96[0] = swift_slowAlloc();
        *(_DWORD *)v63 = v91;
        v65 = v98;
        v64 = v99;
        sub_1C07796D8();
        *(_QWORD *)(v63 + 4) = sub_1C0788DAC(v65, v64, v96);
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1C0771000, (os_log_t)v15, (os_log_type_t)v6, "Soundname: %s is not contained in hierarchy dictionary", (uint8_t *)v63, 0xCu);
        swift_arrayDestroy();
        sub_1C0776778();
      }

      goto LABEL_64;
    }
    if (!*(_QWORD *)(v94 + 16))
      goto LABEL_64;
    sub_1C0778624();
    v58 = sub_1C08A6090();
    if ((v59 & 1) == 0)
    {
      sub_1C0775834();
LABEL_64:
      sub_1C08A6058();
      goto LABEL_65;
    }
    v60 = (uint64_t *)(*(_QWORD *)(v94 + 56) + 16 * v58);
    v2 = *v60;
    v15 = v60[1];
    sub_1C077AE90();
    sub_1C0775834();
LABEL_65:
    v66 = v2 == 1953460082 && v15 == 0xE400000000000000;
    if (v66 || (sub_1C07785B0() & 1) != 0)
      goto LABEL_72;
  }
  __break(1u);
LABEL_79:
  __break(1u);
LABEL_80:
  __break(1u);
LABEL_81:
  __break(1u);
LABEL_82:
  sub_1C078BB40();
LABEL_83:
  swift_bridgeObjectRelease();
  __break(1u);
LABEL_84:
  sub_1C1070D44();
  __break(1u);
}

uint64_t BMContextualUnderstandingSoundAnalysis.asFlatDictionary()()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  id v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  double v13;
  unint64_t v14;
  char v15;
  unint64_t v16;
  double v17;
  char v18;
  unint64_t v19;
  double v20;
  char v21;
  unint64_t v22;
  char v23;
  uint64_t v24;
  _BOOL8 v25;
  unint64_t v26;
  char v27;
  unint64_t v28;
  char v29;
  double v30;
  uint64_t *v31;
  uint64_t v32;
  BOOL v33;
  uint64_t v34;
  double v35;
  double v36;
  unint64_t v37;
  char v38;
  double v39;
  unint64_t v40;
  char v41;
  char v42;
  unint64_t v43;
  unint64_t v44;
  uint64_t *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t result;
  unint64_t v53;
  unint64_t v54;
  uint64_t v55;
  id v56;
  _QWORD *v57;

  v1 = sub_1C07AF93C();
  v2 = sub_1C07AF93C();
  v3 = objc_msgSend(v0, sel_classifiedSounds);
  sub_1C0782160((uint64_t)v3, &qword_1EF633160);
  v4 = sub_1C106FF04();

  if (!(v4 >> 62))
  {
    v5 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v5)
      goto LABEL_3;
LABEL_40:
    sub_1C077E584();
    v49 = sub_1C07767B4();
    sub_1C089BFE0(v49);
    v51 = v50;
    sub_1C0778580();
    swift_bridgeObjectRelease_n();
    return v51;
  }
LABEL_47:
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  v5 = sub_1C10709B4();
  sub_1C077E584();
  if (!v5)
    goto LABEL_40;
LABEL_3:
  v53 = v4;
  v54 = v4 & 0xC000000000000001;
  v6 = 4;
  while (1)
  {
    if (v54)
      v7 = (id)MEMORY[0x1C3BA70DC](v6 - 4, v4);
    else
      v7 = *(id *)(v4 + 8 * v6);
    v8 = v7;
    if (__OFADD__(v6 - 4, 1))
    {
      __break(1u);
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
LABEL_44:
      __break(1u);
LABEL_45:
      __break(1u);
LABEL_46:
      __break(1u);
      goto LABEL_47;
    }
    v9 = sub_1C08A5A70(v7);
    if (!v10)
      break;
    v11 = v9;
    v12 = v10;
    v13 = 0.0;
    if (*(_QWORD *)(v1 + 16))
    {
      v14 = sub_1C077C80C(v9);
      if ((v15 & 1) != 0)
        v13 = *(double *)(*(_QWORD *)(v1 + 56) + 8 * v14);
    }
    v55 = v6 - 3;
    v56 = v8;
    if (!*(_QWORD *)(v2 + 16))
      goto LABEL_18;
    sub_1C07767C4();
    v16 = sub_1C0781D04();
    v17 = 1.0;
    if ((v18 & 1) != 0)
      v17 = *(double *)(*(_QWORD *)(v2 + 56) + 8 * v16);
    sub_1C0775894();
    v13 = v13 * v17;
    if (*(_QWORD *)(v2 + 16))
    {
      sub_1C07767C4();
      v19 = sub_1C0781D04();
      v20 = 0.0;
      if ((v21 & 1) != 0)
        v20 = *(double *)(*(_QWORD *)(v2 + 56) + 8 * v19);
    }
    else
    {
LABEL_18:
      sub_1C07767C4();
      v20 = 0.0;
    }
    swift_isUniquelyReferenced_nonNull_native();
    v57 = (_QWORD *)v2;
    v22 = sub_1C0781D04();
    v24 = *(_QWORD *)(v2 + 16);
    v25 = (v23 & 1) == 0;
    v2 = v24 + v25;
    if (__OFADD__(v24, v25))
      goto LABEL_42;
    v26 = v22;
    v27 = v23;
    v4 = sub_1C07ACF80(&qword_1ED760850);
    if ((sub_1C107090C() & 1) != 0)
    {
      sub_1C077F684();
      sub_1C0789DBC();
      if (!v29)
        goto LABEL_51;
      v26 = v28;
    }
    v30 = v20 + 1.0;
    v2 = (uint64_t)v57;
    if ((v27 & 1) != 0)
    {
      *(double *)(v57[7] + 8 * v26) = v30;
    }
    else
    {
      v57[(v26 >> 6) + 8] |= 1 << v26;
      v31 = (uint64_t *)(v57[6] + 16 * v26);
      *v31 = v11;
      v31[1] = v12;
      *(double *)(v57[7] + 8 * v26) = v30;
      v32 = v57[2];
      v33 = __OFADD__(v32, 1);
      v34 = v32 + 1;
      if (v33)
        goto LABEL_45;
      v57[2] = v34;
      sub_1C07767C4();
    }
    sub_1C0775894();
    sub_1C077970C();
    objc_msgSend(v56, sel_confidence);
    if (!v57[2])
      goto LABEL_43;
    v36 = v35;
    sub_1C07767C4();
    v37 = sub_1C0781D04();
    if ((v38 & 1) == 0)
      goto LABEL_50;
    v39 = *(double *)(v57[7] + 8 * v37);
    sub_1C0775894();
    sub_1C0778698();
    v40 = sub_1C077C80C(v11);
    v42 = v41;
    if (__OFADD__(*(_QWORD *)(v1 + 16), (v41 & 1) == 0))
      goto LABEL_44;
    v43 = v40;
    v4 = v53;
    if ((sub_1C107090C() & 1) != 0)
    {
      sub_1C077F684();
      sub_1C0789DBC();
      if (!v29)
        goto LABEL_51;
      v43 = v44;
    }
    if ((v42 & 1) != 0)
    {
      *(double *)(*(_QWORD *)(v1 + 56) + 8 * v43) = (v13 + v36) / v39;
    }
    else
    {
      sub_1C08A5E08();
      *v45 = v11;
      v45[1] = v12;
      *(_QWORD *)(*(_QWORD *)(v1 + 56) + 8 * v43) = v46;
      v47 = *(_QWORD *)(v1 + 16);
      v33 = __OFADD__(v47, 1);
      v48 = v47 + 1;
      if (v33)
        goto LABEL_46;
      *(_QWORD *)(v1 + 16) = v48;
      sub_1C07767C4();
    }

    sub_1C0775894();
    sub_1C077970C();
    ++v6;
    if (v55 == v5)
      goto LABEL_40;
  }
  __break(1u);
LABEL_50:
  sub_1C0775894();
  __break(1u);
LABEL_51:
  result = sub_1C1070D44();
  __break(1u);
  return result;
}

uint64_t static BMContextualUnderstandingSoundAnalysis.soundHierarchyDictionary()()
{
  return sub_1C106F97C();
}

void static BMContextualUnderstandingSoundAnalysis.soundHierarchyLabels()(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_1C0782160(a1, &qword_1ED752E68);
  v1 = static BMContextualUnderstandingSoundAnalysis.soundHierarchyDictionary()();
  v2 = sub_1C089A800(v1, (_QWORD *(*)(_QWORD *__return_ptr, uint64_t))sub_1C0861BD0);
  static BMContextualUnderstandingSoundAnalysis.soundHierarchyDictionary()();
  v3 = sub_1C089938C();
  sub_1C089ED40((uint64_t)v3, (uint64_t)v2);
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C08A2E2C();
  v5 = v4;
  sub_1C07767AC();
  v6 = v5;
  sub_1C08485B4(&v6);
  sub_1C07767AC();
  sub_1C0776784();
}

void sub_1C089ED40(uint64_t a1, uint64_t a2)
{
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int64_t v7;
  int64_t v8;
  uint64_t v9;
  int64_t v10;
  _BYTE v11[16];
  uint64_t v12;

  v2 = 0;
  v12 = a2;
  v3 = a1 + 56;
  v4 = 1 << *(_BYTE *)(a1 + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(a1 + 56);
  v7 = (unint64_t)(v4 + 63) >> 6;
  if (!v6)
    goto LABEL_5;
LABEL_4:
  sub_1C077E8CC();
  while (1)
  {
    sub_1C077584C();
    sub_1C077FAB0((uint64_t)v11);
    sub_1C07AD0B0();
    if (v6)
      goto LABEL_4;
LABEL_5:
    v8 = v2 + 1;
    if (__OFADD__(v2, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v8 >= v7)
      goto LABEL_23;
    v9 = *(_QWORD *)(v3 + 8 * v8);
    ++v2;
    if (!v9)
    {
      v2 = v8 + 1;
      if (v8 + 1 >= v7)
        goto LABEL_23;
      v9 = *(_QWORD *)(v3 + 8 * v2);
      if (!v9)
      {
        v2 = v8 + 2;
        if (v8 + 2 >= v7)
          goto LABEL_23;
        v9 = *(_QWORD *)(v3 + 8 * v2);
        if (!v9)
        {
          v2 = v8 + 3;
          if (v8 + 3 >= v7)
            goto LABEL_23;
          v9 = *(_QWORD *)(v3 + 8 * v2);
          if (!v9)
            break;
        }
      }
    }
LABEL_20:
    v6 = (v9 - 1) & v9;
  }
  v10 = v8 + 4;
  if (v10 >= v7)
  {
LABEL_23:
    sub_1C077AF1C();
    sub_1C07A08DC();
    return;
  }
  v9 = *(_QWORD *)(v3 + 8 * v10);
  if (v9)
  {
    v2 = v10;
    goto LABEL_20;
  }
  while (1)
  {
    v2 = v10 + 1;
    if (__OFADD__(v10, 1))
      break;
    if (v2 >= v7)
      goto LABEL_23;
    v9 = *(_QWORD *)(v3 + 8 * v2);
    ++v10;
    if (v9)
      goto LABEL_20;
  }
LABEL_25:
  __break(1u);
}

void sub_1C089EE8C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  sub_1C0779670();
  v5 = v4;
  v6 = sub_1C0779688();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  sub_1C0780698();
  MEMORY[0x1E0C80A78](v8);
  sub_1C0790738();
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v23 - v10;
  sub_1C077B00C();
  if (!v1)
    goto LABEL_3;
LABEL_2:
  sub_1C07BFD7C();
  while (1)
  {
    sub_1C078A72C((uint64_t)v11, *(_QWORD *)(v5 + 48) + *(_QWORD *)(v7 + 72) * v12, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 16));
    sub_1C078A72C(v0, (uint64_t)v11, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 32));
    sub_1C0A7E0C4();
    sub_1C08A61B4(*(uint64_t (**)(uint64_t, uint64_t))(v7 + 8));
    if (v1)
      goto LABEL_2;
LABEL_3:
    v13 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v13 >= v2)
      goto LABEL_23;
    ++v3;
    if (!*(_QWORD *)(v23 + 8 * v13))
    {
      sub_1C08A6234();
      if (v14 == v15)
        goto LABEL_23;
      sub_1C08A5F24();
      if (!v17)
      {
        v3 = v16 + 2;
        if (v16 + 2 >= v2)
          goto LABEL_23;
        sub_1C08A5F24();
        if (!v18)
        {
          sub_1C08A6228();
          if (v14 == v15)
            goto LABEL_23;
          sub_1C08A5F24();
          if (!v20)
            break;
        }
      }
    }
LABEL_20:
    sub_1C08A6078();
  }
  if (v19 + 4 >= v2)
  {
LABEL_23:
    sub_1C077AF1C();
    sub_1C0776760();
    return;
  }
  sub_1C08A6144();
  if (v22)
  {
    v3 = v21;
    goto LABEL_20;
  }
  while (1)
  {
    v3 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v3 >= v2)
      goto LABEL_23;
    ++v21;
    if (*(_QWORD *)(v23 + 8 * v3))
      goto LABEL_20;
  }
LABEL_25:
  __break(1u);
}

void sub_1C089F004()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  sub_1C0779670();
  sub_1C077AF90();
  v7 = type metadata accessor for LiveGlobalKnowledgeTriple();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  sub_1C078D30C();
  MEMORY[0x1E0C80A78](v9);
  sub_1C077D048();
  MEMORY[0x1E0C80A78](v10);
  sub_1C07AF224();
  sub_1C077B00C();
  if (!v4)
    goto LABEL_3;
LABEL_2:
  sub_1C07BFD7C();
  while (1)
  {
    sub_1C0789B14(*(_QWORD *)(v0 + 48) + *(_QWORD *)(v8 + 72) * v11, v3);
    sub_1C08A5FD4(v3, v1);
    sub_1C0A7E500();
    sub_1C0781B18(v2);
    if (v4)
      goto LABEL_2;
LABEL_3:
    v12 = v6 + 1;
    if (__OFADD__(v6, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v12 >= v5)
      goto LABEL_23;
    ++v6;
    if (!*(_QWORD *)(v22 + 8 * v12))
    {
      sub_1C08A6234();
      if (v13 == v14)
        goto LABEL_23;
      sub_1C08A5F24();
      if (!v16)
      {
        v6 = v15 + 2;
        if (v15 + 2 >= v5)
          goto LABEL_23;
        sub_1C08A5F24();
        if (!v17)
        {
          sub_1C08A6228();
          if (v13 == v14)
            goto LABEL_23;
          sub_1C08A5F24();
          if (!v19)
            break;
        }
      }
    }
LABEL_20:
    sub_1C08A6078();
  }
  if (v18 + 4 >= v5)
  {
LABEL_23:
    sub_1C077AF1C();
    sub_1C0776760();
    return;
  }
  sub_1C08A6144();
  if (v21)
  {
    v6 = v20;
    goto LABEL_20;
  }
  while (1)
  {
    v6 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v6 >= v5)
      goto LABEL_23;
    ++v20;
    if (*(_QWORD *)(v22 + 8 * v6))
      goto LABEL_20;
  }
LABEL_25:
  __break(1u);
}

void sub_1C089F16C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t i;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  char v22;
  BOOL v23;
  uint64_t v24;
  int64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int *v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  BOOL v40;
  unint64_t v41;
  char v43;
  uint64_t v44;
  BOOL v45;
  uint64_t v46;
  char v48;
  uint64_t v49;
  uint64_t v50;
  BOOL v51;
  char v52;
  int isUniquelyReferenced_nonNull_native;
  _QWORD *v54;
  int *v55;
  _QWORD *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  BOOL v61;
  uint64_t v62;
  uint64_t v63;
  char v65;
  uint64_t v66;
  uint64_t v67;
  BOOL v68;
  uint64_t v69;
  char v71;
  uint64_t v72;
  uint64_t v73;
  BOOL v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  int64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  int64_t v85;
  unint64_t v86;
  uint64_t v87;
  uint64_t v88;
  unint64_t v89;
  unint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  _QWORD *v97;
  uint64_t v98;
  uint64_t v99;

  sub_1C0779670();
  v4 = v3;
  sub_1C077AF90();
  v94 = type metadata accessor for OntologyTriple();
  v82 = *(_QWORD *)(v94 - 8);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v5);
  sub_1C0780698();
  MEMORY[0x1E0C80A78](v6);
  sub_1C0790738();
  MEMORY[0x1E0C80A78](v7);
  v89 = (unint64_t)&v78 - v8;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v9);
  v92 = (uint64_t)&v78 - v10;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v11);
  v81 = (uint64_t)&v78 - v12;
  v13 = 0;
  v83 = v0;
  v14 = *(_QWORD *)(v0 + 56);
  v78 = v0 + 56;
  v15 = 1 << *(_BYTE *)(v0 + 32);
  if (v15 < 64)
    v16 = ~(-1 << v15);
  else
    v16 = -1;
  v17 = v16 & v14;
  v79 = (unint64_t)(v15 + 63) >> 6;
  v80 = v2;
  if (!v17)
    goto LABEL_6;
LABEL_5:
  v84 = (v17 - 1) & v17;
  v85 = v13;
  for (i = __clz(__rbit64(v17)) | (v13 << 6); ; i = __clz(__rbit64(v20)) + (v21 << 6))
  {
    v27 = *(_QWORD *)(v83 + 48);
    v93 = *(_QWORD *)(v82 + 72);
    v28 = v81;
    sub_1C079CC24(v27 + v93 * i, v81);
    v29 = v92;
    sub_1C07E05F4(v28, v92, (uint64_t (*)(_QWORD))type metadata accessor for OntologyTriple);
    sub_1C07A23F8();
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    sub_1C077AE90();
    sub_1C07888B4();
    sub_1C077960C();
    v30 = (int *)v94;
    v31 = v29 + *(int *)(v94 + 20);
    sub_1C0779688();
    sub_1C0794BAC(&qword_1ED75EA28, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3CC50], MEMORY[0x1E0D3CC68]);
    v33 = v32;
    v90 = v31;
    sub_1C08A5FF0();
    v34 = (_QWORD *)(v29 + v30[6]);
    sub_1C0778624();
    sub_1C079B4B8();
    sub_1C0775834();
    v88 = v29 + v30[7];
    v86 = v33;
    sub_1C08A5FF0();
    v35 = *(_QWORD *)(v29 + v30[8] + 8);
    v87 = v29 + v30[8];
    sub_1C0778624();
    sub_1C079B4B8();
    sub_1C0775834();
    sub_1C07AC0A0();
    sub_1C07ABA40();
    sub_1C08A6240();
    if ((v37 & 1) != 0)
    {
      v91 = ~v36;
      do
      {
        v2 = (uint64_t)v4;
        sub_1C079CC24(v4[6] + v33 * v93, v1);
        sub_1C07B1CE0();
        v40 = v40 && v38 == v39;
        if (!v40 && (sub_1C07785B0() & 1) == 0)
          goto LABEL_57;
        sub_1C0794BAC(&qword_1ED75E7E0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3CC50], MEMORY[0x1E0D3CC80]);
        sub_1C077FD98();
        v41 = v90;
        sub_1C077FD98();
        sub_1C07804A4();
        if (v40 && v41 == v35)
        {
          sub_1C0782990();
        }
        else
        {
          v43 = sub_1C07785B0();
          sub_1C077960C();
          sub_1C0775834();
          if ((v43 & 1) == 0)
            goto LABEL_57;
        }
        v45 = sub_1C08A61E0() == *v34 && v44 == v34[1];
        if (!v45 && (sub_1C07785B0() & 1) == 0)
          goto LABEL_57;
        sub_1C08A61F4();
        sub_1C077FD98();
        v46 = v88;
        sub_1C077FD98();
        sub_1C07804A4();
        if (v40 && v46 == v35)
        {
          sub_1C0782990();
        }
        else
        {
          v48 = sub_1C07785B0();
          sub_1C077960C();
          sub_1C0775834();
          if ((v48 & 1) == 0)
            goto LABEL_57;
        }
        sub_1C07B1CE0();
        v51 = v40 && v49 == v50;
        if (v51 || (sub_1C07785B0() & 1) != 0)
        {
          sub_1C08A5FF8(v1);
          v4 = (_QWORD *)v2;
          goto LABEL_98;
        }
LABEL_57:
        sub_1C08A5FF8(v1);
        sub_1C07B6490();
        v4 = (_QWORD *)v2;
      }
      while ((v52 & 1) != 0);
    }
    sub_1C077E584();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    sub_1C079CC24(v92, v89);
    v97 = v4;
    v2 = v80;
    if (v4[3] > v4[2])
    {
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        sub_1C0A887D4();
      goto LABEL_96;
    }
    if (isUniquelyReferenced_nonNull_native)
      sub_1C0A82B38();
    else
      sub_1C0A8B5E4();
    v54 = v97;
    sub_1C07A23F8();
    v33 = v89;
    sub_1C0778624();
    sub_1C079B4B8();
    sub_1C0775834();
    v55 = (int *)v94;
    v90 = v33 + *(int *)(v94 + 20);
    sub_1C08A6294();
    v88 = v33 + v55[6];
    sub_1C0778624();
    sub_1C079B4B8();
    sub_1C0775834();
    v87 = v33 + v55[7];
    sub_1C08A6294();
    v86 = v33 + v55[8];
    sub_1C0778624();
    sub_1C079B4B8();
    sub_1C0775834();
    sub_1C07AC0A0();
    sub_1C07ABA40();
    v91 = (uint64_t)v54;
    v56 = v54 + 7;
    if (((*(_QWORD *)((char *)v54 + ((v33 >> 3) & 0xFFFFFFFFFFFFF8) + 56) >> v33) & 1) != 0)
    {
      do
      {
        v57 = sub_1C07B6A7C();
        sub_1C079CC24(v57, v58);
        sub_1C07B1CE0();
        v61 = v40 && v59 == v60;
        if (!v61 && (sub_1C07785B0() & 1) == 0)
          goto LABEL_95;
        sub_1C0794BAC(&qword_1ED75E7E0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3CC50], MEMORY[0x1E0D3CC80]);
        v63 = v62;
        sub_1C0781050();
        sub_1C0781050();
        if (v98 == v95 && v99 == v96)
        {
          sub_1C0782990();
        }
        else
        {
          v65 = sub_1C07785B0();
          sub_1C077960C();
          swift_bridgeObjectRelease();
          if ((v65 & 1) == 0)
            goto LABEL_95;
        }
        sub_1C07B1CE0();
        v68 = v40 && v66 == v67;
        if (!v68 && (sub_1C07785B0() & 1) == 0)
          goto LABEL_95;
        sub_1C08A6208();
        sub_1C0781050();
        v69 = v87;
        sub_1C0781050();
        sub_1C07804A4();
        if (v40 && v69 == v63)
        {
          sub_1C0782990();
        }
        else
        {
          v71 = sub_1C07785B0();
          sub_1C077960C();
          sub_1C0775834();
          if ((v71 & 1) == 0)
            goto LABEL_95;
        }
        sub_1C07B1CE0();
        v74 = v40 && v72 == v73;
        if (v74 || (sub_1C07785B0() & 1) != 0)
          goto LABEL_104;
LABEL_95:
        sub_1C08A5FF8(v2);
        sub_1C07AC344();
      }
      while (((*(_QWORD *)((char *)v56 + v75) >> v33) & 1) != 0);
    }
LABEL_96:
    v4 = v97;
    sub_1C08A612C((uint64_t)v97 + ((v33 >> 3) & 0xFFFFFFFFFFFFFF8));
    sub_1C07E05F4(v89, v4[6] + v33 * v93, (uint64_t (*)(_QWORD))type metadata accessor for OntologyTriple);
    v76 = v4[2];
    v23 = __OFADD__(v76, 1);
    v77 = v76 + 1;
    if (v23)
      break;
    v4[2] = v77;
LABEL_98:
    swift_bridgeObjectRelease();
    sub_1C08A5FF8(v92);
    v13 = v85;
    v17 = v84;
    if (v84)
      goto LABEL_5;
LABEL_6:
    v19 = v13 + 1;
    if (__OFADD__(v13, 1))
      goto LABEL_102;
    if (v19 >= v79)
    {
LABEL_100:
      swift_release();
      sub_1C0776760();
      return;
    }
    v20 = *(_QWORD *)(v78 + 8 * v19);
    v21 = v13 + 1;
    if (!v20)
    {
      sub_1C0786D60();
      if (v22 == v23)
        goto LABEL_100;
      sub_1C08A5EAC();
      if (!v20)
      {
        sub_1C0786D60();
        if (v22 == v23)
          goto LABEL_100;
        sub_1C08A5EAC();
        if (!v20)
        {
          sub_1C0786D60();
          if (v22 == v23)
            goto LABEL_100;
          sub_1C08A5EAC();
          if (!v20)
          {
            v25 = v24 + 4;
            if (v25 >= v79)
              goto LABEL_100;
            v20 = *(_QWORD *)(v78 + 8 * v25);
            if (v20)
            {
              v21 = v25;
              goto LABEL_25;
            }
            while (!__OFADD__(v25, 1))
            {
              sub_1C0786D60();
              if (v22 == v23)
                goto LABEL_100;
              sub_1C08A5EAC();
              v25 = v26 + 1;
              if (v20)
                goto LABEL_25;
            }
            goto LABEL_103;
          }
        }
      }
    }
LABEL_25:
    v84 = (v20 - 1) & v20;
    v85 = v21;
  }
  __break(1u);
LABEL_102:
  __break(1u);
LABEL_103:
  __break(1u);
LABEL_104:
  sub_1C08A5D1C(v2, (uint64_t (*)(_QWORD))type metadata accessor for OntologyTriple);
  sub_1C1070D38();
  __break(1u);
}

void sub_1C089F924(uint64_t a1, uint64_t a2)
{
  sub_1C089F93C(a1, a2, (void (*)(_QWORD))MEMORY[0x1E0CB0870]);
}

void sub_1C089F930(uint64_t a1, uint64_t a2)
{
  sub_1C089F93C(a1, a2, (void (*)(_QWORD))MEMORY[0x1E0D3CE28]);
}

void sub_1C089F93C(uint64_t a1, uint64_t a2, void (*a3)(_QWORD))
{
  *(_QWORD *)(a1 + 16) = a2;
  *(_QWORD *)(a1 + 24) = 2 * a2;
  a3(0);
  sub_1C0779D28();
  sub_1C0778534();
}

uint64_t sub_1C089F978(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 16) = a2;
  *(_QWORD *)(result + 24) = 2 * a2;
  return result;
}

#error "1C089F9B8: call analysis failed (funcsize=15)"

#error "1C089F9F4: call analysis failed (funcsize=15)"

uint64_t sub_1C089FA00()
{
  return sub_1C08A01B8();
}

uint64_t sub_1C089FA1C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;

  sub_1C079FD60();
  sub_1C078DEFC();
  sub_1C08A07E8();
  sub_1C079E358(v0, v1, v2, v3, v4, v5, v6, v7, v9, v10);
  return sub_1C07A37E0();
}

uint64_t sub_1C089FA78()
{
  return sub_1C089FAA0();
}

uint64_t sub_1C089FA8C()
{
  return sub_1C089FAA0();
}

uint64_t sub_1C089FAA0()
{
  uint64_t *v0;
  uint64_t v2;

  sub_1C079FC8C();
  sub_1C079FD60();
  v2 = *v0;
  *v0 = 0x8000000000000000;
  sub_1C08A2840();
  *v0 = v2;
  return sub_1C0798494();
}

uint64_t sub_1C089FB0C()
{
  char v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;

  sub_1C0790F04();
  v1 = v0;
  sub_1C079FD60();
  v2 = sub_1C07B6638();
  v6 = sub_1C08A08D8(v2, v3, v4, v5, v1);
  sub_1C079E358(v6, v7, v8, v9, v10, v11, v12, v13, v15, v16);
  return sub_1C079A8A4();
}

uint64_t sub_1C089FB58()
{
  return sub_1C089FC08();
}

uint64_t sub_1C089FB7C()
{
  return sub_1C089FBA0();
}

uint64_t sub_1C089FBA0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;

  sub_1C0790F04();
  sub_1C077D8AC();
  sub_1C079FD60();
  sub_1C08A5F04();
  sub_1C08A636C();
  sub_1C08A213C();
  sub_1C07BC0D0(v0, v1, v2, v3, v4, v5, v6, v7, v9, v10);
  return sub_1C079A8A4();
}

uint64_t sub_1C089FBE4()
{
  return sub_1C089FC08();
}

uint64_t sub_1C089FC08()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;

  sub_1C0790F04();
  sub_1C077D8AC();
  sub_1C079FD60();
  sub_1C08A5F04();
  sub_1C08A636C();
  sub_1C08A1ED8();
  sub_1C07BC0D0(v0, v1, v2, v3, v4, v5, v6, v7, v9, v10);
  return sub_1C079A8A4();
}

uint64_t sub_1C089FC4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C08A038C(a1, a2, a3, sub_1C08A0AB8);
}

uint64_t sub_1C089FC58(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;

  sub_1C079FD60();
  v15 = *v2;
  *v2 = 0x8000000000000000;
  sub_1C08A0B7C(a1, a2);
  sub_1C079E358(v5, v6, v7, v8, v9, v10, v11, v12, v14, v15);
  return sub_1C07961E8();
}

uint64_t sub_1C089FCAC()
{
  return sub_1C089FAA0();
}

#error "1C089FD00: call analysis failed (funcsize=19)"

uint64_t sub_1C089FD0C()
{
  return sub_1C089FAA0();
}

uint64_t sub_1C089FD20()
{
  return sub_1C089FAA0();
}

#error "1C089FD64: call analysis failed (funcsize=15)"

uint64_t sub_1C089FD70()
{
  return sub_1C089FAA0();
}

#error "1C089FDB8: call analysis failed (funcsize=16)"

uint64_t sub_1C089FDC4()
{
  return sub_1C089FF20();
}

uint64_t sub_1C089FDE8(uint64_t a1, double a2)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;

  v5 = sub_1C079FD60();
  v16 = *v2;
  *v2 = 0x8000000000000000;
  sub_1C08A12FC(a1, a2, v5, (void (*)(void))sub_1C07DD074, (uint64_t)&qword_1EF6331C0, &qword_1EF6331C8, (void (*)(uint64_t, uint64_t, uint64_t, double))sub_1C07DFCD4);
  sub_1C079E358(v6, v7, v8, v9, v10, v11, v12, v13, v15, v16);
  return sub_1C07A37E0();
}

uint64_t sub_1C089FE6C()
{
  id v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;

  sub_1C079FD60();
  sub_1C07A44BC();
  v0 = sub_1C08A0F30();
  sub_1C079E358((uint64_t)v0, v1, v2, v3, v4, v5, v6, v7, v9, v10);
  return sub_1C07961E8();
}

uint64_t sub_1C089FEA4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;

  sub_1C079FD60();
  v0 = sub_1C07A44BC();
  sub_1C08A11D0(v0, v1);
  sub_1C079E358(v2, v3, v4, v5, v6, v7, v8, v9, v11, v12);
  return sub_1C07961E8();
}

uint64_t sub_1C089FEDC(uint64_t a1, uint64_t a2)
{
  return sub_1C08A0060(a1, a2, sub_1C08A13F8);
}

uint64_t sub_1C089FEE8()
{
  return sub_1C089FAA0();
}

uint64_t sub_1C089FEFC()
{
  return sub_1C089FF20();
}

uint64_t sub_1C089FF20()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;

  sub_1C077AEA0();
  sub_1C079FD60();
  sub_1C078DEFC();
  sub_1C08A14E4();
  sub_1C07BC0D0(v0, v1, v2, v3, v4, v5, v6, v7, v9, v10);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C089FFA4()
{
  return sub_1C089FAA0();
}

uint64_t sub_1C089FFB8(uint64_t a1, uint64_t a2)
{
  return sub_1C08A0060(a1, a2, sub_1C08A1608);
}

uint64_t sub_1C089FFC4()
{
  return sub_1C089FAA0();
}

uint64_t sub_1C089FFD8()
{
  return sub_1C089FAA0();
}

#error "1C08A0020: call analysis failed (funcsize=16)"

uint64_t sub_1C08A002C()
{
  return sub_1C089FAA0();
}

uint64_t sub_1C08A0040()
{
  return sub_1C089FAA0();
}

uint64_t sub_1C08A0054(uint64_t a1, uint64_t a2)
{
  return sub_1C08A0060(a1, a2, sub_1C08A1938);
}

#error "1C08A0094: call analysis failed (funcsize=16)"

uint64_t sub_1C08A00A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;

  sub_1C0790F04();
  v1 = v0;
  sub_1C079FD60();
  v2 = sub_1C07B6638();
  v6 = sub_1C08A1AAC(v2, v3, v4, v5, v1);
  sub_1C079E358(v6, v7, v8, v9, v10, v11, v12, v13, v15, v16);
  return sub_1C079A8A4();
}

#error "1C08A011C: call analysis failed (funcsize=15)"

uint64_t sub_1C08A0128()
{
  uint64_t v0;
  __int128 *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;

  sub_1C079FD60();
  v0 = sub_1C07A44BC();
  v2 = sub_1C08A1CC0(v0, v1);
  sub_1C079E358(v2, v3, v4, v5, v6, v7, v8, v9, v11, v12);
  return sub_1C07961E8();
}

uint64_t sub_1C08A0160()
{
  return sub_1C089FAA0();
}

uint64_t sub_1C08A0174()
{
  return sub_1C089FAA0();
}

uint64_t sub_1C08A0188()
{
  return sub_1C089FAA0();
}

uint64_t sub_1C08A019C()
{
  return sub_1C08A01B8();
}

uint64_t sub_1C08A01B8()
{
  _QWORD *v0;
  void (*v1)(uint64_t);
  void (*v2)(uint64_t);
  uint64_t v3;
  uint64_t v5;

  sub_1C0790F04();
  v2 = v1;
  sub_1C079FD60();
  v3 = sub_1C07AFC94();
  v2(v3);
  *v0 = v5;
  return sub_1C079A8A4();
}

uint64_t sub_1C08A020C()
{
  return sub_1C08A01B8();
}

uint64_t sub_1C08A0228()
{
  return sub_1C089FAA0();
}

uint64_t sub_1C08A023C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;

  sub_1C079FD60();
  sub_1C078DEFC();
  sub_1C08A1FA4(a1, a2);
  sub_1C079E358(v4, v5, v6, v7, v8, v9, v10, v11, v13, v14);
  return sub_1C07961E8();
}

uint64_t sub_1C08A0280()
{
  return sub_1C08A01B8();
}

uint64_t sub_1C08A029C()
{
  return sub_1C08A01B8();
}

uint64_t sub_1C08A02B8()
{
  return sub_1C089FAA0();
}

uint64_t sub_1C08A02CC()
{
  return sub_1C089FAA0();
}

uint64_t sub_1C08A02E0()
{
  return sub_1C089FAA0();
}

uint64_t sub_1C08A02F4()
{
  return sub_1C08A01B8();
}

uint64_t sub_1C08A0310()
{
  return sub_1C089FAA0();
}

uint64_t sub_1C08A0324()
{
  return sub_1C08A01B8();
}

uint64_t sub_1C08A0340()
{
  return sub_1C08A01B8();
}

uint64_t sub_1C08A035C()
{
  return sub_1C089FBA0();
}

uint64_t sub_1C08A0380(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C08A038C(a1, a2, a3, sub_1C08A2250);
}

#error "1C08A03E0: call analysis failed (funcsize=24)"

uint64_t sub_1C08A03EC()
{
  return sub_1C08A01B8();
}

uint64_t sub_1C08A0408(uint64_t a1, uint64_t a2)
{
  return sub_1C08A0060(a1, a2, sub_1C08A238C);
}

uint64_t sub_1C08A0414()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;

  sub_1C079FD60();
  v0 = sub_1C07A44BC();
  sub_1C08A2494(v0, v1);
  sub_1C079E358(v2, v3, v4, v5, v6, v7, v8, v9, v11, v12);
  return sub_1C07961E8();
}

uint64_t sub_1C08A044C()
{
  return sub_1C08A01B8();
}

uint64_t sub_1C08A0468()
{
  return sub_1C08A0530();
}

uint64_t sub_1C08A0484()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;

  sub_1C079FD60();
  v0 = (_QWORD *)sub_1C07A44BC();
  sub_1C08A25D8(v0, v1);
  sub_1C079E358(v2, v3, v4, v5, v6, v7, v8, v9, v11, v12);
  return sub_1C07961E8();
}

uint64_t sub_1C08A04BC(uint64_t a1, uint64_t a2)
{
  return sub_1C08A0060(a1, a2, sub_1C08A2738);
}

uint64_t sub_1C08A04C8()
{
  return sub_1C089FAA0();
}

uint64_t sub_1C08A04DC()
{
  __int128 *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;

  sub_1C079FD60();
  v0 = (__int128 *)sub_1C07A44BC();
  sub_1C08A293C(v0, v1);
  sub_1C079E358(v2, v3, v4, v5, v6, v7, v8, v9, v11, v12);
  return sub_1C07961E8();
}

uint64_t sub_1C08A0514()
{
  return sub_1C08A0530();
}

uint64_t sub_1C08A0530()
{
  _QWORD *v0;
  uint64_t v2;

  sub_1C0790F04();
  sub_1C079FD60();
  sub_1C07AFC94();
  sub_1C08A2AA8();
  *v0 = v2;
  return sub_1C079A8A4();
}

uint64_t sub_1C08A0588()
{
  return sub_1C08A01B8();
}

uint64_t sub_1C08A05A4()
{
  return sub_1C08A01B8();
}

_OWORD *sub_1C08A05C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  char v12;
  _OWORD *v13;
  _OWORD *v14;
  _OWORD *result;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;

  sub_1C077B61C();
  v2 = v1;
  v4 = v3;
  sub_1C07BC684(v3, v5, v1);
  sub_1C0788BBC();
  if (v8)
  {
    __break(1u);
LABEL_10:
    result = (_OWORD *)sub_1C1070D44();
    __break(1u);
    return result;
  }
  v9 = v6;
  v10 = v7;
  sub_1C07ACF80(&qword_1ED758E38);
  if ((sub_1C07AA6E0() & 1) != 0)
  {
    sub_1C08A5E58();
    sub_1C0775978();
    if (!v12)
      goto LABEL_10;
    v9 = v11;
  }
  if ((v10 & 1) != 0)
  {
    _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0(*(_QWORD *)(*(_QWORD *)v0 + 56) + 32 * v9);
    v13 = (_OWORD *)sub_1C077CEF4();
    return sub_1C07C010C(v13, v14);
  }
  else
  {
    v16 = sub_1C08A5F84();
    sub_1C07DF9EC(v16, v17, v2, v4, v18);
    return (_OWORD *)sub_1C07B4030();
  }
}

uint64_t sub_1C08A068C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v8;
  unint64_t v9;
  char v10;
  unint64_t v11;
  char v12;
  unint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t result;

  v4 = v3;
  v8 = *v3;
  v9 = sub_1C077D774(a2, a3);
  if (__OFADD__(*(_QWORD *)(v8 + 16), (v10 & 1) == 0))
  {
    __break(1u);
    goto LABEL_9;
  }
  v11 = v9;
  v12 = v10;
  sub_1C07ACF80(&qword_1ED751308);
  if ((sub_1C107090C() & 1) == 0)
    goto LABEL_5;
  v13 = sub_1C077D774(a2, a3);
  if ((v12 & 1) != (v14 & 1))
  {
LABEL_9:
    result = sub_1C1070D44();
    __break(1u);
    return result;
  }
  v11 = v13;
LABEL_5:
  v15 = *v4;
  if ((v12 & 1) != 0)
    return sub_1C08A5BF8(a1, *(_QWORD *)(v15 + 56) + 8 * v11);
  sub_1C07DFA20(v11, a2, a3, a1, v15);
  return _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
}

void sub_1C08A079C()
{
  sub_1C08A2098();
}

void sub_1C08A07B0()
{
  sub_1C077BFAC();
}

void sub_1C08A07C4()
{
  sub_1C08A213C();
}

void sub_1C08A07E8()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  char v8;
  char v9;
  unint64_t v10;
  char v11;
  unint64_t v12;
  char v13;
  uint64_t v14;

  sub_1C0790F04();
  v2 = v1;
  v4 = v3;
  v6 = v5;
  sub_1C077D774(v3, v1);
  sub_1C0788BBC();
  if (v9)
  {
    __break(1u);
LABEL_10:
    sub_1C1070D44();
    __break(1u);
    return;
  }
  v10 = v7;
  v11 = v8;
  sub_1C07ACF80(&qword_1ED760850);
  if ((sub_1C07AC72C() & 1) != 0)
  {
    sub_1C077D774(v4, v2);
    sub_1C0789DBC();
    if (!v13)
      goto LABEL_10;
    v10 = v12;
  }
  v14 = *v0;
  if ((v11 & 1) != 0)
  {
    *(_QWORD *)(*(_QWORD *)(v14 + 56) + 8 * v10) = v6;
  }
  else
  {
    sub_1C07DF97C(v10, v4, v2, v14);
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  }
}

unint64_t sub_1C08A08D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  _QWORD *v5;
  _QWORD **v6;
  _QWORD *v12;
  unint64_t v13;
  char v14;
  unint64_t v15;
  char v16;
  unint64_t result;
  char v18;
  _QWORD *v19;
  uint64_t *v20;

  v6 = (_QWORD **)v5;
  v12 = (_QWORD *)*v5;
  v13 = sub_1C07DCCD4(a5);
  if (__OFADD__(v12[2], (v14 & 1) == 0))
  {
    __break(1u);
    goto LABEL_9;
  }
  v15 = v13;
  v16 = v14;
  sub_1C07ACF80(&qword_1EF6331F8);
  result = sub_1C107090C();
  if ((result & 1) == 0)
    goto LABEL_5;
  result = sub_1C07DCCD4(a5);
  if ((v16 & 1) != (v18 & 1))
  {
LABEL_9:
    result = sub_1C1070D44();
    __break(1u);
    return result;
  }
  v15 = result;
LABEL_5:
  v19 = *v6;
  if ((v16 & 1) == 0)
    return sub_1C07DFAD4(v15, a5, a1, a2, a3, a4, v19);
  v20 = (uint64_t *)(v19[7] + 32 * v15);
  *v20 = a1;
  v20[1] = a2;
  v20[2] = a3;
  v20[3] = a4;
  return result;
}

void sub_1C08A09F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  char v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  sub_1C0779670();
  sub_1C07AD5B4();
  sub_1C106D6CC();
  sub_1C077591C();
  MEMORY[0x1E0C80A78](v4);
  sub_1C079C3A4();
  sub_1C07DCDE8();
  sub_1C0788BBC();
  if (v5)
  {
    __break(1u);
LABEL_11:
    sub_1C07B6C0C();
    __break(1u);
    return;
  }
  sub_1C08A621C();
  sub_1C07ACF80(&qword_1ED7462F0);
  if ((sub_1C07AA6E0() & 1) != 0)
  {
    sub_1C08A62CC();
    sub_1C07DCDE8();
    sub_1C078DAC8();
    if (!v7)
      goto LABEL_11;
    v2 = v6;
  }
  if ((v3 & 1) != 0)
  {
    sub_1C078A98C(v0, *(_QWORD *)(*(_QWORD *)v1 + 56) + 48 * v2, &qword_1ED758C90);
  }
  else
  {
    sub_1C07AD09C();
    v8 = sub_1C078BCCC();
    sub_1C07DFB24(v8, v9, v10, v11);
  }
  sub_1C0776760();
}

uint64_t sub_1C08A0AB8()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  char v8;
  __int128 *v9;
  uint64_t v10;
  uint64_t result;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  sub_1C077B61C();
  sub_1C07BC684(v3, v4, v5);
  sub_1C0788BBC();
  if (v6)
  {
    __break(1u);
LABEL_10:
    result = sub_1C1070D44();
    __break(1u);
    return result;
  }
  sub_1C08A62E0();
  sub_1C07ACF80(&qword_1ED744890);
  if ((sub_1C07AA6E0() & 1) != 0)
  {
    sub_1C08A5E58();
    sub_1C0781D14();
    if (!v8)
      goto LABEL_10;
    v1 = v7;
  }
  if ((v2 & 1) != 0)
  {
    _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0(*(_QWORD *)(*(_QWORD *)v0 + 56) + 40 * v1);
    v9 = (__int128 *)sub_1C077CEF4();
    return sub_1C077DD60(v9, v10);
  }
  else
  {
    v12 = sub_1C08A6280();
    sub_1C07DFBC4(v12, v13, v14, v15, v16);
    return sub_1C07B4030();
  }
}

void sub_1C08A0B7C(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  unint64_t v7;
  char v8;
  unint64_t v9;
  char v10;
  unint64_t v11;
  char v12;
  uint64_t v13;

  v3 = v2;
  v6 = *v2;
  v7 = sub_1C07DCE60(a2);
  if (__OFADD__(*(_QWORD *)(v6 + 16), (v8 & 1) == 0))
  {
    __break(1u);
    goto LABEL_9;
  }
  v9 = v7;
  v10 = v8;
  sub_1C07ACF80(&qword_1EF630458);
  if ((sub_1C107090C() & 1) == 0)
    goto LABEL_5;
  v11 = sub_1C07DCE60(a2);
  if ((v10 & 1) != (v12 & 1))
  {
LABEL_9:
    type metadata accessor for PHPersonAgeType(0);
    sub_1C1070D44();
    __break(1u);
    return;
  }
  v9 = v11;
LABEL_5:
  v13 = *v3;
  if ((v10 & 1) != 0)
    *(_QWORD *)(*(_QWORD *)(v13 + 56) + 8 * v9) = a1;
  else
    sub_1C07DFBFC(v9, a2, a1, v13);
}

uint64_t sub_1C08A0C70(__int16 a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  _QWORD **v4;
  _QWORD *v8;
  unint64_t v9;
  char v10;
  unint64_t v11;
  char v12;
  uint64_t result;
  char v14;
  _QWORD *v15;

  v4 = (_QWORD **)v3;
  v8 = (_QWORD *)*v3;
  v9 = sub_1C077D774(a2, a3);
  if (__OFADD__(v8[2], (v10 & 1) == 0))
  {
    __break(1u);
    goto LABEL_9;
  }
  v11 = v9;
  v12 = v10;
  sub_1C07ACF80(&qword_1ED758E30);
  result = sub_1C107090C();
  if ((result & 1) == 0)
    goto LABEL_5;
  result = sub_1C077D774(a2, a3);
  if ((v12 & 1) != (v14 & 1))
  {
LABEL_9:
    result = sub_1C1070D44();
    __break(1u);
    return result;
  }
  v11 = result;
LABEL_5:
  v15 = *v4;
  if ((v12 & 1) != 0)
  {
    *(_WORD *)(v15[7] + 2 * v11) = a1;
  }
  else
  {
    sub_1C07DFC28(v11, a2, a3, a1, v15);
    return _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  }
  return result;
}

uint64_t sub_1C08A0D7C()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  sub_1C077B61C();
  v4 = v3;
  sub_1C07BC684(v3, v5, v6);
  sub_1C0788BBC();
  if (v7)
  {
    __break(1u);
LABEL_10:
    result = sub_1C1070D44();
    __break(1u);
    return result;
  }
  sub_1C08A62E0();
  sub_1C07ACF80(&qword_1ED7601A8);
  if ((sub_1C07AA6E0() & 1) != 0)
  {
    sub_1C08A5E58();
    sub_1C0781D14();
    if (!v9)
      goto LABEL_10;
    v1 = v8;
  }
  if ((v2 & 1) != 0)
  {
    v10 = *(_QWORD *)(*(_QWORD *)v0 + 56);
    sub_1C078784C();
    sub_1C07A7D9C();
    return (*(uint64_t (**)(uint64_t, uint64_t))(v12 + 40))(v10 + v11 * v1, v4);
  }
  else
  {
    v14 = sub_1C08A6280();
    sub_1C07DFC78(v14, v15, v16, v17, v18);
    return sub_1C07B4030();
  }
}

void sub_1C08A0E40()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  char v10;
  char v11;
  unint64_t v12;
  char v13;
  unint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t *v17;

  sub_1C0779670();
  v2 = v1;
  v4 = v3;
  v6 = v5;
  v8 = v7;
  sub_1C077D774(v3, v1);
  sub_1C0788BBC();
  if (v11)
  {
    __break(1u);
LABEL_10:
    sub_1C1070D44();
    __break(1u);
    return;
  }
  v12 = v9;
  v13 = v10;
  sub_1C07ACF80(&qword_1ED762C48);
  if ((sub_1C07A8568() & 1) != 0)
  {
    sub_1C078DAD8();
    sub_1C0781D14();
    if (!v15)
      goto LABEL_10;
    v12 = v14;
  }
  v16 = *v0;
  if ((v13 & 1) != 0)
  {
    v17 = (uint64_t *)(*(_QWORD *)(v16 + 56) + 16 * v12);
    swift_bridgeObjectRelease();
    *v17 = v8;
    v17[1] = v6;
    sub_1C0776760();
  }
  else
  {
    sub_1C07DFC84(v12, v4, v2, v8, v6, v16);
    sub_1C07937F8();
  }
}

void sub_1C08A0F0C()
{
  sub_1C08A14E4();
}

id sub_1C08A0F30()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  char v5;
  char v6;
  unint64_t v7;
  char v8;
  unint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id result;
  void *v16;

  sub_1C079FC8C();
  sub_1C07BA79C(v2, v3);
  ((void (*)())sub_1C07DD088)();
  sub_1C0788BBC();
  if (v6)
  {
    __break(1u);
LABEL_10:
    type metadata accessor for NLLanguage(0);
    result = (id)sub_1C1070D44();
    __break(1u);
    return result;
  }
  v7 = v4;
  v8 = v5;
  sub_1C07ACF80(&qword_1EF630448);
  if ((sub_1C08A5FDC() & 1) != 0)
  {
    ((void (*)())sub_1C07DD088)();
    sub_1C0789DBC();
    if (!v10)
      goto LABEL_10;
    v7 = v9;
  }
  v11 = *v1;
  if ((v8 & 1) != 0)
  {
    v12 = *(_QWORD *)(v11 + 56);
    sub_1C106AEA0();
    sub_1C07A7D9C();
    return (id)(*(uint64_t (**)(unint64_t, uint64_t))(v14 + 40))(v12 + v13 * v7, v0);
  }
  else
  {
    sub_1C07DFCD8(v7, (uint64_t)v16, v0, v11);
    return sub_1C07BFED0(v16);
  }
}

void sub_1C08A0FF4()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  char v14;
  unint64_t v15;
  char v16;
  unint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;

  sub_1C077AEA0();
  v2 = v1;
  v4 = v3;
  v21 = v5;
  v7 = v6;
  v9 = v8;
  v11 = v10;
  sub_1C077D774(v3, v1);
  sub_1C0788BBC();
  if (v14)
  {
    __break(1u);
LABEL_10:
    sub_1C1070D44();
    __break(1u);
    return;
  }
  v15 = v12;
  v16 = v13;
  sub_1C07ACF80(&qword_1EF633280);
  if ((sub_1C107090C() & 1) != 0)
  {
    sub_1C08A5F90();
    sub_1C08A6000();
    if (!v18)
      goto LABEL_10;
    v15 = v17;
  }
  v19 = *v0;
  if ((v16 & 1) != 0)
  {
    v20 = (uint64_t *)(*(_QWORD *)(v19 + 56) + 32 * v15);
    swift_bridgeObjectRelease();
    sub_1C077960C();
    sub_1C07767AC();
    *v20 = v11;
    v20[1] = v9;
    v20[2] = v7;
    v20[3] = v21;
    sub_1C0776728();
  }
  else
  {
    sub_1C07DFD58(v15, v4, v2, v11, v9, v7, v21, v19);
    sub_1C07B61EC();
  }
}

void sub_1C08A10F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  sub_1C0779670();
  sub_1C07AD5B4();
  sub_1C106E800();
  sub_1C077591C();
  MEMORY[0x1E0C80A78](v4);
  sub_1C079C3A4();
  sub_1C07DD08C();
  sub_1C0788BBC();
  if (v5)
  {
    __break(1u);
LABEL_10:
    sub_1C07B6C0C();
    __break(1u);
    return;
  }
  sub_1C08A621C();
  sub_1C07ACF80(&qword_1EF633278);
  if ((sub_1C07AA6E0() & 1) != 0)
  {
    sub_1C08A62CC();
    sub_1C07DD08C();
    sub_1C078DAC8();
    if (!v7)
      goto LABEL_10;
    v2 = v6;
  }
  if ((v3 & 1) != 0)
  {
    v8 = *(_QWORD *)(*(_QWORD *)v1 + 56);
    sub_1C078784C();
    sub_1C07A7D9C();
    (*(void (**)(uint64_t, uint64_t))(v10 + 40))(v8 + v9 * v2, v0);
  }
  else
  {
    sub_1C07AD09C();
    v11 = sub_1C078BCCC();
    sub_1C07DFDA0(v11, v12, v13, v14);
    sub_1C0776760();
  }
}

void sub_1C08A11D0(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  unint64_t v7;
  char v8;
  unint64_t v9;
  char v10;
  unint64_t v11;
  char v12;
  uint64_t v13;

  v3 = v2;
  v6 = *v2;
  v7 = sub_1C0778AEC(a2);
  if (__OFADD__(*(_QWORD *)(v6 + 16), (v8 & 1) == 0))
  {
    __break(1u);
    goto LABEL_9;
  }
  v9 = v7;
  v10 = v8;
  sub_1C07ACF80(&qword_1ED75D228);
  if ((sub_1C107090C() & 1) == 0)
    goto LABEL_5;
  v11 = sub_1C0778AEC(a2);
  if ((v10 & 1) != (v12 & 1))
  {
LABEL_9:
    sub_1C1070D44();
    __break(1u);
    return;
  }
  v9 = v11;
LABEL_5:
  v13 = *v3;
  if ((v10 & 1) != 0)
    *(_QWORD *)(*(_QWORD *)(v13 + 56) + 8 * v9) = a1;
  else
    sub_1C07DFD40(v9, a2, a1, v13);
}

void sub_1C08A12C4()
{
  sub_1C08A2098();
}

void sub_1C08A12D8(uint64_t a1, uint64_t a2, double a3)
{
  sub_1C08A12FC(a1, a3, a2, (void (*)(void))sub_1C07DD154, (uint64_t)&unk_1ED751320, &qword_1ED762B70, (void (*)(uint64_t, uint64_t, uint64_t, double))sub_1C07DFCD4);
}

void sub_1C08A12FC(uint64_t a1, double a2, uint64_t a3, void (*a4)(void), uint64_t a5, uint64_t *a6, void (*a7)(uint64_t, uint64_t, uint64_t, double))
{
  uint64_t *v7;
  uint64_t v13;
  char v14;
  char v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  char v19;
  uint64_t v20;

  a4();
  sub_1C0788BBC();
  if (v15)
  {
    __break(1u);
LABEL_10:
    sub_1C07ACF80(a6);
    sub_1C1070D44();
    __break(1u);
    return;
  }
  v16 = v13;
  v17 = v14;
  sub_1C077E1EC();
  if ((sub_1C07AC72C() & 1) != 0)
  {
    ((void (*)(uint64_t))a4)(a1);
    sub_1C0775978();
    if (!v19)
      goto LABEL_10;
    v16 = v18;
  }
  v20 = *v7;
  if ((v17 & 1) != 0)
  {
    *(double *)(*(_QWORD *)(v20 + 56) + 8 * v16) = a2;
  }
  else
  {
    a7(v16, a1, v20, a2);
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  }
}

void sub_1C08A13F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(_QWORD);
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  sub_1C0779670();
  sub_1C07AD5B4();
  sub_1C106E590();
  sub_1C077591C();
  MEMORY[0x1E0C80A78](v4);
  sub_1C079C3A4();
  sub_1C07DCD84();
  sub_1C0788BBC();
  if (v5)
  {
    __break(1u);
LABEL_11:
    sub_1C07B6C0C();
    __break(1u);
    return;
  }
  sub_1C08A621C();
  sub_1C07ACF80(&qword_1ED75D208);
  if ((sub_1C07AA6E0() & 1) != 0)
  {
    sub_1C08A62CC();
    sub_1C07DCD84();
    sub_1C078DAC8();
    if (!v7)
      goto LABEL_11;
    v2 = v6;
  }
  if ((v3 & 1) != 0)
  {
    v8 = *(_QWORD *)(*(_QWORD *)v1 + 56);
    type metadata accessor for EntityMatch(0);
    sub_1C08A615C();
    sub_1C08A5BCC(v0, v8 + v9 * v2, v10);
  }
  else
  {
    sub_1C07AD09C();
    v11 = sub_1C078BCCC();
    sub_1C07DFDF0(v11, v12, v13, v14);
  }
  sub_1C0776760();
}

void sub_1C08A14C0()
{
  sub_1C08A213C();
}

void sub_1C08A14E4()
{
  uint64_t *v0;
  uint64_t v1;
  void (*v2)(uint64_t, char *, uint64_t, uint64_t, uint64_t);
  void (*v3)(uint64_t, double);
  void (*v4)(uint64_t, double);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(_QWORD);
  uint64_t v10;
  double v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char v15;
  char v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(uint64_t, char *, uint64_t, uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;

  sub_1C0779670();
  v25 = v2;
  v26 = v1;
  v4 = v3;
  v6 = v5;
  v27 = v7;
  v24 = sub_1C08A62D8(v1, v7, v5, v8, v9);
  v10 = *(_QWORD *)(v24 - 8);
  v11 = MEMORY[0x1E0C80A78](v24);
  v13 = (char *)&v24 - v12;
  v4(v6, v11);
  sub_1C0788BBC();
  if (v16)
  {
    __break(1u);
    goto LABEL_10;
  }
  v17 = v14;
  v18 = v15;
  sub_1C0781058();
  if ((sub_1C08A617C() & 1) != 0)
  {
    v19 = ((uint64_t (*)(uint64_t))v4)(v6);
    if ((v18 & 1) == (v20 & 1))
    {
      v17 = v19;
      goto LABEL_5;
    }
LABEL_10:
    sub_1C1070D44();
    __break(1u);
    return;
  }
LABEL_5:
  v21 = *v0;
  if ((v18 & 1) != 0)
  {
    v22 = (uint64_t *)(*(_QWORD *)(v21 + 56) + 16 * v17);
    swift_bridgeObjectRelease();
    v23 = v27;
    *v22 = v26;
    v22[1] = v23;
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v13, v6, v24);
    v25(v17, v13, v26, v27, v21);
  }
  sub_1C0776760();
}

void sub_1C08A1608(__int128 *a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  char v8;
  unint64_t v9;
  char v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;

  v3 = v2;
  v6 = *v2;
  v7 = sub_1C07DCE4C(a2);
  if (__OFADD__(*(_QWORD *)(v6 + 16), (v8 & 1) == 0))
  {
    __break(1u);
    goto LABEL_9;
  }
  v9 = v7;
  v10 = v8;
  sub_1C07ACF80(&qword_1ED746300);
  if ((sub_1C107090C() & 1) == 0)
    goto LABEL_5;
  v11 = sub_1C07DCE4C(a2);
  if ((v10 & 1) != (v12 & 1))
  {
LABEL_9:
    sub_1C1070D44();
    __break(1u);
    return;
  }
  v9 = v11;
LABEL_5:
  v13 = *v3;
  if ((v10 & 1) != 0)
  {
    v14 = *(_QWORD *)(v13 + 56) + 40 * v9;
    _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0(v14);
    sub_1C077DD60(a1, v14);
  }
  else
  {
    sub_1C07DFEB0(v9, a2, (uint64_t)a1, v13);
  }
}

uint64_t sub_1C08A1710(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  _QWORD **v5;
  _QWORD *v10;
  unint64_t v11;
  char v12;
  unint64_t v13;
  char v14;
  unint64_t v15;
  char v16;
  _QWORD *v17;
  uint64_t *v18;
  uint64_t result;

  v5 = (_QWORD **)v4;
  v10 = (_QWORD *)*v4;
  v11 = sub_1C07DCF70();
  if (__OFADD__(v10[2], (v12 & 1) == 0))
  {
    __break(1u);
    goto LABEL_9;
  }
  v13 = v11;
  v14 = v12;
  sub_1C07ACF80(&qword_1EF633190);
  if ((sub_1C107090C() & 1) == 0)
    goto LABEL_5;
  v15 = sub_1C07DCF70();
  if ((v14 & 1) != (v16 & 1))
  {
LABEL_9:
    result = sub_1C1070D44();
    __break(1u);
    return result;
  }
  v13 = v15;
LABEL_5:
  v17 = *v5;
  if ((v14 & 1) != 0)
  {
    v18 = (uint64_t *)(v17[7] + 24 * v13);
    result = swift_bridgeObjectRelease();
    *v18 = a1;
    v18[1] = a2;
    v18[2] = a3;
  }
  else
  {
    sub_1C07DFEBC(v13, a4, a1, a2, a3, v17);
    return sub_1C08480D8(a4);
  }
  return result;
}

void sub_1C08A183C()
{
  sub_1C08A2098();
}

void sub_1C08A1850()
{
  sub_1C08A2098();
}

void sub_1C08A1864()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  char v6;
  _OWORD *v7;
  _OWORD *v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  sub_1C0779670();
  sub_1C07AD5B4();
  sub_1C106E41C();
  sub_1C077591C();
  MEMORY[0x1E0C80A78](v3);
  sub_1C079C3A4();
  sub_1C07DCC70();
  sub_1C0788BBC();
  if (v4)
  {
    __break(1u);
LABEL_10:
    sub_1C07B6C0C();
    __break(1u);
    return;
  }
  sub_1C08A621C();
  sub_1C07ACF80(&qword_1EF633228);
  if ((sub_1C07AA6E0() & 1) != 0)
  {
    sub_1C08A62CC();
    sub_1C07DCC70();
    sub_1C078DAC8();
    if (!v6)
      goto LABEL_10;
    v1 = v5;
  }
  if ((v2 & 1) != 0)
  {
    _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0(*(_QWORD *)(*(_QWORD *)v0 + 56) + 32 * v1);
    v7 = (_OWORD *)sub_1C077CEF4();
    sub_1C07C010C(v7, v8);
  }
  else
  {
    sub_1C07AD09C();
    v9 = sub_1C078BCCC();
    sub_1C07DFF80(v9, v10, v11, v12);
    sub_1C0776760();
  }
}

void sub_1C08A1938(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v3 = v2;
  v6 = sub_1C106E590();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *v2;
  sub_1C07DCD84();
  if (__OFADD__(*(_QWORD *)(v10 + 16), (v12 & 1) == 0))
  {
    __break(1u);
    goto LABEL_9;
  }
  v13 = v11;
  v14 = v12;
  sub_1C07ACF80(&qword_1ED755020);
  if ((sub_1C107090C() & 1) == 0)
    goto LABEL_5;
  sub_1C07DCD84();
  if ((v14 & 1) != (v16 & 1))
  {
LABEL_9:
    sub_1C1070D44();
    __break(1u);
    return;
  }
  v13 = v15;
LABEL_5:
  v17 = *v3;
  if ((v14 & 1) != 0)
  {
    v18 = *(_QWORD *)(v17 + 56);
    v19 = sub_1C106AE28();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 40))(v18 + *(_QWORD *)(*(_QWORD *)(v19 - 8) + 72) * v13, a1, v19);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a2, v6);
    sub_1C07DFFC8(v13, (uint64_t)v9, a1, v17);
  }
}

uint64_t sub_1C08A1AAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t *v5;
  uint64_t *v6;
  uint64_t v12;
  uint64_t v13;
  char v14;
  unint64_t v15;
  char v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;

  v6 = v5;
  v12 = *v5;
  v13 = sub_1C07DD1C0(a2, a3, a4, a5);
  if (__OFADD__(*(_QWORD *)(v12 + 16), (v14 & 1) == 0))
  {
    __break(1u);
    goto LABEL_9;
  }
  v15 = v13;
  v16 = v14;
  sub_1C07ACF80(&qword_1ED748118);
  if ((sub_1C107090C() & 1) == 0)
    goto LABEL_5;
  v17 = sub_1C07DD1C0(a2, a3, a4, a5);
  if ((v16 & 1) != (v18 & 1))
  {
LABEL_9:
    result = sub_1C1070D44();
    __break(1u);
    return result;
  }
  v15 = v17;
LABEL_5:
  v19 = *v6;
  if ((v16 & 1) != 0)
  {
    v20 = *(_QWORD *)(v19 + 56);
    v21 = sub_1C106EB24();
    return (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 40))(v20 + *(_QWORD *)(*(_QWORD *)(v21 - 8) + 72) * v15, a1, v21);
  }
  else
  {
    sub_1C07E0054(v15, a2, a3, a4, a5, a1, v19);
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    return _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  }
}

void sub_1C08A1C08()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;

  sub_1C077B61C();
  v2 = v1;
  v4 = v3;
  sub_1C07BC684(v3, v5, v1);
  sub_1C0788BBC();
  if (v8)
  {
    __break(1u);
LABEL_10:
    sub_1C1070D44();
    __break(1u);
    return;
  }
  v9 = v6;
  v10 = v7;
  sub_1C07ACF80(&qword_1ED75D860);
  if ((sub_1C07AA6E0() & 1) != 0)
  {
    v11 = sub_1C07AB6F8();
    sub_1C077D774(v11, v12);
    sub_1C0775978();
    if (!v14)
      goto LABEL_10;
    v9 = v13;
  }
  if ((v10 & 1) != 0)
  {
    *(_QWORD *)(*(_QWORD *)(*(_QWORD *)v0 + 56) + 8 * v9) = v4;
    sub_1C077C798();
  }
  else
  {
    v15 = sub_1C08A5F84();
    sub_1C077CA78(v15, v16, v2, v4, v17);
    sub_1C07B4030();
  }
}

uint64_t sub_1C08A1CC0(uint64_t a1, __int128 *a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  unint64_t v7;
  char v8;
  unint64_t v9;
  char v10;
  uint64_t result;
  char v12;
  uint64_t v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;

  v3 = v2;
  v6 = *v2;
  v7 = sub_1C07DD2A4();
  if (__OFADD__(*(_QWORD *)(v6 + 16), (v8 & 1) == 0))
  {
    __break(1u);
    goto LABEL_10;
  }
  v9 = v7;
  v10 = v8;
  sub_1C07ACF80(&qword_1EF633210);
  result = sub_1C107090C();
  if ((result & 1) == 0)
    goto LABEL_5;
  result = sub_1C07DD2A4();
  if ((v10 & 1) != (v12 & 1))
  {
LABEL_10:
    result = sub_1C1070D44();
    __break(1u);
    return result;
  }
  v9 = result;
LABEL_5:
  v13 = *v3;
  if ((v10 & 1) != 0)
  {
    *(_QWORD *)(*(_QWORD *)(v13 + 56) + 8 * v9) = a1;
  }
  else
  {
    v14 = *a2;
    v16 = a2[1];
    v17 = v14;
    v15 = a2[2];
    sub_1C07E0118(v9, (uint64_t)a2, a1, v13);
    sub_1C07B35DC((uint64_t)&v17);
    sub_1C07B35DC((uint64_t)&v16);
    return sub_1C07B35DC((uint64_t)&v15);
  }
  return result;
}

void sub_1C08A1DD4()
{
  sub_1C08A2098();
}

void sub_1C08A1DE8()
{
  sub_1C08A2098();
}

void sub_1C08A1DFC()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;
  char v8;
  unint64_t v9;
  char v10;
  unint64_t v11;
  char v12;
  uint64_t v13;

  sub_1C077B61C();
  v5 = sub_1C07BA60C(v3, v4);
  sub_1C077DEC0(v5);
  sub_1C0788BBC();
  if (v8)
  {
    __break(1u);
LABEL_10:
    sub_1C1070D44();
    __break(1u);
    return;
  }
  v9 = v6;
  v10 = v7;
  sub_1C07ACF80(&qword_1EF633268);
  if ((sub_1C07AC72C() & 1) != 0)
  {
    sub_1C077DEC0(v2);
    sub_1C0789DBC();
    if (!v12)
      goto LABEL_10;
    v9 = v11;
  }
  v13 = *v1;
  if ((v10 & 1) != 0)
  {
    *(_QWORD *)(*(_QWORD *)(v13 + 56) + 8 * v9) = v0;
    sub_1C077C798();
  }
  else
  {
    sub_1C07E0158(v9, v2, v0, v13);
  }
}

void sub_1C08A1EB4()
{
  sub_1C08A1ED8();
}

void sub_1C08A1ED8()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  void (*v5)(uint64_t, uint64_t, uint64_t, uint64_t);
  void (*v6)(uint64_t);
  void (*v7)(uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t);
  char v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t, uint64_t, uint64_t, uint64_t);

  sub_1C077AEA0();
  v17 = v5;
  v7 = v6;
  v10 = sub_1C07BA60C(v8, v9);
  v11(v10);
  sub_1C0788BBC();
  if (v12)
  {
    __break(1u);
LABEL_10:
    sub_1C1070D44();
    __break(1u);
    return;
  }
  sub_1C08A62E0();
  sub_1C077E1EC();
  if ((sub_1C07AC72C() & 1) != 0)
  {
    v7(v2);
    sub_1C0781D14();
    if (!v14)
      goto LABEL_10;
    v3 = v13;
  }
  v15 = *v1;
  if ((v4 & 1) != 0)
  {
    v16 = *(_QWORD *)(v15 + 56);
    swift_bridgeObjectRelease();
    *(_QWORD *)(v16 + 8 * v3) = v0;
    sub_1C0776728();
  }
  else
  {
    v17(v3, v2, v0, v15);
  }
}

void sub_1C08A1FA4(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  char v8;
  unint64_t v9;
  char v10;
  uint64_t v11;
  char v12;
  uint64_t v13;

  v3 = v2;
  v6 = *v2;
  v7 = sub_1C07DD348(a2);
  if (__OFADD__(*(_QWORD *)(v6 + 16), (v8 & 1) == 0))
  {
    __break(1u);
    goto LABEL_9;
  }
  v9 = v7;
  v10 = v8;
  sub_1C07ACF80(&qword_1ED75D218);
  if ((sub_1C107090C() & 1) == 0)
    goto LABEL_5;
  v11 = sub_1C07DD348(a2);
  if ((v10 & 1) != (v12 & 1))
  {
LABEL_9:
    sub_1C1070D44();
    __break(1u);
    return;
  }
  v9 = v11;
LABEL_5:
  v13 = *v3;
  if ((v10 & 1) != 0)
    *(_DWORD *)(*(_QWORD *)(v13 + 56) + 4 * v9) = a1;
  else
    sub_1C07E0170(v9, a2, a1, v13);
}

void sub_1C08A2098()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  char v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  char v11;
  uint64_t v12;

  sub_1C0779670();
  v2 = v1;
  sub_1C07BC684(v1, v3, v4);
  sub_1C0788BBC();
  if (v7)
  {
    __break(1u);
LABEL_10:
    sub_1C1070D44();
    __break(1u);
    return;
  }
  v8 = v5;
  v9 = v6;
  sub_1C077E1EC();
  if ((sub_1C07A8568() & 1) != 0)
  {
    sub_1C078DAD8();
    sub_1C078DAC8();
    if (!v11)
      goto LABEL_10;
    v8 = v10;
  }
  if ((v9 & 1) != 0)
  {
    v12 = *(_QWORD *)(*(_QWORD *)v0 + 56);
    swift_bridgeObjectRelease();
    *(_QWORD *)(v12 + 8 * v8) = v2;
    sub_1C0776760();
  }
  else
  {
    sub_1C07825E0();
    sub_1C07937F8();
  }
}

void sub_1C08A213C()
{
  uint64_t *v0;
  uint64_t v1;
  void (*v2)(uint64_t, char *, uint64_t, uint64_t);
  void (*v3)(uint64_t);
  void (*v4)(uint64_t);
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(_QWORD);
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char v11;
  char v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(uint64_t);
  uint64_t v21;
  uint64_t v22;
  void (*v23)(uint64_t, char *, uint64_t, uint64_t);
  uint64_t v24;

  sub_1C0779670();
  v23 = v2;
  v24 = v1;
  v4 = v3;
  v6 = v5;
  v22 = v7(0);
  MEMORY[0x1E0C80A78](v22);
  v9 = (char *)&v21 - v8;
  v4(v6);
  sub_1C0788BBC();
  if (v12)
  {
    __break(1u);
    goto LABEL_10;
  }
  v13 = v10;
  v14 = v11;
  sub_1C079BD54();
  if ((sub_1C0780A6C() & 1) != 0)
  {
    v15 = ((uint64_t (*)(uint64_t))v4)(v6);
    if ((v14 & 1) == (v16 & 1))
    {
      v13 = v15;
      goto LABEL_5;
    }
LABEL_10:
    sub_1C1070D44();
    __break(1u);
    return;
  }
LABEL_5:
  v17 = *v0;
  if ((v14 & 1) != 0)
  {
    v18 = *(_QWORD *)(v17 + 56);
    swift_bridgeObjectRelease();
    *(_QWORD *)(v18 + 8 * v13) = v24;
  }
  else
  {
    v19 = sub_1C08A5F84();
    v20(v19);
    v23(v13, v9, v24, v17);
  }
  sub_1C0776760();
}

uint64_t sub_1C08A2250(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  _QWORD **v4;
  _QWORD *v8;
  unint64_t v9;
  char v10;
  unint64_t v11;
  char v12;
  unint64_t v13;
  char v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t result;
  __int128 v18;

  v4 = (_QWORD **)v3;
  v8 = (_QWORD *)*v3;
  v9 = sub_1C077D774(a2, a3);
  if (__OFADD__(v8[2], (v10 & 1) == 0))
  {
    __break(1u);
    goto LABEL_9;
  }
  v11 = v9;
  v12 = v10;
  sub_1C07ACF80((uint64_t *)&unk_1ED754BE0);
  if ((sub_1C107090C() & 1) == 0)
    goto LABEL_5;
  v13 = sub_1C077D774(a2, a3);
  if ((v12 & 1) != (v14 & 1))
  {
LABEL_9:
    result = sub_1C1070D44();
    __break(1u);
    return result;
  }
  v11 = v13;
LABEL_5:
  v15 = *v4;
  if ((v12 & 1) != 0)
  {
    v16 = v15[7] + 40 * v11;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    result = swift_bridgeObjectRelease();
    v18 = *(_OWORD *)(a1 + 16);
    *(_OWORD *)v16 = *(_OWORD *)a1;
    *(_OWORD *)(v16 + 16) = v18;
    *(_QWORD *)(v16 + 32) = *(_QWORD *)(a1 + 32);
  }
  else
  {
    sub_1C07E0194(v11, a2, a3, a1, v15);
    return _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  }
  return result;
}

void sub_1C08A238C(__int128 *a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  char v8;
  unint64_t v9;
  char v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;

  v3 = v2;
  v6 = *v2;
  v7 = sub_1C07DD4D8(a2);
  if (__OFADD__(*(_QWORD *)(v6 + 16), (v8 & 1) == 0))
  {
    __break(1u);
    goto LABEL_9;
  }
  v9 = v7;
  v10 = v8;
  sub_1C07ACF80(&qword_1ED7612D0);
  if ((sub_1C107090C() & 1) == 0)
    goto LABEL_5;
  v11 = sub_1C07DD4D8(a2);
  if ((v10 & 1) != (v12 & 1))
  {
LABEL_9:
    sub_1C1070D44();
    __break(1u);
    return;
  }
  v9 = v11;
LABEL_5:
  v13 = *v3;
  if ((v10 & 1) != 0)
  {
    v14 = *(_QWORD *)(v13 + 56) + 40 * v9;
    _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0(v14);
    sub_1C077DD60(a1, v14);
  }
  else
  {
    sub_1C07DFEB0(v9, a2, (uint64_t)a1, v13);
  }
}

void sub_1C08A2494(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  unint64_t v12;
  char v13;
  unint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v3 = v2;
  v6 = type metadata accessor for EntityEdge();
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *v2;
  sub_1C07DD4EC(a2);
  if (__OFADD__(*(_QWORD *)(v9 + 16), (v11 & 1) == 0))
  {
    __break(1u);
    goto LABEL_10;
  }
  v12 = v10;
  v13 = v11;
  sub_1C07ACF80(&qword_1EF6331B8);
  if ((sub_1C107090C() & 1) == 0)
    goto LABEL_5;
  sub_1C07DD4EC(a2);
  if ((v13 & 1) != (v15 & 1))
  {
LABEL_10:
    sub_1C1070D44();
    __break(1u);
    return;
  }
  v12 = v14;
LABEL_5:
  v16 = *v3;
  if ((v13 & 1) != 0)
  {
    v17 = *(_QWORD *)(v16 + 56);
    swift_bridgeObjectRelease();
    *(_QWORD *)(v17 + 8 * v12) = a1;
  }
  else
  {
    sub_1C07E05C8(a2, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for EntityEdge);
    sub_1C07E01EC(v12, (uint64_t)v8, a1, v16);
  }
}

void sub_1C08A25D8(_QWORD *a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  unint64_t v13;
  char v14;
  unint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;

  v3 = v2;
  v6 = sub_1C106E590();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *v2;
  sub_1C07DCD84();
  if (__OFADD__(*(_QWORD *)(v10 + 16), (v12 & 1) == 0))
  {
    __break(1u);
    goto LABEL_9;
  }
  v13 = v11;
  v14 = v12;
  sub_1C07ACF80(&qword_1ED744878);
  if ((sub_1C107090C() & 1) == 0)
    goto LABEL_5;
  sub_1C07DCD84();
  if ((v14 & 1) != (v16 & 1))
  {
LABEL_9:
    sub_1C1070D44();
    __break(1u);
    return;
  }
  v13 = v15;
LABEL_5:
  v17 = *v3;
  if ((v14 & 1) != 0)
  {
    sub_1C08A5B48(a1, (_QWORD *)(*(_QWORD *)(v17 + 56) + 96 * v13));
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a2, v6);
    sub_1C07E028C(v13, (uint64_t)v9, (uint64_t)a1, v17);
  }
}

void sub_1C08A2738(__int128 *a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  char v8;
  unint64_t v9;
  char v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;

  v3 = v2;
  v6 = *v2;
  v7 = sub_1C077DA14(a2);
  if (__OFADD__(*(_QWORD *)(v6 + 16), (v8 & 1) == 0))
  {
    __break(1u);
    goto LABEL_9;
  }
  v9 = v7;
  v10 = v8;
  sub_1C07ACF80(&qword_1ED758E18);
  if ((sub_1C107090C() & 1) == 0)
    goto LABEL_5;
  v11 = sub_1C077DA14(a2);
  if ((v10 & 1) != (v12 & 1))
  {
LABEL_9:
    sub_1C1070D44();
    __break(1u);
    return;
  }
  v9 = v11;
LABEL_5:
  v13 = *v3;
  if ((v10 & 1) != 0)
  {
    v14 = *(_QWORD *)(v13 + 56) + 40 * v9;
    _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0(v14);
    sub_1C077DD60(a1, v14);
  }
  else
  {
    sub_1C07DFEB0(v9, a2, (uint64_t)a1, v13);
  }
}

void sub_1C08A2840()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;
  char v6;
  char v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t);
  void (*v16)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v17;

  sub_1C0779670();
  v16 = v3;
  v17 = v2;
  v4 = sub_1C106AB28();
  MEMORY[0x1E0C80A78](v4);
  sub_1C0779614();
  sub_1C07A35E4();
  sub_1C0788BBC();
  if (v7)
  {
    __break(1u);
LABEL_11:
    sub_1C1070D44();
    __break(1u);
    return;
  }
  v8 = v5;
  v9 = v6;
  sub_1C079BD54();
  if ((sub_1C0780A6C() & 1) != 0)
  {
    sub_1C07A35E4();
    sub_1C08A6000();
    if (!v11)
      goto LABEL_11;
    v8 = v10;
  }
  v12 = *v0;
  if ((v9 & 1) != 0)
  {
    v13 = *(_QWORD *)(v12 + 56);
    swift_release();
    *(_QWORD *)(v13 + 8 * v8) = v17;
  }
  else
  {
    v14 = sub_1C08A5F84();
    v15(v14);
    v16(v8, v1, v17, v12);
  }
  sub_1C0776760();
}

void sub_1C08A293C(__int128 *a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  unint64_t v13;
  char v14;
  unint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v3 = v2;
  v6 = sub_1C106AB28();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *v2;
  sub_1C07A35E4();
  if (__OFADD__(*(_QWORD *)(v10 + 16), (v12 & 1) == 0))
  {
    __break(1u);
    goto LABEL_9;
  }
  v13 = v11;
  v14 = v12;
  sub_1C07ACF80(&qword_1ED746D90);
  if ((sub_1C107090C() & 1) == 0)
    goto LABEL_5;
  sub_1C07A35E4();
  if ((v14 & 1) != (v16 & 1))
  {
LABEL_9:
    sub_1C1070D44();
    __break(1u);
    return;
  }
  v13 = v15;
LABEL_5:
  v17 = *v3;
  if ((v14 & 1) != 0)
  {
    v18 = *(_QWORD *)(v17 + 56) + 40 * v13;
    _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0(v18);
    sub_1C077DD60(a1, v18);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a2, v6);
    sub_1C07E0350(v13, (uint64_t)v9, (uint64_t)a1, v17);
  }
}

void sub_1C08A2AA8()
{
  uint64_t *v0;
  void (*v1)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  void (*v2)(_QWORD);
  void (*v3)(_QWORD);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  char v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  sub_1C077AEA0();
  v20 = v1;
  v3 = v2;
  v5 = v4;
  v7 = v6;
  v9 = v8;
  sub_1C07BC684(v8, v6, v4);
  sub_1C0788BBC();
  if (v12)
  {
    __break(1u);
LABEL_10:
    sub_1C1070D44();
    __break(1u);
    return;
  }
  v13 = v10;
  v14 = v11;
  sub_1C0781058();
  if ((sub_1C08A617C() & 1) != 0)
  {
    sub_1C077D774(v7, v5);
    sub_1C08A6000();
    if (!v16)
      goto LABEL_10;
    v13 = v15;
  }
  v17 = *v0;
  if ((v14 & 1) != 0)
  {
    v18 = *(_QWORD *)(v17 + 56);
    v3(0);
    sub_1C08A615C();
    sub_1C08A5BCC(v9, v18 + v19 * v13, (uint64_t (*)(_QWORD))v3);
    sub_1C0776728();
  }
  else
  {
    v20(v13, v7, v5, v9, v17);
    sub_1C07B61EC();
  }
}

void sub_1C08A2B88(uint64_t a1, int a2, void *a3, double a4)
{
  _QWORD **v4;
  uint64_t v8;
  char v9;
  char v10;
  unint64_t v11;
  char v12;
  char v13;
  _QWORD *v14;
  uint64_t v15;
  id v16;

  sub_1C07DD65C((uint64_t)a3);
  sub_1C0788BBC();
  if (v10)
  {
    __break(1u);
LABEL_10:
    sub_1C0782160(v8, (unint64_t *)&qword_1ED7537B0);
    sub_1C1070D44();
    __break(1u);
    return;
  }
  v11 = v8;
  v12 = v9;
  sub_1C07ACF80(&qword_1ED7530E0);
  if ((sub_1C07AC72C() & 1) != 0)
  {
    sub_1C07DD65C((uint64_t)a3);
    sub_1C0775978();
    if (!v13)
      goto LABEL_10;
    v11 = v8;
  }
  v14 = *v4;
  if ((v12 & 1) != 0)
  {
    v15 = v14[7] + 24 * v11;

    *(_QWORD *)v15 = a1;
    *(double *)(v15 + 8) = a4;
    *(_WORD *)(v15 + 16) = a2;
    *(_BYTE *)(v15 + 18) = BYTE2(a2);
  }
  else
  {
    sub_1C07E03F8(v11, (uint64_t)a3, a1, a2 & 0xFFFFFF, v14, a4);
    v16 = a3;
  }
}

uint64_t sub_1C08A2CC4()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  char v6;
  char v7;
  unint64_t v8;
  char v9;
  char v10;
  uint64_t v11;
  void *v12;

  sub_1C079FC8C();
  v4 = sub_1C07BA79C(v2, v3);
  sub_1C07DD65C(v4);
  sub_1C0788BBC();
  if (v7)
  {
    __break(1u);
    goto LABEL_9;
  }
  v8 = result;
  v9 = v6;
  sub_1C07ACF80(&qword_1ED7537D0);
  result = sub_1C08A5FDC();
  if ((result & 1) == 0)
    goto LABEL_5;
  result = sub_1C07DD65C((uint64_t)v12);
  if ((v9 & 1) != (v10 & 1))
  {
LABEL_9:
    sub_1C0782160(result, (unint64_t *)&qword_1ED7537B0);
    result = sub_1C1070D44();
    __break(1u);
    return result;
  }
  v8 = result;
LABEL_5:
  v11 = *v1;
  if ((v9 & 1) != 0)
  {
    *(_QWORD *)(*(_QWORD *)(v11 + 56) + 8 * v8) = v0;
  }
  else
  {
    sub_1C07DFD40(v8, (uint64_t)v12, v0, v11);
    return (uint64_t)sub_1C07BFED0(v12);
  }
  return result;
}

void sub_1C08A2D88()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  char v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  char v11;
  uint64_t v12;

  sub_1C0779670();
  v2 = v1;
  sub_1C07BC684(v1, v3, v4);
  sub_1C0788BBC();
  if (v7)
  {
    __break(1u);
LABEL_10:
    sub_1C1070D44();
    __break(1u);
    return;
  }
  v8 = v5;
  v9 = v6;
  sub_1C077E1EC();
  if ((sub_1C07A8568() & 1) != 0)
  {
    sub_1C078DAD8();
    sub_1C078DAC8();
    if (!v11)
      goto LABEL_10;
    v8 = v10;
  }
  if ((v9 & 1) != 0)
  {
    v12 = *(_QWORD *)(*(_QWORD *)v0 + 56);
    swift_release();
    *(_QWORD *)(v12 + 8 * v8) = v2;
    sub_1C0776760();
  }
  else
  {
    sub_1C07825E0();
    sub_1C07937F8();
  }
}

void sub_1C08A2E2C()
{
  uint64_t v0;
  const void *v1;
  size_t v2;
  char v3;

  sub_1C0797C88();
  if (*(_QWORD *)(v0 + 16))
  {
    sub_1C07ACF80(&qword_1ED762CB0);
    v1 = (const void *)sub_1C078F1C8();
    v2 = j__malloc_size(v1);
    sub_1C079F34C(v2 - 32);
    sub_1C08A3DEC();
    sub_1C07B8930();
    sub_1C07970A0();
    if (!v3)
      __break(1u);
  }
  sub_1C0790E04();
}

void sub_1C08A2E9C(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  sub_1C08A35A0(a1, a2, a3, a4, (void (*)(uint64_t, uint64_t, _QWORD *))sub_1C0B97824);
}

void sub_1C08A2EA8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;

  sub_1C077B61C();
  v4 = v3 >> 1;
  v5 = (v3 >> 1) - v2;
  if (__OFSUB__(v3 >> 1, v2))
  {
    __break(1u);
    goto LABEL_16;
  }
  if (!v5)
    goto LABEL_14;
  v6 = v2;
  v7 = v1;
  if (v5 > 0)
  {
    sub_1C07ACF80(&qword_1EF62FFF8);
    sub_1C07ACF80((uint64_t *)&unk_1EF637950);
    v8 = (_QWORD *)sub_1C07B9A7C();
    j__malloc_size(v8);
    if (v0)
    {
      sub_1C08A62B4();
      v10 = v10 && v0 == -1;
      if (!v10)
      {
        v8[2] = v5;
        v8[3] = 2 * (v9 / v0);
        goto LABEL_12;
      }
LABEL_17:
      __break(1u);
      goto LABEL_18;
    }
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v8 = (_QWORD *)MEMORY[0x1E0DEE9D8];
LABEL_12:
  if (v4 != v6)
  {
    v11 = sub_1C07ACF80((uint64_t *)&unk_1EF637950);
    sub_1C0B97C0C(v7 + *(_QWORD *)(*(_QWORD *)(v11 - 8) + 72) * v6, v5, (unint64_t)v8+ ((*(unsigned __int8 *)(*(_QWORD *)(v11 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v11 - 8) + 80)));
LABEL_14:
    sub_1C077C798();
    return;
  }
LABEL_18:
  __break(1u);
}

void sub_1C08A2F90()
{
  uint64_t v0;
  const void *v1;
  size_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;

  sub_1C0797C88();
  if (*(_QWORD *)(v0 + 16))
  {
    sub_1C07ACF80(&qword_1EF633188);
    v1 = (const void *)sub_1C078F1C8();
    v2 = j__malloc_size(v1);
    sub_1C079F34C(v2 - 32);
    sub_1C08A3F4C(v3, v4, v5, v6);
    sub_1C07B8930();
    sub_1C07970A0();
    if (!v7)
      __break(1u);
  }
  sub_1C0790E04();
}

void sub_1C08A3004(unint64_t a1)
{
  sub_1C08A364C(a1, (void (*)(_QWORD *, uint64_t, unint64_t))sub_1C0BE90DC);
}

void sub_1C08A3010()
{
  sub_1C08A3858();
}

void sub_1C08A302C()
{
  sub_1C08A3858();
}

_QWORD *sub_1C08A3048(uint64_t a1, uint64_t a2)
{
  _QWORD *v4;
  size_t v5;

  if (!a2)
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  if (a2 <= 0)
  {
    v4 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  else
  {
    sub_1C07ACF80((uint64_t *)&unk_1ED75E7C0);
    v4 = (_QWORD *)sub_1C078F1C8();
    v5 = j__malloc_size(v4);
    v4[2] = a2;
    v4[3] = 2 * ((uint64_t)(v5 - 32) / 4);
  }
  sub_1C0B97AD8(a1, a2);
  return v4;
}

void sub_1C08A30D8()
{
  uint64_t v0;
  const void *v1;
  size_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  char v7;

  sub_1C0797C88();
  if (*(_QWORD *)(v0 + 16))
  {
    sub_1C07ACF80(&qword_1ED75D3A8);
    v1 = (const void *)sub_1C078F1C8();
    v2 = j__malloc_size(v1);
    sub_1C079F34C(v2 - 32);
    sub_1C08A40EC(v3, v4, v5, v6);
    sub_1C07B8930();
    sub_1C07970A0();
    if (!v7)
      __break(1u);
  }
  sub_1C0790E04();
}

void sub_1C08A3148(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26)
{
  sub_1C08A3430(a1, (uint64_t)&unk_1ED7513E8, (uint64_t)sub_1C08A4308, (uint64_t)sub_1C0827370, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
    a20,
    a21,
    a22,
    a23,
    a24,
    a25,
    a26);
}

void sub_1C08A3164()
{
  uint64_t v0;
  uint64_t v1;
  const void *v2;
  uint64_t v3;
  BOOL v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  sub_1C0797C88();
  if (!*(_QWORD *)(v1 + 16))
    goto LABEL_9;
  sub_1C07ACF80(&qword_1ED7513E0);
  sub_1C07ACF80(&qword_1ED751248);
  v2 = (const void *)sub_1C07B5EB4();
  j__malloc_size(v2);
  if (v0)
  {
    sub_1C08A62B4();
    v4 = v4 && v0 == -1;
    if (!v4)
    {
      sub_1C08A6068(v3);
      sub_1C07ACF80(&qword_1ED751248);
      sub_1C0779D28();
      sub_1C0782D48();
      sub_1C08A4520(v5, v6, v7, v8);
      sub_1C077AE90();
      sub_1C07970A0();
      if (!v4)
        __break(1u);
LABEL_9:
      sub_1C0790E04();
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

_QWORD *sub_1C08A3228(_QWORD *result, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;
  size_t v6;
  _QWORD v7[3];

  v2 = a2 - (_QWORD)result;
  if (__OFSUB__(a2, result))
  {
    __break(1u);
  }
  else
  {
    if (!v2)
      return (_QWORD *)MEMORY[0x1E0DEE9D8];
    v4 = (uint64_t)result;
    if (v2 <= 0)
    {
      v5 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    }
    else
    {
      sub_1C07ACF80(&qword_1ED7614E0);
      v5 = (_QWORD *)sub_1C078F1C8();
      v6 = j__malloc_size(v5);
      v5[2] = v2;
      v5[3] = 2 * ((uint64_t)(v6 - 32) / 8);
    }
    result = sub_1C08A482C(v7, v5 + 4, v2, v4, a2);
    if (result == (_QWORD *)v2)
      return v5;
  }
  __break(1u);
  return result;
}

void sub_1C08A32E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26)
{
  sub_1C08A3430(a1, (uint64_t)&unk_1ED751700, (uint64_t)sub_1C08A4AFC, (uint64_t)sub_1C0827370, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
    a20,
    a21,
    a22,
    a23,
    a24,
    a25,
    a26);
}

void sub_1C08A32FC()
{
  uint64_t v0;
  const void *v1;
  size_t v2;
  char v3;

  sub_1C0797C88();
  if (*(_QWORD *)(v0 + 16))
  {
    sub_1C07ACF80(&qword_1ED762CB0);
    v1 = (const void *)sub_1C078F1C8();
    v2 = j__malloc_size(v1);
    sub_1C079F34C(v2 - 32);
    sub_1C08A5910();
    sub_1C07B8930();
    sub_1C07970A0();
    if (!v3)
      __break(1u);
  }
  sub_1C0790E04();
}

void sub_1C08A336C()
{
  uint64_t v0;
  uint64_t v1;
  const void *v2;
  uint64_t v3;
  BOOL v4;
  _QWORD *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;

  sub_1C0797C88();
  if (!*(_QWORD *)(v1 + 16))
    goto LABEL_9;
  sub_1C07ACF80(&qword_1EF633290);
  sub_1C106E734();
  v2 = (const void *)sub_1C07B5EB4();
  j__malloc_size(v2);
  if (v0)
  {
    sub_1C08A62B4();
    v4 = v4 && v0 == -1;
    if (!v4)
    {
      sub_1C08A6068(v3);
      sub_1C0782D48();
      sub_1C08A4D00(v5, v6, v7, v8);
      sub_1C077AE90();
      sub_1C07970A0();
      if (!v4)
        __break(1u);
LABEL_9:
      sub_1C0790E04();
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

void sub_1C08A3414(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26)
{
  sub_1C08A3430(a1, (uint64_t)&unk_1ED75D878, (uint64_t)sub_1C08A4FC8, (uint64_t)sub_1C08A5DB4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
    a20,
    a21,
    a22,
    a23,
    a24,
    a25,
    a26);
}

void sub_1C08A3430(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26)
{
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t (*v29)(uint64_t *, _QWORD *, uint64_t, uint64_t);
  void (*v30)(uint64_t);
  uint64_t v31;
  uint64_t v32;
  void (*v33)(uint64_t);
  uint64_t (*v34)(uint64_t *, _QWORD *, uint64_t, uint64_t);
  uint64_t v35;
  _QWORD *v36;
  size_t v37;
  uint64_t v38;
  uint64_t v39;

  sub_1C0797C88();
  a25 = v26;
  a26 = v31;
  v32 = *(_QWORD *)(v27 + 16);
  if (v32)
  {
    v33 = v30;
    v34 = v29;
    v35 = v27;
    sub_1C0781560(v27, v28);
    v36 = (_QWORD *)swift_allocObject();
    v37 = j__malloc_size(v36);
    v36[2] = v32;
    v36[3] = 2 * ((uint64_t)(v37 - 32) / 24);
    v38 = v34(&a10, v36 + 4, v32, v35);
    sub_1C077584C();
    v39 = sub_1C0787A98();
    v33(v39);
    if (v38 != v32)
      __break(1u);
  }
  sub_1C0790E04();
}

void sub_1C08A34E4()
{
  sub_1C08A3858();
}

void sub_1C08A3500()
{
  uint64_t v0;
  const void *v1;
  size_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;

  sub_1C0797C88();
  if (*(_QWORD *)(v0 + 16))
  {
    sub_1C07ACF80(&qword_1ED7513B0);
    v1 = (const void *)swift_allocObject();
    v2 = j__malloc_size(v1);
    sub_1C08A6068(v2 - 32);
    sub_1C0782D48();
    sub_1C08A53FC(v3, v4, v5, v6);
    sub_1C077AE90();
    sub_1C07970A0();
    if (!v7)
      __break(1u);
  }
  sub_1C0790E04();
}

void sub_1C08A3594(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  sub_1C08A35A0(a1, a2, a3, a4, (void (*)(uint64_t, uint64_t, _QWORD *))sub_1C0B99230);
}

void sub_1C08A35A0(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, void (*a5)(uint64_t, uint64_t, _QWORD *))
{
  unint64_t v5;
  uint64_t v6;
  _QWORD *v10;
  uint64_t v11;

  v5 = a4 >> 1;
  v6 = (a4 >> 1) - a3;
  if (__OFSUB__(a4 >> 1, a3))
  {
    __break(1u);
  }
  else
  {
    if (!v6)
      goto LABEL_9;
    if (v6 <= 0)
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    }
    else
    {
      sub_1C07ACF80(&qword_1ED762CD0);
      v10 = (_QWORD *)sub_1C078F1C8();
      j__malloc_size(v10);
      sub_1C077E8B4();
      v10[2] = v6;
      v10[3] = v11;
    }
    if (v5 != a3)
    {
      a5(a2 + 8 * a3, v6, v10 + 4);
LABEL_9:
      sub_1C07785E4();
      return;
    }
  }
  __break(1u);
}

void sub_1C08A3640(unint64_t a1)
{
  sub_1C08A364C(a1, (void (*)(_QWORD *, uint64_t, unint64_t))sub_1C0BE9208);
}

void sub_1C08A364C(unint64_t a1, void (*a2)(_QWORD *, uint64_t, unint64_t))
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  void (*v7)(_QWORD *, uint64_t, unint64_t);

  if (a1 >> 62)
    goto LABEL_8;
  v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (v4)
  {
    if (v4 <= 0)
    {
      v5 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    }
    else
    {
      sub_1C07ACF80(&qword_1ED762CD0);
      v5 = (_QWORD *)sub_1C078F1C8();
      j__malloc_size(v5);
      sub_1C077E8B4();
      v5[2] = v4;
      v5[3] = v6;
    }
    sub_1C077AE90();
    a2(v5 + 4, v4, a1);
    a2 = v7;
    swift_bridgeObjectRelease();
    if (a2 == (void (*)(_QWORD *, uint64_t, unint64_t))v4)
      break;
    __break(1u);
LABEL_8:
    sub_1C077AE90();
    v4 = sub_1C10709B4();
    sub_1C077960C();
  }
  sub_1C07785E4();
}

uint64_t sub_1C08A3718(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t *v8;
  uint64_t v9;
  unint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;

  if ((a1 & 0xC000000000000001) != 0)
  {
    v1 = sub_1C107069C();
    if (v1)
      goto LABEL_3;
    return MEMORY[0x1E0DEE9D8];
  }
  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return MEMORY[0x1E0DEE9D8];
LABEL_3:
  if (v1 <= 0)
  {
    v2 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  else
  {
    sub_1C07ACF80(&qword_1ED762CD0);
    v2 = (_QWORD *)sub_1C078F1C8();
    j__malloc_size(v2);
    sub_1C077E8B4();
    v2[2] = v1;
    v2[3] = v3;
  }
  sub_1C077AE90();
  sub_1C0782D48();
  sub_1C08A5640(v4, v5, v6, v7, v8, v9, v10);
  v12 = v11;
  result = sub_1C0827370();
  if (v12 == v1)
    return (uint64_t)v2;
  __break(1u);
  return result;
}

void sub_1C08A3804()
{
  sub_1C08A3858();
}

void sub_1C08A3820()
{
  sub_1C08A3858();
}

void sub_1C08A383C()
{
  sub_1C08A3858();
}

void sub_1C08A3858()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  void (*v3)(_QWORD);
  uint64_t (*v4)(void);
  uint64_t v5;
  uint64_t (*v6)(void);
  void (*v7)(_QWORD);
  _QWORD *v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;

  sub_1C0797C88();
  v5 = *(_QWORD *)(v1 + 16);
  if (!v5)
    goto LABEL_9;
  v6 = v4;
  v7 = v3;
  sub_1C0781560(v1, v2);
  v7(0);
  v8 = (_QWORD *)sub_1C07B9A7C();
  j__malloc_size(v8);
  if (v0)
  {
    sub_1C08A62B4();
    v10 = v10 && v0 == -1;
    if (!v10)
    {
      v8[2] = v5;
      v8[3] = 2 * (v9 / v0);
      sub_1C0782D48();
      v11 = v6();
      sub_1C077AE90();
      sub_1C0827370();
      if (v11 != v5)
        __break(1u);
LABEL_9:
      sub_1C0790E04();
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

void sub_1C08A3924()
{
  sub_1C08A3858();
}

void sub_1C08A3940()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  sub_1C077B61C();
  v1 = v0;
  v3 = v2;
  sub_1C077AF90();
  type metadata accessor for GDInteractionEnumeration.GDInteractionIterator();
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v4);
  sub_1C08A5EBC();
  v5 = sub_1C106AA50();
  if (!v3 || !v1)
  {
LABEL_12:
    sub_1C07AF48C(v5, v6, (uint64_t (*)(_QWORD))type metadata accessor for GDInteractionEnumeration.GDInteractionIterator);
    sub_1C077C798();
    return;
  }
  if ((v1 & 0x8000000000000000) == 0)
  {
    v7 = sub_1C106AA38();
    if (v11)
    {
      sub_1C0782160(v7, &qword_1ED758D28);
      v8 = 0;
      while (1)
      {
        v5 = sub_1C08A5E94();
        if ((v5 & 1) == 0)
          break;
        *(_QWORD *)(v3 + 8 * v8) = v9;
        if (v1 - 1 == v8)
          break;
        sub_1C106AA38();
        ++v8;
        if (!v11)
          goto LABEL_11;
      }
    }
    else
    {
LABEL_11:
      sub_1C07B1C6C((uint64_t)&v10, &qword_1ED760400);
    }
    goto LABEL_12;
  }
  __break(1u);
}

void sub_1C08A3A3C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  sub_1C0779670();
  sub_1C08A633C();
  sub_1C07ACF80(&qword_1EF631FB8);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v7);
  sub_1C07785B8();
  sub_1C07ACF80(&qword_1EF631F78);
  sub_1C077591C();
  MEMORY[0x1E0C80A78](v8);
  sub_1C0779614();
  v9 = *(_QWORD *)(v1 + 16);
  if (v9)
  {
    v10 = sub_1C106FFAC();
    *(_QWORD *)(v10 + 16) = v9;
    bzero((void *)(v10 + 32), 8 * v9);
  }
  else
  {
    v10 = MEMORY[0x1E0DEE9D8];
  }
  if (!v3 || !v2)
  {
LABEL_14:
    *v0 = v1;
    v0[1] = v10;
    sub_1C0776760();
    return;
  }
  if ((v2 & 0x8000000000000000) == 0)
  {
    sub_1C077E5A8();
    if (sub_1C08A6048() == 1)
    {
LABEL_13:
      sub_1C07B1C6C(v4, &qword_1EF631FB8);
    }
    else
    {
      v11 = 0;
      while (1)
      {
        sub_1C08A5EDC(v4, v5);
        v12 = sub_1C08A5F84();
        sub_1C08A5EDC(v12, v13);
        if (v2 - 1 == v11)
          break;
        v3 += *(_QWORD *)(v6 + 72);
        sub_1C077E5A8();
        ++v11;
        if (sub_1C08A6048() == 1)
          goto LABEL_13;
      }
    }
    goto LABEL_14;
  }
  __break(1u);
}

void sub_1C08A3B8C(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  id v7;
  uint64_t i;

  if (!a2 || !a3)
  {
LABEL_7:
    *a1 = v3;
    sub_1C07785E4();
    return;
  }
  if ((a3 & 0x8000000000000000) == 0)
  {
    v7 = sub_1C0F0F284();
    for (i = 0; v7; ++i)
    {
      *(_QWORD *)(a2 + 8 * i) = v7;
      if (a3 - 1 == i)
        break;
      v7 = sub_1C0F0F284();
    }
    goto LABEL_7;
  }
  __break(1u);
}

void sub_1C08A3C00()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  sub_1C077B61C();
  v1 = v0;
  v3 = v2;
  v4 = sub_1C077AF90();
  type metadata accessor for PhotosMetadataSequence.Iterator(v4);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v5);
  sub_1C08A5EBC();
  v6 = sub_1C106ECC8();
  if (!v3 || !v1)
  {
LABEL_12:
    sub_1C07AF48C(v6, v7, type metadata accessor for PhotosMetadataSequence.Iterator);
    sub_1C077C798();
    return;
  }
  if ((v1 & 0x8000000000000000) == 0)
  {
    v8 = sub_1C106ECB0();
    if (v12)
    {
      sub_1C0782160(v8, &qword_1ED744828);
      v9 = 0;
      while (1)
      {
        v6 = sub_1C08A5E94();
        if ((v6 & 1) == 0)
          break;
        *(_QWORD *)(v3 + 8 * v9) = v10;
        if (v1 - 1 == v9)
          break;
        sub_1C106ECB0();
        ++v9;
        if (!v12)
          goto LABEL_11;
      }
    }
    else
    {
LABEL_11:
      sub_1C07B1C6C((uint64_t)&v11, &qword_1ED760400);
    }
    goto LABEL_12;
  }
  __break(1u);
}

void sub_1C08A3CFC()
{
  uint64_t *v0;
  uint64_t v1;
  _QWORD *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;

  sub_1C07A5194();
  sub_1C08A633C();
  v3 = (void *)MEMORY[0x1C3BA79F4]();
  sub_1C07B1280();
  v4 = sub_1C10705D0();
  objc_autoreleasePoolPop(v3);
  swift_bridgeObjectRelease();
  if (!v2)
  {
LABEL_11:
    v1 = 0;
    goto LABEL_15;
  }
  if (!v1)
  {
LABEL_15:
    *v0 = v4;
    v0[1] = v1;
    sub_1C0781AD8();
    return;
  }
  if ((v1 & 0x8000000000000000) == 0)
  {
    v5 = *(_QWORD *)(v4 + 16);
    if (v5)
    {
      v6 = (uint64_t *)(v4 + 40);
      v7 = 1;
      while (1)
      {
        v8 = *v6;
        *v2 = *(v6 - 1);
        v2[1] = v8;
        if (v1 == v7)
          break;
        if (v5 == v7)
        {
          v1 = v5;
          break;
        }
        v6 += 2;
        v9 = *(_QWORD *)(v4 + 16);
        _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
        v2 += 2;
        if (v7++ >= v9)
        {
          __break(1u);
          goto LABEL_11;
        }
      }
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    }
    else
    {
      v1 = 0;
    }
    goto LABEL_15;
  }
  __break(1u);
}

void sub_1C08A3DEC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  char v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  sub_1C077AEA0();
  v5 = v4 + 56;
  sub_1C08A5DBC();
  if (v7 && v6)
  {
    if (v6 < 0)
    {
LABEL_32:
      __break(1u);
    }
    else
    {
      sub_1C07B5BE8();
      if (!v1)
        goto LABEL_6;
LABEL_5:
      sub_1C08A6030();
      while (1)
      {
        sub_1C07BA910();
        if (v12)
        {
          _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
          goto LABEL_30;
        }
        v0 += 16;
        _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
        if (v1)
          goto LABEL_5;
LABEL_6:
        v8 = v3 + 1;
        if (__OFADD__(v3, 1))
        {
          __break(1u);
          goto LABEL_32;
        }
        if (v8 >= v2)
          goto LABEL_30;
        if (!*(_QWORD *)(v5 + 8 * v8))
        {
          sub_1C08A6234();
          if (v10 == v11)
            goto LABEL_30;
          if (!*(_QWORD *)(v5 + 8 * v3))
          {
            if (v9 + 2 >= v2)
              goto LABEL_30;
            if (!*(_QWORD *)(v5 + 8 * (v9 + 2)))
            {
              sub_1C08A6228();
              if (v10 == v11)
                goto LABEL_30;
              if (!*(_QWORD *)(v5 + 8 * v3))
              {
                v14 = v13 + 4;
                if (v13 + 4 >= v2)
                  goto LABEL_30;
                if (!*(_QWORD *)(v5 + 8 * v14))
                  break;
              }
            }
          }
        }
LABEL_15:
        sub_1C08A5F9C();
      }
      while (1)
      {
        v15 = v14 + 1;
        if (__OFADD__(v14, 1))
          break;
        if (v15 >= v2)
          goto LABEL_30;
        ++v14;
        if (*(_QWORD *)(v5 + 8 * v15))
          goto LABEL_15;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_30:
    sub_1C08A6104();
    sub_1C0776728();
  }
}

_QWORD *sub_1C08A3F4C(_QWORD *result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  uint64_t v9;
  int64_t v10;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int v17;

  v4 = a4 + 64;
  v5 = -1;
  v6 = -1 << *(_BYTE *)(a4 + 32);
  if (-v6 < 64)
    v5 = ~(-1 << -(char)v6);
  v7 = v5 & *(_QWORD *)(a4 + 64);
  if (!a2)
  {
    v8 = 0;
    a3 = 0;
LABEL_36:
    *result = a4;
    result[1] = v4;
    result[2] = ~v6;
    result[3] = v8;
    result[4] = v7;
    return (_QWORD *)a3;
  }
  if (!a3)
  {
    v8 = 0;
    goto LABEL_36;
  }
  if (a3 < 0)
  {
LABEL_38:
    __break(1u);
    goto LABEL_39;
  }
  v8 = 0;
  v9 = 0;
  v10 = (unint64_t)(63 - v6) >> 6;
  while (v7)
  {
    v11 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    v12 = v11 | (v8 << 6);
LABEL_19:
    ++v9;
    v17 = *(_DWORD *)(*(_QWORD *)(a4 + 56) + 4 * v12);
    *(_WORD *)a2 = *(_WORD *)(*(_QWORD *)(a4 + 48) + 2 * v12);
    *(_DWORD *)(a2 + 4) = v17;
    a2 += 8;
    if (v9 == a3)
      goto LABEL_36;
  }
  v13 = v8 + 1;
  if (__OFADD__(v8, 1))
  {
    __break(1u);
    goto LABEL_38;
  }
  if (v13 >= v10)
    goto LABEL_31;
  v14 = *(_QWORD *)(v4 + 8 * v13);
  if (v14)
    goto LABEL_18;
  v8 += 2;
  if (v13 + 1 >= v10)
  {
    v7 = 0;
    v8 = v13;
    goto LABEL_35;
  }
  v14 = *(_QWORD *)(v4 + 8 * v8);
  if (v14)
  {
LABEL_14:
    v13 = v8;
LABEL_18:
    v16 = __clz(__rbit64(v14));
    v7 = (v14 - 1) & v14;
    v12 = v16 + (v13 << 6);
    v8 = v13;
    goto LABEL_19;
  }
  v15 = v13 + 2;
  if (v13 + 2 >= v10)
    goto LABEL_31;
  v14 = *(_QWORD *)(v4 + 8 * v15);
  if (v14)
  {
LABEL_17:
    v13 = v15;
    goto LABEL_18;
  }
  v8 = v13 + 3;
  if (v13 + 3 >= v10)
  {
    v7 = 0;
    v8 = v13 + 2;
    goto LABEL_35;
  }
  v14 = *(_QWORD *)(v4 + 8 * v8);
  if (v14)
    goto LABEL_14;
  v15 = v13 + 4;
  if (v13 + 4 >= v10)
  {
LABEL_31:
    v7 = 0;
LABEL_35:
    a3 = v9;
    goto LABEL_36;
  }
  v14 = *(_QWORD *)(v4 + 8 * v15);
  if (v14)
    goto LABEL_17;
  while (1)
  {
    v13 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v13 >= v10)
    {
      v7 = 0;
      v8 = v10 - 1;
      goto LABEL_35;
    }
    v14 = *(_QWORD *)(v4 + 8 * v13);
    ++v15;
    if (v14)
      goto LABEL_18;
  }
LABEL_39:
  __break(1u);
  return result;
}

uint64_t sub_1C08A40EC(uint64_t result, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v5 = (_QWORD *)result;
  v6 = a4 + 64;
  v7 = -1 << *(_BYTE *)(a4 + 32);
  if (-v7 < 64)
    v8 = ~(-1 << -(char)v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(a4 + 64);
  if (!a2)
  {
    v12 = 0;
    v10 = 0;
LABEL_39:
    *v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  v10 = a3;
  if (!a3)
  {
    v12 = 0;
    goto LABEL_39;
  }
  if (a3 < 0)
    goto LABEL_41;
  v11 = a2;
  v12 = 0;
  v13 = 0;
  v14 = (unint64_t)(63 - v7) >> 6;
  v26 = -1 << *(_BYTE *)(a4 + 32);
  if (!v9)
    goto LABEL_9;
LABEL_8:
  v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    v20 = (uint64_t *)(*(_QWORD *)(a4 + 48) + 16 * v16);
    v22 = *v20;
    v21 = v20[1];
    v23 = (uint64_t *)(*(_QWORD *)(a4 + 56) + 16 * v16);
    v24 = *v23;
    v25 = v23[1];
    *v11 = v22;
    v11[1] = v21;
    v11[2] = v24;
    v11[3] = v25;
    if (v13 == v10)
    {
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      goto LABEL_38;
    }
    v11 += 4;
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    result = _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    if (v9)
      goto LABEL_8;
LABEL_9:
    v17 = v12 + 1;
    if (__OFADD__(v12, 1))
      break;
    if (v17 >= v14)
      goto LABEL_33;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    if (!v18)
    {
      v12 += 2;
      if (v17 + 1 >= v14)
      {
        v9 = 0;
        v12 = v17;
      }
      else
      {
        v18 = *(_QWORD *)(v6 + 8 * v12);
        if (v18)
          goto LABEL_14;
        v19 = v17 + 2;
        if (v17 + 2 >= v14)
          goto LABEL_33;
        v18 = *(_QWORD *)(v6 + 8 * v19);
        if (v18)
        {
LABEL_17:
          v17 = v19;
          goto LABEL_18;
        }
        v12 = v17 + 3;
        if (v17 + 3 < v14)
        {
          v18 = *(_QWORD *)(v6 + 8 * v12);
          if (v18)
          {
LABEL_14:
            v17 = v12;
            goto LABEL_18;
          }
          v19 = v17 + 4;
          if (v17 + 4 >= v14)
          {
LABEL_33:
            v9 = 0;
            goto LABEL_37;
          }
          v18 = *(_QWORD *)(v6 + 8 * v19);
          if (!v18)
          {
            while (1)
            {
              v17 = v19 + 1;
              if (__OFADD__(v19, 1))
                goto LABEL_42;
              if (v17 >= v14)
              {
                v9 = 0;
                v12 = v14 - 1;
                goto LABEL_37;
              }
              v18 = *(_QWORD *)(v6 + 8 * v17);
              ++v19;
              if (v18)
                goto LABEL_18;
            }
          }
          goto LABEL_17;
        }
        v9 = 0;
        v12 = v17 + 2;
      }
LABEL_37:
      v10 = v13;
LABEL_38:
      v7 = v26;
      goto LABEL_39;
    }
LABEL_18:
    v9 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v17 << 6);
    v12 = v17;
  }
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
  return result;
}

uint64_t sub_1C08A4308(uint64_t result, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v5 = (_QWORD *)result;
  v6 = a4 + 64;
  v7 = -1 << *(_BYTE *)(a4 + 32);
  if (-v7 < 64)
    v8 = ~(-1 << -(char)v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(a4 + 64);
  if (!a2)
  {
    v12 = 0;
    v10 = 0;
LABEL_39:
    *v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  v10 = a3;
  if (!a3)
  {
    v12 = 0;
    goto LABEL_39;
  }
  if (a3 < 0)
    goto LABEL_41;
  v11 = a2;
  v12 = 0;
  v13 = 0;
  v14 = (unint64_t)(63 - v7) >> 6;
  v23 = -1 << *(_BYTE *)(a4 + 32);
  if (!v9)
    goto LABEL_9;
LABEL_8:
  v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    v20 = (_QWORD *)(*(_QWORD *)(a4 + 48) + 16 * v16);
    v21 = v20[1];
    v22 = *(_QWORD *)(*(_QWORD *)(a4 + 56) + 8 * v16);
    *v11 = *v20;
    v11[1] = v21;
    v11[2] = v22;
    if (v13 == v10)
    {
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      goto LABEL_38;
    }
    v11 += 3;
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    result = _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    if (v9)
      goto LABEL_8;
LABEL_9:
    v17 = v12 + 1;
    if (__OFADD__(v12, 1))
      break;
    if (v17 >= v14)
      goto LABEL_33;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    if (!v18)
    {
      v12 += 2;
      if (v17 + 1 >= v14)
      {
        v9 = 0;
        v12 = v17;
      }
      else
      {
        v18 = *(_QWORD *)(v6 + 8 * v12);
        if (v18)
          goto LABEL_14;
        v19 = v17 + 2;
        if (v17 + 2 >= v14)
          goto LABEL_33;
        v18 = *(_QWORD *)(v6 + 8 * v19);
        if (v18)
        {
LABEL_17:
          v17 = v19;
          goto LABEL_18;
        }
        v12 = v17 + 3;
        if (v17 + 3 < v14)
        {
          v18 = *(_QWORD *)(v6 + 8 * v12);
          if (v18)
          {
LABEL_14:
            v17 = v12;
            goto LABEL_18;
          }
          v19 = v17 + 4;
          if (v17 + 4 >= v14)
          {
LABEL_33:
            v9 = 0;
            goto LABEL_37;
          }
          v18 = *(_QWORD *)(v6 + 8 * v19);
          if (!v18)
          {
            while (1)
            {
              v17 = v19 + 1;
              if (__OFADD__(v19, 1))
                goto LABEL_42;
              if (v17 >= v14)
              {
                v9 = 0;
                v12 = v14 - 1;
                goto LABEL_37;
              }
              v18 = *(_QWORD *)(v6 + 8 * v17);
              ++v19;
              if (v18)
                goto LABEL_18;
            }
          }
          goto LABEL_17;
        }
        v9 = 0;
        v12 = v17 + 2;
      }
LABEL_37:
      v10 = v13;
LABEL_38:
      v7 = v23;
      goto LABEL_39;
    }
LABEL_18:
    v9 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v17 << 6);
    v12 = v17;
  }
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
  return result;
}

void sub_1C08A4520(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int64_t v32;
  uint64_t v33;
  _QWORD *v34;
  int64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  v8 = sub_1C07ACF80(&qword_1ED751248);
  v38 = *(_QWORD *)(v8 - 8);
  v39 = v8;
  MEMORY[0x1E0C80A78](v8);
  v10 = (uint64_t *)((char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v31 - v12;
  v40 = a4;
  v14 = *(_QWORD *)(a4 + 64);
  v36 = a4 + 64;
  v15 = -1 << *(_BYTE *)(a4 + 32);
  if (-v15 < 64)
    v16 = ~(-1 << -(char)v15);
  else
    v16 = -1;
  v17 = v16 & v14;
  if (!a2)
  {
    v18 = 0;
LABEL_38:
    v30 = v36;
    *a1 = v40;
    a1[1] = v30;
    a1[2] = ~v15;
    a1[3] = v18;
    a1[4] = v17;
    return;
  }
  if (!a3)
  {
    v18 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
    goto LABEL_40;
  v33 = v15;
  v34 = a1;
  v18 = 0;
  v19 = 0;
  v35 = (unint64_t)(63 - v15) >> 6;
  v32 = v35 - 1;
  v37 = a3;
  if (!v17)
    goto LABEL_9;
LABEL_8:
  v20 = __clz(__rbit64(v17));
  v17 &= v17 - 1;
  v21 = v20 | (v18 << 6);
  while (1)
  {
    ++v19;
    v25 = *(_QWORD *)(v40 + 56);
    v26 = (uint64_t *)(*(_QWORD *)(v40 + 48) + 16 * v21);
    v27 = *v26;
    v28 = v26[1];
    v29 = type metadata accessor for RelationshipStructs.LivingBeingRelationship(0);
    sub_1C07E05C8(v25 + *(_QWORD *)(*(_QWORD *)(v29 - 8) + 72) * v21, (uint64_t)v10 + *(int *)(v39 + 48), type metadata accessor for RelationshipStructs.LivingBeingRelationship);
    *v10 = v27;
    v10[1] = v28;
    sub_1C078A67C((uint64_t)v10, (uint64_t)v13, &qword_1ED751248);
    sub_1C078A67C((uint64_t)v13, a2, &qword_1ED751248);
    if (v19 == v37)
    {
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
LABEL_37:
      v15 = v33;
      a1 = v34;
      goto LABEL_38;
    }
    a2 += *(_QWORD *)(v38 + 72);
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    if (v17)
      goto LABEL_8;
LABEL_9:
    v22 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v22 >= v35)
      goto LABEL_33;
    v23 = *(_QWORD *)(v36 + 8 * v22);
    if (!v23)
    {
      v18 += 2;
      if (v22 + 1 >= v35)
      {
        v17 = 0;
        v18 = v22;
        goto LABEL_37;
      }
      v23 = *(_QWORD *)(v36 + 8 * v18);
      if (v23)
        goto LABEL_14;
      v24 = v22 + 2;
      if (v22 + 2 >= v35)
        goto LABEL_33;
      v23 = *(_QWORD *)(v36 + 8 * v24);
      if (!v23)
      {
        v18 = v22 + 3;
        if (v22 + 3 >= v35)
        {
          v17 = 0;
          v18 = v22 + 2;
          goto LABEL_37;
        }
        v23 = *(_QWORD *)(v36 + 8 * v18);
        if (v23)
        {
LABEL_14:
          v22 = v18;
          goto LABEL_18;
        }
        v24 = v22 + 4;
        if (v22 + 4 >= v35)
        {
LABEL_33:
          v17 = 0;
          goto LABEL_37;
        }
        v23 = *(_QWORD *)(v36 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            v22 = v24 + 1;
            if (__OFADD__(v24, 1))
              goto LABEL_41;
            if (v22 >= v35)
            {
              v17 = 0;
              v18 = v32;
              goto LABEL_37;
            }
            v23 = *(_QWORD *)(v36 + 8 * v22);
            ++v24;
            if (v23)
              goto LABEL_18;
          }
        }
      }
      v22 = v24;
    }
LABEL_18:
    v17 = (v23 - 1) & v23;
    v21 = __clz(__rbit64(v23)) + (v22 << 6);
    v18 = v22;
  }
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
}

_QWORD *sub_1C08A482C(_QWORD *result, _QWORD *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;

  if (!a2)
    goto LABEL_5;
  if (!a3)
  {
LABEL_6:
    v5 = a4;
LABEL_7:
    *result = a4;
    result[1] = a5;
    result[2] = v5;
    return (_QWORD *)a3;
  }
  if (a3 < 0)
    goto LABEL_20;
  if (a5 == a4)
  {
LABEL_5:
    a3 = 0;
    goto LABEL_6;
  }
  if (a5 < a4)
    goto LABEL_21;
  if (a5 > a4)
  {
    v5 = a4 + 1;
    *a2 = a4;
    v6 = a3 - 1;
    if (a3 == 1)
      goto LABEL_7;
    v7 = a2 + 1;
    while (v6)
    {
      if (a5 == v5)
      {
        v5 = a5;
        a3 = a5 - a4;
        goto LABEL_7;
      }
      if (v5 >= a5)
        goto LABEL_19;
      v8 = v5 + 1;
      *v7++ = v5++;
      if (!--v6)
      {
        v5 = v8;
        goto LABEL_7;
      }
    }
    __break(1u);
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
LABEL_21:
    __break(1u);
  }
  __break(1u);
  return result;
}

void sub_1C08A48C8()
{
  sub_1C08A48D4();
}

void sub_1C08A48D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(_QWORD);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(uint64_t, uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  sub_1C0779670();
  v5 = v4;
  v7 = v6;
  v9 = v8;
  v11 = v10;
  v13 = sub_1C08A62D8(v10, v8, v6, v4, v12);
  sub_1C077591C();
  MEMORY[0x1E0C80A78](v14);
  sub_1C07A3008();
  MEMORY[0x1E0C80A78](v15);
  sub_1C08A60A0();
  v27 = v5;
  sub_1C08A5DBC();
  if (v9 && v7)
  {
    if (v7 < 0)
    {
LABEL_30:
      __break(1u);
    }
    else
    {
      v25 = v16;
      v17 = 0;
      sub_1C078B760();
      v26 = v18;
      if (!v2)
        goto LABEL_6;
LABEL_5:
      sub_1C08A6018();
      while (1)
      {
        sub_1C08A6314();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v0, v20 + v11 * v21, v13);
        v22 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 32);
        v22(v1, v0, v13);
        v22(v9, v1, v13);
        v9 += v11;
        if (v2)
          goto LABEL_5;
LABEL_6:
        v19 = v17 + 1;
        if (__OFADD__(v17, 1))
        {
          __break(1u);
          goto LABEL_30;
        }
        if (v19 >= v26)
          goto LABEL_27;
        if (!*(_QWORD *)(v27 + 8 * v19))
        {
          v17 += 2;
          if (v19 + 1 >= v26)
            goto LABEL_27;
          if (!*(_QWORD *)(v27 + 8 * v17))
          {
            if (v19 + 2 >= v26)
              goto LABEL_27;
            if (!*(_QWORD *)(v27 + 8 * (v19 + 2)))
            {
              v17 = v19 + 3;
              if (v19 + 3 >= v26)
                goto LABEL_27;
              if (!*(_QWORD *)(v27 + 8 * v17))
              {
                v23 = v19 + 4;
                if (v19 + 4 >= v26)
                {
LABEL_27:
                  v16 = v25;
                  goto LABEL_28;
                }
                if (!*(_QWORD *)(v27 + 8 * v23))
                  break;
              }
            }
          }
        }
LABEL_14:
        sub_1C08A5FB8();
      }
      while (1)
      {
        v24 = v23 + 1;
        if (__OFADD__(v23, 1))
          break;
        if (v24 >= v26)
          goto LABEL_27;
        ++v23;
        if (*(_QWORD *)(v27 + 8 * v24))
          goto LABEL_14;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_28:
    sub_1C08A60EC(~v16);
    sub_1C0776760();
  }
}

uint64_t sub_1C08A4AFC(uint64_t result, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;

  v5 = (_QWORD *)result;
  v6 = a4 + 64;
  v7 = -1 << *(_BYTE *)(a4 + 32);
  if (-v7 < 64)
    v8 = ~(-1 << -(char)v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(a4 + 64);
  if (!a2)
  {
    v12 = 0;
    v10 = 0;
LABEL_38:
    *v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  v10 = a3;
  if (!a3)
  {
    v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  v11 = a2;
  v12 = 0;
  v13 = 0;
  v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9)
    goto LABEL_9;
LABEL_8:
  v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    v20 = (_QWORD *)(*(_QWORD *)(a4 + 48) + 16 * v16);
    v21 = v20[1];
    v22 = *(_QWORD *)(*(_QWORD *)(a4 + 56) + 8 * v16);
    *v11 = *v20;
    v11[1] = v21;
    v11[2] = v22;
    if (v13 == v10)
    {
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      goto LABEL_38;
    }
    v11 += 3;
    result = _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    if (v9)
      goto LABEL_8;
LABEL_9:
    v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14)
      goto LABEL_33;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    if (!v18)
      break;
LABEL_18:
    v9 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v17 << 6);
    v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    v9 = 0;
    v12 = v17;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
    goto LABEL_14;
  v19 = v17 + 2;
  if (v17 + 2 >= v14)
    goto LABEL_33;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
    goto LABEL_17;
  v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    v9 = 0;
    v12 = v17 + 2;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    v17 = v12;
    goto LABEL_18;
  }
  v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    v9 = 0;
LABEL_37:
    v10 = v13;
    goto LABEL_38;
  }
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    v17 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v17 >= v14)
    {
      v9 = 0;
      v12 = v14 - 1;
      goto LABEL_37;
    }
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v19;
    if (v18)
      goto LABEL_18;
  }
LABEL_41:
  __break(1u);
  return result;
}

void sub_1C08A4D00(_QWORD *a1, char *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  int64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  int64_t v26;
  unint64_t v27;
  int64_t v28;
  uint64_t v29;
  void (*v30)(char *, char *, uint64_t);
  uint64_t v31;
  uint64_t v32;
  int64_t v33;
  uint64_t v34;
  _QWORD *v35;
  int64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v8 = sub_1C106E734();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13.n128_f64[0] = MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v32 - v14;
  v39 = a4;
  v18 = *(_QWORD *)(a4 + 64);
  v17 = a4 + 64;
  v16 = v18;
  v37 = v17;
  v19 = -1 << *(_BYTE *)(v17 - 32);
  if (-v19 < 64)
    v20 = ~(-1 << -(char)v19);
  else
    v20 = -1;
  v21 = v20 & v16;
  if (!a2)
  {
    v22 = 0;
LABEL_37:
    v31 = v37;
    *a1 = v39;
    a1[1] = v31;
    a1[2] = ~v19;
    a1[3] = v22;
    a1[4] = v21;
    return;
  }
  if (!a3)
  {
    v22 = 0;
    goto LABEL_37;
  }
  if (a3 < 0)
  {
LABEL_39:
    __break(1u);
    goto LABEL_40;
  }
  v34 = -1 << *(_BYTE *)(v17 - 32);
  v35 = a1;
  v22 = 0;
  v23 = 0;
  v36 = (unint64_t)(63 - v19) >> 6;
  v33 = v36 - 1;
  v38 = a3;
  if (!v21)
    goto LABEL_9;
LABEL_8:
  v24 = __clz(__rbit64(v21));
  v21 &= v21 - 1;
  v25 = v24 | (v22 << 6);
  while (1)
  {
    ++v23;
    v29 = *(_QWORD *)(v9 + 72);
    (*(void (**)(char *, unint64_t, uint64_t, __n128))(v9 + 16))(v11, *(_QWORD *)(v39 + 56) + v29 * v25, v8, v13);
    v30 = *(void (**)(char *, char *, uint64_t))(v9 + 32);
    v30(v15, v11, v8);
    v30(a2, v15, v8);
    if (v23 == v38)
      goto LABEL_36;
    a2 += v29;
    if (v21)
      goto LABEL_8;
LABEL_9:
    v26 = v22 + 1;
    if (__OFADD__(v22, 1))
    {
      __break(1u);
      goto LABEL_39;
    }
    if (v26 >= v36)
      goto LABEL_32;
    v27 = *(_QWORD *)(v37 + 8 * v26);
    if (!v27)
      break;
LABEL_18:
    v21 = (v27 - 1) & v27;
    v25 = __clz(__rbit64(v27)) + (v26 << 6);
    v22 = v26;
  }
  v22 += 2;
  if (v26 + 1 >= v36)
  {
    v21 = 0;
    v22 = v26;
    goto LABEL_36;
  }
  v27 = *(_QWORD *)(v37 + 8 * v22);
  if (v27)
    goto LABEL_14;
  v28 = v26 + 2;
  if (v26 + 2 >= v36)
    goto LABEL_32;
  v27 = *(_QWORD *)(v37 + 8 * v28);
  if (v27)
    goto LABEL_17;
  v22 = v26 + 3;
  if (v26 + 3 >= v36)
  {
    v21 = 0;
    v22 = v26 + 2;
    goto LABEL_36;
  }
  v27 = *(_QWORD *)(v37 + 8 * v22);
  if (v27)
  {
LABEL_14:
    v26 = v22;
    goto LABEL_18;
  }
  v28 = v26 + 4;
  if (v26 + 4 >= v36)
  {
LABEL_32:
    v21 = 0;
LABEL_36:
    v19 = v34;
    a1 = v35;
    goto LABEL_37;
  }
  v27 = *(_QWORD *)(v37 + 8 * v28);
  if (v27)
  {
LABEL_17:
    v26 = v28;
    goto LABEL_18;
  }
  while (1)
  {
    v26 = v28 + 1;
    if (__OFADD__(v28, 1))
      break;
    if (v26 >= v36)
    {
      v21 = 0;
      v22 = v33;
      goto LABEL_36;
    }
    v27 = *(_QWORD *)(v37 + 8 * v26);
    ++v28;
    if (v27)
      goto LABEL_18;
  }
LABEL_40:
  __break(1u);
}

uint64_t sub_1C08A4FC8(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v5 = (_QWORD *)result;
  v6 = a4 + 56;
  v7 = -1 << *(_BYTE *)(a4 + 32);
  if (-v7 < 64)
    v8 = ~(-1 << -(char)v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(a4 + 56);
  if (!a2)
  {
    v12 = 0;
    v10 = 0;
LABEL_39:
    *v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  v10 = a3;
  if (!a3)
  {
    v12 = 0;
    goto LABEL_39;
  }
  if (a3 < 0)
    goto LABEL_41;
  v11 = a2;
  v12 = 0;
  v13 = 0;
  v14 = (unint64_t)(63 - v7) >> 6;
  v22 = -1 << *(_BYTE *)(a4 + 32);
  if (!v9)
    goto LABEL_9;
LABEL_8:
  v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    v20 = *(_QWORD *)(a4 + 48) + 24 * v16;
    v21 = *(_QWORD *)(v20 + 16);
    *(_OWORD *)v11 = *(_OWORD *)v20;
    *(_QWORD *)(v11 + 16) = v21;
    if (v13 == v10)
    {
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      goto LABEL_38;
    }
    v11 += 24;
    result = _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    if (v9)
      goto LABEL_8;
LABEL_9:
    v17 = v12 + 1;
    if (__OFADD__(v12, 1))
      break;
    if (v17 >= v14)
      goto LABEL_33;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    if (!v18)
    {
      v12 += 2;
      if (v17 + 1 >= v14)
      {
        v9 = 0;
        v12 = v17;
      }
      else
      {
        v18 = *(_QWORD *)(v6 + 8 * v12);
        if (v18)
          goto LABEL_14;
        v19 = v17 + 2;
        if (v17 + 2 >= v14)
          goto LABEL_33;
        v18 = *(_QWORD *)(v6 + 8 * v19);
        if (v18)
        {
LABEL_17:
          v17 = v19;
          goto LABEL_18;
        }
        v12 = v17 + 3;
        if (v17 + 3 < v14)
        {
          v18 = *(_QWORD *)(v6 + 8 * v12);
          if (v18)
          {
LABEL_14:
            v17 = v12;
            goto LABEL_18;
          }
          v19 = v17 + 4;
          if (v17 + 4 >= v14)
          {
LABEL_33:
            v9 = 0;
            goto LABEL_37;
          }
          v18 = *(_QWORD *)(v6 + 8 * v19);
          if (!v18)
          {
            while (1)
            {
              v17 = v19 + 1;
              if (__OFADD__(v19, 1))
                goto LABEL_42;
              if (v17 >= v14)
              {
                v9 = 0;
                v12 = v14 - 1;
                goto LABEL_37;
              }
              v18 = *(_QWORD *)(v6 + 8 * v17);
              ++v19;
              if (v18)
                goto LABEL_18;
            }
          }
          goto LABEL_17;
        }
        v9 = 0;
        v12 = v17 + 2;
      }
LABEL_37:
      v10 = v13;
LABEL_38:
      v7 = v22;
      goto LABEL_39;
    }
LABEL_18:
    v9 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v17 << 6);
    v12 = v17;
  }
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
  return result;
}

void sub_1C08A51D4(_QWORD *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  sub_1C08A5640(a1, a2, a3, a4, (unint64_t *)&qword_1ED7447C0, 0x1E0D3DFA8, &qword_1EF633240);
}

void sub_1C08A51F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(_QWORD);
  uint64_t (*v4)(_QWORD);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  sub_1C0779670();
  v4 = v3;
  v6 = v5;
  v8 = v7;
  v10 = v9;
  v12 = v11;
  sub_1C08A62D8(v11, v9, v7, v5, v3);
  sub_1C077591C();
  MEMORY[0x1E0C80A78](v13);
  sub_1C07A3008();
  MEMORY[0x1E0C80A78](v14);
  sub_1C08A60A0();
  v29 = v6;
  sub_1C08A5DBC();
  if (v10 && v8)
  {
    if (v8 < 0)
    {
LABEL_30:
      __break(1u);
    }
    else
    {
      v27 = v15;
      v16 = 0;
      sub_1C078B760();
      v28 = v17;
      if (!v2)
        goto LABEL_6;
LABEL_5:
      sub_1C08A6018();
      while (1)
      {
        sub_1C08A6314();
        sub_1C07E05C8(v20 + v12 * v21, v0, v4);
        v22 = sub_1C0787A98();
        sub_1C07E05F4(v22, v23, v4);
        sub_1C07E05F4(v1, v10, v4);
        v10 += v12;
        if (v2)
          goto LABEL_5;
LABEL_6:
        if (__OFADD__(v16, 1))
        {
          __break(1u);
          goto LABEL_30;
        }
        if (v16 + 1 >= v28)
          goto LABEL_27;
        sub_1C08A6144();
        if (!v19)
        {
          v16 = v18 + 1;
          if (v18 + 1 >= v28)
            goto LABEL_27;
          if (!*(_QWORD *)(v29 + 8 * v16))
          {
            if (v18 + 2 >= v28)
              goto LABEL_27;
            if (!*(_QWORD *)(v29 + 8 * (v18 + 2)))
            {
              v16 = v18 + 3;
              if (v18 + 3 >= v28)
                goto LABEL_27;
              if (!*(_QWORD *)(v29 + 8 * v16))
              {
                v24 = v18 + 4;
                if (v18 + 4 >= v28)
                {
LABEL_27:
                  v15 = v27;
                  goto LABEL_28;
                }
                if (!*(_QWORD *)(v29 + 8 * v24))
                  break;
              }
            }
          }
        }
LABEL_14:
        sub_1C08A5FB8();
      }
      while (!__OFADD__(v24, 1))
      {
        if (v24 + 1 >= v28)
          goto LABEL_27;
        sub_1C08A6144();
        v24 = v25 + 1;
        if (v26)
          goto LABEL_14;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_28:
    sub_1C08A60EC(~v15);
    sub_1C0776760();
  }
}

_QWORD *sub_1C08A53FC(_QWORD *result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int64_t v11;
  uint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  int v26;
  uint64_t v27;
  _QWORD *v28;

  v5 = a4 + 56;
  v6 = -1 << *(_BYTE *)(a4 + 32);
  if (-v6 < 64)
    v7 = ~(-1 << -(char)v6);
  else
    v7 = -1;
  v8 = v7 & *(_QWORD *)(a4 + 56);
  if (!a2)
  {
    v11 = 0;
    v9 = 0;
LABEL_39:
    *result = a4;
    result[1] = v5;
    result[2] = ~v6;
    result[3] = v11;
    result[4] = v8;
    return (_QWORD *)v9;
  }
  v9 = a3;
  if (!a3)
  {
    v11 = 0;
    goto LABEL_39;
  }
  if (a3 < 0)
    goto LABEL_41;
  v10 = a2;
  v27 = -1 << *(_BYTE *)(a4 + 32);
  v28 = result;
  v11 = 0;
  v12 = 0;
  v13 = (unint64_t)(63 - v6) >> 6;
  if (!v8)
    goto LABEL_9;
LABEL_8:
  v14 = __clz(__rbit64(v8));
  v8 &= v8 - 1;
  v15 = v14 | (v11 << 6);
  while (1)
  {
    ++v12;
    v19 = *(_QWORD *)(a4 + 48) + 56 * v15;
    v20 = *(_QWORD *)(v19 + 8);
    v21 = *(_QWORD *)(v19 + 16);
    v22 = *(_QWORD *)(v19 + 24);
    v23 = *(_QWORD *)(v19 + 32);
    v24 = *(_QWORD *)(v19 + 40);
    v25 = *(_BYTE *)(v19 + 48);
    v26 = *(_DWORD *)(v19 + 52);
    *(_QWORD *)v10 = *(_QWORD *)v19;
    *(_QWORD *)(v10 + 8) = v20;
    *(_QWORD *)(v10 + 16) = v21;
    *(_QWORD *)(v10 + 24) = v22;
    *(_QWORD *)(v10 + 32) = v23;
    *(_QWORD *)(v10 + 40) = v24;
    *(_BYTE *)(v10 + 48) = v25;
    *(_DWORD *)(v10 + 52) = v26;
    if (v12 == v9)
    {
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      goto LABEL_38;
    }
    v10 += 56;
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    result = (_QWORD *)_s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    if (v8)
      goto LABEL_8;
LABEL_9:
    v16 = v11 + 1;
    if (__OFADD__(v11, 1))
      break;
    if (v16 >= v13)
      goto LABEL_33;
    v17 = *(_QWORD *)(v5 + 8 * v16);
    if (!v17)
    {
      v11 += 2;
      if (v16 + 1 >= v13)
      {
        v8 = 0;
        v11 = v16;
      }
      else
      {
        v17 = *(_QWORD *)(v5 + 8 * v11);
        if (v17)
          goto LABEL_14;
        v18 = v16 + 2;
        if (v16 + 2 >= v13)
          goto LABEL_33;
        v17 = *(_QWORD *)(v5 + 8 * v18);
        if (v17)
        {
LABEL_17:
          v16 = v18;
          goto LABEL_18;
        }
        v11 = v16 + 3;
        if (v16 + 3 < v13)
        {
          v17 = *(_QWORD *)(v5 + 8 * v11);
          if (v17)
          {
LABEL_14:
            v16 = v11;
            goto LABEL_18;
          }
          v18 = v16 + 4;
          if (v16 + 4 >= v13)
          {
LABEL_33:
            v8 = 0;
            goto LABEL_37;
          }
          v17 = *(_QWORD *)(v5 + 8 * v18);
          if (!v17)
          {
            while (1)
            {
              v16 = v18 + 1;
              if (__OFADD__(v18, 1))
                goto LABEL_42;
              if (v16 >= v13)
              {
                v8 = 0;
                v11 = v13 - 1;
                goto LABEL_37;
              }
              v17 = *(_QWORD *)(v5 + 8 * v16);
              ++v18;
              if (v17)
                goto LABEL_18;
            }
          }
          goto LABEL_17;
        }
        v8 = 0;
        v11 = v16 + 2;
      }
LABEL_37:
      v9 = v12;
LABEL_38:
      v6 = v27;
      result = v28;
      goto LABEL_39;
    }
LABEL_18:
    v8 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v16 << 6);
    v11 = v16;
  }
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
  return result;
}

void sub_1C08A5640(_QWORD *a1, _QWORD *a2, uint64_t a3, uint64_t a4, unint64_t *a5, uint64_t a6, unint64_t *a7)
{
  uint64_t v7;
  _QWORD *v9;
  uint64_t v12;
  uint64_t v13;
  int64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  id v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  int64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  int64_t v30;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  int64_t v36;
  uint64_t v37;

  v7 = a4;
  v9 = a2;
  if ((a4 & 0xC000000000000001) != 0)
  {
    sub_1C1070690();
    sub_1C08A5CAC(0, a5);
    sub_1C08A5C70(a7, a5);
    sub_1C1070258();
    v7 = v33;
    v12 = v34;
    v13 = v35;
    v14 = v36;
    v15 = v37;
    if (!v9)
      goto LABEL_37;
  }
  else
  {
    v14 = 0;
    v24 = -1 << *(_BYTE *)(a4 + 32);
    v12 = a4 + 56;
    v13 = ~v24;
    v25 = -v24;
    if (v25 < 64)
      v26 = ~(-1 << v25);
    else
      v26 = -1;
    v15 = v26 & *(_QWORD *)(a4 + 56);
    if (!a2)
    {
LABEL_37:
      v27 = a1;
LABEL_39:
      *v27 = v7;
      v27[1] = v12;
      v27[2] = v13;
      v27[3] = v14;
      v27[4] = v15;
      sub_1C07892E0();
      return;
    }
  }
  if (!a3)
    goto LABEL_37;
  if (a3 < 0)
    goto LABEL_46;
  v16 = 0;
  v30 = (unint64_t)(v13 + 64) >> 6;
  v28 = v13;
  while (v7 < 0)
  {
    if (!sub_1C10706B4())
      goto LABEL_38;
    sub_1C08A5CAC(0, a5);
    swift_unknownObjectRetain();
    sub_1C077D040();
    v19 = v32;
    swift_unknownObjectRelease();
    if (!v32)
      goto LABEL_38;
LABEL_23:
    ++v16;
    *v9++ = v19;
    if (v16 == a3)
      goto LABEL_38;
  }
  if (v15)
  {
    sub_1C0782168();
    v18 = v17 | (v14 << 6);
    goto LABEL_22;
  }
  v20 = v14 + 1;
  if (!__OFADD__(v14, 1))
  {
    if (v20 >= v30)
    {
      v15 = 0;
LABEL_38:
      v13 = v28;
      v27 = a1;
      goto LABEL_39;
    }
    v21 = *(_QWORD *)(v12 + 8 * v20);
    if (v21)
      goto LABEL_21;
    v22 = v14 + 2;
    if (v14 + 2 >= v30)
    {
      v15 = 0;
      ++v14;
      goto LABEL_38;
    }
    v21 = *(_QWORD *)(v12 + 8 * v22);
    if (!v21)
    {
      if (v14 + 3 >= v30)
        goto LABEL_42;
      v21 = *(_QWORD *)(v12 + 8 * (v14 + 3));
      if (v21)
      {
        v20 = v14 + 3;
        goto LABEL_21;
      }
      v22 = v14 + 4;
      if (v14 + 4 >= v30)
      {
        v15 = 0;
        v14 += 3;
        goto LABEL_38;
      }
      v21 = *(_QWORD *)(v12 + 8 * v22);
      if (!v21)
      {
        v20 = v14 + 5;
        if (v14 + 5 >= v30)
        {
LABEL_42:
          v15 = 0;
          v14 = v22;
          goto LABEL_38;
        }
        v21 = *(_QWORD *)(v12 + 8 * v20);
        if (!v21)
        {
          v23 = v14 + 6;
          while (v23 < v30)
          {
            v21 = *(_QWORD *)(v12 + 8 * v23++);
            if (v21)
            {
              v20 = v23 - 1;
              goto LABEL_21;
            }
          }
          v15 = 0;
          v14 = v30 - 1;
          goto LABEL_38;
        }
        goto LABEL_21;
      }
    }
    v20 = v22;
LABEL_21:
    v15 = (v21 - 1) & v21;
    v18 = __clz(__rbit64(v21)) + (v20 << 6);
    v14 = v20;
LABEL_22:
    v19 = *(id *)(*(_QWORD *)(v7 + 48) + 8 * v18);
    if (!v19)
      goto LABEL_38;
    goto LABEL_23;
  }
  __break(1u);
LABEL_46:
  __break(1u);
}

void sub_1C08A5910()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  char v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  sub_1C077AEA0();
  v5 = v4 + 64;
  sub_1C08A5DBC();
  if (v7 && v6)
  {
    if (v6 < 0)
    {
LABEL_32:
      __break(1u);
    }
    else
    {
      sub_1C07B5BE8();
      if (!v1)
        goto LABEL_6;
LABEL_5:
      sub_1C08A6030();
      while (1)
      {
        sub_1C07BA910();
        if (v12)
        {
          _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
          goto LABEL_30;
        }
        v0 += 16;
        _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
        if (v1)
          goto LABEL_5;
LABEL_6:
        v8 = v3 + 1;
        if (__OFADD__(v3, 1))
        {
          __break(1u);
          goto LABEL_32;
        }
        if (v8 >= v2)
          goto LABEL_30;
        if (!*(_QWORD *)(v5 + 8 * v8))
        {
          sub_1C08A6234();
          if (v10 == v11)
            goto LABEL_30;
          if (!*(_QWORD *)(v5 + 8 * v3))
          {
            if (v9 + 2 >= v2)
              goto LABEL_30;
            if (!*(_QWORD *)(v5 + 8 * (v9 + 2)))
            {
              sub_1C08A6228();
              if (v10 == v11)
                goto LABEL_30;
              if (!*(_QWORD *)(v5 + 8 * v3))
              {
                v14 = v13 + 4;
                if (v13 + 4 >= v2)
                  goto LABEL_30;
                if (!*(_QWORD *)(v5 + 8 * v14))
                  break;
              }
            }
          }
        }
LABEL_15:
        sub_1C08A5F9C();
      }
      while (1)
      {
        v15 = v14 + 1;
        if (__OFADD__(v14, 1))
          break;
        if (v15 >= v2)
          goto LABEL_30;
        ++v14;
        if (*(_QWORD *)(v5 + 8 * v15))
          goto LABEL_15;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_30:
    sub_1C08A6104();
    sub_1C0776728();
  }
}

uint64_t sub_1C08A5A70(void *a1)
{
  id v1;
  void *v2;
  uint64_t v3;

  v1 = objc_msgSend(a1, sel_soundName);
  if (!v1)
    return 0;
  v2 = v1;
  v3 = sub_1C106FB14();

  return v3;
}

unint64_t sub_1C08A5AD0()
{
  unint64_t result;

  result = qword_1ED754FB8;
  if (!qword_1ED754FB8)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C107B464, &type metadata for Behavior);
    atomic_store(result, (unint64_t *)&qword_1ED754FB8);
  }
  return result;
}

unint64_t sub_1C08A5B0C()
{
  unint64_t result;

  result = qword_1EF633198;
  if (!qword_1EF633198)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C107C81C, &unk_1E7A0E608);
    atomic_store(result, (unint64_t *)&qword_1EF633198);
  }
  return result;
}

_QWORD *sub_1C08A5B48(_QWORD *a1, _QWORD *a2)
{
  _s24PersonNamesViewGeneratorC10PersonNameVwta(a2, a1);
  return a2;
}

unint64_t sub_1C08A5B84()
{
  unint64_t result;

  result = qword_1ED745368;
  if (!qword_1ED745368)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10A453C, &unk_1E7A205A0);
    atomic_store(result, (unint64_t *)&qword_1ED745368);
  }
  return result;
}

uint64_t sub_1C08A5BC0(uint64_t a1, char a2)
{
  uint64_t result;

  if ((a2 & 1) != 0)
    return _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  return result;
}

void sub_1C08A5BCC(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;

  v3 = sub_1C0779690(a1, a2, a3);
  sub_1C0775828(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40));
  sub_1C0778534();
}

uint64_t sub_1C08A5BF8(uint64_t a1, uint64_t a2)
{
  assignWithTake for AddressLinkingModel.AddressLinkingModelCache.CachedAddressLinkingModel(a2, a1);
  return a2;
}

uint64_t sub_1C08A5C34(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for AddressLinkingModel.AddressLinkingModelCache.CachedAddressLinkingModel(a2, a1);
  return a2;
}

void sub_1C08A5C70(unint64_t *a1, unint64_t *a2)
{
  uint64_t v3;

  if (!*a1)
  {
    sub_1C08A5CAC(255, a2);
    atomic_store(MEMORY[0x1C3BA8174](MEMORY[0x1E0DEFCF8], v3), a1);
  }
  sub_1C0778534();
}

void sub_1C08A5CAC(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    objc_opt_self();
    atomic_store(swift_getObjCClassMetadata(), a2);
  }
  sub_1C0778534();
}

unint64_t sub_1C08A5CE0()
{
  unint64_t result;

  result = qword_1EF633260;
  if (!qword_1EF633260)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10CD630, &unk_1E7A41CD0);
    atomic_store(result, (unint64_t *)&qword_1EF633260);
  }
  return result;
}

void sub_1C08A5D1C(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;

  v2 = sub_1C077E6F4(a1, a2);
  sub_1C077B5C8(v2);
  sub_1C0778534();
}

uint64_t sub_1C08A5D3C(uint64_t a1, uint64_t a2)
{
  sub_1C08FEF7C(a2, a1);
  return a2;
}

uint64_t sub_1C08A5D78(uint64_t a1, uint64_t a2)
{
  _s11SourceStateVwtk(a2, a1);
  return a2;
}

void sub_1C08A5DD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  unint64_t v10;

  *(_QWORD *)(a10 + ((v10 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v10;
}

void sub_1C08A5E08()
{
  uint64_t v0;
  unint64_t v1;

  *(_QWORD *)(v0 + 8 * (v1 >> 6) + 64) |= 1 << v1;
}

unint64_t sub_1C08A5E58()
{
  uint64_t v0;
  uint64_t v1;

  return sub_1C077D774(v1, v0);
}

uint64_t sub_1C08A5E84()
{
  return 0;
}

uint64_t sub_1C08A5E94()
{
  return swift_dynamicCast();
}

uint64_t sub_1C08A5EBC()
{
  uint64_t v0;

  return v0;
}

void sub_1C08A5EDC(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  sub_1C078A67C(a1, a2, v2);
}

uint64_t sub_1C08A5EE4()
{
  _QWORD *v0;
  uint64_t v1;

  *v0 = 0x8000000000000000;
  return v1;
}

uint64_t sub_1C08A5F04()
{
  _QWORD *v0;
  uint64_t v1;

  *v0 = 0x8000000000000000;
  return v1;
}

double sub_1C08A5F3C()
{
  _OWORD *v0;
  double result;

  result = 0.0;
  *v0 = 0u;
  v0[1] = 0u;
  return result;
}

void sub_1C08A5F48(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  sub_1C0784AC0(*(_QWORD *)(v2 + 56) + 40 * a1, v1);
}

id sub_1C08A5F5C(uint64_t a1)
{
  uint64_t v1;

  return *(id *)(*(_QWORD *)(v1 + 56) + 8 * a1);
}

uint64_t sub_1C08A5F84()
{
  uint64_t v0;

  return v0;
}

unint64_t sub_1C08A5F90()
{
  uint64_t v0;
  uint64_t v1;

  return sub_1C077D774(v1, v0);
}

void sub_1C08A5FD4(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(_QWORD);

  sub_1C07E05F4(a1, a2, v2);
}

uint64_t sub_1C08A5FDC()
{
  return sub_1C107090C();
}

uint64_t sub_1C08A5FF0()
{
  return sub_1C106FA0C();
}

void sub_1C08A5FF8(uint64_t a1)
{
  uint64_t (*v1)(_QWORD);

  sub_1C08A5D1C(a1, v1);
}

void sub_1C08A6010(uint64_t a1)
{
  uint64_t (*v1)(_QWORD);

  sub_1C08A5D1C(a1, v1);
}

uint64_t sub_1C08A6048()
{
  uint64_t v0;
  uint64_t v1;

  return sub_1C07B2D80(v0, 1, v1);
}

void sub_1C08A6068(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v2 + 16) = v1;
  *(_QWORD *)(v2 + 24) = 2 * (a1 / v3);
}

unint64_t sub_1C08A6090()
{
  uint64_t v0;
  uint64_t v1;

  return sub_1C077D774(v1, v0);
}

void sub_1C08A60A0()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 88) = v0;
}

uint64_t sub_1C08A60B8()
{
  return sub_1C106FC28();
}

void sub_1C08A60C8()
{
  sub_1C07DCD84();
}

uint64_t sub_1C08A60EC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;

  *v4 = v2;
  v4[1] = v1;
  v4[2] = a1;
  v4[3] = v3;
  v4[4] = v5;
  return v6;
}

uint64_t sub_1C08A6104()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *v0 = v1;
  v0[1] = v3;
  v0[2] = ~v4;
  v0[3] = v6;
  v0[4] = v5;
  return v2;
}

uint64_t sub_1C08A611C()
{
  return swift_bridgeObjectRelease();
}

void sub_1C08A612C(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 56) |= v1;
}

void sub_1C08A613C(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  sub_1C078A67C(a1, a2, v2);
}

uint64_t sub_1C08A6150()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C08A617C()
{
  return sub_1C107090C();
}

uint64_t sub_1C08A6188()
{
  return swift_release();
}

uint64_t sub_1C08A6194()
{
  return swift_retain();
}

uint64_t sub_1C08A61B4@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v2, v1);
}

_OWORD *sub_1C08A61D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,__int128 a24)
{
  uint64_t v24;

  return sub_1C07C010C((_OWORD *)(v24 - 120), &a24);
}

uint64_t sub_1C08A61E0()
{
  uint64_t v0;
  uint64_t v1;

  return *(_QWORD *)(v0 + *(int *)(*(_QWORD *)(v1 - 192) + 24));
}

uint64_t sub_1C08A6260()
{
  uint64_t v0;
  uint64_t v1;

  return *(_QWORD *)(*(_QWORD *)(v1 + 48) + 16 * v0 + 8);
}

void sub_1C08A6274()
{
  uint64_t *v0;
  uint64_t v1;

  sub_1C07B1C6C(v1 - 192, v0);
}

uint64_t sub_1C08A6280()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1C08A6294()
{
  return sub_1C106FA0C();
}

uint64_t sub_1C08A62C0()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C08A62CC()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1C08A62D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD))
{
  return a5(0);
}

uint64_t sub_1C08A62EC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  return a3();
}

uint64_t sub_1C08A6328()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1C08A6350()
{
  return sub_1C1070234();
}

__n128 sub_1C08A6358(__n128 *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,__n128 a23)
{
  __n128 result;

  result = a23;
  a1[1] = a23;
  return result;
}

uint64_t sub_1C08A6380()
{
  return sub_1C1070234();
}

uint64_t sub_1C08A6388()
{
  return sub_1C106ADE0();
}

void sub_1C08A6394(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  sub_1C078A8F8(a1, a2, v2);
}

uint64_t sub_1C08A639C(uint64_t a1)
{
  void *v1;
  void *v3;
  uint64_t v5;

  v3 = (void *)MEMORY[0x1C3BA79F4]();
  sub_1C08A63F0(v1, a1, &v5);
  objc_autoreleasePoolPop(v3);
  return v5;
}

uint64_t sub_1C08A63F0@<X0>(void *a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  id v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  id v20;
  uint64_t v21;
  void *v22;
  id v23;
  id v24;
  uint64_t aBlock;
  uint64_t v27;
  uint64_t (*v28)(uint64_t);
  void *v29;
  void (*v30)(void *);
  uint64_t v31;

  v6 = sub_1C07ACF80((uint64_t *)&unk_1ED762690);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&aBlock - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&aBlock - v10;
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = 0;
  v13 = sub_1C106ADE0();
  sub_1C07B2D8C((uint64_t)v11, 1, 1, v13);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v8, a2, v13);
  sub_1C07B2D8C((uint64_t)v8, 0, 1, v13);
  v14 = objc_allocWithZone(MEMORY[0x1E0D026F0]);
  v15 = sub_1C07DC9F8((uint64_t)v11, (uint64_t)v8, 1, 1, 0);
  v16 = objc_msgSend(a1, sel_publisherWithOptions_, v15);

  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = a1;
  v30 = sub_1C08A6BC4;
  v31 = v17;
  v18 = MEMORY[0x1E0C809B0];
  aBlock = MEMORY[0x1E0C809B0];
  v27 = 1107296256;
  v28 = (uint64_t (*)(uint64_t))sub_1C07BF90C;
  v29 = &unk_1E7A11A00;
  v19 = _Block_copy(&aBlock);
  v20 = a1;
  swift_release();
  v21 = swift_allocObject();
  *(_QWORD *)(v21 + 16) = v20;
  *(_QWORD *)(v21 + 24) = v12;
  v30 = sub_1C08A6BF8;
  v31 = v21;
  aBlock = v18;
  v27 = 1107296256;
  v28 = sub_1C077AA44;
  v29 = &unk_1E7A11A50;
  v22 = _Block_copy(&aBlock);
  v23 = v20;
  swift_retain();
  swift_release();
  v24 = objc_msgSend(v16, sel_sinkWithCompletion_receiveInput_, v19, v22);

  _Block_release(v22);
  _Block_release(v19);

  swift_beginAccess();
  *a3 = *(_QWORD *)(v12 + 16);
  swift_unknownObjectRetain();
  return swift_release();
}

uint64_t sub_1C08A6698()
{
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

void sub_1C08A66BC(void *a1, void *a2)
{
  id v3;
  void *v4;
  uint64_t v5;
  id v6;
  id v7;
  id v8;
  NSObject *v9;
  os_log_type_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  id v17;
  uint64_t v18;
  unint64_t v19;
  id v20;
  uint64_t v21;

  v3 = objc_msgSend(a1, sel_error);
  if (v3)
  {
    v4 = v3;
    if (qword_1ED762B18 != -1)
      swift_once();
    v5 = sub_1C106F544();
    sub_1C079E000(v5, (uint64_t)qword_1ED762AF8);
    v6 = a2;
    v7 = v4;
    v8 = v6;
    v20 = v7;
    v9 = sub_1C106F538();
    v10 = sub_1C1070390();
    if (os_log_type_enabled(v9, v10))
    {
      v11 = swift_slowAlloc();
      v12 = swift_slowAlloc();
      v21 = v12;
      *(_DWORD *)v11 = 136315394;
      v13 = objc_msgSend(v8, sel_description);
      v14 = sub_1C106FB14();
      v16 = v15;

      sub_1C0788DAC(v14, v16, &v21);
      sub_1C10705AC();

      swift_bridgeObjectRelease();
      *(_WORD *)(v11 + 12) = 2080;
      v17 = v20;
      sub_1C07ACF80(&qword_1ED7614F0);
      v18 = sub_1C106FB5C();
      sub_1C0788DAC(v18, v19, &v21);
      sub_1C10705AC();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C0771000, v9, v10, "Unable to fetch events from stream %s with error: %s", (uint8_t *)v11, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1C3BA8270](v12, -1, -1);
      MEMORY[0x1C3BA8270](v11, -1, -1);

    }
    else
    {

    }
  }
}

void sub_1C08A694C(void *a1, void *a2, uint64_t a3)
{
  id v6;
  id v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  id v17;
  uint64_t v18[4];

  if ((objc_msgSend(a1, sel_respondsToSelector_, sel_eventBody) & 1) != 0)
  {
    v6 = objc_msgSend(a1, sel_eventBody);
    if (v6)
    {
      v7 = v6;
      swift_beginAccess();
      *(_QWORD *)(a3 + 16) = v7;
      swift_unknownObjectRelease();
    }
    else
    {
      if (qword_1ED762B18 != -1)
        swift_once();
      v8 = sub_1C106F544();
      sub_1C079E000(v8, (uint64_t)qword_1ED762AF8);
      v17 = a2;
      v9 = sub_1C106F538();
      v10 = sub_1C10703A8();
      if (os_log_type_enabled(v9, v10))
      {
        v11 = (uint8_t *)swift_slowAlloc();
        v12 = swift_slowAlloc();
        v18[0] = v12;
        *(_DWORD *)v11 = 136315138;
        v13 = objc_msgSend(v17, sel_description);
        v14 = sub_1C106FB14();
        v16 = v15;

        v18[3] = sub_1C0788DAC(v14, v16, v18);
        sub_1C10705AC();

        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1C0771000, v9, v10, "Unable to parse event body from stream: %s", v11, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1C3BA8270](v12, -1, -1);
        MEMORY[0x1C3BA8270](v11, -1, -1);

      }
      else
      {

      }
    }
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1C08A6BA0()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_1C08A6BC4(void *a1)
{
  uint64_t v1;

  sub_1C08A66BC(a1, *(void **)(v1 + 16));
}

uint64_t sub_1C08A6BCC()
{
  uint64_t v0;

  swift_release();
  return swift_deallocObject();
}

void sub_1C08A6BF8(void *a1)
{
  uint64_t v1;

  sub_1C08A694C(a1, *(void **)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_1C08A6C08()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  sub_1C07ACF80(&qword_1EF6332A0);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1C107E7A0;
  *(_QWORD *)(v0 + 32) = 1701869940;
  *(_QWORD *)(v0 + 40) = 0xE400000000000000;
  *(_QWORD *)(v0 + 48) = swift_getKeyPath();
  *(_QWORD *)(v0 + 56) = 0x696669746E656469;
  *(_QWORD *)(v0 + 64) = 0xEA00000000007265;
  *(_QWORD *)(v0 + 72) = swift_getKeyPath();
  *(_QWORD *)(v0 + 80) = 0x69746167654E7369;
  *(_QWORD *)(v0 + 88) = 0xEA00000000006576;
  *(_QWORD *)(v0 + 96) = swift_getKeyPath();
  strcpy((char *)(v0 + 104), "sequenceNumber");
  *(_BYTE *)(v0 + 119) = -18;
  *(_QWORD *)(v0 + 120) = swift_getKeyPath();
  *(_QWORD *)(v0 + 128) = 0xD000000000000010;
  sub_1C077C7B4();
  *(_QWORD *)(v0 + 136) = v1;
  *(_QWORD *)(v0 + 144) = swift_getKeyPath();
  *(_QWORD *)(v0 + 152) = 0xD000000000000022;
  sub_1C077C7B4();
  *(_QWORD *)(v0 + 160) = v2;
  *(_QWORD *)(v0 + 168) = swift_getKeyPath();
  *(_QWORD *)(v0 + 176) = 0xD000000000000010;
  sub_1C077C7B4();
  *(_QWORD *)(v0 + 184) = v3;
  *(_QWORD *)(v0 + 192) = swift_getKeyPath();
  *(_QWORD *)(v0 + 200) = 0xD000000000000010;
  sub_1C077C7B4();
  *(_QWORD *)(v0 + 208) = v4;
  *(_QWORD *)(v0 + 216) = swift_getKeyPath();
  *(_QWORD *)(v0 + 224) = 0xD000000000000012;
  sub_1C077C7B4();
  *(_QWORD *)(v0 + 232) = v5;
  *(_QWORD *)(v0 + 240) = swift_getKeyPath();
  *(_QWORD *)(v0 + 248) = 0xD00000000000001BLL;
  sub_1C077C7B4();
  *(_QWORD *)(v0 + 256) = v6;
  *(_QWORD *)(v0 + 264) = swift_getKeyPath();
  *(_QWORD *)(v0 + 272) = 0xD00000000000001ALL;
  sub_1C077C7B4();
  *(_QWORD *)(v0 + 280) = v7;
  *(_QWORD *)(v0 + 288) = swift_getKeyPath();
  *(_QWORD *)(v0 + 296) = 0xD00000000000001FLL;
  sub_1C077C7B4();
  *(_QWORD *)(v0 + 304) = v8;
  *(_QWORD *)(v0 + 312) = swift_getKeyPath();
  *(_QWORD *)(v0 + 320) = 0xD00000000000001FLL;
  sub_1C077C7B4();
  *(_QWORD *)(v0 + 328) = v9;
  *(_QWORD *)(v0 + 336) = swift_getKeyPath();
  sub_1C079D31C();
  sub_1C0782B28();
  sub_1C077C7B4();
  *(_QWORD *)(v0 + 344) = 0xD000000000000028;
  *(_QWORD *)(v0 + 352) = v10;
  *(_QWORD *)(v0 + 360) = swift_getKeyPath();
  sub_1C079D31C();
  sub_1C0782B28();
  sub_1C077C7B4();
  *(_QWORD *)(v0 + 368) = 0xD00000000000002ELL;
  *(_QWORD *)(v0 + 376) = v11;
  *(_QWORD *)(v0 + 384) = swift_getKeyPath();
  sub_1C079D31C();
  sub_1C0782B28();
  sub_1C077C7B4();
  *(_QWORD *)(v0 + 392) = 0xD000000000000028;
  *(_QWORD *)(v0 + 400) = v12;
  *(_QWORD *)(v0 + 408) = swift_getKeyPath();
  sub_1C079D31C();
  sub_1C0782B28();
  sub_1C077C7B4();
  *(_QWORD *)(v0 + 416) = 0xD000000000000022;
  *(_QWORD *)(v0 + 424) = v13;
  *(_QWORD *)(v0 + 432) = swift_getKeyPath();
  sub_1C079D31C();
  sub_1C0782B28();
  sub_1C077C7B4();
  *(_QWORD *)(v0 + 440) = 0xD00000000000002CLL;
  *(_QWORD *)(v0 + 448) = v14;
  *(_QWORD *)(v0 + 456) = swift_getKeyPath();
  sub_1C079D31C();
  sub_1C0782B28();
  sub_1C077C7B4();
  *(_QWORD *)(v0 + 464) = 0xD00000000000002ELL;
  *(_QWORD *)(v0 + 472) = v15;
  *(_QWORD *)(v0 + 480) = swift_getKeyPath();
  sub_1C079D31C();
  sub_1C0782B28();
  sub_1C077C7B4();
  *(_QWORD *)(v0 + 488) = 0xD00000000000002CLL;
  *(_QWORD *)(v0 + 496) = v16;
  *(_QWORD *)(v0 + 504) = swift_getKeyPath();
  sub_1C079D31C();
  sub_1C0782B28();
  *(_QWORD *)(v0 + 512) = 0xD00000000000002BLL;
  sub_1C077C7B4();
  *(_QWORD *)(v0 + 520) = v17;
  *(_QWORD *)(v0 + 528) = swift_getKeyPath();
  sub_1C079D31C();
  sub_1C0782B28();
  *(_QWORD *)(v0 + 536) = 0xD000000000000023;
  sub_1C077C7B4();
  *(_QWORD *)(v0 + 544) = v18;
  *(_QWORD *)(v0 + 552) = swift_getKeyPath();
  sub_1C079D31C();
  sub_1C0782B28();
  *(_QWORD *)(v0 + 560) = 0xD000000000000028;
  sub_1C077C7B4();
  *(_QWORD *)(v0 + 568) = v19;
  *(_QWORD *)(v0 + 576) = swift_getKeyPath();
  sub_1C079D31C();
  sub_1C0782B28();
  *(_QWORD *)(v0 + 584) = 0xD00000000000002ALL;
  sub_1C077C7B4();
  *(_QWORD *)(v0 + 592) = v20;
  *(_QWORD *)(v0 + 600) = swift_getKeyPath();
  sub_1C079D31C();
  sub_1C0782B28();
  *(_QWORD *)(v0 + 608) = 0xD000000000000028;
  sub_1C077C7B4();
  *(_QWORD *)(v0 + 616) = v21;
  *(_QWORD *)(v0 + 624) = swift_getKeyPath();
  sub_1C079D31C();
  sub_1C0782B28();
  *(_QWORD *)(v0 + 632) = 0xD00000000000002ELL;
  sub_1C077C7B4();
  *(_QWORD *)(v0 + 640) = v22;
  *(_QWORD *)(v0 + 648) = swift_getKeyPath();
  sub_1C079D31C();
  sub_1C0782B28();
  *(_QWORD *)(v0 + 656) = 0xD000000000000028;
  sub_1C077C7B4();
  *(_QWORD *)(v0 + 664) = v23;
  *(_QWORD *)(v0 + 672) = swift_getKeyPath();
  sub_1C079D31C();
  sub_1C0782B28();
  *(_QWORD *)(v0 + 680) = 0xD000000000000022;
  sub_1C077C7B4();
  *(_QWORD *)(v0 + 688) = v24;
  *(_QWORD *)(v0 + 696) = swift_getKeyPath();
  sub_1C079D31C();
  sub_1C0782B28();
  *(_QWORD *)(v0 + 704) = 0xD00000000000002CLL;
  sub_1C077C7B4();
  *(_QWORD *)(v0 + 712) = v25;
  *(_QWORD *)(v0 + 720) = swift_getKeyPath();
  sub_1C079D31C();
  sub_1C0782B28();
  *(_QWORD *)(v0 + 728) = 0xD00000000000002ELL;
  sub_1C077C7B4();
  *(_QWORD *)(v0 + 736) = v26;
  *(_QWORD *)(v0 + 744) = swift_getKeyPath();
  sub_1C079D31C();
  sub_1C0782B28();
  *(_QWORD *)(v0 + 752) = 0xD00000000000002CLL;
  sub_1C077C7B4();
  *(_QWORD *)(v0 + 760) = v27;
  *(_QWORD *)(v0 + 768) = swift_getKeyPath();
  sub_1C079D31C();
  sub_1C0782B28();
  *(_QWORD *)(v0 + 776) = 0xD00000000000002BLL;
  sub_1C077C7B4();
  *(_QWORD *)(v0 + 784) = v28;
  *(_QWORD *)(v0 + 792) = swift_getKeyPath();
  sub_1C079D31C();
  sub_1C0782B28();
  *(_QWORD *)(v0 + 800) = 0xD000000000000023;
  sub_1C077C7B4();
  *(_QWORD *)(v0 + 808) = v29;
  *(_QWORD *)(v0 + 816) = swift_getKeyPath();
  sub_1C079D31C();
  sub_1C0782B28();
  *(_QWORD *)(v0 + 824) = 0xD000000000000028;
  sub_1C077C7B4();
  *(_QWORD *)(v0 + 832) = v30;
  *(_QWORD *)(v0 + 840) = swift_getKeyPath();
  sub_1C079D31C();
  sub_1C0782B28();
  *(_QWORD *)(v0 + 848) = 0xD00000000000002ALL;
  sub_1C077C7B4();
  *(_QWORD *)(v0 + 856) = v31;
  *(_QWORD *)(v0 + 864) = swift_getKeyPath();
  sub_1C0AA799C();
  sub_1C0787AA4();
  sub_1C0782B28();
  sub_1C078C8BC();
  sub_1C078D4AC();
  sub_1C0775844();
  sub_1C0778580();
  *(_QWORD *)(v0 + 872) = 0xD000000000000021;
  *(_QWORD *)(v0 + 880) = 0x80000001C10E5B60;
  *(_QWORD *)(v0 + 888) = swift_getKeyPath();
  sub_1C0AA799C();
  sub_1C0787AA4();
  sub_1C0782B28();
  sub_1C078C8BC();
  sub_1C078D4AC();
  sub_1C0775844();
  sub_1C0778580();
  *(_QWORD *)(v0 + 896) = 0xD000000000000021;
  *(_QWORD *)(v0 + 904) = 0x80000001C10E5B60;
  *(_QWORD *)(v0 + 912) = swift_getKeyPath();
  sub_1C0AA799C();
  sub_1C0787AA4();
  sub_1C0782B28();
  sub_1C078C8BC();
  sub_1C078D4AC();
  sub_1C0775844();
  sub_1C0778580();
  *(_QWORD *)(v0 + 920) = 0xD000000000000021;
  *(_QWORD *)(v0 + 928) = 0x80000001C10E5B60;
  *(_QWORD *)(v0 + 936) = swift_getKeyPath();
  sub_1C0AA799C();
  sub_1C0787AA4();
  sub_1C0782B28();
  sub_1C078C8BC();
  sub_1C078D4AC();
  sub_1C0775844();
  sub_1C0778580();
  *(_QWORD *)(v0 + 944) = 0xD000000000000021;
  *(_QWORD *)(v0 + 952) = 0x80000001C10E5B60;
  *(_QWORD *)(v0 + 960) = swift_getKeyPath();
  sub_1C0AA799C();
  sub_1C0787AA4();
  sub_1C0782B28();
  sub_1C078C8BC();
  sub_1C078D4AC();
  sub_1C0775844();
  sub_1C0778580();
  *(_QWORD *)(v0 + 968) = 0xD000000000000021;
  *(_QWORD *)(v0 + 976) = 0x80000001C10E5B60;
  *(_QWORD *)(v0 + 984) = swift_getKeyPath();
  sub_1C0AA799C();
  sub_1C0787AA4();
  sub_1C0782B28();
  sub_1C078C8BC();
  sub_1C078D4AC();
  sub_1C0775844();
  sub_1C0778580();
  *(_QWORD *)(v0 + 992) = 0xD000000000000021;
  *(_QWORD *)(v0 + 1000) = 0x80000001C10E5B60;
  *(_QWORD *)(v0 + 1008) = swift_getKeyPath();
  sub_1C0AA799C();
  sub_1C0787AA4();
  sub_1C0782B28();
  sub_1C078C8BC();
  sub_1C078D4AC();
  sub_1C0775844();
  sub_1C0778580();
  *(_QWORD *)(v0 + 1016) = 0xD000000000000021;
  *(_QWORD *)(v0 + 1024) = 0x80000001C10E5B60;
  *(_QWORD *)(v0 + 1032) = swift_getKeyPath();
  sub_1C0AA799C();
  sub_1C0787AA4();
  sub_1C0782B28();
  sub_1C078C8BC();
  sub_1C078D4AC();
  sub_1C0775844();
  sub_1C0778580();
  *(_QWORD *)(v0 + 1040) = 0xD000000000000021;
  *(_QWORD *)(v0 + 1048) = 0x80000001C10E5B60;
  *(_QWORD *)(v0 + 1056) = swift_getKeyPath();
  sub_1C0AA799C();
  sub_1C0787AA4();
  sub_1C0782B28();
  sub_1C078C8BC();
  sub_1C078D4AC();
  sub_1C0775844();
  sub_1C0778580();
  *(_QWORD *)(v0 + 1064) = 0xD000000000000021;
  *(_QWORD *)(v0 + 1072) = 0x80000001C10E5B60;
  *(_QWORD *)(v0 + 1080) = swift_getKeyPath();
  sub_1C0AA799C();
  sub_1C0787AA4();
  sub_1C0782B28();
  sub_1C078C8BC();
  sub_1C078D4AC();
  sub_1C0775844();
  sub_1C0778580();
  *(_QWORD *)(v0 + 1088) = 0xD000000000000021;
  *(_QWORD *)(v0 + 1096) = 0x80000001C10E5B60;
  *(_QWORD *)(v0 + 1104) = swift_getKeyPath();
  sub_1C0AA799C();
  sub_1C0787AA4();
  sub_1C0782B28();
  sub_1C078C8BC();
  sub_1C078D4AC();
  sub_1C0775844();
  sub_1C0778580();
  *(_QWORD *)(v0 + 1112) = 0xD000000000000021;
  *(_QWORD *)(v0 + 1120) = 0x80000001C10E5B60;
  *(_QWORD *)(v0 + 1128) = swift_getKeyPath();
  sub_1C0AA799C();
  sub_1C0787AA4();
  sub_1C0782B28();
  sub_1C078C8BC();
  sub_1C078D4AC();
  sub_1C0775844();
  sub_1C0778580();
  *(_QWORD *)(v0 + 1136) = 0xD000000000000021;
  *(_QWORD *)(v0 + 1144) = 0x80000001C10E5B60;
  *(_QWORD *)(v0 + 1152) = swift_getKeyPath();
  sub_1C0AA799C();
  sub_1C0787AA4();
  sub_1C0782B28();
  sub_1C078C8BC();
  sub_1C078D4AC();
  sub_1C0775844();
  sub_1C0778580();
  *(_QWORD *)(v0 + 1160) = 0xD000000000000021;
  *(_QWORD *)(v0 + 1168) = 0x80000001C10E5B60;
  *(_QWORD *)(v0 + 1176) = swift_getKeyPath();
  sub_1C0AA799C();
  sub_1C0787AA4();
  sub_1C0782B28();
  sub_1C078C8BC();
  sub_1C078D4AC();
  sub_1C0775844();
  sub_1C0778580();
  *(_QWORD *)(v0 + 1184) = 0xD000000000000021;
  *(_QWORD *)(v0 + 1192) = 0x80000001C10E5B60;
  *(_QWORD *)(v0 + 1200) = swift_getKeyPath();
  sub_1C0AA799C();
  sub_1C0787AA4();
  sub_1C0782B28();
  sub_1C078C8BC();
  sub_1C078D4AC();
  sub_1C0775844();
  sub_1C0778580();
  *(_QWORD *)(v0 + 1208) = 0xD000000000000021;
  *(_QWORD *)(v0 + 1216) = 0x80000001C10E5B60;
  *(_QWORD *)(v0 + 1224) = swift_getKeyPath();
  sub_1C0AA799C();
  sub_1C0787AA4();
  sub_1C0782B28();
  sub_1C078C8BC();
  sub_1C078D4AC();
  sub_1C0775844();
  sub_1C0778580();
  *(_QWORD *)(v0 + 1232) = 0xD000000000000021;
  *(_QWORD *)(v0 + 1240) = 0x80000001C10E5B60;
  *(_QWORD *)(v0 + 1248) = swift_getKeyPath();
  sub_1C0AA799C();
  sub_1C0787AA4();
  sub_1C0782B28();
  sub_1C078C8BC();
  sub_1C078D4AC();
  sub_1C0775844();
  sub_1C0778580();
  *(_QWORD *)(v0 + 1256) = 0xD000000000000021;
  *(_QWORD *)(v0 + 1264) = 0x80000001C10E5B60;
  *(_QWORD *)(v0 + 1272) = swift_getKeyPath();
  sub_1C0AA799C();
  sub_1C0787AA4();
  sub_1C0782B28();
  sub_1C078C8BC();
  sub_1C078D4AC();
  sub_1C0775844();
  sub_1C0778580();
  *(_QWORD *)(v0 + 1280) = 0xD000000000000021;
  *(_QWORD *)(v0 + 1288) = 0x80000001C10E5B60;
  *(_QWORD *)(v0 + 1296) = swift_getKeyPath();
  sub_1C0AA799C();
  sub_1C0787AA4();
  sub_1C0782B28();
  sub_1C078C8BC();
  sub_1C078D4AC();
  sub_1C0775844();
  sub_1C0778580();
  *(_QWORD *)(v0 + 1304) = 0xD000000000000021;
  *(_QWORD *)(v0 + 1312) = 0x80000001C10E5B60;
  *(_QWORD *)(v0 + 1320) = swift_getKeyPath();
  sub_1C0AA799C();
  sub_1C0787AA4();
  sub_1C0782B28();
  sub_1C078C8BC();
  sub_1C078D4AC();
  sub_1C0775844();
  sub_1C0778580();
  *(_QWORD *)(v0 + 1328) = 0xD000000000000021;
  *(_QWORD *)(v0 + 1336) = 0x80000001C10E5B60;
  *(_QWORD *)(v0 + 1344) = swift_getKeyPath();
  sub_1C0AA799C();
  sub_1C0787AA4();
  sub_1C0782B28();
  sub_1C078C8BC();
  sub_1C078D4AC();
  sub_1C0775844();
  sub_1C0778580();
  *(_QWORD *)(v0 + 1352) = 0xD000000000000021;
  *(_QWORD *)(v0 + 1360) = 0x80000001C10E5B60;
  *(_QWORD *)(v0 + 1368) = swift_getKeyPath();
  sub_1C0AA799C();
  sub_1C0787AA4();
  sub_1C0782B28();
  sub_1C078C8BC();
  sub_1C078D4AC();
  sub_1C0775844();
  sub_1C0778580();
  *(_QWORD *)(v0 + 1376) = 0xD000000000000021;
  *(_QWORD *)(v0 + 1384) = 0x80000001C10E5B60;
  *(_QWORD *)(v0 + 1392) = swift_getKeyPath();
  sub_1C0AA799C();
  sub_1C0787AA4();
  sub_1C0782B28();
  sub_1C078C8BC();
  sub_1C078D4AC();
  sub_1C0775844();
  sub_1C0778580();
  *(_QWORD *)(v0 + 1400) = 0xD000000000000021;
  *(_QWORD *)(v0 + 1408) = 0x80000001C10E5B60;
  *(_QWORD *)(v0 + 1416) = swift_getKeyPath();
  sub_1C0AA799C();
  sub_1C0787AA4();
  sub_1C0782B28();
  sub_1C078C8BC();
  sub_1C078D4AC();
  sub_1C0775844();
  sub_1C0778580();
  *(_QWORD *)(v0 + 1424) = 0xD000000000000021;
  *(_QWORD *)(v0 + 1432) = 0x80000001C10E5B60;
  *(_QWORD *)(v0 + 1440) = swift_getKeyPath();
  sub_1C0AA799C();
  sub_1C0787AA4();
  sub_1C0782B28();
  sub_1C078C8BC();
  sub_1C078D4AC();
  sub_1C0775844();
  sub_1C0778580();
  *(_QWORD *)(v0 + 1448) = 0xD000000000000021;
  *(_QWORD *)(v0 + 1456) = 0x80000001C10E5B60;
  *(_QWORD *)(v0 + 1464) = swift_getKeyPath();
  sub_1C0AA799C();
  sub_1C0787AA4();
  sub_1C0782B28();
  sub_1C078C8BC();
  sub_1C078D4AC();
  sub_1C0775844();
  sub_1C0778580();
  *(_QWORD *)(v0 + 1472) = 0xD000000000000021;
  *(_QWORD *)(v0 + 1480) = 0x80000001C10E5B60;
  *(_QWORD *)(v0 + 1488) = swift_getKeyPath();
  sub_1C0AA799C();
  sub_1C0787AA4();
  sub_1C0782B28();
  sub_1C078C8BC();
  sub_1C078D4AC();
  sub_1C0775844();
  sub_1C0778580();
  *(_QWORD *)(v0 + 1496) = 0xD000000000000021;
  *(_QWORD *)(v0 + 1504) = 0x80000001C10E5B60;
  *(_QWORD *)(v0 + 1512) = swift_getKeyPath();
  sub_1C0AA799C();
  sub_1C0787AA4();
  sub_1C0782B28();
  sub_1C078C8BC();
  sub_1C078D4AC();
  sub_1C0775844();
  sub_1C0778580();
  *(_QWORD *)(v0 + 1520) = 0xD000000000000021;
  *(_QWORD *)(v0 + 1528) = 0x80000001C10E5B60;
  *(_QWORD *)(v0 + 1536) = swift_getKeyPath();
  sub_1C0AA799C();
  sub_1C0787AA4();
  sub_1C0782B28();
  sub_1C078C8BC();
  sub_1C078D4AC();
  sub_1C0775844();
  sub_1C0778580();
  *(_QWORD *)(v0 + 1544) = 0xD000000000000021;
  *(_QWORD *)(v0 + 1552) = 0x80000001C10E5B60;
  *(_QWORD *)(v0 + 1560) = swift_getKeyPath();
  sub_1C0AA799C();
  sub_1C0787AA4();
  sub_1C0782B28();
  sub_1C078C8BC();
  sub_1C078D4AC();
  sub_1C0775844();
  sub_1C0778580();
  *(_QWORD *)(v0 + 1568) = 0xD000000000000021;
  *(_QWORD *)(v0 + 1576) = 0x80000001C10E5B60;
  *(_QWORD *)(v0 + 1584) = swift_getKeyPath();
  sub_1C0AA799C();
  sub_1C0787AA4();
  sub_1C0782B28();
  sub_1C078C8BC();
  sub_1C078D4AC();
  sub_1C0775844();
  sub_1C0778580();
  *(_QWORD *)(v0 + 1592) = 0xD000000000000021;
  *(_QWORD *)(v0 + 1600) = 0x80000001C10E5B60;
  *(_QWORD *)(v0 + 1608) = swift_getKeyPath();
  sub_1C0AA799C();
  sub_1C079A8BC();
  sub_1C0782B28();
  sub_1C078C8BC();
  sub_1C078D4AC();
  sub_1C0775844();
  sub_1C0778580();
  *(_QWORD *)(v0 + 1616) = 0xD00000000000001DLL;
  *(_QWORD *)(v0 + 1624) = 0x80000001C10E5B00;
  *(_QWORD *)(v0 + 1632) = swift_getKeyPath();
  sub_1C0AA799C();
  sub_1C079A8BC();
  sub_1C0782B28();
  sub_1C078C8BC();
  sub_1C078D4AC();
  sub_1C0775844();
  sub_1C0778580();
  *(_QWORD *)(v0 + 1640) = 0xD00000000000001DLL;
  *(_QWORD *)(v0 + 1648) = 0x80000001C10E5B00;
  *(_QWORD *)(v0 + 1656) = swift_getKeyPath();
  sub_1C0AA799C();
  sub_1C079A8BC();
  sub_1C0782B28();
  sub_1C078C8BC();
  sub_1C078D4AC();
  sub_1C0775844();
  sub_1C0778580();
  *(_QWORD *)(v0 + 1664) = 0xD00000000000001DLL;
  *(_QWORD *)(v0 + 1672) = 0x80000001C10E5B00;
  *(_QWORD *)(v0 + 1680) = swift_getKeyPath();
  sub_1C0AA799C();
  sub_1C079A8BC();
  sub_1C0782B28();
  sub_1C078C8BC();
  sub_1C078D4AC();
  sub_1C0775844();
  sub_1C0778580();
  *(_QWORD *)(v0 + 1688) = 0xD00000000000001DLL;
  *(_QWORD *)(v0 + 1696) = 0x80000001C10E5B00;
  *(_QWORD *)(v0 + 1704) = swift_getKeyPath();
  sub_1C0AA799C();
  sub_1C079A8BC();
  sub_1C0782B28();
  sub_1C078C8BC();
  sub_1C078D4AC();
  sub_1C0775844();
  sub_1C0778580();
  *(_QWORD *)(v0 + 1712) = 0xD00000000000001DLL;
  *(_QWORD *)(v0 + 1720) = 0x80000001C10E5B00;
  *(_QWORD *)(v0 + 1728) = swift_getKeyPath();
  sub_1C0AA799C();
  sub_1C079A8BC();
  sub_1C0782B28();
  sub_1C078C8BC();
  sub_1C078D4AC();
  sub_1C0775844();
  sub_1C0778580();
  *(_QWORD *)(v0 + 1736) = 0xD00000000000001DLL;
  *(_QWORD *)(v0 + 1744) = 0x80000001C10E5B00;
  *(_QWORD *)(v0 + 1752) = swift_getKeyPath();
  sub_1C0AA799C();
  sub_1C079A8BC();
  sub_1C0782B28();
  sub_1C078C8BC();
  sub_1C078D4AC();
  sub_1C0775844();
  sub_1C0778580();
  *(_QWORD *)(v0 + 1760) = 0xD00000000000001DLL;
  *(_QWORD *)(v0 + 1768) = 0x80000001C10E5B00;
  *(_QWORD *)(v0 + 1776) = swift_getKeyPath();
  sub_1C0AA799C();
  sub_1C079A8BC();
  sub_1C0782B28();
  sub_1C078C8BC();
  sub_1C078D4AC();
  sub_1C0775844();
  sub_1C0778580();
  *(_QWORD *)(v0 + 1784) = 0xD00000000000001DLL;
  *(_QWORD *)(v0 + 1792) = 0x80000001C10E5B00;
  *(_QWORD *)(v0 + 1800) = swift_getKeyPath();
  sub_1C0AA799C();
  sub_1C079A8BC();
  sub_1C0782B28();
  sub_1C078C8BC();
  sub_1C078D4AC();
  sub_1C0775844();
  sub_1C0778580();
  *(_QWORD *)(v0 + 1808) = 0xD00000000000001DLL;
  *(_QWORD *)(v0 + 1816) = 0x80000001C10E5B00;
  *(_QWORD *)(v0 + 1824) = swift_getKeyPath();
  sub_1C0AA799C();
  sub_1C079A8BC();
  sub_1C0782B28();
  sub_1C078C8BC();
  sub_1C078D4AC();
  sub_1C0775844();
  sub_1C0778580();
  *(_QWORD *)(v0 + 1832) = 0xD00000000000001DLL;
  *(_QWORD *)(v0 + 1840) = 0x80000001C10E5B00;
  *(_QWORD *)(v0 + 1848) = swift_getKeyPath();
  sub_1C0AA799C();
  sub_1C079A8BC();
  sub_1C0782B28();
  sub_1C078C8BC();
  sub_1C078D4AC();
  sub_1C0775844();
  sub_1C0778580();
  *(_QWORD *)(v0 + 1856) = 0xD00000000000001DLL;
  *(_QWORD *)(v0 + 1864) = 0x80000001C10E5B00;
  *(_QWORD *)(v0 + 1872) = swift_getKeyPath();
  sub_1C0AA799C();
  sub_1C079A8BC();
  sub_1C0782B28();
  sub_1C078C8BC();
  sub_1C078D4AC();
  sub_1C0775844();
  sub_1C0778580();
  *(_QWORD *)(v0 + 1880) = 0xD00000000000001DLL;
  *(_QWORD *)(v0 + 1888) = 0x80000001C10E5B00;
  *(_QWORD *)(v0 + 1896) = swift_getKeyPath();
  sub_1C0AA799C();
  sub_1C079A8BC();
  sub_1C0782B28();
  sub_1C078C8BC();
  sub_1C078D4AC();
  sub_1C0775844();
  sub_1C0778580();
  *(_QWORD *)(v0 + 1904) = 0xD00000000000001DLL;
  *(_QWORD *)(v0 + 1912) = 0x80000001C10E5B00;
  *(_QWORD *)(v0 + 1920) = swift_getKeyPath();
  sub_1C0AA799C();
  sub_1C079A8BC();
  sub_1C0782B28();
  sub_1C078C8BC();
  sub_1C078D4AC();
  sub_1C0775844();
  sub_1C0778580();
  *(_QWORD *)(v0 + 1928) = 0xD00000000000001DLL;
  *(_QWORD *)(v0 + 1936) = 0x80000001C10E5B00;
  *(_QWORD *)(v0 + 1944) = swift_getKeyPath();
  sub_1C0AA799C();
  sub_1C079A8BC();
  sub_1C0782B28();
  sub_1C078C8BC();
  sub_1C078D4AC();
  sub_1C0775844();
  sub_1C0778580();
  *(_QWORD *)(v0 + 1952) = 0xD00000000000001DLL;
  *(_QWORD *)(v0 + 1960) = 0x80000001C10E5B00;
  *(_QWORD *)(v0 + 1968) = swift_getKeyPath();
  sub_1C0AA799C();
  sub_1C079A8BC();
  sub_1C0782B28();
  sub_1C078C8BC();
  sub_1C078D4AC();
  sub_1C0775844();
  sub_1C0778580();
  *(_QWORD *)(v0 + 1976) = 0xD00000000000001DLL;
  *(_QWORD *)(v0 + 1984) = 0x80000001C10E5B00;
  *(_QWORD *)(v0 + 1992) = swift_getKeyPath();
  sub_1C0AA799C();
  sub_1C079A8BC();
  sub_1C0782B28();
  sub_1C078C8BC();
  sub_1C078D4AC();
  sub_1C0775844();
  sub_1C0778580();
  *(_QWORD *)(v0 + 2000) = 0xD00000000000001DLL;
  *(_QWORD *)(v0 + 2008) = 0x80000001C10E5B00;
  *(_QWORD *)(v0 + 2016) = swift_getKeyPath();
  sub_1C0AA799C();
  sub_1C079A8BC();
  sub_1C0782B28();
  sub_1C078C8BC();
  sub_1C078D4AC();
  sub_1C0775844();
  sub_1C0778580();
  *(_QWORD *)(v0 + 2024) = 0xD00000000000001DLL;
  *(_QWORD *)(v0 + 2032) = 0x80000001C10E5B00;
  *(_QWORD *)(v0 + 2040) = swift_getKeyPath();
  sub_1C0AA799C();
  sub_1C079A8BC();
  sub_1C0782B28();
  sub_1C078C8BC();
  sub_1C078D4AC();
  sub_1C0775844();
  sub_1C0778580();
  *(_QWORD *)(v0 + 2048) = 0xD00000000000001DLL;
  *(_QWORD *)(v0 + 2056) = 0x80000001C10E5B00;
  *(_QWORD *)(v0 + 2064) = swift_getKeyPath();
  sub_1C0AA799C();
  sub_1C079A8BC();
  sub_1C0782B28();
  sub_1C078C8BC();
  sub_1C078D4AC();
  sub_1C0775844();
  sub_1C0778580();
  *(_QWORD *)(v0 + 2072) = 0xD00000000000001DLL;
  *(_QWORD *)(v0 + 2080) = 0x80000001C10E5B00;
  *(_QWORD *)(v0 + 2088) = swift_getKeyPath();
  sub_1C0AA799C();
  sub_1C079A8BC();
  sub_1C0782B28();
  sub_1C078C8BC();
  sub_1C078D4AC();
  sub_1C0775844();
  sub_1C0778580();
  *(_QWORD *)(v0 + 2096) = 0xD00000000000001DLL;
  *(_QWORD *)(v0 + 2104) = 0x80000001C10E5B00;
  *(_QWORD *)(v0 + 2112) = swift_getKeyPath();
  sub_1C0AA799C();
  sub_1C079A8BC();
  sub_1C0782B28();
  sub_1C078C8BC();
  sub_1C078D4AC();
  sub_1C0775844();
  sub_1C0778580();
  *(_QWORD *)(v0 + 2120) = 0xD00000000000001DLL;
  *(_QWORD *)(v0 + 2128) = 0x80000001C10E5B00;
  *(_QWORD *)(v0 + 2136) = swift_getKeyPath();
  sub_1C0AA799C();
  sub_1C079A8BC();
  sub_1C0782B28();
  sub_1C078C8BC();
  sub_1C078D4AC();
  sub_1C0775844();
  sub_1C0778580();
  *(_QWORD *)(v0 + 2144) = 0xD00000000000001DLL;
  *(_QWORD *)(v0 + 2152) = 0x80000001C10E5B00;
  *(_QWORD *)(v0 + 2160) = swift_getKeyPath();
  sub_1C0AA799C();
  sub_1C079A8BC();
  sub_1C0782B28();
  sub_1C078C8BC();
  sub_1C078D4AC();
  sub_1C0775844();
  sub_1C0778580();
  *(_QWORD *)(v0 + 2168) = 0xD00000000000001DLL;
  *(_QWORD *)(v0 + 2176) = 0x80000001C10E5B00;
  *(_QWORD *)(v0 + 2184) = swift_getKeyPath();
  sub_1C0AA799C();
  sub_1C079A8BC();
  sub_1C0782B28();
  sub_1C078C8BC();
  sub_1C078D4AC();
  sub_1C0775844();
  sub_1C0778580();
  *(_QWORD *)(v0 + 2192) = 0xD00000000000001DLL;
  *(_QWORD *)(v0 + 2200) = 0x80000001C10E5B00;
  *(_QWORD *)(v0 + 2208) = swift_getKeyPath();
  sub_1C0AA799C();
  sub_1C079A8BC();
  sub_1C0782B28();
  sub_1C078C8BC();
  sub_1C078D4AC();
  sub_1C0775844();
  sub_1C0778580();
  *(_QWORD *)(v0 + 2216) = 0xD00000000000001DLL;
  *(_QWORD *)(v0 + 2224) = 0x80000001C10E5B00;
  *(_QWORD *)(v0 + 2232) = swift_getKeyPath();
  sub_1C0AA799C();
  sub_1C079A8BC();
  sub_1C0782B28();
  sub_1C078C8BC();
  sub_1C078D4AC();
  sub_1C0775844();
  sub_1C0778580();
  *(_QWORD *)(v0 + 2240) = 0xD00000000000001DLL;
  *(_QWORD *)(v0 + 2248) = 0x80000001C10E5B00;
  *(_QWORD *)(v0 + 2256) = swift_getKeyPath();
  sub_1C0AA799C();
  sub_1C079A8BC();
  sub_1C0782B28();
  sub_1C078C8BC();
  sub_1C078D4AC();
  sub_1C0775844();
  sub_1C0778580();
  *(_QWORD *)(v0 + 2264) = 0xD00000000000001DLL;
  *(_QWORD *)(v0 + 2272) = 0x80000001C10E5B00;
  *(_QWORD *)(v0 + 2280) = swift_getKeyPath();
  sub_1C0AA799C();
  sub_1C079A8BC();
  sub_1C0782B28();
  sub_1C078C8BC();
  sub_1C078D4AC();
  sub_1C0775844();
  sub_1C0778580();
  *(_QWORD *)(v0 + 2288) = 0xD00000000000001DLL;
  *(_QWORD *)(v0 + 2296) = 0x80000001C10E5B00;
  *(_QWORD *)(v0 + 2304) = swift_getKeyPath();
  sub_1C0AA799C();
  sub_1C079A8BC();
  sub_1C0782B28();
  sub_1C078C8BC();
  sub_1C078D4AC();
  sub_1C0775844();
  sub_1C0778580();
  *(_QWORD *)(v0 + 2312) = 0xD00000000000001DLL;
  *(_QWORD *)(v0 + 2320) = 0x80000001C10E5B00;
  *(_QWORD *)(v0 + 2328) = swift_getKeyPath();
  sub_1C0AA799C();
  sub_1C079A8BC();
  sub_1C0782B28();
  sub_1C078C8BC();
  sub_1C078D4AC();
  sub_1C0775844();
  sub_1C0778580();
  *(_QWORD *)(v0 + 2336) = 0xD00000000000001DLL;
  *(_QWORD *)(v0 + 2344) = 0x80000001C10E5B00;
  *(_QWORD *)(v0 + 2352) = swift_getKeyPath();
  sub_1C07ACF80(&qword_1EF6332A8);
  return sub_1C106F97C();
}

void sub_1C08A83B8(uint64_t a1@<X8>)
{
  sub_1C0AD2298(a1);
  sub_1C0778534();
}

void sub_1C08A83D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1C08A841C(a1, a2, a3, a4, type metadata accessor for HUTenPointSessionSample, (void (*)(char *))sub_1C0AD2368);
}

void sub_1C08A83E8()
{
  sub_1C0AD23C4();
}

void sub_1C08A8408(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1C08A841C(a1, a2, a3, a4, type metadata accessor for HUTenPointBehaviors, (void (*)(char *))sub_1C0AD2478);
}

void sub_1C08A841C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD), void (*a6)(char *))
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;

  v9 = a5(0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v12 - v10;
  sub_1C0893744(a1, (uint64_t)&v12 - v10, a5);
  a6(v11);
  sub_1C07785E4();
}

void sub_1C08A8498()
{
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C0AD24C8();
}

void sub_1C08A84C0()
{
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C0AD2560();
}

void sub_1C08A84E8()
{
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C0AD25F8();
}

void sub_1C08A8510()
{
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C0AD2690();
}

void sub_1C08A8538()
{
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C0AD2728();
}

void sub_1C08A8560()
{
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C0AD27C0();
}

void sub_1C08A8588()
{
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C0AD2858();
}

void sub_1C08A85B0()
{
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C0AD28F0();
}

void sub_1C08A85D8()
{
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C0AD2988();
}

void sub_1C08A8600()
{
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C0AD2A20();
}

void sub_1C08A8628()
{
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C0AD2AB8();
}

void sub_1C08A8650()
{
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C0AD2B50();
}

void sub_1C08A8678()
{
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C0AD2BE8();
}

void sub_1C08A86A0()
{
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C0AD2C80();
}

void sub_1C08A86C8()
{
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C0AD2D18();
}

void sub_1C08A86F0()
{
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C0AD2DB0();
}

void sub_1C08A8718()
{
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C0AD2E48();
}

void sub_1C08A8740()
{
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C0AD2EE0();
}

void sub_1C08A8768()
{
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C0AD2F78();
}

void sub_1C08A8790()
{
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C0AD3010();
}

void sub_1C08A87B8()
{
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C0AD30A8();
}

void sub_1C08A87E0()
{
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C0AD3140();
}

void sub_1C08A8808()
{
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C0AD31D8();
}

void sub_1C08A8830()
{
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C0AD3270();
}

void sub_1C08A8858()
{
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C0AD3308();
}

void sub_1C08A8880()
{
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C0AD33A0();
}

void sub_1C08A88A8()
{
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C0AD3438();
}

void sub_1C08A88D0()
{
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C0AD34D0();
}

void sub_1C08A88F8()
{
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C0AD3568();
}

void sub_1C08A8920()
{
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C0AD3600();
}

void sub_1C08A8948()
{
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C0AD3698();
}

void sub_1C08A8970()
{
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C0AD3730();
}

void sub_1C08A8998()
{
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C0AD37C8();
}

void sub_1C08A89C0()
{
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C0AD3860();
}

void sub_1C08A89E8()
{
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C0AD38F8();
}

void sub_1C08A8A10()
{
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C0AD3990();
}

void sub_1C08A8A38()
{
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C0AD3A28();
}

void sub_1C08A8A60()
{
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C0AD3AC0();
}

void sub_1C08A8A88()
{
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C0AD3B58();
}

void sub_1C08A8AB0()
{
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C0AD3BF0();
}

void sub_1C08A8AD8()
{
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C0AD3C88();
}

void sub_1C08A8B00()
{
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C0AD3D20();
}

void sub_1C08A8B28()
{
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C0AD3DB8();
}

void sub_1C08A8B50()
{
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C0AD3E50();
}

void sub_1C08A8B78()
{
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C0AD3EE8();
}

void sub_1C08A8BA0()
{
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C0AD3F80();
}

void sub_1C08A8BC8()
{
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C0AD4018();
}

void sub_1C08A8BF0()
{
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C0AD40B0();
}

void sub_1C08A8C18()
{
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C0AD4148();
}

void sub_1C08A8C40()
{
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C0AD41E0();
}

void sub_1C08A8C68()
{
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C0AD4278();
}

void sub_1C08A8C90()
{
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C0AD4310();
}

void sub_1C08A8CB8()
{
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C0AD43A8();
}

void sub_1C08A8CE0()
{
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C0AD4440();
}

void sub_1C08A8D08()
{
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C0AD44D8();
}

void sub_1C08A8D30()
{
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C0AD4570();
}

void sub_1C08A8D58()
{
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C0AD4608();
}

void sub_1C08A8D80()
{
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C0AD46A0();
}

void sub_1C08A8DA8()
{
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C0AD4738();
}

void sub_1C08A8DD0()
{
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C0AD47D0();
}

void sub_1C08A8DF8()
{
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C0AD4868();
}

void sub_1C08A8E20()
{
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C0AD4900();
}

void sub_1C08A8E48()
{
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C0AD4998();
}

void sub_1C08A8E70()
{
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C0AD4A30();
}

void sub_1C08A8E98()
{
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C0AD4AC8();
}

void sub_1C08A8EC0()
{
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C0AD4B60();
}

void sub_1C08A8EE8()
{
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C0AD4BF8();
}

void sub_1C08A8F10()
{
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C0AD4C90();
}

void sub_1C08A8F38()
{
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C0AD4D28();
}

void sub_1C08A8F60()
{
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C0AD4DC0();
}

void sub_1C08A8F88()
{
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C0AD4E58();
}

void sub_1C08A8FB0()
{
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C0AD4EF0();
}

void sub_1C08A8FD8()
{
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C0AD4F88();
}

void sub_1C08A9000()
{
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C0AD5020();
}

void sub_1C08A9028()
{
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C0AD50B8();
}

void sub_1C08A9050()
{
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C0AD5150();
}

void sub_1C08A9078()
{
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C0AD51E8();
}

void sub_1C08A90A0()
{
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C0AD5280();
}

void sub_1C08A90C8()
{
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C0AD5318();
}

void sub_1C08A90F0()
{
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C0AD53B0();
}

void sub_1C08A9118()
{
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C0AD5448();
}

void sub_1C08A9140()
{
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C0AD54E0();
}

void sub_1C08A9168()
{
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C0AD5578();
}

void sub_1C08A9190()
{
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C0AD5610();
}

void sub_1C08A91B8()
{
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C0AD56A8();
}

void sub_1C08A91E0()
{
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C0AD5740();
}

void sub_1C08A9208()
{
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C0AD57D8();
}

void sub_1C08A9230()
{
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C0AD5870();
}

void sub_1C08A9258()
{
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C0AD5908();
}

void sub_1C08A9280()
{
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C0AD59A0();
}

void sub_1C08A92A8()
{
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C0AD5A38();
}

void sub_1C08A92D0()
{
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C0AD5AD0();
}

void sub_1C08A92F8()
{
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C0AD5B68();
}

void sub_1C08A9320()
{
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C0AD5C00();
}

void sub_1C08A9348()
{
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C0AD5C98();
}

void sub_1C08A9370()
{
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C0AD5D30();
}

void sub_1C08A9398()
{
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C0AD5DC8();
}

uint64_t sub_1C08A93C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t v263;
  uint64_t v264;
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  uint64_t v268;
  uint64_t v269;
  uint64_t v270;
  uint64_t v271;
  uint64_t v272;
  uint64_t v273;
  uint64_t v274;
  uint64_t v275;
  uint64_t v276;
  uint64_t v277;
  uint64_t v278;
  uint64_t v279;
  uint64_t v280;
  uint64_t v281;
  uint64_t v282;
  uint64_t v283;
  uint64_t v284;
  uint64_t v285;
  uint64_t v286;
  uint64_t v287;
  uint64_t v288;
  uint64_t v289;
  uint64_t v290;
  uint64_t v291;
  uint64_t v292;
  uint64_t v293;
  uint64_t v294;
  uint64_t v295;
  uint64_t v296;
  uint64_t v297;
  uint64_t v298;
  uint64_t v299;
  uint64_t v300;
  uint64_t v301;
  uint64_t v302;
  uint64_t v303;
  uint64_t v304;
  uint64_t v305;
  uint64_t v306;
  uint64_t v307;
  uint64_t v308;
  uint64_t v309;
  uint64_t v310;
  uint64_t v311;
  uint64_t v312;
  uint64_t v313;
  uint64_t v314;
  uint64_t v315;
  uint64_t v316;
  uint64_t v317;
  uint64_t v318;
  uint64_t v319;
  uint64_t v320;
  uint64_t v321;
  uint64_t v322;
  uint64_t v323;
  uint64_t v324;
  uint64_t v325;
  uint64_t v326;
  uint64_t v327;
  uint64_t v328;
  uint64_t v329;
  uint64_t v330;
  uint64_t v331;
  uint64_t v332;
  uint64_t v333;
  uint64_t v334;
  uint64_t v335;
  uint64_t v336;
  uint64_t v337;
  uint64_t v338;
  uint64_t v339;
  uint64_t v340;
  uint64_t v341;
  uint64_t v342;
  uint64_t v343;
  uint64_t v344;
  uint64_t v345;
  uint64_t v346;
  uint64_t v347;
  uint64_t v348;
  uint64_t v349;
  uint64_t v350;
  uint64_t v351;
  uint64_t v352;
  uint64_t v353;
  uint64_t v354;
  uint64_t v355;
  uint64_t v356;
  uint64_t v357;
  uint64_t v358;
  uint64_t v359;
  uint64_t v360;
  uint64_t v361;
  uint64_t v362;
  uint64_t v363;
  uint64_t v364;
  uint64_t v365;
  uint64_t v366;
  uint64_t v367;
  uint64_t v368;
  uint64_t v369;
  uint64_t v370;
  uint64_t v371;
  uint64_t v372;
  uint64_t v373;
  uint64_t v374;
  uint64_t v375;
  uint64_t v376;
  uint64_t v377;
  uint64_t v378;
  uint64_t v379;
  uint64_t v380;
  uint64_t v381;
  uint64_t v382;
  uint64_t v383;
  uint64_t v384;
  uint64_t v385;
  uint64_t v386;
  uint64_t v387;
  uint64_t v388;
  uint64_t v389;
  uint64_t v390;
  uint64_t v391;
  uint64_t v392;
  uint64_t v393;
  uint64_t v394;
  uint64_t v395;
  uint64_t v396;
  uint64_t v397;
  uint64_t v398;
  uint64_t v399;
  uint64_t v400;
  uint64_t v401;
  uint64_t v402;
  uint64_t v403;
  uint64_t v404;
  uint64_t v405;
  uint64_t v406;
  uint64_t v407;
  uint64_t v408;
  uint64_t v409;
  uint64_t v410;
  uint64_t v411;
  uint64_t v412;
  uint64_t v413;
  uint64_t v414;
  uint64_t v415;
  uint64_t v416;
  uint64_t v417;
  uint64_t v418;
  uint64_t v419;
  uint64_t v420;
  uint64_t v421;
  uint64_t v422;
  uint64_t v423;
  uint64_t v424;
  uint64_t v425;
  uint64_t v426;
  uint64_t v427;
  uint64_t v428;
  uint64_t v429;
  uint64_t v430;
  uint64_t v431;
  uint64_t v432;
  uint64_t v433;
  uint64_t v434;
  uint64_t v435;
  uint64_t v436;
  uint64_t v437;
  uint64_t v438;
  uint64_t v439;
  uint64_t v440;
  uint64_t v441;
  uint64_t v442;
  uint64_t v443;
  uint64_t v444;
  uint64_t v445;
  uint64_t v446;
  uint64_t v447;
  uint64_t v448;
  uint64_t v449;
  uint64_t v450;
  uint64_t v451;
  uint64_t v452;
  uint64_t v453;
  uint64_t v454;
  uint64_t v455;
  uint64_t v456;
  uint64_t v457;
  uint64_t v458;
  uint64_t v459;
  uint64_t v460;
  uint64_t v461;
  uint64_t v462;
  uint64_t v463;
  uint64_t v464;
  uint64_t v465;
  uint64_t v467;
  int v468;
  int v469;
  int v470;
  int v471;
  int v472;
  int v473;
  int v474;
  int v475;
  int v476;
  int v477;
  int v478;
  int v479;
  int v480;
  int v481;
  int v482;
  int v483;
  int v484;
  int v485;
  int v486;
  int v487;
  int v488;
  int v489;
  int v490;
  int v491;
  int v492;
  int v493;
  int v494;
  int v495;
  int v496;
  int v497;
  int v498;
  int v499;
  int v500;
  int v501;
  int v502;
  int v503;
  int v504;
  int v505;
  int v506;
  int v507;
  int v508;
  int v509;
  int v510;
  int v511;
  int v512;
  int v513;
  int v514;
  int v515;
  int v516;
  int v517;
  int v518;
  int v519;
  int v520;
  int v521;
  int v522;
  int v523;
  int v524;
  int v525;
  int v526;
  int v527;
  int v528;
  __int16 v529;
  __int16 v530;
  __int16 v531;
  __int16 v532;
  __int16 v533;
  __int16 v534;
  __int16 v535;
  __int16 v536;
  __int16 v537;
  __int16 v538;
  __int16 v539;
  __int16 v540;
  __int16 v541;
  __int16 v542;
  __int16 v543;
  __int16 v544;
  __int16 v545;
  __int16 v546;
  __int16 v547;
  __int16 v548;
  __int16 v549;
  __int16 v550;
  __int16 v551;
  __int16 v552;
  __int16 v553;
  __int16 v554;
  __int16 v555;
  __int16 v556;
  __int16 v557;
  __int16 v558;
  __int16 v559;
  __int16 v560;
  __int16 v561;
  __int16 v562;
  __int16 v563;
  __int16 v564;
  __int16 v565;
  __int16 v566;
  __int16 v567;
  __int16 v568;
  __int16 v569;
  __int16 v570;
  __int16 v571;
  __int16 v572;
  __int16 v573;
  __int16 v574;
  __int16 v575;
  __int16 v576;
  __int16 v577;
  __int16 v578;
  __int16 v579;
  __int16 v580;
  __int16 v581;
  __int16 v582;
  __int16 v583;
  __int16 v584;
  __int16 v585;
  __int16 v586;
  __int16 v587;
  __int16 v588;
  __int16 v589;
  char v590;
  char v591;
  char v592;
  char v593;
  char v594;
  char v595;
  char v596;
  char v597;
  char v598;
  char v599;
  char v600;
  char v601;
  char v602;
  char v603;
  char v604;
  char v605;
  char v606;
  char v607;
  char v608;
  char v609;
  char v610;
  char v611;
  char v612;
  char v613;
  char v614;
  char v615;
  char v616;
  char v617;
  char v618;
  char v619;
  char v620;
  char v621;
  char v622;
  char v623;
  char v624;
  char v625;
  char v626;
  char v627;
  char v628;
  char v629;
  char v630;
  char v631;
  char v632;
  char v633;
  char v634;
  char v635;
  char v636;
  char v637;
  char v638;
  char v639;
  char v640;
  char v641;
  char v642;
  char v643;
  char v644;
  char v645;
  char v646;
  char v647;
  char v648;
  char v649;
  char v650;
  char v651;
  char v652;
  char v653;
  char v654;
  char v655;
  char v656;
  char v657;
  char v658;
  char v659;
  char v660;
  char v661;
  char v662;
  char v663;
  char v664;
  char v665;
  char v666;
  char v667;
  char v668;
  char v669;
  char v670;
  char v671;
  char v672;
  char v673;
  char v674;
  char v675;
  char v676;
  char v677;
  char v678;
  char v679;
  char v680;
  char v681;
  char v682;
  char v683;
  char v684;
  char v685;
  char v686;
  char v687;
  char v688;
  char v689;
  char v690;
  char v691;
  char v692;
  char v693;
  char v694;
  char v695;
  char v696;
  char v697;
  char v698;
  char v699;
  char v700;
  char v701;
  char v702;
  char v703;
  char v704;
  char v705;
  char v706;
  char v707;
  char v708;
  char v709;
  char v710;
  char v711;
  uint64_t v712;
  uint64_t v713;
  uint64_t v714;
  uint64_t v715;
  uint64_t v716;
  uint64_t v717;
  uint64_t v718;
  uint64_t v719;
  uint64_t v720;
  uint64_t v721;
  uint64_t v722;
  uint64_t v723;
  uint64_t v724;
  uint64_t v725;
  uint64_t v726;
  uint64_t v727;
  uint64_t v728;
  uint64_t v729;
  uint64_t v730;
  uint64_t v731;
  uint64_t v732;
  uint64_t v733;
  uint64_t v734;
  uint64_t v735;
  uint64_t v736;
  uint64_t v737;
  uint64_t v738;
  uint64_t v739;
  uint64_t v740;
  uint64_t v741;
  uint64_t v742;
  uint64_t v743;
  uint64_t v744;
  uint64_t v745;
  uint64_t v746;
  uint64_t v747;
  uint64_t v748;
  uint64_t v749;
  uint64_t v750;
  uint64_t v751;
  uint64_t v752;
  uint64_t v753;
  uint64_t v754;
  uint64_t v755;
  uint64_t v756;
  uint64_t v757;
  uint64_t v758;
  uint64_t v759;
  uint64_t v760;
  uint64_t v761;
  uint64_t v762;
  uint64_t v763;
  uint64_t v764;
  uint64_t v765;
  uint64_t v766;
  uint64_t v767;
  uint64_t v768;
  uint64_t v769;
  uint64_t v770;
  uint64_t v771;
  uint64_t v772;
  uint64_t v773;
  uint64_t v774;
  uint64_t v775;
  uint64_t v776;
  uint64_t v777;
  uint64_t v778;
  uint64_t v779;
  uint64_t v780;
  uint64_t v781;
  uint64_t v782;
  uint64_t v783;
  uint64_t v784;
  uint64_t v785;
  uint64_t v786;
  uint64_t v787;
  uint64_t v788;
  uint64_t v789;
  uint64_t v790;
  uint64_t v791;
  uint64_t v792;
  uint64_t v793;
  uint64_t v794;
  uint64_t v795;
  uint64_t v796;
  uint64_t v797;
  uint64_t v798;
  uint64_t v799;
  uint64_t v800;
  uint64_t v801;
  uint64_t v802;
  uint64_t v803;
  uint64_t v804;
  uint64_t v805;
  uint64_t v806;
  uint64_t v807;
  uint64_t v808;
  uint64_t v809;
  uint64_t v810;
  uint64_t v811;
  uint64_t v812;
  uint64_t v813;
  uint64_t v814;
  uint64_t v815;
  uint64_t v816;
  uint64_t v817;
  uint64_t v818;
  uint64_t v819;
  uint64_t v820;
  uint64_t v821;
  uint64_t v822;
  uint64_t v823;
  uint64_t v824;
  uint64_t v825;
  uint64_t v826;
  uint64_t v827;
  uint64_t v828;
  uint64_t v829;
  uint64_t v830;
  uint64_t v831;
  uint64_t v832;
  uint64_t v833;
  uint64_t v834;
  uint64_t v835;
  uint64_t v836;
  uint64_t v837;
  uint64_t v838;
  uint64_t v839;
  uint64_t v840;
  uint64_t v841;
  uint64_t v842;
  uint64_t v843;
  uint64_t v844;
  uint64_t v845;
  uint64_t v846;
  uint64_t v847;
  uint64_t v848;
  uint64_t v849;
  uint64_t v850;
  uint64_t v851;
  uint64_t v852;
  uint64_t v853;
  uint64_t v854;
  uint64_t v855;
  uint64_t v856;
  uint64_t v857;
  uint64_t v858;
  uint64_t v859;
  uint64_t v860;
  uint64_t v861;
  uint64_t v862;
  uint64_t v863;
  uint64_t v864;
  uint64_t v865;
  uint64_t v866;
  uint64_t v867;
  uint64_t v868;
  uint64_t v869;
  uint64_t v870;
  uint64_t v871;
  uint64_t v872;
  uint64_t v873;
  uint64_t v874;
  uint64_t v875;
  uint64_t v876;
  uint64_t v877;
  uint64_t v878;
  uint64_t v879;
  uint64_t v880;
  uint64_t v881;
  uint64_t v882;
  uint64_t v883;
  uint64_t v884;
  uint64_t v885;
  uint64_t v886;
  uint64_t v887;
  uint64_t v888;
  uint64_t v889;
  uint64_t v890;
  uint64_t v891;
  uint64_t v892;
  uint64_t v893;
  uint64_t v894;
  uint64_t v895;
  uint64_t v896;
  uint64_t v897;
  uint64_t v898;
  uint64_t v899;
  uint64_t v900;
  uint64_t v901;
  uint64_t v902;
  uint64_t v903;
  uint64_t v904;
  uint64_t v905;
  uint64_t v906;
  uint64_t v907;
  uint64_t v908;
  uint64_t v909;
  uint64_t v910;
  uint64_t v911;
  uint64_t v912;
  uint64_t v913;
  uint64_t v914;
  uint64_t v915;
  uint64_t v916;
  uint64_t v917;
  uint64_t v918;
  uint64_t v919;
  uint64_t v920;
  uint64_t v921;
  uint64_t v922;
  uint64_t v923;
  uint64_t v924;
  uint64_t v925;
  uint64_t v926;
  uint64_t v927;
  uint64_t v928;
  uint64_t v929;
  uint64_t v930;
  uint64_t v931;
  uint64_t v932;
  uint64_t v933;
  uint64_t v934;
  uint64_t v935;
  uint64_t v936;
  uint64_t v937;
  uint64_t v938;
  uint64_t v939;
  uint64_t v940;
  uint64_t v941;
  uint64_t v942;
  uint64_t v943;
  uint64_t v944;
  uint64_t v945;
  uint64_t v946;
  uint64_t v947;
  uint64_t v948;
  uint64_t v949;
  uint64_t v950;
  uint64_t v951;
  uint64_t v952;
  uint64_t v953;
  uint64_t v954;
  uint64_t v955;
  uint64_t v956;
  uint64_t v957;
  uint64_t v958;
  uint64_t v959;
  uint64_t v960;
  uint64_t v961;
  uint64_t v962;
  uint64_t v963;
  uint64_t v964;
  uint64_t v965;
  uint64_t v966;
  uint64_t v967;
  uint64_t v968;
  uint64_t v969;
  uint64_t v970;
  uint64_t v971;
  uint64_t v972;
  uint64_t v973;
  uint64_t v974;
  uint64_t v975;
  uint64_t v976;
  uint64_t v977;
  uint64_t v978;
  uint64_t v979;
  uint64_t v980;
  uint64_t v981;
  uint64_t v982;
  uint64_t v983;
  uint64_t v984;
  uint64_t v985;
  uint64_t v986;
  uint64_t v987;
  uint64_t v988;
  uint64_t v989;
  uint64_t v990;
  uint64_t v991;
  uint64_t v992;
  uint64_t v993;
  uint64_t v994;
  uint64_t v995;
  uint64_t v996;
  uint64_t v997;
  uint64_t v998;
  uint64_t v999;
  uint64_t v1000;
  uint64_t v1001;
  uint64_t v1002;
  uint64_t v1003;
  uint64_t v1004;
  uint64_t v1005;
  uint64_t v1006;
  uint64_t v1007;
  uint64_t v1008;
  uint64_t v1009;
  uint64_t v1010;
  uint64_t v1011;
  uint64_t v1012;
  uint64_t v1013;
  uint64_t v1014;
  uint64_t v1015;
  uint64_t v1016;
  uint64_t v1017;
  uint64_t v1018;
  uint64_t v1019;
  uint64_t v1020;
  uint64_t v1021;
  uint64_t v1022;
  uint64_t v1023;
  uint64_t v1024;
  uint64_t v1025;
  uint64_t v1026;
  uint64_t v1027;
  uint64_t v1028;
  uint64_t v1029;
  uint64_t v1030;
  uint64_t v1031;
  uint64_t v1032;
  uint64_t v1033;
  uint64_t v1034;
  uint64_t v1035;
  uint64_t v1036;
  uint64_t v1037;
  uint64_t v1038;
  uint64_t v1039;
  uint64_t v1040;
  uint64_t v1041;
  uint64_t v1042;
  uint64_t v1043;
  uint64_t v1044;
  uint64_t v1045;
  uint64_t v1046;
  uint64_t v1047;
  uint64_t v1048;
  uint64_t v1049;
  uint64_t v1050;
  uint64_t v1051;
  uint64_t v1052;
  uint64_t v1053;
  uint64_t v1054;
  uint64_t v1055;
  uint64_t v1056;
  uint64_t v1057;
  uint64_t v1058;
  uint64_t v1059;
  uint64_t v1060;
  uint64_t v1061;
  uint64_t v1062;
  uint64_t v1063;
  uint64_t v1064;
  uint64_t v1065;
  uint64_t v1066;
  uint64_t v1067;
  uint64_t v1068;
  uint64_t v1069;
  uint64_t v1070;
  uint64_t v1071;
  uint64_t v1072;
  uint64_t v1073;
  uint64_t v1074;
  uint64_t v1075;
  uint64_t v1076;
  uint64_t v1077;
  uint64_t v1078;
  uint64_t v1079;
  uint64_t v1080;
  uint64_t v1081;
  uint64_t v1082;
  uint64_t v1083;
  uint64_t v1084;
  uint64_t v1085;
  uint64_t v1086;
  uint64_t v1087;
  uint64_t v1088;
  uint64_t v1089;
  uint64_t v1090;
  uint64_t v1091;
  uint64_t v1092;
  uint64_t v1093;
  uint64_t v1094;
  uint64_t v1095;
  uint64_t v1096;
  uint64_t v1097;
  uint64_t v1098;
  uint64_t v1099;
  uint64_t v1100;
  uint64_t v1101;
  uint64_t v1102;
  uint64_t v1103;
  uint64_t v1104;
  uint64_t v1105;
  uint64_t v1106;
  uint64_t v1107;
  uint64_t v1108;
  uint64_t v1109;
  uint64_t v1110;
  uint64_t v1111;
  uint64_t v1112;
  uint64_t v1113;
  uint64_t v1114;
  uint64_t v1115;
  uint64_t v1116;
  uint64_t v1117;
  uint64_t v1118;
  uint64_t v1119;
  uint64_t v1120;
  uint64_t v1121;
  uint64_t v1122;
  uint64_t v1123;
  uint64_t v1124;
  uint64_t v1125;
  uint64_t v1126;
  uint64_t v1127;
  uint64_t v1128;
  uint64_t v1129;
  uint64_t v1130;
  uint64_t v1131;
  uint64_t v1132;
  uint64_t v1133;
  uint64_t v1134;
  uint64_t v1135;
  uint64_t v1136;
  uint64_t v1137;
  uint64_t v1138;
  uint64_t v1139;
  uint64_t v1140;
  uint64_t v1141;
  uint64_t v1142;
  uint64_t v1143;
  uint64_t v1144;
  uint64_t v1145;
  uint64_t v1146;
  uint64_t v1147;
  uint64_t v1148;
  uint64_t v1149;
  uint64_t v1150;
  uint64_t v1151;
  uint64_t v1152;
  uint64_t v1153;
  uint64_t v1154;
  uint64_t v1155;
  uint64_t v1156;
  uint64_t v1157;
  uint64_t v1158;
  uint64_t v1159;
  uint64_t v1160;
  uint64_t v1161;
  uint64_t v1162;
  uint64_t v1163;
  uint64_t v1164;
  uint64_t v1165;
  uint64_t v1166;
  uint64_t v1167;
  uint64_t v1168;
  uint64_t v1169;
  uint64_t v1170;
  uint64_t v1171;
  uint64_t v1172;
  uint64_t v1173;
  uint64_t v1174;
  uint64_t v1175;
  uint64_t v1176;
  uint64_t v1177;
  uint64_t v1178;
  uint64_t v1179;
  uint64_t v1180;
  uint64_t v1181;
  uint64_t v1182;
  uint64_t v1183;
  uint64_t v1184;
  uint64_t v1185;
  uint64_t v1186;
  uint64_t v1187;
  uint64_t v1188;
  uint64_t v1189;
  uint64_t v1190;
  uint64_t v1191;
  uint64_t v1192;
  uint64_t v1193;
  uint64_t v1194;
  uint64_t v1195;
  uint64_t v1196;
  uint64_t v1197;
  uint64_t v1198;
  uint64_t v1199;
  uint64_t v1200;
  uint64_t v1201;
  uint64_t v1202;
  uint64_t v1203;
  uint64_t v1204;
  uint64_t v1205;
  uint64_t v1206;
  uint64_t v1207;
  uint64_t v1208;
  uint64_t v1209;
  uint64_t v1210;
  uint64_t v1211;
  uint64_t v1212;
  uint64_t v1213;
  uint64_t v1214;
  uint64_t v1215;
  uint64_t v1216;
  uint64_t v1217;
  uint64_t v1218;
  uint64_t v1219;
  uint64_t v1220;
  uint64_t v1221;
  uint64_t v1222;
  uint64_t v1223;
  uint64_t v1224;
  uint64_t v1225;
  uint64_t v1226;
  uint64_t v1227;
  uint64_t v1228;
  uint64_t v1229;
  uint64_t v1230;
  uint64_t v1231;
  uint64_t v1232;
  uint64_t v1233;
  uint64_t v1234;
  uint64_t v1235;
  uint64_t v1236;
  uint64_t v1237;
  uint64_t v1238;
  uint64_t v1239;
  uint64_t v1240;
  uint64_t v1241;
  uint64_t v1242;
  uint64_t v1243;
  uint64_t v1244;
  uint64_t v1245;
  uint64_t v1246;
  uint64_t v1247;
  uint64_t v1248;
  uint64_t v1249;
  uint64_t v1250;
  uint64_t v1251;
  uint64_t v1252;
  uint64_t v1253;
  uint64_t v1254;
  uint64_t v1255;
  uint64_t v1256;
  uint64_t v1257;
  uint64_t v1258;

  sub_1C07ACF80(&qword_1EF6332B0);
  v0 = sub_1C07ACF80(&qword_1EF6332B8);
  v1 = *(_QWORD *)(v0 - 8);
  v2 = v0;
  v3 = *(_QWORD *)(v1 + 72);
  v4 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v896 = sub_1C077C1E4();
  *(_OWORD *)(v896 + 16) = xmmword_1C107E7B0;
  v5 = v896 + v4;
  v6 = v896 + v4 + *(int *)(v2 + 48);
  sub_1C0792DB8();
  sub_1C079DB58();
  sub_1C0789E0C();
  sub_1C07986F0();
  sub_1C079DB58();
  sub_1C0789E0C();
  sub_1C0792DB8();
  *(_QWORD *)v6 = 3;
  *(_BYTE *)(v6 + 8) = 0;
  sub_1C0789E0C();
  sub_1C0792DB8();
  sub_1C079DB58();
  v7 = v5 + 4 * v3 + *(int *)(v2 + 48);
  sub_1C07986F0();
  *(_QWORD *)v7 = 3;
  *(_BYTE *)(v7 + 8) = 0;
  v8 = v5 + 5 * v3 + *(int *)(v2 + 48);
  sub_1C07986F0();
  *(_QWORD *)v8 = 3;
  *(_BYTE *)(v8 + 8) = 0;
  v9 = v5 + 6 * v3 + *(int *)(v2 + 48);
  sub_1C07986F0();
  *(_QWORD *)v9 = 3;
  *(_BYTE *)(v9 + 8) = 0;
  sub_1C0789E0C();
  sub_1C0792DB8();
  sub_1C079DB58();
  sub_1C0789E0C();
  sub_1C0792DB8();
  MEMORY[3] = 3;
  MEMORY[0xB] = 0;
  v10 = v5 + 9 * v3 + *(int *)(v2 + 48);
  sub_1C079D31C();
  sub_1C0794DBC();
  sub_1C07A9DCC();
  sub_1C106D6D8();
  *(_QWORD *)v10 = 3;
  *(_BYTE *)(v10 + 8) = 0;
  sub_1C079D31C();
  sub_1C0794DBC();
  sub_1C07986F0();
  sub_1C079CC2C();
  v11 = v5 + 11 * v3 + *(int *)(v2 + 48);
  sub_1C079D31C();
  sub_1C0794DBC();
  sub_1C07A9DCC();
  sub_1C106D6D8();
  *(_QWORD *)v11 = 3;
  *(_BYTE *)(v11 + 8) = 0;
  sub_1C079D31C();
  sub_1C0794DBC();
  sub_1C07B163C();
  sub_1C079CC2C();
  sub_1C079D31C();
  sub_1C0794DBC();
  sub_1C07AB678();
  v467 = v12 + 23;
  sub_1C106D6D8();
  sub_1C079CC2C();
  sub_1C079D31C();
  sub_1C0794DBC();
  sub_1C07A1BF8();
  sub_1C106D6D8();
  sub_1C079CC2C();
  sub_1C079D31C();
  sub_1C0794DBC();
  sub_1C07BCDE4();
  sub_1C079CC2C();
  sub_1C079D31C();
  sub_1C0794DBC();
  sub_1C07986F0();
  sub_1C079CC2C();
  v13 = v5 + 17 * v3 + *(int *)(v2 + 48);
  sub_1C079D31C();
  sub_1C0794DBC();
  sub_1C07986F0();
  *(_QWORD *)v13 = 3;
  *(_BYTE *)(v13 + 8) = 0;
  v14 = v5 + 18 * v3 + *(int *)(v2 + 48);
  sub_1C079D31C();
  sub_1C0794DBC();
  sub_1C106D6D8();
  *(_QWORD *)v14 = 3;
  *(_BYTE *)(v14 + 8) = 0;
  sub_1C079D31C();
  sub_1C0794DBC();
  sub_1C07AB678();
  v712 = v15 + 21;
  sub_1C07986F0();
  sub_1C07AA6EC();
  v16 = v5 + 20 * v3 + *(int *)(v2 + 48);
  sub_1C079D31C();
  sub_1C0794DBC();
  sub_1C079BD6C();
  sub_1C106D6D8();
  *(_QWORD *)v16 = 3;
  *(_BYTE *)(v16 + 8) = 0;
  v17 = v5 + 21 * v3 + *(int *)(v2 + 48);
  sub_1C079D31C();
  sub_1C0794DBC();
  sub_1C07A1BF8();
  sub_1C106D6D8();
  *(_QWORD *)v17 = 3;
  *(_BYTE *)(v17 + 8) = 0;
  v18 = v5 + 22 * v3 + *(int *)(v2 + 48);
  sub_1C079D31C();
  sub_1C0794DBC();
  sub_1C07A3024();
  *(_QWORD *)v18 = 3;
  *(_BYTE *)(v18 + 8) = 0;
  sub_1C079EDB0();
  sub_1C079D31C();
  sub_1C0794DBC();
  sub_1C07B163C();
  sub_1C07AA6EC();
  sub_1C079D31C();
  sub_1C0794DBC();
  sub_1C07A1BF8();
  sub_1C106D6D8();
  sub_1C07AA6EC();
  sub_1C079EDB0();
  sub_1C079D31C();
  sub_1C0794DBC();
  sub_1C079BD6C();
  sub_1C106D6D8();
  sub_1C07AA6EC();
  sub_1C079EDB0();
  sub_1C079D31C();
  sub_1C0794DBC();
  sub_1C07A3024();
  sub_1C07AA6EC();
  sub_1C079D31C();
  sub_1C0794DBC();
  sub_1C07A1BF8();
  sub_1C106D6D8();
  sub_1C07AA6EC();
  sub_1C079D31C();
  sub_1C0794DBC();
  sub_1C07A1BF8();
  sub_1C106D6D8();
  sub_1C07AA6EC();
  v19 = v5 + 29 * v3 + *(int *)(v2 + 48);
  sub_1C079D31C();
  sub_1C0794DBC();
  sub_1C07A1BF8();
  sub_1C106D6D8();
  *(_QWORD *)v19 = 3;
  *(_BYTE *)(v19 + 8) = 0;
  v20 = v5 + 30 * v3 + *(int *)(v2 + 48);
  sub_1C079D31C();
  sub_1C0794DBC();
  sub_1C07A1BF8();
  sub_1C106D6D8();
  *(_QWORD *)v20 = 3;
  *(_BYTE *)(v20 + 8) = 0;
  sub_1C0899138((uint64_t)&unk_1E7A01440, v21, v22, v23, v24, v25, v26, v27, v467, SWORD2(v467), SBYTE6(v467), SHIBYTE(v467), v712, 0xD000000000000023, 0xD00000000000002BLL, v896, 0xD000000000000028, v1019, 0x80000001C10E7450,
    0xD00000000000002ELL,
    0xD000000000000022);
  sub_1C1070774();
  sub_1C0794DBC();
  sub_1C07AB678();
  v29 = v28 + 12;
  sub_1C0797CAC();
  sub_1C079E368();
  sub_1C0775834();
  sub_1C077589C();
  sub_1C0790748();
  sub_1C0790F18();
  sub_1C077B050();
  sub_1C0899138((uint64_t)&unk_1E7A01468, v30, v31, v32, v33, v34, v35, v36, v468, v529, v590, v651, v713, v774, v835, v897, v958, v1020, v1080,
    0x80000001C10E5B60,
    v1200);
  sub_1C07A37E8();
  sub_1C0794DBC();
  sub_1C0797CAC();
  sub_1C079E368();
  sub_1C0775834();
  sub_1C077589C();
  sub_1C078D4B8();
  sub_1C0790F18();
  sub_1C078642C();
  sub_1C0899138((uint64_t)&unk_1E7A01490, v37, v38, v39, v40, v41, v42, v43, v469, v530, v591, v652, v714, v775, v836, v898, v959, v1021, v1081,
    v1141,
    v1201);
  sub_1C07A37E8();
  sub_1C0794DBC();
  sub_1C0797CAC();
  sub_1C079E368();
  sub_1C0775834();
  sub_1C077589C();
  sub_1C07A857C();
  sub_1C106D6D8();
  sub_1C0790F18();
  sub_1C079F36C();
  sub_1C0899138((uint64_t)&unk_1E7A014B8, v44, v45, v46, v47, v48, v49, v50, v470, v531, v592, v653, v715, v776, v837, v899, v960, v1022, v1082,
    v1142,
    v29);
  sub_1C07A37E8();
  sub_1C0794DBC();
  sub_1C0797CAC();
  sub_1C079E368();
  sub_1C0775834();
  sub_1C077589C();
  sub_1C07986F0();
  sub_1C0790F18();
  sub_1C079F36C();
  sub_1C0899138((uint64_t)&unk_1E7A014E0, v51, v52, v53, v54, v55, v56, v57, v471, v532, v593, v654, v716, v777, v838, v900, v961, v5, v1083,
    v1143,
    v1202);
  sub_1C07A37E8();
  sub_1C0794DBC();
  sub_1C0797CAC();
  sub_1C079E368();
  sub_1C0775834();
  sub_1C077589C();
  sub_1C07986F0();
  sub_1C0790F18();
  sub_1C079F36C();
  sub_1C0899138((uint64_t)&unk_1E7A01508, v58, v59, v60, v61, v62, v63, v64, v472, v533, v594, v655, v717, v778, v839, v901, v962, v1023, v1084,
    v1144,
    v1203);
  sub_1C07A37E8();
  sub_1C0794DBC();
  sub_1C0797CAC();
  sub_1C079E368();
  sub_1C0775834();
  sub_1C077589C();
  sub_1C07986F0();
  sub_1C0790F18();
  sub_1C079F36C();
  sub_1C0899138((uint64_t)&unk_1E7A01530, v65, v66, v67, v68, v69, v70, v71, v473, v534, v595, v656, v718, v779, v840, v902, v963, v1024, v1085,
    v1145,
    v1204);
  sub_1C07A37E8();
  sub_1C0794DBC();
  sub_1C0797CAC();
  sub_1C079E368();
  sub_1C0775834();
  sub_1C077589C();
  sub_1C07986F0();
  sub_1C0790F18();
  sub_1C079F36C();
  sub_1C0899138((uint64_t)&unk_1E7A01558, v72, v73, v74, v75, v76, v77, v78, v474, v535, v596, v657, v719, v780, v841, v903, v964, v1025, v1086,
    v1146,
    v1205);
  sub_1C07A37E8();
  sub_1C0794DBC();
  sub_1C0797CAC();
  sub_1C079E368();
  sub_1C0775834();
  sub_1C077589C();
  sub_1C07986F0();
  sub_1C0790F18();
  sub_1C078DF14();
  sub_1C0899138((uint64_t)&unk_1E7A01580, v79, v80, v81, v82, v83, v84, v85, v475, v536, v597, v658, v720, v781, v842, v904, v965, v1026, v1087,
    v1147,
    v1206);
  sub_1C07A37E8();
  sub_1C0794DBC();
  sub_1C0797CAC();
  sub_1C079E368();
  sub_1C0775834();
  sub_1C077589C();
  sub_1C07986F0();
  sub_1C0790F18();
  sub_1C0899138((uint64_t)&unk_1E7A015A8, v86, v87, v88, v89, v90, v91, v92, v476, v537, v598, v659, v721, v782, v843, v905, v966, v1027, v1088,
    v1148,
    v1207);
  sub_1C07A37E8();
  sub_1C0794DBC();
  sub_1C0797CAC();
  sub_1C079E368();
  sub_1C0775834();
  sub_1C077589C();
  sub_1C07986F0();
  sub_1C0790F18();
  sub_1C079F36C();
  sub_1C0899138((uint64_t)&unk_1E7A015D0, v93, v94, v95, v96, v97, v98, v99, v477, v538, v599, v660, v722, v783, v844, v906, v967, v1028, v1089,
    v1149,
    v1208);
  sub_1C07A37E8();
  sub_1C0794DBC();
  sub_1C0797CAC();
  sub_1C079E368();
  sub_1C0775834();
  sub_1C077589C();
  sub_1C07986F0();
  sub_1C0790F18();
  sub_1C0899138((uint64_t)&unk_1E7A015F8, v100, v101, v102, v103, v104, v105, v106, v478, v539, v600, v661, v723, v784, v845, v907, v968, v1029, v1090,
    v1150,
    v1209);
  sub_1C07A37E8();
  sub_1C0794DBC();
  sub_1C0797CAC();
  sub_1C079E368();
  sub_1C0775834();
  sub_1C077589C();
  sub_1C07986F0();
  sub_1C0790F18();
  v107 = v1030;
  sub_1C07B7A74();
  sub_1C0899138((uint64_t)&unk_1E7A01620, v108, v109, v110, v111, v112, v113, v114, v479, v540, v601, v662, v724, v785, v846, v908, v969, v1030, v1091,
    v1151,
    v1210);
  sub_1C07A37E8();
  sub_1C0794DBC();
  sub_1C0797CAC();
  sub_1C079E368();
  sub_1C0775834();
  sub_1C077589C();
  sub_1C07986F0();
  sub_1C0790F18();
  sub_1C07B95BC();
  sub_1C0899138((uint64_t)&unk_1E7A01648, v115, v116, v117, v118, v119, v120, v121, v480, v541, v602, v663, v725, v786, v847, v909, v970, v1031, v1092,
    v1152,
    v1211);
  sub_1C07A37E8();
  sub_1C0794DBC();
  sub_1C0797CAC();
  sub_1C079E368();
  sub_1C0775834();
  sub_1C077589C();
  sub_1C07986F0();
  sub_1C0790F18();
  sub_1C0899138((uint64_t)&unk_1E7A01670, v122, v123, v124, v125, v126, v127, v128, v481, v542, v603, v664, v726, v787, v848, v910, v971, v1032, v1093,
    v1153,
    v1212);
  sub_1C07A37E8();
  sub_1C0794DBC();
  sub_1C0797CAC();
  sub_1C079E368();
  sub_1C0775834();
  sub_1C077589C();
  sub_1C07986F0();
  sub_1C0790F18();
  sub_1C07B7A74();
  sub_1C0899138((uint64_t)&unk_1E7A01698, v129, v130, v131, v132, v133, v134, v135, v482, v543, v604, v665, v727, v788, v849, v911, v972, v1033, v1094,
    v1154,
    v1213);
  sub_1C07A37E8();
  sub_1C0794DBC();
  sub_1C0797CAC();
  sub_1C079E368();
  sub_1C0775834();
  sub_1C077589C();
  sub_1C07986F0();
  sub_1C0790F18();
  sub_1C079F36C();
  sub_1C0899138((uint64_t)&unk_1E7A016C0, v136, v137, v138, v139, v140, v141, v142, v483, v544, v605, v666, v728, v789, v850, v912, v973, v1034, v1095,
    v1155,
    v1214);
  sub_1C07A37E8();
  sub_1C0794DBC();
  sub_1C0797CAC();
  sub_1C079E368();
  sub_1C0775834();
  sub_1C077589C();
  sub_1C07986F0();
  sub_1C0790F18();
  sub_1C079F36C();
  sub_1C0899138((uint64_t)&unk_1E7A016E8, v143, v144, v145, v146, v147, v148, v149, v484, v545, v606, v667, v729, v790, v851, v913, v974, v1035, v1096,
    v1156,
    v1215);
  sub_1C07A37E8();
  sub_1C0794DBC();
  sub_1C0797CAC();
  sub_1C079E368();
  sub_1C0775834();
  sub_1C077589C();
  sub_1C07986F0();
  sub_1C0790F18();
  sub_1C07B95BC();
  sub_1C0899138((uint64_t)&unk_1E7A01710, v150, v151, v152, v153, v154, v155, v156, v485, v546, v607, v668, v730, v791, v852, v914, v975, v1036, v1097,
    v1157,
    v1216);
  sub_1C07A37E8();
  sub_1C0794DBC();
  sub_1C0797CAC();
  sub_1C079E368();
  sub_1C0775834();
  sub_1C077589C();
  sub_1C07986F0();
  sub_1C0790F18();
  sub_1C07B95BC();
  sub_1C0899138((uint64_t)&unk_1E7A01738, v157, v158, v159, v160, v161, v162, v163, v486, v547, v608, v669, v731, v792, v853, v915, v976, v1037, v1098,
    v1158,
    v1217);
  sub_1C07A37E8();
  sub_1C0794DBC();
  sub_1C0797CAC();
  sub_1C079E368();
  sub_1C0775834();
  sub_1C077589C();
  sub_1C07986F0();
  sub_1C0790F18();
  v164 = v107 + 51 * v3 + *(int *)(v2 + 48);
  sub_1C0899138((uint64_t)&unk_1E7A01760, v165, v166, v167, v168, v169, v170, v171, v487, v548, v609, v670, v732, v793, v854, v916, v977, v1038, v1099,
    v1159,
    v1218);
  sub_1C07A37E8();
  sub_1C0794DBC();
  sub_1C0797CAC();
  sub_1C079E368();
  sub_1C0775834();
  sub_1C077589C();
  sub_1C07986F0();
  sub_1C0790F18();
  sub_1C079F36C();
  sub_1C0899138((uint64_t)&unk_1E7A01788, v172, v173, v174, v175, v176, v177, v178, v488, v549, v610, v671, v733, v794, v855, v917, v978, v1039, v1100,
    v1160,
    v1219);
  sub_1C07A37E8();
  sub_1C0794DBC();
  sub_1C0797CAC();
  sub_1C079E368();
  sub_1C0775834();
  sub_1C077589C();
  sub_1C07986F0();
  sub_1C0790F18();
  sub_1C079F36C();
  sub_1C0899138((uint64_t)&unk_1E7A017B0, v179, v180, v181, v182, v183, v184, v185, v489, v550, v611, v672, v734, v795, v856, v918, v979, v1040, v1101,
    v1161,
    v1220);
  sub_1C07A37E8();
  sub_1C0794DBC();
  sub_1C0797CAC();
  sub_1C079E368();
  sub_1C0775834();
  sub_1C077589C();
  sub_1C07986F0();
  *(_QWORD *)v164 = 3;
  *(_BYTE *)(v164 + 8) = 0;
  sub_1C079F36C();
  sub_1C0899138((uint64_t)&unk_1E7A017D8, v186, v187, v188, v189, v190, v191, v192, v490, v551, v612, v673, v735, v796, v857, v919, v980, v1041, v1102,
    v1162,
    v1221);
  sub_1C07A37E8();
  sub_1C0794DBC();
  sub_1C0797CAC();
  sub_1C079E368();
  sub_1C0775834();
  sub_1C077589C();
  sub_1C07986F0();
  *(_QWORD *)v164 = 3;
  *(_BYTE *)(v164 + 8) = 0;
  sub_1C07B95BC();
  sub_1C0899138((uint64_t)&unk_1E7A01800, v193, v194, v195, v196, v197, v198, v199, v491, v552, v613, v674, v736, v797, v858, v920, v981, v1042, v1103,
    v1163,
    v1222);
  sub_1C07A37E8();
  sub_1C0794DBC();
  sub_1C0797CAC();
  sub_1C079E368();
  sub_1C0775834();
  sub_1C077589C();
  sub_1C07986F0();
  sub_1C0790F18();
  sub_1C07B95BC();
  sub_1C0899138((uint64_t)&unk_1E7A01828, v200, v201, v202, v203, v204, v205, v206, v492, v553, v614, v675, v737, v798, v859, v921, v982, v1043, v1104,
    v1164,
    v1223);
  sub_1C07A37E8();
  sub_1C0794DBC();
  sub_1C0797CAC();
  sub_1C079E368();
  sub_1C0775834();
  sub_1C077589C();
  sub_1C07986F0();
  sub_1C0790F18();
  sub_1C07B95BC();
  sub_1C0899138((uint64_t)&unk_1E7A01850, v207, v208, v209, v210, v211, v212, v213, v493, v554, v615, v676, v738, v799, v860, v922, v983, v1044, v1105,
    v1165,
    v1224);
  sub_1C07A37E8();
  sub_1C0794DBC();
  sub_1C0797CAC();
  sub_1C079E368();
  sub_1C0775834();
  sub_1C077589C();
  sub_1C07986F0();
  sub_1C0790F18();
  sub_1C079F36C();
  sub_1C0899138((uint64_t)&unk_1E7A01878, v214, v215, v216, v217, v218, v219, v220, v494, v555, v616, v677, v739, v800, v861, v923, v984, v1045, v1106,
    v1166,
    v1225);
  sub_1C07A37E8();
  sub_1C0794DBC();
  sub_1C0797CAC();
  sub_1C079E368();
  sub_1C0775834();
  sub_1C077589C();
  sub_1C07986F0();
  sub_1C0790F18();
  sub_1C079F36C();
  sub_1C0899138((uint64_t)&unk_1E7A018A0, v221, v222, v223, v224, v225, v226, v227, v495, v556, v617, v678, v740, v801, v862, v924, v985, v1046, v1107,
    v1167,
    v1226);
  sub_1C07A37E8();
  sub_1C0794DBC();
  sub_1C0797CAC();
  sub_1C079E368();
  sub_1C0775834();
  sub_1C077589C();
  sub_1C07986F0();
  sub_1C0790F18();
  sub_1C079F36C();
  sub_1C0899138((uint64_t)&unk_1E7A018C8, v228, v229, v230, v231, v232, v233, v234, v496, v557, v618, v679, v741, v802, v863, v925, v986, v1047, v1108,
    v1168,
    v1227);
  sub_1C07A37E8();
  sub_1C0794DBC();
  sub_1C0797CAC();
  sub_1C079E368();
  sub_1C0775834();
  sub_1C077589C();
  sub_1C07986F0();
  sub_1C0790F18();
  sub_1C078642C();
  sub_1C0899138((uint64_t)&unk_1E7A018F0, v235, v236, v237, v238, v239, v240, v241, v497, v558, v619, v680, v742, v803, v864, v926, v987, v1048, v1109,
    v1169,
    v1228);
  sub_1C07A37E8();
  sub_1C0794DBC();
  sub_1C0797CAC();
  sub_1C079E368();
  sub_1C0775834();
  sub_1C077589C();
  sub_1C07957FC();
  sub_1C106D6D8();
  sub_1C0790F18();
  sub_1C078DF14();
  sub_1C0899138((uint64_t)&unk_1E7A01918, v242, v243, v244, v245, v246, v247, v248, v498, v559, v620, v681, v743, v804, v865, v927, v988, v1049, v1110,
    v1170,
    v1229);
  sub_1C0799818();
  sub_1C0794DBC();
  sub_1C07AB678();
  v250 = v249 | 8;
  sub_1C0797CAC();
  sub_1C079E368();
  sub_1C0775834();
  sub_1C077589C();
  sub_1C07986F0();
  sub_1C0790F18();
  sub_1C078DF14();
  sub_1C0899138((uint64_t)&unk_1E7A01940, v251, v252, v253, v254, v255, v256, v257, v499, v560, v621, v682, v744, v805, v866, v928, v989, v1050, v1111,
    0x80000001C10E5B00,
    v1230);
  sub_1C0799818();
  sub_1C0794DBC();
  sub_1C0797CAC();
  sub_1C079E368();
  sub_1C0775834();
  sub_1C077589C();
  sub_1C078D4B8();
  sub_1C0790F18();
  sub_1C0899138((uint64_t)&unk_1E7A01968, v258, v259, v260, v261, v262, v263, v264, v500, v561, v622, v683, v745, v806, v867, v929, v990, v1051, v1112,
    v1171,
    v250);
  sub_1C0799818();
  sub_1C0794DBC();
  sub_1C0797CAC();
  sub_1C079E368();
  sub_1C0775834();
  sub_1C077589C();
  sub_1C07A857C();
  sub_1C106D6D8();
  sub_1C0790F18();
  sub_1C079F36C();
  sub_1C0899138((uint64_t)&unk_1E7A01990, v265, v266, v267, v268, v269, v270, v271, v501, v562, v623, v684, v746, v807, v868, v930, v991, v1052, v1113,
    v1172,
    v1231);
  sub_1C0799818();
  sub_1C0794DBC();
  sub_1C0797CAC();
  sub_1C079E368();
  sub_1C0775834();
  sub_1C077589C();
  sub_1C106D6D8();
  sub_1C0790F18();
  sub_1C079F36C();
  sub_1C0899138((uint64_t)&unk_1E7A019B8, v272, v273, v274, v275, v276, v277, v278, v502, v563, v624, v685, v747, v808, v869, v931, v992, v1053, v1114,
    v1173,
    v1232);
  sub_1C0799818();
  sub_1C0794DBC();
  sub_1C0797CAC();
  sub_1C079E368();
  sub_1C0775834();
  sub_1C077589C();
  sub_1C07986F0();
  sub_1C0790F18();
  sub_1C079F36C();
  sub_1C0899138((uint64_t)&unk_1E7A019E0, v279, v280, v281, v282, v283, v284, v285, v503, v564, v625, v686, v748, v809, v870, v932, v993, v1054, v1115,
    v1174,
    v1233);
  sub_1C0799818();
  sub_1C0794DBC();
  sub_1C0797CAC();
  sub_1C079E368();
  sub_1C0775834();
  sub_1C077589C();
  sub_1C07986F0();
  sub_1C0790F18();
  sub_1C078642C();
  sub_1C0899138((uint64_t)&unk_1E7A01A08, v286, v287, v288, v289, v290, v291, v292, v504, v565, v626, v687, v749, v810, v871, v933, v994, v1055, v1116,
    v1175,
    v1234);
  sub_1C0799818();
  sub_1C0794DBC();
  sub_1C0797CAC();
  sub_1C079E368();
  sub_1C0775834();
  sub_1C077589C();
  sub_1C07986F0();
  sub_1C0790F18();
  sub_1C077B050();
  sub_1C0899138((uint64_t)&unk_1E7A01A30, v293, v294, v295, v296, v297, v298, v299, v505, v566, v627, v688, v750, v811, v872, v934, v995, v1056, v1117,
    v1176,
    v1235);
  sub_1C0799818();
  sub_1C0794DBC();
  sub_1C0797CAC();
  sub_1C079E368();
  sub_1C0775834();
  sub_1C077589C();
  sub_1C0790748();
  sub_1C0790F18();
  sub_1C0899138((uint64_t)&unk_1E7A01A58, v300, v301, v302, v303, v304, v305, v306, v506, v567, v628, v689, v751, v812, v873, v935, v996, v1057, v1118,
    v1177,
    v1236);
  sub_1C0799818();
  sub_1C0794DBC();
  sub_1C0797CAC();
  sub_1C079E368();
  sub_1C0775834();
  sub_1C077589C();
  sub_1C078D4B8();
  sub_1C0790F18();
  sub_1C078DF14();
  sub_1C0899138((uint64_t)&unk_1E7A01A80, v307, v308, v309, v310, v311, v312, v313, v507, v568, v629, v690, v752, v813, v874, v936, v997, v1058, v1119,
    v1178,
    v1237);
  sub_1C0799818();
  sub_1C0794DBC();
  sub_1C0797CAC();
  sub_1C079E368();
  sub_1C0775834();
  sub_1C077589C();
  sub_1C078D4B8();
  sub_1C0790F18();
  sub_1C079F36C();
  sub_1C0899138((uint64_t)&unk_1E7A01AA8, v314, v315, v316, v317, v318, v319, v320, v508, v569, v630, v691, v753, v814, v875, v937, v998, v1059, v1120,
    v1179,
    v1238);
  sub_1C0799818();
  sub_1C0794DBC();
  sub_1C0797CAC();
  sub_1C079E368();
  sub_1C0775834();
  sub_1C077589C();
  sub_1C106D6D8();
  sub_1C0790F18();
  sub_1C079F36C();
  sub_1C0899138((uint64_t)&unk_1E7A01AD0, v321, v322, v323, v324, v325, v326, v327, v509, v570, v631, v692, v754, v815, v876, v938, v999, v1060, v1121,
    v1180,
    v1239);
  sub_1C0799818();
  sub_1C0794DBC();
  sub_1C0797CAC();
  sub_1C079E368();
  sub_1C0775834();
  sub_1C077589C();
  sub_1C07957FC();
  sub_1C106D6D8();
  sub_1C0790F18();
  sub_1C079F36C();
  sub_1C0899138((uint64_t)&unk_1E7A01AF8, v328, v329, v330, v331, v332, v333, v334, v510, v571, v632, v693, v755, v816, v877, v939, v1000, v1061, v1122,
    v1181,
    v1240);
  sub_1C0799818();
  sub_1C0794DBC();
  sub_1C0797CAC();
  sub_1C079E368();
  sub_1C0775834();
  sub_1C077589C();
  sub_1C07AAD54();
  sub_1C0790F18();
  sub_1C079F36C();
  sub_1C0899138((uint64_t)&unk_1E7A01B20, v335, v336, v337, v338, v339, v340, v341, v511, v572, v633, v694, v756, v817, v878, v940, v1001, v1062, v1123,
    v1182,
    v1241);
  sub_1C0799818();
  sub_1C0794DBC();
  sub_1C0797CAC();
  sub_1C079E368();
  sub_1C0775834();
  sub_1C077589C();
  sub_1C079FD68();
  sub_1C0790F18();
  sub_1C079F36C();
  sub_1C0899138((uint64_t)&unk_1E7A01B48, v342, v343, v344, v345, v346, v347, v348, v512, v573, v634, v695, v757, v818, v879, v941, v1002, v1063, v1124,
    v1183,
    v1242);
  sub_1C0799818();
  sub_1C0794DBC();
  sub_1C0797CAC();
  sub_1C079E368();
  sub_1C0775834();
  sub_1C077589C();
  sub_1C07986F0();
  sub_1C0790F18();
  sub_1C077B050();
  sub_1C0899138((uint64_t)&unk_1E7A01B70, v349, v350, v351, v352, v353, v354, v355, v513, v574, v635, v696, v758, v819, v880, v942, v1003, v1064, v1125,
    v1184,
    v1243);
  sub_1C0799818();
  sub_1C0794DBC();
  sub_1C0797CAC();
  sub_1C079E368();
  sub_1C0775834();
  sub_1C077589C();
  sub_1C07B830C();
  sub_1C0790F18();
  sub_1C077B050();
  sub_1C0899138((uint64_t)&unk_1E7A01B98, v356, v357, v358, v359, v360, v361, v362, v514, v575, v636, v697, v759, v820, v881, v943, v1004, v1065, v1126,
    v1185,
    v1244);
  sub_1C0799818();
  sub_1C0794DBC();
  sub_1C0797CAC();
  sub_1C079E368();
  sub_1C0775834();
  sub_1C077589C();
  sub_1C07AAD54();
  sub_1C0790F18();
  sub_1C079F36C();
  sub_1C0899138((uint64_t)&unk_1E7A01BC0, v363, v364, v365, v366, v367, v368, v369, v515, v576, v637, v698, v760, v821, v882, v944, v1005, v1066, v1127,
    v1186,
    v1245);
  sub_1C0799818();
  sub_1C0794DBC();
  sub_1C0797CAC();
  sub_1C079E368();
  sub_1C0775834();
  sub_1C077589C();
  sub_1C07AAD54();
  sub_1C0790F18();
  sub_1C0899138((uint64_t)&unk_1E7A01BE8, v370, v371, v372, v373, v374, v375, v376, v516, v577, v638, v699, v761, v822, v883, v945, v1006, v1067, v1128,
    v1187,
    v1246);
  sub_1C0799818();
  sub_1C0794DBC();
  sub_1C0797CAC();
  sub_1C079E368();
  sub_1C0775834();
  sub_1C077589C();
  sub_1C07B7184();
  sub_1C0790F18();
  sub_1C077B050();
  sub_1C0899138((uint64_t)&unk_1E7A01C10, v377, v378, v379, v380, v381, v382, v383, v517, v578, v639, v700, v762, v823, v884, v946, v1007, v1068, v1129,
    v1188,
    v1247);
  sub_1C0799818();
  sub_1C0794DBC();
  sub_1C0797CAC();
  sub_1C079E368();
  sub_1C0775834();
  sub_1C077589C();
  sub_1C079FD68();
  sub_1C0790F18();
  sub_1C079F36C();
  sub_1C0899138((uint64_t)&unk_1E7A01C38, v384, v385, v386, v387, v388, v389, v390, v518, v579, v640, v701, v763, v824, v885, v947, v1008, v1069, v1130,
    v1189,
    v1248);
  sub_1C0799818();
  sub_1C0794DBC();
  sub_1C0797CAC();
  sub_1C079E368();
  sub_1C0775834();
  sub_1C077589C();
  sub_1C07986F0();
  sub_1C0790F18();
  sub_1C079F36C();
  sub_1C0899138((uint64_t)&unk_1E7A01C60, v391, v392, v393, v394, v395, v396, v397, v519, v580, v641, v702, v764, v825, v886, v948, v1009, v1070, v1131,
    v1190,
    v1249);
  sub_1C0799818();
  sub_1C0794DBC();
  sub_1C0797CAC();
  sub_1C079E368();
  sub_1C0775834();
  sub_1C077589C();
  sub_1C07986F0();
  sub_1C0790F18();
  sub_1C07B7A74();
  sub_1C0899138((uint64_t)&unk_1E7A01C88, v398, v399, v400, v401, v402, v403, v404, v520, v581, v642, v703, v765, v826, v887, v949, v1010, v1071, v1132,
    v1191,
    v1250);
  sub_1C0799818();
  sub_1C0794DBC();
  sub_1C0797CAC();
  sub_1C079E368();
  sub_1C0775834();
  sub_1C077589C();
  sub_1C07986F0();
  sub_1C0790F18();
  sub_1C07B7A74();
  sub_1C0899138((uint64_t)&unk_1E7A01CB0, v405, v406, v407, v408, v409, v410, v411, v521, v582, v643, v704, v766, v827, v888, v950, v1011, v1072, v1133,
    v1192,
    v1251);
  sub_1C0799818();
  sub_1C0794DBC();
  sub_1C0797CAC();
  sub_1C079E368();
  sub_1C0775834();
  sub_1C077589C();
  sub_1C07B7184();
  sub_1C0790F18();
  sub_1C079F36C();
  sub_1C0899138((uint64_t)&unk_1E7A01CD8, v412, v413, v414, v415, v416, v417, v418, v522, v583, v644, v705, v767, v828, v889, v951, v1012, v1073, v1134,
    v1193,
    v1252);
  sub_1C0799818();
  sub_1C0794DBC();
  sub_1C0797CAC();
  sub_1C079E368();
  sub_1C0775834();
  sub_1C077589C();
  sub_1C07B7184();
  sub_1C0790F18();
  sub_1C079F36C();
  sub_1C0899138((uint64_t)&unk_1E7A01D00, v419, v420, v421, v422, v423, v424, v425, v523, v584, v645, v706, v768, v829, v890, v952, v1013, v1074, v1135,
    v1194,
    v1253);
  sub_1C0799818();
  sub_1C0794DBC();
  sub_1C0797CAC();
  sub_1C079E368();
  sub_1C0775834();
  sub_1C077589C();
  sub_1C07B830C();
  sub_1C0790F18();
  sub_1C079F36C();
  sub_1C0899138((uint64_t)&unk_1E7A01D28, v426, v427, v428, v429, v430, v431, v432, v524, v585, v646, v707, v769, v830, v891, v953, v1014, v1075, v1136,
    v1195,
    v1254);
  sub_1C0799818();
  sub_1C0794DBC();
  sub_1C0797CAC();
  sub_1C079E368();
  sub_1C0775834();
  sub_1C077589C();
  sub_1C07AAD54();
  sub_1C0790F18();
  sub_1C079F36C();
  sub_1C0899138((uint64_t)&unk_1E7A01D50, v433, v434, v435, v436, v437, v438, v439, v525, v586, v647, v708, v770, v831, v892, v954, v1015, v1076, v1137,
    v1196,
    v1255);
  sub_1C0799818();
  sub_1C0794DBC();
  sub_1C0797CAC();
  sub_1C079E368();
  sub_1C0775834();
  sub_1C077589C();
  sub_1C079FD68();
  sub_1C0790F18();
  v440 = v2;
  sub_1C0899138((uint64_t)&unk_1E7A01D78, v441, v442, v443, v444, v445, v446, v447, v526, v587, v648, v709, v771, v832, v893, v955, v1016, v1077, v1138,
    v1197,
    v1256);
  sub_1C0799818();
  sub_1C0794DBC();
  sub_1C0797CAC();
  sub_1C079E368();
  sub_1C0775834();
  sub_1C077589C();
  sub_1C07986F0();
  sub_1C0790F18();
  v448 = v1078;
  sub_1C07B95BC();
  sub_1C0899138((uint64_t)&unk_1E7A01DA0, v449, v450, v451, v452, v453, v454, v455, v527, v588, v649, v710, v772, v833, v894, v956, v1017, v1078, v1139,
    v1198,
    v1257);
  sub_1C0799818();
  sub_1C0794DBC();
  sub_1C0797CAC();
  sub_1C079E368();
  sub_1C0775834();
  sub_1C077589C();
  sub_1C07AEE30();
  sub_1C106D6D8();
  sub_1C0790F18();
  v456 = v448 + 92 * v3 + *(int *)(v440 + 48);
  sub_1C0899138((uint64_t)&unk_1E7A01DC8, v457, v458, v459, v460, v461, v462, v463, v528, v589, v650, v711, v773, v834, v895, v957, v1018, v1079, v1140,
    v1199,
    v1258);
  v465 = v464;
  sub_1C1070774();
  sub_1C0794DBC();
  sub_1C0849624(v465);
  sub_1C106FC94();
  sub_1C0778580();
  sub_1C077B5B4();
  sub_1C07AEE30();
  sub_1C106D6D8();
  *(_QWORD *)v456 = 3;
  *(_BYTE *)(v456 + 8) = 0;
  sub_1C106D6FC();
  sub_1C08AD1AC();
  return sub_1C106F97C();
}

void sub_1C08AAF24()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_1C07ACF80(&qword_1ED746330);
  v0 = *(_QWORD *)(sub_1C106D6CC() - 8);
  v1 = *(_QWORD *)(v0 + 72);
  v2 = (*(unsigned __int8 *)(v0 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 80);
  v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_1C107E7C0;
  v4 = v3 + v2;
  sub_1C07B46C0(v4, *MEMORY[0x1E0D3C120]);
  sub_1C07B46C0(v4 + v1, *MEMORY[0x1E0D3C118]);
  sub_1C07B46C0(v4 + 2 * v1, *MEMORY[0x1E0D3C048]);
  sub_1C07B46C0(v4 + 3 * v1, *MEMORY[0x1E0D3C068]);
  sub_1C07B46C0(v4 + 4 * v1, *MEMORY[0x1E0D3C0C8]);
  sub_1C07B46C0(v4 + 5 * v1, *MEMORY[0x1E0D3C0C0]);
  sub_1C07B46C0(v4 + 6 * v1, *MEMORY[0x1E0D3C088]);
  sub_1C07B46C0(v4 + 7 * v1, *MEMORY[0x1E0D3C060]);
  sub_1C07B46C0(v4 + 8 * v1, *MEMORY[0x1E0D3C0E8]);
  sub_1C07B46C0(v4 + 9 * v1, *MEMORY[0x1E0D3C078]);
  sub_1C07B46C0(v4 + 10 * v1, *MEMORY[0x1E0D3C0B0]);
  sub_1C0AA95B8();
  qword_1EF6D0D00 = v5;
  sub_1C07785E4();
}

uint64_t sub_1C08AB0A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t v263;
  uint64_t v264;
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  uint64_t v268;
  uint64_t v269;
  uint64_t v270;
  uint64_t v271;
  uint64_t v272;
  uint64_t v273;
  uint64_t v274;
  uint64_t v275;
  uint64_t v276;
  uint64_t v277;
  uint64_t v278;
  uint64_t v279;
  uint64_t v280;
  uint64_t v281;
  uint64_t v282;
  uint64_t v283;
  uint64_t v284;
  uint64_t v285;
  uint64_t v286;
  uint64_t v287;
  uint64_t v288;
  uint64_t v289;
  uint64_t v290;
  uint64_t v291;
  uint64_t v292;
  uint64_t v293;
  uint64_t v294;
  uint64_t v295;
  uint64_t v296;
  uint64_t v297;
  uint64_t v298;
  uint64_t v299;
  uint64_t v300;
  uint64_t v301;
  uint64_t v302;
  uint64_t v303;
  uint64_t v304;
  uint64_t v305;
  uint64_t v306;
  uint64_t v307;
  uint64_t v308;
  uint64_t v309;
  uint64_t v310;
  uint64_t v311;
  uint64_t v312;
  uint64_t v313;
  uint64_t v314;
  uint64_t v315;
  uint64_t v316;
  uint64_t v317;
  uint64_t v318;
  uint64_t v319;
  uint64_t v320;
  uint64_t v321;
  uint64_t v322;
  uint64_t v323;
  uint64_t v324;
  uint64_t v325;
  uint64_t v326;
  uint64_t v327;
  uint64_t v328;
  uint64_t v329;
  uint64_t v330;
  uint64_t v331;
  uint64_t v332;
  uint64_t v333;
  uint64_t v334;
  uint64_t v335;
  uint64_t v336;
  uint64_t v337;
  uint64_t v338;
  uint64_t v339;
  uint64_t v340;
  uint64_t v341;
  uint64_t v342;
  uint64_t v343;
  uint64_t v344;
  uint64_t v345;
  uint64_t v346;
  uint64_t v347;
  uint64_t v348;
  uint64_t v349;
  uint64_t v350;
  uint64_t v351;
  uint64_t v352;
  uint64_t v353;
  uint64_t v354;
  uint64_t v355;
  uint64_t v356;
  uint64_t v357;
  uint64_t v358;
  uint64_t v359;
  uint64_t v360;
  uint64_t v361;
  uint64_t v362;
  uint64_t v363;
  uint64_t v364;
  uint64_t v365;
  uint64_t v366;
  uint64_t v367;
  uint64_t v368;
  uint64_t v369;
  uint64_t v370;
  uint64_t v371;
  uint64_t v372;
  uint64_t v373;
  uint64_t v374;
  uint64_t v375;
  uint64_t v376;
  uint64_t v377;
  uint64_t v378;
  uint64_t v379;
  uint64_t v380;
  uint64_t v381;
  uint64_t v382;
  uint64_t v383;
  uint64_t v384;
  uint64_t v385;
  uint64_t v386;
  uint64_t v387;
  uint64_t v388;
  uint64_t v389;
  uint64_t v390;
  uint64_t v391;
  uint64_t v392;
  uint64_t v393;
  uint64_t v394;
  uint64_t v395;
  uint64_t v396;
  uint64_t v397;
  uint64_t v398;
  uint64_t v399;
  uint64_t v400;
  uint64_t v401;
  uint64_t v402;
  uint64_t v403;
  uint64_t v404;
  uint64_t v405;
  uint64_t v406;
  uint64_t v407;
  uint64_t v408;
  uint64_t v409;
  uint64_t v410;
  uint64_t v411;
  uint64_t v412;
  uint64_t v413;
  uint64_t v414;
  uint64_t v415;
  uint64_t v416;
  uint64_t v417;
  uint64_t v418;
  uint64_t v419;
  uint64_t v420;
  uint64_t v421;
  uint64_t v422;
  uint64_t v423;
  uint64_t v424;
  uint64_t v425;
  uint64_t v426;
  uint64_t v427;
  uint64_t v428;
  uint64_t v429;
  uint64_t v430;
  uint64_t v431;
  uint64_t v432;
  uint64_t v433;
  uint64_t v434;
  uint64_t v435;
  int v437;
  int v438;
  int v439;
  int v440;
  int v441;
  int v442;
  int v443;
  int v444;
  int v445;
  int v446;
  int v447;
  int v448;
  int v449;
  int v450;
  int v451;
  int v452;
  int v453;
  int v454;
  int v455;
  int v456;
  int v457;
  int v458;
  int v459;
  int v460;
  int v461;
  int v462;
  int v463;
  int v464;
  int v465;
  int v466;
  int v467;
  int v468;
  int v469;
  int v470;
  int v471;
  int v472;
  int v473;
  int v474;
  int v475;
  int v476;
  int v477;
  int v478;
  int v479;
  int v480;
  int v481;
  int v482;
  int v483;
  int v484;
  int v485;
  int v486;
  int v487;
  int v488;
  int v489;
  int v490;
  int v491;
  int v492;
  int v493;
  int v494;
  int v495;
  int v496;
  int v497;
  __int16 v498;
  __int16 v499;
  __int16 v500;
  __int16 v501;
  __int16 v502;
  __int16 v503;
  __int16 v504;
  __int16 v505;
  __int16 v506;
  __int16 v507;
  __int16 v508;
  __int16 v509;
  __int16 v510;
  __int16 v511;
  __int16 v512;
  __int16 v513;
  __int16 v514;
  __int16 v515;
  __int16 v516;
  __int16 v517;
  __int16 v518;
  __int16 v519;
  __int16 v520;
  __int16 v521;
  __int16 v522;
  __int16 v523;
  __int16 v524;
  __int16 v525;
  __int16 v526;
  __int16 v527;
  __int16 v528;
  __int16 v529;
  __int16 v530;
  __int16 v531;
  __int16 v532;
  __int16 v533;
  __int16 v534;
  __int16 v535;
  __int16 v536;
  __int16 v537;
  __int16 v538;
  __int16 v539;
  __int16 v540;
  __int16 v541;
  __int16 v542;
  __int16 v543;
  __int16 v544;
  __int16 v545;
  __int16 v546;
  __int16 v547;
  __int16 v548;
  __int16 v549;
  __int16 v550;
  __int16 v551;
  __int16 v552;
  __int16 v553;
  __int16 v554;
  __int16 v555;
  __int16 v556;
  __int16 v557;
  __int16 v558;
  char v559;
  char v560;
  char v561;
  char v562;
  char v563;
  char v564;
  char v565;
  char v566;
  char v567;
  char v568;
  char v569;
  char v570;
  char v571;
  char v572;
  char v573;
  char v574;
  char v575;
  char v576;
  char v577;
  char v578;
  char v579;
  char v580;
  char v581;
  char v582;
  char v583;
  char v584;
  char v585;
  char v586;
  char v587;
  char v588;
  char v589;
  char v590;
  char v591;
  char v592;
  char v593;
  char v594;
  char v595;
  char v596;
  char v597;
  char v598;
  char v599;
  char v600;
  char v601;
  char v602;
  char v603;
  char v604;
  char v605;
  char v606;
  char v607;
  char v608;
  char v609;
  char v610;
  char v611;
  char v612;
  char v613;
  char v614;
  char v615;
  char v616;
  char v617;
  char v618;
  char v619;
  char v620;
  char v621;
  char v622;
  char v623;
  char v624;
  char v625;
  char v626;
  char v627;
  char v628;
  char v629;
  char v630;
  char v631;
  char v632;
  char v633;
  char v634;
  char v635;
  char v636;
  char v637;
  char v638;
  char v639;
  char v640;
  char v641;
  char v642;
  char v643;
  char v644;
  char v645;
  char v646;
  char v647;
  char v648;
  char v649;
  char v650;
  char v651;
  char v652;
  char v653;
  char v654;
  char v655;
  char v656;
  char v657;
  char v658;
  char v659;
  char v660;
  char v661;
  char v662;
  char v663;
  char v664;
  char v665;
  char v666;
  char v667;
  char v668;
  char v669;
  char v670;
  char v671;
  char v672;
  char v673;
  char v674;
  char v675;
  char v676;
  char v677;
  char v678;
  char v679;
  char v680;
  uint64_t v681;
  uint64_t v682;
  uint64_t v683;
  uint64_t v684;
  uint64_t v685;
  uint64_t v686;
  uint64_t v687;
  uint64_t v688;
  uint64_t v689;
  uint64_t v690;
  uint64_t v691;
  uint64_t v692;
  uint64_t v693;
  uint64_t v694;
  uint64_t v695;
  uint64_t v696;
  uint64_t v697;
  uint64_t v698;
  uint64_t v699;
  uint64_t v700;
  uint64_t v701;
  uint64_t v702;
  uint64_t v703;
  uint64_t v704;
  uint64_t v705;
  uint64_t v706;
  uint64_t v707;
  uint64_t v708;
  uint64_t v709;
  uint64_t v710;
  uint64_t v711;
  uint64_t v712;
  uint64_t v713;
  uint64_t v714;
  uint64_t v715;
  uint64_t v716;
  uint64_t v717;
  uint64_t v718;
  uint64_t v719;
  uint64_t v720;
  uint64_t v721;
  uint64_t v722;
  uint64_t v723;
  uint64_t v724;
  uint64_t v725;
  uint64_t v726;
  uint64_t v727;
  uint64_t v728;
  uint64_t v729;
  uint64_t v730;
  uint64_t v731;
  uint64_t v732;
  uint64_t v733;
  uint64_t v734;
  uint64_t v735;
  uint64_t v736;
  uint64_t v737;
  uint64_t v738;
  uint64_t v739;
  uint64_t v740;
  uint64_t v741;
  uint64_t v742;
  uint64_t v743;
  uint64_t v744;
  uint64_t v745;
  uint64_t v746;
  uint64_t v747;
  uint64_t v748;
  uint64_t v749;
  uint64_t v750;
  uint64_t v751;
  uint64_t v752;
  uint64_t v753;
  uint64_t v754;
  uint64_t v755;
  uint64_t v756;
  uint64_t v757;
  uint64_t v758;
  uint64_t v759;
  uint64_t v760;
  uint64_t v761;
  uint64_t v762;
  uint64_t v763;
  uint64_t v764;
  uint64_t v765;
  uint64_t v766;
  uint64_t v767;
  uint64_t v768;
  uint64_t v769;
  uint64_t v770;
  uint64_t v771;
  uint64_t v772;
  uint64_t v773;
  uint64_t v774;
  uint64_t v775;
  uint64_t v776;
  uint64_t v777;
  uint64_t v778;
  uint64_t v779;
  uint64_t v780;
  uint64_t v781;
  uint64_t v782;
  uint64_t v783;
  uint64_t v784;
  uint64_t v785;
  uint64_t v786;
  uint64_t v787;
  uint64_t v788;
  uint64_t v789;
  uint64_t v790;
  uint64_t v791;
  uint64_t v792;
  uint64_t v793;
  uint64_t v794;
  uint64_t v795;
  uint64_t v796;
  uint64_t v797;
  uint64_t v798;
  uint64_t v799;
  uint64_t v800;
  uint64_t v801;
  uint64_t v802;
  uint64_t v803;
  uint64_t v804;
  uint64_t v805;
  uint64_t v806;
  uint64_t v807;
  uint64_t v808;
  uint64_t v809;
  uint64_t v810;
  uint64_t v811;
  uint64_t v812;
  uint64_t v813;
  uint64_t v814;
  uint64_t v815;
  uint64_t v816;
  uint64_t v817;
  uint64_t v818;
  uint64_t v819;
  uint64_t v820;
  uint64_t v821;
  uint64_t v822;
  uint64_t v823;
  uint64_t v824;
  uint64_t v825;
  uint64_t v826;
  uint64_t v827;
  uint64_t v828;
  uint64_t v829;
  uint64_t v830;
  uint64_t v831;
  uint64_t v832;
  uint64_t v833;
  uint64_t v834;
  uint64_t v835;
  uint64_t v836;
  uint64_t v837;
  uint64_t v838;
  uint64_t v839;
  uint64_t v840;
  uint64_t v841;
  uint64_t v842;
  uint64_t v843;
  uint64_t v844;
  uint64_t v845;
  uint64_t v846;
  uint64_t v847;
  uint64_t v848;
  uint64_t v849;
  uint64_t v850;
  uint64_t v851;
  uint64_t v852;
  uint64_t v853;
  uint64_t v854;
  uint64_t v855;
  uint64_t v856;
  uint64_t v857;
  uint64_t v858;
  uint64_t v859;
  uint64_t v860;
  uint64_t v861;
  uint64_t v862;
  uint64_t v863;
  uint64_t v864;
  uint64_t v865;
  uint64_t v866;
  uint64_t v867;
  uint64_t v868;
  uint64_t v869;
  uint64_t v870;
  uint64_t v871;
  uint64_t v872;
  uint64_t v873;
  uint64_t v874;
  uint64_t v875;
  uint64_t v876;
  uint64_t v877;
  uint64_t v878;
  uint64_t v879;
  uint64_t v880;
  uint64_t v881;
  uint64_t v882;
  uint64_t v883;
  uint64_t v884;
  uint64_t v885;
  uint64_t v886;
  uint64_t v887;
  uint64_t v888;
  uint64_t v889;
  uint64_t v890;
  uint64_t v891;
  uint64_t v892;
  uint64_t v893;
  uint64_t v894;
  uint64_t v895;
  uint64_t v896;
  uint64_t v897;
  uint64_t v898;
  uint64_t v899;
  uint64_t v900;
  uint64_t v901;
  uint64_t v902;
  uint64_t v903;
  uint64_t v904;
  uint64_t v905;
  uint64_t v906;
  uint64_t v907;
  uint64_t v908;
  uint64_t v909;
  uint64_t v910;
  uint64_t v911;
  uint64_t v912;
  uint64_t v913;
  uint64_t v914;
  uint64_t v915;
  uint64_t v916;
  uint64_t v917;
  uint64_t v918;
  uint64_t v919;
  uint64_t v920;
  uint64_t v921;
  uint64_t v922;
  uint64_t v923;
  uint64_t v924;
  uint64_t v925;
  uint64_t v926;
  uint64_t v927;
  uint64_t v928;
  uint64_t v929;
  uint64_t v930;
  uint64_t v931;
  uint64_t v932;
  uint64_t v933;
  uint64_t v934;
  uint64_t v935;
  uint64_t v936;
  uint64_t v937;
  uint64_t v938;
  uint64_t v939;
  uint64_t v940;
  uint64_t v941;
  uint64_t v942;
  uint64_t v943;
  uint64_t v944;
  uint64_t v945;
  uint64_t v946;
  uint64_t v947;
  uint64_t v948;
  uint64_t v949;
  uint64_t v950;
  uint64_t v951;
  uint64_t v952;
  uint64_t v953;
  uint64_t v954;
  uint64_t v955;
  uint64_t v956;
  uint64_t v957;
  uint64_t v958;
  uint64_t v959;
  uint64_t v960;
  uint64_t v961;
  uint64_t v962;
  uint64_t v963;
  uint64_t v964;
  uint64_t v965;
  uint64_t v966;
  uint64_t v967;
  uint64_t v968;
  uint64_t v969;
  uint64_t v970;
  uint64_t v971;
  uint64_t v972;
  uint64_t v973;
  uint64_t v974;
  uint64_t v975;
  uint64_t v976;
  uint64_t v977;
  uint64_t v978;
  uint64_t v979;
  uint64_t v980;
  uint64_t v981;
  uint64_t v982;
  uint64_t v983;
  uint64_t v984;
  uint64_t v985;
  uint64_t v986;
  uint64_t v987;
  uint64_t v988;
  uint64_t v989;
  uint64_t v990;
  uint64_t v991;
  uint64_t v992;
  uint64_t v993;
  uint64_t v994;
  uint64_t v995;
  uint64_t v996;
  uint64_t v997;
  uint64_t v998;
  uint64_t v999;
  uint64_t v1000;
  uint64_t v1001;
  uint64_t v1002;
  uint64_t v1003;
  uint64_t v1004;
  uint64_t v1005;
  uint64_t v1006;
  uint64_t v1007;
  uint64_t v1008;
  uint64_t v1009;
  uint64_t v1010;
  uint64_t v1011;
  uint64_t v1012;
  uint64_t v1013;
  uint64_t v1014;
  uint64_t v1015;
  uint64_t v1016;
  uint64_t v1017;
  uint64_t v1018;
  uint64_t v1019;
  uint64_t v1020;
  uint64_t v1021;
  uint64_t v1022;
  uint64_t v1023;
  uint64_t v1024;
  uint64_t v1025;
  uint64_t v1026;
  uint64_t v1027;
  uint64_t v1028;
  uint64_t v1029;
  uint64_t v1030;
  uint64_t v1031;
  uint64_t v1032;
  uint64_t v1033;
  uint64_t v1034;
  uint64_t v1035;
  uint64_t v1036;
  uint64_t v1037;
  uint64_t v1038;
  uint64_t v1039;
  uint64_t v1040;
  uint64_t v1041;
  uint64_t v1042;
  uint64_t v1043;
  uint64_t v1044;
  uint64_t v1045;
  uint64_t v1046;
  uint64_t v1047;
  uint64_t v1048;
  uint64_t v1049;
  uint64_t v1050;
  uint64_t v1051;
  uint64_t v1052;
  uint64_t v1053;
  uint64_t v1054;
  uint64_t v1055;
  uint64_t v1056;
  uint64_t v1057;
  uint64_t v1058;
  uint64_t v1059;
  uint64_t v1060;
  uint64_t v1061;
  uint64_t v1062;
  uint64_t v1063;
  uint64_t v1064;
  uint64_t v1065;
  uint64_t v1066;
  uint64_t v1067;
  uint64_t v1068;
  uint64_t v1069;
  uint64_t v1070;
  uint64_t v1071;
  uint64_t v1072;
  uint64_t v1073;
  uint64_t v1074;
  uint64_t v1075;
  uint64_t v1076;
  uint64_t v1077;
  uint64_t v1078;
  uint64_t v1079;
  uint64_t v1080;
  uint64_t v1081;
  uint64_t v1082;
  uint64_t v1083;
  uint64_t v1084;
  uint64_t v1085;
  uint64_t v1086;
  uint64_t v1087;
  uint64_t v1088;
  uint64_t v1089;
  uint64_t v1090;
  uint64_t v1091;
  uint64_t v1092;
  uint64_t v1093;
  uint64_t v1094;
  uint64_t v1095;
  uint64_t v1096;
  uint64_t v1097;
  uint64_t v1098;
  uint64_t v1099;
  uint64_t v1100;
  uint64_t v1101;
  uint64_t v1102;
  uint64_t v1103;
  uint64_t v1104;
  uint64_t v1105;
  uint64_t v1106;
  uint64_t v1107;
  uint64_t v1108;
  uint64_t v1109;
  uint64_t v1110;
  uint64_t v1111;
  uint64_t v1112;
  uint64_t v1113;
  uint64_t v1114;
  uint64_t v1115;
  uint64_t v1116;
  uint64_t v1117;
  uint64_t v1118;
  uint64_t v1119;
  uint64_t v1120;
  uint64_t v1121;
  uint64_t v1122;
  uint64_t v1123;
  uint64_t v1124;
  uint64_t v1125;
  uint64_t v1126;
  uint64_t v1127;
  uint64_t v1128;
  uint64_t v1129;
  uint64_t v1130;
  uint64_t v1131;
  uint64_t v1132;
  uint64_t v1133;
  uint64_t v1134;
  uint64_t v1135;
  uint64_t v1136;
  uint64_t v1137;
  uint64_t v1138;
  uint64_t v1139;
  uint64_t v1140;
  uint64_t v1141;
  uint64_t v1142;
  uint64_t v1143;
  uint64_t v1144;
  uint64_t v1145;
  uint64_t v1146;
  uint64_t v1147;
  uint64_t v1148;
  uint64_t v1149;
  uint64_t v1150;
  uint64_t v1151;
  uint64_t v1152;
  uint64_t v1153;
  uint64_t v1154;
  uint64_t v1155;
  uint64_t v1156;
  uint64_t v1157;
  uint64_t v1158;
  uint64_t v1159;
  uint64_t v1160;
  uint64_t v1161;
  uint64_t v1162;
  uint64_t v1163;
  uint64_t v1164;
  uint64_t v1165;
  uint64_t v1166;
  uint64_t v1167;
  uint64_t v1168;
  uint64_t v1169;
  uint64_t v1170;
  uint64_t v1171;
  uint64_t v1172;
  uint64_t v1173;
  uint64_t v1174;
  uint64_t v1175;
  uint64_t v1176;
  uint64_t v1177;
  uint64_t v1178;
  uint64_t v1179;
  uint64_t v1180;
  uint64_t v1181;
  uint64_t v1182;
  uint64_t v1183;
  uint64_t v1184;
  uint64_t v1185;
  uint64_t v1186;
  uint64_t v1187;
  uint64_t v1188;
  uint64_t v1189;
  uint64_t v1190;
  uint64_t v1191;
  uint64_t v1192;
  uint64_t v1193;
  uint64_t v1194;
  uint64_t v1195;
  uint64_t v1196;
  uint64_t v1197;
  uint64_t v1198;
  uint64_t v1199;
  uint64_t v1200;
  uint64_t v1201;
  uint64_t v1202;
  uint64_t v1203;
  uint64_t v1204;
  uint64_t v1205;
  uint64_t v1206;
  uint64_t v1207;
  uint64_t v1208;
  uint64_t v1209;
  uint64_t v1210;
  uint64_t v1211;
  uint64_t v1212;
  uint64_t v1213;
  uint64_t v1214;
  uint64_t v1215;
  uint64_t v1216;
  uint64_t v1217;
  uint64_t v1218;
  uint64_t v1219;
  uint64_t v1220;
  uint64_t v1221;
  uint64_t v1222;
  uint64_t v1223;
  uint64_t v1224;
  uint64_t v1225;
  uint64_t v1226;
  uint64_t v1227;
  uint64_t v1228;
  uint64_t v1229;
  uint64_t v1230;
  uint64_t v1231;
  uint64_t v1232;
  uint64_t v1233;

  sub_1C07ACF80(&qword_1EF630000);
  sub_1C106D6FC();
  v925 = sub_1C077C1E4();
  *(_OWORD *)(v925 + 16) = xmmword_1C107E7D0;
  sub_1C07B8948();
  sub_1C106D6D8();
  sub_1C07B8948();
  sub_1C106D6D8();
  sub_1C07B8948();
  sub_1C106D6D8();
  sub_1C07B8948();
  sub_1C106D6D8();
  sub_1C07B8948();
  sub_1C106D6D8();
  sub_1C0792DB8();
  sub_1C077B6D8();
  sub_1C106D6D8();
  sub_1C0792DB8();
  sub_1C0792DB8();
  sub_1C07986F0();
  sub_1C07B8948();
  sub_1C106D6D8();
  sub_1C07986F0();
  sub_1C0792DB8();
  sub_1C0792DB8();
  sub_1C079D31C();
  sub_1C078AC64();
  sub_1C07A5C60();
  sub_1C079D31C();
  sub_1C078AC64();
  sub_1C07AD0B8();
  sub_1C106D6D8();
  sub_1C079D31C();
  sub_1C078AC64();
  sub_1C07A5C60();
  sub_1C079D31C();
  sub_1C078AC64();
  sub_1C077B6D8();
  sub_1C106D6D8();
  sub_1C079D31C();
  sub_1C078AC64();
  sub_1C07BCDE4();
  sub_1C079D31C();
  sub_1C078AC64();
  sub_1C07AD0B8();
  sub_1C106D6D8();
  sub_1C079D31C();
  sub_1C078AC64();
  sub_1C07BCDE4();
  sub_1C079D31C();
  sub_1C078AC64();
  sub_1C07A08F4();
  sub_1C079D31C();
  sub_1C078AC64();
  sub_1C07A08F4();
  sub_1C079D31C();
  sub_1C078AC64();
  sub_1C07A5C60();
  sub_1C079D31C();
  sub_1C078AC64();
  sub_1C07986F0();
  sub_1C079D31C();
  sub_1C078AC64();
  sub_1C07A5C60();
  sub_1C079D31C();
  sub_1C078AC64();
  sub_1C0794410();
  sub_1C106D6D8();
  sub_1C079D31C();
  sub_1C078AC64();
  sub_1C07A5C60();
  sub_1C079D31C();
  sub_1C078AC64();
  sub_1C0794410();
  sub_1C106D6D8();
  sub_1C079D31C();
  sub_1C078AC64();
  sub_1C07BCDE4();
  sub_1C079D31C();
  sub_1C078AC64();
  sub_1C0792DB8();
  sub_1C079D31C();
  sub_1C078AC64();
  sub_1C07BCDE4();
  sub_1C079D31C();
  sub_1C078AC64();
  sub_1C0794410();
  sub_1C106D6D8();
  sub_1C079D31C();
  sub_1C078AC64();
  sub_1C0794410();
  sub_1C106D6D8();
  sub_1C079D31C();
  sub_1C078AC64();
  sub_1C07A5C60();
  sub_1C079D31C();
  sub_1C078AC64();
  sub_1C07B8948();
  sub_1C106D6D8();
  sub_1C0899138((uint64_t)&unk_1E7A01DF0, v0, v1, v2, v3, v4, v5, v6, 46, 0, 0, 208, 0xD00000000000002ALL, 0xD000000000000023, 0xD00000000000002BLL, 0xD000000000000022, v925, 0, 0xE000000000000000,
    v1110,
    v1172);
  sub_1C07961F8();
  sub_1C078AC64();
  sub_1C07970C8();
  sub_1C07A44E0();
  sub_1C077B5B4();
  sub_1C0775834();
  sub_1C07A68DC();
  sub_1C0899138((uint64_t)&unk_1E7A01E18, v7, v8, v9, v10, v11, v12, v13, v437, v498, v559, v620, v681, v742, v803, v864, v926, v988, v1049,
    v1111,
    v1173);
  sub_1C07961F8();
  sub_1C078AC64();
  sub_1C07970C8();
  sub_1C07A44E0();
  sub_1C077B5B4();
  sub_1C0775834();
  sub_1C07A68DC();
  sub_1C0899138((uint64_t)&unk_1E7A01E40, v14, v15, v16, v17, v18, v19, v20, v438, v499, v560, v621, v682, v743, v804, v865, v927, v989, v1050,
    v1112,
    v1174);
  sub_1C07961F8();
  sub_1C078AC64();
  sub_1C07970C8();
  sub_1C07A44E0();
  sub_1C077B5B4();
  sub_1C0775834();
  sub_1C07A68DC();
  sub_1C0899138((uint64_t)&unk_1E7A01E68, v21, v22, v23, v24, v25, v26, v27, v439, v500, v561, v622, v683, v744, v805, v866, v928, v990, v1051,
    v1113,
    v1175);
  sub_1C07961F8();
  sub_1C078AC64();
  sub_1C07970C8();
  sub_1C07A44E0();
  sub_1C077B5B4();
  sub_1C0775834();
  sub_1C07A68DC();
  sub_1C0899138((uint64_t)&unk_1E7A01E90, v28, v29, v30, v31, v32, v33, v34, v440, v501, v562, v623, v684, v745, v806, v867, v929, v991, v1052,
    v1114,
    v1176);
  sub_1C07961F8();
  sub_1C078AC64();
  sub_1C07970C8();
  sub_1C07A44E0();
  sub_1C077B5B4();
  sub_1C0775834();
  sub_1C07A68DC();
  sub_1C0899138((uint64_t)&unk_1E7A01EB8, v35, v36, v37, v38, v39, v40, v41, v441, v502, v563, v624, v685, v746, v807, v868, v930, v992, v1053,
    v1115,
    v1177);
  sub_1C07961F8();
  sub_1C078AC64();
  sub_1C07970C8();
  sub_1C07A44E0();
  sub_1C077B5B4();
  sub_1C0775834();
  sub_1C07A68DC();
  sub_1C0899138((uint64_t)&unk_1E7A01EE0, v42, v43, v44, v45, v46, v47, v48, v442, v503, v564, v625, v686, v747, v808, v869, v931, v993, v1054,
    v1116,
    v1178);
  sub_1C07961F8();
  sub_1C078AC64();
  sub_1C07970C8();
  sub_1C07A44E0();
  sub_1C077B5B4();
  sub_1C0775834();
  sub_1C07A68DC();
  sub_1C0899138((uint64_t)&unk_1E7A01F08, v49, v50, v51, v52, v53, v54, v55, v443, v504, v565, v626, v687, v748, v809, v870, v932, v994, v1055,
    v1117,
    v1179);
  sub_1C07961F8();
  sub_1C078AC64();
  sub_1C07970C8();
  sub_1C07A44E0();
  sub_1C077B5B4();
  sub_1C0775834();
  sub_1C07A68DC();
  sub_1C0899138((uint64_t)&unk_1E7A01F30, v56, v57, v58, v59, v60, v61, v62, v444, v505, v566, v627, v688, v749, v810, v871, v933, v995, v1056,
    v1118,
    v1180);
  sub_1C07961F8();
  sub_1C078AC64();
  sub_1C07970C8();
  sub_1C07A44E0();
  sub_1C077B5B4();
  sub_1C0775834();
  sub_1C07A68DC();
  sub_1C0899138((uint64_t)&unk_1E7A01F58, v63, v64, v65, v66, v67, v68, v69, v445, v506, v567, v628, v689, v750, v811, v872, v934, v996, v1057,
    v1119,
    v1181);
  sub_1C07961F8();
  sub_1C078AC64();
  sub_1C07970C8();
  sub_1C07A44E0();
  sub_1C077B5B4();
  sub_1C0775834();
  sub_1C07A68DC();
  sub_1C0899138((uint64_t)&unk_1E7A01F80, v70, v71, v72, v73, v74, v75, v76, v446, v507, v568, v629, v690, v751, v812, v873, v935, v997, v1058,
    v1120,
    v1182);
  sub_1C07961F8();
  sub_1C078AC64();
  sub_1C07970C8();
  sub_1C07A44E0();
  sub_1C077B5B4();
  sub_1C0775834();
  sub_1C07A68DC();
  sub_1C0899138((uint64_t)&unk_1E7A01FA8, v77, v78, v79, v80, v81, v82, v83, v447, v508, v569, v630, v691, v752, v813, v874, v936, v998, v1059,
    v1121,
    v1183);
  sub_1C07961F8();
  sub_1C078AC64();
  sub_1C07970C8();
  sub_1C07A44E0();
  sub_1C077B5B4();
  sub_1C0775834();
  sub_1C07A68DC();
  sub_1C0899138((uint64_t)&unk_1E7A01FD0, v84, v85, v86, v87, v88, v89, v90, v448, v509, v570, v631, v692, v753, v814, v875, v937, v999, v1060,
    v1122,
    v1184);
  sub_1C07961F8();
  sub_1C078AC64();
  sub_1C07970C8();
  sub_1C07A44E0();
  sub_1C077B5B4();
  sub_1C0775834();
  sub_1C07A68DC();
  sub_1C0899138((uint64_t)&unk_1E7A01FF8, v91, v92, v93, v94, v95, v96, v97, v449, v510, v571, v632, v693, v754, v815, v876, v938, v1000, v1061,
    v1123,
    v1185);
  sub_1C07961F8();
  sub_1C078AC64();
  sub_1C07970C8();
  sub_1C07A44E0();
  sub_1C077B5B4();
  sub_1C0775834();
  sub_1C07A68DC();
  sub_1C0899138((uint64_t)&unk_1E7A02020, v98, v99, v100, v101, v102, v103, v104, v450, v511, v572, v633, v694, v755, v816, v877, v939, v1001, v1062,
    v1124,
    v1186);
  sub_1C07961F8();
  sub_1C078AC64();
  sub_1C07970C8();
  sub_1C07A44E0();
  sub_1C077B5B4();
  sub_1C0775834();
  sub_1C07A68DC();
  sub_1C0899138((uint64_t)&unk_1E7A02048, v105, v106, v107, v108, v109, v110, v111, v451, v512, v573, v634, v695, v756, v817, v878, v940, v1002, v1063,
    v1125,
    v1187);
  sub_1C07961F8();
  sub_1C078AC64();
  sub_1C07970C8();
  sub_1C07A44E0();
  sub_1C077B5B4();
  sub_1C0775834();
  sub_1C07A68DC();
  sub_1C0899138((uint64_t)&unk_1E7A02070, v112, v113, v114, v115, v116, v117, v118, v452, v513, v574, v635, v696, v757, v818, v879, v941, v1003, v1064,
    v1126,
    v1188);
  sub_1C07961F8();
  sub_1C078AC64();
  sub_1C07970C8();
  sub_1C07A44E0();
  sub_1C077B5B4();
  sub_1C0775834();
  sub_1C07A68DC();
  sub_1C0899138((uint64_t)&unk_1E7A02098, v119, v120, v121, v122, v123, v124, v125, v453, v514, v575, v636, v697, v758, v819, v880, v942, v1004, v1065,
    v1127,
    v1189);
  sub_1C07961F8();
  sub_1C078AC64();
  sub_1C07970C8();
  sub_1C07A44E0();
  sub_1C077B5B4();
  sub_1C0775834();
  sub_1C07A68DC();
  sub_1C0899138((uint64_t)&unk_1E7A020C0, v126, v127, v128, v129, v130, v131, v132, v454, v515, v576, v637, v698, v759, v820, v881, v943, v1005, v1066,
    v1128,
    v1190);
  sub_1C07961F8();
  sub_1C078AC64();
  sub_1C07970C8();
  sub_1C07A44E0();
  sub_1C077B5B4();
  sub_1C0775834();
  sub_1C07A68DC();
  sub_1C0899138((uint64_t)&unk_1E7A020E8, v133, v134, v135, v136, v137, v138, v139, v455, v516, v577, v638, v699, v760, v821, v882, v944, v1006, v1067,
    v1129,
    v1191);
  sub_1C07961F8();
  sub_1C078AC64();
  sub_1C07970C8();
  sub_1C07A44E0();
  sub_1C077B5B4();
  sub_1C0775834();
  sub_1C07A68DC();
  sub_1C0899138((uint64_t)&unk_1E7A02110, v140, v141, v142, v143, v144, v145, v146, v456, v517, v578, v639, v700, v761, v822, v883, v945, v1007, v1068,
    v1130,
    v1192);
  sub_1C07961F8();
  sub_1C078AC64();
  sub_1C07970C8();
  sub_1C07A44E0();
  sub_1C077B5B4();
  sub_1C0775834();
  sub_1C07A68DC();
  sub_1C0899138((uint64_t)&unk_1E7A02138, v147, v148, v149, v150, v151, v152, v153, v457, v518, v579, v640, v701, v762, v823, v884, v946, v1008, v1069,
    v1131,
    v1193);
  sub_1C07961F8();
  sub_1C078AC64();
  sub_1C07970C8();
  sub_1C07A44E0();
  sub_1C077B5B4();
  sub_1C0775834();
  sub_1C07A68DC();
  sub_1C0899138((uint64_t)&unk_1E7A02160, v154, v155, v156, v157, v158, v159, v160, v458, v519, v580, v641, v702, v763, v824, v885, v947, v1009, v1070,
    v1132,
    v1194);
  sub_1C07961F8();
  sub_1C078AC64();
  sub_1C07970C8();
  sub_1C07A44E0();
  sub_1C077B5B4();
  sub_1C0775834();
  sub_1C07A68DC();
  sub_1C0899138((uint64_t)&unk_1E7A02188, v161, v162, v163, v164, v165, v166, v167, v459, v520, v581, v642, v703, v764, v825, v886, v948, v1010, v1071,
    v1133,
    v1195);
  sub_1C07961F8();
  sub_1C078AC64();
  sub_1C07970C8();
  sub_1C07A44E0();
  sub_1C077B5B4();
  sub_1C0775834();
  sub_1C07A68DC();
  sub_1C0899138((uint64_t)&unk_1E7A021B0, v168, v169, v170, v171, v172, v173, v174, v460, v521, v582, v643, v704, v765, v826, v887, v949, v1011, v1072,
    v1134,
    v1196);
  sub_1C07961F8();
  sub_1C078AC64();
  sub_1C07970C8();
  sub_1C07A44E0();
  sub_1C077B5B4();
  sub_1C0775834();
  sub_1C07A68DC();
  sub_1C0899138((uint64_t)&unk_1E7A021D8, v175, v176, v177, v178, v179, v180, v181, v461, v522, v583, v644, v705, v766, v827, v888, v950, v1012, v1073,
    v1135,
    v1197);
  sub_1C07961F8();
  sub_1C078AC64();
  sub_1C07970C8();
  sub_1C07A44E0();
  sub_1C077B5B4();
  sub_1C0775834();
  sub_1C07A68DC();
  sub_1C0899138((uint64_t)&unk_1E7A02200, v182, v183, v184, v185, v186, v187, v188, v462, v523, v584, v645, v706, v767, v828, v889, v951, v1013, v1074,
    v1136,
    v1198);
  sub_1C07961F8();
  sub_1C078AC64();
  sub_1C07970C8();
  sub_1C07A44E0();
  sub_1C077B5B4();
  sub_1C0775834();
  sub_1C07A68DC();
  sub_1C0899138((uint64_t)&unk_1E7A02228, v189, v190, v191, v192, v193, v194, v195, v463, v524, v585, v646, v707, v768, v829, v890, v952, v1014, v1075,
    v1137,
    v1199);
  sub_1C07961F8();
  sub_1C078AC64();
  sub_1C07970C8();
  sub_1C07A44E0();
  sub_1C077B5B4();
  sub_1C0775834();
  sub_1C07A68DC();
  sub_1C0899138((uint64_t)&unk_1E7A02250, v196, v197, v198, v199, v200, v201, v202, v464, v525, v586, v647, v708, v769, v830, v891, v953, v1015, v1076,
    v1138,
    v1200);
  sub_1C07961F8();
  sub_1C078AC64();
  sub_1C07970C8();
  sub_1C07A44E0();
  sub_1C077B5B4();
  sub_1C0775834();
  sub_1C07A68DC();
  sub_1C0899138((uint64_t)&unk_1E7A02278, v203, v204, v205, v206, v207, v208, v209, v465, v526, v587, v648, v709, v770, v831, v892, v954, v1016, v1077,
    v1139,
    v1201);
  sub_1C07961F8();
  sub_1C078AC64();
  sub_1C07970C8();
  sub_1C07A44E0();
  sub_1C077B5B4();
  sub_1C0775834();
  sub_1C07A68DC();
  sub_1C0899138((uint64_t)&unk_1E7A022A0, v210, v211, v212, v213, v214, v215, v216, v466, v527, v588, v649, v710, v771, v832, v893, v955, v1017, v1078,
    v1140,
    v1202);
  sub_1C07961F8();
  sub_1C078AC64();
  sub_1C07970C8();
  sub_1C07A44E0();
  sub_1C077B5B4();
  sub_1C0775834();
  sub_1C07A68DC();
  sub_1C0899138((uint64_t)&unk_1E7A022C8, v217, v218, v219, v220, v221, v222, v223, v467, v528, v589, v650, v711, v772, v833, v894, v956, v1018, v1079,
    v1141,
    v1203);
  sub_1C07A2400();
  sub_1C078AC64();
  sub_1C07970C8();
  sub_1C07A44E0();
  sub_1C077B5B4();
  sub_1C0775834();
  sub_1C07A68DC();
  sub_1C0899138((uint64_t)&unk_1E7A022F0, v224, v225, v226, v227, v228, v229, v230, v468, v529, v590, v651, v712, v773, v834, v895, v957, v1019, v1080,
    v1142,
    v1204);
  sub_1C07A2400();
  sub_1C078AC64();
  sub_1C07970C8();
  sub_1C07A44E0();
  sub_1C077B5B4();
  sub_1C0775834();
  sub_1C07A68DC();
  sub_1C0899138((uint64_t)&unk_1E7A02318, v231, v232, v233, v234, v235, v236, v237, v469, v530, v591, v652, v713, v774, v835, v896, v958, v1020, v1081,
    v1143,
    v1205);
  sub_1C07A2400();
  sub_1C078AC64();
  sub_1C07970C8();
  sub_1C07A44E0();
  sub_1C077B5B4();
  sub_1C0775834();
  sub_1C07A68DC();
  sub_1C0899138((uint64_t)&unk_1E7A02340, v238, v239, v240, v241, v242, v243, v244, v470, v531, v592, v653, v714, v775, v836, v897, v959, v1021, v1082,
    v1144,
    v1206);
  sub_1C07A2400();
  sub_1C078AC64();
  sub_1C07970C8();
  sub_1C07A44E0();
  sub_1C077B5B4();
  sub_1C0775834();
  sub_1C07A68DC();
  sub_1C0899138((uint64_t)&unk_1E7A02368, v245, v246, v247, v248, v249, v250, v251, v471, v532, v593, v654, v715, v776, v837, v898, v960, v1022, v1083,
    v1145,
    v1207);
  sub_1C07A2400();
  sub_1C078AC64();
  sub_1C07970C8();
  sub_1C07A44E0();
  sub_1C077B5B4();
  sub_1C0775834();
  sub_1C07A68DC();
  sub_1C0899138((uint64_t)&unk_1E7A02390, v252, v253, v254, v255, v256, v257, v258, v472, v533, v594, v655, v716, v777, v838, v899, v961, v1023, v1084,
    v1146,
    v1208);
  sub_1C07A2400();
  sub_1C078AC64();
  sub_1C07970C8();
  sub_1C07A44E0();
  sub_1C077B5B4();
  sub_1C0775834();
  sub_1C07A68DC();
  sub_1C0899138((uint64_t)&unk_1E7A023B8, v259, v260, v261, v262, v263, v264, v265, v473, v534, v595, v656, v717, v778, v839, v900, v962, v1024, v1085,
    v1147,
    v1209);
  sub_1C07A2400();
  sub_1C078AC64();
  sub_1C07970C8();
  sub_1C07A44E0();
  sub_1C077B5B4();
  sub_1C0775834();
  sub_1C07A68DC();
  sub_1C0899138((uint64_t)&unk_1E7A023E0, v266, v267, v268, v269, v270, v271, v272, v474, v535, v596, v657, v718, v779, v840, v901, v963, v1025, v1086,
    v1148,
    v1210);
  sub_1C07A2400();
  sub_1C078AC64();
  sub_1C07970C8();
  sub_1C07A44E0();
  sub_1C077B5B4();
  sub_1C0775834();
  sub_1C07A68DC();
  sub_1C0899138((uint64_t)&unk_1E7A02408, v273, v274, v275, v276, v277, v278, v279, v475, v536, v597, v658, v719, v780, v841, v902, v964, v1026, v1087,
    v1149,
    v1211);
  sub_1C07A2400();
  sub_1C078AC64();
  sub_1C07970C8();
  sub_1C07A44E0();
  sub_1C077B5B4();
  sub_1C0775834();
  sub_1C07A68DC();
  sub_1C0899138((uint64_t)&unk_1E7A02430, v280, v281, v282, v283, v284, v285, v286, v476, v537, v598, v659, v720, v781, v842, v903, v965, v1027, v1088,
    v1150,
    v1212);
  sub_1C07A2400();
  sub_1C078AC64();
  sub_1C07970C8();
  sub_1C07A44E0();
  sub_1C077B5B4();
  sub_1C0775834();
  sub_1C07A68DC();
  sub_1C0899138((uint64_t)&unk_1E7A02458, v287, v288, v289, v290, v291, v292, v293, v477, v538, v599, v660, v721, v782, v843, v904, v966, v1028, v1089,
    v1151,
    v1213);
  sub_1C07A2400();
  sub_1C078AC64();
  sub_1C07970C8();
  sub_1C07A44E0();
  sub_1C077B5B4();
  sub_1C0775834();
  sub_1C07A68DC();
  sub_1C0899138((uint64_t)&unk_1E7A02480, v294, v295, v296, v297, v298, v299, v300, v478, v539, v600, v661, v722, v783, v844, v905, v967, v1029, v1090,
    v1152,
    v1214);
  sub_1C07A2400();
  sub_1C078AC64();
  sub_1C07970C8();
  sub_1C07A44E0();
  sub_1C077B5B4();
  sub_1C0775834();
  sub_1C07A68DC();
  sub_1C0899138((uint64_t)&unk_1E7A024A8, v301, v302, v303, v304, v305, v306, v307, v479, v540, v601, v662, v723, v784, v845, v906, v968, v1030, v1091,
    v1153,
    v1215);
  sub_1C07A2400();
  sub_1C078AC64();
  sub_1C07970C8();
  sub_1C07A44E0();
  sub_1C077B5B4();
  sub_1C0775834();
  sub_1C07A68DC();
  sub_1C0899138((uint64_t)&unk_1E7A024D0, v308, v309, v310, v311, v312, v313, v314, v480, v541, v602, v663, v724, v785, v846, v907, v969, v1031, v1092,
    v1154,
    v1216);
  sub_1C07A2400();
  sub_1C078AC64();
  sub_1C07970C8();
  sub_1C07A44E0();
  sub_1C077B5B4();
  sub_1C0775834();
  sub_1C07A68DC();
  sub_1C0899138((uint64_t)&unk_1E7A024F8, v315, v316, v317, v318, v319, v320, v321, v481, v542, v603, v664, v725, v786, v847, v908, v970, v1032, v1093,
    v1155,
    v1217);
  sub_1C07A2400();
  sub_1C078AC64();
  sub_1C07970C8();
  sub_1C07A44E0();
  sub_1C077B5B4();
  sub_1C0775834();
  sub_1C07A68DC();
  sub_1C0899138((uint64_t)&unk_1E7A02520, v322, v323, v324, v325, v326, v327, v328, v482, v543, v604, v665, v726, v787, v848, v909, v971, v1033, v1094,
    v1156,
    v1218);
  sub_1C07A2400();
  sub_1C078AC64();
  sub_1C07970C8();
  sub_1C07A44E0();
  sub_1C077B5B4();
  sub_1C0775834();
  sub_1C07A68DC();
  sub_1C0899138((uint64_t)&unk_1E7A02548, v329, v330, v331, v332, v333, v334, v335, v483, v544, v605, v666, v727, v788, v849, v910, v972, v1034, v1095,
    v1157,
    v1219);
  sub_1C07A2400();
  sub_1C078AC64();
  sub_1C07970C8();
  sub_1C07A44E0();
  sub_1C077B5B4();
  sub_1C0775834();
  sub_1C07A68DC();
  sub_1C0899138((uint64_t)&unk_1E7A02570, v336, v337, v338, v339, v340, v341, v342, v484, v545, v606, v667, v728, v789, v850, v911, v973, v1035, v1096,
    v1158,
    v1220);
  sub_1C07A2400();
  sub_1C078AC64();
  sub_1C07970C8();
  sub_1C07A44E0();
  sub_1C077B5B4();
  sub_1C0775834();
  sub_1C07A68DC();
  sub_1C0899138((uint64_t)&unk_1E7A02598, v343, v344, v345, v346, v347, v348, v349, v485, v546, v607, v668, v729, v790, v851, v912, v974, v1036, v1097,
    v1159,
    v1221);
  sub_1C07A2400();
  sub_1C078AC64();
  sub_1C07970C8();
  sub_1C07A44E0();
  sub_1C077B5B4();
  sub_1C0775834();
  sub_1C07A68DC();
  sub_1C0899138((uint64_t)&unk_1E7A025C0, v350, v351, v352, v353, v354, v355, v356, v486, v547, v608, v669, v730, v791, v852, v913, v975, v1037, v1098,
    v1160,
    v1222);
  sub_1C07A2400();
  sub_1C078AC64();
  sub_1C07970C8();
  sub_1C07A44E0();
  sub_1C077B5B4();
  sub_1C0775834();
  sub_1C07A68DC();
  sub_1C0899138((uint64_t)&unk_1E7A025E8, v357, v358, v359, v360, v361, v362, v363, v487, v548, v609, v670, v731, v792, v853, v914, v976, v1038, v1099,
    v1161,
    v1223);
  sub_1C07A2400();
  sub_1C078AC64();
  sub_1C07970C8();
  sub_1C07A44E0();
  sub_1C077B5B4();
  sub_1C0775834();
  sub_1C07A68DC();
  sub_1C0899138((uint64_t)&unk_1E7A02610, v364, v365, v366, v367, v368, v369, v370, v488, v549, v610, v671, v732, v793, v854, v915, v977, v1039, v1100,
    v1162,
    v1224);
  sub_1C07A2400();
  sub_1C078AC64();
  sub_1C07970C8();
  sub_1C07A44E0();
  sub_1C077B5B4();
  sub_1C0775834();
  sub_1C07A68DC();
  sub_1C0899138((uint64_t)&unk_1E7A02638, v371, v372, v373, v374, v375, v376, v377, v489, v550, v611, v672, v733, v794, v855, v916, v978, v1040, v1101,
    v1163,
    v1225);
  sub_1C07A2400();
  sub_1C078AC64();
  sub_1C07970C8();
  sub_1C07A44E0();
  sub_1C077B5B4();
  sub_1C0775834();
  sub_1C07A68DC();
  sub_1C0899138((uint64_t)&unk_1E7A02660, v378, v379, v380, v381, v382, v383, v384, v490, v551, v612, v673, v734, v795, v856, v917, v979, v1041, v1102,
    v1164,
    v1226);
  sub_1C07A2400();
  sub_1C078AC64();
  sub_1C07970C8();
  sub_1C07A44E0();
  sub_1C077B5B4();
  sub_1C0775834();
  sub_1C07A68DC();
  sub_1C0899138((uint64_t)&unk_1E7A02688, v385, v386, v387, v388, v389, v390, v391, v491, v552, v613, v674, v735, v796, v857, v918, v980, v1042, v1103,
    v1165,
    v1227);
  sub_1C07A2400();
  sub_1C078AC64();
  sub_1C07970C8();
  sub_1C07A44E0();
  sub_1C077B5B4();
  sub_1C0775834();
  sub_1C07A68DC();
  sub_1C0899138((uint64_t)&unk_1E7A026B0, v392, v393, v394, v395, v396, v397, v398, v492, v553, v614, v675, v736, v797, v858, v919, v981, v1043, v1104,
    v1166,
    v1228);
  sub_1C07A2400();
  sub_1C078AC64();
  sub_1C07970C8();
  sub_1C07A44E0();
  sub_1C077B5B4();
  sub_1C0775834();
  sub_1C07A68DC();
  sub_1C0899138((uint64_t)&unk_1E7A026D8, v399, v400, v401, v402, v403, v404, v405, v493, v554, v615, v676, v737, v798, v859, v920, v982, v1044, v1105,
    v1167,
    v1229);
  sub_1C07A2400();
  sub_1C078AC64();
  sub_1C07970C8();
  sub_1C07A44E0();
  sub_1C077B5B4();
  sub_1C0775834();
  sub_1C07A68DC();
  sub_1C0899138((uint64_t)&unk_1E7A02700, v406, v407, v408, v409, v410, v411, v412, v494, v555, v616, v677, v738, v799, v860, v921, v983, v1045, v1106,
    v1168,
    v1230);
  sub_1C07A2400();
  sub_1C078AC64();
  sub_1C07970C8();
  sub_1C07A44E0();
  sub_1C077B5B4();
  sub_1C0775834();
  sub_1C07A68DC();
  sub_1C0899138((uint64_t)&unk_1E7A02728, v413, v414, v415, v416, v417, v418, v419, v495, v556, v617, v678, v739, v800, v861, v922, v984, v1046, v1107,
    v1169,
    v1231);
  sub_1C07A2400();
  sub_1C078AC64();
  sub_1C07970C8();
  sub_1C07A44E0();
  sub_1C077B5B4();
  sub_1C0775834();
  sub_1C07A68DC();
  sub_1C0899138((uint64_t)&unk_1E7A02750, v420, v421, v422, v423, v424, v425, v426, v496, v557, v618, v679, v740, v801, v862, v923, v985, v1047, v1108,
    v1170,
    v1232);
  sub_1C07A2400();
  sub_1C078AC64();
  sub_1C07970C8();
  sub_1C07A44E0();
  sub_1C077B5B4();
  sub_1C0775834();
  sub_1C07A68DC();
  sub_1C0899138((uint64_t)&unk_1E7A02778, v427, v428, v429, v430, v431, v432, v433, v497, v558, v619, v680, v741, v802, v863, v924, v986, v1048, v1109,
    v1171,
    v1233);
  v435 = v434;
  sub_1C1070774();
  sub_1C078AC64();
  sub_1C0849624(v435);
  sub_1C106FC94();
  sub_1C0778580();
  sub_1C077B5B4();
  sub_1C07A68DC();
  return v987;
}

void sub_1C08AC3C8(uint64_t a1@<X8>)
{
  sub_1C0AD2298(a1);
  sub_1C0778534();
}

void sub_1C08AC3E8()
{
  sub_1C0AD23C4();
  sub_1C0778534();
}

void sub_1C08AC408()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1C0793810();
  sub_1C0AD2494();
  *v0 = v1;
  sub_1C0778534();
}

void sub_1C08AC42C()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1C0793810();
  sub_1C0AD252C();
  *v0 = v1;
  sub_1C0778534();
}

void sub_1C08AC450()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1C0793810();
  sub_1C0AD25C4();
  *v0 = v1;
  sub_1C0778534();
}

void sub_1C08AC474()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1C0793810();
  sub_1C0AD265C();
  *v0 = v1;
  sub_1C0778534();
}

void sub_1C08AC498()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1C0793810();
  sub_1C0AD26F4();
  *v0 = v1;
  sub_1C0778534();
}

void sub_1C08AC4BC()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1C0793810();
  sub_1C0AD278C();
  *v0 = v1;
  sub_1C0778534();
}

void sub_1C08AC4E0()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1C0793810();
  sub_1C0AD2824();
  *v0 = v1;
  sub_1C0778534();
}

void sub_1C08AC504()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1C0793810();
  sub_1C0AD28BC();
  *v0 = v1;
  sub_1C0778534();
}

void sub_1C08AC528()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1C0793810();
  sub_1C0AD2954();
  *v0 = v1;
  sub_1C0778534();
}

void sub_1C08AC54C()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1C0793810();
  sub_1C0AD29EC();
  *v0 = v1;
  sub_1C0778534();
}

void sub_1C08AC570()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1C0793810();
  sub_1C0AD2A84();
  *v0 = v1;
  sub_1C0778534();
}

void sub_1C08AC594()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1C0793810();
  sub_1C0AD2B1C();
  *v0 = v1;
  sub_1C0778534();
}

void sub_1C08AC5B8()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1C0793810();
  sub_1C0AD2BB4();
  *v0 = v1;
  sub_1C0778534();
}

void sub_1C08AC5DC()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1C0793810();
  sub_1C0AD2C4C();
  *v0 = v1;
  sub_1C0778534();
}

void sub_1C08AC600()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1C0793810();
  sub_1C0AD2CE4();
  *v0 = v1;
  sub_1C0778534();
}

void sub_1C08AC624()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1C0793810();
  sub_1C0AD2D7C();
  *v0 = v1;
  sub_1C0778534();
}

void sub_1C08AC648()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1C0793810();
  sub_1C0AD2E14();
  *v0 = v1;
  sub_1C0778534();
}

void sub_1C08AC66C()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1C0793810();
  sub_1C0AD2EAC();
  *v0 = v1;
  sub_1C0778534();
}

void sub_1C08AC690()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1C0793810();
  sub_1C0AD2F44();
  *v0 = v1;
  sub_1C0778534();
}

void sub_1C08AC6B4()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1C0793810();
  sub_1C0AD2FDC();
  *v0 = v1;
  sub_1C0778534();
}

void sub_1C08AC6D8()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1C0793810();
  sub_1C0AD3074();
  *v0 = v1;
  sub_1C0778534();
}

void sub_1C08AC6FC()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1C0793810();
  sub_1C0AD310C();
  *v0 = v1;
  sub_1C0778534();
}

void sub_1C08AC720()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1C0793810();
  sub_1C0AD31A4();
  *v0 = v1;
  sub_1C0778534();
}

void sub_1C08AC744()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1C0793810();
  sub_1C0AD323C();
  *v0 = v1;
  sub_1C0778534();
}

void sub_1C08AC768()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1C0793810();
  sub_1C0AD32D4();
  *v0 = v1;
  sub_1C0778534();
}

void sub_1C08AC78C()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1C0793810();
  sub_1C0AD336C();
  *v0 = v1;
  sub_1C0778534();
}

void sub_1C08AC7B0()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1C0793810();
  sub_1C0AD3404();
  *v0 = v1;
  sub_1C0778534();
}

void sub_1C08AC7D4()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1C0793810();
  sub_1C0AD349C();
  *v0 = v1;
  sub_1C0778534();
}

void sub_1C08AC7F8()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1C0793810();
  sub_1C0AD3534();
  *v0 = v1;
  sub_1C0778534();
}

void sub_1C08AC81C()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1C0793810();
  sub_1C0AD35CC();
  *v0 = v1;
  sub_1C0778534();
}

void sub_1C08AC840()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1C0793810();
  sub_1C0AD3664();
  *v0 = v1;
  sub_1C0778534();
}

void sub_1C08AC864()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1C0793810();
  sub_1C0AD36FC();
  *v0 = v1;
  sub_1C0778534();
}

void sub_1C08AC888()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1C0793810();
  sub_1C0AD3794();
  *v0 = v1;
  sub_1C0778534();
}

void sub_1C08AC8AC()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1C0793810();
  sub_1C0AD382C();
  *v0 = v1;
  sub_1C0778534();
}

void sub_1C08AC8D0()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1C0793810();
  sub_1C0AD38C4();
  *v0 = v1;
  sub_1C0778534();
}

void sub_1C08AC8F4()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1C0793810();
  sub_1C0AD395C();
  *v0 = v1;
  sub_1C0778534();
}

void sub_1C08AC918()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1C0793810();
  sub_1C0AD39F4();
  *v0 = v1;
  sub_1C0778534();
}

void sub_1C08AC93C()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1C0793810();
  sub_1C0AD3A8C();
  *v0 = v1;
  sub_1C0778534();
}

void sub_1C08AC960()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1C0793810();
  sub_1C0AD3B24();
  *v0 = v1;
  sub_1C0778534();
}

void sub_1C08AC984()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1C0793810();
  sub_1C0AD3BBC();
  *v0 = v1;
  sub_1C0778534();
}

void sub_1C08AC9A8()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1C0793810();
  sub_1C0AD3C54();
  *v0 = v1;
  sub_1C0778534();
}

void sub_1C08AC9CC()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1C0793810();
  sub_1C0AD3CEC();
  *v0 = v1;
  sub_1C0778534();
}

void sub_1C08AC9F0()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1C0793810();
  sub_1C0AD3D84();
  *v0 = v1;
  sub_1C0778534();
}

void sub_1C08ACA14()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1C0793810();
  sub_1C0AD3E1C();
  *v0 = v1;
  sub_1C0778534();
}

void sub_1C08ACA38()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1C0793810();
  sub_1C0AD3EB4();
  *v0 = v1;
  sub_1C0778534();
}

void sub_1C08ACA5C()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1C0793810();
  sub_1C0AD3F4C();
  *v0 = v1;
  sub_1C0778534();
}

void sub_1C08ACA80()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1C0793810();
  sub_1C0AD3FE4();
  *v0 = v1;
  sub_1C0778534();
}

void sub_1C08ACAA4()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1C0793810();
  sub_1C0AD407C();
  *v0 = v1;
  sub_1C0778534();
}

void sub_1C08ACAC8()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1C0793810();
  sub_1C0AD4114();
  *v0 = v1;
  sub_1C0778534();
}

void sub_1C08ACAEC()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1C0793810();
  sub_1C0AD41AC();
  *v0 = v1;
  sub_1C0778534();
}

void sub_1C08ACB10()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1C0793810();
  sub_1C0AD4244();
  *v0 = v1;
  sub_1C0778534();
}

void sub_1C08ACB34()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1C0793810();
  sub_1C0AD42DC();
  *v0 = v1;
  sub_1C0778534();
}

void sub_1C08ACB58()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1C0793810();
  sub_1C0AD4374();
  *v0 = v1;
  sub_1C0778534();
}

void sub_1C08ACB7C()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1C0793810();
  sub_1C0AD440C();
  *v0 = v1;
  sub_1C0778534();
}

void sub_1C08ACBA0()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1C0793810();
  sub_1C0AD44A4();
  *v0 = v1;
  sub_1C0778534();
}

void sub_1C08ACBC4()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1C0793810();
  sub_1C0AD453C();
  *v0 = v1;
  sub_1C0778534();
}

void sub_1C08ACBE8()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1C0793810();
  sub_1C0AD45D4();
  *v0 = v1;
  sub_1C0778534();
}

void sub_1C08ACC0C()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1C0793810();
  sub_1C0AD466C();
  *v0 = v1;
  sub_1C0778534();
}

void sub_1C08ACC30()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1C0793810();
  sub_1C0AD4704();
  *v0 = v1;
  sub_1C0778534();
}

void sub_1C08ACC54()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1C0793810();
  sub_1C0AD479C();
  *v0 = v1;
  sub_1C0778534();
}

void sub_1C08ACC78()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1C0793810();
  sub_1C0AD4834();
  *v0 = v1;
  sub_1C0778534();
}

void sub_1C08ACC9C()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1C0793810();
  sub_1C0AD48CC();
  *v0 = v1;
  sub_1C0778534();
}

void sub_1C08ACCC0()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1C0793810();
  sub_1C0AD4964();
  *v0 = v1;
  sub_1C0778534();
}

void sub_1C08ACCE4()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1C0793810();
  sub_1C0AD49FC();
  *v0 = v1;
  sub_1C0778534();
}

void sub_1C08ACD08()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1C0793810();
  sub_1C0AD4A94();
  *v0 = v1;
  sub_1C0778534();
}

void sub_1C08ACD2C()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1C0793810();
  sub_1C0AD4B2C();
  *v0 = v1;
  sub_1C0778534();
}

void sub_1C08ACD50()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1C0793810();
  sub_1C0AD4BC4();
  *v0 = v1;
  sub_1C0778534();
}

void sub_1C08ACD74()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1C0793810();
  sub_1C0AD4C5C();
  *v0 = v1;
  sub_1C0778534();
}

void sub_1C08ACD98()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1C0793810();
  sub_1C0AD4CF4();
  *v0 = v1;
  sub_1C0778534();
}

void sub_1C08ACDBC()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1C0793810();
  sub_1C0AD4D8C();
  *v0 = v1;
  sub_1C0778534();
}

void sub_1C08ACDE0()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1C0793810();
  sub_1C0AD4E24();
  *v0 = v1;
  sub_1C0778534();
}

void sub_1C08ACE04()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1C0793810();
  sub_1C0AD4EBC();
  *v0 = v1;
  sub_1C0778534();
}

void sub_1C08ACE28()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1C0793810();
  sub_1C0AD4F54();
  *v0 = v1;
  sub_1C0778534();
}

void sub_1C08ACE4C()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1C0793810();
  sub_1C0AD4FEC();
  *v0 = v1;
  sub_1C0778534();
}

void sub_1C08ACE70()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1C0793810();
  sub_1C0AD5084();
  *v0 = v1;
  sub_1C0778534();
}

void sub_1C08ACE94()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1C0793810();
  sub_1C0AD511C();
  *v0 = v1;
  sub_1C0778534();
}

void sub_1C08ACEB8()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1C0793810();
  sub_1C0AD51B4();
  *v0 = v1;
  sub_1C0778534();
}

void sub_1C08ACEDC()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1C0793810();
  sub_1C0AD524C();
  *v0 = v1;
  sub_1C0778534();
}

void sub_1C08ACF00()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1C0793810();
  sub_1C0AD52E4();
  *v0 = v1;
  sub_1C0778534();
}

void sub_1C08ACF24()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1C0793810();
  sub_1C0AD537C();
  *v0 = v1;
  sub_1C0778534();
}

void sub_1C08ACF48()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1C0793810();
  sub_1C0AD5414();
  *v0 = v1;
  sub_1C0778534();
}

void sub_1C08ACF6C()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1C0793810();
  sub_1C0AD54AC();
  *v0 = v1;
  sub_1C0778534();
}

void sub_1C08ACF90()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1C0793810();
  sub_1C0AD5544();
  *v0 = v1;
  sub_1C0778534();
}

void sub_1C08ACFB4()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1C0793810();
  sub_1C0AD55DC();
  *v0 = v1;
  sub_1C0778534();
}

void sub_1C08ACFD8()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1C0793810();
  sub_1C0AD5674();
  *v0 = v1;
  sub_1C0778534();
}

void sub_1C08ACFFC()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1C0793810();
  sub_1C0AD570C();
  *v0 = v1;
  sub_1C0778534();
}

void sub_1C08AD020()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1C0793810();
  sub_1C0AD57A4();
  *v0 = v1;
  sub_1C0778534();
}

void sub_1C08AD044()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1C0793810();
  sub_1C0AD583C();
  *v0 = v1;
  sub_1C0778534();
}

void sub_1C08AD068()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1C0793810();
  sub_1C0AD58D4();
  *v0 = v1;
  sub_1C0778534();
}

void sub_1C08AD08C()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1C0793810();
  sub_1C0AD596C();
  *v0 = v1;
  sub_1C0778534();
}

void sub_1C08AD0B0()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1C0793810();
  sub_1C0AD5A04();
  *v0 = v1;
  sub_1C0778534();
}

void sub_1C08AD0D4()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1C0793810();
  sub_1C0AD5A9C();
  *v0 = v1;
  sub_1C0778534();
}

void sub_1C08AD0F8()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1C0793810();
  sub_1C0AD5B34();
  *v0 = v1;
  sub_1C0778534();
}

void sub_1C08AD11C()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1C0793810();
  sub_1C0AD5BCC();
  *v0 = v1;
  sub_1C0778534();
}

void sub_1C08AD140()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1C0793810();
  sub_1C0AD5C64();
  *v0 = v1;
  sub_1C0778534();
}

void sub_1C08AD164()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1C0793810();
  sub_1C0AD5CFC();
  *v0 = v1;
  sub_1C0778534();
}

void sub_1C08AD188()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1C0793810();
  sub_1C0AD5D94();
  *v0 = v1;
  sub_1C0778534();
}

unint64_t sub_1C08AD1AC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED747AA0;
  if (!qword_1ED747AA0)
  {
    v1 = sub_1C106D6FC();
    result = MEMORY[0x1C3BA8174](MEMORY[0x1E0D3C198], v1);
    atomic_store(result, (unint64_t *)&qword_1ED747AA0);
  }
  return result;
}

uint64_t dispatch thunk of RelationshipType.generateTriples(sourceId:subject:pipelineType:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 24))();
}

uint64_t dispatch thunk of OntologyEntity.generateTriples(sourceId:pipelineType:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 24))();
}

uint64_t sub_1C08AD21C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;

  v3 = v2;
  v6 = v3 + OBJC_IVAR____TtC24IntelligencePlatformCore21CachedContextProvider_contextCacheStartDate;
  sub_1C077F040();
  sub_1C077AE98();
  sub_1C07B95C8(v6, a1);
  sub_1C0781574();
  v7 = v3 + OBJC_IVAR____TtC24IntelligencePlatformCore21CachedContextProvider_contextCacheEndDate;
  sub_1C077F040();
  sub_1C07B95C8(v7, a2);
  sub_1C0781574();
  sub_1C077D05C();
  sub_1C077F040();
  sub_1C07ACF80(&qword_1ED746268);
  sub_1C106F9C4();
  sub_1C0781574();
  sub_1C077D05C();
  *(_QWORD *)(v3 + OBJC_IVAR____TtC24IntelligencePlatformCore21CachedContextProvider_lastMotionStateEventBeforeStartDate) = 0;
  swift_release();
  *(_QWORD *)(v3 + OBJC_IVAR____TtC24IntelligencePlatformCore21CachedContextProvider_cachedMotionStateEvents) = 0;
  return swift_bridgeObjectRelease();
}

void sub_1C08AD330()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  void *v30;
  uint64_t v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  void *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  sub_1C0779670();
  v38 = v1;
  v40 = v2;
  sub_1C07ACF80((uint64_t *)&unk_1ED762690);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v3);
  sub_1C077AED0();
  v39 = v4;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v38 - v6;
  v8 = sub_1C077AE98();
  v9 = sub_1C0780A78(v8);
  MEMORY[0x1E0C80A78](v9);
  sub_1C077AED0();
  v41 = v10;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v38 - v12;
  v14 = sub_1C0780478();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  sub_1C077AF80();
  v18 = v16 - v17;
  MEMORY[0x1E0C80A78](v19);
  v21 = (char *)&v38 - v20;
  sub_1C07ABC0C((uint64_t)&v38 - v20);
  sub_1C08AFF54((uint64_t)v21);
  (*(void (**)(char *, uint64_t))(v15 + 8))(v21, v14);
  sub_1C07ABC0C(v18);
  v22 = (uint64_t *)(v0 + OBJC_IVAR____TtC24IntelligencePlatformCore21CachedContextProvider_cachedBehaviorEventsByType);
  sub_1C077F040();
  sub_1C089AB50(v18, *v22);
  if (!v23)
  {
    swift_endAccess();
    sub_1C07AEE44();
LABEL_9:
    v29 = objc_allocWithZone(MEMORY[0x1E0D02478]);
    sub_1C07786FC();
    v30 = (void *)sub_1C106FEEC();
    objc_msgSend(v29, sel_initWithSequence_, v30, v38);

    goto LABEL_15;
  }
  v24 = v23;
  swift_endAccess();
  sub_1C07AEE44();
  if (v24 >> 62)
  {
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    v25 = sub_1C10709B4();
    sub_1C0775894();
  }
  else
  {
    v25 = *(_QWORD *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  v26 = v42;
  v27 = (uint64_t)v13;
  if (!v25)
  {
    sub_1C0775894();
    goto LABEL_9;
  }
  sub_1C078A924(v40, (uint64_t)v7, (uint64_t *)&unk_1ED762690);
  if (sub_1C07B2D80((uint64_t)v7, 1, v8) == 1)
  {
    v28 = v0 + OBJC_IVAR____TtC24IntelligencePlatformCore21CachedContextProvider_contextCacheStartDate;
    sub_1C0775864();
    sub_1C077CF74((uint64_t)v13, v28, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v26 + 16));
    sub_1C0784B94((uint64_t)v7, (uint64_t *)&unk_1ED762690);
  }
  else
  {
    sub_1C077CF74((uint64_t)v13, (uint64_t)v7, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v26 + 32));
  }
  v31 = v39;
  sub_1C078A924(v38, v39, (uint64_t *)&unk_1ED762690);
  v32 = sub_1C07B2D80(v31, 1, v8);
  v33 = v41;
  if (v32 == 1)
  {
    v34 = v0 + OBJC_IVAR____TtC24IntelligencePlatformCore21CachedContextProvider_contextCacheEndDate;
    sub_1C0775864();
    sub_1C077CF74(v33, v34, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v26 + 16));
    sub_1C0784B94(v31, (uint64_t *)&unk_1ED762690);
  }
  else
  {
    v35 = sub_1C077CF74(v41, v31, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v26 + 32));
  }
  MEMORY[0x1E0C80A78](v35);
  *(&v38 - 2) = v27;
  *(&v38 - 1) = v33;
  sub_1C0D2EE38();
  v36 = objc_allocWithZone(MEMORY[0x1E0D02478]);
  sub_1C07786FC();
  v37 = (void *)sub_1C106FEEC();
  sub_1C077960C();
  objc_msgSend(v36, sel_initWithSequence_, v37);

  sub_1C078799C(v33);
  sub_1C078799C(v27);
LABEL_15:
  sub_1C0776760();
}

void sub_1C08AD6C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(uint64_t, uint64_t, uint64_t);
  uint64_t v19;
  void (*v20)(uint64_t);
  uint64_t v21;
  uint64_t v22;
  os_log_type_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  const char *v30;
  NSObject *v31;
  os_log_type_t v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(uint64_t);
  uint64_t v36;
  os_log_type_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  char v53;
  uint64_t v54;
  uint64_t v55;
  NSObject *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  void (*v61)(uint64_t, uint64_t);
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;

  sub_1C0779670();
  v66 = v2;
  v67 = v3;
  v4 = v1;
  v6 = v5;
  v63 = v7;
  v8 = sub_1C077AE98();
  v9 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870];
  v10 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  sub_1C077AED0();
  v62 = v11;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v12);
  sub_1C0779728();
  v60 = v13;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v14);
  sub_1C0779728();
  v58 = v15;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v16);
  sub_1C077C1F0();
  MEMORY[0x1E0C80A78](v17);
  sub_1C0775864();
  v18 = *(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16);
  sub_1C0786448();
  sub_1C0794BAC((unint64_t *)&qword_1ED755A40, v9, MEMORY[0x1E0CB08B0]);
  v19 = sub_1C079CC38();
  v20 = *(void (**)(uint64_t))(v10 + 8);
  v21 = sub_1C07814F0();
  v20(v21);
  if ((v19 & 1) != 0)
  {
    v61 = (void (*)(uint64_t, uint64_t))v20;
    if (qword_1ED760048 == -1)
    {
LABEL_3:
      v22 = sub_1C077585C();
      sub_1C0781988(v22, (uint64_t)qword_1ED78D800);
      v18(v62, v6, v8);
      sub_1C079381C();
      sub_1C106F538();
      v23 = sub_1C077A2D0();
      if (os_log_type_enabled((os_log_t)v19, v23))
      {
        v24 = sub_1C0775854();
        v65 = sub_1C0775854();
        *(_DWORD *)v24 = 136315394;
        sub_1C0794BAC((unint64_t *)&qword_1ED7565B0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08F0]);
        v25 = sub_1C0794DC4();
        v64 = sub_1C07892FC(v25, v26);
        sub_1C07AA6FC();
        sub_1C077960C();
        v61(v62, v8);
        *(_WORD *)(v24 + 12) = 2080;
        sub_1C077B05C();
        sub_1C0794DC4();
        v27 = sub_1C07814F0();
        v28 = ((uint64_t (*)(uint64_t))v61)(v27);
        v64 = sub_1C07B7A80(v28, v29, &v65);
        sub_1C07AA6FC();
        sub_1C07878F0();
        sub_1C0775894();
        v30 = "CachedContextProvider: motionState(at:) input date out of bound (input date %s < start date %s). Returning nil.";
        v31 = v19;
        v32 = v23;
        goto LABEL_10;
      }
      v61(v62, v8);

LABEL_34:
      sub_1C07878F0();
      goto LABEL_35;
    }
LABEL_48:
    swift_once();
    goto LABEL_3;
  }
  sub_1C0775864();
  sub_1C0786448();
  v33 = sub_1C079CC38();
  v34 = sub_1C07814F0();
  v35 = v20;
  v20(v34);
  if ((v33 & 1) != 0)
  {
    if (qword_1ED760048 != -1)
      swift_once();
    v36 = sub_1C077585C();
    sub_1C0781988(v36, (uint64_t)qword_1ED78D800);
    sub_1C079F378(v60);
    sub_1C079381C();
    sub_1C106F538();
    v37 = sub_1C077A2D0();
    if (os_log_type_enabled((os_log_t)v33, v37))
    {
      v24 = sub_1C0775854();
      v64 = sub_1C0775854();
      *(_DWORD *)v24 = 136315394;
      sub_1C0794BAC((unint64_t *)&qword_1ED7565B0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08F0]);
      v56 = v33;
      v38 = sub_1C0794DC4();
      sub_1C0788DAC(v38, v39, &v64);
      sub_1C10705AC();
      sub_1C077960C();
      ((void (*)(uint64_t, uint64_t))v20)(v60, v8);
      *(_WORD *)(v24 + 12) = 2080;
      sub_1C077B05C();
      v40 = sub_1C0794DC4();
      v42 = v41;
      v43 = sub_1C07814F0();
      v35(v43);
      sub_1C0788DAC(v40, v42, &v64);
      sub_1C10705AC();
      sub_1C07878F0();
      swift_bridgeObjectRelease();
      v30 = "CachedContextProvider: motionState(at:) input date out of bound (input date %s >= end date %s). Returning nil.";
      v31 = v56;
      v32 = v37;
LABEL_10:
      sub_1C077E89C(&dword_1C0771000, v31, v32, v30, (uint8_t *)v24);
      sub_1C077B6EC();
      sub_1C0776778();
    }
    ((void (*)(uint64_t, uint64_t))v20)(v60, v8);

    goto LABEL_34;
  }
  sub_1C08AFB58();
  v44 = *(_QWORD *)(v4 + OBJC_IVAR____TtC24IntelligencePlatformCore21CachedContextProvider_cachedMotionStateEvents);
  if (!v44)
  {
LABEL_35:
    v51 = 0;
    v52 = 1;
LABEL_36:
    *(_QWORD *)v63 = v51;
    *(_BYTE *)(v63 + 8) = v52;
    return;
  }
  v57 = v4;
  sub_1C079F378(v0);
  sub_1C079F378(v58);
  v64 = 1;
  type metadata accessor for MotionStateEvent();
  swift_allocObject();
  v61 = (void (*)(uint64_t, uint64_t))sub_1C0869CD8(v0, v58, &v64);
  if (!((unint64_t)v44 >> 62))
  {
    v45 = *(_QWORD *)((v44 & 0xFFFFFFFFFFFFFF8) + 0x10);
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    if (v45)
      goto LABEL_15;
    goto LABEL_56;
  }
  if (v44 >= 0)
    v46 = v44 & 0xFFFFFFFFFFFFFF8;
  else
    v46 = v44;
  swift_bridgeObjectRetain_n();
  v54 = sub_1C10709B4();
  sub_1C077B5B4();
  if (!v54)
    goto LABEL_56;
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  v45 = sub_1C10709B4();
  sub_1C077B5B4();
  if (v45 >= 1)
  {
LABEL_15:
    v62 = v44 & 0xFFFFFFFFFFFFFF8;
    v8 = 0;
    v46 = (uint64_t)v61 + OBJC_IVAR____TtC24IntelligencePlatformCore16MotionStateEvent_startDate;
    v18 = (void (*)(uint64_t, uint64_t, uint64_t))(v44 & 0xC000000000000001);
    v19 = v44 + 32;
    v59 = v45;
    while (!__OFSUB__(v45, v8))
    {
      v47 = (v45 - v8) / 2;
      v48 = v8 + v47;
      if (__OFADD__(v8, v47))
        goto LABEL_44;
      if (v18)
      {
        v49 = MEMORY[0x1C3BA70DC](v8 + v47, v44);
      }
      else
      {
        if (v48 < 0)
          goto LABEL_46;
        if ((unint64_t)v48 >= *(_QWORD *)((v44 & 0xFFFFFFFFFFFFFF8) + 0x10))
          goto LABEL_47;
        v49 = *(_QWORD *)(v19 + 8 * v48);
        swift_retain();
      }
      v6 = v49 + OBJC_IVAR____TtC24IntelligencePlatformCore16MotionStateEvent_startDate;
      if ((sub_1C106AD50() & 1) != 0)
      {
        swift_release();
        v8 = v48 + 1;
        if (__OFADD__(v48, 1))
          goto LABEL_45;
        v48 = v45;
      }
      else
      {
        v6 = sub_1C106AD44();
        swift_release();
        if ((v6 & 1) == 0)
          goto LABEL_41;
      }
      v45 = v48;
      if (v8 >= v48)
      {
        v50 = v59;
        if (v8 == v59)
          goto LABEL_29;
        goto LABEL_30;
      }
    }
    __break(1u);
LABEL_44:
    __break(1u);
LABEL_45:
    __break(1u);
LABEL_46:
    __break(1u);
LABEL_47:
    __break(1u);
    goto LABEL_48;
  }
  v50 = 0;
  v8 = 0;
  if (!v45)
LABEL_29:
    v8 = v50 - 1;
LABEL_30:
  v18 = (void (*)(uint64_t, uint64_t, uint64_t))(v44 & 0xC000000000000001);
  sub_1C07B165C();
  if ((v44 & 0xC000000000000001) != 0)
    sub_1C077F690();
  sub_1C07B719C();
  sub_1C077B078();
  if ((sub_1C106AD50() & 1) != 0)
  {
    sub_1C077AF1C();
LABEL_41:
    sub_1C07B165C();
    if (v18)
      sub_1C077F690();
    sub_1C07B719C();
    swift_release();
    sub_1C077B5B4();
    v51 = *(_QWORD *)(v46 + OBJC_IVAR____TtC24IntelligencePlatformCore16MotionStateEvent_motionState);
    sub_1C077AF1C();
    v52 = 0;
    goto LABEL_36;
  }
  sub_1C077B078();
  v53 = sub_1C106AD44();
  sub_1C077AF1C();
  if ((v53 & 1) == 0)
    goto LABEL_41;
  if (!v8)
  {
LABEL_56:
    sub_1C077B5B4();
    swift_release();
    v55 = *(_QWORD *)(v57
                    + OBJC_IVAR____TtC24IntelligencePlatformCore21CachedContextProvider_lastMotionStateEventBeforeStartDate);
    if (v55)
    {
      v52 = 0;
      v51 = *(_QWORD *)(v55 + OBJC_IVAR____TtC24IntelligencePlatformCore16MotionStateEvent_motionState);
      goto LABEL_36;
    }
    goto LABEL_35;
  }
  if (!__OFSUB__(v8, 1))
    goto LABEL_41;
  __break(1u);
}

void sub_1C08ADE70()
{
  unint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  os_log_type_t v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  NSObject *v31;
  os_log_type_t v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t *v42;
  unint64_t v43;
  unint64_t v44;
  uint64_t v45;
  NSObject *v46;
  uint64_t v47;
  char v48;
  uint64_t v49;
  _QWORD v50[2];
  void (*v51)(uint64_t, uint64_t, uint64_t);
  NSObject *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58[5];
  char v59;

  sub_1C0779670();
  v1 = v0;
  v3 = v2;
  v54 = v4;
  v5 = sub_1C077AE98();
  v6 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870];
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  sub_1C077AF80();
  v10 = v8 - v9;
  MEMORY[0x1E0C80A78](v11);
  sub_1C0779728();
  v55 = v12;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v13);
  v15 = (uint64_t)v50 - v14;
  v16 = v1 + OBJC_IVAR____TtC24IntelligencePlatformCore21CachedContextProvider_contextCacheStartDate;
  sub_1C0775864();
  v17 = *(_QWORD *)(v7 + 16);
  sub_1C07A1C14(v15, v16);
  sub_1C0794BAC((unint64_t *)&qword_1ED755A40, v6, MEMORY[0x1E0CB08B0]);
  v18 = sub_1C07A9DEC();
  sub_1C078799C(v15);
  if ((v18 & 1) != 0)
  {
    if (qword_1ED760048 != -1)
LABEL_54:
      swift_once();
    v19 = sub_1C077585C();
    sub_1C0781988(v19, (uint64_t)qword_1ED78D800);
    sub_1C07A1C14(v10, v3);
    sub_1C0782D54();
    sub_1C106F538();
    v20 = sub_1C077A2D0();
    v21 = v20;
    if (os_log_type_enabled((os_log_t)v18, v20))
    {
      v22 = sub_1C0775854();
      LODWORD(v55) = v21;
      v23 = v22;
      v53 = sub_1C0775854();
      v58[0] = v53;
      *(_DWORD *)v23 = 136315394;
      v51 = (void (*)(uint64_t, uint64_t, uint64_t))(v23 + 4);
      sub_1C0794BAC((unint64_t *)&qword_1ED7565B0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08F0]);
      v54 = v1;
      v52 = v18;
      v24 = sub_1C078643C();
      v57 = sub_1C0781D24(v24, v25);
      sub_1C10705AC();
      sub_1C077960C();
      sub_1C078799C(v10);
      *(_WORD *)(v23 + 12) = 2080;
      sub_1C07A1C14(v15, v16);
      sub_1C078643C();
      v26 = sub_1C078799C(v15);
      v57 = sub_1C07B7A80(v26, v27, v58);
      sub_1C10705AC();
      sub_1C07878F0();
      sub_1C0775894();
      sub_1C077E89C(&dword_1C0771000, v52, (os_log_type_t)v55, "CachedContextProvider: lastBehaviorEvent input date out of bound (input date %s < start date %s). Returning nil.", (uint8_t *)v23);
      sub_1C079E374();
      sub_1C0776778();
    }
    sub_1C078799C(v10);

    goto LABEL_16;
  }
  v10 = v1 + OBJC_IVAR____TtC24IntelligencePlatformCore21CachedContextProvider_contextCacheEndDate;
  sub_1C0775864();
  sub_1C07A1C14(v15, v10);
  v28 = sub_1C07A9DEC();
  sub_1C078799C(v15);
  if ((v28 & 1) != 0)
  {
    if (qword_1ED760048 != -1)
      goto LABEL_57;
    goto LABEL_7;
  }
  v41 = v54;
  sub_1C08AFF54(v54);
  v42 = (uint64_t *)(v1 + OBJC_IVAR____TtC24IntelligencePlatformCore21CachedContextProvider_cachedBehaviorEventsByType);
  sub_1C077F040();
  sub_1C089AB50(v41, *v42);
  if (!v43)
  {
    swift_endAccess();
    goto LABEL_17;
  }
  v44 = v43;
  swift_endAccess();
  v16 = v44 >> 62;
  if (!(v44 >> 62))
  {
    if (*(_QWORD *)((v44 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_13;
LABEL_49:
    sub_1C0775844();
    goto LABEL_17;
  }
  sub_1C07B8958();
  v49 = sub_1C10709B4();
  sub_1C0775844();
  if (!v49)
    goto LABEL_49;
LABEL_13:
  sub_1C07786FC();
  memset(v58, 0, sizeof(v58));
  v59 = 21;
  sub_1C07A1C14(v15, v3);
  v5 = sub_1C08258CC((uint64_t)v58, v15);
  if (v16)
  {
    sub_1C07B8958();
    v45 = sub_1C10709B4();
    sub_1C0775844();
  }
  else
  {
    v45 = *(_QWORD *)((v44 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v46 = (v45 - 1);
  if (v45 < 1)
  {
    if (v45)
      v18 = 0;
    else
LABEL_38:
      v18 = (uint64_t)v46;
LABEL_39:
    v1 = v44 & 0xC000000000000001;
    sub_1C079EDC8();
    if ((v44 & 0xC000000000000001) != 0)
      sub_1C078DF20();
    swift_retain();
    if ((sub_1C106AD50() & 1) != 0)
    {
      swift_release();
    }
    else
    {
      v48 = sub_1C106AD44();
      swift_release();
      if ((v48 & 1) != 0)
      {
        if (!v18)
        {
          sub_1C0775844();
          sub_1C077AF1C();
          goto LABEL_17;
        }
        if (__OFSUB__(v18, 1))
          __break(1u);
      }
    }
LABEL_47:
    sub_1C079EDC8();
    if (v1)
      sub_1C078DF20();
    swift_retain();
    sub_1C077AF1C();
    goto LABEL_49;
  }
  v52 = (v45 - 1);
  v53 = v45;
  v18 = 0;
  v1 = v44 & 0xC000000000000001;
  v54 = v44 + 32;
  v55 = v44 & 0xFFFFFFFFFFFFFF8;
  v15 = 2;
  while (1)
  {
    if (__OFSUB__(v45, v18))
    {
      __break(1u);
LABEL_52:
      __break(1u);
LABEL_53:
      __break(1u);
      goto LABEL_54;
    }
    v47 = (v45 - v18) / 2;
    v16 = v18 + v47;
    if (__OFADD__(v18, v47))
      goto LABEL_52;
    if (!v1)
      break;
    v3 = MEMORY[0x1C3BA70DC](v18 + v47, v44);
LABEL_29:
    v10 = *(_QWORD *)(v3 + 64) + OBJC_IVAR____TtC24IntelligencePlatformCore15BehaviorContext_date;
    v17 = *(_QWORD *)(v5 + 64) + OBJC_IVAR____TtC24IntelligencePlatformCore15BehaviorContext_date;
    if ((sub_1C106AD50() & 1) != 0)
    {
      swift_release();
      v18 = v16 + 1;
      if (__OFADD__(v16, 1))
        goto LABEL_53;
      v16 = v45;
    }
    else
    {
      v10 = sub_1C106AD44();
      swift_release();
      if ((v10 & 1) == 0)
        goto LABEL_47;
    }
    v45 = v16;
    if (v18 >= v16)
    {
      v46 = v52;
      if (v18 == v53)
        goto LABEL_38;
      goto LABEL_39;
    }
  }
  if ((v16 & 0x8000000000000000) == 0)
  {
    if ((unint64_t)v16 >= *(_QWORD *)(v55 + 16))
      goto LABEL_56;
    v3 = *(_QWORD *)(v54 + 8 * v16);
    swift_retain();
    goto LABEL_29;
  }
  __break(1u);
LABEL_56:
  __break(1u);
LABEL_57:
  swift_once();
LABEL_7:
  v29 = sub_1C077585C();
  sub_1C0781988(v29, (uint64_t)qword_1ED78D800);
  v30 = v55;
  sub_1C07A1C14(v55, v3);
  sub_1C0782D54();
  v31 = sub_1C106F538();
  v32 = sub_1C107039C();
  v33 = v32;
  if (os_log_type_enabled(v31, v32))
  {
    v34 = sub_1C0775854();
    v54 = v1;
    v51 = (void (*)(uint64_t, uint64_t, uint64_t))v17;
    v35 = v34;
    v53 = sub_1C0775854();
    v58[0] = v53;
    *(_DWORD *)v35 = 136315394;
    v50[1] = v35 + 4;
    sub_1C0794BAC((unint64_t *)&qword_1ED7565B0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08F0]);
    LODWORD(v52) = v33;
    v36 = sub_1C078643C();
    v56 = sub_1C0781D24(v36, v37);
    sub_1C10705AC();
    sub_1C077960C();
    sub_1C078799C(v30);
    *(_WORD *)(v35 + 12) = 2080;
    v51(v15, v10, v5);
    v38 = sub_1C078643C();
    v40 = v39;
    sub_1C078799C(v15);
    v56 = sub_1C0788DAC(v38, v40, v58);
    sub_1C10705AC();
    sub_1C07878F0();
    swift_bridgeObjectRelease();
    sub_1C077E89C(&dword_1C0771000, v31, (os_log_type_t)v52, "CachedContextProvider: lastBehaviorEvent input date out of bound (input date %s >= end date %s). Returning nil.", (uint8_t *)v35);
    sub_1C079E374();
    sub_1C0776778();
  }
  sub_1C078799C(v30);

LABEL_16:
  sub_1C07878F0();
LABEL_17:
  sub_1C0776760();
}

void sub_1C08AE60C()
{
  JUMPOUT(0x1C08AE500);
}

uint64_t sub_1C08AE614@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t (*v15)(uint64_t);
  _BYTE v16[24];

  sub_1C07ACF80((uint64_t *)&unk_1ED75E9A8);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v4);
  sub_1C077AF80();
  sub_1C077C1F0();
  MEMORY[0x1E0C80A78](v5);
  v7 = &v16[-v6];
  v8 = (uint64_t)v2 + OBJC_IVAR____TtC24IntelligencePlatformCore21CachedContextProvider____lazy_storage___calendar;
  sub_1C0775864();
  sub_1C078A924(v8, (uint64_t)v7, (uint64_t *)&unk_1ED75E9A8);
  v9 = sub_1C106AFE4();
  if (sub_1C07B2D80((uint64_t)v7, 1, v9) == 1)
  {
    sub_1C0784B94((uint64_t)v7, (uint64_t *)&unk_1ED75E9A8);
    v10 = (void *)MEMORY[0x1C3BA79F4]();
    v11 = v2[5];
    v12 = v2[6];
    sub_1C07A9480(v2 + 2, v11);
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v11, v12);
    objc_autoreleasePoolPop(v10);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v1, a1, v9);
    sub_1C07B2D8C(v1, 0, 1, v9);
    sub_1C077F040();
    sub_1C0876088(v1, v8);
    return swift_endAccess();
  }
  else
  {
    v14 = sub_1C077B078();
    return v15(v14);
  }
}

void sub_1C08AE78C(__int128 *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(uint64_t);
  uint64_t v11;

  v7 = v3 + OBJC_IVAR____TtC24IntelligencePlatformCore21CachedContextProvider____lazy_storage___calendar;
  v8 = sub_1C106AFE4();
  sub_1C07B2D8C(v7, 1, 1, v8);
  *(_QWORD *)(v3 + OBJC_IVAR____TtC24IntelligencePlatformCore21CachedContextProvider_lastBehaviorEventDigested) = 0;
  v9 = OBJC_IVAR____TtC24IntelligencePlatformCore21CachedContextProvider_cachedBehaviorEventsByType;
  sub_1C0780478();
  v10 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D3C130];
  sub_1C07ACF80(&qword_1ED758CE0);
  sub_1C0794BAC((unint64_t *)&qword_1ED744A48, v10, MEMORY[0x1E0D3C148]);
  *(_QWORD *)(v3 + v9) = sub_1C106F97C();
  *(_QWORD *)(v3 + OBJC_IVAR____TtC24IntelligencePlatformCore21CachedContextProvider_lastMotionStateEventBeforeStartDate) = 0;
  *(_QWORD *)(v3 + OBJC_IVAR____TtC24IntelligencePlatformCore21CachedContextProvider_cachedMotionStateEvents) = 0;
  sub_1C077DD60(a1, v3 + 16);
  v11 = v3 + OBJC_IVAR____TtC24IntelligencePlatformCore21CachedContextProvider_contextCacheStartDate;
  sub_1C077AE98();
  sub_1C07B95C8(v11, a2);
  sub_1C07B95C8(v3 + OBJC_IVAR____TtC24IntelligencePlatformCore21CachedContextProvider_contextCacheEndDate, a3);
  sub_1C077C798();
}

void sub_1C08AE8AC()
{
  sub_1C08ADE70();
}

void sub_1C08AE8BC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t, uint64_t, uint64_t);
  NSObject *v4;
  NSObject *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  NSObject *v18;
  Class isa;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  uint64_t v25;
  NSObject *v26;
  uint64_t v27;
  uint64_t v28;
  NSObject *v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v32;
  uint64_t v33;
  uint64_t v34;
  _BYTE *v35;
  int v36;
  uint64_t *v37;
  _BYTE *v38;
  _QWORD *v39;
  void (*v40)(uint64_t, uint64_t, uint64_t);
  uint64_t v41;
  void (*v42)(_QWORD);
  char v43;
  uint64_t (*v44)(uint64_t, NSObject *);
  NSObject *v45;
  uint64_t v46;
  NSObject *v47;
  NSObject *v48;
  _QWORD *v49;
  os_log_type_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  NSObject *v54;
  uint64_t (*v55)(uint64_t, NSObject *);
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  void (*v62)(uint64_t, uint64_t, uint64_t);
  uint64_t v63;
  uint64_t v64;
  int v65;
  uint64_t (*v66)(uint64_t, NSObject *);
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  NSObject *v70;
  os_log_type_t v71;
  int v72;
  uint8_t *v73;
  uint64_t v74;
  unint64_t v75;
  uint64_t v76;
  uint64_t v77;
  unint64_t v78;
  unint64_t v79;
  char v80;
  uint64_t v81;
  NSObject *v82;
  os_log_type_t v83;
  uint64_t v84;
  uint64_t v85;
  unint64_t v86;
  uint64_t (*v87)(uint64_t, NSObject *);
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  os_log_type_t v94;
  uint8_t *v95;
  uint64_t v96;
  unint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  NSObject *v101;
  uint64_t (*v102)(uint64_t, NSObject *);
  uint64_t v103;
  NSObject *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t (*v110)(uint64_t, NSObject *);
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  _BYTE *v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  _BYTE v120[16];
  NSObject *v121;
  void (*v122)(_QWORD, _QWORD, _QWORD);
  uint64_t v123;
  uint64_t v124;
  NSObject *v125;
  NSObject *v126;
  uint64_t v127;
  uint64_t (*v128)(uint64_t, NSObject *);
  _BYTE *v129;
  uint64_t v130;
  void (*v131)(uint64_t, uint64_t, uint64_t);
  uint64_t v132;
  _QWORD *v133;
  uint64_t v134[3];
  uint64_t v135[3];
  uint64_t v136;
  uint64_t v137[2];

  sub_1C0779670();
  v133 = v0;
  v2 = v1;
  v131 = v3;
  v5 = v4;
  v6 = sub_1C0780478();
  v127 = *(_QWORD *)(v6 - 8);
  v128 = (uint64_t (*)(uint64_t, NSObject *))v6;
  MEMORY[0x1E0C80A78](v6);
  sub_1C0778564();
  v126 = (v8 - v7);
  sub_1C07ACF80((uint64_t *)&unk_1ED762690);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v9);
  sub_1C077AF80();
  v12 = v10 - v11;
  MEMORY[0x1E0C80A78](v13);
  sub_1C0779728();
  v130 = v14;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v15);
  v17 = &v120[-v16];
  v18 = sub_1C077AE98();
  isa = v18[-1].isa;
  MEMORY[0x1E0C80A78](v18);
  sub_1C077AED0();
  v124 = v20;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v21);
  sub_1C0779728();
  v123 = v22;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v23);
  sub_1C0779728();
  v129 = v24;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v25);
  sub_1C0779728();
  v125 = v26;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v27);
  v29 = &v120[-v28];
  MEMORY[0x1E0C80A78](v30);
  v32 = &v120[-v31];
  MEMORY[0x1E0C80A78](v33);
  v35 = &v120[-v34];
  sub_1C078A924((uint64_t)v5, (uint64_t)v17, (uint64_t *)&unk_1ED762690);
  v36 = sub_1C07B2D80((uint64_t)v17, 1, (uint64_t)v18);
  v37 = &OBJC_IVAR____TtCO24IntelligencePlatformCore10ViewUpdate14SignpostHelper_requests;
  v132 = v2;
  if (v36 == 1)
  {
    v38 = v32;
    v125 = v5;
    v39 = v133;
    sub_1C0784B94((uint64_t)v17, (uint64_t *)&unk_1ED762690);
    v40 = v131;
    v41 = (uint64_t)v18;
    goto LABEL_3;
  }
  v121 = v29;
  (*((void (**)(_BYTE *, _BYTE *, NSObject *))isa + 4))(v35, v17, v18);
  sub_1C0775864();
  v42 = (void (*)(_QWORD))*((_QWORD *)isa + 2);
  sub_1C07A7DAC();
  sub_1C0794BAC((unint64_t *)&qword_1ED755A40, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08B0]);
  sub_1C077B078();
  v43 = sub_1C07A9DEC();
  v44 = (uint64_t (*)(uint64_t, NSObject *))*((_QWORD *)isa + 1);
  sub_1C07AB718();
  v122 = (void (*)(_QWORD, _QWORD, _QWORD))v42;
  if ((v43 & 1) != 0)
  {
    v128 = v44;
    v129 = v35;
    v45 = v18;
    v127 = (uint64_t)v32;
    if (qword_1ED760048 != -1)
      swift_once();
    v46 = sub_1C077585C();
    sub_1C0781988(v46, (uint64_t)qword_1ED78D800);
    v47 = v125;
    v48 = v18;
    ((void (*)(NSObject *, _BYTE *, NSObject *))v42)(v125, v129, v18);
    v49 = v133;
    sub_1C079381C();
    sub_1C106F538();
    v50 = sub_1C078A338();
    if (sub_1C077F60C(v50))
    {
      v51 = sub_1C0775854();
      v126 = sub_1C0775854();
      v135[0] = (uint64_t)v126;
      *(_DWORD *)v51 = 136315394;
      sub_1C0794BAC((unint64_t *)&qword_1ED7565B0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08F0]);
      LODWORD(v124) = (_DWORD)v18;
      v52 = sub_1C1070C0C();
      v134[0] = sub_1C07892FC(v52, v53);
      sub_1C10705AC();
      sub_1C077960C();
      v54 = v47;
      v55 = v128;
      v128((uint64_t)v54, v18);
      *(_WORD *)(v51 + 12) = 2080;
      v125 = v18;
      v56 = v127;
      v57 = sub_1C07B1CEC();
      v42(v57);
      sub_1C1070C0C();
      v58 = v55(v56, v18);
      v134[0] = sub_1C0795810(v58, v59, v135);
      sub_1C10705AC();
      sub_1C07878F0();
      sub_1C0778580();
      sub_1C077E89C(&dword_1C0771000, v125, (os_log_type_t)v124, "CachedContextProvider: behaviorEventPublisher input dates out of bound (input date %s < start date %s). Not utilizing cache for this query.", (uint8_t *)v51);
      sub_1C079E374();
      sub_1C0776778();
    }
    v101 = v47;
LABEL_33:
    v110 = v128;
    v128((uint64_t)v101, v48);

    sub_1C07878F0();
    v112 = (uint64_t)v131;
    v111 = v132;
    v113 = v130;
    v114 = (uint64_t)v48;
    v115 = v49[6];
    sub_1C07A9480(v49 + 2, v49[5]);
    v116 = v129;
    sub_1C0781568();
    sub_1C07B2D8C(v113, 0, 1, v114);
    sub_1C0775988(v113, v112, v111, *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v115 + 24));
    sub_1C0784B94(v113, (uint64_t *)&unk_1ED762690);
    v110((uint64_t)v116, v114);
    goto LABEL_36;
  }
  v125 = v5;
  v39 = v133;
  sub_1C0775864();
  sub_1C07A7DAC();
  v80 = sub_1C07A9DEC();
  v38 = v32;
  sub_1C07AB718();
  if ((v80 & 1) != 0)
  {
    v128 = v44;
    v45 = v18;
    if (qword_1ED760048 != -1)
      swift_once();
    v81 = sub_1C077585C();
    sub_1C0781988(v81, (uint64_t)qword_1ED78D800);
    v82 = v121;
    v129 = v35;
    v48 = v18;
    sub_1C0781568();
    v49 = v39;
    sub_1C0782D54();
    sub_1C106F538();
    v83 = sub_1C078A338();
    if (sub_1C077F60C(v83))
    {
      v84 = sub_1C0775854();
      v127 = sub_1C0775854();
      v135[0] = v127;
      *(_DWORD *)v84 = 136315394;
      sub_1C0794BAC((unint64_t *)&qword_1ED7565B0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08F0]);
      LODWORD(v126) = (_DWORD)v18;
      v85 = sub_1C07797C0();
      v134[0] = sub_1C07892FC(v85, v86);
      sub_1C07A3044();
      sub_1C077960C();
      v87 = v128;
      v128((uint64_t)v82, v18);
      *(_WORD *)(v84 + 12) = 2080;
      sub_1C07B1CEC();
      sub_1C0781568();
      sub_1C07797C0();
      v88 = v87((uint64_t)v32, v18);
      v134[0] = sub_1C0795810(v88, v89, v135);
      sub_1C07A3044();
      sub_1C07878F0();
      sub_1C0778580();
      sub_1C077E89C(&dword_1C0771000, v18, (os_log_type_t)v126, "CachedContextProvider: behaviorEventPublisher input dates out of bound (input date %s >= end date %s). Not utilizing cache for this query.", (uint8_t *)v84);
      sub_1C079E374();
      sub_1C0776778();
    }
    v101 = v82;
    goto LABEL_33;
  }
  v44((uint64_t)v35, v18);
  v40 = v131;
  v41 = (uint64_t)v18;
  v37 = &OBJC_IVAR____TtCO24IntelligencePlatformCore10ViewUpdate14SignpostHelper_requests;
LABEL_3:
  sub_1C078A924((uint64_t)v40, v12, (uint64_t *)&unk_1ED762690);
  if (sub_1C07B2D80(v12, 1, v41) == 1)
  {
    sub_1C0784B94(v12, (uint64_t *)&unk_1ED762690);
    goto LABEL_29;
  }
  v60 = (uint64_t)v129;
  (*((void (**)(_BYTE *, uint64_t, uint64_t))isa + 4))(v129, v12, v41);
  v61 = (uint64_t)v39 + v37[237];
  sub_1C0775864();
  v62 = (void (*)(uint64_t, uint64_t, uint64_t))*((_QWORD *)isa + 2);
  v63 = (uint64_t)v38;
  v64 = v60;
  v122 = (void (*)(_QWORD, _QWORD, _QWORD))v61;
  v62(v63, v61, v41);
  sub_1C0794BAC((unint64_t *)&qword_1ED755A40, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08B0]);
  v65 = sub_1C07AD0D8();
  v66 = (uint64_t (*)(uint64_t, NSObject *))*((_QWORD *)isa + 1);
  v67 = v63;
  sub_1C078C8C4(v63);
  v131 = v62;
  if ((v65 & 1) != 0)
  {
    v128 = v66;
    if (qword_1ED760048 != -1)
      swift_once();
    v68 = sub_1C077585C();
    sub_1C0781988(v68, (uint64_t)qword_1ED78D800);
    v69 = v124;
    sub_1C07B46C8(v124);
    sub_1C0782D54();
    v70 = sub_1C106F538();
    v71 = sub_1C107039C();
    v72 = v71;
    if (os_log_type_enabled(v70, v71))
    {
      v73 = (uint8_t *)sub_1C0775854();
      v127 = sub_1C0775854();
      v134[0] = v127;
      *(_DWORD *)v73 = 136315394;
      sub_1C0794BAC((unint64_t *)&qword_1ED7565B0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08F0]);
      v126 = v70;
      LODWORD(v123) = v72;
      v74 = sub_1C07AE7DC();
      v137[0] = sub_1C0788DAC(v74, v75, v134);
      sub_1C07A3044();
      sub_1C077960C();
      sub_1C07A51B0(v69);
      v76 = sub_1C07768D0();
      sub_1C078DAE8(v76, (uint64_t)v122);
      v77 = sub_1C07BC694();
      v79 = v78;
      sub_1C078C8C4(v67);
      v137[0] = sub_1C0788DAC(v77, v79, v134);
      sub_1C079C3C4();
      sub_1C07878F0();
      sub_1C077960C();
      sub_1C077E89C(&dword_1C0771000, v126, (os_log_type_t)v123, "CachedContextProvider: behaviorEventPublisher input dates out of bound (input date %s < start date %s). Not utilizing cache for this query.", v73);
      sub_1C079E374();
      sub_1C0776778();
    }
    sub_1C07A51B0(v69);

LABEL_35:
    sub_1C07878F0();
    v117 = v132;
    v118 = v39[6];
    sub_1C07A9480(v39 + 2, v39[5]);
    v119 = v130;
    v40(v130, v64, v41);
    sub_1C07B2D8C(v119, 0, 1, v41);
    sub_1C0775988((uint64_t)v125, v119, v117, *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v118 + 24));
    sub_1C0784B94(v119, (uint64_t *)&unk_1ED762690);
    sub_1C078C8C4(v64);
    goto LABEL_36;
  }
  v90 = (uint64_t)v39 + OBJC_IVAR____TtC24IntelligencePlatformCore21CachedContextProvider_contextCacheEndDate;
  sub_1C0775864();
  v62(v67, v90, v41);
  v91 = sub_1C07AD0D8();
  sub_1C078C8C4(v67);
  if ((v91 & 1) != 0)
  {
    v128 = v66;
    if (qword_1ED760048 != -1)
      swift_once();
    v92 = sub_1C077585C();
    sub_1C0781988(v92, (uint64_t)qword_1ED78D800);
    v93 = v123;
    sub_1C07B46C8(v123);
    sub_1C0782D54();
    sub_1C106F538();
    v94 = sub_1C078A338();
    if (sub_1C077F60C(v94))
    {
      v95 = (uint8_t *)sub_1C0775854();
      v127 = sub_1C0775854();
      v137[0] = v127;
      *(_DWORD *)v95 = 136315394;
      sub_1C0794BAC((unint64_t *)&qword_1ED7565B0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08F0]);
      v126 = v91;
      LODWORD(v124) = v65;
      v96 = sub_1C07AE7DC();
      v136 = sub_1C0788DAC(v96, v97, v137);
      sub_1C07A3044();
      sub_1C077960C();
      sub_1C07A51B0(v93);
      v98 = sub_1C07768D0();
      sub_1C078DAE8(v98, v90);
      sub_1C07BC694();
      v99 = sub_1C078C8C4(v67);
      v136 = sub_1C0795810(v99, v100, v137);
      sub_1C079C3C4();
      sub_1C07878F0();
      sub_1C0778580();
      sub_1C077E89C(&dword_1C0771000, v126, (os_log_type_t)v124, "CachedContextProvider: behaviorEventPublisher input dates out of bound (input date %s >= end date %s). Not utilizing cache for this query.", v95);
      sub_1C077B6EC();
      sub_1C0776778();
    }
    sub_1C07A51B0(v93);

    goto LABEL_35;
  }
  sub_1C078C8C4(v64);
LABEL_29:
  v103 = v127;
  v102 = v128;
  v104 = v126;
  (*(void (**)(NSObject *, _QWORD, uint64_t (*)(uint64_t, NSObject *)))(v127 + 104))(v126, *MEMORY[0x1E0D3C0B0], v128);
  sub_1C0794BAC((unint64_t *)&qword_1ED744A60, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3C130], MEMORY[0x1E0D3C158]);
  v105 = v132;
  sub_1C077B06C();
  sub_1C077B06C();
  v107 = v136;
  v106 = v137[0];
  (*(void (**)(NSObject *, uint64_t (*)(uint64_t, NSObject *)))(v103 + 8))(v104, v102);
  if (v106 == v107)
  {
    sub_1C08AD330();
  }
  else
  {
    v108 = v39[5];
    v109 = v39[6];
    sub_1C07A9480(v39 + 2, v108);
    (*(void (**)(NSObject *, void (*)(uint64_t, uint64_t, uint64_t), uint64_t, uint64_t, uint64_t))(v109 + 24))(v125, v40, v105, v108, v109);
  }
LABEL_36:
  sub_1C0776760();
}

void sub_1C08AF5C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t (*v20)(uint64_t);
  uint64_t v21;
  uint64_t v22;
  void (*v23)(char *, unint64_t, uint64_t);
  void (*v24)(char *, _QWORD, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(char *, unint64_t, uint64_t);
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  char v39;
  id v40;
  id v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD v45[2];
  uint64_t v46;
  unsigned int v47;
  uint64_t v48;
  unsigned int v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;

  sub_1C0779670();
  v45[1] = v2;
  v46 = v1;
  v4 = v3;
  v6 = v5;
  v45[0] = v7;
  v8 = sub_1C0780478();
  v9 = sub_1C0780A78(v8);
  MEMORY[0x1E0C80A78](v9);
  sub_1C077AED0();
  v58 = (char *)v10;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v11);
  sub_1C077C1F0();
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)v45 - v13;
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)v45 - v16;
  v61 = MEMORY[0x1E0DEE9D8];
  if ((v6 & 1) != 0)
    v18 = sub_1C106D6A8();
  else
    v18 = sub_1C106D684();
  v53 = *(_QWORD *)(v18 + 16);
  if (v53)
  {
    v52 = v0;
    v19 = 0;
    v50 = v18 + ((*(unsigned __int8 *)(v54 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v54 + 80));
    v49 = *MEMORY[0x1E0D3C0F0];
    v47 = *MEMORY[0x1E0D3C0A8];
    v20 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D3C130];
    v55 = v4 + 56;
    v48 = v4;
    v51 = v18;
    while (1)
    {
      if (v19 >= *(_QWORD *)(v18 + 16))
      {
        __break(1u);
        return;
      }
      v21 = v54;
      v22 = *(_QWORD *)(v54 + 72);
      v56 = v19;
      v57 = v22;
      v23 = *(void (**)(char *, unint64_t, uint64_t))(v54 + 16);
      sub_1C077EB7C((uint64_t)v17, v50 + v22 * v19);
      v24 = *(void (**)(char *, _QWORD, uint64_t))(v21 + 104);
      v24(v14, v49, v8);
      sub_1C0794BAC((unint64_t *)&qword_1ED744A60, v20, MEMORY[0x1E0D3C158]);
      sub_1C0793824();
      sub_1C0793824();
      v26 = v59;
      v25 = v60;
      sub_1C079DB64((uint64_t)v14);
      v27 = (uint64_t)v14;
      v28 = (uint64_t)v17;
      v29 = v52;
      sub_1C077EB7C(v52, v28);
      if (v25 == v26)
      {
        sub_1C079DB64(v29);
        sub_1C077EB7C((uint64_t)v58, v28);
        v17 = (char *)v28;
        v14 = (char *)v27;
        v20 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D3C130];
      }
      else
      {
        v24((char *)v27, v47, v8);
        sub_1C0793824();
        sub_1C0793824();
        v31 = v59;
        v30 = v60;
        sub_1C079DB64(v27);
        sub_1C079DB64(v29);
        v32 = v23;
        v23(v58, v28, v8);
        v33 = v48;
        v17 = (char *)v28;
        v14 = (char *)v27;
        v20 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D3C130];
        if (v30 != v31)
        {
          if (!*(_QWORD *)(v48 + 16)
            || (sub_1C0794BAC((unint64_t *)&qword_1ED744A48, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3C130], MEMORY[0x1E0D3C148]), v35 = sub_1C106FA00(), v36 = -1 << *(_BYTE *)(v33 + 32), v37 = v35 & ~v36, ((*(_QWORD *)(v55 + ((v37 >> 3) & 0xFFFFFFFFFFFFF8)) >> v37) & 1) == 0))
          {
LABEL_16:
            sub_1C079DB64((uint64_t)v58);
            sub_1C08AE8BC();
            v41 = v40;
            MEMORY[0x1C3BA6800](v41, v42, v43);
            v34 = v56;
            if (*(_QWORD *)((v61 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v61 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
              sub_1C106FF58();
            sub_1C106FFC4();
            sub_1C106FF28();

            v20 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D3C130];
            goto LABEL_19;
          }
          v38 = ~v36;
          while (1)
          {
            v32(v14, *(_QWORD *)(v33 + 48) + v37 * v57, v8);
            sub_1C0794BAC((unint64_t *)&unk_1ED744A50, v20, MEMORY[0x1E0D3C150]);
            v39 = sub_1C106FAA8();
            sub_1C079DB64((uint64_t)v14);
            if ((v39 & 1) != 0)
              break;
            v37 = (v37 + 1) & v38;
            if (((*(_QWORD *)(v55 + ((v37 >> 3) & 0xFFFFFFFFFFFFF8)) >> v37) & 1) == 0)
              goto LABEL_16;
          }
        }
      }
      sub_1C079DB64((uint64_t)v58);
      v34 = v56;
LABEL_19:
      v19 = v34 + 1;
      sub_1C079DB64((uint64_t)v17);
      v18 = v51;
      if (v19 == v53)
      {
        swift_bridgeObjectRelease();
        v44 = v61;
        goto LABEL_22;
      }
    }
  }
  swift_bridgeObjectRelease();
  v44 = MEMORY[0x1E0DEE9D8];
LABEL_22:
  sub_1C086A370(v44);
  swift_bridgeObjectRelease();
  sub_1C0776760();
}

void sub_1C08AF9D4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t);
  uint64_t v18;

  sub_1C07ACF80((uint64_t *)&unk_1ED762690);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v5);
  sub_1C0778564();
  v8 = v7 - v6;
  v9 = sub_1C077AE98();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  sub_1C0778564();
  v13 = v12 - v11;
  sub_1C08AFB58();
  if (*(_QWORD *)(v2 + OBJC_IVAR____TtC24IntelligencePlatformCore21CachedContextProvider_cachedMotionStateEvents))
  {
    sub_1C078A924(a1, v8, (uint64_t *)&unk_1ED762690);
    if (sub_1C07B2D80(v8, 1, v9) == 1)
    {
      v14 = v2 + OBJC_IVAR____TtC24IntelligencePlatformCore21CachedContextProvider_contextCacheStartDate;
      sub_1C0775864();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16))(v13, v14, v9);
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      sub_1C0784B94(v8, (uint64_t *)&unk_1ED762690);
    }
    else
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 32))(v13, v8, v9);
      v15 = _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    }
    MEMORY[0x1E0C80A78](v15);
    *(&v18 - 2) = v13;
    *(&v18 - 1) = a2;
    sub_1C0D2EE38();
    v16 = sub_1C07814F0();
    v17(v16);
  }
  sub_1C077C798();
}

void sub_1C08AFB58()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  void (*v14)(char *, char *, uint64_t);
  char *v15;
  uint64_t v16;
  void (*v17)(char *, uint64_t);
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  _QWORD v22[2];
  uint64_t v23;
  _QWORD *v24;

  v1 = v0;
  v2 = sub_1C106ADE0();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1C07ACF80((uint64_t *)&unk_1ED762690);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = OBJC_IVAR____TtC24IntelligencePlatformCore21CachedContextProvider_cachedMotionStateEvents;
  if (!*(_QWORD *)((char *)v0
                  + OBJC_IVAR____TtC24IntelligencePlatformCore21CachedContextProvider_cachedMotionStateEvents))
  {
    v10 = v0 + 2;
    v11 = v0[5];
    v12 = v0[6];
    v23 = v11;
    v24 = v1 + 2;
    v22[1] = sub_1C07A9480(v10, v11);
    v13 = (char *)v1 + OBJC_IVAR____TtC24IntelligencePlatformCore21CachedContextProvider_contextCacheStartDate;
    swift_beginAccess();
    v14 = *(void (**)(char *, char *, uint64_t))(v3 + 16);
    v14(v8, v13, v2);
    sub_1C07B2D8C((uint64_t)v8, 0, 1, v2);
    v15 = (char *)v1 + OBJC_IVAR____TtC24IntelligencePlatformCore21CachedContextProvider_contextCacheEndDate;
    swift_beginAccess();
    v14(v5, v15, v2);
    v16 = (*(uint64_t (**)(char *, char *, uint64_t, uint64_t, uint64_t, uint64_t))(v12 + 40))(v8, v5, 1, 1000, v23, v12);
    v17 = *(void (**)(char *, uint64_t))(v3 + 8);
    v17(v5, v2);
    sub_1C0784B94((uint64_t)v8, (uint64_t *)&unk_1ED762690);
    *(_QWORD *)((char *)v1 + v9) = v16;
    swift_bridgeObjectRelease();
    v18 = v1[5];
    v19 = v1[6];
    v24 = sub_1C07A9480(v24, v18);
    v14(v5, v13, v2);
    sub_1C106AD2C();
    v17(v5, v2);
    sub_1C07B2D8C((uint64_t)v8, 0, 1, v2);
    v14(v5, v13, v2);
    v20 = (*(uint64_t (**)(char *, char *, uint64_t, uint64_t, uint64_t, uint64_t))(v19 + 40))(v8, v5, 1, 1, v18, v19);
    v17(v5, v2);
    sub_1C0784B94((uint64_t)v8, (uint64_t *)&unk_1ED762690);
    if (v20 >> 62)
    {
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      v21 = sub_1C10709B4();
      swift_bridgeObjectRelease();
      if (v21)
      {
LABEL_4:
        sub_1C0783D0C(0, (v20 & 0xC000000000000001) == 0, v20);
        if ((v20 & 0xC000000000000001) != 0)
        {
          v21 = MEMORY[0x1C3BA70DC](0, v20);
        }
        else
        {
          v21 = *(_QWORD *)(v20 + 32);
          swift_retain();
        }
      }
    }
    else
    {
      v21 = *(_QWORD *)((v20 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (v21)
        goto LABEL_4;
    }
    swift_bridgeObjectRelease();
    *(_QWORD *)((char *)v1
              + OBJC_IVAR____TtC24IntelligencePlatformCore21CachedContextProvider_lastMotionStateEventBeforeStartDate) = v21;
    swift_release();
  }
}

uint64_t sub_1C08AFE3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t (*v8)(uint64_t);
  char v9;
  char v10;
  uint64_t v12;

  v4 = sub_1C106ADE0();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0794BAC((unint64_t *)&qword_1ED755A40, v8, MEMORY[0x1E0CB08B0]);
  v9 = sub_1C106FA6C();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a3, v4);
  if ((v9 & 1) != 0)
    v10 = 0;
  else
    v10 = sub_1C106AD50();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return v10 & 1;
}

uint64_t sub_1C08AFF54(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  char v12;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  NSObject *v19;
  uint64_t (*v20)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v21;
  void (*v22)(char *, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  NSObject *v29;
  os_log_type_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint8_t *v35;
  char *v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  void *v40;
  uint64_t v41;
  uint64_t v42;
  NSObject *v43;
  int v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  _QWORD *v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53[4];

  v3 = sub_1C106D6CC();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v41 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1C106ADE0();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = (char *)v1 + OBJC_IVAR____TtC24IntelligencePlatformCore21CachedContextProvider_cachedBehaviorEventsByType;
  swift_beginAccess();
  if (*(_QWORD *)(*(_QWORD *)v11 + 16))
  {
    sub_1C07DCDE8();
    if ((v12 & 1) != 0)
      return swift_endAccess();
  }
  v46 = v6;
  v47 = v4;
  v45 = v3;
  v50 = v11;
  swift_endAccess();
  v14 = swift_allocObject();
  v49 = v14;
  *(_QWORD *)(v14 + 16) = MEMORY[0x1E0DEE9D8];
  v15 = (_QWORD *)(v14 + 16);
  v17 = v1[5];
  v16 = v1[6];
  sub_1C07A9480(v1 + 2, v17);
  v48 = v1;
  v18 = (char *)v1 + OBJC_IVAR____TtC24IntelligencePlatformCore21CachedContextProvider_contextCacheStartDate;
  swift_beginAccess();
  v19 = *(NSObject **)(v8 + 16);
  ((void (*)(char *, char *, uint64_t))v19)(v10, v18, v7);
  v20 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 16);
  v51 = a1;
  v21 = v20(v10, a1, v17, v16);
  v22 = *(void (**)(char *, uint64_t))(v8 + 8);
  v22(v10, v7);
  if (v21)
  {
    v23 = swift_retain();
    MEMORY[0x1C3BA6800](v23);
    sub_1C078442C(*(_QWORD *)((*v15 & 0xFFFFFFFFFFFFF8) + 0x10));
    sub_1C106FFC4();
    sub_1C106FF28();
    v24 = swift_release();
    v25 = v51;
    v26 = v48;
  }
  else
  {
    v43 = v19;
    if (qword_1ED760048 != -1)
      swift_once();
    v27 = sub_1C106F544();
    sub_1C079E000(v27, (uint64_t)qword_1ED78D800);
    v25 = v51;
    v28 = v45;
    (*(void (**)(char *, uint64_t, uint64_t))(v47 + 16))(v46, v51, v45);
    v26 = v48;
    swift_retain_n();
    v29 = sub_1C106F538();
    v30 = sub_1C1070378();
    v44 = v30;
    if (os_log_type_enabled(v29, v30))
    {
      v31 = swift_slowAlloc();
      v42 = swift_slowAlloc();
      v53[0] = v42;
      *(_DWORD *)v31 = 136315394;
      v41 = v31 + 4;
      ((void (*)(char *, char *, uint64_t))v43)(v10, v18, v7);
      sub_1C0794BAC((unint64_t *)&qword_1ED7565B0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08F0]);
      v43 = v29;
      v32 = sub_1C1070C0C();
      v34 = v33;
      v22(v10, v7);
      v52 = sub_1C0788DAC(v32, v34, v53);
      sub_1C10705AC();
      swift_release_n();
      swift_bridgeObjectRelease();
      v35 = (uint8_t *)v31;
      *(_WORD *)(v31 + 12) = 2080;
      sub_1C0794BAC((unint64_t *)&qword_1ED744A68, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3C130], MEMORY[0x1E0D3C168]);
      v36 = v46;
      v37 = sub_1C1070C0C();
      v52 = sub_1C0788DAC(v37, v38, v53);
      v25 = v51;
      sub_1C10705AC();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v47 + 8))(v36, v28);
      v29 = v43;
      _os_log_impl(&dword_1C0771000, v43, (os_log_type_t)v44, "CachedContextProvider: Unable to find last event before start date %s for behavior type %s", v35, 0x16u);
      v39 = v42;
      swift_arrayDestroy();
      MEMORY[0x1C3BA8270](v39, -1, -1);
      MEMORY[0x1C3BA8270](v35, -1, -1);
    }
    else
    {
      swift_release_n();
      (*(void (**)(char *, uint64_t))(v47 + 8))(v46, v28);
    }

  }
  v40 = (void *)MEMORY[0x1C3BA79F4](v24);
  sub_1C08B0444(v26, v25, v49);
  objc_autoreleasePoolPop(v40);
  swift_beginAccess();
  swift_beginAccess();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C089FB7C();
  swift_endAccess();
  return swift_release();
}

void sub_1C08B0444(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  void (*v14)(char *, char *, uint64_t);
  char *v15;
  void *v16;
  uint64_t v17;
  void *v18;
  void *v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t aBlock;
  uint64_t v25;
  uint64_t (*v26)(uint64_t);
  void *v27;
  void *v28;
  uint64_t v29;

  v23 = a3;
  v22 = a2;
  v4 = sub_1C07ACF80((uint64_t *)&unk_1ED762690);
  v5 = MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v21 - v8;
  v10 = a1[5];
  v11 = a1[6];
  sub_1C07A9480(a1 + 2, v10);
  v12 = (char *)a1 + OBJC_IVAR____TtC24IntelligencePlatformCore21CachedContextProvider_contextCacheStartDate;
  swift_beginAccess();
  v13 = sub_1C106ADE0();
  v14 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16);
  v14(v9, v12, v13);
  sub_1C07B2D8C((uint64_t)v9, 0, 1, v13);
  v15 = (char *)a1 + OBJC_IVAR____TtC24IntelligencePlatformCore21CachedContextProvider_contextCacheEndDate;
  swift_beginAccess();
  v14(v7, v15, v13);
  sub_1C07B2D8C((uint64_t)v7, 0, 1, v13);
  v16 = (void *)(*(uint64_t (**)(char *, char *, uint64_t, uint64_t, uint64_t))(v11 + 24))(v9, v7, v22, v10, v11);
  sub_1C0784B94((uint64_t)v7, (uint64_t *)&unk_1ED762690);
  sub_1C0784B94((uint64_t)v9, (uint64_t *)&unk_1ED762690);
  v28 = sub_1C08B06AC;
  v29 = 0;
  v17 = MEMORY[0x1E0C809B0];
  aBlock = MEMORY[0x1E0C809B0];
  v25 = 1107296256;
  v26 = (uint64_t (*)(uint64_t))sub_1C07BF90C;
  v27 = &unk_1E7A11AE8;
  v18 = _Block_copy(&aBlock);
  v28 = sub_1C0875C5C;
  v29 = v23;
  aBlock = v17;
  v25 = 1107296256;
  v26 = sub_1C082E0C0;
  v27 = &unk_1E7A11B10;
  v19 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  v20 = objc_msgSend(v16, sel_sinkWithCompletion_receiveInput_, v18, v19);
  _Block_release(v19);
  _Block_release(v18);

}

void sub_1C08B06AC(void *a1)
{
  id v1;
  void *v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  id v10;
  uint64_t v11;

  v1 = objc_msgSend(a1, sel_error);
  if (v1)
  {
    v2 = v1;
    if (qword_1ED760048 != -1)
      swift_once();
    v3 = sub_1C106F544();
    sub_1C079E000(v3, (uint64_t)qword_1ED78D800);
    v10 = v2;
    v4 = sub_1C106F538();
    v5 = sub_1C1070390();
    if (os_log_type_enabled(v4, v5))
    {
      v6 = (uint8_t *)swift_slowAlloc();
      v7 = swift_slowAlloc();
      v11 = v7;
      *(_DWORD *)v6 = 136315138;
      swift_getErrorValue();
      v8 = sub_1C1070D74();
      sub_1C0788DAC(v8, v9, &v11);
      sub_1C10705AC();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C0771000, v4, v5, "CachedContextProvider: Biome sink completed with error- %s", v6, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C3BA8270](v7, -1, -1);
      MEMORY[0x1C3BA8270](v6, -1, -1);

    }
    else
    {

    }
  }
}

uint64_t sub_1C08B08A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t (*v8)(uint64_t);
  char v9;
  char v10;
  uint64_t v12;

  v4 = sub_1C106ADE0();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0794BAC((unint64_t *)&qword_1ED755A40, v8, MEMORY[0x1E0CB08B0]);
  v9 = sub_1C106FA6C();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a3, v4);
  if ((v9 & 1) != 0)
    v10 = 0;
  else
    v10 = sub_1C106AD50();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return v10 & 1;
}

uint64_t sub_1C08B09B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t, uint64_t);

  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0(v0 + 16);
  sub_1C0784B94(v0 + OBJC_IVAR____TtC24IntelligencePlatformCore21CachedContextProvider____lazy_storage___calendar, (uint64_t *)&unk_1ED75E9A8);
  v1 = v0 + OBJC_IVAR____TtC24IntelligencePlatformCore21CachedContextProvider_contextCacheStartDate;
  v2 = sub_1C077AE98();
  v3 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8);
  v3(v1, v2);
  v3(v0 + OBJC_IVAR____TtC24IntelligencePlatformCore21CachedContextProvider_contextCacheEndDate, v2);
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1C08B0A70()
{
  sub_1C08B09B0();
  return swift_deallocClassInstance();
}

uint64_t sub_1C08B0A94()
{
  return type metadata accessor for CachedContextProvider();
}

uint64_t type metadata accessor for CachedContextProvider()
{
  uint64_t result;

  result = qword_1ED7576E8;
  if (!qword_1ED7576E8)
    return swift_getSingletonMetadata();
  return result;
}

void sub_1C08B0AD4()
{
  unint64_t v0;
  unint64_t v1;

  sub_1C0875B70();
  if (v0 <= 0x3F)
  {
    sub_1C106ADE0();
    if (v1 <= 0x3F)
      swift_updateClassMetadata2();
  }
}

uint64_t sub_1C08B0B84@<X0>(uint64_t a1@<X8>)
{
  return sub_1C08AE614(a1);
}

void sub_1C08B0BA4()
{
  sub_1C08AE8AC();
}

void sub_1C08B0BC4()
{
  sub_1C08AE8BC();
}

void sub_1C08B0BE4()
{
  sub_1C08AF5C4();
}

void sub_1C08B0C04(uint64_t a1, uint64_t a2)
{
  sub_1C08AF9D4(a1, a2);
}

uint64_t sub_1C08B0C28(uint64_t a1)
{
  uint64_t v1;

  return sub_1C08B08A0(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24)) & 1;
}

uint64_t sub_1C08B0C44()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C08B0C68(uint64_t a1)
{
  uint64_t v1;

  return sub_1C08AFE3C(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24)) & 1;
}

uint64_t sub_1C08B0C8C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v11;
  _QWORD v13[2];
  uint64_t v14;

  v3 = sub_1C106E590();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_QWORD *)(a1 + 16);
  v8 = MEMORY[0x1E0DEE9D8];
  if (v7)
  {
    v13[1] = v1;
    v14 = MEMORY[0x1E0DEE9D8];
    sub_1C09D32B4();
    v8 = v14;
    v9 = (_QWORD *)(a1 + 32);
    do
    {
      sub_1C07A9480(v9, v9[3]);
      sub_1C106EA94();
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v14 = v8;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_1C09D32B4();
        v8 = v14;
      }
      v11 = *(_QWORD *)(v8 + 16);
      if (v11 >= *(_QWORD *)(v8 + 24) >> 1)
      {
        sub_1C09D32B4();
        v8 = v14;
      }
      *(_QWORD *)(v8 + 16) = v11 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(v8+ ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))+ *(_QWORD *)(v4 + 72) * v11, v6, v3);
      v14 = v8;
      v9 += 5;
      --v7;
    }
    while (v7);
  }
  return v8;
}

void sub_1C08B0E10(unint64_t a1)
{
  unint64_t v1;
  unint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  void *v11;
  id v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v2 = v1;
  v15 = sub_1C106ADE0();
  v4 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 >> 62)
    goto LABEL_15;
  v7 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (v7)
  {
    v16 = MEMORY[0x1E0DEE9D8];
    sub_1C09D337C();
    if (v7 < 0)
    {
      __break(1u);
      return;
    }
    v14 = v2;
    v8 = 0;
    v9 = v16;
    v2 = a1 & 0xC000000000000001;
    while (v7 != v8)
    {
      if (v2)
        v10 = (id)MEMORY[0x1C3BA70DC](v8, a1);
      else
        v10 = *(id *)(a1 + 8 * v8 + 32);
      v11 = v10;
      v12 = objc_msgSend(v10, sel_startDate, v14);
      sub_1C106AD98();

      v16 = v9;
      v13 = *(_QWORD *)(v9 + 16);
      if (v13 >= *(_QWORD *)(v9 + 24) >> 1)
      {
        sub_1C09D337C();
        v9 = v16;
      }
      ++v8;
      *(_QWORD *)(v9 + 16) = v13 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(v9+ ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))+ *(_QWORD *)(v4 + 72) * v13, v6, v15);
      if (v7 == v8)
        return;
    }
    __break(1u);
LABEL_15:
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    v7 = sub_1C10709B4();
    swift_bridgeObjectRelease();
  }
}

void sub_1C08B0FDC(unint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  void *v12;
  id v13;
  void *v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  uint64_t v27;

  v3 = v2;
  v26 = a2;
  v5 = sub_1C106ADE0();
  v24 = *(_QWORD *)(v5 - 8);
  v25 = v5;
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 >> 62)
    goto LABEL_14;
  v8 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v8)
  {
    while (1)
    {
      v27 = MEMORY[0x1E0DEE9D8];
      sub_1C09D30E0();
      if (v8 < 0)
        break;
      v9 = 0;
      v10 = v27;
      v21 = v3;
      v22 = a1 & 0xC000000000000001;
      v23 = a1;
      while (v8 != v9)
      {
        if (v22)
          v11 = (id)MEMORY[0x1C3BA70DC](v9, a1);
        else
          v11 = *(id *)(a1 + 8 * v9 + 32);
        v12 = v11;
        v13 = objc_msgSend(v11, sel_startDate, v21);
        sub_1C106AD98();

        v14 = (void *)sub_1C106AD38();
        (*(void (**)(char *, uint64_t))(v24 + 8))(v7, v25);
        v15 = objc_msgSend(v26, sel_stringFromDate_, v14);

        v16 = sub_1C106FB14();
        v18 = v17;

        v27 = v10;
        v19 = *(_QWORD *)(v10 + 16);
        v3 = v19 + 1;
        if (v19 >= *(_QWORD *)(v10 + 24) >> 1)
        {
          sub_1C09D30E0();
          v10 = v27;
        }
        ++v9;
        *(_QWORD *)(v10 + 16) = v3;
        v20 = v10 + 16 * v19;
        *(_QWORD *)(v20 + 32) = v16;
        *(_QWORD *)(v20 + 40) = v18;
        a1 = v23;
        if (v8 == v9)
          goto LABEL_12;
      }
      __break(1u);
LABEL_14:
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      v8 = sub_1C10709B4();
      swift_bridgeObjectRelease();
      if (!v8)
        goto LABEL_12;
    }
    __break(1u);
  }
  else
  {
LABEL_12:

  }
}

uint64_t sub_1C08B1208(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 16);
  result = MEMORY[0x1E0DEE9D8];
  if (v2)
  {
    sub_1C09D30E0();
    __asm { BR              X9 }
  }
  return result;
}

uint64_t sub_1C08B13E4(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t))
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  int64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v25;
  BOOL v26;
  uint64_t v27;
  uint64_t result;
  uint64_t v29;
  int64_t v30;
  uint64_t v31;
  _QWORD v33[5];
  int64_t v34;

  v31 = sub_1C07ACF80(&qword_1EF633308);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v2);
  sub_1C0778564();
  v5 = v4 - v3;
  sub_1C0861BD0(v33);
  v6 = v33[0];
  v34 = v33[3];
  v7 = v33[4];
  v29 = v33[1];
  v30 = (unint64_t)(v33[2] + 64) >> 6;
  sub_1C07767B4();
  v8 = MEMORY[0x1E0DEE9D8];
  if (!v7)
    goto LABEL_3;
LABEL_2:
  v9 = __clz(__rbit64(v7));
  v7 &= v7 - 1;
  v10 = v9 | (v34 << 6);
  while (1)
  {
    v15 = *(_QWORD *)(v6 + 48);
    v16 = sub_1C106E590();
    (*(void (**)(uint64_t, unint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v5, v15 + *(_QWORD *)(*(_QWORD *)(v16 - 8) + 72) * v10, v16);
    v17 = *(_QWORD *)(*(_QWORD *)(v6 + 56) + 8 * v10);
    *(_QWORD *)(v5 + *(int *)(v31 + 48)) = v17;
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    v18 = a2(v5, v17);
    sub_1C0784B6C(v5, &qword_1EF633308);
    v19 = *(_QWORD *)(v18 + 16);
    v20 = *(_QWORD *)(v8 + 16);
    if (__OFADD__(v20, v19))
      break;
    if (!sub_1C0781980() || v20 + v19 > *(_QWORD *)(v8 + 24) >> 1)
    {
      sub_1C07EBCF8();
      v8 = v21;
    }
    if (*(_QWORD *)(v18 + 16))
    {
      v22 = *(_QWORD *)(v8 + 16);
      if ((*(_QWORD *)(v8 + 24) >> 1) - v22 < v19)
        goto LABEL_39;
      v23 = v8 + 16 * v22 + 32;
      if (v18 + 32 < v23 + 16 * v19 && v23 < v18 + 32 + 16 * v19)
        goto LABEL_42;
      sub_1C07ACF80(&qword_1ED758D20);
      sub_1C07814F0();
      swift_arrayInitWithCopy();
      if (v19)
      {
        v25 = *(_QWORD *)(v8 + 16);
        v26 = __OFADD__(v25, v19);
        v27 = v25 + v19;
        if (v26)
          goto LABEL_40;
        *(_QWORD *)(v8 + 16) = v27;
      }
    }
    else if (v19)
    {
      goto LABEL_38;
    }
    sub_1C07767AC();
    if (v7)
      goto LABEL_2;
LABEL_3:
    v11 = v34 + 1;
    if (__OFADD__(v34, 1))
      goto LABEL_41;
    if (v11 >= v30)
      goto LABEL_36;
    v12 = *(_QWORD *)(v29 + 8 * v11);
    v13 = v34 + 1;
    if (!v12)
    {
      v13 = v34 + 2;
      if (v34 + 2 >= v30)
        goto LABEL_36;
      v12 = *(_QWORD *)(v29 + 8 * v13);
      if (!v12)
      {
        v13 = v34 + 3;
        if (v34 + 3 >= v30)
          goto LABEL_36;
        v12 = *(_QWORD *)(v29 + 8 * v13);
        if (!v12)
        {
          v13 = v34 + 4;
          if (v34 + 4 >= v30)
            goto LABEL_36;
          v12 = *(_QWORD *)(v29 + 8 * v13);
          if (!v12)
          {
            v13 = v34 + 5;
            if (v34 + 5 >= v30)
              goto LABEL_36;
            v12 = *(_QWORD *)(v29 + 8 * v13);
            if (!v12)
            {
              v14 = v34 + 6;
              while (v14 < v30)
              {
                v12 = *(_QWORD *)(v29 + 8 * v14++);
                if (v12)
                {
                  v13 = v14 - 1;
                  goto LABEL_18;
                }
              }
LABEL_36:
              swift_release();
              return v8;
            }
          }
        }
      }
    }
LABEL_18:
    v7 = (v12 - 1) & v12;
    v10 = __clz(__rbit64(v12)) + (v13 << 6);
    v34 = v13;
  }
  __break(1u);
LABEL_38:
  __break(1u);
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  result = sub_1C10709F0();
  __break(1u);
  return result;
}

void sub_1C08B1728()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  void (*v30)(uint64_t, uint64_t);
  uint64_t v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  sub_1C0776838();
  v38 = v1;
  v39 = v2;
  v4 = v3;
  v37 = sub_1C106AFE4();
  v35 = *(_QWORD *)(v37 - 8);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v5);
  sub_1C0778564();
  v8 = v7 - v6;
  v36 = sub_1C106A918();
  v34 = *(_QWORD *)(v36 - 8);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v9);
  sub_1C0778564();
  v12 = v11 - v10;
  sub_1C07ACF80((uint64_t *)&unk_1ED762690);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v13);
  sub_1C0778564();
  v16 = v15 - v14;
  v17 = sub_1C077AE98();
  v18 = *(_QWORD *)(v17 - 8);
  MEMORY[0x1E0C80A78](v17);
  sub_1C077AFC8();
  MEMORY[0x1E0C80A78](v19);
  v21 = (char *)&v31 - v20;
  sub_1C08B0E10(v4);
  sub_1C08B1A18(v22, v16);
  sub_1C07767AC();
  if (sub_1C07B2D80(v16, 1, v17) == 1)
  {
    sub_1C0784B6C(v16, (uint64_t *)&unk_1ED762690);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v18 + 32))(v21, v16, v17);
    v23 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB3578]), sel_init);
    sub_1C0B8A340(0x2D4D4D2D59595959, 0xEA00000000004444, v23);
    v32 = v23;
    sub_1C08B0FDC(v4, v32);
    sub_1C0898D28(v24);
    v33 = v25;
    sub_1C106AFC0();
    sub_1C07ACF80(&qword_1ED75D2C0);
    v26 = sub_1C106AFCC();
    v27 = *(_QWORD *)(v26 - 8);
    v28 = (*(unsigned __int8 *)(v27 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80);
    v29 = swift_allocObject();
    *(_OWORD *)(v29 + 16) = xmmword_1C1079220;
    (*(void (**)(unint64_t, _QWORD, uint64_t))(v27 + 104))(v29 + v28, *MEMORY[0x1E0CB1130], v26);
    sub_1C0AA92D0();
    sub_1C106ADA4();
    sub_1C106AF30();
    sub_1C07767AC();
    v30 = *(void (**)(uint64_t, uint64_t))(v18 + 8);
    v30(v0, v17);
    (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v8, v37);
    sub_1C106A8A0();

    (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v12, v36);
    swift_bridgeObjectRelease();
    v30((uint64_t)v21, v17);
  }
}

uint64_t sub_1C08B1A18@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  double v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  void (*v19)(char *, unint64_t, uint64_t, double);
  void (*v20)(char *, char *, uint64_t);
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  void (*v25)(char *, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;

  v4 = sub_1C07ACF80((uint64_t *)&unk_1ED762690);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v30 - v8;
  v10 = sub_1C106ADE0();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x1E0C80A78](v14);
  v17 = (char *)&v30 - v16;
  v18 = *(_QWORD *)(a1 + 16);
  if (!v18)
  {
    sub_1C07B2D8C((uint64_t)v9, 1, 1, v10);
    goto LABEL_13;
  }
  v32 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v19 = *(void (**)(char *, unint64_t, uint64_t, double))(v11 + 16);
  v19(v9, a1 + v32, v10, v15);
  sub_1C07B2D8C((uint64_t)v9, 0, 1, v10);
  if (sub_1C07B2D80((uint64_t)v9, 1, v10) == 1)
  {
LABEL_13:
    sub_1C0784B6C((uint64_t)v9, (uint64_t *)&unk_1ED762690);
    v27 = a2;
    v28 = 1;
    return sub_1C07B2D8C(v27, v28, 1, v10);
  }
  v31 = a2;
  v20 = *(void (**)(char *, char *, uint64_t))(v11 + 32);
  v20(v17, v9, v10);
  v33 = a1;
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  v21 = v18 - 1;
  if (v18 == 1)
  {
LABEL_10:
    sub_1C07B2D8C((uint64_t)v6, 1, 1, v10);
  }
  else
  {
    v22 = *(_QWORD *)(v11 + 72);
    v23 = v33 + v22 + v32;
    while (1)
    {
      ((void (*)(char *, unint64_t, uint64_t))v19)(v6, v23, v10);
      sub_1C07B2D8C((uint64_t)v6, 0, 1, v10);
      if (sub_1C07B2D80((uint64_t)v6, 1, v10) == 1)
        break;
      v20(v13, v6, v10);
      sub_1C0794BAC((unint64_t *)&qword_1ED755A40, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08B0]);
      v24 = sub_1C106FA6C();
      v25 = *(void (**)(char *, uint64_t))(v11 + 8);
      if ((v24 & 1) != 0)
      {
        v25(v17, v10);
        v20(v17, v13, v10);
      }
      else
      {
        v25(v13, v10);
      }
      v23 += v22;
      if (!--v21)
        goto LABEL_10;
    }
  }
  swift_bridgeObjectRelease();
  sub_1C0784B6C((uint64_t)v6, (uint64_t *)&unk_1ED762690);
  v26 = v31;
  v20((char *)v31, v17, v10);
  v27 = v26;
  v28 = 0;
  return sub_1C07B2D8C(v27, v28, 1, v10);
}

void sub_1C08B1CDC()
{
  uint64_t v0;

  sub_1C0AA9064();
  qword_1EF6D0D08 = v0;
}

uint64_t sub_1C08B1D00()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD v6[8];

  v1 = v0[2];
  v2 = v0[3];
  v3 = v0[5];
  v4 = v0[6];
  v6[2] = v0[4];
  v6[3] = v3;
  v6[4] = v4;
  v6[5] = v1;
  v6[6] = v2;
  sub_1C07767B4();
  swift_bridgeObjectRetain_n();
  sub_1C078157C();
  swift_retain_n();
  sub_1C077FF50((uint64_t)sub_1C08B5414, (uint64_t)v6);
  sub_1C07767AC();
  sub_1C078157C();
  swift_release_n();
  return swift_bridgeObjectRelease_n();
}

uint64_t sub_1C08B1D84()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = OBJC_IVAR____TtC24IntelligencePlatformCore25CallInteractionSignalView____lazy_storage___featureNames;
  if (*(_QWORD *)(v0
                 + OBJC_IVAR____TtC24IntelligencePlatformCore25CallInteractionSignalView____lazy_storage___featureNames))
  {
    v2 = *(_QWORD *)(v0
                   + OBJC_IVAR____TtC24IntelligencePlatformCore25CallInteractionSignalView____lazy_storage___featureNames);
  }
  else
  {
    v3 = sub_1C08B1208((uint64_t)&unk_1E7A027A0);
    sub_1C07767AC();
    sub_1C0898D28(v3);
    v2 = v4;
    *(_QWORD *)(v0 + v1) = v4;
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    swift_bridgeObjectRelease();
  }
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  return v2;
}

void sub_1C08B1E10()
{
  unint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  void *v12;
  uint64_t v13;
  id v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  void (*v23)(char *, uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;

  sub_1C0776838();
  v1 = v0;
  v2 = sub_1C077AE98();
  v26 = *(_QWORD *)(v2 - 8);
  v27 = v2;
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v25 - v7;
  v29 = MEMORY[0x1E0DEE9D8];
  if (v1 >> 62)
  {
    sub_1C07767B4();
    v9 = sub_1C077AF50();
    if (v9)
      goto LABEL_3;
LABEL_23:
    sub_1C07767AC();
    v24 = MEMORY[0x1E0DEE9D8];
    if ((MEMORY[0x1E0DEE9D8] & 0x8000000000000000) != 0)
      goto LABEL_26;
    goto LABEL_24;
  }
  v9 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
  sub_1C07767B4();
  if (!v9)
    goto LABEL_23;
LABEL_3:
  if (v9 < 1)
  {
    __break(1u);
    return;
  }
  v10 = 0;
  v28 = v1 + 32;
  do
  {
    if ((v1 & 0xC000000000000001) != 0)
      v11 = (id)MEMORY[0x1C3BA70DC](v10, v1);
    else
      v11 = *(id *)(v28 + 8 * v10);
    v12 = v11;
    if (qword_1EF62DAD0 != -1)
      swift_once();
    v13 = qword_1EF6D0D08;
    v14 = objc_msgSend(v12, sel_mechanism);
    if (*(_QWORD *)(v13 + 16))
    {
      v15 = v14;
      sub_1C1070DF8();
      sub_1C1070E04();
      v16 = sub_1C1070E4C();
      v17 = -1 << *(_BYTE *)(v13 + 32);
      v18 = v16 & ~v17;
      if (((*(_QWORD *)(v13 + 56 + ((v18 >> 3) & 0xFFFFFFFFFFFFF8)) >> v18) & 1) != 0)
      {
        v19 = *(_QWORD *)(v13 + 48);
        if (*(id *)(v19 + 8 * v18) == v15)
        {
LABEL_16:
          v21 = objc_msgSend(v12, sel_startDate);
          sub_1C106AD98();

          sub_1C106AD68();
          sub_1C07814F0();
          LOBYTE(v21) = sub_1C106AD50();
          v22 = v27;
          v23 = *(void (**)(char *, uint64_t))(v26 + 8);
          v23(v5, v27);
          v23(v8, v22);
          if ((v21 & 1) != 0)
          {
            sub_1C1070810();
            sub_1C077C200();
            sub_1C107084C();
            sub_1C107081C();
            goto LABEL_19;
          }
        }
        else
        {
          v20 = ~v17;
          while (1)
          {
            v18 = (v18 + 1) & v20;
            if (((*(_QWORD *)(v13 + 56 + ((v18 >> 3) & 0xFFFFFFFFFFFFF8)) >> v18) & 1) == 0)
              break;
            if (*(id *)(v19 + 8 * v18) == v15)
              goto LABEL_16;
          }
        }
      }
    }

LABEL_19:
    ++v10;
  }
  while (v10 != v9);
  sub_1C07767AC();
  v24 = v29;
  if (v29 < 0)
  {
LABEL_26:
    sub_1C07767B4();
    sub_1C10709B4();
    swift_release();
    goto LABEL_25;
  }
LABEL_24:
  if ((v24 & 0x4000000000000000) != 0)
    goto LABEL_26;
LABEL_25:
  swift_release();
  sub_1C078D424();
}

id sub_1C08B20C0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  uint64_t v6;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  _BOOL8 v25;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  int v30;
  uint64_t v31;

  v30 = a6;
  v27 = a4;
  v28 = a5;
  v29 = a3;
  v9 = sub_1C106AF00();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  sub_1C0778564();
  v13 = v12 - v11;
  v31 = sub_1C106AFE4();
  v14 = *(_QWORD *)(v31 - 8);
  MEMORY[0x1E0C80A78](v31);
  sub_1C0778564();
  v17 = v16 - v15;
  v18 = *(_QWORD *)(v6 + OBJC_IVAR____TtC24IntelligencePlatformCore25CallInteractionSignalView_config);
  v19 = *(_QWORD *)(v6 + OBJC_IVAR____TtC24IntelligencePlatformCore25CallInteractionSignalView_config + 8);
  v20 = objc_allocWithZone(MEMORY[0x1E0D3DFA8]);
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C0778624();
  v21 = sub_1C08B5430(v18, v19, 0x747269426C6C6163, 0xEC00000079616468, a1, a2);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v10 + 104))(v13, *MEMORY[0x1E0CB0EF8], v9);
  sub_1C106AF0C();
  v22 = (*(uint64_t (**)(uint64_t, uint64_t))(v10 + 8))(v13, v9);
  v25 = 0;
  if ((v30 & 1) == 0)
  {
    MEMORY[0x1E0C80A78](v22);
    v23 = v27;
    *(&v27 - 4) = v17;
    *(&v27 - 3) = v23;
    v24 = v29;
    *(&v27 - 2) = v28;
    if ((sub_1C08B27EC((uint64_t (*)(id *))sub_1C08B5540, (uint64_t)(&v27 - 6), v24) & 1) != 0)
      v25 = 1;
  }
  objc_msgSend((id)objc_opt_self(), sel_featureValueWithInt64_, v25);
  (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v17, v31);
  return v21;
}

BOOL sub_1C08B22AC(id *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  void (*v19)(unint64_t, _QWORD, uint64_t);
  id v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  char v28;
  void (*v29)(char *, uint64_t);
  void (*v32)(char *, uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  v34 = a4;
  v35 = a3;
  v39 = a2;
  v40 = sub_1C106ADE0();
  v38 = *(_QWORD *)(v40 - 8);
  MEMORY[0x1E0C80A78](v40);
  v6 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1C106A918();
  v36 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v33 - v11;
  v37 = *a1;
  sub_1C07ACF80(&qword_1ED75D2C0);
  v13 = sub_1C106AFCC();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(_QWORD *)(v14 + 72);
  v16 = (*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  v17 = swift_allocObject();
  *(_OWORD *)(v17 + 16) = xmmword_1C1078FC0;
  v18 = v17 + v16;
  v19 = *(void (**)(unint64_t, _QWORD, uint64_t))(v14 + 104);
  v19(v18, *MEMORY[0x1E0CB1160], v13);
  v19(v18 + v15, *MEMORY[0x1E0CB1130], v13);
  sub_1C0AA92D0();
  v20 = objc_msgSend(v37, sel_startDate);
  sub_1C106AD98();

  sub_1C106AF3C();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v38 + 8))(v6, v40);
  v21 = sub_1C106A8D0();
  if ((v22 & 1) != 0)
  {
    v25 = v36;
    (*(void (**)(char *, char *, uint64_t))(v36 + 16))(v9, v12, v7);
    goto LABEL_10;
  }
  v23 = v21;
  v24 = v34;
  v25 = v36;
  (*(void (**)(char *, char *, uint64_t))(v36 + 16))(v9, v12, v7);
  if (v23 != v35)
  {
LABEL_10:
    v32 = *(void (**)(char *, uint64_t))(v25 + 8);
    v32(v9, v7);
    v32(v12, v7);
    return 0;
  }
  v26 = sub_1C106A8A0();
  v28 = v27;
  v29 = *(void (**)(char *, uint64_t))(v25 + 8);
  v29(v9, v7);
  v29(v12, v7);
  return (v28 & 1) == 0 && v26 == v24;
}

uint64_t sub_1C08B253C(uint64_t (*a1)(char *), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  char v5;
  char v6;
  char v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  uint64_t v12;
  _OWORD v13[3];
  uint64_t v14;

  sub_1C090A418(a3, v13);
  v9 = v13[0];
  v10 = v13[1];
  v11 = v13[2];
  v12 = v14;
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  swift_retain();
  while (1)
  {
    sub_1C090AC58();
    if (v5 == 2)
      break;
    v8 = v5 & 1;
    v6 = a1(&v8);
    if (v3 || (v6 & 1) != 0)
    {
      sub_1C0827370();
      sub_1C07767F4();
      return 1;
    }
  }
  sub_1C0827370();
  sub_1C07767F4();
  return 0;
}

void sub_1C08B2630(uint64_t (*a1)(_QWORD *), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  unint64_t v11;
  unint64_t v12;
  BOOL v13;
  unint64_t v14;
  int64_t v15;
  char v16;
  _QWORD *v17;
  uint64_t v18;
  char v19;
  char v20;
  _QWORD v21[2];
  int64_t v22;

  v6 = a3 + 56;
  v7 = 1 << *(_BYTE *)(a3 + 32);
  v8 = -1;
  if (v7 < 64)
    v8 = ~(-1 << v7);
  v9 = v8 & *(_QWORD *)(a3 + 56);
  v22 = (unint64_t)(v7 + 63) >> 6;
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  v10 = 0;
  while (1)
  {
    if (v9)
    {
      v11 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v12 = v11 | (v10 << 6);
      goto LABEL_23;
    }
    v13 = __OFADD__(v10++, 1);
    if (v13)
    {
      __break(1u);
      goto LABEL_33;
    }
    if (v10 >= v22)
      goto LABEL_25;
    v14 = *(_QWORD *)(v6 + 8 * v10);
    if (!v14)
      break;
LABEL_22:
    v9 = (v14 - 1) & v14;
    v12 = __clz(__rbit64(v14)) + (v10 << 6);
LABEL_23:
    v17 = (_QWORD *)(*(_QWORD *)(a3 + 48) + 16 * v12);
    v18 = v17[1];
    v21[0] = *v17;
    v21[1] = v18;
    sub_1C0778624();
    v19 = a1(v21);
    if (v3)
    {
      sub_1C07767F4();
      sub_1C0775834();
      return;
    }
    v20 = v19;
    sub_1C0775834();
    if ((v20 & 1) != 0)
    {
LABEL_25:
      sub_1C07767F4();
      return;
    }
  }
  sub_1C079CC18();
  if (v16 == v13)
    goto LABEL_25;
  v14 = *(_QWORD *)(v6 + 8 * v15);
  if (v14)
    goto LABEL_21;
  sub_1C079CC18();
  if (v16 == v13)
    goto LABEL_25;
  v14 = *(_QWORD *)(v6 + 8 * v15);
  if (v14)
    goto LABEL_21;
  sub_1C079CC18();
  if (v16 == v13)
    goto LABEL_25;
  v14 = *(_QWORD *)(v6 + 8 * v15);
  if (v14)
    goto LABEL_21;
  sub_1C079CC18();
  if (v16 == v13)
    goto LABEL_25;
  v14 = *(_QWORD *)(v6 + 8 * v15);
  if (v14)
  {
LABEL_21:
    v10 = v15;
    goto LABEL_22;
  }
  while (1)
  {
    v10 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v10 >= v22)
      goto LABEL_25;
    v14 = *(_QWORD *)(v6 + 8 * v10);
    ++v15;
    if (v14)
      goto LABEL_22;
  }
LABEL_33:
  __break(1u);
}

uint64_t sub_1C08B27EC(uint64_t (*a1)(id *), uint64_t a2, unint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  id v7;
  void *v8;
  uint64_t v9;
  char v10;
  char v11;
  char v12;
  id v15;

  if (a3 >> 62)
    goto LABEL_16;
  v5 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  for (; v5; v5 = sub_1C10709B4())
  {
    v6 = 4;
    while (1)
    {
      v7 = (a3 & 0xC000000000000001) != 0 ? (id)MEMORY[0x1C3BA70DC](v6 - 4, a3) : *(id *)(a3 + 8 * v6);
      v8 = v7;
      v9 = v6 - 3;
      if (__OFADD__(v6 - 4, 1))
        break;
      v15 = v7;
      v10 = a1(&v15);
      if (v3)
      {
        swift_bridgeObjectRelease();

        return v12 & 1;
      }
      v11 = v10;

      if ((v11 & 1) != 0)
      {
        swift_bridgeObjectRelease();
        v12 = 1;
        return v12 & 1;
      }
      ++v6;
      if (v9 == v5)
        goto LABEL_11;
    }
    __break(1u);
LABEL_16:
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  }
LABEL_11:
  swift_bridgeObjectRelease();
  v12 = 0;
  return v12 & 1;
}

uint64_t sub_1C08B291C(uint64_t (*a1)(_QWORD *))
{
  uint64_t v1;
  uint64_t v3;
  int64_t v4;
  unint64_t v5;
  int64_t v6;
  uint64_t result;
  unint64_t v8;
  unint64_t v9;
  int64_t v10;
  unint64_t v11;
  int64_t v12;
  _QWORD *v13;
  uint64_t v14;
  char v15;
  char v16;
  int64_t v17;
  char v18;
  _QWORD v19[2];
  _QWORD v20[5];
  uint64_t v21;

  sub_1C0861BD0(v20);
  v3 = v20[0];
  v21 = v20[1];
  v4 = v20[3];
  v5 = v20[4];
  v6 = (unint64_t)(v20[2] + 64) >> 6;
  result = sub_1C0778624();
  while (1)
  {
    if (v5)
    {
      v8 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      v9 = v8 | (v4 << 6);
      goto LABEL_15;
    }
    v10 = v4 + 1;
    if (__OFADD__(v4, 1))
      break;
    if (v10 >= v6)
      goto LABEL_25;
    v11 = *(_QWORD *)(v21 + 8 * v10);
    if (!v11)
    {
      v12 = v4 + 2;
      if (v4 + 2 >= v6)
        goto LABEL_25;
      v11 = *(_QWORD *)(v21 + 8 * v12);
      if (v11)
        goto LABEL_13;
      v12 = v4 + 3;
      if (v4 + 3 >= v6)
        goto LABEL_25;
      v11 = *(_QWORD *)(v21 + 8 * v12);
      if (v11)
        goto LABEL_13;
      v12 = v4 + 4;
      if (v4 + 4 >= v6)
        goto LABEL_25;
      v11 = *(_QWORD *)(v21 + 8 * v12);
      if (v11)
      {
LABEL_13:
        v10 = v12;
      }
      else
      {
        v10 = v4 + 5;
        if (v4 + 5 >= v6)
          goto LABEL_25;
        v11 = *(_QWORD *)(v21 + 8 * v10);
        if (!v11)
        {
          v17 = v4 + 6;
          while (v17 < v6)
          {
            v11 = *(_QWORD *)(v21 + 8 * v17++);
            if (v11)
            {
              v10 = v17 - 1;
              goto LABEL_14;
            }
          }
LABEL_25:
          sub_1C07767F4();
          v18 = 0;
          return v18 & 1;
        }
      }
    }
LABEL_14:
    v5 = (v11 - 1) & v11;
    v9 = __clz(__rbit64(v11)) + (v10 << 6);
    v4 = v10;
LABEL_15:
    v13 = (_QWORD *)(*(_QWORD *)(v3 + 48) + 16 * v9);
    v14 = v13[1];
    v19[0] = *v13;
    v19[1] = v14;
    sub_1C0778624();
    v15 = a1(v19);
    if (v1)
    {
      sub_1C07767F4();
      sub_1C0775834();
      return v18 & 1;
    }
    v16 = v15;
    result = sub_1C0775834();
    if ((v16 & 1) != 0)
    {
      sub_1C07767F4();
      v18 = 1;
      return v18 & 1;
    }
  }
  __break(1u);
  return result;
}

void sub_1C08B2AD0()
{
  uint64_t v0;
  void *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t i;
  id v12;
  id v13;
  double v14;
  double v15;
  void (*v16)(void *, uint64_t);
  id v17;
  double v18;
  double v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  double v23;
  double v24;
  double v25;
  char v26;
  char v27;
  double v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;

  sub_1C0776838();
  v4 = v3;
  v5 = sub_1C077AE98();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  sub_1C077AFC8();
  MEMORY[0x1E0C80A78](v7);
  sub_1C07B7A8C();
  if (v8)
  {
    sub_1C0778624();
    v9 = sub_1C077AF50();
    sub_1C0775834();
  }
  else
  {
    v9 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v39 = v0;
  if (v9)
  {
    v40 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    v10 = &v40;
    sub_1C078DF2C();
    if (v9 < 0)
    {
      __break(1u);
      return;
    }
    for (i = 0; i != v9; ++i)
    {
      if ((v4 & 0xC000000000000001) != 0)
        sub_1C0789E18();
      v12 = sub_1C0782B58(v4 + 8 * i);
      v13 = objc_msgSend(v12, sel_endDate);
      sub_1C07AB724();

      sub_1C106AC60();
      v15 = v14;
      v16 = *(void (**)(void *, uint64_t))(v6 + 8);
      v16(v2, v5);
      v17 = objc_msgSend(v12, sel_startDate);
      sub_1C07AEE50();

      sub_1C106AC60();
      v19 = v18;
      v16(v1, v5);

      v10 = v40;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1C079B4C8();
        v10 = v40;
      }
      v20 = v10[2];
      v21 = v20 + 1;
      if (v20 >= v10[3] >> 1)
      {
        sub_1C079B4C8();
        v10 = v40;
      }
      v10[2] = v21;
      *(double *)&v10[v20 + 4] = v15 - v19;
    }
  }
  else
  {
    v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    v21 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
    if (!v21)
    {
      v23 = 0.0;
      goto LABEL_17;
    }
  }
  v22 = 0;
  v23 = 0.0;
  do
  {
    v24 = *(double *)&v10[v22++ + 4];
    v23 = v23 + v24;
  }
  while (v21 != v22);
LABEL_17:
  v25 = COERCE_DOUBLE(sub_1C085D2D4((uint64_t)v10));
  v27 = v26;
  swift_bridgeObjectRelease();
  if ((v27 & 1) != 0)
    v28 = 0.0;
  else
    v28 = v25;
  sub_1C07ACF80(&qword_1ED758EC0);
  v29 = swift_allocObject();
  *(_OWORD *)(v29 + 16) = xmmword_1C1078A20;
  v30 = *(_QWORD *)(v39 + OBJC_IVAR____TtC24IntelligencePlatformCore25CallInteractionSignalView_config);
  v31 = *(_QWORD *)(v39 + OBJC_IVAR____TtC24IntelligencePlatformCore25CallInteractionSignalView_config + 8);
  sub_1C0792DC8();
  sub_1C0787AB8();
  sub_1C077584C();
  v32 = sub_1C0797CB4();
  *(_QWORD *)(v29 + 32) = sub_1C07A1C1C(v32, v33, v34, 0xEC0000007275446CLL);
  v35 = (void *)objc_opt_self();
  *(_QWORD *)(v29 + 40) = objc_msgSend(v35, sel_featureValueWithDouble_, v23);
  sub_1C0792DC8();
  sub_1C0787AB8();
  sub_1C077584C();
  v36 = sub_1C0797CB4();
  *(_QWORD *)(v29 + 48) = sub_1C07A1C1C(v36, v37, v38, 0xE90000000000006CLL);
  *(_QWORD *)(v29 + 56) = objc_msgSend(v35, sel_featureValueWithInt64_, v9);
  sub_1C0792DC8();
  sub_1C0787AB8();
  sub_1C077584C();
  *(_QWORD *)(v29 + 64) = sub_1C07A1C1C(v30, v31, 0x4478614D6C6C6163, 0xEA00000000007275);
  *(_QWORD *)(v29 + 72) = objc_msgSend(v35, sel_featureValueWithDouble_, v28);
  sub_1C078D424();
}

void sub_1C08B2E28(double a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t *v5;
  void *v6;
  uint64_t v7;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  id v18;
  id v19;
  double v20;
  double v21;
  void (*v22)(void *, uint64_t);
  id v23;
  double v24;
  double v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  double v30;
  double v31;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t i;
  id v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  double v45;
  double v46;
  void *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;

  v7 = v4;
  v10 = sub_1C077AE98();
  v50 = *(_QWORD *)(v10 - 8);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v11);
  sub_1C077AFC8();
  MEMORY[0x1E0C80A78](v12);
  sub_1C07B7A8C();
  v49 = v13;
  if (v13)
  {
    sub_1C0778624();
    v14 = sub_1C077AF50();
    sub_1C0775834();
  }
  else
  {
    v14 = *(_QWORD *)((a4 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v15 = MEMORY[0x1E0DEE9D8];
  v48 = v7;
  v51 = v14;
  if (v14)
  {
    v52 = MEMORY[0x1E0DEE9D8];
    v16 = &v52;
    sub_1C078DF2C();
    if (v14 < 0)
    {
      __break(1u);
      goto LABEL_46;
    }
    v17 = 0;
    do
    {
      if ((a4 & 0xC000000000000001) != 0)
        sub_1C0789E18();
      v18 = sub_1C0782B58(a4 + 8 * v17);
      v19 = objc_msgSend(v18, sel_endDate);
      sub_1C07AB724();

      sub_1C106AC60();
      v21 = v20;
      v22 = *(void (**)(void *, uint64_t))(v50 + 8);
      v22(v6, v10);
      v23 = objc_msgSend(v18, sel_startDate);
      sub_1C07AEE50();

      v16 = v5;
      sub_1C106AC60();
      v25 = v24;
      v22(v5, v10);

      v26 = v52;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        v16 = &v52;
        sub_1C079B4C8();
        v26 = v52;
      }
      v27 = *(_QWORD *)(v26 + 16);
      v28 = v27 + 1;
      if (v27 >= *(_QWORD *)(v26 + 24) >> 1)
      {
        v16 = &v52;
        sub_1C079B4C8();
        v26 = v52;
      }
      ++v17;
      *(_QWORD *)(v26 + 16) = v28;
      *(double *)(v26 + 8 * v27 + 32) = v21 - v25;
    }
    while (v51 != v17);
  }
  else
  {
    v28 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
    v26 = MEMORY[0x1E0DEE9D8];
    if (!v28)
      goto LABEL_23;
  }
  v29 = 0;
  v30 = a1 + a1;
  v15 = MEMORY[0x1E0DEE9D8];
  do
  {
    v31 = *(double *)(v26 + 8 * v29 + 32);
    if (v30 < v31)
    {
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v52 = v15;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_1C079B4C8();
        v15 = v52;
      }
      v33 = *(_QWORD *)(v15 + 16);
      if (v33 >= *(_QWORD *)(v15 + 24) >> 1)
      {
        sub_1C079B4C8();
        v15 = v52;
      }
      *(_QWORD *)(v15 + 16) = v33 + 1;
      *(double *)(v15 + 8 * v33 + 32) = v31;
    }
    ++v29;
  }
  while (v28 != v29);
LABEL_23:
  swift_bridgeObjectRelease();
  v34 = *(_QWORD *)(v15 + 16);
  sub_1C07785A8();
  v52 = MEMORY[0x1E0DEE9D8];
  if (v49)
  {
    sub_1C0778624();
    v35 = sub_1C077AF50();
    if (v35)
    {
LABEL_25:
      if (v35 >= 1)
      {
        for (i = 0; i != v35; ++i)
        {
          if ((a4 & 0xC000000000000001) != 0)
            v37 = (id)MEMORY[0x1C3BA70DC](i, a4);
          else
            v37 = sub_1C0782B58(a4 + 8 * i);
          v38 = v37;
          if (objc_msgSend(v37, sel_direction) == (id)1)
          {
            sub_1C1070810();
            sub_1C077C200();
            sub_1C107084C();
            sub_1C107081C();
          }
          else
          {

          }
        }
        sub_1C0775834();
        v39 = v52;
        if (v52 < 0)
          goto LABEL_44;
        goto LABEL_38;
      }
LABEL_46:
      __break(1u);
      return;
    }
  }
  else
  {
    v35 = *(_QWORD *)((a4 & 0xFFFFFFFFFFFFF8) + 0x10);
    sub_1C0778624();
    if (v35)
      goto LABEL_25;
  }
  sub_1C0775834();
  v39 = MEMORY[0x1E0DEE9D8];
  if ((MEMORY[0x1E0DEE9D8] & 0x8000000000000000) != 0)
  {
LABEL_44:
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    v40 = sub_1C10709B4();
    sub_1C07785A8();
    goto LABEL_40;
  }
LABEL_38:
  if ((v39 & 0x4000000000000000) != 0)
    goto LABEL_44;
  v40 = *(_QWORD *)(v39 + 16);
LABEL_40:
  sub_1C07785A8();
  sub_1C07ACF80(&qword_1ED758EC0);
  v41 = swift_allocObject();
  *(_OWORD *)(v41 + 16) = xmmword_1C1078FC0;
  v42 = *(_QWORD *)(v48 + OBJC_IVAR____TtC24IntelligencePlatformCore25CallInteractionSignalView_config);
  v43 = *(_QWORD *)(v48 + OBJC_IVAR____TtC24IntelligencePlatformCore25CallInteractionSignalView_config + 8);
  sub_1C0792DC8();
  sub_1C0778624();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  *(_QWORD *)(v41 + 32) = sub_1C07B95D0(v42, v43, 0xD000000000000011, 0x80000001C10E75E0);
  v44 = v51;
  if (v51 <= 1)
    v44 = 1;
  v45 = (double)v44;
  v46 = (double)v40 / (double)v44;
  v47 = (void *)objc_opt_self();
  *(_QWORD *)(v41 + 40) = objc_msgSend(v47, sel_featureValueWithDouble_, v46);
  sub_1C0792DC8();
  sub_1C0778624();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  *(_QWORD *)(v41 + 48) = sub_1C07B95D0(v42, v43, 0x676E6F4C6C6C6163, 0xED00006F69746152);
  *(_QWORD *)(v41 + 56) = objc_msgSend(v47, sel_featureValueWithDouble_, (double)v34 / v45);
}

uint64_t sub_1C08B3310(uint64_t a1, uint64_t a2, double a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  uint64_t v7;
  uint64_t inited;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  id v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  id v36;

  sub_1C07ACF80((uint64_t *)&unk_1EF64D7C0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C1078A20;
  strcpy((char *)(inited + 32), "callTwoWeeks");
  *(_BYTE *)(inited + 45) = 0;
  *(_WORD *)(inited + 46) = -5120;
  *(_QWORD *)(inited + 48) = 0x4132750000000000;
  strcpy((char *)(inited + 56), "callSixWeeks");
  *(_BYTE *)(inited + 69) = 0;
  *(_WORD *)(inited + 70) = -5120;
  *(_QWORD *)(inited + 72) = 0x414BAF8000000000;
  *(_QWORD *)(inited + 80) = 0x6C6577546C6C6163;
  *(_QWORD *)(inited + 88) = 0xEF736B6565576576;
  *(_QWORD *)(inited + 96) = 0x415BAF8000000000;
  v36 = (id)objc_opt_self();
  v11 = 0;
  v12 = *(_QWORD *)(v7 + OBJC_IVAR____TtC24IntelligencePlatformCore25CallInteractionSignalView_config);
  v13 = *(_QWORD *)(v7 + OBJC_IVAR____TtC24IntelligencePlatformCore25CallInteractionSignalView_config + 8);
  v14 = MEMORY[0x1E0DEE9D8];
  do
  {
    v15 = *(_QWORD *)(inited + v11 + 32);
    v16 = *(_QWORD *)(inited + v11 + 40);
    objc_allocWithZone(MEMORY[0x1E0D3DFA8]);
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    sub_1C077584C();
    v17 = sub_1C08B5430(v12, v13, v15, v16, a1, a2);
    sub_1C08B1E10();
    v19 = objc_msgSend(v36, sel_featureValueWithInt64_, v18);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_1C07A9DF4();
      v14 = v22;
    }
    v20 = *(_QWORD *)(v14 + 16);
    if (v20 >= *(_QWORD *)(v14 + 24) >> 1)
    {
      sub_1C07A9DF4();
      v14 = v23;
    }
    *(_QWORD *)(v14 + 16) = v20 + 1;
    v21 = v14 + 16 * v20;
    *(_QWORD *)(v21 + 32) = v17;
    *(_QWORD *)(v21 + 40) = v19;
    v11 += 24;
  }
  while (v11 != 72);
  swift_setDeallocating();
  sub_1C0BE8EB8();
  sub_1C07A5C74();
  sub_1C08B2AD0();
  sub_1C0BDA308();
  sub_1C07ACF80(&qword_1ED758EC0);
  v24 = swift_initStackObject();
  *(_OWORD *)(v24 + 16) = xmmword_1C1079220;
  v25 = sub_1C07A5C74();
  *(_QWORD *)(v24 + 32) = sub_1C08B20C0(v25, v26, v27, a5, a6, a7 & 1);
  *(_QWORD *)(v24 + 40) = v28;
  sub_1C0BDA308();
  v29 = sub_1C07A5C74();
  sub_1C08B2E28(a3, v29, v30, v31);
  sub_1C0BDA308();
  return v14;
}

uint64_t sub_1C08B35B8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t *v66;
  void (*v67)(uint64_t *, uint64_t);
  uint64_t v68;
  void *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  unint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  void *v93;
  unint64_t v94;
  unint64_t v95;
  void *v96;
  int v97;
  uint64_t v98;
  uint64_t v99;
  char v100;
  uint64_t v101;
  uint64_t v102;
  char v103;
  uint64_t v104;
  unint64_t v105;
  char v106;
  unint64_t v107;
  char v108;
  char v109;
  uint64_t v110;
  unint64_t v111;
  char v112;
  uint64_t v113;
  uint64_t v114;
  BOOL v115;
  uint64_t v116;
  void (*v117)(char *, uint64_t);
  void (*v118)(uint64_t, uint64_t);
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  void *v122;
  uint64_t v123;
  _QWORD *v124;
  char **v125;
  uint64_t v126;
  uint64_t v127;
  void *v128;
  uint64_t isUniquelyReferenced_nonNull_native;
  uint64_t v130;
  id v131;
  double v132;
  double v133;
  void (*v134)(void *, uint64_t);
  uint64_t v135;
  uint64_t v136;
  void *v137;
  id v138;
  double v139;
  double v140;
  uint64_t v141;
  unint64_t v142;
  uint64_t v143;
  id v144;
  uint64_t v145;
  id v146;
  void *v147;
  uint64_t v148;
  id v149;
  uint64_t v150;
  unint64_t v151;
  unint64_t v152;
  id v153;
  void *v154;
  id v155;
  void *v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t (*v162)(uint64_t, _QWORD);
  char v163;
  unint64_t v164;
  unint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  id v172;
  id v173;
  void *v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  char v179;
  uint64_t v180;
  void (*v181)(uint64_t);
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  void (*v185)(uint64_t, uint64_t, uint64_t);
  uint64_t v186;
  unint64_t v187;
  char v188;
  unint64_t v189;
  char v190;
  char v191;
  unint64_t v192;
  char v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  id v197;
  unint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t *v201;
  uint64_t v202;
  uint64_t v203;
  id v204;
  uint64_t v205;
  unint64_t v206;
  unint64_t v207;
  id v208;
  void *v209;
  id v210;
  void *v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t (*v217)(uint64_t, _QWORD);
  char v218;
  unint64_t v219;
  unint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  id v227;
  id v228;
  void *v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  char v234;
  void (*v235)(uint64_t);
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  void (*v240)(uint64_t, uint64_t, uint64_t);
  uint64_t v241;
  unint64_t v242;
  char v243;
  unint64_t v244;
  char v245;
  char v246;
  unint64_t v247;
  char v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t *v254;
  uint64_t v255;
  double *v256;
  double v257;
  uint64_t v258;
  double v259;
  double v260;
  _QWORD *v261;
  uint64_t v262;
  void *v263;
  uint64_t v264;
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  uint64_t v268;
  uint64_t v269;
  uint64_t inited;
  uint64_t v271;
  uint64_t result;
  uint64_t v273;
  uint64_t v274;
  uint64_t v275;
  uint64_t v276;
  uint64_t v277;
  uint64_t v278;
  uint64_t v279;
  char *v280;
  char *v281;
  uint64_t v282;
  char *v283;
  __int128 v284;
  uint64_t v285;
  uint64_t v286;
  uint64_t v287;
  void (*v288)(char *, unint64_t, uint64_t);
  _QWORD *v289;
  uint64_t v290;
  uint64_t v291;
  uint64_t v292;
  void (*v293)(uint64_t *, uint64_t);
  uint64_t v294;
  void (*v295)(_QWORD *@<X8>);
  uint64_t v296;
  uint64_t v297;
  uint64_t v298;
  uint64_t v299;
  uint64_t v300;
  uint64_t v301;
  uint64_t v302;
  uint64_t v303;
  char *v304;
  uint64_t v305;
  char v306[8];
  uint64_t v307;
  uint64_t v308;
  unint64_t v309;
  uint64_t v310;
  void *v311;
  uint64_t v312;
  uint64_t v313;
  void *v314;
  uint64_t *v315;
  char v316[8];
  uint64_t *v317;
  void *v318;
  uint64_t v319;
  uint64_t v320;
  uint64_t v321;
  char v322[8];
  uint64_t v323;
  uint64_t v324;
  uint64_t v325;
  uint64_t v326;
  uint64_t v327;
  uint64_t v328;

  sub_1C07ACF80((uint64_t *)&unk_1ED75EA40);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v1);
  sub_1C077AED0();
  sub_1C077AF60();
  MEMORY[0x1E0C80A78](v2);
  sub_1C0787A68((uint64_t)&v275 - v3);
  v4 = sub_1C106A7E0();
  sub_1C077B58C(v4, (uint64_t)&v320);
  v297 = v5;
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v6);
  sub_1C077AE40();
  sub_1C0787A68(v7);
  v8 = sub_1C106ADE0();
  sub_1C077B58C(v8, (uint64_t)&v323);
  v301 = v9;
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v10);
  sub_1C077AED0();
  sub_1C077AF60();
  MEMORY[0x1E0C80A78](v11);
  sub_1C0787A68((uint64_t)&v275 - v12);
  type metadata accessor for GDInteractionEnumeration.GDInteractionIterator();
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v13);
  sub_1C077AE40();
  sub_1C0787A68(v14);
  v15 = sub_1C106E590();
  sub_1C077B58C(v15, (uint64_t)&v326);
  v307 = v16;
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v17);
  sub_1C077AED0();
  sub_1C077AF60();
  MEMORY[0x1E0C80A78](v18);
  sub_1C0779728();
  sub_1C077AF60();
  MEMORY[0x1E0C80A78](v19);
  sub_1C0779728();
  sub_1C077AF60();
  MEMORY[0x1E0C80A78](v20);
  sub_1C0779728();
  sub_1C077AF60();
  MEMORY[0x1E0C80A78](v21);
  sub_1C0779728();
  sub_1C077AF60();
  MEMORY[0x1E0C80A78](v22);
  v304 = (char *)&v275 - v23;
  sub_1C07ACF80((uint64_t *)&unk_1ED759DE0);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v24);
  sub_1C077AE40();
  sub_1C0787A68(v25);
  v26 = sub_1C106A918();
  sub_1C077B58C(v26, (uint64_t)&v318);
  v303 = v27;
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v28);
  sub_1C077AE40();
  sub_1C0787A68(v29);
  v30 = sub_1C106FB50();
  v312 = *(_QWORD *)(v30 - 8);
  v313 = v30;
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v31);
  sub_1C077AE40();
  sub_1C0787A68(v32);
  v33 = type metadata accessor for Configuration();
  sub_1C077B58C(v33, (uint64_t)v306);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v34);
  sub_1C077AE40();
  v279 = v35;
  sub_1C07ACF80(&qword_1ED756690);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v36);
  sub_1C077AE40();
  v294 = v37;
  sub_1C07ACF80(&qword_1ED75EA10);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v38);
  sub_1C077AE40();
  sub_1C0787A68(v39);
  v40 = sub_1C106D9A8();
  v282 = *(_QWORD *)(v40 - 8);
  MEMORY[0x1E0C80A78](v40);
  v42 = (char *)&v275 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v43);
  sub_1C0779728();
  sub_1C077AF60();
  MEMORY[0x1E0C80A78](v44);
  sub_1C0779728();
  sub_1C077AF60();
  MEMORY[0x1E0C80A78](v45);
  v47 = (char *)&v275 - v46;
  MEMORY[0x1E0C80A78](v48);
  v50 = (char *)&v275 - v49;
  v51 = sub_1C106D9B4();
  sub_1C077B58C(v51, (uint64_t)&v328);
  v286 = v52;
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v53);
  sub_1C077AE40();
  v315 = v54;
  v324 = MEMORY[0x1E0DEE9D8];
  v289 = v0;
  v295 = *(void (**)(_QWORD *@<X8>))((char *)v0
                                              + OBJC_IVAR____TtC24IntelligencePlatformCore25CallInteractionSignalView_store);
  v292 = sub_1C07ACF80(&qword_1ED75E838);
  v55 = *(_QWORD *)(sub_1C106E41C() - 8);
  v56 = *(_QWORD *)(v55 + 72);
  v57 = *(unsigned __int8 *)(v55 + 80);
  v285 = (v57 + 32) & ~v57;
  v288 = (void (*)(char *, unint64_t, uint64_t))(v57 | 7);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1C1078A20;
  swift_retain();
  sub_1C106DE58();
  *(_QWORD *)&v284 = v56;
  sub_1C106DDEC();
  sub_1C106E11C();
  sub_1C0AA7870();
  sub_1C07A0908((uint64_t)v50);
  v280 = v47;
  sub_1C07A0908((uint64_t)v47);
  v58 = v299;
  sub_1C07A0908(v299);
  v59 = v309;
  sub_1C07A0908(v309);
  sub_1C07A0908((uint64_t)v42);
  v283 = v42;
  sub_1C106D864();
  sub_1C07767AC();
  sub_1C078F270((uint64_t)v42);
  sub_1C078F270(v59);
  sub_1C078F270(v58);
  v60 = (uint64_t)v280;
  sub_1C078F270((uint64_t)v280);
  v61 = (uint64_t)v50;
  v281 = v50;
  sub_1C078F270((uint64_t)v50);
  v62 = sub_1C106D2DC();
  v63 = (uint64_t)v293;
  sub_1C077A2C4((uint64_t)v293, v64, v65, v62);
  v317 = &v324;
  v66 = v315;
  sub_1C0AA4BDC((uint64_t)v315, v63, (uint64_t)sub_1C08B54E8, (uint64_t)v316);
  sub_1C0784B6C(v63, &qword_1ED75EA10);
  sub_1C077B5A8();
  v293 = v67;
  v67(v66, v310);
  swift_release();
  swift_retain();
  v68 = sub_1C07767B4();
  v69 = v314;
  v70 = sub_1C08B0C8C(v68);
  v314 = v69;
  sub_1C07767AC();
  sub_1C0898DB0();
  v286 = v71;
  v72 = swift_allocObject();
  v284 = xmmword_1C1079220;
  *(_OWORD *)(v72 + 16) = xmmword_1C1079220;
  sub_1C106DD8C();
  sub_1C0AA7870();
  sub_1C07A0908(v61);
  v73 = v60;
  sub_1C07A0908(v60);
  v74 = v299;
  sub_1C07A0908(v299);
  v75 = sub_1C0790764((uint64_t)&v327);
  sub_1C07A0908(v75);
  v76 = (uint64_t)v283;
  sub_1C07A0908((uint64_t)v283);
  v273 = v76;
  v274 = 0;
  v77 = (uint64_t)v281;
  sub_1C106D864();
  swift_bridgeObjectRelease();
  sub_1C07767AC();
  sub_1C078F270(v76);
  sub_1C078F270(v70);
  sub_1C078F270(v74);
  sub_1C078F270(v73);
  sub_1C078F270(v77);
  v78 = sub_1C106EB78();
  v79 = v294;
  sub_1C077A2C4(v294, v80, v81, v78);
  v82 = v315;
  v83 = sub_1C0BA46B8((uint64_t)v315, v79);
  sub_1C0784B6C(v79, &qword_1ED756690);
  v293(v82, v310);
  swift_release();
  sub_1C106A708();
  swift_allocObject();
  v84 = sub_1C106A6FC();
  sub_1C07ACF80(&qword_1EF6332E8);
  sub_1C0794BAC((unint64_t *)&qword_1ED7618F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3CE28], MEMORY[0x1E0D3CE40]);
  v299 = sub_1C106F97C();
  v85 = *(_QWORD *)(v83 + 16);
  v294 = v84;
  if (!v85)
    goto LABEL_26;
  v86 = type metadata accessor for GraphTriple(0);
  sub_1C077B58C(v86, (uint64_t)&v328);
  v88 = v83 + ((*(unsigned __int8 *)(v87 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v87 + 80));
  v309 = *(_QWORD *)(v87 + 72);
  v286 = v83;
  v89 = sub_1C077584C();
  v90 = v291;
  v91 = v290;
  do
  {
    v92 = v91;
    v315 = (uint64_t *)MEMORY[0x1C3BA79F4](v89);
    v93 = v311;
    sub_1C106FB44();
    sub_1C106FB20();
    v95 = v94;
    (*(void (**)(void *, uint64_t))(v312 + 8))(v93, v313);
    if (v95 >> 60 == 15)
    {
      v91 = v92;
      goto LABEL_9;
    }
    sub_1C0794BAC(&qword_1EF6332F8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAEAB0], MEMORY[0x1E0CAEAE8]);
    v91 = v92;
    v96 = v314;
    sub_1C106A6F0();
    if (v96)
    {

      sub_1C0790F28(v90, 1);
      v314 = 0;
LABEL_8:
      sub_1C07AD5CC();
      sub_1C0784B6C(v90, (uint64_t *)&unk_1ED759DE0);
      goto LABEL_9;
    }
    sub_1C0790F28(v90, 0);
    v97 = sub_1C07B2D80(v90, 1, v92);
    v314 = 0;
    if (v97 == 1)
      goto LABEL_8;
    v98 = v298;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v303 + 32))(v298, v90, v92);
    v288 = *(void (**)(char *, unint64_t, uint64_t))(v307 + 16);
    v288(v304, v88, v308);
    v99 = sub_1C106A8D0();
    if ((v100 & 1) != 0)
      v101 = -1;
    else
      v101 = v99;
    v293 = (void (*)(uint64_t *, uint64_t))v101;
    v102 = sub_1C106A8A0();
    if ((v103 & 1) != 0)
      v104 = -1;
    else
      v104 = v102;
    v292 = v104;
    sub_1C0790764((uint64_t)&v321);
    swift_isUniquelyReferenced_nonNull_native();
    v319 = v98;
    sub_1C07DCD84();
    if (__OFADD__(*(_QWORD *)(v98 + 16), (v106 & 1) == 0))
      goto LABEL_114;
    v107 = v105;
    v108 = v106;
    sub_1C07ACF80(&qword_1EF633300);
    sub_1C07B896C();
    v109 = sub_1C107090C();
    v110 = v308;
    if ((v109 & 1) != 0)
    {
      sub_1C07DCD84();
      if ((v108 & 1) != (v112 & 1))
        goto LABEL_118;
      v107 = v111;
    }
    v113 = v319;
    v299 = v319;
    if ((v108 & 1) != 0)
    {
      sub_1C079FD70();
    }
    else
    {
      *(_QWORD *)(v319 + 8 * (v107 >> 6) + 64) |= 1 << v107;
      v288((char *)(*(_QWORD *)(v113 + 48) + *(_QWORD *)(v307 + 72) * v107), (unint64_t)v304, v110);
      sub_1C079FD70();
      v114 = *(_QWORD *)(v113 + 16);
      v115 = __OFADD__(v114, 1);
      v116 = v114 + 1;
      if (v115)
        goto LABEL_116;
      *(_QWORD *)(v113 + 16) = v116;
    }
    sub_1C077970C();
    sub_1C077B5A8();
    v117(v304, v110);
    sub_1C07AD5CC();
    sub_1C077B5A8();
    v91 = v290;
    v118(v298, v290);
    v90 = v291;
LABEL_9:
    objc_autoreleasePoolPop(v315);
    v88 += v309;
    --v85;
  }
  while (v85);
  sub_1C0778580();
LABEL_26:
  v119 = v287;
  sub_1C0778580();
  sub_1C07A9480((_QWORD *)((char *)v289 + OBJC_IVAR____TtC24IntelligencePlatformCore25CallInteractionSignalView_handleView), *(_QWORD *)((char *)v289 + OBJC_IVAR____TtC24IntelligencePlatformCore25CallInteractionSignalView_handleView + 24));
  v310 = sub_1C106E6EC();
  v120 = v279;
  sub_1C083F944((uint64_t)v295 + OBJC_IVAR____TtC24IntelligencePlatformCore10GraphStore_config, v279, (uint64_t (*)(_QWORD))type metadata accessor for Configuration);
  if ((*(_QWORD *)(v120 + *(int *)(v278 + 20)) & 2) != 0)
    v121 = 200;
  else
    v121 = 2000;
  v122 = (void *)objc_opt_self();
  sub_1C07B1F90(v120, (uint64_t (*)(_QWORD))type metadata accessor for Configuration);
  v293 = (void (*)(uint64_t *, uint64_t))objc_msgSend(v122, sel_interactionHistoryEnumeratorWithBatchSize_, v121);
  sub_1C106AA50();
  sub_1C106AA38();
  v123 = MEMORY[0x1E0DEE9D8];
  if (!v321)
  {
    v295 = 0;
    v126 = MEMORY[0x1E0DEE9D8];
LABEL_107:
    sub_1C0784B6C((uint64_t)&v319, &qword_1ED760400);
LABEL_108:
    sub_1C07B1F90(v119, (uint64_t (*)(_QWORD))type metadata accessor for GDInteractionEnumeration.GDInteractionIterator);
    v255 = swift_bridgeObjectRelease();
    if (*(_QWORD *)(v126 + 16))
    {
      v256 = (double *)(v126 + 32);
      v257 = 0.0;
      v258 = *(_QWORD *)(v126 + 16);
      do
      {
        v259 = *v256++;
        v257 = v257 + v259;
        --v258;
      }
      while (v258);
    }
    v260 = MEMORY[0x1E0C80A78](v255);
    v261 = v289;
    *(&v275 - 4) = (uint64_t)v289;
    *((double *)&v275 - 3) = v260;
    v273 = v299;
    v262 = sub_1C077E6D0();
    v263 = v314;
    v264 = sub_1C08B13E4(v262, sub_1C08B54F0);
    v314 = v263;
    sub_1C07767AC();
    sub_1C0778580();
    sub_1C07785A0();
    v265 = v261[2];
    v266 = v261[3];
    v267 = v261[4];
    v268 = v261[5];
    v269 = v261[6];
    sub_1C07ACF80(&qword_1ED762CB0);
    inited = swift_initStackObject();
    v315 = &v275;
    *(_OWORD *)(inited + 16) = v284;
    *(_QWORD *)(inited + 32) = v265;
    *(_QWORD *)(inited + 40) = v266;
    MEMORY[0x1E0C80A78](inited);
    *(&v275 - 6) = v271;
    *(&v275 - 5) = v267;
    *(&v275 - 4) = v268;
    *(&v275 - 3) = v269;
    v273 = v264;
    sub_1C07B8328();
    sub_1C078157C();
    swift_bridgeObjectRetain_n();
    swift_retain_n();
    sub_1C078017C();
    swift_release();
    sub_1C0775834();
    sub_1C0775894();
    swift_release_n();
    sub_1C078157C();
    swift_bridgeObjectRelease_n();
    sub_1C07785A0();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    return sub_1C07AA70C();
  }
  v313 = sub_1C07D4B70(0, &qword_1ED758D28);
  v295 = 0;
  v124 = (_QWORD *)MEMORY[0x1E0DEE9E0];
  v312 = MEMORY[0x1E0DEE9B8] + 8;
  v125 = &selRef_homes;
  v126 = v123;
  while (2)
  {
    v127 = swift_dynamicCast();
    if ((v127 & 1) == 0)
      goto LABEL_108;
    v128 = v318;
    isUniquelyReferenced_nonNull_native = (uint64_t)sub_1C07878D0(v127, v125[38]);
    if (isUniquelyReferenced_nonNull_native == 16)
    {
      v130 = v119;
      v131 = sub_1C07878D0(16, sel_endDate);
      sub_1C07ABC18();

      sub_1C106AC60();
      v133 = v132;
      v134 = *(void (**)(void *, uint64_t))(v301 + 8);
      v135 = v126;
      v136 = v302;
      v134(v128, v302);
      v137 = v128;
      v138 = objc_msgSend(v128, sel_startDate);
      sub_1C07ABC18();

      sub_1C106AC60();
      v140 = v139;
      v141 = v136;
      v126 = v135;
      v134(v128, v141);
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_1C079BD8C();
        v126 = isUniquelyReferenced_nonNull_native;
      }
      v142 = *(_QWORD *)(v126 + 16);
      v119 = v130;
      if (v142 >= *(_QWORD *)(v126 + 24) >> 1)
      {
        sub_1C079BD8C();
        v126 = isUniquelyReferenced_nonNull_native;
      }
      v125 = &selRef_homes;
      *(_QWORD *)(v126 + 16) = v142 + 1;
      *(double *)(v126 + 8 * v142 + 32) = v133 - v140;
      v128 = v137;
    }
    if (qword_1EF62DAD0 != -1)
      isUniquelyReferenced_nonNull_native = swift_once();
    v143 = qword_1EF6D0D08;
    v144 = sub_1C07878D0(isUniquelyReferenced_nonNull_native, v125[38]);
    sub_1C0A79384((uint64_t)v144, v143);
    if ((v145 & 1) == 0)
    {

      goto LABEL_42;
    }
    v146 = sub_1C07878D0(v145, sel_sender);
    v298 = v126;
    v311 = v128;
    if (v146)
    {
      v147 = v146;
      v148 = v126;
      v149 = objc_msgSend(v146, sel_handle);
      v150 = sub_1C106FB14();
      v152 = v151;

      v153 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D13A70]), sel_init);
      v154 = (void *)sub_1C106FAF0();
      v155 = objc_msgSend(v153, sel_typeOfHandleString_, v154);

      if (v155 == (id)1)
      {
        v156 = (void *)MEMORY[0x1C3BA79F4]();
        v319 = sub_1C106FB68();
        v320 = v157;
        v158 = v296;
        sub_1C106A7BC();
        sub_1C07B1280();
        sub_1C07B896C();
        v159 = sub_1C10705E8();
        v161 = v160;
        sub_1C077B5A8();
        sub_1C077B084(v158, v162);
        swift_bridgeObjectRelease();
        objc_autoreleasePoolPop(v156);
        sub_1C0778580();
LABEL_52:
        sub_1C077D068();
        v177 = *(_QWORD *)(v176 - 256);
        if (v178 && (sub_1C077D774(v159, v161), (v179 & 1) != 0))
        {
          sub_1C07B166C();
          v180 = v277;
          v181(v277);
          v182 = 0;
        }
        else
        {
          v182 = 1;
          v180 = v277;
        }
        sub_1C07B2D8C(v180, v182, 1, v177);
        swift_bridgeObjectRelease();
        if (sub_1C07B2D80(v180, 1, v177) == 1)
        {

          sub_1C0784B6C(v180, (uint64_t *)&unk_1ED75EA40);
          goto LABEL_68;
        }
        v183 = v307;
        v184 = v276;
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v307 + 32))(v276, v180, v177);
        v185 = *(void (**)(uint64_t, uint64_t, uint64_t))(v183 + 16);
        v186 = sub_1C0790764((uint64_t)&v305);
        v185(v186, v184, v177);
        sub_1C077B6F8();
        sub_1C07AA70C();
        sub_1C0781980();
        v319 = (uint64_t)v124;
        sub_1C078D4D0();
        sub_1C0781060();
        if (v115)
          goto LABEL_117;
        v189 = v187;
        v190 = v188;
        sub_1C07ACF80(&qword_1EF6332F0);
        sub_1C07B896C();
        v191 = sub_1C107090C();
        v124 = (_QWORD *)v319;
        v125 = &selRef_homes;
        if ((v191 & 1) != 0)
        {
          sub_1C078D4D0();
          if ((v190 & 1) != (v193 & 1))
            goto LABEL_118;
          v189 = v192;
        }
        sub_1C077970C();
        sub_1C077E6D0();
        if ((v190 & 1) == 0)
        {
          v194 = sub_1C0790764((uint64_t)&v302);
          sub_1C07B71AC(v194, (uint64_t)&v305);
          sub_1C07DFC6C(v189, v180, MEMORY[0x1E0DEE9D8], (uint64_t)v124);
        }
        v195 = v124[7];
        v196 = sub_1C07785A0();
        MEMORY[0x1C3BA6800](v196);
        if (*(_QWORD *)((*(_QWORD *)(v195 + 8 * v189) & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*(_QWORD *)(v195 + 8 * v189) & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_1C079581C();
        sub_1C07814F0();
        sub_1C106FFC4();
        sub_1C106FF28();

        sub_1C078C8CC((uint64_t)&v305);
        v146 = (id)sub_1C077F110((uint64_t)&v303);
        v295 = sub_1C08B5130;
        v126 = v298;
        v128 = v311;
      }
      else
      {
        sub_1C0D73F00(58, 0xE100000000000000, v150, v152);
        if ((v163 & 1) != 0)
        {
          sub_1C077584C();
        }
        else
        {
          v164 = sub_1C106FC40();
          sub_1C077584C();
          v165 = sub_1C0D74224(v164, v150, v152);
          v167 = v166;
          v169 = v168;
          v171 = v170;
          sub_1C0778580();
          MEMORY[0x1C3BA64D0](v165, v167, v169, v171);
          sub_1C0775894();
        }
        sub_1C07D4B70(0, (unint64_t *)&qword_1ED75E850);
        v172 = sub_1C0D745F8();
        v173 = objc_msgSend(v172, sel_unformattedInternationalStringValue);
        if (v173)
        {
          v174 = v173;
          v159 = sub_1C106FB14();
          v161 = v175;
          sub_1C0778580();

          goto LABEL_52;
        }

        sub_1C0778580();
LABEL_68:
        v125 = &selRef_homes;
        v128 = v311;
        v126 = v148;
      }
    }
    v197 = sub_1C07878D0((uint64_t)v146, sel_recipients);
    sub_1C07D4B70(0, (unint64_t *)&qword_1ED758DF0);
    v198 = sub_1C106FF04();

    if (!(v198 >> 62))
    {
      v199 = *(_QWORD *)((v198 & 0xFFFFFFFFFFFFF8) + 0x10);
      sub_1C0778624();
      if (v199)
        break;
      goto LABEL_105;
    }
    sub_1C07B8328();
    v199 = sub_1C10709B4();
    sub_1C0775834();
    if (!v199)
    {
LABEL_105:

      swift_bridgeObjectRelease_n();
      v119 = v287;
LABEL_42:
      sub_1C106AA38();
      if (!v321)
        goto LABEL_107;
      continue;
    }
    break;
  }
  v309 = v198 & 0xC000000000000001;
  v200 = 4;
  v304 = (char *)v198;
  v303 = v199;
  while (2)
  {
    if (v309)
      v201 = (uint64_t *)MEMORY[0x1C3BA70DC](v200 - 4, v198);
    else
      v201 = (uint64_t *)*(id *)(v198 + 8 * v200);
    v202 = v200 - 3;
    if (!__OFADD__(v200 - 4, 1))
    {
      v203 = v126;
      v315 = v201;
      v204 = objc_msgSend(v201, sel_handle);
      v205 = sub_1C106FB14();
      v207 = v206;

      v208 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D13A70]), sel_init);
      v209 = (void *)sub_1C106FAF0();
      v210 = objc_msgSend(v208, sel_typeOfHandleString_, v209);

      if (v210 == (id)1)
      {
        v211 = (void *)MEMORY[0x1C3BA79F4]();
        v319 = sub_1C106FB68();
        v320 = v212;
        v213 = v296;
        sub_1C106A7BC();
        sub_1C07B1280();
        sub_1C07B896C();
        v214 = sub_1C10705E8();
        v216 = v215;
        sub_1C077B5A8();
        sub_1C077B084(v213, v217);
        swift_bridgeObjectRelease();
        objc_autoreleasePoolPop(v211);
        sub_1C0775834();
LABEL_83:
        sub_1C077D068();
        v232 = *(_QWORD *)(v231 - 256);
        if (v233 && (sub_1C077D774(v214, v216), (v234 & 1) != 0))
        {
          sub_1C07B166C();
          v235(v305);
          v236 = 0;
        }
        else
        {
          v236 = 1;
        }
        v237 = v305;
        sub_1C07B2D8C(v305, v236, 1, v232);
        sub_1C0775894();
        if (sub_1C07B2D80(v237, 1, v232) == 1)
        {
          sub_1C0784B6C(v237, (uint64_t *)&unk_1ED75EA40);
          v126 = v298;
        }
        else
        {
          v238 = v307;
          v239 = v300;
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v307 + 32))(v300, v237, v232);
          v240 = *(void (**)(uint64_t, uint64_t, uint64_t))(v238 + 16);
          v241 = sub_1C0790764((uint64_t)&v325);
          v240(v241, v239, v232);
          sub_1C077B6F8();
          sub_1C0781980();
          v319 = (uint64_t)v124;
          sub_1C078D4D0();
          sub_1C0781060();
          if (v115)
            goto LABEL_113;
          v244 = v242;
          v245 = v243;
          sub_1C07ACF80(&qword_1EF6332F0);
          sub_1C07B896C();
          v246 = sub_1C107090C();
          v124 = (_QWORD *)v319;
          if ((v246 & 1) != 0)
          {
            sub_1C078D4D0();
            if ((v245 & 1) != (v248 & 1))
              goto LABEL_118;
            v244 = v247;
          }
          sub_1C077970C();
          if ((v245 & 1) != 0)
          {
            sub_1C077E6D0();
          }
          else
          {
            v124[(v244 >> 6) + 8] |= 1 << v244;
            v249 = v124[6] + *(_QWORD *)(v307 + 72) * v244;
            sub_1C077E6D0();
            sub_1C07B71AC(v249, (uint64_t)&v325);
            *(_QWORD *)(v124[7] + 8 * v244) = MEMORY[0x1E0DEE9D8];
            v250 = v124[2];
            v115 = __OFADD__(v250, 1);
            v251 = v250 + 1;
            if (v115)
              goto LABEL_115;
            v124[2] = v251;
          }
          v252 = v124[7];
          v253 = sub_1C07785A0();
          MEMORY[0x1C3BA6800](v253);
          v126 = v298;
          if (*(_QWORD *)((*(_QWORD *)(v252 + 8 * v244) & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*(_QWORD *)(v252 + 8 * v244) & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
            sub_1C079581C();
          sub_1C106FFC4();
          sub_1C106FF28();
          sub_1C078C8CC((uint64_t)&v325);
          sub_1C077F110((uint64_t)v322);
        }
        v125 = &selRef_homes;
        v128 = v311;
        v254 = v315;
      }
      else
      {
        sub_1C0D73F00(58, 0xE100000000000000, v205, v207);
        if ((v218 & 1) != 0)
        {
          sub_1C0778624();
        }
        else
        {
          v219 = sub_1C106FC40();
          sub_1C0778624();
          v220 = sub_1C0D74224(v219, v205, v207);
          v222 = v221;
          v224 = v223;
          v226 = v225;
          sub_1C0775834();
          MEMORY[0x1C3BA64D0](v220, v222, v224, v226);
          sub_1C0775894();
        }
        sub_1C07D4B70(0, (unint64_t *)&qword_1ED75E850);
        v227 = sub_1C0D745F8();
        v228 = objc_msgSend(v227, sel_unformattedInternationalStringValue);
        if (v228)
        {
          v229 = v228;
          v214 = sub_1C106FB14();
          v216 = v230;
          sub_1C0775834();

          goto LABEL_83;
        }

        sub_1C0775834();
        v254 = (uint64_t *)v227;
        v125 = &selRef_homes;
        v128 = v311;
        v126 = v203;
      }

      ++v200;
      v198 = (unint64_t)v304;
      if (v202 == v303)
        goto LABEL_105;
      continue;
    }
    break;
  }
  __break(1u);
LABEL_113:
  __break(1u);
LABEL_114:
  __break(1u);
LABEL_115:
  __break(1u);
LABEL_116:
  __break(1u);
LABEL_117:
  __break(1u);
LABEL_118:
  result = sub_1C1070D44();
  __break(1u);
  return result;
}

uint64_t sub_1C08B4F50(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  void (*v15)(char *, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;

  v4 = type metadata accessor for GraphTriple(0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v20 - v8;
  v10 = sub_1C106E41C();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = a1 + *(int *)(v4 + 20);
  sub_1C106E11C();
  LOBYTE(v14) = sub_1C08C4D74(v14, (uint64_t)v13);
  v15 = *(void (**)(char *, uint64_t))(v11 + 8);
  v15(v13, v10);
  if ((v14 & 1) != 0)
  {
    v16 = a1 + *(int *)(v4 + 28);
    sub_1C106DE58();
    LOBYTE(v16) = sub_1C08C4D74(v16, (uint64_t)v13);
    v15(v13, v10);
    sub_1C083F944(a1, (uint64_t)v9, type metadata accessor for GraphTriple);
    if ((v16 & 1) != 0)
    {
      sub_1C07B1F90((uint64_t)v9, type metadata accessor for GraphTriple);
    }
    else
    {
      v17 = (uint64_t)&v9[*(int *)(v4 + 28)];
      sub_1C106DDEC();
      LOBYTE(v17) = sub_1C08C4D74(v17, (uint64_t)v13);
      v15(v13, v10);
      sub_1C07B1F90((uint64_t)v9, type metadata accessor for GraphTriple);
      if ((v17 & 1) == 0)
        return 0;
    }
  }
  sub_1C07EA078();
  v18 = *(_QWORD *)(*a2 + 16);
  sub_1C07EA750();
  sub_1C083F944(a1, (uint64_t)v6, type metadata accessor for GraphTriple);
  sub_1C08B5560(v18, (uint64_t)v6, a2);
  return 1;
}

void sub_1C08B5130(_QWORD *a1@<X8>)
{
  *a1 = MEMORY[0x1E0DEE9D8];
}

uint64_t sub_1C08B5140(uint64_t a1, uint64_t a2, double a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;

  v9 = sub_1C106E530();
  v11 = v10;
  v12 = sub_1C089AEC8(a1, a5);
  v15 = sub_1C08B3310(v9, v11, a3, a2, v12, v14, v13 & 1);
  swift_bridgeObjectRelease();
  return v15;
}

uint64_t sub_1C08B51D0()
{
  uint64_t v0;

  swift_release();
  swift_bridgeObjectRelease();
  sub_1C07767AC();
  sub_1C07B1F90(v0 + OBJC_IVAR____TtC24IntelligencePlatformCore25CallInteractionSignalView_config, (uint64_t (*)(_QWORD))_s10ViewConfigVMa);
  swift_release();
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0(v0 + OBJC_IVAR____TtC24IntelligencePlatformCore25CallInteractionSignalView_handleView);
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1C08B5254()
{
  sub_1C08B51D0();
  return swift_deallocClassInstance();
}

uint64_t sub_1C08B5278()
{
  return type metadata accessor for CallInteractionSignalView();
}

uint64_t type metadata accessor for CallInteractionSignalView()
{
  uint64_t result;

  result = qword_1EF6332C8;
  if (!qword_1EF6332C8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1C08B52B8()
{
  uint64_t result;
  unint64_t v1;

  result = _s10ViewConfigVMa();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_1C08B5348()
{
  uint64_t v0;

  sub_1C08B35B8();
  return sub_1C0882DB4(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1C08B5394()
{
  uint64_t v0;

  sub_1C08B1D00();
  return sub_1C0882D8C(*(uint64_t (**)(void))(v0 + 8));
}

void sub_1C08B53C4(uint64_t a1@<X8>)
{
  _QWORD *v1;

  sub_1C083F944(*v1 + OBJC_IVAR____TtC24IntelligencePlatformCore25CallInteractionSignalView_config, a1, (uint64_t (*)(_QWORD))_s10ViewConfigVMa);
}

uint64_t sub_1C08B53F4()
{
  return sub_1C08B1D84();
}

uint64_t sub_1C08B5414(uint64_t a1)
{
  return sub_1C08B551C(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1C0A1B374);
}

id sub_1C08B5430(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  void *v6;
  void *v8;
  void *v9;
  void *v10;
  id v11;

  v8 = (void *)sub_1C106FAF0();
  swift_bridgeObjectRelease();
  v9 = (void *)sub_1C106FAF0();
  sub_1C0775834();
  if (a6)
  {
    sub_1C07814F0();
    v10 = (void *)sub_1C106FAF0();
    swift_bridgeObjectRelease();
  }
  else
  {
    v10 = 0;
  }
  v11 = objc_msgSend(v6, sel_initWithViewName_featureName_subidentifierName_, v8, v9, v10);

  return v11;
}

uint64_t sub_1C08B54E8(uint64_t a1)
{
  uint64_t v1;

  return sub_1C08B4F50(a1, *(uint64_t **)(v1 + 16));
}

uint64_t sub_1C08B54F0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1C08B5140(a1, a2, *(double *)(v2 + 24), *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 32));
}

uint64_t sub_1C08B5500(uint64_t a1)
{
  return sub_1C08B551C(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1C0A1B870);
}

uint64_t sub_1C08B551C(uint64_t a1, uint64_t (*a2)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  _QWORD *v2;

  return a2(a1, v2[2], v2[3], v2[4], v2[5], v2[6]);
}

BOOL sub_1C08B5540(id *a1)
{
  uint64_t *v1;

  return sub_1C08B22AC(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_1C08B5560(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;

  v11 = type metadata accessor for GraphTriple(0);
  sub_1C0794BAC(qword_1EF633310, type metadata accessor for GraphTriple, (uint64_t)&protocol conformance descriptor for GraphTriple);
  v12 = v6;
  v7 = sub_1C079DFC4((uint64_t *)&v10);
  sub_1C080AC74(a2, (uint64_t)v7);
  v8 = *a3;
  *(_QWORD *)(v8 + 16) = a1 + 1;
  return sub_1C077DD60(&v10, v8 + 40 * a1 + 32);
}

uint64_t sub_1C08B55F4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1C08B5604()
{
  uint64_t inited;

  sub_1C07ACF80(&qword_1ED755050);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C1079220;
  *(_QWORD *)(inited + 32) = 0xD000000000000010;
  *(_QWORD *)(inited + 40) = 0x80000001C10E7600;
  *(_QWORD *)(inited + 48) = objc_msgSend((id)objc_opt_self(), sel_featureValueWithInt64_, 1);
  sub_1C07D97D4();
  return sub_1C106F97C();
}

uint64_t sub_1C08B56B0()
{
  uint64_t inited;
  uint64_t v1;
  uint64_t v2;
  id v3;
  uint64_t v5;

  sub_1C07ACF80(&qword_1ED755050);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C1079220;
  *(_QWORD *)(inited + 32) = 0xD000000000000010;
  *(_QWORD *)(inited + 40) = 0x80000001C10E7600;
  *(_QWORD *)(inited + 48) = objc_msgSend((id)objc_opt_self(), sel_featureValueWithInt64_, 1);
  sub_1C07D97D4();
  v5 = sub_1C106F97C();
  sub_1C07F5FD8();
  if (v1)
  {
    swift_isUniquelyReferenced_nonNull_native();
    sub_1C08A07B0();
    v2 = v5;
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1C07F2B9C();

    return v5;
  }
  return v2;
}

void sub_1C08B586C(uint64_t a1@<X0>, char a2@<W1>, int a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;

  v8 = sub_1C077AE98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a4, a1, v8);
  v9 = type metadata accessor for CarPlayEvent();
  *(_BYTE *)(a4 + *(int *)(v9 + 20)) = a2;
  *(_DWORD *)(a4 + *(int *)(v9 + 24)) = a3;
  sub_1C077671C();
}

uint64_t sub_1C08B58CC()
{
  return sub_1C08B56B0();
}

uint64_t sub_1C08B58D4(uint64_t a1)
{
  uint64_t v1;

  return *(unsigned __int8 *)(v1 + *(int *)(a1 + 20));
}

uint64_t sub_1C08B58E0@<X0>(uint64_t result@<X0>, _DWORD *a2@<X8>)
{
  uint64_t v2;

  *a2 = *(_DWORD *)(v2 + *(int *)(result + 24));
  return result;
}

void sub_1C08B58F0(uint64_t a1@<X0>, char a2@<W1>, int *a3@<X2>, uint64_t a4@<X8>)
{
  sub_1C08B586C(a1, a2, *a3, a4);
}

void sub_1C08B58F8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  id v12;
  id v13;
  uint64_t v14;

  sub_1C07ACF80(&qword_1ED75D0B8);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C07ACF80(&qword_1ED74C9F0);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v14 - v10;
  v12 = objc_msgSend((id)BiomeLibrary(), sel_CarPlay);
  swift_unknownObjectRelease();
  v13 = objc_msgSend(v12, sel_Connected);
  swift_unknownObjectRelease();
  sub_1C08B5A78(v13, a1, (uint64_t)v11);

  if (!v1)
  {
    sub_1C087C44C((uint64_t)v11, (uint64_t)v8, &qword_1ED74C9F0);
    sub_1C087C44C(a1, (uint64_t)v5, &qword_1ED75D0B8);
    sub_1C0B5BBD8();
    sub_1C0784B94((uint64_t)v11, &qword_1ED74C9F0);
  }
}

void sub_1C08B5A78(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  void (*v16)(char *, uint64_t, uint64_t);
  uint64_t v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v27 = a3;
  v26 = sub_1C07ACF80(&qword_1ED7482B0);
  MEMORY[0x1E0C80A78](v26);
  v6 = sub_1C07ACF80(&qword_1ED74D500);
  v24 = *(_QWORD *)(v6 - 8);
  v25 = v6;
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1C07ACF80((uint64_t *)&unk_1ED762690);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v23 - v13;
  v15 = sub_1C106ADE0();
  v16 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 16);
  v16(v14, a2, v15);
  sub_1C07B2D8C((uint64_t)v14, 0, 1, v15);
  v17 = sub_1C07ACF80(&qword_1ED75D0B8);
  v16(v11, a2 + *(int *)(v17 + 36), v15);
  sub_1C07B2D8C((uint64_t)v11, 0, 1, v15);
  v18 = objc_allocWithZone(MEMORY[0x1E0D026F0]);
  v19 = sub_1C07DC9F8((uint64_t)v14, (uint64_t)v11, 0, 0, 0);
  v20 = objc_msgSend(a1, sel_publisherWithOptions_, v19);

  v21 = v20;
  sub_1C07ACF80((uint64_t *)&unk_1ED74D318);
  sub_1C106ED88();
  if (v3)
  {

  }
  else
  {
    *(_QWORD *)(swift_allocObject() + 16) = a1;
    type metadata accessor for CarPlayEvent();
    sub_1C07E6EDC(&qword_1ED748308, &qword_1ED7482B0, MEMORY[0x1E0D3D840]);
    v22 = a1;
    swift_retain();
    sub_1C1070C00();
    swift_release();

    (*(void (**)(uint64_t, char *, uint64_t))(v24 + 32))(v27, v8, v25);
  }
}

void sub_1C08B5D28()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  id v12;
  id v13;
  id v14;
  uint64_t v15;

  sub_1C077AE5C();
  sub_1C0797B3C(v4);
  sub_1C07ACF80(&qword_1ED7482B0);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v5);
  sub_1C077962C();
  sub_1C07ACF80(&qword_1ED74D4D8);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v6);
  sub_1C0779614();
  sub_1C07ACF80((uint64_t *)&unk_1ED762690);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v7);
  sub_1C077FD28();
  MEMORY[0x1E0C80A78](v8);
  v9 = sub_1C079365C();
  sub_1C0796028(v9);
  sub_1C079962C(v0);
  v10 = sub_1C07ACF80(&qword_1ED75D0B8);
  sub_1C078AA40(v10);
  sub_1C079962C(v3);
  v11 = objc_allocWithZone(MEMORY[0x1E0D026F0]);
  v12 = sub_1C078F090();
  v13 = sub_1C07A5B48((uint64_t)v12, sel_publisherWithOptions_);
  sub_1C077F038();
  v14 = v1;
  sub_1C07ACF80((uint64_t *)&unk_1ED74D318);
  sub_1C07877D4();
  if (v2)
  {

  }
  else
  {
    v15 = sub_1C0780678();
    sub_1C07B826C(v15);
    type metadata accessor for SemanticLocationEvent();
    sub_1C07E6EDC(&qword_1ED748310, &qword_1ED7482B0, MEMORY[0x1E0D3D840]);
    sub_1C077C0B0();
    sub_1C077E884();
    sub_1C078F074();
    sub_1C077AF1C();

    sub_1C078AA2C();
  }
  sub_1C077CF1C();
  sub_1C07757D0();
}

void sub_1C08B5E98()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  id v12;
  id v13;
  id v14;
  uint64_t v15;

  sub_1C077AE5C();
  sub_1C0797B3C(v4);
  sub_1C07ACF80(&qword_1ED7482B0);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v5);
  sub_1C077962C();
  sub_1C07ACF80(&qword_1ED74D4C0);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v6);
  sub_1C0779614();
  sub_1C07ACF80((uint64_t *)&unk_1ED762690);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v7);
  sub_1C077FD28();
  MEMORY[0x1E0C80A78](v8);
  v9 = sub_1C079365C();
  sub_1C0796028(v9);
  sub_1C079962C(v0);
  v10 = sub_1C07ACF80(&qword_1ED75D0B8);
  sub_1C078AA40(v10);
  sub_1C079962C(v3);
  v11 = objc_allocWithZone(MEMORY[0x1E0D026F0]);
  v12 = sub_1C078F090();
  v13 = sub_1C07A5B48((uint64_t)v12, sel_publisherWithOptions_);
  sub_1C077F038();
  v14 = v1;
  sub_1C07ACF80((uint64_t *)&unk_1ED74D318);
  sub_1C07877D4();
  if (v2)
  {

  }
  else
  {
    v15 = sub_1C0780678();
    sub_1C07B826C(v15);
    type metadata accessor for DeviceBluetoothEvent();
    sub_1C07E6EDC(&qword_1ED7482F0, &qword_1ED7482B0, MEMORY[0x1E0D3D840]);
    sub_1C077C0B0();
    sub_1C077E884();
    sub_1C078F074();
    sub_1C077AF1C();

    sub_1C078AA2C();
  }
  sub_1C077CF1C();
  sub_1C07757D0();
}

void sub_1C08B6008()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  id v12;
  id v13;
  id v14;
  uint64_t v15;

  sub_1C077AE5C();
  sub_1C0797B3C(v4);
  sub_1C07ACF80(&qword_1ED7482B0);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v5);
  sub_1C077962C();
  sub_1C07ACF80(&qword_1ED74D4C8);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v6);
  sub_1C0779614();
  sub_1C07ACF80((uint64_t *)&unk_1ED762690);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v7);
  sub_1C077FD28();
  MEMORY[0x1E0C80A78](v8);
  v9 = sub_1C079365C();
  sub_1C0796028(v9);
  sub_1C079962C(v0);
  v10 = sub_1C07ACF80(&qword_1ED75D0B8);
  sub_1C078AA40(v10);
  sub_1C079962C(v3);
  v11 = objc_allocWithZone(MEMORY[0x1E0D026F0]);
  v12 = sub_1C078F090();
  v13 = sub_1C07A5B48((uint64_t)v12, sel_publisherWithOptions_);
  sub_1C077F038();
  v14 = v1;
  sub_1C07ACF80((uint64_t *)&unk_1ED74D318);
  sub_1C07877D4();
  if (v2)
  {

  }
  else
  {
    v15 = sub_1C0780678();
    sub_1C07B826C(v15);
    type metadata accessor for DevicePluggedInEvent();
    sub_1C07E6EDC(&qword_1ED7482F8, &qword_1ED7482B0, MEMORY[0x1E0D3D840]);
    sub_1C077C0B0();
    sub_1C077E884();
    sub_1C078F074();
    sub_1C077AF1C();

    sub_1C078AA2C();
  }
  sub_1C077CF1C();
  sub_1C07757D0();
}

void sub_1C08B6178()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  id v12;
  id v13;
  id v14;
  uint64_t v15;

  sub_1C077AE5C();
  sub_1C0797B3C(v4);
  sub_1C07ACF80(&qword_1ED7482B0);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v5);
  sub_1C077962C();
  sub_1C07ACF80(&qword_1ED74D4F0);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v6);
  sub_1C0779614();
  sub_1C07ACF80((uint64_t *)&unk_1ED762690);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v7);
  sub_1C077FD28();
  MEMORY[0x1E0C80A78](v8);
  v9 = sub_1C079365C();
  sub_1C0796028(v9);
  sub_1C079962C(v0);
  v10 = sub_1C07ACF80(&qword_1ED75D0B8);
  sub_1C078AA40(v10);
  sub_1C079962C(v3);
  v11 = objc_allocWithZone(MEMORY[0x1E0D026F0]);
  v12 = sub_1C078F090();
  v13 = sub_1C07A5B48((uint64_t)v12, sel_publisherWithOptions_);
  sub_1C077F038();
  v14 = v1;
  sub_1C07ACF80((uint64_t *)&unk_1ED74D318);
  sub_1C07877D4();
  if (v2)
  {

  }
  else
  {
    v15 = sub_1C0780678();
    sub_1C07B826C(v15);
    type metadata accessor for UserFocusComputedModeEvent();
    sub_1C07E6EDC(&qword_1ED748328, &qword_1ED7482B0, MEMORY[0x1E0D3D840]);
    sub_1C077C0B0();
    sub_1C077E884();
    sub_1C078F074();
    sub_1C077AF1C();

    sub_1C078AA2C();
  }
  sub_1C077CF1C();
  sub_1C07757D0();
}

void sub_1C08B62E8()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  id v12;
  id v13;
  id v14;
  uint64_t v15;

  sub_1C077AE5C();
  sub_1C0797B3C(v4);
  sub_1C07ACF80(&qword_1ED7482B0);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v5);
  sub_1C077962C();
  sub_1C07ACF80(&qword_1ED74D4D0);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v6);
  sub_1C0779614();
  sub_1C07ACF80((uint64_t *)&unk_1ED762690);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v7);
  sub_1C077FD28();
  MEMORY[0x1E0C80A78](v8);
  v9 = sub_1C079365C();
  sub_1C0796028(v9);
  sub_1C079962C(v0);
  v10 = sub_1C07ACF80(&qword_1ED75D0B8);
  sub_1C078AA40(v10);
  sub_1C079962C(v3);
  v11 = objc_allocWithZone(MEMORY[0x1E0D026F0]);
  v12 = sub_1C078F090();
  v13 = sub_1C07A5B48((uint64_t)v12, sel_publisherWithOptions_);
  sub_1C077F038();
  v14 = v1;
  sub_1C07ACF80((uint64_t *)&unk_1ED74D318);
  sub_1C07877D4();
  if (v2)
  {

  }
  else
  {
    v15 = sub_1C0780678();
    sub_1C07B826C(v15);
    type metadata accessor for DeviceScreenLockEvent();
    sub_1C07E6EDC(&qword_1ED748320, &qword_1ED7482B0, MEMORY[0x1E0D3D840]);
    sub_1C077C0B0();
    sub_1C077E884();
    sub_1C078F074();
    sub_1C077AF1C();

    sub_1C078AA2C();
  }
  sub_1C077CF1C();
  sub_1C07757D0();
}

void sub_1C08B6458()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  id v12;
  id v13;
  id v14;
  uint64_t v15;

  sub_1C077AE5C();
  sub_1C0797B3C(v4);
  sub_1C07ACF80(&qword_1ED7482B0);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v5);
  sub_1C077962C();
  sub_1C07ACF80(&qword_1ED74D4E0);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v6);
  sub_1C0779614();
  sub_1C07ACF80((uint64_t *)&unk_1ED762690);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v7);
  sub_1C077FD28();
  MEMORY[0x1E0C80A78](v8);
  v9 = sub_1C079365C();
  sub_1C0796028(v9);
  sub_1C079962C(v0);
  v10 = sub_1C07ACF80(&qword_1ED75D0B8);
  sub_1C078AA40(v10);
  sub_1C079962C(v3);
  v11 = objc_allocWithZone(MEMORY[0x1E0D026F0]);
  v12 = sub_1C078F090();
  v13 = sub_1C07A5B48((uint64_t)v12, sel_publisherWithOptions_);
  sub_1C077F038();
  v14 = v1;
  sub_1C07ACF80((uint64_t *)&unk_1ED74D318);
  sub_1C07877D4();
  if (v2)
  {

  }
  else
  {
    v15 = sub_1C0780678();
    sub_1C07B826C(v15);
    type metadata accessor for DeviceAirplaneModeEvent();
    sub_1C07E6EDC(&qword_1ED748318, &qword_1ED7482B0, MEMORY[0x1E0D3D840]);
    sub_1C077C0B0();
    sub_1C077E884();
    sub_1C078F074();
    sub_1C077AF1C();

    sub_1C078AA2C();
  }
  sub_1C077CF1C();
  sub_1C07757D0();
}

void sub_1C08B65C8()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  id v12;
  id v13;
  id v14;
  uint64_t v15;

  sub_1C077AE5C();
  sub_1C0797B3C(v4);
  sub_1C07ACF80(&qword_1ED7482B0);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v5);
  sub_1C077962C();
  sub_1C07ACF80(&qword_1ED74D4E8);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v6);
  sub_1C0779614();
  sub_1C07ACF80((uint64_t *)&unk_1ED762690);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v7);
  sub_1C077FD28();
  MEMORY[0x1E0C80A78](v8);
  v9 = sub_1C079365C();
  sub_1C0796028(v9);
  sub_1C079962C(v0);
  v10 = sub_1C07ACF80(&qword_1ED75D0B8);
  sub_1C078AA40(v10);
  sub_1C079962C(v3);
  v11 = objc_allocWithZone(MEMORY[0x1E0D026F0]);
  v12 = sub_1C078F090();
  v13 = sub_1C07A5B48((uint64_t)v12, sel_publisherWithOptions_);
  sub_1C077F038();
  v14 = v1;
  sub_1C07ACF80((uint64_t *)&unk_1ED74D318);
  sub_1C07877D4();
  if (v2)
  {

  }
  else
  {
    v15 = sub_1C0780678();
    sub_1C07B826C(v15);
    type metadata accessor for DeviceWiFiConnectedEvent();
    sub_1C07E6EDC(&qword_1ED7482D8, &qword_1ED7482B0, MEMORY[0x1E0D3D840]);
    sub_1C077C0B0();
    sub_1C077E884();
    sub_1C078F074();
    sub_1C077AF1C();

    sub_1C078AA2C();
  }
  sub_1C077CF1C();
  sub_1C07757D0();
}

uint64_t sub_1C08B6738(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;

  v3[4] = a2;
  v3[5] = a3;
  v3[3] = a1;
  v3[6] = type metadata accessor for CarPlayEvent();
  v3[7] = swift_task_alloc();
  v4 = sub_1C106ADE0();
  v3[8] = v4;
  v3[9] = *(_QWORD *)(v4 - 8);
  v3[10] = swift_task_alloc();
  sub_1C07ACF80(&qword_1EF633350);
  v3[11] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1C08B67E4()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  os_log_type_t v17;
  BOOL v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  sub_1C077B704();
  v5 = objc_msgSend(*(id *)(v2 + 32), sel_eventBody);
  if (v5)
  {
    v6 = sub_1C07AAD6C(v5);
    sub_1C0780FE4((uint64_t)v6, sel_timestamp);
    sub_1C079CC48();
    objc_opt_self();
    v7 = sub_1C07B70C4();
    v8 = *(_QWORD *)(v2 + 88);
    if (v7)
    {
      v9 = sub_1C07A8594();
      v10 = sub_1C079866C(v9, sel_starting);
      *(_BYTE *)(v3 + *(int *)(v1 + 20)) = (_BYTE)v10;
      v11 = sub_1C079866C((uint64_t)v10, sel_reason);

      sub_1C07A304C();
      *(_DWORD *)(v3 + *(int *)(v1 + 24)) = v11;
      sub_1C07AA71C(v3, v12, (uint64_t (*)(_QWORD))type metadata accessor for CarPlayEvent);
      v13 = sub_1C0790770();
    }
    else
    {
      v1 = *(_QWORD *)(v2 + 48);

      sub_1C07A304C();
      v13 = sub_1C07B1684();
    }
    sub_1C0784EA0(v13, v14, 1, v1);
    if (sub_1C07B2D80(v8, 1, v1) == 1)
    {
      v22 = sub_1C079C3EC();
      sub_1C0784B94(v22, &qword_1EF633350);
      sub_1C07B1684();
    }
    else
    {
      v23 = sub_1C079C3EC();
      sub_1C07AA71C(v23, v24, (uint64_t (*)(_QWORD))type metadata accessor for CarPlayEvent);
      sub_1C0790770();
    }
    sub_1C079DB6C();
  }
  else
  {
    if (qword_1ED762B18 != -1)
      swift_once();
    v15 = sub_1C07A1C28();
    v16 = sub_1C078D340(v15, (uint64_t)qword_1ED762AF8);
    sub_1C106F538();
    v17 = sub_1C0784E0C();
    v18 = sub_1C07758D8(v17);
    v19 = *(void **)(v2 + 40);
    if (v18)
    {
      sub_1C0787AC4();
      sub_1C07A7DC4();
      sub_1C079A8D0(5.7779e-34);
      sub_1C079620C();
      sub_1C07A9E00();

      sub_1C079C3D8(&dword_1C0771000, v20, v21, "Unable to parse eventBody from %@");
      sub_1C07ACF80(&qword_1ED7614A0);
      sub_1C078AC6C();
      sub_1C0776778();
    }

    v25 = sub_1C0791AF4();
  }
  sub_1C0792DD0(v25, v26, v27, v28);
  sub_1C07767BC();
  sub_1C07796F8();
  return sub_1C0781074(*(uint64_t (**)(void))(v2 + 8));
}

uint64_t sub_1C08B69D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  v3[4] = a2;
  v3[5] = a3;
  v3[3] = a1;
  sub_1C106ADE0();
  v3[6] = swift_task_alloc();
  sub_1C07ACF80(&qword_1EF633370);
  v3[7] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1C08B6A58()
{
  void *v0;
  uint64_t v1;
  void *v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  os_log_type_t v15;
  BOOL v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  sub_1C077B704();
  v3 = objc_msgSend(*(id *)(v1 + 32), sel_eventBody);
  if (v3)
  {
    v5 = *(_QWORD *)(v1 + 48);
    v4 = *(_QWORD *)(v1 + 56);
    v6 = v3;
    sub_1C0780FE4((uint64_t)v6, sel_timestamp);
    sub_1C106AC54();
    sub_1C0D02094(v6, v5, v4);

    v7 = type metadata accessor for SemanticLocationEvent();
    v8 = sub_1C07B1684();
    v11 = sub_1C07B2D80(v8, v9, v7);
    v12 = *(_QWORD *)(v1 + 56);
    if (v11 == 1)
    {
      sub_1C0784B94(v12, &qword_1EF633370);
      sub_1C07B1684();
    }
    else
    {
      sub_1C07AA71C(v12, v10, (uint64_t (*)(_QWORD))type metadata accessor for SemanticLocationEvent);
      sub_1C0790770();
    }
    sub_1C079DB6C();
  }
  else
  {
    if (qword_1ED762B18 != -1)
      swift_once();
    v13 = sub_1C07A1C28();
    v14 = sub_1C078D340(v13, (uint64_t)qword_1ED762AF8);
    sub_1C106F538();
    v15 = sub_1C0784E0C();
    v16 = sub_1C07758D8(v15);
    v17 = *(void **)(v1 + 40);
    if (v16)
    {
      sub_1C0787AC4();
      sub_1C07A7DC4();
      sub_1C079A8D0(5.7779e-34);
      sub_1C079620C();
      sub_1C07A9E00();

      sub_1C079C3D8(&dword_1C0771000, v18, v19, "Unable to parse eventBody from %@");
      sub_1C07ACF80(&qword_1ED7614A0);
      sub_1C078AC6C();
      sub_1C0776778();
    }

    v24 = *(_QWORD *)(v1 + 24);
    v23 = type metadata accessor for SemanticLocationEvent();
    v20 = v24;
    v21 = 1;
    v22 = 1;
  }
  sub_1C07B2D8C(v20, v21, v22, v23);
  swift_task_dealloc();
  sub_1C07767BC();
  return sub_1C0781074(*(uint64_t (**)(void))(v1 + 8));
}

uint64_t sub_1C08B6C0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;

  v3[4] = a2;
  v3[5] = a3;
  v3[3] = a1;
  v3[6] = type metadata accessor for DeviceBluetoothEvent();
  v3[7] = swift_task_alloc();
  v4 = sub_1C106ADE0();
  v3[8] = v4;
  v3[9] = *(_QWORD *)(v4 - 8);
  v3[10] = swift_task_alloc();
  sub_1C07ACF80(&qword_1EF6333D8);
  v3[11] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1C08B6CB8()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  id v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  unsigned __int8 v14;
  id v15;
  void *v16;
  uint64_t v17;
  id v18;
  os_log_type_t v19;
  BOOL v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;

  sub_1C077B704();
  v6 = objc_msgSend(*(id *)(v2 + 32), sel_eventBody);
  if (v6)
  {
    v7 = sub_1C07AAD6C(v6);
    sub_1C0780FE4((uint64_t)v7, sel_timestamp);
    sub_1C079CC48();
    objc_opt_self();
    v8 = sub_1C07B70C4();
    v10 = *(_QWORD *)(v2 + 72);
    v9 = *(_QWORD *)(v2 + 80);
    v11 = *(_QWORD *)(v2 + 64);
    if (v8)
    {
      v12 = sub_1C077B090();
      v13 = sub_1C0780FE4(v12, sel_starting);
      *(_BYTE *)(v3 + *(int *)(v4 + 20)) = (_BYTE)v13;
      v14 = sub_1C0780FE4((uint64_t)v13, sel_userWearing);
      v15 = objc_msgSend(v1, sel_address);
      if (v15)
      {
        v16 = v15;
        sub_1C106FB14();
        sub_1C0775994();

      }
      else
      {

        v1 = 0;
        v11 = 0;
      }
      v30 = sub_1C077F11C();
      v31 = v10 + *(int *)(v4 + 24);
      *(_BYTE *)v31 = v14;
      *(_QWORD *)(v31 + 8) = v1;
      *(_QWORD *)(v31 + 16) = v11;
      sub_1C0781588(v30, v32, (uint64_t (*)(_QWORD))type metadata accessor for DeviceBluetoothEvent);
      v25 = 0;
    }
    else
    {

      v24 = sub_1C0786458(v9, *(uint64_t (**)(uint64_t, uint64_t))(v10 + 8));
      v25 = 1;
    }
    sub_1C07B46D8(v24, v25);
    v33 = sub_1C079F384();
    if (v35)
    {
      sub_1C0784B94(v33, &qword_1EF6333D8);
      sub_1C07B1684();
    }
    else
    {
      sub_1C07AA71C(v33, v34, (uint64_t (*)(_QWORD))type metadata accessor for DeviceBluetoothEvent);
      sub_1C0790770();
    }
    sub_1C079DB6C();
  }
  else
  {
    if (qword_1ED762B18 != -1)
      swift_once();
    v17 = sub_1C07A1C28();
    v18 = sub_1C078D340(v17, (uint64_t)qword_1ED762AF8);
    sub_1C106F538();
    v19 = sub_1C0784E0C();
    v20 = sub_1C07758D8(v19);
    v21 = *(void **)(v2 + 40);
    if (v20)
    {
      sub_1C0787AC4();
      sub_1C07A7DC4();
      sub_1C079A8D0(5.7779e-34);
      sub_1C079620C();
      sub_1C07A9E00();

      sub_1C079C3D8(&dword_1C0771000, v22, v23, "Unable to parse eventBody from %@");
      sub_1C07ACF80(&qword_1ED7614A0);
      sub_1C078AC6C();
      sub_1C0776778();
    }

    v26 = sub_1C0791AF4();
  }
  sub_1C0792DD0(v26, v27, v28, v29);
  sub_1C07767BC();
  sub_1C07796F8();
  return sub_1C0781074(*(uint64_t (**)(void))(v2 + 8));
}

uint64_t sub_1C08B6ECC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;

  v3[4] = a2;
  v3[5] = a3;
  v3[3] = a1;
  v3[6] = type metadata accessor for DevicePluggedInEvent();
  v3[7] = swift_task_alloc();
  v4 = sub_1C106ADE0();
  v3[8] = v4;
  v3[9] = *(_QWORD *)(v4 - 8);
  v3[10] = swift_task_alloc();
  sub_1C07ACF80(&qword_1EF6333F8);
  v3[11] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1C08B6F78()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  unsigned __int8 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  os_log_type_t v17;
  BOOL v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  sub_1C077B704();
  v5 = objc_msgSend(*(id *)(v2 + 32), sel_eventBody);
  if (v5)
  {
    v6 = sub_1C07AAD6C(v5);
    sub_1C0780FE4((uint64_t)v6, sel_timestamp);
    sub_1C079CC48();
    objc_opt_self();
    v7 = sub_1C07B70C4();
    v8 = *(_QWORD *)(v2 + 88);
    if (v7)
    {
      v9 = sub_1C07A8594();
      v10 = sub_1C079866C(v9, sel_starting);
      *(_BYTE *)(v3 + *(int *)(v1 + 20)) = (_BYTE)v10;
      v11 = sub_1C079866C((uint64_t)v10, sel_wireless);

      sub_1C07A304C();
      *(_BYTE *)(v3 + *(int *)(v1 + 24)) = v11;
      sub_1C07AA71C(v3, v12, (uint64_t (*)(_QWORD))type metadata accessor for DevicePluggedInEvent);
      v13 = sub_1C0790770();
    }
    else
    {
      v1 = *(_QWORD *)(v2 + 48);

      sub_1C07A304C();
      v13 = sub_1C07B1684();
    }
    sub_1C0784EA0(v13, v14, 1, v1);
    if (sub_1C07B2D80(v8, 1, v1) == 1)
    {
      v22 = sub_1C079C3EC();
      sub_1C0784B94(v22, &qword_1EF6333F8);
      sub_1C07B1684();
    }
    else
    {
      v23 = sub_1C079C3EC();
      sub_1C07AA71C(v23, v24, (uint64_t (*)(_QWORD))type metadata accessor for DevicePluggedInEvent);
      sub_1C0790770();
    }
    sub_1C079DB6C();
  }
  else
  {
    if (qword_1ED762B18 != -1)
      swift_once();
    v15 = sub_1C07A1C28();
    v16 = sub_1C078D340(v15, (uint64_t)qword_1ED762AF8);
    sub_1C106F538();
    v17 = sub_1C0784E0C();
    v18 = sub_1C07758D8(v17);
    v19 = *(void **)(v2 + 40);
    if (v18)
    {
      sub_1C0787AC4();
      sub_1C07A7DC4();
      sub_1C079A8D0(5.7779e-34);
      sub_1C079620C();
      sub_1C07A9E00();

      sub_1C079C3D8(&dword_1C0771000, v20, v21, "Unable to parse eventBody from %@");
      sub_1C07ACF80(&qword_1ED7614A0);
      sub_1C078AC6C();
      sub_1C0776778();
    }

    v25 = sub_1C0791AF4();
  }
  sub_1C0792DD0(v25, v26, v27, v28);
  sub_1C07767BC();
  sub_1C07796F8();
  return sub_1C0781074(*(uint64_t (**)(void))(v2 + 8));
}

uint64_t sub_1C08B716C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;

  v3[4] = a2;
  v3[5] = a3;
  v3[3] = a1;
  v3[6] = type metadata accessor for UserFocusComputedModeEvent();
  v3[7] = swift_task_alloc();
  v4 = sub_1C106ADE0();
  v3[8] = v4;
  v3[9] = *(_QWORD *)(v4 - 8);
  v3[10] = swift_task_alloc();
  sub_1C07ACF80(&qword_1EF633390);
  v3[11] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1C08B7218()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  id v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  unsigned int v14;
  id v15;
  void *v16;
  uint64_t v17;
  id v18;
  os_log_type_t v19;
  BOOL v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;

  sub_1C077B704();
  v6 = objc_msgSend(*(id *)(v2 + 32), sel_eventBody);
  if (v6)
  {
    v7 = sub_1C07AAD6C(v6);
    sub_1C0780FE4((uint64_t)v7, sel_timestamp);
    sub_1C079CC48();
    objc_opt_self();
    v8 = sub_1C07B70C4();
    v10 = *(_QWORD *)(v2 + 72);
    v9 = *(_QWORD *)(v2 + 80);
    v11 = *(_QWORD *)(v2 + 64);
    if (v8)
    {
      v12 = sub_1C077B090();
      v13 = sub_1C0780FE4(v12, sel_starting);
      *(_BYTE *)(v3 + *(int *)(v4 + 20)) = (_BYTE)v13;
      v14 = sub_1C0780FE4((uint64_t)v13, sel_semanticType);
      v15 = objc_msgSend(v1, sel_mode);
      if (v15)
      {
        v16 = v15;
        sub_1C106FB14();
        sub_1C0775994();

      }
      else
      {

        v1 = 0;
        v11 = 0;
      }
      v30 = sub_1C077F11C();
      v31 = v10 + *(int *)(v4 + 24);
      *(_DWORD *)v31 = v14;
      *(_QWORD *)(v31 + 8) = v1;
      *(_QWORD *)(v31 + 16) = v11;
      sub_1C0781588(v30, v32, (uint64_t (*)(_QWORD))type metadata accessor for UserFocusComputedModeEvent);
      v25 = 0;
    }
    else
    {

      v24 = sub_1C0786458(v9, *(uint64_t (**)(uint64_t, uint64_t))(v10 + 8));
      v25 = 1;
    }
    sub_1C07B46D8(v24, v25);
    v33 = sub_1C079F384();
    if (v35)
    {
      sub_1C0784B94(v33, &qword_1EF633390);
      sub_1C07B1684();
    }
    else
    {
      sub_1C07AA71C(v33, v34, (uint64_t (*)(_QWORD))type metadata accessor for UserFocusComputedModeEvent);
      sub_1C0790770();
    }
    sub_1C079DB6C();
  }
  else
  {
    if (qword_1ED762B18 != -1)
      swift_once();
    v17 = sub_1C07A1C28();
    v18 = sub_1C078D340(v17, (uint64_t)qword_1ED762AF8);
    sub_1C106F538();
    v19 = sub_1C0784E0C();
    v20 = sub_1C07758D8(v19);
    v21 = *(void **)(v2 + 40);
    if (v20)
    {
      sub_1C0787AC4();
      sub_1C07A7DC4();
      sub_1C079A8D0(5.7779e-34);
      sub_1C079620C();
      sub_1C07A9E00();

      sub_1C079C3D8(&dword_1C0771000, v22, v23, "Unable to parse eventBody from %@");
      sub_1C07ACF80(&qword_1ED7614A0);
      sub_1C078AC6C();
      sub_1C0776778();
    }

    v26 = sub_1C0791AF4();
  }
  sub_1C0792DD0(v26, v27, v28, v29);
  sub_1C07767BC();
  sub_1C07796F8();
  return sub_1C0781074(*(uint64_t (**)(void))(v2 + 8));
}

uint64_t sub_1C08B742C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;

  v3[4] = a2;
  v3[5] = a3;
  v3[3] = a1;
  v3[6] = type metadata accessor for DeviceScreenLockEvent();
  v3[7] = swift_task_alloc();
  v4 = sub_1C106ADE0();
  v3[8] = v4;
  v3[9] = *(_QWORD *)(v4 - 8);
  v3[10] = swift_task_alloc();
  sub_1C07ACF80(&qword_1EF633418);
  v3[11] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1C08B74D8()
{
  void *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  id v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  os_log_type_t v15;
  BOOL v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  sub_1C077B704();
  v6 = objc_msgSend(*(id *)(v1 + 32), sel_eventBody);
  if (v6)
  {
    v7 = sub_1C07AAD6C(v6);
    sub_1C0780FE4((uint64_t)v7, sel_timestamp);
    sub_1C079CC48();
    objc_opt_self();
    v8 = sub_1C07B70C4();
    v9 = *(_QWORD *)(v1 + 88);
    if (v8)
    {
      sub_1C07AB730();
      objc_msgSend(v2, sel_starting);

      sub_1C07B71BC();
      sub_1C07797CC();
      sub_1C07AA71C(v3, v10, (uint64_t (*)(_QWORD))type metadata accessor for DeviceScreenLockEvent);
      sub_1C0784EA0(v9, 0, 1, v4);
      v11 = v9;
      v12 = v4;
    }
    else
    {
      v20 = *(_QWORD *)(v1 + 48);

      sub_1C07B71BC();
      sub_1C0784EA0(v9, 1, 1, v20);
      v11 = v9;
      v12 = v20;
    }
    if (sub_1C07B2D80(v11, 1, v12) == 1)
    {
      v21 = sub_1C079C3EC();
      sub_1C0784B94(v21, &qword_1EF633418);
      sub_1C07B1684();
    }
    else
    {
      v22 = sub_1C079C3EC();
      sub_1C07AA71C(v22, v23, (uint64_t (*)(_QWORD))type metadata accessor for DeviceScreenLockEvent);
      sub_1C0790770();
    }
    sub_1C079DB6C();
  }
  else
  {
    if (qword_1ED762B18 != -1)
      swift_once();
    v13 = sub_1C07A1C28();
    v14 = sub_1C078D340(v13, (uint64_t)qword_1ED762AF8);
    sub_1C106F538();
    v15 = sub_1C0784E0C();
    v16 = sub_1C07758D8(v15);
    v17 = *(void **)(v1 + 40);
    if (v16)
    {
      sub_1C0787AC4();
      sub_1C07A7DC4();
      sub_1C079A8D0(5.7779e-34);
      sub_1C079620C();
      sub_1C07A9E00();

      sub_1C079C3D8(&dword_1C0771000, v18, v19, "Unable to parse eventBody from %@");
      sub_1C07ACF80(&qword_1ED7614A0);
      sub_1C078AC6C();
      sub_1C0776778();
    }

    v24 = sub_1C0791AF4();
  }
  sub_1C0792DD0(v24, v25, v26, v27);
  sub_1C07767BC();
  sub_1C07796F8();
  return sub_1C0781074(*(uint64_t (**)(void))(v1 + 8));
}

uint64_t sub_1C08B76D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;

  v3[4] = a2;
  v3[5] = a3;
  v3[3] = a1;
  v3[6] = type metadata accessor for DeviceAirplaneModeEvent();
  v3[7] = swift_task_alloc();
  v4 = sub_1C106ADE0();
  v3[8] = v4;
  v3[9] = *(_QWORD *)(v4 - 8);
  v3[10] = swift_task_alloc();
  sub_1C07ACF80(&qword_1EF6333B8);
  v3[11] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1C08B7784()
{
  void *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  id v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  os_log_type_t v15;
  BOOL v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  sub_1C077B704();
  v6 = objc_msgSend(*(id *)(v1 + 32), sel_eventBody);
  if (v6)
  {
    v7 = sub_1C07AAD6C(v6);
    sub_1C0780FE4((uint64_t)v7, sel_timestamp);
    sub_1C079CC48();
    objc_opt_self();
    v8 = sub_1C07B70C4();
    v9 = *(_QWORD *)(v1 + 88);
    if (v8)
    {
      sub_1C07AB730();
      objc_msgSend(v2, sel_starting);

      sub_1C07B71BC();
      sub_1C07797CC();
      sub_1C07AA71C(v3, v10, (uint64_t (*)(_QWORD))type metadata accessor for DeviceAirplaneModeEvent);
      sub_1C0784EA0(v9, 0, 1, v4);
      v11 = v9;
      v12 = v4;
    }
    else
    {
      v20 = *(_QWORD *)(v1 + 48);

      sub_1C07B71BC();
      sub_1C0784EA0(v9, 1, 1, v20);
      v11 = v9;
      v12 = v20;
    }
    if (sub_1C07B2D80(v11, 1, v12) == 1)
    {
      v21 = sub_1C079C3EC();
      sub_1C0784B94(v21, &qword_1EF6333B8);
      sub_1C07B1684();
    }
    else
    {
      v22 = sub_1C079C3EC();
      sub_1C07AA71C(v22, v23, (uint64_t (*)(_QWORD))type metadata accessor for DeviceAirplaneModeEvent);
      sub_1C0790770();
    }
    sub_1C079DB6C();
  }
  else
  {
    if (qword_1ED762B18 != -1)
      swift_once();
    v13 = sub_1C07A1C28();
    v14 = sub_1C078D340(v13, (uint64_t)qword_1ED762AF8);
    sub_1C106F538();
    v15 = sub_1C0784E0C();
    v16 = sub_1C07758D8(v15);
    v17 = *(void **)(v1 + 40);
    if (v16)
    {
      sub_1C0787AC4();
      sub_1C07A7DC4();
      sub_1C079A8D0(5.7779e-34);
      sub_1C079620C();
      sub_1C07A9E00();

      sub_1C079C3D8(&dword_1C0771000, v18, v19, "Unable to parse eventBody from %@");
      sub_1C07ACF80(&qword_1ED7614A0);
      sub_1C078AC6C();
      sub_1C0776778();
    }

    v24 = sub_1C0791AF4();
  }
  sub_1C0792DD0(v24, v25, v26, v27);
  sub_1C07767BC();
  sub_1C07796F8();
  return sub_1C0781074(*(uint64_t (**)(void))(v1 + 8));
}

uint64_t sub_1C08B7984(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;

  v3[4] = a2;
  v3[5] = a3;
  v3[3] = a1;
  v3[6] = type metadata accessor for DeviceWiFiConnectedEvent();
  v3[7] = swift_task_alloc();
  v4 = sub_1C106ADE0();
  v3[8] = v4;
  v3[9] = *(_QWORD *)(v4 - 8);
  v3[10] = swift_task_alloc();
  sub_1C07ACF80(qword_1EF633438);
  v3[11] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1C08B7A30()
{
  void *v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  os_log_type_t v18;
  BOOL v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  char v35;

  sub_1C077B704();
  v3 = objc_msgSend(*(id *)(v1 + 32), sel_eventBody);
  if (v3)
  {
    v4 = sub_1C07AAD6C(v3);
    sub_1C0780FE4((uint64_t)v4, sel_timestamp);
    sub_1C079CC48();
    objc_opt_self();
    v5 = sub_1C07B70C4();
    v7 = *(_QWORD *)(v1 + 72);
    v6 = *(_QWORD *)(v1 + 80);
    if (v5)
    {
      v8 = (void *)v5;
      v10 = *(_QWORD *)(v1 + 48);
      v9 = *(_QWORD *)(v1 + 56);
      (*(void (**)(uint64_t, _QWORD, _QWORD))(v7 + 16))(v9, *(_QWORD *)(v1 + 80), *(_QWORD *)(v1 + 64));
      *(_BYTE *)(v9 + *(int *)(v10 + 20)) = objc_msgSend(v8, sel_starting);
      v11 = objc_msgSend(v8, sel_SSID);
      if (v11)
      {
        v12 = v11;
        v13 = sub_1C106FB14();
        v15 = v14;

      }
      else
      {

        v13 = 0;
        v15 = 0;
      }
      v29 = *(_QWORD *)(v1 + 88);
      v31 = *(_QWORD *)(v1 + 48);
      v30 = *(_QWORD *)(v1 + 56);
      (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v1 + 72) + 8))(*(_QWORD *)(v1 + 80), *(_QWORD *)(v1 + 64));
      v32 = (uint64_t *)(v30 + *(int *)(v31 + 24));
      *v32 = v13;
      v32[1] = v15;
      sub_1C087C414(v30, v29, (uint64_t (*)(_QWORD))type metadata accessor for DeviceWiFiConnectedEvent);
      v24 = 0;
    }
    else
    {

      v23 = sub_1C0786458(v6, *(uint64_t (**)(uint64_t, uint64_t))(v7 + 8));
      v24 = 1;
    }
    sub_1C07B46D8(v23, v24);
    v33 = sub_1C079F384();
    if (v35)
    {
      sub_1C0784B94(v33, qword_1EF633438);
      sub_1C07B1684();
    }
    else
    {
      sub_1C07AA71C(v33, v34, (uint64_t (*)(_QWORD))type metadata accessor for DeviceWiFiConnectedEvent);
      sub_1C0790770();
    }
    sub_1C079DB6C();
  }
  else
  {
    if (qword_1ED762B18 != -1)
      swift_once();
    v16 = sub_1C07A1C28();
    v17 = sub_1C078D340(v16, (uint64_t)qword_1ED762AF8);
    sub_1C106F538();
    v18 = sub_1C0784E0C();
    v19 = sub_1C07758D8(v18);
    v20 = *(void **)(v1 + 40);
    if (v19)
    {
      sub_1C0787AC4();
      sub_1C07A7DC4();
      sub_1C079A8D0(5.7779e-34);
      sub_1C079620C();
      sub_1C07A9E00();

      sub_1C079C3D8(&dword_1C0771000, v21, v22, "Unable to parse eventBody from %@");
      sub_1C07ACF80(&qword_1ED7614A0);
      sub_1C078AC6C();
      sub_1C0776778();
    }

    v25 = sub_1C0791AF4();
  }
  sub_1C0792DD0(v25, v26, v27, v28);
  sub_1C07767BC();
  sub_1C07796F8();
  return sub_1C0781074(*(uint64_t (**)(void))(v1 + 8));
}

uint64_t sub_1C08B7C6C(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  _QWORD *v7;

  v6 = *a2;
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_1C08B8620;
  return sub_1C08B6738(a1, v6, a3);
}

uint64_t sub_1C08B7CD4()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_1C08B7CF8()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);

  sub_1C079432C();
  v0 = sub_1C078DEB8();
  v1 = (_QWORD *)sub_1C0794C48(v0);
  v2 = sub_1C0798464(v1);
  return sub_1C078C734(v2, v3, v4, v5);
}

uint64_t type metadata accessor for CarPlayEvent()
{
  uint64_t result;

  result = qword_1ED749450;
  if (!qword_1ED749450)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1C08B7D70(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  _QWORD *v7;

  v6 = *a2;
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_1C08B8620;
  return sub_1C08B69D8(a1, v6, a3);
}

uint64_t sub_1C08B7DD8()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);

  sub_1C079432C();
  v0 = sub_1C078DEB8();
  v1 = (_QWORD *)sub_1C0794C48(v0);
  v2 = sub_1C0798464(v1);
  return sub_1C078C734(v2, v3, v4, v5);
}

uint64_t sub_1C08B7E18(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  _QWORD *v7;

  v6 = *a2;
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_1C08B8620;
  return sub_1C08B6C0C(a1, v6, a3);
}

uint64_t sub_1C08B7E80(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  _QWORD *v7;

  v6 = *a2;
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_1C08B8620;
  return sub_1C08B6ECC(a1, v6, a3);
}

uint64_t sub_1C08B7EE8(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  _QWORD *v7;

  v6 = *a2;
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_1C08B8620;
  return sub_1C08B716C(a1, v6, a3);
}

uint64_t sub_1C08B7F50()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);

  sub_1C079432C();
  v0 = sub_1C078DEB8();
  v1 = (_QWORD *)sub_1C0794C48(v0);
  v2 = sub_1C0798464(v1);
  return sub_1C078C734(v2, v3, v4, v5);
}

_QWORD *sub_1C08B7F90(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1C106ADE0();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 24);
    *((_BYTE *)a1 + *(int *)(a3 + 20)) = *((_BYTE *)a2 + *(int *)(a3 + 20));
    *(_DWORD *)((char *)a1 + v8) = *(_DWORD *)((char *)a2 + v8);
  }
  return a1;
}

uint64_t sub_1C08B8020(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1C106ADE0();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

uint64_t sub_1C08B8054(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_1C106ADE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 24);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  *(_DWORD *)(a1 + v7) = *(_DWORD *)(a2 + v7);
  return a1;
}

uint64_t sub_1C08B80B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_1C106ADE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  *(_DWORD *)(a1 + *(int *)(a3 + 24)) = *(_DWORD *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_1C08B8120(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_1C106ADE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 24);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  *(_DWORD *)(a1 + v7) = *(_DWORD *)(a2 + v7);
  return a1;
}

uint64_t sub_1C08B8184(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_1C106ADE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 24);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  *(_DWORD *)(a1 + v7) = *(_DWORD *)(a2 + v7);
  return a1;
}

uint64_t sub_1C08B81E8()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1C08B81F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  unsigned int v8;

  v6 = sub_1C077AE98();
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
    return sub_1C07B2D80(a1, a2, v6);
  v8 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 20));
  if (v8 >= 2)
    return ((v8 + 2147483646) & 0x7FFFFFFF) + 1;
  else
    return 0;
}

uint64_t sub_1C08B8278()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_1C08B8284(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;

  v8 = sub_1C077AE98();
  if (*(_DWORD *)(*(_QWORD *)(v8 - 8) + 84) == a3)
  {
    sub_1C07B2D8C(a1, a2, a2, v8);
  }
  else
  {
    *(_BYTE *)(a1 + *(int *)(a4 + 20)) = a2 + 1;
    sub_1C077671C();
  }
}

uint64_t sub_1C08B82EC()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1C106ADE0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void sub_1C08B836C()
{
  sub_1C07E6EDC(&qword_1EF633398, &qword_1ED747B68, (uint64_t)&unk_1C1091748);
}

ValueMetadata *type metadata accessor for CarPlayContent()
{
  return &type metadata for CarPlayContent;
}

uint64_t sub_1C08B83A8(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  _QWORD *v7;

  v6 = *a2;
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_1C08B8620;
  return sub_1C08B742C(a1, v6, a3);
}

uint64_t sub_1C08B8410(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  _QWORD *v7;

  v6 = *a2;
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_1C08B8620;
  return sub_1C08B76D8(a1, v6, a3);
}

uint64_t sub_1C08B8478()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);

  sub_1C079432C();
  v0 = sub_1C078DEB8();
  v1 = (_QWORD *)sub_1C0794C48(v0);
  v2 = sub_1C0798464(v1);
  return sub_1C078C734(v2, v3, v4, v5);
}

uint64_t sub_1C08B84B8()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);

  sub_1C079432C();
  v0 = sub_1C078DEB8();
  v1 = (_QWORD *)sub_1C0794C48(v0);
  v2 = sub_1C0798464(v1);
  return sub_1C078C734(v2, v3, v4, v5);
}

uint64_t sub_1C08B84F8()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);

  sub_1C079432C();
  v0 = sub_1C078DEB8();
  v1 = (_QWORD *)sub_1C0794C48(v0);
  v2 = sub_1C0798464(v1);
  return sub_1C078C734(v2, v3, v4, v5);
}

uint64_t sub_1C08B8538()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);

  sub_1C079432C();
  v0 = sub_1C078DEB8();
  v1 = (_QWORD *)sub_1C0794C48(v0);
  v2 = sub_1C0798464(v1);
  return sub_1C078C734(v2, v3, v4, v5);
}

uint64_t sub_1C08B8578(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  _QWORD *v7;

  v6 = *a2;
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_1C08B8620;
  return sub_1C08B7984(a1, v6, a3);
}

uint64_t sub_1C08B85E0()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);

  sub_1C079432C();
  v0 = sub_1C078DEB8();
  v1 = (_QWORD *)sub_1C0794C48(v0);
  v2 = sub_1C0798464(v1);
  return sub_1C078C734(v2, v3, v4, v5);
}

uint64_t sub_1C08B8640()
{
  return swift_getOpaqueTypeConformance2();
}

void sub_1C08B8650(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;

  v5 = sub_1C07ACF80(&qword_1ED747B68);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v8 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C08B58F8(a1);
  if (!v2)
    sub_1C08B8708((uint64_t)v7, a2);
}

void sub_1C08B86E8(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_1C08B8650(a1, a2);
}

uint64_t sub_1C08B8708(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1C07ACF80(&qword_1ED747B68);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_1C08B8754()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED748080;
  if (!qword_1ED748080)
  {
    v1 = sub_1C07D4BEC(&qword_1ED748050);
    result = MEMORY[0x1C3BA8174](&unk_1C1091558, v1);
    atomic_store(result, (unint64_t *)&qword_1ED748080);
  }
  return result;
}

uint64_t sub_1C08B8798(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  void (*v22)(char *, uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v4 = v3;
  v27 = a3;
  v6 = type metadata accessor for FeatureProviderSnapshot(0);
  v25 = *(_QWORD *)(v6 - 8);
  v26 = v6;
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(_QWORD *)(a1 + 16);
  if (v9)
  {
    v28 = MEMORY[0x1E0DEE9D8];
    sub_1C09D3218();
    v10 = v28;
    v11 = sub_1C106ADE0();
    v12 = *(_QWORD *)(v11 - 8);
    v13 = a1 + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80));
    v23 = *(_QWORD *)(v12 + 72);
    v24 = v11;
    v22 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 16);
    do
    {
      v22(v8, v13, v24);
      v14 = sub_1C08B928C(v13);
      v15 = v27;
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      v16 = v15;
      v17 = v4;
      sub_1C07E7D3C(v14, v16);
      swift_bridgeObjectRelease();
      sub_1C089B840();
      v19 = v18;
      swift_release();
      *(_QWORD *)&v8[*(int *)(v26 + 20)] = v19;
      v28 = v10;
      v20 = *(_QWORD *)(v10 + 16);
      if (v20 >= *(_QWORD *)(v10 + 24) >> 1)
      {
        sub_1C09D3218();
        v10 = v28;
      }
      *(_QWORD *)(v10 + 16) = v20 + 1;
      sub_1C07E7EF8((uint64_t)v8, v10+ ((*(unsigned __int8 *)(v25 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80))+ *(_QWORD *)(v25 + 72) * v20);
      v13 += v23;
      --v9;
      v4 = v17;
    }
    while (v9);
    swift_release();
  }
  else
  {
    swift_release();
    v10 = MEMORY[0x1E0DEE9D8];
  }
  swift_bridgeObjectRelease();
  return v10;
}

void sub_1C08B8990(char a1)
{
  uint64_t v1;
  id v3;
  id v4;

  v3 = objc_msgSend((id)BiomeLibrary(), sel_CarPlay);
  swift_unknownObjectRelease();
  v4 = objc_msgSend(v3, sel_Connected);
  swift_unknownObjectRelease();
  *(_QWORD *)(v1 + 24) = v4;
  *(_BYTE *)(v1 + 16) = a1;
  sub_1C077671C();
}

void sub_1C08B8A64()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v3 = MEMORY[0x1E0DEE9D8];
  sub_1C09D30E0();
  v0 = v3;
  v1 = *(_QWORD *)(v3 + 16);
  if (v1 >= *(_QWORD *)(v3 + 24) >> 1)
  {
    sub_1C09D30E0();
    v0 = v3;
  }
  *(_QWORD *)(v0 + 16) = v1 + 1;
  v2 = v0 + 16 * v1;
  *(_QWORD *)(v2 + 32) = 0xD000000000000014;
  *(_QWORD *)(v2 + 40) = 0x80000001C10E7690;
  sub_1C0898D28(v0);
}

uint64_t sub_1C08B8B04(uint64_t a1)
{
  uint64_t v1;
  void *v3;
  uint64_t v5;

  v3 = (void *)MEMORY[0x1C3BA79F4]();
  sub_1C08B8B58(v1, a1, &v5);
  objc_autoreleasePoolPop(v3);
  return v5;
}

uint64_t sub_1C08B8B58@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  id v15;
  id v16;
  id v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  void *v21;
  id v22;
  void *v23;
  id v24;
  uint64_t v26;
  uint64_t aBlock;
  uint64_t v28;
  void (*v29)(uint64_t, void *);
  void *v30;
  void (*v31)(void *);
  uint64_t v32;

  v6 = sub_1C07ACF80((uint64_t *)&unk_1ED762690);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v26 - v10;
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = 0;
  v13 = *(void **)(a1 + 24);
  v14 = sub_1C106ADE0();
  sub_1C07B2D8C((uint64_t)v11, 1, 1, v14);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v8, a2, v14);
  sub_1C07B2D8C((uint64_t)v8, 0, 1, v14);
  v15 = objc_allocWithZone(MEMORY[0x1E0D026F0]);
  v16 = sub_1C07DC9F8((uint64_t)v11, (uint64_t)v8, 1, 1, 0);
  v17 = objc_msgSend(v13, sel_publisherWithOptions_, v16);

  v31 = sub_1C08B9BA0;
  v32 = a1;
  v18 = MEMORY[0x1E0C809B0];
  aBlock = MEMORY[0x1E0C809B0];
  v28 = 1107296256;
  v29 = (void (*)(uint64_t, void *))sub_1C07BF90C;
  v30 = &unk_1E7A11DF0;
  v19 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  v20 = swift_allocObject();
  *(_QWORD *)(v20 + 16) = a1;
  *(_QWORD *)(v20 + 24) = v12;
  v31 = sub_1C08B9BD4;
  v32 = v20;
  aBlock = v18;
  v28 = 1107296256;
  v29 = sub_1C0779530;
  v30 = &unk_1E7A11E40;
  v21 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  v22 = objc_msgSend(v17, sel_sinkWithCompletion_receiveInput_, v19, v21);

  _Block_release(v21);
  _Block_release(v19);

  swift_beginAccess();
  v23 = *(void **)(v12 + 16);
  *a3 = v23;
  v24 = v23;
  return swift_release();
}

void sub_1C08B8DF0(void *a1, uint64_t a2)
{
  id v3;
  void *v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  id v14;
  uint64_t v15;
  unint64_t v16;
  id v17;
  uint64_t v18;

  v3 = objc_msgSend(a1, sel_error);
  if (v3)
  {
    v4 = v3;
    if (qword_1ED762B18 != -1)
      swift_once();
    v5 = sub_1C106F544();
    sub_1C079E000(v5, (uint64_t)qword_1ED762AF8);
    swift_retain_n();
    v17 = v4;
    v6 = sub_1C106F538();
    v7 = sub_1C1070390();
    if (os_log_type_enabled(v6, v7))
    {
      v8 = swift_slowAlloc();
      v9 = swift_slowAlloc();
      v18 = v9;
      *(_DWORD *)v8 = 136315394;
      v10 = objc_msgSend(*(id *)(a2 + 24), sel_description);
      v11 = sub_1C106FB14();
      v13 = v12;

      sub_1C0788DAC(v11, v13, &v18);
      sub_1C10705AC();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v8 + 12) = 2080;
      v14 = v17;
      sub_1C07ACF80(&qword_1ED7614F0);
      v15 = sub_1C106FB5C();
      sub_1C0788DAC(v15, v16, &v18);
      sub_1C10705AC();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C0771000, v6, v7, "Unable to fetch events from stream: %s with error: %s", (uint8_t *)v8, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1C3BA8270](v9, -1, -1);
      MEMORY[0x1C3BA8270](v8, -1, -1);

    }
    else
    {

      swift_release_n();
    }
  }
}

void sub_1C08B907C(void *a1, uint64_t a2, uint64_t a3)
{
  id v5;
  id v6;
  void *v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17[4];

  v5 = objc_msgSend(a1, sel_eventBody);
  if (v5)
  {
    v6 = v5;
    swift_beginAccess();
    v7 = *(void **)(a3 + 16);
    *(_QWORD *)(a3 + 16) = v6;

  }
  else
  {
    if (qword_1ED762B18 != -1)
      swift_once();
    v8 = sub_1C106F544();
    sub_1C079E000(v8, (uint64_t)qword_1ED762AF8);
    swift_retain_n();
    v9 = sub_1C106F538();
    v10 = sub_1C10703A8();
    if (os_log_type_enabled(v9, v10))
    {
      v11 = (uint8_t *)swift_slowAlloc();
      v12 = swift_slowAlloc();
      *(_DWORD *)v11 = 136315138;
      v13 = objc_msgSend(*(id *)(a2 + 24), sel_description, v12);
      v14 = sub_1C106FB14();
      v16 = v15;

      v17[3] = sub_1C0788DAC(v14, v16, v17);
      sub_1C10705AC();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C0771000, v9, v10, "Unable to parse event body from read event in the stream: %s", v11, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C3BA8270](v12, -1, -1);
      MEMORY[0x1C3BA8270](v11, -1, -1);

    }
    else
    {

      swift_release_n();
    }
  }
}

uint64_t sub_1C08B928C(uint64_t a1)
{
  void *v1;
  void *v2;
  char v3;
  uint64_t inited;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;

  v1 = (void *)sub_1C08B8B04(a1);
  if (v1)
  {
    v2 = v1;
    v3 = objc_msgSend(v1, sel_starting);
    sub_1C07ACF80(qword_1EF633490);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1C1079220;
    *(_QWORD *)(inited + 32) = 0xD000000000000014;
    *(_QWORD *)(inited + 40) = 0x80000001C10E7690;
    sub_1C07D97D4();
    *(_QWORD *)(inited + 48) = sub_1C0C38BE4(v3);
    sub_1C07ACF80(&qword_1EF633180);
    sub_1C106F97C();
    sub_1C08B944C();
    v6 = v5;

    swift_bridgeObjectRelease();
    return v6;
  }
  else
  {
    if (qword_1ED762B18 != -1)
      swift_once();
    v8 = sub_1C106F544();
    sub_1C079E000(v8, (uint64_t)qword_1ED762AF8);
    v9 = sub_1C106F538();
    v10 = sub_1C10703A8();
    if (os_log_type_enabled(v9, v10))
    {
      v11 = (uint8_t *)sub_1C0775854();
      *(_WORD *)v11 = 0;
      _os_log_impl(&dword_1C0771000, v9, v10, "CarPlayEvent is nil", v11, 2u);
      sub_1C0776778();
    }

    sub_1C07D97D4();
    return sub_1C106F97C();
  }
}

void sub_1C08B944C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int64_t v3;
  unint64_t v4;
  int64_t v5;
  unint64_t v6;
  unint64_t v7;
  int64_t v8;
  unint64_t v9;
  int64_t v10;
  int64_t v11;
  void *v12;
  uint64_t *v13;
  uint64_t v14;
  unint64_t v15;
  id v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  char v31;
  unint64_t v32;
  BOOL v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE v40[5];
  _QWORD v41[2];
  _QWORD *v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;

  v0 = MEMORY[0x1E0DEE9E0];
  v45 = MEMORY[0x1E0DEE9E0];
  sub_1C0861BD0(v41);
  v1 = v41[0];
  v2 = v41[1];
  v3 = v43;
  v4 = v44;
  v37 = v42;
  v5 = (unint64_t)(v42 + 8) >> 6;
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  while (1)
  {
    do
    {
      if (v4)
      {
        v6 = __clz(__rbit64(v4));
        v4 &= v4 - 1;
        v7 = v6 | (v3 << 6);
      }
      else
      {
        v8 = v3 + 1;
        if (__OFADD__(v3, 1))
        {
          __break(1u);
          goto LABEL_36;
        }
        if (v8 >= v5)
          goto LABEL_34;
        v9 = *(_QWORD *)(v2 + 8 * v8);
        v10 = v3 + 1;
        if (!v9)
        {
          v10 = v3 + 2;
          if (v3 + 2 >= v5)
            goto LABEL_34;
          v9 = *(_QWORD *)(v2 + 8 * v10);
          if (!v9)
          {
            v10 = v3 + 3;
            if (v3 + 3 >= v5)
              goto LABEL_34;
            v9 = *(_QWORD *)(v2 + 8 * v10);
            if (!v9)
            {
              v10 = v3 + 4;
              if (v3 + 4 >= v5)
                goto LABEL_34;
              v9 = *(_QWORD *)(v2 + 8 * v10);
              if (!v9)
              {
                v10 = v3 + 5;
                if (v3 + 5 >= v5)
                  goto LABEL_34;
                v9 = *(_QWORD *)(v2 + 8 * v10);
                if (!v9)
                {
                  v11 = v3 + 6;
                  while (v11 < v5)
                  {
                    v9 = *(_QWORD *)(v2 + 8 * v11++);
                    if (v9)
                    {
                      v10 = v11 - 1;
                      goto LABEL_19;
                    }
                  }
LABEL_34:
                  sub_1C0827370();
                  return;
                }
              }
            }
          }
        }
LABEL_19:
        v4 = (v9 - 1) & v9;
        v7 = __clz(__rbit64(v9)) + (v10 << 6);
        v3 = v10;
      }
      v12 = *(void **)(*(_QWORD *)(v1 + 56) + 8 * v7);
    }
    while (!v12);
    v13 = (uint64_t *)(*(_QWORD *)(v1 + 48) + 16 * v7);
    v14 = v13[1];
    v39 = *v13;
    v15 = *(_QWORD *)(v0 + 16);
    if (*(_QWORD *)(v0 + 24) <= v15)
    {
      v17 = v15 + 1;
      v18 = v12;
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      sub_1C0A4B200(v17, 1, v19, v20, v21, v22, v23, v24, v36, v37, v38, v39, *(int *)v40, v40[4]);
      v0 = v45;
    }
    else
    {
      v16 = v12;
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    }
    sub_1C1070DF8();
    sub_1C106FC28();
    v25 = sub_1C1070E4C();
    v26 = v0 + 64;
    v27 = -1 << *(_BYTE *)(v0 + 32);
    v28 = v25 & ~v27;
    v29 = v28 >> 6;
    if (((-1 << v28) & ~*(_QWORD *)(v0 + 64 + 8 * (v28 >> 6))) == 0)
      break;
    v30 = __clz(__rbit64((-1 << v28) & ~*(_QWORD *)(v0 + 64 + 8 * (v28 >> 6)))) | v28 & 0x7FFFFFFFFFFFFFC0;
LABEL_33:
    *(_QWORD *)(v26 + ((v30 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v30;
    v35 = (uint64_t *)(*(_QWORD *)(v0 + 48) + 16 * v30);
    *v35 = v39;
    v35[1] = v14;
    *(_QWORD *)(*(_QWORD *)(v0 + 56) + 8 * v30) = v12;
    ++*(_QWORD *)(v0 + 16);

  }
  v31 = 0;
  v32 = (unint64_t)(63 - v27) >> 6;
  while (++v29 != v32 || (v31 & 1) == 0)
  {
    v33 = v29 == v32;
    if (v29 == v32)
      v29 = 0;
    v31 |= v33;
    v34 = *(_QWORD *)(v26 + 8 * v29);
    if (v34 != -1)
    {
      v30 = __clz(__rbit64(~v34)) + (v29 << 6);
      goto LABEL_33;
    }
  }
LABEL_36:
  __break(1u);
}

uint64_t sub_1C08B9704@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;
  uint64_t result;

  swift_retain();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  result = sub_1C08B8798(a2, v3, a1);
  *a3 = result;
  return result;
}

void sub_1C08B9758()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;

  v0 = sub_1C106ADE0();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v4 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C106ADA4();
  sub_1C08B928C((uint64_t)v3);
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  sub_1C077671C();
}

uint64_t sub_1C08B97D4(uint64_t a1, unint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint64_t v18;
  uint64_t v19;

  v4 = sub_1C106ADE0();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C08B8A64();
  sub_1C0A791CC(a1, a2, v8);
  v10 = v9;
  swift_bridgeObjectRelease();
  if ((v10 & 1) != 0)
  {
    sub_1C106ADA4();
    v11 = sub_1C08B928C((uint64_t)v7);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    v12 = sub_1C089A990(a1, a2, v11);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    if (qword_1ED762B18 != -1)
      swift_once();
    v13 = sub_1C106F544();
    sub_1C079E000(v13, (uint64_t)qword_1ED762AF8);
    swift_bridgeObjectRetain_n();
    v14 = sub_1C106F538();
    v15 = sub_1C10703A8();
    if (os_log_type_enabled(v14, v15))
    {
      v16 = (uint8_t *)sub_1C0775854();
      v19 = sub_1C0775854();
      *(_DWORD *)v16 = 136315138;
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      v18 = sub_1C0788DAC(a1, a2, &v19);
      sub_1C10705AC();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1C0771000, v14, v15, "Feature with name %s doesn't exist", v16, 0xCu);
      swift_arrayDestroy();
      sub_1C0776778();
    }

    swift_bridgeObjectRelease_n();
    return 0;
  }
  return v12;
}

uint64_t sub_1C08B9A74()
{
  uint64_t v0;

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for CarPlaySignal()
{
  return objc_opt_self();
}

void sub_1C08B9AB8()
{
  sub_1C08B9758();
}

uint64_t sub_1C08B9AD8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1C08B9704(a1, a2, a3);
}

void sub_1C08B9AF8()
{
  sub_1C08B8A64();
}

uint64_t sub_1C08B9B0C()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_1C08B9B1C(uint64_t a1)
{
  unint64_t result;

  result = sub_1C08B9B40();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1C08B9B40()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF633488;
  if (!qword_1EF633488)
  {
    v1 = type metadata accessor for CarPlaySignal();
    result = MEMORY[0x1C3BA8174](&unk_1C1080858, v1);
    atomic_store(result, (unint64_t *)&qword_1EF633488);
  }
  return result;
}

uint64_t sub_1C08B9B7C()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_1C08B9BA0(void *a1)
{
  uint64_t v1;

  sub_1C08B8DF0(a1, v1);
}

uint64_t sub_1C08B9BA8()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_1C08B9BD4(void *a1)
{
  uint64_t v1;

  sub_1C08B907C(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

ValueMetadata *type metadata accessor for CNContactPrivacyChecker()
{
  return &type metadata for CNContactPrivacyChecker;
}

void sub_1C08B9BF8(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD v9[10];

  v2 = v1;
  v9[2] = a1;
  v3 = type metadata accessor for CNContactDeltaSourceIngestor(0);
  MEMORY[0x1E0C80A78](v3);
  v9[1] = (char *)v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1C07ACF80(&qword_1ED75C730);
  MEMORY[0x1E0C80A78](v5);
  v6 = type metadata accessor for ConstructionProgressTokens(0);
  MEMORY[0x1E0C80A78](v6);
  v7 = sub_1C07ACF80(&qword_1ED75ACF8);
  MEMORY[0x1E0C80A78](v7);
  v8 = type metadata accessor for ProgressTokens(0);
  MEMORY[0x1E0C80A78](v8);
  __asm { BR              X10 }
}

void sub_1C08B9D70()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  void *v16;
  uint64_t *v17;
  unint64_t v18;
  void *v19;
  uint64_t *v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  _QWORD *v26;
  uint64_t (*v27)(uint64_t);
  uint64_t v28;

  v9 = sub_1C1070CB4();
  swift_bridgeObjectRelease();
  if ((v9 & 1) == 0)
  {
    type metadata accessor for PhaseStores();
    *(_QWORD *)(v8 - 96) = v0;
    sub_1C0794BAC(&qword_1ED75C8A0, type metadata accessor for CNContactDeltaSourceIngestor, (uint64_t)&unk_1C1080A1C);
    *(_QWORD *)(v8 - 88) = v14;
    v15 = sub_1C079DFC4((uint64_t *)(v8 - 120));
    sub_1C07E05C8(v2, (uint64_t)v15, type metadata accessor for CNContactDeltaSourceIngestor);
    swift_retain();
    sub_1C0D4203C(v8 - 120, 0);
    swift_release();
    _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0(v8 - 120);
    if (sub_1C07B2D80(v1, 1, v5) == 1)
    {
      v12 = &qword_1ED75C730;
      v13 = v1;
      goto LABEL_6;
    }
    sub_1C07E05F4(v1, v3, type metadata accessor for ConstructionProgressTokens);
    v19 = (void *)MEMORY[0x1C3BA79F4]();
    v20 = (uint64_t *)(v3 + *(int *)(v5 + 28));
    v21 = v20[1];
    if (v21 >> 60 == 15)
    {
      v24 = 0;
      v25 = 0xF000000000000000;
    }
    else
    {
      v23 = *v20;
      sub_1C106A708();
      swift_allocObject();
      sub_1C07B0E28(v23, v21);
      sub_1C106A6FC();
      sub_1C07ACF80(&qword_1ED75AAF0);
      sub_1C08C1994(&qword_1ED749868, &qword_1ED75AAF0);
      sub_1C106A6F0();
      sub_1C07B33B8(v23, v21);
      swift_release();
      v24 = *(_QWORD *)(v8 - 120);
      v25 = *(_QWORD *)(v8 - 112);
    }
    v26 = *(_QWORD **)(v8 - 144);
    objc_autoreleasePoolPop(v19);
    v27 = type metadata accessor for ConstructionProgressTokens;
    v28 = v3;
LABEL_15:
    sub_1C07B1F90(v28, v27);
    goto LABEL_16;
  }
  type metadata accessor for PhaseStores();
  *(_QWORD *)(v8 - 96) = v0;
  sub_1C0794BAC(&qword_1ED75C8A0, type metadata accessor for CNContactDeltaSourceIngestor, (uint64_t)&unk_1C1080A1C);
  *(_QWORD *)(v8 - 88) = v10;
  v11 = sub_1C079DFC4((uint64_t *)(v8 - 120));
  sub_1C07E05C8(v2, (uint64_t)v11, type metadata accessor for CNContactDeltaSourceIngestor);
  swift_retain();
  sub_1C0D42028(v8 - 120, 1);
  swift_release();
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0(v8 - 120);
  if (sub_1C07B2D80(v6, 1, v7) != 1)
  {
    sub_1C07E05F4(v6, v4, type metadata accessor for ProgressTokens);
    v16 = (void *)MEMORY[0x1C3BA79F4]();
    v17 = (uint64_t *)(v4 + *(int *)(v7 + 28));
    v18 = v17[1];
    if (v18 >> 60 == 15)
    {
      v24 = 0;
      v25 = 0xF000000000000000;
    }
    else
    {
      v22 = *v17;
      sub_1C106A708();
      swift_allocObject();
      sub_1C07B0E28(v22, v18);
      sub_1C106A6FC();
      sub_1C07ACF80(&qword_1ED75AAF0);
      sub_1C08C1994(&qword_1ED749868, &qword_1ED75AAF0);
      sub_1C106A6F0();
      sub_1C07B33B8(v22, v18);
      swift_release();
      v24 = *(_QWORD *)(v8 - 120);
      v25 = *(_QWORD *)(v8 - 112);
    }
    v26 = *(_QWORD **)(v8 - 144);
    objc_autoreleasePoolPop(v16);
    v27 = type metadata accessor for ProgressTokens;
    v28 = v4;
    goto LABEL_15;
  }
  v12 = &qword_1ED75ACF8;
  v13 = v6;
LABEL_6:
  sub_1C0784B6C(v13, v12);
  v24 = 0;
  v25 = 0xF000000000000000;
  v26 = *(_QWORD **)(v8 - 144);
LABEL_16:
  *v26 = v24;
  v26[1] = v25;
}

void sub_1C08BA2F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  sub_1C0779670();
  type metadata accessor for FutureLifeEventDeltaSourceIngestor();
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v0);
  sub_1C078BC74(v1, v7);
  sub_1C07ACF80(&qword_1ED75C730);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v2);
  sub_1C079582C();
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v3);
  sub_1C07795DC();
  sub_1C07ACF80(&qword_1ED75ACF8);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v4);
  sub_1C07943E8();
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v5);
  sub_1C0779614();
  sub_1C0786460();
  __asm { BR              X10 }
}

void sub_1C08BA3C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  char v21;
  char v22;
  char v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t (*v28)(uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  NSObject *v36;
  os_log_type_t v37;
  _BOOL8 v38;
  uint8_t *v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t (*v44)(uint64_t);
  uint64_t v45;

  v5 = sub_1C0791B08();
  sub_1C07767AC();
  if ((v5 & 1) != 0)
  {
    sub_1C078A314();
    sub_1C07B1690();
    sub_1C077F138(&qword_1ED751F68, v6, (uint64_t)&unk_1C1099024);
    v8 = sub_1C078C1E4(v7);
    sub_1C0787ADC((uint64_t)v8);
    sub_1C077E884();
    sub_1C07A9E08();
    sub_1C077AF1C();
    v9 = sub_1C077D018();
    if (!v22)
    {
      sub_1C07830AC(v9, v10, type metadata accessor for ProgressTokens);
      MEMORY[0x1C3BA79F4]();
      sub_1C07B8334();
      if (!v22 & v21)
        v19 = 1;
      else
        v19 = 0;
      if (!v22 & v21)
      {
        v18 = 0;
      }
      else
      {
        sub_1C078D4D8();
        sub_1C077B5BC();
        sub_1C0790F34();
        sub_1C106A6FC();
        v25 = sub_1C07797E4();
        sub_1C0780A8C(&qword_1ED749870);
        sub_1C0799830();
        v26 = sub_1C0782380();
        if (v25)
        {
          sub_1C07ADBD8(v26, v27);
          sub_1C07863E0();
          v28 = type metadata accessor for ProgressTokens;
          v29 = v2;
LABEL_26:
          sub_1C07B1F90(v29, v28);
          if (qword_1ED761458 != -1)
            swift_once();
          v33 = sub_1C077585C();
          v34 = sub_1C079E000(v33, (uint64_t)qword_1ED78D818);
          sub_1C07AF234(v34, v35, (uint64_t (*)(_QWORD))type metadata accessor for FutureLifeEventDeltaSourceIngestor);
          v36 = sub_1C106F538();
          v37 = sub_1C10703A8();
          v38 = sub_1C07AFCC4(v37);
          if (v38)
          {
            v39 = (uint8_t *)sub_1C0775854();
            *(_QWORD *)(v4 - 120) = sub_1C0775854();
            sub_1C077E8E0(4.8149e-34);
            sub_1C08873BC();
            v42 = sub_1C0782D28(v40, v41);
            sub_1C0797CD0(v42);
            v43 = swift_bridgeObjectRelease();
            sub_1C07888C4(v43, (uint64_t (*)(_QWORD))type metadata accessor for FutureLifeEventDeltaSourceIngestor);
            sub_1C07796F0(&dword_1C0771000, v36, (os_log_type_t)v2, "No progress token for %s", v39);
            sub_1C0778610();
            sub_1C0776778();
          }
          sub_1C07888C4(v38, (uint64_t (*)(_QWORD))type metadata accessor for FutureLifeEventDeltaSourceIngestor);
          sub_1C077E6C8();

          goto LABEL_9;
        }
        sub_1C07ADBD8(v26, v27);
        v18 = *(_QWORD *)(v4 - 120);
      }
      v20 = *(_QWORD *)(v4 - 144);
      sub_1C07863E0();
      v44 = type metadata accessor for ProgressTokens;
      v45 = v2;
      goto LABEL_35;
    }
    v11 = &qword_1ED75ACF8;
    v12 = v3;
  }
  else
  {
    sub_1C078A314();
    sub_1C07B1690();
    sub_1C077F138(&qword_1ED751F68, v13, (uint64_t)&unk_1C1099024);
    v15 = sub_1C078C1E4(v14);
    sub_1C0787ADC((uint64_t)v15);
    sub_1C077E884();
    sub_1C079BD98();
    sub_1C077AF1C();
    v16 = sub_1C07AB74C();
    if (!v22)
    {
      sub_1C07825FC(v16, v17, type metadata accessor for ConstructionProgressTokens);
      LOBYTE(v2) = MEMORY[0x1C3BA79F4]();
      sub_1C07B8334();
      if (!v24 & v23)
        v19 = 1;
      else
        v19 = 0;
      if (!v24 & v23)
      {
        v18 = 0;
      }
      else
      {
        sub_1C078D4D8();
        sub_1C077B5BC();
        sub_1C0790F34();
        sub_1C106A6FC();
        v30 = sub_1C07797E4();
        sub_1C0780A8C(&qword_1ED749870);
        sub_1C0799830();
        v31 = sub_1C0782380();
        if (v30)
        {
          sub_1C07ADBD8(v31, v32);
          sub_1C07830A4();
          v28 = type metadata accessor for ConstructionProgressTokens;
          v29 = v1;
          goto LABEL_26;
        }
        sub_1C07ADBD8(v31, v32);
        v18 = *(_QWORD *)(v4 - 120);
      }
      v20 = *(_QWORD *)(v4 - 144);
      sub_1C07830A4();
      v44 = type metadata accessor for ConstructionProgressTokens;
      v45 = v1;
LABEL_35:
      sub_1C07B1F90(v45, v44);
      goto LABEL_36;
    }
    v11 = &qword_1ED75C730;
    v12 = v0;
  }
  sub_1C0784B6C(v12, v11);
LABEL_9:
  v18 = 0;
  v19 = 1;
  v20 = *(_QWORD *)(v4 - 144);
LABEL_36:
  *(_QWORD *)v20 = v18;
  *(_BYTE *)(v20 + 8) = v19;
  sub_1C0776760();
}

void sub_1C08BA730()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  sub_1C0779670();
  type metadata accessor for BMAppleMusicEventDeltaSourceIngestor(0);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v0);
  sub_1C078BC74(v1, v7);
  sub_1C07ACF80(&qword_1ED75C730);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v2);
  sub_1C079582C();
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v3);
  sub_1C07795DC();
  sub_1C07ACF80(&qword_1ED75ACF8);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v4);
  sub_1C07943E8();
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v5);
  sub_1C0779614();
  sub_1C0786460();
  __asm { BR              X10 }
}

void sub_1C08BA800()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  char v21;
  char v22;
  char v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t (*v28)(uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  NSObject *v36;
  os_log_type_t v37;
  _BOOL8 v38;
  uint8_t *v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t (*v44)(uint64_t);
  uint64_t v45;

  v5 = sub_1C0791B08();
  sub_1C07767AC();
  if ((v5 & 1) != 0)
  {
    sub_1C078A314();
    sub_1C07B1690();
    sub_1C077F138(&qword_1ED75CA30, v6, (uint64_t)&unk_1C107E6F0);
    v8 = sub_1C078C1E4(v7);
    sub_1C0787ADC((uint64_t)v8);
    sub_1C077E884();
    sub_1C07A9E08();
    sub_1C077AF1C();
    v9 = sub_1C077D018();
    if (!v22)
    {
      sub_1C07830AC(v9, v10, type metadata accessor for ProgressTokens);
      MEMORY[0x1C3BA79F4]();
      sub_1C07B8334();
      if (!v22 & v21)
        v19 = 1;
      else
        v19 = 0;
      if (!v22 & v21)
      {
        v18 = 0;
      }
      else
      {
        sub_1C078D4D8();
        sub_1C077B5BC();
        sub_1C0790F34();
        sub_1C106A6FC();
        v25 = sub_1C07797E4();
        sub_1C0780A8C(&qword_1ED749870);
        sub_1C0799830();
        v26 = sub_1C0782380();
        if (v25)
        {
          sub_1C07ADBD8(v26, v27);
          sub_1C07863E0();
          v28 = type metadata accessor for ProgressTokens;
          v29 = v2;
LABEL_26:
          sub_1C07B1F90(v29, v28);
          if (qword_1ED761458 != -1)
            swift_once();
          v33 = sub_1C077585C();
          v34 = sub_1C079E000(v33, (uint64_t)qword_1ED78D818);
          sub_1C07AF234(v34, v35, type metadata accessor for BMAppleMusicEventDeltaSourceIngestor);
          v36 = sub_1C106F538();
          v37 = sub_1C10703A8();
          v38 = sub_1C07AFCC4(v37);
          if (v38)
          {
            v39 = (uint8_t *)sub_1C0775854();
            *(_QWORD *)(v4 - 120) = sub_1C0775854();
            sub_1C077E8E0(4.8149e-34);
            sub_1C08872E4();
            v42 = sub_1C0782D28(v40, v41);
            sub_1C0797CD0(v42);
            v43 = swift_bridgeObjectRelease();
            sub_1C07888C4(v43, type metadata accessor for BMAppleMusicEventDeltaSourceIngestor);
            sub_1C07796F0(&dword_1C0771000, v36, (os_log_type_t)v2, "No progress token for %s", v39);
            sub_1C0778610();
            sub_1C0776778();
          }
          sub_1C07888C4(v38, type metadata accessor for BMAppleMusicEventDeltaSourceIngestor);
          sub_1C077E6C8();

          goto LABEL_9;
        }
        sub_1C07ADBD8(v26, v27);
        v18 = *(_QWORD *)(v4 - 120);
      }
      v20 = *(_QWORD *)(v4 - 144);
      sub_1C07863E0();
      v44 = type metadata accessor for ProgressTokens;
      v45 = v2;
      goto LABEL_35;
    }
    v11 = &qword_1ED75ACF8;
    v12 = v3;
  }
  else
  {
    sub_1C078A314();
    sub_1C07B1690();
    sub_1C077F138(&qword_1ED75CA30, v13, (uint64_t)&unk_1C107E6F0);
    v15 = sub_1C078C1E4(v14);
    sub_1C0787ADC((uint64_t)v15);
    sub_1C077E884();
    sub_1C079BD98();
    sub_1C077AF1C();
    v16 = sub_1C07AB74C();
    if (!v22)
    {
      sub_1C07825FC(v16, v17, type metadata accessor for ConstructionProgressTokens);
      LOBYTE(v2) = MEMORY[0x1C3BA79F4]();
      sub_1C07B8334();
      if (!v24 & v23)
        v19 = 1;
      else
        v19 = 0;
      if (!v24 & v23)
      {
        v18 = 0;
      }
      else
      {
        sub_1C078D4D8();
        sub_1C077B5BC();
        sub_1C0790F34();
        sub_1C106A6FC();
        v30 = sub_1C07797E4();
        sub_1C0780A8C(&qword_1ED749870);
        sub_1C0799830();
        v31 = sub_1C0782380();
        if (v30)
        {
          sub_1C07ADBD8(v31, v32);
          sub_1C07830A4();
          v28 = type metadata accessor for ConstructionProgressTokens;
          v29 = v1;
          goto LABEL_26;
        }
        sub_1C07ADBD8(v31, v32);
        v18 = *(_QWORD *)(v4 - 120);
      }
      v20 = *(_QWORD *)(v4 - 144);
      sub_1C07830A4();
      v44 = type metadata accessor for ConstructionProgressTokens;
      v45 = v1;
LABEL_35:
      sub_1C07B1F90(v45, v44);
      goto LABEL_36;
    }
    v11 = &qword_1ED75C730;
    v12 = v0;
  }
  sub_1C0784B6C(v12, v11);
LABEL_9:
  v18 = 0;
  v19 = 1;
  v20 = *(_QWORD *)(v4 - 144);
LABEL_36:
  *(_QWORD *)v20 = v18;
  *(_BYTE *)(v20 + 8) = v19;
  sub_1C0776760();
}

uint64_t sub_1C08BAB68()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  void *v41;
  void **v42;
  void *v43;
  void *v44;
  void *v45;
  id v46;
  id v47;
  id v48;
  id v49;
  void *v51;
  void *v52;
  void *v53;
  void *v54;
  void *v55;
  void *v56;
  void *v57;
  void *v58;
  void *v59;
  void *v60;
  void *v61;
  void *v62;
  void *v63;
  id v64;
  void *v65;

  sub_1C07ACF80(&qword_1ED762CD0);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1C1080AA0;
  v1 = (void *)*MEMORY[0x1E0C96898];
  v2 = (void *)*MEMORY[0x1E0C966E8];
  *(_QWORD *)(v0 + 32) = *MEMORY[0x1E0C96898];
  *(_QWORD *)(v0 + 40) = v2;
  v3 = (void *)*MEMORY[0x1E0C966D0];
  v4 = (void *)*MEMORY[0x1E0C96780];
  *(_QWORD *)(v0 + 48) = *MEMORY[0x1E0C966D0];
  *(_QWORD *)(v0 + 56) = v4;
  v5 = (void *)*MEMORY[0x1E0C966C0];
  v6 = (void *)*MEMORY[0x1E0C96820];
  *(_QWORD *)(v0 + 64) = *MEMORY[0x1E0C966C0];
  *(_QWORD *)(v0 + 72) = v6;
  v7 = (void *)*MEMORY[0x1E0C967A0];
  v8 = (void *)*MEMORY[0x1E0C96790];
  *(_QWORD *)(v0 + 80) = *MEMORY[0x1E0C967A0];
  *(_QWORD *)(v0 + 88) = v8;
  v9 = (void *)*MEMORY[0x1E0C96798];
  v52 = (void *)*MEMORY[0x1E0C967F0];
  v10 = *MEMORY[0x1E0C967F0];
  *(_QWORD *)(v0 + 96) = *MEMORY[0x1E0C96798];
  *(_QWORD *)(v0 + 104) = v10;
  v51 = (void *)*MEMORY[0x1E0C967C0];
  v54 = (void *)*MEMORY[0x1E0C966A8];
  v11 = *MEMORY[0x1E0C966A8];
  *(_QWORD *)(v0 + 112) = *MEMORY[0x1E0C967C0];
  *(_QWORD *)(v0 + 120) = v11;
  v53 = (void *)*MEMORY[0x1E0C96840];
  v56 = (void *)*MEMORY[0x1E0C96690];
  v12 = *MEMORY[0x1E0C96690];
  *(_QWORD *)(v0 + 128) = *MEMORY[0x1E0C96840];
  *(_QWORD *)(v0 + 136) = v12;
  v55 = (void *)*MEMORY[0x1E0C96670];
  v58 = (void *)*MEMORY[0x1E0C967A8];
  v13 = *MEMORY[0x1E0C967A8];
  *(_QWORD *)(v0 + 144) = *MEMORY[0x1E0C96670];
  *(_QWORD *)(v0 + 152) = v13;
  v57 = (void *)*MEMORY[0x1E0C967B8];
  v60 = (void *)*MEMORY[0x1E0C96758];
  v14 = *MEMORY[0x1E0C96758];
  *(_QWORD *)(v0 + 160) = *MEMORY[0x1E0C967B8];
  *(_QWORD *)(v0 + 168) = v14;
  v59 = (void *)*MEMORY[0x1E0C96698];
  v62 = (void *)*MEMORY[0x1E0C96868];
  v15 = *MEMORY[0x1E0C96868];
  *(_QWORD *)(v0 + 176) = *MEMORY[0x1E0C96698];
  *(_QWORD *)(v0 + 184) = v15;
  v61 = (void *)*MEMORY[0x1E0C96740];
  v63 = (void *)*MEMORY[0x1E0C96890];
  v16 = *MEMORY[0x1E0C96890];
  *(_QWORD *)(v0 + 192) = *MEMORY[0x1E0C96740];
  *(_QWORD *)(v0 + 200) = v16;
  v65 = (void *)*MEMORY[0x1E0C96708];
  *(_QWORD *)(v0 + 208) = *MEMORY[0x1E0C96708];
  v64 = (id)objc_opt_self();
  v17 = v1;
  v18 = v2;
  v19 = v3;
  v20 = v4;
  v21 = v5;
  v22 = v6;
  v23 = v7;
  v24 = v8;
  v25 = v9;
  v26 = v52;
  v27 = v51;
  v28 = v54;
  v29 = v53;
  v30 = v56;
  v31 = v55;
  v32 = v58;
  v33 = v57;
  v34 = v60;
  v35 = v59;
  v36 = v62;
  v37 = v61;
  v38 = v63;
  v39 = v65;
  v40 = objc_msgSend(v64, sel_descriptorForRequiredKeysForStyle_, 0);
  v41 = (void *)*MEMORY[0x1E0C967D8];
  v42 = (void **)MEMORY[0x1E0C967E0];
  *(_QWORD *)(v0 + 216) = v40;
  *(_QWORD *)(v0 + 224) = v41;
  v43 = *v42;
  v44 = (void *)*MEMORY[0x1E0C967D0];
  *(_QWORD *)(v0 + 232) = *v42;
  *(_QWORD *)(v0 + 240) = v44;
  v45 = (void *)*MEMORY[0x1E0C967E8];
  *(_QWORD *)(v0 + 248) = *MEMORY[0x1E0C967E8];
  sub_1C106FF28();
  v46 = v41;
  v47 = v43;
  v48 = v44;
  v49 = v45;
  return v0;
}

uint64_t sub_1C08BAE6C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  _QWORD *v5;
  uint8_t *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  void *v12;
  id v13;
  void *v14;
  void *v15;
  id v16;
  void *v17;
  id v18;
  void *v19;
  id v20;
  id v22;
  void *v23;
  id v24;
  id v25;
  NSObject *v26;
  os_log_type_t v27;
  uint8_t *v28;
  void *v29;
  id v30;
  uint64_t v31;
  unint64_t v32;
  NSObject *v33;
  os_log_type_t v34;
  uint8_t *v35;
  uint64_t v36;
  uint64_t v37;
  id v38[2];

  v1 = v0;
  v38[1] = *(id *)MEMORY[0x1E0C80C00];
  if (qword_1ED761458 != -1)
    swift_once();
  v2 = sub_1C106F544();
  sub_1C079E000(v2, (uint64_t)qword_1ED78D818);
  swift_bridgeObjectRetain_n();
  v3 = sub_1C106F538();
  v4 = sub_1C10703A8();
  v5 = &unk_1C1078000;
  if (os_log_type_enabled(v3, v4))
  {
    v6 = (uint8_t *)swift_slowAlloc();
    v36 = v1;
    v7 = (void *)swift_slowAlloc();
    v38[0] = v7;
    *(_DWORD *)v6 = 136315138;
    v8 = _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    v9 = MEMORY[0x1C3BA683C](v8, MEMORY[0x1E0DEA968]);
    v11 = v10;
    swift_bridgeObjectRelease();
    v37 = sub_1C0788DAC(v9, v11, (uint64_t *)v38);
    v5 = (_QWORD *)&unk_1C1078000;
    sub_1C10705AC();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C0771000, v3, v4, "CNContact delta identiers : %s", v6, 0xCu);
    swift_arrayDestroy();
    v12 = v7;
    v1 = v36;
    MEMORY[0x1C3BA8270](v12, -1, -1);
    MEMORY[0x1C3BA8270](v6, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  sub_1C07D4B70(0, &qword_1ED75D1D0);
  sub_1C08BAB68();
  v13 = sub_1C08BB388();
  v14 = (void *)objc_opt_self();
  v15 = (void *)sub_1C106FEEC();
  v16 = objc_msgSend(v14, sel_predicateForContactsWithIdentifiers_, v15);

  objc_msgSend(v13, sel_setPredicate_, v16);
  v17 = *(void **)(v1 + *(int *)(type metadata accessor for CNContactDeltaSourceIngestor(0) + 32));
  v38[0] = 0;
  v18 = objc_msgSend(v17, sel_executeFetchRequest_error_, v13, v38);
  if (v18)
  {
    v19 = v18;
    v20 = v38[0];
    v38[0] = objc_msgSend(v19, sel_value);
    sub_1C07ACF80(&qword_1ED74D2C0);
    if ((swift_dynamicCast() & 1) != 0)
    {

      return v37;
    }
    v33 = sub_1C106F538();
    v34 = sub_1C1070390();
    if (os_log_type_enabled(v33, v34))
    {
      v35 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v35 = 0;
      _os_log_impl(&dword_1C0771000, v33, v34, "Can't get CNContacts from CNFetchResult", v35, 2u);
      MEMORY[0x1C3BA8270](v35, -1, -1);
    }

  }
  else
  {
    v22 = v38[0];
    v23 = (void *)sub_1C106AA14();

    swift_willThrow();
    v24 = v23;
    v25 = v23;
    v26 = sub_1C106F538();
    v27 = sub_1C1070390();
    if (os_log_type_enabled(v26, v27))
    {
      v28 = (uint8_t *)swift_slowAlloc();
      v29 = (void *)swift_slowAlloc();
      v38[0] = v29;
      *(_DWORD *)v28 = v5[502];
      v30 = v23;
      sub_1C07ACF80(&qword_1ED7614F0);
      v31 = sub_1C106FB5C();
      sub_1C0788DAC(v31, v32, (uint64_t *)v38);
      sub_1C10705AC();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1C0771000, v26, v27, "Can't fetch CNContacts with identifiers due to: %s", v28, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C3BA8270](v29, -1, -1);
      MEMORY[0x1C3BA8270](v28, -1, -1);
    }
    else
    {

    }
  }
  return MEMORY[0x1E0DEE9D8];
}

id sub_1C08BB388()
{
  id v0;
  void *v1;
  id v2;

  v0 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  sub_1C07ACF80(&qword_1ED755F30);
  v1 = (void *)sub_1C106FEEC();
  swift_bridgeObjectRelease();
  v2 = objc_msgSend(v0, sel_initWithKeysToFetch_, v1);

  return v2;
}

void sub_1C08BB400()
{
  void *v0;
  int v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  _BYTE *v6;

  v0 = (void *)sub_1C106FAF0();
  v1 = sub_1C08C14FC(v0);

  if (!v1)
  {
    if (qword_1ED761458 != -1)
      swift_once();
    v2 = sub_1C106F544();
    sub_1C079E000(v2, (uint64_t)qword_1ED78D818);
    v3 = sub_1C106F538();
    v4 = sub_1C10703A8();
    if (os_log_type_enabled(v3, v4))
    {
      v5 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v5 = 0;
      _os_log_impl(&dword_1C0771000, v3, v4, "Siri Toggle: Pipeline is blocked from sourcing CNContacts", v5, 2u);
      MEMORY[0x1C3BA8270](v5, -1, -1);
    }

    sub_1C08C1878();
    swift_allocError();
    *v6 = 2;
    swift_willThrow();
  }
}

void sub_1C08BB534()
{
  uint64_t v0;
  void *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  sub_1C0779670();
  v2 = v1;
  v4 = v3;
  v6 = v5;
  sub_1C07ACF80(&qword_1ED762590);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v7);
  sub_1C07785B8();
  sub_1C07ACF80(&qword_1ED759C40);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v8);
  sub_1C0776794();
  sub_1C106D1A4();
  v9 = (int *)sub_1C07B59C8();
  *(_BYTE *)(v6 + v9[7]) = 2;
  *(_BYTE *)(v6 + v9[9]) = 9;
  v10 = v6 + v9[11];
  sub_1C08C19E8();
  sub_1C077CF40(v10, 1);
  if (qword_1ED761438 != -1)
    swift_once();
  v11 = sub_1C077674C();
  v12 = sub_1C079E000(v11, (uint64_t)byte_1ED761420);
  sub_1C07AC0A8(v12, v9[6]);
  sub_1C07E05C8(v4, v6 + v9[5], (uint64_t (*)(_QWORD))type metadata accessor for PhaseStores);
  *(_QWORD *)(v6 + v9[8]) = v2;
  v13 = objc_allocWithZone(MEMORY[0x1E0C97218]);
  v14 = v2;
  objc_msgSend(objc_msgSend(v13, sel_init), sel_setStyle_, 0);
  v15 = sub_1C07B9AA0();
  sub_1C0794DD0(v15);

  if (v6)
  {
    sub_1C077E6C8();
    v6 = 1;
  }
  sub_1C07B1F90(v4, (uint64_t (*)(_QWORD))type metadata accessor for PhaseStores);
  v16 = sub_1C077CF40(v0, v6);
  sub_1C0789308(v16, v17, &qword_1ED759C40);
  sub_1C0776760();
}

