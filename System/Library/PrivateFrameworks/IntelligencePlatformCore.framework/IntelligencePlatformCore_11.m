void sub_1C0D0A6B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __int128 *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  sub_1C07A8250();
  sub_1C07AE118();
  if (qword_1ED749BD8 != -1)
    swift_once();
  v2 = sub_1C078DE84();
  sub_1C078FADC(v2, (uint64_t)&unk_1ED78C360);
  v3 = sub_1C07A4B50();
  type metadata accessor for LifeEventStructs.AttendingAPerformanceActivity(v3);
  sub_1C077B5BC();
  sub_1C07990B8();
  sub_1C0FEEDC8();
  sub_1C07B43B4();
  if (!v0)
  {
    sub_1C07ACF80(&qword_1ED74AF90);
    sub_1C07A2A70();
    v6 = sub_1C079AF20(v4, v5, (void (*)(char *))sub_1C0FDE620, (void (*)(_QWORD))sub_1C0FDE63C, (uint64_t)sub_1C0FDE658);
    sub_1C0796AB0((uint64_t)v6, v7, (uint64_t)&OBJC_IVAR____TtCO24IntelligencePlatformCore16LifeEventStructs29AttendingAPerformanceActivity_startingLocation, &OBJC_IVAR____TtCO24IntelligencePlatformCore16LifeEventStructs29AttendingAPerformanceActivity_name, &OBJC_IVAR____TtCO24IntelligencePlatformCore16LifeEventStructs29AttendingAPerformanceActivity_endLocation);
    if ((*(_BYTE *)(v1 + 16) & 1) != 0)
    {
      sub_1C077C14C();
      v8 = sub_1C0795028();
    }
    else
    {
      sub_1C077C14C();
      v8 = sub_1C079FD58();
    }
    sub_1C07A13F4(v8, v9, OBJC_IVAR____TtCO24IntelligencePlatformCore16LifeEventStructs29AttendingAPerformanceActivity_confidence);
    sub_1C077960C();
    sub_1C077C14C();
    v10 = sub_1C0797730();
    sub_1C0FDE100(v10);
    sub_1C07767F4();
    sub_1C077C14C();
    v11 = sub_1C07A5744();
    sub_1C0FDE11C(v11);
    sub_1C07767F4();
  }
  sub_1C079D810();
  sub_1C07A3EEC();
}

void sub_1C0D0A7F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __int128 *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  sub_1C07A8250();
  sub_1C07AE118();
  if (qword_1ED749BD8 != -1)
    swift_once();
  v2 = sub_1C078DE84();
  sub_1C078FADC(v2, (uint64_t)&unk_1ED78C360);
  v3 = sub_1C07A4B50();
  type metadata accessor for LifeEventStructs.StationaryActivity(v3);
  sub_1C077B5BC();
  sub_1C07990B8();
  sub_1C0FF57BC();
  sub_1C07B43B4();
  if (!v0)
  {
    sub_1C07ACF80(&qword_1ED74AF90);
    sub_1C07A2A70();
    v6 = sub_1C079AF20(v4, v5, (void (*)(char *))sub_1C0FDE674, (void (*)(_QWORD))sub_1C0FDE690, (uint64_t)sub_1C0FDE6AC);
    sub_1C0796AB0((uint64_t)v6, v7, (uint64_t)&OBJC_IVAR____TtCO24IntelligencePlatformCore16LifeEventStructs18StationaryActivity_startingLocation, &OBJC_IVAR____TtCO24IntelligencePlatformCore16LifeEventStructs18StationaryActivity_name, &OBJC_IVAR____TtCO24IntelligencePlatformCore16LifeEventStructs18StationaryActivity_endLocation);
    if ((*(_BYTE *)(v1 + 16) & 1) != 0)
    {
      sub_1C077C14C();
      v8 = sub_1C0795028();
    }
    else
    {
      sub_1C077C14C();
      v8 = sub_1C079FD58();
    }
    sub_1C07A13F4(v8, v9, OBJC_IVAR____TtCO24IntelligencePlatformCore16LifeEventStructs18StationaryActivity_confidence);
    sub_1C077960C();
    sub_1C077C14C();
    v10 = sub_1C0797730();
    sub_1C0FDE138(v10);
    sub_1C07767F4();
    sub_1C077C14C();
    v11 = sub_1C07A5744();
    sub_1C0FDE154(v11);
    sub_1C07767F4();
  }
  sub_1C079D810();
  sub_1C07A3EEC();
}

void sub_1C0D0A92C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __int128 *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  sub_1C07A8250();
  sub_1C07AE118();
  if (qword_1ED749BD8 != -1)
    swift_once();
  v2 = sub_1C078DE84();
  sub_1C078FADC(v2, (uint64_t)&unk_1ED78C360);
  v3 = sub_1C07A4B50();
  type metadata accessor for LifeEventStructs.LocationVisitActivity(v3);
  sub_1C077B5BC();
  sub_1C07990B8();
  sub_1C100C84C();
  sub_1C07B43B4();
  if (!v0)
  {
    sub_1C07ACF80(&qword_1ED74AF90);
    sub_1C07A2A70();
    v6 = sub_1C079AF20(v4, v5, (void (*)(char *))sub_1C0FDE6C8, (void (*)(_QWORD))sub_1C0FDE6E4, (uint64_t)sub_1C0FDE700);
    sub_1C0796AB0((uint64_t)v6, v7, (uint64_t)&OBJC_IVAR____TtCO24IntelligencePlatformCore16LifeEventStructs21LocationVisitActivity_startingLocation, &OBJC_IVAR____TtCO24IntelligencePlatformCore16LifeEventStructs21LocationVisitActivity_name, &OBJC_IVAR____TtCO24IntelligencePlatformCore16LifeEventStructs21LocationVisitActivity_endLocation);
    if ((*(_BYTE *)(v1 + 16) & 1) != 0)
    {
      sub_1C077C14C();
      v8 = sub_1C0795028();
    }
    else
    {
      sub_1C077C14C();
      v8 = sub_1C079FD58();
    }
    sub_1C07A13F4(v8, v9, OBJC_IVAR____TtCO24IntelligencePlatformCore16LifeEventStructs21LocationVisitActivity_confidence);
    sub_1C077960C();
    sub_1C077C14C();
    v10 = sub_1C0797730();
    sub_1C0FDE170(v10);
    sub_1C07767F4();
    sub_1C077C14C();
    v11 = sub_1C07A5744();
    sub_1C0FDE18C(v11);
    sub_1C07767F4();
  }
  sub_1C079D810();
  sub_1C07A3EEC();
}

void sub_1C0D0AA68()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __int128 *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  sub_1C07A8250();
  sub_1C07AE118();
  if (qword_1ED749BD8 != -1)
    swift_once();
  v2 = sub_1C078DE84();
  sub_1C078FADC(v2, (uint64_t)&unk_1ED78C360);
  v3 = sub_1C07A4B50();
  type metadata accessor for LifeEventStructs.WalkingActivity(v3);
  sub_1C077B5BC();
  sub_1C07990B8();
  sub_1C0FEB3A4();
  sub_1C07B43B4();
  if (!v0)
  {
    sub_1C07ACF80(&qword_1ED74AF90);
    sub_1C07A2A70();
    v6 = sub_1C079AF20(v4, v5, (void (*)(char *))sub_1C0FDE71C, (void (*)(_QWORD))sub_1C0FDE738, (uint64_t)sub_1C0FDE754);
    sub_1C0796AB0((uint64_t)v6, v7, (uint64_t)&OBJC_IVAR____TtCO24IntelligencePlatformCore16LifeEventStructs15WalkingActivity_startingLocation, &OBJC_IVAR____TtCO24IntelligencePlatformCore16LifeEventStructs15WalkingActivity_name, &OBJC_IVAR____TtCO24IntelligencePlatformCore16LifeEventStructs15WalkingActivity_endLocation);
    if ((*(_BYTE *)(v1 + 16) & 1) != 0)
    {
      sub_1C077C14C();
      v8 = sub_1C0795028();
    }
    else
    {
      sub_1C077C14C();
      v8 = sub_1C079FD58();
    }
    sub_1C07A13F4(v8, v9, OBJC_IVAR____TtCO24IntelligencePlatformCore16LifeEventStructs15WalkingActivity_confidence);
    sub_1C077960C();
    sub_1C077C14C();
    v10 = sub_1C0797730();
    sub_1C0FDE1A8(v10);
    sub_1C07767F4();
    sub_1C077C14C();
    v11 = sub_1C07A5744();
    sub_1C0FDE1C4(v11);
    sub_1C07767F4();
  }
  sub_1C079D810();
  sub_1C07A3EEC();
}

void sub_1C0D0ABA4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __int128 *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  sub_1C07A8250();
  sub_1C07AE118();
  if (qword_1ED749BD8 != -1)
    swift_once();
  v2 = sub_1C078DE84();
  sub_1C078FADC(v2, (uint64_t)&unk_1ED78C360);
  v3 = sub_1C07A4B50();
  type metadata accessor for LifeEventStructs.RunningActivity(v3);
  sub_1C077B5BC();
  sub_1C07990B8();
  sub_1C1015AC8();
  sub_1C07B43B4();
  if (!v0)
  {
    sub_1C07ACF80(&qword_1ED74AF90);
    sub_1C07A2A70();
    v6 = sub_1C079AF20(v4, v5, (void (*)(char *))sub_1C0FDE770, (void (*)(_QWORD))sub_1C0FDE78C, (uint64_t)sub_1C0FDE7A8);
    sub_1C0796AB0((uint64_t)v6, v7, (uint64_t)&OBJC_IVAR____TtCO24IntelligencePlatformCore16LifeEventStructs15RunningActivity_startingLocation, &OBJC_IVAR____TtCO24IntelligencePlatformCore16LifeEventStructs15RunningActivity_name, &OBJC_IVAR____TtCO24IntelligencePlatformCore16LifeEventStructs15RunningActivity_endLocation);
    if ((*(_BYTE *)(v1 + 16) & 1) != 0)
    {
      sub_1C077C14C();
      v8 = sub_1C0795028();
    }
    else
    {
      sub_1C077C14C();
      v8 = sub_1C079FD58();
    }
    sub_1C07A13F4(v8, v9, OBJC_IVAR____TtCO24IntelligencePlatformCore16LifeEventStructs15RunningActivity_confidence);
    sub_1C077960C();
    sub_1C077C14C();
    v10 = sub_1C0797730();
    sub_1C0FDE1E0(v10);
    sub_1C07767F4();
    sub_1C077C14C();
    v11 = sub_1C07A5744();
    sub_1C0FDE1FC(v11);
    sub_1C07767F4();
  }
  sub_1C079D810();
  sub_1C07A3EEC();
}

void sub_1C0D0ACE0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __int128 *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  sub_1C07A8250();
  sub_1C07AE118();
  if (qword_1ED749BD8 != -1)
    swift_once();
  v2 = sub_1C078DE84();
  sub_1C078FADC(v2, (uint64_t)&unk_1ED78C360);
  v3 = sub_1C07A4B50();
  type metadata accessor for LifeEventStructs.OnThePhoneActivity(v3);
  sub_1C077B5BC();
  sub_1C07990B8();
  sub_1C1007B64();
  sub_1C07B43B4();
  if (!v0)
  {
    sub_1C07ACF80(&qword_1ED74AF90);
    sub_1C07A2A70();
    v6 = sub_1C079AF20(v4, v5, (void (*)(char *))sub_1C0FDE7C4, (void (*)(_QWORD))sub_1C0FDE7E0, (uint64_t)sub_1C0FDE7FC);
    sub_1C0796AB0((uint64_t)v6, v7, (uint64_t)&OBJC_IVAR____TtCO24IntelligencePlatformCore16LifeEventStructs18OnThePhoneActivity_startingLocation, &OBJC_IVAR____TtCO24IntelligencePlatformCore16LifeEventStructs18OnThePhoneActivity_name, &OBJC_IVAR____TtCO24IntelligencePlatformCore16LifeEventStructs18OnThePhoneActivity_endLocation);
    if ((*(_BYTE *)(v1 + 16) & 1) != 0)
    {
      sub_1C077C14C();
      v8 = sub_1C0795028();
    }
    else
    {
      sub_1C077C14C();
      v8 = sub_1C079FD58();
    }
    sub_1C07A13F4(v8, v9, OBJC_IVAR____TtCO24IntelligencePlatformCore16LifeEventStructs18OnThePhoneActivity_confidence);
    sub_1C077960C();
    sub_1C077C14C();
    v10 = sub_1C0797730();
    sub_1C0FDE218(v10);
    sub_1C07767F4();
    sub_1C077C14C();
    v11 = sub_1C07A5744();
    sub_1C0FDE234(v11);
    sub_1C07767F4();
  }
  sub_1C079D810();
  sub_1C07A3EEC();
}

void sub_1C0D0AE1C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __int128 *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  sub_1C07A8250();
  sub_1C07AE118();
  if (qword_1ED749BD8 != -1)
    swift_once();
  v2 = sub_1C078DE84();
  sub_1C078FADC(v2, (uint64_t)&unk_1ED78C360);
  v3 = sub_1C07A4B50();
  type metadata accessor for LifeEventStructs.FacetimeActivity(v3);
  sub_1C077B5BC();
  sub_1C07990B8();
  sub_1C0FF7180();
  sub_1C07B43B4();
  if (!v0)
  {
    sub_1C07ACF80(&qword_1ED74AF90);
    sub_1C07A2A70();
    v6 = sub_1C079AF20(v4, v5, (void (*)(char *))sub_1C0FDE818, (void (*)(_QWORD))sub_1C0FDE834, (uint64_t)sub_1C0FDE850);
    sub_1C0796AB0((uint64_t)v6, v7, (uint64_t)&OBJC_IVAR____TtCO24IntelligencePlatformCore16LifeEventStructs16FacetimeActivity_startingLocation, &OBJC_IVAR____TtCO24IntelligencePlatformCore16LifeEventStructs16FacetimeActivity_name, &OBJC_IVAR____TtCO24IntelligencePlatformCore16LifeEventStructs16FacetimeActivity_endLocation);
    if ((*(_BYTE *)(v1 + 16) & 1) != 0)
    {
      sub_1C077C14C();
      v8 = sub_1C0795028();
    }
    else
    {
      sub_1C077C14C();
      v8 = sub_1C079FD58();
    }
    sub_1C07A13F4(v8, v9, OBJC_IVAR____TtCO24IntelligencePlatformCore16LifeEventStructs16FacetimeActivity_confidence);
    sub_1C077960C();
    sub_1C077C14C();
    v10 = sub_1C0797730();
    sub_1C0FDE250(v10);
    sub_1C07767F4();
    sub_1C077C14C();
    v11 = sub_1C07A5744();
    sub_1C0FDE26C(v11);
    sub_1C07767F4();
  }
  sub_1C079D810();
  sub_1C07A3EEC();
}

#error "1C0D0AFEC: call analysis failed (funcsize=98)"

uint64_t sub_1C0D0B0F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1C07ACF80(&qword_1EF647DB0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C0D0B140(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FutureLifeEventStructs.LocationRelationshipType(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C0D0B184(unsigned __int8 *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(char *, uint64_t, uint64_t);
  char *v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD v49[2];
  int v50;
  _QWORD *v51;
  void *v52;
  uint64_t v53;
  uint64_t v54;
  void (*v55)(uint64_t, uint64_t, uint64_t);
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  __int128 v60;
  __int128 v61;
  uint64_t v62;
  _QWORD v63[3];
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;

  v4 = v2;
  v54 = a2;
  v6 = sub_1C07ACF80(&qword_1ED762CE0);
  MEMORY[0x1E0C80A78](v6);
  sub_1C0778564();
  v57 = v8 - v7;
  v9 = sub_1C106E590();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  sub_1C077CFAC();
  v11 = sub_1C106AE28();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v59 = (char *)v49 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v58 = (char *)v49 - v15;
  v50 = *a1;
  v51 = (_QWORD *)(v4 + *(int *)(sub_1C07ACF80(&qword_1ED751DF0) + 32));
  v16 = v51[2];
  v17 = *(_QWORD *)(v16 + 16);
  if (v17)
  {
    v66 = v3;
    v18 = v16 + ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80));
    v19 = *(_QWORD *)(v10 + 72);
    v55 = *(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16);
    v56 = v19;
    v49[1] = v16;
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    v20 = MEMORY[0x1E0DEE9D8];
    v53 = v9;
    v21 = v10;
    v22 = v54;
    do
    {
      v55(v66, v18, v9);
      if (*(_QWORD *)(v22 + 16) && (sub_1C07DCD84(), (v24 & 1) != 0))
      {
        v25 = v57;
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16))(v57, *(_QWORD *)(v22 + 56) + *(_QWORD *)(v12 + 72) * v23, v11);
        v26 = 0;
      }
      else
      {
        v26 = 1;
        v25 = v57;
      }
      sub_1C07B2D8C(v25, v26, 1, v11);
      (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v66, v9);
      if (sub_1C07B2D80(v25, 1, v11) == 1)
      {
        sub_1C0784B30(v25, &qword_1ED762CE0);
      }
      else
      {
        v27 = v21;
        v28 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 32);
        v29 = v58;
        v28(v58, v25, v11);
        (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v59, v29, v11);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1C07EBAD4();
          v20 = v32;
        }
        v30 = *(_QWORD *)(v20 + 16);
        v31 = v20;
        if (v30 >= *(_QWORD *)(v20 + 24) >> 1)
        {
          sub_1C07EBAD4();
          v31 = v33;
        }
        *(_QWORD *)(v31 + 16) = v30 + 1;
        v20 = v31;
        v28((char *)(v31+ ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80))+ *(_QWORD *)(v12 + 72) * v30), (uint64_t)v59, v11);
        (*(void (**)(char *, uint64_t))(v12 + 8))(v58, v11);
        v21 = v27;
        v9 = v53;
        v22 = v54;
      }
      v18 += v56;
      --v17;
    }
    while (v17);
    v34 = v20;
    swift_bridgeObjectRelease();
  }
  else
  {
    v34 = MEMORY[0x1E0DEE9D8];
  }
  v35 = type metadata accessor for FutureActivityEventWithLocations(0);
  v36 = v51;
  v37 = (char *)v51 + *(int *)(v35 + 24);
  v38 = *v51;
  v39 = v51[1];
  v40 = sub_1C07ACF80(&qword_1ED74AF90);
  v41 = v52;
  if (v37[*(int *)(v40 + 32)] == 154)
  {
    *((_QWORD *)&v61 + 1) = type metadata accessor for FutureLifeEventStructs.CommuteActivity(0);
    v62 = sub_1C07803B8(&qword_1EF647D10, type metadata accessor for FutureLifeEventStructs.CommuteActivity, (uint64_t)&unk_1C10D2970);
    sub_1C079DFC4((uint64_t *)&v60);
    sub_1C0D0AF58(v34, v38, v39);
    if (v41)
    {
      sub_1C0A0A6A4((uint64_t)&v60);

      swift_bridgeObjectRelease();
      v62 = 0;
      v60 = 0u;
      v61 = 0u;
LABEL_23:
      sub_1C0784B30((uint64_t)&v60, &qword_1ED754E98);
      return MEMORY[0x1E0DEE9D8];
    }
  }
  else
  {
    v62 = 0;
    v60 = 0u;
    v61 = 0u;
  }
  swift_bridgeObjectRelease();
  if (!*((_QWORD *)&v61 + 1))
    goto LABEL_23;
  sub_1C077DD60(&v60, (uint64_t)v63);
  v42 = v64;
  v43 = v65;
  sub_1C07A9480(v63, v64);
  v44 = (_QWORD *)((char *)v36 + *(int *)(v35 + 28));
  v45 = v44[1];
  *(_QWORD *)&v60 = *v44;
  *((_QWORD *)&v60 + 1) = v45;
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C106FC94();
  sub_1C106FC94();
  v46 = v60;
  LOBYTE(v60) = v50;
  v47 = (*(uint64_t (**)(uint64_t, _QWORD, __int128 *, uint64_t, uint64_t))(v43 + 24))(v46, *((_QWORD *)&v60 + 1), &v60, v42, v43);
  swift_bridgeObjectRelease();
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v63);
  return v47;
}

uint64_t sub_1C0D0B63C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v0 = sub_1C106A918();
  MEMORY[0x1E0C80A78](v0);
  sub_1C0778564();
  v1 = sub_1C106AFE4();
  MEMORY[0x1E0C80A78](v1);
  sub_1C0778564();
  type metadata accessor for LifeEventStructs.DateRelationshipType(0);
  swift_allocObject();
  sub_1C0FEABE8();
  v3 = v2;
  sub_1C106AFC0();
  if (qword_1ED75BEB0 != -1)
    swift_once();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C0796AC0();
  swift_bridgeObjectRelease();
  sub_1C08FFE64();
  sub_1C078826C();
  sub_1C079AF30();
  sub_1C078FAF4(OBJC_IVAR____TtCO24IntelligencePlatformCore16LifeEventStructs20DateRelationshipType_startTime);
  sub_1C07AC174();
  v4 = sub_1C1070180();
  sub_1C07A3F00(v4, v5, OBJC_IVAR____TtCO24IntelligencePlatformCore16LifeEventStructs20DateRelationshipType_imputedStartTime);
  sub_1C07ACF80(&qword_1ED74AF90);
  sub_1C106AFC0();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C0796AC0();
  swift_bridgeObjectRelease();
  sub_1C08FFE64();
  sub_1C078826C();
  sub_1C079AF30();
  sub_1C078FAF4(OBJC_IVAR____TtCO24IntelligencePlatformCore16LifeEventStructs20DateRelationshipType_endTime);
  sub_1C07AC174();
  v6 = sub_1C1070180();
  sub_1C07A3F00(v6, v7, OBJC_IVAR____TtCO24IntelligencePlatformCore16LifeEventStructs20DateRelationshipType_imputedEndTime);
  return v3;
}

uint64_t sub_1C0D0B80C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t *v12;
  _QWORD *v13;
  uint64_t *v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t result;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(uint64_t, uint64_t);
  uint64_t v37;
  uint64_t v38;

  v38 = sub_1C106A918();
  v35 = *(_QWORD *)(v38 - 8);
  MEMORY[0x1E0C80A78](v38);
  sub_1C0778564();
  v5 = v4 - v3;
  v37 = sub_1C106AFE4();
  v34 = *(_QWORD *)(v37 - 8);
  MEMORY[0x1E0C80A78](v37);
  sub_1C077CFAC();
  v6 = sub_1C106E41C();
  sub_1C07B2D8C(a1, 1, 1, v6);
  v7 = (int *)type metadata accessor for FutureLifeEventStructs.DateRelationshipType(0);
  sub_1C106CF88();
  v8 = a1 + v7[6];
  if (qword_1ED762E80 != -1)
    swift_once();
  v9 = type metadata accessor for Source();
  v10 = sub_1C079E000(v9, (uint64_t)&unk_1ED762268);
  sub_1C0A53D64(v10, v8);
  sub_1C106E404();
  v11 = (_QWORD *)(a1 + v7[8]);
  *v11 = 0;
  v11[1] = 0;
  sub_1C106DFC0();
  v12 = (uint64_t *)(a1 + v7[10]);
  *v12 = 0;
  v12[1] = 0;
  sub_1C106E2D8();
  v13 = (_QWORD *)(a1 + v7[12]);
  *v13 = 0;
  v13[1] = 0;
  sub_1C106DF0C();
  v14 = (uint64_t *)(a1 + v7[14]);
  *v14 = 0;
  v14[1] = 0;
  v33 = v14;
  sub_1C106DF30();
  v15 = (_QWORD *)(a1 + v7[16]);
  *v15 = 0;
  v15[1] = 0;
  sub_1C106E134();
  v16 = (_QWORD *)(a1 + v7[18]);
  *v16 = 0;
  v16[1] = 0;
  sub_1C106AFC0();
  if (qword_1ED75BEB0 != -1)
    swift_once();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C106AF3C();
  swift_bridgeObjectRelease();
  sub_1C08FFE64();
  v18 = v17;
  v20 = v19;
  v36 = *(void (**)(uint64_t, uint64_t))(v35 + 8);
  v36(v5, v38);
  v21 = *(void (**)(uint64_t, uint64_t))(v34 + 8);
  v21(v1, v37);
  swift_bridgeObjectRelease();
  *v11 = v18;
  v11[1] = v20;
  sub_1C07AC174();
  v22 = sub_1C1070180();
  v24 = v23;
  swift_bridgeObjectRelease();
  *v12 = v22;
  v12[1] = v24;
  sub_1C07ACF80(&qword_1ED74AF90);
  sub_1C106AFC0();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C106AF3C();
  swift_bridgeObjectRelease();
  sub_1C08FFE64();
  v26 = v25;
  v28 = v27;
  v36(v5, v38);
  v21(v1, v37);
  swift_bridgeObjectRelease();
  *v13 = v26;
  v13[1] = v28;
  sub_1C07AC174();
  v29 = sub_1C1070180();
  v31 = v30;
  result = swift_bridgeObjectRelease();
  *v33 = v29;
  v33[1] = v31;
  return result;
}

double sub_1C0D0BB24@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  unsigned int v4;
  double result;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t);
  unint64_t *v10;
  void *v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  v4 = *(unsigned __int8 *)(v1 + *(int *)(sub_1C07ACF80(&qword_1ED74AF90) + 32));
  switch(v4 >> 5)
  {
    case 0u:
      if (v4 - 11 < 2 || v4 == 18)
      {
        sub_1C07A753C();
        sub_1C0D0AE1C();
        if (!v2)
        {
          v7 = sub_1C07A1408();
          v8 = type metadata accessor for LifeEventStructs.FacetimeActivity(v7);
          v9 = type metadata accessor for LifeEventStructs.FacetimeActivity;
          *(_QWORD *)(a1 + 24) = v8;
          v10 = (unint64_t *)&unk_1EF647D18;
          v11 = &unk_1C10D622C;
          goto LABEL_19;
        }
      }
      else
      {
        if (v4 != 17)
          goto LABEL_24;
        sub_1C07A753C();
        sub_1C0D0ACE0();
        if (!v2)
        {
          v19 = sub_1C07A1408();
          v20 = type metadata accessor for LifeEventStructs.OnThePhoneActivity(v19);
          v9 = type metadata accessor for LifeEventStructs.OnThePhoneActivity;
          *(_QWORD *)(a1 + 24) = v20;
          v10 = (unint64_t *)&unk_1EF647D20;
          v11 = &unk_1C10D5DF4;
          goto LABEL_19;
        }
      }
      break;
    case 1u:
      v12 = v4 & 0x1F;
      if (v12)
      {
        if (v12 == 1)
        {
          sub_1C07A753C();
          sub_1C0D0AA68();
          if (!v2)
          {
            v23 = sub_1C07A1408();
            v24 = type metadata accessor for LifeEventStructs.WalkingActivity(v23);
            v9 = type metadata accessor for LifeEventStructs.WalkingActivity;
            *(_QWORD *)(a1 + 24) = v24;
            v10 = (unint64_t *)&unk_1EF647D38;
            v11 = &unk_1C10D658C;
            goto LABEL_19;
          }
        }
        else
        {
          if (v12 != 2)
            goto LABEL_24;
          sub_1C07A753C();
          sub_1C0D0ABA4();
          if (!v2)
          {
            v13 = sub_1C07A1408();
            v14 = type metadata accessor for LifeEventStructs.RunningActivity(v13);
            v9 = type metadata accessor for LifeEventStructs.RunningActivity;
            *(_QWORD *)(a1 + 24) = v14;
            v10 = (unint64_t *)&unk_1EF647D30;
            v11 = &unk_1C10D5B00;
            goto LABEL_19;
          }
        }
      }
      else
      {
        sub_1C07A753C();
        sub_1C0D0A2C0();
        if (!v2)
        {
          v21 = sub_1C07A1408();
          v22 = type metadata accessor for LifeEventStructs.ExercisingActivity(v21);
          v9 = type metadata accessor for LifeEventStructs.ExercisingActivity;
          *(_QWORD *)(a1 + 24) = v22;
          v10 = (unint64_t *)&unk_1EF647D60;
          v11 = &unk_1C10D5CB0;
          goto LABEL_19;
        }
      }
      break;
    case 2u:
LABEL_17:
      sub_1C07A753C();
      sub_1C0D09978();
      if (!v2)
      {
        v17 = sub_1C07A1408();
        v18 = type metadata accessor for LifeEventStructs.TransportationActivity(v17);
        v9 = type metadata accessor for LifeEventStructs.TransportationActivity;
        *(_QWORD *)(a1 + 24) = v18;
        v10 = (unint64_t *)&unk_1EF647DA0;
        v11 = &unk_1C10D5F38;
        goto LABEL_19;
      }
      break;
    case 4u:
      switch(v4)
      {
        case 0x81u:
          sub_1C07A753C();
          sub_1C0D09B18();
          if (v2)
            return result;
          v15 = sub_1C07A1408();
          v16 = type metadata accessor for LifeEventStructs.WorkingActivity(v15);
          v9 = type metadata accessor for LifeEventStructs.WorkingActivity;
          *(_QWORD *)(a1 + 24) = v16;
          v10 = (unint64_t *)&unk_1EF647D98;
          v11 = &unk_1C10D5D88;
          break;
        case 0x82u:
          sub_1C07A753C();
          sub_1C0D09C54();
          if (v2)
            return result;
          v25 = sub_1C07A1408();
          v26 = type metadata accessor for LifeEventStructs.MeetingActivity(v25);
          v9 = type metadata accessor for LifeEventStructs.MeetingActivity;
          *(_QWORD *)(a1 + 24) = v26;
          v10 = (unint64_t *)&unk_1EF647D90;
          v11 = &unk_1C10D5E60;
          break;
        case 0x85u:
          sub_1C07A753C();
          sub_1C0D09D90();
          if (v2)
            return result;
          v27 = sub_1C07A1408();
          v28 = type metadata accessor for LifeEventStructs.ShoppingActivity(v27);
          v9 = type metadata accessor for LifeEventStructs.ShoppingActivity;
          *(_QWORD *)(a1 + 24) = v28;
          v10 = (unint64_t *)&unk_1EF647D88;
          v11 = &unk_1C10D5B6C;
          break;
        case 0x87u:
          sub_1C07A753C();
          sub_1C0D09ECC();
          if (v2)
            return result;
          v29 = sub_1C07A1408();
          v30 = type metadata accessor for LifeEventStructs.SleepingActivity(v29);
          v9 = type metadata accessor for LifeEventStructs.SleepingActivity;
          *(_QWORD *)(a1 + 24) = v30;
          v10 = (unint64_t *)&unk_1EF647D80;
          v11 = &unk_1C10D5A94;
          break;
        case 0x89u:
          sub_1C07A753C();
          sub_1C0D0A008();
          if (v2)
            return result;
          v31 = sub_1C07A1408();
          v32 = type metadata accessor for LifeEventStructs.ReadingActivity(v31);
          v9 = type metadata accessor for LifeEventStructs.ReadingActivity;
          *(_QWORD *)(a1 + 24) = v32;
          v10 = (unint64_t *)&unk_1EF647D78;
          v11 = &unk_1C10D5ECC;
          break;
        case 0x8Bu:
          sub_1C07A753C();
          sub_1C0D0A144();
          if (v2)
            return result;
          v33 = sub_1C07A1408();
          v34 = type metadata accessor for LifeEventStructs.GamingActivity(v33);
          v9 = type metadata accessor for LifeEventStructs.GamingActivity;
          *(_QWORD *)(a1 + 24) = v34;
          v10 = (unint64_t *)&unk_1EF647D68;
          v11 = &unk_1C10D6304;
          break;
        case 0x95u:
          sub_1C07A753C();
          sub_1C0D0A7F0();
          if (v2)
            return result;
          v35 = sub_1C07A1408();
          v36 = type metadata accessor for LifeEventStructs.StationaryActivity(v35);
          v9 = type metadata accessor for LifeEventStructs.StationaryActivity;
          *(_QWORD *)(a1 + 24) = v36;
          v10 = (unint64_t *)&unk_1EF647D40;
          v11 = &unk_1C10D6298;
          break;
        case 0x98u:
          goto LABEL_17;
        case 0x9Au:
          sub_1C07A753C();
          sub_1C0D0A3FC();
          if (v2)
            return result;
          v37 = sub_1C07A1408();
          v38 = type metadata accessor for LifeEventStructs.CommuteActivity(v37);
          v9 = type metadata accessor for LifeEventStructs.CommuteActivity;
          *(_QWORD *)(a1 + 24) = v38;
          v10 = (unint64_t *)&unk_1EF647D58;
          v11 = &unk_1C10D5BD8;
          break;
        case 0x9Bu:
          sub_1C07A753C();
          sub_1C0D0A6B4();
          if (v2)
            return result;
          v39 = sub_1C07A1408();
          v40 = type metadata accessor for LifeEventStructs.AttendingAPerformanceActivity(v39);
          v9 = type metadata accessor for LifeEventStructs.AttendingAPerformanceActivity;
          *(_QWORD *)(a1 + 24) = v40;
          v10 = (unint64_t *)&unk_1EF647D48;
          v11 = &unk_1C10D6448;
          break;
        case 0x9Cu:
          sub_1C07A753C();
          sub_1C0D0A578();
          if (v2)
            return result;
          v41 = sub_1C07A1408();
          v42 = type metadata accessor for LifeEventStructs.DiningActivity(v41);
          v9 = type metadata accessor for LifeEventStructs.DiningActivity;
          *(_QWORD *)(a1 + 24) = v42;
          v10 = (unint64_t *)&unk_1EF647D50;
          v11 = &unk_1C10D61C0;
          break;
        case 0x9Du:
          sub_1C07A753C();
          sub_1C0D0A92C();
          if (v2)
            return result;
          v43 = sub_1C07A1408();
          v44 = type metadata accessor for LifeEventStructs.LocationVisitActivity(v43);
          v9 = type metadata accessor for LifeEventStructs.LocationVisitActivity;
          *(_QWORD *)(a1 + 24) = v44;
          v10 = (unint64_t *)&unk_1ED747C80;
          v11 = &unk_1C10D5D1C;
          break;
        default:
          goto LABEL_24;
      }
LABEL_19:
      *(_QWORD *)(a1 + 32) = sub_1C07803B8(v10, v9, (uint64_t)v11);
      *(_QWORD *)a1 = 0;
      break;
    default:
LABEL_24:
      *(_QWORD *)(a1 + 32) = 0;
      result = 0.0;
      *(_OWORD *)a1 = 0u;
      *(_OWORD *)(a1 + 16) = 0u;
      break;
  }
  return result;
}

unint64_t sub_1C0D0BFC4(unint64_t a1, unint64_t a2)
{
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  int *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  id v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  id v56;
  void *v57;
  uint64_t v58;
  id v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  id v64;
  unint64_t *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  uint64_t v70;
  _QWORD *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  NSObject *v86;
  os_log_type_t v87;
  uint8_t *v88;
  uint64_t v89;
  _BYTE *v90;
  uint64_t v91;
  _BYTE *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  unint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  id v105;
  unint64_t v106;
  uint64_t v107;
  uint64_t v108;
  id v109;
  void *v110;
  id v111;
  Swift::String_optional v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  Swift::String_optional *v117;
  unint64_t *v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  unint64_t *v122;
  unint64_t *v123;
  uint64_t v124;
  id v125;
  unint64_t v126;
  id v127;
  void *v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  Swift::String_optional *v133;
  id v134;
  unint64_t v135;
  Swift::String_optional v136;
  uint64_t v137;
  unint64_t v138;
  uint64_t v139;
  uint64_t v140;
  unint64_t *v141;
  uint64_t v142;
  uint64_t v143;
  _QWORD *v144;
  id v145;
  void *v146;
  void *v147;
  id v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t *v151;
  uint64_t v152;
  uint64_t *v153;
  int *v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  char *v161;
  uint64_t *v162;
  uint64_t *v163;
  uint64_t *v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  void *v173;
  uint64_t v174;
  uint64_t v175;
  unint64_t v176;
  char v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  unint64_t v183;
  id v184;
  unint64_t v185;
  uint64_t v186;
  uint64_t v187;
  unint64_t *v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  char *v199;
  unint64_t v200;
  int *v201;
  char *v202;
  uint64_t v203;
  uint64_t v204;
  unint64_t v205;
  uint64_t v206;
  char v207;
  unint64_t v208;
  unint64_t v209;
  uint64_t v210;
  unint64_t v211;
  unint64_t v212;
  uint64_t v213;
  unint64_t v214;
  unint64_t v215;
  uint64_t v216;
  unint64_t v217;
  unint64_t v218;
  uint64_t v219;
  unint64_t v220;
  unint64_t v221;
  uint64_t v222;
  unint64_t v223;
  unint64_t v224;
  uint64_t v225;
  unint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  _QWORD *v230;
  _QWORD *v231;
  uint64_t *v232;
  uint64_t *v233;
  uint64_t *v234;
  uint64_t *v235;
  uint64_t *v236;
  uint64_t *v237;
  uint64_t *v238;
  void *v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  char *v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  int *v255;
  uint64_t v256;
  uint64_t *v257;
  int *v258;
  uint64_t v259;
  uint64_t v260;
  unint64_t v261;
  uint64_t v262;
  uint64_t v263;
  unint64_t v264;
  unint64_t v265;
  uint64_t v266;
  uint64_t v267;
  uint64_t v268;
  uint64_t v269;
  uint64_t v270;
  uint64_t v271;
  uint64_t v272;
  unint64_t v273;
  uint64_t v275;
  uint64_t v276;
  char *v277;
  _QWORD *v278;
  unint64_t v279;
  uint64_t v280;
  unint64_t v281;
  uint64_t v282;
  uint64_t v283;
  uint64_t v284;
  uint64_t v285;
  uint64_t v286;
  uint64_t v287;
  unint64_t v288;
  uint64_t v289;
  _QWORD *v290;
  unint64_t v291;
  uint64_t v292;
  __int128 v293;
  unint64_t v294;
  int *v295;
  uint64_t v296;
  uint64_t v297;
  uint64_t v298;
  int *v299;
  uint64_t v300;
  uint64_t v301;
  uint64_t v302;
  char *v303;
  uint64_t v304;
  unint64_t v305;
  uint64_t v306;
  uint64_t v307;
  _QWORD *v308;
  unint64_t v309;
  int *v310;
  uint64_t v311;
  char *v312;
  unint64_t v313;
  char *v314;
  uint64_t v315;
  unint64_t *v316;

  v291 = a1;
  sub_1C07ACF80(&qword_1EF647DC0);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v4);
  sub_1C077AE40();
  v300 = v5;
  v6 = type metadata accessor for SGContactStructs.LocationRelationshipType(0);
  v298 = *(_QWORD *)(v6 - 8);
  v299 = (int *)v6;
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v7);
  sub_1C077AED0();
  v307 = v8;
  MEMORY[0x1E0C80A78](v9);
  v306 = (uint64_t)&v275 - v10;
  sub_1C07ACF80(&qword_1EF647DC8);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v11);
  sub_1C077AE40();
  v297 = v12;
  v296 = type metadata accessor for SGContactStructs.Place(0);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v13);
  sub_1C077AE40();
  v302 = v14;
  sub_1C07ACF80(&qword_1EF647DD0);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v275 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C07ACF80(&qword_1EF647DD8);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v18);
  sub_1C077AE40();
  v20 = sub_1C0787A68(v19);
  v285 = type metadata accessor for SGContactStructs.SoftwareRelationshipType(v20);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v21);
  sub_1C077AE40();
  v23 = sub_1C0787A68(v22);
  v294 = type metadata accessor for SGContactStructs.Software(v23);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v24);
  sub_1C077AE40();
  v26 = sub_1C0787A68(v25);
  v27 = (int *)type metadata accessor for SGContactStructs.IdentifierRelationshipType(v26);
  v309 = *((_QWORD *)v27 - 1);
  v310 = v27;
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v28);
  v30 = (char *)&v275 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C07ACF80((uint64_t *)&unk_1ED759DE0);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v31);
  sub_1C077AED0();
  v289 = v32;
  MEMORY[0x1E0C80A78](v33);
  sub_1C0787A68((uint64_t)&v275 - v34);
  v292 = sub_1C106A918();
  v290 = *(_QWORD **)(v292 - 8);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v35);
  sub_1C077AE40();
  v37 = sub_1C0787A68(v36);
  v38 = (int *)type metadata accessor for SGContactStructs.AddressRelationshipType(v37);
  v313 = *((_QWORD *)v38 - 1);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v39);
  v41 = (char *)&v275 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v42);
  v44 = (unint64_t)&v275 - v43;
  MEMORY[0x1E0C80A78](v45);
  v314 = (char *)&v275 - v46;
  MEMORY[0x1E0C80A78](v47);
  v49 = (unint64_t)&v275 - v48;
  v295 = (int *)type metadata accessor for SGContactStructs.Person(0);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v50);
  sub_1C077AE40();
  v301 = v51;
  v308 = v2;
  v52 = objc_msgSend(v2, sel_postalAddresses);
  v287 = sub_1C077583C((uint64_t)v52, &qword_1EF647DE0);
  v53 = sub_1C106FF04();

  if (v53 >> 62)
  {
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    v54 = sub_1C0780AB0();
    sub_1C077960C();
  }
  else
  {
    v54 = *(_QWORD *)((v53 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v55 = sub_1C077960C();
  if (!v54)
  {
    if (qword_1ED762B18 != -1)
      swift_once();
    v85 = sub_1C106F544();
    sub_1C079E000(v85, (uint64_t)qword_1ED762AF8);
    v86 = sub_1C106F538();
    v87 = sub_1C10703A8();
    if (os_log_type_enabled(v86, v87))
    {
      v88 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v88 = 0;
      _os_log_impl(&dword_1C0771000, v86, v87, "SGContact has no associated address", v88, 2u);
      MEMORY[0x1C3BA8270](v88, -1, -1);
    }

    return MEMORY[0x1E0DEE9D8];
  }
  v279 = a2;
  v56 = sub_1C079B9A8(v55, sel_name);
  if (!v56)
  {
    sub_1C0898824();
    v89 = sub_1C0775810();
    sub_1C07B43C0(v89, v90);
    return v49;
  }
  v57 = v56;
  v277 = v17;
  v312 = v41;
  v282 = sub_1C07ACF80(&qword_1ED744990);
  v58 = swift_allocObject();
  *(_OWORD *)(v58 + 16) = xmmword_1C1078FC0;
  v59 = objc_msgSend(v57, sel_fullName);
  v60 = sub_1C106FB14();
  v280 = (uint64_t)v57;
  v62 = v61;

  *(_QWORD *)(v58 + 56) = MEMORY[0x1E0DEA968];
  v63 = sub_1C07D0EA8();
  *(_QWORD *)(v58 + 64) = v63;
  *(_QWORD *)(v58 + 32) = v60;
  *(_QWORD *)(v58 + 40) = v62;
  v64 = sub_1C079B9A8(v63, sel_recordId);
  v65 = (unint64_t *)objc_msgSend(v64, sel_numericValue);

  v316 = v65;
  v66 = sub_1C1070C0C();
  *(_QWORD *)(v58 + 96) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v58 + 104) = v63;
  v281 = v63;
  *(_QWORD *)(v58 + 72) = v66;
  *(_QWORD *)(v58 + 80) = v67;
  v68 = sub_1C106FB38();
  v70 = HIBYTE(v69) & 0xF;
  if ((v69 & 0x2000000000000000) == 0)
    v70 = v68 & 0xFFFFFFFFFFFFLL;
  if (!v70)
  {
    sub_1C077960C();
    sub_1C0898824();
    v91 = sub_1C0775810();
    sub_1C07B43C0(v91, v92);
    sub_1C07A3F14();
    return v49;
  }
  if (qword_1ED749CA0 != -1)
    swift_once();
  v71 = (_QWORD *)type metadata accessor for SourceIdPrefix();
  sub_1C079E000((uint64_t)v71, (uint64_t)&unk_1ED78CA38);
  sub_1C07A1F88();
  v73 = v72;
  v75 = v74;
  swift_bridgeObjectRelease();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  v76 = v301;
  v77 = v311;
  sub_1C1037A88(v75, v73, v78, v79, v80, v81, v82, v83, v275, v276, (uint64_t)v277, (uint64_t)v278, v279, v280, v281, v282, v283, v284, v285,
    v286);
  if (v77)
  {
    sub_1C07A3F14();
    sub_1C0778580();
    return v49;
  }
  v278 = v71;
  v275 = v75;
  v276 = v73;
  v311 = 0;
  v93 = sub_1C07A2A80(v84, (SEL *)&selRef_prefix);
  sub_1C079F7E0(v93);
  sub_1C079A100();
  sub_1C07932BC();
  v95 = sub_1C07A2A80(v94, (SEL *)&selRef_firstName);
  sub_1C079F7E0(v95);
  sub_1C079A100();
  sub_1C07932BC();
  v97 = sub_1C07A2A80(v96, (SEL *)&selRef_middleName);
  sub_1C079F7E0(v97);
  sub_1C079A100();
  sub_1C07932BC();
  v99 = sub_1C07A2A80(v98, (SEL *)&selRef_lastName);
  sub_1C079F7E0(v99);
  sub_1C079A100();
  sub_1C07932BC();
  v101 = sub_1C07A2A80(v100, (SEL *)&selRef_suffix);
  v103 = v102;
  v104 = sub_1C079A100();
  *v71 = v101;
  v71[1] = v103;
  v316 = (unint64_t *)MEMORY[0x1E0DEE9D8];
  v105 = sub_1C079B9A8(v104, sel_phones);
  sub_1C077583C((uint64_t)v105, &qword_1EF647DE8);
  v106 = sub_1C07980B4();

  if (v106 >> 62)
  {
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    v107 = sub_1C0780AB0();
    sub_1C0778580();
    if (!v107)
      goto LABEL_36;
  }
  else
  {
    v107 = *(_QWORD *)((v106 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v107)
      goto LABEL_36;
  }
  if (v107 < 1)
    goto LABEL_132;
  v108 = 0;
  v303 = (char *)(v106 & 0xC000000000000001);
  v304 = v107;
  v305 = v106;
  do
  {
    if (v303)
      v109 = (id)MEMORY[0x1C3BA70DC](v108, v106);
    else
      v109 = sub_1C0782B58(v106 + 8 * v108);
    v110 = v109;
    v111 = objc_msgSend(v109, sel_phoneNumber);
    sub_1C106FB14();

    v112 = String.normalizedContactHandle()();
    swift_bridgeObjectRelease();
    v113 = sub_1C0779688();
    sub_1C07B2D8C(v49, 1, 1, v113);
    sub_1C106CFDC();
    v114 = v38[6];
    if (qword_1ED7623C8 != -1)
      swift_once();
    v115 = sub_1C077674C();
    v116 = sub_1C079E000(v115, (uint64_t)&unk_1ED7623B0);
    sub_1C07E05C8(v116, v49 + v114, (uint64_t (*)(_QWORD))type metadata accessor for Source);
    sub_1C106DE58();
    sub_1C077C290(v38[8]);
    sub_1C106DDEC();
    v117 = (Swift::String_optional *)(v49 + v38[10]);
    sub_1C106DE94();
    sub_1C077C290(v38[12]);
    sub_1C106DE1C();
    sub_1C077C290(v38[14]);
    sub_1C106E368();
    sub_1C077C290(v38[16]);
    sub_1C106E14C();
    sub_1C077C290(v38[18]);
    sub_1C106E044();
    sub_1C077C290(v38[20]);
    sub_1C106DD5C();
    sub_1C077C290(v38[22]);
    sub_1C106E2CC();
    sub_1C077C290(v38[24]);
    sub_1C106DF24();
    sub_1C077C290(v38[26]);
    *v117 = v112;
    sub_1C07E05C8(v49, (uint64_t)v314, type metadata accessor for SGContactStructs.AddressRelationshipType);
    v118 = v316;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_1C078DB9C();
      sub_1C07ED3D8();
      v118 = v122;
    }
    v101 = v118[2];
    if (v101 >= v118[3] >> 1)
    {
      sub_1C07ED3D8();
      v118 = v123;
    }
    ++v108;
    v118[2] = v101 + 1;
    sub_1C078233C();
    v76 = (uint64_t)type metadata accessor for SGContactStructs.AddressRelationshipType;
    sub_1C07E05F4(v121, (uint64_t)v118 + v119 + *(_QWORD *)(v120 + 72) * v101, type metadata accessor for SGContactStructs.AddressRelationshipType);

    v316 = v118;
    sub_1C07B2018(v49, type metadata accessor for SGContactStructs.AddressRelationshipType);
    v106 = v305;
  }
  while (v304 != v108);
LABEL_36:
  v124 = sub_1C0778580();
  v125 = sub_1C079B9A8(v124, sel_emailAddresses);
  sub_1C077583C((uint64_t)v125, &qword_1EF647DF0);
  v126 = sub_1C106FF04();

  if (v126 >> 62)
  {
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    v49 = sub_1C0780AB0();
    sub_1C077589C();
    if (!v49)
      goto LABEL_52;
  }
  else
  {
    v49 = *(_QWORD *)((v126 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v49)
      goto LABEL_52;
  }
  v315 = MEMORY[0x1E0DEE9D8];
  sub_1C09D4CD4();
  if ((v49 & 0x8000000000000000) != 0)
    goto LABEL_133;
  v76 = 0;
  v304 = v126 & 0xC000000000000001;
  v305 = v49;
  v314 = (char *)v126;
  do
  {
    if (v304)
      v127 = (id)MEMORY[0x1C3BA70DC](v76, v126);
    else
      v127 = sub_1C0782B58(v126 + 8 * v76);
    v128 = v127;
    v129 = sub_1C0779688();
    sub_1C07B2D8C(v44, 1, 1, v129);
    sub_1C106CFDC();
    v130 = v38[6];
    if (qword_1ED7623C8 != -1)
      swift_once();
    v131 = sub_1C077674C();
    v132 = sub_1C079E000(v131, (uint64_t)&unk_1ED7623B0);
    sub_1C07E05C8(v132, v44 + v130, (uint64_t (*)(_QWORD))type metadata accessor for Source);
    sub_1C106DE58();
    v133 = (Swift::String_optional *)(v44 + v38[8]);
    sub_1C106DDEC();
    sub_1C07827A0(v38[10]);
    sub_1C106DE94();
    sub_1C07827A0(v38[12]);
    sub_1C106DE1C();
    sub_1C07827A0(v38[14]);
    sub_1C106E368();
    sub_1C07827A0(v38[16]);
    sub_1C106E14C();
    sub_1C07827A0(v38[18]);
    sub_1C106E044();
    sub_1C07827A0(v38[20]);
    sub_1C106DD5C();
    sub_1C07827A0(v38[22]);
    sub_1C106E2CC();
    sub_1C07827A0(v38[24]);
    sub_1C106DF24();
    sub_1C07827A0(v38[26]);
    v134 = objc_msgSend(v128, sel_emailAddress);
    sub_1C106FB14();
    v101 = v135;

    v136 = String.normalizedContactHandle()();
    swift_bridgeObjectRelease();
    *v133 = v136;
    v137 = v315;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_1C078DB9C();
      sub_1C09D4CD4();
      v137 = v315;
    }
    v138 = *(_QWORD *)(v137 + 16);
    if (v138 >= *(_QWORD *)(v137 + 24) >> 1)
    {
      sub_1C09D4CD4();
      v137 = v315;
    }
    ++v76;
    *(_QWORD *)(v137 + 16) = v138 + 1;
    sub_1C078233C();
    sub_1C07E05F4(v44, v137 + v139 + *(_QWORD *)(v140 + 72) * v138, type metadata accessor for SGContactStructs.AddressRelationshipType);
    v126 = (unint64_t)v314;
  }
  while (v305 != v76);
LABEL_52:
  sub_1C077589C();
  sub_1C0BDBA80();
  v141 = v316;
  v142 = v295[27];
  v143 = v301;
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v143 + v142) = v141;
  sub_1C1041414();
  v144 = v308;
  v145 = objc_msgSend(v308, sel_birthday);
  sub_1C07AAA1C();
  v44 = v293;
  if (!v146)
  {
    sub_1C07B2D8C(v293, 1, 1, v292);
LABEL_58:
    sub_1C0D0DAB0(v44);
    goto LABEL_59;
  }
  v147 = v146;
  v148 = objc_msgSend(v146, sel_dateComponents);

  if (v148)
  {
    v149 = v289;
    sub_1C106A894();

    sub_1C078D8AC();
  }
  else
  {
    sub_1C078D8AC();
    v149 = v289;
  }
  sub_1C07B2D8C(v149, v150, 1, (uint64_t)v147);
  sub_1C0D0DB5C(v149, v44);
  if (sub_1C07B2D80(v44, 1, (uint64_t)v147) == 1)
    goto LABEL_58;
  v101 = v286;
  (*((void (**)(uint64_t, unint64_t, void *))v148 + 4))(v286, v44, v147);
  v76 = (uint64_t)v148;
  sub_1C08FFE64();
  v173 = v147;
  v175 = v174;
  v44 = v176;
  sub_1C0793F70();
  *v144 = v175;
  v144[1] = v44;
  sub_1C106A8C4();
  if ((v177 & 1) != 0)
  {
    (*((void (**)(unint64_t, void *))v148 + 1))(v101, v173);
    v144 = v308;
    sub_1C07AAA1C();
  }
  else
  {
    sub_1C0900300();
    v179 = v178;
    v181 = v180;
    (*(void (**)(unint64_t, void *))(v76 + 8))(v101, v173);
    v144 = v308;
    sub_1C07AAA1C();
    if (v181)
    {
      sub_1C0793F70();
      *v144 = v179;
      v144[1] = v181;
      v144 = v308;
    }
  }
LABEL_59:
  v151 = (uint64_t *)objc_msgSend(v144, sel_socialProfiles);
  sub_1C077583C((uint64_t)v151, qword_1EF647DF8);
  v49 = sub_1C07980B4();

  if (v49 >> 62)
  {
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    v106 = sub_1C0780AB0();
    sub_1C07767AC();
    if (v106)
      goto LABEL_61;
  }
  else
  {
    v106 = *(_QWORD *)((v49 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v106)
    {
LABEL_61:
      v315 = MEMORY[0x1E0DEE9D8];
      sub_1C09D4CA0();
      if ((v106 & 0x8000000000000000) != 0)
        goto LABEL_134;
      v152 = 0;
      v313 = v49 & 0xC000000000000001;
      v314 = (char *)v49;
      do
      {
        if (v313)
          v153 = (uint64_t *)MEMORY[0x1C3BA70DC](v152, v49);
        else
          v153 = (uint64_t *)sub_1C0782B58(v49 + 8 * v152);
        v151 = v153;
        v154 = v310;
        v155 = sub_1C0779688();
        sub_1C077A2C4((uint64_t)v30, v156, v157, v155);
        sub_1C106D030();
        v158 = v154[6];
        if (qword_1ED7623C8 != -1)
          swift_once();
        v159 = sub_1C077674C();
        v160 = sub_1C079E000(v159, (uint64_t)&unk_1ED7623B0);
        sub_1C07E05C8(v160, (uint64_t)&v30[v158], (uint64_t (*)(_QWORD))type metadata accessor for Source);
        sub_1C106DE70();
        v161 = &v30[v154[8]];
        *(_QWORD *)v161 = 0;
        *((_QWORD *)v161 + 1) = 0;
        sub_1C106DF00();
        v162 = (uint64_t *)&v30[v154[10]];
        sub_1C106E248();
        v163 = (uint64_t *)&v30[v154[12]];
        sub_1C106E38C();
        v164 = (uint64_t *)&v30[v154[14]];
        *v162 = sub_1C080AD1C(v151, (SEL *)&selRef_service);
        v162[1] = v165;
        *v163 = sub_1C080AD1C(v151, (SEL *)&selRef_displayName);
        v163[1] = v166;
        v167 = sub_1C080AD1C(v151, (SEL *)&selRef_username);
        v169 = v168;

        *v164 = v167;
        v164[1] = v169;
        v170 = v315;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          v151 = &v315;
          sub_1C078DB9C();
          sub_1C09D4CA0();
          v170 = v315;
        }
        v49 = (unint64_t)v314;
        v101 = *(_QWORD *)(v170 + 16);
        if (v101 >= *(_QWORD *)(v170 + 24) >> 1)
        {
          v151 = &v315;
          sub_1C09D4CA0();
          v170 = v315;
        }
        ++v152;
        *(_QWORD *)(v170 + 16) = v101 + 1;
        sub_1C078233C();
        sub_1C07E05F4((uint64_t)v30, v170 + v171 + *(_QWORD *)(v172 + 72) * v101, type metadata accessor for SGContactStructs.IdentifierRelationshipType);
      }
      while (v106 != v152);
      sub_1C07767AC();
      sub_1C07AAA1C();
      goto LABEL_80;
    }
  }
  sub_1C07767AC();
  v170 = MEMORY[0x1E0DEE9D8];
LABEL_80:
  swift_bridgeObjectRelease();
  v182 = v295[26];
  sub_1C0795C98();
  *(uint64_t *)((char *)v151 + v182) = v170;
  sub_1C10412E4();
  v183 = HIBYTE(v279) & 0xF;
  v106 = v291;
  if ((v279 & 0x2000000000000000) == 0)
    v183 = v291 & 0xFFFFFFFFFFFFLL;
  v184 = v308;
  if (!v183)
  {
    v76 = (uint64_t)v312;
    goto LABEL_90;
  }
  v44 = v101;
  v76 = (uint64_t)v312;
  v49 = (unint64_t)v278;
  if (qword_1ED749B40 != -1)
    goto LABEL_135;
  while (1)
  {
    sub_1C079E000(v49, (uint64_t)qword_1ED78C8D0);
    v185 = v279;
    sub_1C07A1F88();
    v49 = v288;
    v186 = v311;
    sub_1C1038480();
    if (v186)
    {
      sub_1C07948D4();
LABEL_130:
      sub_1C07A3F14();
      v266 = v301;
      goto LABEL_140;
    }
    v311 = 0;
    v187 = v49;
    v188 = (unint64_t *)(v49 + *(int *)(v44 + 36));
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    swift_bridgeObjectRelease();
    *v188 = v106;
    v188[1] = v185;
    v189 = sub_1C0779688();
    v190 = v284;
    sub_1C077A2C4(v284, v191, v192, v189);
    v193 = v285;
    sub_1C106D00C();
    v194 = v190 + *(int *)(v193 + 24);
    if (qword_1ED7623C8 != -1)
      swift_once();
    v195 = sub_1C077674C();
    v196 = sub_1C079E000(v195, (uint64_t)&unk_1ED7623B0);
    sub_1C07E05C8(v196, v194, (uint64_t (*)(_QWORD))type metadata accessor for Source);
    sub_1C077B5DC(v190 + *(int *)(v193 + 28), 1);
    v197 = v283;
    sub_1C07E05C8(v187, v283, type metadata accessor for SGContactStructs.Software);
    sub_1C077B5DC(v197, 0);
    sub_1C1038C54();
    v198 = (uint64_t)v277;
    sub_1C07E05C8(v190, (uint64_t)v277, type metadata accessor for SGContactStructs.SoftwareRelationshipType);
    sub_1C07A298C(v198);
    sub_1C1038CF0();
    sub_1C07B2018(v190, type metadata accessor for SGContactStructs.SoftwareRelationshipType);
    sub_1C07B2018(v187, type metadata accessor for SGContactStructs.Software);
    v184 = v308;
LABEL_90:
    v199 = (char *)objc_msgSend(v184, sel_postalAddresses);
    v44 = sub_1C106FF04();

    if (v44 >> 62)
      break;
    v49 = *(_QWORD *)((v44 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v49)
      goto LABEL_137;
LABEL_92:
    v294 = v44 & 0xC000000000000001;
    v200 = MEMORY[0x1E0DEE9D8];
    v106 = 4;
    v293 = xmmword_1C107A8D0;
    v292 = 0x80000001C10E7A10;
    v291 = v44;
    v290 = (_QWORD *)v49;
    while (1)
    {
      v201 = v294 ? (int *)MEMORY[0x1C3BA70DC](v106 - 4, v44) : (int *)*(id *)(v44 + 8 * v106);
      if (__OFADD__(v106 - 4, 1))
        break;
      v308 = (_QWORD *)(v106 - 3);
      v309 = v106;
      v313 = v200;
      v310 = v201;
      v202 = (char *)objc_msgSend(v201, sel_components);
      v203 = swift_allocObject();
      *(_OWORD *)(v203 + 16) = v293;
      sub_1C080AD1C(v202, (SEL *)&selRef_street);
      v49 = MEMORY[0x1E0DEA968];
      v204 = v281;
      *(_QWORD *)(v203 + 56) = MEMORY[0x1E0DEA968];
      *(_QWORD *)(v203 + 64) = v204;
      sub_1C079AF3C();
      if (v207)
        v208 = 0xE000000000000000;
      else
        v208 = v205;
      *(_QWORD *)(v203 + 32) = v206;
      *(_QWORD *)(v203 + 40) = v208;
      sub_1C080AD1C(v202, (SEL *)&selRef_subLocality);
      *(_QWORD *)(v203 + 96) = v49;
      *(_QWORD *)(v203 + 104) = v204;
      sub_1C079AF3C();
      if (v207)
        v211 = 0xE000000000000000;
      else
        v211 = v209;
      *(_QWORD *)(v203 + 72) = v210;
      *(_QWORD *)(v203 + 80) = v211;
      sub_1C080AD1C(v202, (SEL *)&selRef_city);
      *(_QWORD *)(v203 + 136) = v49;
      *(_QWORD *)(v203 + 144) = v204;
      sub_1C079AF3C();
      if (v207)
        v214 = 0xE000000000000000;
      else
        v214 = v212;
      *(_QWORD *)(v203 + 112) = v213;
      *(_QWORD *)(v203 + 120) = v214;
      sub_1C080AD1C(v202, (SEL *)&selRef_subAdministrativeArea);
      *(_QWORD *)(v203 + 176) = v49;
      *(_QWORD *)(v203 + 184) = v204;
      sub_1C079AF3C();
      if (v207)
        v217 = 0xE000000000000000;
      else
        v217 = v215;
      *(_QWORD *)(v203 + 152) = v216;
      *(_QWORD *)(v203 + 160) = v217;
      sub_1C080AD1C(v202, (SEL *)&selRef_state);
      *(_QWORD *)(v203 + 216) = v49;
      *(_QWORD *)(v203 + 224) = v204;
      sub_1C079AF3C();
      if (v207)
        v220 = 0xE000000000000000;
      else
        v220 = v218;
      *(_QWORD *)(v203 + 192) = v219;
      *(_QWORD *)(v203 + 200) = v220;
      sub_1C080AD1C(v202, (SEL *)&selRef_postalCode);
      *(_QWORD *)(v203 + 256) = v49;
      *(_QWORD *)(v203 + 264) = v204;
      sub_1C079AF3C();
      if (v207)
        v223 = 0xE000000000000000;
      else
        v223 = v221;
      *(_QWORD *)(v203 + 232) = v222;
      *(_QWORD *)(v203 + 240) = v223;
      v314 = v202;
      sub_1C080AD1C(v202, (SEL *)&selRef_country);
      *(_QWORD *)(v203 + 296) = v49;
      *(_QWORD *)(v203 + 304) = v204;
      sub_1C079AF3C();
      if (v207)
        v226 = 0xE000000000000000;
      else
        v226 = v224;
      *(_QWORD *)(v203 + 272) = v225;
      *(_QWORD *)(v203 + 280) = v226;
      sub_1C106FB38();
      if (qword_1ED749BA8 != -1)
        swift_once();
      sub_1C079E000((uint64_t)v278, (uint64_t)&unk_1ED78C930);
      sub_1C07A1F88();
      sub_1C077960C();
      v227 = v311;
      sub_1C1038D84();
      if (v227)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1C07948D4();

        goto LABEL_130;
      }
      v311 = 0;
      v305 = sub_1C0779688();
      sub_1C07B2D8C(v76, 1, 1, v305);
      sub_1C106CFDC();
      v228 = v76 + v38[6];
      if (qword_1ED7623C8 != -1)
        swift_once();
      v229 = sub_1C077674C();
      v304 = sub_1C079E000(v229, (uint64_t)&unk_1ED7623B0);
      sub_1C07E05C8(v304, v228, (uint64_t (*)(_QWORD))type metadata accessor for Source);
      sub_1C106DE58();
      v230 = (_QWORD *)(v76 + v38[8]);
      *v230 = 0;
      v230[1] = 0;
      sub_1C106DDEC();
      v231 = (_QWORD *)(v76 + v38[10]);
      *v231 = 0;
      v231[1] = 0;
      sub_1C106DE94();
      v232 = (uint64_t *)(v76 + v38[12]);
      sub_1C106DE1C();
      v233 = (uint64_t *)(v76 + v38[14]);
      sub_1C106E368();
      v234 = (uint64_t *)(v76 + v38[16]);
      sub_1C106E14C();
      v235 = (uint64_t *)(v76 + v38[18]);
      sub_1C106E044();
      v236 = (uint64_t *)(v76 + v38[20]);
      sub_1C106DD5C();
      v237 = (uint64_t *)&v312[v38[22]];
      sub_1C106E2CC();
      v238 = (uint64_t *)&v312[v38[24]];
      sub_1C106DF24();
      v303 = &v312[v38[26]];
      v239 = v314;
      *v232 = sub_1C080AD1C(v314, (SEL *)&selRef_street);
      v232[1] = v240;
      *v233 = sub_1C080AD1C(v239, (SEL *)&selRef_subLocality);
      v233[1] = v241;
      *v234 = sub_1C080AD1C(v239, (SEL *)&selRef_city);
      v234[1] = v242;
      *v235 = sub_1C080AD1C(v239, (SEL *)&selRef_subAdministrativeArea);
      v235[1] = v243;
      *v236 = sub_1C080AD1C(v239, (SEL *)&selRef_state);
      v236[1] = v244;
      *v237 = sub_1C080AD1C(v239, (SEL *)&selRef_postalCode);
      v237[1] = v245;
      v76 = (uint64_t)v312;
      *v238 = sub_1C080AD1C(v239, (SEL *)&selRef_country);
      v238[1] = v246;
      v247 = sub_1C080AD1C(v239, (SEL *)&selRef_isoCountryCode);
      v248 = v303;
      *(_QWORD *)v303 = v247;
      *((_QWORD *)v248 + 1) = v249;
      v250 = v297;
      sub_1C07E05C8(v76, v297, type metadata accessor for SGContactStructs.AddressRelationshipType);
      sub_1C07B2D8C(v250, 0, 1, (uint64_t)v38);
      v251 = v302;
      sub_1C1039554();
      v252 = v306;
      sub_1C077A2C4(v306, v253, v254, v305);
      v255 = v299;
      sub_1C106CFF4();
      sub_1C07E05C8(v304, v252 + v255[6], (uint64_t (*)(_QWORD))type metadata accessor for Source);
      sub_1C106DEC4();
      v256 = v255[9];
      v257 = (uint64_t *)(v252 + v255[8]);
      sub_1C07B2D8C(v252 + v256, 1, 1, v296);
      v258 = v310;
      *v257 = sub_1C0D0DAF0(v258);
      v257[1] = v259;
      v260 = v300;
      sub_1C07E05C8(v251, v300, type metadata accessor for SGContactStructs.Place);
      sub_1C07A298C(v260);
      sub_1C10395E8();
      sub_1C07E05C8(v252, v307, type metadata accessor for SGContactStructs.LocationRelationshipType);
      v200 = v313;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1C078DB9C();
        sub_1C07ED410();
        v200 = v264;
      }
      v261 = *(_QWORD *)(v200 + 16);
      v199 = (char *)(v261 + 1);
      v44 = v291;
      if (v261 >= *(_QWORD *)(v200 + 24) >> 1)
      {
        sub_1C07ED410();
        v200 = v265;
      }
      *(_QWORD *)(v200 + 16) = v199;
      sub_1C078233C();
      sub_1C07E05F4(v307, v200 + v262 + *(_QWORD *)(v263 + 72) * v261, type metadata accessor for SGContactStructs.LocationRelationshipType);

      sub_1C07B2018(v251, type metadata accessor for SGContactStructs.Place);
      sub_1C07B2018(v306, type metadata accessor for SGContactStructs.LocationRelationshipType);
      sub_1C07B2018(v76, type metadata accessor for SGContactStructs.AddressRelationshipType);
      v106 = v309 + 1;
      v49 = (unint64_t)v290;
      if (v308 == v290)
        goto LABEL_138;
    }
    __break(1u);
LABEL_132:
    __break(1u);
LABEL_133:
    __break(1u);
LABEL_134:
    __break(1u);
LABEL_135:
    swift_once();
  }
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  v49 = sub_1C0780AB0();
  swift_bridgeObjectRelease();
  if (v49)
    goto LABEL_92;
LABEL_137:
  v200 = MEMORY[0x1E0DEE9D8];
LABEL_138:
  swift_bridgeObjectRelease();
  v49 = v295[25];
  sub_1C0795C98();
  *(_QWORD *)&v199[v49] = v200;
  sub_1C10411B4();
  LOBYTE(v315) = 1;
  v267 = v311;
  sub_1C1039684(v275, v276, (uint64_t)&v315, v268, v269, v270, v271, v272, v275, v276, (uint64_t)v277, (uint64_t)v278, v279, v280, v281, v282, v283, v284, v285,
    v286);
  if (v267)
  {
    sub_1C0778580();
    sub_1C07A3F14();
    v266 = (uint64_t)v199;
LABEL_140:
    sub_1C07B2018(v266, type metadata accessor for SGContactStructs.Person);
    return v49;
  }
  v49 = v273;
  sub_1C0778580();
  sub_1C07A3F14();
  sub_1C07B2018((uint64_t)v199, type metadata accessor for SGContactStructs.Person);
  return v49;
}

uint64_t sub_1C0D0DAB0(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1C07ACF80((uint64_t *)&unk_1ED759DE0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1C0D0DAF0(void *a1)
{
  id v2;
  uint64_t v3;

  v2 = objc_msgSend(a1, sel_label);

  if (!v2)
    return 0;
  v3 = sub_1C106FB14();

  return v3;
}

uint64_t sub_1C0D0DB5C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1C07ACF80((uint64_t *)&unk_1ED759DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C0D0DBA4()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1C0D0DBB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int v11;

  v6 = sub_1C078BD20();
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)v3)
  {
    v7 = v6;
    v8 = v4;
    return sub_1C07B2D80(v8, v3, v7);
  }
  v9 = sub_1C078A314();
  if (*(_DWORD *)(*(_QWORD *)(v9 - 8) + 84) == (_DWORD)v3)
  {
    v7 = v9;
    v8 = v4 + *(int *)(a3 + 20);
    return sub_1C07B2D80(v8, v3, v7);
  }
  v11 = *(unsigned __int8 *)(v4 + *(int *)(a3 + 24));
  if (v11 >= 4)
    return v11 - 3;
  else
    return 0;
}

uint64_t sub_1C0D0DC3C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1C0D0DC48(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;

  v8 = sub_1C078BD20();
  if (*(_DWORD *)(*(_QWORD *)(v8 - 8) + 84) == a3)
  {
    v9 = v8;
    v10 = v5;
    return sub_1C07B2D8C(v10, v4, v4, v9);
  }
  result = sub_1C078A314();
  if (*(_DWORD *)(*(_QWORD *)(result - 8) + 84) == a3)
  {
    v9 = result;
    v10 = v5 + *(int *)(a4 + 20);
    return sub_1C07B2D8C(v10, v4, v4, v9);
  }
  *(_BYTE *)(v5 + *(int *)(a4 + 24)) = v4 + 3;
  return result;
}

uint64_t type metadata accessor for SGContactSourceIngestor()
{
  uint64_t result;

  result = qword_1ED750F38;
  if (!qword_1ED750F38)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1C0D0DD0C()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = type metadata accessor for Source();
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for PhaseStores();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t sub_1C0D0DD98()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 152) = v0;
  return swift_task_switch();
}

uint64_t sub_1C0D0DDB0()
{
  uint64_t v0;
  id v1;
  uint64_t v2;
  _QWORD *v3;

  *(_QWORD *)(v0 + 120) = 0;
  *(_QWORD *)(v0 + 136) = 0;
  v1 = objc_msgSend((id)objc_opt_self(), sel_serviceForContacts);
  *(_QWORD *)(v0 + 160) = v1;
  *(_BYTE *)(v0 + 176) = 0;
  *(_QWORD *)(v0 + 144) = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v0 + 56) = v0 + 128;
  *(_QWORD *)(v0 + 16) = v0;
  *(_QWORD *)(v0 + 24) = sub_1C0D0DE8C;
  v2 = swift_continuation_init();
  *(_QWORD *)(v0 + 80) = MEMORY[0x1E0C809B0];
  v3 = (_QWORD *)(v0 + 80);
  v3[1] = 0x40000000;
  v3[2] = sub_1C0D0E2D0;
  v3[3] = &unk_1E7A2E2D0;
  v3[4] = v2;
  objc_msgSend(v1, sel_allContactsLimitedTo_withCompletion_, 10000, v3);
  return swift_continuation_await();
}

uint64_t sub_1C0D0DE8C()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 168) = *(_QWORD *)(*(_QWORD *)v0 + 48);
  return swift_task_switch();
}

uint64_t sub_1C0D0DEEC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v2 = *(_QWORD *)(v0 + 152);
  v1 = *(_QWORD *)(v0 + 160);
  v3 = *(_QWORD *)(v0 + 128);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v0 + 144) = v3;
  type metadata accessor for SGContactSourceIngestor();
  sub_1C078A314();
  v4 = (_QWORD *)swift_task_alloc();
  v4[2] = v0 + 144;
  v4[3] = v2;
  v4[4] = v0 + 120;
  v4[5] = v1;
  v4[6] = v0 + 136;
  v4[7] = v0 + 176;
  GraphStore.tripleInsertingTransaction(transactionBody:)();
  swift_task_dealloc();
  sub_1C106AC6C();
  sub_1C088BB10();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  sub_1C07A1414();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1C0D0E008()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 152);
  swift_willThrow();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  sub_1C0D0E07C(v1, (_QWORD *)(v0 + 136), (_QWORD *)(v0 + 120));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1C0D0E07C(uint64_t a1, _QWORD *a2, _QWORD *a3)
{
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t inited;
  uint64_t v11;
  uint64_t result;
  _BYTE v13[128];

  v6 = type metadata accessor for Pipeline.StatusStore();
  MEMORY[0x1E0C80A78](v6);
  v8 = &v13[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = type metadata accessor for SGContactSourceIngestor();
  sub_1C0893744(a1 + *(int *)(v9 + 20), (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for Configuration);
  v8[*(int *)(v6 + 20)] = *(_BYTE *)(a1 + *(int *)(v9 + 24));
  Pipeline.StatusStore.currentSessionId()();
  sub_1C0A157EC((uint64_t)v8);
  sub_1C106F244();
  sub_1C07ACF80((uint64_t *)&unk_1ED7614C0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C10795A0;
  *(_QWORD *)(inited + 32) = 0x496E6F6973736573;
  *(_QWORD *)(inited + 40) = 0xE900000000000064;
  v11 = sub_1C106FAF0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(inited + 48) = v11;
  *(_QWORD *)(inited + 56) = 0x614E656372756F73;
  *(_QWORD *)(inited + 64) = 0xEA0000000000656DLL;
  sub_1C07D4B70(0, &qword_1ED760190);
  *(_QWORD *)(inited + 72) = sub_1C1070528();
  *(_QWORD *)(inited + 80) = 0x756F436E656B6174;
  *(_QWORD *)(inited + 88) = 0xEA0000000000746ELL;
  *(_QWORD *)(inited + 96) = sub_1C1070294();
  strcpy((char *)(inited + 104), "droppedCount");
  *(_BYTE *)(inited + 117) = 0;
  *(_WORD *)(inited + 118) = -5120;
  result = *a3 - *a2;
  if (__OFSUB__(*a3, *a2))
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(inited + 120) = sub_1C1070294();
    sub_1C07D4B70(0, (unint64_t *)&qword_1ED761490);
    sub_1C106F97C();
    sub_1C106F22C();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1C0D0E2D0(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3;
  uint64_t v5;

  v3 = *(_QWORD *)(a1 + 32);
  if (a3)
    return sub_1C0E59318(v3, a3);
  sub_1C07D4B70(0, &qword_1EF647E38);
  v5 = sub_1C106FF04();
  return sub_1C0E624BC(v3, v5);
}

void sub_1C0D0E338(void (*a1)(uint64_t)@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X4>, void *a6@<X5>, _QWORD *a7@<X6>, uint64_t a8@<X7>, _BYTE *a9@<X8>)
{
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v15;
  uint64_t v16;
  id v17;
  void *v18;
  uint64_t v19;
  _BYTE *v20;
  void *v21;
  _QWORD *v22;
  void *v23;
  _BYTE *v24;
  uint64_t v25;
  uint64_t v26;
  _BYTE *v27;
  _BYTE *v28;
  _QWORD *v29;
  unsigned __int8 v34;
  unsigned __int8 v35[2];
  id v36;

  v10 = v9;
  v15 = *a3;
  if (!((unint64_t)*a3 >> 62))
  {
    v16 = *(_QWORD *)((v15 & 0xFFFFFFFFFFFFF8) + 0x10);
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    if (v16)
      goto LABEL_3;
LABEL_19:
    swift_bridgeObjectRelease();
    goto LABEL_20;
  }
LABEL_18:
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  v16 = sub_1C10709B4();
  if (!v16)
    goto LABEL_19;
LABEL_3:
  v28 = (_BYTE *)a8;
  v29 = a5;
  v27 = a9;
  a8 = 4;
  while (1)
  {
    if ((v15 & 0xC000000000000001) != 0)
      v17 = (id)MEMORY[0x1C3BA70DC](a8 - 4, v15);
    else
      v17 = *(id *)(v15 + 8 * a8);
    v18 = v17;
    a9 = (_BYTE *)(a8 - 3);
    if (__OFADD__(a8 - 4, 1))
    {
      __break(1u);
LABEL_17:
      __break(1u);
      goto LABEL_18;
    }
    a5 = v10;
    v19 = sub_1C0CCBC6C();
    if (v10)
      break;
    if (__OFADD__(*v29, 1))
      goto LABEL_17;
    v20 = (_BYTE *)v16;
    ++*v29;
    v21 = (void *)MEMORY[0x1C3BA79F4](v19);
    sub_1C0D0E5EC(a4, a6, v18, a1, a2, a7);
    v10 = 0;
    objc_autoreleasePoolPop(v21);

    ++a8;
    v16 = (uint64_t)v20;
    if (a9 == v20)
    {
      swift_bridgeObjectRelease();
LABEL_14:
      a9 = v27;
      a8 = (uint64_t)v28;
      goto LABEL_20;
    }
  }

  swift_bridgeObjectRelease();
  v36 = v10;
  v22 = v10;
  sub_1C07ACF80(&qword_1ED7614F0);
  if (swift_dynamicCast())
  {

    sub_1C0898824();
    v23 = (void *)swift_allocError();
    *v24 = v35[1];
    v25 = a4 + *(int *)(type metadata accessor for SGContactSourceIngestor() + 20);
    v34 = 1;
    static Transformers.reportError(error:context:config:pipelineType:)((uint64_t)v23, 0x6361746E6F434753, 0xE900000000000074, v25, &v34);

    goto LABEL_14;
  }

  v26 = a4 + *(int *)(type metadata accessor for SGContactSourceIngestor() + 20);
  v35[0] = 1;
  static Transformers.reportError(error:context:config:pipelineType:)((uint64_t)v10, 0x6361746E6F434753, 0xE900000000000074, v26, v35);

  a8 = (uint64_t)v28;
  *v28 = 1;
  a9 = v27;
LABEL_20:
  *a9 = *(_BYTE *)a8;
}

unint64_t sub_1C0D0E5EC(uint64_t a1, void *a2, void *a3, void (*a4)(uint64_t), uint64_t a5, _QWORD *a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v12;
  id v13;
  id v14;
  id v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t result;
  id v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  id v23[2];

  v7 = v6;
  v23[1] = *(id *)MEMORY[0x1E0C80C00];
  v12 = a1 + *(int *)(type metadata accessor for SGContactSourceIngestor() + 20);
  if ((*(_BYTE *)(v12 + *(int *)(type metadata accessor for Configuration() + 20) + 8) & 2) == 0)
  {
LABEL_8:
    result = sub_1C0D0BFC4(0, 0xE000000000000000);
    if (v7)
      return result;
    goto LABEL_9;
  }
  v13 = objc_msgSend(a3, sel_recordId);
  v23[0] = 0;
  v14 = objc_msgSend(a2, sel_originFromRecordId_error_, v13, v23);

  if (!v14)
  {
    v19 = v23[0];
    v20 = (void *)sub_1C106AA14();

    swift_willThrow();
    v7 = 0;
    goto LABEL_8;
  }
  v15 = v23[0];
  v16 = sub_1C0D0E8FC(v14);
  if (!v17)
  {

    goto LABEL_8;
  }
  sub_1C0D0BFC4(v16, v17);

  result = swift_bridgeObjectRelease();
  if (v6)
    return result;
LABEL_9:
  sub_1C0A56D74();
  v22 = v21;
  swift_bridgeObjectRelease();
  a4(v22);
  result = swift_bridgeObjectRelease();
  if (__OFADD__(*a6, 1))
    __break(1u);
  ++*a6;
  return result;
}

uint64_t sub_1C0D0E7B8()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_1C0806670;
  return sub_1C0D0DD98();
}

uint64_t sub_1C0D0E800(uint64_t a1)
{
  uint64_t result;

  result = sub_1C0D0E89C(&qword_1ED750F18, (uint64_t)&unk_1C10B5FD0);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1C0D0E834(uint64_t a1)
{
  uint64_t result;

  result = sub_1C0D0E89C(&qword_1ED750F30, (uint64_t)&unk_1C10B5FF8);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1C0D0E868(uint64_t a1)
{
  uint64_t result;

  result = sub_1C0D0E89C(&qword_1ED750F28, (uint64_t)&unk_1C10B6014);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1C0D0E89C(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for SGContactSourceIngestor();
    result = MEMORY[0x1C3BA8174](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

void sub_1C0D0E8DC(void (*a1)(uint64_t)@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t v3;

  sub_1C0D0E338(a1, a2, *(uint64_t **)(v3 + 16), *(_QWORD *)(v3 + 24), *(_QWORD **)(v3 + 32), *(void **)(v3 + 40), *(_QWORD **)(v3 + 48), *(_QWORD *)(v3 + 56), a3);
}

uint64_t sub_1C0D0E8FC(void *a1)
{
  id v1;
  void *v2;
  uint64_t v3;

  v1 = objc_msgSend(a1, sel_bundleId);
  if (!v1)
    return 0;
  v2 = v1;
  v3 = sub_1C106FB14();

  return v3;
}

uint64_t sub_1C0D0E95C(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 32);
  if (a3)
    return sub_1C0E59318(v3, a3);
  swift_unknownObjectRetain();
  return sub_1C0E5936C(v3, a2);
}

uint64_t sub_1C0D0E9A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4[5] = a3;
  v4[6] = v3;
  v4[3] = a1;
  v4[4] = a2;
  v5 = sub_1C106A918();
  v4[7] = v5;
  v4[8] = *(_QWORD *)(v5 - 8);
  v4[9] = sub_1C0779644();
  v6 = sub_1C106AFE4();
  v4[10] = v6;
  v4[11] = *(_QWORD *)(v6 - 8);
  v4[12] = sub_1C0779644();
  sub_1C07ACF80((uint64_t *)&unk_1ED762690);
  v4[13] = sub_1C077CF7C();
  v4[14] = sub_1C0775870();
  v7 = sub_1C106ADE0();
  v4[15] = v7;
  v4[16] = *(_QWORD *)(v7 - 8);
  v4[17] = sub_1C077CF7C();
  v4[18] = sub_1C0775870();
  v4[19] = sub_1C0775870();
  sub_1C07ACF80((uint64_t *)&unk_1ED762680);
  v4[20] = sub_1C0779644();
  v8 = sub_1C106AB28();
  v4[21] = v8;
  v4[22] = *(_QWORD *)(v8 - 8);
  v4[23] = sub_1C077CF7C();
  v4[24] = sub_1C0775870();
  return sub_1C077AEC4();
}

uint64_t sub_1C0D0EA9C()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  _BYTE *v16;

  v1 = sub_1C0D11390(*(void **)(v0 + 48));
  if (v1
    && (v1 >> 62 ? (v2 = sub_1C0775C1C()) : (v2 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10)),
        v3 = sub_1C077960C(),
        v2))
  {
    v4 = sub_1C078F9D0(v3, (SEL *)&selRef_title);
    sub_1C0795CA4(v4, v5);
    sub_1C07817EC();
    v6 = sub_1C0775844();
    v7 = sub_1C078F9D0(v6, (SEL *)&selRef_notes);
    sub_1C0795CA4(v7, v8);
    sub_1C07817EC();
    v9 = sub_1C0775844();
    v10 = sub_1C078F9D0(v9, (SEL *)&selRef_uniqueKey);
    sub_1C0795CA4(v10, v11);
    sub_1C106FC94();
    sub_1C07767AC();
    sub_1C077960C();
    sub_1C0898824();
    swift_allocError();
    *v16 = 0;
    swift_willThrow();
    swift_task_dealloc();
    sub_1C07796F8();
    sub_1C07758BC();
    sub_1C0779D18();
    sub_1C077C104();
    sub_1C07767D4();
    sub_1C0778638();
    sub_1C0786388();
    sub_1C0779D20();
    swift_task_dealloc();
    return sub_1C077690C(*(uint64_t (**)(void))(v0 + 8));
  }
  else
  {
    if (qword_1ED762B18 != -1)
      swift_once();
    v12 = sub_1C077585C();
    sub_1C079E000(v12, (uint64_t)qword_1ED762AF8);
    v13 = sub_1C106F538();
    v14 = sub_1C10703A8();
    if (os_log_type_enabled(v13, v14))
    {
      v15 = (uint8_t *)sub_1C0775854();
      *(_WORD *)v15 = 0;
      _os_log_impl(&dword_1C0771000, v13, v14, "SGEvent has no associated address", v15, 2u);
      sub_1C0776778();
    }

    swift_task_dealloc();
    sub_1C07767BC();
    sub_1C07796F8();
    sub_1C07758BC();
    sub_1C0779D18();
    sub_1C077C104();
    sub_1C07767D4();
    sub_1C0778638();
    sub_1C0786388();
    sub_1C0779D20();
    return sub_1C079AF48(MEMORY[0x1E0DEE9D8], *(uint64_t (**)(void))(v0 + 8));
  }
}

uint64_t sub_1C0D0F274(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(*v2 + 232) = v1;
  swift_task_dealloc();
  if (v1)
    swift_bridgeObjectRelease();
  else
    *(_QWORD *)(v4 + 240) = a1;
  return swift_task_switch();
}

uint64_t sub_1C0D0F2F0()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(void);

  v1 = *(_QWORD *)(v0 + 232);
  v2 = *(void **)(v0 + 24);
  sub_1C104E4F0(*(_QWORD *)(v0 + 240));
  v3 = sub_1C0D10F08(v2);
  if (v1)
  {
    swift_release();
    sub_1C077B5B4();
    sub_1C079C850();
    sub_1C07767BC();
    sub_1C07796F8();
    sub_1C0779D18();
    sub_1C077C104();
    sub_1C07767D4();
    sub_1C0778638();
    sub_1C0786388();
    sub_1C0779D20();
    swift_task_dealloc();
    v6 = (uint64_t (*)(void))sub_1C07759D4();
    return sub_1C07759B8(v6);
  }
  else
  {
    sub_1C104E50C(v3);
    sub_1C104E528();
    v5 = v4;
    sub_1C077B5B4();
    swift_release();
    sub_1C079C850();
    sub_1C07796F8();
    sub_1C07758BC();
    sub_1C0779D18();
    sub_1C077C104();
    sub_1C07767D4();
    sub_1C0778638();
    sub_1C0786388();
    sub_1C0779D20();
    swift_task_dealloc();
    return sub_1C078C7A8(v5, *(uint64_t (**)(void))(v0 + 8));
  }
}

uint64_t sub_1C0D0F404()
{
  uint64_t v0;

  swift_release();
  swift_task_dealloc();
  sub_1C07796F8();
  sub_1C07758BC();
  sub_1C0779D18();
  sub_1C077C104();
  sub_1C07767D4();
  sub_1C0778638();
  sub_1C0786388();
  sub_1C0779D20();
  sub_1C07767BC();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1C0D0F4A0()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  void *v21;
  void (*v22)(char *, char *, uint64_t);
  id v23;
  void *v24;
  void (*v25)(char *, char *, uint64_t);
  uint64_t v26;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;

  v1 = v0;
  v2 = sub_1C106AFE4();
  v30 = *(_QWORD *)(v2 - 8);
  v31 = v2;
  MEMORY[0x1E0C80A78](v2);
  v3 = sub_1C07ACF80((uint64_t *)&unk_1ED762690);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v28 - v7;
  v9 = sub_1C106ADE0();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v29 = (char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v28 - v13;
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v28 - v16;
  type metadata accessor for SGEventStructs.DateRelationshipType(0);
  sub_1C077B5BC();
  sub_1C105553C();
  v19 = v18;
  v20 = objc_msgSend(v0, sel_start);
  if (v20)
  {
    v21 = v20;
    sub_1C106AD98();

    v22 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
    v22(v8, v14, v9);
    sub_1C0791AE8((uint64_t)v8, 0);
    if (sub_1C07B2D80((uint64_t)v8, 1, v9) != 1)
    {
      v22(v17, v8, v9);
      objc_msgSend(v1, sel_isAllDay);
      sub_1C07B1E68();
      Date.dateComponentsJSONString(isAllDay:calendar:)((char)v8);
      sub_1C07B43D0();
      sub_1C07AE130(OBJC_IVAR____TtCO24IntelligencePlatformCore14SGEventStructs20DateRelationshipType_startTime);
      sub_1C106AC60();
      sub_1C1070180();
      sub_1C07943BC((uint64_t)v17, *(uint64_t (**)(uint64_t, uint64_t))(v10 + 8));
      sub_1C07AE130(OBJC_IVAR____TtCO24IntelligencePlatformCore14SGEventStructs20DateRelationshipType_imputedStartTime);
      goto LABEL_6;
    }
  }
  else
  {
    sub_1C0791AE8((uint64_t)v8, 1);
  }
  sub_1C0784B30((uint64_t)v8, (uint64_t *)&unk_1ED762690);
LABEL_6:
  v23 = objc_msgSend(v1, sel_end);
  if (!v23)
  {
    sub_1C0791AE8((uint64_t)v5, 1);
    goto LABEL_10;
  }
  v24 = v23;
  sub_1C106AD98();

  v25 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
  v25(v5, v14, v9);
  sub_1C0791AE8((uint64_t)v5, 0);
  if (sub_1C07B2D80((uint64_t)v5, 1, v9) == 1)
  {
LABEL_10:
    sub_1C0784B30((uint64_t)v5, (uint64_t *)&unk_1ED762690);
    return v19;
  }
  v26 = (uint64_t)v29;
  v25(v29, v5, v9);
  objc_msgSend(v1, sel_isAllDay);
  sub_1C07B1E68();
  Date.dateComponentsJSONString(isAllDay:calendar:)((char)v25);
  sub_1C07B43D0();
  sub_1C07AE130(OBJC_IVAR____TtCO24IntelligencePlatformCore14SGEventStructs20DateRelationshipType_endTime);
  sub_1C106AC60();
  sub_1C1070180();
  sub_1C07943BC(v26, *(uint64_t (**)(uint64_t, uint64_t))(v10 + 8));
  sub_1C07AE130(OBJC_IVAR____TtCO24IntelligencePlatformCore14SGEventStructs20DateRelationshipType_imputedEndTime);
  return v19;
}

void sub_1C0D0F7FC()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD v29[5];
  __int128 v30;
  __int128 v31;

  v1 = sub_1C0D112DC(v0);
  if (v1)
  {
    v2 = v1;
    v3 = *(_QWORD *)(v1 + 16);
    if (!v3)
    {
      sub_1C07767AC();
      goto LABEL_24;
    }
    sub_1C07767B4();
    v4 = 0;
    v28 = MEMORY[0x1E0DEE9D8];
    v5 = MEMORY[0x1E0DEA968];
    v6 = MEMORY[0x1E0DEA978];
    v27 = v3;
    while (1)
    {
      v7 = *(_QWORD *)(v2 + 8 * v4 + 32);
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      sub_1C10706FC();
      if (*(_QWORD *)(v7 + 16) && (v8 = sub_1C07DCBDC((uint64_t)v29), (v9 & 1) != 0))
      {
        sub_1C0788E98(*(_QWORD *)(v7 + 56) + 32 * v8, (uint64_t)&v30);
      }
      else
      {
        v30 = 0u;
        v31 = 0u;
      }
      sub_1C07DFA90((uint64_t)v29);
      if (*((_QWORD *)&v31 + 1))
      {
        if ((swift_dynamicCast() & 1) != 0)
        {
          v10 = v6;
          v29[0] = 0x6570797440;
          v29[1] = 0xE500000000000000;
          sub_1C07B1280();
          v11 = sub_1C1070630();
          swift_bridgeObjectRelease();
          v12 = *(_QWORD *)(v11 + 16);
          if (v12)
          {
            v13 = v5;
            v14 = (uint64_t *)(v11 + 32 * v12);
            v15 = *v14;
            v16 = v14[1];
            v18 = v14[2];
            v17 = v14[3];
            sub_1C077AEBC();
            sub_1C077960C();
            v19 = MEMORY[0x1C3BA64D0](v15, v16, v18, v17);
            v21 = v20;
            sub_1C0775894();
            sub_1C077B5B4();
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
            {
              v22 = v28;
            }
            else
            {
              sub_1C07B7730();
              v22 = v25;
            }
            v23 = *(_QWORD *)(v22 + 16);
            v5 = v13;
            if (v23 >= *(_QWORD *)(v22 + 24) >> 1)
            {
              sub_1C07B7730();
              v22 = v26;
            }
            v3 = v27;
            *(_QWORD *)(v22 + 16) = v23 + 1;
            v28 = v22;
            v24 = v22 + 16 * v23;
            *(_QWORD *)(v24 + 32) = v19;
            *(_QWORD *)(v24 + 40) = v21;
          }
          else
          {
            sub_1C0775894();
            sub_1C077960C();
          }
          v6 = v10;
          goto LABEL_20;
        }
      }
      else
      {
        sub_1C0784B30((uint64_t)&v30, &qword_1ED760400);
      }
      sub_1C0775894();
LABEL_20:
      if (v3 == ++v4)
      {
        sub_1C07758A4();
        break;
      }
    }
  }
LABEL_24:
  sub_1C07892E0();
}

void sub_1C0D0FA64()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  NSObject *v25;
  os_log_type_t v26;
  uint64_t v27;
  uint64_t v28;
  NSObject *v29;
  os_log_type_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t *v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41[2];
  uint64_t v42;

  v42 = MEMORY[0x1E0DEE9D8];
  v1 = sub_1C0D1133C(v0);
  if (!v1)
    goto LABEL_30;
  v39 = *(_QWORD *)(v1 + 16);
  if (!v39)
  {
LABEL_27:
    swift_bridgeObjectRelease();
    sub_1C07892E0();
    return;
  }
  v38 = v1 + 32;
  sub_1C07B1280();
  v2 = 0;
  while (1)
  {
    v3 = (uint64_t *)(v38 + 16 * v2);
    v4 = *v3;
    v5 = v3[1];
    v41[0] = *v3;
    v41[1] = v5;
    sub_1C07796E0();
    v6 = sub_1C1070630();
    v7 = *(_QWORD *)(v6 + 16);
    if (v7)
    {
      v40 = v4;
      v41[0] = MEMORY[0x1E0DEE9D8];
      sub_1C09D30E0();
      v8 = (_QWORD *)v41[0];
      v9 = (uint64_t *)(v6 + 56);
      do
      {
        v10 = *(v9 - 3);
        v11 = *(v9 - 2);
        v13 = *(v9 - 1);
        v12 = *v9;
        sub_1C077AEBC();
        v14 = MEMORY[0x1C3BA64D0](v10, v11, v13, v12);
        v16 = v15;
        sub_1C077B5B4();
        v41[0] = (uint64_t)v8;
        v17 = v8[2];
        if (v17 >= v8[3] >> 1)
        {
          sub_1C09D30E0();
          v8 = (_QWORD *)v41[0];
        }
        v8[2] = v17 + 1;
        v18 = &v8[2 * v17];
        v18[4] = v14;
        v18[5] = v16;
        v9 += 4;
        --v7;
      }
      while (v7);
      sub_1C07767AC();
      v4 = v40;
    }
    else
    {
      sub_1C07767AC();
      v8 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    }
    if (v8[2] != 2)
    {
      sub_1C077960C();
      if (qword_1ED762B18 != -1)
        swift_once();
      v28 = sub_1C077585C();
      sub_1C079E000(v28, (uint64_t)qword_1ED762AF8);
      sub_1C07796E0();
      v29 = sub_1C106F538();
      v30 = sub_1C1070384();
      if (os_log_type_enabled(v29, v30))
      {
        v31 = sub_1C0775854();
        v41[0] = sub_1C0775854();
        *(_DWORD *)v31 = 136315138;
        sub_1C07796E0();
        *(_QWORD *)(v31 + 4) = sub_1C0788DAC(v4, v5, v41);
        sub_1C078A4F8();
        _os_log_impl(&dword_1C0771000, v29, v30, "SGEventExtenstion: Extraction tag (%s) cannot be parsed, skipping.", (uint8_t *)v31, 0xCu);
        swift_arrayDestroy();
        sub_1C0776778();
      }

      sub_1C07758A4();
      goto LABEL_26;
    }
    sub_1C077E584();
    v19 = v8[2];
    if (!v19)
      break;
    if (v19 == 1)
      goto LABEL_29;
    v21 = v8[4];
    v20 = v8[5];
    v22 = v8[6];
    v23 = v8[7];
    sub_1C07767B4();
    sub_1C07796E0();
    sub_1C077960C();
    if (qword_1ED762B18 != -1)
      swift_once();
    v24 = sub_1C077585C();
    sub_1C079E000(v24, (uint64_t)qword_1ED762AF8);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    v25 = sub_1C106F538();
    v26 = sub_1C1070384();
    if (os_log_type_enabled(v25, v26))
    {
      v27 = sub_1C0775854();
      v41[0] = sub_1C0775854();
      *(_DWORD *)v27 = 136315394;
      sub_1C07767B4();
      *(_QWORD *)(v27 + 4) = sub_1C0788DAC(v21, v20, v41);
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v27 + 12) = 2080;
      sub_1C07796E0();
      *(_QWORD *)(v27 + 14) = sub_1C0788DAC(v22, v23, v41);
      sub_1C078A4F8();
      sub_1C07A9A38(&dword_1C0771000, v25, v26, "SGEventExtenstion: Extraction tag name (%s) with value (%s)");
      swift_arrayDestroy();
      sub_1C0776778();
    }

    sub_1C07758A4();
    sub_1C07758A4();
    type metadata accessor for SGEventStructs.ExtractionTagRelationshipType(0);
    sub_1C077B5BC();
    sub_1C1053C40();
    v33 = v32;
    v34 = (uint64_t *)(v32
                    + OBJC_IVAR____TtCO24IntelligencePlatformCore14SGEventStructs29ExtractionTagRelationshipType_name);
    *v34 = v21;
    v34[1] = v20;
    swift_bridgeObjectRelease();
    v35 = (uint64_t *)(v33
                    + OBJC_IVAR____TtCO24IntelligencePlatformCore14SGEventStructs29ExtractionTagRelationshipType_textValue);
    *v35 = v22;
    v35[1] = v23;
    swift_bridgeObjectRelease();
    v36 = swift_retain();
    MEMORY[0x1C3BA6800](v36);
    v37 = *(_QWORD *)((v42 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (*(_QWORD *)((v42 & 0xFFFFFFFFFFFFFF8) + 0x10) >= v37 >> 1)
    {
      sub_1C07BCA40(v37);
      sub_1C106FF58();
    }
    sub_1C106FFC4();
    sub_1C106FF28();
    swift_release();
LABEL_26:
    if (++v2 == v39)
      goto LABEL_27;
  }
  __break(1u);
LABEL_29:
  __break(1u);
LABEL_30:
  __break(1u);
}

uint64_t sub_1C0D0FF40(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[18] = a2;
  v3[19] = v2;
  v3[17] = a1;
  return swift_task_switch();
}

unint64_t sub_1C0D0FF5C()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t result;
  uint64_t i;
  uint64_t v4;
  char **v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  char v21;
  void *v22;
  char v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char **v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  *(_QWORD *)(v0 + 120) = MEMORY[0x1E0DEE9D8];
  v1 = v0 + 120;
  result = sub_1C0D11390(*(void **)(v0 + 152));
  *(_QWORD *)(v0 + 160) = result;
  if (result)
  {
    if (result >> 62)
      goto LABEL_35;
    for (i = *(_QWORD *)((result & 0xFFFFFFFFFFFFFF8) + 0x10); ; i = sub_1C0775C1C())
    {
      *(_QWORD *)(v0 + 168) = i;
      if (!i)
        break;
      v4 = 0;
      v46 = v1 - 40;
      v5 = &selRef_address;
      while (1)
      {
        v6 = *(_QWORD *)(v0 + 160);
        if ((v6 & 0xC000000000000001) != 0)
          sub_1C079EE04();
        v7 = sub_1C07B720C(i, v6);
        *(_QWORD *)(v0 + 176) = v7;
        *(_QWORD *)(v0 + 184) = v4 + 1;
        if (__OFADD__(v4, 1))
          break;
        *(_QWORD *)(v0 + 80) = 0;
        *(_QWORD *)(v0 + 88) = 0xE000000000000000;
        v8 = sub_1C078DC88();
        sub_1C0795CA4(v8, v9);
        sub_1C106FC94();
        sub_1C0775844();
        objc_msgSend(v7, sel_latitude);
        v10 = (void *)MEMORY[0x1E0DED588];
        sub_1C10701B0();
        objc_msgSend(v7, sel_longitude);
        sub_1C10701B0();
        if (qword_1ED749B30 != -1)
          swift_once();
        v11 = sub_1C078DE84();
        sub_1C079E000(v11, (uint64_t)&qword_1ED78C8B8);
        sub_1C07A1F88();
        sub_1C077960C();
        sub_1C07B6318();
        sub_1C077B5BC();
        sub_1C1056A3C();
        *(_QWORD *)(v0 + 192) = v12;
        *(_QWORD *)(v0 + 200) = 0;
        v13 = sub_1C078DC88();
        if (v14)
          sub_1C078F6B0(v13, v14);
        v15 = *(void **)(v0 + 144);
        if (v15)
        {
          v16 = v15;
          v17 = sub_1C0D113EC(v7);
          v19 = sub_1C07AD364(v17, v18);
          if (v21)
          {
            v22 = *(void **)(v0 + 144);
          }
          else
          {
            v23 = sub_1C07A33C4(v19, v20);
            if ((v23 & 1) == 0)
            {
              v45 = sub_1C07A028C();
              *(_QWORD *)(v0 + 224) = v45;
              *(_QWORD *)(v0 + 56) = v0 + 128;
              *(_QWORD *)(v0 + 112) = sub_1C0795380((uint64_t)sub_1C0D10384);
              *(_QWORD *)(v0 + 80) = MEMORY[0x1E0C809B0];
              *(_QWORD *)(v0 + 88) = 0x40000000;
              *(_QWORD *)(v0 + 96) = sub_1C0D0E95C;
              *(_QWORD *)(v0 + 104) = &unk_1E7A2E310;
              objc_msgSend(v10, sel_resolveMapItemFromHandle_completionHandler_, v45, v46);
              return swift_continuation_await();
            }
            v22 = *(void **)(v0 + 144);
            sub_1C0791548();
          }

        }
        v24 = *(void **)(v0 + 176);
        sub_1C07B808C();
        sub_1C077B5BC();
        sub_1C0791FB0();
        objc_msgSend(v24, sel_latitude);
        if ((~v25 & 0x7FF0000000000000) != 0)
        {
          sub_1C07AEA4C();
          v26 = sub_1C1070180();
          sub_1C078F6B0(v26, v27);
        }
        sub_1C07AD7E0();
        if ((~v28 & 0x7FF0000000000000) != 0)
        {
          sub_1C07AD7E0();
          v29 = sub_1C1070180();
          sub_1C078F6B0(v29, v30);
        }
        v31 = *(void **)(v0 + 176);
        v32 = swift_retain();
        sub_1C104F97C(v32);
        swift_allocObject();
        sub_1C0791FB0();
        v33 = sub_1C080AD1C(v31, (SEL *)&selRef_label);
        if (v34)
          sub_1C078F6B0(v33, v34);
        v35 = v5;
        v36 = sub_1C07AB8E0();
        sub_1C104F998(v36);
        v37 = swift_retain();
        MEMORY[0x1C3BA6800](v37);
        sub_1C07851F8();
        if (v21)
        {
          sub_1C07BCA40(v38);
          sub_1C106FF58();
        }
        v39 = v1;
        v40 = *(_QWORD *)(v0 + 184);
        v41 = *(_QWORD *)(v0 + 168);
        v42 = *(void **)(v0 + 176);
        sub_1C106FFC4();
        v43 = v39;
        sub_1C106FF28();

        swift_release();
        swift_release();
        i = swift_release();
        if (v40 == v41)
        {
          sub_1C077D334();
          v44 = *(_QWORD *)(v0 + 120);
          return sub_1C078C7A8(v44, *(uint64_t (**)(void))(v0 + 8));
        }
        v4 = *(_QWORD *)(v0 + 184);
        v5 = v35;
        v1 = v43;
      }
      __break(1u);
LABEL_35:
      ;
    }
    sub_1C077960C();
    v44 = MEMORY[0x1E0DEE9D8];
    return sub_1C078C7A8(v44, *(uint64_t (**)(void))(v0 + 8));
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1C0D10384()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 232) = *(_QWORD *)(*(_QWORD *)v0 + 48);
  return sub_1C077AEC4();
}

uint64_t sub_1C0D103DC()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  void *v5;
  uint64_t v6;
  id v7;
  id v8;
  NSObject *v9;
  os_log_type_t v10;
  _BOOL4 v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  NSObject *v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  void *v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  char v49;
  uint64_t v50;
  uint64_t v51;
  void *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  id v58;
  void *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  void *v68;
  id v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;
  void *v74;
  char v75;
  uint64_t (*v77)(void);
  uint64_t v78;
  void *v79;
  os_log_type_t v80;
  uint64_t v81;
  uint64_t v82[2];

  v1 = *(void **)(v0 + 128);
  v2 = v0 + 80;
  v3 = v0 + 120;
  v4 = *(void **)(v0 + 224);
  if (v1)
  {

    if ((objc_msgSend(v1, sel__hasMUID) & 1) != 0)
    {
      if (qword_1ED762B18 != -1)
LABEL_38:
        swift_once();
      v5 = *(void **)(v0 + 176);
      v6 = sub_1C077585C();
      sub_1C079E000(v6, (uint64_t)qword_1ED762AF8);
      v7 = v5;
      swift_unknownObjectRetain_n();
      v8 = v7;
      v9 = sub_1C106F538();
      v10 = sub_1C1070384();
      v11 = os_log_type_enabled(v9, v10);
      v12 = *(void **)(v0 + 176);
      if (v11)
      {
        v80 = v10;
        v13 = sub_1C0775854();
        v82[0] = sub_1C0775854();
        *(_DWORD *)v13 = 136380931;
        v14 = sub_1C080AD1C(v12, (SEL *)&selRef_address);
        *(_QWORD *)(v0 + 88) = v15;
        *(_QWORD *)(v0 + 80) = v14;
        sub_1C07ACF80(&qword_1ED762B50);
        v16 = sub_1C106FB5C();
        *(_QWORD *)(v0 + 80) = sub_1C0788DAC(v16, v17, v82);
        sub_1C10705AC();
        swift_bridgeObjectRelease();

        *(_WORD *)(v13 + 12) = 2081;
        v19 = sub_1C0780FE4(v18, sel_description);
        v20 = sub_1C106FB14();
        v21 = v9;
        v23 = v22;

        *(_QWORD *)(v0 + 80) = sub_1C0788DAC(v20, v23, v82);
        sub_1C10705AC();
        sub_1C077960C();
        sub_1C0779A40();
        sub_1C07A9A38(&dword_1C0771000, v21, v80, "GeoMapItem for %{private}s is %{private}s");
        swift_arrayDestroy();
        sub_1C0776778();
      }

      sub_1C0779A40();
      v27 = *(void **)(v0 + 144);
      type metadata accessor for SGEventStructs.IdentifierRelationshipType(0);
      sub_1C077B5BC();
      sub_1C0780C5C();
      v29 = v28;
      *(_QWORD *)(v0 + 80) = sub_1C0780FE4(v28, sel__muid);
      v30 = sub_1C1070C0C();
      sub_1C078F6B0(v30, v31);
      *(_OWORD *)(v29
                + OBJC_IVAR____TtCO24IntelligencePlatformCore14SGEventStructs26IdentifierRelationshipType_identifierType) = xmmword_1C1088B90;
      swift_bridgeObjectRelease();
      v32 = swift_retain();
      sub_1C104F960(v32);
      swift_release();
      swift_unknownObjectRelease();
      sub_1C07768E4();

    }
    else
    {
      v25 = *(_QWORD *)(v0 + 208);
      v24 = *(_QWORD *)(v0 + 216);
      v26 = *(void **)(v0 + 144);
      swift_unknownObjectRelease();
      sub_1C07B33B8(v25, v24);

    }
  }
  else
  {

    sub_1C0791548();
  }
  v33 = *(_QWORD *)(v0 + 200);
  v79 = (void *)sub_1C07B808C();
  while (1)
  {
    do
    {
      v34 = *(void **)(v0 + 176);
      sub_1C078FB04();
      sub_1C0791FB0();
      objc_msgSend(v34, sel_latitude);
      if ((~v35 & 0x7FF0000000000000) != 0)
      {
        objc_msgSend(*(id *)(v0 + 176), sel_latitude);
        v36 = sub_1C1070180();
        sub_1C078F6B0(v36, v37);
      }
      objc_msgSend(*(id *)(v0 + 176), sel_longitude);
      if ((~v38 & 0x7FF0000000000000) != 0)
      {
        objc_msgSend(*(id *)(v0 + 176), sel_longitude);
        v39 = sub_1C1070180();
        sub_1C078F6B0(v39, v40);
      }
      v81 = v33;
      v41 = *(void **)(v0 + 176);
      v42 = swift_retain();
      sub_1C104F97C(v42);
      sub_1C078FB04();
      sub_1C0791FB0();
      v43 = sub_1C080AD1C(v41, (SEL *)&selRef_label);
      if (v44)
        sub_1C078F6B0(v43, v44);
      v45 = v2;
      v46 = sub_1C07AB8E0();
      sub_1C104F998(v46);
      v47 = swift_retain();
      MEMORY[0x1C3BA6800](v47);
      sub_1C07851F8();
      if (v49)
      {
        sub_1C07BCA40(v48);
        sub_1C106FF58();
      }
      v50 = *(_QWORD *)(v0 + 184);
      v51 = v3;
      v53 = *(_QWORD *)(v0 + 168);
      v52 = *(void **)(v0 + 176);
      sub_1C106FFC4();
      v54 = v51;
      sub_1C106FF28();

      swift_release();
      swift_release();
      v55 = swift_release();
      if (v50 == v53)
      {
        sub_1C077D334();
        return sub_1C079AF48(*(_QWORD *)(v0 + 120), *(uint64_t (**)(void))(v0 + 8));
      }
      v56 = *(_QWORD *)(v0 + 184);
      v57 = *(_QWORD *)(v0 + 160);
      if ((v57 & 0xC000000000000001) != 0)
        sub_1C079EE04();
      v58 = sub_1C07B720C(v55, v57);
      v59 = v58;
      v2 = v45;
      v3 = v54;
      *(_QWORD *)(v0 + 176) = v58;
      *(_QWORD *)(v0 + 184) = v56 + 1;
      if (__OFADD__(v56, 1))
      {
        __break(1u);
        goto LABEL_38;
      }
      *(_QWORD *)(v0 + 80) = 0;
      *(_QWORD *)(v0 + 88) = 0xE000000000000000;
      v60 = sub_1C080AD1C(v58, (SEL *)&selRef_address);
      sub_1C0795CA4(v60, v61);
      sub_1C106FC94();
      v62 = sub_1C0775894();
      sub_1C079866C(v62, sel_latitude);
      v63 = sub_1C10701B0();
      sub_1C079866C(v63, sel_longitude);
      sub_1C10701B0();
      if (qword_1ED749B30 != -1)
        swift_once();
      v64 = sub_1C078DE84();
      sub_1C079E000(v64, (uint64_t)&qword_1ED78C8B8);
      sub_1C07A1F88();
      sub_1C077960C();
      sub_1C07B6318();
      sub_1C077B5BC();
      sub_1C1056A3C();
      *(_QWORD *)(v0 + 192) = v65;
      *(_QWORD *)(v0 + 200) = v81;
      if (v81)
      {

        sub_1C077960C();
        sub_1C0789FA8();
        v77 = (uint64_t (*)(void))sub_1C07759D4();
        return sub_1C077690C(v77);
      }
      v66 = sub_1C080AD1C(v59, (SEL *)&selRef_address);
      if (v67)
        sub_1C078F6B0(v66, v67);
      v33 = 0;
      v68 = *(void **)(v0 + 144);
    }
    while (!v68);
    v69 = v68;
    v70 = sub_1C0D113EC(v59);
    v72 = sub_1C07AD364(v70, v71);
    if (v49)
    {
      v74 = *(void **)(v0 + 144);
      goto LABEL_33;
    }
    v75 = sub_1C07A33C4(v72, v73);
    if ((v75 & 1) == 0)
      break;
    v74 = *(void **)(v0 + 144);
    sub_1C0791548();
LABEL_33:

    v33 = 0;
  }
  v78 = sub_1C07A028C();
  *(_QWORD *)(v0 + 224) = v78;
  *(_QWORD *)(v0 + 56) = v0 + 128;
  *(_QWORD *)(v0 + 112) = sub_1C0795380((uint64_t)sub_1C0D10384);
  *(_QWORD *)(v0 + 80) = MEMORY[0x1E0C809B0];
  *(_QWORD *)(v0 + 88) = 0x40000000;
  *(_QWORD *)(v0 + 96) = sub_1C0D0E95C;
  *(_QWORD *)(v0 + 104) = &unk_1E7A2E310;
  objc_msgSend(v79, sel_resolveMapItemFromHandle_completionHandler_, v78, v2);
  return swift_continuation_await();
}

id sub_1C0D10AD0()
{
  _QWORD *v0;
  _QWORD *v1;
  void *v2;
  void *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  void *v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id result;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  char v44;
  void *v45;
  char v46;
  uint64_t v48;
  void *v49;
  unsigned __int8 v50[9];

  v1 = v0 + 15;
  v3 = (void *)v0[28];
  v2 = (void *)v0[29];
  v4 = v0[17];
  v5 = (void *)v0[18];
  swift_willThrow();

  sub_1C07768E4();
  v50[0] = 1;
  static Transformers.reportError(error:context:config:pipelineType:)((uint64_t)v2, 0xD00000000000001BLL, 0x80000001C11096C0, v4, v50);

  v49 = (void *)sub_1C07B808C();
  while (1)
  {
    sub_1C078FB04();
    sub_1C0791FB0();
    sub_1C079866C(v6, sel_latitude);
    if ((~v7 & 0x7FF0000000000000) != 0)
    {
      sub_1C07AEA4C();
      v8 = sub_1C1070180();
      sub_1C078F6B0(v8, v9);
    }
    sub_1C077F3B8();
    if ((~v10 & 0x7FF0000000000000) != 0)
    {
      sub_1C077F3B8();
      v11 = sub_1C1070180();
      sub_1C078F6B0(v11, v12);
    }
    v13 = (void *)v0[22];
    v14 = swift_retain();
    sub_1C104F97C(v14);
    sub_1C078FB04();
    sub_1C0791FB0();
    v15 = sub_1C080AD1C(v13, (SEL *)&selRef_label);
    if (v16)
      sub_1C078F6B0(v15, v16);
    v17 = sub_1C07AB8E0();
    sub_1C104F998(v17);
    v18 = swift_retain();
    MEMORY[0x1C3BA6800](v18);
    v19 = *(_QWORD *)((v0[15] & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (*(_QWORD *)((v0[15] & 0xFFFFFFFFFFFFFF8) + 0x10) >= v19 >> 1)
    {
      sub_1C07BCA40(v19);
      sub_1C106FF58();
    }
    v20 = v0[23];
    v21 = v1;
    v23 = v0[21];
    v22 = (void *)v0[22];
    sub_1C106FFC4();
    v24 = v21;
    sub_1C106FF28();

    swift_release();
    swift_release();
    v25 = swift_release();
    if (v20 == v23)
    {
      sub_1C077D334();
      sub_1C077C524();
      __asm { BR              X1 }
    }
    v26 = v0[23];
    v27 = v0[20];
    if ((v27 & 0xC000000000000001) != 0)
      sub_1C079EE04();
    result = sub_1C07B720C(v25, v27);
    v29 = result;
    v1 = v24;
    v0[22] = result;
    v0[23] = v26 + 1;
    if (__OFADD__(v26, 1))
      break;
    v0[10] = 0;
    v0[11] = 0xE000000000000000;
    v30 = sub_1C0788A50();
    sub_1C0795CA4(v30, v31);
    sub_1C106FC94();
    v32 = sub_1C0775844();
    sub_1C079866C(v32, sel_latitude);
    v33 = sub_1C10701B0();
    sub_1C079866C(v33, (const char *)0x1F30084C8);
    sub_1C10701B0();
    if (qword_1ED749B30 != -1)
      swift_once();
    v34 = sub_1C078DE84();
    sub_1C079E000(v34, (uint64_t)&qword_1ED78C8B8);
    sub_1C07A1F88();
    sub_1C077960C();
    sub_1C07B6318();
    sub_1C077B5BC();
    sub_1C1056A3C();
    v0[24] = v35;
    v0[25] = 0;
    v36 = sub_1C0788A50();
    if (v37)
      sub_1C078F6B0(v36, v37);
    v38 = (void *)v0[18];
    if (v38)
    {
      v39 = v38;
      v40 = sub_1C0D113EC(v29);
      v42 = sub_1C07AD364(v40, v41);
      if (v44)
      {
        v45 = (void *)v0[18];
      }
      else
      {
        v46 = sub_1C07A33C4(v42, v43);
        if ((v46 & 1) == 0)
        {
          v48 = sub_1C07A028C();
          v0[28] = v48;
          v0[7] = v0 + 16;
          v0[14] = sub_1C0795380((uint64_t)sub_1C0D10384);
          v0[10] = MEMORY[0x1E0C809B0];
          v0[11] = 0x40000000;
          v0[12] = sub_1C0D0E95C;
          v0[13] = &unk_1E7A2E310;
          objc_msgSend(v49, sel_resolveMapItemFromHandle_completionHandler_, v48, v0 + 10);
          sub_1C077C524();
          return (id)swift_continuation_await();
        }
        v45 = (void *)v0[18];
        sub_1C0791548();
      }

    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1C0D10F08(void *a1)
{
  uint64_t v1;
  id v2;
  uint64_t v3;
  id v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  void *v31;
  id v32;
  uint64_t *v33;
  _QWORD *v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  uint64_t v39;
  id v40;
  uint64_t v41;

  if (!a1)
    return 0;
  v2 = a1;
  v3 = sub_1C080AD1C(v2, (SEL *)&selRef_displayName);
  v4 = sub_1C077B0D8(v3, sel_handleIdentifier);
  sub_1C106FB14();

  sub_1C077F8AC();
  sub_1C106FC94();
  swift_bridgeObjectRelease();
  v5 = swift_bridgeObjectRelease();
  v6 = sub_1C077B0D8(v5, sel_handles);
  v7 = sub_1C106FF04();

  if (*(_QWORD *)(v7 + 16))
    sub_1C077AEBC();
  swift_bridgeObjectRelease();
  sub_1C077F8AC();
  sub_1C106FC94();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (qword_1ED749C88 != -1)
    swift_once();
  v9 = type metadata accessor for SourceIdPrefix();
  sub_1C079E000(v9, (uint64_t)&unk_1ED78CA20);
  String.base64EncodedSHA(withPrefix:)();
  v8 = v10;
  swift_bridgeObjectRelease();
  type metadata accessor for SGEventStructs.Person(0);
  swift_allocObject();
  sub_1C10509BC();
  if (v1)
  {

  }
  else
  {
    v8 = v11;
    v12 = sub_1C080AD1C(v2, (SEL *)&selRef_displayName);
    v13 = (uint64_t *)(v8 + OBJC_IVAR____TtCO24IntelligencePlatformCore14SGEventStructs6Person_name);
    *v13 = v12;
    v13[1] = v14;
    v15 = swift_bridgeObjectRelease();
    v16 = sub_1C077B0D8(v15, sel_handleIdentifier);
    v17 = sub_1C106FB14();
    v19 = v18;

    v20 = (uint64_t *)(v8 + OBJC_IVAR____TtCO24IntelligencePlatformCore14SGEventStructs6Person_handleIdentifier);
    *v20 = v17;
    v20[1] = v19;
    v21 = swift_bridgeObjectRelease();
    v41 = MEMORY[0x1E0DEE9D8];
    v22 = sub_1C077B0D8(v21, sel_handles);
    v23 = sub_1C106FF04();

    v24 = *(_QWORD *)(v23 + 16);
    if (v24)
    {
      v39 = v8;
      v40 = v2;
      type metadata accessor for SGEventStructs.AddressRelationshipType(0);
      v25 = (uint64_t *)(v23 + 40);
      do
      {
        v26 = *(v25 - 1);
        v27 = *v25;
        swift_allocObject();
        sub_1C07796E0();
        sub_1C104FF14();
        v29 = v28;
        v30 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D13A70]), sel_init);
        v31 = (void *)sub_1C106FAF0();
        v32 = objc_msgSend(v30, sel_typeOfHandleString_, v31);

        v33 = &OBJC_IVAR____TtCO24IntelligencePlatformCore14SGEventStructs23AddressRelationshipType_emailAddress;
        if (v32 != (id)1)
          v33 = &OBJC_IVAR____TtCO24IntelligencePlatformCore14SGEventStructs23AddressRelationshipType_phoneNumber;
        v34 = (_QWORD *)(v29 + *v33);
        *v34 = v26;
        v34[1] = v27;
        swift_bridgeObjectRelease();
        v35 = swift_retain();
        MEMORY[0x1C3BA6800](v35);
        sub_1C07851F8();
        if (v36)
          sub_1C106FF58();
        v25 += 2;
        sub_1C106FFC4();
        sub_1C106FF28();
        swift_release();
        --v24;
      }
      while (v24);
      swift_bridgeObjectRelease();
      v2 = v40;
      v37 = v41;
      v8 = v39;
    }
    else
    {
      swift_bridgeObjectRelease();
      v37 = MEMORY[0x1E0DEE9D8];
    }
    sub_1C104F944(v37);

  }
  return v8;
}

uint64_t sub_1C0D112DC(void *a1)
{
  id v1;
  void *v2;
  uint64_t v3;

  v1 = objc_msgSend(a1, sel_schemaOrg);
  if (!v1)
    return 0;
  v2 = v1;
  sub_1C07ACF80(&qword_1EF641B60);
  v3 = sub_1C106FF04();

  return v3;
}

uint64_t sub_1C0D1133C(void *a1)
{
  id v1;
  void *v2;
  uint64_t v3;

  v1 = objc_msgSend(a1, sel_tags);
  if (!v1)
    return 0;
  v2 = v1;
  v3 = sub_1C106FF04();

  return v3;
}

uint64_t sub_1C0D11390(void *a1)
{
  id v1;
  void *v2;
  uint64_t v3;

  v1 = objc_msgSend(a1, sel_locations);
  if (!v1)
    return 0;
  v2 = v1;
  sub_1C0D1144C();
  v3 = sub_1C106FF04();

  return v3;
}

uint64_t sub_1C0D113EC(void *a1)
{
  id v1;
  void *v2;
  uint64_t v3;

  v1 = objc_msgSend(a1, sel_handle);
  if (!v1)
    return 0;
  v2 = v1;
  v3 = sub_1C106AC18();

  return v3;
}

unint64_t sub_1C0D1144C()
{
  unint64_t result;

  result = qword_1EF647E50;
  if (!qword_1EF647E50)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EF647E50);
  }
  return result;
}

uint64_t sub_1C0D11488()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1C0D11494(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v11;
  int v12;

  v6 = sub_1C077D0AC();
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)v3)
  {
    v7 = v6;
    v8 = v4;
    return sub_1C07B2D80(v8, v3, v7);
  }
  v9 = type metadata accessor for Source();
  if (*(_DWORD *)(*(_QWORD *)(v9 - 8) + 84) == (_DWORD)v3)
  {
    v7 = v9;
    v8 = v4 + *(int *)(a3 + 20);
    return sub_1C07B2D80(v8, v3, v7);
  }
  v11 = *(_QWORD *)(v4 + *(int *)(a3 + 28));
  if (v11 >= 0xFFFFFFFF)
    LODWORD(v11) = -1;
  v12 = v11 - 1;
  if (v12 < 0)
    v12 = -1;
  return (v12 + 1);
}

uint64_t sub_1C0D11534()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1C0D11540(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;

  v8 = sub_1C077D0AC();
  if (*(_DWORD *)(*(_QWORD *)(v8 - 8) + 84) == a3)
  {
    v9 = v8;
    v10 = v5;
    return sub_1C07B2D8C(v10, v4, v4, v9);
  }
  result = type metadata accessor for Source();
  if (*(_DWORD *)(*(_QWORD *)(result - 8) + 84) == a3)
  {
    v9 = result;
    v10 = v5 + *(int *)(a4 + 20);
    return sub_1C07B2D8C(v10, v4, v4, v9);
  }
  *(_QWORD *)(v5 + *(int *)(a4 + 28)) = v4;
  return result;
}

uint64_t type metadata accessor for SGEventSourceIngestor()
{
  uint64_t result;

  result = qword_1ED750C18;
  if (!qword_1ED750C18)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1C0D11608()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = type metadata accessor for PhaseStores();
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for Source();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t sub_1C0D116A0()
{
  uint64_t v0;
  _QWORD *v1;

  v1[34] = v0;
  v1[35] = type metadata accessor for SGEventSourceIngestor();
  v1[36] = swift_task_alloc();
  sub_1C077862C();
  return sub_1C077AEC4();
}

uint64_t sub_1C0D116F0()
{
  _QWORD *v0;
  void *v1;
  id v2;
  uint64_t v3;
  _QWORD *v4;

  v0[30] = 0;
  v0[31] = 0;
  v1 = (void *)objc_opt_self();
  v0[37] = objc_msgSend(v1, sel_serviceForContacts);
  v2 = objc_msgSend(v1, sel_serviceForEvents);
  v0[38] = v2;
  v0[15] = v0 + 28;
  v0[10] = v0;
  v0[11] = sub_1C0D117D4;
  v3 = swift_continuation_init();
  v0[23] = MEMORY[0x1E0C809B0];
  v4 = v0 + 23;
  v4[1] = 0x40000000;
  sub_1C07A1F90(v3, (uint64_t)sub_1C0D127F4);
  objc_msgSend(v2, sel_allEventsLimitedTo_withCompletion_, 10000, v4);
  return swift_continuation_await();
}

uint64_t sub_1C0D117D4()
{
  uint64_t v0;

  sub_1C07932E0();
  *(_QWORD *)(v0 + 312) = *(_QWORD *)(v0 + 112);
  sub_1C077862C();
  return sub_1C077AEC4();
}

uint64_t sub_1C0D11818()
{
  _QWORD *v0;
  os_log_type_t v1;
  unint64_t v2;
  NSObject *v3;
  _QWORD *v4;
  uint64_t v5;
  id v6;
  uint64_t (*v7)(void);
  void *v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  os_log_type_t v13;
  _BOOL8 v14;
  uint8_t *v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  sub_1C079595C();
  v2 = v0[28];
  v0[40] = v2;
  swift_unknownObjectRelease();
  if (v2 >> 62)
  {
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    v3 = sub_1C10709B4();
    sub_1C077960C();
  }
  else
  {
    v3 = *(NSObject **)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v4 = v0 + 31;
  v0[41] = v3;
  if (!v3)
  {
    sub_1C077960C();
    sub_1C07B43E8();
    sub_1C079E848();
    sub_1C0779714();
    sub_1C07B19F0(v2);
    sub_1C077C104();
    v7 = (uint64_t (*)(void))sub_1C0779830();
    return sub_1C077690C(v7);
  }
  v5 = v0[40];
  if ((v5 & 0xC000000000000001) != 0)
    v6 = (id)MEMORY[0x1C3BA70DC](0);
  else
    v6 = *(id *)(v5 + 32);
  v8 = v6;
  v0[42] = v6;
  v0[43] = 1;
  result = sub_1C1070120();
  if ((result & 1) != 0)
  {
    if (qword_1ED761458 != -1)
      swift_once();
    v10 = sub_1C0796AD0();
    v11 = sub_1C079E000(v10, (uint64_t)qword_1ED78D818);
    sub_1C079FE00(v11, v12, (uint64_t (*)(_QWORD))type metadata accessor for SGEventSourceIngestor);
    sub_1C07815B8();
    v13 = sub_1C07893D0();
    v14 = sub_1C07AC738(v13);
    if (v14)
    {
      v15 = (uint8_t *)sub_1C0775854();
      sub_1C0775854();
      sub_1C0790A8C();
      *(_DWORD *)v15 = 136315138;
      sub_1C0887BA0();
      v0[33] = sub_1C0795B98(v16, v17, v18, v19, v20, v21, v22);
      sub_1C10705AC();
      v23 = swift_bridgeObjectRelease();
      sub_1C0775ADC(v23, (uint64_t (*)(_QWORD))type metadata accessor for SGEventSourceIngestor);
      _os_log_impl(&dword_1C0771000, v3, v1, "%s going to defer", v15, 0xCu);
      sub_1C0797B2C();
      sub_1C0776778();
    }
    sub_1C0775ADC(v14, (uint64_t (*)(_QWORD))type metadata accessor for SGEventSourceIngestor);

    sub_1C107006C();
    sub_1C0794BAC(&qword_1ED759800, (uint64_t (*)(uint64_t))MEMORY[0x1E0DF05E0], MEMORY[0x1E0DF05E8]);
    sub_1C079A10C();
    sub_1C07B8C08();
    swift_willThrow();
    sub_1C077960C();

    swift_unknownObjectRelease();
    sub_1C07B19F0(v0[34]);
    sub_1C07767BC();
    v7 = (uint64_t (*)(void))v0[1];
    return sub_1C077690C(v7);
  }
  if (__OFADD__(*v4, 1))
  {
    __break(1u);
  }
  else
  {
    sub_1C0793F80(*v4 + 1);
    sub_1C079B9B0((uint64_t)objc_msgSend(v8, sel_recordId));
    v24 = sub_1C078FB14((uint64_t)sub_1C0D11B0C);
    v0[18] = MEMORY[0x1E0C809B0];
    v0[19] = 0x40000000;
    v25 = sub_1C07A1F90(v24, (uint64_t)sub_1C0A15340);
    sub_1C0788278(v25, sel_originFromRecordId_withCompletion_);
    return sub_1C07A1424();
  }
  return result;
}

uint64_t sub_1C0D11B0C()
{
  uint64_t v0;

  sub_1C07932E0();
  *(_QWORD *)(v0 + 360) = *(_QWORD *)(v0 + 48);
  sub_1C077862C();
  return sub_1C077AEC4();
}

uint64_t sub_1C0D11B50()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  uint64_t v6;
  _QWORD *v7;

  v1 = (void *)v0[44];
  v3 = v0[34];
  v2 = v0[35];
  v4 = (void *)v0[29];
  v0[46] = v4;

  v5 = objc_msgSend(v4, sel_fromPerson);
  v0[47] = v5;
  v6 = *(_QWORD *)(v3 + *(int *)(v2 + 28));
  v7 = (_QWORD *)swift_task_alloc();
  v0[48] = v7;
  *v7 = v0;
  v7[1] = sub_1C0D11BE8;
  return sub_1C0D0E9A8((uint64_t)v5, v6, v0[34]);
}

uint64_t sub_1C0D11BE8(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(*v2 + 392) = v1;
  swift_task_dealloc();
  if (!v1)
    *(_QWORD *)(v4 + 400) = a1;
  sub_1C077862C();
  return swift_task_switch();
}

#error "1C0D11D9C: call analysis failed (funcsize=154)"

uint64_t sub_1C0D11F00()
{
  uint64_t v0;

  swift_willThrow();
  sub_1C0795FE4();
  swift_unknownObjectRelease();
  sub_1C0795390(*(_QWORD *)(v0 + 272), (_QWORD *)(v0 + 240));
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1C0D11F7C()
{
  _QWORD *v0;
  os_log_type_t v1;
  _QWORD *v2;
  NSObject *v3;
  void *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t (*v10)(void);
  id v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  os_log_type_t v16;
  _BOOL8 v17;
  uint8_t *v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  sub_1C079595C();
  v2 = v0 + 31;
  v4 = (void *)v0[44];
  v3 = v0[45];
  v5 = (void *)v0[42];
  swift_willThrow();

  sub_1C077CF90();
  sub_1C07AB104();
  if (v8)
  {
    sub_1C07A4460();
    v9 = v0[34];
    sub_1C106AC6C();
    sub_1C079E848();
    sub_1C0779714();
    sub_1C0795390(v9, v0 + 30);
    swift_task_dealloc();
    v10 = (uint64_t (*)(void))sub_1C0779830();
    return sub_1C077690C(v10);
  }
  if ((v7 & 0xC000000000000001) != 0)
    sub_1C079EE04();
  v11 = sub_1C07B720C(v6, v7);
  v0[42] = v11;
  v0[43] = (char *)&v3->isa + 1;
  if (__OFADD__(v3, 1))
  {
    __break(1u);
    goto LABEL_16;
  }
  result = sub_1C1070120();
  if ((result & 1) != 0)
  {
    if (qword_1ED761458 == -1)
    {
LABEL_9:
      v13 = sub_1C0796AD0();
      v14 = sub_1C079E000(v13, (uint64_t)qword_1ED78D818);
      sub_1C079FE00(v14, v15, (uint64_t (*)(_QWORD))type metadata accessor for SGEventSourceIngestor);
      sub_1C07815B8();
      v16 = sub_1C07893D0();
      v17 = sub_1C07AC738(v16);
      if (v17)
      {
        v18 = (uint8_t *)sub_1C0775854();
        sub_1C0775854();
        sub_1C0790A8C();
        *(_DWORD *)v18 = 136315138;
        sub_1C0887BA0();
        v0[33] = sub_1C0795B98(v19, v20, v21, v22, v23, v24, v25);
        sub_1C10705AC();
        v26 = swift_bridgeObjectRelease();
        sub_1C0775ADC(v26, (uint64_t (*)(_QWORD))type metadata accessor for SGEventSourceIngestor);
        _os_log_impl(&dword_1C0771000, v3, v1, "%s going to defer", v18, 0xCu);
        sub_1C0797B2C();
        sub_1C0776778();
      }
      sub_1C0775ADC(v17, (uint64_t (*)(_QWORD))type metadata accessor for SGEventSourceIngestor);

      sub_1C107006C();
      sub_1C0794BAC(&qword_1ED759800, (uint64_t (*)(uint64_t))MEMORY[0x1E0DF05E0], MEMORY[0x1E0DF05E8]);
      sub_1C079A10C();
      sub_1C07B8C08();
      swift_willThrow();
      sub_1C077960C();

      swift_unknownObjectRelease();
      sub_1C0795390(v0[34], v0 + 30);
      sub_1C07767BC();
      v10 = (uint64_t (*)(void))v0[1];
      return sub_1C077690C(v10);
    }
LABEL_16:
    swift_once();
    goto LABEL_9;
  }
  if (__OFADD__(*v2, 1))
  {
    __break(1u);
  }
  else
  {
    v0[31] = *v2 + 1;
    sub_1C079B9B0((uint64_t)objc_msgSend(v11, sel_recordId));
    v27 = sub_1C078FB14((uint64_t)sub_1C0D11B0C);
    v0[18] = MEMORY[0x1E0C809B0];
    v0[19] = 0x40000000;
    v28 = sub_1C07A1F90(v27, (uint64_t)sub_1C0A15340);
    sub_1C0788278(v28, sel_originFromRecordId_withCompletion_);
    return sub_1C07A1424();
  }
  return result;
}

#error "1C0D1243C: call analysis failed (funcsize=190)"

uint64_t sub_1C0D1259C(uint64_t a1, _QWORD *a2, _QWORD *a3)
{
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t inited;
  uint64_t v10;
  uint64_t result;
  _BYTE v12[128];

  v6 = type metadata accessor for Pipeline.StatusStore();
  MEMORY[0x1E0C80A78](v6);
  v8 = &v12[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1C083F944(a1, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for Configuration);
  v8[*(int *)(v6 + 20)] = *(_BYTE *)(a1 + *(int *)(type metadata accessor for SGEventSourceIngestor() + 24));
  Pipeline.StatusStore.currentSessionId()();
  sub_1C07B2018((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for Pipeline.StatusStore);
  sub_1C106F244();
  sub_1C07ACF80((uint64_t *)&unk_1ED7614C0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C10795A0;
  *(_QWORD *)(inited + 32) = 0x496E6F6973736573;
  *(_QWORD *)(inited + 40) = 0xE900000000000064;
  v10 = sub_1C106FAF0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(inited + 48) = v10;
  *(_QWORD *)(inited + 56) = 0x614E656372756F73;
  *(_QWORD *)(inited + 64) = 0xEA0000000000656DLL;
  sub_1C07D4B70(0, &qword_1ED760190);
  *(_QWORD *)(inited + 72) = sub_1C1070528();
  *(_QWORD *)(inited + 80) = 0x756F436E656B6174;
  *(_QWORD *)(inited + 88) = 0xEA0000000000746ELL;
  *(_QWORD *)(inited + 96) = sub_1C1070294();
  strcpy((char *)(inited + 104), "droppedCount");
  *(_BYTE *)(inited + 117) = 0;
  *(_WORD *)(inited + 118) = -5120;
  result = *a3 - *a2;
  if (__OFSUB__(*a3, *a2))
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(inited + 120) = sub_1C1070294();
    sub_1C07D4B70(0, (unint64_t *)&qword_1ED761490);
    sub_1C106F97C();
    sub_1C106F22C();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1C0D127F4(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3;
  uint64_t v5;

  v3 = *(_QWORD *)(a1 + 32);
  if (a3)
    return sub_1C0E59318(v3, a3);
  sub_1C07D4B70(0, &qword_1EF647E90);
  v5 = sub_1C106FF04();
  return sub_1C0E624BC(v3, v5);
}

uint64_t sub_1C0D1285C()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_1C0806670;
  return sub_1C0D116A0();
}

void sub_1C0D128A4(uint64_t a1)
{
  uint64_t v2;

  sub_1C0794BAC(&qword_1ED750BF8, (uint64_t (*)(uint64_t))type metadata accessor for SGEventSourceIngestor, (uint64_t)&unk_1C10B60A8);
  *(_QWORD *)(a1 + 8) = v2;
}

void sub_1C0D128E0(uint64_t a1)
{
  uint64_t v2;

  sub_1C0794BAC(&qword_1ED750C10, (uint64_t (*)(uint64_t))type metadata accessor for SGEventSourceIngestor, (uint64_t)&unk_1C10B60D0);
  *(_QWORD *)(a1 + 8) = v2;
}

void sub_1C0D1291C(uint64_t a1)
{
  uint64_t v2;

  sub_1C0794BAC(&qword_1ED750C08, (uint64_t (*)(uint64_t))type metadata accessor for SGEventSourceIngestor, (uint64_t)&unk_1C10B60EC);
  *(_QWORD *)(a1 + 8) = v2;
}

uint64_t sub_1C0D12958(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v6;
  id v7;
  uint64_t v8;

  v6 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D66F08]), sel_init);
  v7 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D672B0]), sel_init);
  v8 = swift_allocObject();
  return sub_1C0D15300((uint64_t)v6, (uint64_t)v7, a1, a2, a3, v8);
}

uint64_t sub_1C0D129E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v4[61] = a3;
  v4[62] = v3;
  v4[60] = a1;
  v5 = sub_1C077AE98();
  v4[63] = v5;
  v4[64] = *(_QWORD *)(v5 - 8);
  v4[65] = sub_1C0775870();
  v4[66] = sub_1C0775870();
  v6 = sub_1C106EC38();
  v4[67] = v6;
  v4[68] = *(_QWORD *)(v6 - 8);
  v4[69] = sub_1C079888C();
  v7 = sub_1C078C23C();
  v4[70] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v4[71] = v8;
  v4[72] = *(_QWORD *)(v8 + 64);
  v4[73] = sub_1C0775870();
  v4[74] = sub_1C0775870();
  v4[75] = sub_1C0775870();
  v4[76] = sub_1C0775870();
  sub_1C07ACF80(&qword_1ED749D88);
  v4[77] = sub_1C079888C();
  v9 = sub_1C078F3C4();
  v4[78] = v9;
  v10 = *(_QWORD *)(v9 - 8);
  v4[79] = v10;
  v4[80] = *(_QWORD *)(v10 + 64);
  v4[81] = sub_1C0775870();
  v4[82] = sub_1C0775870();
  v4[83] = sub_1C0775870();
  v4[84] = sub_1C0775870();
  v4[85] = sub_1C0775870();
  v11 = sub_1C106F544();
  v4[86] = v11;
  v4[87] = *(_QWORD *)(v11 - 8);
  v4[88] = sub_1C0775870();
  v4[89] = sub_1C0775870();
  v4[90] = sub_1C0775870();
  v4[91] = sub_1C0775870();
  v4[92] = sub_1C0775870();
  v4[93] = sub_1C0775870();
  v4[94] = sub_1C0775870();
  v4[95] = sub_1C0775870();
  v4[96] = sub_1C0775870();
  v4[97] = sub_1C0775870();
  sub_1C077862C();
  return sub_1C077AEC4();
}

uint64_t sub_1C0D12B78()
{
  uint64_t v0;
  void *v1;
  os_log_type_t v2;
  _WORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, _QWORD);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t (*v27)(uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  os_log_type_t v32;
  uint8_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  double v37;
  NSObject *v38;
  uint64_t v39;
  os_log_type_t v40;
  _BOOL4 v41;
  uint64_t v42;
  uint8_t *v43;
  uint64_t v44;
  double v45;
  uint64_t v46;
  uint64_t v47;
  NSObject *v48;
  os_log_type_t v49;
  _BOOL4 v50;
  uint64_t v51;
  uint8_t *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t (*v61)(uint64_t);
  uint64_t v62;
  uint64_t v63;
  uint64_t *v64;
  uint64_t v65;
  uint64_t v66;
  os_log_type_t v67;
  uint8_t *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;
  char *v82;
  double v83;
  double v84;
  os_log_type_t v85;
  uint8_t *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  _QWORD *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  NSObject *v95;

  sub_1C078D8C0();
  v1 = *(void **)(v0 + 776);
  sub_1C0790D8C();
  sub_1C106F538();
  v2 = sub_1C0784E0C();
  if (sub_1C07758D8(v2))
  {
    v3 = (_WORD *)sub_1C0780FC8();
    sub_1C0780BA4(v3);
    sub_1C0790E38(&dword_1C0771000, v4, v5, "Running shopping inference model");
    sub_1C0776778();
  }
  v6 = *(_QWORD *)(v0 + 696);
  v7 = *(_QWORD *)(v0 + 488);

  v8 = *(void (**)(uint64_t, _QWORD))(v6 + 8);
  *(_QWORD *)(v0 + 784) = v8;
  sub_1C0D15400();
  sub_1C07D6D1C(v7, v0 + 16);
  sub_1C07ACF80(&qword_1ED7480B8);
  if (!swift_dynamicCast())
  {
    v29 = *(_QWORD *)(v0 + 616);
    v30 = *(_QWORD *)(v0 + 480);
    sub_1C077A2C4(v29, v9, v10, *(_QWORD *)(v0 + 624));
    sub_1C0784B94(v29, &qword_1ED749D88);
LABEL_38:
    v72 = sub_1C079577C();
    sub_1C07B2D8C(v30, 1, 1, v72);
    sub_1C07A7550();
    sub_1C07758BC();
    sub_1C0779D18();
    sub_1C077C104();
    sub_1C07767D4();
    sub_1C0778638();
    sub_1C0786388();
    sub_1C0779D20();
    sub_1C07767BC();
    sub_1C07796F8();
    sub_1C0786390();
    sub_1C077C830();
    sub_1C077C27C();
    sub_1C077C828();
    sub_1C0778744();
    sub_1C07819BC();
    sub_1C0780AA8();
    sub_1C07806D8();
    sub_1C077F164();
    sub_1C07B68D8();
    sub_1C077E900();
    sub_1C07815B0();
    sub_1C07B6778();
    return sub_1C07AE140(*(uint64_t (**)(void))(v0 + 8));
  }
  v11 = *(_QWORD *)(v0 + 680);
  v12 = *(_QWORD *)(v0 + 624);
  v13 = *(_QWORD *)(v0 + 616);
  sub_1C07B2D8C(v13, 0, 1, v12);
  sub_1C09124BC(v13, v11);
  v14 = v11 + *(int *)(v12 + 24);
  v15 = sub_1C08066B8(v14, v0 + 56);
  v16 = *(_QWORD *)(v0 + 80);
  sub_1C07AF650(v15, &qword_1ED74AB38);
  if (!v16)
  {
    v31 = *(_QWORD *)(v0 + 768);
    sub_1C0790D8C();
    sub_1C106F538();
    v32 = sub_1C0776928();
    if (sub_1C077F60C(v32))
    {
      v33 = (uint8_t *)sub_1C0780FC8();
      *(_WORD *)v33 = 0;
      sub_1C077F048(&dword_1C0771000, v12, (os_log_type_t)v31, "currSegment is not a visit segment", v33);
      sub_1C0776778();
    }
    goto LABEL_33;
  }
  sub_1C08066B8(v14, v0 + 136);
  v17 = *(_QWORD *)(v0 + 160);
  if (!v17)
  {
    sub_1C0784B94(v0 + 136, &qword_1ED74AB38);
    *(_OWORD *)(v0 + 96) = 0u;
    *(_OWORD *)(v0 + 112) = 0u;
    *(_QWORD *)(v0 + 128) = 0;
    goto LABEL_16;
  }
  v18 = *(_QWORD *)(v0 + 168);
  v19 = (_QWORD *)sub_1C0787A98();
  sub_1C07A9480(v19, v20);
  (*(void (**)(uint64_t, uint64_t))(v18 + 32))(v17, v18);
  sub_1C091274C(v0 + 136);
  if (!*(_QWORD *)(v0 + 120))
  {
LABEL_16:
    v34 = *(_QWORD *)(v0 + 680);
    v35 = *(_QWORD *)(v0 + 672);
    sub_1C0784B94(v0 + 96, &qword_1EF634098);
    sub_1C091253C(v34, v35);
    sub_1C0912500(v35);
    goto LABEL_17;
  }
  v21 = *(_QWORD *)(v0 + 680);
  v22 = *(_QWORD *)(v0 + 672);
  sub_1C0784B94(v0 + 96, &qword_1EF634098);
  sub_1C091253C(v21, v22);
  sub_1C08066B8(v22 + *(int *)(v12 + 24), v0 + 336);
  v23 = *(_QWORD *)(v0 + 360);
  if (!v23)
  {
    sub_1C0912500(*(_QWORD *)(v0 + 672));
    v64 = &qword_1ED74AB38;
    v65 = v0 + 336;
LABEL_30:
    sub_1C0784B94(v65, v64);
LABEL_31:
    v66 = *(_QWORD *)(v0 + 760);
    sub_1C0790D8C();
    sub_1C106F538();
    v67 = sub_1C0776928();
    if (sub_1C077F60C(v67))
    {
      v68 = (uint8_t *)sub_1C0780FC8();
      *(_WORD *)v68 = 0;
      sub_1C077F048(&dword_1C0771000, v12, (os_log_type_t)v66, "currSegment is a known semantic location segment", v68);
      sub_1C0776778();
    }
LABEL_33:
    v69 = *(_QWORD *)(v0 + 680);
    v30 = *(_QWORD *)(v0 + 480);

    sub_1C0D15400();
    v70 = v69;
LABEL_37:
    sub_1C0912500(v70);
    goto LABEL_38;
  }
  v12 = v0 + 296;
  v24 = *(_QWORD *)(v0 + 368);
  sub_1C07A9480((_QWORD *)(v0 + 336), *(_QWORD *)(v0 + 360));
  (*(void (**)(uint64_t, uint64_t))(v24 + 32))(v23, v24);
  sub_1C091274C(v0 + 336);
  v25 = *(_QWORD *)(v0 + 672);
  if (!*(_QWORD *)(v0 + 320))
  {
    sub_1C0912500(*(_QWORD *)(v0 + 672));
    v64 = &qword_1EF634098;
    v65 = v0 + 296;
    goto LABEL_30;
  }
  sub_1C078129C((_QWORD *)(v0 + 296));
  v26 = sub_1C0787A98();
  v28 = v27(v26);
  sub_1C0912500(v25);
  sub_1C0775880();
  if (v28)
    goto LABEL_31;
LABEL_17:
  v36 = *(_QWORD *)(v0 + 496);
  *(_DWORD *)(v0 + 832) = *(_DWORD *)(*(_QWORD *)(v0 + 624) + 20);
  sub_1C106ACD8();
  if (*(double *)(v36 + 24) < v37)
  {
    v38 = *(NSObject **)(v0 + 680);
    v39 = *(_QWORD *)(v0 + 664);
    sub_1C0790D8C();
    sub_1C091253C((uint64_t)v38, v39);
    sub_1C106F538();
    v40 = sub_1C0776928();
    v41 = os_log_type_enabled(v38, v40);
    v42 = *(_QWORD *)(v0 + 664);
    if (v41)
    {
      v43 = (uint8_t *)sub_1C0775854();
      *(_DWORD *)v43 = 134217984;
      sub_1C106ACD8();
      *(_QWORD *)(v0 + 456) = v44;
      sub_1C10705AC();
      sub_1C0912500(v42);
      sub_1C07796F0(&dword_1C0771000, v38, v40, "currSegment duration of %f is greater than maxDurationOfShoppingActivityInSeconds", v43);
      sub_1C0776778();
    }

    sub_1C0912500(v42);
    v54 = *(_QWORD *)(v0 + 752);
LABEL_35:
    v71 = *(_QWORD *)(v0 + 680);
    v30 = *(_QWORD *)(v0 + 480);
    v8(v54, *(_QWORD *)(v0 + 688));
LABEL_36:
    v70 = v71;
    goto LABEL_37;
  }
  sub_1C106ACD8();
  if (v45 < 1200.0)
  {
    v46 = *(_QWORD *)(v0 + 680);
    v47 = *(_QWORD *)(v0 + 656);
    sub_1C0790D8C();
    sub_1C091253C(v46, v47);
    v48 = sub_1C106F538();
    v49 = sub_1C10703A8();
    v50 = os_log_type_enabled(v48, v49);
    v51 = *(_QWORD *)(v0 + 656);
    if (v50)
    {
      v52 = (uint8_t *)sub_1C0775854();
      *(_DWORD *)v52 = 134217984;
      sub_1C106ACD8();
      *(_QWORD *)(v0 + 448) = v53;
      sub_1C10705AC();
      sub_1C0912500(v51);
      sub_1C07796F0(&dword_1C0771000, v48, v49, "currSegment duration of %f is less than minDurationOfShoppingActivityInSeconds", v52);
      sub_1C0776778();
    }

    sub_1C0912500(v51);
    v54 = *(_QWORD *)(v0 + 744);
    goto LABEL_35;
  }
  v55 = v0 + 256;
  v56 = *(_QWORD *)(v0 + 648);
  v57 = *(_QWORD *)(v0 + 632);
  sub_1C091253C(*(_QWORD *)(v0 + 680), v56);
  v58 = (*(unsigned __int8 *)(v57 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v57 + 80);
  v59 = swift_allocObject();
  sub_1C09124BC(v56, v59 + v58);
  MEMORY[0x1C3BA4538](sub_1C0D151EC, v59, 1);
  sub_1C08066B8(v14, v0 + 256);
  if (!*(_QWORD *)(v0 + 280))
  {
    v74 = &qword_1ED74AB38;
LABEL_42:
    v75 = v55;
    goto LABEL_43;
  }
  sub_1C078129C((_QWORD *)(v0 + 256));
  sub_1C07758AC();
  sub_1C091274C(v0 + 256);
  if (*(_QWORD *)(v0 + 240))
  {
    v55 = v0 + 176;
    sub_1C078129C((_QWORD *)(v0 + 216));
    sub_1C07758AC();
    if (*(_QWORD *)(v0 + 200))
    {
      sub_1C078129C((_QWORD *)(v0 + 176));
      v60 = sub_1C0787A98();
      v62 = v61(v60);
      v91 = v63;
      v92 = v62;
      _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0(v0 + 176);
      _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0(v0 + 216);
      goto LABEL_44;
    }
    _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0(v0 + 216);
    v74 = &qword_1EF6340A0;
    goto LABEL_42;
  }
  v74 = &qword_1EF634098;
  v75 = v0 + 216;
LABEL_43:
  sub_1C0784B94(v75, v74);
  v91 = 0;
  v92 = 0;
LABEL_44:
  v95 = *(NSObject **)(v0 + 736);
  v76 = *(_QWORD *)(v0 + 592);
  v77 = *(_QWORD *)(v0 + 568);
  v78 = *(_QWORD *)(v0 + 560);
  v79 = *(_QWORD *)(v0 + 552);
  v93 = *(_QWORD *)(v0 + 544);
  v94 = *(_QWORD *)(v0 + 536);
  v80 = *(_QWORD *)(v0 + 496);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v77 + 16))(v76, *(_QWORD *)(v0 + 608), v78);
  v81 = (*(unsigned __int8 *)(v77 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v77 + 80);
  v82 = (char *)swift_allocObject();
  *((_QWORD *)v82 + 2) = v80;
  *((_QWORD *)v82 + 3) = v92;
  *((_QWORD *)v82 + 4) = v91;
  (*(void (**)(char *, uint64_t, uint64_t))(v77 + 32))(&v82[v81], v76, v78);
  swift_retain();
  MEMORY[0x1C3BA4538](sub_1C0D1528C, v82, 1);
  sub_1C07ACF80(&qword_1EF630AA8);
  sub_1C106DBE8();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1C1079220;
  sub_1C106DC0C();
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v93 + 104))(v79, *MEMORY[0x1E0D3D5D8], v94);
  sub_1C106FF64();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v93 + 8))(v79, v94);
  sub_1C106DBF4();
  v84 = v83;
  *(double *)(v0 + 792) = v83;
  sub_1C0790D8C();
  sub_1C106F538();
  v85 = sub_1C0784E0C();
  if (sub_1C07758D8(v85))
  {
    v86 = (uint8_t *)sub_1C0775854();
    *(_DWORD *)v86 = 134217984;
    *(double *)(v0 + 440) = v84;
    sub_1C10705AC();
    sub_1C07796F0(&dword_1C0771000, v95, (os_log_type_t)v94, "shoppingConfidence = %f", v86);
    sub_1C0776778();
  }

  sub_1C079601C();
  if (v84 < 0.6)
  {
    v71 = *(_QWORD *)(v0 + 680);
    v87 = *(_QWORD *)(v0 + 608);
    v88 = *(_QWORD *)(v0 + 600);
    v30 = *(_QWORD *)(v0 + 480);
    sub_1C078BCB0(*(_QWORD *)(v0 + 584));
    sub_1C078BCB0(v88);
    sub_1C078BCB0(v87);
    goto LABEL_36;
  }
  v89 = *(_QWORD *)(*(_QWORD *)(v0 + 496) + 144);
  *(_QWORD *)(v0 + 800) = v89;
  v90 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 808) = v90;
  *v90 = v0;
  v90[1] = sub_1C0D13548;
  return sub_1C0D13EF0(v89, *(_QWORD *)(v0 + 680));
}

uint64_t sub_1C0D13548()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  sub_1C077B0C8();
  *v1 = *v0;
  *(_QWORD *)(v2 + 816) = v3;
  swift_task_dealloc();
  sub_1C077862C();
  return sub_1C077AEC4();
}

uint64_t sub_1C0D13588()
{
  os_log_type_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint64_t v7;
  uint8_t *v8;
  uint64_t v9;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;

  sub_1C078D8C0();
  if (*(double *)(v1 + 816) >= 0.75)
  {
    v11 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v1 + 824) = v11;
    *v11 = v1;
    v11[1] = sub_1C0D13730;
    return sub_1C0D14754(*(_QWORD *)(v1 + 800), *(_QWORD *)(v1 + 680));
  }
  else
  {
    v5 = *(NSObject **)(v1 + 728);
    sub_1C0790D8C();
    sub_1C106F538();
    v6 = sub_1C0784E0C();
    if (sub_1C077C10C(v6))
    {
      v7 = *(_QWORD *)(v1 + 816);
      v8 = (uint8_t *)sub_1C0775854();
      *(_DWORD *)v8 = 134217984;
      *(_QWORD *)(v1 + 432) = v7;
      sub_1C10705AC();
      sub_1C07796F0(&dword_1C0771000, v5, v0, "walkingToStationaryRatio of %f is less than the threshold for shopping", v8);
      sub_1C0776778();
    }
    sub_1C07A029C();
    sub_1C079601C();
    sub_1C078AD28(v4);
    sub_1C078AD28(v3);
    sub_1C078AD28(v2);
    sub_1C0912500(v12);
    v9 = sub_1C079577C();
    sub_1C07B2D8C(v13, 1, 1, v9);
    sub_1C07A7550();
    sub_1C07758BC();
    sub_1C0779D18();
    sub_1C077C104();
    sub_1C07767D4();
    sub_1C0778638();
    sub_1C0786388();
    sub_1C0779D20();
    sub_1C07767BC();
    sub_1C07796F8();
    sub_1C0786390();
    sub_1C077C830();
    sub_1C077C27C();
    sub_1C077C828();
    sub_1C0778744();
    sub_1C07819BC();
    sub_1C0780AA8();
    sub_1C07806D8();
    sub_1C077F164();
    sub_1C07B68D8();
    sub_1C077E900();
    sub_1C07815B0();
    sub_1C07B6778();
    return sub_1C07AE140(*(uint64_t (**)(void))(v1 + 8));
  }
}

uint64_t sub_1C0D13730()
{
  _QWORD *v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  sub_1C077B0C8();
  *(_BYTE *)(v2 + 400) = v1;
  *(_QWORD *)(v2 + 384) = v3;
  *(_QWORD *)(v2 + 392) = v4;
  *(_QWORD *)(v2 + 376) = v0;
  *v5 = *v0;
  *(_BYTE *)(v2 + 836) = v1;
  swift_task_dealloc();
  sub_1C077862C();
  return sub_1C077AEC4();
}

uint64_t sub_1C0D1377C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  os_log_type_t v22;
  uint64_t v23;
  os_log_type_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  double v28;
  double v29;
  NSObject *v30;
  os_log_type_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  NSObject *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void (*v41)(uint64_t, uint64_t, uint64_t);
  char v42;
  uint64_t v43;
  uint64_t v44;
  void (*v45)(uint64_t, uint64_t, uint64_t);
  int *v46;
  _QWORD *v47;
  NSObject *v48;
  os_log_type_t v49;
  uint8_t *v50;
  NSObject *v52;
  uint64_t v53;
  os_log_type_t v54;
  uint64_t v55;
  NSObject *v56;
  void (*v57)(uint64_t, uint64_t);
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v68;
  void (*v69)(uint64_t);
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;

  sub_1C078D8C0();
  if ((*(_BYTE *)(v23 + 836) & 1) != 0)
  {
    v48 = *(NSObject **)(v23 + 704);
    sub_1C0790D8C();
    sub_1C106F538();
    v49 = sub_1C0784E0C();
    if (sub_1C077C10C(v49))
    {
      v50 = (uint8_t *)sub_1C0780FC8();
      *(_WORD *)v50 = 0;
      sub_1C077F048(&dword_1C0771000, v48, v22, "Didn't receive a longestStationaryInterval, longestUnknownInterval so not inferring shopping", v50);
      sub_1C0776778();
    }
    sub_1C07A029C();
    sub_1C079601C();
    sub_1C078AD28(v27);
    sub_1C078AD28(v26);
    sub_1C078AD28(v25);
    goto LABEL_13;
  }
  v29 = *(double *)(v23 + 384);
  v28 = *(double *)(v23 + 392);
  if (v29 >= 1800.0 || v28 >= 1800.0)
  {
    v52 = *(NSObject **)(v23 + 720);
    v53 = *(_QWORD *)(v23 + 496);
    sub_1C0790D8C();
    swift_retain_n();
    sub_1C106F538();
    v54 = sub_1C0784E0C();
    if (sub_1C077AF00(v54))
    {
      v55 = sub_1C0775854();
      *(_DWORD *)v55 = 134218496;
      *(double *)(v23 + 472) = v29;
      sub_1C10705AC();
      *(_WORD *)(v55 + 12) = 2048;
      *(double *)(v23 + 416) = v28;
      sub_1C10705AC();
      *(_WORD *)(v55 + 22) = 2048;
      *(_QWORD *)(v23 + 424) = 0x409C200000000000;
      sub_1C10705AC();
      sub_1C07AB12C();
      _os_log_impl(&dword_1C0771000, v52, (os_log_type_t)v53, "longestStationaryInterval = %f or longestUnknownInterval = %f is greater than threshold for %f for shopping", (uint8_t *)v55, 0x20u);
      sub_1C0776778();
    }
    sub_1C07AB12C();
    v56 = v52;
    v57 = *(void (**)(uint64_t, uint64_t))(v23 + 784);
    v58 = *(_QWORD *)(v23 + 720);
    v59 = *(_QWORD *)(v23 + 688);
    v60 = *(_QWORD *)(v23 + 680);
    v61 = *(_QWORD *)(v23 + 608);
    v62 = *(_QWORD *)(v23 + 600);
    v63 = *(_QWORD *)(v23 + 584);
    a22 = *(_QWORD *)(v23 + 480);

    v57(v58, v59);
    sub_1C078AD28(v63);
    sub_1C078AD28(v62);
    sub_1C078AD28(v61);
    a21 = v60;
LABEL_13:
    sub_1C0912500(a21);
    v64 = sub_1C079577C();
    sub_1C077A2C4(a22, v65, v66, v64);
    goto LABEL_14;
  }
  v30 = *(NSObject **)(v23 + 712);
  sub_1C0790D8C();
  sub_1C106F538();
  v31 = sub_1C0784E0C();
  if (sub_1C077AF00(v31))
  {
    v32 = sub_1C0775854();
    *(_DWORD *)v32 = 134218240;
    *(double *)(v23 + 464) = v29;
    sub_1C10705AC();
    *(_WORD *)(v32 + 12) = 2048;
    *(double *)(v23 + 408) = v28;
    sub_1C10705AC();
    _os_log_impl(&dword_1C0771000, v30, v24, "longestStationaryInterval = %f, longestUnknownInterval = %f", (uint8_t *)v32, 0x16u);
    sub_1C0776778();
  }
  v33 = *(_QWORD *)(v23 + 792);
  v34 = *(int *)(v23 + 832);
  v35 = *(_QWORD *)(v23 + 680);
  v69 = *(void (**)(uint64_t))(v23 + 784);
  v70 = *(_QWORD *)(v23 + 600);
  v68 = *(_QWORD *)(v23 + 584);
  v72 = *(_QWORD *)(v23 + 608);
  v74 = *(_QWORD *)(v23 + 528);
  v75 = *(_QWORD *)(v23 + 520);
  v36 = *(_QWORD *)(v23 + 504);
  v71 = *(_QWORD *)(v23 + 512);
  v37 = v30;
  v38 = *(_QWORD *)(v23 + 496);
  v39 = *(_QWORD *)(v23 + 480);

  v40 = sub_1C0787A98();
  v69(v40);
  sub_1C078C8C4(v68);
  sub_1C078C8C4(v70);
  sub_1C078C8C4(v72);
  v41 = *(void (**)(uint64_t, uint64_t, uint64_t))(v71 + 16);
  v41(v74, v35, v36);
  v41(v75, v35 + v34, v36);
  sub_1C0912500(v35);
  v42 = *(_BYTE *)(v38 + 16);
  v43 = *(_QWORD *)(v38 + 168);
  v44 = *(_QWORD *)(v38 + 176);
  v73 = v43;
  v45 = *(void (**)(uint64_t, uint64_t, uint64_t))(v71 + 32);
  v45(v39, v74, v36);
  v46 = (int *)sub_1C079577C();
  v45(v39 + v46[5], v75, v36);
  *(_BYTE *)(v39 + v46[6]) = v42;
  *(_QWORD *)(v39 + v46[7]) = v33;
  v47 = (_QWORD *)(v39 + v46[8]);
  *v47 = v73;
  v47[1] = v44;
  sub_1C077994C(v39);
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
LABEL_14:
  sub_1C07A7550();
  sub_1C07758BC();
  sub_1C0779D18();
  sub_1C077C104();
  sub_1C07767D4();
  sub_1C0778638();
  sub_1C0786388();
  sub_1C0779D20();
  sub_1C07767BC();
  sub_1C07796F8();
  sub_1C0786390();
  sub_1C077C830();
  sub_1C077C27C();
  sub_1C077C828();
  sub_1C0778744();
  sub_1C07819BC();
  sub_1C0780AA8();
  sub_1C07806D8();
  sub_1C077F164();
  sub_1C07B68D8();
  sub_1C077E900();
  sub_1C07815B0();
  sub_1C07B6778();
  return sub_1C07AE140(*(uint64_t (**)(void))(v23 + 8));
}

double sub_1C0D13BD0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  double v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  _QWORD v13[5];

  v2 = sub_1C106F544();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v13[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for LOIBasedSegment(0);
  sub_1C08066B8(a1 + *(int *)(v6 + 24), (uint64_t)v13);
  if (v13[3])
  {
    v7 = sub_1C0D7003C();
    sub_1C091274C((uint64_t)v13);
  }
  else
  {
    sub_1C0784B94((uint64_t)v13, &qword_1ED74AB38);
    v7 = 0.0;
  }
  sub_1C106F190();
  v8 = sub_1C106F538();
  v9 = sub_1C10703A8();
  if (os_log_type_enabled(v8, v9))
  {
    v10 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v10 = 134217984;
    *(double *)v13 = v7;
    sub_1C10705AC();
    _os_log_impl(&dword_1C0771000, v8, v9, "storedVisitConfidence for shopping = %f", v10, 0xCu);
    MEMORY[0x1C3BA8270](v10, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return v7;
}

double sub_1C0D13D4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  double v13;
  Swift::String v14;
  double v15;
  double v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  _QWORD v21[2];

  v6 = sub_1C106F544();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a3)
    v10 = a2;
  else
    v10 = 0;
  if (a3)
    v11 = a3;
  else
    v11 = 0xE000000000000000;
  v12 = sub_1C0776614(v10, v11, *(_QWORD **)(a1 + 40));
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  swift_bridgeObjectRelease();
  v13 = 0.0;
  if ((v12 & 1) != 0)
  {
    v14._countAndFlagsBits = 0x494F506F6547;
    v14._object = (void *)0xE600000000000000;
    v15 = ConfidenceService.confidence(source:signalType:)(v14, (Swift::String_optional)0);
    sub_1C106DBF4();
    v13 = v15 * v16;
  }
  sub_1C106F190();
  v17 = sub_1C106F538();
  v18 = sub_1C10703A8();
  if (os_log_type_enabled(v17, v18))
  {
    v19 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v19 = 134217984;
    *(double *)&v21[1] = v13;
    sub_1C10705AC();
    _os_log_impl(&dword_1C0771000, v17, v18, "shoppingConfidenceDueToGeoPoi = %f", v19, 0xCu);
    MEMORY[0x1C3BA8270](v19, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  return v13;
}

uint64_t sub_1C0D13EF0(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v3 = sub_1C07B1E74(a1, a2);
  v2[27] = v3;
  v2[28] = *(_QWORD *)(v3 - 8);
  v2[29] = sub_1C079888C();
  sub_1C07ACF80(&qword_1ED74AF78);
  v2[30] = sub_1C079888C();
  v2[31] = sub_1C07ACF80(&qword_1ED74AF70);
  v2[32] = sub_1C079888C();
  v2[33] = sub_1C07ACF80(&qword_1ED759DF0);
  v2[34] = sub_1C0775870();
  v2[35] = sub_1C0775870();
  v4 = sub_1C077AE98();
  v2[36] = v4;
  v2[37] = *(_QWORD *)(v4 - 8);
  v2[38] = sub_1C0775870();
  v2[39] = sub_1C0775870();
  v2[40] = sub_1C07ACF80(&qword_1ED75D0B8);
  v2[41] = sub_1C0775870();
  v2[42] = sub_1C0775870();
  sub_1C077862C();
  return sub_1C077AEC4();
}

uint64_t sub_1C0D13FFC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint8_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;

  sub_1C07BD0E8(*(_QWORD *)(v0 + 296));
  v1 = sub_1C078F3C4();
  sub_1C079F0A0(v1);
  sub_1C07D65AC();
  result = sub_1C0784F60();
  if ((result & 1) != 0)
  {
    v37 = *(_QWORD *)(v0 + 336);
    v35 = *(_QWORD *)(v0 + 328);
    v36 = *(_QWORD *)(v0 + 320);
    v3 = *(_QWORD *)(v0 + 296);
    v4 = *(_QWORD *)(v0 + 304);
    v6 = *(_QWORD *)(v0 + 280);
    v5 = *(_QWORD *)(v0 + 288);
    v7 = *(_QWORD *)(v0 + 264);
    v8 = *(_QWORD *)(v0 + 272);
    v38 = (_QWORD *)(v0 + 16);
    v9 = v6 + *(int *)(v7 + 48);
    sub_1C0781ED0(v6, *(_QWORD *)(v0 + 312));
    sub_1C0781ED0(v9, v4);
    sub_1C07AB114();
    sub_1C079DE00();
    sub_1C0781ED0(v35, v8);
    v10 = *(_QWORD *)(v3 + 8);
    sub_1C077E910(v4);
    v11 = v8 + *(int *)(v7 + 48);
    sub_1C0781ED0(v8, v6);
    v12 = v9;
    v13 = (__int128 *)(v0 + 56);
    sub_1C0781ED0(v11, v12);
    sub_1C0781ED0(v35 + *(int *)(v36 + 36), v11);
    v14 = sub_1C077E910(v8);
    sub_1C077F3C4(v14, v15, &qword_1ED75D0B8, v16, v17, v18, v19, v20, v35, v36, v0 + 56, v37);
    *(_QWORD *)(v0 + 80) = sub_1C07ACF80(&qword_1ED747FF8);
    v21 = sub_1C0D152BC();
    sub_1C07B6320(v21);
    sub_1C0790A98(v22);
    *(_QWORD *)(v0 + 344) = v10;
    if (v10)
    {
      sub_1C0784B94(*(_QWORD *)(v0 + 336), &qword_1ED75D0B8);
      sub_1C0A0A6A4((uint64_t)v13);
      v23 = *(NSObject **)(v0 + 232);
      sub_1C0790D8C();
      sub_1C106F538();
      v24 = sub_1C0784E0C();
      if (sub_1C077AF00(v24))
      {
        v25 = (uint8_t *)sub_1C0780FC8();
        *(_WORD *)v25 = 0;
        sub_1C077F048(&dword_1C0771000, v23, (os_log_type_t)v7, "Unable to fetch motion state events for calculating walkingToStationaryRatio", v25);
        sub_1C0776778();
      }
      v26 = *(_QWORD *)(v0 + 344);
      sub_1C077B99C();

      sub_1C0786458((uint64_t)v13, *(uint64_t (**)(uint64_t, uint64_t))(v5 + 8));
      if (!v26)
        _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v38);
      sub_1C0791570();
      sub_1C07767BC();
      sub_1C07796F8();
      sub_1C07758BC();
      sub_1C0779D18();
      sub_1C077C104();
      sub_1C07767D4();
      sub_1C0778638();
      sub_1C0786388();
      return (*(uint64_t (**)(double))(v0 + 8))(0.0);
    }
    else
    {
      sub_1C0784B94(*(_QWORD *)(v0 + 336), &qword_1ED75D0B8);
      sub_1C077DD60(v13, (uint64_t)v38);
      sub_1C07A9480(v38, *(_QWORD *)(v0 + 40));
      v27 = sub_1C079888C();
      sub_1C07866D4(v27);
      *(_QWORD *)(v0 + 120) = sub_1C07AD374();
      v28 = sub_1C077D33C();
      sub_1C078DC94(v28);
      sub_1C07B862C();
      sub_1C0779D18();
      *(_QWORD *)(v0 + 352) = 0;
      *(_QWORD *)(v0 + 360) = 0;
      v29 = *(_QWORD *)(v0 + 128);
      *(_QWORD *)(v0 + 368) = *(_QWORD *)(v0 + 120);
      *(_QWORD *)(v0 + 376) = v29;
      sub_1C07827AC();
      v30 = sub_1C079D830();
      v31 = sub_1C077B3A4(v30);
      *(_QWORD *)(v0 + 392) = v31;
      *(_QWORD *)(v0 + 400) = *(_QWORD *)(v31 - 8);
      *(_QWORD *)(v0 + 408) = sub_1C079888C();
      v32 = sub_1C079D830();
      *(_QWORD *)(v0 + 416) = v32;
      v33 = *(_QWORD *)(v32 - 8);
      *(_QWORD *)(v0 + 424) = v33;
      *(_QWORD *)(v0 + 432) = *(_QWORD *)(v33 + 64);
      *(_QWORD *)(v0 + 440) = sub_1C079888C();
      v34 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 448) = v34;
      sub_1C07948E0(v34);
      return sub_1C07A5764();
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1C0D14328()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v3;

  v3 = *v1;
  sub_1C077B798(&v3);
  if (!v0)
    swift_task_dealloc();
  sub_1C077862C();
  return sub_1C0789D28();
}

uint64_t sub_1C0D1437C()
{
  uint64_t v0;
  double v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  double v10;
  double v11;
  uint64_t v12;
  uint64_t v13;
  double v14;
  double v15;
  double v16;
  uint64_t v17;
  double v18;
  double v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;

  v2 = *(_QWORD *)(v0 + 408);
  v3 = *(_QWORD *)(v0 + 384);
  if (sub_1C07B2D80(v2, 1, v3) == 1)
  {
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 400) + 8))(v2, *(_QWORD *)(v0 + 392));
    sub_1C07767BC();
    sub_1C0775880();
    sub_1C07AC8F0();
    sub_1C0791570();
    sub_1C07767BC();
    sub_1C07796F8();
    sub_1C07758BC();
    sub_1C0779D18();
    sub_1C077C104();
    sub_1C07767D4();
    sub_1C0778638();
    sub_1C0786388();
    return sub_1C078F470(*(uint64_t (**)(void))(v0 + 8));
  }
  else
  {
    *(_QWORD *)(v0 + 160) = v3;
    sub_1C07B3E30((uint64_t *)(v0 + 136));
    (*(void (**)(void))(*(_QWORD *)(v3 - 8) + 32))();
    sub_1C07767BC();
    sub_1C07C010C((_OWORD *)(v0 + 136), (_OWORD *)(v0 + 168));
    if (sub_1C07A9A44())
    {
      v8 = *(_QWORD *)(v0 + 248);
      v7 = *(_QWORD *)(v0 + 256);
      v9 = *(_QWORD *)(v0 + 240);
      sub_1C07B2D8C(v9, 0, 1, v8);
      sub_1C08273C8(v9, v7, &qword_1ED74AF70);
      sub_1C106AC60();
      sub_1C07B98B4();
      v11 = v1 - v10;
      v12 = *(_QWORD *)(v7 + *(int *)(v8 + 32));
      v13 = *(_QWORD *)(v0 + 256);
      if (v12 == 4)
      {
        v14 = *(double *)(v0 + 360);
        sub_1C0784B94(v13, &qword_1ED74AF70);
        v15 = v11 + v14;
        v16 = *(double *)(v0 + 352);
      }
      else
      {
        v18 = *(double *)(v0 + 352);
        sub_1C0784B94(v13, &qword_1ED74AF70);
        v19 = -0.0;
        if (v12 == 2)
          v19 = v11;
        v16 = v19 + v18;
        v15 = *(double *)(v0 + 360);
      }
      *(double *)(v0 + 352) = v16;
      *(double *)(v0 + 360) = v15;
    }
    else
    {
      v17 = sub_1C077A2C4(*(_QWORD *)(v0 + 240), v5, v6, *(_QWORD *)(v0 + 248));
      sub_1C07AF650(v17, &qword_1ED74AF78);
    }
    v20 = *(_QWORD *)(v0 + 128);
    *(_QWORD *)(v0 + 368) = *(_QWORD *)(v0 + 120);
    *(_QWORD *)(v0 + 376) = v20;
    sub_1C0788A5C();
    v21 = sub_1C0795398();
    v22 = sub_1C077B3A4(v21);
    *(_QWORD *)(v0 + 392) = v22;
    *(_QWORD *)(v0 + 400) = *(_QWORD *)(v22 - 8);
    *(_QWORD *)(v0 + 408) = sub_1C079888C();
    v23 = sub_1C0795398();
    *(_QWORD *)(v0 + 416) = v23;
    v24 = *(_QWORD *)(v23 - 8);
    *(_QWORD *)(v0 + 424) = v24;
    *(_QWORD *)(v0 + 432) = *(_QWORD *)(v24 + 64);
    *(_QWORD *)(v0 + 440) = sub_1C079888C();
    v25 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 448) = v25;
    sub_1C079F7EC(v25);
    return sub_1C1070084();
  }
}

uint64_t sub_1C0D14628()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  os_log_type_t v7;
  _WORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v2 = *(_QWORD *)(v1 + 368);
  v3 = sub_1C079888C();
  sub_1C07B74D8(v3);
  sub_1C07ABE28();
  if (sub_1C0785208())
  {
    sub_1C07A96B8(*(_QWORD *)(v1 + 424));
  }
  else
  {
    v4 = sub_1C079C084();
    sub_1C07A33D0(v4, v5);
  }
  sub_1C07758BC();
  sub_1C0779D18();
  sub_1C077C104();
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0(v1 + 96);
  v6 = *(void **)(v1 + 232);
  sub_1C0790D8C();
  sub_1C106F538();
  v7 = sub_1C0784E0C();
  if (sub_1C07758D8(v7))
  {
    v8 = (_WORD *)sub_1C0780FC8();
    sub_1C0780BA4(v8);
    sub_1C0790E38(&dword_1C0771000, v9, v10, "Unable to fetch motion state events for calculating walkingToStationaryRatio");
    sub_1C0776778();
  }
  v11 = *(_QWORD *)(v1 + 344);
  sub_1C078A0BC();

  sub_1C0786458(v0, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  if (!v11)
    sub_1C07AC8F0();
  sub_1C0791570();
  sub_1C07767BC();
  sub_1C07796F8();
  sub_1C07758BC();
  sub_1C0779D18();
  sub_1C077C104();
  sub_1C07767D4();
  sub_1C0778638();
  sub_1C0786388();
  return sub_1C078F470(*(uint64_t (**)(void))(v1 + 8));
}

uint64_t sub_1C0D14754(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v3 = sub_1C07B1E74(a1, a2);
  v2[27] = v3;
  v2[28] = *(_QWORD *)(v3 - 8);
  v2[29] = sub_1C0775870();
  v2[30] = sub_1C0775870();
  sub_1C07ACF80(&qword_1ED74AF78);
  v2[31] = sub_1C079888C();
  v2[32] = sub_1C07ACF80(&qword_1ED74AF70);
  v2[33] = sub_1C079888C();
  v2[34] = sub_1C07ACF80(&qword_1ED759DF0);
  v2[35] = sub_1C0775870();
  v2[36] = sub_1C0775870();
  v4 = sub_1C077AE98();
  v2[37] = v4;
  v2[38] = *(_QWORD *)(v4 - 8);
  v2[39] = sub_1C0775870();
  v2[40] = sub_1C0775870();
  v2[41] = sub_1C07ACF80(&qword_1ED75D0B8);
  v2[42] = sub_1C0775870();
  v2[43] = sub_1C0775870();
  sub_1C077862C();
  return sub_1C077AEC4();
}

uint64_t sub_1C0D14870()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint8_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t (*v28)(uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;

  sub_1C07BD0E8(v0[38]);
  v1 = sub_1C078F3C4();
  sub_1C079F0A0(v1);
  sub_1C07D65AC();
  result = sub_1C0784F60();
  if ((result & 1) != 0)
  {
    v39 = v0[43];
    v37 = v0[42];
    v38 = v0[41];
    v3 = v0[38];
    v4 = v0[39];
    v6 = v0[36];
    v5 = v0[37];
    v7 = v0[34];
    v8 = v0[35];
    v40 = v0 + 2;
    v9 = v6 + *(int *)(v7 + 48);
    sub_1C0781ED0(v6, v0[40]);
    sub_1C0781ED0(v9, v4);
    sub_1C07AB114();
    sub_1C079DE00();
    sub_1C0781ED0(v37, v8);
    v10 = *(_QWORD *)(v3 + 8);
    sub_1C077E910(v4);
    v11 = v8 + *(int *)(v7 + 48);
    sub_1C0781ED0(v8, v6);
    v12 = v9;
    v13 = (__int128 *)(v0 + 7);
    sub_1C0781ED0(v11, v12);
    sub_1C0781ED0(v37 + *(int *)(v38 + 36), v11);
    v14 = sub_1C077E910(v8);
    sub_1C077F3C4(v14, v15, &qword_1ED75D0B8, v16, v17, v18, v19, v20, v37, v38, (uint64_t)(v0 + 7), v39);
    v0[10] = sub_1C07ACF80(&qword_1ED747FF8);
    v21 = sub_1C0D152BC();
    sub_1C07B6320(v21);
    sub_1C0790A98(v22);
    v0[44] = v10;
    if (v10)
    {
      sub_1C0784B94(v0[43], &qword_1ED75D0B8);
      sub_1C0A0A6A4((uint64_t)v13);
      v23 = v0[29];
      sub_1C0790D8C();
      sub_1C106F538();
      v24 = sub_1C0784E0C();
      if (sub_1C077AF00(v24))
      {
        v25 = (uint8_t *)sub_1C0780FC8();
        *(_WORD *)v25 = 0;
        sub_1C077F048(&dword_1C0771000, v23, (os_log_type_t)v7, "Unable to fetch motion state events for calculating walkingToStationaryRatio", v25);
        sub_1C0776778();
      }
      v26 = v0[44];
      sub_1C077B99C();

      sub_1C0786458((uint64_t)v13, *(uint64_t (**)(uint64_t, uint64_t))(v5 + 8));
      if (!v26)
        _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v40);
      sub_1C079C868();
      sub_1C07767BC();
      sub_1C07796F8();
      sub_1C07758BC();
      sub_1C0779D18();
      sub_1C077C104();
      sub_1C07767D4();
      sub_1C0778638();
      sub_1C0786388();
      sub_1C0779D20();
      v27 = sub_1C0D1540C();
      return v28(v27);
    }
    else
    {
      sub_1C0784B94(v0[43], &qword_1ED75D0B8);
      sub_1C077DD60(v13, (uint64_t)v40);
      sub_1C07A9480(v40, v0[5]);
      v29 = sub_1C079888C();
      sub_1C07866D4(v29);
      v0[15] = sub_1C07AD374();
      v30 = sub_1C077D33C();
      sub_1C078DC94(v30);
      sub_1C07B862C();
      sub_1C0779D18();
      v0[45] = 0;
      v0[46] = 0;
      v31 = v0[16];
      v0[47] = v0[15];
      v0[48] = v31;
      sub_1C07827AC();
      v32 = sub_1C079D830();
      v33 = sub_1C07A87D8(v32);
      v0[50] = v33;
      v0[51] = *(_QWORD *)(v33 - 8);
      v0[52] = sub_1C079888C();
      v34 = sub_1C079D830();
      v0[53] = v34;
      v35 = *(_QWORD *)(v34 - 8);
      v0[54] = v35;
      v0[55] = *(_QWORD *)(v35 + 64);
      v0[56] = sub_1C079888C();
      v36 = (_QWORD *)swift_task_alloc();
      v0[57] = (uint64_t)v36;
      sub_1C07948E0(v36);
      return sub_1C07A5764();
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1C0D14B9C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v3;

  v3 = *v1;
  sub_1C077B798(&v3);
  if (!v0)
    swift_task_dealloc();
  sub_1C077862C();
  return sub_1C0789D28();
}

uint64_t sub_1C0D14BF0()
{
  uint64_t v0;
  double v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  double v11;
  double v12;
  double v13;
  double v14;
  void *v15;
  uint64_t v16;
  void *v17;
  os_log_type_t v18;
  _WORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  double v24;
  double v25;
  double v26;
  double v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;

  v2 = *(_QWORD *)(v0 + 416);
  v3 = *(_QWORD *)(v0 + 392);
  if (sub_1C07B2D80(v2, 1, v3) == 1)
  {
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 408) + 8))(v2, *(_QWORD *)(v0 + 400));
    sub_1C077C104();
    *(_OWORD *)(v0 + 136) = 0u;
    *(_OWORD *)(v0 + 152) = 0u;
    _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0(v0 + 16);
    sub_1C0775880();
    swift_task_dealloc();
    sub_1C07796F8();
    sub_1C0779D18();
    sub_1C077C104();
    sub_1C07767D4();
    sub_1C0778638();
    sub_1C0786388();
    sub_1C0779D20();
    sub_1C07767BC();
    sub_1C07758BC();
    sub_1C0D153DC();
    __asm { BR              X3 }
  }
  *(_QWORD *)(v0 + 160) = v3;
  sub_1C07B3E30((uint64_t *)(v0 + 136));
  (*(void (**)(void))(*(_QWORD *)(v3 - 8) + 32))();
  sub_1C077C104();
  sub_1C07C010C((_OWORD *)(v0 + 136), (_OWORD *)(v0 + 168));
  if (sub_1C07A9A44())
  {
    v8 = *(_QWORD *)(v0 + 256);
    v7 = *(_QWORD *)(v0 + 264);
    v9 = *(_QWORD *)(v0 + 248);
    sub_1C077994C(v9);
    sub_1C08273C8(v9, v7, &qword_1ED74AF70);
    v10 = *(_QWORD *)(v7 + *(int *)(v8 + 32));
    if (v10 == 1)
    {
      v24 = *(double *)(v0 + 360);
      sub_1C07AF034();
      sub_1C07B98B4();
      v26 = v25;
      sub_1C0784B94(v8, &qword_1ED74AF70);
      v27 = v1 - v26;
      if (v24 >= v1 - v26)
        v27 = v24;
      v14 = *(double *)(v0 + 368);
    }
    else
    {
      if (v10 == 2)
      {
        v11 = *(double *)(v0 + 368);
        sub_1C07AF034();
        sub_1C07B98B4();
        v13 = v12;
        sub_1C0784B94(v8, &qword_1ED74AF70);
        if (v11 >= v1 - v13)
          v14 = v11;
        else
          v14 = v1 - v13;
      }
      else
      {
        sub_1C0784B94(*(_QWORD *)(v0 + 264), &qword_1ED74AF70);
        v14 = *(double *)(v0 + 368);
      }
      v27 = *(double *)(v0 + 360);
    }
    *(double *)(v0 + 360) = v27;
    *(double *)(v0 + 368) = v14;
  }
  else
  {
    v15 = *(void **)(v0 + 240);
    v16 = sub_1C077A2C4(*(_QWORD *)(v0 + 248), v5, v6, *(_QWORD *)(v0 + 256));
    sub_1C07AF650(v16, &qword_1ED74AF78);
    sub_1C106F190();
    v17 = v15;
    sub_1C106F538();
    v18 = sub_1C0784E0C();
    if (sub_1C07758D8(v18))
    {
      v19 = (_WORD *)sub_1C0780FC8();
      sub_1C0780BA4(v19);
      sub_1C0790E38(&dword_1C0771000, v20, v21, "motionState type couldn't be typecast correctly");
      sub_1C0776778();
    }
    v22 = *(_QWORD *)(v0 + 240);
    v23 = *(_QWORD *)(v0 + 224);

    sub_1C0786458(v22, *(uint64_t (**)(uint64_t, uint64_t))(v23 + 8));
  }
  v28 = *(_QWORD *)(v0 + 128);
  *(_QWORD *)(v0 + 376) = *(_QWORD *)(v0 + 120);
  *(_QWORD *)(v0 + 384) = v28;
  sub_1C0788A5C();
  v29 = sub_1C0795398();
  v30 = sub_1C07A87D8(v29);
  *(_QWORD *)(v0 + 400) = v30;
  *(_QWORD *)(v0 + 408) = *(_QWORD *)(v30 - 8);
  *(_QWORD *)(v0 + 416) = sub_1C079888C();
  v31 = sub_1C0795398();
  *(_QWORD *)(v0 + 424) = v31;
  v32 = *(_QWORD *)(v31 - 8);
  *(_QWORD *)(v0 + 432) = v32;
  *(_QWORD *)(v0 + 440) = *(_QWORD *)(v32 + 64);
  *(_QWORD *)(v0 + 448) = sub_1C079888C();
  v33 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 456) = v33;
  sub_1C079F7EC(v33);
  sub_1C0D153DC();
  return sub_1C1070084();
}

uint64_t sub_1C0D14F14()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  os_log_type_t v7;
  _WORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(uint64_t);

  v2 = v1[47];
  v3 = sub_1C079888C();
  sub_1C07B74D8(v3);
  sub_1C07ABE28();
  if (sub_1C0785208())
  {
    sub_1C07A96B8(v1[54]);
  }
  else
  {
    v4 = sub_1C079C084();
    sub_1C07A33D0(v4, v5);
  }
  sub_1C07758BC();
  sub_1C0779D18();
  sub_1C077C104();
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)(v1 + 12));
  v6 = (void *)v1[29];
  sub_1C0790D8C();
  sub_1C106F538();
  v7 = sub_1C0784E0C();
  if (sub_1C07758D8(v7))
  {
    v8 = (_WORD *)sub_1C0780FC8();
    sub_1C0780BA4(v8);
    sub_1C0790E38(&dword_1C0771000, v9, v10, "Unable to fetch motion state events for calculating walkingToStationaryRatio");
    sub_1C0776778();
  }
  v11 = v1[44];
  sub_1C078A0BC();

  sub_1C0786458(v0, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  if (!v11)
    sub_1C07AC8F0();
  sub_1C079C868();
  sub_1C07767BC();
  sub_1C07796F8();
  sub_1C07758BC();
  sub_1C0779D18();
  sub_1C077C104();
  sub_1C07767D4();
  sub_1C0778638();
  sub_1C0786388();
  sub_1C0779D20();
  v12 = sub_1C0D1540C();
  return v13(v12);
}

uint64_t sub_1C0D1504C()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0(v0 + 48);
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0(v0 + 88);
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1C0D15098()
{
  sub_1C0D1504C();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ShoppingActivityModel()
{
  return objc_opt_self();
}

uint64_t sub_1C0D150D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v6;
  uint64_t v7;

  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v6;
  *v6 = v3;
  v6[1] = sub_1C09C8DA8;
  return sub_1C0D129E8(a1, v7, a3);
}

uint64_t sub_1C0D1513C()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);
  uint64_t v6;

  v1 = (int *)sub_1C078F3C4();
  v2 = *(unsigned __int8 *)(*((_QWORD *)v1 - 1) + 80);
  v3 = v0 + ((v2 + 16) & ~v2);
  v4 = sub_1C077AE98();
  v5 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v5(v3, v4);
  v5(v3 + v1[5], v4);
  v6 = v3 + v1[6];
  if (*(_QWORD *)(v6 + 24))
    _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0(v6);
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0(v3 + v1[7]);
  return swift_deallocObject();
}

double sub_1C0D151EC()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(sub_1C078F3C4() - 8) + 80);
  return sub_1C0D13BD0(v0 + ((v1 + 16) & ~v1));
}

uint64_t sub_1C0D15214()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_1C078C23C();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

double sub_1C0D1528C()
{
  uint64_t *v0;

  sub_1C078C23C();
  return sub_1C0D13D4C(v0[2], v0[3], v0[4]);
}

unint64_t sub_1C0D152BC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED747FF0;
  if (!qword_1ED747FF0)
  {
    v1 = sub_1C07D4BEC(&qword_1ED747FF8);
    result = MEMORY[0x1C3BA8174](&unk_1C10B5B14, v1);
    atomic_store(result, (unint64_t *)&qword_1ED747FF0);
  }
  return result;
}

uint64_t sub_1C0D15300(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  *(_QWORD *)(a6 + 72) = sub_1C07D4B70(0, &qword_1ED74D328);
  *(_QWORD *)(a6 + 80) = &off_1E7A27C58;
  *(_QWORD *)(a6 + 48) = a1;
  *(_QWORD *)(a6 + 112) = sub_1C07D4B70(0, &qword_1ED74D388);
  *(_QWORD *)(a6 + 120) = &off_1E7A27CD0;
  *(_QWORD *)(a6 + 88) = a2;
  *(_BYTE *)(a6 + 16) = 1;
  *(_OWORD *)(a6 + 24) = xmmword_1C10B6130;
  *(_QWORD *)(a6 + 40) = &unk_1E79FBAA0;
  *(_OWORD *)(a6 + 152) = xmmword_1C10B6140;
  *(_QWORD *)(a6 + 168) = 0x312E302E31;
  *(_QWORD *)(a6 + 176) = 0xE500000000000000;
  *(_QWORD *)(a6 + 128) = a3;
  *(_QWORD *)(a6 + 136) = a4;
  *(_QWORD *)(a6 + 144) = a5;
  return a6;
}

uint64_t sub_1C0D15400()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(v0, v1);
}

uint64_t sub_1C0D1540C()
{
  return 0;
}

uint64_t SimpleBlockingFunction.init(predicates:relationshipPredicates:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  *a3 = result;
  a3[1] = a2;
  return result;
}

uint64_t SimpleBlockingFunction.predicates.getter()
{
  return _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
}

uint64_t SimpleBlockingFunction.relationshipPredicates.getter()
{
  return _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
}

_QWORD *SimpleBlockingFunction.blockValue(_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  _QWORD *v18;
  _QWORD *v19;

  sub_1C106FB68();
  sub_1C07B1280();
  v0 = sub_1C10705D0();
  swift_bridgeObjectRelease();
  v1 = *(_QWORD *)(v0 + 16);
  if (v1)
  {
    v2 = (uint64_t *)(v0 + 40);
    v3 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    do
    {
      v4 = *(v2 - 1);
      v5 = *v2;
      v6 = HIBYTE(*v2) & 0xF;
      if ((*v2 & 0x2000000000000000) == 0)
        v6 = v4 & 0xFFFFFFFFFFFFLL;
      if (v6)
      {
        _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          sub_1C09D30E0();
        v7 = v3[2];
        if (v7 >= v3[3] >> 1)
          sub_1C09D30E0();
        v3[2] = v7 + 1;
        v8 = &v3[2 * v7];
        v8[4] = v4;
        v8[5] = v5;
      }
      v2 += 2;
      --v1;
    }
    while (v1);
  }
  else
  {
    v3 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  swift_bridgeObjectRelease();
  if (v3[2])
  {
    v9 = sub_1C106FB68();
    v11 = sub_1C0776614(v9, v10, v3);
    swift_bridgeObjectRelease();
    if ((v11 & 1) == 0)
    {
      v12 = sub_1C106FB68();
      v14 = v13;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1C0795934();
        v3 = v18;
      }
      v15 = v3[2];
      if (v15 >= v3[3] >> 1)
      {
        sub_1C0795934();
        v3 = v19;
      }
      v3[2] = v15 + 1;
      v16 = &v3[2 * v15];
      v16[4] = v12;
      v16[5] = v14;
    }
  }
  return v3;
}

_QWORD *sub_1C0D15630()
{
  return SimpleBlockingFunction.blockValue(_:)();
}

ValueMetadata *type metadata accessor for SimpleBlockingFunction()
{
  return &type metadata for SimpleBlockingFunction;
}

_QWORD *sub_1C0D15658(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  return a1;
}

_QWORD *assignWithCopy for SiriRemembersDatabaseTable.IndexSQL(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for SiriRemembersDatabaseTable.IndexSQL(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for SiriRemembersDatabaseTable.IndexSQL()
{
  return &type metadata for SiriRemembersDatabaseTable.IndexSQL;
}

ValueMetadata *type metadata accessor for SiriRemembersDatabaseTable()
{
  return &type metadata for SiriRemembersDatabaseTable;
}

void sub_1C0D15784()
{
  qword_1EF6D1DF0 = (uint64_t)&unk_1E7A06920;
}

uint64_t sub_1C0D15798()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;

  v1 = sub_1C077585C();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1C106BF2C();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C106D450();
  sub_1C0905A84();
  sub_1C106BF14();
  if (v0)
    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  sub_1C106F178();
  v10 = sub_1C106F538();
  v11 = sub_1C1070378();
  if (os_log_type_enabled(v10, v11))
  {
    v12 = (uint8_t *)sub_1C0780FC8();
    *(_WORD *)v12 = 0;
    sub_1C077F048(&dword_1C0771000, v10, v11, "SiriRemembersViewGenerator: finished database migration.", v12);
    sub_1C0776778();
  }

  return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
}

void sub_1C0D15900()
{
  sub_1C077FF50((uint64_t)sub_1C0D1592C, 0);
}

uint64_t sub_1C0D1592C()
{
  uint64_t v0;

  sub_1C0AA7704();
  sub_1C08EEF08(v0);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C0D1597C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t inited;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;

  v3 = v2;
  v5 = sub_1C077585C();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  sub_1C07A6964();
  v7 = sub_1C106F538();
  v8 = sub_1C1070384();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = (uint8_t *)sub_1C0780FC8();
    *(_WORD *)v9 = 0;
    sub_1C077F048(&dword_1C0771000, v7, v8, "SiriRemembersViewGenerator: SiriRemembersDatabaseTable: dropping indexes", v9);
    sub_1C0776778();
  }

  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v1, v5);
  sub_1C07ACF80(&qword_1ED762CB0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C1079220;
  *(_QWORD *)(inited + 32) = 0xD00000000000001ALL;
  *(_QWORD *)(inited + 40) = 0x80000001C1109820;
  sub_1C08EEF7C(0, 0, 0x7865646E69, 0xE500000000000000);
  if (v2)
  {
    swift_setDeallocating();
    sub_1C0BE8D64();
  }
  else
  {
    v12 = v11;
    sub_1C0778624();
    v3 = sub_1C0D15D48(v12, (_QWORD *)inited);
    sub_1C077960C();
    swift_setDeallocating();
    sub_1C0BE8D64();
    sub_1C077E884();
    sub_1C078AD10(v3, v13, (void (*)(uint64_t, uint64_t))MEMORY[0x1E0D24818]);
    sub_1C079B534(0, 0, 0x656C626174, 0xE500000000000000);
    v15 = sub_1C0905AC4(v14);
    sub_1C077960C();
    sub_1C077E884();
    sub_1C078AD10(v15, v16, (void (*)(uint64_t, uint64_t))MEMORY[0x1E0D24820]);
    sub_1C079B534(0, 0, 0x72656767697274, 0xE700000000000000);
    v19 = v18;
    sub_1C077E884();
    sub_1C0904D80(v19, a1);
  }
  return v3;
}

void sub_1C0D15BEC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  uint64_t v9;

  v3 = sub_1C077585C();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  sub_1C07A6964();
  v5 = sub_1C106F538();
  v6 = sub_1C1070384();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)sub_1C0780FC8();
    *(_WORD *)v7 = 0;
    sub_1C077F048(&dword_1C0771000, v5, v6, "SiriRemembersViewGenerator: SiriRemembersDatabaseTable: restoring indexes", v7);
    sub_1C0776778();
  }

  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v1, v3);
  sub_1C077C14C();
  sub_1C0778624();
  sub_1C090502C();
  sub_1C0775834();
  if (!v9)
  {
    sub_1C077C14C();
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    sub_1C079B540();
    sub_1C07938A0();
    sub_1C077C14C();
    sub_1C077C0B8();
    sub_1C079B540();
    sub_1C077589C();
    sub_1C077C14C();
    v8 = _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    sub_1C0905240(v8, a1);
    sub_1C07938A0();
  }
  sub_1C07757D0();
}

void sub_1C0D15D40()
{
  sub_1C0D15900();
}

uint64_t sub_1C0D15D48(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v4;
  char v5;
  unsigned int v6;
  unint64_t v7;
  uint64_t isStackAllocationSafe;
  _QWORD *v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD v13[2];

  v4 = a1;
  v13[1] = *MEMORY[0x1E0C80C00];
  v5 = *(_BYTE *)(a1 + 32);
  v6 = v5 & 0x3F;
  v7 = (unint64_t)((1 << v5) + 63) >> 6;
  isStackAllocationSafe = swift_bridgeObjectRetain_n();
  if (v6 <= 0xD || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x1E0C80A78](isStackAllocationSafe);
    v9 = (_QWORD *)((char *)v13 - ((8 * v7 + 15) & 0x3FFFFFFFFFFFFFF0));
    sub_1C07E7D20(0, v7, v9);
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    v10 = sub_1C0D15F04((uint64_t)v9, v7, v4, a2);
    if (v2)
      swift_willThrow();
    else
      v4 = v10;
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v11 = (_QWORD *)swift_slowAlloc();
    sub_1C07E7D20(0, v7, v11);
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    v4 = sub_1C0D15F04((uint64_t)v11, v7, v4, a2);
    MEMORY[0x1C3BA8270](v11, -1, -1);
    swift_bridgeObjectRelease_n();
  }
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_1C0D15F04(uint64_t result, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  int64_t v10;
  unint64_t v11;
  int64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  int64_t v30;

  v4 = 0;
  v28 = 0;
  v29 = a3 + 64;
  v5 = 1 << *(_BYTE *)(a3 + 32);
  v6 = -1;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  v7 = v6 & *(_QWORD *)(a3 + 64);
  v30 = (unint64_t)(v5 + 63) >> 6;
  v26 = result;
  v27 = a4 + 7;
  while (1)
  {
    while (1)
    {
LABEL_4:
      if (v7)
      {
        v8 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        v9 = v8 | (v4 << 6);
      }
      else
      {
        v10 = v4 + 1;
        if (__OFADD__(v4, 1))
          goto LABEL_40;
        if (v10 >= v30)
          goto LABEL_38;
        v11 = *(_QWORD *)(v29 + 8 * v10);
        ++v4;
        if (!v11)
        {
          v4 = v10 + 1;
          if (v10 + 1 >= v30)
            goto LABEL_38;
          v11 = *(_QWORD *)(v29 + 8 * v4);
          if (!v11)
          {
            v4 = v10 + 2;
            if (v10 + 2 >= v30)
              goto LABEL_38;
            v11 = *(_QWORD *)(v29 + 8 * v4);
            if (!v11)
            {
              v12 = v10 + 3;
              if (v12 >= v30)
                goto LABEL_38;
              v11 = *(_QWORD *)(v29 + 8 * v12);
              if (!v11)
              {
                while (1)
                {
                  v4 = v12 + 1;
                  if (__OFADD__(v12, 1))
                    goto LABEL_41;
                  if (v4 >= v30)
                    goto LABEL_38;
                  v11 = *(_QWORD *)(v29 + 8 * v4);
                  ++v12;
                  if (v11)
                    goto LABEL_19;
                }
              }
              v4 = v12;
            }
          }
        }
LABEL_19:
        v7 = (v11 - 1) & v11;
        v9 = __clz(__rbit64(v11)) + (v4 << 6);
      }
      v13 = a4[2];
      if (v13)
        break;
LABEL_35:
      *(_QWORD *)(v26 + ((v9 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v9;
      if (__OFADD__(v28++, 1))
      {
        __break(1u);
LABEL_38:
        sub_1C07E846C();
        v25 = v24;
        swift_bridgeObjectRelease();
        return v25;
      }
    }
    v14 = (uint64_t *)(*(_QWORD *)(a3 + 48) + 16 * v9);
    v15 = *v14;
    v16 = v14[1];
    result = a4[4];
    if (result != *v14 || a4[5] != v16)
    {
      result = sub_1C1070CB4();
      if ((result & 1) == 0)
        break;
    }
  }
  if (v13 == 1)
    goto LABEL_35;
  v18 = v27;
  v19 = 1;
  while (1)
  {
    v20 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    result = *(v18 - 1);
    v21 = *v18;
    v18 += 2;
    if (result == v15 && v21 == v16)
      goto LABEL_4;
    result = sub_1C1070CB4();
    if ((result & 1) != 0)
      goto LABEL_4;
    ++v19;
    if (v20 == v13)
      goto LABEL_35;
  }
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

#error "1C0D16174: call analysis failed (funcsize=8)"

#error "1C0D161A0: call analysis failed (funcsize=8)"

void sub_1C0D161AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,void (*a21)(uint64_t *),void (*a22)(uint64_t *))
{
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  id v45;
  uint64_t v46;
  uint64_t v47;
  void (*v48)(uint64_t *);
  void (*v49)(uint64_t *);
  char v50;
  uint64_t v51;
  NSObject *v52;
  os_log_type_t v53;
  NSObject *v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t *v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  void *v65;
  os_log_type_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  _BYTE *v72;
  unint64_t v73;
  unint64_t v74;
  os_log_type_t v75;
  _DWORD *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  os_log_type_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t *v92;
  _BYTE v93[20];
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  _QWORD v97[4];

  sub_1C0779670();
  a19 = v24;
  a20 = v25;
  v27 = v26;
  v90 = v28;
  v91 = v29;
  v88 = sub_1C077B3B4();
  sub_1C0787718(*(_QWORD *)(v88 - 8));
  MEMORY[0x1E0C80A78](v30);
  v32 = sub_1C0D25BE4(v31, v87);
  sub_1C077B58C(v32, (uint64_t)&a17);
  sub_1C0787718(v33);
  MEMORY[0x1E0C80A78](v34);
  sub_1C077AF60();
  MEMORY[0x1E0C80A78](v35);
  sub_1C0778674();
  v89 = *(_QWORD *)(sub_1C0775C28(v36) - 8);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v37);
  sub_1C0D25D5C();
  sub_1C0D263B0();
  MEMORY[0x1E0C80A78](v38);
  sub_1C077AF60();
  MEMORY[0x1E0C80A78](v39);
  sub_1C0781A3C();
  sub_1C0785044();
  MEMORY[0x1E0C80A78](v40);
  sub_1C077AF60();
  MEMORY[0x1E0C80A78](v41);
  sub_1C0778674();
  sub_1C0784DAC(v42);
  v43 = v22[1];
  v92 = v22;
  v44 = *v22;
  *(_QWORD *)&v93[12] = *v22;
  v94 = v43;
  sub_1C07767CC();
  sub_1C077C964();
  v45 = sub_1C079B9C0(v27, sel___swift_objectForKeyedSubscript_);
  sub_1C07AA490();
  if (v22)
  {
    sub_1C0782E40();
    v46 = sub_1C07768A0();
  }
  else
  {
    sub_1C0776B50();
  }
  v48 = a21;
  v49 = a22;
  sub_1C077EA44(v46, v47, &qword_1ED760400);
  if (v97[2])
  {
    sub_1C0D260D4();
    if ((sub_1C077C458() & 1) != 0)
    {
      sub_1C07767AC();
      sub_1C077674C();
      sub_1C0D25A2C();
      if (!v50)
        swift_once();
      v51 = sub_1C077585C();
      sub_1C079E000(v51, (uint64_t)qword_1ED78D818);
      sub_1C077EDAC(*(uint64_t (**)(void))(v23 + 16));
      sub_1C07767CC();
      v52 = sub_1C0D26020((uint64_t)v97);
      v53 = sub_1C1070378();
      v54 = v53;
      if (os_log_type_enabled(v52, v53))
      {
        v55 = sub_1C0775854();
        v96 = sub_1C0775854();
        *(_DWORD *)v55 = 136381187;
        sub_1C077E6D0();
        v56 = sub_1C078C6DC();
        v59 = sub_1C0788DAC(v56, v57, v58);
        sub_1C07BA998(v59);
        sub_1C077CF6C();
        *(_WORD *)(v55 + 12) = 2080;
        sub_1C0794BAC(&qword_1ED759F68, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3BB08], MEMORY[0x1E0D3BB40]);
        v60 = sub_1C1070C0C();
        v62 = sub_1C0782D28(v60, v61);
        sub_1C0D26510(v62);
        sub_1C10705AC();
        sub_1C077960C();
        sub_1C07A75CC(*(uint64_t (**)(uint64_t, uint64_t))(v23 + 8));
        *(_WORD *)(v55 + 22) = 1024;
        sub_1C0D25A18();
        sub_1C0D25970(&dword_1C0771000, v52, "Source: generating identifier for: %{private}s : %s : %{BOOL}d", (uint64_t)v93);
        sub_1C07788F8();
        sub_1C0776778();
      }
      sub_1C07758A4();
      sub_1C07A75CC(*(uint64_t (**)(uint64_t, uint64_t))(v23 + 8));

      v96 = v90;
      v97[0] = v91;
      sub_1C077E6D0();
      sub_1C0D25DC0();
      sub_1C0D26798();
      sub_1C07AB5DC();
      v74 = v73;
      sub_1C079EE68(v89);
      if (v74 >> 60 != 15)
      {
        sub_1C0778580();
        sub_1C0794BAC((unint64_t *)&qword_1ED762B30, (uint64_t (*)(uint64_t))MEMORY[0x1E0CA9940], MEMORY[0x1E0CA9930]);
        sub_1C0D266F8();
        sub_1C106F85C();
        __asm { BR              X10 }
      }
      sub_1C077584C();
      sub_1C078C354();
      v75 = sub_1C077C13C();
      if (sub_1C07AA47C(v54))
      {
        v76 = (_DWORD *)sub_1C0775854();
        v96 = sub_1C0775854();
        *v76 = 136380675;
        v77 = sub_1C077584C();
        v79 = sub_1C077E634(v77, v78, &v96);
        sub_1C0789FD8(v79);
        sub_1C077CF6C();
        sub_1C07759F4(&dword_1C0771000, v54, v75, "Source: failed to encode identifier as UTF8 data: %{private}s");
        sub_1C0778610();
        sub_1C0776778();
      }

      sub_1C07758A4();
      v48(v92);
      sub_1C078C354();
      v80 = sub_1C077C13C();
      if (sub_1C07892C0(v80))
      {
        sub_1C0775854();
        v81 = sub_1C0775854();
        sub_1C0D26118(v81);
        v82 = sub_1C079E858(4.8149e-34);
        v84 = sub_1C077C958(v82, v83, &v96);
        sub_1C0791588(v84);
        sub_1C07767AC();
        sub_1C0D26164();
        sub_1C0788288(&dword_1C0771000, v85, v86, "Mapping error, failed to generate EntityIdentifier for %s");
        sub_1C078CBD0();
        sub_1C0776778();
      }
      sub_1C0D26164();

      sub_1C078E0D0((uint64_t)&v95);
      goto LABEL_17;
    }
    sub_1C07767AC();
  }
  else
  {
    v63 = sub_1C07767AC();
    sub_1C0892C70(v63, &qword_1ED760400);
  }
  sub_1C0D25A2C();
  if (!v50)
    swift_once();
  v64 = sub_1C077585C();
  v65 = (void *)sub_1C079E000(v64, (uint64_t)qword_1ED78D818);
  v48(v92);
  sub_1C106F538();
  v66 = sub_1C077C13C();
  if (sub_1C07892C0(v66))
  {
    sub_1C0775854();
    v67 = sub_1C0775854();
    sub_1C0D26118(v67);
    sub_1C079E858(4.8149e-34);
    v69 = sub_1C077B650(v44, v68, &v96);
    sub_1C0791588(v69);
    sub_1C07767AC();
    v49(v92);
    sub_1C0788288(&dword_1C0771000, v70, v71, "Mapping error, missing submap for %s");
    sub_1C078CBD0();
    sub_1C0776778();
  }
  v49(v92);

  sub_1C081F128();
  sub_1C0775810();
  sub_1C0782BFC(v72, 2);
  sub_1C0D260DC();
  sub_1C0779DC0();
  sub_1C07767B4();
  sub_1C078E1C4();
  sub_1C07767AC();
  sub_1C07BA268();
  sub_1C07767AC();
  sub_1C07888BC();
LABEL_17:
  sub_1C07A8028();
  sub_1C0776760();
}

void sub_1C0D16C0C()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  unint64_t v39;
  os_log_type_t v40;
  char v41;
  _DWORD *v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void *v49;
  os_log_type_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _BYTE *v57;
  os_log_type_t v58;
  _DWORD *v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  os_log_type_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  NSObject *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  unint64_t v86;
  uint64_t v87;
  uint64_t v88;
  _QWORD v89[4];

  sub_1C0779670();
  v76 = sub_1C07ABE38(v7, v8, v9, v10, v11, v12, v13, v14);
  sub_1C0787718(*(_QWORD *)(v76 - 8));
  MEMORY[0x1E0C80A78](v15);
  v74 = sub_1C0D25D78();
  sub_1C0787718(*(_QWORD *)(v74 - 8));
  MEMORY[0x1E0C80A78](v16);
  sub_1C077AF60();
  MEMORY[0x1E0C80A78](v17);
  v19 = sub_1C0775C28((uint64_t)&v70 - v18);
  v78 = *(_QWORD *)(v19 - 8);
  v79 = v19;
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v20);
  v21 = sub_1C07AC00C();
  sub_1C0785044();
  MEMORY[0x1E0C80A78](v22);
  sub_1C077AF60();
  MEMORY[0x1E0C80A78](v23);
  v75 = sub_1C0781A3C();
  sub_1C0787718(*(_QWORD *)(v75 - 8));
  MEMORY[0x1E0C80A78](v24);
  sub_1C077AF60();
  MEMORY[0x1E0C80A78](v25);
  sub_1C0D263C0(v26, v27, v28, v29, v30, v31, v32, v33, v70);
  v89[2] = *(_QWORD *)(v5 + 16);
  sub_1C078A67C(v5 + 24, (uint64_t)v89, &qword_1ED762B50);
  v83 = v4;
  v84 = v0;
  sub_1C07767CC();
  sub_1C0D262F0();
  v34 = sub_1C079B9C0(v1, sel___swift_objectForKeyedSubscript_);
  sub_1C07AA490();
  v77 = v2;
  if (v1)
  {
    sub_1C0D259E0();
    v35 = sub_1C07768A0();
  }
  else
  {
    sub_1C0D26640();
  }
  sub_1C0D25C78(v35, v36, &qword_1ED760400);
  if (v88)
  {
    sub_1C0D260D4();
    if ((sub_1C077C458() & 1) != 0)
    {
      v73 = v82;
      sub_1C07767AC();
      sub_1C077674C();
      sub_1C0D25A2C();
      if (!v37)
        swift_once();
      v38 = sub_1C077585C();
      sub_1C079E000(v38, (uint64_t)qword_1ED78D818);
      sub_1C07B2668();
      v39 = v80;
      sub_1C07767CC();
      sub_1C0D26020((uint64_t)&v87);
      v40 = sub_1C077B0C0();
      sub_1C0D25F90(v40);
      sub_1C0D2658C();
      if ((v41 & 1) != 0)
      {
        v42 = (_DWORD *)sub_1C0775854();
        v72 = sub_1C0775854();
        v85 = v72;
        *v42 = 136381187;
        v71 = &unk_1ED761000;
        sub_1C07767C4();
        v43 = sub_1C0D26174();
        sub_1C07ABAEC(v43);
        sub_1C077CF6C();
        sub_1C0D2626C();
        sub_1C0794BAC(&qword_1ED759F68, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3BB08], MEMORY[0x1E0D3BB40]);
        v44 = sub_1C0D2623C();
        v46 = sub_1C0781D24(v44, v45);
        sub_1C0D25B6C(v46);
        sub_1C077960C();
        sub_1C0D26134();
        sub_1C07B9F84();
        sub_1C0D25970(&dword_1C0771000, v71, "Source: generating identifier for: %{private}s : %s : %{BOOL}d", (uint64_t)&v86 + 4);
        sub_1C07788F8();
        sub_1C0776778();
      }
      sub_1C07758A4();
      sub_1C07A75CC(*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));

      v85 = v81;
      v86 = v39;
      sub_1C07767C4();
      sub_1C0D26494();
      sub_1C0D267D0();
      sub_1C07AB5DC();
      sub_1C0D25EE4();
      if (v39 >> 60 != 15)
      {
        sub_1C0778580();
        sub_1C0794BAC((unint64_t *)&qword_1ED762B30, (uint64_t (*)(uint64_t))MEMORY[0x1E0CA9940], MEMORY[0x1E0CA9930]);
        sub_1C0D25CC8();
        v62 = (char *)&loc_1C0D171B8 + *((int *)qword_1C0D17500 + (v39 >> 62));
        v70 = v21;
        __asm { BR              X10 }
      }
      sub_1C077584C();
      sub_1C078C354();
      v58 = sub_1C0D265E4();
      if (sub_1C07AA47C(v6))
      {
        v59 = (_DWORD *)sub_1C0775854();
        v85 = sub_1C0775854();
        *v59 = 136380675;
        v60 = sub_1C077584C();
        v83 = sub_1C077E634(v60, v61, &v85);
        sub_1C078ACB4();
        sub_1C077CF6C();
        sub_1C07759F4(&dword_1C0771000, v6, v58, "Source: failed to encode identifier as UTF8 data: %{private}s");
        sub_1C0778610();
        sub_1C0776778();
      }

      sub_1C07758A4();
      sub_1C07767B4();
      sub_1C0D26124();
      sub_1C0D264B4();
      sub_1C07767B4();
      sub_1C0D26124();
      sub_1C0D264B4();
      sub_1C106F538();
      v63 = sub_1C077C13C();
      if (sub_1C07892C0(v63))
      {
        sub_1C0775854();
        v64 = sub_1C0775854();
        sub_1C0D267FC(v64);
        v65 = sub_1C079E858(4.8149e-34);
        v67 = sub_1C077C958(v65, v66, &v85);
        sub_1C07B74EC(v67);
        sub_1C07758A4();
        sub_1C0D25B3C();
        sub_1C079B948();
        sub_1C07767AC();
        sub_1C0D25B3C();
        sub_1C079B948();
        sub_1C0788288(&dword_1C0771000, v68, v69, "Mapping error, failed to generate EntityIdentifier for %s");
        sub_1C078CBD0();
        sub_1C0776778();
      }
      sub_1C07767AC();
      sub_1C0D25B3C();
      sub_1C079B948();
      sub_1C07767AC();
      sub_1C0D25B3C();
      sub_1C079B948();

      sub_1C078E0D0((uint64_t)&v88);
      goto LABEL_17;
    }
    sub_1C07767AC();
  }
  else
  {
    v47 = sub_1C07767AC();
    sub_1C0775C38(v47, &qword_1ED760400);
  }
  sub_1C0D25A2C();
  if (!v37)
    swift_once();
  v48 = sub_1C077585C();
  v49 = (void *)sub_1C079E000(v48, (uint64_t)qword_1ED78D818);
  sub_1C07767B4();
  sub_1C0D26124();
  sub_1C0D264B4();
  sub_1C07767B4();
  sub_1C0D26124();
  sub_1C0D264B4();
  sub_1C106F538();
  v50 = sub_1C077C13C();
  if (sub_1C07892C0(v50))
  {
    sub_1C0775854();
    v51 = sub_1C0775854();
    sub_1C0D267FC(v51);
    v52 = sub_1C079E858(4.8149e-34);
    v54 = sub_1C077C958(v52, v53, &v85);
    sub_1C07B74EC(v54);
    sub_1C07758A4();
    sub_1C0D25B3C();
    sub_1C079B948();
    sub_1C07767AC();
    sub_1C0D25B3C();
    sub_1C079B948();
    sub_1C0788288(&dword_1C0771000, v55, v56, "Mapping error, missing submap for %s");
    sub_1C078CBD0();
    sub_1C0776778();
  }
  sub_1C07767AC();
  sub_1C0D25B3C();
  sub_1C079B948();
  sub_1C07767AC();
  sub_1C0D25B3C();
  sub_1C079B948();

  sub_1C081F128();
  sub_1C0775810();
  sub_1C0782BFC(v57, 2);
  sub_1C0D261D4();
  sub_1C0779DC0();
  sub_1C07767B4();
  sub_1C078E1C4();
  sub_1C07767AC();
  sub_1C07BA268();
  sub_1C07767AC();
  sub_1C07888BC();
LABEL_17:
  sub_1C07A8028();
  sub_1C0776760();
}

void sub_1C0D17514()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  unint64_t v39;
  os_log_type_t v40;
  char v41;
  _DWORD *v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void *v49;
  os_log_type_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _BYTE *v57;
  os_log_type_t v58;
  _DWORD *v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  os_log_type_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  NSObject *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  unint64_t v86;
  uint64_t v87;
  _QWORD v88[2];
  uint64_t v89;

  sub_1C0779670();
  v76 = sub_1C07ABE38(v7, v8, v9, v10, v11, v12, v13, v14);
  sub_1C0787718(*(_QWORD *)(v76 - 8));
  MEMORY[0x1E0C80A78](v15);
  v74 = sub_1C0D25D78();
  sub_1C0787718(*(_QWORD *)(v74 - 8));
  MEMORY[0x1E0C80A78](v16);
  sub_1C077AF60();
  MEMORY[0x1E0C80A78](v17);
  v19 = sub_1C0775C28((uint64_t)&v70 - v18);
  v78 = *(_QWORD *)(v19 - 8);
  v79 = v19;
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v20);
  v21 = sub_1C07AC00C();
  sub_1C0785044();
  MEMORY[0x1E0C80A78](v22);
  sub_1C077AF60();
  MEMORY[0x1E0C80A78](v23);
  v75 = sub_1C0781A3C();
  sub_1C0787718(*(_QWORD *)(v75 - 8));
  MEMORY[0x1E0C80A78](v24);
  sub_1C077AF60();
  MEMORY[0x1E0C80A78](v25);
  sub_1C0D263C0(v26, v27, v28, v29, v30, v31, v32, v33, v70);
  sub_1C078A67C(v5 + 16, (uint64_t)&v89, &qword_1ED762B50);
  v88[1] = *(_QWORD *)(v5 + 32);
  v83 = v4;
  v84 = v0;
  sub_1C07767CC();
  sub_1C0D262F0();
  v34 = sub_1C079B9C0(v1, sel___swift_objectForKeyedSubscript_);
  sub_1C07AA490();
  v77 = v2;
  if (v1)
  {
    sub_1C0D259E0();
    v35 = sub_1C07768A0();
  }
  else
  {
    sub_1C0D26640();
  }
  sub_1C0D25C78(v35, v36, &qword_1ED760400);
  if (v88[0])
  {
    sub_1C0D260D4();
    if ((sub_1C077C458() & 1) != 0)
    {
      v73 = v82;
      sub_1C07767AC();
      sub_1C077674C();
      sub_1C0D25A2C();
      if (!v37)
        swift_once();
      v38 = sub_1C077585C();
      sub_1C079E000(v38, (uint64_t)qword_1ED78D818);
      sub_1C07B2668();
      v39 = v80;
      sub_1C07767CC();
      sub_1C0D26020((uint64_t)&v87);
      v40 = sub_1C077B0C0();
      sub_1C0D25F90(v40);
      sub_1C0D2658C();
      if ((v41 & 1) != 0)
      {
        v42 = (_DWORD *)sub_1C0775854();
        v72 = sub_1C0775854();
        v85 = v72;
        *v42 = 136381187;
        v71 = &unk_1ED761000;
        sub_1C07767C4();
        v43 = sub_1C0D26174();
        sub_1C07ABAEC(v43);
        sub_1C077CF6C();
        sub_1C0D2626C();
        sub_1C0794BAC(&qword_1ED759F68, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3BB08], MEMORY[0x1E0D3BB40]);
        v44 = sub_1C0D2623C();
        v46 = sub_1C0781D24(v44, v45);
        sub_1C0D25B6C(v46);
        sub_1C077960C();
        sub_1C0D26134();
        sub_1C07B9F84();
        sub_1C0D25970(&dword_1C0771000, v71, "Source: generating identifier for: %{private}s : %s : %{BOOL}d", (uint64_t)&v86 + 4);
        sub_1C07788F8();
        sub_1C0776778();
      }
      sub_1C07758A4();
      sub_1C07A75CC(*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));

      v85 = v81;
      v86 = v39;
      sub_1C07767C4();
      sub_1C0D26494();
      sub_1C0D267D0();
      sub_1C07AB5DC();
      sub_1C0D25EE4();
      if (v39 >> 60 != 15)
      {
        sub_1C0778580();
        sub_1C0794BAC((unint64_t *)&qword_1ED762B30, (uint64_t (*)(uint64_t))MEMORY[0x1E0CA9940], MEMORY[0x1E0CA9930]);
        sub_1C0D25CC8();
        v62 = (char *)&loc_1C0D17AC0 + *((int *)qword_1C0D17E08 + (v39 >> 62));
        v70 = v21;
        __asm { BR              X10 }
      }
      sub_1C077584C();
      sub_1C078C354();
      v58 = sub_1C0D265E4();
      if (sub_1C07AA47C(v6))
      {
        v59 = (_DWORD *)sub_1C0775854();
        v85 = sub_1C0775854();
        *v59 = 136380675;
        v60 = sub_1C077584C();
        v83 = sub_1C077E634(v60, v61, &v85);
        sub_1C078ACB4();
        sub_1C077CF6C();
        sub_1C07759F4(&dword_1C0771000, v6, v58, "Source: failed to encode identifier as UTF8 data: %{private}s");
        sub_1C0778610();
        sub_1C0776778();
      }

      sub_1C07758A4();
      sub_1C07767B4();
      sub_1C0D263E8();
      sub_1C0D264BC();
      sub_1C07767B4();
      sub_1C0D263E8();
      sub_1C0D264BC();
      sub_1C106F538();
      v63 = sub_1C077C13C();
      if (sub_1C07892C0(v63))
      {
        sub_1C0775854();
        v64 = sub_1C0775854();
        sub_1C0D267FC(v64);
        v65 = sub_1C079E858(4.8149e-34);
        v67 = sub_1C077C958(v65, v66, &v85);
        sub_1C07B74EC(v67);
        sub_1C07758A4();
        sub_1C077E29C();
        sub_1C0D25C04();
        sub_1C07767AC();
        sub_1C077E29C();
        sub_1C0D25C04();
        sub_1C0788288(&dword_1C0771000, v68, v69, "Mapping error, failed to generate EntityIdentifier for %s");
        sub_1C078CBD0();
        sub_1C0776778();
      }
      sub_1C07767AC();
      sub_1C077E29C();
      sub_1C0D25C04();
      sub_1C07767AC();
      sub_1C077E29C();
      sub_1C0D25C04();

      sub_1C078E0D0((uint64_t)v88);
      goto LABEL_17;
    }
    sub_1C07767AC();
  }
  else
  {
    v47 = sub_1C07767AC();
    sub_1C0775C38(v47, &qword_1ED760400);
  }
  sub_1C0D25A2C();
  if (!v37)
    swift_once();
  v48 = sub_1C077585C();
  v49 = (void *)sub_1C079E000(v48, (uint64_t)qword_1ED78D818);
  sub_1C07767B4();
  sub_1C0D263E8();
  sub_1C0D264BC();
  sub_1C07767B4();
  sub_1C0D263E8();
  sub_1C0D264BC();
  sub_1C106F538();
  v50 = sub_1C077C13C();
  if (sub_1C07892C0(v50))
  {
    sub_1C0775854();
    v51 = sub_1C0775854();
    sub_1C0D267FC(v51);
    v52 = sub_1C079E858(4.8149e-34);
    v54 = sub_1C077C958(v52, v53, &v85);
    sub_1C07B74EC(v54);
    sub_1C07758A4();
    sub_1C077E29C();
    sub_1C0D25C04();
    sub_1C07767AC();
    sub_1C077E29C();
    sub_1C0D25C04();
    sub_1C0788288(&dword_1C0771000, v55, v56, "Mapping error, missing submap for %s");
    sub_1C078CBD0();
    sub_1C0776778();
  }
  sub_1C07767AC();
  sub_1C077E29C();
  sub_1C0D25C04();
  sub_1C07767AC();
  sub_1C077E29C();
  sub_1C0D25C04();

  sub_1C081F128();
  sub_1C0775810();
  sub_1C0782BFC(v57, 2);
  sub_1C0D261D4();
  sub_1C0779DC0();
  sub_1C07767B4();
  sub_1C078E1C4();
  sub_1C07767AC();
  sub_1C07BA268();
  sub_1C07767AC();
  sub_1C07888BC();
LABEL_17:
  sub_1C07A8028();
  sub_1C0776760();
}

void sub_1C0D17E18()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  char v44;
  uint64_t v45;
  NSObject *v46;
  unint64_t v47;
  os_log_type_t v48;
  BOOL v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  void *v57;
  os_log_type_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  _BYTE *v64;
  unint64_t v65;
  unint64_t v66;
  os_log_type_t v67;
  _DWORD *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  os_log_type_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80[2];
  NSObject *v81;
  uint64_t v82;
  uint64_t v83;
  unint64_t v84;
  int v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  unint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  unint64_t v101;
  uint64_t v102;

  sub_1C0779670();
  sub_1C078A7F8(v2, v3, v4, v5, v6, v7, v8, v9);
  v94 = v10;
  v95 = v11;
  v96 = v12;
  v13 = sub_1C077B3B4();
  sub_1C0787718(*(_QWORD *)(v13 - 8));
  MEMORY[0x1E0C80A78](v14);
  v88 = sub_1C0D25BE4(v15, v80[0]);
  sub_1C0787718(*(_QWORD *)(v88 - 8));
  MEMORY[0x1E0C80A78](v16);
  sub_1C077AF60();
  MEMORY[0x1E0C80A78](v17);
  v19 = sub_1C0775C28((uint64_t)v80 - v18);
  v92 = *(_QWORD *)(v19 - 8);
  v93 = v19;
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v20);
  v21 = sub_1C0D25D5C();
  sub_1C0D263B0();
  MEMORY[0x1E0C80A78](v22);
  sub_1C077AF60();
  MEMORY[0x1E0C80A78](v23);
  v25 = (char *)v80 - v24;
  v26 = sub_1C106E590();
  v89 = *(_QWORD *)(v26 - 8);
  v90 = v26;
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v27);
  sub_1C077AF60();
  MEMORY[0x1E0C80A78](v28);
  sub_1C0D26730(v29, v30, v31, v32, v33, v34, v35, v36, v80[0]);
  v38 = v0[2];
  v37 = v0[3];
  v98 = v38;
  v99 = v37;
  sub_1C07767CC();
  sub_1C077C964();
  v39 = sub_1C079B9C0(v0, sel___swift_objectForKeyedSubscript_);
  sub_1C07AA490();
  v91 = v13;
  if (v0)
  {
    sub_1C0782E40();
    v40 = sub_1C07768A0();
  }
  else
  {
    sub_1C0776B50();
  }
  sub_1C077EA44(v40, v41, &qword_1ED760400);
  if (v102)
  {
    v42 = sub_1C0D260D4();
    if ((sub_1C077C458() & 1) != 0)
    {
      v87 = v38;
      v86 = v97;
      sub_1C07767AC();
      v43 = v96 + *(int *)(sub_1C077674C() + 24);
      sub_1C0D25A2C();
      if (!v44)
        swift_once();
      v45 = sub_1C077585C();
      v46 = sub_1C079E000(v45, (uint64_t)qword_1ED78D818);
      sub_1C077EDAC(*(uint64_t (**)(void))(v1 + 16));
      v47 = v95;
      sub_1C07767CC();
      sub_1C0D26020((uint64_t)&v102);
      v48 = sub_1C077B0C0();
      v85 = v48;
      v49 = os_log_type_enabled(v46, v48);
      v84 = v42;
      v83 = v43;
      if (v49)
      {
        v50 = sub_1C0775854();
        v82 = sub_1C0775854();
        v100 = v82;
        *(_DWORD *)v50 = 136381187;
        v81 = v46;
        sub_1C077E6D0();
        v51 = sub_1C0788DAC(v94, v47, &v100);
        sub_1C07BA998(v51);
        sub_1C077CF6C();
        *(_WORD *)(v50 + 12) = 2080;
        sub_1C0794BAC(&qword_1ED759F68, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3BB08], MEMORY[0x1E0D3BB40]);
        v52 = sub_1C1070C0C();
        v54 = sub_1C0782D28(v52, v53);
        sub_1C0D26510(v54);
        sub_1C10705AC();
        sub_1C077960C();
        sub_1C077C144((uint64_t)v25, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
        *(_WORD *)(v50 + 22) = 1024;
        sub_1C0D25A18();
        sub_1C0D25970(&dword_1C0771000, v81, "Source: generating identifier for: %{private}s : %s : %{BOOL}d", (uint64_t)&v100 + 4);
        sub_1C07788F8();
        sub_1C0776778();
      }
      sub_1C07758A4();
      sub_1C077C144((uint64_t)v25, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));

      v100 = v94;
      v101 = v47;
      sub_1C077E6D0();
      sub_1C0D25DC0();
      sub_1C0D26798();
      sub_1C07AB5DC();
      v66 = v65;
      sub_1C079EE68(v92);
      if (v66 >> 60 != 15)
      {
        sub_1C0778580();
        sub_1C0794BAC((unint64_t *)&qword_1ED762B30, (uint64_t (*)(uint64_t))MEMORY[0x1E0CA9940], MEMORY[0x1E0CA9930]);
        sub_1C0D266F8();
        sub_1C106F85C();
        v72 = (char *)&loc_1C0D18444 + dword_1C0D1885C[v66 >> 62];
        v80[1] = v21;
        __asm { BR              X10 }
      }
      sub_1C077584C();
      sub_1C078C354();
      v67 = sub_1C077C13C();
      if (sub_1C07AA47C(v46))
      {
        v68 = (_DWORD *)sub_1C0775854();
        v100 = sub_1C0775854();
        *v68 = 136380675;
        v69 = sub_1C077584C();
        v71 = sub_1C077E634(v69, v70, &v100);
        sub_1C0789FD8(v71);
        sub_1C077CF6C();
        sub_1C07759F4(&dword_1C0771000, v46, v67, "Source: failed to encode identifier as UTF8 data: %{private}s");
        sub_1C0778610();
        sub_1C0776778();
      }

      sub_1C07758A4();
      sub_1C0D2572C();
      sub_1C078C354();
      v73 = sub_1C077C13C();
      if (sub_1C07892C0(v73))
      {
        sub_1C0775854();
        v74 = sub_1C0775854();
        sub_1C0D26118(v74);
        v75 = sub_1C079E858(4.8149e-34);
        v77 = sub_1C077C958(v75, v76, &v100);
        sub_1C0791588(v77);
        sub_1C07767AC();
        sub_1C0D25760();
        sub_1C0788288(&dword_1C0771000, v78, v79, "Mapping error, failed to generate EntityIdentifier for %s");
        sub_1C078CBD0();
        sub_1C0776778();
      }
      sub_1C0D25760();

      sub_1C078E0D0((uint64_t)&v101);
      goto LABEL_17;
    }
    sub_1C07767AC();
  }
  else
  {
    v55 = sub_1C07767AC();
    sub_1C0892C70(v55, &qword_1ED760400);
  }
  sub_1C0D25A2C();
  if (!v44)
    swift_once();
  v56 = sub_1C077585C();
  v57 = (void *)sub_1C079E000(v56, (uint64_t)qword_1ED78D818);
  sub_1C0D2572C();
  sub_1C106F538();
  v58 = sub_1C077C13C();
  if (sub_1C07892C0(v58))
  {
    sub_1C0775854();
    v59 = sub_1C0775854();
    sub_1C0D26118(v59);
    sub_1C079E858(4.8149e-34);
    v61 = sub_1C077B650(v38, v60, &v100);
    sub_1C0791588(v61);
    sub_1C07767AC();
    sub_1C0D25760();
    sub_1C0788288(&dword_1C0771000, v62, v63, "Mapping error, missing submap for %s");
    sub_1C078CBD0();
    sub_1C0776778();
  }
  sub_1C0D25760();

  sub_1C081F128();
  sub_1C0775810();
  sub_1C0782BFC(v64, 2);
  sub_1C0D260DC();
  sub_1C0779DC0();
  sub_1C07767B4();
  sub_1C078E1C4();
  sub_1C07767AC();
  sub_1C07BA268();
  sub_1C07767AC();
  sub_1C07888BC();
LABEL_17:
  sub_1C07A8028();
  sub_1C0776760();
}

void sub_1C0D1886C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  NSObject *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  id v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  char v58;
  uint64_t v59;
  NSObject *v60;
  unint64_t v61;
  os_log_type_t v62;
  BOOL v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  uint64_t v67;
  uint64_t v68;
  void *v69;
  os_log_type_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  _BYTE *v76;
  unint64_t v77;
  uint64_t v78;
  unint64_t v79;
  unint64_t v80;
  os_log_type_t v81;
  _DWORD *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  os_log_type_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  NSObject *v93;
  os_log_t v94;
  uint64_t v95;
  uint64_t v96;
  unint64_t v97;
  int v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  unint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  unint64_t v117;
  _QWORD v118[3];

  sub_1C0779670();
  sub_1C078A7F8(v25, v26, v27, v28, v29, v30, v31, v32);
  v109 = v34;
  v110 = v33;
  v112 = v35;
  v107 = sub_1C077B3B4();
  sub_1C0787718(*(_QWORD *)(v107 - 8));
  MEMORY[0x1E0C80A78](v36);
  sub_1C077AE40();
  v105 = v37;
  v102 = sub_1C106F868();
  sub_1C0787718(*(_QWORD *)(v102 - 8));
  MEMORY[0x1E0C80A78](v38);
  sub_1C077AF60();
  MEMORY[0x1E0C80A78](v39);
  v41 = sub_1C0775C28((uint64_t)&v93 - v40);
  v108 = *(_QWORD *)(v41 - 8);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v42);
  v44 = (char *)&v93 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  v45 = sub_1C106D1F8();
  sub_1C0D263B0();
  MEMORY[0x1E0C80A78](v46);
  sub_1C077AF60();
  MEMORY[0x1E0C80A78](v47);
  v49 = (char *)&v93 - v48;
  v106 = sub_1C106E590();
  v104 = *(_QWORD *)(v106 - 8);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v50);
  sub_1C077AF60();
  MEMORY[0x1E0C80A78](v51);
  sub_1C0778674();
  v103 = v52;
  v111 = a21;
  v114 = a21;
  v115 = a22;
  sub_1C07767CC();
  sub_1C077C964();
  v53 = sub_1C079B9C0(v23, sel___swift_objectForKeyedSubscript_);
  sub_1C07AA490();
  if (v23)
  {
    sub_1C0782E40();
    v54 = sub_1C07768A0();
  }
  else
  {
    sub_1C0776B50();
  }
  sub_1C077EA44(v54, v55, &qword_1ED760400);
  if (v118[1])
  {
    v56 = sub_1C0D260D4();
    if ((sub_1C077C458() & 1) != 0)
    {
      v101 = v41;
      v99 = a23;
      v100 = v113;
      sub_1C07767AC();
      v57 = v112 + *(int *)(sub_1C077674C() + 24);
      sub_1C0D25A2C();
      if (!v58)
        swift_once();
      v59 = sub_1C077585C();
      v60 = sub_1C079E000(v59, (uint64_t)qword_1ED78D818);
      sub_1C077EDAC(*(uint64_t (**)(void))(v24 + 16));
      v61 = v109;
      sub_1C07767CC();
      sub_1C0D26020((uint64_t)&v116);
      v62 = sub_1C077B0C0();
      v98 = v62;
      v63 = os_log_type_enabled(v60, v62);
      v97 = v56;
      if (v63)
      {
        v64 = sub_1C0775854();
        v95 = sub_1C0775854();
        v116 = v95;
        *(_DWORD *)v64 = 136381187;
        v94 = v60;
        sub_1C077AEBC();
        v114 = sub_1C0788DAC(v110, v61, &v116);
        v96 = v57;
        sub_1C10705AC();
        sub_1C077CF6C();
        *(_WORD *)(v64 + 12) = 2080;
        sub_1C0794BAC(&qword_1ED759F68, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3BB08], MEMORY[0x1E0D3BB40]);
        v65 = sub_1C1070C0C();
        v114 = sub_1C0782D28(v65, v66);
        sub_1C10705AC();
        sub_1C077960C();
        (*(void (**)(char *, NSObject *))(v24 + 8))(v49, v45);
        *(_WORD *)(v64 + 22) = 1024;
        sub_1C0D25A18();
        _os_log_impl(&dword_1C0771000, v94, (os_log_type_t)v98, "Source: generating identifier for: %{private}s : %s : %{BOOL}d", (uint8_t *)v64, 0x1Cu);
        sub_1C07788F8();
        sub_1C0776778();
      }
      sub_1C07758A4();
      sub_1C0D260C0(*(uint64_t (**)(uint64_t, uint64_t))(v24 + 8));

      v116 = v110;
      v117 = v61;
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      sub_1C0D25DC0();
      v78 = v116;
      v77 = v117;
      sub_1C106FB44();
      sub_1C106FB20();
      v80 = v79;
      (*(void (**)(char *, uint64_t))(v108 + 8))(v44, v101);
      if (v80 >> 60 != 15)
      {
        sub_1C0778580();
        sub_1C0794BAC((unint64_t *)&qword_1ED762B30, (uint64_t (*)(uint64_t))MEMORY[0x1E0CA9940], MEMORY[0x1E0CA9930]);
        v85 = v84;
        sub_1C106F85C();
        v86 = (char *)&loc_1C0D18F5C + dword_1C0D1938C[v80 >> 62];
        v93 = v45;
        v108 = v85;
        __asm { BR              X10 }
      }
      sub_1C077584C();
      sub_1C078C354();
      v81 = sub_1C0D265E4();
      if (os_log_type_enabled(v45, v81))
      {
        v82 = (_DWORD *)sub_1C0775854();
        v116 = sub_1C0775854();
        *v82 = 136380675;
        sub_1C077584C();
        v83 = sub_1C0788DAC(v78, v77, &v116);
        sub_1C0789FD8(v83);
        sub_1C077CF6C();
        sub_1C07759F4(&dword_1C0771000, v45, v81, "Source: failed to encode identifier as UTF8 data: %{private}s");
        sub_1C0778610();
        sub_1C0776778();
      }

      sub_1C07758A4();
      sub_1C07767CC();
      sub_1C07767CC();
      sub_1C106F538();
      v87 = sub_1C077C13C();
      if (sub_1C07892C0(v87))
      {
        sub_1C0775854();
        v88 = sub_1C0775854();
        sub_1C0D26118(v88);
        sub_1C079E858(4.8149e-34);
        v90 = sub_1C077B650(v111, v89, &v116);
        sub_1C0791588(v90);
        sub_1C07758A4();
        sub_1C077CF6C();
        sub_1C0788288(&dword_1C0771000, v91, v92, "Mapping error, failed to generate EntityIdentifier for %s");
        sub_1C078CBD0();
        sub_1C0776778();
      }

      sub_1C07758A4();
      sub_1C07758A4();
      sub_1C078E0D0((uint64_t)v118);
      goto LABEL_17;
    }
    sub_1C07767AC();
  }
  else
  {
    v67 = sub_1C07767AC();
    sub_1C0892C70(v67, &qword_1ED760400);
  }
  sub_1C0D25A2C();
  if (!v58)
    swift_once();
  v68 = sub_1C077585C();
  v69 = (void *)sub_1C079E000(v68, (uint64_t)qword_1ED78D818);
  sub_1C07767CC();
  sub_1C07767CC();
  sub_1C106F538();
  v70 = sub_1C077C13C();
  if (sub_1C07892C0(v70))
  {
    sub_1C0775854();
    v71 = sub_1C0775854();
    sub_1C0D26118(v71);
    sub_1C079E858(4.8149e-34);
    v73 = sub_1C077B650(v111, v72, &v116);
    sub_1C0791588(v73);
    sub_1C07758A4();
    sub_1C077CF6C();
    sub_1C0788288(&dword_1C0771000, v74, v75, "Mapping error, missing submap for %s");
    sub_1C078CBD0();
    sub_1C0776778();
  }

  sub_1C07758A4();
  sub_1C07758A4();
  sub_1C081F128();
  sub_1C0775810();
  sub_1C0782BFC(v76, 2);
  sub_1C0D260DC();
  sub_1C0779DC0();
  sub_1C07767B4();
  sub_1C078E1C4();
  sub_1C07767AC();
  sub_1C07BA268();
  sub_1C07767AC();
  sub_1C07888BC();
LABEL_17:
  sub_1C07A8028();
  sub_1C0776760();
}

uint64_t sub_1C0D1939C(uint64_t *a1, uint64_t a2, unint64_t a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8, __int128 a9, uint64_t a10)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  unint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  NSObject *v33;
  os_log_type_t v34;
  BOOL v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  os_log_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  NSObject *v44;
  os_log_type_t v45;
  uint8_t *v46;
  uint64_t v47;
  void *v48;
  _BYTE *v49;
  uint64_t v50;
  unint64_t v52;
  uint64_t v53;
  unint64_t v54;
  unint64_t v55;
  NSObject *v56;
  os_log_type_t v57;
  uint8_t *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  NSObject *v63;
  os_log_type_t v64;
  uint8_t *v65;
  uint64_t v66;
  uint64_t v67;
  os_log_t v68;
  uint64_t v69;
  char *v70;
  void (*v71)(char *, char *, uint64_t);
  unint64_t v72;
  int v73;
  uint64_t v74;
  uint64_t v75;
  id v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  int v80;
  uint64_t v81;
  char *v82;
  char *v83;
  char *v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  unint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t *v98;
  void *v99;
  _OWORD v100[2];
  uint64_t v101;
  unint64_t v102;
  uint64_t v103;

  v80 = a8;
  v79 = a7;
  v78 = a6;
  v81 = a5;
  v95 = a3;
  v96 = a2;
  v98 = a1;
  v93 = sub_1C106F874();
  v85 = *(_QWORD *)(v93 - 8);
  MEMORY[0x1E0C80A78](v93);
  v91 = (char *)&v67 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v88 = sub_1C106F868();
  v87 = *(_QWORD *)(v88 - 8);
  MEMORY[0x1E0C80A78](v88);
  v84 = (char *)&v67 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v86 = (char *)&v67 - v14;
  v15 = sub_1C106FB50();
  v94 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v67 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_1C106D1F8();
  v19 = *(_QWORD *)(v18 - 8);
  MEMORY[0x1E0C80A78](v18);
  v83 = (char *)&v67 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v21);
  v23 = (char *)&v67 - v22;
  v92 = sub_1C106E590();
  v90 = *(_QWORD *)(v92 - 8);
  MEMORY[0x1E0C80A78](v92);
  v82 = (char *)&v67 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v25);
  v89 = (char *)&v67 - v26;
  v97 = a9;
  v100[0] = a9;
  swift_bridgeObjectRetain_n();
  v27 = objc_msgSend(a4, sel___swift_objectForKeyedSubscript_, sub_1C1070D20());
  swift_unknownObjectRelease();
  if (v27)
  {
    sub_1C107063C();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v100, 0, sizeof(v100));
  }
  sub_1C078A67C((uint64_t)v100, (uint64_t)&v101, &qword_1ED760400);
  if (v103)
  {
    v28 = sub_1C0D256F0();
    if ((swift_dynamicCast() & 1) != 0)
    {
      v77 = v15;
      v75 = a10;
      v76 = v99;
      swift_bridgeObjectRelease();
      v29 = (char *)v98 + *(int *)(type metadata accessor for Source() + 24);
      if (qword_1ED761458 != -1)
        swift_once();
      v30 = sub_1C106F544();
      v31 = sub_1C079E000(v30, (uint64_t)qword_1ED78D818);
      v71 = *(void (**)(char *, char *, uint64_t))(v19 + 16);
      v71(v23, v29, v18);
      v32 = v95;
      swift_bridgeObjectRetain_n();
      v74 = v31;
      v33 = sub_1C106F538();
      v34 = sub_1C1070378();
      v73 = v34;
      v35 = os_log_type_enabled(v33, v34);
      v72 = v28;
      if (v35)
      {
        v36 = swift_slowAlloc();
        v69 = swift_slowAlloc();
        v101 = v69;
        *(_DWORD *)v36 = 136381187;
        v68 = v33;
        _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
        *(_QWORD *)&v100[0] = sub_1C0788DAC(v96, v32, &v101);
        v70 = v29;
        sub_1C10705AC();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v36 + 12) = 2080;
        sub_1C0794BAC(&qword_1ED759F68, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3BB08], MEMORY[0x1E0D3BB40]);
        v37 = sub_1C1070C0C();
        *(_QWORD *)&v100[0] = sub_1C0788DAC(v37, v38, &v101);
        sub_1C10705AC();
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v19 + 8))(v23, v18);
        *(_WORD *)(v36 + 22) = 1024;
        LODWORD(v100[0]) = 0;
        sub_1C10705AC();
        v39 = v68;
        _os_log_impl(&dword_1C0771000, v68, (os_log_type_t)v73, "Source: generating identifier for: %{private}s : %s : %{BOOL}d", (uint8_t *)v36, 0x1Cu);
        v40 = v69;
        swift_arrayDestroy();
        MEMORY[0x1C3BA8270](v40, -1, -1);
        MEMORY[0x1C3BA8270](v36, -1, -1);

        v41 = v96;
        v42 = v32;
      }
      else
      {
        swift_bridgeObjectRelease_n();
        (*(void (**)(char *, uint64_t))(v19 + 8))(v23, v18);

        v42 = v32;
        v41 = v96;
      }
      v101 = v41;
      v102 = v42;
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      sub_1C106FC94();
      v53 = v101;
      v52 = v102;
      sub_1C106FB44();
      sub_1C106FB20();
      v55 = v54;
      (*(void (**)(char *, uint64_t))(v94 + 8))(v17, v77);
      if (v55 >> 60 != 15)
      {
        swift_bridgeObjectRelease();
        sub_1C0794BAC((unint64_t *)&qword_1ED762B30, (uint64_t (*)(uint64_t))MEMORY[0x1E0CA9940], MEMORY[0x1E0CA9930]);
        v61 = v60;
        sub_1C106F85C();
        v62 = (char *)&loc_1C0D19CF0 + *((int *)qword_1C0D1A2C8 + (v55 >> 62));
        v67 = v18;
        v94 = v61;
        __asm { BR              X10 }
      }
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      v56 = sub_1C106F538();
      v57 = sub_1C1070390();
      if (os_log_type_enabled(v56, v57))
      {
        v58 = (uint8_t *)swift_slowAlloc();
        v59 = swift_slowAlloc();
        v101 = v59;
        *(_DWORD *)v58 = 136380675;
        _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
        *(_QWORD *)&v100[0] = sub_1C0788DAC(v53, v52, &v101);
        sub_1C10705AC();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_1C0771000, v56, v57, "Source: failed to encode identifier as UTF8 data: %{private}s", v58, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1C3BA8270](v59, -1, -1);
        MEMORY[0x1C3BA8270](v58, -1, -1);

      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      v63 = sub_1C106F538();
      v64 = sub_1C1070390();
      if (os_log_type_enabled(v63, v64))
      {
        v65 = (uint8_t *)swift_slowAlloc();
        v66 = swift_slowAlloc();
        v101 = v66;
        *(_DWORD *)v65 = 136315138;
        _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
        *(_QWORD *)&v100[0] = sub_1C0788DAC(v97, *((unint64_t *)&a9 + 1), &v101);
        sub_1C10705AC();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_1C0771000, v63, v64, "Mapping error, failed to generate EntityIdentifier for %s", v65, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1C3BA8270](v66, -1, -1);
        MEMORY[0x1C3BA8270](v65, -1, -1);

      }
      else
      {

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }

      return MEMORY[0x1E0DEE9D8];
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_1C0784B6C((uint64_t)&v101, &qword_1ED760400);
  }
  if (qword_1ED761458 != -1)
    swift_once();
  v43 = sub_1C106F544();
  sub_1C079E000(v43, (uint64_t)qword_1ED78D818);
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  v44 = sub_1C106F538();
  v45 = sub_1C1070390();
  if (os_log_type_enabled(v44, v45))
  {
    v46 = (uint8_t *)swift_slowAlloc();
    v47 = swift_slowAlloc();
    v101 = v47;
    *(_DWORD *)v46 = 136315138;
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    *(_QWORD *)&v100[0] = sub_1C0788DAC(v97, *((unint64_t *)&a9 + 1), &v101);
    sub_1C10705AC();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1C0771000, v44, v45, "Mapping error, missing submap for %s", v46, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C3BA8270](v47, -1, -1);
    MEMORY[0x1C3BA8270](v46, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  sub_1C081F128();
  v48 = (void *)swift_allocError();
  *v49 = 2;
  swift_willThrow();
  v50 = v98[1];
  v101 = *v98;
  v102 = v50;
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C106FC94();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C106FC94();
  swift_bridgeObjectRelease();
  sub_1C0D57838();
  swift_bridgeObjectRelease();

  return MEMORY[0x1E0DEE9D8];
}

uint64_t SocialMediaProfile.mapLocation.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1C077AE90();
  return v1;
}

uint64_t SocialMediaProfile.mapLocation.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*SocialMediaProfile.mapLocation.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t sub_1C0D1A344()
{
  if (qword_1EF62E2F0 != -1)
    swift_once();
  qword_1EF647EB8 = qword_1EF648288;
  *(_OWORD *)&qword_1EF647EC0 = *(_OWORD *)algn_1EF648290;
  qword_1EF647ED0 = qword_1EF6482A0;
  return _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
}

uint64_t static SocialMediaProfile.type.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;

  if (qword_1EF62E2B8 != -1)
    swift_once();
  sub_1C077F040();
  v2 = qword_1EF647ED0;
  *(_QWORD *)a1 = qword_1EF647EB8;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)&qword_1EF647EC0;
  *(_QWORD *)(a1 + 24) = v2;
  return _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
}

uint64_t static SocialMediaProfile.type.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  __int128 v4;

  v1 = *(_QWORD *)a1;
  v4 = *(_OWORD *)(a1 + 8);
  v2 = *(_QWORD *)(a1 + 24);
  if (qword_1EF62E2B8 != -1)
    swift_once();
  sub_1C077F040();
  qword_1EF647EB8 = v1;
  *(_OWORD *)&qword_1EF647EC0 = v4;
  qword_1EF647ED0 = v2;
  return swift_bridgeObjectRelease();
}

uint64_t (*static SocialMediaProfile.type.modify())()
{
  if (qword_1EF62E2B8 != -1)
    swift_once();
  sub_1C077F040();
  return j__swift_endAccess;
}

IntelligencePlatformCore::SocialMediaProfile __swiftcall SocialMediaProfile.init(mapLocation:username:displayName:service:userIdentifier:urlString:)(Swift::String mapLocation, Swift::String username, Swift::String_optional displayName, Swift::String service, Swift::String userIdentifier, Swift::String_optional urlString)
{
  Swift::String *v6;
  void *object;
  uint64_t countAndFlagsBits;
  void *v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  Swift::String *v13;
  uint64_t v14;
  void *v15;
  void *v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  IntelligencePlatformCore::SocialMediaProfile result;

  object = service._object;
  countAndFlagsBits = service._countAndFlagsBits;
  v9 = displayName.value._object;
  v10 = displayName.value._countAndFlagsBits;
  v11 = username._object;
  v12 = username._countAndFlagsBits;
  v13 = v6;
  sub_1C07ACF80(&qword_1EF62FE20);
  v14 = swift_allocObject();
  v17 = v14;
  *(_OWORD *)(v14 + 16) = xmmword_1C1078A20;
  *(_QWORD *)(v14 + 32) = 0x656D616E72657375;
  *(_QWORD *)(v14 + 40) = 0xE800000000000000;
  *(_QWORD *)(v14 + 48) = v12;
  *(_QWORD *)(v14 + 56) = v11;
  *(_QWORD *)(v14 + 72) = 0;
  *(_QWORD *)(v14 + 80) = 0;
  *(_QWORD *)(v14 + 64) = 0;
  *(_BYTE *)(v14 + 88) = 1;
  *(_QWORD *)(v14 + 96) = 0x65636976726573;
  *(_QWORD *)(v14 + 104) = 0xE700000000000000;
  *(_QWORD *)(v14 + 112) = countAndFlagsBits;
  *(_QWORD *)(v14 + 120) = object;
  *(_QWORD *)(v14 + 136) = 0;
  *(_QWORD *)(v14 + 144) = 0;
  *(_QWORD *)(v14 + 128) = 0;
  *(_BYTE *)(v14 + 152) = 1;
  strcpy((char *)(v14 + 160), "userIdentifier");
  *(_BYTE *)(v14 + 175) = -18;
  *(Swift::String *)(v14 + 176) = userIdentifier;
  *(_QWORD *)(v14 + 192) = 0;
  *(_QWORD *)(v14 + 200) = 0;
  *(_QWORD *)(v14 + 208) = 0;
  *(_BYTE *)(v14 + 216) = 1;
  if (v9)
  {
    v18 = 4;
    sub_1C07EB0C4();
    v17 = v14;
    *(_QWORD *)(v14 + 16) = 4;
    *(_QWORD *)(v14 + 224) = 0x4E79616C70736964;
    *(_QWORD *)(v14 + 232) = 0xEB00000000656D61;
    *(_QWORD *)(v14 + 240) = v10;
    *(_QWORD *)(v14 + 248) = v9;
    *(_QWORD *)(v14 + 264) = 0;
    *(_QWORD *)(v14 + 272) = 0;
    *(_QWORD *)(v14 + 256) = 0;
    *(_BYTE *)(v14 + 280) = 1;
    if (!urlString.value._object)
      goto LABEL_8;
  }
  else
  {
    v18 = 3;
    if (!urlString.value._object)
      goto LABEL_8;
  }
  if (v18 >= *(_QWORD *)(v17 + 24) >> 1)
  {
    sub_1C07EB0C4();
    v17 = v14;
  }
  *(_QWORD *)(v17 + 16) = v18 + 1;
  v19 = v17 + (v18 << 6);
  *(_QWORD *)(v19 + 32) = 0x6E697274536C7275;
  *(_QWORD *)(v19 + 40) = 0xE900000000000067;
  *(Swift::String_optional *)(v19 + 48) = urlString;
  *(_QWORD *)(v19 + 72) = 0;
  *(_QWORD *)(v19 + 80) = 0;
  *(_QWORD *)(v19 + 64) = 0;
  *(_BYTE *)(v19 + 88) = 1;
LABEL_8:
  *v13 = mapLocation;
  v13[1]._countAndFlagsBits = v17;
  result.basicProperties._rawValue = v16;
  result.mapLocation._object = v15;
  result.mapLocation._countAndFlagsBits = v14;
  return result;
}

uint64_t SocialMediaProfile.constructRows(entityIdentifier:source:sourceId:map:relationshipId:pipelineType:)(uint64_t a1, uint64_t *a2, uint64_t a3, unint64_t a4, void *a5, uint64_t a6, unsigned __int8 *a7)
{
  uint64_t *v7;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  __int128 v18;

  v13 = *v7;
  v12 = v7[1];
  v14 = v7[2];
  v15 = *a7;
  sub_1C0778624();
  sub_1C077AE90();
  *((_QWORD *)&v18 + 1) = v12;
  *(_QWORD *)&v18 = v13;
  v16 = sub_1C0D1939C(a2, a3, a4, a5, v14, 0, 0, v15, v18, v14);
  sub_1C077960C();
  swift_bridgeObjectRelease();
  return v16;
}

uint64_t sub_1C0D1A7B0()
{
  sub_1C0D25474();
  return sub_1C1070EE8();
}

uint64_t sub_1C0D1A7D8()
{
  sub_1C0D25474();
  return sub_1C1070EF4();
}

void SocialMediaProfile.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_1C077AE5C();
  v3 = v2;
  v4 = sub_1C07ACF80(&qword_1EF647ED8);
  v6 = *(_QWORD *)(v4 - 8);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v5);
  sub_1C0778544();
  sub_1C07A9480(v3, v3[3]);
  sub_1C0D25474();
  sub_1C1070EB8();
  sub_1C1070B7C();
  if (!v0)
  {
    sub_1C07ACF80(&qword_1EF62FE38);
    sub_1C07EB158(&qword_1EF62FE40, (uint64_t (*)(void))sub_1C07EB11C, MEMORY[0x1E0DEAF10]);
    sub_1C1070BB8();
  }
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v1, v4);
  sub_1C07757D0();
}

void SocialMediaProfile.init(from:)()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v13[2];

  sub_1C077AE5C();
  v2 = v1;
  v4 = v3;
  v5 = sub_1C07ACF80(&qword_1EF647EE8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C07A9480(v2, v2[3]);
  sub_1C0D25474();
  sub_1C1070E94();
  if (v0)
  {
    sub_1C0775880();
  }
  else
  {
    v9 = sub_1C1070AA4();
    v11 = v10;
    sub_1C07ACF80(&qword_1EF62FE38);
    sub_1C07EB158(&qword_1EF62FE58, (uint64_t (*)(void))sub_1C07EB1C0, MEMORY[0x1E0DEAF40]);
    sub_1C07767C4();
    sub_1C1070AE0();
    sub_1C077C144((uint64_t)v8, *(uint64_t (**)(uint64_t, uint64_t))(v6 + 8));
    v12 = v13[1];
    *v4 = v9;
    v4[1] = v11;
    v4[2] = v12;
    sub_1C077AE90();
    sub_1C0775880();
    sub_1C077960C();
    sub_1C0775894();
  }
  sub_1C07757D0();
}

uint64_t sub_1C0D1AADC(uint64_t a1, uint64_t *a2, uint64_t a3, unint64_t a4, void *a5, uint64_t a6, unsigned __int8 *a7)
{
  return SocialMediaProfile.constructRows(entityIdentifier:source:sourceId:map:relationshipId:pipelineType:)(a1, a2, a3, a4, a5, a6, a7);
}

void sub_1C0D1AB00()
{
  SocialMediaProfile.init(from:)();
}

void sub_1C0D1AB14()
{
  SocialMediaProfile.encode(to:)();
}

void sub_1C0D1AB28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t *a10)
{
  uint64_t *v10;
  uint64_t *v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char v96;
  _QWORD *v97;
  uint64_t *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t *v101;
  __int128 v102;
  uint64_t v103;
  uint64_t v104;
  char v105;
  BOOL v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t **v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  unint64_t v131;
  unint64_t v132;
  BOOL v133;
  uint64_t v134;
  char *v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  char v143;
  uint64_t v144;
  NSObject *v145;
  uint64_t v146;
  os_log_type_t v147;
  uint64_t v148;
  uint64_t v149;
  unint64_t v150;
  uint64_t v151;
  uint64_t v152;
  unint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  os_log_type_t v166;
  _WORD *v167;
  uint64_t v168;
  uint64_t v169;
  _BYTE *v170;
  _BYTE *v171;
  uint64_t v172;
  uint64_t v173[3];
  unsigned __int8 v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  char *v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t *v182;
  __int128 v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  int v188;
  uint64_t *v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  _QWORD v193[2];
  uint64_t v194;
  uint64_t v195;
  _QWORD v196[7];
  _QWORD v197[4];
  char v198;
  uint64_t v199;

  sub_1C077AE5C();
  sub_1C07AA49C(v16, v17, v18, v19, v20, v21, v22);
  sub_1C07ACF80(&qword_1ED759F70);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v23);
  v191 = sub_1C0D25AC4(v24, v173[0]);
  v25 = (uint64_t *)MEMORY[0x1E0D3CC50];
  sub_1C0787718(*(_QWORD *)(v191 - 8));
  MEMORY[0x1E0C80A78](v26);
  sub_1C077AF60();
  MEMORY[0x1E0C80A78](v27);
  sub_1C077AF60();
  MEMORY[0x1E0C80A78](v28);
  v30 = (char *)v173 - v29;
  v176 = sub_1C07ACF80(&qword_1EF630060);
  sub_1C0787718(*(_QWORD *)(v176 - 8));
  MEMORY[0x1E0C80A78](v31);
  v175 = sub_1C0D25AE8(v32, v173[0]);
  sub_1C0787718(*(_QWORD *)(v175 - 8));
  MEMORY[0x1E0C80A78](v33);
  sub_1C077AF60();
  MEMORY[0x1E0C80A78](v34);
  v177 = sub_1C0D25D00(v35, v36, v37, v38, v39, v40, v41, v42, v173[0]);
  sub_1C0787718(*(_QWORD *)(v177 - 8));
  MEMORY[0x1E0C80A78](v43);
  v180 = sub_1C0782A50(v44, v173[0]);
  sub_1C0787718(*(_QWORD *)(v180 - 8));
  MEMORY[0x1E0C80A78](v45);
  sub_1C077AF60();
  MEMORY[0x1E0C80A78](v46);
  sub_1C077AF60();
  MEMORY[0x1E0C80A78](v47);
  sub_1C077AF60();
  MEMORY[0x1E0C80A78](v48);
  v57 = sub_1C0D25D38(v49, v50, v51, v52, v53, v54, v55, v56, v173[0]);
  v58 = sub_1C0D2614C(v57);
  MEMORY[0x1E0C80A78](v58);
  sub_1C077AF60();
  MEMORY[0x1E0C80A78](v59);
  sub_1C0784DAC((uint64_t)v173 - v60);
  sub_1C07ACF80((uint64_t *)&unk_1ED75EA40);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v61);
  sub_1C077AFC8();
  MEMORY[0x1E0C80A78](v62);
  v192 = sub_1C0D25D1C(v63, v64, v65, v66, v67, v68, v69, v70, v173[0]);
  sub_1C0787718(*(_QWORD *)(v192 - 8));
  MEMORY[0x1E0C80A78](v71);
  sub_1C077AF60();
  MEMORY[0x1E0C80A78](v72);
  sub_1C077AF60();
  MEMORY[0x1E0C80A78](v73);
  sub_1C0784DAC((uint64_t)v173 - v74);
  sub_1C07ACF80(&qword_1ED755A10);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v75);
  sub_1C077AF60();
  MEMORY[0x1E0C80A78](v76);
  sub_1C077AF60();
  MEMORY[0x1E0C80A78](v77);
  sub_1C0784DAC((uint64_t)v173 - v78);
  sub_1C07ACF80(&qword_1ED7618D0);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v79);
  sub_1C077AF60();
  MEMORY[0x1E0C80A78](v80);
  sub_1C077AF60();
  MEMORY[0x1E0C80A78](v81);
  sub_1C077AF60();
  MEMORY[0x1E0C80A78](v82);
  sub_1C0784DAC((uint64_t)v173 - v83);
  sub_1C07ACF80(&qword_1EF62FE38);
  sub_1C0794BAC(&qword_1ED75EA28, (uint64_t (*)(uint64_t))v25, MEMORY[0x1E0D3CC68]);
  v84 = sub_1C0D26724();
  v85 = sub_1C0D25DD0(v84);
  if (v86)
  {
    v179 = v13 + 32;
    v173[0] = v13;
    sub_1C077C0B8();
    v25 = 0;
    v178 = v30;
    do
    {
      sub_1C07980D8();
      sub_1C0820388((uint64_t)&v199);
      sub_1C0D25918();
      v12 = v10;
      if (v10)
      {
        sub_1C0D25E9C();
        sub_1C0D25E9C();
        sub_1C078F230();
        goto LABEL_115;
      }
      sub_1C07B0510();
      if (v25[2])
      {
        sub_1C078B378();
        sub_1C07BFDF0();
        do
        {
          v88 = sub_1C0D25EC4(v87);
          sub_1C078A8F8(v88, v89, &qword_1EF630060);
          sub_1C07831B8();
          sub_1C0D26028();
          sub_1C07827B8();
          sub_1C0D260A0();
          sub_1C0D25CE4();
          sub_1C0D259B8();
          v25 = (uint64_t *)v14;
          v14 = v13;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            sub_1C0D25E30();
          sub_1C0D2666C();
          v13 = v190;
          v11 = &qword_1ED759F70;
          if (v133)
          {
            sub_1C0D266D4();
            v93 = v90;
          }
          v12 = &qword_1ED7618D0;
          v94 = sub_1C0D259E8(v90, v91, v92, v93);
          v15 = type metadata accessor for MapPredicate;
          sub_1C07E05F4(v94, v95, type metadata accessor for MapPredicate);
          sub_1C0D26680();
          sub_1C0D26340();
          sub_1C0D265F8();
          v87 = sub_1C07AF890();
        }
        while (!v143);
        sub_1C078F230();
        sub_1C07BBE44();
      }
      else
      {
        sub_1C077960C();
        v11 = (uint64_t *)MEMORY[0x1E0DEE9D8];
      }
      sub_1C078F230();
      if (v11[2])
      {
        sub_1C077B9AC();
        v25 = a10;
        if (!a10[2] || (sub_1C07DCC70(), (v96 & 1) == 0))
        {
          sub_1C07B9BA0((uint64_t)&v184);
          sub_1C077FAEC();
          v196[0] = a10;
          v25 = v196;
          sub_1C08A07C4();
          sub_1C0D262C8();
          sub_1C0D25E70();
        }
        sub_1C07B9BA0((uint64_t)&v195);
        sub_1C0D262B8();
        if (*v97)
        {
          sub_1C0D2622C();
          sub_1C0D261B4();
          sub_1C07AAA34();
        }
        else
        {
          sub_1C077B5B4();
          sub_1C078F230();
          sub_1C078F230();
          sub_1C07767AC();
        }
        sub_1C0D26604();
        sub_1C078B868();
        sub_1C0791C28();
      }
      else
      {
        sub_1C077B5B4();
        sub_1C078F230();
        sub_1C078F230();
        sub_1C07767AC();
        sub_1C0D26580();
      }
      sub_1C0D26560();
      v14 = v186;
    }
    while (!v143);
    v98 = v12;
    sub_1C078F230();
    v85 = (uint64_t)a10;
  }
  else
  {
    v98 = v12;
  }
  v99 = sub_1C07B8C10(v85);
  v100 = MEMORY[0x1E0DEE9D8];
  v101 = &qword_1ED755A10;
  *(_QWORD *)&v102 = 136380931;
  v183 = v102;
  sub_1C07BAABC(v99, MEMORY[0x1E0DEE9B8]);
  if (!v10)
    goto LABEL_29;
LABEL_28:
  sub_1C0D25B8C();
  while (1)
  {
    sub_1C077F8B8();
    if (v109)
      break;
LABEL_101:
    sub_1C0D261A4();
    sub_1C0789E74(v181);
    sub_1C0D26004();
    if (v10)
      goto LABEL_28;
LABEL_29:
    if (__OFADD__(v103, 1))
    {
LABEL_123:
      __break(1u);
LABEL_124:
      swift_once();
      goto LABEL_109;
    }
    sub_1C0D25E48();
    if (v105 == v106)
    {
LABEL_117:
      swift_release();
      sub_1C077978C();
      goto LABEL_116;
    }
    v107 = *(_QWORD *)(v187 + 8 * v104);
    if (!v107)
    {
      sub_1C07AD388();
      if (v105 == v106)
        goto LABEL_117;
      sub_1C078521C();
      if (!v107)
      {
        sub_1C07AD388();
        if (v105 == v106)
          goto LABEL_117;
        sub_1C078521C();
        if (!v107)
        {
          sub_1C07AD388();
          if (v105 == v106)
            goto LABEL_117;
          sub_1C078521C();
          if (!v107)
          {
            sub_1C07AD388();
            if (v105 == v106)
              goto LABEL_117;
            sub_1C078521C();
            if (!v107)
            {
              sub_1C07AD388();
              if (v105 == v106)
                goto LABEL_117;
              sub_1C078521C();
              if (!v107)
              {
                while (!__OFADD__(v108, 1))
                {
                  sub_1C0D25E48();
                  if (v105 == v106)
                    goto LABEL_117;
                  sub_1C0D26658();
                  if (v107)
                    goto LABEL_48;
                }
                __break(1u);
LABEL_126:
                sub_1C07B645C();
                sub_1C0786314();
                __break(1u);
                return;
              }
            }
          }
        }
      }
    }
LABEL_48:
    sub_1C0D25B44(v107);
  }
  sub_1C0D25E18();
  v110 = 80;
  v189 = v25;
  do
  {
    v111 = *(_QWORD *)(v195 + v110);
    if (v111 && *(_QWORD *)(v111 + 16))
    {
      sub_1C0776B1C(v111);
      sub_1C077E488();
      if (!v143)
      {
        v182 = v98;
        sub_1C078F230();
        v112 = v181;
        sub_1C0789E74(v181);
        sub_1C0D25884();
        v101 = (uint64_t *)v11[2];
        sub_1C077FE88();
        sub_1C07B2D8C(v112, 0, 1, (uint64_t)v12);
        sub_1C077FE88();
        sub_1C0D260E8();
        v113 = v100;
        v100 = v194;
        sub_1C077C144(v113, (uint64_t (*)(uint64_t, uint64_t))v11[1]);
        v114 = sub_1C0D2670C((uint64_t)v197);
        v25 = &qword_1ED755A10;
        sub_1C0781B00(v114);
        sub_1C077EF3C();
        goto LABEL_58;
      }
    }
    else
    {
      sub_1C0799104();
    }
    sub_1C0789E74((uint64_t)v11);
    v110 += 64;
    v25 = (uint64_t *)((char *)v25 - 1);
  }
  while (v25);
  v182 = v98;
  sub_1C077B5B4();
  v101 = &qword_1ED755A10;
LABEL_58:
  sub_1C0D25F54();
  while (1)
  {
    if (__OFADD__(v115, 1))
    {
      __break(1u);
LABEL_119:
      __break(1u);
LABEL_120:
      __break(1u);
LABEL_121:
      __break(1u);
LABEL_122:
      __break(1u);
      goto LABEL_123;
    }
    v11 = *v116;
    if (!*v116)
      break;
    if (v11[2])
    {
      v117 = sub_1C079F810();
      sub_1C07E05C8(v117, v118, type metadata accessor for MapPredicate);
      sub_1C0D25850();
      v119 = sub_1C0D26370();
      sub_1C078A8F8(v119, v120, (uint64_t *)&unk_1ED75EA40);
      sub_1C077AEEC((uint64_t)&qword_1ED7618D0, 1, v14);
      if (v143)
      {
        sub_1C0778624();
        sub_1C077AEBC();
        sub_1C077E6D0();
        sub_1C077E6D0();
        sub_1C0781B00((uint64_t)&qword_1ED7618D0);
        sub_1C081F128();
        sub_1C0775810();
        sub_1C0782BFC(v171, 4);
        sub_1C0781B00(v185);
        sub_1C0D264E8(v172, type metadata accessor for MapPredicate);
        sub_1C078F230();
        sub_1C077B5B4();
        sub_1C0778580();
        sub_1C07785A0();
        sub_1C07767AC();
        sub_1C0D25BB4(&qword_1ED755A10, (uint64_t)v197);
        sub_1C0D25BB4(&qword_1ED7618D0, (uint64_t)v193);
        sub_1C078F230();
        goto LABEL_114;
      }
      sub_1C0D25B0C();
      v196[4] = v193[0];
      v196[5] = v101;
      v196[6] = v100;
      v197[0] = v98;
      v100 = (uint64_t)v25;
      v197[1] = v25;
      v197[2] = v12;
      v197[3] = v11;
      v198 = 0;
      sub_1C07767CC();
      sub_1C07767CC();
      sub_1C07767CC();
      v121 = sub_1C07767CC();
      v25 = (uint64_t *)sub_1C0794904(v121, v122, v123, v124, v125, v126, v127, v128, v173[0], v173[1], v173[2], v174);
      sub_1C077B5B4();
      sub_1C0775834();
      sub_1C07785A0();
      sub_1C07767AC();
      sub_1C0D2643C();
      sub_1C0784B6C(v185, (uint64_t *)&unk_1ED75EA40);
      sub_1C077B5B4();
      sub_1C0775834();
      sub_1C07785A0();
      sub_1C07767AC();
      sub_1C0D26424();
      if (v106)
        goto LABEL_119;
      v98 = (uint64_t *)v15;
      sub_1C077AE90();
      if (!sub_1C079AAA4() || (uint64_t)v11 > *(_QWORD *)(v100 + 24) >> 1)
      {
        sub_1C077B9EC();
        v100 = v129;
      }
      sub_1C0D25F74();
      if (v25[2])
      {
        sub_1C0798138();
        if (v105 != v106)
          goto LABEL_121;
        v131 = sub_1C07AC8F8(v130);
        v133 = v133 || v131 >= v132;
        if (!v133)
          goto LABEL_126;
        sub_1C0D26484();
        if (v101)
        {
          v134 = *(_QWORD *)(v100 + 16);
          v106 = __OFADD__(v134, v101);
          v135 = (char *)v101 + v134;
          if (v106)
            goto LABEL_122;
          *(_QWORD *)(v100 + 16) = v135;
        }
      }
      else if (v101)
      {
        goto LABEL_120;
      }
      sub_1C077960C();
      sub_1C0D25C38(v181);
      sub_1C077E488();
      if (v143)
      {
        v140 = sub_1C07A96C4();
        sub_1C07B1F90(v140, type metadata accessor for MapPredicate);
        sub_1C077960C();
        sub_1C0789E74((uint64_t)v11);
        v14 = v186;
        sub_1C0D26530();
        v101 = &qword_1ED755A10;
      }
      else
      {
        sub_1C07AF658();
        v141 = sub_1C0D2618C();
        v101 = &qword_1ED755A10;
        sub_1C078A8F8(v141, v142, &qword_1ED755A10);
        v14 = v177;
        sub_1C077AEEC(v100, 1, v177);
        if (v143)
        {
          sub_1C077960C();
          sub_1C077C144((uint64_t)v11, *((uint64_t (**)(uint64_t, uint64_t))v15 + 1));
          v144 = sub_1C07A96C4();
          sub_1C07B1F90(v144, type metadata accessor for MapPredicate);
          sub_1C078BA10();
          sub_1C07BCA50();
        }
        else
        {
          sub_1C0D25A44();
          v145 = v25[2];
          sub_1C077960C();
          if (v145)
          {
            if ((v188 & 1) != 0)
            {
              if (qword_1ED761458 != -1)
                swift_once();
              v146 = sub_1C077585C();
              sub_1C079E000(v146, (uint64_t)qword_1ED78D818);
              sub_1C0D258B4();
              sub_1C07B5AC4();
              sub_1C106F538();
              v147 = sub_1C0776928();
              if (sub_1C07825D0(v147))
              {
                sub_1C0775854();
                v148 = sub_1C0775854();
                sub_1C07BA700(v148);
                sub_1C0794BAC((unint64_t *)&qword_1ED7625A0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3CE28], MEMORY[0x1E0D3CE60]);
                v149 = sub_1C0D2624C();
                v151 = sub_1C077EDA0(v149, v150);
                sub_1C07AC1D4(v151);
                sub_1C077960C();
                sub_1C07B6C54();
                v152 = sub_1C0D25FE4();
                v154 = sub_1C077EDA0(v152, v153);
                sub_1C0D25C0C(v154);
                sub_1C077960C();
                sub_1C07BC174();
                sub_1C0786E40(&dword_1C0771000, v145, (os_log_type_t)v11, "StandardEntityMapper: constructRows relationship: %{private}s relPred isA %s");
                sub_1C0D25C84();
                sub_1C0776778();
              }
              sub_1C07B6C54();
              sub_1C0D26350();

              sub_1C07A9A50();
              sub_1C077C548();
              sub_1C0D25CA0();
              sub_1C0D26634();
              sub_1C0D262F8();
              v157 = sub_1C0D260FC();
              sub_1C07E05C8(v157, v158, (uint64_t (*)(_QWORD))type metadata accessor for Source);
              v159 = sub_1C079CF28();
              sub_1C07E05C8(v159, v160, type metadata accessor for EntityTriple);
              v100 = v194;
              v25 = *(uint64_t **)(v194 + 16);
              v10 = *(uint64_t **)(v194 + 24);
              sub_1C077584C();
              v14 = v186;
              if ((unint64_t)v25 >= (unint64_t)v10 >> 1)
              {
                sub_1C077B9EC();
                v100 = v164;
              }
              v161 = sub_1C07817F8();
              sub_1C07E05F4(v161, v162, type metadata accessor for EntityTriple);
              sub_1C0D26330();
              sub_1C077E7A4();
              sub_1C0D2605C();
              v163 = sub_1C07A96C4();
              sub_1C07B1F90(v163, type metadata accessor for MapPredicate);
              v188 = 0;
            }
            else
            {
              sub_1C07AF960();
              sub_1C07A8290();
              v156 = sub_1C07A96C4();
              sub_1C07B1F90(v156, type metadata accessor for MapPredicate);
              v188 = 0;
              sub_1C07BCA50();
            }
            v101 = &qword_1ED755A10;
            goto LABEL_98;
          }
          sub_1C078FA78();
          sub_1C07A8290();
          v155 = sub_1C07A96C4();
          sub_1C07B1F90(v155, type metadata accessor for MapPredicate);
          sub_1C07BCA50();
          v101 = &qword_1ED755A10;
        }
        v15 = (uint64_t (*)(uint64_t))&qword_1ED7618D0;
      }
LABEL_98:
      sub_1C0D25C54();
      goto LABEL_99;
    }
    sub_1C0D26530();
LABEL_99:
    v116 = (uint64_t **)(v138 + 64);
    v115 = v137 + 1;
    if (v139 == v136)
    {
      sub_1C078F230();
      v98 = v182;
      goto LABEL_101;
    }
  }
  sub_1C077589C();
  sub_1C078F230();
  if (qword_1ED761458 != -1)
    goto LABEL_124;
LABEL_109:
  v165 = sub_1C077585C();
  sub_1C079E000(v165, (uint64_t)qword_1ED78D818);
  sub_1C106F538();
  v166 = sub_1C077CF00();
  if (sub_1C077F60C(v166))
  {
    v167 = (_WORD *)sub_1C0775854();
    sub_1C079A830(v167);
    sub_1C078E240(&dword_1C0771000, v168, v169, "Mapping error, missing predicates");
    sub_1C0776778();
  }

  sub_1C081F128();
  sub_1C0775810();
  sub_1C0782BFC(v170, 2);
  sub_1C0D25BB4(&qword_1ED755A10, (uint64_t)v197);
  sub_1C0D25BB4(&qword_1ED7618D0, (uint64_t)v193);
LABEL_114:
  sub_1C0D265A0();
LABEL_115:
  sub_1C077978C();
LABEL_116:
  sub_1C07757D0();
}

void sub_1C0D1B9A0(uint64_t a1, unint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, unsigned __int8 a9)
{
  uint64_t *v9;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  void *v37;
  uint64_t v38;
  id v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  NSObject *v43;
  os_log_type_t v44;
  uint8_t *v45;
  uint64_t v46;
  _BYTE *v47;
  uint64_t *v48;
  void *v49;
  id v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  NSObject *v54;
  os_log_type_t v55;
  uint8_t *v56;
  uint64_t v57;
  _BYTE *v58;
  uint64_t *v59;
  void *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  uint64_t v65;
  NSObject *v66;
  os_log_type_t v67;
  uint8_t *v68;
  uint64_t v69;
  const char *v70;
  uint64_t v71;
  unint64_t v72;
  uint64_t v73;
  char *v74;
  _BYTE *v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  void (*v80)(char *, char *, uint64_t);
  unint64_t v81;
  NSObject *v82;
  os_log_type_t v83;
  int v84;
  BOOL v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  unint64_t v90;
  uint64_t v91;
  uint64_t v92;
  void (*v93)(char *, uint64_t);
  uint64_t v94;
  os_log_t v95;
  uint64_t v96;
  __int128 v97;
  unint64_t v98;
  unint64_t v99;
  NSObject *v100;
  os_log_type_t v101;
  uint8_t *v102;
  uint64_t v103;
  uint64_t *v104;
  unint64_t v105;
  uint64_t v106;
  NSObject *v107;
  os_log_type_t v108;
  uint8_t *v109;
  uint64_t v110;
  void *v111;
  uint64_t v112;
  void (*v113)(char *, uint64_t);
  _BYTE *v114;
  uint64_t v115;
  os_log_t v116;
  uint64_t v117;
  void (*v118)(char *, char *, uint64_t);
  uint64_t v119;
  void (*v120)(char *, uint64_t);
  uint64_t v121;
  void *v122;
  void *v123;
  uint64_t v124;
  id v125;
  uint64_t *v126;
  uint64_t v127;
  char *v128;
  char *v129;
  char *v130;
  uint64_t v131;
  char *v132;
  uint64_t v133;
  uint64_t v134;
  char *v135;
  uint64_t v136;
  char *v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  char *v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  unint64_t v148;
  uint64_t v149;
  uint64_t v150;
  char *v151;
  char *v152;
  void *v153;
  void *v154;
  uint64_t v155;
  __int128 v156;
  __int128 v157;
  __int128 v158;
  __int128 v159;
  uint64_t v160;
  char v161[8];
  uint64_t v162;
  char v163[8];
  uint64_t v164;
  char v165[8];
  uint64_t v166;
  char v167[8];
  uint64_t v168;
  char v169[8];
  uint64_t v170;

  v141 = a8;
  v142 = a6;
  v143 = a5;
  v127 = a4;
  v148 = a2;
  v147 = a1;
  v136 = type metadata accessor for EntityTriple(0);
  v138 = *(_QWORD *)(v136 - 8);
  MEMORY[0x1E0C80A78](v136);
  v137 = (char *)&v115 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v139 = sub_1C106F874();
  v131 = *(_QWORD *)(v139 - 8);
  MEMORY[0x1E0C80A78](v139);
  v144 = (char *)&v115 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v134 = sub_1C106F868();
  v133 = *(_QWORD *)(v134 - 8);
  MEMORY[0x1E0C80A78](v134);
  v130 = (char *)&v115 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v132 = (char *)&v115 - v16;
  v146 = sub_1C106FB50();
  v145 = *(_QWORD *)(v146 - 8);
  MEMORY[0x1E0C80A78](v146);
  v18 = (char *)&v115 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v149 = sub_1C106E590();
  v140 = *(_QWORD *)(v149 - 8);
  MEMORY[0x1E0C80A78](v149);
  v135 = (char *)&v115 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v20);
  v129 = (char *)&v115 - v21;
  MEMORY[0x1E0C80A78](v22);
  v152 = (char *)&v115 - v23;
  v24 = sub_1C07ACF80(&qword_1ED7618D0);
  MEMORY[0x1E0C80A78](v24);
  v26 = (char *)&v115 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = sub_1C106D1F8();
  v28 = *(_QWORD *)(v27 - 8);
  MEMORY[0x1E0C80A78](v27);
  v128 = (char *)&v115 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v30);
  v32 = (char *)&v115 - v31;
  MEMORY[0x1E0C80A78](v33);
  v151 = (char *)&v115 - v34;
  v160 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)&v156 = 0x657473654E444D5FLL;
  *((_QWORD *)&v156 + 1) = 0xEF797469746E4564;
  v35 = sub_1C1070D20();
  v153 = a3;
  v36 = objc_msgSend(a3, sel___swift_objectForKeyedSubscript_, v35);
  swift_unknownObjectRelease();
  v150 = a7;
  if (v36)
  {
    sub_1C107063C();
    swift_unknownObjectRelease();
  }
  else
  {
    v157 = 0u;
    v156 = 0u;
  }
  sub_1C078A67C((uint64_t)&v156, (uint64_t)&v158, &qword_1ED760400);
  if (!*((_QWORD *)&v159 + 1))
  {
    sub_1C0784B6C((uint64_t)&v158, &qword_1ED760400);
    goto LABEL_9;
  }
  sub_1C0D256F0();
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    if (qword_1ED761458 != -1)
      swift_once();
    v40 = sub_1C106F544();
    sub_1C079E000(v40, (uint64_t)qword_1ED78D818);
    v42 = *v9;
    v41 = v9[1];
    v170 = v9[2];
    sub_1C078A67C((uint64_t)(v9 + 3), (uint64_t)v169, &qword_1ED762B50);
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    sub_1C08FD4A0((uint64_t)&v170);
    sub_1C07B35DC((uint64_t)v169);
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    sub_1C08FD4A0((uint64_t)&v170);
    sub_1C07B35DC((uint64_t)v169);
    v43 = sub_1C106F538();
    v44 = sub_1C1070390();
    if (os_log_type_enabled(v43, v44))
    {
      v45 = (uint8_t *)swift_slowAlloc();
      v46 = swift_slowAlloc();
      *(_QWORD *)&v158 = v46;
      *(_DWORD *)v45 = 136315138;
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      *(_QWORD *)&v156 = sub_1C0788DAC(v42, v41, (uint64_t *)&v158);
      sub_1C10705AC();
      swift_bridgeObjectRelease_n();
      sub_1C08EE9A0((uint64_t)&v170);
      sub_1C07B2F5C((uint64_t)v169);
      swift_bridgeObjectRelease();
      sub_1C08EE9A0((uint64_t)&v170);
      sub_1C07B2F5C((uint64_t)v169);
      _os_log_impl(&dword_1C0771000, v43, v44, "Mapping error, nested entity missing metadata in map, %s", v45, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C3BA8270](v46, -1, -1);
      MEMORY[0x1C3BA8270](v45, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease();
      sub_1C08EE9A0((uint64_t)&v170);
      sub_1C07B2F5C((uint64_t)v169);
      swift_bridgeObjectRelease();
      sub_1C08EE9A0((uint64_t)&v170);
      sub_1C07B2F5C((uint64_t)v169);
    }

    sub_1C081F128();
    swift_allocError();
    *v47 = 1;
    swift_willThrow();
    return;
  }
  v124 = v27;
  v126 = v9;
  v37 = v154;
  *(_QWORD *)&v156 = 0x79747265706F7270;
  *((_QWORD *)&v156 + 1) = 0xEB0000000070614DLL;
  v38 = sub_1C1070D20();
  v125 = v37;
  v39 = objc_msgSend(v37, sel___swift_objectForKeyedSubscript_, v38);
  swift_unknownObjectRelease();
  if (v39)
  {
    sub_1C107063C();
    swift_unknownObjectRelease();
  }
  else
  {
    v157 = 0u;
    v156 = 0u;
  }
  sub_1C078A67C((uint64_t)&v156, (uint64_t)&v158, &qword_1ED760400);
  v48 = v126;
  if (!*((_QWORD *)&v159 + 1))
  {
    sub_1C0784B6C((uint64_t)&v158, &qword_1ED760400);
    goto LABEL_21;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_21:
    swift_bridgeObjectRelease();
    if (qword_1ED761458 != -1)
      swift_once();
    v51 = sub_1C106F544();
    sub_1C079E000(v51, (uint64_t)qword_1ED78D818);
    v53 = *v48;
    v52 = v48[1];
    v168 = v48[2];
    sub_1C078A67C((uint64_t)(v48 + 3), (uint64_t)v167, &qword_1ED762B50);
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    sub_1C08FD4A0((uint64_t)&v168);
    sub_1C07B35DC((uint64_t)v167);
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    sub_1C08FD4A0((uint64_t)&v168);
    sub_1C07B35DC((uint64_t)v167);
    v54 = sub_1C106F538();
    v55 = sub_1C1070390();
    if (os_log_type_enabled(v54, v55))
    {
      v56 = (uint8_t *)swift_slowAlloc();
      v57 = swift_slowAlloc();
      *(_QWORD *)&v158 = v57;
      *(_DWORD *)v56 = 136315138;
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      *(_QWORD *)&v156 = sub_1C0788DAC(v53, v52, (uint64_t *)&v158);
      sub_1C10705AC();
      swift_bridgeObjectRelease_n();
      sub_1C08EE9A0((uint64_t)&v168);
      sub_1C07B2F5C((uint64_t)v167);
      swift_bridgeObjectRelease();
      sub_1C08EE9A0((uint64_t)&v168);
      sub_1C07B2F5C((uint64_t)v167);
      _os_log_impl(&dword_1C0771000, v54, v55, "Mapping error missing property map for  %s", v56, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C3BA8270](v57, -1, -1);
      MEMORY[0x1C3BA8270](v56, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease();
      sub_1C08EE9A0((uint64_t)&v168);
      sub_1C07B2F5C((uint64_t)v167);
      swift_bridgeObjectRelease();
      sub_1C08EE9A0((uint64_t)&v168);
      sub_1C07B2F5C((uint64_t)v167);
    }

    sub_1C081F128();
    swift_allocError();
    *v58 = 1;
    swift_willThrow();

    return;
  }
  v49 = v154;
  *(_QWORD *)&v156 = 1701869940;
  *((_QWORD *)&v156 + 1) = 0xE400000000000000;
  v50 = objc_msgSend(v125, sel___swift_objectForKeyedSubscript_, sub_1C1070D20());
  swift_unknownObjectRelease();
  if (v50)
  {
    sub_1C107063C();
    swift_unknownObjectRelease();
  }
  else
  {
    v157 = 0u;
    v156 = 0u;
  }
  sub_1C078A67C((uint64_t)&v156, (uint64_t)&v158, &qword_1ED760400);
  v59 = v126;
  if (!*((_QWORD *)&v159 + 1))
  {
    sub_1C0784B6C((uint64_t)&v158, &qword_1ED760400);
    goto LABEL_36;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_36:
    swift_bridgeObjectRelease();
    if (qword_1ED761458 != -1)
      swift_once();
    v71 = sub_1C106F544();
    sub_1C079E000(v71, (uint64_t)qword_1ED78D818);
    v73 = *v59;
    v72 = v59[1];
    v166 = v59[2];
    sub_1C078A67C((uint64_t)(v59 + 3), (uint64_t)v165, &qword_1ED762B50);
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    sub_1C08FD4A0((uint64_t)&v166);
    sub_1C07B35DC((uint64_t)v165);
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    sub_1C08FD4A0((uint64_t)&v166);
    sub_1C07B35DC((uint64_t)v165);
    v66 = sub_1C106F538();
    v67 = sub_1C1070390();
    if (os_log_type_enabled(v66, v67))
    {
      v68 = (uint8_t *)swift_slowAlloc();
      v69 = swift_slowAlloc();
      *(_QWORD *)&v158 = v69;
      *(_DWORD *)v68 = 136315138;
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      *(_QWORD *)&v156 = sub_1C0788DAC(v73, v72, (uint64_t *)&v158);
      sub_1C10705AC();
      swift_bridgeObjectRelease_n();
      sub_1C08EE9A0((uint64_t)&v166);
      sub_1C07B2F5C((uint64_t)v165);
      swift_bridgeObjectRelease();
      sub_1C08EE9A0((uint64_t)&v166);
      sub_1C07B2F5C((uint64_t)v165);
      v70 = "Mapping error missing type for  %s";
      goto LABEL_40;
    }
    swift_bridgeObjectRelease();
    sub_1C08EE9A0((uint64_t)&v166);
    sub_1C07B2F5C((uint64_t)v165);
    swift_bridgeObjectRelease();
    sub_1C08EE9A0((uint64_t)&v166);
    v74 = v165;
LABEL_42:
    sub_1C07B2F5C((uint64_t)v74);
    goto LABEL_43;
  }
  v60 = v154;
  v61 = v155;
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  v123 = v60;
  sub_1C106D084();
  v62 = v124;
  if (sub_1C07B2D80((uint64_t)v26, 1, v124) == 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C0784B6C((uint64_t)v26, &qword_1ED7618D0);
    if (qword_1ED761458 != -1)
      swift_once();
    v63 = sub_1C106F544();
    sub_1C079E000(v63, (uint64_t)qword_1ED78D818);
    v65 = *v59;
    v64 = v59[1];
    v164 = v59[2];
    sub_1C078A67C((uint64_t)(v59 + 3), (uint64_t)v163, &qword_1ED762B50);
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    sub_1C08FD4A0((uint64_t)&v164);
    sub_1C07B35DC((uint64_t)v163);
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    sub_1C08FD4A0((uint64_t)&v164);
    sub_1C07B35DC((uint64_t)v163);
    v66 = sub_1C106F538();
    v67 = sub_1C1070390();
    if (os_log_type_enabled(v66, v67))
    {
      v68 = (uint8_t *)swift_slowAlloc();
      v69 = swift_slowAlloc();
      *(_QWORD *)&v158 = v69;
      *(_DWORD *)v68 = 136315138;
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      *(_QWORD *)&v156 = sub_1C0788DAC(v65, v64, (uint64_t *)&v158);
      sub_1C10705AC();
      swift_bridgeObjectRelease_n();
      sub_1C08EE9A0((uint64_t)&v164);
      sub_1C07B2F5C((uint64_t)v163);
      swift_bridgeObjectRelease();
      sub_1C08EE9A0((uint64_t)&v164);
      sub_1C07B2F5C((uint64_t)v163);
      v70 = "Mapping error type is not recognized as an EntityClass %s";
LABEL_40:
      _os_log_impl(&dword_1C0771000, v66, v67, v70, v68, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C3BA8270](v69, -1, -1);
      MEMORY[0x1C3BA8270](v68, -1, -1);
LABEL_43:

      sub_1C081F128();
      swift_allocError();
      *v75 = 1;
      swift_willThrow();

      return;
    }
    swift_bridgeObjectRelease();
    sub_1C08EE9A0((uint64_t)&v164);
    sub_1C07B2F5C((uint64_t)v163);
    swift_bridgeObjectRelease();
    sub_1C08EE9A0((uint64_t)&v164);
    v74 = v163;
    goto LABEL_42;
  }
  v119 = v61;
  v122 = v49;
  v76 = v151;
  (*(void (**)(char *, char *, uint64_t))(v28 + 32))(v151, v26, v62);
  v77 = v62;
  if (qword_1ED761458 != -1)
    swift_once();
  v78 = sub_1C106F544();
  v79 = sub_1C079E000(v78, (uint64_t)qword_1ED78D818);
  v80 = *(void (**)(char *, char *, uint64_t))(v28 + 16);
  v80(v32, v76, v77);
  v81 = v148;
  swift_bridgeObjectRetain_n();
  v121 = v79;
  v82 = sub_1C106F538();
  v83 = sub_1C1070378();
  v84 = v83;
  v85 = os_log_type_enabled(v82, v83);
  v118 = v80;
  if (v85)
  {
    v86 = swift_slowAlloc();
    LODWORD(v120) = v84;
    v87 = v86;
    v117 = swift_slowAlloc();
    *(_QWORD *)&v158 = v117;
    *(_DWORD *)v87 = 136381187;
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    v88 = v147;
    *(_QWORD *)&v156 = sub_1C0788DAC(v147, v81, (uint64_t *)&v158);
    sub_1C10705AC();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v87 + 12) = 2080;
    sub_1C0794BAC(&qword_1ED759F68, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3BB08], MEMORY[0x1E0D3BB40]);
    v116 = v82;
    v89 = sub_1C1070C0C();
    *(_QWORD *)&v156 = sub_1C0788DAC(v89, v90, (uint64_t *)&v158);
    v91 = v124;
    sub_1C10705AC();
    v92 = v88;
    swift_bridgeObjectRelease();
    v93 = *(void (**)(char *, uint64_t))(v28 + 8);
    v93(v32, v91);
    v94 = v87;
    *(_WORD *)(v87 + 22) = 1024;
    LODWORD(v156) = 0;
    sub_1C10705AC();
    v95 = v116;
    _os_log_impl(&dword_1C0771000, v116, (os_log_type_t)v120, "Source: generating identifier for: %{private}s : %s : %{BOOL}d", (uint8_t *)v87, 0x1Cu);
    v96 = v117;
    swift_arrayDestroy();
    MEMORY[0x1C3BA8270](v96, -1, -1);
    MEMORY[0x1C3BA8270](v94, -1, -1);

  }
  else
  {
    swift_bridgeObjectRelease_n();
    v93 = *(void (**)(char *, uint64_t))(v28 + 8);
    v93(v32, v77);

    v92 = v147;
  }
  *(_QWORD *)&v158 = v92;
  *((_QWORD *)&v158 + 1) = v81;
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C106FC94();
  v97 = v158;
  sub_1C106FB44();
  sub_1C106FB20();
  v99 = v98;
  (*(void (**)(char *, uint64_t))(v145 + 8))(v18, v146);
  v120 = v93;
  if (v99 >> 60 != 15)
  {
    LODWORD(v117) = a9;
    swift_bridgeObjectRelease();
    sub_1C0794BAC((unint64_t *)&qword_1ED762B30, (uint64_t (*)(uint64_t))MEMORY[0x1E0CA9940], MEMORY[0x1E0CA9930]);
    sub_1C106F85C();
    __asm { BR              X10 }
  }
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  v100 = sub_1C106F538();
  v101 = sub_1C1070390();
  if (os_log_type_enabled(v100, v101))
  {
    v102 = (uint8_t *)swift_slowAlloc();
    v103 = swift_slowAlloc();
    *(_QWORD *)&v158 = v103;
    *(_DWORD *)v102 = 136380675;
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    *(_QWORD *)&v156 = sub_1C0788DAC(v97, *((unint64_t *)&v97 + 1), (uint64_t *)&v158);
    sub_1C10705AC();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1C0771000, v100, v101, "Source: failed to encode identifier as UTF8 data: %{private}s", v102, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C3BA8270](v103, -1, -1);
    MEMORY[0x1C3BA8270](v102, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  v104 = v126;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v106 = *v104;
  v105 = v104[1];
  v162 = v104[2];
  sub_1C078A67C((uint64_t)(v104 + 3), (uint64_t)v161, &qword_1ED762B50);
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C08FD4A0((uint64_t)&v162);
  sub_1C07B35DC((uint64_t)v161);
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C08FD4A0((uint64_t)&v162);
  sub_1C07B35DC((uint64_t)v161);
  v107 = sub_1C106F538();
  v108 = sub_1C1070390();
  if (os_log_type_enabled(v107, v108))
  {
    v109 = (uint8_t *)swift_slowAlloc();
    v110 = swift_slowAlloc();
    *(_QWORD *)&v158 = v110;
    *(_DWORD *)v109 = 136315138;
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    *(_QWORD *)&v156 = sub_1C0788DAC(v106, v105, (uint64_t *)&v158);
    sub_1C10705AC();
    swift_bridgeObjectRelease_n();
    sub_1C08EE9A0((uint64_t)&v162);
    sub_1C07B2F5C((uint64_t)v161);
    swift_bridgeObjectRelease();
    sub_1C08EE9A0((uint64_t)&v162);
    sub_1C07B2F5C((uint64_t)v161);
    _os_log_impl(&dword_1C0771000, v107, v108, "Mapping error failed to generate EntityIdentifier for %s", v109, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C3BA8270](v110, -1, -1);
    MEMORY[0x1C3BA8270](v109, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_1C08EE9A0((uint64_t)&v162);
    sub_1C07B2F5C((uint64_t)v161);
    swift_bridgeObjectRelease();
    sub_1C08EE9A0((uint64_t)&v162);
    sub_1C07B2F5C((uint64_t)v161);
  }

  v111 = v122;
  v112 = v124;
  v113 = v120;
  sub_1C081F128();
  swift_allocError();
  *v114 = 5;
  swift_willThrow();

  v113(v151, v112);
}

void sub_1C0D1DAB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  void *v55;
  uint64_t v56;
  id v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  void *v61;
  void *v62;
  id v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  os_log_type_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  _BYTE *v72;
  uint64_t v73;
  uint64_t v74;
  id v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  os_log_type_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  _BYTE *v84;
  void *v85;
  uint64_t v86;
  void (*v87)(id);
  void *v88;
  uint64_t v89;
  os_log_type_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  const char *v95;
  uint64_t v96;
  os_log_type_t v97;
  uint64_t v98;
  uint64_t v99;
  _BYTE *v100;
  char v101;
  uint64_t v102;
  uint64_t v103;
  void (*v104)(uint64_t);
  os_log_type_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  unint64_t v109;
  uint64_t v110;
  uint64_t (*v111)(void);
  NSObject *v112;
  unint64_t v113;
  unint64_t v114;
  os_log_type_t v115;
  uint8_t *v116;
  uint64_t v117;
  uint64_t v118;
  char *v119;
  os_log_type_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  _BYTE *v125;
  NSObject *v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  id v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  _QWORD v138[2];
  void (*v139)(id);
  uint64_t v140;
  uint64_t v141[3];
  uint64_t v142;
  uint64_t v143;
  void *v144;

  sub_1C077AE5C();
  a19 = v25;
  a20 = v26;
  sub_1C0D26574();
  v133 = v27;
  v131 = v28;
  v30 = v29;
  v135 = v31;
  v130 = v32;
  v33 = sub_1C0D260CC();
  sub_1C077B58C(v33, (uint64_t)&a11);
  sub_1C0787718(v34);
  MEMORY[0x1E0C80A78](v35);
  sub_1C077AE40();
  v37 = sub_1C0D25DB0(v36);
  sub_1C077B58C(v37, (uint64_t)&a14);
  sub_1C0787718(v38);
  MEMORY[0x1E0C80A78](v39);
  sub_1C077AE40();
  v41 = sub_1C07BA100(v40);
  sub_1C077B58C(v41, (uint64_t)&v143);
  sub_1C0787718(v42);
  MEMORY[0x1E0C80A78](v43);
  sub_1C077AED0();
  sub_1C077AF60();
  MEMORY[0x1E0C80A78](v44);
  sub_1C0778674();
  v129 = sub_1C0775C28(v45);
  sub_1C0787718(*(_QWORD *)(v129 - 8));
  MEMORY[0x1E0C80A78](v46);
  v132 = sub_1C07A3B30();
  sub_1C0787718(*(_QWORD *)(v132 - 8));
  MEMORY[0x1E0C80A78](v47);
  sub_1C077AED0();
  sub_1C077AF60();
  MEMORY[0x1E0C80A78](v48);
  sub_1C077AF60();
  MEMORY[0x1E0C80A78](v49);
  sub_1C0778674();
  v136 = v50;
  sub_1C07ACF80(&qword_1ED7618D0);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v51);
  sub_1C0D25D94();
  sub_1C0863000();
  MEMORY[0x1E0C80A78](v52);
  sub_1C077AED0();
  sub_1C077AF60();
  MEMORY[0x1E0C80A78](v53);
  sub_1C0D26784();
  MEMORY[0x1E0C80A78](v54);
  sub_1C0778674();
  v134 = v55;
  v144 = (void *)MEMORY[0x1E0DEE9D8];
  sub_1C07A2A88();
  v56 = sub_1C077C964();
  v137 = v30;
  v57 = sub_1C0D265C4(v56, sel___swift_objectForKeyedSubscript_);
  sub_1C077853C();
  v138[0] = v21;
  if (v57)
  {
    sub_1C0D2664C();
    v58 = swift_unknownObjectRelease();
  }
  else
  {
    sub_1C0776B50();
  }
  sub_1C07824E4(v58, v59, &qword_1ED760400);
  v61 = (void *)MEMORY[0x1E0DEE9B8];
  if (!v142)
  {
    sub_1C0784F34(v60, &qword_1ED760400);
    goto LABEL_9;
  }
  sub_1C0D260D4();
  if ((sub_1C0788A68() & 1) == 0)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    sub_1C07BB2C4();
    if (!v101)
      swift_once();
    v66 = sub_1C077585C();
    sub_1C07893E4(v66, (uint64_t)qword_1ED78D818);
    sub_1C106F538();
    v67 = sub_1C077CF00();
    if (sub_1C0775B94(v67))
    {
      sub_1C0775854();
      v68 = sub_1C0775854();
      sub_1C0D25B30(v68);
      sub_1C0795CB0(4.8149e-34);
      v69 = sub_1C07B43F4();
      sub_1C0791588(v69);
      sub_1C0775894();
      sub_1C0781BC8();
      sub_1C078B12C(&dword_1C0771000, v70, v71, "Mapping error, nested entity missing metadata in map, %s");
      sub_1C0778610();
      sub_1C0776778();
    }
    sub_1C0781BC8();

    sub_1C081F128();
    sub_1C0775810();
    sub_1C0782BFC(v72, 1);
    goto LABEL_41;
  }
  sub_1C0D25A98((uint64_t)&v140);
  v62 = (void *)sub_1C077C964();
  v63 = sub_1C0784EE0((uint64_t)v62, sel___swift_objectForKeyedSubscript_);
  sub_1C077F634();
  if (v63)
  {
    sub_1C0D25CBC();
    v64 = sub_1C077853C();
  }
  else
  {
    sub_1C0776B50();
  }
  sub_1C07824E4(v64, v65, &qword_1ED760400);
  if (v142)
  {
    if ((sub_1C0788A68() & 1) != 0)
    {
      sub_1C0D2640C(v138[1]);
      v74 = sub_1C077C964();
      v75 = sub_1C0784EE0(v74, sel___swift_objectForKeyedSubscript_);
      sub_1C077F634();
      if (v75)
      {
        sub_1C0D25CBC();
        v76 = sub_1C077853C();
      }
      else
      {
        sub_1C0776B50();
      }
      v85 = (void *)v127;
      sub_1C07824E4(v76, v77, &qword_1ED760400);
      if (v142)
      {
        if ((sub_1C077C458() & 1) != 0)
        {
          v87 = v139;
          sub_1C077584C();
          sub_1C0D26474();
          sub_1C077AEEC(v23, 1, v127);
          if (!v101)
          {
            sub_1C077CF74((uint64_t)v134, v23, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v24 + 32));
            sub_1C07BB2C4();
            if (!v101)
              swift_once();
            v102 = sub_1C077585C();
            sub_1C079E000(v102, (uint64_t)qword_1ED78D818);
            v103 = sub_1C0D262D8();
            v104(v103);
            sub_1C07767CC();
            sub_1C0D26718((uint64_t)v138);
            v105 = sub_1C077B0C0();
            if (sub_1C078ABF4(v105))
            {
              v106 = sub_1C0775854();
              v141[0] = sub_1C0775854();
              *(_DWORD *)v106 = 136381187;
              _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
              v107 = sub_1C0788DAC(v130, v135, v141);
              sub_1C078BBC0(v107);
              sub_1C077CF6C();
              *(_WORD *)(v106 + 12) = 2080;
              sub_1C0794BAC(&qword_1ED759F68, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3BB08], MEMORY[0x1E0D3BB40]);
              v108 = sub_1C0D262A8((uint64_t)&v131);
              v110 = sub_1C07892FC(v108, v109);
              sub_1C0D267DC(v110);
              sub_1C07878C8();
              sub_1C077960C();
              sub_1C0790874();
              sub_1C077EDAC(v111);
              sub_1C07BC324();
              sub_1C0D261E4(&dword_1C0771000, v126, "Source: generating identifier for: %{private}s : %s : %{BOOL}d", (uint64_t)&v133 + 4);
              sub_1C078C0F8();
              sub_1C0776778();
            }
            sub_1C07758A4();
            sub_1C077EDAC(*(uint64_t (**)(void))(v24 + 8));

            v141[0] = v130;
            v141[1] = v135;
            sub_1C077C0B8();
            sub_1C0793C30();
            sub_1C0D267B0();
            v112 = sub_1C0D26048();
            v114 = v113;
            (*(void (**)(uint64_t, uint64_t))(v128 + 8))(v22, v129);
            if (v114 >> 60 != 15)
            {
              sub_1C077B5B4();
              sub_1C0794BAC((unint64_t *)&qword_1ED762B30, (uint64_t (*)(uint64_t))MEMORY[0x1E0CA9940], MEMORY[0x1E0CA9930]);
              sub_1C07AF4C4();
              v119 = (char *)&loc_1C0D1E470 + dword_1C0D1ECC4[v114 >> 62];
              v135 = v114;
              __asm { BR              X10 }
            }
            sub_1C077AEBC();
            sub_1C078C354();
            v115 = sub_1C077CF00();
            if (sub_1C0775B94(v115))
            {
              v116 = (uint8_t *)sub_1C0775854();
              v117 = sub_1C0775854();
              sub_1C0D266EC(v117);
              *(_DWORD *)v116 = 136380675;
              sub_1C077AEBC();
              v118 = sub_1C0D261C4();
              sub_1C07AC49C(v118);
              sub_1C077CF6C();
              sub_1C07796F0(&dword_1C0771000, v112, (os_log_type_t)v87, "Source: failed to encode identifier as UTF8 data: %{private}s", v116);
              sub_1C0778610();
              sub_1C0776778();
            }

            sub_1C07758A4();
            sub_1C078F230();
            sub_1C07767AC();
            sub_1C0D2572C();
            sub_1C106F538();
            v120 = sub_1C077CF00();
            if (sub_1C0775B94(v120))
            {
              sub_1C0775854();
              v121 = sub_1C0775854();
              sub_1C0D25B30(v121);
              sub_1C0795CB0(4.8149e-34);
              v122 = sub_1C07B43F4();
              sub_1C0791588(v122);
              sub_1C0775894();
              sub_1C0781BC8();
              sub_1C078B12C(&dword_1C0771000, v123, v124, "Mapping error failed to generate EntityIdentifier for %s");
              sub_1C07A33E4();
              sub_1C0776778();
            }
            sub_1C0781BC8();

            sub_1C0D26618();
            sub_1C0775810();
            sub_1C0782BFC(v125, 5);

            sub_1C078E0D0((uint64_t)&v139);
            v87(v134);
            goto LABEL_41;
          }
          v88 = v61;
          v85 = v144;
          sub_1C0778580();
          sub_1C07767AC();
          sub_1C0784B6C(v23, &qword_1ED7618D0);
          sub_1C07BB2C4();
          if (!v101)
            swift_once();
          v89 = sub_1C077585C();
          sub_1C07893E4(v89, (uint64_t)qword_1ED78D818);
          sub_1C106F538();
          v90 = sub_1C077CF00();
          if (sub_1C0775B94(v90))
          {
            sub_1C0775854();
            v91 = sub_1C0775854();
            sub_1C0D25B30(v91);
            sub_1C0795CB0(4.8149e-34);
            v92 = sub_1C07B43F4();
            sub_1C0791588(v92);
            sub_1C0775894();
            sub_1C0781BC8();
            v95 = "Mapping error type is not recognized as an EntityClass %s";
            goto LABEL_39;
          }
          goto LABEL_40;
        }
      }
      else
      {
        sub_1C0784F34(v86, &qword_1ED760400);
      }
      v88 = v61;
      sub_1C077978C();
      sub_1C07BB2C4();
      if (!v101)
        swift_once();
      v96 = sub_1C077585C();
      sub_1C07893E4(v96, (uint64_t)qword_1ED78D818);
      sub_1C106F538();
      v97 = sub_1C077CF00();
      if (sub_1C0775B94(v97))
      {
        sub_1C0775854();
        v98 = sub_1C0775854();
        sub_1C0D25B30(v98);
        sub_1C0795CB0(4.8149e-34);
        v99 = sub_1C07B43F4();
        sub_1C0791588(v99);
        sub_1C0775894();
        sub_1C0781BC8();
        v95 = "Mapping error missing type for  %s";
LABEL_39:
        sub_1C078B12C(&dword_1C0771000, v93, v94, v95);
        sub_1C07A33E4();
        sub_1C0776778();
      }
LABEL_40:
      sub_1C0781BC8();

      sub_1C081F128();
      sub_1C0775810();
      sub_1C0782BFC(v100, 1);

      sub_1C078E0D0((uint64_t)&v139);
      goto LABEL_41;
    }
  }
  else
  {
    sub_1C0784F34(v73, &qword_1ED760400);
  }
  sub_1C077978C();
  sub_1C07BB2C4();
  if (!v101)
    swift_once();
  v78 = sub_1C077585C();
  sub_1C07893E4(v78, (uint64_t)qword_1ED78D818);
  sub_1C106F538();
  v79 = sub_1C077CF00();
  if (sub_1C0775B94(v79))
  {
    sub_1C0775854();
    v80 = sub_1C0775854();
    sub_1C0D25B30(v80);
    sub_1C0795CB0(4.8149e-34);
    v81 = sub_1C07B43F4();
    sub_1C0791588(v81);
    sub_1C0775894();
    sub_1C0781BC8();
    sub_1C078B12C(&dword_1C0771000, v82, v83, "Mapping error missing property map for  %s");
    sub_1C07A33E4();
    sub_1C0776778();
  }
  sub_1C0781BC8();

  sub_1C081F128();
  sub_1C0775810();
  sub_1C0782BFC(v84, 1);

LABEL_41:
  sub_1C07757D0();
}

void sub_1C0D1ECD4(uint64_t a1, unint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, unsigned __int8 a9, uint64_t a10, unint64_t a11, uint64_t a12)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  void *v40;
  uint64_t v41;
  id v42;
  uint64_t v43;
  NSObject *v44;
  os_log_type_t v45;
  uint8_t *v46;
  uint64_t v47;
  _BYTE *v48;
  unint64_t v49;
  id v50;
  uint64_t v51;
  NSObject *v52;
  os_log_type_t v53;
  uint8_t *v54;
  uint64_t v55;
  _BYTE *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  NSObject *v61;
  os_log_type_t v62;
  uint8_t *v63;
  uint64_t v64;
  const char *v65;
  uint64_t v66;
  void *v67;
  _BYTE *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  NSObject *v73;
  os_log_type_t v74;
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;
  uint64_t v78;
  void (*v79)(char *, uint64_t);
  uint64_t v80;
  void (*v81)(_QWORD, _QWORD);
  __int128 v82;
  unint64_t v83;
  unint64_t v84;
  NSObject *v85;
  os_log_type_t v86;
  uint8_t *v87;
  uint64_t v88;
  unint64_t v89;
  unint64_t v90;
  NSObject *v91;
  os_log_type_t v92;
  uint8_t *v93;
  uint64_t v94;
  void *v95;
  _BYTE *v96;
  uint64_t v97;
  os_log_t v98;
  void (*v99)(char *, char *, uint64_t);
  void (*v100)(_QWORD, _QWORD);
  uint64_t v101;
  uint64_t v102;
  void *v103;
  uint64_t v104;
  unint64_t v105;
  id v106;
  uint64_t v107;
  char *v108;
  char *v109;
  char *v110;
  uint64_t v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  char *v115;
  uint64_t v116;
  char *v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  char *v126;
  uint64_t v127;
  uint64_t v128;
  unint64_t v129;
  uint64_t v130;
  char *v131;
  char *v132;
  void *v133;
  uint64_t v134;
  uint64_t v135;
  void *v136;
  uint64_t v137;
  __int128 v138;
  __int128 v139;
  __int128 v140;
  __int128 v141;
  uint64_t v142;

  v121 = a8;
  v130 = a7;
  v122 = a5;
  v107 = a4;
  v128 = a1;
  v129 = a2;
  v134 = a10;
  v116 = type metadata accessor for EntityTriple(0);
  v118 = *(_QWORD *)(v116 - 8);
  MEMORY[0x1E0C80A78](v116);
  v117 = (char *)&v97 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v119 = sub_1C106F874();
  v111 = *(_QWORD *)(v119 - 8);
  MEMORY[0x1E0C80A78](v119);
  v126 = (char *)&v97 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v114 = sub_1C106F868();
  v113 = *(_QWORD *)(v114 - 8);
  MEMORY[0x1E0C80A78](v114);
  v110 = (char *)&v97 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17);
  v112 = (char *)&v97 - v18;
  v125 = sub_1C106FB50();
  v124 = *(_QWORD *)(v125 - 8);
  MEMORY[0x1E0C80A78](v125);
  v20 = (char *)&v97 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v127 = sub_1C106E590();
  v120 = *(_QWORD *)(v127 - 8);
  MEMORY[0x1E0C80A78](v127);
  v115 = (char *)&v97 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v22);
  v109 = (char *)&v97 - v23;
  MEMORY[0x1E0C80A78](v24);
  v26 = (char *)&v97 - v25;
  v27 = sub_1C07ACF80(&qword_1ED7618D0);
  MEMORY[0x1E0C80A78](v27);
  v29 = (char *)&v97 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = sub_1C106D1F8();
  v31 = *(_QWORD *)(v30 - 8);
  MEMORY[0x1E0C80A78](v30);
  v108 = (char *)&v97 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v33);
  v35 = (char *)&v97 - v34;
  MEMORY[0x1E0C80A78](v36);
  v131 = (char *)&v97 - v37;
  v142 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)&v138 = 0x657473654E444D5FLL;
  *((_QWORD *)&v138 + 1) = 0xEF797469746E4564;
  v38 = sub_1C1070D20();
  v133 = a3;
  v39 = objc_msgSend(a3, sel___swift_objectForKeyedSubscript_, v38);
  swift_unknownObjectRelease();
  v123 = a6;
  v132 = v26;
  if (v39)
  {
    sub_1C107063C();
    swift_unknownObjectRelease();
  }
  else
  {
    v138 = 0u;
    v139 = 0u;
  }
  v135 = a12;
  sub_1C078A67C((uint64_t)&v138, (uint64_t)&v140, &qword_1ED760400);
  if (!*((_QWORD *)&v141 + 1))
  {
    sub_1C0784B6C((uint64_t)&v140, &qword_1ED760400);
    goto LABEL_9;
  }
  sub_1C0D256F0();
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    if (qword_1ED761458 != -1)
      swift_once();
    v43 = sub_1C106F544();
    sub_1C079E000(v43, (uint64_t)qword_1ED78D818);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    v44 = sub_1C106F538();
    v45 = sub_1C1070390();
    if (os_log_type_enabled(v44, v45))
    {
      v46 = (uint8_t *)swift_slowAlloc();
      v47 = swift_slowAlloc();
      *(_QWORD *)&v140 = v47;
      *(_DWORD *)v46 = 136315138;
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      *(_QWORD *)&v138 = sub_1C0788DAC(v134, a11, (uint64_t *)&v140);
      sub_1C10705AC();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1C0771000, v44, v45, "Mapping error, nested entity missing metadata in map, %s", v46, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C3BA8270](v47, -1, -1);
      MEMORY[0x1C3BA8270](v46, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
    }
    sub_1C081F128();
    swift_allocError();
    *v48 = 1;
    swift_willThrow();
    return;
  }
  v104 = v30;
  v105 = a11;
  v40 = v136;
  *(_QWORD *)&v138 = 0x79747265706F7270;
  *((_QWORD *)&v138 + 1) = 0xEB0000000070614DLL;
  v41 = sub_1C1070D20();
  v106 = v40;
  v42 = objc_msgSend(v40, sel___swift_objectForKeyedSubscript_, v41);
  swift_unknownObjectRelease();
  if (v42)
  {
    sub_1C107063C();
    swift_unknownObjectRelease();
  }
  else
  {
    v138 = 0u;
    v139 = 0u;
  }
  sub_1C078A67C((uint64_t)&v138, (uint64_t)&v140, &qword_1ED760400);
  v49 = v105;
  if (!*((_QWORD *)&v141 + 1))
  {
    sub_1C0784B6C((uint64_t)&v140, &qword_1ED760400);
    goto LABEL_21;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_21:
    swift_bridgeObjectRelease();
    if (qword_1ED761458 != -1)
      swift_once();
    v51 = sub_1C106F544();
    sub_1C079E000(v51, (uint64_t)qword_1ED78D818);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    v52 = sub_1C106F538();
    v53 = sub_1C1070390();
    if (os_log_type_enabled(v52, v53))
    {
      v54 = (uint8_t *)swift_slowAlloc();
      v55 = swift_slowAlloc();
      *(_QWORD *)&v140 = v55;
      *(_DWORD *)v54 = 136315138;
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      *(_QWORD *)&v138 = sub_1C0788DAC(v134, v49, (uint64_t *)&v140);
      sub_1C10705AC();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1C0771000, v52, v53, "Mapping error missing property map for  %s", v54, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C3BA8270](v55, -1, -1);
      MEMORY[0x1C3BA8270](v54, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
    }
    sub_1C081F128();
    swift_allocError();
    *v56 = 1;
    swift_willThrow();

    return;
  }
  v103 = v136;
  *(_QWORD *)&v138 = 1701869940;
  *((_QWORD *)&v138 + 1) = 0xE400000000000000;
  v50 = objc_msgSend(v106, sel___swift_objectForKeyedSubscript_, sub_1C1070D20());
  swift_unknownObjectRelease();
  if (v50)
  {
    sub_1C107063C();
    swift_unknownObjectRelease();
  }
  else
  {
    v138 = 0u;
    v139 = 0u;
  }
  v57 = v104;
  sub_1C078A67C((uint64_t)&v138, (uint64_t)&v140, &qword_1ED760400);
  if (!*((_QWORD *)&v141 + 1))
  {
    sub_1C0784B6C((uint64_t)&v140, &qword_1ED760400);
LABEL_36:
    swift_bridgeObjectRelease();
    if (qword_1ED761458 != -1)
      swift_once();
    v66 = sub_1C106F544();
    sub_1C079E000(v66, (uint64_t)qword_1ED78D818);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    v61 = sub_1C106F538();
    v62 = sub_1C1070390();
    if (os_log_type_enabled(v61, v62))
    {
      v63 = (uint8_t *)swift_slowAlloc();
      v64 = swift_slowAlloc();
      *(_QWORD *)&v140 = v64;
      *(_DWORD *)v63 = 136315138;
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      *(_QWORD *)&v138 = sub_1C0788DAC(v134, v49, (uint64_t *)&v140);
      sub_1C10705AC();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      v65 = "Mapping error missing type for  %s";
      goto LABEL_40;
    }
LABEL_41:

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    goto LABEL_42;
  }
  if ((swift_dynamicCast() & 1) == 0)
    goto LABEL_36;
  v59 = (uint64_t)v136;
  v58 = v137;
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C106D084();
  if (sub_1C07B2D80((uint64_t)v29, 1, v57) == 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C0784B6C((uint64_t)v29, &qword_1ED7618D0);
    if (qword_1ED761458 != -1)
      swift_once();
    v60 = sub_1C106F544();
    sub_1C079E000(v60, (uint64_t)qword_1ED78D818);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    v61 = sub_1C106F538();
    v62 = sub_1C1070390();
    if (os_log_type_enabled(v61, v62))
    {
      v63 = (uint8_t *)swift_slowAlloc();
      v64 = swift_slowAlloc();
      *(_QWORD *)&v140 = v64;
      *(_DWORD *)v63 = 136315138;
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      *(_QWORD *)&v138 = sub_1C0788DAC(v134, v49, (uint64_t *)&v140);
      sub_1C10705AC();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      v65 = "Mapping error type is not recognized as an EntityClass %s";
LABEL_40:
      _os_log_impl(&dword_1C0771000, v61, v62, v65, v63, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C3BA8270](v64, -1, -1);
      MEMORY[0x1C3BA8270](v63, -1, -1);

LABEL_42:
      v67 = v103;
      sub_1C081F128();
      swift_allocError();
      *v68 = 1;
      swift_willThrow();

      return;
    }
    goto LABEL_41;
  }
  v102 = v58;
  v69 = v131;
  (*(void (**)(char *, char *, uint64_t))(v31 + 32))(v131, v29, v57);
  if (qword_1ED761458 != -1)
    swift_once();
  v70 = sub_1C106F544();
  v71 = sub_1C079E000(v70, (uint64_t)qword_1ED78D818);
  v99 = *(void (**)(char *, char *, uint64_t))(v31 + 16);
  v99(v35, v69, v57);
  v72 = v129;
  swift_bridgeObjectRetain_n();
  v101 = v71;
  v73 = sub_1C106F538();
  v74 = sub_1C1070378();
  if (os_log_type_enabled(v73, v74))
  {
    v75 = swift_slowAlloc();
    v100 = (void (*)(_QWORD, _QWORD))swift_slowAlloc();
    *(_QWORD *)&v140 = v100;
    *(_DWORD *)v75 = 136381187;
    v98 = v73;
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    *(_QWORD *)&v138 = sub_1C0788DAC(v128, v72, (uint64_t *)&v140);
    sub_1C10705AC();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v75 + 12) = 2080;
    sub_1C0794BAC(&qword_1ED759F68, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3BB08], MEMORY[0x1E0D3BB40]);
    v76 = sub_1C1070C0C();
    *(_QWORD *)&v138 = sub_1C0788DAC(v76, v77, (uint64_t *)&v140);
    v78 = v104;
    v72 = v129;
    sub_1C10705AC();
    swift_bridgeObjectRelease();
    v79 = *(void (**)(char *, uint64_t))(v31 + 8);
    v79(v35, v78);
    v80 = v75;
    *(_WORD *)(v75 + 22) = 1024;
    LODWORD(v138) = 0;
    sub_1C10705AC();
    v73 = v98;
    _os_log_impl(&dword_1C0771000, v98, v74, "Source: generating identifier for: %{private}s : %s : %{BOOL}d", (uint8_t *)v75, 0x1Cu);
    v81 = v100;
    swift_arrayDestroy();
    MEMORY[0x1C3BA8270](v81, -1, -1);
    MEMORY[0x1C3BA8270](v80, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
    v79 = *(void (**)(char *, uint64_t))(v31 + 8);
    v79(v35, v57);
  }

  *(_QWORD *)&v140 = v128;
  *((_QWORD *)&v140 + 1) = v72;
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C106FC94();
  v82 = v140;
  sub_1C106FB44();
  sub_1C106FB20();
  v84 = v83;
  (*(void (**)(char *, uint64_t))(v124 + 8))(v20, v125);
  v100 = (void (*)(_QWORD, _QWORD))v79;
  if (v84 >> 60 != 15)
  {
    v128 = v59;
    LODWORD(v98) = a9;
    swift_bridgeObjectRelease();
    sub_1C0794BAC((unint64_t *)&qword_1ED762B30, (uint64_t (*)(uint64_t))MEMORY[0x1E0CA9940], MEMORY[0x1E0CA9930]);
    v129 = v89;
    sub_1C106F85C();
    __asm { BR              X10 }
  }
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  v85 = sub_1C106F538();
  v86 = sub_1C1070390();
  if (os_log_type_enabled(v85, v86))
  {
    v87 = (uint8_t *)swift_slowAlloc();
    v88 = swift_slowAlloc();
    *(_QWORD *)&v140 = v88;
    *(_DWORD *)v87 = 136380675;
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    *(_QWORD *)&v138 = sub_1C0788DAC(v82, *((unint64_t *)&v82 + 1), (uint64_t *)&v140);
    sub_1C10705AC();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1C0771000, v85, v86, "Source: failed to encode identifier as UTF8 data: %{private}s", v87, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C3BA8270](v88, -1, -1);
    MEMORY[0x1C3BA8270](v87, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  v90 = v105;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  v91 = sub_1C106F538();
  v92 = sub_1C1070390();
  if (os_log_type_enabled(v91, v92))
  {
    v93 = (uint8_t *)swift_slowAlloc();
    v94 = swift_slowAlloc();
    *(_QWORD *)&v140 = v94;
    *(_DWORD *)v93 = 136315138;
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    *(_QWORD *)&v138 = sub_1C0788DAC(v134, v90, (uint64_t *)&v140);
    sub_1C10705AC();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1C0771000, v91, v92, "Mapping error failed to generate EntityIdentifier for %s", v93, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C3BA8270](v94, -1, -1);
    MEMORY[0x1C3BA8270](v93, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
  v95 = v103;
  sub_1C081F128();
  swift_allocError();
  *v96 = 5;
  swift_willThrow();

  v100(v131, v104);
}

void sub_1C0D20B04(uint64_t a1, unint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, unsigned __int8 a9, uint64_t a10, unint64_t a11, uint64_t a12)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  void *v40;
  uint64_t v41;
  id v42;
  uint64_t v43;
  NSObject *v44;
  os_log_type_t v45;
  uint8_t *v46;
  uint64_t v47;
  _BYTE *v48;
  unint64_t v49;
  id v50;
  uint64_t v51;
  NSObject *v52;
  os_log_type_t v53;
  uint8_t *v54;
  uint64_t v55;
  _BYTE *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  NSObject *v61;
  os_log_type_t v62;
  uint8_t *v63;
  uint64_t v64;
  const char *v65;
  uint64_t v66;
  void *v67;
  _BYTE *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  NSObject *v73;
  os_log_type_t v74;
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;
  uint64_t v78;
  void (*v79)(char *, uint64_t);
  uint64_t v80;
  void (*v81)(_QWORD, _QWORD);
  __int128 v82;
  unint64_t v83;
  unint64_t v84;
  NSObject *v85;
  os_log_type_t v86;
  uint8_t *v87;
  uint64_t v88;
  unint64_t v89;
  unint64_t v90;
  NSObject *v91;
  os_log_type_t v92;
  uint8_t *v93;
  uint64_t v94;
  void *v95;
  _BYTE *v96;
  uint64_t v97;
  os_log_t v98;
  void (*v99)(char *, char *, uint64_t);
  void (*v100)(_QWORD, _QWORD);
  uint64_t v101;
  uint64_t v102;
  void *v103;
  uint64_t v104;
  unint64_t v105;
  id v106;
  uint64_t v107;
  char *v108;
  char *v109;
  char *v110;
  uint64_t v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  char *v115;
  uint64_t v116;
  char *v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  char *v126;
  uint64_t v127;
  uint64_t v128;
  unint64_t v129;
  uint64_t v130;
  char *v131;
  char *v132;
  void *v133;
  uint64_t v134;
  uint64_t v135;
  void *v136;
  uint64_t v137;
  __int128 v138;
  __int128 v139;
  __int128 v140;
  __int128 v141;
  uint64_t v142;

  v121 = a8;
  v130 = a7;
  v122 = a5;
  v107 = a4;
  v128 = a1;
  v129 = a2;
  v134 = a10;
  v116 = type metadata accessor for EntityTriple(0);
  v118 = *(_QWORD *)(v116 - 8);
  MEMORY[0x1E0C80A78](v116);
  v117 = (char *)&v97 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v119 = sub_1C106F874();
  v111 = *(_QWORD *)(v119 - 8);
  MEMORY[0x1E0C80A78](v119);
  v126 = (char *)&v97 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v114 = sub_1C106F868();
  v113 = *(_QWORD *)(v114 - 8);
  MEMORY[0x1E0C80A78](v114);
  v110 = (char *)&v97 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17);
  v112 = (char *)&v97 - v18;
  v125 = sub_1C106FB50();
  v124 = *(_QWORD *)(v125 - 8);
  MEMORY[0x1E0C80A78](v125);
  v20 = (char *)&v97 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v127 = sub_1C106E590();
  v120 = *(_QWORD *)(v127 - 8);
  MEMORY[0x1E0C80A78](v127);
  v115 = (char *)&v97 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v22);
  v109 = (char *)&v97 - v23;
  MEMORY[0x1E0C80A78](v24);
  v26 = (char *)&v97 - v25;
  v27 = sub_1C07ACF80(&qword_1ED7618D0);
  MEMORY[0x1E0C80A78](v27);
  v29 = (char *)&v97 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = sub_1C106D1F8();
  v31 = *(_QWORD *)(v30 - 8);
  MEMORY[0x1E0C80A78](v30);
  v108 = (char *)&v97 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v33);
  v35 = (char *)&v97 - v34;
  MEMORY[0x1E0C80A78](v36);
  v131 = (char *)&v97 - v37;
  v142 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)&v138 = 0x657473654E444D5FLL;
  *((_QWORD *)&v138 + 1) = 0xEF797469746E4564;
  v38 = sub_1C1070D20();
  v133 = a3;
  v39 = objc_msgSend(a3, sel___swift_objectForKeyedSubscript_, v38);
  swift_unknownObjectRelease();
  v123 = a6;
  v132 = v26;
  if (v39)
  {
    sub_1C107063C();
    swift_unknownObjectRelease();
  }
  else
  {
    v138 = 0u;
    v139 = 0u;
  }
  v135 = a12;
  sub_1C078A67C((uint64_t)&v138, (uint64_t)&v140, &qword_1ED760400);
  if (!*((_QWORD *)&v141 + 1))
  {
    sub_1C0784B6C((uint64_t)&v140, &qword_1ED760400);
    goto LABEL_9;
  }
  sub_1C0D256F0();
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    if (qword_1ED761458 != -1)
      swift_once();
    v43 = sub_1C106F544();
    sub_1C079E000(v43, (uint64_t)qword_1ED78D818);
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    v44 = sub_1C106F538();
    v45 = sub_1C1070390();
    if (os_log_type_enabled(v44, v45))
    {
      v46 = (uint8_t *)swift_slowAlloc();
      v47 = swift_slowAlloc();
      *(_QWORD *)&v140 = v47;
      *(_DWORD *)v46 = 136315138;
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      *(_QWORD *)&v138 = sub_1C0788DAC(v134, a11, (uint64_t *)&v140);
      sub_1C10705AC();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1C0771000, v44, v45, "Mapping error, nested entity missing metadata in map, %s", v46, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C3BA8270](v47, -1, -1);
      MEMORY[0x1C3BA8270](v46, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    sub_1C081F128();
    swift_allocError();
    *v48 = 1;
    swift_willThrow();
    return;
  }
  v104 = v30;
  v105 = a11;
  v40 = v136;
  *(_QWORD *)&v138 = 0x79747265706F7270;
  *((_QWORD *)&v138 + 1) = 0xEB0000000070614DLL;
  v41 = sub_1C1070D20();
  v106 = v40;
  v42 = objc_msgSend(v40, sel___swift_objectForKeyedSubscript_, v41);
  swift_unknownObjectRelease();
  if (v42)
  {
    sub_1C107063C();
    swift_unknownObjectRelease();
  }
  else
  {
    v138 = 0u;
    v139 = 0u;
  }
  sub_1C078A67C((uint64_t)&v138, (uint64_t)&v140, &qword_1ED760400);
  v49 = v105;
  if (!*((_QWORD *)&v141 + 1))
  {
    sub_1C0784B6C((uint64_t)&v140, &qword_1ED760400);
    goto LABEL_21;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_21:
    swift_bridgeObjectRelease();
    if (qword_1ED761458 != -1)
      swift_once();
    v51 = sub_1C106F544();
    sub_1C079E000(v51, (uint64_t)qword_1ED78D818);
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    v52 = sub_1C106F538();
    v53 = sub_1C1070390();
    if (os_log_type_enabled(v52, v53))
    {
      v54 = (uint8_t *)swift_slowAlloc();
      v55 = swift_slowAlloc();
      *(_QWORD *)&v140 = v55;
      *(_DWORD *)v54 = 136315138;
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      *(_QWORD *)&v138 = sub_1C0788DAC(v134, v49, (uint64_t *)&v140);
      sub_1C10705AC();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1C0771000, v52, v53, "Mapping error missing property map for  %s", v54, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C3BA8270](v55, -1, -1);
      MEMORY[0x1C3BA8270](v54, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    sub_1C081F128();
    swift_allocError();
    *v56 = 1;
    swift_willThrow();

    return;
  }
  v103 = v136;
  *(_QWORD *)&v138 = 1701869940;
  *((_QWORD *)&v138 + 1) = 0xE400000000000000;
  v50 = objc_msgSend(v106, sel___swift_objectForKeyedSubscript_, sub_1C1070D20());
  swift_unknownObjectRelease();
  if (v50)
  {
    sub_1C107063C();
    swift_unknownObjectRelease();
  }
  else
  {
    v138 = 0u;
    v139 = 0u;
  }
  v57 = v104;
  sub_1C078A67C((uint64_t)&v138, (uint64_t)&v140, &qword_1ED760400);
  if (!*((_QWORD *)&v141 + 1))
  {
    sub_1C0784B6C((uint64_t)&v140, &qword_1ED760400);
LABEL_36:
    swift_bridgeObjectRelease();
    if (qword_1ED761458 != -1)
      swift_once();
    v66 = sub_1C106F544();
    sub_1C079E000(v66, (uint64_t)qword_1ED78D818);
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    v61 = sub_1C106F538();
    v62 = sub_1C1070390();
    if (os_log_type_enabled(v61, v62))
    {
      v63 = (uint8_t *)swift_slowAlloc();
      v64 = swift_slowAlloc();
      *(_QWORD *)&v140 = v64;
      *(_DWORD *)v63 = 136315138;
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      *(_QWORD *)&v138 = sub_1C0788DAC(v134, v49, (uint64_t *)&v140);
      sub_1C10705AC();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      v65 = "Mapping error missing type for  %s";
      goto LABEL_40;
    }
LABEL_41:

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_42;
  }
  if ((swift_dynamicCast() & 1) == 0)
    goto LABEL_36;
  v59 = (uint64_t)v136;
  v58 = v137;
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C106D084();
  if (sub_1C07B2D80((uint64_t)v29, 1, v57) == 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C0784B6C((uint64_t)v29, &qword_1ED7618D0);
    if (qword_1ED761458 != -1)
      swift_once();
    v60 = sub_1C106F544();
    sub_1C079E000(v60, (uint64_t)qword_1ED78D818);
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    v61 = sub_1C106F538();
    v62 = sub_1C1070390();
    if (os_log_type_enabled(v61, v62))
    {
      v63 = (uint8_t *)swift_slowAlloc();
      v64 = swift_slowAlloc();
      *(_QWORD *)&v140 = v64;
      *(_DWORD *)v63 = 136315138;
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      *(_QWORD *)&v138 = sub_1C0788DAC(v134, v49, (uint64_t *)&v140);
      sub_1C10705AC();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      v65 = "Mapping error type is not recognized as an EntityClass %s";
LABEL_40:
      _os_log_impl(&dword_1C0771000, v61, v62, v65, v63, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C3BA8270](v64, -1, -1);
      MEMORY[0x1C3BA8270](v63, -1, -1);

LABEL_42:
      v67 = v103;
      sub_1C081F128();
      swift_allocError();
      *v68 = 1;
      swift_willThrow();

      return;
    }
    goto LABEL_41;
  }
  v102 = v58;
  v69 = v131;
  (*(void (**)(char *, char *, uint64_t))(v31 + 32))(v131, v29, v57);
  if (qword_1ED761458 != -1)
    swift_once();
  v70 = sub_1C106F544();
  v71 = sub_1C079E000(v70, (uint64_t)qword_1ED78D818);
  v99 = *(void (**)(char *, char *, uint64_t))(v31 + 16);
  v99(v35, v69, v57);
  v72 = v129;
  swift_bridgeObjectRetain_n();
  v101 = v71;
  v73 = sub_1C106F538();
  v74 = sub_1C1070378();
  if (os_log_type_enabled(v73, v74))
  {
    v75 = swift_slowAlloc();
    v100 = (void (*)(_QWORD, _QWORD))swift_slowAlloc();
    *(_QWORD *)&v140 = v100;
    *(_DWORD *)v75 = 136381187;
    v98 = v73;
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    *(_QWORD *)&v138 = sub_1C0788DAC(v128, v72, (uint64_t *)&v140);
    sub_1C10705AC();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v75 + 12) = 2080;
    sub_1C0794BAC(&qword_1ED759F68, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3BB08], MEMORY[0x1E0D3BB40]);
    v76 = sub_1C1070C0C();
    *(_QWORD *)&v138 = sub_1C0788DAC(v76, v77, (uint64_t *)&v140);
    v78 = v104;
    v72 = v129;
    sub_1C10705AC();
    swift_bridgeObjectRelease();
    v79 = *(void (**)(char *, uint64_t))(v31 + 8);
    v79(v35, v78);
    v80 = v75;
    *(_WORD *)(v75 + 22) = 1024;
    LODWORD(v138) = 0;
    sub_1C10705AC();
    v73 = v98;
    _os_log_impl(&dword_1C0771000, v98, v74, "Source: generating identifier for: %{private}s : %s : %{BOOL}d", (uint8_t *)v75, 0x1Cu);
    v81 = v100;
    swift_arrayDestroy();
    MEMORY[0x1C3BA8270](v81, -1, -1);
    MEMORY[0x1C3BA8270](v80, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
    v79 = *(void (**)(char *, uint64_t))(v31 + 8);
    v79(v35, v57);
  }

  *(_QWORD *)&v140 = v128;
  *((_QWORD *)&v140 + 1) = v72;
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C106FC94();
  v82 = v140;
  sub_1C106FB44();
  sub_1C106FB20();
  v84 = v83;
  (*(void (**)(char *, uint64_t))(v124 + 8))(v20, v125);
  v100 = (void (*)(_QWORD, _QWORD))v79;
  if (v84 >> 60 != 15)
  {
    v128 = v59;
    LODWORD(v98) = a9;
    swift_bridgeObjectRelease();
    sub_1C0794BAC((unint64_t *)&qword_1ED762B30, (uint64_t (*)(uint64_t))MEMORY[0x1E0CA9940], MEMORY[0x1E0CA9930]);
    v129 = v89;
    sub_1C106F85C();
    __asm { BR              X10 }
  }
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  v85 = sub_1C106F538();
  v86 = sub_1C1070390();
  if (os_log_type_enabled(v85, v86))
  {
    v87 = (uint8_t *)swift_slowAlloc();
    v88 = swift_slowAlloc();
    *(_QWORD *)&v140 = v88;
    *(_DWORD *)v87 = 136380675;
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    *(_QWORD *)&v138 = sub_1C0788DAC(v82, *((unint64_t *)&v82 + 1), (uint64_t *)&v140);
    sub_1C10705AC();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1C0771000, v85, v86, "Source: failed to encode identifier as UTF8 data: %{private}s", v87, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C3BA8270](v88, -1, -1);
    MEMORY[0x1C3BA8270](v87, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  v90 = v105;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  v91 = sub_1C106F538();
  v92 = sub_1C1070390();
  if (os_log_type_enabled(v91, v92))
  {
    v93 = (uint8_t *)swift_slowAlloc();
    v94 = swift_slowAlloc();
    *(_QWORD *)&v140 = v94;
    *(_DWORD *)v93 = 136315138;
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    *(_QWORD *)&v138 = sub_1C0788DAC(v134, v90, (uint64_t *)&v140);
    sub_1C10705AC();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1C0771000, v91, v92, "Mapping error failed to generate EntityIdentifier for %s", v93, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C3BA8270](v94, -1, -1);
    MEMORY[0x1C3BA8270](v93, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  v95 = v103;
  sub_1C081F128();
  swift_allocError();
  *v96 = 5;
  swift_willThrow();

  v100(v131, v104);
}

void sub_1C0D228D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,unsigned __int8 a21)
{
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  id v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  NSObject *v68;
  void *v69;
  uint64_t v70;
  id v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  NSObject *v75;
  os_log_type_t v76;
  _DWORD *v77;
  uint64_t v78;
  uint64_t v79;
  _BYTE *v80;
  uint64_t v81;
  uint64_t v82;
  void *v83;
  NSObject *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  os_log_type_t v89;
  _DWORD *v90;
  uint64_t v91;
  uint64_t v92;
  _BYTE *v93;
  uint64_t v94;
  uint64_t v95;
  void *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  os_log_type_t v100;
  _DWORD *v101;
  uint64_t v102;
  uint64_t v103;
  const char *v104;
  uint64_t v105;
  uint64_t v106;
  os_log_type_t v107;
  _DWORD *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t *v111;
  _BYTE *v112;
  char v113;
  uint64_t v114;
  NSObject *v115;
  void (*v116)(uint64_t);
  uint64_t v117;
  os_log_type_t v118;
  int v119;
  BOOL v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t *v124;
  uint64_t v125;
  unint64_t v126;
  uint64_t v127;
  unint64_t v128;
  unint64_t v129;
  unint64_t v130;
  NSObject *v131;
  os_log_type_t v132;
  uint8_t *v133;
  uint64_t v134;
  uint64_t v135;
  NSObject *v136;
  void (*v137)(uint64_t, uint64_t);
  os_log_type_t v138;
  _DWORD *v139;
  uint64_t v140;
  uint64_t v141;
  void *v142;
  uint64_t v143;
  _BYTE *v144;
  uint64_t v145;
  os_log_t v146;
  uint64_t v147;
  void (*v148)(uint64_t);
  uint64_t v149;
  uint64_t v150;
  NSObject *v151;
  void *v152;
  void *v153;
  uint64_t v154;
  id v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  void *v167;
  void *v168;
  uint64_t v169;
  _QWORD v170[4];
  uint64_t v171;
  char *v172;
  uint64_t v173;
  NSObject *v174;
  uint64_t v175;
  _BYTE v176[16];
  uint64_t v177;
  _BYTE v178[16];
  uint64_t v179;
  _BYTE v180[16];
  uint64_t v181;
  _BYTE v182[16];
  _BYTE v183[16];
  uint64_t v184;

  sub_1C077AE5C();
  a19 = v23;
  a20 = v24;
  sub_1C0D2653C();
  v158 = v25;
  v27 = v26;
  v159 = v28;
  v160 = v29;
  v157 = v30;
  v32 = v31;
  v164 = v33;
  v163 = v34;
  v35 = sub_1C0D260CC();
  sub_1C077B58C(v35, (uint64_t)&v177);
  sub_1C0787718(v36);
  MEMORY[0x1E0C80A78](v37);
  sub_1C077AE40();
  v39 = sub_1C0D25DB0(v38);
  sub_1C077B58C(v39, (uint64_t)&v179);
  sub_1C0787718(v40);
  MEMORY[0x1E0C80A78](v41);
  sub_1C077AE40();
  v43 = sub_1C07BA100(v42);
  sub_1C077B58C(v43, (uint64_t)v176);
  sub_1C0787718(v44);
  MEMORY[0x1E0C80A78](v45);
  sub_1C077AED0();
  sub_1C077AF60();
  MEMORY[0x1E0C80A78](v46);
  sub_1C0778674();
  v162 = sub_1C0775C28(v47);
  sub_1C0787718(*(_QWORD *)(v162 - 8));
  MEMORY[0x1E0C80A78](v48);
  sub_1C0778544();
  v49 = sub_1C106E590();
  sub_1C077B58C(v49, (uint64_t)&a10);
  sub_1C0787718(v50);
  MEMORY[0x1E0C80A78](v51);
  sub_1C077AED0();
  sub_1C077AF60();
  MEMORY[0x1E0C80A78](v52);
  sub_1C077AF60();
  MEMORY[0x1E0C80A78](v53);
  sub_1C0778674();
  sub_1C0784DAC(v54);
  sub_1C07ACF80(&qword_1ED7618D0);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v55);
  v57 = (char *)&v145 - ((v56 + 15) & 0xFFFFFFFFFFFFFFF0);
  v58 = sub_1C106D1F8();
  v59 = *(_QWORD *)(v58 - 8);
  MEMORY[0x1E0C80A78](v58);
  sub_1C077AED0();
  sub_1C077AF60();
  MEMORY[0x1E0C80A78](v60);
  MEMORY[0x1E0C80A78](v61);
  sub_1C0778674();
  sub_1C0784DAC(v62);
  v174 = MEMORY[0x1E0DEE9D8];
  sub_1C0D25E04(0x657473654E444D5FLL);
  v63 = sub_1C0D26558();
  v167 = v32;
  v64 = objc_msgSend(v32, sel___swift_objectForKeyedSubscript_, v63);
  swift_unknownObjectRelease();
  v165 = v27;
  if (v64)
  {
    sub_1C0D26098();
    v65 = sub_1C077F634();
  }
  else
  {
    sub_1C0D25E88();
  }
  sub_1C0D25FF8(v65, v66, &qword_1ED760400);
  if (!v173)
  {
    sub_1C0D26550(v67, &qword_1ED760400);
    goto LABEL_9;
  }
  v68 = sub_1C0D260D4();
  if ((sub_1C077C458() & 1) == 0)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    sub_1C0D26284();
    if (!v113)
      swift_once();
    v74 = sub_1C077585C();
    v75 = sub_1C079E000(v74, (uint64_t)qword_1ED78D818);
    sub_1C078A67C(v21 + 16, (uint64_t)v183, &qword_1ED762B50);
    a10 = *(_QWORD *)(v21 + 32);
    sub_1C077584C();
    sub_1C07B35DC((uint64_t)v183);
    sub_1C08FD4A0((uint64_t)&a10);
    sub_1C077584C();
    sub_1C07B35DC((uint64_t)v183);
    sub_1C08FD4A0((uint64_t)&a10);
    sub_1C106F538();
    v76 = sub_1C077CF00();
    if (sub_1C07825D0(v76))
    {
      v77 = (_DWORD *)sub_1C0775854();
      v78 = sub_1C0775854();
      sub_1C0D260B4(v78);
      *v77 = 136315138;
      sub_1C077584C();
      v79 = sub_1C07AFE8C();
      sub_1C07AEA58(v79);
      sub_1C07758A4();
      sub_1C077E29C();
      sub_1C079E86C();
      sub_1C0778580();
      sub_1C077E29C();
      sub_1C079E86C();
      sub_1C0792EA0(&dword_1C0771000, v75, OS_LOG_TYPE_DEFAULT, "Mapping error, nested entity missing metadata in map, %s");
      sub_1C0778610();
      sub_1C0776778();
    }
    sub_1C0778580();
    sub_1C077E29C();
    sub_1C079E86C();
    sub_1C0778580();
    sub_1C077E29C();
    sub_1C079E86C();

    sub_1C081F128();
    sub_1C0775810();
    sub_1C0782BFC(v80, 1);
    goto LABEL_42;
  }
  v154 = v58;
  v156 = v21;
  v69 = v168;
  sub_1C0D25E04(0x79747265706F7270);
  v70 = sub_1C0D26558();
  v155 = v69;
  v71 = objc_msgSend(v69, sel___swift_objectForKeyedSubscript_, v70);
  swift_unknownObjectRelease();
  if (v71)
  {
    sub_1C107063C();
    v72 = swift_unknownObjectRelease();
  }
  else
  {
    sub_1C0D25E88();
  }
  sub_1C0D25FF8(v72, v73, &qword_1ED760400);
  v82 = v156;
  if (v173)
  {
    if ((sub_1C077C458() & 1) != 0)
    {
      v83 = v168;
      sub_1C0D25E04(1701869940);
      v84 = objc_msgSend(v155, sel___swift_objectForKeyedSubscript_, sub_1C0D26558());
      swift_unknownObjectRelease();
      if (v84)
      {
        sub_1C0D26098();
        v85 = sub_1C077F634();
      }
      else
      {
        sub_1C0D25E88();
      }
      sub_1C0D25FF8(v85, v86, &qword_1ED760400);
      v95 = v156;
      if (v173)
      {
        if ((sub_1C077C458() & 1) != 0)
        {
          v96 = v168;
          v97 = v169;
          sub_1C077AE90();
          v153 = v96;
          sub_1C106D084();
          sub_1C077AEEC((uint64_t)v57, 1, v154);
          if (!v113)
          {
            v149 = v97;
            v152 = v83;
            sub_1C077CF74(v166, (uint64_t)v57, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v59 + 32));
            sub_1C0D26284();
            if (!v113)
              swift_once();
            v114 = sub_1C077585C();
            v115 = sub_1C079E000(v114, (uint64_t)qword_1ED78D818);
            v116 = *(void (**)(uint64_t))(v59 + 16);
            v117 = sub_1C078C6DC();
            v116(v117);
            sub_1C0D26628((uint64_t)&a9);
            sub_1C07767CC();
            v151 = v115;
            sub_1C106F538();
            v118 = sub_1C077B0C0();
            v119 = v118;
            v120 = os_log_type_enabled(v115, v118);
            v148 = v116;
            if (v120)
            {
              v121 = sub_1C0775854();
              LODWORD(v150) = v119;
              v122 = v121;
              v147 = sub_1C0775854();
              v171 = v147;
              *(_DWORD *)v122 = 136381187;
              sub_1C0778624();
              v123 = sub_1C0D26070((uint64_t)&v184);
              v170[0] = sub_1C0788DAC(v123, (unint64_t)v57, v124);
              sub_1C07878C8();
              sub_1C077CF6C();
              *(_WORD *)(v122 + 12) = 2080;
              sub_1C0794BAC(&qword_1ED759F68, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3BB08], MEMORY[0x1E0D3BB40]);
              v146 = v115;
              v125 = sub_1C1070C0C();
              v170[0] = sub_1C0D26524(v125, v126);
              sub_1C07878C8();
              swift_bridgeObjectRelease();
              sub_1C0D261FC();
              *(_WORD *)(v122 + 22) = 1024;
              LODWORD(v170[0]) = 0;
              sub_1C10705AC();
              _os_log_impl(&dword_1C0771000, v146, (os_log_type_t)v150, "Source: generating identifier for: %{private}s : %s : %{BOOL}d", (uint8_t *)v122, 0x1Cu);
              sub_1C0778664();
              sub_1C0776778();
            }
            sub_1C07758A4();
            sub_1C0D261FC();

            v171 = v163;
            v172 = v57;
            sub_1C0778624();
            sub_1C0793C30();
            v127 = v171;
            v128 = (unint64_t)v172;
            sub_1C106FB44();
            sub_1C106FB20();
            v130 = v129;
            (*(void (**)(uint64_t, uint64_t))(v161 + 8))(v22, v162);
            v150 = v59;
            if (v130 >> 60 != 15)
            {
              LODWORD(v147) = a21;
              sub_1C077E584();
              sub_1C0794BAC((unint64_t *)&qword_1ED762B30, (uint64_t (*)(uint64_t))MEMORY[0x1E0CA9940], MEMORY[0x1E0CA9930]);
              sub_1C106F85C();
              __asm { BR              X10 }
            }
            sub_1C07796E0();
            v131 = sub_1C078C354();
            v132 = sub_1C1070390();
            if (os_log_type_enabled(v131, v132))
            {
              v133 = (uint8_t *)sub_1C0775854();
              v134 = sub_1C0775854();
              sub_1C0D260B4(v134);
              *(_DWORD *)v133 = 136380675;
              sub_1C07796E0();
              v170[0] = sub_1C0788DAC(v127, v128, &v171);
              sub_1C10705AC();
              sub_1C077CF6C();
              sub_1C07796F0(&dword_1C0771000, v131, v132, "Source: failed to encode identifier as UTF8 data: %{private}s", v133);
              sub_1C0778610();
              sub_1C0776778();
            }

            sub_1C07758A4();
            v135 = v156;
            v136 = v174;
            sub_1C078F230();
            sub_1C07767AC();
            v137 = *(void (**)(uint64_t, uint64_t))(v135 + 8);
            sub_1C078A67C(v135 + 16, (uint64_t)v176, &qword_1ED762B50);
            v175 = *(_QWORD *)(v135 + 32);
            sub_1C077584C();
            sub_1C07B35DC((uint64_t)v176);
            sub_1C08FD4A0((uint64_t)&v175);
            sub_1C077584C();
            sub_1C07B35DC((uint64_t)v176);
            sub_1C08FD4A0((uint64_t)&v175);
            sub_1C106F538();
            v138 = sub_1C077CF00();
            if (sub_1C07825D0(v138))
            {
              v139 = (_DWORD *)sub_1C0775854();
              v140 = sub_1C0775854();
              sub_1C0D260B4(v140);
              *v139 = 136315138;
              sub_1C077584C();
              v141 = sub_1C07AFE8C();
              sub_1C07AEA58(v141);
              sub_1C07758A4();
              sub_1C0D261F4();
              sub_1C0D26144();
              sub_1C0778580();
              sub_1C0D261F4();
              sub_1C0D26144();
              sub_1C0792EA0(&dword_1C0771000, v136, (os_log_type_t)v135, "Mapping error failed to generate EntityIdentifier for %s");
              sub_1C0778610();
              sub_1C0776778();
            }
            sub_1C0778580();
            sub_1C0D261F4();
            sub_1C0D26144();
            sub_1C0778580();
            sub_1C0D261F4();
            sub_1C0D26144();

            v142 = v152;
            v143 = v154;
            sub_1C0D26618();
            sub_1C0775810();
            sub_1C0782BFC(v144, 5);
            sub_1C078E0D0((uint64_t)v170);

            v137(v166, v143);
            goto LABEL_42;
          }
          v84 = v174;
          sub_1C077960C();
          sub_1C07767AC();
          sub_1C0784B6C((uint64_t)v57, &qword_1ED7618D0);
          sub_1C0D26284();
          if (!v113)
            swift_once();
          v98 = sub_1C077585C();
          sub_1C079E000(v98, (uint64_t)qword_1ED78D818);
          v99 = sub_1C0D26360();
          sub_1C078A67C(v99, (uint64_t)v178, &qword_1ED762B50);
          v177 = *(_QWORD *)(v95 + 32);
          sub_1C077584C();
          sub_1C07B35DC((uint64_t)v178);
          sub_1C08FD4A0((uint64_t)&v177);
          sub_1C077584C();
          sub_1C07B35DC((uint64_t)v178);
          sub_1C08FD4A0((uint64_t)&v177);
          sub_1C106F538();
          v100 = sub_1C077CF00();
          if (sub_1C07825D0(v100))
          {
            v101 = (_DWORD *)sub_1C0775854();
            v102 = sub_1C0775854();
            sub_1C0D260B4(v102);
            *v101 = 136315138;
            sub_1C077584C();
            v103 = sub_1C07AFE8C();
            sub_1C07BAC00(v103);
            sub_1C07758A4();
            sub_1C0D26224();
            sub_1C0D26620();
            sub_1C0778580();
            sub_1C0D26224();
            sub_1C0D26620();
            v104 = "Mapping error type is not recognized as an EntityClass %s";
            goto LABEL_39;
          }
          sub_1C0778580();
          sub_1C0D26224();
          sub_1C0D26620();
          sub_1C0778580();
          sub_1C0D26224();
          v111 = &v177;
          goto LABEL_41;
        }
      }
      else
      {
        sub_1C0D26550(v94, &qword_1ED760400);
      }
      sub_1C0D264C4();
      sub_1C0D26284();
      if (!v113)
        swift_once();
      v105 = sub_1C077585C();
      sub_1C079E000(v105, (uint64_t)qword_1ED78D818);
      v106 = sub_1C0D26360();
      sub_1C078A67C(v106, (uint64_t)v180, &qword_1ED762B50);
      v179 = *(_QWORD *)(v95 + 32);
      sub_1C077584C();
      sub_1C07B35DC((uint64_t)v180);
      sub_1C08FD4A0((uint64_t)&v179);
      sub_1C077584C();
      sub_1C07B35DC((uint64_t)v180);
      sub_1C08FD4A0((uint64_t)&v179);
      sub_1C106F538();
      v107 = sub_1C077CF00();
      if (sub_1C07825D0(v107))
      {
        v108 = (_DWORD *)sub_1C0775854();
        v109 = sub_1C0775854();
        sub_1C0D260B4(v109);
        *v108 = 136315138;
        sub_1C077584C();
        v110 = sub_1C07AFE8C();
        sub_1C07BAC00(v110);
        sub_1C07758A4();
        sub_1C0D2612C();
        sub_1C0D264F4();
        sub_1C0778580();
        sub_1C0D2612C();
        sub_1C0D264F4();
        v104 = "Mapping error missing type for  %s";
LABEL_39:
        sub_1C0792EA0(&dword_1C0771000, v84, OS_LOG_TYPE_DEFAULT, v104);
        sub_1C0778610();
        sub_1C0776778();
      }
      sub_1C0778580();
      sub_1C0D2612C();
      sub_1C0D264F4();
      sub_1C0778580();
      sub_1C0D2612C();
      v111 = &v179;
LABEL_41:
      sub_1C08EE9A0((uint64_t)v111);

      sub_1C081F128();
      sub_1C0775810();
      sub_1C0782BFC(v112, 1);
      sub_1C078E0D0((uint64_t)v170);

      goto LABEL_42;
    }
  }
  else
  {
    sub_1C0D26550(v81, &qword_1ED760400);
  }
  sub_1C0D264C4();
  sub_1C0D26284();
  if (!v113)
    swift_once();
  v87 = sub_1C077585C();
  sub_1C079E000(v87, (uint64_t)qword_1ED78D818);
  v88 = sub_1C0D26360();
  sub_1C078A67C(v88, (uint64_t)v182, &qword_1ED762B50);
  v181 = *(_QWORD *)(v82 + 32);
  sub_1C077584C();
  sub_1C07B35DC((uint64_t)v182);
  sub_1C08FD4A0((uint64_t)&v181);
  sub_1C077584C();
  sub_1C07B35DC((uint64_t)v182);
  sub_1C08FD4A0((uint64_t)&v181);
  sub_1C106F538();
  v89 = sub_1C077CF00();
  if (sub_1C07825D0(v89))
  {
    v90 = (_DWORD *)sub_1C0775854();
    v91 = sub_1C0775854();
    sub_1C0D260B4(v91);
    *v90 = 136315138;
    sub_1C077584C();
    v92 = sub_1C07AFE8C();
    sub_1C07AEA58(v92);
    sub_1C07758A4();
    sub_1C0D26184();
    sub_1C0D2621C();
    sub_1C0778580();
    sub_1C0D26184();
    sub_1C0D2621C();
    sub_1C0792EA0(&dword_1C0771000, v68, OS_LOG_TYPE_DEFAULT, "Mapping error missing property map for  %s");
    sub_1C0778610();
    sub_1C0776778();
  }
  sub_1C0778580();
  sub_1C0D26184();
  sub_1C0D2621C();
  sub_1C0778580();
  sub_1C0D26184();
  sub_1C0D2621C();

  sub_1C081F128();
  sub_1C0775810();
  sub_1C0782BFC(v93, 1);
  sub_1C078E0D0((uint64_t)v170);
LABEL_42:
  sub_1C07757D0();
}

void sub_1C0D24234(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,void (*a22)(uint64_t),void (*a23)(uint64_t))
{
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  id v65;
  uint64_t v66;
  uint64_t v67;
  void (*v68)(uint64_t);
  uint64_t v69;
  void *v70;
  id v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  os_log_type_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  _BYTE *v80;
  uint64_t v81;
  void *v82;
  id v83;
  uint64_t v84;
  os_log_type_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  _BYTE *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  os_log_type_t v94;
  void (*v95)(uint64_t);
  uint64_t v96;
  os_log_type_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  const char *v102;
  uint64_t v103;
  os_log_type_t v104;
  uint64_t v105;
  uint64_t v106;
  _BYTE *v107;
  char v108;
  uint64_t v109;
  uint64_t v110;
  void (*v111)(uint64_t);
  os_log_type_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  unint64_t v116;
  uint64_t v117;
  uint64_t (*v118)(void);
  uint64_t v119;
  NSObject *v120;
  unint64_t v121;
  unint64_t v122;
  os_log_type_t v123;
  uint8_t *v124;
  uint64_t v125;
  uint64_t v126;
  char *v127;
  void (*v128)(uint64_t);
  void *v129;
  os_log_type_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  _BYTE *v135;
  uint64_t v136;
  NSObject *v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141[2];
  _QWORD v142[2];
  id v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  void (*v147)(uint64_t);
  uint64_t v148;
  uint64_t v149;
  os_log_type_t v150;
  uint64_t v151[3];
  uint64_t v152;

  sub_1C077AE5C();
  a19 = v28;
  a20 = v29;
  sub_1C0D265AC();
  v142[1] = v30;
  v141[1] = v31;
  v33 = v32;
  v144 = v34;
  v141[0] = v35;
  v36 = sub_1C0D260CC();
  sub_1C077B58C(v36, (uint64_t)&a10);
  sub_1C0787718(v37);
  MEMORY[0x1E0C80A78](v38);
  sub_1C077AE40();
  v40 = sub_1C0D25DB0(v39);
  sub_1C077B58C(v40, (uint64_t)&a13);
  sub_1C0787718(v41);
  MEMORY[0x1E0C80A78](v42);
  sub_1C077AE40();
  v138 = sub_1C07BA100(v43);
  sub_1C0787718(*(_QWORD *)(v138 - 8));
  MEMORY[0x1E0C80A78](v44);
  sub_1C077AED0();
  sub_1C077AF60();
  MEMORY[0x1E0C80A78](v45);
  sub_1C0778674();
  v140 = sub_1C0775C28(v46);
  sub_1C0787718(*(_QWORD *)(v140 - 8));
  MEMORY[0x1E0C80A78](v47);
  v142[0] = sub_1C07A3B30();
  sub_1C0787718(*(_QWORD *)(v142[0] - 8));
  MEMORY[0x1E0C80A78](v48);
  sub_1C077AED0();
  sub_1C077AF60();
  MEMORY[0x1E0C80A78](v49);
  sub_1C077AF60();
  MEMORY[0x1E0C80A78](v50);
  sub_1C0778674();
  v145 = v51;
  sub_1C07ACF80(&qword_1ED7618D0);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v52);
  sub_1C0D25D94();
  sub_1C0863000();
  MEMORY[0x1E0C80A78](v53);
  sub_1C077AED0();
  sub_1C077AF60();
  MEMORY[0x1E0C80A78](v54);
  sub_1C0D26784();
  MEMORY[0x1E0C80A78](v55);
  sub_1C0D26730(v56, v57, v58, v59, v60, v61, v62, v63, v136);
  a10 = (void *)MEMORY[0x1E0DEE9D8];
  sub_1C07A2A88();
  v64 = sub_1C077C964();
  v146 = v33;
  v65 = sub_1C0D265C4(v64, sel___swift_objectForKeyedSubscript_);
  sub_1C077853C();
  v148 = v24;
  if (v65)
  {
    sub_1C0D2664C();
    v66 = swift_unknownObjectRelease();
  }
  else
  {
    sub_1C0776B50();
  }
  v68 = a23;
  v147 = a22;
  sub_1C07824E4(v66, v67, &qword_1ED760400);
  if (!v152)
  {
    sub_1C0784F34(v69, &qword_1ED760400);
    goto LABEL_9;
  }
  sub_1C0D260D4();
  if ((sub_1C0788A68() & 1) == 0)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    sub_1C07BB2C4();
    if (!v108)
      swift_once();
    v74 = sub_1C077585C();
    sub_1C0D258FC(v74, (uint64_t)qword_1ED78D818);
    sub_1C106F538();
    v75 = sub_1C077CF00();
    if (sub_1C0775B94(v75))
    {
      sub_1C0775854();
      v76 = sub_1C0775854();
      sub_1C0D25B30(v76);
      sub_1C07A606C(4.8149e-34);
      v77 = sub_1C07B43F4();
      sub_1C0791588(v77);
      sub_1C0775894();
      v68(0x1ED761000);
      sub_1C078B12C(&dword_1C0771000, v78, v79, "Mapping error, nested entity missing metadata in map, %s");
      sub_1C07A33E4();
      sub_1C0776778();
    }
    v68(0x1ED761000);

    sub_1C081F128();
    sub_1C0775810();
    sub_1C0782BFC(v80, 1);
    goto LABEL_41;
  }
  sub_1C0D25A98((uint64_t)&v149);
  v70 = (void *)sub_1C077C964();
  v71 = sub_1C0784EE0((uint64_t)v70, sel___swift_objectForKeyedSubscript_);
  sub_1C077F634();
  if (v71)
  {
    sub_1C0D25CBC();
    v72 = sub_1C077853C();
  }
  else
  {
    sub_1C0776B50();
  }
  sub_1C07824E4(v72, v73, &qword_1ED760400);
  if (v152)
  {
    if ((sub_1C0788A68() & 1) != 0)
    {
      sub_1C0D2640C(v149);
      v82 = (void *)sub_1C077C964();
      v83 = sub_1C0784EE0((uint64_t)v82, sel___swift_objectForKeyedSubscript_);
      sub_1C077F634();
      if (v83)
      {
        sub_1C0D25CBC();
        sub_1C077853C();
      }
      else
      {
        sub_1C0776B50();
      }
      sub_1C0D264DC();
      sub_1C07824E4(v91, v92, &qword_1ED760400);
      if (v152)
      {
        if ((sub_1C077C458() & 1) != 0)
        {
          v94 = v150;
          sub_1C077584C();
          sub_1C0D26474();
          sub_1C077AEEC(v26, 1, (uint64_t)v82);
          if (!v108)
          {
            sub_1C077CF74((uint64_t)v143, v26, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v27 + 32));
            sub_1C07BB2C4();
            if (!v108)
              swift_once();
            v109 = sub_1C077585C();
            sub_1C079E000(v109, (uint64_t)qword_1ED78D818);
            v110 = sub_1C0D262D8();
            v111(v110);
            sub_1C07767CC();
            sub_1C0D26718((uint64_t)&v146);
            v112 = sub_1C077B0C0();
            if (sub_1C078ABF4(v112))
            {
              v113 = sub_1C0775854();
              v151[0] = sub_1C0775854();
              *(_DWORD *)v113 = 136381187;
              _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
              v114 = sub_1C0788DAC(v141[0], v144, v151);
              sub_1C078BBC0(v114);
              sub_1C077CF6C();
              *(_WORD *)(v113 + 12) = 2080;
              sub_1C0794BAC(&qword_1ED759F68, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3BB08], MEMORY[0x1E0D3BB40]);
              v115 = sub_1C0D262A8((uint64_t)v141);
              v117 = sub_1C07892FC(v115, v116);
              sub_1C0D267DC(v117);
              sub_1C07878C8();
              sub_1C077960C();
              sub_1C0790874();
              sub_1C077EDAC(v118);
              sub_1C07BC324();
              sub_1C0D261E4(&dword_1C0771000, v137, "Source: generating identifier for: %{private}s : %s : %{BOOL}d", (uint64_t)v142 + 4);
              sub_1C078C0F8();
              sub_1C0776778();
            }
            sub_1C07758A4();
            sub_1C077EDAC(*(uint64_t (**)(void))(v27 + 8));

            v119 = v148;
            v151[0] = v141[0];
            v151[1] = v144;
            sub_1C077C0B8();
            sub_1C0793C30();
            sub_1C0D267B0();
            v120 = sub_1C0D26048();
            v122 = v121;
            (*(void (**)(uint64_t, uint64_t))(v139 + 8))(v25, v140);
            if (v122 >> 60 != 15)
            {
              sub_1C077B5B4();
              sub_1C0794BAC((unint64_t *)&qword_1ED762B30, (uint64_t (*)(uint64_t))MEMORY[0x1E0CA9940], MEMORY[0x1E0CA9930]);
              sub_1C07AF4C4();
              v127 = (char *)&loc_1C0D24C04 + dword_1C0D25464[v122 >> 62];
              v144 = v122;
              __asm { BR              X10 }
            }
            sub_1C077AEBC();
            sub_1C078C354();
            v123 = sub_1C077CF00();
            if (sub_1C0775B94(v123))
            {
              v124 = (uint8_t *)sub_1C0775854();
              v125 = sub_1C0775854();
              sub_1C0D266EC(v125);
              *(_DWORD *)v124 = 136380675;
              sub_1C077AEBC();
              v126 = sub_1C0D261C4();
              sub_1C07AC49C(v126);
              sub_1C077CF6C();
              sub_1C07796F0(&dword_1C0771000, v120, v94, "Source: failed to encode identifier as UTF8 data: %{private}s", v124);
              sub_1C0778610();
              sub_1C0776778();
            }

            sub_1C07758A4();
            v128 = v147;
            v129 = a10;
            sub_1C078F230();
            sub_1C07767AC();
            v128(v119);
            sub_1C106F538();
            v130 = sub_1C077CF00();
            if (sub_1C0775B94(v130))
            {
              sub_1C0775854();
              v131 = sub_1C0775854();
              sub_1C0D25B30(v131);
              sub_1C07A606C(4.8149e-34);
              v132 = sub_1C07B43F4();
              sub_1C0791588(v132);
              sub_1C0775894();
              sub_1C079F0B4();
              sub_1C078B12C(&dword_1C0771000, v133, v134, "Mapping error failed to generate EntityIdentifier for %s");
              sub_1C07A33E4();
              sub_1C0776778();
            }
            sub_1C079F0B4();

            sub_1C0D26618();
            sub_1C0775810();
            sub_1C0782BFC(v135, 5);

            sub_1C078E0D0((uint64_t)&v148);
            v128((uint64_t)v143);
            goto LABEL_41;
          }
          v95 = v68;
          v82 = a10;
          sub_1C0778580();
          sub_1C07767AC();
          sub_1C0784B6C(v26, &qword_1ED7618D0);
          sub_1C07BB2C4();
          if (!v108)
            swift_once();
          v96 = sub_1C077585C();
          sub_1C0D258FC(v96, (uint64_t)qword_1ED78D818);
          sub_1C106F538();
          v97 = sub_1C077CF00();
          if (sub_1C0775B94(v97))
          {
            sub_1C0775854();
            v98 = sub_1C0775854();
            sub_1C0D25B30(v98);
            sub_1C07A606C(4.8149e-34);
            v99 = sub_1C07B43F4();
            sub_1C0791588(v99);
            sub_1C0775894();
            sub_1C079F0B4();
            v102 = "Mapping error type is not recognized as an EntityClass %s";
            goto LABEL_39;
          }
          goto LABEL_40;
        }
      }
      else
      {
        sub_1C0784F34(v93, &qword_1ED760400);
      }
      v95 = v68;
      sub_1C077978C();
      sub_1C07BB2C4();
      if (!v108)
        swift_once();
      v103 = sub_1C077585C();
      sub_1C0D258FC(v103, (uint64_t)qword_1ED78D818);
      sub_1C106F538();
      v104 = sub_1C077CF00();
      if (sub_1C0775B94(v104))
      {
        sub_1C0775854();
        v105 = sub_1C0775854();
        sub_1C0D25B30(v105);
        sub_1C07A606C(4.8149e-34);
        v106 = sub_1C07B43F4();
        sub_1C0791588(v106);
        sub_1C0775894();
        sub_1C079F0B4();
        v102 = "Mapping error missing type for  %s";
LABEL_39:
        sub_1C078B12C(&dword_1C0771000, v100, v101, v102);
        sub_1C07A33E4();
        sub_1C0776778();
      }
LABEL_40:
      sub_1C079F0B4();

      sub_1C081F128();
      sub_1C0775810();
      sub_1C0782BFC(v107, 1);

      sub_1C078E0D0((uint64_t)&v148);
      goto LABEL_41;
    }
  }
  else
  {
    sub_1C0784F34(v81, &qword_1ED760400);
  }
  sub_1C077978C();
  sub_1C07BB2C4();
  if (!v108)
    swift_once();
  v84 = sub_1C077585C();
  sub_1C0D258FC(v84, (uint64_t)qword_1ED78D818);
  sub_1C106F538();
  v85 = sub_1C077CF00();
  if (sub_1C0775B94(v85))
  {
    sub_1C0775854();
    v86 = sub_1C0775854();
    sub_1C0D25B30(v86);
    sub_1C07A606C(4.8149e-34);
    v87 = sub_1C07B43F4();
    sub_1C0791588(v87);
    sub_1C0775894();
    sub_1C079F0B4();
    sub_1C078B12C(&dword_1C0771000, v88, v89, "Mapping error missing property map for  %s");
    sub_1C07A33E4();
    sub_1C0776778();
  }
  sub_1C079F0B4();

  sub_1C081F128();
  sub_1C0775810();
  sub_1C0782BFC(v90, 1);

LABEL_41:
  sub_1C07757D0();
}

unint64_t sub_1C0D25474()
{
  unint64_t result;

  result = qword_1EF647EE0;
  if (!qword_1EF647EE0)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10B63C8, &type metadata for SocialMediaProfile.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF647EE0);
  }
  return result;
}

unint64_t sub_1C0D254B0(uint64_t a1)
{
  unint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1C0D254DC();
  result = sub_1C0D25518();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1C0D254DC()
{
  unint64_t result;

  result = qword_1EF647EF0;
  if (!qword_1EF647EF0)
  {
    result = MEMORY[0x1C3BA8174](&protocol conformance descriptor for SocialMediaProfile, &type metadata for SocialMediaProfile);
    atomic_store(result, (unint64_t *)&qword_1EF647EF0);
  }
  return result;
}

unint64_t sub_1C0D25518()
{
  unint64_t result;

  result = qword_1EF647EF8;
  if (!qword_1EF647EF8)
  {
    result = MEMORY[0x1C3BA8174](&protocol conformance descriptor for SocialMediaProfile, &type metadata for SocialMediaProfile);
    atomic_store(result, (unint64_t *)&qword_1EF647EF8);
  }
  return result;
}

ValueMetadata *type metadata accessor for SocialMediaProfile()
{
  return &type metadata for SocialMediaProfile;
}

uint64_t storeEnumTagSinglePayload for SocialMediaProfile.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1C0D255B0 + 4 * byte_1C10B6275[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1C0D255E4 + 4 * byte_1C10B6270[v4]))();
}

uint64_t sub_1C0D255E4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C0D255EC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C0D255F4);
  return result;
}

uint64_t sub_1C0D25600(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C0D25608);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1C0D2560C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C0D25614(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SocialMediaProfile.CodingKeys()
{
  return &type metadata for SocialMediaProfile.CodingKeys;
}

unint64_t sub_1C0D25634()
{
  unint64_t result;

  result = qword_1EF647F00;
  if (!qword_1EF647F00)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10B63A0, &type metadata for SocialMediaProfile.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF647F00);
  }
  return result;
}

unint64_t sub_1C0D25674()
{
  unint64_t result;

  result = qword_1EF647F08;
  if (!qword_1EF647F08)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10B6310, &type metadata for SocialMediaProfile.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF647F08);
  }
  return result;
}

unint64_t sub_1C0D256B4()
{
  unint64_t result;

  result = qword_1EF647F10;
  if (!qword_1EF647F10)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10B6338, &type metadata for SocialMediaProfile.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF647F10);
  }
  return result;
}

unint64_t sub_1C0D256F0()
{
  unint64_t result;

  result = qword_1EF647F18;
  if (!qword_1EF647F18)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EF647F18);
  }
  return result;
}

void sub_1C0D2572C()
{
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C077AE90();
  sub_1C07796D8();
  sub_1C077671C();
}

void sub_1C0D25760()
{
  sub_1C0D264A4();
  sub_1C0775844();
  sub_1C077960C();
  sub_1C077671C();
}

void sub_1C0D25788()
{
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C07796D8();
  sub_1C077AE90();
  sub_1C077671C();
}

void sub_1C0D257C0()
{
  sub_1C0D264A4();
  sub_1C077960C();
  sub_1C0775844();
  sub_1C077671C();
}

void sub_1C0D257E8()
{
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C077AE90();
  sub_1C07796D8();
  sub_1C077671C();
}

void sub_1C0D2581C()
{
  swift_bridgeObjectRelease();
  sub_1C077960C();
  sub_1C0775844();
  sub_1C077671C();
}

uint64_t sub_1C0D25850()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 16);
  v3 = *(_QWORD *)(v1 - 440);
  v4 = *(_QWORD *)(v1 - 600);
  v5 = *(_QWORD *)(v1 - 608);
  *(_QWORD *)(v1 - 368) = v2;
  return v2(v3, v4, v5);
}

uint64_t sub_1C0D25884()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(_QWORD, _QWORD, uint64_t);

  v3 = *(uint64_t (**)(_QWORD, _QWORD, uint64_t))(*(_QWORD *)(v2 - 696) + 32);
  *(_QWORD *)(v2 - 280) = v1;
  return v3(*(_QWORD *)(v2 - 800), *(_QWORD *)(v2 - 504), v0);
}

uint64_t sub_1C0D258B4()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD, _QWORD, _QWORD))(v0 - 368))(*(_QWORD *)(v0 - 784), *(_QWORD *)(v0 - 600), *(_QWORD *)(v0 - 608));
}

void sub_1C0D258E4()
{
  sub_1C07EB0C4();
}

uint64_t sub_1C0D258FC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1C079E000(a1, a2);
  return (*(uint64_t (**)(_QWORD))(v2 - 192))(*(_QWORD *)(v2 - 184));
}

void sub_1C0D25918()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;

  v5 = *(void **)(v4 - 568);
  *(_QWORD *)(v4 - 472) = v2;
  sub_1C0D5572C(v5, v2, v1, v3, v0);
}

void sub_1C0D25944(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t *a10)
{
  uint64_t v10;
  uint64_t v11;

  sub_1C0D1AB28(*(_QWORD *)(v11 - 240), *(_QWORD *)(v11 - 200), *(_QWORD *)(v11 - 208), *(_QWORD *)(v11 - 216), v10, *(_QWORD *)(v11 - 336), *(unsigned int *)(v11 - 340), a8, a9, a10);
}

void sub_1C0D25970(void *a1@<X0>, NSObject *a2@<X1>, const char *a3@<X3>, uint64_t a4@<X8>)
{
  uint8_t *v4;

  _os_log_impl(a1, a2, (os_log_type_t)*(_DWORD *)(a4 - 256), a3, v4, 0x1Cu);
}

uint64_t sub_1C0D25980()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD, _QWORD, _QWORD))(v0 - 416))(*(_QWORD *)(v0 - 320), *(_QWORD *)(v0 - 408), *(_QWORD *)(v0 - 448));
}

uint64_t sub_1C0D259A8()
{
  return sub_1C106E518();
}

void sub_1C0D259B8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t (*v2)(_QWORD);
  uint64_t v3;
  uint64_t v4;

  v4 = *(_QWORD *)(v3 - 296);
  *v0 = *(_QWORD *)(v3 - 288);
  v0[1] = v4;
  sub_1C07E05C8((uint64_t)v0, v1, v2);
}

uint64_t sub_1C0D259E0()
{
  return sub_1C107063C();
}

uint64_t sub_1C0D259E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)(a4 + 16) = v5;
  return v4;
}

uint64_t sub_1C0D25A18()
{
  uint64_t v0;

  *(_DWORD *)(v0 - 160) = 0;
  return sub_1C10705AC();
}

uint64_t sub_1C0D25A38@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(uint64_t, uint64_t, _QWORD)@<X8>)
{
  uint64_t v3;

  return a3(a1, a2, *(_QWORD *)(v3 - 256));
}

uint64_t sub_1C0D25A44()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(_QWORD, uint64_t, uint64_t))(*(_QWORD *)(v2 - 744) + 32))(*(_QWORD *)(v2 - 752), v0, v1);
}

void sub_1C0D25A68()
{
  sub_1C07EB0C4();
}

uint64_t sub_1C0D25A74()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD, uint64_t, _QWORD))(*(_QWORD *)(v1 - 272) + 32))(*(_QWORD *)(v1 - 240), v0, *(_QWORD *)(v1 - 264));
}

void sub_1C0D25A98(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(a1 - 256) = v1;
  *(_QWORD *)(v2 - 160) = 0x79747265706F7270;
  *(_QWORD *)(v2 - 152) = 0xEB0000000070614DLL;
}

uint64_t sub_1C0D25AC4@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 336) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
  return sub_1C106E41C();
}

uint64_t sub_1C0D25AE8@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 344) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
  return type metadata accessor for EntityTriple(0);
}

uint64_t sub_1C0D25B0C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(_QWORD, uint64_t, uint64_t))(v2 + 32))(*(_QWORD *)(v3 - 448), v0, v1);
}

uint64_t sub_1C0D25B30(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 128) = result;
  return result;
}

uint64_t sub_1C0D25B3C()
{
  uint64_t v0;

  return sub_1C08EE9A0(v0 - 96);
}

void sub_1C0D25B44(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 - 392) = (a1 - 1) & a1;
  *(_QWORD *)(v2 - 384) = v1;
}

uint64_t sub_1C0D25B6C(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 176) = a1;
  return sub_1C10705AC();
}

void sub_1C0D25B8C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 - 392) = (v1 - 1) & v1;
  *(_QWORD *)(v2 - 384) = v0;
}

void sub_1C0D25BB4(uint64_t *a1@<X1>, uint64_t a2@<X8>)
{
  sub_1C0784B6C(*(_QWORD *)(a2 - 256), a1);
}

void sub_1C0D25BBC(uint64_t a1@<X8>)
{
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)(a1 + 48) = v1;
  *(_QWORD *)(a1 + 56) = v3;
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(v5 - 256);
  *(_QWORD *)(a1 + 72) = v4;
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(v5 - 264);
  *(_BYTE *)(a1 + 88) = v2;
}

uint64_t sub_1C0D25BE4@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 232) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
  return sub_1C106F868();
}

uint64_t sub_1C0D25C04()
{
  uint64_t v0;

  return sub_1C08EE9A0(v0 - 112);
}

uint64_t sub_1C0D25C0C(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 264) = a1;
  return sub_1C10705AC();
}

uint64_t sub_1C0D25C28()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, _QWORD))(v0 + 8))(v1, *(_QWORD *)(v2 - 232));
}

void sub_1C0D25C38(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;

  sub_1C078A8F8(a1, v2, v1);
}

uint64_t sub_1C0D25C44()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v0, v1);
}

void sub_1C0D25C78(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  sub_1C078A67C(v3 - 176, v3 - 144, a3);
}

uint64_t sub_1C0D25C84()
{
  return swift_arrayDestroy();
}

uint64_t sub_1C0D25CA0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  return (*(uint64_t (**)(uint64_t, uint64_t, _QWORD))(v0 + 16))(v3 + *(int *)(v2 + 24), v1, *(_QWORD *)(v4 - 656));
}

uint64_t sub_1C0D25CBC()
{
  return sub_1C107063C();
}

uint64_t sub_1C0D25CC8()
{
  return sub_1C106F85C();
}

void sub_1C0D25CE4()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  sub_1C078A8F8(*(_QWORD *)(v3 - 336), v0 + *(int *)(v2 + 28), v1);
}

uint64_t sub_1C0D25D00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;

  *(_QWORD *)(v10 - 768) = (char *)&a9 - v9;
  return sub_1C106EB24();
}

uint64_t sub_1C0D25D1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;

  *(_QWORD *)(v10 - 440) = (char *)&a9 - v9;
  return type metadata accessor for MapPredicate(0);
}

uint64_t sub_1C0D25D38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;

  *(_QWORD *)(v10 - 704) = (char *)&a9 - v9;
  return sub_1C106E590();
}

void sub_1C0D25D54()
{
  sub_1C07EB0C4();
}

uint64_t sub_1C0D25D5C()
{
  return sub_1C106D1F8();
}

uint64_t sub_1C0D25D78()
{
  return sub_1C106F868();
}

uint64_t sub_1C0D25D94()
{
  return sub_1C106D1F8();
}

uint64_t sub_1C0D25DB0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 256) = a1;
  return sub_1C106F874();
}

uint64_t sub_1C0D25DC0()
{
  return sub_1C106FC94();
}

uint64_t sub_1C0D25DD0(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)(v4 - 72) = result;
  v5 = *(_QWORD *)(v1 + 16);
  *(_QWORD *)(v4 - 464) = v3;
  *(_QWORD *)(v4 - 424) = v2;
  *(_QWORD *)(v4 - 576) = v5;
  return result;
}

void sub_1C0D25DF4(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,void (*a22)(uint64_t *),void (*a23)(uint64_t *))
{
  uint64_t v23;

  sub_1C0D161AC(a1, a2, a3, a4, a5, a6, a7, a8, v23, a9, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23);
}

uint64_t sub_1C0D25DFC(uint64_t a1, uint64_t a2)
{
  return sub_1C0D3BCC4(a1, a2);
}

void sub_1C0D25E04(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 - 272) = a1;
  *(_QWORD *)(v2 - 264) = v1;
}

uint64_t sub_1C0D25E18()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 272) = v0;
  return swift_bridgeObjectRetain_n();
}

void sub_1C0D25E30()
{
  sub_1C07EB69C();
}

uint64_t sub_1C0D25E58()
{
  return sub_1C106E518();
}

uint64_t sub_1C0D25E70()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 312) + 8))(v0, v1);
}

double sub_1C0D25E88()
{
  uint64_t v0;
  double result;

  result = 0.0;
  *(_OWORD *)(v0 - 256) = 0u;
  *(_OWORD *)(v0 - 272) = 0u;
  return result;
}

uint64_t sub_1C0D25E9C()
{
  uint64_t v0;

  return sub_1C08203D8(v0 - 160);
}

uint64_t sub_1C0D25EC4(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 - 272) = v1;
  *(_QWORD *)(v2 - 280) = result;
  return result;
}

uint64_t sub_1C0D25EE4()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)(v1 - 232) + 8))(v0, *(_QWORD *)(v1 - 224));
}

uint64_t sub_1C0D25EFC()
{
  uint64_t v0;
  unint64_t v1;

  return sub_1C07B0E28(v0, v1);
}

uint64_t sub_1C0D25F14()
{
  return sub_1C106F850();
}

uint64_t sub_1C0D25F2C()
{
  uint64_t v0;
  unint64_t v1;

  sub_1C07B3594(v0, v1);
  return swift_retain();
}

void sub_1C0D25F54()
{
  uint64_t v0;

  *(_DWORD *)(v0 - 376) = 1;
}

BOOL sub_1C0D25F90(os_log_type_t a1)
{
  NSObject *v1;
  uint64_t v2;

  *(_DWORD *)(v2 - 388) = a1;
  return os_log_type_enabled(v1, a1);
}

uint64_t sub_1C0D25FA4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  sub_1C07B33B8(v1, v3);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v4, v0);
}

uint64_t sub_1C0D25FE4()
{
  uint64_t v0;

  *(_WORD *)(v0 + 12) = 2080;
  return sub_1C106D090();
}

void sub_1C0D25FF8(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  sub_1C078A67C(v3 - 272, v3 - 240, a3);
}

uint64_t sub_1C0D26004()
{
  uint64_t v0;

  return *(_QWORD *)(v0 - 400);
}

uint64_t sub_1C0D26020@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(a1 - 256) = v1;
  return sub_1C106F538();
}

void sub_1C0D26028()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;

  sub_1C078A67C(*(_QWORD *)(v2 - 368), v1, v0);
}

uint64_t sub_1C0D26048()
{
  return sub_1C106FB20();
}

uint64_t sub_1C0D2605C()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t, _QWORD);
  uint64_t v2;

  return v1(v0, *(_QWORD *)(v2 - 560));
}

uint64_t sub_1C0D26070@<X0>(uint64_t a1@<X8>)
{
  return *(_QWORD *)(a1 - 256);
}

uint64_t sub_1C0D2607C()
{
  return sub_1C0D378E0();
}

uint64_t sub_1C0D26084()
{
  uint64_t v0;
  unint64_t v1;

  return sub_1C07B0E28(v0, v1);
}

uint64_t sub_1C0D26098()
{
  return sub_1C107063C();
}

void sub_1C0D260A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;

  sub_1C078A8F8(v2, v0 + *(int *)(v1 + 24), v3);
}

uint64_t sub_1C0D260B4(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 240) = result;
  return result;
}

uint64_t sub_1C0D260C0@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v1, v2);
}

uint64_t sub_1C0D260CC()
{
  return type metadata accessor for EntityTriple(0);
}

unint64_t sub_1C0D260D4()
{
  return sub_1C0D256F0();
}

uint64_t sub_1C0D260DC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v2 = v0[1];
  *(_QWORD *)(v1 - 120) = *v0;
  *(_QWORD *)(v1 - 112) = v2;
  return _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
}

uint64_t sub_1C0D260E8()
{
  return sub_1C106EAD0();
}

uint64_t sub_1C0D260FC()
{
  uint64_t v0;

  return *(_QWORD *)(v0 - 640);
}

uint64_t sub_1C0D26118(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 120) = result;
  return result;
}

uint64_t sub_1C0D26124()
{
  uint64_t v0;

  return sub_1C08FD4A0(v0 - 96);
}

uint64_t sub_1C0D2612C()
{
  uint64_t v0;

  return sub_1C07B2F5C(v0 - 144);
}

uint64_t sub_1C0D26134()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8))(v2, v0);
}

uint64_t sub_1C0D26144()
{
  uint64_t v0;

  return sub_1C08EE9A0(v0 - 200);
}

uint64_t sub_1C0D2614C(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 608) = result;
  return result;
}

uint64_t sub_1C0D26164()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD))(v0 - 400))(*(_QWORD *)(v0 - 184));
}

uint64_t sub_1C0D26174()
{
  unint64_t v0;
  uint64_t v1;

  return sub_1C0788DAC(*(_QWORD *)(v1 - 208), v0, (uint64_t *)(v1 - 144));
}

uint64_t sub_1C0D26184()
{
  uint64_t v0;

  return sub_1C07B2F5C(v0 - 120);
}

uint64_t sub_1C0D2618C()
{
  uint64_t v0;

  return *(_QWORD *)(v0 - 456);
}

void sub_1C0D261A4()
{
  uint64_t *v0;
  uint64_t v1;

  sub_1C0784B6C(*(_QWORD *)(v1 - 456), v0);
}

void sub_1C0D261B4()
{
  sub_1C07EA53C();
}

uint64_t sub_1C0D261C4()
{
  unint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return sub_1C0788DAC(v1, v0, (uint64_t *)(v2 - 128));
}

uint64_t sub_1C0D261D4()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  v1 = *(_QWORD **)(v0 - 200);
  v2 = v1[1];
  *(_QWORD *)(v0 - 144) = *v1;
  *(_QWORD *)(v0 - 136) = v2;
  return _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
}

void sub_1C0D261E4(void *a1@<X0>, NSObject *a2@<X1>, const char *a3@<X3>, uint64_t a4@<X8>)
{
  uint8_t *v4;

  _os_log_impl(a1, a2, (os_log_type_t)*(_DWORD *)(a4 - 256), a3, v4, 0x1Cu);
}

uint64_t sub_1C0D261F4()
{
  uint64_t v0;

  return sub_1C07B2F5C(v0 - 192);
}

uint64_t sub_1C0D261FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v2, v1);
}

uint64_t sub_1C0D2620C()
{
  return sub_1C106E218();
}

uint64_t sub_1C0D2621C()
{
  uint64_t v0;

  return sub_1C08EE9A0(v0 - 128);
}

uint64_t sub_1C0D26224()
{
  uint64_t v0;

  return sub_1C07B2F5C(v0 - 168);
}

void sub_1C0D2622C()
{
  sub_1C07E9E6C();
}

uint64_t sub_1C0D2623C()
{
  return sub_1C1070C0C();
}

uint64_t sub_1C0D2624C()
{
  return sub_1C1070C0C();
}

void sub_1C0D2625C()
{
  uint64_t v0;

  *(_WORD *)(v0 + 12) = 2080;
}

void sub_1C0D2626C()
{
  uint64_t v0;
  uint64_t v1;

  *(_WORD *)(v0 + 12) = 2080;
  *(_QWORD *)(v1 - 440) = v0 + 14;
}

uint64_t sub_1C0D262A8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(a1 - 256) = v1;
  return sub_1C1070C0C();
}

void sub_1C0D262B8()
{
  sub_1C0D56950();
}

uint64_t sub_1C0D262C8()
{
  uint64_t v0;

  *(_QWORD *)(v0 - 72) = *(_QWORD *)(v0 - 256);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C0D262D8()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1C0D262F0()
{
  return sub_1C1070D20();
}

uint64_t sub_1C0D262F8()
{
  return sub_1C106D090();
}

uint64_t sub_1C0D26320(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v3 - 128) = v1;
  *(_QWORD *)(v3 - 120) = v2;
  *(_QWORD *)(v3 - 264) = a1;
  return _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
}

void sub_1C0D26330()
{
  uint64_t (*v0)(_QWORD);
  uint64_t v1;

  sub_1C07B1F90(*(_QWORD *)(v1 - 768), v0);
}

void sub_1C0D26340()
{
  uint64_t *v0;
  uint64_t v1;

  sub_1C0784B6C(v1, v0);
}

uint64_t sub_1C0D26350()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v1, v2);
}

uint64_t sub_1C0D26360()
{
  uint64_t v0;

  return v0 + 16;
}

uint64_t sub_1C0D26370()
{
  uint64_t v0;
  uint64_t v1;

  sub_1C07B2D8C(v0, 0, 1, v1);
  return v0;
}

void sub_1C0D26398()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v4 = (_QWORD *)(v0 + *(int *)(v1 + 32));
  *v4 = v3;
  v4[1] = v2;
}

void sub_1C0D263C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;

  *(_QWORD *)(v10 - 240) = (char *)&a9 - v9;
}

uint64_t sub_1C0D263D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8))(v2, v0);
}

uint64_t sub_1C0D263E8()
{
  uint64_t v0;

  return sub_1C07B35DC(v0 - 104);
}

uint64_t sub_1C0D263F0()
{
  return swift_isUniquelyReferenced_nonNull_native();
}

uint64_t sub_1C0D26400(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 272) = result;
  return result;
}

void sub_1C0D2640C(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v1 - 256) = a1;
  *(_QWORD *)(v2 - 160) = 1701869940;
  *(_QWORD *)(v2 - 152) = 0xE400000000000000;
}

uint64_t sub_1C0D2643C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v0, v1);
}

uint64_t sub_1C0D2644C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

uint64_t sub_1C0D2645C()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1C0D26474()
{
  return sub_1C106D084();
}

uint64_t sub_1C0D26484()
{
  return swift_arrayInitWithCopy();
}

uint64_t sub_1C0D26494()
{
  return sub_1C106FC94();
}

uint64_t sub_1C0D264A4()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C0D264B4()
{
  uint64_t v0;

  return sub_1C07B35DC(v0 - 112);
}

uint64_t sub_1C0D264BC()
{
  uint64_t v0;

  return sub_1C08FD4A0(v0 - 112);
}

uint64_t sub_1C0D264C4()
{
  return swift_bridgeObjectRelease();
}

void sub_1C0D264CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t *a10)
{
  sub_1C0D1AB28(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10);
}

uint64_t sub_1C0D264D4()
{
  return sub_1C0D378E0();
}

void sub_1C0D264E8(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;

  sub_1C07B1F90(*(_QWORD *)(v2 - 432), a2);
}

uint64_t sub_1C0D264F4()
{
  uint64_t v0;

  return sub_1C08EE9A0(v0 - 152);
}

uint64_t sub_1C0D264FC(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 160) = a1;
  return v1 - 160;
}

uint64_t sub_1C0D26510(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 160) = a1;
  return v1 - 160;
}

uint64_t sub_1C0D26524(uint64_t a1, unint64_t a2)
{
  uint64_t v2;

  return sub_1C0788DAC(a1, a2, (uint64_t *)(v2 - 240));
}

void sub_1C0D2653C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 496) = v0;
}

uint64_t sub_1C0D26548()
{
  return swift_bridgeObjectRetain_n();
}

void sub_1C0D26550(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;

  sub_1C0784B6C(v2 - 240, a2);
}

uint64_t sub_1C0D26558()
{
  return sub_1C1070D20();
}

void sub_1C0D26574()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 392) = v0;
}

void sub_1C0D2658C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 - 400) = v1;
  *(_QWORD *)(v2 - 408) = v0;
}

uint64_t sub_1C0D265A0()
{
  return swift_release();
}

void sub_1C0D265AC()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 400) = v0;
}

uint64_t sub_1C0D265B8()
{
  unint64_t v0;
  uint64_t v1;

  return sub_1C07B33B8(v1, v0);
}

id sub_1C0D265C4(uint64_t a1, const char *a2)
{
  uint64_t v2;
  void *v3;

  return objc_msgSend(v3, a2, v2);
}

uint64_t sub_1C0D265D0()
{
  uint64_t v0;

  return *(_QWORD *)(v0 - 256);
}

uint64_t sub_1C0D265E4()
{
  return sub_1C1070390();
}

uint64_t sub_1C0D265EC()
{
  uint64_t v0;
  unint64_t v1;

  return sub_1C07B33B8(v0, v1);
}

void sub_1C0D265F8()
{
  uint64_t *v0;
  uint64_t v1;

  sub_1C0784B6C(v1, v0);
}

uint64_t sub_1C0D26604()
{
  uint64_t (*v0)(uint64_t, _QWORD);
  uint64_t v1;

  return v0(v1 - 256, 0);
}

void sub_1C0D26610()
{
  uint64_t v0;

}

unint64_t sub_1C0D26618()
{
  return sub_1C081F128();
}

uint64_t sub_1C0D26620()
{
  uint64_t v0;

  return sub_1C08EE9A0(v0 - 176);
}

uint64_t sub_1C0D26628@<X0>(uint64_t a1@<X8>)
{
  return *(_QWORD *)(a1 - 256);
}

uint64_t sub_1C0D26634()
{
  return sub_1C106E218();
}

double sub_1C0D26640()
{
  uint64_t v0;
  double result;

  result = 0.0;
  *(_OWORD *)(v0 - 176) = 0u;
  *(_OWORD *)(v0 - 160) = 0u;
  return result;
}

uint64_t sub_1C0D2664C()
{
  return sub_1C107063C();
}

void sub_1C0D26680()
{
  uint64_t v0;
  uint64_t (*v1)(_QWORD);

  sub_1C07B1F90(v0, v1);
}

uint64_t sub_1C0D2668C()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1C0D266A0()
{
  uint64_t v0;

  return v0;
}

void sub_1C0D266B4(_QWORD *a1@<X8>, double a2@<D0>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *a1 = v4;
  a1[1] = v5;
  *(double *)(v2 + *(int *)(v3 + 44)) = a2;
}

uint64_t sub_1C0D266C8()
{
  return sub_1C106E26C();
}

void sub_1C0D266D4()
{
  sub_1C07EB69C();
}

uint64_t sub_1C0D266E0()
{
  return sub_1C106EB0C();
}

uint64_t sub_1C0D266EC(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 128) = result;
  return result;
}

uint64_t sub_1C0D266F8()
{
  uint64_t v0;

  return *(_QWORD *)(v0 - 240);
}

uint64_t sub_1C0D2670C@<X0>(uint64_t a1@<X8>)
{
  return *(_QWORD *)(a1 - 256);
}

uint64_t sub_1C0D26718@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(a1 - 256) = v1;
  return sub_1C106F538();
}

uint64_t sub_1C0D26724()
{
  return sub_1C106F97C();
}

void sub_1C0D26730(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;

  *(_QWORD *)(v10 - 224) = (char *)&a9 - v9;
}

uint64_t sub_1C0D26758()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 272) = v0;
  return v0;
}

void sub_1C0D2676C()
{
  sub_1C0BD9D34();
}

uint64_t sub_1C0D26778()
{
  unint64_t v0;
  uint64_t v1;

  return sub_1C07B33B8(v1, v0);
}

uint64_t sub_1C0D26798()
{
  return sub_1C106FB44();
}

uint64_t sub_1C0D267A4(uint64_t a1, uint64_t a2)
{
  return sub_1C0D3BCC4(a1, a2);
}

uint64_t sub_1C0D267B0()
{
  return sub_1C106FB44();
}

uint64_t sub_1C0D267BC()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1C0D267D0()
{
  return sub_1C106FB44();
}

uint64_t sub_1C0D267DC(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 160) = a1;
  return v1 - 160;
}

uint64_t sub_1C0D267F0()
{
  return swift_unknownObjectRelease();
}

uint64_t sub_1C0D267FC(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 144) = result;
  return result;
}

void SoftwareMatcher.init(stores:source:pipelineType:)(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X2>, uint64_t a4@<X8>)
{
  char v7;
  int *v8;

  v7 = *a3;
  v8 = (int *)type metadata accessor for SoftwareMatcher();
  *(_DWORD *)(a4 + v8[7]) = 1056964608;
  sub_1C106D1EC();
  sub_1C07E05F4(a1, a4, (uint64_t (*)(_QWORD))type metadata accessor for PhaseStores);
  sub_1C07E05F4(a2, a4 + v8[5], (uint64_t (*)(_QWORD))type metadata accessor for Source);
  *(_BYTE *)(a4 + v8[6]) = v7;
}

uint64_t type metadata accessor for SoftwareMatcher()
{
  uint64_t result;

  result = qword_1ED75AFC0;
  if (!qword_1ED75AFC0)
    return swift_getSingletonMetadata();
  return result;
}

void SoftwareMatcher.stores.getter(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_1C07E05C8(v1, a1, (uint64_t (*)(_QWORD))type metadata accessor for PhaseStores);
}

void SoftwareMatcher.source.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = sub_1C0796AE0();
  sub_1C07E05C8(v1 + *(int *)(v2 + 20), v0, (uint64_t (*)(_QWORD))type metadata accessor for Source);
}

uint64_t SoftwareMatcher.pipelineType.getter()
{
  _BYTE *v0;
  uint64_t v1;
  uint64_t result;

  result = sub_1C0796AE0();
  *v0 = *(_BYTE *)(v1 + *(int *)(result + 24));
  return result;
}

void SoftwareMatcher.stageName.getter(_BYTE *a1@<X8>)
{
  *a1 = 2;
}

uint64_t SoftwareMatcher.entityClass.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = v1 + *(int *)(sub_1C0796AE0() + 32);
  v3 = sub_1C0776744();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(v0, v2, v3);
}

float sub_1C0D26998(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char v49;
  unint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t *v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char v63;
  float result;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;

  v67 = a2;
  v3 = sub_1C106E41C();
  v73 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v70 = (char *)&v65 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v65 - v6;
  v8 = type metadata accessor for EntityTriple(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v75 = (uint64_t)&v65 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v74 = (uint64_t)&v65 - v12;
  MEMORY[0x1E0C80A78](v13);
  v71 = (uint64_t)&v65 - v14;
  MEMORY[0x1E0C80A78](v15);
  v72 = (uint64_t)&v65 - v16;
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)&v65 - v18;
  v20 = MEMORY[0x1E0DEE9D8];
  v80 = MEMORY[0x1E0DEE9D8];
  v21 = *(_QWORD *)(a1 + 16);
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  v68 = v9;
  if (v21)
  {
    v22 = *(unsigned __int8 *)(v9 + 80);
    v23 = *(_QWORD *)(v9 + 72);
    v66 = a1;
    v69 = (v22 + 32) & ~v22;
    v24 = a1 + v69;
    while (1)
    {
      sub_1C07E05C8(v24, (uint64_t)v19, type metadata accessor for EntityTriple);
      sub_1C106DF90();
      sub_1C0794BAC(&qword_1ED75E7E0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3CC50], MEMORY[0x1E0D3CC80]);
      sub_1C106FE44();
      sub_1C106FE44();
      if (v78 == v76 && v79 == v77)
        break;
      v26 = sub_1C1070CB4();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v73 + 8))(v7, v3);
      if ((v26 & 1) != 0)
        goto LABEL_10;
      sub_1C07B1F90((uint64_t)v19, type metadata accessor for EntityTriple);
LABEL_15:
      v24 += v23;
      if (!--v21)
      {
        v29 = v80;
        v20 = MEMORY[0x1E0DEE9D8];
        goto LABEL_18;
      }
    }
    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v73 + 8))(v7, v3);
LABEL_10:
    sub_1C07E05F4((uint64_t)v19, v75, type metadata accessor for EntityTriple);
    v27 = v80;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_1C09D3F18();
      v27 = v80;
    }
    v28 = *(_QWORD *)(v27 + 16);
    if (v28 >= *(_QWORD *)(v27 + 24) >> 1)
    {
      sub_1C09D3F18();
      v27 = v80;
    }
    *(_QWORD *)(v27 + 16) = v28 + 1;
    sub_1C07E05F4(v75, v27 + v69 + v28 * v23, type metadata accessor for EntityTriple);
    goto LABEL_15;
  }
  v29 = v20;
LABEL_18:
  swift_bridgeObjectRelease();
  v30 = *(_QWORD *)(v29 + 16);
  v75 = v8;
  if (v30)
  {
    v78 = v20;
    sub_1C09D30E0();
    v31 = *(unsigned __int8 *)(v68 + 80);
    v69 = v29;
    v32 = v29 + ((v31 + 32) & ~v31);
    v33 = *(_QWORD *)(v68 + 72);
    do
    {
      v34 = v74;
      sub_1C07E05C8(v32, v74, type metadata accessor for EntityTriple);
      v35 = (uint64_t *)(v34 + *(int *)(v8 + 32));
      v36 = *v35;
      v37 = v35[1];
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      sub_1C07B1F90(v34, type metadata accessor for EntityTriple);
      v20 = v78;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1C09D30E0();
        v20 = v78;
      }
      v38 = *(_QWORD *)(v20 + 16);
      if (v38 >= *(_QWORD *)(v20 + 24) >> 1)
      {
        sub_1C09D30E0();
        v20 = v78;
      }
      *(_QWORD *)(v20 + 16) = v38 + 1;
      v39 = v20 + 16 * v38;
      *(_QWORD *)(v39 + 32) = v36;
      *(_QWORD *)(v39 + 40) = v37;
      v32 += v33;
      --v30;
      v8 = v75;
    }
    while (v30);
  }
  swift_release();
  sub_1C0898D28(v20);
  v66 = v40;
  v41 = MEMORY[0x1E0DEE9D8];
  v80 = MEMORY[0x1E0DEE9D8];
  v42 = *(_QWORD *)(v67 + 16);
  v43 = _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  v44 = v68;
  if (v42)
  {
    v45 = *(_QWORD *)(v68 + 72);
    v69 = (*(unsigned __int8 *)(v68 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v68 + 80);
    v46 = v43 + v69;
    v47 = v70;
    while (1)
    {
      sub_1C07E05C8(v46, v72, type metadata accessor for EntityTriple);
      sub_1C106DF90();
      sub_1C0794BAC(&qword_1ED75E7E0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3CC50], MEMORY[0x1E0D3CC80]);
      sub_1C106FE44();
      sub_1C106FE44();
      if (v78 == v76 && v79 == v77)
        break;
      v49 = sub_1C1070CB4();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v73 + 8))(v47, v3);
      if ((v49 & 1) != 0)
        goto LABEL_34;
      sub_1C07B1F90(v72, type metadata accessor for EntityTriple);
LABEL_39:
      v46 += v45;
      --v42;
      v47 = v70;
      if (!v42)
      {
        v52 = v80;
        v44 = v68;
        v41 = MEMORY[0x1E0DEE9D8];
        goto LABEL_42;
      }
    }
    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v73 + 8))(v47, v3);
LABEL_34:
    sub_1C07E05F4(v72, v71, type metadata accessor for EntityTriple);
    v50 = v80;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_1C09D3F18();
      v50 = v80;
    }
    v51 = *(_QWORD *)(v50 + 16);
    if (v51 >= *(_QWORD *)(v50 + 24) >> 1)
    {
      sub_1C09D3F18();
      v50 = v80;
    }
    *(_QWORD *)(v50 + 16) = v51 + 1;
    sub_1C07E05F4(v71, v50 + v69 + v51 * v45, type metadata accessor for EntityTriple);
    goto LABEL_39;
  }
  v52 = v41;
LABEL_42:
  swift_bridgeObjectRelease();
  v53 = *(_QWORD *)(v52 + 16);
  if (v53)
  {
    v78 = v41;
    sub_1C09D30E0();
    v54 = v52 + ((*(unsigned __int8 *)(v44 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v44 + 80));
    v55 = *(_QWORD *)(v44 + 72);
    do
    {
      v56 = v74;
      sub_1C07E05C8(v54, v74, type metadata accessor for EntityTriple);
      v57 = (uint64_t *)(v56 + *(int *)(v8 + 32));
      v59 = *v57;
      v58 = v57[1];
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      sub_1C07B1F90(v56, type metadata accessor for EntityTriple);
      v41 = v78;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1C09D30E0();
        v41 = v78;
      }
      v60 = *(_QWORD *)(v41 + 16);
      if (v60 >= *(_QWORD *)(v41 + 24) >> 1)
      {
        sub_1C09D30E0();
        v41 = v78;
      }
      *(_QWORD *)(v41 + 16) = v60 + 1;
      v61 = v41 + 16 * v60;
      *(_QWORD *)(v61 + 32) = v59;
      *(_QWORD *)(v61 + 40) = v58;
      v54 += v55;
      --v53;
      v8 = v75;
    }
    while (v53);
  }
  swift_release();
  sub_1C0898D28(v41);
  if (*(_QWORD *)(v66 + 16))
  {
    v63 = sub_1C0C30C8C(v62, v66);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    result = 1.0;
    if ((v63 & 1) != 0)
      return 0.0;
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return 1.0;
  }
  return result;
}

float sub_1C0D27124(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD), void (*a4)(uint64_t))
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  char v51;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t (*v62)(_QWORD);
  uint64_t *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char v70;
  float result;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  void (*v78)(uint64_t);
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t (*v87)(_QWORD);
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;

  v77 = a2;
  v78 = a4;
  v87 = a3;
  v86 = a3(0);
  v76 = *(_QWORD *)(v86 - 8);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v5);
  sub_1C077AED0();
  v75 = v6;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v7);
  v83 = (uint64_t)&v72 - v8;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v9);
  v85 = (uint64_t)&v72 - v10;
  v84 = *(_QWORD *)(sub_1C106E41C() - 8);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v72 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v15 = type metadata accessor for EntityTriple(0);
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  sub_1C077AED0();
  v82 = v17;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v18);
  v81 = (uint64_t)&v72 - v19;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v20);
  v22 = (char *)&v72 - v21;
  v23 = MEMORY[0x1E0DEE9D8];
  v92 = MEMORY[0x1E0DEE9D8];
  v24 = *(_QWORD *)(a1 + 16);
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  v80 = v13;
  if (v24)
  {
    v25 = *(unsigned __int8 *)(v16 + 80);
    v73 = v16;
    v74 = a1;
    v26 = *(_QWORD *)(v16 + 72);
    v79 = (v25 + 32) & ~v25;
    v27 = a1 + v79;
    while (1)
    {
      sub_1C07E05C8(v27, (uint64_t)v22, type metadata accessor for EntityTriple);
      sub_1C106DF90();
      sub_1C0794BAC(&qword_1ED75E7E0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3CC50], MEMORY[0x1E0D3CC80]);
      sub_1C07A6084();
      sub_1C07A6084();
      if (v90 == v88 && v91 == v89)
        break;
      sub_1C1070CB4();
      sub_1C079C594();
      swift_bridgeObjectRelease();
      sub_1C079E874();
      if ((v23 & 1) != 0)
        goto LABEL_10;
      sub_1C07B1F90((uint64_t)v22, type metadata accessor for EntityTriple);
LABEL_15:
      v27 += v26;
      if (!--v24)
      {
        v30 = v92;
        v16 = v73;
        goto LABEL_18;
      }
    }
    sub_1C0782990();
    sub_1C079E874();
LABEL_10:
    sub_1C07E05F4((uint64_t)v22, v82, type metadata accessor for EntityTriple);
    v29 = v92;
    if ((sub_1C077C09C() & 1) == 0)
    {
      sub_1C07A02C8();
      sub_1C09D3F18();
      v29 = v92;
    }
    v23 = *(_QWORD *)(v29 + 16);
    if (v23 >= *(_QWORD *)(v29 + 24) >> 1)
    {
      sub_1C09D3F18();
      v29 = v92;
    }
    *(_QWORD *)(v29 + 16) = v23 + 1;
    sub_1C07E05F4(v82, v29 + v79 + v23 * v26, type metadata accessor for EntityTriple);
    goto LABEL_15;
  }
  v30 = v23;
LABEL_18:
  swift_bridgeObjectRelease();
  v31 = *(_QWORD *)(v30 + 16);
  if (v31)
  {
    sub_1C07A3F20();
    v32 = *(unsigned __int8 *)(v16 + 80);
    v79 = v30;
    v33 = v30 + ((v32 + 32) & ~v32);
    v82 = *(_QWORD *)(v16 + 72);
    v34 = v15;
    do
    {
      v35 = v81;
      sub_1C07E05C8(v33, v81, type metadata accessor for EntityTriple);
      v36 = (uint64_t *)(v35 + *(int *)(v15 + 32));
      v37 = *v36;
      v38 = v36[1];
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      sub_1C07B1F90(v35, type metadata accessor for EntityTriple);
      v39 = v90;
      if ((sub_1C077C09C() & 1) == 0)
      {
        sub_1C078CDA8();
        v39 = v90;
      }
      v40 = *(_QWORD *)(v39 + 16);
      if (v40 >= *(_QWORD *)(v39 + 24) >> 1)
      {
        sub_1C09D30E0();
        v39 = v90;
      }
      *(_QWORD *)(v39 + 16) = v40 + 1;
      v41 = v39 + 16 * v40;
      *(_QWORD *)(v41 + 32) = v37;
      *(_QWORD *)(v41 + 40) = v38;
      v33 += v82;
      --v31;
      v15 = v34;
    }
    while (v31);
    swift_release();
  }
  else
  {
    sub_1C07758C4();
    v39 = MEMORY[0x1E0DEE9D8];
  }
  sub_1C0898D28(v39);
  v82 = v42;
  v43 = MEMORY[0x1E0DEE9D8];
  v92 = MEMORY[0x1E0DEE9D8];
  v44 = *(_QWORD *)(v77 + 16);
  v45 = _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  if (v44)
  {
    v46 = (*(unsigned __int8 *)(v76 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v76 + 80);
    v47 = *(_QWORD *)(v76 + 72);
    v48 = v45 + v46;
    v49 = MEMORY[0x1E0D3CC80];
    while (1)
    {
      sub_1C07E05C8(v48, v85, v87);
      sub_1C106DF90();
      sub_1C0794BAC(&qword_1ED75E7E0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3CC50], v49);
      v51 = v50;
      sub_1C0795CC8();
      sub_1C0795CC8();
      if (v90 == v88 && v91 == v89)
        break;
      sub_1C1070CB4();
      sub_1C079C594();
      swift_bridgeObjectRelease();
      sub_1C07A4B74();
      if ((v51 & 1) != 0)
        goto LABEL_36;
      sub_1C07B1F90(v85, v87);
LABEL_41:
      v48 += v47;
      if (!--v44)
      {
        v57 = v92;
        goto LABEL_44;
      }
    }
    sub_1C0782990();
    sub_1C07A4B74();
LABEL_36:
    sub_1C07E05F4(v85, v83, v87);
    v53 = v92;
    if ((sub_1C077C09C() & 1) == 0)
    {
      v54 = sub_1C07A02C8();
      v78(v54);
      v53 = v92;
    }
    v56 = *(_QWORD *)(v53 + 16);
    v55 = *(_QWORD *)(v53 + 24);
    if (v56 >= v55 >> 1)
    {
      ((void (*)(BOOL, unint64_t, uint64_t))v78)(v55 > 1, v56 + 1, 1);
      v53 = v92;
    }
    *(_QWORD *)(v53 + 16) = v56 + 1;
    sub_1C07E05F4(v83, v53 + v46 + v56 * v47, v87);
    goto LABEL_41;
  }
  v57 = v43;
LABEL_44:
  swift_bridgeObjectRelease();
  v58 = *(_QWORD *)(v57 + 16);
  v59 = v75;
  if (v58)
  {
    sub_1C07A3F20();
    v60 = v57 + ((*(unsigned __int8 *)(v76 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v76 + 80));
    v61 = *(_QWORD *)(v76 + 72);
    do
    {
      v62 = v87;
      sub_1C07E05C8(v60, v59, v87);
      v63 = (uint64_t *)(v59 + *(int *)(v86 + 32));
      v64 = *v63;
      v65 = v63[1];
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      sub_1C07B1F90(v59, v62);
      v66 = v90;
      if ((sub_1C077C09C() & 1) == 0)
      {
        sub_1C078CDA8();
        v66 = v90;
      }
      v67 = *(_QWORD *)(v66 + 16);
      if (v67 >= *(_QWORD *)(v66 + 24) >> 1)
      {
        sub_1C09D30E0();
        v66 = v90;
      }
      *(_QWORD *)(v66 + 16) = v67 + 1;
      v68 = v66 + 16 * v67;
      *(_QWORD *)(v68 + 32) = v64;
      *(_QWORD *)(v68 + 40) = v65;
      v60 += v61;
      --v58;
    }
    while (v58);
    sub_1C07758C4();
  }
  else
  {
    sub_1C07758C4();
    v66 = MEMORY[0x1E0DEE9D8];
  }
  sub_1C0898D28(v66);
  if (*(_QWORD *)(v82 + 16))
  {
    v70 = sub_1C0C30C8C(v69, v82);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    result = 1.0;
    if ((v70 & 1) != 0)
      return 0.0;
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return 1.0;
  }
  return result;
}

void sub_1C0D277E8(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  NSObject *v41;
  os_log_type_t v42;
  uint8_t *v43;
  _BYTE *v44;
  float v45;
  uint64_t v46;
  float v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  int v53;
  void (*v54)(char *, uint64_t, uint64_t);
  void (*v55)(char *, char *, uint64_t);
  char *v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  int *v61;
  float v62;
  char *v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  char *v69;
  char *v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  char *v82;

  v79 = a2;
  v80 = a1;
  v75 = a3;
  v73 = sub_1C106ADE0();
  v71 = *(_QWORD *)(v73 - 8);
  MEMORY[0x1E0C80A78](v73);
  v70 = (char *)&v63 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v74 = sub_1C106D1F8();
  v68 = *(_QWORD *)(v74 - 8);
  MEMORY[0x1E0C80A78](v74);
  v78 = (char *)&v63 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1C106E590();
  v76 = *(_QWORD *)(v6 - 8);
  v77 = v6;
  MEMORY[0x1E0C80A78](v6);
  v81 = (char *)&v63 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v72 = (char *)&v63 - v9;
  MEMORY[0x1E0C80A78](v10);
  v69 = (char *)&v63 - v11;
  v12 = type metadata accessor for EntityTriple(0);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v63 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_1C07ACF80(&qword_1ED75A508);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v63 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v63 - v19;
  v21 = sub_1C07ACF80((uint64_t *)&unk_1ED75EA40);
  MEMORY[0x1E0C80A78](v21);
  v23 = (char *)&v63 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v24);
  v26 = (char *)&v63 - v25;
  MEMORY[0x1E0C80A78](v27);
  v29 = (char *)&v63 - v28;
  v30 = v3;
  v31 = (uint64_t)v82;
  sub_1C0CCBA74();
  if (v31)
    return;
  v66 = 0;
  v67 = v17;
  v63 = v26;
  v65 = v23;
  v82 = v14;
  v32 = v77;
  v33 = v79;
  if (v79)
  {
    sub_1C0AA49F4();
    v34 = v12;
    v35 = sub_1C07B2D80((uint64_t)v20, 1, v12);
    v36 = (uint64_t)v29;
    if (v35 == 1)
    {
      sub_1C0784B6C((uint64_t)v20, &qword_1ED75A508);
      v37 = 1;
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v76 + 16))(v29, v20, v32);
      sub_1C07B1F90((uint64_t)v20, type metadata accessor for EntityTriple);
      v37 = 0;
    }
    v38 = v80;
  }
  else
  {
    v37 = 1;
    v38 = v80;
    v34 = v12;
    v36 = (uint64_t)v29;
  }
  sub_1C07B2D8C(v36, v37, 1, v32);
  v39 = (uint64_t)v67;
  sub_1C0AA49F4();
  if (sub_1C07B2D80(v39, 1, v34) != 1)
  {
    sub_1C07E05F4(v39, (uint64_t)v82, type metadata accessor for EntityTriple);
    v64 = v30;
    if (v33)
    {
      v45 = sub_1C0D26998(v38, v33);
      v46 = type metadata accessor for SoftwareMatcher();
      v47 = *(float *)(v30 + *(int *)(v46 + 28));
      v48 = v75;
      v49 = v76;
      v50 = v69;
      if (v45 > v47)
        goto LABEL_17;
    }
    else
    {
      v46 = type metadata accessor for SoftwareMatcher();
      v62 = *(float *)(v30 + *(int *)(v46 + 28));
      v45 = 0.0;
      v48 = v75;
      v49 = v76;
      v50 = v69;
      if (v62 < 0.0)
      {
LABEL_17:
        v52 = (uint64_t)v65;
        sub_1C07E0238(v36, (uint64_t)v65);
        v53 = sub_1C07B2D80(v52, 1, v32);
        v80 = v36;
        if (v53 == 1)
        {
          sub_1C0784B6C(v52, (uint64_t *)&unk_1ED75EA40);
          sub_1C1070954();
          __break(1u);
        }
        else
        {
          v54 = *(void (**)(char *, uint64_t, uint64_t))(v49 + 32);
          v54(v50, v52, v32);
          sub_1C106D1EC();
          v55 = *(void (**)(char *, char *, uint64_t))(v49 + 16);
          v56 = v72;
          v57 = (uint64_t)v82;
          v55(v72, v82, v32);
          v55(v81, v50, v32);
          v58 = v70;
          sub_1C106ADA4();
          sub_1C106AC60();
          v60 = v59;
          (*(void (**)(char *, uint64_t))(v71 + 8))(v58, v73);
          (*(void (**)(char *, uint64_t))(v49 + 8))(v50, v32);
          sub_1C07B1F90(v57, type metadata accessor for EntityTriple);
          sub_1C0784B6C(v80, (uint64_t *)&unk_1ED75EA40);
          LOBYTE(v58) = *(_BYTE *)(v64 + *(int *)(type metadata accessor for SoftwareMatcher() + 24));
          (*(void (**)(uint64_t, char *, uint64_t))(v68 + 32))(v48, v78, v74);
          v61 = (int *)type metadata accessor for EntityMatch(0);
          v54((char *)(v48 + v61[5]), (uint64_t)v56, v32);
          v54((char *)(v48 + v61[6]), (uint64_t)v81, v32);
          *(float *)(v48 + v61[7]) = v45;
          *(_QWORD *)(v48 + v61[8]) = v60;
          *(_BYTE *)(v48 + v61[9]) = (_BYTE)v58;
          *(_QWORD *)(v48 + v61[10]) = 0;
        }
        return;
      }
    }
    v51 = (uint64_t)v63;
    sub_1C106E500();
    sub_1C0784B6C(v36, (uint64_t *)&unk_1ED75EA40);
    sub_1C07B2D8C(v51, 0, 1, v32);
    sub_1C09174F8(v51, v36);
    type metadata accessor for SoftwareMatcher();
    v45 = *(float *)(v64 + *(int *)(v46 + 28));
    goto LABEL_17;
  }
  sub_1C0784B6C(v39, &qword_1ED75A508);
  if (qword_1ED761458 != -1)
    swift_once();
  v40 = sub_1C106F544();
  sub_1C079E000(v40, (uint64_t)qword_1ED78D818);
  v41 = sub_1C106F538();
  v42 = sub_1C1070390();
  if (os_log_type_enabled(v41, v42))
  {
    v43 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v43 = 0;
    _os_log_impl(&dword_1C0771000, v41, v42, "Software Matcher: skipping entityTriples are empty", v43, 2u);
    MEMORY[0x1C3BA8270](v43, -1, -1);
  }

  sub_1C08C1878();
  swift_allocError();
  *v44 = 0;
  swift_willThrow();
  sub_1C0784B6C(v36, (uint64_t *)&unk_1ED75EA40);
}

void sub_1C0D27EB0(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, void (*a4)(void)@<X3>, uint64_t (*a5)(_QWORD)@<X4>, void (*a6)(uint64_t)@<X5>, uint64_t a7@<X8>)
{
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t (*v42)(_QWORD);
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  int v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  int v53;
  void (*v54)(uint64_t);
  uint64_t v55;
  uint64_t v56;
  NSObject *v57;
  os_log_type_t v58;
  uint8_t *v59;
  _BYTE *v60;
  uint64_t v61;
  uint64_t v62;
  float v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  void (*v70)(uint64_t, uint64_t, uint64_t);
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  int *v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  char *v82;
  uint64_t *v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  void (*v93)(void);
  uint64_t (*v94)(_QWORD);
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  void (*v98)(uint64_t);
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;

  v98 = a6;
  v93 = a4;
  v94 = a5;
  v95 = a2;
  v96 = a1;
  v91 = a7;
  v84 = sub_1C106ADE0();
  v88 = *(_QWORD *)(v84 - 8);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v9);
  sub_1C077AE40();
  v87 = v10;
  v85 = sub_1C106D1F8();
  v90 = *(_QWORD *)(v85 - 8);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v11);
  sub_1C077AE40();
  v89 = v12;
  v100 = sub_1C106E590();
  v92 = *(_QWORD *)(v100 - 8);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v13);
  sub_1C077AED0();
  v97 = v14;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v15);
  v99 = (uint64_t)&v76 - v16;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v17);
  v86 = (char *)&v76 - v18;
  sub_1C07ACF80(&qword_1ED75A508);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v19);
  sub_1C0778564();
  v22 = v21 - v20;
  v23 = type metadata accessor for EntityTriple(0);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v24);
  sub_1C0778564();
  v27 = v26 - v25;
  v83 = a3;
  sub_1C07ACF80(a3);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v28);
  sub_1C0778564();
  v31 = v30 - v29;
  sub_1C07ACF80((uint64_t *)&unk_1ED75EA40);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v32);
  v34 = (char *)&v76 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v35);
  v37 = (char *)&v76 - v36;
  MEMORY[0x1E0C80A78](v38);
  v40 = (char *)&v76 - v39;
  v41 = v101;
  sub_1C0CCBA74();
  if (v41)
    return;
  v79 = v23;
  v80 = v37;
  v77 = v34;
  v42 = v94;
  v101 = v27;
  v78 = 0;
  v43 = v92;
  v82 = v40;
  v81 = v7;
  if (!v95)
  {
    v44 = 0;
    v48 = 1;
    v47 = (uint64_t)v82;
    goto LABEL_6;
  }
  v44 = v95;
  v93();
  v45 = v42(0);
  v46 = sub_1C07B2D80(v31, 1, v45);
  v47 = (uint64_t)v82;
  if (v46 == 1)
  {
    sub_1C0784B6C(v31, v83);
    v48 = 1;
LABEL_6:
    v49 = v43;
    goto LABEL_8;
  }
  v49 = v43;
  (*(void (**)(char *, uint64_t, uint64_t))(v43 + 16))(v82, v31, v100);
  sub_1C07B1F90(v31, v42);
  v48 = 0;
LABEL_8:
  v50 = v101;
  v51 = v96;
  sub_1C07B2D8C(v47, v48, 1, v100);
  v52 = v22;
  sub_1C0AA49F4();
  v53 = sub_1C07B2D80(v22, 1, v79);
  v54 = v98;
  v55 = (uint64_t)v80;
  if (v53 != 1)
  {
    sub_1C07E05F4(v52, v50, type metadata accessor for EntityTriple);
    if (v44)
    {
      v61 = v51;
      v62 = v81;
      v63 = sub_1C0D27124(v61, v44, v42, v54);
      v64 = sub_1C07953A8();
      v65 = v91;
      v66 = v100;
      v67 = (uint64_t)v86;
      if (v63 > *(float *)(v62 + *(int *)(v64 + 28)))
        goto LABEL_17;
    }
    else
    {
      v64 = sub_1C07953A8();
      v63 = 0.0;
      v65 = v91;
      v66 = v100;
      v67 = (uint64_t)v86;
      if (*(float *)(v81 + *(int *)(v64 + 28)) < 0.0)
      {
LABEL_17:
        v68 = (uint64_t)v77;
        sub_1C07E0238(v47, (uint64_t)v77);
        if (sub_1C07B2D80(v68, 1, v66) == 1)
        {
          sub_1C0784B6C(v68, (uint64_t *)&unk_1ED75EA40);
          sub_1C1070954();
          __break(1u);
        }
        else
        {
          sub_1C0790E20(v67, v68);
          v69 = v89;
          sub_1C106D1EC();
          v70 = *(void (**)(uint64_t, uint64_t, uint64_t))(v49 + 16);
          v71 = v101;
          v70(v99, v101, v66);
          v70(v97, v67, v66);
          v72 = v87;
          sub_1C106ADA4();
          sub_1C106AC60();
          v74 = v73;
          (*(void (**)(uint64_t, uint64_t))(v88 + 8))(v72, v84);
          (*(void (**)(uint64_t, uint64_t))(v49 + 8))(v67, v66);
          sub_1C07B1F90(v71, type metadata accessor for EntityTriple);
          sub_1C0784B6C((uint64_t)v82, (uint64_t *)&unk_1ED75EA40);
          LOBYTE(v72) = *(_BYTE *)(v81 + *(int *)(sub_1C07953A8() + 24));
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v90 + 32))(v65, v69, v85);
          v75 = (int *)sub_1C0789FA0();
          sub_1C0790E20(v65 + v75[5], v99);
          sub_1C0790E20(v65 + v75[6], v97);
          *(float *)(v65 + v75[7]) = v63;
          *(_QWORD *)(v65 + v75[8]) = v74;
          *(_BYTE *)(v65 + v75[9]) = v72;
          *(_QWORD *)(v65 + v75[10]) = 0;
        }
        return;
      }
    }
    sub_1C106E500();
    sub_1C0784B6C(v47, (uint64_t *)&unk_1ED75EA40);
    sub_1C07B2D8C(v55, 0, 1, v66);
    sub_1C09174F8(v55, v47);
    sub_1C07953A8();
    v63 = *(float *)(v81 + *(int *)(v64 + 28));
    goto LABEL_17;
  }
  sub_1C0784B6C(v52, &qword_1ED75A508);
  if (qword_1ED761458 != -1)
    swift_once();
  v56 = sub_1C106F544();
  sub_1C079E000(v56, (uint64_t)qword_1ED78D818);
  v57 = sub_1C106F538();
  v58 = sub_1C1070390();
  if (os_log_type_enabled(v57, v58))
  {
    v59 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v59 = 0;
    _os_log_impl(&dword_1C0771000, v57, v58, "Software Matcher: skipping entityTriples are empty", v59, 2u);
    MEMORY[0x1C3BA8270](v59, -1, -1);
  }

  sub_1C08C1878();
  swift_allocError();
  *v60 = 0;
  swift_willThrow();
  sub_1C0784B6C(v47, (uint64_t *)&unk_1ED75EA40);
}

uint64_t SoftwareMatcher.execute()()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  v1[3] = v0;
  v1[4] = type metadata accessor for SoftwareMatcher();
  v1[5] = sub_1C0779D74();
  v2 = sub_1C0776744();
  v1[6] = v2;
  v1[7] = *(_QWORD *)(v2 - 8);
  v1[8] = sub_1C0775870();
  v1[9] = sub_1C0775870();
  v1[10] = sub_1C0775870();
  v1[11] = sub_1C0775870();
  sub_1C07ACF80(&qword_1ED7618D0);
  v1[12] = sub_1C0779D74();
  return swift_task_switch();
}

void sub_1C0D28610()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7[32];

  v1 = v0[12];
  v2 = v0[6];
  v3 = v0[7];
  v5 = v0[3];
  v4 = v0[4];
  type metadata accessor for PhaseStores();
  v6 = *(int *)(v4 + 24);
  v7[0] = *(_BYTE *)(v5 + v6);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v1, v5 + *(int *)(v4 + 32), v2);
  sub_1C07B2D8C(v1, 0, 1, v2);
  sub_1C0AB2308(v7, v1);
  sub_1C0784B6C(v1, &qword_1ED7618D0);
  __asm { BR              X9 }
}

uint64_t sub_1C0D286C8()
{
  uint64_t (*v0)(uint64_t, uint64_t, uint64_t);
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)(void);
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t (*v34)(uint64_t, uint64_t, uint64_t);
  char v35;

  v7 = v6;
  v8 = v2[7];
  v9 = v0;
  v10 = v2[3];
  v32 = v7;
  v11 = *(_QWORD *)(v5 + v7);
  sub_1C07973B8(v9);
  v33 = v3;
  v12 = sub_1C0794DA4();
  *(_QWORD *)(v12 + 16) = v10;
  sub_1C0791D48();
  sub_1C09144FC(v13);
  v14 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
  sub_1C0779940();
  sub_1C07767D4();
  if (v1)
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    sub_1C077C104();
    sub_1C07767D4();
    v24 = (uint64_t (*)(void))v2[1];
  }
  else
  {
    v15 = sub_1C07946C4();
    if (*(_BYTE *)(v11 + *(int *)(v15 + 28)) == 1)
    {
      v23 = v2[10];
      sub_1C078F678(v15, v16, v17, v18, v19, v20, v21, v22, v28, v29, v30, v31, v32, v33, v34);
      *(_QWORD *)(sub_1C0794DA4() + 16) = v12;
      sub_1C0914518(v23);
      v14(v23, v10);
      sub_1C077C104();
    }
    v25 = v2[12];
    v26 = v2[6];
    sub_1C106AC6C();
    sub_1C088A660();
    v35 = *(_BYTE *)(v5 + v4);
    v34(v25, v33, v26);
    sub_1C07B2D8C(v25, 0, 1, v26);
    sub_1C0AB25AC(&v35, v25);
    sub_1C0784B6C(v25, &qword_1ED7618D0);
    sub_1C07767D4();
    swift_task_dealloc();
    swift_task_dealloc();
    sub_1C077C104();
    swift_task_dealloc();
    swift_task_dealloc();
    v24 = (uint64_t (*)(void))v2[1];
  }
  return v24();
}

void sub_1C0D28A28(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;

  sub_1C0D277E8(a1, a2, a3);
  if (!v3)
  {
    v4 = sub_1C0789FA0();
    sub_1C078D56C(v4);
  }
}

void sub_1C0D28A60(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X4>, void (*a4)(void)@<X5>, uint64_t (*a5)(_QWORD)@<X6>, void (*a6)(uint64_t)@<X7>, uint64_t a7@<X8>)
{
  uint64_t v7;
  uint64_t v8;

  sub_1C0D27EB0(a1, a2, a3, a4, a5, a6, a7);
  if (!v7)
  {
    v8 = sub_1C0789FA0();
    sub_1C078D56C(v8);
  }
}

void sub_1C0D28AB0(_BYTE *a1@<X8>)
{
  SoftwareMatcher.stageName.getter(a1);
}

uint64_t sub_1C0D28ACC()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_1C0806670;
  return SoftwareMatcher.execute()();
}

void sub_1C0D28B14(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_1C0D28A60(a1, a2, &qword_1ED75F138, (void (*)(void))sub_1C0AA4998, type metadata accessor for GraphTriple, (void (*)(uint64_t))sub_1C09D3AC0, a3);
}

void sub_1C0D28B4C(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_1C0D28A60(a1, a2, &qword_1ED750E40, (void (*)(void))sub_1C0AA49A4, type metadata accessor for ConstructionGraphTriple, (void (*)(uint64_t))sub_1C09D3EE4, a3);
}

void sub_1C0D28B84(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_1C0D28A28(a1, a2, a3);
}

void sub_1C0D28B9C(uint64_t a1)
{
  uint64_t v2;

  sub_1C0794BAC(&qword_1ED75AFB8, (uint64_t (*)(uint64_t))type metadata accessor for SoftwareMatcher, (uint64_t)&protocol conformance descriptor for SoftwareMatcher);
  *(_QWORD *)(a1 + 8) = v2;
}

void sub_1C0D28BD8(uint64_t a1)
{
  uint64_t v2;

  sub_1C0794BAC(&qword_1ED75AFA8, (uint64_t (*)(uint64_t))type metadata accessor for SoftwareMatcher, (uint64_t)&protocol conformance descriptor for SoftwareMatcher);
  *(_QWORD *)(a1 + 8) = v2;
}

uint64_t getEnumTagSinglePayload for SoftwareMatcher()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1C0D28C20(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;

  v6 = sub_1C077D0AC();
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)v3)
  {
    v7 = v6;
    v8 = v4;
    return sub_1C07B2D80(v8, v3, v7);
  }
  v9 = type metadata accessor for Source();
  if (*(_DWORD *)(*(_QWORD *)(v9 - 8) + 84) == (_DWORD)v3)
  {
    v7 = v9;
    v10 = a3[5];
LABEL_10:
    v8 = v4 + v10;
    return sub_1C07B2D80(v8, v3, v7);
  }
  if ((_DWORD)v3 != 252)
  {
    v7 = sub_1C0776744();
    v10 = a3[8];
    goto LABEL_10;
  }
  v11 = *(unsigned __int8 *)(v4 + a3[6]);
  if (v11 >= 4)
    return v11 - 3;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for SoftwareMatcher()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1C0D28CD4(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;

  v8 = sub_1C077D0AC();
  if (*(_DWORD *)(*(_QWORD *)(v8 - 8) + 84) == a3)
  {
    v9 = v8;
    v10 = v5;
  }
  else
  {
    result = type metadata accessor for Source();
    if (*(_DWORD *)(*(_QWORD *)(result - 8) + 84) == a3)
    {
      v9 = result;
      v12 = a4[5];
    }
    else
    {
      if (a3 == 252)
      {
        *(_BYTE *)(v5 + a4[6]) = v4 + 3;
        return result;
      }
      v9 = sub_1C0776744();
      v12 = a4[8];
    }
    v10 = v5 + v12;
  }
  return sub_1C07B2D8C(v10, v4, v4, v9);
}

uint64_t sub_1C0D28D7C()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  result = type metadata accessor for PhaseStores();
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for Source();
    if (v2 <= 0x3F)
    {
      result = sub_1C106D1F8();
      if (v3 <= 0x3F)
      {
        swift_initStructMetadata();
        return 0;
      }
    }
  }
  return result;
}

void sub_1C0D28E34(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_1C0D28B84(a1, a2, a3);
}

ValueMetadata *type metadata accessor for Song()
{
  return &type metadata for Song;
}

uint64_t sub_1C0D28E58()
{
  if (qword_1EF62E308 != -1)
    swift_once();
  qword_1EF6D1DF8 = qword_1EF6482E8;
  unk_1EF6D1E00 = *(_OWORD *)&qword_1EF6482F0;
  qword_1EF6D1E10 = qword_1EF648300;
  return _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
}

uint64_t *sub_1C0D28EBC()
{
  if (qword_1EF62E2C0 != -1)
    swift_once();
  return &qword_1EF6D1DF8;
}

uint64_t sub_1C0D28EFC(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  _BYTE v10[16];
  uint64_t v11;
  char v12;
  char v13;

  v3 = v1;
  v5 = sub_1C07ACF80(&qword_1EF647F80);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1C07A9480(a1, a1[3]);
  sub_1C0D2947C();
  sub_1C1070EB8();
  v13 = 0;
  sub_1C1070B7C();
  if (!v2)
  {
    v12 = 1;
    sub_1C1070B34();
    v11 = *(_QWORD *)(v3 + 32);
    v10[15] = 2;
    sub_1C07ACF80(&qword_1EF62FE38);
    sub_1C07EB158(&qword_1EF62FE40, (uint64_t (*)(void))sub_1C07EB11C, MEMORY[0x1E0DEAF10]);
    sub_1C1070BB8();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1C0D29074@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v5 = sub_1C07ACF80(&qword_1EF647F70);
  MEMORY[0x1E0C80A78](v5);
  sub_1C07A9480(a1, a1[3]);
  sub_1C0D2947C();
  sub_1C1070E94();
  if (v2)
    return sub_1C0775880();
  v6 = sub_1C1070AA4();
  v8 = v7;
  v14 = v6;
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  v9 = sub_1C1070A5C();
  v11 = v10;
  v13 = v9;
  sub_1C07ACF80(&qword_1EF62FE38);
  sub_1C07EB158(&qword_1EF62FE58, (uint64_t (*)(void))sub_1C07EB1C0, MEMORY[0x1E0DEAF40]);
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C1070AE0();
  sub_1C078F32C();
  sub_1C077AE90();
  sub_1C0775880();
  sub_1C077960C();
  swift_bridgeObjectRelease();
  result = sub_1C077589C();
  *a2 = v14;
  a2[1] = v8;
  a2[2] = v13;
  a2[3] = v11;
  a2[4] = v15;
  return result;
}

uint64_t sub_1C0D2928C()
{
  sub_1C0D2947C();
  return sub_1C1070EE8();
}

uint64_t sub_1C0D292B4()
{
  sub_1C0D2947C();
  return sub_1C1070EF4();
}

uint64_t sub_1C0D292DC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;

  sub_1C0D28EBC();
  v2 = qword_1EF6D1E10;
  *(_QWORD *)a1 = qword_1EF6D1DF8;
  *(_OWORD *)(a1 + 8) = unk_1EF6D1E00;
  *(_QWORD *)(a1 + 24) = v2;
  return _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
}

double sub_1C0D29320@<D0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  double result;
  __int128 v5;
  _OWORD v6[2];
  uint64_t v7;

  sub_1C0D29074(a1, (uint64_t *)v6);
  if (!v2)
  {
    result = *(double *)v6;
    v5 = v6[1];
    *(_OWORD *)a2 = v6[0];
    *(_OWORD *)(a2 + 16) = v5;
    *(_QWORD *)(a2 + 32) = v7;
  }
  return result;
}

uint64_t sub_1C0D29364(_QWORD *a1)
{
  return sub_1C0D28EFC(a1);
}

unint64_t sub_1C0D29378(uint64_t a1)
{
  unint64_t result;

  result = sub_1C0D2939C();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C0D2939C()
{
  unint64_t result;

  result = qword_1EF647F58;
  if (!qword_1EF647F58)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10B657C, &type metadata for Song);
    atomic_store(result, (unint64_t *)&qword_1EF647F58);
  }
  return result;
}

unint64_t sub_1C0D293D8(uint64_t a1)
{
  unint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1C0D29404();
  result = sub_1C0D29440();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1C0D29404()
{
  unint64_t result;

  result = qword_1EF647F60;
  if (!qword_1EF647F60)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10B6538, &type metadata for Song);
    atomic_store(result, (unint64_t *)&qword_1EF647F60);
  }
  return result;
}

unint64_t sub_1C0D29440()
{
  unint64_t result;

  result = qword_1EF647F68;
  if (!qword_1EF647F68)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10B6510, &type metadata for Song);
    atomic_store(result, (unint64_t *)&qword_1EF647F68);
  }
  return result;
}

unint64_t sub_1C0D2947C()
{
  unint64_t result;

  result = qword_1EF647F78;
  if (!qword_1EF647F78)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10B665C, &type metadata for Song.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF647F78);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for Song.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1C0D29504 + 4 * byte_1C10B64F5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1C0D29538 + 4 * byte_1C10B64F0[v4]))();
}

uint64_t sub_1C0D29538(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C0D29540(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C0D29548);
  return result;
}

uint64_t sub_1C0D29554(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C0D2955CLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1C0D29560(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C0D29568(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Song.CodingKeys()
{
  return &type metadata for Song.CodingKeys;
}

unint64_t sub_1C0D29588()
{
  unint64_t result;

  result = qword_1EF647F88;
  if (!qword_1EF647F88)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10B6634, &type metadata for Song.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF647F88);
  }
  return result;
}

unint64_t sub_1C0D295C8()
{
  unint64_t result;

  result = qword_1EF647F90;
  if (!qword_1EF647F90)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10B65A4, &type metadata for Song.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF647F90);
  }
  return result;
}

unint64_t sub_1C0D29608()
{
  unint64_t result;

  result = qword_1EF647F98;
  if (!qword_1EF647F98)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10B65CC, &type metadata for Song.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF647F98);
  }
  return result;
}

void sub_1C0D2969C()
{
  uint64_t v0;

  v0 = _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C0898D28(v0);
}

uint64_t sub_1C0D296B4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = swift_allocObject();
  *(_QWORD *)(v2 + 16) = sub_1C106F97C();
  sub_1C0D29764(a1, 1953460082, 0xE400000000000000, v2);
  swift_beginAccess();
  v3 = *(_QWORD *)(v2 + 16);
  sub_1C07767B4();
  swift_release();
  return v3;
}

uint64_t sub_1C0D29764(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v8;
  uint64_t *v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t result;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  double v18;
  double v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  int64_t v25;
  unint64_t v26;
  int64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  char v31;
  __int128 *v32;
  uint64_t *v33;
  unint64_t v34;
  char v35;
  double v36;
  __int128 *v37;
  uint64_t *v38;
  _QWORD *v39;
  unint64_t v40;
  char v41;
  unint64_t v42;
  char v43;
  unint64_t v44;
  char v45;
  _QWORD *v46;
  uint64_t *v47;
  uint64_t v48;
  BOOL v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  char v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  int64_t v58;
  uint64_t v59;
  int64_t v60;
  double v61;
  _QWORD *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  __int128 v66;
  _OWORD v67[2];
  uint64_t v68;
  uint64_t v69;

  v8 = (uint64_t *)(a4 + 16);
  v9 = &v68;
  swift_beginAccess();
  v56 = a4;
  v10 = *(_QWORD *)(a4 + 16);
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C089AA50(a2, a3, v10);
  LOBYTE(v10) = v11;
  swift_endAccess();
  swift_bridgeObjectRelease();
  if ((v10 & 1) == 0)
  {
    swift_beginAccess();
    v12 = *v8;
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    sub_1C089AA50(a2, a3, v12);
    v9 = v13;
    swift_endAccess();
    result = swift_bridgeObjectRelease();
    if ((v9 & 1) == 0)
      return result;
    __break(1u);
  }
  v54 = a2;
  v55 = a3;
  v57 = a1 + 64;
  v15 = 1 << *(_BYTE *)(a1 + 32);
  v16 = -1;
  if (v15 < 64)
    v16 = ~(-1 << v15);
  v17 = v16 & *(_QWORD *)(a1 + 64);
  v59 = (uint64_t)(v9 + 2);
  v58 = (unint64_t)(v15 + 63) >> 6;
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  v60 = 0;
  v18 = 0.0;
  v19 = 0.0;
  if (!v17)
    goto LABEL_9;
LABEL_7:
  v20 = __clz(__rbit64(v17));
  v17 &= v17 - 1;
  v21 = v20 | (v60 << 6);
LABEL_8:
  v22 = *(_QWORD *)(a1 + 56);
  v23 = (_QWORD *)(*(_QWORD *)(a1 + 48) + 16 * v21);
  v24 = v23[1];
  *(_QWORD *)&v66 = *v23;
  *((_QWORD *)&v66 + 1) = v24;
  sub_1C07C015C(v22 + 32 * v21, (uint64_t)v67);
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  while (1)
  {
    sub_1C078A6DC((uint64_t)&v66, (uint64_t)&v68, &qword_1EF633138);
    v28 = v69;
    if (!v69)
    {
      swift_release();
      swift_beginAccess();
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      sub_1C089FA1C();
      swift_endAccess();
      swift_bridgeObjectRelease();
      swift_beginAccess();
      v51 = *v8;
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      sub_1C089AA50(v54, v55, v51);
      v53 = v52;
      swift_endAccess();
      result = swift_bridgeObjectRelease();
      if ((v53 & 1) != 0)
        goto LABEL_70;
      return result;
    }
    v29 = v68;
    if (!*(_QWORD *)(a1 + 16))
    {
      v62 = 0;
      v63 = 0;
      v64 = 0;
      v65 = 1;
LABEL_34:
      v32 = (__int128 *)&v62;
      v33 = &qword_1EF633158;
LABEL_35:
      sub_1C0784B30((uint64_t)v32, v33);
      goto LABEL_36;
    }
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    v30 = sub_1C077D774(v29, v28);
    if ((v31 & 1) != 0)
    {
      sub_1C07C015C(*(_QWORD *)(a1 + 56) + 32 * v30, (uint64_t)&v62);
    }
    else
    {
      v62 = 0;
      v63 = 0;
      v64 = 0;
      v65 = 1;
    }
    swift_bridgeObjectRelease();
    if (v65 == 1)
      goto LABEL_34;
    sub_1C078A6DC((uint64_t)&v62, (uint64_t)&v66, &qword_1ED760400);
    if (!*((_QWORD *)&v67[0] + 1))
    {
      v32 = &v66;
      v33 = &qword_1ED760400;
      goto LABEL_35;
    }
    sub_1C07ACF80(&qword_1EF633148);
    if ((swift_dynamicCast() & 1) != 0)
    {
      v36 = sub_1C0D29764(*(_QWORD *)&v61, v29, v28, v56);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_57;
    }
LABEL_36:
    if (!*(_QWORD *)(a1 + 16))
    {
      v62 = 0;
      v63 = 0;
      v64 = 0;
      v65 = 1;
LABEL_45:
      v37 = (__int128 *)&v62;
      v38 = &qword_1EF633158;
LABEL_46:
      sub_1C0784B30((uint64_t)v37, v38);
LABEL_47:
      v36 = 0.0;
      goto LABEL_48;
    }
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    v34 = sub_1C077D774(v29, v28);
    if ((v35 & 1) != 0)
    {
      sub_1C07C015C(*(_QWORD *)(a1 + 56) + 32 * v34, (uint64_t)&v62);
    }
    else
    {
      v62 = 0;
      v63 = 0;
      v64 = 0;
      v65 = 1;
    }
    swift_bridgeObjectRelease();
    if (v65 == 1)
      goto LABEL_45;
    sub_1C078A6DC((uint64_t)&v62, (uint64_t)&v66, &qword_1ED760400);
    if (!*((_QWORD *)&v67[0] + 1))
    {
      v37 = &v66;
      v38 = &qword_1ED760400;
      goto LABEL_46;
    }
    if (!swift_dynamicCast())
      goto LABEL_47;
    v36 = v61;
LABEL_48:
    swift_beginAccess();
    swift_isUniquelyReferenced_nonNull_native();
    v62 = (_QWORD *)*v8;
    v39 = v62;
    *v8 = 0x8000000000000000;
    v40 = sub_1C077D774(v29, v28);
    if (__OFADD__(v39[2], (v41 & 1) == 0))
      break;
    v42 = v40;
    v43 = v41;
    sub_1C07ACF80(&qword_1ED760850);
    if ((sub_1C107090C() & 1) != 0)
    {
      v44 = sub_1C077D774(v29, v28);
      if ((v43 & 1) != (v45 & 1))
        goto LABEL_71;
      v42 = v44;
    }
    v46 = v62;
    if ((v43 & 1) != 0)
    {
      *(double *)(v62[7] + 8 * v42) = v36;
    }
    else
    {
      v62[(v42 >> 6) + 8] |= 1 << v42;
      v47 = (uint64_t *)(v46[6] + 16 * v42);
      *v47 = v29;
      v47[1] = v28;
      *(double *)(v46[7] + 8 * v42) = v36;
      v48 = v46[2];
      v49 = __OFADD__(v48, 1);
      v50 = v48 + 1;
      if (v49)
        goto LABEL_67;
      v46[2] = v50;
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    }
    *v8 = (uint64_t)v46;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_endAccess();
LABEL_57:
    v19 = v19 + v36;
    v18 = v18 + 1.0;
    sub_1C0784B30(v59, &qword_1ED760400);
    if (v17)
      goto LABEL_7;
LABEL_9:
    v25 = v60 + 1;
    if (__OFADD__(v60, 1))
      goto LABEL_68;
    if (v25 < v58)
    {
      v26 = *(_QWORD *)(v57 + 8 * v25);
      if (v26)
        goto LABEL_12;
      v27 = v60 + 2;
      ++v60;
      if (v25 + 1 < v58)
      {
        v26 = *(_QWORD *)(v57 + 8 * v27);
        if (v26)
          goto LABEL_15;
        v60 = v25 + 1;
        if (v25 + 2 < v58)
        {
          v26 = *(_QWORD *)(v57 + 8 * (v25 + 2));
          if (v26)
          {
            v25 += 2;
            goto LABEL_12;
          }
          v27 = v25 + 3;
          v60 = v25 + 2;
          if (v25 + 3 < v58)
          {
            v26 = *(_QWORD *)(v57 + 8 * v27);
            if (!v26)
            {
              while (1)
              {
                v25 = v27 + 1;
                if (__OFADD__(v27, 1))
                  goto LABEL_69;
                if (v25 >= v58)
                {
                  v60 = v58 - 1;
                  goto LABEL_26;
                }
                v26 = *(_QWORD *)(v57 + 8 * v25);
                ++v27;
                if (v26)
                  goto LABEL_12;
              }
            }
LABEL_15:
            v25 = v27;
LABEL_12:
            v17 = (v26 - 1) & v26;
            v21 = __clz(__rbit64(v26)) + (v25 << 6);
            v60 = v25;
            goto LABEL_8;
          }
        }
      }
    }
LABEL_26:
    v17 = 0;
    memset(v67, 0, sizeof(v67));
    v66 = 0u;
  }
  __break(1u);
LABEL_67:
  __break(1u);
LABEL_68:
  __break(1u);
LABEL_69:
  __break(1u);
LABEL_70:
  __break(1u);
LABEL_71:
  result = sub_1C1070D44();
  __break(1u);
  return result;
}

void sub_1C0D29E20(void *a1)
{
  id v2;
  uint64_t v3;

  sub_1C106F97C();
  if (a1)
  {
    v2 = a1;
    sub_1C077960C();
    BMContextualUnderstandingSoundAnalysis.asHierarchicalDictionary()();
    sub_1C0D296B4(v3);
    sub_1C077960C();

  }
  sub_1C077671C();
}

uint64_t sub_1C0D29E9C()
{
  uint64_t v0;
  void *v1;
  uint64_t v3;

  v1 = (void *)MEMORY[0x1C3BA79F4]();
  sub_1C0D29EE8(v0, &v3);
  objc_autoreleasePoolPop(v1);
  return v3;
}

uint64_t sub_1C0D29EE8@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  void *v15;
  id v16;
  id v17;
  id v18;
  uint64_t v19;
  void *v20;
  void *v21;
  id v22;
  void *v23;
  id v24;
  _QWORD *v26;
  uint64_t aBlock;
  uint64_t v28;
  void (*v29)(uint64_t, void *);
  void *v30;
  void (*v31)(void *);
  uint64_t v32;

  v26 = a2;
  v3 = sub_1C07ACF80((uint64_t *)&unk_1ED762690);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v26 - v7;
  v9 = sub_1C106ADE0();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v26 - v12;
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = 0;
  sub_1C106ADD4();
  sub_1C106ACA8();
  v15 = *(void **)(a1 + 32);
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v8, v13, v9);
  sub_1C07B2D8C((uint64_t)v8, 0, 1, v9);
  sub_1C07B2D8C((uint64_t)v5, 1, 1, v9);
  v16 = objc_allocWithZone(MEMORY[0x1E0D026F0]);
  v17 = sub_1C07DC9F8((uint64_t)v8, (uint64_t)v5, 1, 1, 0);
  v18 = objc_msgSend(v15, sel_publisherWithOptions_, v17);

  v31 = (void (*)(void *))nullsub_1;
  v32 = 0;
  v19 = MEMORY[0x1E0C809B0];
  aBlock = MEMORY[0x1E0C809B0];
  v28 = 1107296256;
  v29 = (void (*)(uint64_t, void *))sub_1C07BF90C;
  v30 = &unk_1E7A2EB80;
  v20 = _Block_copy(&aBlock);
  v31 = sub_1C0D2A9F4;
  v32 = v14;
  aBlock = v19;
  v28 = 1107296256;
  v29 = sub_1C0779530;
  v30 = &unk_1E7A2EBA8;
  v21 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  v22 = objc_msgSend(v18, sel_sinkWithCompletion_receiveInput_, v20, v21);
  _Block_release(v21);
  _Block_release(v20);

  (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v9);
  swift_beginAccess();
  v23 = *(void **)(v14 + 16);
  *v26 = v23;
  v24 = v23;
  return swift_release();
}

void sub_1C0D2A1B8(void *a1, uint64_t a2)
{
  id v3;
  id v4;
  void *v5;
  uint64_t v6;
  os_log_type_t v7;
  uint8_t *v8;
  NSObject *oslog;

  v3 = objc_msgSend(a1, sel_eventBody);
  if (v3)
  {
    v4 = v3;
    swift_beginAccess();
    v5 = *(void **)(a2 + 16);
    *(_QWORD *)(a2 + 16) = v4;

  }
  else
  {
    if (qword_1ED762B18 != -1)
      swift_once();
    v6 = sub_1C106F544();
    sub_1C079E000(v6, (uint64_t)qword_1ED762AF8);
    oslog = sub_1C106F538();
    v7 = sub_1C10703A8();
    if (os_log_type_enabled(oslog, v7))
    {
      v8 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v8 = 0;
      _os_log_impl(&dword_1C0771000, oslog, v7, "Exception: Unable to parse eventBody from read event in sound featurizer", v8, 2u);
      MEMORY[0x1C3BA8270](v8, -1, -1);
    }

  }
}

uint64_t sub_1C0D2A2D4()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int64_t v7;
  unint64_t v8;
  unint64_t v9;
  int64_t v10;
  unint64_t v11;
  uint64_t v12;
  char v13;
  BOOL v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  char v26;
  uint64_t v27;
  id v28;
  unint64_t v29;
  char v30;
  char v31;
  id v32;
  unint64_t v33;
  char v34;
  unint64_t v35;
  unint64_t v36;
  char v37;
  uint64_t v38;
  void *v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t result;
  void *v44;
  char v45;
  uint64_t v46;
  int64_t v47;

  sub_1C07D4B70(0, (unint64_t *)&qword_1ED758D30);
  v0 = (_QWORD *)sub_1C106F97C();
  v44 = (void *)sub_1C0D29E9C();
  sub_1C0D29E20(v44);
  v2 = (_QWORD *)v1;
  v3 = v1 + 64;
  v4 = 1 << *(_BYTE *)(v1 + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(v1 + 64);
  v47 = (unint64_t)(v4 + 63) >> 6;
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  v7 = 0;
  v46 = v3;
  while (1)
  {
    if (v6)
    {
      v8 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      v9 = v8 | (v7 << 6);
      goto LABEL_29;
    }
    v10 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
      __break(1u);
LABEL_48:
      __break(1u);
LABEL_49:
      __break(1u);
      goto LABEL_50;
    }
    if (v10 >= v47)
      goto LABEL_46;
    v11 = *(_QWORD *)(v3 + 8 * v10);
    ++v7;
    if (!v11)
    {
      v7 = v10 + 1;
      sub_1C07A75D8();
      if (v13 == v14)
        goto LABEL_46;
      v11 = *(_QWORD *)(v3 + 8 * v7);
      if (!v11)
      {
        v7 = v12 + 2;
        sub_1C07A75D8();
        if (v13 == v14)
          goto LABEL_46;
        v11 = *(_QWORD *)(v3 + 8 * v7);
        if (!v11)
        {
          v7 = v15 + 3;
          sub_1C07A75D8();
          if (v13 == v14)
            goto LABEL_46;
          v11 = *(_QWORD *)(v3 + 8 * v7);
          if (!v11)
          {
            v7 = v16 + 4;
            sub_1C07A75D8();
            if (v13 == v14)
              goto LABEL_46;
            v11 = *(_QWORD *)(v3 + 8 * v7);
            if (!v11)
              break;
          }
        }
      }
    }
LABEL_28:
    v6 = (v11 - 1) & v11;
    v9 = __clz(__rbit64(v11)) + (v7 << 6);
LABEL_29:
    v20 = (uint64_t *)(v2[6] + 16 * v9);
    v22 = *v20;
    v21 = v20[1];
    v23 = v2[2];
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    if (v23 && (v24 = sub_1C077D774(v22, v21), (v25 & 1) != 0))
    {
      v26 = 0;
      v27 = *(_QWORD *)(v2[7] + 8 * v24);
    }
    else
    {
      v27 = 0;
      v26 = 1;
    }
    v28 = sub_1C0C38C1C(v27, v26);
    if (v28)
    {
      v32 = v28;
      swift_isUniquelyReferenced_nonNull_native();
      v33 = sub_1C07A1440();
      v45 = v34;
      if (__OFADD__(v0[2], (v34 & 1) == 0))
        goto LABEL_48;
      v35 = v33;
      sub_1C07ACF80(&qword_1ED758E28);
      v3 = v46;
      if ((sub_1C107090C() & 1) != 0)
      {
        v36 = sub_1C077D774(v22, v21);
        if ((v45 & 1) != (v37 & 1))
          goto LABEL_51;
        v35 = v36;
      }
      if ((v45 & 1) != 0)
      {
        v38 = v0[7];

        *(_QWORD *)(v38 + 8 * v35) = v32;
      }
      else
      {
        v0[(v35 >> 6) + 8] |= 1 << v35;
        v40 = (uint64_t *)(v0[6] + 16 * v35);
        *v40 = v22;
        v40[1] = v21;
        *(_QWORD *)(v0[7] + 8 * v35) = v32;
        v41 = v0[2];
        v14 = __OFADD__(v41, 1);
        v42 = v41 + 1;
        if (v14)
          goto LABEL_49;
        v0[2] = v42;
        _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      }
      sub_1C07785A0();
      swift_bridgeObjectRelease();
    }
    else
    {
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      v29 = sub_1C07A1440();
      v31 = v30;
      swift_bridgeObjectRelease();
      if ((v31 & 1) != 0)
      {
        swift_isUniquelyReferenced_nonNull_native();
        sub_1C07ACF80(&qword_1ED758E28);
        v3 = v46;
        sub_1C107090C();
        swift_bridgeObjectRelease();
        v39 = *(void **)(v0[7] + 8 * v29);
        sub_1C1070924();

        sub_1C07785A0();
        swift_bridgeObjectRelease();
      }
      else
      {
        sub_1C07785A0();
      }
    }
  }
  v18 = v17 + 5;
  if (v18 >= v47)
  {
LABEL_46:
    swift_release();

    swift_bridgeObjectRelease();
    return (uint64_t)v0;
  }
  v11 = *(_QWORD *)(v3 + 8 * v18);
  if (v11)
  {
    v7 = v18;
    goto LABEL_28;
  }
  while (1)
  {
    v7 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    sub_1C07A75D8();
    if (v13 == v14)
      goto LABEL_46;
    v11 = *(_QWORD *)(v3 + 8 * v7);
    v18 = v19 + 1;
    if (v11)
      goto LABEL_28;
  }
LABEL_50:
  __break(1u);
LABEL_51:
  result = sub_1C1070D44();
  __break(1u);
  return result;
}

id sub_1C0D2A6C4(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;
  uint64_t v7;
  char v8;
  char v9;

  sub_1C0D2A2D4();
  sub_1C07767B4();
  v4 = (void *)sub_1C0799118();
  swift_bridgeObjectRelease();

  if (v4)
  {
    sub_1C07767B4();
    v5 = sub_1C0799118();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return (id)v5;
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_1C0D2969C();
    sub_1C0A791CC(a1, a2, v7);
    v9 = v8;
    sub_1C077960C();
    if ((v9 & 1) != 0)
      return objc_msgSend((id)objc_opt_self(), sel_featureValueWithDouble_, 0.0);
    else
      return 0;
  }
}

uint64_t sub_1C0D2A7F4()
{
  uint64_t v0;

  swift_bridgeObjectRelease();

  return v0;
}

uint64_t sub_1C0D2A818()
{
  sub_1C0D2A7F4();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for SoundAnalysisSignal()
{
  return objc_opt_self();
}

void sub_1C0D2A858()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  id v5;

  v1 = v0;
  v2 = sub_1C07D4B70(0, &qword_1ED752E68);
  static BMContextualUnderstandingSoundAnalysis.soundHierarchyLabels()(v2);
  *(_QWORD *)(v0 + 16) = v3;
  *(_QWORD *)(v0 + 24) = 0xC08C200000000000;
  v4 = objc_msgSend((id)BiomeLibrary(), sel_ContextualUnderstanding);
  swift_unknownObjectRelease();
  v5 = objc_msgSend(v4, sel_SoundAnalysis);
  swift_unknownObjectRelease();
  *(_QWORD *)(v1 + 32) = v5;
  sub_1C077671C();
}

uint64_t sub_1C0D2A8FC()
{
  return sub_1C0D2A6C0();
}

void sub_1C0D2A91C()
{
  sub_1C0D2969C();
}

uint64_t sub_1C0D2A93C()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_1C0D2A94C(uint64_t a1)
{
  unint64_t result;

  result = sub_1C0D2A970();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1C0D2A970()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF647FC8;
  if (!qword_1EF647FC8)
  {
    v1 = type metadata accessor for SoundAnalysisSignal();
    result = MEMORY[0x1C3BA8174](&unk_1C10B6704, v1);
    atomic_store(result, (unint64_t *)&qword_1EF647FC8);
  }
  return result;
}

uint64_t sub_1C0D2A9AC()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C0D2A9D0()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_1C0D2A9F4(void *a1)
{
  uint64_t v1;

  sub_1C0D2A1B8(a1, v1);
}

uint64_t sub_1C0D2AA04@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;

  v4 = sub_1C07ACF80(&qword_1ED7623F8);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Source();
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v19 - v11;
  switch(a1)
  {
    case 1:
      if (qword_1ED761438 != -1)
        swift_once();
      v13 = byte_1ED761420;
      goto LABEL_61;
    case 2:
      if (qword_1ED762380 != -1)
        swift_once();
      v13 = &unk_1ED762360;
      goto LABEL_61;
    case 6:
      if (qword_1ED7623A8 != -1)
        swift_once();
      v13 = &unk_1ED762388;
      goto LABEL_61;
    case 9:
      if (qword_1ED7622F0 != -1)
        swift_once();
      v13 = byte_1ED7622D0;
      goto LABEL_61;
    case 11:
      if (qword_1ED7623C8 != -1)
        swift_once();
      v13 = &unk_1ED7623B0;
      goto LABEL_61;
    case 12:
      if (qword_1ED762330 != -1)
        swift_once();
      v13 = &unk_1ED762318;
      goto LABEL_61;
    case 14:
      if (qword_1ED762358 != -1)
        swift_once();
      v13 = &unk_1ED762338;
      goto LABEL_61;
    case 16:
      if (qword_1ED762260 != -1)
        swift_once();
      v13 = &unk_1ED762240;
      goto LABEL_61;
    case 17:
      if (qword_1ED761448 != -1)
        swift_once();
      v13 = &unk_1ED762E88;
      goto LABEL_61;
    case 18:
      if (qword_1ED7623F0 != -1)
        swift_once();
      v13 = &unk_1ED7623D0;
      goto LABEL_61;
    case 19:
      if (qword_1ED761418 != -1)
        swift_once();
      v13 = &unk_1ED761400;
      goto LABEL_61;
    case 21:
      if (qword_1ED762310 != -1)
        swift_once();
      v13 = &unk_1ED7622F8;
      goto LABEL_61;
    case 22:
      if (qword_1ED7622C8 != -1)
        swift_once();
      v13 = &unk_1ED7622B0;
      goto LABEL_61;
    case 23:
      if (qword_1ED762E80 != -1)
        swift_once();
      v13 = &unk_1ED762268;
      goto LABEL_61;
    case 24:
      if (qword_1ED7622A8 != -1)
        swift_once();
      v13 = &unk_1ED762288;
      goto LABEL_61;
    case 25:
      if (qword_1ED762280 != -1)
        swift_once();
      v13 = &unk_1ED761548;
      goto LABEL_61;
    case 27:
      if (qword_1ED761598 != -1)
        swift_once();
      v13 = &unk_1ED761838;
      goto LABEL_61;
    case 29:
      if (qword_1ED761870 != -1)
        swift_once();
      v13 = &unk_1ED761850;
LABEL_61:
      v16 = sub_1C079E000(v7, (uint64_t)v13);
      sub_1C0A53D64(v16, (uint64_t)v12);
      goto LABEL_62;
    default:
      if (qword_1ED761518 != -1)
        swift_once();
      swift_beginAccess();
      if (!qword_1ED7627B8)
      {
        sub_1C0791AE8((uint64_t)v6, 1);
        goto LABEL_65;
      }
      v14 = (*((uint64_t (**)(void))off_1ED7627C0 + 2))();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16))(a1, v14, v15);
      if (sub_1C07B2D80((uint64_t)v6, 1, v7) == 1)
      {
LABEL_65:
        sub_1C08E29F0((uint64_t)v6);
        v17 = 1;
        return sub_1C0791AE8(a2, v17);
      }
      sub_1C0845A08((uint64_t)v6, (uint64_t)v9);
      sub_1C0845A08((uint64_t)v9, (uint64_t)v12);
LABEL_62:
      sub_1C0845A08((uint64_t)v12, a2);
      v17 = 0;
      return sub_1C0791AE8(a2, v17);
  }
}

void Source.databaseValue.getter()
{
  JUMPOUT(0x1C3BA6BCCLL);
}

uint64_t static Source.fromDatabaseValue(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char v9;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint64_t v14;
  uint8_t *v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  _QWORD v19[3];
  uint64_t v20;

  v4 = sub_1C106BC8C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1C10702B8();
  if ((v9 & 1) == 0)
    return sub_1C0D2AA04(v8, a2);
  if (qword_1ED761458 != -1)
    swift_once();
  v11 = sub_1C106F544();
  sub_1C079E000(v11, (uint64_t)qword_1ED78D818);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
  v12 = sub_1C106F538();
  v13 = sub_1C1070390();
  if (os_log_type_enabled(v12, v13))
  {
    v14 = swift_slowAlloc();
    v19[1] = a2;
    v15 = (uint8_t *)v14;
    v20 = swift_slowAlloc();
    *(_DWORD *)v15 = 136380675;
    sub_1C07803B8((unint64_t *)&qword_1EF647FD0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D23D70], MEMORY[0x1E0D23D80]);
    v16 = sub_1C1070C0C();
    v19[2] = sub_1C0788DAC(v16, v17, &v20);
    sub_1C10705AC();
    swift_bridgeObjectRelease();
    sub_1C07A75E4();
    _os_log_impl(&dword_1C0771000, v12, v13, "Source: failed to initialize from database value: %{private}s", v15, 0xCu);
    swift_arrayDestroy();
    sub_1C0776778();
  }
  sub_1C07A75E4();

  v18 = type metadata accessor for Source();
  return sub_1C07B2D8C(a2, 1, 1, v18);
}

uint64_t sub_1C0D2B1DC()
{
  sub_1C07803B8(&qword_1ED75CC28, (uint64_t (*)(uint64_t))type metadata accessor for Source, (uint64_t)&protocol conformance descriptor for Source);
  return sub_1C106C208();
}

uint64_t sub_1C0D2B22C()
{
  sub_1C07803B8(&qword_1ED75CC28, (uint64_t (*)(uint64_t))type metadata accessor for Source, (uint64_t)&protocol conformance descriptor for Source);
  return sub_1C106C214();
}

uint64_t sub_1C0D2B284()
{
  return sub_1C07803B8(&qword_1ED75CC18, (uint64_t (*)(uint64_t))type metadata accessor for Source, (uint64_t)&protocol conformance descriptor for Source);
}

uint64_t sub_1C0D2B2B0()
{
  return sub_1C07803B8(&qword_1ED75CC20, (uint64_t (*)(uint64_t))type metadata accessor for Source, (uint64_t)&protocol conformance descriptor for Source);
}

uint64_t sub_1C0D2B2DC()
{
  uint64_t v0;

  type metadata accessor for Source();
  sub_1C106D0FC();
  sub_1C07B1280();
  v0 = sub_1C10705DC();
  swift_bridgeObjectRelease();
  sub_1C106FC94();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C106FC94();
  swift_bridgeObjectRelease();
  sub_1C106FC94();
  return v0;
}

uint64_t Source.init(rawValue:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  BOOL v15;
  _BYTE *v16;
  uint64_t v17;
  uint64_t v18;
  BOOL v20;
  uint64_t v21;
  BOOL v22;
  BOOL v23;
  uint64_t v24;
  uint64_t v25;
  BOOL v26;
  BOOL v27;
  BOOL v28;
  uint64_t v29;
  BOOL v30;
  BOOL v31;
  uint64_t v32;
  uint64_t v33;
  BOOL v34;
  BOOL v35;
  BOOL v36;
  BOOL v37;
  BOOL v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  v6 = sub_1C07ACF80(&qword_1ED7623F8);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v41 - v10;
  v12 = sub_1C077674C();
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v41 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = a1 == 0x6361746E6F434E43 && a2 == 0xE900000000000074;
  if (v15 || (sub_1C079A120() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    if (qword_1ED761438 != -1)
      swift_once();
    v16 = byte_1ED761420;
LABEL_9:
    v17 = sub_1C079E000(v12, (uint64_t)v16);
    sub_1C0A53D64(v17, (uint64_t)v14);
    goto LABEL_10;
  }
  v20 = a1 == 0x6E6F737265504E49 && a2 == 0xE800000000000000;
  if (v20 || (sub_1C079A120() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    if (qword_1ED762380 != -1)
      swift_once();
    v16 = &unk_1ED762360;
    goto LABEL_9;
  }
  sub_1C07953B0();
  v22 = a1 == v21 && a2 == 0xE900000000000074;
  if (v22 || (sub_1C079A120() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    if (qword_1ED761448 != -1)
      swift_once();
    v16 = &unk_1ED762E88;
    goto LABEL_9;
  }
  v23 = a1 == 0x694C657275747566 && a2 == 0xEF746E6576456566;
  if (v23 || (sub_1C079A120() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    if (qword_1ED762E80 != -1)
      swift_once();
    v16 = &unk_1ED762268;
    goto LABEL_9;
  }
  sub_1C079E894();
  if (a1 == v24 - 1 && a2 == 0x80000001C10E71E0 || (sub_1C079A120() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    if (qword_1ED761418 != -1)
      swift_once();
    v16 = &unk_1ED761400;
    goto LABEL_9;
  }
  sub_1C0793F94();
  v26 = a1 == v25 && a2 == 0xE900000000000065;
  if (v26 || (sub_1C079A120() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    if (qword_1ED7623F0 != -1)
      swift_once();
    v16 = &unk_1ED7623D0;
    goto LABEL_9;
  }
  v27 = a1 == 0x6361746E6F434753 && a2 == 0xE900000000000074;
  if (v27 || (sub_1C079A120() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    if (qword_1ED7623C8 != -1)
      swift_once();
    v16 = &unk_1ED7623B0;
    goto LABEL_9;
  }
  v28 = a1 == 0x746E6576454753 && a2 == 0xE700000000000000;
  if (v28 || (sub_1C079A120() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    if (qword_1ED762330 != -1)
      swift_once();
    v16 = &unk_1ED762318;
    goto LABEL_9;
  }
  sub_1C078B3F8();
  v30 = a1 == v29 && a2 == 0xE700000000000000;
  if (v30 || (sub_1C079A120() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    if (qword_1ED762310 != -1)
      swift_once();
    v16 = &unk_1ED7622F8;
    goto LABEL_9;
  }
  v31 = a1 == 0x6E6F737265504850 && a2 == 0xE800000000000000;
  if (v31 || (sub_1C079A120() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    if (qword_1ED7623A8 != -1)
      swift_once();
    v16 = &unk_1ED762388;
    goto LABEL_9;
  }
  sub_1C079E894();
  if (a1 == v32 + 12 && a2 == 0x80000001C1103670 || (sub_1C079A120() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    if (qword_1ED7622C8 != -1)
      swift_once();
    v16 = &unk_1ED7622B0;
    goto LABEL_9;
  }
  sub_1C079B9C8();
  v34 = a1 == v33 && a2 == 0xE800000000000000;
  if (v34 || (sub_1C079A120() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    if (qword_1ED762358 != -1)
      swift_once();
    v16 = &unk_1ED762338;
    goto LABEL_9;
  }
  v35 = a1 == 0x746E6576454B45 && a2 == 0xE700000000000000;
  if (v35 || (sub_1C079A120() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    if (qword_1ED7622F0 != -1)
      swift_once();
    v16 = byte_1ED7622D0;
    goto LABEL_9;
  }
  v36 = a1 == 0x656C646E7542534CLL && a2 == 0xEE0064726F636552;
  if (v36 || (sub_1C079A120() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    if (qword_1ED762260 != -1)
      swift_once();
    v16 = &unk_1ED762240;
    goto LABEL_9;
  }
  if (a1 == 0xD000000000000012 && a2 == 0x80000001C10FBD70 || (sub_1C079A120() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    if (qword_1ED7622A8 != -1)
      swift_once();
    v16 = &unk_1ED762288;
    goto LABEL_9;
  }
  if (a1 == 0xD000000000000012 && a2 == 0x80000001C10F3780 || (sub_1C079A120() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    if (qword_1ED762280 != -1)
      swift_once();
    v16 = &unk_1ED761548;
    goto LABEL_9;
  }
  v37 = a1 == 0x6E6F6974616C6552 && a2 == 0xEC00000070696873;
  if (v37 || (sub_1C079A120() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    if (qword_1ED761598 != -1)
      swift_once();
    v16 = &unk_1ED761838;
    goto LABEL_9;
  }
  v38 = a1 == 0x6974616C65524750 && a2 == 0xEE00706968736E6FLL;
  if (v38 || (sub_1C079A120() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    if (qword_1ED761870 != -1)
      swift_once();
    v16 = &unk_1ED761850;
    goto LABEL_9;
  }
  if (qword_1ED761518 != -1)
    swift_once();
  swift_beginAccess();
  if (!qword_1ED7627B8)
  {
    sub_1C0791AE8((uint64_t)v8, 1);
    goto LABEL_146;
  }
  (*((void (**)(void))off_1ED7627C0 + 2))();
  (*(void (**)(uint64_t, uint64_t))(v39 + 8))(a1, a2);
  if (sub_1C07B2D80((uint64_t)v8, 1, v12) == 1)
  {
LABEL_146:
    sub_1C08E29F0((uint64_t)v8);
    v40 = 1;
    goto LABEL_147;
  }
  sub_1C0845A08((uint64_t)v8, (uint64_t)v11);
  v40 = 0;
LABEL_147:
  sub_1C0791AE8((uint64_t)v11, v40);
  swift_bridgeObjectRelease();
  if (sub_1C07B2D80((uint64_t)v11, 1, v12) == 1)
  {
    sub_1C08E29F0((uint64_t)v11);
    v18 = 1;
    return sub_1C0791AE8(a3, v18);
  }
  sub_1C0845A08((uint64_t)v11, (uint64_t)v14);
LABEL_10:
  sub_1C0845A08((uint64_t)v14, a3);
  v18 = 0;
  return sub_1C0791AE8(a3, v18);
}

uint64_t type metadata accessor for Source()
{
  uint64_t result;

  result = qword_1ED762A50;
  if (!qword_1ED762A50)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t static Source.allSources.getter()
{
  uint64_t v0;
  uint64_t v2;

  if (qword_1ED75E978 != -1)
    swift_once();
  v0 = qword_1ED75E970;
  v2 = qword_1ED75E970;
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  if (sub_1C0D2D1B4())
  {
    sub_1C0BD9CCC();
    return v2;
  }
  return v0;
}

void sub_1C0D2BF58()
{
  uint64_t v0;
  uint64_t v1;

  sub_1C0776744();
  sub_1C07A3F38();
  MEMORY[0x1E0C80A78](v0);
  v1 = sub_1C07A1450();
  sub_1C079AF64(v1);
  sub_1C07AE160();
  sub_1C07A75F4(0x6361746E6F434E43);
  byte_1ED761420[*(int *)(v1 + 28)] = 1;
  qword_1ED761430 = 1;
  sub_1C07785E4();
}

void Source.init(id:entityClass:shouldDedupe:intValue:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, _QWORD *a6@<X8>)
{
  uint64_t v10;
  char *v11;
  uint64_t v12;

  *a6 = a1;
  a6[1] = a2;
  v10 = sub_1C077674C();
  v11 = (char *)a6 + *(int *)(v10 + 24);
  v12 = sub_1C0776744();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v11, a3, v12);
  *((_BYTE *)a6 + *(int *)(v10 + 28)) = a4;
  a6[2] = a5;
  sub_1C07785E4();
}

uint64_t static Source.CNContact.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C0D2C984(&qword_1ED761438, (uint64_t)byte_1ED761420, a1);
}

void sub_1C0D2C054()
{
  uint64_t v0;
  uint64_t v1;

  sub_1C0776744();
  sub_1C07A3F38();
  MEMORY[0x1E0C80A78](v0);
  v1 = sub_1C07A1450();
  sub_1C079AF64(v1);
  sub_1C07AE160();
  sub_1C07A75F4(0x6E6F737265504E49);
  sub_1C079E888();
  sub_1C078829C(2);
  sub_1C07785E4();
}

uint64_t static Source.INPerson.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C0D2C984(&qword_1ED762380, (uint64_t)&unk_1ED762360, a1);
}

void sub_1C0D2C0DC()
{
  uint64_t v0;
  uint64_t v1;

  sub_1C0776744();
  sub_1C07A3F38();
  MEMORY[0x1E0C80A78](v0);
  v1 = sub_1C07A1450();
  sub_1C079AF64(v1);
  sub_1C07AE160();
  sub_1C07A75F4(0x6E6F737265504850);
  sub_1C079E888();
  sub_1C078829C(6);
  sub_1C07785E4();
}

uint64_t static Source.PHPerson.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C0D2C984(&qword_1ED7623A8, (uint64_t)&unk_1ED762388, a1);
}

void sub_1C0D2C164()
{
  uint64_t v0;
  uint64_t v1;

  sub_1C0776744();
  sub_1C07A3F38();
  MEMORY[0x1E0C80A78](v0);
  v1 = sub_1C07A1450();
  sub_1C079AF64(v1);
  sub_1C07A02E0();
  sub_1C07A75F4(0x746E6576454B45);
  byte_1ED7622D0[*(int *)(v1 + 28)] = 1;
  sub_1C078829C(9);
  sub_1C07785E4();
}

uint64_t static Source.EKEvent.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C0D2C984(&qword_1ED7622F0, (uint64_t)byte_1ED7622D0, a1);
}

void sub_1C0D2C1F4()
{
  uint64_t v0;
  uint64_t v1;

  sub_1C0776744();
  sub_1C07A3F38();
  MEMORY[0x1E0C80A78](v0);
  v1 = sub_1C07A1450();
  sub_1C079AF64(v1);
  sub_1C07AE160();
  sub_1C07A75F4(0x6361746E6F434753);
  sub_1C079E888();
  sub_1C078829C(11);
  sub_1C07785E4();
}

uint64_t static Source.SGContact.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C0D2C984(&qword_1ED7623C8, (uint64_t)&unk_1ED7623B0, a1);
}

void sub_1C0D2C280()
{
  uint64_t v0;
  uint64_t v1;

  sub_1C0776744();
  sub_1C07A3F38();
  MEMORY[0x1E0C80A78](v0);
  v1 = sub_1C07A1450();
  sub_1C079AF64(v1);
  sub_1C07A02E0();
  sub_1C07A75F4(0x746E6576454753);
  sub_1C079E888();
  sub_1C078829C(12);
  sub_1C07785E4();
}

uint64_t static Source.SGEvent.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C0D2C984(&qword_1ED762330, (uint64_t)&unk_1ED762318, a1);
}

void sub_1C0D2C308()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_1C0776744();
  sub_1C07A3F38();
  MEMORY[0x1E0C80A78](v0);
  v1 = sub_1C07A1450();
  sub_1C079AF64(v1);
  sub_1C07915A4();
  sub_1C079B9C8();
  sub_1C07A75F4(v2);
  sub_1C079E888();
  sub_1C078829C(14);
  sub_1C07785E4();
}

uint64_t static Source.FAFamily.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C0D2C984(&qword_1ED762358, (uint64_t)&unk_1ED762338, a1);
}

void sub_1C0D2C384()
{
  uint64_t v0;
  uint64_t v1;

  sub_1C0776744();
  sub_1C07A3F38();
  MEMORY[0x1E0C80A78](v0);
  v1 = sub_1C07A1450();
  sub_1C079AF64(v1);
  sub_1C07A4B88();
  sub_1C106D1EC();
  sub_1C07A75F4(0x656C646E7542534CLL);
  sub_1C079E888();
  sub_1C078829C(16);
  sub_1C07785E4();
}

uint64_t static Source.LSBundleRecord.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C0D2C984(&qword_1ED762260, (uint64_t)&unk_1ED762240, a1);
}

void sub_1C0D2C41C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_1C0776744();
  sub_1C07A3F38();
  MEMORY[0x1E0C80A78](v0);
  v1 = sub_1C07A1450();
  sub_1C079AF64(v1);
  sub_1C079773C();
  sub_1C07953B0();
  sub_1C07A75F4(v2);
  sub_1C079E888();
  sub_1C078829C(17);
  sub_1C07785E4();
}

uint64_t static Source.lifeEvent.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C0D2C984(&qword_1ED761448, (uint64_t)&unk_1ED762E88, a1);
}

void sub_1C0D2C49C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_1C0776744();
  sub_1C07A3F38();
  MEMORY[0x1E0C80A78](v0);
  v1 = sub_1C07A1450();
  sub_1C079AF64(v1);
  sub_1C07A4B88();
  _s24IntelligencePlatformCore5StagePAAE11entityClass0aB006EntityF0Vvg_0();
  sub_1C0793F94();
  sub_1C07A75F4(v2);
  sub_1C079E888();
  sub_1C078829C(18);
  sub_1C07785E4();
}

uint64_t static Source.inference.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C0D2C984(&qword_1ED7623F0, (uint64_t)&unk_1ED7623D0, a1);
}

void sub_1C0D2C520()
{
  uint64_t v0;
  uint64_t v1;

  sub_1C0776744();
  sub_1C07A3F38();
  MEMORY[0x1E0C80A78](v0);
  v1 = sub_1C07A1450();
  sub_1C079AF64(v1);
  sub_1C079773C();
  sub_1C07A75F4(0xD000000000000011);
  sub_1C079E888();
  sub_1C078829C(19);
  sub_1C07785E4();
}

uint64_t static Source.BMAppleMusicEvent.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C0D2C984(&qword_1ED761418, (uint64_t)&unk_1ED761400, a1);
}

void sub_1C0D2C5AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_1C0776744();
  sub_1C07A3F38();
  MEMORY[0x1E0C80A78](v0);
  v1 = sub_1C07A1450();
  sub_1C079AF64(v1);
  sub_1C07915A4();
  sub_1C078B3F8();
  sub_1C07A75F4(v2);
  sub_1C079E888();
  sub_1C078829C(21);
  sub_1C07785E4();
}

uint64_t static Source.INGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C0D2C984(&qword_1ED762310, (uint64_t)&unk_1ED7622F8, a1);
}

void sub_1C0D2C628()
{
  uint64_t v0;
  uint64_t v1;

  sub_1C0776744();
  sub_1C07A3F38();
  MEMORY[0x1E0C80A78](v0);
  v1 = sub_1C07A1450();
  sub_1C079AF64(v1);
  sub_1C07AE160();
  sub_1C07A75F4(0xD00000000000001ELL);
  sub_1C079E888();
  sub_1C078829C(22);
  sub_1C07785E4();
}

uint64_t static Source.IPEntityTaggingPersonInference.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C0D2C984(&qword_1ED7622C8, (uint64_t)&unk_1ED7622B0, a1);
}

void sub_1C0D2C6B4()
{
  uint64_t v0;
  uint64_t v1;

  sub_1C0776744();
  sub_1C07A3F38();
  MEMORY[0x1E0C80A78](v0);
  v1 = sub_1C07A1450();
  sub_1C079AF64(v1);
  sub_1C079773C();
  sub_1C07A75F4(0x694C657275747566);
  sub_1C079E888();
  sub_1C078829C(23);
  sub_1C07785E4();
}

uint64_t static Source.futureLifeEvent.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C0D2C984(&qword_1ED762E80, (uint64_t)&unk_1ED762268, a1);
}

void sub_1C0D2C748()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_1C0776744();
  sub_1C07A3F38();
  MEMORY[0x1E0C80A78](v0);
  v1 = sub_1C07A1450();
  sub_1C079AF64(v1);
  sub_1C07AE160();
  sub_1C079E894();
  sub_1C07A75F4(v2);
  sub_1C079E888();
  sub_1C078829C(24);
  sub_1C07785E4();
}

uint64_t static Source.HKEmergencyContact.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C0D2C984(&qword_1ED7622A8, (uint64_t)&unk_1ED762288, a1);
}

void sub_1C0D2C7D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_1C0776744();
  sub_1C07A3F38();
  MEMORY[0x1E0C80A78](v0);
  v1 = sub_1C07A1450();
  sub_1C079AF64(v1);
  sub_1C07A4B88();
  sub_1C106CDC0();
  sub_1C079E894();
  sub_1C07A75F4(v2);
  sub_1C079E888();
  sub_1C078829C(25);
  sub_1C07785E4();
}

uint64_t static Source.FavoriteSportsTeam.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C0D2C984(&qword_1ED762280, (uint64_t)&unk_1ED761548, a1);
}

void sub_1C0D2C85C()
{
  uint64_t v0;
  uint64_t v1;

  sub_1C0776744();
  sub_1C07A3F38();
  MEMORY[0x1E0C80A78](v0);
  v1 = sub_1C07A1450();
  sub_1C079AF64(v1);
  sub_1C07A4B88();
  sub_1C106D06C();
  sub_1C07A75F4(0x6E6F6974616C6552);
  sub_1C079E888();
  sub_1C078829C(27);
  sub_1C07785E4();
}

uint64_t static Source.Relationship.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C0D2C984(&qword_1ED761598, (uint64_t)&unk_1ED761838, a1);
}

void sub_1C0D2C8F0()
{
  uint64_t v0;
  uint64_t v1;

  sub_1C0776744();
  sub_1C07A3F38();
  MEMORY[0x1E0C80A78](v0);
  v1 = sub_1C07A1450();
  sub_1C079AF64(v1);
  sub_1C07AE160();
  sub_1C07A75F4(0x6974616C65524750);
  sub_1C079E888();
  sub_1C078829C(29);
  sub_1C07785E4();
}

uint64_t static Source.PGRelationship.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C0D2C984(&qword_1ED761870, (uint64_t)&unk_1ED761850, a1);
}

uint64_t sub_1C0D2C984@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;

  if (*a1 != -1)
    swift_once();
  v5 = sub_1C077674C();
  v6 = sub_1C079E000(v5, a2);
  return sub_1C0A53D64(v6, a3);
}

uint64_t Source.intValue.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 16);
}

uint64_t Source.entityClass.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(sub_1C077674C() + 24);
  v4 = sub_1C0776744();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t Source.shouldDedupe.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(sub_1C077674C() + 28));
}

uint64_t Source.description.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  return v1;
}

uint64_t sub_1C0D2CA5C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t result;

  sub_1C07ACF80(&qword_1ED7603F0);
  v0 = type metadata accessor for Source();
  v1 = *(_QWORD *)(v0 - 8);
  v2 = *(_QWORD *)(v1 + 72);
  v3 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1C10819A0;
  v5 = v4 + v3;
  if (qword_1ED761438 != -1)
    swift_once();
  v6 = sub_1C079E000(v0, (uint64_t)byte_1ED761420);
  sub_1C0A53D64(v6, v5);
  if (qword_1ED762380 != -1)
    swift_once();
  v7 = sub_1C079E000(v0, (uint64_t)&unk_1ED762360);
  sub_1C0A53D64(v7, v5 + v2);
  if (qword_1ED761448 != -1)
    swift_once();
  v8 = sub_1C079E000(v0, (uint64_t)&unk_1ED762E88);
  sub_1C0A53D64(v8, v5 + 2 * v2);
  if (qword_1ED762E80 != -1)
    swift_once();
  v9 = sub_1C079E000(v0, (uint64_t)&unk_1ED762268);
  sub_1C0A53D64(v9, v5 + 3 * v2);
  if (qword_1ED761418 != -1)
    swift_once();
  v10 = sub_1C079E000(v0, (uint64_t)&unk_1ED761400);
  sub_1C0A53D64(v10, v5 + 4 * v2);
  if (qword_1ED7623F0 != -1)
    swift_once();
  v11 = sub_1C079E000(v0, (uint64_t)&unk_1ED7623D0);
  sub_1C0A53D64(v11, v5 + 5 * v2);
  if (qword_1ED762330 != -1)
    swift_once();
  v12 = sub_1C079E000(v0, (uint64_t)&unk_1ED762318);
  sub_1C0A53D64(v12, v5 + 6 * v2);
  if (qword_1ED7623C8 != -1)
    swift_once();
  v13 = sub_1C079E000(v0, (uint64_t)&unk_1ED7623B0);
  sub_1C0A53D64(v13, v5 - v2 + 8 * v2);
  if (qword_1ED762310 != -1)
    swift_once();
  v14 = sub_1C079E000(v0, (uint64_t)&unk_1ED7622F8);
  sub_1C0A53D64(v14, v5 + 8 * v2);
  if (qword_1ED7623A8 != -1)
    swift_once();
  v15 = sub_1C079E000(v0, (uint64_t)&unk_1ED762388);
  sub_1C0A53D64(v15, v5 + 9 * v2);
  if (qword_1ED7622C8 != -1)
    swift_once();
  v16 = sub_1C079E000(v0, (uint64_t)&unk_1ED7622B0);
  sub_1C0A53D64(v16, v5 + 10 * v2);
  if (qword_1ED762358 != -1)
    swift_once();
  v17 = sub_1C079E000(v0, (uint64_t)&unk_1ED762338);
  sub_1C0A53D64(v17, v5 + 11 * v2);
  if (qword_1ED762260 != -1)
    swift_once();
  v18 = sub_1C079E000(v0, (uint64_t)&unk_1ED762240);
  sub_1C0A53D64(v18, v5 + 12 * v2);
  if (qword_1ED7622F0 != -1)
    swift_once();
  v19 = sub_1C079E000(v0, (uint64_t)byte_1ED7622D0);
  sub_1C0A53D64(v19, v5 + 13 * v2);
  if (qword_1ED7622A8 != -1)
    swift_once();
  v20 = sub_1C079E000(v0, (uint64_t)&unk_1ED762288);
  sub_1C0A53D64(v20, v5 + 14 * v2);
  if (qword_1ED762280 != -1)
    swift_once();
  v21 = sub_1C079E000(v0, (uint64_t)&unk_1ED761548);
  sub_1C0A53D64(v21, v5 - v2 + 16 * v2);
  if (qword_1ED761598 != -1)
    swift_once();
  v22 = sub_1C079E000(v0, (uint64_t)&unk_1ED761838);
  sub_1C0A53D64(v22, v5 + 16 * v2);
  if (qword_1ED761870 != -1)
    swift_once();
  v23 = sub_1C079E000(v0, (uint64_t)&unk_1ED761850);
  result = sub_1C0A53D64(v23, v5 + 17 * v2);
  qword_1ED75E970 = v4;
  return result;
}

uint64_t static Source.productionSources.getter()
{
  if (qword_1ED75E978 != -1)
    swift_once();
  return _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
}

uint64_t sub_1C0D2D014()
{
  uint64_t result;

  result = sub_1C0D2D030();
  qword_1ED78D4B0 = result;
  return result;
}

uint64_t sub_1C0D2D030()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  char v12;
  char v13;
  uint64_t v15;
  _QWORD *v16;

  v0 = type metadata accessor for Source();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v15 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = static Source.allSources.getter();
  v5 = *(_QWORD *)(v4 + 16);
  if (v5)
  {
    v16 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    sub_1C09D3078();
    v6 = v4 + ((*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));
    v7 = *(_QWORD *)(v1 + 72);
    v8 = v16;
    do
    {
      sub_1C0A53D64(v6, (uint64_t)v3);
      v9 = *((_QWORD *)v3 + 2);
      sub_1C08CBC78((uint64_t)v3);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1C09D3078();
        v8 = v16;
      }
      v10 = v8[2];
      if (v10 >= v8[3] >> 1)
      {
        sub_1C09D3078();
        v8 = v16;
      }
      v8[2] = v10 + 1;
      v8[v10 + 4] = v9;
      v6 += v7;
      --v5;
    }
    while (v5);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    v8 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  v11 = sub_1C085D064(v8);
  v13 = v12;
  swift_bridgeObjectRelease();
  if ((v13 & 1) != 0)
    return 0;
  else
    return v11;
}

uint64_t sub_1C0D2D1B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;

  if (qword_1ED761518 != -1)
    swift_once();
  swift_beginAccess();
  if (qword_1ED7627B8 && ((*((void (**)(void))off_1ED7627C0 + 2))(), (v1 = (*(uint64_t (**)(void))(v0 + 24))()) != 0))
  {
    v2 = v1;
    if (qword_1ED762B18 != -1)
      swift_once();
    v3 = sub_1C106F544();
    sub_1C079E000(v3, (uint64_t)qword_1ED762AF8);
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    v4 = sub_1C106F538();
    v5 = sub_1C10703A8();
    if (os_log_type_enabled(v4, v5))
    {
      v6 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v6 = 134217984;
      sub_1C10705AC();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C0771000, v4, v5, "InternalPlugin: Source: loadInternalSources: loaded %ld sources", v6, 0xCu);
      MEMORY[0x1C3BA8270](v6, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease();
    }
  }
  else
  {
    if (qword_1ED762B18 != -1)
      swift_once();
    v7 = sub_1C106F544();
    sub_1C079E000(v7, (uint64_t)qword_1ED762AF8);
    v8 = sub_1C106F538();
    v9 = sub_1C10703A8();
    if (os_log_type_enabled(v8, v9))
    {
      v10 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v10 = 0;
      _os_log_impl(&dword_1C0771000, v8, v9, "InternalPlugin: Source: loadInternalSources: failed to load internal sources", v10, 2u);
      MEMORY[0x1C3BA8270](v10, -1, -1);
    }

    return 0;
  }
  return v2;
}

uint64_t static Source.< infix(_:_:)(_QWORD *a1, _QWORD *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1])
    return 0;
  else
    return sub_1C1070CB4();
}

uint64_t sub_1C0D2D438@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return Source.init(rawValue:)(*a1, a1[1], a2);
}

uint64_t sub_1C0D2D444@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = Source.description.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1C0D2D468()
{
  sub_1C0D2DA2C((unint64_t *)&unk_1ED760AE0, (uint64_t)&protocol conformance descriptor for Source);
  return sub_1C106FE8C();
}

uint64_t sub_1C0D2D4D4()
{
  sub_1C0D2DA2C((unint64_t *)&unk_1ED760AE0, (uint64_t)&protocol conformance descriptor for Source);
  return sub_1C106FE50();
}

uint64_t sub_1C0D2D534()
{
  return sub_1C0D2DA2C(&qword_1ED744710, (uint64_t)&protocol conformance descriptor for Source);
}

_QWORD *initializeBufferWithCopyOfBuffer for Source(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v13 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    a1[2] = a2[2];
    v8 = *(int *)(a3 + 24);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_1C106D1F8();
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    v12(v9, v10, v11);
    *((_BYTE *)v4 + *(int *)(a3 + 28)) = *((_BYTE *)a2 + *(int *)(a3 + 28));
  }
  return v4;
}

uint64_t destroy for Source(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 24);
  v5 = sub_1C106D1F8();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

_QWORD *initializeWithCopy for Source(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  a1[2] = a2[2];
  v7 = *(int *)(a3 + 24);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_1C106D1F8();
  v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  v11(v8, v9, v10);
  *((_BYTE *)a1 + *(int *)(a3 + 28)) = *((_BYTE *)a2 + *(int *)(a3 + 28));
  return a1;
}

_QWORD *assignWithCopy for Source(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  *a1 = *a2;
  a1[1] = a2[1];
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  v6 = *(int *)(a3 + 24);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1C106D1F8();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  *((_BYTE *)a1 + *(int *)(a3 + 28)) = *((_BYTE *)a2 + *(int *)(a3 + 28));
  return a1;
}

uint64_t initializeWithTake for Source(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v6 = *(int *)(a3 + 24);
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_1C106D1F8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  *(_BYTE *)(a1 + *(int *)(a3 + 28)) = *(_BYTE *)(a2 + *(int *)(a3 + 28));
  return a1;
}

_QWORD *assignWithTake for Source(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  v7 = *(int *)(a3 + 24);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_1C106D1F8();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  *((_BYTE *)a1 + *(int *)(a3 + 28)) = *((_BYTE *)a2 + *(int *)(a3 + 28));
  return a1;
}

uint64_t getEnumTagSinglePayload for Source()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1C0D2D8C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_1C0776744();
    return sub_1C07B2D80(a1 + *(int *)(a3 + 24), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for Source()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1C0D2D93C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = sub_1C0776744();
    return sub_1C07B2D8C(v5 + *(int *)(a4 + 24), a2, a2, v7);
  }
  return result;
}

uint64_t sub_1C0D2D9A4()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1C106D1F8();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1C0D2DA2C(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for Source();
    result = MEMORY[0x1C3BA8174](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C0D2DA74@<X0>(_QWORD *a1@<X8>)
{
  return sub_1C0D2DA90(type metadata accessor for EntityTriple, a1);
}

uint64_t sub_1C0D2DA90@<X0>(uint64_t (*a1)(_QWORD)@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  char v12;
  char v13;
  uint64_t v14;

  sub_1C077674C();
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v5);
  sub_1C0778564();
  v8 = v7 - v6;
  v9 = a1(0);
  result = sub_1C0A53D64(v2 + *(int *)(v9 + 36), v8);
  if (__OFSUB__(*(_QWORD *)(v8 + 16), 1))
  {
    __break(1u);
  }
  else
  {
    sub_1C079C6D0();
    if (!v13 & v12)
      v14 = 0;
    else
      v14 = v11;
    result = sub_1C079775C();
    *a2 = v14;
  }
  return result;
}

uint64_t SourcedTriple.sources.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  char v12;
  char v13;
  uint64_t v14;

  sub_1C077674C();
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v6);
  sub_1C0778564();
  v9 = v8 - v7;
  result = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 40))(a1, a2);
  if (__OFSUB__(*(_QWORD *)(v9 + 16), 1))
  {
    __break(1u);
  }
  else
  {
    sub_1C079C6D0();
    if (!v13 & v12)
      v14 = 0;
    else
      v14 = v11;
    result = sub_1C07A0300();
    *a3 = v14;
  }
  return result;
}

uint64_t SourcedTriple.description.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v20)(uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;

  sub_1C077674C();
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v3);
  sub_1C077AE40();
  v26 = v4;
  v23 = sub_1C079B9DC();
  v24 = *(_QWORD *)(v23 - 8);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v5);
  sub_1C077AE40();
  v22 = v6;
  v7 = sub_1C0793B1C();
  v21 = *(_QWORD *)(v7 - 8);
  v8 = v7;
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v9);
  sub_1C0778564();
  v12 = v11 - v10;
  v13 = sub_1C106E590();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  sub_1C0778564();
  v17 = v16 - v15;
  sub_1C1070774();
  sub_1C077866C();
  v28 = 60;
  v29 = 0xE100000000000000;
  v27 = a1;
  swift_getMetatypeMetadata();
  sub_1C106FB5C();
  sub_1C106FC94();
  swift_bridgeObjectRelease();
  sub_1C106FC94();
  sub_1C07A2AB0();
  sub_1C106EA94();
  sub_1C07803B8((unint64_t *)&qword_1ED7625A0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3CE28], MEMORY[0x1E0D3CE60]);
  sub_1C1070C0C();
  sub_1C07A08D0();
  sub_1C07767AC();
  (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v17, v13);
  sub_1C106FC94();
  sub_1C07A2AB0();
  sub_1C106EAA0();
  sub_1C07803B8(&qword_1EF632CD0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3CC50], MEMORY[0x1E0D3CC90]);
  sub_1C1070C0C();
  sub_1C07A08D0();
  sub_1C07767AC();
  v20 = *(void (**)(uint64_t, uint64_t))(v21 + 8);
  v20(v12, v8);
  sub_1C0793020();
  sub_1C1070774();
  sub_1C077866C();
  v28 = 0x273A697220;
  v29 = 0xE500000000000000;
  sub_1C07A2AB0();
  sub_1C106EA70();
  sub_1C07803B8(&qword_1EF639B28, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3D450], MEMORY[0x1E0D3D488]);
  sub_1C1070C0C();
  sub_1C07A08D0();
  sub_1C07767AC();
  (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v22, v23);
  sub_1C0786558();
  sub_1C07A2AB0();
  sub_1C106EA7C();
  sub_1C1070C0C();
  sub_1C07A08D0();
  sub_1C07767AC();
  v20(v12, v8);
  sub_1C0793020();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C106FC94();
  sub_1C077B5B4();
  swift_bridgeObjectRelease();
  sub_1C1070774();
  sub_1C077866C();
  v28 = 658140960;
  v29 = 0xE400000000000000;
  sub_1C07A2AB0();
  sub_1C106EA88();
  sub_1C07A08D0();
  sub_1C07767AC();
  sub_1C106FC94();
  v18 = a2;
  (*(void (**)(uint64_t))(a2 + 40))(a1);
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C106FC94();
  sub_1C077B5B4();
  sub_1C08CBC78(v26);
  sub_1C106FC94();
  (*(void (**)(uint64_t, uint64_t))(v18 + 48))(a1, v18);
  sub_1C07A08D0();
  sub_1C07767AC();
  sub_1C0786558();
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v18 + 56))(&v27, a1, v18);
  PipelineType.description.getter();
  sub_1C07A08D0();
  sub_1C07767AC();
  sub_1C106FC94();
  v28 = 60;
  v29 = 0xE100000000000000;
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C106FC94();
  swift_bridgeObjectRelease();
  sub_1C0775844();
  return v28;
}

uint64_t static SourcedTriple.< infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  void (*v33)(char *, uint64_t);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  void (*v38)(uint64_t, uint64_t);
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char v51;
  char *v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  char *v57;
  uint64_t v58;
  char v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char v63;
  _QWORD *v64;
  _QWORD *v65;
  char v67;
  _QWORD *v68;
  _QWORD *v69;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char v76;
  uint64_t v77;
  char v78;
  double v79;
  double v80;
  double v81;
  uint64_t v82;
  _QWORD v83[3];
  char *v84;
  _QWORD *v85;
  char *v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  unsigned __int8 v99;

  sub_1C077674C();
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v8);
  sub_1C077AED0();
  v85 = v9;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v10);
  v84 = (char *)v83 - v11;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v12);
  v86 = (char *)v83 - v13;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v14);
  v87 = (char *)v83 - v15;
  v92 = sub_1C079B9DC();
  v89 = *(_QWORD *)(v92 - 8);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v16);
  sub_1C077AED0();
  v91 = v17;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v18);
  v90 = (char *)v83 - v19;
  v95 = sub_1C0793B1C();
  v93 = *(char **)(v95 - 8);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v20);
  sub_1C077AED0();
  v94 = v21;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v22);
  v24 = (char *)v83 - v23;
  v25 = sub_1C106E590();
  v26 = *(_QWORD *)(v25 - 8);
  MEMORY[0x1E0C80A78](v25);
  v28 = (char *)v83 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v29);
  v31 = (char *)v83 - v30;
  v88 = a4;
  v32 = *(_QWORD *)(a4 + 8);
  v96 = a1;
  sub_1C07915C4();
  v97 = a2;
  v98 = a3;
  sub_1C07915C4();
  sub_1C07803B8(&qword_1ED75EA38, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3CE28], MEMORY[0x1E0D3CE50]);
  LOBYTE(a1) = sub_1C106FAA8();
  v33 = *(void (**)(char *, uint64_t))(v26 + 8);
  sub_1C0792D40((uint64_t)v28);
  sub_1C0792D40((uint64_t)v31);
  if ((a1 & 1) == 0)
  {
    sub_1C07915C4();
    sub_1C07915C4();
    v51 = sub_1C106E554();
    sub_1C0792D40((uint64_t)v28);
    v52 = v31;
    v53 = v25;
LABEL_15:
    v33(v52, v53);
    return v51 & 1;
  }
  v83[2] = v32;
  sub_1C078FB3C();
  v34 = v94;
  sub_1C078FB3C();
  v35 = sub_1C07803B8((unint64_t *)&qword_1ED75EA30, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3CC50], MEMORY[0x1E0D3CC78]);
  v36 = v95;
  v37 = sub_1C106FAA8();
  v38 = (void (*)(uint64_t, uint64_t))*((_QWORD *)v93 + 1);
  v38(v34, v36);
  v38((uint64_t)v24, v36);
  if ((v37 & 1) == 0)
  {
    sub_1C078FB3C();
    sub_1C078FB3C();
    v51 = sub_1C106E0D4();
    v38(v34, v36);
    v54 = v24;
    v55 = v36;
LABEL_17:
    v38((uint64_t)v54, v55);
    return v51 & 1;
  }
  v83[1] = v35;
  v93 = v24;
  v39 = sub_1C106EA88();
  v41 = v40;
  if (v39 == sub_1C106EA88() && v41 == v42)
  {
    sub_1C07758A4();
  }
  else
  {
    v44 = sub_1C07785B0();
    sub_1C077B5B4();
    sub_1C077960C();
    if ((v44 & 1) == 0)
    {
      sub_1C079814C();
      v45 = sub_1C106EA88();
      v47 = v46;
      v48 = sub_1C106EA88();
LABEL_9:
      if (v45 == v48 && v47 == v49)
      {
        sub_1C07758A4();
        v51 = 0;
      }
      else
      {
        sub_1C079E8A0();
        v51 = sub_1C0795BCC();
        sub_1C0775844();
        swift_bridgeObjectRelease();
      }
      return v51 & 1;
    }
  }
  v57 = v90;
  sub_1C079814C();
  sub_1C106EA70();
  sub_1C106EA70();
  sub_1C07803B8(qword_1ED75EA50, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3D450], MEMORY[0x1E0D3D478]);
  v58 = v92;
  v59 = sub_1C106FAA8();
  v33 = *(void (**)(char *, uint64_t))(v89 + 8);
  sub_1C07A1F9C();
  v33(v57, v58);
  if ((v59 & 1) == 0)
  {
    sub_1C0795CD4();
    sub_1C0795CD4();
    v51 = sub_1C106EAF4();
    sub_1C07A1F9C();
    v52 = v57;
    v53 = v58;
    goto LABEL_15;
  }
  v60 = (uint64_t)v93;
  sub_1C07AE180();
  v61 = v94;
  sub_1C07AE180();
  v62 = v95;
  v63 = sub_1C106FAA8();
  sub_1C0794F2C(v61);
  sub_1C0794F2C(v60);
  if ((v63 & 1) == 0)
  {
    sub_1C07AE180();
    sub_1C07AE180();
    v51 = sub_1C106E0D4();
    sub_1C0794F2C(v61);
    v54 = (char *)v60;
    v55 = v62;
    goto LABEL_17;
  }
  v64 = v87;
  sub_1C07A3F4C();
  v65 = v86;
  sub_1C07A3F4C();
  if (*v64 == *v65 && v64[1] == v65[1])
  {
    sub_1C079775C();
    sub_1C07A0300();
  }
  else
  {
    v67 = sub_1C07785B0();
    sub_1C079775C();
    sub_1C07A0300();
    if ((v67 & 1) == 0)
    {
      v68 = v84;
      sub_1C07A3F4C();
      v69 = v85;
      sub_1C07A3F4C();
      if (*v68 == *v69 && v68[1] == v69[1])
        v51 = 0;
      else
        v51 = sub_1C0795BCC();
      sub_1C07A0300();
      sub_1C079775C();
      return v51 & 1;
    }
  }
  v71 = sub_1C07A3F4C();
  v73 = v72;
  if (v71 == sub_1C07A3F4C() && v73 == v74)
  {
    sub_1C07758A4();
  }
  else
  {
    sub_1C079E8A0();
    v76 = sub_1C07785B0();
    sub_1C0775844();
    sub_1C077960C();
    if ((v76 & 1) == 0)
    {
      v45 = sub_1C07A3F4C();
      v47 = v77;
      v48 = sub_1C07A3F4C();
      goto LABEL_9;
    }
  }
  sub_1C07A3F4C();
  sub_1C07A3F4C();
  sub_1C08C428C();
  if ((v78 & 1) == 0)
  {
    sub_1C07A3F4C();
    v82 = v99;
    sub_1C07A3F4C();
    __asm { BR              X10 }
  }
  sub_1C079495C();
  v80 = v79;
  sub_1C079495C();
  v51 = v80 < v81;
  return v51 & 1;
}

uint64_t sub_1C0D2E810@<X0>(_QWORD *a1@<X8>)
{
  return sub_1C0D2DA90(type metadata accessor for TranslatedEntityTriple, a1);
}

uint64_t sub_1C0D2E82C()
{
  unint64_t v0;

  v0 = sub_1C1070A2C();
  sub_1C07767AC();
  if (v0 >= 9)
    return 9;
  else
    return v0;
}

uint64_t sub_1C0D2E870(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1C0D2E8A4 + 4 * byte_1C10B69C8[a1]))(0x7463656A627573, 0xE700000000000000);
}

uint64_t sub_1C0D2E8A4()
{
  return 0x7461636964657270;
}

uint64_t sub_1C0D2E8C0()
{
  return 0x6E6F6974616C6572;
}

unint64_t sub_1C0D2E8E4()
{
  return 0xD000000000000015;
}

uint64_t sub_1C0D2E900()
{
  return 0x7463656A626FLL;
}

uint64_t sub_1C0D2E914()
{
  return 0x656372756F73;
}

uint64_t sub_1C0D2E928()
{
  return 0x6449656372756F73;
}

uint64_t sub_1C0D2E940()
{
  return 0x6D617473656D6974;
}

uint64_t sub_1C0D2E960()
{
  return 0x656E696C65706970;
}

void sub_1C0D2E980()
{
  sub_1C08C64D8();
}

void sub_1C0D2E98C()
{
  unsigned __int8 *v0;

  sub_1C0A540A4(*v0);
}

void sub_1C0D2E994()
{
  sub_1C08C9C08();
}

void sub_1C0D2E99C(uint64_t a1)
{
  unsigned __int8 *v1;

  sub_1C0A54818(a1, *v1);
}

uint64_t sub_1C0D2E9A4@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1C0D2E82C();
  *a1 = result;
  return result;
}

uint64_t sub_1C0D2E9D0@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_1C0D2E870(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1C0D2E9F8()
{
  sub_1C0D2ECC0();
  return sub_1C106BEE4();
}

uint64_t sub_1C0D2EA30()
{
  sub_1C0D2ECFC();
  return sub_1C106BECC();
}

uint64_t sub_1C0D2EA68()
{
  sub_1C091755C();
  return sub_1C106C16C();
}

uint64_t sub_1C0D2EAA0()
{
  sub_1C091755C();
  return sub_1C106C160();
}

uint64_t dispatch thunk of SourcedTriple.source.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of SourcedTriple.sourceId.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t dispatch thunk of SourcedTriple.pipelineType.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t storeEnumTagSinglePayload for SourcedTripleColumn(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 8 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 8) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF8)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF7)
    return ((uint64_t (*)(void))((char *)&loc_1C0D2EB3C + 4 * byte_1C10B69D6[v4]))();
  *a1 = a2 + 8;
  return ((uint64_t (*)(void))((char *)sub_1C0D2EB70 + 4 * byte_1C10B69D1[v4]))();
}

uint64_t sub_1C0D2EB70(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C0D2EB78(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C0D2EB80);
  return result;
}

uint64_t sub_1C0D2EB8C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C0D2EB94);
  *(_BYTE *)result = a2 + 8;
  return result;
}

uint64_t sub_1C0D2EB98(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C0D2EBA0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SourcedTripleColumn()
{
  return &type metadata for SourcedTripleColumn;
}

unint64_t sub_1C0D2EBC4()
{
  unint64_t result;

  result = qword_1EF647FD8;
  if (!qword_1EF647FD8)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10B6B34, &type metadata for SourcedTripleColumn);
    atomic_store(result, (unint64_t *)&qword_1EF647FD8);
  }
  return result;
}

unint64_t sub_1C0D2EC04()
{
  unint64_t result;

  result = qword_1ED75BDD0;
  if (!qword_1ED75BDD0)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10B6A64, &type metadata for SourcedTripleColumn);
    atomic_store(result, (unint64_t *)&qword_1ED75BDD0);
  }
  return result;
}

unint64_t sub_1C0D2EC44()
{
  unint64_t result;

  result = qword_1ED75BDD8;
  if (!qword_1ED75BDD8)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10B6A14, &type metadata for SourcedTripleColumn);
    atomic_store(result, (unint64_t *)&qword_1ED75BDD8);
  }
  return result;
}

unint64_t sub_1C0D2EC84()
{
  unint64_t result;

  result = qword_1ED75BDC8;
  if (!qword_1ED75BDC8)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10B6A3C, &type metadata for SourcedTripleColumn);
    atomic_store(result, (unint64_t *)&qword_1ED75BDC8);
  }
  return result;
}

unint64_t sub_1C0D2ECC0()
{
  unint64_t result;

  result = qword_1ED75BDE8;
  if (!qword_1ED75BDE8)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10B6ABC, &type metadata for SourcedTripleColumn);
    atomic_store(result, (unint64_t *)&qword_1ED75BDE8);
  }
  return result;
}

unint64_t sub_1C0D2ECFC()
{
  unint64_t result;

  result = qword_1ED75BDC0;
  if (!qword_1ED75BDC0)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10B6A8C, &type metadata for SourcedTripleColumn);
    atomic_store(result, (unint64_t *)&qword_1ED75BDC0);
  }
  return result;
}

#error "1C0D2EDA4: call analysis failed (funcsize=63)"

uint64_t sub_1C0D2EE38()
{
  return sub_1C0D2EFC4();
}

void sub_1C0D2EE4C(uint64_t (*a1)(_QWORD *), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  char v11;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  _QWORD v19[2];
  char v20;
  uint64_t v21;

  v4 = a3;
  v17 = *(_QWORD *)(a3 + 16);
  if (v17)
  {
    v5 = 0;
    v6 = (char *)(a3 + 48);
    v7 = MEMORY[0x1E0DEE9D8];
    while (v5 < *(_QWORD *)(v4 + 16))
    {
      v9 = *((_QWORD *)v6 - 2);
      v8 = *((_QWORD *)v6 - 1);
      v10 = *v6;
      v19[0] = v9;
      v19[1] = v8;
      v20 = v10;
      sub_1C0834F18(v9, v8, v10);
      v11 = a1(v19);
      if (v3)
      {
        sub_1C07915CC();
        swift_release();
        goto LABEL_16;
      }
      if ((v11 & 1) != 0)
      {
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v21 = v7;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_1C09D32E8();
          v7 = v21;
        }
        v13 = *(_QWORD *)(v7 + 16);
        v14 = v7;
        if (v13 >= *(_QWORD *)(v7 + 24) >> 1)
        {
          sub_1C09D32E8();
          v14 = v21;
        }
        *(_QWORD *)(v14 + 16) = v13 + 1;
        v15 = v14 + 24 * v13;
        *(_QWORD *)(v15 + 32) = v9;
        *(_QWORD *)(v15 + 40) = v8;
        *(_BYTE *)(v15 + 48) = v10;
        v4 = a3;
        v7 = v14;
      }
      else
      {
        sub_1C07915CC();
      }
      ++v5;
      v6 += 24;
      if (v17 == v5)
        goto LABEL_16;
    }
    __break(1u);
  }
  else
  {
LABEL_16:
    sub_1C077B5B4();
  }
}

#error "1C0D2F030: call analysis failed (funcsize=65)"

void sub_1C0D2F0D0(uint64_t (*a1)(__int128 *), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  unint64_t v7;
  uint64_t v8;
  char v9;
  char v10;
  unint64_t v11;
  __int128 v12;
  __int128 v13;
  uint64_t v14;

  v5 = *(_QWORD *)(a3 + 16);
  if (v5)
  {
    v7 = 0;
    v8 = MEMORY[0x1E0DEE9D8];
    while (v7 < *(_QWORD *)(a3 + 16))
    {
      v12 = *(_OWORD *)(a3 + 16 * v7 + 32);
      v13 = v12;
      swift_unknownObjectRetain();
      v9 = a1(&v13);
      if (v3)
      {
        sub_1C077FA84();
        sub_1C0778580();
        swift_unknownObjectRelease();
        goto LABEL_15;
      }
      if ((v9 & 1) != 0)
      {
        v10 = sub_1C077B7D4();
        v14 = v8;
        if ((v10 & 1) == 0)
        {
          sub_1C07A0308();
          sub_1C09D3720();
          v8 = v14;
        }
        v11 = *(_QWORD *)(v8 + 16);
        if (v11 >= *(_QWORD *)(v8 + 24) >> 1)
        {
          sub_1C09D3720();
          v8 = v14;
        }
        *(_QWORD *)(v8 + 16) = v11 + 1;
        *(_OWORD *)(v8 + 16 * v11 + 32) = v12;
      }
      else
      {
        swift_unknownObjectRelease();
      }
      if (v5 == ++v7)
        goto LABEL_13;
    }
    __break(1u);
  }
  else
  {
LABEL_13:
    sub_1C0778580();
LABEL_15:
    sub_1C0793708();
  }
}

void sub_1C0D2F200(uint64_t (*a1)(char *), uint64_t a2, uint64_t a3)
{
  sub_1C0D2F4B0(a1, a2, a3, type metadata accessor for GraphTriple, (uint64_t)sub_1C09D3AC0);
}

void sub_1C0D2F224(uint64_t (*a1)(_QWORD *), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(_QWORD *);
  unint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  char v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v17;
  _QWORD v18[2];
  uint64_t v19;

  v4 = a3;
  v17 = *(_QWORD *)(a3 + 16);
  if (v17)
  {
    v5 = a1;
    v6 = 0;
    v7 = (uint64_t *)(a3 + 40);
    v8 = MEMORY[0x1E0DEE9D8];
    while (v6 < *(_QWORD *)(v4 + 16))
    {
      v10 = *(v7 - 1);
      v9 = *v7;
      v18[0] = v10;
      v18[1] = v9;
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      v11 = v5(v18);
      if (v3)
      {
        sub_1C077FA84();
        sub_1C0778580();
        goto LABEL_16;
      }
      if ((v11 & 1) != 0)
      {
        v12 = sub_1C077B7D4();
        v19 = v8;
        if ((v12 & 1) == 0)
        {
          sub_1C07A0308();
          sub_1C09D30E0();
          v8 = v19;
        }
        v13 = *(_QWORD *)(v8 + 16);
        if (v13 >= *(_QWORD *)(v8 + 24) >> 1)
        {
          sub_1C09D30E0();
          v8 = v19;
        }
        *(_QWORD *)(v8 + 16) = v13 + 1;
        v14 = v8 + 16 * v13;
        *(_QWORD *)(v14 + 32) = v10;
        *(_QWORD *)(v14 + 40) = v9;
        v4 = a3;
        v5 = a1;
      }
      else
      {
        swift_bridgeObjectRelease();
      }
      ++v6;
      v7 += 2;
      if (v17 == v6)
        goto LABEL_16;
    }
    __break(1u);
  }
  else
  {
LABEL_16:
    swift_bridgeObjectRelease();
    sub_1C0793708();
  }
}

void sub_1C0D2F360(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  uint64_t v24;
  uint64_t v25;
  uint64_t (*v26)(uint64_t *);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t (*v31)(uint64_t *);
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  char v36;
  unint64_t v37;
  uint64_t (*v38)(uint64_t *);

  sub_1C07BCA6C();
  a23 = v25;
  a24 = v27;
  v29 = v28;
  v30 = *(_QWORD *)(v28 + 16);
  if (v30)
  {
    v31 = v26;
    v32 = 0;
    v33 = MEMORY[0x1E0DEE9D8];
    v38 = v26;
    while (v32 < *(_QWORD *)(v29 + 16))
    {
      v34 = *(_QWORD *)(v29 + 8 * v32 + 32);
      a12 = v34;
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      v35 = v31(&a12);
      if (v24)
      {
        sub_1C077FA84();
        sub_1C0778580();
        goto LABEL_16;
      }
      if ((v35 & 1) != 0)
      {
        v36 = sub_1C077B7D4();
        a14 = v33;
        if ((v36 & 1) == 0)
        {
          sub_1C09D3D5C();
          v33 = a14;
        }
        v37 = *(_QWORD *)(v33 + 16);
        if (v37 >= *(_QWORD *)(v33 + 24) >> 1)
        {
          sub_1C09D3D5C();
          v33 = a14;
        }
        *(_QWORD *)(v33 + 16) = v37 + 1;
        *(_QWORD *)(v33 + 8 * v37 + 32) = v34;
        v31 = v38;
      }
      else
      {
        swift_bridgeObjectRelease();
      }
      if (v30 == ++v32)
        goto LABEL_16;
    }
    __break(1u);
  }
  else
  {
LABEL_16:
    swift_bridgeObjectRelease();
    sub_1C07A0070();
  }
}

void sub_1C0D2F48C(uint64_t (*a1)(char *), uint64_t a2, uint64_t a3)
{
  sub_1C0D2F4B0(a1, a2, a3, (uint64_t (*)(_QWORD))type metadata accessor for StaticKnowledgeTriple, (uint64_t)sub_1C09D3DC4);
}

void sub_1C0D2F4B0(uint64_t (*a1)(char *), uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD), uint64_t a5)
{
  uint64_t v5;
  uint64_t (*v6)(_QWORD);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  char v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t (*v21)(_QWORD);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t (*v26)(char *);
  uint64_t v27;
  uint64_t v28;

  v20 = a5;
  v6 = a4;
  v26 = a1;
  v27 = a2;
  v8 = a4(0);
  v25 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v24 = (uint64_t)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v20 - v11;
  v28 = MEMORY[0x1E0DEE9D8];
  v23 = *(_QWORD *)(a3 + 16);
  if (v23)
  {
    v13 = 0;
    v14 = MEMORY[0x1E0DEE9D8];
    v21 = v6;
    v22 = a3;
    while (v13 < *(_QWORD *)(a3 + 16))
    {
      v15 = (*(unsigned __int8 *)(v25 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80);
      v16 = *(_QWORD *)(v25 + 72);
      sub_1C07E05C8(a3 + v15 + v16 * v13, (uint64_t)v12, v6);
      v17 = v26(v12);
      if (v5)
      {
        sub_1C0791FB8();
        swift_release();
        sub_1C077B5B4();
        return;
      }
      if ((v17 & 1) != 0)
      {
        sub_1C07E05F4((uint64_t)v12, v24, v6);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          sub_1C07BD100(0, *(_QWORD *)(v14 + 16) + 1);
        v14 = v28;
        v19 = *(_QWORD *)(v28 + 16);
        v18 = *(_QWORD *)(v28 + 24);
        if (v19 >= v18 >> 1)
        {
          sub_1C07BD100(v18 > 1, v19 + 1);
          v14 = v28;
        }
        *(_QWORD *)(v14 + 16) = v19 + 1;
        v6 = v21;
        sub_1C07E05F4(v24, v14 + v15 + v19 * v16, v21);
        a3 = v22;
      }
      else
      {
        sub_1C0791FB8();
      }
      if (v23 == ++v13)
        goto LABEL_15;
    }
    __break(1u);
  }
  else
  {
LABEL_15:
    sub_1C077B5B4();
  }
}

void sub_1C0D2F698(uint64_t (*a1)(char *), uint64_t a2, uint64_t a3)
{
  sub_1C0D2F4B0(a1, a2, a3, type metadata accessor for ConstructionGraphTriple, (uint64_t)sub_1C09D3EE4);
}

void sub_1C0D2F6BC(uint64_t (*a1)(char *), uint64_t a2, uint64_t a3)
{
  sub_1C0D2F4B0(a1, a2, a3, type metadata accessor for EntityTriple, (uint64_t)sub_1C09D3F18);
}

void SourceDuplicates.sourceIds()()
{
  sub_1C07A6090();
}

void sub_1C0D2F6F8()
{
  sub_1C0799128();
  sub_1C07A7610();
  sub_1C0797764();
  sub_1C077C0D8();
}

uint64_t SourceDuplicates.subtracting<A>(_:)()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;

  sub_1C0798160();
  v6 = *v1;
  v5 = v1[1];
  v7 = (void *)MEMORY[0x1C3BA79F4]();
  v19 = v6;
  v20 = v5;
  v17 = 30;
  v18 = 0xE100000000000000;
  sub_1C07B1280();
  v8 = sub_1C10705D0();
  objc_autoreleasePoolPop(v7);
  v14 = v3;
  v15 = v2;
  v16 = v4;
  sub_1C0D2F224((uint64_t (*)(_QWORD *))sub_1C0D30178, (uint64_t)&v13, v8);
  MEMORY[0x1C3BA79F4]();
  v9 = sub_1C0D2F9F0();
  v11 = v10;
  sub_1C078D484();
  result = sub_1C077960C();
  *v0 = v9;
  v0[1] = v11;
  return result;
}

void SourceDuplicates.hashValue.getter()
{
  sub_1C1070DF8();
  sub_1C077AE90();
  sub_1C07A8018();
  sub_1C077960C();
  sub_1C1070E4C();
  sub_1C0775804();
}

uint64_t sub_1C0D2F834@<X0>(uint64_t *a1@<X8>)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;

  v2 = (void *)MEMORY[0x1C3BA79F4]();
  swift_bridgeObjectRetain_n();
  sub_1C08A2E2C();
  v4 = v3;
  sub_1C0778580();
  v9 = v4;
  sub_1C08485B4(&v9);
  sub_1C0778580();
  sub_1C07ACF80(&qword_1ED762B70);
  sub_1C07E6EDC((unint64_t *)&qword_1ED762430, &qword_1ED762B70, MEMORY[0x1E0DEAF20]);
  sub_1C07A1FA8();
  v5 = sub_1C106FA54();
  v7 = v6;
  swift_release();
  objc_autoreleasePoolPop(v2);
  result = sub_1C0778580();
  *a1 = v5;
  a1[1] = v7;
  return result;
}

uint64_t SourceDuplicates.init<A>(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10[2];

  v6 = (void *)MEMORY[0x1C3BA79F4]();
  sub_1C0D2FAC4(a1, v10);
  objc_autoreleasePoolPop(v6);
  v7 = v10[0];
  v8 = v10[1];
  result = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 8))(a1, a2);
  *a3 = v7;
  a3[1] = v8;
  return result;
}

uint64_t static SourceDuplicates.== infix(_:_:)(_QWORD *a1, _QWORD *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1])
    return 1;
  else
    return sub_1C1070CB4();
}

uint64_t SourceDuplicates.rawValue.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1C077AE90();
  return v1;
}

uint64_t sub_1C0D2F9F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;

  v1 = _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C0898D28(v1);
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C08A2E2C();
  v3 = v2;
  swift_bridgeObjectRelease();
  v6 = v3;
  sub_1C08485B4(&v6);
  if (v0)
  {
    result = swift_release();
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_1C07ACF80(&qword_1ED762B70);
    sub_1C07E6EDC((unint64_t *)&qword_1ED762430, &qword_1ED762B70, MEMORY[0x1E0DEAF20]);
    sub_1C07A1FA8();
    v4 = sub_1C106FA54();
    swift_release();
    return v4;
  }
  return result;
}

uint64_t sub_1C0D2FAC4@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  double v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;

  v4 = MEMORY[0x1E0C80A78](a1);
  (*(void (**)(char *, double))(v6 + 16))((char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  sub_1C1070288();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C08A2E2C();
  v8 = v7;
  swift_bridgeObjectRelease();
  v14 = v8;
  sub_1C08485B4(&v14);
  if (v2)
  {
    result = swift_release();
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_1C07ACF80(&qword_1ED762B70);
    sub_1C07E6EDC((unint64_t *)&qword_1ED762430, &qword_1ED762B70, MEMORY[0x1E0DEAF20]);
    v9 = sub_1C106FA54();
    v11 = v10;
    result = swift_release();
    *a2 = v9;
    a2[1] = v11;
  }
  return result;
}

IntelligencePlatformCore::SourceDuplicates __swiftcall SourceDuplicates.init(rawValue:)(IntelligencePlatformCore::SourceDuplicates rawValue)
{
  IntelligencePlatformCore::SourceDuplicates *v1;

  *v1 = rawValue;
  return rawValue;
}

uint64_t SourceDuplicates.hash(into:)()
{
  sub_1C077AE90();
  sub_1C106FC28();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C0D2FC50(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 0x65756C6156776172 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    v4 = 0;
  }
  else
  {
    v3 = sub_1C1070CB4();
    swift_bridgeObjectRelease();
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_1C0D2FCD4()
{
  return 0x65756C6156776172;
}

uint64_t sub_1C0D2FCF0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1C0D2FC50(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1C0D2FD18()
{
  sub_1C0D30198();
  return sub_1C1070EE8();
}

uint64_t sub_1C0D2FD40()
{
  sub_1C0D30198();
  return sub_1C1070EF4();
}

void SourceDuplicates.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = sub_1C07ACF80(&qword_1EF647FE0);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  sub_1C07795DC();
  sub_1C07A9480(a1, a1[3]);
  sub_1C0D30198();
  sub_1C1070EB8();
  sub_1C1070B7C();
  sub_1C07932F8(*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
  sub_1C07757D0();
}

void SourceDuplicates.init(from:)(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5 = sub_1C07ACF80(&qword_1EF647FF0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  sub_1C07795DC();
  sub_1C07A9480(a1, a1[3]);
  sub_1C0D30198();
  sub_1C1070E94();
  if (!v2)
  {
    v7 = sub_1C1070AA4();
    v9 = v8;
    sub_1C07932F8(*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8));
    *a2 = v7;
    a2[1] = v9;
  }
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)a1);
  sub_1C07757D0();
}

void sub_1C0D2FF10(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  SourceDuplicates.init(from:)(a1, a2);
}

void sub_1C0D2FF24(_QWORD *a1)
{
  SourceDuplicates.encode(to:)(a1);
}

void sub_1C0D2FF40()
{
  sub_1C1070DF8();
  sub_1C077AE90();
  sub_1C07A8018();
  sub_1C077960C();
  sub_1C1070E4C();
  sub_1C0775804();
}

void SourceDuplicates.count.getter()
{
  sub_1C07A6090();
}

void sub_1C0D2FF94()
{
  sub_1C0799128();
  sub_1C07A7610();
  sub_1C0797764();
  sub_1C077960C();
  sub_1C077C0D8();
}

Swift::Bool __swiftcall SourceDuplicates.contains(_:)(Swift::String a1)
{
  uint64_t object;
  uint64_t countAndFlagsBits;
  _QWORD *v3;

  object = (uint64_t)a1._object;
  countAndFlagsBits = a1._countAndFlagsBits;
  MEMORY[0x1C3BA79F4]();
  sub_1C07B1280();
  v3 = (_QWORD *)sub_1C07A7610();
  sub_1C078D484();
  LOBYTE(object) = sub_1C0776614(countAndFlagsBits, object, v3);
  sub_1C077960C();
  return object & 1;
}

void SourceDuplicates.adding<A>(_:)()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  sub_1C0798160();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v6);
  sub_1C07795DC();
  v7 = (void *)MEMORY[0x1C3BA79F4]();
  sub_1C07B1280();
  v8 = sub_1C10705D0();
  objc_autoreleasePoolPop(v7);
  sub_1C0898D28(v8);
  v10 = v9;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v3, v2, v1);
  v11 = sub_1C1070288();
  sub_1C089ED40(v11, v10);
  sub_1C0D2F834(v0);
  sub_1C0776760();
}

BOOL sub_1C0D30134()
{
  return (sub_1C106FE2C() & 1) == 0;
}

BOOL sub_1C0D30178()
{
  return sub_1C0D30134();
}

unint64_t sub_1C0D30198()
{
  unint64_t result;

  result = qword_1EF647FE8;
  if (!qword_1EF647FE8)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10B6E64, &type metadata for SourceDuplicates.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF647FE8);
  }
  return result;
}

uint64_t sub_1C0D301D4(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  if (*a1 == a2 && a1[1] == a3)
    return 1;
  else
    return sub_1C1070CB4() & 1;
}

unint64_t SourceDuplicates.description.getter()
{
  sub_1C1070774();
  swift_bridgeObjectRelease();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C106FC94();
  swift_bridgeObjectRelease();
  sub_1C106FC94();
  return 0xD000000000000015;
}

uint64_t SourceDuplicates.databaseValue.getter()
{
  return sub_1C106FB8C();
}

void static SourceDuplicates.fromDatabaseValue(_:)(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;
  unint64_t v15;
  _QWORD v16[3];
  uint64_t v17;

  v4 = sub_1C106BC8C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1C106FBA4();
  if (v9)
  {
    *a2 = v8;
    a2[1] = v9;
  }
  else
  {
    if (qword_1ED761458 != -1)
      swift_once();
    v10 = sub_1C106F544();
    sub_1C079E000(v10, (uint64_t)qword_1ED78D818);
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
    v11 = sub_1C106F538();
    v12 = sub_1C1070390();
    if (os_log_type_enabled(v11, v12))
    {
      v13 = (uint8_t *)swift_slowAlloc();
      v17 = swift_slowAlloc();
      *(_DWORD *)v13 = 136380675;
      v16[1] = v13 + 4;
      sub_1C0D305C0();
      v14 = sub_1C1070C0C();
      v16[2] = sub_1C0788DAC(v14, v15, &v17);
      sub_1C10705AC();
      sub_1C077960C();
      sub_1C07A5780();
      _os_log_impl(&dword_1C0771000, v11, v12, "SourceDuplicates: failed to initialize from database value: %{private}s", v13, 0xCu);
      swift_arrayDestroy();
      sub_1C0776778();
    }
    sub_1C07A5780();

    *a2 = 0;
    a2[1] = 0;
  }
  sub_1C0776760();
}

uint64_t sub_1C0D304AC()
{
  sub_1C0D30858();
  return sub_1C106C208();
}

uint64_t sub_1C0D304E4()
{
  sub_1C0D30858();
  return sub_1C106C214();
}

void SourceDuplicates.makeIterator()()
{
  sub_1C07A6090();
}

uint64_t sub_1C0D3053C()
{
  uint64_t v0;

  sub_1C0799128();
  sub_1C07A7610();
  sub_1C0797764();
  return v0;
}

void sub_1C0D30570()
{
  SourceDuplicates.makeIterator()();
}

uint64_t sub_1C0D30588(uint64_t a1)
{
  _QWORD *v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v1 = a1;
  v1[1] = 0;
  return result;
}

uint64_t sub_1C0D305A8()
{
  return sub_1C07BD3A8();
}

void sub_1C0D305B0()
{
  sub_1C0F0E760();
}

uint64_t sub_1C0D305B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  return sub_1C0F0E9E8(a1, a2, a3, *v3, v3[1]);
}

unint64_t sub_1C0D305C0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF647FD0;
  if (!qword_1EF647FD0)
  {
    v1 = sub_1C106BC8C();
    result = MEMORY[0x1C3BA8174](MEMORY[0x1E0D23D80], v1);
    atomic_store(result, (unint64_t *)&qword_1EF647FD0);
  }
  return result;
}

unint64_t sub_1C0D30604()
{
  unint64_t result;

  result = qword_1EF647FF8;
  if (!qword_1EF647FF8)
  {
    result = MEMORY[0x1C3BA8174](&protocol conformance descriptor for SourceDuplicates, &type metadata for SourceDuplicates);
    atomic_store(result, (unint64_t *)&qword_1EF647FF8);
  }
  return result;
}

unint64_t sub_1C0D30644()
{
  unint64_t result;

  result = qword_1ED75E960;
  if (!qword_1ED75E960)
  {
    result = MEMORY[0x1C3BA8174](&protocol conformance descriptor for SourceDuplicates, &type metadata for SourceDuplicates);
    atomic_store(result, (unint64_t *)&qword_1ED75E960);
  }
  return result;
}

unint64_t sub_1C0D30684()
{
  unint64_t result;

  result = qword_1ED75E968;
  if (!qword_1ED75E968)
  {
    result = MEMORY[0x1C3BA8174](&protocol conformance descriptor for SourceDuplicates, &type metadata for SourceDuplicates);
    atomic_store(result, (unint64_t *)&qword_1ED75E968);
  }
  return result;
}

void sub_1C0D306C0()
{
  sub_1C07E6EDC(&qword_1EF648000, &qword_1EF648008, MEMORY[0x1E0DEC908]);
}

ValueMetadata *type metadata accessor for SourceDuplicates()
{
  return &type metadata for SourceDuplicates;
}

uint64_t storeEnumTagSinglePayload for SourceDuplicates.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1C0D3073C + 4 * byte_1C10B6BA0[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1C0D3075C + 4 * byte_1C10B6BA5[v4]))();
}

_BYTE *sub_1C0D3073C(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1C0D3075C(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1C0D30764(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1C0D3076C(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1C0D30774(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1C0D3077C(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for SourceDuplicates.CodingKeys()
{
  return &type metadata for SourceDuplicates.CodingKeys;
}

unint64_t sub_1C0D3079C()
{
  unint64_t result;

  result = qword_1EF648010;
  if (!qword_1EF648010)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10B6E3C, &type metadata for SourceDuplicates.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF648010);
  }
  return result;
}

unint64_t sub_1C0D307DC()
{
  unint64_t result;

  result = qword_1EF648018;
  if (!qword_1EF648018)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10B6DAC, &type metadata for SourceDuplicates.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF648018);
  }
  return result;
}

unint64_t sub_1C0D3081C()
{
  unint64_t result;

  result = qword_1EF648020;
  if (!qword_1EF648020)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10B6DD4, &type metadata for SourceDuplicates.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF648020);
  }
  return result;
}

unint64_t sub_1C0D30858()
{
  unint64_t result;

  result = qword_1EF648028;
  if (!qword_1EF648028)
  {
    result = MEMORY[0x1C3BA8174](&protocol conformance descriptor for SourceDuplicates, &type metadata for SourceDuplicates);
    atomic_store(result, (unint64_t *)&qword_1EF648028);
  }
  return result;
}

uint64_t sub_1C0D30894(_QWORD *a1)
{
  uint64_t v1;

  return sub_1C0D301D4(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24)) & 1;
}

uint64_t SourceEntityRepresentation.dataVersion.getter()
{
  return 1;
}

uint64_t static SourceEntityRepresentation.event(with:dataVersion:)()
{
  uint64_t result;
  void *v1;

  sub_1C106A978();
  sub_1C077B5BC();
  sub_1C106A96C();
  sub_1C0D30C80((unint64_t *)&unk_1EF648030, (uint64_t)&protocol conformance descriptor for SourceEntityRepresentation);
  sub_1C106A960();
  swift_release();
  result = swift_dynamicCastClass();
  if (!result)
  {

    return 0;
  }
  return result;
}

uint64_t SourceEntityRepresentation.serialize()()
{
  uint64_t v0;

  swift_getObjectType();
  sub_1C106A9A8();
  sub_1C077B5BC();
  sub_1C106A99C();
  sub_1C0D30C80(&qword_1EF648040, (uint64_t)&protocol conformance descriptor for SourceEntityRepresentation);
  v0 = sub_1C106A990();
  swift_release();
  return v0;
}

uint64_t sub_1C0D30C80(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for SourceEntityRepresentation(255);
    result = MEMORY[0x1C3BA8174](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

void sub_1C0D30CC0()
{
  sub_1C079A150();
  sub_1C0D30D6C();
  sub_1C077E8AC();
}

void sub_1C0D30CE8()
{
  void (*v0)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  sub_1C0797C88();
  sub_1C07AE18C();
  v7 = *v1;
  v9 = v1[4];
  v8 = v1[1];
  sub_1C07796E0();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  v0(v6, v5, v4, v3, v9, v7, v8, v2);
  swift_bridgeObjectRelease();
  sub_1C077E584();
  sub_1C0790E04();
}

void sub_1C0D30D6C()
{
  sub_1C0797C88();
  sub_1C07AE18C();
  sub_1C07796E0();
  sub_1C07767C4();
  sub_1C07A3F78();
  sub_1C07A0320();
  sub_1C077E584();
  sub_1C0790E04();
}

void sub_1C0D30DBC()
{
  sub_1C0797C88();
  sub_1C07AE18C();
  sub_1C07796E0();
  sub_1C07767C4();
  sub_1C07A3F78();
  sub_1C07A0320();
  sub_1C077E584();
  sub_1C0790E04();
}

uint64_t IdentifiableSourceEntityMappable.constructRows(entityIdentifier:source:sourceId:map:relationshipId:pipelineType:)(uint64_t a1, uint64_t *a2, uint64_t a3, unint64_t a4, void *a5, uint64_t a6, unsigned __int8 *a7, uint64_t a8, uint64_t a9)
{
  unsigned __int8 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unsigned __int8 v19;

  v14 = *a7;
  v15 = (*(uint64_t (**)(uint64_t, uint64_t))(a9 + 24))(a8, a9);
  v16 = (*(uint64_t (**)(uint64_t, uint64_t))(a9 + 16))(a8, a9);
  v19 = v14;
  SourceEntityMappable.constructPropertyRows(source:sourceId:map:basicProperties:nestedSourceId:pipelineType:)(a2, a3, a4, a5, v15, v16, v17, &v19, a8, *(_QWORD *)(a9 + 8));
  sub_1C07A0320();
  swift_bridgeObjectRelease();
  return a8;
}

void sub_1C0D30ED0()
{
  sub_1C079A150();
  sub_1C0D30D6C();
  sub_1C077E8AC();
}

void sub_1C0D30EF8()
{
  sub_1C079A150();
  sub_1C0D30DBC();
  sub_1C077E8AC();
}

void sub_1C0D30F20()
{
  sub_1C079A150();
  sub_1C0D30DBC();
  sub_1C077E8AC();
}

void sub_1C0D30F48()
{
  sub_1C079A150();
  sub_1C0D30CE8();
  sub_1C077E8AC();
}

uint64_t MapPredicate.description.getter()
{
  sub_1C1070774();
  sub_1C106FC94();
  type metadata accessor for MapPredicate(0);
  sub_1C0779688();
  sub_1C0794BAC(&qword_1EF632CD0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3CC50], MEMORY[0x1E0D3CC90]);
  sub_1C1070C0C();
  sub_1C106FC94();
  swift_bridgeObjectRelease();
  sub_1C0795CE0();
  sub_1C07ACF80(&qword_1ED7618D0);
  sub_1C079B9E8();
  sub_1C106FC94();
  sub_1C07ACF80(&qword_1ED759F70);
  sub_1C079B9E8();
  sub_1C0795CE0();
  sub_1C07ACF80(&qword_1ED762B50);
  sub_1C079B9E8();
  sub_1C106FC94();
  return 0;
}

uint64_t sub_1C0D310F4(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  char v7;

  v2 = a1 == 0x6156746567726174 && a2 == 0xEB0000000065756CLL;
  if (v2 || (sub_1C1070CB4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x7461636964657270 && a2 == 0xE900000000000065;
    if (v6 || (sub_1C1070CB4() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0xD000000000000011 && a2 == 0x80000001C1109A90 || (sub_1C1070CB4() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else if (a1 == 0xD000000000000015 && a2 == 0x80000001C10DE890)
    {
      swift_bridgeObjectRelease();
      return 3;
    }
    else
    {
      v7 = sub_1C1070CB4();
      swift_bridgeObjectRelease();
      if ((v7 & 1) != 0)
        return 3;
      else
        return 4;
    }
  }
}

uint64_t sub_1C0D312C0(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1C0D312FC + 4 * byte_1C10B6EC0[a1]))(0x6156746567726174, 0xEB0000000065756CLL);
}

uint64_t sub_1C0D312FC()
{
  return 0x7461636964657270;
}

unint64_t sub_1C0D31318()
{
  return 0xD000000000000011;
}

unint64_t sub_1C0D31334()
{
  return 0xD000000000000015;
}

uint64_t sub_1C0D31354()
{
  unsigned __int8 *v0;

  return sub_1C0D312C0(*v0);
}

uint64_t sub_1C0D3135C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1C0D310F4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C0D31380()
{
  sub_1C0D331D0();
  return sub_1C1070EE8();
}

uint64_t sub_1C0D313A8()
{
  sub_1C0D331D0();
  return sub_1C1070EF4();
}

void MapPredicate.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_1C077AE5C();
  v1 = sub_1C07ACF80(&qword_1EF648048);
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  sub_1C077B838();
  sub_1C0D331D0();
  sub_1C078D65C();
  sub_1C1070B34();
  if (!v0)
  {
    type metadata accessor for MapPredicate(0);
    sub_1C106E41C();
    sub_1C0794BAC(&qword_1ED7606D0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3CC50], MEMORY[0x1E0D3CC60]);
    sub_1C079D848();
    sub_1C1070BB8();
    sub_1C106D1F8();
    sub_1C0794BAC(&qword_1ED759F50, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3BB08], MEMORY[0x1E0D3BB18]);
    sub_1C1070B64();
    sub_1C079D848();
    sub_1C1070B64();
  }
  sub_1C078C76C(*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  sub_1C07757D0();
}

void MapPredicate.init(from:)()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  int *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24[2];
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  _QWORD *v32;

  sub_1C077AE5C();
  v32 = (_QWORD *)v0;
  v4 = v3;
  v25 = v5;
  sub_1C07ACF80(&qword_1ED759F70);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v6);
  sub_1C077AE40();
  v26 = v7;
  sub_1C07ACF80(&qword_1ED7618D0);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v8);
  sub_1C07A2ABC(v9, v24[0]);
  v10 = sub_1C106E41C();
  v28 = *(_QWORD *)(v10 - 8);
  v29 = v10;
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v11);
  sub_1C077864C();
  v30 = sub_1C07ACF80(&qword_1EF648058);
  v12 = *(_QWORD *)(v30 - 8);
  MEMORY[0x1E0C80A78](v30);
  v14 = (char *)v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = (int *)type metadata accessor for MapPredicate(0);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v16);
  sub_1C0779614();
  sub_1C07A9480(v4, v4[3]);
  sub_1C0D331D0();
  v31 = v14;
  v17 = (uint64_t)v32;
  sub_1C1070E94();
  if (v17)
  {
    _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v4);
  }
  else
  {
    v24[1] = v12;
    v32 = v4;
    v18 = v29;
    *v1 = sub_1C1070A5C();
    v1[1] = v19;
    sub_1C0794BAC((unint64_t *)&qword_1ED7618D8, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3CC50], MEMORY[0x1E0D3CC88]);
    v21 = v20;
    sub_1C0781EE0();
    v24[0] = v21;
    (*(void (**)(char *, uint64_t, uint64_t))(v28 + 32))((char *)v1 + v15[5], v2, v18);
    sub_1C106D1F8();
    sub_1C0794BAC(&qword_1ED759F60, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3BB08], MEMORY[0x1E0D3BB38]);
    v22 = v27;
    sub_1C1070A8C();
    sub_1C080AD78(v22, (uint64_t)v1 + v15[6], &qword_1ED7618D0);
    v23 = v26;
    sub_1C1070A8C();
    sub_1C07B8C78();
    sub_1C080AD78(v23, (uint64_t)v1 + v15[7], &qword_1ED759F70);
    sub_1C080ABC4((uint64_t)v1, v25, type metadata accessor for MapPredicate);
    _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v32);
    sub_1C07B1F90((uint64_t)v1, type metadata accessor for MapPredicate);
  }
  sub_1C07757D0();
}

void sub_1C0D318DC()
{
  MapPredicate.init(from:)();
}

void sub_1C0D318F0()
{
  MapPredicate.encode(to:)();
}

uint64_t sub_1C0D31908(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v7;

  v2 = a1 == 1701869940 && a2 == 0xE400000000000000;
  if (v2 || (sub_1C1070CB4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1702060386 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v7 = sub_1C1070CB4();
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1C0D319DC(char a1)
{
  if ((a1 & 1) != 0)
    return 1702060386;
  else
    return 1701869940;
}

uint64_t sub_1C0D319FC()
{
  char *v0;

  return sub_1C0D319DC(*v0);
}

uint64_t sub_1C0D31A04@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1C0D31908(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C0D31A28()
{
  sub_1C0D34278();
  return sub_1C1070EE8();
}

uint64_t sub_1C0D31A50()
{
  sub_1C0D34278();
  return sub_1C1070EF4();
}

void sub_1C0D31A78()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _OWORD v12[2];
  uint64_t v13;

  sub_1C077AE5C();
  v2 = v1;
  v4 = v3;
  v5 = sub_1C07ACF80(&qword_1EF6481A8);
  MEMORY[0x1E0C80A78](v5);
  sub_1C0779614();
  sub_1C07A9480(v2, v2[3]);
  sub_1C0D34278();
  sub_1C1070E94();
  if (!v0)
  {
    sub_1C0D342B4();
    sub_1C1070AE0();
    v6 = v10;
    sub_1C1070A50();
    v10 = v9;
    v11 = v6;
    sub_1C079DFC4((uint64_t *)&v8);
    sub_1C10701BC();
    swift_bridgeObjectRelease();
    sub_1C0776938();
    sub_1C077DD60(&v8, (uint64_t)v12);
    v7 = v12[1];
    *(_OWORD *)v4 = v12[0];
    *(_OWORD *)(v4 + 16) = v7;
    *(_QWORD *)(v4 + 32) = v13;
  }
  sub_1C0775880();
  sub_1C07757D0();
}

void sub_1C0D31C00()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t DynamicType;
  uint64_t v6;
  uint64_t v7;
  _QWORD v8[5];

  sub_1C077AE5C();
  v3 = (_QWORD *)v0;
  sub_1C07ACF80(&qword_1EF6481C0);
  sub_1C077AE7C();
  MEMORY[0x1E0C80A78](v4);
  sub_1C077B838();
  sub_1C0D34278();
  sub_1C078D65C();
  sub_1C07D6D1C(v0, (uint64_t)v8);
  sub_1C07A9480(v8, v8[3]);
  DynamicType = swift_getDynamicType();
  v6 = v8[4];
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v8);
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v6 + 24))(&v7, DynamicType, v6);
  sub_1C0D342F0();
  sub_1C1070BB8();
  swift_bridgeObjectRelease();
  if (!v1)
  {
    sub_1C07A9480(v3, v3[3]);
    LOBYTE(v7) = 1;
    sub_1C1070B28();
    sub_1C106F9F4();
    _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v8);
  }
  sub_1C078C76C(*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  sub_1C07757D0();
}

uint64_t sub_1C0D31D80(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  BOOL v7;
  char v9;

  v2 = a1 == 0x656372756F73 && a2 == 0xE600000000000000;
  if (v2 || (sub_1C1070CB4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
    if (v6 || (sub_1C1070CB4() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      v7 = a1 == 0x6D617473656D6974 && a2 == 0xE900000000000070;
      if (v7 || (sub_1C1070CB4() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else if (a1 == 0x6E45656372756F73 && a2 == 0xEE00736569746974)
      {
        swift_bridgeObjectRelease();
        return 3;
      }
      else
      {
        v9 = sub_1C1070CB4();
        swift_bridgeObjectRelease();
        if ((v9 & 1) != 0)
          return 3;
        else
          return 4;
      }
    }
  }
}

uint64_t sub_1C0D31F60(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1C0D31F90 + 4 * byte_1C10B6EC4[a1]))(0x656372756F73, 0xE600000000000000);
}

uint64_t sub_1C0D31F90()
{
  return 0x696669746E656469;
}

uint64_t sub_1C0D31FAC()
{
  return 0x6D617473656D6974;
}

uint64_t sub_1C0D31FC8()
{
  return 0x6E45656372756F73;
}

void sub_1C0D31FEC()
{
  sub_1C0D31A78();
}

void sub_1C0D32000()
{
  sub_1C0D31C00();
}

uint64_t sub_1C0D32014()
{
  unsigned __int8 *v0;

  return sub_1C0D31F60(*v0);
}

uint64_t sub_1C0D3201C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1C0D31D80(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C0D32040()
{
  sub_1C0D3320C();
  return sub_1C1070EE8();
}

uint64_t sub_1C0D32068()
{
  sub_1C0D3320C();
  return sub_1C1070EF4();
}

uint64_t SourceEntityRepresentation.__allocating_init(source:identifier:timestamp:sourceEntities:)(double a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  objc_class *v5;
  id v9;
  _QWORD *v10;
  uint64_t v11;

  v9 = objc_allocWithZone(v5);
  v10 = (_QWORD *)sub_1C07814F0();
  return SourceEntityRepresentation.init(source:identifier:timestamp:sourceEntities:)(v10, v11, a4, a5, a1);
}

uint64_t SourceEntityRepresentation.init(source:identifier:timestamp:sourceEntities:)(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, double a5)
{
  void *v5;
  uint64_t v6;
  void *v7;
  objc_class *ObjectType;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  char *v22;
  char v24;
  char *v25;
  id v26;
  uint64_t result;
  objc_super v28;
  uint64_t v29;
  unint64_t v30;

  v7 = v5;
  ObjectType = (objc_class *)swift_getObjectType();
  sub_1C07ACF80(&qword_1ED7623F8);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v14);
  sub_1C077864C();
  v15 = type metadata accessor for Source();
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v28 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v19);
  v21 = (id *)((char *)&v28.receiver - v20);
  v22 = v7;
  String.sourceBasedOnPrefix.getter();
  if (sub_1C07B2D80(v6, 1, v15) != 1)
  {
    sub_1C0845A08(v6, (uint64_t)v21);
    if (*v21 == *a1 && v21[1] == a1[1])
    {
      sub_1C07B1F90((uint64_t)v21, (uint64_t (*)(_QWORD))type metadata accessor for Source);
    }
    else
    {
      v24 = sub_1C1070CB4();
      sub_1C07B1F90((uint64_t)v21, (uint64_t (*)(_QWORD))type metadata accessor for Source);
      if ((v24 & 1) == 0)
        goto LABEL_11;
    }
    v25 = &v22[OBJC_IVAR____TtC24IntelligencePlatformCore26SourceEntityRepresentation_identifier];
    *(_QWORD *)v25 = a2;
    *((_QWORD *)v25 + 1) = a3;
    sub_1C080ABC4((uint64_t)a1, (uint64_t)&v22[OBJC_IVAR____TtC24IntelligencePlatformCore26SourceEntityRepresentation_source], (uint64_t (*)(_QWORD))type metadata accessor for Source);
    *(double *)&v22[OBJC_IVAR____TtC24IntelligencePlatformCore26SourceEntityRepresentation_timestamp] = a5;
    *(_QWORD *)&v22[OBJC_IVAR____TtC24IntelligencePlatformCore26SourceEntityRepresentation_sourceEntities] = a4;

    v28.receiver = v22;
    v28.super_class = ObjectType;
    v26 = objc_msgSendSuper2(&v28, sel_init);
    sub_1C07B1F90((uint64_t)a1, (uint64_t (*)(_QWORD))type metadata accessor for Source);
    return (uint64_t)v26;
  }
  sub_1C0784B6C(v6, &qword_1ED7623F8);
LABEL_11:
  sub_1C080ABC4((uint64_t)a1, (uint64_t)v18, (uint64_t (*)(_QWORD))type metadata accessor for Source);
  v29 = 0;
  v30 = 0xE000000000000000;
  sub_1C1070774();
  sub_1C106FC94();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C106FC94();
  swift_bridgeObjectRelease();
  sub_1C106FC94();
  sub_1C106FC94();
  result = sub_1C1070954();
  __break(1u);
  return result;
}

uint64_t SourceEntityRepresentation.__allocating_init(from:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  double v19;
  double v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  objc_class *v27;
  _QWORD *v28;
  id v29;
  _QWORD v30[2];
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  objc_class *v34;
  _QWORD *v35;
  uint64_t v36;
  _BYTE v37[40];
  __int128 v38[2];
  uint64_t v39;
  uint64_t v40;

  type metadata accessor for Source();
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)v30 - v6;
  v8 = sub_1C07ACF80(&qword_1EF648060);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = a1[3];
  v35 = a1;
  v13 = (uint64_t)sub_1C07A9480(a1, v12);
  sub_1C0D3320C();
  v14 = v36;
  sub_1C1070E94();
  if (v14)
  {
    sub_1C0775880();
  }
  else
  {
    v33 = v4;
    v36 = v9;
    LOBYTE(v38[0]) = 0;
    sub_1C0794BAC(&qword_1ED7625B0, (uint64_t (*)(uint64_t))type metadata accessor for Source, (uint64_t)&protocol conformance descriptor for Source);
    sub_1C0781EE0();
    sub_1C07A82B4(1);
    v16 = sub_1C1070AA4();
    v18 = v17;
    sub_1C07A82B4(2);
    sub_1C1070ABC();
    v20 = v19;
    sub_1C07ACF80(&qword_1EF648070);
    LOBYTE(v38[0]) = 3;
    sub_1C0D332B8(&qword_1EF648078, (uint64_t (*)(void))sub_1C0D33248, MEMORY[0x1E0DEAF40]);
    sub_1C0781EE0();
    v31 = v16;
    v32 = v18;
    v21 = v40;
    v22 = *(_QWORD *)(v40 + 16);
    if (v22)
    {
      v39 = MEMORY[0x1E0DEE9D8];
      sub_1C09D4D08();
      v30[1] = v21;
      v23 = v21 + 32;
      v24 = v39;
      do
      {
        sub_1C0D33284(v23, (uint64_t)v37);
        sub_1C07D6D1C((uint64_t)v37, (uint64_t)v38);
        sub_1C0A5CD78((uint64_t)v37);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1C09D4D08();
          v24 = v39;
        }
        v25 = *(_QWORD *)(v24 + 16);
        v26 = v25 + 1;
        if (v25 >= *(_QWORD *)(v24 + 24) >> 1)
        {
          v30[0] = v25 + 1;
          sub_1C09D4D08();
          v26 = v30[0];
          v24 = v39;
        }
        *(_QWORD *)(v24 + 16) = v26;
        sub_1C077DD60(v38, v24 + 40 * v25 + 32);
        v23 += 40;
        --v22;
        v27 = v34;
      }
      while (v22);
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      v24 = MEMORY[0x1E0DEE9D8];
      v27 = v34;
    }
    v28 = v33;
    sub_1C080ABC4((uint64_t)v7, (uint64_t)v33, (uint64_t (*)(_QWORD))type metadata accessor for Source);
    v29 = objc_allocWithZone(v27);
    v13 = SourceEntityRepresentation.init(source:identifier:timestamp:sourceEntities:)(v28, v31, v32, v24, v20);
    sub_1C07B1F90((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for Source);
    sub_1C0781D30((uint64_t)v11, *(uint64_t (**)(uint64_t, uint64_t))(v36 + 8));
    sub_1C0775880();
  }
  return v13;
}

void SourceEntityRepresentation.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  uint64_t v12;
  _OWORD v13[2];
  uint64_t v14;
  uint64_t v15;

  sub_1C077AE5C();
  sub_1C07ACF80(&qword_1EF648088);
  sub_1C077AE7C();
  MEMORY[0x1E0C80A78](v3);
  sub_1C077B838();
  sub_1C0D3320C();
  sub_1C078D65C();
  LOBYTE(v13[0]) = 0;
  type metadata accessor for Source();
  sub_1C0794BAC((unint64_t *)&qword_1ED75CC30, (uint64_t (*)(uint64_t))type metadata accessor for Source, (uint64_t)&protocol conformance descriptor for Source);
  sub_1C077F744();
  if (!v1)
  {
    sub_1C1070B7C();
    LOBYTE(v13[0]) = 2;
    sub_1C1070B94();
    v4 = *(_QWORD *)(v0 + OBJC_IVAR____TtC24IntelligencePlatformCore26SourceEntityRepresentation_sourceEntities);
    v5 = *(_QWORD *)(v4 + 16);
    v6 = MEMORY[0x1E0DEE9D8];
    if (v5)
    {
      v12 = v2;
      v15 = MEMORY[0x1E0DEE9D8];
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      sub_1C09D4D70();
      v6 = v15;
      v7 = v4 + 32;
      do
      {
        sub_1C07D6D1C(v7, (uint64_t)v13);
        v8 = *(_QWORD *)(v15 + 16);
        if (v8 >= *(_QWORD *)(v15 + 24) >> 1)
          sub_1C09D4D70();
        *(_QWORD *)(v15 + 16) = v8 + 1;
        v9 = v15 + 40 * v8;
        v10 = v13[0];
        v11 = v13[1];
        *(_QWORD *)(v9 + 64) = v14;
        *(_OWORD *)(v9 + 32) = v10;
        *(_OWORD *)(v9 + 48) = v11;
        v7 += 40;
        --v5;
      }
      while (v5);
      swift_bridgeObjectRelease();
      v2 = v12;
    }
    *(_QWORD *)&v13[0] = v6;
    sub_1C07ACF80(&qword_1EF648070);
    sub_1C0D332B8(&qword_1EF648090, (uint64_t (*)(void))sub_1C0D33320, MEMORY[0x1E0DEAF10]);
    sub_1C077F744();
    swift_bridgeObjectRelease();
  }
  sub_1C078C76C(*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  sub_1C07757D0();
}

uint64_t SourceEntityRepresentation.entityIdentifier(for:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  NSObject *v25;
  os_log_type_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  NSObject *v37;
  os_log_type_t v38;
  uint8_t *v39;
  uint64_t v40;
  uint64_t v42[3];
  void (*v43)(char *, uint64_t, uint64_t);
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;

  v53 = sub_1C106F874();
  v47 = *(_QWORD *)(v53 - 8);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v5);
  sub_1C07A2ABC(v6, v42[0]);
  v7 = sub_1C106F868();
  v50 = *(_QWORD *)(v7 - 8);
  v51 = v7;
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v8);
  sub_1C077AED0();
  v46 = v9;
  MEMORY[0x1E0C80A78](v10);
  v48 = (char *)v42 - v11;
  v12 = sub_1C106FB50();
  v56 = *(_QWORD *)(v12 - 8);
  v57 = v12;
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v13);
  sub_1C077AE40();
  v55 = v14;
  v15 = sub_1C106D1F8();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  sub_1C077AED0();
  v45 = v17;
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)v42 - v19;
  v54 = v2 + OBJC_IVAR____TtC24IntelligencePlatformCore26SourceEntityRepresentation_source;
  v21 = *(_QWORD *)(v2 + OBJC_IVAR____TtC24IntelligencePlatformCore26SourceEntityRepresentation_identifier);
  v22 = *(_QWORD *)(v2 + OBJC_IVAR____TtC24IntelligencePlatformCore26SourceEntityRepresentation_identifier + 8);
  if (qword_1ED761458 != -1)
    swift_once();
  v23 = sub_1C106F544();
  v24 = sub_1C079E000(v23, (uint64_t)qword_1ED78D818);
  v43 = *(void (**)(char *, uint64_t, uint64_t))(v16 + 16);
  v43(v20, a1, v15);
  swift_bridgeObjectRetain_n();
  v52 = v24;
  v25 = sub_1C106F538();
  v26 = sub_1C1070378();
  v27 = os_log_type_enabled(v25, v26);
  v49 = a1;
  v44 = v15;
  if (v27)
  {
    v28 = sub_1C0775854();
    v42[2] = a2;
    v29 = v28;
    v42[0] = sub_1C0775854();
    v59 = v42[0];
    *(_DWORD *)v29 = 136381187;
    sub_1C07767C4();
    v42[1] = v21;
    v58 = sub_1C0788DAC(v21, v22, &v59);
    sub_1C10705AC();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v29 + 12) = 2080;
    sub_1C0794BAC(&qword_1ED759F68, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3BB08], MEMORY[0x1E0D3BB40]);
    v30 = sub_1C1070C0C();
    v58 = sub_1C0788DAC(v30, v31, &v59);
    sub_1C10705AC();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v20, v15);
    *(_WORD *)(v29 + 22) = 1024;
    LODWORD(v58) = 0;
    sub_1C10705AC();
    _os_log_impl(&dword_1C0771000, v25, v26, "Source: generating identifier for: %{private}s : %s : %{BOOL}d", (uint8_t *)v29, 0x1Cu);
    swift_arrayDestroy();
    sub_1C0776778();
  }
  swift_bridgeObjectRelease_n();
  (*(void (**)(char *, uint64_t))(v16 + 8))(v20, v15);

  v59 = v21;
  v60 = v22;
  sub_1C07767C4();
  sub_1C106FC94();
  v33 = v59;
  v32 = v60;
  v34 = v55;
  sub_1C106FB44();
  sub_1C106FB20();
  v36 = v35;
  (*(void (**)(uint64_t, uint64_t))(v56 + 8))(v34, v57);
  if (v36 >> 60 != 15)
  {
    swift_bridgeObjectRelease();
    sub_1C0794BAC((unint64_t *)&qword_1ED762B30, (uint64_t (*)(uint64_t))MEMORY[0x1E0CA9940], MEMORY[0x1E0CA9930]);
    sub_1C07814F0();
    sub_1C106F85C();
    __asm { BR              X10 }
  }
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  v37 = sub_1C106F538();
  v38 = sub_1C1070390();
  if (os_log_type_enabled(v37, v38))
  {
    v39 = (uint8_t *)sub_1C0775854();
    v59 = sub_1C0775854();
    *(_DWORD *)v39 = 136380675;
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    v58 = sub_1C0788DAC(v33, v32, &v59);
    sub_1C10705AC();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1C0771000, v37, v38, "Source: failed to encode identifier as UTF8 data: %{private}s", v39, 0xCu);
    swift_arrayDestroy();
    sub_1C0776778();
  }

  swift_bridgeObjectRelease_n();
  v40 = sub_1C106E590();
  return sub_1C07B2D8C(a2, 1, 1, v40);
}

id SourceEntityRepresentation.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void SourceEntityRepresentation.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id SourceEntityRepresentation.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1C0D33174@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = SourceEntityRepresentation.__allocating_init(from:)(a1);
  if (!v2)
    *a2 = result;
  return result;
}

void sub_1C0D3319C()
{
  SourceEntityRepresentation.encode(to:)();
}

uint64_t type metadata accessor for MapPredicate(uint64_t a1)
{
  return sub_1C0784B00(a1, (uint64_t *)&unk_1EF6480F8);
}

unint64_t sub_1C0D331D0()
{
  unint64_t result;

  result = qword_1EF648050;
  if (!qword_1EF648050)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10B7290, &type metadata for MapPredicate.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF648050);
  }
  return result;
}

unint64_t sub_1C0D3320C()
{
  unint64_t result;

  result = qword_1EF648068;
  if (!qword_1EF648068)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10B7240, &type metadata for SourceEntityRepresentation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF648068);
  }
  return result;
}

unint64_t sub_1C0D33248()
{
  unint64_t result;

  result = qword_1EF648080;
  if (!qword_1EF648080)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10B7218, &type metadata for AnyEntity);
    atomic_store(result, (unint64_t *)&qword_1EF648080);
  }
  return result;
}

uint64_t sub_1C0D33284(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for StoredLocationVisit(a2, a1);
  return a2;
}

uint64_t sub_1C0D332B8(unint64_t *a1, uint64_t (*a2)(void), uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    v7 = sub_1C07D4BEC(&qword_1EF648070);
    v8 = a2();
    result = MEMORY[0x1C3BA8174](a3, v7, &v8);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1C0D33320()
{
  unint64_t result;

  result = qword_1EF648098;
  if (!qword_1EF648098)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10B71F0, &type metadata for AnyEntity);
    atomic_store(result, (unint64_t *)&qword_1EF648098);
  }
  return result;
}

uint64_t dispatch thunk of IdentifiableSourceEntityMappable.identifier.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of IdentifiableSourceEntityMappable.basicProperties.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of static SourceEntityMappable.type.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of SourceEntityMappable.mapLocation.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of SourceEntityMappable.constructRows(entityIdentifier:source:sourceId:map:relationshipId:pipelineType:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return (*(uint64_t (**)(uint64_t))(a9 + 40))(a1);
}

uint64_t *initializeBufferWithCopyOfBuffer for MapPredicate(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v18 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_1C106E41C();
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    v12(v9, v10, v11);
    v13 = a3[6];
    v14 = (char *)v4 + v13;
    v15 = (char *)a2 + v13;
    v16 = sub_1C106D1F8();
    if (sub_1C07B2D80((uint64_t)v15, 1, v16))
    {
      v17 = sub_1C07ACF80(&qword_1ED7618D0);
      memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v14, v15, v16);
      sub_1C07B2D8C((uint64_t)v14, 0, 1, v16);
    }
    v19 = a3[7];
    v20 = (char *)v4 + v19;
    v21 = (char *)a2 + v19;
    if (sub_1C07B2D80((uint64_t)v21, 1, v11))
    {
      v22 = sub_1C07ACF80(&qword_1ED759F70);
      memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    }
    else
    {
      v12(v20, v21, v11);
      sub_1C07B2D8C((uint64_t)v20, 0, 1, v11);
    }
  }
  return v4;
}

uint64_t destroy for MapPredicate(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t (*v10)(uint64_t, uint64_t);

  swift_bridgeObjectRelease();
  v4 = a1 + a2[5];
  v5 = sub_1C106E41C();
  v10 = *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8);
  v10(v4, v5);
  v6 = a1 + a2[6];
  v7 = sub_1C106D1F8();
  if (!sub_1C07B2D80(v6, 1, v7))
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  v8 = a1 + a2[7];
  result = sub_1C07B2D80(v8, 1, v5);
  if (!(_DWORD)result)
    return v10(v8, v5);
  return result;
}

_QWORD *initializeWithCopy for MapPredicate(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a3[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_1C106E41C();
  v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  v11(v8, v9, v10);
  v12 = a3[6];
  v13 = (char *)a1 + v12;
  v14 = (char *)a2 + v12;
  v15 = sub_1C106D1F8();
  if (sub_1C07B2D80((uint64_t)v14, 1, v15))
  {
    v16 = sub_1C07ACF80(&qword_1ED7618D0);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
    sub_1C07B2D8C((uint64_t)v13, 0, 1, v15);
  }
  v17 = a3[7];
  v18 = (char *)a1 + v17;
  v19 = (char *)a2 + v17;
  if (sub_1C07B2D80((uint64_t)v19, 1, v10))
  {
    v20 = sub_1C07ACF80(&qword_1ED759F70);
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
  }
  else
  {
    v11(v18, v19, v10);
    sub_1C07B2D8C((uint64_t)v18, 0, 1, v10);
  }
  return a1;
}

_QWORD *assignWithCopy for MapPredicate(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  int v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  int v23;
  int v24;
  uint64_t v25;

  *a1 = *a2;
  a1[1] = a2[1];
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  swift_bridgeObjectRelease();
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1C106E41C();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(void (**)(char *, char *, uint64_t))(v10 + 24);
  v11(v7, v8, v9);
  v12 = a3[6];
  v13 = (char *)a1 + v12;
  v14 = (char *)a2 + v12;
  v15 = sub_1C106D1F8();
  v16 = sub_1C07B2D80((uint64_t)v13, 1, v15);
  v17 = sub_1C07B2D80((uint64_t)v14, 1, v15);
  if (v16)
  {
    if (!v17)
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
      sub_1C07B2D8C((uint64_t)v13, 0, 1, v15);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  v18 = *(_QWORD *)(v15 - 8);
  if (v17)
  {
    (*(void (**)(char *, uint64_t))(v18 + 8))(v13, v15);
LABEL_6:
    v19 = sub_1C07ACF80(&qword_1ED7618D0);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v18 + 24))(v13, v14, v15);
LABEL_7:
  v20 = a3[7];
  v21 = (char *)a1 + v20;
  v22 = (char *)a2 + v20;
  v23 = sub_1C07B2D80((uint64_t)a1 + v20, 1, v9);
  v24 = sub_1C07B2D80((uint64_t)v22, 1, v9);
  if (!v23)
  {
    if (!v24)
    {
      v11(v21, v22, v9);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v21, v9);
    goto LABEL_12;
  }
  if (v24)
  {
LABEL_12:
    v25 = sub_1C07ACF80(&qword_1ED759F70);
    memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v21, v22, v9);
  sub_1C07B2D8C((uint64_t)v21, 0, 1, v9);
  return a1;
}

_OWORD *initializeWithTake for MapPredicate(_OWORD *a1, _OWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1C106E41C();
  v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32);
  v10(v7, v8, v9);
  v11 = a3[6];
  v12 = (char *)a1 + v11;
  v13 = (char *)a2 + v11;
  v14 = sub_1C106D1F8();
  if (sub_1C07B2D80((uint64_t)v13, 1, v14))
  {
    v15 = sub_1C07ACF80(&qword_1ED7618D0);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
    sub_1C07B2D8C((uint64_t)v12, 0, 1, v14);
  }
  v16 = a3[7];
  v17 = (char *)a1 + v16;
  v18 = (char *)a2 + v16;
  if (sub_1C07B2D80((uint64_t)v18, 1, v9))
  {
    v19 = sub_1C07ACF80(&qword_1ED759F70);
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
  }
  else
  {
    v10(v17, v18, v9);
    sub_1C07B2D8C((uint64_t)v17, 0, 1, v9);
  }
  return a1;
}

_QWORD *assignWithTake for MapPredicate(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  int v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  int v24;
  int v25;
  uint64_t v26;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = a3[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_1C106E41C();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(void (**)(char *, char *, uint64_t))(v11 + 40);
  v12(v8, v9, v10);
  v13 = a3[6];
  v14 = (char *)a1 + v13;
  v15 = (char *)a2 + v13;
  v16 = sub_1C106D1F8();
  v17 = sub_1C07B2D80((uint64_t)v14, 1, v16);
  v18 = sub_1C07B2D80((uint64_t)v15, 1, v16);
  if (v17)
  {
    if (!v18)
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v14, v15, v16);
      sub_1C07B2D8C((uint64_t)v14, 0, 1, v16);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  v19 = *(_QWORD *)(v16 - 8);
  if (v18)
  {
    (*(void (**)(char *, uint64_t))(v19 + 8))(v14, v16);
LABEL_6:
    v20 = sub_1C07ACF80(&qword_1ED7618D0);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v19 + 40))(v14, v15, v16);
LABEL_7:
  v21 = a3[7];
  v22 = (char *)a1 + v21;
  v23 = (char *)a2 + v21;
  v24 = sub_1C07B2D80((uint64_t)a1 + v21, 1, v10);
  v25 = sub_1C07B2D80((uint64_t)v23, 1, v10);
  if (!v24)
  {
    if (!v25)
    {
      v12(v22, v23, v10);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v11 + 8))(v22, v10);
    goto LABEL_12;
  }
  if (v25)
  {
LABEL_12:
    v26 = sub_1C07ACF80(&qword_1ED759F70);
    memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v22, v23, v10);
  sub_1C07B2D8C((uint64_t)v22, 0, 1, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for MapPredicate()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1C0D33CE8(uint64_t a1, uint64_t a2, int *a3)
{
  unint64_t v4;
  int v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  if ((_DWORD)a2 == 2147483646)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    v5 = v4 - 1;
    if (v5 < 0)
      v5 = -1;
    return (v5 + 1);
  }
  else
  {
    v9 = sub_1C0779688();
    if (*(_DWORD *)(*(_QWORD *)(v9 - 8) + 84) == (_DWORD)a2)
    {
      v10 = v9;
      v11 = a3[5];
    }
    else
    {
      v12 = sub_1C07ACF80(&qword_1ED7618D0);
      if (*(_DWORD *)(*(_QWORD *)(v12 - 8) + 84) == (_DWORD)a2)
      {
        v10 = v12;
        v11 = a3[6];
      }
      else
      {
        v10 = sub_1C07ACF80(&qword_1ED759F70);
        v11 = a3[7];
      }
    }
    return sub_1C07B2D80(a1 + v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for MapPredicate()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1C0D33DC0(uint64_t result, uint64_t a2, int a3, int *a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = result;
  if (a3 == 2147483646)
  {
    *(_QWORD *)(result + 8) = a2;
  }
  else
  {
    v8 = sub_1C0779688();
    if (*(_DWORD *)(*(_QWORD *)(v8 - 8) + 84) == a3)
    {
      v9 = v8;
      v10 = a4[5];
    }
    else
    {
      v11 = sub_1C07ACF80(&qword_1ED7618D0);
      if (*(_DWORD *)(*(_QWORD *)(v11 - 8) + 84) == a3)
      {
        v9 = v11;
        v10 = a4[6];
      }
      else
      {
        v9 = sub_1C07ACF80(&qword_1ED759F70);
        v10 = a4[7];
      }
    }
    return sub_1C07B2D8C(v5 + v10, a2, a2, v9);
  }
  return result;
}

void sub_1C0D33E7C()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  sub_1C106E41C();
  if (v0 <= 0x3F)
  {
    sub_1C07E6BB8(319, qword_1EF648108, (void (*)(uint64_t))MEMORY[0x1E0D3BB08]);
    if (v1 <= 0x3F)
    {
      sub_1C07E6BB8(319, (unint64_t *)&qword_1ED759F78, (void (*)(uint64_t))MEMORY[0x1E0D3CC50]);
      if (v2 <= 0x3F)
        swift_initStructMetadata();
    }
  }
}

uint64_t sub_1C0D33F48()
{
  return type metadata accessor for SourceEntityRepresentation(0);
}

uint64_t type metadata accessor for SourceEntityRepresentation(uint64_t a1)
{
  return sub_1C0784B00(a1, (uint64_t *)&unk_1EF648168);
}

uint64_t sub_1C0D33F64()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for Source();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for SourceEntityRepresentation()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of SourceEntityRepresentation.__allocating_init(source:identifier:timestamp:sourceEntities:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 112))();
}

ValueMetadata *type metadata accessor for AnyEntity()
{
  return &type metadata for AnyEntity;
}

ValueMetadata *type metadata accessor for SourceEntityRepresentation.CodingKeys()
{
  return &type metadata for SourceEntityRepresentation.CodingKeys;
}

uint64_t _s24IntelligencePlatformCore26SourceEntityRepresentationC10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1C0D34078 + 4 * byte_1C10B6ECD[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1C0D340AC + 4 * byte_1C10B6EC8[v4]))();
}

uint64_t sub_1C0D340AC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C0D340B4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C0D340BCLL);
  return result;
}

uint64_t sub_1C0D340C8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C0D340D0);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1C0D340D4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C0D340DC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MapPredicate.CodingKeys()
{
  return &type metadata for MapPredicate.CodingKeys;
}

unint64_t sub_1C0D340FC()
{
  unint64_t result;

  result = qword_1EF648178;
  if (!qword_1EF648178)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10B7110, &type metadata for MapPredicate.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF648178);
  }
  return result;
}

unint64_t sub_1C0D3413C()
{
  unint64_t result;

  result = qword_1EF648180;
  if (!qword_1EF648180)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10B71C8, &type metadata for SourceEntityRepresentation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF648180);
  }
  return result;
}

unint64_t sub_1C0D3417C()
{
  unint64_t result;

  result = qword_1EF648188;
  if (!qword_1EF648188)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10B7138, &type metadata for SourceEntityRepresentation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF648188);
  }
  return result;
}

unint64_t sub_1C0D341BC()
{
  unint64_t result;

  result = qword_1EF648190;
  if (!qword_1EF648190)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10B7160, &type metadata for SourceEntityRepresentation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF648190);
  }
  return result;
}

unint64_t sub_1C0D341FC()
{
  unint64_t result;

  result = qword_1EF648198;
  if (!qword_1EF648198)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10B7080, &type metadata for MapPredicate.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF648198);
  }
  return result;
}

unint64_t sub_1C0D3423C()
{
  unint64_t result;

  result = qword_1EF6481A0;
  if (!qword_1EF6481A0)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10B70A8, &type metadata for MapPredicate.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF6481A0);
  }
  return result;
}

unint64_t sub_1C0D34278()
{
  unint64_t result;

  result = qword_1EF6481B0;
  if (!qword_1EF6481B0)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10B7398, &type metadata for AnyEntity.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF6481B0);
  }
  return result;
}

unint64_t sub_1C0D342B4()
{
  unint64_t result;

  result = qword_1EF6481B8;
  if (!qword_1EF6481B8)
  {
    result = MEMORY[0x1C3BA8174](&protocol conformance descriptor for SourceEntityType, &type metadata for SourceEntityType);
    atomic_store(result, (unint64_t *)&qword_1EF6481B8);
  }
  return result;
}

unint64_t sub_1C0D342F0()
{
  unint64_t result;

  result = qword_1EF6481C8;
  if (!qword_1EF6481C8)
  {
    result = MEMORY[0x1C3BA8174](&protocol conformance descriptor for SourceEntityType, &type metadata for SourceEntityType);
    atomic_store(result, (unint64_t *)&qword_1EF6481C8);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for AnyEntity.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1C0D34378 + 4 * byte_1C10B6ED7[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1C0D343AC + 4 * byte_1C10B6ED2[v4]))();
}

uint64_t sub_1C0D343AC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C0D343B4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C0D343BCLL);
  return result;
}

uint64_t sub_1C0D343C8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C0D343D0);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1C0D343D4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C0D343DC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AnyEntity.CodingKeys()
{
  return &type metadata for AnyEntity.CodingKeys;
}

unint64_t sub_1C0D343FC()
{
  unint64_t result;

  result = qword_1EF6481D0;
  if (!qword_1EF6481D0)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10B7370, &type metadata for AnyEntity.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF6481D0);
  }
  return result;
}

unint64_t sub_1C0D3443C()
{
  unint64_t result;

  result = qword_1EF6481D8;
  if (!qword_1EF6481D8)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10B72E0, &type metadata for AnyEntity.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF6481D8);
  }
  return result;
}

unint64_t sub_1C0D3447C()
{
  unint64_t result;

  result = qword_1EF6481E0;
  if (!qword_1EF6481E0)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10B7308, &type metadata for AnyEntity.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF6481E0);
  }
  return result;
}

id SourceEntityStore.Iterator.next()()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  id v3;
  id v4;
  void *v5;

  v1 = *(_QWORD *)(v0 + 8);
  if (v1)
  {
    if (*(_QWORD *)(v1 + 16))
    {
      v2 = *(id *)(v1 + 32);
      sub_1C0D34588();

      return v2;
    }
    return 0;
  }
  if (!*(_QWORD *)v0)
    return 0;
  v4 = objc_msgSend(*(id *)v0, sel_nextEvent);
  if (!v4)
    return 0;
  v5 = v4;
  v2 = objc_msgSend(v4, sel_eventBody);
  if (v2)
    objc_msgSend(v5, sel_timestamp);

  return v2;
}

void sub_1C0D34588()
{
  uint64_t *v0;
  uint64_t v1;

  if (*(_QWORD *)(*v0 + 16))
  {
    sub_1C0AA4588(*v0);
    if (v1)
    {
      sub_1C0E08900();
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

id sub_1C0D345E0()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  void *v4;
  id v5;

  v1 = *(void **)(v0 + 16);
  if (v1)
  {
    v2 = *(id *)(v0 + 16);
  }
  else
  {
    v3 = sub_1C0D34634();
    v4 = *(void **)(v0 + 16);
    *(_QWORD *)(v0 + 16) = v3;
    v2 = v3;

    v1 = 0;
  }
  v5 = v1;
  return v2;
}

id sub_1C0D34634()
{
  _QWORD *v0;
  void *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  id v9;

  v1 = (void *)MEMORY[0x1C3BA79F4]();
  v2 = (void *)objc_opt_self();
  v3 = v0[3];
  v4 = v0[4];
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  v5 = sub_1C0D351B4(v3, v4, v2);
  swift_bridgeObjectRelease();
  v7 = v0[5];
  v6 = v0[6];
  v8 = objc_allocWithZone(MEMORY[0x1E0D02790]);
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  v9 = sub_1C0D3509C(v7, v6, v5);
  objc_autoreleasePoolPop(v1);
  return v9;
}

void sub_1C0D346DC(unsigned __int8 *a1, uint64_t a2, uint64_t a3, unsigned __int8 *a4, unsigned __int8 *a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _DWORD v16[2];
  uint64_t v17;
  uint64_t v18;
  unsigned __int8 *v19;

  v6 = v5;
  v18 = a2;
  v19 = a5;
  v10 = sub_1C106AB28();
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  MEMORY[0x1E0C80A78](v14);
  v16[1] = *a4;
  v15 = *v19;
  *(_QWORD *)(v6 + 16) = 0;
  v19 = a1;
  sub_1C106AAC8();
  v17 = a3;
  sub_1C0D2B2DC();
  sub_1C106AAC8();
  swift_bridgeObjectRelease();
  sub_1C079E144((uint64_t)v12);
  __asm { BR              X9 }
}

_QWORD *sub_1C0D34818()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  sub_1C106AAC8();
  swift_bridgeObjectRelease();
  sub_1C079E144(v2);
  v4 = sub_1C106AB10();
  v6 = v5;
  sub_1C079E144(v1);
  v0[3] = v4;
  v0[4] = v6;
  v7 = *(_QWORD *)(v3 - 104);
  sub_1C0A53D64(v7, (uint64_t)v0 + OBJC_IVAR____TtC24IntelligencePlatformCore17SourceEntityStore_source);
  v8 = *(_QWORD *)(v3 - 96);
  v9 = sub_1C106D0FC();
  v11 = v10;
  sub_1C07B1FDC(v7, (uint64_t (*)(_QWORD))type metadata accessor for Source);
  v12 = sub_1C106D1F8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v8, v12);
  sub_1C07B1FDC(*(_QWORD *)(v3 - 88), (uint64_t (*)(_QWORD))type metadata accessor for Configuration);
  v0[5] = v9;
  v0[6] = v11;
  *((_BYTE *)v0 + OBJC_IVAR____TtC24IntelligencePlatformCore17SourceEntityStore_stage) = *(_DWORD *)(v3 - 108);
  return v0;
}

uint64_t SourceEntityStore.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1C07B1FDC(v0 + OBJC_IVAR____TtC24IntelligencePlatformCore17SourceEntityStore_source, (uint64_t (*)(_QWORD))type metadata accessor for Source);
  return v0;
}

uint64_t SourceEntityStore.__deallocating_deinit()
{
  SourceEntityStore.deinit();
  return swift_deallocClassInstance();
}

void sub_1C0D3499C(uint64_t a1)
{
  SourceEntityStore.storeOutput(_:)(a1);
}

void SourceEntityStore.storeOutput(_:)(uint64_t a1)
{
  void *v2;
  id v3;
  id v4;

  v2 = (void *)MEMORY[0x1C3BA79F4]();
  v3 = sub_1C0D345E0();
  v4 = objc_msgSend(v3, sel_source);

  objc_msgSend(v4, sel_sendEvent_, a1);
  objc_autoreleasePoolPop(v2);
}

void sub_1C0D34A3C()
{
  SourceEntityStore.clearAllData()();
}

Swift::Void __swiftcall SourceEntityStore.clearAllData()()
{
  void *v0;

  v0 = (void *)MEMORY[0x1C3BA79F4]();
  sub_1C0D34A9C();
  objc_autoreleasePoolPop(v0);
}

void sub_1C0D34A9C()
{
  id v0;
  void *v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  _QWORD v6[6];

  v0 = sub_1C0D345E0();
  v6[4] = sub_1C07C7E9C;
  v6[5] = 0;
  v6[0] = MEMORY[0x1E0C809B0];
  v6[1] = 1107296256;
  v6[2] = sub_1C080BF4C;
  v6[3] = &unk_1E7A2F430;
  v1 = _Block_copy(v6);
  swift_release();
  objc_msgSend(v0, sel_pruneWithPredicateBlock_, v1);

  _Block_release(v1);
  if ((swift_isEscapingClosureAtFileLocation() & 1) != 0)
  {
    __break(1u);
  }
  else if (qword_1ED762B20 == -1)
  {
    goto LABEL_3;
  }
  swift_once();
LABEL_3:
  v2 = sub_1C106F544();
  sub_1C079E000(v2, (uint64_t)qword_1ED78D9F8);
  v3 = sub_1C106F538();
  v4 = sub_1C10703A8();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v5 = 0;
    _os_log_impl(&dword_1C0771000, v3, v4, "SourceEntityStore cleared.", v5, 2u);
    MEMORY[0x1C3BA8270](v5, -1, -1);
  }

}

uint64_t SourceEntityStore.makeIterator(startTime:)@<X0>(_QWORD *a1@<X8>, double a2@<D0>)
{
  _QWORD *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5 = v2[3];
  v6 = v2[4];
  v8 = v2[5];
  v7 = v2[6];
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  return sub_1C0D34C80(v5, v6, v8, v7, a1, a2);
}

uint64_t sub_1C0D34C80@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>, double a6@<D0>)
{
  void *v12;
  id v13;
  id v14;
  id v15;
  void *v16;
  id v17;
  uint64_t result;

  v12 = (void *)objc_opt_self();
  v13 = sub_1C0D3515C(a1, a2, v12);
  objc_allocWithZone(MEMORY[0x1E0D024E0]);
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  v14 = v13;
  v15 = sub_1C0D350FC(a3, a4, v13);
  if (v15 && (v16 = v15, v17 = objc_msgSend(v15, sel_newEnumeratorFromStartTime_, a6), v16, v17))
  {

    result = swift_bridgeObjectRelease();
    *a5 = v17;
    a5[1] = 0;
  }
  else
  {
    sub_1C1070774();
    sub_1C106FC94();
    sub_1C106FC94();
    result = sub_1C1070954();
    __break(1u);
  }
  return result;
}

id sub_1C0D34DDC@<X0>(_QWORD *a1@<X8>)
{
  id result;
  uint64_t v3;

  result = SourceEntityStore.Iterator.next()();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t dispatch thunk of SourceEntityStoreProtocol.storeOutput(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t dispatch thunk of SourceEntityStoreProtocol.clearAllData()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t sub_1C0D34E20()
{
  return type metadata accessor for SourceEntityStore();
}

uint64_t type metadata accessor for SourceEntityStore()
{
  uint64_t result;

  result = qword_1ED7520D8;
  if (!qword_1ED7520D8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1C0D34E60()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for Source();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for SourceEntityStore()
{
  return swift_lookUpClassMethod();
}

_QWORD *initializeBufferWithCopyOfBuffer for SourceEntityStore.Iterator(_QWORD *a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  id v5;

  v3 = *(void **)a2;
  v4 = *(_QWORD *)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  a1[1] = v4;
  v5 = v3;
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  return a1;
}

uint64_t destroy for SourceEntityStore.Iterator(id *a1)
{

  return swift_bridgeObjectRelease();
}

uint64_t assignWithCopy for SourceEntityStore.Iterator(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;

  v4 = *(void **)a1;
  v5 = *(void **)a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v5;

  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  swift_bridgeObjectRelease();
  return a1;
}

id *assignWithTake for SourceEntityStore.Iterator(id *a1, _OWORD *a2)
{

  *(_OWORD *)a1 = *a2;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for SourceEntityStore.Iterator(uint64_t *a1, unsigned int a2)
{
  int v2;
  uint64_t v3;

  if (a2)
  {
    if (a2 >= 0x7FFFFFFF && *((_BYTE *)a1 + 16))
    {
      v2 = *(_DWORD *)a1 + 2147483646;
    }
    else
    {
      v3 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF)
        LODWORD(v3) = -1;
      v2 = v3 - 1;
      if (v2 < 0)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SourceEntityStore.Iterator(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
      *(_QWORD *)result = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for SourceEntityStore.Iterator()
{
  return &type metadata for SourceEntityStore.Iterator;
}

id sub_1C0D3509C(uint64_t a1, uint64_t a2, void *a3)
{
  void *v3;
  void *v5;
  id v6;

  v5 = (void *)sub_1C106FAF0();
  swift_bridgeObjectRelease();
  v6 = objc_msgSend(v3, sel_initWithPrivateStreamIdentifier_storeConfig_, v5, a3);

  return v6;
}

id sub_1C0D350FC(uint64_t a1, uint64_t a2, void *a3)
{
  void *v3;
  void *v5;
  id v6;

  v5 = (void *)sub_1C106FAF0();
  swift_bridgeObjectRelease();
  v6 = objc_msgSend(v3, sel_initWithStream_config_, v5, a3);

  return v6;
}

id sub_1C0D3515C(uint64_t a1, uint64_t a2, void *a3)
{
  void *v4;
  id v5;

  v4 = (void *)sub_1C106FAF0();
  swift_bridgeObjectRelease();
  v5 = objc_msgSend(a3, sel_newPrivateStreamDefaultConfigurationWithStoreBasePath_, v4);

  return v5;
}

id sub_1C0D351B4(uint64_t a1, uint64_t a2, void *a3)
{
  void *v4;
  id v5;

  v4 = (void *)sub_1C106FAF0();
  v5 = objc_msgSend(a3, sel_newPrivateStreamDefaultConfigurationWithStoreBasePath_, v4);

  return v5;
}

unint64_t sub_1C0D351FC()
{
  unint64_t result;

  result = sub_1C0C98FEC();
  qword_1EF6481E8 = 0x6E6F73726570;
  unk_1EF6481F0 = 0xE600000000000000;
  qword_1EF6481F8 = (uint64_t)&type metadata for Person;
  qword_1EF648200 = result;
  return result;
}

uint64_t SourceEntityType.init(id:metatype:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  *a5 = result;
  a5[1] = a2;
  a5[2] = a3;
  a5[3] = a4;
  return result;
}

uint64_t static SourceEntityType.person.getter()
{
  if (qword_1EF62E2C8 != -1)
    swift_once();
  sub_1C07A7624((uint64_t)&qword_1EF6481E8);
  return sub_1C079CD28();
}

unint64_t sub_1C0D35290()
{
  unint64_t result;

  result = sub_1C0ACA5F4();
  qword_1EF648208 = 0x656C646E6168;
  unk_1EF648210 = 0xE600000000000000;
  qword_1EF648218 = (uint64_t)&type metadata for Handle;
  qword_1EF648220 = result;
  return result;
}

uint64_t static SourceEntityType.handle.getter()
{
  if (qword_1EF62E2D0 != -1)
    swift_once();
  sub_1C07A7624((uint64_t)&qword_1EF648208);
  return sub_1C079CD28();
}

void sub_1C0D35318()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  sub_1C0CD9CB8();
  sub_1C07A4BBC();
  *v0 = v1;
  v0[1] = 0xED00007373657264;
  v0[2] = &type metadata for PostalAddress;
  v0[3] = v2;
}

uint64_t static SourceEntityType.postalAddress.getter()
{
  if (qword_1EF62E2D8 != -1)
    swift_once();
  sub_1C07A7624((uint64_t)&qword_1EF648228);
  return sub_1C079CD28();
}

void sub_1C0D353A4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  sub_1C0CDC424();
  sub_1C079AF6C();
  *v0 = v1;
  v0[1] = 0xEC00000070696873;
  v0[2] = &type metadata for Relationship;
  v0[3] = v2;
}

uint64_t static SourceEntityType.relationship.getter()
{
  if (qword_1EF62E2E0 != -1)
    swift_once();
  sub_1C07A7624((uint64_t)&qword_1EF648248);
  return sub_1C079CD28();
}

void sub_1C0D3542C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  sub_1C0D36C60();
  sub_1C0796B00();
  *v0 = v1;
  v0[1] = 0xED00007974726570;
  v0[2] = &type metadata for BasicProperty;
  v0[3] = v2;
}

uint64_t static SourceEntityType.basicProperty.getter()
{
  if (qword_1EF62E2E8 != -1)
    swift_once();
  sub_1C07A7624((uint64_t)&qword_1EF648268);
  return sub_1C079CD28();
}

void sub_1C0D354B8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  sub_1C0D36C24();
  sub_1C07A2ADC();
  *v0 = v1;
  v0[1] = 0xED0000656C69666FLL;
  v0[2] = &type metadata for SocialMediaProfile;
  v0[3] = v2;
}

uint64_t static SourceEntityType.socialProfile.getter()
{
  if (qword_1EF62E2F0 != -1)
    swift_once();
  sub_1C07A7624((uint64_t)&qword_1EF648288);
  return sub_1C079CD28();
}

void sub_1C0D35544()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  sub_1C091C9BC();
  sub_1C079E8B8();
  *v0 = v1;
  v0[1] = 0xEA0000000000746ELL;
  v0[2] = &type metadata for Employment;
  v0[3] = v2;
}

uint64_t static SourceEntityType.employment.getter()
{
  if (qword_1EF62E2F8 != -1)
    swift_once();
  sub_1C07A7624((uint64_t)&qword_1EF6482A8);
  return sub_1C079CD28();
}

void sub_1C0D355C8()
{
  uint64_t v0;
  uint64_t v1;

  sub_1C0D36BE8();
  sub_1C07A3FA0(&qword_1EF6482C8);
  *(_QWORD *)(v1 + 16) = &type metadata for InstantMessageAddress;
  *(_QWORD *)(v1 + 24) = v0;
}

uint64_t static SourceEntityType.instantMessageAddress.getter()
{
  if (qword_1EF62E300 != -1)
    swift_once();
  sub_1C07A7624((uint64_t)&qword_1EF6482C8);
  return sub_1C079CD28();
}

unint64_t sub_1C0D35650()
{
  unint64_t result;

  result = sub_1C0D2939C();
  qword_1EF6482E8 = 1735290739;
  unk_1EF6482F0 = 0xE400000000000000;
  qword_1EF6482F8 = (uint64_t)&type metadata for Song;
  qword_1EF648300 = result;
  return result;
}

uint64_t static SourceEntityType.song.getter()
{
  if (qword_1EF62E308 != -1)
    swift_once();
  sub_1C07A7624((uint64_t)&qword_1EF6482E8);
  return sub_1C079CD28();
}

unint64_t sub_1C0D356D4()
{
  unint64_t result;

  result = sub_1C07EB220();
  qword_1EF648308 = 7368801;
  unk_1EF648310 = 0xE300000000000000;
  qword_1EF648318 = (uint64_t)&type metadata for App;
  qword_1EF648320 = result;
  return result;
}

uint64_t static SourceEntityType.app.getter()
{
  if (qword_1EF62E310 != -1)
    swift_once();
  sub_1C07A7624((uint64_t)&qword_1EF648308);
  return sub_1C079CD28();
}

unint64_t sub_1C0D35758()
{
  unint64_t result;

  result = sub_1C09CE880();
  qword_1EF648328 = 0x746144746E657665;
  unk_1EF648330 = 0xEA00000000007365;
  qword_1EF648338 = (uint64_t)&type metadata for EventDates;
  qword_1EF648340 = result;
  return result;
}

uint64_t static SourceEntityType.eventDates.getter()
{
  if (qword_1EF62E318 != -1)
    swift_once();
  sub_1C07A7624((uint64_t)&qword_1EF648328);
  return sub_1C079CD28();
}

void sub_1C0D357E8()
{
  uint64_t v0;
  uint64_t v1;

  sub_1C09E7418();
  sub_1C07A3FA0(&qword_1EF648348);
  *(_QWORD *)(v1 + 16) = &type metadata for EventParticipant;
  *(_QWORD *)(v1 + 24) = v0;
}

uint64_t static SourceEntityType.eventParticipant.getter()
{
  if (qword_1EF62E320 != -1)
    swift_once();
  sub_1C07A7624((uint64_t)&qword_1EF648348);
  return sub_1C079CD28();
}

void sub_1C0D35870()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  sub_1C0D36BAC();
  sub_1C07882A8();
  *v0 = v1;
  v0[1] = 0xEF6E6F697461636FLL;
  v0[2] = &type metadata for VisitedLocation;
  v0[3] = v2;
}

uint64_t static SourceEntityType.visitedLocation.getter()
{
  if (qword_1EF62E328 != -1)
    swift_once();
  sub_1C07A7624((uint64_t)&qword_1EF648368);
  return sub_1C079CD28();
}

void sub_1C0D358FC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  sub_1C09E8930();
  sub_1C07915DC();
  *v0 = v1;
  v0[1] = 0xEB00000000726564;
  v0[2] = &type metadata for EventSender;
  v0[3] = v2;
}

uint64_t static SourceEntityType.eventSender.getter()
{
  if (qword_1EF62E330 != -1)
    swift_once();
  sub_1C07A7624((uint64_t)&qword_1EF648388);
  return sub_1C079CD28();
}

void sub_1C0D35984()
{
  uint64_t v0;
  uint64_t v1;

  sub_1C0D36B70();
  sub_1C07A3FA0(&qword_1EF6483A8);
  *(_QWORD *)(v1 + 16) = &type metadata for StructuredLocation;
  *(_QWORD *)(v1 + 24) = v0;
}

uint64_t static SourceEntityType.structuredLocation.getter()
{
  if (qword_1EF62E338 != -1)
    swift_once();
  sub_1C07A7624((uint64_t)&qword_1EF6483A8);
  return sub_1C079CD28();
}

unint64_t sub_1C0D35A0C()
{
  unint64_t result;

  result = sub_1C0A63290();
  qword_1EF6483C8 = 0x656E6F5A656D6974;
  unk_1EF6483D0 = 0xE800000000000000;
  qword_1EF6483D8 = (uint64_t)&type metadata for GDTimeZone;
  qword_1EF6483E0 = result;
  return result;
}

uint64_t static SourceEntityType.timeZone.getter()
{
  if (qword_1EF62E340 != -1)
    swift_once();
  sub_1C07A7624((uint64_t)&qword_1EF6483C8);
  return sub_1C079CD28();
}

void sub_1C0D35A98()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  sub_1C0A161B8();
  sub_1C0797770();
  *v0 = v1;
  v0[1] = 0xEC0000007265626DLL;
  v0[2] = &type metadata for FamilyMember;
  v0[3] = v2;
}

uint64_t static SourceEntityType.familyMember.getter()
{
  if (qword_1EF62E348 != -1)
    swift_once();
  sub_1C07A7624((uint64_t)&qword_1EF6483E8);
  return sub_1C079CD28();
}

void sub_1C0D35B20()
{
  uint64_t v0;
  uint64_t v1;

  sub_1C09CF1E0();
  sub_1C07A3FA0(qword_1EF6D1E38);
  *(_QWORD *)(v1 + 16) = &type metadata for EventKitCalendar;
  *(_QWORD *)(v1 + 24) = v0;
}

uint64_t SourceEntityType.id.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  return v1;
}

uint64_t SourceEntityType.metatype.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 16);
}

unint64_t SourceEntityType.description.getter()
{
  return 0xD000000000000022;
}

__n128 SourceEntityType.init(rawValue:)@<Q0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  BOOL v4;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  __n128 result;
  BOOL v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;
  uint64_t v16;
  BOOL v17;
  uint64_t v18;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  uint64_t v25;
  BOOL v26;
  BOOL v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  BOOL v31;
  BOOL v32;
  uint64_t v33;
  uint64_t v34;
  BOOL v35;
  BOOL v36;
  uint64_t v37;
  uint64_t v38;
  BOOL v39;
  unsigned __int128 v40;
  uint64_t v41;
  unsigned __int128 v42;
  uint64_t v43;

  v4 = a1 == 0x6E6F73726570 && a2 == 0xE600000000000000;
  if (v4 || (sub_1C0799140() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    if (qword_1EF62E2C8 != -1)
      swift_once();
    v7 = &qword_1EF6481E8;
LABEL_9:
    v8 = *v7;
    v9 = v7[3];
    v40 = *(_OWORD *)(v7 + 1);
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    goto LABEL_10;
  }
  v11 = a1 == 0x656C646E6168 && a2 == 0xE600000000000000;
  if (v11 || (sub_1C0799140() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    if (qword_1EF62E2D0 != -1)
      swift_once();
    v7 = &qword_1EF648208;
    goto LABEL_9;
  }
  sub_1C07A4BBC();
  v14 = a1 == v13 && a2 == v12;
  if (v14 || (sub_1C0799140() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    if (qword_1EF62E2D8 != -1)
      swift_once();
    v7 = &qword_1EF648228;
    goto LABEL_9;
  }
  sub_1C079AF6C();
  v17 = a1 == v16 && a2 == v15;
  if (v17 || (sub_1C0799140() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    if (qword_1EF62E2E0 != -1)
      swift_once();
    v7 = &qword_1EF648248;
    goto LABEL_9;
  }
  sub_1C0796B00();
  v20 = a1 == v19 && a2 == v18;
  if (v20 || (sub_1C0799140() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    if (qword_1EF62E2E8 != -1)
      swift_once();
    v7 = &qword_1EF648268;
    goto LABEL_9;
  }
  sub_1C07A2ADC();
  v23 = a1 == v22 && a2 == v21;
  if (v23 || (sub_1C0799140() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    if (qword_1EF62E2F0 != -1)
      swift_once();
    v7 = &qword_1EF648288;
    goto LABEL_9;
  }
  sub_1C079E8B8();
  v26 = a1 == v25 && a2 == v24 + 265;
  if (v26 || (sub_1C0799140() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    if (qword_1EF62E2F8 != -1)
      swift_once();
    v7 = &qword_1EF6482A8;
    goto LABEL_9;
  }
  if (a1 == 0xD000000000000015 && (sub_1C07AE1A8((uint64_t)"instantMessageAddress"), v4) || (sub_1C0799140() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    if (qword_1EF62E300 != -1)
      swift_once();
    v7 = &qword_1EF6482C8;
    goto LABEL_9;
  }
  v27 = a1 == 1735290739 && a2 == 0xE400000000000000;
  if (v27 || (sub_1C0799140() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    if (qword_1EF62E308 != -1)
      swift_once();
    v7 = &qword_1EF6482E8;
    goto LABEL_9;
  }
  v28 = a1 == 7368801 && a2 == 0xE300000000000000;
  if (v28 || (sub_1C0799140() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    if (qword_1EF62E310 != -1)
      swift_once();
    v7 = &qword_1EF648308;
    goto LABEL_9;
  }
  if (a1 == 0xD000000000000010 && (sub_1C07AE1A8((uint64_t)"eventParticipant"), v4) || (sub_1C0799140() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    if (qword_1EF62E320 != -1)
      swift_once();
    v7 = &qword_1EF648348;
    goto LABEL_9;
  }
  sub_1C07882A8();
  v31 = a1 == v30 && a2 == v29;
  if (v31 || (sub_1C0799140() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    if (qword_1EF62E328 != -1)
      swift_once();
    v7 = &qword_1EF648368;
    goto LABEL_9;
  }
  v32 = a1 == 0x746144746E657665 && a2 == 0xEA00000000007365;
  if (v32 || (sub_1C0799140() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    if (qword_1EF62E318 != -1)
      swift_once();
    v7 = &qword_1EF648328;
    goto LABEL_9;
  }
  sub_1C07915DC();
  v35 = a1 == v34 && a2 == v33;
  if (v35 || (sub_1C0799140() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    if (qword_1EF62E330 != -1)
      swift_once();
    v7 = &qword_1EF648388;
    goto LABEL_9;
  }
  if (a1 == 0xD000000000000012 && a2 == 0x80000001C1109C20 || (sub_1C0799140() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    if (qword_1EF62E338 != -1)
      swift_once();
    v7 = &qword_1EF6483A8;
    goto LABEL_9;
  }
  v36 = a1 == 0x656E6F5A656D6974 && a2 == 0xE800000000000000;
  if (v36 || (sub_1C0799140() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    if (qword_1EF62E340 != -1)
      swift_once();
    v7 = &qword_1EF6483C8;
    goto LABEL_9;
  }
  sub_1C0797770();
  v39 = a1 == v38 && a2 == v37;
  if (v39 || (sub_1C0799140() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    if (qword_1EF62E348 != -1)
      swift_once();
    v7 = &qword_1EF6483E8;
    goto LABEL_9;
  }
  if (a1 == 0xD000000000000010 && (sub_1C07AE1A8((uint64_t)"eventKitCalendar"), v4) || (sub_1C0799140() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    if (qword_1EF62E350 != -1)
      swift_once();
    v7 = qword_1EF6D1E38;
    goto LABEL_9;
  }
  sub_1C0D3656C(a1, a2, (uint64_t)&v41);
  swift_bridgeObjectRelease();
  v8 = v41;
  v9 = v43;
  v40 = v42;
  if (!(_QWORD)v42)
    v40 = __PAIR128__(*((unint64_t *)&v42 + 1), 0);
LABEL_10:
  *(_QWORD *)a3 = v8;
  result = (__n128)v40;
  *(_OWORD *)(a3 + 8) = v40;
  *(_QWORD *)(a3 + 24) = v9;
  return result;
}

__n128 sub_1C0D3656C@<Q0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  __n128 result;
  __n128 v18;
  uint64_t v19;
  __n128 v20;
  uint64_t v21;

  if (qword_1ED761518 != -1)
    swift_once();
  swift_beginAccess();
  if (qword_1ED7627B8
    && ((*((void (**)(void))off_1ED7627C0 + 4))(),
        (*(void (**)(uint64_t *__return_ptr, uint64_t, unint64_t))(v6 + 8))(&v19, a1, a2),
        v20.n128_u64[0]))
  {
    v18 = v20;
    v7 = v19;
    v8 = v21;
    if (qword_1ED762B18 != -1)
      swift_once();
    v9 = sub_1C106F544();
    sub_1C079E000(v9, (uint64_t)qword_1ED762AF8);
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    v10 = sub_1C106F538();
    v11 = sub_1C10703A8();
    if (os_log_type_enabled(v10, v11))
    {
      v12 = (uint8_t *)sub_1C0775854();
      v19 = sub_1C0775854();
      *(_DWORD *)v12 = 136315138;
      sub_1C0788DAC(0xD000000000000022, 0x80000001C1109BB0, &v19);
      sub_1C07A032C();
      sub_1C10705AC();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C0771000, v10, v11, "SourceEntityType: resolveInternalType: loaded %s", v12, 0xCu);
      swift_arrayDestroy();
      sub_1C0776778();
    }

    swift_bridgeObjectRelease();
    *(_QWORD *)a3 = v7;
    result = v18;
    *(__n128 *)(a3 + 8) = v18;
    *(_QWORD *)(a3 + 24) = v8;
  }
  else
  {
    if (qword_1ED762B18 != -1)
      swift_once();
    v13 = sub_1C106F544();
    sub_1C079E000(v13, (uint64_t)qword_1ED762AF8);
    swift_bridgeObjectRetain_n();
    v14 = sub_1C106F538();
    v15 = sub_1C10703A8();
    if (os_log_type_enabled(v14, v15))
    {
      v16 = (uint8_t *)sub_1C0775854();
      v19 = sub_1C0775854();
      *(_DWORD *)v16 = 136315138;
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      sub_1C0788DAC(a1, a2, &v19);
      sub_1C07A032C();
      sub_1C10705AC();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1C0771000, v14, v15, "InternalPlugin: SourceEntityType: resolveInternalType: failed to resolve type for %s", v16, 0xCu);
      swift_arrayDestroy();
      sub_1C0776778();
    }

    swift_bridgeObjectRelease_n();
    result.n128_u64[0] = 0;
    *(_OWORD *)a3 = 0u;
    *(_OWORD *)(a3 + 16) = 0u;
  }
  return result;
}

double sub_1C0D368D8@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  double result;

  *(_QWORD *)&result = SourceEntityType.init(rawValue:)(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), a2).n128_u64[0];
  return result;
}

uint64_t sub_1C0D368E4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = SourceEntityType.id.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1C0D36908()
{
  sub_1C0D36B34();
  return sub_1C106FE8C();
}

uint64_t sub_1C0D36964()
{
  sub_1C0D36B34();
  return sub_1C106FE50();
}

unint64_t sub_1C0D369B4()
{
  unint64_t result;

  result = qword_1EF648408;
  if (!qword_1EF648408)
  {
    result = MEMORY[0x1C3BA8174](&protocol conformance descriptor for SourceEntityType, &type metadata for SourceEntityType);
    atomic_store(result, (unint64_t *)&qword_1EF648408);
  }
  return result;
}

void sub_1C0D369F0()
{
  sub_1C0A540B0();
}

uint64_t sub_1C0D369FC()
{
  return sub_1C08C9F80();
}

void sub_1C0D36A08()
{
  sub_1C0A54908();
}

unint64_t sub_1C0D36A14()
{
  SourceEntityType.description.getter();
  return 0xD000000000000022;
}

uint64_t sub_1C0D36A30(uint64_t *a1, uint64_t *a2)
{
  return sub_1C08C6A0C(*a1, a1[1], a1[2], a1[3], *a2, a2[1]);
}

uint64_t initializeWithCopy for SourceEntityType(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v3 = *(_QWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 24) = v3;
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  return a1;
}

uint64_t assignWithCopy for SourceEntityType(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  return a1;
}

uint64_t assignWithTake for SourceEntityType(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 24) = v4;
  return a1;
}

ValueMetadata *type metadata accessor for SourceEntityType()
{
  return &type metadata for SourceEntityType;
}

unint64_t sub_1C0D36B34()
{
  unint64_t result;

  result = qword_1EF648410;
  if (!qword_1EF648410)
  {
    result = MEMORY[0x1C3BA8174](&protocol conformance descriptor for SourceEntityType, &type metadata for SourceEntityType);
    atomic_store(result, (unint64_t *)&qword_1EF648410);
  }
  return result;
}

unint64_t sub_1C0D36B70()
{
  unint64_t result;

  result = qword_1EF648418;
  if (!qword_1EF648418)
  {
    result = MEMORY[0x1C3BA8174](&protocol conformance descriptor for StructuredLocation, &type metadata for StructuredLocation);
    atomic_store(result, (unint64_t *)&qword_1EF648418);
  }
  return result;
}

unint64_t sub_1C0D36BAC()
{
  unint64_t result;

  result = qword_1EF648420;
  if (!qword_1EF648420)
  {
    result = MEMORY[0x1C3BA8174](&protocol conformance descriptor for VisitedLocation, &type metadata for VisitedLocation);
    atomic_store(result, (unint64_t *)&qword_1EF648420);
  }
  return result;
}

unint64_t sub_1C0D36BE8()
{
  unint64_t result;

  result = qword_1EF648428;
  if (!qword_1EF648428)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10A3088, &type metadata for InstantMessageAddress);
    atomic_store(result, (unint64_t *)&qword_1EF648428);
  }
  return result;
}

unint64_t sub_1C0D36C24()
{
  unint64_t result;

  result = qword_1EF648430;
  if (!qword_1EF648430)
  {
    result = MEMORY[0x1C3BA8174](&protocol conformance descriptor for SocialMediaProfile, &type metadata for SocialMediaProfile);
    atomic_store(result, (unint64_t *)&qword_1EF648430);
  }
  return result;
}

unint64_t sub_1C0D36C60()
{
  unint64_t result;

  result = qword_1EF648438;
  if (!qword_1EF648438)
  {
    result = MEMORY[0x1C3BA8174](&protocol conformance descriptor for BasicProperty, &type metadata for BasicProperty);
    atomic_store(result, (unint64_t *)&qword_1EF648438);
  }
  return result;
}

void String.base64EncodedSHA(withPrefix:)()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29[3];

  sub_1C0779670();
  v2 = v1;
  v4 = v3;
  v6 = v5;
  v7 = sub_1C106F874();
  v26 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  sub_1C0778564();
  v8 = sub_1C106F868();
  v27 = *(_QWORD *)(v8 - 8);
  v28 = v8;
  MEMORY[0x1E0C80A78](v8);
  v25 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v11 = sub_1C106FB50();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  sub_1C077864C();
  sub_1C106FB44();
  v24 = v4;
  sub_1C106FB20();
  v14 = v13;
  v15 = (*(uint64_t (**)(uint64_t, uint64_t))(v12 + 8))(v0, v11);
  if (v14 >> 60 != 15)
  {
    v20 = MEMORY[0x1C3BA79F4](v15);
    v21 = v6[1];
    v29[0] = *v6;
    v29[1] = v21;
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    sub_1C078CC08();
    sub_1C0794BAC((unint64_t *)&qword_1ED762B30, (uint64_t (*)(uint64_t))MEMORY[0x1E0CA9940], MEMORY[0x1E0CA9930]);
    sub_1C106F85C();
    v22 = (char *)&loc_1C0D36F24 + dword_1C0D370E4[v14 >> 62];
    v24 = v20;
    __asm { BR              X10 }
  }
  if (qword_1ED761458 != -1)
    swift_once();
  v16 = sub_1C106F544();
  sub_1C079E000(v16, (uint64_t)qword_1ED78D818);
  sub_1C07B8C84();
  v17 = sub_1C106F538();
  v18 = sub_1C107039C();
  if (os_log_type_enabled(v17, v18))
  {
    v19 = (uint8_t *)sub_1C0775854();
    v29[0] = sub_1C0775854();
    *(_DWORD *)v19 = 136380675;
    sub_1C07796D8();
    v29[2] = sub_1C0788DAC(v24, v2, v29);
    sub_1C10705AC();
    sub_1C07878F8();
    _os_log_impl(&dword_1C0771000, v17, v18, "Unable to encode identifier into UTF-8. Identifier was %{private}s", v19, 0xCu);
    swift_arrayDestroy();
    sub_1C0776778();
  }

  sub_1C07984A8();
  sub_1C077CEF4();
  sub_1C0776760();
}

uint64_t String.prefixed(with:)()
{
  uint64_t v1;

  sub_1C07B4404();
  sub_1C078CC08();
  sub_1C106FC94();
  return v1;
}

void String.sourceBasedOnPrefix.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  sub_1C0779670();
  v2 = v1;
  v3 = sub_1C078DE84();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  sub_1C0778564();
  v7 = v6 - v5;
  sub_1C07ACF80(&qword_1ED75AE40);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v8);
  sub_1C077864C();
  if (off_1ED749B18 != (_UNKNOWN *)-1)
    swift_once();
  v9 = *((_QWORD *)off_1ED749B10 + 2);
  if (v9)
  {
    v16 = v0;
    v17 = v2;
    v10 = (char *)off_1ED749B10
        + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    v11 = *(_QWORD *)(v4 + 72);
    swift_bridgeObjectRetain_n();
    while (1)
    {
      sub_1C07E05C8((uint64_t)v10, v7, (uint64_t (*)(_QWORD))type metadata accessor for SourceIdPrefix);
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      sub_1C078CC08();
      sub_1C106FD24();
      sub_1C079C594();
      if ((v4 & 1) != 0)
        break;
      sub_1C0D3BDBC(v7);
      v10 += v11;
      if (!--v9)
      {
        sub_1C0775894();
        v12 = 1;
        v2 = v17;
        v0 = v16;
        goto LABEL_10;
      }
    }
    sub_1C0775894();
    v0 = v16;
    sub_1C07E05F4(v7, v16, (uint64_t (*)(_QWORD))type metadata accessor for SourceIdPrefix);
    v12 = 0;
    v2 = v17;
  }
  else
  {
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    v12 = 1;
  }
LABEL_10:
  sub_1C078AF64(v0, v12);
  sub_1C0775894();
  sub_1C0779E60(v0);
  if (v13)
  {
    sub_1C0784B94(v0, &qword_1ED75AE40);
    v14 = 1;
  }
  else
  {
    sub_1C07E05C8(v0 + *(int *)(v3 + 20), v2, (uint64_t (*)(_QWORD))type metadata accessor for Source);
    sub_1C0D3BDBC(v0);
    v14 = 0;
  }
  v15 = sub_1C077674C();
  sub_1C07B2D8C(v2, v14, 1, v15);
  sub_1C0776760();
}

uint64_t String.hasPrefix(_:)()
{
  char v0;

  sub_1C07B4404();
  sub_1C078CC08();
  sub_1C106FD24();
  sub_1C079C594();
  return v0 & 1;
}

uint64_t sub_1C0D37384(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v7[3];
  uint64_t v8;
  uint64_t v9;

  v2 = sub_1C106F868();
  v8 = v2;
  sub_1C0794BAC(&qword_1ED762B28, (uint64_t (*)(uint64_t))MEMORY[0x1E0CA92F8], MEMORY[0x1E0CA92D8]);
  v9 = v3;
  v4 = sub_1C079DFC4(v7);
  v5 = *(_QWORD *)(v2 - 8);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(v5 + 16))(v4, a1, v2);
  sub_1C07A9480(v7, v8);
  sub_1C106A954();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v2);
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v7);
  return sub_1C077CEF4();
}

void sub_1C0D37460()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  _QWORD *v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  __int128 v13[2];
  uint64_t v14;
  __int128 v15;
  _QWORD v16[7];

  sub_1C0779670();
  v16[5] = *MEMORY[0x1E0C80C00];
  v11 = v0;
  v12 = v1;
  *(_QWORD *)&v15 = v0;
  *((_QWORD *)&v15 + 1) = v1;
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C07ACF80(&qword_1ED758F08);
  if (!swift_dynamicCast())
  {
    v14 = 0;
    memset(v13, 0, sizeof(v13));
    sub_1C0784B94((uint64_t)v13, &qword_1ED758F10);
    if ((v12 & 0x1000000000000000) != 0)
      goto LABEL_20;
    if ((v12 & 0x2000000000000000) != 0)
    {
      v16[0] = v11;
      v16[1] = v12 & 0xFFFFFFFFFFFFFFLL;
      v4 = (char *)v16 + (HIBYTE(v12) & 0xF);
      v5 = v16;
    }
    else
    {
      if ((v11 & 0x1000000000000000) != 0)
      {
        v2 = (v12 & 0xFFFFFFFFFFFFFFFLL) + 32;
        v3 = v11 & 0xFFFFFFFFFFFFLL;
      }
      else
      {
        v2 = sub_1C10707F8();
      }
      if (v2)
        v4 = (char *)(v2 + v3);
      else
        v4 = 0;
      v5 = (_QWORD *)v2;
    }
    v6 = MEMORY[0x1C3BA1508](v5, v4);
    v8 = v7;
    if (v7 >> 60 != 15)
    {
      sub_1C07B4998();
      *(_QWORD *)&v13[0] = v6;
      *((_QWORD *)&v13[0] + 1) = v8;
      goto LABEL_19;
    }
    if ((v12 & 0x1000000000000000) != 0)
    {
LABEL_20:
      v9 = sub_1C106FCB8();
    }
    else if ((v12 & 0x2000000000000000) != 0)
    {
      v9 = HIBYTE(v12) & 0xF;
    }
    else
    {
      v9 = v11 & 0xFFFFFFFFFFFFLL;
    }
    *(_QWORD *)&v13[0] = MEMORY[0x1C3BA14E4](v9);
    *((_QWORD *)&v13[0] + 1) = v10;
    MEMORY[0x1E0C80A78](*(_QWORD *)&v13[0]);
    sub_1C0D3C3E4();
    __asm { BR              X12 }
  }
  sub_1C077DD60(v13, (uint64_t)v16);
  sub_1C07A9480(v16, v16[3]);
  sub_1C106A954();
  sub_1C07B4998();
  v13[0] = v15;
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v16);
LABEL_19:
  sub_1C0776760();
}

uint64_t sub_1C0D378E0()
{
  sub_1C077B3B4();
  sub_1C0794BAC((unint64_t *)&qword_1ED762B30, (uint64_t (*)(uint64_t))MEMORY[0x1E0CA9940], MEMORY[0x1E0CA9930]);
  return sub_1C106F844();
}

void sub_1C0D379E8()
{
  uint64_t v0;
  uint64_t v1;

  v0 = sub_1C078DE84();
  sub_1C078FB48(v0);
  sub_1C0799150();
  if (qword_1ED761438 != -1)
    swift_once();
  v1 = sub_1C077674C();
  sub_1C07A7644(v1, (uint64_t)byte_1ED761420);
  sub_1C07BCA88(0x6E63u);
  sub_1C077671C();
}

void SourceIdPrefix.init(string:source:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v6;

  *a4 = a1;
  a4[1] = a2;
  v6 = sub_1C078DE84();
  sub_1C07E05F4(a3, (uint64_t)a4 + *(int *)(v6 + 20), (uint64_t (*)(_QWORD))type metadata accessor for Source);
  sub_1C0778534();
}

void static SourceIdPrefix.cnContact.getter(uint64_t a1@<X8>)
{
  sub_1C0D37B64(&qword_1ED75AE38, (uint64_t)&unk_1ED75AE18, a1);
}

void sub_1C0D37AB8()
{
  uint64_t v0;
  uint64_t v1;

  v0 = sub_1C078DE84();
  sub_1C078FB48(v0);
  sub_1C0799150();
  if (qword_1ED761438 != -1)
    swift_once();
  v1 = sub_1C077674C();
  sub_1C07A7644(v1, (uint64_t)byte_1ED761420);
  sub_1C079C884(0x696E6167724F6E63);
  sub_1C077671C();
}

void static SourceIdPrefix.cnOrganization.getter(uint64_t a1@<X8>)
{
  sub_1C0D37B64(&qword_1ED75ADA0, (uint64_t)&unk_1ED75AD80, a1);
}

void sub_1C0D37B64(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;

  if (*a1 != -1)
    swift_once();
  v5 = sub_1C078DE84();
  v6 = sub_1C079E000(v5, a2);
  sub_1C07E05C8(v6, a3, (uint64_t (*)(_QWORD))type metadata accessor for SourceIdPrefix);
  sub_1C077671C();
}

void sub_1C0D37BBC()
{
  uint64_t v0;
  uint64_t v1;

  v0 = sub_1C078DE84();
  sub_1C078FB48(v0);
  sub_1C0799150();
  if (qword_1ED761438 != -1)
    swift_once();
  v1 = sub_1C077674C();
  sub_1C07A7644(v1, (uint64_t)byte_1ED761420);
  sub_1C07A0340(0x6E63u);
  sub_1C077671C();
}

void static SourceIdPrefix.cnPostalAddress.getter(uint64_t a1@<X8>)
{
  sub_1C0D37B64(&qword_1ED749B88, (uint64_t)&unk_1ED749B68, a1);
}

void sub_1C0D37C50()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = sub_1C078DE84();
  sub_1C078FB48(v0);
  sub_1C0799150();
  if (qword_1ED762380 != -1)
    swift_once();
  v1 = sub_1C077674C();
  sub_1C07A7644(v1, (uint64_t)&unk_1ED762360);
  sub_1C07A4BD0();
  qword_1ED75ADE8 = v2;
  *(_QWORD *)algn_1ED75ADF0 = 0xE800000000000000;
  sub_1C077671C();
}

void static SourceIdPrefix.inPerson.getter(uint64_t a1@<X8>)
{
  sub_1C0D37B64(&qword_1ED75AE00, (uint64_t)&qword_1ED75ADE8, a1);
}

void sub_1C0D37CE8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = sub_1C078DE84();
  sub_1C078FB48(v0);
  sub_1C0799150();
  if (qword_1ED762380 != -1)
    swift_once();
  v1 = sub_1C077674C();
  sub_1C07A7644(v1, (uint64_t)&unk_1ED762360);
  sub_1C07A4BD0();
  qword_1ED75AD60 = v2;
  unk_1ED75AD68 = 0xEB00000000707041;
  sub_1C077671C();
}

void static SourceIdPrefix.inPersonApp.getter(uint64_t a1@<X8>)
{
  sub_1C0D37B64(&qword_1ED75AD78, (uint64_t)&qword_1ED75AD60, a1);
}

void sub_1C0D37D88()
{
  uint64_t v0;
  uint64_t v1;

  v0 = sub_1C078DE84();
  sub_1C078FB48(v0);
  sub_1C0799150();
  if (qword_1ED761418 != -1)
    swift_once();
  v1 = sub_1C077674C();
  sub_1C07A7644(v1, (uint64_t)&unk_1ED761400);
  sub_1C0796B14(0xD000000000000011);
  sub_1C077671C();
}

void static SourceIdPrefix.bmAppleMusicEvent.getter(uint64_t a1@<X8>)
{
  sub_1C0D37B64(&qword_1ED749BD0, (uint64_t)&unk_1ED749BB0, a1);
}

void sub_1C0D37E28()
{
  uint64_t v0;
  uint64_t v1;

  v0 = sub_1C078DE84();
  sub_1C078FB48(v0);
  sub_1C0799150();
  if (qword_1ED761418 != -1)
    swift_once();
  v1 = sub_1C077674C();
  sub_1C07A7644(v1, (uint64_t)&unk_1ED761400);
  sub_1C0796B14(0xD000000000000015);
  sub_1C077671C();
}

void static SourceIdPrefix.bmAppleMusicEventSong.getter(uint64_t a1@<X8>)
{
  sub_1C0D37B64(&qword_1ED749C18, (uint64_t)&unk_1ED749C00, a1);
}

void sub_1C0D37EC8()
{
  uint64_t v0;
  uint64_t v1;

  v0 = sub_1C078DE84();
  sub_1C078FB48(v0);
  sub_1C0799150();
  if (qword_1ED7623C8 != -1)
    swift_once();
  v1 = sub_1C077674C();
  sub_1C07A7644(v1, (uint64_t)&unk_1ED7623B0);
  sub_1C07BCA88(0x6773u);
  sub_1C077671C();
}

void sub_1C0D37F40()
{
  uint64_t v0;
  uint64_t v1;

  v0 = sub_1C078DE84();
  sub_1C078FB48(v0);
  sub_1C0799150();
  if (qword_1ED7623C8 != -1)
    swift_once();
  v1 = sub_1C077674C();
  sub_1C07A7644(v1, (uint64_t)&unk_1ED7623B0);
  sub_1C07A0340(0x6773u);
  sub_1C077671C();
}

void sub_1C0D37FB8()
{
  uint64_t v0;
  uint64_t v1;

  v0 = sub_1C078DE84();
  sub_1C078FB48(v0);
  sub_1C0799150();
  if (qword_1ED7623C8 != -1)
    swift_once();
  v1 = sub_1C077674C();
  sub_1C07A7644(v1, (uint64_t)&unk_1ED7623B0);
  strcpy((char *)qword_1ED78C8D0, "sgContactApp");
  unk_1ED78C8DD = 0;
  unk_1ED78C8DE = -5120;
  sub_1C077671C();
}

void sub_1C0D38048()
{
  uint64_t v0;
  uint64_t v1;

  v0 = sub_1C078DE84();
  sub_1C078FB48(v0);
  sub_1C0799150();
  if (qword_1ED762330 != -1)
    swift_once();
  v1 = sub_1C077674C();
  sub_1C07A7644(v1, (uint64_t)&unk_1ED762318);
  sub_1C0798174(0x6773u);
  sub_1C077671C();
}

void sub_1C0D380C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = sub_1C078DE84();
  sub_1C078FB48(v0);
  sub_1C0799150();
  if (qword_1ED762330 != -1)
    swift_once();
  v1 = sub_1C077674C();
  sub_1C07A7644(v1, (uint64_t)&unk_1ED762318);
  sub_1C07A33F4();
  qword_1ED78C8B8 = v2;
  unk_1ED78C8C0 = 0xEA00000000006E6FLL;
  sub_1C077671C();
}

void sub_1C0D38140()
{
  uint64_t v0;
  uint64_t v1;

  v0 = sub_1C078DE84();
  sub_1C078FB48(v0);
  sub_1C0799150();
  if (qword_1ED762330 != -1)
    swift_once();
  v1 = sub_1C077674C();
  sub_1C07A7644(v1, (uint64_t)&unk_1ED762318);
  sub_1C07A2AF0(0x7363u);
  sub_1C077671C();
}

void sub_1C0D381B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = sub_1C078DE84();
  sub_1C078FB48(v0);
  sub_1C0799150();
  if (qword_1ED761448 != -1)
    swift_once();
  v1 = sub_1C077674C();
  sub_1C07A7644(v1, (uint64_t)&unk_1ED762E88);
  sub_1C07953B0();
  qword_1ED78C390 = v2;
  unk_1ED78C398 = 0xE900000000000074;
  sub_1C077671C();
}

void sub_1C0D38238()
{
  uint64_t v0;
  uint64_t v1;

  v0 = sub_1C078DE84();
  sub_1C078FB48(v0);
  sub_1C0799150();
  if (qword_1ED761448 != -1)
    swift_once();
  v1 = sub_1C077674C();
  sub_1C07A7644(v1, (uint64_t)&unk_1ED762E88);
  sub_1C0796B14(0xD000000000000011);
  sub_1C077671C();
}

void sub_1C0D382BC(uint64_t a1)
{
  sub_1C0D38554(a1, (uint64_t)&unk_1ED78C960, &qword_1ED761448, (uint64_t)&unk_1ED762E88);
}

void sub_1C0D382E0()
{
  uint64_t v0;
  uint64_t v1;

  v0 = sub_1C078DE84();
  sub_1C078FB48(v0);
  sub_1C0799150();
  if (qword_1ED761448 != -1)
    swift_once();
  v1 = sub_1C077674C();
  sub_1C07A7644(v1, (uint64_t)&unk_1ED762E88);
  sub_1C0796B14(0xD000000000000014);
  sub_1C077671C();
}

void sub_1C0D38364()
{
  uint64_t v0;
  uint64_t v1;

  v0 = sub_1C078DE84();
  sub_1C078FB48(v0);
  sub_1C0799150();
  if (qword_1ED761448 != -1)
    swift_once();
  v1 = sub_1C077674C();
  sub_1C07A7644(v1, (uint64_t)&unk_1ED762E88);
  sub_1C0796B14(0xD000000000000016);
  sub_1C077671C();
}

void sub_1C0D383E8()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v0 = type metadata accessor for SourceIdPrefix();
  sub_1C0800A9C(v0, qword_1ED78C918);
  v1 = (_QWORD *)sub_1C079E000(v0, (uint64_t)qword_1ED78C918);
  if (qword_1ED762E80 != -1)
    swift_once();
  v2 = type metadata accessor for Source();
  v3 = sub_1C079E000(v2, (uint64_t)&unk_1ED762268);
  sub_1C07E05C8(v3, (uint64_t)v1 + *(int *)(v0 + 20), (uint64_t (*)(_QWORD))type metadata accessor for Source);
  *v1 = 0x694C657275747566;
  v1[1] = 0xEF746E6576456566;
}

void sub_1C0D384AC()
{
  uint64_t v0;
  uint64_t v1;

  v0 = sub_1C078DE84();
  sub_1C078FB48(v0);
  sub_1C0799150();
  if (qword_1ED762E80 != -1)
    swift_once();
  v1 = sub_1C077674C();
  sub_1C07A7644(v1, (uint64_t)&unk_1ED762268);
  sub_1C0796B14(0xD000000000000017);
  sub_1C077671C();
}

void sub_1C0D38530(uint64_t a1)
{
  sub_1C0D38554(a1, (uint64_t)&unk_1ED78C9A8, &qword_1ED762E80, (uint64_t)&unk_1ED762268);
}

void sub_1C0D38554(uint64_t a1, uint64_t a2, _QWORD *a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v7 = sub_1C078DE84();
  sub_1C078FB48(v7);
  v8 = sub_1C079E000(v7, a2);
  if (*a3 != -1)
    swift_once();
  v9 = sub_1C077674C();
  v10 = sub_1C079E000(v9, a4);
  sub_1C07E05C8(v10, v8 + *(int *)(v7 + 20), (uint64_t (*)(_QWORD))type metadata accessor for Source);
  sub_1C0796B14(0xD000000000000015);
}

void sub_1C0D385FC()
{
  uint64_t v0;
  uint64_t v1;

  v0 = sub_1C078DE84();
  sub_1C078FB48(v0);
  sub_1C0799150();
  if (qword_1ED762E80 != -1)
    swift_once();
  v1 = sub_1C077674C();
  sub_1C07A7644(v1, (uint64_t)&unk_1ED762268);
  sub_1C0796B14(0xD00000000000001CLL);
  sub_1C077671C();
}

void sub_1C0D38680()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = sub_1C078DE84();
  sub_1C078FB48(v0);
  sub_1C0799150();
  if (qword_1ED762310 != -1)
    swift_once();
  v1 = sub_1C077674C();
  sub_1C07A7644(v1, (uint64_t)&unk_1ED7622F8);
  sub_1C079F0C4();
  qword_1ED78C9F0 = v2;
  unk_1ED78C9F8 = 0xE700000000000000;
  sub_1C077671C();
}

void sub_1C0D386FC()
{
  uint64_t v0;
  uint64_t v1;

  v0 = sub_1C078DE84();
  sub_1C078FB48(v0);
  sub_1C0799150();
  if (qword_1ED762310 != -1)
    swift_once();
  v1 = sub_1C077674C();
  sub_1C07A7644(v1, (uint64_t)&unk_1ED7622F8);
  strcpy((char *)&qword_1ED78C8E8, "inGroupPerson");
  *(_WORD *)&algn_1ED78C8F0[6] = -4864;
  sub_1C077671C();
}

void sub_1C0D38790()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = sub_1C078DE84();
  sub_1C078FB48(v0);
  sub_1C0799150();
  if (qword_1ED762310 != -1)
    swift_once();
  v1 = sub_1C077674C();
  sub_1C07A7644(v1, (uint64_t)&unk_1ED7622F8);
  sub_1C0790AAC();
  qword_1ED78C8A0 = v2;
  unk_1ED78C8A8 = 0xEA00000000007070;
  sub_1C077671C();
}

void sub_1C0D38810()
{
  uint64_t v0;
  uint64_t v1;

  v0 = sub_1C078DE84();
  sub_1C078FB48(v0);
  sub_1C0799150();
  if (qword_1ED7623A8 != -1)
    swift_once();
  v1 = sub_1C077674C();
  sub_1C07A7644(v1, (uint64_t)&unk_1ED762388);
  sub_1C07A2AF0(0x6870u);
  sub_1C077671C();
}

void sub_1C0D38888()
{
  uint64_t v0;
  uint64_t v1;

  v0 = sub_1C078DE84();
  sub_1C078FB48(v0);
  sub_1C0799150();
  if (qword_1ED7622C8 != -1)
    swift_once();
  v1 = sub_1C077674C();
  sub_1C07A7644(v1, (uint64_t)&unk_1ED7622B0);
  sub_1C0796B14(0xD00000000000001ELL);
  sub_1C077671C();
}

void sub_1C0D3890C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = sub_1C078DE84();
  sub_1C078FB48(v0);
  sub_1C0799150();
  if (qword_1ED762358 != -1)
    swift_once();
  v1 = sub_1C077674C();
  sub_1C07A7644(v1, (uint64_t)&unk_1ED762338);
  sub_1C078A0CC();
  sub_1C079C884(v2);
  sub_1C077671C();
}

void sub_1C0D38990()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = sub_1C078DE84();
  sub_1C078FB48(v0);
  sub_1C0799150();
  if (qword_1ED762358 != -1)
    swift_once();
  v1 = sub_1C077674C();
  sub_1C07A7644(v1, (uint64_t)&unk_1ED762338);
  sub_1C078A0CC();
  sub_1C079C884(v2);
  sub_1C077671C();
}

void sub_1C0D38A14()
{
  uint64_t v0;
  uint64_t v1;

  v0 = sub_1C078DE84();
  sub_1C078FB48(v0);
  sub_1C0799150();
  if (qword_1ED7622F0 != -1)
    swift_once();
  v1 = sub_1C077674C();
  sub_1C07A7644(v1, (uint64_t)byte_1ED7622D0);
  sub_1C0798174(0x6B65u);
  sub_1C077671C();
}

void sub_1C0D38A8C()
{
  uint64_t v0;
  uint64_t v1;

  v0 = sub_1C078DE84();
  sub_1C078FB48(v0);
  sub_1C0799150();
  if (qword_1ED7622F0 != -1)
    swift_once();
  v1 = sub_1C077674C();
  sub_1C07A7644(v1, (uint64_t)byte_1ED7622D0);
  sub_1C0796B14(0xD000000000000014);
  sub_1C077671C();
}

void sub_1C0D38B10()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = sub_1C078DE84();
  sub_1C078FB48(v0);
  sub_1C0799150();
  if (qword_1ED7622F0 != -1)
    swift_once();
  v1 = sub_1C077674C();
  sub_1C07A7644(v1, (uint64_t)byte_1ED7622D0);
  sub_1C079E894();
  sub_1C0796B14(v2);
  sub_1C077671C();
}

void sub_1C0D38B90()
{
  uint64_t v0;
  uint64_t v1;

  v0 = sub_1C078DE84();
  sub_1C078FB48(v0);
  sub_1C0799150();
  if (qword_1ED762260 != -1)
    swift_once();
  v1 = sub_1C077674C();
  sub_1C07A7644(v1, (uint64_t)&unk_1ED762240);
  sub_1C079C884(0x656C646E7542736CLL);
  sub_1C077671C();
}

void sub_1C0D38C20()
{
  uint64_t v0;
  uint64_t v1;

  v0 = sub_1C078DE84();
  sub_1C078FB48(v0);
  sub_1C0799150();
  if (qword_1ED762260 != -1)
    swift_once();
  v1 = sub_1C077674C();
  sub_1C07A7644(v1, (uint64_t)&unk_1ED762240);
  sub_1C0796B14(0xD000000000000013);
  sub_1C077671C();
}

void sub_1C0D38CA4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = sub_1C078DE84();
  sub_1C078FB48(v0);
  sub_1C0799150();
  if (qword_1ED7622A8 != -1)
    swift_once();
  v1 = sub_1C077674C();
  sub_1C07A7644(v1, (uint64_t)&unk_1ED762288);
  sub_1C079E894();
  sub_1C0796B14(v2);
  sub_1C077671C();
}

void sub_1C0D38D24()
{
  uint64_t v0;
  uint64_t v1;

  v0 = sub_1C078DE84();
  sub_1C078FB48(v0);
  sub_1C0799150();
  if (qword_1ED7622A8 != -1)
    swift_once();
  v1 = sub_1C077674C();
  sub_1C07A7644(v1, (uint64_t)&unk_1ED762288);
  sub_1C0796B14(0xD000000000000018);
  sub_1C077671C();
}

void sub_1C0D38DA8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = sub_1C078DE84();
  sub_1C078FB48(v0);
  sub_1C0799150();
  if (qword_1ED762280 != -1)
    swift_once();
  v1 = sub_1C077674C();
  sub_1C07A7644(v1, (uint64_t)&unk_1ED761548);
  sub_1C079E894();
  sub_1C0796B14(v2);
  sub_1C077671C();
}

void sub_1C0D38E28()
{
  uint64_t v0;
  uint64_t v1;

  v0 = sub_1C078DE84();
  sub_1C078FB48(v0);
  sub_1C0799150();
  if (qword_1ED762280 != -1)
    swift_once();
  v1 = sub_1C077674C();
  sub_1C07A7644(v1, (uint64_t)&unk_1ED761548);
  sub_1C0796B14(0xD00000000000001DLL);
  sub_1C077671C();
}

void sub_1C0D38EAC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v0 = type metadata accessor for SourceIdPrefix();
  sub_1C0800A9C(v0, qword_1ED78C660);
  v1 = sub_1C079E000(v0, (uint64_t)qword_1ED78C660);
  if (qword_1ED761598 != -1)
    swift_once();
  v2 = type metadata accessor for Source();
  v3 = sub_1C079E000(v2, (uint64_t)&unk_1ED761838);
  sub_1C07E05C8(v3, v1 + *(int *)(v0 + 20), (uint64_t (*)(_QWORD))type metadata accessor for Source);
  strcpy((char *)v1, "relationship");
  *(_BYTE *)(v1 + 13) = 0;
  *(_WORD *)(v1 + 14) = -5120;
}

void sub_1C0D38F6C()
{
  uint64_t v0;
  uint64_t v1;

  v0 = sub_1C078DE84();
  sub_1C078FB48(v0);
  sub_1C0799150();
  if (qword_1ED761870 != -1)
    swift_once();
  v1 = sub_1C077674C();
  sub_1C07A7644(v1, (uint64_t)&unk_1ED761850);
  sub_1C079C884(0x6974616C65526770);
  sub_1C077671C();
}

void SourceIdPrefix.string.getter()
{
  sub_1C0785000();
  sub_1C077CEF4();
  sub_1C0778534();
}

void SourceIdPrefix.source.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_1C078DE84();
  sub_1C07E05C8(v1 + *(int *)(v3 + 20), a1, (uint64_t (*)(_QWORD))type metadata accessor for Source);
  sub_1C0778534();
}

uint64_t sub_1C0D3904C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;

  if (qword_1ED761518 != -1)
    swift_once();
  swift_beginAccess();
  if (qword_1ED7627B8 && ((*((void (**)(void))off_1ED7627C0 + 3))(), (v1 = (*(uint64_t (**)(void))(v0 + 8))()) != 0))
  {
    v2 = v1;
    if (qword_1ED762B18 != -1)
      swift_once();
    v3 = sub_1C106F544();
    sub_1C079E000(v3, (uint64_t)qword_1ED762AF8);
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    v4 = sub_1C106F538();
    v5 = sub_1C10703A8();
    if (os_log_type_enabled(v4, v5))
    {
      v6 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v6 = 134217984;
      sub_1C10705AC();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C0771000, v4, v5, "InternalPlugin: SourceIdPrefix: loadInternalSourceIdPrefixes: loaded %ld sources", v6, 0xCu);
      MEMORY[0x1C3BA8270](v6, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease();
    }
  }
  else
  {
    if (qword_1ED762B18 != -1)
      swift_once();
    v7 = sub_1C106F544();
    sub_1C079E000(v7, (uint64_t)qword_1ED762AF8);
    v8 = sub_1C106F538();
    v9 = sub_1C10703A8();
    if (os_log_type_enabled(v8, v9))
    {
      v10 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v10 = 0;
      _os_log_impl(&dword_1C0771000, v8, v9, "InternalPlugin: SourceIdPrefix: loadInternalSourceIdPrefixes: failed to load internal sources", v10, 2u);
      MEMORY[0x1C3BA8270](v10, -1, -1);
    }

    return 0;
  }
  return v2;
}

void *sub_1C0D392A0()
{
  void *result;

  result = (void *)sub_1C0D392BC();
  off_1ED749B10 = result;
  return result;
}

uint64_t sub_1C0D392BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;

  sub_1C07ACF80(&qword_1ED74D548);
  v0 = type metadata accessor for SourceIdPrefix();
  v1 = *(_QWORD *)(v0 - 8);
  v2 = *(_QWORD *)(v1 + 72);
  v3 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1C10B7650;
  v5 = v4 + v3;
  if (qword_1ED75AE38 != -1)
    swift_once();
  v6 = sub_1C079E000(v0, (uint64_t)&unk_1ED75AE18);
  sub_1C07E05C8(v6, v5, (uint64_t (*)(_QWORD))type metadata accessor for SourceIdPrefix);
  if (qword_1ED75ADA0 != -1)
    swift_once();
  v7 = sub_1C079E000(v0, (uint64_t)&unk_1ED75AD80);
  sub_1C07E05C8(v7, v5 + v2, (uint64_t (*)(_QWORD))type metadata accessor for SourceIdPrefix);
  if (qword_1ED749B88 != -1)
    swift_once();
  v8 = sub_1C079E000(v0, (uint64_t)&unk_1ED749B68);
  sub_1C07E05C8(v8, v5 + 2 * v2, (uint64_t (*)(_QWORD))type metadata accessor for SourceIdPrefix);
  if (qword_1ED75AE00 != -1)
    swift_once();
  v9 = sub_1C079E000(v0, (uint64_t)&qword_1ED75ADE8);
  sub_1C07E05C8(v9, v5 + 3 * v2, (uint64_t (*)(_QWORD))type metadata accessor for SourceIdPrefix);
  if (qword_1ED75AD78 != -1)
    swift_once();
  v10 = sub_1C079E000(v0, (uint64_t)&qword_1ED75AD60);
  sub_1C07E05C8(v10, v5 + 4 * v2, (uint64_t (*)(_QWORD))type metadata accessor for SourceIdPrefix);
  if (qword_1ED749BD0 != -1)
    swift_once();
  v11 = sub_1C079E000(v0, (uint64_t)&unk_1ED749BB0);
  sub_1C07E05C8(v11, v5 + 5 * v2, (uint64_t (*)(_QWORD))type metadata accessor for SourceIdPrefix);
  if (qword_1ED749C18 != -1)
    swift_once();
  v12 = sub_1C079E000(v0, (uint64_t)&unk_1ED749C00);
  sub_1C07E05C8(v12, v5 + 6 * v2, (uint64_t (*)(_QWORD))type metadata accessor for SourceIdPrefix);
  v13 = v5 - v2;
  if (qword_1ED749CA0 != -1)
    swift_once();
  v14 = sub_1C079E000(v0, (uint64_t)&unk_1ED78CA38);
  sub_1C07E05C8(v14, v5 - v2 + 8 * v2, (uint64_t (*)(_QWORD))type metadata accessor for SourceIdPrefix);
  if (qword_1ED749BA8 != -1)
    swift_once();
  v15 = sub_1C079E000(v0, (uint64_t)&unk_1ED78C930);
  sub_1C07E05C8(v15, v5 + 8 * v2, (uint64_t (*)(_QWORD))type metadata accessor for SourceIdPrefix);
  if (qword_1ED749B40 != -1)
    swift_once();
  v16 = sub_1C079E000(v0, (uint64_t)qword_1ED78C8D0);
  sub_1C07E05C8(v16, v5 + 9 * v2, (uint64_t (*)(_QWORD))type metadata accessor for SourceIdPrefix);
  if (qword_1ED749C78 != -1)
    swift_once();
  v17 = sub_1C079E000(v0, (uint64_t)&unk_1ED78CA08);
  sub_1C07E05C8(v17, v5 + 10 * v2, (uint64_t (*)(_QWORD))type metadata accessor for SourceIdPrefix);
  if (qword_1ED749B30 != -1)
    swift_once();
  v18 = sub_1C079E000(v0, (uint64_t)&qword_1ED78C8B8);
  sub_1C07E05C8(v18, v5 + 11 * v2, (uint64_t (*)(_QWORD))type metadata accessor for SourceIdPrefix);
  if (qword_1ED749C88 != -1)
    swift_once();
  v19 = sub_1C079E000(v0, (uint64_t)&unk_1ED78CA20);
  sub_1C07E05C8(v19, v5 + 12 * v2, (uint64_t (*)(_QWORD))type metadata accessor for SourceIdPrefix);
  if (qword_1ED749C90 != -1)
    swift_once();
  v20 = sub_1C079E000(v0, (uint64_t)&qword_1ED78C390);
  sub_1C07E05C8(v20, v5 + 13 * v2, (uint64_t (*)(_QWORD))type metadata accessor for SourceIdPrefix);
  if (qword_1ED749BD8 != -1)
    swift_once();
  v21 = sub_1C079E000(v0, (uint64_t)&unk_1ED78C360);
  sub_1C07E05C8(v21, v5 + 14 * v2, (uint64_t (*)(_QWORD))type metadata accessor for SourceIdPrefix);
  if (qword_1ED749C20 != -1)
    swift_once();
  v22 = sub_1C079E000(v0, (uint64_t)&unk_1ED78C960);
  sub_1C07E05C8(v22, v13 + 16 * v2, (uint64_t (*)(_QWORD))type metadata accessor for SourceIdPrefix);
  if (qword_1ED749BF8 != -1)
    swift_once();
  v23 = sub_1C079E000(v0, (uint64_t)&unk_1ED78C378);
  sub_1C07E05C8(v23, v5 + 16 * v2, (uint64_t (*)(_QWORD))type metadata accessor for SourceIdPrefix);
  if (qword_1ED749C30 != -1)
    swift_once();
  v24 = sub_1C079E000(v0, (uint64_t)&unk_1ED78C978);
  sub_1C07E05C8(v24, v5 + 17 * v2, (uint64_t (*)(_QWORD))type metadata accessor for SourceIdPrefix);
  if (qword_1ED749B98 != -1)
    swift_once();
  v25 = sub_1C079E000(v0, (uint64_t)qword_1ED78C918);
  sub_1C07E05C8(v25, v5 + 18 * v2, (uint64_t (*)(_QWORD))type metadata accessor for SourceIdPrefix);
  if (qword_1ED749C40 != -1)
    swift_once();
  v26 = sub_1C079E000(v0, (uint64_t)&unk_1ED78C990);
  sub_1C07E05C8(v26, v5 + 19 * v2, (uint64_t (*)(_QWORD))type metadata accessor for SourceIdPrefix);
  if (qword_1ED749C48 != -1)
    swift_once();
  v27 = sub_1C079E000(v0, (uint64_t)&unk_1ED78C9A8);
  sub_1C07E05C8(v27, v5 + 20 * v2, (uint64_t (*)(_QWORD))type metadata accessor for SourceIdPrefix);
  if (qword_1ED749C50 != -1)
    swift_once();
  v28 = sub_1C079E000(v0, (uint64_t)&unk_1ED78C9C0);
  sub_1C07E05C8(v28, v5 + 21 * v2, (uint64_t (*)(_QWORD))type metadata accessor for SourceIdPrefix);
  if (qword_1ED749C68 != -1)
    swift_once();
  v29 = sub_1C079E000(v0, (uint64_t)&qword_1ED78C9F0);
  sub_1C07E05C8(v29, v5 + 22 * v2, (uint64_t (*)(_QWORD))type metadata accessor for SourceIdPrefix);
  if (qword_1ED749B28 != -1)
    swift_once();
  v30 = sub_1C079E000(v0, (uint64_t)&qword_1ED78C8A0);
  sub_1C07E05C8(v30, v5 + 23 * v2, (uint64_t (*)(_QWORD))type metadata accessor for SourceIdPrefix);
  if (qword_1ED749B50 != -1)
    swift_once();
  v31 = sub_1C079E000(v0, (uint64_t)&qword_1ED78C8E8);
  sub_1C07E05C8(v31, v5 + 24 * v2, (uint64_t (*)(_QWORD))type metadata accessor for SourceIdPrefix);
  if (qword_1ED75AE10 != -1)
    swift_once();
  v32 = sub_1C079E000(v0, (uint64_t)&unk_1ED78D6E8);
  sub_1C07E05C8(v32, v5 + 25 * v2, (uint64_t (*)(_QWORD))type metadata accessor for SourceIdPrefix);
  if (qword_1ED756B28 != -1)
    swift_once();
  v33 = sub_1C079E000(v0, (uint64_t)&unk_1ED78D4E0);
  sub_1C07E05C8(v33, v5 + 26 * v2, (uint64_t (*)(_QWORD))type metadata accessor for SourceIdPrefix);
  if (qword_1ED749B60 != -1)
    swift_once();
  v34 = sub_1C079E000(v0, (uint64_t)&unk_1ED78C900);
  sub_1C07E05C8(v34, v5 + 27 * v2, (uint64_t (*)(_QWORD))type metadata accessor for SourceIdPrefix);
  if (qword_1ED75ADA8 != -1)
    swift_once();
  v35 = sub_1C079E000(v0, (uint64_t)&unk_1ED78D3E8);
  sub_1C07E05C8(v35, v5 + 28 * v2, (uint64_t (*)(_QWORD))type metadata accessor for SourceIdPrefix);
  if (qword_1ED75F4D0 != -1)
    swift_once();
  v36 = sub_1C079E000(v0, (uint64_t)&unk_1ED78D7D0);
  sub_1C07E05C8(v36, v5 + 29 * v2, (uint64_t (*)(_QWORD))type metadata accessor for SourceIdPrefix);
  if (qword_1ED75ADD8 != -1)
    swift_once();
  v37 = sub_1C079E000(v0, (uint64_t)&unk_1ED78D448);
  sub_1C07E05C8(v37, v5 + 30 * v2, (uint64_t (*)(_QWORD))type metadata accessor for SourceIdPrefix);
  if (qword_1ED75ADC0 != -1)
    swift_once();
  v38 = sub_1C079E000(v0, (uint64_t)&unk_1ED78D418);
  sub_1C07E05C8(v38, v13 + 32 * v2, (uint64_t (*)(_QWORD))type metadata accessor for SourceIdPrefix);
  if (qword_1ED75ADB8 != -1)
    swift_once();
  v39 = sub_1C079E000(v0, (uint64_t)&unk_1ED78D400);
  sub_1C07E05C8(v39, v5 + 32 * v2, (uint64_t (*)(_QWORD))type metadata accessor for SourceIdPrefix);
  if (qword_1ED75ADD0 != -1)
    swift_once();
  v40 = sub_1C079E000(v0, (uint64_t)&unk_1ED78D430);
  sub_1C07E05C8(v40, v5 + 33 * v2, (uint64_t (*)(_QWORD))type metadata accessor for SourceIdPrefix);
  if (qword_1ED75F4C8 != -1)
    swift_once();
  v41 = sub_1C079E000(v0, (uint64_t)&unk_1ED78D7B8);
  sub_1C07E05C8(v41, v5 + 34 * v2, (uint64_t (*)(_QWORD))type metadata accessor for SourceIdPrefix);
  if (qword_1ED75ADE0 != -1)
    swift_once();
  v42 = sub_1C079E000(v0, (uint64_t)&unk_1ED78D460);
  sub_1C07E05C8(v42, v5 + 35 * v2, (uint64_t (*)(_QWORD))type metadata accessor for SourceIdPrefix);
  if (qword_1ED749BE8 != -1)
    swift_once();
  v43 = sub_1C079E000(v0, (uint64_t)&unk_1ED78C948);
  sub_1C07E05C8(v43, v5 + 36 * v2, (uint64_t (*)(_QWORD))type metadata accessor for SourceIdPrefix);
  if (qword_1ED749C60 != -1)
    swift_once();
  v44 = sub_1C079E000(v0, (uint64_t)&unk_1ED78C9D8);
  sub_1C07E05C8(v44, v5 + 37 * v2, (uint64_t (*)(_QWORD))type metadata accessor for SourceIdPrefix);
  if (qword_1ED747BC8 != -1)
    swift_once();
  v45 = sub_1C079E000(v0, (uint64_t)qword_1ED78C660);
  sub_1C07E05C8(v45, v5 + 38 * v2, (uint64_t (*)(_QWORD))type metadata accessor for SourceIdPrefix);
  v46 = v5 + 39 * v2;
  if (qword_1ED747BD0 != -1)
    swift_once();
  v47 = sub_1C079E000(v0, (uint64_t)&unk_1ED78C678);
  sub_1C07E05C8(v47, v46, (uint64_t (*)(_QWORD))type metadata accessor for SourceIdPrefix);
  if (sub_1C0D3904C())
    sub_1C0BDAFF8();
  return v4;
}

uint64_t static SourceIdPrefix.allSourceIdPrefixes.getter()
{
  if (off_1ED749B18 != (_UNKNOWN *)-1)
    swift_once();
  return _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
}

void SourceIdPrefix.init(rawValue:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  BOOL v17;
  uint64_t v19;
  BOOL v20;
  BOOL v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  BOOL v27;
  BOOL v28;
  uint64_t v29;
  BOOL v30;
  uint64_t v31;
  BOOL v32;
  uint64_t v33;
  BOOL v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  BOOL v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  BOOL v43;
  uint64_t v44;
  BOOL v45;
  BOOL v46;
  uint64_t v47;
  BOOL v48;
  uint64_t v49;
  BOOL v50;
  BOOL v51;
  BOOL v52;
  uint64_t v53;
  BOOL v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  BOOL v60;
  BOOL v61;
  uint64_t v62;
  uint64_t v63;

  sub_1C0779670();
  v2 = v1;
  v4 = v3;
  v6 = v5;
  sub_1C07ACF80(&qword_1ED75AE40);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v7);
  sub_1C07785B8();
  v8 = sub_1C078DE84();
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v9);
  sub_1C0778564();
  v12 = v11 - v10;
  v13 = v4 == 0x6361746E6F436E63 && v2 == 0xE900000000000074;
  if (v13 || (sub_1C07A146C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    if (qword_1ED75AE38 != -1)
      swift_once();
    v14 = (uint64_t *)&unk_1ED75AE18;
LABEL_9:
    v15 = sub_1C079E000(v8, (uint64_t)v14);
    sub_1C07E05C8(v15, v12, (uint64_t (*)(_QWORD))type metadata accessor for SourceIdPrefix);
    goto LABEL_10;
  }
  v17 = v4 == 0x696E6167724F6E63 && v2 == 0xEE006E6F6974617ALL;
  if (v17 || (sub_1C07A146C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    if (qword_1ED75ADA0 != -1)
      swift_once();
    v14 = (uint64_t *)&unk_1ED75AD80;
    goto LABEL_9;
  }
  if (v4 == 0x6C6174736F506E63 && v2 == 0xEF73736572646441)
  {
    sub_1C07AAA98();
LABEL_27:
    swift_bridgeObjectRelease();
    if (qword_1ED749B88 != -1)
      swift_once();
    v14 = (uint64_t *)&unk_1ED749B68;
    goto LABEL_9;
  }
  if ((sub_1C07A146C() & 1) != 0)
    goto LABEL_27;
  sub_1C07A4BD0();
  v20 = v4 == v19 && v2 == 0xE800000000000000;
  if (v20 || (sub_1C07BD10C(), (sub_1C07A146C() & 1) != 0))
  {
    swift_bridgeObjectRelease();
    if (qword_1ED75AE00 != -1)
      swift_once();
    v14 = &qword_1ED75ADE8;
    goto LABEL_9;
  }
  v21 = v4 == 0x6E6F737265506E69 && v2 == 0xEB00000000707041;
  if (v21 || (sub_1C07BD10C(), (sub_1C07A146C() & 1) != 0))
  {
    swift_bridgeObjectRelease();
    if (qword_1ED75AD78 != -1)
      swift_once();
    v14 = &qword_1ED75AD60;
    goto LABEL_9;
  }
  sub_1C079E894();
  v23 = v22 - 1;
  if (v4 == v22 - 1 && (sub_1C07882BC((uint64_t)"bmAppleMusicEvent"), v13) || (v63 = v23, (sub_1C07A146C() & 1) != 0))
  {
    swift_bridgeObjectRelease();
    if (qword_1ED749BD0 != -1)
      swift_once();
    v14 = (uint64_t *)&unk_1ED749BB0;
    goto LABEL_9;
  }
  sub_1C079E894();
  v25 = v24 + 3;
  if (v4 == v25 && v2 == 0x80000001C1109C80 || (v62 = v25, (sub_1C07A146C() & 1) != 0))
  {
    swift_bridgeObjectRelease();
    if (qword_1ED749C18 != -1)
      swift_once();
    v14 = (uint64_t *)&unk_1ED749C00;
    goto LABEL_9;
  }
  if (v4 == 0x6C6174736F506773 && v2 == 0xEF73736572646441)
  {
    sub_1C07AAA98();
LABEL_65:
    swift_bridgeObjectRelease();
    if (qword_1ED749BA8 != -1)
      swift_once();
    v14 = (uint64_t *)&unk_1ED78C930;
    goto LABEL_9;
  }
  if ((sub_1C07A146C() & 1) != 0)
    goto LABEL_65;
  v27 = v4 == 0x6361746E6F436773 && v2 == 0xE900000000000074;
  if (v27 || (sub_1C07A146C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    if (qword_1ED749B40 != -1)
      swift_once();
    v14 = qword_1ED78C8D0;
    goto LABEL_9;
  }
  v28 = v4 == 0x746E6576456773 && v2 == 0xE700000000000000;
  if (v28 || (sub_1C07A146C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    if (qword_1ED749C78 != -1)
      swift_once();
    v14 = (uint64_t *)&unk_1ED78CA08;
    goto LABEL_9;
  }
  sub_1C07A33F4();
  v30 = v4 == v29 && v2 == 0xEA00000000006E6FLL;
  if (v30 || (sub_1C07A146C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    if (qword_1ED749B30 != -1)
      swift_once();
    v14 = &qword_1ED78C8B8;
    goto LABEL_9;
  }
  sub_1C07A4BD0();
  v32 = v4 == v31 + 1274 && v2 == 0xE800000000000000;
  if (v32 || (sub_1C07A146C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    if (qword_1ED749C88 != -1)
      swift_once();
    v14 = (uint64_t *)&unk_1ED78CA20;
    goto LABEL_9;
  }
  sub_1C07953B0();
  v34 = v4 == v33 && v2 == 0xE900000000000074;
  if (v34 || (sub_1C07A146C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    if (qword_1ED749C90 != -1)
      swift_once();
    v14 = &qword_1ED78C390;
    goto LABEL_9;
  }
  if (v4 == v63 && (sub_1C07882BC((uint64_t)"lifeEventActivity"), v13) || (sub_1C07A146C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    if (qword_1ED749BD8 != -1)
      swift_once();
    v14 = (uint64_t *)&unk_1ED78C360;
    goto LABEL_9;
  }
  sub_1C079E894();
  v36 = v35 + 2;
  if (v4 == v35 + 2 && (sub_1C07882BC((uint64_t)"lifeEventParticipant"), v13) || (sub_1C07A146C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    if (qword_1ED749BF8 != -1)
      swift_once();
    v14 = (uint64_t *)&unk_1ED78C378;
    goto LABEL_9;
  }
  if (v4 == v62 && (sub_1C07882BC((uint64_t)"lifeEventActivityType"), v13) || (sub_1C07A146C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    if (qword_1ED749C20 != -1)
      swift_once();
    v14 = (uint64_t *)&unk_1ED78C960;
    goto LABEL_9;
  }
  sub_1C079E894();
  if (v4 == v37 + 4 && (sub_1C079AF80(), v13) || (sub_1C07A146C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    if (qword_1ED749C30 != -1)
      swift_once();
    v14 = (uint64_t *)&unk_1ED78C978;
    goto LABEL_9;
  }
  v38 = v4 == 0x694C657275747566 && v2 == 0xEF746E6576456566;
  if (v38 || (sub_1C07A146C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    if (qword_1ED749B98 != -1)
      swift_once();
    v14 = qword_1ED78C918;
    goto LABEL_9;
  }
  sub_1C079E894();
  if (v4 == v39 + 5 && (sub_1C079AF80(), v13) || (sub_1C07A146C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    if (qword_1ED749C40 != -1)
      swift_once();
    v14 = (uint64_t *)&unk_1ED78C990;
    goto LABEL_9;
  }
  sub_1C079E894();
  if (v4 == v40 + 9 && (sub_1C079AF80(), v13) || (sub_1C07A146C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    if (qword_1ED749C48 != -1)
      swift_once();
    v14 = (uint64_t *)&unk_1ED78C9A8;
    goto LABEL_9;
  }
  sub_1C079E894();
  if (v4 == v41 + 10 && (sub_1C079AF80(), v13) || (sub_1C07A146C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    if (qword_1ED749C50 != -1)
      swift_once();
    v14 = (uint64_t *)&unk_1ED78C9C0;
    goto LABEL_9;
  }
  sub_1C079F0C4();
  v43 = v4 == v42 && v2 == 0xE700000000000000;
  if (v43 || (sub_1C0791FC4(), (sub_1C07A146C() & 1) != 0))
  {
    swift_bridgeObjectRelease();
    if (qword_1ED749C68 != -1)
      swift_once();
    v14 = &qword_1ED78C9F0;
    goto LABEL_9;
  }
  sub_1C0790AAC();
  v45 = v4 == v44 && v2 == 0xEA00000000007070;
  if (v45 || (sub_1C0791FC4(), (sub_1C07A146C() & 1) != 0))
  {
    swift_bridgeObjectRelease();
    if (qword_1ED749B28 != -1)
      swift_once();
    v14 = &qword_1ED78C8A0;
    goto LABEL_9;
  }
  v46 = v4 == 0x5070756F72476E69 && v2 == 0xED00006E6F737265;
  if (v46 || (sub_1C0791FC4(), (sub_1C07A146C() & 1) != 0))
  {
    swift_bridgeObjectRelease();
    if (qword_1ED749B50 != -1)
      swift_once();
    v14 = &qword_1ED78C8E8;
    goto LABEL_9;
  }
  sub_1C07A4BD0();
  v48 = v4 == v47 - 1529 && v2 == 0xE800000000000000;
  if (v48 || (sub_1C07A146C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    if (qword_1ED75AE10 != -1)
      swift_once();
    v14 = (uint64_t *)&unk_1ED78D6E8;
    goto LABEL_9;
  }
  sub_1C079E894();
  if (v4 == v49 + 12 && (sub_1C079AF80(), v13) || (sub_1C07A146C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    if (qword_1ED756B28 != -1)
      swift_once();
    v14 = (uint64_t *)&unk_1ED78D4E0;
    goto LABEL_9;
  }
  v50 = v4 == 0x796C696D61466166 && v2 == 0xEE007265626D654DLL;
  if (v50 || (sub_1C077C588(), (sub_1C07A146C() & 1) != 0))
  {
    swift_bridgeObjectRelease();
    if (qword_1ED749B60 != -1)
      swift_once();
    v14 = (uint64_t *)&unk_1ED78C900;
    goto LABEL_9;
  }
  v51 = v4 == 0x796C696D61466166 && v2 == 0xEE00656C63726943;
  if (v51 || (sub_1C077C588(), (sub_1C07A146C() & 1) != 0))
  {
    swift_bridgeObjectRelease();
    if (qword_1ED75ADA8 != -1)
      swift_once();
    v14 = (uint64_t *)&unk_1ED78D3E8;
    goto LABEL_9;
  }
  v52 = v4 == 0x746E6576456B65 && v2 == 0xE700000000000000;
  if (v52 || (sub_1C07A146C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    if (qword_1ED75F4D0 != -1)
      swift_once();
    v14 = (uint64_t *)&unk_1ED78D7D0;
    goto LABEL_9;
  }
  if (v4 == v36 && (sub_1C07882BC((uint64_t)"ekStructuredLocation"), v13) || (sub_1C07A146C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    if (qword_1ED75ADD8 != -1)
      swift_once();
    v14 = (uint64_t *)&unk_1ED78D448;
    goto LABEL_9;
  }
  sub_1C07A1FBC();
  if (v13 && (sub_1C07882BC(v53), v13) || (sub_1C07A146C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    if (qword_1ED75ADC0 != -1)
      swift_once();
    v14 = (uint64_t *)&unk_1ED78D418;
    goto LABEL_9;
  }
  v54 = v4 == 0x656C646E7542736CLL && v2 == 0xEE0064726F636552;
  if (v54 || (sub_1C07A146C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    if (qword_1ED75ADB8 != -1)
      swift_once();
    v14 = (uint64_t *)&unk_1ED78D400;
    goto LABEL_9;
  }
  sub_1C079E894();
  if (v4 == v55 + 1 && (sub_1C079AF80(), v13) || (sub_1C07A146C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    if (qword_1ED75ADD0 != -1)
      swift_once();
    v14 = (uint64_t *)&unk_1ED78D430;
    goto LABEL_9;
  }
  sub_1C07A1FBC();
  if (v13 && (sub_1C07882BC(v56), v13) || (sub_1C07A146C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    if (qword_1ED75F4C8 != -1)
      swift_once();
    v14 = (uint64_t *)&unk_1ED78D7B8;
    goto LABEL_9;
  }
  sub_1C079E894();
  if (v4 == v57 + 6 && (sub_1C079AF80(), v13) || (sub_1C07A146C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    if (qword_1ED75ADE0 != -1)
      swift_once();
    v14 = (uint64_t *)&unk_1ED78D460;
    goto LABEL_9;
  }
  sub_1C07A1FBC();
  if (v13 && (sub_1C07882BC(v58), v13) || (sub_1C07A146C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    if (qword_1ED749BE8 != -1)
      swift_once();
    v14 = (uint64_t *)&unk_1ED78C948;
    goto LABEL_9;
  }
  sub_1C079E894();
  if (v4 == v59 + 11 && (sub_1C079AF80(), v13) || (sub_1C07A146C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    if (qword_1ED749C60 != -1)
      swift_once();
    v14 = (uint64_t *)&unk_1ED78C9D8;
    goto LABEL_9;
  }
  v60 = v4 == 0x6E6F6974616C6572 && v2 == 0xEC00000070696873;
  if (v60 || (sub_1C07A146C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    if (qword_1ED747BC8 != -1)
      swift_once();
    v14 = qword_1ED78C660;
    goto LABEL_9;
  }
  v61 = v4 == 0x6974616C65526770 && v2 == 0xEE00706968736E6FLL;
  if (v61 || (sub_1C07A146C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    if (qword_1ED747BD0 != -1)
      swift_once();
    v14 = (uint64_t *)&unk_1ED78C678;
    goto LABEL_9;
  }
  sub_1C0D3B3B8();
  swift_bridgeObjectRelease();
  sub_1C0779E60(v0);
  if (v13)
  {
    sub_1C0784B94(v0, &qword_1ED75AE40);
    v16 = 1;
    goto LABEL_11;
  }
  sub_1C07E05F4(v0, v12, (uint64_t (*)(_QWORD))type metadata accessor for SourceIdPrefix);
LABEL_10:
  sub_1C07E05F4(v12, v6, (uint64_t (*)(_QWORD))type metadata accessor for SourceIdPrefix);
  v16 = 0;
LABEL_11:
  sub_1C078AF64(v6, v16);
  sub_1C0776760();
}

void sub_1C0D3B3B8()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  uint64_t v19;

  sub_1C0779670();
  v2 = v1;
  v4 = v3;
  v6 = v5;
  sub_1C07ACF80(&qword_1ED75AE40);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v7);
  sub_1C07785B8();
  if (qword_1ED761518 != -1)
    swift_once();
  swift_beginAccess();
  if (qword_1ED7627B8)
  {
    (*((void (**)(void))off_1ED7627C0 + 3))();
    (*(void (**)(uint64_t, unint64_t))(v8 + 24))(v4, v2);
    v9 = sub_1C078DE84();
    sub_1C0779E60(v0);
    if (!v10)
    {
      sub_1C07E05F4(v0, v6, (uint64_t (*)(_QWORD))type metadata accessor for SourceIdPrefix);
      v11 = v6;
      v12 = 0;
      v13 = v9;
      goto LABEL_12;
    }
  }
  else
  {
    v14 = type metadata accessor for SourceIdPrefix();
    sub_1C07B2D8C(v0, 1, 1, v14);
  }
  sub_1C0784B94(v0, &qword_1ED75AE40);
  if (qword_1ED762B18 != -1)
    swift_once();
  v15 = sub_1C106F544();
  sub_1C079E000(v15, (uint64_t)qword_1ED762AF8);
  sub_1C07B8C84();
  v16 = sub_1C106F538();
  v17 = sub_1C10703A8();
  if (os_log_type_enabled(v16, v17))
  {
    v18 = (uint8_t *)sub_1C0775854();
    v19 = sub_1C0775854();
    *(_DWORD *)v18 = 136315138;
    sub_1C07796D8();
    sub_1C0788DAC(v4, v2, &v19);
    sub_1C10705AC();
    sub_1C07878F8();
    _os_log_impl(&dword_1C0771000, v16, v17, "InternalPlugin: SourceIdPrefix: resolveInternalSourceIdPrefix: failed to resolve source for %s", v18, 0xCu);
    swift_arrayDestroy();
    sub_1C0776778();
  }

  sub_1C07984A8();
  v13 = sub_1C078DE84();
  v11 = v6;
  v12 = 1;
LABEL_12:
  sub_1C07B2D8C(v11, v12, 1, v13);
  sub_1C0776760();
}

void sub_1C0D3B628()
{
  SourceIdPrefix.init(rawValue:)();
}

void sub_1C0D3B634(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  SourceIdPrefix.string.getter();
  *a1 = v2;
  a1[1] = v3;
  sub_1C0778534();
}

uint64_t sub_1C0D3B654()
{
  sub_1C0794BAC(&qword_1EF648448, (uint64_t (*)(uint64_t))type metadata accessor for SourceIdPrefix, (uint64_t)&protocol conformance descriptor for SourceIdPrefix);
  return sub_1C106FE8C();
}

uint64_t sub_1C0D3B6C8()
{
  sub_1C0794BAC(&qword_1EF648448, (uint64_t (*)(uint64_t))type metadata accessor for SourceIdPrefix, (uint64_t)&protocol conformance descriptor for SourceIdPrefix);
  return sub_1C106FE50();
}

void SourceIdPrefix.description.getter()
{
  sub_1C0785000();
  sub_1C077CEF4();
  sub_1C0778534();
}

void String.sourceIdPrefix.getter(uint64_t a1@<X8>)
{
  void *v2;

  v2 = (void *)MEMORY[0x1C3BA79F4]();
  sub_1C0D3B7A0(a1);
  objc_autoreleasePoolPop(v2);
}

void sub_1C0D3B7A0(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2 = sub_1C106A7E0();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  sub_1C0778564();
  v6 = v5 - v4;
  sub_1C07B1280();
  if ((sub_1C1070624() & 1) != 0)
  {
    sub_1C0794BAC(&qword_1ED75E990, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAE4B8], MEMORY[0x1E0CAE4D0]);
    sub_1C07ACF80(&qword_1ED760138);
    sub_1C0D3C7D8();
    sub_1C1070660();
    v7 = sub_1C10705C4();
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v6, v2);
    if (*(_QWORD *)(v7 + 16))
    {
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      swift_bridgeObjectRelease();
      SourceIdPrefix.init(rawValue:)();
      return;
    }
    swift_bridgeObjectRelease();
  }
  v8 = type metadata accessor for SourceIdPrefix();
  sub_1C07B2D8C(a1, 1, 1, v8);
}

_QWORD *sub_1C0D3B944(uint64_t a1, _QWORD *(*a2)(uint64_t *__return_ptr, uint64_t, uint64_t), uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *result;
  uint64_t v6;

  result = a2(&v6, a1, a1 + a4);
  if (!v4)
    return (_QWORD *)v6;
  return result;
}

uint64_t sub_1C0D3B988(uint64_t a1)
{
  if (a1 < 16)
    return 0;
  sub_1C1070774();
  return 0;
}

void sub_1C0D3B9CC(void (*a1)(void))
{
  a1();
  sub_1C0778534();
}

void *sub_1C0D3B9E8(char *__src, size_t __n, char *__dst)
{
  void *result;

  if ((__n & 0x8000000000000000) == 0 && (&__dst[__n] <= __src || &__src[__n] <= __dst))
    return memcpy(__dst, __src, __n);
  result = (void *)sub_1C10709F0();
  __break(1u);
  return result;
}

char *sub_1C0D3BAAC(char *result, int64_t a2, char a3, uint64_t a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *(_QWORD *)(a4 + 24);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *(_QWORD *)(a4 + 16);
  if (v7 <= v8)
    v9 = *(_QWORD *)(a4 + 16);
  else
    v9 = v7;
  if (v9)
  {
    sub_1C07ACF80(&qword_1ED762CC0);
    v10 = (char *)swift_allocObject();
    v11 = j__malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v12 = v10 + 32;
  v13 = (char *)(a4 + 32);
  if ((v5 & 1) != 0)
  {
    sub_1C0D3BC44(v13, v8, v12);
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_1C0D3BB80(v13, v8, v12);
  }
  swift_bridgeObjectRelease();
  return v10;
}

void *sub_1C0D3BB80(char *__src, size_t __n, char *__dst)
{
  void *result;

  if ((__n & 0x8000000000000000) == 0 && (&__dst[__n] <= __src || &__src[__n] <= __dst))
    return memcpy(__dst, __src, __n);
  result = (void *)sub_1C10709F0();
  __break(1u);
  return result;
}

char *sub_1C0D3BC44(char *__src, size_t __len, char *__dst)
{
  if ((__len & 0x8000000000000000) != 0)
  {
    __src = (char *)sub_1C10709F0();
    __break(1u);
  }
  else if (__dst != __src || &__src[__len] <= __dst)
  {
    return (char *)memmove(__dst, __src, __len);
  }
  return __src;
}

uint64_t sub_1C0D3BCC4(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = sub_1C106A84C();
  if (!result || (result = sub_1C106A870(), !__OFSUB__(a1, result)))
  {
    if (!__OFSUB__(a2, a1))
    {
      sub_1C106A864();
      sub_1C077B3B4();
      sub_1C0794BAC((unint64_t *)&qword_1ED762B30, (uint64_t (*)(uint64_t))MEMORY[0x1E0CA9940], MEMORY[0x1E0CA9930]);
      return sub_1C106F844();
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t type metadata accessor for SourceIdPrefix()
{
  uint64_t result;

  result = qword_1ED75F4D8;
  if (!qword_1ED75F4D8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1C0D3BDBC(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for SourceIdPrefix();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1C0D3BDF8()
{
  sub_1C0794BAC(&qword_1EF648440, (uint64_t (*)(uint64_t))type metadata accessor for SourceIdPrefix, (uint64_t)&protocol conformance descriptor for SourceIdPrefix);
}

uint64_t *initializeBufferWithCopyOfBuffer for SourceIdPrefix(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  void (*v15)(char *, char *, uint64_t);
  uint64_t v16;

  v3 = a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v16 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v16 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    v6 = *(int *)(a3 + 20);
    v7 = (uint64_t *)((char *)a1 + v6);
    v8 = (char *)a2 + v6;
    v9 = *(uint64_t *)((char *)a2 + v6 + 8);
    *v7 = *(uint64_t *)((char *)a2 + v6);
    v7[1] = v9;
    v7[2] = *(uint64_t *)((char *)a2 + v6 + 16);
    v10 = type metadata accessor for Source();
    v11 = *(int *)(v10 + 24);
    v12 = (char *)v7 + v11;
    v13 = &v8[v11];
    v14 = sub_1C106D1F8();
    v15 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16);
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    v15(v12, v13, v14);
    *((_BYTE *)v7 + *(int *)(v10 + 28)) = v8[*(int *)(v10 + 28)];
  }
  return v3;
}

uint64_t destroy for SourceIdPrefix(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 20);
  swift_bridgeObjectRelease();
  v5 = v4 + *(int *)(type metadata accessor for Source() + 24);
  v6 = sub_1C106D1F8();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
}

_QWORD *initializeWithCopy for SourceIdPrefix(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  void (*v14)(char *, char *, uint64_t);

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = *(int *)(a3 + 20);
  v6 = (_QWORD *)((char *)a1 + v5);
  v7 = (char *)a2 + v5;
  v8 = *(_QWORD *)((char *)a2 + v5 + 8);
  *v6 = *(_QWORD *)((char *)a2 + v5);
  v6[1] = v8;
  v6[2] = *(_QWORD *)((char *)a2 + v5 + 16);
  v9 = type metadata accessor for Source();
  v10 = *(int *)(v9 + 24);
  v11 = (char *)v6 + v10;
  v12 = &v7[v10];
  v13 = sub_1C106D1F8();
  v14 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16);
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  v14(v11, v12, v13);
  *((_BYTE *)v6 + *(int *)(v9 + 28)) = v7[*(int *)(v9 + 28)];
  return a1;
}

_QWORD *assignWithCopy for SourceIdPrefix(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  _QWORD *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;

  *a1 = *a2;
  a1[1] = a2[1];
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 20);
  v7 = (_QWORD *)((char *)a1 + v6);
  v8 = (char *)a2 + v6;
  *v7 = *(_QWORD *)((char *)a2 + v6);
  v7[1] = *(_QWORD *)((char *)a2 + v6 + 8);
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  swift_bridgeObjectRelease();
  v7[2] = *((_QWORD *)v8 + 2);
  v9 = type metadata accessor for Source();
  v10 = *(int *)(v9 + 24);
  v11 = (char *)v7 + v10;
  v12 = &v8[v10];
  v13 = sub_1C106D1F8();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 24))(v11, v12, v13);
  *((_BYTE *)v7 + *(int *)(v9 + 28)) = v8[*(int *)(v9 + 28)];
  return a1;
}

_OWORD *initializeWithTake for SourceIdPrefix(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  *(_OWORD *)v5 = *(_OWORD *)((char *)a2 + v4);
  *((_QWORD *)v5 + 2) = *(_QWORD *)((char *)a2 + v4 + 16);
  v7 = type metadata accessor for Source();
  v8 = *(int *)(v7 + 24);
  v9 = &v5[v8];
  v10 = &v6[v8];
  v11 = sub_1C106D1F8();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
  v5[*(int *)(v7 + 28)] = v6[*(int *)(v7 + 28)];
  return a1;
}

_QWORD *assignWithTake for SourceIdPrefix(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)((char *)a1 + v7);
  v9 = (char *)a2 + v7;
  v10 = *(_QWORD *)((char *)a2 + v7 + 8);
  *v8 = *(_QWORD *)((char *)a2 + v7);
  v8[1] = v10;
  swift_bridgeObjectRelease();
  v8[2] = *((_QWORD *)v9 + 2);
  v11 = type metadata accessor for Source();
  v12 = *(int *)(v11 + 24);
  v13 = (char *)v8 + v12;
  v14 = &v9[v12];
  v15 = sub_1C106D1F8();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 40))(v13, v14, v15);
  *((_BYTE *)v8 + *(int *)(v11 + 28)) = v9[*(int *)(v11 + 28)];
  return a1;
}

uint64_t getEnumTagSinglePayload for SourceIdPrefix()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1C0D3C24C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_1C077674C();
    return sub_1C07B2D80(a1 + *(int *)(a3 + 20), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for SourceIdPrefix()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_1C0D3C2C8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v7;

  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(a1 + 8) = (a2 - 1);
    sub_1C077671C();
  }
  else
  {
    v7 = sub_1C077674C();
    sub_1C07B2D8C(a1 + *(int *)(a4 + 20), a2, a2, v7);
  }
}

uint64_t sub_1C0D3C328()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for Source();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

_QWORD *sub_1C0D3C39C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD v5[3];
  _QWORD v6[2];

  v6[0] = a3;
  v6[1] = a4;
  v5[2] = v6;
  return sub_1C0D3C778((_QWORD *(*)(uint64_t *__return_ptr, uint64_t, uint64_t))sub_1C0D3C954, (uint64_t)v5, a1, a2);
}

void sub_1C0D3C3E4()
{
  __asm { BR              X11 }
}

_QWORD *sub_1C0D3C444@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *(*v3)(uint64_t *__return_ptr, uint64_t, uint64_t);
  uint64_t v4;
  _QWORD *result;
  unint64_t v6;
  uint64_t v7;
  unsigned int v8;
  unsigned __int8 v9;
  unsigned __int8 v10;
  unsigned __int8 v11;

  v7 = v4;
  LOWORD(v8) = a1;
  BYTE2(v8) = BYTE2(a1);
  HIBYTE(v8) = BYTE3(a1);
  v9 = BYTE4(a1);
  v10 = BYTE5(a1);
  v11 = BYTE6(a1);
  result = sub_1C0D3B944((uint64_t)&v7, v3, v2, BYTE6(a1));
  v6 = v8 | ((unint64_t)v9 << 32) | ((unint64_t)v10 << 40) | ((unint64_t)v11 << 48);
  *v1 = v7;
  v1[1] = v6;
  return result;
}

uint64_t sub_1C0D3C684@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  if (!result)
    goto LABEL_4;
  v4 = a2 - result;
  if (a2 == result)
  {
    result = 0;
LABEL_4:
    v5 = 0xC000000000000000;
    goto LABEL_5;
  }
  if (v4 <= 14)
  {
    result = sub_1C106AB34();
    v5 = v7 & 0xFFFFFFFFFFFFFFLL;
  }
  else if ((unint64_t)v4 >= 0x7FFFFFFF)
  {
    result = MEMORY[0x1C3BA146C]();
    v5 = v8 | 0x8000000000000000;
  }
  else
  {
    result = MEMORY[0x1C3BA1490]();
    v5 = v6 | 0x4000000000000000;
  }
LABEL_5:
  *a3 = result;
  a3[1] = v5;
  return result;
}

uint64_t sub_1C0D3C6F8(uint64_t result)
{
  char v1;

  if (result)
  {
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    result = sub_1C1070780();
    if ((v1 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      return 0;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

_QWORD *sub_1C0D3C778(_QWORD *(*a1)(uint64_t *__return_ptr, uint64_t, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  _QWORD *result;
  uint64_t v9;

  if (a3)
  {
    v6 = a4 - a3;
    v7 = a3;
  }
  else
  {
    v7 = 0;
    v6 = 0;
  }
  result = a1(&v9, v7, v6);
  if (!v4)
    return (_QWORD *)v9;
  return result;
}

unint64_t sub_1C0D3C7D8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED760140;
  if (!qword_1ED760140)
  {
    v1 = sub_1C07D4BEC(&qword_1ED760138);
    result = MEMORY[0x1C3BA8174](MEMORY[0x1E0DEAF38], v1);
    atomic_store(result, (unint64_t *)&qword_1ED760140);
  }
  return result;
}

char *sub_1C0D3C81C(uint64_t a1, uint64_t a2, _QWORD *(*a3)(uint64_t *__return_ptr, char *, char *))
{
  uint64_t v3;
  char *result;
  char *v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  result = (char *)sub_1C106A84C();
  if (!result)
    goto LABEL_12;
  v8 = result;
  result = (char *)sub_1C106A870();
  v9 = a1 - (_QWORD)result;
  if (__OFSUB__(a1, result))
  {
    __break(1u);
    goto LABEL_11;
  }
  v10 = __OFSUB__(a2, a1);
  v11 = a2 - a1;
  if (v10)
  {
LABEL_11:
    __break(1u);
LABEL_12:
    __break(1u);
    return result;
  }
  v12 = sub_1C106A864();
  if (v12 >= v11)
    v13 = v11;
  else
    v13 = v12;
  result = (char *)a3(&v14, &v8[v9], &v8[v9 + v13]);
  if (!v3)
    return (char *)v14;
  return result;
}

_QWORD *sub_1C0D3C8C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v4;
  _QWORD *result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  result = sub_1C0D3C39C(a1, a2, *a3, a3[1]);
  if (!v4)
  {
    *a4 = result;
    a4[1] = v7;
    a4[2] = v8;
    a4[3] = v9;
  }
  return result;
}

_QWORD *sub_1C0D3C8FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v3;

  return sub_1C0D3C8C8(a1, a2, *(uint64_t **)(v3 + 16), a3);
}

uint64_t sub_1C0D3C914@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  result = sub_1C0D3C6F8(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
    a2[2] = v6;
    a2[3] = v7;
  }
  return result;
}

uint64_t sub_1C0D3C954@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1C0D3C914(a1, a2);
}

void SourceIngestor.stageName.getter(_BYTE *a1@<X8>)
{
  *a1 = 9;
}

uint64_t sub_1C0D3C984()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t (*v2)(void);
  uint64_t v4;

  v1 = (_QWORD *)sub_1C077FDD8();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = (uint64_t (*)(void))sub_1C0780C4C(v1, (uint64_t)sub_1C09D5FE0, v4);
  return sub_1C077CF28(v2);
}

uint64_t sub_1C0D3C9BC()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = v0;
  return swift_task_switch();
}

uint64_t sub_1C0D3C9D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v11;
  uint64_t v12;

  sub_1C078FB50();
  sub_1C079AF90();
  type metadata accessor for EKEventSourceIngestor();
  v1 = sub_1C079A15C();
  sub_1C07A4BE4(v1, v2, v3, v4, v5, v6, v7, v8, v11, v12, SWORD2(v12), SBYTE6(v12), SHIBYTE(v12));
  sub_1C07785A8();
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 24) = v9;
  sub_1C077E3F4(v9, (uint64_t)sub_1C0D3DC68);
  return sub_1C0919FB8();
}

uint64_t sub_1C0D3CA34()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = v0;
  return swift_task_switch();
}

uint64_t sub_1C0D3CA4C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;

  sub_1C078FB50();
  sub_1C079AF90();
  type metadata accessor for INGroupSourceIngestor();
  v1 = sub_1C079A15C();
  sub_1C07A4BE4(v1, v2, v3, v4, v5, v6, v7, v8, v10, v11, SWORD2(v11), SBYTE6(v11), SHIBYTE(v11));
  sub_1C07785A8();
  sub_1C079B9F4();
  sub_1C0B62648();
  return sub_1C0788080(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1C0D3CAA0()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = v0;
  return swift_task_switch();
}

uint64_t sub_1C0D3CAB8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v11;
  uint64_t v12;

  sub_1C078FB50();
  sub_1C079AF90();
  type metadata accessor for SGEventSourceIngestor();
  v1 = sub_1C079A15C();
  sub_1C07A4BE4(v1, v2, v3, v4, v5, v6, v7, v8, v11, v12, SWORD2(v12), SBYTE6(v12), SHIBYTE(v12));
  sub_1C07785A8();
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 24) = v9;
  sub_1C077E3F4(v9, (uint64_t)sub_1C0D3DC68);
  return sub_1C0D116A0();
}

uint64_t sub_1C0D3CB18()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = v0;
  return swift_task_switch();
}

uint64_t sub_1C0D3CB30()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v11;
  uint64_t v12;

  sub_1C078FB50();
  sub_1C079AF90();
  type metadata accessor for FAFamilySourceIngestor();
  v1 = sub_1C079A15C();
  sub_1C07A4BE4(v1, v2, v3, v4, v5, v6, v7, v8, v11, v12, SWORD2(v12), SBYTE6(v12), SHIBYTE(v12));
  sub_1C07785A8();
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 24) = v9;
  sub_1C077E3F4(v9, (uint64_t)sub_1C0D3DC68);
  return sub_1C0A14DAC();
}

uint64_t sub_1C0D3CB90()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = v0;
  return swift_task_switch();
}

uint64_t sub_1C0D3CBA8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;

  sub_1C078FB50();
  sub_1C079AF90();
  type metadata accessor for INPersonSourceIngestor();
  v1 = sub_1C079A15C();
  sub_1C07A4BE4(v1, v2, v3, v4, v5, v6, v7, v8, v10, v11, SWORD2(v11), SBYTE6(v11), SHIBYTE(v11));
  sub_1C07785A8();
  sub_1C079B9F4();
  sub_1C0B65968();
  return sub_1C0788080(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1C0D3CBFC()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = v0;
  return swift_task_switch();
}

uint64_t sub_1C0D3CC14()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v11;
  uint64_t v12;

  sub_1C078FB50();
  sub_1C079AF90();
  type metadata accessor for PHPersonSourceIngestor();
  v1 = sub_1C079A15C();
  sub_1C07A4BE4(v1, v2, v3, v4, v5, v6, v7, v8, v11, v12, SWORD2(v12), SBYTE6(v12), SHIBYTE(v12));
  sub_1C07785A8();
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 24) = v9;
  sub_1C077E3F4(v9, (uint64_t)sub_1C0D3DC68);
  return sub_1C0CB9048();
}

uint64_t sub_1C0D3CC74()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = v0;
  return swift_task_switch();
}

uint64_t sub_1C0D3CC8C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v12;

  v1 = sub_1C07A0364();
  type metadata accessor for LifeEventSourceIngestor(v1);
  sub_1C078A314();
  v2 = sub_1C07882CC();
  sub_1C079E8CC(v2, v3, v4, v5, v6, v7, v8, v9, v12, SWORD2(v12), SBYTE6(v12), SHIBYTE(v12));
  sub_1C077AF1C();
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 24) = v10;
  sub_1C077E3F4(v10, (uint64_t)sub_1C0D3DC68);
  return sub_1C0BD6108();
}

uint64_t sub_1C0D3CD04()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = v0;
  return swift_task_switch();
}

uint64_t sub_1C0D3CD1C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v11;

  sub_1C07A0364();
  type metadata accessor for SGContactSourceIngestor();
  sub_1C078A314();
  v1 = sub_1C07882CC();
  sub_1C079E8CC(v1, v2, v3, v4, v5, v6, v7, v8, v11, SWORD2(v11), SBYTE6(v11), SHIBYTE(v11));
  sub_1C077AF1C();
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 24) = v9;
  sub_1C077E3F4(v9, (uint64_t)sub_1C0D3DC68);
  return sub_1C0D0DD98();
}

uint64_t sub_1C0D3CD94()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = v0;
  return swift_task_switch();
}

uint64_t sub_1C0D3CDAC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v12;
  uint64_t v13;

  sub_1C078FB50();
  v1 = sub_1C079AF90();
  type metadata accessor for CNContactFullSourceIngestor(v1);
  v2 = sub_1C079A15C();
  sub_1C07A4BE4(v2, v3, v4, v5, v6, v7, v8, v9, v12, v13, SWORD2(v13), SBYTE6(v13), SHIBYTE(v13));
  sub_1C07785A8();
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 24) = v10;
  sub_1C077E3F4(v10, (uint64_t)sub_1C09E0BD4);
  return sub_1C08BDE6C();
}

uint64_t sub_1C0D3CE0C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = v0;
  return swift_task_switch();
}

uint64_t sub_1C0D3CE24()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v12;

  v1 = sub_1C07A0364();
  type metadata accessor for CNContactDeltaSourceIngestor(v1);
  sub_1C078A314();
  v2 = sub_1C07882CC();
  sub_1C079E8CC(v2, v3, v4, v5, v6, v7, v8, v9, v12, SWORD2(v12), SBYTE6(v12), SHIBYTE(v12));
  sub_1C077AF1C();
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 24) = v10;
  sub_1C077E3F4(v10, (uint64_t)sub_1C0D3DC68);
  return sub_1C08BB6E8();
}

uint64_t sub_1C0D3CE9C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 32) = v0;
  return swift_task_switch();
}

uint64_t sub_1C0D3CEB4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  _QWORD *v11;
  uint64_t v13;
  _BYTE v14[7];
  char v15;

  v1 = *(_QWORD *)(v0 + 32);
  sub_1C078A314();
  v15 = *(_BYTE *)(v1 + *(int *)(type metadata accessor for LSBundleRecordSourceIngestor() + 24));
  v2 = swift_retain();
  sub_1C07A4BE4(v2, v3, v4, v5, v6, v7, v8, v9, v13, *(int *)v14, *(__int16 *)&v14[4], v14[6], v15);
  sub_1C07785A8();
  v10 = objc_msgSend((id)objc_opt_self(), sel_enumeratorWithOptions_, 0);
  *(_QWORD *)(v0 + 16) = 0;
  *(_QWORD *)(v0 + 24) = 0;
  *(_BYTE *)(v0 + 40) = 0;
  v11 = (_QWORD *)swift_task_alloc();
  v11[2] = v10;
  v11[3] = v1;
  v11[4] = v0 + 16;
  v11[5] = v0 + 24;
  v11[6] = v0 + 40;
  GraphStore.tripleInsertingTransaction(transactionBody:)();
  swift_task_dealloc();
  sub_1C106AC6C();
  sub_1C088C3F4();
  sub_1C0793DEC();

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1C0D3CFD8()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = v0;
  return swift_task_switch();
}

uint64_t sub_1C0D3CFF0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v12;

  v1 = sub_1C07A0364();
  type metadata accessor for LifeEventDeltaSourceIngestor(v1);
  sub_1C078A314();
  v2 = sub_1C07882CC();
  sub_1C079E8CC(v2, v3, v4, v5, v6, v7, v8, v9, v12, SWORD2(v12), SBYTE6(v12), SHIBYTE(v12));
  sub_1C077AF1C();
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 24) = v10;
  sub_1C077E3F4(v10, (uint64_t)sub_1C0D3DC68);
  return sub_1C0BD4728();
}

uint64_t sub_1C0D3D068()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = v0;
  return swift_task_switch();
}

uint64_t sub_1C0D3D080()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v11;

  sub_1C07A0364();
  type metadata accessor for RelationshipFullSourceIngestor();
  sub_1C078A314();
  v1 = sub_1C07882CC();
  sub_1C079E8CC(v1, v2, v3, v4, v5, v6, v7, v8, v11, SWORD2(v11), SBYTE6(v11), SHIBYTE(v11));
  sub_1C077AF1C();
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 24) = v9;
  sub_1C077E3F4(v9, (uint64_t)sub_1C0D3DC68);
  return sub_1C0CDFAB0();
}

uint64_t sub_1C0D3D0F8()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = v0;
  return swift_task_switch();
}

uint64_t sub_1C0D3D110()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v15;
  _BYTE v16[7];
  char v17;

  sub_1C078FB50();
  v2 = sub_1C079AF90();
  v17 = *(_BYTE *)(v0 + *(int *)(type metadata accessor for BMAppleMusicEventSourceIngestor(v2) + 24));
  v3 = swift_retain();
  sub_1C07A4BE4(v3, v4, v5, v6, v7, v8, v9, v10, v15, *(int *)v16, *(__int16 *)&v16[4], v16[6], v17);
  sub_1C07785A8();
  sub_1C079B9F4();
  sub_1C0895AC0(v11, v12, v13);
  return sub_1C0788080(*(uint64_t (**)(void))(v1 + 8));
}

uint64_t sub_1C0D3D180()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = v0;
  return swift_task_switch();
}

uint64_t sub_1C0D3D198()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v11;
  uint64_t v12;

  sub_1C078FB50();
  sub_1C079AF90();
  type metadata accessor for FavoriteSportsTeamSourceIngestor();
  v1 = sub_1C079A15C();
  sub_1C07A4BE4(v1, v2, v3, v4, v5, v6, v7, v8, v11, v12, SWORD2(v12), SBYTE6(v12), SHIBYTE(v12));
  sub_1C07785A8();
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 24) = v9;
  sub_1C077E3F4(v9, (uint64_t)sub_1C0D3DC68);
  return sub_1C0A181D0();
}

uint64_t sub_1C0D3D1F8()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = v0;
  return swift_task_switch();
}

uint64_t sub_1C0D3D210()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v11;
  uint64_t v12;

  sub_1C078FB50();
  sub_1C079AF90();
  type metadata accessor for HKEmergencyContactSourceIngestor();
  v1 = sub_1C079A15C();
  sub_1C07A4BE4(v1, v2, v3, v4, v5, v6, v7, v8, v11, v12, SWORD2(v12), SBYTE6(v12), SHIBYTE(v12));
  sub_1C07785A8();
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 24) = v9;
  sub_1C077E3F4(v9, (uint64_t)sub_1C0D3DC68);
  return sub_1C0ACED30();
}

uint64_t sub_1C0D3D270()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = v0;
  return swift_task_switch();
}

uint64_t sub_1C0D3D288()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v11;

  sub_1C07A0364();
  type metadata accessor for PGRelationshipFullSourceIngestor();
  sub_1C078A314();
  v1 = sub_1C07882CC();
  sub_1C079E8CC(v1, v2, v3, v4, v5, v6, v7, v8, v11, SWORD2(v11), SBYTE6(v11), SHIBYTE(v11));
  sub_1C077AF1C();
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 24) = v9;
  sub_1C077E3F4(v9, (uint64_t)sub_1C0D3DC68);
  return sub_1C0CA53EC();
}

uint64_t sub_1C0D3D300()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = v0;
  return swift_task_switch();
}

uint64_t sub_1C0D3D318()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v11;

  sub_1C07A0364();
  type metadata accessor for FutureLifeEventDeltaSourceIngestor();
  sub_1C078A314();
  v1 = sub_1C07882CC();
  sub_1C079E8CC(v1, v2, v3, v4, v5, v6, v7, v8, v11, SWORD2(v11), SBYTE6(v11), SHIBYTE(v11));
  sub_1C077AF1C();
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 24) = v9;
  sub_1C077E3F4(v9, (uint64_t)sub_1C0D3DC68);
  return sub_1C0A5DE4C();
}

uint64_t sub_1C0D3D390()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = v0;
  return swift_task_switch();
}

uint64_t sub_1C0D3D3A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE v4[9];

  v1 = *(_QWORD *)(v0 + 16);
  v2 = type metadata accessor for BMAppleMusicEventDeltaSourceIngestor(0);
  sub_1C078A314();
  v4[0] = *(_BYTE *)(v1 + *(int *)(v2 + 24));
  swift_retain();
  sub_1C0AADF0C(v4);
  swift_release();
  sub_1C079B9F4();
  sub_1C0895A5C();
  return sub_1C0788080(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1C0D3D430()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = v0;
  return swift_task_switch();
}

uint64_t sub_1C0D3D448()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;

  sub_1C078FB50();
  sub_1C079AF90();
  type metadata accessor for IPEntityTaggingPersonInferenceSourceIngestor();
  v1 = sub_1C079A15C();
  sub_1C07A4BE4(v1, v2, v3, v4, v5, v6, v7, v8, v10, v11, SWORD2(v11), SBYTE6(v11), SHIBYTE(v11));
  sub_1C07785A8();
  sub_1C079B9F4();
  sub_1C0BB0344();
  return sub_1C0788080(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t SourceIngestor.execute()(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  v3[5] = sub_1C078A314();
  v3[6] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1C0D3D4F8()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t (*v4)(_QWORD, _QWORD);
  char v5;

  v1 = v0[6];
  sub_1C078B41C();
  swift_retain();
  sub_1C08937CC(v1);
  sub_1C078B41C();
  sub_1C0AADF0C(&v5);
  swift_release();
  v2 = (_QWORD *)sub_1C077FDD8();
  v0[7] = v2;
  *v2 = v0;
  v2[1] = sub_1C0D3D5B8;
  return v4(v0[2], v0[3]);
}

uint64_t sub_1C0D3D5B8()
{
  uint64_t v0;

  sub_1C07862EC();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1C0D3D5FC()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t (*v2)(void);
  uint64_t v4;

  v1 = (_QWORD *)sub_1C077FDD8();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = (uint64_t (*)(void))sub_1C0780C4C(v1, (uint64_t)sub_1C09D5FE0, v4);
  return sub_1C077CF28(v2);
}

uint64_t sub_1C0D3D634()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t (*v2)(void);
  uint64_t v4;

  v1 = (_QWORD *)sub_1C077FDD8();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = (uint64_t (*)(void))sub_1C0780C4C(v1, (uint64_t)sub_1C09D5FE0, v4);
  return sub_1C077CF28(v2);
}

uint64_t sub_1C0D3D66C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t (*v2)(void);
  uint64_t v4;

  v1 = (_QWORD *)sub_1C077FDD8();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = (uint64_t (*)(void))sub_1C0780C4C(v1, (uint64_t)sub_1C09D5FE0, v4);
  return sub_1C077CF28(v2);
}

uint64_t sub_1C0D3D6A4()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t (*v2)(void);
  uint64_t v4;

  v1 = (_QWORD *)sub_1C077FDD8();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = (uint64_t (*)(void))sub_1C0780C4C(v1, (uint64_t)sub_1C09D35E4, v4);
  return sub_1C077CF28(v2);
}

uint64_t sub_1C0D3D6DC()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t (*v2)(void);
  uint64_t v4;

  v1 = (_QWORD *)sub_1C077FDD8();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = (uint64_t (*)(void))sub_1C0780C4C(v1, (uint64_t)sub_1C09D5FE0, v4);
  return sub_1C077CF28(v2);
}

uint64_t sub_1C0D3D714()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t (*v2)(void);
  uint64_t v4;

  v1 = (_QWORD *)sub_1C077FDD8();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = (uint64_t (*)(void))sub_1C0780C4C(v1, (uint64_t)sub_1C09D5FE0, v4);
  return sub_1C077CF28(v2);
}

uint64_t sub_1C0D3D74C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t (*v2)(void);
  uint64_t v4;

  v1 = (_QWORD *)sub_1C077FDD8();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = (uint64_t (*)(void))sub_1C0780C4C(v1, (uint64_t)sub_1C09D5FE0, v4);
  return sub_1C077CF28(v2);
}

uint64_t sub_1C0D3D784()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t (*v2)(void);
  uint64_t v4;

  v1 = (_QWORD *)sub_1C077FDD8();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = (uint64_t (*)(void))sub_1C0780C4C(v1, (uint64_t)sub_1C09D5FE0, v4);
  return sub_1C077CF28(v2);
}

uint64_t sub_1C0D3D7BC()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t (*v2)(void);
  uint64_t v4;

  v1 = (_QWORD *)sub_1C077FDD8();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = (uint64_t (*)(void))sub_1C0780C4C(v1, (uint64_t)sub_1C09D5FE0, v4);
  return sub_1C077CF28(v2);
}

uint64_t sub_1C0D3D7F4()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t (*v2)(void);
  uint64_t v4;

  v1 = (_QWORD *)sub_1C077FDD8();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = (uint64_t (*)(void))sub_1C0780C4C(v1, (uint64_t)sub_1C09D5FE0, v4);
  return sub_1C077CF28(v2);
}

uint64_t sub_1C0D3D82C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t (*v2)(void);
  uint64_t v4;

  v1 = (_QWORD *)sub_1C077FDD8();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = (uint64_t (*)(void))sub_1C0780C4C(v1, (uint64_t)sub_1C09D5FE0, v4);
  return sub_1C077CF28(v2);
}

uint64_t sub_1C0D3D864()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t (*v2)(void);
  uint64_t v4;

  v1 = (_QWORD *)sub_1C077FDD8();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = (uint64_t (*)(void))sub_1C0780C4C(v1, (uint64_t)sub_1C09D5FE0, v4);
  return sub_1C077CF28(v2);
}

uint64_t sub_1C0D3D89C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t (*v2)(void);
  uint64_t v4;

  v1 = (_QWORD *)sub_1C077FDD8();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = (uint64_t (*)(void))sub_1C0780C4C(v1, (uint64_t)sub_1C09D5FE0, v4);
  return sub_1C077CF28(v2);
}

uint64_t sub_1C0D3D8D4()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t (*v2)(void);
  uint64_t v4;

  v1 = (_QWORD *)sub_1C077FDD8();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = (uint64_t (*)(void))sub_1C0780C4C(v1, (uint64_t)sub_1C09D5FE0, v4);
  return sub_1C077CF28(v2);
}

uint64_t sub_1C0D3D90C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t (*v2)(void);
  uint64_t v4;

  v1 = (_QWORD *)sub_1C077FDD8();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = (uint64_t (*)(void))sub_1C0780C4C(v1, (uint64_t)sub_1C09D5FE0, v4);
  return sub_1C077CF28(v2);
}

uint64_t sub_1C0D3D944()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t (*v2)(void);
  uint64_t v4;

  v1 = (_QWORD *)sub_1C077FDD8();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = (uint64_t (*)(void))sub_1C0780C4C(v1, (uint64_t)sub_1C09D5FE0, v4);
  return sub_1C077CF28(v2);
}

uint64_t sub_1C0D3D97C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t (*v2)(void);
  uint64_t v4;

  v1 = (_QWORD *)sub_1C077FDD8();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = (uint64_t (*)(void))sub_1C0780C4C(v1, (uint64_t)sub_1C09D5FE0, v4);
  return sub_1C077CF28(v2);
}

uint64_t sub_1C0D3D9B4()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t (*v2)(void);
  uint64_t v4;

  v1 = (_QWORD *)sub_1C077FDD8();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = (uint64_t (*)(void))sub_1C0780C4C(v1, (uint64_t)sub_1C09D5FE0, v4);
  return sub_1C077CF28(v2);
}

uint64_t sub_1C0D3D9EC()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t (*v2)(void);
  uint64_t v4;

  v1 = (_QWORD *)sub_1C077FDD8();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = (uint64_t (*)(void))sub_1C0780C4C(v1, (uint64_t)sub_1C09D5FE0, v4);
  return sub_1C077CF28(v2);
}

unint64_t SourceIngestionError.description.getter()
{
  _BYTE *v0;

  if (*v0)
    return 0xD000000000000023;
  else
    return 0xD00000000000001DLL;
}

BOOL static SourceIngestionError.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t SourceIngestionError.hash(into:)()
{
  return sub_1C1070E04();
}

uint64_t SourceIngestionError.hashValue.getter()
{
  sub_1C1070DF8();
  sub_1C1070E04();
  return sub_1C1070E4C();
}

uint64_t SourceIngestor.geoMapService.getter()
{
  return 0;
}

unint64_t sub_1C0D3DB04()
{
  unint64_t result;

  result = qword_1EF648458;
  if (!qword_1EF648458)
  {
    result = MEMORY[0x1C3BA8174](&protocol conformance descriptor for SourceIngestionError, &type metadata for SourceIngestionError);
    atomic_store(result, (unint64_t *)&qword_1EF648458);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for SourceIngestionError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1C0D3DB8C + 4 * byte_1C10B77C5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1C0D3DBC0 + 4 * byte_1C10B77C0[v4]))();
}

uint64_t sub_1C0D3DBC0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C0D3DBC8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C0D3DBD0);
  return result;
}

uint64_t sub_1C0D3DBDC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C0D3DBE4);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1C0D3DBE8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C0D3DBF0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SourceIngestionError()
{
  return &type metadata for SourceIngestionError;
}

uint64_t dispatch thunk of SourceIngestor.ingestSource()(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t, uint64_t);

  v5 = (_QWORD *)sub_1C077FDD8();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1C09D35E4;
  return v7(a1, a2);
}

uint64_t SourceProviderError.description.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  int v8;
  unint64_t v9;
  unint64_t v11;
  unint64_t v12;

  v2 = v1;
  type metadata accessor for Source();
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v3);
  sub_1C077B6C0();
  type metadata accessor for SourceProviderError();
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0D3DE40(v2, (uint64_t)v6);
  v7 = sub_1C07ACF80(&qword_1EF6485A8);
  v8 = sub_1C07B2D80((uint64_t)v6, 2, v7);
  if (v8)
  {
    if (v8 == 1)
      return 0x206E776F6E6B6E55;
    else
      return 0xD000000000000047;
  }
  else
  {
    sub_1C0845A08((uint64_t)v6, v0);
    v11 = 0;
    v12 = 0xE000000000000000;
    sub_1C1070774();
    swift_bridgeObjectRelease();
    v11 = 0xD000000000000021;
    v12 = 0x80000001C110A0D0;
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    sub_1C106FC94();
    swift_bridgeObjectRelease();
    sub_1C106FC94();
    sub_1C106FC94();
    swift_bridgeObjectRelease();
    v9 = v11;
    sub_1C08CBC78(v0);
  }
  return v9;
}

uint64_t type metadata accessor for SourceProviderError()
{
  uint64_t result;

  result = qword_1EF648628;
  if (!qword_1EF648628)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1C0D3DE40(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SourceProviderError();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t static SourceProviderError.errorDomain.getter()
{
  return 0xD00000000000002CLL;
}

uint64_t SourceProviderError.errorCode.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;

  type metadata accessor for SourceProviderError();
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v2);
  sub_1C077B6C0();
  sub_1C0D3DE40(v1, v0);
  v3 = sub_1C07ACF80(&qword_1EF6485A8);
  v4 = sub_1C07B2D80(v0, 2, v3);
  if (v4)
    return v4 != 1;
  swift_bridgeObjectRelease();
  sub_1C08CBC78(v0);
  return 2;
}

uint64_t SourceProviderError.errorUserInfo.getter()
{
  uint64_t inited;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_1C07ACF80(&qword_1ED761310);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C1079220;
  *(_QWORD *)(inited + 32) = sub_1C106FB14();
  *(_QWORD *)(inited + 40) = v1;
  v2 = SourceProviderError.description.getter();
  *(_QWORD *)(inited + 72) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(inited + 48) = v2;
  *(_QWORD *)(inited + 56) = v3;
  return sub_1C106F97C();
}

uint64_t sub_1C0D3DFC8()
{
  sub_1C0D3E980(&qword_1EF648638, (uint64_t)&protocol conformance descriptor for SourceProviderError);
  return sub_1C1070D68();
}

uint64_t sub_1C0D3E000()
{
  sub_1C0D3E980(&qword_1EF648638, (uint64_t)&protocol conformance descriptor for SourceProviderError);
  return sub_1C1070D5C();
}

unint64_t sub_1C0D3E03C()
{
  static SourceProviderError.errorDomain.getter();
  return 0xD00000000000002CLL;
}

uint64_t sub_1C0D3E060()
{
  return sub_1C0D3E980(&qword_1EF6485B0, (uint64_t)&protocol conformance descriptor for SourceProviderError);
}

uint64_t *initializeBufferWithCopyOfBuffer for SourceProviderError(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  void (*v15)(char *, char *, uint64_t);
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    v7 = sub_1C07ACF80(&qword_1EF6485A8);
    if (sub_1C07B2D80((uint64_t)a2, 2, v7))
    {
      memcpy(a1, a2, *(_QWORD *)(v5 + 64));
    }
    else
    {
      v9 = a2[1];
      *a1 = *a2;
      a1[1] = v9;
      a1[2] = a2[2];
      v10 = type metadata accessor for Source();
      v11 = *(int *)(v10 + 24);
      v12 = (char *)a1 + v11;
      v13 = (char *)a2 + v11;
      v14 = sub_1C106D1F8();
      v15 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16);
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      v15(v12, v13, v14);
      *((_BYTE *)a1 + *(int *)(v10 + 28)) = *((_BYTE *)a2 + *(int *)(v10 + 28));
      v16 = *(int *)(v7 + 48);
      v17 = (uint64_t *)((char *)a1 + v16);
      v18 = (uint64_t *)((char *)a2 + v16);
      v19 = v18[1];
      *v17 = *v18;
      v17[1] = v19;
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      sub_1C07B2D8C((uint64_t)a1, 0, 2, v7);
    }
  }
  return a1;
}

uint64_t destroy for SourceProviderError(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;

  v2 = sub_1C07ACF80(&qword_1EF6485A8);
  result = sub_1C07B2D80(a1, 2, v2);
  if (!(_DWORD)result)
  {
    swift_bridgeObjectRelease();
    v4 = a1 + *(int *)(type metadata accessor for Source() + 24);
    v5 = sub_1C106D1F8();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
    return swift_bridgeObjectRelease();
  }
  return result;
}

_QWORD *initializeWithCopy for SourceProviderError(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  void (*v13)(char *, char *, uint64_t);
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;

  v6 = sub_1C07ACF80(&qword_1EF6485A8);
  if (sub_1C07B2D80((uint64_t)a2, 2, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    a1[2] = a2[2];
    v8 = type metadata accessor for Source();
    v9 = *(int *)(v8 + 24);
    v10 = (char *)a1 + v9;
    v11 = (char *)a2 + v9;
    v12 = sub_1C106D1F8();
    v13 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    v13(v10, v11, v12);
    *((_BYTE *)a1 + *(int *)(v8 + 28)) = *((_BYTE *)a2 + *(int *)(v8 + 28));
    v14 = *(int *)(v6 + 48);
    v15 = (_QWORD *)((char *)a1 + v14);
    v16 = (_QWORD *)((char *)a2 + v14);
    v17 = v16[1];
    *v15 = *v16;
    v15[1] = v17;
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    sub_1C07B2D8C((uint64_t)a1, 0, 2, v6);
  }
  return a1;
}

_QWORD *assignWithCopy for SourceProviderError(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  int v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  void (*v14)(char *, char *, uint64_t);
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;

  v6 = sub_1C07ACF80(&qword_1EF6485A8);
  v7 = sub_1C07B2D80((uint64_t)a1, 2, v6);
  v8 = sub_1C07B2D80((uint64_t)a2, 2, v6);
  if (!v7)
  {
    if (!v8)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      swift_bridgeObjectRelease();
      a1[2] = a2[2];
      v19 = type metadata accessor for Source();
      v20 = *(int *)(v19 + 24);
      v21 = (char *)a1 + v20;
      v22 = (char *)a2 + v20;
      v23 = sub_1C106D1F8();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 24))(v21, v22, v23);
      *((_BYTE *)a1 + *(int *)(v19 + 28)) = *((_BYTE *)a2 + *(int *)(v19 + 28));
      v24 = *(int *)(v6 + 48);
      v25 = (_QWORD *)((char *)a1 + v24);
      v26 = (_QWORD *)((char *)a2 + v24);
      *v25 = *v26;
      v25[1] = v26[1];
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      swift_bridgeObjectRelease();
      return a1;
    }
    sub_1C0D3E540((uint64_t)a1);
    goto LABEL_6;
  }
  if (v8)
  {
LABEL_6:
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    return a1;
  }
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  v9 = type metadata accessor for Source();
  v10 = *(int *)(v9 + 24);
  v11 = (char *)a1 + v10;
  v12 = (char *)a2 + v10;
  v13 = sub_1C106D1F8();
  v14 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16);
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  v14(v11, v12, v13);
  *((_BYTE *)a1 + *(int *)(v9 + 28)) = *((_BYTE *)a2 + *(int *)(v9 + 28));
  v15 = *(int *)(v6 + 48);
  v16 = (_QWORD *)((char *)a1 + v15);
  v17 = (_QWORD *)((char *)a2 + v15);
  *v16 = *v17;
  v16[1] = v17[1];
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C07B2D8C((uint64_t)a1, 0, 2, v6);
  return a1;
}

uint64_t sub_1C0D3E540(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1C07ACF80(&qword_1EF6485A8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

_QWORD *initializeWithTake for SourceProviderError(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;

  v6 = sub_1C07ACF80(&qword_1EF6485A8);
  if (sub_1C07B2D80((uint64_t)a2, 2, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    a1[2] = a2[2];
    v7 = type metadata accessor for Source();
    v8 = *(int *)(v7 + 24);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_1C106D1F8();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
    *((_BYTE *)a1 + *(int *)(v7 + 28)) = *((_BYTE *)a2 + *(int *)(v7 + 28));
    *(_OWORD *)((char *)a1 + *(int *)(v6 + 48)) = *(_OWORD *)((char *)a2 + *(int *)(v6 + 48));
    sub_1C07B2D8C((uint64_t)a1, 0, 2, v6);
  }
  return a1;
}

_QWORD *assignWithTake for SourceProviderError(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  int v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;

  v6 = sub_1C07ACF80(&qword_1EF6485A8);
  v7 = sub_1C07B2D80((uint64_t)a1, 2, v6);
  v8 = sub_1C07B2D80((uint64_t)a2, 2, v6);
  if (!v7)
  {
    if (!v8)
    {
      v15 = a2[1];
      *a1 = *a2;
      a1[1] = v15;
      swift_bridgeObjectRelease();
      a1[2] = a2[2];
      v16 = type metadata accessor for Source();
      v17 = *(int *)(v16 + 24);
      v18 = (char *)a1 + v17;
      v19 = (char *)a2 + v17;
      v20 = sub_1C106D1F8();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 40))(v18, v19, v20);
      *((_BYTE *)a1 + *(int *)(v16 + 28)) = *((_BYTE *)a2 + *(int *)(v16 + 28));
      v21 = *(int *)(v6 + 48);
      v22 = (_QWORD *)((char *)a1 + v21);
      v23 = (_QWORD *)((char *)a2 + v21);
      v25 = *v23;
      v24 = v23[1];
      *v22 = v25;
      v22[1] = v24;
      swift_bridgeObjectRelease();
      return a1;
    }
    sub_1C0D3E540((uint64_t)a1);
    goto LABEL_6;
  }
  if (v8)
  {
LABEL_6:
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    return a1;
  }
  *(_OWORD *)a1 = *(_OWORD *)a2;
  a1[2] = a2[2];
  v9 = type metadata accessor for Source();
  v10 = *(int *)(v9 + 24);
  v11 = (char *)a1 + v10;
  v12 = (char *)a2 + v10;
  v13 = sub_1C106D1F8();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v11, v12, v13);
  *((_BYTE *)a1 + *(int *)(v9 + 28)) = *((_BYTE *)a2 + *(int *)(v9 + 28));
  *(_OWORD *)((char *)a1 + *(int *)(v6 + 48)) = *(_OWORD *)((char *)a2 + *(int *)(v6 + 48));
  sub_1C07B2D8C((uint64_t)a1, 0, 2, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for SourceProviderError()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1C0D3E7FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unsigned int v5;

  v4 = sub_1C07ACF80(&qword_1EF6485A8);
  v5 = sub_1C07B2D80(a1, a2, v4);
  if (v5 >= 3)
    return v5 - 2;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for SourceProviderError()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1C0D3E850(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;

  if (a2)
    v5 = (a2 + 2);
  else
    v5 = 0;
  v6 = sub_1C07ACF80(&qword_1EF6485A8);
  return sub_1C07B2D8C(a1, v5, a3, v6);
}

uint64_t sub_1C0D3E8A0(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1C07ACF80(&qword_1EF6485A8);
  return sub_1C07B2D80(a1, 2, v2);
}

uint64_t sub_1C0D3E8D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1C07ACF80(&qword_1EF6485A8);
  return sub_1C07B2D8C(a1, a2, 2, v4);
}

uint64_t sub_1C0D3E910()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for Source();
  if (v1 <= 0x3F)
  {
    swift_getTupleTypeLayout2();
    swift_initEnumMetadataSinglePayload();
    return 0;
  }
  return result;
}

uint64_t sub_1C0D3E980(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for SourceProviderError();
    result = MEMORY[0x1C3BA8174](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

BOOL sub_1C0D3E9C4(uint64_t a1)
{
  return a1 == 0;
}

BOOL sub_1C0D3E9D0(uint64_t a1, uint64_t a2)
{
  return (a1 | a2) == 0;
}

uint64_t SourceSet.remove(_:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  _QWORD *v2;
  uint64_t v4;
  BOOL v5;
  unint64_t v6;
  uint64_t v7;
  BOOL v8;
  uint64_t v9;
  uint64_t v10;

  v4 = *(_QWORD *)(result + 16);
  v5 = __OFSUB__(v4, 1);
  v6 = v4 - 1;
  if (v5)
  {
    __break(1u);
  }
  else
  {
    v7 = 1;
    v8 = v6 > 0x40;
    if (v6 >= 0x40)
      v9 = 0;
    else
      v9 = 1 << v6;
    if (v8)
      v9 = 0;
    if ((*v2 & v9) != 0)
    {
      *v2 &= ~v9;
      sub_1C0A53D64(result, a2);
      v7 = 0;
    }
    v10 = sub_1C077674C();
    return sub_1C07B2D8C(a2, v7, 1, v10);
  }
  return result;
}

uint64_t sub_1C0D3EA5C(uint64_t a1, uint64_t a2)
{
  return a2 ^ a1;
}

uint64_t sub_1C0D3EA64@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  *a3 = a2 ^ result;
  return result;
}

uint64_t sub_1C0D3EA70@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  *a5 = a3 ^ result;
  a5[1] = a4 ^ a2;
  return result;
}

void sub_1C0D3EA80(uint64_t a1)
{
  _QWORD *v1;

  sub_1C07ADD10(*v1 ^ a1);
}

uint64_t sub_1C0D3EA8C@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  *a3 = a2 & ~result;
  return result;
}

uint64_t sub_1C0D3EA98(uint64_t a1, uint64_t a2)
{
  return a2 & ~a1;
}

uint64_t sub_1C0D3EAA0@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  *a5 = a3 & ~result;
  a5[1] = a4 & ~a2;
  return result;
}

BOOL sub_1C0D3EAB0(uint64_t a1, uint64_t a2)
{
  return (a2 & a1) == 0;
}

BOOL sub_1C0D3EABC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (a3 & a1 | a4 & a2) == 0;
}

void sub_1C0D3EAD4(uint64_t a1)
{
  _QWORD *v1;

  sub_1C07ADD10(*v1 & ~a1);
}

int8x16_t sub_1C0D3EAE0(uint64_t a1, uint64_t a2)
{
  int8x16_t *v2;
  int8x16_t v3;
  int8x16_t result;

  v3.i64[0] = a1;
  v3.i64[1] = a2;
  result = vbicq_s8(*v2, v3);
  *v2 = result;
  return result;
}

void _s24IntelligencePlatformCore9SourceSetV12arrayLiteralAcA0D0Vd_tcfC_0(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  unint64_t v13;
  BOOL v14;
  uint64_t v15;

  v5 = sub_1C077674C();
  MEMORY[0x1E0C80A78](v5);
  sub_1C0780A08();
  v7 = *(_QWORD *)(a1 + 16);
  if (v7)
  {
    v8 = 0;
    v9 = a1 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
    v10 = *(_QWORD *)(v6 + 72);
    while (1)
    {
      sub_1C0A53D64(v9, v2);
      v11 = *(_QWORD *)(v2 + 16);
      v12 = __OFSUB__(v11, 1);
      v13 = v11 - 1;
      if (v12)
        break;
      v14 = v13 > 0x40;
      if (v13 >= 0x40)
        v15 = 0;
      else
        v15 = 1 << v13;
      if (v14)
        v15 = 0;
      v8 |= v15;
      sub_1C08CBC78(v2);
      v9 += v10;
      if (!--v7)
      {
        sub_1C077960C();
        goto LABEL_12;
      }
    }
    __break(1u);
  }
  else
  {
    sub_1C077960C();
    v8 = 0;
LABEL_12:
    *a2 = v8;
    sub_1C077C798();
  }
}

uint64_t SourceSet.insert(_:)(uint64_t result, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  BOOL v4;
  unint64_t v5;
  BOOL v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BOOL8 v10;

  v3 = *(_QWORD *)(a2 + 16);
  v4 = __OFSUB__(v3, 1);
  v5 = v3 - 1;
  if (v4)
  {
    __break(1u);
  }
  else
  {
    v6 = v5 > 0x40;
    if (v5 >= 0x40)
      v7 = 0;
    else
      v7 = 1 << v5;
    if (v6)
      v8 = 0;
    else
      v8 = v7;
    v9 = *v2 & v8;
    if (!v9)
      *v2 |= v8;
    v10 = v9 == 0;
    sub_1C0A53D64(a2, result);
    return v10;
  }
  return result;
}

void SourceSet.init(source:)(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char v5;
  char v6;
  uint64_t v7;

  if (__OFSUB__(*(_QWORD *)(a1 + 16), 1))
  {
    __break(1u);
  }
  else
  {
    sub_1C079C6D0();
    if (!v6 & v5)
      v7 = 0;
    else
      v7 = v4;
    sub_1C08CBC78(v3);
    *a2 = v7;
    sub_1C0778534();
  }
}

uint64_t SourceSet.rawValue.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t SourceSet.rawValue.setter(uint64_t result)
{
  _QWORD *v1;

  *v1 = result;
  return result;
}

uint64_t (*SourceSet.rawValue.modify())(_QWORD)
{
  return nullsub_1;
}

void sub_1C0D3EC88()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  char v7;
  uint64_t v8;
  uint64_t v9;

  v0 = sub_1C077674C();
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1ED7623F0 != -1)
    swift_once();
  v4 = sub_1C079E000(v0, (uint64_t)&unk_1ED7623D0);
  sub_1C0A53D64(v4, (uint64_t)v3);
  if (__OFSUB__(*((_QWORD *)v3 + 2), 1))
  {
    __break(1u);
  }
  else
  {
    sub_1C079C6D0();
    if (!v7 & v6)
      v8 = 0;
    else
      v8 = v5;
    sub_1C08CBC78((uint64_t)v3);
    qword_1ED78CE30 = v8;
    sub_1C0778534();
  }
}

IntelligencePlatformCore::SourceSet __swiftcall SourceSet.init(rawValue:)(IntelligencePlatformCore::SourceSet rawValue)
{
  IntelligencePlatformCore::SourceSet *v1;

  v1->rawValue = rawValue.rawValue;
  return rawValue;
}

uint64_t Source.sourceSetBitValue.getter()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  char v3;
  uint64_t result;

  if (__OFSUB__(*(_QWORD *)(v0 + 16), 1))
  {
    __break(1u);
  }
  else
  {
    sub_1C079C6D0();
    if (!v3 & v2)
      return 0;
    else
      return v1;
  }
  return result;
}

void SourceSet.update(with:)(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  char *v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v4 = sub_1C07ACF80(&qword_1EF648640);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v18 - v9;
  v12 = (char *)&v18 + *(int *)(v11 + 48) - v9;
  v13 = SourceSet.insert(_:)((uint64_t)v12, a1);
  *v10 = v13 & 1;
  v14 = (uint64_t)&v7[*(int *)(v4 + 48)];
  *v7 = v13 & 1;
  sub_1C0A53D64((uint64_t)v12, v14);
  sub_1C07A4BEC();
  if ((v13 & 1) != 0)
  {
    sub_1C0784B30((uint64_t)v10, &qword_1EF648640);
    v15 = 1;
  }
  else
  {
    v16 = (uint64_t)&v7[*(int *)(v4 + 48)];
    sub_1C0845A08((uint64_t)v12, v16);
    sub_1C079E8D8(v16);
    v15 = 0;
  }
  v17 = sub_1C077674C();
  sub_1C07B2D8C(a2, v15, 1, v17);
  sub_1C077C798();
}

IntelligencePlatformCore::SourceSet sub_1C0D3EE6C(Swift::Int *a1)
{
  return SourceSet.init(rawValue:)(*a1);
}

uint64_t sub_1C0D3EE74()
{
  sub_1C0D3F670();
  return sub_1C106FE98();
}

uint64_t sub_1C0D3EED0()
{
  sub_1C0D3F670();
  return sub_1C106FE5C();
}

uint64_t sub_1C0D3EF1C(_QWORD *a1)
{
  uint64_t *v1;

  return sub_1C09E78B0(a1, *v1);
}

uint64_t sub_1C0D3EF24(uint64_t a1, uint64_t a2)
{
  char v3;

  v3 = SourceSet.insert(_:)(a1, a2);
  sub_1C08CBC78(a2);
  return v3 & 1;
}

uint64_t sub_1C0D3EF58@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  SourceSet.update(with:)(a1, a2);
  return sub_1C08CBC78(a1);
}

IntelligencePlatformCore::SourceSet sub_1C0D3EF7C@<X0>(Swift::Int *a1@<X0>, uint64_t a2@<X8>)
{
  IntelligencePlatformCore::SourceSet result;

  result.rawValue = SourceSet.init(rawValue:)(*a1).rawValue;
  *(_BYTE *)(a2 + 8) = 0;
  return result;
}

void sub_1C0D3EFA4(uint64_t *a1@<X8>)
{
  *a1 = SourceSet.rawValue.getter();
  sub_1C0778534();
}

void SourceSet.databaseValue.getter()
{
  JUMPOUT(0x1C3BA6BCCLL);
}

void static SourceSet.fromDatabaseValue(_:)(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  char v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;

  v5 = sub_1C106BC8C();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  sub_1C07785B8();
  v7 = sub_1C10702B8();
  v9 = v8;
  if ((v8 & 1) != 0)
  {
    if (qword_1ED761458 != -1)
      swift_once();
    v10 = sub_1C106F544();
    sub_1C079E000(v10, (uint64_t)qword_1ED78D818);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v2, a1, v5);
    v11 = sub_1C106F538();
    v12 = sub_1C1070390();
    if (os_log_type_enabled(v11, v12))
    {
      v13 = (uint8_t *)swift_slowAlloc();
      v16 = swift_slowAlloc();
      *(_DWORD *)v13 = 136380675;
      sub_1C0D305C0();
      v14 = sub_1C1070C0C();
      sub_1C0788DAC(v14, v15, &v16);
      sub_1C10705AC();
      sub_1C077960C();
      sub_1C0795918();
      _os_log_impl(&dword_1C0771000, v11, v12, "SourceSet: failed to initialize from database value: %{private}s", v13, 0xCu);
      swift_arrayDestroy();
      sub_1C0776778();
    }
    sub_1C0795918();

    v7 = 0;
  }
  *(_QWORD *)a2 = v7;
  *(_BYTE *)(a2 + 8) = v9 & 1;
  sub_1C0776760();
}

uint64_t sub_1C0D3F1A8()
{
  sub_1C0B5FBF0();
  return sub_1C106C208();
}

uint64_t sub_1C0D3F1E0()
{
  sub_1C0B5FBF0();
  return sub_1C106C214();
}

Swift::String __swiftcall SourceSet.csvString()()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  __objc2_class_ro **p_info;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  BOOL v17;
  uint64_t v18;
  char v19;
  char v20;
  __objc2_class_ro **v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  void *v30;
  Swift::String result;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;

  sub_1C07ACF80(&qword_1ED7623F8);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v2);
  sub_1C0780A08();
  v3 = sub_1C077674C();
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v33 = (char *)&v32 - v8;
  MEMORY[0x1E0C80A78](v9);
  v11 = (uint64_t *)((char *)&v32 - v10);
  v34 = *v0;
  v35 = MEMORY[0x1E0DEE9D8];
  sub_1C09D30E0();
  p_info = &OBJC_METACLASS____TtC24IntelligencePlatformCore9Nicknames.info;
  v13 = &OBJC_IVAR____TtCO24IntelligencePlatformCore10ViewUpdate14SignpostHelper_requests;
  v14 = 1;
  v32 = v6;
  do
  {
    while (1)
    {
      if (p_info[492] != (__objc2_class_ro *)-1)
        swift_once();
      if (v13[150] < v14)
      {
        sub_1C07ACF80(&qword_1ED762B70);
        sub_1C08243B0();
        v28 = sub_1C106FA54();
        v30 = v29;
        swift_release();
        v15 = v28;
        v16 = v30;
        goto LABEL_23;
      }
      sub_1C0D2AA04(v14, v1);
      if (sub_1C07B2D80(v1, 1, v3) == 1)
        break;
      v15 = sub_1C0845A08(v1, (uint64_t)v6);
      if (__OFSUB__(v14, 1))
        goto LABEL_21;
      v17 = __OFADD__(v14++, 1);
      if (v17)
        goto LABEL_22;
      sub_1C079C6D0();
      if (!v20 & v19)
        v18 = 0;
      if ((v18 & v34) < 1)
      {
        sub_1C07A4BEC();
      }
      else
      {
        v21 = p_info;
        v22 = (uint64_t)v33;
        sub_1C079E8D8((uint64_t)v6);
        sub_1C0845A08(v22, (uint64_t)v11);
        v23 = *v11;
        v24 = v11[1];
        _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
        sub_1C08CBC78((uint64_t)v11);
        v25 = v35;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1C09D30E0();
          v25 = v35;
        }
        v26 = *(_QWORD *)(v25 + 16);
        if (v26 >= *(_QWORD *)(v25 + 24) >> 1)
        {
          sub_1C09D30E0();
          v25 = v35;
        }
        *(_QWORD *)(v25 + 16) = v26 + 1;
        v27 = v25 + 16 * v26;
        *(_QWORD *)(v27 + 32) = v23;
        *(_QWORD *)(v27 + 40) = v24;
        p_info = v21;
        v6 = v32;
        v13 = &OBJC_IVAR____TtCO24IntelligencePlatformCore10ViewUpdate14SignpostHelper_requests;
      }
    }
    v15 = sub_1C0784B30(v1, &qword_1ED7623F8);
    v17 = __OFADD__(v14++, 1);
  }
  while (!v17);
  __break(1u);
LABEL_21:
  __break(1u);
LABEL_22:
  __break(1u);
LABEL_23:
  result._object = v16;
  result._countAndFlagsBits = v15;
  return result;
}

void SourceSet.SourceSetIterator.next()(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  unint64_t v10;
  BOOL v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  sub_1C07ACF80(&qword_1ED7623F8);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v4);
  sub_1C07785B8();
  v5 = sub_1C077674C();
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  while (1)
  {
    while (1)
    {
      v9 = *v1;
      if (qword_1ED75DF60 != -1)
        swift_once();
      if (qword_1ED78D4B0 < v9)
      {
        v14 = 1;
LABEL_19:
        sub_1C07B2D8C(a1, v14, 1, v5);
        sub_1C0776760();
        return;
      }
      sub_1C0D2AA04(v9, v2);
      if (sub_1C07B2D80(v2, 1, v5) == 1)
        break;
      sub_1C0845A08(v2, (uint64_t)v8);
      v10 = v9 - 1;
      if (__OFSUB__(v9, 1))
        goto LABEL_21;
      if (__OFADD__(v9, 1))
        goto LABEL_22;
      v11 = v10 > 0x40;
      if (v10 >= 0x40)
        v12 = 0;
      else
        v12 = 1 << v10;
      if (v11)
        v12 = 0;
      v13 = v1[1] & v12;
      *v1 = v9 + 1;
      if (v13 >= 1)
      {
        sub_1C079E8D8((uint64_t)v8);
        v14 = 0;
        goto LABEL_19;
      }
      sub_1C07A4BEC();
    }
    sub_1C0784B30(v2, &qword_1ED7623F8);
    if (__OFADD__(*v1, 1))
      break;
    ++*v1;
  }
  __break(1u);
LABEL_21:
  __break(1u);
LABEL_22:
  __break(1u);
}

IntelligencePlatformCore::SourceSet::SourceSetIterator __swiftcall SourceSet.makeIterator()()
{
  _QWORD *v0;
  uint64_t *v1;
  uint64_t v2;
  IntelligencePlatformCore::SourceSet::SourceSetIterator result;

  v2 = *v1;
  *v0 = 1;
  v0[1] = v2;
  return result;
}

uint64_t sub_1C0D3F65C()
{
  _QWORD *v0;

  return sub_1C0F0E6E0(*v0);
}

void sub_1C0D3F664(uint64_t *a1, uint64_t a2, char *a3)
{
  uint64_t *v3;

  sub_1C0F0E788(a1, a2, a3, *v3);
}

unint64_t sub_1C0D3F670()
{
  unint64_t result;

  result = qword_1EF648648;
  if (!qword_1EF648648)
  {
    result = MEMORY[0x1C3BA8174](&protocol conformance descriptor for SourceSet, &type metadata for SourceSet);
    atomic_store(result, (unint64_t *)&qword_1EF648648);
  }
  return result;
}

unint64_t sub_1C0D3F6B0()
{
  unint64_t result;

  result = qword_1EF648650;
  if (!qword_1EF648650)
  {
    result = MEMORY[0x1C3BA8174](&protocol conformance descriptor for SourceSet, &type metadata for SourceSet);
    atomic_store(result, (unint64_t *)&qword_1EF648650);
  }
  return result;
}

unint64_t sub_1C0D3F6F0()
{
  unint64_t result;

  result = qword_1EF648658;
  if (!qword_1EF648658)
  {
    result = MEMORY[0x1C3BA8174](&protocol conformance descriptor for SourceSet, &type metadata for SourceSet);
    atomic_store(result, (unint64_t *)&qword_1EF648658);
  }
  return result;
}

unint64_t sub_1C0D3F730()
{
  unint64_t result;

  result = qword_1EF648660;
  if (!qword_1EF648660)
  {
    result = MEMORY[0x1C3BA8174](&protocol conformance descriptor for SourceSet, &type metadata for SourceSet);
    atomic_store(result, (unint64_t *)&qword_1EF648660);
  }
  return result;
}

unint64_t sub_1C0D3F770()
{
  unint64_t result;

  result = qword_1ED760E50;
  if (!qword_1ED760E50)
  {
    result = MEMORY[0x1C3BA8174](&protocol conformance descriptor for SourceSet, &type metadata for SourceSet);
    atomic_store(result, (unint64_t *)&qword_1ED760E50);
  }
  return result;
}

unint64_t sub_1C0D3F7B0()
{
  unint64_t result;

  result = qword_1ED75E980;
  if (!qword_1ED75E980)
  {
    result = MEMORY[0x1C3BA8174](&protocol conformance descriptor for SourceSet, &type metadata for SourceSet);
    atomic_store(result, (unint64_t *)&qword_1ED75E980);
  }
  return result;
}

unint64_t sub_1C0D3F7F0()
{
  unint64_t result;

  result = qword_1EF648668;
  if (!qword_1EF648668)
  {
    result = MEMORY[0x1C3BA8174](&protocol conformance descriptor for SourceSet.SourceSetIterator, &type metadata for SourceSet.SourceSetIterator);
    atomic_store(result, (unint64_t *)&qword_1EF648668);
  }
  return result;
}

ValueMetadata *type metadata accessor for SourceSet()
{
  return &type metadata for SourceSet;
}

ValueMetadata *type metadata accessor for SourceSet.SourceSetIterator()
{
  return &type metadata for SourceSet.SourceSetIterator;
}

ValueMetadata *type metadata accessor for SportsSchedulesDatabaseTable()
{
  return &type metadata for SportsSchedulesDatabaseTable;
}

uint64_t sub_1C0D3F870()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  uint64_t v18;
  uint64_t v19;

  v19 = sub_1C106F544();
  v18 = *(_QWORD *)(v19 - 8);
  MEMORY[0x1E0C80A78](v19);
  sub_1C0778564();
  v3 = v2 - v1;
  v4 = sub_1C106BEF0();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  sub_1C0778564();
  v8 = v7 - v6;
  v9 = sub_1C106BF2C();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  sub_1C0778564();
  v13 = v12 - v11;
  sub_1C106BF20();
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v5 + 104))(v8, *MEMORY[0x1E0D24008], v4);
  sub_1C106BF08();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v8, v4);
  sub_1C0794BAC((unint64_t *)&qword_1ED762200, type metadata accessor for ErrorHandlingDatabasePool, (uint64_t)&unk_1C108D0AC);
  sub_1C106BF14();
  if (v0)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v10 + 8))(v13, v9);
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v13, v9);
  sub_1C106F178();
  v15 = sub_1C106F538();
  v16 = sub_1C1070378();
  if (os_log_type_enabled(v15, v16))
  {
    v17 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v17 = 0;
    _os_log_impl(&dword_1C0771000, v15, v16, "SportsSchedulesDatabaseTable: finished database migration.", v17, 2u);
    MEMORY[0x1C3BA8270](v17, -1, -1);
  }

  return (*(uint64_t (**)(uint64_t, uint64_t))(v18 + 8))(v3, v19);
}

void sub_1C0D3FA98()
{
  sub_1C077FF50((uint64_t)sub_1C0D3FAC4, 0);
}

uint64_t sub_1C0D3FAC4()
{
  uint64_t v0;

  sub_1C0AA7704();
  sub_1C08EEF08(v0);
  return swift_bridgeObjectRelease();
}

void sub_1C0D3FB14()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t (*v7)(uint64_t);
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  _OWORD v12[2];
  uint64_t v13;
  uint64_t v14;

  v11 = sub_1C106BB24();
  v1 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v10 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_1C106BB54();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v12[0] = MEMORY[0x1E0DEE9D8];
  sub_1C0794BAC(qword_1ED75E9C0, v7, MEMORY[0x1E0D23C20]);
  sub_1C07ACF80((uint64_t *)&unk_1ED760080);
  sub_1C0C4F41C((unint64_t *)&qword_1ED760090, (uint64_t *)&unk_1ED760080);
  sub_1C1070660();
  sub_1C106C670();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  if (!v0)
  {
    v13 = 0;
    memset(v12, 0, sizeof(v12));
    v14 = MEMORY[0x1E0DEE9D8];
    sub_1C0794BAC((unint64_t *)&qword_1ED760430, (uint64_t (*)(uint64_t))MEMORY[0x1E0D23BA0], MEMORY[0x1E0D23BB0]);
    sub_1C07ACF80(&qword_1ED760668);
    sub_1C0C4F41C(&qword_1ED760670, &qword_1ED760668);
    v9 = v10;
    v8 = v11;
    sub_1C1070660();
    sub_1C106C664();
    (*(void (**)(char *, uint64_t))(v1 + 8))(v9, v8);
    sub_1C0784B94((uint64_t)v12, (uint64_t *)&unk_1ED7626B0);
  }
}

void sub_1C0D3FD88()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD v8[2];

  v0 = sub_1C07ACF80(&qword_1ED761500);
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)v8 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_1C07ACF80((uint64_t *)&unk_1ED75E9F0);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C106C538();
  v6 = sub_1C106C55C();
  sub_1C07B2D8C((uint64_t)v5, 0, 1, v6);
  sub_1C106BE3C();
  sub_1C0784B94((uint64_t)v5, (uint64_t *)&unk_1ED75E9F0);
  v7 = sub_1C106C604();
  sub_1C07B2D8C((uint64_t)v2, 1, 1, v7);
  sub_1C106BEB4();
  swift_release();
  swift_release();
  sub_1C0784B94((uint64_t)v2, &qword_1ED761500);
  sub_1C106C514();
  sub_1C07B2D8C((uint64_t)v5, 0, 1, v6);
  sub_1C106BE3C();
  sub_1C0784B94((uint64_t)v5, (uint64_t *)&unk_1ED75E9F0);
  sub_1C07B2D8C((uint64_t)v2, 1, 1, v7);
  sub_1C106BEB4();
  swift_release();
  swift_release();
  sub_1C0784B94((uint64_t)v2, &qword_1ED761500);
  sub_1C106C538();
  sub_1C07B2D8C((uint64_t)v5, 0, 1, v6);
  sub_1C106BE3C();
  sub_1C0784B94((uint64_t)v5, (uint64_t *)&unk_1ED75E9F0);
  sub_1C07B2D8C((uint64_t)v2, 1, 1, v7);
  sub_1C106BEB4();
  swift_release();
  swift_release();
  sub_1C0784B94((uint64_t)v2, &qword_1ED761500);
  sub_1C106C514();
  sub_1C07B2D8C((uint64_t)v5, 0, 1, v6);
  sub_1C106BE3C();
  sub_1C0784B94((uint64_t)v5, (uint64_t *)&unk_1ED75E9F0);
  sub_1C07B2D8C((uint64_t)v2, 1, 1, v7);
  sub_1C106BEB4();
  swift_release();
  swift_release();
  sub_1C0784B94((uint64_t)v2, &qword_1ED761500);
  sub_1C106C514();
  sub_1C07B2D8C((uint64_t)v5, 0, 1, v6);
  sub_1C106BE3C();
  sub_1C0784B94((uint64_t)v5, (uint64_t *)&unk_1ED75E9F0);
  sub_1C07B2D8C((uint64_t)v2, 1, 1, v7);
  sub_1C106BEB4();
  swift_release();
  swift_release();
  sub_1C0784B94((uint64_t)v2, &qword_1ED761500);
  sub_1C106C520();
  sub_1C07B2D8C((uint64_t)v5, 0, 1, v6);
  sub_1C106BE3C();
  sub_1C0784B94((uint64_t)v5, (uint64_t *)&unk_1ED75E9F0);
  sub_1C07B2D8C((uint64_t)v2, 1, 1, v7);
  sub_1C106BEB4();
  swift_release();
  swift_release();
  sub_1C0784B94((uint64_t)v2, &qword_1ED761500);
  sub_1C07B2D8C((uint64_t)v2, 1, 1, v7);
  sub_1C106BE24();
  sub_1C0784B94((uint64_t)v2, &qword_1ED761500);
}

void sub_1C0D401A8()
{
  sub_1C0D3FA98();
}

void ResumableStage<>.markStageComplete()()
{
  sub_1C106AC6C();
  ResumableStage.createProgressToken(_:complete:)();
  sub_1C0776784();
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> Stage.checkCancellation()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;

  v3 = v0;
  v4 = *(_QWORD *)(v0 - 8);
  ((void (*)())MEMORY[0x1E0C80A78])();
  sub_1C0778544();
  if ((sub_1C1070120() & 1) != 0)
  {
    if (qword_1ED761458 != -1)
      swift_once();
    v5 = sub_1C106F544();
    sub_1C079E000(v5, (uint64_t)qword_1ED78D818);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v2, v1, v3);
    v6 = sub_1C106F538();
    v7 = sub_1C10703A8();
    if (os_log_type_enabled(v6, v7))
    {
      v8 = (uint8_t *)swift_slowAlloc();
      v11 = swift_slowAlloc();
      *(_DWORD *)v8 = 136315138;
      v9 = sub_1C1070C0C();
      sub_1C0788DAC(v9, v10, &v11);
      sub_1C10705AC();
      swift_bridgeObjectRelease();
      sub_1C0799A64();
      _os_log_impl(&dword_1C0771000, v6, v7, "%s going to defer", v8, 0xCu);
      swift_arrayDestroy();
      sub_1C0776778();
    }
    sub_1C0799A64();

    sub_1C107006C();
    sub_1C07803F8(&qword_1ED759800, (void (*)(uint64_t))MEMORY[0x1E0DF05E0]);
    swift_allocError();
    sub_1C106F91C();
    swift_willThrow();
  }
  sub_1C07757D0();
}

uint64_t sub_1C0D403FC()
{
  return sub_1C0CCB710();
}

uint64_t Stage.description.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  sub_1C0779670();
  v5 = sub_1C106D1F8();
  v2 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  sub_1C0776A6C();
  type metadata accessor for Source();
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v3);
  sub_1C077962C();
  sub_1C1070774();
  swift_bridgeObjectRelease();
  swift_getMetatypeMetadata();
  sub_1C106FB5C();
  sub_1C106FC94();
  sub_1C07785A0();
  sub_1C106FC94();
  sub_1C07A0370();
  StageName.description.getter();
  sub_1C106FC94();
  sub_1C07785A0();
  sub_1C106FC94();
  sub_1C07A0370();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C079507C();
  sub_1C106FC94();
  swift_bridgeObjectRelease();
  sub_1C07B1F90(v1, (uint64_t (*)(_QWORD))type metadata accessor for Source);
  sub_1C106FC94();
  sub_1C07A0370();
  sub_1C106D0FC();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0, v5);
  sub_1C106FC94();
  sub_1C0775894();
  sub_1C106FC94();
  sub_1C07A0370();
  PipelineType.description.getter();
  sub_1C106FC94();
  swift_bridgeObjectRelease();
  return 60;
}

void ResumableStage.token()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t AssociatedTypeWitness;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  sub_1C0779670();
  v1 = v0;
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v2);
  sub_1C077AE40();
  sub_1C07ACF80(&qword_1ED75C730);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v3);
  sub_1C077AE40();
  sub_1C07A9A84();
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v4);
  sub_1C077AE40();
  sub_1C07B7D38();
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v5);
  sub_1C077962C();
  sub_1C07ACF80(&qword_1ED75ACF8);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v6);
  v7 = sub_1C0776A6C();
  type metadata accessor for ProgressTokens(v7);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v8);
  sub_1C077AE40();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v10 = sub_1C07A87E8();
  v11 = sub_1C07A87E8();
  v12 = type metadata accessor for ProgressToken(0, AssociatedTypeWitness, v10, v11);
  sub_1C077A2C4(v1, v13, v14, v12);
  sub_1C078CDC8();
  sub_1C077F0E4();
  __asm { BR              X10 }
}

void sub_1C0D40790()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  void (*v3)(uint64_t, _QWORD, uint64_t);
  uint64_t v4;
  char v5;
  uint64_t *v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  NSObject *v28;
  os_log_type_t v29;
  uint64_t v30;
  uint64_t v31;
  uint8_t *v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t (*v35)(uint64_t);
  uint64_t v36;

  v5 = sub_1C077F66C();
  sub_1C077960C();
  if ((v5 & 1) == 0)
  {
    sub_1C078CDC8();
    sub_1C0779758();
    sub_1C07B1F90((uint64_t)v3, (uint64_t (*)(_QWORD))type metadata accessor for PhaseStores);
    *(_QWORD *)(v4 - 96) = v0;
    *(_QWORD *)(v4 - 88) = v1;
    v9 = sub_1C07812A4();
    sub_1C07B98C0((uint64_t)v9);
    v10 = *(_QWORD *)(v4 - 176);
    sub_1C0D42050(v4 - 120, 0, (uint64_t)sub_1C0D450E8, (void (*)(uint64_t, _QWORD *))sub_1C0BB97B4);
    sub_1C07785A8();
    sub_1C0779A4C();
    if (sub_1C07B2D80(v10, 1, *(_QWORD *)(v4 - 184)) == 1)
    {
      v7 = &qword_1ED75C730;
      v8 = v10;
      goto LABEL_6;
    }
    v19 = v10;
    v20 = *(_QWORD *)(v4 - 208);
    sub_1C07E563C(v19, v20, type metadata accessor for ConstructionProgressTokens);
    v21 = (void *)MEMORY[0x1C3BA79F4]();
    sub_1C07AFE9C();
    sub_1C0D44C78(v22, v23, v24, v25, (uint64_t (*)(_QWORD, double))type metadata accessor for ConstructionProgressTokens);
    if (v1)
    {
      objc_autoreleasePoolPop(v21);
      v17 = type metadata accessor for ConstructionProgressTokens;
      v18 = v20;
      goto LABEL_11;
    }
    objc_autoreleasePoolPop(v21);
    v35 = type metadata accessor for ConstructionProgressTokens;
    v36 = v20;
LABEL_18:
    sub_1C07B1F90(v36, v35);
    goto LABEL_19;
  }
  sub_1C078CDC8();
  sub_1C0779758();
  sub_1C07B1F90((uint64_t)v3, (uint64_t (*)(_QWORD))type metadata accessor for PhaseStores);
  *(_QWORD *)(v4 - 96) = v0;
  *(_QWORD *)(v4 - 88) = v1;
  v6 = sub_1C07812A4();
  sub_1C07B98C0((uint64_t)v6);
  sub_1C0D42050(v4 - 120, 1, (uint64_t)sub_1C0D45090, (void (*)(uint64_t, _QWORD *))sub_1C0BB97C0);
  sub_1C07785A8();
  sub_1C0779A4C();
  if (sub_1C07B2D80(v2, 1, *(_QWORD *)(v4 - 160)) == 1)
  {
    v7 = &qword_1ED75ACF8;
    v8 = v2;
LABEL_6:
    sub_1C0784B6C(v8, v7);
    goto LABEL_19;
  }
  v11 = *(_QWORD *)(v4 - 200);
  sub_1C07E563C(v2, v11, type metadata accessor for ProgressTokens);
  v12 = (void *)MEMORY[0x1C3BA79F4]();
  sub_1C07AFE9C();
  sub_1C0D44C78(v13, v14, v15, v16, (uint64_t (*)(_QWORD, double))type metadata accessor for ProgressTokens);
  if (!v1)
  {
    objc_autoreleasePoolPop(v12);
    v35 = type metadata accessor for ProgressTokens;
    v36 = v11;
    goto LABEL_18;
  }
  objc_autoreleasePoolPop(v12);
  v17 = type metadata accessor for ProgressTokens;
  v18 = v11;
LABEL_11:
  sub_1C07B1F90(v18, v17);
  v26 = *(_QWORD *)(v4 - 192);
  if (qword_1ED761458 != -1)
    swift_once();
  v27 = sub_1C077585C();
  sub_1C079E000(v27, (uint64_t)qword_1ED78D818);
  v3(v26, *(_QWORD *)(v4 - 152), v0);
  v28 = sub_1C106F538();
  v29 = sub_1C10703A8();
  if (sub_1C077B9F8(v29))
  {
    v30 = sub_1C0775854();
    *(_QWORD *)(v4 - 152) = v1;
    v31 = v26;
    v32 = (uint8_t *)v30;
    *(_QWORD *)(v4 - 120) = sub_1C0775854();
    *(_DWORD *)v32 = 136315138;
    v33 = sub_1C1070C0C();
    *(_QWORD *)(v4 - 136) = sub_1C0788DAC(v33, v34, (uint64_t *)(v4 - 120));
    sub_1C10705AC();
    sub_1C077960C();
    sub_1C078303C(v31, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 144) + 8));
    sub_1C07796F0(&dword_1C0771000, v28, (os_log_type_t)v2, "No progress token for %s", v32);
    sub_1C0778610();
    sub_1C0776778();
  }
  sub_1C078303C(v26, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 144) + 8));

LABEL_19:
  sub_1C0776760();
}

uint64_t sub_1C0D40B0C()
{
  return sub_1C0CCBDF8();
}

uint64_t sub_1C0D40B20()
{
  return sub_1C0CCBD44();
}

void ResumableStage.createProgressToken(_:complete:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t AssociatedTypeWitness;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD v36[10];
  int v37;
  uint64_t v38;
  _QWORD v39[3];
  uint64_t v40;
  uint64_t v41;
  __int128 v42;

  sub_1C0779670();
  v38 = v0;
  v2 = v1;
  v37 = v3;
  v5 = v4;
  v6 = sub_1C07A9A84();
  v7 = *(_QWORD *)(v6 - 8);
  v36[1] = v6;
  v36[2] = v7;
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v8);
  sub_1C077AE40();
  v36[3] = v9;
  v36[8] = sub_1C07B7D38();
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v10);
  sub_1C077AE40();
  v36[9] = v11;
  v12 = type metadata accessor for ProgressTokens(0);
  v13 = *(_QWORD *)(v12 - 8);
  v36[5] = v12;
  v36[6] = v13;
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v14);
  v36[7] = *(_QWORD *)(v2 - 8);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v15);
  sub_1C077AE40();
  v36[4] = v16;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v18 = sub_1C0790AC0();
  v19 = sub_1C0790AC0();
  v20 = type metadata accessor for ProgressToken(255, AssociatedTypeWitness, v18, v19);
  v21 = sub_1C1070564();
  v22 = *(_QWORD *)(v21 - 8);
  MEMORY[0x1E0C80A78](v21);
  v24 = (char *)v36 - v23;
  v25 = *(_QWORD *)(v20 - 8);
  MEMORY[0x1E0C80A78](v26);
  v28 = (char *)v36 - v27;
  v42 = xmmword_1C1091D00;
  (*(void (**)(char *, uint64_t, uint64_t))(v22 + 16))(v24, v5, v21);
  if (sub_1C07B2D80((uint64_t)v24, 1, v20) == 1)
  {
    (*(void (**)(char *, uint64_t))(v22 + 8))(v24, v21);
  }
  else
  {
    v29 = (*(uint64_t (**)(char *, char *, uint64_t))(v25 + 32))(v28, v24, v20);
    v30 = (void *)MEMORY[0x1C3BA79F4](v29);
    sub_1C0D44B44((uint64_t *)&v42);
    objc_autoreleasePoolPop(v30);
    (*(void (**)(char *, uint64_t))(v25 + 8))(v28, v20);
  }
  sub_1C0D44874();
  v31 = v40;
  v32 = v37;
  if (v40)
  {
    v33 = v41;
    sub_1C07A9480(v39, v40);
    v34 = (*(uint64_t (**)(uint64_t, uint64_t))(v33 + 48))(v31, v33);
    _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v39);
    if ((v32 & 1) != 0)
      goto LABEL_9;
  }
  else
  {
    sub_1C0784B6C((uint64_t)v39, &qword_1EF633030);
    v34 = 0;
    if ((v32 & 1) != 0)
      goto LABEL_9;
  }
  if (__OFADD__(v34, 1))
  {
    __break(1u);
    JUMPOUT(0x1C0D411B4);
  }
LABEL_9:
  sub_1C0796B24();
  sub_1C077F0E4();
  __asm { BR              X10 }
}

void sub_1C0D411C4()
{
  sub_1C079DE10();
  sub_1C0D41270();
}

void sub_1C0D411DC()
{
  sub_1C0D41270();
}

void sub_1C0D41200()
{
  sub_1C0D41270();
}

void sub_1C0D41228()
{
  sub_1C079C098();
}

void sub_1C0D4124C()
{
  sub_1C079C098();
}

void sub_1C0D41270()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v14[7];
  uint64_t v15;

  sub_1C0779670();
  v1 = v0;
  v3 = v2;
  v5 = v4;
  v7 = v6;
  if (qword_1ED762B20 != -1)
    swift_once();
  v8 = sub_1C077585C();
  sub_1C079E000(v8, (uint64_t)qword_1ED78D9F8);
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  v9 = sub_1C106F538();
  v10 = sub_1C10703A8();
  if (os_log_type_enabled(v9, v10))
  {
    v14[5] = v1;
    v11 = sub_1C0775854();
    v12 = sub_1C0775854();
    *(_DWORD *)v11 = 134218242;
    v15 = v12;
    sub_1C10705AC();
    sub_1C0775844();
    *(_WORD *)(v11 + 12) = 2080;
    v14[6] = sub_1C0788DAC(v5, v3, &v15);
    sub_1C10705AC();
    _os_log_impl(&dword_1C0771000, v9, v10, "GraphStore: store: %ld %s records.", (uint8_t *)v11, 0x16u);
    sub_1C0778610();
    sub_1C0776778();
  }

  v13 = sub_1C0775844();
  MEMORY[0x1E0C80A78](v13);
  v14[2] = v7;
  sub_1C0779758();
  sub_1C077FF50(v1, (uint64_t)v14);
  sub_1C07785A8();
  sub_1C0776760();
}

uint64_t sub_1C0D41434()
{
  return sub_1C0CCBCB4();
}

uint64_t sub_1C0D41448()
{
  return sub_1C0CCBC90();
}

uint64_t sub_1C0D41464()
{
  return sub_1C0CCBE88();
}

uint64_t sub_1C0D41478()
{
  return sub_1C0CCBA2C();
}

uint64_t sub_1C0D4148C()
{
  return sub_1C0CCBB4C();
}

uint64_t sub_1C0D414A0()
{
  return sub_1C0CCB978();
}

uint64_t sub_1C0D414B4()
{
  return sub_1C0CCBBB8();
}

uint64_t sub_1C0D414C8()
{
  return sub_1C0CCBD68();
}

uint64_t ResumableStage.executeIfRequired(_:)(_BYTE *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t AssociatedTypeWitness;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_QWORD *)(v4 + 312) = a3;
  *(_QWORD *)(v4 + 320) = v3;
  *(_QWORD *)(v4 + 304) = a2;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v7 = sub_1C078A0E0();
  v8 = sub_1C078A0E0();
  *(_QWORD *)(v4 + 328) = type metadata accessor for ProgressToken(255, AssociatedTypeWitness, v7, v8);
  v9 = sub_1C1070564();
  *(_QWORD *)(v4 + 336) = v9;
  *(_QWORD *)(v4 + 344) = *(_QWORD *)(v9 - 8);
  *(_QWORD *)(v4 + 352) = sub_1C0779644();
  *(_QWORD *)(v4 + 360) = sub_1C07ACF80(&qword_1ED75E630);
  *(_QWORD *)(v4 + 368) = sub_1C0779644();
  *(_QWORD *)(v4 + 376) = type metadata accessor for Configuration();
  *(_QWORD *)(v4 + 384) = sub_1C077CF7C();
  *(_QWORD *)(v4 + 392) = sub_1C0775870();
  type metadata accessor for PhaseStores();
  *(_QWORD *)(v4 + 400) = sub_1C0779644();
  *(_QWORD *)(v4 + 408) = type metadata accessor for Pipeline.StatusStore();
  *(_QWORD *)(v4 + 416) = sub_1C0779644();
  *(_BYTE *)(v4 + 441) = *a1;
  sub_1C077862C();
  return sub_1C077B188();
}

void sub_1C0D4160C()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_BYTE *)(v0 + 441);
  v3 = *(_QWORD *)(v0 + 408);
  v2 = *(_QWORD *)(v0 + 416);
  v5 = *(_QWORD *)(v0 + 392);
  v4 = *(_QWORD *)(v0 + 400);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(*(_QWORD *)(v0 + 312) + 8) + 40))(*(_QWORD *)(v0 + 304), *(_QWORD *)(*(_QWORD *)(v0 + 312) + 8));
  sub_1C07E6C80(v4, v5, (uint64_t (*)(_QWORD))type metadata accessor for Configuration);
  sub_1C07A86C4(v6, (uint64_t (*)(_QWORD))type metadata accessor for PhaseStores);
  sub_1C07E563C(v5, v2, (uint64_t (*)(_QWORD))type metadata accessor for Configuration);
  *(_BYTE *)(v2 + *(int *)(v3 + 20)) = v1;
  sub_1C077F0E4();
  __asm { BR              X9 }
}

uint64_t sub_1C0D416E8()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  os_log_type_t v12;
  _BOOL4 v13;
  uint64_t v14;
  uint64_t v15;
  uint8_t *v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t (*v22)(uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t (*v35)(void);
  _QWORD *v36;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t *v42;
  uint64_t *v43;
  _QWORD *v44;
  uint64_t v45[14];

  swift_bridgeObjectRelease();
  sub_1C0D44874();
  sub_1C078A8CC(v3, (uint64_t)v0, &qword_1EF633030);
  v6 = *(_QWORD *)(v2 + 168);
  if (!v6)
  {
    sub_1C0784B6C((uint64_t)v0, &qword_1EF633030);
LABEL_8:
    if (!Pipeline.StatusStore.isLongRunningPipelineActivated()())
    {
      sub_1C078A8CC(v3, (uint64_t)v44, &qword_1EF633030);
      if (*(_QWORD *)(v2 + 248))
      {
        sub_1C07A9480(v44, *(_QWORD *)(v2 + 248));
        v21 = sub_1C079DC28();
        v23 = v22(v21);
        _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v44);
        if (v23 >= 3)
        {
          if (qword_1ED759230 != -1)
            swift_once();
          v24 = *(_QWORD *)(v2 + 368);
          v25 = *(_QWORD *)(v2 + 376);
          v26 = sub_1C079E000(*(_QWORD *)(v2 + 360), (uint64_t)qword_1ED78D028);
          swift_beginAccess();
          sub_1C078A8CC(v26, v24, &qword_1ED75E630);
          LODWORD(v25) = sub_1C07B2D80(v24, 1, v25);
          sub_1C0784B6C(v24, &qword_1ED75E630);
          if ((_DWORD)v25 != 1)
          {
            if (qword_1ED759718 != -1)
              swift_once();
            v38 = *(_QWORD *)(v2 + 416);
            v39 = *(_QWORD *)(v2 + 384);
            sub_1C07B9CAC();
            sub_1C07B9DA4();
            sub_1C07785A8();
            sub_1C07E6C80(v38, v39, (uint64_t (*)(_QWORD))type metadata accessor for Configuration);
            v40 = *(unsigned __int8 *)(v1 + v5);
            v45[0] = 0xD000000000000010;
            v45[1] = 0x80000001C11031D0;
            __asm { BR              X10 }
          }
          v27 = *(_QWORD *)(v2 + 416);
          sub_1C0882DC0();
          sub_1C0775810();
          *(_QWORD *)v28 = 0xD000000000000037;
          *(_QWORD *)(v28 + 8) = 0x80000001C110A1C0;
          *(_BYTE *)(v28 + 16) = 2;
          v29 = swift_willThrow();
          sub_1C078C06C(v29, &qword_1EF633030);
          sub_1C07B1F90(v27, (uint64_t (*)(_QWORD))type metadata accessor for Pipeline.StatusStore);
          sub_1C0797784();
          sub_1C07767BC();
          sub_1C07796F8();
          sub_1C07758BC();
          sub_1C0779D18();
          sub_1C077C104();
          v35 = *(uint64_t (**)(void))(v2 + 8);
          return v35();
        }
      }
      else
      {
        sub_1C0784B6C((uint64_t)v44, &qword_1EF633030);
      }
    }
    v32 = *(_QWORD *)(v2 + 344);
    v31 = *(_QWORD *)(v2 + 352);
    v33 = *(_QWORD *)(v2 + 336);
    sub_1C077A2C4(v31, v19, v20, *(_QWORD *)(v2 + 328));
    ResumableStage.createProgressToken(_:complete:)();
    v34 = (*(uint64_t (**)(uint64_t, uint64_t))(v32 + 8))(v31, v33);
    sub_1C078C06C(v34, &qword_1EF633030);
    (*(void (**)(_QWORD, uint64_t))(v4 + 56))(*(_QWORD *)(v2 + 304), v4);
    *(_BYTE *)(v2 + 440) = *(_BYTE *)(v2 + 441);
    v36 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v2 + 424) = v36;
    *v36 = v2;
    v36[1] = sub_1C0D41ED4;
    return sub_1C0D42C58((_BYTE *)(v2 + 440), *(_QWORD *)(v2 + 304), v4);
  }
  v7 = *(_QWORD *)(v2 + 176);
  v8 = (_QWORD *)sub_1C079DC28();
  sub_1C07A9480(v8, v9);
  v10 = (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 40))(v6, v7);
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v0);
  if ((v10 & 1) == 0)
    goto LABEL_8;
  if (qword_1ED761458 != -1)
    swift_once();
  v11 = sub_1C077585C();
  sub_1C079E000(v11, (uint64_t)qword_1ED78D818);
  sub_1C106F538();
  v12 = sub_1C0776928();
  v13 = sub_1C07825D0(v12);
  v14 = *(_QWORD *)(v2 + 416);
  if (v13)
  {
    v15 = *v42;
    v16 = (uint8_t *)sub_1C0775854();
    v45[0] = sub_1C0775854();
    *(_DWORD *)v16 = 136315138;
    *v41 = v15;
    swift_getMetatypeMetadata();
    v17 = sub_1C106FB5C();
    *v43 = sub_1C0788DAC(v17, v18, v45);
    sub_1C0788A7C();
    swift_bridgeObjectRelease();
    sub_1C07796F0(&dword_1C0771000, v0, (os_log_type_t)v6, "<%s - Skipping> due to presence of token", v16);
    sub_1C0778610();
    sub_1C0776778();
  }

  sub_1C078C06C(v30, &qword_1EF633030);
  sub_1C07B1F90(v14, (uint64_t (*)(_QWORD))type metadata accessor for Pipeline.StatusStore);
  sub_1C0797784();
  sub_1C07767BC();
  sub_1C07796F8();
  sub_1C07758BC();
  sub_1C0779D18();
  sub_1C077C104();
  v35 = *(uint64_t (**)(void))(v2 + 8);
  return v35();
}

uint64_t sub_1C0D41ED4()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;

  sub_1C077B0C8();
  *v2 = *v1;
  *(_QWORD *)(v3 + 432) = v0;
  swift_task_dealloc();
  sub_1C077862C();
  return sub_1C077AEC4();
}

uint64_t sub_1C0D41F24()
{
  uint64_t v0;

  sub_1C07B1F90(*(_QWORD *)(v0 + 416), (uint64_t (*)(_QWORD))type metadata accessor for Pipeline.StatusStore);
  sub_1C0797784();
  sub_1C07767BC();
  sub_1C07796F8();
  sub_1C07758BC();
  sub_1C0779D18();
  sub_1C077C104();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1C0D41F88()
{
  uint64_t v0;

  sub_1C07B1F90(*(_QWORD *)(v0 + 416), (uint64_t (*)(_QWORD))type metadata accessor for Pipeline.StatusStore);
  swift_task_dealloc();
  sub_1C07796F8();
  sub_1C07758BC();
  sub_1C0779D18();
  sub_1C077C104();
  sub_1C07767D4();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1C0D42000()
{
  return sub_1C0CCBE40();
}

uint64_t sub_1C0D42014()
{
  return sub_1C0CCBDD4();
}

uint64_t sub_1C0D42028(uint64_t a1, char a2)
{
  return sub_1C0D42050(a1, a2, (uint64_t)sub_1C0D45090, (void (*)(uint64_t, _QWORD *))sub_1C0BB97C0);
}

uint64_t sub_1C0D4203C(uint64_t a1, char a2)
{
  return sub_1C0D42050(a1, a2, (uint64_t)sub_1C0D450E8, (void (*)(uint64_t, _QWORD *))sub_1C0BB97B4);
}

uint64_t sub_1C0D42050(uint64_t a1, char a2, uint64_t a3, void (*a4)(uint64_t, _QWORD *))
{
  _QWORD v7[3];
  char v8;

  v7[2] = a1;
  v8 = a2;
  sub_1C0779758();
  a4(a3, v7);
  return sub_1C07785A8();
}

uint64_t sub_1C0D420B8@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(uint64_t, uint64_t);
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  void (*v26)(char *, uint64_t);
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(uint64_t *__return_ptr, uint64_t, uint64_t);
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v40;
  char *v41;
  char *v42;
  int v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47[3];
  ValueMetadata *v48;
  unint64_t v49;
  _BYTE v50[24];
  void *v51;
  unint64_t v52;
  uint64_t v53[3];
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;

  v45 = a1;
  v43 = a3;
  v44 = a4;
  v5 = type metadata accessor for Source();
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1C07ACF80(&qword_1ED750648);
  v56 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v41 = (char *)&v40 - v12;
  MEMORY[0x1E0C80A78](v13);
  v42 = (char *)&v40 - v14;
  type metadata accessor for ConstructionProgressTokens(0);
  v51 = &unk_1E7A1DD48;
  v46 = sub_1C0AA3FC4();
  v52 = v46;
  v50[0] = 1;
  v15 = a2[3];
  v16 = a2[4];
  sub_1C07A9480(a2, v15);
  v17 = *(_QWORD *)(v16 + 8);
  v18 = *(void (**)(uint64_t, uint64_t))(v17 + 16);
  v48 = (ValueMetadata *)sub_1C106D1F8();
  sub_1C07803F8(&qword_1ED759F48, (void (*)(uint64_t))MEMORY[0x1E0D3BB08]);
  v49 = v19;
  sub_1C079DFC4(v47);
  v18(v15, v17);
  v20 = sub_1C106BCBC();
  v54 = v20;
  v55 = MEMORY[0x1E0D23DC0];
  sub_1C079DFC4(v53);
  sub_1C106C310();
  sub_1C0784B6C((uint64_t)v47, (uint64_t *)&unk_1ED7626B0);
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v50);
  sub_1C07803F8(&qword_1ED751038, (void (*)(uint64_t))type metadata accessor for ConstructionProgressTokens);
  sub_1C106B968();
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v53);
  v21 = v46;
  v51 = &unk_1E7A1DD48;
  v52 = v46;
  v50[0] = 0;
  v22 = a2[3];
  v23 = a2[4];
  sub_1C07A9480(a2, v22);
  (*(void (**)(uint64_t))(*(_QWORD *)(v23 + 8) + 24))(v22);
  v24 = *((_QWORD *)v7 + 2);
  sub_1C07B1F90((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for Source);
  v48 = (ValueMetadata *)MEMORY[0x1E0DEB418];
  v49 = MEMORY[0x1E0D249F8];
  v47[0] = v24;
  v54 = v20;
  v55 = MEMORY[0x1E0D23DC0];
  sub_1C079DFC4(v53);
  sub_1C106C310();
  sub_1C0784B6C((uint64_t)v47, (uint64_t *)&unk_1ED7626B0);
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v50);
  sub_1C07BB218(&qword_1ED750640, &qword_1ED750648);
  v25 = v41;
  sub_1C106BDF4();
  v26 = *(void (**)(char *, uint64_t))(v56 + 8);
  v40 = v10;
  v27 = v10;
  v28 = v20;
  v26(v27, v8);
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v53);
  v51 = &unk_1E7A1DD48;
  v52 = v21;
  v50[0] = 3;
  v29 = a2[3];
  v30 = a2[4];
  sub_1C07A9480(a2, v29);
  v31 = *(_QWORD *)(v30 + 8);
  v32 = *(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v31 + 32);
  v48 = &type metadata for StageName;
  v49 = sub_1C0D450AC();
  v33 = v31;
  v34 = v42;
  v32(v47, v29, v33);
  v35 = v25;
  v36 = MEMORY[0x1E0D23DC0];
  v54 = v28;
  v55 = MEMORY[0x1E0D23DC0];
  sub_1C079DFC4(v53);
  sub_1C106C310();
  sub_1C0784B6C((uint64_t)v47, (uint64_t *)&unk_1ED7626B0);
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v50);
  sub_1C106BDF4();
  v26(v35, v8);
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v53);
  if ((v43 & 1) != 0)
  {
    v37 = v56;
    v38 = v40;
    (*(void (**)(char *, char *, uint64_t))(v56 + 16))(v40, v34, v8);
    v51 = &unk_1E7A1DD48;
    v52 = v46;
    v50[0] = 2;
    v54 = v28;
    v55 = v36;
    sub_1C079DFC4(v53);
    sub_1C106C31C();
    _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v50);
    sub_1C106BDF4();
    v26(v38, v8);
    v26(v34, v8);
    _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v53);
    (*(void (**)(char *, char *, uint64_t))(v37 + 32))(v34, v35, v8);
  }
  sub_1C07BB218(&qword_1ED750638, &qword_1ED750648);
  sub_1C07803F8(&qword_1ED751040, (void (*)(uint64_t))type metadata accessor for ConstructionProgressTokens);
  sub_1C106BAC4();
  return ((uint64_t (*)(char *, uint64_t))v26)(v34, v8);
}

uint64_t sub_1C0D425C4@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(uint64_t, uint64_t);
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  void (*v26)(char *, uint64_t);
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(uint64_t *__return_ptr, uint64_t, uint64_t);
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v40;
  char *v41;
  char *v42;
  int v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47[3];
  ValueMetadata *v48;
  unint64_t v49;
  _BYTE v50[24];
  void *v51;
  unint64_t v52;
  uint64_t v53[3];
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;

  v45 = a1;
  v43 = a3;
  v44 = a4;
  v5 = type metadata accessor for Source();
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1C07ACF80(&qword_1ED741570);
  v56 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v41 = (char *)&v40 - v12;
  MEMORY[0x1E0C80A78](v13);
  v42 = (char *)&v40 - v14;
  type metadata accessor for ProgressTokens(0);
  v51 = &unk_1E7A1DD48;
  v46 = sub_1C0AA3FC4();
  v52 = v46;
  v50[0] = 1;
  v15 = a2[3];
  v16 = a2[4];
  sub_1C07A9480(a2, v15);
  v17 = *(_QWORD *)(v16 + 8);
  v18 = *(void (**)(uint64_t, uint64_t))(v17 + 16);
  v48 = (ValueMetadata *)sub_1C106D1F8();
  sub_1C07803F8(&qword_1ED759F48, (void (*)(uint64_t))MEMORY[0x1E0D3BB08]);
  v49 = v19;
  sub_1C079DFC4(v47);
  v18(v15, v17);
  v20 = sub_1C106BCBC();
  v54 = v20;
  v55 = MEMORY[0x1E0D23DC0];
  sub_1C079DFC4(v53);
  sub_1C106C310();
  sub_1C0784B6C((uint64_t)v47, (uint64_t *)&unk_1ED7626B0);
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v50);
  sub_1C07803F8(&qword_1ED75ACA8, (void (*)(uint64_t))type metadata accessor for ProgressTokens);
  sub_1C106B968();
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v53);
  v21 = v46;
  v51 = &unk_1E7A1DD48;
  v52 = v46;
  v50[0] = 0;
  v22 = a2[3];
  v23 = a2[4];
  sub_1C07A9480(a2, v22);
  (*(void (**)(uint64_t))(*(_QWORD *)(v23 + 8) + 24))(v22);
  v24 = *((_QWORD *)v7 + 2);
  sub_1C07B1F90((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for Source);
  v48 = (ValueMetadata *)MEMORY[0x1E0DEB418];
  v49 = MEMORY[0x1E0D249F8];
  v47[0] = v24;
  v54 = v20;
  v55 = MEMORY[0x1E0D23DC0];
  sub_1C079DFC4(v53);
  sub_1C106C310();
  sub_1C0784B6C((uint64_t)v47, (uint64_t *)&unk_1ED7626B0);
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v50);
  sub_1C07BB218(&qword_1ED748268, &qword_1ED741570);
  v25 = v41;
  sub_1C106BDF4();
  v26 = *(void (**)(char *, uint64_t))(v56 + 8);
  v40 = v10;
  v27 = v10;
  v28 = v20;
  v26(v27, v8);
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v53);
  v51 = &unk_1E7A1DD48;
  v52 = v21;
  v50[0] = 3;
  v29 = a2[3];
  v30 = a2[4];
  sub_1C07A9480(a2, v29);
  v31 = *(_QWORD *)(v30 + 8);
  v32 = *(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v31 + 32);
  v48 = &type metadata for StageName;
  v49 = sub_1C0D450AC();
  v33 = v31;
  v34 = v42;
  v32(v47, v29, v33);
  v35 = v25;
  v36 = MEMORY[0x1E0D23DC0];
  v54 = v28;
  v55 = MEMORY[0x1E0D23DC0];
  sub_1C079DFC4(v53);
  sub_1C106C310();
  sub_1C0784B6C((uint64_t)v47, (uint64_t *)&unk_1ED7626B0);
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v50);
  sub_1C106BDF4();
  v26(v35, v8);
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v53);
  if ((v43 & 1) != 0)
  {
    v37 = v56;
    v38 = v40;
    (*(void (**)(char *, char *, uint64_t))(v56 + 16))(v40, v34, v8);
    v51 = &unk_1E7A1DD48;
    v52 = v46;
    v50[0] = 2;
    v54 = v28;
    v55 = v36;
    sub_1C079DFC4(v53);
    sub_1C106C31C();
    _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v50);
    sub_1C106BDF4();
    v26(v38, v8);
    v26(v34, v8);
    _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v53);
    (*(void (**)(char *, char *, uint64_t))(v37 + 32))(v34, v35, v8);
  }
  sub_1C07BB218(&qword_1ED748260, &qword_1ED741570);
  sub_1C07803F8(&qword_1ED749A48, (void (*)(uint64_t))type metadata accessor for ProgressTokens);
  sub_1C106BAC4();
  return ((uint64_t (*)(char *, uint64_t))v26)(v34, v8);
}

void sub_1C0D42AD0(uint64_t a1, uint64_t a2, void (*a3)(uint64_t), _QWORD *a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v5 = *(_QWORD *)(a2 + 16);
  if (v5)
  {
    v9 = *(_QWORD *)(((uint64_t (*)(_QWORD))a3)(0) - 8);
    v10 = a2 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    v11 = *(_QWORD *)(v9 + 72);
    sub_1C07803F8(a4, a3);
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    v12 = v5 - 1;
    do
    {
      v13 = v12;
      sub_1C106BFB0();
      if (v4)
        break;
      v12 = v13 - 1;
      v10 += v11;
    }
    while (v13);
    swift_bridgeObjectRelease();
  }
  sub_1C07757D0();
}

uint64_t sub_1C0D42B90()
{
  return sub_1C0CCB99C();
}

uint64_t sub_1C0D42BA4()
{
  return sub_1C0CCBD8C();
}

uint64_t sub_1C0D42BB8()
{
  return sub_1C0CCB734();
}

uint64_t sub_1C0D42BCC()
{
  return sub_1C0CCBC00();
}

uint64_t sub_1C0D42BE0()
{
  return sub_1C0CCBB70();
}

uint64_t sub_1C0D42BF4()
{
  return sub_1C0CCBBDC();
}

uint64_t sub_1C0D42C08()
{
  return sub_1C0CCBE1C();
}

uint64_t sub_1C0D42C1C()
{
  return sub_1C0CCBCFC();
}

uint64_t sub_1C0D42C30()
{
  return sub_1C0CCBC48();
}

uint64_t sub_1C0D42C44()
{
  return sub_1C0CCBE64();
}

uint64_t sub_1C0D42C58(_BYTE *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_QWORD *)(v4 + 40) = a3;
  *(_QWORD *)(v4 + 48) = v3;
  *(_QWORD *)(v4 + 32) = a2;
  *(_QWORD *)(v4 + 56) = *(_QWORD *)(a2 - 8);
  *(_QWORD *)(v4 + 64) = sub_1C077CF7C();
  *(_QWORD *)(v4 + 72) = sub_1C0775870();
  v6 = sub_1C106F4B4();
  *(_QWORD *)(v4 + 80) = v6;
  *(_QWORD *)(v4 + 88) = *(_QWORD *)(v6 - 8);
  *(_QWORD *)(v4 + 96) = sub_1C077CF7C();
  *(_QWORD *)(v4 + 104) = sub_1C0775870();
  v7 = sub_1C106F4E4();
  *(_QWORD *)(v4 + 112) = v7;
  *(_QWORD *)(v4 + 120) = *(_QWORD *)(v7 - 8);
  *(_QWORD *)(v4 + 128) = sub_1C077CF7C();
  *(_QWORD *)(v4 + 136) = sub_1C0775870();
  v8 = sub_1C077585C();
  *(_QWORD *)(v4 + 144) = v8;
  *(_QWORD *)(v4 + 152) = *(_QWORD *)(v8 - 8);
  *(_QWORD *)(v4 + 160) = sub_1C077CF7C();
  *(_QWORD *)(v4 + 168) = sub_1C0775870();
  v9 = sub_1C106D294();
  *(_QWORD *)(v4 + 176) = v9;
  *(_QWORD *)(v4 + 184) = *(_QWORD *)(v9 - 8);
  *(_QWORD *)(v4 + 192) = sub_1C0779644();
  *(_BYTE *)(v4 + 240) = *a1;
  sub_1C077862C();
  return sub_1C077B188();
}

uint64_t sub_1C0D42D34()
{
  _QWORD *v0;
  uint64_t v1;
  void (*v2)(uint64_t);
  NSObject *v3;
  os_signpost_type_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint8_t *v8;
  os_signpost_id_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t);
  NSObject *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(uint64_t);
  os_log_type_t v22;
  _BOOL4 v23;
  uint64_t v24;
  uint64_t v25;
  uint8_t *v26;
  uint64_t v27;
  unint64_t v28;
  void (*v29)(uint64_t, _QWORD);
  _QWORD *v30;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t (*v36)(_QWORD, _QWORD);
  uint64_t v37;

  sub_1C106F184();
  v1 = sub_1C079DC28();
  v2(v1);
  sub_1C106F4C0();
  sub_1C106F4CC();
  sub_1C106F49C();
  v3 = sub_1C106F4CC();
  v4 = sub_1C107048C();
  if ((sub_1C107054C() & 1) != 0)
  {
    v5 = v0[12];
    v6 = v0[10];
    v7 = v0[11];
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v7 + 16))(v5, v0[13], v6);
    v8 = (uint8_t *)sub_1C0775854();
    *(_WORD *)v8 = 0;
    v9 = sub_1C106F4A8();
    _os_signpost_emit_with_name_impl(&dword_1C0771000, v3, v4, v9, "graphConstruction", "", v8, 2u);
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
    sub_1C0776778();
  }
  v10 = v0[11];

  v32 = v0[19];
  v11 = v0[17];
  v33 = v0[18];
  v35 = v0[21];
  v12 = v0[15];
  v13 = v0[16];
  v14 = v0[14];
  (*(void (**)(_QWORD, _QWORD, _QWORD))(v10 + 16))(v0[12], v0[13], v0[10]);
  sub_1C106F520();
  sub_1C077B5BC();
  sub_1C106F514();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16))(v13, v11, v14);
  sub_1C106D270();
  v15 = sub_1C079507C();
  v16(v15);
  (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v11, v14);
  (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v35, v33);
  if (qword_1ED761458 != -1)
    swift_once();
  v17 = v0[9];
  v18 = v0[6];
  v19 = v0[7];
  v0[25] = sub_1C079E000(v0[18], (uint64_t)qword_1ED78D818);
  v0[26] = *(_QWORD *)(v19 + 16);
  v20 = sub_1C079DC28();
  v21(v20);
  sub_1C106F538();
  v22 = sub_1C0776928();
  v23 = sub_1C07825D0(v22);
  v24 = v0[9];
  v25 = v0[7];
  if (v23)
  {
    v34 = v0[4];
    v26 = (uint8_t *)sub_1C0775854();
    v37 = sub_1C0775854();
    *(_DWORD *)v26 = 136315138;
    v27 = sub_1C1070C0C();
    v0[3] = sub_1C0788DAC(v27, v28, &v37);
    sub_1C10705AC();
    sub_1C07785A0();
    (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v24, v34);
    sub_1C07796F0(&dword_1C0771000, v17, (os_log_type_t)v18, "StageStart %s", v26);
    sub_1C0778610();
    sub_1C0776778();
  }
  v29 = *(void (**)(uint64_t, _QWORD))(v25 + 8);
  v29(v24, v0[4]);

  v0[27] = v29;
  v36 = (uint64_t (*)(_QWORD, _QWORD))(**(int **)(v0[5] + 64) + *(_QWORD *)(v0[5] + 64));
  v30 = (_QWORD *)swift_task_alloc();
  v0[28] = v30;
  *v30 = v0;
  v30[1] = sub_1C0D430CC;
  return v36(v0[4], v0[5]);
}

uint64_t sub_1C0D430CC()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;

  sub_1C077B0C8();
  *v2 = *v1;
  *(_QWORD *)(v3 + 232) = v0;
  swift_task_dealloc();
  sub_1C077862C();
  return sub_1C077AEC4();
}

uint64_t sub_1C0D4311C()
{
  NSObject *v0;
  uint64_t v1;
  os_log_type_t v2;
  uint64_t v3;
  uint64_t v4;
  os_log_type_t v5;
  uint64_t v6;
  uint64_t v7;
  uint8_t *v8;
  uint64_t v9;
  unint64_t v10;
  void (*v12)(uint64_t, uint64_t);
  uint64_t v13;

  v4 = *(_QWORD *)(v1 + 200);
  (*(void (**)(_QWORD, _QWORD, _QWORD))(v1 + 208))(*(_QWORD *)(v1 + 64), *(_QWORD *)(v1 + 48), *(_QWORD *)(v1 + 32));
  sub_1C106F538();
  v5 = sub_1C0776928();
  if (sub_1C07825D0(v5))
  {
    v12 = *(void (**)(uint64_t, uint64_t))(v1 + 216);
    v6 = *(_QWORD *)(v1 + 64);
    v7 = *(_QWORD *)(v1 + 32);
    v8 = (uint8_t *)sub_1C0775854();
    v13 = sub_1C0775854();
    *(_DWORD *)v8 = 136315138;
    v9 = sub_1C1070C0C();
    *(_QWORD *)(v1 + 16) = sub_1C0788DAC(v9, v10, &v13);
    sub_1C0788A7C();
    swift_bridgeObjectRelease();
    v12(v6, v7);
    sub_1C07796F0(&dword_1C0771000, v0, v2, "StageFinish %s", v8);
    sub_1C0778610();
    sub_1C0776778();
  }
  (*(void (**)(_QWORD, _QWORD))(v1 + 216))(*(_QWORD *)(v1 + 64), *(_QWORD *)(v1 + 32));

  sub_1C079C890();
  sub_1C07B49A0();
  sub_1C078303C(v4, *(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
  sub_1C07767BC();
  sub_1C07758BC();
  sub_1C0779D18();
  sub_1C077C104();
  sub_1C07767D4();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return sub_1C07759B8(*(uint64_t (**)(void))(v1 + 8));
}

uint64_t sub_1C0D432A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_1C079C890();
  sub_1C07B49A0();
  sub_1C078303C(v0, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  sub_1C07767BC();
  sub_1C07758BC();
  sub_1C0779D18();
  sub_1C077C104();
  sub_1C07767D4();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return sub_1C07759B8(*(uint64_t (**)(void))(v1 + 8));
}

uint64_t sub_1C0D43328()
{
  return sub_1C0CCBA50();
}

uint64_t sub_1C0D4333C()
{
  return sub_1C0CCBCD8();
}

uint64_t sub_1C0D43350()
{
  return sub_1C0CCBABC();
}

uint64_t sub_1C0D43364()
{
  return sub_1C0CCB9E4();
}

uint64_t sub_1C0D43378()
{
  return sub_1C0CCBA98();
}

uint64_t sub_1C0D4338C()
{
  return sub_1C0CCBA08();
}

uint64_t sub_1C0D433A0()
{
  return sub_1C0CCBDB0();
}

uint64_t sub_1C0D433B4()
{
  return sub_1C0CCBC24();
}

void sub_1C0D433C8(__n128 *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  double v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  *(_QWORD *)&v4 = sub_1C07953DC(a1).n128_u64[0];
  v6 = *(_BYTE *)(v5 + 40);
  v12 = sub_1C0781838(v5, v7, v8, v9, v10, v11, v4);
  sub_1C0D45140(v12, v13, v14, v15, v16);
  sub_1C0BCD07C(v3);
  v17 = sub_1C0D43728((uint64_t)&v28, v6, v2, v1);
  v23 = sub_1C07866F4(v17, v18, v19, v20, v21, v22);
  sub_1C07AA4D8(v23, v24, v25, v26, v27);
  sub_1C07A82E8();
  sub_1C079CF78();
}

uint64_t sub_1C0D43428(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v5;
  uint64_t v6;
  char v7;
  _OWORD v9[2];
  uint64_t v10;
  uint64_t v11;
  __int128 v12;

  v5 = *(_OWORD *)(a1 + 16);
  v9[0] = *(_OWORD *)a1;
  v9[1] = v5;
  v6 = *((_QWORD *)&v5 + 1);
  v10 = *(_QWORD *)(a1 + 32);
  v11 = v5;
  v12 = v9[0];
  v7 = *(_BYTE *)(a1 + 40);
  sub_1C07B35DC((uint64_t)&v12);
  sub_1C08FD4A0((uint64_t)&v11);
  sub_1C0BCD07C(v6);
  sub_1C0D43840((uint64_t)v9, v7, a2, a3);
  sub_1C07B2F5C((uint64_t)&v12);
  sub_1C08EE9A0((uint64_t)&v11);
  return sub_1C077AB58(v6);
}

uint64_t sub_1C0D434D8(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v14[5];

  v5 = *a1;
  v6 = a1[1];
  v7 = a1[2];
  v8 = a1[3];
  v9 = a1[4];
  v10 = (uint64_t)a1 + *(int *)(sub_1C07ACF80(&qword_1ED75AB08) + 44);
  v14[0] = v5;
  v14[1] = v6;
  v14[2] = v7;
  v14[3] = v8;
  v14[4] = v9;
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  v11 = sub_1C079507C();
  sub_1C0BCD07C(v11);
  sub_1C0D43960((uint64_t)v14, v10, a2, a3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v12 = sub_1C079507C();
  return sub_1C077AB58(v12);
}

uint64_t sub_1C0D4359C(__n128 *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  double v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v16[6];
  __int128 v17;
  uint64_t v18;

  *(_QWORD *)&v4 = sub_1C078522C(a1).n128_u64[0];
  v18 = v5;
  v7 = v6[5];
  v16[4] = v6[4];
  v17 = v8;
  v9 = v6[6];
  sub_1C0781838((uint64_t)v6, v10, v11, v12, v13, v14, v4);
  sub_1C08FD4A0((uint64_t)&v18);
  sub_1C0BCD07C(v3);
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C0D43A74((uint64_t)v16, v7, v9, v2, v1);
  swift_bridgeObjectRelease();
  sub_1C07B2F5C((uint64_t)&v17);
  sub_1C08EE9A0((uint64_t)&v18);
  return sub_1C07A82E8();
}

uint64_t sub_1C0D43648(__n128 *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  double v4;
  uint64_t v5;
  double v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;

  *(_QWORD *)&v4 = sub_1C07953DC(a1).n128_u64[0];
  v6 = *(double *)(v5 + 40);
  v12 = sub_1C0781838(v5, v7, v8, v9, v10, v11, v4);
  sub_1C0D45140(v12, v13, v14, v15, v16);
  sub_1C0BCD07C(v3);
  v17 = sub_1C0D43B94((uint64_t)&v29, v2, v1, v6);
  v23 = sub_1C07866F4(v17, v18, v19, v20, v21, v22);
  sub_1C07AA4D8(v23, v24, v25, v26, v27);
  return sub_1C07A82E8();
}

void sub_1C0D436C0(__n128 *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  double v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD v30[6];
  __int128 v31;

  *(_QWORD *)&v4 = sub_1C078522C(a1).n128_u64[0];
  v6 = *(_QWORD *)(v5 + 40);
  v30[4] = *(_QWORD *)(v5 + 32);
  v30[5] = v7;
  v31 = v8;
  v14 = sub_1C0781838(v5, v9, v10, v11, v12, v13, v4);
  sub_1C0D45140(v14, v15, v16, v17, v18);
  sub_1C0BCD07C(v3);
  v19 = sub_1C0D43CAC((uint64_t)v30, v6, v2, v1);
  v25 = sub_1C07866F4(v19, v20, v21, v22, v23, v24);
  sub_1C07AA4D8(v25, v26, v27, v28, v29);
  sub_1C07A82E8();
  sub_1C079CF78();
}

uint64_t sub_1C0D43728(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  void (*v9)(uint64_t, uint64_t, _QWORD *, uint64_t, uint64_t);
  _QWORD v11[2];

  v5 = v4;
  v9 = *(void (**)(uint64_t, uint64_t, _QWORD *, uint64_t, uint64_t))(a1 + 24);
  if (v9)
  {
    LOBYTE(v11[0]) = a2;
    swift_retain();
    v9(v5, a1, v11, a3, a4);
    return sub_1C077AB58((uint64_t)v9);
  }
  else
  {
    if (a4)
    {
      v11[0] = a3;
      v11[1] = a4;
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      sub_1C106FC94();
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      sub_1C106FC94();
      swift_bridgeObjectRelease();
    }
    else
    {
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    }
    sub_1C0B79B14();
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_1C0D43840(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  void (*v9)(uint64_t, uint64_t, _QWORD *, uint64_t, uint64_t);
  _QWORD v11[2];

  v5 = v4;
  v9 = *(void (**)(uint64_t, uint64_t, _QWORD *, uint64_t, uint64_t))(a1 + 24);
  if (v9)
  {
    LOBYTE(v11[0]) = a2 & 1;
    swift_retain();
    v9(v5, a1, v11, a3, a4);
    return sub_1C077AB58((uint64_t)v9);
  }
  else
  {
    if (a4)
    {
      v11[0] = a3;
      v11[1] = a4;
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      sub_1C106FC94();
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      sub_1C106FC94();
      swift_bridgeObjectRelease();
    }
    else
    {
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    }
    sub_1C0B79A2C();
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_1C0D43960(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  void (*v10)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v5 = v4;
  v10 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a1 + 24);
  if (v10)
  {
    swift_retain();
    v10(v5, a1, a2, a3, a4);
    return sub_1C077AB58((uint64_t)v10);
  }
  else
  {
    if (a4)
    {
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      sub_1C106FC94();
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      sub_1C106FC94();
      swift_bridgeObjectRelease();
    }
    else
    {
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    }
    sub_1C0B79648();
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_1C0D43A74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  void (*v10)(uint64_t, uint64_t, uint64_t *, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;

  v6 = v5;
  v10 = *(void (**)(uint64_t, uint64_t, uint64_t *, uint64_t, uint64_t))(a1 + 24);
  if (v10)
  {
    v12 = a2;
    v13 = a3;
    swift_retain();
    v10(v6, a1, &v12, a4, a5);
    return sub_1C077AB58((uint64_t)v10);
  }
  else
  {
    if (a5)
    {
      v12 = a4;
      v13 = a5;
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      sub_1C106FC94();
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      sub_1C106FC94();
      swift_bridgeObjectRelease();
    }
    else
    {
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    }
    sub_1C0B7A048();
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_1C0D43B94(uint64_t a1, uint64_t a2, uint64_t a3, double a4)
{
  uint64_t v4;
  uint64_t v5;
  void (*v10)(uint64_t, uint64_t, _QWORD *, uint64_t, uint64_t);
  _QWORD v12[2];

  v5 = v4;
  v10 = *(void (**)(uint64_t, uint64_t, _QWORD *, uint64_t, uint64_t))(a1 + 24);
  if (v10)
  {
    *(double *)v12 = a4;
    swift_retain();
    v10(v5, a1, v12, a2, a3);
    return sub_1C077AB58((uint64_t)v10);
  }
  else
  {
    if (a3)
    {
      v12[0] = a2;
      v12[1] = a3;
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      sub_1C106FC94();
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      sub_1C106FC94();
      swift_bridgeObjectRelease();
    }
    else
    {
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    }
    sub_1C0B7A134(a4);
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_1C0D43CAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  void (*v9)(uint64_t, uint64_t, _QWORD *, uint64_t, uint64_t);
  _QWORD v11[2];

  v5 = v4;
  v9 = *(void (**)(uint64_t, uint64_t, _QWORD *, uint64_t, uint64_t))(a1 + 24);
  if (v9)
  {
    v11[0] = a2;
    swift_retain();
    v9(v5, a1, v11, a3, a4);
    return sub_1C077AB58((uint64_t)v9);
  }
  else
  {
    if (a4)
    {
      v11[0] = a3;
      v11[1] = a4;
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      sub_1C106FC94();
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      sub_1C106FC94();
      swift_bridgeObjectRelease();
    }
    else
    {
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    }
    sub_1C0B79934();
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_1C0D43DC4()
{
  return sub_1C0CCBD20();
}

uint64_t sub_1C0D43DD8()
{
  return sub_1C0CCBEAC();
}

uint64_t sub_1C0D43DEC()
{
  return sub_1C0CCBC6C();
}

uint64_t sub_1C0D43E00()
{
  return sub_1C0CCBB94();
}

uint64_t sub_1C0D43E14()
{
  return sub_1C0CCBA74();
}

uint64_t sub_1C0D43E28(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  double v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  const char *v29;
  Swift::String_optional v30;
  uint64_t countAndFlagsBits;
  void *object;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t inited;
  char *v44;
  char *v45;
  unint64_t v46;
  char v47;
  char v48;
  NSObject *v49;
  int v50;
  uint64_t result;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char v57;
  char v58;
  uint64_t v59;
  char *v60;
  uint8_t *v61;
  uint64_t v62;
  void (*v63)(uint64_t *, uint64_t *, uint64_t *);
  void (*v64)(uint64_t *, uint64_t *, uint64_t *);
  void (*v65)(uint64_t *, uint64_t *, uint64_t *);
  void (*v66)(uint64_t *, uint64_t *, uint64_t *);
  void (*v67)(uint64_t *, uint64_t *, uint64_t *);
  void (*v68)(uint64_t *, uint64_t *, uint64_t *);
  void (*v69)(uint64_t *, uint64_t *, uint64_t *);
  void (*v70)(uint64_t *, uint64_t *, uint64_t *);
  void (*v71)(uint64_t *, uint64_t *, uint64_t *);
  os_signpost_id_t v72;
  void (*v73)(char *, uint64_t);
  char *v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  const char *v85;
  const char *v86;
  uint64_t v87;
  char *v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  char v92;
  uint64_t v93;
  uint64_t v94;

  v87 = a3;
  LODWORD(v86) = a2;
  v77 = sub_1C106F4F0();
  v76 = *(_QWORD *)(v77 - 8);
  MEMORY[0x1E0C80A78](v77);
  v75 = (char *)&v74 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v81 = sub_1C106F4B4();
  v80 = *(_QWORD *)(v81 - 8);
  MEMORY[0x1E0C80A78](v81);
  v74 = (char *)&v74 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v88 = (char *)&v74 - v10;
  v79 = sub_1C106F4E4();
  v78 = *(_QWORD *)(v79 - 8);
  MEMORY[0x1E0C80A78](v79);
  v89 = (char *)&v74 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for Configuration();
  MEMORY[0x1E0C80A78](v12);
  v85 = (char *)&v74 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for PhaseStores();
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v74 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v84 = type metadata accessor for Pipeline.StatusStore();
  MEMORY[0x1E0C80A78](v84);
  v18 = (char *)&v74 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v83 = sub_1C106D1F8();
  v82 = *(_QWORD *)(v83 - 8);
  MEMORY[0x1E0C80A78](v83);
  v20 = (char *)&v74 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = type metadata accessor for Source();
  v22 = MEMORY[0x1E0C80A78](v21);
  v24 = (char *)&v74 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t, double))(a5 + 32))(&v93, a4, a5, v22);
  v93 = StageName.description.getter();
  v94 = v25;
  sub_1C106FC94();
  (*(void (**)(uint64_t, uint64_t))(a5 + 24))(a4, a5);
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C07B1F90((uint64_t)v24, (uint64_t (*)(_QWORD))type metadata accessor for Source);
  sub_1C106FC94();
  swift_bridgeObjectRelease();
  sub_1C106FC94();
  v26 = a4;
  (*(void (**)(uint64_t, uint64_t))(a5 + 16))(a4, a5);
  sub_1C106D0FC();
  (*(void (**)(char *, uint64_t))(v82 + 8))(v20, v83);
  sub_1C106FC94();
  swift_bridgeObjectRelease();
  v27 = v93;
  v28 = v94;
  (*(void (**)(uint64_t, uint64_t))(a5 + 40))(v26, a5);
  v29 = v85;
  sub_1C07E6C80((uint64_t)v16, (uint64_t)v85, (uint64_t (*)(_QWORD))type metadata accessor for Configuration);
  sub_1C07B1F90((uint64_t)v16, (uint64_t (*)(_QWORD))type metadata accessor for PhaseStores);
  sub_1C07E563C((uint64_t)v29, (uint64_t)v18, (uint64_t (*)(_QWORD))type metadata accessor for Configuration);
  v18[*(int *)(v84 + 20)] = (char)v86;
  v30 = Pipeline.StatusStore.currentSessionId()();
  countAndFlagsBits = v30.value._countAndFlagsBits;
  object = v30.value._object;
  sub_1C07B1F90((uint64_t)v18, (uint64_t (*)(_QWORD))type metadata accessor for Pipeline.StatusStore);
  if (!v30.value._object)
  {
    countAndFlagsBits = 0;
    object = (void *)0xE000000000000000;
  }
  v33 = swift_allocObject();
  *(_QWORD *)(v33 + 16) = v27;
  *(_QWORD *)(v33 + 24) = v28;
  v34 = swift_allocObject();
  *(_QWORD *)(v34 + 16) = countAndFlagsBits;
  *(_QWORD *)(v34 + 24) = object;
  v35 = swift_allocObject();
  *(_BYTE *)(v35 + 16) = 34;
  v36 = swift_allocObject();
  *(_BYTE *)(v36 + 16) = 8;
  v37 = swift_allocObject();
  *(_QWORD *)(v37 + 16) = sub_1C0CD0410;
  *(_QWORD *)(v37 + 24) = v33;
  v38 = swift_allocObject();
  *(_BYTE *)(v38 + 16) = 34;
  v39 = swift_allocObject();
  *(_BYTE *)(v39 + 16) = 8;
  v40 = swift_allocObject();
  *(_QWORD *)(v40 + 16) = sub_1C0CD0474;
  *(_QWORD *)(v40 + 24) = v34;
  v41 = swift_allocObject();
  *(_BYTE *)(v41 + 16) = 32;
  v42 = swift_allocObject();
  *(_BYTE *)(v42 + 16) = 8;
  sub_1C07ACF80(&qword_1ED762CC8);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C108BB50;
  *(_QWORD *)(inited + 32) = sub_1C0788B6C;
  *(_QWORD *)(inited + 40) = v35;
  *(_QWORD *)(inited + 48) = sub_1C0959698;
  *(_QWORD *)(inited + 56) = v36;
  *(_QWORD *)(inited + 64) = sub_1C0788D34;
  *(_QWORD *)(inited + 72) = v37;
  *(_QWORD *)(inited + 80) = sub_1C0959698;
  *(_QWORD *)(inited + 88) = v38;
  *(_QWORD *)(inited + 96) = sub_1C0959698;
  *(_QWORD *)(inited + 104) = v39;
  *(_QWORD *)(inited + 112) = sub_1C0CD047C;
  *(_QWORD *)(inited + 120) = v40;
  v44 = v88;
  *(_QWORD *)(inited + 128) = sub_1C0959698;
  *(_QWORD *)(inited + 136) = v41;
  *(_QWORD *)(inited + 144) = sub_1C0959698;
  *(_QWORD *)(inited + 152) = v42;
  v45 = v89;
  *(_QWORD *)(inited + 160) = sub_1C0D44E60;
  *(_QWORD *)(inited + 168) = 0;
  sub_1C106D258();
  v46 = sub_1C106D27C();
  v48 = v47;
  sub_1C106D288();
  v49 = sub_1C106F4CC();
  sub_1C106F508();
  v50 = sub_1C1070480();
  result = sub_1C107054C();
  if ((result & 1) == 0)
  {
    swift_release();

    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v80 + 8))(v44, v81);
    return (*(uint64_t (**)(char *, uint64_t))(v78 + 8))(v45, v79);
  }
  LODWORD(v87) = v50;
  v52 = v80;
  if ((v48 & 1) != 0)
  {
    if (!HIDWORD(v46))
    {
      if (v46 >> 11 == 27)
      {
LABEL_19:
        __break(1u);
        return result;
      }
      v54 = v77;
      v55 = v76;
      v56 = v75;
      if (WORD1(v46) <= 0x10u)
      {
        v53 = v81;
        v86 = &v92;
        goto LABEL_12;
      }
LABEL_18:
      __break(1u);
      goto LABEL_19;
    }
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  if (!v46)
  {
    __break(1u);
    goto LABEL_17;
  }
  v86 = (const char *)v46;
  v53 = v81;
  v54 = v77;
  v55 = v76;
  v56 = v75;
LABEL_12:
  swift_retain();
  sub_1C106F52C();
  swift_release();
  if ((*(unsigned int (**)(char *, uint64_t))(v55 + 88))(v56, v54) == *MEMORY[0x1E0DF2190])
  {
    v57 = 0;
    v58 = 0;
    v85 = "[Error] Interval already ended";
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v55 + 8))(v56, v54);
    v85 = "stage=%{signpost.telemetry:string1,public}s sessionId=%{signpost.telemetry:string2,public}s %s";
    v58 = 2;
    v57 = 3;
  }
  v59 = v52;
  v60 = v74;
  (*(void (**)(char *, char *, uint64_t))(v52 + 16))(v74, v44, v53);
  v61 = (uint8_t *)swift_slowAlloc();
  v62 = swift_slowAlloc();
  v91 = 0;
  v90 = v62;
  *v61 = v58;
  v61[1] = v57;
  v93 = (uint64_t)(v61 + 2);
  v63 = *(void (**)(uint64_t *, uint64_t *, uint64_t *))(inited + 32);
  swift_retain();
  v63(&v93, &v91, &v90);
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  swift_release();
  v64 = *(void (**)(uint64_t *, uint64_t *, uint64_t *))(inited + 48);
  swift_retain();
  v64(&v93, &v91, &v90);
  swift_release();
  v65 = *(void (**)(uint64_t *, uint64_t *, uint64_t *))(inited + 64);
  swift_retain();
  v65(&v93, &v91, &v90);
  swift_release();
  v66 = *(void (**)(uint64_t *, uint64_t *, uint64_t *))(inited + 80);
  swift_retain();
  v66(&v93, &v91, &v90);
  swift_release();
  v67 = *(void (**)(uint64_t *, uint64_t *, uint64_t *))(inited + 96);
  swift_retain();
  v67(&v93, &v91, &v90);
  swift_release();
  v68 = *(void (**)(uint64_t *, uint64_t *, uint64_t *))(inited + 112);
  swift_retain();
  v68(&v93, &v91, &v90);
  swift_release();
  v69 = *(void (**)(uint64_t *, uint64_t *, uint64_t *))(inited + 128);
  swift_retain();
  v69(&v93, &v91, &v90);
  swift_release();
  v70 = *(void (**)(uint64_t *, uint64_t *, uint64_t *))(inited + 144);
  swift_retain();
  v70(&v93, &v91, &v90);
  swift_release();
  v71 = *(void (**)(uint64_t *, uint64_t *, uint64_t *))(inited + 160);
  swift_retain();
  v71(&v93, &v91, &v90);
  swift_bridgeObjectRelease_n();
  swift_release();
  v72 = sub_1C106F4A8();
  _os_signpost_emit_with_name_impl(&dword_1C0771000, v49, (os_signpost_type_t)v87, v72, v86, v85, v61, 0x20u);
  v73 = *(void (**)(char *, uint64_t))(v59 + 8);
  v73(v60, v53);
  swift_arrayDestroy();
  MEMORY[0x1C3BA8270](v62, -1, -1);
  MEMORY[0x1C3BA8270](v61, -1, -1);
  swift_release();

  v73(v88, v53);
  return (*(uint64_t (**)(char *, uint64_t))(v78 + 8))(v89, v79);
}

uint64_t sub_1C0D4484C()
{
  return Stage.entityClass.getter();
}

void sub_1C0D44860()
{
  Stage.checkCancellation()();
}

void sub_1C0D44874()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  sub_1C0779670();
  v1 = v0;
  v3 = v2;
  sub_1C07ACF80(&qword_1ED75C730);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v4);
  sub_1C0778544();
  sub_1C07A9A84();
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v5);
  sub_1C077AE40();
  sub_1C07B7D38();
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v6);
  sub_1C07ACF80(&qword_1ED75ACF8);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v7);
  sub_1C077962C();
  type metadata accessor for ProgressTokens(0);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v8);
  sub_1C077AE40();
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)(v1 + 8) + 48))(&v10, v3, *(_QWORD *)(v1 + 8));
  sub_1C077F0E4();
  __asm { BR              X10 }
}

void sub_1C0D4498C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;

  *(_QWORD *)(v6 - 160) = v1;
  v7 = sub_1C077F66C();
  swift_bridgeObjectRelease();
  if ((v7 & 1) == 0)
  {
    sub_1C07A3408();
    sub_1C07AF044();
    sub_1C07B1F90(v2, (uint64_t (*)(_QWORD))type metadata accessor for PhaseStores);
    *(_QWORD *)(v6 - 96) = v0;
    *(_QWORD *)(v6 - 88) = v5;
    v12 = sub_1C07812A4();
    sub_1C07B7508((uint64_t)v12);
    v13 = *(_QWORD *)(v6 - 160);
    sub_1C078A504(v6 - 120, v14, (uint64_t)sub_1C0D450E8, (void (*)(uint64_t, _QWORD *))sub_1C0BB97B4);
    sub_1C077AF1C();
    sub_1C0779A4C();
    v15 = *(_QWORD *)(v6 - 136);
    if (sub_1C07B2D80(v13, 1, v15) == 1)
    {
      v10 = &qword_1ED75C730;
      v11 = v13;
      goto LABEL_6;
    }
    v21 = v13;
    v22 = *(_QWORD *)(v6 - 152);
    sub_1C07B61E4(v21, v22);
    v23 = *(uint64_t **)(v6 - 128);
    v23[3] = v15;
    v23[4] = (uint64_t)&off_1E7A1D138;
    v19 = sub_1C079DFC4(v23);
    v20 = v22;
LABEL_9:
    sub_1C07B61E4(v20, (uint64_t)v19);
    goto LABEL_10;
  }
  sub_1C07A3408();
  sub_1C07AF044();
  sub_1C07B1F90(v2, (uint64_t (*)(_QWORD))type metadata accessor for PhaseStores);
  *(_QWORD *)(v6 - 96) = v0;
  *(_QWORD *)(v6 - 88) = v5;
  v8 = sub_1C07812A4();
  sub_1C07B7508((uint64_t)v8);
  sub_1C078A504(v6 - 120, v9, (uint64_t)sub_1C0D45090, (void (*)(uint64_t, _QWORD *))sub_1C0BB97C0);
  sub_1C077AF1C();
  sub_1C0779A4C();
  if (sub_1C07B2D80(v3, 1, v4) != 1)
  {
    v17 = *(_QWORD *)(v6 - 144);
    sub_1C07B61E4(v3, v17);
    v18 = *(uint64_t **)(v6 - 128);
    v18[3] = v4;
    v18[4] = (uint64_t)&off_1E7A1D0E0;
    v19 = sub_1C079DFC4(v18);
    v20 = v17;
    goto LABEL_9;
  }
  v10 = &qword_1ED75ACF8;
  v11 = v3;
LABEL_6:
  sub_1C0784B6C(v11, v10);
  v16 = *(_QWORD *)(v6 - 128);
  *(_QWORD *)(v16 + 32) = 0;
  *(_OWORD *)v16 = 0u;
  *(_OWORD *)(v16 + 16) = 0u;
LABEL_10:
  sub_1C0776760();
}

uint64_t sub_1C0D44B44(uint64_t *a1)
{
  uint64_t v1;
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  unint64_t v12;

  sub_1C106A774();
  swift_allocObject();
  sub_1C106A768();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v5 = swift_getAssociatedConformanceWitness();
  v6 = type metadata accessor for ProgressToken(0, AssociatedTypeWitness, AssociatedConformanceWitness, v5);
  MEMORY[0x1C3BA8174](&protocol conformance descriptor for ProgressToken<A>, v6);
  v7 = sub_1C106A75C();
  v9 = v8;
  result = swift_release();
  if (!v1)
  {
    v11 = *a1;
    v12 = a1[1];
    *a1 = v7;
    a1[1] = v9;
    return sub_1C07B33B8(v11, v12);
  }
  return result;
}

void sub_1C0D44C78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD, double))
{
  uint64_t v5;
  uint64_t AssociatedTypeWitness;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  double v15;
  uint64_t v16;
  char *v17;
  uint64_t *v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v10 = sub_1C07B8640();
  v11 = sub_1C07B8640();
  v12 = type metadata accessor for ProgressToken(255, AssociatedTypeWitness, v10, v11);
  v13 = sub_1C1070564();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x1E0C80A78](v13);
  v17 = (char *)&v21 - v16;
  v18 = (uint64_t *)(a1 + *(int *)(a5(0, v15) + 28));
  v19 = v18[1];
  if (v19 >> 60 != 15)
  {
    v20 = *v18;
    sub_1C106A708();
    swift_allocObject();
    sub_1C07B0E28(v20, v19);
    sub_1C106A6FC();
    MEMORY[0x1C3BA8174](&protocol conformance descriptor for ProgressToken<A>, v12);
    sub_1C106A6F0();
    sub_1C07B33B8(v20, v19);
    swift_release();
    if (!v5)
    {
      sub_1C07B2D8C((uint64_t)v17, 0, 1, v12);
      (*(void (**)(uint64_t, char *, uint64_t))(v14 + 40))(a2, v17, v13);
    }
  }
  sub_1C07757D0();
}

uint64_t sub_1C0D44E10()
{
  return sub_1C0CCBB04();
}

uint64_t sub_1C0D44E24()
{
  return sub_1C0CCBB28();
}

uint64_t sub_1C0D44E38()
{
  return sub_1C0CCBAE0();
}

uint64_t sub_1C0D44E4C()
{
  return sub_1C0CCB9C0();
}

void sub_1C0D44E60(uint64_t *a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  sub_1C106D264();
  v5 = sub_1C1070798();
  sub_1C0788DAC(v5, v6, a3);
  v7 = *a1 + 8;
  sub_1C10705AC();
  sub_1C0775844();
  *a1 = v7;
  sub_1C0776784();
}

uint64_t dispatch thunk of Stage.entityClass.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of Stage.source.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of Stage.stageName.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of Stage.stores.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of Stage.pipelineType.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t dispatch thunk of Stage.checkCancellation()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t dispatch thunk of Stage.execute()(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t, uint64_t);

  v7 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(a2 + 64) + *(_QWORD *)(a2 + 64));
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1C09C8DA8;
  return v7(a1, a2);
}

void sub_1C0D44F70(uint64_t a1)
{
  uint64_t v1;

  sub_1C0D42AD0(a1, *(_QWORD *)(v1 + 16), (void (*)(uint64_t))type metadata accessor for GraphTriple, qword_1ED7493B8);
}

uint64_t sub_1C0D44FA0()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C0D44FCC()
{
  swift_release();
  return swift_deallocObject();
}

void sub_1C0D45000(uint64_t a1)
{
  uint64_t v1;

  sub_1C0D42AD0(a1, *(_QWORD *)(v1 + 16), (void (*)(uint64_t))type metadata accessor for EntityMatch, &qword_1ED759C90);
}

void sub_1C0D45030(uint64_t a1)
{
  uint64_t v1;

  sub_1C0D42AD0(a1, *(_QWORD *)(v1 + 16), (void (*)(uint64_t))type metadata accessor for ProgressTokens, &qword_1ED749A50);
}

void sub_1C0D45060(uint64_t a1)
{
  uint64_t v1;

  sub_1C0D42AD0(a1, *(_QWORD *)(v1 + 16), (void (*)(uint64_t))type metadata accessor for ConstructionProgressTokens, &qword_1ED751048);
}

uint64_t sub_1C0D45090@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1C0D425C4(a1, *(_QWORD **)(v2 + 16), *(unsigned __int8 *)(v2 + 24), a2);
}

unint64_t sub_1C0D450AC()
{
  unint64_t result;

  result = qword_1ED755EE8;
  if (!qword_1ED755EE8)
  {
    result = MEMORY[0x1C3BA8174](&protocol conformance descriptor for StageName, &type metadata for StageName);
    atomic_store(result, (unint64_t *)&qword_1ED755EE8);
  }
  return result;
}

uint64_t sub_1C0D450E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1C0D420B8(a1, *(_QWORD **)(v2 + 16), *(unsigned __int8 *)(v2 + 24), a2);
}

void sub_1C0D45104(uint64_t a1)
{
  uint64_t v1;

  sub_1C0D42AD0(a1, *(_QWORD *)(v1 + 16), (void (*)(uint64_t))type metadata accessor for EntityTriple, &qword_1ED759CC0);
}

uint64_t sub_1C0D45140(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  return sub_1C08FD4A0((uint64_t)va);
}

uint64_t StageName.databaseValue.getter()
{
  _BYTE *v0;
  uint64_t result;

  switch(*v0)
  {
    case 6:
      sub_1C0795404();
      break;
    case 7:
      sub_1C079E8E0();
      break;
    case 8:
      sub_1C079BA00();
      break;
    case 9:
      sub_1C07882DC();
      break;
    case 0xA:
      sub_1C07A60A8();
      break;
    default:
      sub_1C079779C();
      sub_1C078B428();
      __asm { BR              X10 }
      return result;
  }
  return sub_1C106FB8C();
}

uint64_t sub_1C0D45214()
{
  uint64_t v0;
  uint64_t v1;

  v1 = sub_1C106FC94(0x676E69686374616DLL, v0);
  sub_1C0775844(v1);
  ((void (*)())sub_1C106FB8C)();
  return ((uint64_t (*)())swift_bridgeObjectRelease)();
}

uint64_t sub_1C0D45238()
{
  sub_1C079D88C();
  sub_1C106FC94();
  sub_1C0775844();
  sub_1C106FB8C();
  return swift_bridgeObjectRelease();
}

void sub_1C0D45248()
{
  sub_1C07A579C();
  JUMPOUT(0x1C0D45250);
}

uint64_t LinkingSubStageName.rawValue.getter()
{
  uint64_t v0;
  uint64_t v1;

  v0 = sub_1C078B428();
  return ((uint64_t (*)(uint64_t))((char *)sub_1C0D452B4 + 4 * byte_1C10B7DEB[v1]))(v0);
}

uint64_t sub_1C0D452B4()
{
  return sub_1C0793FA8();
}

uint64_t sub_1C0D452D4()
{
  return 0x676E69686374616DLL;
}

uint64_t sub_1C0D452F8()
{
  return sub_1C079D88C();
}

uint64_t sub_1C0D45310()
{
  return sub_1C07A579C();
}

void static StageName.fromDatabaseValue(_:)(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  char v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint64_t v17;
  unint64_t v18;
  BOOL v19;
  BOOL v20;
  BOOL v21;
  uint64_t v22;
  uint64_t v23;
  BOOL v24;
  BOOL v25;
  uint64_t v26[3];

  v5 = sub_1C106BC8C();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  sub_1C07795DC();
  v7 = sub_1C106FBA4();
  if (!v8)
  {
    if (qword_1ED761458 != -1)
      swift_once();
    v13 = sub_1C106F544();
    sub_1C079E000(v13, (uint64_t)qword_1ED78D818);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v2, a1, v5);
    v14 = sub_1C106F538();
    v15 = sub_1C1070390();
    if (os_log_type_enabled(v14, v15))
    {
      v16 = (uint8_t *)swift_slowAlloc();
      v26[0] = swift_slowAlloc();
      *(_DWORD *)v16 = 136380675;
      sub_1C0D305C0();
      v17 = sub_1C1070C0C();
      v26[2] = sub_1C0788DAC(v17, v18, v26);
      sub_1C10705AC();
      swift_bridgeObjectRelease();
      sub_1C07B4418();
      _os_log_impl(&dword_1C0771000, v14, v15, "StageName: failed to initialize from database value: %{private}s", v16, 0xCu);
      swift_arrayDestroy();
      sub_1C0776778();
    }
    sub_1C07B4418();

    v12 = 11;
    goto LABEL_19;
  }
  v9 = v7;
  v10 = v8;
  v11 = v7 == 0x676E696372756F73 && v8 == 0xE800000000000000;
  if (v11 || (sub_1C0795404(), (sub_1C0797720() & 1) != 0))
  {
    sub_1C0775844();
    v12 = 6;
LABEL_19:
    *a2 = v12;
    return;
  }
  v19 = v9 == 0x6E49656372756F73 && v10 == 0xEF6E6F6974736567;
  if (v19 || (sub_1C07882DC(), (sub_1C0797720() & 1) != 0))
  {
    sub_1C0775844();
    v12 = 9;
    goto LABEL_19;
  }
  v20 = v9 == 0x726F66736E617274 && v10 == 0xEC000000676E696DLL;
  if (v20 || (sub_1C079E8E0(), (sub_1C0797720() & 1) != 0))
  {
    sub_1C0775844();
    v12 = 7;
    goto LABEL_19;
  }
  v21 = v9 == 0x676E697070616DLL && v10 == 0xE700000000000000;
  if (v21 || (sub_1C079BA00(), (sub_1C0797720() & 1) != 0))
  {
    sub_1C0775844();
    v12 = 8;
    goto LABEL_19;
  }
  if (v9 == 0xD000000000000010 && (sub_1C079AFA0(), v11) || (sub_1C0797720() & 1) != 0)
  {
    sub_1C0775844();
    v12 = 0;
    goto LABEL_19;
  }
  if (v9 == 0xD000000000000016 && (sub_1C079AFA0(), v11) || (sub_1C0797720() & 1) != 0)
  {
    sub_1C0775844();
    v12 = 1;
    goto LABEL_19;
  }
  if (v9 == 0xD000000000000010 && (sub_1C079AFA0(), v11) || (sub_1C0797720() & 1) != 0)
  {
    sub_1C0775844();
    v12 = 2;
    goto LABEL_19;
  }
  if (v9 == 0xD000000000000010 && (sub_1C079AFA0(), v11) || (sub_1C0797720() & 1) != 0)
  {
    sub_1C0775844();
    v12 = 3;
    goto LABEL_19;
  }
  if (v9 == 0xD000000000000012 && (sub_1C079AFA0(), v11) || (sub_1C0797720() & 1) != 0)
  {
    sub_1C0775844();
    v12 = 4;
    goto LABEL_19;
  }
  sub_1C079779C();
  v24 = v9 == v23 && v10 == v22;
  if (v24 || (sub_1C0797720() & 1) != 0)
  {
    sub_1C0775844();
    v12 = 5;
    goto LABEL_19;
  }
  v25 = v9 == 0x6E6F69737566 && v10 == 0xE600000000000000;
  if (v25 || (sub_1C07A60A8(), (sub_1C0797720() & 1) != 0))
  {
    sub_1C0775844();
    v12 = 10;
    goto LABEL_19;
  }
  sub_1C1070774();
  swift_bridgeObjectRelease();
  sub_1C106FC94();
  sub_1C0775844();
  sub_1C106FC94();
  sub_1C1070954();
  __break(1u);
}

uint64_t StageName.description.getter()
{
  _BYTE *v0;
  uint64_t result;

  result = 0x676E696372756F73;
  switch(*v0)
  {
    case 6:
      return result;
    case 7:
      result = 0x726F66736E617274;
      break;
    case 8:
      result = 0x676E697070616DLL;
      break;
    case 9:
      result = 0x6E49656372756F73;
      break;
    case 0xA:
      result = 0x6E6F69737566;
      break;
    default:
      sub_1C079779C();
      sub_1C078B428();
      __asm { BR              X10 }
      return result;
  }
  return result;
}

void static StageName.== infix(_:_:)(_BYTE *a1, unsigned __int8 *a2)
{
  int v2;

  v2 = *a2;
  switch(*a1)
  {
    case 6:
    case 7:
    case 8:
    case 9:
    case 0xA:
      return;
    default:
      if ((v2 - 6) >= 5)
        sub_1C08C440C();
      break;
  }
}

uint64_t sub_1C0D45A44(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  BOOL v7;
  BOOL v8;
  BOOL v9;
  char v11;

  v2 = a1 == 0x676E696372756F73 && a2 == 0xE800000000000000;
  if (v2 || (sub_1C1070CB4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x726F66736E617274 && a2 == 0xEC000000676E696DLL;
    if (v6 || (sub_1C1070CB4() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      v7 = a1 == 0x676E697070616DLL && a2 == 0xE700000000000000;
      if (v7 || (sub_1C1070CB4() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else
      {
        v8 = a1 == 0x6E49656372756F73 && a2 == 0xEF6E6F6974736567;
        if (v8 || (sub_1C1070CB4() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 3;
        }
        else
        {
          v9 = a1 == 0x676E696B6E696CLL && a2 == 0xE700000000000000;
          if (v9 || (sub_1C1070CB4() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 4;
          }
          else if (a1 == 0x6E6F69737566 && a2 == 0xE600000000000000)
          {
            swift_bridgeObjectRelease();
            return 5;
          }
          else
          {
            v11 = sub_1C1070CB4();
            swift_bridgeObjectRelease();
            if ((v11 & 1) != 0)
              return 5;
            else
              return 6;
          }
        }
      }
    }
  }
}

uint64_t sub_1C0D45CE4(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1C0D45D18 + 4 * byte_1C10B7E01[a1]))(0x676E696372756F73, 0xE800000000000000);
}

uint64_t sub_1C0D45D18()
{
  return 0x726F66736E617274;
}

uint64_t sub_1C0D45D38()
{
  return 0x676E697070616DLL;
}

uint64_t sub_1C0D45D84()
{
  return 0x6E6F69737566;
}

uint64_t sub_1C0D45D98(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 0x6567617453627573 && a2 == 0xEC000000656D614ELL)
  {
    swift_bridgeObjectRelease();
    v4 = 0;
  }
  else
  {
    v3 = sub_1C1070CB4();
    swift_bridgeObjectRelease();
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_1C0D45E34()
{
  return 0x6567617453627573;
}

uint64_t sub_1C0D45E54()
{
  unsigned __int8 *v0;

  return sub_1C0D45CE4(*v0);
}

uint64_t sub_1C0D45E5C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1C0D45A44(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C0D45E80()
{
  sub_1C0D46B9C();
  return sub_1C1070EE8();
}

uint64_t sub_1C0D45EA8()
{
  sub_1C0D46B9C();
  return sub_1C1070EF4();
}

uint64_t sub_1C0D45ED0()
{
  sub_1C0D46BD8();
  return sub_1C1070EE8();
}

uint64_t sub_1C0D45EF8()
{
  sub_1C0D46BD8();
  return sub_1C1070EF4();
}

uint64_t sub_1C0D45F24@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1C0D45D98(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1C0D45F4C()
{
  sub_1C0D46C14();
  return sub_1C1070EE8();
}

uint64_t sub_1C0D45F74()
{
  sub_1C0D46C14();
  return sub_1C1070EF4();
}

uint64_t sub_1C0D45F9C()
{
  sub_1C0D46CC8();
  return sub_1C1070EE8();
}

uint64_t sub_1C0D45FC4()
{
  sub_1C0D46CC8();
  return sub_1C1070EF4();
}

uint64_t sub_1C0D45FEC()
{
  sub_1C0D46C8C();
  return sub_1C1070EE8();
}

uint64_t sub_1C0D46014()
{
  sub_1C0D46C8C();
  return sub_1C1070EF4();
}

uint64_t sub_1C0D4603C()
{
  sub_1C0D46D40();
  return sub_1C1070EE8();
}

uint64_t sub_1C0D46064()
{
  sub_1C0D46D40();
  return sub_1C1070EF4();
}

uint64_t sub_1C0D4608C()
{
  sub_1C0D46D04();
  return sub_1C1070EE8();
}

uint64_t sub_1C0D460B4()
{
  sub_1C0D46D04();
  return sub_1C1070EF4();
}

void StageName.encode(to:)(_QWORD *a1)
{
  unsigned __int8 *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(uint64_t, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(uint64_t, uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;

  v48 = sub_1C07ACF80(&qword_1EF648688);
  v46 = *(_QWORD *)(v48 - 8);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v3);
  sub_1C0782928(v4, v33);
  v47 = sub_1C07ACF80(&qword_1EF648690);
  v45 = *(_QWORD *)(v47 - 8);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v5);
  sub_1C078BC74(v6, v34);
  v7 = sub_1C07ACF80(&qword_1EF648698);
  v41 = *(_QWORD *)(v7 - 8);
  v42 = v7;
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v8);
  sub_1C077AE40();
  v40 = v9;
  v10 = sub_1C07ACF80(&qword_1EF6486A0);
  v38 = *(_QWORD *)(v10 - 8);
  v39 = v10;
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v11);
  sub_1C077AE40();
  v37 = v12;
  v13 = sub_1C07ACF80(&qword_1EF6486A8);
  v35 = *(_QWORD *)(v13 - 8);
  v36 = v13;
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v14);
  sub_1C0778564();
  v17 = v16 - v15;
  v18 = sub_1C07ACF80(&qword_1EF6486B0);
  v19 = *(_QWORD *)(v18 - 8);
  MEMORY[0x1E0C80A78](v18);
  sub_1C0778564();
  v22 = v21 - v20;
  v49 = sub_1C07ACF80(&qword_1EF6486B8);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v23);
  sub_1C077AE40();
  v24 = *v1;
  v25 = a1[4];
  sub_1C07A9480(a1, a1[3]);
  sub_1C0D46B9C();
  sub_1C1070EB8();
  switch(v24)
  {
    case 6:
      sub_1C0D46D40();
      sub_1C079A170();
      (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v22, v18);
      goto LABEL_9;
    case 7:
      sub_1C079F870();
      sub_1C079A170();
      (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v17, v36);
      goto LABEL_9;
    case 8:
      sub_1C079C8B0();
      v28 = v37;
      sub_1C079A170();
      v30 = v38;
      v29 = v39;
      goto LABEL_7;
    case 9:
      sub_1C07A1FCC();
      v28 = v40;
      sub_1C079A170();
      v30 = v41;
      v29 = v42;
LABEL_7:
      (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v28, v29);
      goto LABEL_9;
    case 10:
      sub_1C0791FD4();
      sub_1C079A170();
      (*(void (**)(uint64_t, uint64_t))(v46 + 8))(v44, v48);
LABEL_9:
      v31 = sub_1C0794968();
      v32(v31, v25);
      break;
    default:
      sub_1C0793304();
      sub_1C1070B1C();
      sub_1C0D46C50();
      sub_1C1070BB8();
      (*(void (**)(uint64_t, uint64_t))(v45 + 8))(v43, v47);
      v26 = sub_1C0794968();
      v27(v26, v49);
      break;
  }
  sub_1C07757D0();
}

void StageName.init(from:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  sub_1C07ACF80(&qword_1EF648700);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v2);
  sub_1C0782928(v3, v21);
  sub_1C07ACF80(&qword_1EF648708);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v4);
  sub_1C077AE40();
  sub_1C07ACF80(&qword_1EF648710);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v5);
  sub_1C078BC74(v6, v22);
  sub_1C07ACF80(&qword_1EF648718);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v7);
  sub_1C077AE40();
  sub_1C07ACF80(&qword_1EF648720);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v8);
  sub_1C077AE40();
  v9 = sub_1C07ACF80(&qword_1EF648728);
  MEMORY[0x1E0C80A78](v9);
  sub_1C07795DC();
  v10 = sub_1C07ACF80(&qword_1EF648730);
  MEMORY[0x1E0C80A78](v10);
  sub_1C0778564();
  v23 = (uint64_t)a1;
  sub_1C07A9480(a1, a1[3]);
  sub_1C0D46B9C();
  sub_1C1070E94();
  if (!v24)
  {
    v11 = sub_1C1070AF8();
    v12 = *(_QWORD *)(v11 + 16);
    if (v12)
    {
      v13 = *(unsigned __int8 *)(v11 + 32);
      sub_1C07D02BC(1, v12, v11, v11 + 32, 0, (2 * v12) | 1);
      v15 = v14;
      v17 = v16;
      swift_bridgeObjectRelease();
      if (v15 == v17 >> 1)
        __asm { BR              X9 }
    }
    v18 = sub_1C10707EC();
    swift_allocError();
    v20 = v19;
    sub_1C07ACF80(&qword_1ED752E80);
    *v20 = &type metadata for StageName;
    sub_1C1070A44();
    sub_1C10707E0();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v18 - 8) + 104))(v20, *MEMORY[0x1E0DEC450], v18);
    swift_willThrow();
    sub_1C0796B30();
    sub_1C07A147C();
  }
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0(v23);
  sub_1C07757D0();
}

void sub_1C0D467AC()
{
  uint64_t v0;
  uint64_t v1;

  sub_1C079F870();
  sub_1C079916C();
  if (!v0)
  {
    sub_1C0795CEC(*(_QWORD *)(v1 - 232));
    sub_1C0796B30();
    sub_1C07A147C();
    **(_BYTE **)(v1 - 128) = 7;
    JUMPOUT(0x1C0D46798);
  }
  JUMPOUT(0x1C0D4678CLL);
}

void sub_1C0D467EC()
{
  uint64_t v0;
  uint64_t v1;

  sub_1C079C8B0();
  sub_1C079916C();
  if (!v0)
  {
    sub_1C0795CEC(*(_QWORD *)(v1 - 216));
    sub_1C0796B30();
    sub_1C07A147C();
    **(_BYTE **)(v1 - 128) = 8;
    JUMPOUT(0x1C0D46798);
  }
  JUMPOUT(0x1C0D4678CLL);
}

void sub_1C0D4682C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t, uint64_t);

  sub_1C07A1FCC();
  sub_1C079916C();
  if (!v0)
  {
    v3 = sub_1C0794968();
    v4(v3, v1);
    sub_1C0796B30();
    sub_1C07A147C();
    **(_BYTE **)(v2 - 128) = 9;
    JUMPOUT(0x1C0D46798);
  }
  JUMPOUT(0x1C0D4678CLL);
}

void sub_1C0D46874()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_1C0793304();
  v1 = *(_QWORD *)(v0 - 272);
  sub_1C1070A38();
  if (v1)
  {
    sub_1C0796B30();
    sub_1C079818C(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 - 240) + 8));
    JUMPOUT(0x1C0D46798);
  }
  sub_1C0D46D7C();
  sub_1C1070AE0();
  v2 = *(_QWORD *)(v0 - 240);
  sub_1C07A2B08();
  sub_1C0796B30();
  sub_1C079818C(*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  JUMPOUT(0x1C0D46918);
}

void sub_1C0D468C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v3 = v1;
  sub_1C0791FD4();
  v4 = *(_QWORD *)(v2 - 144);
  sub_1C079916C();
  if (!v0)
  {
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 184) + 8))(v4, v3);
    sub_1C0796B30();
    sub_1C07A147C();
    JUMPOUT(0x1C0D46910);
  }
  JUMPOUT(0x1C0D4678CLL);
}

void sub_1C0D4699C(_QWORD *a1)
{
  StageName.init(from:)(a1);
}

void sub_1C0D469B0(_QWORD *a1)
{
  StageName.encode(to:)(a1);
}

uint64_t sub_1C0D469D0()
{
  sub_1C0D475E8();
  return sub_1C106C208();
}

uint64_t sub_1C0D46A08()
{
  sub_1C0D475E8();
  return sub_1C106C214();
}

IntelligencePlatformCore::LinkingSubStageName_optional __swiftcall LinkingSubStageName.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  IntelligencePlatformCore::LinkingSubStageName_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1C1070A2C();
  result.value = swift_bridgeObjectRelease();
  v5 = 6;
  if (v3 < 6)
    v5 = v3;
  *v2 = v5;
  return result;
}

void sub_1C0D46AA0()
{
  sub_1C0A5411C();
}

void sub_1C0D46AA8()
{
  sub_1C08C9D40();
}

void sub_1C0D46AB0()
{
  sub_1C0A54830();
}

IntelligencePlatformCore::LinkingSubStageName_optional sub_1C0D46AB8(Swift::String *a1)
{
  return LinkingSubStageName.init(rawValue:)(*a1);
}

uint64_t sub_1C0D46AC4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = LinkingSubStageName.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1C0D46AE8()
{
  sub_1C0D475AC();
  return sub_1C106FE8C();
}

uint64_t sub_1C0D46B44()
{
  sub_1C0D475AC();
  return sub_1C106FE50();
}

void sub_1C0D46B90()
{
  sub_1C08C440C();
}

unint64_t sub_1C0D46B9C()
{
  unint64_t result;

  result = qword_1EF6486C0;
  if (!qword_1EF6486C0)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10B8664, &type metadata for StageName.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF6486C0);
  }
  return result;
}

unint64_t sub_1C0D46BD8()
{
  unint64_t result;

  result = qword_1EF6486C8;
  if (!qword_1EF6486C8)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10B8614, &type metadata for StageName.FusionCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF6486C8);
  }
  return result;
}

unint64_t sub_1C0D46C14()
{
  unint64_t result;

  result = qword_1EF6486D0;
  if (!qword_1EF6486D0)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10B85C4, &type metadata for StageName.LinkingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF6486D0);
  }
  return result;
}

unint64_t sub_1C0D46C50()
{
  unint64_t result;

  result = qword_1EF6486D8;
  if (!qword_1EF6486D8)
  {
    result = MEMORY[0x1C3BA8174](&protocol conformance descriptor for LinkingSubStageName, &type metadata for LinkingSubStageName);
    atomic_store(result, (unint64_t *)&qword_1EF6486D8);
  }
  return result;
}

unint64_t sub_1C0D46C8C()
{
  unint64_t result;

  result = qword_1EF6486E0;
  if (!qword_1EF6486E0)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10B8574, &type metadata for StageName.SourceIngestionCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF6486E0);
  }
  return result;
}

unint64_t sub_1C0D46CC8()
{
  unint64_t result;

  result = qword_1EF6486E8;
  if (!qword_1EF6486E8)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10B8524, &type metadata for StageName.MappingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF6486E8);
  }
  return result;
}

unint64_t sub_1C0D46D04()
{
  unint64_t result;

  result = qword_1EF6486F0;
  if (!qword_1EF6486F0)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10B84D4, &type metadata for StageName.TransformingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF6486F0);
  }
  return result;
}

unint64_t sub_1C0D46D40()
{
  unint64_t result;

  result = qword_1EF6486F8;
  if (!qword_1EF6486F8)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10B8484, &type metadata for StageName.SourcingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF6486F8);
  }
  return result;
}

unint64_t sub_1C0D46D7C()
{
  unint64_t result;

  result = qword_1EF648738;
  if (!qword_1EF648738)
  {
    result = MEMORY[0x1C3BA8174](&protocol conformance descriptor for LinkingSubStageName, &type metadata for LinkingSubStageName);
    atomic_store(result, (unint64_t *)&qword_1EF648738);
  }
  return result;
}

unint64_t sub_1C0D46DC0()
{
  unint64_t result;

  result = qword_1ED75D088;
  if (!qword_1ED75D088)
  {
    result = MEMORY[0x1C3BA8174](&protocol conformance descriptor for StageName, &type metadata for StageName);
    atomic_store(result, (unint64_t *)&qword_1ED75D088);
  }
  return result;
}

unint64_t sub_1C0D46E00()
{
  unint64_t result;

  result = qword_1EF648740;
  if (!qword_1EF648740)
  {
    result = MEMORY[0x1C3BA8174](&protocol conformance descriptor for LinkingSubStageName, &type metadata for LinkingSubStageName);
    atomic_store(result, (unint64_t *)&qword_1EF648740);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for StageName(unsigned __int8 *a1, unsigned int a2)
{
  unsigned int v2;
  unsigned int v3;
  uint64_t v4;
  unsigned int v6;
  unsigned int v7;

  if (!a2)
    return 0;
  if (a2 < 0xF6)
  {
    v6 = *a1;
    if (v6 >= 6)
      v7 = v6 - 5;
    else
      v7 = 0;
    if (v7 >= 6)
      return v7 - 5;
    else
      return 0;
  }
  else
  {
    v2 = a2 + 10;
    if (a2 + 10 >= 0xFFFF00)
      v3 = 4;
    else
      v3 = 2;
    if (v2 >> 8 < 0xFF)
      v3 = 1;
    if (v2 >= 0x100)
      v4 = v3;
    else
      v4 = 0;
    return ((uint64_t (*)(void))((char *)&loc_1C0D46E8C + 4 * byte_1C10B7E12[v4]))();
  }
}

uint64_t storeEnumTagSinglePayload for StageName(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  unsigned int v3;
  int v4;
  uint64_t v5;

  v3 = a3 + 10;
  if (a3 + 10 >= 0xFFFF00)
    v4 = 4;
  else
    v4 = 2;
  if (v3 >> 8 < 0xFF)
    v4 = 1;
  if (v3 >= 0x100)
    LODWORD(v5) = v4;
  else
    LODWORD(v5) = 0;
  if (a3 >= 0xF6)
    v5 = v5;
  else
    v5 = 0;
  if (a2 <= 0xF5)
    return ((uint64_t (*)(void))((char *)&loc_1C0D46F38 + 4 * byte_1C10B7E1C[v5]))();
  *a1 = a2 + 10;
  return ((uint64_t (*)(void))((char *)sub_1C0D46F6C + 4 * byte_1C10B7E17[v5]))();
}

uint64_t sub_1C0D46F6C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C0D46F74(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C0D46F7CLL);
  return result;
}

uint64_t sub_1C0D46F88(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C0D46F90);
  *(_BYTE *)result = a2 + 10;
  return result;
}

uint64_t sub_1C0D46F94(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C0D46F9C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C0D46FA8(unsigned __int8 *a1)
{
  unsigned int v1;

  v1 = *a1;
  if (v1 >= 6)
    return v1 - 5;
  else
    return 0;
}

_BYTE *sub_1C0D46FBC(_BYTE *result, int a2)
{
  if (a2)
    *result = a2 + 5;
  return result;
}

ValueMetadata *type metadata accessor for StageName()
{
  return &type metadata for StageName;
}

ValueMetadata *type metadata accessor for LinkingSubStageName()
{
  return &type metadata for LinkingSubStageName;
}

uint64_t _s24IntelligencePlatformCore19LinkingSubStageNameOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_1C0D47040 + 4 * byte_1C10B7E26[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_1C0D47074 + 4 * byte_1C10B7E21[v4]))();
}

uint64_t sub_1C0D47074(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C0D4707C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C0D47084);
  return result;
}

uint64_t sub_1C0D47090(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C0D47098);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_1C0D4709C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C0D470A4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for StageName.CodingKeys()
{
  return &type metadata for StageName.CodingKeys;
}

ValueMetadata *type metadata accessor for StageName.SourcingCodingKeys()
{
  return &type metadata for StageName.SourcingCodingKeys;
}

ValueMetadata *type metadata accessor for StageName.TransformingCodingKeys()
{
  return &type metadata for StageName.TransformingCodingKeys;
}

ValueMetadata *type metadata accessor for StageName.MappingCodingKeys()
{
  return &type metadata for StageName.MappingCodingKeys;
}

ValueMetadata *type metadata accessor for StageName.SourceIngestionCodingKeys()
{
  return &type metadata for StageName.SourceIngestionCodingKeys;
}

uint64_t storeEnumTagSinglePayload for StageName.LinkingCodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1C0D47140 + 4 * byte_1C10B7E2B[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1C0D47160 + 4 * byte_1C10B7E30[v4]))();
}

_BYTE *sub_1C0D47140(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1C0D47160(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1C0D47168(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1C0D47170(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1C0D47178(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1C0D47180(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for StageName.LinkingCodingKeys()
{
  return &type metadata for StageName.LinkingCodingKeys;
}

ValueMetadata *type metadata accessor for StageName.FusionCodingKeys()
{
  return &type metadata for StageName.FusionCodingKeys;
}

unint64_t sub_1C0D471B0()
{
  unint64_t result;

  result = qword_1EF648748;
  if (!qword_1EF648748)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10B8264, &type metadata for StageName.LinkingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF648748);
  }
  return result;
}

unint64_t sub_1C0D471F0()
{
  unint64_t result;

  result = qword_1EF648750;
  if (!qword_1EF648750)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10B845C, &type metadata for StageName.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF648750);
  }
  return result;
}

unint64_t sub_1C0D47230()
{
  unint64_t result;

  result = qword_1EF648758;
  if (!qword_1EF648758)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10B837C, &type metadata for StageName.SourcingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF648758);
  }
  return result;
}

unint64_t sub_1C0D47270()
{
  unint64_t result;

  result = qword_1EF648760;
  if (!qword_1EF648760)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10B83A4, &type metadata for StageName.SourcingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF648760);
  }
  return result;
}

unint64_t sub_1C0D472B0()
{
  unint64_t result;

  result = qword_1EF648768;
  if (!qword_1EF648768)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10B832C, &type metadata for StageName.TransformingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF648768);
  }
  return result;
}

unint64_t sub_1C0D472F0()
{
  unint64_t result;

  result = qword_1EF648770;
  if (!qword_1EF648770)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10B8354, &type metadata for StageName.TransformingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF648770);
  }
  return result;
}

unint64_t sub_1C0D47330()
{
  unint64_t result;

  result = qword_1EF648778;
  if (!qword_1EF648778)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10B82DC, &type metadata for StageName.MappingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF648778);
  }
  return result;
}

unint64_t sub_1C0D47370()
{
  unint64_t result;

  result = qword_1EF648780;
  if (!qword_1EF648780)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10B8304, &type metadata for StageName.MappingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF648780);
  }
  return result;
}

unint64_t sub_1C0D473B0()
{
  unint64_t result;

  result = qword_1EF648788;
  if (!qword_1EF648788)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10B828C, &type metadata for StageName.SourceIngestionCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF648788);
  }
  return result;
}

unint64_t sub_1C0D473F0()
{
  unint64_t result;

  result = qword_1EF648790;
  if (!qword_1EF648790)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10B82B4, &type metadata for StageName.SourceIngestionCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF648790);
  }
  return result;
}

unint64_t sub_1C0D47430()
{
  unint64_t result;

  result = qword_1EF648798;
  if (!qword_1EF648798)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10B81D4, &type metadata for StageName.LinkingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF648798);
  }
  return result;
}

unint64_t sub_1C0D47470()
{
  unint64_t result;

  result = qword_1EF6487A0;
  if (!qword_1EF6487A0)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10B81FC, &type metadata for StageName.LinkingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF6487A0);
  }
  return result;
}

unint64_t sub_1C0D474B0()
{
  unint64_t result;

  result = qword_1EF6487A8;
  if (!qword_1EF6487A8)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10B8184, &type metadata for StageName.FusionCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF6487A8);
  }
  return result;
}

unint64_t sub_1C0D474F0()
{
  unint64_t result;

  result = qword_1EF6487B0;
  if (!qword_1EF6487B0)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10B81AC, &type metadata for StageName.FusionCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF6487B0);
  }
  return result;
}

unint64_t sub_1C0D47530()
{
  unint64_t result;

  result = qword_1EF6487B8;
  if (!qword_1EF6487B8)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10B83CC, &type metadata for StageName.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF6487B8);
  }
  return result;
}

unint64_t sub_1C0D47570()
{
  unint64_t result;

  result = qword_1EF6487C0;
  if (!qword_1EF6487C0)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10B83F4, &type metadata for StageName.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF6487C0);
  }
  return result;
}

unint64_t sub_1C0D475AC()
{
  unint64_t result;

  result = qword_1EF6487C8;
  if (!qword_1EF6487C8)
  {
    result = MEMORY[0x1C3BA8174](&protocol conformance descriptor for LinkingSubStageName, &type metadata for LinkingSubStageName);
    atomic_store(result, (unint64_t *)&qword_1EF6487C8);
  }
  return result;
}

unint64_t sub_1C0D475E8()
{
  unint64_t result;

  result = qword_1ED75D090;
  if (!qword_1ED75D090)
  {
    result = MEMORY[0x1C3BA8174](&protocol conformance descriptor for StageName, &type metadata for StageName);
    atomic_store(result, (unint64_t *)&qword_1ED75D090);
  }
  return result;
}

void sub_1C0D47624(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v3 = v2;
  v6 = sub_1C106ED70();
  v24 = *(_QWORD *)(v6 - 8);
  v25 = v6;
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1C07ACF80(&qword_1ED75AE40);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *(_QWORD *)(a1 + 16);
  if (v12)
  {
    v26 = a2;
    v27 = MEMORY[0x1E0DEE9D8];
    sub_1C09D324C();
    v13 = v27;
    v14 = a1 + 40;
    while (1)
    {
      v15 = _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      v16 = (void *)MEMORY[0x1C3BA79F4](v15);
      sub_1C0D3B7A0((uint64_t)v11);
      if (v3)
        break;
      v3 = 0;
      objc_autoreleasePoolPop(v16);
      v17 = type metadata accessor for SourceIdPrefix();
      if (sub_1C07B2D80((uint64_t)v11, 1, v17) == 1)
      {
        sub_1C0784B6C((uint64_t)v11, &qword_1ED75AE40);
      }
      else
      {
        _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
        sub_1C07B1F90((uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for SourceIdPrefix);
      }
      sub_1C106ED7C();
      v18 = v26;
      v19 = 0x3FE999999999999ALL;
      if (*(_QWORD *)(v26 + 16))
      {
        sub_1C07DD240();
        v19 = 0x3FE999999999999ALL;
        if ((v21 & 1) != 0)
          v19 = *(_QWORD *)(*(_QWORD *)(v18 + 56) + 8 * v20);
      }
      (*(void (**)(char *, uint64_t))(v24 + 8))(v8, v25);
      swift_bridgeObjectRelease();
      v27 = v13;
      v22 = *(_QWORD *)(v13 + 16);
      if (v22 >= *(_QWORD *)(v13 + 24) >> 1)
      {
        sub_1C09D324C();
        v13 = v27;
      }
      v14 += 16;
      *(_QWORD *)(v13 + 16) = v22 + 1;
      *(_QWORD *)(v13 + 8 * v22 + 32) = v19;
      if (!--v12)
        goto LABEL_13;
    }
    objc_autoreleasePoolPop(v16);
    __break(1u);
  }
  else
  {
LABEL_13:
    swift_bridgeObjectRelease();
  }
}

void sub_1C0D4788C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(char *, uint64_t);
  uint64_t (*v4)(_QWORD);
  uint64_t (*v5)(_QWORD);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  _QWORD v20[3];
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)(char *, uint64_t);
  uint64_t v25;
  uint64_t v26;

  sub_1C077AE5C();
  v20[2] = v1;
  v24 = v3;
  v25 = v2;
  v5 = v4;
  v7 = v6;
  v8 = v4(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  sub_1C077AED0();
  v23 = v10;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)v20 - v12;
  v26 = MEMORY[0x1E0DEE9D8];
  v22 = *(_QWORD *)(v7 + 16);
  if (v22)
  {
    v20[1] = v0;
    v14 = 0;
    v15 = MEMORY[0x1E0DEE9D8];
    v21 = v7;
    while (v14 < *(_QWORD *)(v7 + 16))
    {
      v16 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
      v17 = *(_QWORD *)(v9 + 72);
      sub_1C07B9BB4(v7 + v16 + v17 * v14, (uint64_t)v13);
      if ((v24(v13, v25) & 1) != 0)
      {
        sub_1C0787D94((uint64_t)v13);
      }
      else
      {
        sub_1C08D6E2C((uint64_t)v13, v23, v5);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          sub_1C079CDE4(0, *(_QWORD *)(v15 + 16) + 1);
        v15 = v26;
        v19 = *(_QWORD *)(v26 + 16);
        v18 = *(_QWORD *)(v26 + 24);
        if (v19 >= v18 >> 1)
        {
          sub_1C079CDE4(v18 > 1, v19 + 1);
          v15 = v26;
        }
        *(_QWORD *)(v15 + 16) = v19 + 1;
        sub_1C08D6E2C(v23, v15 + v16 + v19 * v17, v5);
        v7 = v21;
      }
      if (v22 == ++v14)
        goto LABEL_12;
    }
    __break(1u);
  }
  else
  {
LABEL_12:
    swift_bridgeObjectRelease();
    sub_1C0778580();
    sub_1C07757D0();
  }
}

void sub_1C0D47A2C()
{
  uint64_t (*v0)(void);
  uint64_t (*v1)(_QWORD);
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  int64_t v8;
  unint64_t v9;
  int64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;
  uint64_t (*v23)(void);
  uint64_t v24;
  int64_t v25;
  uint64_t v26;
  int64_t v27;
  uint64_t v28;
  _QWORD v29[5];

  sub_1C077AE5C();
  v23 = v0;
  v28 = *(_QWORD *)(v1(0) - 8);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v2);
  sub_1C077AF80();
  MEMORY[0x1E0C80A78](v3);
  sub_1C0861BD0(v29);
  v24 = v29[1];
  v27 = v29[3];
  v4 = v29[4];
  v25 = (unint64_t)(v29[2] + 64) >> 6;
  v26 = v29[0];
  sub_1C077AE90();
  v5 = MEMORY[0x1E0DEE9D8];
  while (1)
  {
    if (v4)
    {
      v6 = __clz(__rbit64(v4));
      v4 &= v4 - 1;
      v7 = v6 | (v27 << 6);
    }
    else
    {
      v8 = v27 + 1;
      if (__OFADD__(v27, 1))
        goto LABEL_43;
      if (v8 >= v25)
        goto LABEL_38;
      v9 = *(_QWORD *)(v24 + 8 * v8);
      v10 = v27 + 1;
      if (!v9)
      {
        v10 = v27 + 2;
        if (v27 + 2 >= v25)
          goto LABEL_38;
        v9 = *(_QWORD *)(v24 + 8 * v10);
        if (!v9)
        {
          v10 = v27 + 3;
          if (v27 + 3 >= v25)
            goto LABEL_38;
          v9 = *(_QWORD *)(v24 + 8 * v10);
          if (!v9)
          {
            v10 = v27 + 4;
            if (v27 + 4 >= v25)
              goto LABEL_38;
            v9 = *(_QWORD *)(v24 + 8 * v10);
            if (!v9)
            {
              v10 = v27 + 5;
              if (v27 + 5 >= v25)
                goto LABEL_38;
              v9 = *(_QWORD *)(v24 + 8 * v10);
              if (!v9)
              {
                v11 = v27 + 6;
                while (v11 < v25)
                {
                  v9 = *(_QWORD *)(v24 + 8 * v11++);
                  if (v9)
                  {
                    v10 = v11 - 1;
                    goto LABEL_19;
                  }
                }
LABEL_38:
                swift_bridgeObjectRelease();
                swift_release();
                sub_1C07757D0();
                return;
              }
            }
          }
        }
      }
LABEL_19:
      v4 = (v9 - 1) & v9;
      v7 = __clz(__rbit64(v9)) + (v10 << 6);
      v27 = v10;
    }
    if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v26 + 56) + 8 * v7) + 16))
    {
      type metadata accessor for TranslatedEntityTriple(0);
      sub_1C07767B4();
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      sub_1C0D52858();
    }
    v12 = MEMORY[0x1E0DEE9D8];
    v13 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
    v14 = *(_QWORD *)(v5 + 16);
    if (__OFADD__(v14, v13))
      break;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0 || v14 + v13 > *(_QWORD *)(v5 + 24) >> 1)
      v5 = v23();
    if (*(_QWORD *)(v12 + 16))
    {
      v15 = *(_QWORD *)(v5 + 16);
      if ((*(_QWORD *)(v5 + 24) >> 1) - v15 < v13)
        goto LABEL_41;
      v16 = (*(unsigned __int8 *)(v28 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80);
      v17 = *(_QWORD *)(v28 + 72);
      v18 = v5 + v16 + v17 * v15;
      if (v12 + v16 < v18 + v17 * v13 && v18 < v12 + v16 + v17 * v13)
        goto LABEL_44;
      swift_arrayInitWithCopy();
      if (v13)
      {
        v20 = *(_QWORD *)(v5 + 16);
        v21 = __OFADD__(v20, v13);
        v22 = v20 + v13;
        if (v21)
          goto LABEL_42;
        *(_QWORD *)(v5 + 16) = v22;
      }
    }
    else if (v13)
    {
      goto LABEL_40;
    }
    sub_1C0778580();
  }
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
LABEL_43:
  __break(1u);
LABEL_44:
  sub_1C07B645C();
  sub_1C0786314();
  __break(1u);
}

void sub_1C0D47E0C(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;

  type metadata accessor for TranslatedEntityTriple(0);
  v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    sub_1C0861CF0();
    v2 = v3;
  }
  sub_1C0D534FC();
  *a1 = v2;
}

void sub_1C0D47EB4(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;

  type metadata accessor for EventTriple(0);
  v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    sub_1C0861D00();
    v2 = v3;
  }
  sub_1C0D534FC();
  *a1 = v2;
}

void sub_1C0D47F5C(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;

  type metadata accessor for GraphTriple(0);
  v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    sub_1C0861D10();
    v2 = v3;
  }
  sub_1C0D534FC();
  *a1 = v2;
}

void sub_1C0D48004(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;

  type metadata accessor for ConstructionEventTriple(0);
  v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    sub_1C0861D20();
    v2 = v3;
  }
  sub_1C0D534FC();
  *a1 = v2;
}

void sub_1C0D480AC(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;

  type metadata accessor for ConstructionGraphTriple(0);
  v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    sub_1C0861D30();
    v2 = v3;
  }
  sub_1C0D534FC();
  *a1 = v2;
}

uint64_t sub_1C0D48154(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  int64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  _QWORD *v17;
  uint64_t v19;

  v5 = result;
  v6 = 0;
  v7 = result + 56;
  v8 = 1 << *(_BYTE *)(result + 32);
  v9 = -1;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  v10 = v9 & *(_QWORD *)(result + 56);
  v11 = (unint64_t)(v8 + 63) >> 6;
  while (v10)
  {
    v12 = __clz(__rbit64(v10));
    v10 &= v10 - 1;
    v13 = v12 | (v6 << 6);
LABEL_22:
    v17 = (_QWORD *)(*(_QWORD *)(v5 + 48) + 16 * v13);
    if (*v17 != a2 || v17[1] != a3)
    {
      result = sub_1C1070CB4();
      if ((result & 1) == 0)
        continue;
    }
    v19 = 1;
LABEL_29:
    swift_bridgeObjectRelease();
    return v19;
  }
  v14 = v6 + 1;
  if (__OFADD__(v6, 1))
  {
    __break(1u);
    goto LABEL_31;
  }
  if (v14 >= v11)
    goto LABEL_28;
  v15 = *(_QWORD *)(v7 + 8 * v14);
  ++v6;
  if (v15)
    goto LABEL_21;
  v6 = v14 + 1;
  if (v14 + 1 >= v11)
    goto LABEL_28;
  v15 = *(_QWORD *)(v7 + 8 * v6);
  if (v15)
    goto LABEL_21;
  v6 = v14 + 2;
  if (v14 + 2 >= v11)
    goto LABEL_28;
  v15 = *(_QWORD *)(v7 + 8 * v6);
  if (v15)
    goto LABEL_21;
  v6 = v14 + 3;
  if (v14 + 3 >= v11)
    goto LABEL_28;
  v15 = *(_QWORD *)(v7 + 8 * v6);
  if (v15)
  {
LABEL_21:
    v10 = (v15 - 1) & v15;
    v13 = __clz(__rbit64(v15)) + (v6 << 6);
    goto LABEL_22;
  }
  v16 = v14 + 4;
  if (v16 >= v11)
  {
LABEL_28:
    v19 = 0;
    goto LABEL_29;
  }
  v15 = *(_QWORD *)(v7 + 8 * v16);
  if (v15)
  {
    v6 = v16;
    goto LABEL_21;
  }
  while (1)
  {
    v6 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v6 >= v11)
      goto LABEL_28;
    v15 = *(_QWORD *)(v7 + 8 * v6);
    ++v16;
    if (v15)
      goto LABEL_21;
  }
LABEL_31:
  __break(1u);
  return result;
}

void sub_1C0D482D8()
{
  sub_1C0D48300();
}

void sub_1C0D482EC()
{
  sub_1C0D48300();
}

void sub_1C0D48300()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19[12];
  uint64_t v20;

  sub_1C0776838();
  sub_1C0D55628(v0, v1);
  sub_1C07ACF80(&qword_1ED7623F8);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v2);
  v20 = sub_1C07B8C94(v3, v19[0]);
  v19[9] = *(_QWORD *)(v20 - 8);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v4);
  sub_1C07766EC();
  sub_1C07ACF80(&qword_1ED75AE40);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v5);
  sub_1C0794974((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v7);
  v19[7] = (uint64_t)v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v9);
  v19[4] = sub_1C07AA4E0(v10, v11, v12, v13, v14, v15, v16, v17, v19[0]);
  v18 = sub_1C07767B4();
  MEMORY[0x1C3BA79F4](v18);
  sub_1C07B632C();
  sub_1C0796B38();
  sub_1C07824F0();
  sub_1C07B7D44();
  sub_1C07A9D68();
}

void sub_1C0D48670()
{
  sub_1C0D48300();
}

void sub_1C0D48684(uint64_t *a1@<X0>, uint64_t (*a2)(_QWORD)@<X1>, _QWORD *a3@<X8>)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v7 = sub_1C07ACF80(a1);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v8);
  sub_1C07785B8();
  v10 = *v3;
  v9 = v3[1];
  v11 = *(_QWORD *)(*v3 + 16);
  if (v9 == v11)
  {
    sub_1C07B2D8C((uint64_t)a3, 1, 1, v7);
    return;
  }
  if (v9 >= v11)
  {
    __break(1u);
  }
  else
  {
    v12 = a2(0);
    v13 = v10
        + ((*(unsigned __int8 *)(*(_QWORD *)(v12 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v12 - 8) + 80))
        + *(_QWORD *)(*(_QWORD *)(v12 - 8) + 72) * v9;
    v3[1] = v9 + 1;
    v14 = v4 + *(int *)(v7 + 48);
    v15 = v3[2];
    sub_1C08D6F44(v13, v14, a2);
    if (!__OFADD__(v15, 1))
    {
      v3[2] = v15 + 1;
      v16 = (uint64_t)a3 + *(int *)(v7 + 48);
      *a3 = v15;
      sub_1C08D6E2C(v14, v16, a2);
      sub_1C07B2D8C((uint64_t)a3, 0, 1, v7);
      return;
    }
  }
  __break(1u);
}

void StandardEntityFusion.init(stores:entityClass:source:pipelineType:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char *a4@<X3>, uint64_t a5@<X8>)
{
  char v8;
  int *v9;
  uint64_t v10;
  uint64_t v11;

  v8 = *a4;
  sub_1C08D6E2C(a1, a5, (uint64_t (*)(_QWORD))type metadata accessor for PhaseStores);
  v9 = (int *)type metadata accessor for StandardEntityFusion();
  v10 = a5 + v9[5];
  v11 = sub_1C0776744();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v10, a2, v11);
  sub_1C08D6E2C(a3, a5 + v9[6], (uint64_t (*)(_QWORD))type metadata accessor for Source);
  *(_BYTE *)(a5 + v9[7]) = v8;
}

uint64_t type metadata accessor for StandardEntityFusion()
{
  uint64_t result;

  result = qword_1ED75BED0;
  if (!qword_1ED75BED0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1C0D48874(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7)
{
  _QWORD v9[7];
  char v10;

  v9[2] = a2;
  v9[3] = a1;
  v9[4] = a3;
  v9[5] = a4;
  v9[6] = a6;
  v10 = a5;
  swift_retain();
  sub_1C077FF50(a7, (uint64_t)v9);
  return swift_release();
}

void sub_1C0D488D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5, uint64_t a6, int a7)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  void (*v25)(uint64_t *, uint64_t, uint64_t);
  uint64_t v26;
  void (*v27)(uint64_t *, uint64_t, uint64_t);
  uint64_t v28;
  uint64_t *v29;
  void (*v30)(char *, uint64_t);
  unint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  char *v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  char *v39;
  uint64_t v40;
  void (*v41)(char *, uint64_t);
  char *v42;
  void (*v43)(char *, uint64_t);
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  int v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60[3];
  uint64_t v61;
  uint64_t v62;
  _BYTE v63[24];
  void *v64;
  unint64_t v65;
  uint64_t v66[3];
  uint64_t v67;
  uint64_t v68;
  void (*v69)(char *, uint64_t);

  v51 = a7;
  v59 = a6;
  v49 = type metadata accessor for ConstructionPhaseStatus(0);
  MEMORY[0x1E0C80A78](v49);
  v50 = (uint64_t)&v48 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1C07ACF80(&qword_1ED761500);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v48 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v56 = sub_1C07ACF80(&qword_1ED750648);
  v54 = *(_QWORD *)(v56 - 8);
  MEMORY[0x1E0C80A78](v56);
  v58 = (char *)&v48 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17);
  v52 = (char *)&v48 - v18;
  MEMORY[0x1E0C80A78](v19);
  v55 = (char *)&v48 - v20;
  v21 = (int *)type metadata accessor for ConstructionProgressTokens(0);
  MEMORY[0x1E0C80A78](v21);
  v23 = (char *)&v48 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = sub_1C106D1F8();
  v25 = *(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 16);
  v53 = a2;
  v26 = a2;
  v27 = v25;
  v25((uint64_t *)v23, v26, v24);
  v28 = (uint64_t)&v23[v21[6]];
  v57 = a3;
  sub_1C08D6F44(a3, v28, (uint64_t (*)(_QWORD))type metadata accessor for Source);
  v23[v21[5]] = 10;
  v29 = (uint64_t *)&v23[v21[7]];
  *v29 = a4;
  v29[1] = a5;
  *(_QWORD *)&v23[v21[8]] = v59;
  v23[v21[9]] = 1;
  sub_1C07B0E28(a4, a5);
  sub_1C07803F8(&qword_1ED751048, (void (*)(uint64_t))type metadata accessor for ConstructionProgressTokens);
  v59 = a1;
  v30 = v69;
  sub_1C106BFB0();
  if (!v30)
  {
    v48 = v15;
    v64 = &unk_1E7A1DD48;
    v31 = sub_1C0AA3FC4();
    v65 = v31;
    v63[0] = 0;
    v61 = type metadata accessor for Source();
    sub_1C07803F8(&qword_1ED75CC18, (void (*)(uint64_t))type metadata accessor for Source);
    v62 = v32;
    v33 = sub_1C079DFC4(v60);
    sub_1C08D6F44(v57, (uint64_t)v33, (uint64_t (*)(_QWORD))type metadata accessor for Source);
    v34 = sub_1C106BCBC();
    v67 = v34;
    v68 = MEMORY[0x1E0D23DC0];
    sub_1C079DFC4(v66);
    sub_1C106C310();
    sub_1C0784B6C((uint64_t)v60, (uint64_t *)&unk_1ED7626B0);
    _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v63);
    sub_1C07803F8(&qword_1ED751038, (void (*)(uint64_t))type metadata accessor for ConstructionProgressTokens);
    v69 = 0;
    v35 = v52;
    sub_1C106B968();
    _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v66);
    v64 = &unk_1E7A1DD48;
    v65 = v31;
    v36 = v31;
    v63[0] = 1;
    v61 = v24;
    sub_1C07803F8(&qword_1ED759F48, (void (*)(uint64_t))MEMORY[0x1E0D3BB08]);
    v62 = v37;
    v38 = sub_1C079DFC4(v60);
    v27(v38, v53, v24);
    v67 = v34;
    v68 = MEMORY[0x1E0D23DC0];
    sub_1C079DFC4(v66);
    sub_1C106C310();
    sub_1C0784B6C((uint64_t)v60, (uint64_t *)&unk_1ED7626B0);
    _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v63);
    sub_1C07BB218(&qword_1ED750640, &qword_1ED750648);
    v39 = v55;
    v40 = v56;
    sub_1C106BDF4();
    v41 = *(void (**)(char *, uint64_t))(v54 + 8);
    v41(v35, v40);
    _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v66);
    v64 = &unk_1E7A1DD48;
    v65 = v36;
    v63[0] = 2;
    v67 = v34;
    v68 = MEMORY[0x1E0D23DC0];
    sub_1C079DFC4(v66);
    sub_1C106C31C();
    _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v63);
    v42 = v58;
    sub_1C106BDF4();
    _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v66);
    v43 = v69;
    sub_1C106C124();
    if (v43)
    {
      v41(v42, v40);
      v44 = v39;
    }
    else
    {
      v69 = v41;
      v45 = sub_1C106C604();
      v46 = (uint64_t)v48;
      sub_1C07B2D8C((uint64_t)v48, 1, 1, v45);
      sub_1C07ACF80(&qword_1ED75D2C8);
      sub_1C106BE78();
      *(_OWORD *)(swift_allocObject() + 16) = xmmword_1C1079220;
      v63[0] = 2;
      v67 = MEMORY[0x1E0DEAFA0];
      v68 = MEMORY[0x1E0D249A0];
      LOBYTE(v66[0]) = 1;
      sub_1C0AA4174();
      sub_1C106BED8();
      sub_1C0784B6C((uint64_t)v66, (uint64_t *)&unk_1ED7626B0);
      sub_1C106C130();
      sub_1C0784B6C(v46, &qword_1ED761500);
      swift_bridgeObjectRelease();
      if ((v51 & 1) != 0)
      {
        v47 = v50;
        sub_1C08D6F44(v57, v50, (uint64_t (*)(_QWORD))type metadata accessor for Source);
        *(_BYTE *)(v47 + *(int *)(v49 + 20)) = 3;
        sub_1C07803F8(&qword_1ED750E80, (void (*)(uint64_t))type metadata accessor for ConstructionPhaseStatus);
        sub_1C106BFC8();
        sub_1C07B1F90(v47, type metadata accessor for ConstructionPhaseStatus);
      }
      v41 = v69;
      v69(v58, v40);
      v44 = v39;
    }
    v41(v44, v40);
  }
  sub_1C07B1F90((uint64_t)v23, type metadata accessor for ConstructionProgressTokens);
}

void sub_1C0D48FA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5, uint64_t a6, int a7)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  void (*v25)(uint64_t *, uint64_t, uint64_t);
  uint64_t v26;
  void (*v27)(uint64_t *, uint64_t, uint64_t);
  uint64_t v28;
  uint64_t *v29;
  void (*v30)(char *, uint64_t);
  unint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  char *v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  char *v39;
  uint64_t v40;
  void (*v41)(char *, uint64_t);
  char *v42;
  void (*v43)(char *, uint64_t);
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  int v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60[3];
  uint64_t v61;
  uint64_t v62;
  _BYTE v63[24];
  void *v64;
  unint64_t v65;
  uint64_t v66[3];
  uint64_t v67;
  uint64_t v68;
  void (*v69)(char *, uint64_t);

  v51 = a7;
  v59 = a6;
  v49 = type metadata accessor for ConstructionPhaseStatus(0);
  MEMORY[0x1E0C80A78](v49);
  v50 = (uint64_t)&v48 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1C07ACF80(&qword_1ED761500);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v48 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v56 = sub_1C07ACF80(&qword_1ED741570);
  v54 = *(_QWORD *)(v56 - 8);
  MEMORY[0x1E0C80A78](v56);
  v58 = (char *)&v48 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17);
  v52 = (char *)&v48 - v18;
  MEMORY[0x1E0C80A78](v19);
  v55 = (char *)&v48 - v20;
  v21 = (int *)type metadata accessor for ProgressTokens(0);
  MEMORY[0x1E0C80A78](v21);
  v23 = (char *)&v48 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = sub_1C106D1F8();
  v25 = *(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 16);
  v53 = a2;
  v26 = a2;
  v27 = v25;
  v25((uint64_t *)v23, v26, v24);
  v28 = (uint64_t)&v23[v21[6]];
  v57 = a3;
  sub_1C08D6F44(a3, v28, (uint64_t (*)(_QWORD))type metadata accessor for Source);
  v23[v21[5]] = 10;
  v29 = (uint64_t *)&v23[v21[7]];
  *v29 = a4;
  v29[1] = a5;
  *(_QWORD *)&v23[v21[8]] = v59;
  v23[v21[9]] = 1;
  sub_1C07B0E28(a4, a5);
  sub_1C07803F8(&qword_1ED749A50, (void (*)(uint64_t))type metadata accessor for ProgressTokens);
  v59 = a1;
  v30 = v69;
  sub_1C106BFB0();
  if (!v30)
  {
    v48 = v15;
    v64 = &unk_1E7A1DD48;
    v31 = sub_1C0AA3FC4();
    v65 = v31;
    v63[0] = 0;
    v61 = type metadata accessor for Source();
    sub_1C07803F8(&qword_1ED75CC18, (void (*)(uint64_t))type metadata accessor for Source);
    v62 = v32;
    v33 = sub_1C079DFC4(v60);
    sub_1C08D6F44(v57, (uint64_t)v33, (uint64_t (*)(_QWORD))type metadata accessor for Source);
    v34 = sub_1C106BCBC();
    v67 = v34;
    v68 = MEMORY[0x1E0D23DC0];
    sub_1C079DFC4(v66);
    sub_1C106C310();
    sub_1C0784B6C((uint64_t)v60, (uint64_t *)&unk_1ED7626B0);
    _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v63);
    sub_1C07803F8(&qword_1ED75ACA8, (void (*)(uint64_t))type metadata accessor for ProgressTokens);
    v69 = 0;
    v35 = v52;
    sub_1C106B968();
    _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v66);
    v64 = &unk_1E7A1DD48;
    v65 = v31;
    v36 = v31;
    v63[0] = 1;
    v61 = v24;
    sub_1C07803F8(&qword_1ED759F48, (void (*)(uint64_t))MEMORY[0x1E0D3BB08]);
    v62 = v37;
    v38 = sub_1C079DFC4(v60);
    v27(v38, v53, v24);
    v67 = v34;
    v68 = MEMORY[0x1E0D23DC0];
    sub_1C079DFC4(v66);
    sub_1C106C310();
    sub_1C0784B6C((uint64_t)v60, (uint64_t *)&unk_1ED7626B0);
    _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v63);
    sub_1C07BB218(&qword_1ED748268, &qword_1ED741570);
    v39 = v55;
    v40 = v56;
    sub_1C106BDF4();
    v41 = *(void (**)(char *, uint64_t))(v54 + 8);
    v41(v35, v40);
    _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v66);
    v64 = &unk_1E7A1DD48;
    v65 = v36;
    v63[0] = 2;
    v67 = v34;
    v68 = MEMORY[0x1E0D23DC0];
    sub_1C079DFC4(v66);
    sub_1C106C31C();
    _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v63);
    v42 = v58;
    sub_1C106BDF4();
    _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v66);
    v43 = v69;
    sub_1C106C124();
    if (v43)
    {
      v41(v42, v40);
      v44 = v39;
    }
    else
    {
      v69 = v41;
      v45 = sub_1C106C604();
      v46 = (uint64_t)v48;
      sub_1C07B2D8C((uint64_t)v48, 1, 1, v45);
      sub_1C07ACF80(&qword_1ED75D2C8);
      sub_1C106BE78();
      *(_OWORD *)(swift_allocObject() + 16) = xmmword_1C1079220;
      v63[0] = 2;
      v67 = MEMORY[0x1E0DEAFA0];
      v68 = MEMORY[0x1E0D249A0];
      LOBYTE(v66[0]) = 1;
      sub_1C0AA4174();
      sub_1C106BED8();
      sub_1C0784B6C((uint64_t)v66, (uint64_t *)&unk_1ED7626B0);
      sub_1C106C130();
      sub_1C0784B6C(v46, &qword_1ED761500);
      swift_bridgeObjectRelease();
      if ((v51 & 1) != 0)
      {
        v47 = v50;
        sub_1C08D6F44(v57, v50, (uint64_t (*)(_QWORD))type metadata accessor for Source);
        *(_BYTE *)(v47 + *(int *)(v49 + 20)) = 3;
        sub_1C07803F8(&qword_1ED750E80, (void (*)(uint64_t))type metadata accessor for ConstructionPhaseStatus);
        sub_1C106BFC8();
        sub_1C07B1F90(v47, type metadata accessor for ConstructionPhaseStatus);
      }
      v41 = v69;
      v69(v58, v40);
      v44 = v39;
    }
    v41(v44, v40);
  }
  sub_1C07B1F90((uint64_t)v23, type metadata accessor for ProgressTokens);
}

void sub_1C0D49670(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, int a5@<W4>, uint64_t a6@<X8>)
{
  sub_1C0D496F8(a1, a2, a3, a4, a5, &qword_1ED759F00, (uint64_t)&unk_1ED759EE8, &qword_1ED759EF0, a6, &qword_1ED759EF8, &qword_1ED759EE0);
  sub_1C0796570();
}

void sub_1C0D496B4(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, int a5@<W4>, uint64_t a6@<X8>)
{
  sub_1C0D496F8(a1, a2, a3, a4, a5, &qword_1ED75E500, (uint64_t)&unk_1ED7565E8, &qword_1ED748240, a6, &qword_1ED748248, &qword_1ED748238);
  sub_1C0796570();
}

uint64_t sub_1C0D496F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, int a5@<W4>, uint64_t *a6@<X5>, uint64_t a7@<X6>, _QWORD *a8@<X7>, uint64_t a9@<X8>, _QWORD *a10, _QWORD *a11)
{
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  int v50;
  __int128 v51;
  int v52;
  _QWORD *v53;
  _QWORD *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63[3];
  uint64_t v64;
  uint64_t v65;
  uint64_t v66[3];
  uint64_t v67;
  uint64_t v68;

  v49 = a8;
  *(_QWORD *)&v51 = a7;
  v58 = a6;
  v52 = a5;
  v46 = a4;
  v56 = a2;
  v57 = a1;
  v55 = a9;
  v44 = a3;
  v50 = a3;
  v53 = a10;
  v54 = a11;
  v13 = sub_1C0779688();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  sub_1C0778564();
  v17 = v16 - v15;
  v18 = sub_1C07ACF80(a6);
  v48 = *(_QWORD *)(v18 - 8);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v19);
  sub_1C077AF60();
  MEMORY[0x1E0C80A78](v20);
  sub_1C0779728();
  sub_1C077AF60();
  MEMORY[0x1E0C80A78](v21);
  v23 = (char *)&v43 - v22;
  MEMORY[0x1E0C80A78](v24);
  sub_1C077AF60();
  MEMORY[0x1E0C80A78](v25);
  sub_1C0D556E4();
  v26 = sub_1C106C49C();
  v64 = v26;
  v65 = MEMORY[0x1E0D24668];
  sub_1C079DFC4(v63);
  sub_1C106C4A8();
  sub_1C106E218();
  v27 = sub_1C106E1E8();
  v29 = v28;
  (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v17, v13);
  v30 = MEMORY[0x1E0D24960];
  v61 = MEMORY[0x1E0DEA968];
  v62 = MEMORY[0x1E0D24960];
  v59 = v27;
  v60 = v29;
  v31 = sub_1C106BCBC();
  v67 = v31;
  v68 = MEMORY[0x1E0D23DC0];
  sub_1C079DFC4(v66);
  sub_1C077F22C();
  sub_1C07BBE6C();
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v63);
  v32 = v58;
  sub_1C07BB218((_QWORD *)v51, v58);
  sub_1C106BDF4();
  sub_1C0784E74();
  v64 = v26;
  sub_1C0780790(MEMORY[0x1E0D24668]);
  sub_1C106C4A8();
  v33 = sub_1C106D090();
  v61 = MEMORY[0x1E0DEA968];
  v62 = v30;
  v59 = v33;
  v60 = v34;
  v56 = v31;
  v67 = v31;
  sub_1C07A5620(MEMORY[0x1E0D23DC0]);
  sub_1C077F22C();
  sub_1C07BBE6C();
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v63);
  v35 = v47;
  sub_1C0789C18();
  sub_1C106BDF4();
  v36 = v48;
  v45 = v23;
  sub_1C079F0D8((uint64_t)v23);
  sub_1C0784E74();
  sub_1C07ACF80((uint64_t *)&unk_1ED7614B0);
  v37 = sub_1C0778598();
  v51 = xmmword_1C1079220;
  *(_OWORD *)(v37 + 16) = xmmword_1C1079220;
  v38 = MEMORY[0x1E0D24650];
  *(_QWORD *)(v37 + 56) = v26;
  *(_QWORD *)(v37 + 64) = v38;
  sub_1C079DFC4((uint64_t *)(v37 + 32));
  sub_1C07A0380();
  sub_1C07BB218(v49, v32);
  sub_1C106BF98();
  sub_1C0775844();
  sub_1C079F0D8(v35);
  if (v50 != 4)
  {
    sub_1C07B6780(*(uint64_t (**)(_QWORD, uint64_t, uint64_t))(v36 + 16));
    v64 = v26;
    sub_1C0780790(MEMORY[0x1E0D24668]);
    sub_1C106C4A8();
    __asm { BR              X12 }
  }
  if ((v52 & 1) == 0)
  {
    sub_1C07B6780(*(uint64_t (**)(_QWORD, uint64_t, uint64_t))(v36 + 16));
    v64 = v26;
    sub_1C0780790(MEMORY[0x1E0D24668]);
    sub_1C106C4A8();
    v61 = MEMORY[0x1E0DEB070];
    v62 = MEMORY[0x1E0D249C8];
    v59 = v46;
    v67 = v56;
    sub_1C07A5620(MEMORY[0x1E0D23DC0]);
    sub_1C106C0B8();
    _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)&v59);
    _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v63);
    sub_1C0789C18();
    sub_1C106BDF4();
    sub_1C079F0D8(v35);
    sub_1C079F0D8(v11);
    _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v66);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v36 + 32))(v11, v35, v18);
  }
  v64 = v26;
  v65 = MEMORY[0x1E0D24658];
  sub_1C079DFC4(v63);
  sub_1C07A0380();
  v67 = v56;
  sub_1C07A5620(MEMORY[0x1E0D23DC0]);
  v39 = v58;
  sub_1C07BB218(v53, v58);
  sub_1C106BE00();
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v63);
  sub_1C0789C18();
  sub_1C106BDF4();
  sub_1C0784E74();
  sub_1C07ACF80(&qword_1ED761300);
  v40 = sub_1C0778598();
  *(_OWORD *)(v40 + 16) = v51;
  v41 = MEMORY[0x1E0D24660];
  *(_QWORD *)(v40 + 56) = v26;
  *(_QWORD *)(v40 + 64) = v41;
  sub_1C079DFC4((uint64_t *)(v40 + 32));
  sub_1C07A0380();
  sub_1C07BB218(v54, v39);
  sub_1C106BD04();
  sub_1C07767AC();
  sub_1C079F0D8(v35);
  return sub_1C079F0D8(v11);
}

void sub_1C0D49D88(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, int a5@<W4>, uint64_t a6@<X8>)
{
  sub_1C0D496F8(a1, a2, a3, a4, a5, &qword_1ED750620, (uint64_t)&unk_1ED741E70, &qword_1ED750610, a6, &qword_1ED750618, &qword_1ED750608);
  sub_1C0796570();
}

void sub_1C0D49DCC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t, uint64_t);
  NSObject *v15;
  os_log_type_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD v26[3];
  uint64_t v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  sub_1C077AE5C();
  v29 = v0;
  v30 = v2;
  v4 = v3;
  v28 = v5;
  v7 = v6;
  v8 = sub_1C106D1F8();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  sub_1C0778564();
  v12 = v11 - v10;
  if (qword_1ED762B20 != -1)
    swift_once();
  v13 = sub_1C077585C();
  sub_1C079E000(v13, (uint64_t)qword_1ED78D9F8);
  v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16);
  v27 = v7;
  v14(v12, v7, v8);
  v15 = sub_1C106F538();
  v16 = sub_1C10703A8();
  if (os_log_type_enabled(v15, v16))
  {
    v26[2] = v1;
    v17 = sub_1C0775854();
    sub_1C0775854();
    *(_DWORD *)v17 = 136315394;
    v26[1] = v4;
    sub_1C07803F8(&qword_1ED759F68, (void (*)(uint64_t))MEMORY[0x1E0D3BB08]);
    v18 = sub_1C1070C0C();
    sub_1C079065C(v18, v19);
    sub_1C10705AC();
    sub_1C077960C();
    sub_1C0781B28();
    *(_WORD *)(v17 + 12) = 2080;
    PipelineType.description.getter();
    v31 = sub_1C079065C(v20, v21);
    sub_1C10705AC();
    sub_1C077960C();
    _os_log_impl(&dword_1C0771000, v15, v16, "GraphStore: tripleFusingMap: e:%s p:%s", (uint8_t *)v17, 0x16u);
    swift_arrayDestroy();
    sub_1C0776778();
  }
  sub_1C0781B28();

  v22 = v28;
  MEMORY[0x1E0C80A78](v23);
  v24 = v27;
  v26[-6] = v25;
  v26[-5] = v24;
  LOBYTE(v26[-4]) = v22;
  v26[-3] = v30;
  v26[-2] = v4;
  swift_retain();
  sub_1C078017C();
  swift_release();
  sub_1C07757D0();
}

uint64_t sub_1C0D4A060(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  void (*v17)(char *, uint64_t);
  _QWORD v19[2];
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v21 = a5;
  v22 = a6;
  v19[1] = a1;
  v23 = sub_1C07ACF80(&qword_1ED75E500);
  v20 = *(_QWORD *)(v23 - 8);
  MEMORY[0x1E0C80A78](v23);
  v9 = (char *)v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1C07ACF80(&qword_1ED755A48);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)v19 - v15;
  type metadata accessor for TranslatedEntityTriple(0);
  sub_1C07803F8(&qword_1ED75C320, (void (*)(uint64_t))type metadata accessor for TranslatedEntityTriple);
  sub_1C106B944();
  sub_1C0D496F8((uint64_t)v13, a3, a4, 0, 1, &qword_1ED755A48, (uint64_t)&qword_1ED759F20, &qword_1ED759F28, (uint64_t)v16, &qword_1ED759F30, &qword_1ED759F18);
  v17 = *(void (**)(char *, uint64_t))(v11 + 8);
  v17(v13, v10);
  type metadata accessor for GraphTriple(0);
  sub_1C07803F8(&qword_1ED75E628, (void (*)(uint64_t))type metadata accessor for GraphTriple);
  sub_1C106B944();
  sub_1C0D4A980();
  (*(void (**)(char *, uint64_t))(v20 + 8))(v9, v23);
  return ((uint64_t (*)(char *, uint64_t))v17)(v16, v10);
}

uint64_t sub_1C0D4A2A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  void (*v17)(char *, uint64_t);
  _QWORD v19[2];
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v21 = a5;
  v22 = a6;
  v19[1] = a1;
  v23 = sub_1C07ACF80(&qword_1ED75E4F8);
  v20 = *(_QWORD *)(v23 - 8);
  MEMORY[0x1E0C80A78](v23);
  v9 = (char *)v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1C07ACF80(&qword_1ED755A48);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)v19 - v15;
  type metadata accessor for TranslatedEntityTriple(0);
  sub_1C07803F8(&qword_1ED75C320, (void (*)(uint64_t))type metadata accessor for TranslatedEntityTriple);
  sub_1C106B944();
  sub_1C0D496F8((uint64_t)v13, a3, a4, 0, 1, &qword_1ED755A48, (uint64_t)&qword_1ED759F20, &qword_1ED759F28, (uint64_t)v16, &qword_1ED759F30, &qword_1ED759F18);
  v17 = *(void (**)(char *, uint64_t))(v11 + 8);
  v17(v13, v10);
  type metadata accessor for EventTriple(0);
  sub_1C07803F8(&qword_1ED75E620, (void (*)(uint64_t))type metadata accessor for EventTriple);
  sub_1C106B944();
  sub_1C0D4A980();
  (*(void (**)(char *, uint64_t))(v20 + 8))(v9, v23);
  return ((uint64_t (*)(char *, uint64_t))v17)(v16, v10);
}

uint64_t sub_1C0D4A4F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  void (*v17)(char *, uint64_t);
  _QWORD v19[2];
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v21 = a5;
  v22 = a6;
  v19[1] = a1;
  v23 = sub_1C07ACF80(&qword_1ED750620);
  v20 = *(_QWORD *)(v23 - 8);
  MEMORY[0x1E0C80A78](v23);
  v9 = (char *)v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1C07ACF80(&qword_1ED755A48);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)v19 - v15;
  type metadata accessor for TranslatedEntityTriple(0);
  sub_1C07803F8(&qword_1ED75C320, (void (*)(uint64_t))type metadata accessor for TranslatedEntityTriple);
  sub_1C106B944();
  sub_1C0D496F8((uint64_t)v13, a3, a4, 0, 1, &qword_1ED755A48, (uint64_t)&qword_1ED759F20, &qword_1ED759F28, (uint64_t)v16, &qword_1ED759F30, &qword_1ED759F18);
  v17 = *(void (**)(char *, uint64_t))(v11 + 8);
  v17(v13, v10);
  type metadata accessor for ConstructionGraphTriple(0);
  sub_1C07803F8(&qword_1ED750DF8, (void (*)(uint64_t))type metadata accessor for ConstructionGraphTriple);
  sub_1C106B944();
  sub_1C0D4A980();
  (*(void (**)(char *, uint64_t))(v20 + 8))(v9, v23);
  return ((uint64_t (*)(char *, uint64_t))v17)(v16, v10);
}

uint64_t sub_1C0D4A738(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  void (*v17)(char *, uint64_t);
  _QWORD v19[2];
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v21 = a5;
  v22 = a6;
  v19[1] = a1;
  v23 = sub_1C07ACF80(&qword_1ED7505F8);
  v20 = *(_QWORD *)(v23 - 8);
  MEMORY[0x1E0C80A78](v23);
  v9 = (char *)v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1C07ACF80(&qword_1ED755A48);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)v19 - v15;
  type metadata accessor for TranslatedEntityTriple(0);
  sub_1C07803F8(&qword_1ED75C320, (void (*)(uint64_t))type metadata accessor for TranslatedEntityTriple);
  sub_1C106B944();
  sub_1C0D496F8((uint64_t)v13, a3, a4, 0, 1, &qword_1ED755A48, (uint64_t)&qword_1ED759F20, &qword_1ED759F28, (uint64_t)v16, &qword_1ED759F30, &qword_1ED759F18);
  v17 = *(void (**)(char *, uint64_t))(v11 + 8);
  v17(v13, v10);
  type metadata accessor for ConstructionEventTriple(0);
  sub_1C07803F8(&qword_1ED750D68, (void (*)(uint64_t))type metadata accessor for ConstructionEventTriple);
  sub_1C106B944();
  sub_1C0D4A980();
  (*(void (**)(char *, uint64_t))(v20 + 8))(v9, v23);
  return ((uint64_t (*)(char *, uint64_t))v17)(v16, v10);
}

void sub_1C0D4A980()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39[21];
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;

  sub_1C077AE5C();
  v39[16] = v2;
  v39[14] = v3;
  v40 = v0;
  v39[20] = v4;
  v39[19] = v5;
  v41 = v6;
  v45 = v7;
  v9 = v8;
  v39[15] = (uint64_t)v10;
  v11 = sub_1C07ACF80(v10);
  v39[18] = *(_QWORD *)(sub_1C07B98D4(v11) - 8);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v12);
  sub_1C077AED0();
  sub_1C077AF60();
  MEMORY[0x1E0C80A78](v13);
  sub_1C0778674();
  sub_1C0787A68(v14);
  v15 = sub_1C106E590();
  v43 = *(_QWORD *)(v15 - 8);
  v44 = v15;
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v16);
  sub_1C0782B00(v17, v39[0]);
  sub_1C07ACF80(&qword_1ED75C398);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v18);
  sub_1C077AED0();
  v42 = v19;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v20);
  v29 = sub_1C0D55580(v21, v22, v23, v24, v25, v26, v27, v28, v39[0]);
  MEMORY[0x1E0C80A78](v29);
  sub_1C077AF80();
  v32 = v30 - v31;
  MEMORY[0x1E0C80A78](v33);
  v35 = (char *)v39 - v34;
  MEMORY[0x1E0C80A78](v36);
  v38 = (char *)v39 - v37;
  sub_1C07ACF80(&qword_1ED755A48);
  sub_1C07BB218(&qword_1ED759F10, &qword_1ED755A48);
  sub_1C07803F8(&qword_1ED75C328, (void (*)(uint64_t))type metadata accessor for TranslatedEntityTriple);
  sub_1C106BAAC();
  if (!v1)
  {
    v39[10] = v32;
    v45 = v35;
    v39[11] = v9;
    v39[12] = (uint64_t)v38;
    sub_1C077E2A4();
  }
  sub_1C07757D0();
}

void sub_1C0D4AF14()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(uint64_t);
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  if (v1)
  {
    sub_1C078F230();
    sub_1C07797A4();
    sub_1C077FE98();
    sub_1C0775834();
    v6 = v3;
  }
  else
  {
    *(_QWORD *)(v5 - 312) = v2;
    *(_QWORD *)(v5 - 304) = *(_QWORD *)(v5 + 40);
    v7 = *(_QWORD *)(v5 - 360);
    sub_1C077AEEC(v0, 1, *(_QWORD *)(v5 - 72));
    if (!v8)
    {
      v9 = v0;
      v10 = *(_QWORD *)(v5 - 216);
      sub_1C0D555E4(v9, v10);
      sub_1C07803F8(&qword_1ED75EA38, (void (*)(uint64_t))MEMORY[0x1E0D3CE28]);
      v11 = *(_QWORD *)(v5 - 248);
      sub_1C0D5561C();
      v12 = sub_1C106FAA8();
      v13 = *(_QWORD *)(v5 - 288);
      v14 = *(_QWORD *)(v5 - 296);
      if ((v12 & 1) != 0)
      {
        v15 = v4;
      }
      else
      {
        sub_1C0778624();
        sub_1C07B6520(v7, v11, v4, *(_QWORD *)(v5 - 320), v14, v13);
        if (v13)
        {
          sub_1C0778580();
          sub_1C0775834();
          sub_1C07814FC();
          sub_1C07B1F90(v10, type metadata accessor for TranslatedEntityTriple);
          sub_1C077FE98();
          sub_1C0775834();
          v6 = *(_QWORD *)(v5 - 352);
          goto LABEL_3;
        }
        sub_1C07758A4();
        sub_1C0778580();
        v16 = *(_QWORD *)(v5 - 232);
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 240) + 8))(v11, v16);
        v17 = sub_1C0D5561C();
        v18 = *(void (**)(uint64_t))(v5 - 416);
        v18(v17);
        *(_QWORD *)(v5 - 144) = *(_QWORD *)(v5 - 424);
        *(_QWORD *)(v5 - 136) = MEMORY[0x1E0D24668];
        sub_1C079DFC4((uint64_t *)(v5 - 168));
        sub_1C07A0380();
        v19 = *(_QWORD *)(v5 - 432);
        *(_QWORD *)(v5 - 184) = v16;
        *(_QWORD *)(v5 - 176) = v19;
        v20 = sub_1C079DFC4((uint64_t *)(v5 - 208));
        ((void (*)(uint64_t *, uint64_t, uint64_t))v18)(v20, v11, v16);
        *(_QWORD *)(v5 - 104) = *(_QWORD *)(v5 - 440);
        *(_QWORD *)(v5 - 96) = MEMORY[0x1E0D23DC0];
        sub_1C079DFC4((uint64_t *)(v5 - 128));
        sub_1C077F22C();
        sub_1C0784B6C(v5 - 208, (uint64_t *)&unk_1ED7626B0);
        _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0(v5 - 168);
        sub_1C07BA9B8();
        _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0(v5 - 128);
        *(_QWORD *)(v5 - 320) = sub_1C106BAB8();
        sub_1C07AF688();
        v15 = MEMORY[0x1E0DEE9D8];
        v10 = *(_QWORD *)(v5 - 216);
      }
      v21 = *(_QWORD *)(v5 - 368);
      sub_1C0793310(v10, v21);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1C077EE6C();
        sub_1C07EC1CC();
        v15 = v25;
      }
      v22 = *(_QWORD *)(v5 - 224);
      v23 = *(_QWORD *)(v5 - 384);
      v24 = *(_QWORD *)(v15 + 16);
      if (v24 >= *(_QWORD *)(v15 + 24) >> 1)
      {
        sub_1C07EC1CC();
        v23 = *(_QWORD *)(v5 - 384);
        v22 = *(_QWORD *)(v5 - 224);
        v15 = v26;
      }
      *(_QWORD *)(v15 + 16) = v24 + 1;
      sub_1C0D555E4(v21, v15 + v23 + v24 * v22);
      sub_1C079D510(v10);
      sub_1C077E2A4();
    }
    sub_1C0784B6C(v0, &qword_1ED75C398);
    v27 = *(_QWORD *)(v5 - 352);
    if (*(_QWORD *)(v4 + 16))
    {
      v28 = *(_QWORD *)(v5 - 248);
      sub_1C07B6520(v7, v28, v4, *(_QWORD *)(v5 - 320), *(_QWORD *)(v5 - 296), *(_QWORD *)(v5 - 288));
      v29 = *(_QWORD *)(v5 - 240);
      v30 = *(_QWORD *)(v5 - 232);
      sub_1C0778580();
      sub_1C077E584();
      sub_1C07814FC();
      (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v28, v30);
    }
    else
    {
      sub_1C078F230();
      sub_1C07814FC();
      (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v5 - 240) + 8))(*(_QWORD *)(v5 - 248), *(_QWORD *)(v5 - 232));
      sub_1C077E584();
    }
    v6 = v27;
  }
LABEL_3:
  sub_1C07B1F90(v6, type metadata accessor for TranslatedEntityTriple);
  JUMPOUT(0x1C0D4AC48);
}

void sub_1C0D4B1D8()
{
  uint64_t v0;

  if (v0)
    JUMPOUT(0x1C0D4AF20);
  JUMPOUT(0x1C0D4AF7CLL);
}

void sub_1C0D4B36C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void (*a7)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  void *v13;

  v13 = (void *)MEMORY[0x1C3BA79F4]();
  a7(a5, a6, a3, a4, a1);
  objc_autoreleasePoolPop(v13);
}

uint64_t sub_1C0D4B3EC(uint64_t (*a1)(uint64_t, uint64_t, double), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int *v11;
  uint64_t v12;
  double v13;
  uint64_t v14;
  char *v15;
  int *v16;
  uint64_t result;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)(uint64_t);
  int *v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  void (*v30)(char *, char *, uint64_t);
  char *v31;
  char *v32;
  uint64_t v33;
  char *v34;
  void (*v35)(uint64_t);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  int *v63;

  v59 = a5;
  v8 = type metadata accessor for ExpiredGraphTriple(0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v54 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = (int *)type metadata accessor for GraphTriple(0);
  v12 = *((_QWORD *)v11 - 1);
  v13 = MEMORY[0x1E0C80A78](v11);
  v15 = (char *)&v54 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = v63;
  result = a1(a3, a4, v13);
  if (!v16)
  {
    v20 = result;
    v21 = v19;
    v63 = (int *)v8;
    v57 = v12;
    if (v18)
    {
      v22 = *(_QWORD *)(v18 + 16);
      if (v22)
      {
        v55 = v19;
        v56 = result;
        v23 = v18 + ((*(unsigned __int8 *)(v57 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v57 + 80));
        v58 = *(_QWORD *)(v57 + 72);
        v54 = v18;
        _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
        v24 = type metadata accessor for ExpiredGraphTriple;
        v25 = v63;
        do
        {
          v60 = v23;
          v61 = v22;
          sub_1C08D6F44(v23, (uint64_t)v15, type metadata accessor for GraphTriple);
          v26 = sub_1C106E590();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v10, v15, v26);
          v27 = &v15[v11[5]];
          v28 = &v10[v25[5]];
          v29 = sub_1C106E41C();
          v30 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 16);
          v30(v28, v27, v29);
          v31 = &v15[v11[6]];
          v32 = &v10[v63[6]];
          v33 = sub_1C106EB24();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v33 - 8) + 16))(v32, v31, v33);
          v30(&v10[v63[7]], &v15[v11[7]], v29);
          v34 = &v15[v11[8]];
          v35 = (void (*)(uint64_t))v24;
          v37 = *(_QWORD *)v34;
          v36 = *((_QWORD *)v34 + 1);
          v38 = *(_QWORD *)&v15[v11[9]];
          v39 = *(_QWORD *)&v15[v11[10]];
          v40 = &v15[v11[11]];
          v41 = *((_QWORD *)v40 + 1);
          v62 = *(_QWORD *)v40;
          _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
          _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
          sub_1C106AC6C();
          v42 = v62;
          v43 = &v10[v63[8]];
          *(_QWORD *)v43 = v37;
          *((_QWORD *)v43 + 1) = v36;
          v24 = (uint64_t (*)(uint64_t))v35;
          *(_QWORD *)&v10[v63[9]] = v38;
          *(_QWORD *)&v10[v63[10]] = v39;
          v44 = &v10[v63[11]];
          *(_QWORD *)v44 = v42;
          *((_QWORD *)v44 + 1) = v41;
          v25 = v63;
          *(_QWORD *)&v10[v63[12]] = v45;
          sub_1C07803F8(&qword_1ED747E00, v35);
          sub_1C106BFC8();
          sub_1C07B1F90((uint64_t)v10, (uint64_t (*)(_QWORD))v35);
          sub_1C07803F8(&qword_1ED7493C8, (void (*)(uint64_t))type metadata accessor for GraphTriple);
          sub_1C106C2A4();
          sub_1C07B1F90((uint64_t)v15, type metadata accessor for GraphTriple);
          v23 = v60 + v58;
          v22 = v61 - 1;
        }
        while (v61 != 1);
        result = swift_bridgeObjectRelease_n();
        v21 = v55;
        v20 = v56;
      }
      else
      {
        result = swift_bridgeObjectRelease();
      }
    }
    v46 = v57;
    if (v21)
    {
      v47 = *(_QWORD *)(v21 + 16);
      if (v47)
      {
        v56 = v20;
        v48 = v21 + ((*(unsigned __int8 *)(v57 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v57 + 80));
        v49 = v21;
        v50 = *(_QWORD *)(v57 + 72);
        sub_1C07803F8(&qword_1ED7493C8, (void (*)(uint64_t))type metadata accessor for GraphTriple);
        v55 = v49;
        _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
        do
        {
          sub_1C106C274();
          v48 += v50;
          --v47;
        }
        while (v47);
        swift_bridgeObjectRelease();
        v20 = v56;
      }
      result = swift_bridgeObjectRelease();
    }
    if (v20)
    {
      v51 = *(_QWORD *)(v20 + 16);
      if (v51)
      {
        v52 = v20 + ((*(unsigned __int8 *)(v46 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v46 + 80));
        v53 = *(_QWORD *)(v46 + 72);
        sub_1C07803F8(qword_1ED7493B8, (void (*)(uint64_t))type metadata accessor for GraphTriple);
        _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
        do
        {
          sub_1C106BFB0();
          v52 += v53;
          --v51;
        }
        while (v51);
        swift_bridgeObjectRelease();
      }
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

uint64_t sub_1C0D4B8C8(uint64_t (*a1)(uint64_t, uint64_t, double), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int *v11;
  uint64_t v12;
  double v13;
  uint64_t v14;
  char *v15;
  int *v16;
  uint64_t result;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)(uint64_t);
  int *v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  void (*v30)(char *, char *, uint64_t);
  char *v31;
  char *v32;
  uint64_t v33;
  char *v34;
  void (*v35)(uint64_t);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  int *v63;

  v59 = a5;
  v8 = type metadata accessor for ExpiredEventTriple(0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v54 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = (int *)type metadata accessor for EventTriple(0);
  v12 = *((_QWORD *)v11 - 1);
  v13 = MEMORY[0x1E0C80A78](v11);
  v15 = (char *)&v54 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = v63;
  result = a1(a3, a4, v13);
  if (!v16)
  {
    v20 = result;
    v21 = v19;
    v63 = (int *)v8;
    v57 = v12;
    if (v18)
    {
      v22 = *(_QWORD *)(v18 + 16);
      if (v22)
      {
        v55 = v19;
        v56 = result;
        v23 = v18 + ((*(unsigned __int8 *)(v57 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v57 + 80));
        v58 = *(_QWORD *)(v57 + 72);
        v54 = v18;
        _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
        v24 = type metadata accessor for ExpiredEventTriple;
        v25 = v63;
        do
        {
          v60 = v23;
          v61 = v22;
          sub_1C08D6F44(v23, (uint64_t)v15, type metadata accessor for EventTriple);
          v26 = sub_1C106E590();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v10, v15, v26);
          v27 = &v15[v11[5]];
          v28 = &v10[v25[5]];
          v29 = sub_1C106E41C();
          v30 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 16);
          v30(v28, v27, v29);
          v31 = &v15[v11[6]];
          v32 = &v10[v63[6]];
          v33 = sub_1C106EB24();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v33 - 8) + 16))(v32, v31, v33);
          v30(&v10[v63[7]], &v15[v11[7]], v29);
          v34 = &v15[v11[8]];
          v35 = (void (*)(uint64_t))v24;
          v37 = *(_QWORD *)v34;
          v36 = *((_QWORD *)v34 + 1);
          v38 = *(_QWORD *)&v15[v11[9]];
          v39 = *(_QWORD *)&v15[v11[10]];
          v40 = &v15[v11[11]];
          v41 = *((_QWORD *)v40 + 1);
          v62 = *(_QWORD *)v40;
          _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
          _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
          sub_1C106AC6C();
          v42 = v62;
          v43 = &v10[v63[8]];
          *(_QWORD *)v43 = v37;
          *((_QWORD *)v43 + 1) = v36;
          v24 = (uint64_t (*)(uint64_t))v35;
          *(_QWORD *)&v10[v63[9]] = v38;
          *(_QWORD *)&v10[v63[10]] = v39;
          v44 = &v10[v63[11]];
          *(_QWORD *)v44 = v42;
          *((_QWORD *)v44 + 1) = v41;
          v25 = v63;
          *(_QWORD *)&v10[v63[12]] = v45;
          sub_1C07803F8(&qword_1EF63A0D0, v35);
          sub_1C106BFC8();
          sub_1C07B1F90((uint64_t)v10, (uint64_t (*)(_QWORD))v35);
          sub_1C07803F8(&qword_1ED749378, (void (*)(uint64_t))type metadata accessor for EventTriple);
          sub_1C106C2A4();
          sub_1C07B1F90((uint64_t)v15, type metadata accessor for EventTriple);
          v23 = v60 + v58;
          v22 = v61 - 1;
        }
        while (v61 != 1);
        result = swift_bridgeObjectRelease_n();
        v21 = v55;
        v20 = v56;
      }
      else
      {
        result = swift_bridgeObjectRelease();
      }
    }
    v46 = v57;
    if (v21)
    {
      v47 = *(_QWORD *)(v21 + 16);
      if (v47)
      {
        v56 = v20;
        v48 = v21 + ((*(unsigned __int8 *)(v57 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v57 + 80));
        v49 = v21;
        v50 = *(_QWORD *)(v57 + 72);
        sub_1C07803F8(&qword_1ED749378, (void (*)(uint64_t))type metadata accessor for EventTriple);
        v55 = v49;
        _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
        do
        {
          sub_1C106C274();
          v48 += v50;
          --v47;
        }
        while (v47);
        swift_bridgeObjectRelease();
        v20 = v56;
      }
      result = swift_bridgeObjectRelease();
    }
    if (v20)
    {
      v51 = *(_QWORD *)(v20 + 16);
      if (v51)
      {
        v52 = v20 + ((*(unsigned __int8 *)(v46 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v46 + 80));
        v53 = *(_QWORD *)(v46 + 72);
        sub_1C07803F8(&qword_1ED749370, (void (*)(uint64_t))type metadata accessor for EventTriple);
        _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
        do
        {
          sub_1C106BFB0();
          v52 += v53;
          --v51;
        }
        while (v51);
        swift_bridgeObjectRelease();
      }
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

uint64_t sub_1C0D4BDA4(uint64_t (*a1)(uint64_t, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;

  result = a1(a3, a4);
  if (!v4)
  {
    v8 = result;
    v9 = v7;
    if (v6)
      result = swift_bridgeObjectRelease();
    if (v9)
    {
      v10 = *(_QWORD *)(v9 + 16);
      if (v10)
      {
        v11 = *(_QWORD *)(type metadata accessor for ConstructionGraphTriple(0) - 8);
        v12 = v9 + ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80));
        v13 = *(_QWORD *)(v11 + 72);
        sub_1C07803F8(&qword_1ED750E18, (void (*)(uint64_t))type metadata accessor for ConstructionGraphTriple);
        _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
        do
        {
          sub_1C106C274();
          v12 += v13;
          --v10;
        }
        while (v10);
        swift_bridgeObjectRelease();
      }
      result = swift_bridgeObjectRelease();
    }
    if (v8)
    {
      v14 = *(_QWORD *)(v8 + 16);
      if (v14)
      {
        v15 = *(_QWORD *)(type metadata accessor for ConstructionGraphTriple(0) - 8);
        v16 = v8 + ((*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80));
        v17 = *(_QWORD *)(v15 + 72);
        sub_1C07803F8(&qword_1ED750E10, (void (*)(uint64_t))type metadata accessor for ConstructionGraphTriple);
        _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
        do
        {
          sub_1C106BFB0();
          v16 += v17;
          --v14;
        }
        while (v14);
        return swift_bridgeObjectRelease_n();
      }
      else
      {
        return swift_bridgeObjectRelease();
      }
    }
  }
  return result;
}

uint64_t sub_1C0D4BF4C(uint64_t (*a1)(uint64_t, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;

  result = a1(a3, a4);
  if (!v4)
  {
    v8 = result;
    v9 = v7;
    if (v6)
      result = swift_bridgeObjectRelease();
    if (v9)
    {
      v10 = *(_QWORD *)(v9 + 16);
      if (v10)
      {
        v11 = *(_QWORD *)(type metadata accessor for ConstructionEventTriple(0) - 8);
        v12 = v9 + ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80));
        v13 = *(_QWORD *)(v11 + 72);
        sub_1C07803F8(&qword_1ED750D88, (void (*)(uint64_t))type metadata accessor for ConstructionEventTriple);
        _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
        do
        {
          sub_1C106C274();
          v12 += v13;
          --v10;
        }
        while (v10);
        swift_bridgeObjectRelease();
      }
      result = swift_bridgeObjectRelease();
    }
    if (v8)
    {
      v14 = *(_QWORD *)(v8 + 16);
      if (v14)
      {
        v15 = *(_QWORD *)(type metadata accessor for ConstructionEventTriple(0) - 8);
        v16 = v8 + ((*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80));
        v17 = *(_QWORD *)(v15 + 72);
        sub_1C07803F8(&qword_1ED750D80, (void (*)(uint64_t))type metadata accessor for ConstructionEventTriple);
        _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
        do
        {
          sub_1C106BFB0();
          v16 += v17;
          --v14;
        }
        while (v14);
        return swift_bridgeObjectRelease_n();
      }
      else
      {
        return swift_bridgeObjectRelease();
      }
    }
  }
  return result;
}

BOOL sub_1C0D4C0F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  return (sub_1C0D48154(a3, a1, a2) & 1) == 0;
}

uint64_t sub_1C0D4C140(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *i;
  BOOL v7;

  v3 = *(_QWORD *)(a3 + 16);
  if (!v3)
    return 1;
  for (i = (_QWORD *)(a3 + 40); ; i += 2)
  {
    v7 = *(i - 1) == a1 && *i == a2;
    if (v7 || (sub_1C1070CB4() & 1) != 0)
      break;
    if (!--v3)
      return 1;
  }
  return 0;
}

void sub_1C0D4C1C0()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  _QWORD v11[3];
  uint64_t v12;
  uint64_t v13;

  v2 = (void *)MEMORY[0x1C3BA79F4]();
  sub_1C106A774();
  swift_allocObject();
  sub_1C106A768();
  sub_1C106AC6C();
  v11[0] = v3;
  sub_1C07ACF80(&qword_1ED75AB00);
  sub_1C07BB218(&qword_1ED75AAF8, &qword_1ED75AB00);
  v4 = sub_1C106A75C();
  if (!v1)
  {
    v6 = v4;
    v7 = v5;
    swift_release();
    objc_autoreleasePoolPop(v2);
    sub_1C07B0E28(v6, v7);
    sub_1C0890AF8();
    v8 = v12;
    if (v12)
    {
      v9 = v13;
      sub_1C07A9480(v11, v12);
      (*(void (**)(uint64_t, uint64_t))(v9 + 48))(v8, v9);
      _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v11);
    }
    else
    {
      sub_1C0784B6C((uint64_t)v11, &qword_1EF633030);
    }
    v10 = (char *)&loc_1C0D4C338
        + 4
        * byte_1C10B86C4[*(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for StandardEntityFusion() + 28))];
    __asm { BR              X10 }
  }
  swift_release();
  objc_autoreleasePoolPop(v2);
}

uint64_t sub_1C0D4C454(uint64_t a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint64_t v11;

  v4 = _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  a3(v4);
  v5 = sub_1C07767C4();
  a3(v5);
  sub_1C07796D8();
  sub_1C077AEBC();
  sub_1C0D5560C();
  v7 = v6;
  sub_1C07767C4();
  sub_1C077584C();
  sub_1C0D5560C();
  if (qword_1ED761458 != -1)
    swift_once();
  v8 = sub_1C106F544();
  sub_1C079E000(v8, (uint64_t)qword_1ED78D818);
  sub_1C07767CC();
  sub_1C07767CC();
  sub_1C077AEBC();
  sub_1C077584C();
  v9 = sub_1C106F538();
  v10 = sub_1C1070378();
  if (os_log_type_enabled(v9, v10))
  {
    v11 = sub_1C0775854();
    *(_DWORD *)v11 = 134218752;
    sub_1C077B5B4();
    sub_1C10705AC();
    sub_1C077B5B4();
    *(_WORD *)(v11 + 12) = 2048;
    sub_1C0778580();
    sub_1C10705AC();
    sub_1C0778580();
    *(_WORD *)(v11 + 22) = 2048;
    sub_1C07767AC();
    sub_1C077C96C();
    sub_1C07767AC();
    *(_WORD *)(v11 + 32) = 2048;
    sub_1C0775844();
    sub_1C077C96C();
    sub_1C0775844();
    _os_log_impl(&dword_1C0771000, v9, v10, "StandardEntityFusion: dbChanges: %ld existing, %ld fused, %ld inserted, %ld deleted", (uint8_t *)v11, 0x2Au);
    sub_1C0776778();
  }

  sub_1C07758A4();
  sub_1C07758A4();
  sub_1C07758A4();
  sub_1C07758A4();
  return v7;
}

_QWORD *sub_1C0D4C684(_QWORD *a1, uint64_t a2, uint64_t a3, _QWORD *a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  BOOL v36;
  unint64_t v37;
  BOOL v38;
  uint64_t v39;
  char v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t inited;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  NSObject *v50;
  os_log_type_t v51;
  uint64_t v52;
  uint64_t v54;
  uint64_t v55;
  __int128 v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  unint64_t v61;
  char *v62;
  uint64_t v63;
  _QWORD *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  _QWORD *v71;
  _QWORD *v72;
  uint64_t v73;
  uint64_t v74;

  v55 = a7;
  v59 = a3;
  v58 = a2;
  v71 = a1;
  v9 = sub_1C07ACF80(&qword_1ED7606E8);
  MEMORY[0x1E0C80A78](v9);
  v57 = (char *)&v54 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1C07ACF80(&qword_1ED7623F8);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v54 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for Source();
  MEMORY[0x1E0C80A78](v14);
  v16 = (uint64_t *)((char *)&v54 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)&v54 - v18;
  MEMORY[0x1E0C80A78](v20);
  v22 = (char *)&v54 - v21;
  v67 = type metadata accessor for EventTriple(0);
  v23 = *(_QWORD *)(v67 - 8);
  MEMORY[0x1E0C80A78](v67);
  v60 = (char *)&v54 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v25);
  v62 = (char *)&v54 - v26;
  MEMORY[0x1E0C80A78](v27);
  v63 = (uint64_t)&v54 - v28;
  MEMORY[0x1E0C80A78](v29);
  v31 = (char *)&v54 - v30;
  v64 = a4;
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C0899F30();
  v74 = v32;
  v73 = MEMORY[0x1E0DEE9D8];
  v66 = *(_QWORD *)(a6 + 16);
  if (v66)
  {
    v61 = (*(unsigned __int8 *)(v23 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80);
    v65 = a6 + v61;
    v68 = *(_QWORD *)(v23 + 72);
    v54 = a6;
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    v33 = 0;
    v56 = xmmword_1C1079220;
    v70 = v31;
LABEL_3:
    v69 = v33 + 1;
    sub_1C08D6F44(v65 + v68 * v33, (uint64_t)v31, type metadata accessor for EventTriple);
    v34 = *(_QWORD *)&v31[*(int *)(v67 + 36)];
    v35 = 1;
    do
    {
      while (1)
      {
        if (qword_1ED75DF60 != -1)
          swift_once();
        if (qword_1ED78D4B0 < v35)
        {
          v31 = v70;
          sub_1C07B1F90((uint64_t)v70, type metadata accessor for EventTriple);
          v33 = v69;
          if (v69 == v66)
          {
            swift_bridgeObjectRelease();
            goto LABEL_35;
          }
          goto LABEL_3;
        }
        sub_1C0D2AA04(v35, (uint64_t)v13);
        if (sub_1C07B2D80((uint64_t)v13, 1, v14) == 1)
          break;
        sub_1C08D6E2C((uint64_t)v13, (uint64_t)v19, (uint64_t (*)(_QWORD))type metadata accessor for Source);
        v37 = v35 - 1;
        if (__OFSUB__(v35, 1))
          goto LABEL_40;
        v36 = __OFADD__(v35++, 1);
        if (v36)
          goto LABEL_41;
        v38 = v37 > 0x40;
        if (v37 >= 0x40)
          v39 = 0;
        else
          v39 = 1 << v37;
        if (v38)
          v39 = 0;
        if ((v39 & v34) < 1)
        {
          sub_1C07B1F90((uint64_t)v19, (uint64_t (*)(_QWORD))type metadata accessor for Source);
        }
        else
        {
          sub_1C08D6E2C((uint64_t)v19, (uint64_t)v22, (uint64_t (*)(_QWORD))type metadata accessor for Source);
          sub_1C08D6E2C((uint64_t)v22, (uint64_t)v16, (uint64_t (*)(_QWORD))type metadata accessor for Source);
          if (*v16 == *v71 && v16[1] == v71[1])
          {
            sub_1C07B1F90((uint64_t)v16, (uint64_t (*)(_QWORD))type metadata accessor for Source);
LABEL_28:
            sub_1C08D6F44((uint64_t)v70, v63, type metadata accessor for EventTriple);
            v42 = v73;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            {
              sub_1C07EBE64();
              v42 = v46;
            }
            v43 = *(_QWORD *)(v42 + 16);
            if (v43 >= *(_QWORD *)(v42 + 24) >> 1)
            {
              sub_1C07EBE64();
              v42 = v47;
            }
            *(_QWORD *)(v42 + 16) = v43 + 1;
            sub_1C08D6E2C(v63, v42 + v61 + v43 * v68, type metadata accessor for EventTriple);
            v73 = v42;
            v44 = (uint64_t)v57;
            sub_1C0E60F10();
            sub_1C0784B6C(v44, &qword_1ED7606E8);
            sub_1C07ACF80(&qword_1ED762CB0);
            inited = swift_initStackObject();
            *(_OWORD *)(inited + 16) = v56;
            *(_QWORD *)(inited + 32) = v58;
            *(_QWORD *)(inited + 40) = v59;
            _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
            sub_1C0D48300();
          }
          v41 = sub_1C1070CB4();
          sub_1C07B1F90((uint64_t)v16, (uint64_t (*)(_QWORD))type metadata accessor for Source);
          if ((v41 & 1) != 0)
            goto LABEL_28;
        }
      }
      sub_1C0784B6C((uint64_t)v13, &qword_1ED7623F8);
      v36 = __OFADD__(v35++, 1);
    }
    while (!v36);
    __break(1u);
LABEL_40:
    __break(1u);
LABEL_41:
    __break(1u);
  }
  else
  {
LABEL_35:
    sub_1C08A3804();
    swift_bridgeObjectRelease();
    v72 = v64;
    sub_1C0BDB130();
    v16 = v72;
    v34 = v55;
    if (qword_1ED761458 == -1)
      goto LABEL_36;
  }
  swift_once();
LABEL_36:
  v48 = sub_1C106F544();
  sub_1C079E000(v48, (uint64_t)qword_1ED78D818);
  v49 = v73;
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  v50 = sub_1C106F538();
  v51 = sub_1C1070378();
  if (os_log_type_enabled(v50, v51))
  {
    v52 = swift_slowAlloc();
    *(_DWORD *)v52 = 134218496;
    v72 = (_QWORD *)v16[2];
    sub_1C10705AC();
    swift_bridgeObjectRelease();
    *(_WORD *)(v52 + 12) = 2048;
    v72 = *(_QWORD **)(v49 + 16);
    sub_1C10705AC();
    swift_bridgeObjectRelease();
    *(_WORD *)(v52 + 22) = 2048;
    v72 = *(_QWORD **)(v34 + 16);
    sub_1C10705AC();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C0771000, v50, v51, "StandardEntityFusion: dbChanges: %ld inserted, %ld expired, %ld deleted", (uint8_t *)v52, 0x20u);
    MEMORY[0x1C3BA8270](v52, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_beginAccess();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  return v16;
}

_QWORD *sub_1C0D4CE98(_QWORD *a1, uint64_t a2, uint64_t a3, _QWORD *a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  BOOL v36;
  unint64_t v37;
  BOOL v38;
  uint64_t v39;
  char v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t inited;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  NSObject *v50;
  os_log_type_t v51;
  uint64_t v52;
  uint64_t v54;
  uint64_t v55;
  __int128 v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  unint64_t v61;
  char *v62;
  uint64_t v63;
  _QWORD *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  _QWORD *v71;
  _QWORD *v72;
  uint64_t v73;
  uint64_t v74;

  v55 = a7;
  v59 = a3;
  v58 = a2;
  v71 = a1;
  v9 = sub_1C07ACF80(&qword_1ED75F138);
  MEMORY[0x1E0C80A78](v9);
  v57 = (char *)&v54 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1C07ACF80(&qword_1ED7623F8);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v54 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for Source();
  MEMORY[0x1E0C80A78](v14);
  v16 = (uint64_t *)((char *)&v54 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)&v54 - v18;
  MEMORY[0x1E0C80A78](v20);
  v22 = (char *)&v54 - v21;
  v67 = type metadata accessor for GraphTriple(0);
  v23 = *(_QWORD *)(v67 - 8);
  MEMORY[0x1E0C80A78](v67);
  v60 = (char *)&v54 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v25);
  v62 = (char *)&v54 - v26;
  MEMORY[0x1E0C80A78](v27);
  v63 = (uint64_t)&v54 - v28;
  MEMORY[0x1E0C80A78](v29);
  v31 = (char *)&v54 - v30;
  v64 = a4;
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C089A040();
  v74 = v32;
  v73 = MEMORY[0x1E0DEE9D8];
  v66 = *(_QWORD *)(a6 + 16);
  if (v66)
  {
    v61 = (*(unsigned __int8 *)(v23 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80);
    v65 = a6 + v61;
    v68 = *(_QWORD *)(v23 + 72);
    v54 = a6;
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    v33 = 0;
    v56 = xmmword_1C1079220;
    v70 = v31;
LABEL_3:
    v69 = v33 + 1;
    sub_1C08D6F44(v65 + v68 * v33, (uint64_t)v31, type metadata accessor for GraphTriple);
    v34 = *(_QWORD *)&v31[*(int *)(v67 + 36)];
    v35 = 1;
    do
    {
      while (1)
      {
        if (qword_1ED75DF60 != -1)
          swift_once();
        if (qword_1ED78D4B0 < v35)
        {
          v31 = v70;
          sub_1C07B1F90((uint64_t)v70, type metadata accessor for GraphTriple);
          v33 = v69;
          if (v69 == v66)
          {
            swift_bridgeObjectRelease();
            goto LABEL_35;
          }
          goto LABEL_3;
        }
        sub_1C0D2AA04(v35, (uint64_t)v13);
        if (sub_1C07B2D80((uint64_t)v13, 1, v14) == 1)
          break;
        sub_1C08D6E2C((uint64_t)v13, (uint64_t)v19, (uint64_t (*)(_QWORD))type metadata accessor for Source);
        v37 = v35 - 1;
        if (__OFSUB__(v35, 1))
          goto LABEL_40;
        v36 = __OFADD__(v35++, 1);
        if (v36)
          goto LABEL_41;
        v38 = v37 > 0x40;
        if (v37 >= 0x40)
          v39 = 0;
        else
          v39 = 1 << v37;
        if (v38)
          v39 = 0;
        if ((v39 & v34) < 1)
        {
          sub_1C07B1F90((uint64_t)v19, (uint64_t (*)(_QWORD))type metadata accessor for Source);
        }
        else
        {
          sub_1C08D6E2C((uint64_t)v19, (uint64_t)v22, (uint64_t (*)(_QWORD))type metadata accessor for Source);
          sub_1C08D6E2C((uint64_t)v22, (uint64_t)v16, (uint64_t (*)(_QWORD))type metadata accessor for Source);
          if (*v16 == *v71 && v16[1] == v71[1])
          {
            sub_1C07B1F90((uint64_t)v16, (uint64_t (*)(_QWORD))type metadata accessor for Source);
LABEL_28:
            sub_1C08D6F44((uint64_t)v70, v63, type metadata accessor for GraphTriple);
            v42 = v73;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            {
              sub_1C07EB774();
              v42 = v46;
            }
            v43 = *(_QWORD *)(v42 + 16);
            if (v43 >= *(_QWORD *)(v42 + 24) >> 1)
            {
              sub_1C07EB774();
              v42 = v47;
            }
            *(_QWORD *)(v42 + 16) = v43 + 1;
            sub_1C08D6E2C(v63, v42 + v61 + v43 * v68, type metadata accessor for GraphTriple);
            v73 = v42;
            v44 = (uint64_t)v57;
            sub_1C0E60F2C();
            sub_1C0784B6C(v44, &qword_1ED75F138);
            sub_1C07ACF80(&qword_1ED762CB0);
            inited = swift_initStackObject();
            *(_OWORD *)(inited + 16) = v56;
            *(_QWORD *)(inited + 32) = v58;
            *(_QWORD *)(inited + 40) = v59;
            _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
            sub_1C0D48300();
          }
          v41 = sub_1C1070CB4();
          sub_1C07B1F90((uint64_t)v16, (uint64_t (*)(_QWORD))type metadata accessor for Source);
          if ((v41 & 1) != 0)
            goto LABEL_28;
        }
      }
      sub_1C0784B6C((uint64_t)v13, &qword_1ED7623F8);
      v36 = __OFADD__(v35++, 1);
    }
    while (!v36);
    __break(1u);
LABEL_40:
    __break(1u);
LABEL_41:
    __break(1u);
  }
  else
  {
LABEL_35:
    sub_1C08A3820();
    swift_bridgeObjectRelease();
    v72 = v64;
    sub_1C0BDB0F8();
    v16 = v72;
    v34 = v55;
    if (qword_1ED761458 == -1)
      goto LABEL_36;
  }
  swift_once();
LABEL_36:
  v48 = sub_1C106F544();
  sub_1C079E000(v48, (uint64_t)qword_1ED78D818);
  v49 = v73;
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  v50 = sub_1C106F538();
  v51 = sub_1C1070378();
  if (os_log_type_enabled(v50, v51))
  {
    v52 = swift_slowAlloc();
    *(_DWORD *)v52 = 134218496;
    v72 = (_QWORD *)v16[2];
    sub_1C10705AC();
    swift_bridgeObjectRelease();
    *(_WORD *)(v52 + 12) = 2048;
    v72 = *(_QWORD **)(v49 + 16);
    sub_1C10705AC();
    swift_bridgeObjectRelease();
    *(_WORD *)(v52 + 22) = 2048;
    v72 = *(_QWORD **)(v34 + 16);
    sub_1C10705AC();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C0771000, v50, v51, "StandardEntityFusion: dbChanges: %ld inserted, %ld expired, %ld deleted", (uint8_t *)v52, 0x20u);
    MEMORY[0x1C3BA8270](v52, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_beginAccess();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  return v16;
}

void StandardEntityFusion.stores.getter(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_1C08D6F44(v1, a1, (uint64_t (*)(_QWORD))type metadata accessor for PhaseStores);
}

uint64_t StandardEntityFusion.entityClass.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = v1 + *(int *)(sub_1C0789400() + 20);
  v3 = sub_1C0776744();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(v0, v2, v3);
}

void StandardEntityFusion.source.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = sub_1C0789400();
  sub_1C0D556A0(v0 + *(int *)(v1 + 24), v2, (uint64_t (*)(_QWORD))type metadata accessor for Source);
}

uint64_t StandardEntityFusion.pipelineType.getter()
{
  _BYTE *v0;
  uint64_t v1;
  uint64_t result;

  result = sub_1C0789400();
  *v0 = *(_BYTE *)(v1 + *(int *)(result + 28));
  return result;
}

void StandardEntityFusion.stageName.getter(_BYTE *a1@<X8>)
{
  *a1 = 10;
}

uint64_t sub_1C0D4D770()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  id v5;
  uint64_t v7;
  uint64_t v8;

  v0 = sub_1C07ACF80(&qword_1ED7623F8);
  MEMORY[0x1E0C80A78](v0);
  v1 = sub_1C106D54C();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1ED762808 != -1)
    swift_once();
  v5 = objc_retain(*(id *)(sub_1C0CBD86C()
                         + OBJC_IVAR____TtCO24IntelligencePlatformCore14ViewGeneration11ViewClients_viewService));
  swift_release();
  sub_1C106D558();
  type metadata accessor for StandardEntityFusion();
  v7 = sub_1C106D540();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);

  return v7;
}

uint64_t StandardEntityFusion.execute()()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  v1[16] = v0;
  v1[17] = type metadata accessor for StandardEntityFusion();
  v1[18] = sub_1C0779D74();
  v2 = sub_1C0776744();
  v1[19] = v2;
  v1[20] = *(_QWORD *)(v2 - 8);
  v1[21] = sub_1C0775870();
  v1[22] = sub_1C0775870();
  v1[23] = sub_1C0775870();
  v1[24] = sub_1C0775870();
  v1[25] = sub_1C0775870();
  v1[26] = type metadata accessor for Pipeline.StatusStore();
  v1[27] = sub_1C0779D74();
  return swift_task_switch();
}

void sub_1C0D4D9F8(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = v2[26];
  v3 = v2[27];
  v5 = v2[16];
  v6 = v2[17];
  sub_1C0D556A0(v5, a2, (uint64_t (*)(_QWORD))type metadata accessor for Configuration);
  v7 = *(unsigned __int8 *)(v5 + *(int *)(v6 + 28));
  *(_BYTE *)(v3 + *(int *)(v4 + 20)) = v7;
  *(_QWORD *)(sub_1C0778598() + 16) = MEMORY[0x1E0DEE9D8];
  sub_1C077F0E4();
  __asm { BR              X9 }
}

void sub_1C0D4DAC0(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, int a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void *aBlock, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36)
{
  uint64_t v36;
  _QWORD *v38;
  _QWORD *v39;
  uint64_t v40;
  id v41;
  id v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  void *v50;
  id v51;
  void *v52;
  void *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  const void *v57;
  _QWORD *v58;

  swift_bridgeObjectRelease();
  v56 = v40;
  v41 = objc_msgSend((id)objc_opt_self(), sel_sharedPhotoLibrary);
  v42 = objc_msgSend(v41, sel_librarySpecificFetchOptions);

  v43 = sub_1C106FB14();
  v45 = v44;
  v46 = sub_1C0D54440(v42);
  if (v46)
  {
    v47 = v46;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_1C077EE6C();
      sub_1C07B7730();
      v47 = v54;
    }
    v48 = *(_QWORD *)(v47 + 16);
    if (v48 >= *(_QWORD *)(v47 + 24) >> 1)
    {
      sub_1C07B7730();
      v47 = v55;
    }
    *(_QWORD *)(v47 + 16) = v48 + 1;
    v49 = v47 + 16 * v48;
    *(_QWORD *)(v49 + 32) = v43;
    *(_QWORD *)(v49 + 40) = v45;
    v50 = (void *)sub_1C106FEEC();
    swift_bridgeObjectRelease();
    objc_msgSend(v42, sel_setFetchPropertySets_, v50);

    v51 = objc_msgSend((id)objc_opt_self(), sel_fetchPersonsWithAutonamingSuggestionFeatureUserFeedbackWithOptions_, v42);
    if (v51)
    {
      v52 = v51;
      v38[6] = sub_1C0D54494;
      v38[7] = v36;
      v38[2] = MEMORY[0x1E0C809B0];
      v38[3] = 1107296256;
      v38[4] = sub_1C0CAECC8;
      v38[5] = &unk_1E7A300E8;
      v53 = _Block_copy(v57);
      swift_retain();
      swift_release();
      objc_msgSend(v52, sel_enumerateObjectsUsingBlock_, v53);

      _Block_release(v53);
      v42 = v52;
    }

    *v58 = 0;
    *v39 = 0;
    v39[1] = 0;
    __asm { BR              X10 }
  }
  __break(1u);
  JUMPOUT(0x1C0D4E22CLL);
}

uint64_t sub_1C0D4E24C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v6;

  swift_beginAccess();
  v6 = a1;
  MEMORY[0x1C3BA6800]();
  sub_1C078442C(*(_QWORD *)((*(_QWORD *)(a4 + 16) & 0xFFFFFFFFFFFFF8) + 0x10));
  sub_1C106FFC4();
  sub_1C106FF28();
  return swift_endAccess();
}

uint64_t sub_1C0D4E2CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, _QWORD *a5, _QWORD *a6, _QWORD *a7)
{
  uint64_t v7;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  _QWORD *v32;
  BOOL v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  _QWORD *v45;
  _QWORD *v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;

  v45 = a6;
  v46 = a7;
  v44 = a5;
  v49 = a2;
  v11 = sub_1C07ACF80(&qword_1ED75C398);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v42 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0AA4B48();
  v14 = type metadata accessor for TranslatedEntityTriple(0);
  if (sub_1C07B2D80((uint64_t)v13, 1, v14) == 1)
    goto LABEL_22;
  v15 = (uint64_t *)&v13[*(int *)(v14 + 40)];
  v16 = v15[1];
  v43 = *v15;
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C07B1F90((uint64_t)v13, type metadata accessor for TranslatedEntityTriple);
  sub_1C0CCBB04();
  if (v7)
  {
    swift_bridgeObjectRelease();
    return (uint64_t)a4;
  }
  v17 = type metadata accessor for StandardEntityFusion();
  v18 = *(unsigned __int8 *)(a3 + *(int *)(v17 + 28));
  v13 = (char *)sub_1C0D4D770();
  swift_beginAccess();
  v19 = *a4;
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  v20 = (_QWORD *)sub_1C0D4E6B0(a1, v49, v18, (uint64_t)v13, v19, (uint64_t)&qword_1ED7606E8, (uint64_t)type metadata accessor for EventTriple, (uint64_t)sub_1C07EBE64, sub_1C0899F30, (uint64_t)sub_1C0D5555C, (uint64_t)&unk_1EF648848, (void (*)(uint64_t *))&unk_1EF648850, (uint64_t)&qword_1ED75F058, (uint64_t)&protocol conformance descriptor for EventTriple, (uint64_t)sub_1C0D551EC, (void (*)(uint64_t))sub_1C0D47EB4, (uint64_t)sub_1C0BE8D34, (uint64_t)sub_1C0E60F10, (void (*)(uint64_t *))sub_1C0A7F648,
                    (uint64_t)sub_1C0AA4B54,
                    (uint64_t)&qword_1EF63A028);
  v22 = v21;
  v24 = v23;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  a4 = sub_1C0D4C684((_QWORD *)(a3 + *(int *)(v17 + 24)), v43, v16, v20, v22, v24, v49);
  v27 = v26;
  v29 = v28;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (a4)
    v30 = a4[2];
  else
    v30 = 0;
  v32 = v45;
  v31 = v46;
  v33 = __OFADD__(*v44, v30);
  v34 = *v44 + v30;
  if (v33)
  {
    __break(1u);
  }
  else
  {
    *v44 = v34;
    if (v27)
      v35 = *(_QWORD *)(v27 + 16);
    else
      v35 = 0;
    v33 = __OFADD__(*v32, v35);
    v36 = *v32 + v35;
    if (!v33)
    {
      *v32 = v36;
      if (v29)
        v37 = *(_QWORD *)(v29 + 16);
      else
        v37 = 0;
      v33 = __OFADD__(*v31, v37);
      v38 = *v31 + v37;
      if (!v33)
      {
        *v31 = v38;
        return (uint64_t)a4;
      }
      goto LABEL_21;
    }
  }
  __break(1u);
LABEL_21:
  __break(1u);
LABEL_22:
  sub_1C0784B6C((uint64_t)v13, &qword_1ED75C398);
  v47 = 0;
  v48 = 0xE000000000000000;
  sub_1C1070774();
  v47 = type metadata accessor for StandardEntityFusion();
  sub_1C07ACF80(&qword_1ED75BF68);
  v39 = sub_1C106FB5C();
  v41 = v40;
  swift_bridgeObjectRelease();
  v47 = v39;
  v48 = v41;
  sub_1C106FC94();
  result = sub_1C1070954();
  __break(1u);
  return result;
}

uint64_t sub_1C0D4E6B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, _QWORD *a9, uint64_t a10, uint64_t a11, void (*a12)(uint64_t *), uint64_t a13, uint64_t a14, uint64_t a15, void (*a16)(uint64_t), uint64_t a17, uint64_t a18, void (*a19)(uint64_t *), uint64_t a20,uint64_t a21)
{
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(uint64_t);
  void (*v27)(uint64_t);
  uint64_t *v28;
  uint64_t *v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t *v91;
  uint64_t v92;
  void (*v93)(uint64_t);
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  _QWORD *v101;
  uint64_t *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  unint64_t v106;
  unint64_t v107;
  uint64_t v108;
  uint64_t v109;
  int64_t v110;
  unint64_t v111;
  char v112;
  char v113;
  int64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  BOOL v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  char v132;
  char v133;
  char v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  _QWORD *v139;
  uint64_t *v140;
  uint64_t v141;
  unint64_t v142;
  char v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  unint64_t v147;
  char v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t *v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  void (*v156)(uint64_t);
  uint64_t v157;
  char v158;
  uint64_t v159;
  uint64_t v160;
  _QWORD *v161;
  uint64_t v162;
  unint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v168;
  char v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  NSObject *v177;
  os_log_type_t v178;
  uint8_t *v179;
  uint64_t v180;
  unint64_t v181;
  uint64_t v184[2];
  void (*v185)(uint64_t *);
  uint64_t v186;
  uint64_t v187;
  void (*v188)(uint64_t);
  void (*v189)(uint64_t *);
  uint64_t v190;
  _QWORD *v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  unint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  int64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t *v210;
  int64_t v211;
  uint64_t v212;
  uint64_t *v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  unint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t *v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t *v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  void (*v230)(uint64_t);
  uint64_t v231;
  uint64_t *v232;
  uint64_t v233;
  uint64_t *v234;
  uint64_t v235;
  uint64_t v236;
  char *v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  _QWORD v244[14];
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t *v252;
  _QWORD *v253;

  sub_1C077AE5C();
  v248 = v22;
  v249 = v23;
  v25 = v24;
  v27 = v26;
  v29 = v28;
  v213 = (uint64_t *)v21;
  v31 = v30;
  v33 = v32;
  v226 = v34;
  v36 = v35;
  v38 = v37;
  sub_1C07ACF80(&qword_1ED75C398);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v39);
  sub_1C077AE40();
  v205 = v40;
  v225 = v29;
  sub_1C07797E4();
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v41);
  sub_1C077AED0();
  sub_1C077AF60();
  MEMORY[0x1E0C80A78](v42);
  sub_1C0778674();
  v44 = sub_1C0787A68(v43);
  v45 = ((uint64_t (*)(uint64_t))v27)(v44);
  v46 = *(_QWORD *)(v45 - 8);
  MEMORY[0x1E0C80A78](v45);
  sub_1C077AED0();
  sub_1C077AF60();
  MEMORY[0x1E0C80A78](v47);
  sub_1C0779728();
  sub_1C077AF60();
  MEMORY[0x1E0C80A78](v48);
  sub_1C0779728();
  sub_1C077AF60();
  MEMORY[0x1E0C80A78](v49);
  sub_1C0779728();
  sub_1C077AF60();
  MEMORY[0x1E0C80A78](v50);
  sub_1C0779728();
  sub_1C077AF60();
  MEMORY[0x1E0C80A78](v51);
  sub_1C0779728();
  sub_1C077AF60();
  MEMORY[0x1E0C80A78](v52);
  sub_1C0779728();
  sub_1C077AF60();
  MEMORY[0x1E0C80A78](v53);
  sub_1C0779728();
  sub_1C077AF60();
  MEMORY[0x1E0C80A78](v54);
  sub_1C0779728();
  v240 = v55;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v56);
  sub_1C0779728();
  sub_1C077AF60();
  MEMORY[0x1E0C80A78](v57);
  sub_1C0779728();
  sub_1C077AF60();
  MEMORY[0x1E0C80A78](v58);
  sub_1C0778674();
  v214 = v59;
  sub_1C07ACF80((uint64_t *)&unk_1ED75D160);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v60);
  sub_1C077AED0();
  sub_1C077AF60();
  MEMORY[0x1E0C80A78](v61);
  sub_1C077AF60();
  MEMORY[0x1E0C80A78](v62);
  sub_1C0778674();
  sub_1C0787A68(v63);
  v64 = sub_1C106E41C();
  v238 = *(_QWORD *)(v64 - 8);
  v239 = v64;
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v65);
  sub_1C077AED0();
  sub_1C077AF60();
  MEMORY[0x1E0C80A78](v66);
  v237 = (char *)v184 - v67;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v68);
  v212 = sub_1C0D55580(v69, v70, v71, v72, v73, v74, v75, v76, v184[0]);
  v216 = *(_QWORD *)(v212 - 8);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v77);
  sub_1C077AF60();
  MEMORY[0x1E0C80A78](v78);
  sub_1C0779728();
  sub_1C077AF60();
  MEMORY[0x1E0C80A78](v79);
  sub_1C0779728();
  v232 = (uint64_t *)v80;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v81);
  sub_1C0779728();
  sub_1C077AF60();
  MEMORY[0x1E0C80A78](v82);
  sub_1C0778674();
  v233 = v83;
  type metadata accessor for StandardEntityFusion();
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v84);
  sub_1C0778564();
  v87 = v86 - v85;
  if (!*(_QWORD *)(v36 + 16))
  {
    v243 = v38;
    sub_1C07797E4();
    sub_1C07BB218(&qword_1ED75D0F8, &qword_1ED75D0F0);
    sub_1C07803F8(&qword_1ED75C318, (void (*)(uint64_t))type metadata accessor for TranslatedEntityTriple);
    sub_1C07BAAE4();
    sub_1C0778624();
    sub_1C0D47A2C();
    sub_1C07767AC();
LABEL_7:
    v231 = MEMORY[0x1E0DEE9D8];
    return sub_1C07B4958();
  }
  if (!*(_QWORD *)(v38 + 16))
  {
    sub_1C07767C4();
    goto LABEL_7;
  }
  v193 = v87;
  v195 = v31;
  v229 = v33;
  v224 = v46;
  v198 = v45;
  v197 = v25;
  v231 = v251;
  v88 = v250;
  v89 = sub_1C07767C4();
  v90 = ((uint64_t (*)(uint64_t))v88)(v89);
  v91 = v213;
  v235 = v90;
  v244[11] = v90;
  v92 = sub_1C0782380();
  v93 = v27;
  sub_1C0D509F0(v92, v94, (uint64_t (*)(_QWORD))v27);
  v201 = v95;
  v96 = sub_1C0782380();
  sub_1C0D50FAC(v96, v97, (uint64_t (*)(_QWORD))v27);
  v99 = v98;
  v234 = v184;
  v244[3] = v38;
  MEMORY[0x1E0C80A78](v98);
  sub_1C07ACF80(&qword_1ED75D0F0);
  sub_1C07BB218(&qword_1ED75D0F8, &qword_1ED75D0F0);
  sub_1C07803F8(&qword_1ED75C318, (void (*)(uint64_t))type metadata accessor for TranslatedEntityTriple);
  sub_1C07B4958();
  v100 = sub_1C07BAAE4();
  if (v88)
  {
    sub_1C078F230();
    sub_1C077589C();
    goto LABEL_101;
  }
  v208 = v100;
  v194 = v99;
  v231 = a11;
  v222 = a10;
  v101 = v253;
  v102 = v252;
  v234 = v184;
  v244[2] = v235;
  MEMORY[0x1E0C80A78](v100);
  sub_1C07767B4();
  sub_1C07AF288();
  sub_1C07BB218(v101, v102);
  sub_1C07803F8(a9, v93);
  sub_1C07B4958();
  v222 = sub_1C07BAAE4();
  v184[1] = a21;
  v184[0] = a20;
  v189 = a19;
  v187 = a18;
  v186 = a17;
  v188 = a16;
  v220 = a14;
  v219 = a13;
  v185 = a12;
  swift_bridgeObjectRelease();
  v211 = 0;
  v103 = *(_QWORD *)(v208 + 64);
  v199 = v208 + 64;
  v104 = 1 << *(_BYTE *)(v208 + 32);
  v105 = -1;
  if (v104 < 64)
    v105 = ~(-1 << v104);
  v217 = v105 & v103;
  v200 = (unint64_t)(v104 + 63) >> 6;
  v191 = v244;
  v231 = MEMORY[0x1E0DEE9D8];
  v190 = v226;
  v192 = 0;
  sub_1C078BBE0();
  v230 = v93;
  v235 = a15;
  while (v217)
  {
    v106 = __clz(__rbit64(v217));
    v217 &= v217 - 1;
    v107 = v106 | (v211 << 6);
    v108 = v208;
    v109 = v222;
LABEL_30:
    v115 = *(_QWORD *)(*(_QWORD *)(v108 + 48) + 8 * v107);
    v116 = *(_QWORD *)(*(_QWORD *)(v108 + 56) + 8 * v107);
    sub_1C077C0B8();
    if ((sub_1C1070120() & 1) != 0)
    {
      if (qword_1ED761458 != -1)
        goto LABEL_105;
      goto LABEL_97;
    }
    v117 = *(_QWORD *)(v116 + 16);
    v222 = v109;
    v218 = v116;
    if (v117 == 3)
    {
      v234 = (uint64_t *)v115;
      v118 = v233 + *(int *)(v212 + 20);
      v88 = v216;
      sub_1C0779D28();
      v120 = v116 + v119;
      sub_1C077C0B8();
      v121 = *(_QWORD *)(v88 + 72);
      v196 = v120;
      v122 = v120;
      v123 = 3;
      while (1)
      {
        v124 = v233;
        sub_1C07BA86C(v122, v233);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v238 + 16))(v236, v118, v239);
        sub_1C0789F1C(v124);
        sub_1C106E0B0();
        sub_1C07803F8(&qword_1ED75E7E0, (void (*)(uint64_t))MEMORY[0x1E0D3CC50]);
        sub_1C0791484();
        sub_1C0791484();
        v125 = v243 == v241 && v244[0] == v242;
        v115 = v125 ? 1 : sub_1C1070CB4();
        v91 = v232;
        swift_bridgeObjectRelease();
        sub_1C077960C();
        v109 = *(_QWORD *)(v238 + 8);
        v126 = v239;
        ((void (*)(char *, uint64_t))v109)(v237, v239);
        ((void (*)(uint64_t, uint64_t))v109)(v236, v126);
        if ((v115 & 1) != 0)
          break;
        v122 += v121;
        if (!--v123)
        {
          v116 = v218;
          sub_1C077589C();
          sub_1C07B751C();
          goto LABEL_58;
        }
      }
      v127 = v218;
      sub_1C07767AC();
      v128 = v207;
      sub_1C106E008();
      v129 = sub_1C0D52218(v128, v127);
      v115 = v130;
      ((void (*)(uint64_t, uint64_t))v109)(v128, v239);
      if (!v115)
      {
        sub_1C07B751C();
        v116 = v218;
        goto LABEL_58;
      }
      v131 = *(uint64_t *)((char *)v213 + *(int *)(type metadata accessor for PhaseStores() + 32));
      VisionKeyValueStore.needToInsertVisualIdentifierTriple(for:associatedIdentifiers:associatedNames:autonamingRejectionPersons:)(v129, v115, v201, v194, v195);
      v133 = v132;
      sub_1C07767AC();
      sub_1C0D556A8();
      if (*(_QWORD *)(v131 + 16) && (sub_1C0778AEC((uint64_t)v234), (v134 & 1) != 0))
      {
        sub_1C078BBE0();
        if ((v133 & 1) != 0)
        {
          v136 = *(_QWORD *)(*(_QWORD *)(v131 + 56) + 8 * v135);
          v243 = v218;
          sub_1C077584C();
          sub_1C077AE90();
          sub_1C07BC348();
          if (v88)
            goto LABEL_108;
          v137 = 0;
          sub_1C0778580();
          v243 = v136;
          sub_1C077AE90();
          v88 = 0;
          v185(&v243);
          v138 = v209;
          v192 = 0;
          sub_1C077960C();
          sub_1C07B9FA8();
          while (1)
          {
            sub_1C0775C40();
            sub_1C077EC4C(&qword_1ED755F90, v139);
            v140 = v210;
            sub_1C078A650(v137, (uint64_t)v210, (uint64_t *)&unk_1ED75D160);
            v141 = sub_1C07AF288();
            sub_1C077AEEC((uint64_t)v140, 1, v141);
            if (v125)
              break;
            v137 = *v140;
            sub_1C0D55724((uint64_t)v140 + *(int *)(v141 + 48), v138);
            if (v137 >= *(_QWORD *)(v128 + 16))
            {
              while (1)
              {
LABEL_106:
                sub_1C1070954();
                __break(1u);
              }
            }
            sub_1C0788A84();
            v142 = sub_1C077C59C();
            sub_1C07B9BB4(v142, v214);
            sub_1C07AFD98();
            sub_1C07827E8();
            sub_1C077B3BC();
            sub_1C07AFB90();
            sub_1C0D523D8();
            sub_1C07B9BB4(v137, v215);
            if ((sub_1C07AF304() & 1) == 0)
            {
              v145 = sub_1C079AFB0();
              sub_1C07B98D4(v145);
            }
            sub_1C07BD134();
            v91 = v221;
            if (v143)
            {
              v146 = sub_1C07977B0();
              sub_1C07B98D4(v146);
            }
            sub_1C07AB5EC();
            sub_1C07BBFB8(v144, (uint64_t)&v243);
            sub_1C079C0A0((uint64_t)&v242);
            sub_1C079C0A0((uint64_t)&v241);
            v138 = v209;
            sub_1C077B830(v209);
          }
          sub_1C07BA728();
          sub_1C07767AC();
        }
        else
        {
          sub_1C0778580();
          sub_1C07B9E70();
        }
      }
      else
      {
        if ((v133 & 1) != 0)
        {
          _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
          sub_1C07B9E70();
          sub_1C0D55640(v196, (uint64_t)v91);
          sub_1C0D55688();
        }
        swift_bridgeObjectRelease();
        sub_1C07B9E70();
        sub_1C078BBE0();
      }
    }
    else
    {
LABEL_58:
      if (*(_QWORD *)(v109 + 16))
      {
        v147 = sub_1C0778AEC(v115);
        if ((v148 & 1) != 0)
        {
          v149 = *(_QWORD *)(*(_QWORD *)(v109 + 56) + 8 * v147);
          if (*(_QWORD *)(v149 + 16) == v117)
          {
            v234 = (uint64_t *)v115;
            if (v117 == 1)
            {
              sub_1C07AFD98();
              v188(v149);
              sub_1C077AEEC(v115, 1, v198);
              if (v125)
              {
                sub_1C07796E0();
                v150 = v115;
                v151 = v225;
              }
              else
              {
                v155 = v206;
                v156 = v230;
                sub_1C08D6E2C(v115, v206, (uint64_t (*)(_QWORD))v230);
                v157 = v205;
                sub_1C0AA4B48();
                sub_1C077AEEC(v157, 1, v212);
                if (!v158)
                {
                  sub_1C077589C();
                  sub_1C08D6E2C(v157, v202, type metadata accessor for TranslatedEntityTriple);
                  sub_1C07AFD98();
                  sub_1C07827E8();
                  sub_1C077B3BC();
                  v168 = v203;
                  sub_1C0D523D8();
                  sub_1C0D555AC(v168, v204);
                  v169 = sub_1C07AF304();
                  if ((v169 & 1) == 0)
                  {
                    v173 = sub_1C079AFB0();
                    sub_1C07B98D4(v173);
                  }
                  sub_1C07BD134();
                  if (v143)
                  {
                    v174 = sub_1C07977B0();
                    sub_1C07B98D4(v174);
                  }
                  *(_QWORD *)(v231 + 16) = v168;
                  sub_1C0779D28();
                  sub_1C08D6E2C(v204, v171 + v170 + *(_QWORD *)(v172 + 72) * v155, (uint64_t (*)(_QWORD))v156);
                  sub_1C078AC18(v203);
                  sub_1C07B1F90(v202, type metadata accessor for TranslatedEntityTriple);
                  sub_1C078AC18(v206);
                  goto LABEL_88;
                }
                sub_1C07796E0();
                sub_1C078AC18(v155);
                v150 = v157;
                v151 = &qword_1ED75C398;
              }
              sub_1C0784B6C(v150, v151);
            }
            else
            {
              sub_1C07796E0();
            }
            v243 = v116;
            sub_1C077C0B8();
            sub_1C07BC348();
            v159 = v223;
            if (v88)
            {
LABEL_108:
              swift_release();
              __break(1u);
              JUMPOUT(0x1C0D4FFA4);
            }
            v160 = 0;
            sub_1C077589C();
            v243 = v149;
            sub_1C07796E0();
            v189(&v243);
            v192 = 0;
            sub_1C077E584();
            sub_1C07B9FA8();
            sub_1C0775C40();
            while (1)
            {
              sub_1C0D48684(&qword_1ED755F90, type metadata accessor for TranslatedEntityTriple, v161);
              sub_1C078A650(v160, (uint64_t)v91, (uint64_t *)&unk_1ED75D160);
              v162 = sub_1C07AF288();
              sub_1C077AEEC((uint64_t)v91, 1, v162);
              if (v125)
                break;
              v160 = *v91;
              sub_1C08D6E2C((uint64_t)v91 + *(int *)(v162 + 48), v159, type metadata accessor for TranslatedEntityTriple);
              if (v160 >= *(_QWORD *)(v116 + 16))
                goto LABEL_106;
              sub_1C0788A84();
              v163 = sub_1C077C59C();
              sub_1C0D555AC(v163, v227);
              sub_1C07AFD98();
              sub_1C07827E8();
              sub_1C077B3BC();
              sub_1C07AFB90();
              sub_1C0D523D8();
              sub_1C0D555AC(v160, v228);
              if ((sub_1C07AF304() & 1) == 0)
              {
                v165 = sub_1C079AFB0();
                sub_1C07B98D4(v165);
              }
              sub_1C07BD134();
              if (v143)
              {
                v166 = sub_1C07977B0();
                sub_1C07B98D4(v166);
              }
              sub_1C07AB5EC();
              sub_1C07BBFB8(v164, (uint64_t)&v247);
              sub_1C079C0A0((uint64_t)&v246);
              sub_1C079C0A0((uint64_t)&v245);
              v159 = v223;
              sub_1C07B1F90(v223, type metadata accessor for TranslatedEntityTriple);
              sub_1C0775C40();
            }
            sub_1C07BA728();
            sub_1C07767AC();
LABEL_88:
            sub_1C077F0E4();
            __asm { BR              X8 }
          }
        }
      }
      if (*(_QWORD *)(v116 + 16))
      {
        v152 = v216;
        sub_1C0779D28();
        v154 = v116 + v153;
        sub_1C077C0B8();
        v234 = *(uint64_t **)(v152 + 72);
        sub_1C07B9BB4(v154, (uint64_t)v232);
        sub_1C0D55688();
      }
      sub_1C077589C();
    }
  }
  v110 = v211 + 1;
  if (__OFADD__(v211, 1))
  {
    __break(1u);
    JUMPOUT(0x1C0D4FF04);
  }
  if (v110 >= v200)
  {
LABEL_99:
    sub_1C078F230();
    sub_1C07797A4();
    sub_1C078F230();
    sub_1C077F0E4();
    __asm { BR              X10 }
  }
  v111 = *(_QWORD *)(v199 + 8 * v110);
  v109 = v222;
  if (v111)
  {
LABEL_29:
    v217 = (v111 - 1) & v111;
    v211 = v110;
    v107 = __clz(__rbit64(v111)) + (v110 << 6);
    v108 = v208;
    goto LABEL_30;
  }
  sub_1C07AC930();
  if (v112 == v113)
    goto LABEL_99;
  sub_1C0D55570();
  if (v111)
    goto LABEL_28;
  sub_1C07AC930();
  if (v112 == v113)
    goto LABEL_99;
  sub_1C0D55570();
  if (v111)
    goto LABEL_28;
  sub_1C07AC930();
  if (v112 == v113)
    goto LABEL_99;
  sub_1C0D55570();
  if (v111)
    goto LABEL_28;
  sub_1C07AC930();
  if (v112 == v113)
    goto LABEL_99;
  sub_1C0D55570();
  if (v111)
  {
LABEL_28:
    v110 = v114;
    goto LABEL_29;
  }
  while (1)
  {
    v110 = v114 + 1;
    if (__OFADD__(v114, 1))
      break;
    if (v110 >= v200)
      goto LABEL_99;
    v111 = *(_QWORD *)(v199 + 8 * v110);
    ++v114;
    if (v111)
      goto LABEL_29;
  }
  __break(1u);
LABEL_105:
  swift_once();
LABEL_97:
  v175 = sub_1C077585C();
  sub_1C079E000(v175, (uint64_t)qword_1ED78D818);
  v176 = v193;
  sub_1C08D6F44((uint64_t)v213, v193, (uint64_t (*)(_QWORD))type metadata accessor for StandardEntityFusion);
  v177 = sub_1C106F538();
  v178 = sub_1C10703A8();
  if (os_log_type_enabled(v177, v178))
  {
    v179 = (uint8_t *)sub_1C0775854();
    v243 = sub_1C0775854();
    *(_DWORD *)v179 = 136315138;
    sub_1C0887CC4();
    v241 = sub_1C0788DAC(v180, v181, &v243);
    sub_1C10705AC();
    sub_1C077960C();
    sub_1C07B1F90(v176, (uint64_t (*)(_QWORD))type metadata accessor for StandardEntityFusion);
    _os_log_impl(&dword_1C0771000, v177, v178, "%s going to defer", v179, 0xCu);
    swift_arrayDestroy();
    sub_1C0776778();
  }
  sub_1C07B1F90(v176, (uint64_t (*)(_QWORD))type metadata accessor for StandardEntityFusion);

  sub_1C0D55660();
  sub_1C107006C();
  sub_1C07803F8(&qword_1ED759800, (void (*)(uint64_t))MEMORY[0x1E0DF05E0]);
  swift_allocError();
  sub_1C106F91C();
  swift_willThrow();
  sub_1C078F230();
  sub_1C07797A4();
  sub_1C077589C();
  sub_1C077960C();
  sub_1C0778580();
  swift_bridgeObjectRelease();
LABEL_101:
  sub_1C07767AC();
  return sub_1C07B4958();
}

uint64_t sub_1C0D4FFEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, _QWORD *a5, _QWORD *a6, _QWORD *a7)
{
  uint64_t v7;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  _QWORD *v32;
  BOOL v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  _QWORD *v45;
  _QWORD *v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;

  v45 = a6;
  v46 = a7;
  v44 = a5;
  v49 = a2;
  v11 = sub_1C07ACF80(&qword_1ED75C398);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v42 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0AA4B48();
  v14 = type metadata accessor for TranslatedEntityTriple(0);
  if (sub_1C07B2D80((uint64_t)v13, 1, v14) == 1)
    goto LABEL_22;
  v15 = (uint64_t *)&v13[*(int *)(v14 + 40)];
  v16 = v15[1];
  v43 = *v15;
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C07B1F90((uint64_t)v13, type metadata accessor for TranslatedEntityTriple);
  sub_1C0CCBB04();
  if (v7)
  {
    swift_bridgeObjectRelease();
    return (uint64_t)a4;
  }
  v17 = type metadata accessor for StandardEntityFusion();
  v18 = *(unsigned __int8 *)(a3 + *(int *)(v17 + 28));
  v13 = (char *)sub_1C0D4D770();
  swift_beginAccess();
  v19 = *a4;
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  v20 = (_QWORD *)sub_1C0D4E6B0(a1, v49, v18, (uint64_t)v13, v19, (uint64_t)&qword_1ED75F138, (uint64_t)type metadata accessor for GraphTriple, (uint64_t)sub_1C07EB774, sub_1C089A040, (uint64_t)sub_1C0D5555C, (uint64_t)&unk_1ED7480F0, (void (*)(uint64_t *))&unk_1ED7480F8, (uint64_t)&qword_1ED7606F0, (uint64_t)&protocol conformance descriptor for GraphTriple, (uint64_t)sub_1C0D552C8, (void (*)(uint64_t))sub_1C0D47F5C, (uint64_t)sub_1C0BE8D34, (uint64_t)sub_1C0E60F2C, (void (*)(uint64_t *))sub_1C0A7F664,
                    (uint64_t)sub_1C0AA4998,
                    (uint64_t)&qword_1ED748130);
  v22 = v21;
  v24 = v23;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  a4 = sub_1C0D4CE98((_QWORD *)(a3 + *(int *)(v17 + 24)), v43, v16, v20, v22, v24, v49);
  v27 = v26;
  v29 = v28;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (a4)
    v30 = a4[2];
  else
    v30 = 0;
  v32 = v45;
  v31 = v46;
  v33 = __OFADD__(*v44, v30);
  v34 = *v44 + v30;
  if (v33)
  {
    __break(1u);
  }
  else
  {
    *v44 = v34;
    if (v27)
      v35 = *(_QWORD *)(v27 + 16);
    else
      v35 = 0;
    v33 = __OFADD__(*v32, v35);
    v36 = *v32 + v35;
    if (!v33)
    {
      *v32 = v36;
      if (v29)
        v37 = *(_QWORD *)(v29 + 16);
      else
        v37 = 0;
      v33 = __OFADD__(*v31, v37);
      v38 = *v31 + v37;
      if (!v33)
      {
        *v31 = v38;
        return (uint64_t)a4;
      }
      goto LABEL_21;
    }
  }
  __break(1u);
LABEL_21:
  __break(1u);
LABEL_22:
  sub_1C0784B6C((uint64_t)v13, &qword_1ED75C398);
  v47 = 0;
  v48 = 0xE000000000000000;
  sub_1C1070774();
  v47 = type metadata accessor for StandardEntityFusion();
  sub_1C07ACF80(&qword_1ED75BF68);
  v39 = sub_1C106FB5C();
  v41 = v40;
  swift_bridgeObjectRelease();
  v47 = v39;
  v48 = v41;
  sub_1C106FC94();
  result = sub_1C1070954();
  __break(1u);
  return result;
}

uint64_t sub_1C0D503D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, _QWORD *a5, _QWORD *a6, _QWORD *a7)
{
  uint64_t v7;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t result;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;

  sub_1C0CCBB04();
  if (v7)
    return a3;
  v15 = *(unsigned __int8 *)(a3 + *(int *)(type metadata accessor for StandardEntityFusion() + 28));
  v33 = a5;
  v16 = a6;
  v17 = a7;
  v18 = sub_1C0D4D770();
  swift_beginAccess();
  v19 = *a4;
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  v20 = sub_1C0D4E6B0(a1, a2, v15, v18, v19, (uint64_t)&qword_1ED750DB8, (uint64_t)type metadata accessor for ConstructionEventTriple, (uint64_t)sub_1C07EC8EC, sub_1C089A064, (uint64_t)sub_1C0D5509C, (uint64_t)&unk_1EF648808, (void (*)(uint64_t *))&unk_1EF648810, (uint64_t)&qword_1EF63A020, (uint64_t)&protocol conformance descriptor for ConstructionEventTriple, (uint64_t)sub_1C0D550B4, (void (*)(uint64_t))sub_1C0D48004, (uint64_t)sub_1C0BE8D34, (uint64_t)sub_1C0E60F48, (void (*)(uint64_t *))sub_1C0A7F9F4,
          (uint64_t)sub_1C0AA4B60,
          (uint64_t)&unk_1EF648818);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1C0BDB114();
  swift_bridgeObjectRelease();
  a3 = sub_1C0D4C454(v20, a2, (void (*)(uint64_t))sub_1C089A064);
  v23 = v22;
  v25 = v24;
  result = swift_bridgeObjectRelease();
  if (a3)
    v26 = *(_QWORD *)(a3 + 16);
  else
    v26 = 0;
  v27 = __OFADD__(*v33, v26);
  v28 = *v33 + v26;
  if (v27)
  {
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  *v33 = v28;
  if (v23)
    v29 = *(_QWORD *)(v23 + 16);
  else
    v29 = 0;
  v27 = __OFADD__(*v16, v29);
  v30 = *v16 + v29;
  if (v27)
    goto LABEL_18;
  *v16 = v30;
  if (v25)
    v31 = *(_QWORD *)(v25 + 16);
  else
    v31 = 0;
  v27 = __OFADD__(*v17, v31);
  v32 = *v17 + v31;
  if (!v27)
  {
    *v17 = v32;
    return a3;
  }
LABEL_19:
  __break(1u);
  return result;
}

uint64_t sub_1C0D50668(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, _QWORD *a5, _QWORD *a6, _QWORD *a7)
{
  uint64_t v7;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t result;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;

  sub_1C0CCBB04();
  if (v7)
    return a3;
  v15 = *(unsigned __int8 *)(a3 + *(int *)(type metadata accessor for StandardEntityFusion() + 28));
  v33 = a5;
  v16 = a6;
  v17 = a7;
  v18 = sub_1C0D4D770();
  swift_beginAccess();
  v19 = *a4;
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  v20 = sub_1C0D4E6B0(a1, a2, v15, v18, v19, (uint64_t)&qword_1ED750E40, (uint64_t)type metadata accessor for ConstructionGraphTriple, (uint64_t)sub_1C07EC154, sub_1C089A088, (uint64_t)sub_1C0D5555C, (uint64_t)&unk_1ED751280, (void (*)(uint64_t *))&unk_1ED751288, (uint64_t)&qword_1ED750DF0, (uint64_t)&protocol conformance descriptor for ConstructionGraphTriple, (uint64_t)sub_1C0D5512C, (void (*)(uint64_t))sub_1C0D480AC, (uint64_t)sub_1C0BE8D34, (uint64_t)sub_1C0E60F64, (void (*)(uint64_t *))sub_1C0A7FA10,
          (uint64_t)sub_1C0AA49A4,
          (uint64_t)&unk_1EF648830);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1C0BDB0DC();
  swift_bridgeObjectRelease();
  a3 = sub_1C0D4C454(v20, a2, (void (*)(uint64_t))sub_1C089A088);
  v23 = v22;
  v25 = v24;
  result = swift_bridgeObjectRelease();
  if (a3)
    v26 = *(_QWORD *)(a3 + 16);
  else
    v26 = 0;
  v27 = __OFADD__(*v33, v26);
  v28 = *v33 + v26;
  if (v27)
  {
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  *v33 = v28;
  if (v23)
    v29 = *(_QWORD *)(v23 + 16);
  else
    v29 = 0;
  v27 = __OFADD__(*v16, v29);
  v30 = *v16 + v29;
  if (v27)
    goto LABEL_18;
  *v16 = v30;
  if (v25)
    v31 = *(_QWORD *)(v25 + 16);
  else
    v31 = 0;
  v27 = __OFADD__(*v17, v31);
  v32 = *v17 + v31;
  if (!v27)
  {
    *v17 = v32;
    return a3;
  }
LABEL_19:
  __break(1u);
  return result;
}

uint64_t sub_1C0D50900(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;

  sub_1C0CBC1D4();
  v6 = sub_1C0D52C7C(a1, a2, a3);
  v7 = *(_QWORD *)(v6 + 16);
  if (v7)
  {
    v8 = (_QWORD *)(v6 + 32);
    do
    {
      v9 = sub_1C07A9480(v8, v8[3]);
      sub_1C0D68FF4((uint64_t)v9, 0, 0);
      v8 += 5;
      --v7;
    }
    while (v7);
  }
  swift_release();
  return swift_bridgeObjectRelease();
}

void sub_1C0D509F0(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v38;
  uint64_t v39;
  uint64_t v40;
  char v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char v61;
  uint64_t v62;
  uint64_t v63;
  _QWORD v64[2];
  uint64_t v65;
  char *v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t (*v77)(_QWORD);
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t (*v82)(_QWORD);
  uint64_t v83;
  uint64_t (*v84)(_QWORD);
  _QWORD v85[2];

  v65 = a2;
  v75 = sub_1C0782A74();
  v7 = *(_QWORD *)(v75 - 8);
  MEMORY[0x1E0C80A78](v75);
  sub_1C07785B8();
  v80 = *(_QWORD *)(sub_1C0779688() - 8);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v8);
  v66 = (char *)v64 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v10);
  v70 = (char *)v64 - v11;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)v64 - v13;
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)v64 - v16;
  MEMORY[0x1E0C80A78](v18);
  sub_1C0779728();
  v72 = v19;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v20);
  sub_1C0779728();
  v71 = v21;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v22);
  sub_1C0779728();
  v78 = v23;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v24);
  v25 = sub_1C0D556E4();
  v77 = a3;
  v26 = a3(v25);
  MEMORY[0x1E0C80A78](v26);
  v73 = (uint64_t)v64 - v28;
  v85[0] = MEMORY[0x1E0DEE9E8];
  v29 = *(_QWORD *)(a1 + 16);
  v79 = v4;
  v74 = v30;
  if (v29)
  {
    v64[0] = v27;
    sub_1C0779D28();
    v31 = a1;
    v33 = a1 + v32;
    v69 = *(_QWORD *)(v7 + 72);
    sub_1C07B98D4(v31);
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    v67 = v14;
    v68 = v3;
    v76 = v17;
    while (1)
    {
      sub_1C08D6F44(v33, v3, type metadata accessor for TranslatedEntityTriple);
      if ((sub_1C0D556B4() & 1) != 0)
      {
        sub_1C07BFE14();
        v35 = (uint64_t)v17;
      }
      else
      {
        v35 = (uint64_t)v17;
        v34 = (uint64_t)a3;
      }
      sub_1C07AA844(v35, v34);
      v36 = (uint64_t)v70;
      sub_1C106DE70();
      sub_1C07803F8(&qword_1ED75E7E0, (void (*)(uint64_t))MEMORY[0x1E0D3CC50]);
      sub_1C079DE34();
      sub_1C079DE34();
      if (v83 == v81 && v84 == v82)
        v38 = 1;
      else
        v38 = sub_1C07785B0();
      swift_bridgeObjectRelease();
      sub_1C077960C();
      sub_1C0798FC0((uint64_t)v14);
      sub_1C07AA844(v36, (uint64_t)v76);
      v39 = v75;
      if ((v38 & 1) != 0)
        goto LABEL_20;
      v40 = (uint64_t)v66;
      sub_1C106E008();
      sub_1C079DE34();
      sub_1C079DE34();
      a3 = v82;
      if (v83 == v81 && v84 == v82)
        break;
      v42 = sub_1C07785B0();
      sub_1C07767AC();
      sub_1C077960C();
      sub_1C0798FC0(v40);
      sub_1C0798FC0(v36);
      if ((v42 & 1) != 0)
        goto LABEL_21;
      v43 = (uint64_t)v76;
      sub_1C0798FC0((uint64_t)v76);
      v17 = (char *)v43;
      v3 = v68;
LABEL_22:
      sub_1C07B1F90(v3, type metadata accessor for TranslatedEntityTriple);
      v4 = v79;
      v14 = v67;
      v33 += v69;
      if (!--v29)
      {
        sub_1C07AF84C();
        goto LABEL_24;
      }
    }
    sub_1C07758A4();
    sub_1C0798FC0(v40);
LABEL_20:
    sub_1C0798FC0(v36);
LABEL_21:
    v3 = v68;
    v44 = *(_QWORD *)(v68 + *(int *)(v39 + 32));
    sub_1C07767C4();
    a3 = (uint64_t (*)(_QWORD))v85;
    sub_1C0781A50((uint64_t)&v83, v44);
    swift_bridgeObjectRelease();
    v45 = (uint64_t)v76;
    sub_1C0798FC0((uint64_t)v76);
    v17 = (char *)v45;
    goto LABEL_22;
  }
LABEL_24:
  v46 = *(_QWORD *)(v65 + 16);
  if (v46)
  {
    sub_1C0779D28();
    v49 = v47 + v48;
    v51 = *(_QWORD *)(v50 + 72);
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    v52 = v73;
    while (1)
    {
      sub_1C08D6F44(v49, v52, v77);
      if ((sub_1C0D556B4() & 1) != 0)
      {
        sub_1C07BFE14();
        v54 = v4;
      }
      else
      {
        v54 = v4;
        v53 = (uint64_t)a3;
      }
      sub_1C07AA844(v54, v53);
      sub_1C106DE70();
      sub_1C07803F8(&qword_1ED75E7E0, (void (*)(uint64_t))MEMORY[0x1E0D3CC50]);
      sub_1C078A0F4();
      sub_1C078A0F4();
      if (v83 == v81 && v84 == v82)
        v56 = 1;
      else
        v56 = sub_1C07785B0();
      sub_1C077960C();
      sub_1C0775894();
      sub_1C077D36C(v78);
      v57 = v71;
      sub_1C07AA844(v71, v79);
      v58 = v72;
      if ((v56 & 1) != 0)
        goto LABEL_43;
      sub_1C106E008();
      v59 = v57;
      sub_1C078A0F4();
      sub_1C078A0F4();
      a3 = v84;
      if (v83 == v81 && v84 == v82)
        break;
      v61 = sub_1C07785B0();
      sub_1C077960C();
      swift_bridgeObjectRelease();
      sub_1C077D36C(v58);
      sub_1C077D36C(v59);
      if ((v61 & 1) != 0)
        goto LABEL_44;
      v4 = v79;
      sub_1C077D36C(v79);
      v52 = v73;
      sub_1C07B1F90(v73, v77);
LABEL_45:
      v49 += v51;
      if (!--v46)
      {
        swift_bridgeObjectRelease();
        goto LABEL_47;
      }
    }
    sub_1C07758A4();
    sub_1C077D36C(v58);
    v57 = v59;
LABEL_43:
    sub_1C077D36C(v57);
LABEL_44:
    v62 = v73;
    v63 = *(_QWORD *)(v73 + *(int *)(v74 + 32));
    sub_1C07767C4();
    a3 = (uint64_t (*)(_QWORD))v85;
    sub_1C0781A50((uint64_t)&v83, v63);
    swift_bridgeObjectRelease();
    v4 = v79;
    sub_1C077D36C(v79);
    v52 = v62;
    sub_1C07B1F90(v62, v77);
    goto LABEL_45;
  }
LABEL_47:
  sub_1C0776760();
}

void sub_1C0D50FAC(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  void (*v27)(uint64_t, unint64_t, uint64_t);
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  char v40;
  void (*v41)(uint64_t, uint64_t);
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t (*v55)(_QWORD);
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  _BYTE v60[8];
  uint64_t v61;

  v49 = sub_1C0782A74();
  v6 = *(_QWORD *)(v49 - 8);
  MEMORY[0x1E0C80A78](v49);
  sub_1C077AE40();
  v56 = v7;
  v8 = sub_1C0779688();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  sub_1C077AF80();
  v12 = v10 - v11;
  MEMORY[0x1E0C80A78](v13);
  sub_1C0778674();
  v57 = v14;
  v55 = a3;
  v53 = a3(0);
  v15 = *(_QWORD *)(v53 - 8);
  MEMORY[0x1E0C80A78](v53);
  v54 = (uint64_t)&v45 - v16;
  sub_1C07ACF80(&qword_1ED75E838);
  v17 = *(_QWORD *)(v9 + 72);
  v59 = v9;
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1C1078A20;
  sub_1C106E248();
  sub_1C106E3B0();
  v58 = v17;
  sub_1C106DCE4();
  sub_1C0AA7870();
  v19 = v18;
  v61 = MEMORY[0x1E0DEE9E8];
  v52 = *(_QWORD *)(a1 + 16);
  v48 = a2;
  if (v52)
  {
    v46 = v15;
    v47 = a1;
    sub_1C0779D28();
    v51 = a1 + v20;
    v50 = *(_QWORD *)(v6 + 72);
    v21 = v19 + 56;
    sub_1C07767C4();
    v22 = 0;
    do
    {
      sub_1C08D6F44(v51 + v50 * v22, v56, type metadata accessor for TranslatedEntityTriple);
      if (*(_QWORD *)(v19 + 16)
        && (sub_1C07803F8(&qword_1ED75EA28, (void (*)(uint64_t))MEMORY[0x1E0D3CC50]),
            v23 = sub_1C106FA00(),
            v24 = -1 << *(_BYTE *)(v19 + 32),
            v25 = v23 & ~v24,
            ((*(_QWORD *)(v21 + ((v25 >> 3) & 0xFFFFFFFFFFFFF8)) >> v25) & 1) != 0))
      {
        v26 = ~v24;
        v27 = *(void (**)(uint64_t, unint64_t, uint64_t))(v59 + 16);
        while (1)
        {
          v27(v12, *(_QWORD *)(v19 + 48) + v25 * v58, v8);
          sub_1C07803F8(&qword_1ED75EA30, (void (*)(uint64_t))MEMORY[0x1E0D3CC50]);
          v28 = sub_1C0D556D8();
          (*(void (**)(uint64_t, uint64_t))(v59 + 8))(v12, v8);
          if ((v28 & 1) != 0)
            break;
          v25 = (v25 + 1) & v26;
          if (((*(_QWORD *)(v21 + ((v25 >> 3) & 0xFFFFFFFFFFFFF8)) >> v25) & 1) == 0)
            goto LABEL_8;
        }
        v30 = v56;
        v31 = *(_QWORD *)(v56 + *(int *)(v49 + 32));
        sub_1C07767C4();
        sub_1C0781A50((uint64_t)v60, v31);
        swift_bridgeObjectRelease();
        v29 = v30;
      }
      else
      {
LABEL_8:
        v29 = v56;
      }
      sub_1C07B1F90(v29, type metadata accessor for TranslatedEntityTriple);
      ++v22;
    }
    while (v22 != v52);
    swift_bridgeObjectRelease();
    a2 = v48;
    v15 = v46;
  }
  v56 = *(_QWORD *)(a2 + 16);
  if (v56)
  {
    sub_1C0779D28();
    v52 = a2 + v32;
    v51 = *(_QWORD *)(v15 + 72);
    v33 = v19 + 56;
    sub_1C07796D8();
    v34 = 0;
    do
    {
      v35 = v54;
      sub_1C08D6F44(v52 + v51 * v34, v54, v55);
      sub_1C07AA844(v57, v35 + *(int *)(v53 + 20));
      if (*(_QWORD *)(v19 + 16)
        && (sub_1C07803F8(&qword_1ED75EA28, (void (*)(uint64_t))MEMORY[0x1E0D3CC50]),
            v36 = sub_1C106FA00(),
            v37 = -1 << *(_BYTE *)(v19 + 32),
            v38 = v36 & ~v37,
            ((*(_QWORD *)(v33 + ((v38 >> 3) & 0xFFFFFFFFFFFFF8)) >> v38) & 1) != 0))
      {
        v39 = ~v37;
        while (1)
        {
          sub_1C07AA844(v12, *(_QWORD *)(v19 + 48) + v38 * v58);
          sub_1C07803F8(&qword_1ED75EA30, (void (*)(uint64_t))MEMORY[0x1E0D3CC50]);
          v40 = sub_1C0D556D8();
          v41 = *(void (**)(uint64_t, uint64_t))(v59 + 8);
          v41(v12, v8);
          if ((v40 & 1) != 0)
            break;
          v38 = (v38 + 1) & v39;
          if (((*(_QWORD *)(v33 + ((v38 >> 3) & 0xFFFFFFFFFFFFF8)) >> v38) & 1) == 0)
            goto LABEL_19;
        }
        v41(v57, v8);
        v43 = v54;
        v44 = *(_QWORD *)(v54 + *(int *)(v53 + 32));
        sub_1C07767C4();
        sub_1C0781A50((uint64_t)v60, v44);
        swift_bridgeObjectRelease();
        v42 = v43;
      }
      else
      {
LABEL_19:
        (*(void (**)(uint64_t, uint64_t))(v59 + 8))(v57, v8);
        v42 = v54;
      }
      sub_1C07B1F90(v42, v55);
      ++v34;
    }
    while (v34 != v56);
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  sub_1C0776760();
}

void sub_1C0D51494(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  int *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  int *v26;
  char *v27;
  uint64_t v28;
  char *v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  void (*v39)(char *, char *, uint64_t);
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char v53;
  char *v54;
  char *v55;
  unint64_t v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  unint64_t *v64;
  uint64_t v65;
  uint64_t v66;
  _QWORD *v67;
  uint64_t v68;
  unint64_t v69;
  uint64_t v70;
  unint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;

  v4 = v3;
  v65 = a2;
  v66 = a3;
  v6 = (int *)type metadata accessor for TranslatedEntityTriple(0);
  v68 = *((_QWORD *)v6 - 1);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v60 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v60 - v10;
  v12 = sub_1C07ACF80(&qword_1ED755F90);
  MEMORY[0x1E0C80A78](v12);
  v60 = (char *)&v60 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_1C07ACF80((uint64_t *)&unk_1ED75D160);
  MEMORY[0x1E0C80A78](v14);
  v16 = (unint64_t *)((char *)&v60 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v17);
  v19 = (char **)((char *)&v60 - v18);
  v20 = *(_QWORD *)(a1 + 16);
  v61 = a1;
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  v21 = 0;
  v22 = MEMORY[0x1E0DEE9D8];
  v67 = v19;
  v62 = v12;
  v63 = v20;
  v64 = v16;
  while (1)
  {
    v74 = v22;
    if (v21 == v20)
    {
      v23 = 1;
      v24 = v20;
    }
    else
    {
      if (v21 >= v20)
        goto LABEL_19;
      v71 = v21 + 1;
      v25 = (uint64_t)&v60[*(int *)(v12 + 48)];
      v26 = v6;
      v27 = v11;
      v28 = v4;
      v29 = v8;
      v30 = v21;
      sub_1C08D6F44(v61+ ((*(unsigned __int8 *)(v68 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v68 + 80))+ *(_QWORD *)(v68 + 72) * v21, v25, type metadata accessor for TranslatedEntityTriple);
      v31 = (uint64_t)v16 + *(int *)(v12 + 48);
      *v16 = v30;
      v8 = v29;
      v4 = v28;
      v11 = v27;
      v6 = v26;
      v32 = v25;
      v19 = v67;
      sub_1C08D6E2C(v32, v31, type metadata accessor for TranslatedEntityTriple);
      v23 = 0;
      v24 = v71;
    }
    sub_1C07B2D8C((uint64_t)v16, v23, 1, v12);
    sub_1C078A650((uint64_t)v16, (uint64_t)v19, (uint64_t *)&unk_1ED75D160);
    if (sub_1C07B2D80((uint64_t)v19, 1, v12) == 1)
      goto LABEL_16;
    v71 = v24;
    v33 = *v19;
    sub_1C08D6E2C((uint64_t)v19 + *(int *)(v12 + 48), (uint64_t)v11, type metadata accessor for TranslatedEntityTriple);
    sub_1C0CCBB04();
    if (v4)
    {
      sub_1C07B1F90((uint64_t)v11, type metadata accessor for TranslatedEntityTriple);
      swift_bridgeObjectRelease();
LABEL_16:
      swift_bridgeObjectRelease();
      return;
    }
    v70 = 0;
    v34 = sub_1C106E590();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v34 - 8) + 16))(v8, v11, v34);
    v35 = v6[5];
    v36 = &v11[v35];
    v37 = &v8[v35];
    v38 = sub_1C106E41C();
    v39 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v38 - 8) + 16);
    v39(v37, v36, v38);
    v40 = v6[6];
    v41 = &v11[v40];
    v42 = &v8[v40];
    v43 = sub_1C106EB24();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v43 - 8) + 16))(v42, v41, v43);
    v39(&v8[v6[7]], &v11[v6[7]], v38);
    v44 = &v11[v6[8]];
    v46 = *(_QWORD *)v44;
    v45 = *((_QWORD *)v44 + 1);
    sub_1C08D6F44((uint64_t)&v11[v6[9]], (uint64_t)&v8[v6[9]], (uint64_t (*)(_QWORD))type metadata accessor for Source);
    v47 = &v11[v6[10]];
    v48 = *((_QWORD *)v47 + 1);
    v72 = *(_QWORD *)v47;
    v73 = v48;
    swift_bridgeObjectRetain_n();
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    sub_1C106FC94();
    swift_bridgeObjectRelease();
    if ((v33 & 0x8000000000000000) != 0)
      break;
    if (v33 >= *(_QWORD *)(v65 + 16))
      goto LABEL_18;
    v69 = (*(unsigned __int8 *)(v68 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v68 + 80);
    v49 = *(_QWORD *)(v68 + 72);
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    sub_1C106FC94();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v50 = v72;
    v51 = v73;
    v52 = *(_QWORD *)&v11[v6[11]];
    v53 = v11[v6[12]];
    v54 = &v8[v6[8]];
    *(_QWORD *)v54 = v46;
    *((_QWORD *)v54 + 1) = v45;
    v55 = &v8[v6[10]];
    *(_QWORD *)v55 = v50;
    *((_QWORD *)v55 + 1) = v51;
    *(_QWORD *)&v8[v6[11]] = v52;
    v8[v6[12]] = v53;
    v22 = v74;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_1C07EC1CC();
      v22 = v58;
    }
    v4 = v70;
    v12 = v62;
    v56 = *(_QWORD *)(v22 + 16);
    if (v56 >= *(_QWORD *)(v22 + 24) >> 1)
    {
      sub_1C07EC1CC();
      v22 = v59;
    }
    v57 = v69;
    *(_QWORD *)(v22 + 16) = v56 + 1;
    sub_1C08D6E2C((uint64_t)v8, v22 + v57 + v56 * v49, type metadata accessor for TranslatedEntityTriple);
    sub_1C07B1F90((uint64_t)v11, type metadata accessor for TranslatedEntityTriple);
    v20 = v63;
    v16 = v64;
    v19 = v67;
    v21 = v71;
  }
  __break(1u);
LABEL_18:
  __break(1u);
LABEL_19:
  __break(1u);
}

uint64_t sub_1C0D5198C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD), uint64_t a5, uint64_t *a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v10;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  unint64_t *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  int *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  BOOL v66;
  unint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  void (*v71)(uint64_t, char *, uint64_t);
  char *v72;
  uint64_t v73;
  double v74;
  uint64_t v75;
  double v76;
  uint64_t *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  void *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  void *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  double v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  void (*v102)(uint64_t, uint64_t, uint64_t);
  uint64_t v103;
  _QWORD *v104;
  uint64_t v105;
  uint64_t *v106;
  uint64_t v107;
  unint64_t v108;
  unint64_t v109;
  uint64_t v110;
  uint64_t v111;
  _QWORD *v112;
  char v113;
  uint64_t result;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  unint64_t *v119;
  uint64_t v120;
  uint64_t (*v121)(_QWORD);
  _QWORD *v122;
  uint64_t *v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  char *v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  unint64_t v149;
  uint64_t v150[5];

  v115 = a7;
  v126 = a5;
  v10 = v7;
  v125 = a3;
  v128 = sub_1C106EB24();
  v144 = *(_QWORD *)(v128 - 8);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v13);
  sub_1C077AE40();
  v143 = v14;
  v15 = sub_1C106E41C();
  v141 = *(_QWORD *)(v15 - 8);
  v142 = v15;
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v16);
  sub_1C077AED0();
  v140 = v17;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v18);
  sub_1C0778674();
  v139 = v19;
  v20 = sub_1C106E590();
  v137 = *(_QWORD *)(v20 - 8);
  v138 = v20;
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v21);
  sub_1C077AE40();
  v136 = v22;
  v117 = *(_QWORD *)(type metadata accessor for Source() - 8);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v23);
  sub_1C0778564();
  v26 = v25 - v24;
  v127 = a4(0);
  v124 = *(_QWORD *)(v127 - 8);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v27);
  sub_1C077AED0();
  sub_1C077AF60();
  MEMORY[0x1E0C80A78](v28);
  sub_1C0779728();
  sub_1C077AF60();
  MEMORY[0x1E0C80A78](v29);
  sub_1C0779728();
  sub_1C077AF60();
  MEMORY[0x1E0C80A78](v30);
  sub_1C0779728();
  v145 = v31;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v32);
  v34 = (char *)&v115 - v33;
  sub_1C07797E4();
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v35);
  sub_1C077AF80();
  v38 = (_QWORD *)(v36 - v37);
  MEMORY[0x1E0C80A78](v39);
  v41 = (char *)&v115 - v40;
  v150[3] = 0;
  v150[4] = 0;
  v150[2] = a1;
  sub_1C077AE90();
  sub_1C077EC4C(a6, v38);
  v42 = (unint64_t *)v41;
  v122 = v38;
  sub_1C078BA68((uint64_t)v38, (uint64_t)v41);
  v123 = a6;
  v43 = sub_1C07ACF80(a6);
  if (sub_1C07B2D80((uint64_t)v41, 1, v43) == 1)
  {
    v146 = MEMORY[0x1E0DEE9D8];
LABEL_3:
    swift_bridgeObjectRelease();
    return v146;
  }
  v146 = MEMORY[0x1E0DEE9D8];
  v120 = a2;
  v45 = v128;
  v121 = a4;
  v116 = v26;
  v134 = v34;
  v119 = (unint64_t *)v41;
  while (1)
  {
    v46 = *v42;
    sub_1C0D55724((uint64_t)v42 + *(int *)(v43 + 48), (uint64_t)v34);
    sub_1C0CCBB04();
    if (v10)
    {
      sub_1C077B830((uint64_t)v34);
      v44 = v146;
      sub_1C077960C();
      sub_1C07767AC();
      return v44;
    }
    if ((v46 & 0x8000000000000000) != 0)
      goto LABEL_35;
    if (v46 >= *(_QWORD *)(a2 + 16))
      break;
    v47 = (int *)v127;
    v48 = *(_QWORD *)&v34[*(int *)(v127 + 36)];
    sub_1C0779D28();
    v133 = v49;
    v50 = a2 + v49;
    v52 = *(_QWORD *)(v51 + 72);
    v53 = v50 + v52 * v46;
    v54 = v145;
    sub_1C0D55640(v53, v145);
    v55 = *(_QWORD *)(v54 + v47[9]);
    sub_1C077B830(v54);
    v147 = 0;
    v132 = v52;
    if (v48 != v55)
    {
      v56 = v118;
      sub_1C0D55640(v53, v118);
      sub_1C077B830(v56);
      sub_1C0843DB0();
      v58 = v57;
      v59 = *(_QWORD *)(v57 + 16);
      if (v59)
      {
        sub_1C0779D28();
        v61 = v58 + v60;
        v63 = *(_QWORD *)(v62 + 72);
        v64 = v116;
        while (1)
        {
          sub_1C07B9BB4(v61, v64);
          v65 = *(_QWORD *)(v64 + 16);
          v66 = __OFSUB__(v65, 1);
          v67 = v65 - 1;
          if (v66)
          {
            __break(1u);
LABEL_35:
            __break(1u);
            goto LABEL_36;
          }
          if (v67 - 65 < 0xFFFFFFFFFFFFFF7FLL)
            break;
          if ((v67 & 0x8000000000000000) != 0)
          {
            v68 = 0;
            if (v67 <= 0xFFFFFFFFFFFFFFC0)
              goto LABEL_18;
          }
          else
          {
            if (v67 > 0x3F)
              break;
            v68 = 1 << v67;
          }
          if ((v68 & v48) == 0)
            goto LABEL_18;
LABEL_19:
          sub_1C07B1F90(v64, (uint64_t (*)(_QWORD))type metadata accessor for Source);
          v61 += v63;
          if (!--v59)
          {
            swift_release();
            v45 = v128;
            v47 = (int *)v127;
            goto LABEL_24;
          }
        }
        v68 = 0;
LABEL_18:
        v48 |= v68;
        goto LABEL_19;
      }
      swift_release();
      v45 = v128;
    }
LABEL_24:
    v69 = v134;
    (*(void (**)(uint64_t, char *, uint64_t))(v137 + 16))(v136, v134, v138);
    v70 = v142;
    v71 = *(void (**)(uint64_t, char *, uint64_t))(v141 + 16);
    v71(v139, &v69[v47[5]], v142);
    (*(void (**)(uint64_t, char *, uint64_t))(v144 + 16))(v143, &v69[v47[6]], v45);
    v71(v140, &v69[v47[7]], v70);
    v72 = &v69[v47[8]];
    v73 = *((_QWORD *)v72 + 1);
    v130 = *(_QWORD *)v72;
    v74 = *(double *)&v69[v47[10]];
    v75 = v145;
    sub_1C0D55640(v53, v145);
    v76 = *(double *)(v75 + v47[10]);
    v131 = v73;
    sub_1C0778624();
    sub_1C077B830(v75);
    v77 = (uint64_t *)&v69[v47[11]];
    v78 = *v77;
    v79 = v77[1];
    sub_1C0D556A8();
    sub_1C07B9BB4(v80, v53);
    v81 = (uint64_t *)(v53 + v47[11]);
    v83 = *v81;
    v82 = v81[1];
    sub_1C07796E0();
    sub_1C07767B4();
    sub_1C0787D94(v53);
    v85 = (void *)MEMORY[0x1C3BA79F4](v84);
    v150[0] = v78;
    v150[1] = v79;
    v129 = v79;
    v148 = 30;
    v149 = 0xE100000000000000;
    sub_1C07B1280();
    v86 = sub_1C10705D0();
    objc_autoreleasePoolPop(v85);
    sub_1C0898D28(v86);
    v88 = v87;
    sub_1C07767B4();
    v89 = sub_1C0899F54(v83, v82);
    sub_1C089ED40(v89, v88);
    v91 = (void *)MEMORY[0x1C3BA79F4](v90);
    swift_bridgeObjectRetain_n();
    sub_1C08A2E2C();
    v93 = v92;
    sub_1C077E584();
    v150[0] = v93;
    v94 = v147;
    sub_1C08485B4(v150);
    v147 = v94;
    if (v94)
      goto LABEL_37;
    sub_1C077E584();
    v95 = (v74 + v76) * 0.5;
    sub_1C07ACF80(&qword_1ED762B70);
    sub_1C07BB218(&qword_1ED762430, &qword_1ED762B70);
    v96 = sub_1C106FA54();
    v98 = v97;
    swift_release();
    objc_autoreleasePoolPop(v91);
    sub_1C078F230();
    sub_1C07767AC();
    sub_1C077E584();
    v99 = *(_QWORD *)&v69[v47[12]];
    v100 = v135;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v137 + 32))(v135, v136, v138);
    v101 = v142;
    v102 = *(void (**)(uint64_t, uint64_t, uint64_t))(v141 + 32);
    v102(v100 + v47[5], v139, v142);
    v103 = v128;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v144 + 32))(v100 + v47[6], v143, v128);
    v102(v100 + v47[7], v140, v101);
    v104 = (_QWORD *)(v100 + v47[8]);
    v105 = v131;
    *v104 = v130;
    v104[1] = v105;
    *(_QWORD *)(v100 + v47[9]) = v48;
    *(double *)(v100 + v47[10]) = v95;
    v106 = (uint64_t *)(v100 + v47[11]);
    *v106 = v96;
    v106[1] = v98;
    *(_QWORD *)(v100 + v47[12]) = v99;
    v107 = v146;
    v45 = v103;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v107 = sub_1C0D555C0(0, *(_QWORD *)(v107 + 16) + 1);
    v10 = v147;
    a2 = v120;
    v109 = *(_QWORD *)(v107 + 16);
    v108 = *(_QWORD *)(v107 + 24);
    v34 = v134;
    if (v109 >= v108 >> 1)
      v107 = sub_1C0D555C0(v108 > 1, v109 + 1);
    *(_QWORD *)(v107 + 16) = v109 + 1;
    v146 = v107;
    v110 = sub_1C07B4958();
    sub_1C0D55724(v110, v111);
    sub_1C077B830((uint64_t)v34);
    v112 = v122;
    sub_1C077EC4C(v123, v122);
    v42 = v119;
    sub_1C078BA68((uint64_t)v112, (uint64_t)v119);
    v43 = sub_1C07797E4();
    sub_1C077AEEC((uint64_t)v42, 1, v43);
    if (v113)
      goto LABEL_3;
  }
LABEL_36:
  __break(1u);
LABEL_37:
  result = swift_release();
  __break(1u);
  return result;
}

uint64_t sub_1C0D52218(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v11;
  uint64_t v12;
  _QWORD v14[6];

  v3 = type metadata accessor for TranslatedEntityTriple(0);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_QWORD *)(a2 + 16);
  if (!v7)
    return 0;
  v8 = a2 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  v9 = *(_QWORD *)(v4 + 72);
  v14[1] = a2;
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  while (1)
  {
    sub_1C08D6F44(v8, (uint64_t)v6, type metadata accessor for TranslatedEntityTriple);
    sub_1C106E41C();
    sub_1C07803F8(&qword_1ED75E7E0, (void (*)(uint64_t))MEMORY[0x1E0D3CC50]);
    sub_1C106FE44();
    sub_1C106FE44();
    if (v14[4] == v14[2] && v14[5] == v14[3])
      break;
    v11 = sub_1C1070CB4();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v11 & 1) != 0)
      goto LABEL_12;
    sub_1C07B1F90((uint64_t)v6, type metadata accessor for TranslatedEntityTriple);
    v8 += v9;
    if (!--v7)
    {
      swift_bridgeObjectRelease();
      return 0;
    }
  }
  swift_bridgeObjectRelease_n();
LABEL_12:
  swift_bridgeObjectRelease();
  v12 = *(_QWORD *)&v6[*(int *)(v3 + 32)];
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C07B1F90((uint64_t)v6, type metadata accessor for TranslatedEntityTriple);
  return v12;
}

void sub_1C0D523D8()
{
  uint64_t v0;
  uint64_t v1;
  double v2;
  uint64_t (*v3)(_QWORD);
  uint64_t (*v4)(_QWORD);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t inited;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  double *v37;
  double v38;
  double v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  _QWORD *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD *v60;
  uint64_t *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;

  sub_1C0776838();
  v4 = v3;
  v63 = v5;
  v7 = v6;
  v67 = v8;
  v9 = sub_1C0782A74();
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v10);
  sub_1C077AE40();
  v11 = (int *)v4(0);
  MEMORY[0x1E0C80A78](v11);
  sub_1C0794974(v12);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v13);
  sub_1C07795DC();
  v71 = *(_QWORD *)(v0 + v11[9]);
  SourceSet.insert(_:)(v1, v7 + *(int *)(v9 + 36));
  sub_1C07B1F90(v1, (uint64_t (*)(_QWORD))type metadata accessor for Source);
  v14 = *(_QWORD *)(v0 + v11[11] + 8);
  sub_1C07ACF80(&qword_1ED762CB0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C1079220;
  v62 = v9;
  v66 = v7;
  v16 = (_QWORD *)(v7 + *(int *)(v9 + 40));
  v17 = v16[1];
  *(_QWORD *)(inited + 32) = *v16;
  *(_QWORD *)(inited + 40) = v17;
  sub_1C0778624();
  v18 = sub_1C077AE90();
  MEMORY[0x1C3BA79F4](v18);
  v70 = v14;
  sub_1C07B1280();
  sub_1C079D8A0();
  sub_1C07824F0();
  sub_1C0898D28(v17);
  v20 = v19;
  v21 = sub_1C07796E0();
  sub_1C0898D28(v21);
  sub_1C089ED40(v22, v20);
  v24 = v23;
  v25 = (void *)MEMORY[0x1C3BA79F4]();
  sub_1C07767CC();
  sub_1C08A2E2C();
  v27 = v26;
  sub_1C0775894();
  v69 = v27;
  sub_1C08485B4(&v69);
  sub_1C0775894();
  sub_1C07ACF80(&qword_1ED762B70);
  sub_1C07BB218(&qword_1ED762430, &qword_1ED762B70);
  v28 = sub_1C106FA54();
  v30 = v29;
  swift_release();
  objc_autoreleasePoolPop(v25);
  sub_1C0775894();
  swift_setDeallocating();
  sub_1C0BE8D64();
  v31 = sub_1C07AF84C();
  v32 = (void *)MEMORY[0x1C3BA79F4](v31);
  v65 = v28;
  v69 = v28;
  v70 = v30;
  v64 = v30;
  v33 = sub_1C079D8A0();
  objc_autoreleasePoolPop(v32);
  sub_1C07767B4();
  sub_1C0D47624(v33, v63);
  v35 = v34;
  sub_1C0778580();
  if (*(_QWORD *)(v35 + 16))
  {
    sub_1C078A820();
    do
    {
      v38 = *v37++;
      v2 = v2 + v38 - v2 * v38;
      --v36;
    }
    while (v36);
  }
  else
  {
    sub_1C078A820();
  }
  sub_1C077960C();
  v39 = *(double *)(v24 + v11[10]);
  sub_1C08D6F44(v24, v63, (uint64_t (*)(_QWORD))v25);
  sub_1C08D6F44(v66, inited, type metadata accessor for TranslatedEntityTriple);
  if (v2 != v39)
  {
    sub_1C07B1F90(v63, (uint64_t (*)(_QWORD))v25);
    sub_1C07826E8(v51, type metadata accessor for TranslatedEntityTriple);
    goto LABEL_10;
  }
  v40 = (uint64_t *)(v63 + v11[11]);
  v42 = *v40;
  v41 = v40[1];
  v43 = (uint64_t *)(inited + *(int *)(v62 + 40));
  v44 = *v43;
  v45 = v43[1];
  v46 = sub_1C07767B4();
  v47 = (void *)MEMORY[0x1C3BA79F4](v46);
  v69 = v42;
  v70 = v41;
  v48 = (_QWORD *)sub_1C079D8A0();
  objc_autoreleasePoolPop(v47);
  LOBYTE(v44) = sub_1C0776614(v44, v45, v48);
  sub_1C07767AC();
  sub_1C077960C();
  sub_1C07B1F90(v68, (uint64_t (*)(_QWORD))v25);
  sub_1C07826E8(v49, type metadata accessor for TranslatedEntityTriple);
  if ((v44 & 1) == 0)
  {
LABEL_10:
    sub_1C106AC6C();
    v50 = v52;
    goto LABEL_11;
  }
  v50 = *(_QWORD *)(v24 + v11[12]);
LABEL_11:
  v53 = sub_1C078784C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v53 - 8) + 16))(v67, v24, v53);
  v54 = sub_1C0779688();
  sub_1C07915F0(v54);
  v55 = sub_1C106EB24();
  sub_1C078B43C(v55);
  sub_1C077B978(v67 + v11[7], v24 + v11[7]);
  v56 = v11[8];
  v58 = *(_QWORD *)(v24 + v56);
  v57 = *(_QWORD *)(v24 + v56 + 8);
  v59 = v71;
  v60 = (_QWORD *)(v67 + v56);
  *v60 = v58;
  v60[1] = v57;
  *(_QWORD *)(v67 + v11[9]) = v59;
  *(double *)(v67 + v11[10]) = v2;
  v61 = (uint64_t *)(v67 + v11[11]);
  *v61 = v65;
  v61[1] = v64;
  *(_QWORD *)(v67 + v11[12]) = v50;
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C078D424();
}

void sub_1C0D52858()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23[15];
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;

  sub_1C0776838();
  v23[13] = v3;
  v23[14] = v2;
  v23[10] = v4;
  v5 = sub_1C106EB24();
  v25 = *(_QWORD *)(v5 - 8);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v6);
  sub_1C077AE40();
  v28 = v7;
  v24 = sub_1C0779688();
  MEMORY[0x1E0C80A78](v24);
  sub_1C077AED0();
  v27 = v8;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)v23 - v10;
  v12 = sub_1C078784C();
  v23[11] = *(_QWORD *)(v12 - 8);
  v23[12] = v12;
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v13);
  sub_1C0778564();
  v14 = sub_1C106ED70();
  v23[8] = *(_QWORD *)(v14 - 8);
  v23[9] = v14;
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v15);
  sub_1C0782B00(v16, v23[0]);
  sub_1C07ACF80(&qword_1ED75AE40);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v17);
  sub_1C07766EC();
  sub_1C077674C();
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v18);
  sub_1C07795DC();
  v19 = sub_1C0782A74();
  sub_1C08D6F44(v0 + *(int *)(v19 + 36), v1, (uint64_t (*)(_QWORD))type metadata accessor for Source);
  if (!__OFSUB__(*(_QWORD *)(v1 + 16), 1))
  {
    v26 = v11;
    v23[6] = v5;
    sub_1C07B1F90(v1, (uint64_t (*)(_QWORD))type metadata accessor for Source);
    v23[4] = v19;
    v20 = *(int *)(v19 + 40);
    v23[5] = v0;
    v21 = (uint64_t *)(v0 + v20);
    v22 = v21[1];
    v31 = *v21;
    v32 = v22;
    v29 = 30;
    v30 = 0xE100000000000000;
    sub_1C07B1280();
    sub_1C10705D0();
    sub_1C07A9D68();
  }
  __break(1u);
}

uint64_t sub_1C0D52C7C(uint64_t *a1, uint64_t inited, uint64_t a3)
{
  __int128 *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  __int128 v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  __int128 v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  __int128 v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t *v43;
  uint64_t v44;
  uint64_t v45;

  v6 = &v34;
  if (qword_1ED75AC50 != -1)
LABEL_28:
    swift_once();
  v7 = qword_1ED78D2D0[0];
  v8 = qword_1ED78D2E8;
  v9 = unk_1ED78D2F0;
  *(__int128 *)((char *)v6 + 72) = unk_1ED78D2D8;
  *(_QWORD *)&v40 = v7;
  v41 = v8;
  v42 = v9;
  v43 = a1;
  v44 = v8;
  v45 = v9;
  v10 = sub_1C0D55324(&v40, &qword_1ED75AB50, &qword_1ED75AB48, (uint64_t)&unk_1E7A30168, (void (*)(uint64_t, uint64_t))sub_1C0D55508);
  if (qword_1ED75AC58 != -1)
    swift_once();
  v11 = qword_1ED78D670[0];
  v12 = qword_1ED78D688;
  v13 = unk_1ED78D690;
  *(__int128 *)((char *)v6 + 8) = unk_1ED78D678;
  *(_QWORD *)&v34 = v11;
  v35 = v12;
  v36 = v13;
  v37 = inited;
  v38 = v12;
  v39 = v13;
  v14 = sub_1C0D55324(&v34, &qword_1ED75AB50, &qword_1ED75AB48, (uint64_t)&unk_1E7A30168, (void (*)(uint64_t, uint64_t))sub_1C0D55508);
  if (qword_1ED75AC60 != -1)
    swift_once();
  v27 = qword_1ED78D698[0];
  v28 = unk_1ED78D6A0;
  v29 = qword_1ED78D6B0;
  v30 = unk_1ED78D6B8;
  v31 = a3;
  v32 = qword_1ED78D6B0;
  v33 = unk_1ED78D6B8;
  v15 = sub_1C0D55324((__int128 *)&v27, &qword_1ED75AB50, &qword_1ED75AB48, (uint64_t)&unk_1E7A30168, (void (*)(uint64_t, uint64_t))sub_1C0D55508);
  sub_1C07ACF80(&qword_1ED75D360);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C1078A20;
  *(_QWORD *)(inited + 32) = v10;
  *(_QWORD *)(inited + 40) = v14;
  *(_QWORD *)(inited + 48) = v15;
  a3 = MEMORY[0x1E0DEE9D8];
  v16 = 32;
  a1 = &qword_1ED75C0F0;
  do
  {
    v6 = *(__int128 **)(inited + v16);
    v17 = *((_QWORD *)v6 + 2);
    v18 = *(_QWORD *)(a3 + 16);
    if (__OFADD__(v18, v17))
    {
      __break(1u);
LABEL_25:
      __break(1u);
LABEL_26:
      __break(1u);
LABEL_27:
      __break(1u);
      goto LABEL_28;
    }
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    if (!swift_isUniquelyReferenced_nonNull_native() || v18 + v17 > *(_QWORD *)(a3 + 24) >> 1)
    {
      sub_1C07ED398();
      a3 = v19;
    }
    if (*((_QWORD *)v6 + 2))
    {
      v20 = *(_QWORD *)(a3 + 16);
      if ((*(_QWORD *)(a3 + 24) >> 1) - v20 < v17)
        goto LABEL_26;
      v21 = a3 + 40 * v20 + 32;
      if ((unint64_t)(v6 + 2) < v21 + 40 * v17 && v21 < (unint64_t)v6 + 40 * v17 + 32)
      {
        result = sub_1C10709F0();
        __break(1u);
        return result;
      }
      sub_1C07ACF80(&qword_1ED75C0F0);
      swift_arrayInitWithCopy();
      if (v17)
      {
        v23 = *(_QWORD *)(a3 + 16);
        v24 = __OFADD__(v23, v17);
        v25 = v23 + v17;
        if (v24)
          goto LABEL_27;
        *(_QWORD *)(a3 + 16) = v25;
      }
    }
    else if (v17)
    {
      goto LABEL_25;
    }
    swift_bridgeObjectRelease();
    v16 += 8;
  }
  while (v16 != 56);
  swift_setDeallocating();
  sub_1C0BE8E70();
  return a3;
}

void sub_1C0D52FCC(_BYTE *a1@<X8>)
{
  StandardEntityFusion.stageName.getter(a1);
}

uint64_t sub_1C0D52FE8()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_1C0806670;
  return StandardEntityFusion.execute()();
}

uint64_t sub_1C0D53030(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;

  result = MEMORY[0x1E0DEE9D8];
  v9 = 0;
  v10 = MEMORY[0x1E0DEE9D8];
  v4 = *(_QWORD *)(a1 + 16);
  if (v4)
  {
    v6 = *(_QWORD *)(type metadata accessor for TranslatedEntityTriple(0) - 8);
    v7 = a1 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
    v8 = *(_QWORD *)(v6 + 72);
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    do
    {
      sub_1C0D530E0(v7, &v9, a2, &v10);
      v7 += v8;
      --v4;
    }
    while (v4);
    swift_bridgeObjectRelease();
    return v10;
  }
  return result;
}

void sub_1C0D530E0(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  int *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t (*v19)(_QWORD);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  void (*v29)(char *, uint64_t, uint64_t);
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  char *v41;
  char *v42;
  uint64_t *v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t *v46;
  uint64_t v47;
  uint64_t *v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;

  v48 = a4;
  v8 = (int *)type metadata accessor for TranslatedEntityTriple(0);
  v54 = *((_QWORD *)v8 - 1);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v46 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v46 - v12;
  v15 = (uint64_t *)(a1 + *(int *)(v14 + 40));
  v16 = v15[1];
  v52 = *v15;
  v53 = v16;
  v17 = *a2;
  v47 = a3;
  v18 = *(_QWORD *)(a3 + 16);
  sub_1C08D6F44(a1, (uint64_t)&v46 - v12, v19);
  v49 = v4;
  if (v17 >= (uint64_t)v18)
  {
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    sub_1C07B1F90((uint64_t)v13, type metadata accessor for TranslatedEntityTriple);
    goto LABEL_8;
  }
  sub_1C07803F8(&qword_1ED75C318, (void (*)(uint64_t))type metadata accessor for TranslatedEntityTriple);
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  v20 = sub_1C106EAAC();
  v46 = a2;
  if (*a2 >= v18)
  {
    __break(1u);
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  v47 += (*(unsigned __int8 *)(v54 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v54 + 80);
  v21 = v20;
  v22 = sub_1C106EAAC();
  sub_1C07B1F90((uint64_t)v13, type metadata accessor for TranslatedEntityTriple);
  if (v21 != v22)
  {
LABEL_8:
    v24 = sub_1C106E590();
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 16))(v10, a1, v24);
    v25 = v8[5];
    v26 = a1 + v25;
    v27 = &v10[v25];
    v28 = sub_1C106E41C();
    v29 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 16);
    v29(v27, v26, v28);
    v30 = v8[6];
    v31 = a1 + v30;
    v32 = &v10[v30];
    v33 = sub_1C106EB24();
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 16))(v32, v31, v33);
    v29(&v10[v8[7]], a1 + v8[7], v28);
    v34 = (uint64_t *)(a1 + v8[8]);
    v36 = *v34;
    v35 = v34[1];
    sub_1C08D6F44(a1 + v8[9], (uint64_t)&v10[v8[9]], (uint64_t (*)(_QWORD))type metadata accessor for Source);
    v37 = *(_QWORD *)(a1 + v8[11]);
    v38 = v52;
    v39 = v53;
    v40 = *(_BYTE *)(a1 + v8[12]);
    v41 = &v10[v8[8]];
    *(_QWORD *)v41 = v36;
    *((_QWORD *)v41 + 1) = v35;
    v42 = &v10[v8[10]];
    *(_QWORD *)v42 = v38;
    *((_QWORD *)v42 + 1) = v39;
    *(_QWORD *)&v10[v8[11]] = v37;
    v10[v8[12]] = v40;
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    v43 = v48;
    sub_1C07EA00C();
    v44 = *(_QWORD *)(*v43 + 16);
    sub_1C07EA6E4();
    v45 = *v43;
    *(_QWORD *)(v45 + 16) = v44 + 1;
    sub_1C08D6E2C((uint64_t)v10, v45+ ((*(unsigned __int8 *)(v54 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v54 + 80))+ *(_QWORD *)(v54 + 72) * v44, type metadata accessor for TranslatedEntityTriple);
    return;
  }
  v23 = v46;
  if (*v46 >= v18)
    goto LABEL_10;
  v50 = 30;
  v51 = 0xE100000000000000;
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C106FC94();
  swift_bridgeObjectRelease();
  sub_1C106FC94();
  swift_bridgeObjectRelease();
  if (!__OFADD__(*v23, 1))
  {
    ++*v23;
    goto LABEL_8;
  }
LABEL_11:
  __break(1u);
}

uint64_t sub_1C0D53444()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C0D53468(uint64_t a1, uint64_t a2)
{
  return sub_1C0D534A0(a1, a2, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1C0D4FFEC);
}

uint64_t sub_1C0D53484(uint64_t a1, uint64_t a2)
{
  return sub_1C0D534A0(a1, a2, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1C0D4E2CC);
}

uint64_t sub_1C0D534A0(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  _QWORD *v3;

  return a3(a1, a2, v3[2], v3[3], v3[4], v3[5], v3[6]);
}

uint64_t sub_1C0D534C4(uint64_t a1, uint64_t a2)
{
  return sub_1C0D534A0(a1, a2, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1C0D50668);
}

uint64_t sub_1C0D534E0(uint64_t a1, uint64_t a2)
{
  return sub_1C0D534A0(a1, a2, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1C0D503D0);
}

void sub_1C0D534FC()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t);
  uint64_t (*v2)(uint64_t);
  uint64_t (*v3)(_QWORD);
  uint64_t (*v4)(_QWORD);
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _BOOL4 v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  unint64_t v52;
  unint64_t v53;
  char *v54;
  char *v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  BOOL v67;
  unint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  BOOL v77;
  uint64_t v78;
  char v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  BOOL v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  unint64_t v95;
  char *v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  unint64_t v100;
  char *v101;
  int64_t v102;
  char v103;
  uint64_t v104;
  unint64_t v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  unint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  char *v113;
  char *v114;
  char *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  char *v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t (*v132)(_QWORD);
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;

  sub_1C077AE5C();
  v2 = v1;
  v4 = v3;
  v5 = v0;
  v7 = v6;
  v121 = *(_QWORD *)(v3(0) - 8);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v8);
  sub_1C077AED0();
  v118 = v9;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v10);
  sub_1C0779728();
  v133 = v11;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v12);
  sub_1C0779728();
  v127 = v13;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v14);
  sub_1C0778674();
  v128 = v15;
  v16 = *((_QWORD *)v7 + 1);
  v17 = sub_1C1070BE8();
  if (v17 >= v16)
  {
    if ((v16 & 0x8000000000000000) == 0)
    {
      if (v16)
        sub_1C0D53E40();
      goto LABEL_117;
    }
    goto LABEL_139;
  }
  v18 = v17;
  v112 = v2(v16 / 2);
  v132 = v4;
  if (v16 <= 0)
  {
LABEL_103:
    v20 = (char *)MEMORY[0x1E0DEE9D8];
    v53 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
LABEL_104:
    if (v53 < 2)
    {
LABEL_115:
      sub_1C077589C();
      if (v16 >= -1)
        goto LABEL_116;
      goto LABEL_143;
    }
    v104 = *(_QWORD *)v7;
    while (1)
    {
      v105 = v53 - 2;
      if (v53 < 2)
        break;
      if (!v104)
        goto LABEL_147;
      v7 = v20;
      v106 = *(_QWORD *)&v20[16 * v105 + 32];
      v107 = *(_QWORD *)&v20[16 * v53 + 24];
      sub_1C07831E8();
      if (v0)
        goto LABEL_101;
      if (v107 < v106)
        goto LABEL_134;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v7 = sub_1C0861BC0();
      if (v105 >= *((_QWORD *)v7 + 2))
        goto LABEL_135;
      v108 = &v7[16 * v105 + 32];
      *(_QWORD *)v108 = v106;
      *((_QWORD *)v108 + 1) = v107;
      v109 = *((_QWORD *)v7 + 2);
      if (v53 > v109)
        goto LABEL_136;
      v20 = v7;
      memmove(&v7[16 * v53 + 16], &v7[16 * v53 + 32], 16 * (v109 - v53));
      *((_QWORD *)v7 + 2) = v109 - 1;
      v53 = v109 - 1;
      if (v109 <= 2)
        goto LABEL_115;
    }
LABEL_133:
    __break(1u);
LABEL_134:
    __break(1u);
LABEL_135:
    __break(1u);
LABEL_136:
    __break(1u);
LABEL_137:
    __break(1u);
LABEL_138:
    __break(1u);
LABEL_139:
    __break(1u);
LABEL_140:
    __break(1u);
LABEL_141:
    __break(1u);
LABEL_142:
    __break(1u);
LABEL_143:
    __break(1u);
LABEL_144:
    __break(1u);
LABEL_145:
    __break(1u);
LABEL_146:
    __break(1u);
LABEL_147:
    __break(1u);
    return;
  }
  v111 = v18;
  v19 = 0;
  v20 = (char *)MEMORY[0x1E0DEE9D8];
  v21 = v16;
  v116 = v16;
  v120 = v7;
  while (1)
  {
    v22 = v19;
    v23 = v19 + 1;
    v119 = v19;
    v24 = v21;
    if (v19 + 1 >= v21)
    {
      v27 = v19 + 1;
    }
    else
    {
      v25 = *(_QWORD *)v7;
      v122 = *(_QWORD *)v7;
      v137 = *(_QWORD *)(v121 + 72);
      sub_1C0793310(*(_QWORD *)v7 + v137 * v23, v128);
      v135 = v24;
      sub_1C0793310(v25 + v137 * v22, v127);
      sub_1C0D556CC();
      v134 = sub_1C106EAAC();
      v22 = v119;
      v129 = sub_1C07AF054();
      sub_1C079D510(v127);
      sub_1C079D510(v128);
      v26 = v137;
      v27 = v119 + 2;
      if (v119 + 2 < v24)
      {
        v110 = v5;
        v113 = v20;
        v28 = v122;
        v124 = v137 * v27;
        while (1)
        {
          v29 = v27;
          sub_1C0793310(v28 + v124, v128);
          sub_1C0793310(v28 + v137 * v23, v127);
          v30 = sub_1C07AF054();
          v31 = v30 >= sub_1C106EAAC();
          sub_1C079D510(v127);
          sub_1C079D510(v128);
          if (v134 < v129 == v31)
            break;
          v27 = v29 + 1;
          v26 = v137;
          v28 += v137;
          v24 = v135;
          if (v29 + 1 >= v135)
          {
            v27 = v135;
            v20 = v113;
            v22 = v119;
            v7 = v120;
            v5 = v110;
            goto LABEL_12;
          }
        }
        v20 = v113;
        v22 = v119;
        v7 = v120;
        v27 = v29;
        v5 = v110;
        v24 = v135;
        v26 = v137;
      }
LABEL_12:
      if (v134 < v129)
      {
        if (v27 < v22)
          goto LABEL_140;
        if (v22 < v27)
        {
          v114 = v20;
          v32 = 0;
          v33 = v26 * (v27 - 1);
          v34 = v27 * v26;
          v35 = v22;
          v36 = v22 * v26;
          do
          {
            if (v35 != v27 + v32 - 1)
            {
              v37 = v5;
              v38 = v27;
              if (!v122)
                goto LABEL_146;
              sub_1C08D6E2C(v122 + v36, v118, v132);
              if (v36 < v33 || v122 + v36 >= (unint64_t)(v122 + v34))
              {
                v40 = v122 + v33;
                sub_1C0779E7C();
              }
              else
              {
                v40 = v122 + v33;
                if (v36 != v33)
                  swift_arrayInitWithTakeBackToFront();
              }
              sub_1C08D6E2C(v118, v40, v132);
              v27 = v38;
              v5 = v37;
              v22 = v119;
              v26 = v137;
            }
            ++v35;
            --v32;
            v33 -= v26;
            v34 -= v26;
            v36 += v26;
          }
          while (v35 < v27 + v32);
          v20 = v114;
          v7 = v120;
          v24 = v135;
        }
      }
    }
    if (v27 < v24)
    {
      if (__OFSUB__(v27, v22))
        goto LABEL_138;
      if (v27 - v22 < v111)
      {
        if (__OFADD__(v22, v111))
          goto LABEL_141;
        if (v22 + v111 >= v24)
          v41 = v24;
        else
          v41 = v22 + v111;
        if (v41 < v22)
          goto LABEL_142;
        if (v27 != v41)
        {
          v115 = v20;
          v42 = *(_QWORD *)(v121 + 72);
          v43 = v42 * (v27 - 1);
          v123 = v42;
          v44 = v27 * v42;
          v117 = v41;
          do
          {
            v45 = 0;
            v130 = v27;
            v125 = v44;
            v126 = v43;
            while (1)
            {
              v46 = *(_QWORD *)v7;
              v136 = v22;
              sub_1C0793310(v44 + v45 + *(_QWORD *)v7, v128);
              sub_1C0793310(v43 + v45 + v46, v127);
              sub_1C0D556CC();
              v138 = sub_1C07AF054();
              v47 = sub_1C0D556C0();
              sub_1C079D510(v127);
              sub_1C079D510(v128);
              if (v138 >= v47)
                break;
              v48 = *(_QWORD *)v7;
              if (!*(_QWORD *)v7)
                goto LABEL_144;
              v44 = v125;
              v43 = v126;
              v49 = v48 + v126 + v45;
              sub_1C0D555E4(v48 + v125 + v45, v133);
              sub_1C0779E7C();
              sub_1C0D555E4(v133, v49);
              v45 -= v123;
              ++v22;
              v50 = v130;
              if (v130 == v136 + 1)
                goto LABEL_45;
            }
            v50 = v130;
            v44 = v125;
            v43 = v126;
LABEL_45:
            v27 = v50 + 1;
            v43 += v123;
            v44 += v123;
            v22 = v119;
          }
          while (v27 != v117);
          v27 = v117;
          v20 = v115;
        }
      }
    }
    if (v27 < v22)
      goto LABEL_137;
    v131 = v27;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      v101 = (char *)sub_1C077EE6C();
      v20 = sub_1C0861AD0(v101, v102, v103, v20);
    }
    v52 = *((_QWORD *)v20 + 2);
    v51 = *((_QWORD *)v20 + 3);
    v53 = v52 + 1;
    if (v52 >= v51 >> 1)
      v20 = sub_1C0861AD0((char *)(v51 > 1), v52 + 1, 1, v20);
    *((_QWORD *)v20 + 2) = v53;
    v54 = v20 + 32;
    v55 = &v20[16 * v52 + 32];
    *(_QWORD *)v55 = v22;
    *((_QWORD *)v55 + 1) = v131;
    if (v52)
      break;
    v53 = 1;
LABEL_95:
    v21 = *((_QWORD *)v7 + 1);
    v19 = v131;
    v16 = v116;
    if (v131 >= v21)
      goto LABEL_104;
  }
  while (1)
  {
    v56 = v53 - 1;
    if (v53 >= 4)
    {
      v61 = &v54[16 * v53];
      v62 = *((_QWORD *)v61 - 8);
      v63 = *((_QWORD *)v61 - 7);
      v67 = __OFSUB__(v63, v62);
      v64 = v63 - v62;
      if (v67)
        goto LABEL_122;
      v66 = *((_QWORD *)v61 - 6);
      v65 = *((_QWORD *)v61 - 5);
      v67 = __OFSUB__(v65, v66);
      v59 = v65 - v66;
      v60 = v67;
      if (v67)
        goto LABEL_123;
      v68 = v53 - 2;
      v69 = &v54[16 * v53 - 32];
      v71 = *(_QWORD *)v69;
      v70 = *((_QWORD *)v69 + 1);
      v67 = __OFSUB__(v70, v71);
      v72 = v70 - v71;
      if (v67)
        goto LABEL_124;
      v67 = __OFADD__(v59, v72);
      v73 = v59 + v72;
      if (v67)
        goto LABEL_126;
      if (v73 >= v64)
      {
        v91 = &v54[16 * v56];
        v93 = *(_QWORD *)v91;
        v92 = *((_QWORD *)v91 + 1);
        v67 = __OFSUB__(v92, v93);
        v94 = v92 - v93;
        if (v67)
          goto LABEL_132;
        v84 = v59 < v94;
        goto LABEL_84;
      }
    }
    else
    {
      if (v53 != 3)
      {
        v85 = *((_QWORD *)v20 + 4);
        v86 = *((_QWORD *)v20 + 5);
        v67 = __OFSUB__(v86, v85);
        v78 = v86 - v85;
        v79 = v67;
        goto LABEL_78;
      }
      v58 = *((_QWORD *)v20 + 4);
      v57 = *((_QWORD *)v20 + 5);
      v67 = __OFSUB__(v57, v58);
      v59 = v57 - v58;
      v60 = v67;
    }
    if ((v60 & 1) != 0)
      goto LABEL_125;
    v68 = v53 - 2;
    v74 = &v54[16 * v53 - 32];
    v76 = *(_QWORD *)v74;
    v75 = *((_QWORD *)v74 + 1);
    v77 = __OFSUB__(v75, v76);
    v78 = v75 - v76;
    v79 = v77;
    if (v77)
      goto LABEL_127;
    v80 = &v54[16 * v56];
    v82 = *(_QWORD *)v80;
    v81 = *((_QWORD *)v80 + 1);
    v67 = __OFSUB__(v81, v82);
    v83 = v81 - v82;
    if (v67)
      goto LABEL_129;
    if (__OFADD__(v78, v83))
      goto LABEL_131;
    if (v78 + v83 >= v59)
    {
      v84 = v59 < v83;
LABEL_84:
      if (v84)
        v56 = v68;
      goto LABEL_86;
    }
LABEL_78:
    if ((v79 & 1) != 0)
      goto LABEL_128;
    v87 = &v54[16 * v56];
    v89 = *(_QWORD *)v87;
    v88 = *((_QWORD *)v87 + 1);
    v67 = __OFSUB__(v88, v89);
    v90 = v88 - v89;
    if (v67)
      goto LABEL_130;
    if (v90 < v78)
      goto LABEL_95;
LABEL_86:
    v95 = v56 - 1;
    if (v56 - 1 >= v53)
    {
      __break(1u);
LABEL_119:
      __break(1u);
LABEL_120:
      __break(1u);
LABEL_121:
      __break(1u);
LABEL_122:
      __break(1u);
LABEL_123:
      __break(1u);
LABEL_124:
      __break(1u);
LABEL_125:
      __break(1u);
LABEL_126:
      __break(1u);
LABEL_127:
      __break(1u);
LABEL_128:
      __break(1u);
LABEL_129:
      __break(1u);
LABEL_130:
      __break(1u);
LABEL_131:
      __break(1u);
LABEL_132:
      __break(1u);
      goto LABEL_133;
    }
    if (!*(_QWORD *)v7)
      goto LABEL_145;
    v7 = v20;
    v96 = &v54[16 * v95];
    v97 = *(_QWORD *)v96;
    v98 = &v54[16 * v56];
    v99 = *((_QWORD *)v98 + 1);
    sub_1C07831E8();
    v5 = v0;
    if (v0)
      break;
    if (v99 < v97)
      goto LABEL_119;
    if (v56 > *((_QWORD *)v7 + 2))
      goto LABEL_120;
    *(_QWORD *)v96 = v97;
    *(_QWORD *)&v54[16 * v95 + 8] = v99;
    v100 = *((_QWORD *)v7 + 2);
    if (v56 >= v100)
      goto LABEL_121;
    v20 = v7;
    v53 = v100 - 1;
    memmove(&v54[16 * v56], v98 + 16, 16 * (v100 - 1 - v56));
    *((_QWORD *)v7 + 2) = v100 - 1;
    v7 = v120;
    if (v100 <= 2)
      goto LABEL_95;
  }
  v16 = v116;
LABEL_101:
  swift_bridgeObjectRelease();
  if (v16 < -1)
  {
    __break(1u);
    goto LABEL_103;
  }
LABEL_116:
  *(_QWORD *)(v112 + 16) = 0;
  swift_bridgeObjectRelease();
LABEL_117:
  sub_1C07757D0();
}

void sub_1C0D53E40()
{
  _QWORD *v0;
  uint64_t v1;
  void (*v2)(uint64_t);
  void (*v3)(uint64_t);
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  _QWORD v28[3];
  uint64_t v29;
  _QWORD *v30;
  char *v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  sub_1C077AE5C();
  v33 = v0;
  v34 = v1;
  v3 = v2;
  v5 = v4;
  v7 = v6;
  v9 = v8;
  v29 = v10;
  v38 = ((uint64_t (*)(_QWORD))v2)(0);
  MEMORY[0x1E0C80A78](v38);
  sub_1C0D55704();
  v39 = v11;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v12);
  v32 = (uint64_t)v28 - v13;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v14);
  v31 = (char *)v28 - v16;
  v37 = v7;
  v28[2] = v9;
  if (v7 == v9)
  {
LABEL_9:
    sub_1C07757D0();
  }
  else
  {
    v17 = *(_QWORD *)(v15 + 72);
    v18 = v17 * (v37 - 1);
    v35 = v17;
    v19 = v17 * v37;
    v30 = v5;
    v20 = (uint64_t)v31;
LABEL_3:
    v21 = 0;
    v41 = v29;
    v36 = v19;
    while (1)
    {
      v22 = *v5;
      v40 = v19 + v21;
      sub_1C07BA86C(v19 + v21 + v22, v20);
      v23 = v32;
      sub_1C07BA86C(v18 + v21 + v22, v32);
      sub_1C07803F8(v33, v3);
      v42 = sub_1C0D556C0();
      v19 = v36;
      v24 = sub_1C07AF054();
      sub_1C0789F1C(v23);
      sub_1C0789F1C(v20);
      v5 = v30;
      if (v42 >= v24)
      {
LABEL_7:
        v18 += v35;
        v19 += v35;
        ++v37;
        sub_1C07B2688();
        if (v27)
          goto LABEL_9;
        goto LABEL_3;
      }
      v25 = *v30;
      if (!*v30)
        break;
      v26 = v25 + v18 + v21;
      sub_1C077FB78(v25 + v19 + v21, v39);
      swift_arrayInitWithTakeFrontToBack();
      sub_1C077FB78(v39, v26);
      v21 -= v35;
      if (v37 == ++v41)
        goto LABEL_7;
    }
    __break(1u);
  }
}

void sub_1C0D54050()
{
  unint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  void (*v5)(unint64_t, int64_t, unint64_t);
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  void (*v14)(uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int64_t v20;
  int64_t v22;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v28;
  void (*v29)(uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  BOOL v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  void (*v44)(uint64_t);
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v50;
  int64_t v52;
  uint64_t v54;
  void (*v55)(unint64_t, int64_t, unint64_t);
  unint64_t v56;
  uint64_t v57;
  unint64_t v58;
  unint64_t v59;
  unint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  void (*v64)(uint64_t);
  _QWORD *v65;
  uint64_t v66;
  unint64_t v67;
  unint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;

  sub_1C077AE5C();
  v70 = v1;
  v71 = v2;
  v65 = v3;
  v66 = v4;
  v55 = v5;
  v7 = v6;
  v9 = v8;
  v11 = v10;
  v13 = v12;
  v64 = v14;
  v69 = ((uint64_t (*)(_QWORD))v14)(0);
  MEMORY[0x1E0C80A78](v69);
  sub_1C0D55704();
  v63 = v15;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v16);
  v62 = (char *)&v54 - v18;
  v19 = *(_QWORD *)(v17 + 72);
  if (!v19)
  {
    __break(1u);
LABEL_77:
    __break(1u);
LABEL_78:
    __break(1u);
    goto LABEL_79;
  }
  v20 = v11 - v13;
  if (v11 - v13 == 0x8000000000000000 && v19 == -1)
    goto LABEL_77;
  v22 = v9 - v11;
  if (v9 - v11 == 0x8000000000000000 && v19 == -1)
    goto LABEL_78;
  v24 = v20 / v19;
  v25 = v22 / v19;
  v61 = *(_QWORD *)(v17 + 72);
  if (v20 / v19 >= v22 / v19)
  {
    v38 = sub_1C0782380();
    sub_1C0D555D4(v38, v39);
    v26 = v7 + v25 * v19;
    if (v25 * v19 < 1 || v13 >= v11)
      goto LABEL_71;
    v56 = v0;
    v57 = -v19;
    v67 = v13;
    v41 = (uint64_t)v62;
    while (1)
    {
      v42 = v9;
      v43 = v57;
      v60 = v42;
      v68 = v42 + v57;
      v59 = v26 + v57;
      v44 = v64;
      sub_1C0793310(v26 + v57, v41);
      v58 = v11 + v43;
      v45 = v63;
      sub_1C0793310(v11 + v43, v63);
      sub_1C07803F8(v65, v44);
      sub_1C0D5561C();
      v46 = sub_1C106EAAC();
      sub_1C0D5561C();
      v47 = sub_1C106EAAC();
      sub_1C079D510(v45);
      sub_1C079D510(v41);
      if (v46 >= v47)
      {
        v9 = v68;
        if (v60 >= v26 && v68 < v26)
        {
          v50 = v67;
          if (v60 == v26)
          {
            v26 = v59;
          }
          else
          {
            v26 = v59;
            sub_1C0786700();
          }
          v0 = v56;
          v19 = v61;
          goto LABEL_67;
        }
        v26 = v59;
      }
      else
      {
        v9 = v68;
        if (v60 >= v11 && v68 < v11)
        {
          v19 = v61;
          v50 = v67;
          if (v60 == v11)
          {
            v11 = v58;
          }
          else
          {
            v11 = v58;
            sub_1C0786700();
          }
          v0 = v56;
          goto LABEL_67;
        }
        v11 = v58;
      }
      sub_1C0D555B4();
      v0 = v56;
      v19 = v61;
      v50 = v67;
LABEL_67:
      if (v26 <= v0 || v11 <= v50)
        goto LABEL_71;
    }
  }
  sub_1C0D555D4(v13, v20 / v19);
  v26 = v7 + v24 * v19;
  if (v24 * v19 >= 1 && v11 < v9)
  {
    v68 = v9;
    v60 = v7 + v24 * v19;
    v28 = (uint64_t)v62;
    do
    {
      v67 = v13;
      v29 = v64;
      sub_1C08D6F44(v11, v28, (uint64_t (*)(_QWORD))v64);
      v30 = v63;
      sub_1C08D6F44(v0, v63, (uint64_t (*)(_QWORD))v29);
      sub_1C07803F8(v65, v29);
      v31 = sub_1C106EAAC();
      v32 = sub_1C106EAAC();
      sub_1C07B1F90(v30, (uint64_t (*)(_QWORD))v29);
      sub_1C07B1F90(v28, (uint64_t (*)(_QWORD))v29);
      if (v31 >= v32)
      {
        v19 = v61;
        v34 = v67;
        if (v67 < v0 || v67 >= v0 + v61)
        {
          sub_1C0D555B4();
        }
        else if (v67 != v0)
        {
          sub_1C0786700();
        }
        v33 = v11;
        v0 += v19;
      }
      else
      {
        v19 = v61;
        v33 = v11 + v61;
        v34 = v67;
        if (v67 < v11 || v67 >= v33)
        {
          sub_1C0D555B4();
        }
        else if (v67 != v11)
        {
          sub_1C0786700();
        }
      }
      v26 = v60;
      v13 = v34 + v19;
      v37 = v0 >= v60 || v33 >= v68;
      v11 = v33;
    }
    while (!v37);
  }
  v11 = v13;
LABEL_71:
  v52 = v26 - v0;
  if (v19 != -1 || v52 != 0x8000000000000000)
  {
    v55(v0, v52 / v19, v11);
    return;
  }
LABEL_79:
  __break(1u);
}

uint64_t sub_1C0D54440(void *a1)
{
  id v1;
  void *v2;
  uint64_t v3;

  v1 = objc_msgSend(a1, sel_fetchPropertySets);
  if (!v1)
    return 0;
  v2 = v1;
  v3 = sub_1C106FF04();

  return v3;
}

uint64_t sub_1C0D54494(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1C0D4E24C(a1, a2, a3, v3);
}

void sub_1C0D5449C(uint64_t a1)
{
  uint64_t v2;

  sub_1C07803F8(&qword_1ED75BEC8, (void (*)(uint64_t))type metadata accessor for StandardEntityFusion);
  *(_QWORD *)(a1 + 8) = v2;
}

void sub_1C0D544D8(uint64_t a1)
{
  uint64_t v2;

  sub_1C07803F8(&qword_1ED75BEB8, (void (*)(uint64_t))type metadata accessor for StandardEntityFusion);
  *(_QWORD *)(a1 + 8) = v2;
}

_QWORD *initializeBufferWithCopyOfBuffer for StandardEntityFusion(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  int *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  _QWORD *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v20 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v20 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1C106AB28();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = type metadata accessor for Configuration();
    *(_OWORD *)((char *)a1 + *(int *)(v8 + 20)) = *(_OWORD *)((char *)a2 + *(int *)(v8 + 20));
    v9 = (int *)type metadata accessor for PhaseStores();
    *(_QWORD *)((char *)a1 + v9[5]) = *(_QWORD *)((char *)a2 + v9[5]);
    *(_QWORD *)((char *)a1 + v9[6]) = *(_QWORD *)((char *)a2 + v9[6]);
    *(_QWORD *)((char *)a1 + v9[7]) = *(_QWORD *)((char *)a2 + v9[7]);
    *(_QWORD *)((char *)a1 + v9[8]) = *(_QWORD *)((char *)a2 + v9[8]);
    *(_QWORD *)((char *)a1 + v9[9]) = *(_QWORD *)((char *)a2 + v9[9]);
    *(_QWORD *)((char *)a1 + v9[10]) = *(_QWORD *)((char *)a2 + v9[10]);
    *(_QWORD *)((char *)a1 + v9[11]) = *(_QWORD *)((char *)a2 + v9[11]);
    v10 = *(int *)(a3 + 20);
    v24 = (char *)a2 + v10;
    v25 = (char *)a1 + v10;
    v22 = sub_1C106D1F8();
    v23 = a3;
    v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 16);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    v11(v25, v24, v22);
    v12 = *(int *)(v23 + 24);
    v13 = (_QWORD *)((char *)a1 + v12);
    v14 = (char *)a2 + v12;
    v15 = *(_QWORD *)((char *)a2 + v12 + 8);
    *v13 = *(_QWORD *)((char *)a2 + v12);
    v13[1] = v15;
    v13[2] = *(_QWORD *)((char *)a2 + v12 + 16);
    v16 = type metadata accessor for Source();
    v17 = *(int *)(v16 + 24);
    v18 = (char *)v13 + v17;
    v19 = &v14[v17];
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    v11(v18, v19, v22);
    *((_BYTE *)v13 + *(int *)(v16 + 28)) = v14[*(int *)(v16 + 28)];
    *((_BYTE *)a1 + *(int *)(v23 + 28)) = *((_BYTE *)a2 + *(int *)(v23 + 28));
  }
  return a1;
}

uint64_t destroy for StandardEntityFusion(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v10)(uint64_t, uint64_t);

  v4 = sub_1C106AB28();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  type metadata accessor for PhaseStores();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  v5 = a1 + *(int *)(a2 + 20);
  v6 = sub_1C106D1F8();
  v10 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8);
  v10(v5, v6);
  v7 = a1 + *(int *)(a2 + 24);
  swift_bridgeObjectRelease();
  v8 = v7 + *(int *)(type metadata accessor for Source() + 24);
  return ((uint64_t (*)(uint64_t, uint64_t))v10)(v8, v6);
}

uint64_t initializeWithCopy for StandardEntityFusion(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v6 = sub_1C106AB28();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = type metadata accessor for Configuration();
  *(_OWORD *)(a1 + *(int *)(v7 + 20)) = *(_OWORD *)(a2 + *(int *)(v7 + 20));
  v8 = (int *)type metadata accessor for PhaseStores();
  *(_QWORD *)(a1 + v8[5]) = *(_QWORD *)(a2 + v8[5]);
  *(_QWORD *)(a1 + v8[6]) = *(_QWORD *)(a2 + v8[6]);
  *(_QWORD *)(a1 + v8[7]) = *(_QWORD *)(a2 + v8[7]);
  *(_QWORD *)(a1 + v8[8]) = *(_QWORD *)(a2 + v8[8]);
  *(_QWORD *)(a1 + v8[9]) = *(_QWORD *)(a2 + v8[9]);
  *(_QWORD *)(a1 + v8[10]) = *(_QWORD *)(a2 + v8[10]);
  *(_QWORD *)(a1 + v8[11]) = *(_QWORD *)(a2 + v8[11]);
  v9 = a3[5];
  v22 = a2 + v9;
  v23 = a1 + v9;
  v10 = sub_1C106D1F8();
  v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  v21 = v10;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  v11(v23, v22, v21);
  v12 = a3[6];
  v13 = (_QWORD *)(a1 + v12);
  v14 = a2 + v12;
  v15 = *(_QWORD *)(a2 + v12 + 8);
  *v13 = *(_QWORD *)(a2 + v12);
  v13[1] = v15;
  v13[2] = *(_QWORD *)(a2 + v12 + 16);
  v16 = type metadata accessor for Source();
  v17 = *(int *)(v16 + 24);
  v18 = (char *)v13 + v17;
  v19 = v14 + v17;
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  v11((uint64_t)v18, v19, v21);
  *((_BYTE *)v13 + *(int *)(v16 + 28)) = *(_BYTE *)(v14 + *(int *)(v16 + 28));
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  return a1;
}

uint64_t assignWithCopy for StandardEntityFusion(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  int *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(char *, uint64_t, uint64_t);
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;

  v6 = sub_1C106AB28();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(type metadata accessor for Configuration() + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *v8 = *v9;
  v8[1] = v9[1];
  v10 = (int *)type metadata accessor for PhaseStores();
  *(_QWORD *)(a1 + v10[5]) = *(_QWORD *)(a2 + v10[5]);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + v10[6]) = *(_QWORD *)(a2 + v10[6]);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + v10[7]) = *(_QWORD *)(a2 + v10[7]);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + v10[8]) = *(_QWORD *)(a2 + v10[8]);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + v10[9]) = *(_QWORD *)(a2 + v10[9]);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + v10[10]) = *(_QWORD *)(a2 + v10[10]);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + v10[11]) = *(_QWORD *)(a2 + v10[11]);
  swift_retain();
  swift_release();
  v11 = a3[5];
  v12 = (char *)(a1 + v11);
  v13 = a2 + v11;
  v14 = sub_1C106D1F8();
  v15 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 24);
  v15(v12, v13, v14);
  v16 = a3[6];
  v17 = (char *)(a1 + v16);
  v18 = a2 + v16;
  *(_QWORD *)v17 = *(_QWORD *)(a2 + v16);
  *((_QWORD *)v17 + 1) = *(_QWORD *)(a2 + v16 + 8);
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  swift_bridgeObjectRelease();
  *((_QWORD *)v17 + 2) = *(_QWORD *)(v18 + 16);
  v19 = type metadata accessor for Source();
  v15(&v17[*(int *)(v19 + 24)], v18 + *(int *)(v19 + 24), v14);
  v17[*(int *)(v19 + 28)] = *(_BYTE *)(v18 + *(int *)(v19 + 28));
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  return a1;
}

uint64_t initializeWithTake for StandardEntityFusion(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v6 = sub_1C106AB28();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = type metadata accessor for Configuration();
  *(_OWORD *)(a1 + *(int *)(v7 + 20)) = *(_OWORD *)(a2 + *(int *)(v7 + 20));
  v8 = (int *)type metadata accessor for PhaseStores();
  *(_QWORD *)(a1 + v8[5]) = *(_QWORD *)(a2 + v8[5]);
  *(_QWORD *)(a1 + v8[6]) = *(_QWORD *)(a2 + v8[6]);
  *(_QWORD *)(a1 + v8[7]) = *(_QWORD *)(a2 + v8[7]);
  *(_QWORD *)(a1 + v8[8]) = *(_QWORD *)(a2 + v8[8]);
  *(_QWORD *)(a1 + v8[9]) = *(_QWORD *)(a2 + v8[9]);
  *(_QWORD *)(a1 + v8[10]) = *(_QWORD *)(a2 + v8[10]);
  *(_QWORD *)(a1 + v8[11]) = *(_QWORD *)(a2 + v8[11]);
  v9 = a3[5];
  v10 = a1 + v9;
  v11 = a2 + v9;
  v12 = sub_1C106D1F8();
  v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 32);
  v13(v10, v11, v12);
  v14 = a3[6];
  v15 = a1 + v14;
  v16 = a2 + v14;
  *(_OWORD *)v15 = *(_OWORD *)(a2 + v14);
  *(_QWORD *)(v15 + 16) = *(_QWORD *)(a2 + v14 + 16);
  v17 = type metadata accessor for Source();
  v13(v15 + *(int *)(v17 + 24), v16 + *(int *)(v17 + 24), v12);
  *(_BYTE *)(v15 + *(int *)(v17 + 28)) = *(_BYTE *)(v16 + *(int *)(v17 + 28));
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  return a1;
}

uint64_t assignWithTake for StandardEntityFusion(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(char *, uint64_t, uint64_t);
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v6 = sub_1C106AB28();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = type metadata accessor for Configuration();
  *(_OWORD *)(a1 + *(int *)(v7 + 20)) = *(_OWORD *)(a2 + *(int *)(v7 + 20));
  v8 = (int *)type metadata accessor for PhaseStores();
  *(_QWORD *)(a1 + v8[5]) = *(_QWORD *)(a2 + v8[5]);
  swift_release();
  *(_QWORD *)(a1 + v8[6]) = *(_QWORD *)(a2 + v8[6]);
  swift_release();
  *(_QWORD *)(a1 + v8[7]) = *(_QWORD *)(a2 + v8[7]);
  swift_release();
  *(_QWORD *)(a1 + v8[8]) = *(_QWORD *)(a2 + v8[8]);
  swift_release();
  *(_QWORD *)(a1 + v8[9]) = *(_QWORD *)(a2 + v8[9]);
  swift_release();
  *(_QWORD *)(a1 + v8[10]) = *(_QWORD *)(a2 + v8[10]);
  swift_release();
  *(_QWORD *)(a1 + v8[11]) = *(_QWORD *)(a2 + v8[11]);
  swift_release();
  v9 = a3[5];
  v10 = (char *)(a1 + v9);
  v11 = a2 + v9;
  v12 = sub_1C106D1F8();
  v13 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 40);
  v13(v10, v11, v12);
  v14 = a3[6];
  v15 = (char *)(a1 + v14);
  v16 = a2 + v14;
  v17 = *(_QWORD *)(a2 + v14 + 8);
  *(_QWORD *)v15 = *(_QWORD *)(a2 + v14);
  *((_QWORD *)v15 + 1) = v17;
  swift_bridgeObjectRelease();
  *((_QWORD *)v15 + 2) = *(_QWORD *)(v16 + 16);
  v18 = type metadata accessor for Source();
  v13(&v15[*(int *)(v18 + 24)], v16 + *(int *)(v18 + 24), v12);
  v15[*(int *)(v18 + 28)] = *(_BYTE *)(v16 + *(int *)(v18 + 28));
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  return a1;
}

uint64_t getEnumTagSinglePayload for StandardEntityFusion()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1C0D54EA4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  unsigned int v15;

  sub_1C077D0AC();
  sub_1C0786404();
  if (v9)
  {
    v7 = v6;
    v8 = v4;
    return sub_1C07B2D80(v8, v3, v7);
  }
  sub_1C0776744();
  sub_1C0786404();
  if (v9)
  {
    v7 = v10;
    v11 = a3[5];
LABEL_10:
    v8 = v4 + v11;
    return sub_1C07B2D80(v8, v3, v7);
  }
  sub_1C077674C();
  sub_1C0786404();
  if (v12)
  {
    v7 = v13;
    v11 = a3[6];
    goto LABEL_10;
  }
  v15 = *(unsigned __int8 *)(v4 + a3[7]);
  if (v15 >= 4)
    return v15 - 3;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for StandardEntityFusion()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_1C0D54F44(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;

  sub_1C077D0AC();
  sub_1C077AFFC();
  if (v10)
  {
    v8 = v7;
    v9 = v5;
  }
  else
  {
    sub_1C0776744();
    sub_1C077AFFC();
    if (v10)
    {
      v8 = v11;
      v12 = a4[5];
    }
    else
    {
      sub_1C077674C();
      sub_1C077AFFC();
      if (!v13)
      {
        *(_BYTE *)(v5 + a4[7]) = v4 + 3;
        return;
      }
      v8 = v14;
      v12 = a4[6];
    }
    v9 = v5 + v12;
  }
  sub_1C07B2D8C(v9, v4, v4, v8);
}

uint64_t sub_1C0D54FD8()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  result = type metadata accessor for PhaseStores();
  if (v1 <= 0x3F)
  {
    result = sub_1C106D1F8();
    if (v2 <= 0x3F)
    {
      result = type metadata accessor for Source();
      if (v3 <= 0x3F)
      {
        swift_initStructMetadata();
        return 0;
      }
    }
  }
  return result;
}

uint64_t sub_1C0D55080(uint64_t a1)
{
  return sub_1C0D55108(a1, sub_1C0D4A738);
}

void sub_1C0D5509C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1C0D51494(a1, a2, *(_QWORD *)(v2 + 16));
}

uint64_t sub_1C0D550B4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1C0D5198C(a1, a2, *(_QWORD *)(v2 + 16), type metadata accessor for ConstructionEventTriple, (uint64_t)&unk_1EF648820, &qword_1EF648828, (uint64_t)sub_1C07EC8EC);
}

uint64_t sub_1C0D550EC(uint64_t a1)
{
  return sub_1C0D55108(a1, sub_1C0D4A4F0);
}

uint64_t sub_1C0D55108(uint64_t a1, uint64_t (*a2)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  uint64_t v2;

  return a2(a1, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(unsigned __int8 *)(v2 + 32), *(_QWORD *)(v2 + 40), *(_QWORD *)(v2 + 48));
}

uint64_t sub_1C0D5512C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1C0D5198C(a1, a2, *(_QWORD *)(v2 + 16), type metadata accessor for ConstructionGraphTriple, (uint64_t)&unk_1EF648838, &qword_1EF648840, (uint64_t)sub_1C07EC154);
}

uint64_t sub_1C0D55164(uint64_t a1)
{
  return sub_1C0D55108(a1, sub_1C0D4A2A8);
}

BOOL sub_1C0D55180(uint64_t *a1, uint64_t *a2)
{
  return sub_1C0D4C0F4(*a1, a1[1], *a2);
}

uint64_t sub_1C0D551A8(uint64_t *a1, uint64_t *a2)
{
  return sub_1C0D4C140(*a1, a1[1], *a2) & 1;
}

uint64_t sub_1C0D551D0(uint64_t *a1)
{
  uint64_t v1;

  return sub_1C0D551A8(a1, *(uint64_t **)(v1 + 16)) & 1;
}

uint64_t sub_1C0D551EC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1C0D5198C(a1, a2, *(_QWORD *)(v2 + 16), type metadata accessor for EventTriple, (uint64_t)&unk_1EF648858, &qword_1EF648860, (uint64_t)sub_1C07EBE64);
}

uint64_t sub_1C0D55224(uint64_t a1)
{
  return sub_1C0D5525C(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1C0D48FA4);
}

uint64_t sub_1C0D55240(uint64_t a1)
{
  return sub_1C0D5525C(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1C0D488D8);
}

uint64_t sub_1C0D5525C(uint64_t a1, uint64_t (*a2)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  uint64_t v2;

  return a2(a1, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 40), *(_QWORD *)(v2 + 48), *(unsigned __int8 *)(v2 + 56));
}

uint64_t sub_1C0D55284(__int128 *a1)
{
  return sub_1C0D55324(a1, &qword_1ED75AB50, &qword_1ED75AB48, (uint64_t)&unk_1E7A30168, (void (*)(uint64_t, uint64_t))sub_1C0D55508);
}

uint64_t sub_1C0D552AC(uint64_t a1)
{
  return sub_1C0D55108(a1, sub_1C0D4A060);
}

uint64_t sub_1C0D552C8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1C0D5198C(a1, a2, *(_QWORD *)(v2 + 16), type metadata accessor for GraphTriple, (uint64_t)&unk_1EF648868, qword_1EF648870, (uint64_t)sub_1C07EB774);
}

uint64_t sub_1C0D55300(__int128 *a1)
{
  return sub_1C0D55324(a1, &qword_1ED741E78, &qword_1ED750720, (uint64_t)&unk_1E7A301E0, (void (*)(uint64_t, uint64_t))sub_1C0D55508);
}

uint64_t sub_1C0D55324(__int128 *a1, uint64_t *a2, _QWORD *a3, uint64_t a4, void (*a5)(uint64_t, uint64_t))
{
  uint64_t v9;
  _OWORD *v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  uint64_t v17;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;

  v20 = sub_1C07ACF80(a2);
  sub_1C07BB218(a3, a2);
  v21 = v9;
  v10 = (_OWORD *)sub_1C0778598();
  *(_QWORD *)&v19 = v10;
  v11 = a1[1];
  v23 = *a1;
  v12 = *((_QWORD *)a1 + 3);
  v13 = *((_QWORD *)a1 + 4);
  v22 = *((_QWORD *)a1 + 2);
  v14 = *((_QWORD *)a1 + 6);
  v15 = *((_QWORD *)a1 + 7);
  v10[1] = v23;
  v10[2] = v11;
  v16 = a1[3];
  v10[3] = a1[2];
  v10[4] = v16;
  sub_1C07ACF80(&qword_1ED75D340);
  v17 = sub_1C0778598();
  *(_OWORD *)(v17 + 16) = xmmword_1C1079220;
  sub_1C077DD60(&v19, v17 + 32);
  sub_1C07B35DC((uint64_t)&v23);
  sub_1C08FD4A0((uint64_t)&v22);
  a5(v12, v13);
  a5(v14, v15);
  return v17;
}

uint64_t sub_1C0D5541C(__int128 *a1)
{
  return sub_1C0D55324(a1, (uint64_t *)&unk_1ED75AB18, &qword_1ED75AB10, (uint64_t)&unk_1E7A301B8, (void (*)(uint64_t, uint64_t))sub_1C0BCD07C);
}

uint64_t sub_1C0D55440(__int128 *a1)
{
  return sub_1C0D55324(a1, &qword_1ED75AB40, &qword_1ED75AB38, (uint64_t)&unk_1E7A30190, (void (*)(uint64_t, uint64_t))sub_1C0D55508);
}

uint64_t sub_1C0D55470()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v0 + 40))
    swift_release();
  if (*(_QWORD *)(v0 + 64))
    swift_release();
  return swift_deallocObject();
}

BOOL sub_1C0D554BC(uint64_t *a1)
{
  uint64_t v1;

  return sub_1C0D55180(a1, *(uint64_t **)(v1 + 16));
}

uint64_t sub_1C0D554D8(uint64_t *a1)
{
  return sub_1C0D551D0(a1) & 1;
}

BOOL sub_1C0D554F0(uint64_t *a1)
{
  return sub_1C0D554BC(a1);
}

void sub_1C0D5550C(uint64_t *a1)
{
  sub_1C0D47EB4(a1);
}

void sub_1C0D55520(uint64_t *a1)
{
  sub_1C0D47F5C(a1);
}

void sub_1C0D55534(uint64_t *a1)
{
  sub_1C0D48004(a1);
}

void sub_1C0D55548(uint64_t *a1)
{
  sub_1C0D480AC(a1);
}

void sub_1C0D5555C(uint64_t a1, uint64_t a2)
{
  sub_1C0D5509C(a1, a2);
}

uint64_t sub_1C0D55580(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;

  *(_QWORD *)(v10 - 224) = (char *)&a9 - v9;
  return type metadata accessor for TranslatedEntityTriple(0);
}

uint64_t sub_1C0D55598()
{
  return sub_1C106EB24();
}

void sub_1C0D555AC(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(_QWORD);

  sub_1C08D6F44(a1, a2, v2);
}

uint64_t sub_1C0D555B4()
{
  return swift_arrayInitWithTakeFrontToBack();
}

uint64_t sub_1C0D555C0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v3 - 432))(a1, a2, 1, v2);
}

uint64_t sub_1C0D555D4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 - 192))(a1, a2, v2);
}

void sub_1C0D555E4(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(_QWORD);

  sub_1C08D6E2C(a1, a2, v2);
}

uint64_t sub_1C0D555EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t (*a16)(uint64_t, uint64_t))
{
  uint64_t v16;
  uint64_t v17;

  return a16(v16, v17);
}

void sub_1C0D555FC()
{
  void *v0;

  objc_autoreleasePoolPop(v0);
}

void sub_1C0D5560C()
{
  sub_1C0D4788C();
}

uint64_t sub_1C0D5561C()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1C0D55628@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 240) = result;
  *(_QWORD *)(v2 - 256) = a2;
  return result;
}

void sub_1C0D55640(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(_QWORD);

  sub_1C08D6F44(a1, a2, v2);
}

uint64_t sub_1C0D55654()
{
  return sub_1C106D0CC();
}

void sub_1C0D55674()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 184) = v0;
}

void sub_1C0D55688()
{
  sub_1C0D52858();
}

uint64_t sub_1C0D55694()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v2 = v0[1];
  *(_QWORD *)(v1 - 128) = *v0;
  *(_QWORD *)(v1 - 120) = v2;
  return _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
}

void sub_1C0D556A0(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;

  sub_1C08D6F44(a1, v3, a3);
}

uint64_t sub_1C0D556B4()
{
  return sub_1C106E2FC();
}

uint64_t sub_1C0D556C0()
{
  return sub_1C106EAAC();
}

void sub_1C0D556CC()
{
  void (*v0)(uint64_t);
  uint64_t v1;

  sub_1C07803F8(*(_QWORD **)(v1 - 144), v0);
}

uint64_t sub_1C0D556D8()
{
  return sub_1C106FAA8();
}

uint64_t sub_1C0D556E4()
{
  return 0;
}

uint64_t sub_1C0D556F8()
{
  return sub_1C106FC94();
}

uint64_t sub_1C0D55718()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 - 696))();
}

void sub_1C0D55724(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(_QWORD);

  sub_1C08D6E2C(a1, a2, v2);
}

void sub_1C0D5572C(void *a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t (**v37)(uint64_t, uint64_t);
  id v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t *v42;
  void *v43;
  id v44;
  uint64_t v45;
  uint64_t v46;
  id v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  id v51;
  uint64_t v52;
  uint64_t v53;
  int v54;
  uint64_t v55;
  uint64_t v56;
  char v57;
  uint64_t *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  void (*v65)(void);
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  _QWORD *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char v79;
  uint64_t v80;
  void (*v81)(uint64_t, uint64_t *);
  uint64_t (*v82)(uint64_t, _QWORD);
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t (*v86)(uint64_t, uint64_t, uint64_t);
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t (*v95)(uint64_t, _QWORD);
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  os_log_type_t v105;
  _DWORD *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  _BYTE *v110;
  uint64_t v111;
  unint64_t v112;
  os_log_type_t v113;
  BOOL v114;
  uint64_t (**v115)(uint64_t, uint64_t);
  _DWORD *v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  _BYTE *v120;
  uint64_t (*v121)(uint64_t, uint64_t);
  uint64_t v122;
  void *v123;
  os_log_type_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  const char *v129;
  uint64_t v130;
  os_log_type_t v131;
  uint64_t v132;
  uint64_t v133;
  _BYTE *v134;
  uint64_t v135;
  void *v136;
  os_log_type_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  _BYTE *v142;
  uint64_t v143;
  unint64_t v144;
  uint64_t v145;
  uint64_t (**v146)(uint64_t, uint64_t);
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  int v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  int *v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t *v172;
  uint64_t v173;
  __int128 v174;
  __int128 v175;
  __int128 v176;
  __int128 v177;
  uint64_t v178;
  __int128 v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;

  v173 = a4;
  v164 = (int *)sub_1C07ACF80(&qword_1EF630060);
  sub_1C0787718(*((_QWORD *)v164 - 1));
  MEMORY[0x1E0C80A78](v11);
  sub_1C077AED0();
  sub_1C077AF60();
  MEMORY[0x1E0C80A78](v12);
  sub_1C0779728();
  sub_1C077AF60();
  MEMORY[0x1E0C80A78](v13);
  sub_1C0778674();
  sub_1C0784DAC(v14);
  sub_1C07ACF80(&qword_1ED7618D0);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v15);
  sub_1C077AED0();
  sub_1C077AF60();
  MEMORY[0x1E0C80A78](v16);
  sub_1C0779728();
  sub_1C077AF60();
  MEMORY[0x1E0C80A78](v17);
  sub_1C0779728();
  sub_1C077AF60();
  MEMORY[0x1E0C80A78](v18);
  sub_1C0779728();
  sub_1C077AF60();
  MEMORY[0x1E0C80A78](v19);
  sub_1C0778674();
  v21 = sub_1C0D5DDE8(v20);
  sub_1C077B58C(v21, (uint64_t)&v182);
  sub_1C0787718(v22);
  MEMORY[0x1E0C80A78](v23);
  sub_1C077AED0();
  sub_1C077AF60();
  MEMORY[0x1E0C80A78](v24);
  sub_1C0778674();
  sub_1C0784DAC(v25);
  sub_1C07ACF80(&qword_1ED759F70);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v26);
  sub_1C077AED0();
  sub_1C077AF60();
  MEMORY[0x1E0C80A78](v27);
  sub_1C0779728();
  sub_1C077AF60();
  MEMORY[0x1E0C80A78](v28);
  sub_1C0779728();
  sub_1C077AF60();
  MEMORY[0x1E0C80A78](v29);
  sub_1C0779728();
  sub_1C077AF60();
  MEMORY[0x1E0C80A78](v30);
  v32 = sub_1C077FEA8((uint64_t)&v143 - v31);
  v171 = *(_QWORD *)(v32 - 8);
  v172 = (uint64_t *)v32;
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v33);
  sub_1C077AED0();
  sub_1C077AF60();
  MEMORY[0x1E0C80A78](v34);
  sub_1C0778674();
  v170 = v35;
  v36 = sub_1C106AA44();
  v37 = *(uint64_t (***)(uint64_t, uint64_t))(v36 - 8);
  MEMORY[0x1E0C80A78](v36);
  sub_1C07785B8();
  *(_QWORD *)&v177 = a2;
  *((_QWORD *)&v177 + 1) = a3;
  sub_1C07767CC();
  sub_1C077C964();
  v38 = sub_1C079B9C0(a1, sel___swift_objectForKeyedSubscript_);
  sub_1C07AA490();
  if (a1)
  {
    sub_1C107063C();
    sub_1C07768A0();
  }
  else
  {
    sub_1C0776B50();
  }
  sub_1C078A67C((uint64_t)&v177, (uint64_t)&v179, &qword_1ED760400);
  v39 = MEMORY[0x1E0DEE9B8];
  if (v180)
  {
    v148 = v5;
    sub_1C07D4B70(0, &qword_1ED758DE8);
    v181 = v39 + 8;
    if ((sub_1C077C458() & 1) != 0)
    {
      v143 = a2;
      v146 = v37;
      v40 = v175;
      v144 = a3;
      sub_1C0775894();
      v145 = v40;
      sub_1C10704B0();
      v169 = MEMORY[0x1E0DEE9D8];
      v41 = v167;
      v149 = v6;
      v147 = v36;
      while (1)
      {
        sub_1C07B0544();
        v42 = (uint64_t *)MEMORY[0x1E0DEE9B8];
        if (!v180)
          goto LABEL_73;
        while (1)
        {
          sub_1C07C010C(&v179, &v177);
          sub_1C07D4B70(0, (unint64_t *)&qword_1EF647F18);
          sub_1C0D5DE24();
          if (!sub_1C077C458())
          {
            sub_1C07A9690();
            if (qword_1ED761458 != -1)
              goto LABEL_98;
            goto LABEL_75;
          }
          v43 = (void *)v175;
          *(_QWORD *)&v175 = 0x6F697469646E6F63;
          sub_1C07BAEBC(0xE90000000000006ELL);
          v44 = sub_1C079B9C0(v43, sel___swift_objectForKeyedSubscript_);
          sub_1C07AA490();
          if (v40)
          {
            sub_1C078DCB8();
            sub_1C07768A0();
          }
          else
          {
            v175 = 0u;
            v176 = 0u;
          }
          v45 = sub_1C0D5DE24();
          v40 = (uint64_t)&qword_1ED760400;
          sub_1C078A67C(v45, v46, &qword_1ED760400);
          if (!v178)
          {
            sub_1C0781B00((uint64_t)&v177);
            goto LABEL_20;
          }
          if ((sub_1C07AAAAC() & 1) == 0)
            goto LABEL_20;
          if (!a5)
            break;
          v40 = sub_1C0D57B30(v174, *((uint64_t *)&v174 + 1), v173, a5);
          sub_1C0778580();
          if ((v40 & 1) != 0)
          {
            v152 = 1;
            goto LABEL_22;
          }

          sub_1C07B0544();
          if (!v180)
            goto LABEL_73;
        }
        sub_1C0778580();
LABEL_20:
        v152 = 0;
LABEL_22:
        *(_QWORD *)&v175 = 0x7250746567726174;
        sub_1C07BAEBC(0xEE0079747265706FLL);
        v47 = sub_1C079B9C0(v43, sel___swift_objectForKeyedSubscript_);
        sub_1C07AA490();
        if (v40)
        {
          sub_1C078DCB8();
          sub_1C07768A0();
        }
        else
        {
          v175 = 0u;
          v176 = 0u;
        }
        v48 = sub_1C0D5DE24();
        sub_1C078A67C(v48, v49, &qword_1ED760400);
        if (!v178)
          break;
        if ((sub_1C07AAAAC() & 1) == 0)
          goto LABEL_79;
        v177 = v174;
        *(_QWORD *)&v175 = 47;
        *((_QWORD *)&v175 + 1) = 0xE100000000000000;
        sub_1C07B1280();
        v50 = sub_1C10705D0();
        sub_1C07767AC();
        *(_QWORD *)&v177 = 0x6156746567726174;
        *((_QWORD *)&v177 + 1) = 0xEB0000000065756CLL;
        v51 = objc_msgSend(v43, sel___swift_objectForKeyedSubscript_, sub_1C1070D20());
        swift_unknownObjectRelease();
        if (v51)
        {
          sub_1C078DCB8();
          sub_1C07768A0();
        }
        else
        {
          v175 = 0u;
          v176 = 0u;
        }
        v52 = sub_1C0D5DE24();
        v42 = &qword_1ED760400;
        sub_1C078A67C(v52, v53, &qword_1ED760400);
        if (v178)
        {
          v54 = sub_1C07AAAAC();
          if (v54)
            v55 = v174;
          else
            v55 = 0;
          if (v54)
            v56 = *((_QWORD *)&v174 + 1);
          else
            v56 = 0;
        }
        else
        {
          sub_1C0784B6C((uint64_t)&v177, &qword_1ED760400);
          v55 = 0;
          v56 = 0;
        }
        if (!*(_QWORD *)(v50 + 16))
        {
          __break(1u);
LABEL_97:
          __break(1u);
LABEL_98:
          swift_once();
LABEL_75:
          v111 = sub_1C077585C();
          sub_1C079E000(v111, (uint64_t)qword_1ED78D818);
          v112 = v144;
          sub_1C07767CC();
          sub_1C106F538();
          v113 = sub_1C077CF00();
          v114 = sub_1C0775B94(v113);
          v115 = v146;
          if (v114)
          {
            v116 = (_DWORD *)sub_1C0775854();
            v117 = sub_1C0775854();
            sub_1C0D5DE04(v117);
            *v116 = 136315138;
            _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
            *(_QWORD *)&v175 = sub_1C0788DAC(v143, v112, (uint64_t *)&v177);
            sub_1C10705AC();
            sub_1C077CF6C();
            sub_1C078B12C(&dword_1C0771000, v118, v119, "Mapping error could not get predicates for  %s");
            sub_1C0778610();
            sub_1C0776778();
          }

          sub_1C07758A4();
          sub_1C078B89C();
          sub_1C0775810();
          sub_1C0782BFC(v120, 2);

          v121 = v115[1];
LABEL_90:
          sub_1C078BA74(v121);
          goto LABEL_72;
        }
        v151 = v55;
        sub_1C07767B4();
        sub_1C07BB2D0();
        v42 = v172;
        sub_1C077AEEC(v41, 1, (uint64_t)v172);
        if (v57)
        {
          sub_1C0778580();
          sub_1C07A9690();
          sub_1C077960C();
          sub_1C0784B6C(v41, &qword_1ED759F70);
          if (qword_1ED761458 != -1)
            swift_once();
          v130 = sub_1C077585C();
          v123 = (void *)sub_1C079E000(v130, (uint64_t)qword_1ED78D818);
          sub_1C07767CC();
          sub_1C106F538();
          v131 = sub_1C077CF00();
          if (sub_1C0775B94(v131))
          {
            sub_1C0775854();
            v132 = sub_1C0775854();
            sub_1C0D5DE04(v132);
            sub_1C07B49D4(4.8149e-34);
            v133 = sub_1C07BD14C();
            sub_1C07A039C(v133);
            sub_1C077CF6C();
            v129 = "Mapping error could not get entity predicate for  %s";
LABEL_87:
            sub_1C078B12C(&dword_1C0771000, v127, v128, v129);
            sub_1C0778610();
            sub_1C0776778();
          }
          goto LABEL_88;
        }
        v150 = v56;
        sub_1C07B9FC0(v170, v41);
        v42 = *(uint64_t **)(v50 + 16);
        if (v42 == (uint64_t *)2)
        {
          sub_1C07767B4();
          v83 = v158;
          sub_1C078109C();
          sub_1C106D084();
          v84 = v168;
          sub_1C077AEEC(v83, 1, v168);
          if (v57)
          {
            sub_1C078F230();
            sub_1C0784B6C(v83, &qword_1ED7618D0);
            sub_1C07AFBB0();
            sub_1C078832C();
            sub_1C07BAC24();
          }
          sub_1C0778580();
          v50 = v166;
          v85 = sub_1C0D5DE48();
          sub_1C077CF74(v85, v83, v86);
          v87 = v157;
          sub_1C077CF74(v157, v36, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v50 + 16));
          sub_1C077FABC(v87);
          sub_1C07A87FC((uint64_t)&v179);
          sub_1C07B8CB8();
          sub_1C078A67C(v87, v84, &qword_1ED7618D0);
          v88 = sub_1C07AF69C();
          sub_1C078A67C(v88, v89, &qword_1ED759F70);
          if ((sub_1C0785248() & 1) == 0)
            sub_1C0793318();
          v36 = v147;
          sub_1C07B8654();
          v41 = v167;
          if (v79)
          {
            sub_1C07B7544();
            v93 = v90;
          }
          sub_1C0788300(v90, v91, v92, v93);
          sub_1C078A67C(v163, v94, &qword_1EF630060);

          sub_1C077B5A8();
          sub_1C077AE54(v162, v95);
          goto LABEL_62;
        }
        if (v42 != (uint64_t *)3)
        {
          sub_1C0778580();
          if (v42 == (uint64_t *)1)
          {
            v96 = v153;
            sub_1C07B2D8C(v153, 1, 1, v168);
            sub_1C07A87FC((uint64_t)&v177);
            sub_1C07B8CB8();
            sub_1C078A67C(v96, 1, &qword_1ED7618D0);
            v97 = sub_1C07AF69C();
            sub_1C078A67C(v97, v98, &qword_1ED759F70);
            if ((sub_1C0785248() & 1) == 0)
              sub_1C0793318();
            sub_1C07B8654();
            v36 = v147;
            v41 = v167;
            if (v79)
            {
              sub_1C07B7544();
              v102 = v99;
            }
            sub_1C0788300(v99, v100, v101, v102);
            sub_1C078A67C(v159, v103, &qword_1EF630060);

LABEL_62:
            v40 = (uint64_t)v172;
            v81 = *(void (**)(uint64_t, uint64_t *))(v171 + 8);
            goto LABEL_63;
          }
          sub_1C07A9690();
          sub_1C078F230();
          if (qword_1ED761458 != -1)
            swift_once();
          v135 = sub_1C077585C();
          v136 = (void *)sub_1C079E000(v135, (uint64_t)qword_1ED78D818);
          sub_1C07767CC();
          sub_1C106F538();
          v137 = sub_1C077CF00();
          if (sub_1C0775B94(v137))
          {
            sub_1C0775854();
            v138 = sub_1C0775854();
            sub_1C0D5DE04(v138);
            sub_1C07B49D4(4.8149e-34);
            v139 = sub_1C07BD14C();
            sub_1C07A039C(v139);
            sub_1C077CF6C();
            sub_1C078B12C(&dword_1C0771000, v140, v141, "Mapping error no predicates for %s");
            sub_1C0778610();
            sub_1C0776778();
          }

          sub_1C07758A4();
          sub_1C0781F20();
          sub_1C0775810();
          sub_1C0782BFC(v142, 2);

          (*(void (**)(uint64_t, uint64_t *))(v171 + 8))(v170, v172);
LABEL_89:
          v121 = (uint64_t (*)(uint64_t, uint64_t))v42[1];
          goto LABEL_90;
        }
        sub_1C07767B4();
        sub_1C078109C();
        v42 = v58;
        sub_1C106D084();
        v59 = v168;
        sub_1C077AEEC((uint64_t)v42, 1, v168);
        if (v57)
        {
          sub_1C078F230();
          sub_1C0784B6C((uint64_t)v42, &qword_1ED7618D0);
          sub_1C07AFBB0();
          sub_1C078832C();
          sub_1C07BAC24();
        }
        (*(void (**)(uint64_t, uint64_t *, uint64_t))(v166 + 32))(v165, v42, v59);
        if (*(_QWORD *)(v50 + 16) < 3uLL)
          goto LABEL_97;
        sub_1C07767B4();
        v60 = v155;
        sub_1C07BB2D0();
        sub_1C077AEEC(v60, 1, (uint64_t)v172);
        if (v57)
        {
          sub_1C078F230();
          sub_1C0784B6C(v60, &qword_1ED759F70);
          *(_QWORD *)&v177 = 0;
          *((_QWORD *)&v177 + 1) = 0xE000000000000000;
          sub_1C1070774();
          sub_1C106FC94();
          sub_1C07BAC24();
        }
        sub_1C0778580();
        v61 = sub_1C07812AC();
        sub_1C07B9FC0(v61, v62);
        v63 = v156;
        v64 = v168;
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v166 + 16))(v156, v165, v168);
        sub_1C07B2D8C(v63, 0, 1, v64);
        v65 = *(void (**)(void))(v171 + 16);
        v66 = v154;
        v67 = sub_1C07AF69C();
        sub_1C07B9FC0(v67, v68);
        sub_1C077FABC(v66);
        v69 = v161 + v164[12];
        LODWORD(v50) = v161 + v164[16];
        v70 = (_QWORD *)(v161 + v164[20]);
        v65();
        sub_1C078A67C(v63, v69, &qword_1ED7618D0);
        v71 = sub_1C07AF69C();
        sub_1C078A67C(v71, v72, &qword_1ED759F70);
        v73 = v150;
        *v70 = v151;
        v70[1] = v73;
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v41 = v167;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          sub_1C0793318();
        v36 = v147;
        sub_1C07B8654();
        if (v79)
        {
          sub_1C07B7544();
          v78 = v75;
        }
        sub_1C0788300(v75, v76, v77, v78);
        sub_1C078A67C(v161, v80, &qword_1EF630060);

        v40 = (uint64_t)v172;
        v81 = *(void (**)(uint64_t, uint64_t *))(v171 + 8);
        v81(v160, v172);
        sub_1C077B5A8();
        sub_1C077AE54(v165, v82);
LABEL_63:
        v81(v170, (uint64_t *)v40);
        if ((v50 & 1) != 0)
        {
LABEL_73:
          sub_1C078BA74(v146[1]);
          sub_1C077B3CC();
          goto LABEL_72;
        }
      }
      sub_1C0784B6C((uint64_t)&v177, &qword_1ED760400);
LABEL_79:
      sub_1C07A9690();
      if (qword_1ED761458 != -1)
        swift_once();
      v122 = sub_1C077585C();
      v123 = (void *)sub_1C079E000(v122, (uint64_t)qword_1ED78D818);
      sub_1C07767CC();
      sub_1C106F538();
      v124 = sub_1C077CF00();
      if (sub_1C0775B94(v124))
      {
        sub_1C0775854();
        v125 = sub_1C0775854();
        sub_1C0D5DE04(v125);
        sub_1C07B49D4(4.8149e-34);
        v126 = sub_1C07BD14C();
        sub_1C07A039C(v126);
        sub_1C077CF6C();
        v129 = "Mapping error could not get target property for  %s";
        goto LABEL_87;
      }
LABEL_88:

      sub_1C07758A4();
      sub_1C0781F20();
      sub_1C0775810();
      sub_1C0782BFC(v134, 1);

      goto LABEL_89;
    }
    sub_1C0775894();
  }
  else
  {
    sub_1C0775894();
    sub_1C0784B6C((uint64_t)&v179, &qword_1ED760400);
  }
  if (qword_1ED761458 != -1)
    swift_once();
  v104 = sub_1C077585C();
  sub_1C079E000(v104, (uint64_t)qword_1ED78D818);
  sub_1C07767CC();
  sub_1C106F538();
  v105 = sub_1C077CF00();
  if (sub_1C0775B94(v105))
  {
    v106 = (_DWORD *)sub_1C0775854();
    *(_QWORD *)&v179 = sub_1C0775854();
    *v106 = 136315138;
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    v107 = sub_1C0788DAC(a2, a3, (uint64_t *)&v179);
    sub_1C0782EB8(v107);
    sub_1C10705AC();
    sub_1C077CF6C();
    sub_1C078B12C(&dword_1C0771000, v108, v109, "Mapping error could not get predicate array for %s");
    sub_1C0778610();
    sub_1C0776778();
  }

  sub_1C07758A4();
  sub_1C081F128();
  sub_1C0775810();
  sub_1C0782BFC(v110, 2);
LABEL_72:
  sub_1C07757D0();
}

void sub_1C0D56904()
{
  sub_1C0778580();
  sub_1C077F904();
  sub_1C077B5B4();
  sub_1C07BBFCC();
  JUMPOUT(0x1C0D56920);
}

void sub_1C0D56950()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  void *v3;
  _QWORD *v4;
  uint64_t v5;

  v1 = sub_1C07B6794();
  *v0 = v1;
  v2 = sub_1C106E41C();
  v3 = sub_1C077D374(v2);
  sub_1C07AD7EC((uint64_t)v3);
  v4 = (_QWORD *)sub_1C07812AC();
  v1[7] = sub_1C0D5C068(v4, v5);
  sub_1C07785E4();
}

void sub_1C0D569A0()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  void *v3;
  _QWORD *v4;
  uint64_t v5;

  v1 = sub_1C07B6794();
  *v0 = v1;
  v2 = sub_1C078784C();
  v3 = sub_1C077D374(v2);
  sub_1C07AD7EC((uint64_t)v3);
  v4 = (_QWORD *)sub_1C07812AC();
  v1[7] = sub_1C0D5C12C(v4, v5);
  sub_1C07785E4();
}

void sub_1C0D569E8(uint64_t *a1)
{
  void *v1;
  void *v2;
  uint64_t v3;

  v1 = (void *)*a1;
  v2 = *(void **)(*a1 + 48);
  v3 = *(_QWORD *)(*a1 + 40);
  sub_1C0775C54(*a1, *(uint64_t (**)(uint64_t, _QWORD))(*a1 + 56));
  sub_1C07943BC((uint64_t)v2, *(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
  free(v2);
  sub_1C079C8BC(v1);
}

void (*sub_1C0D56A2C(_QWORD *a1, uint64_t a2))(uint64_t *a1)
{
  _QWORD *v4;

  v4 = malloc(0x30uLL);
  *a1 = v4;
  v4[4] = a2;
  sub_1C08384CC(a2, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1C0826EB0);
  v4[5] = sub_1C0D5C250(v4, a2);
  return sub_1C0D56A90;
}

void sub_1C0D56A90(uint64_t *a1)
{
  void *v1;
  uint64_t v2;

  v1 = (void *)*a1;
  v2 = *(_QWORD *)(*a1 + 32);
  sub_1C0775C54(*a1, *(uint64_t (**)(uint64_t, _QWORD))(*a1 + 40));
  sub_1C08384CC(v2, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1C0826F50);
  sub_1C07A4C08(v1);
}

void sub_1C0D56AC8(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v6;

  v6 = malloc(0x30uLL);
  *a1 = v6;
  v6[4] = a3;
  sub_1C07767B4();
  v6[5] = sub_1C0D5C314(v6, a2, a3);
  sub_1C07785E4();
}

void sub_1C0D56B24(uint64_t *a1)
{
  void *v1;

  v1 = (void *)*a1;
  sub_1C0775C54(*a1, *(uint64_t (**)(uint64_t, _QWORD))(*a1 + 40));
  sub_1C077960C();
  sub_1C07A4C08(v1);
}

uint64_t SourceEntityMappable.constructPropertyRows(source:sourceId:map:basicProperties:nestedSourceId:pipelineType:)(uint64_t *a1, uint64_t a2, unint64_t a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7, unsigned __int8 *a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _BYTE *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t (*v43)(uint64_t, uint64_t);
  uint64_t v44;
  id v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  void (*v52)(_QWORD, _QWORD, _QWORD);
  unint64_t v53;
  NSObject *v54;
  os_log_type_t v55;
  int v56;
  BOOL v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  void *v64;
  os_log_type_t v65;
  _DWORD *v66;
  uint64_t v67;
  unint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  _BYTE *v72;
  uint64_t v73;
  uint64_t v75;
  unint64_t v76;
  unint64_t v77;
  unint64_t v78;
  void (*v79)(uint64_t, uint64_t);
  NSObject *v80;
  os_log_type_t v81;
  BOOL v82;
  uint64_t v83;
  uint8_t *v84;
  uint64_t v85;
  void *v86;
  os_log_type_t v87;
  _DWORD *v88;
  uint64_t v89;
  unint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  _BYTE v94[12];
  int v95;
  uint64_t v96;
  uint64_t v97;
  void (*v98)(_QWORD, _QWORD, _QWORD);
  char *v99;
  uint64_t v100;
  uint64_t v101;
  id v102;
  uint64_t v103;
  uint64_t v104;
  int v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  unint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t (*v114)(uint64_t, uint64_t);
  uint64_t v115;
  uint64_t *v116;
  uint64_t v117;
  void *v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  unint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;

  v104 = a7;
  v103 = a6;
  v106 = a5;
  v110 = a3;
  v111 = a2;
  v116 = a1;
  v113 = *(_QWORD *)(a9 - 8);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v13);
  sub_1C077AED0();
  v15 = v14;
  MEMORY[0x1E0C80A78](v16);
  sub_1C0778674();
  sub_1C0787A68(v17);
  v18 = sub_1C106F874();
  sub_1C077B58C(v18, (uint64_t)&v126);
  sub_1C0787718(v19);
  MEMORY[0x1E0C80A78](v20);
  sub_1C0787A68((uint64_t)&v94[-((v21 + 15) & 0xFFFFFFFFFFFFFFF0)]);
  v22 = sub_1C106F868();
  sub_1C077B58C(v22, (uint64_t)&v124);
  sub_1C0787718(v23);
  MEMORY[0x1E0C80A78](v24);
  sub_1C077AED0();
  sub_1C077AF60();
  MEMORY[0x1E0C80A78](v25);
  sub_1C0778674();
  sub_1C0787A68(v26);
  v108 = sub_1C106FB50();
  sub_1C0787718(*(_QWORD *)(v108 - 8));
  MEMORY[0x1E0C80A78](v27);
  sub_1C0778564();
  v30 = v29 - v28;
  v109 = sub_1C0776744();
  v31 = *(_QWORD *)(v109 - 8);
  MEMORY[0x1E0C80A78](v109);
  sub_1C077AF80();
  v34 = v32 - v33;
  MEMORY[0x1E0C80A78](v35);
  v37 = &v94[-v36];
  v38 = sub_1C078784C();
  sub_1C077B58C(v38, (uint64_t)&v125);
  sub_1C0787718(v39);
  MEMORY[0x1E0C80A78](v40);
  sub_1C077AED0();
  sub_1C077AF60();
  MEMORY[0x1E0C80A78](v41);
  sub_1C0784DAC((uint64_t)&v94[-v42]);
  v105 = *a8;
  v43 = *(uint64_t (**)(uint64_t, uint64_t))(a10 + 32);
  v117 = v10;
  v112 = a9;
  v114 = v43;
  v115 = a10;
  v119 = v43(a9, a10);
  v120 = v44;
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  v45 = objc_msgSend(a4, sel___swift_objectForKeyedSubscript_, sub_1C1070D20());
  swift_unknownObjectRelease();
  if (v45)
  {
    sub_1C107063C();
    v46 = swift_unknownObjectRelease();
  }
  else
  {
    sub_1C0776B50();
  }
  sub_1C077EA44(v46, v47, &qword_1ED760400);
  if (v123)
  {
    v48 = sub_1C07D4B70(0, (unint64_t *)&qword_1EF647F18);
    if ((swift_dynamicCast() & 1) != 0)
    {
      v100 = v34;
      v102 = v118;
      sub_1C077960C();
      v49 = (char *)v116 + *(int *)(type metadata accessor for Source() + 24);
      if (qword_1ED761458 != -1)
        swift_once();
      v50 = sub_1C077585C();
      v51 = sub_1C079E000(v50, (uint64_t)qword_1ED78D818);
      v52 = *(void (**)(_QWORD, _QWORD, _QWORD))(v31 + 16);
      v99 = v49;
      v98 = v52;
      v52(v37, v49, v109);
      v53 = v110;
      swift_bridgeObjectRetain_n();
      v101 = v51;
      v54 = sub_1C106F538();
      v55 = sub_1C1070378();
      v56 = v55;
      v57 = os_log_type_enabled(v54, v55);
      v97 = v48;
      if (v57)
      {
        v58 = sub_1C0775854();
        v96 = sub_1C0775854();
        v121 = v96;
        *(_DWORD *)v58 = 136381187;
        v95 = v56;
        _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
        v119 = sub_1C0788DAC(v111, v53, &v121);
        sub_1C10705AC();
        sub_1C077CF6C();
        *(_WORD *)(v58 + 12) = 2080;
        sub_1C0794BAC(&qword_1ED759F68, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3BB08], MEMORY[0x1E0D3BB40]);
        v59 = sub_1C1070C0C();
        v119 = sub_1C0782D28(v59, v60);
        sub_1C10705AC();
        sub_1C077960C();
        sub_1C0793FBC();
        *(_WORD *)(v58 + 22) = 1024;
        sub_1C07BA284();
        sub_1C10705AC();
        _os_log_impl(&dword_1C0771000, v54, (os_log_type_t)v95, "Source: generating identifier for: %{private}s : %s : %{BOOL}d", (uint8_t *)v58, 0x1Cu);
        swift_arrayDestroy();
        sub_1C0776778();
      }
      sub_1C07758A4();
      sub_1C0793FBC();

      v121 = v111;
      v122 = v53;
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      sub_1C106FC94();
      v75 = v121;
      v76 = v122;
      sub_1C106FB44();
      sub_1C106FB20();
      v78 = v77;
      sub_1C077B5A8();
      v79(v30, v108);
      if (v78 >> 60 != 15)
      {
        swift_bridgeObjectRelease();
        sub_1C0794BAC((unint64_t *)&qword_1ED762B30, (uint64_t (*)(uint64_t))MEMORY[0x1E0CA9940], MEMORY[0x1E0CA9930]);
        sub_1C0789B08();
        sub_1C106F85C();
        __asm { BR              X10 }
      }
      sub_1C077C0B8();
      v80 = sub_1C0782A7C();
      v81 = sub_1C1070390();
      v82 = os_log_type_enabled(v80, v81);
      v83 = v112;
      if (v82)
      {
        v84 = (uint8_t *)sub_1C0775854();
        v121 = sub_1C0775854();
        *(_DWORD *)v84 = 136380675;
        sub_1C077C0B8();
        v85 = sub_1C0788DAC(v75, v76, &v121);
        sub_1C0780554(v85);
        sub_1C10705AC();
        sub_1C077CF6C();
        _os_log_impl(&dword_1C0771000, v80, v81, "Source: failed to encode identifier as UTF8 data: %{private}s", v84, 0xCu);
        sub_1C0778610();
        sub_1C0776778();
      }

      sub_1C07758A4();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v113 + 16))(v107, v117, v83);
      v86 = (void *)sub_1C106F538();
      v87 = sub_1C1070390();
      if (sub_1C07A57E4(v87))
      {
        v88 = (_DWORD *)sub_1C0775854();
        v121 = sub_1C0775854();
        *v88 = 136315138;
        v89 = v114(v83, v115);
        v91 = sub_1C0782D28(v89, v90);
        sub_1C0782EB8(v91);
        sub_1C10705AC();
        sub_1C077960C();
        sub_1C07827F4();
        sub_1C07A03BC(&dword_1C0771000, v92, v93, "Mapping error, failed to generate EntityIdentifier for %s");
        sub_1C0778610();
        sub_1C0776778();
      }
      sub_1C07827F4();

      return MEMORY[0x1E0DEE9D8];
    }
    sub_1C077960C();
  }
  else
  {
    sub_1C077960C();
    sub_1C0784B6C((uint64_t)&v121, &qword_1ED760400);
  }
  v61 = v112;
  if (qword_1ED761458 != -1)
    swift_once();
  v62 = sub_1C077585C();
  sub_1C079E000(v62, (uint64_t)qword_1ED78D818);
  v63 = v113;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v113 + 16))(v15, v117, v61);
  v64 = (void *)sub_1C106F538();
  v65 = sub_1C1070390();
  if (sub_1C07A57E4(v65))
  {
    v66 = (_DWORD *)sub_1C0775854();
    v121 = sub_1C0775854();
    *v66 = 136315138;
    v67 = sub_1C07B6530();
    v69 = sub_1C0782D28(v67, v68);
    sub_1C0780554(v69);
    sub_1C10705AC();
    sub_1C077960C();
    sub_1C07AFBC4(*(uint64_t (**)(uint64_t, uint64_t))(v113 + 8));
    sub_1C07A03BC(&dword_1C0771000, v70, v71, "Mapping error, missing submap for %s");
    sub_1C0778610();
    sub_1C0776778();
  }
  sub_1C07AFBC4(*(uint64_t (**)(uint64_t, uint64_t))(v63 + 8));

  sub_1C081F128();
  sub_1C0775810();
  sub_1C0782BFC(v72, 2);
  v73 = v116[1];
  v121 = *v116;
  v122 = v73;
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C106FC94();
  sub_1C07B6530();
  sub_1C106FC94();
  sub_1C07767AC();
  sub_1C0D57838();
  sub_1C07767AC();
  sub_1C07888BC();
  return MEMORY[0x1E0DEE9D8];
}

void sub_1C0D57838()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  unint64_t v8;
  void *v9;
  uint64_t inited;
  uint64_t v11;
  void *v12;
  uint64_t v13;

  if (qword_1ED761458 != -1)
    swift_once();
  v0 = sub_1C077585C();
  sub_1C079E000(v0, (uint64_t)qword_1ED78D818);
  sub_1C07767B4();
  sub_1C077B72C();
  sub_1C07767B4();
  sub_1C077B72C();
  v1 = sub_1C106F538();
  v2 = sub_1C1070390();
  if (os_log_type_enabled(v1, v2))
  {
    v3 = sub_1C0775854();
    v13 = sub_1C0775854();
    *(_DWORD *)v3 = 136380931;
    sub_1C07767B4();
    v4 = sub_1C078109C();
    sub_1C0788DAC(v4, v5, v6);
    sub_1C0D5DE30();
    sub_1C077CF6C();
    *(_WORD *)(v3 + 12) = 2080;
    sub_1C077B72C();
    sub_1C07ACF80(&qword_1ED7614F0);
    v7 = sub_1C106FB5C();
    sub_1C0788DAC(v7, v8, &v13);
    sub_1C0D5DE30();
    swift_bridgeObjectRelease();
    sub_1C07888BC();
    sub_1C07888BC();
    _os_log_impl(&dword_1C0771000, v1, v2, "Mapping error attempting to construct rows for %{private}s due to: %s", (uint8_t *)v3, 0x16u);
    swift_arrayDestroy();
    sub_1C0776778();
  }
  sub_1C07758A4();
  sub_1C07888BC();
  sub_1C07888BC();

  v9 = (void *)sub_1C106FAF0();
  sub_1C07ACF80((uint64_t *)&unk_1ED7614C0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C1078FC0;
  *(_QWORD *)(inited + 32) = 0x726F727265;
  *(_QWORD *)(inited + 40) = 0xE500000000000000;
  sub_1C077B72C();
  sub_1C07ACF80(&qword_1ED7614F0);
  sub_1C106FB5C();
  v11 = sub_1C106FAF0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(inited + 48) = v11;
  *(_QWORD *)(inited + 56) = 0x747865746E6F63;
  *(_QWORD *)(inited + 64) = 0xE700000000000000;
  sub_1C078109C();
  *(_QWORD *)(inited + 72) = sub_1C106FAF0();
  sub_1C07D4B70(0, (unint64_t *)&qword_1ED761490);
  sub_1C106F97C();
  v12 = (void *)sub_1C106F934();
  swift_bridgeObjectRelease();
  AnalyticsSendEvent();

}

uint64_t sub_1C0D57B30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  unint64_t v5;
  unint64_t *v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  BOOL v20;
  unint64_t v22;
  uint64_t v23;

  sub_1C07B1280();
  result = sub_1C10705D0();
  v5 = *(_QWORD *)(result + 16);
  if (v5 < 3)
  {
LABEL_47:
    swift_bridgeObjectRelease();
    return 0;
  }
  v23 = result;
  v6 = (unint64_t *)(result + 88);
  v7 = 3;
  v8 = 31868;
  v9 = 0xE200000000000000;
  v10 = *(_QWORD *)(result + 16);
  while ((uint64_t)(v7 - 2) < v10)
  {
    if ((uint64_t)(v7 - 1) >= v10)
      goto LABEL_51;
    v11 = *(v6 - 5);
    v12 = *(v6 - 4);
    v13 = *(v6 - 3);
    v14 = *(v6 - 2);
    v15 = v11 == 15649 && v12 == 0xE200000000000000;
    if (v15 || (result = sub_1C1070CB4(), (result & 1) != 0))
    {
      if (v8 != 31868 || v9 != 0xE200000000000000)
      {
        result = sub_1C1070CB4();
        if ((result & 1) == 0)
          goto LABEL_37;
      }
      if (v13 != a3 || v14 != a4)
      {
        result = sub_1C1070CB4();
        if ((result & 1) == 0)
          goto LABEL_49;
      }
    }
    else
    {
      if (v11 != 15677 || v12 != 0xE200000000000000)
      {
        result = sub_1C1070CB4();
        if ((result & 1) == 0)
          goto LABEL_42;
      }
      if (v8 != 31868 || v9 != 0xE200000000000000)
      {
        result = sub_1C1070CB4();
        if ((result & 1) == 0)
        {
LABEL_37:
          if (v8 != 9766 || v9 != 0xE200000000000000)
            result = sub_1C1070CB4();
          goto LABEL_42;
        }
      }
      v20 = v13 == a3 && v14 == a4;
      if (v20 || (result = sub_1C1070CB4(), (result & 1) != 0))
      {
LABEL_49:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return 1;
      }
    }
LABEL_42:
    if (v7 < v5)
    {
      result = swift_bridgeObjectRelease();
      v10 = *(_QWORD *)(v23 + 16);
      if (v7 >= v10)
        goto LABEL_52;
      v8 = *(v6 - 1);
      v9 = *v6;
      result = _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    }
    v22 = v7 + 3;
    v7 += 4;
    v6 += 8;
    if (v22 >= v5)
    {
      swift_bridgeObjectRelease();
      goto LABEL_47;
    }
  }
  __break(1u);
LABEL_51:
  __break(1u);
LABEL_52:
  __break(1u);
  return result;
}

void SourceEntityMappable.constructRows(entityIdentifier:source:sourceId:map:basicProperties:pipelineType:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, unsigned __int8 *a7)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t (*v41)(uint64_t);
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  __int128 *v64;
  __int128 v65;
  __int128 v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  NSObject *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  NSObject *v83;
  uint64_t v84;
  char v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t (*v91)(_QWORD);
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char v96;
  uint64_t v97;
  uint64_t v98;
  void (*v99)(uint64_t);
  _QWORD *v100;
  void (*v101)(uint64_t *, _QWORD);
  void (*v102)(uint64_t *, _QWORD);
  _QWORD *v103;
  char v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  unint64_t v117;
  __int128 v118;
  uint64_t v119;
  uint64_t v120;
  int64_t v121;
  unint64_t i;
  BOOL v123;
  int64_t v124;
  unint64_t v125;
  char v126;
  int64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t (*v135)(uint64_t, uint64_t, uint64_t);
  uint64_t v136;
  uint64_t (*v137)(uint64_t, uint64_t);
  uint64_t v138;
  uint64_t v139;
  uint64_t *v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  unint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t (*v150)(uint64_t, uint64_t, uint64_t);
  uint64_t v151;
  unint64_t v152;
  uint64_t v153;
  uint64_t v154;
  void (*v155)(uint64_t, uint64_t);
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  unint64_t v160;
  uint64_t v161;
  unint64_t v162;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t *v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t (*v174)(uint64_t, uint64_t, uint64_t);
  uint64_t v175;
  char v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  void (*v181)(uint64_t);
  uint64_t v182;
  uint64_t (*v183)(uint64_t);
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  NSObject *v187;
  os_log_type_t v188;
  uint64_t v189;
  uint64_t v190;
  unint64_t v191;
  uint64_t v192;
  unint64_t v193;
  uint64_t v194;
  uint64_t v195;
  void (*v196)(uint64_t);
  uint64_t v197;
  void (*v198)(uint64_t, uint64_t (*)(uint64_t));
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  int *v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t *v209;
  _QWORD *v210;
  unint64_t v211;
  unint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t (*v217)(uint64_t, _QWORD);
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  os_log_type_t v221;
  uint8_t *v222;
  _BYTE *v223;
  _BYTE *v224;
  uint64_t v225;
  uint64_t (*v226)(_QWORD);
  _QWORD v227[4];
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  int *v235;
  uint64_t v236;
  uint64_t *v237;
  int *v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  int v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t (*v249)(uint64_t);
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  void *v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t (*v257)(uint64_t);
  unint64_t v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  __int128 v263;
  char v264[8];
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  uint64_t v268;
  uint64_t v269;
  int64_t v270;
  uint64_t v271;
  uint64_t v272;
  uint64_t (*v273)(uint64_t);
  int64_t v274;
  uint64_t *v275;
  void (*v276)(uint64_t, uint64_t, uint64_t);
  uint64_t v277;
  uint64_t v278;
  uint64_t *v279;
  uint64_t v280;
  uint64_t v281;
  uint64_t v282;
  uint64_t v283;
  NSObject *v284;
  uint64_t v285;
  uint64_t v286;
  uint64_t v287;
  uint64_t v288;
  char v289[8];
  char v290;
  NSObject *v291;
  uint64_t v292;
  uint64_t v293;
  _QWORD v294[4];
  char v295;
  __int128 v296;
  __int128 v297;
  _OWORD v298[2];
  uint64_t v299;

  v8 = v7;
  v254 = a5;
  v249 = (uint64_t (*)(uint64_t))a4;
  v248 = a3;
  v247 = a2;
  v251 = a1;
  v11 = type metadata accessor for EntityTriple(0);
  sub_1C077B58C(v11, (uint64_t)v264);
  sub_1C0787718(v12);
  MEMORY[0x1E0C80A78](v13);
  sub_1C077AED0();
  sub_1C077AF60();
  MEMORY[0x1E0C80A78](v14);
  sub_1C0778674();
  sub_1C0787A68(v15);
  v16 = sub_1C106EB24();
  sub_1C077B58C(v16, (uint64_t)&v271);
  sub_1C0787718(v17);
  MEMORY[0x1E0C80A78](v18);
  sub_1C077AE40();
  v250 = sub_1C0D5DDD8(v19);
  sub_1C0787718(*(_QWORD *)(v250 - 8));
  MEMORY[0x1E0C80A78](v20);
  sub_1C077AED0();
  sub_1C077AF60();
  MEMORY[0x1E0C80A78](v21);
  sub_1C0778674();
  sub_1C0784DAC(v22);
  sub_1C07ACF80((uint64_t *)&unk_1ED75EA40);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v23);
  sub_1C077AF80();
  v26 = v24 - v25;
  MEMORY[0x1E0C80A78](v27);
  sub_1C0778674();
  v29 = sub_1C0D5DDE8(v28);
  sub_1C077B58C(v29, (uint64_t)&v297 + 8);
  sub_1C0787718(v30);
  MEMORY[0x1E0C80A78](v31);
  sub_1C077AED0();
  sub_1C077AF60();
  MEMORY[0x1E0C80A78](v32);
  sub_1C0779728();
  sub_1C077AF60();
  MEMORY[0x1E0C80A78](v33);
  sub_1C0779728();
  sub_1C077AF60();
  MEMORY[0x1E0C80A78](v34);
  sub_1C0778674();
  sub_1C0784DAC(v35);
  sub_1C07ACF80(&qword_1ED755A10);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v36);
  sub_1C077AED0();
  sub_1C077AF60();
  MEMORY[0x1E0C80A78](v37);
  sub_1C0779728();
  sub_1C077AF60();
  MEMORY[0x1E0C80A78](v38);
  sub_1C0778674();
  v40 = sub_1C077FEA8(v39);
  v41 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D3CC50];
  sub_1C0787718(*(_QWORD *)(v40 - 8));
  MEMORY[0x1E0C80A78](v42);
  sub_1C077AED0();
  sub_1C077AF60();
  MEMORY[0x1E0C80A78](v43);
  sub_1C0779728();
  sub_1C077AF60();
  MEMORY[0x1E0C80A78](v44);
  v46 = (unint64_t)v227 - v45;
  v282 = type metadata accessor for MapPredicate(0);
  sub_1C0787718(*(_QWORD *)(v282 - 8));
  MEMORY[0x1E0C80A78](v47);
  sub_1C077AED0();
  sub_1C077AF60();
  MEMORY[0x1E0C80A78](v48);
  sub_1C0779728();
  sub_1C077AF60();
  MEMORY[0x1E0C80A78](v49);
  sub_1C0778674();
  sub_1C0784DAC(v50);
  sub_1C07ACF80(&qword_1ED759F70);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v51);
  sub_1C077AE40();
  sub_1C0784DAC(v52);
  sub_1C07ACF80(&qword_1ED7618D0);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v53);
  sub_1C077AED0();
  sub_1C077AF60();
  MEMORY[0x1E0C80A78](v54);
  sub_1C0779728();
  sub_1C077AF60();
  MEMORY[0x1E0C80A78](v55);
  sub_1C0779728();
  sub_1C077AF60();
  MEMORY[0x1E0C80A78](v56);
  sub_1C0778674();
  sub_1C0784DAC(v57);
  v58 = sub_1C07ACF80(&qword_1EF630060);
  sub_1C077B58C(v58, (uint64_t)&v268);
  sub_1C0787718(v59);
  MEMORY[0x1E0C80A78](v60);
  sub_1C0784DAC((uint64_t)v227 - ((v61 + 15) & 0xFFFFFFFFFFFFFFF0));
  v246 = *a7;
  sub_1C07ACF80(&qword_1EF62FE38);
  sub_1C0794BAC(&qword_1ED75EA28, v41, MEMORY[0x1E0D3CC68]);
  v299 = sub_1C106F97C();
  v62 = *(_QWORD *)(a6 + 16);
  v245 = v26;
  v281 = v40;
  v253 = v62;
  if (v62)
  {
    v252 = a6 + 32;
    v227[0] = a6;
    sub_1C07767B4();
    v63 = 0;
    v258 = v46;
    do
    {
      v64 = (__int128 *)(v252 + (v63 << 6));
      *(_OWORD *)((char *)v298 + 9) = *(__int128 *)((char *)v64 + 41);
      v65 = v64[2];
      v297 = v64[1];
      v298[0] = v65;
      v296 = *v64;
      v66 = v296;
      v41 = (uint64_t (*)(uint64_t))*((_QWORD *)&v65 + 1);
      v67 = v65;
      v271 = *((_QWORD *)&v297 + 1);
      v261 = v297;
      v270 = *(_QWORD *)&v298[1];
      v290 = BYTE8(v298[1]);
      sub_1C0820388((uint64_t)&v296);
      sub_1C0820388((uint64_t)&v296);
      v272 = *((_QWORD *)&v66 + 1);
      v262 = v66;
      *(_QWORD *)&v263 = v67;
      sub_1C0D5572C(v254, v66, *((unint64_t *)&v66 + 1), v67, (uint64_t)v41);
      if (v8)
      {
        sub_1C0D25E9C();
        sub_1C0D25E9C();
        sub_1C078F230();
        goto LABEL_112;
      }
      v69 = v68;
      v269 = v63;
      sub_1C0D25E9C();
      if (*(_QWORD *)(v69 + 16))
      {
        v257 = v41;
        v260 = 0;
        v277 = v278 + v238[12];
        v276 = (void (*)(uint64_t, uint64_t, uint64_t))(v278 + v238[16]);
        v275 = (uint64_t *)(v278 + v238[20]);
        sub_1C078C9CC();
        v256 = v69;
        v72 = v69 + v71;
        v274 = *(_QWORD *)(v73 + 72);
        v287 = MEMORY[0x1E0DEE9D8];
        v74 = v237;
        v75 = v239;
        v76 = v280;
        v77 = (uint64_t)v279;
        do
        {
          v286 = v70;
          sub_1C0D5DE60();
          sub_1C078A8F8(v78, v46, &qword_1EF630060);
          v79 = v275[1];
          v285 = *v275;
          v284 = v79;
          sub_1C078A67C(v277, v77, &qword_1ED7618D0);
          sub_1C078A67C((uint64_t)v276, v76, &qword_1ED759F70);
          v80 = v282;
          sub_1C0D5DDA4();
          sub_1C0D5DE6C(v82, v46, *(uint64_t (**)(uint64_t, uint64_t, _QWORD))(v81 + 32));
          sub_1C078A8F8(v77, (uint64_t)v74 + *(int *)(v80 + 24), &qword_1ED7618D0);
          sub_1C078A8F8(v76, (uint64_t)v74 + *(int *)(v80 + 28), &qword_1ED759F70);
          v83 = v284;
          *v74 = v285;
          v74[1] = (uint64_t)v83;
          sub_1C07E05C8((uint64_t)v74, v75, type metadata accessor for MapPredicate);
          v84 = v287;
          v85 = sub_1C0778698();
          v86 = v84;
          if ((v85 & 1) == 0)
          {
            sub_1C07EB69C();
            v86 = v92;
          }
          v46 = *(_QWORD *)(v86 + 16);
          v76 = v280;
          v77 = (uint64_t)v279;
          if (v46 >= *(_QWORD *)(v86 + 24) >> 1)
          {
            sub_1C07EB69C();
            v86 = v93;
          }
          v287 = v86;
          *(_QWORD *)(v86 + 16) = v46 + 1;
          sub_1C078C9CC();
          sub_1C07E05F4(v75, v87 + v88 + *(_QWORD *)(v89 + 72) * v46, type metadata accessor for MapPredicate);
          v90 = sub_1C07812AC();
          sub_1C07B1F90(v90, v91);
          sub_1C0784B6C(v76, &qword_1ED759F70);
          sub_1C0784B6C(v77, &qword_1ED7618D0);
          v72 += v274;
          v70 = v286 - 1;
        }
        while (v286 != 1);
        sub_1C078F230();
        v8 = v260;
        v40 = v281;
        v46 = v258;
        v41 = v257;
        a6 = v287;
      }
      else
      {
        sub_1C07767AC();
        a6 = MEMORY[0x1E0DEE9D8];
      }
      sub_1C078F230();
      if (*(_QWORD *)(a6 + 16))
      {
        sub_1C0D5DDC0();
        v94 = a6;
        sub_1C0D5DDA4();
        (*(void (**)(unint64_t))(v95 + 16))(v46);
        if (!*(_QWORD *)(v299 + 16) || (sub_1C07DCC70(), (v96 & 1) == 0))
        {
          sub_1C078C35C((uint64_t)&v263);
          v97 = v299;
          swift_isUniquelyReferenced_nonNull_native();
          v288 = v97;
          sub_1C08A07C4();
          v299 = v288;
          swift_bridgeObjectRelease();
          sub_1C0D5DDA4();
          v98 = sub_1C077E7D0();
          v99(v98);
        }
        sub_1C078C35C((uint64_t)v289);
        sub_1C0D56950();
        v102 = v101;
        if (*v100)
        {
          v103 = v100;
          v104 = v290;
          sub_1C07E9E6C();
          v105 = v8;
          v106 = *(_QWORD *)(*v103 + 16);
          sub_1C07EA53C();
          v107 = *v103;
          *(_QWORD *)(v107 + 16) = v106 + 1;
          v108 = v107 + (v106 << 6);
          v8 = v105;
          v109 = v272;
          *(_QWORD *)(v108 + 32) = v262;
          *(_QWORD *)(v108 + 40) = v109;
          v110 = v271;
          *(_QWORD *)(v108 + 48) = v261;
          *(_QWORD *)(v108 + 56) = v110;
          *(_QWORD *)(v108 + 64) = v263;
          *(_QWORD *)(v108 + 72) = v41;
          *(_QWORD *)(v108 + 80) = v94;
          *(_BYTE *)(v108 + 88) = v104;
        }
        else
        {
          sub_1C0775834();
          sub_1C078F230();
          sub_1C078F230();
          sub_1C0778580();
        }
        v102(&v288, 0);
        v111 = v269;
        sub_1C0D5DDA4();
        a6 = *(_QWORD *)(v112 + 8);
        ((void (*)(uint64_t, uint64_t))a6)(v259, v40);
        v46 = v258;
        ((void (*)(unint64_t, uint64_t))a6)(v258, v40);
        sub_1C0D5DDF8();
      }
      else
      {
        sub_1C07767AC();
        sub_1C078F230();
        sub_1C078F230();
        sub_1C0778580();
        sub_1C0D5DDF8();
        v111 = v269;
      }
      v63 = v111 + 1;
    }
    while (v63 != v253);
    sub_1C078F230();
    v113 = v299;
  }
  else
  {
    sub_1C0D5DDF8();
  }
  v114 = *(_QWORD *)(v113 + 64);
  v269 = v113 + 64;
  v115 = 1 << *(_BYTE *)(v113 + 32);
  v116 = -1;
  if (v115 < 64)
    v116 = ~(-1 << v115);
  v117 = v116 & v114;
  v270 = (unint64_t)(v115 + 63) >> 6;
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  v287 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)&v118 = 136380931;
  v263 = v118;
  v262 = MEMORY[0x1E0DEE9B8] + 8;
  v119 = v267;
  sub_1C07824FC();
  v271 = v120;
  if (!v117)
    goto LABEL_29;
LABEL_28:
  v272 = (v117 - 1) & v117;
  v274 = v121;
  for (i = __clz(__rbit64(v117)) | (v121 << 6); ; i = __clz(__rbit64(v125)) + (v124 << 6))
  {
    v128 = *(_QWORD *)(*(_QWORD *)(v120 + 56) + 8 * i);
    sub_1C077B5DC(v255, 1);
    sub_1C07AEC44(v265, 1);
    v129 = *(_QWORD *)(v128 + 16);
    if (v129)
      break;
LABEL_99:
    sub_1C0B49130(v265);
    sub_1C077E3B4(v255);
    v120 = v271;
    v121 = v274;
    v117 = v272;
    if (v272)
      goto LABEL_28;
LABEL_29:
    v123 = __OFADD__(v121, 1);
    v124 = v121 + 1;
    if (v123)
    {
LABEL_120:
      __break(1u);
LABEL_121:
      swift_once();
      goto LABEL_106;
    }
    if (v124 >= v270)
    {
LABEL_114:
      swift_release();
      sub_1C077978C();
      goto LABEL_113;
    }
    v125 = *(_QWORD *)(v269 + 8 * v124);
    if (!v125)
    {
      sub_1C0779A54();
      if (v126 == v123)
        goto LABEL_114;
      sub_1C0780C64();
      if (!v125)
      {
        sub_1C0779A54();
        if (v126 == v123)
          goto LABEL_114;
        sub_1C0780C64();
        if (!v125)
        {
          sub_1C0779A54();
          if (v126 == v123)
            goto LABEL_114;
          sub_1C0780C64();
          if (!v125)
          {
            sub_1C0779A54();
            if (v126 == v123)
              goto LABEL_114;
            sub_1C0780C64();
            if (!v125)
            {
              while (1)
              {
                v124 = v127 + 1;
                if (__OFADD__(v127, 1))
                  break;
                if (v124 >= v270)
                  goto LABEL_114;
                v125 = *(_QWORD *)(v269 + 8 * v124);
                ++v127;
                if (v125)
                  goto LABEL_45;
              }
              __break(1u);
LABEL_123:
              sub_1C10709F0();
              __break(1u);
              return;
            }
          }
        }
      }
      v124 = v127;
    }
LABEL_45:
    v272 = (v125 - 1) & v125;
    v274 = v124;
  }
  sub_1C07767CC();
  v130 = 80;
  v277 = v129;
  v286 = v128;
  do
  {
    v131 = *(_QWORD *)(v128 + v130);
    if (v131 && *(_QWORD *)(v131 + 16))
    {
      sub_1C078A8F8(v131+ *(int *)(v282 + 24)+ ((*(unsigned __int8 *)(v283 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v283 + 80)), v40, &qword_1ED7618D0);
      sub_1C077AEEC(v40, 1, (uint64_t)v41);
      if (!v176)
      {
        v260 = v8;
        sub_1C077B5B4();
        v132 = v255;
        sub_1C077E3B4(v255);
        v133 = v236;
        v134 = sub_1C0D5DE48();
        sub_1C077C228(v134, v40, v135);
        sub_1C078940C();
        sub_1C077B5DC(v132, 0);
        sub_1C078940C();
        v136 = v227[1];
        sub_1C106EAD0();
        v137 = *(uint64_t (**)(uint64_t, uint64_t))(v133 + 8);
        v128 = v286;
        sub_1C0781D30((uint64_t)&qword_1ED755A10, v137);
        v138 = v265;
        sub_1C0B49130(v265);
        sub_1C07AEC44(v136, 0);
        sub_1C078A67C(v136, v138, &qword_1ED755A10);
        goto LABEL_55;
      }
    }
    else
    {
      sub_1C077B5DC(v40, 1);
    }
    sub_1C077E3B4(v40);
    v130 += 64;
    --v129;
  }
  while (v129);
  v260 = v8;
  sub_1C077B5B4();
LABEL_55:
  v139 = 0;
  v140 = (uint64_t *)(v128 + 80);
  LODWORD(v275) = 1;
  a6 = v277;
  while (1)
  {
    if (__OFADD__(v139, 1))
    {
      __break(1u);
LABEL_116:
      __break(1u);
LABEL_117:
      __break(1u);
LABEL_118:
      __break(1u);
LABEL_119:
      __break(1u);
      goto LABEL_120;
    }
    v141 = *v140;
    if (!*v140)
      break;
    if (*(_QWORD *)(v141 + 16))
    {
      v278 = v139 + 1;
      v280 = v139;
      v142 = *(v140 - 5);
      v284 = *(v140 - 6);
      v143 = *(v140 - 4);
      v285 = *(v140 - 3);
      v145 = *(v140 - 2);
      v144 = *(v140 - 1);
      v279 = v140;
      sub_1C0D5DDC0();
      sub_1C07E05C8(v141 + v146, v268, type metadata accessor for MapPredicate);
      v147 = v245;
      v148 = v266;
      v149 = v250;
      v276 = *(void (**)(uint64_t, uint64_t, uint64_t))(v119 + 16);
      v276(v266, v251, v250);
      sub_1C07B2D8C(v148, 0, 1, v149);
      sub_1C078A8F8(v148, v147, (uint64_t *)&unk_1ED75EA40);
      sub_1C077AEEC(v147, 1, v149);
      if (v176)
      {
        sub_1C07767B4();
        sub_1C077AEBC();
        sub_1C07796E0();
        sub_1C077C0B8();
        sub_1C0781B00(v147);
        sub_1C081F128();
        sub_1C0775810();
        sub_1C0782BFC(v224, 4);
        sub_1C0781B00(v266);
        v225 = sub_1C07A96C4();
        sub_1C07B1F90(v225, v226);
        sub_1C078F230();
        sub_1C077B5B4();
        sub_1C07767AC();
        swift_bridgeObjectRelease();
        sub_1C077E584();
        sub_1C0D25BB4(&qword_1ED755A10, (uint64_t)v294);
        sub_1C0D25BB4(&qword_1ED7618D0, (uint64_t)&v285);
        sub_1C078F230();
        goto LABEL_111;
      }
      v150 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v119 + 32);
      v151 = v142;
      v152 = v285;
      v153 = v244;
      sub_1C079D508(v244, v147, v150);
      v291 = v284;
      v292 = v151;
      v293 = v143;
      v294[0] = v152;
      v294[1] = v145;
      v294[2] = v144;
      v294[3] = v141;
      v295 = 0;
      sub_1C07767CC();
      sub_1C07767CC();
      sub_1C07767CC();
      sub_1C07767CC();
      v154 = sub_1C081F164(v153, v247, v248, (uint64_t)v249, v141, 0, v265, v143, v152, v145, v144, v246);
      sub_1C077B5B4();
      sub_1C07767AC();
      sub_1C077E584();
      sub_1C0775894();
      sub_1C077B5A8();
      v155(v153, v149);
      sub_1C0784B6C(v266, (uint64_t *)&unk_1ED75EA40);
      sub_1C077B5B4();
      sub_1C07767AC();
      sub_1C077E584();
      sub_1C0775894();
      a6 = *(_QWORD *)(v154 + 16);
      v156 = v287;
      v41 = *(uint64_t (**)(uint64_t))(v287 + 16);
      if (__OFADD__(v41, a6))
        goto LABEL_116;
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      if (!swift_isUniquelyReferenced_nonNull_native() || (uint64_t)v41 + a6 > *(_QWORD *)(v156 + 24) >> 1)
      {
        sub_1C07EACCC();
        sub_1C0D26400(v157);
      }
      v158 = v243;
      sub_1C0D5DDF8();
      v40 = v242;
      sub_1C07A03D0();
      if (*(_QWORD *)(v154 + 16))
      {
        v159 = *(_QWORD *)(v287 + 16);
        if ((*(_QWORD *)(v287 + 24) >> 1) - v159 < a6)
          goto LABEL_118;
        v160 = (*(unsigned __int8 *)(v234 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v234 + 80);
        v161 = *(_QWORD *)(v234 + 72);
        v162 = v287 + v160 + v161 * v159;
        if (v154 + v160 < v162 + v161 * a6 && v162 < v154 + v160 + v161 * a6)
          goto LABEL_123;
        swift_arrayInitWithCopy();
        if (a6)
        {
          v164 = *(_QWORD *)(v287 + 16);
          v123 = __OFADD__(v164, a6);
          v165 = v164 + a6;
          if (v123)
            goto LABEL_119;
          *(_QWORD *)(v287 + 16) = v165;
        }
      }
      else if (a6)
      {
        goto LABEL_117;
      }
      sub_1C077960C();
      sub_1C078A8F8(v255, v40, &qword_1ED7618D0);
      sub_1C077AEEC(v40, 1, (uint64_t)v41);
      if (v176)
      {
        v169 = sub_1C07A96C4();
        sub_1C07B1F90(v169, type metadata accessor for MapPredicate);
        sub_1C077960C();
        sub_1C0784B6C(v40, &qword_1ED7618D0);
        sub_1C07824FC();
      }
      else
      {
        v170 = v236;
        v171 = v240;
        v172 = sub_1C077E7D0();
        sub_1C077C228(v172, v173, v174);
        v40 = v233;
        sub_1C078A8F8(v265, v233, &qword_1ED755A10);
        v175 = v241;
        sub_1C077AEEC(v40, 1, v241);
        if (v176)
        {
          sub_1C077960C();
          sub_1C0781D30(v171, *(uint64_t (**)(uint64_t, uint64_t))(v170 + 8));
          v177 = sub_1C07A96C4();
          sub_1C07B1F90(v177, type metadata accessor for MapPredicate);
          sub_1C0B49130(v40);
        }
        else
        {
          v178 = v232;
          v179 = v231;
          v180 = sub_1C077E7D0();
          v181(v180);
          v182 = *(_QWORD *)(v154 + 16);
          sub_1C077960C();
          if (v182)
          {
            sub_1C07824FC();
            v119 = v267;
            a6 = v277;
            if ((v275 & 1) != 0)
            {
              v183 = v273;
              if (qword_1ED761458 != -1)
                swift_once();
              v184 = sub_1C077585C();
              sub_1C079E000(v184, (uint64_t)qword_1ED78D818);
              v40 = v250;
              sub_1C07BFFC4(v158, v251);
              v185 = v236;
              v186 = v228;
              sub_1C077C228(v228, v240, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v236 + 16));
              v187 = sub_1C106F538();
              v188 = sub_1C10703A8();
              if (os_log_type_enabled(v187, v188))
              {
                v189 = sub_1C0775854();
                v285 = sub_1C0775854();
                v288 = v285;
                *(_DWORD *)v189 = v263;
                sub_1C0794BAC((unint64_t *)&qword_1ED7625A0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3CE28], MEMORY[0x1E0D3CE60]);
                v284 = v187;
                v190 = sub_1C1070C0C();
                *(_QWORD *)(v189 + 4) = sub_1C0D5DE54(v190, v191);
                sub_1C077960C();
                sub_1C0D5DE3C();
                *(_WORD *)(v189 + 12) = 2080;
                v192 = sub_1C106D090();
                *(_QWORD *)(v189 + 14) = sub_1C0D5DE54(v192, v193);
                sub_1C077960C();
                (*(void (**)(uint64_t, uint64_t (*)(uint64_t)))(v185 + 8))(v186, v273);
                sub_1C0786E40(&dword_1C0771000, v284, v188, "StandardEntityMapper: constructRows relationship: %{private}s relPred isA %s");
                swift_arrayDestroy();
                sub_1C0776778();
              }
              sub_1C0D5DE3C();
              v198 = *(void (**)(uint64_t, uint64_t (*)(uint64_t)))(v185 + 8);
              v198(v186, v183);

              v199 = v232;
              v200 = v231;
              v201 = v229;
              sub_1C07BFFC4(v229, v251);
              v202 = v235;
              sub_1C0D5DDA4();
              sub_1C0D5DE6C(v204, v205, *(uint64_t (**)(uint64_t, uint64_t, _QWORD))(v203 + 16));
              (*(void (**)(uint64_t, uint64_t, uint64_t))(v199 + 16))(v201 + v202[6], v200, v241);
              sub_1C106E218();
              v206 = sub_1C106D090();
              v208 = v207;
              sub_1C07E05C8(v247, v201 + v202[9], (uint64_t (*)(_QWORD))type metadata accessor for Source);
              v209 = (uint64_t *)(v201 + v202[8]);
              *v209 = v206;
              v209[1] = v208;
              v210 = (_QWORD *)(v201 + v202[10]);
              v41 = v249;
              *v210 = v248;
              v210[1] = v41;
              *(_QWORD *)(v201 + v202[11]) = 0;
              *(_BYTE *)(v201 + v202[12]) = v246;
              sub_1C07E05C8(v201, v230, type metadata accessor for EntityTriple);
              v211 = *(_QWORD *)(v287 + 16);
              v212 = *(_QWORD *)(v287 + 24);
              _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
              if (v211 >= v212 >> 1)
              {
                sub_1C07EACCC();
                sub_1C0D26400(v219);
              }
              sub_1C0D5DDF8();
              sub_1C07824FC();
              sub_1C07A03D0();
              *(_QWORD *)(v287 + 16) = v211 + 1;
              sub_1C078C9CC();
              sub_1C07E05F4(v230, v214 + v213 + *(_QWORD *)(v215 + 72) * v211, type metadata accessor for EntityTriple);
              sub_1C07B1F90(v229, type metadata accessor for EntityTriple);
              v216 = sub_1C0D5DD8C();
              sub_1C077AE54(v216, v217);
              v198(v240, v41);
              v218 = sub_1C07A96C4();
              sub_1C07B1F90(v218, type metadata accessor for MapPredicate);
              LODWORD(v275) = 0;
LABEL_91:
              a6 = v277;
            }
            else
            {
              v195 = sub_1C0D5DD8C();
              v196(v195);
              v41 = v273;
              sub_1C0781D30(v240, *(uint64_t (**)(uint64_t, uint64_t))(v236 + 8));
              v197 = sub_1C07A96C4();
              sub_1C07B1F90(v197, type metadata accessor for MapPredicate);
              LODWORD(v275) = 0;
              sub_1C07A03D0();
            }
            v166 = v280;
            v167 = v279;
            v168 = v278;
            goto LABEL_93;
          }
          (*(void (**)(uint64_t, uint64_t))(v178 + 8))(v179, v175);
          v41 = v273;
          sub_1C0781D30(v240, *(uint64_t (**)(uint64_t, uint64_t))(v236 + 8));
          v194 = sub_1C07A96C4();
          sub_1C07B1F90(v194, type metadata accessor for MapPredicate);
        }
        sub_1C07824FC();
        sub_1C07A03D0();
      }
      v119 = v267;
      goto LABEL_91;
    }
    sub_1C07A03D0();
LABEL_93:
    v140 = v167 + 8;
    v139 = v166 + 1;
    if (v168 == a6)
    {
      sub_1C077B5B4();
      v8 = v260;
      goto LABEL_99;
    }
  }
  sub_1C078F230();
  sub_1C078F230();
  if (qword_1ED761458 != -1)
    goto LABEL_121;
LABEL_106:
  v220 = sub_1C077585C();
  sub_1C079E000(v220, (uint64_t)qword_1ED78D818);
  sub_1C106F538();
  v221 = sub_1C077CF00();
  if (os_log_type_enabled((os_log_t)a6, v221))
  {
    v222 = (uint8_t *)sub_1C0775854();
    *(_WORD *)v222 = 0;
    _os_log_impl(&dword_1C0771000, (os_log_t)a6, v221, "Mapping error, missing predicates", v222, 2u);
    sub_1C0776778();
  }

  sub_1C081F128();
  sub_1C0775810();
  sub_1C0782BFC(v223, 2);
  sub_1C0D25BB4(&qword_1ED755A10, (uint64_t)v294);
  sub_1C0D25BB4(&qword_1ED7618D0, (uint64_t)&v285);
LABEL_111:
  swift_release();
LABEL_112:
  sub_1C077978C();
LABEL_113:
  sub_1C07757D0();
}

void sub_1C0D59600(uint64_t a1, unint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, unsigned __int8 *a9, uint64_t a10, uint64_t a11)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  id v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  void *v58;
  uint64_t v59;
  id v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t (*v68)(uint64_t, uint64_t, uint64_t);
  os_log_type_t v69;
  uint8_t *v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;
  uint64_t v74;
  uint64_t v75;
  void (*v76)(uint64_t);
  _BYTE *v77;
  uint64_t v78;
  void *v79;
  void *v80;
  id v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  os_log_type_t v87;
  uint64_t v88;
  uint8_t *v89;
  uint64_t v90;
  unint64_t v91;
  uint64_t v92;
  uint64_t v93;
  void (*v94)(uint64_t);
  _BYTE *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  void *v99;
  uint64_t v100;
  char v101;
  NSObject *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  os_log_type_t v106;
  _BOOL4 v107;
  void *v108;
  uint8_t *v109;
  uint64_t v110;
  unint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t (*v117)(uint64_t, uint64_t, uint64_t);
  os_log_type_t v118;
  uint8_t *v119;
  uint64_t v120;
  unint64_t v121;
  _BYTE *v122;
  uint64_t v123;
  uint64_t v124;
  void (*v125)(uint64_t);
  uint64_t v126;
  unint64_t v127;
  NSObject *v128;
  os_log_type_t v129;
  int v130;
  BOOL v131;
  uint64_t v132;
  uint64_t v133;
  unint64_t v134;
  _BYTE *v135;
  __int128 v136;
  NSObject *v137;
  os_log_type_t v138;
  unint64_t v139;
  unint64_t v140;
  uint64_t (*v141)(uint64_t, _QWORD);
  os_log_type_t v142;
  uint8_t *v143;
  uint64_t v144;
  void *v145;
  uint64_t v146;
  uint64_t v147;
  NSObject *v148;
  uint64_t v149;
  os_log_type_t v150;
  uint8_t *v151;
  uint64_t v152;
  uint64_t v153;
  unint64_t v154;
  uint64_t v155;
  uint64_t v156;
  void (*v157)(uint64_t);
  uint64_t v158;
  uint64_t v159;
  void (*v160)(uint64_t, uint64_t);
  void *v161;
  _BYTE *v162;
  _BYTE v163[4];
  int v164;
  void (*v165)(uint64_t);
  void *v166;
  uint64_t v167;
  void *v168;
  uint64_t v169;
  void *v170;
  uint64_t v171;
  uint64_t v172;
  int v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  void (*v178)(uint64_t, uint64_t);
  NSObject *v179;
  uint64_t v180;
  uint64_t v181;
  unint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  void *v187;
  uint8_t *v188;
  uint64_t v189;
  uint64_t v190;
  void *v191;
  uint64_t v192;
  uint64_t v193;
  unint64_t v194;
  __int128 v195;
  __int128 v196;
  NSObject *v197;
  uint64_t v198;
  uint64_t v199;

  v174 = a8;
  v181 = a7;
  v175 = a6;
  v176 = a5;
  v171 = a4;
  v182 = a2;
  sub_1C0D26400(a1);
  v189 = a10;
  v190 = *(_QWORD *)(a10 - 8);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v12);
  sub_1C077AED0();
  v14 = v13;
  MEMORY[0x1E0C80A78](v15);
  v17 = &v163[-v16];
  MEMORY[0x1E0C80A78](v18);
  sub_1C0779728();
  v185 = v19;
  MEMORY[0x1E0C80A78](v20);
  sub_1C0779728();
  sub_1C077AF60();
  MEMORY[0x1E0C80A78](v21);
  sub_1C0778674();
  v23 = sub_1C0787A68(v22);
  v24 = type metadata accessor for EntityTriple(v23);
  sub_1C077B58C(v24, (uint64_t)&v195);
  sub_1C0787718(v25);
  MEMORY[0x1E0C80A78](v26);
  sub_1C077AE40();
  sub_1C0787A68(v27);
  v177 = sub_1C106F874();
  sub_1C0787718(*(_QWORD *)(v177 - 8));
  MEMORY[0x1E0C80A78](v28);
  sub_1C0787A68((uint64_t)&v163[-((v29 + 15) & 0xFFFFFFFFFFFFFFF0)]);
  v30 = sub_1C106F868();
  sub_1C077B58C(v30, (uint64_t)&v194);
  sub_1C0787718(v31);
  MEMORY[0x1E0C80A78](v32);
  sub_1C077AED0();
  sub_1C077AF60();
  MEMORY[0x1E0C80A78](v33);
  sub_1C0778674();
  sub_1C0787A68(v34);
  v35 = sub_1C106FB50();
  sub_1C077B58C(v35, (uint64_t)&v198);
  sub_1C0787718(v36);
  MEMORY[0x1E0C80A78](v37);
  v39 = sub_1C0D5DDD8((uint64_t)&v163[-((v38 + 15) & 0xFFFFFFFFFFFFFFF0)]);
  sub_1C077B58C(v39, (uint64_t)&v199);
  sub_1C0787718(v40);
  MEMORY[0x1E0C80A78](v41);
  sub_1C077AED0();
  sub_1C077AF60();
  MEMORY[0x1E0C80A78](v42);
  sub_1C0779728();
  sub_1C077AF60();
  MEMORY[0x1E0C80A78](v43);
  sub_1C0778674();
  v186 = v44;
  sub_1C07ACF80(&qword_1ED7618D0);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v45);
  sub_1C0778564();
  v48 = v47 - v46;
  v184 = sub_1C106D1F8();
  v49 = *(_QWORD *)(v184 - 8);
  MEMORY[0x1E0C80A78](v184);
  sub_1C077AED0();
  sub_1C077AF60();
  MEMORY[0x1E0C80A78](v50);
  MEMORY[0x1E0C80A78](v51);
  sub_1C0778674();
  v183 = v52;
  v173 = *a9;
  v197 = MEMORY[0x1E0DEE9D8];
  sub_1C07A2A88();
  v53 = sub_1C077C964();
  v187 = a3;
  v54 = objc_msgSend(a3, sel___swift_objectForKeyedSubscript_, v53);
  swift_unknownObjectRelease();
  if (v54)
  {
    sub_1C107063C();
    v55 = swift_unknownObjectRelease();
  }
  else
  {
    sub_1C0776B50();
  }
  sub_1C07824E4(v55, v56, &qword_1ED760400);
  if (!*((_QWORD *)&v196 + 1))
  {
    sub_1C0784F34(v57, &qword_1ED760400);
    goto LABEL_9;
  }
  sub_1C07D4B70(0, (unint64_t *)&qword_1EF647F18);
  if ((sub_1C077C458() & 1) == 0)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    v64 = v189;
    v63 = v190;
    if (qword_1ED761458 != -1)
      swift_once();
    v65 = sub_1C077585C();
    sub_1C079E000(v65, (uint64_t)qword_1ED78D818);
    v66 = sub_1C07AF8B8();
    sub_1C079D508(v66, v67, v68);
    sub_1C106F538();
    v69 = sub_1C077CF00();
    if (sub_1C07825D0(v69))
    {
      v70 = (uint8_t *)sub_1C0775854();
      v71 = sub_1C0775854();
      *(_QWORD *)&v195 = v71;
      *(_DWORD *)v70 = 136315138;
      v72 = sub_1C077EA50(v71, a11);
      v74 = sub_1C07892FC(v72, v73);
      sub_1C079DE40(v74);
      sub_1C077960C();
      v75 = sub_1C0D5DE10();
      v76(v75);
      sub_1C07796F0(&dword_1C0771000, v49, (os_log_type_t)v17, "Mapping error, nested entity missing metadata in map, %s", v70);
      sub_1C0778610();
      sub_1C0776778();
    }
    (*(void (**)(uint64_t, uint64_t))(v63 + 8))(v14, v64);

    sub_1C081F128();
    sub_1C0775810();
    sub_1C0782BFC(v77, 1);
    goto LABEL_40;
  }
  v169 = a11;
  v58 = v191;
  v193 = 0x79747265706F7270;
  v194 = 0xEB0000000070614DLL;
  v59 = sub_1C077C964();
  v170 = v58;
  v60 = objc_msgSend(v58, sel___swift_objectForKeyedSubscript_, v59);
  swift_unknownObjectRelease();
  if (v60)
  {
    sub_1C107063C();
    v61 = swift_unknownObjectRelease();
  }
  else
  {
    sub_1C0776B50();
  }
  sub_1C07824E4(v61, v62, &qword_1ED760400);
  v79 = v170;
  if (!*((_QWORD *)&v196 + 1))
  {
    sub_1C0784F34(v78, &qword_1ED760400);
    goto LABEL_20;
  }
  if ((sub_1C077C458() & 1) == 0)
  {
LABEL_20:
    sub_1C077978C();
    v84 = v189;
    v85 = v190;
    if (qword_1ED761458 != -1)
      swift_once();
    v86 = sub_1C077585C();
    sub_1C079E000(v86, (uint64_t)qword_1ED78D818);
    sub_1C077C228((uint64_t)v17, (uint64_t)v188, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v85 + 16));
    sub_1C106F538();
    v87 = sub_1C077CF00();
    if (os_log_type_enabled((os_log_t)v49, v87))
    {
      v88 = v84;
      v89 = (uint8_t *)sub_1C0775854();
      *(_QWORD *)&v195 = sub_1C0775854();
      *(_DWORD *)v89 = 136315138;
      v90 = (*(uint64_t (**)(uint64_t))(v169 + 32))(v88);
      v92 = sub_1C07892FC(v90, v91);
      sub_1C0789FD8(v92);
      sub_1C077960C();
      v93 = sub_1C077E7D0();
      v94(v93);
      sub_1C07796F0(&dword_1C0771000, v49, v87, "Mapping error missing property map for  %s", v89);
      sub_1C0778610();
      sub_1C0776778();
    }
    sub_1C0781D30((uint64_t)v17, *(uint64_t (**)(uint64_t, uint64_t))(v85 + 8));

    sub_1C081F128();
    sub_1C0775810();
    sub_1C0782BFC(v95, 1);

    goto LABEL_40;
  }
  v80 = v191;
  v193 = 1701869940;
  v194 = 0xE400000000000000;
  v81 = objc_msgSend(v79, sel___swift_objectForKeyedSubscript_, sub_1C077C964());
  swift_unknownObjectRelease();
  if (v81)
  {
    sub_1C107063C();
    v82 = swift_unknownObjectRelease();
  }
  else
  {
    sub_1C0776B50();
  }
  sub_1C07824E4(v82, v83, &qword_1ED760400);
  v97 = v190;
  if (*((_QWORD *)&v196 + 1))
  {
    if ((sub_1C077C458() & 1) != 0)
    {
      v168 = v80;
      v99 = v191;
      v98 = v192;
      sub_1C077AEBC();
      sub_1C106D084();
      v100 = v184;
      sub_1C077AEEC(v48, 1, v184);
      if (v101)
      {
        v102 = v197;
        sub_1C077B5B4();
        sub_1C07767AC();
        sub_1C0784B6C(v48, &qword_1ED7618D0);
        if (qword_1ED761458 != -1)
          swift_once();
        v103 = sub_1C077585C();
        sub_1C079E000(v103, (uint64_t)qword_1ED78D818);
        v104 = (uint64_t)v178;
        v105 = v189;
        sub_1C077C228((uint64_t)v178, (uint64_t)v188, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v97 + 16));
        sub_1C106F538();
        v106 = sub_1C077CF00();
        v107 = sub_1C07825D0(v106);
        v108 = v168;
        if (v107)
        {
          v109 = (uint8_t *)sub_1C0775854();
          *(_QWORD *)&v195 = sub_1C0775854();
          *(_DWORD *)v109 = 136315138;
          v188 = v109 + 4;
          v110 = (*(uint64_t (**)(uint64_t))(v169 + 32))(v105);
          v193 = sub_1C07892FC(v110, v111);
          sub_1C10705AC();
          swift_bridgeObjectRelease();
          (*(void (**)(uint64_t, uint64_t))(v190 + 8))(v104, v189);
          sub_1C07796F0(&dword_1C0771000, v102, (os_log_type_t)v98, "Mapping error type is not recognized as an EntityClass %s", v109);
          sub_1C0778610();
          sub_1C0776778();
        }
        sub_1C0781D30(v104, *(uint64_t (**)(uint64_t, uint64_t))(v97 + 8));

        sub_1C078B89C();
        sub_1C0775810();
        sub_1C0782BFC(v135, 1);

      }
      else
      {
        v166 = v99;
        v185 = v98;
        sub_1C079D508(v183, v48, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v49 + 32));
        if (qword_1ED761458 != -1)
          swift_once();
        v123 = sub_1C077585C();
        v124 = sub_1C079E000(v123, (uint64_t)qword_1ED78D818);
        v125 = *(void (**)(uint64_t))(v49 + 16);
        v126 = sub_1C07812AC();
        v125(v126);
        v127 = v182;
        sub_1C07767CC();
        v167 = v124;
        v128 = sub_1C106F538();
        v129 = sub_1C1070378();
        v130 = v129;
        v131 = os_log_type_enabled(v128, v129);
        v165 = v125;
        if (v131)
        {
          v132 = sub_1C0775854();
          v178 = (void (*)(uint64_t, uint64_t))sub_1C0775854();
          *(_QWORD *)&v195 = v178;
          *(_DWORD *)v132 = 136381187;
          v164 = v130;
          sub_1C077C0B8();
          v193 = sub_1C0788DAC(v180, v127, (uint64_t *)&v195);
          sub_1C10705AC();
          sub_1C077CF6C();
          *(_WORD *)(v132 + 12) = 2080;
          sub_1C0794BAC(&qword_1ED759F68, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3BB08], MEMORY[0x1E0D3BB40]);
          v133 = sub_1C1070C0C();
          v193 = sub_1C07892FC(v133, v134);
          sub_1C10705AC();
          sub_1C077960C();
          sub_1C0780894();
          *(_WORD *)(v132 + 22) = 1024;
          sub_1C07BA284();
          sub_1C10705AC();
          _os_log_impl(&dword_1C0771000, v128, (os_log_type_t)v164, "Source: generating identifier for: %{private}s : %s : %{BOOL}d", (uint8_t *)v132, 0x1Cu);
          swift_arrayDestroy();
          sub_1C0776778();
        }
        sub_1C07758A4();
        sub_1C0780894();

        *(_QWORD *)&v195 = v180;
        *((_QWORD *)&v195 + 1) = v127;
        sub_1C077C0B8();
        sub_1C106FC94();
        v136 = v195;
        v137 = v179;
        sub_1C106FB44();
        v138 = sub_1C106FB20();
        v140 = v139;
        sub_1C077B5A8();
        sub_1C077AE54((uint64_t)v137, v141);
        v178 = (void (*)(uint64_t, uint64_t))v100;
        if (v140 >> 60 != 15)
        {
          sub_1C0775834();
          sub_1C0794BAC((unint64_t *)&qword_1ED762B30, (uint64_t (*)(uint64_t))MEMORY[0x1E0CA9940], MEMORY[0x1E0CA9930]);
          sub_1C0D5DE60();
          sub_1C106F85C();
          __asm { BR              X10 }
        }
        sub_1C0778624();
        sub_1C07B69D0();
        v142 = sub_1C077CF00();
        if (sub_1C0775B94(v142))
        {
          v143 = (uint8_t *)sub_1C0775854();
          *(_QWORD *)&v195 = sub_1C0775854();
          *(_DWORD *)v143 = 136380675;
          sub_1C0778624();
          v144 = sub_1C0788DAC(v136, *((unint64_t *)&v136 + 1), (uint64_t *)&v195);
          sub_1C0789FD8(v144);
          sub_1C077CF6C();
          sub_1C07796F0(&dword_1C0771000, v137, v138, "Source: failed to encode identifier as UTF8 data: %{private}s", v143);
          sub_1C0778610();
          sub_1C0776778();
        }

        sub_1C07758A4();
        v145 = v168;
        v146 = (uint64_t)v188;
        v147 = v172;
        v148 = v197;
        sub_1C077E584();
        sub_1C07767AC();
        v149 = v190;
        sub_1C077C228(v147, v146, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v190 + 16));
        sub_1C106F538();
        v150 = sub_1C077CF00();
        if (sub_1C07825D0(v150))
        {
          v151 = (uint8_t *)sub_1C0775854();
          v152 = sub_1C0775854();
          *(_QWORD *)&v195 = v152;
          *(_DWORD *)v151 = 136315138;
          v153 = sub_1C077EA50(v152, v169);
          v155 = sub_1C07892FC(v153, v154);
          sub_1C079DE40(v155);
          sub_1C077960C();
          v156 = sub_1C0D5DE10();
          v157(v156);
          sub_1C07796F0(&dword_1C0771000, v148, (os_log_type_t)v140, "Mapping error failed to generate EntityIdentifier for %s", v151);
          sub_1C0778610();
          sub_1C0776778();
        }
        sub_1C0781D30(v147, *(uint64_t (**)(uint64_t, uint64_t))(v149 + 8));

        v159 = v183;
        v158 = v184;
        v160 = v178;
        v161 = v170;
        sub_1C081F128();
        sub_1C0775810();
        sub_1C0782BFC(v162, 5);

        v160(v159, v158);
      }
      goto LABEL_40;
    }
  }
  else
  {
    sub_1C0784F34(v96, &qword_1ED760400);
  }
  sub_1C077978C();
  v112 = v189;
  v113 = v185;
  if (qword_1ED761458 != -1)
    swift_once();
  v114 = sub_1C077585C();
  sub_1C079E000(v114, (uint64_t)qword_1ED78D818);
  v115 = sub_1C07AF8B8();
  sub_1C077C228(v115, v116, v117);
  sub_1C106F538();
  v118 = sub_1C077CF00();
  if (sub_1C07825D0(v118))
  {
    v119 = (uint8_t *)sub_1C0775854();
    v188 = (uint8_t *)sub_1C0775854();
    *(_QWORD *)&v195 = v188;
    *(_DWORD *)v119 = 136315138;
    v168 = v80;
    v120 = (*(uint64_t (**)(uint64_t))(v169 + 32))(v112);
    v193 = sub_1C07892FC(v120, v121);
    sub_1C10705AC();
    sub_1C077960C();
    sub_1C0781D30(v113, *(uint64_t (**)(uint64_t, uint64_t))(v190 + 8));
    sub_1C07796F0(&dword_1C0771000, v49, (os_log_type_t)v81, "Mapping error missing type for  %s", v119);
    sub_1C0778610();
    sub_1C0776778();
  }
  sub_1C0781D30(v113, *(uint64_t (**)(uint64_t, uint64_t))(v97 + 8));

  sub_1C081F128();
  sub_1C0775810();
  sub_1C0782BFC(v122, 1);

LABEL_40:
  sub_1C07757D0();
}

void sub_1C0D5AE88()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  unsigned __int8 *v10;
  int *v11;
  uint64_t v12;
  _BYTE v13[14];
  unsigned __int8 v14;
  unsigned __int8 v15;

  v1 = v0;
  v2 = type metadata accessor for Source();
  MEMORY[0x1E0C80A78](v2);
  v4 = &v13[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = sub_1C106D1F8();
  MEMORY[0x1E0C80A78](v5);
  v7 = &v13[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = type metadata accessor for Configuration();
  MEMORY[0x1E0C80A78](v8);
  v10 = &v13[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v11 = (int *)type metadata accessor for StandardEntityMapper();
  sub_1C07E05C8(v1 + v11[9], (uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for Configuration);
  _s24IntelligencePlatformCore5StagePAAE11entityClass0aB006EntityF0Vvg_0();
  sub_1C07E05C8(v1, (uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for Source);
  v12 = v11[7];
  v15 = *(_BYTE *)(v1 + v11[6]);
  v14 = *(_BYTE *)(v1 + v12);
  type metadata accessor for SourceEntityStore();
  swift_allocObject();
  sub_1C0D346DC(v10, (uint64_t)v7, (uint64_t)v4, &v15, &v14);
}

uint64_t sub_1C0D5AFF8(_QWORD *a1, uint64_t a2, void (*a3)(char *, char *, NSObject *), unsigned __int8 *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  NSObject *v22;
  Class isa;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t *v28;
  void *v29;
  _BYTE *v30;
  uint64_t v31;
  uint64_t result;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  _QWORD *v37;
  NSObject *v38;
  os_log_type_t v39;
  _BOOL4 v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  unint64_t v45;
  NSObject *v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  _QWORD *v62;
  uint64_t v63;
  unint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v68;
  BOOL v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  Class v73;
  char *v74;
  NSObject *v75;
  os_log_type_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  void (*v81)(char *, NSObject *);
  char *v82;
  uint64_t v83;
  unint64_t v84;
  void *v85;
  _BYTE *v86;
  uint64_t *v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  int *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  _QWORD *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t *v98;
  _QWORD *v99;
  uint64_t v100;
  unint64_t v101;
  uint64_t v102;
  _QWORD v103[2];
  void (*v104)(char *, uint64_t, uint64_t);
  uint64_t v105;
  void (*v106)(char *, uint64_t);
  char *v107;
  _QWORD *v108;
  char *v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  int *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  NSObject *v117;
  char *v118;
  Class v119;
  char *v120;
  uint64_t v121;
  void (*v122)(char *, char *, NSObject *);
  int v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  _QWORD *v129;

  v122 = a3;
  v7 = type metadata accessor for EntityTriple(0);
  v8 = *(_QWORD *)(v7 - 8);
  v113 = (int *)v7;
  v114 = v8;
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)v103 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1C07ACF80(&qword_1ED755A10);
  MEMORY[0x1E0C80A78](v11);
  v121 = (uint64_t)v103 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v111 = sub_1C106D1F8();
  v118 = *(char **)(v111 - 8);
  MEMORY[0x1E0C80A78](v111);
  v110 = (char *)v103 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)v103 - v15;
  v17 = sub_1C07ACF80((uint64_t *)&unk_1ED75EA40);
  MEMORY[0x1E0C80A78](v17);
  v120 = (char *)v103 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v19);
  v21 = (char *)v103 - v20;
  v22 = sub_1C106E590();
  isa = v22[-1].isa;
  MEMORY[0x1E0C80A78](v22);
  v109 = (char *)v103 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v25);
  v27 = (char *)v103 - v26;
  v123 = *a4;
  SourceEntityRepresentation.entityIdentifier(for:)(a2, (uint64_t)v21);
  v28 = &OBJC_IVAR____TtC24IntelligencePlatformCore26SourceEntityRepresentation_source;
  if (sub_1C07B2D80((uint64_t)v21, 1, (uint64_t)v22) == 1)
  {
    sub_1C0784B6C((uint64_t)v21, (uint64_t *)&unk_1ED75EA40);
    sub_1C081F128();
    v29 = (void *)swift_allocError();
    *v30 = 5;
    v31 = *(_QWORD *)((char *)a1 + OBJC_IVAR____TtC24IntelligencePlatformCore26SourceEntityRepresentation_source + 8);
    v125 = *(_QWORD *)((char *)a1 + OBJC_IVAR____TtC24IntelligencePlatformCore26SourceEntityRepresentation_source);
    v126 = v31;
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    sub_1C106FC94();
    sub_1C106D0FC();
    sub_1C106FC94();
    swift_bridgeObjectRelease();
    sub_1C0D57838();
    swift_bridgeObjectRelease();

    return MEMORY[0x1E0DEE9D8];
  }
  else
  {
    v107 = v10;
    v119 = isa;
    (*((void (**)(char *, char *, NSObject *))isa + 4))(v27, v21, v22);
    v129 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    if (qword_1ED761458 != -1)
      goto LABEL_38;
    while (1)
    {
      v33 = sub_1C106F544();
      v34 = sub_1C079E000(v33, (uint64_t)qword_1ED78D818);
      v35 = v118;
      v36 = v111;
      v104 = (void (*)(char *, uint64_t, uint64_t))*((_QWORD *)v118 + 2);
      v104(v16, a2, v111);
      v37 = a1;
      v105 = v34;
      v38 = sub_1C106F538();
      v39 = sub_1C1070384();
      v117 = v38;
      LODWORD(v116) = v39;
      v40 = os_log_type_enabled(v38, v39);
      v112 = a2;
      if (v40)
      {
        v41 = swift_slowAlloc();
        v115 = swift_slowAlloc();
        v125 = v115;
        *(_DWORD *)v41 = 136380931;
        v42 = *(_QWORD *)((char *)v37 + OBJC_IVAR____TtC24IntelligencePlatformCore26SourceEntityRepresentation_identifier);
        v43 = *(_QWORD *)((char *)v37
                        + OBJC_IVAR____TtC24IntelligencePlatformCore26SourceEntityRepresentation_identifier
                        + 8);
        _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
        v124 = sub_1C0788DAC(v42, v43, &v125);
        sub_1C10705AC();

        swift_bridgeObjectRelease();
        *(_WORD *)(v41 + 12) = 2080;
        v44 = sub_1C106D0FC();
        v124 = sub_1C0788DAC(v44, v45, &v125);
        v28 = &OBJC_IVAR____TtC24IntelligencePlatformCore26SourceEntityRepresentation_source;
        sub_1C10705AC();
        swift_bridgeObjectRelease();
        v106 = (void (*)(char *, uint64_t))*((_QWORD *)v35 + 1);
        v106(v16, v111);
        v46 = v117;
        _os_log_impl(&dword_1C0771000, v117, (os_log_type_t)v116, "SourceId: %{private}s,entityClass:%s", (uint8_t *)v41, 0x16u);
        v47 = v115;
        swift_arrayDestroy();
        MEMORY[0x1C3BA8270](v47, -1, -1);
        v48 = v41;
        v36 = v111;
        MEMORY[0x1C3BA8270](v48, -1, -1);

      }
      else
      {

        v106 = (void (*)(char *, uint64_t))*((_QWORD *)v35 + 1);
        v106(v16, v36);

      }
      v49 = v37;
      v50 = *(_QWORD *)((char *)v37
                      + OBJC_IVAR____TtC24IntelligencePlatformCore26SourceEntityRepresentation_sourceEntities);
      v51 = *(_QWORD *)(v50 + 16);
      v117 = v22;
      v118 = v27;
      v108 = v49;
      if (!v51)
        break;
      v52 = v50 + 32;
      v16 = (char *)v49 + *v28;
      v53 = (char *)v49 + OBJC_IVAR____TtC24IntelligencePlatformCore26SourceEntityRepresentation_identifier;
      v54 = *(_QWORD *)((char *)v49 + OBJC_IVAR____TtC24IntelligencePlatformCore26SourceEntityRepresentation_identifier);
      v115 = *((_QWORD *)v53 + 1);
      v116 = v54;
      v103[1] = v50;
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      while (1)
      {
        v55 = sub_1C07D6D1C(v52, (uint64_t)&v125);
        v28 = (uint64_t *)MEMORY[0x1C3BA79F4](v55);
        v56 = (uint64_t)v120;
        (*((void (**)(char *, char *, NSObject *))v119 + 2))(v120, v27, v22);
        sub_1C07B2D8C(v56, 0, 1, (uint64_t)v22);
        v57 = sub_1C106EB24();
        v58 = v121;
        sub_1C07B2D8C(v121, 1, 1, v57);
        LOBYTE(v124) = v123;
        v59 = v127;
        v60 = v128;
        sub_1C079D180((uint64_t)&v125, v127);
        v61 = (*(uint64_t (**)(uint64_t, char *, uint64_t, uint64_t, void (*)(char *, char *, NSObject *), uint64_t, uint64_t *, uint64_t, uint64_t))(v60 + 40))(v56, v16, v116, v115, v122, v58, &v124, v59, v60);
        sub_1C0784B6C(v58, &qword_1ED755A10);
        sub_1C0784B6C(v56, (uint64_t *)&unk_1ED75EA40);
        a2 = *(_QWORD *)(v61 + 16);
        a1 = v129;
        v22 = v129[2];
        v27 = (char *)v22 + a2;
        if (__OFADD__(v22, a2))
          break;
        if (!swift_isUniquelyReferenced_nonNull_native() || (uint64_t)v27 > a1[3] >> 1)
        {
          sub_1C07EACCC();
          a1 = v62;
        }
        v22 = v117;
        v27 = v118;
        if (*(_QWORD *)(v61 + 16))
        {
          v63 = a1[2];
          if ((a1[3] >> 1) - v63 < a2)
            goto LABEL_36;
          v64 = (*(unsigned __int8 *)(v114 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v114 + 80);
          v65 = *(_QWORD *)(v114 + 72);
          v66 = (char *)a1 + v64 + v65 * v63;
          if (v61 + v64 < (unint64_t)&v66[v65 * a2] && (unint64_t)v66 < v61 + v64 + v65 * a2)
          {
            result = sub_1C10709F0();
            __break(1u);
            return result;
          }
          swift_arrayInitWithCopy();
          if (a2)
          {
            v68 = a1[2];
            v69 = __OFADD__(v68, a2);
            v70 = v68 + a2;
            if (v69)
              goto LABEL_37;
            a1[2] = v70;
          }
        }
        else if (a2)
        {
          goto LABEL_35;
        }
        swift_bridgeObjectRelease();
        v129 = a1;
        objc_autoreleasePoolPop(v28);
        _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)&v125);
        v52 += 40;
        if (!--v51)
        {
          swift_bridgeObjectRelease();
          v28 = &OBJC_IVAR____TtC24IntelligencePlatformCore26SourceEntityRepresentation_source;
          v36 = v111;
          goto LABEL_27;
        }
      }
      __break(1u);
LABEL_35:
      __break(1u);
LABEL_36:
      __break(1u);
LABEL_37:
      __break(1u);
LABEL_38:
      swift_once();
    }
    a1 = v129;
LABEL_27:
    v71 = v112;
    v72 = v110;
    v73 = v119;
    if (a1[2])
    {
      v74 = v109;
      v122 = (void (*)(char *, char *, NSObject *))*((_QWORD *)v119 + 2);
      v122(v109, v27, v22);
      v104(v72, v71, v36);
      v75 = sub_1C106F538();
      v76 = sub_1C10703A8();
      if (os_log_type_enabled(v75, v76))
      {
        v77 = swift_slowAlloc();
        v78 = swift_slowAlloc();
        v125 = v78;
        *(_DWORD *)v77 = 136380931;
        sub_1C0794BAC((unint64_t *)&qword_1ED7625A0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3CE28], MEMORY[0x1E0D3CE60]);
        v79 = sub_1C1070C0C();
        v124 = sub_1C0788DAC(v79, v80, &v125);
        sub_1C10705AC();
        swift_bridgeObjectRelease();
        v81 = (void (*)(char *, NSObject *))*((_QWORD *)v73 + 1);
        v81(v74, v117);
        *(_WORD *)(v77 + 12) = 2080;
        v82 = v110;
        v83 = sub_1C106D090();
        v124 = sub_1C0788DAC(v83, v84, &v125);
        v22 = v117;
        sub_1C10705AC();
        swift_bridgeObjectRelease();
        v106(v82, v111);
        _os_log_impl(&dword_1C0771000, v75, v76, "StandardEntityMapper: rows: %{private}s isA %s", (uint8_t *)v77, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x1C3BA8270](v78, -1, -1);
        MEMORY[0x1C3BA8270](v77, -1, -1);
      }
      else
      {
        v81 = (void (*)(char *, NSObject *))*((_QWORD *)v73 + 1);
        v81(v74, v22);
        v106(v72, v36);
      }

      v89 = (uint64_t)v107;
      v90 = v118;
      v122(v107, v118, v22);
      v91 = v113;
      sub_1C106E218();
      sub_1C106EB0C();
      sub_1C106E26C();
      v92 = sub_1C106D090();
      v94 = v93;
      v95 = v108;
      sub_1C07E05C8((uint64_t)v108 + OBJC_IVAR____TtC24IntelligencePlatformCore26SourceEntityRepresentation_source, v89 + v91[9], (uint64_t (*)(_QWORD))type metadata accessor for Source);
      v97 = *(_QWORD *)((char *)v95 + OBJC_IVAR____TtC24IntelligencePlatformCore26SourceEntityRepresentation_identifier);
      v96 = *(_QWORD *)((char *)v95
                      + OBJC_IVAR____TtC24IntelligencePlatformCore26SourceEntityRepresentation_identifier
                      + 8);
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      sub_1C106AC6C();
      v98 = (uint64_t *)(v89 + v91[8]);
      *v98 = v92;
      v98[1] = v94;
      v99 = (_QWORD *)(v89 + v91[10]);
      *v99 = v97;
      v99[1] = v96;
      *(_QWORD *)(v89 + v91[11]) = v100;
      *(_BYTE *)(v89 + v91[12]) = v123;
      sub_1C07ACF80(&qword_1ED75D300);
      v101 = (*(unsigned __int8 *)(v114 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v114 + 80);
      v102 = swift_allocObject();
      *(_OWORD *)(v102 + 16) = xmmword_1C1079220;
      sub_1C07E05C8(v89, v102 + v101, type metadata accessor for EntityTriple);
      sub_1C0BD9D34();
      sub_1C07B1F90(v89, type metadata accessor for EntityTriple);
      v81(v90, v22);
    }
    else
    {
      sub_1C081F128();
      v85 = (void *)swift_allocError();
      *v86 = 3;
      v87 = (_QWORD *)((char *)v108 + *v28);
      v88 = v87[1];
      v125 = *v87;
      v126 = v88;
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      sub_1C106FC94();
      sub_1C106D0FC();
      sub_1C106FC94();
      swift_bridgeObjectRelease();
      sub_1C0D57838();
      swift_bridgeObjectRelease();
      (*((void (**)(char *, NSObject *))v73 + 1))(v27, v22);

    }
    return (uint64_t)v129;
  }
}

uint64_t sub_1C0D5BC34()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = v0;
  return swift_task_switch();
}

uint64_t sub_1C0D5BC4C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  void *v8;
  uint64_t v9;
  id v11[3];

  v1 = sub_1C0C2CB04();
  if (v1)
  {
    v2 = v1;
    v3 = *(_QWORD *)(v0 + 16);
    v4 = type metadata accessor for StandardEntityMapper();
    sub_1C078A314();
    LOBYTE(v11[0]) = *(_BYTE *)(v3 + *(int *)(v4 + 28));
    sub_1C0AADF0C(v11);
    sub_1C0D5AE88();
    v5 = *(_QWORD *)(v0 + 16);
    v6 = v5 + *(int *)(v4 + 32);
    v7 = *(id *)v6;
    v8 = *(void **)(v6 + 8);
    if (*(_QWORD *)v6 == 1)
    {
      SourceEntityStore.makeIterator(startTime:)(v11, 0.0);
      v5 = *(_QWORD *)(v0 + 16);
    }
    else
    {
      v11[0] = *(id *)v6;
      v11[1] = v8;
    }
    v9 = swift_task_alloc();
    *(_QWORD *)(v9 + 16) = v5;
    *(_QWORD *)(v9 + 24) = v2;
    sub_1C0D5DD34(v7);
    sub_1C0AB4248((uint64_t)v11, (uint64_t)sub_1C0D5DD68, v9);
    sub_1C07767AC();
    swift_task_dealloc();
    sub_1C106AC6C();
    sub_1C088B2D0();
    SourceEntityStore.clearAllData()();
    swift_release();

    sub_1C077960C();
  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1C0D5BDB0(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  void (*v6)(char *, char *, NSObject *);
  uint64_t v7;
  unsigned __int8 v9;

  v4 = type metadata accessor for StandardEntityMapper();
  v5 = a2 + *(int *)(v4 + 20);
  v6 = (void (*)(char *, char *, NSObject *))sub_1C106F934();
  v9 = *(_BYTE *)(a2 + *(int *)(v4 + 28));
  v7 = sub_1C0D5AFF8(a1, v5, v6, &v9);

  return v7;
}

id sub_1C0D5BE54@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;

  v3 = v2 + *(int *)(a1 + 32);
  v4 = *(void **)v3;
  v5 = *(_QWORD *)(v3 + 8);
  *a2 = *(_QWORD *)v3;
  a2[1] = v5;
  return sub_1C0D5DD34(v4);
}

void *sub_1C0D5BE68(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *result;

  v3 = *a1;
  v4 = a1[1];
  v5 = v2 + *(int *)(a2 + 32);
  result = sub_1C0D5DD04(*(void **)v5);
  *(_QWORD *)v5 = v3;
  *(_QWORD *)(v5 + 8) = v4;
  return result;
}

uint64_t (*sub_1C0D5BEA0())(_QWORD)
{
  return nullsub_1;
}

uint64_t sub_1C0D5BEB4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a1 + 20);
  v5 = sub_1C0776744();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, v4, v5);
}

void sub_1C0D5BEF0(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  sub_1C07E05C8(v2 + *(int *)(a1 + 36), a2, (uint64_t (*)(_QWORD))type metadata accessor for PhaseStores);
}

uint64_t sub_1C0D5BF18()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_1C0806670;
  return sub_1C0D5BC34();
}

void sub_1C0D5BF60(void (*a1)(void))
{
  uint64_t v1;
  uint64_t v3;
  uint64_t (*v4)(uint64_t);
  uint64_t v5;

  v3 = sub_1C078784C();
  v4 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D3CE28];
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  sub_1C07785B8();
  a1();
  sub_1C0794BAC((unint64_t *)&qword_1ED7625A0, v4, MEMORY[0x1E0D3CE60]);
  sub_1C1070C0C();
  sub_1C07943BC(v1, *(uint64_t (**)(uint64_t, uint64_t))(v5 + 8));
  sub_1C07785E4();
}

uint64_t sub_1C0D5C000(uint64_t a1)
{
  return *(_QWORD *)(a1 + 16);
}

void sub_1C0D5C008(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;

  v5 = *v2;
  *(_QWORD *)(v5 + 16) = a1 + 1;
  v6 = type metadata accessor for EntityTriple(0);
  sub_1C07E05F4(a2, v5+ ((*(unsigned __int8 *)(*(_QWORD *)(v6 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v6 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v6 - 8) + 72) * a1, type metadata accessor for EntityTriple);
  sub_1C077671C();
}

uint64_t (*sub_1C0D5C068(_QWORD *a1, uint64_t a2))()
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;

  v4 = malloc(0x68uLL);
  *a1 = v4;
  v5 = sub_1C106E41C();
  v4[8] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v4[9] = v6;
  v7 = malloc(*(_QWORD *)(v6 + 64));
  v4[10] = v7;
  swift_isUniquelyReferenced_nonNull_native();
  (*(void (**)(void *, uint64_t, uint64_t))(v6 + 16))(v7, a2, v5);
  v4[11] = sub_1C0D5C8D8(v4);
  v4[12] = sub_1C0D5C3CC(v4 + 4, (uint64_t)v7);
  return sub_1C0D5C128;
}

uint64_t (*sub_1C0D5C12C(_QWORD *a1, uint64_t a2))()
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;

  v4 = malloc(0x68uLL);
  *a1 = v4;
  v5 = sub_1C106E590();
  v4[8] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v4[9] = v6;
  v7 = malloc(*(_QWORD *)(v6 + 64));
  v4[10] = v7;
  swift_isUniquelyReferenced_nonNull_native();
  (*(void (**)(void *, uint64_t, uint64_t))(v6 + 16))(v7, a2, v5);
  v4[11] = sub_1C0D5C904(v4);
  v4[12] = sub_1C0D5C4E0(v4 + 4, (uint64_t)v7);
  return sub_1C0D5C128;
}

void sub_1C0D5C1EC(uint64_t a1)
{
  void *v1;
  void (*v2)(void *, _QWORD);
  void *v3;
  uint64_t v4;

  v1 = *(void **)a1;
  v2 = *(void (**)(void *, _QWORD))(*(_QWORD *)a1 + 88);
  v4 = *(_QWORD *)(*(_QWORD *)a1 + 72);
  v3 = *(void **)(*(_QWORD *)a1 + 80);
  sub_1C0775C54(*(_QWORD *)a1 + 32, *(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)a1 + 96));
  sub_1C07943BC((uint64_t)v3, *(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
  v2(v1, 0);
  free(v3);
  free(v1);
}

void (*sub_1C0D5C250(_QWORD *a1, uint64_t a2))(uint64_t a1)
{
  _QWORD *v4;

  v4 = malloc(0x58uLL);
  *a1 = v4;
  v4[8] = a2;
  swift_isUniquelyReferenced_nonNull_native();
  sub_1C08384CC(a2, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1C0826EB0);
  v4[9] = sub_1C0D5C904(v4);
  v4[10] = sub_1C0D5C630(v4 + 4, a2);
  return sub_1C0D5C2E0;
}

void sub_1C0D5C2E0(uint64_t a1)
{
  void *v1;
  uint64_t v2;

  sub_1C07AF060(a1);
  sub_1C08384CC(v2, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1C0826F50);
  sub_1C07BC358();
  sub_1C079C8BC(v1);
}

void (*sub_1C0D5C314(_QWORD *a1, uint64_t a2, uint64_t a3))(uint64_t a1)
{
  _QWORD *v6;

  v6 = malloc(0x58uLL);
  *a1 = v6;
  v6[8] = a3;
  swift_isUniquelyReferenced_nonNull_native();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  v6[9] = sub_1C0D5C904(v6);
  v6[10] = sub_1C0D5C788(v6 + 4, a2, a3);
  return sub_1C0D5C3A4;
}

void sub_1C0D5C3A4(uint64_t a1)
{
  void *v1;

  sub_1C07AF060(a1);
  sub_1C077960C();
  sub_1C07BC358();
  sub_1C079C8BC(v1);
}

void (*sub_1C0D5C3CC(_QWORD *a1, uint64_t a2))(_QWORD *a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  void (*result)(_QWORD *, uint64_t);

  v3 = v2;
  v6 = malloc(0x28uLL);
  *a1 = v6;
  v6[1] = a2;
  v6[2] = v3;
  v7 = *v3;
  sub_1C07DCC70();
  *((_BYTE *)v6 + 32) = v9 & 1;
  if (__OFADD__(*(_QWORD *)(v7 + 16), (v9 & 1) == 0))
  {
    __break(1u);
    goto LABEL_10;
  }
  v10 = v8;
  v11 = v9;
  sub_1C07ACF80(&qword_1EF633208);
  if ((sub_1C107090C() & 1) != 0)
  {
    sub_1C07DCC70();
    if ((v11 & 1) == (v13 & 1))
    {
      v10 = v12;
      goto LABEL_5;
    }
LABEL_10:
    sub_1C106E41C();
    result = (void (*)(_QWORD *, uint64_t))sub_1C1070D44();
    __break(1u);
    return result;
  }
LABEL_5:
  v6[3] = v10;
  if ((v11 & 1) != 0)
    v14 = *(_QWORD *)(*(_QWORD *)(*v3 + 56) + 8 * v10);
  else
    v14 = 0;
  *v6 = v14;
  return sub_1C0D5C4D4;
}

void sub_1C0D5C4D4(_QWORD *a1, uint64_t a2)
{
  sub_1C0D5C5F4(a1, a2, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1C0D5C924);
}

void (*sub_1C0D5C4E0(_QWORD *a1, uint64_t a2))(_QWORD *a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  void (*result)(_QWORD *, uint64_t);

  v3 = v2;
  v6 = malloc(0x28uLL);
  *a1 = v6;
  v6[1] = a2;
  v6[2] = v3;
  v7 = *v3;
  sub_1C07DCD84();
  *((_BYTE *)v6 + 32) = v9 & 1;
  if (__OFADD__(*(_QWORD *)(v7 + 16), (v9 & 1) == 0))
  {
    __break(1u);
    goto LABEL_10;
  }
  v10 = v8;
  v11 = v9;
  sub_1C07ACF80(&qword_1EF632CD8);
  if ((sub_1C107090C() & 1) != 0)
  {
    sub_1C07DCD84();
    if ((v11 & 1) == (v13 & 1))
    {
      v10 = v12;
      goto LABEL_5;
    }
LABEL_10:
    sub_1C106E590();
    result = (void (*)(_QWORD *, uint64_t))sub_1C1070D44();
    __break(1u);
    return result;
  }
LABEL_5:
  v6[3] = v10;
  if ((v11 & 1) != 0)
    v14 = *(_QWORD *)(*(_QWORD *)(*v3 + 56) + 8 * v10);
  else
    v14 = 0;
  *v6 = v14;
  return sub_1C0D5C5E8;
}

void sub_1C0D5C5E8(_QWORD *a1, uint64_t a2)
{
  sub_1C0D5C5F4(a1, a2, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1C0D5CA5C);
}

void sub_1C0D5C5F4(_QWORD *a1, uint64_t a2, void (*a3)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  void *v3;

  v3 = (void *)*a1;
  a3(*a1, *(unsigned __int8 *)(*a1 + 32), *(_QWORD *)(*a1 + 16), *(_QWORD *)(*a1 + 24), *(_QWORD *)(*a1 + 8));
  swift_bridgeObjectRelease();
  sub_1C07A4C08(v3);
}

void (*sub_1C0D5C630(_QWORD *a1, uint64_t a2))(uint64_t **a1)
{
  uint64_t *v2;
  uint64_t *v3;
  _QWORD *v6;
  uint64_t v7;
  unint64_t v8;
  char v9;
  unint64_t v10;
  char v11;
  unint64_t v12;
  char v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  void (*result)(uint64_t **);

  v3 = v2;
  v6 = malloc(0x38uLL);
  *a1 = v6;
  v6[3] = a2;
  v6[4] = v3;
  v7 = *v3;
  v8 = sub_1C07DCF70();
  *((_BYTE *)v6 + 48) = v9 & 1;
  if (__OFADD__(*(_QWORD *)(v7 + 16), (v9 & 1) == 0))
  {
    __break(1u);
    goto LABEL_10;
  }
  v10 = v8;
  v11 = v9;
  sub_1C07ACF80(&qword_1EF633190);
  if ((sub_1C107090C() & 1) != 0)
  {
    v12 = sub_1C07DCF70();
    if ((v11 & 1) == (v13 & 1))
    {
      v10 = v12;
      goto LABEL_5;
    }
LABEL_10:
    result = (void (*)(uint64_t **))sub_1C1070D44();
    __break(1u);
    return result;
  }
LABEL_5:
  v6[5] = v10;
  if ((v11 & 1) != 0)
  {
    v14 = *(_QWORD *)(*v3 + 56) + 24 * v10;
    v15 = *(_OWORD *)v14;
    v16 = *(_QWORD *)(v14 + 16);
  }
  else
  {
    v15 = 0uLL;
    v16 = 1;
  }
  *(_OWORD *)v6 = v15;
  v6[2] = v16;
  return sub_1C0D5C74C;
}

void sub_1C0D5C74C(uint64_t **a1)
{
  uint64_t *v1;

  v1 = *a1;
  sub_1C0D5CB94(*a1, *((_BYTE *)*a1 + 48), (_QWORD **)(*a1)[4], (*a1)[5], (*a1)[3]);
  sub_1C0945F6C(*v1, v1[1], v1[2]);
  sub_1C07A4C08(v1);
}

void (*sub_1C0D5C788(_QWORD *a1, uint64_t a2, uint64_t a3))(uint64_t **a1)
{
  uint64_t *v3;
  uint64_t *v4;
  _QWORD *v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  unint64_t v12;
  char v13;
  unint64_t v14;
  char v15;
  uint64_t v16;
  void (*result)(uint64_t **);

  v4 = v3;
  v8 = malloc(0x30uLL);
  *a1 = v8;
  v8[2] = a3;
  v8[3] = v4;
  v8[1] = a2;
  v9 = *v4;
  v10 = sub_1C077D774(a2, a3);
  *((_BYTE *)v8 + 40) = v11 & 1;
  if (__OFADD__(*(_QWORD *)(v9 + 16), (v11 & 1) == 0))
  {
    __break(1u);
    goto LABEL_10;
  }
  v12 = v10;
  v13 = v11;
  sub_1C07ACF80(&qword_1ED7601B0);
  if ((sub_1C107090C() & 1) != 0)
  {
    v14 = sub_1C077D774(a2, a3);
    if ((v13 & 1) == (v15 & 1))
    {
      v12 = v14;
      goto LABEL_5;
    }
LABEL_10:
    result = (void (*)(uint64_t **))sub_1C1070D44();
    __break(1u);
    return result;
  }
LABEL_5:
  v8[4] = v12;
  if ((v13 & 1) != 0)
    v16 = *(_QWORD *)(*(_QWORD *)(*v4 + 56) + 8 * v12);
  else
    v16 = 0;
  *v8 = v16;
  return sub_1C0D5C8A0;
}

void sub_1C0D5C8A0(uint64_t **a1)
{
  uint64_t *v1;

  v1 = *a1;
  sub_1C0D5CE30(*a1, *((_BYTE *)*a1 + 40), (_QWORD *)(*a1)[3], (*a1)[4], (*a1)[1], (*a1)[2]);
  swift_bridgeObjectRelease();
  sub_1C07A4C08(v1);
}

uint64_t (*sub_1C0D5C8D8(_QWORD *a1))(uint64_t result)
{
  _QWORD *v1;

  *a1 = *v1;
  a1[1] = v1;
  *v1 = 0x8000000000000000;
  return sub_1C0D5C8F8;
}

uint64_t sub_1C0D5C8F8(uint64_t result)
{
  **(_QWORD **)(result + 8) = *(_QWORD *)result;
  return result;
}

uint64_t (*sub_1C0D5C904(_QWORD *a1))(uint64_t result)
{
  _QWORD *v1;

  *a1 = *v1;
  a1[1] = v1;
  *v1 = 0x8000000000000000;
  return sub_1C0D5DD70;
}

uint64_t sub_1C0D5C924(uint64_t *a1, char a2, uint64_t *a3, unint64_t a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  double v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;

  v10 = sub_1C106E41C();
  v12 = MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *a1;
  if (v15)
  {
    v16 = *a3;
    if ((a2 & 1) != 0)
    {
      *(_QWORD *)(*(_QWORD *)(v16 + 56) + 8 * a4) = v15;
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, double))(v11 + 16))(v14, a5, v10, v12);
      sub_1C07DFAC4(a4, (uint64_t)v14, v15, v16);
    }
  }
  else if ((a2 & 1) != 0)
  {
    swift_arrayDestroy();
    sub_1C07ACF80(&qword_1EF62FE38);
    sub_1C0794BAC(&qword_1ED75EA28, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3CC50], MEMORY[0x1E0D3CC68]);
    sub_1C1070924();
  }
  return _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
}

uint64_t sub_1C0D5CA5C(uint64_t *a1, char a2, uint64_t *a3, unint64_t a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  double v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;

  v10 = sub_1C106E590();
  v12 = MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *a1;
  if (v15)
  {
    v16 = *a3;
    if ((a2 & 1) != 0)
    {
      *(_QWORD *)(*(_QWORD *)(v16 + 56) + 8 * a4) = v15;
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, double))(v11 + 16))(v14, a5, v10, v12);
      sub_1C07DFC6C(a4, (uint64_t)v14, v15, v16);
    }
  }
  else if ((a2 & 1) != 0)
  {
    swift_arrayDestroy();
    sub_1C07ACF80(&qword_1ED75D8E8);
    sub_1C0794BAC((unint64_t *)&qword_1ED7618F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3CE28], MEMORY[0x1E0D3CE40]);
    sub_1C1070924();
  }
  return _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
}

uint64_t sub_1C0D5CB94(uint64_t *a1, char a2, _QWORD **a3, unint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t *v9;

  v5 = *a1;
  v6 = a1[1];
  v7 = a1[2];
  if (v7 == 1)
  {
    if ((a2 & 1) != 0)
    {
      swift_arrayDestroy();
      sub_1C07ACF80(&qword_1EF6488A8);
      sub_1C08A5AD0();
      sub_1C1070924();
    }
  }
  else
  {
    v8 = *a3;
    if ((a2 & 1) != 0)
    {
      v9 = (uint64_t *)(v8[7] + 24 * a4);
      *v9 = v5;
      v9[1] = v6;
      v9[2] = v7;
    }
    else
    {
      sub_1C07DFEBC(a4, a5, v5, v6, v7, v8);
      sub_1C08384CC(a5, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1C0826EB0);
    }
  }
  return sub_1C0C94DC0(v5, v6, v7);
}

void sub_1C0D5CC90(uint64_t a1, char a2, uint64_t *a3, unint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v23 = a5;
  v24 = a6;
  sub_1C07ACF80(&qword_1ED753958);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v10);
  sub_1C0778564();
  v13 = v12 - v11;
  v14 = sub_1C106E734();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  sub_1C077AF80();
  v18 = v16 - v17;
  MEMORY[0x1E0C80A78](v19);
  v21 = (char *)&v23 - v20;
  sub_1C078A8F8(a1, v13, &qword_1ED753958);
  if (sub_1C07B2D80(v13, 1, v14) == 1)
  {
    sub_1C0784B6C(v13, &qword_1ED753958);
    if ((a2 & 1) != 0)
    {
      swift_arrayDestroy();
      sub_1C1070924();
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v15 + 32))(v21, v13, v14);
    v22 = *a3;
    if ((a2 & 1) != 0)
    {
      sub_1C0789C28(*(_QWORD *)(v22 + 56) + *(_QWORD *)(v15 + 72) * a4);
    }
    else
    {
      sub_1C0789C28(v18);
      sub_1C07E00C8(a4, v23, v24, v18, v22);
      sub_1C07767B4();
    }
  }
}

uint64_t sub_1C0D5CE30(uint64_t *a1, char a2, _QWORD *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;

  v6 = *a1;
  if (*a1)
  {
    if ((a2 & 1) != 0)
    {
      *(_QWORD *)(*(_QWORD *)(*a3 + 56) + 8 * a4) = v6;
    }
    else
    {
      sub_1C077CA74(a4, a5, a6, v6, *a3);
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    }
  }
  else if ((a2 & 1) != 0)
  {
    swift_arrayDestroy();
    sub_1C07ACF80(&qword_1ED762B80);
    sub_1C1070924();
  }
  return _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
}

_QWORD *sub_1C0D5CEF0(_QWORD *a1, _QWORD *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  void (*v13)(char *, char *, uint64_t);
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  int *v27;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v19 = *a2;
    *a1 = *a2;
    v4 = (_QWORD *)(v19 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    a1[2] = a2[2];
    v8 = type metadata accessor for Source();
    v9 = *(int *)(v8 + 24);
    v10 = (char *)v4 + v9;
    v11 = (char *)a2 + v9;
    v12 = sub_1C106D1F8();
    v13 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    v13(v10, v11, v12);
    *((_BYTE *)v4 + *(int *)(v8 + 28)) = *((_BYTE *)a2 + *(int *)(v8 + 28));
    v13((char *)v4 + a3[5], (char *)a2 + a3[5], v12);
    v14 = a3[7];
    *((_BYTE *)v4 + a3[6]) = *((_BYTE *)a2 + a3[6]);
    *((_BYTE *)v4 + v14) = *((_BYTE *)a2 + v14);
    v15 = a3[8];
    v16 = (char *)v4 + v15;
    v17 = (char *)a2 + v15;
    v18 = *(void **)((char *)a2 + v15);
    if (v18 == (void *)1)
    {
      *(_OWORD *)v16 = *(_OWORD *)v17;
    }
    else
    {
      v20 = *((_QWORD *)v17 + 1);
      *(_QWORD *)v16 = v18;
      *((_QWORD *)v16 + 1) = v20;
      v21 = v18;
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    }
    v22 = a3[9];
    v23 = (char *)v4 + v22;
    v24 = (char *)a2 + v22;
    v25 = sub_1C106AB28();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 16))(v23, v24, v25);
    v26 = type metadata accessor for Configuration();
    *(_OWORD *)&v23[*(int *)(v26 + 20)] = *(_OWORD *)&v24[*(int *)(v26 + 20)];
    v27 = (int *)type metadata accessor for PhaseStores();
    *(_QWORD *)&v23[v27[5]] = *(_QWORD *)&v24[v27[5]];
    *(_QWORD *)&v23[v27[6]] = *(_QWORD *)&v24[v27[6]];
    *(_QWORD *)&v23[v27[7]] = *(_QWORD *)&v24[v27[7]];
    *(_QWORD *)&v23[v27[8]] = *(_QWORD *)&v24[v27[8]];
    *(_QWORD *)&v23[v27[9]] = *(_QWORD *)&v24[v27[9]];
    *(_QWORD *)&v23[v27[10]] = *(_QWORD *)&v24[v27[10]];
    *(_QWORD *)&v23[v27[11]] = *(_QWORD *)&v24[v27[11]];
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
  }
  swift_retain();
  return v4;
}

uint64_t sub_1C0D5D0F4(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t);
  id *v7;
  uint64_t v8;
  uint64_t v9;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(type metadata accessor for Source() + 24);
  v5 = sub_1C106D1F8();
  v6 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8);
  v6(v4, v5);
  v6(a1 + a2[5], v5);
  v7 = (id *)(a1 + a2[8]);
  if (*v7 != (id)1)
  {

    swift_bridgeObjectRelease();
  }
  v8 = a1 + a2[9];
  v9 = sub_1C106AB28();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
  type metadata accessor for PhaseStores();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

_QWORD *sub_1C0D5D20C(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  void *v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  int *v25;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  a1[2] = a2[2];
  v7 = type metadata accessor for Source();
  v8 = *(int *)(v7 + 24);
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = sub_1C106D1F8();
  v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  v12(v9, v10, v11);
  *((_BYTE *)a1 + *(int *)(v7 + 28)) = *((_BYTE *)a2 + *(int *)(v7 + 28));
  v12((char *)a1 + a3[5], (char *)a2 + a3[5], v11);
  v13 = a3[7];
  *((_BYTE *)a1 + a3[6]) = *((_BYTE *)a2 + a3[6]);
  *((_BYTE *)a1 + v13) = *((_BYTE *)a2 + v13);
  v14 = a3[8];
  v15 = (char *)a1 + v14;
  v16 = (char *)a2 + v14;
  v17 = *(void **)((char *)a2 + v14);
  if (v17 == (void *)1)
  {
    *(_OWORD *)v15 = *(_OWORD *)v16;
  }
  else
  {
    v18 = *((_QWORD *)v16 + 1);
    *(_QWORD *)v15 = v17;
    *((_QWORD *)v15 + 1) = v18;
    v19 = v17;
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  }
  v20 = a3[9];
  v21 = (char *)a1 + v20;
  v22 = (char *)a2 + v20;
  v23 = sub_1C106AB28();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v21, v22, v23);
  v24 = type metadata accessor for Configuration();
  *(_OWORD *)&v21[*(int *)(v24 + 20)] = *(_OWORD *)&v22[*(int *)(v24 + 20)];
  v25 = (int *)type metadata accessor for PhaseStores();
  *(_QWORD *)&v21[v25[5]] = *(_QWORD *)&v22[v25[5]];
  *(_QWORD *)&v21[v25[6]] = *(_QWORD *)&v22[v25[6]];
  *(_QWORD *)&v21[v25[7]] = *(_QWORD *)&v22[v25[7]];
  *(_QWORD *)&v21[v25[8]] = *(_QWORD *)&v22[v25[8]];
  *(_QWORD *)&v21[v25[9]] = *(_QWORD *)&v22[v25[9]];
  *(_QWORD *)&v21[v25[10]] = *(_QWORD *)&v22[v25[10]];
  *(_QWORD *)&v21[v25[11]] = *(_QWORD *)&v22[v25[11]];
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

_QWORD *sub_1C0D5D3E8(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  char *v13;
  char *v14;
  void *v15;
  void *v16;
  id v17;
  id v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  int *v26;

  *a1 = *a2;
  a1[1] = a2[1];
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  v6 = type metadata accessor for Source();
  v7 = *(int *)(v6 + 24);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_1C106D1F8();
  v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 24);
  v11(v8, v9, v10);
  *((_BYTE *)a1 + *(int *)(v6 + 28)) = *((_BYTE *)a2 + *(int *)(v6 + 28));
  v11((char *)a1 + a3[5], (char *)a2 + a3[5], v10);
  *((_BYTE *)a1 + a3[6]) = *((_BYTE *)a2 + a3[6]);
  *((_BYTE *)a1 + a3[7]) = *((_BYTE *)a2 + a3[7]);
  v12 = a3[8];
  v13 = (char *)a1 + v12;
  v14 = (char *)a2 + v12;
  v15 = *(void **)((char *)a1 + v12);
  v16 = *(void **)((char *)a2 + v12);
  if (v15 != (void *)1)
  {
    if (v16 != (void *)1)
    {
      *(_QWORD *)v13 = v16;
      v18 = v16;

      *((_QWORD *)v13 + 1) = *((_QWORD *)v14 + 1);
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      swift_bridgeObjectRelease();
      goto LABEL_8;
    }
    sub_1C0D5D664((id *)v13);
    goto LABEL_6;
  }
  if (v16 == (void *)1)
  {
LABEL_6:
    *(_OWORD *)v13 = *(_OWORD *)v14;
    goto LABEL_8;
  }
  *(_QWORD *)v13 = v16;
  *((_QWORD *)v13 + 1) = *((_QWORD *)v14 + 1);
  v17 = v16;
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
LABEL_8:
  v19 = a3[9];
  v20 = (char *)a1 + v19;
  v21 = (char *)a2 + v19;
  v22 = sub_1C106AB28();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 24))(v20, v21, v22);
  v23 = *(int *)(type metadata accessor for Configuration() + 20);
  v24 = &v20[v23];
  v25 = &v21[v23];
  *(_QWORD *)v24 = *(_QWORD *)v25;
  *((_QWORD *)v24 + 1) = *((_QWORD *)v25 + 1);
  v26 = (int *)type metadata accessor for PhaseStores();
  *(_QWORD *)&v20[v26[5]] = *(_QWORD *)&v21[v26[5]];
  swift_retain();
  swift_release();
  *(_QWORD *)&v20[v26[6]] = *(_QWORD *)&v21[v26[6]];
  swift_retain();
  swift_release();
  *(_QWORD *)&v20[v26[7]] = *(_QWORD *)&v21[v26[7]];
  swift_retain();
  swift_release();
  *(_QWORD *)&v20[v26[8]] = *(_QWORD *)&v21[v26[8]];
  swift_retain();
  swift_release();
  *(_QWORD *)&v20[v26[9]] = *(_QWORD *)&v21[v26[9]];
  swift_retain();
  swift_release();
  *(_QWORD *)&v20[v26[10]] = *(_QWORD *)&v21[v26[10]];
  swift_retain();
  swift_release();
  *(_QWORD *)&v20[v26[11]] = *(_QWORD *)&v21[v26[11]];
  swift_retain();
  swift_release();
  return a1;
}

id *sub_1C0D5D664(id *a1)
{
  destroy for SourceEntityStore.Iterator(a1);
  return a1;
}

uint64_t sub_1C0D5D698(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int *v18;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v6 = type metadata accessor for Source();
  v7 = *(int *)(v6 + 24);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1C106D1F8();
  v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32);
  v11(v8, v9, v10);
  *(_BYTE *)(a1 + *(int *)(v6 + 28)) = *(_BYTE *)(a2 + *(int *)(v6 + 28));
  v11(a1 + a3[5], a2 + a3[5], v10);
  v12 = a3[7];
  *(_BYTE *)(a1 + a3[6]) = *(_BYTE *)(a2 + a3[6]);
  *(_BYTE *)(a1 + v12) = *(_BYTE *)(a2 + v12);
  v13 = a3[9];
  *(_OWORD *)(a1 + a3[8]) = *(_OWORD *)(a2 + a3[8]);
  v14 = a1 + v13;
  v15 = a2 + v13;
  v16 = sub_1C106AB28();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v14, v15, v16);
  v17 = type metadata accessor for Configuration();
  *(_OWORD *)(v14 + *(int *)(v17 + 20)) = *(_OWORD *)(v15 + *(int *)(v17 + 20));
  v18 = (int *)type metadata accessor for PhaseStores();
  *(_QWORD *)(v14 + v18[5]) = *(_QWORD *)(v15 + v18[5]);
  *(_QWORD *)(v14 + v18[6]) = *(_QWORD *)(v15 + v18[6]);
  *(_QWORD *)(v14 + v18[7]) = *(_QWORD *)(v15 + v18[7]);
  *(_QWORD *)(v14 + v18[8]) = *(_QWORD *)(v15 + v18[8]);
  *(_QWORD *)(v14 + v18[9]) = *(_QWORD *)(v15 + v18[9]);
  *(_QWORD *)(v14 + v18[10]) = *(_QWORD *)(v15 + v18[10]);
  *(_QWORD *)(v14 + v18[11]) = *(_QWORD *)(v15 + v18[11]);
  return a1;
}

_QWORD *sub_1C0D5D7FC(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  uint64_t v14;
  char *v15;
  _QWORD *v16;
  void *v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  int *v23;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  v7 = type metadata accessor for Source();
  v8 = *(int *)(v7 + 24);
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = sub_1C106D1F8();
  v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 40);
  v12(v9, v10, v11);
  *((_BYTE *)a1 + *(int *)(v7 + 28)) = *((_BYTE *)a2 + *(int *)(v7 + 28));
  v12((char *)a1 + a3[5], (char *)a2 + a3[5], v11);
  v13 = a3[7];
  *((_BYTE *)a1 + a3[6]) = *((_BYTE *)a2 + a3[6]);
  *((_BYTE *)a1 + v13) = *((_BYTE *)a2 + v13);
  v14 = a3[8];
  v15 = (char *)a1 + v14;
  v16 = (_QWORD *)((char *)a2 + v14);
  v17 = *(void **)((char *)a1 + v14);
  if (v17 != (void *)1)
  {
    if (*v16 != 1)
    {
      *(_QWORD *)v15 = *v16;

      *((_QWORD *)v15 + 1) = v16[1];
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    sub_1C0D5D664((id *)v15);
  }
  *(_OWORD *)v15 = *(_OWORD *)v16;
LABEL_6:
  v18 = a3[9];
  v19 = (char *)a1 + v18;
  v20 = (char *)a2 + v18;
  v21 = sub_1C106AB28();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 40))(v19, v20, v21);
  v22 = type metadata accessor for Configuration();
  *(_OWORD *)&v19[*(int *)(v22 + 20)] = *(_OWORD *)&v20[*(int *)(v22 + 20)];
  v23 = (int *)type metadata accessor for PhaseStores();
  *(_QWORD *)&v19[v23[5]] = *(_QWORD *)&v20[v23[5]];
  swift_release();
  *(_QWORD *)&v19[v23[6]] = *(_QWORD *)&v20[v23[6]];
  swift_release();
  *(_QWORD *)&v19[v23[7]] = *(_QWORD *)&v20[v23[7]];
  swift_release();
  *(_QWORD *)&v19[v23[8]] = *(_QWORD *)&v20[v23[8]];
  swift_release();
  *(_QWORD *)&v19[v23[9]] = *(_QWORD *)&v20[v23[9]];
  swift_release();
  *(_QWORD *)&v19[v23[10]] = *(_QWORD *)&v20[v23[10]];
  swift_release();
  *(_QWORD *)&v19[v23[11]] = *(_QWORD *)&v20[v23[11]];
  swift_release();
  return a1;
}

uint64_t sub_1C0D5D9EC()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1C0D5D9F8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;

  v6 = sub_1C078BD20();
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)v3)
  {
    v7 = v6;
    v8 = v4;
    return sub_1C07B2D80(v8, v3, v7);
  }
  v9 = sub_1C0776744();
  if (*(_DWORD *)(*(_QWORD *)(v9 - 8) + 84) == (_DWORD)v3)
  {
    v7 = v9;
    v10 = a3[5];
LABEL_10:
    v8 = v4 + v10;
    return sub_1C07B2D80(v8, v3, v7);
  }
  if ((_DWORD)v3 != 2147483645)
  {
    v7 = sub_1C078A314();
    v10 = a3[9];
    goto LABEL_10;
  }
  v11 = *(_QWORD *)(v4 + a3[8]);
  if (v11 >= 0xFFFFFFFF)
    LODWORD(v11) = -1;
  return ((_DWORD)v11 - 1) & ~(((int)v11 - 1) >> 31);
}

uint64_t sub_1C0D5DAAC()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_1C0D5DAB8(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v8 = sub_1C078BD20();
  if (*(_DWORD *)(*(_QWORD *)(v8 - 8) + 84) == a3)
  {
    v9 = v8;
    v10 = v5;
  }
  else
  {
    v11 = sub_1C0776744();
    if (*(_DWORD *)(*(_QWORD *)(v11 - 8) + 84) == a3)
    {
      v9 = v11;
      v12 = a4[5];
    }
    else
    {
      if (a3 == 2147483645)
      {
        *(_QWORD *)(v5 + a4[8]) = (v4 + 1);
        sub_1C077671C();
        return;
      }
      v9 = sub_1C078A314();
      v12 = a4[9];
    }
    v10 = v5 + v12;
  }
  sub_1C07B2D8C(v10, v4, v4, v9);
}

uint64_t type metadata accessor for StandardEntityMapper()
{
  uint64_t result;

  result = qword_1ED754EE0;
  if (!qword_1ED754EE0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1C0D5DB94()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  result = type metadata accessor for Source();
  if (v1 <= 0x3F)
  {
    result = sub_1C106D1F8();
    if (v2 <= 0x3F)
    {
      result = type metadata accessor for PhaseStores();
      if (v3 <= 0x3F)
      {
        swift_initStructMetadata();
        return 0;
      }
    }
  }
  return result;
}

void sub_1C0D5DC50(uint64_t a1)
{
  uint64_t v2;

  sub_1C0794BAC(&qword_1ED754EC8, (uint64_t (*)(uint64_t))type metadata accessor for StandardEntityMapper, (uint64_t)&unk_1C10B87E0);
  *(_QWORD *)(a1 + 8) = v2;
}

void sub_1C0D5DC8C(uint64_t a1)
{
  uint64_t v2;

  sub_1C0794BAC(&qword_1ED754ED8, (uint64_t (*)(uint64_t))type metadata accessor for StandardEntityMapper, (uint64_t)&unk_1C10B8808);
  *(_QWORD *)(a1 + 8) = v2;
}

void sub_1C0D5DCC8(uint64_t a1)
{
  uint64_t v2;

  sub_1C0794BAC(&qword_1ED754ED0, (uint64_t (*)(uint64_t))type metadata accessor for StandardEntityMapper, (uint64_t)&unk_1C10B8824);
  *(_QWORD *)(a1 + 8) = v2;
}

void *sub_1C0D5DD04(void *result)
{
  if (result != (void *)1)
  {

    return (void *)swift_bridgeObjectRelease();
  }
  return result;
}

id sub_1C0D5DD34(id result)
{
  id v1;

  if (result != (id)1)
  {
    v1 = result;
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    return v1;
  }
  return result;
}

uint64_t sub_1C0D5DD68(_QWORD *a1)
{
  uint64_t v1;

  return sub_1C0D5BDB0(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_1C0D5DD78(uint64_t a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, _QWORD))(v1 - 288))(a1, *(_QWORD *)(v1 - 264));
}

uint64_t sub_1C0D5DD8C()
{
  uint64_t v0;

  return *(_QWORD *)(v0 - 760);
}

uint64_t sub_1C0D5DDB0(uint64_t a1, uint64_t a2)
{
  return sub_1C0D3BCC4(a1, a2);
}

uint64_t sub_1C0D5DDD8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 256) = a1;
  return sub_1C106E590();
}

uint64_t sub_1C0D5DDE8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 256) = a1;
  return sub_1C106D1F8();
}

uint64_t sub_1C0D5DE04(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 160) = result;
  return result;
}

uint64_t sub_1C0D5DE10()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1C0D5DE24()
{
  uint64_t v0;

  return v0 - 192;
}

uint64_t sub_1C0D5DE30()
{
  return sub_1C10705AC();
}

uint64_t sub_1C0D5DE3C()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;

  return v1(v0, v2);
}

uint64_t sub_1C0D5DE48()
{
  uint64_t v0;

  return *(_QWORD *)(v0 - 256);
}

uint64_t sub_1C0D5DE54(uint64_t a1, unint64_t a2)
{
  uint64_t v2;

  return sub_1C0788DAC(a1, a2, (uint64_t *)(v2 - 264));
}

uint64_t sub_1C0D5DE6C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(uint64_t, uint64_t, _QWORD)@<X8>)
{
  uint64_t v3;

  return a3(a1, a2, *(_QWORD *)(v3 - 328));
}

uint64_t TransformingError.description.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_1C0D5DEAC + 4 * byte_1C10B8860[*v0]))(0xD000000000000014, 0x80000001C110A5D0);
}

uint64_t sub_1C0D5DEAC(uint64_t a1)
{
  return a1 + 11;
}

BOOL static TransformingError.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

void TransformingError.hash(into:)()
{
  sub_1C1070E04();
  sub_1C0778534();
}

uint64_t TransformingError.hashValue.getter()
{
  sub_1C1070DF8();
  sub_1C1070E04();
  return sub_1C1070E4C();
}

void StandardTransformer.stores.getter(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_1C07E05C8(v1, a1, (uint64_t (*)(_QWORD))type metadata accessor for PhaseStores);
}

void StandardTransformer.source.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_1C07A3FD4();
  sub_1C07E05C8(v1 + *(int *)(v3 + 20), a1, (uint64_t (*)(_QWORD))type metadata accessor for Source);
  sub_1C0778534();
}

uint64_t type metadata accessor for StandardTransformer()
{
  uint64_t result;

  result = qword_1EF648960;
  if (!qword_1EF648960)
    return swift_getSingletonMetadata();
  return result;
}

void StandardTransformer.pipelineType.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + *(int *)(sub_1C07A3FD4() + 28));
  sub_1C0778534();
}

void StandardTransformer.init(_:stores:pipelineType:sourceTransform:)(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  char v11;
  int *v12;
  uint64_t v13;
  _QWORD *v14;

  v11 = *a3;
  v12 = (int *)sub_1C07A3FD4();
  v13 = a6 + v12[8];
  *(_QWORD *)(v13 + 32) = 0;
  *(_OWORD *)v13 = 0u;
  *(_OWORD *)(v13 + 16) = 0u;
  sub_1C07E05F4(a2, a6, (uint64_t (*)(_QWORD))type metadata accessor for PhaseStores);
  sub_1C07E05F4(a1, a6 + v12[5], (uint64_t (*)(_QWORD))type metadata accessor for Source);
  *(_BYTE *)(a6 + v12[7]) = v11;
  v14 = (_QWORD *)(a6 + v12[6]);
  *v14 = a4;
  v14[1] = a5;
}

void sub_1C0D5E0EC(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned __int8 *v15;
  int *v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  __int128 v21[2];

  type metadata accessor for Source();
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v4);
  sub_1C0778564();
  v7 = v6 - v5;
  sub_1C106D1F8();
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v8);
  sub_1C0778564();
  v11 = v10 - v9;
  type metadata accessor for Configuration();
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v12);
  sub_1C0778564();
  v15 = (unsigned __int8 *)(v14 - v13);
  v16 = (int *)type metadata accessor for StandardTransformer();
  sub_1C0D5F3E0(v1 + v16[8], (uint64_t)&v19);
  if (v20)
  {
    sub_1C077DD60(&v19, (uint64_t)v21);
    sub_1C077DD60(v21, (uint64_t)a1);
  }
  else
  {
    sub_1C0D5E4A8((uint64_t)&v19);
    sub_1C07E05C8(v1, (uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for Configuration);
    _s24IntelligencePlatformCore5StagePAAE11entityClass0aB006EntityF0Vvg_0();
    sub_1C07E05C8(v1 + v16[5], v7, (uint64_t (*)(_QWORD))type metadata accessor for Source);
    LOBYTE(v21[0]) = 7;
    LOBYTE(v19) = *(_BYTE *)(v1 + v16[7]);
    v17 = type metadata accessor for SourceEntityStore();
    swift_allocObject();
    sub_1C0D346DC(v15, v11, v7, (unsigned __int8 *)v21, (unsigned __int8 *)&v19);
    if (!v2)
    {
      a1[3] = v17;
      a1[4] = &protocol witness table for SourceEntityStore;
      *a1 = v18;
    }
  }
}

uint64_t StandardTransformer.execute()()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 56) = v0;
  return swift_task_switch();
}

uint64_t sub_1C0D5E294()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t (*v5)(_QWORD *);

  sub_1C0D5E0EC(v0 + 2);
  v1 = v0[7];
  v2 = (_QWORD *)(v1 + *(int *)(sub_1C07A3FD4() + 24));
  v5 = (uint64_t (*)(_QWORD *))(*(int *)*v2 + *v2);
  v3 = (_QWORD *)swift_task_alloc();
  v0[8] = v3;
  *v3 = v0;
  v3[1] = sub_1C0D5E338;
  return v5(v0 + 2);
}

uint64_t sub_1C0D5E338()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 72) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1C0D5E39C()
{
  uint64_t v0;

  sub_1C106AC6C();
  sub_1C088AE94();
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0(v0 + 16);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1C0D5E3EC()
{
  uint64_t v0;

  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0(v0 + 16);
  return sub_1C077CF28(*(uint64_t (**)(void))(v0 + 8));
}

Swift::Void __swiftcall StandardTransformer.clearAllData()()
{
  uint64_t v0;
  uint64_t v1;
  __int128 v2;
  _QWORD v3[3];
  uint64_t v4;
  uint64_t v5;

  sub_1C0D5E0EC(&v2);
  sub_1C077DD60(&v2, (uint64_t)v3);
  v0 = v4;
  v1 = v5;
  sub_1C07A9480(v3, v4);
  (*(void (**)(uint64_t, uint64_t))(v1 + 16))(v0, v1);
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v3);
}

uint64_t sub_1C0D5E4A8(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1C07ACF80(qword_1ED7521B0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1C0D5E4EC()
{
  unint64_t result;

  result = qword_1EF6488C0;
  if (!qword_1EF6488C0)
  {
    result = MEMORY[0x1C3BA8174](&protocol conformance descriptor for TransformingError, &type metadata for TransformingError);
    atomic_store(result, (unint64_t *)&qword_1EF6488C0);
  }
  return result;
}

void sub_1C0D5E52C(uint64_t a1)
{
  uint64_t v2;

  sub_1C0D5E618(&qword_1EF633058, (uint64_t)&protocol conformance descriptor for StandardTransformer);
  *(_QWORD *)(a1 + 8) = v2;
}

void sub_1C0D5E560(uint64_t a1)
{
  uint64_t v2;

  sub_1C0D5E618((unint64_t *)&unk_1EF6488F0, (uint64_t)&protocol conformance descriptor for StandardTransformer);
  *(_QWORD *)(a1 + 8) = v2;
}

uint64_t sub_1C0D5E5A0()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_1C0928A6C;
  return StandardTransformer.execute()();
}

void sub_1C0D5E5E4(uint64_t a1)
{
  uint64_t v2;

  sub_1C0D5E618(&qword_1EF648900, (uint64_t)&protocol conformance descriptor for StandardTransformer);
  *(_QWORD *)(a1 + 8) = v2;
}

void sub_1C0D5E618(unint64_t *a1, uint64_t a2)
{
  uint64_t v4;

  if (!*a1)
  {
    v4 = type metadata accessor for StandardTransformer();
    atomic_store(MEMORY[0x1C3BA8174](a2, v4), a1);
  }
  sub_1C0778534();
}

uint64_t storeEnumTagSinglePayload for TransformingError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_1C0D5E6A4 + 4 * byte_1C10B886B[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_1C0D5E6D8 + 4 * byte_1C10B8866[v4]))();
}

uint64_t sub_1C0D5E6D8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C0D5E6E0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C0D5E6E8);
  return result;
}

uint64_t sub_1C0D5E6F4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C0D5E6FCLL);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_1C0D5E700(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C0D5E708(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for TransformingError()
{
  return &type metadata for TransformingError;
}

_QWORD *initializeBufferWithCopyOfBuffer for StandardTransformer(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  int *v9;
  uint64_t v10;
  _QWORD *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  void (*v29)(char *, char *, uint64_t);
  char *v30;
  char *v31;
  uint64_t v32;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v26 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v26 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1C106AB28();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = type metadata accessor for Configuration();
    *(_OWORD *)((char *)a1 + *(int *)(v8 + 20)) = *(_OWORD *)((char *)a2 + *(int *)(v8 + 20));
    v9 = (int *)type metadata accessor for PhaseStores();
    *(_QWORD *)((char *)a1 + v9[5]) = *(_QWORD *)((char *)a2 + v9[5]);
    *(_QWORD *)((char *)a1 + v9[6]) = *(_QWORD *)((char *)a2 + v9[6]);
    *(_QWORD *)((char *)a1 + v9[7]) = *(_QWORD *)((char *)a2 + v9[7]);
    *(_QWORD *)((char *)a1 + v9[8]) = *(_QWORD *)((char *)a2 + v9[8]);
    *(_QWORD *)((char *)a1 + v9[9]) = *(_QWORD *)((char *)a2 + v9[9]);
    *(_QWORD *)((char *)a1 + v9[10]) = *(_QWORD *)((char *)a2 + v9[10]);
    *(_QWORD *)((char *)a1 + v9[11]) = *(_QWORD *)((char *)a2 + v9[11]);
    v10 = a3[5];
    v11 = (_QWORD *)((char *)a1 + v10);
    v12 = (char *)a2 + v10;
    v13 = *(_QWORD *)((char *)a2 + v10 + 8);
    *v11 = *(_QWORD *)((char *)a2 + v10);
    v11[1] = v13;
    v11[2] = *(_QWORD *)((char *)a2 + v10 + 16);
    v32 = type metadata accessor for Source();
    v14 = *(int *)(v32 + 24);
    v30 = &v12[v14];
    v31 = (char *)v11 + v14;
    v15 = sub_1C106D1F8();
    v29 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    v29(v31, v30, v15);
    *((_BYTE *)v11 + *(int *)(v32 + 28)) = v12[*(int *)(v32 + 28)];
    v16 = a3[6];
    v17 = a3[7];
    v18 = (_QWORD *)((char *)a1 + v16);
    v19 = (_QWORD *)((char *)a2 + v16);
    v20 = v19[1];
    *v18 = *v19;
    v18[1] = v20;
    *((_BYTE *)a1 + v17) = *((_BYTE *)a2 + v17);
    v21 = a3[8];
    v22 = (char *)a1 + v21;
    v23 = (char *)a2 + v21;
    v24 = *((_QWORD *)v23 + 3);
    swift_retain();
    if (v24)
    {
      v25 = *((_QWORD *)v23 + 4);
      *((_QWORD *)v22 + 3) = v24;
      *((_QWORD *)v22 + 4) = v25;
      (**(void (***)(char *, char *, uint64_t))(v24 - 8))(v22, v23, v24);
    }
    else
    {
      v27 = *((_OWORD *)v23 + 1);
      *(_OWORD *)v22 = *(_OWORD *)v23;
      *((_OWORD *)v22 + 1) = v27;
      *((_QWORD *)v22 + 4) = *((_QWORD *)v23 + 4);
    }
  }
  return a1;
}

uint64_t destroy for StandardTransformer(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;

  v4 = sub_1C106AB28();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  type metadata accessor for PhaseStores();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  v5 = a1 + *(int *)(a2 + 20);
  swift_bridgeObjectRelease();
  v6 = v5 + *(int *)(type metadata accessor for Source() + 24);
  v7 = sub_1C106D1F8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  swift_release();
  result = a1 + *(int *)(a2 + 32);
  if (*(_QWORD *)(result + 24))
    return _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0(result);
  return result;
}

uint64_t initializeWithCopy for StandardTransformer(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v26;
  void (*v28)(char *, uint64_t, uint64_t);
  uint64_t v29;
  char *v30;
  uint64_t v31;

  v6 = sub_1C106AB28();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = type metadata accessor for Configuration();
  *(_OWORD *)(a1 + *(int *)(v7 + 20)) = *(_OWORD *)(a2 + *(int *)(v7 + 20));
  v8 = (int *)type metadata accessor for PhaseStores();
  *(_QWORD *)(a1 + v8[5]) = *(_QWORD *)(a2 + v8[5]);
  *(_QWORD *)(a1 + v8[6]) = *(_QWORD *)(a2 + v8[6]);
  *(_QWORD *)(a1 + v8[7]) = *(_QWORD *)(a2 + v8[7]);
  *(_QWORD *)(a1 + v8[8]) = *(_QWORD *)(a2 + v8[8]);
  *(_QWORD *)(a1 + v8[9]) = *(_QWORD *)(a2 + v8[9]);
  *(_QWORD *)(a1 + v8[10]) = *(_QWORD *)(a2 + v8[10]);
  *(_QWORD *)(a1 + v8[11]) = *(_QWORD *)(a2 + v8[11]);
  v9 = a3[5];
  v10 = (_QWORD *)(a1 + v9);
  v11 = a2 + v9;
  v12 = *(_QWORD *)(a2 + v9 + 8);
  *v10 = *(_QWORD *)(a2 + v9);
  v10[1] = v12;
  v10[2] = *(_QWORD *)(a2 + v9 + 16);
  v13 = type metadata accessor for Source();
  v14 = *(int *)(v13 + 24);
  v30 = (char *)v10 + v14;
  v31 = v13;
  v29 = v11 + v14;
  v15 = sub_1C106D1F8();
  v28 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 16);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  v28(v30, v29, v15);
  *((_BYTE *)v10 + *(int *)(v31 + 28)) = *(_BYTE *)(v11 + *(int *)(v31 + 28));
  v16 = a3[6];
  v17 = a3[7];
  v18 = (_QWORD *)(a1 + v16);
  v19 = (_QWORD *)(a2 + v16);
  v20 = v19[1];
  *v18 = *v19;
  v18[1] = v20;
  *(_BYTE *)(a1 + v17) = *(_BYTE *)(a2 + v17);
  v21 = a3[8];
  v22 = a1 + v21;
  v23 = a2 + v21;
  v24 = *(_QWORD *)(v23 + 24);
  swift_retain();
  if (v24)
  {
    v25 = *(_QWORD *)(v23 + 32);
    *(_QWORD *)(v22 + 24) = v24;
    *(_QWORD *)(v22 + 32) = v25;
    (**(void (***)(uint64_t, uint64_t, uint64_t))(v24 - 8))(v22, v23, v24);
  }
  else
  {
    v26 = *(_OWORD *)(v23 + 16);
    *(_OWORD *)v22 = *(_OWORD *)v23;
    *(_OWORD *)(v22 + 16) = v26;
    *(_QWORD *)(v22 + 32) = *(_QWORD *)(v23 + 32);
  }
  return a1;
}

uint64_t assignWithCopy for StandardTransformer(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  int *v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __int128 *v25;
  uint64_t v26;
  __int128 v27;
  __int128 v28;

  v6 = sub_1C106AB28();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(type metadata accessor for Configuration() + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *v8 = *v9;
  v8[1] = v9[1];
  v10 = (int *)type metadata accessor for PhaseStores();
  *(_QWORD *)(a1 + v10[5]) = *(_QWORD *)(a2 + v10[5]);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + v10[6]) = *(_QWORD *)(a2 + v10[6]);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + v10[7]) = *(_QWORD *)(a2 + v10[7]);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + v10[8]) = *(_QWORD *)(a2 + v10[8]);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + v10[9]) = *(_QWORD *)(a2 + v10[9]);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + v10[10]) = *(_QWORD *)(a2 + v10[10]);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + v10[11]) = *(_QWORD *)(a2 + v10[11]);
  swift_retain();
  swift_release();
  v11 = a3[5];
  v12 = (_QWORD *)(a1 + v11);
  v13 = a2 + v11;
  *v12 = *(_QWORD *)(a2 + v11);
  v12[1] = *(_QWORD *)(a2 + v11 + 8);
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  swift_bridgeObjectRelease();
  v12[2] = *(_QWORD *)(v13 + 16);
  v14 = type metadata accessor for Source();
  v15 = *(int *)(v14 + 24);
  v16 = (char *)v12 + v15;
  v17 = v13 + v15;
  v18 = sub_1C106D1F8();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 24))(v16, v17, v18);
  *((_BYTE *)v12 + *(int *)(v14 + 28)) = *(_BYTE *)(v13 + *(int *)(v14 + 28));
  v19 = a3[6];
  v20 = (_QWORD *)(a1 + v19);
  v21 = (_QWORD *)(a2 + v19);
  v22 = v21[1];
  *v20 = *v21;
  v20[1] = v22;
  swift_retain();
  swift_release();
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  v23 = a3[8];
  v24 = a1 + v23;
  v25 = (__int128 *)(a2 + v23);
  v26 = *((_QWORD *)v25 + 3);
  if (!*(_QWORD *)(a1 + v23 + 24))
  {
    if (v26)
    {
      *(_QWORD *)(v24 + 24) = v26;
      *(_QWORD *)(v24 + 32) = *((_QWORD *)v25 + 4);
      (**(void (***)(uint64_t, __int128 *))(v26 - 8))(v24, v25);
      return a1;
    }
LABEL_7:
    v27 = *v25;
    v28 = v25[1];
    *(_QWORD *)(v24 + 32) = *((_QWORD *)v25 + 4);
    *(_OWORD *)v24 = v27;
    *(_OWORD *)(v24 + 16) = v28;
    return a1;
  }
  if (!v26)
  {
    _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0(v24);
    goto LABEL_7;
  }
  sub_1C07E6484((uint64_t *)v24, (uint64_t *)v25);
  return a1;
}

uint64_t initializeWithTake for StandardTransformer(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;

  v6 = sub_1C106AB28();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = type metadata accessor for Configuration();
  *(_OWORD *)(a1 + *(int *)(v7 + 20)) = *(_OWORD *)(a2 + *(int *)(v7 + 20));
  v8 = (int *)type metadata accessor for PhaseStores();
  *(_QWORD *)(a1 + v8[5]) = *(_QWORD *)(a2 + v8[5]);
  *(_QWORD *)(a1 + v8[6]) = *(_QWORD *)(a2 + v8[6]);
  *(_QWORD *)(a1 + v8[7]) = *(_QWORD *)(a2 + v8[7]);
  *(_QWORD *)(a1 + v8[8]) = *(_QWORD *)(a2 + v8[8]);
  *(_QWORD *)(a1 + v8[9]) = *(_QWORD *)(a2 + v8[9]);
  *(_QWORD *)(a1 + v8[10]) = *(_QWORD *)(a2 + v8[10]);
  *(_QWORD *)(a1 + v8[11]) = *(_QWORD *)(a2 + v8[11]);
  v9 = a3[5];
  v10 = a1 + v9;
  v11 = a2 + v9;
  *(_OWORD *)v10 = *(_OWORD *)(a2 + v9);
  *(_QWORD *)(v10 + 16) = *(_QWORD *)(a2 + v9 + 16);
  v12 = type metadata accessor for Source();
  v13 = *(int *)(v12 + 24);
  v14 = v10 + v13;
  v15 = v11 + v13;
  v16 = sub_1C106D1F8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v14, v15, v16);
  *(_BYTE *)(v10 + *(int *)(v12 + 28)) = *(_BYTE *)(v11 + *(int *)(v12 + 28));
  v17 = a3[7];
  *(_OWORD *)(a1 + a3[6]) = *(_OWORD *)(a2 + a3[6]);
  *(_BYTE *)(a1 + v17) = *(_BYTE *)(a2 + v17);
  v18 = a3[8];
  v19 = a1 + v18;
  v20 = a2 + v18;
  *(_QWORD *)(v19 + 32) = *(_QWORD *)(v20 + 32);
  v21 = *(_OWORD *)(v20 + 16);
  *(_OWORD *)v19 = *(_OWORD *)v20;
  *(_OWORD *)(v19 + 16) = v21;
  return a1;
}

uint64_t assignWithTake for StandardTransformer(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;

  v6 = sub_1C106AB28();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = type metadata accessor for Configuration();
  *(_OWORD *)(a1 + *(int *)(v7 + 20)) = *(_OWORD *)(a2 + *(int *)(v7 + 20));
  v8 = (int *)type metadata accessor for PhaseStores();
  *(_QWORD *)(a1 + v8[5]) = *(_QWORD *)(a2 + v8[5]);
  swift_release();
  *(_QWORD *)(a1 + v8[6]) = *(_QWORD *)(a2 + v8[6]);
  swift_release();
  *(_QWORD *)(a1 + v8[7]) = *(_QWORD *)(a2 + v8[7]);
  swift_release();
  *(_QWORD *)(a1 + v8[8]) = *(_QWORD *)(a2 + v8[8]);
  swift_release();
  *(_QWORD *)(a1 + v8[9]) = *(_QWORD *)(a2 + v8[9]);
  swift_release();
  *(_QWORD *)(a1 + v8[10]) = *(_QWORD *)(a2 + v8[10]);
  swift_release();
  *(_QWORD *)(a1 + v8[11]) = *(_QWORD *)(a2 + v8[11]);
  swift_release();
  v9 = a3[5];
  v10 = (_QWORD *)(a1 + v9);
  v11 = a2 + v9;
  v12 = *(_QWORD *)(a2 + v9 + 8);
  *v10 = *(_QWORD *)(a2 + v9);
  v10[1] = v12;
  swift_bridgeObjectRelease();
  v10[2] = *(_QWORD *)(v11 + 16);
  v13 = type metadata accessor for Source();
  v14 = *(int *)(v13 + 24);
  v15 = (char *)v10 + v14;
  v16 = v11 + v14;
  v17 = sub_1C106D1F8();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 40))(v15, v16, v17);
  *((_BYTE *)v10 + *(int *)(v13 + 28)) = *(_BYTE *)(v11 + *(int *)(v13 + 28));
  *(_OWORD *)(a1 + a3[6]) = *(_OWORD *)(a2 + a3[6]);
  swift_release();
  v18 = a3[8];
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  v19 = a1 + v18;
  if (*(_QWORD *)(a1 + v18 + 24))
    _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0(a1 + v18);
  v20 = *(_OWORD *)(a2 + v18 + 16);
  *(_OWORD *)v19 = *(_OWORD *)(a2 + v18);
  *(_OWORD *)(v19 + 16) = v20;
  *(_QWORD *)(v19 + 32) = *(_QWORD *)(a2 + v18 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for StandardTransformer()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1C0D5F20C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v11;

  v6 = sub_1C077D0AC();
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)v3)
  {
    v7 = v6;
    v8 = v4;
    return sub_1C07B2D80(v8, v3, v7);
  }
  v9 = type metadata accessor for Source();
  if (*(_DWORD *)(*(_QWORD *)(v9 - 8) + 84) == (_DWORD)v3)
  {
    v7 = v9;
    v8 = v4 + *(int *)(a3 + 20);
    return sub_1C07B2D80(v8, v3, v7);
  }
  v11 = *(_QWORD *)(v4 + *(int *)(a3 + 24));
  if (v11 >= 0xFFFFFFFF)
    LODWORD(v11) = -1;
  return (v11 + 1);
}

uint64_t storeEnumTagSinglePayload for StandardTransformer()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1C0D5F2AC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;

  v8 = sub_1C077D0AC();
  if (*(_DWORD *)(*(_QWORD *)(v8 - 8) + 84) == a3)
  {
    v9 = v8;
    v10 = v5;
    return sub_1C07B2D8C(v10, v4, v4, v9);
  }
  result = type metadata accessor for Source();
  if (*(_DWORD *)(*(_QWORD *)(result - 8) + 84) == a3)
  {
    v9 = result;
    v10 = v5 + *(int *)(a4 + 20);
    return sub_1C07B2D8C(v10, v4, v4, v9);
  }
  *(_QWORD *)(v5 + *(int *)(a4 + 24)) = (v4 - 1);
  return result;
}

uint64_t sub_1C0D5F33C()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = type metadata accessor for PhaseStores();
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for Source();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t sub_1C0D5F3E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1C07ACF80(qword_1ED7521B0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_1C0D5F428()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t *v7;
  uint64_t v8;
  unint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint64_t v12;
  uint64_t v13[6];

  sub_1C077AE5C();
  v1 = sub_1C106C040();
  MEMORY[0x1E0C80A78](v1);
  sub_1C0778544();
  memset(v13, 0, 40);
  sub_1C106C034();
  v2 = sub_1C106C1CC();
  if (v0)
  {
    sub_1C07A2B1C();
    sub_1C0784B30((uint64_t)v13, (uint64_t *)&unk_1ED7626A0);
  }
  else
  {
    v3 = v2;
    sub_1C07A2B1C();
    sub_1C0784B30((uint64_t)v13, (uint64_t *)&unk_1ED7626A0);
    v4 = *(_QWORD *)(v3 + 16);
    if (v4)
    {
      v5 = qword_1ED762B20;
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      if (v5 != -1)
        swift_once();
      v6 = sub_1C106F544();
      v7 = (unint64_t *)(v3 + 40);
      do
      {
        v8 = *(v7 - 1);
        v9 = *v7;
        sub_1C079E000(v6, (uint64_t)qword_1ED78D9F8);
        swift_bridgeObjectRetain_n();
        v10 = sub_1C106F538();
        v11 = sub_1C10703A8();
        if (os_log_type_enabled(v10, v11))
        {
          v12 = swift_slowAlloc();
          v13[0] = swift_slowAlloc();
          *(_DWORD *)v12 = 136315138;
          _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
          *(_QWORD *)(v12 + 4) = sub_1C0788DAC(v8, v9, v13);
          swift_bridgeObjectRelease_n();
          _os_log_impl(&dword_1C0771000, v10, v11, "grdb_migrations: %s", (uint8_t *)v12, 0xCu);
          swift_arrayDestroy();
          sub_1C0776778();
        }

        swift_bridgeObjectRelease_n();
        v7 += 2;
        --v4;
      }
      while (v4);
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
  }
  sub_1C07757D0();
}

void sub_1C0D5F6AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  sub_1C077AE5C();
  v6 = v0;
  v7 = v1;
  v3 = sub_1C106BEF0();
  MEMORY[0x1E0C80A78](v3);
  sub_1C0778564();
  v9 = sub_1C106BF2C();
  v8 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  sub_1C0778544();
  sub_1C106BF20();
  sub_1C07A7660();
  sub_1C077B66C();
  sub_1C106BF08();
  sub_1C07A1490();
  sub_1C07A7660();
  sub_1C077B66C();
  sub_1C0798EF8();
  sub_1C07A1490();
  sub_1C07A7660();
  sub_1C077B66C();
  sub_1C0798EF8();
  sub_1C07A1490();
  sub_1C07A7660();
  sub_1C0798EF8();
  sub_1C07A1490();
  sub_1C07A7660();
  sub_1C077B66C();
  sub_1C0798EF8();
  sub_1C07A1490();
  sub_1C07A7660();
  sub_1C077B66C();
  sub_1C0798EF8();
  sub_1C07A1490();
  sub_1C07A7660();
  sub_1C077B66C();
  sub_1C0798EF8();
  sub_1C07A1490();
  sub_1C07A7660();
  sub_1C077B66C();
  sub_1C0798EF8();
  sub_1C07A1490();
  sub_1C07A7660();
  sub_1C077B66C();
  sub_1C0798EF8();
  sub_1C07A1490();
  sub_1C07803B8((unint64_t *)&qword_1ED762200, type metadata accessor for ErrorHandlingDatabasePool, (uint64_t)&unk_1C108D0AC);
  v4 = sub_1C106BF14();
  if (!v1)
  {
    MEMORY[0x1E0C80A78](v4);
    *(&v5 - 2) = v2;
    sub_1C0777284();
  }
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v2, v9);
  sub_1C07757D0();
}

void sub_1C0D5F964()
{
  sub_1C0D5FBAC();
}

uint64_t sub_1C0D5F990()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD v10[2];

  v0 = sub_1C07ACF80(&qword_1ED761500);
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)v10 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_1C07ACF80((uint64_t *)&unk_1ED75E9F0);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C106C4FC();
  v6 = sub_1C106C55C();
  sub_1C07B2D8C((uint64_t)v5, 0, 1, v6);
  sub_1C106BE3C();
  swift_release();
  sub_1C0784B30((uint64_t)v5, (uint64_t *)&unk_1ED75E9F0);
  sub_1C106C514();
  sub_1C07B2D8C((uint64_t)v5, 0, 1, v6);
  sub_1C106BE3C();
  swift_release();
  sub_1C0784B30((uint64_t)v5, (uint64_t *)&unk_1ED75E9F0);
  sub_1C106C514();
  sub_1C07B2D8C((uint64_t)v5, 0, 1, v6);
  sub_1C106BE3C();
  swift_release();
  sub_1C0784B30((uint64_t)v5, (uint64_t *)&unk_1ED75E9F0);
  v7 = *MEMORY[0x1E0D247F8];
  v8 = sub_1C106C604();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 104))(v2, v7, v8);
  sub_1C07B2D8C((uint64_t)v2, 0, 1, v8);
  sub_1C106BE24();
  return sub_1C0784B30((uint64_t)v2, &qword_1ED761500);
}

void sub_1C0D5FB80()
{
  sub_1C0D5FBAC();
}

void sub_1C0D5FBAC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t);

  sub_1C077AE5C();
  v0 = sub_1C106BB54();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  sub_1C0779614();
  sub_1C07803B8((unint64_t *)&unk_1ED75E9C0, v2, MEMORY[0x1E0D23C20]);
  sub_1C07ACF80((uint64_t *)&unk_1ED760080);
  sub_1C0A8F4B4();
  sub_1C0788340();
  sub_1C1070660();
  sub_1C106C670();
  sub_1C0793FCC(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  sub_1C07757D0();
}

uint64_t sub_1C0D5FC8C()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD v10[2];

  v0 = sub_1C07ACF80(&qword_1ED761500);
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)v10 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_1C07ACF80((uint64_t *)&unk_1ED75E9F0);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C106C4FC();
  v6 = sub_1C106C55C();
  sub_1C07B2D8C((uint64_t)v5, 0, 1, v6);
  sub_1C106BE3C();
  swift_release();
  sub_1C0784B30((uint64_t)v5, (uint64_t *)&unk_1ED75E9F0);
  sub_1C106C514();
  sub_1C07B2D8C((uint64_t)v5, 0, 1, v6);
  sub_1C106BE3C();
  swift_release();
  sub_1C0784B30((uint64_t)v5, (uint64_t *)&unk_1ED75E9F0);
  v7 = *MEMORY[0x1E0D247F8];
  v8 = sub_1C106C604();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 104))(v2, v7, v8);
  sub_1C07B2D8C((uint64_t)v2, 0, 1, v8);
  sub_1C106BE24();
  return sub_1C0784B30((uint64_t)v2, &qword_1ED761500);
}

uint64_t sub_1C0D5FE34()
{
  return sub_1C0D60330();
}

uint64_t sub_1C0D5FE50()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD v10[2];

  v0 = sub_1C07ACF80(&qword_1ED761500);
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)v10 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_1C07ACF80((uint64_t *)&unk_1ED75E9F0);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C106C4FC();
  v6 = sub_1C106C55C();
  sub_1C07B2D8C((uint64_t)v5, 0, 1, v6);
  sub_1C106BE3C();
  swift_release();
  sub_1C0784B30((uint64_t)v5, (uint64_t *)&unk_1ED75E9F0);
  sub_1C106C514();
  sub_1C07B2D8C((uint64_t)v5, 0, 1, v6);
  sub_1C106BE3C();
  swift_release();
  sub_1C0784B30((uint64_t)v5, (uint64_t *)&unk_1ED75E9F0);
  sub_1C106C514();
  sub_1C07B2D8C((uint64_t)v5, 0, 1, v6);
  sub_1C106BE3C();
  swift_release();
  sub_1C0784B30((uint64_t)v5, (uint64_t *)&unk_1ED75E9F0);
  sub_1C106C514();
  sub_1C07B2D8C((uint64_t)v5, 0, 1, v6);
  sub_1C106BE3C();
  swift_release();
  sub_1C0784B30((uint64_t)v5, (uint64_t *)&unk_1ED75E9F0);
  v7 = *MEMORY[0x1E0D247F8];
  v8 = sub_1C106C604();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 104))(v2, v7, v8);
  sub_1C07B2D8C((uint64_t)v2, 0, 1, v8);
  sub_1C106BE24();
  return sub_1C0784B30((uint64_t)v2, &qword_1ED761500);
}

uint64_t sub_1C0D60094()
{
  return sub_1C0D60330();
}

void sub_1C0D600B0()
{
  sub_1C0D60154();
}

uint64_t sub_1C0D600F4()
{
  return sub_1C0D60330();
}

void sub_1C0D60110()
{
  sub_1C0D60154();
}

void sub_1C0D60154()
{
  void (*v0)(uint64_t);
  void (*v1)(uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  sub_1C077AE5C();
  v1 = v0;
  v2 = sub_1C07ACF80(&qword_1ED761500);
  MEMORY[0x1E0C80A78](v2);
  sub_1C0778564();
  v5 = v4 - v3;
  v6 = sub_1C07ACF80((uint64_t *)&unk_1ED75E9F0);
  MEMORY[0x1E0C80A78](v6);
  sub_1C0778564();
  sub_1C106C4FC();
  sub_1C106C55C();
  sub_1C0799184();
  sub_1C079AFD4();
  swift_release();
  sub_1C07AE1B8();
  sub_1C07A03DC();
  sub_1C0799184();
  sub_1C079AFD4();
  swift_release();
  sub_1C07AE1B8();
  sub_1C07A03DC();
  sub_1C0799184();
  sub_1C079AFD4();
  swift_release();
  sub_1C07AE1B8();
  sub_1C07A03DC();
  sub_1C0799184();
  sub_1C079AFD4();
  swift_release();
  v7 = sub_1C07AE1B8();
  v1(v7);
  sub_1C0799184();
  sub_1C079AFD4();
  swift_release();
  sub_1C07AE1B8();
  v8 = *MEMORY[0x1E0D247F8];
  v9 = sub_1C106C604();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 104))(v5, v8, v9);
  sub_1C07B2D8C(v5, 0, 1, v9);
  sub_1C106BE24();
  sub_1C0784B30(v5, &qword_1ED761500);
  sub_1C07757D0();
}

uint64_t sub_1C0D60314()
{
  return sub_1C0D60330();
}

uint64_t sub_1C0D60330()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t result;

  v1 = sub_1C106BB54();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  sub_1C0779614();
  sub_1C078FB5C();
  result = sub_1C106C628();
  if (!v0)
  {
    sub_1C07803B8((unint64_t *)&unk_1ED75E9C0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D23C10], MEMORY[0x1E0D23C20]);
    sub_1C07ACF80((uint64_t *)&unk_1ED760080);
    sub_1C0A8F4B4();
    sub_1C0788340();
    sub_1C1070660();
    sub_1C078FB5C();
    sub_1C106C670();
    return sub_1C0793FCC(*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  }
  return result;
}

void sub_1C0D6042C()
{
  sub_1C0D60154();
}

uint64_t sub_1C0D60470()
{
  return sub_1C106C634();
}

uint64_t sub_1C0D604BC()
{
  MEMORY[0x1C3BA2738](0x656372756F73, 0xE600000000000000, 0x614E656372756F73, 0xEA0000000000656DLL);
  MEMORY[0x1C3BA2738](0x797469746E65, 0xE600000000000000, 0x6C43797469746E65, 0xEF656D614E737361);
  return MEMORY[0x1C3BA2738](0x656E696C65706970, 0xED0000657079745FLL, 0x656E696C65706970, 0xEC00000065707954);
}

uint64_t sub_1C0D60578()
{
  return sub_1C106C634();
}

uint64_t sub_1C0D605C4()
{
  return MEMORY[0x1C3BA2738](0x6C43797469746E65, 0xEF656D614E737361, 0x6C43797469746E65, 0xEB00000000737361);
}

uint64_t sub_1C0D60620()
{
  return sub_1C106C628();
}

uint64_t sub_1C0D60660(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  char *v11;
  void (*v12)(char *, uint64_t, uint64_t, double);
  char v13;
  uint64_t result;
  char v15;
  uint64_t (*v16)(char *, uint64_t);
  _BYTE *v17;
  _QWORD v18[2];

  v4 = sub_1C106BF2C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x1E0C80A78](v8);
  v11 = (char *)v18 - v10;
  v12 = *(void (**)(char *, uint64_t, uint64_t, double))(v5 + 16);
  v12((char *)v18 - v10, a2, v4, v9);
  v13 = sub_1C106BEFC();
  if (v2)
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v11, v4);
  v15 = v13;
  v16 = *(uint64_t (**)(char *, uint64_t))(v5 + 8);
  result = v16(v11, v4);
  if ((v15 & 1) != 0)
  {
    ((void (*)(char *, uint64_t, uint64_t))v12)(v7, a2, v4);
    sub_1C0D5F428();
    v16(v7, v4);
    sub_1C09BD11C();
    swift_allocError();
    *v17 = 2;
    return swift_willThrow();
  }
  return result;
}

uint64_t sub_1C0D607C8(uint64_t a1)
{
  uint64_t v1;

  return sub_1C0D60660(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_1C0D607E0()
{
  uint64_t result;

  sub_1C07ACF80(&qword_1ED7629E0);
  swift_allocObject();
  result = sub_1C0ECB224();
  qword_1ED78D998 = result;
  return result;
}

uint64_t *sub_1C0D60820()
{
  if (qword_1ED762D98 != -1)
    swift_once();
  return &qword_1ED78D998;
}

unint64_t sub_1C0D60860()
{
  sub_1C1070774();
  swift_bridgeObjectRelease();
  sub_1C106AB28();
  sub_1C0BAFC20();
  sub_1C1070C0C();
  sub_1C106FC94();
  swift_bridgeObjectRelease();
  sub_1C106FC94();
  return 0xD000000000000011;
}

uint64_t *sub_1C0D6090C(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v26 = *v1;
  v21 = sub_1C106BC38();
  v24 = *(_QWORD *)(v21 - 8);
  MEMORY[0x1E0C80A78](v21);
  v23 = (char *)&v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v22 = (char *)&v20 - v5;
  v6 = sub_1C106AB28();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v20 - v11;
  sub_1C07A7670();
  sub_1C106AAC8();
  v13 = (char *)v1 + OBJC_IVAR____TtC24IntelligencePlatformCore13StateDatabase_url;
  (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))((uint64_t)v1 + OBJC_IVAR____TtC24IntelligencePlatformCore13StateDatabase_url, v12, v6);
  v25 = (uint64_t)v1 + OBJC_IVAR____TtC24IntelligencePlatformCore13StateDatabase_config;
  sub_1C078E3E0(a1, (uint64_t)v1 + OBJC_IVAR____TtC24IntelligencePlatformCore13StateDatabase_config);
  v14 = *(_QWORD *)(a1 + *(int *)(type metadata accessor for Configuration() + 20));
  v15 = (v14 >> 1) & 4 | v14 & 3;
  sub_1C07A896C();
  v16 = v15 & 0xFFFFFFFFFFFFFFFELL | static NSUserDefaults.stateDatabaseLoggingEnabled.getter() & 1;
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v9, v13, v6);
  type metadata accessor for ErrorHandlingDatabasePool(0);
  swift_allocObject();
  v17 = v27;
  v18 = sub_1C09BB8DC((uint64_t)v9, v16);
  if (v17)
  {
    sub_1C0799E28();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v13, v6);
    sub_1C078D09C(v25);
    swift_deallocPartialClassInstance();
  }
  else
  {
    *(uint64_t *)((char *)v1 + OBJC_IVAR____TtC24IntelligencePlatformCore13StateDatabase_pool) = v18;
    sub_1C0D5F6AC();
    sub_1C0799E28();
  }
  return v1;
}

uint64_t sub_1C0D60CC8()
{
  sub_1C07A7670();
  return sub_1C106AAC8();
}

uint64_t sub_1C0D60CEC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC24IntelligencePlatformCore13StateDatabase_url;
  v2 = sub_1C106AB28();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  sub_1C078D09C(v0 + OBJC_IVAR____TtC24IntelligencePlatformCore13StateDatabase_config);
  swift_release();
  return v0;
}

uint64_t sub_1C0D60D50()
{
  sub_1C0D60CEC();
  return swift_deallocClassInstance();
}

uint64_t sub_1C0D60D74()
{
  return type metadata accessor for StateDatabase();
}

uint64_t type metadata accessor for StateDatabase()
{
  uint64_t result;

  result = qword_1ED761BE8;
  if (!qword_1ED761BE8)
    return swift_getSingletonMetadata();
  return result;
}

unint64_t sub_1C0D60DB4()
{
  return sub_1C0D60860();
}

uint64_t sub_1C0D60DD4()
{
  sub_1C0D60820();
  return swift_retain();
}

uint64_t sub_1C0D60DF0()
{
  return sub_1C0D60CC8();
}

uint64_t sub_1C0D60E04()
{
  return swift_retain();
}

uint64_t *sub_1C0D60E18(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  void (*v14)(char *, char *, uint64_t);
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v19 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v19 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = *a2;
    v8 = a2[1];
    sub_1C07B0E28(*a2, v8);
    *a1 = v7;
    a1[1] = v8;
    v9 = a2[3];
    a1[2] = a2[2];
    a1[3] = v9;
    v10 = *(int *)(a3 + 24);
    v11 = (char *)a1 + v10;
    v12 = (char *)a2 + v10;
    v13 = sub_1C106D1F8();
    v14 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16);
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    v14(v11, v12, v13);
    v15 = *(int *)(a3 + 28);
    v16 = (uint64_t *)((char *)a1 + v15);
    v17 = (uint64_t *)((char *)a2 + v15);
    v18 = v17[1];
    *v16 = *v17;
    v16[1] = v18;
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  }
  return a1;
}

uint64_t sub_1C0D60EF0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  sub_1C07B3374(*(_QWORD *)a1, *(_QWORD *)(a1 + 8));
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 24);
  v5 = sub_1C106D1F8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  return swift_bridgeObjectRelease();
}

uint64_t *sub_1C0D60F5C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  void (*v13)(char *, char *, uint64_t);
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;

  v6 = *a2;
  v7 = a2[1];
  sub_1C07B0E28(*a2, v7);
  *a1 = v6;
  a1[1] = v7;
  v8 = a2[3];
  a1[2] = a2[2];
  a1[3] = v8;
  v9 = *(int *)(a3 + 24);
  v10 = (char *)a1 + v9;
  v11 = (char *)a2 + v9;
  v12 = sub_1C106D1F8();
  v13 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  v13(v10, v11, v12);
  v14 = *(int *)(a3 + 28);
  v15 = (uint64_t *)((char *)a1 + v14);
  v16 = (uint64_t *)((char *)a2 + v14);
  v17 = v16[1];
  *v15 = *v16;
  v15[1] = v17;
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  return a1;
}

uint64_t *sub_1C0D61008(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;

  v6 = *a2;
  v7 = a2[1];
  sub_1C07B0E28(*a2, v7);
  v8 = *a1;
  v9 = a1[1];
  *a1 = v6;
  a1[1] = v7;
  sub_1C07B3374(v8, v9);
  a1[2] = a2[2];
  a1[3] = a2[3];
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  swift_bridgeObjectRelease();
  v10 = *(int *)(a3 + 24);
  v11 = (char *)a1 + v10;
  v12 = (char *)a2 + v10;
  v13 = sub_1C106D1F8();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 24))(v11, v12, v13);
  v14 = *(int *)(a3 + 28);
  v15 = (uint64_t *)((char *)a1 + v14);
  v16 = (uint64_t *)((char *)a2 + v14);
  *v15 = *v16;
  v15[1] = v16[1];
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *sub_1C0D610D4(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  __int128 v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = *(int *)(a3 + 24);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_1C106D1F8();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  *(_OWORD *)((char *)a1 + *(int *)(a3 + 28)) = *(_OWORD *)((char *)a2 + *(int *)(a3 + 28));
  return a1;
}

uint64_t *sub_1C0D6114C(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;

  v6 = *a1;
  v7 = a1[1];
  *(_OWORD *)a1 = *(_OWORD *)a2;
  sub_1C07B3374(v6, v7);
  v8 = *(_QWORD *)(a2 + 24);
  a1[2] = *(_QWORD *)(a2 + 16);
  a1[3] = v8;
  swift_bridgeObjectRelease();
  v9 = *(int *)(a3 + 24);
  v10 = (char *)a1 + v9;
  v11 = a2 + v9;
  v12 = sub_1C106D1F8();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 40))(v10, v11, v12);
  v13 = *(int *)(a3 + 28);
  v14 = (uint64_t *)((char *)a1 + v13);
  v15 = (uint64_t *)(a2 + v13);
  v17 = *v15;
  v16 = v15[1];
  *v14 = v17;
  v14[1] = v16;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1C0D611F0()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_1C0D611FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    sub_1C077671C();
  }
  else
  {
    v6 = sub_1C106D1F8();
    sub_1C07B2D80(a1 + *(int *)(a3 + 24), a2, v6);
  }
}

uint64_t sub_1C0D61268()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1C0D61274(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 24) = (a2 - 1);
  }
  else
  {
    v7 = sub_1C106D1F8();
    return sub_1C07B2D8C(v5 + *(int *)(a4 + 24), a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for TaskProgress()
{
  uint64_t result;

  result = qword_1ED7495A8;
  if (!qword_1ED7495A8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1C0D61318()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1C106D1F8();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void sub_1C0D61394(_QWORD *a1, _QWORD *a2)
{
  BOOL v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  BOOL v10;

  if ((MEMORY[0x1C3BA152C](*a1, a1[1], *a2, a2[1]) & 1) != 0
    && (a1[2] == a2[2] ? (v4 = a1[3] == a2[3]) : (v4 = 0),
        (v4 || (sub_1C1070CB4() & 1) != 0)
     && (v5 = type metadata accessor for TaskProgress(),
         (sub_1C08C72A0((uint64_t)a1 + *(int *)(v5 + 24), (uint64_t)a2 + *(int *)(v5 + 24)) & 1) != 0)
     && ((v6 = *(int *)(v5 + 28),
          v7 = *(_QWORD *)((char *)a1 + v6),
          v8 = *(_QWORD *)((char *)a1 + v6 + 8),
          v9 = (_QWORD *)((char *)a2 + v6),
          v7 == *v9)
       ? (v10 = v8 == v9[1])
       : (v10 = 0),
         !v10)))
  {
    sub_1C1070CB4();
  }
  else
  {
    sub_1C077671C();
  }
}

uint64_t sub_1C0D61450(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  BOOL v7;
  char v9;

  v2 = a1 == 0x6E656B6F74 && a2 == 0xE500000000000000;
  if (v2 || (sub_1C1070CB4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x614E656372756F73 && a2 == 0xEA0000000000656DLL;
    if (v6 || (sub_1C1070CB4() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      v7 = a1 == 0x6C43797469746E65 && a2 == 0xEB00000000737361;
      if (v7 || (sub_1C1070CB4() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else if (a1 == 0x6567617473 && a2 == 0xE500000000000000)
      {
        swift_bridgeObjectRelease();
        return 3;
      }
      else
      {
        v9 = sub_1C1070CB4();
        swift_bridgeObjectRelease();
        if ((v9 & 1) != 0)
          return 3;
        else
          return 4;
      }
    }
  }
}

uint64_t sub_1C0D61610(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1C0D61640 + 4 * byte_1C10B8AC0[a1]))(0x6E656B6F74, 0xE500000000000000);
}

uint64_t sub_1C0D61640()
{
  return 0x614E656372756F73;
}

uint64_t sub_1C0D6165C()
{
  return 0x6C43797469746E65;
}

uint64_t sub_1C0D6167C()
{
  return 0x6567617473;
}

uint64_t sub_1C0D6168C(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = sub_1C07ACF80(&qword_1EF6489E8);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  sub_1C0778564();
  v7 = v6 - v5;
  sub_1C07A9480(a1, a1[3]);
  sub_1C0D61E58();
  sub_1C1070EB8();
  sub_1C08C131C();
  sub_1C077D19C();
  if (!v1)
  {
    sub_1C07A149C(1);
    type metadata accessor for TaskProgress();
    sub_1C106D1F8();
    sub_1C07803B8(&qword_1ED759F50, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3BB08], MEMORY[0x1E0D3BB18]);
    sub_1C077D19C();
    sub_1C07A149C(3);
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(v7, v3);
}

uint64_t sub_1C0D61814@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __int128 v27;

  v3 = sub_1C106D1F8();
  v23 = *(_QWORD *)(v3 - 8);
  v24 = v3;
  MEMORY[0x1E0C80A78](v3);
  sub_1C0778564();
  v6 = v5 - v4;
  v25 = sub_1C07ACF80(&qword_1EF6489D8);
  v7 = *(_QWORD *)(v25 - 8);
  MEMORY[0x1E0C80A78](v25);
  sub_1C0778564();
  v10 = v9 - v8;
  v11 = type metadata accessor for TaskProgress();
  MEMORY[0x1E0C80A78](v11);
  sub_1C0778564();
  v14 = v13 - v12;
  sub_1C07A9480(a1, a1[3]);
  sub_1C0D61E58();
  sub_1C1070E94();
  if (v26)
    return _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)a1);
  sub_1C07FD0D8();
  sub_1C1070AE0();
  *(_OWORD *)v14 = v27;
  *(_QWORD *)(v14 + 16) = sub_1C079A184(1);
  *(_QWORD *)(v14 + 24) = v15;
  sub_1C07803B8(&qword_1ED759F60, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3BB08], MEMORY[0x1E0D3BB38]);
  sub_1C1070AE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v23 + 32))(v14 + *(int *)(v11 + 24), v6, v24);
  v16 = sub_1C079A184(3);
  v18 = v17;
  v19 = v16;
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v10, v25);
  v20 = (uint64_t *)(v14 + *(int *)(v11 + 28));
  *v20 = v19;
  v20[1] = v18;
  sub_1C0D61E94(v14, a2);
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)a1);
  return sub_1C0D61ED8(v14);
}

uint64_t sub_1C0D61ADC()
{
  unsigned __int8 *v0;

  return sub_1C0D61610(*v0);
}

uint64_t sub_1C0D61AE4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1C0D61450(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C0D61B08()
{
  sub_1C0D61E58();
  return sub_1C1070EE8();
}

uint64_t sub_1C0D61B30()
{
  sub_1C0D61E58();
  return sub_1C1070EF4();
}

uint64_t sub_1C0D61B58@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1C0D61814(a1, a2);
}

uint64_t sub_1C0D61B6C(_QWORD *a1)
{
  return sub_1C0D6168C(a1);
}

uint64_t sub_1C0D61B84()
{
  sub_1C07803B8(&qword_1EF6489D0, (uint64_t (*)(uint64_t))type metadata accessor for TaskProgress, (uint64_t)&unk_1C10B8C84);
  return sub_1C106BDDC();
}

uint64_t sub_1C0D61BEC()
{
  sub_1C07803B8(&qword_1EF6489C8, (uint64_t (*)(uint64_t))type metadata accessor for TaskProgress, (uint64_t)&unk_1C10B8BD8);
  return sub_1C106BFD4();
}

uint64_t sub_1C0D61C54()
{
  sub_1C07803B8(&qword_1EF6489C8, (uint64_t (*)(uint64_t))type metadata accessor for TaskProgress, (uint64_t)&unk_1C10B8BD8);
  return sub_1C106BFC8();
}

uint64_t sub_1C0D61CB0()
{
  sub_1C07803B8(&qword_1EF6489C8, (uint64_t (*)(uint64_t))type metadata accessor for TaskProgress, (uint64_t)&unk_1C10B8BD8);
  return sub_1C106BFBC();
}

uint64_t sub_1C0D61D0C()
{
  sub_1C07803B8(&qword_1EF6489F0, (uint64_t (*)(uint64_t))type metadata accessor for TaskProgress, (uint64_t)&unk_1C10B8C5C);
  return sub_1C106BD58();
}

uint64_t sub_1C0D61D64()
{
  return sub_1C07803B8(&qword_1EF6489B8, (uint64_t (*)(uint64_t))type metadata accessor for TaskProgress, (uint64_t)&unk_1C10B8B20);
}

uint64_t sub_1C0D61D90()
{
  return sub_1C07803B8(&qword_1ED749598, (uint64_t (*)(uint64_t))type metadata accessor for TaskProgress, (uint64_t)&unk_1C10B8CF4);
}

uint64_t sub_1C0D61DBC()
{
  return sub_1C07803B8(&qword_1EF6489C0, (uint64_t (*)(uint64_t))type metadata accessor for TaskProgress, (uint64_t)&unk_1C10B8B70);
}

uint64_t sub_1C0D61DE8(uint64_t a1)
{
  uint64_t result;

  result = sub_1C07803B8(&qword_1EF6489C8, (uint64_t (*)(uint64_t))type metadata accessor for TaskProgress, (uint64_t)&unk_1C10B8BD8);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1C0D61E24()
{
  uint64_t v0;

  v0 = *(_QWORD *)aTaskProgress;
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  return v0;
}

unint64_t sub_1C0D61E58()
{
  unint64_t result;

  result = qword_1EF6489E0;
  if (!qword_1EF6489E0)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10B8DE8, &type metadata for TaskProgress.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF6489E0);
  }
  return result;
}

uint64_t sub_1C0D61E94(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for TaskProgress();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C0D61ED8(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for TaskProgress();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t storeEnumTagSinglePayload for TaskProgress.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1C0D61F60 + 4 * byte_1C10B8AC9[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1C0D61F94 + 4 * byte_1C10B8AC4[v4]))();
}

uint64_t sub_1C0D61F94(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C0D61F9C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C0D61FA4);
  return result;
}

uint64_t sub_1C0D61FB0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C0D61FB8);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1C0D61FBC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C0D61FC4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for TaskProgress.CodingKeys()
{
  return &type metadata for TaskProgress.CodingKeys;
}

unint64_t sub_1C0D61FE4()
{
  unint64_t result;

  result = qword_1EF6489F8;
  if (!qword_1EF6489F8)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10B8DC0, &type metadata for TaskProgress.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF6489F8);
  }
  return result;
}

unint64_t sub_1C0D62024()
{
  unint64_t result;

  result = qword_1EF648A00;
  if (!qword_1EF648A00)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10B8D30, &type metadata for TaskProgress.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF648A00);
  }
  return result;
}

unint64_t sub_1C0D62064()
{
  unint64_t result;

  result = qword_1EF648A08;
  if (!qword_1EF648A08)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10B8D58, &type metadata for TaskProgress.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF648A08);
  }
  return result;
}

uint64_t StateStore.__allocating_init(config:)(uint64_t a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  StateStore.init(config:)(a1);
  return v2;
}

uint64_t StateStore.init(config:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v1 + OBJC_IVAR____TtC24IntelligencePlatformCore10StateStore_config;
  sub_1C083F944(a1, v1 + OBJC_IVAR____TtC24IntelligencePlatformCore10StateStore_config, (uint64_t (*)(_QWORD))type metadata accessor for Configuration);
  if (qword_1ED762D98 != -1)
    swift_once();
  swift_retain();
  v5 = sub_1C0CBD8DC();
  swift_release();
  sub_1C07B2018(a1, (uint64_t (*)(_QWORD))type metadata accessor for Configuration);
  if (v2)
  {
    sub_1C07B2018(v4, (uint64_t (*)(_QWORD))type metadata accessor for Configuration);
    swift_deallocPartialClassInstance();
  }
  else
  {
    *(_QWORD *)(v1 + 16) = v5;
  }
  return v1;
}

uint64_t StateStore.deinit()
{
  uint64_t v0;

  swift_release();
  sub_1C07B2018(v0 + OBJC_IVAR____TtC24IntelligencePlatformCore10StateStore_config, (uint64_t (*)(_QWORD))type metadata accessor for Configuration);
  return v0;
}

uint64_t StateStore.__deallocating_deinit()
{
  uint64_t v0;

  swift_release();
  sub_1C07B2018(v0 + OBJC_IVAR____TtC24IntelligencePlatformCore10StateStore_config, (uint64_t (*)(_QWORD))type metadata accessor for Configuration);
  return swift_deallocClassInstance();
}

_UNKNOWN **sub_1C0D62260()
{
  return &off_1E7A30468;
}

uint64_t sub_1C0D6226C()
{
  return type metadata accessor for StateStore();
}

uint64_t type metadata accessor for StateStore()
{
  uint64_t result;

  result = qword_1ED75A0F0;
  if (!qword_1ED75A0F0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t method lookup function for StateStore()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of StateStore.__allocating_init(config:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

void sub_1C0D622D0()
{
  swift_retain();
  sub_1C0BB99E0((uint64_t)sub_1C0D62320, 0);
  swift_release();
  sub_1C0778534();
}

uint64_t sub_1C0D62320@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t result;
  uint64_t v8;
  uint64_t inited;
  uint64_t v10;
  uint64_t v11;
  _BYTE v12[80];

  v3 = sub_1C07ACF80(&qword_1ED748258);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = &v12[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  type metadata accessor for TaskProgress();
  sub_1C0D62564(&qword_1ED749598);
  sub_1C106B944();
  sub_1C07BB218(&qword_1ED748250, &qword_1ED748258);
  sub_1C0D62564(&qword_1ED7495A0);
  sub_1C106BAAC();
  result = (*(uint64_t (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
  if (!v1)
  {
    swift_retain();
    sub_1C07ACF80(&qword_1ED748218);
    sub_1C07BB218(&qword_1ED748210, &qword_1ED748218);
    v8 = sub_1C106F970();
    sub_1C07ACF80(&qword_1ED761310);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1C1079220;
    *(_QWORD *)(inited + 32) = 0x6B6F54206B736154;
    *(_QWORD *)(inited + 40) = 0xEB00000000736E65;
    v10 = sub_1C0D627D4(v8);
    swift_bridgeObjectRelease();
    *(_QWORD *)(inited + 72) = sub_1C07ACF80(&qword_1ED75E810);
    *(_QWORD *)(inited + 48) = v10;
    v11 = sub_1C106F97C();
    result = swift_release();
    *a1 = v11;
  }
  return result;
}

void sub_1C0D62564(_QWORD *a1)
{
  if (!*a1)
  {
    type metadata accessor for TaskProgress();
    sub_1C077D8A0();
  }
  sub_1C0778534();
}

uint64_t sub_1C0D62598@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  type metadata accessor for TaskProgress();
  result = sub_1C106D0FC();
  *a1 = result;
  a1[1] = v3;
  return result;
}

void sub_1C0D625E0(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v5 = type metadata accessor for TaskProgress();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *a1;
  v10 = *(_QWORD *)(*a1 + 16);
  v11 = MEMORY[0x1E0DEE9D8];
  if (v10)
  {
    v20 = a2;
    v21 = v2;
    v25 = MEMORY[0x1E0DEE9D8];
    sub_1C09D30E0();
    v12 = v9 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
    v22 = *(_QWORD *)(v6 + 72);
    do
    {
      sub_1C083F944(v12, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for TaskProgress);
      v13 = &v8[*(int *)(v5 + 28)];
      v14 = *((_QWORD *)v13 + 1);
      v23 = *(_QWORD *)v13;
      v24 = v14;
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      sub_1C106FC94();
      sub_1C106D0FC();
      sub_1C106FC94();
      swift_bridgeObjectRelease();
      sub_1C106FC94();
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      sub_1C106FC94();
      swift_bridgeObjectRelease();
      v16 = v23;
      v15 = v24;
      sub_1C07B2018((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for TaskProgress);
      v11 = v25;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1C09D30E0();
        v11 = v25;
      }
      v17 = *(_QWORD *)(v11 + 16);
      if (v17 >= *(_QWORD *)(v11 + 24) >> 1)
      {
        sub_1C09D30E0();
        v11 = v25;
      }
      *(_QWORD *)(v11 + 16) = v17 + 1;
      v18 = v11 + 16 * v17;
      *(_QWORD *)(v18 + 32) = v16;
      *(_QWORD *)(v18 + 40) = v15;
      v12 += v22;
      --v10;
    }
    while (v10);
    a2 = v20;
  }
  *a2 = v11;
}

uint64_t sub_1C0D627D4(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;
  _QWORD *v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t i;
  BOOL v15;
  unint64_t v16;
  int64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  sub_1C07ACF80(&qword_1ED74D450);
  result = sub_1C10709CC();
  v4 = (_QWORD *)result;
  v5 = 0;
  v26 = a1;
  v8 = *(_QWORD *)(a1 + 64);
  v7 = a1 + 64;
  v6 = v8;
  v9 = 1 << *(_BYTE *)(v7 - 32);
  v10 = -1;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  v11 = v10 & v6;
  v24 = v7;
  v25 = (unint64_t)(v9 + 63) >> 6;
  v12 = result + 64;
  if ((v10 & v6) == 0)
    goto LABEL_5;
LABEL_4:
  v13 = __clz(__rbit64(v11));
  v11 &= v11 - 1;
  for (i = v13 | (v5 << 6); ; i = __clz(__rbit64(v16)) + (v5 << 6))
  {
    v18 = (uint64_t *)(*(_QWORD *)(v26 + 48) + 16 * i);
    v19 = *v18;
    v20 = v18[1];
    v28 = *(_QWORD *)(*(_QWORD *)(v26 + 56) + 8 * i);
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    sub_1C0D625E0(&v28, &v27);
    result = swift_bridgeObjectRelease();
    if (v1)
    {
      swift_bridgeObjectRelease();
      swift_release();
      return (uint64_t)v4;
    }
    *(_QWORD *)(v12 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    v21 = (_QWORD *)(v4[6] + 16 * i);
    *v21 = v19;
    v21[1] = v20;
    *(_QWORD *)(v4[7] + 8 * i) = v27;
    v22 = v4[2];
    v15 = __OFADD__(v22, 1);
    v23 = v22 + 1;
    if (v15)
    {
      __break(1u);
LABEL_27:
      __break(1u);
      goto LABEL_28;
    }
    v4[2] = v23;
    if (v11)
      goto LABEL_4;
LABEL_5:
    v15 = __OFADD__(v5++, 1);
    if (v15)
      goto LABEL_27;
    if (v5 >= v25)
      return (uint64_t)v4;
    v16 = *(_QWORD *)(v24 + 8 * v5);
    if (!v16)
      break;
LABEL_15:
    v11 = (v16 - 1) & v16;
  }
  v17 = v5 + 1;
  if (v5 + 1 >= v25)
    return (uint64_t)v4;
  v16 = *(_QWORD *)(v24 + 8 * v17);
  if (v16)
    goto LABEL_14;
  v17 = v5 + 2;
  if (v5 + 2 >= v25)
    return (uint64_t)v4;
  v16 = *(_QWORD *)(v24 + 8 * v17);
  if (v16)
    goto LABEL_14;
  v17 = v5 + 3;
  if (v5 + 3 >= v25)
    return (uint64_t)v4;
  v16 = *(_QWORD *)(v24 + 8 * v17);
  if (v16)
  {
LABEL_14:
    v5 = v17;
    goto LABEL_15;
  }
  while (1)
  {
    v5 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v5 >= v25)
      return (uint64_t)v4;
    v16 = *(_QWORD *)(v24 + 8 * v5);
    ++v17;
    if (v16)
      goto LABEL_15;
  }
LABEL_28:
  __break(1u);
  return result;
}

void sub_1C0D629FC(unint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v20[2];

  v5 = sub_1C106F874();
  MEMORY[0x1E0C80A78](v5);
  sub_1C077AE40();
  sub_1C078670C();
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v6);
  sub_1C077AE40();
  v7 = sub_1C0785264();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  sub_1C079BA50();
  sub_1C07B98E0();
  MEMORY[0x1E0C80A78](v9);
  sub_1C078835C();
  sub_1C078CC08();
  sub_1C106FC94();
  v10 = v20[1];
  sub_1C106FB44();
  sub_1C106FB20();
  sub_1C079C8C8();
  if (a1 >> 60 != 15)
  {
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v3, a2, v7);
    sub_1C0D65C24((uint64_t)&qword_1ED762B30);
    sub_1C079F87C();
    __asm { BR              X10 }
  }
  v11 = v20[0];
  if (qword_1ED761458 != -1)
    swift_once();
  v12 = sub_1C106F544();
  sub_1C079E000(v12, (uint64_t)qword_1ED78D818);
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  v13 = sub_1C106F538();
  v14 = sub_1C1070390();
  if (os_log_type_enabled(v13, v14))
  {
    v15 = (uint8_t *)sub_1C0775854();
    v20[0] = sub_1C0775854();
    *(_DWORD *)v15 = 136380675;
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    v16 = sub_1C0788DAC(v11, v10, v20);
    sub_1C07AA1F0(v16);
    sub_1C10705AC();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1C0771000, v13, v14, "StaticKnowledgeAsset: failed to encode string as UTF8 data: %{private}s", v15, 0xCu);
    swift_arrayDestroy();
    sub_1C0776778();
  }

  swift_bridgeObjectRelease_n();
  v17 = sub_1C106E590();
  sub_1C07B2D8C(a3, 1, 1, v17);
  sub_1C0776760();
}

void sub_1C0D62D94(unint64_t a1@<X1>, uint64_t a2@<X4>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v20[2];

  v5 = sub_1C106F874();
  MEMORY[0x1E0C80A78](v5);
  sub_1C077AE40();
  sub_1C078670C();
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v6);
  sub_1C077AE40();
  v7 = sub_1C0785264();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  sub_1C079BA50();
  sub_1C07B98E0();
  MEMORY[0x1E0C80A78](v9);
  sub_1C078835C();
  sub_1C078CC08();
  sub_1C106FC94();
  sub_1C078CC08();
  sub_1C106FC94();
  v10 = v20[1];
  sub_1C106FB44();
  sub_1C106FB20();
  sub_1C079C8C8();
  if (a1 >> 60 != 15)
  {
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v3, a2, v7);
    sub_1C0D65C24((uint64_t)&qword_1ED762B30);
    sub_1C079F87C();
    __asm { BR              X10 }
  }
  v11 = v20[0];
  if (qword_1ED761458 != -1)
    swift_once();
  v12 = sub_1C106F544();
  sub_1C079E000(v12, (uint64_t)qword_1ED78D818);
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  v13 = sub_1C106F538();
  v14 = sub_1C1070390();
  if (os_log_type_enabled(v13, v14))
  {
    v15 = (uint8_t *)sub_1C0775854();
    v20[0] = sub_1C0775854();
    *(_DWORD *)v15 = 136380675;
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    v16 = sub_1C0788DAC(v11, v10, v20);
    sub_1C07AA1F0(v16);
    sub_1C10705AC();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1C0771000, v13, v14, "StaticKnowledgeAsset: failed to encode string as UTF8 data: %{private}s", v15, 0xCu);
    swift_arrayDestroy();
    sub_1C0776778();
  }

  swift_bridgeObjectRelease_n();
  v17 = sub_1C106EB24();
  sub_1C07B2D8C(a3, 1, 1, v17);
  sub_1C0776760();
}

uint64_t sub_1C0D63138(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  char v8;

  v2 = a1 == 1701667182 && a2 == 0xE400000000000000;
  if (v2 || (sub_1C1070CB4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 1701869940 && a2 == 0xE400000000000000;
    if (v6 || (sub_1C1070CB4() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0x4665727574616566 && a2 == 0xEB0000000067616CLL)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      v8 = sub_1C1070CB4();
      swift_bridgeObjectRelease();
      if ((v8 & 1) != 0)
        return 2;
      else
        return 3;
    }
  }
}

uint64_t sub_1C0D63284(char a1)
{
  if (!a1)
    return 1701667182;
  if (a1 == 1)
    return 1701869940;
  return 0x4665727574616566;
}

void sub_1C0D632D4(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;

  sub_1C07ACF80(&qword_1EF648A90);
  sub_1C0778688();
  MEMORY[0x1E0C80A78](v3);
  sub_1C07A9480(a1, a1[3]);
  sub_1C0D66BDC();
  sub_1C078D65C();
  sub_1C077C330();
  if (!v1)
  {
    sub_1C0D66C9C();
    sub_1C0794F9C();
    type metadata accessor for StaticKnowledgeAssetMetadataInManifest(0);
    sub_1C07AAAC0();
    sub_1C0D65C24((uint64_t)&unk_1EF648A98);
    sub_1C0775C5C();
  }
  sub_1C0781B28();
  sub_1C0797DE0();
}

void sub_1C0D63410(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, __int16 a11, char a12)
{
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  sub_1C077AE5C();
  v15 = v14;
  v28 = v16;
  sub_1C07ACF80(&qword_1ED7625F8);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v17);
  sub_1C0778564();
  v20 = v19 - v18;
  v29 = sub_1C07ACF80(&qword_1ED74D470);
  v21 = *(_QWORD *)(v29 - 8);
  MEMORY[0x1E0C80A78](v29);
  sub_1C0779614();
  v22 = type metadata accessor for StaticKnowledgeAssetMetadataInManifest(0);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v23);
  sub_1C0778564();
  v26 = v25 - v24;
  sub_1C07A9480(v15, v15[3]);
  sub_1C0D66BDC();
  sub_1C1070E94();
  if (v12)
  {
    sub_1C079EEE4();
  }
  else
  {
    *(_QWORD *)v26 = sub_1C1070AA4();
    *(_QWORD *)(v26 + 8) = v27;
    sub_1C0D66C18();
    sub_1C1070AE0();
    *(_BYTE *)(v26 + 16) = a12;
    sub_1C07AAAC0();
    sub_1C0D65C24((uint64_t)&unk_1ED7625F0);
    sub_1C1070A8C();
    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v13, v29);
    sub_1C0D66C54(v20, v26 + *(int *)(v22 + 24));
    sub_1C083F944(v26, v28, type metadata accessor for StaticKnowledgeAssetMetadataInManifest);
    sub_1C079EEE4();
    sub_1C07B2018(v26, type metadata accessor for StaticKnowledgeAssetMetadataInManifest);
  }
  sub_1C07757D0();
}

uint64_t sub_1C0D6363C()
{
  char *v0;

  return sub_1C0D63284(*v0);
}

uint64_t sub_1C0D63644@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1C0D63138(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C0D63668()
{
  sub_1C0D66BDC();
  return sub_1C1070EE8();
}

uint64_t sub_1C0D63690()
{
  sub_1C0D66BDC();
  return sub_1C1070EF4();
}

void sub_1C0D636B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t vars0;
  _BYTE vars8[7];

  sub_1C0D63410(a1, a2, a3, a4, a5, a6, a7, a8, vars0, *(int *)vars8, *(__int16 *)&vars8[4], vars8[6]);
}

void sub_1C0D636CC(_QWORD *a1)
{
  sub_1C0D632D4(a1);
}

uint64_t sub_1C0D636E0()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  sub_1C07ACF80((uint64_t *)&unk_1ED7481E0);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)&v6 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_1C07ACF80(&qword_1ED748228);
  sub_1C0800A9C(v3, qword_1ED78CB30);
  sub_1C079E000(v3, (uint64_t)qword_1ED78CB30);
  type metadata accessor for StaticKnowledgeAssetMetadata(0);
  type metadata accessor for StaticKnowledgeTriple();
  v4 = sub_1C106B440();
  sub_1C07B2D8C((uint64_t)v2, 1, 1, v4);
  sub_1C0D65C24((uint64_t)&qword_1ED7605D8);
  sub_1C0D65C24((uint64_t)&qword_1ED75C040);
  sub_1C106B98C();
  return sub_1C0D65C5C((uint64_t)v2);
}

uint64_t sub_1C0D63818(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  BOOL v7;
  BOOL v8;
  char v10;

  v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_1C1070CB4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 1701667182 && a2 == 0xE400000000000000;
    if (v6 || (sub_1C1070CB4() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      v7 = a1 == 0x6E6F6973726576 && a2 == 0xE700000000000000;
      if (v7 || (sub_1C1070CB4() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else
      {
        v8 = a1 == 1701869940 && a2 == 0xE400000000000000;
        if (v8 || (sub_1C1070CB4() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 3;
        }
        else if (a1 == 0x4665727574616566 && a2 == 0xEB0000000067616CLL)
        {
          swift_bridgeObjectRelease();
          return 4;
        }
        else
        {
          v10 = sub_1C1070CB4();
          swift_bridgeObjectRelease();
          if ((v10 & 1) != 0)
            return 4;
          else
            return 5;
        }
      }
    }
  }
}

uint64_t sub_1C0D63A04(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1C0D63A2C + 4 * byte_1C10B8E80[a1]))(25705, 0xE200000000000000);
}

uint64_t sub_1C0D63A2C()
{
  return 1701667182;
}

uint64_t sub_1C0D63A3C()
{
  return 0x6E6F6973726576;
}

uint64_t sub_1C0D63A54()
{
  return 1701869940;
}

uint64_t sub_1C0D63A64()
{
  return 0x4665727574616566;
}

void sub_1C0D63A84(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;

  sub_1C07ACF80(&qword_1ED748140);
  sub_1C0778688();
  MEMORY[0x1E0C80A78](v3);
  sub_1C07A9480(a1, a1[3]);
  sub_1C0D66CD8();
  sub_1C078D65C();
  sub_1C1070B70();
  if (!v1)
  {
    sub_1C077C330();
    sub_1C0790AD4();
    sub_1C0D66C9C();
    sub_1C0794F9C();
    type metadata accessor for StaticKnowledgeAssetMetadata(0);
    sub_1C07AAAC0();
    sub_1C0D65C24((uint64_t)&unk_1EF648A98);
    sub_1C0775C5C();
  }
  sub_1C0781B28();
  sub_1C0797DE0();
}

void sub_1C0D63C0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, char a11)
{
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  sub_1C077AE5C();
  v14 = v13;
  v23 = v15;
  sub_1C07ACF80(&qword_1ED7625F8);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v16);
  sub_1C0779614();
  v24 = sub_1C07ACF80(&qword_1ED7606A8);
  MEMORY[0x1E0C80A78](v24);
  sub_1C0778564();
  v17 = type metadata accessor for StaticKnowledgeAssetMetadata(0);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v18);
  sub_1C077AE40();
  v20 = v19;
  sub_1C07A9480(v14, v14[3]);
  sub_1C0D66CD8();
  sub_1C1070E94();
  if (v11)
  {
    _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v14);
  }
  else
  {
    sub_1C07AB138();
    *(_QWORD *)v20 = sub_1C1070A98();
    *(_BYTE *)(v20 + 8) = v21 & 1;
    sub_1C07AB138();
    *(_QWORD *)(v20 + 16) = sub_1C1070AA4();
    *(_QWORD *)(v20 + 24) = v22;
    sub_1C07AB138();
    *(_QWORD *)(v20 + 32) = sub_1C1070AD4();
    sub_1C0D66C18();
    sub_1C07AB138();
    sub_1C1070AE0();
    *(_BYTE *)(v20 + 40) = a11;
    sub_1C07AAAC0();
    sub_1C0D65C24((uint64_t)&unk_1ED7625F0);
    sub_1C07AB138();
    sub_1C1070A8C();
    sub_1C077C2F4();
    sub_1C0D66C54(v12, v20 + *(int *)(v17 + 32));
    sub_1C083F944(v20, v23, type metadata accessor for StaticKnowledgeAssetMetadata);
    _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v14);
    sub_1C07B2018(v20, type metadata accessor for StaticKnowledgeAssetMetadata);
  }
  sub_1C07757D0();
}

uint64_t sub_1C0D63E7C()
{
  unsigned __int8 *v0;

  return sub_1C0D63A04(*v0);
}

uint64_t sub_1C0D63E84@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1C0D63818(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C0D63EA8()
{
  sub_1C0D66CD8();
  return sub_1C1070EE8();
}

uint64_t sub_1C0D63ED0()
{
  sub_1C0D66CD8();
  return sub_1C1070EF4();
}

void sub_1C0D63EF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t vars0;
  _BYTE vars8[5];

  sub_1C0D63C0C(a1, a2, a3, a4, a5, a6, a7, a8, vars0, *(int *)vars8, vars8[4]);
}

void sub_1C0D63F0C(_QWORD *a1)
{
  sub_1C0D63A84(a1);
}

uint64_t sub_1C0D63F20()
{
  return sub_1C106C2BC();
}

uint64_t sub_1C0D63F34()
{
  return sub_1C106C298();
}

uint64_t sub_1C0D63F48()
{
  unint64_t v0;

  sub_1C1070A2C();
  sub_1C0780490();
  if (v0 >= 5)
    return 5;
  else
    return v0;
}

uint64_t sub_1C0D63F88(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1C0D63FB0 + 4 * byte_1C10B8E85[a1]))(25705, 0xE200000000000000);
}

uint64_t sub_1C0D63FB0()
{
  return 1701667182;
}

uint64_t sub_1C0D63FC0()
{
  return 0x6E6F6973726576;
}

uint64_t sub_1C0D63FD8()
{
  return 1701869940;
}

uint64_t sub_1C0D63FE8()
{
  return 0x4665727574616566;
}

uint64_t sub_1C0D64008()
{
  uint64_t v0;
  unsigned int v1;

  sub_1C1070A2C();
  sub_1C0780490();
  if (v0 == 1)
    v1 = 1;
  else
    v1 = 2;
  if (v0)
    return v1;
  else
    return 0;
}

uint64_t sub_1C0D64050(char a1)
{
  if ((a1 & 1) != 0)
    return 0x7473696C70;
  else
    return 1852797802;
}

uint64_t sub_1C0D6407C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  BOOL v7;
  BOOL v8;
  char v10;

  v2 = a1 == 0x6E656469666E6F63 && a2 == 0xEA00000000006563;
  if (v2 || (sub_1C1070CB4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x7463656A626FLL && a2 == 0xE600000000000000;
    if (v6 || (sub_1C1070CB4() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      v7 = a1 == 0x7461636964657270 && a2 == 0xE900000000000065;
      if (v7 || (sub_1C1070CB4() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else
      {
        v8 = a1 == 0x6E6F6974616C6572 && a2 == 0xEE00644970696873;
        if (v8 || (sub_1C1070CB4() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 3;
        }
        else if (a1 == 0xD000000000000015 && a2 == 0x80000001C10DE890 || (sub_1C1070CB4() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 4;
        }
        else if (a1 == 0x7463656A627573 && a2 == 0xE700000000000000)
        {
          swift_bridgeObjectRelease();
          return 5;
        }
        else
        {
          v10 = sub_1C1070CB4();
          swift_bridgeObjectRelease();
          if ((v10 & 1) != 0)
            return 5;
          else
            return 6;
        }
      }
    }
  }
}

uint64_t sub_1C0D64318(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1C0D64350 + 4 * byte_1C10B8E8A[a1]))(0x6E656469666E6F63, 0xEA00000000006563);
}

uint64_t sub_1C0D64350()
{
  return 0x7463656A626FLL;
}

uint64_t sub_1C0D64364()
{
  return 0x7461636964657270;
}

uint64_t sub_1C0D64380()
{
  return 0x6E6F6974616C6572;
}

unint64_t sub_1C0D643A4()
{
  return 0xD000000000000015;
}

uint64_t sub_1C0D643C0()
{
  return 0x7463656A627573;
}

uint64_t sub_1C0D643D8()
{
  sub_1C0D65C24((uint64_t)&qword_1ED7605E8);
  return sub_1C106BDDC();
}

uint64_t sub_1C0D64440()
{
  sub_1C0D65C24((uint64_t)&unk_1ED747EE8);
  return sub_1C106BD58();
}

uint64_t sub_1C0D64498()
{
  return 0x615F636974617473;
}

void sub_1C0D644BC()
{
  sub_1C08C48E8();
}

void sub_1C0D644C8()
{
  unsigned __int8 *v0;

  sub_1C0A54128(*v0);
}

void sub_1C0D644D0()
{
  sub_1C08C91A4();
}

void sub_1C0D644D8(uint64_t a1)
{
  unsigned __int8 *v1;

  sub_1C0A544E4(a1, *v1);
}

uint64_t sub_1C0D644E0@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1C0D63F48();
  *a1 = result;
  return result;
}

uint64_t sub_1C0D6450C@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_1C0D63F88(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1C0D64534()
{
  sub_1C0D66BA0();
  return sub_1C106BEE4();
}

uint64_t sub_1C0D6456C()
{
  sub_1C0A6BE60();
  return sub_1C106BECC();
}

uint64_t sub_1C0D645A4()
{
  sub_1C0A6BDE8();
  return sub_1C106C16C();
}

uint64_t sub_1C0D645DC()
{
  sub_1C0A6BDE8();
  return sub_1C106C160();
}

void sub_1C0D64614(char *a1, char *a2)
{
  sub_1C08C5160(*a1, *a2);
}

void sub_1C0D64620()
{
  sub_1C0A54134();
}

uint64_t sub_1C0D64628()
{
  return sub_1C08C95E0();
}

void sub_1C0D64630()
{
  sub_1C0A5458C();
}

uint64_t sub_1C0D64638@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1C0D64008();
  *a1 = result;
  return result;
}

uint64_t sub_1C0D64664@<X0>(uint64_t *a1@<X8>)
{
  char *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_1C0D64050(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1C0D6468C()
{
  sub_1C0D67134();
  return sub_1C106FE8C();
}

uint64_t sub_1C0D646E8()
{
  sub_1C0D67134();
  return sub_1C106FE50();
}

uint64_t sub_1C0D64734()
{
  unsigned __int8 *v0;

  return sub_1C0D64318(*v0);
}

uint64_t sub_1C0D6473C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1C0D6407C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C0D64760()
{
  sub_1C0D64938();
  return sub_1C1070EE8();
}

uint64_t sub_1C0D64788()
{
  sub_1C0D64938();
  return sub_1C1070EF4();
}

void StaticKnowledgeAssetTriple.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;

  sub_1C07ACF80(&qword_1EF648A48);
  sub_1C0778688();
  MEMORY[0x1E0C80A78](v3);
  sub_1C0778544();
  sub_1C07A9480(a1, a1[3]);
  sub_1C0D64938();
  sub_1C078D65C();
  sub_1C1070B94();
  if (!v1)
  {
    sub_1C077C330();
    sub_1C077C330();
    sub_1C0780C10();
    sub_1C0780C10();
    sub_1C077C330();
  }
  sub_1C0781B28();
  sub_1C077F074();
}

unint64_t sub_1C0D64938()
{
  unint64_t result;

  result = qword_1ED759D28;
  if (!qword_1ED759D28)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10B9170, &type metadata for StaticKnowledgeAssetTriple.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED759D28);
  }
  return result;
}

void StaticKnowledgeAssetTriple.init(from:)(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v7 = sub_1C07ACF80(&qword_1ED759D98);
  sub_1C0778688();
  MEMORY[0x1E0C80A78](v8);
  sub_1C0779614();
  sub_1C07A9480(a1, a1[3]);
  sub_1C0D64938();
  sub_1C1070E94();
  if (v2)
  {
    sub_1C0781028();
  }
  else
  {
    sub_1C1070ABC();
    v10 = v9;
    v11 = sub_1C0793FD8();
    v13 = v12;
    sub_1C077EB44();
    v27 = sub_1C0793FD8();
    v28 = v11;
    v14 = v13;
    v16 = v15;
    sub_1C077EB44();
    v30 = v16;
    v26 = sub_1C07B49E8();
    v29 = v17;
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    v18 = sub_1C07B49E8();
    v20 = v19;
    v25 = v18;
    sub_1C077EB44();
    v21 = sub_1C0793FD8();
    v23 = v22;
    v24 = v21;
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v7);
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    sub_1C077AE90();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C077B5B4();
    *a2 = v10;
    a2[1] = v28;
    a2[2] = v14;
    a2[3] = v27;
    a2[4] = v30;
    a2[5] = v26;
    a2[6] = v29;
    a2[7] = v25;
    a2[8] = v20;
    a2[9] = v24;
    a2[10] = v23;
    sub_1C0781028();
    swift_bridgeObjectRelease();
    sub_1C0775834();
    sub_1C077B5B4();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  sub_1C077F074();
}

void sub_1C0D64C58(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  StaticKnowledgeAssetTriple.init(from:)(a1, a2);
}

void sub_1C0D64C6C(_QWORD *a1)
{
  StaticKnowledgeAssetTriple.encode(to:)(a1);
}

uint64_t StaticKnowledgeAsset.triples.getter()
{
  return _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
}

uint64_t StaticKnowledgeAsset.globalEntities.getter()
{
  return _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
}

uint64_t sub_1C0D64C90(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  BOOL v7;
  char v9;

  v2 = a1 == 1701667182 && a2 == 0xE400000000000000;
  if (v2 || (sub_1C1070CB4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x6E6F6973726576 && a2 == 0xE700000000000000;
    if (v6 || (sub_1C1070CB4() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      v7 = a1 == 0x73656C70697274 && a2 == 0xE700000000000000;
      if (v7 || (sub_1C1070CB4() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else if (a1 == 0x6E456C61626F6C67 && a2 == 0xEE00736569746974)
      {
        swift_bridgeObjectRelease();
        return 3;
      }
      else
      {
        v9 = sub_1C1070CB4();
        swift_bridgeObjectRelease();
        if ((v9 & 1) != 0)
          return 3;
        else
          return 4;
      }
    }
  }
}

uint64_t sub_1C0D64E58(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1C0D64E84 + 4 * byte_1C10B8E90[a1]))(1701667182, 0xE400000000000000);
}

uint64_t sub_1C0D64E84()
{
  return 0x6E6F6973726576;
}

uint64_t sub_1C0D64E9C()
{
  return 0x73656C70697274;
}

uint64_t sub_1C0D64EB4()
{
  return 0x6E456C61626F6C67;
}

uint64_t sub_1C0D64ED8()
{
  unsigned __int8 *v0;

  return sub_1C0D64E58(*v0);
}

uint64_t sub_1C0D64EE0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1C0D64C90(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C0D64F04()
{
  sub_1C0D650E8();
  return sub_1C1070EE8();
}

uint64_t sub_1C0D64F2C()
{
  sub_1C0D650E8();
  return sub_1C1070EF4();
}

void StaticKnowledgeAsset.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  sub_1C077AE5C();
  v3 = v2;
  v4 = sub_1C07ACF80(&qword_1EF648A50);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  sub_1C0778544();
  sub_1C07A9480(v3, v3[3]);
  sub_1C0D650E8();
  sub_1C1070EB8();
  sub_1C1070B7C();
  if (!v0)
  {
    sub_1C0790AD4();
    sub_1C07ACF80(&qword_1ED759D58);
    sub_1C0D65408((uint64_t)&unk_1EF648A58);
    sub_1C079E900();
    sub_1C07ACF80(&qword_1ED760650);
    sub_1C0D6549C((uint64_t)&unk_1EF648A68);
    sub_1C079E900();
  }
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v1, v4);
  sub_1C07757D0();
}

unint64_t sub_1C0D650E8()
{
  unint64_t result;

  result = qword_1ED759CE0;
  if (!qword_1ED759CE0)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10B9120, &type metadata for StaticKnowledgeAsset.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED759CE0);
  }
  return result;
}

unint64_t sub_1C0D65124()
{
  unint64_t result;

  result = qword_1EF648A60;
  if (!qword_1EF648A60)
  {
    result = MEMORY[0x1C3BA8174](&protocol conformance descriptor for StaticKnowledgeAssetTriple, &type metadata for StaticKnowledgeAssetTriple);
    atomic_store(result, (unint64_t *)&qword_1EF648A60);
  }
  return result;
}

unint64_t sub_1C0D65160()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD v4[2];

  result = qword_1EF648A70;
  if (!qword_1EF648A70)
  {
    v1 = sub_1C07D4BEC(&qword_1ED75E810);
    v2 = MEMORY[0x1E0DEA970];
    sub_1C0CAD138((uint64_t)&qword_1ED7560B8);
    v4[0] = v2;
    v4[1] = v3;
    result = MEMORY[0x1C3BA8174](MEMORY[0x1E0DEA0B8], v1, v4);
    atomic_store(result, (unint64_t *)&qword_1EF648A70);
  }
  return result;
}

void StaticKnowledgeAsset.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t *v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;

  sub_1C077AE5C();
  v12 = v11;
  v14 = v13;
  v15 = sub_1C07ACF80(&qword_1ED759D90);
  MEMORY[0x1E0C80A78](v15);
  sub_1C0778564();
  sub_1C07A9480(v12, v12[3]);
  sub_1C0D650E8();
  sub_1C1070E94();
  if (v10)
  {
    sub_1C0775880();
  }
  else
  {
    sub_1C07AB8E8();
    v16 = sub_1C1070AA4();
    v18 = v17;
    LOBYTE(a10) = 1;
    sub_1C077EB44();
    sub_1C07AB8E8();
    v20 = sub_1C1070AD4();
    sub_1C07ACF80(&qword_1ED759D58);
    sub_1C0D65408((uint64_t)&unk_1ED759D60);
    sub_1C07B7D60();
    sub_1C07ACF80(&qword_1ED760650);
    v19 = sub_1C0D6549C((uint64_t)&unk_1ED760658);
    sub_1C077AE90();
    sub_1C07B7D60();
    sub_1C078F1D4();
    if (v19)
    {
      sub_1C077B5B4();
      sub_1C0775834();
      sub_1C0775880();
      sub_1C077B5B4();
    }
    else
    {
      sub_1C077AE90();
      *v14 = v16;
      v14[1] = v18;
      v14[2] = v20;
      v14[3] = a10;
      v14[4] = a10;
      sub_1C0775880();
      swift_bridgeObjectRelease();
      sub_1C0775834();
    }
    swift_bridgeObjectRelease();
  }
  sub_1C07757D0();
}

void sub_1C0D65408(uint64_t a1)
{
  unint64_t *v1;
  uint64_t (*v2)(void);
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);
  uint64_t v6;
  uint64_t v7;

  if (!sub_1C0780FEC(a1))
  {
    v4 = v3;
    v5 = v2;
    v6 = sub_1C07D4BEC(&qword_1ED759D58);
    v7 = v5();
    atomic_store(MEMORY[0x1C3BA8174](v4, v6, &v7), v1);
  }
  sub_1C0776784();
}

unint64_t sub_1C0D65460()
{
  unint64_t result;

  result = qword_1ED759D40;
  if (!qword_1ED759D40)
  {
    result = MEMORY[0x1C3BA8174](&protocol conformance descriptor for StaticKnowledgeAssetTriple, &type metadata for StaticKnowledgeAssetTriple);
    atomic_store(result, (unint64_t *)&qword_1ED759D40);
  }
  return result;
}

unint64_t sub_1C0D6549C(uint64_t a1)
{
  unint64_t *v1;
  unint64_t result;
  uint64_t (*v3)(void);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(void);
  uint64_t v9;
  _QWORD v10[2];

  result = sub_1C0780FEC(a1);
  if (!result)
  {
    v6 = v5;
    v7 = v4;
    v8 = v3;
    v9 = sub_1C07D4BEC(&qword_1ED760650);
    v10[0] = v7;
    v10[1] = v8();
    result = MEMORY[0x1C3BA8174](v6, v9, v10);
    atomic_store(result, v1);
  }
  return result;
}

unint64_t sub_1C0D6550C()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD v4[2];

  result = qword_1ED760660;
  if (!qword_1ED760660)
  {
    v1 = sub_1C07D4BEC(&qword_1ED75E810);
    v2 = MEMORY[0x1E0DEA9A0];
    sub_1C0CAD138((uint64_t)&qword_1ED762B78);
    v4[0] = v2;
    v4[1] = v3;
    result = MEMORY[0x1C3BA8174](MEMORY[0x1E0DEA0D8], v1, v4);
    atomic_store(result, (unint64_t *)&qword_1ED760660);
  }
  return result;
}

void sub_1C0D6558C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t vars0;
  uint64_t vars8;

  StaticKnowledgeAsset.init(from:)(a1, a2, a3, a4, a5, a6, a7, a8, vars0, vars8);
}

void sub_1C0D655A0()
{
  StaticKnowledgeAsset.encode(to:)();
}

uint64_t destroy for StaticKnowledgeAssetTriple()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for StaticKnowledgeAssetTriple(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v3 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v3;
  v4 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v4;
  v5 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v5;
  v6 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v6;
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  return a1;
}

_QWORD *assignWithCopy for StaticKnowledgeAssetTriple(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  a1[4] = a2[4];
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  swift_bridgeObjectRelease();
  a1[5] = a2[5];
  a1[6] = a2[6];
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  swift_bridgeObjectRelease();
  a1[7] = a2[7];
  a1[8] = a2[8];
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  swift_bridgeObjectRelease();
  a1[9] = a2[9];
  a1[10] = a2[10];
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *assignWithTake for StaticKnowledgeAssetTriple(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  *a1 = *a2;
  v4 = a2[2];
  a1[1] = a2[1];
  a1[2] = v4;
  swift_bridgeObjectRelease();
  v5 = a2[4];
  a1[3] = a2[3];
  a1[4] = v5;
  swift_bridgeObjectRelease();
  v6 = a2[6];
  a1[5] = a2[5];
  a1[6] = v6;
  swift_bridgeObjectRelease();
  v7 = a2[8];
  a1[7] = a2[7];
  a1[8] = v7;
  swift_bridgeObjectRelease();
  v8 = a2[10];
  a1[9] = a2[9];
  a1[10] = v8;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for StaticKnowledgeAssetTriple(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 88))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 16);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for StaticKnowledgeAssetTriple(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 88) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 16) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 88) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for StaticKnowledgeAssetTriple()
{
  sub_1C0779604();
}

_QWORD *assignWithCopy for StaticKnowledgeAsset(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  swift_bridgeObjectRelease();
  return a1;
}

void type metadata accessor for StaticKnowledgeAsset()
{
  sub_1C0779604();
}

uint64_t storeEnumTagSinglePayload for StaticKnowledgeAsset.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1C0D65944 + 4 * byte_1C10B8E99[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1C0D65978 + 4 * byte_1C10B8E94[v4]))();
}

uint64_t sub_1C0D65978(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C0D65980(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C0D65988);
  return result;
}

uint64_t sub_1C0D65994(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C0D6599CLL);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1C0D659A0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C0D659A8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for StaticKnowledgeAsset.CodingKeys()
{
  return &type metadata for StaticKnowledgeAsset.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for StaticKnowledgeAssetTriple.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_1C0D65A10 + 4 * byte_1C10B8EA3[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_1C0D65A44 + 4 * byte_1C10B8E9E[v4]))();
}

uint64_t sub_1C0D65A44(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C0D65A4C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C0D65A54);
  return result;
}

uint64_t sub_1C0D65A60(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C0D65A68);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_1C0D65A6C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C0D65A74(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for StaticKnowledgeAssetTriple.CodingKeys()
{
  return &type metadata for StaticKnowledgeAssetTriple.CodingKeys;
}

unint64_t sub_1C0D65A94()
{
  unint64_t result;

  result = qword_1EF648A78;
  if (!qword_1EF648A78)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10B9040, &type metadata for StaticKnowledgeAssetTriple.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF648A78);
  }
  return result;
}

unint64_t sub_1C0D65AD4()
{
  unint64_t result;

  result = qword_1EF648A80;
  if (!qword_1EF648A80)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10B90F8, &type metadata for StaticKnowledgeAsset.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF648A80);
  }
  return result;
}

unint64_t sub_1C0D65B14()
{
  unint64_t result;

  result = qword_1ED759CF0;
  if (!qword_1ED759CF0)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10B9068, &type metadata for StaticKnowledgeAsset.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED759CF0);
  }
  return result;
}

unint64_t sub_1C0D65B54()
{
  unint64_t result;

  result = qword_1ED759CE8;
  if (!qword_1ED759CE8)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10B9090, &type metadata for StaticKnowledgeAsset.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED759CE8);
  }
  return result;
}

unint64_t sub_1C0D65B94()
{
  unint64_t result;

  result = qword_1ED759D38;
  if (!qword_1ED759D38)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10B8FB0, &type metadata for StaticKnowledgeAssetTriple.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED759D38);
  }
  return result;
}

unint64_t sub_1C0D65BD4()
{
  unint64_t result;

  result = qword_1ED759D30;
  if (!qword_1ED759D30)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10B8FD8, &type metadata for StaticKnowledgeAssetTriple.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED759D30);
  }
  return result;
}

uint64_t type metadata accessor for StaticKnowledgeAssetMetadata(uint64_t a1)
{
  return sub_1C0784B00(a1, (uint64_t *)&unk_1ED7539B0);
}

void sub_1C0D65C24(uint64_t a1)
{
  unint64_t *v1;
  uint64_t (*v2)(uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  if (!sub_1C0780FEC(a1))
  {
    v4 = v3;
    v5 = v2(255);
    atomic_store(MEMORY[0x1C3BA8174](v4, v5), v1);
  }
  sub_1C0778534();
}

uint64_t sub_1C0D65C5C(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1C07ACF80((uint64_t *)&unk_1ED7481E0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

_QWORD *sub_1C0D65C9C(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v3 = (_QWORD *)a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v11 = *a2;
    *v3 = *a2;
    v3 = (_QWORD *)(v11 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    v5 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v5;
    *(_BYTE *)(a1 + 16) = *((_BYTE *)a2 + 16);
    v6 = *(int *)(a3 + 24);
    v7 = (void *)(a1 + v6);
    v8 = (char *)a2 + v6;
    v9 = sub_1C106F1CC();
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    if (sub_1C07B2D80((uint64_t)v8, 1, v9))
    {
      v10 = sub_1C07ACF80(&qword_1ED7625F8);
      memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8, v9);
      sub_1C07B2D8C((uint64_t)v7, 0, 1, v9);
    }
  }
  return v3;
}

uint64_t sub_1C0D65D8C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 24);
  v5 = sub_1C106F1CC();
  result = sub_1C07B2D80(v4, 1, v5);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  return result;
}

uint64_t sub_1C0D65DF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  void *v6;
  const void *v7;
  uint64_t v8;
  uint64_t v9;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v5 = *(int *)(a3 + 24);
  v6 = (void *)(a1 + v5);
  v7 = (const void *)(a2 + v5);
  v8 = sub_1C106F1CC();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  if (sub_1C07B2D80((uint64_t)v7, 1, v8))
  {
    v9 = sub_1C07ACF80(&qword_1ED7625F8);
    memcpy(v6, v7, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(v6, v7, v8);
    sub_1C07B2D8C((uint64_t)v6, 0, 1, v8);
  }
  return a1;
}

uint64_t sub_1C0D65EBC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void *v7;
  const void *v8;
  uint64_t v9;
  int v10;
  int v11;
  uint64_t v12;
  uint64_t v13;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v6 = *(int *)(a3 + 24);
  v7 = (void *)(a1 + v6);
  v8 = (const void *)(a2 + v6);
  v9 = sub_1C106F1CC();
  v10 = sub_1C07B2D80((uint64_t)v7, 1, v9);
  v11 = sub_1C07B2D80((uint64_t)v8, 1, v9);
  if (!v10)
  {
    v12 = *(_QWORD *)(v9 - 8);
    if (!v11)
    {
      (*(void (**)(void *, const void *, uint64_t))(v12 + 24))(v7, v8, v9);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v12 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v11)
  {
LABEL_6:
    v13 = sub_1C07ACF80(&qword_1ED7625F8);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8, v9);
  sub_1C07B2D8C((uint64_t)v7, 0, 1, v9);
  return a1;
}

uint64_t sub_1C0D65FE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  void *v5;
  const void *v6;
  uint64_t v7;
  uint64_t v8;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v4 = *(int *)(a3 + 24);
  v5 = (void *)(a1 + v4);
  v6 = (const void *)(a2 + v4);
  v7 = sub_1C106F1CC();
  if (sub_1C07B2D80((uint64_t)v6, 1, v7))
  {
    v8 = sub_1C07ACF80(&qword_1ED7625F8);
    memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
    sub_1C07B2D8C((uint64_t)v5, 0, 1, v7);
  }
  return a1;
}

uint64_t sub_1C0D66094(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  int v11;
  int v12;
  uint64_t v13;
  uint64_t v14;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v7 = *(int *)(a3 + 24);
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  v10 = sub_1C106F1CC();
  v11 = sub_1C07B2D80((uint64_t)v8, 1, v10);
  v12 = sub_1C07B2D80((uint64_t)v9, 1, v10);
  if (!v11)
  {
    v13 = *(_QWORD *)(v10 - 8);
    if (!v12)
    {
      (*(void (**)(void *, const void *, uint64_t))(v13 + 40))(v8, v9, v10);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v13 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v12)
  {
LABEL_6:
    v14 = sub_1C07ACF80(&qword_1ED7625F8);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  sub_1C07B2D8C((uint64_t)v8, 0, 1, v10);
  return a1;
}

uint64_t sub_1C0D661A8()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_1C0D661B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    sub_1C077F018(*(_QWORD *)(a1 + 8));
    sub_1C077671C();
  }
  else
  {
    v6 = sub_1C07ACF80(&qword_1ED7625F8);
    sub_1C0776754(a1 + *(int *)(a3 + 24), a2, v6);
  }
}

uint64_t sub_1C0D66210()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_1C0D6621C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;

  sub_1C078DE8C();
  if (v3)
  {
    *(_QWORD *)(v1 + 8) = (v0 - 1);
    sub_1C077671C();
  }
  else
  {
    v4 = v2;
    v5 = sub_1C07ACF80(&qword_1ED7625F8);
    sub_1C077F00C(v1 + *(int *)(v4 + 24), v0, v0, v5);
  }
}

uint64_t type metadata accessor for StaticKnowledgeAssetMetadataInManifest(uint64_t a1)
{
  return sub_1C0784B00(a1, (uint64_t *)&unk_1ED7539C0);
}

void sub_1C0D66284()
{
  unint64_t v0;

  sub_1C0D66300();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

void sub_1C0D66300()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED762600)
  {
    sub_1C106F1CC();
    v0 = sub_1C1070564();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED762600);
  }
}

void type metadata accessor for StaticKnowledgeAssetMetadataColumn()
{
  sub_1C0779604();
}

_QWORD *sub_1C0D66364(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v3 = (_QWORD *)a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v11 = *a2;
    *v3 = *a2;
    v3 = (_QWORD *)(v11 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *(_QWORD *)a1 = *a2;
    *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
    v5 = a2[3];
    *(_QWORD *)(a1 + 16) = a2[2];
    *(_QWORD *)(a1 + 24) = v5;
    *(_QWORD *)(a1 + 32) = a2[4];
    v6 = *(int *)(a3 + 32);
    v7 = (char *)a2 + v6;
    v8 = (void *)(a1 + v6);
    *(_BYTE *)(a1 + 40) = *((_BYTE *)a2 + 40);
    v9 = sub_1C106F1CC();
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    if (sub_1C07B2D80((uint64_t)v7, 1, v9))
    {
      v10 = sub_1C07ACF80(&qword_1ED7625F8);
      memcpy(v8, v7, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v8, v7, v9);
      sub_1C07B2D8C((uint64_t)v8, 0, 1, v9);
    }
  }
  return v3;
}

uint64_t sub_1C0D6646C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 32);
  v5 = sub_1C106F1CC();
  result = sub_1C07B2D80(v4, 1, v5);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  return result;
}

uint64_t sub_1C0D664D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  const void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  v5 = *(int *)(a3 + 32);
  v6 = (const void *)(a2 + v5);
  v7 = (void *)(a1 + v5);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  v8 = sub_1C106F1CC();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  if (sub_1C07B2D80((uint64_t)v6, 1, v8))
  {
    v9 = sub_1C07ACF80(&qword_1ED7625F8);
    memcpy(v7, v6, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(v7, v6, v8);
    sub_1C07B2D8C((uint64_t)v7, 0, 1, v8);
  }
  return a1;
}

uint64_t sub_1C0D665B4(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  char *v9;
  uint64_t v10;
  int v11;
  int v12;
  uint64_t v13;
  uint64_t v14;

  v6 = *a2;
  *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
  *(_QWORD *)a1 = v6;
  *(_QWORD *)(a1 + 16) = a2[2];
  *(_QWORD *)(a1 + 24) = a2[3];
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = a2[4];
  *(_BYTE *)(a1 + 40) = *((_BYTE *)a2 + 40);
  v7 = *(int *)(a3 + 32);
  v8 = (void *)(a1 + v7);
  v9 = (char *)a2 + v7;
  v10 = sub_1C106F1CC();
  v11 = sub_1C07B2D80((uint64_t)v8, 1, v10);
  v12 = sub_1C07B2D80((uint64_t)v9, 1, v10);
  if (!v11)
  {
    v13 = *(_QWORD *)(v10 - 8);
    if (!v12)
    {
      (*(void (**)(void *, char *, uint64_t))(v13 + 24))(v8, v9, v10);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v13 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v12)
  {
LABEL_6:
    v14 = sub_1C07ACF80(&qword_1ED7625F8);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  sub_1C07B2D8C((uint64_t)v8, 0, 1, v10);
  return a1;
}

uint64_t sub_1C0D666F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  void *v5;
  const void *v6;
  uint64_t v7;
  uint64_t v8;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  v4 = *(int *)(a3 + 32);
  v5 = (void *)(a1 + v4);
  v6 = (const void *)(a2 + v4);
  v7 = sub_1C106F1CC();
  if (sub_1C07B2D80((uint64_t)v6, 1, v7))
  {
    v8 = sub_1C07ACF80(&qword_1ED7625F8);
    memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
    sub_1C07B2D8C((uint64_t)v5, 0, 1, v7);
  }
  return a1;
}

uint64_t sub_1C0D667BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  int v11;
  int v12;
  uint64_t v13;
  uint64_t v14;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v6 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v6;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  v7 = *(int *)(a3 + 32);
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  v10 = sub_1C106F1CC();
  v11 = sub_1C07B2D80((uint64_t)v8, 1, v10);
  v12 = sub_1C07B2D80((uint64_t)v9, 1, v10);
  if (!v11)
  {
    v13 = *(_QWORD *)(v10 - 8);
    if (!v12)
    {
      (*(void (**)(void *, const void *, uint64_t))(v13 + 40))(v8, v9, v10);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v13 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v12)
  {
LABEL_6:
    v14 = sub_1C07ACF80(&qword_1ED7625F8);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  sub_1C07B2D8C((uint64_t)v8, 0, 1, v10);
  return a1;
}

uint64_t sub_1C0D668E8()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_1C0D668F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    sub_1C077F018(*(_QWORD *)(a1 + 24));
    sub_1C077671C();
  }
  else
  {
    v6 = sub_1C07ACF80(&qword_1ED7625F8);
    sub_1C0776754(a1 + *(int *)(a3 + 32), a2, v6);
  }
}

uint64_t sub_1C0D66950()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_1C0D6695C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;

  sub_1C078DE8C();
  if (v3)
  {
    *(_QWORD *)(v1 + 24) = (v0 - 1);
    sub_1C077671C();
  }
  else
  {
    v4 = v2;
    v5 = sub_1C07ACF80(&qword_1ED7625F8);
    sub_1C077F00C(v1 + *(int *)(v4 + 32), v0, v0, v5);
  }
}

void sub_1C0D669B0()
{
  unint64_t v0;

  sub_1C0D66300();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

unint64_t sub_1C0D66A48()
{
  unint64_t result;

  result = qword_1EF648A88;
  if (!qword_1EF648A88)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10B9418, &unk_1E7A309B0);
    atomic_store(result, (unint64_t *)&qword_1EF648A88);
  }
  return result;
}

void sub_1C0D66A88()
{
  sub_1C0D65C24((uint64_t)&unk_1ED741538);
}

void sub_1C0D66AB4()
{
  sub_1C0D65C24((uint64_t)&qword_1ED7605D8);
}

unint64_t sub_1C0D66AE4()
{
  unint64_t result;

  result = qword_1ED760600;
  if (!qword_1ED760600)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10B9378, &unk_1E7A309B0);
    atomic_store(result, (unint64_t *)&qword_1ED760600);
  }
  return result;
}

unint64_t sub_1C0D66B24()
{
  unint64_t result;

  result = qword_1ED760608;
  if (!qword_1ED760608)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10B9328, &unk_1E7A309B0);
    atomic_store(result, (unint64_t *)&qword_1ED760608);
  }
  return result;
}

unint64_t sub_1C0D66B64()
{
  unint64_t result;

  result = qword_1ED7605F8;
  if (!qword_1ED7605F8)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10B9350, &unk_1E7A309B0);
    atomic_store(result, (unint64_t *)&qword_1ED7605F8);
  }
  return result;
}

unint64_t sub_1C0D66BA0()
{
  unint64_t result;

  result = qword_1ED760618;
  if (!qword_1ED760618)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10B93A0, &unk_1E7A309B0);
    atomic_store(result, (unint64_t *)&qword_1ED760618);
  }
  return result;
}

unint64_t sub_1C0D66BDC()
{
  unint64_t result;

  result = qword_1ED74D150;
  if (!qword_1ED74D150)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10B98AC, &type metadata for StaticKnowledgeAssetMetadataInManifest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED74D150);
  }
  return result;
}

unint64_t sub_1C0D66C18()
{
  unint64_t result;

  result = qword_1ED7605B8;
  if (!qword_1ED7605B8)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10B9884, &unk_1E7A30B60);
    atomic_store(result, (unint64_t *)&qword_1ED7605B8);
  }
  return result;
}

uint64_t sub_1C0D66C54(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1C07ACF80(&qword_1ED7625F8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_1C0D66C9C()
{
  unint64_t result;

  result = qword_1ED747EB0;
  if (!qword_1ED747EB0)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10B985C, &unk_1E7A30B60);
    atomic_store(result, (unint64_t *)&qword_1ED747EB0);
  }
  return result;
}

unint64_t sub_1C0D66CD8()
{
  unint64_t result;

  result = qword_1ED7605C0;
  if (!qword_1ED7605C0)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10B980C, &type metadata for StaticKnowledgeAssetMetadata.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED7605C0);
  }
  return result;
}

uint64_t _s24IntelligencePlatformCore28StaticKnowledgeAssetMetadataV10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1C0D66D60 + 4 * byte_1C10B8EAD[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1C0D66D94 + 4 * byte_1C10B8EA8[v4]))();
}

uint64_t sub_1C0D66D94(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C0D66D9C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C0D66DA4);
  return result;
}

uint64_t sub_1C0D66DB0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C0D66DB8);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1C0D66DBC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C0D66DC4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for StaticKnowledgeAssetMetadata.CodingKeys()
{
  return &type metadata for StaticKnowledgeAssetMetadata.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for StaticKnowledgeAssetMetadataInManifest.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1C0D66E2C + 4 * byte_1C10B8EB7[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1C0D66E60 + 4 * byte_1C10B8EB2[v4]))();
}

uint64_t sub_1C0D66E60(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C0D66E68(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C0D66E70);
  return result;
}

uint64_t sub_1C0D66E7C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C0D66E84);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1C0D66E88(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C0D66E90(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for StaticKnowledgeAssetMetadataInManifest.CodingKeys()
{
  return &type metadata for StaticKnowledgeAssetMetadataInManifest.CodingKeys;
}

uint64_t sub_1C0D66EAC(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1C0D66EF8 + 4 * byte_1C10B8EC1[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1C0D66F2C + 4 * byte_1C10B8EBC[v4]))();
}

uint64_t sub_1C0D66F2C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C0D66F34(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C0D66F3CLL);
  return result;
}

uint64_t sub_1C0D66F48(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C0D66F50);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1C0D66F54(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C0D66F5C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for StaticKnowledgeAssetType()
{
  sub_1C0779604();
}

unint64_t sub_1C0D66F78()
{
  unint64_t result;

  result = qword_1EF648AA0;
  if (!qword_1EF648AA0)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10B9674, &unk_1E7A30B60);
    atomic_store(result, (unint64_t *)&qword_1EF648AA0);
  }
  return result;
}

unint64_t sub_1C0D66FB8()
{
  unint64_t result;

  result = qword_1EF648AA8;
  if (!qword_1EF648AA8)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10B972C, &type metadata for StaticKnowledgeAssetMetadataInManifest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF648AA8);
  }
  return result;
}

unint64_t sub_1C0D66FF8()
{
  unint64_t result;

  result = qword_1EF648AB0;
  if (!qword_1EF648AB0)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10B97E4, &type metadata for StaticKnowledgeAssetMetadata.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF648AB0);
  }
  return result;
}

unint64_t sub_1C0D67038()
{
  unint64_t result;

  result = qword_1ED7605D0;
  if (!qword_1ED7605D0)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10B9754, &type metadata for StaticKnowledgeAssetMetadata.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED7605D0);
  }
  return result;
}

unint64_t sub_1C0D67078()
{
  unint64_t result;

  result = qword_1ED7605C8;
  if (!qword_1ED7605C8)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10B977C, &type metadata for StaticKnowledgeAssetMetadata.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED7605C8);
  }
  return result;
}

unint64_t sub_1C0D670B8()
{
  unint64_t result;

  result = qword_1ED74D160;
  if (!qword_1ED74D160)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10B969C, &type metadata for StaticKnowledgeAssetMetadataInManifest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED74D160);
  }
  return result;
}

unint64_t sub_1C0D670F8()
{
  unint64_t result;

  result = qword_1ED74D158;
  if (!qword_1ED74D158)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10B96C4, &type metadata for StaticKnowledgeAssetMetadataInManifest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED74D158);
  }
  return result;
}

unint64_t sub_1C0D67134()
{
  unint64_t result;

  result = qword_1ED7605B0;
  if (!qword_1ED7605B0)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10B95FC, &unk_1E7A30B60);
    atomic_store(result, (unint64_t *)&qword_1ED7605B0);
  }
  return result;
}

uint64_t sub_1C0D67170()
{
  unint64_t v0;

  v0 = sub_1C1070A2C();
  swift_bridgeObjectRelease();
  if (v0 >= 7)
    return 7;
  else
    return v0;
}

uint64_t sub_1C0D671B8(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1C0D671EC + 4 * byte_1C10B9900[a1]))(0x64497465737361, 0xE700000000000000);
}

uint64_t sub_1C0D671EC()
{
  return 0x7463656A627573;
}

uint64_t sub_1C0D67200()
{
  return 0x7461636964657270;
}

uint64_t sub_1C0D6721C()
{
  return 0x6E6F6974616C6572;
}

unint64_t sub_1C0D67240()
{
  return 0xD000000000000015;
}

uint64_t sub_1C0D6725C()
{
  return 0x7463656A626FLL;
}

uint64_t sub_1C0D67270()
{
  return 0x6E656469666E6F63;
}

void sub_1C0D6728C()
{
  sub_1C08C4A10();
}

void sub_1C0D67298()
{
  unsigned __int8 *v0;

  sub_1C0A54140(*v0);
}

void sub_1C0D672A0()
{
  sub_1C08C9230();
}

void sub_1C0D672A8(uint64_t a1)
{
  unsigned __int8 *v1;

  sub_1C0A544F0(a1, *v1);
}

uint64_t sub_1C0D672B0@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1C0D67170();
  *a1 = result;
  return result;
}

uint64_t sub_1C0D672DC@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_1C0D671B8(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1C0D67304()
{
  sub_1C0D68DF0();
  return sub_1C106BEE4();
}

uint64_t sub_1C0D6733C()
{
  sub_1C0A6BF40();
  return sub_1C106BECC();
}

uint64_t sub_1C0D67374()
{
  sub_1C0A6BE24();
  return sub_1C106C16C();
}

uint64_t sub_1C0D673AC()
{
  sub_1C0A6BE24();
  return sub_1C106C160();
}

uint64_t sub_1C0D673E4(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  BOOL v7;
  BOOL v8;
  BOOL v9;
  char v11;

  v2 = a1 == 0x64497465737361 && a2 == 0xE700000000000000;
  if (v2 || (sub_1C1070CB4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x7463656A627573 && a2 == 0xE700000000000000;
    if (v6 || (sub_1C1070CB4() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      v7 = a1 == 0x7461636964657270 && a2 == 0xE900000000000065;
      if (v7 || (sub_1C1070CB4() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else
      {
        v8 = a1 == 0x6E6F6974616C6572 && a2 == 0xEE00644970696873;
        if (v8 || (sub_1C1070CB4() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 3;
        }
        else if (a1 == 0xD000000000000015 && a2 == 0x80000001C10DE890 || (sub_1C1070CB4() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 4;
        }
        else
        {
          v9 = a1 == 0x7463656A626FLL && a2 == 0xE600000000000000;
          if (v9 || (sub_1C1070CB4() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 5;
          }
          else if (a1 == 0x6E656469666E6F63 && a2 == 0xEA00000000006563)
          {
            swift_bridgeObjectRelease();
            return 6;
          }
          else
          {
            v11 = sub_1C1070CB4();
            swift_bridgeObjectRelease();
            if ((v11 & 1) != 0)
              return 6;
            else
              return 7;
          }
        }
      }
    }
  }
}

uint64_t sub_1C0D676E8(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1C0D6771C + 4 * byte_1C10B9907[a1]))(0x64497465737361, 0xE700000000000000);
}

uint64_t sub_1C0D6771C()
{
  return 0x7463656A627573;
}

uint64_t sub_1C0D67730()
{
  return 0x7461636964657270;
}

uint64_t sub_1C0D6774C()
{
  return 0x6E6F6974616C6572;
}

unint64_t sub_1C0D67770()
{
  return 0xD000000000000015;
}

uint64_t sub_1C0D6778C()
{
  return 0x7463656A626FLL;
}

uint64_t sub_1C0D677A0()
{
  return 0x6E656469666E6F63;
}

uint64_t sub_1C0D677BC(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = sub_1C07ACF80(&qword_1ED748138);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  sub_1C0778564();
  v7 = v6 - v5;
  sub_1C07A9480(a1, a1[3]);
  sub_1C0D68E2C();
  sub_1C1070EB8();
  sub_1C1070BC4();
  if (!v1)
  {
    type metadata accessor for StaticKnowledgeTriple();
    sub_1C106E590();
    sub_1C07803B8(&qword_1ED759FB8, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3CE28], MEMORY[0x1E0D3CE38]);
    sub_1C077F744();
    sub_1C106E41C();
    sub_1C07803B8(&qword_1ED7606D0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3CC50], MEMORY[0x1E0D3CC60]);
    sub_1C077F744();
    sub_1C106EB24();
    sub_1C07803B8(&qword_1ED759FC8, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3D450], MEMORY[0x1E0D3D460]);
    sub_1C077F744();
    sub_1C077F744();
    sub_1C1070B7C();
    sub_1C1070B94();
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(v7, v3);
}

uint64_t sub_1C0D67A4C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int *v28;
  void (*v29)(char *, char *, uint64_t);
  uint64_t v30;
  uint64_t v31;
  char *v32;
  int *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  int *v55;
  uint64_t *v56;
  char v57;
  char v58;
  char v59;
  char v60;
  char v61;
  char v62;
  char v63;

  v44 = a2;
  v3 = sub_1C106EB24();
  v46 = *(_QWORD *)(v3 - 8);
  v47 = v3;
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v4);
  sub_1C077AE40();
  v45 = v5;
  v6 = sub_1C106E41C();
  v52 = *(_QWORD *)(v6 - 8);
  v53 = v6;
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v42 - v11;
  v50 = sub_1C106E590();
  v48 = *(_QWORD *)(v50 - 8);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v13);
  sub_1C0778564();
  v16 = v15 - v14;
  v49 = sub_1C07ACF80(&qword_1ED75D398);
  v17 = *(_QWORD *)(v49 - 8);
  MEMORY[0x1E0C80A78](v49);
  sub_1C0778564();
  v55 = (int *)type metadata accessor for StaticKnowledgeTriple();
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v18);
  sub_1C077AE40();
  v56 = v19;
  v20 = a1[3];
  v51 = a1;
  sub_1C07A9480(a1, v20);
  sub_1C0D68E2C();
  v21 = v54;
  sub_1C1070E94();
  if (v21)
    return sub_1C0780B18();
  v22 = v16;
  v43 = v9;
  v54 = v17;
  v63 = 0;
  v23 = sub_1C1070AEC();
  v24 = v56;
  *v56 = v23;
  v62 = 1;
  sub_1C07803B8((unint64_t *)&unk_1ED761900, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3CE28], MEMORY[0x1E0D3CE58]);
  v25 = v22;
  v26 = v50;
  sub_1C1070AE0();
  v27 = v53;
  v28 = v55;
  (*(void (**)(char *, uint64_t, uint64_t))(v48 + 32))((char *)v24 + v55[5], v25, v26);
  v61 = 2;
  sub_1C07803B8((unint64_t *)&qword_1ED7618D8, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3CC50], MEMORY[0x1E0D3CC88]);
  sub_1C079A198();
  v29 = *(void (**)(char *, char *, uint64_t))(v52 + 32);
  v29((char *)v56 + v28[6], v12, v27);
  v60 = 3;
  sub_1C07803B8(&qword_1ED761918, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3D450], MEMORY[0x1E0D3D480]);
  v30 = v45;
  v31 = v47;
  sub_1C1070AE0();
  (*(void (**)(char *, uint64_t, uint64_t))(v46 + 32))((char *)v56 + v55[7], v30, v31);
  v59 = 4;
  v32 = v43;
  sub_1C079A198();
  v33 = v55;
  v34 = (uint64_t)v56;
  v29((char *)v56 + v55[8], v32, v27);
  v58 = 5;
  v35 = sub_1C1070AA4();
  v36 = v54;
  v37 = (uint64_t *)(v34 + v33[9]);
  *v37 = v35;
  v37[1] = v38;
  v57 = 6;
  sub_1C1070ABC();
  v40 = v39;
  sub_1C07A14B4(*(uint64_t (**)(uint64_t, _QWORD))(v36 + 8));
  *(_QWORD *)(v34 + v33[10]) = v40;
  sub_1C0A7189C(v34, v44);
  sub_1C0780B18();
  return sub_1C0A718E0(v34);
}

uint64_t sub_1C0D67F5C()
{
  unsigned __int8 *v0;

  return sub_1C0D676E8(*v0);
}

uint64_t sub_1C0D67F64@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1C0D673E4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C0D67F88()
{
  sub_1C0D68E2C();
  return sub_1C1070EE8();
}

uint64_t sub_1C0D67FB0()
{
  sub_1C0D68E2C();
  return sub_1C1070EF4();
}

uint64_t sub_1C0D67FD8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1C0D67A4C(a1, a2);
}

uint64_t sub_1C0D67FEC(_QWORD *a1)
{
  return sub_1C0D677BC(a1);
}

unint64_t sub_1C0D68000()
{
  return 0xD000000000000010;
}

uint64_t sub_1C0D6801C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a1 + 20);
  v5 = sub_1C106E590();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, v4, v5);
}

uint64_t sub_1C0D6805C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a1 + 24);
  v5 = sub_1C106E41C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, v4, v5);
}

uint64_t sub_1C0D6809C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a1 + 28);
  v5 = sub_1C106EB24();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, v4, v5);
}

uint64_t sub_1C0D680DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a1 + 32);
  v5 = sub_1C106E41C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, v4, v5);
}

uint64_t sub_1C0D6811C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + *(int *)(a1 + 36));
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  return v2;
}

uint64_t sub_1C0D68150()
{
  sub_1C07803B8(&qword_1ED75D370, (uint64_t (*)(uint64_t))type metadata accessor for StaticKnowledgeTriple, (uint64_t)&unk_1C10B9AF4);
  return sub_1C106BDDC();
}

uint64_t sub_1C0D681B8()
{
  sub_1C07803B8(&qword_1ED747E58, (uint64_t (*)(uint64_t))type metadata accessor for StaticKnowledgeTriple, (uint64_t)&unk_1C10B9C50);
  return sub_1C106BFD4();
}

uint64_t sub_1C0D68220()
{
  sub_1C07803B8(&qword_1ED747E58, (uint64_t (*)(uint64_t))type metadata accessor for StaticKnowledgeTriple, (uint64_t)&unk_1C10B9C50);
  return sub_1C106BFC8();
}

uint64_t sub_1C0D6827C()
{
  sub_1C07803B8(&qword_1ED747E58, (uint64_t (*)(uint64_t))type metadata accessor for StaticKnowledgeTriple, (uint64_t)&unk_1C10B9C50);
  return sub_1C106BFBC();
}

uint64_t sub_1C0D682D8()
{
  sub_1C07803B8(&qword_1ED747E68, (uint64_t (*)(uint64_t))type metadata accessor for StaticKnowledgeTriple, (uint64_t)&unk_1C10B9ACC);
  return sub_1C106BD58();
}

uint64_t sub_1C0D68330()
{
  return 0x675F636974617473;
}

ValueMetadata *type metadata accessor for StaticGlobalKnowledgeTripleColumn()
{
  return &type metadata for StaticGlobalKnowledgeTripleColumn;
}

char *sub_1C0D68364(uint64_t *a1, uint64_t *a2, int *a3)
{
  char *v4;
  int v5;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  void (*v15)(char *, char *, uint64_t);
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;

  v4 = (char *)a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v25 = *a2;
    *(_QWORD *)v4 = *a2;
    v4 = (char *)(v25 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *a1 = *a2;
    v7 = a3[5];
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = sub_1C106E590();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
    v11 = a3[6];
    v12 = &v4[v11];
    v13 = (char *)a2 + v11;
    v14 = sub_1C106E41C();
    v15 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16);
    v15(v12, v13, v14);
    v16 = a3[7];
    v17 = &v4[v16];
    v18 = (char *)a2 + v16;
    v19 = sub_1C106EB24();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
    v15(&v4[a3[8]], (char *)a2 + a3[8], v14);
    v20 = a3[9];
    v21 = a3[10];
    v22 = &v4[v20];
    v23 = (uint64_t *)((char *)a2 + v20);
    v24 = v23[1];
    *(_QWORD *)v22 = *v23;
    *((_QWORD *)v22 + 1) = v24;
    *(_QWORD *)&v4[v21] = *(uint64_t *)((char *)a2 + v21);
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  }
  return v4;
}

uint64_t sub_1C0D68494(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;

  v4 = a1 + a2[5];
  v5 = sub_1C106E590();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  v6 = a1 + a2[6];
  v7 = sub_1C106E41C();
  v8 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8);
  v8(v6, v7);
  v9 = a1 + a2[7];
  v10 = sub_1C106EB24();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  v8(a1 + a2[8], v7);
  return swift_bridgeObjectRelease();
}

char *sub_1C0D68550(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  void (*v14)(char *, char *, uint64_t);
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = a3[5];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = sub_1C106E590();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8, v9);
  v10 = a3[6];
  v11 = &a1[v10];
  v12 = &a2[v10];
  v13 = sub_1C106E41C();
  v14 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16);
  v14(v11, v12, v13);
  v15 = a3[7];
  v16 = &a1[v15];
  v17 = &a2[v15];
  v18 = sub_1C106EB24();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
  v14(&a1[a3[8]], &a2[a3[8]], v13);
  v19 = a3[9];
  v20 = a3[10];
  v21 = &a1[v19];
  v22 = &a2[v19];
  v23 = *((_QWORD *)v22 + 1);
  *(_QWORD *)v21 = *(_QWORD *)v22;
  *((_QWORD *)v21 + 1) = v23;
  *(_QWORD *)&a1[v20] = *(_QWORD *)&a2[v20];
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  return a1;
}

char *sub_1C0D68654(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  void (*v14)(char *, char *, uint64_t);
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = a3[5];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = sub_1C106E590();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  v10 = a3[6];
  v11 = &a1[v10];
  v12 = &a2[v10];
  v13 = sub_1C106E41C();
  v14 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 24);
  v14(v11, v12, v13);
  v15 = a3[7];
  v16 = &a1[v15];
  v17 = &a2[v15];
  v18 = sub_1C106EB24();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 24))(v16, v17, v18);
  v14(&a1[a3[8]], &a2[a3[8]], v13);
  v19 = a3[9];
  v20 = &a1[v19];
  v21 = &a2[v19];
  *(_QWORD *)v20 = *(_QWORD *)v21;
  *((_QWORD *)v20 + 1) = *((_QWORD *)v21 + 1);
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  swift_bridgeObjectRelease();
  *(_QWORD *)&a1[a3[10]] = *(_QWORD *)&a2[a3[10]];
  return a1;
}

char *sub_1C0D68770(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  void (*v14)(char *, char *, uint64_t);
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = a3[5];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = sub_1C106E590();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  v10 = a3[6];
  v11 = &a1[v10];
  v12 = &a2[v10];
  v13 = sub_1C106E41C();
  v14 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32);
  v14(v11, v12, v13);
  v15 = a3[7];
  v16 = &a1[v15];
  v17 = &a2[v15];
  v18 = sub_1C106EB24();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
  v14(&a1[a3[8]], &a2[a3[8]], v13);
  v19 = a3[10];
  *(_OWORD *)&a1[a3[9]] = *(_OWORD *)&a2[a3[9]];
  *(_QWORD *)&a1[v19] = *(_QWORD *)&a2[v19];
  return a1;
}

char *sub_1C0D68868(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  void (*v14)(char *, char *, uint64_t);
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = a3[5];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = sub_1C106E590();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 40))(v7, v8, v9);
  v10 = a3[6];
  v11 = &a1[v10];
  v12 = &a2[v10];
  v13 = sub_1C106E41C();
  v14 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 40);
  v14(v11, v12, v13);
  v15 = a3[7];
  v16 = &a1[v15];
  v17 = &a2[v15];
  v18 = sub_1C106EB24();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 40))(v16, v17, v18);
  v14(&a1[a3[8]], &a2[a3[8]], v13);
  v19 = a3[9];
  v20 = &a1[v19];
  v21 = (uint64_t *)&a2[v19];
  v23 = *v21;
  v22 = v21[1];
  *(_QWORD *)v20 = v23;
  *((_QWORD *)v20 + 1) = v22;
  swift_bridgeObjectRelease();
  *(_QWORD *)&a1[a3[10]] = *(_QWORD *)&a2[a3[10]];
  return a1;
}

uint64_t sub_1C0D68974()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1C0D68980(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  unint64_t v14;

  sub_1C077C4C0();
  sub_1C0786404();
  if (v9)
  {
    v7 = v6;
    v8 = a3[5];
    return sub_1C07B2D80(v4 + v8, v3, v7);
  }
  sub_1C106E41C();
  sub_1C0786404();
  if (v9)
  {
    v7 = v10;
    v8 = a3[6];
    return sub_1C07B2D80(v4 + v8, v3, v7);
  }
  sub_1C106EB24();
  sub_1C0786404();
  if (v11)
  {
    v7 = v12;
    v8 = a3[7];
    return sub_1C07B2D80(v4 + v8, v3, v7);
  }
  v14 = *(_QWORD *)(v4 + a3[9] + 8);
  if (v14 >= 0xFFFFFFFF)
    LODWORD(v14) = -1;
  return (v14 + 1);
}

uint64_t sub_1C0D68A24()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_1C0D68A30(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  char v12;
  uint64_t v13;

  sub_1C077C4C0();
  sub_1C077AFFC();
  if (v10)
  {
    v8 = v7;
    v9 = a4[5];
  }
  else
  {
    sub_1C106E41C();
    sub_1C077AFFC();
    if (v10)
    {
      v8 = v11;
      v9 = a4[6];
    }
    else
    {
      sub_1C106EB24();
      sub_1C077AFFC();
      if (!v12)
      {
        *(_QWORD *)(v5 + a4[9] + 8) = (v4 - 1);
        return;
      }
      v8 = v13;
      v9 = a4[7];
    }
  }
  sub_1C07B2D8C(v5 + v9, v4, v4, v8);
}

uint64_t type metadata accessor for StaticKnowledgeTriple()
{
  uint64_t result;

  result = qword_1ED75C048;
  if (!qword_1ED75C048)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1C0D68B08()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  result = sub_1C106E590();
  if (v1 <= 0x3F)
  {
    result = sub_1C106E41C();
    if (v2 <= 0x3F)
    {
      result = sub_1C106EB24();
      if (v3 <= 0x3F)
      {
        swift_initStructMetadata();
        return 0;
      }
    }
  }
  return result;
}

uint64_t sub_1C0D68BD0()
{
  return sub_1C07803B8(&qword_1ED747E50, (uint64_t (*)(uint64_t))type metadata accessor for StaticKnowledgeTriple, (uint64_t)&unk_1C10B99B0);
}

uint64_t sub_1C0D68BFC()
{
  return sub_1C07803B8(&qword_1ED75C040, (uint64_t (*)(uint64_t))type metadata accessor for StaticKnowledgeTriple, (uint64_t)&unk_1C10B9D08);
}

uint64_t sub_1C0D68C28(uint64_t a1)
{
  uint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1C07803B8(&qword_1ED750C30, (uint64_t (*)(uint64_t))type metadata accessor for StaticKnowledgeTriple, (uint64_t)&unk_1C10B9CC0);
  result = sub_1C07803B8(&qword_1ED747E58, (uint64_t (*)(uint64_t))type metadata accessor for StaticKnowledgeTriple, (uint64_t)&unk_1C10B9C50);
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

uint64_t sub_1C0D68C84(uint64_t a1)
{
  uint64_t result;

  result = sub_1C07803B8(&qword_1EF639B88, (uint64_t (*)(uint64_t))type metadata accessor for StaticKnowledgeTriple, (uint64_t)&unk_1C10B9A68);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C0D68CC4()
{
  unint64_t result;

  result = qword_1EF648AB8;
  if (!qword_1EF648AB8)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10B9C28, &type metadata for StaticGlobalKnowledgeTripleColumn);
    atomic_store(result, (unint64_t *)&qword_1EF648AB8);
  }
  return result;
}

uint64_t sub_1C0D68D00()
{
  return sub_1C07803B8(&qword_1ED747E60, (uint64_t (*)(uint64_t))type metadata accessor for StaticKnowledgeTriple, (uint64_t)&unk_1C10B9A00);
}

unint64_t sub_1C0D68D34()
{
  unint64_t result;

  result = qword_1ED751210;
  if (!qword_1ED751210)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10B9B88, &type metadata for StaticGlobalKnowledgeTripleColumn);
    atomic_store(result, (unint64_t *)&qword_1ED751210);
  }
  return result;
}

unint64_t sub_1C0D68D74()
{
  unint64_t result;

  result = qword_1ED751218;
  if (!qword_1ED751218)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10B9B38, &type metadata for StaticGlobalKnowledgeTripleColumn);
    atomic_store(result, (unint64_t *)&qword_1ED751218);
  }
  return result;
}

unint64_t sub_1C0D68DB4()
{
  unint64_t result;

  result = qword_1ED751208;
  if (!qword_1ED751208)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10B9B60, &type metadata for StaticGlobalKnowledgeTripleColumn);
    atomic_store(result, (unint64_t *)&qword_1ED751208);
  }
  return result;
}

unint64_t sub_1C0D68DF0()
{
  unint64_t result;

  result = qword_1ED75D378;
  if (!qword_1ED75D378)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10B9BB0, &type metadata for StaticGlobalKnowledgeTripleColumn);
    atomic_store(result, (unint64_t *)&qword_1ED75D378);
  }
  return result;
}

unint64_t sub_1C0D68E2C()
{
  unint64_t result;

  result = qword_1ED75C020;
  if (!qword_1ED75C020)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10B9E34, &type metadata for StaticKnowledgeTriple.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED75C020);
  }
  return result;
}

uint64_t _s24IntelligencePlatformCore33StaticGlobalKnowledgeTripleColumnOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 6 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 6) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_1C0D68EB4 + 4 * byte_1C10B9913[v4]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_1C0D68EE8 + 4 * byte_1C10B990E[v4]))();
}

uint64_t sub_1C0D68EE8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C0D68EF0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C0D68EF8);
  return result;
}

uint64_t sub_1C0D68F04(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C0D68F0CLL);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_1C0D68F10(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C0D68F18(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for StaticKnowledgeTriple.CodingKeys()
{
  return &type metadata for StaticKnowledgeTriple.CodingKeys;
}

unint64_t sub_1C0D68F38()
{
  unint64_t result;

  result = qword_1EF648AC0;
  if (!qword_1EF648AC0)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10B9E0C, &type metadata for StaticKnowledgeTriple.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF648AC0);
  }
  return result;
}

unint64_t sub_1C0D68F78()
{
  unint64_t result;

  result = qword_1ED75C030;
  if (!qword_1ED75C030)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10B9D7C, &type metadata for StaticKnowledgeTriple.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED75C030);
  }
  return result;
}

unint64_t sub_1C0D68FB8()
{
  unint64_t result;

  result = qword_1ED75C028;
  if (!qword_1ED75C028)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10B9DA4, &type metadata for StaticKnowledgeTriple.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED75C028);
  }
  return result;
}

uint64_t sub_1C0D68FF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE v15[8];
  uint64_t v16;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v6 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v8 = &v15[-v7 - 8];
  sub_1C078837C();
  sub_1C078837C();
  v9 = sub_1C079A1B0();
  v10 = sub_1C079A1B0();
  v11 = type metadata accessor for StatusItem(0, AssociatedTypeWitness, v9, v10);
  v12 = MEMORY[0x1C3BA8174](&unk_1C10B9F9C, v11);
  sub_1C0D69150((uint64_t)v15, (uint64_t)v8, a2, a3, v11, v12);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, AssociatedTypeWitness);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return sub_1C077AB58(v16);
}

uint64_t sub_1C0D69150(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  void (*v11)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v11 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(uint64_t (**)(uint64_t, uint64_t))(a6 + 48))(a5, a6);
  if (v11)
  {
    v12 = (uint64_t)v11;
    v11(v6, a1, a2, a3, a4);
    return sub_1C077AB58(v12);
  }
  else
  {
    if (a4)
    {
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      sub_1C079AFDC();
      sub_1C07A14C0();
      sub_1C106FC94();
      swift_bridgeObjectRelease();
      swift_getAssociatedTypeWitness();
      sub_1C0796B64();
      v14 = sub_1C0796B64();
      sub_1C07A3FDC(a3, a4, v15, v16, v17, v14, v18, v19, a2);
    }
    else
    {
      v20 = sub_1C07A14C0();
      v22 = v21;
      swift_getAssociatedTypeWitness();
      sub_1C07A76AC();
      v23 = sub_1C07A76AC();
      sub_1C07A3FDC(v20, v22, v24, v25, v26, v23, v27, v28, a2);
    }
    return swift_bridgeObjectRelease();
  }
}

uint64_t type metadata accessor for StatusItem(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C0802884(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for StatusItem);
}

uint64_t sub_1C0D69328@<X0>(uint64_t a1@<X2>, uint64_t a2@<X8>)
{
  uint64_t AssociatedTypeWitness;
  void *v5;

  if (a1)
  {
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    sub_1C079AFDC();
    sub_1C07AE1C4();
    sub_1C106FC94();
    sub_1C0775894();
    AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    sub_1C0799198();
    sub_1C0799198();
  }
  else
  {
    sub_1C07AE1C4();
    AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    sub_1C07A76AC();
    sub_1C07A76AC();
  }
  sub_1C078FB80();
  KeyValueStore.fetch<A>(key:)();
  if (!v5)
    return sub_1C0775894();

  sub_1C0775894();
  return sub_1C07B2D8C(a2, 1, 1, AssociatedTypeWitness);
}

uint64_t sub_1C0D694A8()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

_QWORD *sub_1C0D69528(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _OWORD *v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_DWORD *)(v6 + 80);
  v8 = *(_QWORD *)(v6 + 64) + 7;
  if (v7 > 7
    || (*(_DWORD *)(v6 + 80) & 0x100000) != 0
    || ((v8 + ((v7 + 40) & ~v7)) & 0xFFFFFFFFFFFFFFF8) + 16 > 0x18)
  {
    v11 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v11 + ((v7 & 0xF8 ^ 0x1F8) & (v7 + 16)));
  }
  else
  {
    v12 = ~v7;
    v13 = a2[1];
    *a1 = *a2;
    a1[1] = v13;
    a1[2] = a2[2];
    v15 = a2 + 3;
    v14 = a2[3];
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    if (v14)
    {
      v16 = a2[4];
      a1[3] = v14;
      a1[4] = v16;
      swift_retain();
    }
    else
    {
      *(_OWORD *)(a1 + 3) = *v15;
    }
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v6 + 16))(((unint64_t)a1 + v7 + 40) & v12, ((unint64_t)a2 + v7 + 40) & v12, v5);
    v17 = (v8 + (((unint64_t)a1 + v7 + 40) & v12)) & 0xFFFFFFFFFFFFFFF8;
    v18 = (v8 + (((unint64_t)a2 + v7 + 40) & v12)) & 0xFFFFFFFFFFFFFFF8;
    if (*(_QWORD *)v18 < 0xFFFFFFFFuLL)
    {
      *(_OWORD *)v17 = *(_OWORD *)v18;
      return a1;
    }
    v19 = *(_QWORD *)(v18 + 8);
    *(_QWORD *)v17 = *(_QWORD *)v18;
    *(_QWORD *)(v17 + 8) = v19;
  }
  swift_retain();
  return a1;
}

uint64_t sub_1C0D69678(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t result;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 24))
    swift_release();
  v4 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  v5 = (a1 + *(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  result = (*(uint64_t (**)(unint64_t))(v4 + 8))(v5);
  if (*(_QWORD *)((*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8) >= 0xFFFFFFFFuLL)
    return swift_release();
  return result;
}

_QWORD *sub_1C0D6970C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _OWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  a1[2] = a2[2];
  v8 = a2 + 3;
  v7 = a2[3];
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  if (v7)
  {
    v9 = a2[4];
    a1[3] = v7;
    a1[4] = v9;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 3) = *v8;
  }
  v10 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v11 = *(unsigned __int8 *)(v10 + 80);
  v12 = ((unint64_t)a1 + v11 + 40) & ~v11;
  v13 = ((unint64_t)a2 + v11 + 40) & ~v11;
  (*(void (**)(uint64_t, uint64_t))(v10 + 16))(v12, v13);
  v14 = *(_QWORD *)(v10 + 64) + 7;
  v15 = (v14 + v12) & 0xFFFFFFFFFFFFFFF8;
  v16 = (v14 + v13) & 0xFFFFFFFFFFFFFFF8;
  if (*(_QWORD *)v16 < 0xFFFFFFFFuLL)
  {
    *(_OWORD *)v15 = *(_OWORD *)v16;
  }
  else
  {
    v17 = *(_QWORD *)(v16 + 8);
    *(_QWORD *)v15 = *(_QWORD *)v16;
    *(_QWORD *)(v15 + 8) = v17;
    swift_retain();
  }
  return a1;
}

_QWORD *sub_1C0D697F8(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  unint64_t *v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;

  *a1 = *a2;
  a1[1] = a2[1];
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  swift_bridgeObjectRelease();
  v6 = a2[3];
  if (a1[3])
  {
    if (v6)
    {
      v7 = a2[4];
      a1[3] = v6;
      a1[4] = v7;
      swift_retain();
      swift_release();
      goto LABEL_8;
    }
    swift_release();
  }
  else if (v6)
  {
    v8 = a2[4];
    a1[3] = v6;
    a1[4] = v8;
    swift_retain();
    goto LABEL_8;
  }
  *(_OWORD *)(a1 + 3) = *(_OWORD *)(a2 + 3);
LABEL_8:
  v9 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v10 = *(unsigned __int8 *)(v9 + 80);
  v11 = ((unint64_t)a1 + v10 + 40) & ~v10;
  v12 = ((unint64_t)a2 + v10 + 40) & ~v10;
  (*(void (**)(uint64_t, uint64_t))(v9 + 24))(v11, v12);
  v13 = *(_QWORD *)(v9 + 64) + 7;
  v14 = (_QWORD *)((v13 + v11) & 0xFFFFFFFFFFFFFFF8);
  v15 = (unint64_t *)((v13 + v12) & 0xFFFFFFFFFFFFFFF8);
  v16 = *v15;
  if (*v14 < 0xFFFFFFFFuLL)
  {
    if (v16 >= 0xFFFFFFFF)
    {
      v18 = v15[1];
      *v14 = v16;
      v14[1] = v18;
      swift_retain();
      return a1;
    }
LABEL_14:
    *(_OWORD *)v14 = *(_OWORD *)v15;
    return a1;
  }
  if (v16 < 0xFFFFFFFF)
  {
    swift_release();
    goto LABEL_14;
  }
  v17 = v15[1];
  *v14 = v16;
  v14[1] = v17;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_1C0D69970(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;

  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v6 = *(unsigned __int8 *)(v5 + 80);
  v7 = (v6 + 40 + a1) & ~v6;
  v8 = (v6 + 40 + a2) & ~v6;
  (*(void (**)(uint64_t, uint64_t))(v5 + 32))(v7, v8);
  v9 = *(_QWORD *)(v5 + 64) + 7;
  v10 = (v9 + v7) & 0xFFFFFFFFFFFFFFF8;
  v11 = (uint64_t *)((v9 + v8) & 0xFFFFFFFFFFFFFFF8);
  v12 = *v11;
  if ((unint64_t)*v11 < 0xFFFFFFFF)
  {
    *(_OWORD *)v10 = *(_OWORD *)v11;
  }
  else
  {
    v13 = v11[1];
    *(_QWORD *)v10 = v12;
    *(_QWORD *)(v10 + 8) = v13;
  }
  return a1;
}

_QWORD *sub_1C0D69A14(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  unint64_t *v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRelease();
  v7 = a2[3];
  if (a1[3])
  {
    if (v7)
    {
      v8 = a2[4];
      a1[3] = v7;
      a1[4] = v8;
      swift_release();
      goto LABEL_8;
    }
    swift_release();
  }
  else if (v7)
  {
    v9 = a2[4];
    a1[3] = v7;
    a1[4] = v9;
    goto LABEL_8;
  }
  *(_OWORD *)(a1 + 3) = *(_OWORD *)(a2 + 3);
LABEL_8:
  v10 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v11 = *(unsigned __int8 *)(v10 + 80);
  v12 = ((unint64_t)a1 + v11 + 40) & ~v11;
  v13 = ((unint64_t)a2 + v11 + 40) & ~v11;
  (*(void (**)(uint64_t, uint64_t))(v10 + 40))(v12, v13);
  v14 = *(_QWORD *)(v10 + 64) + 7;
  v15 = (_QWORD *)((v14 + v12) & 0xFFFFFFFFFFFFFFF8);
  v16 = (unint64_t *)((v14 + v13) & 0xFFFFFFFFFFFFFFF8);
  v17 = *v16;
  if (*v15 < 0xFFFFFFFFuLL)
  {
    if (v17 >= 0xFFFFFFFF)
    {
      v19 = v16[1];
      *v15 = v17;
      v15[1] = v19;
      return a1;
    }
LABEL_14:
    *(_OWORD *)v15 = *(_OWORD *)v16;
    return a1;
  }
  if (v17 < 0xFFFFFFFF)
  {
    swift_release();
    goto LABEL_14;
  }
  v18 = v16[1];
  *v15 = v17;
  v15[1] = v18;
  swift_release();
  return a1;
}

uint64_t sub_1C0D69B5C(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;
  unsigned int v9;
  unsigned int v10;
  uint64_t v11;
  unint64_t v13;

  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned int *)(v5 + 84);
  if (v6 <= 0x7FFFFFFF)
    v7 = 0x7FFFFFFF;
  else
    v7 = *(_DWORD *)(v5 + 84);
  if (!a2)
    return 0;
  v8 = *(unsigned __int8 *)(v5 + 80);
  if (v7 >= a2)
  {
    if ((v6 & 0x80000000) != 0)
    {
      return sub_1C07B2D80((a1 + v8 + 40) & ~v8, v6, v4);
    }
    else
    {
      v13 = *(_QWORD *)(a1 + 8);
      if (v13 >= 0xFFFFFFFF)
        LODWORD(v13) = -1;
      return (v13 + 1);
    }
  }
  else
  {
    if (((((*(_QWORD *)(v5 + 64) + ((v8 + 40) & ~v8) + 7) & 0xFFFFFFFFFFFFFFF8) + 16) & 0xFFFFFFF8) != 0)
      v9 = 2;
    else
      v9 = a2 - v7 + 1;
    if (v9 >= 0x10000)
      v10 = 4;
    else
      v10 = 2;
    if (v9 < 0x100)
      v10 = 1;
    if (v9 >= 2)
      v11 = v10;
    else
      v11 = 0;
    return ((uint64_t (*)(void))((char *)&loc_1C0D69BE8 + 4 * byte_1C10B9EB0[v11]))();
  }
}

void sub_1C0D69C64(unsigned int *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  unsigned int v6;
  size_t v7;
  unsigned int v8;
  int v9;
  int v10;
  unsigned int v11;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v5 + 84) <= 0x7FFFFFFFu)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v5 + 84);
  v7 = ((*(_QWORD *)(v5 + 64)
       + ((*(unsigned __int8 *)(v5 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))
       + 7) & 0xFFFFFFFFFFFFFFF8)
     + 16;
  if (v6 >= a3)
  {
    v10 = 0u;
  }
  else
  {
    if (((*(_DWORD *)(v5 + 64) + ((*(unsigned __int8 *)(v5 + 80) + 40) & ~*(unsigned __int8 *)(v5 + 80)) + 7) & 0xFFFFFFF8) == 0xFFFFFFF0)
      v8 = a3 - v6 + 1;
    else
      v8 = 2;
    if (v8 >= 0x10000)
      v9 = 4;
    else
      v9 = 2;
    if (v8 < 0x100)
      v9 = 1;
    if (v8 >= 2)
      v10 = v9;
    else
      v10 = 0;
  }
  if (a2 > v6)
  {
    if ((_DWORD)v7)
    {
      v11 = ~v6 + a2;
      bzero(a1, v7);
      *a1 = v11;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X12 }
}

uint64_t sub_1C0D69D64@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  *(_BYTE *)(v5 + v6) = 0;
  if ((_DWORD)a1)
  {
    if ((a2 & 0x80000000) != 0)
    {
      return sub_1C07B2D8C((v5 + v4 + 40) & a4, a1, a2, a3);
    }
    else if ((a1 & 0x80000000) != 0)
    {
      *(_OWORD *)(v5 + 8) = 0u;
      *(_OWORD *)(v5 + 24) = 0u;
      *(_QWORD *)v5 = a1 ^ 0x80000000;
    }
    else
    {
      *(_QWORD *)(v5 + 8) = (a1 - 1);
    }
  }
  return result;
}

uint64_t type metadata accessor for StatusUpdater(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C0802884(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for StatusUpdater);
}

uint64_t sub_1C0D69E00(uint64_t a1)
{
  uint64_t result;

  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 24))
    return swift_release();
  return result;
}

_QWORD *sub_1C0D69E44(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  _OWORD *v6;
  uint64_t v7;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  a1[2] = a2[2];
  v6 = a2 + 3;
  v5 = a2[3];
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  if (v5)
  {
    v7 = a2[4];
    a1[3] = v5;
    a1[4] = v7;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 3) = *v6;
  }
  return a1;
}

_QWORD *sub_1C0D69EBC(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *a1 = *a2;
  a1[1] = a2[1];
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  swift_bridgeObjectRelease();
  v4 = a2[3];
  if (!a1[3])
  {
    if (v4)
    {
      v6 = a2[4];
      a1[3] = v4;
      a1[4] = v6;
      swift_retain();
      return a1;
    }
LABEL_7:
    *(_OWORD *)(a1 + 3) = *(_OWORD *)(a2 + 3);
    return a1;
  }
  if (!v4)
  {
    swift_release();
    goto LABEL_7;
  }
  v5 = a2[4];
  a1[3] = v4;
  a1[4] = v5;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_1C0D69F78(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 24);
  if (!*(_QWORD *)(a1 + 24))
  {
    if (v4)
    {
      v6 = *(_QWORD *)(a2 + 32);
      *(_QWORD *)(a1 + 24) = v4;
      *(_QWORD *)(a1 + 32) = v6;
      return a1;
    }
LABEL_7:
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
    return a1;
  }
  if (!v4)
  {
    swift_release();
    goto LABEL_7;
  }
  v5 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = v4;
  *(_QWORD *)(a1 + 32) = v5;
  swift_release();
  return a1;
}

uint64_t (*sub_1C0D6A010(uint64_t a1))(uint64_t a1, uint64_t a2)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, uint64_t);

  v2 = *(_QWORD *)(v1 + 24);
  v3 = *(_QWORD *)(v1 + 32);
  if (v2)
  {
    v5 = swift_allocObject();
    *(_OWORD *)(v5 + 16) = *(_OWORD *)(a1 + 16);
    *(_QWORD *)(v5 + 32) = *(_QWORD *)(a1 + 32);
    *(_QWORD *)(v5 + 40) = v2;
    *(_QWORD *)(v5 + 48) = v3;
    v6 = sub_1C0D6A130;
  }
  else
  {
    v6 = 0;
  }
  sub_1C0BCD07C(v2);
  return v6;
}

uint64_t sub_1C0D6A090@<X0>(_QWORD *a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;

  v4 = *v1;
  v3 = v1[1];
  v5 = v1[2];
  v6 = v1[3];
  v7 = v1[4];
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  result = sub_1C0BCD07C(v6);
  *a1 = v4;
  a1[1] = v3;
  a1[2] = v5;
  a1[3] = v6;
  a1[4] = v7;
  return result;
}

uint64_t sub_1C0D6A0F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a1 + 16) - 8) + 16))(a2, v2 + *(int *)(a1 + 44));
}

uint64_t sub_1C0D6A10C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C0D6A130(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t, _OWORD *);
  __int128 v4;
  _OWORD v6[2];
  uint64_t v7;

  v3 = *(uint64_t (**)(uint64_t, _OWORD *))(v2 + 40);
  v4 = *(_OWORD *)(a2 + 16);
  v6[0] = *(_OWORD *)a2;
  v6[1] = v4;
  v7 = *(_QWORD *)(a2 + 32);
  return v3(a1, v6);
}

uint64_t sub_1C0D6A170(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v15[5];
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20[4];
  unsigned __int8 v21;

  v21 = 2;
  sub_1C0E72330(a1, (uint64_t)sub_1C0D6AC18, (uint64_t)v15, 0, a5, a6, a7, a8, v15[0], v15[1], (uint64_t)&v21, a1, v15[4], v16, v17, v18, v19, v20[0], v20[1],
    v20[2]);
  if (qword_1ED762B20 != -1)
    swift_once();
  v8 = sub_1C077585C();
  sub_1C079E000(v8, (uint64_t)qword_1ED78D9F8);
  v9 = sub_1C106F538();
  v10 = sub_1C1070378();
  if (os_log_type_enabled(v9, v10))
  {
    v11 = (uint8_t *)sub_1C0775854();
    v20[0] = sub_1C0775854();
    *(_DWORD *)v11 = 136315138;
    sub_1C0775864();
    LOBYTE(v16) = v21;
    v12 = sub_1C078B454();
    v16 = sub_1C0788DAC(v12, v13, v20);
    sub_1C10705AC();
    swift_bridgeObjectRelease();
    sub_1C07796F0(&dword_1C0771000, v9, v10, "StorageSystem: startup result: %s", v11);
    sub_1C0778610();
    sub_1C0776778();
  }

  sub_1C0775864();
  return v21;
}

uint64_t sub_1C0D6A440(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;

  v1 = result;
  if (qword_1ED7627A8 != -1)
    result = swift_once();
  v2 = qword_1ED78D8A0;
  v3 = *(_QWORD *)(qword_1ED78D8A0 + 16);
  if (v3)
  {
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    v4 = (uint64_t *)(v2 + 40);
    do
    {
      sub_1C0CA18A0(v1, *(v4 - 1), *v4);
      v4 += 2;
      --v3;
    }
    while (v3);
    return swift_bridgeObjectRelease();
  }
  return result;
}

void sub_1C0D6A4E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __n128 *inited;
  uint64_t v7;
  uint64_t v8;

  v1 = sub_1C079D8B8();
  MEMORY[0x1E0C80A78](v1);
  sub_1C077FD28();
  MEMORY[0x1E0C80A78](v2);
  sub_1C07A2FB0();
  MEMORY[0x1E0C80A78](v3);
  sub_1C078AF30();
  MEMORY[0x1E0C80A78](v4);
  sub_1C07816D0();
  MEMORY[0x1E0C80A78](v5);
  sub_1C07ACF80(&qword_1ED74D598);
  inited = (__n128 *)swift_initStackObject();
  sub_1C07A4C10(inited, (__n128)xmmword_1C107DE20);
  type metadata accessor for GraphStore();
  sub_1C077B5BC();
  sub_1C0793354();
  if (v0)
  {
    sub_1C077960C();
    sub_1C07B866C();
  }
  else
  {
    sub_1C0AC2BD4();
    sub_1C07785A8();
    sub_1C079BA6C();
    type metadata accessor for StateStore();
    sub_1C077B5BC();
    sub_1C07B8CE0();
    sub_1C07A60BC();
    sub_1C0D622D0();
    sub_1C07785A8();
    sub_1C079160C();
    type metadata accessor for OntologyStore();
    sub_1C077B5BC();
    sub_1C0795CF8();
    sub_1C0C6403C();
    sub_1C07785A8();
    sub_1C07977BC();
    type metadata accessor for KeyValueStore();
    sub_1C077B5BC();
    sub_1C079541C();
    v7 = sub_1C0BBC13C();
    sub_1C07785A8();
    inited[7].n128_u64[1] = v7;
    inited[8].n128_u64[0] = 0xD000000000000014;
    sub_1C07A1FEC((uint64_t)"GlobalKnowledgeStore");
    sub_1C0791FF4();
    sub_1C079C0AC();
    v8 = sub_1C0A74814();
    sub_1C07785A8();
    inited[9].n128_u64[0] = v8;
    sub_1C07ACF80(&qword_1ED758CC0);
    sub_1C106F97C();
    sub_1C089CCA8();
    sub_1C077960C();
  }
  sub_1C07757D0();
}

void sub_1C0D6A734()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __n128 *inited;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;

  v1 = sub_1C079D8B8();
  MEMORY[0x1E0C80A78](v1);
  sub_1C077FD28();
  MEMORY[0x1E0C80A78](v2);
  sub_1C07A2FB0();
  MEMORY[0x1E0C80A78](v3);
  sub_1C078AF30();
  MEMORY[0x1E0C80A78](v4);
  sub_1C07816D0();
  MEMORY[0x1E0C80A78](v5);
  sub_1C07ACF80(&qword_1ED74D598);
  inited = (__n128 *)swift_initStackObject();
  sub_1C07A4C10(inited, (__n128)xmmword_1C107DE20);
  type metadata accessor for GraphStore();
  sub_1C077B5BC();
  sub_1C0793354();
  if (v0)
  {
    sub_1C077960C();
    sub_1C07B866C();
  }
  else
  {
    sub_1C0BD87A4();
    sub_1C07785A8();
    sub_1C079BA6C();
    type metadata accessor for StateStore();
    sub_1C077B5BC();
    sub_1C07B8CE0();
    sub_1C07A60BC();
    sub_1C0BD87B8();
    sub_1C07785A8();
    sub_1C079160C();
    type metadata accessor for OntologyStore();
    sub_1C077B5BC();
    sub_1C0795CF8();
    sub_1C0BD87CC();
    sub_1C07785A8();
    sub_1C07977BC();
    type metadata accessor for KeyValueStore();
    sub_1C077B5BC();
    sub_1C079541C();
    sub_1C0BD8980();
    v8 = v7;
    sub_1C07785A8();
    inited[7].n128_u64[1] = v8;
    inited[8].n128_u64[0] = 0xD000000000000014;
    sub_1C07A1FEC((uint64_t)"GlobalKnowledgeStore");
    sub_1C0791FF4();
    sub_1C079C0AC();
    sub_1C0BD8B34();
    v10 = v9;
    sub_1C07785A8();
    inited[9].n128_u64[0] = v10;
    sub_1C07ACF80(&qword_1ED758CC0);
    sub_1C106F97C();
    sub_1C089CCA8();
    sub_1C077960C();
  }
  sub_1C07757D0();
}

uint64_t sub_1C0D6A984(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_1C0D6A9BC + 4 * byte_1C10B9FC0[a1]))(0xD00000000000001ELL, 0x80000001C110A9B0);
}

uint64_t sub_1C0D6A9BC(uint64_t a1)
{
  return a1 + 40;
}

unint64_t sub_1C0D6AA04()
{
  return 0xD000000000000025;
}

void sub_1C0D6AA20(unsigned __int8 a1)
{
  uint64_t inited;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_1C07ACF80(&qword_1ED761310);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C1079220;
  *(_QWORD *)(inited + 32) = sub_1C106FB14();
  *(_QWORD *)(inited + 40) = v3;
  v4 = sub_1C0D6A984(a1);
  *(_QWORD *)(inited + 72) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(inited + 48) = v4;
  *(_QWORD *)(inited + 56) = v5;
  sub_1C106F97C();
  sub_1C0775804();
}

uint64_t sub_1C0D6AAAC()
{
  sub_1C0D6CA84();
  return sub_1C1070D68();
}

uint64_t sub_1C0D6AAD4()
{
  sub_1C0D6CA84();
  return sub_1C1070D5C();
}

uint64_t sub_1C0D6AAFC()
{
  unsigned __int8 *v0;

  return sub_1C0D6A984(*v0);
}

unint64_t sub_1C0D6AB04()
{
  sub_1C0D6AA04();
  return 0xD000000000000025;
}

uint64_t sub_1C0D6AB20()
{
  unsigned __int8 *v0;

  return sub_1C07D9350(*v0);
}

void sub_1C0D6AB28()
{
  unsigned __int8 *v0;

  sub_1C0D6AA20(*v0);
}

uint64_t sub_1C0D6AB30()
{
  uint64_t v0;
  uint64_t result;

  sub_1C07ACF80(&qword_1ED762CA0);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1C108CFE0;
  *(_QWORD *)(v0 + 32) = type metadata accessor for GraphDatabase();
  *(_QWORD *)(v0 + 40) = &off_1E7A1CAA8;
  *(_QWORD *)(v0 + 48) = type metadata accessor for OntologyDatabase();
  *(_QWORD *)(v0 + 56) = &off_1E7A25AB0;
  *(_QWORD *)(v0 + 64) = type metadata accessor for StateDatabase();
  *(_QWORD *)(v0 + 72) = &off_1E7A30440;
  *(_QWORD *)(v0 + 80) = type metadata accessor for KeyValueDatabase();
  *(_QWORD *)(v0 + 88) = &off_1E7A220A0;
  *(_QWORD *)(v0 + 96) = type metadata accessor for ViewDatabase();
  *(_QWORD *)(v0 + 104) = &off_1E7A351A8;
  *(_QWORD *)(v0 + 112) = type metadata accessor for EventLogDatabase(0);
  *(_QWORD *)(v0 + 120) = &off_1E7A184A0;
  *(_QWORD *)(v0 + 128) = type metadata accessor for FeedbackLogDatabase(0);
  *(_QWORD *)(v0 + 136) = &off_1E7A1ADC0;
  result = type metadata accessor for GlobalKnowledgeDatabase();
  *(_QWORD *)(v0 + 144) = result;
  *(_QWORD *)(v0 + 152) = &off_1E7A1C678;
  qword_1ED78D8A0 = v0;
  return result;
}

uint64_t sub_1C0D6AC18()
{
  uint64_t v0;
  _BYTE *v1;
  uint64_t result;

  v1 = *(_BYTE **)(v0 + 16);
  result = sub_1C0D6AC44(*(_QWORD *)(v0 + 24));
  *v1 = result;
  return result;
}

uint64_t sub_1C0D6AC44(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint64_t v15;
  uint8_t *v16;
  const char *v17;
  int v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  NSObject *v22;
  os_log_type_t v23;
  uint8_t *v24;
  int v25;
  uint64_t v27;
  uint64_t v28;

  v2 = type metadata accessor for Configuration();
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1ED762B20 != -1)
    swift_once();
  v5 = sub_1C106F544();
  sub_1C079E000(v5, (uint64_t)qword_1ED78D9F8);
  sub_1C078E3E0(a1, (uint64_t)v4);
  v6 = sub_1C106F538();
  v7 = sub_1C1070378();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc();
    v9 = swift_slowAlloc();
    v28 = v9;
    *(_DWORD *)v8 = 136315138;
    v10 = Configuration.description.getter();
    v27 = sub_1C0788DAC(v10, v11, &v28);
    sub_1C10705AC();
    swift_bridgeObjectRelease();
    sub_1C078D09C((uint64_t)v4);
    _os_log_impl(&dword_1C0771000, v6, v7, "StorageSystem: starting up with %s", v8, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C3BA8270](v9, -1, -1);
    MEMORY[0x1C3BA8270](v8, -1, -1);
  }
  else
  {
    sub_1C078D09C((uint64_t)v4);
  }

  v12 = sub_1C0D6B18C(a1);
  if (v12 == 2)
  {
    v13 = sub_1C106F538();
    v14 = sub_1C1070390();
    if (os_log_type_enabled(v13, v14))
    {
      v15 = 2;
      v16 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v16 = 0;
      v17 = "StorageSystem: stateCheckAndRecovery failed.";
LABEL_31:
      _os_log_impl(&dword_1C0771000, v13, v14, v17, v16, 2u);
      MEMORY[0x1C3BA8270](v16, -1, -1);
      goto LABEL_32;
    }
    goto LABEL_28;
  }
  v15 = v12;
  v18 = sub_1C0D6B450(a1);
  if (v18 == 1)
  {
    v19 = sub_1C106F538();
    v20 = sub_1C10703A8();
    if (os_log_type_enabled(v19, v20))
    {
      v21 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v21 = 0;
      _os_log_impl(&dword_1C0771000, v19, v20, "StorageSystem: checkDatabase found one or more databases in a recoverable state.", v21, 2u);
      MEMORY[0x1C3BA8270](v21, -1, -1);
    }

    sub_1C0D6A440(a1);
    v15 = sub_1C0D6B18C(a1);
    if (!(_BYTE)v15)
    {
      v22 = sub_1C106F538();
      v23 = sub_1C107039C();
      if (os_log_type_enabled(v22, v23))
      {
        v24 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v24 = 0;
        _os_log_impl(&dword_1C0771000, v22, v23, "StorageSystem: warning: stateCheckAndRecovery did not detect and/or recover from state after checkout was recoverableState", v24, 2u);
        MEMORY[0x1C3BA8270](v24, -1, -1);
      }

    }
    v25 = sub_1C0D6B450(a1);
    if (v25 == 1)
    {
      v13 = sub_1C106F538();
      v14 = sub_1C1070390();
      if (os_log_type_enabled(v13, v14))
      {
        v15 = 2;
        v16 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v16 = 0;
        v17 = "StorageSystem: re-check of databases got into a recoverable state again, aborting.";
        goto LABEL_31;
      }
    }
    else if (v25 == 2)
    {
      v13 = sub_1C106F538();
      v14 = sub_1C1070390();
      if (os_log_type_enabled(v13, v14))
      {
        v15 = 2;
        v16 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v16 = 0;
        v17 = "StorageSystem: re-check of databases failed.";
        goto LABEL_31;
      }
    }
    else
    {
      if (v15 != 2)
        goto LABEL_29;
      v13 = sub_1C106F538();
      v14 = sub_1C1070390();
      if (os_log_type_enabled(v13, v14))
      {
        v15 = 2;
        v16 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v16 = 0;
        v17 = "StorageSystem: start up failed.";
        goto LABEL_31;
      }
    }
LABEL_28:
    v15 = 2;
    goto LABEL_32;
  }
  if (v18 == 2)
  {
    v13 = sub_1C106F538();
    v14 = sub_1C1070390();
    if (os_log_type_enabled(v13, v14))
    {
      v15 = 2;
      v16 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v16 = 0;
      v17 = "StorageSystem: checkDatabase failed.";
      goto LABEL_31;
    }
    goto LABEL_28;
  }
LABEL_29:
  v13 = sub_1C106F538();
  v14 = sub_1C10703A8();
  if (os_log_type_enabled(v13, v14))
  {
    v16 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v16 = 0;
    v17 = "StorageSystem: start up complete.";
    goto LABEL_31;
  }
LABEL_32:

  return v15;
}

uint64_t sub_1C0D6B18C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  char v6;
  uint64_t v8;
  unsigned __int8 v9;

  v1 = a1;
  v9 = 0;
  if (qword_1ED7627A8 != -1)
    a1 = swift_once();
  MEMORY[0x1E0C80A78](a1);
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C082A3A8();
  v3 = v2;
  swift_bridgeObjectRelease();
  v4 = 0;
  v5 = 0;
  do
  {
    v6 = v4;
    LOBYTE(v8) = *((_BYTE *)&unk_1E7A07078 + v5 + 32);
    sub_1C0D6BBF8((unsigned __int8 *)&v8, v3, v1, &v9);
    v4 = 1;
    v5 = 1u;
  }
  while ((v6 & 1) == 0);
  swift_bridgeObjectRelease();
  return v9;
}

uint64_t sub_1C0D6B450(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t *v11;

  if (qword_1ED7627A8 != -1)
LABEL_16:
    swift_once();
  v2 = qword_1ED78D8A0;
  v3 = *(_QWORD *)(qword_1ED78D8A0 + 16);
  if (!v3)
    return 0;
  v4 = *(_QWORD *)(qword_1ED78D8A0 + 32);
  v5 = *(_QWORD *)(qword_1ED78D8A0 + 40);
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  v6 = sub_1C0D6B54C(a1, v4, v5);
  if (v6 == 2)
  {
LABEL_11:
    v8 = 2;
  }
  else
  {
    v7 = 0;
    LODWORD(v8) = 0;
    v9 = (uint64_t *)(v2 + 56);
    v10 = v3 - 1;
    while (1)
    {
      v8 = v6 == 1 ? 1 : v8;
      if (v10 == v7)
        break;
      if ((unint64_t)++v7 >= *(_QWORD *)(v2 + 16))
      {
        __break(1u);
        goto LABEL_16;
      }
      v11 = v9 + 2;
      v6 = sub_1C0D6B54C(a1, *(v9 - 1), *v9);
      v9 = v11;
      if (v6 == 2)
        goto LABEL_11;
    }
  }
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t sub_1C0D6B54C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  os_log_type_t v3;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  unint64_t v12;
  void (*v13)(uint64_t, uint64_t, uint64_t);
  id v15[2];
  uint64_t v16[5];

  if (qword_1ED762B20 != -1)
    swift_once();
  v7 = sub_1C077585C();
  sub_1C079E000(v7, (uint64_t)qword_1ED78D9F8);
  v8 = sub_1C106F538();
  v9 = sub_1C1070384();
  if (sub_1C0790D48(v9))
  {
    v10 = (uint8_t *)sub_1C0775854();
    v15[0] = (id)sub_1C0775854();
    *(_DWORD *)v10 = 136315138;
    v16[0] = a2;
    v16[1] = a3;
    sub_1C07ACF80(&qword_1EF648B38);
    v11 = sub_1C078B454();
    v16[0] = sub_1C0788DAC(v11, v12, (uint64_t *)v15);
    sub_1C10705AC();
    swift_bridgeObjectRelease();
    sub_1C07796F0(&dword_1C0771000, v8, v3, "StorageSystem: %s: performing startup check of database.", v10);
    sub_1C0778610();
    sub_1C0776778();
  }

  v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(a3 + 32);
  v16[3] = a2;
  v16[4] = a3;
  sub_1C079DFC4(v16);
  v13(a1, a2, a3);
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v16);
  if ((*(_BYTE *)(a1 + *(int *)(type metadata accessor for Configuration() + 20)) & 4) != 0)
    sub_1C0CA18A0(a1, a2, a3);
  return 0;
}

uint64_t sub_1C0D6BBF8(unsigned __int8 *a1, uint64_t a2, uint64_t a3, _BYTE *a4)
{
  void *v4;
  id v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  NSObject *v27;
  os_log_type_t v28;
  _BOOL4 v29;
  uint8_t *v30;
  void *v31;
  void *v32;
  uint64_t v33;
  unint64_t v34;
  void *v35;
  uint64_t result;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  void *v45;
  void (*v46)(char *, uint64_t);
  id v47;
  char *v48;
  void *v49;
  id v50;
  void *v51;
  unsigned __int8 v52;
  char *v53;
  NSObject *v54;
  os_log_type_t v55;
  uint64_t v56;
  uint8_t *v57;
  uint64_t v58;
  unint64_t v59;
  void (*v60)(char *, uint64_t);
  void (*v61)(char *, char *, uint64_t);
  uint8_t *v62;
  void *v63;
  id v64;
  void *v65;
  unsigned int v66;
  id v67;
  NSObject *v68;
  os_log_type_t v69;
  uint8_t *v70;
  void *v71;
  id v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  _BYTE *v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  char *v80;
  unint64_t v81;
  uint64_t v82;
  id v83;
  char *v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  void (*v88)(char *, char *, uint64_t);
  uint64_t v89;
  uint64_t v90;
  id v91[2];

  v5 = v4;
  v76 = a4;
  v77 = a3;
  v87 = a2;
  v91[1] = *(id *)MEMORY[0x1E0C80C00];
  v7 = sub_1C106AB28();
  v89 = *(_QWORD *)(v7 - 8);
  v8 = MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v73 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x1E0C80A78](v8);
  v84 = (char *)&v73 - v12;
  v13 = MEMORY[0x1E0C80A78](v11);
  v80 = (char *)&v73 - v14;
  v15 = MEMORY[0x1E0C80A78](v13);
  v17 = (char *)&v73 - v16;
  MEMORY[0x1E0C80A78](v15);
  v19 = (char *)&v73 - v18;
  v20 = sub_1C07ACF80((uint64_t *)&unk_1ED762680);
  v21 = MEMORY[0x1E0C80A78](v20);
  v85 = (uint64_t)&v73 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v21);
  v24 = (char *)&v73 - v23;
  LODWORD(v25) = *a1;
  if (qword_1ED762B20 != -1)
LABEL_45:
    swift_once();
  v26 = sub_1C106F544();
  v78 = sub_1C079E000(v26, (uint64_t)qword_1ED78D9F8);
  v27 = sub_1C106F538();
  v28 = sub_1C1070378();
  v29 = os_log_type_enabled(v27, v28);
  v79 = v17;
  v75 = v10;
  if (v29)
  {
    v83 = v5;
    v30 = (uint8_t *)swift_slowAlloc();
    v31 = (void *)swift_slowAlloc();
    v86 = v19;
    v32 = v31;
    *(_DWORD *)v30 = 136315138;
    v91[0] = v31;
    if ((_DWORD)v25)
      v33 = 0x6552616D65686373;
    else
      v33 = 0x6574707572726F63;
    v88 = (void (*)(char *, char *, uint64_t))v7;
    if ((_DWORD)v25)
      v34 = 0xEB00000000746573;
    else
      v34 = 0xE900000000000064;
    v90 = sub_1C0788DAC(v33, v34, (uint64_t *)v91);
    v5 = v83;
    sub_1C10705AC();
    v7 = (uint64_t)v88;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C0771000, v27, v28, "StorageSystem: checking for %s", v30, 0xCu);
    swift_arrayDestroy();
    v35 = v32;
    v19 = v86;
    MEMORY[0x1C3BA8270](v35, -1, -1);
    MEMORY[0x1C3BA8270](v30, -1, -1);
  }

  result = sub_1C0D6E27C(v87, (char)v25);
  if (!v5)
  {
    v83 = *(id *)(result + 16);
    if (v83)
    {
      v74 = result;
      v37 = *(_QWORD *)(v87 + 16);
      if (v37)
      {
        v17 = (char *)((*(unsigned __int8 *)(v89 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v89 + 80));
        v38 = &v17[v87];
        v86 = *(char **)(v89 + 72);
        v88 = *(void (**)(char *, char *, uint64_t))(v89 + 16);
        _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
        while (1)
        {
          v88(v24, v38, v7);
          sub_1C07B2D8C((uint64_t)v24, 0, 1, v7);
          if (sub_1C07B2D80((uint64_t)v24, 1, v7) == 1)
            break;
          (*(void (**)(char *, char *, uint64_t))(v89 + 32))(v19, v24, v7);
          sub_1C0D6C60C((uint64_t)v19);
          (*(void (**)(char *, uint64_t))(v89 + 8))(v19, v7);
          v38 = &v86[(_QWORD)v38];
          if (!--v37)
            goto LABEL_18;
        }
        v73 = 0;
        swift_bridgeObjectRelease();
      }
      else
      {
        _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
LABEL_18:
        v73 = 0;
        sub_1C07B2D8C((uint64_t)v24, 1, 1, v7);
        swift_bridgeObjectRelease();
        v39 = *(unsigned __int8 *)(v89 + 80);
        v86 = *(char **)(v89 + 72);
        v88 = *(void (**)(char *, char *, uint64_t))(v89 + 16);
        v17 = (char *)((v39 + 32) & ~v39);
      }
      v10 = 0;
      v24 = &v17[v74];
      if ((_DWORD)v25)
        v40 = 0x6552616D65686373;
      else
        v40 = 0x6574707572726F63;
      v41 = 0xE900000000000064;
      if ((_DWORD)v25)
        v41 = 0xEB00000000746573;
      v81 = v41;
      v82 = v40;
      v25 = v80;
      v42 = v85;
      while (1)
      {
        v88((char *)v42, v24, v7);
        v19 = v10 + 1;
        if (__OFADD__(v10, 1))
        {
          __break(1u);
          goto LABEL_45;
        }
        sub_1C07B2D8C(v42, 0, 1, v7);
        if (sub_1C07B2D80(v42, 1, v7) == 1)
          break;
        v87 = (uint64_t)(v10 + 1);
        v43 = v89;
        (*(void (**)(char *, uint64_t, uint64_t))(v89 + 32))(v25, v42, v7);
        v17 = (char *)objc_msgSend((id)objc_opt_self(), sel_defaultManager);
        v44 = v84;
        sub_1C106AAD4();
        swift_bridgeObjectRelease();
        v45 = (void *)sub_1C106AAB0();
        v46 = *(void (**)(char *, uint64_t))(v43 + 8);
        v46(v44, v7);
        v91[0] = 0;
        v5 = objc_msgSend(v17, sel_removeItemAtURL_error_, v45, v91);

        v47 = v91[0];
        if (!(_DWORD)v5)
        {
          v63 = v47;
          sub_1C106AA14();

          swift_willThrow();
          v46(v25, v7);
          return swift_bridgeObjectRelease();
        }
        v46(v25, v7);
        ++v10;
        v24 = &v86[(_QWORD)v24];
        v42 = v85;
        if ((id)v87 == v83)
        {
          sub_1C07B2D8C(v85, 1, 1, v7);
          break;
        }
      }
      swift_bridgeObjectRelease();
      v48 = v79;
      sub_1C106AAC8();
      v49 = (void *)objc_opt_self();
      v50 = objc_msgSend(v49, sel_defaultManager);
      sub_1C106AB10();
      v51 = (void *)sub_1C106FAF0();
      swift_bridgeObjectRelease();
      v52 = objc_msgSend(v50, sel_fileExistsAtPath_, v51);

      if ((v52 & 1) != 0)
      {
        v53 = v75;
        v88(v75, v48, v7);
        v54 = sub_1C106F538();
        v55 = sub_1C10703A8();
        if (os_log_type_enabled(v54, v55))
        {
          v56 = v7;
          v57 = (uint8_t *)swift_slowAlloc();
          v88 = (void (*)(char *, char *, uint64_t))swift_slowAlloc();
          v91[0] = v88;
          *(_DWORD *)v57 = 136315138;
          v87 = (uint64_t)(v57 + 4);
          sub_1C0BAFC20();
          v58 = sub_1C1070C0C();
          v90 = sub_1C0788DAC(v58, v59, (uint64_t *)v91);
          sub_1C10705AC();
          swift_bridgeObjectRelease();
          v60 = *(void (**)(char *, uint64_t))(v89 + 8);
          v60(v53, v56);
          _os_log_impl(&dword_1C0771000, v54, v55, "StorageSystem: removing %s", v57, 0xCu);
          v61 = v88;
          swift_arrayDestroy();
          MEMORY[0x1C3BA8270](v61, -1, -1);
          v62 = v57;
          v7 = v56;
          MEMORY[0x1C3BA8270](v62, -1, -1);
        }
        else
        {
          v60 = *(void (**)(char *, uint64_t))(v89 + 8);
          v60(v53, v7);
        }

        v64 = objc_msgSend(v49, sel_defaultManager);
        v65 = (void *)sub_1C106AAB0();
        v91[0] = 0;
        v66 = objc_msgSend(v64, sel_removeItemAtURL_error_, v65, v91);

        if (!v66)
        {
          v72 = v91[0];
          sub_1C106AA14();

          swift_willThrow();
          return ((uint64_t (*)(char *, uint64_t))v60)(v48, v7);
        }
        v67 = v91[0];
      }
      *v76 = 1;
      v68 = sub_1C106F538();
      v69 = sub_1C10703A8();
      if (os_log_type_enabled(v68, v69))
      {
        v70 = (uint8_t *)swift_slowAlloc();
        v71 = (void *)swift_slowAlloc();
        v91[0] = v71;
        *(_DWORD *)v70 = 136315138;
        v90 = sub_1C0788DAC(0xD000000000000036, 0x80000001C110A9F0, (uint64_t *)v91);
        v48 = v79;
        sub_1C10705AC();
        _os_log_impl(&dword_1C0771000, v68, v69, "StorageSystem: Posting notification %s", v70, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1C3BA8270](v71, -1, -1);
        MEMORY[0x1C3BA8270](v70, -1, -1);
      }

      notify_post("com.apple.intelligenceplatform.StorageSystem.Recovered");
      return (*(uint64_t (**)(char *, uint64_t))(v89 + 8))(v48, v7);
    }
    else
    {
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

void sub_1C0D6C60C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  void *v14;
  void *v15;
  _QWORD v16[4];
  uint64_t v17;

  v3 = sub_1C106AB28();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1ED762B20 != -1)
    swift_once();
  v7 = sub_1C106F544();
  sub_1C079E000(v7, (uint64_t)qword_1ED78D9F8);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, a1, v3);
  v8 = sub_1C106F538();
  v9 = sub_1C10703A8();
  if (os_log_type_enabled(v8, v9))
  {
    v10 = (uint8_t *)swift_slowAlloc();
    v11 = swift_slowAlloc();
    v16[1] = a1;
    v17 = v11;
    v16[2] = v1;
    *(_DWORD *)v10 = 136315138;
    v16[0] = v10 + 4;
    sub_1C0BAFC20();
    v12 = sub_1C1070C0C();
    v16[3] = sub_1C0788DAC(v12, v13, &v17);
    sub_1C10705AC();
    sub_1C077960C();
    sub_1C077F398();
    _os_log_impl(&dword_1C0771000, v8, v9, "StorageSystem: truncating database at %s", v10, 0xCu);
    swift_arrayDestroy();
    sub_1C0776778();
  }
  sub_1C077F398();

  v14 = (void *)objc_opt_self();
  sub_1C106AB10();
  v15 = (void *)sub_1C106FAF0();
  sub_1C077960C();
  objc_msgSend(v14, sel_truncateDatabaseAtPath_, v15);

}

uint64_t sub_1C0D6C830(uint64_t a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD))(*(_QWORD *)(a1 + 8) + 24))(*(_QWORD *)(v1 + 16));
}

uint64_t storeEnumTagSinglePayload for StorageSystemStartupResult(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1C0D6C8B4 + 4 * byte_1C10B9FD5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1C0D6C8E8 + 4 * byte_1C10B9FD0[v4]))();
}

uint64_t sub_1C0D6C8E8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C0D6C8F0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C0D6C8F8);
  return result;
}

uint64_t sub_1C0D6C904(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C0D6C90CLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1C0D6C910(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C0D6C918(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for StorageSystemStartupResult()
{
  return &type metadata for StorageSystemStartupResult;
}

uint64_t storeEnumTagSinglePayload for StorageError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1C0D6C980 + 4 * byte_1C10B9FDF[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1C0D6C9B4 + 4 * byte_1C10B9FDA[v4]))();
}

uint64_t sub_1C0D6C9B4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C0D6C9BC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C0D6C9C4);
  return result;
}

uint64_t sub_1C0D6C9D0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C0D6C9D8);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1C0D6C9DC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C0D6C9E4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for StorageError()
{
  return &type metadata for StorageError;
}

unint64_t sub_1C0D6CA08()
{
  unint64_t result;

  result = qword_1EF648B40;
  if (!qword_1EF648B40)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10BA0C0, &type metadata for StorageError);
    atomic_store(result, (unint64_t *)&qword_1EF648B40);
  }
  return result;
}

unint64_t sub_1C0D6CA48()
{
  unint64_t result;

  result = qword_1EF648B48;
  if (!qword_1EF648B48)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10BA128, &type metadata for StorageSystemStartupResult);
    atomic_store(result, (unint64_t *)&qword_1EF648B48);
  }
  return result;
}

unint64_t sub_1C0D6CA84()
{
  unint64_t result;

  result = qword_1EF648B50;
  if (!qword_1EF648B50)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10BA018, &type metadata for StorageError);
    atomic_store(result, (unint64_t *)&qword_1EF648B50);
  }
  return result;
}

uint64_t sub_1C0D6CAC0()
{
  NSObject *v0;
  uint64_t v1;
  os_log_type_t v2;
  uint8_t *v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v8;

  if (qword_1ED762B18 != -1)
    swift_once();
  v1 = sub_1C077585C();
  sub_1C079E000(v1, (uint64_t)qword_1ED762AF8);
  sub_1C077C0FC();
  v2 = sub_1C077B0C0();
  if (os_log_type_enabled(v0, v2))
  {
    v3 = (uint8_t *)sub_1C0775854();
    v8 = sub_1C0775854();
    *(_DWORD *)v3 = 136315138;
    v4 = sub_1C08D873C();
    sub_1C0788DAC(v4, v5, &v8);
    sub_1C078ACB4();
    swift_bridgeObjectRelease();
    sub_1C07796F0(&dword_1C0771000, v0, v2, "<%s: Starting observe notification>", v3);
    sub_1C0778610();
    sub_1C0776778();
  }

  MEMORY[0x1E0C80A78](v6);
  swift_retain();
  sub_1C106E4B8();
  return swift_release();
}

uint64_t sub_1C0D6CC60()
{
  uint64_t result;

  result = sub_1C106FAF0();
  qword_1ED78C420 = result;
  return result;
}

NSObject *sub_1C0D6CC94()
{
  uint64_t v0;
  NSObject *result;

  type metadata accessor for StorageSystemMonitor();
  v0 = sub_1C0780678();
  result = sub_1C0D6CCC4();
  qword_1ED78C3E8 = v0;
  return result;
}

NSObject *sub_1C0D6CCC4()
{
  NSObject *v0;
  os_log_type_t v1;
  NSObject *v2;
  uint64_t v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(uint64_t);

  v2 = v0;
  if (qword_1ED762B18 != -1)
    swift_once();
  v3 = sub_1C077585C();
  sub_1C079E000(v3, (uint64_t)qword_1ED762AF8);
  sub_1C077C0FC();
  v4 = sub_1C077B0C0();
  if (sub_1C077AF00(v4))
  {
    v5 = (uint8_t *)sub_1C0775854();
    sub_1C0775854();
    *(_DWORD *)v5 = 136315138;
    v6 = sub_1C08D873C();
    sub_1C0787B30(v6, v7, v8);
    sub_1C10705AC();
    swift_bridgeObjectRelease();
    sub_1C07796F0(&dword_1C0771000, v0, v1, "<%s: Init>", v5);
    sub_1C0778610();
    sub_1C0776778();
  }

  type metadata accessor for StorageSystemMonitor.GuardedData();
  v9 = sub_1C0780678();
  sub_1C07815A8();
  v10 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8];
  sub_1C106F700();
  sub_1C07803B8((unint64_t *)&qword_1ED762670, v10, MEMORY[0x1E0CB0018]);
  *(_QWORD *)(v9 + 16) = sub_1C106F97C();
  sub_1C07ACF80((uint64_t *)&unk_1ED741590);
  swift_allocObject();
  v2[2].isa = (Class)sub_1C106E4C4();
  return v2;
}

uint64_t type metadata accessor for StorageSystemMonitor()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for StorageSystemMonitor.GuardedData()
{
  return objc_opt_self();
}

uint64_t sub_1C0D6CECC(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char v22;
  id v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  uint64_t v48;

  v46 = a3;
  v48 = a2;
  v5 = type metadata accessor for Configuration();
  v44 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v45 = v6;
  v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1C1070414();
  v39 = *(_QWORD *)(v8 - 8);
  v40 = v8;
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1C1070498();
  v37 = *(_QWORD *)(v11 - 8);
  v38 = v11;
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v32 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_1C07ACF80(&qword_1ED74D260);
  v42 = *(_QWORD *)(v14 - 8);
  v43 = v14;
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v32 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_1C106AB28();
  v18 = *(_QWORD *)(v17 - 8);
  MEMORY[0x1E0C80A78](v17);
  v20 = (char *)&v32 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = *a1;
  v41 = v21 + 16;
  swift_beginAccess();
  if (*(_QWORD *)(*(_QWORD *)(v21 + 16) + 16))
  {
    sub_1C07A35E4();
    if ((v22 & 1) != 0)
      return swift_endAccess();
  }
  v35 = v7;
  v36 = v3;
  swift_endAccess();
  v33 = v17;
  v34 = v18;
  (*(void (**)(char *, uint64_t, uint64_t))(v18 + 16))(v20, v48, v17);
  v24 = objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
  if (qword_1ED74D3B0 != -1)
    swift_once();
  sub_1C10704A4();

  sub_1C1070408();
  sub_1C08D8780();
  v25 = (void *)sub_1C107042C();
  v47 = v25;
  sub_1C07803B8(&qword_1ED74D3D0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB1F30], MEMORY[0x1E0CB1F20]);
  sub_1C07803B8((unint64_t *)&unk_1ED74D390, (uint64_t (*)(uint64_t))sub_1C08D8780, MEMORY[0x1E0DEF7F8]);
  v26 = v38;
  sub_1C106F7D8();

  (*(void (**)(char *, uint64_t))(v39 + 8))(v10, v40);
  (*(void (**)(char *, uint64_t))(v37 + 8))(v13, v26);
  v27 = (uint64_t)v35;
  sub_1C078E3E0(v48, (uint64_t)v35);
  v28 = (*(unsigned __int8 *)(v44 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v44 + 80);
  v29 = (v45 + v28 + 7) & 0xFFFFFFFFFFFFFFF8;
  v30 = swift_allocObject();
  sub_1C078E578(v27, v30 + v28);
  *(_QWORD *)(v30 + v29) = v46;
  sub_1C08D885C();
  v31 = v43;
  sub_1C106F7F0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v42 + 8))(v16, v31);
  swift_beginAccess();
  sub_1C089FFA4();
  (*(void (**)(char *, uint64_t))(v34 + 8))(v20, v33);
  return swift_endAccess();
}

uint64_t sub_1C0D6D2A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint64_t v16;
  uint8_t *v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint8_t *v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v5 = type metadata accessor for Configuration();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1C07ACF80((uint64_t *)&unk_1ED761470);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = os_transaction_create();
  if (qword_1ED762B18 != -1)
    swift_once();
  v13 = sub_1C106F544();
  sub_1C079E000(v13, (uint64_t)qword_1ED762AF8);
  v14 = sub_1C106F538();
  v15 = sub_1C1070378();
  if (os_log_type_enabled(v14, v15))
  {
    v30 = v7;
    v16 = swift_slowAlloc();
    v28 = v6;
    v17 = (uint8_t *)v16;
    v18 = swift_slowAlloc();
    v32 = v18;
    v27 = v12;
    *(_DWORD *)v17 = 136315138;
    v29 = a2;
    v19 = sub_1C08D873C();
    v31 = sub_1C0788DAC(v19, v20, &v32);
    a2 = v29;
    v12 = v27;
    sub_1C10705AC();
    v7 = v30;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C0771000, v14, v15, "<%s: Received notification>", v17, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C3BA8270](v18, -1, -1);
    v21 = v17;
    v6 = v28;
    MEMORY[0x1C3BA8270](v21, -1, -1);
  }

  v22 = sub_1C10700C0();
  sub_1C07B2D8C((uint64_t)v11, 1, 1, v22);
  sub_1C078E3E0(a2, (uint64_t)v8);
  v23 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v24 = (v7 + v23 + 7) & 0xFFFFFFFFFFFFFFF8;
  v25 = swift_allocObject();
  *(_QWORD *)(v25 + 16) = 0;
  *(_QWORD *)(v25 + 24) = 0;
  sub_1C078E578((uint64_t)v8, v25 + v23);
  *(_QWORD *)(v25 + v24) = v12;
  *(_QWORD *)(v25 + ((v24 + 15) & 0xFFFFFFFFFFFFFFF8)) = a3;
  sub_1C09D0224((uint64_t)v11, (uint64_t)&unk_1EF648B68, v25);
  return swift_release();
}

uint64_t sub_1C0D6D560(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;

  *(_QWORD *)(v6 + 48) = a4;
  *(_QWORD *)(v6 + 56) = a6;
  return swift_task_switch();
}

uint64_t sub_1C0D6D578()
{
  NSObject *v0;
  _QWORD *v1;
  os_log_type_t v2;
  uint64_t v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;

  if (qword_1ED762B18 != -1)
    swift_once();
  v3 = sub_1C077585C();
  v1[8] = sub_1C079E000(v3, (uint64_t)qword_1ED762AF8);
  sub_1C077C0FC();
  v4 = sub_1C077B0C0();
  if (sub_1C077AF00(v4))
  {
    v5 = (uint8_t *)sub_1C0775854();
    sub_1C0775854();
    *(_DWORD *)v5 = 136315138;
    v6 = sub_1C08D873C();
    v1[5] = sub_1C0790F64(v6, v7, v8, v9, v10);
    sub_1C078ACB4();
    swift_bridgeObjectRelease();
    sub_1C07796F0(&dword_1C0771000, v0, v2, "<%s: Starting delta update>", v5);
    sub_1C0778610();
    sub_1C0776778();
  }

  if (qword_1ED755EC8 != -1)
    swift_once();
  v1[9] = sub_1C0CBD888();
  if (qword_1ED761418 != -1)
    swift_once();
  v11 = type metadata accessor for Source();
  v12 = sub_1C079E000(v11, (uint64_t)&unk_1ED761400);
  v13 = (_QWORD *)swift_task_alloc();
  v1[10] = v13;
  *v13 = v1;
  v13[1] = sub_1C0D6D8E0;
  return sub_1C0CC8F84(3, v12);
}

uint64_t sub_1C0D6D8E0()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 88) = v0;
  swift_task_dealloc();
  if (v0)
    return sub_1C0789D28();
  swift_release();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_1C0D6D94C()
{
  uint64_t v0;
  os_log_type_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;

  swift_release();
  v2 = *(_QWORD *)(v0 + 88);
  sub_1C077C818();
  sub_1C077C818();
  v3 = sub_1C106F538();
  v4 = sub_1C1070390();
  if (sub_1C077AF00(v4))
  {
    v5 = sub_1C0775854();
    sub_1C0775854();
    *(_DWORD *)v5 = 136315394;
    v6 = sub_1C08D873C();
    *(_QWORD *)(v0 + 16) = sub_1C0787B30(v6, v7, v8);
    sub_1C10705AC();
    swift_bridgeObjectRelease();
    *(_WORD *)(v5 + 12) = 2080;
    *(_QWORD *)(v0 + 24) = v2;
    sub_1C077C818();
    sub_1C07ACF80(&qword_1ED7614F0);
    v9 = sub_1C106FB5C();
    *(_QWORD *)(v0 + 32) = sub_1C0787B30(v9, v10, v11);
    sub_1C10705AC();
    swift_bridgeObjectRelease();
    sub_1C077C220();
    sub_1C077C220();
    _os_log_impl(&dword_1C0771000, v3, v1, "<%s: Can't run delta updates for BMAppleMusicEvent due to: %s>", (uint8_t *)v5, 0x16u);
    swift_arrayDestroy();
    sub_1C0776778();
  }
  sub_1C077C220();
  sub_1C077C220();
  sub_1C077C220();

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1C0D6DAF0(uint64_t *a1)
{
  uint64_t v1;

  return sub_1C0D6CECC(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_1C0D6DB08()
{
  uint64_t v0;

  sub_1C0779D10();
  v0 = sub_1C07815A8();
  sub_1C0780A94(v0);
  return swift_deallocObject();
}

uint64_t sub_1C0D6DB6C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  sub_1C0779D10();
  sub_1C0796274();
  return sub_1C0D6D2A8(a1, v1 + v3, *(_QWORD *)(v1 + v4));
}

uint64_t sub_1C0D6DBA8()
{
  uint64_t v0;

  sub_1C0779D10();
  swift_unknownObjectRelease();
  v0 = sub_1C07815A8();
  sub_1C0780A94(v0);
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C0D6DC2C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  sub_1C0779D10();
  sub_1C0796274();
  v4 = v0 + v3;
  v5 = *(_QWORD *)(v0 + ((v2 + 15) & 0xFFFFFFFFFFFFF8));
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v6;
  *v6 = v1;
  v6[1] = sub_1C0806670;
  v6[6] = v4;
  v6[7] = v5;
  return sub_1C0789D28();
}

uint64_t sub_1C0D6DCA4(uint64_t a1, char a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(_QWORD, _QWORD, _QWORD);
  NSObject *v18;
  os_log_type_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char *v25;
  char *v26;
  NSObject *v27;
  uint64_t v28;
  os_log_type_t v29;
  uint8_t *v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t (*v33)(char *, uint64_t);
  uint64_t v35;
  char *v36;
  uint64_t v37;
  void (*v38)(char *, uint64_t);
  void (*v39)(_QWORD, _QWORD, _QWORD);
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;

  v4 = sub_1C106AB28();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  sub_1C077AED0();
  v37 = v6;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v7);
  v36 = (char *)&v35 - v8;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v9);
  v43 = (char *)&v35 - v10;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v35 - v12;
  if (qword_1ED762B20 != -1)
    swift_once();
  v14 = 0x6574707572726F63;
  v15 = sub_1C106F544();
  v16 = sub_1C079E000(v15, (uint64_t)qword_1ED78D9F8);
  v17 = *(void (**)(_QWORD, _QWORD, _QWORD))(v5 + 16);
  v41 = a1;
  v39 = v17;
  v17(v13, a1, v4);
  v40 = v16;
  v18 = sub_1C106F538();
  v19 = sub_1C10703A8();
  if (os_log_type_enabled(v18, v19))
  {
    v20 = sub_1C0775854();
    v42 = v4;
    v21 = v20;
    v35 = sub_1C0775854();
    v45 = v35;
    *(_DWORD *)v21 = 136315394;
    if ((a2 & 1) != 0)
    {
      v14 = 0x6552616D65686373;
      v22 = 0xEB00000000746573;
    }
    else
    {
      v22 = 0xE900000000000064;
    }
    v44 = sub_1C0788DAC(v14, v22, &v45);
    sub_1C10705AC();
    swift_bridgeObjectRelease();
    *(_WORD *)(v21 + 12) = 2080;
    sub_1C0BAFC20();
    v23 = sub_1C1070C0C();
    v44 = sub_1C07936E8(v23, v24);
    sub_1C10705AC();
    sub_1C077960C();
    v38 = *(void (**)(char *, uint64_t))(v5 + 8);
    v38(v13, v42);
    _os_log_impl(&dword_1C0771000, v18, v19, "StorageSystem: placing %s marker for %s", (uint8_t *)v21, 0x16u);
    swift_arrayDestroy();
    sub_1C0776778();
  }
  v38 = *(void (**)(char *, uint64_t))(v5 + 8);
  v38(v13, v4);

  v25 = v43;
  sub_1C106AAD4();
  swift_bridgeObjectRelease();
  sub_1C106AC48();
  v26 = v36;
  sub_1C07AE1D8();
  v27 = sub_1C106F538();
  v28 = v4;
  v29 = sub_1C10703A8();
  if (os_log_type_enabled(v27, v29))
  {
    v30 = (uint8_t *)sub_1C0775854();
    v45 = sub_1C0775854();
    *(_DWORD *)v30 = 136315138;
    sub_1C0BAFC20();
    v31 = sub_1C1070C0C();
    v44 = sub_1C07936E8(v31, v32);
    sub_1C10705AC();
    sub_1C077960C();
    v38(v26, v28);
    _os_log_impl(&dword_1C0771000, v27, v29, "StorageSystem: successfully placed marker at %s", v30, 0xCu);
    sub_1C0778610();
    sub_1C0776778();
  }

  v33 = (uint64_t (*)(char *, uint64_t))v38;
  v38(v26, v28);
  return v33(v25, v28);
}

uint64_t sub_1C0D6E27C(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unsigned __int8 v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  char *v25;
  int v26;
  uint64_t v27;
  void (*v28)(char *, uint64_t, uint64_t);
  uint64_t v29;

  v5 = sub_1C07ACF80((uint64_t *)&unk_1ED762680);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1C07815A8();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  sub_1C077AED0();
  v27 = v10;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v11);
  v25 = (char *)&v21 - v12;
  v29 = MEMORY[0x1E0DEE9D8];
  v13 = *(_QWORD *)(a1 + 16);
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  v21 = a1;
  if (v13)
  {
    v26 = a2 & 1;
    v23 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
    v24 = v9;
    v14 = a1 + v23;
    v15 = *(_QWORD *)(v9 + 72);
    v28 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
    v16 = (uint64_t)v25;
    v22 = v15;
    while (1)
    {
      v28(v7, v14, v8);
      sub_1C077CF40((uint64_t)v7, 0);
      if (sub_1C07B2D80((uint64_t)v7, 1, v8) == 1)
        break;
      sub_1C0781F34(v16, (uint64_t)v7);
      v17 = sub_1C0D6E664(v16, v26);
      if (v2)
      {
        sub_1C07879B4();
        swift_bridgeObjectRelease();
        return swift_release();
      }
      if ((v17 & 1) != 0)
      {
        sub_1C0781F34(v27, v16);
        v18 = v29;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1C09D4DA4();
          v18 = v29;
        }
        v19 = *(_QWORD *)(v18 + 16);
        if (v19 >= *(_QWORD *)(v18 + 24) >> 1)
        {
          sub_1C09D4DA4();
          v18 = v29;
        }
        *(_QWORD *)(v18 + 16) = v19 + 1;
        v15 = v22;
        sub_1C0781F34(v18 + v23 + v19 * v22, v27);
        v29 = v18;
        v16 = (uint64_t)v25;
      }
      else
      {
        sub_1C07879B4();
      }
      v14 += v15;
      if (!--v13)
        goto LABEL_13;
    }
  }
  else
  {
LABEL_13:
    sub_1C077CF40((uint64_t)v7, 1);
  }
  swift_bridgeObjectRelease();
  sub_1C0918054((uint64_t)v7);
  return v29;
}

id sub_1C0D6E4D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  id v4;
  void *v5;
  id result;
  void *v7;
  id v8[2];

  v8[1] = *(id *)MEMORY[0x1E0C80C00];
  v0 = sub_1C07815A8();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
  sub_1C106AAD4();
  swift_bridgeObjectRelease();
  v5 = (void *)sub_1C106AAB0();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  v8[0] = 0;
  LOBYTE(v0) = objc_msgSend(v4, sel_removeItemAtURL_error_, v5, v8);

  result = v8[0];
  if ((v0 & 1) == 0)
  {
    v7 = result;
    sub_1C106AA14();

    return (id)swift_willThrow();
  }
  return result;
}

id sub_1C0D6E664(uint64_t a1, char a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  id v10;
  uint64_t v11;
  unint64_t v12;
  void *v13;
  id v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v4 = sub_1C07815A8();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  sub_1C077AED0();
  v25 = v6;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v22 - v8;
  v10 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
  if ((a2 & 1) != 0)
    v11 = 0x6552616D65686373;
  else
    v11 = 0x6574707572726F63;
  if ((a2 & 1) != 0)
    v12 = 0xEB00000000746573;
  else
    v12 = 0xE900000000000064;
  sub_1C106AAD4();
  swift_bridgeObjectRelease();
  sub_1C106AB10();
  v24 = *(void (**)(char *, uint64_t))(v5 + 8);
  v24(v9, v4);
  v13 = (void *)sub_1C106FAF0();
  swift_bridgeObjectRelease();
  v14 = objc_msgSend(v10, sel_fileExistsAtPath_, v13);

  if ((_DWORD)v14)
  {
    if (qword_1ED762B20 != -1)
      swift_once();
    v15 = sub_1C106F544();
    sub_1C079E000(v15, (uint64_t)qword_1ED78D9F8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v25, a1, v4);
    v16 = sub_1C106F538();
    v17 = sub_1C10703A8();
    if (os_log_type_enabled(v16, v17))
    {
      v18 = swift_slowAlloc();
      v23 = swift_slowAlloc();
      v27 = v23;
      *(_DWORD *)v18 = 136315394;
      v26 = sub_1C0788DAC(v11, v12, &v27);
      sub_1C10705AC();
      swift_bridgeObjectRelease();
      *(_WORD *)(v18 + 12) = 2080;
      sub_1C0BAFC20();
      v19 = sub_1C1070C0C();
      v26 = sub_1C0788DAC(v19, v20, &v27);
      sub_1C10705AC();
      swift_bridgeObjectRelease();
      sub_1C078FBA8();
      _os_log_impl(&dword_1C0771000, v16, v17, "StorageSystem: %s marker detected for %s", (uint8_t *)v18, 0x16u);
      swift_arrayDestroy();
      sub_1C0776778();
    }
    sub_1C078FBA8();

  }
  return v14;
}

uint64_t sub_1C0D6E96C(uint64_t a1, unint64_t *a2, _QWORD *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t result;
  uint64_t v19;
  void (*v20)(char *, uint64_t);
  uint64_t v21;
  uint64_t v22;
  unint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  char v34;
  unint64_t v35;
  unint64_t v36;
  char v37;
  unint64_t v38;
  char v39;
  char v40;
  unint64_t v41;
  char v42;
  _QWORD *v43;
  char v44;
  char v45;
  unint64_t v46;
  _QWORD *v47;
  uint64_t v48;
  BOOL v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char v57;
  char v58;
  char v59;
  _QWORD *v60;
  char *v61;
  uint64_t v62;
  _QWORD *v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  void (*v67)(char *, uint64_t);
  char *v68;
  uint64_t v69;
  unint64_t *v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;
  unint64_t v74;
  uint64_t v75;

  v4 = v3;
  v63 = a3;
  v70 = a2;
  v6 = sub_1C106C040();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v61 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v61 - v11;
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v61 - v14;
  v16 = sub_1C106C3F4();
  sub_1C0787B38();
  sub_1C106C034();
  v17 = sub_1C106C37C();
  if (v3)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v15, v6);
    return sub_1C0794E84();
  }
  else
  {
    v19 = v17;
    v75 = v16;
    v68 = v9;
    v69 = a1;
    v61 = v12;
    v20 = *(void (**)(char *, uint64_t))(v7 + 8);
    v20(v15, v6);
    sub_1C0794E84();
    v21 = sub_1C09D674C();
    v22 = v6;
    v66 = 0x80000001C110ABD0;
    v67 = v20;
    v64 = v6;
    v65 = v19;
    v23 = v70;
    while (v21)
    {
      v72 = v21;
      sub_1C0B5EFE4();
      if (v4)
        goto LABEL_32;
      v26 = v24;
      v27 = v25;
      v73 = 0;
      v74 = 0xE000000000000000;
      sub_1C1070774();
      swift_bridgeObjectRelease();
      v73 = 0xD00000000000001ALL;
      v74 = v66;
      v28 = v27;
      sub_1C106FC94();
      sub_1C0787B38();
      sub_1C106C034();
      v29 = sub_1C106C3DC();
      v71 = 0;
      v30 = v29;
      swift_bridgeObjectRelease();
      sub_1C078FBB8();
      sub_1C0794E84();
      if (!v30 || (swift_retain(), sub_1C0B5E27C(), v32 = v31, v34 = v33, sub_1C0780A00(), (v34 & 1) != 0))
      {
        _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
        sub_1C07A14D8();
        v45 = v44;
        swift_bridgeObjectRelease();
        if ((v45 & 1) != 0)
        {
          swift_isUniquelyReferenced_nonNull_native();
          v73 = *v23;
          *v23 = 0x8000000000000000;
          sub_1C07ACF80(&qword_1EF648B70);
          v23 = v70;
          v22 = v64;
          sub_1C107090C();
          v46 = v73;
          swift_bridgeObjectRelease();
          sub_1C1070924();
          *v23 = v46;
          sub_1C07A3FF0();
          sub_1C077B5B4();
        }
        else
        {
          sub_1C07A3FF0();
        }
        swift_bridgeObjectRelease();
        sub_1C0780A00();
      }
      else
      {
        v62 = v32;
        swift_isUniquelyReferenced_nonNull_native();
        v73 = *v23;
        v35 = v73;
        *v23 = 0x8000000000000000;
        v36 = sub_1C07A14D8();
        if (__OFADD__(*(_QWORD *)(v35 + 16), (v37 & 1) == 0))
        {
          __break(1u);
LABEL_31:
          __break(1u);
LABEL_32:
          swift_unexpectedError();
          __break(1u);
LABEL_33:
          result = sub_1C1070D44();
          __break(1u);
          return result;
        }
        v38 = v36;
        v39 = v37;
        sub_1C07ACF80(&qword_1EF648B70);
        v40 = sub_1C107090C();
        v22 = v64;
        v23 = v70;
        if ((v40 & 1) != 0)
        {
          v41 = sub_1C07A14D8();
          if ((v39 & 1) != (v42 & 1))
            goto LABEL_33;
          v38 = v41;
        }
        v43 = (_QWORD *)v73;
        if ((v39 & 1) != 0)
        {
          *(_QWORD *)(*(_QWORD *)(v73 + 56) + 8 * v38) = v62;
        }
        else
        {
          *(_QWORD *)(v73 + 8 * (v38 >> 6) + 64) |= 1 << v38;
          v47 = (_QWORD *)(v43[6] + 16 * v38);
          *v47 = v26;
          v47[1] = v28;
          *(_QWORD *)(v43[7] + 8 * v38) = v62;
          v48 = v43[2];
          v49 = __OFADD__(v48, 1);
          v50 = v48 + 1;
          if (v49)
            goto LABEL_31;
          v43[2] = v50;
          _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
        }
        *v23 = (unint64_t)v43;
        sub_1C07A3FF0();
        sub_1C0780A00();
        sub_1C077B5B4();
        swift_bridgeObjectRelease();
      }
      v51 = v71;
      v21 = sub_1C09D674C();
      v4 = v51;
      if (v51)
        return sub_1C077ED08();
    }
    sub_1C0787B38();
    v52 = v61;
    sub_1C106C034();
    v53 = sub_1C106C3DC();
    if (v4)
    {
      sub_1C077ED08();
      v67(v52, v22);
      return sub_1C0794E84();
    }
    v54 = v53;
    sub_1C078FBB8();
    sub_1C0794E84();
    if (v54)
    {
      swift_retain();
      sub_1C0B5E27C();
      v56 = v55;
      v58 = v57;
      sub_1C077ED08();
      result = swift_release_n();
      v59 = v58 & 1;
    }
    else
    {
      result = sub_1C077ED08();
      v56 = 0;
      v59 = 1;
    }
    v60 = v63;
    *v63 = v56;
    *((_BYTE *)v60 + 8) = v59;
  }
  return result;
}

char *sub_1C0D6EF2C(uint64_t a1)
{
  if (*(_QWORD *)(a1 + 16))
    return sub_1C0D6F2DC();
  else
    return 0;
}

_QWORD *sub_1C0D6EF5C()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  double v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  double v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  __int128 v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119[3];
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  unint64_t v123;
  __int128 v124;
  __int128 v125;
  uint64_t v126;

  v1 = v0;
  v2 = v0[4];
  v3 = sub_1C07A9480(v0, v0[3]);
  v11 = sub_1C079E920((uint64_t)v3, v4, v5, v6, v7, v8, v9, v10, v104, v111);
  if (*((_QWORD *)&v125 + 1))
  {
    sub_1C07A57F4((uint64_t)v11, v12, v13, v14, v15, v16, v17, v18, v105, v112);
    v19 = (*(uint64_t (**)(_QWORD, uint64_t))(v2 + 24))(*((_QWORD *)&v125 + 1), v2);
    _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)&v124);
    if (!v19)
    {
      v20 = v1[4];
      v21 = sub_1C07A9480(v1, v1[3]);
      v29 = sub_1C079E920((uint64_t)v21, v22, v23, v24, v25, v26, v27, v28, v106, v113);
      v37 = *((_QWORD *)&v125 + 1);
      if (*((_QWORD *)&v125 + 1))
      {
        v38 = sub_1C07A57F4((uint64_t)v29, v30, v31, v32, v33, v34, v35, v36, v107, v114);
        v39 = (*(uint64_t (**)(uint64_t, uint64_t))(v20 + 8))(v37, v20);
        sub_1C079D8D0(v39, v40, v41, v42, v43, v44, v45, v46, v108, v115);
        return v38;
      }
      sub_1C079BA90((uint64_t)v29, &qword_1EF634098, v31, v32, v33, v34, v35, v36, v107, v114, v117, v119[0]);
      v122 = 0x203A74616CLL;
      v123 = 0xE500000000000000;
      sub_1C07ACF80(&qword_1ED744990);
      v73 = sub_1C0787A5C();
      v110 = xmmword_1C1079220;
      *(_OWORD *)(v73 + 16) = xmmword_1C1079220;
      v74 = v1[3];
      v75 = v1[4];
      sub_1C07A9480(v1, v74);
      (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v75 + 24))(v119, v74, v75);
      v76 = v120;
      v77 = MEMORY[0x1E0DEB070];
      v78 = MEMORY[0x1E0DEB100];
      v79 = MEMORY[0x1E0DEB418];
      v80 = MEMORY[0x1E0DEB490];
      if (v120)
      {
        v81 = v121;
        sub_1C07A9480(v119, v120);
        v82 = (*(double (**)(uint64_t, uint64_t))(v81 + 8))(v76, v81);
        *((_QWORD *)&v125 + 1) = v77;
        v126 = v78;
        *(double *)&v124 = v82;
        v83 = _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v119);
        if (*((_QWORD *)&v125 + 1))
        {
          sub_1C077DD60(&v124, v73 + 32);
          goto LABEL_14;
        }
      }
      else
      {
        v83 = sub_1C0784B30((uint64_t)v119, &qword_1EF6398B0);
        v124 = 0u;
        v125 = 0u;
        v126 = 0;
      }
      *(_QWORD *)(v73 + 56) = v79;
      *(_QWORD *)(v73 + 64) = v80;
      *(_QWORD *)(v73 + 32) = 0;
      sub_1C079BA90(v83, &qword_1EF648B78, v84, v85, v86, v87, v88, v89, 1, 2, v118, v119[0]);
LABEL_14:
      sub_1C106FB38();
      sub_1C106FC94();
      swift_bridgeObjectRelease();
      sub_1C106FC94();
      v90 = sub_1C0787A5C();
      *(_OWORD *)(v90 + 16) = v110;
      v91 = v1[3];
      v92 = v1[4];
      sub_1C07A9480(v1, v91);
      (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v92 + 24))(v119, v91, v92);
      v93 = v120;
      if (v120)
      {
        v94 = v121;
        sub_1C07A9480(v119, v120);
        v95 = (*(double (**)(uint64_t, uint64_t))(v94 + 16))(v93, v94);
        *((_QWORD *)&v125 + 1) = v77;
        v126 = v78;
        *(double *)&v124 = v95;
        v96 = _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v119);
        if (*((_QWORD *)&v125 + 1))
        {
          sub_1C077DD60(&v124, v90 + 32);
LABEL_19:
          sub_1C106FB38();
          sub_1C106FC94();
          swift_bridgeObjectRelease();
          return (_QWORD *)v122;
        }
      }
      else
      {
        v96 = sub_1C0784B30((uint64_t)v119, &qword_1EF6398B0);
        v124 = 0u;
        v125 = 0u;
        v126 = 0;
      }
      *(_QWORD *)(v90 + 56) = v79;
      *(_QWORD *)(v90 + 64) = v80;
      *(_QWORD *)(v90 + 32) = 0;
      sub_1C079BA90(v96, &qword_1EF648B78, v97, v98, v99, v100, v101, v102, v110, *((uint64_t *)&v110 + 1), v118, v119[0]);
      goto LABEL_19;
    }
  }
  else
  {
    sub_1C079BA90((uint64_t)v11, &qword_1EF634098, v13, v14, v15, v16, v17, v18, v105, v112, v117, v119[0]);
  }
  v47 = sub_1C07A9480(v1, v1[3]);
  v55 = sub_1C079E920((uint64_t)v47, v48, v49, v50, v51, v52, v53, v54, v106, v113);
  v62 = *((_QWORD *)&v125 + 1);
  if (*((_QWORD *)&v125 + 1))
  {
    v63 = v126;
    v38 = sub_1C07A9480(&v124, *((uint64_t *)&v125 + 1));
    v64 = (*(uint64_t (**)(uint64_t, uint64_t))(v63 + 24))(v62, v63);
    v65 = RTPlaceInferenceUserSpecificPlaceType.description.getter(v64);
    sub_1C079D8D0(v65, v66, v67, v68, v69, v70, v71, v72, v109, v116);
  }
  else
  {
    sub_1C079BA90((uint64_t)v55, &qword_1EF634098, v56, v57, v58, v59, v60, v61, v109, v116, v117, v119[0]);
    return 0;
  }
  return v38;
}

char *sub_1C0D6F2DC()
{
  _QWORD *v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t *v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  NSObject *v40;
  os_log_type_t v41;
  uint8_t *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char v78;
  uint64_t *v79;
  _QWORD *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  _QWORD v101[3];
  uint64_t v102;
  _QWORD v103[3];
  uint64_t v104;
  uint64_t v105;
  __int128 v106;
  __int128 v107;
  uint64_t v108;
  uint64_t v109;

  v97 = sub_1C106F544();
  v96 = *(_QWORD *)(v97 - 8);
  MEMORY[0x1E0C80A78](v97);
  v2 = (char *)&v93 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_1C07ACF80(&qword_1ED762CE0);
  MEMORY[0x1E0C80A78](v3);
  sub_1C077AED0();
  v95 = v4;
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v93 - v6;
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v93 - v9;
  v11 = sub_1C106AE28();
  v98 = *(_QWORD *)(v11 - 8);
  v99 = v11;
  MEMORY[0x1E0C80A78](v11);
  sub_1C077AED0();
  v94 = v12;
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v93 - v14;
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v93 - v17;
  sub_1C07A9480(v0, v0[3]);
  sub_1C07883A0();
  if (v102)
  {
    sub_1C07A9480(v101, v102);
    sub_1C07883A0();
    if (v104)
    {
      sub_1C078B45C();
      sub_1C07883A0();
      _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v103);
      sub_1C0785100();
      goto LABEL_7;
    }
    sub_1C0785100();
    v19 = (uint64_t *)&unk_1EF6340A0;
    v20 = v103;
  }
  else
  {
    v19 = &qword_1EF634098;
    v20 = v101;
  }
  sub_1C0784B30((uint64_t)v20, v19);
  v106 = 0u;
  v107 = 0u;
  v108 = 0;
LABEL_7:
  sub_1C07A9480(v0, v0[3]);
  v21 = sub_1C07883A0();
  if (v104)
  {
    sub_1C078B45C();
    sub_1C07883A0();
    sub_1C078FBC0();
    v22 = v99;
    if (sub_1C07B2D80((uint64_t)v10, 1, v99) != 1)
    {
      v23 = v98;
      (*(void (**)(char *, char *, uint64_t))(v98 + 32))(v18, v10, v22);
      sub_1C106ADF8();
      if (qword_1ED749C30 != -1)
        swift_once();
      v24 = sub_1C078DE84();
      sub_1C079E000(v24, (uint64_t)&unk_1ED78C978);
      sub_1C0793FF8();
      sub_1C0791630();
      (*(void (**)(char *, uint64_t))(v23 + 8))(v18, v22);
      v25 = v100;
      goto LABEL_24;
    }
  }
  else
  {
    sub_1C0796B88(v21, &qword_1EF634098);
    v22 = v99;
    sub_1C078939C((uint64_t)v10, 1, 1);
  }
  sub_1C0784B30((uint64_t)v10, &qword_1ED762CE0);
  v26 = sub_1C07AE1EC();
  if (v104)
  {
    sub_1C07A14E4();
    sub_1C07A76C8();
    sub_1C078939C((uint64_t)v7, 0, 1);
    sub_1C078FBC0();
    v27 = sub_1C07B2D80((uint64_t)v7, 1, v22);
    v25 = v100;
    if (v27 != 1)
    {
      v23 = v98;
      (*(void (**)(char *, char *, uint64_t))(v98 + 32))(v15, v7, v22);
      sub_1C106ADF8();
      if (qword_1ED749C30 != -1)
        swift_once();
      v28 = sub_1C078DE84();
      sub_1C079E000(v28, (uint64_t)&unk_1ED78C978);
      sub_1C0793FF8();
      sub_1C0791630();
      (*(void (**)(char *, uint64_t))(v23 + 8))(v15, v22);
      goto LABEL_24;
    }
  }
  else
  {
    sub_1C0796B88(v26, &qword_1ED747E10);
    sub_1C078939C((uint64_t)v7, 1, 1);
    v25 = v100;
  }
  sub_1C0784B30((uint64_t)v7, &qword_1ED762CE0);
  sub_1C07A9480(v0, v0[3]);
  v29 = sub_1C07A76C8();
  if (v104)
  {
    v30 = v105;
    sub_1C07A9480(v103, v104);
    sub_1C07991AC(*(uint64_t (**)(uint64_t, uint64_t))(v30 + 8));
    v32 = v31;
    _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v103);
    sub_1C07A9480(v0, v0[3]);
    v29 = sub_1C07A76C8();
    if (v104)
    {
      v23 = v105;
      sub_1C07A9480(v103, v104);
      sub_1C07991AC(*(uint64_t (**)(uint64_t, uint64_t))(v23 + 16));
      v34 = v33;
      sub_1C078FBC0();
      sub_1C07ACF80(&qword_1ED744990);
      v35 = swift_allocObject();
      *(_OWORD *)(v35 + 16) = xmmword_1C1078FC0;
      v36 = MEMORY[0x1E0DEB070];
      v37 = MEMORY[0x1E0DEB100];
      *(_QWORD *)(v35 + 56) = MEMORY[0x1E0DEB070];
      *(_QWORD *)(v35 + 64) = v37;
      *(_QWORD *)(v35 + 32) = v32;
      *(_QWORD *)(v35 + 96) = v36;
      *(_QWORD *)(v35 + 104) = v37;
      *(_QWORD *)(v35 + 72) = v34;
      sub_1C106FB38();
      if (qword_1ED749C30 != -1)
        swift_once();
      v38 = sub_1C078DE84();
      sub_1C079E000(v38, (uint64_t)&unk_1ED78C978);
      sub_1C0793FF8();
      sub_1C0791630();
LABEL_24:
      type metadata accessor for LifeEventStructs.AddressRelationshipType(0);
      sub_1C077B5BC();
      sub_1C0FE49B4();
      v39 = sub_1C07AE1EC();
      if (v104)
      {
        sub_1C07A14E4();
        sub_1C07991AC(*(uint64_t (**)(uint64_t, uint64_t))(v23 + 80));
        sub_1C079A1C4();
      }
      else
      {
        sub_1C0796B88(v39, &qword_1ED747E10);
      }
      sub_1C07A3FF8(OBJC_IVAR____TtCO24IntelligencePlatformCore16LifeEventStructs23AddressRelationshipType_postalCode);
      v44 = sub_1C07AE1EC();
      if (v104)
      {
        sub_1C07A14E4();
        sub_1C07991AC(*(uint64_t (**)(uint64_t, uint64_t))(v23 + 88));
        sub_1C079A1C4();
      }
      else
      {
        sub_1C0796B88(v44, &qword_1ED747E10);
      }
      sub_1C07A3FF8(OBJC_IVAR____TtCO24IntelligencePlatformCore16LifeEventStructs23AddressRelationshipType_country);
      v45 = sub_1C07AE1EC();
      if (v104)
      {
        sub_1C07A14E4();
        sub_1C07991AC(*(uint64_t (**)(uint64_t, uint64_t))(v23 + 32));
        sub_1C079A1C4();
      }
      else
      {
        sub_1C0796B88(v45, &qword_1ED747E10);
      }
      sub_1C07A3FF8(OBJC_IVAR____TtCO24IntelligencePlatformCore16LifeEventStructs23AddressRelationshipType_thoroughfare);
      v46 = sub_1C07AE1EC();
      if (v104)
      {
        v23 = v105;
        sub_1C07A9480(v103, v104);
        sub_1C07991AC(*(uint64_t (**)(uint64_t, uint64_t))(v23 + 24));
        sub_1C079A1C4();
      }
      else
      {
        sub_1C0796B88(v46, &qword_1ED747E10);
      }
      sub_1C07A3FF8(OBJC_IVAR____TtCO24IntelligencePlatformCore16LifeEventStructs23AddressRelationshipType_subThoroughfare);
      v47 = sub_1C07AE1EC();
      if (v104)
      {
        sub_1C07A14E4();
        sub_1C07991AC(*(uint64_t (**)(uint64_t, uint64_t))(v23 + 40));
        sub_1C079A1C4();
      }
      else
      {
        sub_1C0796B88(v47, &qword_1ED747E10);
      }
      sub_1C07A3FF8(OBJC_IVAR____TtCO24IntelligencePlatformCore16LifeEventStructs23AddressRelationshipType_subLocality);
      v48 = sub_1C07AE1EC();
      if (v104)
      {
        sub_1C07A14E4();
        sub_1C07991AC(*(uint64_t (**)(uint64_t, uint64_t))(v23 + 48));
        sub_1C079A1C4();
      }
      else
      {
        sub_1C0796B88(v48, &qword_1ED747E10);
      }
      sub_1C07A3FF8(OBJC_IVAR____TtCO24IntelligencePlatformCore16LifeEventStructs23AddressRelationshipType_locality);
      v49 = sub_1C07AE1EC();
      if (v104)
      {
        sub_1C07A14E4();
        sub_1C07991AC(*(uint64_t (**)(uint64_t, uint64_t))(v23 + 56));
        sub_1C079A1C4();
      }
      else
      {
        sub_1C0796B88(v49, &qword_1ED747E10);
      }
      sub_1C07A3FF8(OBJC_IVAR____TtCO24IntelligencePlatformCore16LifeEventStructs23AddressRelationshipType_subAdministrativeArea);
      v50 = sub_1C07AE1EC();
      if (v104)
      {
        sub_1C07A14E4();
        sub_1C07991AC(*(uint64_t (**)(uint64_t, uint64_t))(v23 + 64));
        sub_1C079A1C4();
      }
      else
      {
        sub_1C0796B88(v50, &qword_1ED747E10);
      }
      sub_1C07A3FF8(OBJC_IVAR____TtCO24IntelligencePlatformCore16LifeEventStructs23AddressRelationshipType_administrativeArea);
      v51 = sub_1C07AE1EC();
      if (v104)
      {
        sub_1C07A14E4();
        sub_1C07991AC(*(uint64_t (**)(uint64_t, uint64_t))(v23 + 96));
        sub_1C079A1C4();
      }
      else
      {
        sub_1C0796B88(v51, &qword_1ED747E10);
      }
      sub_1C07A3FF8(OBJC_IVAR____TtCO24IntelligencePlatformCore16LifeEventStructs23AddressRelationshipType_isoCountryCode);
      sub_1C07A9480(v0, v0[3]);
      v52 = sub_1C07A76C8();
      if (v104)
      {
        v53 = v105;
        sub_1C07A9480(v103, v104);
        sub_1C07991AC(*(uint64_t (**)(uint64_t, uint64_t))(v53 + 8));
        sub_1C079A1C4();
      }
      else
      {
        sub_1C0796B88(v52, &qword_1EF634098);
      }
      sub_1C07A3FF8(OBJC_IVAR____TtCO24IntelligencePlatformCore16LifeEventStructs23AddressRelationshipType_name);
      sub_1C07A9480(v0, v0[3]);
      v54 = sub_1C07A76C8();
      if (v104)
      {
        v55 = sub_1C07A2B38();
        sub_1C078FBC0();
        if (v55)
        {
          v56 = RTPlaceInferenceUserSpecificPlaceType.description.getter(v55);
          sub_1C078F6B0(v56, v57);
        }
      }
      else
      {
        sub_1C0796B88(v54, &qword_1EF634098);
      }
      type metadata accessor for LifeEventStructs.Place(0);
      sub_1C077B5BC();
      sub_1C0FE56D4();
      if (v25)
      {
        sub_1C07A8304(v58, &qword_1ED747E10);
        swift_release();
        return v2;
      }
      v2 = (char *)v58;
      v59 = swift_retain();
      sub_1C0FDE888(v59);
      sub_1C07A9480(v0, v0[3]);
      v60 = sub_1C07A76C8();
      v100 = 0;
      if (v104
        && (v61 = v105,
            sub_1C07A9480(v103, v104),
            sub_1C07991AC(*(uint64_t (**)(uint64_t, uint64_t))(v61 + 8)),
            v63 = v62,
            _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v103),
            sub_1C07A9480(v0, v0[3]),
            v60 = sub_1C07A76C8(),
            v104))
      {
        v64 = v105;
        sub_1C07A9480(v103, v104);
        sub_1C07991AC(*(uint64_t (**)(uint64_t, uint64_t))(v64 + 16));
        v66 = v65;
        sub_1C078FBC0();
        type metadata accessor for LifeEventStructs.LocationRelationshipType(0);
        sub_1C077B5BC();
        sub_1C0FE15A0();
        if ((~v63 & 0x7FF0000000000000) != 0)
        {
          v67 = sub_1C1070180();
          sub_1C078F6B0(v67, v68);
        }
        if ((~v66 & 0x7FF0000000000000) != 0)
        {
          v69 = sub_1C1070180();
          sub_1C078F6B0(v69, v70);
        }
        v71 = sub_1C077E884();
        sub_1C0FDE8A4(v71);
        sub_1C077AF1C();
      }
      else
      {
        sub_1C0796B88(v60, &qword_1EF6398B0);
      }
      v109 = MEMORY[0x1E0DEE9D8];
      sub_1C07A9480(v0, v0[3]);
      sub_1C07A76C8();
      if (v102)
      {
        sub_1C07A9480(v101, v102);
        sub_1C07A76C8();
        if (v104)
        {
          v72 = sub_1C07A2B38();
          _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v103);
          sub_1C0785100();
          if (v72)
          {
            type metadata accessor for LifeEventStructs.IdentifierRelationshipType(0);
            sub_1C077B5BC();
            sub_1C0FDF5A0();
            v74 = v73;
            v103[0] = v72;
            v75 = sub_1C1070C0C();
            sub_1C078F6B0(v75, v76);
            *(_OWORD *)(v74
                      + OBJC_IVAR____TtCO24IntelligencePlatformCore16LifeEventStructs26IdentifierRelationshipType_identifierType) = xmmword_1C1088B90;
            swift_bridgeObjectRelease();
            v77 = sub_1C077E884();
            MEMORY[0x1C3BA6800](v77);
            sub_1C07B4428();
            if (v78)
              sub_1C07A03F0();
            sub_1C078CDD8();
            sub_1C106FF28();
            sub_1C077AF1C();
          }
LABEL_80:
          sub_1C07A9480(v0, v0[3]);
          v81 = sub_1C07A76C8();
          if (v104)
          {
            sub_1C07A14E4();
            v82 = v95;
            sub_1C07A76C8();
            sub_1C078FBC0();
            v83 = v99;
            if (sub_1C07B2D80(v82, 1, v99) != 1)
            {
              v84 = v98;
              v85 = v94;
              (*(void (**)(uint64_t, uint64_t, uint64_t))(v98 + 32))(v94, v82, v83);
              type metadata accessor for LifeEventStructs.IdentifierRelationshipType(0);
              sub_1C077B5BC();
              sub_1C0FDF5A0();
              v87 = v86;
              v88 = sub_1C106ADF8();
              sub_1C078F6B0(v88, v89);
              *(_OWORD *)(v87
                        + OBJC_IVAR____TtCO24IntelligencePlatformCore16LifeEventStructs26IdentifierRelationshipType_identifierType) = xmmword_1C10BA220;
              swift_bridgeObjectRelease();
              v90 = sub_1C077E884();
              MEMORY[0x1C3BA6800](v90);
              sub_1C07B4428();
              if (v78)
                sub_1C07A03F0();
              sub_1C078CDD8();
              sub_1C106FF28();
              sub_1C077AF1C();
              (*(void (**)(uint64_t, uint64_t))(v84 + 8))(v85, v83);
              goto LABEL_87;
            }
          }
          else
          {
            sub_1C0796B88(v81, &qword_1EF634098);
            v82 = v95;
            sub_1C07B2D8C(v95, 1, 1, v99);
          }
          sub_1C0784B30(v82, &qword_1ED762CE0);
LABEL_87:
          sub_1C0FDE8C0(v109);
          v91 = swift_release();
          sub_1C07A8304(v91, &qword_1ED747E10);
          return v2;
        }
        sub_1C0785100();
        v79 = (uint64_t *)&unk_1EF6340A0;
        v80 = v103;
      }
      else
      {
        v79 = &qword_1EF634098;
        v80 = v101;
      }
      sub_1C0784B30((uint64_t)v80, v79);
      goto LABEL_80;
    }
  }
  sub_1C0796B88(v29, &qword_1EF6398B0);
  sub_1C106F160();
  v40 = sub_1C106F538();
  v41 = sub_1C1070390();
  if (os_log_type_enabled(v40, v41))
  {
    v42 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v42 = 0;
    _os_log_impl(&dword_1C0771000, v40, v41, "Can not create location entity from stored visit: loi identifier, address and lat long are missing", v42, 2u);
    MEMORY[0x1C3BA8270](v42, -1, -1);
  }

  v43 = (*(uint64_t (**)(char *, uint64_t))(v96 + 8))(v2, v97);
  sub_1C07A8304(v43, &qword_1ED747E10);
  return 0;
}

uint64_t sub_1C0D6FFE4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1C07ACF80(&qword_1ED747E10);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

ValueMetadata *type metadata accessor for StoredLocationVisit()
{
  return &type metadata for StoredLocationVisit;
}

double sub_1C0D7003C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  double v5;
  _QWORD v7[3];
  uint64_t v8;
  uint64_t v9;

  v1 = v0[3];
  v2 = v0[4];
  sub_1C07A9480(v0, v1);
  (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v2 + 32))(v7, v1, v2);
  v3 = v8;
  if (v8)
  {
    v4 = v9;
    sub_1C07A9480(v7, v8);
    v5 = (*(double (**)(uint64_t, uint64_t))(v4 + 32))(v3, v4);
    _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v7);
  }
  else
  {
    sub_1C0784B30((uint64_t)v7, &qword_1EF634098);
    return 0.0;
  }
  return v5;
}

BOOL sub_1C0D700E8(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  double v29;
  double v30;
  uint64_t v31;
  double v32;
  double v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _BOOL8 v53;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  double v58;
  double v59;
  uint64_t v60;
  double v61;
  double v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  double v67;
  double v68;
  uint64_t v69;
  double v70;
  double v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  BOOL v78;
  char v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t *v84;
  _QWORD *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t *v88;
  _QWORD *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t *v92;
  _QWORD *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  char v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  char v108;
  uint64_t v109;
  uint64_t v110;
  void (*v111)(uint64_t, uint64_t);
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  char v121;
  uint64_t v122;
  uint64_t v123;
  char v124;
  void (*v125)(uint64_t, uint64_t);
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  double v129;
  double v130;
  uint64_t v131;
  double v132;
  double v133;
  uint64_t v134;
  uint64_t v135;
  double v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  char *v146;
  uint64_t v147;
  _BYTE v148[40];
  _BYTE v149[40];
  _QWORD v150[5];
  _QWORD v151[5];
  _QWORD v152[5];
  _QWORD v153[5];
  _QWORD v154[3];
  uint64_t v155;
  _QWORD v156[3];
  uint64_t v157;
  _QWORD v158[3];
  uint64_t v159;
  _QWORD v160[3];
  uint64_t v161;
  _QWORD v162[5];
  _QWORD v163[3];
  uint64_t v164;
  _QWORD v165[5];
  _QWORD v166[3];
  uint64_t v167;
  uint64_t v168;
  _QWORD v169[5];
  _QWORD v170[3];
  uint64_t v171;
  uint64_t v172;
  _QWORD v173[4];
  _QWORD v174[3];
  uint64_t v175;
  uint64_t v176;

  v4 = sub_1C106ADE0();
  v144 = *(_QWORD *)(v4 - 8);
  v145 = v4;
  MEMORY[0x1E0C80A78](v4);
  v140 = (uint64_t)&v137 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v147 = sub_1C07ACF80(&qword_1EF631F68);
  MEMORY[0x1E0C80A78](v147);
  sub_1C077AED0();
  v141 = v6;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v137 - v8;
  v10 = sub_1C07ACF80((uint64_t *)&unk_1ED762690);
  MEMORY[0x1E0C80A78](v10);
  sub_1C077AED0();
  v139 = v11;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v12);
  v143 = (uint64_t)&v137 - v13;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v14);
  v142 = (uint64_t)&v137 - v15;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v137 - v17;
  MEMORY[0x1E0C80A78](v19);
  v21 = (char *)&v137 - v20;
  MEMORY[0x1E0C80A78](v22);
  v24 = (char *)&v137 - v23;
  v25 = a1[3];
  v26 = a1[4];
  sub_1C07A9480(a1, v25);
  (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v26 + 24))(v174, v25, v26);
  v27 = v175;
  v146 = v9;
  if (v175)
  {
    v28 = v176;
    sub_1C07A9480(v174, v175);
    sub_1C0796B90(*(uint64_t (**)(uint64_t, uint64_t))(v28 + 8));
    v30 = v29;
    _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v174);
  }
  else
  {
    sub_1C0784B30((uint64_t)v174, &qword_1EF6398B0);
    v30 = 0.0;
  }
  sub_1C07A9480(a2, a2[3]);
  sub_1C07947B4();
  if (!v175)
  {
    v34 = sub_1C0784B30((uint64_t)v174, &qword_1EF6398B0);
    if (!v27)
    {
      v55 = sub_1C07991BC(v34, (uint64_t)v174);
      sub_1C07A14F4(v55, (uint64_t)v173);
      goto LABEL_28;
    }
LABEL_9:
    v36 = sub_1C07991BC(v34, (uint64_t)v174);
    sub_1C07A14F4(v36, (uint64_t)v173);
LABEL_10:
    sub_1C07BD160();
    v37 = sub_1C0794988();
LABEL_11:
    v38 = sub_1C07991BC(v37, (uint64_t)v170);
    sub_1C07A14F4(v38, (uint64_t)v169);
LABEL_12:
    sub_1C078D910();
    v39 = sub_1C07B8CF0();
LABEL_13:
    v40 = sub_1C07991BC(v39, (uint64_t)v166);
    sub_1C07A14F4(v40, (uint64_t)v165);
LABEL_14:
    sub_1C079BA98();
    v41 = sub_1C07A0404();
LABEL_15:
    v42 = sub_1C07991BC(v41, (uint64_t)v163);
    sub_1C07A14F4(v42, (uint64_t)v162);
LABEL_16:
    sub_1C0792008();
    v43 = sub_1C078CDE4();
LABEL_17:
    v44 = sub_1C07991BC(v43, (uint64_t)v160);
    sub_1C07A14F4(v44, (uint64_t)v158);
LABEL_18:
    sub_1C0791640();
    v45 = sub_1C07A2B64();
LABEL_19:
    v46 = sub_1C07991BC(v45, (uint64_t)v156);
    sub_1C07A14F4(v46, (uint64_t)v154);
LABEL_20:
    sub_1C079D8E0();
    v47 = sub_1C0795434();
LABEL_21:
    v48 = sub_1C07991BC(v47, (uint64_t)v153);
    sub_1C07A14F4(v48, (uint64_t)v152);
LABEL_22:
    sub_1C07A5804();
    v49 = sub_1C078B46C();
LABEL_23:
    v50 = sub_1C07991BC(v49, (uint64_t)v151);
    sub_1C07A14F4(v50, (uint64_t)v150);
LABEL_24:
    sub_1C091274C((uint64_t)v150);
    v51 = sub_1C091274C((uint64_t)v151);
    v52 = sub_1C07991BC(v51, (uint64_t)v149);
    sub_1C07A14F4(v52, (uint64_t)v148);
    goto LABEL_25;
  }
  v31 = v176;
  sub_1C079F890();
  sub_1C0794004(*(uint64_t (**)(uint64_t, uint64_t))(v31 + 8));
  v33 = v32;
  v34 = _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v174);
  if (!v27)
    goto LABEL_9;
  v35 = sub_1C07991BC(v34, (uint64_t)v174);
  sub_1C07A14F4(v35, (uint64_t)v173);
  if (v30 != v33)
    goto LABEL_10;
LABEL_28:
  sub_1C079F890();
  sub_1C07947B4();
  v56 = v171;
  if (v171)
  {
    v57 = v172;
    sub_1C07A9480(v170, v171);
    sub_1C0796B90(*(uint64_t (**)(uint64_t, uint64_t))(v57 + 16));
    v59 = v58;
    _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v170);
  }
  else
  {
    sub_1C0784B30((uint64_t)v170, &qword_1EF6398B0);
    v59 = 0.0;
  }
  sub_1C07A9480(v173, v173[3]);
  sub_1C07947B4();
  if (v171)
  {
    v60 = v172;
    sub_1C07A60D4();
    sub_1C0794004(*(uint64_t (**)(uint64_t, uint64_t))(v60 + 16));
    v62 = v61;
    sub_1C07BD160();
    sub_1C0794988();
    v37 = _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v170);
    if (!v56)
      goto LABEL_11;
    v63 = sub_1C07991BC(v37, (uint64_t)v170);
    sub_1C07A14F4(v63, (uint64_t)v169);
    if (v59 != v62)
      goto LABEL_12;
  }
  else
  {
    sub_1C07BD160();
    sub_1C0794988();
    v37 = sub_1C0784B30((uint64_t)v170, &qword_1EF6398B0);
    if (v56)
      goto LABEL_11;
    v64 = sub_1C07991BC(v37, (uint64_t)v170);
    sub_1C07A14F4(v64, (uint64_t)v169);
  }
  sub_1C07A60D4();
  sub_1C07947B4();
  v65 = v167;
  if (v167)
  {
    v66 = v168;
    sub_1C07A9480(v166, v167);
    sub_1C0796B90(*(uint64_t (**)(uint64_t, uint64_t))(v66 + 24));
    v68 = v67;
    _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v166);
  }
  else
  {
    sub_1C0784B30((uint64_t)v166, &qword_1EF6398B0);
    v68 = 0.0;
  }
  v69 = v169[4];
  sub_1C07A9480(v169, v169[3]);
  sub_1C07947B4();
  if (v167)
  {
    sub_1C0798198();
    sub_1C0794004(*(uint64_t (**)(uint64_t, uint64_t))(v69 + 24));
    v71 = v70;
    sub_1C078D910();
    sub_1C07B8CF0();
    v39 = _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v166);
    if (!v65)
      goto LABEL_13;
    v72 = sub_1C07991BC(v39, (uint64_t)v166);
    sub_1C07A14F4(v72, (uint64_t)v165);
    if (v68 != v71)
      goto LABEL_14;
  }
  else
  {
    sub_1C078D910();
    sub_1C07B8CF0();
    v39 = sub_1C0784B30((uint64_t)v166, &qword_1EF6398B0);
    if (v65)
      goto LABEL_13;
    v73 = sub_1C07991BC(v39, (uint64_t)v166);
    sub_1C07A14F4(v73, (uint64_t)v165);
  }
  sub_1C0798198();
  sub_1C07947B4();
  if (v164)
  {
    v137 = sub_1C07883B0();
    v138 = v74;
    _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v163);
  }
  else
  {
    sub_1C0784B30((uint64_t)v163, &qword_1EF634098);
    v137 = 0;
    v138 = 0;
  }
  sub_1C07A9480(v165, v165[3]);
  sub_1C07947B4();
  if (!v164)
  {
    sub_1C0784B30((uint64_t)v163, &qword_1EF634098);
    if (v138)
      goto LABEL_59;
    v77 = 0;
LABEL_61:
    sub_1C079BA98();
    v82 = sub_1C07A0404();
    if (v77)
    {
      v41 = sub_1C077960C();
      goto LABEL_15;
    }
    goto LABEL_64;
  }
  v75 = sub_1C07883B0();
  v77 = v76;
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v163);
  if (!v138)
    goto LABEL_61;
  if (!v77)
  {
LABEL_59:
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    sub_1C079BA98();
    sub_1C07A0404();
    v41 = sub_1C0791EB0();
    goto LABEL_15;
  }
  v78 = v137 == v75 && v138 == v77;
  if (v78)
  {
    sub_1C077960C();
    sub_1C079BA98();
    sub_1C07A0404();
    v82 = sub_1C0775834();
LABEL_64:
    v83 = sub_1C07991BC(v82, (uint64_t)v163);
    sub_1C07A14F4(v83, (uint64_t)v162);
    goto LABEL_65;
  }
  v79 = sub_1C07977E0();
  sub_1C077960C();
  sub_1C079BA98();
  sub_1C07A0404();
  v80 = sub_1C0775834();
  v81 = sub_1C07991BC(v80, (uint64_t)v163);
  sub_1C07A14F4(v81, (uint64_t)v162);
  if ((v79 & 1) == 0)
    goto LABEL_16;
LABEL_65:
  sub_1C07A9480(v163, v164);
  sub_1C07947B4();
  if (v159)
  {
    sub_1C07A9480(v158, v159);
    sub_1C07AE1F8();
    if (v161)
    {
      v137 = sub_1C079AFF8();
      _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v160);
      sub_1C07BCAB8();
      LODWORD(v138) = 0;
      goto LABEL_71;
    }
    sub_1C07BCAB8();
    v84 = &qword_1EF6340A0;
    v85 = v160;
  }
  else
  {
    v84 = &qword_1EF634098;
    v85 = v158;
  }
  sub_1C0784B30((uint64_t)v85, v84);
  v137 = 0;
  LODWORD(v138) = 1;
LABEL_71:
  sub_1C07A9480(v162, v162[3]);
  sub_1C07947B4();
  if (!v159)
  {
    sub_1C0792008();
    sub_1C078CDE4();
    v88 = &qword_1EF634098;
    v89 = v158;
LABEL_78:
    v43 = sub_1C0784B30((uint64_t)v89, v88);
    if ((v138 & 1) == 0)
      goto LABEL_17;
    v90 = sub_1C07991BC(v43, (uint64_t)v160);
    sub_1C07A14F4(v90, (uint64_t)v158);
    goto LABEL_80;
  }
  sub_1C07A9480(v158, v159);
  sub_1C07AE1F8();
  if (!v161)
  {
    sub_1C0792008();
    sub_1C078CDE4();
    sub_1C07BCAB8();
    v88 = &qword_1EF6340A0;
    v89 = v160;
    goto LABEL_78;
  }
  v86 = sub_1C079AFF8();
  sub_1C0792008();
  sub_1C078CDE4();
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v160);
  v43 = sub_1C07BCAB8();
  if ((v138 & 1) != 0)
    goto LABEL_17;
  v87 = sub_1C07991BC(v43, (uint64_t)v160);
  sub_1C07A14F4(v87, (uint64_t)v158);
  if (v137 != v86)
    goto LABEL_18;
LABEL_80:
  sub_1C07A9480(v160, v161);
  sub_1C07947B4();
  if (v155)
  {
    sub_1C07A9480(v154, v155);
    sub_1C07AE1F8();
    if (v157)
    {
      v137 = sub_1C079E938();
      v138 = v91;
      _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v156);
      sub_1C07B443C();
      goto LABEL_86;
    }
    sub_1C07B443C();
    v92 = &qword_1EF6340A0;
    v93 = v156;
  }
  else
  {
    v92 = &qword_1EF634098;
    v93 = v154;
  }
  sub_1C0784B30((uint64_t)v93, v92);
  v137 = 0;
  v138 = 0;
LABEL_86:
  sub_1C07A9480(v158, v159);
  sub_1C07947B4();
  v94 = v155;
  if (v155)
  {
    sub_1C07A9480(v154, v155);
    sub_1C07AE1F8();
    if (v157)
    {
      v94 = sub_1C079E938();
      v96 = v95;
      _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v156);
      sub_1C07B443C();
      goto LABEL_92;
    }
    sub_1C07B443C();
    sub_1C0784B30((uint64_t)v156, &qword_1EF6340A0);
    v94 = 0;
  }
  else
  {
    sub_1C0784B30((uint64_t)v154, &qword_1EF634098);
  }
  v96 = 0;
LABEL_92:
  if (!v138)
  {
    sub_1C0791640();
    v102 = sub_1C07A2B64();
    if (v96)
    {
      v45 = sub_1C077960C();
      goto LABEL_19;
    }
    goto LABEL_104;
  }
  if (!v96)
  {
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    sub_1C0791640();
    sub_1C07A2B64();
    v45 = sub_1C0791EB0();
    goto LABEL_19;
  }
  if (v137 == v94 && v138 == v96)
  {
    sub_1C077960C();
    sub_1C0791640();
    sub_1C07A2B64();
    v102 = sub_1C0775834();
LABEL_104:
    v103 = sub_1C07991BC(v102, (uint64_t)v156);
    sub_1C07A14F4(v103, (uint64_t)v154);
    v101 = v145;
    goto LABEL_105;
  }
  v98 = sub_1C07977E0();
  sub_1C077960C();
  sub_1C0791640();
  sub_1C07A2B64();
  v99 = sub_1C0775834();
  v100 = sub_1C07991BC(v99, (uint64_t)v156);
  sub_1C07A14F4(v100, (uint64_t)v154);
  v101 = v145;
  if ((v98 & 1) == 0)
    goto LABEL_20;
LABEL_105:
  sub_1C07A9480(v156, v157);
  sub_1C07947B4();
  sub_1C07A9480(v154, v155);
  sub_1C07947B4();
  v104 = (uint64_t)v146;
  v105 = (uint64_t)&v146[*(int *)(v147 + 48)];
  sub_1C077CD6C((uint64_t)v24, (uint64_t)v146);
  sub_1C077CD6C((uint64_t)v21, v105);
  sub_1C078C994(v104);
  if (v78)
  {
    sub_1C078FBC8((uint64_t)v21);
    sub_1C078FBC8((uint64_t)v24);
    sub_1C079D8E0();
    sub_1C0795434();
    sub_1C078C994(v105);
    if (v78)
    {
      v106 = sub_1C0784B30(v104, (uint64_t *)&unk_1ED762690);
      v107 = sub_1C07991BC(v106, (uint64_t)v153);
      sub_1C07A14F4(v107, (uint64_t)v152);
      goto LABEL_115;
    }
LABEL_113:
    v47 = sub_1C0784B30(v104, &qword_1EF631F68);
    goto LABEL_21;
  }
  sub_1C077CD6C(v104, (uint64_t)v18);
  sub_1C078C994(v105);
  if (v108)
  {
    sub_1C079D1C8((uint64_t)v21);
    sub_1C079D1C8((uint64_t)v24);
    sub_1C079D8E0();
    sub_1C0795434();
    (*(void (**)(char *, uint64_t))(v144 + 8))(v18, v101);
    goto LABEL_113;
  }
  v109 = v144;
  v110 = v140;
  sub_1C0796BA0(v140, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v144 + 32));
  sub_1C0D70E68();
  LODWORD(v145) = sub_1C07AB144();
  v111 = *(void (**)(uint64_t, uint64_t))(v109 + 8);
  v111(v110, v101);
  sub_1C078FBC8((uint64_t)v21);
  sub_1C078FBC8((uint64_t)v24);
  sub_1C079D8E0();
  sub_1C0795434();
  v111((uint64_t)v18, v101);
  v112 = sub_1C078FBC8((uint64_t)v146);
  v113 = sub_1C07991BC(v112, (uint64_t)v153);
  sub_1C07A14F4(v113, (uint64_t)v152);
  if ((v145 & 1) == 0)
    goto LABEL_22;
LABEL_115:
  sub_1C07A9480(v153, v153[3]);
  v114 = v142;
  sub_1C07947B4();
  sub_1C07A9480(v152, v152[3]);
  v115 = v143;
  sub_1C07947B4();
  v116 = v141;
  v117 = v141 + *(int *)(v147 + 48);
  sub_1C077CD6C(v114, v141);
  sub_1C077CD6C(v115, v117);
  sub_1C078C994(v116);
  if (v78)
  {
    sub_1C078FBC8(v115);
    sub_1C078FBC8(v114);
    sub_1C07A5804();
    sub_1C078B46C();
    sub_1C078C994(v117);
    if (v78)
    {
      v118 = sub_1C0784B30(v116, (uint64_t *)&unk_1ED762690);
      v119 = sub_1C07991BC(v118, (uint64_t)v151);
      sub_1C07A14F4(v119, (uint64_t)v150);
      goto LABEL_125;
    }
LABEL_123:
    v49 = sub_1C0784B30(v116, &qword_1EF631F68);
    goto LABEL_23;
  }
  v120 = v139;
  sub_1C077CD6C(v116, v139);
  sub_1C078C994(v117);
  if (v121)
  {
    sub_1C079D1C8(v143);
    sub_1C079D1C8(v114);
    sub_1C07A5804();
    sub_1C078B46C();
    (*(void (**)(uint64_t, uint64_t))(v144 + 8))(v120, v101);
    goto LABEL_123;
  }
  v122 = v144;
  v123 = v140;
  sub_1C0796BA0(v140, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v144 + 32));
  sub_1C0D70E68();
  v124 = sub_1C07AB144();
  v125 = *(void (**)(uint64_t, uint64_t))(v122 + 8);
  v125(v123, v101);
  sub_1C078FBC8(v143);
  sub_1C078FBC8(v142);
  sub_1C07A5804();
  sub_1C078B46C();
  v125(v120, v101);
  v126 = sub_1C078FBC8(v116);
  v127 = sub_1C07991BC(v126, (uint64_t)v151);
  sub_1C07A14F4(v127, (uint64_t)v150);
  if ((v124 & 1) == 0)
    goto LABEL_24;
LABEL_125:
  v128 = v151[4];
  sub_1C07A9480(v151, v151[3]);
  sub_1C0794004(*(uint64_t (**)(uint64_t, uint64_t))(v128 + 40));
  v130 = v129;
  v131 = v150[4];
  sub_1C07A9480(v150, v150[3]);
  sub_1C0794004(*(uint64_t (**)(uint64_t, uint64_t))(v131 + 40));
  v133 = v132;
  sub_1C091274C((uint64_t)v150);
  v134 = sub_1C091274C((uint64_t)v151);
  v135 = sub_1C07991BC(v134, (uint64_t)v149);
  sub_1C07A14F4(v135, (uint64_t)v148);
  if (v130 == v133)
  {
    v136 = sub_1C0D7003C();
    v53 = v136 == sub_1C0D7003C();
    goto LABEL_26;
  }
LABEL_25:
  v53 = 0;
LABEL_26:
  sub_1C091274C((uint64_t)v148);
  sub_1C091274C((uint64_t)v149);
  return v53;
}

unint64_t sub_1C0D70E68()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF631F80;
  if (!qword_1EF631F80)
  {
    v1 = sub_1C106ADE0();
    result = MEMORY[0x1C3BA8174](MEMORY[0x1E0CB08B8], v1);
    atomic_store(result, (unint64_t *)&qword_1EF631F80);
  }
  return result;
}

uint64_t sub_1C0D70EA8(uint64_t a1, uint64_t a2, char a3, char a4)
{
  uint64_t v4;
  _QWORD *v9;

  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v9;
  *v9 = v4;
  v9[1] = sub_1C0D70F14;
  return sub_1C0D70F68(a1, a2, a3, a4);
}

uint64_t sub_1C0D70F14(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;

  v4 = *v2;
  v5 = swift_task_dealloc();
  if (!v1)
    v5 = a1;
  return (*(uint64_t (**)(uint64_t))(v4 + 8))(v5);
}

uint64_t sub_1C0D70F68(uint64_t a1, uint64_t a2, char a3, char a4)
{
  uint64_t v4;

  *(_BYTE *)(v4 + 177) = a4;
  *(_BYTE *)(v4 + 176) = a3;
  *(_QWORD *)(v4 + 136) = a1;
  *(_QWORD *)(v4 + 144) = a2;
  return swift_task_switch();
}

uint64_t sub_1C0D70F88()
{
  uint64_t v0;
  unint64_t inited;
  uint64_t v2;
  uint64_t v3;
  int v4;
  id v6;

  sub_1C07ACF80(&qword_1ED762CD0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C10812D0;
  *(_QWORD *)(inited + 32) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithInteger_, 3);
  v6 = (id)inited;
  sub_1C106FF28();
  if (inited >> 62)
  {
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    v2 = sub_1C10709B4();
    swift_bridgeObjectRelease();
  }
  else
  {
    v2 = *(_QWORD *)((inited & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  if (v2)
  {
    sub_1C0AA9800(inited);
  }
  else
  {
    swift_bridgeObjectRelease();
    v3 = MEMORY[0x1E0DEE9E8];
  }
  v4 = *(unsigned __int8 *)(v0 + 176);
  *(_QWORD *)(v0 + 120) = v3;
  if (v4 == 1)
  {
    sub_1C0A7FA2C(&v6, objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithInteger_, 1));

  }
  *(_QWORD *)(v0 + 152) = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
  return swift_task_switch();
}

uint64_t sub_1C0D710DC()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *(_QWORD *)(v0 + 144);
  v1 = *(void **)(v0 + 152);
  v3 = *(_BYTE *)(v0 + 177);
  v4 = *(_QWORD *)(v0 + 136);
  *(_QWORD *)(v0 + 56) = v0 + 128;
  *(_QWORD *)(v0 + 16) = v0;
  *(_QWORD *)(v0 + 24) = sub_1C0D71160;
  v5 = swift_continuation_init();
  sub_1C0D71250(v5, v1, v3, v4, v2, (uint64_t *)(v0 + 120));
  return swift_continuation_await();
}

uint64_t sub_1C0D71160()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 48);
  *(_QWORD *)(*v0 + 160) = v2;
  if (v2)
    swift_willThrow();
  else
    *(_QWORD *)(v1 + 168) = *(_QWORD *)(v1 + 128);
  return swift_task_switch();
}

uint64_t sub_1C0D711D4()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 168));
}

uint64_t sub_1C0D71214()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_1C0D71250(uint64_t a1, void *a2, char a3, uint64_t a4, uint64_t a5, uint64_t *a6)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  double v19;
  uint64_t v20;
  char *v21;
  void (*v22)(char *, uint64_t, uint64_t, double);
  uint64_t v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  id v29;
  _QWORD aBlock[6];

  v29 = a2;
  v11 = sub_1C106ADE0();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v28 - v16;
  v18 = sub_1C07ACF80(&qword_1ED7565A8);
  v19 = MEMORY[0x1E0C80A78](v18);
  v21 = (char *)&v28 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = *(void (**)(char *, uint64_t, uint64_t, double))(v12 + 16);
  v22(v17, a4, v11, v19);
  ((void (*)(char *, uint64_t, uint64_t))v22)(v14, a5, v11);
  sub_1C106A810();
  v23 = sub_1C106A828();
  sub_1C07B2D8C((uint64_t)v21, 0, 1, v23);
  v24 = *a6;
  objc_allocWithZone(MEMORY[0x1E0D18508]);
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  v25 = sub_1C0D715B8(a3, 0, (uint64_t)v21, 1, 0, v24);
  v26 = swift_allocObject();
  *(_QWORD *)(v26 + 16) = a1;
  aBlock[4] = sub_1C0D716EC;
  aBlock[5] = v26;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1C0D7152C;
  aBlock[3] = &unk_1E7A314E0;
  v27 = _Block_copy(aBlock);
  swift_release();
  objc_msgSend(v29, sel_fetchStoredVisitsWithOptions_handler_, v25, v27);
  _Block_release(v27);

}

uint64_t sub_1C0D7144C(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v4;
  _QWORD *v7;
  id v8;
  uint64_t v9;
  uint64_t *v10;

  if (a1)
  {
    sub_1C0A57CAC();
    **(_QWORD **)(*(_QWORD *)(a3 + 64) + 40) = v4;
    return swift_continuation_throwingResume();
  }
  else
  {
    if (a2)
    {
      sub_1C07ACF80(&qword_1ED7614F0);
      swift_allocError();
      *v7 = a2;
      v8 = a2;
    }
    else
    {
      sub_1C0D716F4();
      v9 = swift_allocError();
      sub_1C07ACF80(&qword_1ED7614F0);
      swift_allocError();
      *v10 = v9;
    }
    return swift_continuation_throwingResumeWithError();
  }
}

uint64_t sub_1C0D7152C(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4;
  void (*v5)(uint64_t, void *);
  id v6;

  v4 = a2;
  v5 = *(void (**)(uint64_t, void *))(a1 + 32);
  if (a2)
  {
    sub_1C07D4B70(0, &qword_1ED74D3E0);
    v4 = sub_1C106FF04();
  }
  swift_retain();
  v6 = a3;
  v5(v4, a3);
  swift_release();

  return swift_bridgeObjectRelease();
}

id sub_1C0D715B8(char a1, void *a2, uint64_t a3, char a4, void *a5, uint64_t a6)
{
  void *v6;
  void *v7;
  uint64_t v14;
  void *v15;
  void *v16;
  id v17;

  v7 = v6;
  v14 = sub_1C106A828();
  v15 = 0;
  if (sub_1C07B2D80(a3, 1, v14) != 1)
  {
    v15 = (void *)sub_1C106A7F8();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(a3, v14);
  }
  if (a6)
  {
    sub_1C07D4B70(0, (unint64_t *)&qword_1ED762C00);
    sub_1C0D71730();
    v16 = (void *)sub_1C1070210();
    swift_bridgeObjectRelease();
  }
  else
  {
    v16 = 0;
  }
  v17 = objc_msgSend(v7, sel_initWithAscending_confidence_dateInterval_labelVisit_limit_sources_, a1 & 1, a2, v15, a4 & 1, a5, v16);

  return v17;
}

uint64_t sub_1C0D716DC()
{
  return swift_deallocObject();
}

uint64_t sub_1C0D716EC(uint64_t a1, void *a2)
{
  uint64_t v2;

  return sub_1C0D7144C(a1, a2, *(_QWORD *)(v2 + 16));
}

unint64_t sub_1C0D716F4()
{
  unint64_t result;

  result = qword_1EF648B90;
  if (!qword_1EF648B90)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10BA324, &type metadata for StoredLocationVisitsAsync.RTVisitFetchError);
    atomic_store(result, (unint64_t *)&qword_1EF648B90);
  }
  return result;
}

unint64_t sub_1C0D71730()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED74D3E8;
  if (!qword_1ED74D3E8)
  {
    v1 = sub_1C07D4B70(255, (unint64_t *)&qword_1ED762C00);
    result = MEMORY[0x1C3BA8174](MEMORY[0x1E0DEFCF8], v1);
    atomic_store(result, (unint64_t *)&qword_1ED74D3E8);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for StoredLocationVisitsAsync.RTVisitFetchError(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1C0D717C0 + 4 * byte_1C10BA270[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1C0D717E0 + 4 * byte_1C10BA275[v4]))();
}

_BYTE *sub_1C0D717C0(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1C0D717E0(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1C0D717E8(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1C0D717F0(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1C0D717F8(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1C0D71800(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for StoredLocationVisitsAsync.RTVisitFetchError()
{
  return &type metadata for StoredLocationVisitsAsync.RTVisitFetchError;
}

unint64_t sub_1C0D71820()
{
  unint64_t result;

  result = qword_1EF648B98[0];
  if (!qword_1EF648B98[0])
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10BA2FC, &type metadata for StoredLocationVisitsAsync.RTVisitFetchError);
    atomic_store(result, qword_1EF648B98);
  }
  return result;
}

uint64_t sub_1C0D7185C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 56) = a1;
  *(_QWORD *)(v2 + 64) = v1;
  return swift_task_switch();
}

void sub_1C0D71874()
{
  _QWORD *v0;
  int **v1;
  int *v2;
  uint64_t v3;
  _QWORD *v4;
  void (*v5)(void);
  void (*v6)(void);

  v1 = (int **)v0[8];
  if (*((_BYTE *)v1 + 32) != 1)
  {
    v6 = (void (*)(void))((char *)*v1 + **v1);
    v4 = (_QWORD *)swift_task_alloc();
    v0[9] = v4;
    *v4 = v0;
    v4[1] = sub_1C0D71928;
    v5 = v6;
LABEL_8:
    v5();
    return;
  }
  v2 = v1[2];
  v3 = (uint64_t)v1[3];
  if (v3 >= *((_QWORD *)v2 + 2))
  {
    sub_1C07A14FC();
    goto LABEL_7;
  }
  if ((v3 & 0x8000000000000000) == 0)
  {
    sub_1C0A51F50((uint64_t)&v2[10 * v3 + 8], v0[7]);
    v1[3] = (int *)(v3 + 1);
LABEL_7:
    v5 = (void (*)(void))v0[1];
    goto LABEL_8;
  }
  __break(1u);
}

uint64_t sub_1C0D71928(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 80) = a1;
  swift_task_dealloc();
  if (v1)
    return sub_1C077CF28(*(uint64_t (**)(void))(v3 + 8));
  else
    return swift_task_switch();
}

uint64_t sub_1C0D71994()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;

  v1 = *(_QWORD *)(v0 + 80);
  v2 = *(_QWORD *)(v1 + 16);
  if (v2)
  {
    v14 = MEMORY[0x1E0DEE9D8];
    sub_1C09D31B0();
    v3 = v14;
    v4 = v1 + 32;
    do
    {
      sub_1C07D6D1C(v4, v0 + 16);
      v5 = *(_QWORD *)(v14 + 16);
      if (v5 >= *(_QWORD *)(v14 + 24) >> 1)
        sub_1C09D31B0();
      *(_QWORD *)(v14 + 16) = v5 + 1;
      v6 = v14 + 40 * v5;
      v7 = *(_OWORD *)(v0 + 16);
      v8 = *(_OWORD *)(v0 + 32);
      *(_QWORD *)(v6 + 64) = *(_QWORD *)(v0 + 48);
      *(_OWORD *)(v6 + 32) = v7;
      *(_OWORD *)(v6 + 48) = v8;
      v4 += 40;
      --v2;
    }
    while (v2);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    v3 = MEMORY[0x1E0DEE9D8];
  }
  v9 = *(_QWORD *)(v0 + 64);
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v9 + 16) = v3;
  *(_BYTE *)(v9 + 32) = 1;
  v11 = *(_QWORD *)(v0 + 64);
  v12 = *(_QWORD *)(v11 + 24);
  if (v12 >= *(_QWORD *)(v3 + 16))
  {
    v13.n128_f64[0] = sub_1C07A14FC();
    return (*(uint64_t (**)(__n128))(v0 + 8))(v13);
  }
  if ((v12 & 0x8000000000000000) == 0)
  {
    sub_1C0A51F50(v3 + 40 * v12 + 32, *(_QWORD *)(v0 + 56));
    *(_QWORD *)(v11 + 24) = v12 + 1;
    return (*(uint64_t (**)(__n128))(v0 + 8))(v13);
  }
  __break(1u);
  return result;
}

uint64_t sub_1C0D71AF0(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1C0928A6C;
  return sub_1C0D7185C(a1);
}

uint64_t sub_1C0D71B40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v8;
  uint64_t (*v10)(uint64_t, uint64_t, uint64_t);

  *(_QWORD *)(v4 + 16) = a4;
  v10 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1EF641148 + dword_1EF641148);
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 24) = v8;
  *v8 = v4;
  v8[1] = sub_1C0A29DA8;
  return v10(a1, a2, a3);
}

uint64_t _s14descr1E7A316B1V27StoredLocationVisitIteratorVwxx()
{
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t _s14descr1E7A316B1V27StoredLocationVisitIteratorVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  swift_retain();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  return a1;
}

uint64_t _s14descr1E7A316B1V27StoredLocationVisitIteratorVwca(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  return a1;
}

__n128 _s14descr1E7A316B1V27StoredLocationVisitIteratorVwtk(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t _s14descr1E7A316B1V27StoredLocationVisitIteratorVwta(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  return a1;
}

uint64_t _s14descr1E7A316B1V27StoredLocationVisitIteratorVwet(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *((_BYTE *)a1 + 33))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s14descr1E7A316B1V27StoredLocationVisitIteratorVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_BYTE *)(result + 32) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 33) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 33) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *_s14descr1E7A316B1V27StoredLocationVisitIteratorVMa()
{
  return &_s14descr1E7A316B1V27StoredLocationVisitIteratorVN;
}

ValueMetadata *type metadata accessor for StoredLocationVisitAsyncSequence()
{
  return &type metadata for StoredLocationVisitAsyncSequence;
}

uint64_t sub_1C0D71DAC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  *(_QWORD *)a3 = a1;
  *(_QWORD *)(a3 + 8) = a2;
  *(_QWORD *)(a3 + 16) = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(a3 + 24) = 0;
  *(_BYTE *)(a3 + 32) = 0;
  return swift_retain();
}

uint64_t sub_1C0D71DC8@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;

  sub_1C0D71DAC(*v1, v1[1], a1);
  return swift_release();
}

uint64_t sub_1C0D71DF0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  char *v16;
  void (*v17)(char *, char *, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(uint64_t, char *, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;

  v29 = a1;
  v4 = sub_1C106ADE0();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  MEMORY[0x1E0C80A78](v4);
  v28 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v27 = (char *)&v26 - v8;
  v9 = sub_1C07ACF80(&qword_1ED75D0B8);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *(_QWORD *)(v2 + 16);
  v12 = *(_QWORD *)(v2 + 24);
  sub_1C078A924(v29, (uint64_t)v11, &qword_1ED75D0B8);
  if (v13)
  {
    v14 = (void *)v13;
    v15 = v12;
  }
  else
  {
    v16 = &v11[*(int *)(v9 + 36)];
    v17 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
    v17(v27, v11, v4);
    v17(v28, v16, v4);
    v18 = *(unsigned __int8 *)(v5 + 80);
    v19 = (v18 + 16) & ~v18;
    v20 = (v6 + v18 + v19) & ~v18;
    v29 = v20 + v6;
    v15 = swift_allocObject();
    v21 = v15 + v19;
    v22 = *(void (**)(uint64_t, char *, uint64_t))(v5 + 32);
    v22(v21, v27, v4);
    v22(v15 + v20, v28, v4);
    *(_WORD *)(v15 + v29) = 256;
    v14 = &unk_1EF642480;
  }
  sub_1C0BCD07C(v13);
  sub_1C0784B94((uint64_t)v11, &qword_1ED75D0B8);
  v23 = type metadata accessor for StoredLocationVisitSignal.StoredLocationVisitWithTransitionAsyncSequence();
  v24 = a2 + *(int *)(v23 + 20);
  sub_1C07ACF80(&qword_1ED74AFD0);
  sub_1C0787D3C(v24);
  result = sub_1C0787D3C(a2 + *(int *)(v23 + 24));
  *(_QWORD *)a2 = v14;
  *(_QWORD *)(a2 + 8) = v15;
  *(_QWORD *)(a2 + 16) = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(a2 + 24) = 0;
  *(_BYTE *)(a2 + 32) = 0;
  return result;
}

uint64_t sub_1C0D72004@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1C0D73E2C(v1, a1);
}

uint64_t sub_1C0D72010(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v2[17] = a1;
  v2[18] = v1;
  v3 = sub_1C077AE98();
  v2[19] = v3;
  v2[20] = *(_QWORD *)(v3 - 8);
  v2[21] = swift_task_alloc();
  sub_1C07ACF80((uint64_t *)&unk_1ED762690);
  v2[22] = sub_1C0786414();
  v2[23] = sub_1C0775870();
  v2[24] = sub_1C0775870();
  v2[25] = sub_1C0775870();
  v2[26] = sub_1C0775870();
  sub_1C07ACF80(&qword_1ED74AFD8);
  v2[27] = sub_1C0786414();
  v2[28] = sub_1C0775870();
  v2[29] = sub_1C0775870();
  v2[30] = sub_1C0775870();
  v2[31] = sub_1C07ACF80(&qword_1ED74AFD0);
  v2[32] = sub_1C0786414();
  v2[33] = sub_1C0775870();
  return sub_1C077AEC4();
}

uint64_t sub_1C0D720E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v2 = *(_QWORD *)(v0 + 240);
  v1 = *(_QWORD *)(v0 + 248);
  v3 = *(_QWORD *)(v0 + 144);
  v4 = type metadata accessor for StoredLocationVisitSignal.StoredLocationVisitWithTransitionAsyncSequence();
  *(_QWORD *)(v0 + 272) = v4;
  v5 = *(int *)(v4 + 24);
  *(_DWORD *)(v0 + 296) = v5;
  v6 = v3 + v5;
  sub_1C078A924(v6, v2, &qword_1ED74AFD8);
  if (sub_1C07B2D80(v2, 1, v1) == 1)
  {
    sub_1C0784B94(*(_QWORD *)(v0 + 240), &qword_1ED74AFD8);
    v7 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 280) = v7;
    *v7 = v0;
    v7[1] = sub_1C0D72280;
    return sub_1C0D7185C(v0 + 56);
  }
  else
  {
    v9 = *(_QWORD *)(v0 + 264);
    v10 = *(_QWORD *)(v0 + 136);
    v11 = *(_QWORD *)(v0 + 144);
    sub_1C0D73EB8(*(_QWORD *)(v0 + 240), v9);
    v12 = v11 + *(int *)(v4 + 20);
    sub_1C0784B94(v12, &qword_1ED74AFD8);
    sub_1C078A924(v9, v12, &qword_1ED74AFD0);
    sub_1C0779800(v12, 0);
    sub_1C0784B94(v6, &qword_1ED74AFD8);
    sub_1C0779800(v6, 1);
    sub_1C0D73EB8(v9, v10);
    sub_1C0779800(v10, 0);
    sub_1C079A1D4();
    sub_1C07767BC();
    sub_1C07796F8();
    sub_1C07758BC();
    sub_1C0779D18();
    sub_1C077C104();
    sub_1C07767D4();
    sub_1C0778638();
    sub_1C0786388();
    sub_1C0779D20();
    swift_task_dealloc();
    swift_task_dealloc();
    return sub_1C07759B8(*(uint64_t (**)(void))(v0 + 8));
  }
}

uint64_t sub_1C0D72280()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 288) = v0;
  swift_task_dealloc();
  return sub_1C077AEC4();
}

uint64_t sub_1C0D722DC()
{
  uint64_t v0;
  _OWORD *v1;
  __int128 *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  uint64_t v8;
  uint64_t result;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  __int128 v20;
  void (*v21)(uint64_t, uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(uint64_t, uint64_t, uint64_t);
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  void (*v51)(uint64_t, uint64_t, uint64_t);
  uint64_t v52;
  uint64_t v53;

  v1 = (_OWORD *)(v0 + 56);
  if (!*(_QWORD *)(v0 + 80))
  {
    v22 = *(_QWORD *)(v0 + 248);
    v23 = *(_QWORD *)(v0 + 136);
    sub_1C0784B94((uint64_t)v1, &qword_1ED74AB38);
    v24 = v23;
    v25 = 1;
    v26 = v22;
LABEL_11:
    sub_1C07B2D8C(v24, v25, 1, v26);
    goto LABEL_12;
  }
  v2 = (__int128 *)(v0 + 16);
  v3 = *(_QWORD *)(v0 + 272);
  v4 = *(_QWORD *)(v0 + 248);
  v5 = *(_QWORD *)(v0 + 232);
  v6 = *(_QWORD *)(v0 + 144);
  v7 = *(_OWORD *)(v0 + 72);
  *(_OWORD *)(v0 + 16) = *v1;
  *(_OWORD *)(v0 + 32) = v7;
  *(_QWORD *)(v0 + 48) = *(_QWORD *)(v0 + 88);
  v8 = v6 + *(int *)(v3 + 20);
  sub_1C078A924(v8, v5, &qword_1ED74AFD8);
  if (sub_1C07B2D80(v5, 1, v4) == 1)
  {
    sub_1C0784B94(*(_QWORD *)(v0 + 232), &qword_1ED74AFD8);
    sub_1C07A9480((_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 40));
    sub_1C07A4008();
    result = sub_1C077E488();
    if (v10)
    {
      __break(1u);
    }
    else
    {
      sub_1C07A9480((_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 40));
      sub_1C07A4008();
      result = sub_1C077E488();
      if (!v10)
      {
        v11 = *(_QWORD *)(v0 + 248);
        v12 = *(_QWORD *)(v0 + 216);
        v14 = *(_QWORD *)(v0 + 176);
        v13 = *(_QWORD *)(v0 + 184);
        v16 = *(_QWORD *)(v0 + 152);
        v15 = *(_QWORD *)(v0 + 160);
        v17 = *(_QWORD *)(v0 + 136);
        v18 = v12 + *(int *)(v11 + 32);
        v19 = *v2;
        v20 = *(_OWORD *)(v0 + 32);
        *(_QWORD *)(v18 + 32) = *(_QWORD *)(v0 + 48);
        *(_OWORD *)v18 = v19;
        *(_OWORD *)(v18 + 16) = v20;
        *(_OWORD *)(v18 + 40) = 0u;
        *(_OWORD *)(v18 + 56) = 0u;
        *(_QWORD *)(v18 + 72) = 0;
        v21 = *(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 32);
        v21(v12, v13, v16);
        v21(v12 + *(int *)(v11 + 28), v14, v16);
        sub_1C07B2D8C(v12, 0, 1, v11);
        sub_1C0D73E70(v12, v8);
        sub_1C078A924(v8, v17, &qword_1ED74AFD8);
LABEL_12:
        swift_task_dealloc();
        sub_1C07767BC();
        sub_1C07796F8();
        sub_1C07758BC();
        sub_1C0779D18();
        sub_1C077C104();
        sub_1C07767D4();
        sub_1C0778638();
        sub_1C0786388();
        sub_1C0779D20();
        swift_task_dealloc();
        swift_task_dealloc();
        return (*(uint64_t (**)(void))(v0 + 8))();
      }
    }
    __break(1u);
    goto LABEL_15;
  }
  v27 = *(_QWORD *)(v0 + 208);
  v28 = *(_QWORD *)(v0 + 152);
  sub_1C0D73EB8(*(_QWORD *)(v0 + 232), *(_QWORD *)(v0 + 256));
  sub_1C079E964();
  sub_1C079B024();
  result = sub_1C07B2D80(v27, 1, v28);
  if ((_DWORD)result == 1)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  v29 = *(_QWORD *)(v0 + 200);
  v30 = *(_QWORD *)(v0 + 152);
  sub_1C079E964();
  sub_1C079B024();
  result = sub_1C07B2D80(v29, 1, v30);
  if ((_DWORD)result == 1)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v31 = *(_QWORD *)(v0 + 248);
  v32 = *(_QWORD *)(v0 + 224);
  v34 = *(_QWORD *)(v0 + 200);
  v33 = *(_QWORD *)(v0 + 208);
  v53 = *(_QWORD *)(v0 + 256);
  v35 = *(_QWORD *)(v0 + 160);
  v52 = *(_QWORD *)(v0 + 168);
  v36 = *(_QWORD *)(v0 + 152);
  v37 = *(_QWORD *)(v0 + 144) + *(int *)(v0 + 296);
  v38 = v32 + *(int *)(v31 + 32);
  sub_1C0A51F50(v0 + 16, v38);
  *(_OWORD *)(v38 + 40) = 0u;
  *(_OWORD *)(v38 + 56) = 0u;
  *(_QWORD *)(v38 + 72) = 0;
  v39 = *(void (**)(uint64_t, uint64_t, uint64_t))(v35 + 32);
  v39(v32, v33, v36);
  v51 = v39;
  v39(v32 + *(int *)(v31 + 28), v34, v36);
  sub_1C07B2D8C(v32, 0, 1, v31);
  sub_1C0D73E70(v32, v37);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v35 + 16))(v52, v53 + *(int *)(v31 + 28), v36);
  sub_1C07A9480((_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 40));
  sub_1C07A4008();
  result = sub_1C077E488();
  if (!v10)
  {
    v41 = *(_QWORD *)(v0 + 248);
    v40 = *(_QWORD *)(v0 + 256);
    v42 = *(_QWORD *)(v0 + 192);
    v43 = *(_QWORD *)(v0 + 168);
    v44 = *(_QWORD *)(v0 + 152);
    v45 = *(_QWORD *)(v0 + 136);
    sub_1C0A51F50(v40 + *(int *)(v31 + 32), v0 + 96);
    sub_1C0784B94(v40, &qword_1ED74AFD0);
    v46 = v45 + *(int *)(v31 + 32);
    v47 = *(_QWORD *)(v0 + 48);
    v48 = *(_OWORD *)(v0 + 32);
    *(_OWORD *)(v46 + 40) = *v2;
    *(_OWORD *)(v46 + 56) = v48;
    *(_QWORD *)(v46 + 72) = v47;
    v49 = *(_OWORD *)(v0 + 96);
    v50 = *(_OWORD *)(v0 + 112);
    *(_QWORD *)(v46 + 32) = *(_QWORD *)(v0 + 128);
    *(_OWORD *)v46 = v49;
    *(_OWORD *)(v46 + 16) = v50;
    v51(v45, v43, v44);
    v51(v45 + *(int *)(v31 + 28), v42, v44);
    v24 = v45;
    v25 = 0;
    v26 = v41;
    goto LABEL_11;
  }
LABEL_17:
  __break(1u);
  return result;
}

uint64_t sub_1C0D726F0()
{
  uint64_t v0;

  sub_1C079A1D4();
  sub_1C07767BC();
  sub_1C07796F8();
  sub_1C07758BC();
  sub_1C0779D18();
  sub_1C077C104();
  sub_1C07767D4();
  sub_1C0778638();
  sub_1C0786388();
  sub_1C0779D20();
  swift_task_dealloc();
  swift_task_dealloc();
  return sub_1C07759B8(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1C0D7275C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_1C0D72004(a1);
  return sub_1C0D73DF0(v1);
}

uint64_t sub_1C0D72774(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1C0776FE4;
  return sub_1C0D72010(a1);
}

uint64_t sub_1C0D727C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v8;
  uint64_t (*v10)(uint64_t, uint64_t, uint64_t);

  *(_QWORD *)(v4 + 16) = a4;
  v10 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1EF6411D0 + dword_1EF6411D0);
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 24) = v8;
  *v8 = v4;
  v8[1] = sub_1C0A29DA8;
  return v10(a1, a2, a3);
}

uint64_t sub_1C0D72848()
{
  uint64_t v0;

  sub_1C077AB58(*(_QWORD *)(v0 + 16));
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for StoredLocationVisitSignal()
{
  return objc_opt_self();
}

uint64_t sub_1C0D7288C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1C0D7289C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1C0D71DF0(a1, a2);
}

uint64_t sub_1C0D728BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t);

  v1 = sub_1C077AE98();
  sub_1C078ABBC();
  v5 = (*(_QWORD *)(v2 + 64) + v3 + v4) & ~v3;
  v6 = *(void (**)(uint64_t, uint64_t))(v2 + 8);
  v6(v0 + v4, v1);
  v6(v0 + v5, v1);
  return swift_deallocObject();
}

uint64_t type metadata accessor for StoredLocationVisitSignal.StoredLocationVisitWithTransitionAsyncSequence()
{
  uint64_t result;

  result = qword_1ED74C170;
  if (!qword_1ED74C170)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1C0D7296C(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(char *, char *, uint64_t);
  uint64_t v18;
  char *v19;
  char *v20;
  __int128 v21;
  _OWORD *v22;
  _OWORD *v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(char *, char *, uint64_t);
  uint64_t v33;
  char *v34;
  char *v35;
  __int128 v36;
  _OWORD *v37;
  _OWORD *v38;
  uint64_t v39;
  uint64_t v40;
  __int128 v41;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v5 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    *(_QWORD *)a1 = v5;
    a1 = v5 + ((v4 + 16) & ~(unint64_t)v4);
    swift_retain();
  }
  else
  {
    v8 = a2[1];
    v9 = a2[2];
    *(_QWORD *)a1 = v5;
    *(_QWORD *)(a1 + 8) = v8;
    v10 = a2[3];
    *(_QWORD *)(a1 + 16) = v9;
    *(_QWORD *)(a1 + 24) = v10;
    *(_BYTE *)(a1 + 32) = *((_BYTE *)a2 + 32);
    v11 = *(int *)(a3 + 20);
    v12 = (char *)(a1 + v11);
    v13 = (char *)a2 + v11;
    swift_retain();
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    v14 = sub_1C07ACF80(&qword_1ED74AFD0);
    if (sub_1C07B2D80((uint64_t)v13, 1, v14))
    {
      v15 = sub_1C07ACF80(&qword_1ED74AFD8);
      memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
    else
    {
      v16 = sub_1C106ADE0();
      v17 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16);
      v17(v12, v13, v16);
      v17(&v12[*(int *)(v14 + 28)], &v13[*(int *)(v14 + 28)], v16);
      v18 = *(int *)(v14 + 32);
      v19 = &v12[v18];
      v20 = &v13[v18];
      v21 = *(_OWORD *)(v20 + 24);
      *(_OWORD *)&v12[v18 + 24] = v21;
      (**(void (***)(char *, char *))(v21 - 8))(&v12[v18], v20);
      v22 = v19 + 40;
      v23 = v20 + 40;
      v24 = *((_QWORD *)v20 + 8);
      if (v24)
      {
        v25 = *((_QWORD *)v20 + 9);
        *((_QWORD *)v19 + 8) = v24;
        *((_QWORD *)v19 + 9) = v25;
        (**(void (***)(_OWORD *, _OWORD *))(v24 - 8))(v22, v23);
      }
      else
      {
        v26 = *(_OWORD *)(v20 + 56);
        *v22 = *v23;
        *(_OWORD *)(v19 + 56) = v26;
        *((_QWORD *)v19 + 9) = *((_QWORD *)v20 + 9);
      }
      sub_1C07B2D8C((uint64_t)v12, 0, 1, v14);
    }
    v27 = *(int *)(a3 + 24);
    v28 = (char *)(a1 + v27);
    v29 = (char *)a2 + v27;
    if (sub_1C07B2D80((uint64_t)v29, 1, v14))
    {
      v30 = sub_1C07ACF80(&qword_1ED74AFD8);
      memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
    }
    else
    {
      v31 = sub_1C106ADE0();
      v32 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 16);
      v32(v28, v29, v31);
      v32(&v28[*(int *)(v14 + 28)], &v29[*(int *)(v14 + 28)], v31);
      v33 = *(int *)(v14 + 32);
      v34 = &v28[v33];
      v35 = &v29[v33];
      v36 = *(_OWORD *)(v35 + 24);
      *(_OWORD *)&v28[v33 + 24] = v36;
      (**(void (***)(char *, char *))(v36 - 8))(&v28[v33], v35);
      v37 = v34 + 40;
      v38 = v35 + 40;
      v39 = *((_QWORD *)v35 + 8);
      if (v39)
      {
        v40 = *((_QWORD *)v35 + 9);
        *((_QWORD *)v34 + 8) = v39;
        *((_QWORD *)v34 + 9) = v40;
        (**(void (***)(_OWORD *, _OWORD *))(v39 - 8))(v37, v38);
      }
      else
      {
        v41 = *(_OWORD *)(v35 + 56);
        *v37 = *v38;
        *(_OWORD *)(v34 + 56) = v41;
        *((_QWORD *)v34 + 9) = *((_QWORD *)v35 + 9);
      }
      sub_1C07B2D8C((uint64_t)v28, 0, 1, v14);
    }
  }
  return a1;
}

uint64_t sub_1C0D72BF8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t);
  uint64_t v13;

  swift_release();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 20);
  v5 = sub_1C07ACF80(&qword_1ED74AFD0);
  if (!sub_1C07B2D80(v4, 1, v5))
  {
    v6 = sub_1C106ADE0();
    v7 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8);
    v7(v4, v6);
    v7(v4 + *(int *)(v5 + 28), v6);
    v8 = v4 + *(int *)(v5 + 32);
    _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0(v8);
    if (*(_QWORD *)(v8 + 64))
      _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0(v8 + 40);
  }
  v9 = a1 + *(int *)(a2 + 24);
  result = sub_1C07B2D80(v9, 1, v5);
  if (!(_DWORD)result)
  {
    v11 = sub_1C106ADE0();
    v12 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8);
    v12(v9, v11);
    v12(v9 + *(int *)(v5 + 28), v11);
    v13 = v9 + *(int *)(v5 + 32);
    result = _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0(v13);
    if (*(_QWORD *)(v13 + 64))
      return _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0(v13 + 40);
  }
  return result;
}

uint64_t sub_1C0D72D30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(char *, char *, uint64_t);
  uint64_t v15;
  char *v16;
  char *v17;
  __int128 v18;
  _OWORD *v19;
  _OWORD *v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(char *, char *, uint64_t);
  uint64_t v30;
  char *v31;
  char *v32;
  __int128 v33;
  _OWORD *v34;
  _OWORD *v35;
  uint64_t v36;
  uint64_t v37;
  __int128 v38;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  v7 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v7;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v8 = *(int *)(a3 + 20);
  v9 = (char *)(a1 + v8);
  v10 = (char *)(a2 + v8);
  swift_retain();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  v11 = sub_1C07ACF80(&qword_1ED74AFD0);
  if (sub_1C07B2D80((uint64_t)v10, 1, v11))
  {
    v12 = sub_1C07ACF80(&qword_1ED74AFD8);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    v13 = sub_1C106ADE0();
    v14 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16);
    v14(v9, v10, v13);
    v14(&v9[*(int *)(v11 + 28)], &v10[*(int *)(v11 + 28)], v13);
    v15 = *(int *)(v11 + 32);
    v16 = &v9[v15];
    v17 = &v10[v15];
    v18 = *(_OWORD *)(v17 + 24);
    *(_OWORD *)&v9[v15 + 24] = v18;
    (**(void (***)(char *, char *))(v18 - 8))(&v9[v15], v17);
    v19 = v16 + 40;
    v20 = v17 + 40;
    v21 = *((_QWORD *)v17 + 8);
    if (v21)
    {
      v22 = *((_QWORD *)v17 + 9);
      *((_QWORD *)v16 + 8) = v21;
      *((_QWORD *)v16 + 9) = v22;
      (**(void (***)(_OWORD *, _OWORD *))(v21 - 8))(v19, v20);
    }
    else
    {
      v23 = *(_OWORD *)(v17 + 56);
      *v19 = *v20;
      *(_OWORD *)(v16 + 56) = v23;
      *((_QWORD *)v16 + 9) = *((_QWORD *)v17 + 9);
    }
    sub_1C07B2D8C((uint64_t)v9, 0, 1, v11);
  }
  v24 = *(int *)(a3 + 24);
  v25 = (char *)(a1 + v24);
  v26 = (char *)(a2 + v24);
  if (sub_1C07B2D80((uint64_t)v26, 1, v11))
  {
    v27 = sub_1C07ACF80(&qword_1ED74AFD8);
    memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
  }
  else
  {
    v28 = sub_1C106ADE0();
    v29 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 16);
    v29(v25, v26, v28);
    v29(&v25[*(int *)(v11 + 28)], &v26[*(int *)(v11 + 28)], v28);
    v30 = *(int *)(v11 + 32);
    v31 = &v25[v30];
    v32 = &v26[v30];
    v33 = *(_OWORD *)(v32 + 24);
    *(_OWORD *)&v25[v30 + 24] = v33;
    (**(void (***)(char *, char *))(v33 - 8))(&v25[v30], v32);
    v34 = v31 + 40;
    v35 = v32 + 40;
    v36 = *((_QWORD *)v32 + 8);
    if (v36)
    {
      v37 = *((_QWORD *)v32 + 9);
      *((_QWORD *)v31 + 8) = v36;
      *((_QWORD *)v31 + 9) = v37;
      (**(void (***)(_OWORD *, _OWORD *))(v36 - 8))(v34, v35);
    }
    else
    {
      v38 = *(_OWORD *)(v32 + 56);
      *v34 = *v35;
      *(_OWORD *)(v31 + 56) = v38;
      *((_QWORD *)v31 + 9) = *((_QWORD *)v32 + 9);
    }
    sub_1C07B2D8C((uint64_t)v25, 0, 1, v11);
  }
  return a1;
}

uint64_t sub_1C0D72F8C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  int v11;
  int v12;
  uint64_t v13;
  void (*v14)(char *, char *, uint64_t);
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  _OWORD *v19;
  __int128 *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(char *, char *, uint64_t);
  uint64_t v25;
  char *v26;
  char *v27;
  _OWORD *v28;
  _OWORD *v29;
  uint64_t v30;
  __int128 v31;
  __int128 v32;
  uint64_t v33;
  char *v34;
  char *v35;
  int v36;
  int v37;
  uint64_t v38;
  void (*v39)(char *, char *, uint64_t);
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  _OWORD *v44;
  __int128 *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void (*v49)(char *, char *, uint64_t);
  uint64_t v50;
  char *v51;
  char *v52;
  _OWORD *v53;
  _OWORD *v54;
  uint64_t v55;
  __int128 v56;
  __int128 v57;
  uint64_t v59;
  __int128 v60;
  uint64_t v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v7 = *(int *)(a3 + 20);
  v8 = (char *)(a1 + v7);
  v9 = (char *)(a2 + v7);
  v10 = sub_1C07ACF80(&qword_1ED74AFD0);
  v11 = sub_1C07B2D80((uint64_t)v8, 1, v10);
  v12 = sub_1C07B2D80((uint64_t)v9, 1, v10);
  if (!v11)
  {
    if (!v12)
    {
      v23 = sub_1C106ADE0();
      v24 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 24);
      v24(v8, v9, v23);
      v24(&v8[*(int *)(v10 + 28)], &v9[*(int *)(v10 + 28)], v23);
      v25 = *(int *)(v10 + 32);
      v26 = &v8[v25];
      v27 = &v9[v25];
      sub_1C07E6484((uint64_t *)&v8[v25], (uint64_t *)&v9[v25]);
      v28 = v26 + 40;
      v29 = v27 + 40;
      v30 = *((_QWORD *)v27 + 8);
      if (*((_QWORD *)v26 + 8))
      {
        if (v30)
        {
          sub_1C07E6484((uint64_t *)v26 + 5, (uint64_t *)v27 + 5);
        }
        else
        {
          sub_1C091274C((uint64_t)(v26 + 40));
          v59 = *((_QWORD *)v27 + 9);
          v60 = *(_OWORD *)(v27 + 56);
          *v28 = *v29;
          *(_OWORD *)(v26 + 56) = v60;
          *((_QWORD *)v26 + 9) = v59;
        }
      }
      else if (v30)
      {
        *((_QWORD *)v26 + 8) = v30;
        *((_QWORD *)v26 + 9) = *((_QWORD *)v27 + 9);
        (**(void (***)(uint64_t, uint64_t))(v30 - 8))((uint64_t)(v26 + 40), (uint64_t)(v27 + 40));
      }
      else
      {
        v63 = *v29;
        v64 = *(_OWORD *)(v27 + 56);
        *((_QWORD *)v26 + 9) = *((_QWORD *)v27 + 9);
        *v28 = v63;
        *(_OWORD *)(v26 + 56) = v64;
      }
      goto LABEL_13;
    }
    sub_1C0784B94((uint64_t)v8, &qword_1ED74AFD0);
LABEL_7:
    v22 = sub_1C07ACF80(&qword_1ED74AFD8);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    goto LABEL_13;
  }
  if (v12)
    goto LABEL_7;
  v13 = sub_1C106ADE0();
  v14 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16);
  v14(v8, v9, v13);
  v14(&v8[*(int *)(v10 + 28)], &v9[*(int *)(v10 + 28)], v13);
  v15 = *(int *)(v10 + 32);
  v16 = &v8[v15];
  v17 = &v9[v15];
  v18 = *((_QWORD *)v17 + 3);
  *((_QWORD *)v16 + 3) = v18;
  *((_QWORD *)v16 + 4) = *((_QWORD *)v17 + 4);
  (**(void (***)(char *, char *))(v18 - 8))(&v8[v15], v17);
  v19 = v16 + 40;
  v20 = (__int128 *)(v17 + 40);
  v21 = *((_QWORD *)v17 + 8);
  if (v21)
  {
    *((_QWORD *)v16 + 8) = v21;
    *((_QWORD *)v16 + 9) = *((_QWORD *)v17 + 9);
    (**(void (***)(_OWORD *, __int128 *))(v21 - 8))(v19, v20);
  }
  else
  {
    v31 = *v20;
    v32 = *(_OWORD *)(v17 + 56);
    *((_QWORD *)v16 + 9) = *((_QWORD *)v17 + 9);
    *v19 = v31;
    *(_OWORD *)(v16 + 56) = v32;
  }
  sub_1C07B2D8C((uint64_t)v8, 0, 1, v10);
LABEL_13:
  v33 = *(int *)(a3 + 24);
  v34 = (char *)(a1 + v33);
  v35 = (char *)(a2 + v33);
  v36 = sub_1C07B2D80(a1 + v33, 1, v10);
  v37 = sub_1C07B2D80((uint64_t)v35, 1, v10);
  if (!v36)
  {
    if (!v37)
    {
      v48 = sub_1C106ADE0();
      v49 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v48 - 8) + 24);
      v49(v34, v35, v48);
      v49(&v34[*(int *)(v10 + 28)], &v35[*(int *)(v10 + 28)], v48);
      v50 = *(int *)(v10 + 32);
      v51 = &v34[v50];
      v52 = &v35[v50];
      sub_1C07E6484((uint64_t *)v51, (uint64_t *)&v35[v50]);
      v53 = v51 + 40;
      v54 = v52 + 40;
      v55 = *((_QWORD *)v52 + 8);
      if (*((_QWORD *)v51 + 8))
      {
        if (v55)
        {
          sub_1C07E6484((uint64_t *)v51 + 5, (uint64_t *)v52 + 5);
        }
        else
        {
          sub_1C091274C((uint64_t)(v51 + 40));
          v61 = *((_QWORD *)v52 + 9);
          v62 = *(_OWORD *)(v52 + 56);
          *v53 = *v54;
          *(_OWORD *)(v51 + 56) = v62;
          *((_QWORD *)v51 + 9) = v61;
        }
      }
      else if (v55)
      {
        *((_QWORD *)v51 + 8) = v55;
        *((_QWORD *)v51 + 9) = *((_QWORD *)v52 + 9);
        (**(void (***)(uint64_t, uint64_t))(v55 - 8))((uint64_t)(v51 + 40), (uint64_t)(v52 + 40));
      }
      else
      {
        v65 = *v54;
        v66 = *(_OWORD *)(v52 + 56);
        *((_QWORD *)v51 + 9) = *((_QWORD *)v52 + 9);
        *v53 = v65;
        *(_OWORD *)(v51 + 56) = v66;
      }
      return a1;
    }
    sub_1C0784B94((uint64_t)v34, &qword_1ED74AFD0);
LABEL_19:
    v47 = sub_1C07ACF80(&qword_1ED74AFD8);
    memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v47 - 8) + 64));
    return a1;
  }
  if (v37)
    goto LABEL_19;
  v38 = sub_1C106ADE0();
  v39 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v38 - 8) + 16);
  v39(v34, v35, v38);
  v39(&v34[*(int *)(v10 + 28)], &v35[*(int *)(v10 + 28)], v38);
  v40 = *(int *)(v10 + 32);
  v41 = &v34[v40];
  v42 = &v35[v40];
  v43 = *((_QWORD *)v42 + 3);
  *((_QWORD *)v41 + 3) = v43;
  *((_QWORD *)v41 + 4) = *((_QWORD *)v42 + 4);
  (**(void (***)(char *, char *))(v43 - 8))(&v34[v40], v42);
  v44 = v41 + 40;
  v45 = (__int128 *)(v42 + 40);
  v46 = *((_QWORD *)v42 + 8);
  if (v46)
  {
    *((_QWORD *)v41 + 8) = v46;
    *((_QWORD *)v41 + 9) = *((_QWORD *)v42 + 9);
    (**(void (***)(_OWORD *, __int128 *))(v46 - 8))(v44, v45);
  }
  else
  {
    v56 = *v45;
    v57 = *(_OWORD *)(v42 + 56);
    *((_QWORD *)v41 + 9) = *((_QWORD *)v42 + 9);
    *v44 = v56;
    *(_OWORD *)(v41 + 56) = v57;
  }
  sub_1C07B2D8C((uint64_t)v34, 0, 1, v10);
  return a1;
}

uint64_t sub_1C0D7340C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(char *, char *, uint64_t);
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(char *, char *, uint64_t);

  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v7 = *(int *)(a3 + 20);
  v8 = (char *)(a1 + v7);
  v9 = (char *)(a2 + v7);
  v10 = sub_1C07ACF80(&qword_1ED74AFD0);
  if (sub_1C07B2D80((uint64_t)v9, 1, v10))
  {
    v11 = sub_1C07ACF80(&qword_1ED74AFD8);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    v12 = sub_1C106ADE0();
    v13 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32);
    v13(v8, v9, v12);
    v13(&v8[*(int *)(v10 + 28)], &v9[*(int *)(v10 + 28)], v12);
    memcpy(&v8[*(int *)(v10 + 32)], &v9[*(int *)(v10 + 32)], 0x50uLL);
    sub_1C07B2D8C((uint64_t)v8, 0, 1, v10);
  }
  v14 = *(int *)(a3 + 24);
  v15 = (char *)(a1 + v14);
  v16 = (char *)(a2 + v14);
  if (sub_1C07B2D80((uint64_t)v16, 1, v10))
  {
    v17 = sub_1C07ACF80(&qword_1ED74AFD8);
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    v18 = sub_1C106ADE0();
    v19 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32);
    v19(v15, v16, v18);
    v19(&v15[*(int *)(v10 + 28)], &v16[*(int *)(v10 + 28)], v18);
    memcpy(&v15[*(int *)(v10 + 32)], &v16[*(int *)(v10 + 32)], 0x50uLL);
    sub_1C07B2D8C((uint64_t)v15, 0, 1, v10);
  }
  return a1;
}

uint64_t sub_1C0D735B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  int v10;
  int v11;
  uint64_t v12;
  void (*v13)(char *, char *, uint64_t);
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  int v18;
  int v19;
  uint64_t v20;
  void (*v21)(char *, char *, uint64_t);
  uint64_t v22;
  uint64_t v24;
  void (*v25)(char *, char *, uint64_t);
  uint64_t v26;
  char *v27;
  char *v28;
  __int128 v29;
  uint64_t v30;
  void (*v31)(char *, char *, uint64_t);
  uint64_t v32;
  uint64_t v33;
  char *v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v6 = *(int *)(a3 + 20);
  v7 = (char *)(a1 + v6);
  v8 = (char *)(a2 + v6);
  v9 = sub_1C07ACF80(&qword_1ED74AFD0);
  v10 = sub_1C07B2D80((uint64_t)v7, 1, v9);
  v11 = sub_1C07B2D80((uint64_t)v8, 1, v9);
  if (v10)
  {
    if (!v11)
    {
      v12 = sub_1C106ADE0();
      v13 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32);
      v13(v7, v8, v12);
      v13(&v7[*(int *)(v9 + 28)], &v8[*(int *)(v9 + 28)], v12);
      memcpy(&v7[*(int *)(v9 + 32)], &v8[*(int *)(v9 + 32)], 0x50uLL);
      sub_1C07B2D8C((uint64_t)v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v11)
  {
    sub_1C0784B94((uint64_t)v7, &qword_1ED74AFD0);
LABEL_6:
    v14 = sub_1C07ACF80(&qword_1ED74AFD8);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  v24 = sub_1C106ADE0();
  v25 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 40);
  v25(v7, v8, v24);
  v25(&v7[*(int *)(v9 + 28)], &v8[*(int *)(v9 + 28)], v24);
  v26 = *(int *)(v9 + 32);
  v27 = &v7[v26];
  v28 = &v8[v26];
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)&v7[v26]);
  v29 = *((_OWORD *)v28 + 1);
  *(_OWORD *)v27 = *(_OWORD *)v28;
  *((_OWORD *)v27 + 1) = v29;
  *((_QWORD *)v27 + 4) = *((_QWORD *)v28 + 4);
  if (*((_QWORD *)v27 + 8))
  {
    if (*((_QWORD *)v28 + 8))
      _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)(v27 + 40));
    else
      sub_1C091274C((uint64_t)(v27 + 40));
  }
  v36 = *(_OWORD *)(v28 + 56);
  *(_OWORD *)(v27 + 40) = *(_OWORD *)(v28 + 40);
  *(_OWORD *)(v27 + 56) = v36;
  *((_QWORD *)v27 + 9) = *((_QWORD *)v28 + 9);
LABEL_7:
  v15 = *(int *)(a3 + 24);
  v16 = (char *)(a1 + v15);
  v17 = (char *)(a2 + v15);
  v18 = sub_1C07B2D80(a1 + v15, 1, v9);
  v19 = sub_1C07B2D80((uint64_t)v17, 1, v9);
  if (v18)
  {
    if (!v19)
    {
      v20 = sub_1C106ADE0();
      v21 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 32);
      v21(v16, v17, v20);
      v21(&v16[*(int *)(v9 + 28)], &v17[*(int *)(v9 + 28)], v20);
      memcpy(&v16[*(int *)(v9 + 32)], &v17[*(int *)(v9 + 32)], 0x50uLL);
      sub_1C07B2D8C((uint64_t)v16, 0, 1, v9);
      return a1;
    }
LABEL_12:
    v22 = sub_1C07ACF80(&qword_1ED74AFD8);
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    return a1;
  }
  if (v19)
  {
    sub_1C0784B94((uint64_t)v16, &qword_1ED74AFD0);
    goto LABEL_12;
  }
  v30 = sub_1C106ADE0();
  v31 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v30 - 8) + 40);
  v31(v16, v17, v30);
  v31(&v16[*(int *)(v9 + 28)], &v17[*(int *)(v9 + 28)], v30);
  v32 = *(int *)(v9 + 32);
  v33 = (uint64_t)&v16[v32];
  v34 = &v17[v32];
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0(v33);
  v35 = *((_OWORD *)v34 + 1);
  *(_OWORD *)v33 = *(_OWORD *)v34;
  *(_OWORD *)(v33 + 16) = v35;
  *(_QWORD *)(v33 + 32) = *((_QWORD *)v34 + 4);
  if (*(_QWORD *)(v33 + 64))
  {
    if (*((_QWORD *)v34 + 8))
      _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0(v33 + 40);
    else
      sub_1C091274C(v33 + 40);
  }
  v37 = *(_OWORD *)(v34 + 56);
  *(_OWORD *)(v33 + 40) = *(_OWORD *)(v34 + 40);
  *(_OWORD *)(v33 + 56) = v37;
  *(_QWORD *)(v33 + 72) = *((_QWORD *)v34 + 9);
  return a1;
}

uint64_t sub_1C0D7390C()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1C0D73918(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_1C07ACF80(&qword_1ED74AFD8);
    return sub_1C07B2D80((uint64_t)a1 + *(int *)(a3 + 20), a2, v8);
  }
}

uint64_t sub_1C0D73990()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

_QWORD *sub_1C0D7399C(_QWORD *result, uint64_t a2, int a3, uint64_t a4)
{
  _QWORD *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *result = (a2 - 1);
  }
  else
  {
    v7 = sub_1C07ACF80(&qword_1ED74AFD8);
    return (_QWORD *)sub_1C07B2D8C((uint64_t)v5 + *(int *)(a4 + 20), a2, a2, v7);
  }
  return result;
}

void sub_1C0D73A0C()
{
  unint64_t v0;

  sub_1C0D73A80();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

void sub_1C0D73A80()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED74AFE0)
  {
    sub_1C07D4BEC(&qword_1ED74AFD0);
    v0 = sub_1C1070564();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED74AFE0);
  }
}

uint64_t destroy for StoredLocationVisitWithTransition(uint64_t a1)
{
  uint64_t result;

  result = _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0(a1);
  if (*(_QWORD *)(a1 + 64))
    return _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0(a1 + 40);
  return result;
}

uint64_t initializeWithCopy for StoredLocationVisitWithTransition(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  _OWORD *v5;
  _OWORD *v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;

  v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  v5 = (_OWORD *)(a1 + 40);
  v6 = (_OWORD *)(a2 + 40);
  v7 = *(_QWORD *)(a2 + 64);
  if (v7)
  {
    v8 = *(_QWORD *)(a2 + 72);
    *(_QWORD *)(a1 + 64) = v7;
    *(_QWORD *)(a1 + 72) = v8;
    (**(void (***)(_OWORD *, _OWORD *))(v7 - 8))(v5, v6);
  }
  else
  {
    v9 = *(_OWORD *)(a2 + 56);
    *v5 = *v6;
    *(_OWORD *)(a1 + 56) = v9;
    *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  }
  return a1;
}

uint64_t assignWithCopy for StoredLocationVisitWithTransition(uint64_t a1, uint64_t a2)
{
  _OWORD *v4;
  _OWORD *v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;

  sub_1C07E6484((uint64_t *)a1, (uint64_t *)a2);
  v4 = (_OWORD *)(a1 + 40);
  v5 = (_OWORD *)(a2 + 40);
  v6 = *(_QWORD *)(a2 + 64);
  if (*(_QWORD *)(a1 + 64))
  {
    if (v6)
    {
      sub_1C07E6484((uint64_t *)(a1 + 40), (uint64_t *)(a2 + 40));
    }
    else
    {
      sub_1C091274C(a1 + 40);
      v7 = *(_QWORD *)(a2 + 72);
      v8 = *(_OWORD *)(a2 + 56);
      *v4 = *v5;
      *(_OWORD *)(a1 + 56) = v8;
      *(_QWORD *)(a1 + 72) = v7;
    }
  }
  else if (v6)
  {
    *(_QWORD *)(a1 + 64) = v6;
    *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
    (**(void (***)(uint64_t, uint64_t))(v6 - 8))(a1 + 40, a2 + 40);
  }
  else
  {
    v9 = *v5;
    v10 = *(_OWORD *)(a2 + 56);
    *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
    *v4 = v9;
    *(_OWORD *)(a1 + 56) = v10;
  }
  return a1;
}

uint64_t assignWithTake for StoredLocationVisitWithTransition(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  __int128 v5;

  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0(a1);
  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  if (*(_QWORD *)(a1 + 64))
  {
    if (*(_QWORD *)(a2 + 64))
      _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0(a1 + 40);
    else
      sub_1C091274C(a1 + 40);
  }
  v5 = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = v5;
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  return a1;
}

ValueMetadata *type metadata accessor for StoredLocationVisitWithTransition()
{
  return &type metadata for StoredLocationVisitWithTransition;
}

void sub_1C0D73CBC()
{
  sub_1C0D73DB4(&qword_1ED74C168, (uint64_t)&unk_1C10BA5C0);
}

void sub_1C0D73CE0()
{
  sub_1C0D73DB4(&qword_1ED74C158, (uint64_t)&unk_1C10BA514);
}

unint64_t sub_1C0D73D08()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF648BE8;
  if (!qword_1EF648BE8)
  {
    v1 = sub_1C07D4BEC(&qword_1ED74AFD0);
    result = MEMORY[0x1C3BA8174](&protocol conformance descriptor for SessionDataComplying<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1EF648BE8);
  }
  return result;
}

void sub_1C0D73D4C(uint64_t a1)
{
  uint64_t v2;

  sub_1C0D73DB4(&qword_1ED74C158, (uint64_t)&unk_1C10BA514);
  *(_QWORD *)(a1 + 8) = v2;
}

void sub_1C0D73D80(uint64_t a1)
{
  uint64_t v2;

  sub_1C0D73DB4(&qword_1ED74C160, (uint64_t)&unk_1C10BA55C);
  *(_QWORD *)(a1 + 8) = v2;
}

void sub_1C0D73DB4(unint64_t *a1, uint64_t a2)
{
  uint64_t v4;

  if (!*a1)
  {
    v4 = type metadata accessor for StoredLocationVisitSignal.StoredLocationVisitWithTransitionAsyncSequence();
    atomic_store(MEMORY[0x1C3BA8174](a2, v4), a1);
  }
  sub_1C0778534();
}

uint64_t sub_1C0D73DF0(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for StoredLocationVisitSignal.StoredLocationVisitWithTransitionAsyncSequence();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1C0D73E2C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for StoredLocationVisitSignal.StoredLocationVisitWithTransitionAsyncSequence();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C0D73E70(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1C07ACF80(&qword_1ED74AFD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C0D73EB8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1C07ACF80(&qword_1ED74AFD0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1C0D73F00(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  char v10;

  v4 = HIBYTE(a4) & 0xF;
  if ((a4 & 0x2000000000000000) == 0)
    v4 = a3 & 0xFFFFFFFFFFFFLL;
  if (v4)
  {
    v7 = 4 * v4;
    while (sub_1C106FD48() != a1 || v8 != a2)
    {
      v10 = sub_1C07785B0();
      swift_bridgeObjectRelease();
      if ((v10 & 1) != 0 || v7 == (unint64_t)sub_1C106FC40() >> 14)
        goto LABEL_14;
    }
    sub_1C077960C();
  }
LABEL_14:
  sub_1C077C798();
}

void sub_1C0D73FCC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v14;

  v3 = *(_QWORD *)(a2 + 16);
  if (v3)
  {
    v5 = sub_1C0CD7BF0(*(_BYTE *)(a2 + 32));
    if (v5 == sub_1C07977F4() && v2 == v6)
    {
LABEL_16:
      swift_bridgeObjectRelease_n();
    }
    else
    {
      v8 = sub_1C07785B0();
      sub_1C0778580();
      sub_1C077960C();
      v9 = 0;
      if ((v8 & 1) == 0)
      {
        v10 = v3 - 1;
        while (v10 != v9)
        {
          v11 = sub_1C0CD7BF0(*(_BYTE *)(a2 + 33 + v9));
          if (v11 == sub_1C07977F4() && v2 == v12)
            goto LABEL_16;
          v14 = sub_1C07785B0();
          sub_1C0778580();
          swift_bridgeObjectRelease();
          ++v9;
          if ((v14 & 1) != 0)
            break;
        }
      }
    }
  }
  sub_1C077C798();
}

unint64_t sub_1C0D740E0(uint64_t a1, uint64_t a2, unint64_t a3, unint64_t a4)
{
  unint64_t v4;
  uint64_t v8;
  char v10;
  unint64_t v12;
  uint64_t v13;
  char v15;
  unint64_t v16;

  v16 = a4 >> 14;
  if (a4 >> 14 == a3 >> 14)
    return 0;
  if (sub_1C1070594() == a1 && v8 == a2)
  {
    v4 = a3;
LABEL_10:
    swift_bridgeObjectRelease();
  }
  else
  {
    v10 = sub_1C07785B0();
    swift_bridgeObjectRelease();
    if ((v10 & 1) != 0)
    {
      return a3;
    }
    else
    {
      while (1)
      {
        sub_1C0796BAC();
        v12 = sub_1C107057C();
        if (v12 >> 14 == v16)
          return 0;
        v4 = v12;
        sub_1C0796BAC();
        if (sub_1C1070594() == a1 && v13 == a2)
          goto LABEL_10;
        v15 = sub_1C07785B0();
        swift_bridgeObjectRelease();
        if ((v15 & 1) != 0)
          return v4;
      }
    }
  }
  return v4;
}

unint64_t sub_1C0D74224(unint64_t result, uint64_t a2, unint64_t a3)
{
  uint64_t v3;

  v3 = HIBYTE(a3) & 0xF;
  if ((a3 & 0x2000000000000000) == 0)
    v3 = a2 & 0xFFFFFFFFFFFFLL;
  if (4 * v3 >= result >> 14)
    return sub_1C106FD60();
  __break(1u);
  return result;
}

Swift::String_optional __swiftcall String.normalizedContactHandle()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  id v4;
  void *v5;
  id v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  void *v11;
  char v12;
  id v13;
  id v14;
  void *v15;
  void *v16;
  uint64_t v17;
  void *v18;
  Swift::String_optional result;
  _QWORD v20[2];

  v0 = sub_1C106A7E0();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)v20 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D13A70]), sel_init);
  v5 = (void *)sub_1C07883DC();
  v6 = objc_msgSend(v4, sel_typeOfHandleString_, v5);

  if (v6 == (id)1)
  {
    v7 = (void *)MEMORY[0x1C3BA79F4]();
    v20[0] = sub_1C106FB68();
    v20[1] = v8;
    sub_1C106A7BC();
    sub_1C07B1280();
    v9 = sub_1C10705E8();
    v11 = v10;
    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
    swift_bridgeObjectRelease();
    objc_autoreleasePoolPop(v7);
  }
  else
  {
    sub_1C079A1F8();
    if ((v12 & 1) == 0)
    {
      sub_1C079E974();
      sub_1C07767B4();
      sub_1C07A76D8();
      sub_1C07991C4();
    }
    sub_1C07767B4();
    sub_1C07D4B70(0, (unint64_t *)&qword_1ED75E850);
    v13 = sub_1C0D745F8();
    v14 = objc_msgSend(v13, sel_unformattedInternationalStringValue);
    if (v14)
    {
      v15 = v14;
      v9 = sub_1C106FB14();
      v11 = v16;

    }
    else
    {

      v9 = 0;
      v11 = 0;
    }
  }
  v17 = v9;
  v18 = v11;
  result.value._object = v18;
  result.value._countAndFlagsBits = v17;
  return result;
}

Swift::Bool __swiftcall String.isValidEmail()()
{
  id v0;
  void *v1;
  id v2;

  v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D13A70]), sel_init);
  v1 = (void *)sub_1C07883DC();
  v2 = objc_msgSend(v0, sel_typeOfHandleString_, v1);

  return v2 == (id)1;
}

Swift::Bool __swiftcall String.isValidPhoneNumber()()
{
  id v0;
  id v1;
  void *v2;
  uint64_t v3;
  id v4;
  unint64_t v5;
  uint64_t v6;

  v0 = objc_allocWithZone(MEMORY[0x1E0CB3560]);
  v1 = sub_1C0B6A550(2048);
  v2 = (void *)sub_1C106FAF0();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  v3 = sub_1C106FD0C();
  sub_1C0778580();
  v4 = objc_msgSend(v1, sel_matchesInString_options_range_, v2, 0, 0, v3);

  sub_1C07D4B70(0, (unint64_t *)&qword_1ED75D1C0);
  v5 = sub_1C106FF04();

  if (v5 >> 62)
  {
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    v6 = sub_1C10709B4();

    swift_bridgeObjectRelease_n();
  }
  else
  {
    v6 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
    sub_1C077960C();

  }
  return v6 != 0;
}

id sub_1C0D745F8()
{
  id v0;
  void *v1;
  id v2;

  v0 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  v1 = (void *)sub_1C106FAF0();
  swift_bridgeObjectRelease();
  v2 = objc_msgSend(v0, sel_initWithStringValue_, v1);

  return v2;
}

Swift::String __swiftcall String.stripFZIDPrefix()()
{
  uint64_t v0;
  void *v1;
  void *v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  void *v6;
  Swift::String result;

  v2 = v1;
  v3 = v0;
  sub_1C079A1F8();
  if ((v4 & 1) == 0)
  {
    sub_1C079E974();
    sub_1C07767B4();
    sub_1C07A76D8();
    sub_1C07991C4();
  }
  sub_1C07767B4();
  v5 = v3;
  v6 = v2;
  result._object = v6;
  result._countAndFlagsBits = v5;
  return result;
}

void __swiftcall StructuredLocation.init(mapLocation:identifier:latitude:longitude:title:address:label:muid:)(IntelligencePlatformCore::StructuredLocation *__return_ptr retstr, Swift::String mapLocation, Swift::String identifier, Swift::Double_optional latitude, Swift::Double_optional longitude, Swift::String_optional title, Swift::String_optional address, Swift::String_optional label, Swift::UInt64_optional muid)
{
  uint64_t v9;
  void *object;
  uint64_t countAndFlagsBits;
  Swift::Bool is_nil;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  _QWORD *v22;
  char v23;
  _QWORD *v24;
  Swift::String_optional *v25;
  Swift::String_optional *v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  unsigned __int8 v38;

  object = title.value._object;
  countAndFlagsBits = title.value._countAndFlagsBits;
  is_nil = longitude.is_nil;
  v13 = *(_QWORD *)&latitude.is_nil;
  v14 = identifier._object;
  v15 = identifier._countAndFlagsBits;
  v35 = mapLocation._object;
  v16 = mapLocation._countAndFlagsBits;
  sub_1C07ACF80(&qword_1EF62FE20);
  v18 = swift_allocObject();
  *(_OWORD *)(v18 + 16) = xmmword_1C1079220;
  *(_QWORD *)(v18 + 32) = 0x696669746E656469;
  *(_QWORD *)(v18 + 40) = 0xEA00000000007265;
  *(_QWORD *)(v18 + 48) = v15;
  *(_QWORD *)(v18 + 56) = v14;
  *(_QWORD *)(v18 + 72) = 0;
  *(_QWORD *)(v18 + 80) = 0;
  *(_QWORD *)(v18 + 64) = 0;
  *(_BYTE *)(v18 + 88) = 1;
  if (is_nil || (~v13 & 0x7FF0000000000000) == 0 && (v13 & 0xFFFFFFFFFFFFFLL) != 0)
  {
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  }
  else
  {
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    v13 = sub_1C1070180();
    v20 = *(_QWORD *)(v18 + 16);
    v21 = v20 + 1;
    if (v20 >= *(_QWORD *)(v18 + 24) >> 1)
    {
      v9 = v19;
      sub_1C07EB0C4();
      v21 = v20 + 1;
      v19 = v9;
      v18 = v33;
    }
    *(_QWORD *)(v18 + 16) = v21;
    v22 = (_QWORD *)(v18 + (v20 << 6));
    v22[4] = 0x656475746974616CLL;
    v22[5] = 0xE800000000000000;
    v22[6] = v13;
    v22[7] = v19;
    sub_1C077B630((uint64_t)v22);
  }
  if ((object & 1) == 0
    && ((~countAndFlagsBits & 0x7FF0000000000000) != 0 || (countAndFlagsBits & 0xFFFFFFFFFFFFFLL) == 0))
  {
    sub_1C1070180();
    sub_1C078FBE0();
    if (v23)
    {
      sub_1C0799004();
      v18 = v34;
    }
    *(_QWORD *)(v18 + 16) = v13;
    v24 = (_QWORD *)(v18 + (v9 << 6));
    v24[4] = 0x64757469676E6F6CLL;
    v24[5] = 0xE900000000000065;
    v24[6] = countAndFlagsBits;
    v24[7] = object;
    sub_1C077B630((uint64_t)v24);
  }
  if (address.value._object)
  {
    sub_1C07AE208();
    if (v23)
    {
      sub_1C07A1510();
      v18 = v29;
    }
    *(_QWORD *)(v18 + 16) = countAndFlagsBits;
    v25 = (Swift::String_optional *)(v18 + (v9 << 6));
    v25[2].value._countAndFlagsBits = 0x656C746974;
    v25[2].value._object = (void *)0xE500000000000000;
    v25[3] = address;
    sub_1C077B630((uint64_t)v25);
  }
  if (label.value._object)
  {
    sub_1C07AE208();
    if (v23)
    {
      sub_1C07A1510();
      v18 = v30;
    }
    *(_QWORD *)(v18 + 16) = countAndFlagsBits;
    v26 = (Swift::String_optional *)(v18 + (v9 << 6));
    v26[2].value._countAndFlagsBits = 0x73736572646461;
    v26[2].value._object = (void *)0xE700000000000000;
    v26[3] = label;
    sub_1C077B630((uint64_t)v26);
  }
  if (*(_QWORD *)&muid.is_nil)
  {
    sub_1C07AE208();
    if (v23)
    {
      sub_1C07A1510();
      v18 = v31;
    }
    *(_QWORD *)(v18 + 16) = countAndFlagsBits;
    v27 = (_QWORD *)(v18 + (v9 << 6));
    v27[4] = 0x6C6562616CLL;
    v27[5] = 0xE500000000000000;
    v27[6] = muid.value;
    v27[7] = *(_QWORD *)&muid.is_nil;
    sub_1C077B630((uint64_t)v27);
  }
  if ((v38 & 1) == 0)
  {
    v36 = v37;
    sub_1C1070C0C();
    sub_1C078FBE0();
    if (v23)
    {
      sub_1C0799004();
      v18 = v32;
    }
    *(_QWORD *)(v18 + 16) = v38;
    v28 = v18 + (v9 << 6);
    strcpy((char *)(v28 + 32), "mapsIdentifier");
    *(_BYTE *)(v28 + 47) = -18;
    *(_QWORD *)(v28 + 48) = &v36;
    *(_QWORD *)(v28 + 56) = *(_QWORD *)&muid.is_nil;
    sub_1C077B630(v28);
  }
  retstr->mapLocation._countAndFlagsBits = v16;
  retstr->mapLocation._object = v35;
  retstr->basicProperties._rawValue = (void *)v18;
  retstr->identifier.value._countAndFlagsBits = v15;
  retstr->identifier.value._object = v14;
}

uint64_t StructuredLocation.mapLocation.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1C077AE90();
  return v1;
}

uint64_t sub_1C0D74A20()
{
  if (qword_1EF62E338 != -1)
    swift_once();
  qword_1EF648C30 = qword_1EF6483A8;
  unk_1EF648C38 = *(_OWORD *)algn_1EF6483B0;
  qword_1EF648C48 = qword_1EF6483C0;
  return _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
}

uint64_t static StructuredLocation.type.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;

  if (qword_1EF62E360 != -1)
    swift_once();
  v2 = qword_1EF648C48;
  *(_QWORD *)a1 = qword_1EF648C30;
  *(_OWORD *)(a1 + 8) = unk_1EF648C38;
  *(_QWORD *)(a1 + 24) = v2;
  return _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
}

uint64_t StructuredLocation.basicProperties.getter()
{
  return _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
}

uint64_t StructuredLocation.identifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  sub_1C077AE90();
  return v1;
}

uint64_t sub_1C0D74B1C()
{
  sub_1C0D74F40();
  return sub_1C1070EE8();
}

uint64_t sub_1C0D74B44()
{
  sub_1C0D74F40();
  return sub_1C1070EF4();
}

void StructuredLocation.encode(to:)(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD v9[3];
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  char v14;
  char v15;

  v3 = sub_1C07ACF80(&qword_1EF648C50);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = v1[2];
  v9[2] = v1[3];
  v10 = v7;
  v9[1] = v1[4];
  sub_1C07A9480(a1, a1[3]);
  sub_1C0D74F40();
  sub_1C1070EB8();
  v15 = 0;
  v8 = v11;
  sub_1C1070B7C();
  if (!v8)
  {
    v12 = v10;
    v14 = 1;
    sub_1C07ACF80(&qword_1EF62FE38);
    sub_1C07EB158(&qword_1EF62FE40, (uint64_t (*)(void))sub_1C07EB11C, MEMORY[0x1E0DEAF10]);
    sub_1C1070BB8();
    v13 = 2;
    sub_1C1070B34();
  }
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  sub_1C07757D0();
}

void StructuredLocation.init(from:)(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  char v22;
  char v23;

  v5 = sub_1C07ACF80(&qword_1EF648C60);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C07A9480(a1, a1[3]);
  sub_1C0D74F40();
  sub_1C1070E94();
  if (v2)
  {
    sub_1C0775880();
  }
  else
  {
    v23 = 0;
    v9 = sub_1C1070AA4();
    v11 = v10;
    v19 = v9;
    sub_1C07ACF80(&qword_1EF62FE38);
    v22 = 1;
    sub_1C07EB158(&qword_1EF62FE58, (uint64_t (*)(void))sub_1C07EB1C0, MEMORY[0x1E0DEAF40]);
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    sub_1C1070AE0();
    v21 = 2;
    v18 = v20;
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    v12 = sub_1C1070A5C();
    v14 = v13;
    v15 = v12;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    sub_1C077AE90();
    v16 = v18;
    *a2 = v19;
    a2[1] = v11;
    a2[2] = v16;
    a2[3] = v15;
    a2[4] = v14;
    sub_1C0775880();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  sub_1C07757D0();
}

void sub_1C0D74F18(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  StructuredLocation.init(from:)(a1, a2);
}

void sub_1C0D74F2C(_QWORD *a1)
{
  StructuredLocation.encode(to:)(a1);
}

unint64_t sub_1C0D74F40()
{
  unint64_t result;

  result = qword_1EF648C58;
  if (!qword_1EF648C58)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10BA758, &type metadata for StructuredLocation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF648C58);
  }
  return result;
}

unint64_t sub_1C0D74F7C(uint64_t a1)
{
  unint64_t result;

  result = sub_1C0D36B70();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C0D74FA0(uint64_t a1)
{
  unint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1C0D74FCC();
  result = sub_1C0D75008();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1C0D74FCC()
{
  unint64_t result;

  result = qword_1EF648C68;
  if (!qword_1EF648C68)
  {
    result = MEMORY[0x1C3BA8174](&protocol conformance descriptor for StructuredLocation, &type metadata for StructuredLocation);
    atomic_store(result, (unint64_t *)&qword_1EF648C68);
  }
  return result;
}

unint64_t sub_1C0D75008()
{
  unint64_t result;

  result = qword_1EF648C70;
  if (!qword_1EF648C70)
  {
    result = MEMORY[0x1C3BA8174](&protocol conformance descriptor for StructuredLocation, &type metadata for StructuredLocation);
    atomic_store(result, (unint64_t *)&qword_1EF648C70);
  }
  return result;
}

ValueMetadata *type metadata accessor for StructuredLocation()
{
  return &type metadata for StructuredLocation;
}

uint64_t storeEnumTagSinglePayload for StructuredLocation.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1C0D750A0 + 4 * byte_1C10BA5E5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1C0D750D4 + 4 * byte_1C10BA5E0[v4]))();
}

uint64_t sub_1C0D750D4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C0D750DC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C0D750E4);
  return result;
}

uint64_t sub_1C0D750F0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C0D750F8);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1C0D750FC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C0D75104(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for StructuredLocation.CodingKeys()
{
  return &type metadata for StructuredLocation.CodingKeys;
}

unint64_t sub_1C0D75124()
{
  unint64_t result;

  result = qword_1EF648C78;
  if (!qword_1EF648C78)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10BA730, &type metadata for StructuredLocation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF648C78);
  }
  return result;
}

unint64_t sub_1C0D75164()
{
  unint64_t result;

  result = qword_1EF648C80;
  if (!qword_1EF648C80)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10BA6A0, &type metadata for StructuredLocation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF648C80);
  }
  return result;
}

unint64_t sub_1C0D751A4()
{
  unint64_t result;

  result = qword_1EF648C88;
  if (!qword_1EF648C88)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10BA6C8, &type metadata for StructuredLocation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF648C88);
  }
  return result;
}

uint64_t sub_1C0D751E0()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C0D75228(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_WORD *)(a1 + 25) = *(_WORD *)(a2 + 25);
  v4 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v4;
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  v5 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v5;
  v6 = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = v6;
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  swift_retain();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  return a1;
}

uint64_t sub_1C0D752CC(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_retain();
  swift_release();
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_BYTE *)(a1 + 25) = *(_BYTE *)(a2 + 25);
  *(_BYTE *)(a1 + 26) = *(_BYTE *)(a2 + 26);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_BYTE *)(a1 + 49) = *(_BYTE *)(a2 + 49);
  *(_BYTE *)(a1 + 50) = *(_BYTE *)(a2 + 50);
  *(_BYTE *)(a1 + 51) = *(_BYTE *)(a2 + 51);
  *(_BYTE *)(a1 + 52) = *(_BYTE *)(a2 + 52);
  *(_BYTE *)(a1 + 53) = *(_BYTE *)(a2 + 53);
  *(_BYTE *)(a1 + 54) = *(_BYTE *)(a2 + 54);
  *(_BYTE *)(a1 + 55) = *(_BYTE *)(a2 + 55);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1C0D75400(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_release();
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_BYTE *)(a1 + 25) = *(_BYTE *)(a2 + 25);
  *(_BYTE *)(a1 + 26) = *(_BYTE *)(a2 + 26);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_BYTE *)(a1 + 49) = *(_BYTE *)(a2 + 49);
  *(_BYTE *)(a1 + 50) = *(_BYTE *)(a2 + 50);
  *(_BYTE *)(a1 + 51) = *(_BYTE *)(a2 + 51);
  *(_BYTE *)(a1 + 52) = *(_BYTE *)(a2 + 52);
  *(_BYTE *)(a1 + 53) = *(_BYTE *)(a2 + 53);
  *(_BYTE *)(a1 + 54) = *(_BYTE *)(a2 + 54);
  *(_BYTE *)(a1 + 55) = *(_BYTE *)(a2 + 55);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  v4 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

void type metadata accessor for SubgraphDatabaseTable()
{
  sub_1C0779604();
}

uint64_t sub_1C0D754E8()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C0D75510(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v3 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v3;
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  return a1;
}

uint64_t sub_1C0D7555C(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_BYTE *)(a1 + 9) = *(_BYTE *)(a2 + 9);
  *(_BYTE *)(a1 + 10) = *(_BYTE *)(a2 + 10);
  *(_BYTE *)(a1 + 11) = *(_BYTE *)(a2 + 11);
  *(_BYTE *)(a1 + 12) = *(_BYTE *)(a2 + 12);
  *(_BYTE *)(a1 + 13) = *(_BYTE *)(a2 + 13);
  *(_BYTE *)(a1 + 14) = *(_BYTE *)(a2 + 14);
  *(_BYTE *)(a1 + 15) = *(_BYTE *)(a2 + 15);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1C0D75608(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_BYTE *)(a1 + 9) = *(_BYTE *)(a2 + 9);
  *(_BYTE *)(a1 + 10) = *(_BYTE *)(a2 + 10);
  *(_BYTE *)(a1 + 11) = *(_BYTE *)(a2 + 11);
  *(_BYTE *)(a1 + 12) = *(_BYTE *)(a2 + 12);
  *(_BYTE *)(a1 + 13) = *(_BYTE *)(a2 + 13);
  *(_BYTE *)(a1 + 14) = *(_BYTE *)(a2 + 14);
  *(_BYTE *)(a1 + 15) = *(_BYTE *)(a2 + 15);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v4;
  swift_bridgeObjectRelease();
  return a1;
}

void type metadata accessor for SubgraphDatabaseTable.SubgraphColumns()
{
  sub_1C0779604();
}

uint64_t sub_1C0D756A0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_WORD *)(a1 + 25) = *(_WORD *)(a2 + 25);
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  return a1;
}

uint64_t sub_1C0D756EC(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_BYTE *)(a1 + 25) = *(_BYTE *)(a2 + 25);
  *(_BYTE *)(a1 + 26) = *(_BYTE *)(a2 + 26);
  return a1;
}

__n128 sub_1C0D75768(uint64_t a1, uint64_t a2)
{
  __n128 result;

  result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 11) = *(_OWORD *)(a2 + 11);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t sub_1C0D7577C(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_WORD *)(a1 + 25) = *(_WORD *)(a2 + 25);
  return a1;
}

uint64_t sub_1C0D757D0(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 27))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

void type metadata accessor for SubgraphDatabaseTable.Config()
{
  sub_1C0779604();
}

uint64_t sub_1C0D7581C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;

  if (*(_QWORD *)(a1 + 16))
  {
    sub_1C09D4934();
    __asm { BR              X9 }
  }
  sub_1C0AC13F8(a2);
  v5 = MEMORY[0x1E0DEE9D8];
  sub_1C08351C0(a3);
  return v5;
}

uint64_t sub_1C0D759EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result;
  uint64_t v5;

  if (*(_QWORD *)(a1 + 16))
  {
    swift_bridgeObjectRetain_n();
    sub_1C078FA04();
    __asm { BR              X9 }
  }
  sub_1C077AE90();
  sub_1C077960C();
  result = sub_1C106C154();
  *(_QWORD *)a2 = a1;
  *(_BYTE *)(a2 + 8) = 0;
  *(_BYTE *)(a2 + 9) = 0;
  *(_BYTE *)(a2 + 10) = 0;
  *(_BYTE *)(a2 + 11) = 0;
  *(_BYTE *)(a2 + 12) = 0;
  *(_BYTE *)(a2 + 13) = 0;
  *(_BYTE *)(a2 + 14) = 0;
  *(_BYTE *)(a2 + 15) = 0;
  *(_BYTE *)(a2 + 16) = 0;
  *(_QWORD *)(a2 + 24) = result;
  *(_QWORD *)(a2 + 32) = v5;
  return result;
}

void sub_1C0D762B0()
{
  sub_1C077960C();
  JUMPOUT(0x1C0D75B40);
}

void sub_1C0D762BC()
{
  sub_1C077960C();
  JUMPOUT(0x1C0D75C10);
}

void sub_1C0D762CC()
{
  sub_1C077960C();
  sub_1C07ABD0C();
  JUMPOUT(0x1C0D75CECLL);
}

void sub_1C0D762E0()
{
  sub_1C077960C();
  swift_bridgeObjectRelease();
  JUMPOUT(0x1C0D75DF0);
}

void sub_1C0D76304()
{
  sub_1C077960C();
  JUMPOUT(0x1C0D75EB0);
}

void sub_1C0D76310()
{
  sub_1C077960C();
  JUMPOUT(0x1C0D75F84);
}

void sub_1C0D7631C()
{
  sub_1C077960C();
  JUMPOUT(0x1C0D7605CLL);
}

void sub_1C0D76334()
{
  sub_1C077960C();
  JUMPOUT(0x1C0D7614CLL);
}

void sub_1C0D76344()
{
  sub_1C077960C();
  JUMPOUT(0x1C0D76230);
}

uint64_t sub_1C0D764B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, char a6@<W5>, char a7@<W6>, uint64_t a8@<X8>)
{
  uint64_t v8;
  uint64_t result;
  uint64_t v18;
  char v19;
  char v20;
  char v21;
  char v22;
  char v23;
  char v24;
  char v25;
  char v26;
  char v27;
  uint64_t v28;
  uint64_t v29;

  swift_bridgeObjectRetain_n();
  swift_retain();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C0D7668C();
  if (v8)
  {
    sub_1C07758A4();
    sub_1C07758A4();
    return swift_release_n();
  }
  else
  {
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    sub_1C077C0B8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    result = sub_1C07758A4();
    *(_QWORD *)a8 = a2;
    *(_QWORD *)(a8 + 8) = a3;
    *(_QWORD *)(a8 + 16) = a1;
    *(_BYTE *)(a8 + 24) = a5 & 1;
    *(_BYTE *)(a8 + 25) = a6 & 1;
    *(_BYTE *)(a8 + 26) = a7 & 1;
    *(_QWORD *)(a8 + 32) = a4;
    *(_QWORD *)(a8 + 40) = v18;
    *(_BYTE *)(a8 + 48) = v19;
    *(_BYTE *)(a8 + 49) = v20;
    *(_BYTE *)(a8 + 50) = v21;
    *(_BYTE *)(a8 + 51) = v22;
    *(_BYTE *)(a8 + 52) = v23;
    *(_BYTE *)(a8 + 53) = v24;
    *(_BYTE *)(a8 + 54) = v25;
    *(_BYTE *)(a8 + 55) = v26;
    *(_BYTE *)(a8 + 56) = v27;
    *(_QWORD *)(a8 + 64) = v28;
    *(_QWORD *)(a8 + 72) = v29;
    *(_QWORD *)(a8 + 80) = 0x7463656A627573;
    *(_QWORD *)(a8 + 88) = 0xE700000000000000;
  }
  return result;
}

void sub_1C0D7668C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  char v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  sub_1C077AE5C();
  v2 = v1;
  v17 = v3;
  v4 = type metadata accessor for ViewDatabaseArtifact.Property();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  sub_1C07795DC();
  v6 = *(_QWORD *)(v2 + 16);
  if (v6)
  {
    v18 = MEMORY[0x1E0DEE9D8];
    sub_1C09D4E0C();
    v7 = v2 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
    v8 = *(_QWORD *)(v5 + 72);
    while (1)
    {
      sub_1C083F944(v7, v0, (uint64_t (*)(_QWORD))type metadata accessor for ViewDatabaseArtifact.Property);
      sub_1C07767B4();
      v9 = sub_1C0D79F34();
      if (v9 == 9)
        break;
      v10 = v9;
      sub_1C07B1F90(v0, (uint64_t (*)(_QWORD))type metadata accessor for ViewDatabaseArtifact.Property);
      v11 = v18;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1C09D4E0C();
        v11 = v18;
      }
      v12 = *(_QWORD *)(v11 + 16);
      if (v12 >= *(_QWORD *)(v11 + 24) >> 1)
      {
        sub_1C09D4E0C();
        v11 = v18;
      }
      *(_QWORD *)(v11 + 16) = v12 + 1;
      *(_BYTE *)(v11 + v12 + 32) = v10;
      v7 += v8;
      if (!--v6)
      {
        sub_1C077866C();
        goto LABEL_12;
      }
    }
    sub_1C08E29B4();
    swift_allocError();
    *(_OWORD *)v13 = xmmword_1C1081A00;
    *(_QWORD *)(v13 + 16) = 0xD000000000000022;
    *(_QWORD *)(v13 + 24) = 0x80000001C110AD80;
    *(_OWORD *)(v13 + 32) = 0u;
    *(_OWORD *)(v13 + 48) = 0u;
    *(_BYTE *)(v13 + 64) = 3;
    swift_willThrow();
    sub_1C07B1F90(v0, (uint64_t (*)(_QWORD))type metadata accessor for ViewDatabaseArtifact.Property);
    sub_1C077866C();
    swift_release();
  }
  else
  {
    swift_bridgeObjectRelease();
    v11 = MEMORY[0x1E0DEE9D8];
LABEL_12:
    if (*(_QWORD *)(v11 + 16))
    {
      sub_1C077F3D4();
      swift_bridgeObjectRetain_n();
      sub_1C078FA04();
      __asm { BR              X9 }
    }
    sub_1C077AE90();
    swift_bridgeObjectRelease();
    v15 = sub_1C106C154();
    *(_QWORD *)v17 = v11;
    *(_BYTE *)(v17 + 8) = 0;
    *(_BYTE *)(v17 + 9) = 0;
    *(_BYTE *)(v17 + 10) = 0;
    *(_BYTE *)(v17 + 11) = 0;
    *(_BYTE *)(v17 + 12) = 0;
    *(_BYTE *)(v17 + 13) = 0;
    *(_BYTE *)(v17 + 14) = 0;
    *(_BYTE *)(v17 + 15) = 0;
    *(_BYTE *)(v17 + 16) = 0;
    *(_QWORD *)(v17 + 24) = v15;
    *(_QWORD *)(v17 + 32) = v16;
  }
  sub_1C07757D0();
}

void sub_1C0D77114()
{
  sub_1C0782990();
  swift_bridgeObjectRelease();
  JUMPOUT(0x1C0D7699CLL);
}

void sub_1C0D77124()
{
  sub_1C0782990();
  swift_bridgeObjectRelease();
  JUMPOUT(0x1C0D76A6CLL);
}

void sub_1C0D77138()
{
  sub_1C0782990();
  sub_1C07ABD0C();
  swift_bridgeObjectRelease();
  JUMPOUT(0x1C0D76B50);
}

void sub_1C0D77150()
{
  uint64_t v0;

  sub_1C0782990();
  swift_bridgeObjectRelease();
  *(_DWORD *)(v0 - 124) = 1;
  JUMPOUT(0x1C0D76C50);
}

void sub_1C0D77174()
{
  sub_1C0782990();
  swift_bridgeObjectRelease();
  JUMPOUT(0x1C0D76D14);
}

void sub_1C0D77184()
{
  sub_1C0782990();
  swift_bridgeObjectRelease();
  JUMPOUT(0x1C0D76DE8);
}

void sub_1C0D77194()
{
  sub_1C0782990();
  swift_bridgeObjectRelease();
  JUMPOUT(0x1C0D76EB8);
}

void sub_1C0D771A8()
{
  sub_1C0782990();
  swift_bridgeObjectRelease();
  JUMPOUT(0x1C0D76FA8);
}

void sub_1C0D771BC()
{
  sub_1C0782990();
  swift_bridgeObjectRelease();
  JUMPOUT(0x1C0D77090);
}

void sub_1C0D77334(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  char *v42;
  uint64_t *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;

  v3 = v2;
  v6 = sub_1C07ACF80(&qword_1ED761500);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1C07ACF80((uint64_t *)&unk_1ED75E9F0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for ViewDatabaseArtifact.Property();
  MEMORY[0x1E0C80A78](v12);
  v43 = (uint64_t *)((char *)&v37 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v14);
  v18 = (char *)&v37 - v17;
  v19 = *(_QWORD *)(a2 + 32);
  v47 = v19;
  v20 = *(_QWORD *)(v19 + 16);
  if (v20)
  {
    v40 = v8;
    v41 = v3;
    v42 = &v18[*(int *)(v15 + 20)];
    v21 = v19 + ((*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80));
    v44 = *(_QWORD *)(v16 + 72);
    v39 = v19;
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    v22 = v21;
    v38 = v20;
    v23 = v20;
    v45 = a1;
    do
    {
      sub_1C083F944(v22, (uint64_t)v18, (uint64_t (*)(_QWORD))type metadata accessor for ViewDatabaseArtifact.Property);
      v24 = sub_1C106C55C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 16))(v11, v42, v24);
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      sub_1C07B1F90((uint64_t)v18, (uint64_t (*)(_QWORD))type metadata accessor for ViewDatabaseArtifact.Property);
      sub_1C07B2D8C((uint64_t)v11, 0, 1, v24);
      sub_1C106BE3C();
      swift_release();
      swift_bridgeObjectRelease();
      sub_1C0784B6C((uint64_t)v11, (uint64_t *)&unk_1ED75E9F0);
      v22 += v44;
      --v23;
    }
    while (v23);
    v25 = v44;
    sub_1C08EE9A0((uint64_t)&v47);
    v46 = MEMORY[0x1E0DEE9D8];
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    v26 = v38;
    sub_1C09D30E0();
    v27 = v46;
    do
    {
      v28 = v43;
      sub_1C083F944(v21, (uint64_t)v43, (uint64_t (*)(_QWORD))type metadata accessor for ViewDatabaseArtifact.Property);
      v30 = *v28;
      v29 = v28[1];
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      sub_1C07B1F90((uint64_t)v28, (uint64_t (*)(_QWORD))type metadata accessor for ViewDatabaseArtifact.Property);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1C09D30E0();
        v27 = v46;
      }
      v31 = *(_QWORD *)(v27 + 16);
      v32 = v27;
      v33 = v25;
      if (v31 >= *(_QWORD *)(v27 + 24) >> 1)
      {
        sub_1C09D30E0();
        v33 = v25;
        v32 = v46;
      }
      *(_QWORD *)(v32 + 16) = v31 + 1;
      v34 = v32 + 16 * v31;
      *(_QWORD *)(v34 + 32) = v30;
      *(_QWORD *)(v34 + 40) = v29;
      v21 += v33;
      --v26;
      v27 = v32;
    }
    while (v26);
    sub_1C08EE9A0((uint64_t)&v47);
    v8 = v40;
  }
  v35 = *MEMORY[0x1E0D247F8];
  v36 = sub_1C106C604();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 104))(v8, v35, v36);
  sub_1C07B2D8C((uint64_t)v8, 0, 1, v36);
  sub_1C106BE24();
  swift_bridgeObjectRelease();
  sub_1C0784B6C((uint64_t)v8, &qword_1ED761500);
}

void sub_1C0D776BC()
{
  _BYTE *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _OWORD v9[2];
  uint64_t v10;
  __int128 v11;
  uint64_t v12;

  v2 = sub_1C106C448();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((v0[24] & 1) == 0)
    goto LABEL_3;
  *(_QWORD *)&v9[0] = 0;
  *((_QWORD *)&v9[0] + 1) = 0xE000000000000000;
  sub_1C1070774();
  v12 = v2;
  v6 = *(_QWORD *)v0;
  v7 = *((_QWORD *)v0 + 1);
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  swift_bridgeObjectRelease();
  *(_QWORD *)&v9[0] = v6;
  *((_QWORD *)&v9[0] + 1) = v7;
  sub_1C106FC94();
  v10 = 0;
  memset(v9, 0, sizeof(v9));
  v2 = v12;
  sub_1C106C658();
  sub_1C0784B6C((uint64_t)v9, (uint64_t *)&unk_1ED7626B0);
  swift_bridgeObjectRelease();
  if (!v1)
  {
LABEL_3:
    if ((v0[25] & 1) != 0)
    {
      v11 = *(_OWORD *)v0;
      v9[0] = v11;
      sub_1C07B35DC((uint64_t)&v11);
      sub_1C106FC94();
      sub_1C106C43C();
      v8 = swift_allocObject();
      memcpy((void *)(v8 + 16), v0, 0x60uLL);
      sub_1C0D01A5C((uint64_t)v0);
      sub_1C106C64C();
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      swift_bridgeObjectRelease();
      swift_release();
    }
  }
}

uint64_t sub_1C0D778E0()
{
  sub_1C106C088();
  sub_1C106C094();
  swift_release();
  sub_1C106C094();
  sub_1C106C0E8();
  swift_release();
  swift_release();
  sub_1C106C094();
  sub_1C106C0E8();
  swift_release();
  return swift_release();
}

void sub_1C0D77990()
{
  uint64_t v0;

  sub_1C106C67C();
  if (!v0)
    sub_1C0D776BC();
}

void sub_1C0D779EC()
{
  uint64_t v0;

  sub_1C077FF50((uint64_t)sub_1C0D7BA4C, (uint64_t)&v0);
}

uint64_t sub_1C0D77A2C()
{
  uint64_t v0;
  uint64_t v1;

  v0 = sub_1C106C040();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  sub_1C0778544();
  sub_1C077AEBC();
  sub_1C106FC94();
  sub_1C077B5B4();
  sub_1C106C034();
  sub_1C106C694();
  sub_1C078C76C(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  return sub_1C077B5B4();
}

uint64_t sub_1C0D77B0C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t i;
  char v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  char *v61;
  char *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;
  _QWORD v78[5];
  _OWORD v79[2];
  uint64_t v80;
  _QWORD __dst[20];

  v69 = a1;
  v2 = v1;
  v3 = sub_1C07ACF80(&qword_1ED7626C0);
  MEMORY[0x1E0C80A78](v3);
  v67 = (char *)&v59 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v66 = (char *)&v59 - v6;
  v7 = sub_1C07ACF80((uint64_t *)&unk_1ED75EA40);
  MEMORY[0x1E0C80A78](v7);
  v63 = (char *)&v59 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v62 = (char *)&v59 - v10;
  v11 = sub_1C106E590();
  v64 = *(_QWORD *)(v11 - 8);
  v65 = v11;
  MEMORY[0x1E0C80A78](v11);
  v61 = (char *)&v59 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v60 = (char *)&v59 - v14;
  v72 = 0;
  v73 = 0xE000000000000000;
  sub_1C1070774();
  sub_1C106FC94();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C106FC94();
  swift_bridgeObjectRelease();
  sub_1C106FC94();
  v76 = v72;
  v77 = v73;
  v72 = 0;
  v73 = 0xE000000000000000;
  sub_1C1070774();
  swift_bridgeObjectRelease();
  v72 = 0xD000000000000018;
  v73 = 0x80000001C110ACE0;
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C106FC94();
  swift_bridgeObjectRelease();
  sub_1C106FC94();
  v15 = *(_OWORD *)(v1 + 56);
  v79[0] = *(_OWORD *)(v1 + 40);
  v79[1] = v15;
  v80 = *(_QWORD *)(v1 + 72);
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C106FC94();
  swift_bridgeObjectRelease();
  sub_1C106FC94();
  sub_1C07EC924();
  v17 = v16;
  v18 = *(_QWORD *)(v16 + 16);
  if (v18 >= *(_QWORD *)(v16 + 24) >> 1)
  {
    sub_1C07EC924();
    v17 = v54;
  }
  *(_QWORD *)(v17 + 16) = v18 + 1;
  *(_BYTE *)(v17 + v18 + 32) = 0;
  if ((BYTE9(v79[0]) & 1) != 0)
  {
    sub_1C106FC94();
    v19 = *(_QWORD *)(v17 + 16);
    if (v19 >= *(_QWORD *)(v17 + 24) >> 1)
    {
      sub_1C07EC924();
      v17 = v55;
    }
    *(_QWORD *)(v17 + 16) = v19 + 1;
    *(_BYTE *)(v17 + v19 + 32) = 1;
  }
  if ((BYTE10(v79[0]) & 1) != 0)
  {
    sub_1C106FC94();
    v20 = *(_QWORD *)(v17 + 16);
    if (v20 >= *(_QWORD *)(v17 + 24) >> 1)
    {
      sub_1C07EC924();
      v17 = v56;
    }
    *(_QWORD *)(v17 + 16) = v20 + 1;
    *(_BYTE *)(v17 + v20 + 32) = 2;
  }
  if ((BYTE11(v79[0]) & 1) != 0)
  {
    sub_1C106FC94();
    v21 = *(_QWORD *)(v17 + 16);
    if (v21 >= *(_QWORD *)(v17 + 24) >> 1)
    {
      sub_1C07EC924();
      v17 = v57;
    }
    *(_QWORD *)(v17 + 16) = v21 + 1;
    *(_BYTE *)(v17 + v21 + 32) = 3;
  }
  if ((BYTE12(v79[0]) & 1) != 0)
  {
    sub_1C106FC94();
    v22 = *(_QWORD *)(v17 + 16);
    if (v22 >= *(_QWORD *)(v17 + 24) >> 1)
    {
      sub_1C07EC924();
      v17 = v58;
    }
    *(_QWORD *)(v17 + 16) = v22 + 1;
    *(_BYTE *)(v17 + v22 + 32) = 4;
  }
  v23 = v68;
  v24 = sub_1C106C5C8();
  if (v23)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  v68 = v24;
  swift_bridgeObjectRelease();
  v26 = sub_1C106C5C8();
  swift_bridgeObjectRelease();
  sub_1C0D759EC(v17, (uint64_t)v78);
  v27 = v69;
  v28 = *(_QWORD *)(v69 + 16);
  if (v28)
  {
    v59 = v26;
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    for (i = 32; ; i += 152)
    {
      memcpy(__dst, (const void *)(v27 + i), 0x92uLL);
      v30 = BYTE1(__dst[18]);
      v31 = *(_BYTE *)(v2 + 26);
      sub_1C083514C((uint64_t)__dst);
      if ((v30 & 1) != 0)
      {
        if ((v31 & 1) == 0 || (sub_1C106FC1C() & 1) == 0)
        {
          sub_1C083514C((uint64_t)__dst);
          sub_1C0AC142C((uint64_t)v78);
          v45 = _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
          v46 = sub_1C0D7581C(v45, (uint64_t)v78, (uint64_t)__dst);
          swift_bridgeObjectRelease();
          goto LABEL_35;
        }
        _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
        v32 = (uint64_t)v62;
        sub_1C106E59C();
        v42 = v65;
        if (sub_1C07B2D80(v32, 1, v65) != 1)
        {
          v47 = v64;
          v48 = v60;
          (*(void (**)(char *, uint64_t, uint64_t))(v64 + 32))(v60, v32, v42);
          v74 = v42;
          sub_1C0794BAC((unint64_t *)&qword_1ED7551C0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3CE28], MEMORY[0x1E0D3CDE8]);
          v75 = v49;
          v50 = sub_1C079DFC4(&v72);
          v51 = (*(uint64_t (**)(uint64_t *, char *, uint64_t))(v47 + 16))(v50, v48, v42);
          v52 = v78[0];
          MEMORY[0x1E0C80A78](v51);
          *(&v59 - 4) = (uint64_t)&v72;
          *(&v59 - 3) = (uint64_t)v78;
          *(&v59 - 2) = (uint64_t)__dst;
          _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
          v53 = v42;
          v46 = sub_1C082A468(sub_1C0D7D030, &v59 - 6, v52, &v70);
          swift_bridgeObjectRelease();
          _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)&v72);
          (*(void (**)(char *, uint64_t))(v64 + 8))(v60, v53);
LABEL_35:
          sub_1C08351C0((uint64_t)__dst);
          sub_1C0A57D98(v46);
          swift_bridgeObjectRelease();
          v44 = (uint64_t)v66;
          sub_1C106C058();
LABEL_36:
          sub_1C106C718();
          sub_1C0784B6C(v44, &qword_1ED7626C0);
          goto LABEL_37;
        }
      }
      else
      {
        if ((v31 & 1) == 0 || (sub_1C106FC1C() & 1) == 0)
        {
          sub_1C083514C((uint64_t)__dst);
          sub_1C0AC142C((uint64_t)v79);
          v43 = _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
          v41 = sub_1C0D7581C(v43, (uint64_t)v79, (uint64_t)__dst);
          swift_bridgeObjectRelease();
          goto LABEL_33;
        }
        _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
        v32 = (uint64_t)v63;
        sub_1C106E59C();
        v33 = v65;
        if (sub_1C07B2D80(v32, 1, v65) != 1)
        {
          v34 = v64;
          v35 = v61;
          (*(void (**)(char *, uint64_t, uint64_t))(v64 + 32))(v61, v32, v33);
          v74 = v33;
          sub_1C0794BAC((unint64_t *)&qword_1ED7551C0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3CE28], MEMORY[0x1E0D3CDE8]);
          v75 = v36;
          v37 = sub_1C079DFC4(&v72);
          v38 = (*(uint64_t (**)(uint64_t *, char *, uint64_t))(v34 + 16))(v37, v35, v33);
          v39 = *(_QWORD *)&v79[0];
          MEMORY[0x1E0C80A78](v38);
          *(&v59 - 4) = (uint64_t)&v72;
          *(&v59 - 3) = (uint64_t)v79;
          *(&v59 - 2) = (uint64_t)__dst;
          _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
          v40 = v33;
          v41 = sub_1C082A468(sub_1C0D7BAE0, &v59 - 6, v39, &v71);
          swift_bridgeObjectRelease();
          _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)&v72);
          (*(void (**)(char *, uint64_t))(v64 + 8))(v61, v40);
LABEL_33:
          sub_1C08351C0((uint64_t)__dst);
          sub_1C0A57D98(v41);
          swift_bridgeObjectRelease();
          v44 = (uint64_t)v67;
          sub_1C106C058();
          goto LABEL_36;
        }
      }
      sub_1C0784B6C(v32, (uint64_t *)&unk_1ED75EA40);
      sub_1C08351C0((uint64_t)__dst);
LABEL_37:
      v27 = v69;
      if (!--v28)
      {
        swift_release();
        swift_release();
        swift_bridgeObjectRelease();
        return sub_1C0AC13F8((uint64_t)v78);
      }
    }
  }
  swift_release();
  swift_release();
  return sub_1C0AC13F8((uint64_t)v78);
}

uint64_t sub_1C0D7849C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t))
{
  uint64_t v4;
  uint64_t result;

  result = sub_1C0D77B0C(a3);
  if (!v4)
  {
    if (a4)
      return a4(a1);
  }
  return result;
}

void sub_1C0D784EC()
{
  uint64_t v0;
  void (*v1)(uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t);

  sub_1C077AE5C();
  v7 = v1;
  v3 = v2;
  v4 = sub_1C106C040();
  MEMORY[0x1E0C80A78](v4);
  sub_1C0778544();
  sub_1C1070774();
  sub_1C077866C();
  sub_1C077C0B8();
  sub_1C106FC94();
  swift_bridgeObjectRelease();
  sub_1C106C034();
  sub_1C106C694();
  if (v0)
  {
    sub_1C07AF078();
    sub_1C0775894();
  }
  else
  {
    sub_1C07AF078();
    v5 = sub_1C0775894();
    MEMORY[0x1E0C80A78](v5);
    sub_1C106C67C();
    while (1)
    {
      v6 = sub_1C0775C68();
      if (!*(_QWORD *)(v6 + 16))
        break;
      sub_1C0D77B0C(v6);
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    sub_1C0D776BC();
    if (v7)
      v7(v3);
  }
  sub_1C07757D0();
}

void sub_1C0D786DC()
{
  const void *v0;
  _BYTE v1[96];

  memcpy(v1, v0, sizeof(v1));
  sub_1C0D779EC();
}

uint64_t sub_1C0D78714()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 80);
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  return v1;
}

uint64_t sub_1C0D78740@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t *a7@<X6>, uint64_t *a8@<X7>, uint64_t a9@<X8>, double a10@<D0>, double a11@<D1>)
{
  uint64_t v19;
  int *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(uint64_t, uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t result;
  _QWORD *v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;

  v19 = *a7;
  v32 = *a8;
  v31 = a8[1];
  v20 = (int *)sub_1C07AD3A0();
  *(_OWORD *)a9 = 0u;
  *(_OWORD *)(a9 + 16) = 0u;
  *(_QWORD *)(a9 + 32) = 0;
  v21 = a9 + v20[5];
  v22 = sub_1C078784C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v21, a1, v22);
  v23 = a9 + v20[6];
  v24 = sub_1C0779688();
  v25 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 32);
  v25(v23, a2, v24);
  v26 = a9 + v20[7];
  v27 = sub_1C077D8EC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 32))(v26, a3, v27);
  result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v25)(a9 + v20[8], a4, v24);
  v29 = (_QWORD *)(a9 + v20[9]);
  *v29 = a5;
  v29[1] = a6;
  *(_QWORD *)(a9 + v20[10]) = v19;
  *(double *)(a9 + v20[11]) = a10;
  v30 = (_QWORD *)(a9 + v20[12]);
  *v30 = v32;
  v30[1] = v31;
  *(double *)(a9 + v20[13]) = a11;
  return result;
}

uint64_t sub_1C0D78890(uint64_t a1, uint64_t a2)
{
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v4 = (int *)sub_1C07AD3A0();
  v5 = v4[5];
  v6 = v4[6];
  v23 = a1 + v5;
  v24 = a1 + v6;
  v7 = v4[7];
  v8 = v4[8];
  v9 = a1 + v7;
  v10 = a1 + v8;
  v11 = v4[9];
  v12 = a1 + v11;
  v13 = *(_QWORD *)(a1 + v11);
  v14 = *(_QWORD *)(v12 + 8);
  v15 = a2 + v5;
  v16 = a2 + v6;
  v17 = a2 + v7;
  v18 = a2 + v8;
  v20 = *(_QWORD *)(a2 + v11);
  v19 = *(_QWORD *)(a2 + v11 + 8);
  sub_1C077C0B8();
  sub_1C07767B4();
  sub_1C0F1E718(v23, v24, v9, v10, v13, v14, v15, v16, v17, v18, v20, v19, v23, v24, v25, v26, v27, v28, v29,
    v30,
    v31,
    v32,
    v33,
    v34);
  LOBYTE(v13) = v21;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v13 & 1;
}

uint64_t sub_1C0D78968()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  if (*v0)
  {
    sub_1C1070E10();
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    sub_1C077AEBC();
    sub_1C0D7A434();
    sub_1C0D7CDD4(v1);
  }
  else
  {
    sub_1C1070E10();
  }
  sub_1C07AD3A0();
  sub_1C078784C();
  sub_1C0794BAC((unint64_t *)&qword_1ED7618F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3CE28], MEMORY[0x1E0D3CE40]);
  sub_1C106FA0C();
  sub_1C0779688();
  sub_1C0794BAC(&qword_1ED75EA28, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3CC50], MEMORY[0x1E0D3CC68]);
  sub_1C078D6D0();
  sub_1C077D8EC();
  sub_1C0794BAC(&qword_1ED761910, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3D450], MEMORY[0x1E0D3D468]);
  sub_1C106FA0C();
  sub_1C078D6D0();
  sub_1C077AEBC();
  sub_1C077D1EC();
  swift_bridgeObjectRelease();
  sub_1C1070E04();
  sub_1C1070E34();
  sub_1C077AEBC();
  sub_1C077D1EC();
  swift_bridgeObjectRelease();
  return sub_1C1070E34();
}

BOOL sub_1C0D78B9C(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64x2_t v14;
  int16x8_t v15;
  uint64x2_t v16;
  int16x8_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int *v22;
  uint64_t v23;
  uint64_t v24;
  BOOL v25;
  char v26;
  _BOOL8 result;
  uint64_t v28;
  uint64_t v29;
  char v31;
  char v32;
  uint64_t v33;
  char v34;
  unsigned __int32 v35;
  char v36;
  char v37;
  char v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  unsigned __int32 v44;
  char v45;
  char v46;
  char v47;
  char v48;
  uint64_t v49;
  uint64_t v50;

  v4 = *a1;
  v5 = a1[1];
  v7 = a1[2];
  v6 = a1[3];
  v8 = a1[4];
  v9 = *a2;
  v10 = a2[1];
  v11 = a2[2];
  v12 = a2[3];
  v13 = a2[4];
  if (!*a1)
  {
    if (!v9)
      goto LABEL_7;
LABEL_6:
    sub_1C0D7CE78(*a1);
    v20 = sub_1C078E254();
    sub_1C0D7CE78(v20);
    sub_1C0D7CDD4(v4);
    v21 = sub_1C078E254();
    sub_1C0D7CDD4(v21);
    return 0;
  }
  if (!v9)
    goto LABEL_6;
  v33 = *a1;
  v34 = v5 & 1;
  v14 = (uint64x2_t)vdupq_n_s64(v5);
  v15 = (int16x8_t)vuzp1q_s32((int32x4_t)vshlq_u64(v14, (uint64x2_t)xmmword_1C1091CF0), (int32x4_t)vshlq_u64(v14, (uint64x2_t)xmmword_1C1091CE0));
  *(int8x8_t *)v15.i8 = vand_s8((int8x8_t)vmovn_s32((int32x4_t)v15), (int8x8_t)0x1000100010001);
  v35 = vmovn_s16(v15).u32[0];
  v36 = BYTE5(v5) & 1;
  v37 = BYTE6(v5) & 1;
  v38 = HIBYTE(v5) & 1;
  v39 = v7 & 1;
  v40 = v6;
  v41 = v8;
  v42 = v9;
  v16 = (uint64x2_t)vdupq_n_s64(v10);
  v43 = v10 & 1;
  v17 = (int16x8_t)vuzp1q_s32((int32x4_t)vshlq_u64(v16, (uint64x2_t)xmmword_1C1091CF0), (int32x4_t)vshlq_u64(v16, (uint64x2_t)xmmword_1C1091CE0));
  *(int8x8_t *)v17.i8 = vand_s8((int8x8_t)vmovn_s32((int32x4_t)v17), (int8x8_t)0x1000100010001);
  v44 = vmovn_s16(v17).u32[0];
  v45 = BYTE5(v10) & 1;
  v46 = BYTE6(v10) & 1;
  v47 = HIBYTE(v10) & 1;
  v48 = v11 & 1;
  v49 = v12;
  v50 = v13;
  sub_1C0D7CE78(v4);
  v18 = sub_1C077BA08();
  sub_1C0D7CE78(v18);
  v32 = sub_1C0D7A4E0((uint64_t)&v33, (uint64_t)&v42);
  v19 = sub_1C077BA08();
  sub_1C0D7CDD4(v19);
  sub_1C0D7CDD4(v4);
  if ((v32 & 1) == 0)
    return 0;
LABEL_7:
  v22 = (int *)sub_1C07AD3A0();
  if ((sub_1C106E560() & 1) == 0
    || (sub_1C077D1FC(v22[6]) & 1) == 0
    || (sub_1C106EB00() & 1) == 0
    || (sub_1C077D1FC(v22[8]) & 1) == 0)
  {
    return 0;
  }
  sub_1C078A79C(v22[9]);
  v25 = v25 && v23 == v24;
  if (v25 || (v26 = sub_1C07785B0(), result = 0, (v26 & 1) != 0))
  {
    if (*(uint64_t *)((char *)a1 + v22[10]) != *(uint64_t *)((char *)a2 + v22[10])
      || *(double *)((char *)a1 + v22[11]) != *(double *)((char *)a2 + v22[11]))
    {
      return 0;
    }
    sub_1C078A79C(v22[12]);
    if (v25 && v28 == v29)
      return *(double *)((char *)a1 + v22[13]) == *(double *)((char *)a2 + v22[13]);
    v31 = sub_1C07785B0();
    result = 0;
    if ((v31 & 1) != 0)
      return *(double *)((char *)a1 + v22[13]) == *(double *)((char *)a2 + v22[13]);
  }
  return result;
}

uint64_t sub_1C0D78E40(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  BOOL v7;
  BOOL v8;
  BOOL v9;
  BOOL v10;
  BOOL v11;
  char v13;

  v2 = a1 == 0x6870617267627573 && a2 == 0xEF736E6D756C6F43;
  if (v2 || (sub_1C1070CB4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x7463656A627573 && a2 == 0xE700000000000000;
    if (v6 || (sub_1C1070CB4() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      v7 = a1 == 0x7461636964657270 && a2 == 0xE900000000000065;
      if (v7 || (sub_1C1070CB4() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else
      {
        v8 = a1 == 0x6E6F6974616C6572 && a2 == 0xEE00644970696873;
        if (v8 || (sub_1C1070CB4() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 3;
        }
        else if (a1 == 0xD000000000000015 && a2 == 0x80000001C10DE890 || (sub_1C1070CB4() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 4;
        }
        else
        {
          v9 = a1 == 0x7463656A626FLL && a2 == 0xE600000000000000;
          if (v9 || (sub_1C1070CB4() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 5;
          }
          else
          {
            v10 = a1 == 0x73656372756F73 && a2 == 0xE700000000000000;
            if (v10 || (sub_1C1070CB4() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 6;
            }
            else
            {
              v11 = a1 == 0x6E656469666E6F63 && a2 == 0xEA00000000006563;
              if (v11 || (sub_1C1070CB4() & 1) != 0)
              {
                swift_bridgeObjectRelease();
                return 7;
              }
              else if (a1 == 0xD000000000000010 && a2 == 0x80000001C10DE8C0 || (sub_1C1070CB4() & 1) != 0)
              {
                swift_bridgeObjectRelease();
                return 8;
              }
              else if (a1 == 0x6D617473656D6974 && a2 == 0xE900000000000070)
              {
                swift_bridgeObjectRelease();
                return 9;
              }
              else
              {
                v13 = sub_1C1070CB4();
                swift_bridgeObjectRelease();
                if ((v13 & 1) != 0)
                  return 9;
                else
                  return 10;
              }
            }
          }
        }
      }
    }
  }
}

uint64_t sub_1C0D7927C(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1C0D792BC + 4 * byte_1C10BA7B9[a1]))(0x6870617267627573, 0xEF736E6D756C6F43);
}

uint64_t sub_1C0D792BC()
{
  return 0x7463656A627573;
}

uint64_t sub_1C0D792D4()
{
  return 0x7461636964657270;
}

uint64_t sub_1C0D792F0()
{
  return 0x6E6F6974616C6572;
}

unint64_t sub_1C0D79314()
{
  return 0xD000000000000015;
}

uint64_t sub_1C0D79338()
{
  return 0x7463656A626FLL;
}

uint64_t sub_1C0D7934C()
{
  return 0x73656372756F73;
}

uint64_t sub_1C0D79364()
{
  return 0x6E656469666E6F63;
}

unint64_t sub_1C0D79380()
{
  return 0xD000000000000010;
}

uint64_t sub_1C0D7939C()
{
  return 0x6D617473656D6974;
}

void sub_1C0D793BC()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;

  sub_1C077AE5C();
  v3 = v2;
  sub_1C07ACF80(&qword_1EF648E10);
  sub_1C077591C();
  MEMORY[0x1E0C80A78](v4);
  sub_1C07A9480(v3, v3[3]);
  sub_1C0D7CD98();
  sub_1C078D65C();
  sub_1C0D7CE3C();
  sub_1C1070B64();
  if (!v0)
  {
    type metadata accessor for SubgraphDatabaseTable.SubgraphComparableTriple();
    sub_1C106E590();
    sub_1C0794BAC(&qword_1ED759FB8, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3CE28], MEMORY[0x1E0D3CE38]);
    sub_1C0781858();
    sub_1C077F744();
    sub_1C106E41C();
    sub_1C0794BAC(&qword_1ED7606D0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3CC50], MEMORY[0x1E0D3CC60]);
    sub_1C0781858();
    sub_1C077F744();
    sub_1C106EB24();
    sub_1C0794BAC(&qword_1ED759FC8, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3D450], MEMORY[0x1E0D3D460]);
    sub_1C077F744();
    sub_1C077F744();
    sub_1C077C330();
    sub_1C0A0F550();
    sub_1C077F744();
    sub_1C07AAAD4(7);
    sub_1C0A9DD3C();
    sub_1C077F744();
    sub_1C07AAAD4(9);
  }
  sub_1C078C76C(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  sub_1C07757D0();
}

void sub_1C0D79694()
{
  sub_1C077C06C();
  sub_1C0D78968();
  sub_1C077AE74();
  sub_1C0775804();
}

void sub_1C0D796BC(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  __int128 v26;
  _OWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(char *, char *, uint64_t);
  char *v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void (*v47)(char *, char *, uint64_t);
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  _OWORD *v59;
  int *v60;
  char v61;
  __int128 v62;
  __int128 v63;
  uint64_t v64;

  v48 = a2;
  v5 = sub_1C106EB24();
  v51 = *(_QWORD *)(v5 - 8);
  v52 = v5;
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v6);
  sub_1C0778564();
  v9 = v8 - v7;
  v10 = sub_1C106E41C();
  v57 = *(_QWORD *)(v10 - 8);
  v58 = v10;
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v46 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v46 - v15;
  v17 = sub_1C106E590();
  v53 = *(_QWORD *)(v17 - 8);
  v54 = v17;
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v18);
  sub_1C07795DC();
  v50 = sub_1C07ACF80(&qword_1EF648DF8);
  MEMORY[0x1E0C80A78](v50);
  sub_1C0778544();
  v60 = (int *)type metadata accessor for SubgraphDatabaseTable.SubgraphComparableTriple();
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v19);
  sub_1C0778564();
  v59 = (_OWORD *)(v21 - v20);
  v22 = a1[3];
  v55 = a1;
  sub_1C07A9480(a1, v22);
  sub_1C0D7CD98();
  v49 = v2;
  v23 = v56;
  sub_1C1070E94();
  if (v23)
  {
    sub_1C0780C74();
  }
  else
  {
    v24 = v16;
    v56 = v13;
    v61 = 0;
    sub_1C0D7CE00();
    sub_1C1070A8C();
    v25 = v64;
    v26 = v63;
    v27 = v59;
    *v59 = v62;
    v27[1] = v26;
    *((_QWORD *)v27 + 4) = v25;
    LOBYTE(v62) = 1;
    sub_1C0794BAC((unint64_t *)&unk_1ED761900, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3CE28], MEMORY[0x1E0D3CE58]);
    v28 = v3;
    v29 = v54;
    sub_1C07A869C();
    (*(void (**)(char *, uint64_t, uint64_t))(v53 + 32))((char *)v27 + v60[5], v28, v29);
    LOBYTE(v62) = 2;
    sub_1C0794BAC((unint64_t *)&qword_1ED7618D8, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3CC50], MEMORY[0x1E0D3CC88]);
    v30 = v58;
    sub_1C07A869C();
    v31 = (char *)v59;
    v32 = (char *)v59 + v60[6];
    v47 = *(void (**)(char *, char *, uint64_t))(v57 + 32);
    v47(v32, v24, v30);
    LOBYTE(v62) = 3;
    sub_1C0794BAC(&qword_1ED761918, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3D450], MEMORY[0x1E0D3D480]);
    v33 = v9;
    v34 = v52;
    sub_1C0781EE0();
    v35 = v47;
    (*(void (**)(char *, uint64_t, uint64_t))(v51 + 32))(&v31[v60[7]], v33, v34);
    LOBYTE(v62) = 4;
    v36 = v56;
    sub_1C0781EE0();
    v35(&v31[v60[8]], v36, v30);
    LOBYTE(v62) = 5;
    v37 = sub_1C1070AA4();
    v38 = (uint64_t *)&v31[v60[9]];
    *v38 = v37;
    v38[1] = v39;
    v61 = 6;
    sub_1C0A0F608();
    sub_1C07B018C();
    sub_1C07A869C();
    *(_QWORD *)&v31[v60[10]] = v62;
    LOBYTE(v62) = 7;
    sub_1C1070ABC();
    *(_QWORD *)&v31[v60[11]] = v40;
    v61 = 8;
    sub_1C0A9DD78();
    sub_1C07B018C();
    sub_1C0781EE0();
    v41 = *((_QWORD *)&v62 + 1);
    v42 = &v31[v60[12]];
    *(_QWORD *)v42 = v62;
    *((_QWORD *)v42 + 1) = v41;
    LOBYTE(v62) = 9;
    sub_1C1070ABC();
    v44 = v43;
    sub_1C07A60E0();
    v45 = (uint64_t)v59;
    *(_QWORD *)((char *)v59 + v60[13]) = v44;
    sub_1C083F944(v45, v48, (uint64_t (*)(_QWORD))type metadata accessor for SubgraphDatabaseTable.SubgraphComparableTriple);
    sub_1C0780C74();
    sub_1C07B1F90(v45, (uint64_t (*)(_QWORD))type metadata accessor for SubgraphDatabaseTable.SubgraphComparableTriple);
  }
}

uint64_t sub_1C0D79D04()
{
  unsigned __int8 *v0;

  return sub_1C0D7927C(*v0);
}

uint64_t sub_1C0D79D0C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1C0D78E40(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C0D79D30()
{
  sub_1C0D7CD98();
  return sub_1C1070EE8();
}

uint64_t sub_1C0D79D58()
{
  sub_1C0D7CD98();
  return sub_1C1070EF4();
}

double sub_1C0D79D80(uint64_t a1)
{
  uint64_t v1;

  return *(double *)(v1 + *(int *)(a1 + 44));
}

uint64_t sub_1C0D79D8C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;

  v3 = (_QWORD *)(v2 + *(int *)(a1 + 48));
  v4 = v3[1];
  *a2 = *v3;
  a2[1] = v4;
  return _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
}

uint64_t sub_1C0D79DA0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t *a7@<X6>, uint64_t *a8@<X7>, uint64_t a9@<X8>, double a10@<D0>, double a11@<D1>)
{
  uint64_t v12;

  v12 = *a7;
  return sub_1C0D78740(a1, a2, a3, a4, a5, a6, &v12, a8, a9, a10, a11);
}

void sub_1C0D79DC8(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1C0D796BC(a1, a2);
}

void sub_1C0D79DDC()
{
  sub_1C0D793BC();
}

uint64_t sub_1C0D79E00@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  *a2 = *(_QWORD *)(v2 + *(int *)(result + 40));
  return result;
}

double sub_1C0D79E10(uint64_t a1)
{
  uint64_t v1;

  return *(double *)(v1 + *(int *)(a1 + 52));
}

uint64_t sub_1C0D79E28()
{
  sub_1C1070DF8();
  sub_1C0D78968();
  return sub_1C1070E4C();
}

uint64_t sub_1C0D79E64()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  sub_1C078784C();
  v0 = sub_1C07759A0();
  return sub_1C077C20C(v0, v1, v2, v3);
}

uint64_t sub_1C0D79E8C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  sub_1C0779688();
  v0 = sub_1C07759A0();
  return sub_1C077C20C(v0, v1, v2, v3);
}

uint64_t sub_1C0D79EB4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  sub_1C077D8EC();
  v0 = sub_1C07759A0();
  return sub_1C077C20C(v0, v1, v2, v3);
}

uint64_t sub_1C0D79EDC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  sub_1C0779688();
  v0 = sub_1C07759A0();
  return sub_1C077C20C(v0, v1, v2, v3);
}

uint64_t sub_1C0D79F04(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + *(int *)(a1 + 36));
  sub_1C077AE90();
  return v2;
}

uint64_t sub_1C0D79F34()
{
  unint64_t v0;

  v0 = sub_1C1070A2C();
  swift_bridgeObjectRelease();
  if (v0 >= 9)
    return 9;
  else
    return v0;
}

uint64_t sub_1C0D79F7C()
{
  uint64_t v0;
  unsigned __int8 v1;

  v0 = sub_1C079B4D0();
  return ((uint64_t (*)(uint64_t))((char *)sub_1C0D79FAC + 4 * byte_1C10BA7C3[v1]))(v0);
}

uint64_t sub_1C0D79FAC()
{
  return sub_1C078FA04();
}

uint64_t sub_1C0D79FC4()
{
  return sub_1C07AE218();
}

unint64_t sub_1C0D79FE4()
{
  return 0xD000000000000015;
}

uint64_t sub_1C0D7A008()
{
  return sub_1C07883E8();
}

uint64_t sub_1C0D7A01C()
{
  return sub_1C07A401C();
}

uint64_t sub_1C0D7A02C()
{
  return sub_1C079A20C();
}

unint64_t sub_1C0D7A044()
{
  return 0xD000000000000010;
}

uint64_t sub_1C0D7A060()
{
  return sub_1C07991D8();
}

void sub_1C0D7A07C()
{
  unsigned __int8 *v0;

  sub_1C0A5414C(*v0);
}

void sub_1C0D7A084(uint64_t a1)
{
  unsigned __int8 *v1;

  sub_1C0A546D8(a1, *v1);
}

uint64_t sub_1C0D7A08C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1C0D79F34();
  *a1 = result;
  return result;
}

uint64_t sub_1C0D7A0B8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_1C0D79F7C();
  *a1 = result;
  a1[1] = v3;
  return result;
}

void sub_1C0D7A0E0(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E7A071E8;
}

uint64_t sub_1C0D7A0F0()
{
  sub_1C0D7CD5C();
  return sub_1C106FE8C();
}

uint64_t sub_1C0D7A14C()
{
  sub_1C0D7CD5C();
  return sub_1C106FE50();
}

uint64_t sub_1C0D7A198(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(void))((char *)sub_1C0D7A1B4 + 4 * byte_1C10BA7CC[a2]))();
}

uint64_t sub_1C0D7A1B4@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(result + 40);
  v3 = MEMORY[0x1E0D24A60];
  a2[3] = MEMORY[0x1E0DEDC60];
  a2[4] = v3;
  *a2 = v2;
  return result;
}

uint64_t sub_1C0D7A244@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(result + 112);
  v3 = MEMORY[0x1E0D249D0];
  a2[3] = MEMORY[0x1E0DEB070];
  a2[4] = v3;
  *a2 = v2;
  return result;
}

void sub_1C0D7A254()
{
  JUMPOUT(0x1C0D7A268);
}

void sub_1C0D7A274()
{
  JUMPOUT(0x1C0D7A280);
}

void sub_1C0D7A294(uint64_t a1)
{
  __asm { BR              X9 }
}

uint64_t sub_1C0D7A2F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unsigned __int8 v3;
  char v4;

  v4 = sub_1C1070CB4();
  swift_bridgeObjectRelease();
  if ((v4 & 1) != 0)
    return sub_1C07D6D1C(v1, v0);
  else
    return sub_1C0D7A198(v2, v3);
}

uint64_t sub_1C0D7A434()
{
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C0BF59A0();
  swift_bridgeObjectRelease();
  sub_1C07A2000();
  sub_1C07A2000();
  sub_1C07A2000();
  sub_1C07A2000();
  sub_1C07A2000();
  sub_1C07A2000();
  sub_1C07A2000();
  sub_1C07A2000();
  sub_1C07A2000();
  sub_1C07767B4();
  sub_1C106FC28();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C0D7A4E0(uint64_t a1, uint64_t a2)
{
  char v4;

  sub_1C0A30DF0();
  if ((v4 & 1) == 0
    || ((*(unsigned __int8 *)(a1 + 8) ^ *(unsigned __int8 *)(a2 + 8)) & 1) != 0
    || ((*(unsigned __int8 *)(a1 + 9) ^ *(unsigned __int8 *)(a2 + 9)) & 1) != 0
    || ((*(unsigned __int8 *)(a1 + 10) ^ *(unsigned __int8 *)(a2 + 10)) & 1) != 0
    || ((*(unsigned __int8 *)(a1 + 11) ^ *(unsigned __int8 *)(a2 + 11)) & 1) != 0
    || ((*(unsigned __int8 *)(a1 + 12) ^ *(unsigned __int8 *)(a2 + 12)) & 1) != 0
    || ((*(unsigned __int8 *)(a1 + 13) ^ *(unsigned __int8 *)(a2 + 13)) & 1) != 0
    || ((*(unsigned __int8 *)(a1 + 14) ^ *(unsigned __int8 *)(a2 + 14)) & 1) != 0
    || ((*(unsigned __int8 *)(a1 + 15) ^ *(unsigned __int8 *)(a2 + 15)) & 1) != 0
    || ((*(unsigned __int8 *)(a1 + 16) ^ *(unsigned __int8 *)(a2 + 16)) & 1) != 0)
  {
    return 0;
  }
  if (*(_QWORD *)(a1 + 24) == *(_QWORD *)(a2 + 24) && *(_QWORD *)(a1 + 32) == *(_QWORD *)(a2 + 32))
    return 1;
  else
    return sub_1C1070CB4();
}

uint64_t sub_1C0D7A5D0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  BOOL v7;
  BOOL v8;
  BOOL v9;
  BOOL v10;
  BOOL v11;
  char v13;

  v2 = a1 == 0x736E6D756C6F63 && a2 == 0xE700000000000000;
  if (v2 || (sub_1C1070CB4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x656A627553736168 && a2 == 0xEA00000000007463;
    if (v6 || (sub_1C1070CB4() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      v7 = a1 == 0x6964657250736168 && a2 == 0xEC00000065746163;
      if (v7 || (sub_1C1070CB4() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else if (a1 == 0xD000000000000011 && a2 == 0x80000001C110ADB0 || (sub_1C1070CB4() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 3;
      }
      else if (a1 == 0xD000000000000018 && a2 == 0x80000001C110ADD0 || (sub_1C1070CB4() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 4;
      }
      else
      {
        v8 = a1 == 0x63656A624F736168 && a2 == 0xE900000000000074;
        if (v8 || (sub_1C1070CB4() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 5;
        }
        else
        {
          v9 = a1 == 0x6372756F53736168 && a2 == 0xEA00000000007365;
          if (v9 || (sub_1C1070CB4() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 6;
          }
          else
          {
            v10 = a1 == 0x69666E6F43736168 && a2 == 0xED000065636E6564;
            if (v10 || (sub_1C1070CB4() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 7;
            }
            else if (a1 == 0xD000000000000013 && a2 == 0x80000001C110ADF0 || (sub_1C1070CB4() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 8;
            }
            else
            {
              v11 = a1 == 0x73656D6954736168 && a2 == 0xEC000000706D6174;
              if (v11 || (sub_1C1070CB4() & 1) != 0)
              {
                swift_bridgeObjectRelease();
                return 9;
              }
              else if (a1 == 0x7453747265736E69 && a2 == 0xEC000000676E6972)
              {
                swift_bridgeObjectRelease();
                return 10;
              }
              else
              {
                v13 = sub_1C1070CB4();
                swift_bridgeObjectRelease();
                if ((v13 & 1) != 0)
                  return 10;
                else
                  return 11;
              }
            }
          }
        }
      }
    }
  }
}

uint64_t sub_1C0D7AA90(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1C0D7AAC4 + 4 * byte_1C10BA7DE[a1]))(0x736E6D756C6F63, 0xE700000000000000);
}

uint64_t sub_1C0D7AAC4()
{
  return 0x656A627553736168;
}

uint64_t sub_1C0D7AAE4()
{
  return 0x6964657250736168;
}

unint64_t sub_1C0D7AB04()
{
  return 0xD000000000000011;
}

unint64_t sub_1C0D7AB20()
{
  return 0xD000000000000018;
}

uint64_t sub_1C0D7ABF4(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = sub_1C07ACF80(&qword_1EF648CC0);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  sub_1C07A9480(a1, a1[3]);
  sub_1C0D7BB00();
  sub_1C078D65C();
  sub_1C07ACF80(&qword_1EF648CA8);
  sub_1C0D7BB78(&qword_1EF648CC8, (uint64_t (*)(void))sub_1C0D7BBE0, MEMORY[0x1E0DEAF10]);
  sub_1C077F744();
  if (!v1)
  {
    sub_1C0796BC0(1);
    sub_1C0796BC0(2);
    sub_1C0796BC0(3);
    sub_1C0796BC0(4);
    sub_1C0796BC0(5);
    sub_1C0796BC0(6);
    sub_1C0796BC0(7);
    sub_1C0796BC0(8);
    sub_1C0796BC0(9);
    sub_1C077C330();
  }
  return sub_1C078C76C(*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
}

void sub_1C0D7ADCC()
{
  sub_1C077C06C();
  sub_1C0D7A434();
  sub_1C077AE74();
  sub_1C0775804();
}

void sub_1C0D7ADF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  char v25;
  char v26;
  char v27;
  char v28;
  char v29;
  char v30;
  char v31;

  sub_1C077AE5C();
  v13 = v12;
  v15 = v14;
  sub_1C07ACF80(&qword_1EF648C98);
  sub_1C077591C();
  MEMORY[0x1E0C80A78](v16);
  sub_1C0778564();
  v19 = v18 - v17;
  sub_1C07A9480(v13, v13[3]);
  sub_1C0D7BB00();
  sub_1C1070E94();
  if (v10)
  {
    sub_1C0775880();
  }
  else
  {
    sub_1C07ACF80(&qword_1EF648CA8);
    sub_1C0D7BB78(&qword_1EF648CB0, (uint64_t (*)(void))sub_1C0D7BB3C, MEMORY[0x1E0DEAF40]);
    sub_1C1070AE0();
    sub_1C077AEBC();
    v20 = sub_1C1070AB0();
    v31 = sub_1C079B038(2);
    v30 = sub_1C079B038(3);
    v29 = sub_1C079B038(4);
    v28 = sub_1C079B038(5);
    v27 = sub_1C079B038(6);
    v26 = sub_1C079B038(7);
    v25 = sub_1C079B038(8);
    v24 = sub_1C079B038(9);
    v23 = sub_1C1070AA4();
    v22 = v21;
    sub_1C077C144(v19, *(uint64_t (**)(uint64_t, uint64_t))(v11 + 8));
    sub_1C077AE90();
    sub_1C0775880();
    swift_bridgeObjectRelease();
    sub_1C077B5B4();
    *(_QWORD *)v15 = a10;
    *(_BYTE *)(v15 + 8) = v20 & 1;
    *(_BYTE *)(v15 + 9) = v31 & 1;
    *(_BYTE *)(v15 + 10) = v30 & 1;
    *(_BYTE *)(v15 + 11) = v29 & 1;
    *(_BYTE *)(v15 + 12) = v28 & 1;
    *(_BYTE *)(v15 + 13) = v27 & 1;
    *(_BYTE *)(v15 + 14) = v26 & 1;
    *(_BYTE *)(v15 + 15) = v25 & 1;
    *(_BYTE *)(v15 + 16) = v24 & 1;
    *(_QWORD *)(v15 + 24) = v23;
    *(_QWORD *)(v15 + 32) = v22;
  }
  sub_1C07757D0();
}

uint64_t sub_1C0D7B0FC(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  BOOL v7;
  BOOL v8;
  char v9;

  v2 = a1 == 0x6D614E656C626174 && a2 == 0xE900000000000065;
  if (v2 || (sub_1C1070CB4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x736E6D756C6F63 && a2 == 0xE700000000000000;
    if (v6 || (sub_1C1070CB4() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      v7 = a1 == 0x6E497463656A626FLL && a2 == 0xEB00000000786564;
      if (v7 || (sub_1C1070CB4() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else
      {
        v8 = a1 == 0x54467463656A626FLL && a2 == 0xEE007865646E4953;
        if (v8 || (sub_1C1070CB4() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 3;
        }
        else if (a1 == 0xD000000000000012 && a2 == 0x80000001C110AE10)
        {
          swift_bridgeObjectRelease();
          return 4;
        }
        else
        {
          v9 = sub_1C1070CB4();
          swift_bridgeObjectRelease();
          if ((v9 & 1) != 0)
            return 4;
          else
            return 5;
        }
      }
    }
  }
}

uint64_t sub_1C0D7B350(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1C0D7B388 + 4 * byte_1C10BA7E9[a1]))(0x6D614E656C626174, 0xE900000000000065);
}

uint64_t sub_1C0D7B388()
{
  return 0x736E6D756C6F63;
}

uint64_t sub_1C0D7B3A0()
{
  return 0x6E497463656A626FLL;
}

uint64_t sub_1C0D7B3C0()
{
  return 0x54467463656A626FLL;
}

unint64_t sub_1C0D7B3E4()
{
  return 0xD000000000000012;
}

void sub_1C0D7B400()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  sub_1C077AE5C();
  v2 = v1;
  v3 = sub_1C07ACF80(qword_1EF648CD8);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  sub_1C0778544();
  sub_1C07A9480(v2, v2[3]);
  sub_1C0D7BC1C();
  sub_1C1070EB8();
  sub_1C1070B7C();
  if (!v0)
  {
    sub_1C07ACF80(&qword_1ED760108);
    sub_1C08EE69C(&qword_1EF6339C0, &qword_1EF6339C8, (uint64_t)&protocol conformance descriptor for ViewDatabaseArtifact.Property, MEMORY[0x1E0DEAF10]);
    sub_1C1070BB8();
    sub_1C0795D08();
    sub_1C0795D08();
    sub_1C0795D08();
  }
  sub_1C078C76C(*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
  sub_1C07757D0();
}

uint64_t sub_1C0D7B594()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v6;

  sub_1C077AE5C();
  v3 = v2;
  sub_1C07ACF80(&qword_1ED760388);
  sub_1C077591C();
  MEMORY[0x1E0C80A78](v4);
  sub_1C0778564();
  sub_1C07A9480(v3, v3[3]);
  sub_1C0D7BC1C();
  sub_1C1070E94();
  if (v0)
  {
    _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v3);
  }
  else
  {
    v1 = sub_1C1070AA4();
    sub_1C07ACF80(&qword_1ED760108);
    v6 = sub_1C08EE69C(&qword_1ED760110, &qword_1ED75FA38, (uint64_t)&protocol conformance descriptor for ViewDatabaseArtifact.Property, MEMORY[0x1E0DEAF40]);
    sub_1C077AEBC();
    sub_1C07A869C();
    if (v6)
    {
      sub_1C0776938();
      sub_1C077B5B4();
      _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v3);
    }
    else
    {
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      sub_1C078D918();
      sub_1C078D918();
      sub_1C078D918();
      sub_1C0776938();
      _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v3);
      sub_1C0775894();
    }
    sub_1C077B5B4();
  }
  return v1;
}

uint64_t sub_1C0D7B7B4()
{
  unsigned __int8 *v0;

  return sub_1C0D7AA90(*v0);
}

uint64_t sub_1C0D7B7BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1C0D7A5D0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C0D7B7E0@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1C0860A04();
  *a1 = result;
  return result;
}

uint64_t sub_1C0D7B804()
{
  sub_1C0D7BB00();
  return sub_1C1070EE8();
}

uint64_t sub_1C0D7B82C()
{
  sub_1C0D7BB00();
  return sub_1C1070EF4();
}

uint64_t sub_1C0D7B85C()
{
  sub_1C1070DF8();
  sub_1C0D7A434();
  return sub_1C1070E4C();
}

double sub_1C0D7B894@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  uint64_t v9;
  double result;
  uint64_t v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;

  sub_1C0D7ADF4(a1, a2, a3, a4, a5, a6, a7, a8, v12, v13);
  if (!v9)
  {
    result = *(double *)&v13;
    *(_OWORD *)a9 = v13;
    *(_OWORD *)(a9 + 16) = v14;
    *(_QWORD *)(a9 + 32) = v15;
  }
  return result;
}

uint64_t sub_1C0D7B8D8(_QWORD *a1)
{
  return sub_1C0D7ABF4(a1);
}

uint64_t sub_1C0D7B8F0()
{
  unsigned __int8 *v0;

  return sub_1C0D7B350(*v0);
}

uint64_t sub_1C0D7B8F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1C0D7B0FC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C0D7B91C()
{
  sub_1C0D7BC1C();
  return sub_1C1070EE8();
}

uint64_t sub_1C0D7B944()
{
  sub_1C0D7BC1C();
  return sub_1C1070EF4();
}

uint64_t sub_1C0D7B96C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  int v6;

  result = sub_1C0D7B594();
  if (!v1)
  {
    *(_QWORD *)a1 = result;
    *(_QWORD *)(a1 + 8) = v4;
    *(_QWORD *)(a1 + 16) = v5;
    *(_WORD *)(a1 + 24) = v6;
    *(_BYTE *)(a1 + 26) = BYTE2(v6);
  }
  return result;
}

void sub_1C0D7B9AC()
{
  sub_1C0D7B400();
}

unint64_t sub_1C0D7B9D8()
{
  unint64_t result;

  result = qword_1EF648C90;
  if (!qword_1EF648C90)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10BA8A0, &unk_1E7A31BB0);
    atomic_store(result, (unint64_t *)&qword_1EF648C90);
  }
  return result;
}

uint64_t type metadata accessor for SubgraphDatabaseTable.SubgraphComparableTriple()
{
  uint64_t result;

  result = qword_1EF648D38;
  if (!qword_1EF648D38)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1C0D7BA4C()
{
  return sub_1C0D77A2C();
}

void sub_1C0D7BA64(uint64_t a1)
{
  uint64_t v1;

  sub_1C0D77334(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_1C0D7BA7C()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C0D7BAC8()
{
  return sub_1C0D778E0();
}

void sub_1C0D7BAE0(uint64_t a1)
{
  sub_1C0D7A294(a1);
}

unint64_t sub_1C0D7BB00()
{
  unint64_t result;

  result = qword_1EF648CA0;
  if (!qword_1EF648CA0)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10BAE50, &type metadata for SubgraphDatabaseTable.SubgraphColumns.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF648CA0);
  }
  return result;
}

unint64_t sub_1C0D7BB3C()
{
  unint64_t result;

  result = qword_1EF648CB8;
  if (!qword_1EF648CB8)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10BAE28, &unk_1E7A31EA0);
    atomic_store(result, (unint64_t *)&qword_1EF648CB8);
  }
  return result;
}

uint64_t sub_1C0D7BB78(unint64_t *a1, uint64_t (*a2)(void), uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    v7 = sub_1C07D4BEC(&qword_1EF648CA8);
    v8 = a2();
    result = MEMORY[0x1C3BA8174](a3, v7, &v8);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1C0D7BBE0()
{
  unint64_t result;

  result = qword_1EF648CD0;
  if (!qword_1EF648CD0)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10BAE00, &unk_1E7A31EA0);
    atomic_store(result, (unint64_t *)&qword_1EF648CD0);
  }
  return result;
}

unint64_t sub_1C0D7BC1C()
{
  unint64_t result;

  result = qword_1ED75FAB8;
  if (!qword_1ED75FAB8)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10BADB0, &type metadata for SubgraphDatabaseTable.Config.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED75FAB8);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for SubgraphDatabaseTable.Config.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1C0D7BCA4 + 4 * byte_1C10BA7F3[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1C0D7BCD8 + 4 * byte_1C10BA7EE[v4]))();
}

uint64_t sub_1C0D7BCD8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C0D7BCE0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C0D7BCE8);
  return result;
}

uint64_t sub_1C0D7BCF4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C0D7BCFCLL);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1C0D7BD00(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C0D7BD08(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SubgraphDatabaseTable.Config.CodingKeys()
{
  return &type metadata for SubgraphDatabaseTable.Config.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for SubgraphDatabaseTable.SubgraphColumns.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 10 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 10) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF6)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF5)
    return ((uint64_t (*)(void))((char *)&loc_1C0D7BD70 + 4 * byte_1C10BA7FD[v4]))();
  *a1 = a2 + 10;
  return ((uint64_t (*)(void))((char *)sub_1C0D7BDA4 + 4 * byte_1C10BA7F8[v4]))();
}

uint64_t sub_1C0D7BDA4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C0D7BDAC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C0D7BDB4);
  return result;
}

uint64_t sub_1C0D7BDC0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C0D7BDC8);
  *(_BYTE *)result = a2 + 10;
  return result;
}

uint64_t sub_1C0D7BDCC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C0D7BDD4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SubgraphDatabaseTable.SubgraphColumns.CodingKeys()
{
  return &type metadata for SubgraphDatabaseTable.SubgraphColumns.CodingKeys;
}

char *sub_1C0D7BDF0(uint64_t a1, uint64_t *a2, int *a3)
{
  char *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, uint64_t, uint64_t);
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  _QWORD *v30;
  uint64_t v31;

  v4 = (char *)a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v8 = *a2;
    *(_QWORD *)v4 = *a2;
    v4 = (char *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    if (*a2)
    {
      *(_QWORD *)a1 = *a2;
      *(_QWORD *)(a1 + 8) = a2[1];
      *(_BYTE *)(a1 + 16) = *((_BYTE *)a2 + 16);
      v7 = a2[4];
      *(_QWORD *)(a1 + 24) = a2[3];
      *(_QWORD *)(a1 + 32) = v7;
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    }
    else
    {
      v9 = *((_OWORD *)a2 + 1);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v9;
      *(_QWORD *)(a1 + 32) = a2[4];
    }
    v10 = a3[5];
    v11 = &v4[v10];
    v12 = (uint64_t)a2 + v10;
    v13 = sub_1C106E590();
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v11, v12, v13);
    v14 = a3[6];
    v15 = &v4[v14];
    v16 = (uint64_t)a2 + v14;
    v17 = sub_1C106E41C();
    v18 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 16);
    v18(v15, v16, v17);
    v19 = a3[7];
    v20 = &v4[v19];
    v21 = (uint64_t)a2 + v19;
    v22 = sub_1C106EB24();
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v20, v21, v22);
    v18(&v4[a3[8]], (uint64_t)a2 + a3[8], v17);
    v23 = a3[9];
    v24 = a3[10];
    v25 = &v4[v23];
    v26 = (uint64_t *)((char *)a2 + v23);
    v27 = v26[1];
    *(_QWORD *)v25 = *v26;
    *((_QWORD *)v25 + 1) = v27;
    *(_QWORD *)&v4[v24] = *(uint64_t *)((char *)a2 + v24);
    v28 = a3[12];
    *(_QWORD *)&v4[a3[11]] = *(uint64_t *)((char *)a2 + a3[11]);
    v29 = &v4[v28];
    v30 = (uint64_t *)((char *)a2 + v28);
    v31 = v30[1];
    *(_QWORD *)v29 = *v30;
    *((_QWORD *)v29 + 1) = v31;
    *(_QWORD *)&v4[a3[13]] = *(uint64_t *)((char *)a2 + a3[13]);
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  }
  return v4;
}

uint64_t sub_1C0D7BF8C(char *a1, int *a2)
{
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  void (*v8)(char *, uint64_t);
  char *v9;
  uint64_t v10;

  if (*(_QWORD *)a1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  v4 = &a1[a2[5]];
  v5 = sub_1C106E590();
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  v6 = &a1[a2[6]];
  v7 = sub_1C106E41C();
  v8 = *(void (**)(char *, uint64_t))(*(_QWORD *)(v7 - 8) + 8);
  v8(v6, v7);
  v9 = &a1[a2[7]];
  v10 = sub_1C106EB24();
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  v8(&a1[a2[8]], v7);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C0D7C06C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  _QWORD *v28;
  uint64_t v29;

  if (*(_QWORD *)a2)
  {
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
    *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
    v6 = *(_QWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
    *(_QWORD *)(a1 + 32) = v6;
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  }
  else
  {
    v7 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v7;
    *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  }
  v8 = a3[5];
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = sub_1C106E590();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
  v12 = a3[6];
  v13 = a1 + v12;
  v14 = a2 + v12;
  v15 = sub_1C106E41C();
  v16 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 16);
  v16(v13, v14, v15);
  v17 = a3[7];
  v18 = a1 + v17;
  v19 = a2 + v17;
  v20 = sub_1C106EB24();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v18, v19, v20);
  v16(a1 + a3[8], a2 + a3[8], v15);
  v21 = a3[9];
  v22 = a3[10];
  v23 = (_QWORD *)(a1 + v21);
  v24 = (_QWORD *)(a2 + v21);
  v25 = v24[1];
  *v23 = *v24;
  v23[1] = v25;
  *(_QWORD *)(a1 + v22) = *(_QWORD *)(a2 + v22);
  v26 = a3[12];
  *(_QWORD *)(a1 + a3[11]) = *(_QWORD *)(a2 + a3[11]);
  v27 = (_QWORD *)(a1 + v26);
  v28 = (_QWORD *)(a2 + v26);
  v29 = v28[1];
  *v27 = *v28;
  v27[1] = v29;
  *(_QWORD *)(a1 + a3[13]) = *(_QWORD *)(a2 + a3[13]);
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  return a1;
}

uint64_t sub_1C0D7C1DC(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(uint64_t, uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;
  _QWORD *v29;
  _QWORD *v30;

  v6 = *(_QWORD *)a1;
  v7 = *a2;
  if (v6)
  {
    if (v7)
    {
      *(_QWORD *)a1 = v7;
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      swift_bridgeObjectRelease();
      *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
      *(_BYTE *)(a1 + 9) = *((_BYTE *)a2 + 9);
      *(_BYTE *)(a1 + 10) = *((_BYTE *)a2 + 10);
      *(_BYTE *)(a1 + 11) = *((_BYTE *)a2 + 11);
      *(_BYTE *)(a1 + 12) = *((_BYTE *)a2 + 12);
      *(_BYTE *)(a1 + 13) = *((_BYTE *)a2 + 13);
      *(_BYTE *)(a1 + 14) = *((_BYTE *)a2 + 14);
      *(_BYTE *)(a1 + 15) = *((_BYTE *)a2 + 15);
      *(_BYTE *)(a1 + 16) = *((_BYTE *)a2 + 16);
      *(_QWORD *)(a1 + 24) = a2[3];
      *(_QWORD *)(a1 + 32) = a2[4];
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1C0D7C45C(a1);
      v8 = a2[4];
      v9 = *((_OWORD *)a2 + 1);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v9;
      *(_QWORD *)(a1 + 32) = v8;
    }
  }
  else if (v7)
  {
    *(_QWORD *)a1 = v7;
    *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
    *(_BYTE *)(a1 + 9) = *((_BYTE *)a2 + 9);
    *(_BYTE *)(a1 + 10) = *((_BYTE *)a2 + 10);
    *(_BYTE *)(a1 + 11) = *((_BYTE *)a2 + 11);
    *(_BYTE *)(a1 + 12) = *((_BYTE *)a2 + 12);
    *(_BYTE *)(a1 + 13) = *((_BYTE *)a2 + 13);
    *(_BYTE *)(a1 + 14) = *((_BYTE *)a2 + 14);
    *(_BYTE *)(a1 + 15) = *((_BYTE *)a2 + 15);
    *(_BYTE *)(a1 + 16) = *((_BYTE *)a2 + 16);
    *(_QWORD *)(a1 + 24) = a2[3];
    *(_QWORD *)(a1 + 32) = a2[4];
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  }
  else
  {
    v10 = *(_OWORD *)a2;
    v11 = *((_OWORD *)a2 + 1);
    *(_QWORD *)(a1 + 32) = a2[4];
    *(_OWORD *)a1 = v10;
    *(_OWORD *)(a1 + 16) = v11;
  }
  v12 = a3[5];
  v13 = a1 + v12;
  v14 = (uint64_t)a2 + v12;
  v15 = sub_1C106E590();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 24))(v13, v14, v15);
  v16 = a3[6];
  v17 = a1 + v16;
  v18 = (uint64_t)a2 + v16;
  v19 = sub_1C106E41C();
  v20 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 24);
  v20(v17, v18, v19);
  v21 = a3[7];
  v22 = a1 + v21;
  v23 = (uint64_t)a2 + v21;
  v24 = sub_1C106EB24();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 24))(v22, v23, v24);
  v20(a1 + a3[8], (uint64_t)a2 + a3[8], v19);
  v25 = a3[9];
  v26 = (_QWORD *)(a1 + v25);
  v27 = (uint64_t *)((char *)a2 + v25);
  *v26 = *v27;
  v26[1] = v27[1];
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[10]) = *(uint64_t *)((char *)a2 + a3[10]);
  *(_QWORD *)(a1 + a3[11]) = *(uint64_t *)((char *)a2 + a3[11]);
  v28 = a3[12];
  v29 = (_QWORD *)(a1 + v28);
  v30 = (uint64_t *)((char *)a2 + v28);
  *v29 = *v30;
  v29[1] = v30[1];
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[13]) = *(uint64_t *)((char *)a2 + a3[13]);
  return a1;
}

uint64_t sub_1C0D7C45C(uint64_t a1)
{
  sub_1C0D754E8();
  return a1;
}

uint64_t sub_1C0D7C488(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1C106E590();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  v14 = sub_1C106E41C();
  v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32);
  v15(v12, v13, v14);
  v16 = a3[7];
  v17 = a1 + v16;
  v18 = a2 + v16;
  v19 = sub_1C106EB24();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v17, v18, v19);
  v15(a1 + a3[8], a2 + a3[8], v14);
  v20 = a3[10];
  *(_OWORD *)(a1 + a3[9]) = *(_OWORD *)(a2 + a3[9]);
  *(_QWORD *)(a1 + v20) = *(_QWORD *)(a2 + v20);
  v21 = a3[12];
  *(_QWORD *)(a1 + a3[11]) = *(_QWORD *)(a2 + a3[11]);
  *(_OWORD *)(a1 + v21) = *(_OWORD *)(a2 + v21);
  *(_QWORD *)(a1 + a3[13]) = *(_QWORD *)(a2 + a3[13]);
  return a1;
}

uint64_t sub_1C0D7C5A8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;

  if (!*(_QWORD *)a1)
    goto LABEL_5;
  if (!*(_QWORD *)a2)
  {
    sub_1C0D7C45C(a1);
LABEL_5:
    v7 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v7;
    *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
    goto LABEL_6;
  }
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_BYTE *)(a1 + 9) = *(_BYTE *)(a2 + 9);
  *(_BYTE *)(a1 + 10) = *(_BYTE *)(a2 + 10);
  *(_BYTE *)(a1 + 11) = *(_BYTE *)(a2 + 11);
  *(_BYTE *)(a1 + 12) = *(_BYTE *)(a2 + 12);
  *(_BYTE *)(a1 + 13) = *(_BYTE *)(a2 + 13);
  *(_BYTE *)(a1 + 14) = *(_BYTE *)(a2 + 14);
  *(_BYTE *)(a1 + 15) = *(_BYTE *)(a2 + 15);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v6;
  swift_bridgeObjectRelease();
LABEL_6:
  v8 = a3[5];
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = sub_1C106E590();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 40))(v9, v10, v11);
  v12 = a3[6];
  v13 = a1 + v12;
  v14 = a2 + v12;
  v15 = sub_1C106E41C();
  v16 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 40);
  v16(v13, v14, v15);
  v17 = a3[7];
  v18 = a1 + v17;
  v19 = a2 + v17;
  v20 = sub_1C106EB24();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 40))(v18, v19, v20);
  v16(a1 + a3[8], a2 + a3[8], v15);
  v21 = a3[9];
  v22 = (_QWORD *)(a1 + v21);
  v23 = (uint64_t *)(a2 + v21);
  v25 = *v23;
  v24 = v23[1];
  *v22 = v25;
  v22[1] = v24;
  swift_bridgeObjectRelease();
  v26 = a3[11];
  *(_QWORD *)(a1 + a3[10]) = *(_QWORD *)(a2 + a3[10]);
  *(_QWORD *)(a1 + v26) = *(_QWORD *)(a2 + v26);
  v27 = a3[12];
  v28 = (_QWORD *)(a1 + v27);
  v29 = (uint64_t *)(a2 + v27);
  v31 = *v29;
  v30 = v29[1];
  *v28 = v31;
  v28[1] = v30;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[13]) = *(_QWORD *)(a2 + a3[13]);
  return a1;
}

uint64_t sub_1C0D7C768()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1C0D7C774(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  unint64_t v14;

  sub_1C078784C();
  sub_1C0786404();
  if (v9)
  {
    v7 = v6;
    v8 = a3[5];
    return sub_1C07B2D80(a1 + v8, a2, v7);
  }
  sub_1C0779688();
  sub_1C0786404();
  if (v9)
  {
    v7 = v10;
    v8 = a3[6];
    return sub_1C07B2D80(a1 + v8, a2, v7);
  }
  sub_1C077D8EC();
  sub_1C0786404();
  if (v11)
  {
    v7 = v12;
    v8 = a3[7];
    return sub_1C07B2D80(a1 + v8, a2, v7);
  }
  v14 = *(_QWORD *)(a1 + a3[9] + 8);
  if (v14 >= 0xFFFFFFFF)
    LODWORD(v14) = -1;
  return (v14 + 1);
}

uint64_t sub_1C0D7C818()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_1C0D7C824(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  char v12;
  uint64_t v13;

  sub_1C078784C();
  sub_1C077AFFC();
  if (v10)
  {
    v8 = v7;
    v9 = a4[5];
  }
  else
  {
    sub_1C0779688();
    sub_1C077AFFC();
    if (v10)
    {
      v8 = v11;
      v9 = a4[6];
    }
    else
    {
      sub_1C077D8EC();
      sub_1C077AFFC();
      if (!v12)
      {
        *(_QWORD *)(a1 + a4[9] + 8) = (a2 - 1);
        return;
      }
      v8 = v13;
      v9 = a4[7];
    }
  }
  sub_1C07B2D8C(a1 + v9, a2, a2, v8);
}

uint64_t sub_1C0D7C8C4()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  result = sub_1C106E590();
  if (v1 <= 0x3F)
  {
    result = sub_1C106E41C();
    if (v2 <= 0x3F)
    {
      result = sub_1C106EB24();
      if (v3 <= 0x3F)
      {
        swift_initStructMetadata();
        return 0;
      }
    }
  }
  return result;
}

uint64_t sub_1C0D7C990(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 8 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 8) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF8)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF7)
    return ((uint64_t (*)(void))((char *)&loc_1C0D7C9DC + 4 * byte_1C10BA807[v4]))();
  *a1 = a2 + 8;
  return ((uint64_t (*)(void))((char *)sub_1C0D7CA10 + 4 * byte_1C10BA802[v4]))();
}

uint64_t sub_1C0D7CA10(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C0D7CA18(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C0D7CA20);
  return result;
}

uint64_t sub_1C0D7CA2C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C0D7CA34);
  *(_BYTE *)result = a2 + 8;
  return result;
}

uint64_t sub_1C0D7CA38(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C0D7CA40(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for SubgraphDatabaseTable.SubgraphColumns.SubgraphTripleColumn()
{
  sub_1C0779604();
}

unint64_t sub_1C0D7CA5C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF648D90;
  if (!qword_1EF648D90)
  {
    v1 = sub_1C07D4BEC(&qword_1EF648CA8);
    result = MEMORY[0x1C3BA8174](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF648D90);
  }
  return result;
}

unint64_t sub_1C0D7CAA4()
{
  unint64_t result;

  result = qword_1EF648D98;
  if (!qword_1EF648D98)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10BAAB8, &unk_1E7A31EA0);
    atomic_store(result, (unint64_t *)&qword_1EF648D98);
  }
  return result;
}

void sub_1C0D7CAE0()
{
  sub_1C0794BAC(&qword_1EF648DA0, (uint64_t (*)(uint64_t))type metadata accessor for SubgraphDatabaseTable.SubgraphComparableTriple, (uint64_t)&unk_1C10BAAE0);
}

void sub_1C0D7CB0C(uint64_t a1)
{
  uint64_t v2;

  sub_1C0794BAC(&qword_1EF648DA8, (uint64_t (*)(uint64_t))type metadata accessor for SubgraphDatabaseTable.SubgraphComparableTriple, (uint64_t)&unk_1C10BAEA0);
  *(_QWORD *)(a1 + 8) = v2;
}

void sub_1C0D7CB48(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_1C0794BAC(&qword_1EF648DB0, (uint64_t (*)(uint64_t))type metadata accessor for SubgraphDatabaseTable.SubgraphComparableTriple, (uint64_t)&unk_1C10BAB70);
  a1[1] = v2;
  sub_1C0794BAC(&qword_1EF648DB8, (uint64_t (*)(uint64_t))type metadata accessor for SubgraphDatabaseTable.SubgraphComparableTriple, (uint64_t)&unk_1C10BAB8C);
  a1[2] = v3;
  sub_1C0794BAC(&qword_1EF648DC0, (uint64_t (*)(uint64_t))type metadata accessor for SubgraphDatabaseTable.SubgraphComparableTriple, (uint64_t)&unk_1C10BAB48);
  a1[3] = v4;
  sub_1C0794BAC(&qword_1EF648DC8, (uint64_t (*)(uint64_t))type metadata accessor for SubgraphDatabaseTable.SubgraphComparableTriple, (uint64_t)&unk_1C10BAB08);
  a1[4] = v5;
}

unint64_t sub_1C0D7CBE0()
{
  unint64_t result;

  result = qword_1EF648DD0;
  if (!qword_1EF648DD0)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10BACD0, &type metadata for SubgraphDatabaseTable.SubgraphColumns.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF648DD0);
  }
  return result;
}

unint64_t sub_1C0D7CC20()
{
  unint64_t result;

  result = qword_1EF648DD8;
  if (!qword_1EF648DD8)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10BAD88, &type metadata for SubgraphDatabaseTable.Config.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF648DD8);
  }
  return result;
}

unint64_t sub_1C0D7CC60()
{
  unint64_t result;

  result = qword_1ED75FAC8;
  if (!qword_1ED75FAC8)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10BACF8, &type metadata for SubgraphDatabaseTable.Config.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED75FAC8);
  }
  return result;
}

unint64_t sub_1C0D7CCA0()
{
  unint64_t result;

  result = qword_1ED75FAC0;
  if (!qword_1ED75FAC0)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10BAD20, &type metadata for SubgraphDatabaseTable.Config.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED75FAC0);
  }
  return result;
}

unint64_t sub_1C0D7CCE0()
{
  unint64_t result;

  result = qword_1EF648DE0;
  if (!qword_1EF648DE0)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10BAC40, &type metadata for SubgraphDatabaseTable.SubgraphColumns.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF648DE0);
  }
  return result;
}

unint64_t sub_1C0D7CD20()
{
  unint64_t result;

  result = qword_1EF648DE8;
  if (!qword_1EF648DE8)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10BAC68, &type metadata for SubgraphDatabaseTable.SubgraphColumns.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF648DE8);
  }
  return result;
}

unint64_t sub_1C0D7CD5C()
{
  unint64_t result;

  result = qword_1EF648DF0;
  if (!qword_1EF648DF0)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10BAA40, &unk_1E7A31EA0);
    atomic_store(result, (unint64_t *)&qword_1EF648DF0);
  }
  return result;
}

unint64_t sub_1C0D7CD98()
{
  unint64_t result;

  result = qword_1EF648E00;
  if (!qword_1EF648E00)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10BAFA0, &type metadata for SubgraphDatabaseTable.SubgraphComparableTriple.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF648E00);
  }
  return result;
}

uint64_t sub_1C0D7CDD4(uint64_t result)
{
  if (result)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t sub_1C0D7CE00()
{
  unint64_t result;

  result = qword_1EF648E08;
  if (!qword_1EF648E08)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10BA8F0, &unk_1E7A31BB0);
    atomic_store(result, (unint64_t *)&qword_1EF648E08);
  }
  return result;
}

unint64_t sub_1C0D7CE3C()
{
  unint64_t result;

  result = qword_1EF648E18;
  if (!qword_1EF648E18)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10BA8C8, &unk_1E7A31BB0);
    atomic_store(result, (unint64_t *)&qword_1EF648E18);
  }
  return result;
}

uint64_t sub_1C0D7CE78(uint64_t result)
{
  if (result)
  {
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    return _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for SubgraphDatabaseTable.SubgraphComparableTriple.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 9 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 9) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF7)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF6)
    return ((uint64_t (*)(void))((char *)&loc_1C0D7CEF0 + 4 * byte_1C10BA811[v4]))();
  *a1 = a2 + 9;
  return ((uint64_t (*)(void))((char *)sub_1C0D7CF24 + 4 * byte_1C10BA80C[v4]))();
}

uint64_t sub_1C0D7CF24(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C0D7CF2C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C0D7CF34);
  return result;
}

uint64_t sub_1C0D7CF40(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C0D7CF48);
  *(_BYTE *)result = a2 + 9;
  return result;
}

uint64_t sub_1C0D7CF4C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C0D7CF54(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SubgraphDatabaseTable.SubgraphComparableTriple.CodingKeys()
{
  return &type metadata for SubgraphDatabaseTable.SubgraphComparableTriple.CodingKeys;
}

unint64_t sub_1C0D7CF74()
{
  unint64_t result;

  result = qword_1EF648E20;
  if (!qword_1EF648E20)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10BAF78, &type metadata for SubgraphDatabaseTable.SubgraphComparableTriple.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF648E20);
  }
  return result;
}

unint64_t sub_1C0D7CFB4()
{
  unint64_t result;

  result = qword_1EF648E28;
  if (!qword_1EF648E28)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10BAEE8, &type metadata for SubgraphDatabaseTable.SubgraphComparableTriple.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF648E28);
  }
  return result;
}

unint64_t sub_1C0D7CFF4()
{
  unint64_t result;

  result = qword_1EF648E30;
  if (!qword_1EF648E30)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10BAF10, &type metadata for SubgraphDatabaseTable.SubgraphComparableTriple.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF648E30);
  }
  return result;
}

void sub_1C0D7D030(uint64_t a1)
{
  sub_1C0D7BAE0(a1);
}

void sub_1C0D7D044(uint64_t a1)
{
  sub_1C0D7BA64(a1);
}

void sub_1C0D7D058(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  void *v22;
  void *v23;
  id v24;
  NSObject *v25;
  os_log_type_t v26;
  _WORD *v27;
  _BYTE v28[24];

  v2 = sub_1C0779D10();
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v3);
  v5 = &v28[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = sub_1C07ACF80(&qword_1ED75E630);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v7);
  v9 = &v28[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v10);
  v12 = &v28[-v11];
  if (qword_1ED75E808 != -1)
    swift_once();
  v13 = sub_1C077585C();
  v14 = sub_1C079E000(v13, (uint64_t)qword_1ED78D7A0);
  sub_1C106F538();
  v15 = sub_1C0784E0C();
  if (os_log_type_enabled(v14, v15))
  {
    v16 = (uint8_t *)sub_1C0780FC8();
    *(_WORD *)v16 = 0;
    sub_1C077F048(&dword_1C0771000, v14, v15, "SysdiagnoseXPC: starting...", v16);
    sub_1C0776778();
  }

  if (qword_1ED749CA8 != -1)
    swift_once();
  v17 = sub_1C079E000(v6, (uint64_t)qword_1ED78C3A8);
  if (qword_1ED761518 != -1)
    swift_once();
  sub_1C0775864();
  if (qword_1ED7627B8)
  {
    v18 = sub_1C078B474(qword_1ED7627B8, (uint64_t)off_1ED7627C0);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v19 + 40))(a1, v18, v19);
    v20 = 0;
  }
  else
  {
    v20 = 1;
  }
  sub_1C078AB18((uint64_t)v9, v20);
  sub_1C078E3E0(a1, (uint64_t)v5);
  if (sub_1C07B2D80((uint64_t)v9, 1, v2) == 1)
  {
    sub_1C078E578((uint64_t)v5, (uint64_t)v12);
    sub_1C0D7E9E0((uint64_t)v9);
  }
  else
  {
    sub_1C078D09C((uint64_t)v5);
    sub_1C078E578((uint64_t)v9, (uint64_t)v12);
  }
  sub_1C078AB18((uint64_t)v12, 0);
  swift_beginAccess();
  sub_1C0800ADC((uint64_t)v12, v17);
  swift_endAccess();
  sub_1C0800B24();
  sub_1C07B8CF8();
  v21 = sub_1C0BBE34C();
  v22 = (void *)qword_1ED78CA58;
  qword_1ED78CA58 = (uint64_t)v21;

  v23 = (void *)qword_1ED78CA58;
  if (qword_1ED78CA58)
  {
    v24 = objc_allocWithZone((Class)type metadata accessor for SysdiagnoseXPC.Delegate());
    v25 = v23;
    qword_1ED78CA50 = (uint64_t)objc_msgSend(v24, sel_init);
    swift_unknownObjectRelease();
    -[NSObject setDelegate:](v25, sel_setDelegate_, qword_1ED78CA50);
    -[NSObject resume](v25, sel_resume);
  }
  else
  {
    v25 = sub_1C106F538();
    v26 = sub_1C107039C();
    if (sub_1C077F60C(v26))
    {
      v27 = (_WORD *)sub_1C0780FC8();
      sub_1C078C17C(v27);
      sub_1C077F048(&dword_1C0771000, v25, (os_log_type_t)v14, "Failed to create SysdiagnoseXPC service", (uint8_t *)v14);
      sub_1C0776778();
    }
  }

}

uint64_t sub_1C0D7D3CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = sub_1C07ACF80(&qword_1ED75E630);
  sub_1C0800A9C(v0, qword_1ED78C3A8);
  v1 = sub_1C079E000(v0, (uint64_t)qword_1ED78C3A8);
  v2 = type metadata accessor for Configuration();
  return sub_1C07B2D8C(v1, 1, 1, v2);
}

BOOL static SysdiagnoseXPC.SysdiagnoseXPCError.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t SysdiagnoseXPC.SysdiagnoseXPCError.hash(into:)()
{
  return sub_1C1070E04();
}

uint64_t SysdiagnoseXPC.SysdiagnoseXPCError.hashValue.getter()
{
  sub_1C1070DF8();
  sub_1C1070E04();
  return sub_1C1070E4C();
}

uint64_t SysdiagnoseXPC.Server.diagnostics()()
{
  uint64_t v0;

  sub_1C106FB50();
  *(_QWORD *)(v0 + 24) = sub_1C0779D74();
  sub_1C077862C();
  return sub_1C077AEC4();
}

uint64_t sub_1C0D7D54C()
{
  NSObject *v0;
  uint8_t *v1;
  uint64_t v2;
  uint64_t v3;
  os_log_type_t v4;
  _WORD *v5;
  uint64_t v7;
  void *v8;
  void *v9;
  void *v10;
  id v11;
  id v12;
  uint64_t v13;
  void *v14;
  _BYTE *v15;

  if (qword_1ED75E808 != -1)
    swift_once();
  v3 = sub_1C077585C();
  sub_1C077965C(v3, (uint64_t)qword_1ED78D7A0);
  v4 = sub_1C0784E0C();
  if (os_log_type_enabled(v0, v4))
  {
    v5 = (_WORD *)sub_1C0780FC8();
    sub_1C078C17C(v5);
    sub_1C077F048(&dword_1C0771000, v0, v4, "SysdiagnoseXPC: diagnostics", v1);
    sub_1C0776778();
  }

  v7 = sub_1C0B6B554();
  v8 = (void *)MEMORY[0x1C3BA79F4]();
  v9 = (void *)objc_opt_self();
  v10 = (void *)sub_1C106F934();
  *(_QWORD *)(v2 + 16) = 0;
  v11 = objc_msgSend(v9, sel_dataWithJSONObject_options_error_, v10, 3, v2 + 16);

  v12 = *(id *)(v2 + 16);
  if (!v11)
  {
    v14 = v12;
    sub_1C106AA14();

    swift_willThrow();
    objc_autoreleasePoolPop(v8);
    sub_1C077960C();
LABEL_6:
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v2 + 8))();
  }
  sub_1C106AC18();

  objc_autoreleasePoolPop(v8);
  sub_1C077960C();
  sub_1C106FB44();
  sub_1C106FB2C();
  if (!v13)
  {
    sub_1C0D7E6E4();
    sub_1C0775810();
    *v15 = 0;
    swift_willThrow();
    sub_1C07878D8();
    goto LABEL_6;
  }
  sub_1C079C900();
  sub_1C07878D8();
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t, void *))(v2 + 8))(v7, v8);
}

uint64_t sub_1C0D7D7DC(const void *a1, void *a2)
{
  _QWORD *v2;
  id v4;
  _QWORD *v5;

  v2[2] = a2;
  v2[3] = _Block_copy(a1);
  v4 = a2;
  v5 = (_QWORD *)swift_task_alloc();
  v2[4] = v5;
  *v5 = v2;
  v5[1] = sub_1C0D7D838;
  return SysdiagnoseXPC.Server.diagnostics()();
}

uint64_t sub_1C0D7D838()
{
  void *v0;
  uint64_t *v1;
  void *v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void (**v9)(_QWORD, _QWORD, _QWORD);

  v2 = v0;
  v3 = *v1;
  v4 = *(void **)(*v1 + 16);
  v5 = *v1;
  swift_task_dealloc();

  if (v0)
  {
    v6 = sub_1C106AA08();

    v7 = 0;
    v8 = (void *)v6;
  }
  else
  {
    v7 = sub_1C106FAF0();
    sub_1C077960C();
    v6 = 0;
    v8 = (void *)v7;
  }
  v9 = *(void (***)(_QWORD, _QWORD, _QWORD))(v3 + 24);
  v9[2](v9, v7, v6);

  _Block_release(v9);
  return (*(uint64_t (**)(void))(v5 + 8))();
}

uint64_t SysdiagnoseXPC.Server.entityTaggingSupplementalDiagnostics()()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 88) = sub_1C07ACF80(&qword_1ED75E630);
  *(_QWORD *)(v0 + 96) = sub_1C0779D74();
  sub_1C077862C();
  return sub_1C077AEC4();
}

uint64_t sub_1C0D7D944()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  os_log_type_t v3;
  _WORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  char v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(void);
  uint64_t v15;
  _BYTE *v16;
  uint64_t (*v17)(void);

  if (qword_1ED75E808 != -1)
    swift_once();
  v2 = sub_1C077585C();
  sub_1C077965C(v2, (uint64_t)qword_1ED78D7A0);
  v3 = sub_1C0784E0C();
  if (sub_1C07758D8(v3))
  {
    v4 = (_WORD *)sub_1C0780FC8();
    sub_1C0780BA4(v4);
    sub_1C0790E38(&dword_1C0771000, v5, v6, "SysdiagnoseXPC: entitytagging supplemental diagnostics");
    sub_1C0776778();
  }

  if (qword_1ED761518 != -1)
    swift_once();
  sub_1C0775864();
  if (qword_1ED7627B8)
  {
    sub_1C078B474(qword_1ED7627B8, (uint64_t)off_1ED7627C0);
    sub_1C079C900();
    if (qword_1ED749CA8 != -1)
      swift_once();
    sub_1C079E000(*(_QWORD *)(v1 + 88), (uint64_t)qword_1ED78C3A8);
    sub_1C0775864();
    sub_1C07A830C();
    v7 = sub_1C0779D10();
    result = sub_1C0794028(v7);
    if (v9)
    {
      __break(1u);
    }
    else
    {
      v10 = (_QWORD *)sub_1C0781510();
      *(_QWORD *)(v1 + 104) = v10;
      v11 = sub_1C0796BD8(v10, (uint64_t)sub_1C0D7DAC8);
      return sub_1C079A220(v11, v12, v13, v14);
    }
  }
  else
  {
    sub_1C0793368();
    v15 = sub_1C0775810();
    sub_1C07A4C34(v15, v16);
    sub_1C07767BC();
    v17 = (uint64_t (*)(void))sub_1C079F470();
    return sub_1C07A4030(v17);
  }
  return result;
}

uint64_t sub_1C0D7DAC8(uint64_t a1, uint64_t a2)
{
  sub_1C07A1528(a1, a2);
  sub_1C078A114();
  sub_1C077862C();
  return sub_1C077AEC4();
}

uint64_t sub_1C0D7DB0C(const void *a1, void *a2)
{
  _QWORD *v2;
  id v4;
  _QWORD *v5;

  v2[2] = a2;
  v2[3] = _Block_copy(a1);
  v4 = a2;
  v5 = (_QWORD *)swift_task_alloc();
  v2[4] = v5;
  *v5 = v2;
  v5[1] = sub_1C0D7EA20;
  return SysdiagnoseXPC.Server.entityTaggingSupplementalDiagnostics()();
}

uint64_t SysdiagnoseXPC.Server.entityRelevanceRankingSupplementalDiagnostics()()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 88) = sub_1C07ACF80(&qword_1ED75E630);
  *(_QWORD *)(v0 + 96) = sub_1C0779D74();
  sub_1C077862C();
  return sub_1C077AEC4();
}

uint64_t sub_1C0D7DBA8()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  os_log_type_t v3;
  _WORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  char v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(void);
  uint64_t v15;
  _BYTE *v16;
  uint64_t (*v17)(void);

  if (qword_1ED75E808 != -1)
    swift_once();
  v2 = sub_1C077585C();
  sub_1C077965C(v2, (uint64_t)qword_1ED78D7A0);
  v3 = sub_1C0784E0C();
  if (sub_1C07758D8(v3))
  {
    v4 = (_WORD *)sub_1C0780FC8();
    sub_1C0780BA4(v4);
    sub_1C0790E38(&dword_1C0771000, v5, v6, "SysdiagnoseXPC: entityRelevanceRanking supplemental diagnostics");
    sub_1C0776778();
  }

  if (qword_1ED761518 != -1)
    swift_once();
  sub_1C0775864();
  if (qword_1ED7627B8)
  {
    sub_1C078B474(qword_1ED7627B8, (uint64_t)off_1ED7627C0);
    sub_1C079C900();
    if (qword_1ED749CA8 != -1)
      swift_once();
    sub_1C079E000(*(_QWORD *)(v1 + 88), (uint64_t)qword_1ED78C3A8);
    sub_1C0775864();
    sub_1C07A830C();
    v7 = sub_1C0779D10();
    result = sub_1C0794028(v7);
    if (v9)
    {
      __break(1u);
    }
    else
    {
      v10 = (_QWORD *)sub_1C0781510();
      *(_QWORD *)(v1 + 104) = v10;
      v11 = sub_1C0796BD8(v10, (uint64_t)sub_1C0D7DAC8);
      return sub_1C079A220(v11, v12, v13, v14);
    }
  }
  else
  {
    sub_1C0793368();
    v15 = sub_1C0775810();
    sub_1C07A4C34(v15, v16);
    sub_1C07767BC();
    v17 = (uint64_t (*)(void))sub_1C079F470();
    return sub_1C07A4030(v17);
  }
  return result;
}

uint64_t sub_1C0D7DD40(const void *a1, void *a2)
{
  _QWORD *v2;
  id v4;
  _QWORD *v5;

  v2[2] = a2;
  v2[3] = _Block_copy(a1);
  v4 = a2;
  v5 = (_QWORD *)swift_task_alloc();
  v2[4] = v5;
  *v5 = v2;
  v5[1] = sub_1C0D7EA20;
  return SysdiagnoseXPC.Server.entityRelevanceRankingSupplementalDiagnostics()();
}

uint64_t SysdiagnoseXPC.Server.entityResolutionSupplementalDiagnostics()()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 88) = sub_1C07ACF80(&qword_1ED75E630);
  *(_QWORD *)(v0 + 96) = sub_1C0779D74();
  sub_1C077862C();
  return sub_1C077AEC4();
}

uint64_t sub_1C0D7DDDC()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  os_log_type_t v3;
  _WORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  char v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(void);
  uint64_t v15;
  _BYTE *v16;
  uint64_t (*v17)(void);

  if (qword_1ED75E808 != -1)
    swift_once();
  v2 = sub_1C077585C();
  sub_1C077965C(v2, (uint64_t)qword_1ED78D7A0);
  v3 = sub_1C0784E0C();
  if (sub_1C07758D8(v3))
  {
    v4 = (_WORD *)sub_1C0780FC8();
    sub_1C0780BA4(v4);
    sub_1C0790E38(&dword_1C0771000, v5, v6, "SysdiagnoseXPC: entityResolution supplemental diagnostics");
    sub_1C0776778();
  }

  if (qword_1ED761518 != -1)
    swift_once();
  sub_1C0775864();
  if (qword_1ED7627B8)
  {
    sub_1C078B474(qword_1ED7627B8, (uint64_t)off_1ED7627C0);
    sub_1C079C900();
    if (qword_1ED749CA8 != -1)
      swift_once();
    sub_1C079E000(*(_QWORD *)(v1 + 88), (uint64_t)qword_1ED78C3A8);
    sub_1C0775864();
    sub_1C07A830C();
    v7 = sub_1C0779D10();
    result = sub_1C0794028(v7);
    if (v9)
    {
      __break(1u);
    }
    else
    {
      v10 = (_QWORD *)sub_1C0781510();
      *(_QWORD *)(v1 + 104) = v10;
      v11 = sub_1C0796BD8(v10, (uint64_t)sub_1C0D7DAC8);
      return sub_1C079A220(v11, v12, v13, v14);
    }
  }
  else
  {
    sub_1C0793368();
    v15 = sub_1C0775810();
    sub_1C07A4C34(v15, v16);
    sub_1C07767BC();
    v17 = (uint64_t (*)(void))sub_1C079F470();
    return sub_1C07A4030(v17);
  }
  return result;
}

uint64_t sub_1C0D7DF74(const void *a1, void *a2)
{
  _QWORD *v2;
  id v4;
  _QWORD *v5;

  v2[2] = a2;
  v2[3] = _Block_copy(a1);
  v4 = a2;
  v5 = (_QWORD *)swift_task_alloc();
  v2[4] = v5;
  *v5 = v2;
  v5[1] = sub_1C0D7EA20;
  return SysdiagnoseXPC.Server.entityResolutionSupplementalDiagnostics()();
}

uint64_t SysdiagnoseXPC.Server.viewsSupplementalDiagnostics()()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 88) = sub_1C07ACF80(&qword_1ED75E630);
  *(_QWORD *)(v0 + 96) = sub_1C0779D74();
  sub_1C077862C();
  return sub_1C077AEC4();
}

uint64_t sub_1C0D7E010()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  os_log_type_t v3;
  _WORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  char v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(void);
  uint64_t v15;
  _BYTE *v16;
  uint64_t (*v17)(void);

  if (qword_1ED75E808 != -1)
    swift_once();
  v2 = sub_1C077585C();
  sub_1C077965C(v2, (uint64_t)qword_1ED78D7A0);
  v3 = sub_1C0784E0C();
  if (sub_1C07758D8(v3))
  {
    v4 = (_WORD *)sub_1C0780FC8();
    sub_1C0780BA4(v4);
    sub_1C0790E38(&dword_1C0771000, v5, v6, "SysdiagnoseXPC: views supplemental diagnostics");
    sub_1C0776778();
  }

  if (qword_1ED761518 != -1)
    swift_once();
  sub_1C0775864();
  if (qword_1ED7627B8)
  {
    sub_1C078B474(qword_1ED7627B8, (uint64_t)off_1ED7627C0);
    sub_1C079C900();
    if (qword_1ED749CA8 != -1)
      swift_once();
    sub_1C079E000(*(_QWORD *)(v1 + 88), (uint64_t)qword_1ED78C3A8);
    sub_1C0775864();
    sub_1C07A830C();
    v7 = sub_1C0779D10();
    result = sub_1C0794028(v7);
    if (v9)
    {
      __break(1u);
    }
    else
    {
      v10 = (_QWORD *)sub_1C0781510();
      *(_QWORD *)(v1 + 104) = v10;
      v11 = sub_1C0796BD8(v10, (uint64_t)sub_1C0D7E194);
      return sub_1C079A220(v11, v12, v13, v14);
    }
  }
  else
  {
    sub_1C0793368();
    v15 = sub_1C0775810();
    sub_1C07A4C34(v15, v16);
    sub_1C07767BC();
    v17 = (uint64_t (*)(void))sub_1C079F470();
    return sub_1C07A4030(v17);
  }
  return result;
}

uint64_t sub_1C0D7E194(uint64_t a1, uint64_t a2)
{
  sub_1C07A1528(a1, a2);
  sub_1C078A114();
  sub_1C077862C();
  return sub_1C077AEC4();
}

uint64_t sub_1C0D7E1C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  _BYTE *v5;
  uint64_t (*v6)(void);

  v1 = *(_QWORD *)(v0 + 112);
  if (v1)
  {
    v2 = *(_QWORD *)(v0 + 72);
    swift_task_dealloc();
    return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v2, v1);
  }
  else
  {
    sub_1C0793368();
    v4 = sub_1C0775810();
    sub_1C07A4C34(v4, v5);
    sub_1C07767BC();
    v6 = (uint64_t (*)(void))sub_1C079F470();
    return v6();
  }
}

uint64_t sub_1C0D7E25C(const void *a1, void *a2)
{
  _QWORD *v2;
  id v4;
  _QWORD *v5;

  v2[2] = a2;
  v2[3] = _Block_copy(a1);
  v4 = a2;
  v5 = (_QWORD *)swift_task_alloc();
  v2[4] = v5;
  *v5 = v2;
  v5[1] = sub_1C0D7EA20;
  return SysdiagnoseXPC.Server.viewsSupplementalDiagnostics()();
}

id SysdiagnoseXPC.Server.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

uint64_t sub_1C0D7E300(uint64_t a1, void *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint8_t *v10;
  id v11;
  id v12;
  uint64_t v13;
  void *v14;
  void *v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  _WORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)();
  uint64_t v24;

  v3 = sub_1C07ACF80(&qword_1ED75E630);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1ED749CA8 != -1)
    swift_once();
  v7 = sub_1C079E000(v3, (uint64_t)qword_1ED78C3A8);
  sub_1C0775864();
  sub_1C07B9D5C(v7, (uint64_t)v6);
  v8 = sub_1C0779D10();
  result = sub_1C07B2D80((uint64_t)v6, 1, v8);
  if ((_DWORD)result == 1)
  {
    __break(1u);
  }
  else
  {
    v10 = *(uint8_t **)&v6[*(int *)(v8 + 20)];
    sub_1C078D09C((uint64_t)v6);
    if ((v10 & 1) != 0)
    {
      if (qword_1ED75E808 != -1)
        swift_once();
      v16 = sub_1C077585C();
      v17 = sub_1C077965C(v16, (uint64_t)qword_1ED78D7A0);
      v18 = sub_1C10703A8();
      if (sub_1C077F60C(v18))
      {
        v19 = (_WORD *)sub_1C0780FC8();
        sub_1C078C17C(v19);
        sub_1C077F048(&dword_1C0771000, v17, (os_log_type_t)a2, "SysdiagnoseXPC: service is in no-op mode.", v10);
        sub_1C0776778();
      }

    }
    else
    {
      sub_1C07B8CF8();
      if ((sub_1C0C47FA8() & 1) != 0)
      {
        v11 = objc_msgSend((id)objc_opt_self(), sel_interfaceWithProtocol_, &unk_1EF6D71D8);
        sub_1C0784EE0((uint64_t)v11, sel_setExportedInterface_);

        v12 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for SysdiagnoseXPC.Server()), sel_init);
        sub_1C0784EE0((uint64_t)v12, sel_setExportedObject_);

        v23 = sub_1C0D7E58C;
        v24 = 0;
        v13 = MEMORY[0x1E0C809B0];
        v21 = MEMORY[0x1E0C809B0];
        v22 = 1107296256;
        v14 = sub_1C077E8F4((uint64_t)&unk_1E7A321A8);
        sub_1C0784EE0((uint64_t)v14, sel_setInterruptionHandler_);
        _Block_release(v14);
        v23 = sub_1C0D7E5A0;
        v24 = 0;
        v21 = v13;
        v22 = 1107296256;
        v15 = sub_1C077E8F4((uint64_t)&unk_1E7A321D0);
        sub_1C0784EE0((uint64_t)v15, sel_setInvalidationHandler_);
        _Block_release(v15);
        objc_msgSend(a2, sel_resume);
        return 1;
      }
    }
    return 0;
  }
  return result;
}

void sub_1C0D7E58C()
{
  sub_1C0D7E5B4(MEMORY[0x1E0DF2280], "SysdiagnoseXPC: connection interrupted.");
}

void sub_1C0D7E5A0()
{
  sub_1C0D7E5B4(MEMORY[0x1E0DF2290], "SysdiagnoseXPC: connection invalidated.");
}

void sub_1C0D7E5B4(uint64_t (*a1)(void), const char *a2)
{
  uint64_t v4;
  os_log_type_t v5;
  _WORD *v6;
  NSObject *oslog;

  if (qword_1ED75E808 != -1)
    swift_once();
  v4 = sub_1C077585C();
  oslog = sub_1C077965C(v4, (uint64_t)qword_1ED78D7A0);
  v5 = a1();
  if (os_log_type_enabled(oslog, v5))
  {
    v6 = (_WORD *)sub_1C0780FC8();
    sub_1C078C17C(v6);
    sub_1C077F048(&dword_1C0771000, oslog, v5, a2, (uint8_t *)a1);
    sub_1C0776778();
  }

}

unint64_t sub_1C0D7E6E4()
{
  unint64_t result;

  result = qword_1EF648E48;
  if (!qword_1EF648E48)
  {
    result = MEMORY[0x1C3BA8174](&protocol conformance descriptor for SysdiagnoseXPC.SysdiagnoseXPCError, &type metadata for SysdiagnoseXPC.SysdiagnoseXPCError);
    atomic_store(result, (unint64_t *)&qword_1EF648E48);
  }
  return result;
}

unint64_t sub_1C0D7E724()
{
  unint64_t result;

  result = qword_1EF648E78;
  if (!qword_1EF648E78)
  {
    result = MEMORY[0x1C3BA8174](&protocol conformance descriptor for SysdiagnoseXPC.SysdiagnoseXPCError, &type metadata for SysdiagnoseXPC.SysdiagnoseXPCError);
    atomic_store(result, (unint64_t *)&qword_1EF648E78);
  }
  return result;
}

uint64_t type metadata accessor for SysdiagnoseXPC()
{
  return objc_opt_self();
}

uint64_t storeEnumTagSinglePayload for SysdiagnoseXPC.SysdiagnoseXPCError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1C0D7E7CC + 4 * byte_1C10BAFF5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1C0D7E800 + 4 * byte_1C10BAFF0[v4]))();
}

uint64_t sub_1C0D7E800(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C0D7E808(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C0D7E810);
  return result;
}

uint64_t sub_1C0D7E81C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C0D7E824);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1C0D7E828(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C0D7E830(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SysdiagnoseXPC.SysdiagnoseXPCError()
{
  return &type metadata for SysdiagnoseXPC.SysdiagnoseXPCError;
}

uint64_t type metadata accessor for SysdiagnoseXPC.Server()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for SysdiagnoseXPC.Delegate()
{
  return objc_opt_self();
}

uint64_t sub_1C0D7E890()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(void);

  v1 = (_QWORD *)sub_1C07804E8();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = sub_1C077B274(v1, (uint64_t)sub_1C08B8620);
  return sub_1C07815D4(v2, v3, v4);
}

uint64_t sub_1C0D7E8D4()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(void);

  v1 = (_QWORD *)sub_1C07804E8();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = sub_1C077B274(v1, (uint64_t)sub_1C08B8620);
  return sub_1C07815D4(v2, v3, v4);
}

uint64_t sub_1C0D7E918()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(void);

  v1 = (_QWORD *)sub_1C07804E8();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = sub_1C077B274(v1, (uint64_t)sub_1C08B8620);
  return sub_1C07815D4(v2, v3, v4);
}

uint64_t sub_1C0D7E95C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(void);

  v1 = (_QWORD *)sub_1C07804E8();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = sub_1C077B274(v1, (uint64_t)sub_1C08B8620);
  return sub_1C07815D4(v2, v3, v4);
}

uint64_t sub_1C0D7E9A0()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(void);

  v1 = (_QWORD *)sub_1C07804E8();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = sub_1C077B274(v1, (uint64_t)sub_1C0806670);
  return sub_1C07815D4(v2, v3, v4);
}

uint64_t sub_1C0D7E9E0(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1C07ACF80(&qword_1ED75E630);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1C0D7EA8C()
{
  sub_1C0AA7704();
}

uint64_t sub_1C0D7EA98(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  BOOL v11;
  uint64_t v12;
  int v13;
  uint64_t result;
  uint64_t v15;

  v5 = sub_1C07ACF80(&qword_1EF6490C8);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v15 - v9;
  v11 = a1 == 0x64695F6E656B6F74 && a2 == 0xE900000000000073;
  if (!v11 && (sub_1C1070CB4() & 1) == 0)
    return 0;
  v12 = v2 + OBJC_IVAR____TtC24IntelligencePlatformCore24TaskClassifierModelInput_encoderCharInput;
  sub_1C0D7EDE0(v12, (uint64_t)v10);
  sub_1C07ACF80(qword_1EF648F78);
  v13 = sub_1C07A6D60((uint64_t)v10);
  sub_1C0D7EE28((uint64_t)v10);
  if (v13 == 1)
    return 0;
  sub_1C0D7EDE0(v12, (uint64_t)v7);
  result = sub_1C07A6D60((uint64_t)v7);
  if ((_DWORD)result == 1)
  {
    __break(1u);
  }
  else
  {
    sub_1C07D97D4();
    return sub_1C10703B4();
  }
  return result;
}

uint64_t sub_1C0D7EC68()
{
  uint64_t v0;

  sub_1C0D7EE28(v0 + OBJC_IVAR____TtC24IntelligencePlatformCore24TaskClassifierModelInput_encoderCharInput);
  return swift_deallocClassInstance();
}

uint64_t sub_1C0D7EC98()
{
  return type metadata accessor for TaskClassifierModelInput();
}

uint64_t type metadata accessor for TaskClassifierModelInput()
{
  uint64_t result;

  result = qword_1EF648F60;
  if (!qword_1EF648F60)
    return swift_getSingletonMetadata();
  return result;
}

void sub_1C0D7ECD8()
{
  unint64_t v0;

  sub_1C0D7ED44();
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

void sub_1C0D7ED44()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF648F70)
  {
    sub_1C07D4BEC(qword_1EF648F78);
    v0 = sub_1C1070564();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF648F70);
  }
}

uint64_t sub_1C0D7ED9C()
{
  uint64_t v0;

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for TaskClassifierModel()
{
  return objc_opt_self();
}

uint64_t sub_1C0D7EDE0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1C07ACF80(&qword_1EF6490C8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C0D7EE28(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1C07ACF80(&qword_1EF6490C8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1C0D7EEC0()
{
  sub_1C0AA7704();
}

uint64_t sub_1C0D7EECC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  BOOL v11;
  uint64_t v12;
  int v13;
  uint64_t result;
  uint64_t v15;

  v5 = sub_1C07ACF80(&qword_1EF6490C8);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v15 - v9;
  v11 = a1 == 0x64695F6E656B6F74 && a2 == 0xE900000000000073;
  if (!v11 && (sub_1C1070CB4() & 1) == 0)
    return 0;
  v12 = v2 + OBJC_IVAR____TtC24IntelligencePlatformCore23TaskExtractorModelInput_encoderCharInput;
  sub_1C0D7EDE0(v12, (uint64_t)v10);
  sub_1C07ACF80(qword_1EF648F78);
  v13 = sub_1C07A6D60((uint64_t)v10);
  sub_1C0D7EE28((uint64_t)v10);
  if (v13 == 1)
    return 0;
  sub_1C0D7EDE0(v12, (uint64_t)v7);
  result = sub_1C07A6D60((uint64_t)v7);
  if ((_DWORD)result == 1)
  {
    __break(1u);
  }
  else
  {
    sub_1C07D97D4();
    return sub_1C10703B4();
  }
  return result;
}

uint64_t sub_1C0D7F09C()
{
  uint64_t v0;

  sub_1C0D7EE28(v0 + OBJC_IVAR____TtC24IntelligencePlatformCore23TaskExtractorModelInput_encoderCharInput);
  return swift_deallocClassInstance();
}

uint64_t sub_1C0D7F0CC()
{
  return type metadata accessor for TaskExtractorModelInput();
}

uint64_t type metadata accessor for TaskExtractorModelInput()
{
  uint64_t result;

  result = qword_1EF6490F8;
  if (!qword_1EF6490F8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t type metadata accessor for TaskExtractorModel()
{
  return objc_opt_self();
}

uint64_t sub_1C0D7F12C()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1C0D7F178()
{
  sub_1C0D7F12C();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for TaskSpanModel()
{
  return objc_opt_self();
}

uint64_t sub_1C0D7F1B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(char *, uint64_t, uint64_t);
  uint64_t v17;
  void (*v18)(char *, uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  _QWORD v29[2];
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v4 = v3;
  v35 = a3;
  v7 = sub_1C07ACF80((uint64_t *)&unk_1ED762690);
  MEMORY[0x1E0C80A78](v7);
  v32 = (char *)v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for FeatureProviderSnapshot(0);
  v33 = *(_QWORD *)(v9 - 8);
  v34 = v9;
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *(_QWORD *)(a1 + 16);
  if (v12)
  {
    v36 = MEMORY[0x1E0DEE9D8];
    sub_1C09D3218();
    v13 = sub_1C106ADE0();
    v14 = *(_QWORD *)(v13 - 8);
    v15 = a1 + ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80));
    v30 = *(_QWORD *)(v14 + 72);
    v31 = a2;
    v16 = *(void (**)(char *, uint64_t, uint64_t))(v14 + 16);
    v29[0] = v13;
    v29[1] = v16;
    v17 = v13;
    v18 = v16;
    do
    {
      v19 = (uint64_t)v32;
      v18(v32, v15, v17);
      sub_1C07B2D8C(v19, 0, 1, v17);
      v20 = sub_1C0D7F9D0(v19);
      sub_1C077CDB4(v19);
      v21 = v35;
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      v22 = v21;
      v23 = v4;
      sub_1C07E7D3C(v20, v22);
      swift_bridgeObjectRelease();
      sub_1C089B840();
      v25 = v24;
      swift_release();
      v18(v11, v15, v17);
      *(_QWORD *)&v11[*(int *)(v34 + 20)] = v25;
      v26 = v36;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1C09D3218();
        v26 = v36;
      }
      v27 = *(_QWORD *)(v26 + 16);
      if (v27 >= *(_QWORD *)(v26 + 24) >> 1)
      {
        sub_1C09D3218();
        v26 = v36;
      }
      *(_QWORD *)(v26 + 16) = v27 + 1;
      sub_1C07E7EF8((uint64_t)v11, v26+ ((*(unsigned __int8 *)(v33 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v33 + 80))+ *(_QWORD *)(v33 + 72) * v27);
      v15 += v30;
      --v12;
      v4 = v23;
    }
    while (v12);
    swift_release();
  }
  else
  {
    swift_release();
    v26 = MEMORY[0x1E0DEE9D8];
  }
  swift_bridgeObjectRelease();
  return v26;
}

void sub_1C0D7F498()
{
  sub_1C09D30E0();
  __asm { BR              X9 }
}

uint64_t sub_1C0D7F670@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  type metadata accessor for DateFetcher();
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v4);
  sub_1C0780A08();
  v5 = v1 + OBJC_IVAR____TtC24IntelligencePlatformCore17TimeAndDateSignal_dateFetcher;
  swift_beginAccess();
  sub_1C0D80374(v5, v2);
  v6 = sub_1C077AE98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, v2, v6);
  return sub_1C0D803B8(v2);
}

void sub_1C0D7F708()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v0 = sub_1C077AE98();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v11 - v5;
  v7 = sub_1C106AFE4();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  sub_1C07795DC();
  sub_1C0D7F824(MEMORY[0x1E0CB1140], (void (*)(uint64_t))MEMORY[0x1E0CAE9F8]);
  v10 = v9;
  sub_1C106AFC0();
  if (v10 > 17)
  {
    sub_1C0D7F670((uint64_t)v3);
    sub_1C106ACA8();
  }
  else
  {
    sub_1C0D7F670((uint64_t)v6);
  }
  sub_1C106AF54();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v6, v0);
  sub_1C0794D38(*(uint64_t (**)(uint64_t, uint64_t))(v8 + 8));
  sub_1C0776760();
}

void sub_1C0D7F824(unsigned int *a1, void (*a2)(uint64_t))
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;

  v4 = sub_1C077AE98();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  sub_1C07795DC();
  v6 = sub_1C106A918();
  v13 = *(_QWORD *)(v6 - 8);
  v14 = v6;
  MEMORY[0x1E0C80A78](v6);
  sub_1C07785B8();
  sub_1C07ACF80(&qword_1ED75D2C0);
  v7 = sub_1C106AFCC();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_1C1079220;
  (*(void (**)(unint64_t, _QWORD, uint64_t))(v8 + 104))(v10 + v9, *a1, v7);
  sub_1C0AA92D0();
  sub_1C0D7F670(v3);
  sub_1C106AF3C();
  swift_bridgeObjectRelease();
  v11 = sub_1C0794D38(*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8));
  a2(v11);
  if ((v12 & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v2, v14);
    sub_1C0776760();
  }
}

uint64_t sub_1C0D7F978()
{
  uint64_t v0;

  sub_1C0D7F824(MEMORY[0x1E0CB1140], (void (*)(uint64_t))MEMORY[0x1E0CAE9F8]);
  if ((unint64_t)(v0 - 13) > 0xFFFFFFFFFFFFFFF9)
    return 0;
  if ((unint64_t)(v0 - 13) < 4)
    return 1;
  if ((unint64_t)(v0 - 17) < 3)
    return 2;
  return 3;
}

uint64_t sub_1C0D7F9D0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t);
  uint64_t v11;
  uint64_t inited;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  type metadata accessor for DateFetcher();
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v6);
  sub_1C077B6C0();
  sub_1C07ACF80((uint64_t *)&unk_1ED762690);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v7);
  sub_1C0780A08();
  v8 = sub_1C077AE98();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  sub_1C07785B8();
  sub_1C077CD6C(a1, v3);
  if (sub_1C07B2D80(v3, 1, v8) == 1)
  {
    sub_1C077CDB4(v3);
  }
  else
  {
    v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 32);
    v10(v4, v3, v8);
    v10(v1, v4, v8);
    v11 = v2 + OBJC_IVAR____TtC24IntelligencePlatformCore17TimeAndDateSignal_dateFetcher;
    swift_beginAccess();
    sub_1C0D80330(v1, v11);
    swift_endAccess();
  }
  sub_1C07ACF80(&qword_1ED755050);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C108CFE0;
  *(_QWORD *)(inited + 32) = 0x68746E6F6DLL;
  *(_QWORD *)(inited + 40) = 0xE500000000000000;
  sub_1C0D7F824(MEMORY[0x1E0CB1160], (void (*)(uint64_t))MEMORY[0x1E0CAEA20]);
  v14 = v13;
  v15 = (void *)objc_opt_self();
  *(_QWORD *)(inited + 48) = objc_msgSend(v15, sel_featureValueWithInt64_, v14);
  strcpy((char *)(inited + 56), "day_of_month");
  *(_BYTE *)(inited + 69) = 0;
  *(_WORD *)(inited + 70) = -5120;
  sub_1C0D7F824(MEMORY[0x1E0CB1130], (void (*)(uint64_t))MEMORY[0x1E0CAE9C8]);
  *(_QWORD *)(inited + 72) = sub_1C07A1550(v16);
  *(_QWORD *)(inited + 80) = 0x775F666F5F796164;
  *(_QWORD *)(inited + 88) = 0xEB000000006B6565;
  sub_1C0D7F824(MEMORY[0x1E0CB1198], MEMORY[0x1E0CAEA68]);
  *(_QWORD *)(inited + 96) = sub_1C07A1550(v17);
  *(_QWORD *)(inited + 104) = 0x656B6565775F7369;
  *(_QWORD *)(inited + 112) = 0xEA0000000000646ELL;
  sub_1C0D7F708();
  v19 = sub_1C07A1550(v18);
  sub_1C07A4C48();
  *(_QWORD *)(inited + 120) = v20;
  *(_QWORD *)(inited + 128) = v21;
  *(_QWORD *)(inited + 136) = 0xEB00000000796164;
  sub_1C0D7F824(MEMORY[0x1E0CB1140], (void (*)(uint64_t))MEMORY[0x1E0CAE9F8]);
  *(_QWORD *)(inited + 144) = sub_1C07A1550(v22);
  *(_QWORD *)(inited + 152) = 0x685F666F5F6E696DLL;
  *(_QWORD *)(inited + 160) = 0xEB0000000072756FLL;
  sub_1C079E980();
  v24 = sub_1C07A1550(v23);
  sub_1C07883F8();
  *(_QWORD *)(inited + 168) = v25;
  *(_QWORD *)(inited + 176) = v26;
  *(_QWORD *)(inited + 184) = 0xEB00000000796164;
  v27 = sub_1C0D7F978();
  *(_QWORD *)(inited + 192) = sub_1C07A1550(v27);
  *(_QWORD *)(inited + 200) = 0xD000000000000017;
  *(_QWORD *)(inited + 208) = 0x80000001C10E98B0;
  sub_1C079E980();
  *(_QWORD *)(inited + 216) = objc_msgSend(v15, sel_featureValueWithInt64_, v28 / 5);
  sub_1C07D97D4();
  return sub_1C106F97C();
}

uint64_t sub_1C0D7FD24@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;
  uint64_t result;

  swift_retain();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  result = sub_1C0D7F1B8(a2, v3, a1);
  *a3 = result;
  return result;
}

uint64_t sub_1C0D7FD78()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_1C07ACF80((uint64_t *)&unk_1ED762690);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v1);
  sub_1C077B6C0();
  v2 = sub_1C077AE98();
  sub_1C07B2D8C(v0, 1, 1, v2);
  v3 = sub_1C0D7F9D0(v0);
  sub_1C077CDB4(v0);
  return v3;
}

id sub_1C0D7FDE4(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  unsigned int *v5;
  void (*v6)(uint64_t);
  uint64_t v7;
  uint64_t v8;
  BOOL v10;
  BOOL v11;
  BOOL v12;
  uint64_t v13;
  BOOL v14;
  BOOL v15;
  uint64_t v16;
  BOOL v17;
  uint64_t v18;

  v2 = a1 == 0x68746E6F6DLL && a2 == 0xE500000000000000;
  if (v2 || (sub_1C07A69D8() & 1) != 0)
  {
    v5 = (unsigned int *)MEMORY[0x1E0CB1160];
    v6 = (void (*)(uint64_t))MEMORY[0x1E0CAEA20];
LABEL_7:
    sub_1C0D7F824(v5, v6);
LABEL_8:
    v8 = v7;
    return objc_msgSend((id)objc_opt_self(), sel_featureValueWithInt64_, v8);
  }
  v10 = a1 == 0x6D5F666F5F796164 && a2 == 0xEC00000068746E6FLL;
  if (v10 || (sub_1C07A69D8() & 1) != 0)
  {
    v5 = (unsigned int *)MEMORY[0x1E0CB1130];
    v6 = (void (*)(uint64_t))MEMORY[0x1E0CAE9C8];
    goto LABEL_7;
  }
  v11 = a1 == 0x775F666F5F796164 && a2 == 0xEB000000006B6565;
  if (v11 || (sub_1C07A69D8() & 1) != 0)
  {
    v5 = (unsigned int *)MEMORY[0x1E0CB1198];
    v6 = (void (*)(uint64_t))MEMORY[0x1E0CAEA68];
    goto LABEL_7;
  }
  v12 = a1 == 0x656B6565775F7369 && a2 == 0xEA0000000000646ELL;
  if (v12 || (sub_1C07A69D8() & 1) != 0)
  {
    sub_1C0D7F708();
    goto LABEL_8;
  }
  sub_1C07A4C48();
  v14 = a1 == v13 && a2 == 0xEB00000000796164;
  if (v14 || (sub_1C07A69D8() & 1) != 0)
  {
    v5 = (unsigned int *)MEMORY[0x1E0CB1140];
    v6 = (void (*)(uint64_t))MEMORY[0x1E0CAE9F8];
    goto LABEL_7;
  }
  v15 = a1 == 0x685F666F5F6E696DLL && a2 == 0xEB0000000072756FLL;
  if (v15 || (sub_1C07A69D8() & 1) != 0)
  {
    v5 = (unsigned int *)MEMORY[0x1E0CB1178];
    v6 = (void (*)(uint64_t))MEMORY[0x1E0CAEA38];
    goto LABEL_7;
  }
  sub_1C07883F8();
  v17 = a1 == v16 && a2 == 0xEB00000000796164;
  if (v17 || (sub_1C07A69D8() & 1) != 0)
  {
    v7 = sub_1C0D7F978();
    goto LABEL_8;
  }
  if (a1 == 0xD000000000000017 && a2 == 0x80000001C10E98B0 || (sub_1C07A69D8() & 1) != 0)
  {
    sub_1C0D7F824(MEMORY[0x1E0CB1178], (void (*)(uint64_t))MEMORY[0x1E0CAEA38]);
    v8 = v18 / 5;
    return objc_msgSend((id)objc_opt_self(), sel_featureValueWithInt64_, v8);
  }
  return 0;
}

uint64_t sub_1C0D80140()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_1C0D803B8(v0 + OBJC_IVAR____TtC24IntelligencePlatformCore17TimeAndDateSignal_dateFetcher);
  v1 = v0 + OBJC_IVAR____TtC24IntelligencePlatformCore17TimeAndDateSignal_calendar;
  v2 = sub_1C106AFE4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance();
}

uint64_t sub_1C0D801A0()
{
  return type metadata accessor for TimeAndDateSignal();
}

uint64_t type metadata accessor for TimeAndDateSignal()
{
  uint64_t result;

  result = qword_1EF649320;
  if (!qword_1EF649320)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1C0D801E0()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_1C106ADE0();
  if (v1 <= 0x3F)
  {
    result = sub_1C106AFE4();
    if (v2 <= 0x3F)
    {
      result = swift_updateClassMetadata2();
      if (!result)
        return 0;
    }
  }
  return result;
}

uint64_t sub_1C0D80268()
{
  return sub_1C0D7FD78();
}

uint64_t sub_1C0D80288@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1C0D7FD24(a1, a2, a3);
}

void sub_1C0D802A8()
{
  sub_1C0D7F498();
}

uint64_t sub_1C0D802BC()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_1C0D802CC(uint64_t a1)
{
  unint64_t result;

  result = sub_1C0D802F0();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1C0D802F0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF649358;
  if (!qword_1EF649358)
  {
    v1 = type metadata accessor for TimeAndDateSignal();
    result = MEMORY[0x1C3BA8174](&unk_1C10BB274, v1);
    atomic_store(result, (unint64_t *)&qword_1EF649358);
  }
  return result;
}

uint64_t sub_1C0D80330(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for DateFetcher();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C0D80374(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for DateFetcher();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C0D803B8(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for DateFetcher();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1C0D8044C()
{
  sub_1C0AA7704();
}

uint64_t sub_1C0D80458(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  BOOL v11;
  uint64_t v12;
  int v13;
  uint64_t result;
  uint64_t v15;

  v5 = sub_1C07ACF80(&qword_1EF6490C8);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v15 - v9;
  v11 = a1 == 0x64695F6E656B6F74 && a2 == 0xE900000000000073;
  if (!v11 && (sub_1C1070CB4() & 1) == 0)
    return 0;
  v12 = v2 + OBJC_IVAR____TtC24IntelligencePlatformCore23ToolSuggesterModelInput_encoderCharInput;
  sub_1C0D7EDE0(v12, (uint64_t)v10);
  sub_1C07ACF80(qword_1EF648F78);
  v13 = sub_1C07A6D60((uint64_t)v10);
  sub_1C0D7EE28((uint64_t)v10);
  if (v13 == 1)
    return 0;
  sub_1C0D7EDE0(v12, (uint64_t)v7);
  result = sub_1C07A6D60((uint64_t)v7);
  if ((_DWORD)result == 1)
  {
    __break(1u);
  }
  else
  {
    sub_1C07D97D4();
    return sub_1C10703B4();
  }
  return result;
}

uint64_t sub_1C0D80628()
{
  uint64_t v0;

  sub_1C0D7EE28(v0 + OBJC_IVAR____TtC24IntelligencePlatformCore23ToolSuggesterModelInput_encoderCharInput);
  return swift_deallocClassInstance();
}

uint64_t sub_1C0D80658()
{
  return type metadata accessor for ToolSuggesterModelInput();
}

uint64_t type metadata accessor for ToolSuggesterModelInput()
{
  uint64_t result;

  result = qword_1EF649388;
  if (!qword_1EF649388)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1C0D80698()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1C0D806BC()
{
  sub_1C0D80698();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ToolSuggesterModel()
{
  return objc_opt_self();
}

void TopicMatcher.init(stores:source:pipelineType:)(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X2>, uint64_t a4@<X8>)
{
  char v7;
  int *v8;

  v7 = *a3;
  v8 = (int *)type metadata accessor for TopicMatcher();
  *(_DWORD *)(a4 + v8[7]) = 1056964608;
  *(_BYTE *)(a4 + v8[8]) = 2;
  sub_1C106D18C();
  sub_1C07E05F4(a1, a4, (uint64_t (*)(_QWORD))type metadata accessor for PhaseStores);
  sub_1C07E05F4(a2, a4 + v8[5], (uint64_t (*)(_QWORD))type metadata accessor for Source);
  *(_BYTE *)(a4 + v8[6]) = v7;
}

uint64_t type metadata accessor for TopicMatcher()
{
  uint64_t result;

  result = qword_1ED75A6E8;
  if (!qword_1ED75A6E8)
    return swift_getSingletonMetadata();
  return result;
}

void TopicMatcher.stores.getter(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_1C07E05C8(v1, a1, (uint64_t (*)(_QWORD))type metadata accessor for PhaseStores);
}

void TopicMatcher.source.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = sub_1C0794048();
  sub_1C07E05C8(v1 + *(int *)(v2 + 20), v0, (uint64_t (*)(_QWORD))type metadata accessor for Source);
  sub_1C0778534();
}

void TopicMatcher.pipelineType.getter()
{
  _BYTE *v0;
  uint64_t v1;

  *v0 = *(_BYTE *)(v1 + *(int *)(sub_1C0794048() + 24));
  sub_1C0778534();
}

void TopicMatcher.stageName.getter()
{
  _BYTE *v0;
  uint64_t v1;

  *v0 = *(_BYTE *)(v1 + *(int *)(sub_1C0794048() + 32));
  sub_1C0778534();
}

uint64_t TopicMatcher.entityClass.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = v1 + *(int *)(sub_1C0794048() + 36);
  v3 = sub_1C0776744();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(v0, v2, v3);
}

float sub_1C0D808A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t *v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  uint64_t v71;
  char v72;
  uint64_t v73;
  unint64_t v74;
  int v75;
  uint64_t v76;
  unint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  unint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char v92;
  uint64_t v93;
  unint64_t v94;
  uint64_t v95;
  uint64_t v96;
  unint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  unint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  unint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  char v113;
  uint64_t v114;
  unint64_t v115;
  uint64_t *v116;
  char *v117;
  uint64_t v118;
  char v120;
  float result;
  int v122;
  uint64_t v123;
  uint64_t v124;
  unint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  char *v129;
  uint64_t v130;
  char v132;
  uint64_t v133;
  unint64_t v134;
  uint64_t v135;
  uint64_t *v136;
  uint64_t v137;
  uint64_t v138;
  char v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t *v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  unint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  unint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  char *v161;
  char v163;
  uint64_t v164;
  unint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t *v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  unint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  char v185;
  char v186;
  uint64_t *v187;
  uint64_t v188;
  uint64_t v189;
  char v191;
  uint64_t v192;
  char *v193;
  char *v194;
  char *v195;
  char *v196;
  char *v197;
  uint64_t v198;
  char *v199;
  uint64_t v200;
  uint64_t v201;
  char *v202;
  uint64_t v203;
  char *v204;
  uint64_t v205;
  char *v206;
  unint64_t v207;
  uint64_t v208;
  char *v209;
  char *v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;

  v216 = sub_1C106E41C();
  v219 = *(_QWORD *)(v216 - 8);
  MEMORY[0x1E0C80A78](v216);
  v210 = (char *)&v192 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v209 = (char *)&v192 - v6;
  v221 = type metadata accessor for EntityTriple(0);
  v7 = *(_QWORD *)(v221 - 8);
  MEMORY[0x1E0C80A78](v221);
  v9 = (char *)&v192 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v215 = (uint64_t)&v192 - v11;
  MEMORY[0x1E0C80A78](v12);
  v212 = (uint64_t)&v192 - v13;
  MEMORY[0x1E0C80A78](v14);
  v213 = (uint64_t)&v192 - v15;
  MEMORY[0x1E0C80A78](v16);
  v220 = (uint64_t)&v192 - v17;
  MEMORY[0x1E0C80A78](v18);
  v214 = (uint64_t)&v192 - v19;
  MEMORY[0x1E0C80A78](v20);
  v218 = (uint64_t)&v192 - v21;
  MEMORY[0x1E0C80A78](v22);
  v217 = (uint64_t)&v192 - v23;
  MEMORY[0x1E0C80A78](v24);
  v203 = (uint64_t)&v192 - v25;
  MEMORY[0x1E0C80A78](v26);
  v199 = (char *)&v192 - v27;
  MEMORY[0x1E0C80A78](v28);
  v204 = (char *)&v192 - v29;
  MEMORY[0x1E0C80A78](v30);
  v205 = (uint64_t)&v192 - v31;
  MEMORY[0x1E0C80A78](v32);
  v202 = (char *)&v192 - v33;
  MEMORY[0x1E0C80A78](v34);
  v36 = (char *)&v192 - v35;
  MEMORY[0x1E0C80A78](v37);
  v208 = (uint64_t)&v192 - v38;
  MEMORY[0x1E0C80A78](v39);
  v41 = (char *)&v192 - v40;
  MEMORY[0x1E0C80A78](v42);
  v44 = (char *)&v192 - v43;
  v45 = sub_1C07ACF80(&qword_1ED75A508);
  MEMORY[0x1E0C80A78](v45);
  v192 = (uint64_t)&v192 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v47);
  v195 = (char *)&v192 - v48;
  MEMORY[0x1E0C80A78](v49);
  v193 = (char *)&v192 - v50;
  MEMORY[0x1E0C80A78](v51);
  v196 = (char *)&v192 - v52;
  MEMORY[0x1E0C80A78](v53);
  v194 = (char *)&v192 - v54;
  MEMORY[0x1E0C80A78](v55);
  v197 = (char *)&v192 - v56;
  v224 = MEMORY[0x1E0DEE9D8];
  v57 = *(_QWORD *)(a1 + 16);
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  v201 = a2;
  v200 = v7;
  v211 = a1;
  v198 = v57;
  v206 = v36;
  if (v57)
  {
    v58 = *(_QWORD *)(v7 + 72);
    v207 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
    v59 = a1 + v207;
    v60 = v57;
    do
    {
      sub_1C07E05C8(v59, (uint64_t)v44, type metadata accessor for EntityTriple);
      if ((sub_1C106FD24() & 1) != 0)
      {
        sub_1C07E05F4((uint64_t)v44, (uint64_t)v9, type metadata accessor for EntityTriple);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          sub_1C09D3F18();
        v61 = v224;
        v62 = *(_QWORD *)(v224 + 16);
        if (v62 >= *(_QWORD *)(v224 + 24) >> 1)
        {
          sub_1C09D3F18();
          v61 = v224;
        }
        *(_QWORD *)(v61 + 16) = v62 + 1;
        sub_1C07E05F4((uint64_t)v9, v61 + v207 + v62 * v58, type metadata accessor for EntityTriple);
      }
      else
      {
        sub_1C07B1F90((uint64_t)v44, type metadata accessor for EntityTriple);
      }
      v59 += v58;
      --v60;
    }
    while (v60);
    a2 = v201;
    v7 = v200;
    v36 = v206;
  }
  swift_bridgeObjectRelease();
  v63 = (uint64_t)v197;
  sub_1C0AA49F4();
  swift_release();
  v64 = v221;
  if (sub_1C07B2D80(v63, 1, v221) == 1)
  {
    v65 = v211;
LABEL_27:
    sub_1C0784B6C(v63, &qword_1ED75A508);
    goto LABEL_28;
  }
  v66 = (unint64_t *)(v63 + *(int *)(v64 + 32));
  v67 = (char *)v66[1];
  v207 = *v66;
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C07B1F90(v63, type metadata accessor for EntityTriple);
  v224 = MEMORY[0x1E0DEE9D8];
  v68 = *(_QWORD *)(a2 + 16);
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  if (v68)
  {
    v197 = v67;
    v69 = *(_QWORD *)(v7 + 72);
    v70 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
    v71 = a2 + v70;
    do
    {
      sub_1C07E05C8(v71, (uint64_t)v41, type metadata accessor for EntityTriple);
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      v72 = sub_1C106FD24();
      swift_bridgeObjectRelease();
      if ((v72 & 1) != 0)
      {
        sub_1C07E05F4((uint64_t)v41, v208, type metadata accessor for EntityTriple);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          sub_1C09D3F18();
        v73 = v224;
        v74 = *(_QWORD *)(v224 + 16);
        if (v74 >= *(_QWORD *)(v224 + 24) >> 1)
        {
          sub_1C09D3F18();
          v73 = v224;
        }
        *(_QWORD *)(v73 + 16) = v74 + 1;
        sub_1C07E05F4(v208, v73 + v70 + v74 * v69, type metadata accessor for EntityTriple);
      }
      else
      {
        sub_1C07B1F90((uint64_t)v41, type metadata accessor for EntityTriple);
      }
      v71 += v69;
      --v68;
    }
    while (v68);
    v64 = v221;
    a2 = v201;
    v7 = v200;
    v67 = v197;
  }
  swift_bridgeObjectRelease();
  v63 = (uint64_t)v194;
  sub_1C0AA49F4();
  swift_release();
  v75 = sub_1C07B2D80(v63, 1, v64);
  v65 = v211;
  v36 = v206;
  if (v75 == 1)
  {
    swift_bridgeObjectRelease();
    goto LABEL_27;
  }
  v116 = (uint64_t *)(v63 + *(int *)(v64 + 32));
  v118 = *v116;
  v117 = (char *)v116[1];
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C07B1F90(v63, type metadata accessor for EntityTriple);
  if (v207 == v118 && v67 == v117)
    goto LABEL_156;
  v120 = sub_1C1070CB4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  result = 1.0;
  if ((v120 & 1) != 0)
    return result;
LABEL_28:
  v224 = MEMORY[0x1E0DEE9D8];
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  v76 = v198;
  if (v198)
  {
    v77 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
    v78 = *(_QWORD *)(v7 + 72);
    v79 = v65 + v77;
    do
    {
      sub_1C07E05C8(v79, (uint64_t)v36, type metadata accessor for EntityTriple);
      if ((sub_1C106FD24() & 1) != 0)
      {
        sub_1C07E05F4((uint64_t)v36, v215, type metadata accessor for EntityTriple);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          sub_1C09D3F18();
        v80 = v224;
        v81 = *(_QWORD *)(v224 + 16);
        if (v81 >= *(_QWORD *)(v224 + 24) >> 1)
        {
          sub_1C09D3F18();
          v80 = v224;
        }
        *(_QWORD *)(v80 + 16) = v81 + 1;
        sub_1C07E05F4(v215, v80 + v77 + v81 * v78, type metadata accessor for EntityTriple);
        v65 = v211;
        v36 = v206;
      }
      else
      {
        sub_1C07B1F90((uint64_t)v36, type metadata accessor for EntityTriple);
      }
      v79 += v78;
      --v76;
    }
    while (v76);
    a2 = v201;
    v7 = v200;
  }
  v82 = (uint64_t)v196;
  swift_bridgeObjectRelease();
  sub_1C0AA49F4();
  swift_release();
  if (sub_1C07B2D80(v82, 1, v64) == 1)
  {
    v83 = v82;
LABEL_54:
    sub_1C0784B6C(v83, &qword_1ED75A508);
    goto LABEL_55;
  }
  v84 = (uint64_t *)(v82 + *(int *)(v64 + 32));
  v85 = *v84;
  v86 = v84[1];
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C07B1F90(v82, type metadata accessor for EntityTriple);
  v224 = MEMORY[0x1E0DEE9D8];
  v87 = *(_QWORD *)(a2 + 16);
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  if (v87)
  {
    v215 = v85;
    v88 = (*(unsigned __int8 *)(v200 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v200 + 80);
    v89 = *(_QWORD *)(v200 + 72);
    v90 = a2 + v88;
    v91 = (uint64_t)v202;
    do
    {
      sub_1C07E05C8(v90, v91, type metadata accessor for EntityTriple);
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      v92 = sub_1C106FD24();
      swift_bridgeObjectRelease();
      if ((v92 & 1) != 0)
      {
        sub_1C07E05F4(v91, v205, type metadata accessor for EntityTriple);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          sub_1C09D3F18();
        v93 = v224;
        v94 = *(_QWORD *)(v224 + 16);
        if (v94 >= *(_QWORD *)(v224 + 24) >> 1)
        {
          sub_1C09D3F18();
          v93 = v224;
        }
        *(_QWORD *)(v93 + 16) = v94 + 1;
        sub_1C07E05F4(v205, v93 + v88 + v94 * v89, type metadata accessor for EntityTriple);
        v91 = (uint64_t)v202;
      }
      else
      {
        sub_1C07B1F90(v91, type metadata accessor for EntityTriple);
      }
      v90 += v89;
      --v87;
    }
    while (v87);
    v64 = v221;
    v65 = v211;
    v85 = v215;
  }
  swift_bridgeObjectRelease();
  v95 = (uint64_t)v193;
  sub_1C0AA49F4();
  v83 = v95;
  swift_release();
  if (sub_1C07B2D80(v95, 1, v64) == 1)
  {
    swift_bridgeObjectRelease();
    a2 = v201;
    v7 = v200;
    goto LABEL_54;
  }
  v136 = (uint64_t *)(v95 + *(int *)(v64 + 32));
  v138 = *v136;
  v137 = v136[1];
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C07B1F90(v95, type metadata accessor for EntityTriple);
  if (v85 == v138 && v86 == v137)
    goto LABEL_156;
  v140 = sub_1C1070CB4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  result = 1.0;
  a2 = v201;
  v7 = v200;
  if ((v140 & 1) != 0)
    return result;
LABEL_55:
  v224 = MEMORY[0x1E0DEE9D8];
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  v96 = v198;
  if (v198)
  {
    v97 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
    v98 = *(_QWORD *)(v7 + 72);
    v99 = v65 + v97;
    v100 = (uint64_t)v204;
    do
    {
      sub_1C07E05C8(v99, v100, type metadata accessor for EntityTriple);
      if ((sub_1C106FD24() & 1) != 0)
      {
        sub_1C07E05F4(v100, v212, type metadata accessor for EntityTriple);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          sub_1C09D3F18();
        v101 = v224;
        v102 = *(_QWORD *)(v224 + 16);
        if (v102 >= *(_QWORD *)(v224 + 24) >> 1)
        {
          sub_1C09D3F18();
          v101 = v224;
        }
        *(_QWORD *)(v101 + 16) = v102 + 1;
        sub_1C07E05F4(v212, v101 + v97 + v102 * v98, type metadata accessor for EntityTriple);
        v100 = (uint64_t)v204;
      }
      else
      {
        sub_1C07B1F90(v100, type metadata accessor for EntityTriple);
      }
      v99 += v98;
      --v96;
    }
    while (v96);
    a2 = v201;
    v7 = v200;
  }
  swift_bridgeObjectRelease();
  v103 = (uint64_t)v195;
  sub_1C0AA49F4();
  swift_release();
  if (sub_1C07B2D80(v103, 1, v64) != 1)
  {
    v105 = (uint64_t *)(v103 + *(int *)(v64 + 32));
    v107 = *v105;
    v106 = v105[1];
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    sub_1C07B1F90(v103, type metadata accessor for EntityTriple);
    v224 = MEMORY[0x1E0DEE9D8];
    v108 = *(_QWORD *)(a2 + 16);
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    if (v108)
    {
      v215 = v107;
      v109 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
      v110 = *(_QWORD *)(v7 + 72);
      v111 = a2 + v109;
      v112 = (uint64_t)v199;
      do
      {
        sub_1C07E05C8(v111, v112, type metadata accessor for EntityTriple);
        _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
        v113 = sub_1C106FD24();
        swift_bridgeObjectRelease();
        if ((v113 & 1) != 0)
        {
          sub_1C07E05F4(v112, v203, type metadata accessor for EntityTriple);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            sub_1C09D3F18();
          v114 = v224;
          v115 = *(_QWORD *)(v224 + 16);
          if (v115 >= *(_QWORD *)(v224 + 24) >> 1)
          {
            sub_1C09D3F18();
            v114 = v224;
          }
          *(_QWORD *)(v114 + 16) = v115 + 1;
          sub_1C07E05F4(v203, v114 + v109 + v115 * v110, type metadata accessor for EntityTriple);
          v112 = (uint64_t)v199;
        }
        else
        {
          sub_1C07B1F90(v112, type metadata accessor for EntityTriple);
        }
        v111 += v110;
        --v108;
      }
      while (v108);
      v64 = v221;
      v7 = v200;
      v107 = v215;
    }
    swift_bridgeObjectRelease();
    v104 = v192;
    sub_1C0AA49F4();
    swift_release();
    v122 = sub_1C07B2D80(v104, 1, v64);
    v65 = v211;
    if (v122 == 1)
    {
      swift_bridgeObjectRelease();
      goto LABEL_87;
    }
    v187 = (uint64_t *)(v104 + *(int *)(v64 + 32));
    v189 = *v187;
    v188 = v187[1];
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    sub_1C07B1F90(v104, type metadata accessor for EntityTriple);
    if (v107 != v189 || v106 != v188)
    {
      v191 = sub_1C1070CB4();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      result = 1.0;
      if ((v191 & 1) != 0)
        return result;
      goto LABEL_88;
    }
LABEL_156:
    swift_bridgeObjectRelease_n();
    return 1.0;
  }
  v104 = v103;
LABEL_87:
  sub_1C0784B6C(v104, &qword_1ED75A508);
LABEL_88:
  v123 = MEMORY[0x1E0DEE9D8];
  v226 = MEMORY[0x1E0DEE9D8];
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  v124 = v198;
  if (v198)
  {
    v125 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
    v126 = *(_QWORD *)(v7 + 72);
    v127 = v65 + v125;
    v128 = v216;
    v129 = v209;
    while (1)
    {
      v130 = v124;
      sub_1C07E05C8(v127, v217, type metadata accessor for EntityTriple);
      sub_1C106E314();
      sub_1C0794BAC(&qword_1ED75E7E0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3CC50], MEMORY[0x1E0D3CC80]);
      sub_1C106FE44();
      sub_1C106FE44();
      if (v224 == v222 && v225 == v223)
        break;
      v132 = sub_1C1070CB4();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v219 + 8))(v129, v128);
      if ((v132 & 1) != 0)
        goto LABEL_97;
      sub_1C07B1F90(v217, type metadata accessor for EntityTriple);
LABEL_102:
      v127 += v126;
      v124 = v130 - 1;
      if (v130 == 1)
      {
        v135 = v226;
        v64 = v221;
        v7 = v200;
        v123 = MEMORY[0x1E0DEE9D8];
        goto LABEL_111;
      }
    }
    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v219 + 8))(v129, v128);
LABEL_97:
    sub_1C07E05F4(v217, v213, type metadata accessor for EntityTriple);
    v133 = v226;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_1C09D3F18();
      v133 = v226;
    }
    v134 = *(_QWORD *)(v133 + 16);
    if (v134 >= *(_QWORD *)(v133 + 24) >> 1)
    {
      sub_1C09D3F18();
      v133 = v226;
    }
    *(_QWORD *)(v133 + 16) = v134 + 1;
    sub_1C07E05F4(v213, v133 + v125 + v134 * v126, type metadata accessor for EntityTriple);
    v128 = v216;
    goto LABEL_102;
  }
  v135 = v123;
LABEL_111:
  swift_bridgeObjectRelease();
  v141 = *(_QWORD *)(v135 + 16);
  if (v141)
  {
    v224 = v123;
    sub_1C09D30E0();
    v142 = v7;
    v143 = v135 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
    v144 = *(_QWORD *)(v142 + 72);
    do
    {
      v145 = v220;
      sub_1C07E05C8(v143, v220, type metadata accessor for EntityTriple);
      v146 = (uint64_t *)(v145 + *(int *)(v64 + 32));
      v147 = *v146;
      v148 = v146[1];
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      sub_1C07B1F90(v145, type metadata accessor for EntityTriple);
      v149 = v224;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1C09D30E0();
        v149 = v224;
      }
      v150 = *(_QWORD *)(v149 + 16);
      if (v150 >= *(_QWORD *)(v149 + 24) >> 1)
      {
        sub_1C09D30E0();
        v149 = v224;
      }
      *(_QWORD *)(v149 + 16) = v150 + 1;
      v151 = v149 + 16 * v150;
      *(_QWORD *)(v151 + 32) = v147;
      *(_QWORD *)(v151 + 40) = v148;
      v143 += v144;
      --v141;
      v64 = v221;
    }
    while (v141);
    swift_release();
    v152 = v201;
    v7 = v200;
  }
  else
  {
    swift_release();
    v149 = MEMORY[0x1E0DEE9D8];
    v152 = v201;
  }
  sub_1C0898D28(v149);
  v154 = v153;
  v155 = MEMORY[0x1E0DEE9D8];
  v226 = MEMORY[0x1E0DEE9D8];
  v156 = *(_QWORD *)(v152 + 16);
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  v217 = v154;
  if (v156)
  {
    v157 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
    v158 = *(_QWORD *)(v7 + 72);
    v159 = v152 + v157;
    v160 = v216;
    v161 = v210;
    while (1)
    {
      sub_1C07E05C8(v159, v218, type metadata accessor for EntityTriple);
      sub_1C106E314();
      sub_1C0794BAC(&qword_1ED75E7E0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3CC50], MEMORY[0x1E0D3CC80]);
      sub_1C106FE44();
      sub_1C106FE44();
      if (v224 == v222 && v225 == v223)
        break;
      v163 = sub_1C1070CB4();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v219 + 8))(v161, v160);
      if ((v163 & 1) != 0)
        goto LABEL_129;
      sub_1C07B1F90(v218, type metadata accessor for EntityTriple);
LABEL_134:
      v159 += v158;
      if (!--v156)
      {
        v155 = v226;
        v64 = v221;
        v7 = v200;
        goto LABEL_136;
      }
    }
    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v219 + 8))(v161, v160);
LABEL_129:
    sub_1C07E05F4(v218, v214, type metadata accessor for EntityTriple);
    v164 = v226;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_1C09D3F18();
      v164 = v226;
    }
    v165 = *(_QWORD *)(v164 + 16);
    if (v165 >= *(_QWORD *)(v164 + 24) >> 1)
    {
      sub_1C09D3F18();
      v164 = v226;
    }
    *(_QWORD *)(v164 + 16) = v165 + 1;
    sub_1C07E05F4(v214, v164 + v157 + v165 * v158, type metadata accessor for EntityTriple);
    v160 = v216;
    goto LABEL_134;
  }
LABEL_136:
  swift_bridgeObjectRelease();
  v166 = *(_QWORD *)(v155 + 16);
  if (v166)
  {
    v224 = MEMORY[0x1E0DEE9D8];
    sub_1C09D30E0();
    v167 = v7;
    v168 = v155 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
    v169 = *(_QWORD *)(v167 + 72);
    do
    {
      v170 = v220;
      sub_1C07E05C8(v168, v220, type metadata accessor for EntityTriple);
      v171 = (uint64_t *)(v170 + *(int *)(v64 + 32));
      v172 = *v171;
      v173 = v171[1];
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      sub_1C07B1F90(v170, type metadata accessor for EntityTriple);
      v174 = v224;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1C09D30E0();
        v174 = v224;
      }
      v175 = *(_QWORD *)(v174 + 16);
      if (v175 >= *(_QWORD *)(v174 + 24) >> 1)
      {
        sub_1C09D30E0();
        v174 = v224;
      }
      *(_QWORD *)(v174 + 16) = v175 + 1;
      v176 = v174 + 16 * v175;
      *(_QWORD *)(v176 + 32) = v172;
      *(_QWORD *)(v176 + 40) = v173;
      v168 += v169;
      --v166;
      v64 = v221;
    }
    while (v166);
    swift_release();
  }
  else
  {
    swift_release();
    v174 = MEMORY[0x1E0DEE9D8];
  }
  v177 = v217;
  sub_1C0898D28(v174);
  if (*(_QWORD *)(v177 + 16))
  {
    sub_1C0A7D0A8(v177, v178, v179, v180, v181, v182, v183, v184, v192);
    v186 = v185;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    result = 0.0;
    if ((v186 & 1) != 0)
      return 1.0;
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return 0.0;
  }
  return result;
}

float sub_1C0D81E80(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD), uint64_t *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t (*v76)(_QWORD);
  uint64_t *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;
  unint64_t v82;
  uint64_t v83;
  unint64_t v84;
  char v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t *v88;
  uint64_t *v89;
  uint64_t v90;
  uint64_t v91;
  BOOL v92;
  float result;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t *v98;
  uint64_t v99;
  uint64_t *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  unint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t *v111;
  uint64_t v112;
  uint64_t *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  unint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  char v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t *v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  unint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  unint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  char v154;
  uint64_t v155;
  unint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t (*v165)(_QWORD);
  uint64_t *v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  unint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  char v180;
  char v181;
  char v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  char *v189;
  uint64_t v190;
  uint64_t *v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  unint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t (*v222)(_QWORD);
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;

  v208 = a6;
  v195 = a5;
  v213 = sub_1C106E41C();
  v220 = *(_QWORD *)(v213 - 8);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v10);
  sub_1C077AED0();
  v211 = v11;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v12);
  sub_1C0778674();
  v210 = v13;
  v222 = a3;
  v14 = a3(0);
  v196 = *(_QWORD *)(v14 - 8);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v15);
  sub_1C077AED0();
  v212 = v16;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v17);
  sub_1C0779728();
  v215 = v18;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v19);
  sub_1C0779728();
  v219 = v20;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v21);
  sub_1C0779728();
  v204 = v22;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v23);
  sub_1C0779728();
  v200 = v24;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v25);
  sub_1C0779728();
  v205 = v26;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v27);
  sub_1C0779728();
  v202 = v28;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v29);
  sub_1C0779728();
  v207 = v30;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v31);
  sub_1C0778674();
  v203 = v32;
  v191 = a4;
  sub_1C07ACF80(a4);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v33);
  sub_1C077AED0();
  v187 = v34;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v35);
  sub_1C0779728();
  v188 = v36;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v37);
  sub_1C0778674();
  v190 = v38;
  v39 = type metadata accessor for EntityTriple(0);
  v40 = *(_QWORD *)(v39 - 8);
  MEMORY[0x1E0C80A78](v39);
  v42 = (uint64_t)&v184 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v43);
  sub_1C0779728();
  v216 = v44;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v45);
  sub_1C0779728();
  v189 = v46;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v47);
  sub_1C0779728();
  v214 = v48;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v49);
  sub_1C0779728();
  v209 = v50;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v51);
  sub_1C0779728();
  v218 = v52;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v53);
  sub_1C0779728();
  v217 = v54;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v55);
  v57 = (char *)&v184 - v56;
  MEMORY[0x1E0C80A78](v58);
  v60 = (char *)&v184 - v59;
  sub_1C07ACF80(&qword_1ED75A508);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v61);
  sub_1C077AED0();
  v192 = v62;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v63);
  sub_1C0779728();
  v193 = v64;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v65);
  sub_1C0778674();
  v194 = v66;
  v67 = MEMORY[0x1E0DEE9D8];
  v226 = MEMORY[0x1E0DEE9D8];
  v68 = *(_QWORD *)(a1 + 16);
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  v221 = v14;
  v199 = a2;
  v201 = a1;
  v223 = v39;
  v197 = v40;
  v198 = v68;
  if (v68)
  {
    v69 = (*(unsigned __int8 *)(v40 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v40 + 80);
    v70 = *(_QWORD *)(v40 + 72);
    v206 = v69;
    v71 = a1 + v69;
    a2 = v68;
    do
    {
      sub_1C07E05C8(v71, (uint64_t)v60, type metadata accessor for EntityTriple);
      if ((sub_1C106FD24() & 1) != 0)
      {
        sub_1C07E05F4((uint64_t)v60, v42, type metadata accessor for EntityTriple);
        if ((sub_1C077C09C() & 1) == 0)
          sub_1C07A4044();
        v72 = v226;
        v73 = *(_QWORD *)(v226 + 16);
        v68 = v73 + 1;
        if (v73 >= *(_QWORD *)(v226 + 24) >> 1)
        {
          sub_1C079165C();
          v72 = v226;
        }
        *(_QWORD *)(v72 + 16) = v68;
        sub_1C07E05F4(v42, v72 + v206 + v73 * v70, type metadata accessor for EntityTriple);
        v14 = v221;
      }
      else
      {
        sub_1C07B1F90((uint64_t)v60, type metadata accessor for EntityTriple);
      }
      v71 += v70;
      --a2;
    }
    while (a2);
    sub_1C079F104();
    v67 = MEMORY[0x1E0DEE9D8];
    v39 = v223;
  }
  sub_1C078F230();
  v74 = v194;
  sub_1C077BA20();
  sub_1C07785A8();
  sub_1C078C994(v74);
  v75 = v217;
  if (v92)
  {
    sub_1C0784B6C(v74, &qword_1ED75A508);
    v76 = v222;
  }
  else
  {
    v77 = (uint64_t *)(v74 + *(int *)(v39 + 32));
    v78 = v77[1];
    v185 = *v77;
    v186 = v78;
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    sub_1C07B1F90(v74, type metadata accessor for EntityTriple);
    v226 = v67;
    sub_1C078A11C();
    v76 = v222;
    if (v39)
    {
      sub_1C078C9CC();
      v80 = *(_QWORD *)(v79 + 72);
      v206 = v81;
      v82 = a2 + v81;
      v83 = MEMORY[0x1E0DEE9D8];
      a2 = v203;
      do
      {
        sub_1C07A5818();
        sub_1C079E98C();
        sub_1C0793370();
        sub_1C07AAAEC();
        if ((v67 & 1) != 0)
        {
          sub_1C07A0420(a2, v207);
          if ((sub_1C077C09C() & 1) == 0)
            sub_1C07991EC(0, *(_QWORD *)(v83 + 16) + 1);
          v83 = v226;
          sub_1C07A2B80();
          if (v85)
          {
            sub_1C07991EC(v84 > 1, v67);
            v83 = v226;
          }
          *(_QWORD *)(v83 + 16) = v67;
          v86 = v83 + v206 + (_QWORD)v76 * v80;
          v76 = v222;
          sub_1C07A0420(v207, v86);
          a2 = v203;
        }
        else
        {
          sub_1C077B100(a2);
        }
        v82 += v80;
        --v39;
      }
      while (v39);
      v67 = MEMORY[0x1E0DEE9D8];
      v75 = v217;
      sub_1C079F104();
    }
    sub_1C0775844();
    v42 = v190;
    sub_1C078840C();
    sub_1C07785A8();
    sub_1C0792020();
    v39 = v223;
    if (v92)
    {
      sub_1C078F230();
      v87 = sub_1C0785280();
      sub_1C0784B6C(v87, v88);
    }
    else
    {
      v89 = (uint64_t *)(v42 + *(int *)(v14 + 32));
      v91 = *v89;
      v90 = v89[1];
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      sub_1C077B100(v42);
      v42 = v186;
      v92 = v185 == v91 && v186 == v90;
      if (v92)
        goto LABEL_164;
      a2 = sub_1C07785B0();
      sub_1C077960C();
      sub_1C0778580();
      result = 1.0;
      if ((a2 & 1) != 0)
        return result;
    }
  }
  v226 = v67;
  sub_1C0795D18();
  if (v198)
  {
    sub_1C07B4444();
    v94 = MEMORY[0x1E0DEE9D8];
    v42 = (uint64_t)type metadata accessor for EntityTriple;
    v96 = v95;
    do
    {
      sub_1C078A764(a2, (uint64_t)v57);
      if ((sub_1C106FD24() & 1) != 0)
      {
        sub_1C079B52C((uint64_t)v57, v216);
        if ((sub_1C077C09C() & 1) == 0)
          sub_1C07A4044();
        sub_1C077F3E4();
        if (v85)
        {
          sub_1C079165C();
          v94 = v226;
        }
        *(_QWORD *)(v94 + 16) = v75;
        sub_1C079B52C(v216, v94 + v14 + v68 * (_QWORD)v76);
        v75 = v217;
      }
      else
      {
        sub_1C07A1BC4((uint64_t)v57);
      }
      a2 += (uint64_t)v76;
      --v96;
    }
    while (v96);
    v14 = v221;
    v76 = v222;
    v67 = MEMORY[0x1E0DEE9D8];
  }
  v97 = v193;
  swift_bridgeObjectRelease();
  sub_1C077BA20();
  sub_1C07785A8();
  sub_1C078C994(v97);
  if (v92)
  {
    v98 = &qword_1ED75A508;
    v99 = v97;
LABEL_63:
    sub_1C0784B6C(v99, v98);
    goto LABEL_64;
  }
  v100 = (uint64_t *)(v97 + *(int *)(v39 + 32));
  v101 = *v100;
  v216 = v100[1];
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C07B1F90(v97, type metadata accessor for EntityTriple);
  sub_1C07AB150();
  v207 = v101;
  if (v57)
  {
    sub_1C079543C();
    v102 = MEMORY[0x1E0DEE9D8];
    v103 = v202;
    do
    {
      sub_1C07A5818();
      sub_1C079E98C();
      sub_1C0793370();
      sub_1C07AAAEC();
      if ((v67 & 1) != 0)
      {
        sub_1C07A0420(v103, v205);
        if ((sub_1C077C09C() & 1) == 0)
          sub_1C07991EC(0, *(_QWORD *)(v102 + 16) + 1);
        v102 = v226;
        sub_1C07A2B80();
        if (v85)
        {
          sub_1C07991EC(v104 > 1, v67);
          v102 = v226;
        }
        *(_QWORD *)(v102 + 16) = v67;
        v105 = v102 + v39 + (_QWORD)v76 * v42;
        v76 = v222;
        sub_1C07A0420(v205, v105);
        v103 = v202;
      }
      else
      {
        sub_1C077B100(v103);
      }
      v75 += v42;
      --v57;
    }
    while (v57);
    v106 = v226;
    v67 = MEMORY[0x1E0DEE9D8];
    v39 = v223;
    v75 = v217;
  }
  else
  {
    v106 = v67;
  }
  v42 = v188;
  v97 = v216;
  sub_1C078F230();
  sub_1C078840C();
  sub_1C07785A8();
  sub_1C0792020();
  if (v92)
  {
    sub_1C0775844();
    v99 = sub_1C0785280();
    goto LABEL_63;
  }
  sub_1C07B7568();
  sub_1C077B100(v42);
  if (v207 == v75 && v97 == v106)
    goto LABEL_164;
  v42 = sub_1C07785B0();
  sub_1C077960C();
  sub_1C0775844();
  result = 1.0;
  v75 = v217;
  if ((v42 & 1) != 0)
    return result;
LABEL_64:
  v226 = v67;
  sub_1C0795D18();
  if (v198)
  {
    sub_1C07B4444();
    v107 = MEMORY[0x1E0DEE9D8];
    v42 = (uint64_t)type metadata accessor for EntityTriple;
    v109 = v108;
    v57 = v189;
    do
    {
      sub_1C078A764(v97, v75);
      if ((sub_1C106FD24() & 1) != 0)
      {
        sub_1C079B52C(v75, (uint64_t)v57);
        if ((sub_1C077C09C() & 1) == 0)
          sub_1C07A4044();
        sub_1C077F3E4();
        if (v85)
        {
          sub_1C079165C();
          v107 = v226;
        }
        *(_QWORD *)(v107 + 16) = v75;
        sub_1C079B52C((uint64_t)v57, v107 + v14 + v68 * (_QWORD)v76);
        v75 = v217;
      }
      else
      {
        sub_1C07A1BC4(v75);
      }
      v97 += (uint64_t)v76;
      --v109;
    }
    while (v109);
    v76 = v222;
    v67 = MEMORY[0x1E0DEE9D8];
  }
  swift_bridgeObjectRelease();
  v110 = v192;
  sub_1C077BA20();
  sub_1C07785A8();
  sub_1C078C994(v110);
  if (v92)
  {
    v111 = &qword_1ED75A508;
    v112 = v110;
LABEL_100:
    sub_1C0784B6C(v112, v111);
    goto LABEL_101;
  }
  v113 = (uint64_t *)(v110 + *(int *)(v39 + 32));
  v114 = v113[1];
  v216 = *v113;
  v217 = v114;
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C07B1F90(v110, type metadata accessor for EntityTriple);
  sub_1C07AB150();
  if (v57)
  {
    sub_1C079543C();
    v115 = MEMORY[0x1E0DEE9D8];
    v116 = v200;
    do
    {
      sub_1C07A5818();
      sub_1C079E98C();
      sub_1C0793370();
      sub_1C07AAAEC();
      if ((v67 & 1) != 0)
      {
        sub_1C07A0420(v116, v204);
        if ((sub_1C077C09C() & 1) == 0)
          sub_1C07991EC(0, *(_QWORD *)(v115 + 16) + 1);
        v115 = v226;
        sub_1C07A2B80();
        if (v85)
        {
          sub_1C07991EC(v117 > 1, v67);
          v115 = v226;
        }
        *(_QWORD *)(v115 + 16) = v67;
        v118 = v115 + v39 + (_QWORD)v76 * v42;
        v76 = v222;
        sub_1C07A0420(v204, v118);
        v116 = v200;
      }
      else
      {
        sub_1C077B100(v116);
      }
      v75 += v42;
      --v57;
    }
    while (v57);
    v119 = v226;
    v67 = MEMORY[0x1E0DEE9D8];
    v39 = v223;
  }
  else
  {
    v119 = v67;
  }
  sub_1C078F230();
  v121 = v187;
  sub_1C078840C();
  sub_1C07785A8();
  sub_1C0792020();
  v122 = v217;
  if (v92)
  {
    sub_1C0775844();
    v112 = sub_1C0785280();
    goto LABEL_100;
  }
  sub_1C07B7568();
  sub_1C077B100(v121);
  if (v216 == v75 && v122 == v119)
  {
LABEL_164:
    sub_1C07758A4();
    return 1.0;
  }
  v183 = sub_1C07785B0();
  sub_1C077960C();
  sub_1C0775844();
  result = 1.0;
  if ((v183 & 1) != 0)
    return result;
LABEL_101:
  v228 = v67;
  sub_1C0795D18();
  v123 = v198;
  if (v198)
  {
    sub_1C078C9CC();
    v125 = *(_QWORD *)(v124 + 72);
    v217 = v126;
    v128 = v127 + v126;
    while (1)
    {
      sub_1C078A764(v128, v218);
      sub_1C106E314();
      sub_1C0794BAC(&qword_1ED75E7E0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3CC50], MEMORY[0x1E0D3CC80]);
      sub_1C078B480();
      sub_1C078B480();
      v129 = v225;
      if (v226 == v224 && v227 == v225)
        break;
      v131 = sub_1C07785B0();
      sub_1C077960C();
      swift_bridgeObjectRelease();
      sub_1C07A2008();
      if ((v131 & 1) != 0)
        goto LABEL_110;
      sub_1C07A1BC4(v218);
      v39 = v223;
LABEL_115:
      v128 += v125;
      if (!--v123)
      {
        v133 = v228;
        v67 = MEMORY[0x1E0DEE9D8];
        goto LABEL_118;
      }
    }
    sub_1C07758A4();
    sub_1C07A2008();
LABEL_110:
    sub_1C079B52C(v218, v214);
    v132 = v228;
    if ((sub_1C077C09C() & 1) == 0)
    {
      sub_1C079165C();
      v132 = v228;
    }
    v39 = v223;
    sub_1C07A2B80();
    if (v85)
    {
      sub_1C079165C();
      v132 = v228;
    }
    *(_QWORD *)(v132 + 16) = v129;
    sub_1C079B52C(v214, v132 + v217 + (_QWORD)v76 * v125);
    v76 = v222;
    goto LABEL_115;
  }
  v133 = v67;
LABEL_118:
  swift_bridgeObjectRelease();
  v134 = *(_QWORD *)(v133 + 16);
  if (v134)
  {
    v226 = v67;
    sub_1C09D30E0();
    sub_1C078C9CC();
    v136 = v133 + v135;
    v138 = *(_QWORD *)(v137 + 72);
    do
    {
      v139 = v209;
      sub_1C07E05C8(v136, v209, type metadata accessor for EntityTriple);
      v140 = (uint64_t *)(v139 + *(int *)(v39 + 32));
      v141 = *v140;
      v142 = v140[1];
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      sub_1C07B1F90(v139, type metadata accessor for EntityTriple);
      v143 = v226;
      if ((sub_1C077C09C() & 1) == 0)
      {
        sub_1C078CDA8();
        v143 = v226;
      }
      v144 = *(_QWORD *)(v143 + 16);
      if (v144 >= *(_QWORD *)(v143 + 24) >> 1)
      {
        sub_1C09D30E0();
        v143 = v226;
      }
      *(_QWORD *)(v143 + 16) = v144 + 1;
      v145 = v143 + 16 * v144;
      *(_QWORD *)(v145 + 32) = v141;
      *(_QWORD *)(v145 + 40) = v142;
      v136 += v138;
      --v134;
      v39 = v223;
    }
    while (v134);
    swift_release();
    v76 = v222;
    sub_1C079F104();
    v67 = MEMORY[0x1E0DEE9D8];
  }
  else
  {
    swift_release();
    v143 = MEMORY[0x1E0DEE9D8];
    sub_1C079F104();
  }
  sub_1C0898D28(v143);
  v147 = v146;
  v228 = v67;
  sub_1C078A11C();
  v223 = v147;
  if (v39)
  {
    v148 = v133;
    v149 = (*(unsigned __int8 *)(v196 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v196 + 80);
    v150 = *(_QWORD *)(v196 + 72);
    v151 = v148 + v149;
    while (1)
    {
      sub_1C07E05C8(v151, v219, v76);
      sub_1C106E314();
      sub_1C0794BAC(&qword_1ED75E7E0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3CC50], MEMORY[0x1E0D3CC80]);
      sub_1C078B480();
      sub_1C078B480();
      v152 = v225;
      if (v226 == v224 && v227 == v225)
        break;
      v154 = sub_1C07785B0();
      sub_1C077960C();
      swift_bridgeObjectRelease();
      sub_1C079C90C();
      if ((v154 & 1) != 0)
        goto LABEL_136;
      sub_1C077B100(v219);
LABEL_141:
      v151 += v150;
      if (!--v39)
      {
        v158 = v228;
        sub_1C079F104();
        v67 = MEMORY[0x1E0DEE9D8];
        goto LABEL_144;
      }
    }
    sub_1C07758A4();
    sub_1C079C90C();
LABEL_136:
    sub_1C07A0420(v219, v215);
    v155 = v228;
    if ((sub_1C077C09C() & 1) == 0)
    {
      sub_1C07991EC(0, *(_QWORD *)(v155 + 16) + 1);
      v155 = v228;
    }
    sub_1C07A2B80();
    if (v85)
    {
      sub_1C07991EC(v156 > 1, v152);
      v155 = v228;
    }
    *(_QWORD *)(v155 + 16) = v152;
    v157 = v155 + v149 + (_QWORD)v76 * v150;
    v76 = v222;
    sub_1C07A0420(v215, v157);
    goto LABEL_141;
  }
  v158 = v67;
LABEL_144:
  sub_1C0775844();
  v159 = *(_QWORD *)(v158 + 16);
  if (v159)
  {
    v226 = v67;
    sub_1C09D30E0();
    sub_1C078C9CC();
    v161 = v158 + v160;
    v163 = *(_QWORD *)(v162 + 72);
    do
    {
      v164 = v212;
      v165 = v222;
      sub_1C07E05C8(v161, v212, v222);
      v166 = (uint64_t *)(v164 + *(int *)(v221 + 32));
      v167 = *v166;
      v168 = v166[1];
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      sub_1C07B1F90(v164, v165);
      v169 = v226;
      if ((sub_1C077C09C() & 1) == 0)
      {
        sub_1C078CDA8();
        v169 = v226;
      }
      v170 = *(_QWORD *)(v169 + 16);
      if (v170 >= *(_QWORD *)(v169 + 24) >> 1)
      {
        sub_1C09D30E0();
        v169 = v226;
      }
      *(_QWORD *)(v169 + 16) = v170 + 1;
      v171 = v169 + 16 * v170;
      *(_QWORD *)(v171 + 32) = v167;
      *(_QWORD *)(v171 + 40) = v168;
      v161 += v163;
      --v159;
    }
    while (v159);
    swift_release();
  }
  else
  {
    swift_release();
    v169 = MEMORY[0x1E0DEE9D8];
  }
  v172 = v223;
  sub_1C0898D28(v169);
  if (*(_QWORD *)(v172 + 16))
  {
    sub_1C0A7D0A8(v172, v173, v174, v175, v176, v177, v178, v179, v184);
    v181 = v180;
    swift_bridgeObjectRelease();
    sub_1C0775844();
    result = 0.0;
    if ((v181 & 1) != 0)
      return 1.0;
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_1C0775844();
    return 0.0;
  }
  return result;
}

void sub_1C0D8300C(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  void (*v12)(_QWORD, _QWORD, _QWORD);
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  void (*v30)(_QWORD, _QWORD, _QWORD);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  NSObject *v41;
  os_log_type_t v42;
  uint8_t *v43;
  _BYTE *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  float v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  int v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  void (*v60)(char *, char *, uint64_t);
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  int *v65;
  void (*v66)(uint64_t, char *, uint64_t);
  uint64_t v67;
  uint64_t v68;
  char *v69;
  char *v70;
  uint64_t v71;
  char *v72;
  char *v73;
  char *v74;
  char *v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  void (*v85)(_QWORD, _QWORD, _QWORD);

  v79 = a2;
  v80 = a1;
  v78 = a3;
  v4 = sub_1C106D1F8();
  v82 = *(_QWORD *)(v4 - 8);
  v83 = v4;
  MEMORY[0x1E0C80A78](v4);
  v75 = (char *)&v67 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v77 = sub_1C106E590();
  v84 = *(_QWORD *)(v77 - 8);
  MEMORY[0x1E0C80A78](v77);
  v76 = (char *)&v67 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v81 = (char *)&v67 - v8;
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v67 - v10;
  v12 = (void (*)(_QWORD, _QWORD, _QWORD))type metadata accessor for EntityTriple(0);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v67 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_1C07ACF80(&qword_1ED75A508);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v67 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v67 - v19;
  v21 = sub_1C07ACF80((uint64_t *)&unk_1ED75EA40);
  MEMORY[0x1E0C80A78](v21);
  v23 = (char *)&v67 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v24);
  v26 = (char *)&v67 - v25;
  MEMORY[0x1E0C80A78](v27);
  v29 = (char *)&v67 - v28;
  v30 = v85;
  sub_1C0CCB9C0();
  if (v30)
    return;
  v73 = v17;
  v74 = v14;
  v85 = v12;
  v69 = v26;
  v70 = v23;
  v71 = 0;
  v72 = v11;
  v31 = v84;
  v33 = v77;
  v32 = v78;
  v34 = v79;
  if (v79)
  {
    sub_1C0AA49F4();
    if (sub_1C07B2D80((uint64_t)v20, 1, (uint64_t)v85) == 1)
    {
      sub_1C0784B6C((uint64_t)v20, &qword_1ED75A508);
      v35 = 1;
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v31 + 16))(v29, v20, v33);
      sub_1C07B1F90((uint64_t)v20, type metadata accessor for EntityTriple);
      v35 = 0;
    }
    v37 = (uint64_t)v74;
    v36 = (uint64_t)v29;
  }
  else
  {
    v35 = 1;
    v36 = (uint64_t)v29;
    v37 = (uint64_t)v74;
  }
  sub_1C07B2D8C(v36, v35, 1, v33);
  v38 = (uint64_t)v73;
  v39 = v80;
  sub_1C0AA49F4();
  if (sub_1C07B2D80(v38, 1, (uint64_t)v85) != 1)
  {
    v45 = v38;
    v46 = v36;
    sub_1C07E05F4(v45, v37, type metadata accessor for EntityTriple);
    if (v34)
    {
      v47 = v34;
      v48 = v3;
      v49 = sub_1C0D808A8(v39, v47);
      v50 = type metadata accessor for TopicMatcher();
      v51 = v32;
      v52 = (uint64_t)v69;
      if (v49 > *(float *)(v3 + *(int *)(v50 + 28)))
        goto LABEL_17;
    }
    else
    {
      v50 = type metadata accessor for TopicMatcher();
      v48 = v3;
      v49 = 0.0;
      v51 = v32;
      v52 = (uint64_t)v69;
      if (*(float *)(v3 + *(int *)(v50 + 28)) < 0.0)
      {
LABEL_17:
        v68 = v46;
        v53 = (uint64_t)v70;
        sub_1C07E0238(v46, (uint64_t)v70);
        v54 = sub_1C07B2D80(v53, 1, v33);
        v55 = v83;
        v56 = v72;
        if (v54 == 1)
        {
          sub_1C0784B6C(v53, (uint64_t *)&unk_1ED75EA40);
          sub_1C1070954();
          __break(1u);
        }
        else
        {
          v57 = v84;
          v85 = *(void (**)(_QWORD, _QWORD, _QWORD))(v84 + 32);
          v85(v72, v53, v33);
          v80 = type metadata accessor for TopicMatcher();
          v58 = v48;
          v59 = v75;
          (*(void (**)(char *, uint64_t, uint64_t))(v82 + 16))(v75, v48 + *(int *)(v80 + 36), v55);
          v60 = *(void (**)(char *, char *, uint64_t))(v57 + 16);
          v61 = (uint64_t)v74;
          v60(v81, v74, v33);
          v62 = v76;
          v60(v76, v56, v33);
          sub_1C106AC6C();
          v64 = v63;
          (*(void (**)(char *, uint64_t))(v57 + 8))(v56, v33);
          sub_1C07B1F90(v61, type metadata accessor for EntityTriple);
          sub_1C0784B6C(v68, (uint64_t *)&unk_1ED75EA40);
          LOBYTE(v60) = *(_BYTE *)(v58 + *(int *)(v80 + 24));
          (*(void (**)(uint64_t, char *, uint64_t))(v82 + 32))(v51, v59, v83);
          v65 = (int *)type metadata accessor for EntityMatch(0);
          v66 = (void (*)(uint64_t, char *, uint64_t))v85;
          v85(v51 + v65[5], v81, v33);
          v66(v51 + v65[6], v62, v33);
          *(float *)(v51 + v65[7]) = v49;
          *(_QWORD *)(v51 + v65[8]) = v64;
          *(_BYTE *)(v51 + v65[9]) = (_BYTE)v60;
          *(_QWORD *)(v51 + v65[10]) = 0;
        }
        return;
      }
    }
    sub_1C106E500();
    sub_1C0784B6C(v46, (uint64_t *)&unk_1ED75EA40);
    sub_1C07B2D8C(v52, 0, 1, v33);
    sub_1C09174F8(v52, v46);
    type metadata accessor for TopicMatcher();
    v49 = *(float *)(v48 + *(int *)(v50 + 28));
    goto LABEL_17;
  }
  sub_1C0784B6C(v38, &qword_1ED75A508);
  if (qword_1ED761458 != -1)
    swift_once();
  v40 = sub_1C106F544();
  sub_1C079E000(v40, (uint64_t)qword_1ED78D818);
  v41 = sub_1C106F538();
  v42 = sub_1C1070390();
  if (os_log_type_enabled(v41, v42))
  {
    v43 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v43 = 0;
    _os_log_impl(&dword_1C0771000, v41, v42, "Topic Matcher: skipping entityTriples are empty", v43, 2u);
    MEMORY[0x1C3BA8270](v43, -1, -1);
  }

  sub_1C08C1878();
  swift_allocError();
  *v44 = 0;
  swift_willThrow();
  sub_1C0784B6C(v36, (uint64_t *)&unk_1ED75EA40);
}

void sub_1C0D83694(void (*a1)(char *, uint64_t, uint64_t)@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, void (*a4)(void)@<X3>, uint64_t (*a5)(_QWORD)@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t (*v45)(_QWORD);
  uint64_t v46;
  int v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t *v50;
  uint64_t v51;
  uint64_t v52;
  NSObject *v53;
  os_log_type_t v54;
  uint8_t *v55;
  _BYTE *v56;
  uint64_t v57;
  float v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  int v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  void (*v76)(uint64_t, uint64_t, uint64_t);
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  int *v81;
  void (*v82)(uint64_t, uint64_t, uint64_t);
  char *v83;
  char *v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  uint64_t (*v94)(_QWORD);
  void (*v95)(void);
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t *v99;
  uint64_t v100;
  uint64_t v101;
  void (*v102)(char *, uint64_t, uint64_t);
  uint64_t v103;
  uint64_t v104;

  v100 = a6;
  v94 = a5;
  v95 = a4;
  v98 = a2;
  v102 = a1;
  v89 = a7;
  v101 = sub_1C106D1F8();
  v92 = *(_QWORD *)(v101 - 8);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v9);
  sub_1C0778564();
  v90 = v11 - v10;
  v96 = sub_1C106E590();
  v103 = *(_QWORD *)(v96 - 8);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v12);
  sub_1C077AED0();
  v91 = v13;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v14);
  sub_1C0779728();
  v97 = v15;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v83 - v17;
  sub_1C07ACF80(&qword_1ED75A508);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v19);
  sub_1C0778564();
  v22 = v21 - v20;
  v23 = type metadata accessor for EntityTriple(0);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v24);
  sub_1C0778564();
  v27 = v26 - v25;
  v99 = a3;
  sub_1C07ACF80(a3);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v28);
  sub_1C0778564();
  v31 = v30 - v29;
  sub_1C07ACF80((uint64_t *)&unk_1ED75EA40);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v32);
  v34 = (char *)&v83 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v35);
  v37 = (char *)&v83 - v36;
  MEMORY[0x1E0C80A78](v38);
  v40 = (char *)&v83 - v39;
  v41 = v104;
  sub_1C0CCB9C0();
  if (v41)
    return;
  v87 = v23;
  v83 = v37;
  v84 = v34;
  v104 = v27;
  v85 = 0;
  v86 = v18;
  v42 = v103;
  v93 = v40;
  v43 = v96;
  v88 = v7;
  if (v98)
  {
    v44 = v98;
    v95();
    v45 = v94;
    v46 = v94(0);
    v47 = sub_1C07B2D80(v31, 1, v46);
    v48 = (uint64_t)v93;
    v49 = v100;
    if (v47 == 1)
    {
      v50 = v99;
      sub_1C0784B6C(v31, v99);
      v51 = 1;
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v42 + 16))(v93, v31, v43);
      sub_1C07B1F90(v31, v45);
      v51 = 0;
      v50 = v99;
    }
  }
  else
  {
    v44 = 0;
    v51 = 1;
    v48 = (uint64_t)v93;
    v50 = v99;
    v49 = v100;
  }
  sub_1C07B2D8C(v48, v51, 1, v43);
  sub_1C0AA49F4();
  if (sub_1C07B2D80(v22, 1, v87) != 1)
  {
    sub_1C07E05F4(v22, v104, type metadata accessor for EntityTriple);
    if (v44)
    {
      v57 = v88;
      v58 = sub_1C0D81E80((uint64_t)v102, v44, v94, v50, (uint64_t)v95, v49);
      v59 = sub_1C07AD3A8();
      v60 = v89;
      v61 = v101;
      if (v58 > *(float *)(v57 + *(int *)(v59 + 28)))
        goto LABEL_16;
    }
    else
    {
      v59 = sub_1C07AD3A8();
      v57 = v88;
      v60 = v89;
      v58 = 0.0;
      v61 = v101;
      if (*(float *)(v88 + *(int *)(v59 + 28)) < 0.0)
      {
LABEL_16:
        v67 = (uint64_t)v84;
        sub_1C07E0238((uint64_t)v93, (uint64_t)v84);
        v68 = sub_1C07B2D80(v67, 1, v43);
        v69 = v86;
        if (v68 == 1)
        {
          sub_1C0784B6C(v67, (uint64_t *)&unk_1ED75EA40);
          sub_1C1070954();
          __break(1u);
        }
        else
        {
          v70 = v103;
          v102 = *(void (**)(char *, uint64_t, uint64_t))(v103 + 32);
          v102(v86, v67, v43);
          v100 = sub_1C07AD3A8();
          v71 = v57 + *(int *)(v100 + 36);
          v72 = v43;
          v73 = v92;
          v74 = v90;
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v92 + 16))(v90, v71, v61);
          v75 = v70;
          v76 = *(void (**)(uint64_t, uint64_t, uint64_t))(v70 + 16);
          v77 = v104;
          v76(v97, v104, v72);
          v78 = v91;
          v76(v91, (uint64_t)v69, v72);
          sub_1C106AC6C();
          v80 = v79;
          (*(void (**)(char *, uint64_t))(v75 + 8))(v69, v72);
          sub_1C07B1F90(v77, type metadata accessor for EntityTriple);
          sub_1C0784B6C((uint64_t)v93, (uint64_t *)&unk_1ED75EA40);
          LOBYTE(v76) = *(_BYTE *)(v88 + *(int *)(v100 + 24));
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v73 + 32))(v60, v74, v101);
          v81 = (int *)sub_1C0789FA0();
          v82 = (void (*)(uint64_t, uint64_t, uint64_t))v102;
          v102((char *)(v60 + v81[5]), v97, v72);
          v82(v60 + v81[6], v78, v72);
          *(float *)(v60 + v81[7]) = v58;
          *(_QWORD *)(v60 + v81[8]) = v80;
          *(_BYTE *)(v60 + v81[9]) = (_BYTE)v76;
          *(_QWORD *)(v60 + v81[10]) = 0;
        }
        return;
      }
    }
    v62 = (uint64_t)v83;
    sub_1C106E500();
    v63 = (uint64_t)v93;
    sub_1C0784B6C((uint64_t)v93, (uint64_t *)&unk_1ED75EA40);
    sub_1C077B118();
    sub_1C07B2D8C(v64, v65, v66, v43);
    sub_1C09174F8(v62, v63);
    sub_1C07AD3A8();
    v58 = *(float *)(v57 + *(int *)(v59 + 28));
    goto LABEL_16;
  }
  sub_1C0784B6C(v22, &qword_1ED75A508);
  if (qword_1ED761458 != -1)
    swift_once();
  v52 = sub_1C106F544();
  sub_1C079E000(v52, (uint64_t)qword_1ED78D818);
  v53 = sub_1C106F538();
  v54 = sub_1C1070390();
  if (os_log_type_enabled(v53, v54))
  {
    v55 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v55 = 0;
    _os_log_impl(&dword_1C0771000, v53, v54, "Topic Matcher: skipping entityTriples are empty", v55, 2u);
    MEMORY[0x1C3BA8270](v55, -1, -1);
  }

  sub_1C08C1878();
  swift_allocError();
  *v56 = 0;
  swift_willThrow();
  sub_1C0784B6C(v48, (uint64_t *)&unk_1ED75EA40);
}

uint64_t TopicMatcher.execute()()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  v1[3] = v0;
  v1[4] = type metadata accessor for TopicMatcher();
  v1[5] = sub_1C0779D74();
  v2 = sub_1C0776744();
  v1[6] = v2;
  v1[7] = *(_QWORD *)(v2 - 8);
  v1[8] = sub_1C0775870();
  v1[9] = sub_1C0775870();
  v1[10] = sub_1C0775870();
  v1[11] = sub_1C0775870();
  sub_1C07ACF80(&qword_1ED7618D0);
  v1[12] = sub_1C0779D74();
  return swift_task_switch();
}

void sub_1C0D83DA0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10[32];

  v1 = v0[12];
  v2 = v0[6];
  v3 = v0[7];
  v5 = v0[3];
  v4 = v0[4];
  type metadata accessor for PhaseStores();
  v6 = *(int *)(v4 + 24);
  v10[0] = *(_BYTE *)(v5 + v6);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v1, v5 + *(int *)(v4 + 36), v2);
  sub_1C077B118();
  sub_1C07B2D8C(v7, v8, v9, v2);
  sub_1C0AB2308(v10, v1);
  sub_1C0784B6C(v1, &qword_1ED7618D0);
  __asm { BR              X9 }
}

uint64_t sub_1C0D83E54()
{
  uint64_t (*v0)(uint64_t, uint64_t, uint64_t);
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)(void);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t (*v37)(uint64_t, uint64_t, uint64_t);
  char v38;

  v7 = v6;
  v8 = v2[7];
  v9 = v0;
  v10 = v2[3];
  v35 = v7;
  v11 = *(_QWORD *)(v5 + v7);
  sub_1C07973B8(v9);
  v36 = v3;
  v12 = sub_1C0794DA4();
  *(_QWORD *)(v12 + 16) = v10;
  sub_1C0791D48();
  sub_1C09144FC(v13);
  v14 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
  sub_1C0779940();
  sub_1C07767D4();
  if (v1)
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    sub_1C077C104();
    sub_1C07767D4();
    v24 = (uint64_t (*)(void))v2[1];
  }
  else
  {
    v15 = sub_1C07946C4();
    if (*(_BYTE *)(v11 + *(int *)(v15 + 28)) == 1)
    {
      v23 = v2[10];
      sub_1C078F678(v15, v16, v17, v18, v19, v20, v21, v22, v31, v32, v33, v34, v35, v36, v37);
      *(_QWORD *)(sub_1C0794DA4() + 16) = v12;
      sub_1C0914518(v23);
      v14(v23, v10);
      sub_1C077C104();
    }
    v25 = v2[12];
    v26 = v2[6];
    sub_1C106AC6C();
    sub_1C077B118();
    sub_1C08892E4();
    v38 = *(_BYTE *)(v5 + v4);
    v37(v25, v36, v26);
    sub_1C077B118();
    sub_1C07B2D8C(v27, v28, v29, v26);
    sub_1C0AB25AC(&v38, v25);
    sub_1C0784B6C(v25, &qword_1ED7618D0);
    sub_1C07767D4();
    swift_task_dealloc();
    swift_task_dealloc();
    sub_1C077C104();
    swift_task_dealloc();
    swift_task_dealloc();
    v24 = (uint64_t (*)(void))v2[1];
  }
  return v24();
}

void sub_1C0D841A4(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;

  sub_1C0D8300C(a1, a2, a3);
  if (!v3)
  {
    v4 = sub_1C0789FA0();
    sub_1C078D56C(v4);
  }
}

void sub_1C0D841DC(void (*a1)(char *, uint64_t, uint64_t)@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X4>, void (*a4)(void)@<X5>, uint64_t (*a5)(_QWORD)@<X6>, uint64_t a6@<X7>, uint64_t a7@<X8>)
{
  uint64_t v7;
  uint64_t v8;

  sub_1C0D83694(a1, a2, a3, a4, a5, a6, a7);
  if (!v7)
  {
    v8 = sub_1C0789FA0();
    sub_1C078D56C(v8);
  }
}

uint64_t sub_1C0D84238()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_1C0806670;
  return TopicMatcher.execute()();
}

void sub_1C0D84280(void (*a1)(char *, uint64_t, uint64_t)@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_1C0D841DC(a1, a2, &qword_1ED75F138, (void (*)(void))sub_1C0AA4998, type metadata accessor for GraphTriple, (uint64_t)sub_1C09D3AC0, a3);
}

void sub_1C0D842B8(void (*a1)(char *, uint64_t, uint64_t)@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_1C0D841DC(a1, a2, &qword_1ED750E40, (void (*)(void))sub_1C0AA49A4, type metadata accessor for ConstructionGraphTriple, (uint64_t)sub_1C09D3EE4, a3);
}

void sub_1C0D842F0(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_1C0D841A4(a1, a2, a3);
}

void sub_1C0D84308(uint64_t a1)
{
  uint64_t v2;

  sub_1C0794BAC(&qword_1ED75A6E0, (uint64_t (*)(uint64_t))type metadata accessor for TopicMatcher, (uint64_t)&protocol conformance descriptor for TopicMatcher);
  *(_QWORD *)(a1 + 8) = v2;
}

void sub_1C0D84344(uint64_t a1)
{
  uint64_t v2;

  sub_1C0794BAC(&qword_1ED75A6D0, (uint64_t (*)(uint64_t))type metadata accessor for TopicMatcher, (uint64_t)&protocol conformance descriptor for TopicMatcher);
  *(_QWORD *)(a1 + 8) = v2;
}

_QWORD *initializeBufferWithCopyOfBuffer for TopicMatcher(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  int *v9;
  uint64_t v10;
  _QWORD *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v20)(char *, char *, uint64_t);
  char *v21;
  char *v22;
  uint64_t v23;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v18 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1C106AB28();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = type metadata accessor for Configuration();
    *(_OWORD *)((char *)a1 + *(int *)(v8 + 20)) = *(_OWORD *)((char *)a2 + *(int *)(v8 + 20));
    v9 = (int *)type metadata accessor for PhaseStores();
    *(_QWORD *)((char *)a1 + v9[5]) = *(_QWORD *)((char *)a2 + v9[5]);
    *(_QWORD *)((char *)a1 + v9[6]) = *(_QWORD *)((char *)a2 + v9[6]);
    *(_QWORD *)((char *)a1 + v9[7]) = *(_QWORD *)((char *)a2 + v9[7]);
    *(_QWORD *)((char *)a1 + v9[8]) = *(_QWORD *)((char *)a2 + v9[8]);
    *(_QWORD *)((char *)a1 + v9[9]) = *(_QWORD *)((char *)a2 + v9[9]);
    *(_QWORD *)((char *)a1 + v9[10]) = *(_QWORD *)((char *)a2 + v9[10]);
    *(_QWORD *)((char *)a1 + v9[11]) = *(_QWORD *)((char *)a2 + v9[11]);
    v10 = a3[5];
    v11 = (_QWORD *)((char *)a1 + v10);
    v12 = (char *)a2 + v10;
    v13 = *(_QWORD *)((char *)a2 + v10 + 8);
    *v11 = *(_QWORD *)((char *)a2 + v10);
    v11[1] = v13;
    v11[2] = *(_QWORD *)((char *)a2 + v10 + 16);
    v23 = type metadata accessor for Source();
    v14 = *(int *)(v23 + 24);
    v21 = &v12[v14];
    v22 = (char *)v11 + v14;
    v15 = sub_1C106D1F8();
    v20 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    v20(v22, v21, v15);
    *((_BYTE *)v11 + *(int *)(v23 + 28)) = v12[*(int *)(v23 + 28)];
    v16 = a3[7];
    *((_BYTE *)a1 + a3[6]) = *((_BYTE *)a2 + a3[6]);
    *(_DWORD *)((char *)a1 + v16) = *(_DWORD *)((char *)a2 + v16);
    v17 = a3[9];
    *((_BYTE *)a1 + a3[8]) = *((_BYTE *)a2 + a3[8]);
    v20((char *)a1 + v17, (char *)a2 + v17, v15);
  }
  return a1;
}

uint64_t destroy for TopicMatcher(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v9)(uint64_t, uint64_t);

  v4 = sub_1C106AB28();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  type metadata accessor for PhaseStores();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  v5 = a1 + *(int *)(a2 + 20);
  swift_bridgeObjectRelease();
  v6 = v5 + *(int *)(type metadata accessor for Source() + 24);
  v7 = sub_1C106D1F8();
  v9 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8);
  v9(v6, v7);
  return ((uint64_t (*)(uint64_t, uint64_t))v9)(a1 + *(int *)(a2 + 36), v7);
}

uint64_t initializeWithCopy for TopicMatcher(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v19)(char *, uint64_t, uint64_t);
  uint64_t v20;
  char *v21;
  uint64_t v22;

  v6 = sub_1C106AB28();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = type metadata accessor for Configuration();
  *(_OWORD *)(a1 + *(int *)(v7 + 20)) = *(_OWORD *)(a2 + *(int *)(v7 + 20));
  v8 = (int *)type metadata accessor for PhaseStores();
  *(_QWORD *)(a1 + v8[5]) = *(_QWORD *)(a2 + v8[5]);
  *(_QWORD *)(a1 + v8[6]) = *(_QWORD *)(a2 + v8[6]);
  *(_QWORD *)(a1 + v8[7]) = *(_QWORD *)(a2 + v8[7]);
  *(_QWORD *)(a1 + v8[8]) = *(_QWORD *)(a2 + v8[8]);
  *(_QWORD *)(a1 + v8[9]) = *(_QWORD *)(a2 + v8[9]);
  *(_QWORD *)(a1 + v8[10]) = *(_QWORD *)(a2 + v8[10]);
  *(_QWORD *)(a1 + v8[11]) = *(_QWORD *)(a2 + v8[11]);
  v9 = a3[5];
  v10 = (_QWORD *)(a1 + v9);
  v11 = a2 + v9;
  v12 = *(_QWORD *)(a2 + v9 + 8);
  *v10 = *(_QWORD *)(a2 + v9);
  v10[1] = v12;
  v10[2] = *(_QWORD *)(a2 + v9 + 16);
  v13 = type metadata accessor for Source();
  v14 = *(int *)(v13 + 24);
  v21 = (char *)v10 + v14;
  v22 = v13;
  v20 = v11 + v14;
  v15 = sub_1C106D1F8();
  v19 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 16);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  v19(v21, v20, v15);
  *((_BYTE *)v10 + *(int *)(v22 + 28)) = *(_BYTE *)(v11 + *(int *)(v22 + 28));
  v16 = a3[7];
  *(_BYTE *)(a1 + a3[6]) = *(_BYTE *)(a2 + a3[6]);
  *(_DWORD *)(a1 + v16) = *(_DWORD *)(a2 + v16);
  v17 = a3[9];
  *(_BYTE *)(a1 + a3[8]) = *(_BYTE *)(a2 + a3[8]);
  v19((char *)(a1 + v17), a2 + v17, v15);
  return a1;
}

uint64_t assignWithCopy for TopicMatcher(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  int *v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(char *, uint64_t, uint64_t);

  v6 = sub_1C106AB28();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(type metadata accessor for Configuration() + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *v8 = *v9;
  v8[1] = v9[1];
  v10 = (int *)type metadata accessor for PhaseStores();
  *(_QWORD *)(a1 + v10[5]) = *(_QWORD *)(a2 + v10[5]);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + v10[6]) = *(_QWORD *)(a2 + v10[6]);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + v10[7]) = *(_QWORD *)(a2 + v10[7]);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + v10[8]) = *(_QWORD *)(a2 + v10[8]);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + v10[9]) = *(_QWORD *)(a2 + v10[9]);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + v10[10]) = *(_QWORD *)(a2 + v10[10]);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + v10[11]) = *(_QWORD *)(a2 + v10[11]);
  swift_retain();
  swift_release();
  v11 = a3[5];
  v12 = (_QWORD *)(a1 + v11);
  v13 = a2 + v11;
  *v12 = *(_QWORD *)(a2 + v11);
  v12[1] = *(_QWORD *)(a2 + v11 + 8);
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  swift_bridgeObjectRelease();
  v12[2] = *(_QWORD *)(v13 + 16);
  v14 = type metadata accessor for Source();
  v15 = *(int *)(v14 + 24);
  v16 = (char *)v12 + v15;
  v17 = v13 + v15;
  v18 = sub_1C106D1F8();
  v19 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 24);
  v19(v16, v17, v18);
  *((_BYTE *)v12 + *(int *)(v14 + 28)) = *(_BYTE *)(v13 + *(int *)(v14 + 28));
  *(_BYTE *)(a1 + a3[6]) = *(_BYTE *)(a2 + a3[6]);
  *(_DWORD *)(a1 + a3[7]) = *(_DWORD *)(a2 + a3[7]);
  *(_BYTE *)(a1 + a3[8]) = *(_BYTE *)(a2 + a3[8]);
  v19((char *)(a1 + a3[9]), a2 + a3[9], v18);
  return a1;
}

uint64_t initializeWithTake for TopicMatcher(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;

  v6 = sub_1C106AB28();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = type metadata accessor for Configuration();
  *(_OWORD *)(a1 + *(int *)(v7 + 20)) = *(_OWORD *)(a2 + *(int *)(v7 + 20));
  v8 = (int *)type metadata accessor for PhaseStores();
  *(_QWORD *)(a1 + v8[5]) = *(_QWORD *)(a2 + v8[5]);
  *(_QWORD *)(a1 + v8[6]) = *(_QWORD *)(a2 + v8[6]);
  *(_QWORD *)(a1 + v8[7]) = *(_QWORD *)(a2 + v8[7]);
  *(_QWORD *)(a1 + v8[8]) = *(_QWORD *)(a2 + v8[8]);
  *(_QWORD *)(a1 + v8[9]) = *(_QWORD *)(a2 + v8[9]);
  *(_QWORD *)(a1 + v8[10]) = *(_QWORD *)(a2 + v8[10]);
  *(_QWORD *)(a1 + v8[11]) = *(_QWORD *)(a2 + v8[11]);
  v9 = a3[5];
  v10 = a1 + v9;
  v11 = a2 + v9;
  *(_OWORD *)v10 = *(_OWORD *)(a2 + v9);
  *(_QWORD *)(v10 + 16) = *(_QWORD *)(a2 + v9 + 16);
  v12 = type metadata accessor for Source();
  v13 = *(int *)(v12 + 24);
  v14 = v10 + v13;
  v15 = v11 + v13;
  v16 = sub_1C106D1F8();
  v17 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 32);
  v17(v14, v15, v16);
  *(_BYTE *)(v10 + *(int *)(v12 + 28)) = *(_BYTE *)(v11 + *(int *)(v12 + 28));
  v18 = a3[7];
  *(_BYTE *)(a1 + a3[6]) = *(_BYTE *)(a2 + a3[6]);
  *(_DWORD *)(a1 + v18) = *(_DWORD *)(a2 + v18);
  v19 = a3[9];
  *(_BYTE *)(a1 + a3[8]) = *(_BYTE *)(a2 + a3[8]);
  v17(a1 + v19, a2 + v19, v16);
  return a1;
}

uint64_t assignWithTake for TopicMatcher(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;

  v6 = sub_1C106AB28();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = type metadata accessor for Configuration();
  *(_OWORD *)(a1 + *(int *)(v7 + 20)) = *(_OWORD *)(a2 + *(int *)(v7 + 20));
  v8 = (int *)type metadata accessor for PhaseStores();
  *(_QWORD *)(a1 + v8[5]) = *(_QWORD *)(a2 + v8[5]);
  swift_release();
  *(_QWORD *)(a1 + v8[6]) = *(_QWORD *)(a2 + v8[6]);
  swift_release();
  *(_QWORD *)(a1 + v8[7]) = *(_QWORD *)(a2 + v8[7]);
  swift_release();
  *(_QWORD *)(a1 + v8[8]) = *(_QWORD *)(a2 + v8[8]);
  swift_release();
  *(_QWORD *)(a1 + v8[9]) = *(_QWORD *)(a2 + v8[9]);
  swift_release();
  *(_QWORD *)(a1 + v8[10]) = *(_QWORD *)(a2 + v8[10]);
  swift_release();
  *(_QWORD *)(a1 + v8[11]) = *(_QWORD *)(a2 + v8[11]);
  swift_release();
  v9 = a3[5];
  v10 = (_QWORD *)(a1 + v9);
  v11 = a2 + v9;
  v12 = *(_QWORD *)(a2 + v9 + 8);
  *v10 = *(_QWORD *)(a2 + v9);
  v10[1] = v12;
  swift_bridgeObjectRelease();
  v10[2] = *(_QWORD *)(v11 + 16);
  v13 = type metadata accessor for Source();
  v14 = *(int *)(v13 + 24);
  v15 = (char *)v10 + v14;
  v16 = v11 + v14;
  v17 = sub_1C106D1F8();
  v18 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 40);
  v18(v15, v16, v17);
  *((_BYTE *)v10 + *(int *)(v13 + 28)) = *(_BYTE *)(v11 + *(int *)(v13 + 28));
  v19 = a3[7];
  *(_BYTE *)(a1 + a3[6]) = *(_BYTE *)(a2 + a3[6]);
  *(_DWORD *)(a1 + v19) = *(_DWORD *)(a2 + v19);
  v20 = a3[9];
  *(_BYTE *)(a1 + a3[8]) = *(_BYTE *)(a2 + a3[8]);
  v18((char *)(a1 + v20), a2 + v20, v17);
  return a1;
}

uint64_t getEnumTagSinglePayload for TopicMatcher()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1C0D84D8C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;

  v6 = sub_1C077D0AC();
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)v3)
  {
    v7 = v6;
    v8 = v4;
    return sub_1C07B2D80(v8, v3, v7);
  }
  v9 = type metadata accessor for Source();
  if (*(_DWORD *)(*(_QWORD *)(v9 - 8) + 84) == (_DWORD)v3)
  {
    v7 = v9;
    v10 = a3[5];
LABEL_10:
    v8 = v4 + v10;
    return sub_1C07B2D80(v8, v3, v7);
  }
  if ((_DWORD)v3 != 252)
  {
    v7 = sub_1C0776744();
    v10 = a3[9];
    goto LABEL_10;
  }
  v11 = *(unsigned __int8 *)(v4 + a3[6]);
  if (v11 >= 4)
    return v11 - 3;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for TopicMatcher()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1C0D84E40(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;

  v8 = sub_1C077D0AC();
  if (*(_DWORD *)(*(_QWORD *)(v8 - 8) + 84) == a3)
  {
    v9 = v8;
    v10 = v5;
  }
  else
  {
    result = type metadata accessor for Source();
    if (*(_DWORD *)(*(_QWORD *)(result - 8) + 84) == a3)
    {
      v9 = result;
      v12 = a4[5];
    }
    else
    {
      if (a3 == 252)
      {
        *(_BYTE *)(v5 + a4[6]) = v4 + 3;
        return result;
      }
      v9 = sub_1C0776744();
      v12 = a4[9];
    }
    v10 = v5 + v12;
  }
  return sub_1C07B2D8C(v10, v4, v4, v9);
}

uint64_t sub_1C0D84EE8()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  result = type metadata accessor for PhaseStores();
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for Source();
    if (v2 <= 0x3F)
    {
      result = sub_1C106D1F8();
      if (v3 <= 0x3F)
      {
        swift_initStructMetadata();
        return 0;
      }
    }
  }
  return result;
}

void sub_1C0D84FA8(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_1C0D842F0(a1, a2, a3);
}

uint64_t static Transformers.reportError(error:context:config:pipelineType:)(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, unsigned __int8 *a5)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  int v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t inited;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v10 = type metadata accessor for Pipeline.StatusStore();
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *a5;
  if (qword_1ED761458 != -1)
    swift_once();
  v14 = sub_1C106F544();
  sub_1C079E000(v14, (uint64_t)qword_1ED78D818);
  sub_1C07767B4();
  sub_1C077B72C();
  sub_1C07767B4();
  sub_1C077B72C();
  v15 = sub_1C106F538();
  v16 = sub_1C1070390();
  if (os_log_type_enabled(v15, v16))
  {
    v17 = swift_slowAlloc();
    v28 = v13;
    v18 = v17;
    v27 = swift_slowAlloc();
    v31 = v27;
    *(_DWORD *)v18 = 136315394;
    v29 = a4;
    sub_1C07767B4();
    v19 = sub_1C0788DAC(a2, a3, &v31);
    sub_1C07A7708(v19);
    sub_1C10705AC();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v18 + 12) = 2080;
    v30 = a1;
    sub_1C077B72C();
    sub_1C07ACF80(&qword_1ED7614F0);
    v20 = sub_1C106FB5C();
    v22 = sub_1C0788DAC(v20, v21, &v31);
    sub_1C07A7708(v22);
    sub_1C10705AC();
    swift_bridgeObjectRelease();
    sub_1C07888BC();
    sub_1C07888BC();
    _os_log_impl(&dword_1C0771000, v15, v16, "Transformer error attempting to transform %s due to: %s", (uint8_t *)v18, 0x16u);
    swift_arrayDestroy();
    sub_1C0776778();
  }
  swift_bridgeObjectRelease_n();
  sub_1C07888BC();
  sub_1C07888BC();

  sub_1C078E3E0(a4, (uint64_t)v12);
  v12[*(int *)(v10 + 20)] = v13;
  Pipeline.StatusStore.currentSessionId()();
  sub_1C0A157EC((uint64_t)v12);
  sub_1C106F244();
  sub_1C07ACF80((uint64_t *)&unk_1ED7614C0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C1078A20;
  *(_QWORD *)(inited + 32) = 0x726F727265;
  *(_QWORD *)(inited + 40) = 0xE500000000000000;
  v31 = a1;
  sub_1C077B72C();
  sub_1C07ACF80(&qword_1ED7614F0);
  sub_1C106FB5C();
  v24 = sub_1C106FAF0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(inited + 48) = v24;
  *(_QWORD *)(inited + 56) = 0x747865746E6F63;
  *(_QWORD *)(inited + 64) = 0xE700000000000000;
  *(_QWORD *)(inited + 72) = sub_1C106FAF0();
  *(_QWORD *)(inited + 80) = 0x496E6F6973736573;
  *(_QWORD *)(inited + 88) = 0xE900000000000064;
  v25 = sub_1C106FAF0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(inited + 96) = v25;
  sub_1C077CA90();
  sub_1C106F97C();
  sub_1C106F22C();
  return swift_bridgeObjectRelease();
}

void Transformer.stageName.getter(_BYTE *a1@<X8>)
{
  *a1 = 7;
}

ValueMetadata *type metadata accessor for Transformers()
{
  return &type metadata for Transformers;
}

uint64_t dispatch thunk of Transformer.clearAllData()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t sub_1C0D85390(uint64_t a1, char *a2)
{
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7[4];
  char v8[24];
  uint64_t v9;

  v3 = *a2;
  sub_1C07C015C(a1, (uint64_t)v8);
  if (v9)
  {
    if ((swift_dynamicCast() & 1) != 0)
    {
      v4 = v7[2];
      v5 = v7[3];
      v8[0] = v3;
      sub_1C0D855C4(v7, v8);
      swift_bridgeObjectRelease();
      return sub_1C0D85A18(v4, v5);
    }
  }
  else
  {
    sub_1C07C011C((uint64_t)v8);
  }
  LOBYTE(v7[0]) = v3;
  v8[0] = -104;
  result = static ActivityType.== infix(_:_:)((unsigned __int8 *)v7);
  if ((result & 1) != 0)
  {
    result = sub_1C0D854B4(result);
    if (!v2)
      return sub_1C0FDE8DC(result);
  }
  return result;
}

#error "1C0D85560: call analysis failed (funcsize=63)"

void sub_1C0D855C4(uint64_t *a1, char *a2)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  char v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v3 = a1[1];
  v4 = *((_BYTE *)a1 + 56);
  v5 = *((_BYTE *)a1 + 72);
  v6 = *a2;
  if (v3)
  {
    v7 = *a1;
    type metadata accessor for LifeEventStructs.IdentifierRelationshipType(0);
    sub_1C077B5BC();
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    sub_1C0FDF5A0();
    v9 = v8;
    v10 = (_QWORD *)(v8
                   + OBJC_IVAR____TtCO24IntelligencePlatformCore16LifeEventStructs26IdentifierRelationshipType_identifierId);
    *v10 = v7;
    v10[1] = v3;
    swift_bridgeObjectRelease();
    sub_1C07AE22C((__n128 *)(v9+ OBJC_IVAR____TtCO24IntelligencePlatformCore16LifeEventStructs26IdentifierRelationshipType_identifierType), (__n128)xmmword_1C10BB450);
    sub_1C07ACF80(&qword_1ED762CD0);
    v11 = swift_allocObject();
    *(_OWORD *)(v11 + 16) = xmmword_1C10812D0;
    *(_QWORD *)(v11 + 32) = v9;
    v25 = v11;
    sub_1C106FF28();
    sub_1C077AEE4();
    sub_1C0FDE8F8(v25);
    v12 = sub_1C077FA84();
  }
  else
  {
    if (qword_1ED762B18 != -1)
      swift_once();
    v13 = sub_1C106F544();
    sub_1C079E000(v13, (uint64_t)qword_1ED762AF8);
    v14 = sub_1C106F538();
    v15 = sub_1C1070390();
    if (os_log_type_enabled(v14, v15))
    {
      v16 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v16 = 0;
      _os_log_impl(&dword_1C0771000, v14, v15, "Got a transportation activity with no event id", v16, 2u);
      MEMORY[0x1C3BA8270](v16, -1, -1);
    }

  }
  if ((v5 & 1) == 0)
  {
    type metadata accessor for LifeEventStructs.QuantityRelationshipType(0);
    sub_1C077B5BC();
    sub_1C0FFAEBC();
    v17 = sub_1C1070180();
    sub_1C07A1560(v17, v18);
    v19 = sub_1C077AEE4();
    sub_1C0FDE914(v19);
    v12 = sub_1C077FA84();
  }
  if ((v4 & 1) == 0)
  {
    type metadata accessor for LifeEventStructs.QuantityRelationshipType(0);
    sub_1C077B5BC();
    sub_1C0FFAEBC();
    v20 = sub_1C1070180();
    sub_1C07A1560(v20, v21);
    v22 = sub_1C077AEE4();
    sub_1C0FDE930(v22);
    v12 = sub_1C077FA84();
  }
  if ((v6 & 0xE0) == 0x40)
  {
    if ((v6 & 0x1F) == 3)
    {
      v24 = sub_1C0D854B4(v12);
      if (!v2)
        sub_1C0FDE8DC(v24);
    }
    else if ((v6 & 0x1F) == 2)
    {
      v23 = sub_1C0D85854(v12);
      if (!v2)
        sub_1C0FDE94C(v23);
    }
  }
}

#error "1C0D858D0: call analysis failed (funcsize=49)"

void TransportationActivityMetadata.identifier.getter()
{
  sub_1C077AE90();
  sub_1C0778534();
}

void TransportationActivityMetadata.identifier.setter()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  sub_1C0794BE8();
  *v1 = v2;
  v1[1] = v0;
  sub_1C077671C();
}

uint64_t (*TransportationActivityMetadata.identifier.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t TransportationActivityMetadata.vehicleInfo.getter@<X0>(uint64_t *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = v1[2];
  v3 = v1[3];
  v4 = v1[4];
  v5 = v1[5];
  *a1 = v2;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  return sub_1C0D85998(v2, v3);
}

uint64_t sub_1C0D85998(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2 != 1)
  {
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    return _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  }
  return result;
}

__n128 TransportationActivityMetadata.vehicleInfo.setter(__n128 *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  __n128 result;
  __n128 v5;

  v5 = *a1;
  v2 = a1[1].n128_i64[0];
  v3 = a1[1].n128_i64[1];
  sub_1C0D85A18(v1[2], v1[3]);
  result = v5;
  *((__n128 *)v1 + 1) = v5;
  v1[4] = v2;
  v1[5] = v3;
  return result;
}

uint64_t sub_1C0D85A18(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2 != 1)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t (*TransportationActivityMetadata.vehicleInfo.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t TransportationActivityMetadata.distance.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 48);
}

uint64_t TransportationActivityMetadata.distance.setter(uint64_t result, char a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 48) = result;
  *(_BYTE *)(v2 + 56) = a2 & 1;
  return result;
}

uint64_t (*TransportationActivityMetadata.distance.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t TransportationActivityMetadata.elevationGain.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 64);
}

uint64_t TransportationActivityMetadata.elevationGain.setter(uint64_t result, char a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 64) = result;
  *(_BYTE *)(v2 + 72) = a2 & 1;
  return result;
}

uint64_t (*TransportationActivityMetadata.elevationGain.modify())(_QWORD)
{
  return nullsub_1;
}

void __swiftcall TransportationActivityMetadata.init(identifier:vehicleInfo:distance:elevationGain:)(IntelligencePlatformCore::TransportationActivityMetadata *__return_ptr retstr, Swift::String_optional identifier, IntelligencePlatformCore::TransportationActivityMetadata::VehicleInfoMetadata_optional vehicleInfo, Swift::Double_optional distance, Swift::Double_optional elevationGain)
{
  Swift::String_optional v5;

  retstr->identifier = identifier;
  v5 = *(Swift::String_optional *)(vehicleInfo.value.stableId.value._countAndFlagsBits + 16);
  retstr->vehicleInfo.value.stableId = *(Swift::String_optional *)vehicleInfo.value.stableId.value._countAndFlagsBits;
  retstr->vehicleInfo.value.carPlayId = v5;
  *(_QWORD *)&retstr->distance.value = vehicleInfo.value.stableId.value._object;
  retstr->distance.is_nil = vehicleInfo.value.carPlayId.value._countAndFlagsBits & 1;
  *(_QWORD *)&retstr->elevationGain.value = vehicleInfo.value.carPlayId.value._object;
  retstr->elevationGain.is_nil = distance.is_nil;
}

void TransportationActivityMetadata.VehicleInfoMetadata.stableId.getter()
{
  sub_1C077AE90();
  sub_1C0778534();
}

void TransportationActivityMetadata.VehicleInfoMetadata.stableId.setter()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  sub_1C0794BE8();
  *v1 = v2;
  v1[1] = v0;
  sub_1C077671C();
}

uint64_t (*TransportationActivityMetadata.VehicleInfoMetadata.stableId.modify())(_QWORD)
{
  return nullsub_1;
}

void TransportationActivityMetadata.VehicleInfoMetadata.carPlayId.getter()
{
  sub_1C077AE90();
  sub_1C0778534();
}

void TransportationActivityMetadata.VehicleInfoMetadata.carPlayId.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  sub_1C077671C();
}

uint64_t (*TransportationActivityMetadata.VehicleInfoMetadata.carPlayId.modify())(_QWORD)
{
  return nullsub_1;
}

IntelligencePlatformCore::TransportationActivityMetadata::VehicleInfoMetadata __swiftcall TransportationActivityMetadata.VehicleInfoMetadata.init(stableId:carPlayId:)(Swift::String_optional stableId, Swift::String_optional carPlayId)
{
  Swift::String_optional *v2;
  IntelligencePlatformCore::TransportationActivityMetadata::VehicleInfoMetadata result;

  *v2 = stableId;
  v2[1] = carPlayId;
  result.carPlayId = carPlayId;
  result.stableId = stableId;
  return result;
}

uint64_t destroy for TransportationActivityMetadata(uint64_t a1)
{
  uint64_t result;

  swift_bridgeObjectRelease();
  result = *(_QWORD *)(a1 + 24);
  if (result != 1)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for TransportationActivityMetadata(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  uint64_t v7;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(_QWORD *)(a2 + 24);
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  if (v5 == 1)
  {
    v6 = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
    *(_OWORD *)(a1 + 32) = v6;
  }
  else
  {
    *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
    *(_QWORD *)(a1 + 24) = v5;
    v7 = *(_QWORD *)(a2 + 40);
    *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 40) = v7;
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  }
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  return a1;
}

uint64_t assignWithCopy for TransportationActivityMetadata(uint64_t a1, uint64_t a2)
{
  _OWORD *v4;
  _OWORD *v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  swift_bridgeObjectRelease();
  v4 = (_OWORD *)(a1 + 16);
  v5 = (_OWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  if (*(_QWORD *)(a1 + 24) == 1)
  {
    if (v6 == 1)
    {
      v7 = *(_OWORD *)(a2 + 32);
      *v4 = *v5;
      *(_OWORD *)(a1 + 32) = v7;
    }
    else
    {
      *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
      *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
      *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
      *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    }
  }
  else if (v6 == 1)
  {
    sub_1C0D85DA0(a1 + 16);
    v8 = *(_OWORD *)(a2 + 32);
    *v4 = *v5;
    *(_OWORD *)(a1 + 32) = v8;
  }
  else
  {
    *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
    *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    swift_bridgeObjectRelease();
    *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    swift_bridgeObjectRelease();
  }
  v9 = *(_QWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = v9;
  v10 = *(_QWORD *)(a2 + 64);
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = v10;
  return a1;
}

uint64_t sub_1C0D85DA0(uint64_t a1)
{
  destroy for AppIntentContent();
  return a1;
}

uint64_t assignWithTake for TransportationActivityMetadata(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  uint64_t v7;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 24) != 1)
  {
    v5 = *(_QWORD *)(a2 + 24);
    if (v5 != 1)
    {
      *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
      *(_QWORD *)(a1 + 24) = v5;
      swift_bridgeObjectRelease();
      v7 = *(_QWORD *)(a2 + 40);
      *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
      *(_QWORD *)(a1 + 40) = v7;
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    sub_1C0D85DA0(a1 + 16);
  }
  v6 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v6;
LABEL_6:
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  return a1;
}

uint64_t getEnumTagSinglePayload for TransportationActivityMetadata(uint64_t a1, unsigned int a2)
{
  int v2;
  unint64_t v3;

  if (a2)
  {
    if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 73))
    {
      v2 = *(_DWORD *)a1 + 2147483646;
    }
    else
    {
      v3 = *(_QWORD *)(a1 + 8);
      if (v3 >= 0xFFFFFFFF)
        LODWORD(v3) = -1;
      v2 = v3 - 1;
      if (v2 < 0)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TransportationActivityMetadata(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 72) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 73) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 73) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for TransportationActivityMetadata()
{
  return &type metadata for TransportationActivityMetadata;
}

ValueMetadata *type metadata accessor for TransportationActivityMetadata.VehicleInfoMetadata()
{
  return &type metadata for TransportationActivityMetadata.VehicleInfoMetadata;
}

uint64_t dispatch thunk of TripleBlockingFunction.predicates.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of TripleBlockingFunction.relationshipPredicates.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of TripleBlockingFunction.blockValue(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 24))();
}

ValueMetadata *type metadata accessor for TriplesIndexHandler()
{
  return &type metadata for TriplesIndexHandler;
}

void sub_1C0D85F8C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  char *v28;
  char *v29;
  uint64_t v30;
  char v31;
  void (*v32)(char *, uint64_t);
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  char v43;
  BOOL v44;
  unint64_t v45;
  char v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  char v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  uint64_t v67;
  char v68;
  uint64_t v69;
  uint64_t v70;
  int v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  char v81;
  unint64_t v82;
  char v83;
  char v84;
  unint64_t v85;
  uint64_t v86;
  _QWORD v87[2];
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  _QWORD v110[3];
  uint64_t v111;

  sub_1C07ACF80(&qword_1ED753958);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v2);
  sub_1C077AED0();
  v88 = v3;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v4);
  sub_1C0778674();
  v91 = v5;
  sub_1C077CF58();
  v6 = sub_1C106E590();
  v100 = *(_QWORD *)(v6 - 8);
  v101 = v6;
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v7);
  v99 = (char *)v87 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C077CF58();
  v97 = sub_1C106EB24();
  v95 = *(_QWORD *)(v97 - 8);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v9);
  v94 = (char *)v87 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v11);
  sub_1C0778674();
  v96 = v12;
  sub_1C077CF58();
  v107 = sub_1C106E41C();
  v98 = *(_QWORD *)(v107 - 8);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v13);
  sub_1C077AED0();
  v89 = v14;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v15);
  sub_1C0778674();
  v106 = v16;
  v17 = sub_1C07BD168();
  v108 = *(_QWORD *)(v17 - 8);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v18);
  sub_1C077AED0();
  v103 = v19;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v20);
  v22 = (char *)v87 - v21;
  v23 = sub_1C106F97C();
  v24 = *(_QWORD *)(a1 + 16);
  if (!v24)
  {
LABEL_32:
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    sub_1C08A336C();
    swift_bridgeObjectRelease_n();
    sub_1C0776760();
    return;
  }
  v25 = a1 + 32;
  v87[1] = a1;
  sub_1C07767B4();
  v102 = v17;
  v105 = v22;
  while (1)
  {
    v104 = v24;
    sub_1C07D6D1C(v25, (uint64_t)v110);
    sub_1C07A9480(v110, v111);
    v26 = v106;
    sub_1C07BCAC0();
    sub_1C106EA7C();
    v27 = sub_1C106E2FC();
    sub_1C07A0428(v26);
    if ((v27 & 1) != 0)
      goto LABEL_5;
    sub_1C07A405C();
    v28 = v96;
    sub_1C07BCAC0();
    sub_1C106EA70();
    v29 = v94;
    sub_1C106EB0C();
    sub_1C07803B8(qword_1ED75EA50, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3D450], MEMORY[0x1E0D3D478]);
    v30 = v97;
    v31 = sub_1C106FAA8();
    v32 = *(void (**)(char *, uint64_t))(v95 + 8);
    v32(v29, v30);
    v32(v28, v30);
    if ((v31 & 1) != 0)
    {
LABEL_5:
      sub_1C07A405C();
      v33 = v99;
      sub_1C07B19FC();
      sub_1C106EA94();
      sub_1C106E530();
      (*(void (**)(char *, uint64_t))(v100 + 8))(v33, v101);
      sub_1C0792040();
      v34 = v106;
      sub_1C0787A98();
      sub_1C106EAA0();
      sub_1C106E1E8();
      sub_1C07A0428(v34);
      sub_1C07A9480(v110, v111);
      sub_1C106EA88();
      v35 = (uint64_t)v105;
      sub_1C07B19FC();
      sub_1C106E728();
    }
    else
    {
      sub_1C07A405C();
      v60 = v99;
      sub_1C07BCAC0();
      sub_1C106EA94();
      v93 = sub_1C106E530();
      v92 = v61;
      (*(void (**)(char *, uint64_t))(v100 + 8))(v60, v101);
      sub_1C07A9480(v110, v111);
      v62 = v106;
      sub_1C106EAA0();
      sub_1C07B0108();
      sub_1C07A0428(v62);
      sub_1C07A9480(v110, v111);
      v63 = v96;
      sub_1C106EA70();
      sub_1C106EADC();
      v32(v63, v97);
      v35 = (uint64_t)v105;
      sub_1C106E728();
      v64 = sub_1C079E9A0();
      if (*(_QWORD *)(v23 + 16))
      {
        v66 = sub_1C07AAE1C(v64, v65);
        v67 = v102;
        if ((v68 & 1) != 0)
        {
          (*(void (**)(uint64_t, unint64_t, uint64_t))(v108 + 16))(v91, *(_QWORD *)(v23 + 56) + *(_QWORD *)(v108 + 72) * v66, v102);
          v69 = 0;
        }
        else
        {
          v69 = 1;
        }
      }
      else
      {
        v69 = 1;
        v67 = v102;
      }
      v70 = v91;
      sub_1C07B2D8C(v91, v69, 1, v67);
      sub_1C0775834();
      v71 = sub_1C07B2D80(v70, 1, v67);
      sub_1C0784B30(v70, &qword_1ED753958);
      if (v71 != 1)
      {
        v73 = sub_1C079E9A0();
        v75 = v74;
        sub_1C07A405C();
        v76 = v89;
        sub_1C078B48C();
        v92 = sub_1C106E1E8();
        v93 = v77;
        sub_1C07A0428(v76);
        v78 = v73;
        sub_1C07A405C();
        sub_1C07B19FC();
        v79 = sub_1C106EA88();
        sub_1C077C0B8();
        swift_isUniquelyReferenced_nonNull_native();
        v109 = v23;
        sub_1C077C0B8();
        sub_1C07AAE1C(v73, v75);
        sub_1C077F0AC();
        if (v44)
          goto LABEL_35;
        v82 = v80;
        v83 = v81;
        v90 = v79;
        sub_1C07ACF80(&qword_1EF649508);
        v84 = sub_1C07A2B90();
        v39 = v102;
        if ((v84 & 1) != 0)
        {
          sub_1C077D774(v78, v75);
          sub_1C07A5548();
          if (!v50)
            goto LABEL_37;
          v82 = v85;
        }
        if ((v83 & 1) == 0)
          goto LABEL_36;
        v86 = v88;
        sub_1C07804E0(v88, *(_QWORD *)(v109 + 56) + *(_QWORD *)(v108 + 72) * v82, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v108 + 32));
        sub_1C0779800(v86, 0);
        sub_1C106E710();
        swift_bridgeObjectRelease();
        sub_1C0775834();
        sub_1C0D5CC90(v86, 1, &v109, v82, v78, v75);
        sub_1C0784B30(v86, &qword_1ED753958);
        swift_bridgeObjectRelease();
        sub_1C0790AE0();
        goto LABEL_16;
      }
      sub_1C07A405C();
      v72 = v106;
      sub_1C078B48C();
      sub_1C106E1E8();
      sub_1C07A0428(v72);
      sub_1C0792040();
      sub_1C0787A98();
      sub_1C106EA88();
      sub_1C07B19FC();
      sub_1C079C0C4();
      swift_bridgeObjectRelease();
      sub_1C0775834();
    }
    v36 = sub_1C079E9A0();
    v38 = v37;
    v39 = v102;
    sub_1C07804E0(v103, v35, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v108 + 16));
    swift_isUniquelyReferenced_nonNull_native();
    v109 = v23;
    v40 = sub_1C0787A98();
    sub_1C07AAE1C(v40, v41);
    sub_1C077F0AC();
    if (v44)
      break;
    v45 = v42;
    v46 = v43;
    sub_1C07ACF80(&qword_1EF649508);
    if ((sub_1C07A2B90() & 1) != 0)
    {
      v47 = sub_1C0787A98();
      sub_1C077D774(v47, v48);
      sub_1C07A5548();
      if (!v50)
        goto LABEL_37;
      v45 = v49;
    }
    v51 = v109;
    if ((v46 & 1) != 0)
    {
      v52 = sub_1C0786718();
      sub_1C07804E0(v52, v103, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v53 + 40));
    }
    else
    {
      *(_QWORD *)(v109 + 8 * (v45 >> 6) + 64) |= 1 << v45;
      v54 = (uint64_t *)(*(_QWORD *)(v51 + 48) + 16 * v45);
      *v54 = v36;
      v54[1] = v38;
      v55 = sub_1C0786718();
      sub_1C07804E0(v55, v103, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v56 + 32));
      v57 = *(_QWORD *)(v51 + 16);
      v44 = __OFADD__(v57, 1);
      v58 = v57 + 1;
      if (v44)
        goto LABEL_34;
      *(_QWORD *)(v51 + 16) = v58;
      sub_1C077C0B8();
    }
    sub_1C0790AE0();
LABEL_16:
    swift_bridgeObjectRelease();
    v59 = v104;
    (*(void (**)(char *, uint64_t))(v108 + 8))(v105, v39);
    _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v110);
    v25 += 40;
    v24 = v59 - 1;
    if (!v24)
    {
      swift_bridgeObjectRelease();
      goto LABEL_32;
    }
  }
  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  sub_1C0779800(v88, 1);
  __break(1u);
LABEL_37:
  sub_1C1070D44();
  __break(1u);
}

uint64_t sub_1C0D867A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t (*v34)(uint64_t, uint64_t, uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  uint64_t *v38;
  void (*v39)(uint64_t, uint64_t);
  unint64_t v40;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  int v48;
  uint64_t v49;
  _QWORD *v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t (*v55)(uint64_t);
  uint64_t v56;
  void (*v57)(char *, uint64_t);
  uint64_t v58;
  uint64_t v59;
  void (*v60)(uint64_t);
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  int v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t (*v68)(uint64_t, uint64_t, uint64_t);
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t (*v75)(uint64_t, uint64_t, uint64_t);
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t (*v79)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v80;
  uint64_t v81;
  int v82;
  uint64_t v83;
  uint64_t (*v84)(uint64_t, uint64_t, uint64_t);
  uint64_t *v85;
  uint64_t *v86;
  unint64_t v88;
  void (*v89)(uint64_t, uint64_t (*)(uint64_t, uint64_t, uint64_t));
  unint64_t v90;
  _QWORD v91[3];
  uint64_t v92;
  _QWORD *v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  _QWORD *v104;
  uint64_t (*v105)(uint64_t, uint64_t, uint64_t);
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  unint64_t v111;
  uint64_t v112;

  v98 = a3;
  v99 = a1;
  sub_1C07ACF80(&qword_1ED756690);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v7);
  sub_1C077AE40();
  v95 = v8;
  sub_1C077CF58();
  v97 = sub_1C106D9B4();
  v94 = *(_QWORD *)(v97 - 8);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v9);
  v96 = (char *)v91 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C077CF58();
  v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1C106E4AC();
  v104 = (_QWORD *)*((_QWORD *)v11 - 1);
  v105 = v11;
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v12);
  v91[2] = (char *)v91 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v14);
  sub_1C0778674();
  v106 = v15;
  sub_1C077CF58();
  v102 = sub_1C106D2B8();
  v100 = *(_QWORD *)(v102 - 8);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v16);
  sub_1C077AE40();
  v101 = v17;
  sub_1C07ACF80(&qword_1ED75EA10);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)v91 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_1C106EB78();
  v22 = *(_QWORD *)(v21 - 8);
  v107 = v21;
  v108 = v22;
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v23);
  sub_1C077AE40();
  v112 = v24;
  sub_1C077CF58();
  sub_1C106CD78();
  sub_1C0795D24();
  MEMORY[0x1E0C80A78](v25);
  sub_1C0779614();
  v26 = sub_1C106CD84();
  v27 = *(_QWORD *)(v26 - 8);
  MEMORY[0x1E0C80A78](v26);
  v29 = (uint64_t)v91 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v30);
  v32 = (uint64_t)v91 - v31;
  v103 = a2;
  sub_1C106CD90();
  if ((*(unsigned int (**)(uint64_t, uint64_t))(v27 + 88))(v32, v26) != *MEMORY[0x1E0D3B7B8])
    goto LABEL_5;
  (*(void (**)(uint64_t, uint64_t))(v27 + 96))(v32, v26);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 32))(v3, v32, v5);
  v33 = v99;
  v32 = sub_1C106D708();
  v91[1] = v5;
  v103 = v4;
  if (v32 < 0)
  {
    v35 = (uint64_t)v104;
    v34 = v105;
  }
  else
  {
    v29 = sub_1C106D708();
    v35 = (uint64_t)v104;
    v34 = v105;
    if (v29 < 0)
    {
      sub_1C1070948();
      __break(1u);
LABEL_5:
      v36 = sub_1C106CD60();
      sub_1C07803B8(&qword_1EF639E28, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3B790], MEMORY[0x1E0D3B798]);
      sub_1C0775810();
      v38 = v37;
      v110 = 0;
      v111 = 0xE000000000000000;
      sub_1C1070774();
      sub_1C106FC94();
      sub_1C106CD90();
      sub_1C10708F4();
      v39 = *(void (**)(uint64_t, uint64_t))(v27 + 8);
      v39(v29, v26);
      v40 = v111;
      *v38 = v110;
      v38[1] = v40;
      (*(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v36 - 8) + 104))(v38, *MEMORY[0x1E0D3B788], v36);
      swift_willThrow();
      return ((uint64_t (*)(uint64_t, uint64_t))v39)(v32, v26);
    }
  }
  sub_1C07ACF80(&qword_1ED7539F0);
  v42 = swift_allocObject();
  *(_OWORD *)(v42 + 16) = xmmword_1C1078FC0;
  *(_QWORD *)(v42 + 56) = &type metadata for FusedTripleColumn;
  v43 = sub_1C0A560EC();
  *(_QWORD *)(v42 + 64) = v43;
  *(_BYTE *)(v42 + 32) = 6;
  *(_QWORD *)(v42 + 96) = &type metadata for FusedTripleColumn;
  *(_QWORD *)(v42 + 104) = v43;
  *(_BYTE *)(v42 + 72) = 0;
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v100 + 104))(v101, *MEMORY[0x1E0D3BC00], v102);
  sub_1C106D2D0();
  v44 = sub_1C106D2DC();
  sub_1C07B2D8C((uint64_t)v20, 0, 1, v44);
  v45 = v112;
  sub_1C106EB54();
  v46 = v106;
  v47 = v33;
  sub_1C106D714();
  v48 = (*(uint64_t (**)(uint64_t, uint64_t (*)(uint64_t, uint64_t, uint64_t)))(v35 + 88))(v46, v34);
  v49 = v108;
  if (v48 == *MEMORY[0x1E0D3CD38])
    goto LABEL_8;
  v65 = v48;
  if (v48 == *MEMORY[0x1E0D3CD08])
  {
    sub_1C07A7720();
    sub_1C106CD6C();
    v66 = sub_1C0794990();
    v92 = v3;
    v54 = v107;
    sub_1C077ED28(v66, v67, v68);
    v69 = sub_1C079545C();
    type metadata accessor for GraphTriple(v69);
    v70 = sub_1C07803B8((unint64_t *)&unk_1ED7531A0, type metadata accessor for GraphTriple, (uint64_t)&unk_1C109A0C0);
    sub_1C07AE234(v70);
    sub_1C0784B30(v35, &qword_1ED756690);
    sub_1C07991F8();
    sub_1C0A575E8();
LABEL_11:
    v64 = v71;
    swift_bridgeObjectRelease();
    goto LABEL_12;
  }
  v72 = v3;
  v54 = v107;
  if (v48 == *MEMORY[0x1E0D3CD20])
    goto LABEL_18;
  if (v48 == *MEMORY[0x1E0D3CCF8])
  {
    sub_1C07A7720();
    v92 = v72;
    sub_1C106CD6C();
    v73 = sub_1C0794990();
    sub_1C077ED28(v73, v74, v75);
    v76 = sub_1C079545C();
    type metadata accessor for EventTriple(v76);
    v77 = sub_1C07803B8(&qword_1ED753968, type metadata accessor for EventTriple, (uint64_t)&unk_1C109A410);
    sub_1C07AE234(v77);
    sub_1C0784B30(v35, &qword_1ED756690);
    sub_1C07991F8();
    sub_1C0A57EA0();
    goto LABEL_11;
  }
  if (v48 == *MEMORY[0x1E0D3CD30])
  {
    sub_1C07A7720();
    sub_1C106CD6C();
    v78 = v95;
    sub_1C077ED28(v95, v112, *((uint64_t (**)(uint64_t, uint64_t, uint64_t))v34 + 2));
    sub_1C07B2D8C(v78, 0, 1, v54);
    v79 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v45 + 40);
    v80 = v45;
    v45 = v112;
    v81 = v79(v49, v78, v47, v80);
    sub_1C0784B30(v78, &qword_1ED756690);
    sub_1C07991F8();
    sub_1C0D871C4(v81);
    goto LABEL_13;
  }
  if (v48 == *MEMORY[0x1E0D3CD28])
  {
LABEL_18:
    sub_1C0D85F8C(MEMORY[0x1E0DEE9D8]);
    goto LABEL_14;
  }
  v3 = v72;
  if (v48 == *MEMORY[0x1E0D3CD00])
  {
LABEL_8:
    v92 = v3;
    v50 = v93;
    v51 = v93[4];
    sub_1C07A9480(v93, v93[3]);
    v52 = v96;
    sub_1C106CD6C();
    v105 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v49 + 16);
    v53 = v95;
    v54 = v107;
    sub_1C077ED28(v95, v112, v105);
    sub_1C0791664();
    v55 = *(uint64_t (**)(uint64_t))(v51 + 32);
    type metadata accessor for GraphTriple(0);
    sub_1C07803B8((unint64_t *)&unk_1ED7531A0, type metadata accessor for GraphTriple, (uint64_t)&unk_1C109A0C0);
    v56 = sub_1C07A60EC();
    v106 = v55(v56);
    sub_1C0784B30(v53, &qword_1ED756690);
    v57 = *(void (**)(char *, uint64_t))(v94 + 8);
    v58 = v97;
    v57(v52, v97);
    v59 = v50[4];
    v104 = sub_1C07A9480(v50, v50[3]);
    sub_1C106CD6C();
    v105(v53, v112, v54);
    sub_1C0791664();
    v60 = *(void (**)(uint64_t))(v59 + 32);
    type metadata accessor for EventTriple(0);
    sub_1C07803B8(&qword_1ED753968, type metadata accessor for EventTriple, (uint64_t)&unk_1C109A410);
    v61 = sub_1C07A60EC();
    v60(v61);
    sub_1C0784B30(v53, &qword_1ED756690);
    v57(v52, v58);
    v49 = v108;
    sub_1C0A575E8();
    v63 = v62;
    swift_bridgeObjectRelease();
    sub_1C0A57EA0();
    swift_bridgeObjectRelease();
    v110 = v63;
    v45 = v112;
    sub_1C0BDBA9C();
    v64 = v110;
LABEL_12:
    sub_1C0D85F8C(v64);
LABEL_13:
    swift_bridgeObjectRelease();
LABEL_14:
    sub_1C106D24C();
    (*(void (**)(uint64_t, uint64_t))(v49 + 8))(v45, v54);
    return sub_1C0797800();
  }
  v82 = *MEMORY[0x1E0D3CD18];
  v83 = *MEMORY[0x1E0D3CD10];
  v84 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1C106CD60();
  sub_1C07803B8(&qword_1EF639E28, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3B790], MEMORY[0x1E0D3B798]);
  v105 = v84;
  v109 = sub_1C0775810();
  v86 = v85;
  if (v65 != v82 && v65 != (_DWORD)v83)
  {
    sub_1C07981A8(0xE000000000000000);
    swift_bridgeObjectRelease();
    sub_1C078FBF8((uint64_t)"unsupported index type ");
    sub_1C07803B8(&qword_1EF639E30, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3CD48], MEMORY[0x1E0D3CD68]);
    sub_1C079C920();
    sub_1C07AD3B0();
    swift_bridgeObjectRelease();
    v89 = *(void (**)(uint64_t, uint64_t (*)(uint64_t, uint64_t, uint64_t)))(v35 + 8);
    v89(v83, v34);
    v90 = v111;
    *v86 = v110;
    v86[1] = v90;
    sub_1C079BAA0();
    sub_1C07B49F8();
    (*(void (**)(uint64_t, uint64_t))(v49 + 8))(v112, v107);
    sub_1C0797800();
    return ((uint64_t (*)(uint64_t, uint64_t (*)(uint64_t, uint64_t, uint64_t)))v89)(v106, v34);
  }
  sub_1C07981A8(0xE000000000000000);
  swift_bridgeObjectRelease();
  sub_1C078FBF8((uint64_t)"unsupported index type ");
  sub_1C07803B8(&qword_1EF639E30, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3CD48], MEMORY[0x1E0D3CD68]);
  sub_1C079C920();
  sub_1C07AD3B0();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t (*)(uint64_t, uint64_t, uint64_t)))(v35 + 8))(v83, v34);
  v88 = v111;
  *v86 = v110;
  v86[1] = v88;
  sub_1C079BAA0();
  sub_1C07B49F8();
  (*(void (**)(uint64_t, uint64_t))(v49 + 8))(v112, v107);
  return sub_1C0797800();
}

void sub_1C0D871C4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  char v38;
  BOOL v39;
  unint64_t v40;
  char v41;
  unint64_t v42;
  char v43;
  _QWORD *v44;
  uint64_t *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  int v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  char v57;
  unint64_t v58;
  char v59;
  unint64_t v60;
  char v61;
  _QWORD *v62;
  unint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  int v67;
  uint64_t v68;
  _QWORD v69[2];
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  _QWORD *v85;

  sub_1C07ACF80(&qword_1ED753958);
  sub_1C07757C4();
  MEMORY[0x1E0C80A78](v5);
  sub_1C077AED0();
  v71 = v6;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v7);
  v76 = (uint64_t)v69 - v8;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v9);
  sub_1C0778674();
  v77 = v10;
  sub_1C07BD168();
  sub_1C0795D24();
  MEMORY[0x1E0C80A78](v11);
  sub_1C077AED0();
  v82 = v12;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v13);
  v70 = (uint64_t)v69 - v14;
  sub_1C077F02C();
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)v69 - v16;
  v80 = type metadata accessor for OntologyTriple();
  v18 = *(_QWORD *)(v80 - 8);
  MEMORY[0x1E0C80A78](v80);
  sub_1C0779614();
  v19 = sub_1C106F97C();
  v20 = *(_QWORD *)(a1 + 16);
  if (!v20)
  {
LABEL_37:
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    sub_1C08A336C();
    swift_bridgeObjectRelease_n();
    sub_1C0776760();
    return;
  }
  v21 = a1;
  v22 = a1 + ((*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80));
  v78 = *(_QWORD *)(v18 + 72);
  v69[1] = v21;
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  v81 = v17;
  v79 = v1;
  while (1)
  {
    v83 = v22;
    v84 = v20;
    v23 = v2;
    v24 = v3;
    sub_1C0C6348C(v22, v1);
    v25 = v80;
    if ((sub_1C106E2FC() & 1) != 0)
      goto LABEL_10;
    v26 = (uint64_t *)(v1 + *(int *)(v25 + 24));
    v27 = *v26;
    v28 = v26[1];
    v29 = HIBYTE(v28) & 0xF;
    if ((v28 & 0x2000000000000000) == 0)
      v29 = v27 & 0xFFFFFFFFFFFFLL;
    if (!v29)
    {
LABEL_10:
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      sub_1C106E1E8();
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      sub_1C106E728();
      v3 = v24;
      v2 = v23;
      goto LABEL_11;
    }
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    sub_1C106E1E8();
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    v17 = v81;
    sub_1C106E728();
    v30 = sub_1C079E9A0();
    if (!*(_QWORD *)(v19 + 16))
    {
      v33 = 1;
      v3 = v24;
LABEL_25:
      v2 = v23;
      goto LABEL_26;
    }
    v31 = sub_1C079F89C(v30);
    v3 = v24;
    if ((v32 & 1) == 0)
    {
      v33 = 1;
      goto LABEL_25;
    }
    v2 = v23;
    sub_1C079D508(v77, *(_QWORD *)(v19 + 56) + *(_QWORD *)(v23 + 72) * v31, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v23 + 16));
    v33 = 0;
LABEL_26:
    v50 = v77;
    sub_1C0790F28(v77, v33);
    sub_1C0778580();
    v51 = sub_1C077B1B0(v50);
    sub_1C0784B30(v50, &qword_1ED753958);
    if (v51 != 1)
    {
      v52 = sub_1C079E9A0();
      v54 = v53;
      v74 = sub_1C07B0108();
      v75 = v55;
      v73 = *(_QWORD *)(v79 + *(int *)(v80 + 32));
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      sub_1C07767B4();
      swift_isUniquelyReferenced_nonNull_native();
      v85 = (_QWORD *)v19;
      sub_1C07767B4();
      sub_1C077D774(v52, v54);
      sub_1C07A3180();
      if (v39)
        goto LABEL_40;
      v58 = v56;
      v59 = v57;
      sub_1C07ACF80(&qword_1EF649508);
      if ((sub_1C107090C() & 1) != 0)
      {
        v60 = sub_1C077D774(v52, v54);
        if ((v59 & 1) != (v61 & 1))
          goto LABEL_42;
        v58 = v60;
      }
      if ((v59 & 1) == 0)
        goto LABEL_41;
      v72 = v54;
      v62 = v85;
      v63 = *(_QWORD *)(v2 + 72) * v58;
      v64 = v76;
      sub_1C078D848(v76, v85[7] + v63);
      sub_1C0790F28(v64, 0);
      sub_1C106E710();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v65 = v64;
      v66 = v71;
      sub_1C0D87944(v65, v71);
      v67 = sub_1C077B1B0(v66);
      v1 = v79;
      if (v67 == 1)
      {
        sub_1C0784B30(v66, &qword_1ED753958);
        swift_arrayDestroy();
        sub_1C1070924();
      }
      else
      {
        v68 = v70;
        sub_1C078D848(v70, v66);
        sub_1C078D848(v62[7] + v63, v68);
      }
      v17 = v81;
      v49 = v83;
      v48 = v84;
      sub_1C0784B30(v76, &qword_1ED753958);
      sub_1C077960C();
      v19 = (uint64_t)v85;
      sub_1C077960C();
      sub_1C077960C();
      goto LABEL_21;
    }
    sub_1C07B0108();
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    sub_1C079C0C4();
    sub_1C0778580();
    sub_1C0775834();
LABEL_11:
    v34 = sub_1C079E9A0();
    v36 = v35;
    sub_1C079D508(v82, (uint64_t)v17, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 16));
    swift_isUniquelyReferenced_nonNull_native();
    v85 = (_QWORD *)v19;
    sub_1C079F89C(v34);
    sub_1C07A3180();
    if (v39)
      break;
    v40 = v37;
    v41 = v38;
    sub_1C07ACF80(&qword_1EF649508);
    if ((sub_1C107090C() & 1) != 0)
    {
      sub_1C077D774(v34, v36);
      sub_1C07A5548();
      if (!v43)
        goto LABEL_42;
      v40 = v42;
    }
    v44 = v85;
    if ((v41 & 1) != 0)
    {
      sub_1C079D508(v85[7] + *(_QWORD *)(v2 + 72) * v40, v82, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 40));
    }
    else
    {
      v85[(v40 >> 6) + 8] |= 1 << v40;
      v45 = (uint64_t *)(v44[6] + 16 * v40);
      *v45 = v34;
      v45[1] = v36;
      sub_1C079D508(v44[7] + *(_QWORD *)(v2 + 72) * v40, v82, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 32));
      v46 = v44[2];
      v39 = __OFADD__(v46, 1);
      v47 = v46 + 1;
      if (v39)
        goto LABEL_39;
      v44[2] = v47;
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    }
    v19 = (uint64_t)v85;
    sub_1C0778580();
    swift_bridgeObjectRelease();
    v17 = v81;
    v1 = v79;
    v49 = v83;
    v48 = v84;
LABEL_21:
    (*(void (**)(char *, uint64_t))(v2 + 8))(v17, v3);
    sub_1C0C634D0(v1);
    v22 = v49 + v78;
    v20 = v48 - 1;
    if (!v20)
    {
      swift_bridgeObjectRelease();
      goto LABEL_37;
    }
  }
  __break(1u);
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  sub_1C0790F28(v76, 1);
  __break(1u);
LABEL_42:
  sub_1C1070D44();
  __break(1u);
}

void sub_1C0D87868()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  void (*v6)(unint64_t, _QWORD, uint64_t);

  sub_1C07ACF80(&qword_1ED7531B8);
  v0 = sub_1C106E4AC();
  v1 = *(_QWORD *)(v0 - 8);
  v2 = *(_QWORD *)(v1 + 72);
  v3 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1C1078FC0;
  v5 = v4 + v3;
  v6 = *(void (**)(unint64_t, _QWORD, uint64_t))(v1 + 104);
  v6(v5, *MEMORY[0x1E0D3CD08], v0);
  v6(v5 + v2, *MEMORY[0x1E0D3CCF8], v0);
  sub_1C0AA96DC();
}

uint64_t sub_1C0D8791C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_1C0D867A4(a1, a2, a3);
}

void sub_1C0D87930()
{
  sub_1C0D87868();
}

uint64_t sub_1C0D87944(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1C07ACF80(&qword_1ED753958);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t dispatch thunk of PipelineTriple.sources.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of PipelineTriple.timestamp.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t destroy for UnstructuredDatabaseTable(uint64_t a1, uint64_t a2)
{
  return sub_1C0D879D0(a1, a2, (void (*)(_QWORD))MEMORY[0x1E0DEEE30]);
}

uint64_t assignWithTake for UnstructuredDatabaseTable(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C0D87A10(a1, a2, a3, (void (*)(uint64_t))MEMORY[0x1E0DEEE30]);
}

ValueMetadata *type metadata accessor for UnstructuredDatabaseTable()
{
  return &type metadata for UnstructuredDatabaseTable;
}

uint64_t destroy for UnstructuredDatabaseTable.Config(uint64_t a1, uint64_t a2)
{
  return sub_1C0D879D0(a1, a2, (void (*)(_QWORD))MEMORY[0x1E0DEEB08]);
}

uint64_t sub_1C0D879D0(uint64_t a1, uint64_t a2, void (*a3)(_QWORD))
{
  swift_bridgeObjectRelease();
  a3(*(_QWORD *)(a1 + 16));
  return swift_bridgeObjectRelease();
}

uint64_t assignWithTake for UnstructuredDatabaseTable.Config(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C0D87A10(a1, a2, a3, (void (*)(uint64_t))MEMORY[0x1E0DEEB08]);
}

uint64_t sub_1C0D87A10(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t))
{
  uint64_t v7;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a1 + 16);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  a4(v7);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for UnstructuredDatabaseTable.Config()
{
  return &type metadata for UnstructuredDatabaseTable.Config;
}

void sub_1C0D87A80()
{
  uint64_t v0;
  uint64_t v1;

  v0 = sub_1C106BB54();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  sub_1C0778544();
  sub_1C106BB0C();
  sub_1C106C670();
  sub_1C078C76C(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  sub_1C07757D0();
}

void sub_1C0D87B38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;

  v9 = sub_1C07ACF80(&qword_1ED761500);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1C07ACF80((uint64_t *)&unk_1ED75E9F0);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for ViewDatabaseArtifact.Property();
  MEMORY[0x1E0C80A78](v15);
  v19 = (char *)&v26 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = *(_QWORD *)(a5 + 16);
  if (v20)
  {
    v27 = v11;
    v28 = a6;
    v29 = v6;
    v30 = &v19[*(int *)(v16 + 20)];
    v21 = a5 + ((*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80));
    v22 = *(_QWORD *)(v17 + 72);
    v26 = a5;
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    do
    {
      sub_1C08DE57C(v21, (uint64_t)v19);
      v23 = sub_1C106C55C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v14, v30, v23);
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      sub_1C08DE5C0((uint64_t)v19);
      sub_1C07B2D8C((uint64_t)v14, 0, 1, v23);
      sub_1C106BE3C();
      swift_release();
      swift_bridgeObjectRelease();
      sub_1C0784B30((uint64_t)v14, (uint64_t *)&unk_1ED75E9F0);
      v21 += v22;
      --v20;
    }
    while (v20);
    swift_bridgeObjectRelease();
    a6 = v28;
    v11 = v27;
  }
  if (*(_QWORD *)(a6 + 16))
  {
    v24 = *MEMORY[0x1E0D247F8];
    v25 = sub_1C106C604();
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 104))(v11, v24, v25);
    sub_1C07B2D8C((uint64_t)v11, 0, 1, v25);
    sub_1C106BE24();
    sub_1C0784B30((uint64_t)v11, &qword_1ED761500);
  }
}

uint64_t sub_1C0D87D74(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  char v7;

  v2 = a1 == 0x6D614E656C626174 && a2 == 0xE900000000000065;
  if (v2 || (sub_1C1070CB4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x736E6D756C6F63 && a2 == 0xE700000000000000;
    if (v6 || (sub_1C1070CB4() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0xD000000000000011 && a2 == 0x80000001C10E9B80)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      v7 = sub_1C1070CB4();
      swift_bridgeObjectRelease();
      if ((v7 & 1) != 0)
        return 2;
      else
        return 3;
    }
  }
}

uint64_t sub_1C0D87ECC(char a1)
{
  if (!a1)
    return 0x6D614E656C626174;
  if (a1 == 1)
    return 0x736E6D756C6F63;
  return 0xD000000000000011;
}

void sub_1C0D87F2C(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = sub_1C07ACF80(&qword_1EF649510);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  sub_1C0778544();
  sub_1C07A9480(a1, a1[3]);
  sub_1C0D8837C();
  sub_1C1070EB8();
  sub_1C1070B7C();
  if (!v1)
  {
    sub_1C07ACF80(&qword_1ED760108);
    sub_1C0D883B8(&qword_1EF6339C0, &qword_1EF6339C8, (uint64_t)&protocol conformance descriptor for ViewDatabaseArtifact.Property, MEMORY[0x1E0DEAF10]);
    sub_1C07963C4();
    sub_1C07ACF80(&qword_1ED762B70);
    sub_1C07B0300((unint64_t *)&qword_1ED7560B8, MEMORY[0x1E0DEA970], MEMORY[0x1E0DEAF10]);
    sub_1C07963C4();
  }
  sub_1C078C76C(*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
  sub_1C07757D0();
}

uint64_t sub_1C0D88094(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = sub_1C07ACF80(&qword_1ED7603B0);
  MEMORY[0x1E0C80A78](v3);
  v4 = a1[4];
  sub_1C07A9480(a1, a1[3]);
  sub_1C0D8837C();
  sub_1C1070E94();
  if (v1)
  {
    sub_1C0775880();
  }
  else
  {
    v4 = sub_1C1070AA4();
    sub_1C07ACF80(&qword_1ED760108);
    sub_1C0D883B8(&qword_1ED760110, &qword_1ED75FA38, (uint64_t)&protocol conformance descriptor for ViewDatabaseArtifact.Property, MEMORY[0x1E0DEAF40]);
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    sub_1C07988AC();
    sub_1C1070AE0();
    sub_1C07ACF80(&qword_1ED762B70);
    sub_1C07B0300(&qword_1ED762B78, MEMORY[0x1E0DEA9A0], MEMORY[0x1E0DEAF40]);
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    sub_1C07988AC();
    sub_1C1070AE0();
    sub_1C0776938();
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    sub_1C0775880();
    swift_bridgeObjectRelease();
    sub_1C07785A0();
    sub_1C0778580();
  }
  return v4;
}

uint64_t sub_1C0D882B8()
{
  char *v0;

  return sub_1C0D87ECC(*v0);
}

uint64_t sub_1C0D882C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1C0D87D74(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C0D882E4()
{
  sub_1C0D8837C();
  return sub_1C1070EE8();
}

uint64_t sub_1C0D8830C()
{
  sub_1C0D8837C();
  return sub_1C1070EF4();
}

uint64_t sub_1C0D88334@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  result = sub_1C0D88094(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
    a2[2] = v6;
    a2[3] = v7;
  }
  return result;
}

void sub_1C0D88360(_QWORD *a1)
{
  sub_1C0D87F2C(a1);
}

unint64_t sub_1C0D8837C()
{
  unint64_t result;

  result = qword_1ED75FD18;
  if (!qword_1ED75FD18)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10BB6D8, &type metadata for UnstructuredDatabaseTable.Config.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED75FD18);
  }
  return result;
}

uint64_t sub_1C0D883B8(unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;

  result = *a1;
  if (!result)
  {
    v9 = sub_1C07D4BEC(&qword_1ED760108);
    v10 = sub_1C0D88434(a2, a3);
    result = MEMORY[0x1C3BA8174](a4, v9, &v10);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C0D88434(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for ViewDatabaseArtifact.Property();
    result = MEMORY[0x1C3BA8174](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for UnstructuredDatabaseTable.Config.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1C0D884C0 + 4 * byte_1C10BB565[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1C0D884F4 + 4 * asc_1C10BB560[v4]))();
}

uint64_t sub_1C0D884F4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C0D884FC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C0D88504);
  return result;
}

uint64_t sub_1C0D88510(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C0D88518);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1C0D8851C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C0D88524(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for UnstructuredDatabaseTable.Config.CodingKeys()
{
  return &type metadata for UnstructuredDatabaseTable.Config.CodingKeys;
}

unint64_t sub_1C0D88544()
{
  unint64_t result;

  result = qword_1EF649518;
  if (!qword_1EF649518)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10BB6B0, &type metadata for UnstructuredDatabaseTable.Config.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF649518);
  }
  return result;
}

unint64_t sub_1C0D88584()
{
  unint64_t result;

  result = qword_1ED762230;
  if (!qword_1ED762230)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10BB620, &type metadata for UnstructuredDatabaseTable.Config.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED762230);
  }
  return result;
}

unint64_t sub_1C0D885C4()
{
  unint64_t result;

  result = qword_1ED75FD20;
  if (!qword_1ED75FD20)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10BB648, &type metadata for UnstructuredDatabaseTable.Config.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED75FD20);
  }
  return result;
}

void sub_1C0D88600(uint64_t a1)
{
  uint64_t *v1;

  sub_1C0D87B38(a1, v1[2], v1[3], v1[4], v1[5], v1[6]);
}

uint64_t sub_1C0D88620()
{
  return sub_1C106ABD0();
}

uint64_t sub_1C0D886F0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v7;

  v2 = a1 == 0x6D614E656C626174 && a2 == 0xE900000000000065;
  if (v2 || (sub_1C1070CB4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001C110B3F0 || (sub_1C1070CB4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000001C110B410 || (sub_1C1070CB4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6C62615466666964 && a2 == 0xEF65674178614D65)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v7 = sub_1C1070CB4();
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_1C0D888C8(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1C0D88900 + 4 * byte_1C10BB730[a1]))(0x6D614E656C626174, 0xE900000000000065);
}

unint64_t sub_1C0D88900()
{
  return 0xD000000000000010;
}

unint64_t sub_1C0D8891C()
{
  return 0xD000000000000016;
}

uint64_t sub_1C0D8893C()
{
  return 0x6C62615466666964;
}

void sub_1C0D88960(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;

  sub_1C07ACF80(&qword_1EF649578);
  sub_1C0778688();
  MEMORY[0x1E0C80A78](v4);
  sub_1C0778544();
  sub_1C07A9480(a1, a1[3]);
  sub_1C0D8A810();
  sub_1C1070EB8();
  sub_1C0785088();
  if (!v1)
  {
    sub_1C0785088();
    sub_1C0785088();
    sub_1C1070B94();
  }
  sub_1C078C76C(*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  sub_1C0797DE0();
}

uint64_t sub_1C0D88A70@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v5 = sub_1C07ACF80(&qword_1ED75D498);
  MEMORY[0x1E0C80A78](v5);
  sub_1C0778564();
  sub_1C07A9480(a1, a1[3]);
  sub_1C0D8A810();
  sub_1C1070E94();
  if (v2)
    return sub_1C0775880();
  v6 = sub_1C0799730();
  v8 = v7;
  v18 = v6;
  sub_1C077EB44();
  v9 = sub_1C0799730();
  v19 = v10;
  v17 = v9;
  sub_1C077EB44();
  v15 = sub_1C1070AA4();
  v16 = v11;
  sub_1C077EB44();
  sub_1C1070ABC();
  v13 = v12;
  sub_1C078234C();
  sub_1C0775880();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  result = sub_1C077B5B4();
  *a2 = v18;
  a2[1] = v8;
  a2[2] = v17;
  a2[3] = v19;
  a2[4] = v15;
  a2[5] = v16;
  a2[6] = v13;
  return result;
}

BOOL sub_1C0D88C88(double a1, double a2, double a3, double a4)
{
  return a2 == a4 && a1 == a3;
}

uint64_t sub_1C0D88C9C(uint64_t a1, uint64_t a2)
{
  char v6;

  if (a1 == 0xD000000000000010 && a2 == 0x80000001C110B3D0 || (sub_1C1070CB4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6D6954656E757270 && a2 == 0xEE00706D61747365)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1C1070CB4();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1C0D88DA8(char a1)
{
  if ((a1 & 1) != 0)
    return 0x6D6954656E757270;
  else
    return 0xD000000000000010;
}

uint64_t sub_1C0D88DF0(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = sub_1C07ACF80(&qword_1ED7539E8);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  sub_1C0778544();
  sub_1C07A9480(a1, a1[3]);
  sub_1C0D8A7D4();
  sub_1C1070EB8();
  sub_1C07A1DCC();
  if (!v1)
    sub_1C07A1DCC();
  return sub_1C078C76C(*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
}

double sub_1C0D88EDC(_QWORD *a1)
{
  uint64_t v2;
  double v3;
  double v4;

  sub_1C07ACF80(&qword_1EF649570);
  sub_1C0778688();
  MEMORY[0x1E0C80A78](v2);
  sub_1C0778564();
  sub_1C07A9480(a1, a1[3]);
  sub_1C0D8A7D4();
  sub_1C1070E94();
  sub_1C07981B8();
  v4 = v3;
  sub_1C07981B8();
  sub_1C0787764();
  sub_1C0775880();
  return v4;
}

uint64_t sub_1C0D88FEC()
{
  unsigned __int8 *v0;

  return sub_1C0D888C8(*v0);
}

uint64_t sub_1C0D88FF4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1C0D886F0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C0D89018()
{
  sub_1C0D8A810();
  return sub_1C1070EE8();
}

uint64_t sub_1C0D89040()
{
  sub_1C0D8A810();
  return sub_1C1070EF4();
}

double sub_1C0D89068@<D0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  double result;
  __int128 v5;
  _OWORD v6[2];
  __int128 v7;
  uint64_t v8;

  sub_1C0D88A70(a1, (uint64_t *)v6);
  if (!v2)
  {
    v5 = v6[1];
    *(_OWORD *)a2 = v6[0];
    *(_OWORD *)(a2 + 16) = v5;
    result = *(double *)&v7;
    *(_OWORD *)(a2 + 32) = v7;
    *(_QWORD *)(a2 + 48) = v8;
  }
  return result;
}

void sub_1C0D890B4(_QWORD *a1)
{
  sub_1C0D88960(a1);
}

uint64_t sub_1C0D890C8()
{
  char *v0;

  return sub_1C0D88DA8(*v0);
}

uint64_t sub_1C0D890D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1C0D88C9C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C0D890F4()
{
  sub_1C0D8A7D4();
  return sub_1C1070EE8();
}

uint64_t sub_1C0D8911C()
{
  sub_1C0D8A7D4();
  return sub_1C1070EF4();
}

uint64_t sub_1C0D89144()
{
  double *v0;

  return sub_1C0D8914C(*v0, v0[1]);
}

uint64_t sub_1C0D8914C(double a1, double a2)
{
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  double v9;
  double v10;
  _QWORD v11[3];

  v11[2] = *MEMORY[0x1E0C80C00];
  v9 = a2;
  v10 = a1;
  v2 = sub_1C07B2D9C((uint64_t)&v10, (uint64_t)v11);
  v4 = v3;
  v5 = sub_1C07B2D9C((uint64_t)&v9, (uint64_t)&v10);
  v7 = v6;
  v11[0] = v2;
  v11[1] = v4;
  sub_1C07B0E28(v2, v4);
  sub_1C0D8A4F8(v5, v7);
  sub_1C07981C8();
  sub_1C07B3374(v2, v4);
  return v11[0];
}

uint64_t sub_1C0D89214@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;

  result = sub_1C0D8923C(a1, a2);
  if (!v3)
  {
    *a3 = v6;
    a3[1] = v7;
  }
  return result;
}

uint64_t sub_1C0D8923C(uint64_t a1, uint64_t a2)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v8 = *MEMORY[0x1E0C80C00];
  v6 = 0;
  v7 = 0;
  if (sub_1C106AC3C() == 16)
  {
    sub_1C0D8A3F8((uint64_t)&v6, (uint64_t)&v7, a1, a2, (uint64_t)&v7, (uint64_t)&v8);
    return sub_1C0795D38();
  }
  else
  {
    sub_1C08E29B4();
    swift_allocError();
    *(_OWORD *)v5 = xmmword_1C10BBAF0;
    *(_QWORD *)(v5 + 16) = 0xD000000000000027;
    *(_QWORD *)(v5 + 24) = 0x80000001C110B360;
    *(_OWORD *)(v5 + 32) = 0u;
    *(_OWORD *)(v5 + 48) = 0u;
    *(_BYTE *)(v5 + 64) = 4;
    swift_willThrow();
    return sub_1C0795D38();
  }
}

void sub_1C0D8934C(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  double v4;
  uint64_t v5;

  v4 = sub_1C0D88EDC(a1);
  if (!v2)
  {
    *(double *)a2 = v4;
    *(_QWORD *)(a2 + 8) = v5;
  }
}

uint64_t sub_1C0D89374(_QWORD *a1)
{
  return sub_1C0D88DF0(a1);
}

BOOL sub_1C0D8938C(double *a1, double *a2)
{
  return sub_1C0D88C88(*a1, a1[1], *a2, a2[1]);
}

double sub_1C0D89398(uint64_t a1, uint64_t a2, char a3)
{
  double v4;
  double v5;

  sub_1C106AC6C();
  v5 = v4 + 0.0;
  if (v4 + 0.0 < INFINITY)
    *(_QWORD *)&v5 += (*(uint64_t *)&v5 >> 63) | 1;
  if ((a3 & 1) != 0)
    return v5;
  else
    return v4;
}

void sub_1C0D893FC(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;

  *(double *)a2 = sub_1C0D89398(a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
  *(_QWORD *)(a2 + 8) = v3;
}

uint64_t sub_1C0D89428(uint64_t (*a1)(_QWORD, _QWORD), uint64_t a2, double a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t (*v10)(_QWORD, _QWORD);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t i;
  uint64_t v19;
  sqlite3_stmt *v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  sqlite3_stmt *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t (*v30)(_QWORD, _QWORD);
  _OWORD v31[2];
  uint64_t v32;
  uint64_t v33;

  v33 = a2;
  v30 = a1;
  sub_1C07ACF80(&qword_1ED7626C0);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v5);
  sub_1C0778564();
  v8 = v7 - v6;
  *(_QWORD *)&v31[0] = 0;
  *((_QWORD *)&v31[0] + 1) = 0xE000000000000000;
  sub_1C1070774();
  sub_1C106FC94();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C106FC94();
  swift_bridgeObjectRelease();
  sub_1C106FC94();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C106FC94();
  swift_bridgeObjectRelease();
  sub_1C106FC94();
  sub_1C077C0B8();
  sub_1C106FC94();
  sub_1C077589C();
  sub_1C0796F80();
  sub_1C079F110();
  result = sub_1C07B8D0C();
  if (v3)
    return result;
  v10 = v30;
  sub_1C106C3F4();
  sub_1C07ACF80(&qword_1ED762C90);
  v11 = sub_1C0787A5C();
  v12 = MEMORY[0x1E0DEB070];
  *(_OWORD *)(v11 + 16) = xmmword_1C1079220;
  v13 = MEMORY[0x1E0D249D0];
  *(_QWORD *)(v11 + 56) = v12;
  *(_QWORD *)(v11 + 64) = v13;
  *(double *)(v11 + 32) = a3;
  sub_1C106C010();
  v14 = sub_1C0780AEC();
  sub_1C0794D1C(v8, 0, v15, v14);
  v32 = 0;
  memset(v31, 0, sizeof(v31));
  v16 = 0;
  sub_1C106C388();
  sub_1C0784B30((uint64_t)v31, (uint64_t *)&unk_1ED7626A0);
  sub_1C0784B30(v8, &qword_1ED7626C0);
  v17 = 0;
  for (i = sub_1C079C0D0(); ; i = sub_1C079C0D0())
  {
    if (!i)
      goto LABEL_16;
    sub_1C0794054();
    v19 = sub_1C106C3A0();
    if (v19)
    {
      MEMORY[0x1E0C80A78](v19);
      *(&v29 - 2) = i;
      *(&v29 - 1) = 0;
      v21 = sqlite3_column_type(v20, 0);
      if ((_DWORD)v21 == 5)
      {
        MEMORY[0x1E0C80A78](v21);
        *(&v29 - 2) = (uint64_t)sub_1C0AACDF8;
        *(&v29 - 1) = (uint64_t)(&v29 - 4);
        goto LABEL_19;
      }
      *(_QWORD *)&v31[0] = sub_1C106FB98();
      *((_QWORD *)&v31[0] + 1) = v22;
    }
    else
    {
      sub_1C07A3430();
      v17 = v16;
    }
    v16 = v17;
    v23 = v10(*(_QWORD *)&v31[0], *((_QWORD *)&v31[0] + 1));
    sub_1C07B8D0C();
    if ((v23 & 1) == 0)
    {
      sub_1C07814FC();
LABEL_16:
      sub_1C0780A00();
      return swift_release();
    }
    sub_1C0794054();
    v24 = sub_1C106C3A0();
    if (v24)
      break;
    sub_1C07A3430();
    sub_1C07814FC();
LABEL_14:
    ;
  }
  MEMORY[0x1E0C80A78](v24);
  *(&v29 - 2) = i;
  *(&v29 - 1) = 1;
  v26 = sqlite3_column_type(v25, 1);
  if ((_DWORD)v26 != 5)
  {
    sub_1C1070198();
    v28 = v27;
    sub_1C07814FC();
    *(_QWORD *)&v31[0] = v28;
    goto LABEL_14;
  }
  MEMORY[0x1E0C80A78](v26);
  *(&v29 - 2) = (uint64_t)sub_1C0AACB8C;
  *(&v29 - 1) = (uint64_t)(&v29 - 4);
LABEL_19:
  sub_1C106C1C0();
  result = swift_unexpectedError();
  __break(1u);
  return result;
}

uint64_t sub_1C0D89924(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  double v19;
  double v20;
  double v21;
  uint64_t v22;
  double v23;
  char v24;
  double v25;
  double v26;
  uint64_t v27;
  double v28;
  double v29;

  v7 = v5;
  v13 = sub_1C106ADE0();
  sub_1C0778688();
  MEMORY[0x1E0C80A78](v14);
  sub_1C0778564();
  v17 = v16 - v15;
  v18 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v7 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(v7 + 32) = v18;
  *(_OWORD *)(v7 + 48) = *(_OWORD *)(a1 + 32);
  *(_QWORD *)(v7 + 64) = *(_QWORD *)(a1 + 48);
  *(_QWORD *)(v7 + 112) = a5;
  *(_BYTE *)(v7 + 104) = 0;
  swift_retain();
  sub_1C0A8CCFC(a1);
  sub_1C106ADA4();
  sub_1C106AC60();
  v20 = v19;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v17, v13);
  *(double *)(v7 + 96) = v20;
  if ((a4 & 1) != 0)
  {
    sub_1C0788420();
    *(_QWORD *)&v23 = ((v22 >> 63) | 1) + v22;
    if (v24)
      v21 = v23;
    *(double *)(v7 + 72) = v20;
    *(double *)(v7 + 80) = -v21;
  }
  else
  {
    *(_QWORD *)(v7 + 72) = a2;
    *(_QWORD *)(v7 + 80) = a3;
  }
  sub_1C0A8CD44(a1);
  sub_1C0788420();
  *(_QWORD *)&v28 = ((v27 >> 63) | 1) + v27;
  if (v24)
    v25 = v28;
  v29 = -v25;
  if (v20 - *(double *)(a1 + 48) <= v29)
    v29 = v20 - *(double *)(a1 + 48);
  if (v29 <= v26)
    v29 = v26;
  *(double *)(v7 + 88) = v29;
  return v7;
}

void sub_1C0D89A88()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  double v6;
  uint64_t v7;
  double v8;
  char v9;

  sub_1C07ACF80(&qword_1ED7626C0);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v3);
  sub_1C0778544();
  *(_BYTE *)(v0 + 104) = 1;
  sub_1C07AE25C();
  sub_1C077C0B8();
  sub_1C079BAB4();
  sub_1C077589C();
  sub_1C106C5C8();
  sub_1C077589C();
  if (!v1)
  {
    v4 = sub_1C0780AEC();
    sub_1C0794D1C(v2, 1, v5, v4);
    sub_1C106C718();
    sub_1C0784B30(v2, &qword_1ED7626C0);
    sub_1C07785A8();
    sub_1C0788420();
    *(_QWORD *)&v8 = ((v7 >> 63) | 1) + v7;
    if (v9)
      v6 = v8;
    *(double *)(v0 + 88) = -v6;
  }
}

void sub_1C0D89B94()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  sub_1C07ACF80(&qword_1ED7626C0);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v1);
  sub_1C0778564();
  v4 = v3 - v2;
  if ((*(_BYTE *)(v0 + 104) & 1) != 0)
  {
    sub_1C1070774();
    swift_bridgeObjectRelease();
    sub_1C07AE25C();
    sub_1C077C0B8();
    sub_1C079BAB4();
    sub_1C077589C();
    sub_1C106FC94();
    v5 = *(_QWORD *)(v0 + 48);
    sub_1C077C0B8();
    sub_1C079BAB4();
    sub_1C077589C();
    sub_1C106FC94();
    sub_1C079F110();
    sub_1C077589C();
    if (!v5)
    {
      sub_1C07ACF80(&qword_1ED762C90);
      v6 = sub_1C0787A5C();
      v7 = *(_QWORD *)(v0 + 88);
      v8 = MEMORY[0x1E0DEB070];
      *(_OWORD *)(v6 + 16) = xmmword_1C1079220;
      v9 = MEMORY[0x1E0D249D0];
      *(_QWORD *)(v6 + 56) = v8;
      *(_QWORD *)(v6 + 64) = v9;
      *(_QWORD *)(v6 + 32) = v7;
      sub_1C106C010();
      v10 = sub_1C0780AEC();
      sub_1C0794D1C(v4, 0, v11, v10);
      sub_1C106C718();
      sub_1C0784B30(v4, &qword_1ED7626C0);
      sub_1C07785A8();
    }
  }
}

void sub_1C0D89D28(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  sub_1C07ACF80(&qword_1ED7626C0);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v7);
  sub_1C079E9A8();
  sub_1C1070774();
  sub_1C078D928();
  sub_1C077E6D0();
  sub_1C0791678();
  sub_1C07785A0();
  sub_1C0795484();
  sub_1C077E6D0();
  sub_1C0791678();
  sub_1C07785A0();
  sub_1C07A5828();
  sub_1C077E6D0();
  sub_1C0791678();
  sub_1C07785A0();
  sub_1C106FC94();
  sub_1C106C5C8();
  sub_1C07785A0();
  if (!v4)
  {
    sub_1C07ACF80(&qword_1ED762C90);
    v8 = swift_allocObject();
    *(_OWORD *)(v8 + 16) = xmmword_1C1078FC0;
    v9 = MEMORY[0x1E0D24968];
    *(_QWORD *)(v8 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v8 + 64) = v9;
    *(_QWORD *)(v8 + 32) = a1;
    *(_QWORD *)(v8 + 40) = a2;
    v10 = *(_QWORD *)(v3 + 96);
    v11 = MEMORY[0x1E0D249D0];
    *(_QWORD *)(v8 + 96) = MEMORY[0x1E0DEB070];
    *(_QWORD *)(v8 + 104) = v11;
    *(_QWORD *)(v8 + 72) = v10;
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    sub_1C106C010();
    v12 = sub_1C0780AEC();
    sub_1C07A6100(v12);
    sub_1C106C718();
    sub_1C0784B30(v2, &qword_1ED7626C0);
    sub_1C07785A8();
  }
  sub_1C0797DE0();
}

void sub_1C0D89ED0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_1C07ACF80(&qword_1ED7626C0);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v3);
  sub_1C079E9A8();
  sub_1C1070774();
  sub_1C078D928();
  sub_1C07767C4();
  sub_1C07A0430();
  sub_1C0775894();
  sub_1C0795484();
  sub_1C07767C4();
  sub_1C07A0430();
  sub_1C0775894();
  sub_1C07A5828();
  sub_1C07767C4();
  sub_1C07A0430();
  sub_1C0775894();
  sub_1C0796F80();
  sub_1C106FC94();
  sub_1C106FC94();
  sub_1C106C5C8();
  swift_bridgeObjectRelease();
  if (!v2)
  {
    sub_1C07ACF80(&qword_1ED762C90);
    v4 = sub_1C0787A5C();
    *(_OWORD *)(v4 + 16) = xmmword_1C1079220;
    v5 = *(_QWORD *)(v1 + 96);
    v6 = MEMORY[0x1E0D249D0];
    *(_QWORD *)(v4 + 56) = MEMORY[0x1E0DEB070];
    *(_QWORD *)(v4 + 64) = v6;
    *(_QWORD *)(v4 + 32) = v5;
    sub_1C106C010();
    v7 = sub_1C0780AEC();
    sub_1C07A6100(v7);
    sub_1C106C718();
    sub_1C0784B30(v0, &qword_1ED7626C0);
    sub_1C07785A8();
  }
  sub_1C0797DE0();
}

uint64_t sub_1C0D8A054()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return v0;
}

uint64_t sub_1C0D8A0A0()
{
  sub_1C0D8A054();
  return swift_deallocClassInstance();
}

uint64_t _s23UpdatedObjectDiffWriterCMa()
{
  return objc_opt_self();
}

void _s18UpdatedObjectStateV8BookmarkVMa()
{
  sub_1C0779604();
}

void _s18UpdatedObjectStateVMa()
{
  sub_1C0779604();
}

_QWORD *sub_1C0D8A0F8(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  a1[6] = a2[6];
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  return a1;
}

_QWORD *sub_1C0D8A154(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  return a1;
}

_QWORD *sub_1C0D8A1E8(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  return a1;
}

void _s18UpdatedObjectStateV6ConfigVMa()
{
  sub_1C0779604();
}

unint64_t sub_1C0D8A254()
{
  unint64_t result;

  result = qword_1ED75D508;
  if (!qword_1ED75D508)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10BB8B0, &unk_1E7A32930);
    atomic_store(result, (unint64_t *)&qword_1ED75D508);
  }
  return result;
}

unint64_t sub_1C0D8A294()
{
  unint64_t result;

  result = qword_1ED7608F8;
  if (!qword_1ED7608F8)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10BB7F4, &unk_1E7A329D0);
    atomic_store(result, (unint64_t *)&qword_1ED7608F8);
  }
  return result;
}

unint64_t sub_1C0D8A2D4()
{
  unint64_t result;

  result = qword_1EF649520;
  if (!qword_1EF649520)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10BB7CC, &unk_1E7A329D0);
    atomic_store(result, (unint64_t *)&qword_1EF649520);
  }
  return result;
}

unint64_t sub_1C0D8A310(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1C0D8A344();
  a1[2] = sub_1C0D8A380();
  result = sub_1C0D8A3BC();
  a1[3] = result;
  return result;
}

unint64_t sub_1C0D8A344()
{
  unint64_t result;

  result = qword_1ED75D500;
  if (!qword_1ED75D500)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10BB888, &unk_1E7A32930);
    atomic_store(result, (unint64_t *)&qword_1ED75D500);
  }
  return result;
}

unint64_t sub_1C0D8A380()
{
  unint64_t result;

  result = qword_1ED75D4F0;
  if (!qword_1ED75D4F0)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10BB860, &unk_1E7A32930);
    atomic_store(result, (unint64_t *)&qword_1ED75D4F0);
  }
  return result;
}

unint64_t sub_1C0D8A3BC()
{
  unint64_t result;

  result = qword_1ED75D4F8;
  if (!qword_1ED75D4F8)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10BB838, &unk_1E7A32930);
    atomic_store(result, (unint64_t *)&qword_1ED75D4F8);
  }
  return result;
}

uint64_t sub_1C0D8A3F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t result;

  if (a5)
    v6 = a6 - a5;
  else
    v6 = 0;
  if (v6 < 0)
  {
    __break(1u);
  }
  else
  {
    sub_1C07ACF80(&qword_1ED7612C0);
    sub_1C07B0EB0();
    sub_1C07B0E6C();
    sub_1C106A7EC();
    result = sub_1C106AC3C();
    if (result >= v6)
      return sub_1C106A7EC();
  }
  __break(1u);
  return result;
}

void sub_1C0D8A4F8(uint64_t a1, uint64_t a2)
{
  char *v2;
  _QWORD v3[5];

  v3[3] = MEMORY[0x1E0CB0338];
  v3[4] = MEMORY[0x1E0CB0318];
  v3[0] = a1;
  v3[1] = a2;
  v2 = (char *)&loc_1C0D8A54C + *((int *)qword_1C0D8A640 + (sub_1C07A9480(v3, MEMORY[0x1E0CB0338])[1] >> 62));
  __asm { BR              X10 }
}

uint64_t sub_1C0D8A55C()
{
  uint64_t v1;

  sub_1C0796BF8();
  sub_1C07B98F4();
  return _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)&v1);
}

uint64_t sub_1C0D8A650(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_1C07ACF80(&qword_1ED755798);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v4);
  sub_1C0778544();
  *v2 = a2;
  v5 = *MEMORY[0x1E0D246B8];
  v6 = sub_1C106C4E4();
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 104))(v2, v5, v6);
  sub_1C07B2D8C((uint64_t)v2, 0, 1, v6);
  swift_retain();
  return sub_1C106BFEC();
}

uint64_t sub_1C0D8A704(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_1C0D8A724(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = sub_1C106A84C();
  if (!result || (result = sub_1C106A870(), !__OFSUB__(a1, result)))
  {
    if (!__OFSUB__(a2, a1))
    {
      sub_1C106A864();
      return sub_1C106ABD0();
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1C0D8A7B4()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 16))();
}

unint64_t sub_1C0D8A7D4()
{
  unint64_t result;

  result = qword_1ED753988;
  if (!qword_1ED753988)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10BBA98, &_s18UpdatedObjectStateV8BookmarkV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1ED753988);
  }
  return result;
}

unint64_t sub_1C0D8A810()
{
  unint64_t result;

  result = qword_1ED75D478;
  if (!qword_1ED75D478)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10BBA48, &_s18UpdatedObjectStateV6ConfigV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1ED75D478);
  }
  return result;
}

uint64_t _s18UpdatedObjectStateV6ConfigV10CodingKeysOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1C0D8A898 + 4 * byte_1C10BB739[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1C0D8A8CC + 4 * byte_1C10BB734[v4]))();
}

uint64_t sub_1C0D8A8CC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C0D8A8D4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C0D8A8DCLL);
  return result;
}

uint64_t sub_1C0D8A8E8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C0D8A8F0);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1C0D8A8F4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C0D8A8FC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s18UpdatedObjectStateV6ConfigV10CodingKeysOMa()
{
  return &_s18UpdatedObjectStateV6ConfigV10CodingKeysON;
}

uint64_t _s18UpdatedObjectStateV8BookmarkV10CodingKeysOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1C0D8A964 + 4 * byte_1C10BB743[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1C0D8A998 + 4 * byte_1C10BB73E[v4]))();
}

uint64_t sub_1C0D8A998(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C0D8A9A0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C0D8A9A8);
  return result;
}

uint64_t sub_1C0D8A9B4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C0D8A9BCLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1C0D8A9C0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C0D8A9C8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s18UpdatedObjectStateV8BookmarkV10CodingKeysOMa()
{
  return &_s18UpdatedObjectStateV8BookmarkV10CodingKeysON;
}

unint64_t sub_1C0D8A9E8()
{
  unint64_t result;

  result = qword_1EF649580;
  if (!qword_1EF649580)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10BB968, &_s18UpdatedObjectStateV8BookmarkV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EF649580);
  }
  return result;
}

unint64_t sub_1C0D8AA28()
{
  unint64_t result;

  result = qword_1EF649588;
  if (!qword_1EF649588)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10BBA20, &_s18UpdatedObjectStateV6ConfigV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EF649588);
  }
  return result;
}

unint64_t sub_1C0D8AA68()
{
  unint64_t result;

  result = qword_1ED75D488;
  if (!qword_1ED75D488)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10BB990, &_s18UpdatedObjectStateV6ConfigV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1ED75D488);
  }
  return result;
}

unint64_t sub_1C0D8AAA8()
{
  unint64_t result;

  result = qword_1ED75D480;
  if (!qword_1ED75D480)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10BB9B8, &_s18UpdatedObjectStateV6ConfigV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1ED75D480);
  }
  return result;
}

unint64_t sub_1C0D8AAE8()
{
  unint64_t result;

  result = qword_1ED753998;
  if (!qword_1ED753998)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10BB8D8, &_s18UpdatedObjectStateV8BookmarkV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1ED753998);
  }
  return result;
}

unint64_t sub_1C0D8AB28()
{
  unint64_t result;

  result = qword_1ED753990;
  if (!qword_1ED753990)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10BB900, &_s18UpdatedObjectStateV8BookmarkV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1ED753990);
  }
  return result;
}

double static NSUserDefaults.autonamingMessagesProcessingDelay.getter()
{
  return sub_1C0D8ABA0();
}

double static NSUserDefaults.autonamingMessagesPhotosProcessingProgress.getter()
{
  return sub_1C0D8ABA0();
}

double sub_1C0D8ABA0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  double v6;

  sub_1C0791684();
  sub_1C07ACF80(qword_1EF649608);
  sub_1C077983C();
  MEMORY[0x1E0C80A78](v3);
  sub_1C0796C04();
  if (!v4)
    sub_1C07A2BA4();
  sub_1C079E000(v0, v1);
  sub_1C077F040();
  sub_1C07810EC(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 16));
  sub_1C079BAC0();
  sub_1C0788434();
  return v6;
}

uint64_t static NSUserDefaults.sqlite3ReducedCacheSpillSize.getter()
{
  return sub_1C0D8AC6C();
}

uint64_t static NSUserDefaults.sqlite3MediumCacheSpillSize.getter()
{
  return sub_1C0D8AC6C();
}

uint64_t sub_1C0D8AC6C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v6;

  sub_1C0791684();
  sub_1C07ACF80(&qword_1ED760E70);
  sub_1C077983C();
  MEMORY[0x1E0C80A78](v3);
  sub_1C0796C04();
  if (!v4)
    sub_1C07A2BA4();
  sub_1C079E000(v0, v1);
  sub_1C077F040();
  sub_1C07810EC(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 16));
  sub_1C079BAC0();
  sub_1C0788434();
  return v6;
}

uint64_t static NSUserDefaults.eventLogDatabaseLoggingEnabled.getter()
{
  return sub_1C07A89A8();
}

uint64_t static NSUserDefaults.isESDataCollectionDaily.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  _BYTE v5[8];

  v0 = sub_1C07ACF80(&qword_1ED748278);
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = &v5[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (qword_1ED74D350 != -1)
    swift_once();
  sub_1C079E000(v0, (uint64_t)qword_1ED74D330);
  sub_1C077F040();
  sub_1C07810EC(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v1 + 16));
  sub_1C079BAC0();
  (*(void (**)(_BYTE *, uint64_t))(v1 + 8))(v3, v0);
  return v5[7];
}

void static NSUserDefaults.isDeviceToBeSampledForESDataCollection.setter(uint64_t a1)
{
  sub_1C0D8AF08(a1, &qword_1ED74D378, (uint64_t)&unk_1ED74D358);
}

uint64_t static NSUserDefaults.isDeviceToBeSampledForESDataCollection.getter()
{
  return sub_1C07A89A8();
}

void static NSUserDefaults.isESDataCollectionDaily.setter()
{
  uint64_t v0;

  if (qword_1ED74D350 != -1)
    swift_once();
  v0 = sub_1C07ACF80(&qword_1ED748278);
  sub_1C079E000(v0, (uint64_t)qword_1ED74D330);
  sub_1C0798650();
  sub_1C106D300();
  sub_1C077EB4C();
  sub_1C0796634();
}

uint64_t static NSUserDefaults.globalKnowledgeDatabaseLoggingEnabled.getter()
{
  return sub_1C07A89A8();
}

uint64_t static NSUserDefaults.graphDatabaseLoggingEnabled.getter()
{
  return sub_1C07A89A8();
}

void static NSUserDefaults.isGraphStoreManuallyOverridden.setter(uint64_t a1)
{
  sub_1C0D8AF08(a1, &qword_1ED755F20, (uint64_t)&unk_1ED755F08);
}

void sub_1C0D8AF08(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;

  if (*a2 != -1)
    sub_1C07A5838();
  v4 = sub_1C07ACF80(&qword_1ED7626C8);
  sub_1C079E000(v4, a3);
  sub_1C0798650();
  sub_1C106D300();
  sub_1C077EB4C();
  sub_1C0796634();
}

uint64_t static NSUserDefaults.maxSubjectIdSetSize.getter()
{
  return sub_1C0D8AC6C();
}

uint64_t static NSUserDefaults.keyValueDatabaseLoggingEnabled.getter()
{
  return sub_1C07A89A8();
}

uint64_t static NSUserDefaults.mockLifeEvents.getter()
{
  return sub_1C07A89A8();
}

uint64_t static NSUserDefaults.isDeltaUpdateEnabled.getter()
{
  return sub_1C07A89A8();
}

uint64_t static NSUserDefaults.ontologyDatabaseLoggingEnabled.getter()
{
  return sub_1C07A89A8();
}

uint64_t static NSUserDefaults.isGraphStoreManuallyOverridden.getter()
{
  return sub_1C07A89A8();
}

uint64_t static NSUserDefaults.testTelemetry.getter()
{
  return sub_1C07A89A8();
}

uint64_t static NSUserDefaults.stateDatabaseLoggingEnabled.getter()
{
  return sub_1C07A89A8();
}

void static NSUserDefaults.isDeltaUpdateEnabled.setter(uint64_t a1)
{
  sub_1C0D8AF08(a1, &qword_1ED752E60, (uint64_t)&unk_1ED752E40);
}

void static NSUserDefaults.isDeltaUpdateEnabled.modify()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;

  v1 = sub_1C079A234();
  sub_1C078FC1C((uint64_t)v1);
  if (qword_1ED752E60 != -1)
    swift_once();
  v2 = sub_1C07ACF80(&qword_1ED7626C8);
  sub_1C07A774C(v2, (uint64_t)&unk_1ED752E40);
  *(_QWORD *)(v0 + 56) = sub_1C07A1578();
  sub_1C077671C();
}

void sub_1C0D8B0FC(uint64_t a1)
{
  sub_1C0D8C854(a1, (uint64_t)&unk_1ED752E40);
}

uint64_t static NSUserDefaults.$isDeltaUpdateEnabled.getter()
{
  return sub_1C0D8B244(&qword_1ED7626C8, &qword_1ED752E60, (uint64_t)&unk_1ED752E40);
}

uint64_t static NSUserDefaults.viewGenerationGraphUpdateBatchSize.getter()
{
  return sub_1C0D8AC6C();
}

void static NSUserDefaults.viewGenerationGraphUpdateBatchSize.setter(uint64_t a1)
{
  sub_1C0D8B364(a1, &qword_1ED758D78, (uint64_t)&unk_1ED758D58);
}

void static NSUserDefaults.viewGenerationGraphUpdateBatchSize.modify()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;

  v1 = sub_1C079A234();
  sub_1C078FC1C((uint64_t)v1);
  if (qword_1ED758D78 != -1)
    swift_once();
  v2 = sub_1C07ACF80(&qword_1ED760E70);
  sub_1C07A774C(v2, (uint64_t)&unk_1ED758D58);
  *(_QWORD *)(v0 + 56) = sub_1C07A1578();
  sub_1C077671C();
}

void sub_1C0D8B1F8(uint64_t a1)
{
  sub_1C0D8C230(a1, (uint64_t)&unk_1ED758D58);
}

uint64_t static NSUserDefaults.$viewGenerationGraphUpdateBatchSize.getter()
{
  return sub_1C0D8B244(&qword_1ED760E70, &qword_1ED758D78, (uint64_t)&unk_1ED758D58);
}

uint64_t sub_1C0D8B244(uint64_t *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v11;

  v5 = sub_1C07ACF80(a1);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*a2 != -1)
    swift_once();
  v9 = sub_1C079E000(v5, a3);
  sub_1C077F040();
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v9, v5);
  sub_1C106D30C();
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t static NSUserDefaults.viewGenerationSubjectIdBatchSize.getter()
{
  return sub_1C0D8AC6C();
}

void static NSUserDefaults.viewGenerationSubjectIdBatchSize.setter(uint64_t a1)
{
  sub_1C0D8B364(a1, &qword_1ED758D50, (uint64_t)&unk_1ED758D38);
}

void sub_1C0D8B364(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;

  if (*a2 != -1)
    sub_1C07A5838();
  v4 = sub_1C07ACF80(&qword_1ED760E70);
  sub_1C079E000(v4, a3);
  sub_1C0798650();
  sub_1C106D300();
  sub_1C077EB4C();
  sub_1C0796634();
}

void static NSUserDefaults.viewGenerationSubjectIdBatchSize.modify()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;

  v1 = sub_1C079A234();
  sub_1C078FC1C((uint64_t)v1);
  if (qword_1ED758D50 != -1)
    swift_once();
  v2 = sub_1C07ACF80(&qword_1ED760E70);
  sub_1C07A774C(v2, (uint64_t)&unk_1ED758D38);
  *(_QWORD *)(v0 + 56) = sub_1C07A1578();
  sub_1C077671C();
}

void sub_1C0D8B454(uint64_t a1)
{
  sub_1C0D8C230(a1, (uint64_t)&unk_1ED758D38);
}

uint64_t static NSUserDefaults.$viewGenerationSubjectIdBatchSize.getter()
{
  return sub_1C0D8B244(&qword_1ED760E70, &qword_1ED758D50, (uint64_t)&unk_1ED758D38);
}

uint64_t static NSUserDefaults.viewGenerationMaxAttempts.getter()
{
  return sub_1C0D8AC6C();
}

void static NSUserDefaults.viewGenerationMaxAttempts.setter(uint64_t a1)
{
  sub_1C0D8B364(a1, &qword_1ED755918, (uint64_t)&unk_1ED755900);
}

void static NSUserDefaults.viewGenerationMaxAttempts.modify()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;

  v1 = sub_1C079A234();
  sub_1C078FC1C((uint64_t)v1);
  if (qword_1ED755918 != -1)
    swift_once();
  v2 = sub_1C07ACF80(&qword_1ED760E70);
  sub_1C07A774C(v2, (uint64_t)&unk_1ED755900);
  *(_QWORD *)(v0 + 56) = sub_1C07A1578();
  sub_1C077671C();
}

void sub_1C0D8B550(uint64_t a1)
{
  sub_1C0D8C230(a1, (uint64_t)&unk_1ED755900);
}

uint64_t static NSUserDefaults.$viewGenerationMaxAttempts.getter()
{
  return sub_1C0D8B244(&qword_1ED760E70, &qword_1ED755918, (uint64_t)&unk_1ED755900);
}

uint64_t static NSUserDefaults.viewGenerationMaxRemoteDevices.getter()
{
  return sub_1C0D8AC6C();
}

void static NSUserDefaults.viewGenerationMaxRemoteDevices.setter(uint64_t a1)
{
  sub_1C0D8B364(a1, &qword_1ED75D490, (uint64_t)&unk_1ED760910);
}

void static NSUserDefaults.viewGenerationMaxRemoteDevices.modify()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;

  v1 = sub_1C079A234();
  sub_1C078FC1C((uint64_t)v1);
  if (qword_1ED75D490 != -1)
    swift_once();
  v2 = sub_1C07ACF80(&qword_1ED760E70);
  sub_1C07A774C(v2, (uint64_t)&unk_1ED760910);
  *(_QWORD *)(v0 + 56) = sub_1C07A1578();
  sub_1C077671C();
}

void sub_1C0D8B64C(uint64_t a1)
{
  sub_1C0D8C230(a1, (uint64_t)&unk_1ED760910);
}

uint64_t static NSUserDefaults.$viewGenerationMaxRemoteDevices.getter()
{
  return sub_1C0D8B244(&qword_1ED760E70, &qword_1ED75D490, (uint64_t)&unk_1ED760910);
}

void static NSUserDefaults.sqlite3ReducedCacheSpillSize.setter(uint64_t a1)
{
  sub_1C0D8B364(a1, &qword_1ED755748, (uint64_t)&unk_1ED755728);
}

void static NSUserDefaults.sqlite3ReducedCacheSpillSize.modify()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;

  v1 = sub_1C079A234();
  sub_1C078FC1C((uint64_t)v1);
  if (qword_1ED755748 != -1)
    swift_once();
  v2 = sub_1C07ACF80(&qword_1ED760E70);
  sub_1C07A774C(v2, (uint64_t)&unk_1ED755728);
  *(_QWORD *)(v0 + 56) = sub_1C07A1578();
  sub_1C077671C();
}

void sub_1C0D8B72C(uint64_t a1)
{
  sub_1C0D8C230(a1, (uint64_t)&unk_1ED755728);
}

uint64_t static NSUserDefaults.$sqlite3ReducedCacheSpillSize.getter()
{
  return sub_1C0D8B244(&qword_1ED760E70, &qword_1ED755748, (uint64_t)&unk_1ED755728);
}

void static NSUserDefaults.sqlite3MediumCacheSpillSize.setter(uint64_t a1)
{
  sub_1C0D8B364(a1, &qword_1EF62E370, (uint64_t)&unk_1EF649590);
}

void static NSUserDefaults.sqlite3MediumCacheSpillSize.modify()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;

  v1 = sub_1C079A234();
  sub_1C078FC1C((uint64_t)v1);
  if (qword_1EF62E370 != -1)
    swift_once();
  v2 = sub_1C07ACF80(&qword_1ED760E70);
  sub_1C07A774C(v2, (uint64_t)&unk_1EF649590);
  *(_QWORD *)(v0 + 56) = sub_1C07A1578();
  sub_1C077671C();
}

void sub_1C0D8B80C(uint64_t a1)
{
  sub_1C0D8C230(a1, (uint64_t)&unk_1EF649590);
}

uint64_t static NSUserDefaults.$sqlite3MediumCacheSpillSize.getter()
{
  return sub_1C0D8B244(&qword_1ED760E70, &qword_1EF62E370, (uint64_t)&unk_1EF649590);
}

uint64_t static NSUserDefaults.quDatabaseLoggingEnabled.getter()
{
  return sub_1C07A89A8();
}

void static NSUserDefaults.quDatabaseLoggingEnabled.setter(uint64_t a1)
{
  sub_1C0D8AF08(a1, &qword_1EF62E378, (uint64_t)&unk_1EF6495A8);
}

void static NSUserDefaults.quDatabaseLoggingEnabled.modify()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;

  v1 = sub_1C079A234();
  sub_1C078FC1C((uint64_t)v1);
  if (qword_1EF62E378 != -1)
    swift_once();
  v2 = sub_1C07ACF80(&qword_1ED7626C8);
  sub_1C07A774C(v2, (uint64_t)&unk_1EF6495A8);
  *(_QWORD *)(v0 + 56) = sub_1C07A1578();
  sub_1C077671C();
}

void sub_1C0D8B908(uint64_t a1)
{
  sub_1C0D8C854(a1, (uint64_t)&unk_1EF6495A8);
}

uint64_t static NSUserDefaults.$quDatabaseLoggingEnabled.getter()
{
  return sub_1C0D8B244(&qword_1ED7626C8, &qword_1EF62E378, (uint64_t)&unk_1EF6495A8);
}

void static NSUserDefaults.graphDatabaseLoggingEnabled.setter(uint64_t a1)
{
  sub_1C0D8AF08(a1, &qword_1ED762BA0, (uint64_t)&unk_1ED762EA0);
}

void static NSUserDefaults.graphDatabaseLoggingEnabled.modify()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;

  v1 = sub_1C079A234();
  sub_1C078FC1C((uint64_t)v1);
  if (qword_1ED762BA0 != -1)
    swift_once();
  v2 = sub_1C07ACF80(&qword_1ED7626C8);
  sub_1C07A774C(v2, (uint64_t)&unk_1ED762EA0);
  *(_QWORD *)(v0 + 56) = sub_1C07A1578();
  sub_1C077671C();
}

void sub_1C0D8B9E8(uint64_t a1)
{
  sub_1C0D8C854(a1, (uint64_t)&unk_1ED762EA0);
}

uint64_t static NSUserDefaults.$graphDatabaseLoggingEnabled.getter()
{
  return sub_1C0D8B244(&qword_1ED7626C8, &qword_1ED762BA0, (uint64_t)&unk_1ED762EA0);
}

void static NSUserDefaults.globalKnowledgeDatabaseLoggingEnabled.setter(uint64_t a1)
{
  sub_1C0D8AF08(a1, &qword_1ED7624B8, (uint64_t)&unk_1ED762EE0);
}

void static NSUserDefaults.globalKnowledgeDatabaseLoggingEnabled.modify()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;

  v1 = sub_1C079A234();
  sub_1C078FC1C((uint64_t)v1);
  if (qword_1ED7624B8 != -1)
    swift_once();
  v2 = sub_1C07ACF80(&qword_1ED7626C8);
  sub_1C07A774C(v2, (uint64_t)&unk_1ED762EE0);
  *(_QWORD *)(v0 + 56) = sub_1C07A1578();
  sub_1C077671C();
}

void sub_1C0D8BAC8(uint64_t a1)
{
  sub_1C0D8C854(a1, (uint64_t)&unk_1ED762EE0);
}

uint64_t static NSUserDefaults.$globalKnowledgeDatabaseLoggingEnabled.getter()
{
  return sub_1C0D8B244(&qword_1ED7626C8, &qword_1ED7624B8, (uint64_t)&unk_1ED762EE0);
}

void static NSUserDefaults.keyValueDatabaseLoggingEnabled.setter(uint64_t a1)
{
  sub_1C0D8AF08(a1, &qword_1ED7624A0, (uint64_t)&unk_1ED762BC0);
}

void static NSUserDefaults.keyValueDatabaseLoggingEnabled.modify()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;

  v1 = sub_1C079A234();
  sub_1C078FC1C((uint64_t)v1);
  if (qword_1ED7624A0 != -1)
    swift_once();
  v2 = sub_1C07ACF80(&qword_1ED7626C8);
  sub_1C07A774C(v2, (uint64_t)&unk_1ED762BC0);
  *(_QWORD *)(v0 + 56) = sub_1C07A1578();
  sub_1C077671C();
}

void sub_1C0D8BBA8(uint64_t a1)
{
  sub_1C0D8C854(a1, (uint64_t)&unk_1ED762BC0);
}

uint64_t static NSUserDefaults.$keyValueDatabaseLoggingEnabled.getter()
{
  return sub_1C0D8B244(&qword_1ED7626C8, &qword_1ED7624A0, (uint64_t)&unk_1ED762BC0);
}

void static NSUserDefaults.ontologyDatabaseLoggingEnabled.setter(uint64_t a1)
{
  sub_1C0D8AF08(a1, &qword_1ED7624A8, (uint64_t)&unk_1ED762BD8);
}

void static NSUserDefaults.ontologyDatabaseLoggingEnabled.modify()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;

  v1 = sub_1C079A234();
  sub_1C078FC1C((uint64_t)v1);
  if (qword_1ED7624A8 != -1)
    swift_once();
  v2 = sub_1C07ACF80(&qword_1ED7626C8);
  sub_1C07A774C(v2, (uint64_t)&unk_1ED762BD8);
  *(_QWORD *)(v0 + 56) = sub_1C07A1578();
  sub_1C077671C();
}

void sub_1C0D8BC88(uint64_t a1)
{
  sub_1C0D8C854(a1, (uint64_t)&unk_1ED762BD8);
}

uint64_t static NSUserDefaults.$ontologyDatabaseLoggingEnabled.getter()
{
  return sub_1C0D8B244(&qword_1ED7626C8, &qword_1ED7624A8, (uint64_t)&unk_1ED762BD8);
}

void static NSUserDefaults.stateDatabaseLoggingEnabled.setter(uint64_t a1)
{
  sub_1C0D8AF08(a1, &qword_1ED762470, (uint64_t)&unk_1ED762BA8);
}

void static NSUserDefaults.stateDatabaseLoggingEnabled.modify()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;

  v1 = sub_1C079A234();
  sub_1C078FC1C((uint64_t)v1);
  if (qword_1ED762470 != -1)
    swift_once();
  v2 = sub_1C07ACF80(&qword_1ED7626C8);
  sub_1C07A774C(v2, (uint64_t)&unk_1ED762BA8);
  *(_QWORD *)(v0 + 56) = sub_1C07A1578();
  sub_1C077671C();
}

void sub_1C0D8BD68(uint64_t a1)
{
  sub_1C0D8C854(a1, (uint64_t)&unk_1ED762BA8);
}

uint64_t static NSUserDefaults.$stateDatabaseLoggingEnabled.getter()
{
  return sub_1C0D8B244(&qword_1ED7626C8, &qword_1ED762470, (uint64_t)&unk_1ED762BA8);
}

void static NSUserDefaults.eventLogDatabaseLoggingEnabled.setter(uint64_t a1)
{
  sub_1C0D8AF08(a1, &qword_1ED762498, (uint64_t)&unk_1ED762478);
}

void static NSUserDefaults.eventLogDatabaseLoggingEnabled.modify()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;

  v1 = sub_1C079A234();
  sub_1C078FC1C((uint64_t)v1);
  if (qword_1ED762498 != -1)
    swift_once();
  v2 = sub_1C07ACF80(&qword_1ED7626C8);
  sub_1C07A774C(v2, (uint64_t)&unk_1ED762478);
  *(_QWORD *)(v0 + 56) = sub_1C07A1578();
  sub_1C077671C();
}

void sub_1C0D8BE48(uint64_t a1)
{
  sub_1C0D8C854(a1, (uint64_t)&unk_1ED762478);
}

uint64_t static NSUserDefaults.$eventLogDatabaseLoggingEnabled.getter()
{
  return sub_1C0D8B244(&qword_1ED7626C8, &qword_1ED762498, (uint64_t)&unk_1ED762478);
}

uint64_t static NSUserDefaults.viewDatabaseLoggingEnabled.getter()
{
  return sub_1C07A89A8();
}

void static NSUserDefaults.viewDatabaseLoggingEnabled.setter(uint64_t a1)
{
  sub_1C0D8AF08(a1, &qword_1ED762460, (uint64_t)&unk_1ED762B88);
}

void static NSUserDefaults.viewDatabaseLoggingEnabled.modify()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;

  v1 = sub_1C079A234();
  sub_1C078FC1C((uint64_t)v1);
  if (qword_1ED762460 != -1)
    swift_once();
  v2 = sub_1C07ACF80(&qword_1ED7626C8);
  sub_1C07A774C(v2, (uint64_t)&unk_1ED762B88);
  *(_QWORD *)(v0 + 56) = sub_1C07A1578();
  sub_1C077671C();
}

void sub_1C0D8BF44(uint64_t a1)
{
  sub_1C0D8C854(a1, (uint64_t)&unk_1ED762B88);
}

uint64_t static NSUserDefaults.$viewDatabaseLoggingEnabled.getter()
{
  return sub_1C0D8B244(&qword_1ED7626C8, &qword_1ED762460, (uint64_t)&unk_1ED762B88);
}

uint64_t static NSUserDefaults.viewDatabaseArtifactLoggingEnabled.getter()
{
  return sub_1C07A89A8();
}

void static NSUserDefaults.viewDatabaseArtifactLoggingEnabled.setter(uint64_t a1)
{
  sub_1C0D8AF08(a1, &qword_1ED762ED8, (uint64_t)&unk_1ED762EB8);
}

void static NSUserDefaults.viewDatabaseArtifactLoggingEnabled.modify()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;

  v1 = sub_1C079A234();
  sub_1C078FC1C((uint64_t)v1);
  if (qword_1ED762ED8 != -1)
    swift_once();
  v2 = sub_1C07ACF80(&qword_1ED7626C8);
  sub_1C07A774C(v2, (uint64_t)&unk_1ED762EB8);
  *(_QWORD *)(v0 + 56) = sub_1C07A1578();
  sub_1C077671C();
}

void sub_1C0D8C040(uint64_t a1)
{
  sub_1C0D8C854(a1, (uint64_t)&unk_1ED762EB8);
}

uint64_t static NSUserDefaults.$viewDatabaseArtifactLoggingEnabled.getter()
{
  return sub_1C0D8B244(&qword_1ED7626C8, &qword_1ED762ED8, (uint64_t)&unk_1ED762EB8);
}

void static NSUserDefaults.testTelemetry.setter(uint64_t a1)
{
  sub_1C0D8AF08(a1, &qword_1ED755F00, (uint64_t)&unk_1ED75D188);
}

void static NSUserDefaults.testTelemetry.modify()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;

  v1 = sub_1C079A234();
  sub_1C078FC1C((uint64_t)v1);
  if (qword_1ED755F00 != -1)
    swift_once();
  v2 = sub_1C07ACF80(&qword_1ED7626C8);
  sub_1C07A774C(v2, (uint64_t)&unk_1ED75D188);
  *(_QWORD *)(v0 + 56) = sub_1C07A1578();
  sub_1C077671C();
}

void sub_1C0D8C120(uint64_t a1)
{
  sub_1C0D8C854(a1, (uint64_t)&unk_1ED75D188);
}

uint64_t static NSUserDefaults.$testTelemetry.getter()
{
  return sub_1C0D8B244(&qword_1ED7626C8, &qword_1ED755F00, (uint64_t)&unk_1ED75D188);
}

void static NSUserDefaults.maxSubjectIdSetSize.setter(uint64_t a1)
{
  sub_1C0D8B364(a1, &qword_1ED755008, (uint64_t)&unk_1ED754FE8);
}

void static NSUserDefaults.maxSubjectIdSetSize.modify()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;

  v1 = sub_1C079A234();
  sub_1C078FC1C((uint64_t)v1);
  if (qword_1ED755008 != -1)
    swift_once();
  v2 = sub_1C07ACF80(&qword_1ED760E70);
  sub_1C07A774C(v2, (uint64_t)&unk_1ED754FE8);
  *(_QWORD *)(v0 + 56) = sub_1C07A1578();
  sub_1C077671C();
}

void sub_1C0D8C208(uint64_t a1)
{
  sub_1C0D8C230(a1, (uint64_t)&unk_1ED754FE8);
}

void sub_1C0D8C230(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;

  v4 = sub_1C07ACF80(&qword_1ED760E70);
  sub_1C078B4A0(v4);
  sub_1C079E000(v2, a2);
  sub_1C0795494();
  sub_1C0794068();
  sub_1C07A4C5C();
  sub_1C0796634();
}

uint64_t static NSUserDefaults.$maxSubjectIdSetSize.getter()
{
  return sub_1C0D8B244(&qword_1ED760E70, &qword_1ED755008, (uint64_t)&unk_1ED754FE8);
}

void static NSUserDefaults.isGraphStoreManuallyOverridden.modify()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;

  v1 = sub_1C079A234();
  sub_1C078FC1C((uint64_t)v1);
  if (qword_1ED755F20 != -1)
    swift_once();
  v2 = sub_1C07ACF80(&qword_1ED7626C8);
  sub_1C07A774C(v2, (uint64_t)&unk_1ED755F08);
  *(_QWORD *)(v0 + 56) = sub_1C07A1578();
  sub_1C077671C();
}

void sub_1C0D8C348(uint64_t a1)
{
  sub_1C0D8C854(a1, (uint64_t)&unk_1ED755F08);
}

uint64_t static NSUserDefaults.$isGraphStoreManuallyOverridden.getter()
{
  return sub_1C0D8B244(&qword_1ED7626C8, &qword_1ED755F20, (uint64_t)&unk_1ED755F08);
}

void static NSUserDefaults.mockLifeEvents.setter(uint64_t a1)
{
  sub_1C0D8AF08(a1, &qword_1ED75D1B8, (uint64_t)&unk_1ED75D1A0);
}

void static NSUserDefaults.mockLifeEvents.modify()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;

  v1 = sub_1C079A234();
  sub_1C078FC1C((uint64_t)v1);
  if (qword_1ED75D1B8 != -1)
    swift_once();
  v2 = sub_1C07ACF80(&qword_1ED7626C8);
  sub_1C07A774C(v2, (uint64_t)&unk_1ED75D1A0);
  *(_QWORD *)(v0 + 56) = sub_1C07A1578();
  sub_1C077671C();
}

void sub_1C0D8C428(uint64_t a1)
{
  sub_1C0D8C854(a1, (uint64_t)&unk_1ED75D1A0);
}

uint64_t static NSUserDefaults.$mockLifeEvents.getter()
{
  return sub_1C0D8B244(&qword_1ED7626C8, &qword_1ED75D1B8, (uint64_t)&unk_1ED75D1A0);
}

uint64_t static NSUserDefaults.mockLifeEventSignals.getter()
{
  return sub_1C07A89A8();
}

void static NSUserDefaults.mockLifeEventSignals.setter(uint64_t a1)
{
  sub_1C0D8AF08(a1, &qword_1EF62E380, (uint64_t)&unk_1EF6495C0);
}

void static NSUserDefaults.mockLifeEventSignals.modify()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;

  v1 = sub_1C079A234();
  sub_1C078FC1C((uint64_t)v1);
  if (qword_1EF62E380 != -1)
    swift_once();
  v2 = sub_1C07ACF80(&qword_1ED7626C8);
  sub_1C07A774C(v2, (uint64_t)&unk_1EF6495C0);
  *(_QWORD *)(v0 + 56) = sub_1C07A1578();
  sub_1C077671C();
}

void sub_1C0D8C52C(uint64_t a1)
{
  sub_1C0D8C854(a1, (uint64_t)&unk_1EF6495C0);
}

uint64_t static NSUserDefaults.$mockLifeEventSignals.getter()
{
  return sub_1C0D8B244(&qword_1ED7626C8, &qword_1EF62E380, (uint64_t)&unk_1EF6495C0);
}

uint64_t static NSUserDefaults.enableERHistoricalFeatureGeneration.getter()
{
  return sub_1C07A89A8();
}

void static NSUserDefaults.enableERHistoricalFeatureGeneration.setter(uint64_t a1)
{
  sub_1C0D8AF08(a1, &qword_1ED754BB8, (uint64_t)&unk_1ED754BA0);
}

void static NSUserDefaults.enableERHistoricalFeatureGeneration.modify()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;

  v1 = sub_1C079A234();
  sub_1C078FC1C((uint64_t)v1);
  if (qword_1ED754BB8 != -1)
    swift_once();
  v2 = sub_1C07ACF80(&qword_1ED7626C8);
  sub_1C07A774C(v2, (uint64_t)&unk_1ED754BA0);
  *(_QWORD *)(v0 + 56) = sub_1C07A1578();
  sub_1C077671C();
}

void sub_1C0D8C628(uint64_t a1)
{
  sub_1C0D8C854(a1, (uint64_t)&unk_1ED754BA0);
}

uint64_t static NSUserDefaults.$enableERHistoricalFeatureGeneration.getter()
{
  return sub_1C0D8B244(&qword_1ED7626C8, &qword_1ED754BB8, (uint64_t)&unk_1ED754BA0);
}

void static NSUserDefaults.isESDataCollectionDaily.modify()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;

  v1 = sub_1C079A234();
  sub_1C078FC1C((uint64_t)v1);
  if (qword_1ED74D350 != -1)
    swift_once();
  v2 = sub_1C07ACF80(&qword_1ED748278);
  sub_1C07A774C(v2, (uint64_t)qword_1ED74D330);
  *(_QWORD *)(v0 + 56) = sub_1C07A1578();
  sub_1C077671C();
}

uint64_t sub_1C0D8C6EC()
{
  uint64_t v0;

  v0 = sub_1C07ACF80(&qword_1ED748278);
  sub_1C0800A9C(v0, qword_1ED74D330);
  sub_1C079E000(v0, (uint64_t)qword_1ED74D330);
  sub_1C07A896C();
  sub_1C10703C0();
  sub_1C07ACF80(&qword_1ED75E848);
  return sub_1C106D318();
}

uint64_t static NSUserDefaults.$isESDataCollectionDaily.getter()
{
  return sub_1C0D8B244(&qword_1ED748278, &qword_1ED74D350, (uint64_t)qword_1ED74D330);
}

void static NSUserDefaults.isDeviceToBeSampledForESDataCollection.modify()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;

  v1 = sub_1C079A234();
  sub_1C078FC1C((uint64_t)v1);
  if (qword_1ED74D378 != -1)
    swift_once();
  v2 = sub_1C07ACF80(&qword_1ED7626C8);
  sub_1C07A774C(v2, (uint64_t)&unk_1ED74D358);
  *(_QWORD *)(v0 + 56) = sub_1C07A1578();
  sub_1C077671C();
}

void sub_1C0D8C82C(uint64_t a1)
{
  sub_1C0D8C854(a1, (uint64_t)&unk_1ED74D358);
}

void sub_1C0D8C854(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;

  v4 = sub_1C07ACF80(&qword_1ED7626C8);
  sub_1C078B4A0(v4);
  sub_1C079E000(v2, a2);
  sub_1C0795494();
  sub_1C0794068();
  sub_1C07A4C5C();
  sub_1C0796634();
}

uint64_t static NSUserDefaults.$isDeviceToBeSampledForESDataCollection.getter()
{
  return sub_1C0D8B244(&qword_1ED7626C8, &qword_1ED74D378, (uint64_t)&unk_1ED74D358);
}

void static NSUserDefaults.autonamingMessagesProcessingDelay.setter()
{
  sub_1C0D8C9F4(&qword_1EF62E390, (uint64_t)qword_1EF6495D8);
}

void static NSUserDefaults.autonamingMessagesProcessingDelay.modify()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;

  v1 = sub_1C079A234();
  sub_1C078FC1C((uint64_t)v1);
  if (qword_1EF62E390 != -1)
    swift_once();
  v2 = sub_1C07ACF80(qword_1EF649608);
  sub_1C07A774C(v2, (uint64_t)qword_1EF6495D8);
  *(_QWORD *)(v0 + 56) = sub_1C07A1578();
  sub_1C077671C();
}

void sub_1C0D8C988(uint64_t a1)
{
  sub_1C0D8CB54(a1, qword_1EF6495D8);
}

uint64_t static NSUserDefaults.$autonamingMessagesProcessingDelay.getter()
{
  return sub_1C0D8B244(qword_1EF649608, &qword_1EF62E390, (uint64_t)qword_1EF6495D8);
}

void static NSUserDefaults.autonamingMessagesPhotosProcessingProgress.setter()
{
  sub_1C0D8C9F4(&qword_1EF62E398, (uint64_t)qword_1EF6495F0);
}

void sub_1C0D8C9F4(_QWORD *a1, uint64_t a2)
{
  uint64_t v3;

  if (*a1 != -1)
    swift_once();
  v3 = sub_1C07ACF80(qword_1EF649608);
  sub_1C079E000(v3, a2);
  sub_1C0798650();
  sub_1C106D300();
  sub_1C077EB4C();
  sub_1C0796634();
}

void static NSUserDefaults.autonamingMessagesPhotosProcessingProgress.modify()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;

  v1 = sub_1C079A234();
  sub_1C078FC1C((uint64_t)v1);
  if (qword_1EF62E398 != -1)
    swift_once();
  v2 = sub_1C07ACF80(qword_1EF649608);
  sub_1C07A774C(v2, (uint64_t)qword_1EF6495F0);
  *(_QWORD *)(v0 + 56) = sub_1C07A1578();
  sub_1C077671C();
}

void sub_1C0D8CAEC(_QWORD *a1)
{
  void *v1;

  v1 = (void *)*a1;
  (*(void (**)(_QWORD, _QWORD))(*a1 + 56))(*a1, 0);
  swift_endAccess();
  free(v1);
}

void sub_1C0D8CB28(uint64_t a1)
{
  sub_1C0D8CB54(a1, qword_1EF6495F0);
}

void sub_1C0D8CB54(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = sub_1C07ACF80(qword_1EF649608);
  sub_1C0800A9C(v3, a2);
  sub_1C079E000(v3, (uint64_t)a2);
  sub_1C0795494();
  sub_1C0794068();
  sub_1C07A4C5C();
  sub_1C0796634();
}

uint64_t static NSUserDefaults.$autonamingMessagesPhotosProcessingProgress.getter()
{
  return sub_1C0D8B244(qword_1EF649608, &qword_1EF62E398, (uint64_t)qword_1EF6495F0);
}

uint64_t sub_1C0D8CBFC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1C0D8CC0C(int a1)
{
  uint64_t inited;

  sub_1C07ACF80(&qword_1ED755050);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C1079220;
  *(_QWORD *)(inited + 32) = 0xD000000000000019;
  *(_QWORD *)(inited + 40) = 0x80000001C10F3140;
  *(_QWORD *)(inited + 48) = objc_msgSend((id)objc_opt_self(), sel_featureValueWithInt64_, a1);
  sub_1C07D97D4();
  return sub_1C106F97C();
}

uint64_t sub_1C0D8CCC0(int a1, uint64_t a2, unint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  id v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  uint64_t v18;
  uint64_t v19;

  sub_1C07ACF80((uint64_t *)&unk_1ED762690);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_1C0D8CC0C(a1);
  if (a3)
  {
    v9 = sub_1C0846380();
    if (v9)
    {
      v10 = v9;
      v11 = sub_1C077AE98();
      sub_1C07B2D8C((uint64_t)v8, 1, 1, v11);
      sub_1C0ACA89C(a2, a3, (uint64_t)v8);
      v13 = v12;
      sub_1C0784B94((uint64_t)v8, (uint64_t *)&unk_1ED762690);
      sub_1C07F4DDC(v10);
      if (v13)
      {
        sub_1C07D97D4();
        sub_1C07F5FD8();
        if (v14)
        {
          v15 = v19;
          swift_isUniquelyReferenced_nonNull_native();
          v18 = v15;
          sub_1C08A07B0();
          v19 = v18;
          swift_bridgeObjectRelease();
        }
        else
        {
          sub_1C07F2B9C();

        }
      }
    }
  }
  return v19;
}

uint64_t sub_1C0D8CE50@<X0>(uint64_t a1@<X0>, char a2@<W1>, int a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v12;
  uint64_t result;
  uint64_t v14;

  v12 = sub_1C077AE98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(a6, a1, v12);
  result = type metadata accessor for UserFocusComputedModeEvent();
  *(_BYTE *)(a6 + *(int *)(result + 20)) = a2;
  v14 = a6 + *(int *)(result + 24);
  *(_DWORD *)v14 = a3;
  *(_QWORD *)(v14 + 8) = a4;
  *(_QWORD *)(v14 + 16) = a5;
  return result;
}

uint64_t sub_1C0D8CECC()
{
  int *v0;

  return sub_1C0D8CC0C(*v0);
}

uint64_t sub_1C0D8CED4()
{
  uint64_t v0;

  return sub_1C0D8CCC0(*(_DWORD *)v0, *(_QWORD *)(v0 + 8), *(_QWORD *)(v0 + 16));
}

uint64_t sub_1C0D8CEE0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = v2 + *(int *)(a1 + 24);
  v5 = *(_QWORD *)(v3 + 8);
  v4 = *(_QWORD *)(v3 + 16);
  *(_DWORD *)a2 = *(_DWORD *)v3;
  *(_QWORD *)(a2 + 8) = v5;
  *(_QWORD *)(a2 + 16) = v4;
  return _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
}

uint64_t sub_1C0D8CEFC@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  return sub_1C0D8CE50(a1, a2, *(_DWORD *)a3, *(_QWORD *)(a3 + 8), *(_QWORD *)(a3 + 16), a4);
}

void sub_1C0D8CF0C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  id v12;
  id v13;
  uint64_t v14;

  sub_1C07ACF80(&qword_1ED75D0B8);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C07ACF80(&qword_1ED74C9E8);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v14 - v10;
  v12 = objc_msgSend((id)BiomeLibrary(), sel_UserFocus);
  swift_unknownObjectRelease();
  v13 = objc_msgSend(v12, sel_ComputedMode);
  swift_unknownObjectRelease();
  sub_1C08B6178();

  if (!v1)
  {
    sub_1C078A924((uint64_t)v11, (uint64_t)v8, &qword_1ED74C9E8);
    sub_1C078A924(a1, (uint64_t)v5, &qword_1ED75D0B8);
    sub_1C0B5C2A4();
    sub_1C0784B94((uint64_t)v11, &qword_1ED74C9E8);
  }
}

_QWORD *sub_1C0D8D08C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1C106ADE0();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 24);
    *((_BYTE *)a1 + *(int *)(a3 + 20)) = *((_BYTE *)a2 + *(int *)(a3 + 20));
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    *(_DWORD *)v9 = *(_DWORD *)v10;
    v11 = *((_QWORD *)v10 + 2);
    *((_QWORD *)v9 + 1) = *((_QWORD *)v10 + 1);
    *((_QWORD *)v9 + 2) = v11;
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  }
  return a1;
}

uint64_t sub_1C0D8D130(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = sub_1C106ADE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 24);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_DWORD *)v8 = *(_DWORD *)v9;
  v10 = *(_QWORD *)(v9 + 16);
  *(_QWORD *)(v8 + 8) = *(_QWORD *)(v9 + 8);
  *(_QWORD *)(v8 + 16) = v10;
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  return a1;
}

uint64_t sub_1C0D8D1A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v6 = sub_1C106ADE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  v7 = *(int *)(a3 + 24);
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_DWORD *)v8 = *(_DWORD *)v9;
  *(_QWORD *)(v8 + 8) = *(_QWORD *)(v9 + 8);
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(v9 + 16);
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1C0D8D238(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v6 = sub_1C106ADE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 24);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_DWORD *)v8 = *(_DWORD *)v9;
  v11 = *(_QWORD *)(v9 + 8);
  v10 = *(_QWORD *)(v9 + 16);
  *(_QWORD *)(v8 + 8) = v11;
  *(_QWORD *)(v8 + 16) = v10;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1C0D8D2B4()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1C0D8D2C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  unint64_t v8;
  int v9;

  v6 = sub_1C077AE98();
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
    return sub_1C07B2D80(a1, a2, v6);
  v8 = *(_QWORD *)(a1 + *(int *)(a3 + 24) + 16);
  if (v8 >= 0xFFFFFFFF)
    LODWORD(v8) = -1;
  v9 = v8 - 1;
  if (v9 < 0)
    v9 = -1;
  return (v9 + 1);
}

uint64_t sub_1C0D8D344()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1C0D8D350(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;

  result = sub_1C077AE98();
  if (*(_DWORD *)(*(_QWORD *)(result - 8) + 84) == a3)
    return sub_1C07B2D8C(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 24) + 16) = a2;
  return result;
}

uint64_t type metadata accessor for UserFocusComputedModeEvent()
{
  uint64_t result;

  result = qword_1ED74C560;
  if (!qword_1ED74C560)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1C0D8D3FC()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1C106ADE0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unint64_t sub_1C0D8D47C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF649630;
  if (!qword_1EF649630)
  {
    v1 = sub_1C07D4BEC(&qword_1ED747B60);
    result = MEMORY[0x1C3BA8174](&unk_1C1091748, v1);
    atomic_store(result, (unint64_t *)&qword_1EF649630);
  }
  return result;
}

void sub_1C0D8D4C4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  v3 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v3;
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C0778534();
}

uint64_t assignWithCopy for UserFocusComputedModeContent(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for UserFocusComputedModeContent(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  v3 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v3;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for UserFocusComputedModeContent()
{
  return &type metadata for UserFocusComputedModeContent;
}

uint64_t sub_1C0D8D584()
{
  return swift_getOpaqueTypeConformance2();
}

void sub_1C0D8D594(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;

  v5 = sub_1C07ACF80(&qword_1ED747B60);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v8 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0D8CF0C(a1);
  if (!v2)
    sub_1C0D8D64C((uint64_t)v7, a2);
}

void sub_1C0D8D62C(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_1C0D8D594(a1, a2);
}

uint64_t sub_1C0D8D64C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1C07ACF80(&qword_1ED747B60);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_1C0D8D698()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED7480A0;
  if (!qword_1ED7480A0)
  {
    v1 = sub_1C07D4BEC(&qword_1ED748048);
    result = MEMORY[0x1C3BA8174](&unk_1C1091558, v1);
    atomic_store(result, (unint64_t *)&qword_1ED7480A0);
  }
  return result;
}

uint64_t sub_1C0D8D6DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  void (*v22)(char *, uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v4 = v3;
  v27 = a3;
  v6 = type metadata accessor for FeatureProviderSnapshot(0);
  v25 = *(_QWORD *)(v6 - 8);
  v26 = v6;
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(_QWORD *)(a1 + 16);
  if (v9)
  {
    v28 = MEMORY[0x1E0DEE9D8];
    sub_1C09D3218();
    v10 = v28;
    v11 = sub_1C106ADE0();
    v12 = *(_QWORD *)(v11 - 8);
    v13 = a1 + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80));
    v23 = *(_QWORD *)(v12 + 72);
    v24 = v11;
    v22 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 16);
    do
    {
      v22(v8, v13, v24);
      v14 = sub_1C0D8E120(v13);
      v15 = v27;
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      v16 = v15;
      v17 = v4;
      sub_1C07E7D3C(v14, v16);
      swift_bridgeObjectRelease();
      sub_1C089B840();
      v19 = v18;
      swift_release();
      *(_QWORD *)&v8[*(int *)(v26 + 20)] = v19;
      v28 = v10;
      v20 = *(_QWORD *)(v10 + 16);
      if (v20 >= *(_QWORD *)(v10 + 24) >> 1)
      {
        sub_1C09D3218();
        v10 = v28;
      }
      *(_QWORD *)(v10 + 16) = v20 + 1;
      sub_1C07E7EF8((uint64_t)v8, v10+ ((*(unsigned __int8 *)(v25 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80))+ *(_QWORD *)(v25 + 72) * v20);
      v13 += v23;
      --v9;
      v4 = v17;
    }
    while (v9);
    swift_release();
  }
  else
  {
    swift_release();
    v10 = MEMORY[0x1E0DEE9D8];
  }
  swift_bridgeObjectRelease();
  return v10;
}

void sub_1C0D8D8D4(int a1)
{
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;

  if ((a1 - 1) >= 0xA)
  {
    if (qword_1ED762B18 != -1)
      swift_once();
    v1 = sub_1C077585C();
    sub_1C079E000(v1, (uint64_t)qword_1ED762AF8);
    v2 = sub_1C077C0FC();
    v3 = sub_1C107039C();
    if (os_log_type_enabled(v2, v3))
    {
      v4 = (uint8_t *)sub_1C0775854();
      *(_DWORD *)v4 = 67109120;
      sub_1C079B050();
      _os_log_impl(&dword_1C0771000, v2, v3, "Unknown BMUserFocusModeComputedSemanticType - %d", v4, 8u);
      sub_1C0776778();
    }

    sub_1C07892A4();
  }
}

void sub_1C0D8D9C4(unsigned int a1, const char *a2)
{
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;

  if (a1 >= 4)
  {
    if (qword_1ED762B18 != -1)
      swift_once();
    v3 = sub_1C077585C();
    sub_1C079E000(v3, (uint64_t)qword_1ED762AF8);
    v4 = sub_1C077C0FC();
    v5 = sub_1C107039C();
    if (os_log_type_enabled(v4, v5))
    {
      v6 = (uint8_t *)sub_1C0775854();
      *(_DWORD *)v6 = 67109120;
      sub_1C079B050();
      _os_log_impl(&dword_1C0771000, v4, v5, a2, v6, 8u);
      sub_1C0776778();
    }

  }
  sub_1C07892A4();
}

void sub_1C0D8DAAC(char a1)
{
  uint64_t v1;
  id v3;
  id v4;

  v3 = objc_msgSend((id)BiomeLibrary(), sel_UserFocus);
  swift_unknownObjectRelease();
  v4 = objc_msgSend(v3, sel_ComputedMode);
  swift_unknownObjectRelease();
  *(_QWORD *)(v1 + 24) = v4;
  *(_BYTE *)(v1 + 16) = a1;
  sub_1C077671C();
}

void sub_1C0D8DB80()
{
  sub_1C09D30E0();
  sub_1C07A1588();
  __asm { BR              X9 }
}

uint64_t sub_1C0D8DCEC(uint64_t a1)
{
  uint64_t v1;
  void *v3;
  uint64_t v5;

  v3 = (void *)MEMORY[0x1C3BA79F4]();
  sub_1C0D8DD40(v1, a1, &v5);
  objc_autoreleasePoolPop(v3);
  return v5;
}

uint64_t sub_1C0D8DD40@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  id v15;
  id v16;
  id v17;
  uint64_t v18;
  void *v19;
  id v20;
  void *v21;
  void *v22;
  id v23;
  void *v24;
  id v25;
  uint64_t aBlock;
  uint64_t v28;
  uint64_t (*v29)();
  void *v30;
  uint64_t (*v31)(_QWORD);
  uint64_t v32;

  v6 = sub_1C07ACF80((uint64_t *)&unk_1ED762690);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&aBlock - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&aBlock - v10;
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = 0;
  v13 = *(void **)(a1 + 24);
  v14 = sub_1C106ADE0();
  sub_1C07B2D8C((uint64_t)v11, 1, 1, v14);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v8, a2, v14);
  sub_1C07B2D8C((uint64_t)v8, 0, 1, v14);
  v15 = objc_allocWithZone(MEMORY[0x1E0D026F0]);
  v16 = sub_1C07DC9F8((uint64_t)v11, (uint64_t)v8, 1, 1, 0);
  v17 = objc_msgSend(v13, sel_publisherWithOptions_, v16);

  v31 = (uint64_t (*)(_QWORD))sub_1C0D033C0;
  v32 = 0;
  v18 = MEMORY[0x1E0C809B0];
  aBlock = MEMORY[0x1E0C809B0];
  v28 = 1107296256;
  v29 = (uint64_t (*)())sub_1C0808508;
  v30 = &unk_1E7A32D60;
  v19 = _Block_copy(&aBlock);
  v20 = objc_msgSend(v17, sel_filterWithIsIncluded_, v19);
  _Block_release(v19);
  v31 = nullsub_1;
  v32 = 0;
  aBlock = v18;
  v28 = 1107296256;
  v29 = sub_1C07BF90C;
  v30 = &unk_1E7A32D88;
  v21 = _Block_copy(&aBlock);
  v31 = (uint64_t (*)(_QWORD))sub_1C0D8E910;
  v32 = v12;
  aBlock = v18;
  v28 = 1107296256;
  v29 = (uint64_t (*)())sub_1C0779530;
  v30 = &unk_1E7A32DB0;
  v22 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  v23 = objc_msgSend(v20, sel_sinkWithCompletion_receiveInput_, v21, v22);

  _Block_release(v22);
  _Block_release(v21);

  swift_beginAccess();
  v24 = *(void **)(v12 + 16);
  *a3 = v24;
  v25 = v24;
  return swift_release();
}

void sub_1C0D8E004(void *a1, uint64_t a2)
{
  id v3;
  id v4;
  void *v5;
  uint64_t v6;
  os_log_type_t v7;
  uint8_t *v8;
  NSObject *oslog;

  v3 = objc_msgSend(a1, sel_eventBody);
  if (v3)
  {
    v4 = v3;
    swift_beginAccess();
    v5 = *(void **)(a2 + 16);
    *(_QWORD *)(a2 + 16) = v4;

  }
  else
  {
    if (qword_1ED762B18 != -1)
      swift_once();
    v6 = sub_1C106F544();
    sub_1C079E000(v6, (uint64_t)qword_1ED762AF8);
    oslog = sub_1C106F538();
    v7 = sub_1C10703A8();
    if (os_log_type_enabled(oslog, v7))
    {
      v8 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v8 = 0;
      _os_log_impl(&dword_1C0771000, oslog, v7, "Exception: Unable to parse eventBody from latest event in UserFocusComputedMode stream", v8, 2u);
      MEMORY[0x1C3BA8270](v8, -1, -1);
    }

  }
}

uint64_t sub_1C0D8E120(uint64_t a1)
{
  uint64_t inited;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  uint64_t v7;
  unsigned int v8;
  unsigned __int8 v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  unsigned __int8 v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  unsigned __int8 v17;
  uint64_t v18;
  uint64_t v19;
  os_log_type_t v20;
  uint8_t *v21;

  sub_1C07ACF80(&qword_1ED755050);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C10795A0;
  strcpy((char *)(inited + 32), "update_reason");
  *(_WORD *)(inited + 46) = -4864;
  *(_QWORD *)(inited + 48) = objc_msgSend((id)objc_opt_self(), sel_featureValueWithInt64_, 0);
  strcpy((char *)(inited + 56), "update_source");
  *(_WORD *)(inited + 70) = -4864;
  *(_QWORD *)(inited + 72) = sub_1C0788444();
  strcpy((char *)(inited + 80), "semantic_type");
  *(_WORD *)(inited + 94) = -4864;
  *(_QWORD *)(inited + 96) = sub_1C0788444();
  *(_QWORD *)(inited + 104) = 0xD000000000000018;
  *(_QWORD *)(inited + 112) = 0x80000001C110B810;
  sub_1C07D97D4();
  sub_1C07F5FD8();
  *(_QWORD *)(inited + 120) = v3;
  v4 = sub_1C106F97C();
  v5 = sub_1C0D8DCEC(a1);
  if (v5)
  {
    v6 = v5;
    swift_bridgeObjectRelease();
    sub_1C0D8E88C(v6);
    v7 = swift_initStackObject();
    *(_OWORD *)(v7 + 16) = xmmword_1C10795A0;
    strcpy((char *)(v7 + 32), "update_reason");
    *(_WORD *)(v7 + 46) = -4864;
    v8 = sub_1C079448C(v7, sel_updateReason);
    sub_1C0D8D9C4(v8, "Unknown BMUserFocusModeComputedUpdateReason - %d");
    *(_QWORD *)(v7 + 48) = sub_1C0799210(v9);
    *(_QWORD *)(v7 + 56) = 0x735F657461647075;
    sub_1C07A4C6C();
    *(_QWORD *)(v7 + 64) = v10;
    v12 = sub_1C079448C(v11, sel_updateSource);
    sub_1C0D8D9C4(v12, "Unknown BMUserFocusModeComputedUpdateSource - %d");
    *(_QWORD *)(v7 + 72) = sub_1C0799210(v13);
    *(_QWORD *)(v7 + 80) = 0x6369746E616D6573;
    sub_1C07A4C6C();
    *(_QWORD *)(v7 + 88) = v14;
    v16 = sub_1C079448C(v15, sel_semanticType);
    sub_1C0D8D8D4(v16);
    *(_QWORD *)(v7 + 96) = sub_1C0799210(v17);
    *(_QWORD *)(v7 + 104) = 0xD000000000000018;
    *(_QWORD *)(v7 + 112) = 0x80000001C110B810;
    sub_1C07F5FD8();
    *(_QWORD *)(v7 + 120) = v18;
    v4 = sub_1C106F97C();
  }
  else
  {
    if (qword_1ED762B18 != -1)
      swift_once();
    v19 = sub_1C077585C();
    sub_1C079E000(v19, (uint64_t)qword_1ED762AF8);
    v6 = sub_1C077C0FC();
    v20 = sub_1C10703A8();
    if (os_log_type_enabled(v6, v20))
    {
      v21 = (uint8_t *)sub_1C0775854();
      *(_WORD *)v21 = 0;
      _os_log_impl(&dword_1C0771000, v6, v20, "Unable to fetch last UserFocusComputedModeEvent", v21, 2u);
      sub_1C0776778();
    }
  }

  return v4;
}

uint64_t sub_1C0D8E4C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;
  uint64_t result;

  swift_retain();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  result = sub_1C0D8D6DC(a2, v3, a1);
  *a3 = result;
  return result;
}

void sub_1C0D8E51C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;

  v0 = sub_1C106ADE0();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v4 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C106ADA4();
  sub_1C0D8E120((uint64_t)v3);
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  sub_1C077671C();
}

uint64_t sub_1C0D8E598(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  BOOL v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;

  sub_1C07A1588();
  v6 = sub_1C106ADE0();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C106ADA4();
  v10 = sub_1C0D8E120((uint64_t)v9);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  v11 = a1 == v3 && a2 == v2;
  if (v11 || (sub_1C079A240(), (sub_1C0797720() & 1) != 0))
  {
    v12 = sub_1C079A240();
LABEL_14:
    v17 = v13 & 0xFFFFFFFFFFFFLL | 0xED00000000000000;
    goto LABEL_15;
  }
  sub_1C07A4C6C();
  v15 = a1 == 0x6369746E616D6573 && a2 == v14;
  if (v15 || (sub_1C078FC28(), (sub_1C0797720() & 1) != 0))
  {
    v12 = sub_1C078FC28();
LABEL_13:
    v13 = v16 & 0xFFFF0000FFFFFFFFLL | 0x6500000000;
    goto LABEL_14;
  }
  sub_1C07A4C6C();
  v21 = a1 == 0x735F657461647075 && a2 == v20;
  if (v21 || (sub_1C07A4068(), (sub_1C0797720() & 1) != 0))
  {
    v12 = sub_1C07A4068();
    goto LABEL_13;
  }
  if (a1 != 0xD000000000000018 || a2 != 0x80000001C110B810)
  {
    sub_1C0791520();
    if ((sub_1C0797720() & 1) == 0)
    {
      v18 = 0;
      goto LABEL_16;
    }
  }
  v12 = sub_1C0791520();
LABEL_15:
  v18 = sub_1C089A990(v12, v17, v10);
LABEL_16:
  swift_bridgeObjectRelease();
  return v18;
}

uint64_t type metadata accessor for UserFocusComputedModeSignal()
{
  return objc_opt_self();
}

void sub_1C0D8E7C8()
{
  sub_1C0D8E51C();
}

uint64_t sub_1C0D8E7E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1C0D8E4C8(a1, a2, a3);
}

void sub_1C0D8E808()
{
  sub_1C0D8DB80();
}

uint64_t sub_1C0D8E81C()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_1C0D8E82C(uint64_t a1)
{
  unint64_t result;

  result = sub_1C0D8E850();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1C0D8E850()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF649680;
  if (!qword_1EF649680)
  {
    v1 = type metadata accessor for UserFocusComputedModeSignal();
    result = MEMORY[0x1C3BA8174](&unk_1C10BBC3C, v1);
    atomic_store(result, &qword_1EF649680);
  }
  return result;
}

uint64_t sub_1C0D8E88C(void *a1)
{
  id v1;
  void *v2;
  uint64_t v3;

  v1 = objc_msgSend(a1, sel_semanticModeIdentifier);
  if (!v1)
    return 0;
  v2 = v1;
  v3 = sub_1C106FB14();

  return v3;
}

uint64_t sub_1C0D8E8EC()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_1C0D8E910(void *a1)
{
  uint64_t v1;

  sub_1C0D8E004(a1, v1);
}

uint64_t sub_1C0D8E928@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;

  v5 = sub_1C07ACF80(&qword_1ED762CE0);
  MEMORY[0x1E0C80A78](v5);
  sub_1C0778564();
  v8 = v7 - v6;
  v9 = sub_1C106AE28();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  sub_1C0778564();
  v13 = v12 - v11;
  if (!*(_QWORD *)(a1 + 16))
  {
    sub_1C0779800(v8, 1);
    goto LABEL_6;
  }
  (*(void (**)(uint64_t, unint64_t, uint64_t))(v10 + 16))(v8, a1 + ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80)), v9);
  sub_1C0779800(v8, 0);
  if (sub_1C07B2D80(v8, 1, v9) == 1)
  {
LABEL_6:
    sub_1C08770C4(v8);
    v15 = 1;
    goto LABEL_7;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 32))(v13, v8, v9);
  sub_1C0D8EA8C(a2);
  if (v2)
    return sub_1C0799220();
  sub_1C0799220();
  v15 = 0;
LABEL_7:
  v16 = type metadata accessor for FutureLifeEventStructs.Place(0);
  return sub_1C07B2D8C(a2, v15, 1, v16);
}

uint64_t sub_1C0D8EA8C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v27 = a1;
  v26 = type metadata accessor for FutureLifeEventStructs.Place(0);
  MEMORY[0x1E0C80A78](v26);
  sub_1C0778564();
  v3 = v2 - v1;
  v4 = (int *)type metadata accessor for FutureLifeEventStructs.IdentifierRelationshipType(0);
  v5 = *((_QWORD *)v4 - 1);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v26 - v9;
  v11 = sub_1C106E41C();
  sub_1C07B2D8C((uint64_t)v10, 1, 1, v11);
  sub_1C106D030();
  v12 = (uint64_t)&v10[v4[6]];
  if (qword_1ED762E80 != -1)
    swift_once();
  v13 = type metadata accessor for Source();
  v14 = sub_1C079E000(v13, (uint64_t)&unk_1ED762268);
  sub_1C0D8ED64(v14, v12, (uint64_t (*)(_QWORD))type metadata accessor for Source);
  sub_1C106DE70();
  v15 = (uint64_t *)&v10[v4[8]];
  sub_1C106DF00();
  v16 = v4[10];
  *v15 = sub_1C106ADF8();
  v15[1] = v17;
  *(_OWORD *)&v10[v16] = xmmword_1C10BA220;
  sub_1C0D8ED64((uint64_t)v10, (uint64_t)v7, type metadata accessor for FutureLifeEventStructs.IdentifierRelationshipType);
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C07EC2D8();
  v19 = v18;
  v20 = *(_QWORD *)(v18 + 16);
  if (v20 >= *(_QWORD *)(v18 + 24) >> 1)
  {
    sub_1C07EC2D8();
    v19 = v25;
  }
  *(_QWORD *)(v19 + 16) = v20 + 1;
  sub_1C0D8EDD0((uint64_t)v7, v19+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(_QWORD *)(v5 + 72) * v20, type metadata accessor for FutureLifeEventStructs.IdentifierRelationshipType);
  if (qword_1ED749C50 != -1)
    swift_once();
  v21 = type metadata accessor for SourceIdPrefix();
  sub_1C079E000(v21, (uint64_t)&unk_1ED78C9C0);
  String.base64EncodedSHA(withPrefix:)();
  swift_bridgeObjectRelease();
  v22 = v28;
  sub_1C0F8D7B4();
  if (v22)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    v23 = *(int *)(v26 + 32);
    swift_bridgeObjectRelease();
    *(_QWORD *)(v3 + v23) = v19;
    sub_1C0F911DC();
    sub_1C0D8EDD0(v3, v27, type metadata accessor for FutureLifeEventStructs.Place);
  }
  return sub_1C0D8ED94((uint64_t)v10);
}

uint64_t sub_1C0D8ED64(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;
  uint64_t v4;

  v4 = sub_1C0779690(a1, a2, a3);
  sub_1C0775828(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16));
  return v3;
}

uint64_t sub_1C0D8ED94(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for FutureLifeEventStructs.IdentifierRelationshipType(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1C0D8EDD0(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;
  uint64_t v4;

  v4 = sub_1C0779690(a1, a2, a3);
  sub_1C0775828(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32));
  return v3;
}

void sub_1C0D8EE00(unint64_t a1, unint64_t a2)
{
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  BOOL v11;
  _BOOL4 v12;
  unint64_t v13;
  unsigned int v14;
  unsigned int v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  int v20;
  int v21;
  unsigned int v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v3 = a1;
  sub_1C0D943D0(a1, a2);
  if (!v4)
    return;
  v5 = v4;
  v29 = MEMORY[0x1E0DEE9D8];
  sub_1C09D3684();
  if (v5 < 0)
    goto LABEL_57;
  v6 = (v3 >> 59) & 1;
  if ((a2 & 0x1000000000000000) == 0)
    LOBYTE(v6) = 1;
  v7 = 4 << v6;
  if ((a2 & 0x2000000000000000) != 0)
    v8 = HIBYTE(a2) & 0xF;
  else
    v8 = v3 & 0xFFFFFFFFFFFFLL;
  v9 = 15;
  v25 = 4 << v6;
  v26 = v3;
  v24 = v8;
  while (1)
  {
    v10 = v9 & 0xC;
    v11 = (v9 & 1) == 0 || v10 == v7;
    v12 = v11;
    if (v11)
      break;
    if (v9 >> 16 >= v8)
      goto LABEL_54;
LABEL_23:
    if ((a2 & 0x1000000000000000) != 0)
    {
      v14 = sub_1C1070768();
    }
    else
    {
      if ((a2 & 0x2000000000000000) != 0)
      {
        v27 = v3;
        v28 = a2 & 0xFFFFFFFFFFFFFFLL;
      }
      else if ((v3 & 0x1000000000000000) == 0)
      {
        sub_1C10707F8();
      }
      v14 = sub_1C1070804();
    }
    v15 = v14;
    v16 = v29;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_1C09D3684();
      v16 = v29;
    }
    v17 = *(_QWORD *)(v16 + 16);
    if (v17 >= *(_QWORD *)(v16 + 24) >> 1)
    {
      sub_1C09D3684();
      v16 = v29;
    }
    *(_QWORD *)(v16 + 16) = v17 + 1;
    *(float *)(v16 + 4 * v17 + 32) = (float)v15;
    if (v12)
    {
      v7 = v25;
      v3 = v26;
      v8 = v24;
      if (v10 == v25)
      {
        sub_1C0D93FA8(v9, v26, a2);
        v9 = v23;
      }
      if (v24 <= v9 >> 16)
        goto LABEL_55;
      if ((v9 & 1) == 0)
        v9 = v9 & 0xC | sub_1C0D942D8(v9, v26, a2) & 0xFFFFFFFFFFFFFFF3 | 1;
    }
    else
    {
      v8 = v24;
      v7 = v25;
      v3 = v26;
      if (v24 <= v9 >> 16)
        goto LABEL_56;
    }
    if ((a2 & 0x1000000000000000) != 0)
    {
      v9 = sub_1C106FBC8();
    }
    else
    {
      v18 = v9 >> 16;
      if ((a2 & 0x2000000000000000) != 0)
      {
        v27 = v3;
        v28 = a2 & 0xFFFFFFFFFFFFFFLL;
        v20 = *((unsigned __int8 *)&v27 + v18);
      }
      else
      {
        v19 = (a2 & 0xFFFFFFFFFFFFFFFLL) + 32;
        if ((v3 & 0x1000000000000000) == 0)
          v19 = sub_1C10707F8();
        v20 = *(unsigned __int8 *)(v19 + v18);
      }
      v21 = (char)v20;
      v22 = __clz(v20 ^ 0xFF) - 24;
      if (v21 >= 0)
        LOBYTE(v22) = 1;
      v9 = ((v18 + v22) << 16) | 5;
    }
    if (!--v5)
      return;
  }
  v13 = v9;
  if (v10 == v7)
    sub_1C0D93FA8(v9, v3, a2);
  if (v13 >> 16 < v8)
  {
    if ((v13 & 1) == 0)
      sub_1C0D942D8(v13, v3, a2);
    goto LABEL_23;
  }
  __break(1u);
LABEL_54:
  __break(1u);
LABEL_55:
  __break(1u);
LABEL_56:
  __break(1u);
LABEL_57:
  __break(1u);
}

_QWORD *sub_1C0D8F110(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  __int16 v5;
  char v6;
  char v7;
  char v8;
  char v9;
  uint64_t v10;

  v10 = *MEMORY[0x1E0C80C00];
  v4 = a1;
  v5 = a2;
  v6 = BYTE2(a2);
  v7 = BYTE3(a2);
  v8 = BYTE4(a2);
  v9 = BYTE5(a2);
  return sub_1C08A3048((uint64_t)&v4, a3 / 4);
}

uint64_t sub_1C0D8F1DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  unint64_t v25;
  char v26;
  unint64_t v27;
  char v28;
  unint64_t v29;
  char v30;
  unint64_t v31;
  char v32;
  _QWORD v34[3];
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _BYTE __src[72];
  _QWORD __dst[10];

  v6 = sub_1C106C55C();
  v38 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  sub_1C077AF80();
  v9 = v7 - v8;
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)v34 - v11;
  v13 = type metadata accessor for ViewDatabaseArtifact.Property();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  sub_1C077AE40();
  v16 = v15;
  sub_1C1070E58();
  v17 = (*(uint64_t (**)(uint64_t, uint64_t))(a3 + 32))(a2, a3);
  v18 = *(_QWORD *)(v17 + 16);
  if (v18)
  {
    v37 = v12;
    v19 = v16;
    v36 = v16 + *(int *)(v13 + 20);
    v20 = (*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
    v34[1] = v17;
    v21 = v17 + v20;
    v35 = *(_QWORD *)(v14 + 72);
    v34[2] = MEMORY[0x1E0DEE9B8] + 8;
    v39 = v19;
    while (1)
    {
      sub_1C0C81B94(v21, v19, (uint64_t (*)(_QWORD))type metadata accessor for ViewDatabaseArtifact.Property);
      v40 = *(_QWORD *)v19;
      v22 = (uint64_t)v37;
      (*(void (**)(char *, uint64_t, uint64_t))(v38 + 16))(v37, v36, v6);
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      sub_1C07B1F90(v19, (uint64_t (*)(_QWORD))type metadata accessor for ViewDatabaseArtifact.Property);
      sub_1C106C514();
      sub_1C0794BAC((unint64_t *)&qword_1ED743E00, (uint64_t (*)(uint64_t))MEMORY[0x1E0D24728], MEMORY[0x1E0D24738]);
      v19 = sub_1C0788454();
      sub_1C07B757C(v9);
      if ((v19 & 1) != 0)
        break;
      sub_1C106C538();
      v19 = sub_1C0788454();
      sub_1C07B757C(v9);
      if ((v19 & 1) != 0)
      {
        sub_1C07B757C(v22);
        if (*(_QWORD *)(a1 + 16) && (v25 = sub_1C0791694(), (v26 & 1) != 0))
          sub_1C07A2BB0(v25);
        else
          sub_1C0776B50();
        sub_1C0792050();
        if (!__dst[3])
          goto LABEL_38;
        sub_1C077B3D8();
        if ((sub_1C077C458() & 1) != 0)
          goto LABEL_37;
      }
      else
      {
        sub_1C106C52C();
        v19 = sub_1C0788454();
        sub_1C07B757C(v9);
        if ((v19 & 1) != 0)
        {
          sub_1C07B757C(v22);
          if (*(_QWORD *)(a1 + 16) && (v27 = sub_1C0791694(), (v28 & 1) != 0))
            sub_1C07A2BB0(v27);
          else
            sub_1C0776B50();
          sub_1C0792050();
          if (!__dst[3])
            goto LABEL_38;
          sub_1C077B3D8();
          if ((sub_1C077C458() & 1) != 0)
            goto LABEL_44;
        }
        else
        {
          sub_1C106C520();
          v19 = sub_1C0788454();
          sub_1C07B757C(v9);
          sub_1C07B757C(v22);
          if ((v19 & 1) == 0)
          {
            if (*(_QWORD *)(a1 + 16) && (v31 = sub_1C0791694(), (v32 & 1) != 0))
              sub_1C07A2BB0(v31);
            else
              sub_1C0776B50();
            swift_bridgeObjectRelease();
            if (__dst[3])
            {
              sub_1C077B3D8();
              if ((sub_1C077C458() & 1) != 0)
              {
                sub_1C1070E10();
                sub_1C07767C4();
                sub_1C106FC28();
                sub_1C07758A4();
              }
            }
            else
            {
              sub_1C0784B6C((uint64_t)__dst, &qword_1ED760400);
LABEL_44:
              sub_1C1070E10();
            }
LABEL_45:
            v19 = v39;
            goto LABEL_46;
          }
          if (*(_QWORD *)(a1 + 16) && (v29 = sub_1C0791694(), (v30 & 1) != 0))
            sub_1C07A2BB0(v29);
          else
            sub_1C0776B50();
          sub_1C0792050();
          if (!__dst[3])
            goto LABEL_38;
          sub_1C077B3D8();
          if ((sub_1C077C458() & 1) != 0)
          {
LABEL_37:
            sub_1C1070E34();
            goto LABEL_45;
          }
        }
      }
LABEL_46:
      v21 += v35;
      if (!--v18)
        goto LABEL_47;
    }
    sub_1C07B757C(v22);
    if (*(_QWORD *)(a1 + 16) && (v23 = sub_1C0791694(), (v24 & 1) != 0))
      sub_1C07A2BB0(v23);
    else
      sub_1C0776B50();
    sub_1C0792050();
    if (__dst[3])
    {
      if ((sub_1C077C458() & 1) != 0)
      {
        sub_1C106FC28();
        v19 = v39;
        swift_bridgeObjectRelease();
      }
      goto LABEL_46;
    }
LABEL_38:
    sub_1C0784B6C((uint64_t)__dst, &qword_1ED760400);
    goto LABEL_46;
  }
LABEL_47:
  swift_bridgeObjectRelease();
  memcpy(__dst, __src, 0x48uLL);
  return sub_1C1070E40();
}

uint64_t sub_1C0D8F698()
{
  void *v0;
  void *v1;
  id v2;
  id v3;
  void *v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  _DWORD *v8;
  _QWORD *v9;
  void *v10;
  id v12[2];

  v12[1] = *(id *)MEMORY[0x1E0C80C00];
  v0 = (void *)objc_opt_self();
  v1 = (void *)sub_1C106F934();
  v12[0] = 0;
  v2 = objc_msgSend(v0, sel_dataWithJSONObject_options_error_, v1, 0, v12);

  v3 = v12[0];
  if (v2)
  {
    sub_1C106AC18();

  }
  else
  {
    v4 = v3;
    sub_1C106AA14();

    swift_willThrow();
    if (qword_1ED762AF0 != -1)
      swift_once();
    v5 = sub_1C077585C();
    v6 = sub_1C079E000(v5, (uint64_t)qword_1ED78D9E0);
    sub_1C077C818();
    sub_1C077C818();
    sub_1C106F538();
    v7 = sub_1C077C13C();
    if (os_log_type_enabled(v6, v7))
    {
      v8 = (_DWORD *)sub_1C0775854();
      v9 = (_QWORD *)sub_1C0775854();
      *v8 = 138412290;
      sub_1C077C818();
      v10 = (void *)_swift_stdlib_bridgeErrorToNSError();
      v12[0] = v10;
      sub_1C10705AC();
      *v9 = v10;
      sub_1C077C220();
      sub_1C077C220();
      sub_1C07759F4(&dword_1C0771000, v6, v7, "Row data cannot be encoded, using nil payload: %@");
      sub_1C07ACF80(&qword_1ED7614A0);
      sub_1C0778610();
      sub_1C0776778();
    }
    sub_1C077C220();
    sub_1C077C220();
    sub_1C077C220();

  }
  return sub_1C077CEF4();
}

uint64_t sub_1C0D8F8D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4[22] = a3;
  v4[23] = v3;
  v4[20] = a1;
  v4[21] = a2;
  v5 = sub_1C106C8E0();
  v4[24] = v5;
  v4[25] = *(_QWORD *)(v5 - 8);
  v4[26] = sub_1C0775870();
  v4[27] = sub_1C0775870();
  v6 = sub_1C106C8C8();
  v4[28] = v6;
  v4[29] = *(_QWORD *)(v6 - 8);
  v4[30] = sub_1C0775870();
  v4[31] = sub_1C0775870();
  v4[32] = sub_1C0775870();
  v4[33] = sub_1C0775870();
  v7 = sub_1C106C8BC();
  v4[34] = v7;
  v4[35] = *(_QWORD *)(v7 - 8);
  v4[36] = sub_1C0779644();
  v8 = sub_1C07ABB10();
  v4[37] = v8;
  v4[38] = *(_QWORD *)(v8 - 8);
  v4[39] = sub_1C0775870();
  v4[40] = sub_1C0775870();
  v4[41] = sub_1C0775870();
  sub_1C07ACF80(&qword_1ED7443F8);
  v4[42] = sub_1C0779644();
  v9 = type metadata accessor for ViewDatabaseArtifact.Property();
  v4[43] = v9;
  v4[44] = *(_QWORD *)(v9 - 8);
  v4[45] = sub_1C0779644();
  sub_1C077862C();
  return sub_1C077AEC4();
}

uint64_t sub_1C0D8F9FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  void (*v4)(uint64_t);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  unint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t (*v23)(uint64_t);
  _QWORD *v24;
  uint64_t v25;
  uint64_t (*v26)(uint64_t);

  v1 = *(_QWORD *)(v0 + 160);
  v2 = *(_QWORD *)(v1 + 16);
  *(_QWORD *)(v0 + 368) = v2;
  if (!v2)
  {
    swift_task_dealloc();
    sub_1C07767BC();
    sub_1C07796F8();
    sub_1C07758BC();
    sub_1C0779D18();
    sub_1C077C104();
    sub_1C07767D4();
    sub_1C0778638();
    sub_1C0786388();
    sub_1C0779D20();
    swift_task_dealloc();
    swift_task_dealloc();
    return sub_1C07B4464(MEMORY[0x1E0DEE9D8], *(uint64_t (**)(void))(v0 + 8));
  }
  v3 = *(_QWORD **)(v0 + 176);
  v4 = (void (*)(uint64_t))v3[4];
  *(_QWORD *)(v0 + 376) = v4;
  *(_QWORD *)(v0 + 384) = v3[5];
  v5 = v3[7];
  *(_DWORD *)(v0 + 472) = *MEMORY[0x1E0DC6818];
  *(_DWORD *)(v0 + 476) = *MEMORY[0x1E0DC67F0];
  *(_DWORD *)(v0 + 480) = *MEMORY[0x1E0DC6810];
  *(_DWORD *)(v0 + 484) = *MEMORY[0x1E0DC6808];
  v6 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v0 + 400) = 0;
  *(_QWORD *)(v0 + 408) = v6;
  *(_QWORD *)(v0 + 392) = v5;
  v7 = *(_QWORD *)(v0 + 184);
  v8 = *(_QWORD *)(v1 + 32);
  *(_QWORD *)(v0 + 416) = v8;
  sub_1C07767B4();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  v9 = sub_1C07A3304();
  v4(v9);
  sub_1C0789BFC();
  if (v7 != 1)
    goto LABEL_20;
  if (*(_QWORD *)(sub_1C07BFFD4() + 16))
  {
    v10 = sub_1C07B01A0();
    sub_1C0C81B94(v10, v11, (uint64_t (*)(_QWORD))type metadata accessor for ViewDatabaseArtifact.Property);
    v12 = 0;
  }
  else
  {
    v12 = 1;
  }
  v15 = *(_QWORD *)(v0 + 336);
  v14 = *(_QWORD *)(v0 + 344);
  sub_1C07B2D8C(v15, v12, 1, v14);
  sub_1C077960C();
  if (sub_1C07B2D80(v15, 1, v14) == 1)
  {
    v16 = *(_QWORD *)(v0 + 336);
    v17 = (uint64_t *)&unk_1ED7443F8;
LABEL_19:
    sub_1C0784B6C(v16, v17);
    goto LABEL_20;
  }
  sub_1C0C828A0(*(_QWORD *)(v0 + 336), *(_QWORD *)(v0 + 360), (uint64_t (*)(_QWORD))type metadata accessor for ViewDatabaseArtifact.Property);
  if (*(_QWORD *)(v8 + 16))
  {
    sub_1C077AEBC();
    v18 = sub_1C078BE54();
    if ((v19 & 1) != 0)
      sub_1C07AD3BC(v18, *(_QWORD *)(v8 + 56));
    else
      sub_1C07ABE7C();
    sub_1C077B5B4();
  }
  else
  {
    sub_1C07ABE7C();
  }
  sub_1C07B1F90(*(_QWORD *)(v0 + 360), (uint64_t (*)(_QWORD))type metadata accessor for ViewDatabaseArtifact.Property);
  if (!*(_QWORD *)(v0 + 72))
  {
    v17 = &qword_1ED760400;
    v16 = v0 + 48;
    goto LABEL_19;
  }
  if ((sub_1C077C458() & 1) == 0)
  {
LABEL_20:
    v20 = sub_1C07AA4F8();
    goto LABEL_21;
  }
  v20 = *(_QWORD *)(v0 + 152);
LABEL_21:
  if ((sub_1C07AD810(v20) & 1) != 0)
  {
    v21 = sub_1C0D8F698();
  }
  else
  {
    v21 = 0;
    v22 = 0xF000000000000000;
  }
  sub_1C07B6040(v21, v22);
  v26 = v23;
  v24 = (_QWORD *)swift_task_alloc();
  v25 = sub_1C07A9A8C(v24, (uint64_t)sub_1C0D8FCC0);
  return v26(v25);
}

uint64_t sub_1C0D8FCC0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_1C077E88C();
  sub_1C0D946E0();
  *(_QWORD *)(v0 + 456) = v2;
  *(_QWORD *)(v0 + 464) = v1;
  sub_1C078DEDC();
  if (v1)
  {
    swift_bridgeObjectRelease();
    sub_1C07767AC();
    sub_1C077960C();
  }
  sub_1C077862C();
  return sub_1C0789D28();
}

uint64_t sub_1C0D8FD20()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void (*v43)(uint64_t, _QWORD *, uint64_t);
  uint64_t v44;
  char v45;
  BOOL v46;
  uint64_t v47;
  char v48;
  _QWORD *v49;
  uint64_t v50;
  char v51;
  _QWORD *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  void (*v58)(_QWORD);
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  void (*v65)(uint64_t, uint64_t, uint64_t);
  uint64_t v66;
  char v67;
  uint64_t v68;
  char v69;
  uint64_t v70;
  char v71;
  _QWORD *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  void (*v82)(uint64_t, uint64_t);
  _QWORD *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  unint64_t v90;
  uint64_t v91;
  uint64_t v92;
  void (*v94)(uint64_t);
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  unint64_t v107;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t *v117;
  unint64_t v118;
  char v119;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  _QWORD *v124;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  __int128 v130;
  uint64_t v131;
  void (*v132)(uint64_t);
  void (*v133)(_QWORD, _QWORD, _QWORD);
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  _QWORD *v138;
  uint64_t v139;
  void (*v140)(_QWORD *, uint64_t, uint64_t);
  uint64_t (*v141)(uint64_t, uint64_t, uint64_t);
  uint64_t v142;
  unsigned int v143;
  uint64_t v144;

  v1 = *(_QWORD *)(v0 + 456);
  if (!v1)
  {
    sub_1C07B33B8(*(_QWORD *)(v0 + 432), *(_QWORD *)(v0 + 440));
    sub_1C077960C();
LABEL_47:
    v91 = *(_QWORD *)(v0 + 408);
    goto LABEL_48;
  }
  v2 = *(_QWORD *)(v0 + 416);
  v3 = (*(uint64_t (**)(_QWORD))(*(_QWORD *)(v0 + 176) + 8))(*(_QWORD *)(v0 + 168));
  v142 = v2;
  if (*(_QWORD *)(v2 + 16) && (v5 = sub_1C077D774(v3, v4), (v6 & 1) != 0))
    sub_1C07AD3BC(v5, *(_QWORD *)(*(_QWORD *)(v0 + 416) + 56));
  else
    sub_1C07ABE7C();
  sub_1C077B5B4();
  if (!*(_QWORD *)(v0 + 40))
  {
    swift_bridgeObjectRelease();
    sub_1C0775834();
    v89 = sub_1C077CEF4();
    sub_1C07B33B8(v89, v90);
    sub_1C0784B6C(v0 + 16, &qword_1ED760400);
    goto LABEL_47;
  }
  if ((sub_1C077C458() & 1) == 0)
  {
    swift_bridgeObjectRelease();
    sub_1C0775834();
    sub_1C0791548();
    goto LABEL_47;
  }
  v131 = v1;
  v143 = *(_DWORD *)(v0 + 472);
  v8 = *(_QWORD *)(v0 + 224);
  v7 = *(_QWORD *)(v0 + 232);
  v9 = *(_QWORD *)(v0 + 176);
  v10 = *(_QWORD *)(v0 + 168);
  v11 = *(_QWORD *)(v0 + 144);
  sub_1C07ACF80(&qword_1ED744918);
  v12 = sub_1C07ACF80(&qword_1ED743E28);
  v13 = *(unsigned __int8 *)(*(_QWORD *)(v12 - 8) + 80);
  v14 = (v13 + 32) & ~v13;
  v15 = swift_allocObject();
  v130 = xmmword_1C1079220;
  *(_OWORD *)(v15 + 16) = xmmword_1C1079220;
  v16 = (_QWORD *)(v15 + v14 + *(int *)(v12 + 48));
  (*(void (**)(uint64_t, uint64_t))(v9 + 16))(v10, v9);
  *v16 = v11;
  v141 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 104);
  v141((uint64_t)v16, v143, v8);
  sub_1C0794BAC(&qword_1ED743E20, (uint64_t (*)(uint64_t))MEMORY[0x1E0DC6798], MEMORY[0x1E0DC67A8]);
  sub_1C106F97C();
  v17 = (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 48))(v10, v9);
  if (v17)
    v18 = v17;
  else
    v18 = MEMORY[0x1E0DEE9D8];
  v19 = *(_QWORD *)(v18 + 16);
  v129 = v18;
  if (!v19)
  {
LABEL_53:
    v102 = *(_QWORD *)(v0 + 208);
    v101 = *(_QWORD *)(v0 + 216);
    v104 = *(_QWORD *)(v0 + 192);
    v103 = *(_QWORD *)(v0 + 200);
    swift_bridgeObjectRelease();
    sub_1C0775834();
    sub_1C07ACF80(&qword_1ED744978);
    v105 = sub_1C0778598();
    *(_OWORD *)(v105 + 16) = v130;
    *(_QWORD *)(v105 + 32) = v131;
    v106 = sub_1C077CEF4();
    sub_1C07B3594(v106, v107);
    sub_1C106C8D4();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v103 + 16))(v102, v101, v104);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v91 = *(_QWORD *)(v0 + 408);
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
    {
LABEL_54:
      v109 = *(_QWORD *)(v91 + 16);
      if (v109 >= *(_QWORD *)(v91 + 24) >> 1)
      {
        sub_1C0D946F0();
        v91 = v127;
      }
      v110 = *(_QWORD *)(v0 + 208);
      v111 = *(_QWORD *)(v0 + 216);
      v112 = *(_QWORD *)(v0 + 192);
      v113 = *(_QWORD *)(v0 + 200);
      *(_QWORD *)(v91 + 16) = v109 + 1;
      (*(void (**)(unint64_t, uint64_t, uint64_t))(v113 + 32))(v91+ ((*(unsigned __int8 *)(v113 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v113 + 80))+ *(_QWORD *)(v113 + 72) * v109, v110, v112);
      sub_1C0791548();
      (*(void (**)(uint64_t, uint64_t))(v113 + 8))(v111, v112);
LABEL_48:
      v92 = *(_QWORD *)(v0 + 400) + 1;
      if (v92 == *(_QWORD *)(v0 + 368))
      {
        swift_bridgeObjectRelease();
        swift_task_dealloc();
        sub_1C07796F8();
        sub_1C07758BC();
        sub_1C0779D18();
        sub_1C077C104();
        sub_1C07767D4();
        sub_1C0778638();
        sub_1C0786388();
        sub_1C0779D20();
        sub_1C07767BC();
        swift_task_dealloc();
        swift_task_dealloc();
        sub_1C077E700();
        __asm { BR              X1 }
      }
      *(_QWORD *)(v0 + 400) = v92;
      *(_QWORD *)(v0 + 408) = v91;
      v94 = *(void (**)(uint64_t))(v0 + 376);
      v95 = *(_QWORD *)(v0 + 184);
      v96 = *(_QWORD *)(*(_QWORD *)(v0 + 160) + 8 * v92 + 32);
      *(_QWORD *)(v0 + 416) = v96;
      sub_1C07767B4();
      v97 = sub_1C07A3304();
      v94(v97);
      sub_1C0789BFC();
      if (v95 != 1)
        goto LABEL_72;
      if (*(_QWORD *)(sub_1C07BFFD4() + 16))
      {
        v98 = sub_1C07B01A0();
        sub_1C0C81B94(v98, v99, (uint64_t (*)(_QWORD))type metadata accessor for ViewDatabaseArtifact.Property);
        v100 = 0;
      }
      else
      {
        v100 = 1;
      }
      v115 = *(_QWORD *)(v0 + 336);
      v114 = *(_QWORD *)(v0 + 344);
      sub_1C07B2D8C(v115, v100, 1, v114);
      sub_1C077960C();
      if (sub_1C07B2D80(v115, 1, v114) == 1)
      {
        v116 = *(_QWORD *)(v0 + 336);
        v117 = (uint64_t *)&unk_1ED7443F8;
      }
      else
      {
        sub_1C0C828A0(*(_QWORD *)(v0 + 336), *(_QWORD *)(v0 + 360), (uint64_t (*)(_QWORD))type metadata accessor for ViewDatabaseArtifact.Property);
        if (*(_QWORD *)(v96 + 16))
        {
          sub_1C077AEBC();
          v118 = sub_1C078BE54();
          if ((v119 & 1) != 0)
            sub_1C07AD3BC(v118, *(_QWORD *)(v96 + 56));
          else
            sub_1C07ABE7C();
          sub_1C077B5B4();
        }
        else
        {
          sub_1C07ABE7C();
        }
        sub_1C07B1F90(*(_QWORD *)(v0 + 360), (uint64_t (*)(_QWORD))type metadata accessor for ViewDatabaseArtifact.Property);
        if (*(_QWORD *)(v0 + 72))
        {
          if ((sub_1C077C458() & 1) != 0)
          {
            v121 = *(_QWORD *)(v0 + 152);
            goto LABEL_73;
          }
LABEL_72:
          v121 = sub_1C07AA4F8();
LABEL_73:
          if ((sub_1C07AD810(v121) & 1) != 0)
          {
            v122 = sub_1C0D8F698();
          }
          else
          {
            v122 = 0;
            v123 = 0xF000000000000000;
          }
          sub_1C07B6040(v122, v123);
          v124 = (_QWORD *)swift_task_alloc();
          sub_1C07A9A8C(v124, (uint64_t)sub_1C0D8FCC0);
          sub_1C077E700();
          __asm { BR              X3 }
        }
        v117 = &qword_1ED760400;
        v116 = v0 + 48;
      }
      sub_1C0784B6C(v116, v117);
      goto LABEL_72;
    }
LABEL_81:
    sub_1C0D946F0();
    v91 = v126;
    goto LABEL_54;
  }
  v20 = v0 + 80;
  v137 = v0 + 112;
  v138 = (_QWORD *)(v0 + 128);
  v134 = v0 + 136;
  v135 = *(_QWORD *)(v0 + 416);
  v140 = *(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v0 + 280) + 104);
  v21 = (uint64_t *)(v18 + 40);
  v136 = MEMORY[0x1E0DEE9B8] + 8;
  v139 = v0 + 80;
  while (1)
  {
    v144 = v19;
    v22 = *(unsigned int *)(v0 + 476);
    v23 = *(_QWORD **)(v0 + 288);
    v24 = *(_QWORD *)(v0 + 272);
    v25 = *(v21 - 1);
    v26 = *v21;
    *v23 = 0;
    v23[1] = 0;
    v140(v23, v22, v24);
    swift_bridgeObjectRetain_n();
    sub_1C106C898();
    if (*(_QWORD *)(v142 + 16) && (v27 = sub_1C077D774(v25, v26), (v28 & 1) != 0))
      sub_1C07AD3BC(v27, *(_QWORD *)(v135 + 56));
    else
      sub_1C07ABE7C();
    swift_bridgeObjectRelease();
    if (!*(_QWORD *)(v0 + 104))
    {
      sub_1C0784B6C(v20, &qword_1ED760400);
      goto LABEL_30;
    }
    if ((sub_1C077C458() & 1) == 0)
      goto LABEL_30;
    v30 = *(_QWORD *)(v0 + 112);
    v29 = *(_QWORD *)(v0 + 120);
    v31 = HIBYTE(v29) & 0xF;
    if ((v29 & 0x2000000000000000) == 0)
      v31 = v30 & 0xFFFFFFFFFFFFLL;
    if (!v31)
      break;
    v32 = *(unsigned int *)(v0 + 480);
    v34 = *(_QWORD *)(v0 + 256);
    v33 = *(_QWORD **)(v0 + 264);
    v36 = *(_QWORD *)(v0 + 224);
    v35 = *(_QWORD *)(v0 + 232);
    v133 = *(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 304) + 16);
    v133(*(_QWORD *)(v0 + 320), *(_QWORD *)(v0 + 328), *(_QWORD *)(v0 + 296));
    *v33 = v30;
    v33[1] = v29;
    sub_1C077C980((uint64_t)v33, v32, v37, v38, v39, v40, v41, v42, v128, v129, v130, *((uint64_t *)&v130 + 1), v131, (uint64_t)v133, v134, v135, v136, v137, (uint64_t)v138,
      v139,
      (uint64_t)v140,
      v141);
    v43 = *(void (**)(uint64_t, _QWORD *, uint64_t))(v35 + 32);
    v43(v34, v33, v36);
    sub_1C078B8A8();
    *(_QWORD *)(v0 + 136) = v29;
    sub_1C07DD0F0();
    sub_1C0788BBC();
    if (v46)
      goto LABEL_79;
    v47 = v44;
    v48 = v45;
    sub_1C07ACF80(&qword_1EF649F50);
    v49 = (_QWORD *)v134;
    if ((sub_1C107090C() & 1) != 0)
    {
      sub_1C07DD0F0();
      if ((v48 & 1) != (v51 & 1))
        goto LABEL_64;
      v47 = v50;
      v49 = (_QWORD *)v134;
    }
    v52 = (_QWORD *)*v49;
    if ((v48 & 1) != 0)
    {
      sub_1C0782ED0(*(_QWORD *)(v0 + 232));
    }
    else
    {
      v83 = *(_QWORD **)(v0 + 256);
      v84 = *(_QWORD *)(v0 + 224);
      v85 = *(_QWORD *)(v0 + 232);
      sub_1C07BBFDC();
      v132(v52[6] + *(_QWORD *)(v86 + 72) * v47);
      v43(v52[7] + *(_QWORD *)(v85 + 72) * v47, v83, v84);
      v87 = v52[2];
      v46 = __OFADD__(v87, 1);
      v88 = v87 + 1;
      if (v46)
        goto LABEL_80;
      v52[2] = v88;
    }
    v79 = *(_QWORD *)(v0 + 320);
    v81 = *(_QWORD *)(v0 + 296);
    v80 = *(_QWORD *)(v0 + 304);
LABEL_39:
    swift_bridgeObjectRelease();
    v82 = *(void (**)(uint64_t, uint64_t))(v80 + 8);
    v82(v79, v81);
    v82(*(_QWORD *)(v0 + 328), *(_QWORD *)(v0 + 296));
    v21 += 2;
    v19 = v144 - 1;
    v20 = v139;
    if (v144 == 1)
      goto LABEL_53;
  }
  sub_1C077960C();
LABEL_30:
  v53 = *(unsigned int *)(v0 + 484);
  v55 = *(_QWORD *)(v0 + 240);
  v54 = *(_QWORD *)(v0 + 248);
  v57 = *(_QWORD *)(v0 + 224);
  v56 = *(_QWORD *)(v0 + 232);
  v58 = *(void (**)(_QWORD))(*(_QWORD *)(v0 + 304) + 16);
  ((void (*)(_QWORD, _QWORD, _QWORD))v58)(*(_QWORD *)(v0 + 312), *(_QWORD *)(v0 + 328), *(_QWORD *)(v0 + 296));
  sub_1C077C980(v54, v53, v59, v60, v61, v62, v63, v64, v128, v129, v130, *((uint64_t *)&v130 + 1), v131, (uint64_t)v132, v134, v135, v136, v137, (uint64_t)v138,
    v139,
    (uint64_t)v140,
    v141);
  v65 = *(void (**)(uint64_t, uint64_t, uint64_t))(v56 + 32);
  v65(v55, v54, v57);
  sub_1C078B8A8();
  *(_QWORD *)(v0 + 128) = v53;
  sub_1C07DD0F0();
  sub_1C0788BBC();
  if (v46)
  {
    __break(1u);
LABEL_78:
    __break(1u);
LABEL_79:
    __break(1u);
LABEL_80:
    __break(1u);
    goto LABEL_81;
  }
  v68 = v66;
  v69 = v67;
  sub_1C07ACF80(&qword_1EF649F50);
  if ((sub_1C107090C() & 1) == 0)
  {
LABEL_34:
    v72 = (_QWORD *)*v138;
    if ((v69 & 1) != 0)
    {
      sub_1C0782ED0(*(_QWORD *)(v0 + 232));
    }
    else
    {
      v74 = *(_QWORD *)(v0 + 232);
      v73 = *(_QWORD *)(v0 + 240);
      v75 = *(_QWORD *)(v0 + 224);
      sub_1C07BBFDC();
      v58(v72[6] + *(_QWORD *)(v76 + 72) * v68);
      v65(v72[7] + *(_QWORD *)(v74 + 72) * v68, v73, v75);
      v77 = v72[2];
      v46 = __OFADD__(v77, 1);
      v78 = v77 + 1;
      if (v46)
        goto LABEL_78;
      v72[2] = v78;
    }
    v80 = *(_QWORD *)(v0 + 304);
    v79 = *(_QWORD *)(v0 + 312);
    v81 = *(_QWORD *)(v0 + 296);
    goto LABEL_39;
  }
  sub_1C07DD0F0();
  if ((v69 & 1) == (v71 & 1))
  {
    v68 = v70;
    goto LABEL_34;
  }
LABEL_64:
  sub_1C077E700();
  return sub_1C1070D44();
}

uint64_t sub_1C0D9066C()
{
  uint64_t v0;

  sub_1C07B33B8(*(_QWORD *)(v0 + 432), *(_QWORD *)(v0 + 440));
  sub_1C07767BC();
  sub_1C07796F8();
  sub_1C07758BC();
  sub_1C0779D18();
  sub_1C077C104();
  sub_1C07767D4();
  sub_1C0778638();
  sub_1C0786388();
  sub_1C0779D20();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1C0D90724(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;

  v4 = sub_1C106C8BC();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  sub_1C0776A6C();
  v15 = sub_1C106C8A4();
  v6 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  sub_1C0778564();
  v9 = v8 - v7;
  v16 = OBJC_IVAR____TtC24IntelligencePlatformCore11AssetLoader_filterableStringAttributes;
  *(_QWORD *)(v1 + OBJC_IVAR____TtC24IntelligencePlatformCore11AssetLoader_filterableStringAttributes) = 0;
  v10 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)(v1 + 16) = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(v1 + 24) = v10;
  *(_QWORD *)v2 = 0;
  *(_BYTE *)(v2 + 8) = 1;
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v5 + 104))(v2, *MEMORY[0x1E0DC67F8], v4);
  sub_1C07767CC();
  sub_1C106C898();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 32))(v1 + OBJC_IVAR____TtC24IntelligencePlatformCore11AssetLoader_idAttribute, v9, v15);
  v11 = *(_QWORD *)(a1 + 16);
  v12 = (_QWORD *)(v1 + OBJC_IVAR____TtC24IntelligencePlatformCore11AssetLoader_vectorColumn);
  *v12 = *(_QWORD *)(a1 + 8);
  v12[1] = v11;
  *(_QWORD *)(v1 + OBJC_IVAR____TtC24IntelligencePlatformCore11AssetLoader_keyColumns) = *(_QWORD *)(a1 + 40);
  *(_BYTE *)(v1 + OBJC_IVAR____TtC24IntelligencePlatformCore11AssetLoader_includePayload) = *(_BYTE *)(a1 + 1);
  v13 = *(_QWORD *)(a1 + *(int *)(sub_1C0790AEC() + 44));
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C077AEBC();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  sub_1C07B1F90(a1, type metadata accessor for VectorDB.Config);
  *(_QWORD *)(v1 + v16) = v13;
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_1C0D908B0()
{
  return sub_1C078C868();
}

uint64_t sub_1C0D908BC()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  os_log_type_t v3;
  uint64_t v4;
  uint64_t v5;

  if (qword_1ED762AF0 != -1)
    swift_once();
  v1 = sub_1C077585C();
  v2 = (void *)sub_1C077965C(v1, (uint64_t)qword_1ED78D9E0);
  v3 = sub_1C1070378();
  if (sub_1C077C10C(v3))
  {
    *(_WORD *)sub_1C0775854() = 0;
    sub_1C077874C(&dword_1C0771000, v4, v5, "VectorDBArtfiact: Default no-op implementation for model pre-loading.");
    sub_1C0776778();
  }

  return sub_1C078D870(*(uint64_t (**)(void))(v0 + 8));
}

void sub_1C0D90960()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  v0 = sub_1C07ABB10();
  sub_1C077B5C8(v0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1C0778534();
}

uint64_t sub_1C0D909C8()
{
  sub_1C0D90960();
  sub_1C077C7D4();
  return swift_deallocClassInstance();
}

uint64_t sub_1C0D909E0()
{
  return type metadata accessor for AssetLoader(0);
}

uint64_t type metadata accessor for AssetLoader(uint64_t a1)
{
  return sub_1C0784B00(a1, (uint64_t *)&unk_1ED7564B0);
}

uint64_t sub_1C0D909FC()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1C106C8A4();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_1C0D90A98(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v5 = sub_1C0790AEC();
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v6);
  sub_1C07785B8();
  sub_1C07ACF80(&qword_1ED756510);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v7);
  sub_1C0778564();
  v10 = v9 - v8;
  v11 = type metadata accessor for VectorDB.EmbeddingConfig(0);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v12);
  sub_1C07795DC();
  sub_1C0D94678(a1 + *(int *)(v5 + 40), v10);
  if (sub_1C07B2D80(v10, 1, v11) == 1)
  {
    sub_1C0784B6C(v10, &qword_1ED756510);
    sub_1C0D9460C();
    sub_1C0775810();
    *(_QWORD *)v13 = 0xD000000000000038;
    *(_QWORD *)(v13 + 8) = 0x80000001C110BCC0;
    *(_BYTE *)(v13 + 16) = 1;
    swift_willThrow();
    sub_1C07B1F90(a1, type metadata accessor for VectorDB.Config);
    type metadata accessor for GenericEmbeddingAssetLoader(0);
    swift_deallocPartialClassInstance();
  }
  else
  {
    sub_1C0C828A0(v10, v3, type metadata accessor for VectorDB.EmbeddingConfig);
    sub_1C0C81B94(v3, v1 + OBJC_IVAR____TtC24IntelligencePlatformCore27GenericEmbeddingAssetLoader_embeddingConfig, type metadata accessor for VectorDB.EmbeddingConfig);
    v14 = sub_1C079DC28();
    sub_1C0C81B94(v14, v15, type metadata accessor for VectorDB.Config);
    sub_1C0D90724(v2);
    sub_1C07B1F90(a1, type metadata accessor for VectorDB.Config);
    sub_1C07B1F90(v3, type metadata accessor for VectorDB.EmbeddingConfig);
  }
  return v1;
}

uint64_t sub_1C0D90C5C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 64) = a1;
  *(_QWORD *)(v2 + 72) = v1;
  return sub_1C078C868();
}

uint64_t sub_1C0D90C6C()
{
  uint64_t v0;
  uint64_t v1;

  sub_1C07AE280();
  sub_1C079A260();
  v1 = sub_1C077B5B4();
  if (*(_QWORD *)(v0 + 40))
  {
    if ((sub_1C0796C24() & 1) != 0)
      __asm { BR              X10 }
  }
  else
  {
    sub_1C077C790(v1, &qword_1ED760400);
  }
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
}

uint64_t sub_1C0D90DE4()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + OBJC_IVAR____TtC24IntelligencePlatformCore27GenericEmbeddingAssetLoader_embeddingConfig);
}

uint64_t sub_1C0D90DF4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(_QWORD);
  uint64_t v11;
  int v12;
  unsigned int *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;

  v5 = sub_1C106C8B0();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v7 = sub_1C077CFAC();
  v8 = type metadata accessor for VectorDB.EmbeddingConfig(v7);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v9);
  sub_1C07795DC();
  sub_1C0C81B94(v1 + OBJC_IVAR____TtC24IntelligencePlatformCore27GenericEmbeddingAssetLoader_embeddingConfig, v3, v10);
  v11 = v3 + *(int *)(v8 + 20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v2, v11, v5);
  v12 = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 88))(v2, v5);
  if (v12 == *MEMORY[0x1E0DC67C0])
  {
    v13 = (unsigned int *)MEMORY[0x1E0DC6700];
LABEL_7:
    v14 = *v13;
    sub_1C106C880();
    sub_1C07969F0();
    (*(void (**)(uint64_t, uint64_t))(v15 + 104))(a1, v14);
    return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v11, v5);
  }
  if (v12 == *MEMORY[0x1E0DC67C8])
  {
    v13 = (unsigned int *)MEMORY[0x1E0DC66F0];
    goto LABEL_7;
  }
  if (v12 == *MEMORY[0x1E0DC67B8])
  {
    v13 = (unsigned int *)MEMORY[0x1E0DC66F8];
    goto LABEL_7;
  }
  result = sub_1C1070CA8();
  __break(1u);
  return result;
}

void sub_1C0D90F54()
{
  uint64_t v0;

  sub_1C07B1F90(v0 + OBJC_IVAR____TtC24IntelligencePlatformCore27GenericEmbeddingAssetLoader_embeddingConfig, type metadata accessor for VectorDB.EmbeddingConfig);
}

uint64_t sub_1C0D90F7C()
{
  uint64_t v0;

  sub_1C0D90960();
  sub_1C07B1F90(v0 + OBJC_IVAR____TtC24IntelligencePlatformCore27GenericEmbeddingAssetLoader_embeddingConfig, type metadata accessor for VectorDB.EmbeddingConfig);
  sub_1C077C7D4();
  return swift_deallocClassInstance();
}

uint64_t sub_1C0D90FAC()
{
  return type metadata accessor for GenericEmbeddingAssetLoader(0);
}

uint64_t type metadata accessor for GenericEmbeddingAssetLoader(uint64_t a1)
{
  return sub_1C0784B00(a1, (uint64_t *)&unk_1EF6496B8);
}

uint64_t sub_1C0D90FC8()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for VectorDB.EmbeddingConfig(319);
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_1C0D91038(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1C0D946CC;
  return sub_1C0D90C5C(a1);
}

uint64_t sub_1C0D91088(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;

  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_1C0D946CC;
  return sub_1C0D8F8D8(a1, a2, a3);
}

uint64_t sub_1C0D910EC()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_1C0804B88;
  return sub_1C0D908B0();
}

uint64_t sub_1C0D91130()
{
  return sub_1C0D90DE4();
}

uint64_t sub_1C0D91150@<X0>(uint64_t a1@<X8>)
{
  return sub_1C0D90DF4(a1);
}

uint64_t sub_1C0D91170(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;

  sub_1C0790AEC();
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v4);
  sub_1C07795DC();
  *(_QWORD *)(v1 + OBJC_IVAR____TtC24IntelligencePlatformCore23DefaultEmptyAssetLoader_dimension) = 128;
  sub_1C0C81B94(a1, v2, type metadata accessor for VectorDB.Config);
  sub_1C0D90724(v2);
  sub_1C07B1F90(a1, type metadata accessor for VectorDB.Config);
  return v1;
}

uint64_t sub_1C0D91204(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 72) = a1;
  *(_QWORD *)(v2 + 80) = v1;
  return sub_1C078C868();
}

uint64_t sub_1C0D91214()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t result;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;

  sub_1C07AE280();
  sub_1C079A260();
  v1 = sub_1C077B5B4();
  if (!*(_QWORD *)(v0 + 40))
  {
    sub_1C077C790(v1, &qword_1ED760400);
    goto LABEL_23;
  }
  if ((sub_1C0796C24() & 1) == 0)
  {
LABEL_23:
    v18 = 0;
    return (*(uint64_t (**)(uint64_t))(v0 + 8))(v18);
  }
  sub_1C07767B4();
  v2 = sub_1C106FCAC();
  if (!v3)
  {
    v5 = MEMORY[0x1E0DEE9D8];
LABEL_25:
    swift_bridgeObjectRelease();
    sub_1C07767AC();
    result = sub_1C0EBAB9C(128, v5);
    v23 = (v22 >> 1) - v21;
    if (__OFSUB__(v22 >> 1, v21))
    {
      __break(1u);
    }
    else
    {
      v15 = __OFSUB__(128, v23);
      v24 = 128 - v23;
      if (!v15)
      {
        v25 = result;
        v26 = v20;
        v27 = v21;
        v28 = v22;
        v29 = sub_1C0C6C5E8(v24 & ~(v24 >> 63), 0.0);
        sub_1C0D914C4(v25, v26, v27, v28, v29);
        v18 = v30;
        sub_1C0775834();
        swift_unknownObjectRelease();
        return (*(uint64_t (**)(uint64_t))(v0 + 8))(v18);
      }
    }
    __break(1u);
    return result;
  }
  v4 = v3;
  v5 = MEMORY[0x1E0DEE9D8];
  while (1)
  {
    sub_1C0D8EE00(v2, v4);
    v7 = v6;
    swift_bridgeObjectRelease();
    v8 = *(_QWORD *)(v7 + 16);
    v9 = *(_QWORD *)(v5 + 16);
    if (__OFADD__(v9, v8))
      break;
    if (!swift_isUniquelyReferenced_nonNull_native() || v9 + v8 > *(_QWORD *)(v5 + 24) >> 1)
    {
      sub_1C07EC064();
      v5 = v10;
    }
    if (*(_QWORD *)(v7 + 16))
    {
      v11 = *(_QWORD *)(v5 + 16);
      if ((*(_QWORD *)(v5 + 24) >> 1) - v11 < v8)
        goto LABEL_31;
      v12 = (void *)(v5 + 4 * v11 + 32);
      if (v7 + 32 < (unint64_t)v12 + 4 * v8 && (unint64_t)v12 < v7 + 32 + 4 * v8)
        return sub_1C10709F0();
      memcpy(v12, (const void *)(v7 + 32), 4 * v8);
      if (v8)
      {
        v14 = *(_QWORD *)(v5 + 16);
        v15 = __OFADD__(v14, v8);
        v16 = v14 + v8;
        if (v15)
          goto LABEL_32;
        *(_QWORD *)(v5 + 16) = v16;
      }
    }
    else if (v8)
    {
      goto LABEL_30;
    }
    sub_1C077960C();
    v2 = sub_1C106FCAC();
    v4 = v17;
    if (!v17)
      goto LABEL_25;
  }
  __break(1u);
LABEL_30:
  __break(1u);
LABEL_31:
  __break(1u);
LABEL_32:
  __break(1u);
  return sub_1C10709F0();
}

void sub_1C0D914C4(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5)
{
  if (__OFSUB__(a4 >> 1, a3))
  {
    __break(1u);
  }
  else if (!__OFADD__(*(_QWORD *)(a5 + 16), (a4 >> 1) - a3))
  {
    sub_1C07EC064();
    swift_unknownObjectRetain();
    sub_1C0BDA628();
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    sub_1C0BDA598();
    return;
  }
  __break(1u);
}

uint64_t sub_1C0D91574()
{
  return 128;
}

uint64_t sub_1C0D9157C@<X0>(uint64_t a1@<X8>)
{
  return sub_1C0D93E10(MEMORY[0x1E0DC6700], a1);
}

uint64_t sub_1C0D91588()
{
  return type metadata accessor for DefaultEmptyAssetLoader(0);
}

uint64_t type metadata accessor for DefaultEmptyAssetLoader(uint64_t a1)
{
  return sub_1C0784B00(a1, (uint64_t *)&unk_1EF649850);
}

uint64_t sub_1C0D915A4()
{
  return sub_1C0D93EA8();
}

uint64_t sub_1C0D915B4(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1C0D946CC;
  return sub_1C0D91204(a1);
}

uint64_t sub_1C0D91604@<X0>(uint64_t a1@<X8>)
{
  return sub_1C0D9157C(a1);
}

void sub_1C0D91618(uint64_t a1)
{
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  char v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  os_log_type_t v17;
  uint64_t v18;
  uint64_t v19;

  v4 = v1;
  sub_1C0790AEC();
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v6);
  sub_1C07785B8();
  if (!*(_QWORD *)(a1 + 56))
  {
    sub_1C0D9460C();
    sub_1C0775810();
    sub_1C078A128(v13, 0xD000000000000041);
    goto LABEL_5;
  }
  sub_1C07BCAD0();
  sub_1C078CDEC();
  sub_1C077960C();
  sub_1C077589C();
  sub_1C106F97C();
  sub_1C106DCA8();
  v7 = (void *)sub_1C077B5BC();
  v8 = sub_1C106DC9C();
  if (v2)
  {
    sub_1C077AF1C();

    sub_1C0D9460C();
    v9 = sub_1C0775810();
    sub_1C07808A4(v9, v10);
LABEL_5:
    v14 = sub_1C078186C(v11, v12);
    sub_1C077EB5C(v14, type metadata accessor for VectorDB.Config);
    type metadata accessor for AddressEmbeddingAssetLoader(0);
    sub_1C07A439C();
    goto LABEL_11;
  }
  v15 = v8;
  if (qword_1ED762AF0 != -1)
    swift_once();
  v16 = sub_1C077585C();
  sub_1C077965C(v16, (uint64_t)qword_1ED78D9E0);
  v17 = sub_1C077B0C0();
  if (sub_1C077F050(v17))
  {
    *(_WORD *)sub_1C0780FC8() = 0;
    sub_1C07B8D18(&dword_1C0771000, v18, v19, "VectorDBArtifact: Using (AddressEmbedding) as the text embedding provider.");
    sub_1C0776778();
  }

  *(_QWORD *)(v4 + OBJC_IVAR____TtC24IntelligencePlatformCore27AddressEmbeddingAssetLoader_embeddingModel) = v15;
  sub_1C077D144();
  sub_1C077AF1C();
  sub_1C0C81B94(a1, v3, type metadata accessor for VectorDB.Config);
  sub_1C0D90724(v3);
  sub_1C079CFA4();
  swift_release();
LABEL_11:
  sub_1C0D946D0();
  sub_1C0797DE0();
}

uint64_t sub_1C0D91810(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v2[12] = a1;
  v2[13] = v1;
  sub_1C07ACF80(&qword_1EF62F990);
  v2[14] = sub_1C0779644();
  v3 = sub_1C07ACF80(&qword_1EF62F988);
  v2[15] = v3;
  v2[16] = *(_QWORD *)(v3 - 8);
  v2[17] = sub_1C0779644();
  sub_1C077862C();
  return sub_1C077AEC4();
}

uint64_t sub_1C0D91874()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  os_log_type_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(void);
  _QWORD v18[5];

  sub_1C07AE280();
  sub_1C079A260();
  sub_1C077B5B4();
  if (*(_QWORD *)(v0 + 40))
  {
    if ((sub_1C0796C24() & 1) != 0)
    {
      v1 = sub_1C106FB68();
      v3 = v2;
      sub_1C077960C();
      v4 = HIBYTE(v3) & 0xF;
      if ((v3 & 0x2000000000000000) == 0)
        v4 = v1 & 0xFFFFFFFFFFFFLL;
      v18[0] = v1;
      v18[1] = v3;
      v18[2] = 0;
      v18[3] = v4;
      v5 = sub_1C106FCAC();
      v7 = v6;
      if (v6)
      {
        v8 = v5;
        do
        {
          sub_1C07A3304();
          if ((sub_1C106FA18() & 1) == 0)
          {
            if ((sub_1C07A3304(), (sub_1C106FA24() & 1) != 0)
              || v7 == 0xE100000000000000 && v8 == 32
              || (sub_1C07A3304(), (sub_1C1070CB4() & 1) != 0)
              || (sub_1C07A3304(), (sub_1C106FA30() & 1) != 0))
            {
              v9 = sub_1C07A3304();
              MEMORY[0x1C3BA65A8](v9);
            }
          }
          sub_1C0775844();
          v8 = sub_1C106FCAC();
          v7 = v10;
        }
        while (v10);
      }
      swift_bridgeObjectRelease();
      sub_1C07767AC();
      if (qword_1ED762AF0 != -1)
        swift_once();
      v11 = sub_1C077585C();
      sub_1C077965C(v11, (uint64_t)qword_1ED78D9E0);
      v12 = sub_1C077C13C();
      if (sub_1C077C10C(v12))
      {
        *(_WORD *)sub_1C0775854() = 0;
        sub_1C077874C(&dword_1C0771000, v13, v14, "VectorDBArtifact: Input address is empty after preprocessing");
        sub_1C0776778();
      }

    }
  }
  else
  {
    sub_1C0784B6C(v0 + 16, &qword_1ED760400);
  }
  swift_task_dealloc();
  sub_1C07796F8();
  v15 = sub_1C079DBD4();
  return sub_1C07B4464(v15, v16);
}

uint64_t sub_1C0D91BF8()
{
  return 2560;
}

uint64_t sub_1C0D91C00()
{
  return sub_1C078D3DC();
}

uint64_t sub_1C0D91C0C()
{
  return sub_1C0D93E60();
}

uint64_t sub_1C0D91C18()
{
  return type metadata accessor for AddressEmbeddingAssetLoader(0);
}

uint64_t type metadata accessor for AddressEmbeddingAssetLoader(uint64_t a1)
{
  return sub_1C0784B00(a1, (uint64_t *)&unk_1ED751C00);
}

uint64_t sub_1C0D91C34()
{
  return sub_1C0D93EA8();
}

uint64_t sub_1C0D91C44(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1C0D946CC;
  return sub_1C0D91810(a1);
}

void sub_1C0D91C94()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  id v4;
  void *v5;
  uint64_t v6;
  os_log_type_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  _QWORD *v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;

  sub_1C07A6124();
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v2);
  sub_1C079337C();
  if (!v1)
  {
    sub_1C0D9460C();
    sub_1C0775810();
    sub_1C078A128(v11, 0xD000000000000046);
LABEL_10:
    v16 = sub_1C078186C(v12, v13);
    sub_1C077EB5C(v16, type metadata accessor for VectorDB.Config);
    type metadata accessor for NLContextualEmbeddingAssetLoader(0);
    sub_1C07A439C();
    goto LABEL_11;
  }
  sub_1C07BCAD0();
  sub_1C078CDEC();
  sub_1C077960C();
  sub_1C077589C();
  v3 = (void *)*MEMORY[0x1E0CCDEF8];
  v4 = objc_msgSend((id)objc_opt_self(), sel_contextualEmbeddingWithLanguage_, *MEMORY[0x1E0CCDEF8]);
  if (!v4)
  {
    sub_1C077AF1C();
    sub_1C0D9460C();
    v14 = sub_1C0775810();
    sub_1C07808A4(v14, v15);
    goto LABEL_10;
  }
  v5 = v4;
  if (qword_1ED762AF0 != -1)
    swift_once();
  v6 = sub_1C077585C();
  sub_1C077965C(v6, (uint64_t)qword_1ED78D9E0);
  v7 = sub_1C077B0C0();
  if (sub_1C077F050(v7))
  {
    *(_WORD *)sub_1C0780FC8() = 0;
    sub_1C07B8D18(&dword_1C0771000, v8, v9, "VectorDBArtifact: Using (NLContextualEmbedding) as the text embedding provider.");
    sub_1C0776778();
  }

  *(_QWORD *)(v0 + OBJC_IVAR____TtC24IntelligencePlatformCore32NLContextualEmbeddingAssetLoader_embeddingModel) = v5;
  v10 = v5;
  sub_1C077AF1C();
  sub_1C07A96D0();
  sub_1C0785290();
  sub_1C079CFA4();

LABEL_11:
  sub_1C0D946D0();
  sub_1C0797DE0();
}

uint64_t sub_1C0D91E28()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 128) = v0;
  return sub_1C078C868();
}

uint64_t sub_1C0D91E38()
{
  uint64_t v0;
  void *v1;
  uint64_t v3;
  _QWORD *v4;

  v1 = *(void **)(*(_QWORD *)(v0 + 128)
                + OBJC_IVAR____TtC24IntelligencePlatformCore32NLContextualEmbeddingAssetLoader_embeddingModel);
  if ((objc_msgSend(v1, sel_hasAvailableAssets) & 1) != 0)
    return (*(uint64_t (**)(void))(v0 + 8))();
  *(_QWORD *)(v0 + 56) = v0 + 120;
  *(_QWORD *)(v0 + 16) = v0;
  *(_QWORD *)(v0 + 24) = sub_1C0D91F04;
  v3 = swift_continuation_init();
  *(_QWORD *)(v0 + 80) = MEMORY[0x1E0C809B0];
  v4 = (_QWORD *)(v0 + 80);
  v4[1] = 0x40000000;
  v4[2] = sub_1C0D91F98;
  v4[3] = &unk_1E7A330A0;
  v4[4] = v3;
  objc_msgSend(v1, sel_requestAssetsWithCompletionHandler_, v4);
  return swift_continuation_await();
}

uint64_t sub_1C0D91F04()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 136) = *(_QWORD *)(*(_QWORD *)v0 + 48);
  sub_1C077862C();
  return sub_1C077AEC4();
}

uint64_t sub_1C0D91F58()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1C0D91F64()
{
  uint64_t v0;

  swift_willThrow();
  return sub_1C078D870(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1C0D91F98(uint64_t a1, uint64_t a2, void *a3)
{
  if (a3)
    return sub_1C0E59318(*(_QWORD *)(a1 + 32), a3);
  else
    return sub_1C0E624BC(*(_QWORD *)(a1 + 32), a2);
}

uint64_t sub_1C0D91FD4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 64) = a1;
  *(_QWORD *)(v2 + 72) = v1;
  sub_1C077862C();
  return sub_1C077AEC4();
}

void sub_1C0D9202C()
{
  _QWORD *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  void *v9;
  void *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  id v14;

  sub_1C07AE280();
  sub_1C079A260();
  v1 = sub_1C077B5B4();
  if (v0[5])
  {
    if ((sub_1C0796C24() & 1) != 0)
    {
      v2 = *(void **)(v0[9] + OBJC_IVAR____TtC24IntelligencePlatformCore32NLContextualEmbeddingAssetLoader_embeddingModel);
      v3 = sub_1C0EBABEC((uint64_t)objc_msgSend(v2, sel_maximumSequenceLength));
      v4 = MEMORY[0x1C3BA64D0](v3);
      v6 = v5;
      sub_1C07767AC();
      v7 = *MEMORY[0x1E0CCDEF8];
      v0[2] = 0;
      v8 = sub_1C0D94114(v4, v6, v7, (uint64_t)(v0 + 2), v2);
      v9 = (void *)v0[2];
      if (v8)
      {
        v10 = v8;
        v11 = v9;
        sub_1C106AC18();
        v13 = v12;

        __asm { BR              X10 }
      }
      v14 = v9;
      sub_1C106AA14();

      swift_willThrow();
      __asm { BR              X0 }
    }
  }
  else
  {
    sub_1C077C790(v1, &qword_1ED760400);
  }
  __asm { BR              X1 }
}

id sub_1C0D922B8()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC24IntelligencePlatformCore32NLContextualEmbeddingAssetLoader_embeddingModel), sel_sentenceVectorDimension);
}

void sub_1C0D922D0()
{
  sub_1C07812B8(OBJC_IVAR____TtC24IntelligencePlatformCore32NLContextualEmbeddingAssetLoader_embeddingModel);
}

uint64_t sub_1C0D922DC()
{
  return sub_1C0D92844(&OBJC_IVAR____TtC24IntelligencePlatformCore32NLContextualEmbeddingAssetLoader_embeddingModel);
}

uint64_t sub_1C0D922E8()
{
  return type metadata accessor for NLContextualEmbeddingAssetLoader(0);
}

uint64_t type metadata accessor for NLContextualEmbeddingAssetLoader(uint64_t a1)
{
  return sub_1C0784B00(a1, (uint64_t *)&unk_1EF6499F0);
}

uint64_t sub_1C0D92304()
{
  return sub_1C0D93EA8();
}

uint64_t sub_1C0D92314(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1C0D946CC;
  return sub_1C0D91FD4(a1);
}

uint64_t sub_1C0D92364()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_1C0804B88;
  return sub_1C0D91E28();
}

id sub_1C0D923AC()
{
  return sub_1C0D922B8();
}

void sub_1C0D923CC()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;
  void *v4;
  uint64_t v5;
  os_log_type_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  _QWORD *v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;

  sub_1C07A6124();
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v2);
  sub_1C079337C();
  if (!v1)
  {
    sub_1C0D9460C();
    sub_1C0775810();
    sub_1C078A128(v10, 0xD00000000000003CLL);
LABEL_10:
    v15 = sub_1C078186C(v11, v12);
    sub_1C077EB5C(v15, type metadata accessor for VectorDB.Config);
    type metadata accessor for NLEmbeddingAssetLoader(0);
    sub_1C07A439C();
    goto LABEL_11;
  }
  sub_1C07BCAD0();
  sub_1C078CDEC();
  sub_1C077960C();
  sub_1C077589C();
  v3 = objc_msgSend((id)objc_opt_self(), sel_sentenceEmbeddingForLanguage_, *MEMORY[0x1E0CCDEF8]);
  if (!v3)
  {
    sub_1C077AF1C();
    sub_1C0D9460C();
    v13 = sub_1C0775810();
    sub_1C07808A4(v13, v14);
    goto LABEL_10;
  }
  v4 = v3;
  if (qword_1ED762AF0 != -1)
    swift_once();
  v5 = sub_1C077585C();
  sub_1C077965C(v5, (uint64_t)qword_1ED78D9E0);
  v6 = sub_1C077B0C0();
  if (sub_1C077F050(v6))
  {
    *(_WORD *)sub_1C0780FC8() = 0;
    sub_1C07B8D18(&dword_1C0771000, v7, v8, "VectorDBArtifact: Using (NLEmbedding) as the text embedding provider.");
    sub_1C0776778();
  }

  *(_QWORD *)(v0 + OBJC_IVAR____TtC24IntelligencePlatformCore22NLEmbeddingAssetLoader_embeddingModel) = v4;
  v9 = v4;
  sub_1C077AF1C();
  sub_1C07A96D0();
  sub_1C0785290();
  sub_1C079CFA4();

LABEL_11:
  sub_1C0D946D0();
  sub_1C0797DE0();
}

uint64_t sub_1C0D9255C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 64) = a1;
  *(_QWORD *)(v2 + 72) = v1;
  return sub_1C078C868();
}

uint64_t sub_1C0D9256C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  double v6;
  float v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t (*v16)(void);
  uint64_t v18;

  sub_1C07AE280();
  sub_1C089AD20();
  sub_1C077B5B4();
  if (*(_QWORD *)(v0 + 40))
  {
    if ((sub_1C077C458() & 1) != 0)
    {
      sub_1C07A3304();
      v1 = sub_1C1070330();
      if (v1)
      {
        v2 = v1;
        sub_1C0775844();
        v3 = *(_QWORD *)(v2 + 16);
        if (v3)
        {
          v18 = MEMORY[0x1E0DEE9D8];
          sub_1C09D3684();
          v4 = 0;
          v5 = *(_QWORD *)(v18 + 16);
          do
          {
            v6 = *(double *)(v2 + 8 * v4 + 32);
            if (v5 >= *(_QWORD *)(v18 + 24) >> 1)
              sub_1C09D3684();
            ++v4;
            v7 = v6;
            *(_QWORD *)(v18 + 16) = v5 + 1;
            *(float *)(v18 + 4 * v5++ + 32) = v7;
          }
          while (v3 != v4);
        }
        sub_1C0775834();
      }
      else
      {
        if (qword_1ED762AF0 != -1)
          swift_once();
        v8 = sub_1C077585C();
        v9 = sub_1C079E000(v8, (uint64_t)qword_1ED78D9E0);
        sub_1C07796D8();
        sub_1C106F538();
        v10 = sub_1C077C13C();
        if (os_log_type_enabled(v9, v10))
        {
          v11 = (uint8_t *)sub_1C0775854();
          sub_1C0775854();
          *(_DWORD *)v11 = 136315138;
          sub_1C07796D8();
          v12 = sub_1C07A3304();
          *(_QWORD *)(v0 + 16) = sub_1C0788DAC(v12, v13, v14);
          sub_1C10705AC();
          sub_1C077CF6C();
          _os_log_impl(&dword_1C0771000, v9, v10, "NLEmbeddingAssetLoader: Input string (%s) cannot be encoded.", v11, 0xCu);
          sub_1C0778610();
          sub_1C0776778();
        }
        sub_1C07758A4();

      }
    }
  }
  else
  {
    sub_1C0784B6C(v0 + 16, &qword_1ED760400);
  }
  v15 = sub_1C079DBD4();
  return sub_1C07B4464(v15, v16);
}

id sub_1C0D92808()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC24IntelligencePlatformCore22NLEmbeddingAssetLoader_embeddingModel), sel_dimension);
}

uint64_t sub_1C0D92820@<X0>(uint64_t a1@<X8>)
{
  return sub_1C0D93E10(MEMORY[0x1E0DC66F0], a1);
}

void sub_1C0D9282C()
{
  sub_1C07812B8(OBJC_IVAR____TtC24IntelligencePlatformCore22NLEmbeddingAssetLoader_embeddingModel);
}

uint64_t sub_1C0D92838()
{
  return sub_1C0D92844(&OBJC_IVAR____TtC24IntelligencePlatformCore22NLEmbeddingAssetLoader_embeddingModel);
}

uint64_t sub_1C0D92844(_QWORD *a1)
{
  uint64_t v1;

  sub_1C0D90960();

  sub_1C077C7D4();
  return sub_1C07B6344();
}

uint64_t sub_1C0D92870()
{
  return type metadata accessor for NLEmbeddingAssetLoader(0);
}

uint64_t type metadata accessor for NLEmbeddingAssetLoader(uint64_t a1)
{
  return sub_1C0784B00(a1, (uint64_t *)&unk_1EF649B90);
}

uint64_t sub_1C0D9288C()
{
  return _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
}

uint64_t sub_1C0D928A0()
{
  _QWORD *v0;

  return *(unsigned __int8 *)(*v0 + OBJC_IVAR____TtC24IntelligencePlatformCore11AssetLoader_includePayload);
}

uint64_t sub_1C0D928B4()
{
  return _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
}

uint64_t sub_1C0D928C8(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1C0D946CC;
  return sub_1C0D9255C(a1);
}

uint64_t sub_1C0D92918(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;

  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_1C0D9297C;
  return sub_1C0D8F8D8(a1, a2, a3);
}

uint64_t sub_1C0D9297C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;

  v4 = sub_1C077B5FC();
  if (!v1)
    v4 = a1;
  return sub_1C078C778(v4, *(uint64_t (**)(void))(v2 + 8));
}

uint64_t sub_1C0D929B0()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_1C0801424;
  return sub_1C0D908B0();
}

id sub_1C0D929F4()
{
  return sub_1C0D92808();
}

uint64_t sub_1C0D92A14@<X0>(uint64_t a1@<X8>)
{
  return sub_1C0D92820(a1);
}

uint64_t sub_1C0D92A28(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  NSObject *v31;
  os_log_type_t v32;
  _BOOL4 v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  NSObject *v55;
  os_log_type_t v56;
  uint8_t *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  unint64_t v82;
  uint64_t v83;

  sub_1C0790AEC();
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v4);
  sub_1C077CFAC();
  v5 = sub_1C106F598();
  v77 = *(_QWORD *)(v5 - 8);
  v78 = v5;
  MEMORY[0x1E0C80A78](v5);
  sub_1C0778564();
  v8 = v7 - v6;
  v76 = sub_1C106EBE4();
  v74 = *(_QWORD *)(v76 - 8);
  MEMORY[0x1E0C80A78](v76);
  sub_1C077AE40();
  v73 = v9;
  sub_1C07ACF80(&qword_1ED753750);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v10);
  sub_1C0776A6C();
  v11 = sub_1C106F58C();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  sub_1C077AF80();
  v75 = v13 - v14;
  MEMORY[0x1E0C80A78](v15);
  v79 = (char *)&v61 - v16;
  v17 = sub_1C106AEF4();
  MEMORY[0x1E0C80A78](v17);
  sub_1C077AF80();
  MEMORY[0x1E0C80A78](v18);
  v23 = a1[7];
  if (!v23 || (v24 = a1[8]) == 0)
  {
    sub_1C0D9460C();
    sub_1C0775810();
    v40 = sub_1C078846C(v39, 0xD000000000000036);
    sub_1C07888C4(v40, type metadata accessor for VectorDB.Config);
LABEL_16:
    type metadata accessor for EuclidEmbeddingAssetLoader(0);
    swift_deallocPartialClassInstance();
    return v80;
  }
  v65 = v22;
  v68 = v12;
  v69 = v11;
  v67 = v1;
  v70 = (char *)&v61 - v20;
  v71 = v21;
  v72 = v19;
  sub_1C0D94648(a1[6], v23);
  swift_retain();
  sub_1C077960C();
  sub_1C089A994(0x656C61636F6CLL, 0xE600000000000000, v24);
  if (v26)
    v27 = v25;
  else
    v27 = 0x53552D6E65;
  if (v26)
    v28 = v26;
  else
    v28 = 0xE500000000000000;
  sub_1C089A994(0x547265646F636E65, 0xEB00000000657079, v24);
  swift_bridgeObjectRelease();
  if (qword_1ED762AF0 != -1)
    swift_once();
  v29 = sub_1C077585C();
  v30 = sub_1C079E000(v29, (uint64_t)qword_1ED78D9E0);
  sub_1C07767CC();
  sub_1C07767CC();
  v64 = v30;
  v31 = sub_1C106F538();
  v32 = sub_1C1070384();
  v33 = os_log_type_enabled(v31, v32);
  v66 = v8;
  if (v33)
  {
    v34 = swift_slowAlloc();
    v63 = (uint64_t)a1;
    v35 = v34;
    v62 = swift_slowAlloc();
    v81 = v62;
    *(_DWORD *)v35 = 136315394;
    sub_1C07767C4();
    v83 = sub_1C0788DAC(v27, v28, &v81);
    v61 = v27;
    sub_1C078941C();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v35 + 12) = 2080;
    sub_1C077AEBC();
    v36 = sub_1C079DC28();
    v83 = sub_1C0788DAC(v36, v37, v38);
    sub_1C078941C();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1C0771000, v31, v32, "VectorDBArtifact: PhoneticEmbedder with locale: (%s) and encoderType: (%s) ", (uint8_t *)v35, 0x16u);
    swift_arrayDestroy();
    sub_1C0776778();
  }

  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease_n();
  v41 = v70;
  sub_1C106AE34();
  v42 = sub_1C079DC28();
  sub_1C0D93134(v42, v43, v44);
  v45 = v69;
  if (sub_1C07B2D80(v2, 1, v69) == 1)
  {
    swift_release();
    sub_1C0784B6C(v2, &qword_1ED753750);
    v81 = 0;
    v82 = 0xE000000000000000;
    sub_1C1070774();
    swift_bridgeObjectRelease();
    v81 = 0xD000000000000015;
    v82 = 0x80000001C110BBB0;
    sub_1C079DC28();
    sub_1C106FC94();
    swift_bridgeObjectRelease();
    sub_1C106FC94();
    v46 = v81;
    v47 = v82;
    sub_1C0D9460C();
    sub_1C0775810();
    *(_QWORD *)v48 = v46;
    *(_QWORD *)(v48 + 8) = v47;
    *(_BYTE *)(v48 + 16) = 1;
    v49 = swift_willThrow();
    sub_1C07888C4(v49, type metadata accessor for VectorDB.Config);
    (*(void (**)(char *, uint64_t))(v71 + 8))(v41, v72);
    goto LABEL_16;
  }
  swift_bridgeObjectRelease();
  v50 = v68;
  v51 = v79;
  (*(void (**)(char *, uint64_t, uint64_t))(v68 + 32))(v79, v2, v45);
  (*(void (**)(uint64_t, char *, uint64_t))(v71 + 16))(v65, v41, v72);
  v52 = v73;
  v53 = v74;
  v54 = v76;
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v74 + 104))(v73, *MEMORY[0x1E0D3D540], v76);
  v63 = sub_1C106EBD8();
  (*(void (**)(uint64_t, uint64_t))(v53 + 8))(v52, v54);
  (*(void (**)(uint64_t, char *, uint64_t))(v50 + 16))(v75, v51, v45);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v77 + 104))(v66, *MEMORY[0x1E0CD7B80], v78);
  sub_1C106F5BC();
  sub_1C077B5BC();
  *(_QWORD *)(v80 + OBJC_IVAR____TtC24IntelligencePlatformCore26EuclidEmbeddingAssetLoader_embeddingModel) = sub_1C106F5B0();
  swift_release();
  v55 = sub_1C106F538();
  v56 = sub_1C1070378();
  if (os_log_type_enabled(v55, v56))
  {
    v57 = (uint8_t *)sub_1C0780FC8();
    *(_WORD *)v57 = 0;
    _os_log_impl(&dword_1C0771000, v55, v56, "VectorDBArtifact: Using (PhoneticEmbedder) as the text embedding provider.", v57, 2u);
    sub_1C0776778();
  }

  v58 = v67;
  sub_1C0C81B94((uint64_t)a1, v67, type metadata accessor for VectorDB.Config);
  v59 = sub_1C0D90724(v58);
  sub_1C07888C4(v59, type metadata accessor for VectorDB.Config);
  (*(void (**)(char *, uint64_t))(v68 + 8))(v79, v45);
  (*(void (**)(char *, uint64_t))(v71 + 8))(v70, v72);
  return v80;
}

uint64_t sub_1C0D93134@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  BOOL v4;
  unsigned int *v7;
  BOOL v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v4 = a1 == 0x656D656870617267 && a2 == 0xE800000000000000;
  if (v4 || (sub_1C0799140() & 1) != 0)
  {
    v7 = (unsigned int *)MEMORY[0x1E0CD7B58];
  }
  else
  {
    v8 = a1 == 0x656D656E6F6870 && a2 == 0xE700000000000000;
    if (!v8 && (sub_1C0799140() & 1) == 0)
    {
      v13 = sub_1C106F58C();
      v11 = a3;
      v12 = 1;
      return sub_1C07B2D8C(v11, v12, 1, v13);
    }
    v7 = (unsigned int *)MEMORY[0x1E0CD7B50];
  }
  v9 = *v7;
  v10 = sub_1C106F58C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 104))(a3, v9, v10);
  v11 = a3;
  v12 = 0;
  v13 = v10;
  return sub_1C07B2D8C(v11, v12, 1, v13);
}

uint64_t sub_1C0D93240(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 88) = a1;
  *(_QWORD *)(v2 + 96) = v1;
  return sub_1C078C868();
}

uint64_t sub_1C0D93250()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  sub_1C07AE280();
  sub_1C079A260();
  v1 = sub_1C077B5B4();
  if (*(_QWORD *)(v0 + 40))
  {
    if ((sub_1C0796C24() & 1) != 0)
    {
      v2 = *(_QWORD *)(v0 + 96);
      v4 = *(_QWORD *)(v0 + 48);
      v3 = *(_QWORD *)(v0 + 56);
      *(_QWORD *)(v0 + 104) = v4;
      *(_QWORD *)(v0 + 112) = v3;
      *(_QWORD *)(v0 + 120) = *(_QWORD *)(v2
                                        + OBJC_IVAR____TtC24IntelligencePlatformCore26EuclidEmbeddingAssetLoader_embeddingModel);
      sub_1C07ACF80(&qword_1ED762CB0);
      v5 = sub_1C0778598();
      *(_QWORD *)(v0 + 128) = v5;
      *(_OWORD *)(v5 + 16) = xmmword_1C1079220;
      *(_QWORD *)(v5 + 32) = v4;
      *(_QWORD *)(v5 + 40) = v3;
      sub_1C07767B4();
      v6 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 136) = v6;
      sub_1C07BAECC(v6, (uint64_t)sub_1C0D93354);
      return sub_1C106F580();
    }
  }
  else
  {
    sub_1C077C790(v1, &qword_1ED760400);
  }
  return sub_1C078C778(0, *(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1C0D93354()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_1C077E88C();
  sub_1C0D946E0();
  *(_QWORD *)(v0 + 144) = v2;
  *(_QWORD *)(v0 + 152) = v1;
  sub_1C078DEDC();
  if (!v1)
    swift_bridgeObjectRelease();
  sub_1C077862C();
  return sub_1C0789D28();
}

uint64_t sub_1C0D933A8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  double v7;
  float v8;
  uint64_t v9;
  NSObject *v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  os_log_type_t v18;
  _BOOL4 v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)(void);
  uint64_t v26;

  v1 = v0[18];
  if (!*(_QWORD *)(v1 + 16))
  {
    sub_1C077B5B4();
    if (qword_1ED762AF0 != -1)
      swift_once();
    v9 = sub_1C077585C();
    v10 = sub_1C079E000(v9, (uint64_t)qword_1ED78D9E0);
    sub_1C077AE90();
    v11 = v10;
    sub_1C106F538();
    v12 = sub_1C077C13C();
    if (sub_1C077AF00(v12))
    {
      sub_1C0775854();
      v26 = sub_1C0775854();
      v13 = sub_1C07AFBD0(4.8149e-34);
      v15 = sub_1C077FB80(v13, v14, &v26);
      sub_1C078E26C(v15);
      sub_1C077CF6C();
      sub_1C07759F4(&dword_1C0771000, v10, (os_log_type_t)v1, "PhoneticEmbedder: Input string (%s) cannot be encoded.");
      sub_1C0797090();
      sub_1C0776778();
    }
    goto LABEL_19;
  }
  v2 = *(_QWORD *)(v1 + 32);
  sub_1C07796D8();
  sub_1C077B5B4();
  v3 = *(_QWORD *)(v2 + 16);
  if (v3 != sub_1C106F5A4())
  {
    if (qword_1ED762AF0 != -1)
      swift_once();
    v16 = sub_1C077585C();
    v17 = sub_1C079E000(v16, (uint64_t)qword_1ED78D9E0);
    sub_1C077AE90();
    sub_1C07796D8();
    v11 = v17;
    sub_1C106F538();
    v18 = sub_1C077C13C();
    v19 = os_log_type_enabled(v11, v18);
    v20 = v0[14];
    if (v19)
    {
      v21 = v0[13];
      v22 = sub_1C0775854();
      v26 = sub_1C0775854();
      *(_DWORD *)v22 = 136315394;
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      v0[8] = sub_1C0788DAC(v21, v20, &v26);
      sub_1C10705AC();
      sub_1C077CF6C();
      *(_WORD *)(v22 + 12) = 2048;
      sub_1C0775844();
      v0[9] = v3;
      sub_1C10705AC();
      sub_1C0775844();
      _os_log_impl(&dword_1C0771000, v11, v18, "PhoneticEmbedder: Input string (%s) vector has %ld dimensions.", (uint8_t *)v22, 0x16u);
      sub_1C0778610();
      sub_1C0776778();
    }
    sub_1C07758A4();
LABEL_19:
    sub_1C07758A4();

    goto LABEL_20;
  }
  swift_bridgeObjectRelease();
  if (v3)
  {
    v26 = MEMORY[0x1E0DEE9D8];
    sub_1C09D3684();
    v4 = 0;
    v5 = v26;
    v6 = *(_QWORD *)(v26 + 16);
    do
    {
      v7 = *(double *)(v2 + 8 * v4 + 32);
      v26 = v5;
      if (v6 >= *(_QWORD *)(v5 + 24) >> 1)
      {
        sub_1C09D3684();
        v5 = v26;
      }
      ++v4;
      v8 = v7;
      *(_QWORD *)(v5 + 16) = v6 + 1;
      *(float *)(v5 + 4 * v6++ + 32) = v8;
    }
    while (v3 != v4);
  }
  sub_1C0775844();
LABEL_20:
  v23 = sub_1C079DBD4();
  return sub_1C077F3F8(v23, v24);
}

uint64_t sub_1C0D93724()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  sub_1C077960C();
  return sub_1C077CF28(*(uint64_t (**)(void))(v0 + 8));
}

void sub_1C0D93758()
{
  sub_1C106F5A4();
  sub_1C0778534();
}

uint64_t sub_1C0D9377C()
{
  return sub_1C078D3DC();
}

uint64_t sub_1C0D93788()
{
  return sub_1C0D93E60();
}

uint64_t sub_1C0D93794()
{
  return type metadata accessor for EuclidEmbeddingAssetLoader(0);
}

uint64_t type metadata accessor for EuclidEmbeddingAssetLoader(uint64_t a1)
{
  return sub_1C0784B00(a1, (uint64_t *)&unk_1ED7564F8);
}

uint64_t sub_1C0D937B0(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1C0D946CC;
  return sub_1C0D93240(a1);
}

void sub_1C0D93800()
{
  sub_1C0D93758();
}

uint64_t sub_1C0D93820()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  os_log_type_t v11;
  uint8_t *v12;

  sub_1C07A6124();
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v5);
  sub_1C079337C();
  if (!v1)
  {
    sub_1C0D9460C();
    sub_1C0775810();
    v8 = sub_1C078846C(v9, 0xD000000000000043);
    goto LABEL_5;
  }
  sub_1C07BCAD0();
  sub_1C078CDEC();
  sub_1C077960C();
  sub_1C077589C();
  v6 = sub_1C106EE6C();
  v7 = sub_1C106EE60();
  if (v3)
  {
    v8 = sub_1C077AF1C();
LABEL_5:
    sub_1C077EB5C(v8, type metadata accessor for VectorDB.Config);
    type metadata accessor for UniversalEmbeddingAssetLoader(0);
    sub_1C07A439C();
    return v0;
  }
  *(_QWORD *)(v0 + OBJC_IVAR____TtC24IntelligencePlatformCore29UniversalEmbeddingAssetLoader_client) = v7;
  sub_1C077AF1C();
  if (qword_1ED762AF0 != -1)
    swift_once();
  v10 = sub_1C077585C();
  sub_1C077965C(v10, (uint64_t)qword_1ED78D9E0);
  v11 = sub_1C077B0C0();
  if (os_log_type_enabled(v6, v11))
  {
    v12 = (uint8_t *)sub_1C0780FC8();
    *(_WORD *)v12 = 0;
    _os_log_impl(&dword_1C0771000, v6, v11, "VectorDBArtifact: Using (UniversalEmbedding) as the text embedding provider.", v12, 2u);
    sub_1C0776778();
  }

  sub_1C0C81B94(v2, v4, type metadata accessor for VectorDB.Config);
  sub_1C0785290();
  sub_1C07B1F90(v2, type metadata accessor for VectorDB.Config);
  return v0;
}

uint64_t sub_1C0D939BC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 88) = a1;
  *(_QWORD *)(v2 + 96) = v1;
  return sub_1C078C868();
}

uint64_t sub_1C0D939CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  sub_1C07AE280();
  sub_1C079A260();
  v1 = sub_1C077B5B4();
  if (*(_QWORD *)(v0 + 40))
  {
    if ((sub_1C0796C24() & 1) != 0)
    {
      v3 = *(_QWORD *)(v0 + 48);
      v2 = *(_QWORD *)(v0 + 56);
      *(_QWORD *)(v0 + 104) = v3;
      *(_QWORD *)(v0 + 112) = v2;
      sub_1C07ACF80(&qword_1ED762CB0);
      v4 = sub_1C0778598();
      *(_QWORD *)(v0 + 120) = v4;
      *(_OWORD *)(v4 + 16) = xmmword_1C1079220;
      *(_QWORD *)(v4 + 32) = v3;
      *(_QWORD *)(v4 + 40) = v2;
      sub_1C07767B4();
      v5 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 128) = v5;
      sub_1C07BAECC(v5, (uint64_t)sub_1C0D93ACC);
      return sub_1C106EE54();
    }
  }
  else
  {
    sub_1C077C790(v1, &qword_1ED760400);
  }
  return sub_1C078C778(0, *(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1C0D93ACC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_1C077E88C();
  sub_1C0D946E0();
  *(_QWORD *)(v0 + 136) = v2;
  *(_QWORD *)(v0 + 144) = v1;
  sub_1C078DEDC();
  if (!v1)
    swift_bridgeObjectRelease();
  sub_1C077862C();
  return sub_1C0789D28();
}

uint64_t sub_1C0D93B20()
{
  uint64_t v0;
  os_log_type_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  NSObject *v7;
  os_log_type_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  _BOOL4 v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;

  v2 = *(_QWORD *)(v0 + 136);
  if (!*(_QWORD *)(v2 + 16))
  {
    sub_1C077960C();
    if (qword_1ED762AF0 != -1)
      swift_once();
    v5 = sub_1C077585C();
    v6 = sub_1C079E000(v5, (uint64_t)qword_1ED78D9E0);
    sub_1C077AE90();
    v7 = v6;
    sub_1C106F538();
    v8 = sub_1C077C13C();
    if (sub_1C077AF00(v8))
    {
      sub_1C0775854();
      v20 = sub_1C0775854();
      v9 = sub_1C07AFBD0(4.8149e-34);
      v11 = sub_1C077FB80(v9, v10, &v20);
      sub_1C078E26C(v11);
      sub_1C077CF6C();
      sub_1C07759F4(&dword_1C0771000, v6, v1, "UniversalEmbeddingModelClient: Input string (%s) cannot be encoded.");
      sub_1C0797090();
      sub_1C0776778();
    }
    goto LABEL_14;
  }
  v3 = *(_QWORD *)(v2 + 32);
  sub_1C07796D8();
  sub_1C077960C();
  v4 = *(_QWORD *)(v3 + 16);
  if (v4 != 512)
  {
    if (qword_1ED762AF0 != -1)
      swift_once();
    v12 = sub_1C077585C();
    v13 = sub_1C079E000(v12, (uint64_t)qword_1ED78D9E0);
    sub_1C077AE90();
    sub_1C07796D8();
    v7 = v13;
    sub_1C106F538();
    v14 = sub_1C077C13C();
    v15 = sub_1C077AF00(v14);
    v16 = *(_QWORD *)(v0 + 112);
    if (v15)
    {
      v17 = *(_QWORD *)(v0 + 104);
      v18 = sub_1C0775854();
      v20 = sub_1C0775854();
      *(_DWORD *)v18 = 136315394;
      sub_1C07767C4();
      *(_QWORD *)(v0 + 64) = sub_1C0788DAC(v17, v16, &v20);
      sub_1C10705AC();
      sub_1C077CF6C();
      *(_WORD *)(v18 + 12) = 2048;
      sub_1C0775844();
      *(_QWORD *)(v0 + 72) = v4;
      sub_1C10705AC();
      sub_1C0775844();
      _os_log_impl(&dword_1C0771000, v13, (os_log_type_t)v13, "UniversalEmbeddingModelClient: Input string (%s) vector has %ld dimensions.", (uint8_t *)v18, 0x16u);
      sub_1C0797090();
      sub_1C0776778();
    }
    sub_1C07758A4();
LABEL_14:
    sub_1C07758A4();

    v3 = 0;
    return sub_1C077F3F8(v3, *(uint64_t (**)(void))(v0 + 8));
  }
  swift_bridgeObjectRelease();
  return sub_1C077F3F8(v3, *(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1C0D93DD8()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  sub_1C077960C();
  return sub_1C077CF28(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1C0D93E08()
{
  return 512;
}

uint64_t sub_1C0D93E10@<X0>(unsigned int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *a1;
  sub_1C106C880();
  sub_1C07969F0();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 104))(a2, v3);
}

uint64_t sub_1C0D93E48()
{
  return sub_1C078D3DC();
}

uint64_t sub_1C0D93E54()
{
  return sub_1C0D93E60();
}

uint64_t sub_1C0D93E60()
{
  sub_1C0D90960();
  swift_release();
  sub_1C077C7D4();
  return sub_1C07B6344();
}

uint64_t sub_1C0D93E8C()
{
  return type metadata accessor for UniversalEmbeddingAssetLoader(0);
}

uint64_t type metadata accessor for UniversalEmbeddingAssetLoader(uint64_t a1)
{
  return sub_1C0784B00(a1, (uint64_t *)&unk_1EF649D30);
}

uint64_t sub_1C0D93EA8()
{
  return swift_updateClassMetadata2();
}

uint64_t sub_1C0D93EE0()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t);

  sub_1C07ABB10();
  sub_1C07969F0();
  v0 = sub_1C077CEF4();
  return v1(v0);
}

uint64_t sub_1C0D93F1C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1C0D946CC;
  return sub_1C0D939BC(a1);
}

_QWORD *sub_1C0D93F6C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  if (a1)
    v2 = (a2 - a1) / 4;
  else
    v2 = 0;
  return sub_1C08A3048(a1, v2);
}

void sub_1C0D93FA8(unint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;

  if ((a3 & 0x1000000000000000) == 0 || (a2 & 0x800000000000000) != 0)
  {
    v4 = sub_1C106FD18();
    sub_1C07805C8(v4);
  }
  else
  {
    v3 = MEMORY[0x1C3BA65F0](15, a1 >> 16);
    sub_1C07805C8(v3);
  }
  sub_1C0778534();
}

_QWORD *sub_1C0D93FFC(uint64_t a1, uint64_t a2)
{
  _QWORD *result;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  result = (_QWORD *)sub_1C106A84C();
  v5 = (uint64_t)result;
  if (result)
  {
    result = (_QWORD *)sub_1C106A870();
    if (__OFSUB__(a1, result))
    {
LABEL_13:
      __break(1u);
      return result;
    }
    v5 += a1 - (_QWORD)result;
  }
  v6 = __OFSUB__(a2, a1);
  v7 = a2 - a1;
  if (v6)
  {
    __break(1u);
    goto LABEL_13;
  }
  v8 = sub_1C106A864();
  if (v8 >= v7)
    v9 = v7;
  else
    v9 = v8;
  v10 = v5 + v9;
  if (v5)
    v11 = v10;
  else
    v11 = 0;
  return sub_1C0D93F6C(v5, v11);
}

_QWORD *sub_1C0D94084(uint64_t a1, uint64_t a2)
{
  _QWORD *result;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  result = (_QWORD *)sub_1C106A84C();
  v5 = (uint64_t)result;
  if (result)
  {
    result = (_QWORD *)sub_1C106A870();
    if (__OFSUB__(a1, result))
    {
LABEL_13:
      __break(1u);
      return result;
    }
    v5 += a1 - (_QWORD)result;
  }
  v6 = __OFSUB__(a2, a1);
  v7 = a2 - a1;
  if (v6)
  {
    __break(1u);
    goto LABEL_13;
  }
  v8 = sub_1C106A864();
  if (v5)
  {
    if (v8 >= v7)
      v9 = v7;
    else
      v9 = v8;
    v10 = v9 / 4;
  }
  else
  {
    v10 = 0;
  }
  return sub_1C08A3048(v5, v10);
}

id sub_1C0D94114(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  void *v8;
  id v9;

  v8 = (void *)sub_1C106FAF0();
  swift_bridgeObjectRelease();
  v9 = objc_msgSend(a5, sel_sentenceEmbeddingVectorDataForString_language_error_, v8, a3, a4);

  return v9;
}

unint64_t sub_1C0D9418C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF646228;
  if (!qword_1EF646228)
  {
    v1 = sub_1C07D4BEC(&qword_1EF62F988);
    result = MEMORY[0x1C3BA8174](MEMORY[0x1E0C9E6C8], v1);
    atomic_store(result, (unint64_t *)&qword_1EF646228);
  }
  return result;
}

void sub_1C0D941D0(unint64_t a1, unint64_t a2, unint64_t a3)
{
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;

  v5 = (a2 >> 59) & 1;
  if ((a3 & 0x1000000000000000) == 0)
    LOBYTE(v5) = 1;
  if ((a1 & 1) == 0 || (a1 & 0xC) == 4 << v5)
    goto LABEL_9;
  v6 = HIBYTE(a3) & 0xF;
  if ((a3 & 0x2000000000000000) == 0)
    v6 = a2 & 0xFFFFFFFFFFFFLL;
  if (v6 < a1 >> 16)
  {
    __break(1u);
LABEL_9:
    sub_1C0D9426C(a1, a2, a3);
    if ((v7 & 1) == 0)
      sub_1C0D942D8(v7, a2, a3);
  }
}

void sub_1C0D9426C(unint64_t a1, unint64_t a2, unint64_t a3)
{
  uint64_t v5;
  unint64_t v6;

  v5 = (a2 >> 59) & 1;
  if ((a3 & 0x1000000000000000) == 0)
    LOBYTE(v5) = 1;
  if ((a1 & 0xC) == 4 << v5)
    sub_1C0D93FA8(a1, a2, a3);
  v6 = HIBYTE(a3) & 0xF;
  if ((a3 & 0x2000000000000000) == 0)
    v6 = a2 & 0xFFFFFFFFFFFFLL;
  if (v6 < a1 >> 16)
    __break(1u);
}

unint64_t sub_1C0D942D8(unint64_t result, uint64_t a2, unint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  unint64_t v9;
  uint64_t v10;
  int v11;
  unint64_t v12;
  _QWORD v13[4];

  if ((result & 0xC000) != 0 || result < 0x10000)
  {
    result &= 0xFFFFFFFFFFFF0000;
  }
  else
  {
    v5 = result >> 16;
    if ((a3 & 0x1000000000000000) != 0)
    {
      v10 = HIBYTE(a3) & 0xF;
      if ((a3 & 0x2000000000000000) == 0)
        v10 = a2 & 0xFFFFFFFFFFFFLL;
      if (v5 != v10)
        return sub_1C107075C();
    }
    else
    {
      v13[2] = v3;
      v13[3] = v4;
      if ((a3 & 0x2000000000000000) != 0)
      {
        v13[0] = a2;
        v13[1] = a3 & 0xFFFFFFFFFFFFFFLL;
        if (v5 != (HIBYTE(a3) & 0xF) && (*((_BYTE *)v13 + v5) & 0xC0) == 0x80)
        {
          do
          {
            v9 = v5 - 1;
            v11 = *((_BYTE *)&v12 + v5-- + 7) & 0xC0;
          }
          while (v11 == 128);
        }
        else
        {
          v9 = result >> 16;
        }
        v5 = v9;
      }
      else
      {
        if ((a2 & 0x1000000000000000) != 0)
        {
          v6 = (a3 & 0xFFFFFFFFFFFFFFFLL) + 32;
          v7 = a2 & 0xFFFFFFFFFFFFLL;
        }
        else
        {
          v12 = result >> 16;
          v6 = sub_1C10707F8();
          v5 = v12;
        }
        if (v5 != v7)
        {
          do
            v8 = *(_BYTE *)(v6 + v5--) & 0xC0;
          while (v8 == 128);
          ++v5;
        }
      }
      return v5 << 16;
    }
  }
  return result;
}

void sub_1C0D943D0(unint64_t a1, unint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t i;
  unint64_t v12;
  uint64_t v13;
  int v14;
  int v15;
  unsigned int v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  int v24;
  unint64_t v25;
  uint64_t v26;

  v4 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0)
    v4 = a1;
  v5 = 7;
  if (((a2 >> 60) & ((a1 & 0x800000000000000) == 0)) != 0)
    v5 = 11;
  v6 = v5 | (v4 << 16);
  sub_1C0D941D0(0xFuLL, a1, a2);
  v8 = v7;
  sub_1C0D941D0(v6, a1, a2);
  v10 = v9 >> 14;
  if (v8 >> 14 < v9 >> 14)
  {
    for (i = 0; !__OFADD__(i, 1); ++i)
    {
      if ((a2 & 0x1000000000000000) != 0)
      {
        v8 = sub_1C106FBC8();
      }
      else
      {
        v12 = v8 >> 16;
        if ((a2 & 0x2000000000000000) != 0)
        {
          v25 = a1;
          v26 = a2 & 0xFFFFFFFFFFFFFFLL;
          v14 = *((unsigned __int8 *)&v25 + v12);
        }
        else
        {
          v13 = (a2 & 0xFFFFFFFFFFFFFFFLL) + 32;
          if ((a1 & 0x1000000000000000) == 0)
            v13 = sub_1C10707F8();
          v14 = *(unsigned __int8 *)(v13 + v12);
        }
        v15 = (char)v14;
        v16 = __clz(v14 ^ 0xFF) - 24;
        if (v15 >= 0)
          LOBYTE(v16) = 1;
        v8 = ((v12 + v16) << 16) | 5;
      }
      if (v10 <= v8 >> 14)
        return;
    }
    __break(1u);
LABEL_41:
    __break(1u);
    return;
  }
  if (v10 < v8 >> 14)
  {
    v17 = 0;
    while (!__OFSUB__(v17--, 1))
    {
      if ((a2 & 0x1000000000000000) != 0)
      {
        v8 = sub_1C106FBD4();
      }
      else
      {
        if ((a2 & 0x2000000000000000) != 0)
        {
          v25 = a1;
          v26 = a2 & 0xFFFFFFFFFFFFFFLL;
          if ((*((_BYTE *)&v25 + (v8 >> 16) - 1) & 0xC0) == 0x80)
          {
            v23 = 0;
            do
              v24 = *((_BYTE *)&v25 + (v8 >> 16) + v23-- - 2) & 0xC0;
            while (v24 == 128);
            v22 = 1 - v23;
          }
          else
          {
            v22 = 1;
          }
        }
        else
        {
          v19 = (a2 & 0xFFFFFFFFFFFFFFFLL) + 32;
          if ((a1 & 0x1000000000000000) == 0)
            v19 = sub_1C10707F8();
          v20 = 0;
          do
            v21 = *(_BYTE *)(v19 + (v8 >> 16) - 1 + v20--) & 0xC0;
          while (v21 == 128);
          v22 = -v20;
        }
        v8 = (v8 - (v22 << 16)) & 0xFFFFFFFFFFFF0000 | 5;
      }
      if (v10 >= v8 >> 14)
        return;
    }
    goto LABEL_41;
  }
}

unint64_t sub_1C0D9460C()
{
  unint64_t result;

  result = qword_1EF649F58;
  if (!qword_1EF649F58)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10BC3A8, &unk_1E7A33388);
    atomic_store(result, (unint64_t *)&qword_1EF649F58);
  }
  return result;
}

uint64_t sub_1C0D94648(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    return _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  }
  return result;
}

uint64_t sub_1C0D94678(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1C07ACF80(&qword_1ED756510);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C0D946D0()
{
  uint64_t v0;

  return v0;
}

void sub_1C0D946E0()
{
  _QWORD *v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 8) = *v0;
}

void sub_1C0D946F0()
{
  sub_1C07EC114();
}

uint64_t sub_1C0D946FC()
{
  unint64_t v0;
  uint64_t v1;

  return sub_1C07B0E28(v1, v0);
}

uint64_t VectorSearchSimilarityMetric.toVectorDatabaseMetric()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  int v8;
  unsigned int *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;

  v4 = v1;
  v6 = sub_1C106C8B0();
  sub_1C0785044();
  MEMORY[0x1E0C80A78](v7);
  sub_1C0778544();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v2, v4, v6);
  v8 = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 88))(v2, v6);
  if (v8 == *MEMORY[0x1E0DC67C0])
  {
    v9 = (unsigned int *)MEMORY[0x1E0DC6700];
LABEL_7:
    v10 = *v9;
    v11 = sub_1C106C880();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 104))(a1, v10, v11);
  }
  if (v8 == *MEMORY[0x1E0DC67C8])
  {
    v9 = (unsigned int *)MEMORY[0x1E0DC66F0];
    goto LABEL_7;
  }
  if (v8 == *MEMORY[0x1E0DC67B8])
  {
    v9 = (unsigned int *)MEMORY[0x1E0DC66F8];
    goto LABEL_7;
  }
  result = sub_1C1070CA8();
  __break(1u);
  return result;
}

uint64_t sub_1C0D94810(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v8;
  __int128 v9;
  uint64_t v10;
  _BYTE v11[40];

  v6 = v2 + OBJC_IVAR____TtCO24IntelligencePlatformCore8VectorDB17EmbeddingDatabase_config;
  sub_1C0D96BA4(a2, v2 + OBJC_IVAR____TtCO24IntelligencePlatformCore8VectorDB17EmbeddingDatabase_config);
  *(_QWORD *)(v2 + 16) = a1;
  swift_retain();
  sub_1C0D94980();
  if (!v3)
  {
    if (v10)
    {
      sub_1C077DD60(&v9, (uint64_t)v11);
      sub_1C07D6D1C((uint64_t)v11, v2 + OBJC_IVAR____TtCO24IntelligencePlatformCore8VectorDB17EmbeddingDatabase_assetLoader);
      sub_1C106C814();
      swift_release();
      sub_1C07B1F90(a2, type metadata accessor for VectorDB.Config);
      _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v11);
      return v2;
    }
    sub_1C0784B6C((uint64_t)&v9, &qword_1EF649FE0);
    sub_1C0D9460C();
    sub_1C0775810();
    sub_1C078846C(v8, 0xD00000000000002ALL);
  }
  swift_release();
  sub_1C07B1F90(a2, type metadata accessor for VectorDB.Config);
  swift_release();
  sub_1C07B1F90(v6, type metadata accessor for VectorDB.Config);
  swift_deallocPartialClassInstance();
  return v2;
}

void sub_1C0D94980()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _UNKNOWN **v32;
  BOOL v33;
  uint64_t v34;
  BOOL v35;
  uint64_t v36;
  BOOL v37;
  uint64_t v38;
  uint64_t v39;
  BOOL v40;
  uint64_t v41;
  uint64_t v42;
  NSObject *v43;
  os_log_type_t v44;
  uint8_t *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  __int128 v51;
  char *v52;
  _UNKNOWN **v53;
  __int128 v54[2];
  uint64_t v55;

  sub_1C077AE5C();
  v2 = v0;
  v55 = v3;
  sub_1C0790AEC();
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v49 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v49 - v9;
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v49 - v12;
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v49 - v15;
  MEMORY[0x1E0C80A78](v17);
  v19 = (uint64_t *)((char *)&v49 - v18);
  MEMORY[0x1E0C80A78](v20);
  v22 = (char *)&v49 - v21;
  MEMORY[0x1E0C80A78](v23);
  v26 = (char *)&v49 - v25;
  if (*(_BYTE *)v2 != 1)
  {
    sub_1C0D96BA4(v2, (uint64_t)v6);
    type metadata accessor for GenericEmbeddingAssetLoader(0);
    sub_1C07A0EC8();
    v31 = sub_1C0D90A98((uint64_t)v6);
    if (v1)
      goto LABEL_13;
    v32 = &off_1E7A33040;
    goto LABEL_10;
  }
  v50 = v1;
  v27 = *(_QWORD *)(v2 + 56);
  if (!v27)
  {
    *(_QWORD *)(v55 + 32) = 0;
    *(_OWORD *)v55 = 0u;
    *(_OWORD *)(v55 + 16) = 0u;
    goto LABEL_13;
  }
  v49 = v24;
  v28 = *(_QWORD *)(v2 + 48);
  if ((v28 != 0xD000000000000015 || v27 != 0x80000001C110BDD0) && (sub_1C079A274() & 1) == 0)
  {
    v33 = v28 == 0x646465626D456C6ELL && v27 == 0xEB00000000676E69;
    if (v33 || (sub_1C079A274() & 1) != 0)
    {
      sub_1C0D96BA4(v2, (uint64_t)v22);
      type metadata accessor for NLEmbeddingAssetLoader(0);
      sub_1C07A0EC8();
      v34 = v50;
      sub_1C0D923CC();
      if (v34)
        goto LABEL_13;
      v32 = &off_1E7A32EC0;
    }
    else
    {
      v35 = v28 == 0x64696C637565 && v27 == 0xE600000000000000;
      if (v35 || (sub_1C079A274() & 1) != 0)
      {
        sub_1C078A13C(v2);
        type metadata accessor for EuclidEmbeddingAssetLoader(0);
        sub_1C07A0EC8();
        v36 = v50;
        v31 = sub_1C0D92A28(v19);
        if (v36)
          goto LABEL_13;
        v32 = &off_1E7A32E60;
      }
      else
      {
        v37 = v28 == 0x6173726576696E75 && v27 == 0xED0000747865546CLL;
        if (v37 || (sub_1C079A274() & 1) != 0)
        {
          sub_1C0D96BA4(v2, (uint64_t)v16);
          type metadata accessor for UniversalEmbeddingAssetLoader(0);
          sub_1C07A0EC8();
          v38 = v50;
          v31 = sub_1C0D93820();
          if (v38)
            goto LABEL_13;
          v32 = &off_1E7A32E00;
        }
        else if (v28 == 0xD000000000000010 && v27 == 0x80000001C110BDF0 || (sub_1C079A274() & 1) != 0)
        {
          sub_1C0D96BA4(v2, (uint64_t)v13);
          type metadata accessor for AddressEmbeddingAssetLoader(0);
          sub_1C07A0EC8();
          v39 = v50;
          sub_1C0D91618((uint64_t)v13);
          if (v39)
            goto LABEL_13;
          v32 = &off_1E7A32F80;
        }
        else
        {
          v40 = v28 == 0x7974706D65 && v27 == 0xE500000000000000;
          if (!v40 && (sub_1C079A274() & 1) == 0)
          {
            if (qword_1ED762AF0 != -1)
              swift_once();
            v42 = sub_1C106F544();
            sub_1C079E000(v42, (uint64_t)qword_1ED78D9E0);
            v43 = sub_1C106F538();
            v44 = sub_1C1070378();
            if (os_log_type_enabled(v43, v44))
            {
              v45 = (uint8_t *)swift_slowAlloc();
              *(_WORD *)v45 = 0;
              _os_log_impl(&dword_1C0771000, v43, v44, "VectorDBArtifact: DefaultEmptyAssetLoader is being used by default.", v45, 2u);
              MEMORY[0x1C3BA8270](v45, -1, -1);
            }

            v46 = v49;
            sub_1C078A13C(v2);
            type metadata accessor for DefaultEmptyAssetLoader(0);
            sub_1C07A0EC8();
            v47 = v50;
            v48 = sub_1C0D91170(v46);
            if (!v47)
            {
              *(_QWORD *)(v55 + 24) = v43;
              *(_QWORD *)(v55 + 32) = &off_1E7A32FE0;
              *(_QWORD *)v55 = v48;
            }
            goto LABEL_13;
          }
          sub_1C0D96BA4(v2, (uint64_t)v10);
          type metadata accessor for DefaultEmptyAssetLoader(0);
          sub_1C07A0EC8();
          v41 = v50;
          v31 = sub_1C0D91170((uint64_t)v10);
          if (v41)
            goto LABEL_13;
          v32 = &off_1E7A32FE0;
        }
      }
    }
LABEL_10:
    v52 = v26;
    v53 = v32;
    goto LABEL_11;
  }
  sub_1C0D96BA4(v2, (uint64_t)v26);
  v29 = type metadata accessor for NLContextualEmbeddingAssetLoader(0);
  swift_allocObject();
  v30 = v50;
  sub_1C0D91C94();
  if (!v30)
  {
    v52 = (char *)v29;
    v53 = &off_1E7A32F20;
LABEL_11:
    *(_QWORD *)&v51 = v31;
    sub_1C077DD60(&v51, (uint64_t)v54);
    sub_1C077DD60(v54, v55);
  }
LABEL_13:
  sub_1C07757D0();
}

void sub_1C0D94F38()
{
  uint64_t v0;

  sub_1C106C82C();
  swift_release();
  sub_1C07B1F90(v0 + OBJC_IVAR____TtCO24IntelligencePlatformCore8VectorDB17EmbeddingDatabase_config, type metadata accessor for VectorDB.Config);
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0(v0 + OBJC_IVAR____TtCO24IntelligencePlatformCore8VectorDB17EmbeddingDatabase_assetLoader);
  sub_1C0778534();
}

uint64_t sub_1C0D94F8C()
{
  sub_1C0D94F38();
  return swift_deallocClassInstance();
}

uint64_t sub_1C0D94FB0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 32) = a1;
  *(_QWORD *)(v2 + 40) = v1;
  return swift_task_switch();
}

uint64_t sub_1C0D94FC8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t, uint64_t);

  v1 = v0[5];
  v2 = OBJC_IVAR____TtCO24IntelligencePlatformCore8VectorDB17EmbeddingDatabase_assetLoader;
  v0[6] = OBJC_IVAR____TtCO24IntelligencePlatformCore8VectorDB17EmbeddingDatabase_assetLoader;
  v3 = *(_QWORD *)(v1 + v2 + 24);
  v4 = *(_QWORD *)(v1 + v2 + 32);
  sub_1C07A9480((_QWORD *)(v1 + v2), v3);
  v5 = (_QWORD *)sub_1C077FDD8();
  v0[7] = v5;
  *v5 = v0;
  v5[1] = sub_1C0D95040;
  return v7(v3, v4);
}

uint64_t sub_1C0D95040()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  swift_task_dealloc();
  if (v0)
    return sub_1C077CF28(*(uint64_t (**)(void))(v2 + 8));
  else
    return sub_1C077AEC4();
}

uint64_t sub_1C0D9509C()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t (*v6)(_QWORD, uint64_t, uint64_t);

  v1 = (_QWORD *)(v0[5] + v0[6]);
  v2 = v1[3];
  v3 = v1[4];
  sub_1C07A9480(v1, v2);
  v4 = (_QWORD *)sub_1C077FDD8();
  v0[8] = v4;
  *v4 = v0;
  v4[1] = sub_1C0D95110;
  return v6(v0[4], v2, v3);
}

uint64_t sub_1C0D95110(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 72) = a1;
  *(_QWORD *)(v3 + 80) = v1;
  swift_task_dealloc();
  if (v1)
    return sub_1C077CF28(*(uint64_t (**)(void))(v3 + 8));
  else
    return sub_1C077AEC4();
}

uint64_t sub_1C0D95174()
{
  uint64_t v0;
  os_log_type_t v1;
  uint64_t v2;
  _DWORD *v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  os_log_type_t v10;
  uint8_t *v11;

  v2 = *(_QWORD *)(v0 + 80);
  v3 = (_DWORD *)sub_1C106C808();
  swift_bridgeObjectRelease();
  if (v2)
  {
    if (qword_1ED762AF0 != -1)
      swift_once();
    v4 = sub_1C077585C();
    sub_1C079E000(v4, (uint64_t)qword_1ED78D9E0);
    sub_1C077CF64();
    sub_1C077CF64();
    v5 = sub_1C106F538();
    v6 = sub_1C1070390();
    if (sub_1C07767E4(v6))
    {
      sub_1C079634C();
      v7 = (_QWORD *)sub_1C079BAC8();
      *v3 = 138412290;
      sub_1C077CF64();
      v8 = _swift_stdlib_bridgeErrorToNSError();
      *(_QWORD *)(v0 + 16) = v8;
      sub_1C07936B4();
      *v7 = v8;
      sub_1C077E6C8();
      sub_1C077E6C8();
      sub_1C078672C(&dword_1C0771000, v5, v1, "VectorDBArtifact: %@");
      sub_1C07ACF80(&qword_1ED7614A0);
      sub_1C0794C38();
      sub_1C0776778();
    }
    sub_1C077E6C8();
    sub_1C077E6C8();
    sub_1C077E6C8();
  }
  else
  {
    if (qword_1ED762AF0 != -1)
      swift_once();
    v9 = sub_1C077585C();
    sub_1C079E000(v9, (uint64_t)qword_1ED78D9E0);
    v5 = sub_1C106F538();
    v10 = sub_1C1070384();
    if (sub_1C07758D8(v10))
    {
      v11 = (uint8_t *)sub_1C079634C();
      *(_DWORD *)v11 = 134217984;
      *(_QWORD *)(v0 + 24) = v3;
      sub_1C10705AC();
      _os_log_impl(&dword_1C0771000, v5, OS_LOG_TYPE_DEFAULT, "VectorDBArtifact: %ld embeddings inserted.", v11, 0xCu);
      sub_1C0776778();
    }
  }

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1C0D95388(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v2[4] = a1;
  v2[5] = v1;
  sub_1C106C8A4();
  v2[6] = sub_1C0779644();
  v3 = sub_1C106C874();
  v2[7] = v3;
  v2[8] = *(_QWORD *)(v3 - 8);
  v2[9] = sub_1C0779644();
  return sub_1C077AEC4();
}

uint64_t sub_1C0D953E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  uint64_t v30;
  BOOL v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  NSObject *v35;
  os_log_type_t v36;
  uint64_t v38;
  uint64_t v39;
  unsigned int v40;
  unsigned int v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;

  v2 = v0 + 32;
  v1 = *(_QWORD *)(v0 + 32);
  v3 = *(_QWORD *)(v1 + 16);
  if (v3)
  {
    v38 = v0 + 32;
    v4 = *(_QWORD *)(v0 + 64);
    v5 = *(_QWORD *)(v0 + 40);
    v6 = *(_QWORD *)(sub_1C106E590() - 8);
    v7 = v1 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
    v42 = (_QWORD *)(v5 + OBJC_IVAR____TtCO24IntelligencePlatformCore8VectorDB17EmbeddingDatabase_assetLoader);
    v41 = *MEMORY[0x1E0DC6778];
    v40 = *MEMORY[0x1E0DC6818];
    v39 = *(_QWORD *)(v6 + 72);
    sub_1C077AE90();
    v8 = MEMORY[0x1E0DEE9D8];
    while (1)
    {
      v43 = v3;
      v9 = *(_QWORD *)(v0 + 72);
      v44 = *(_QWORD *)(v0 + 56);
      v10 = v0;
      v11 = v42[3];
      v12 = v42[4];
      sub_1C07A9480(v42, v11);
      (*(void (**)(uint64_t, uint64_t))(v12 + 16))(v11, v12);
      sub_1C07ACF80(&qword_1ED744910);
      v13 = sub_1C07ACF80(&qword_1ED743E18);
      v14 = *(unsigned __int8 *)(*(_QWORD *)(v13 - 8) + 80);
      v15 = (v14 + 32) & ~v14;
      v16 = swift_allocObject();
      *(_OWORD *)(v16 + 16) = xmmword_1C1079220;
      v17 = v16 + v15;
      v18 = (uint64_t *)(v16 + v15 + *(int *)(v13 + 48));
      v19 = sub_1C106C88C();
      (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v19 - 8) + 104))(v17, v41, v19);
      *v18 = sub_1C106E578();
      v20 = sub_1C106C8C8();
      (*(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v20 - 8) + 104))(v18, v40, v20);
      v0 = v10;
      sub_1C07B2D8C((uint64_t)v18, 0, 1, v20);
      sub_1C106C868();
      sub_1C07ACF80(&qword_1ED744908);
      v21 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
      v22 = swift_allocObject();
      *(_OWORD *)(v22 + 16) = xmmword_1C1079220;
      (*(void (**)(unint64_t, uint64_t, uint64_t))(v4 + 16))(v22 + v21, v9, v44);
      v23 = sub_1C106C7E4();
      sub_1C079C0DC();
      swift_bridgeObjectRelease();
      v24 = *(_QWORD *)(v23 + 16);
      v25 = *(_QWORD *)(v8 + 16);
      if (__OFADD__(v25, v24))
        break;
      if (!swift_isUniquelyReferenced_nonNull_native() || v25 + v24 > *(_QWORD *)(v8 + 24) >> 1)
      {
        sub_1C07EC050();
        v8 = v26;
      }
      if (*(_QWORD *)(v23 + 16))
      {
        v27 = *(_QWORD *)(v8 + 16);
        if ((*(_QWORD *)(v8 + 24) >> 1) - v27 < v24)
          goto LABEL_27;
        v28 = (void *)(v8 + 8 * v27 + 32);
        if (v23 + 32 < (unint64_t)v28 + 8 * v24 && (unint64_t)v28 < v23 + 32 + 8 * v24)
          return sub_1C10709F0();
        memcpy(v28, (const void *)(v23 + 32), 8 * v24);
        if (v24)
        {
          v30 = *(_QWORD *)(v8 + 16);
          v31 = __OFADD__(v30, v24);
          v32 = v30 + v24;
          if (v31)
            goto LABEL_28;
          *(_QWORD *)(v8 + 16) = v32;
        }
      }
      else if (v24)
      {
        goto LABEL_26;
      }
      swift_bridgeObjectRelease();
      v7 += v39;
      v3 = v43 - 1;
      if (v43 == 1)
      {
        v2 = v38;
        swift_bridgeObjectRelease();
        goto LABEL_20;
      }
    }
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
LABEL_28:
    __break(1u);
    return sub_1C10709F0();
  }
  else
  {
LABEL_20:
    v33 = sub_1C106C7FC();
    swift_bridgeObjectRelease();
    if (qword_1ED762AF0 != -1)
      swift_once();
    v34 = sub_1C077585C();
    sub_1C079E000(v34, (uint64_t)qword_1ED78D9E0);
    v35 = sub_1C106F538();
    v36 = sub_1C1070384();
    if (sub_1C07758D8(v36))
    {
      *(_DWORD *)sub_1C079634C() = 134217984;
      *(_QWORD *)(v2 - 8) = v33;
      sub_1C10705AC();
      sub_1C078672C(&dword_1C0771000, v35, OS_LOG_TYPE_DEFAULT, "VectorDBArtifact: %ld embeddings deleted.");
      sub_1C0776778();
    }

    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_1C0D959A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(_QWORD *, _QWORD, uint64_t);
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unsigned int v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  __int128 v33;
  uint64_t v34;
  _QWORD v35[3];
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  sub_1C077AE5C();
  v39 = v4;
  v40 = v5;
  v7 = v6;
  v8 = sub_1C106C8BC();
  sub_1C0785044();
  MEMORY[0x1E0C80A78](v9);
  sub_1C078A2EC();
  v10 = sub_1C106C8A4();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  sub_1C0778544();
  sub_1C0D94980();
  if (!v0)
  {
    v27 = v2;
    v38 = v11;
    if (v34)
    {
      v31 = v10;
      v32 = v8;
      sub_1C077DD60(&v33, (uint64_t)v35);
      sub_1C07ACF80(&qword_1ED7565A0);
      v13 = (*(unsigned __int8 *)(v38 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v38 + 80);
      v30 = *(_QWORD *)(v38 + 72);
      v14 = swift_allocObject();
      *(_OWORD *)(v14 + 16) = xmmword_1C1079220;
      v29 = v13;
      v15 = v36;
      v16 = v37;
      sub_1C07A9480(v35, v36);
      (*(void (**)(uint64_t, uint64_t))(v16 + 16))(v15, v16);
      v17 = *(_QWORD *)(v7 + *(int *)(sub_1C0790AEC() + 44));
      if (v17)
      {
        v18 = *(_QWORD *)(v17 + 16);
        if (v18)
        {
          v26 = v14;
          *(_QWORD *)&v33 = MEMORY[0x1E0DEE9D8];
          _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
          sub_1C09D4E38();
          v19 = v33;
          v28 = *MEMORY[0x1E0DC67F0];
          v20 = *(void (**)(_QWORD *, _QWORD, uint64_t))(v27 + 104);
          v21 = v17 + 40;
          do
          {
            *v3 = 0;
            v3[1] = 0;
            v20(v3, v28, v32);
            sub_1C077AE90();
            sub_1C106C898();
            *(_QWORD *)&v33 = v19;
            v22 = *(_QWORD *)(v19 + 16);
            if (v22 >= *(_QWORD *)(v19 + 24) >> 1)
            {
              sub_1C09D4E38();
              v19 = v33;
            }
            v21 += 16;
            *(_QWORD *)(v19 + 16) = v22 + 1;
            (*(void (**)(unint64_t, uint64_t, uint64_t))(v38 + 32))(v19 + v29 + v22 * v30, v1, v31);
            --v18;
          }
          while (v18);
          swift_bridgeObjectRelease();
          v14 = v26;
        }
      }
      *(_QWORD *)&v33 = v14;
      sub_1C0BDBB70();
      MEMORY[0x1E0C80A78](v24);
      sub_1C0E72EF8();
      v7 = v25;
      swift_bridgeObjectRelease();
      _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v35);
    }
    else
    {
      sub_1C0784B6C((uint64_t)&v33, &qword_1EF649FE0);
      sub_1C0D9460C();
      sub_1C0775810();
      sub_1C078846C(v23, 0xD00000000000002ALL);
    }
  }
  return v7;
}

uint64_t sub_1C0D95CE4(uint64_t a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  double v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t);
  uint64_t v17;

  v4 = sub_1C106C880();
  MEMORY[0x1E0C80A78](v4);
  v5 = sub_1C106AB28();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1C106C85C();
  v10 = MEMORY[0x1E0C80A78](v9);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v6 + 16))(v8, a1, v5, v10);
  v12 = a2[3];
  v11 = a2[4];
  sub_1C07A9480(a2, v12);
  (*(void (**)(uint64_t, uint64_t))(v11 + 88))(v12, v11);
  v13 = a2[3];
  v14 = a2[4];
  sub_1C07A9480(a2, v13);
  v15 = *(void (**)(uint64_t, uint64_t))(v14 + 80);
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  v15(v13, v14);
  sub_1C106C850();
  sub_1C106C844();
  swift_allocObject();
  return sub_1C106C7F0();
}

uint64_t sub_1C0D95E98(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  BOOL v7;
  BOOL v8;
  BOOL v9;
  char v10;

  v2 = a1 == 0x646F636E45657375 && a2 == 0xEA00000000007265;
  if (v2 || (sub_1C1070CB4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x506564756C636E69 && a2 == 0xEE0064616F6C7961;
    if (v6 || (sub_1C1070CB4() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      v7 = a1 == 0x6E69646465626D65 && a2 == 0xEF6E6D756C6F4367;
      if (v7 || (sub_1C1070CB4() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else if (a1 == 0xD000000000000017 && a2 == 0x80000001C10E9B60 || (sub_1C1070CB4() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 3;
      }
      else
      {
        v8 = a1 == 0x6D756C6F4379656BLL && a2 == 0xEA0000000000736ELL;
        if (v8 || (sub_1C1070CB4() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 4;
        }
        else if (a1 == 0xD000000000000017 && a2 == 0x80000001C110BD60 || (sub_1C1070CB4() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 5;
        }
        else
        {
          v9 = a1 == 0x6E69646465626D65 && a2 == 0xEF6769666E6F4367;
          if (v9 || (sub_1C1070CB4() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 6;
          }
          else if (a1 == 0xD00000000000001ALL && a2 == 0x80000001C110B8A0)
          {
            swift_bridgeObjectRelease();
            return 7;
          }
          else
          {
            v10 = sub_1C1070CB4();
            swift_bridgeObjectRelease();
            if ((v10 & 1) != 0)
              return 7;
            else
              return 8;
          }
        }
      }
    }
  }
}

uint64_t sub_1C0D96220(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1C0D96258 + 4 * byte_1C10BBE70[a1]))(0x646F636E45657375, 0xEA00000000007265);
}

uint64_t sub_1C0D96258()
{
  return 0x506564756C636E69;
}

uint64_t sub_1C0D9627C()
{
  return 0x6E69646465626D65;
}

unint64_t sub_1C0D962F4()
{
  return 0xD00000000000001ALL;
}

uint64_t sub_1C0D96314()
{
  unsigned __int8 *v0;

  return sub_1C0D96220(*v0);
}

uint64_t sub_1C0D9631C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1C0D95E98(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C0D96340()
{
  sub_1C0D965BC();
  return sub_1C1070EE8();
}

uint64_t sub_1C0D96368()
{
  sub_1C0D965BC();
  return sub_1C1070EF4();
}

void VectorDB.Config.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;

  sub_1C07ACF80(&qword_1EF649F60);
  sub_1C0778688();
  MEMORY[0x1E0C80A78](v4);
  sub_1C07A9480(a1, a1[3]);
  sub_1C0D965BC();
  sub_1C078D65C();
  sub_1C0793398();
  if (!v1)
  {
    sub_1C0793398();
    sub_1C07A043C(2);
    sub_1C07A043C(3);
    sub_1C07ACF80(&qword_1ED760108);
    sub_1C0D96A54((uint64_t)&qword_1EF6339C0);
    sub_1C07916A4();
    sub_1C1070BB8();
    sub_1C0D965F8();
    sub_1C0775C5C();
    sub_1C0790AEC();
    sub_1C07AAAF8();
    sub_1C07FD5C4((uint64_t)&unk_1EF649F70);
    sub_1C0775C5C();
    sub_1C07ACF80(&qword_1ED762B70);
    sub_1C0D96B58((uint64_t)&qword_1ED7560B8);
    sub_1C07916A4();
    sub_1C1070B64();
  }
  sub_1C078C76C(*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  sub_1C0797DE0();
}

unint64_t sub_1C0D965BC()
{
  unint64_t result;

  result = qword_1ED756548;
  if (!qword_1ED756548)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10BC12C, &type metadata for VectorDB.Config.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED756548);
  }
  return result;
}

unint64_t sub_1C0D965F8()
{
  unint64_t result;

  result = qword_1EF649F68;
  if (!qword_1EF649F68)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10BC104, &unk_1E7A33140);
    atomic_store(result, (unint64_t *)&qword_1EF649F68);
  }
  return result;
}

uint64_t type metadata accessor for VectorDB.Config(uint64_t a1)
{
  return sub_1C0784B00(a1, (uint64_t *)&unk_1ED761890);
}

uint64_t type metadata accessor for VectorDB.EmbeddingConfig(uint64_t a1)
{
  return sub_1C0784B00(a1, (uint64_t *)&unk_1ED761878);
}

void VectorDB.Config.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;

  sub_1C077AE5C();
  v3 = v2;
  sub_1C07ACF80(&qword_1ED756510);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v4);
  sub_1C07795DC();
  v11 = sub_1C07ACF80((uint64_t *)&unk_1ED756590);
  MEMORY[0x1E0C80A78](v11);
  v5 = sub_1C078A2EC();
  v12 = type metadata accessor for VectorDB.Config(v5);
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v6);
  sub_1C077AE40();
  v8 = v7;
  sub_1C07A9480(v3, v3[3]);
  sub_1C0D965BC();
  sub_1C1070E94();
  if (v0)
  {
    sub_1C077D090();
  }
  else
  {
    *(_BYTE *)v8 = sub_1C1070AB0() & 1;
    LOBYTE(v13) = 1;
    *(_BYTE *)(v8 + 1) = sub_1C1070AB0() & 1;
    *(_QWORD *)(v8 + 8) = sub_1C07A5844(2);
    *(_QWORD *)(v8 + 16) = v9;
    *(_QWORD *)(v8 + 24) = sub_1C07A5844(3);
    *(_QWORD *)(v8 + 32) = v10;
    sub_1C07ACF80(&qword_1ED760108);
    sub_1C0D96A54((uint64_t)&qword_1ED760110);
    sub_1C07A343C();
    sub_1C1070AE0();
    *(_QWORD *)(v8 + 40) = v13;
    sub_1C0D96AD4();
    sub_1C1070A8C();
    *(_OWORD *)(v8 + 48) = v13;
    *(_QWORD *)(v8 + 64) = v14;
    sub_1C07AAAF8();
    LOBYTE(v13) = 6;
    sub_1C07FD5C4((uint64_t)&unk_1ED756508);
    sub_1C07A343C();
    sub_1C1070A8C();
    sub_1C0D96B10(v1, v8 + *(int *)(v12 + 40));
    sub_1C07ACF80(&qword_1ED762B70);
    sub_1C0D96B58((uint64_t)&qword_1ED762B78);
    sub_1C1070A8C();
    sub_1C0785270();
    *(_QWORD *)(v8 + *(int *)(v12 + 44)) = v13;
    sub_1C078A13C(v8);
    sub_1C077D090();
    sub_1C07B1F90(v8, type metadata accessor for VectorDB.Config);
  }
  sub_1C07757D0();
}

unint64_t sub_1C0D96A54(uint64_t a1)
{
  unint64_t *v1;
  unint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  result = sub_1C0780FEC(a1);
  if (!result)
  {
    v5 = v4;
    v6 = v3;
    v7 = sub_1C07D4BEC(&qword_1ED760108);
    sub_1C07FD5C4(v6);
    v9 = v8;
    result = MEMORY[0x1C3BA8174](v5, v7, &v9);
    atomic_store(result, v1);
  }
  return result;
}

unint64_t sub_1C0D96AD4()
{
  unint64_t result;

  result = qword_1ED756540;
  if (!qword_1ED756540)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10BC0B4, &unk_1E7A33140);
    atomic_store(result, (unint64_t *)&qword_1ED756540);
  }
  return result;
}

uint64_t sub_1C0D96B10(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1C07ACF80(&qword_1ED756510);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1C0D96B58(uint64_t a1)
{
  if (!sub_1C0780FEC(a1))
  {
    sub_1C07D4BEC(&qword_1ED762B70);
    sub_1C079CB7C();
  }
  sub_1C0776784();
}

uint64_t sub_1C0D96BA4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for VectorDB.Config(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C0D96BE8(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v7;

  v2 = a1 == 0x6E69646465626D65 && a2 == 0xEE006C65646F4D67;
  if (v2 || (sub_1C1070CB4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7261506C65646F6DLL && a2 == 0xEF73726574656D61)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v7 = sub_1C1070CB4();
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1C0D96D1C(char a1)
{
  if ((a1 & 1) != 0)
    return 0x7261506C65646F6DLL;
  else
    return 0x6E69646465626D65;
}

void sub_1C0D96D6C()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;

  sub_1C077AE5C();
  v3 = v2;
  sub_1C07ACF80(&qword_1EF649F80);
  sub_1C0785044();
  MEMORY[0x1E0C80A78](v4);
  sub_1C0778544();
  sub_1C07A9480(v3, v3[3]);
  sub_1C0D986A8();
  sub_1C1070EB8();
  sub_1C07A8844();
  sub_1C1070B7C();
  if (!v0)
  {
    sub_1C07ACF80(&qword_1ED762410);
    sub_1C0D98720((uint64_t)&qword_1ED75D0A8);
    sub_1C07A8844();
    sub_1C1070B64();
  }
  sub_1C078C76C(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  sub_1C07757D0();
}

uint64_t sub_1C0D96E8C(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  sub_1C07ACF80(&qword_1ED756588);
  sub_1C0778688();
  MEMORY[0x1E0C80A78](v3);
  sub_1C07795DC();
  v4 = a1[4];
  sub_1C07A9480(a1, a1[3]);
  sub_1C0D986A8();
  sub_1C1070E94();
  if (v1)
  {
    sub_1C0775880();
  }
  else
  {
    v4 = sub_1C1070AA4();
    sub_1C07ACF80(&qword_1ED762410);
    sub_1C0D98720((uint64_t)&qword_1ED762418);
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    sub_1C1070A8C();
    sub_1C0790798();
    sub_1C077AE90();
    sub_1C0775880();
    swift_bridgeObjectRelease();
    sub_1C077589C();
  }
  return v4;
}

uint64_t sub_1C0D97014(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6F69736E656D6964 && a2 == 0xE90000000000006ELL;
  if (v2 || (sub_1C1070CB4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001C110BD80)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1C1070CB4();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1C0D9710C(char a1)
{
  if ((a1 & 1) != 0)
    return 0xD000000000000010;
  else
    return 0x6F69736E656D6964;
}

void sub_1C0D9714C(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;

  sub_1C07ACF80(&qword_1EF649F88);
  sub_1C0778688();
  MEMORY[0x1E0C80A78](v4);
  sub_1C07A9480(a1, a1[3]);
  sub_1C0D986E4();
  sub_1C078D65C();
  sub_1C07A8844();
  sub_1C1070BAC();
  if (!v1)
  {
    sub_1C07AAAF8();
    sub_1C106C8B0();
    sub_1C07FD5C4((uint64_t)&unk_1EF649F98);
    sub_1C07A8844();
    sub_1C1070BB8();
  }
  sub_1C078C76C(*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  sub_1C0797DE0();
}

void sub_1C0D97264()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  sub_1C077AE5C();
  v2 = v1;
  v19 = v3;
  v22 = sub_1C106C8B0();
  v20 = *(_QWORD *)(v22 - 8);
  MEMORY[0x1E0C80A78](v22);
  sub_1C077AE40();
  v21 = v4;
  v23 = sub_1C07ACF80(&qword_1EF649FA0);
  sub_1C0778688();
  MEMORY[0x1E0C80A78](v5);
  v6 = sub_1C07AAAF8();
  sub_1C077C078();
  MEMORY[0x1E0C80A78](v7);
  v9 = (uint64_t *)((char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1C07A9480(v2, v2[3]);
  sub_1C0D986E4();
  sub_1C1070E94();
  if (!v0)
  {
    v18 = v6;
    v11 = v21;
    v10 = v22;
    v12 = sub_1C1070AD4();
    v17 = v9;
    *v9 = v12;
    sub_1C07FD5C4((uint64_t)&unk_1EF649FA8);
    v13 = v10;
    sub_1C1070AE0();
    sub_1C079C930();
    v14 = v19;
    v15 = (uint64_t)v17;
    (*(void (**)(char *, uint64_t, uint64_t))(v20 + 32))((char *)v17 + *(int *)(v18 + 20), v11, v13);
    sub_1C0D9876C(v15, v14);
  }
  _s24IntelligencePlatformCore19StoredLocationVisitVwxx_0((uint64_t)v2);
  sub_1C07757D0();
}

void sub_1C0D9743C()
{
  VectorDB.Config.init(from:)();
}

void sub_1C0D97450(_QWORD *a1)
{
  VectorDB.Config.encode(to:)(a1);
}

void type metadata accessor for VectorDB()
{
  sub_1C0779604();
}

uint64_t sub_1C0D97470()
{
  return type metadata accessor for VectorDB.EmbeddingDatabase(0);
}

uint64_t type metadata accessor for VectorDB.EmbeddingDatabase(uint64_t a1)
{
  return sub_1C0784B00(a1, (uint64_t *)&unk_1ED756518);
}

uint64_t sub_1C0D9748C()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for VectorDB.Config(319);
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

_QWORD *initializeBufferWithCopyOfBuffer for VectorDB.Config(_WORD *a1, _QWORD *a2, uint64_t a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *a1 = *(_WORD *)a2;
    v7 = a2[2];
    v4[1] = a2[1];
    v4[2] = v7;
    v8 = a2[4];
    v4[3] = a2[3];
    v4[4] = v8;
    v4[5] = a2[5];
    v9 = a2[7];
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    if (v9)
    {
      v4[6] = a2[6];
      v4[7] = v9;
      v4[8] = a2[8];
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    }
    else
    {
      *((_OWORD *)v4 + 3) = *((_OWORD *)a2 + 3);
      v4[8] = a2[8];
    }
    v11 = *(int *)(a3 + 40);
    v12 = (_QWORD *)((char *)v4 + v11);
    v13 = (_QWORD *)((char *)a2 + v11);
    v14 = type metadata accessor for VectorDB.EmbeddingConfig(0);
    if (sub_1C07B2D80((uint64_t)v13, 1, v14))
    {
      v15 = sub_1C07ACF80(&qword_1ED756510);
      memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
    else
    {
      *v12 = *v13;
      v16 = *(int *)(v14 + 20);
      v17 = (char *)v12 + v16;
      v18 = (char *)v13 + v16;
      v19 = sub_1C106C8B0();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
      sub_1C07B2D8C((uint64_t)v12, 0, 1, v14);
    }
    *(_QWORD *)((char *)v4 + *(int *)(a3 + 44)) = *(_QWORD *)((char *)a2 + *(int *)(a3 + 44));
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  }
  return v4;
}

uint64_t destroy for VectorDB.Config(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 56))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  v4 = a1 + *(int *)(a2 + 40);
  v5 = type metadata accessor for VectorDB.EmbeddingConfig(0);
  if (!sub_1C07B2D80(v4, 1, v5))
  {
    v6 = v4 + *(int *)(v5 + 20);
    v7 = sub_1C106C8B0();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  }
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for VectorDB.Config(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;

  *(_WORD *)a1 = *(_WORD *)a2;
  v6 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v6;
  v7 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  v8 = *(_QWORD *)(a2 + 56);
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  if (v8)
  {
    *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
    *(_QWORD *)(a1 + 56) = v8;
    *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  }
  else
  {
    *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
    *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  }
  v9 = *(int *)(a3 + 40);
  v10 = (_QWORD *)(a1 + v9);
  v11 = (_QWORD *)(a2 + v9);
  v12 = type metadata accessor for VectorDB.EmbeddingConfig(0);
  if (sub_1C07B2D80((uint64_t)v11, 1, v12))
  {
    v13 = sub_1C07ACF80(&qword_1ED756510);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    *v10 = *v11;
    v14 = *(int *)(v12 + 20);
    v15 = (char *)v10 + v14;
    v16 = (char *)v11 + v14;
    v17 = sub_1C106C8B0();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v15, v16, v17);
    sub_1C07B2D8C((uint64_t)v10, 0, 1, v12);
  }
  *(_QWORD *)(a1 + *(int *)(a3 + 44)) = *(_QWORD *)(a2 + *(int *)(a3 + 44));
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  return a1;
}

uint64_t assignWithCopy for VectorDB.Config(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _OWORD *v6;
  _OWORD *v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  int v15;
  int v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_BYTE *)(a1 + 1) = *(_BYTE *)(a2 + 1);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  swift_bridgeObjectRelease();
  v6 = (_OWORD *)(a1 + 48);
  v7 = (_OWORD *)(a2 + 48);
  v8 = *(_QWORD *)(a2 + 56);
  if (*(_QWORD *)(a1 + 56))
  {
    if (v8)
    {
      *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
      *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
      _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1C0D97B0C(a1 + 48);
      v9 = *(_QWORD *)(a2 + 64);
      *v6 = *v7;
      *(_QWORD *)(a1 + 64) = v9;
    }
  }
  else if (v8)
  {
    *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
    *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
    *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
    _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  }
  else
  {
    v10 = *v7;
    *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
    *v6 = v10;
  }
  v11 = *(int *)(a3 + 40);
  v12 = (_QWORD *)(a1 + v11);
  v13 = (_QWORD *)(a2 + v11);
  v14 = type metadata accessor for VectorDB.EmbeddingConfig(0);
  v15 = sub_1C07B2D80((uint64_t)v12, 1, v14);
  v16 = sub_1C07B2D80((uint64_t)v13, 1, v14);
  if (!v15)
  {
    if (!v16)
    {
      *v12 = *v13;
      v23 = *(int *)(v14 + 20);
      v24 = (char *)v12 + v23;
      v25 = (char *)v13 + v23;
      v26 = sub_1C106C8B0();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 24))(v24, v25, v26);
      goto LABEL_14;
    }
    sub_1C07B1F90((uint64_t)v12, type metadata accessor for VectorDB.EmbeddingConfig);
    goto LABEL_13;
  }
  if (v16)
  {
LABEL_13:
    v21 = sub_1C07ACF80(&qword_1ED756510);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    goto LABEL_14;
  }
  *v12 = *v13;
  v17 = *(int *)(v14 + 20);
  v18 = (char *)v12 + v17;
  v19 = (char *)v13 + v17;
  v20 = sub_1C106C8B0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v18, v19, v20);
  sub_1C07B2D8C((uint64_t)v12, 0, 1, v14);
LABEL_14:
  *(_QWORD *)(a1 + *(int *)(a3 + 44)) = *(_QWORD *)(a2 + *(int *)(a3 + 44));
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1C0D97B0C(uint64_t a1)
{
  destroy for HumanReadableFeaturizedBehaviorsGroup();
  return a1;
}

uint64_t initializeWithTake for VectorDB.Config(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;

  *(_WORD *)a1 = *(_WORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  v6 = *(_OWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  v7 = *(int *)(a3 + 40);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *(_OWORD *)(a1 + 48) = v6;
  v10 = type metadata accessor for VectorDB.EmbeddingConfig(0);
  if (sub_1C07B2D80((uint64_t)v9, 1, v10))
  {
    v11 = sub_1C07ACF80(&qword_1ED756510);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    *v8 = *v9;
    v12 = *(int *)(v10 + 20);
    v13 = (char *)v8 + v12;
    v14 = (char *)v9 + v12;
    v15 = sub_1C106C8B0();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v13, v14, v15);
    sub_1C07B2D8C((uint64_t)v8, 0, 1, v10);
  }
  *(_QWORD *)(a1 + *(int *)(a3 + 44)) = *(_QWORD *)(a2 + *(int *)(a3 + 44));
  return a1;
}

uint64_t assignWithTake for VectorDB.Config(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  int v13;
  int v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_BYTE *)(a1 + 1) = *(_BYTE *)(a2 + 1);
  v6 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v7;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 56))
  {
    v8 = *(_QWORD *)(a2 + 56);
    if (v8)
    {
      *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
      *(_QWORD *)(a1 + 56) = v8;
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    sub_1C0D97B0C(a1 + 48);
  }
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
LABEL_6:
  v9 = *(int *)(a3 + 40);
  v10 = (_QWORD *)(a1 + v9);
  v11 = (_QWORD *)(a2 + v9);
  v12 = type metadata accessor for VectorDB.EmbeddingConfig(0);
  v13 = sub_1C07B2D80((uint64_t)v10, 1, v12);
  v14 = sub_1C07B2D80((uint64_t)v11, 1, v12);
  if (!v13)
  {
    if (!v14)
    {
      *v10 = *v11;
      v21 = *(int *)(v12 + 20);
      v22 = (char *)v10 + v21;
      v23 = (char *)v11 + v21;
      v24 = sub_1C106C8B0();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 40))(v22, v23, v24);
      goto LABEL_12;
    }
    sub_1C07B1F90((uint64_t)v10, type metadata accessor for VectorDB.EmbeddingConfig);
    goto LABEL_11;
  }
  if (v14)
  {
LABEL_11:
    v19 = sub_1C07ACF80(&qword_1ED756510);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    goto LABEL_12;
  }
  *v10 = *v11;
  v15 = *(int *)(v12 + 20);
  v16 = (char *)v10 + v15;
  v17 = (char *)v11 + v15;
  v18 = sub_1C106C8B0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
  sub_1C07B2D8C((uint64_t)v10, 0, 1, v12);
LABEL_12:
  *(_QWORD *)(a1 + *(int *)(a3 + 44)) = *(_QWORD *)(a2 + *(int *)(a3 + 44));
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for VectorDB.Config()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1C0D97E38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 16);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_1C07ACF80(&qword_1ED756510);
    return sub_1C07B2D80(a1 + *(int *)(a3 + 40), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for VectorDB.Config()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1C0D97EBC(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 16) = (a2 - 1);
  }
  else
  {
    v7 = sub_1C07ACF80(&qword_1ED756510);
    return sub_1C07B2D8C(v5 + *(int *)(a4 + 40), a2, a2, v7);
  }
  return result;
}

void sub_1C0D97F2C()
{
  unint64_t v0;

  sub_1C0D97FCC();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

void sub_1C0D97FCC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED761888)
  {
    type metadata accessor for VectorDB.EmbeddingConfig(255);
    v0 = sub_1C1070564();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED761888);
  }
}

uint64_t *sub_1C0D98020(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  int v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;

  v3 = a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v9 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v9 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *a1 = *a2;
    v5 = *(int *)(a3 + 20);
    v6 = (char *)a1 + v5;
    v7 = (char *)a2 + v5;
    v8 = sub_1C106C8B0();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(v6, v7, v8);
  }
  return v3;
}

uint64_t sub_1C0D980A8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = a1 + *(int *)(a2 + 20);
  v3 = sub_1C106C8B0();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
}

_QWORD *sub_1C0D980E0(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_1C106C8B0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v5, v6, v7);
  return a1;
}

_QWORD *sub_1C0D9813C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_1C106C8B0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 24))(v5, v6, v7);
  return a1;
}

_QWORD *sub_1C0D98198(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_1C106C8B0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

_QWORD *sub_1C0D981F4(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_1C106C8B0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 40))(v5, v6, v7);
  return a1;
}

uint64_t sub_1C0D98250()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1C0D9825C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;

  v4 = sub_1C077B3E8();
  return sub_1C07B2D80(v2, a2, v4);
}

uint64_t sub_1C0D9828C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1C0D98298(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;

  v4 = sub_1C077B3E8();
  return sub_1C07B2D8C(v2, a2, a2, v4);
}

uint64_t sub_1C0D982CC()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1C106C8B0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

_QWORD *sub_1C0D98344(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  _s24IntelligencePlatformCore12PhaseBuilderO10buildBlockySayAA0D4Base_pGAFFZ_0();
  swift_bridgeObjectRelease();
  return a1;
}

void type metadata accessor for VectorDB.EmbeddingProviderConfig()
{
  sub_1C0779604();
}

uint64_t storeEnumTagSinglePayload for VectorDB.Config.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 7 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 7) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF9)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF8)
    return ((uint64_t (*)(void))((char *)&loc_1C0D98400 + 4 * byte_1C10BBE7D[v4]))();
  *a1 = a2 + 7;
  return ((uint64_t (*)(void))((char *)sub_1C0D98434 + 4 * byte_1C10BBE78[v4]))();
}

uint64_t sub_1C0D98434(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C0D9843C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C0D98444);
  return result;
}

uint64_t sub_1C0D98450(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C0D98458);
  *(_BYTE *)result = a2 + 7;
  return result;
}

uint64_t sub_1C0D9845C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C0D98464(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for VectorDB.Config.CodingKeys()
{
  return &type metadata for VectorDB.Config.CodingKeys;
}

unint64_t sub_1C0D98484()
{
  unint64_t result;

  result = qword_1EF649F78;
  if (!qword_1EF649F78)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10BC064, &type metadata for VectorDB.Config.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF649F78);
  }
  return result;
}

uint64_t sub_1C0D984C0()
{
  char *v0;

  return sub_1C0D96D1C(*v0);
}

uint64_t sub_1C0D984C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1C0D96BE8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C0D984EC()
{
  sub_1C0D986A8();
  return sub_1C1070EE8();
}

uint64_t sub_1C0D98514()
{
  sub_1C0D986A8();
  return sub_1C1070EF4();
}

uint64_t sub_1C0D9853C@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;

  result = sub_1C0D96E8C(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
    a2[2] = v6;
  }
  return result;
}

void sub_1C0D98568()
{
  sub_1C0D96D6C();
}

uint64_t sub_1C0D98584()
{
  char *v0;

  return sub_1C0D9710C(*v0);
}

uint64_t sub_1C0D9858C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1C0D97014(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C0D985B0()
{
  sub_1C0D986E4();
  return sub_1C1070EE8();
}

uint64_t sub_1C0D985D8()
{
  sub_1C0D986E4();
  return sub_1C1070EF4();
}

void sub_1C0D98600()
{
  sub_1C0D97264();
}

void sub_1C0D98614(_QWORD *a1)
{
  sub_1C0D9714C(a1);
}

unint64_t sub_1C0D9862C()
{
  unint64_t result;

  result = qword_1ED756558;
  if (!qword_1ED756558)
  {
    result = MEMORY[0x1C3BA8174](&unk_1C10BBFD4, &type metadata for VectorDB.Config.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED756558);
  }
  return result;
}

